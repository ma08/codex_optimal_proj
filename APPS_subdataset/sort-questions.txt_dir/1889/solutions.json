["from functools import reduce\n class Solution:\n     def smallestRange(self, nums):\n         \"\"\"\n         :type nums: List[List[int]]\n         :rtype: List[int]\n         \"\"\"\n         k = len(nums)\n         idx = [0]*k\n         \n         dic = collections.defaultdict(list)\n         \n         for i in range(k):\n             dic[nums[i][0]].append(i)\n         \n         mi, ma = min(dic.keys()), max(dic.keys())\n         \n         ret = (mi, ma)\n         while True:\n             for i in dic[mi]:\n                 idx[i] += 1\n                 if idx[i]==len(nums[i]):\n                     return ret\n                 dic[nums[i][idx[i]]].append(i)\n             dic.pop(mi)\n             mi, ma = min(dic.keys()), max(dic.keys())\n             if ma-mi<ret[1]-ret[0]:\n                 ret = (mi, ma)\n         "]