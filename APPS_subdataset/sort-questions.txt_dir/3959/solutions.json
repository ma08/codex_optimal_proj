["def max_sum(arr, ranges):\n    return max( sum(arr[start:stop+1]) for start, stop in ranges )", "from itertools import accumulate\n\ndef max_sum(arr, ranges): \n    xs = list(accumulate(arr)) + [0]\n    return max(xs[j] - xs[i-1] for i, j in ranges)", "def max_sum(arr,ranges): \n    return max(sum(arr[start:end+1]) for start, end in ranges)", "def max_sum(lst, ranges): \n    return max(sum(lst[i:j+1]) for i, j in ranges)", "def max_sum(arr, ranges): \n    return max(sum(arr[a:b + 1]) for a, b in ranges)", "def max_sum(arr,ranges): \n    x = [sum([arr[i] for i in range(R[0], R[1]+1)]) for R in ranges]\n    return max(x)", "def max_sum(arr, ranges):\n    return max(sum(arr[p[0]:p[1] + 1]) for p in ranges) if ranges else 0\n", "def max_sum(arr,ranges): \n    results=[]\n    \n    for r in ranges:\n        partialSum=0\n        for j in range(r[0],r[1]+1):\n            partialSum+=arr[j]\n        results.append(partialSum)\n\n    return max(results)", "def max_sum(arr,ranges): \n    return max([sum([arr[b] for b in range(i[0],i[1]+1)]) for i in ranges])\n\n    \n\n\n", "def max_sum(arr,ranges): \n    st=[]\n    for i in ranges:\n        p=0\n        for j in range(i[0],i[1]+1):\n            p+=arr[j]\n        st.append(p)\n    return max(st)"]