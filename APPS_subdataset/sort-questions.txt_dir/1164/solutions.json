["p,s = [int(i) for i in input().split()]\nscores = {}\n\nfor j in range(1, p + 1):\n sc = [int(i) for i in input().split()]\n ns = [int(i) for i in input().split()]\n nsc = dict(list(zip(sc,ns)))\n ssc = sorted(sc)\n score = 0\n for a,b in zip(ssc[:-1], ssc[1:]):\n  if nsc[a] > nsc[b]:\n   score += 1\n if score in list(scores.keys()) :\n  scores[score].append(j)\n else :\n  scores[score] = [j]\n\ntotal_scores = sorted(list(scores.keys()))\nfinal_list = []\nfor val in total_scores :\n final_list += sorted(scores[val])\n\nfor val in final_list :\n print(val)\n", "p,s = [int(i) for i in input().split()]\nscores = {}\n\nfor j in range(1, p + 1):\n sc = [int(i) for i in input().split()]\n ns = [int(i) for i in input().split()]\n nsc = dict(list(zip(sc,ns)))\n ssc = sorted(sc)\n score = 0\n for a,b in zip(ssc[:-1], ssc[1:]):\n  if nsc[a] > nsc[b]:\n   score += 1\n if score in list(scores.keys()) :\n  scores[score].append(j)\n else :\n  scores[score] = [j]\n\ntotal_scores = sorted(list(scores.keys()))\nfinal_list = []\nfor val in total_scores :\n final_list += sorted(scores[val])\n\nfor val in final_list :\n print(val)\n", "# cook your dish here\np,s = [int(i) for i in input().split()]\nscores = {}\n\nfor j in range(1, p + 1):\n sc = [int(i) for i in input().split()]\n ns = [int(i) for i in input().split()]\n nsc = dict(zip(sc,ns))\n ssc = sorted(sc)\n score = 0\n for a,b in zip(ssc[:-1], ssc[1:]):\n  if nsc[a] > nsc[b]:\n   score += 1\n if score in scores.keys() :\n  scores[score].append(j)\n else :\n  scores[score] = [j]\n\ntotal_scores = sorted(list(scores.keys()))\nfinal_list = []\nfor val in total_scores :\n final_list += sorted(scores[val])\n\nfor val in final_list :\n print(val)", "# cook your dish here\n\np , s = list(map(int,input().split()))\n\nnvalues = []\n\nfor i in range(p) :\n \n difficult = [0,0]\n \n n = 0\n \n sc = list(map(int,input().split()))\n \n \n ns = list(map(int,input().split()))\n \n a = list(zip(sc,ns))\n \n a.sort()\n \n for j in range(s-1) :\n  \n  if(a[j][1] > a[j+1][1]) :\n   \n   n = n + 1 \n   \n difficult[0] = n \n \n difficult[1] = i \n \n nvalues.append(difficult)\n \nnvalues.sort(key = lambda x: x[0])\n \nfor j in range(p) :\n \n print(nvalues[j][1] + 1)\n\n\n \n \n   \n \n \n", "# cook your dish here\np,s=[int(i) for i in input().split()]\nl=[]\nfor j in range(p):\n l1=[int(i) for i in input().split()]\n l2=[int(i) for i in input().split()]\n l3=[[l1[i],l2[i]] for i in range(s)]\n l3.sort()\n count=0\n for i in range(s-1):\n  if(l3[i][1]>l3[i+1][1]):\n   count+=1 \n l.append([count,j+1])\nl.sort()\nfor i in l:\n print(i[1])\n \n", "from collections import defaultdict\nx,y=list(map(int,input().split()))\nm=[]\np=defaultdict(list)\nfor __ in range(x):\n a=list(map(int,input().split()))\n b=list(map(int,input().split()))\n c=defaultdict()\n for i in range(y):\n  c[a[i]]=b[i]\n a.sort()\n d=[]\n for i in range(y):\n  d.append(c[a[i]])\n n=0\n for i in range(1,y):\n  if d[i]<d[i-1]:\n   n+=1\n m.append(n)\n p[n].append(__ + 1)\nm.sort()\nm=list(set(m))\nfor i in m:\n if len(p[i])>1:\n  p[i].sort()\n  for j in p[i]:\n   print(j)\n else:    \n  print(*p[i])\n", "p,s = map(int,input().split())\nl = []\nfor i in range(p):\n ns = list(map(int,input().split()))\n n = list(map(int,input().split()))\n a = list(zip(ns,n))\n a.sort()\n count = 0\n for j in range(len(a) - 1):\n  if(a[j][1] > a[j + 1][1]):\n   count += 1\n l.append((i,count))\nl.sort(key=lambda x:x[1])\nfor i in range(p):\n print(l[i][0] + 1)", "from collections import defaultdict\nfrom operator import itemgetter\n\np, s = list(map(int, input().split()))\n\ndiff = []\nfor _ in range(p):\n sc = list(map(int, input().split()))\n nk = list(map(int, input().split()))\n\n arr = list(zip(sc, nk))\n\n arr_sort = sorted(arr, key = itemgetter(0))\n # print(arr)\n temp = 0\n for i in range(s-1):\n  if arr_sort[i][1] > arr_sort[i+1][1]:\n   temp += 1\n a = (temp, _+1)\n diff.append(a)\n\ntemp = diff[:]\ntemp.sort(key=lambda x: x[0])\n\n\nfor i in temp:\n print(i[1])\n", "from collections import defaultdict\nfrom operator import itemgetter\n\np, s = map(int, input().split())\n\ndiff = []\nfor _ in range(p):\n sc = list(map(int, input().split()))\n nk = list(map(int, input().split()))\n\n arr_sort = list(zip(sc, nk))\n\n arr_sort.sort(key=lambda x: x[0])\n \n temp = 0\n for i in range(s-1):\n  if arr_sort[i][1] > arr_sort[i+1][1]:\n   temp += 1\n a = [temp, _+1]\n diff.append(a)\n\ndiff = sorted(diff, key = lambda x: x[0])\n\nfor i in diff:\n print(i[1])", "from collections import defaultdict\nfrom operator import itemgetter\n\np, s = map(int, input().split())\n\ndiff = []\nfor _ in range(p):\n sc = list(map(int, input().split()))\n nk = list(map(int, input().split()))\n\n arr = list(zip(sc, nk))\n\n arr_sort = sorted(arr, key = lambda x: x[0])\n \n temp = 0\n for i in range(s-1):\n  if arr_sort[i][1] > arr_sort[i+1][1]:\n   temp += 1\n a = [temp, _+1]\n diff.append(a)\ntemp = diff[:]\n\n# temp = [(1, 2),(1, 1),(2, 1),(2, 3)]\ntemp.sort(key=lambda x: (x[0], x[1]))\n\ndiff = sorted(diff, key = lambda x: x[0])\n\nfor i in diff:\n print(i[1])", "from collections import defaultdict\nfrom operator import itemgetter\n\np, s = list(map(int, input().split()))\n\ndiff = []\nfor _ in range(p):\n sc = list(map(int, input().split()))\n nk = list(map(int, input().split()))\n\n arr = list(zip(sc, nk))\n\n arr_sort = sorted(arr, key = itemgetter(0))\n # print(arr)\n temp = 0\n for i in range(s-1):\n  if arr_sort[i][1] > arr_sort[i+1][1]:\n   temp += 1\n a = [temp, _+1]\n diff.append(a)\ntemp = diff[:]\n\n# temp = [(1, 2),(1, 1),(2, 1),(2, 3)]\ntemp.sort(key=lambda x: (x[0], x[1]))\n\n# print(temp)\n'''\nt = 1\nd = defaultdict\nfor i in temp:\n    d[i] = t\n    t += 1\n'''\ndiff = sorted(diff, key = lambda x: x[0])\n\nfor i in diff:\n print(i[1])\n'''\nv1=sorted(diff,key = itemgetter(0))\nfor i in v1:\n    print(i[1])\n    '''\n", "from collections import defaultdict\nfrom operator import itemgetter\n\np, s = map(int, input().split())\n\ndiff = []\nfor _ in range(p):\n sc = list(map(int, input().split()))\n nk = list(map(int, input().split()))\n\n arr = zip(sc, nk)\n\n arr_sort = sorted(arr, key = itemgetter(0))\n # print(arr)\n temp = 0\n for i in range(s-1):\n  if arr_sort[i][1] > arr_sort[i+1][1]:\n   temp += 1\n a = [temp, _+1]\n diff.append(a)\n'''\ntemp = diff[:]\n\n# temp = [(1, 2),(1, 1),(2, 1),(2, 3)]\ntemp.sort(key=lambda x: (x[0], x[1]))\n\n# print(temp)\n\nt = 1\nd = defaultdict(int)\nfor i in temp:\n    d[i] = t\n    t += 1\n\nfor i in diff:\n    print(d[i])\n'''\nv1=sorted(diff,key = itemgetter(0))\nfor i in v1:\n print(i[1])", "import copy\n\ndef compute_problem_difficulty(problem,S):\n\n difficulty=0\n\n for i in range(S-1):\n\n  if problem[i][1]>problem[i+1][1]:\n   difficulty+=1\n \n return difficulty\n\n\nP,S=list(map(int,input().split()))\nproblem_difficulty=[[] for _ in range(30)]\ni=0\n\nwhile i<P:\n subtasks_scores=list(map(int,input().split()))\n subtasks_num_of_contestants=list(map(int,input().split()))\n problem=[]\n\n for j in range(S):\n  problem.append([subtasks_scores[j],subtasks_num_of_contestants[j]])\n \n problem.sort()\n difficulty=compute_problem_difficulty(problem,S)\n problem_difficulty[difficulty].append(i+1)\n i+=1\n\nfor i in range(30):\n\n j=0\n while j<len(problem_difficulty[i]):\n  print(problem_difficulty[i][j])\n  j+=1", "from collections import *\nP,S=input().split()\nP=int(P)\nS=int(S)\nlist_of_dictionaries=[]\nfor _ in range(P):\n scores=input().split()\n number_of_contestants=input().split()\n scores=map(int,scores)\n number_of_contestants=map(int,number_of_contestants)\n dictionary=dict(zip(scores,number_of_contestants))\n dictionary = OrderedDict(sorted(dictionary.items()))\n list_of_dictionaries.append(dictionary)\nlist_of_difficulty_tuples=[]\nfor alpha in range(P):\n current_dictionary = list_of_dictionaries[alpha]\n old=-1\n n=0\n for v in current_dictionary.values():\n  if(old==-1):\n   old=v\n  else:\n   if(v<old):\n    n=n+1\n    old=v\n   else:\n    old=v\n list_of_difficulty_tuples.append((n,alpha+1))\nlist_of_difficulty_tuples = (sorted(list_of_difficulty_tuples))\nfor result in range(len(list_of_difficulty_tuples)):\n print(list_of_difficulty_tuples[result][1])", "'''stdin=open('input.txt')\ndef input():\n    return stdin.readline()[:-1]\n'''\np,s=input().split()\np=int(p)\ns=int(s)\nn=[0 for i in range(p)]\nfor prob in range(p):\n points=list(map(int,input().split()))\n nop=list(map(int,input().split()))\n for i in range(s):\n  nop[i]=[points[i],nop[i]]\n nop.sort()\n for i in range(s-1):\n  if nop[i][1]>nop[i+1][1]:\n   n[prob]+=1\n #print(nop)\n#print(n)\nfor i in range(p):\n n[i]=[n[i],i]\nn.sort()\n\nfor i in range(p):\n print(n[i][1]+1)\n", "'''stdin=open('input.txt')\ndef input():\n    return stdin.readline()[:-1]\n\n'''\np,s=input().split()\np=int(p)\ns=int(s)\nn=[0 for i in range(p)]\nfor prob in range(p):\n points=list(map(int,input().split()))\n nop=list(map(int,input().split()))\n for i in range(s):\n  nop[i]=[points[i],nop[i]]\n nop.sort()\n for i in range(s):\n  nop[i]=nop[i][1]\n sorted_nop=sorted(nop)\n n[prob]=0\n for i in range(s):\n  ind=sorted_nop.index(nop[i])\n  n[prob]+=ind\n  sorted_nop.pop(ind)\n\nfor i in range(p):\n n[i]=[n[i],i]\nn.sort()\n\nfor i in range(p):\n print(n[i][1]+1)\n", " #!/usr/bin/env python\n\"\"\"Python Version:3.7.1\"\"\"\n#start\nP, S = list(map(int, input().split()))\nCOUNT = [0] * 101010\nA = []\nB = []\nfor i in range(P):\n A = list(map(int, input().split()))\n B = list(map(int, input().split()))\n A, B = list(zip(*sorted(zip(A, B))))\n for X in range(S-1):\n  if B[X] > B[X+1]:\n   COUNT[i] += 1\nfor i in range(31):\n for j in range(P):\n  if COUNT[j] == i:\n   print(j+1)\n#end\n", " #!/usr/bin/env python\n\"\"\"Python Version:3.7.1\"\"\"\n#start\nP, S = list(map(int, input().split()))\nCOUNT = [0] * 101010\nA = []\nB = []\nfor i in range(P):\n A = list(map(int, input().split()))\n B = list(map(int, input().split()))\n A, B = list(zip(*sorted(zip(A, B))))\n for X in range(len(B)-1):\n  if B[X] > B[X+1]:\n   COUNT[i] += 1\nfor i in range(31):\n for j in range(P):\n  if COUNT[j] == i:\n   print(j+1)\n#end\n", "p,s=list(map(int,input().split()))\ncount=[0]*101010\na=[]\nb=[]\nfor i in range(p):\n a=list(map(int,input().split()))\n b=list(map(int,input().split()))\n a,b=list(zip(*sorted(zip(a,b))))\n for x in range(len(b)-1):\n  if(b[x]>b[x+1]):\n   count[i]+=1\nfor i in range(31):\n for j in range(p):\n  if(count[j]==i):\n   print(j+1)\n", "p, s = list(map(int, input().split()))\nsub = []\npro = []\nt = []\nfor i in range(p):\n sub.append(list(map(int, input().split())))\n pro.append(list(map(int, input().split())))\nfor i in range(p):\n t.append(list(zip(sub[i], pro[i])))\nindices = []\n\nfor a in t:\n a.sort(key = lambda x: x[0])\n m = 0\n n = 0\n while m != s-1:\n  if a[m][1] > a[m+1][1]:\n   n += 1\n  m += 1\n indices.append(n) \n\npb = [i+1 for i in range(p)]\nsol = list(zip(indices, pb))\nsol.sort()\nfor a in sol:\n print(a[1])\n\n\n\n\n\n\n\n\n\n", "P,S = list(map(int, input().split()))\nans = []\nfor index in range(P):\n SC = list(map(int, input().split()))\n NS = list(map(int, input().split()))\n mlist = []\n for i in zip(SC, NS):\n  mlist.append(i)\n mlist = sorted(mlist, key = lambda z : (z[0], z[1]), reverse = False)\n \n counter = 0\n for i in range(1, len(mlist)):\n  if mlist[i-1][1] > mlist[i][1]:\n   counter += 1\n ans.append((counter, index + 1))\n\nans = sorted(ans, key = lambda v: v[0], reverse = False)\nfor i in ans:\n print(i[1])\n", "p1,n1=list(map(int,input().split(\" \")))\nx1=list()\nj=\"0\"\nfor i in range(p1):\n a1=list(map(int,input().split(\" \")))\n b1=list(map(int,input().split(\" \"))) \n c=list()\n cx=0\n al=len(a1)\n for z in range(al):\n  c.append((a1[z],b1[z]))\n c=sorted(c,key=lambda x:x[0])\n ab=len(c)\n for z in range(ab-1):\n  if(c[z+1][1]<c[z][1]):\n   cx=cx+1\n x1.append((i,cx)) \nx1=sorted(x1,key=lambda x:x[1])\nfor i in range(len(x1)):\n print(x1[i][0] + 1)", "p,s=map(int,input().split())\ndiff=list()\nfor i in range(s):\n diff.append([])\nfor i in range(p):\n n=0\n c=list(map(int,input().split()))\n sc=list(map(int,input().split()))\n dictionary=dict(zip(c,sc))\n c.sort()\n for j in range(s-1):\n  if dictionary[c[j]]>dictionary[c[j+1]]:\n   n+=1\n diff[n].append(i+1)\nfor i in range(s):\n for j in range(len(diff[i])):\n  print(diff[i][j])", "p1,n1=list(map(int,input().split(\" \")))\nx1=list()\nj=\"0\"\nfor i in range(p1):\n a1=list(map(int,input().split(\" \")))\n b1=list(map(int,input().split(\" \"))) \n c=list()\n cx=0\n al=len(a1)\n for z in range(al):\n  c.append((a1[z],b1[z]))\n c=sorted(c,key=lambda x:x[0])\n ab=len(c)\n for z in range(ab-1):\n  if(c[z+1][1]<c[z][1]):\n   cx=cx+1\n x1.append((i,cx)) \nx1=sorted(x1,key=lambda x:x[1])\nfor i in range(len(x1)):\n print(x1[i][0] + 1)", "P,S=list(map(int,(input().split(\" \"))))\nd=[]\nfor p in range (0,P):\n ST=list(map (int,input().split (\" \")))\n N=list(map(int,input().split(\" \")))\n c=0\n L=sorted(list(zip(ST, N)))\n for i in range (0,S-1):\n  if(L[i][1]>L[i+1][1]):\n   c=c+1\n dd=()\n dd=(c,p+1)\n d.append(dd)\nd=sorted(d)\nfor i in range(0,P):\n print(d[i][1])\n"]