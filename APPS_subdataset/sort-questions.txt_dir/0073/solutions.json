["def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = [0] * (n + 1)\n    def inc():\n        for i in range(n - 1):\n            if a[i] > a[i + 1]:\n                return False\n        return True\n    def calc():\n        for i in range(n + 1):\n            c[i] = 0\n        for i in a:\n            c[i] += 1\n        for i in range(n + 1):\n            if not c[i]:\n                return i\n        return n + 1\n    ans = []\n    while not inc():\n        x = calc()\n        if x >= n:\n            y = 0\n            while y < n and a[y] == y:\n                y += 1\n            a[y] = x\n            ans.append(y)\n        else:\n            a[x] = x\n            ans.append(x)\n    print(len(ans))\n    print(*map(lambda x: x + 1, ans))\n\nt = int(input())\nfor _ in range(t):\n    solve()", "# Fast IO (only use in integer input) or take care about string\n\n# import os,io\n# input=io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int,input().split()))\n    operation = []\n    while True:\n        isNonDecreasing = True\n        for i in range(n-1):\n            if a[i] > a[i+1]:\n                isNonDecreasing = False\n                break\n        if isNonDecreasing:\n            break\n        isNIn = [False] * (n + 1)\n        for elem in a:\n            isNIn[elem] = True\n        for i in range(n + 1):\n            if isNIn[i] == False:\n                MEX = i\n                break\n        if MEX == n:\n            for i in range(n):\n                if a[i] != i and a[i] != n:\n                    break\n            operation.append(str(i + 1))\n            a[i] = n\n        else:\n            operation.append(str(MEX+1))\n            a[MEX] = MEX\n    print(len(operation))\n    if len(operation) != 0:\n        print(' '.join(operation))\n"]