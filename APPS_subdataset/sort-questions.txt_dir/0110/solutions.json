["for _ in range(int(input())):\n    n, k = tuple(map(int, input().split()))\n    arr = list(map(int, input().split()))\n\n    peaks = [0 for i in range(n)]\n    for i in range(1, n - 1):\n        if arr[i] > arr[i - 1] and arr[i] > arr[i + 1]:\n            peaks[i] = 1\n\n    cnt = 0\n    max_peaks = 0\n    answer = 0\n\n    for i in range(k - 1):\n        cnt += peaks[i]\n        max_peaks += peaks[i]\n\n    for i in range(k - 1, n - 1):\n        cnt -= peaks[i - k + 2]\n        cnt += peaks[i]\n        if cnt > max_peaks:\n            max_peaks = cnt\n            answer = i - k + 2\n\n    print(max_peaks + 1, answer + 1)\n", "from math import *\nfrom random import *\nfor t in range(int(input())):\n    n, k = map(int, input().split())\n    mas = list(map(int, input().split()))\n    pick = [0 for i in range(n)]\n    for i in range(1, n - 1):\n        pick[i] = pick[i - 1]\n        if mas[i] > mas[i - 1] and mas[i] > mas[i + 1]:\n            pick[i] += 1\n    if n > 1:\n        pick[n - 1] = pick[n - 2]\n    mx = 0\n    mxotv = 0\n    for i in range(0, n - k + 1):\n        if i + k - 2 < 0:\n            continue\n        res = pick[i + k - 2]\n        res -= pick[i]\n        if res > mx:\n            mx = res\n            mxotv = i\n    print(mx + 1, mxotv + 1)", "#list(map(int,input().split()))\nt=int(input())\nfor _ in range(t):\n    n,k=list(map(int,input().split()))\n    aa=list(map(int,input().split()))\n    tot=0\n    ind=1\n    \n    for i in range(1,k-1):\n        if(aa[i]>aa[i-1] and aa[i]>aa[i+1]):\n            tot+=1\n  #  print(tot)\n    ma=tot+1\n    for i in range(1,n):\n        if(i+k-1>=n):\n            continue\n        if(aa[i]>aa[i-1] and aa[i]>aa[i+1]):\n            tot-=1\n        if(aa[i+k-2]>aa[i+k-3] and aa[i+k-2]>aa[i+k-1]):\n            tot+=1\n        if(tot+1>ma):\n            ma=tot+1\n            ind=i+1\n      #  print(tot)\n    print(ma,ind)\n            \n        \n    \n", "t = int(input())\nfor qq in range(t):\n    n, k = list(map(int, input().split()))\n    m = list(map(int, input().split()))\n    p = 0\n    for i in range(n - k + 1, n - 1):\n        if m[i] > m[i - 1] and m[i] > m[i + 1]:\n            p += 1\n    mp = p\n    ii = n - k + 1\n    for i in range(n - k, 0, -1):\n        if m[i] > m[i - 1] and m[i] > m[i + 1]:\n            p += 1\n        if m[i + k - 2] > m[i + k - 3] and m[i + k - 2] > m[i + k - 1]:\n            p -= 1\n        if p >= mp:\n            mp = p\n            ii = i\n    print(mp + 1, ii)\n", "t=int(input())\nfor _ in range(t):\n    n,k=map(int,input().split())\n    arr=list(map(int,input().split()))\n    peaks=[0]*(n)\n    for i in range(1,n-1):\n        if arr[i]>arr[i-1] and arr[i]>arr[i+1]:\n            peaks[i]=1\n    acum=[0]\n    for i in range(1,n):\n        acum.append(acum[-1]+peaks[i])\n    maxs=0\n    pos=-1\n    for i in range(n-k,-1,-1):\n        tmp=acum[i+k-1]-acum[i]\n        if peaks[i+k-1]==1:\n            tmp-=1\n        if tmp>=maxs:\n            maxs=tmp\n            pos=i\n    print(maxs+1,pos+1)", "from _collections import deque\n\nfor _ in range(int(input())):\n    n, k = list(map(int, input().split()))\n    ar = list(map(int, input().split()))\n    picks = 0\n    lol = deque([])\n    for i in range(1, k - 1):\n        if ar[i - 1] < ar[i] > ar[i + 1]:\n            picks += 1\n            lol.append(i)\n    max_picks = picks\n    ans = 0\n    for i in range(k - 1, n - 1):\n        if len(lol) > 0 and lol[0] == i - k + 2:\n            lol.popleft()\n            picks -= 1\n        if ar[i - 1] < ar[i] > ar[i + 1]:\n            picks += 1\n            lol.append(i)\n        if picks > max_picks:\n            max_picks = picks\n            ans = i - k + 2\n    print(max_picks + 1, ans + 1)\n", "def mult_input():\n\treturn map(int,input().split())\n\ndef list_input():\n\treturn list(map(int,input().split()))\n\nfor nt in range(int(input())):\n\tn,k=mult_input()\n\tl=list(map(int,input().split()))\n\tans=0\n\tfor i in range(1,k-1):\n\t\tif l[i]>l[i-1] and l[i]>l[i+1]:\n\t\t\tans+=1\n\tind=1\n\ti=1\n\tcount=ans\n\twhile i<n-k+1:\n\t\tif l[i]>l[i-1] and l[i]>l[i+1]:\n\t\t\tcount-=1\n\t\tif l[i+k-2]>l[i+k-3] and l[i+k-2]>l[i+k-1]:\n\t\t\tcount+=1\n\t\tif count>ans:\n\t\t\tans=count\n\t\t\tind=i+1\n\t\ti+=1\n\tprint (ans+1,ind)", "from collections import defaultdict as dd\ndef ri():\n    return int(input())\n\ndef rl():\n    return list(map(int, input().split()))\n\n\ndef solve():\n    n, k = rl()\n    A = rl()\n    peaks = []\n    for i in range(1, n - 1):\n        if A[i] > max(A[i - 1], A[i + 1]):\n            peaks.append(1)\n        else:\n            peaks.append(0)\n\n    best = sum(peaks[:k-2])\n    curr = best\n    best_l = 0\n    for i in range(1, n - (k - 1)):\n        curr -= peaks[i - 1]\n        curr += peaks[i + k - 3]\n        if curr > best:\n            best = curr\n            best_l = i\n    return best + 1, best_l + 1\n\n\n\nt = ri()\nfor i in range(t):\n    print(*solve())\n", "import sys\nlines = sys.stdin.readlines()\n# nums = lists(map(int, lines[0].strip().split(\" \")))\nT = int(lines[0].strip())\nfor t in range(T):\n    (n, k) = list(map(int, lines[2*t+1].strip().split(\" \")))\n    nums = list(map(int, lines[2*t+2].strip().split(\" \")))\n    peaks = [0 for _ in range(n)]\n\n    for i in range(1, n-1):\n        if nums[i] > nums[i-1] and nums[i] > nums[i+1]: peaks[i] = 1\n    for i in range(1, n):\n        peaks[i] += peaks[i-1]\n    maxP = -1\n    maxIndex = -1\n    for i in range(n-k+1):\n        if peaks[i+k-2] - peaks[i] > maxP:\n            maxP = peaks[i+k-2] - peaks[i]\n            maxIndex = i\n    print(\"{} {}\".format(maxP+1, maxIndex+1))\n", "import sys\n\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    peak = [0] + [1 if a[i - 1] < a[i] and a[i] > a[i + 1] else 0 for i in range(1, n - 1)] + [0]\n    b = [None] * (n - k + 1)\n    b[0] = sum(peak[1 : k - 1])\n    for i in range(1, n - k + 1):\n        b[i] = b[i - 1] - peak[i] + peak[i + k - 2]\n    p = max(b)    \n    print(p + 1, b.index(p) + 1)\n", "import sys\n# from collections import defaultdict\n# t=1\nt=int(input())\nfor i in range(t):\n    # n=int(input())\n    # n,m=list(map(int,sys.stdin.readline().strip().split()))\n    # a,b,c,d=list(sys.stdin.readline().strip().split())\n    n,k=list(map(int,sys.stdin.readline().strip().split()))\n    # if(n*(a+b)>=(c-d) and n*(a-b)<=(c+d)):\n    #     print(\"YES\")\n    # else:\n    #     print(\"NO\")\n    \n    a=list(map(int,sys.stdin.readline().strip().split()))\n    x=[0]*n\n    for j in range(1,n-1):\n        if(a[j]>a[j-1] and a[j]>a[j+1]):\n            x[j]=1\n    # print(a)\n    # print(x)\n    k=k-2\n    op=0\n    curr=0\n    curr=sum(x[:k])\n    # print(x)\n    # print(curr)\n    op=curr\n    op1=1\n\n    for j in range(k,n):\n        # op=max(op,curr)\n        curr=curr+x[j]-x[j-k]\n        if(curr>op):\n            # print(\"here\")\n            op1=j-k+1\n            op=curr\n        # op=max(op,curr)\n    op=max(op,curr)\n    print(op+1,op1)", "t = int(input())\nfor ii in range(t):\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    p = [0] * n\n    for i in range(1, n - 1):\n        if a[i] > a[i - 1] and a[i] > a[i + 1]:\n            p[i] = 1\n    cur = 0\n    ind = k - 1\n    for i in range(k):\n        if i != 0 and i != k - 1:\n            cur += p[i]\n    ans = cur\n    ans_ind = k - 1\n    while ind < n:\n        if p[ind - k + 2]:\n            cur -= 1\n        if p[ind]:\n            cur += 1\n        if cur > ans:\n            ans = cur\n            ans_ind = ind + 1\n        ind += 1\n    print(ans + 1, ans_ind - k + 2)", "t = int(input())\nfor i in range(t):\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    cnt = 0\n    for j in range(k):\n        if 0 < j < k - 1 and a[j - 1] < a[j] > a[j + 1]:\n            cnt += 1\n    ans = cnt\n    l = 0\n    for j in range(n - k):\n        if a[j + 2] < a[j + 1] > a[j]:\n            cnt -= 1\n        if a[j + k - 2] < a[j + k - 1] > a[j + k]:\n            cnt += 1\n        if cnt > ans:\n            ans = cnt\n            l = j + 1\n    print(ans + 1, l + 1)\n"]