["# cook your dish here\nfor _ in range(int(input())):\n    n=int(input())\n    A=list(map(int,input().split()))\n    A.sort()\n    for i in range(len(A)):\n        if A[i]==1:\n            print(i)\n            break", "for x in range(int(input())):\n    n = int(input())\n    S = list(map(int,input().split()))\n    ind = n - sum(S)\n    print(ind)", "from sys import*\r\ninput=stdin.readline\r\nt=int(input())\r\nfor _ in range(t):\r\n    n=int(input())\r\n    l=[int(x) for x in input().split()]\r\n    l.sort()\r\n    print(l.index(1))\r\n", "list = []\r\n\r\nx = int(input())\r\noutput = []\r\nfor i in range(x):\r\n    count = 0\r\n    val = int(input())\r\n    line = input()\r\n    z = line.split()\r\n    z = [int(y) for y in z]\r\n    for j in z:\r\n        if j == 0:\r\n            count += 1\r\n    \r\n    output.append(count)\r\nfor i in output:\r\n    print(i)", "# cook your dish here\nlist = []\n\nx = int(input())\noutput = []\nfor i in range(x):\n    count = 0\n    val = int(input())\n    line = input()\n    z = line.split()\n    z = [int(y) for y in z]\n    for j in z:\n        if j == 0:\n            count += 1\n    \n    output.append(count)\nfor i in output:\n    print(i)", "list = []\r\n\r\nx = int(input())\r\noutput = []\r\nfor i in range(x):\r\n    count = 0\r\n    val = int(input())\r\n    line = input()\r\n    z = line.split()\r\n    z = [int(y) for y in z]\r\n    for j in z:\r\n        if j == 0:\r\n            count += 1\r\n    \r\n    output.append(count)\r\nfor i in output:\r\n    print(i)", "try:\n    for i in range(int(input())):\n        n=int(input())\n        l=sorted(list(map(int,input().split())))\n        print(l.count(0))\nexcept Exception:\n    pass\n\t", "t=int(input())\nwhile(t):\n    n=int(input())\n    l=list(map(int,input().split()))\n    print(l.count(0))\n    t=t-1", "T=int(input())\r\nfor i in range(T):\r\n    n=int(input())\r\n    a=list(map(int,input().split()))\r\n    a.sort()\r\n    for i in range(n):\r\n        if a[i]!=a[i+1]:\r\n            print(i+1)\r\n            break\r\n", "for i in range(int(input())):\n    size = int(input())\n    num = list(map(int,input().split()))\n    print(num.count(0))\n        ", "def find(arr, n):\r\n    for i in range(n):\r\n        if(arr[i] == 1):\r\n            return i\r\n    \r\n    return -1\r\n\r\nt=int(input())\r\nfor x in range(t):\r\n    n=int(input())\r\n    arr=list(map(int,input().split()))\r\n    arr.sort()\r\n    p = find(arr, n)\r\n    if p >= 0:\r\n        print(p)", "# cook your dish here\nt=int(input())\nfor i in range(t):\n    n=int(input())\n    l=list(map(int,input().split()))\n    l.sort()\n    x=l.index(1)\n    print(x)\n", "# cook your dish here\nt=int(input())\nfor i in range(t):\n    n=int(input())\n    x=list(map(int,input().split()))\n    x.sort()\n    print(x.index(1))", "t=int(input())\nfor i in range(t):\n    a=int(input())\n    b=[int(b) for b in input().split()]\n    b.sort()\n    for j in range(len(b)):\n        if b[j]==0 and b[j+1]==1:\n            print(j+1)\n            break", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int , input().split()))\n    arr.sort()\n    i = 0\n    while arr[i] != 1:\n        i += 1\n    print(i)", "# cook your dish here\nn=int(input())\nfor _ in range(n):\n    m=int(input())\n    lis=list(map(int,input().strip().split()))\n    lis.sort()\n    print(lis.index(1))", "# cook your dish here\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int,input().split()))\n    c = a.count(1)\n    print(n-c)", "t=int(input())\nfor i in range(t):\n    n=int(input())\n    l=[int(l) for l in input().split()]\n    p=l.count(0)\n    print(p)\n", "from sys import stdin, stdout\r\ndef findTransitionPoint(arr, n):\r\n\tlb = 0\r\n\tub = n - 1\r\n\twhile (lb <= ub):\r\n\t\tmid = (int)((lb + ub) / 2)\r\n\t\tif (arr[mid] == 0):\r\n\t\t\tlb = mid + 1\r\n\t\telif (arr[mid] == 1):\r\n\t\t\tif (mid == 0 \\\r\n\t\t\t\tor (mid > 0 and\\\r\n\t\t\t\tarr[mid - 1] == 0)):\r\n\t\t\t\treturn mid\r\n\t\t\tub = mid-1\r\n\treturn -1\r\ntest = int(stdin.readline())\r\nfor _ in range(test):\r\n    n = int(stdin.readline())\r\n    arr = sorted(list(map(int, stdin.readline().split())))\r\n    pp = findTransitionPoint(arr, n);\r\n    print(pp)\r\n\r\n", "# cook your dish here\nt = int(input())\nfor i in range(t):\n    N = int(input())\n    lst = list(map(int,input().split()))\n    count = 0\n    lst.sort()\n    for j in lst:\n        if j == 0 :\n            count = count+1 \n    print(count)        \n", "for _ in range(int(input())):\r\n    n = int(input())\r\n    l = list(map(int,input().split()))\r\n    l.sort()\r\n    for i in range(n-1):\r\n        if l[i] != l[i+1]:\r\n            print(i+1)", "# cook your dish here\ntestcases = int(input())\nfor x in range(testcases):\n    N = map(int,input().split())\n    A = sorted(list(map(int,input().split())))\n    print(A.count(0))\n   ", "def findTransitionPoint(arr, n):\n    lb = 0\n    ub = n - 1\n\n    while (lb <= ub):\n\n        mid = (int)((lb + ub) / 2)\n \n        if (arr[mid] == 0):\n            lb = mid + 1\n\n        elif (arr[mid] == 1):\n\n            if (mid == 0 \\\n                or (mid > 0 and\\\n                arr[mid - 1] == 0)):\n                return mid\n\n            ub = mid-1\n     \n    return -1\n \n\nfor _ in range(int(input())):\n    n = int(input())\n    nn = list(map(int,input().split(\" \")))\n    nn = sorted(nn)\n    # res = 0\n    # for ele in nn: \n    #     res = (res << 1) | ele \n    # print(res)\n\n\n    arr = nn\n    n = len(arr)\n    point = findTransitionPoint(arr, n);\n    print(point)\n    ", "# cook your dish here\ntestcases = int(input())\nfor x in range(testcases):\n    N = int(input())\n    A = list(map(int,input().split()))\n    print(A.count(0))", "t=int(input())\nwhile(t):\n    n=int(input())\n    a=[]\n    p=0\n    a=list(map(int,input().split()))\n    for i in range(0,n):\n        if(a[i]==0):\n           p=p+1\n    print(p)\n    t=t-1\n"]