["# cook your dish here\nfor u in range(int(input())):\n n=int(input())\n l=list(map(int,input().split()))\n d=[]\n dd=[]\n s=1\n for i in range(n-1):\n  s=l[i]\n  d.append(s)\n  dd.append([i,i])\n  for j in range(i+1,n):\n   s=s*l[j]\n   d.append(s)\n   dd.append([i,j])\n d.append(l[n-1])\n dd.append([n-1,n-1])\n k=len(d)\n m=max(d)\n x,y=0,0\n for i in range(k):\n  if(d[i]==m):\n   x=dd[i]\n print(m,*x)\n", "t=int(input())\nfor i in range(t):\n n=int(input())\n l=[int(x) for x in input().split()]\n s=0\n e=0\n maxi=l[0]\n for i in range(n):\n  prod=l[i]\n  if prod>maxi:\n   maxi=prod\n   s=i\n   e=i\n  if prod==maxi:\n   if i>s:\n    s=i\n    e=i\n   if i==s:\n    if i>e:\n     e=i\n  for j in range(i+1,n):\n   prod=prod*l[j]\n   if prod>maxi:\n    maxi=prod\n    s=i\n    e=j\n   if prod==maxi:\n    if i>s:\n     s=i\n     e=j\n    if i==s:\n     if j>e:\n      e=j \n print(maxi,s,e)\n\n   \n", "t=int(input())\nwhile(t):\n t=t-1\n n=int(input())\n S=list(map(int,input().split()))\n max1=-1*float(\"inf\")\n for i in range(len(S)):\n  p = 1\n  for j in range(i,len(S)):\n   p = p * S[j] \n   if max1 <= p:\n    s_i = i\n    s_f = j\n    max1 = p\n print(max1,s_i,s_f)", "import numpy as np\nfor _ in range(int(input())):\n a = int(input())\n x = [int(i) for i in input().split()]\n mn = -1000\n for i in range(len(x)):\n  for j in range(i,len(x)):\n   p = x[i:j+1]\n   q = np.prod(p)\n   if(q>=mn):\n    mn = q\n    s = i\n    l = j\n print(mn,' ',s,' ',l)\n", "import numpy\nfor _ in range(int(input())):\n n=int(input())\n l=list(map(int,input().split()))\n ans=float('-inf')\n iidx=0\n fidx=0\n for i in range(len(l) + 1):\n  for j in range(i + 1, len(l) + 1):\n   sub = l[i:j]\n\n   if len(sub)==0:\n    continue\n   p=numpy.prod(sub)\n   if p>=ans:\n    ans=p\n    if i>=iidx:\n     iidx=i\n     if j>=fidx:\n      fidx=j\n print(ans,iidx,fidx-1)\n\n"]