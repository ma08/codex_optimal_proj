["t = int(input())\n\nfor _ in range(t):\n    n, k = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    if len(set(a)) > k:\n        print(-1)\n        continue\n    l = list(set(a))\n    l.extend([1]*(k - len(l)))\n\n    print(n*k)\n    for _ in range(n):\n        print(*l, end=\" \")\n    print()\n", "for i in range(int(input())):\n\tn, k=(int(j) for j in input().split())\n\ta=[int(j) for j in input().split()]\n\tmm=set(a)\n\tif(len(mm)>k):\n\t\tprint(\"-1\", end=\" \")\n\telse:\n\t\tif(len(mm)<k):\n\t\t\tfor j in range(1, 101):\n\t\t\t\tif(j not in mm):\n\t\t\t\t\tmm.add(j)\n\t\t\t\tif(len(mm)==k):\n\t\t\t\t\tbreak\n\t\tprint(n*len(mm))\n\t\tfor j in range(n):\n\t\t\tprint(\" \".join(str(x) for x in mm), end=\" \")\n\tprint()", "import sys\n\nstdin = sys.stdin\n\nns = lambda: stdin.readline().rstrip()\nni = lambda: int(stdin.readline().rstrip())\nnm = lambda: list(map(int, stdin.readline().split()))\nnl = lambda: list(map(int, stdin.readline().split()))\n\ndef solve():\n    n, k = nm()\n    a = nl()\n    if k < len(set(a)):\n        print(-1)\n        return\n    f = list(set(a))\n    f += [1]*(k-len(f))\n    f *= n\n    print(len(f))\n    print(*f)\n    return\n\n\nt = ni()\nfor _ in range(t):\n    solve()\n", "for _ in range(int(input())):\n    n, k = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    if len(set(arr)) > k:\n        print(-1)\n    else:\n        result = []\n        temp = list(set(arr))\n        for i in range(1, n + 1):\n            if len(temp) == k:\n                break\n            if i not in temp:\n                temp.append(i)\n                \n        for i in range(len(arr)):\n            result.extend(temp)\n        print(len(result))\n        print(*result)\n        \n", "import collections\n\nt=int(input())\nfor _ in range(t):\n    n,k=map(int,input().split())\n    arr=list(map(int,input().split()))\n    if len(collections.Counter(arr))>k:\n        print(-1)\n    else:\n        cand=list(collections.Counter(arr).keys())\n        cnt=len(cand)\n        for i in range(1,n+1):\n            if cnt>=k:\n                break\n            else:\n                if i not in cand:\n                    cand.append(i)\n                    cnt+=1\n        print(cnt*n)\n        print(*(cand*n))", "from collections import Counter\n\ndef read_int():\n    return int(input())\n\n\ndef read_ints():\n    return map(int, input().split(' '))\n\n\nt = read_int()\nfor case_num in range(t):\n    n, k = read_ints()\n    a = list(read_ints())\n    cnt = Counter(a)\n    distinct = len(cnt)\n    if distinct > k:\n        print(-1)\n    else:\n        print(n * k)\n        s = set(cnt)\n        for i in range(1, n + 1):\n            if len(s) < k and not i in s:\n                s.add(i)\n        ans = list(s) * n\n        print(' '.join(map(str, ans)))", "import sys\nreadline = sys.stdin.readline\n\nT = int(readline())\nAns = []\nfor qu in range(T):\n    N, K = map(int, readline().split())\n    A = list(map(int, readline().split()))\n    SA = set(A)\n    if len(SA) <= K:\n        res = list(SA)\n        for i in range(1, N+1):\n            if len(res) == K:\n                break\n            if i not in SA:\n                res.append(i)\n        Ans.append(str(N*K))\n        Ans.append(' '.join(map(str, res*N)))\n    else:\n        Ans.append('-1')\nprint('\\n'.join(map(str, Ans)))", "import sys\n\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    if len(set(a)) > k:\n        print(-1)\n        continue\n    a = list(set(a))\n    a += [1] * (k - len(a))\n    print(k * n)\n    print(*(a * n))\n", "def Solve(nCase):\n    n, k = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    l = list(set(a))\n    p = len(l)\n    if p > k:\n        print(-1)\n        return\n    for i in range(k - p):\n        l.append(a[0])\n    ans = n * l\n    print(len(ans))\n    print(' '.join(str(x) for x in ans)) \n\n\nT = int(input())\nfor i in range(1, T + 1):\n    Solve(i)\n", "def beauty(n, k, array):\n    s = set(array)\n    \n    if len(s) > k:\n        print(-1)\n        return\n    \n    L = list(s)\n    L.extend([array[0]] * (k - len(s)))\n    L *= n\n    \n    print(len(L))\n    print(*L)\n    \nt = int(input())\nfor i in range(t):\n    n, k = list(map(int, input().split()))\n    array = list(map(int, input().split()))\n    beauty(n, k, array)\n", "q = int(input())\nfor _ in range(q):\n\tn,k = map(int,input().split())\n\tl = list(map(int,input().split()))\n\t#szukamy tak zeby okres byl k-1\n\tif k==1:\n\t\tif max(l) == min(l):\n\t\t\tprint(len(l))\n\t\t\tprint(*l)\n\t\telse:\n\t\t\tprint(-1)\n\telse:\n\t\tcyk = set()\n\t\tfor i in l:\n\t\t\tcyk.add(i)\n\t\tif len(cyk) > k:\n\t\t\tdasie = 0\n\t\telse:\n\t\t\tdasie = 1\n\t\tif dasie == 0:\n\t\t\tprint(-1)\n\t\telse:\n\t\t\ta = list(cyk)\n\t\t\twhile len(a) != k:\n\t\t\t\ta.append(l[0])\n\t\t\todp = n*a\n\t\t\tprint(len(odp))\n\t\t\tprint(*odp)"]