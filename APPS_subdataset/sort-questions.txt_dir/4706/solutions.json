["def split_exp(n):\n    dot = n.find('.')\n    if dot == -1: dot = len(n)\n    return [d+\"0\"*(dot-i-1) if i<dot else \".{}{}\".format(\"0\"*(i-dot-1), d)\n            for i,d in enumerate(n) if i != dot and d != '0']", "def split_exp(n):\n    j = n.find('.') + 1 or len(n) + 1\n    return [f\"{c}{'0'*(j-i-2)}\" if i < j else f\".{'0'*(i-j)}{c}\" for i,c in enumerate(n) if c not in \"0.\"]", "def split_exp(n):\n    d = n.split('.')\n    result = [c + '0' * (len(d[0]) - i - 1) for i, c in enumerate(d[0]) if c != '0']\n    if len(d) == 2:\n        result += ['.' + '0' * i + c for i, c in enumerate(d[1]) if c != '0']\n    return result        ", "def split_exp(n):\n    integer, decimal = n.split(\".\") if (\".\" in n) else (n, \"\")\n    length = len(integer)\n    result = [d.ljust(length - i, \"0\") for i, d in enumerate(integer) if int(d)]\n    if decimal:\n        result.extend(\".\" + d.rjust(i, \"0\") for i, d in enumerate(decimal, 1) if int(d))\n    return result", "split_exp=lambda n:(lambda d:[('.'+'0'*(i-d-1)+x,x+'0'*(d-i-1))[d>i]for i,x in enumerate(n)if x not in'.0'])((len(n),n.find('.'))['.'in n])", "def split_exp(n):\n  try:\n      dot = n.index('.')\n  except:\n      dot = len(n)\n  return [n[i]+'0'*(dot-1-i) for i in range(dot) if n[i] != '0'] +\\\n          ['.' + '0'*(i-dot-1) + n[i] for i in range(dot+1,len(n)) if n[i] != '0']", "def split_exp(n):\n    return [y.ljust(len(x)-j,'0') if i==0 else '.'+y.zfill(j+1) for i,x in enumerate(n.split('.')) for j,y in enumerate(x) if y!='0']", "def split_exp(n):\n    o = n.index(\".\") if \".\" in n else len(n)\n    split = lambda i, c: \"{}{}{}\".format(\n        \"\" if o - i > 0 else \".{}\".format(\"0\" * (- (o - i + 1))),\n        c,\n        \"0\" * (o - i - 1))\n    return [split(i, c) for i, c in enumerate(n) if i - o != 0 if float(split(i, c)) != 0]", "split_exp=lambda n: (lambda d: [e+ \"0\"*(d-i-1) if d>i else \".\"+\"0\"*(i-d-1)+e for i,e in enumerate(n) if e not in \".0\"])(n.index(\".\") if \".\" in n else len(n))", "import re\ndef split_exp(n):\n  r=[n[0:i+1]+re.sub(r\"\\.0+$\",\"\",re.sub(r\"\\d\",\"0\",n[i+1:])) for i in range(len(n))]\n  r=[re.sub(\"\\d(?!$)\",\"0\",re.sub(r\".+(?=\\.)|0+$\",\"\",x)) if \".\" in x else re.findall(r\"\\d0*$\",x)[0] for x in r]\n  rs=[]\n  for x in r:\n    if(not (re.match(r\"^[0.]+$\",x) or x in rs)): rs.append(x) \n  return rs"]