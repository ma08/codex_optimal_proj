["def getSum(dp, pos, s, e, type_):\n    if e < s:\n        return 0\n           \n    if type_=='D':\n        if e==m-1:\n            return dp[pos][s]\n        return dp[pos][s]-dp[pos][e+1]\n    else:\n        if e==n-1:\n            return dp[s][pos]\n        return dp[s][pos]-dp[e+1][pos]\n\nmod  = 10**9+7\nn, m = map(int, input().split())\na    = [list(list(map(lambda x: 1 if x=='R' else 0, input()))) for _ in range(n)] \n\nSD  = [[0]*m for _ in range(n)]\nSN  = [[0]*m for _ in range(n)]\ndpD = [[0]*m for _ in range(n)]\ndpN = [[0]*m for _ in range(n)]\n\nfor i in range(n-1, -1, -1):\n    for j in range(m-1, -1, -1):\n        if i == n-1:\n            SD[i][j]=a[i][j] \n        else:\n            SD[i][j]=SD[i+1][j]+a[i][j]\n\n        if j == m-1:\n            SN[i][j]=a[i][j]\n        else:    \n            SN[i][j]=SN[i][j+1]+a[i][j]\n            \nfor j in range(m-1,-1,-1):\n    if a[n-1][j]==1:\n        break\n    dpD[n-1][j]=1\n    dpN[n-1][j]=1\n    \nfor i in range(n-1,-1,-1):\n    if a[i][m-1]==1:\n        break\n    dpD[i][m-1]=1\n    dpN[i][m-1]=1\n    \nfor j in range(m-2, -1, -1):\n    if i==n-1:\n        break\n    dpD[n-1][j]+=dpD[n-1][j+1]\n    \nfor i in range(n-2,-1,-1):    \n    if j==m-1:\n        break\n    dpN[i][m-1]+=dpN[i+1][m-1]       \n    \nfor i in range(n-2,-1,-1):\n    for j in range(m-2,-1,-1):\n        s, e = j, m-SN[i][j]-1\n        #print(i, j, s, e, 'N')\n        dpN[i][j]  = getSum(dpD, i+1, s, e, 'D')\n        dpN[i][j]  = (dpN[i][j] + dpN[i+1][j]) % mod    \n    \n        s, e = i, n-SD[i][j]-1\n        #print(i, j, s, e, 'D')\n        dpD[i][j]  = getSum(dpN, j+1, s, e, 'N')\n\n    if i != 0:\n        for j in range(m-2,-1,-1):        \n            dpD[i][j] = (dpD[i][j] + dpD[i][j+1]) % mod    \n                        \nprint(dpD[0][0] % mod)            "]