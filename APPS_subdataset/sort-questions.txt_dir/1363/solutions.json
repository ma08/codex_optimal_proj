["val = 10**9 + 7\ndef MOD(a,b):\n aans = a\n ans = 1\n while b>0:\n  ans = (ans*aans)%val\n  aans = (aans*aans)%val\n  b/=2\n return ans%val\n \n\n\nfor i in range(eval(input())):    \n n,d= list(map(int,input().split()))\n a=int(str(d)*n)\n sqr = str(a*a)\n ans =0\n count=0\n for ii in sqr :\n  ans= ans+int(ii)*23**count\n  count+=1\n  z=int(ii)*ans\n print(ans % (10**9+7))\n \n  \n", "T=int(input())\nwhile(T>0):\n [N,D]=list(map(int,input('').split()))\n carry=0\n cal=0\n ans=''\n i=1\n k=0\n while i<=N:\n  ans+= str(chr(((carry+i)%10)+ord('0')))\n  carry=int((carry+i)/10)\n  cal+=1\n  i+=1\n  k+=1\n #print ans\n i-=2\n while i>=1:\n  ans+= str(chr(((carry+i)%10)+ord('0')))\n  carry=int((carry+i)/10)\n  cal+=1\n  i-=1\n  k+=1\n #print ans\n while carry>0:\n  ans+= str((((carry+i)%10)+ord('0')))\n  carry=int((carry)/10)\n  cal+=1\n  k+=1\n #print ans[0:k]\n #print long(ans)\n ans = int(ans)\n ans*=(D*D)\n ans=str(ans)\n #print ans\n \n length=len(ans)\n ans1=0\n p=1\n for i in range(length):\n  ans1=((ord(ans[i])-ord('0'))*p+ans1)%1000000007\n  p=(p*23)%1000000007\n print(ans1)\n\n T-=1", "tts=[1,23]\nmod=10**9+7\nfor x in range(2,2*10**6+1):\n tts.append(tts[x-1]*23%mod)\n\nt=eval(input())\nwhile t>0:\n n,d=list(map(int,input().split()))\n num=int(str(d)*n)\n num**=2\n res=0\n i=0\n for x in str(num):\n  res+=((int(x)*tts[i]))\n  i+=1\n print(res%mod)\n t-=1\n", "def show(n,d):\n t=0\n m=1000000007\n for i in range(0,n):\n  t=t*10+d\n\n\n t=t*t\n st=str(t)\n s=0\n for i in range(0,len(st)):\n  s=(s+((23**i)*int(st[i]))% m)% m\n print(s)\n\ndef main():\n t=int(input())\n while t>0:\n  n,d=input().split()\n  n=int(n)\n  d=int(d)\n  show(n,d)\n  t-=1\n\nmain()\n\n\n", "test=eval(input())\n\n\nwhile test>0:\n\n test=test-1\n N, D = list(map(int, input().strip().split()))\n number=\"\"\n for i in range(N):\n  number=number+str(D)\n num=int(number)\n sq=num*num\n z=str(sq)\n l=len(z)\n \n ans=0\n for i in range (l):\n  ans=ans+(int(z[i])*(23**(i)))\n  ans=ans%1000000007\n print(ans)", "def main():\n mod=(10**9+7)\n for i in range(eval(input())):\n  printk =0\n  c=0\n  A,D= list(map(int,input().split()))\n  aks=int(str(D)*A)\n  s=(aks*aks)\n  hey=str(s)\n  for ii in hey:\n   printk= printk+int(ii)*23**c\n   __=int(ii)*printk\n   c+=1\n   #print __\n   #print c\n  ok_=printk % mod \n  print(ok_)\nmain() \n", "test=int(input())\nfor i in range(0,test):\n n,k=list(map(int,input().split()))\n l=str(k)*n\n l=int(l)\n k=l*l\n u=str(k).strip()\n t=len(u)\n j=1\n ans=0\n for h in range(0,t):\n  ans = ans+((int(u[h])%1000000007)*(j%1000000007)%1000000007)%1000000007\n  j=(23*j)%1000000007\n print(ans%1000000007)", "T=int(input())\nwhile(T>0):\n [N,D]=list(map(int,input('').split()))\n carry=0\n cal=0\n ans=0\n i=1\n while i<=N:\n  ans=((carry+i)%10)*(10**cal)+ans\n  carry=int((carry+i)/10)\n  cal+=1\n  i+=1\n #print ans\n i-=2\n while i>=1:\n  ans=((carry+i)%10)*(10**cal)+ans\n  carry=int((carry+i)/10)\n  cal+=1\n  i-=1\n #print ans\n while carry>0:\n  ans=((carry)%10)*(10**cal)+ans\n  carry=int((carry)/10)\n  cal+=1\n #print ans\n ans*=(D*D)\n ans=str(ans)\n #print ans\n \n length=len(ans)\n ans1=0\n p=1\n for i in range(length):\n  ans1=((ord(ans[i])-ord('0'))*p+ans1)%1000000007\n  p=(p*23)%1000000007\n print(ans1)\n T-=1", "test=int(input())\nfor i in range(0,test):\n n,k=list(map(int,input().split()))\n l=str(k)*n\n l=int(l)\n k=l*l\n u=str(k).strip()\n t=len(u)\n j=1\n ans=0\n for h in range(0,t):\n  ans = ans+((int(u[h])%1000000007)*(j%1000000007)%1000000007)%1000000007\n  j=(23*j)%1000000007\n print(ans%1000000007)", "test=eval(input())\n\n\nwhile test>0:\n\n test=test-1\n N, D = list(map(int, input().strip().split()))\n number=0\n for i in range(N):\n  number=number+D*(10**i)\n sq=number*number\n z=str(sq)\n l=len(z)\n \n ans=0\n for i in range (l):\n  ans=ans+(int(z[i])*(23**(i)))\n  ans=ans%1000000007\n print(ans)", "mod=1000000007\ndp =[]\ndp.append(1)\ntens=[]\ntens.append(10)\ntws=[]\ntws.append(1)\nfor i in range(1, 21):\n tens.append(tens[i-1]*tens[i-1])\n dp.append(dp[i-1]*tens[i-1]+dp[i-1])\n tws.append(tws[i-1]*2) \n\nt=eval(input())\nt=int(t)\nfor i in range(0, t):\n now=0\n b, a = input().split()\n a=int(a)\n b=int(b)\n j=20\n val=0\n while(j>=0):\n  if(b>=tws[j]):\n   val*=tens[j]\n   val+=dp[j]\n   b-=tws[j]\n  j-=1\n val*=a\n act=val*val\n now=str(act)\n # print(now)\n dow=1\n ans=0\n for c in now:\n  x=int(c)\n  # print(x)\n  # print(dow)\n  ans+=(dow*x)\n  dow*=23\n  dow%=mod\n  ans%=mod\n print(ans)\n # digs=[]\n # while(act >0):\n #   d=act%10\n #   digs.append(d)\n #   act=act/10\n # now=0\n # while (act > 0):\n #   d=act%10\n #   now*=10\n #   now+=d\n #   act=act/10\n # count=0\n # ans=0\n # mul=1\n # while (now > 0):\n #   d=now%10\n #   ans+=(mul*d)\n #   ans%=mod\n #   now/=10\n #   count+=1\n #   mul*=23\n #   mul%=mod\n # print(ans)\n\n\n\n", "from math import *\nt=int(input())\nfor i in range(0,t):\n a,b=input().split()\n a,b=int(a),int(b)\n c=\"\"\n for j in range(1,a+1):\n  c+=str(j)\n for j in range(1,a):\n  c+=str(a-j)\n c=int(c)\n b*=b\n c=c*b\n c=str(c)\n mod=10**9+7\n ans=0\n for j in range(0,len(c)):\n  ans+=(((23**j)%mod)*(int(c[j])%mod))%mod\n ans=ans%mod\n print(ans)\n", "MOD = 10**9+7\ntcase = eval(input())\nfor times in range(tcase):\n rep, digit = list(map(int,input().split()))\n number = str(int(str(digit)*rep)**2)\n mult = 1\n ans = 0\n for dig in number:\n  ans += ((int(dig)%MOD)*mult)%MOD\n  mult = ((mult%MOD)*23)%MOD\n print(ans%MOD)", "from math import *\nt=int(input())\nfor i in range(0,t):\n a,b=input().split()\n a,b=int(a),str(b)\n c=\"\"\n for j in range(0,a):\n  c+=b\n c=int(c)\n c=c**2\n c=str(c)\n mod=10**9+7\n ans=0\n for j in range(0,len(c)):\n  ans+=(((23**j)%mod)*(int(c[j])%mod))%mod\n ans=ans%mod\n print(ans)\n", "def square(n,d):\n if n==1:\n  return d*d\n a=\"\"\n for i in range(1,n+1):\n  a=a+str(i)\n for i in range(n-1,0,-1):\n  a=a+str(i)\n #print a\n return d*d*int(a)\n\nt=eval(input())\np=23\nparray=[]\nparray.append(1)\nfor i in range(1,3240001):\n parray.append((parray[i-1]*p)%1000000007)\nfor x in range(0,t):\n n,d=list(map(int,input().split()))\n '''\n    num=int(str(d)*n)\n    sq=num**2\n    '''\n sq=square(n,d)\n #print \"this is a test %d\"%sq\n m=len(str(sq))\n #print \"length of square = %d\"%m\n i=0\n sum=0\n sqArray=list(map(int,list(str(sq))))\n #print sqArray\n while i<m:\n  #print \"i = %d\"%i\n  sum = (sum+(sqArray[m-i-1])*(parray[m-i-1]))%1000000007\n  i=i+1\n print(\"%d\" %sum)", "import math\nimport string\nMOD = pow(10, 9) + 7\np=23\nMAX = 2*pow(10, 6) + 10\nP={}\nP[0]=1\nfor q in range(1, MAX):\n P[q] = (P[q-1]*p)%MOD\nfor _ in range(int(input())):\n n, d = list(map(int, input().split()))\n number = [(d)]*(n)\n C=[0]*(n+n)\n s=len(C)-1\n for j in range(n-1, -1, -1):\n  carry = 0\n  shift = s\n  for i in range(n-1, -1, -1):\n   m = number[i]*number[j]\n   summ = m+C[shift]+carry\n   num = summ%10\n   c = summ/10\n   C[shift] = num\n   carry = c\n   shift-=1\n  C[shift] = C[shift] + carry\n  s-=1\n jump = 0\n for i in range(len(C)):\n  if C[i]==0:\n   jump+=1\n  else:\n   break\n C=C[jump:]\n ans=0\n for i in range(len(C)):\n  ans+=(P[i]*int(C[i]))%MOD\n print(ans%MOD)", "test = eval(input())\nwhile test:\n test =test-1\n n,d = list(map(int,input().split()))\n num=0\n for i in range(n):\n  num=num*10+d\n sqr=num**2\n s=sqr.__str__()\n l=len(s)\n ans=0\n for i in range(l):\n  ans=(ans+((23**i)*int(s[i])))%1000000007\n print(ans)\n", "\nimport sys\n\nf = sys.stdin\n\nif len(sys.argv) > 1:\n f = open(sys.argv[1], \"rt\")\n\nT = int(f.readline().strip())\n\nMOD = 10**9 + 7\n\ndef calc(N, D):\n X = [D] * N\n\n X_d = [0] * N # X * D\n carry = 0\n for i in range(N):\n  val = D * D + carry\n  X_d[i] = val % 10\n  carry = val // 10\n assert carry < 10\n X_d.append(carry) # Could be 0, still use for convenience.\n\n product = [0] * (2*N)\n #~ print(X_d)\n #~ print(product)\n\n # (1)\n carry = 0\n cur_sum = 0\n for i in range(N):\n  cur_sum += X_d[i]\n  val = cur_sum + carry\n  product[i] = val % 10\n  carry = val // 10\n\n # (2)\n cur_sum += X_d[N]\n for i in range(N):\n  cur_sum -= X_d[i]\n  val = cur_sum + carry\n  product[N+i] = val % 10\n  carry = val // 10\n\n # (3)\n while carry > 0:\n  product.append(carry % 10)\n  carry = carry // 10\n\n while product and product[-1] == 0:\n  del product[-1]\n\n h = 0\n for x in product:\n  h = (h * 23 + x ) % MOD\n\n return h\n\nfor case_id in range(1, T+1):\n N, D = list(map(int, f.readline().strip().split()))\n\n r = calc(N, D)\n\n print(r)\n", "import math\nimport string\nMOD = pow(10, 9) + 7\np=23\nfor _ in range(int(input())):\n n, d = list(map(int, input().split()))\n number = [(d)]*(n)\n C=[0]*(n+n)\n s=len(C)-1\n for j in range(n-1, -1, -1):\n  carry = 0\n  shift = s\n  for i in range(n-1, -1, -1):\n   m = number[i]*number[j]\n   summ = m+C[shift]+carry\n   num = summ%10\n   c = summ/10\n   C[shift] = num\n   carry = c\n   shift-=1\n  C[shift] = C[shift] + carry\n  s-=1\n jump = 0\n for i in range(len(C)):\n  if C[i]==0:\n   jump+=1\n  else:\n   break\n C=C[jump:]\n ans=0\n for i in range(len(C)):\n  ans+=(pow(p, i, MOD)*int(C[i]))%MOD\n print(ans%MOD)", "import sys\n\nmod = 10**9 + 7;\n\nl = [1]\n\nfor i in range(1,(10**6)+1):\n l.append((l[-1]*23)%mod)\n\ndef solve(num):\n length = len(num)\n ans = 0\n for i in range(length):\n  ans += l[i] * int(num[i])\n  ans %= mod\n return ans\n\n\n\nfor cases in range(int(sys.stdin.readline())):\n n,d = list(map(int,sys.stdin.readline().split()))\n num = int((str(d)*n))%mod\n num = num**2\n print(solve(str(num)))\n \n"]