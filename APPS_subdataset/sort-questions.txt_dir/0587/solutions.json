["n=int(input())\r\na=list(map(int,input().split()))\r\nc=[]\r\nfor i in range(len(a)):\r\n    if a[i]==2:\r\n        c.append(1)\r\n    else:\r\n        c.append(a[i]^2)\r\nprint(*c)", "import copy\r\nn=int(input())\r\na=list(map(int,input().split()))\r\nc=[]\r\nfor i in range(len(a)):\r\n    if a[i]==2:\r\n        c.append(1)\r\n    else:\r\n        str=bin(a[i])[2:]\r\n        if len(str)!=32:\r\n            rem=32-len(str)\r\n            str='0'*rem+str\r\n        str1=copy.deepcopy(str)\r\n        str1=list(x for x in str1)\r\n\r\n        if str[31]=='0':\r\n             str1[31]='0'\r\n        if str[31]=='1':\r\n            str1[31]='1'\r\n        if str[30]=='0':\r\n            str1[30]='1'\r\n        if str[30]=='1':\r\n            str1[30]='0'\r\n        ##print(str1)\r\n        str1=''.join(str1)\r\n        x=int(str1,2)\r\n        c.append(x)\r\nprint(*c)", "# cook your dish here\r\nn=int(input())\r\nl=list(map(int,input().split()))\r\nfor i in l:\r\n    if i==1:\r\n        print(3,end=' ')\r\n        continue\r\n    if i==2:\r\n        print(1,end=' ')\r\n        continue\r\n    s=list(bin(i)[2:])\r\n    if s[-2]=='1':\r\n        s[-2]='0'\r\n    else:\r\n        s[-2]='1'\r\n    x=int(''.join(s),2)\r\n    print(x,end=' ')\r\nprint()\r\n", "n=int(input())\r\na=list(map(int,input().rstrip().split()))\r\nans=[]\r\nfor i in a:\r\n    if i==2:\r\n        ans.append(1)\r\n    else:\r\n        ans.append(i^2)\r\nprint(*ans)", "\r\nlens = int(input())\r\narrs = [int(x) for x in input().split()]\r\nvals = []\r\nfor a in arrs:\r\n    if a != 2:\r\n        vals.append(2 ^ a)\r\n    else:\r\n        vals.append(3 ^ a)\r\nprint(*vals)", "n=int(input())\r\nl=list(map(int,input().split()))\r\nans=[]\r\nfor i in l:\r\n    if i==2:\r\n        ans.append(1)\r\n    else:\r\n        ans.append(i^2)\r\nprint(*ans)", "n=int(input())\r\nl=list(map(int,input().split()))\r\nans=[]\r\nfor i in l:\r\n    if i==2:\r\n        ans.append(1)\r\n    else:\r\n        ans.append(i^2)\r\nprint(*ans)", "from sys import stdin, stdout\nfrom math import floor, gcd, fabs, factorial, fmod, sqrt, inf, log\nfrom collections import defaultdict as dd, deque\nfrom heapq import merge, heapify, heappop, heappush, nsmallest\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nmod = pow(10, 9) + 7\nmod2 = 998244353\ndef inp(): return stdin.readline().strip()\ndef out(var, end=\"\\n\"): stdout.write(str(var)+\"\\n\")\ndef outa(*var, end=\"\\n\"): stdout.write(' '.join(map(str, var)) + end)\ndef lmp(): return list(mp())\ndef mp(): return map(int, inp().split())\ndef smp(): return map(str, inp().split())\ndef l1d(n, val=0): return [val for i in range(n)]\ndef l2d(n, m, val=0): return [l1d(n, val) for j in range(m)]\ndef remadd(x, y): return 1 if x%y else 0\ndef ceil(a,b): return (a+b-1)//b\n\ndef isprime(x):\n    if x<=1: return False\n    if x in (2, 3): return True\n    if x%2 == 0: return False\n    for i in range(3, int(sqrt(x))+1, 2):\n        if x%i == 0: return False\n    return True\n    \nn = int(inp())\narr = lmp()\nfor i in range(n):\n    if arr[i]==2:\n        print(1, end=\" \")\n    elif arr[i]^2<arr[i]:\n        print(arr[i]-2, end=\" \")\n    else:\n        print(arr[i]+2, end=\" \")\nprint()\n    ", "# cook your dish here\r\nn=int(input())\r\na=[int(i) for i in input().split()]\r\nfor i in a:\r\n    if i==1:\r\n        print(\"2\",'',end='')\r\n    elif i==2:\r\n        print(\"1\",'',end='')\r\n    else:\r\n        b=str(bin(i)).replace('0b','')\r\n        p=''\r\n        l=len(b)\r\n        if b[l-1]=='0':\r\n            p='0'\r\n        else:\r\n            p='1'\r\n        if b[l-2]=='0':\r\n            p='1'+p\r\n        else:\r\n            p='0'+p\r\n        for j in range(l-3,-1,-1):\r\n            p=b[j]+p\r\n        print(int(p,2),'',end='')\r\nprint()", "# cook your dish here\r\n# cook your dish here\r\ndef solve():\r\n  k = int(input())\r\n    #n,m = input().split()\r\n    #n = int(n)\r\n    #m = int(m)\r\n    #s = input()\r\n  a = list(map(int, input().split()))\r\n  #print(a)\r\n  for i in range(k):\r\n    n2=-1\r\n    if a[i]==1 :n2 =3\r\n    elif a[i]==2 :n2 =1\r\n    else:\r\n      b = bin(a[i]).replace(\"0b\",\"\")\r\n      n = len(b)\r\n      #print(b)\r\n      if b[n-2]=='0': b=b[0:n-2]+'1'+b[n-1:]\r\n      else: b=b[0:n-2]+'0'+b[n-1:]\r\n      #print(b)\r\n      n2 = int(b,2)\r\n    #print(n2)\r\n    if i==k-1:print(n2,end=\"\")\r\n    else: print(n2,end=\" \")\r\n        \r\n            \r\n    \r\n    \r\ndef __starting_point():\r\n    #T = int(input())\r\n    #for i in range(T):\r\n        #a = solve()\r\n        #n = len(a)\r\n        #for i in range(n):\r\n         #   if i==n-1 : print(a[i])\r\n          #  else: print(a[i],end=\" \")\r\n        (solve())\n__starting_point()", "# cook your dish here\r\nn = int(input())\r\narr = list(map(int,input().split()))\r\nfor i in arr:\r\n\tif i == 2:\r\n\t\tprint(\"1\",end=\" \")\r\n\telse:\r\n\t\tprint(i^2,end=\" \")", "def func(lst):\r\n    for i in lst:\r\n        if i == 2:\r\n            print(i^3, end=' ')\r\n        else:\r\n            print(i^2, end=' ')\r\n\r\n\r\nn = int(input())\r\nlst = list(map(int, input().split()))\r\nfunc(lst)\r\n\r\n", "n=int(input())\r\nb=list(map(int,input().split()))\r\nres=[]\r\nfor j in range(n):\r\n    if b[j]!=2:\r\n        res.append(b[j]^2)\r\n\r\n    else:\r\n        res.append(b[j]^3)\r\n\r\nprint(*res)", "# author : Tapan Goyal\r\n#           MNIT Jaipur\r\n\r\nimport math\r\nimport bisect\r\nimport itertools\r\nimport sys\r\nI=lambda : sys.stdin.readline()\r\none=lambda : int(I())\r\nmore=lambda : map(int,I().split())\r\nlinput=lambda : list(more())\r\n\r\nmod=10**9 +7\r\ninf=10**18 + 1 \r\n\r\n'''fact=[1]*100001\r\nifact=[1]*100001\r\nfor i in range(1,100001):\r\n    fact[i]=((fact[i-1])*i)%mod\r\n    ifact[i]=((ifact[i-1])*pow(i,mod-2,mod))%mod\r\ndef ncr(n,r):\r\n    return (((fact[n]*ifact[n-r])%mod)*ifact[r])%mod\r\ndef npr(n,r):\r\n    return (((fact[n]*ifact[n-r])%mod))\r\n    '''\r\n\r\n\r\ndef merge(a,b):\r\n    i=0;j=0\r\n    c=0\r\n    ans=[]\r\n    while i<len(a) and j<len(b):\r\n        if a[i]<b[j]:\r\n            ans.append(a[i])\r\n            i+=1\r\n        else:\r\n            ans.append(b[j])\r\n            c+=len(a)-i\r\n            j+=1\r\n    ans+=a[i:]\r\n    ans+=b[j:]\r\n    return ans,c\r\ndef mergesort(a):\r\n    if len(a)==1:\r\n        return a,0\r\n    mid=len(a)//2   \r\n    left,left_inversion=mergesort(a[:mid])\r\n    right,right_inversion=mergesort(a[mid:])\r\n    m,c=merge(left,right)\r\n    c+=(left_inversion+right_inversion)\r\n    return m,c\r\n    \r\ndef is_prime(num):\r\n    if num == 1: return False\r\n    if num == 2: return True\r\n    if num == 3: return True\r\n    if num%2 == 0: return False\r\n    if num%3 == 0: return False\r\n    t = 5\r\n    a = 2\r\n    while t <= int(math.sqrt(num)):\r\n        if num%t == 0: return False\r\n        t += a\r\n        a = 6 - a\r\n    return True\r\n\r\n  \r\ndef ceil(a,b):\r\n    return (a+b-1)//b\r\n    \r\n\r\n\r\n#/////////////////////////////////////////////////////////////////////////////////////////////////\r\ndef __starting_point():\r\n    for _ in range(1):\r\n        n=one()\r\n        a=linput()\r\n        for i in a:\r\n            ans=i^2\r\n            if ans>0:\r\n                print(ans,end=\" \")\r\n            else:\r\n                print(i^3,end=\" \")\r\n                \r\n            \n__starting_point()", "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range (n):\n    num=a[i]\n    b.append(num)\n    num//=2\n    if num%2==1:\n        b[i]-=2\n    else:\n        b[i]+=2\n    if b[i]==0:\n        b[i]=1\nprint(*b)", "# cook your dish here\nn=int(input())\narr=list(map(int,input().split()))\nfor x in arr:\n    if x==2:\n        print(end='1 ')\n    else:\n        y=x%4\n        if y>1:\n            print(x-2,end=' ')\n        else:\n            print(x+2,end=' ')\nprint()\n", "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nfor i in a:\r\n    if i != 2:\r\n        print(i^2, end=' ')\r\n    else:\r\n        print(1, end=' ')\r\n\r\nprint()\r\n", "# cook your dish here\nn = int(input())\narr = [int(s) for s in input().split(\" \")]\nans = []\nfor x in arr:\n    if x == 2:\n        ans.append(1)\n    else:\n        ans.append(x^2)\nprint(*ans)", "n = int(input())\n\ndef foo(n):\n    if int(n)==2:\n        return str(2^3)\n    return str(int(n)^2)\n\ndata = list(map(foo, input().split()))\n\nprint(' '.join(data))\n", "import sys\r\ndef get_ints(): return map(int, sys.stdin.readline().strip().split())\r\ndef get_int(): return list(map(int, sys.stdin.readline().strip().split()))[0]\r\ndef get_list(): return list(map(int, sys.stdin.readline().strip().split()))\r\ndef get_string(): return sys.stdin.readline().strip()\r\n\r\nN = 0\r\na = []\r\n\r\ndef solve():\r\n    nonlocal N\r\n    N = get_int()\r\n    a = get_list()\r\n    for i in a:\r\n        if i == 2:\r\n            print(1, end=' ')\r\n        else:\r\n            print(i ^ 2, end=' ')\r\n    print()\r\n\r\ntest_cases = 1 # get_int()\r\n\r\nfor _ in range(test_cases):\r\n    solve()\r\n", "from sys import stdin, stdout\r\n# #from collections import Counter\r\n# n = int(stdin.readline())\r\n# #l = list(map(int, stdin.readline().split()))\r\n# #l = [int(stdin.readline()) for _ in range(n)]\r\n# #a, b = input().split()\r\n# for _ in range(n):\r\nn1 = int(stdin.readline())\r\nl = list(map(int, stdin.readline().split()))\r\nfor x in l:\r\n    if x!=2:\r\n        print(x^2,end=' ')\r\n    else:\r\n        print(1,end=' ')\r\nprint()", "n=int(input())\r\nl=list(map(int,input().split()))\r\nans=[]\r\nfor i in l:\r\n    x=i^2\r\n    if x==0:\r\n        ans.append(i^3)\r\n    else:\r\n        ans.append(x)\r\nprint(*ans)\r\n"]