["import math\n\n\nt = int(input().strip())\n\nfor _ in range(t):\n n, m = list(map(int, input().strip().split()))\n a = []\n v = [-1] * 4\n\n for i in range(n):\n  a.append(input().strip())\n\n for i, ai in enumerate(a):\n  if ai.find('*') > -1:\n   v[2] = i\n   break\n\n if v[2] == -1:\n  print(0)\n else:\n\n  for i, ai in reversed(list(enumerate(a))):\n   if ai.find('*') > -1:\n    v[3] = i\n    break\n\n  for i in range(m):\n   x = [ai[i] for ai in a]\n   if '*' in x:\n    v[0] = i\n    break\n\n  for i in reversed(range(m)):\n   x = [ai[i] for ai in a]\n   if '*' in x:\n    v[1] = i\n    break\n\n  if v.count(v[0]) == len(v):\n   print(1)\n  else:\n   print(int(math.ceil(max(v[3] - v[2], v[1] - v[0]) / 2.0)) + 1)", "import math\n\n\nt = int(input().strip())\n\nfor _ in range(t):\n n, m = list(map(int, input().strip().split()))\n a = []\n v = [-1] * 4\n\n for i in range(n):\n  a.append(input().strip())\n\n for i, ai in enumerate(a):\n  if ai.find('*') > -1:\n   v[2] = i\n   break\n\n if v[2] == -1:\n  print(0)\n else:\n\n  for i, ai in reversed(list(enumerate(a))):\n   if ai.find('*') > -1:\n    v[3] = i\n    break\n\n  for i in range(m):\n   x = [ai[i] for ai in a]\n   if '*' in x:\n    v[0] = i\n    break\n\n  for i in reversed(range(m)):\n   x = [ai[i] for ai in a]\n   if '*' in x:\n    v[1] = i\n    break\n\n  if v.count(v[0]) == len(v):\n   print(1)\n  else:\n   print(int(math.ceil(max(v[3] - v[2], v[1] - v[0]) / 2.0)) + 1)", "\n\nimport sys\n\n\nt=int(int(sys.stdin.readline().rstrip()))\nwhile t:\n t=t-1\n \n a,b=list(map(int,sys.stdin.readline().rstrip().split(' ')))\n li=[]\n lir=[]\n lic=[]\n for i in range(0,a):\n   li.append(sys.stdin.readline().rstrip())\n   if '*' in li[i]:\n    lir.append(i)\n    lic.append(li[i].find('*'))\n    lic.append(li[i].rfind('*'))\n \n if not lir:\n  print(0)\n else:\n  \n\n  r=int(int(max(lir))+int(min(lir)))/2\n  c=int(int(max(lic))+int(min(lic)))/2\n\n  ans=int(max((max(lir)-r),(max(lic)-c),(r-min(lir)),(c-min(lic))))\n\n  print(ans+1)\n", "for _ in range(int(input())):\n x,y=list(map(int,input().split()))\n p=q=c=0\n r=s=1001\n for i in range(x):\n  a=input()\n  for j in range(y):\n   if a[j]=='*':\n    c=1\n    #print i,j\n    if i>p:\n     p=i\n    if j>q:\n     q=j\n    if i<r:\n     r=i\n    if j<s:\n     s=j\n g=p-((p+r)//2)\n h=q-((q+s)//2)\n if c:\n  c+=max(g,h)\n print(c)", "\n\nimport fractions\nimport sys\n\nf = sys.stdin\n\nif len(sys.argv) > 1:\n f = open(sys.argv[1], \"rt\")\n\ndef calc(rows):\n min_x = 10000\n min_y = 10000\n max_x = -1\n max_y = -1\n\n count = 0\n for y, row in enumerate(rows):\n  for x, ch in enumerate(row):\n   if ch == '*':\n    count += 1\n    min_x = min(min_x, x)\n    min_y = min(min_y, y)\n    max_x = max(max_x, x)\n    max_y = max(max_y, y)\n\n if count == 0:\n  return 0\n return 1 + max(max_x - min_x + 1, max_y - min_y + 1) // 2\n\nT = int(f.readline().strip())\n\nfor case_id in range(1, T+1):\n n, m = list(map(int, f.readline().strip().split()))\n\n rows = []\n for i in range(n):\n  rows.append(f.readline().strip())\n\n r = calc(rows)\n\n print(r)\n", "import math\nt=eval(input())\nwhile t>0:\n n,m=list(map(int,input().split()))\n f=[]\n min_x,max_x,min_y,max_y=1001,-1,1001,-1\n for x in range(n):\n  f.append(input().strip())\n for i in range(n):\n  for j in range(m):\n   if f[i][j]=='*':\n    if min_x>i:\n     min_x=i\n    if max_x<i:\n     max_x=i\n    if min_y>j:\n     min_y=j\n    if max_y<j:\n     max_y=j\n    #print 'min_x=',min_x,'min_y=',min_y,'max_x=',max_x,'max_y='\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0,max_y\n if max_x==-1 or min_x==1001 or max_y==-1 or max_y==1001:\n  print(0)\n else:\n  dx=max_x-min_x\n  dy=max_y-min_y\n  res=0\n  if dx>dy:\n   res=int(math.ceil(dx/2.0))+1\n  else:\n   res=int(math.ceil(dy/2.0))+1\n  if res>0:\n   print(res)\n  else:\n   print(res)\n t-=1\n", "t=eval(input())\nfor qq in range(t):\n n,m=list(map(int,input().split()))\n count=0\n xmin,xmax,ymin,ymax=n+1,-1,m+1,-1\n for i in range(n):\n  s=input()\n  for j in range(m):\n   if s[j]==\"*\":   #coordinates=i,j\n    count+=1\n    if i<xmin:xmin=i\n    else:\n     if i>xmax:xmax=i\n    if j<ymin:ymin=j\n    else:\n     if j>ymax:ymax=j\n if count==0:print(0)\n else:\n  if count==1:print(1)\n  else:\n  #   print \"xmax,xmin,ymax,ymin\",xmax,xmin,ymax,ymin\n   num=max((xmax-xmin),(ymax-ymin))\n   if num&1==0:print((num/2)+1)\n   else:print((num/2)+2)", "t = int(input())\nfor i in range(t):\n nm = str(input()).split()\n n = int(nm[0])\n m = int(nm[1])\n up = n\n dn = -1\n l = m\n r = -1\n for j in range(n):\n  inp = str(input())\n  if '*' in inp:\n   p1 = inp.find('*')\n   p2t = (inp[::-1]).find('*')\n   p2 = m-p2t-1\n   if j<up:\n    up = j\n   if j>dn:\n    dn = j\n   if p1<l:\n    l = p1\n   if p2>r:\n    r = p2\n if dn == -1:\n  print(0)\n else:\n  r1 = (dn-up)/2 + (dn-up)%2 + 1\n  r2 = (r-l)/2 + (r-l)%2 + 1\n  print(max(r1,r2))"]