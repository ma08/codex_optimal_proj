["def shades_of_grey(n):\n  if n > 254:\n    n = 254\n  return [\"#%02x%02x%02x\" % (i,i,i) for i in range(1,n+1)]", "def shades_of_grey(n):\n    return [ '#{0:02x}{0:02x}{0:02x}'.format(i+1) for i in range(min(254, n)) ]", "form = '#'+'{0:0>2}'*3\nshades_of_grey=lambda n:[form.format(hex(i)[2:])for i in range(1,min(n+1,255))]", "def shades_of_grey(n):\n    if n > 254: n = 254\n    return([\"#\"+\"{:02x}\".format(i)*3 for i in range(1,n+1)])", "def shades_of_grey(n):\n  n = min(n, 254)\n  return ['#'+format(i, '02x')*3 for i in range(1, n+1)]", "def shades_of_grey(n):\n    if n <= 0:\n        return []\n    return ['#{0:02x}{0:02x}{0:02x}'.format(n) for n in range(1, min(n, 254) + 1)]", "def shades_of_grey(n):\n    return [\n        '#{0}{0}{0}'.format('{0:02x}'.format(i))\n        for i in range(1, 1 + max(0, min(n, 254)))]\n", "def shades_of_grey(n):\n    return ['#' + hex(x)[2:].zfill(2) * 3 for x in range (1, min(n + 1, 255))]\n"]