["from bisect import bisect_left, bisect\n\nss = set('13579')\nns = [i ** 3 for i in range(1, int((10 ** 17) ** (1/3)) + 3, 2) if set(str(i ** 3)) <= ss]\nns = [-n for n in ns[::-1]] + ns\n\ndef odd_dig_cubic(a, b):\n    return ns[bisect_left(ns, a):bisect(ns, b)]", "import math\n\ndef odd_dig_cubic(a, b):\n  ret = []\n  st = int(math.ceil(abs(a)**(1.0/3.0)))\n  en = int(abs(b)**(1.0/3.0))\n  if a < 0: st *= -1\n  if b < 0: en *= -1\n  for i in range(st,en):\n    c = i**3\n    if any(j in '02468' for j in str(c)): continue\n    ret += [c]\n  return ret", "s,hh=-464148,[]\n\nwhile s<464159:\n  v=s**3\n  sv,b=str(v),1\n  for c in sv: \n    if not c in '-13579': b=0; break\n  if b: hh.append(v)\n  s+=1\n \ndef odd_dig_cubic(a, b):\n    r=[]\n    for i in hh:\n      if i>=a:\n        if i<=b: r.append(i)\n        else: break\n    return r", "CUBICS = [1, 1331, 3375, 35937, 59319, 357911, 753571, 5177717, 5359375, 5735339, 9393931, 17373979, 37595375, 37159393753, 99317171591, 175333911173, 397551775977, 1913551573375, 9735913353977, 11997979755957, 17171515157399, 335571975137771, 1331399339931331, 1951953359359375, 7979737131773191, 11751737113715977, 13337513771953951]\nCUBICS = [-x for x in reversed(CUBICS)] + CUBICS\n\ndef odd_dig_cubic(a, b):\n    return [x for x in CUBICS if a <= x <= b]\n", "odd_dig_cubic=lambda a,b:[n**3for n in range(int(a//abs(a or 1)*abs(a)**3**-1)|1,int(b//abs(b or 1)*abs(b)**3**-1)|1+2,2)if a<=n**3<=b and set(str(n**3))<=set('-13579')]", "import re\nM=[M**3 for M in range(1,2000000) if re.match('[13579]+$',str(M**3))]\nM=sorted(M+[-M for M in M])\nodd_dig_cubic=lambda Q,S:[V for V in M if Q <= V <= S]", "def odd_dig_cubic(a, b):\n    A = [-355519351557373375, -119397111955573375, -99133919737193375, -13337513771953951, -11751737113715977, -7979737131773191, -1951953359359375, -1331399339931331, -335571975137771, -17171515157399, -11997979755957, -9735913353977, -1913551573375, -397551775977, -175333911173, -99317171591, -37159393753, -37595375, -17373979, -9393931, -5735339, -5359375, -5177717, -753571, -357911, -59319, -35937, -3375, -1331, -1, 1, 1331, 3375, 35937, 59319, 357911, 753571, 5177717, 5359375, 5735339, 9393931, 17373979, 37595375, 37159393753, 99317171591, 175333911173, 397551775977, 1913551573375, 9735913353977, 11997979755957, 17171515157399, 335571975137771, 1331399339931331, 1951953359359375, 7979737131773191, 11751737113715977, 13337513771953951, 99133919737193375, 119397111955573375, 355519351557373375]\n    return [i for i in A if a<=i<=b]", "def get_podpc():\n    r=[]\n    x=1\n    while (x*x*x<=1e17):\n        y=x*x*x\n        if all(int(d)%2==1 for d in str(y)):\n            r.append(y)\n        x+=2\n    return sorted([-1*x for x in r]+r)\n\narr=get_podpc()\n\ndef odd_dig_cubic(a, b):\n    return [x for x in arr if a<=x<=b]", "def int_root3(x):\n    x3 = int(x**(1/3))\n    while (x3+1)**3 < x:\n        x3+=1\n    return x3\n\ndef odd_dig_cubic(a, b):\n    if 0<=a<=b:\n        left = (int_root3(a)+1) | 1\n        right = int_root3(b) | 1\n    elif a<=0<=b:\n        left = 1\n        right = int_root3(b) | 1\n    else: #a<=b<=0\n        left = (int_root3(abs(b))+1) | 1\n        right = int_root3(abs(a)) | 1\n    result = []\n    for i in range(left,right+1,2):\n        i3 = i**3\n        if set(str(i3))<=set('13579'):\n            if a<=i3<=b:\n                result.append(i3)\n            if a<=-i3<=b:\n                result.append(-i3)\n    return sorted(result)"]