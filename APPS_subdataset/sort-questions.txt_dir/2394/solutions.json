["for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    st = 0\n    fans = 0\n    for x in s:\n        if x == ')':\n            st -= 1\n        else:\n            st += 1\n        if st < 0:\n            fans += 1\n            st = 0\n    print(fans)", "import sys\n# sys.setrecursionlimit(10**6) \ninput=sys.stdin.readline\nt=int(input())\nfor t1 in range(t):\n    n=int(input())\n    s=input()\n    s=s.strip()\n    l=[]\n    l.append(s[0])\n    for i in range(1,n):\n        if(s[i]==\")\" and len(l)>0 and l[-1]==\"(\"):\n            l.pop()\n        else:\n            l.append(s[i])\n    print(len(l)//2)\n\n\n", "# for _ in range(1):\nfor _ in range(int(input())):\n    # a, b = map(int, input().split())\n    n = int(input())\n    # arr = list(map(int, input().split()))\n    s = input()\n    bal = 0\n    minbal = 0\n    for i in range(n):\n        if s[i] == ')':\n            bal -= 1\n        else:\n            bal += 1\n        minbal = min(minbal, bal)\n    print(-minbal)", "for i in range(int(input())):\n\tn=int(input())\n\ts=input()\n\tstack=[]\n\tj=0\n\tcount=0\n\tans=0\n\twhile j<len(s):\n\t\tif count==0 and s[j]==')':\n\t\t\ts+=')'\n\t\t\tans+=1\n\t\telif count>=0 and s[j]=='(':\n\t\t\tcount+=1\n\t\telse:\n\t\t\tcount-=1\n\t\tj+=1\n\tprint(ans)", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(input())\n    kek = 0\n    ans = 0\n    for i in range(n):\n        if ar[i] == '(':\n            kek += 1\n        else:\n            kek -= 1\n        if kek < 0:\n            kek += 1\n            ans += 1\n    print(ans)", "def unbalancing(s):\n    x = 0\n    retvalue = 0\n    for c in s:\n        if c == '(':\n            x += 1\n        else:\n            x -= 1\n        retvalue = min(retvalue, x)\n    return retvalue\n\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    print(-unbalancing(s))\n", "for testcase in range(int(input())):\n    n = int(input())\n    s = input().strip()\n    ans = 0\n    sum = 0\n    for ch in s:\n        if ch == '(':\n            sum += 1\n        else:\n            sum -= 1\n        ans = max(ans, -sum)\n    print(ans)\n", "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    S=input().strip()\n\n    MIN=0\n    NOW=0\n    for s in S:\n        if s==\"(\":\n            NOW+=1\n        else:\n            NOW-=1\n            MIN=min(NOW,MIN)\n\n    print(-MIN)\n\n    \n", "# Created by: WeirdBugsButOkay\n# 28-06-2020, 20:12:37\n\nimport math\n\ndef solve() :\n    n = int(input())\n    s = input()\n    #n = len(s)\n    bal = 0\n    ans = 0\n    for i in range (0, n) :\n        if s[i] == '(' :\n            bal += 1\n        else :\n            bal -= 1\n            ans = max(ans, -bal)\n    print(ans)\n\nt = 1\nt = int(input())\nfor _ in range (0, t) :\n    solve()\n", "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\nM = mod = 998244353\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n \ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\n\n\nfor _ in range(val()):\n    n = val()\n    s = st()\n    open = 0\n    ans = 0\n    for i in s:\n        if i == '(':\n            open += 1\n        elif open > 0:\n            open -= 1\n        else:\n            ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input().strip()\n    curr = 0\n    out = 0\n    for c in s:\n        if c == '(':\n            curr += 1\n        else:\n            if curr:\n                curr -= 1\n            else:\n                out += 1\n    print(out)\n\n", "\na=int(input())\nfor i in range(a):\n    r=int(input())\n    s=input()\n    score=0\n    count=0\n    for i in range(len(s)):\n        if(s[i]==')'):\n            score-=1\n            if(score<0):\n                score=0\n                count+=1\n        else:\n            score+=1\n    print(count)\n", "t = int(input())\nfor case in range(t):\n    n = int(input())\n    s = input()\n    low = 0\n    ht = 0\n    for i in range(n):\n        if s[i] == ')':\n            ht -= 1\n        else:\n            ht += 1\n        low = min(low, ht)\n    ans = -low\n    print(ans)", "\ntt = int(input())\n\nfor loop in range(tt):\n\n    n = int(input())\n    s = input()\n    d = 0\n\n    ans = 0\n    for i in s:\n        if i == \"(\":\n            d += 1\n        else:\n            d -= 1\n\n        if d < 0:\n            ans += 1\n            d = 0\n\n    print (ans)\n", "import sys\ninput = sys.stdin.readline\nfrom  math import ceil\n\nanswer = []\nfor kek in range(int(input())):\n    n = int(input())\n    s = input()\n    a = 0\n    m = 0\n    for i in s:\n        if i == '(':\n            a += 1\n        if i == ')':\n            a -= 1\n        m = min(a, m)\n    answer.append(-m)\nprint(*answer, sep='\\n')\n", "t = int(input())\nfor _ in range(t):\n\tn = int(input())\n\ts = list(input())\n\tp = [0]\n\tfor x in s:\n\t\tif x == '(':\n\t\t\tp.append(p[-1] + 1)\n\t\telse:\n\t\t\tp.append(p[-1] - 1)\n\tprint(-min(p))\n", "def solve():\n    n = int(input())\n    s = input()\n    n1 = 0\n    for i in s:\n        if i == \"(\":\n            n1 += 1\n        else:\n            n1 -= 1\n        n1 = max(n1, 0)\n    print(n1)\nfor i in range(int(input())):\n    solve()", "t=int(input())\ndef fun(n,a):\n    ans=0\n    count=0\n    i=0\n    while i<n:\n        if a[i]==\"(\":\n            count+=1\n        else:\n            count-=1\n        i+=1\n        if count<0:\n            ans+=1\n            count+=1\n    print(int(ans))\nwhile t:\n    t-=1\n    n=int(input())\n    a=input()\n    fun(n,a)\n", "for nt in range(int(input())):\n\tn = int(input())\n\ts = input()\n\tstack = []\n\tans = 0\n\tfor i in range(n):\n\t\tif len(stack)==0:\n\t\t\tif s[i]==\")\":\n\t\t\t\ts += \")\"\n\t\t\t\tans += 1\n\t\t\telse:\n\t\t\t\tstack.append(\"(\")\n\t\telse:\n\t\t\tif s[i]==\")\":\n\t\t\t\tstack.pop()\n\t\t\telse:\n\t\t\t\tstack.append(\"(\")\n\tprint (ans)", "t=int(input())\nfor you in range(t):\n    n=int(input())\n    s=input()\n    curr=0\n    ans=0\n    for i in s:\n        if(i=='('):\n            curr+=1\n        else:\n            curr-=1\n        if(curr<0):\n            ans+=1\n            curr=0\n    print(ans)\n", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n\n    left = 0\n    ans = 0\n    for x in s:\n        if x == '(':\n            left += 1\n        else:\n            if left > 0:\n                left -= 1\n            else:\n                ans += 1\n\n    print(ans)\n", "for _ in range(int(input())):\n    n=int(input())\n    s=input()\n    q=0\n    ans=0\n    for i in s:\n        if i=='(':q+=1\n        else:\n            if q>0:q-=1\n            else:ans+=1\n    print(ans)", "from collections import deque\nimport sys\ndef inp():\n    return sys.stdin.readline().strip()\nfor _ in range(int(inp())):\n    n=int(inp())\n    s=inp()\n    ct=0\n    mn=0\n    for i in s:\n        if i=='(':\n            ct+=1 \n        else:\n            ct-=1\n        mn=min(ct,mn)\n    print(abs(mn))"]