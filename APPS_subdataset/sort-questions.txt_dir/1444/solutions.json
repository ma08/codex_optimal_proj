["for _ in range(int(input())):\r\n\tnum=int(input())\r\n\tarr=list(map(int,input().split()))\r\n\tdp=[0]*num\r\n\tdp[0]=1\r\n\tans=1\r\n\tj=0\r\n\tfor i in range(1,num):\r\n\t\tj=i+1\r\n\t\tcount=1\r\n\t\tdp[i]=dp[i-1]%1000000007\r\n\t\tif i-2>=0 and arr[i-2]==2:\r\n\t\t\tdp[i]+=dp[i-2]%1000000007\r\n\t\t\tif i-3>=0 and arr[i-3]==2:\r\n\t\t\t\tdp[i]+=dp[i-3]\r\n\t\tans+=dp[i]%1000000007\r\n\t\tif arr[i-1]==2 and i<num-1:\r\n\t\t\tif i>=j or j==0:\r\n\t\t\t\tj=i+1\r\n\t\t\twhile j<num and arr[j]==2:\r\n\t\t\t   \tj+=1\r\n\t\t\tcount=j-i\r\n\t\t\twhile j<len(arr) and arr[j]==2:\r\n\t\t\t\tj+=1\r\n\t\t\t\tcount+=1\r\n\t\t\tif j==num:\r\n\t\t\t\tans+=dp[i-1]*(count-1)%1000000007\r\n\t\t\telif count%2!=0:\r\n\t\t\t\tif j<num-1 and arr[j+1]==2:\r\n\t\t\t\t\tans+=dp[i-1]*(count+1)%1000000007\r\n\t\t\t\telse:\r\n\t\t\t\t\tans+=dp[i-1]*(count)%1000000007\r\n\t\t\telif count%2==0:\r\n\t\t\t\tans+=dp[i-1]*(count-1)%1000000007\r\n\tprint(ans%1000000007)\r\n\r\n\r\n", "for _ in range(int(input())):\r\n\tnum=int(input())\r\n\tarr=list(map(int,input().split()))\r\n\tdp=[0]*num\r\n\tdpr=[0]*num\r\n\tdpt=[0]*num\r\n\tdp[0]=1\r\n\tdpr[0]=0\r\n\tans=1\r\n\tj=0\r\n\tfor i in range(1,num):\r\n\t\tdp[i]=dp[i-1]%1000000007\r\n\t\tif i-2>=0 and arr[i-2]==2:\r\n\t\t\tdp[i]+=dp[i-2]%1000000007\r\n\t\t\tif i-3>=0 and arr[i-3]==2:\r\n\t\t\t\tdp[i]+=dp[i-3]%1000000007\r\n\t\tif arr[i-1]==2 and i<num-1:\r\n\t\t\tif i>=j or j==0:\r\n\t\t\t\tj=i+1 \r\n\t\t\t\twhile j<num and arr[j]==2:\r\n\t\t\t\t\tj+=1\r\n\t\t\tcount=j-i\r\n\t\t\tif j==num:\r\n\t\t\t\tdpr[i]=dp[i-1]*(count-1)%1000000007\r\n\t\t\telif count%2!=0:\r\n\t\t\t\tif j<num-1 and arr[j+1]==2:\r\n\t\t\t\t\tdpr[i]=dp[i-1]*(count+1)%1000000007\r\n\t\t\t\telse:\r\n\t\t\t\t\tdpr[i]=dp[i-1]*(count)%1000000007\r\n\t\t\telif count%2==0:\r\n\t\t\t\tdpr[i]=dp[i-1]*(count-1)%1000000007\r\n\t\tans+=(dpr[i]+dp[i])%1000000007\r\n\tprint(ans%1000000007)\r\n\r\n\r\n\r\n\r\n\t\t\t", "for _ in range(int(input())):\r\n\tnum=int(input())\r\n\tarr=list(map(int,input().split()))\r\n\tdp=[0]*num\r\n\tdp[0]=1\r\n\tans=1\r\n\tj=0\r\n\tfor i in range(1,num):\r\n\t\tj=i+1\r\n\t\tcount=1\r\n\t\tdp[i]=dp[i-1]\r\n\t\tif i-2>=0 and arr[i-2]==2:\r\n\t\t\tdp[i]+=dp[i-2]\r\n\t\t\tif i-3>=0 and arr[i-3]==2:\r\n\t\t\t\tdp[i]+=dp[i-3]\r\n\t\tans+=dp[i]%1000000007\r\n\t\tif arr[i-1]==2 and i<num-1:\r\n\t\t\tif i>=j or j==0:\r\n\t\t\t\tj=i+1\r\n\t\t\twhile j<num and arr[j]==2:\r\n\t\t\t   \tj+=1\r\n\t\t\tcount=j-i\r\n\t\t\twhile j<len(arr) and arr[j]==2:\r\n\t\t\t\tj+=1\r\n\t\t\t\tcount+=1\r\n\t\t\tif j==num:\r\n\t\t\t\tans+=dp[i-1]*(count-1)%1000000007\r\n\t\t\telif count%2!=0:\r\n\t\t\t\tif j<num-1 and arr[j+1]==2:\r\n\t\t\t\t\tans+=dp[i-1]*(count+1)%1000000007\r\n\t\t\t\telse:\r\n\t\t\t\t\tans+=dp[i-1]*(count)%1000000007\r\n\t\t\telif count%2==0:\r\n\t\t\t\tans+=dp[i-1]*(count-1)%1000000007\r\n\tprint(ans%1000000007)\r\n\r\n\r\n", "for _ in range(int(input())):\r\n\tnum=int(input())\r\n\tarr=list(map(int,input().split()))\r\n\tdp=[0]*num\r\n\tdp[0]=1\r\n\tans=1\r\n\tfor i in range(1,num):\r\n\t\tj=i+1\r\n\t\tcount=1\r\n\t\tdp[i]=dp[i-1]\r\n\t\tif i-2>=0 and arr[i-2]==2:\r\n\t\t\tdp[i]+=dp[i-2]\r\n\t\t\tif i-3>=0 and arr[i-3]==2:\r\n\t\t\t\tdp[i]+=dp[i-3]\r\n\t\tans+=dp[i]%1000000007\r\n\t\tif arr[i-1]==2 and i<num-1:\r\n\t\t\twhile j<len(arr) and arr[j]==2:\r\n\t\t\t\tj+=1\r\n\t\t\t\tcount+=1\r\n\t\t\tif j==num:\r\n\t\t\t\tans+=dp[i-1]*(count-1)%1000000007\r\n\t\t\telif count%2!=0:\r\n\t\t\t\tif j<num-1 and arr[j+1]==2:\r\n\t\t\t\t\tans+=dp[i-1]*(count+1)%1000000007\r\n\t\t\t\telse:\r\n\t\t\t\t\tans+=dp[i-1]*(count)%1000000007\r\n\t\t\telif count%2==0:\r\n\t\t\t\tans+=dp[i-1]*(count-1)%1000000007\r\n\tprint(ans%1000000007)\r\n\r\n\r\n\r\n\r\n\t\t\t", "for _ in range(int(input())):\r\n\tnum=int(input())\r\n\tarr=list(map(int,input().split()))\r\n\tdp=[0]*num\r\n\tdp[0]=1\r\n\tans=1\r\n\tfor i in range(1,num):\r\n\t\tj=i+1\r\n\t\tcount=1\r\n\t\tdp[i]=dp[i-1]\r\n\t\tif i-2>=0 and arr[i-2]==2:\r\n\t\t\tdp[i]+=dp[i-2]\r\n\t\t\tif i-3>=0 and arr[i-3]==2:\r\n\t\t\t\tdp[i]+=dp[i-3]\r\n\t\tans+=dp[i]%1000000007\r\n\t\tif arr[i-1]==2 and i<num-1:\r\n\t\t\twhile j<len(arr) and arr[j]==2:\r\n\t\t\t\tj+=1\r\n\t\t\t\tcount+=1\r\n\t\t\tif j==num:\r\n\t\t\t\tans+=dp[i-1]*(count-1)%1000000007\r\n\t\t\telif count%2!=0:\r\n\t\t\t\tif j<num-1 and arr[j+1]==2:\r\n\t\t\t\t\tans+=dp[i-1]*(count+1)%1000000007\r\n\t\t\t\telse:\r\n\t\t\t\t\tans+=dp[i-1]*(count)%1000000007\r\n\t\t\telif count%2==0:\r\n\t\t\t\tans+=dp[i-1]*(count-1)%1000000007\r\n\tprint(ans)\r\n\r\n\r\n\r\n\r\n\t\t\t", "for _ in range(int(input())):\r\n\tnum=int(input())\r\n\tarr=list(map(int,input().split()))\r\n\tdp=[0]*num\r\n\tdp[0]=1\r\n\tans=1\r\n\tfor i in range(1,num):\r\n\t\tj=i+1\r\n\t\tcount=1\r\n\t\tdp[i]=dp[i-1]\r\n\t\tif i-2>=0 and arr[i-2]==2:\r\n\t\t\tdp[i]+=dp[i-2]\r\n\t\t\tif i-3>=0 and arr[i-3]==2:\r\n\t\t\t\tdp[i]+=dp[i-3]\r\n\t\tans+=dp[i]%1000000007\r\n\t\tif arr[i-1]==2 and i<num-1:\r\n\t\t\twhile j<len(arr) and arr[j]==2:\r\n\t\t\t\tj+=1\r\n\t\t\t\tcount+=1\r\n\t\t\tif j==num:\r\n\t\t\t\tans+=dp[i-1]*(count-1)%1000000007\r\n\t\t\telif count%2!=0:\r\n\t\t\t\tif j<num-1 and arr[j+1]==2:\r\n\t\t\t\t\tans+=dp[i-1]*(count+1)%1000000007\r\n\t\t\t\telse:\r\n\t\t\t\t\tans+=dp[i-1]*(count)%1000000007\r\n\t\t\telif count%2==0:\r\n\t\t\t\tans+=dp[i-1]*(count-1)%1000000007\r\n\tprint(ans%1000000007)\r\n\r\n\r\n\r\n\r\n\t\t\t", "for _ in range(int(input())):\r\n\tnum=int(input())\r\n\tarr=list(map(int,input().split()))\r\n\tdp=[0]*num\r\n\tdp[0]=1\r\n\tans=1\r\n\tfor i in range(1,num):\r\n\t\tj=i+1\r\n\t\tcount=1\r\n\t\tdp[i]=dp[i-1]\r\n\t\tif i-2>=0 and arr[i-2]==2:\r\n\t\t\tdp[i]+=dp[i-2]\r\n\t\t\tif i-3>=0 and arr[i-3]==2:\r\n\t\t\t\tdp[i]+=dp[i-3]\r\n\t\tans+=dp[i]\r\n\t\tif arr[i-1]==2 and i<num-1:\r\n\t\t\twhile j<len(arr) and arr[j]==2:\r\n\t\t\t\tj+=1\r\n\t\t\t\tcount+=1\r\n\t\t\tif j==num:\r\n\t\t\t\tans+=dp[i-1]*(count-1)\r\n\t\t\telif count%2!=0:\r\n\t\t\t\tif j<num-1 and arr[j+1]==2:\r\n\t\t\t\t\tans+=dp[i-1]*(count+1)\r\n\t\t\t\telse:\r\n\t\t\t\t\tans+=dp[i-1]*(count)\r\n\t\t\telif count%2==0:\r\n\t\t\t\tans+=dp[i-1]*(count-1)\r\n\tprint(ans)\r\n\r\n\r\n\r\n\r\n\t\t\t", "for _ in range(int(input())):\r\n\tnum=int(input())\r\n\tarr=list(map(int,input().split()))\r\n\tdp=[0]*len(arr)\r\n\tdpr=[0]*len(arr)\r\n\tdpt=[0]*len(arr)\r\n\tdp[0]=1\r\n\tdpr[0]=0\r\n\tans=1\r\n\tfor i in range(1,len(arr)):\r\n\t\tj=i+1\r\n\t\tcount=1\r\n\t\tdp[i]=dp[i-1]\r\n\t\tif i-2>=0 and arr[i-2]==2:\r\n\t\t\tdp[i]+=dp[i-2]\r\n\t\t\tif i-3>=0 and arr[i-3]==2:\r\n\t\t\t\tdp[i]+=dp[i-3]\r\n\t\tans+=dp[i]\r\n\t\tif arr[i-1]==2 and i<len(arr)-1:\r\n\t\t\twhile j<len(arr) and arr[j]==2:\r\n\t\t\t\tj+=1\r\n\t\t\t\tcount+=1\r\n\t\t\tif j==len(arr):\r\n\t\t\t\tans+=dp[i-1]*(count-1)\r\n\t\t\telif count%2!=0:\r\n\t\t\t\tif j<len(arr)-1 and arr[j+1]==2:\r\n\t\t\t\t\tans+=dp[i-1]*(count+1)\r\n\t\t\t\telse:\r\n\t\t\t\t\tans+=dp[i-1]*(count)\r\n\t\t\telif count%2==0:\r\n\t\t\t\tans+=dp[i-1]*(count-1)\r\n\tprint(ans)\r\n\r\n\r\n\r\n\r\n\t\t\t", "try:\r\n\tfor _ in range(int(input())):\r\n\t\tnum=int(input())\r\n\t\tarr=list(map(int,input().split()))\r\n\t\tdp=[0]*num\r\n\t\tdpr=[0]*num\r\n\t\tdpt=[0]*num\r\n\t\tdp[0]=1\r\n\t\tdpr[0]=0\r\n\t\tans=1\r\n\t\tfor i in range(1,num):\r\n\t\t\tj=i+1\r\n\t\t\tcount=1\r\n\t\t\tdp[i]=dp[i-1]\r\n\t\t\tif i-2>=0 and arr[i-2]==2:\r\n\t\t\t\tdp[i]+=dp[i-2]\r\n\t\t\t\tif i-3>=0 and arr[i-3]==2:\r\n\t\t\t\t\tdp[i]+=dp[i-3]\r\n\t\t\tif arr[i-1]==2 and i<num-1:\r\n\t\t\t\twhile j<num and arr[j]==2:\r\n\t\t\t\t\tj+=1\r\n\t\t\t\t\tcount+=1\r\n\t\t\t\tif j==num:\r\n\t\t\t\t\tdpr[i]=dp[i-1]*(count-1)\r\n\t\t\t\telif count%2!=0:\r\n\t\t\t\t\tif j<num-1 and arr[j+1]==2:\r\n\t\t\t\t\t\tdpr[i]=dp[i-1]*(count+1)\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\tdpr[i]=dp[i-1]*(count)\r\n\t\t\t\telif count%2==0:\r\n\t\t\t\t\tdpr[i]=dp[i-1]*(count-1)\r\n\t\t\tans+=dpr[i]+dp[i]\r\n\t\tprint(ans)\r\nexcept:\r\n\tpass\r\n\r\n\r\n\r\n\t\t\t", "# cook your dish here\r\nimport sys\r\nsys.setrecursionlimit(10**8)\r\ntry:\r\n    for _ in range(int(input())):\r\n        class mat(object):\r\n            limit=[]\r\n            arr=[]\r\n            num=0\r\n            ans=0\r\n        def passes(n,m):\r\n            if m>mat.num:\r\n                return\r\n            mat.ans+=1\r\n            mat.limit.append(m)\r\n            for i in range(1,mat.arr[m]+1):\r\n                if m-i>0 and n<mat.num-1 and not(m-i in mat.limit) :\r\n                    passes(n+1,m-i)\r\n                if m+i<mat.num  and n<mat.num-1 and not(m+i in mat.limit):\r\n                    passes(n+1,m+i)\r\n            mat.limit.pop()\r\n        mat.num=int(input())\r\n        mat.arr=[]*mat.num\r\n        mat.arr=list(map(int,input().split()))\r\n        passes(0,0)\r\n        print(mat.ans)\r\n        \r\nexcept:\r\n    pass", "# cook your dish here\r\ntry:\r\n    for _ in range(int(input())):\r\n        class mat(object):\r\n            game=[]\r\n            limit=[]\r\n            arr=[]\r\n            num=0\r\n            ans=0\r\n        def passes(n,m):\r\n            if m>mat.num:\r\n                return\r\n            mat.ans+=1\r\n            mat.limit.append(m)\r\n            for i in range(1,mat.arr[m]+1):\r\n                if m-i>0 and n<mat.num-1 and not(m-i in mat.limit) :\r\n                    passes(n+1,m-i)\r\n                if m+i<mat.num  and n<mat.num-1 and not(m+i in mat.limit):\r\n                    passes(n+1,m+i)\r\n            mat.limit.pop()\r\n        mat.num=int(input())\r\n        mat.arr=[]*mat.num\r\n        mat.arr=list(map(int,input().split()))\r\n        passes(0,0)\r\n        print(mat.ans)\r\n        \r\nexcept:\r\n    pass", "# cook your dish here\ntry:\n    for _ in range(int(input())):\n        class mat(object):\n        \tgame=[]\n        \tlimit=[]\n        def see(key):\n        \tfor i in range(len(mat.limit)-1,-1,-1):\n        \t\tif mat.limit[i]==key:\n        \t\t\treturn False\n        \treturn True\n        def passes(n,m,arr):\n        \tif m>len(arr) or n>len(arr):\n        \t\treturn\n        \tmat.game[n][m]+=1\n        \tmat.limit.append(m)\n        \tfor i in range(1,arr[m]+1):\n        \t\tif m-i>0 and n<len(arr)-1 and not(m-i in mat.limit) :\n        \t\t\tpasses(n+1,m-i,arr)\n        \t\tif m+i<len(arr)  and n<len(arr)-1 and not(m+i in mat.limit):\n        \t\t\tpasses(n+1,m+i,arr)\n        \tmat.limit.pop()\n        n=int(input())\n        arr=list(map(int,input().split()))\n        mat.game=[[0]*(len(arr)) for _ in range(len(arr))]\n        passes(0,0,arr)\n        ans=0\n        for i in mat.game:\n        \tans+=sum(i)\n        print(ans)\n        \nexcept:\n    pass", "for _ in range(int(input())):\r\n    n=int(input())\r\n    p=[int(o) for o in input().split()]\r\n    s=[0]*n\r\n    pr=[0]*n\r\n    s[n-1]=1\r\n    pr[n-1]=0\r\n    if n-2>=0:\r\n        s[n-2]=2\r\n        pr[n-2]=1\r\n    if n-3>=0:\r\n        s[n-3]=3\r\n        pr[n-3]=1\r\n        if p[n-3]==2:\r\n            s[n-3]+=2\r\n            pr[n-3]+=1\r\n    i=n-4\r\n    while i>=0:\r\n        s[i]=1\r\n        s[i]+=s[i+1]\r\n        pr[i]=1\r\n        if p[i]==2:\r\n            s[i]+=s[i+2]\r\n            s[i]+=1\r\n            pr[i]+=1\r\n            if p[i+3]==2:\r\n                s[i]+=pr[i+2]\r\n                pr[i]+=pr[i+2]\r\n            if p[i+1]==2:\r\n                s[i]+=s[i+3]\r\n        s[i]=s[i]%1000000007\r\n        pr[i]=pr[i]%1000000007\r\n        i-=1\r\n    print(s[0])", "import math;\r\nfrom math import log2,sqrt;\r\nimport sys;\r\nsys.setrecursionlimit(pow(10,6))\r\nimport collections\r\nfrom collections import defaultdict\r\nfrom statistics import median\r\ninf = float(\"inf\")\r\nmod=pow(10,9)+7\r\ndef give(l,n,index,visited):\r\n    if index<0 or index>=n:\r\n        return 0;\r\n    if visited[index]==1:\r\n        return 0;\r\n    visited[index]=1;\r\n    theta=1\r\n    # print(\"index is\",index)\r\n    for i in graph[index]:\r\n        theta+=give(l,n,i,visited.copy())\r\n\r\n    return theta;\r\n\r\nfor i in range(int(input())):\r\n    n=int(input())\r\n    l=list(map(int,input().split()))\r\n    visited=defaultdict(int)\r\n    graph=defaultdict(set)\r\n    for i in range(len(l)):\r\n        if l[i]==1:\r\n            graph[i].add(i-1)\r\n            graph[i].add(i+1)\r\n        else:\r\n            graph[i].add(i-2)\r\n            graph[i].add(i-1)\r\n            graph[i].add(i+1)\r\n            graph[i].add(i+2)\r\n    theta=give(l,n,0,visited.copy())\r\n\r\n    print(theta)\r\n\r\n\r\n\r\n", "# cook your dish here\n# cook your dish here\ndef array1(size):\n    return [0 for _ in range(size)]\n\n\ndef array2(rows, cols):\n    return [[0 for _ in range(cols)] for _ in range(rows)]\n\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    no_of_twos = array1(n + 1)\n    for i in range(n - 1, -1, -1):\n        if a[i] == 1:\n            no_of_twos[i] = 0\n        else:\n            no_of_twos[i] += 1\n            no_of_twos[i] += no_of_twos[i + 1]\n    dp = array1(n + 1)\n    dp[0] = 1\n    ans = 1\n    for i in range(1, n):\n        if i - 1 >= 0:\n            dp[i] += dp[i - 1]\n        if i - 2 >= 0 and a[i - 2] == 2:\n            dp[i] += dp[i - 2]\n        if i - 3 >= 0 and a[i - 3] == 2 and a[i - 2] == 2:\n            dp[i] += dp[i - 3]\n        dp[i] = dp[i] % 1000000007\n        ans += dp[i]\n        x = no_of_twos[i + 1]\n        if i + 1 < n and a[i - 1] == 2:\n            ans += (x * dp[i - 1])\n            if x % 2 == 0:\n                if i + x + 1 < n:\n                    ans += dp[i - 1]\n                if i + x + 2 < n and a[i + x + 2] == 2:\n                    ans += dp[i - 1]\n        ans = ans % 1000000007\n    print(ans % 1000000007)\n", "# cook your dish here\ndef array1(size):\n    return [0 for _ in range(size)]\n\n\ndef array2(rows, cols):\n    return [[0 for _ in range(cols)] for _ in range(rows)]\n\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    no_of_twos = array1(n + 1)\n    for i in range(n - 1, -1, -1):\n        if a[i] == 1:\n            no_of_twos[i] = 0\n        else:\n            no_of_twos[i] += 1\n            no_of_twos[i] += no_of_twos[i + 1]\n    dp = array1(n + 1)\n    dp[0] = 1\n    ans = 1\n    for i in range(1, n):\n        if i - 1 >= 0:\n            dp[i] += dp[i - 1]\n        if i - 2 >= 0 and a[i - 2] == 2:\n            dp[i] += dp[i - 2]\n        if i - 3 >= 0 and a[i - 3] == 2 and a[i - 2] == 2:\n            dp[i] += dp[i - 3]\n        dp[i] = dp[i] % 1000000007\n        ans += dp[i]\n        x = no_of_twos[i + 1]\n        if i + 1 < n and a[i - 1] == 2:\n            ans += (x * dp[i - 1])\n            if x % 2 == 0:\n                if i + x + 1 < n:\n                    ans += dp[i - 1]\n                if i + x + 2 < n and a[i + x + 2] == 2:\n                    ans += dp[i - 1]\n        ans = ans % 1000000007\n    print(ans % 1000000007)\n", "def array1(size):\r\n    return [0 for _ in range(size)]\r\n\r\n\r\ndef array2(rows, cols):\r\n    return [[0 for _ in range(cols)] for _ in range(rows)]\r\n\r\n\r\nt = int(input())\r\nfor _ in range(t):\r\n    n = int(input())\r\n    a = list(map(int, input().split()))\r\n    no_of_twos = array1(n + 1)\r\n    for i in range(n - 1, -1, -1):\r\n        if a[i] == 1:\r\n            no_of_twos[i] = 0\r\n        else:\r\n            no_of_twos[i] += 1\r\n            no_of_twos[i] += no_of_twos[i + 1]\r\n    dp = array1(n + 1)\r\n    dp[0] = 1\r\n    ans = 1\r\n    for i in range(1, n):\r\n        if i - 1 >= 0:\r\n            dp[i] += dp[i - 1]\r\n        if i - 2 >= 0 and a[i - 2] == 2:\r\n            dp[i] += dp[i - 2]\r\n        if i - 3 >= 0 and a[i - 3] == 2 and a[i - 2] == 2:\r\n            dp[i] += dp[i - 3]\r\n        dp[i] = dp[i] % 1000000007\r\n        ans += dp[i]\r\n        x = no_of_twos[i + 1]\r\n        if i + 1 < n and a[i - 1] == 2:\r\n            ans += (x * dp[i - 1])\r\n            if x % 2 == 0:\r\n                if i + x + 1 < n:\r\n                    ans += dp[i - 1]\r\n                if i + x + 2 < n and a[i + x + 2] == 2:\r\n                    ans += dp[i - 1]\r\n        ans = ans % 1000000007\r\n    print(ans % 1000000007)\r\n", "for i in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    dp=[0]*(n+3)\n    dp[0]=1\n    for i in range(1,n):\n        dp[i]=dp[i-1]\n        if i-2>=0 and a[i-2]==2:dp[i]+=dp[i-2]\n        if i-3>=0 and a[i-3]==2 and a[i-2]==2:dp[i]+=dp[i-3]\n    dpr=[0]*(n+3)\n    i1=[0]*n\n    i2=-1\n    for i in range(n-1,-1,-1):\n        i1[i]=i2\n        if a[i]==1:i2=i\n    for i in range(1,n-1):\n        if a[i-1]==1:continue\n        if i1[i]==-1:\n            i2=n-i-1\n            if i2%2:z=2*(i2//2)+1\n            else:z=i2\n        else:\n            i2=i1[i]-i-1\n            if not i2%2:\n                z=i2+1\n                if i1[i]+1 <n and a[i1[i]+1]==2:z+=1\n            else:z=2*(i2//2)+1\n        dpr[i]=z*dp[i-1]\n    c=0\n    for i in range(n):c+=dp[i]+dpr[i]\n    x=7+pow(10,9)\n    print(c%x)", "# cook your dish here\ndef f(x,ud,li):\n    if not ud:return 1\n    m=1\n    if x+1 in ud:\n        ud1=ud[:]\n        ud.remove(x+1)\n        m+=f(x+1,ud,li)\n        ud=ud1[:]\n    if x-1 in ud:\n        ud1=ud[:]\n        ud.remove(x-1)\n        m+=f(x-1,ud,li)\n        ud=ud1[:]\n    if li[x]==2:\n        if x+2 in ud:\n            ud1=ud[:]\n            ud.remove(x+2)\n            m+=f(x+2,ud,li)\n            ud=ud1[:]\n        if x-2 in ud:\n            ud1=ud[:]\n            ud.remove(x-2)\n            m+=f(x-2,ud,li)\n            ud=ud1[:]\n    return m\nfor i in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    ud=[]\n    for i in range(1,n):ud.append(i)\n    c=f(0,ud,a)\n    x=7+pow(10,9)\n    print(c%x)", "for _ in range(int(input())):\r\n    n=int(input())\r\n    p=[int(o) for o in input().split()]\r\n    s=[0]*n\r\n    pr=[0]*n\r\n    s[n-1]=1\r\n    pr[n-1]=0\r\n    if n-2>=0:\r\n        s[n-2]=2\r\n        pr[n-2]=1\r\n    if n-3>=0:\r\n        s[n-3]=3\r\n        pr[n-3]=1\r\n        if p[n-3]==2:\r\n            s[n-3]+=2\r\n            pr[n-3]+=1\r\n    i=n-4\r\n    while i>=0:\r\n        s[i]=1\r\n        s[i]+=s[i+1]\r\n        pr[i]=1\r\n        if p[i]==2:\r\n            s[i]+=s[i+2]\r\n            s[i]+=1\r\n            pr[i]+=1\r\n            if p[i+3]==2:\r\n                s[i]+=pr[i+2]\r\n                pr[i]+=pr[i+2]\r\n            if p[i+1]==2:\r\n                s[i]+=s[i+3]\r\n        s[i]=s[i]%1000000007\r\n        pr[i]=pr[i]%1000000007\r\n        i-=1\r\n    print(s[0])", "for _ in range(int(input())):\r\n    n=int(input())\r\n    p=[int(o) for o in input().split()]\r\n    s=[0]*n\r\n    pr=[0]*n\r\n    s[n-1]=1\r\n    pr[n-1]=0\r\n    if n-2>=0:\r\n        s[n-2]=2\r\n        pr[n-2]=1\r\n    if n-3>=0:\r\n        s[n-3]=3\r\n        pr[n-3]=1\r\n        if p[n-3]==2:\r\n            s[n-3]+=2\r\n            pr[n-3]+=1\r\n    i=n-4\r\n    while i>=0:\r\n        s[i]=1\r\n        s[i]+=s[i+1]\r\n        pr[i]=1\r\n        if p[i]==2:\r\n            s[i]+=s[i+2]\r\n            s[i]+=1\r\n            pr[i]+=1\r\n            if p[i+3]==2:\r\n                s[i]+=pr[i+2]\r\n                pr[i]+=pr[i+2]\r\n            if p[i+1]==2:\r\n                s[i]+=s[i+3]\r\n        s[i]=s[i]%1000000007\r\n        pr[i]=pr[i]%1000000007\r\n        i-=1\r\n    print(s[0])", "for _ in range(int(input())):\r\n    n=int(input())\r\n    p=[int(o) for o in input().split()]\r\n    s=[0]*n\r\n    pr=[0]*n\r\n    s[n-1]=1\r\n    pr[n-1]=0\r\n    if n-2>=0:\r\n        s[n-2]=2\r\n        pr[n-2]=1\r\n    if n-3>=0:\r\n        s[n-3]=3\r\n        pr[n-3]=1\r\n        if p[n-3]==2:\r\n            s[n-3]+=2\r\n            pr[n-3]+=1\r\n    i=n-4\r\n    while i>=0:\r\n        s[i]=1\r\n        s[i]+=s[i+1]\r\n        pr[i]=1\r\n        if p[i]==2:\r\n            s[i]+=s[i+2]\r\n            s[i]+=1\r\n            pr[i]+=1\r\n            if p[i+3]==2:\r\n                s[i]+=pr[i+2]\r\n                pr[i]+=pr[i+2]\r\n            if p[i+1]==2:\r\n                s[i]+=s[i+3]\r\n        s[i]=s[i]%1000000007\r\n        pr[i]=pr[i]%1000000007\r\n        i-=1\r\n    print(s[0])"]