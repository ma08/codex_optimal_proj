["def capitalize(s):\n    s = ''.join(c if i%2 else c.upper() for i,c in enumerate(s))\n    return [s, s.swapcase()]", "def capitalize(s):\n    result = ['','']\n    for i,c in enumerate(s):\n        result[0] += c.lower() if i % 2 else c.upper()\n        result[1] += c.upper() if i % 2 else c.lower()\n    return result", "def capitalize(s):\n    word = \"\"\n    output = []\n    for n in range(0, len(s)):\n      if n%2==0:\n        word = word+s[n].upper()\n      else:\n        word = word+s[n]\n    output.append(word)\n    output.append(word.swapcase())\n    return output", "def capitalize(s):\n    return [''.join(c if (k + i) % 2 else c.upper() for i, c in enumerate(s)) for k in [0, 1]]", "def capitalize(s):\n    arr, arr1 = list(s), list(s)\n    arr[::2], arr1[1::2] = s[::2].upper(), s[1::2].upper() \n    return [''.join(arr), ''.join(arr1)]", "def capitalize(s):\n    return [''.join(x if i % 2 else x.upper() for i, x in enumerate(s)), ''.join(x.upper() if i % 2 else x for i, x in enumerate(s))]", "def capitalize(s):\n  index = 0\n  string1 = \"\"\n  string2 = \"\"\n  for i in s:\n    if index % 2 == 0:\n      string1 += i.upper()\n      string2 += i\n      index += 1\n    else:\n      string1 += i\n      string2 += i.upper()\n      index += 1\n  return [string1, string2]", "def capitalize(s):\n    s1 = ''.join(s[i].upper() if i%2 == 0 else s[i] for i in range(0, len(s)))\n    s2 = ''.join(s[i].upper() if i%2 != 0 else s[i] for i in range(0, len(s)))\n    return [s1, s2]", "def capitalize(s):\n    a=''\n    for i,v in enumerate(s):\n        a += v.upper() if i%2==0 else v\n    return [a, a.swapcase()]", "def capitalize(s):\n    alternate =\"\".join(x.lower() if c%2==1 else x.upper() for c,x in enumerate(s))\n    return [alternate,alternate.swapcase()]", "from itertools import cycle\n\n\ndef capitalize(s):\n    func = cycle((str.upper, str.lower))\n    result = ''.join(next(func)(a) for a in s)\n    return [result, result.swapcase()]\n", "capitalize=lambda s:[''.join(chr(ord(c)-i%2*32)for i,c in enumerate(s,n))for n in[1,0]]", "def capitalize(s):\n    return [''.join([c,c.upper()][i%2] for i,c in enumerate(s,a)) for a in (1,0)]", "capitalize=lambda s,f=lambda s,p:''.join(e if i%2==p else e.upper()for i,e in enumerate(s)):[f(s,1),f(s,0)]", "def capitalize(s):\n    lst1=[]\n    for n in range(0,len(s)):\n        if n%2==0:\n            lst1.append(s[n].upper())\n        else:\n            lst1.append(s[n].lower())\n    return [''.join(lst1),''.join(lst1).swapcase()]\n", "def capitalize(s):\n    odd = []\n    even = []\n\n    for i in range(0, len(s)):\n        if i % 2 == 0:\n            odd.append(s[i].upper())\n        else:\n            odd.append(s[i])\n\n    for i in range(0, len(s)):\n        if not i % 2 == 0:\n            even.append(s[i].upper())\n        else:\n            even.append(s[i])\n\n    return [''.join(odd), ''.join(even)]", "def capitalize(s):\n    even = \"\".join(w.upper() if i%2 else w.lower() for i,w in enumerate(s))\n    odd = \"\".join(w.lower() if i%2 else w.upper() for i,w in enumerate(s))\n    return [odd, even]", "def capitalize(s):\n    s1, s2 = '', ''\n    for i in range(len(s)): \n        if i % 2 == 0: \n            s1 += s[i].capitalize()\n            s2 += s[i]\n        else: \n            s1 += s[i]\n            s2 += s[i].capitalize()\n    \n    return [s1, s2]", "def capitalize(s):\n    d = str(s)\n   \n    w = ''\n    f = ''\n    g = []\n\n    for i in range(len(d)):\n        if i % 2 == 0:\n            w += d[i].upper()\n        else:\n            w += d[i]\n    for i in range(len(d)):\n        if i % 2 == 0:\n            f += d[i].lower()\n        else:\n            f += d[i].upper()\n    g.append(w)\n    g.append(f)\n\n\n\n\n    return g\n", "def capitalize(s):\n    s.lower()\n    z = s.__len__()\n    count = 1\n    i = 0\n    new_one = ''\n    new_two = ''\n    while i < z:\n        if (i +1) %2 == 0 and i > 0:\n            new_one = new_one.ljust(count,str(s[i].upper()))\n            new_two = new_two.ljust(count, str(s[i]))\n            count =count + 1\n            i = i + 1\n        else:\n            new_two = new_two.ljust(count, str(s[i].upper()))\n            new_one = new_one.ljust(count, str(s[i]))\n            count = count + 1\n            i = i + 1\n    answer = [new_two,new_one]\n    return answer", "def capitalize(s):\n    a1 = \"\"\n    a2 = \"\"\n    for i, v in enumerate(s, 1):\n        if i % 2:\n            a1 += v.upper()\n            a2 += v.lower()\n        else:\n            a1 += v.lower()\n            a2 += v.upper()\n    return [a1, a2]", "def capitalize(s):\n    i = 0\n    ret = []\n    for _ in range(2):\n        alt = ''\n        for e in s:\n            alt += [e.upper(),e.lower()][i]\n            i = not i\n        ret.append(alt)\n        i = [not i, i][len(alt)%2]\n    return ret", "def capitalize(s):\n    ret = [''] * 2\n    for i in range(len(s)):\n        ret[i % 2] += s[i].upper()\n        ret[(i + 1) % 2] += s[i]\n    return ret", "def capitalize(s):\n    alt, out = [0, 1], [list(s), list(s)]\n    for i in alt:\n        for j in range(len(s)):\n            if j % 2 == i:\n                out[i][j] = out[i][j].upper()\n    return [''.join([x for x in y]) for y in out]", "def capitalize(s):\n    Even = ''\n    Odd = ''\n    Result = []\n    \n    for i in range(len(s)):\n        if i % 2 == 0:\n            Even += s[i].upper()\n        else:\n            Even += s[i]        \n        if i % 2 != 0:\n              Odd += s[i].upper()\n        else:\n              Odd += s[i]\n\n            \n\n    Result.append(Even)\n    Result.append(Odd)\n            \n    return Result;\n", "def capitalize(s):\n    vars = []\n    for num in range(2):\n        buf = ''\n        for ind in range(len(s)):\n            if ind % 2 == num:\n                buf += s[ind].upper()\n            else:\n                buf += s[ind]\n        vars.append(buf)\n    return vars", "def capitalize(s):\n    return [''.join(s[i].upper() if i % 2 == 0 else s[i] for i in range(len(s))), ''.join(s[i].upper() if i % 2 != 0 else s[i] for i in range(len(s)))]", "capitalize=lambda Q:[''.join(V if 1 & F else V.upper() for F,V in enumerate(Q)),''.join(V.upper() if 1 & F else V for F,V in enumerate(Q))]", "def capitalize(s):\n    odd = s[::2]\n    even = s[1::2]\n    if len(odd) != len(even):\n        even= even+\" \"\n    cap = ''\n    for i in range(len(even)):\n        cap += odd[i].upper() + even[i]\n    cap2 = ''\n    for i in range(len(even)):\n        cap2 += odd[i] + even[i].upper()\n    return [cap.strip(),cap2.strip()]", "def capitalize(s):\n    list_a = list(s)\n    temp_list1 = []\n    temp_list2 = []\n    counter = 0\n    for i in list_a:\n        if counter%2 == 0:\n            temp_list1.append(chr(ord(list_a[counter])-32)) #capital letters are 32 below lowercase in table\n        else:\n            temp_list1.append(list_a[counter])\n        counter += 1\n    temp_str1 = ''.join(temp_list1) \n    counter = 0\n    for i in list_a:\n        if counter%2 != 0:\n            temp_list2.append(chr(ord(list_a[counter])-32)) #capital letters are 32 below lowercase in table\n        else:\n            temp_list2.append(list_a[counter])\n        counter += 1\n    temp_str2 = ''.join(temp_list2)    \n    return [temp_str1 , temp_str2]  ", "def capitalize(s):\n    even = \"\"\n    odd = \"\"\n    for ind,char in enumerate(s):\n        if ind%2 == 0:\n            even += char.upper()\n            odd += char\n        elif ind%2 != 0:\n            odd += char.upper()\n            even += char\n    return [even, odd]", "def capitalize(s):\n    list = []\n    ret = \"\"\n    i = True  # capitalize\n    for char in s:\n        if i:\n            ret += char.upper()\n        else:\n            ret += char.lower()\n        if char != ' ':\n            i = not i\n    list.append(ret)\n    ret2 = ret.swapcase()\n    list.append(ret2)\n    return list", "def capitalize(s):\n    evens = ''\n    odds = ''\n    for i in range(0,len(s)):\n        if i % 2 == 0:\n            evens = evens + s[i].upper()\n        else:\n            evens = evens + s[i]\n    for i in range(0,len(s)):\n        if i % 2 == 0:\n            odds = odds + s[i]\n        else:\n            odds = odds + s[i].upper()\n    return([evens,odds])", "def capitalize(s):\n    x=2\n    z=2\n    string=''\n    string2=''\n    \n    for i,y in zip(s,s):\n        if x%2==0:\n            string=string + i.upper()\n            x+=1\n        else:\n            string=string + i\n            x+=1\n            \n        if z%2!=0:\n            string2=string2 + i.upper()\n            z+=1\n        else:\n            string2=string2 + i\n            z+=1\n            \n    return [string,string2]\n            \n", "def capitalize(s): \n    abc = ''.join([k.capitalize() for k in[s[i-2:i] for i in range(2,len(s)+2,2)]]) \n    return [abc,''.join([a.upper() if a == a.lower() else a.lower() for a in list(abc)])]\n", "def capitalize(s):\n  return next([x, x.swapcase()] for x in [''.join(c if i%2 else c.upper() for i, c in enumerate(s))])", "def capitalize(s):\n    return [''.join(ch.upper() if i % 2 == 0 else ch for (i, ch) in enumerate(s)), ''.join(ch.upper() if i % 2 == 1 else ch for (i, ch) in enumerate(s))]", "from itertools import cycle\n\ndef capitalize(s):\n    fss = map(cycle, ((str.upper, str.lower), (str.lower, str.upper)))\n    return [''.join(f(c) for f, c in zip(fs, s)) for fs in fss]", "def capitalize(s):\n    st = \"\"\n    st1 = \"\"\n    for i in range(len(s)):\n        if i % 2 == 0:\n            st += s[i].upper()\n            st1 += s[i].lower()\n        else:\n            st1 += s[i].upper()\n            st += s[i].lower()\n    return [st, st1]", "def capitalize(s):\n    array = list(s)\n    output1, output2 = [], []\n    for i, letter in enumerate(array):\n        if  i % 2 == 0:\n            output1.append(letter.upper())\n            output2.append(letter.lower())\n        else:\n            output1.append(letter.lower())\n            output2.append(letter.upper())\n    output3 = ''.join(output1)\n    output4 = ''.join(output2)\n    return [output3, output4]", "def capitalize(s):\n    s_lower = \"\".join(s.lower() if i%2==0 else s.upper() for i,s in enumerate(s))\n    s_upper = \"\".join(s.upper() if i%2==0 else s.lower() for i,s in enumerate(s))\n    return [s_upper]+[s_lower]", "def capitalize(s):\n    a = \"\".join([char.upper() if not index%2 else char for index, char in enumerate(s)])\n    b = \"\".join([char.upper() if index%2 else char for index, char in enumerate(s)])\n    return [a, b]", "def capitalize(s):\n    al = list(s)\n    ab = list(s)\n    l = []\n    for i in range(0,len(al)):\n        if i % 2 == 0:\n            al[i] = al[i].upper()\n        else:\n            ab[i] = al[i].upper()\n    l.append(''.join(al))\n    l.append(''.join(ab))\n    return l", "def capitalize(s):\n    new = \"\"\n    new1=\"\"\n    out = []\n    for i in range(len(s)):\n        if i%2==0:\n            new+=s[i].upper()\n        else:\n            new+=s[i]\n    out.append(new)\n    for i in range(len(s)):\n        if i%2==0:\n            new1+=s[i]\n        else:\n            new1+=s[i].upper()\n    out.append(new1)\n    return out\n", "def capitalize(s):\n    first = []\n    second = []\n\n    for i in range(len(s)):\n        first.append(s[i].upper() if i % 2 == 0 else s[i].lower())\n\n    for j in range(len(s)):\n        second.append(s[j].upper() if j % 2 != 0 else s[j].lower())\n\n    return [''.join(first), ''.join(second)]", "def capitalize(s):\n    ret = \"\"\n    ter  = \"\"\n    i = True   \n    for char in s:\n        if i:\n            ret += char.upper()\n        else:\n            ret += char.lower()\n        if char != ' ':\n            i = not i\n    i = True\n    for char in s:\n        if not i:\n            ter += char.upper()\n        else:\n            ter += char.lower()\n        if char != ' ':\n            i = not i\n    return [ret,ter]", "def capitalize(s):\n    s1 = ''\n    s2 = ''\n    for i in range(0, len(s)):\n        to_add = s[i]\n        if i % 2 == 0:\n            s1 = s1 + to_add.capitalize()\n            s2 = s2 + to_add\n        else:\n            s2 = s2 + to_add.capitalize()\n            s1 = s1 + to_add\n\n    return [s1,s2]\n\n    return [s1,s2]\n                    \n    \n", "def capitalize(s):\n    case_1 = ''\n    case_2 = ''\n    for i in range(len(s)):\n        if i % 2 == 0:\n            case_1 += s[i].upper()\n        else:\n            case_1 += s[i].lower()\n    for i in range(len(s)):\n        if i % 2 == 0:\n            case_2 += s[i].lower()\n        else:\n            case_2 += s[i].upper()\n    return [case_1, case_2]", "def capitalize(s):\n    newString, secondString = \"\", \"\"\n    for i, j in enumerate(s):\n        if i % 2 == 0:\n            newString += j.upper()\n        else:\n            newString += j\n    for i, j in enumerate(s):\n        if i % 2 == 0:\n            secondString += j\n        else:\n            secondString += j.upper()\n    return [newString, secondString]\n", "def capitalize(s):\n    even_arr = ''\n    \n    for even in range(0, len(s)):\n        if(even % 2 == 0):\n            even_arr += s[even].upper()\n        else:\n            even_arr += s[even]\n    \n    return [even_arr, even_arr.swapcase()]\n", "def capitalize(s):\n    return [''.join([v.upper() if i%2==0 else v for i,v in enumerate(s)]), ''.join([v.upper() if i%2==1 else v for i,v in enumerate(s)])]", "def capitalize(s):\n    a1 = a2 = \"\"\n    for i in range(len(s)):\n        if i % 2 == 0:\n            a1 += s[i].upper()\n            a2 += s[i]\n        else:\n            a2 += s[i].upper()\n            a1 += s[i]\n    return [a1, a2]", "def capitalize(s):\n    f1 = ''\n    f2 = ''\n    result = []\n    \n    for i,v in enumerate(s):\n        if i == 0 or i % 2 == 0:\n            f1+=v.upper()\n        else:\n            f1+=v.lower()\n    result.append(f1)\n    \n    for j,v in enumerate(s):\n        if j == 0 or j % 2 == 0:\n            f2+=v.lower()\n        else:\n            f2+=v.upper()\n    result.append(f2)\n\n    return result", "def capitalize(s):\n    evens = []\n    g = 0\n    \n    for char in s:\n        if g % 2 == 0: evens.append(char.title())\n        else: evens.append(char)\n        g+=1\n        \n    odds = [x.swapcase() for x in evens]\n    return [\"\".join(evens), \"\".join(odds)]", "def capitalize(s):\n    a=''\n    b=''\n    for i in range(len(s)):\n        if i%2!=1:\n            a=a+s[i].upper()\n            b=b+s[i]\n        else:\n            a=a+s[i]\n            b=b+s[i].upper()\n    return [a,b]\n    pass", "def capitalize(s):\n    final1 = \"\"\n    final2 = \"\"\n    \n    for x in range(len(s)):  #1st string\n        final1 += s[x].upper() if x%2==0 else s[x]\n            \n    for x in final1: #toggle 1st string to get the 2ns string\n        final2 += x.lower() if x.isupper() else x.upper()\n            \n    return [final1,final2]", "def capitalize(s):\n    str1 = ''\n    str2 = ''\n    for i,c in enumerate(s):\n        if not i % 2:\n            str1 += c.upper()\n            str2 += c.lower()\n        else:\n            str2 += c.upper()\n            str1 += c.lower()\n    return [str1, str2]", "def capitalize(s):\n    even = ''\n    odd = ''\n    count = 0\n    for i in s:\n        if count % 2 == 0:\n            even += i.upper()\n            odd += i\n        else:\n            even += i\n            odd += i.upper()\n        count += 1\n    lst = []\n    lst.append(even)\n    lst.append(odd)\n    return lst\n", "def capitalize(s):\n    lst = [\"\",\"\"]\n    for i in range(0,len(s)):\n        if i % 2 == 0:\n            lst[0] += s[i].upper()\n            lst[1] += s[i]\n        else:\n            lst[1] += s[i].upper()\n            lst[0] += s[i]\n    return lst\n    \n", "def capitalize(s):\n    new1 = \"\"\n    new2 = \"\"\n    for i in range(len(s)):\n        if i%2 == 0:\n            new1 += s[i].upper()\n            new2 += s[i]\n        else:\n            new1 += s[i]\n            new2 += s[i].upper()\n    return [new1, new2]", "def capitalize(s):\n    a=\"\"\n    big=True\n    for i in s:\n        if big==True:\n            i=i.upper()\n            big=False\n        else:big=True\n        a+=i\n    b=\"\"\n    big=False\n    for i in s:\n        if big==True:\n            i=i.upper()\n            big=False\n        else:big=True\n        b+=i\n    return [a, b]", "def capitalize(s):\n    x, y = \"\", \"\"\n    for i, j in enumerate(s):\n        if i % 2 == 0:\n            x += j.upper()\n            y += j.lower()\n        else:\n            y += j.upper()\n            x += j.lower()\n    return [x, y]", "def capitalize(s):\n    l=[]\n    x=\"\"\n    for i in range(len(s)):\n        if i%2==0:\n            j=s[i].capitalize()\n            x+=j\n        else:\n            x+=s[i]\n    w=\"\"\n    for i in range(len(s)):\n        if not i%2==0:\n            k=s[i].capitalize()\n            w+=k\n        else:\n            w+=s[i]\n    l.append(x)\n    l.append(w)\n    return l        ", "def capitalize(s):\n    odd,even = [], []\n    for i,a in enumerate(s):\n        if i%2==0:\n            even.append(a.capitalize())\n            odd.append(a)\n        else:\n            even.append(a)\n            odd.append(a.capitalize())\n            \n    return [''.join(even)] + [''.join(odd)]", "def capitalize(s):\n    cap1 = [s[i].upper() if not i % 2 else s[i] for i in range(len(s))]\n    cap2 = [s[i].upper() if i % 2 else s[i] for i in range(len(s))]\n    return [''.join(cap1), ''.join(cap2)]\n\n", "def capitalize(s):\n    return [\"\".join([s[i].lower() if i%2 else s[i].upper() for i in range(len(s))]), \"\".join([s[i].upper() if i%2 else s[i].lower() for i in range(len(s))])]", "def capitalize(s):\n    lst=[]\n    print(s)\n    a,b='',''\n    for i in range( len(s) ):\n        if i%2==0 or i==0:\n            a=a+s[i].upper()\n        else:\n            a=a+s[i]\n    for i in range( len(s) ):\n        if i%2!=0 :\n            b=b+s[i].upper()\n        else:\n            b=b+s[i]        \n    lst.append(a)\n    lst.append(b)\n    return lst", "def capitalize(s):\n    \n    l = list(s)\n    s_1 = ''\n    s_2 = ''\n    \n    #1st string in new list\n    \n    for i in range(len(l)):\n        if i % 2 == 0:\n            l[i] = l[i].capitalize()\n        else:\n            pass\n        s_1 += l[i]\n        \n    return [s_1, s_1.swapcase()]", "def capitalize(s):\n    s1 = ''.join(a.upper() if i % 2 == 0 else a for i,a in enumerate(s))\n    s2 = ''.join(a.upper() if i % 2 != 0 else a for i,a in enumerate(s))\n    return [s1,s2]", "def capitalize(s):\n    my_string_1 = ''\n    my_string_2 = ''\n    i = 0\n    for char in s:\n        if i % 2 == 0:\n            my_string_1 += s[i].upper()\n            my_string_2 += s[i]\n            i = i + 1 \n        elif i % 2 != 0:\n            my_string_1 += s[i]\n            my_string_2 += s[i].upper()\n            i = i + 1 \n\n    arr = []\n    arr.append(my_string_1)\n    arr.append(my_string_2)\n    return arr ", "def capitalize(s):\n    s=list(s)\n    even = [ ]\n    for i in range(len(s)):\n        if i%2==0:\n            even.append(s[i].upper())\n        else:\n            even.append(s[i])\n    even=\"\".join(even)\n    \n    odd = [ ]\n    for i in range(len(s)):\n        if i%2==0:\n            odd.append(s[i])\n        else:\n            odd.append(s[i].upper())\n    odd=\"\".join(odd)\n    \n    return [even,odd]\n    \n", "def capitalize(s):\n    i = 0\n    s1 = ''\n    s2 = ''\n    while i < len(s):\n        if i % 2 == 0:\n            s1 += s[i].upper()\n            s2 += s[i].lower()\n        else:\n            s1 += s[i].lower()\n            s2 += s[i].upper()\n        i += 1\n    return [s1, s2]", "def capitalize(s):\n  #given a string \n#capitalize the letters in the even positions\n#capitalize those that are in odd positions separately\n#0 is even\n# given a string of letters\n#     when a letter occupy the even indexes\n#     then capitalise\n    even=[]\n    odd=[]\n    final=[]\n    for i in range(len(s)):\n        if  i%2==0:\n            a=s[i].capitalize()\n            even.append(a)\n        else:\n            even.append(s[i])\n    for i in range(len(s)):\n        if i%2 != 0:\n            b=s[i].capitalize()\n            odd.append(b)\n        else:\n            odd.append(s[i])\n    finaleven =''.join(even)\n    finalodd =''.join(odd)\n    final.append(finaleven)\n    final.append(finalodd)\n    return final\n\n\n", "def capitalize(s):\n    x=\"\"\n    for i in range(len(s)):\n        if i%2==0 :\n            x=x+s[i].upper()\n        else:\n             x=x+s[i].lower()\n    y=\"\"\n    for i in range(len(s)):\n        if i%2==0 :\n            y=y+s[i].lower()\n        else:\n             y=y+s[i].upper()\n    return [x,y]\n    \n    \n", "def capitalize(s):\n    #BDD\n    #Given a sring\n    #When capitalize letters with even indexes\n    \n    #ps\n    #3lists \n    #for loop thet will loop through the string\n    #If statement\n    even=[]\n    odd=[]\n    final=[]\n    for i in range(len(s)):\n        if i % 2 ==0:\n            a = s[i].capitalize()\n            even.append(a)\n        else:\n            even.append(s[i])\n    for i in range(len(s)):\n        if i % 2 != 0:\n            b = s[i].capitalize()\n            odd.append(b)\n        else:\n            odd.append(s[i])\n    finaleven = ''.join(even)\n    finalodd = ''.join(odd)\n    final.append(finaleven)\n    final.append(finalodd)\n    return final\n", "def capitalize(s):\n    res = ''.join([s[i] if i % 2 else s[i].upper() for i in range(len(s))])\n    return [res, res.swapcase()]", "def capitalize(s):\n    even = ''\n    odd = ''\n    for i, c in enumerate(s):\n        if i % 2 == 0:\n            even += c.upper()\n            odd += c\n        else:\n            even += c\n            odd += c.upper()\n    \n    return [even, odd]", "def capitalize(s):\n    return [\"\".join([s[i].upper() if not (i + k) % 2 else s[i] for i in range(len(s))]) for k in [0, 1]]\n", "def capitalize(s):\n    s = ''.join([s[i] if i%2 else s[i].upper() for i in range(len(s))])\n    return [s,s.swapcase()]", "def capitalize(s):\n    s = ''.join([s[i].lower() if i%2 else s[i].upper() for i in range(len(s))])\n    return [s,s.swapcase()]", "def capitalize(s):\n    a = ''.join([s[i].lower() if i%2 else s[i].upper() for i in range(len(s))])\n    b = ''.join([s[i].upper() if i%2 else s[i].lower() for i in range(len(s))])\n    return [a,b]", "def capitalize(s):\n    return [''.join([(j, j.upper())[i%2==0] for i, j in enumerate(s)]), \n            ''.join([(j, j.upper())[i%2==1] for i, j in enumerate(s)])]", "def capitalize(s):\n    result = \"\"\n    for index in range(len(s)):\n        if not index % 2:\n            result += s[index].upper()\n        else:\n            result += s[index].lower()\n    arr = []\n    arr.append(result)\n    arr.append(result.swapcase())\n    return arr\n    \n", "def capitalize(s):\n    x = []\n    b = ''\n    for i in range(len(s)):\n        if i %2==0:\n            c = s[i].upper()\n            b += c\n        else:\n            c = s[i].lower()\n            b += c\n    x.append(b)\n    d = b.swapcase()\n    x.append(d)\n    return x", "def capitalize(s):\n    string_even, string_odd = [], []\n    for i, n in enumerate(s):\n        if i % 2 == 0:\n            string_even.append(n.upper())\n        else:\n            string_even.append(n)\n\n    for i, n in enumerate(s):\n        if i % 2 != 0:\n            string_odd.append(n.upper())\n        else:\n            string_odd.append(n)\n    return [''.join(string_even), ''.join(string_odd)]\n\n\"\"\"\ndef capitalize(s):\n    string_even = ''.join([c.upper() if not (i % 2) else c for i, c in enumerate(x)])\n    string_odd = ''.join([c.upper() if i % 2 else c for i, c in enumerate(x)])\n    return [string_even, string_odd]\n\"\"\"    \n\n\n\n\n\n", "def capitalize(s):\n    x = list(s)\n    y = [x[n].upper() if n%2==0 else x[n] for n,i in enumerate(x) ]\n    z = [x[n].upper() if n%2==1  else x[n] for n,i in enumerate(x) ]\n    return [''.join(y),''.join(z)]", "def capitalize(s):\n    o1 = ''\n    o2 = ''\n    uf = True\n    for c in s:\n        if uf:\n            o1 += (c.upper())\n            o2 += (c)\n            uf = False\n        else:\n            o2 += (c.upper())\n            o1 += (c)\n            uf = True\n    return [o1, o2]", "def capitalize(s):\n    s = s.lower()\n    even_str = ''\n    for i in range(len(s)):\n        if i % 2 == 0:\n            even_str += s[i].upper()\n        else:\n            even_str += s[i]\n    return [even_str, even_str.swapcase()]", "def capitalize(s):\n    new_string = \"\"\n    new_string1 = \"\"\n    for i in range(len(s)): \n        if i%2 == 0: \n            new_string += s[i].upper() \n        else: \n            new_string += s[i]\n    for j in range(len(s)):\n        if j%2 != 0:\n            new_string1 += s[j].upper()\n        else:\n            new_string1 += s[j]\n    return [f\"{new_string}\", f\"{new_string1}\"]", "def capitalize(s):\n    st = list(s)\n    caps = []\n    for i in range(1,len(st),2):\n        st[i] = st[i].upper()\n    caps.append(''.join(st))\n    st = list(s)\n    for i in range(0,len(st),2):\n        st[i] = st[i].upper()\n    caps.append(''.join(st))\n    return caps[::-1]", "def capitalize(str):\n    resArr = []\n    def one(string):\n        resStr = \"\"\n        for index in range(len(string)):\n            if index % 2 == False:\n                resStr = resStr + string[index].upper()\n            else:\n                resStr = resStr + string[index].lower()\n        return resStr\n    def two(string):\n        resStr = \"\"\n        for index in range(len(string)):\n            if index % 2 == False:\n                resStr = resStr + string[index].lower()\n            else:\n                resStr = resStr + string[index].upper()\n        return resStr\n    resArr.append(one(str))\n    resArr.append(two(str))\n    return resArr\n        \n", "def capitalize(s):\n    p = len(s)\n    newar = []\n    o=\"\"\n    e=\"\"\n    for i in range(0,p):\n        if i&1:\n            e+=s[i].upper()\n            o+=s[i]\n        else:\n            e+=s[i]\n            o+=s[i].upper()\n    newar.append(o)\n    newar.append(e)\n    return newar", "def capitalize(s):\n    return [''.join([c if k % 2 else c.upper() for k, c in enumerate(s)]), ''.join([c.upper() if k % 2 else c for k, c in enumerate(s)])]", "def capitalize(s):\n    x = \"\".join([i[1] if i[0]%2==0 else i[1].upper() for i in enumerate(s)])\n    y = \"\".join([i[1].upper() if i[0]%2==0 else i[1] for i in enumerate(s)])\n    return [y,x]", "def capitalize(s):\n    result = []\n    first = ''\n    for c in range(len(s)):\n        if c % 2 == 0:\n            first += s[c].capitalize()\n        else:\n            first += s[c]\n    second = ''\n    for c in range(len(s)):\n        if c % 2 == 0:\n            second += s[c]\n        else:\n            second += s[c].capitalize()\n    return [first, second]", "def capitalize(s):\n    even = ''\n    odd = ''\n    bigArr = []\n    for i in range(len(s)) :\n        if(i % 2 == 0) :\n            even += s[i].upper()\n            odd += s[i].lower()\n        else:\n            even += s[i].lower()\n            odd += s[i].upper()\n    return [even, odd]", "def capitalize(s):\n    return [''.join([char.lower() if i%2 == 1 else char.upper() for i, char in enumerate(s) ]), ''.join([char.lower() if i%2 == 0 else char.upper() for i, char in enumerate(s)])]", "def capitalize(s):\n    t1=''\n    t2=''\n    for i,j in enumerate(s):\n        if i%2==0:\n            t1+=j.upper()\n            t2+=j\n        else:\n            t1+=j\n            t2+=j.upper()\n    return [t1,t2]", "def capitalize(s):\n    s1=\"\"\n    s2=\"\"\n    index=0\n    k=0\n    l=[]\n    for i in s:\n        if index%2==0:\n            s1+=i.upper()\n        else:\n            s1+=i\n        index+=1\n    for j in s:\n        if k%2!=0:\n            s2+=j.upper()\n        else:\n            s2+=j\n        k+=1\n    l.append(s1)\n    l.append(s2)\n    return l\n        \n            \n", "def capitalize(s):\n    first =  \"\".join(v.upper() if i % 2 == 0 else v for i, v in enumerate(s))\n    second =  \"\".join(v.upper() if i % 2 != 0 else v for i, v in enumerate(s))\n    return [first, second]"]