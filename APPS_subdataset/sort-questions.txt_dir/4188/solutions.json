["def find_dup(arr):\n    return sum(arr) - sum(range(1, max(arr)+1))", "def find_dup(arr):\n    seen = set()\n    for a in arr:\n        if a in seen:\n            return a\n        seen.add(a)\n", "find_dup=lambda arr: sum(arr)-len(arr)*(len(arr)-1)/2", "from collections import Counter\n\n\ndef find_dup(lst):\n    return Counter(lst).most_common()[0][0]", "def find_dup(arr):\n    memo = set()\n    return next(x for x in arr if x in memo or memo.add(x))", "def find_dup(xs):\n    found = set()\n    for x in xs:\n        if x in found:\n            return x\n        found.add(x)", "def find_dup(arr):\n    return sum(arr, (1 - len(arr)) * len(arr) / 2)\n", "def find_dup(arr):\n    return sum(arr) - ((len(arr) - 1) * len(arr))/2", "def find_dup(arr):\n  l = len(arr)-1\n  return sum(arr) - (l * (l+1)) / 2", "def find_dup(arr):\n    return(sum(arr) - ((len(arr) - 1)*len(arr))//2);\n"]