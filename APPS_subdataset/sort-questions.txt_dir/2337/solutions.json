["import sys\ninput = sys.stdin.readline\nfrom collections import Counter\n\nt=int(input())\nfor testcases in range(t):\n    n=int(input())\n    P=list(map(int,input().split()))\n    C=Counter(P)\n    PLIST=sorted(set(P),reverse=True)\n\n    g=C[PLIST[0]]\n    s=0\n    b=0\n\n    sflag=1\n\n    for i in PLIST[1:]:\n\n        if sflag:\n            if s<=g:\n                s+=C[i]\n            else:\n                sflag=0\n                bflag=1\n                b+=C[i]\n\n        elif bflag:\n            if b<=g:\n                b+=C[i]\n            elif g+s+b+C[i]<=n//2:\n                b+=C[i]\n            else:\n                break\n\n        #print(i,g,s,b)\n\n    if g+s+b<=n//2:\n        print(g,s,b)\n    else:\n        print(0,0,0)\n            \n            \n            \n", "3\n\nimport os\nimport sys\n\n\ndef main():\n    T = read_int()\n    for _ in range(T):\n        N = read_int()\n        P = read_ints()\n        print(*solve(N, P))\n\n\ndef solve(N, P):\n    C = []\n    i = 0\n    while i < N:\n        j = i + 1\n        while j < N and P[j] == P[i]:\n            j += 1\n        C.append(j - i)\n        i = j\n\n    if N < 10 or len(C) < 3:\n        return 0, 0, 0\n\n    half = N // 2\n    g = C[0]\n    s = 0\n    i = 1\n    while i < len(C) and g >= s:\n        s += C[i]\n        i += 1\n    b = 0\n    while i < len(C) and g >= b:\n        b += C[i]\n        i += 1\n    if s == 0 or b == 0 or g >= s or g >= b or g + s + b > half:\n        return 0, 0, 0\n    while i < len(C):\n        if g + s + b + C[i] > half:\n            break\n        b += C[i]\n        i += 1\n    return g, s, b\n\n\n###############################################################################\n\nDEBUG = 'DEBUG' in os.environ\n\n\ndef inp():\n    return sys.stdin.readline().rstrip()\n\n\ndef read_int():\n    return int(inp())\n\n\ndef read_ints():\n    return [int(e) for e in inp().split()]\n\n\ndef dprint(*value, sep=' ', end='\\n'):\n    if DEBUG:\n        print(*value, sep=sep, end=end)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"]