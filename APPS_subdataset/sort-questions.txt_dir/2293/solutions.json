["j=n=1<<int(input())\na=[[0,int(s)]for s in input().split()]\nwhile j>1:j>>=1;a=[sorted(a[i]+a[i^j]*(i&j>0))[-2:]for i in range(n)]\nfor s,f in a[1:]:j=max(j,s+f);print(j)", "# -*- coding:utf-8 -*-\nn = int(input())\na = [int(i) for i in input().split()]\ndp = [[x, 0] for x in range(0, len(a))]\n \n \ndef ins(x, i):\n    if x in dp[i]:\n        return\n    if dp[i][0] != x and a[dp[i][0]] < a[x]:\n        dp[i][1] = dp[i][0]\n        dp[i][0] = x\n    elif dp[i][1] != x and a[dp[i][1]] < a[x]:\n        dp[i][1] = x\n \n \ndef mix(i, j):\n    ins(dp[i][0], j)\n    ins(dp[i][1], j)\n \n \nfor i in range(0, len(a)):\n    for j in range(0, n):\n        if i & (1 << j) == 0:\n            mix(i, i | (1 << j))\n \n \nans = 0\nfor i in range(1, len(a)):\n    u = a[dp[i][0]]+a[dp[i][1]]\n    ans = max(ans, u)\n    print(ans)", "import sys\nINF = 1 << 60\nMOD = 10**9 + 7 # 998244353\nsys.setrecursionlimit(2147483647)\ninput = lambda:sys.stdin.readline().rstrip()\ndef resolve():\n    n = int(input())\n    f = [[a, 0] for a in map(int, input().split())]\n    dot = lambda p0, p1 : sorted(p0 + p1, reverse = 1)[:2]\n\n    for i in range(n):\n        for U in range(1 << n):\n            if not U >> i & 1:\n                f[U | 1 << i] = dot(f[U | 1 << i], f[U])\n\n    res = 0\n    ans = []\n    for i in range(1, 1 << n):\n        res = max(res, sum(f[i]))\n        ans.append(res)\n    print('\\n'.join(map(str, ans)))\nresolve()", "#!/usr/bin/env python\n\nfrom collections import deque\nimport itertools as it\nimport sys\nimport math\n\ndef func():\n    N = int(input())\n\n    A = list(map(int, input().split()))\n    P = [[(A[0], 0), (0, 0)] for i in range(2 ** N)]\n\n    for i in range(1, 2 ** N):\n        if (A[i], i) > P[i][0]:\n            P[i][1] = P[i][0]\n            P[i][0] = (A[i], i)\n        elif (A[i], i) > P[i][1]:\n            P[i][1] = (A[i], i)\n        for j in range(N):\n            if (i & (1 << j)) == 0:\n                index = i + (1 << j)\n                for k in range(2):\n                    if P[i][k] > P[index][0]:\n                        P[index][1] = P[index][0]\n                        P[index][0] = P[i][k]\n                    elif P[i][k] > P[index][1] and P[i][k] != P[index][0]:\n                        P[index][1] = P[i][k]\n    ans = 0\n    for i in range(1, 2 ** N):\n        ans = max(ans, P[i][0][0] + P[i][1][0])\n        print(ans)\n    #print(P)\n\nfunc()", "n=1<<int(input())\na=[[0,int(s)]for s in input().split()]\nj=1\nwhile m:=n-j:\n for i in range(n):\n  if i&j:a[i]=sorted(a[i]+a[i^j])[2:]\n j*=2\nfor s,f in a[1:]:print(m:=max(m,s+f))", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = [None]*(2**n)\n    d[0] = [a[0], 0, -1, -1]\n    ans = 0\n    for i, t1 in enumerate(a[1:]):\n        i += 1\n        t2, t3, t4 = i, -1, -1\n        for j in range(len(bin(i))-2):\n            k = i & ~(1 << j)\n            if k == i:\n                continue\n            t5, t6, t7, t8 = d[k]\n            if t5 > t1:\n                t1, t2, t3, t4 = t5, t6, t1, t2\n            elif t5 > t3:\n                if t6 != t2:\n                    t3, t4 = t5, t6\n            if t7 > t3:\n                t3, t4 = t7, t8\n        d[i] = [t1, t2, t3, t4]\n        ans = max(ans, t1+t3)\n        print(ans)\n\n\nmain()", "j=n=1<<int(input())\na=[[0,int(s)]for s in input().split()]\nwhile j>1:\n j>>=1\n for i in range(n):\n  if i&j:a[i]=sorted(a[i]+a[i^j])[2:]\nfor s,f in a[1:]:print(j:=max(j,s+f))", "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nA = list(map(int, input().split()))\ndp = [[A[i], -1] for i in range(1<<N)]\n\nfor i in range(N):\n    bit = 1<<i\n    \n    for S in range(1<<N):\n        if S&bit:\n            l = [dp[S][0], dp[S][1], dp[S^bit][0], dp[S^bit][1]]\n            l.sort()\n            dp[S][0] = l[-1]\n            dp[S][1] = l[-2]\n\nans = [-1]*(1<<N)\n\nfor S in range(1, 1<<N):\n    ans[S] = dp[S][0]+dp[S][1]\n    \n    if S>=2:\n        ans[S] = max(ans[S], ans[S-1])\n\nfor ans_i in ans[1:]:\n    print(ans_i)", "n = int(input())\na = list(map(int,input().split()))\n\ndp = [[ai,0,i,-1] for i,ai in enumerate(a)]\n\nfor i in range(1,2**n):\n    for j in range(n):\n        if(i >> j)&1:\n            x = dp[i]\n            y = dp[i - (1<<j)]\n            if(x[0] < y[0] ):\n                x,y = y,x\n            m1 = x[0]\n            i1 = x[2]\n            if(x[2] == y[2]):                \n                if(x[1] > y[1]):\n                    m2 = x[1]\n                    i2 = x[3]\n                else:\n                    m2 = y[1]\n                    i2 = y[3]\n            else:\n                if(x[1] > y[0]):\n                    m2 = x[1]\n                    i2 = x[3]\n                else:\n                    m2 = y[0]\n                    i2 = y[2]\n            dp[i] = [m1,m2,i1,i2]\n\nans = [0]\nfor i in range(1,2**n):\n    tmp = sum(dp[i][:2])\n    ans.append(max(ans[-1],tmp))\n\nprint('\\n'.join(map(str,ans[1:])))", "n = int(input())\na = list(map(int, input().split()))\n\ndp1 = [x for x in a]\ndp2 = [0 for _ in range(1<<n)]\n\nfor j in range(n+1):\n\tfor i in range(1<<n):\n\t\tif i & (1<<j):\n\t\t\tif dp1[i & ~(1<<j)] >= dp1[i]:\n\t\t\t\tif dp2[i & ~(1<<j)] >= dp1[i]:\n\t\t\t\t\tdp2[i] = dp2[i & ~(1<<j)]\n\t\t\t\telse:\n\t\t\t\t\tdp2[i] = dp1[i]\n\t\t\t\tdp1[i] = dp1[i & ~(1<<j)]\n\t\t\telse:\n\t\t\t\tif dp1[i & ~(1<<j)] >= dp2[i]:\n\t\t\t\t\tdp2[i] = dp1[i & ~(1<<j)]\n\nans = 0\nfor i in range(1, 1<<n):\n\tans = max(ans, dp1[i]+dp2[i])\n\tprint(ans)", "def merge(x, y, z, w):\n    P = [x, y, z, w]\n    P.sort()\n    return P[-1], P[-2]\n\n\ndef main():\n    N = int(input())\n    a = list(map(int, input().split()))\n    dp = [0]*(2*(N+1)*((1 << N)))\n\n    def calc(i, j, k):\n        return (2*N + 2) * i + (N+1)*k + j\n    for i in range(1 << N):\n        dp[calc(i, 0, 0)] = a[i]\n    for j in range(1, N+1):\n        for i in range(1 << N):\n            x = calc(i, j, 0)\n            y = calc(i & ~(1 << (j-1)), j - 1, 0)          \n            if (i & (1 << (j-1))):\n                dp[x], dp[x+N+1] = merge(dp[y], dp[y+N+1], dp[x-1], dp[x+N])\n            else:\n                dp[x], dp[x+N+1] = dp[x-1], dp[x+N]\n    result = [0]*(1 << N)\n    for k in range(1, 1 << N):\n        result[k] = max(result[k-1], dp[calc(k, N, 0)]+dp[calc(k, N, 1)])\n        print((result[k]))\n    return\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "import sys\ninput = sys.stdin.readline\nfrom itertools import accumulate\n\ndef merge(x, y):\n  a, b = dp[x]\n  c, d = dp[y]\n  if a >= c:\n    return (a, max(c, b))\n  return (c, max(a, d))\n  \nn = int(input())\nA = tuple(map(int, input().split()))\ndp = [(a, 0) for a in A]\nfor j in range(n):\n  for i in range(1<<n):\n    if i & (1<<j):\n      dp[i] = merge(i, i & ~(1<<j))\nL = tuple(accumulate((sum(d) for d in dp), max))\nprint(*L[1:], sep=\"\\n\")", "n = int(input())\na = list(map(int, input().split()))\nb = [[i] for i in a]\n\nfor j in range(n):\n    for i in range(1<<n):\n        if i & (1<<j):\n            b[i] = sorted(b[i]+b[i^1<<j], reverse=True)[:2]\nans = []\ntmp = 0\nfor i in range(1, 1<<n):\n    tmp = max(tmp, sum(b[i]))\n    ans.append(tmp)\nprint(*ans, sep=\"\\n\")", "import sys\ninput = sys.stdin.readline\nN = int(input())\na = list(map(int, input().split()))\nzeta = a[: ]\nzeta2 = [0] * (1 << N)\nfor i in range(N):\n  for j in range(1 << N):\n    if (1 << i) & j:\n      if zeta[j] < zeta[(1 << i) ^ j]:\n        zeta2[j] = max(zeta[j], zeta2[(1 << i) ^ j])\n        zeta[j] = zeta[(1 << i) ^ j]\n      elif zeta2[j] < zeta[(1 << i) ^ j]:\n        zeta2[j] = zeta[(1 << i) ^ j]\n\nres = 0\nfor i in range(1, 1 << N):\n  res = max(res, zeta[i] + zeta2[i])\n  print(res)", "#!/usr/bin/env python\n\n#from collections import deque\n#import itertools as it\n#import sys\n#import math\n\ndef func():\n    N = int(input())\n\n    A = list(map(int, input().split()))\n    P = [[(A[0], 0), (0, 0)] for i in range(2 ** N)]\n\n    for i in range(1, 2 ** N):\n        if (A[i], i) > P[i][0]:\n            P[i][1] = P[i][0]\n            P[i][0] = (A[i], i)\n        elif (A[i], i) > P[i][1]:\n            P[i][1] = (A[i], i)\n        for j in range(N):\n            if (i & (1 << j)) == 0:\n                index = i + (1 << j)\n                for k in range(2):\n                    if P[i][k] > P[index][0]:\n                        P[index][1] = P[index][0]\n                        P[index][0] = P[i][k]\n                    elif P[i][k] > P[index][1] and P[i][k] != P[index][0]:\n                        P[index][1] = P[i][k]\n    ans = 0\n    for i in range(1, 2 ** N):\n        ans = max(ans, P[i][0][0] + P[i][1][0])\n        print(ans)\n    #print(P)\n\nfunc()", "n = int(input())\na = list(map(int, input().split()))\nm = [[ai] for ai in a]\nfor d in range(n):\n    for s in range(1 << n):\n        if s >> d & 1 == 0:\n            t = s | 1 << d\n            m[t] = sorted(m[t] + m[s])[-2:]\nfor k in range(1, 1 << n):\n    ans = sum(m[k])\n    for d in range(n):\n        if k >> d & 1 == 1:\n            t = k ^ 1 << d  | (1 << d) - 1\n            ans = max(ans, sum(m[t]))\n    print(ans)", "import sys\ninput = sys.stdin.readline\nfrom itertools import accumulate\n\ndef merge(x, y):\n  D = sorted([dp[x][0], dp[x][1], dp[y][0], dp[y][1]], reverse=True)\n  return (D[0], D[1])\n  \nn = int(input())\nA = tuple(map(int, input().split()))\ndp = [(a, 0) for a in A]\nfor j in range(n):\n  for i in range(1<<n):\n    if i & (1<<j):\n      dp[i] = merge(i, i & ~(1<<j))\nL = tuple(accumulate((sum(d) for d in dp), max))\nprint(*L[1:], sep=\"\\n\")", "from copy import deepcopy\nN=int(input())\nA=[int(i) for i in input().split()]\n\ndef chmax(a,b):\n    if a[0]<b[1]:\n        return b\n    elif a[0]<b[0]:\n        return(b[0],a[0])\n    elif a[1]<b[0]:\n        return (a[0],b[0])\n    else:\n        return a\ndp=[(A[i],0) for i in range(1<<N)]\n#print(dp)\nfor i in range(N):\n    for j in range(1<<N):\n        if j & (1<<i):\n            #print(j,i,j|(1<<i))\n            dp[j]=chmax(dp[j],dp[j^(1<<i)])\n#print(dp)\nans =sum(dp[0])\nfor i in range(1,1<<N):\n    t = sum(dp[i])\n    ans = max(ans,t)\n    print(ans)", "N = int(input())\nA = list(map(int, input().split()))\n \n#dp[S] = A[S], -inf \u3067\u521d\u671f\u5316\u3000S\u306e\u90e8\u5206\u96c6\u5408T\u306e\u3046\u3061A[T]\u304c(\u6700\u5927\u306e\u3082\u306e, \u6b21\u306b\u5927\u304d\u3044\u3082\u306e)\u3000\u3092\u5165\u308c\u3066\u3044\u304f\n \ndp = [[A[S], -float('inf') ] for S in range(1 << N)]\nfor i in range(N):\n    for T in range( 1 << N):\n        if (T >> i) & 1 == 1: # T\u304ci\u3092\u542b\u3080\u3068\u304d\n            merge = dp[T] + dp[T ^ (1 << i)]\n            merge.sort(reverse = True)\n            dp[T] =merge[:2]\nans = -float('inf')\nfor S in range(1, 1 << N , 1):\n    ans = max(ans, sum(dp[S]))\n    print(ans)", "def solve():\n    N = int(input())\n    As = list(map(int, input().split())) + [0]\n\n    pow2 = 2**N\n\n    anss = []\n    ans = 0\n    max2s = [[0, -1]]\n    for S in range(1, pow2):\n        m1, m2 = S, -1\n        for i in range(N):\n            if (S>>i)&1:\n                S0 = S^(1<<i)\n                i1, i2 = max2s[S0]\n                if m1 == i1:\n                    m2 = m2 if As[m2] >= As[i2] else i2\n                elif As[m1] >= As[i1]:\n                    m2 = m2 if As[m2] >= As[i1] else i1\n                else:\n                    m2 = m1 if As[m1] >= As[i2] else i2\n                    m1 = i1\n        ans2 = As[m1]+As[m2]\n        if ans2 > ans:\n            ans = ans2\n        anss.append(ans)\n        max2s.append([m1, m2])\n\n    print(('\\n'.join(map(str, anss))))\n\n\nsolve()\n", "from itertools import accumulate\n\ndef zeta(data, merge):\n    \"\"\"\n    \uff08\u3053\u306e\u95a2\u6570\u306fdata\u3092\u4e0a\u66f8\u304d\u3057\u307e\u3059\uff09\n    M\u306f\u30e2\u30ce\u30a4\u30c9\n    data: 2^n -> M\n    output: 2^n -> M\n    merge: M -> M\n \n    ouput[i] = sum(data[j] for j in range(2^n) if i|j == i)\n    \"\"\"\n    n = len(data)\n    i = 1\n    while i < n:\n        j = i\n        while j < n:\n            data[j] = merge(data[j], data[j&~i])\n            j = (j+1)|i\n        i <<= 1\n    return data\n\n\ndef solve(A):\n    def merge(x,y):\n        return tuple(sorted(x+y)[-2:])\n    data = [(a,) for a in A]\n    zeta(data, merge)\n    return accumulate((sum(x) for x in data[1:]), max)\n\ndef __starting_point():\n    n = int(input())\n    A = tuple(map(int,input().split()))\n    print(*solve(A),sep='\\n')\n__starting_point()", "import sys\n\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep=\"\\n\")\ndef II(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef SI(): return sys.stdin.readline()[:-1]\n\nclass Top2:\n    def __init__(self,x=-1,y=-1):\n        if x<y:x,y=y,x\n        self.val=[x,y]\n        self.s=x+y\n\n    def __add__(self, other):\n        self.val=sorted(self.val+other.val,reverse=True)[:2]\n        return self\n\nn=II()\naa=LI()\ndp=[Top2(a) for a in aa]\n\nfor i in range(n):\n    for j in range((1<<n)-1,-1,-1):\n        if j>>i&1:continue\n        dp[j|1<<i]+=dp[j]\n\nmx=-1\nfor j in range(1,1<<n):\n    mx=max(mx,sum(dp[j].val))\n    print(mx)\n", "\n\"\"\"\n\nhttps://atcoder.jp/contests/arc100/tasks/arc100_c\n\n\u60c5\u5831\u3092\u518d\u5229\u7528\u3059\u308b\u306e\u304c\u30e1\u30a4\u30f3\nK=X\u306e\u6642\u306f,K=X-1\u306e\u6642\u306e\u7b54\u3048\u306b\u52a0\u3048\u3001 i or j == K \u306e\u5834\u5408\u3092\u8003\u3048\u308c\u3070\u3044\u3044\nor \u304cK\u3068\u306a\u308b\u5834\u5408\u30010\u306e\u6841\u306f\u4e21\u65b90\u3067\u30011\u306e\u6841\u306f\u7247\u65b9\u304c1\u306a\u3089\u3088\u3044\n1\u3067\u306f3\u901a\u308a\u306e\u5206\u3051\u65b9\u304c\u3042\u308b\u306e\u3067\u30013^N\u2026\n\n\u5927\u304d\u3044\u307b\u3046\u304b\u3089\u8003\u3048\u3066\u307f\u308b\uff1f\n\u6700\u5f8c\u306f\u3001\u5f53\u7136\u6700\u5927\u306e\u3084\u30642\u500b\u2192\u305d\u306e2\u3064\u306eindex \u306eOR\u307e\u3067\u306f\u305d\u308c\u304c\u4fdd\u6301\n\ndp[X] = X \u3068 or\u3057\u3066\u3082X\u306e\u307e\u307e\u306eindex\u306e\u96c6\u5408\u306b\u304a\u3051\u308b\u6700\u5927 & 2\u756a\u76ee\n\u2192\u3068\u3059\u308c\u3070\u30011\u306e\u6841\u5168\u3066\u306b\u95a2\u3057\u30660\u306b\u3057\u3066\u307f\u305f\u5974\u3068X\u3092\u898b\u308c\u3070\u63a8\u79fb\u3067\u304d\u308b\n\nO(2^N * logMAX(A)) \u3067\u89e3\u3051\u305d\u3046\u3060\n\n\"\"\"\n\nfrom sys import stdin\n\nN = int(stdin.readline())\nA = list(map(int,stdin.readline().split()))\nA.append(float(\"-inf\"))\n\ndp = []\nans = 0\naaa = []\n\nfor i in range(2**N):\n\n    if i == 0:\n        dp.append( ( 0,-1 ) )\n        continue\n\n    na,nb = i,-1\n    \n    for j in range(N):\n\n        if (2**j) & i > 0:\n\n            ta,tb = dp[i ^ (2**j)]\n            if A[na] < A[ta]:\n                nb = na\n                na = ta\n            elif A[nb] < A[ta] and ta != na:\n                nb = ta\n\n            if A[nb] < A[tb]:\n                nb = tb\n\n    #print (i,na,nb)\n    ans = max(A[na] + A[nb] , ans)\n    aaa.append(ans)\n    dp.append( ( na,nb ) )\n\nprint((\"\\n\".join(map(str,aaa))))\n", "def max2(a, b, c, d):\n    vals = sorted((a, b, c, d), reverse=True)\n    return vals[0], vals[1]\n\n\nn = int(input())\na = list(map(int, input().split()))\n\ndp = [[0] * (1 << n) for i in range(n + 1)]\ndq = [[0] * (1 << n) for i in range(n + 1)]\nfor i in range(1 << n):\n    dp[0][i] = a[i]\n\nfor i in range(n):\n    for bit_state in range(1 << n):\n        if (1 << i) & bit_state:\n            first, second = max2(dp[i][bit_state], dq[i][bit_state], dp[i][bit_state ^ (1 << i)], dq[i][bit_state ^ (1 << i)])\n        else:\n            first, second = dp[i][bit_state], dq[i][bit_state]\n        dp[i + 1][bit_state], dq[i + 1][bit_state] = first, second\n\nans = 0\nfor i in range(1, 1 << n):\n    ans = max(ans, dp[-1][i] + dq[-1][i])\n    print(ans)", "N,d=1<<int(input()),[[int(s)]for s in input().split()]\nr=N\nwhile r>1:\n\tr>>=1\n\tfor i in range(N):\n\t\tif i&r:d[i]=sorted(d[i^r]+d[i])[-2:]\nfor a,b in d[1:]:r=max(r,a+b);print(r)", "N = int(input())\nA = [(int(a), 0) for a in input().split()]\ncombine = lambda a, b: a if a[1] >= b[0] else b if b[1] >= a[0] else (a[0], b[0]) if a[0] > b[0] else (b[0], a[0])\n\nfor i in range(N):\n    ii = 1 << i\n    for j in range(1<<N)[::-1]:\n        if j & ii:\n            A[j] = combine(A[j], A[j^ii])\n\nANS = [0] * (1<<N)\nfor i in range(1, 1<<N):\n    ANS[i] = max(ANS[i-1], sum(A[i]))\n\nprint(\"\\n\".join(map(str, ANS[1:])))", "N=int(input())\nA=list(map(int,input().split()))+[0]\n\ndata=[[] for i in range(2**N)]\n\nfor i in range(1,2**N):\n    for j in range(N):\n        if i&(1<<j)==0:\n            continue\n        else:\n            data[i].append(i-(1<<j))\n\nMAX=[0]*2**N\nsemiMAX=[0]*2**N\n\nsemiMAX[0]=2**N\n\nif MAX[0]<A[1]:\n    MAX[1]=1\n    semiMAX[1]=0\nelse:\n    MAX[1]=0\n    semiMAX[1]=1\n\nK=[A[0]+A[1]]\nfor k in range(2,2**N):\n    a,b=k,2**N\n    for u in data[k]:\n        c,d=MAX[u],semiMAX[u]\n        if A[c]<=A[b]:\n            c=c\n        elif A[d]>=A[a]:\n            a,b=c,d\n        elif A[c]>A[a]:\n            a,b=c,a\n        elif A[a]>=A[c]>A[b] and a!=c:\n            b=c\n        elif A[a]>=A[d]>A[b] and a!=d:\n            b=d\n    MAX[k]=a\n    semiMAX[k]=b\n    K.append(max(K[-1],A[a]+A[b]))\n\nfor u in K:\n    print(u)", "N = int(input())\nA = list(map(int, input().split()))\nf = [[a, -1] for a in A]\nlim = 1<<N\nfor i in range(N):\n    bit = 1<<i\n    j = 0\n    while j < lim:\n        j |= bit\n        a, b = f[j]\n        c, d = f[j^bit]\n        if a < c:\n            f[j][0] = c\n            f[j][1] = d if d>a else a\n        elif b < c:\n            f[j][1] = c\n        j += 1\nans = sum(f[1])\nAns = [ans]\nfor a, b in f[2:]:\n    s = a+b\n    if s > ans:\n        ans = s\n    Ans.append(ans)\nprint((\"\\n\".join(map(str, Ans))))\n", "import sys\nINF = 1 << 60\nMOD = 10**9 + 7 # 998244353\nsys.setrecursionlimit(2147483647)\ninput = lambda:sys.stdin.readline().rstrip()\ndef resolve():\n    n = int(input())\n    f = [[a, 0] for a in map(int, input().split())]\n    dot = lambda p0, p1 : sorted(p0 + p1, reverse = 1)[:2]\n\n    for i in range(n):\n        for U in range(1 << n):\n            if not U >> i & 1:\n                f[U | 1 << i] = dot(f[U | 1 << i], f[U])\n\n    res = 0\n    for i in range(1, 1 << n):\n        res = max(res, sum(f[i]))\n        print(res)\nresolve()", "N=int(input())\nA=[int(i) for i in input().split()]\nB=[[A[i],-10**15] for i in range(2**N)]\nfor i in range(N):\n    for b in range(2**N):\n        if ((1&(b>>i))==1):\n            merge=B[b]+B[b^(1<<i)]\n            merge.sort(reverse=True)\n            B[b]=merge[:2]\nans=-10**15\nfor i in range(1,2**N):\n    ans=max([ans,sum(B[i])])\n    print(ans)\n", "N,r,d=int(input()),0,[[int(s)] for s in input().split()]\nfor n in range(N):\n\tB=1<<n\n\tfor i in range(1<<N):\n\t\tif i&B:d[i]=sorted(d[i^B]+d[i])[-2:]\nfor a,b in d[1:]:r=max(r,a+b);print(r)", "import sys\n\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep=\"\\n\")\ndef II(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef SI(): return sys.stdin.readline()[:-1]\n\nclass Top2:\n    def __init__(self,x=-1,y=-1):\n        if x<y:x,y=y,x\n        self.val=[x,y]\n        self.s=x+y\n\n    def __add__(self, other):\n        i=j=0\n        self.val=sorted(self.val+other.val,reverse=True)[:2]\n        self.s=sum(self.val)\n        return self\n\nn=II()\naa=LI()\ndp=[Top2(a) for a in aa]\n\nfor i in range(n):\n    for j in range((1<<n)-1,-1,-1):\n        if j>>i&1:continue\n        dp[j|1<<i]+=dp[j]\n\nmx=-1\nfor j in range(1,1<<n):\n    mx=max(mx,int(dp[j].s))\n    print(mx)\n", "from copy import deepcopy\nN=int(input())\nA=[int(i) for i in input().split()]\n\ndef chmax(a,b):\n    if a[0]<b[1]:\n        return b\n    elif a[0]<b[0]:\n        return(b[0],a[0])\n    elif a[1]<b[0]:\n        return (a[0],b[0])\n    else:\n        return a\ndp=[(A[i],0) for i in range(1<<N)]\n#print(dp)\nfor i in range(N):\n    for j in range(1<<N):\n        if (j & (1<<i))==0:\n            #print(j,i,j|(1<<i))\n            dp[j|(1<<i)]=chmax(dp[j],dp[j|(1<<i)])\n#print(dp)\nans =sum(dp[0])\nfor i in range(1,1<<N):\n    t = sum(dp[i])\n    ans = max(ans,t)\n    print(ans)", "n = int(input())\nf = [[a, 1] for a in map(int, input().split())]\ndot = lambda p, q : sorted(p + q)[-2:]\n\nfor d in range(n):\n    for U in range(1 << n):\n        if not U >> d & 1:\n            f[U | 1 << d] = dot(f[U | 1 << d], f[U])\n\nres = 0\nfor i in range(1, 1 << n):\n    res = max(res, sum(f[i]))\n    print(res)", "N = int(input())\nNN = (1<<N)\nA = list(map(int, input().split()))\ndp1 = A[:]\ndp2 = [0]*(NN)\nfor k in range(N):\n    bit = 1<<k\n    for i in range(NN):\n        if not i&bit:\n            if dp1[i] > dp1[i|bit]:\n                dp2[i|bit] = max(dp1[i|bit], dp2[i])\n                dp1[i|bit] = dp1[i]\n            elif dp1[i] > dp2[i|bit]:\n                dp2[i|bit] = dp1[i]\nres = 0\nfor a, b in zip(dp1[1:],dp2[1:]):\n    res = max(res, a+b)\n    print(res)\n", "N,*A=map(int,open(0).read().split())\nA,r,R=[[a]for a in A],0,range\nfor n in R(N):\n B=1<<n\n for i in R(1<<N):\n  if i&B:A[i]=sorted(A[i^B]+A[i])[-2:]\nfor a,b in A[1:]:r=max(r,a+b);print(r)", "def zata(N,A):\n    dp = A[:]\n    for n in range(N):\n        bit=1<<n\n        for i in range(1<<N):\n            if i&bit:\n                dp[i]=merge(dp[i^bit],dp[i])\n    return dp\n\ndef merge(x,y):\n    return sorted(x+y)[:2]\n\nN=int(input())\nA,res=[],0\nfor a in map(int, input().split()):\n    A.append([-a])\nfor a,b in zata(N,A)[1:]:\n    res=min(res,a+b)\n    print(-res)", "N = int(input())\nA = list(map(int, input().split()))\nf = [[a] for a in A]\nfor i in range(N):\n    for j in range(1<<N):\n        if j & 1<<i:\n            f[j] = sorted(f[j]+f[j^1<<i], reverse=True)[:2]\nAns = [sum(f[1])]\nfor a, b in f[2:]:\n    Ans.append(max(Ans[-1], a+b))\nprint((\"\\n\".join(map(str, Ans))))\n", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 10**9+7\ndd = [(-1,0),(0,1),(1,0),(0,-1)]\nddn = [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\n\n\ndef main():\n    n = I()\n    n2 = 2**n\n    a = LI()\n    t = [[0,0] for _ in range(n2)]\n    ii = [2**i for i in range(18)]\n    M = n2\n    for i in range(n2):\n        ti = t[i]\n        ti[0] = a[i] * M + i\n        for j in range(18):\n            if not i & ii[j]:\n                continue\n            for c in t[i^ii[j]]:\n                if ti[0] < c:\n                    ti[1] = ti[0]\n                    ti[0] = c\n                elif ti[1] < c and ti[0] != c:\n                    ti[1] = c\n\n    r = [0]\n    for i in range(1,n2):\n        tr = sum(map(lambda x: x//M, t[i]))\n        if tr > r[-1]:\n            r.append(tr)\n        else:\n            r.append(r[-1])\n    return '\\n'.join(map(str, r[1:]))\n\n\n\nprint(main())\n", "def upd(ary,nary):\n    tt=ary+nary\n    tt.sort()\n    return [tt[-2],tt[-1]]\n\ndef main1(n,a):\n    # 1<=k<=2^n-1\n    # O(n*2^n)\n    dp=[[a[i],0] for i in range(1<<n)]\n    for j in range(n):\n      bit=1<<j\n      for i in range(2**n):\n        if i&bit==0:\n          dp[i|bit]=upd(dp[i^bit],dp[i])\n    pre=0\n    for x,y in dp[1:]:\n      pre=max(pre,x+y)\n      print(pre)\n    \nn=int(input())\na=list(map(int,input().split()))\nmain1(n,a)\n#num0=main0(n,a)\n#print(*num1,sep='\\n')\n#print(*num0,sep=' ')\n", "r=N=1<<int(input());d=[[int(s)]for s in input().split()]\nwhile r>1:\n\tr>>=1\n\tfor i in range(N):\n\t\tif i&r:d[i]=sorted(d[i^r]+d[i])[-2:]\nfor a,b in d[1:]:r=max(r,a+b);print(r)", "N = int(input())\nA = list(map(int, input().split()))\ndp1 = [(0, A[0])]\nans = 0\nfor i in range(1, 1<<N):\n  d = {i: A[i]}\n  for k in range(18):\n    b = 1<<k\n    if i&b == 0: continue\n    j, v = dp1[i-b]\n    d.update({j: v})\n  p1, p2 = sorted(list(d.items()), key=lambda x: -x[1])[:2]\n  dp1.append(p1)\n\n  ans = max(ans, p1[1] + p2[1])\n  print(ans)\n\n", "N=int(input())\nA=list(map(int,input().split()))\n\ndata=[[(A[0],0),(-1,-1)] for i in range(2**N)]\nfor i in range(1,2**N):\n    for j in range(N):\n        if i>>j&1==1:\n            a,b=data[i-2**j]\n            if a[0]>data[i][0][0]:\n                data[i][1]=data[i][0]\n                data[i][0]=a\n            elif a[0]>data[i][1][0] and a[1]!=data[i][0][1]:\n                data[i][1]=a\n            if b[0]>data[i][0][0]:\n                data[i][1]=data[i][0]\n                data[i][0]=b\n            elif b[0]>data[i][1][0] and b[1]!=data[i][0][1]:\n                data[i][1]=b\n    a=(A[i],i)\n    if a[0]>data[i][0][0]:\n        data[i][1]=data[i][0]\n        data[i][0]=a\n    elif a[0]>data[i][1][0] and a[1]!=data[i][0][1]:\n        data[i][1]=a\n\n\nans=[data[i][0][0]+data[i][1][0] for i in range(2**N)]\nfor i in range(2,2**N):\n    ans[i]=max(ans[i],ans[i-1])\n\nfor i in range(1,2**N):\n    print((ans[i]))\n", "import sys\ninput = sys.stdin.readline\n\ndef I(): return int(input())\ndef MI(): return list(map(int, input().split()))\ndef LI(): return list(map(int, input().split()))\n\ndef main():\n    mod=10**9+7\n    N=I()\n    A=LI()\n    N2=pow(2,N)\n    \n    \"\"\"\n    \u4e0b\u4f4d\u96c6\u5408\u306b\u5bfe\u3059\u308b\u9ad8\u901f\u30bc\u30fc\u30bf\u5909\u63db\uff0e\n    (K\u304ci,j\u3092\u5305\u542b\u3057\u3066\u3044\u308b\uff09\n    \u3053\u3053\u3067\u306eg\u3092\u9069\u5207\u306af\u306e\u548c\u3068\u3057\u3066\u8003\u3048\u308b\u306e\u304c\u57fa\u672c\u3060\u3051\u3069\uff0c\n    \u4eca\u56de\u306f\u548c\u3067\u306f\u306a\u304f\u3066\u4e0a\u4f4d2\u3064\u306e\u8981\u7d20\u3092\u6301\u3064\n    \"\"\"\n    \n    g=[[0,0]for _ in range(N2)]\n    \n    for i in range(N2):\n        g[i][0]=A[i]\n        \n    for k in range(N):#\u3053\u306ek\u306fK\u3068\u9055\u3046\uff0ckbit\u76ee\u306b\u7740\u76ee\u3059\u308b\n        for s in range(N2):#\u3053\u308c\u304c\u4eca\u56de\u3067\u3044\u3046K\uff0c\n            if ((s>>k)&1):#s\u306ekbit\u76ee\u304c\u7acb\u3063\u3066\u3044\u308c\u3070\n                #\u52a0\u6cd5\u3068\u3057\u3066\uff0c\u4e0a\u4f4d2\u3064\u3092\u9078\u629e\u3059\u308b\n                L=[0,0,0,0]\n                L[0]=g[s][0]\n                L[1]=g[s][1]\n                L[2]=g[(s^(1<<k))][0]#s\u306ekbit\u76ee\u3092\u30de\u30b9\u30af\u3057\u305fg\u3092\u6301\u3063\u3066\u304f\u308b\n                L[3]=g[(s^(1<<k))][1]\n                L.sort()\n                g[s][0]=L[-1]\n                g[s][1]=L[-2]\n                #print(bin(s),k,g[s],L)\n                \n    ans=0\n    for k in range(1,N2):\n        ans=max(ans,sum(g[k]))\n        print(ans)\n        \n    \n                    \n                \n            \n        \n    \n    \n\nmain()\n", "def upd(now,x):\n  if now[0]<x:\n    now=[x,now[0]]\n  elif now[1]<x:\n    now[1]=x\n  return now\n\ndef update(now,next):\n  ary=now+next\n  ary.sort(reverse=True)\n  return ary[:2]\n\n\ndef main(n,a):\n  dp=[[a[i],0] for i in range(2**n)]\n  #dp[0][0]=a[0]\n  now=a[0]\n  for j in range(n):\n    bit=1<<j\n    for i in range(1<<n):\n      if i&bit==0:\n        # i|bit:i\u3092\u90e8\u5206\u96c6\u5408\u3068\u3057\u3066\u542b\u3080\u6570\u5b57\n        dp[i|bit]=update(dp[i],dp[i^bit])\n  now=sum(dp[0])\n  for k in range(1,2**n):\n    now=max(now,sum(dp[k]))\n    print(now)\nn=int(input())\na=list(map(int,input().split()))\nmain(n,a)\n\n", "N = int(input())\nA = list(map(int, input().split()))\nINF = float(\"inf\")\nB = [[A[i], -INF] for i in range(1 << N)]\nfor i in range(N):\n    for j in range(1 << N):\n        if j & (1 << i):\n            tmp = B[j] + B[j ^ (1 << i)]\n            tmp = sorted(tmp, reverse=True)\n            B[j] = tmp[:2]\n\nans = -INF\nfor i in range(1, 1 << N):\n    ans = max(ans, sum(B[i]))\n    print(ans)\n", "import sys\ndef I(): return int(sys.stdin.readline().rstrip())\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))\n\n\nN = I()\nA = LI()\n\n# \u9ad8\u901f\u30bc\u30fc\u30bf\u5909\u63db\n\ndp = [[0]*(N+1) for _ in range(1<<N)]\nfor i in range(1<<N):\n    for j in range(N+1):\n        if j == 0:\n            dp[i][j] = A[i]\n            continue\n        if not i&(1<<(j-1)):\n            dp[i][j] = dp[i][j-1]\n        else:\n            a,b = divmod(dp[i][j-1],1<<30)\n            c,d = divmod(dp[i&~(1<<(j-1))][j-1],1<<30)\n            X = [a,b,c,d]\n            X.sort(reverse=True)\n            dp[i][j] = (X[1]<<30)+X[0]\n\nans = 0\nfor i in range(1,1<<N):\n    a,b = divmod(dp[i][-1],1<<30)\n    ans = max(ans,a+b)\n    print(ans)\n", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = [[(j, i), (-1, -1)] for i, j in enumerate(a)]\n    ans = 0\n    for i in range(1, 2**n):\n        (t1, t2), (t3, t4) = d[i]\n        for j in range(n):\n            (t5, t6), (t7, t8) = d[i & ~(1 << j)]\n            if t6 not in [t2, t4]:\n                if t5 > t1:\n                    t1, t2, t3, t4 = t5, t6, t1, t2\n                elif t5 > t3:\n                    t3, t4 = t5, t6\n            if t8 not in [t2, t4]:\n                if t7 > t3:\n                    t3, t4 = t7, t8\n        d[i] = [(t1, t2), (t3, t4)]\n        ans = max(ans, t1+t3)\n        print(ans)\n\n\nmain()", "def renew(lis,id1,id2):\n  tar = lis[id1]; bow = lis[id2]\n  if tar[0] < bow[0]:\n    tar = [bow[0],max(bow[1],tar[0])]\n  else:\n    tar[1] = max(bow[0],tar[1])\n  lis[id1] = tar\n  return\n\nn = int(input())\na = [[x,0] for x in list(map(int, input().split()))]\nfor j in range(n):\n  for i in range(2**n):\n    if not i & (1<<j):\n      renew(a,i|(1<<j),i)\na = [x+y for x,y in a[1:]]\nfor i in range(1,2**n-1):\n  if a[i] < a[i-1]:\n    a[i] = a[i-1]\nfor x in a:\n  print(x)\n", "# coding: utf-8\n# Your code here!\nimport sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nn = int(readline())\n*a, = list(map(int,readline().split()))\n\ntop2 = [[i,0] for i in a]\nfor i in range(n):\n    i = 1<<i\n    for j in range(1<<n):\n        if j&i:\n            top2[j] = list(sorted(top2[j^i] + top2[j]))[2:]\n\n#print(top2)\n\nans = list(map(sum,top2))\n\nfor i in range(1,1<<n):\n    ans[i] = max(ans[i],ans[i-1])\n    print((ans[i]))\n\n\n", "from itertools import accumulate\n\ndef solve(A):\n    def keep_max_2(i,j,k):\n        if i == k or j == k:\n            return i,j\n        # A[i] > A[j]\n        if A[j] > A[k]:\n            return i,j\n        elif A[i] > A[k]:\n            return i,k\n        else:\n            return k,i\n    n = len(A)\n    dp0 = [0]*n\n    dp1 = [0]*n\n\n    small = min((a,i) for i,a in enumerate(A))[1]\n\n    for i in range(1,n):\n        x,y = (i,0) if A[i] > A[0] else (0,i)\n        for d in range(n.bit_length()-1):\n            j = i^(1<<d)\n            if j > i:\n                continue\n            x,y = keep_max_2(x,y,dp0[j])\n            x,y = keep_max_2(x,y,dp1[j])\n        dp0[i] = x\n        dp1[i] = y\n    return accumulate((A[dp0[i]]+A[dp1[i]] for i in range(1,n)), max)\n\n\n\ndef __starting_point():\n    n = int(input())\n    A = tuple(map(int,input().split()))\n    print(*solve(A),sep='\\n')\n__starting_point()", "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nA = list(map(int, input().split()))\n\nMax = [[(0, A[0])]]\nans = 0\nfor bit in range(1, (1<<N)):\n    dic = {bit: A[bit]}\n    for i in range(N):\n        if bit&(1<<i) != 0:\n            for ind, val in Max[bit-(1<<i)]:\n                dic[ind] = val\n    com = []\n    for ind, val in dic.items():\n        if len(com) < 2:\n            com.append((ind, val))\n        else:\n            if com[0][1] < com[1][1]:\n                if com[0][1] < val:\n                    com[0] = (ind, val)\n                elif com[1][1] < val:\n                    com[1] = (ind, val)\n            else:\n                if com[1][1] < val:\n                    com[1] = (ind, val)\n                elif com[0][1] < val:\n                    com[0] = (ind, val)               \n    Max.append(com)\n    tmp = com[0][1] + com[1][1]\n    if tmp > ans:\n        ans = tmp\n    print(ans)", "#!/usr/bin/env python\n\nfrom collections import deque\nimport itertools as it\nimport sys\nimport math\n\ndef func():\n    N = int(input())\n\n    A = list(map(int, input().split()))\n    P = [[(A[0], 0), (0, 0)] for i in range(2 ** (N + 1))]\n    A = [0] * (2 ** N) + A\n\n    for i in range(2 ** N + 1, 2 ** (N + 1)):\n        if (A[i], i - 2**N) > P[i][0]:\n            P[i][1] = P[i][0]\n            P[i][0] = (A[i], i - 2**N)\n        elif (A[i], i) > P[i][1]:\n            P[i][1] = (A[i], i - 2**N)\n        for j in range(N):\n            piyo = i - 2 ** N\n            if (piyo & (1 << j)) == 0:\n                index = piyo + (1 << j) + 2 ** N\n                for k in range(2):\n                    if P[i][k] > P[index][0]:\n                        P[index][1] = P[index][0]\n                        P[index][0] = P[i][k]\n                    elif P[i][k] > P[index][1] and P[i][k] != P[index][0]:\n                        P[index][1] = P[i][k]\n    ans = 0\n    for i in range(2 ** N + 1, 2 ** (N + 1)):\n        ans = max(ans, P[i][0][0] + P[i][1][0])\n        print(ans)\n    #print(P)\n\nfunc()", "N=int(input())\nA=[int(i) for i in input().split()]\nC=[]\nl=0\nC.append(([(0,-1),(A[0],0)]))\nfor i in range(1,2**N):\n  biggest,second=(A[i],i),(0,-1)\n  for k in range(l+1):\n    if i&(1<<k):\n      for a in C[i^(1<<k)]:\n        if a[0]>biggest[0]:\n          second=biggest\n          biggest=a\n        elif a[0]>second[0] and biggest!=a:\n          second=a\n  C.append([second,biggest])\n  if i==2**(l+1)-1:\n    l+=1\nans=[0]\nfor i in range(1,2**N):\n  a,b=C[i]\n  ans.append(max(ans[-1],a[0]+b[0]))\n  print(ans[-1])", "N = int(input())\nA = list(map(int,input().split()))\n\nA = [[a, 0] for a in A]\n#print(A)\nstep = 1\nfor _ in range(N):\n  step *= 2\n  for s in range(2**N):\n    if (s // (step//2)) % 2 == 0: continue\n    tmp = A[s] + A[s-step//2]\n    tmp.sort()\n    #print(s, tmp, s, s-step//2)\n    A[s] = [tmp[-1], tmp[-2]]\n#print(A)\ntmp = 0\nfor s in range(1,2**N):\n  tmp = max(tmp, sum(A[s]))\n  print(tmp)\n", "N = int(input())\nA = [[(0, 0)] * (1<<N) for _ in range(N+1)]\nA[0] = [(int(a), 0) for a in input().split()]\ncombine = lambda a, b: a if a[1] >= b[0] else b if b[1] >= a[0] else (a[0], b[0]) if a[0] > b[0] else (b[0], a[0])\n\nfor i in range(1, N+1):\n    ii = 1 << i - 1\n    for j in range(1<<N):\n        if j & ii:\n            A[i][j] = combine(A[i-1][j], A[i-1][j^ii])\n        else:\n            A[i][j] = A[i-1][j]\n\nANS = [0] * (1<<N)\nfor i in range(1, 1<<N):\n    ANS[i] = max(ANS[i-1], sum(A[-1][i]))\n\nprint(\"\\n\".join(map(str, ANS[1:])))", "import sys\nsys.setrecursionlimit(10**6)\nreadline = sys.stdin.readline\n\nn = int(input()) \n#n,x = [int(i) for i in readline().split()]\na = [int(i) for i in readline().split()]\n\ndef zeta_transform(a,n): #\u9ad8\u901f\u30bc\u30fc\u30bf\u5909\u63db\n    b = [[i,0] for i in a]\n    for i in range(n):\n        I = 1<<i\n        for j in range(1<<n):\n            if not j&I:\n                if b[j][0] > b[j^I][0]:\n                    b[j^I][0],b[j^I][1] = b[j][0], b[j^I][0]\n                    if b[j][1] > b[j^I][1]:\n                        b[j^I][1] = b[j][1]\n                elif b[j][0] > b[j^I][1]:\n                    b[j^I][1] = b[j][0]\n    return b\n\n#print(a)\nza = zeta_transform(a[:],n)\n#print(zeta_transform(a[:],n),\"zeta-a\")\n\nfor i, zi in enumerate(za):\n    if not i: ans = 0\n    else:\n        i1,i2 = za[i]\n        ans = max(ans,i1+i2)\n        print(ans)    \n\n\n", "N = int(input())\nA = list(map(int, input().split()))\nM = 2 ** N\n\nans = [0] * M\nmax_list = [0] * M\nfor i in range(1, M):\n    cand = [i]\n    ans_cand = []\n    ibin = bin(i)[2:].zfill(N)\n    for j in range(N):\n        if ibin[j] == '1':\n            cand.append(max_list[i - 2 ** (N - j - 1)])\n            ans_cand.append(ans[i - 2 ** (N - j - 1)])\n    cand_set = sorted(list(set(cand)))\n    max1 = 0\n    max2 = 0\n    for c in cand_set:\n        Ac = A[c]\n        if Ac >= max1:\n            max2 = max1\n            max1 = Ac\n            max_idx = c\n        elif Ac > max2:\n            max2 = Ac\n    ans_cand.append(max1 + max2)\n    ans_cand.append(ans[i - 1])\n    max_list[i] = max_idx\n    ans[i] = max(ans_cand)\n    print((ans[i]))\n", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = [[j, i, -1, -1] for i, j in enumerate(a)]\n    ans = 0\n    for i in range(1, 2**n):\n        t1, t2, t3, t4 = d[i]\n        for j in range(len(bin(i))-2):\n            t5, t6, t7, t8 = d[i & ~(1 << j)]\n            if t5 > t1:\n                t1, t2, t3, t4 = t5, t6, t1, t2\n            elif t5 > t3:\n                if t6 != t2:\n                    t3, t4 = t5, t6\n                    continue\n            if t7 > t3:\n                t3, t4 = t7, t8\n        d[i] = [t1, t2, t3, t4]\n        ans = max(ans, t1+t3)\n        print(ans)\n\n\nmain()", "N,r,d=1<<int(input()),0,[[int(s)]for s in input().split()]\nB=1\nwhile B < N:\n\tfor i in range(N):\n\t\tif i&B:d[i]=sorted(d[i^B]+d[i])[-2:]\n\tB<<=1\nfor a,b in d[1:]:r=max(r,a+b);print(r)", "import sys\n\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep=\"\\n\")\ndef II(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef SI(): return sys.stdin.readline()[:-1]\n\nclass Top2:\n    def __init__(self,x=-1,y=-1):\n        if x<y:x,y=y,x\n        self.val=[x,y]\n\n    def __add__(self, other):\n        self.val=sorted(self.val+other.val,reverse=True)[:2]\n        return self\n\nn=II()\naa=LI()\ndp=[Top2(a) for a in aa]\n\nfor i in range(n):\n    for j in range((1<<n)-1,-1,-1):\n        if j>>i&1:continue\n        dp[j|1<<i]+=dp[j]\n\nmx=-1\nfor j in range(1,1<<n):\n    mx=max(mx,sum(dp[j].val))\n    print(mx)\n", "from heapq import heappush, heappop, heappushpop\nN = int(input())\n*A, = map(int, input().split())\n\ndef update(v, que):\n    p, q = que\n    if v == p or v == q:\n        return\n    heappushpop(que, v)\n\nmemo = [None]*(2**N)\nmemo[0] = [(0, -1), (A[0], 0)]\nma = 0; ans = []\nfor i in range(1, 2**N):\n    res = [(0, -1), (A[i], i)]\n    for j in range(N):\n        if (i >> j) & 1 == 0:\n            continue\n        p, q = memo[i ^ (1 << j)]\n        update(p, res)\n        update(q, res)\n    p, q = memo[i] = res\n    ma = max(ma, p[0] + q[0])\n    ans.append(ma)\nprint(*ans, sep='\\n')\n", "def max2(p, q):\n    e, b = p[0], p[1]\n    c, d = q[0], q[1]\n    s = list(set([e, b, c, d]))\n    m1, m2 = 1<<n, 1<<n\n    for i in s:\n        if a[m1]<a[i]:\n            m2 = m1\n            m1 = i\n        elif a[m2]<a[i]:\n            m2 = i\n    return (m1, m2)\n\nn = int(input())\na = list(map(int, input().split()))\ng = [(i, (1<<n)) for i in range(1<<n)]\na+=[0]\nres = 0\nfor i in range(n):\n    for j in range(1<<n):\n        if (1<<i)&j: g[j] = max2(g[j], g[j^(1<<i)])\nans = []\nfor i in range(1, 1<<n):\n    res = max(res, a[g[i][0]]+a[g[i][1]])\n    ans.append(res)\nprint(*ans, sep = '\\n')", "j=n=1<<int(input())\na=[[int(s)]for s in input().split()]\nwhile~-j:j>>=1;a=[sorted(a[i]+a[i^j]*(i&j>0))[-2:]for i in range(n)]\nfor s,f in a[1:]:j=max(j,s+f);print(j)", "N,d,r=int(input()),[],0\nfor a in map(int,input().split()):d.append([-a])\nfor n in range(N):\n    B=1<<n\n    for i in range(1<<N):\n        if i&B:d[i]= sorted(d[i^B]+d[i])[:2]\nfor a,b in d[1:]:r=min(r,a+b);print(-r)", "#!/usr/bin/env python\n\nfrom collections import deque\nimport itertools as it\nimport sys\nimport math\n\ndef func():\n    N = int(input())\n\n    A = list(map(int, input().split()))\n    P = [[(A[0], 0), (0, 0)] for i in range(2 ** N)]\n\n    for i in range(1, 2 ** N):\n        Ai = A[i]\n        Pi = P[i]\n        if (Ai, i) > Pi[0]:\n            Pi[1] = Pi[0]\n            Pi[0] = (Ai, i)\n        elif (Ai, i) > Pi[1]:\n            Pi[1] = (Ai, i)\n        for j in range(N):\n            if (i & (1 << j)) == 0:\n                Pindex = P[i + (1 << j)]\n                for k in range(2):\n                    if Pi[k] > Pindex[0]:\n                        Pindex[1] = Pindex[0]\n                        Pindex[0] = Pi[k]\n                    elif Pi[k] > Pindex[1] and Pi[k] != Pindex[0]:\n                        Pindex[1] = Pi[k]\n    ans = 0\n    for i in range(1, 2 ** N):\n        ans = max(ans, P[i][0][0] + P[i][1][0])\n        print(ans)\n    #print(P)\n\nfunc()", "#!/usr/bin/env python\n\nfrom collections import deque\nimport itertools as it\nimport sys\nimport math\n\ndef func():\n    N = int(input())\n\n    A = list(map(int, input().split()))\n    P = [[(A[0], 0), (0, 0)] for i in range(2 ** (N + 1))]\n\n    for i in range(1, 2 ** N):\n        if (A[i], i) > P[i][0]:\n            P[i][1] = P[i][0]\n            P[i][0] = (A[i], i)\n        elif (A[i], i) > P[i][1]:\n            P[i][1] = (A[i], i)\n        for j in range(N):\n            if (i & (1 << j)) == 0:\n                index = i + (1 << j)\n                for k in range(2):\n                    if P[i][k] > P[index][0]:\n                        P[index][1] = P[index][0]\n                        P[index][0] = P[i][k]\n                    elif P[i][k] > P[index][1] and P[i][k] != P[index][0]:\n                        P[index][1] = P[i][k]\n    ans = 0\n    for i in range(1, 2 ** N):\n        ans = max(ans, P[i][0][0] + P[i][1][0])\n        print(ans)\n    #print(P)\n\nfunc()", "n = int(input())\na = list(map(int,input().split()))\ndp = [[0,0] for i in range(1<<n)]\ndef merge(ls1,ls2):\n  p,q = ls1\n  r,s = ls2\n  ret = [max(p,r)]\n  if p>r:\n    ret.append(max(q,r))\n  else:\n    ret.append(max(p,s))\n  return ret\nfor i in range(1<<n):\n  dp[i][0] = a[i]\nfor i in range(n):\n  for j in range(1<<n):\n    if 1<<i & j:\n      dp[j] = merge(dp[j],dp[1<<i^j])\nans = [0 for i in range(2**n)]\nfor i in range(1,1<<n):\n  ans[i] = max(ans[i-1],sum(dp[i]))\nfor i in ans:\n  if i:\n    print(i)", "N = int(input())\nAs = [(A << 20) + i for i, A in enumerate(map(int, input().split()))]\n\n\ndef chmax(i, elem):\n    nonlocal dp\n    if dp[0][i] < elem:\n        dp[1][i] = dp[0][i]\n        dp[0][i] = elem\n        return True\n    elif dp[1][i] < elem < dp[0][i]:  # skip dp[0][i] == elem\n        dp[1][i] = elem\n        return True\n    else:\n        return False\n\n\ndp = [[0] * len(As) for _ in range(2)]  # first largest and second largest\ndp[0][0] = As[0]\nans = 0\nfor i in range(1, 2 ** N):\n    for j in range(N):\n        if i & (1 << j):\n            if chmax(i, dp[0][i & ~(1 << j)]):\n                chmax(i, dp[1][i & ~(1 << j)])\n    chmax(i, As[i])\n    ans = max(ans, (dp[0][i] + dp[1][i]) >> 20)\n    print(ans)\n", "import sys\ninput = sys.stdin.readline\nfrom heapq import heappushpop\n\nN = int(input())\nA = [int(x) for x in input().split()]\n\n# B_x = max {A_y | y\\subset x}\n# \u3068\u601d\u3063\u305f\u304c\u30012\u5143\u305a\u3064\u6301\u3064\u5fc5\u8981\u304c\u3042\u308b\u3002\n# (\u5024\u3001\u4f55\u756a\u304b\u3089\u6765\u305f\u304b)\nB = []\nfor n,a in enumerate(A):\n    arr = [(0,0),(a,n)]\n    m = n\n    while m:\n        bit = m & (-m)\n        (x,i),(y,j) = B[n-bit]\n        if (x,i) != arr[-1]:\n            heappushpop(arr,(x,i))\n        if (y,j) != arr[-1]:\n            heappushpop(arr,(y,j))\n        m -= bit\n    B.append(arr)\n\nanswer = [0]\nfor (x,i),(y,j) in B[1:]:\n    z = answer[-1]\n    if z < x + y:\n        z = x + y\n    answer.append(z)\nprint(('\\n'.join(map(str,answer[1:]))))\n\n", "import sys\nreadline = sys.stdin.readline\n\nN = int(readline())\nA = list(map(int, readline().split()))\n\ndp = [(a, 0) for a in A]\nfor i in range(N):\n    for j in range(1<<N):\n        if not j & (1<<i):\n            k = j|(1<<i)\n            a, b = dp[k]\n            c, d = dp[j]\n            res = None\n            if a > c:\n                if b > c:\n                    res = (a, b)\n                else:\n                    res = (a, c)\n            else:\n                if a > d:\n                    res = (c, a)\n                else:\n                    res = (c, d)\n            assert res == tuple(sorted([a, b, c, d], reverse = True)[:2]), ''\n            dp[k] = res\ndp[0] = sum(dp[0])\nfor i in range(1, 1<<N):\n    dp[i] = max(dp[i-1], sum(dp[i]))\nprint('\\n'.join(map(str, dp[1:])))", "from itertools import accumulate\n\ndef zeta(data, merge):\n    \"\"\"\n    \uff08\u3053\u306e\u95a2\u6570\u306fdata\u3092\u4e0a\u66f8\u304d\u3057\u307e\u3059\uff09\n    M\u306f\u30e2\u30ce\u30a4\u30c9\n    data: 2^n -> M\n    output: 2^n -> M\n    merge: M -> M\n \n    ouput[i] = sum(data[j] for j in range(2^n) if i|j == i)\n    \"\"\"\n    n = len(data)\n    i = 1\n    while i < n:\n        j = i\n        while j < n:\n            data[j] = merge(data[j], data[j&~i])\n            j = (j+1)|i\n        i <<= 1\n    return data\n\n\ndef solve(A):\n    def merge(x,y):\n        return sorted(x+y)[-2:]\n    data = [[a] for a in A]\n    zeta(data, merge)\n    return accumulate((sum(x) for x in data[1:]), max)\n\ndef __starting_point():\n    n = int(input())\n    A = tuple(map(int,input().split()))\n    print(*solve(A),sep='\\n')\n__starting_point()", "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nalst = list(map(int, input().split()))\nmax_ = 0\ndp = [[a, 0] for a in alst]\n\nfor i in range(n):\n    for s in range(1 << n):\n        if (s >> i) & 1:\n            lst = dp[s] + dp[s - (1 << i)]\n            lst.sort(reverse = True)\n            dp[s] = lst[:2].copy()\n\nfor a, b in dp[1:]:\n    max_ = max(max_, a + b)\n    print(max_)", "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nA = list(map(int, input().split()))\ndp = [[A[S], 0] for S in range(1 << N)]\nfor k in range(N):\n    for S in range(1 << N):\n        if S >> k & 1:\n            if dp[S][0] < dp[S ^ (1 << k)][0]:\n                dp[S][1] = max(dp[S][0], dp[S ^ (1 << k)][1])\n                dp[S][0] = dp[S ^ (1 << k)][0]\n            else:\n                dp[S][1] = max(dp[S][1], dp[S ^ (1 << k)][0])\nans = 0\nfor K in range(1, 1 << N):\n    ans = max(ans, sum(dp[K]))\n    print(ans)", "from sys import stdin\nreadline = stdin.readline\n\nn = int(readline())\n\na = list(map(int, readline().split()))\nk_max = 1 << n\n\n# \u548c\u304c\u6700\u5927 => \u6700\u5927\u30012\u756a\u76ee\u306b\u5927\u304d\u3044\u3082\u306e\u306e\u548c\n# dp[k] == k\u3092\u5f97\u308b\u3068\u304d\u306e\u6700\u5927\u30012\u756a\u76ee\u306b\u5927\u304d\u3044\u3082\u306e\n# == max(dp[i] | i \u306fk\u306e\u90e8\u5206\u96c6\u5408)\n# k\u306e\u90e8\u5206\u96c6\u5408\u306f k \u306b1\u8981\u7d20\u8db3\u308a\u306a\u3044\u3082\u306e\u3092\u5217\u6319\u3059\u308c\u3070\u5341\u5206\u3002\n# (2\u8981\u7d20\u4ee5\u4e0a\u8db3\u308a\u306a\u3044\u3082\u306e\u306f1\u8981\u7d20\u8db3\u308a\u306a\u3044\u3082\u306e\u306e\u90e8\u5206\u96c6\u5408\u306a\u306e\u3067)\ndp = [[a[i], 0] for i in range(k_max)]\nfor i in range(n):\n    bit = (1 << i)  # i bit\u76ee\u306b\u7740\u76ee\n    for src in range(k_max):  # i bit\u76ee\u304c0\u306e\u3082\u306e\u304b\u3089ibit\u76ee\u304c1\u306e\u3082\u306e\u3078\u914d\u308bDP\n        if bit & src:\n            continue  # \u3059\u3067\u306bi bit\u76ee\u304c1\u306a\u3089\u7121\u8996\n        dst = bit | src\n        max_values = dp[dst] + dp[src]\n        max_values.sort()\n        dp[dst] = [max_values[-1], max_values[-2]]\n\n# k\u4ee5\u4e0b => \u524d\u56de\u306e\u7b54\u3048(k\u672a\u6e80)\u3068k\u306b\u7b49\u3057\u3044\u6642\u3092\u5408\u308f\u305b\u305f\u7d50\u679c\nans = 0\nfor k in range(1, k_max):\n    ans = max(ans, dp[k][0] + dp[k][1])\n    print(ans)\n", "from itertools import accumulate\n\ndef zeta(data, merge):\n    \"\"\"\n    \uff08\u3053\u306e\u95a2\u6570\u306fdata\u3092\u4e0a\u66f8\u304d\u3057\u307e\u3059\uff09\n    M\u306f\u30e2\u30ce\u30a4\u30c9\n    data: 2^n -> M\n    output: 2^n -> M\n    merge: M -> M\n \n    ouput[i] = sum(data[j] for j in range(2^n) if i|j == i)\n    \"\"\"\n    n = len(data)\n    i = 1\n    while i < n:\n        j = i\n        while j < n:\n            data[j] = merge(data[j], data[j&~i])\n            j = (j+1)|i\n        i <<= 1\n    return data\n\n\ndef solve(A):\n    def merge(x,y):\n        return sorted(x+y)[-2:]\n    data = [[a] for a in A]\n    zeta(data, merge)\n    return accumulate((sum(x) for x in data[1:]), max)\n\ndef __starting_point():\n    n = int(input())\n    A = tuple(map(int,input().split()))\n    print(*solve(A),sep='\\n')\n__starting_point()", "j=n=1<<int(input())\na=[[int(s)]for s in input().split()]\nwhile j>1:j>>=1;a=[sorted(a[i]+a[i^j]*(i&j>0))[-2:]for i in range(n)]\nfor s,f in a[1:]:j=max(j,s+f);print(j)"]