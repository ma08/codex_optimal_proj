["pillow=lambda s:('n','B')in zip(*s)", "def pillow(s):\n    return ('n','B') in zip(*s)", "def pillow(arr):\n    s1, s2 = arr\n    return bool({i for i, a in enumerate(s1) if a == 'n'} &\n                {i for i, b in enumerate(s2) if b == 'B'})", "def pillow(s):\n    return ('n', 'B') in zip(s[0],s[1])", "def pillow(s):\n    return any(i == ('n', 'B') for i in zip(*s))", "def pillow(s):\n  fridges = set(i for i, v in enumerate(s[0]) if v == 'n')\n  pillows = set(i for i, v in enumerate(s[1]) if v == 'B')\n  return len(fridges & pillows) > 0", "def pillow(s):\n    return next((True for a,b in zip(*s) if a=='n' and b=='B'), False)", "def pillow(s):\n    x=list(s[0])\n    y=list(s[1])\n    z=0\n    while z<len(x):\n        if x[z]=='n':\n            if y[z]=='B': return True\n        z+=1\n    return False", "def pillow(s):\n    return any([l=='n' and r=='B' for l,r in zip(*s)])", "def pillow(s):\n    return bool([1 for fridge, pillow in zip(s[0], s[1]) if fridge == 'n' and pillow == 'B'])"]