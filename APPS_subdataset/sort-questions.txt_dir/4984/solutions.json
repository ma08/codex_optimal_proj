["def meeting(s):\n    return ''.join(sorted('({1}, {0})'.format(*(x.split(':'))) for x in s.upper().split(';')))", "def meeting(s):\n  s = s.upper()\n  s = s.split(';')\n  array = []\n  string = \"\"\n  for i in s:\n    i = i.split(':')\n    string = '('+i[1]+', '+i[0]+')'\n    array.append(string)\n  array.sort()\n  output = \"\"\n  for j in array:\n    output += j\n  return output", "def meeting(s):\n    return ''.join(f'({a}, {b})' for a, b in sorted(name.split(':')[::-1] for name in s.upper().split(';')))", "def meeting(s):\n    names = s.upper().split(';')\n    return ''.join(sorted('({1}, {0})'.format(*(n.split(':'))) for n in names))", "meeting=lambda s:''.join(sorted('(%s, %s)'%tuple(e.split(':')[::-1])for e in s.upper().split(';')))", "import re\n\ndef meeting(s):\n    return  \"\".join(\n                sorted(\n                    re.sub(\"(\\w+):(\\w+);?\", r\"(\\2, \\1);\", s.upper())\n                        .split(\";\")\n                )\n            )", "def meeting(s):\n    return ''.join(sorted(('({1}, {0})'.format(*pair.split(':')) for pair in s.upper().split(';'))))", "from functools import reduce \n\ndef meeting(s):\n    people = [ i.split(\":\")[::-1] for i in s.upper().split(\";\") ]\n    people.sort(key=lambda x: x[0]+\" \"+x[1])\n    return reduce(lambda acc, x: acc+\"(\"+x[0]+\", \"+x[1]+\")\", people, \"\")\n", "from functools import cmp_to_key\n\ndef meeting(s):\n    def comp(a, b):\n        if a[1] == b[1]:\n            return -1 if a[0] < b[0] else 1\n        else:\n            return -1 if a[1] < b[1] else 1\n    w = map(lambda x : x.split(\":\"), s.upper().split(\";\"))\n    u = sorted(w, key = cmp_to_key(comp))\n    return \"\".join(map(lambda a : \"(\" + a[1] + \", \" + a[0] + \")\", u))", "meeting = lambda s: \"\".join(\"({}, {})\".format(ln, fn) \n    for ln, fn in sorted(p.split(\":\")[::-1] for p in s.upper().split(\";\")))"]