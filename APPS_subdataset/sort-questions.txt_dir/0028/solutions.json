["import sys\nINF = 10**20\nMOD = 10**9 + 7\nI = lambda:list(map(int,input().split()))\nfrom math import gcd\nfrom math import ceil\nfrom collections import defaultdict as dd, Counter\nfrom bisect import bisect_left as bl, bisect_right as br\n\n\n\"\"\"\nFacts and Data representation\nConstructive? Top bottom up down\n\"\"\"\ndef check(s):\n  t = 'abacaba'\n  ans = 0\n  for i in range(len(s)):\n    if s[i: i + 7] == t:\n      ans += 1\n  return ans\n\ndef solve():\n  n, = I()\n  s = input()\n  t = 'abacaba'\n  cnt = check(s)\n  if cnt > 1:\n    print('No')\n    return\n  elif cnt == 1:\n    s = list(s)\n    for i in range(n):\n      if s[i] == '?':\n        s[i] = 'z'\n    print('Yes')\n    print(''.join(s))\n  else:\n    s = list(s)\n    ok = s[::]\n    for i in range(n - 6):\n      ok = s[::]\n      for j in range(7):\n        if s[i + j] == t[j]:\n          continue\n        elif s[i + j] == '?':\n          ok[i + j] = t[j]\n        else:\n          break\n      else:\n        for i in range(n):\n          if ok[i] == '?':\n            ok[i] = 'z'\n        ok = ''.join(ok)\n        if check(ok) != 1:\n          continue\n        print('Yes')\n        print(ok)\n        return\n    print('No')\n\nt, = I()\nwhile t:\n  t -= 1\n  solve()", "import sys\nt = int(input())\nreq = 'abacaba'\n\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().rstrip()\n\n    cnt = 0\n    for i in range(n-6):\n        if s[i:i+7] == req:\n            cnt += 1\n\n    if cnt == 1:\n        print('Yes')\n        print(s.replace('?', 'z'))\n        continue\n    if cnt > 1:\n        print('No')\n        continue\n\n    for i in range(n-6):\n        if all(c1 == c2 or c1 == '?' for c1, c2 in zip(s[i:i+7], req)):\n            if s[i+7:i+11] == 'caba' or i >= 4 and s[i-4:i] == 'abac':\n                continue\n            s = s[:i] + req + s[i+7:]\n            print('Yes')\n            print(s.replace('?', 'z'))\n            break\n    else:\n        print('No')\n", "#\n#    ------------------------------------------------\n#           ____          _     Generatered using\n#          / ___|        | |\n#         | |    __ _  __| | ___ _ __  ______ _\n#         | |   / _` |/ _` |/ _ \\ '_ \\|_  / _` |\n#         | |__| (_| | (_| |  __/ | | |/ / (_| |\n#          \\____\\____|\\____|\\___|_| |_/___\\____|\n#\n#      GNU Affero General Public License v3.0\n#    ------------------------------------------------\n#    Author   : prophet\n#    Created  : 2020-07-19 05:12:32.701664\n#    UUID     : fZpWYlRPKqbpTDmt\n#    ------------------------------------------------\n#\nproduction = True\n\nimport sys, math, collections\n\ndef input(input_format = 0, multi = 0):\n\n    if multi > 0: return [input(input_format) for i in range(multi)]\n    else:\n        next_line = sys.stdin.readline()[:-1]\n\n        if input_format >= 10:\n            use_list = False\n            input_format = int(str(input_format)[-1])\n        else: use_list = True\n\n        if input_format == 0: formatted_input = [next_line]\n        elif input_format == 1: formatted_input = list(map(int, next_line.split()))\n        elif input_format == 2: formatted_input = list(map(float, next_line.split()))\n        elif input_format == 3: formatted_input = list(next_line)\n        elif input_format == 4: formatted_input = list(map(int, list(next_line)))\n        elif input_format == 5: formatted_input = next_line.split()\n        else: formatted_input = [next_line]\n\n        return formatted_input if use_list else formatted_input[0]\n\ndef out(output_line, output_format = 0, newline = True):\n\n    formatted_output = \"\"\n\n    if output_format == 0: formatted_output = str(output_line)\n    elif output_format == 1: formatted_output = \" \".join(map(str, output_line))\n    elif output_format == 2: formatted_output = \"\\n\".join(map(str, output_line))\n\n    print(formatted_output, end = \"\\n\" if newline else \"\")\n\ndef log(*args):\n    if not production:\n        print(\"$$$\", end = \"\")\n        print(*args)\n\nenu = enumerate\n\nter = lambda a, b, c: b if a else c\n\nceil = lambda a, b: -(-a // b)\n\ndef mapl(iterable, format = 0):\n    \n    if format == 0: return list(map(int, iterable))\n    elif format == 1: return list(map(str, iterable))\n    elif format == 2: return list(map(list, iterable))\n#\n#   >>>>>>>>>>>>>>> START OF SOLUTION <<<<<<<<<<<<<<\n#\n\ndef ch(a, r, n):\n    \n    c = 0\n\n    for i in range(n - 6):\n        y = a[i:i + 7]\n        if y == r:\n            c += 1\n\n    return c == 1\n\ndef solve():\n\n    n = input(11)\n    a = input(3)\n\n    r = list(\"abacaba\")\n\n    for i in range(n - 6):\n        y = a[i:i + 7]\n        for x, z in zip(y, r):\n            if not (x == \"?\" or x == z):\n                break\n        else:\n            s = a[:i] + r + a[i + 7:]\n            if ch(s, r, n):\n                u = \"\"\n                for j in s:\n                    if j == \"?\":\n                        u += \"z\"\n                    else:\n                        u += j\n                out(\"Yes\")\n                out(u)\n                return\n\n    out(\"No\")\n    return\n\n\nfor i in range(input(11)): solve()\n# solve()\n\n#\n#   >>>>>>>>>>>>>>>> END OF SOLUTION <<<<<<<<<<<<<<<\n#\n", "def f(s):\n  t=\"abacaba\"\n  for i in range(7):\n    if s[i]!=\"?\" and t[i]!=s[i]:return False\n  return True\ndef g(s):\n  c=0\n  for i in range(7,len(s)+1):\n    if s[i-7:i]==\"abacaba\":c+=1\n  return c\n\nfor _ in range(int(input())):\n  n=int(input())\n  s=input()\n  if g(s)>1:\n    print(\"No\")\n    continue\n  if \"abacaba\" in s:\n    print(\"Yes\")\n    print(s.replace(\"?\",\"z\"))\n    continue\n  flag=False\n  for i in range(7,len(s)+1):\n    if f(s[i-7:i]):\n      t=(s[:i-7]+\"abacaba\"+s[i:]).replace(\"?\",\"z\")\n      if g(t)>1:continue\n      print(\"Yes\")\n      print(t)\n      flag=True\n      break\n  if not(flag):print(\"No\")", "check=\"abacaba\"\n\ndef compare(s,t):\n    res=True\n    for i in range(len(s)):\n        res&=(s[i]==t[i] or s[i]==\"?\" or t[i]==\"?\")\n    return res\n\n\nfor _ in range(int(input())):\n    n=int(input())\n    s=input()\n    ans=\"No\"\n    res=\"\"\n    for i in range(n-6):\n        t=s\n        test=t[i:i+7]\n        if compare(test,check):\n            t=s[:i]+check+s[i+7:]\n            t=t.replace(\"?\",\"z\")\n            count=0\n            for j in range(n-6):\n                if t[j:j+7]==check:\n                    count+=1\n            if count==1:\n                ans=\"Yes\"\n                res=t\n    print(ans)\n    if ans==\"Yes\":\n        print(res)\n", "def count(string, substring): \n    count = 0\n    start = 0\n    while start < len(string): \n        pos = string.find(substring, start) \n        if pos != -1: \n            start = pos + 1\n            count += 1\n        else:\n            break\n    return count \n \n\nfor _ in range(int(input())):\n    n = int(input())\n    os = input()\n    good = False\n    for i in range(n):\n        if (os[i] == \"a\" or os[i] == \"?\") and i <= n-7:\n            s = list(os)\n            bad = False\n            for j in range(i, i+7):\n                if s[j] != \"?\" and s[j] != \"abacaba\"[j-i]:\n                    bad = True\n                    break\n                s[j] = \"abacaba\"[j-i]\n            if bad:\n                continue\n            ans = \"\".join(s).replace(\"?\", \"z\")\n            if count(ans, \"abacaba\") == 1:\n                good = True\n                break\n\n    if good:\n        print(\"Yes\")\n        print(ans)\n    else:\n        print(\"No\")\n"]