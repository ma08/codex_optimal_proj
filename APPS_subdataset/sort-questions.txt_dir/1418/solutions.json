["# cook your dish here\n# cook your dish here\nfor _ in range(int(input())):\n n=int(input())\n l=list(map(int, input().split()))\n l.insert(0, 0)\n l1=[0]*(n+1)\n l1[1]=l[1]\n for i in range(2, n+1):\n  l1[i]=max(l1[i-1]+l[i]*i, l1[i-2]+l[i-1]*i+l[i]*(i-1))\n  \n print(l1[-1]) ", "# cook your dish here\nfor _ in range(int(input())):\n n=int(input())\n l=list(map(int, input().split()))\n l.insert(0, 0)\n l1=[0]*(n+1)\n l1[1]=l[1]\n for i in range(2, n+1):\n  l1[i]=max(l1[i-1]+l[i]*i, l1[i-2]+l[i-1]*i+l[i]*(i-1))\n  \n print(l1[-1]) ", "# cook your dish here\n# cook your dish here\nfor t in range(int(input())):\n n = int(input())\n a = list(map(int,input().split()))\n dp = [0 for i in range(n+1)]\n dp[1] = a[0]\n for i in range(2,n+1):\n  dp[i] = max(dp[i-2] + a[i-2]*(i) + a[i-1]*(i-1), dp[i-1] + a[i-1]*(i))\n print(dp[n])", "for j in range(int(input())):\n n = int(input())\n x = list(map(int,input().split()))\n aman = [0,x[0]]\n for i in range(2,n+1):\n  aman.append(max(aman[i-1]+x[i-1]*i,aman[i-2]+x[i-1]*(i-1)+x[i-2]*(i)))\n print(aman[-1])", "# cook your dish here\nfor _ in range(int(input())):\n n=int(input())\n l=list(map(int,input().split()))\n dp = [ 0 for i in range(n+1)]\n dp[1] = l[0]\n \n for i in range(2,n+1):\n  \n  dp[i] = max(dp[i-1] + i*l[i-1], dp[i-2] + i*l[i-2] + (i-1)*l[i-1])\n \n print(dp[n])", "for _ in range(int(input())):\n \n n = int(input())\n l = list(map(int, input().split()))\n \n \n dp = [ 0 for i in range(n+1)]\n dp[1] = l[0]\n \n for i in range(2,n+1):\n  \n  dp[i] = max(dp[i-1] + i*l[i-1], dp[i-2] + i*l[i-2] + (i-1)*l[i-1])\n \n print(dp[n])\n \n", "# cook your dish here\n#SFRV\nfor _ in range(int(input())):\n n = int(input())\n l = list(map(int,input().rstrip().split()))\n dp = [0]*(n+1)\n for i in range(n+1):\n  if i==0:\n   dp[i]=0\n  elif i==1:\n   dp[i] = l[i-1]\n  else:\n   dp[i] = max(dp[i-1] + l[i-1]*i, dp[i-2] + l[i-1]*(i-1) + l[i-2]*i)\n\n print(dp[n])", "# cook your dish here\nfor _ in range(int(input())):\n n = int(input())\n l = list(map(int,input().rstrip().split()))\n dp = [0]*(n+1)\n\n for i in range(n+1):\n  if i==0:\n   dp[i]=0\n  elif i==1:\n   dp[i] = l[i-1]\n  else:\n   ##dekho swap kare ya nahi but prev wala\n   dp[i] = max(dp[i-1] + l[i-1]*i, dp[i-2] + l[i-1]*(i-1) + l[i-2]*i)\n\n print(dp[n])", "# cook your dish here\nfor _ in range(int(input())):\n n = int(input())\n a = list(map(int,input().split()))\n dp = [0,a[0]]\n for i in range(2,n+1):\n  dp.append(max(dp[i-1]+a[i-1]*i,dp[i-2]+a[i-1]*(i-1)+a[i-2]*(i)))\n print(dp[-1])", "for t in range(int(input())):\n n = int(input())\n li = [0] + list(map(int, input().split()))\n \n ans = [0, li[1]]\n for i in range(2,n+1):\n  ans += [max(ans[i-1]+li[i]*i, ans[i-2]+li[i-1]*(i)+li[i]*(i-1))]\n print(ans[-1])", "# cook your dish here\nfor t in range(int(input())):\n n = int(input())\n a = list(map(int,input().split()))\n dp = [0 for i in range(n+1)]\n \n dp[1] = a[0]\n #print(dp)\n for i in range(2,n+1):\n  dp[i] = max(dp[i-2] + a[i-2]*(i) + a[i-1]*(i-1), dp[i-1] + a[i-1]*(i))\n  #print('Pass {}: {}'.format(i,dp))\n print(dp[n])", "for _ in range(int(input())):\n n = int(input())\n a = list(map(int,input().split()))\n dp = [0]*n\n dp[0] = a[0]\n dp[1] = max(dp[0]+a[1]*2,a[1]*1+a[0]*2)\n for i in range(2,n):\n  dp[i] = max(dp[i-1]+a[i]*(i+1), dp[i-2]+a[i-1]*(i+1)+a[i]*i)\n print(dp[-1])", "def function(n,arr,i,dp) :\n if i >= n-1 :\n  sum = 0\n  pointer = 1\n  s = ''\n  #print('arr:',arr)\n  for k in arr :\n   sum+=(k*pointer)\n   pointer+=1\n   s+=str(k)\n  dp[s] = sum\n  return sum\n s = ''\n for l in arr :\n  s+=str(l)\n if dp.get(s,-1) == -1 :\n  val = function(n,arr,i+1,dp)\n else :\n  val = dp[s]\n for j in range(i,n-1) :\n  arr[j],arr[j+1] = arr[j+1],arr[j]\n  s = ''\n  for l in arr :\n   s+=str(l)\n  if dp.get(s,-1) == -1 :\n   val1 = function(n,arr,j+2,dp) \n  else :\n   val1 = dp[s]\n  val = val if val > val1 else val1\n  arr[j],arr[j+1] = arr[j+1],arr[j]\n return val\n\ntimes = int(input())\nwhile times > 0 :\n times-=1\n n = int(input())\n arr = [int(i) for i in input().split()]\n dp = {}\n print(function(n,arr,0,dp))", "for t in range(int(input())):\n n = int(input())\n a = list(map(int,input().split(\" \")))\n k = n + 1\n dp = [0]*k\n dp[1] = a[0]\n \n for i in range(2,n+1):\n  dp[i] = max( dp[i-1] + a[i-1]*i , dp[i-2] + a[i-2]*i + a[i-1]*(i-1) )\n  \n print(dp[n])"]