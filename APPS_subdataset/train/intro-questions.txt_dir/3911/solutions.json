["def howmuch(m, n):    \n    return [['M: %d'%i, 'B: %d'%(i/7), 'C: %d'%(i/9)] for i in range(min(m,n), max(m,n)+1) if i%7 == 2 and i%9 == 1]\n        \n            \n            \n", "def howmuch(m, n):\n    i = min(m, n)\n    j = max(m, n)\n    res = []\n    while (i <= j):\n        if ((i % 9 == 1) and (i %7 == 2)):\n            res.append([\"M: \" + str(i), \"B: \" + str(i // 7), \"C: \" + str(i // 9)])\n        i += 1\n    return res", "def howmuch(m, n):\n    m, n = sorted([m, n])\n    return [\n        ['M: {}'.format(x), 'B: {}'.format(x // 7), 'C: {}'.format(x // 9)]\n        for x in range(-((m - 37) // -63) * 63 + 37, n + 1, 63)]\n", "from math import ceil\n\n# All the solutions I saw were so slow, iterating the whole m -> n\n# For M, the solutions are the 37 + 63k in [m, n]\n# You can find that with chinese remainder theorem, or just by looking at the examples\n# Then just calculate B and C for each\n# No need to waste time doing useless loops\ndef howmuch(m, n):\n    m, n = min(m, n), max(m, n)\n    x = max(0, ceil((m-37)/63))\n    return [[f\"M: {y}\", f\"B: {(y-2)//7}\", f\"C: {(y-1)//9}\"] for y in range(37 + 63*x, n+1, 63)]", "howmuch=lambda m,n:[[f\"M: {M}\",f\"B: {M//7}\",f\"C: {M//9}\"]for M in range(min(m,n),max(m,n)+1)if M%7==2and M%9==1]", "def howmuch(m, n):\n    val = []\n    if m > n:\n        m,n = n,m\n        \n    for i in range(m,n+1):\n        if (i-2)%7 == 0 and (i-1)%9 == 0:\n            val.append(['M: {}'.format(i), 'B: {}'.format(int((i-2)/7)), 'C: {}'.format(int((i-1)/9))])\n    return val", "def howmuch(m, n):\n    parameters = [m,n]\n    parameters.sort()\n    trueInstances = []\n    for instance in range(parameters[0],parameters[1]+1):\n        if (instance - 1) % 9 == 0 and (instance - 2) % 7 == 0:\n            carPrice = int((instance - 1) / 9)\n            boatPrice = int((instance - 2) / 7)\n            statement = [f\"M: {instance}\",f\"B: {boatPrice}\",f\"C: {carPrice}\"]\n            trueInstances.append(statement)\n    return trueInstances\n    # your code\n", "def howmuch(m, n):\n    arr = []\n    for i in range(min(m, n), max(m, n)+1):\n        if ((i-2)/7).is_integer() and ((i-1)/9).is_integer():\n            x = int((i-2)/7)\n            y = int((i-1)/9)\n            arr.append([\"M: {0}\".format(i), \"B: {0}\".format(x), \"C: {0}\".format(y)])\n    return arr", "def howmuch(m, n):\n    return [['M: {}'.format(i), 'B: {}'.format(int((i-2)/7)), 'C: {}'.format(int((i-1)/9))]  for i in [i for i in range(min(m,n), max(m+1,n+1)) if i%9 == 1 and i%7 == 2]]"]