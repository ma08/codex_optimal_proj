["def position(alphabet):\n    return \"Position of alphabet: {}\".format(ord(alphabet) - 96)", "def position(alphabet):\n    return \"Position of alphabet: %s\" % (\"abcdefghijklmnopqrstuvwxyz\".find(alphabet) + 1)", "from string import ascii_lowercase\ndef position(char):\n    return \"Position of alphabet: {0}\".format(\n        ascii_lowercase.index(char) + 1)", "def position(letter):\n    return \"Position of alphabet: %d\" % (ord(letter) - 96)", "def position(alpha):\n    return f\"Position of alphabet: {ord(alpha)-96}\"", "from string import lowercase\n\ndef position(letter):\n    return 'Position of alphabet: %d' % (\n        1 + lowercase.index(letter))\n", "def position(alphabet):\n    return 'Position of alphabet: ' + str(ord(alphabet) - ord('a') + 1)", "position = lambda a: 'Position of alphabet: {}'.format(ord(a) - 96)\n\n# def position(alphabet):\n#     return 'Position of alphabet: {}'.format(ord(alphabet) - 96)\n", "def position(a):\n    return f\"Position of alphabet: {ord(a) - 96}\"", "position = lambda a: \"Position of alphabet: {}\".format(ord(a)-96)", "def position(alphabet):\n    return \"Position of alphabet: {}\".format(ord(alphabet.lower()) - 96)", "def position(a):\n    return 'Position of alphabet: {}'.format(ord(a) - 96)", "import string\n\ndef position(alphabet):\n    return f'Position of alphabet: {string.ascii_letters.index(alphabet.lower()) + 1}'", "def position(alphabet):\n    abc = \"abcdefghijklmnopqrstuvwxyz\"\n    pos = abc.index(alphabet) + 1\n    return \"Position of alphabet: \" + str(pos)", "def position(alphabet):\n    alph_list = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n    for i in range(0, 26):\n        if alphabet == alph_list[i]:\n            j = i + 1\n            return \"Position of alphabet: \" + str(j)", "position=lambda l: \"Position of alphabet: \"+str(\"abcdefghijklmnopqrstuvwxyz\".index(l)+1)", "def position(alphabet):\n    return \"Position of alphabet: \" + str(ord(alphabet) - 96)", "import string\n\nposition = lambda a: 'Position of alphabet: {}'.format(string.ascii_lowercase.index(a) + 1)", "def position(alphabet):\n    return f\"Position of alphabet: {ord(alphabet[0]) - 96}\"", "abc = {\"a\": \"1\", \"b\": \"2\", \"c\": \"3\", \"d\": \"4\", \"e\": \"5\", \"f\": \"6\", \"g\": \"7\",\n            \"h\": \"8\", \"i\": \"9\", \"j\": \"10\", \"k\": \"11\", \"l\": \"12\", \"m\": \"13\", \"n\": \"14\",\n            \"o\": \"15\", \"p\": \"16\", \"q\": \"17\", \"r\": \"18\", \"s\": \"19\", \"t\": \"20\", \"u\": \"21\",\n            \"v\": \"22\", \"w\": \"23\", \"x\": \"24\", \"y\": \"25\", \"z\": \"26\"}\n\n\ndef position(alphabet):\n    return f'Position of alphabet: {abc.get(alphabet)}'", "def position(ch):\n    return f\"Position of alphabet: {ord(ch)-ord('a')+1}\"", "def position(alphabet):\n    result = ord(alphabet) - 96\n    return f'Position of alphabet: {result}'", "import string\ndef position(alphabet):\n    d={}\n    s=string.ascii_lowercase\n    c=1\n    for i in s:\n        d[i]=c\n        c+=1\n    return f'Position of alphabet: {d.get(alphabet)}'", "def position(alphabet):\n    print(ord('a'))\n    return f'Position of alphabet: {ord(alphabet)-96}'", "def position(a):\n    return f'Position of alphabet: {\"abcdefghijklmnopqrstuvwxyz\".index(a)+1}'", "def position(letter):\n    import string\n    alpha = string.ascii_lowercase\n    \n    return 'Position of alphabet: {}'.format(alpha.index(letter)+1)", "def position(alphabet):\n    dict = {\n        'a': 1,\n        'b': 2,\n        'c': 3,\n        'd': 4,\n        'e': 5,\n        'f': 6,\n        'g': 7,\n        'h': 8,\n        'i': 9,\n        'j': 10,\n        'k': 11,\n        'l': 12,\n        'm': 13,\n        'n': 14,\n        'o': 15,\n        'p': 16,\n        'q': 17,\n        'r': 18,\n        's': 19,\n        't': 20,\n        'u': 21,\n        'v': 22,\n        'w': 23,\n        'x': 24,\n        'y': 25,\n        'z': 26\n    }\n    \n    return f'Position of alphabet: {dict.get(alphabet)}'", "from string import ascii_lowercase as lc \ndef position(alphabet):\n    return f'Position of alphabet: {lc.find(alphabet.lower()) + 1}'", "def position(alphabet):\n    alph = list('abcdefghijklmnopqrstuvwxyz')\n    return f'Position of alphabet: {alph.index(alphabet)+1}'", "def position(alphabet):\n    a = 'abcdefghijklmnopqrstuvwxyz'\n    x = list(map(lambda x: a[x],range(len(a)))).index(alphabet)+1\n    return \"Position of alphabet: \"+str(x)", "def position(a):\n    return \"Position of alphabet: \"+str(list(\"abcdefghijklmnopqrstuvwxyz\").index(a)+1)", "def position(alphabet):\n    ABC = {\"a\":1,\"b\":2,\"c\":3,\"d\":4,\"e\":5,\"f\":6,\"g\":7,\"h\":8,\"i\":9,\"j\":10,\"k\":11,\"l\":12,\"m\":13,\"n\":14,\n           \"o\":15,\"p\":16,\"q\":17,\"r\":18,\"s\":19,\"t\":20,\"u\":21,\"v\":22,\"w\":23,\"x\":24,\"y\":25,\"z\":26,}\n    for i in ABC:\n        if i == alphabet:\n            return str(\"Position of alphabet: \") + str(ABC[alphabet])", "import string\ndef position(alphabet):\n    dictionary = {'a':'Position of alphabet: 1',\n                'b': \"Position of alphabet: 2\",\n                'c': 'Position of alphabet: 3',\n                'd': 'Position of alphabet: 4',\n                'e': 'Position of alphabet: 5',\n                'f': \"Position of alphabet: 6\",\n                'g': \"Position of alphabet: 7\",\n                'h': 'Position of alphabet: 8',\n                'i': 'Position of alphabet: 9',\n                'j': 'Position of alphabet: 10',\n                'k': \"Position of alphabet: 11\",\n                'l': 'Position of alphabet: 12',\n                'm': \"Position of alphabet: 13\",\n                'n': 'Position of alphabet: 14',\n                'o': 'Position of alphabet: 15',\n                'p': 'Position of alphabet: 16',\n                'q': \"Position of alphabet: 17\",\n                'r': \"Position of alphabet: 18\",\n                's': 'Position of alphabet: 19',\n                't': 'Position of alphabet: 20',\n                'u': 'Position of alphabet: 21',\n                'v': \"Position of alphabet: 22\",\n                'w': 'Position of alphabet: 23',\n                'x': 'Position of alphabet: 24',\n                'y': 'Position of alphabet: 25',\n                'z': \"Position of alphabet: 26\"}\n    \n    return dictionary[alphabet]\n", "def position(letter):\n    alpahabet=['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n    for i in range(0,len(alpahabet)):\n        if alpahabet[i] ==letter:\n            return \"Position of alphabet: \"+str(i+1)", "position = lambda letter: f\"Position of alphabet: {'abcdefghijklmnopqrstuvwxyz'.index(letter) + 1}\"", "def position(alphabet):\n    char = ['a','b','c','d','e','f','g','h','i','j','k','l',\n               'm','n','o','p','q','r','s','t','u','v','w','x','y','z']\n    \n    nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, \n17, 18, 19, 20, 21, 22, 23, 24, 25, 26]\n    \n    char_num = list(zip(char,nums))\n    \n    for i,j in char_num:\n        if i == alphabet:\n            return \"Position of alphabet: \"+ str(j)\n            \n", "def position(alphabet):\n    a_l='abcdefghijklmnopqrstuvwxyz'\n    return f'Position of alphabet: {a_l.index(alphabet)+1}'\n\n", "def position(alphabet):\n    alpha = ['', 'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n    \n    if alphabet in alpha:\n        return f\"Position of alphabet: {alpha.index(alphabet)}\"\n    \n", "\nimport string\ndef position(alpha):\n    alphabet = string.ascii_lowercase\n    return f\"Position of alphabet: {alphabet.find(alpha) + 1}\"", "\nimport string\ndef position(pos):\n    alphabet = string.ascii_lowercase\n    return f\"Position of alphabet: {alphabet.index(pos) + 1}\"", "alp = 'abcdefghijklmnopqrstuvwxyz'\n\ndef position(alphabet):\n    return f\"Position of alphabet: {alp.index(alphabet)+1}\"", "def position(letter):\n    msg = 'Position of alphabet: '\n    return f'{msg}{\"abcdefghijklmnopqrstuvwxyz\".find(letter) + 1}'", "def position(alphabet):\n    alphabet.lower()\n    al='abcdefghijklmnopqrstuvwxyz'\n    ind = al.index(alphabet)\n    return \"Position of alphabet: {}\".format(ind+1)", "def position(alphabet):\n    import string\n    a = string.ascii_lowercase.index(alphabet)\n    b = a + 1\n    c = str(b)\n    return (\"Position of alphabet: \" + (c))", "def position(char):\n    return 'Position of alphabet: {}'.format(ord(char) - 96)", "def position(alphabet):\n    alph = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n    for i in range(26):\n        if alph[i] == alphabet: return \"Position of alphabet: \" + str(i+1)", "def position(alphabet):\n    dict_alpha = {\n        \"a\" : 1,\n        \"b\" : 2,\n        \"c\" : 3,\n        \"d\" : 4,\n        \"e\" : 5,\n        \"f\" : 6,\n        \"g\" : 7,\n        \"h\" : 8,\n        \"i\" : 9,\n        \"j\" : 10,\n        \"k\" : 11,\n        \"l\" : 12,\n        \"m\" : 13,\n        \"n\" : 14,\n        \"o\" : 15,\n        \"p\" : 16,\n        \"q\" : 17,\n        \"r\" : 18,\n        \"s\" : 19,\n        \"t\" : 20,\n        \"u\" : 21,\n        \"v\" : 22,\n        \"w\" : 23,\n        \"x\" : 24,\n        \"y\" : 25,\n        \"z\" : 26\n    }\n    pos = dict_alpha.get(alphabet)\n    return f'Position of alphabet: {pos}'", "def position(alphabet):\n    x = \"Position of alphabet: \" + (str(ord(alphabet)-96))\n    return x", "def position(ch):\n    for i in range(26):\n        if ch.lower() == \"abcdefghijklmnopqrstuvwxyz\"[i]: return f\"Position of alphabet: {i+1}\"\n    return False        ", "def position(alphabet):\n    position=ord(alphabet.lower())-96\n    return f\"Position of alphabet: {position}\"", "def position(alphabet):\n    \n    abcd = \"abcdefghijklmnopqrstuvwxyz\"\n    \n    pos = abcd.index(alphabet)\n    \n    return \"Position of alphabet: {}\".format(pos+1)", "import string\ndef position(alphabet):\n    ab = dict(zip(string.ascii_lowercase, range(1,27)))\n    return f\"Position of alphabet: {ab.get(alphabet)}\"", "def position(c):\n    return f\"Position of alphabet: {ord(c.lower()) - 96}\"", "def position(alphabet):\n    import string\n    x=list(string.ascii_lowercase)\n    return f'Position of alphabet: {x.index(alphabet)+1}'", "alf = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',\n    'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']    \ndef position(alphabet):\n    nonlocal alf   \n    return f'Position of alphabet: {alf.index(alphabet) + 1}'\n    \n", "def position(alphabet):\n    import string\n    characters = {char: str(idx) for idx, char in enumerate(string.ascii_lowercase, 1)}\n    return f\"Position of alphabet: {characters[alphabet]}\"\n", "def position(alphabet):\n    num = (ord(alphabet))\n    num -= 96\n    return f\"Position of alphabet: {num}\"", "letters ={\n          \"a\": 1, \n          \"b\": 2,\n          \"c\": 3,\n          \"d\": 4,\n          \"e\": 5,\n          \"f\": 6,\n          \"g\": 7,\n          \"h\": 8, \n          \"i\": 9,\n          \"j\": 10,\n          \"k\": 11, \n          \"l\": 12,\n          \"m\": 13,\n          \"n\": 14,\n          \"o\": 15,\n          \"p\": 16,\n          \"q\": 17,\n          \"r\": 18,\n          \"s\": 19,\n          \"t\": 20,\n          \"u\": 21,\n          \"v\": 22,\n          \"w\": 23,\n          \"x\": 24,\n          \"y\": 25,\n          \"z\": 26\n          }\n\ndef position(alphabet):\n    if alphabet in letters:\n        return f\"Position of alphabet: {letters.get(alphabet)}\"\n", "from string import ascii_lowercase as al\n\ndef position(alphabet):\n    return f'Position of alphabet: {[pos for pos, x in enumerate(al, 1) if x == alphabet.lower()][0]}'", "def position(alphabet):\n    index_alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    return \"Position of alphabet: \" + str(index_alphabet.index(alphabet) + 1)\n", "def position(alphabet):\n    alph = 'abcdefghijklmnopqrstuvwxyz'\n    return f'Position of alphabet: {alph.index(alphabet) + 1}'", "def position(alphabet):\n    alpha = '1abcdefghijklmnopqrstuvwxyz'\n    return \"Position of alphabet: \" + str(alpha.find(alphabet))", "def position(alphabet):\n    letters = [0,\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \n               \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \n               \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \n               \"y\", \"z\"]\n    return \"Position of alphabet: {}\".format(letters.index(alphabet.lower()))", "position = lambda alphabet: f'Position of alphabet: {ord(alphabet) - 96}'", "def position(letter):\n  print (letter)\n  alph='abcdefghijklmnopqrstuvwxyz'\n  for i, elem in enumerate(alph):\n    if elem==letter:\n      return f\"Position of alphabet: {i+1}\"\n", "def position(alphabet):\n    r= (ord(alphabet)-96)\n    return \"Position of alphabet: {}\".format(r)\n    pass", "def position(alphabet):\n    return \"Position of alphabet: {}\".format(str(ord(alphabet)+1-ord('a')))", "position=lambda s:f\"Position of alphabet: {__import__('string').ascii_letters.index(s)+1}\"", "import string\n\ndef position(alphabet):\n    dict_alphabet = dict(zip(string.ascii_lowercase,range(1,27)))\n    return f'Position of alphabet: {dict_alphabet[alphabet]}'", "def position(alphabet):\n    alp =['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n    n = 0\n    for i in range(0,26):\n       if alp[i] == alphabet:\n          a = int(alp.index(alp[i])) + 1\n    return \"Position of alphabet: {}\".format(a)", "def position(alphabet):\n    a = ' abcdefghijklmnopqrstuvwxyz'\n    return 'Position of alphabet: ' + str(a.find(alphabet))", "def position(a):\n    return \"Position of alphabet: {}\".format(ord(a)-ord('a')+1)", "def position(letter: str) -> str:\n    return f\"Position of alphabet: {ord(letter) - 96}\"\n", "def position(alphabet):\n    abc = 'abcdefghijklmnopqrstuvwxyz'\n    return f'Position of alphabet: {abc.index(alphabet)+1}'", "import string\n\ndef position(alphabet):\n    return f\"Position of alphabet: {string.ascii_lowercase.index(alphabet.lower()) + 1}\"", "position = lambda c: f'Position of alphabet: {ord(c) - 96}'", "def position(alphabet):\n   whole_alphabet = {\n   \"a\" : 1 ,\n   \"b\" : 2 ,\n   \"c\" : 3 ,\n   \"d\" : 4 ,\n   \"e\" : 5 ,\n   \"f\" : 6 ,\n   \"g\" : 7 ,\n   \"h\" : 8 ,\n   \"i\" : 9 ,\n   \"j\" : 10 ,\n   \"k\" : 11 ,\n   \"l\" : 12 ,\n   \"m\" : 13 ,\n   \"n\" : 14 ,\n   \"o\" : 15 ,\n   \"p\" : 16 ,\n   \"q\" : 17 ,\n   \"r\" : 18 ,\n   \"s\" : 19 ,\n   \"t\" : 20 ,\n   \"u\" : 21 ,\n   \"v\" : 22 ,\n   \"w\" : 23 ,\n   \"x\" : 24 ,\n   \"y\" : 25 ,\n   \"z\" : 26\n   }\n   position = whole_alphabet[alphabet]\n\n   return f\"Position of alphabet: {whole_alphabet[alphabet]}\"\n\nprint((position(\"h\")))\n", "def position(alphabet):\n    pos = ord(alphabet) - ord('a') + 1\n    return f'Position of alphabet: {pos}'", "def position(alphabet):\n    return \"Position of alphabet: %i\" % (ord(alphabet.lower()) - 96)", "def position(alphabet):\n    return \"Position of alphabet: \"+str(ord(alphabet)%ord('a')+1)", "import string\n\ndef position(alphabet):\n    return f'Position of alphabet: {string.ascii_letters.index(alphabet)+1}'", "def position(alphabet):\n    \n    txt = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n    \n    x = txt.lower().find(alphabet) + 1\n    \n    solution =  'Position of alphabet: {}'\n    \n    return solution.format(x)", "def position(alphabet):\n    position = ord(alphabet) - 96\n    return f'Position of alphabet: {position}'", "def position(alphabet):\n    abc=['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n    return \"Position of alphabet: \"+ str(abc.index(alphabet)+1)", "def position(alphabet):\n    a=\" abcdefghijklmnopqrstuvwxyz\"\n    return f\"Position of alphabet: {a.index(alphabet)}\"", "from string import ascii_lowercase as alphabet\ndef position(letter):\n    return 'Position of alphabet: {}'.format(alphabet.find(letter) + 1)", "def position(a):\n    g = 'abcdefghijklmnopqrstuvwxyz'\n    return \"Position of alphabet: \" + str(g.find(a)+1)", "def position(alphabet):\n    a = list(\"abcdefghijklmnopqrstuvwxyz\")\n    return f\"Position of alphabet: {a.index(alphabet)+1}\"", "def position(letter):\n\n    return f\"Position of alphabet: {ord(letter) - 96}\"", "import string\n\ndef position(alphabet):\n    al = list(enumerate(list(string.ascii_lowercase),1))\n    d = {}\n    for e in al:\n        x = {e[1]: e[0]} \n        d.update(x)\n    return 'Position of alphabet: ' + str(d[alphabet])", "def position(alphabet):\n    return \"Position of alphabet: {0}\".format('abcdefghijklmnopqrstuvwxyz'.index(alphabet) + 1)", "def position(a):\n    pos = ord(a) - ord(\"a\") + 1\n    return 'Position of alphabet: {}'.format(pos)", "def position(alphabet):\n    value = ord(alphabet)-96\n    print(value)\n    return \"Position of alphabet: \" + str(value)\n", "def position(alphabet):\n    letters = '0abcdefghijklmnopqrstuvwxyz'\n    return 'Position of alphabet: ' + str(letters.index(alphabet))", "def position(l): return \"Position of alphabet: \" + str(ord(l.lower())-96)", "def position(alphabet):\n    dictionary = {chr(96+i) : i for i in range (1, 27)}\n    \n    return \"Position of alphabet: \" + str(dictionary[alphabet])", "position=lambda a:\"Position of alphabet: \"+ str(\"0abcdefghijklmnopqrstuvwxyz\".index(a))", "def position(s):\n    return 'Position of alphabet: '+str(ord(s) - 96)", "import string \ndef position(a):\n    return \"Position of alphabet: {}\".format(list(string.ascii_lowercase).index(a)+1)", "def position(letter):\n    return f\"Position of alphabet: {ord(letter)-ord('a')+1}\""]