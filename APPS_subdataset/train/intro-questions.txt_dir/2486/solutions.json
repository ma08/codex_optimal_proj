["class Solution:\n    def numberOfSteps (self, num: int) -> int:\n        steps = 0\n        while num > 0:\n            if num % 2 == 0:\n                num /= 2\n            else:\n                num -= 1\n            steps += 1\n        return steps\n", "class Solution:\n    def numberOfSteps (self, num: int) -> int:\n        bnum = bin(num)\n        return len(bnum) + bnum.count('1') - 3", "class Solution:\n    def numberOfSteps (self, num: int) -> int:\n        return len(bin(num)) + bin(num).count('1') - 3", "class Solution:\n    def numberOfSteps (self, num: int) -> int:\n        \n        steps = 0\n        while(num>0):\n            # print(num)\n            if num%2 == 0:\n                num = num/2\n                steps+=1\n            else:\n                num = num-1\n                steps+=1\n        return steps", "class Solution:\n    def numberOfSteps (self, num: int) -> int:\n        count=0\n        while num>0:\n            if num&1:\n                count+=1\n            num=num>>1\n            count+=1\n            \n        return count-1 if count > 0 else count", "class Solution:\n    def numberOfSteps (self, num: int) -> int:\n        count = 0\n        \n        while num!=0:\n            if num%2 == 0:\n                num /= 2\n                count += 1\n            else:\n                num -= 1\n                count += 1\n        return count", "class Solution:\n    def numberOfSteps (self, num: int) -> int:\n        count = 0\n        \n        while num!=0:\n            if num%2 == 0:\n                num = num/2\n            else:\n                num -= 1\n            count += 1\n        return count", "class Solution:\n    def numberOfSteps (self, num):\n        steps = 0 # We need to keep track of how many steps this takes.\n        while num > 0: # Remember, we're taking steps until num is 0.\n            if num % 2 == 0: # Modulus operator tells us num is *even*.\n                num = num // 2 # So we divide num by 2.\n            else: # Otherwise, num must be *odd*.\n                num = num - 1 # So we subtract 1 from num.\n            steps = steps + 1 # We *always* increment steps by 1.\n        return steps # And at the end, the answer is in steps so we return it.\n", "class Solution:\n    def numberOfSteps (self, num: int) -> int:\n        \n        steps = 0\n        \n        while num > 0:\n            if num%2 == 0:\n                num = num//2\n                steps += 1\n            else:\n                num -=1\n                steps +=1\n        return steps\n", "class Solution:\n    def numberOfSteps (self, num: int) -> int:\n        if num==0:return 0\n        ans=0\n        while num!=0:\n            if num&1==0:\n                num=num>>1\n                ans+=1\n            else:\n                if num==1:\n                    return ans+1\n                num=num>>1\n                ans+=2\n        return ans\n", "class Solution:\n    def numberOfSteps (self, num: int) -> int:\n        cnt = 0\n        while num:\n            if num & 1: num -= 1\n            else: num >>= 1\n            cnt += 1\n        return cnt"]