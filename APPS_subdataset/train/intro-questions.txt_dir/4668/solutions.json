["def is_divisible_by_6(s):\n    all_numbers = [ int(s.replace('*', str(n))) for n in range(10) ]\n    return [ str(n) for n in all_numbers if n % 6 == 0 ]", "def is_divisible_by_6(s):\n  return [str(n) for n in [int(s.replace('*', str(i))) for i in range(10)] if n % 6 == 0]", "def is_divisible_by_6(stg):\n    result = []\n    for d in \"0123456789\":\n        r = int(d.join(stg.split(\"*\")))\n        if r % 6 == 0:\n            result.append(str(r))\n    return result\n\n# one-liner\n#    return [str(int(stg.replace(\"*\", d))) for d in \"0123456789\" if int(stg.replace(\"*\", d)) % 6 == 0]\n", "def is_divisible_by_6(s):\n    if s[-1] != \"*\":\n        if int(s[-1]) % 2 == 1:\n            return []\n        else:\n            lst = []\n            for i in range(10):\n                if int(s.replace(\"*\", str(i))) % 3 == 0:\n                    lst.append(int(s.replace(\"*\", str(i))))\n            for x in range(len(lst)):\n                lst[x] = str(lst[x])\n            return lst\n\n    else:\n        lst = []\n        for i in [0,2,4,6,8]:\n            lst.append(s[:-1] + str(i))\n        lst2 = []\n        for x in range(len(lst)):\n             if int(lst[x]) % 3 == 0:\n                 lst2.append(lst[x])\n        return lst2", "def is_divisible_by_6(s):\n    xs = [s.replace('*', str(i)) for i in range(10)]\n    return [x.lstrip('0') or '0' for x in xs if int(x) % 6 == 0]", "def is_divisible_by_6(s):\n    out=[]\n    for digit in \"0123456789\":\n        div=int(s.replace(\"*\",digit))\n        if div%6==0:out.append(str(div))\n    return out", "def is_divisible_by_6(s):\n    x = [s.replace('*', str(i)) for i in range(10)]\n    x = [i for i in x if int(i) % 6 == 0]\n    x = [i[1:] if i[0] == '0' and len(i) > 1 else i for i in x]\n    return x", "from functools import reduce\n\ndef is_divisible_by_6(s):\n    \n    digits = list(range(0,10))\n    perm = [s.replace('*', str(d)) for d in digits]\n    res = [s for s in perm if isDiv2(s) and isDiv3(s)]\n    \n    return [x.lstrip('0') if len(x) > 1 else x for x in res]\n \ndef isDiv2(n):\n    return int(n[-1]) % 2 == 0\n\ndef isDiv3(n):\n    d = [int(x) for x in list(n) if x != '*']\n    sum = reduce(lambda a,b: a+b, d)\n    return sum % 3 == 0\n", "def is_divisible_by_6(s):\n    ls = []\n    for x in range(10):\n        if int(s.replace(\"*\", str(x)))%6 == 0:\n            ls.append(s.replace(\"*\", str(x))) \n    for x in ls:\n        if len(x)>1 and x[0] == \"0\":\n            ls.insert(ls.index(x), x[1:])\n            ls.remove(x)\n    return ls", "def is_divisible_by_6(s):\n    if s==\"*\":\n        return [\"0\", \"6\"]\n    elif s[-1].isdigit() and int(s[-1])%2:\n        return []\n    check=s.index(\"*\")\n    res=[]\n    digit_sum=sum(int(i) for i in s[:check]+s[check+1:])\n    for i in range(10):\n        if (check==len(s)-1 and i%2==0 and (i+digit_sum)%3==0) or (check!=len(s)-1 and (i+digit_sum)%3==0):\n            res.append(str(int(s[:check]+str(i)+s[check+1:])))\n    return res"]