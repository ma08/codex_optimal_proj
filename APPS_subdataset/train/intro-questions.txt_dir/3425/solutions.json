["from collections import Counter\ndef word_square(ls):\n    n = int(len(ls)**0.5)\n    return n*n==len(ls) and sum(i%2 for i in list(Counter(ls).values())) <= n\n", "def word_square(letters):\n    root = int(len(letters)**0.5)\n    return len(letters)**0.5 == root and sum([ letters.count(i)%2 for i in set(letters) ]) <= root", "from collections import Counter\n\ndef word_square(letters):\n    N = len(letters)**0.5\n    return not N%1 and (sum(v&1 for v in Counter(letters).values()) <= N)", "def word_square(s):\n    li = [s.count(i) for i in set(s)]\n    t = sum(i for i in li)**0.5\n    return int(t) == t and sum(i&1 for i in li) <= t", "word_square=lambda s:len(s)**.5%1==0and sum(s.count(c)%2for c in set(s))<=len(s)**.5", "import math\n\ndef word_square(letters):\n    length = int(math.sqrt(len(letters)))\n    if length ** 2 != len(letters):\n        return False;\n    dic = {}\n    for i in letters:\n        if i not in dic:\n            dic[i] = 0\n        dic[i] += 1\n    odd = 0\n    for i in dic:\n        if dic[i] % 2 != 0:\n            odd += 1\n        if odd > length:\n            return False\n    return True", "from collections import Counter\ndef word_square(letters):\n    n = len(letters)**0.5\n    if n != int(n):\n        return False\n    n = int(n)\n    c = Counter(letters)\n    one, odd = 0, 0\n    for i in c.values():\n        if i == 1:\n            one += 1\n            odd += 1\n        elif i != 1 and i%2 != 0:\n            odd += 1\n    if one > n or odd > n:\n        return False\n    else:\n        return True", "from collections import Counter\ndef word_square(letters):\n    sq = len(letters) ** .5\n    if sq % 1 != 0:\n        return False\n    d = Counter(letters)\n    return len([True for c in d if d[c]%2 == 1]) <= sq", "def word_square(letters):\n    if (len(letters))**.5 != int((len(letters))**.5):\n        return False\n    else:\n        n = int((len(letters))**.5)\n    s = set(letters)\n    one, two = 0,0\n    for letter in s:\n        if letters.count(letter) == 1: one += 1\n        if letters.count(letter) == 2: two += 1\n    return one <= n and two <= n**2-n        ", "def word_square(letters):\n    l = [letters.count(x) for x in set(letters)]\n    if int(len(letters)**(0.5))**2 == len(letters):\n        if sum(x for x in l if x == 1) <= int(len(letters)**(0.5)):\n            return True\n        else: return False\n    else: return False"]