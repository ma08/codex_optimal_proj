["def triangle_type(a, b, c):\n  x,y,z = sorted([a,b,c])\n  if z >= x + y: return 0\n  if z*z == x*x + y*y: return 2\n  return 1 if z*z < x*x + y*y else 3", "def triangle_type(a, b, c):\n  a,b,c = sorted((a,b,c))\n  if a+b <= c: return 0\n  t = a**2+b**2 - c**2\n  if t > 0: return 1\n  if t == 0: return 2\n  else: return 3", "def triangle_type(a, b, c):\n  x, y, z = sorted([a, b, c])\n  diff = z*z - y*y - x*x\n  if z >= x+y: return 0\n  elif not diff: return 2\n  return 1 if diff < 0 else 3", "def triangle_type(a, b, c):\n  a,b,c = sorted([a,b,c])\n  if ((a+b)-c) <= 0:\n    return 0\n  aa_bb, cc = a*a + b*b, c*c\n  if aa_bb > cc:\n    return 1\n  elif aa_bb == cc:\n    return 2\n  else:\n    return 3\n", "# Should return triangle type:\n#  0 : if triangle cannot be made with given sides\n#  1 : acute triangle\n#  2 : right triangle\n#  3 : obtuse triangle\n\ndef triangle_type(a, b, c):\n  a, b, c = sorted([a, b, c])\n  if a + b <= c:\n    return 0\n  elif a**2 + b**2 > c**2:\n    return 1\n  elif a**2 + b**2 == c**2:\n    return 2\n  else:\n    return 3", "\ndef triangle_type(a, b, c):\n    c,b,a = sorted((a,b,c))\n    if a >= b+c        :    return 0\n    if a*a < b*b + c*c :    return 1\n    if a*a == b*b + c*c:    return 2\n    if a*a > b*b + c*c :    return 3\n", "# Should return triangle type:\n#  0 : if triangle cannot be made with given sides\n#  1 : acute triangle\n#  2 : right triangle\n#  3 : obtuse triangle\n\ndef is_triangle(a, b, c):\n    return a + b > c\n    \ndef is_at_least_right(a, b, c):\n    return is_triangle(a, b, c) and a*a + b*b <= c*c\n    \ndef is_obtuse(a, b, c):\n    return is_triangle(a, b, c) and a*a + b*b < c*c\n\ndef triangle_type(a, b, c):\n    a, b, c = sorted([a, b, c])\n    return is_triangle(a, b, c) + is_at_least_right(a, b, c) + is_obtuse(a, b, c)", "def triangle_type(*sides):\n    a, b, c = sorted(sides)\n    if a + b <= c:\n        return 0\n    ab2, c2 = a*a + b*b, c*c\n    return 1 if ab2 > c2 else 2 if ab2 == c2 else 3\n", "def triangle_type(a, b, c):\n    if max(a, b, c) >= sum([a, b, c]) / 2:\n        return 0\n    sq = [max(a, b, c) ** 2, sum([x ** 2 for x in [a, b, c]]) / 2]\n    return 3 if sq[0] > sq[1] else 2 if sq[0] == sq[1] else 1", "def triangle_type(a, b, c):\n    h = max(a, b, c)\n    return 0 if a+b+c <= 2*h else 1 if 2*h**2 < a**2+b**2+c**2 else 2 if 2*h**2 == a**2+b**2+c**2 else 3"]