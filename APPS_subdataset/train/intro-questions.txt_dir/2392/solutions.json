["for _ in range(int(input())):\n    n, m = list(map(int, input().split()))\n    A = []\n    x = 1\n    while True:\n        if (m * x) % 10 not in A:\n            A.append((m * x) % 10)\n        else:\n            break\n        x += 1\n    s = sum(A)\n    n //= m\n    print(s * (n // len(A)) + sum(A[:n % len(A)]))\n", "import math\ntst = int(input())\nfor _ in range(tst):\n    b, a = list(map(int, input().split()))\n    b //= a\n    cnt = b // 10\n    sum = 0\n    for i in range(1, 11):\n        sum += (a * i) % 10\n    sum *= cnt\n    for i in range(1, b % 10 + 1):\n        sum += (a * i) % 10\n    print(sum)\n\n", "# Contest: Codeforces Round #582 (Div. 3) (https://codeforces.com/contest/1213)\n# Problem: C: Book Reading (https://codeforces.com/contest/1213/problem/C)\n\ndef rint():\n    return int(input())\n\n\ndef rints():\n    return list(map(int, input().split()))\n\n\nfrom math import gcd\nq = rint()\nfor _ in range(q):\n    n, m = rints()\n    lcm = 10 * m // gcd(10, m)\n    block = 0\n    for i in range(lcm // m):\n        block += (i + 1) * m % 10\n    n_block = n // lcm\n    tot = n_block * block\n    for i in range(n_block * lcm, n + 1, m):\n        tot += i % 10\n    print(tot)\n", "q = int(input())\ns = [0] * 10\nfor i in range(10):\n    for j in range(10):\n        s[i] += (j * i) % 10\n\nfor i in range(q):\n    n, m = list(map(int, input().split()))\n    pages = n // m\n    ans = s[m % 10] * (pages // 10)\n    pages %= 10\n    m %= 10\n    for i in range(pages + 1):\n        ans += (m * i) % 10\n    print(ans)\n", "# TAIWAN NUMBER ONE!!!!!!!!!!!!!!!!!!!\n# TAIWAN NUMBER ONE!!!!!!!!!!!!!!!!!!!\n# TAIWAN NUMBER ONE!!!!!!!!!!!!!!!!!!!\nfrom sys import stdin, stdout\nfrom collections import defaultdict\nfrom collections import deque\nimport math\nimport copy\n \nT = int(input())\n#N = int(input())\n#s1 = input()\n#s2 = input()\n#N,Q = [int(x) for x in stdin.readline().split()]\n#arr = [int(x) for x in stdin.readline().split()]\n\nfor i in range(T):\n    N,M = [int(x) for x in stdin.readline().split()]\n    \n    d = M%10\n    \n    q = N//M\n    \n    tail = []\n    \n    t = 0\n    while True:\n        t = (t + d)%10\n        if t not in tail:\n            tail.append(t)\n        else:\n            break\n            \n    L = len(tail)\n    \n    s = sum(tail)\n    q2 = q//L\n    r = q%L\n    \n    #print(q2,r)\n    print(q2*s+sum(tail[:r]))", "for TT in range(1, int(input()) + 1):\n    n, m = map(int, input().split())\n    x = (n // m) + 1\n    l = [0]\n    while True:\n        d = (l[-1] + m) % 10\n        if d in l: break\n        l.append(d)\n    n = len(l)\n    a, b = x // n, x % n\n    print(sum(l) * a + sum(l[:b]))", "q=int(input())\nfor _ in range(q):\n  n,m=list(map(int,input().split()))\n  a,b=divmod(n//m,10)\n  ans=0\n  ans_t=0\n  for i in range(1,b+1):\n    ans+=(i*m)%10\n  for i in range(1,10):\n    ans_t+=(i*m)%10\n  print(ans+ans_t*a)\n\n\n", "for q in range(int(input())):\n    n, m = list(map(int, input().split()))\n    if m % 10 == 0:\n        print(0)\n    elif m % 10 == 5:\n        print((n//m+1)//2*5)\n    elif m % 2 == 0:\n        x = n//(m*5)*m*5\n        ans = n//(m*5)*20\n        while x <= n:\n            ans += x % 10\n            x += m\n        print(ans)\n    else:\n        x = n // (m * 10) * m * 10\n        ans = n // (m * 10)*45\n        while x <= n:\n            ans += x % 10\n            x += m\n        print(ans)\n", "for _ in range(int(input())):\n    \n    a,b=[int(i) for i in input().split()]\n    tot=0\n    ans=[]\n    for i in range(1,11):\n        ans.append(int(str(b*i)[-1]))\n    tot=sum(ans)\n    x=a//b\n    y=x%10\n    x=x//10\n    ans=tot*x+sum(ans[:y])\n    print(ans)", "#582_C\n\nn = int(input())\n\nref = []\nsums = []\nfor i in range(0, 10):\n    ref.append([])\n    for j in range(0, 10):\n        ref[-1].append(int(list(str(i * j))[-1]))\n    sums.append(sum(ref[-1]))\n\npref = []\nfor i in ref:\n    pref.append([i[0]])\n    for j in range(1, len(i)):\n        pref[-1].append(pref[-1][-1] + i[j])\n\nfor i in range(0, n):\n    ln = [int(j) for j in input().split(\" \")]\n    a = ln[0]\n    b = ln[1]\n    dig = int(list(str(b))[-1])\n    ct = a // (b * 10)\n    rem = (a % (b * 10)) // b\n    print(ct * sums[dig] + pref[dig][rem])\n", "from sys import stdin\nt=int(stdin.readline().strip())\nfor j in range(t):\n    n,m=list(map(int,stdin.readline().strip().split()))\n    vis=[False for i in range(10)]\n    x=m%10\n    s=[]\n    while vis[x]!=True:\n        vis[x]=True\n        s.append(x)\n        x=(x+m)%10\n    y=n//m\n    ans=0\n    z=(y//len(s))*len(s)\n    ans+=sum(s)*(y//len(s))\n    d=y-z\n    for i in range(d):\n        ans+=s[i]\n    print(ans)\n    \n    \n    \n    \n        \n            \n    \n", "'''input\n7\n1 1\n10 1\n100 3\n1024 14\n998244353 1337\n123 144\n1234312817382646 13\n\n'''\nimport sys\nfrom collections import defaultdict as dd\nfrom itertools import  permutations as pp\nfrom itertools import combinations as cc\nfrom collections import Counter as ccd\nfrom random import randint as rd\nfrom bisect import bisect_left as bl\nfrom  heapq import heappush as hpush\nfrom heapq import heappop as hpop\nmod=10**9+7\n\ndef ri(flag=0):\n\tif flag==0:\n\t\treturn [int(i) for i in sys.stdin.readline().split()]\n\telse:\n\t\treturn int(sys.stdin.readline())\n\n\nfor _ in range(ri(1)):\n\tn,m= ri()\n\tk = []\n\tfor i in range(m,n+1,m):\n\t\ttemp = i%10\n\t\tif temp not in k:\n\t\t\tk.append(temp)\n\t\telse:\n\t\t\tbreak\n\t\n\tperiod = n//m\n\tans =0\n\tif len(k)!=0:\n\t\tans = sum(k)*(period//len(k))\n\t\trem = period %len(k)\n\n\t\tfor i in range(rem):\n\t\t\tans += k[i]\n\n\tprint(ans)\n\t#print(k,period)\n", "t = int(input())\nfor _ in range(t):\n    n, m = list(map(int, input().split()))\n    if n < m:\n        print(0)\n        continue\n    dct = dict()\n\n    sum, cnt = 0, 0\n    cur = m\n    ans = 0\n    while cur <= n:\n        c = cur % 10\n        if c in dct and cur + 10 * m <= n:\n            per_sum, per_cnt = sum - dct[c][0], cnt - dct[c][1]\n            cycles = (n // m - (cur - 1) // m) // per_cnt\n            ans += per_sum * cycles\n            cur += cycles * m * per_cnt\n        else:\n            dct[c] = (sum, cnt)\n            ans += c\n            cur += m\n            sum += c\n            cnt += 1\n    print(ans)\n\n", "q = int(input())\nfor test in range(q):\n    n,m = input().split()\n    n = int(n)\n    m = int(m)\n    sumoften = 0\n    for j in range(1,10):\n        sumoften += (m*j) % 10\n    div = n // m\n    ans = sumoften * (div // 10)\n    for j in range(1,(div % 10) + 1):\n        ans += (m*j) % 10\n    print(ans)", "Global_data = [(1, 0), (10, 45), (5, 20), (10, 45), (5, 20), (2, 5), (5, 20), (10, 45), (5, 20), (10, 45)]\nn = int(input())\nfor i in range(n):\n    a, b = map(int, input().split())\n    kol = a // b\n    last = b % 10\n    ans = kol // Global_data[last][0] * Global_data[last][1]\n    c = 0\n    for i in range(kol % Global_data[last][0]):\n        c += last\n        c %= 10\n        ans += c\n    print(ans)", "q=int(input())\nfor _ in range(q):\n    n,m=list(map(int,input().split()))\n    x=n//m\n    y=x%10\n    if (m%10)==0:\n        print(0)\n        continue\n    d=m%10\n    if d==5:\n        tot=(x//2)*5\n        if x%2==1:\n            tot+=5\n        print(tot)\n        continue\n    if d%2==0:\n        tot=(x//10)*40\n        for i in range(y):\n            tot+=(m*(i+1))%10\n    elif d%2==1:\n        tot=(x//10)*45\n        for i in range(y):\n            tot+=(m*(i+1))%10\n    print(tot)\n        \n", "from sys import stdin, stdout\n\ninput = stdin.readline\n\nt = int(input())\nwhile t:\n    t -= 1\n    n, m = list(map(int, input().split()))\n\n    a = []\n    for i in range(1, 11, 1):\n        a.append((m * i) % 10)\n\n    sum = 0\n    for i in a:\n        sum += i\n\n    x = n // m\n    res = (x // 10) * sum\n    x %= 10\n    for i in range(x):\n        res += a[i]\n\n    print(res)\n", "t = int(input())\nfor z in range(t):\n    n, m = map(int, input().split())\n    if m > n:\n        print(0)\n        continue\n    use = []\n    x = m\n    for i in range(20):\n        use.append(x % 10)\n        x += m\n    #print(use)\n    arr = []\n    for i in range(len(use)):\n        if not use[i] in arr:\n            arr.append(use[i])\n        else:\n            break\n\n    l = len(arr)\n    cnt = n // (l * m)\n    left = (n % (l * m)) // m\n    print(cnt * sum(arr) + sum(arr[:left]))", "t = int(input())\nfor test in range(t):\n    n, m = map(int, input().split())\n    length = 1\n    a = [0] * 10\n    cur = m % 10\n    a[cur] = 1\n    s = cur\n    while True:\n        cur += m\n        cur %= 10\n        if a[cur] == 1:\n            break\n        else:\n            length += 1\n            s += cur\n            a[cur] = 1\n    ost = 0\n    cur = n // (m * length) * (m * length)\n    while cur <= n:\n        ost += cur % 10\n        cur += m\n    print(n // (m * length) * s + ost)", "t = int(input())\nwhile (t > 0):\n    t -= 1\n    n, m = [int(x) for x in input().split()]\n    tens = [(m*(i+1)) % 10 for i in range(10)]\n    tensum = sum(tens)\n    c = n // m\n    print(c // 10 * tensum + sum(tens[: c - (c // 10) * 10]))", "from sys import stdin\ninput = stdin.readline\n\nfor _ in range(int(input())):\n    n, m = [int(i) for i in input().split()]\n    \n    n //= m\n    m %= 10\n    \n    part_sum = [0 for i in range(10)]\n    res = 0\n    \n    for i in range(1, 10):\n        part_sum[i] = (m*i)%10+part_sum[i-1]\n        res += (m*i)%10\n        \n    a, b = (n // 10), (n%10)\n    \n    \n    res *= a\n    res += part_sum[b]\n    \n    print(res)", "def mi():\n        return list(map(int, input().split()))\n'''\n7\n1 1\n10 1\n100 3\n1024 14\n998244353 1337\n123 144\n1234312817382646 13\n1\n45\n153\n294\n3359835\n0\n427262129093995\n'''\nfor _ in range(int(input())):\n    n,m= mi()\n    lpage = n-n%m\n    lmul = lpage//m\n    fpage = m\n    fmul = 1\n    if n<m:\n        print(0)\n        continue\n    c = []\n    for i in range(1, 100):\n        cons = (i*m)%10\n        if not len(c):\n            c.append(cons)\n        elif c[0]!=cons:\n            c.append(cons)\n        else:\n            break\n    nmul = lmul-fmul+1\n    # print(c, nmul, nmul//len(c))\n    print(sum(c)*(nmul//len(c))+sum(c[:nmul%len(c)]))\n", "MOD = 10**9 + 7\nI = lambda:list(map(int,input().split()))\n\nt, = I()\nwhile t:\n\tt -= 1\n\tn, m = I()\n\tl = []\n\ti = 1\n\twhile (i*m)%10 not in l:\n\t\tl.append((i*m)%10)\n\t\ti += 1\n\tk = len(l)*m\n\tans = sum(l)*(n//k)\n\ti = n//k * k\n\tj = 1\n\twhile i + j*m <= n:\n\t\tans += (i+j*m)%10\n\t\tj += 1\n\tprint(ans)", "#import bisect\n#i = bisect.bisect_left(a, k)\n#a=[]\n#from sys import stdin\n#input=stdin.readline\n        \nfor _ in range (int(input())):\n    #n=int(input()) \n    ans=0\n    n,m=list(map(int, input().split()))\n    #a=list(map(int, input().split()))\n    a=[]\n    if m>n:\n        print('0')\n        continue\n    for i in range(10):\n        a.append((m*(i+1))%10)\n    s=sum(a)\n    \n    ans+=((n//(m*10))*s)\n    k=n%(10*m)\n    p=k//m\n    for i in range(p):\n        ans+=a[i]\n    print(ans)\n    #YOUR CODE HERE\n", "t=int(input())\nfor i in range(t):\n    n,m = map(int,input().split())\n    a = [0]*11\n    for j in range(1,11):\n        a[j] = (m*j)%10+a[j-1]\n    x = n//m\n    print(a[10]*(x//10)+a[x%10])        "]