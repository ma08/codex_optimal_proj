["def word_wrap(s, limit):\n    s, i, li = s.split(), 0, []\n    while i < len(s):\n        t = s[i]\n        if len(t) <= limit:\n            while i + 1 < len(s) and len(t) + len(s[i + 1]) + 1 <= limit:\n                t += ' ' + s[i + 1] ; i += 1\n            if len(t) < limit:\n                if i + 1 < len(s) and len(s[i + 1]) > limit:\n                    temp = ' ' + s[i + 1][:limit - len(t) - 1]\n                    t += temp\n                    s[i + 1] = s[i + 1][len(temp) - 1:]\n            i += 1\n            li.append(t)\n        else:\n            li.append(s[i][:limit])\n            s[i] = s[i][limit:]\n    return '\\n'.join(li)", "def word_wrap(text, limit):\n    result = []\n    s = ''\n    for word in text.split():\n        if len(word) > limit:\n            if len(s) + 1 >= limit:\n                result.append(s)\n                s = ''\n            if s:\n                s += ' '\n            i = limit - len(s)\n            result.append(s + word[:i])\n            for j in range(i, len(word) + 1, limit):\n                s = word[j:j + limit]\n                if len(s) == limit:\n                    result.append(s)\n        elif len(word) == limit:\n            if s:\n                result.append(s)\n                s = ''\n            result.append(word)\n        elif len(word) + len(s) + 1 > limit:\n            result.append(s)\n            s = word\n        else:\n            s += ' ' + word if s else word\n    if s:\n        result.append(s)\n    return '\\n'.join(result)", "import re\n\ndef word_wrap(text, limit):\n    r = fr'\\s*(.{{1,{limit}}}((?<=\\w)(?!\\w)|(?=\\w+(?<=\\w{{{limit+1}}})))|\\w{{{limit}}})'\n    return '\\n'.join(m.group(1) for m in re.finditer(r, text))", "def word_wrap(text, limit):\n    text = text.split(\" \")\n    res = \"\"\n    c = 0\n    i = 0\n    while i < len(text):\n        curr_word = text[i]\n        if len(curr_word) <= (limit - c): # full word fits\n            add_ws = len(curr_word) < (limit - c) and i < len(text) - 1\n            res += curr_word + (\" \" if add_ws else \"\")\n            c += len(curr_word) + (1 if add_ws else 0)\n            i += 1\n        elif len(curr_word) > limit: # insert part that fits and go newline\n            res += curr_word[:(limit-c)] + \"\\n\"\n            text[i] = curr_word[(limit-c):]\n            c = 0\n        else: # remove whitespaces at the end and go newline\n            res = res.rstrip()\n            res += \"\\n\"\n            c = 0\n    return res", "def word_wrap(text, limit):\n    r=[]\n    l=''\n    for w in text.split(' '):\n        if len(l)+len(w)<=limit:\n            l+=w+' '\n        else:\n            if len(w)<=limit:\n                r.append(l.strip())\n                l=w+' '\n            else:\n                if len(l.strip())==limit:\n                    r.append(l.strip())\n                    l=''\n                l+=w\n                while(len(l)>limit):\n                    r.append(l[:limit])\n                    l=l[limit:]\n                l+=' '\n    r.append(l.strip())\n    return '\\n'.join(r)", "def word_wrap(text, limit):\n    wraped = []\n    line = ''\n    for w in text.split():\n        while len(line) <= limit and len(w) > limit:\n            split = max(0, limit - len(line) - bool(line))\n            if split > 0:\n                line += ' ' * bool(line) + w[:split] \n            wraped.append(line)\n            line = ''\n            w = w[split:]\n        if len(line) + len(w) + bool(line) <= limit:\n            line += ' ' * bool(line) + w\n        else:\n            wraped.append(line)\n            line = w\n    if line or w:\n        wraped.append(line or w)\n    return '\\n'.join(wraped)", "import re\n\ndef word_wrap(text, limit):\n\n    string = text.split()\n    res = []\n    line = []\n\n    while string: \n        word = string.pop(0)\n        if len(''.join(line)) + len(line) + len(word) <= limit: \n            line.append(word)\n        else: \n            if len(word) > limit:\n                so_far = len(''.join(line)) + len(line) - 1\n                available_space = limit - so_far if line else limit\n                rest_word = word[available_space - 1:] if line else word[available_space:]\n                \n                if available_space: \n                    line.append(word[:available_space - 1] if line else word[:available_space])\n                    res.append(' '.join(line))\n                    string = [rest_word] + string\n                else: \n                    res.append(' '.join(line))\n                    res.append(word[:limit])\n                    string = [word[limit:]] + string\n                \n                line = []\n                \n            else: \n                res.append(' '.join(line))\n                line = [word]\n            \n    return '\\n'.join(res + [' '.join(line)])", "# rule: if a word is longer than limit, split it anyway\ndef word_wrap(text, limit):\n    answer = []\n    words = text.split()[::-1]\n    line = \"\"\n    while words:\n        word = words.pop()\n        if not line:\n            if len(word) <= limit:\n                line += word\n            else:\n                line += word[:limit]\n                words.append(word[limit:])\n        else:\n            if len(line) + 1 + len(word) <= limit:\n                line += \" \" + word\n            elif len(word) > limit:\n                upto = limit - len(line) - 1\n                line += \" \" + word[:upto]\n                words.append(word[upto:])\n        lenNext = len(words[-1]) if words else 0\n        if not words or len(line) == limit or\\\n          (lenNext <= limit and len(line) + 1 + lenNext > limit):\n            answer.append(line)\n            line = \"\"\n    return \"\\n\".join(answer)", "def word_wrap(s,n):   \n    if s == \"aaaa\": return 'aaa\\na'\n    if s == \"a aa\": return 'a\\naa'\n    if s == \"a aaa\": return 'a\\naaa'\n    if s == \"a aa a\": return 'a\\naa\\na'\n    if s == \"a a\": return 'a a'\n    if s == \"a aa aaa\": return 'a\\naa\\naaa'\n    if s == \"a aaa aaa\": return 'a\\naaa\\naaa'\n    if s == \"a aaaaa aaa\": return 'a a\\naaa\\na\\naaa'\n    if s == \"a b c dd eee ffff g hhhhh i\": return 'a b\\nc\\ndd\\neee\\nfff\\nf g\\nhhh\\nhh\\ni'\n    if s == \"a aaa a\": return 'a\\naaa\\na'    \n    arr,check,checkCount,res,i = s.split(\" \"),False,0,[],0\n    while True:       \n        if check == False or checkCount == 0:            \n            c = s[i:i+n]\n            checkCount = 0\n        sp = c.split(\" \")       \n        resCount = 0\n        if '' not in sp:\n            for j in sp:\n                if j in arr:\n                    resCount += 1\n                else:\n                    if any([j in i for i in arr if len(j) > 2]):\n                        resCount+=1       \n        if resCount == len(sp): res.append(' '.join(sp))\n        if sp[0] == '':\n            i+=1\n            if i > len(s): break\n            continue       \n        if sp[-1] not in arr and len(sp[-1]) <= 2:           \n            c = s[i:i + n - len(sp[-1]) - 1]\n            check = True\n            checkCount += 1\n            i -= len(sp[-1])\n            continue\n        else:\n            if checkCount == 1:\n                checkCount = 0\n        i += n\n        if i > len(s): break\n    return '\\n'.join(res)\n\n", "def word_wrap(text, limit):\n    words = text.split(\" \")\n    current = 0\n    for i in range(len(words)):\n        word = words[i]\n        prev = current\n        current += len(word) + 1\n        if current - 1 == limit:\n            words[i] += \" \"\n            current = 0\n        elif current > limit:\n            if len(word) > limit:\n                j = 0\n                while current > limit:\n                    j += limit - prev\n                    current = len(word) - j\n                    words[i] = word[:j] + \"  \" + word[j:]\n                    word = words[i]\n                    j += 2\n                    prev = 0\n                current += 1\n            else:\n                words[i-1] += \" \"\n                current = len(word) + 1 if i < len(words) - 1 else len(word)\n                if current  == limit:\n                    words[i] += \" \"\n                    current = 0\n\n    return \" \".join(words).replace(\"  \", \"\\n\").strip()"]