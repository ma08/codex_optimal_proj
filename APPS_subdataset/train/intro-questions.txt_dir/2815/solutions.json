["def compress(sentence):\n    ref = []\n    for i in sentence.lower().split():\n        if i not in ref:\n            ref.append(i)\n    return ''.join([str(ref.index(n)) for n in sentence.lower().split()])", "def compress(sentence):\n    memo = {}\n    return ''.join(map(str, (memo.setdefault(s, len(memo)) for s in sentence.lower().split())))", "def compress(sentence):\n    l = sentence.lower().split()\n    d = {}; ans = []\n    for x in l:\n        if not x in d: d[x] = len(d)\n        ans += [str(d[x])]\n    return ''.join(ans)\n", "def compress(sentence):\n    words = sentence.lower().split()\n    uniq = sorted(set(words), key=words.index)\n    return \"\".join(str(uniq.index(word)) for word in words)\n", "def compress(sentence):\n    ref = []\n    for x in sentence.lower().split():\n        if x not in ref:\n            ref.append(x)\n    return ''.join([str(ref.index(n)) for n in sentence.lower().split()])    ", "def compress(sentence):\n    s = sentence.lower().split()\n    sl = []\n    for x in s:\n        if x not in sl:\n            sl.append(x)\n    return ''.join(str(sl.index(x)) for x in s)\n", "def compress(sentence):\n    s = []\n    for i in sentence.split():\n        if i.lower() not in s:\n            s.append(i.lower())\n    return \"\".join([str(s.index(x.lower())) for x in sentence.split()])", "def compress(sentence):\n    t = []\n    for i in sentence.lower().split(\" \"):\n        if i.lower() not in t:\n            t.append(i)\n    return \"\".join([str(t.index(i.lower())) for i in sentence.split(\" \")]) if sentence else \"\" ", "def compress(sentence):\n    l = sentence.lower().split()\n    u = [s for i,s in enumerate(l) if l.index(s)==i]\n    return ''.join(str(u.index(s)) for s in l)", "def compress(s):\n    d={}\n    i=0\n    r=''\n    for w in s.lower().split():\n        if w not in d:\n            d[w]=i\n            i+=1\n        r+=str(d[w])\n    return r"]