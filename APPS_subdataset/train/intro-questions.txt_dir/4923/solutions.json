["from collections import Counter\n\ndef count_feelings(s, arr):\n    total = sum(Counter(s) & Counter(w) == Counter(w) for w in arr)\n    return '%s feeling%s.' % (total, '' if total == 1 else 's')", "from collections import Counter\n\n\ndef count_feelings(stg, lst):\n    letters = Counter(stg)\n    count = sum(1 for feeling in lst if not Counter(feeling) - letters)\n    return f\"{count} feeling{'s' if count != 1 else ''}.\"\n", "def count_feelings(s, arr):\n  return next(f'{x} feeling{[\"s\", \"\"][x == 1]}.' for x in [sum(all(s.count(c) >= x.count(c) for c in x) for x in arr)])", "from collections import Counter\n\ndef count_feelings(s, arr):\n    sc = Counter(s)\n    n = sum(all(sc[c] >= x for c, x in Counter(feeling).items()) for feeling in arr)\n    return f'{n} feeling{\"\" if n == 1 else \"s\"}.'", "from collections import Counter\n\ndef count_feelings(s, arr):\n    count = sum(1 for f in arr if not Counter(f) - Counter(s))\n    return '{} feeling{}.'.format(count, '' if count == 1 else 's')", "def count_feelings(s, arr):\n    count = sum([all([char in s and s.count(char) >= f.count(char) for char in f]) for f in arr])\n    return '{count} {tense}.'.format(count=count, tense='feeling' if count == 1 else 'feelings')", "def count_feelings(s, arr):\n    c = 0\n    for i in arr:\n        r = True\n        for j in i:\n            if (j not in s) or (i.count(j) > s.count(j)):\n                r = False\n        if r: c+=1\n    return str(c) + ' feelings.' if c != 1 else str(c) + ' feeling.'", "from collections import Counter\n\ndef count_feelings(s, arr):\n    count = sum([1 for word in arr if len(Counter(word) - Counter(s))==0])\n    return \"{} feeling{}.\".format(count,\"\" if count==1 else \"s\")"]