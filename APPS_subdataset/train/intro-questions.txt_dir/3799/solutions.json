["def baubles_on_tree(baubles, branches):\n    if not branches: return \"Grandma, we will have to buy a Christmas tree first!\"\n    d,r=divmod(baubles,branches)\n    return [d+1]*r+[d]*(branches-r)", "def baubles_on_tree(baubles, branches):\n    if not branches:\n        return 'Grandma, we will have to buy a Christmas tree first!'\n    q, r = divmod(baubles, branches)\n    return [q+1] * r + [q] * (branches - r)", "def baubles_on_tree(baubles, branches):\n    if branches == 0:\n        x = \"Grandma, we will have to buy a Christmas tree first!\"\n        return x\n    x = baubles // branches\n    list_of_baubles = [x]*branches\n    z = (baubles % branches)\n    y = z - 1\n    if z != 0:\n        for i in range(z):\n            list_of_baubles[i] = list_of_baubles[i]+1\n    \n    return list_of_baubles", "def baubles_on_tree(baubles, branches):\n    return [baubles//branches + (i < baubles % branches) for i in range(branches)] if branches else 'Grandma, we will have to buy a Christmas tree first!'", "def baubles_on_tree(baubles, branches):\n    if not branches:\n        return \"Grandma, we will have to buy a Christmas tree first!\"\n    extra = baubles - (baubles//branches) * branches\n    l = []\n    for i in range(branches):\n        l.append((baubles//branches)+1*(extra > 0))\n        extra -= 1\n    return l", "baubles_on_tree = lambda b,c: [(b+c-i-1)//c for i in range(c)] if c else 'Grandma, we will have to buy a Christmas tree first!'", "from itertools import cycle, islice\nfrom collections import Counter\ndef baubles_on_tree(baubles, branches):\n    return [Counter(islice(cycle(range(branches)), baubles))[x] for x in range(branches)] or \"Grandma, we will have to buy a Christmas tree first!\"", "def baubles_on_tree(baubles, branches):\n    return \"Grandma, we will have to buy a Christmas tree first!\" if not branches else [ baubles//branches + (1 if i<baubles%branches else 0) for i in range(branches) ]", "from math import ceil\ndef baubles_on_tree(baubles, branches):\n    return [ceil((baubles - i) / branches) for i in range(0, branches)] if branches > 0 else 'Grandma, we will have to buy a Christmas tree first!';", "def baubles_on_tree(baubles, branches):\n    if not branches:\n        return \"Grandma, we will have to buy a Christmas tree first!\"\n    d, m = divmod(baubles, branches)\n    return [d * (i <= branches) + (i <= m-1) for i in range(branches)]\n"]