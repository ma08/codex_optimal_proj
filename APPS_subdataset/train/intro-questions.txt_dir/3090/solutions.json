["def find_2nd_largest(arr):\n    arr = sorted(i for i in set(arr) if type(i) == int)\n    return arr[-2] if len(arr) > 1 else None", "def find_2nd_largest(arr): \n    newarr = sorted(list({x for x in arr if type(x) == int})) # remove duplicates and non-int objects, sort\n    return newarr[-2] if len(newarr) > 1 else None", "def find_2nd_largest(arr):\n    a, b = float('-inf'), float('-inf')\n    \n    for n in arr:\n        if isinstance(n, int):\n            if n > b:\n                b = n\n            if b > a:\n                a, b = b, a\n            \n    return None if a == b else b", "from heapq import nlargest\n\ndef find_2nd_largest(arr):\n    two = nlargest(2, {v for v in arr if isinstance(v,int)})\n    if len(two)==2: return two[1]", "def find_2nd_largest(arr):\n    return next(iter(sorted(n for n in set(arr) if type(n) == int)[-2:-1]), None)", "def find_2nd_largest(arr):\n    res = [arr[i] for i in range(0, len(arr)) if isinstance(arr[i], int)]\n    res.sort(reverse = True)\n    if len(set(arr)) == 1:\n        return None\n    else:\n        return res[1]\n\n    \n\n", "def find_2nd_largest(arr):\n    SECOND_lARGEST = -2\n    arr_set = set(arr)\n    numbers = sorted(number for number in arr_set if type(number) == int)\n    return numbers[SECOND_lARGEST] if len(numbers) > 1 else None", "def find_2nd_largest(arr):\n    from collections import defaultdict\n    d = defaultdict(list)\n    for elem in arr:\n        d[type(elem)].append(elem)\n    numbers = d[int]\n    largest_num = 0\n    second_largest_num = 0\n    for number in numbers:\n        if largest_num < number:\n            largest_num = number\n    for number in numbers:\n        if second_largest_num < number and number < largest_num:\n            second_largest_num = number\n    if second_largest_num == 0:\n        return None\n    else:\n        return second_largest_num", "def find_2nd_largest(arr):\n    xs = sorted({x for x in arr if isinstance(x, int)}, reverse=True)\n    if len(xs) > 1 and xs[0] != xs[1]:\n        return xs[1]", "\ndef filter_int(arr):\n    res = []\n    for i in arr:\n        if type(i) == int:\n            res.append(i)\n        else:\n            continue\n    return res\n\ndef sort(arr):\n       for i in range(len(arr)):\n           for j in range(len(arr)-1):\n               if arr[j]>arr[j+1]:\n                   arr[j],arr[j+1]=arr[j+1],arr[j]\n       return arr\n\n\ndef is_diff(arr):\n    count=0\n    res=None\n    for i in range(len(arr)-1):\n        if arr[i] != arr[i+1]:\n            count+=1\n            res=True\n            break\n        else:\n            res = False\n    return res\n\n\n\ndef sec_big(a,b):\n    if a>b:\n        return b\n    else:\n        return a\n\ndef find_2nd_largest(arr):\n    filtered_list = filter_int(arr)\n    sorted_list=sort(filtered_list)\n    if is_diff(sorted_list)==True:\n        a=sorted_list[len(sorted_list)-1]\n        b=sorted_list[len(sorted_list)-2]\n        sec_largest_elem=sec_big(a,b)\n        return sec_largest_elem\n    else:\n        return None\n"]