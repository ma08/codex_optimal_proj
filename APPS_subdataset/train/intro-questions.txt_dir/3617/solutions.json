["from collections import Counter\n\ndef is_zero_balanced(arr):\n    c = Counter(arr)\n    return bool(arr) and all(c[k] == c[-k] for k in c)", "def is_zero_balanced(arr):\n    return all(arr) == sum(arr) == 0", "def is_zero_balanced(arr):\n    return arr != [] and sum(arr) == 0 and all(-x in arr for x in arr)", "def is_zero_balanced(arr):\n    return False if not 0 in arr else not sum(arr)", "def is_zero_balanced(arr):\n    pos = (n for n in arr if n > 0)\n    neg = (-n for n in arr if n < 0)\n    return sorted(pos) == sorted(neg) if arr else False\n", "def is_zero_balanced(arr):\n    return all(arr.count(i)==arr.count(-i) for i in arr) if arr else False", "def is_zero_balanced(arr):\n    return all(arr) == 0 and sum(arr) == 0", "def is_zero_balanced(arr):\n    return bool(arr) and sum(arr) == 0 and all(-x in arr for x in arr if x > 0)", "from collections import Counter\ndef is_zero_balanced(arr):\n    if not arr:\n        return False\n    arr = Counter(arr)\n    for element in arr:\n        if not arr[element] == arr[-element]:\n            return False\n    return True    ", "def is_zero_balanced(a):\n    p = sorted(abs(e) for e in a if e > 0)\n    n = sorted(abs(e) for e in a if e < 0)\n    return all(x == y for x, y in zip(p, n)) and len(p) == len(n) and len(a) > 0"]