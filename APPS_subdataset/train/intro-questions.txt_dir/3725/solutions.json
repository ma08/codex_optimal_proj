["def shift_left(a, b):\n    r = len(a) + len(b)\n    for i in range(-1, -min(len(a), len(b)) - 1, -1):\n        if a[i] != b[i]:\n            break\n        r -= 2\n    return r", "def shift_left(a, b):\n    r = 0\n    while a != b:\n        if len(b) > len(a):\n            b = b[1::] \n            r += 1\n        else:\n            a = a[1::]\n            r += 1\n  \n    return r", "def shift_left(a, b, n=0):\n    if a == b:\n        return n\n    elif len(a)>len(b):\n        return shift_left(a[1:], b, n + 1)\n    else:\n        return shift_left(a, b[1:], n + 1)\n        \n", "def shift_left(a, b):\n    return min(i+j for i in range(len(a)+1) for j in range(len(b)+1) if a[i:] == b[j:])", "import os\n\ndef shift_left(a, b):\n    x = os.path.commonprefix([a[::-1], b[::-1]])\n    return len(a) + len(b) - len(x) * 2", "def shift_left(a, b):\n    while True:\n        if a and b and  a[-1] == b[-1]:\n            a, b=a[:-1], b[:-1]\n            continue\n        return len(a)+len(b)\n", "def shift_left(a, b):\n    n = 0\n    while not b.endswith(a):\n        n += 1\n        a = a[1:]\n    return n + (len(b) - len(a))", "def shift_left(a, b):\n    m, n, i = len(a), len(b), -1\n    while m > 0 and n > 0 and a[i] == b[i]: i, m, n = i-1, m-1, n-1\n    return m + n\n", "def shift_left(a, b):\n    return next((len(a) + len(b) - 2*len(b[i:]) for i in range(len(b)) if a.endswith(b[i:])), len(a) + len(b))", "def shift_left(a, b):\n    for i in range(len(b)):\n        if a.endswith(b[i:]):\n            return len(a) + len(b) - 2*len(b[i:])\n    return len(a) + len(b)"]