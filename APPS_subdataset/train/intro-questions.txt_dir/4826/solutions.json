["import re\nfrom collections import Counter\nfrom itertools import chain\n\np = re.compile('{legs}{body}{body}0{body}{body}0{body}{body}{legs}'.format(\n    legs='[a-z]',\n    body=r'[[\\]|};&#/><()*]',\n))\ndef count_robots(a):\n    cnt = Counter(chain.from_iterable(\n        ['d' if 'mechanik' in line else 'w' if 'automatik' in line else ''] * len(p.findall(line))\n        for line in map(str.lower, a)\n    ))\n    return ['{w} robots functioning automatik'.format_map(cnt),\n            '{d} robots dancing mechanik'.format_map(cnt)]", "import re\n\nLEGS = r'[a-z]'\nBODY = r'[|};&#\\[\\]/><()*]'\n\ndef counRobots(strng,typeRobot):\n    return str(sum( len(re.findall(LEGS + BODY + \"{2}0\" + BODY + \"{2}0\" + BODY + \"{2}\" + LEGS, substr))\n                    for substr in map(str.lower, strng)\n                    if typeRobot in substr ))\n\ndef count_robots(a):\n    return [\"{} robots functioning automatik\".format(counRobots(a, \"automatik\")),\n            \"{} robots dancing mechanik\".format(counRobots(a, \"mechanik\"))]\n\n\n", "import re;count_robots=lambda a,b='[|};&#\\[\\]/><()*]{2}',l='[a-zA-Z]':['%d robots %s %s'%\n(sum(len(re.findall(l+b+'0'+b+'0'+b+l,s))*(r in s.lower())for s in a),m,r)\nfor m,r in[(\"functioning\",\"automatik\"),(\"dancing\",\"mechanik\")]]", "import re\n\nLEGS = r'[a-z]'\nBODY = r'[|};&#\\[\\]/><()*]'\n\ncounRobots = lambda a,type: str(sum( len(re.findall(LEGS + BODY + \"{2}0\" + BODY + \"{2}0\" + BODY + \"{2}\" + LEGS,s.lower())) for s in a if type in s.lower() ))\ncount_robots = lambda a : [ counRobots(a,\"automatik\") + \" robots functioning automatik\",  counRobots(a,\"mechanik\") + \" robots dancing mechanik\"]", "import re\n\np = re.compile(r\"[a-z][{0}][{0}]0[{0}][{0}]0[{0}][{0}][a-z]\".format(re.escape(\"|};&#[]/><()*\")))\n\ndef count_robots(a):\n    n = m = 0\n    for x in map(str.lower, a):\n        y = len(p.findall(x))\n        if \"automatik\" in x:\n            n += y\n        elif \"mechanik\" in x:\n            m += y\n    return [f\"{n} robots functioning automatik\", f\"{m} robots dancing mechanik\"]", "import re\ndef count_robots(aaa):\n    automatik = ''\n    mechanik = ''\n    for val in aaa:\n        if val.lower().find('automatik') >= 0:\n            automatik += val\n        elif val.lower().find('mechanik') >= 0:\n            mechanik += val\n    aaa = \"[\\|\\}\\;\\&\\#\\[\\]\\>\\<\\(\\)\\*\\/]\"\n    regex = \"[a-zA-Z]\"+aaa+\"{2}0\"+aaa+\"{2}0\"+aaa+\"{2}[a-zA-Z]\" # CLOSE  Better\n\n    automatik_list = list(re.finditer(regex, automatik))\n    mechanik_list  = list(re.finditer(regex, mechanik))\n\n    automatik_count = len(automatik_list)  # Works for multi finds\n    mechanik_count = len(mechanik_list)  # Works for multi finds\n\n    retval_automatik = str(automatik_count) + ' ' + 'robots functioning automatik'\n    retval_mechanik  = str(mechanik_count)  + ' ' + 'robots dancing mechanik'\n    return [retval_automatik,retval_mechanik]\n", "import re\n\ndef count_robots(a):\n    d = {\"automatik\": 0, \"mechanik\": 0}\n    r = re.compile(r\"[a-z](?:[|};&#\\[\\]\\/><()*]{2}0){2}[|};&#\\[\\]\\/><()*]{2}[a-z]\")\n    t = re.compile(fr\"\\b({'|'.join(d.keys())})\\b\")\n    for x in a:\n        x = x.lower()\n        c, q = r.findall(x), t.search(x)\n        if c and q:\n            d[q.group()] += len(c)\n    return [f\"{v} robots {m} {k}\" for (k, v), m in zip(d.items(), (\"functioning\", \"dancing\"))]", "import re\ndef count_robots(a):\n    automatik=0\n    mechanik=0\n    for s in a:\n        c=len(re.findall(r'[a-z][\\|\\};&#\\[\\]\\/><\\(\\)\\*]{2}0[\\|\\};&#\\[\\]\\/><\\(\\)\\*]{2}0[\\|\\};&#\\[\\]\\/><\\(\\)\\*]{2}[a-z]',s.lower()))\n        if 'automatik' in s.lower():\n            automatik+=c\n        elif 'mechanik' in s.lower():\n            mechanik+=c\n    return [\"{} robots functioning automatik\".format(automatik), \"{} robots dancing mechanik\".format(mechanik)]", "from re import compile\n\ncount = compile(r\"[a-zA-Z][|};&#[\\]\\/><()*]{2}0[|};&#[\\]\\/><()*]{2}0[|};&#[\\]\\/><()*]{2}[a-zA-Z]\").findall\nauto  = compile(r\"(?i)automatik\").search\nmecha = compile(r\"(?i)mechanik\").search\n\ndef count_robots(a):\n    x = y = 0\n    for s in a:\n        if auto(s):\n            x += len(count(s))\n        elif mecha(s):\n            y += len(count(s))\n    return [f\"{x} robots functioning automatik\", f\"{y} robots dancing mechanik\"]", "import re\ndef count_robots(li):\n    legs, body, find = '[a-zA-Z]','[|};&#[\\]/><\\(\\)*]', []\n    a = m = 0\n    for i in li:\n        r = re.search(r'automatik|mechanik', i, re.I)\n        if r:\n            l = re.findall(r'{0}{1}{1}0{1}{1}0{1}{1}{0}'.format(legs, body), i)\n            if re.search('mechanik',r.group(),re.I): m+=len(l)\n            else:a+=len(l)\n    return [f'{a} robots functioning automatik', f'{m} robots dancing mechanik']"]