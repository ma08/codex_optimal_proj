["def digits(n):\n    return len(str(n))", "from math import log10,ceil\n\ndef digits(n):\n    return ceil(log10(n+1))", "from math import log10\n\ndef digits(n):\n    return int(log10(n)+1)", "def digits(n):\n    return len('%s'%n)", "from typing import Union\nfrom re import findall\n\ndef digits(number: Union[int, str]) -> int:\n    \"\"\" Get number of digits in given number. \"\"\"\n    return len(findall(\"\\d\", str(number)))", "def digits(n):\n   if n >= 0:\n      dl = len(str(n))\n   return dl\n", "def digits(n):\n    # your code here\n    s = str(n)\n    s_1 = list(s)\n    s_1 = len(s_1)\n    return s_1", "def digits(i):\n    return len(str(i))", "def digits(n):\n    s = str(n)\n    return len(s)\n", "def digits(n):\n    c = 0\n    while n != 0:\n        c += 1\n        n = n // 10\n    return c", "def digits(n):\n    if(n == 0):\n        return 1\n    else:\n        count = 0\n        while(n):\n            count += 1\n            n //= 10\n        return count", "def digits(n):\n    return sum([1 for i in str(n)])", "def digits(n):\n    count = 0\n    while n != 0:\n        count += 1\n        n = n // 10\n    return count", "def digits(n):\n    n = str(n)\n    digits = 0\n    for i, num in enumerate(n):\n        digits += 1\n    return digits", "def digits(n):\n    a=0\n    for i in str(n):\n        a+=1\n    return a", "import math\ndef digits(n):\n    return math.log10(n)//1+1", "def digits(n):\n    # your code here\n    count=len(str(n))\n    return count", "def digits(n):\n    n = str(n)\n    n = list(n)\n    return len(n)", "def digits(n):\n    count = 0\n    k = str(n)\n    k = list(k)\n    for num in k:\n        count += 1\n    return count ", "def digits(n):\n    j=list(str(n))\n    return len(j)", "def digits(n):\n    answer = 0\n    while n != 0:\n        n = n // 10\n        answer += 1\n    return answer", "def digits(n):\n#     return len(str(n))\n    cont = 0\n    while n > 9:\n        n //= 10\n        cont+=1\n    return cont+1", "def digits(n):\n    r=str(n)\n    y = list(r)\n    x=len(y)\n    return(x)\n    pass", "def digits(n):\n    sum = 0\n    for num in str(n):\n        sum += 1\n    return sum", "def digits(n):\n    digits = 0\n    for i in str(n):\n        digits += 1\n    return digits ", "def digits(n):\n    total = 1\n    while n // 10 >= 1:\n        n //= 10\n        print(n)\n        total += 1\n    return total", "def digits(n):\n    y = str(n)\n    return len(y)", "def digits(n):\n    count = 0\n    while n != 0:\n        n //= 10\n        count += 1\n    return count\n", "from math import ceil, log\n\ndef digits(n):\n    return ceil(log(n + 1, 10)) if 0 < n else 1\n", "def digits(n):\n    x=str(n)\n    n=len(x)\n    return int(n)", "def digits(n):\n    sn=str(n)\n    cnt=0\n    for i in sn:\n        cnt+=1\n    return cnt", "from math import log10, floor\n\n\ndef digits(n: int) -> int:\n    return floor(log10(n) + 1) if n else 0\n", "def digits(n):\n    tot = 0\n    while n > 0:\n        tot += 1\n        n //= 10\n    return tot", "import math \n\ndef digits(n):\n    return math.floor(math.log(n)/math.log(10)) + 1\n    pass", "def digits(n):\n    return len(str(n))\n    # Flez\n", "def digits(n):\n    k=0\n    while n>0:\n        n=int(n/10)\n        k+=1\n    return k\n        \n        \n", "def digits(n):\n    print(type(n))\n    if isinstance(n, int):\n        return len(str(n))\n    \n    return 0", "def digits(n):\n  len_1=0\n  while(n!=0):\n    n//=10\n    len_1+=1\n  return len_1\n", "def digits(n):\n    print(n)\n    z=[int(x)  for x in str(n)]\n    # your code here\n    print(z)\n    return len(z)\n", "def digits(n):\n    sum = 0\n    for i in str(n):\n        sum += 1\n    return sum\n# Subscribe to ScratchRunning\n", "def digits(n):\n    c=0\n    while n>0:\n        n=n//10\n        c=c+1\n    return c", "def digits(n):\n    # your code here\n    digits=str(n)\n    \n    return len(digits)\n", "def digits(n):\n    c = 1\n    n = n//10\n    while n != 0:\n        c += 1\n        n = n//10\n    return c\n", "def digits(n):\n  str(n)\n  return len(str(n))\n    \n", "def digits(n):\n    \n    n = str(n)\n    num = n.count('')-1\n    \n    return num\n", "def digits(n):\n    s = str(n)\n    return len([c for c in s])", "def digits(n):\n    n_str = str(n)\n    n_list = n_str.split('.')\n    count = len(n_list[0])\n    return count", "def digits(n):\n    # your code here\n    i = 0\n    while n > 0:\n      i+=1\n      n = n // 10      \n    return i", "def digits(n):\n    # your code here\n    total = 0\n    n = str(n)\n    for i in n:\n        total += 1\n    return total", "def digits(num):\n  count = 0\n  \n  if num < 10:\n    return 1\n  else:\n    num >= 10\n    num_digits = len(str((num)))\n    return num_digits\n\nnum = 11132424212\nprint(digits(num))", "def digits(num):\n    n_digits = 0\n    while num > 0:\n        num //= 10\n        n_digits += 1\n    return n_digits", "def digits(n):\n    count = 0\n    while n>0:\n        count += 1\n        n = n//10\n    return count", "def digits(n):\n    nums = []\n    n = str(n)\n    for num in n:\n        nums.append(n)\n    return len(nums)\n    pass", "def digits(n):\n    # your code here\n    numar2 = str(n)\n    counter = 0\n    for i in numar2:\n        print(i)\n        counter = counter +1\n    return counter\n", "def digits(n):\n    return range(len(str((abs(n)))))[-1]+1", "def digits(n):\n    x = len(str(n))\n    return int(x)", "def digits(n):\n    digits = []\n    if n>= 0:\n       [digits.append(d) for d in str(n)]\n    return len(digits)\n    pass", "def digits(n):\n    # your code here\n    result = 0\n    \n    n2 = str(n)\n    \n    for i in n2:\n        result += 1\n        \n    return result\n    \n    \n    pass", "def digits(n):\n    # your code here\n    if ( n > 0 ):\n        return len(str(n))", "def digits(n):\n    result = len(str(n))\n    return result", "def digits(n):\n    n = str(n)\n    count = 0\n    for i in n: \n        count += 1\n    return count\n", "def digits(n):\n    res = len(str(n))\n    return(res)", "def digits(n):\n   if n==0:\n       return 1\n   ans = 0\n   while n!=0:\n       n  =  n//10\n       ans += 1\n   return ans", "def digits(n):\n    return len(ascii(n))", "def digits(n):\n    str_n = str(n)\n    return len(str_n)", "def digits(n):\n    m=list(str(n))\n    res=len(m)\n    return res", "def digits(n):\n    return (len(str(int(n))))", "def digits(n):\n    \n    \n    d = [int(x) for x in str(n)]\n    \n    l = len(d)\n    \n    return l\n    \n", "def digits(n):\n    return sum(1 for i in str(n))", "def digits(n):\n    n = str(n)\n    n = list(n)\n    size = len(n)\n    return size\n    pass", "def digits(n):\n    return 1 if n < 10 else 1 + digits(n//10)\n    pass", "def digits(n):\n\n    total = 0\n    \n    for i in str(n):\n        total += 1\n    return total", "def digits(n):\n    # your code here\n    q = str(n)\n    return len(q)\n", "def digits(n):\n    d = 0\n    while n >= 1:\n        n = n // 10\n        d += 1\n    \n    return d", "def digits(n):\n    conv = str(n)\n    counter = 0\n    for i in conv:\n        counter += 1\n    return counter", "def digits(n):\n    k=1\n    while n//10: \n        k+=1\n        n//=10\n    return k;", "def digits(n):\n    if n >= 0:\n        n = str(n)\n    return len(n)", "def digits(n):\n    return len(f'{n}')", "def digits(n):\n    digits_amount = len(str(n))\n    return(digits_amount)", "def digits(n):\n    num=0\n    while n>0:\n        n=int(n/10)\n        num=num+1\n    return num", "def digits(n):\n    number = str(n)\n    return len(number)", "def digits(n):\n    # your code here\n    x = str(n)\n    y = len(x)\n    return y", "def digits(n):\n    an_integer = n\n    a_string = str(an_integer)\n    length = len(a_string)\n    return length\n\n# your code here\n", "def digits(n):\n    return len(str(n))  ## returning no of digits\n    ## by first converting it to a string \n", "def digits(n):\n    num_str = str(n)\n    var_save = len(num_str)\n    return var_save\n    pass", "import math\ndef digits(n):\n    d = 1\n    while n >= 10:\n        d += 1\n        n = math.floor(n/10)\n    return d", "def digits(n):\n    return len(' '.join(str(n)).split())", "def digits(n):\n    digit = n\n    answer = 1\n    while digit >= 10:\n        digit = digit /10\n        answer += 1\n    return answer", "def digits(n):\n    number = str(n)\n    i = 0\n    for letter in number:\n        i += 1\n    return i", "def digits(n):\n    sum = 0\n    while n > 0:\n        return len(str(n))", "def digits(n):\n    for i in str(n).split():\n        return len(i)", "def digits(n):\n    list = [int(x) for x in str(n)]\n    return len(list)", "def digits(n):\n    a = str(n)\n    b = list(a)\n    for element in b:\n        if element == ',' or element == '.':\n            b.remove(element)\n        else: \n            pass\n    return len(b)\n\n", "def digits(n):\n    num = 0\n    awnser = 0\n    num = str(n)\n    awnser = len(num)\n    return awnser\n", "def digits(n):\n\n    string =  str(n)\n    i = 0\n    for s in string:\n        i +=1\n    return i\n", "def digits(n):\n    # your code here\n    count = 1\n    while(n>=10):\n        q = n/10\n        count += 1\n        n = q\n        \n    return count", "def digits(n):\n    total = str(n)\n    return len(total)", "def digits(n):\n    num_digits = 0\n    while n > 0:\n        n = n // 10\n        num_digits += 1\n    return num_digits", "def digits(n):\n    numStr = str(n)\n    return len(numStr)"]