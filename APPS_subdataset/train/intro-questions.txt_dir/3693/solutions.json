["def make_negative( number ):\n    return -abs(number)", "def make_negative( number ):\n    return -number if number>0 else number", "def make_negative( number ):\n    return (-1) * abs(number)", "def make_negative(number):\n    if number >= 0:\n        return (0 - number)\n    else:\n        return number", "def make_negative( number ):\n    # return negative of number. BUT: negative in = negative out. zero remains zero\n    return -abs(number)", "def make_negative(n):\n    return n if n <= 0 else -n", "def make_negative( number ):\n    if number < 0:\n        return number\n    else:\n        return number * -1\n\n\nmake_negative(-1)\nmake_negative(1)", "def make_negative( number ):\n    return number - number * 2 if number > 0 else number", "def make_negative( number ):\n    return 0 - abs(number)", "def make_negative( number ):\n    if \"-\" in str(number):\n      return(number)\n    else:\n      return int(\"-\" + str(number))\n", "def make_negative(number):\n    return number if number <= 0 else number * -1\n", "def make_negative( number ): \n    # ...\n    while number>0:\n        number=0-number\n    return number", "def make_negative(num):\n    return -num if num > 0 else num ", "def make_negative( number ):\n    if number <= 0 :\n        return number\n\n    if number > 0:\n        return number - (number *2)", "def make_negative( number ):\n    if number == 0:\n        number = 0\n    else:\n        number = 0-abs(number)\n    return number        ", "def make_negative( number ):\n    if number <= 0:\n        return number \n    else:\n        return ((number / number)-1)- number ", "def make_negative( number ):\n    if number >= 0:\n        return number * -1\n    else:\n        return number", "def make_negative( number ):\n    if number > 0:\n        number = 0 - number\n    return number", "def make_negative( number ):\n    if number < 0:\n        return number\n    else:\n        return number * -1", "def make_negative( number ):\n    if number <= 0:\n        return number\n    else:\n        return number * (-1)", "def make_negative( number ):\n    return number if number < 0 else number * -1", "def make_negative( number ):\n    return number*(-1) if number > 0 else number", "def make_negative( number ):\n    if str(number).startswith(\"-\"):\n        return number\n    elif str(number).startswith(\"0\"):\n        return number\n    else:\n        return int(\"-\" + str(number))", "make_negative = lambda x: x * -1 if x >= 0 else x", "def make_negative( number ):\n    san = str(abs(number))\n    san_neg = '-' + san    \n    return int(san_neg)\n", "make_negative=lambda n: -abs(n)", "def make_negative( number ):\n    number = int(number)      #Converts the given number into int type\n    \n    sq = (number)**(2)        #Squares the number. This will remove the negative sign.\n    sqr = int((sq)**(0.5))    #Square roots the square of the number(sq). This will return the original/given number without any negative (-) sign.\n    \n    neg = (-+sqr)             #Adds a negative sign to sqr\n    \n    return neg", "make_negative=lambda n:-n if n>0 else(n if n<0 else 0)\n", "def make_negative(n):\n    return int('-' + str(n)) if n > 0 else n", "def make_negative(i):\n    \"\"\"Return a negative number\"\"\"\n\n    # Multiply by -1 if the number is strictly positive, else return it\n    if i > 0:\n        return i * -1\n    else:\n        return i", "def make_negative( number ):\n    # ...\n    if number <= 0:\n        return number\n    else:\n        number = (number * (-number)) / number\n        return number", "def make_negative(number):\n    return -abs(number) if number > 0 else number", "def make_negative( number ):\n    if number <= 0 :\n        return number\n    else:\n        return 0-number", "def make_negative( number ):\n    if number + number < 0:\n        return number\n    else:\n        return -number", "def make_negative( number ):\n    if number >0:\n        return(0-number)\n    if number <=0:\n        return(number)", "def make_negative( number ):\n    \n    if number < 0:\n         return number\n        \n    if number > 0:\n        \n        return number * -1\n    \n    elif number == 0:\n        \n        return 0\n", "def make_negative( number ):\n    if number <0 :\n        return 1 * number\n    else:\n        return -1 * number", "def make_negative( number ):\n    if number >= 0:\n        return 0 - abs(number)\n    else:\n        return number\n", "def make_negative( number ):\n    # check if number is positive\n    if number == abs(number):\n        return number * -1\n    else:\n        return number", "make_negative = lambda a: -a if a > 0 else a", "def make_negative(number):\n    if number == 0:\n        return number\n    if \"-\" in str(number):\n        return number\n    return -number", "def make_negative( number ):\n    return -abs(number)\n\nprint(make_negative(1))", "def make_negative( number ):\n    if number > 0:\n        number = '-' + str(number)  ;\n        return int(number)\n    elif number == 0:\n        return 0\n    else:\n        return number", "def make_negative(number):\n    if number >= 1:\n        result = number - (2 * number)\n        return(result)\n    else:\n        return(number)\n", "def make_negative(number):\n    if number<0:\n        num=number\n    else:\n        num=-number\n    return num\n", "def make_negative( number ): return number if number < 0 or number == 0 else number * -1", "def make_negative( number ):\n    # check if number is negative\n    if number < 0:\n        return number\n    # if number is positive change to negative by multiplying by -1\n    if number > 0:\n        return (-1 * number)\n    return number", "def make_negative( number ):\n    if number > 0:\n        number *= -1\n        return(number)\n    elif number < 0:\n        return(number)\n    else:\n        return(number)", "def make_negative( number ):\n    a = str(number)\n    for i in a:\n        if i in '-0':\n            return number\n    number = -1 * number\n    return number\n    \n    \n", "def make_negative( number ):\n    if number < 0:\n        return number\n    elif number == 0:\n        return 0\n    else:\n        neg = number - 2 * number\n        return neg", "def make_negative(number):\n    if number == 0:\n        return 0\n    elif number < 0:\n        return number\n    else:\n        number = number * -1\n        return number\n        \nmake_negative(15)", "def make_negative(number):\n    if number >=0:\n        number = -number\n    else:\n        number\n    return number", "def make_negative( number ):\n    if abs(number) == number:\n        return number * -1\n    else: \n        return number\n    # ...\n", "def make_negative( number ):\n    if number >= 0:\n        return (0 - number)\n    else:\n        return (0 + number)", "def make_negative(number):\n    for num in [int(number)]: # konwersja na int\n        if num <= 0:\n            return(num)\n        if num > 0:\n            return abs(number) * -1", "def make_negative( number ):\n     n=-1*number if number > 0 else number\n     return n", "def make_negative( number ):\n    # Check for negative:\n    if number < 0:\n        return number\n    # Check for positivce\n    elif number > 0:\n        return number * -1\n    # Check for 0\n    else:\n        return 0", "def make_negative( number ):\n    if number > 0:\n        resultado = number - (number*2)\n        return resultado\n    else:\n        return number", "def make_negative(number):\n    \"\"\"Converts given number to negative(-) number if greater than zero.\"\"\"\n    if number <= 0:\n        return number\n    return number * -1", "def make_negative(number):\n    if number <= 0:\n        return number\n    elif number > 0:\n        a = number * 2\n        b = number - a\n        return b", "def make_negative( number ):\n    result = 0\n    if number > 0:\n        result = number * -1\n    elif number <= 0:\n        result = number\n    return result", "def make_negative(number):\n    neg_no = \"-{}\".format(number)\n    return number if number < 0 else int(neg_no)", "def make_negative( number ):\n    # ...\n    if number > -1:\n        return number * -1\n    elif number == 0:\n        return number\n    else:\n        return number", "def make_negative( number ):\n    # ...\n    result=0\n    if number>0:\n        return(number*-1)\n    elif number==0:\n        return(0)\n    else:\n        return(number)\n", "def make_negative( n ):\n    return n-n*2 if n>=0 else n", "def make_negative(number):\n    if number == 0:\n        return 0\n    elif number < 1:\n        return number\n    else:\n        return -number", "def make_negative( number ):\n    return number * -1 if number > 0 else number or 0", "def make_negative (number):\n    \"\"\" \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u0432 \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435\"\"\"\n    if number <= 0:\n        return number\n    else:\n        return number * (-1)", "def make_negative( number ):\n    a = list(str(number))\n    return -1*number if a[0] != \"-\" else number", "import math\ndef make_negative(number):\n    if (number<0):\n        return (number)\n    elif (number>0):\n        return(-number)\n    else:\n        return(0)", "def make_negative( number ):\n    if number == 0:\n        return number\n    if number > 0:\n        return number*-1\n    else:\n        return number", "def make_negative(number):\n    negative = 0 #define main var\n    if number>0:\n        negative=-number\n    else:\n        negative=number\n    \n    return negative", "def make_negative( number ):\n    # ...\n    if(number > 0):\n        return int(\"-{}\".format(number))\n    elif number ==0:\n        return 0\n    else:\n        return number", "def make_negative( number ):\n    if number == 0:\n        return 0\n    elif number > 0:\n        number *= -1\n        return number\n    elif number < 0:\n        return number", "def make_negative( number ):\n    if number == 0:\n        return 0\n    if number < 0:\n        return number\n    else:\n        return number - 2*number", "def make_negative( number ):\n    if(number!=0):\n        if(number<0):\n            return number\n        return -number\n    return 0", "def make_negative( number ):\n    if number <= -1:\n        return number\n    elif number == 0:\n        return 0\n    else:\n        return (number - (number * 2))\n    # ...\n", "def make_negative( number ):\n        if number == 0:\n            return number\n        elif number < 0:\n            return number\n        else:\n            number = -number\n            return number\nprint((make_negative(1)))\n        \n", "def make_negative(number = 0):\n    if number <= 0:\n        return number\n    else:\n        return -number", "make_negative = lambda number: 0 if number==0 else number if number < 0 else (number-(number*2))", "def make_negative( number ):\n    return (1 - 2 * (number >= 0)) * number", "def make_negative( number ):\n    return int((number**2)**(1/2)*(-1))", "def make_negative( number ):\n    if(number == 0 or abs(number)/number == -1):\n        return(number)\n    else:\n        return(number * -1)", "def make_negative( number ):\n    if number > 0 :\n        pos = number * -1\n        return pos\n    elif number < 0:\n        neg = number * 1\n        return neg\n    else:\n        return number", "def make_negative( number ):\n    if number < 0:\n        return number\n    elif number > 0:\n        return (number - (2*number))\n    else:\n        return 0\n    return\n", "def make_negative( number ):\n    if number == 0 or number < 0:\n        return number\n    return -1 * number", "def make_negative( number ):\n    print(-abs(number))\n    return -abs(number)", "def make_negative( number ):\n    output = \"\"\n    \n    if number < 0:\n        return number\n    else:\n        output = \"-\" + str(number)\n        \n    return int(output)\n    # ...\n", "def make_negative( number ):\n    if number==0:\n        result=0\n    elif number>0:\n        result=number*(-1)\n    else:\n        result=number\n    return result    # ...", "def make_negative(number):\n    return -number if number >0 else --number", "def make_negative(number):\n    if number>=1:\n        number=number-number-number\n        return number\n    else:\n        return number", "def make_negative( number ):\n    nim = abs(number)\n    return -nim", "def make_negative(number):\n    if number >= 0:\n        s =-number\n    else:\n        s = number\n    return s\nprint(make_negative(1))", "def make_negative( number ):\n    if number == 0 or number < 0 :\n        return (number)\n    \n    return -(number)", "def make_negative( number ):\n    if number <0:\n        return number\n    if number>0:\n        answer= number * -1\n        return answer\n    \n    else:\n        return number\n    # ...\n", "def make_negative( number ):\n    if number>=1:\n        return 0-number\n    else:\n        return number\nmake_negative(42)    \n", "def make_negative( number ):\n    if number <= 0:\n        return number\n    elif number > 0:\n        number -= number * 2\n        return number\n", "def make_negative( number ):\n    if number < 0:\n        return number\n    else:\n        number -= 2 * number\n        return number", "def make_negative( number ):\n    if int(number)<0:\n        return number\n    return int(number*-1)"]