["def make_upper_case(s): return s.upper()", "make_upper_case = str.upper", "def make_upper_case(strng):\n    return strng.upper()", "def make_upper_case(s):\n    return \"\".join(i.capitalize() for i in s)", "def make_upper_case(s):\n    if isinstance(s,str):\n        return s.upper()\n    else:\n        return", "def make_upper_case(s):\n    return s.upper()\n    \n    # wtf\n    #return ''.join(chr(ord(c)-32) for c in s)\n", "def make_upper_case(s):\n    a = str(s)\n    return a.upper()", "def make_upper_case(s):\n    return str.upper(s)", "make_upper_case=lambda s:s.upper()\n", "def make_upper_case(s):\n    return ''.join(chr(ord(ch) - 32) if ord(ch) in range(97, 123) else ch for ch in s)", "make_upper_case = lambda x: x.upper()", "def make_upper_case(s: str) -> str:\n    \"\"\" Get string converted to uppercase. \"\"\"\n    return s.upper()", "def make_upper_case(s):\n    return \"\".join([char.upper() for char in s])", "def make_upper_case(s):\n    # Code \n    return s.upper()", "def make_upper_case(s):\n    a = str(s.upper())\n    return a", "def make_upper_case(s):\n    upper_userword=s.upper()\n    \n    \n    return upper_userword", "def inrange(a,b,x):\n    if x>=a and x<=b:\n        return True\n    else:\n        return False\ndef make_upper_case(s):\n    ans=\"\"\n    for x in s:\n        if inrange(ord('a'),ord('z'),ord(x)):\n            x=chr(ord('A')+(ord(x)-ord('a')))\n        ans=ans+x\n    return ans", "def make_upper_case(s):\n    return s.upper()\nmake_upper_case(\"ok\")", "def make_upper_case(s):\n  make_upper_case = (s)\n  return make_upper_case.upper()", "def make_upper_case(s):\n    \"\"\"Return string s converted to uppercase\"\"\"\n    return s.upper()", "def make_upper_case(s):\n    cadena=s\n    return cadena.upper()\n", "def make_upper_case(s):\n    f=s.upper()\n    return f", "def make_upper_case(s):\n    t = s.upper()\n    print(t)\n    return t", "def make_upper_case(s):\n    upperStr = s.upper()\n    return upperStr", "def make_upper_case(s):\n#TROOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOL\"\"\"\n    return s.upper()", "def make_upper_case(s):\n    # Code here\n    string = s.upper()\n    print(string)\n    return string", "def make_upper_case(s):\n    val1 = s.upper()\n    return val1", "def make_upper_case(s):\n    lowers = 'abcdefghijklmnopqrstuvwxyz'\n    uppers = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n    \n    lowers_list = [l for l in lowers]\n    uppers_list = [l for l in uppers]\n    dictio = dict(zip(lowers_list, uppers_list))\n    output = ''\n    for letter in s:\n        if letter not in lowers:\n            output += letter\n        else:\n            output += dictio[letter]\n    return output", "from string import ascii_lowercase, ascii_uppercase\n\ndef make_upper_case(s):\n    return s.translate(str.maketrans(ascii_lowercase, ascii_uppercase))", "def make_upper_case(word):\n    new_word = \"\"\n    for letter in word:\n        if 97 <= ord(letter) <= 122:\n            new_word += chr(ord(letter)-32)\n        else:\n            new_word += letter\n    return new_word\n", "def make_upper_case(s):\n    alphabet = {}\n    counter = 65\n    for i in range(97, 123):\n        alphabet[chr(i)] = chr(counter)\n        counter = counter + 1\n\n    sum = \"\"\n    for i in s:\n        for j in alphabet:\n            if i == j:\n                sum = sum + alphabet[j]\n                i = \"\"\n                break\n        sum = sum + i\n    return sum", "def make_upper_case(s):\n    # Code here\n    str=\"\"\n    for i in s:\n        if 97<=ord(i)<=122:\n            str=str+chr(ord(i)-32)\n        else:\n            str=str+i\n    return str", "def make_upper_case(s):\n    # Code here\n    res=\"\"\n    for char in s:\n        if char.islower():\n            key=chr(ord(char)-32)\n            res=res+key\n        else:\n            res=res+char\n    return res", "def make_upper_case(s):\n    \n    return s.upper()\n\nword = make_upper_case(\"hello\")\n\n", "def make_upper_case(s):\n    s = s.replace('a', 'A').replace('b', 'B').replace('c', 'C').replace('d', 'D').replace('e', 'E').replace('f', 'F').replace('g', 'G').replace('h', 'H').replace('i', 'I').replace('j', 'J').replace('k', 'K').replace('l', 'L').replace('m', 'M').replace('n', 'N').replace('o', 'O').replace('p', 'P').replace('q', 'Q').replace('r', 'R').replace('s', 'S').replace('t', 'T').replace('u', 'U').replace('v', 'V').replace('w', 'W').replace('x', 'X').replace('y', 'Y').replace('z', 'Z')\n    return s", "def make_upper_case(st):\n    out = \"\"\n    for s in st:\n        o = ord(s)\n        if 97 <= o <= 122:\n            o -= 32;\n        out += chr(o)\n    return out", "def make_upper_case(s):\n    transform = s.upper()\n    return transform\n    \n    # Code here\n", "def make_upper_case(s):\n    '''Pointless kata'''\n    return s.upper()", "def make_upper_case(s):\n    \"\"\"string to uppercases\"\"\"\n    return \"\".join([char.upper() for char in s])", "def make_upper_case(s):\n    \"\"\"string  to uppercase\"\"\"\n    return \"\".join([char.upper() for char in s])", "def make_upper_case(s):\n    return ''.join(map(lambda s: s.upper(), [_ for _ in s]))", "\ndef make_upper_case(s):\n    str = \"\"\n    for char in s:\n        if char.islower():\n            str = str + char.upper()\n        else:\n            str = str + char\n    return str", "def make_upper_case(s):\n    lst = list(s)\n    string = ''\n    for char in lst:\n      string = string + char.upper()\n    return string\n    \n", "def make_upper_case(s):\n    print (s)\n    return s.upper()", "def make_upper_case(s):\n    # Code here\n    s=list(s)\n    arr=''\n    for i in s:\n        arr+= i.upper()\n    return ('{}'.format(arr))", "def make_upper_case(str):\n return str.upper()\nmake_upper_case(\"hello\") # => \"HELLO\"\nmake_upper_case(\"the secret\") # => THE SECRET\nmake_upper_case(\"hello world\") # => \"HELLO WORLD\"", "def make_upper_case(s):\n    output = ''\n    for i in s:\n        output += i.upper()\n    return output", "def make_upper_case(s):\n    return \"\".join([chr(ord(x) - 32) if ord(x) in range(97, 123) else x for x in s])\n", "def make_upper_case(s):\n    return ''.join(list(map(lambda x: x.upper(), s)))", "def make_upper_case(x):\n    return(x.upper())\n", "def make_upper_case(s):\n    letter = s.upper() \n    return letter \n", "def make_upper_case(s):\n    string1 = s.upper()\n    return string1\nmake_upper_case(\"hello\")\n", "def make_upper_case(s):\n    capital = s.upper()\n    return capital", "def make_upper_case(s):\n    answer = \"\"\n    for char in s:\n        answer += char.upper()\n    return answer", "def make_upper_case(s):\n    return s.upper ()\n    print (s)", "def make_upper_case(s):\n    arr = []\n    for i in s:\n      if i.islower():\n           i = i.upper()\n      arr.append(i)\n    arr = ''.join(arr)\n    return arr\n", "def make_upper_case(s):\n    supper=s.upper()\n    return supper", "def make_upper_case(s):\n    make = s.upper()\n    return make", "def make_upper_case(s):\n    # Code here\n    spongebob = \"\"\n    for i in s:\n        if(str(i).isnumeric() == True):\n            spongebob += i\n        elif(str(i).islower() == True):\n            spongebob += str(i).upper()\n        else:\n            spongebob += i\n    return spongebob", "def make_upper_case(s):\n    p = s.upper()\n    return p", "def make_upper_case(s):\n    # Code here\n    return s.upper()\nprint(make_upper_case('hello sdk 00'))", "def make_upper_case(s):\n    return \"\".join([chr(ord(n) - 32) if ord(n) >= 97 else n for n in s])", "def make_upper_case(s):\n    out = s.upper()\n    return(out)", "def make_upper_case(string_to_capitalize):\n    capitalized_string = string_to_capitalize.upper()\n    return capitalized_string\n    \nprint((make_upper_case(\"hello\")))    \n", "def make_upper_case(stringy):\n    answer = stringy.upper()\n    return answer", "def make_upper_case(s):\n    z = s.upper()\n    return z", "def make_upper_case(s):\n    is_upper = s.upper()\n    return is_upper\n\n\n", "make_upper_case = lambda a : a.upper()\n    # Code here\n", "def make_upper_case(s):\n    print(s.upper())\n    return s.upper()", "def make_upper_case(s):\n    if s != s.upper():\n        s = s.upper()\n    return s\n", "def make_upper_case(s):\n    new_string = \"\"\n    for char in s:\n        char = char.upper()\n        new_string += char\n    return new_string", "def make_upper_case(s): \n  list = s  \n  return list.upper()\n\nprint(make_upper_case(\"bahs\"))", "def make_upper_case(s):\n      st = str(s)\n      return (st.upper())", "def make_upper_case(s):\n  new_string = ''\n  for char in s:\n       new_string += char.upper()\n  return new_string\n       \n  \n", "import string\ndef make_upper_case(s):\n   return s.upper(); # Code here", "def make_upper_case(s):\n    b = s.upper()\n    print(b)\n    return(b)\n    # Code here\n", "def make_upper_case(s):\n    return ''.join([a.capitalize() for a in s])", "def make_upper_case(s):\n    up = s.upper()\n    return up\ns = make_upper_case('hello')   \nprint(s)\n    # Code here\n", "def make_upper_case(s):\n    y = str(s.upper())\n    return y \n", "def make_upper_case(s):\n    '''\n    String -> String\n    produces an upper cased string\n    '''\n    return s.upper()", "def make_upper_case(s):\n    index=0\n    \n    while index < len(s):   \n         s=s.upper()\n         index+=1\n    return(s) \n", "def make_upper_case(s):\n    E=[]\n    for i in range(len(s)):\n        E.append(s[i].upper())\n    return ''.join(E)\n    # Code here\n", "def make_upper_case(s):\n    answer = \"\"\n    for c in s:\n        answer += c.upper()\n    \n    return answer\n", "def make_upper_case(s):\n    # Code here\n    u = s.upper()\n    return (u)\n    \n    \nprint(( make_upper_case('matrix')))\n    \n", "def make_upper_case(string):\n\n    for char in string:\n        if (char.isalpha):\n            return string.upper()\n        else:\n            return char", "def make_upper_case(s):\n    str = \"\"\n    for x in s:\n        str = str + x.upper()\n    return str", "def make_upper_case(s):\n    big  = s.upper()\n    return big", "def make_upper_case(s = 'hello'):\n    s = s.upper()\n    return s", "def make_upper_case(s):\n    str = \"\"\n    for a in s:\n        str += (a.upper())\n    return str", "def make_upper_case(s):\n    s1=s.upper()\n    return s1", "def make_upper_case(s):\n    return s.upper()\n    #      Zelf\n", "def make_upper_case(s):\n    # Code here\n    my_string = \"{}\".format(s)\n    return my_string.upper()\n\n\nprint((make_upper_case(\"hello\")))\n", "def make_upper_case(s):\n    i  = s.upper()\n    return i", "def make_upper_case(s):\n    u=[]\n    u=s.upper()\n    return(u)", "def make_upper_case(s):\n    '''\n    input: s, string\n    output: uppercased version of string s \n            (converts all lowercase characters in s to uppercase)\n    '''\n    return s.upper()", "def make_upper_case(s):\n    #Using upper method of string\n    return(s.upper())", "def make_upper_case(s):\n    word_upper_case = \"\"\n    for c in s:\n        if 97 <= ord(c) <= 122:\n            word_upper_case += chr(ord(c) - 32)\n        else:\n            word_upper_case += c\n    return word_upper_case", "def make_upper_case(s):\n    UpCase=s.upper()\n    return UpCase", "def make_upper_case(s):\n    a = s\n    return a.upper()", "def make_upper_case(S):\n    return S.upper()"]