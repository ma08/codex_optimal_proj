["def score_throws(radiuses):\n    score = 0\n    for r in radiuses:\n        if r < 5:\n            score += 10\n        elif 5 <= r <= 10:\n            score += 5\n    if radiuses and max(radiuses) < 5:\n        score += 100\n    return score", "def score_throws(radiuses):\n    scores = [5 * ((v<5) + (v<=10)) for v in radiuses]\n    return sum(scores) + 100 * (len(set(scores)) == 1 and scores[0] == 10)", "def score_throws(radii):    \n    score = sum(10 if r < 5 else 5 if r <= 10 else 0 for r in radii) \n    return score + 100 if score and len(radii) * 10 == score else score", "def score_throws(radii):\n    return 5*sum((r<=10)+(r<5) for r in radii)+(100 if len(radii) and all(r<5 for r in radii) else 0)", "def score_throws(radii):\n    if not radii: return 0\n    sum=0\n    for i in radii:\n        if i>=5 and i<=10:\n            sum+=5\n        elif i<5:\n            sum+=10\n    return sum+100 if max(radii)<5 else sum", "def score_throws(radii):\n    score = sum(0 if r > 10 else 5 if r >= 5 else 10 for r in radii)\n    return score + 100 * (score and len(radii) * 10 == score)", "def score_throws(radiuses):\n    return sum(\n        10 if r < 5 else 5 if r <= 10 else 0\n        for r in radiuses\n    ) + (bool(radiuses) and all(r < 5 for r in radiuses)) * 100", "def score_throws(r):\n    if not r:\n        return 0\n    if all(i < 5 for i in r):\n        return len(r) * 10 + 100\n    return len([i for i in r if i <= 10 and i >= 5]) * 5 + len([i for i in r if i < 5]) * 10", "def score_throws(radii):\n  score = sum(0 if r > 10 else 5 if r >= 5 else 10 for r in radii)\n  if radii and all(r < 5 for r in radii): score += 100\n  return score", "def score_throws(radii):\n    result = 0\n    all_less_5 = True\n    for r in radii:\n        if r > 10:\n            all_less_5 = False\n        elif r < 5:\n            result += 10\n        else:\n            result += 5\n            all_less_5 = False\n    if radii and all_less_5:\n        result += 100\n    return result"]