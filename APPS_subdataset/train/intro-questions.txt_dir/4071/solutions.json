["def next_happy_year(year):\n    year += 1\n    \n    while len(set(str(year))) != 4:\n        year += 1\n    \n    return year", "def next_happy_year(year):\n    for n in range(year+1, 9999):\n        if len(set(str(n))) == 4:\n            return n", "def next_happy_year(year):\n    while True:\n        year+=1\n        if len(str(year)) == len(set(str(year))):\n            return year", "def next_happy_year(year):\n    return year + 1 if len(set(str(year + 1))) == 4 else next_happy_year(year + 1)\n", "# \ud83d\ude09\ud83d\ude09\n\ndef next_happy_year(year):\n    y = year + 1\n    while len(str(y)) != len(set(str(y))):\n        y += 1\n    return y", "def next_happy_year(year):\n    while True:\n        year+=1\n        if len(set(c for c in str(year))) == len(str(year)):\n            return year", "def next_happy_year(year):\n    return  next(y for y in range(year+1, 9877) if len(set(str(y))) == 4)", "def next_happy_year(year):\n    while True:\n        year += 1\n        if len(str(year)) == len(set(str(year))): break\n    return year # cant believe this works", "import re\n\ndef next_happy_year(year):\n    return year + 1 if re.match(r'(?:([0-9])(?!.*\\1)){4}', str(year + 1)) else next_happy_year(year + 1)"]