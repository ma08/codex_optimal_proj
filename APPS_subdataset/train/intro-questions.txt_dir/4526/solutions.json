["def day_plan(hours, tasks, duration):\n    td, hm, tmo = tasks * duration, hours * 60, tasks - 1\n    if td > hm: return \"You're not sleeping tonight!\"\n    arr = [0] * (tasks + tmo)\n    arr[::2], arr[1::2] = [duration] * tasks, [round((hm - td) / (tmo or 1))] * tmo\n    return arr\n", "def day_plan(hours, tasks, duration):\n    breaks = (hours * 60 - tasks * duration) / (tasks - 1) if tasks > 1 else 0\n    if breaks < 0:\n        return \"You're not sleeping tonight!\"\n    return ([duration, round(breaks)] * tasks)[:-1]", "def day_plan(hours, tasks, duration):\n    mins = hours * 60\n    task_mins = tasks * duration\n    relaxation = (mins - task_mins) / max(1, (tasks - 1))\n    if relaxation < 0:\n        return \"You're not sleeping tonight!\"\n    task_list = ([duration, round(relaxation, 0)] * tasks)[:-1]\n    return task_list", "def day_plan(hours, tasks, duration):\n    if tasks < 2:\n        return [duration] * tasks\n    elif (tasks * duration)/60 > hours:\n        return \"You're not sleeping tonight!\"\n    else:\n        r = round((hours * 60 - tasks * duration) / (tasks - 1))\n        return [duration, r] * (tasks-1) + [duration]\n", "def day_plan(hours, tasks, duration):\n    break_time = hours * 60 - tasks * duration\n    if break_time < 0:\n        return \"You're not sleeping tonight!\"\n    else:\n        schedule = [0] * (2 * tasks - 1)\n        schedule[::2] = [duration] * tasks\n        schedule[1::2] = [round(break_time / (tasks - 1 + 1e-9))] * (tasks - 1)\n        return schedule", "day_plan=lambda h,t,d:t*d>h*60and\"You're not sleeping tonight!\"or([(h*60-t*d)//(t-1+1e-9),d]*t)[1:]", "def day_plan(hours, tasks, duration):\n    if tasks == 0: return []\n    if tasks == 1: return [duration]\n    stop = round((hours*60 - duration*tasks) / (tasks - 1))\n    if stop < 0: return \"You're not sleeping tonight!\"\n    res = [None]*(2*tasks-1)\n    res[::2] = [duration]*tasks\n    res[1::2] = [stop]*(tasks-1)\n    return res", "def day_plan(hours, tasks, duration):\n    #your code here\n    at = tasks * duration\n    tb = (hours*60) - at\n    plan = []\n    if tb < 0:\n        return \"You're not sleeping tonight!\"\n    elif tasks == 0:\n        return plan\n    elif tasks == 1:\n        plan = [duration]\n    else:\n        plan = [duration]\n        bt = round(tb/(tasks-1))\n        for i in range(tasks-1):\n            plan.append(bt)\n            plan.append(duration)\n    return plan\n", "def day_plan(hours, tasks, duration):\n    total_minutes = hours * 60\n    tasks_minutes = tasks * duration\n    \n    if tasks_minutes > total_minutes:\n        return 'You\\'re not sleeping tonight!'\n        \n    brk = round((total_minutes - tasks_minutes) / (tasks - 1)) if tasks > 1 else 0\n    return [brk if i % 2 else duration for i in range(2 * tasks - 1)]", "def day_plan(hours, tasks, duration):\n    minutes=hours*60\n    if tasks*duration>minutes:return \"You're not sleeping tonight!\"\n    elif tasks==1:return [duration]\n    elif tasks==0:return []\n    break_length = round((minutes-tasks*duration)/(tasks-1))\n    return [duration,break_length]*(tasks-1)+[duration]"]