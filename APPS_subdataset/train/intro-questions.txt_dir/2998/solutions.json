["def atomic_number(electrons):\n    result = []\n    i = 1\n    while electrons > 0:\n        result.append(min(2 * (i ** 2), electrons))\n        electrons -= result[-1]\n        i += 1\n    return result", "def atomic_number(electrons):\n    level, shells = 1, []\n    while electrons:\n        shells.append(min(2 * level * level, electrons))\n        electrons, level = electrons - shells[-1], level + 1\n    return shells", "from numpy import roots\n\ndef atomic_number(electrons):\n    root = roots((2, 3, 1, -3*electrons))[2].real\n    full = int(root)\n    result = [2*n*n for n in range(1, full+1)]\n    if root%1: result.append(electrons - full*(full+1)*(2*full+1)//3)\n    return result", "def atomic_number(electrons):\n    result = []\n    for i in range(1, 100):\n        n = 2 * i * i\n        result.append(min(electrons, n))\n        electrons -= n\n        if electrons <= 0:\n            break\n    return result", "def atomic_number(electrons):\n    result=[]\n    shield=1\n    maxnum=2\n    if electrons==1:\n        return [1]\n    while electrons>maxnum:\n        result.append(maxnum)\n        electrons-=maxnum\n        shield+=1\n        maxnum = shield ** 2 * 2\n    result.append(electrons)\n    return result\n", "def atomic_number(electrons):\n    res = []\n    i = 1\n    while True:\n        m = 2 * i ** 2\n        if electrons > m:\n            res.append(m)\n            electrons -= m\n            i += 1\n        else:\n            res.append(electrons)\n            break\n    return res", "def atomic_number(e, d=[], l=1):\n    return d if e <= 0 else atomic_number(e-2*l**2, d + [min(e, 2*l**2)], l+1)", "def atomic_number(e):\n    l, shells = 1, []\n    while e:\n        n = min(2 * l * l, e)\n        shells.append(n)\n        e, l = e - n, l + 1\n    return shells", "def atomic_number(n):    \n    L = []\n    i = 1\n    while n > 0:\n        a = min(2*i**2, n)\n        L.append(a)\n        n -= a\n        i += 1\n    return L", "def atomic_number(electrons):\n    n = 1\n    sa = []\n    while electrons > 0:\n        s = min(electrons, n ** 2 * 2)\n        electrons -= s\n        sa.append(s)\n        n += 1\n    return sa\n"]