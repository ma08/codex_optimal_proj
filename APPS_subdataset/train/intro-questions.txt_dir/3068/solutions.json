["def vowel_back(st):\n    return st.translate(str.maketrans(\"abcdefghijklmnopqrstuvwxyz\", \"vkbaafpqistuvwnyzabtpvfghi\"))", "def vowel_back(s):\n    return s.translate(str.maketrans(\"abcdeghjklmnopqrsuwxyz\", \"vkbaapqstuvwnyzabpfghi\"))", "from string import ascii_lowercase as abc\n\ndef vowel_back(st): return st.translate(str.maketrans(abc,\"vkbaafpqistuvwnyzabtpvfghi\"))\n", "def vowel_back(st):\n    print(st)\n    changes = {'a':'v', 'b':'k', 'c':'b', 'd':'a','e':'a','f':'f','g':'p','h':'q','i':'i','j':'s','k':'t','l':'u','m':'v','n':'w','o':'n','p':'y','q':'z','r':'a','s':'b','t':'t','u':'p','v':'v','w':'f','x':'g','y':'h','z':'i'}\n    return ''.join(changes[c] for c in st)", "from collections import ChainMap\nfrom string import ascii_lowercase as al\n\nmove = ChainMap(\n    dict(c=-1, o=-1, d=-3, e=-4),  # Exceptions\n    dict.fromkeys('aeiou', -5),    # Vowels\n    dict.fromkeys(al, 9),          # All alphabets\n)\nnew = (al[(i + move[c]) % 26] for i, c in enumerate(al))\nmapping = {c: c if c2 in 'code' else c2 for c, c2 in zip(al, new)}\n\ndef vowel_back(st):\n    return ''.join(map(mapping.get, st))", "from string import ascii_lowercase as aLow\n\ndef shifterAndSrc(c): return chr( (ord(c)+SHIFT.get(c,DEFAULT)-97) % 26 + 97 ), c\n\nSHIFT           = {'a':-5, 'e':-4, 'i':-5, 'o':-1, 'u':-5, 'c':-1, 'd':-3}\nDEFAULT, REVERT = 9, 'code'\nTABLE           = str.maketrans(aLow, ''.join(c if c not in REVERT else o for c,o in map(shifterAndSrc,aLow)) )\n\ndef vowel_back(s): return s.translate(TABLE)", "vowel_back=lambda s:''.join(e[e[0]in'code']for e in[(chr(ord(x)-max(1,'co de'.index(x))if x in'code'else 97+(ord(x)-97-5if x in'aiu'else ord(x)-97+9)%26),x)for x in s])", "def vowel_back(st):\n    s = ''\n    for x in st:\n        res = chr(ord('a')+(ord(x)-ord('a')+((9,-1,-3)[(x == 'c')+(x == 'd')*2],-(5,1,4)[(x == 'o')+(x=='e')*2])[x in 'aoiue'])%26)\n        if res in 'code':\n            res = x\n        s += res\n    return s", "trans = str.maketrans(\"abcdeghjklmnopqrsuwxyz\", \"vkbaapqstuvwnyzabpfghi\")\n\ndef vowel_back(st):\n    return st.translate(trans)", "from string import ascii_lowercase as alpha\n\nalpha = list(alpha)\nln = len(alpha)\nvowels = \"aeiou\"\ndef vowel_back(s):\n        s = list(s)\n        for idx, char in enumerate(s):\n                index = alpha.index(char)\n                if char in ('c', 'o'):\n                        s[idx] = alpha[index - 1]\n                elif char == 'd':\n                        s[idx] = alpha[index - 3]\n                elif char == 'e':\n                        s[idx] = alpha[index - 4]\n                else:\n                        if char in vowels:\n                                s[idx] = alpha[index - 5]\n                        else:\n                                index += 9\n                                index = index%ln\n                                s[idx] = alpha[index]\n                if s[idx] in ('c', 'o', 'd', 'e'):\n                        s[idx] = char\n        return \"\".join(s)\n"]