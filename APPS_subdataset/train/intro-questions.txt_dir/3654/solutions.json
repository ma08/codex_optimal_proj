["def divisible_count(x,y,k):\n    return y//k - (x-1)//k", "def divisible_count(x,y,k):\n    upper = y//k\n    lower = (x-1)//k\n    return upper - lower", "divisible_count=lambda x,y,k:y//k-~-x//k", "def divisible_count(x,y,k):\n    ans = 0\n    \n    while True:\n        if x % k == 0:\n            break\n        else:\n            x += 1\n    \n    while True:\n        if y % k == 0:\n            break\n        else:\n            y -= 1\n    \n    ans = ((y-x) // k) + 1\n         \n    return ans", "def divisible_count(x,y,k):\n    mod = x % k\n    if mod != 0:\n        x += (k - mod)\n    y -= y % k\n    if x > y:\n        return 0\n    return (y - x) // k + 1", "from fractions import Fraction\n\ndef divisible_count(x,y,k):\n    x += k - (x % k or k)\n    return int(Fraction(y - x + k, k))", "def divisible_count(x,y,k):\n    d = x % k;\n    if x >= 0:\n        return (d == 0) + (y - x + d) // k", "def divisible_count(x,y,k):\n    return (y//k) - (x//k) + bool(x % k == 0)", "def divisible_count(x,y,k):\n    result = 0\n    for i in range(x, y+1):\n        if i%k == 0:\n            result += 1\n            break\n    result += (y-i)//k\n    return result \n"]