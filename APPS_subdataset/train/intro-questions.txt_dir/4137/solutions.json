["import math\ndef is_square(n):\n    return n > -1 and math.sqrt(n) % 1 == 0;", "import math\n\ndef is_square(n):    \n\n    if n < 0:\n        return False\n\n    sqrt = math.sqrt(n)\n    \n    return sqrt.is_integer()", "def is_square(n):    \n    return n >= 0 and (n**0.5) % 1 == 0", "import math\ndef is_square(n):    \n    try:\n        return math.sqrt(n).is_integer()\n    except ValueError:\n        return False", "def is_square(n):    \n    if n>=0:\n        if int(n**.5)**2 == n:\n            return True\n    return False", "import math\ndef is_square(n):\n  return n >= 0 and int(math.sqrt(n)) ** 2 == n", "from math import sqrt\n\ndef is_square(n):    \n    return n>=0 and sqrt(n).is_integer()", "from math import sqrt\ndef is_square(n):  \n    if n<0:\n        return False\n    count=0\n    m=int(sqrt(n))\n    if m*m==n:\n        count=1\n    if count==1:\n        return True\n    else :\n        return False", "import math\n\ndef is_square(n):\n    if n < 0:\n        return False\n    r = math.sqrt(n)\n    r = math.floor(r)\n    return r * r == n", "import math\n\ndef is_square(n):\n    if n < 0:\n        return False\n    return (int(math.sqrt(n)) - math.sqrt(n)) == 0"]