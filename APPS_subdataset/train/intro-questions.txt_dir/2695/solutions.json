["def pair_of_shoes(a):\n    return sorted(s for lr, s in a if lr == 1) == sorted(s for lr, s in a if lr == 0)", "from collections import defaultdict\ndef pair_of_shoes(shoes):\n    sz = defaultdict(list)\n    for i in shoes:\n        sz[i[1]].append(i[0])\n    return all( (i[1].count(1) == i[1].count(0)) for i in sz.items())", "from collections import defaultdict\n\n\ndef pair_of_shoes(shoes):\n    shoe_counts = defaultdict(int)\n    for shoe_type, shoe_size in shoes:\n        shoe_counts[shoe_size] += 1 if shoe_type else -1\n    return all(a == 0 for a in shoe_counts.values())\n", "from collections import defaultdict\n\ndef pair_of_shoes(shoes):\n    D = defaultdict(lambda:defaultdict(int))\n    for type, size in shoes: D[size][type] += 1\n    return all(v[0] == v[1] for v in D.values())", "pair_of_shoes=lambda s:all([s.count([i[0]^1,i[1]])==s.count(i)for i in s])", "def pair_of_shoes(shoes):\n    return not sum((size * (-1)**side) for side, size in shoes)", "from collections import Counter\n\ndef pair_of_shoes(shoes):\n    c = Counter()\n    for lr, size in shoes:\n        c[size] += 1 if lr else -1\n    return not any(c.values())", "def pair_of_shoes(shoes):\n    l = [i for i, j in shoes]\n    m = [j for i, j in shoes]\n    return sum(m.count(i) % 2 == 0 for i in set(m)) == len(set(m)) and l.count(0) == l.count(1)\n", "from collections import Counter\n\ndef pair_of_shoes(shoes):\n    def count_of_type(type_):\n        return Counter(n for t, n in shoes if t == type_)\n    return count_of_type(0) == count_of_type(1)", "S,pair_of_shoes=lambda a,T:sorted(s for t,s in a if t-T),lambda a:S(a,0)==S(a,1)"]