["def to_pretty(s):\n    if not s: return \"just now\"\n    for t, w in (60, \"seconds\"), (60, \"minutes\"), (24, \"hours\"), (7, \"days\"), (53, \"weeks\"):\n        s, r = divmod(s, t)\n        if not s: return (r > 1 and str(r) + \" \" + w or (\"a \", \"an \")[t == 24] + w[:-1]) + \" ago\"", "def to_pretty(seconds):\n\n\n    minutes = seconds // 60\n    hours = seconds // 3600\n    days = seconds // (3600*24)\n    weeks = seconds // (3600*24*7)\n    \n    if weeks == 1:\n        return \"a week ago\"\n    if weeks > 1:\n        return str(weeks) + \" weeks ago\"\n    if days == 1:\n        return \"a day ago\"\n    if days > 1:\n        return str(days) + \" days ago\"\n    if hours == 1:\n        return \"an hour ago\"\n    if hours > 1:\n        return str(hours) + \" hours ago\"\n    if minutes == 1:\n        return \"a minute ago\"\n    if minutes > 1:\n        return str(minutes) + \" minutes ago\"\n    if seconds == 0:\n        return \"just now\"\n    if seconds == 1:\n        return \"a second ago\"\n    if seconds > 1:\n        return str(seconds) + \" seconds ago\"\n    \n\n    \n\n    \n", "CONFIG = [\n    ('',\"week\",3600*24*7),\n    ('',\"day\",3600*24),\n    ('n',\"hour\",3600),\n    ('',\"minute\",60),\n    ('',\"second\",1)\n]\n\ndef to_pretty(s):\n    return next((out(one,t,s//n) for one,t,n in CONFIG if s//n), \"just now\")\n\ndef out(one,t,n):\n    return f'{n==1 and \"a\"+one or n} {t}{n>1 and \"s\" or \"\"} ago'", "def to_pretty(seconds):\n    if seconds == 0:\n        return 'just now'\n    fmt = '{} {}{} ago'.format\n    human = ((604800, 'week'), (86400, 'day'), (3600, 'hour'),\n             (60, 'minute'), (1, 'second'))\n    for num, word in human:\n        quo, rem = divmod(seconds, num)\n        if quo == 1:  # singular\n            return fmt('an' if num == 3600 else 'a', word, '')\n        elif quo > 0:\n            return fmt(quo, word, 's')\n", "reprs = {\n    60*60*24*7: \"week\",\n    60*60*24:   \"day\",\n    60*60:      \"hour\",\n    60:         \"minute\",\n    1:          \"second\",\n}\n\ndef to_pretty(seconds):\n    for k, v in sorted(reprs.items(), key=lambda x: x[0], reverse=True):\n        if seconds >= k:\n            res = seconds // k\n            if res == 1:\n                time = \"a\"\n                if v[int(v[0] == \"h\")] in \"aeiou\":\n                    time += \"n\"\n            else:\n                time = str(int(res))\n            if res == 1:\n                mult = v\n            else:\n                mult = v + \"s\"\n            return \"{} {} ago\".format(time, mult)\n    return \"just now\"", "def to_pretty(seconds):\n    w, d, h, m, s = seconds // 604800, seconds % 604800 // 86400, seconds % 604800 % 86400 // 3600, seconds % 604800 % 86400 % 3600 // 60, seconds % 604800 % 86400 % 3600 % 60\n    return ('just now' if not seconds else\n            [f'a week ago', f'{w} weeks ago'][w > 1]     if w > 0 else\n            [f'a day ago', f'{d} days ago'][d > 1]       if d > 0 else\n            [f'an hour ago', f'{h} hours ago'][h > 1]    if h > 0 else\n            [f'a minute ago', f'{m} minutes ago'][m > 1] if m > 0 else\n            [f'a second ago', f'{s} seconds ago'][s > 1])", "def to_pretty(seconds):\n    if seconds == 0:\n        return 'just now'\n    elif seconds//(7 * 24 * 60 * 60):\n        weeks = seconds//(7 * 24 * 60 * 60)\n        extra = '' if weeks == 1 else 's'\n        weeks = 'a' if weeks == 1 else weeks\n        return '{} week{} ago'.format(weeks, extra)\n    elif seconds//(24 * 60 * 60):\n        days = seconds//(24 * 60 * 60)\n        extra = '' if days == 1 else 's'\n        days = 'a' if days == 1 else days\n        return '{} day{} ago'.format(days, extra)\n    elif seconds//(60 * 60):\n        hours = seconds//(60 * 60)\n        extra = '' if hours == 1 else 's'\n        hours = 'an' if hours == 1 else hours\n        return '{} hour{} ago'.format(hours, extra)\n    elif seconds//(60):\n        minutes = seconds//60\n        extra = '' if minutes == 1 else 's'\n        minutes = 'a' if minutes == 1 else minutes\n        return '{} minute{} ago'.format(minutes, extra)\n    else:\n        extra = '' if seconds == 1 else 's'\n        seconds = 'a' if seconds == 1 else seconds\n        return '{} second{} ago'.format(seconds, extra)"]