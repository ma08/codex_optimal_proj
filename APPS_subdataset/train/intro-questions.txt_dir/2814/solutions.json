["def is_triangular(t):\n    x = int((t*2)**0.5)\n    return t == x*(x+1)/2", "def is_triangular(t):\n    return (8 * t + 1)**.5 % 1 == 0\n", "def is_triangular(t):\n    return (8 * t + 1) ** 0.5 % 1 == 0", "def is_triangular(n):\n    a = int((n * 2)**0.5)\n    return n * 2 == a * (a + 1)\n", "TRIANGULAR = { x*(x+1)/2 for x in range(10000) }\n\nis_triangular = TRIANGULAR.__contains__\n", "def is_triangular(t):\n    return not (8 * t + 1)**.5 % 1", "def is_triangular(n):\n    return ((-1 + (1 + 8 * n)**.5) / 2) % 1 == 0\n", "from math import sqrt\ndef is_triangular(t):\n    n = (sqrt(8 * t + 1)-1)/2\n    return False if n - int(n) > 0 else True", "def is_triangular(t):\n    return (-1 + (1 + 8 * t) ** 0.5)/2. == int((-1 + (1 + 8 * t) ** 0.5)/2.)\n", "def is_triangular(t): return not (((1+8*t)**.5-1)/2%1)"]