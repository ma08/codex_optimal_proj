["def seven_ate9(str_):\n   while str_.find('797') != -1:\n       str_ = str_.replace('797','77')\n   return str_", "import re\n\ndef seven_ate9(str_):\n    return re.sub(r'79(?=7)', r'7', str_)", "def seven_ate9(str_):\n    while \"797\" in str_:\n        str_ = str_.replace(\"797\", \"77\")\n    return str_", "def seven_ate9(str_):\n    if '797' not in str_:\n        return str_\n    else:\n        return seven_ate9(str_.replace('797', '77'))\n", "import re\n\ndef seven_ate9(str_):\n    return re.sub(r\"(?<=7)9(?=7)\", \"\", str_)", "def seven_ate9(str_):\n    return str_.replace('797','77').replace('797', '77')", "def seven_ate9(str_):\n    previous, current = str_, str_.replace(\"797\", \"77\")\n    while previous != current: previous, current = current, current.replace(\"797\", \"77\")\n    return current", "def seven_ate9(s):\n    return ''.join('' if x == '9' and s[y-1:y+2] == '797' else x for y,x in enumerate(s))", "def seven_ate9(str):\n    while str.find('797') > -1: str = str.replace('797', '77')\n    return str", "def seven_ate9(s):\n  return ''.join(s[i] for i in range(len(s)) if s[i-1:i+2] != '797')", "import re\n\ndef seven_ate9(s):\n    return re.sub(r'(?<=7)9(?=7)', '', s)", "def seven_ate9(str_):\n    while str_.replace('797','77') != str_:\n        str_ = str_.replace('797','77')\n    return str_", "import re\n\ndef seven_ate9(str_):\n    return re.sub(r'79(?=7)', '7', str_)", "def seven_ate9(str_):\n    if '797' in str_:\n        return seven_ate9(str_.replace('797', '77'))\n    else:\n        return str_", "seven_ate9 = lambda s:''.join(x for i, x in enumerate(s) if s[i-1:i+2] != \"797\")", "seven_ate9 = lambda str_ : str_.replace('797', 'Q').replace('Q', '77').replace('797', 'Q').replace('Q', '77')\n    \n\n", "# For learning purposes. From slowest to fastest.\n#\n# s9n = avg(sorted(timeit.Timer(\"seven_ate90('6797974797977979797979797979797979733262',)\", this_file).repeat(10, 1000)))\n# Averages:\n# s90 = 0.00537808943730594922\n# s91 = 0.00240899947496580821\n\nimport re\n\nREGEXP = re.compile(r'79(?=7)')\n\ndef seven_ate9(str_):\n    return REGEXP.sub('7', str_)\n\ndef seven_ate9(str_):\n    while '797' in str_:\n        str_ = str_.replace('797', '77')\n    return str_", "def seven_ate9(str_):\n    if \"797\" not in str_:\n        return str_\n    return seven_ate9(str_.replace('797', '77'))", "import re\n\ndef seven_ate9(str_):\n    return re.sub('(?<=7)9(?=7)','',str_)", "import re\ndef seven_ate9(str_):\n    if '797' not in str_:\n        return str_\n    return seven_ate9(re.sub('7(9)7', '77', str_))", "def seven_ate9(string):\n    index = 0\n    result = ''\n    while index < len(string):\n        if string[index] == '9':\n            if (index + 1) != len(string):\n                if string[index-1] == '7' and string[index+1] == '7':\n                    result += ''\n                else:\n                    result += string[index]\n            else:\n                result += string[index]\n        else:\n            result += string[index]\n        index += 1\n    \n    return result", "def seven_ate9(str_):\n    str_ = list(str_)\n    for i in range(len(str_)-1):\n        if str_[i] == '9':\n            if str_[i-1] == str_[i+1] == '7':\n                str_[i] = ''\n    return ''.join(str_)", "def seven_ate9(input):\n    while \"797\" in input:\n        position = input.find(\"797\")\n        input = input[0:position] + \"77\" + input[position+3:]\n    return input", "def seven_ate9(str_):\n    lst=[]\n    x=0\n    while len(str_) > x:\n        if str_[x] == \"9\" and len(str_) > x+1:\n            if str_[(x-1)] == \"7\" and str_[(x+1)] == \"7\":\n                x=x+1\n            else:\n                lst.append(str_[x])\n                x=x+1\n        else:\n            lst.append(str_[x])\n            x=x+1\n    return str(\"\".join(lst))", "def seven_ate9(s):\n    return s[0] + \"\".join(\n        [s[i] for i in range(1, len(s) - 1) if not (s[i - 1] == '7' and s[i] == '9' and s[i + 1] == '7')]) + s[-1]", "def seven_ate9(str):\n    new=[]\n    for i,v in enumerate(str):\n        if i==len(str)-1:\n            new.append(v)\n        \n        elif v=='9' and str[i-1]=='7'and str[i+1]=='7':\n            pass\n        \n        else:\n            new.append(v)\n    return ''.join(new)\n", "def seven_ate9(str_):\n    for i in range(3):\n        str_= str_.replace(\"797\",\"77\")\n    return str_", "def seven_ate9(str_):\n    s = str_.replace('797','77')\n    return seven_ate9(s) if s != str_ else str_", "def seven_ate9(str_):\n    x = str_.replace('797','77')\n    while str_ != x:\n        str_ = x\n        x = str_.replace('797','77')\n    return str_", "def seven_ate9(string):\n    answ = []\n    for i, item in enumerate(string):\n        if i == 0 or i == len(string)-1:\n            answ.append(item)\n        elif item == '9':\n            if string[i-1] == '7' and string[i+1] == '7':\n                continue\n            else:\n                answ.append(item)\n        else:\n            answ.append(item)\n    return ''.join(answ)", "from re import sub\n\ndef seven_ate9(str):\n    return sub(r'79(?=7)', '7', str)", "import re\ndef seven_ate9(str_):\n    while(str_ != re.sub(r'79+7',r'77',str_)):\n        str_=re.sub(r'797',r'77',str_)\n    return str_", "def seven_ate9(str):\n    str =str.replace(\"797\",\"77\")\n    return str.replace(\"797\",\"77\")", "def seven_ate9(str_):\n    vals = list(str_)\n    deletes = []\n    \n    for idx, val in enumerate(vals[1:-1], 1):\n        if val == '9' \\\n        and vals[idx - 1] == '7' \\\n        and vals[idx + 1] == '7':\n            deletes.append(idx)\n            \n    for value in reversed(deletes):\n        del vals[value]\n            \n    return ''.join(vals)", "def seven_ate9(str_):\n    res = list(str_)\n    for i in range(len(str_)):\n        if str_[i:i+3] == '797':\n            res[i+1] = ''\n    return \"\".join(res)\n", "def seven_ate9(x):\n    i=0\n    new_list=''\n    while i < len(x):\n        n_slice= x[i:i+3]\n        if n_slice =='797':\n            new_list = new_list + '7'\n            i+=2\n        else:\n            new_list = new_list + x[i]\n            i+=1\n    return new_list", "def seven_ate9(s):\n    s = s.replace('797', '77')\n    if '797' in s:\n        return seven_ate9(s)\n    return s", "def seven_ate9(original_string):\n    new_string=''\n    i= 0\n    while i < len(original_string):\n        current_character= original_string[i]\n        current_slice= original_string[i:i+3]\n        if current_slice == \"797\":\n            new_string = new_string + \"7\"\n            i += 2 \n        else:\n            new_string = new_string + current_character\n            i += 1\n    return new_string \n        \n         \n            \n    \n", "def seven_ate9(original_string):\n    new_string=''\n    i= 0\n    while i < len(original_string):\n        current_character= original_string[i]\n        current_slice= original_string[i:i+3]\n        #print (i, current_character, current_slice)\n        if current_slice == \"797\":\n            new_string = new_string + \"7\"\n            i += 2 \n        else:\n            new_string = new_string + current_character\n            i += 1\n    return new_string \n        \n         \n            \n    \n", "def seven_ate9(str):\n    while str != str.replace('797', '77'):\n        str = str.replace('797', '77')\n    return str", "def seven_ate9(str_):\n    ls = [x for x in str_]\n    counter = 1\n    while counter < len(ls) -1:\n        if ls[counter] =='9' and ls[counter -1] == '7' and ls[counter + 1] == '7':\n            ls.pop(counter)\n        counter += 1\n    return ''.join(ls)\n\n", "def seven_ate9(str_):\n    res = list(str_)\n    for i in range(len(str_)-2, 0, -1):\n        if res[i] == '9' and res[i+1] == res[i-1] == '7':\n            res.pop(i)\n    return ''.join(res)", "def seven_ate9(str_):\n    lst = list(str_)\n    cursor = 1\n    while cursor < len(lst) - 1:\n        if lst[cursor] == '9' and lst[cursor-1] == '7' and lst[cursor+1] == '7':\n            lst[cursor] = None\n        cursor += 1\n    return \"\".join([item for item in lst if item])\n", "def seven_ate9(str_):\n    s_pattern = \"797\"\n    r_pattern = \"77\"\n    while s_pattern in str_:\n        str_ = str_.replace(s_pattern, r_pattern)\n    return str_", "def seven_ate9(s):\n    return ''.join(['' if s[i-1:i+2] == '797' else s[i] for i in range(len(s))])", "# shittiest solution ever\ndef seven_ate9(txt):\n    count = 0\n    txt = list(txt)\n    removeable = []\n    for i in range(len(txt)):\n        try:\n            if txt[i-1] == \"7\":\n                if txt[i] == \"9\":\n                    if txt[i+1] == \"7\":\n                        txt[i-1], txt[i], txt[i+1] = \"7\", \"\", \"7\"\n        except IndexError:\n            continue\n    for i in txt:\n        if i in removeable:\n            txt.remove(txt[i])\n\n    return \"\".join(txt)", "def seven_ate9(s):\n    s2 = s[0];\n    for i, v in enumerate(s[1:],1):\n        try:\n            if s[i-1] == s[i+1] == \"7\" and v == \"9\":\n                continue\n            else:\n                s2 += v            \n        except:\n            break\n    \n    return s2+s[-1]", "def seven_ate9(str_):\n    str_list = list(str_)\n    new_list = []\n    new_list.append(str_list[0])\n    for i in range(1,len(str_list)-1):\n        if str_list[i] == \"9\":\n            if str_list[i+1] == \"7\" and str_list[i-1] == \"7\":\n                continue\n            else:\n                new_list.append(str_list[i])\n        if str_list[i] != \"9\":\n            new_list.append(str_list[i])\n    \n    new_list.append(str_list[-1])\n    return \"\".join(new_list)\n    \n        \n    \n        \n        \n", "def seven_ate9(str_):\n    print(str_)\n    s = str_.replace('797', '77')\n    return s.replace('797', '77')", "def seven_ate9(str_):\n    s = str_\n    while '797' in s:\n        s= s.replace('797', '77')\n        \n    return s", "def seven_ate9(str_):\n    str1_ = \"\"\n    while str_ != str1_:\n        str1_ = str_\n        str_ = str1_.replace('797', '77', 1)\n    return str_", "def seven_ate9(s):\n    result = \"\"\n    for i, c in enumerate(s):\n        if s[i-1:i+2] != \"797\":\n            result += c\n    return result", "def seven_ate9(str_):\n    x=str_.replace('797','77')\n    x=x.replace('797','77')\n    return x\n    \n", "def seven_ate9(str_):\n    for x in range(len(str_)):\n        str_ = str_.replace(\"797\",\"77\")\n    return str_", "def seven_ate9(str_):\n    replace_str = str_.replace('797', '77')\n    return replace_str.replace('797', '77')\n", "def seven_ate9(s):\n    while s.count('797') != 0:\n        s = s.replace(\"797\", \"77\")\n    return s\n", "def seven_ate9(s):\n    res = ''\n    i = 0\n    while i < len(s):\n        res += s[i]\n        i += 1 + ((i + 2) < len(s) and s[i:i+3] == \"797\")\n    return res", "def seven_ate9(str_):\n    output = str_[0]\n    for i in range(1,len(str_)-1):\n        if not (str_[i-1] == \"7\" and str_[i] == \"9\" and str_[i+1] == \"7\"):\n            output += str_[i]\n    return output + str_[-1]", "def seven_ate9(str_):\n    if '797' not in str_:\n        return str_\n    else:\n        str_ = str_.replace('797', '77')\n        return seven_ate9(str_)\n", "def seven_ate9(str_):\n    fag = str_.replace('797', '77')\n    fuck = fag.replace('797', '77')\n    return fuck", "def seven_ate9(str_):\n    i = 0\n    length = len(str_)\n    \n    while i < length - 1:\n        if str_[i] == '9' and str_[i - 1] == '7' and str_[i + 1] == '7':\n            str_ = str_[:i] + str_[i + 1:]\n            length -= 1\n        i += 1\n    return str_", "from re import compile\n\nr = compile(r\"79(?=7)\")\n\n\ndef seven_ate9(s: str) -> str:\n    return r.sub(\"7\", s)\n", "def seven_ate9(str_):\n    while True:\n        if '797' in str_:\n            str_ = str_.replace('797', '77', 1)\n        else:\n            return str_\n  \n", "seven_ate9 = lambda s: s[0] + ''.join(s[i+1] for i in range(len(s)-2) if s[i+1] != '9' or s[i] + s[i+2] != '77') + s[-1]", "def seven_ate9(str):    \n    for i in range(str.count('9')):\n        str = str.replace('797','77')\n        \n    return str", "import re\n\ndef seven_ate9(number):\n    number = re.sub(r\"797\", \"77\", number)\n    return re.sub(r\"797\", \"77\", number)\n", "import re\ndef seven_ate9(str_):\n    replacedString = \"\"\n    while True:\n        replacedString = re.sub(\"797\", \"77\", str_)\n        if replacedString == str_:\n            return replacedString\n        str_ = replacedString", "def seven_ate9(str_):\n\n    counter = 0\n    \n    while counter <= str_.count('797'):\n        str_ = str_.replace('797','77') \n        counter+=1\n    return str_", "def seven_ate9(str_):\n    res = ''\n    for i,x in enumerate(str_):\n        if x!='9' or i==0 or i==len(str_)-1:\n            res+=f'{x}'\n        else:\n            if str_[i-1]!='7' or str_[i+1]!='7':\n                res+=f'{x}'\n    return res\n", "import re\ndef seven_ate9(s):\n    s = re.sub(r'797','77',s)\n    return re.sub(r'797','77',s)", "def seven_ate9(s):\n    while s.find('797') != -1:\n        s = s.replace('797', '77')\n    return s", "def seven_ate9(str_):\n    txt = ''\n    print(str_)\n    for index, letter in enumerate(str_):\n        if index == 0 or index+1 == len(str_):\n            txt += letter\n            continue\n        elif str_[index-1] == '7' and str_[index+1] == '7' and letter is '9':\n            continue\n        txt += letter\n    return txt", "import re\n\ndef seven_ate9(num):\n    return re.sub(\"(?<=7)(9)(?=7)\", \"\", num)", "def seven_ate9(string):\n    array = [s for s in string]\n    for i in range(len(array)-2):\n        if array[i] == '7' and array[i+1] == '9' and array[i+2] == '7':\n            array[i+1] = None\n\n    array = [x for x in array if x]\n    return \"\".join(array)", "def seven_ate9(str_):\n    new_strng = ''\n    for i, e in enumerate(str_[:-1]):\n        try:        \n            if e != '9':\n                new_strng += e\n            elif i == 0:\n                new_strng += e\n            elif str_[i-1] != '7' or str_[i+1] != '7':\n                new_strng += e\n        except IndexError:\n            continue\n    new_strng += str_[-1]\n    return new_strng", "def seven_ate9(s):\n    if '797' in s:\n        return seven_ate9(s.replace('797', '77'))\n    return s", "import re\n\ndef seven_ate9(str):\n    return re.sub('79(?=7)', '7', str)", "def seven_ate9(sInput):\n    lst = list(sInput)\n    res=''\n    for i in range(len(lst)-1):\n        if not( i and lst[i] == '9' and lst[i-1]=='7' and lst[i+1]=='7'):\n            res += lst[i]\n            \n    res += lst[len(lst)-1]            \n    return res\n", "def seven_ate9(str_):\n    result=str_[0]\n    \n    for i in range(1,len(str_)-1):\n        if not (str_[i-1]==\"7\" and str_[i]==\"9\" and str_[i+1]==\"7\"):\n            result+=str_[i]\n    \n    result+=str_[-1]\n    \n    return result", "def seven_ate9(str_):\n    removals = [] \n    for i in range(len(str_) - 2):\n        if str_[i] == \"7\" and str_[i+1] == \"9\" and str_[i+2] == \"7\":\n            removals.append(i+1)\n    str_ = list(str_)\n    for index in sorted(removals, reverse=True):\n        del str_[index]\n    return \"\".join(str_)", "def seven_ate9(str_):\n# Traditional Method\n#     res = \"\"\n#     for i in range(len(str_)-1):\n#         if str_[i] == \"9\" and str_[i-1] == \"7\" and str_[i+1] == \"7\":\n#             continue\n#         else:\n#             res += str_[i]\n#     return res + str_[-1]\n#\n# One-Liner Method\n    return ''.join('' if str_[i] == \"9\" and str_[i-1] == \"7\" and str_[i+1] == \"7\" else str_[i] for i in range(len(str_)-1)) + str_[-1]", "import re\ndef seven_ate9(str_):\n    \n    pattern = r\"(?<=7)9(?=7)\"\n    \n    return re.sub(pattern, \"\", str_)", "def seven_ate9(s):\n    res = s[0]\n    for i, c in enumerate(s[1:-1]):\n        if c == \"9\" and s[i] == \"7\" and s[i+2] == \"7\":\n            pass\n        else:\n            res+=c\n    res+=s[-1]\n    return res", "def seven_ate9(str_):\n    for a in range(5):\n        str_ = str_.replace(\"797\",\"77\")\n    return str_", "def seven_ate9(str_):   \n    while '797' in str_:\n        i9 = str_.find('797')\n        str_ = str_[:i9+1] + str_[i9+2:]\n    return str_\n    \n    \n", "def seven_ate9( str_ ):\n    return str_[ 0 ] + \"\".join( [ c for i, c in enumerate( str_[ 1:-1 ], 1 ) if not ((c == \"9\") and (str_[ i - 1 ] == str_[ i + 1 ] == \"7\")) ] ) + str_[ -1 ]\n", "def seven_ate9(str_in):\n    if len(str_in) < 3:\n        return str_in\n    str_out = str_in[0]\n    for i, c in enumerate(str_in[1:-1], 1):\n        if c == '9':\n            if str_in[i - 1] == '7' and str_in[i + 1] == '7':\n                continue\n        str_out += c\n    return str_out + str_in[-1]", "def seven_ate9(str_):\n    ans = str_[0]\n    for i in range(1, len(str_)-1):\n        if str_[i] == '9' and str_[i-1] == '7' and str_[i+1] == '7':\n            continue\n        ans += str_[i]\n    return ans + str_[-1]", "def seven_ate9(s):\n    return \"\".join(s[i] for i in range(0, len(s)) if s[i-1:i+2] != '797')", "def seven_ate9(str_):\n    return \"\".join(k for i, k in enumerate(str_) if str_[i - 1 : i + 2] != \"797\")", "seven_ate9 = s9 = lambda s: s9(s.replace('797','77')) if s.count('797') else s", "import re;\nrx = re.compile(r'(?<=7)9(?=7)')\n\ndef seven_ate9(str_):\n    return rx.sub('', str_)", "def seven_ate9(s):\n    s=s.replace('797','77').replace('797','77')\n    return s", "def seven_ate9(str_):\n    res=str_[0]\n    for i in range(1,len(str_)-1):\n        if str_[i-1]=='7' and str_[i+1]=='7' and str_[i]=='9':\n            continue\n        else:\n            res+=str_[i]\n    return res + str_[-1]", "def seven_ate9(x):\n    x=x.replace(\"797\",\"77\")\n    x=x.replace(\"797\",\"77\")\n    return(x)", "import re\ndef seven_ate9(str_):\n     str_ = re.sub(r'797', '77', str_)\n     return re.sub(r'797', '77', str_)\n", "import re\ndef seven_ate9(str_):\n    while \"797\" in str_:\n        str_= str_.replace(\"797\", \"77\")\n    return str_", "import re\ndef seven_ate9(str_):\n    return re.sub(\"(7)9(?=7)\",r\"\\1\",str_)", "import re\nseven_ate9 = lambda s: re.sub(r\"(?:7)(9)(?=7)\", \"7\", s)", "def seven_ate9(str_):\n    out = str_[0]\n    for i in range(1, len(str_)-1):\n        if str_[i] == '9' and str_[i-1] == str_[i+1] == '7':\n            continue\n        else:\n            out += str_[i]\n    return out + str_[-1]"]