["def membership(amount, platinum, gold, silver, bronze):\n    ordered = reversed(sorted((v, k) for k, v in locals().items() if k != 'amount'))\n    return next((level.capitalize() for threshold, level in ordered if amount >= threshold), 'Not a member')", "def membership(amount, platinum, gold, silver, bronze):\n        s1,s = dir(),locals()\n        if s[s1[0]] >= s[s1[3]] : return s1[3].capitalize()\n        if s[s1[0]] >= s[s1[2]] : return s1[2].capitalize()\n        if s[s1[0]] >= s[s1[4]] : return s1[4].capitalize()\n        if s[s1[0]] >= s[s1[1]] : return s1[1].capitalize()\n        return \"Not a member\"", "def membership(amount, platinum, gold, silver, bronze):\n    import inspect\n    args = inspect.getargspec(membership).args\n    l = locals()\n    return next((a.title() for a in args[1:] if l[args[0]] >= l[a]), 'Not a member')", "def membership(amount, platinum, gold, silver, bronze):\n    l = locals()\n    a = l.pop('amount')\n    try:\n        return max((v, e) for e, v in l.items() if a >= v)[1].capitalize()\n    except:\n        return 'Not a member'", "def membership(amount, platinum, gold, silver, bronze):\n    def res(i):\n        return 'PGSBNloiroallottdvn i ezan re u   mm   e    m    b    e    r'[i::5].strip()\n    for i in range(4, 0, -1):\n        if (eval('apgsbmloiroalloutdvnni eztn re u    m   '[0::5])\n            < eval('apgsbmloiroalloutdvnni eztn re u    m   '[i::5])):\n            return res(i)\n    return res(0)\n", "def membership(amount, platinum, gold, silver, bronze):\n    import inspect\n    frame = inspect.currentframe()\n    args, _, _, values = inspect.getargvalues(frame)\n    for i in reversed(list(range(1, 5))):\n        if i > 1:\n            if values[args[i-1]] > values[args[0]] >= values[args[i]]:\n                return args[i].title()\n        elif values[args[0]] >= values[args[i]]:\n            return args[i].title()\n    return \"Not a member\"\n", "def membership(amount, platinum, gold, silver, bronze):\n    import inspect\n    frame = inspect.currentframe()\n    args, _, _, values = inspect.getargvalues(frame)\n    if amount < values[args[4]]:\n        return 'Not a member'\n    elif amount < values[args[3]]:\n        # bottom tier\n        return ''.join([chr(66),chr(114),chr(111),chr(110),chr(122),chr(101)])\n    elif amount < values[args[2]]:\n        # third tier\n        return ''.join([chr(83),chr(105),chr(108),chr(118),chr(101),chr( 114)])\n    elif amount < values[args[1]]:\n        # second tier\n        return ''.join([chr(71),chr(111),chr(108),chr(100)])\n    else:\n        # top tier\n        return ''.join([chr(80),chr(108),chr(97),chr(116),chr(105),chr(110),chr(117),chr(109)])", "def membership(amount, platinum, gold, silver, bronze):\n    if amount<eval(''.join(['b','r','o','n','z','e'])):\n        return 'Not a member'\n    elif amount<eval(''.join(['s','i','l','v','e','r'])):\n        return ''.join(['B','r','o','n','z','e'])\n    elif amount<eval(''.join(['g','o','l','d'])):\n        return ''.join(['S','i','l','v','e','r'])\n    elif amount<eval(''.join(['p','l','a','t','i','n','u','m'])):\n        return ''.join(['G','o','l','d'])\n    else:\n        return ''.join(['P','l','a','t','i','n','u','m'])", "def membership(amount, platinum, gold, silver, bronze):\n    import inspect\n    args_names = inspect.getfullargspec(membership).args\n    \n    for level in args_names[1:]: \n        if amount >= locals().get(level): \n            return level.capitalize()\n    else: \n        return \"Not a member\""]