["from collections import Counter\n\n\ndef is_dd(n):\n    return any(value==count for value, count in Counter(int(x) for x in str(n)).items())", "from collections import Counter\n\ndef is_dd(n):\n    return any(int(k) == v for k, v in Counter(str(n)).items())", "def is_dd(n):\n    for i in range(1, 10):\n        if str(n).count(str(i)) == i: return True\n    return False", "def is_dd(n):\n    lstr = list(str(n))\n    dds = 0\n    \n    for x in lstr:\n        numdigits = 0;\n        \n        for y in lstr:\n            if y == x:\n                numdigits += 1\n        if numdigits == int(x):\n            return True\n            \n    return False\n            \n", "def is_dd(n):\n    n = str(n)\n    for i in range(1, 10):\n        if n.count(str(i)) == i:\n            return True\n    return False", "def is_dd(n):\n    for i in set([int(d) for d in str(n)]):\n        if str(n).count(str(i))==i:\n            return True\n    return False", "def is_dd(n):\n    n = str(n)\n    return any(n.count(d) == int(d) for d in set(n))", "import collections\n\ndef is_dd(n):\n    counter = collections.Counter(str(n))\n    return any(counter[str(i)] == i for i in range(1, 10))", "is_dd=lambda n:any(int(c)==x for c,x in __import__(\"collections\").Counter(str(n)).items())"]