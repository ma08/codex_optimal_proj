["for __ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    ar.reverse()\n    ans = n - 1\n    flag = False\n    for i in range(1, n):\n        if ar[i] < ar[i - 1]:\n            flag = True\n        if flag:\n            if ar[i] > ar[i - 1]:\n                break\n        ans -= 1\n    print(ans)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    prev = a[-1]\n    cnt = 1\n    status = 0\n    for i in range(n - 2, -1, -1):\n        v = a[i]\n        if status == 0:\n            if v < prev:\n                status = 1\n            cnt += 1\n            prev = v\n            continue\n        elif status == 1:\n            if v > prev:\n                break\n            cnt += 1\n            prev = v\n            continue\n    print(n - cnt)\n\nt = int(input())\nfor _ in range(t):\n    solve()", "for testcase in range(int(input())):\n    n = int(input())\n    a = list(reversed(list(map(int, input().split()))))\n    \n    i = 1\n    while i < n and a[i - 1] <= a[i]:\n        i += 1\n    while i < n and a[i - 1] >= a[i]:\n        i += 1\n    print(n - i)\n        \n", "def solve():\n    n = int(input())\n    b = list(map(int, input().split()))\n    key = True\n    for i in range(n - 2, -1, -1):\n        if key and b[i] < b[i + 1]:\n            key = False\n        elif not key and b[i] > b[i + 1]:\n            print(i + 1)\n            return\n    print(0)\n\n\nfor _ in range(int(input())):\n    solve()\n", "import sys\ninput = sys.stdin.readline\nfor nt in range(int(input())):\n\tn = int(input())\n\ta = list(map(int,input().split()))\n\tif n==1:\n\t\tprint (0)\n\t\tcontinue\n\tdec = 0\n\tind = -1\n\tfor i in range(n-2,-1,-1):\n\t\tif a[i]<a[i+1]:\n\t\t\tdec = 1\n\t\telif a[i]>a[i+1] and dec:\n\t\t\tind = i\n\t\t\tbreak\n\tprint (ind+1)", "import sys\n#q=1\nq=int(input())\nfor i in range(q):\n    #n,m=[int(j) for j in sys.stdin.readline().split()]\n    n=int(sys.stdin.readline())\n    a=[int(j) for j in sys.stdin.readline().split()]\n    a=a[::-1]\n    swap=0\n    t=n\n    for i in range(n-1):\n        if swap==0:\n            if a[i]>a[i+1]:\n                swap=1\n        elif swap==1:\n            if a[i]<a[i+1]:\n                swap=2\n                t=i+1\n                break\n    print(n-t)\n", "import sys\nINF = 10**20\nMOD = 10**9 + 7\nI = lambda:list(map(int,input().split()))\nfrom math import gcd\nfrom math import ceil\nfrom collections import defaultdict as dd, Counter\nfrom bisect import bisect_left as bl, bisect_right as br\nfrom itertools import permutations\n\n\"\"\"\nFacts and Data representation\nConstructive? Top bottom up down\n\"\"\"\ndef solve():\n  n, = I()\n  a = I()\n  j = n - 1\n  while j > 0 and a[j - 1] >= a[j]:\n    j -= 1\n  mx = a[j]\n  while j > 0 and a[j - 1] <= a[j] and a[j - 1] <= mx:\n    j -= 1\n  print(j)\n\nt, = I()\nwhile t:\n  t -= 1\n  solve()", "from sys import stdin\n\ntt = int(stdin.readline())\n\nfor loop in range(tt):\n\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n\n    flag = 0\n    for i in range(n-1,0,-1):\n        if flag == 0 and a[i-1] < a[i]:\n            flag = 1\n        elif flag == 1 and a[i-1] > a[i]:\n            print (i)\n            break\n    else:\n        print(0)\n", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    rising = False\n    i = n-1\n    for _ in range(2):\n        while i > 0:\n            if a[i-1] == a[i] or (a[i-1] < a[i]) == rising:\n                i -= 1\n            else:\n                rising = not rising\n                break\n    print(i)\n", "import sys\ninput = sys.stdin.readline\nfor f in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    i=n-2\n    poss=True\n    dec=True\n    while i>=0 and poss:\n        if dec:\n            if a[i]<a[i+1]:\n                dec=False\n        else:\n            if a[i]>a[i+1]:\n                poss=False\n                i+=1\n        i-=1\n    print(i+1)\n", "t=int(input())\nfor _ in range(t):\n  n=int(input())\n  a=list(map(int,input().split()))\n  t=0\n  for i in range(n-1,0,-1):\n    if a[i]>a[i-1]:\n      t=i\n      break\n    if i==1:\n      t=0\n  if t<=1:\n    print(0)\n    continue\n  s=0\n  for i in range(t,0,-1):\n    if a[i]<a[i-1]:\n      s=i\n      break\n    if i==1:\n      s=0\n  print(s)", "#Pye\nimport os, sys\ndef _(): return sys.stdin.readline()\ndef __(): return sys.stdin.readline().split()\nN = 100005\nq = int(_())\nfor id in range(q):\n    n = int(_())\n    a = list(reversed(list(map(int, __()))))\n    ans = 0\n    check = 0\n    for x in range(1, len(a)):\n        if not check and a[x] < a[x-1]: check = 1\n        if check and a[x] > a[x-1]:\n            ans = len(a)-x\n            break\n    print(ans)\n    \n\n\n\n\n", "import sys\ninput = sys.stdin.readline\n \nt = int(input())\n \nfor _ in range(t):\n    l = int(input())\n    m = list(map(int, input().split()))\n    m = m[::-1]\n    \n    uni = []\n    gro = 1\n    ok = 1\n    ans = 0\n    \n    for j in range(len(m) - 1):\n        if gro == 0:\n            if m[j+1] > m[j]:\n                ok = 0\n                ans = j+1\n                break\n        \n        if m[j+1] < m[j]:\n            gro = 0\n            \n    if ans == 0:\n        print(ans)\n    else:\n        print(l-ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = input().split(' ')\n    for i in range(n):\n        a[i] = int(a[i])\n    i = n-1\n    while i > 0:\n        if a[i] <= a[i-1]:\n            i -= 1\n            continue\n        else:\n            break\n    while i > 0:\n        if a[i] >= a[i-1]:\n            i -= 1\n            continue\n        else:\n            break\n    print(i)\n", "\"\"\"\n                            pppppppppppppppppppp\n                         ppppp  ppppppppppppppppppp\n                      ppppppp    ppppppppppppppppppppp\n                      pppppppp  pppppppppppppppppppppp\n                      pppppppppppppppppppppppppppppppp\n                              pppppppppppppppppppppppp\n       ppppppppppppppppppppppppppppppppppppppppppppppp  pppppppppppppppppppp\n      pppppppppppppppppppppppppppppppppppppppppppppppp  ppppppppppppppppppppp\n     ppppppppppppppppppppppppppppppppppppppppppppppppp  pppppppppppppppppppppp\n    ppppppppppppppppppppppppppppppppppppppppppppppp    pppppppppppppppppppppppp\n   pppppppppppppppppppppppppppppppppppppppppppppp     pppppppppppppppppppppppppp\n  ppppppppppppppppppppppppppppppppppppppppppppp      pppppppppppppppppppppppppppp\n  pppppppppppppppppppppppppppppppp               pppppppppppppppppppppppppppppppp\n  pppppppppppppppppppppppppppp     pppppppppppppppppppppppppppppppppppppppppppppp\n  ppppppppppppppppppppppppppp    pppppppppppppppppppppppppppppppppppppppppppppppp\n    pppppppppppppppppppppppp  pppppppppppppppppppppppppppppppppppppppppppppppppp\n     ppppppppppppppppppppppp  ppppppppppppppppppppppppppppppppppppppppppppppppp\n      pppppppppppppppppppppp  ppppppppppppppppppppppppppppppppppppppppppppppp\n       ppppppppppppppppppppp  ppppppppppppppppppppppppppppppppppppppppppppp\n                              pppppppppppppppppppppppp\n                              pppppppppppppppppppppppppppppppp\n                              pppppppppppppppppppppp  pppppppp\n                              ppppppppppppppppppppp    ppppppp\n                                 ppppppppppppppppppp  ppppp\n                                    pppppppppppppppppppp\n\"\"\"\n\n\nimport sys\nfrom functools import lru_cache, cmp_to_key\nfrom heapq import merge, heapify, heappop, heappush, nsmallest\nfrom math import ceil, floor, gcd, fabs, factorial, fmod, sqrt, inf\nfrom collections import defaultdict as dd, deque, Counter as C\nfrom itertools import combinations as comb, permutations as perm\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nfrom time import perf_counter\nfrom fractions import Fraction\nfrom decimal import Decimal\n# sys.setrecursionlimit(pow(10, 6))\n# sys.stdin = open(\"input.txt\", \"r\")\n# sys.stdout = open(\"output.txt\", \"w\")\nmod = pow(10, 9) + 7\nmod2 = 998244353\ndef data(): return sys.stdin.readline().strip()\ndef out(var): sys.stdout.write(str(var)+\"\\n\")\ndef outa(*var, end=\"\\n\"): sys.stdout.write(' '.join(map(str, var)) + end)\ndef l(): return list(sp())\ndef sl(): return list(ssp())\ndef sp(): return list(map(int, data().split()))\ndef ssp(): return list(map(str, data().split()))\ndef l1d(n, val=0): return [val for i in range(n)]\ndef l2d(n, m, val=0): return [l1d(n, val) for j in range(m)]\n\n\nfor _ in range(int(data())):\n    n = int(data())\n    arr = l()\n    low, high = 0, n\n    answer = n\n    while low <= high:\n        mid = (low + high) >> 1\n        new = arr[mid:]\n        res = []\n        i, j = 0, len(new)-1\n        while i < j:\n            if new[i] > new[j]:\n                res.append(new[j])\n                j -= 1\n            else:\n                res.append(new[i])\n                i += 1\n        if res == sorted(res):\n            answer = min(answer, mid)\n            high = mid - 1\n        else:\n            low = mid + 1\n    out(answer)\n", "from sys import stdin\n                        \nt = int(stdin.readline().strip())\nfor i in range(t):                           \n    n = int(stdin.readline().strip())\n    A = list(map(int, stdin.readline().strip().split(' ')))\n    i = n-2\n    while i >= 0 and A[i] >= A[i+1]:\n        i -= 1\n    while i >= 0 and A[i] <= A[i+1]:\n        i -= 1\n    print(i+1)\n", "def solve(n, a):\n    increasing = True\n    prev = float('-inf')\n    for i in range(n-1, -1, -1):\n        if a[i] < prev and increasing:\n            increasing = False\n        if a[i] > prev and not increasing:\n            return i+1\n        prev = a[i]\n    return 0\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    # x, y, z = map(int, input().split())\n    print(solve(n, a))", "tests = int(input())\nfor test in range(tests):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    x = -1\n    for i in range(n-2, -1, -1):\n        if a[i] < a[i + 1]:\n            x = i\n            break\n    if x == -1:\n        print(0)\n        continue\n    y = -1\n    for i in range(x - 1, -1, -1):\n        if a[i] > a[i + 1]:\n            y = i\n            break\n    if y == -1:\n        print(0)\n        continue\n    print(y + 1)\n        \n"]