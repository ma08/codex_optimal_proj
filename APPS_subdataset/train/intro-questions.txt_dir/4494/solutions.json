["def points(games):\n    count = 0\n    for score in games:\n        res = score.split(':')\n        if res[0]>res[1]:\n            count += 3\n        elif res[0] == res[1]:\n            count += 1\n    return count", "def points(a):\n    return sum((x >= y) + 2 * (x > y) for x, y in (s.split(\":\") for s in a))", "def points(games):\n    count = 0\n    for match in games:\n        x = match.split(\":\")\n        if x[0] > x[1]:\n            count += 3\n        elif x[0] == x[1]:\n            count += 1\n    return count", "def points(games):\n    return sum([0,1,3][1+(g[0]>g[2])-(g[0]<g[2])] for g in games)", "def points(games):\n    return sum(3 if x > y else 0 if x < y else 1 for x, y in (score.split(\":\") for score in games))", "def points(games):\n    result = 0\n    for item in games:\n        result += 3 if item[0] > item[2] else 0     \n        result += 1 if item[0] == item[2] else 0\n    return result", "points = lambda g: sum((x>y)*3 or x==y for x,_,y in g)", "def points(games):\n    sum=0\n    for g in games:\n        s=g.split(':')\n        if(s[0]>s[1]):\n            sum+=3\n        elif(s[0] == s[1]):\n            sum+=1\n    return(sum)\n", "def points(games):\n    def convert(game):\n        x, y = int(game[0]), int(game[2])\n        return 3 if x > y else 1 if x == y else 0\n    return sum(convert(game) for game in games)", "def points(games): \n    total = 0\n    a = len(games) \n    for i in range(0,a): \n            a = games[i].split(':') \n            if a[0] > a[1]: \n                total = total + 3 \n            if a[0] == a[1]: \n                total = total + 1 \n            if a[0] < a[1]: \n                total = total + 0 \n    return total\n", "points = lambda g: sum((x==y)+(x>y)*3 for x,_,y in g)", "def points(games):\n    def score(x):\n        if x[0] > x[2]:\n            return 3\n        elif x[0] < x[2]:\n            return 0\n        else:\n            return 1\n    return sum(score(x) for x in games)", "def score_game(x, y):\n    if x > y:\n        return 3\n    if x < y:\n        return 0\n    return 1\n\ndef points(games):\n    return sum(score_game(*game.split(':')) for game in games)\n", "def points(games):\n    return sum(3*(x > y) + (x == y) for x, _, y in games)", "def points(arr):\n    L = []\n    for i in arr:\n        L1 = i.split(\":\")\n        if L1[0] > L1[1]:\n            L.append(3)\n        elif L1[0] < L1[1]:\n            L.append(0)\n        elif L1[0] == L1[1]:\n            L.append(1)\n    return sum(L)", "def points(games):\n    \n    points = 0\n    \n    for i in range (len(games)) :\n        match = games[i]\n        x = match[0]\n        y = match[2]\n        \n        if x > y : points += 3\n        elif x == y : points += 1\n    \n    return points\n\npoints(['1:0','2:0','3:0','4:0','2:1','3:1','4:1','3:2','4:2','4:3'])", "def points(games):\n    points = 0\n    for game in games:\n        x = int(game[0])\n        y = int(game[2])\n        if x>y:\n            points += 3\n        elif x==y:\n            points += 1\n    return points", "def points(games):\n    points = 0\n    for i in range(len(games)):\n        if games[i][0] > games[i][2]:\n            points += 3\n        elif games[i][0] == games[i][2]:\n            points += 1\n    return points", "def points(games):\n    l=[]\n    x=0\n    z=0\n    n=(' '.join(games))\n    for i in n:\n        if i!=' ' and i!=':':\n            l.append(i)\n            x+=1\n            if x==2:\n                if int(l[0])>int(l[1]):\n                    z+=3\n                elif int(l[0])<int(l[1]):\n                    z+=0\n                else:\n                    z+=1\n                l.clear()\n                x-=2          \n    return z", "def points(games):\n    pnts, lst = 0, [i for i in games]\n    \n    for j in range(len(lst)):\n        if lst[j][0] > lst[j][2]:\n            pnts += 3\n        if lst[j][0] == lst[j][2]:\n            pnts += 1\n\n    return pnts", "points=lambda Q:sum(3*(V[0]>V[2])+(V[0]==V[2])for V in Q)", "points=lambda c:sum(3*(h>g)+(h==g)for h,_,g in c)\n", "def points(games):\n    points = 0\n    for a in games:\n        if a[0] > a[2]: points += 3\n        elif a[0] == a[2]: points += 1\n    return points", "def points(games):\n  # good solution without condition ))))\n  count = 0\n  for i in games:\n      if int(i[0]) > int(i[2]):\n          count += 3\n      elif int(i[0]) == int(i[2]):\n          count += 1\n      \n  return count", "def points(games):\n    pts = 0\n    for i in games:\n      if i[0] > i[2]:\n        pts += 3\n      elif i[0] == i[2]:\n        pts += 1\n    return pts\n", "points = lambda games: sum([ 3 if g[0] > g[-1] else 1 if g[0] == g[-1] else 0 for g in games ])\n", "def points(games):\n    return sum( (x>=y)*(1+2*(x>y)) for x,y in map(lambda s: s.split(':'), games) )", "def points(games):\n    return sum(3 if x[0] > x[2] else 0 if x[0] < x[2] else 1 for x in games)", "def points(games):\n    diff = map(lambda x: int(x[0]) - int(x[-1]), games)  # goal difference\n    wins = map(lambda x: 3 if x > 0 else x, diff)  # change wins to 3 points\n    return sum(list(map(lambda x: 1 if x == 0 else x * (x > 0), wins)))  # change draws and losses to 1 and 0 points", "def points(games):\n    points = 0\n    for game in games:\n        x, y = game.split(\":\")\n        points += [0, 1, 3][(x >= y) + (x > y)]\n    return points", "from typing import List\n\ndef points(games: List[str]) -> int:\n    \"\"\" Counts the points of the team in the championship. \"\"\"\n    points = 0\n    results = [(int(goals[0]), int(goals[1])) for goals in [score.split(\":\") for score in games]]\n    for (scored_goals, lost_goals) in results:\n        if scored_goals > lost_goals:\n            points += 3\n        elif scored_goals == lost_goals:\n            points +=1\n    return points", "def points(games):\n\n    final = 0\n    for score in games:\n        x,y = score.split(\":\")\n        if x > y:\n            final += 3\n        elif x == y:\n            final += 1\n        else:\n            final + 0\n    \n    return final\n    \n", "def points(games):\n    def calculate(args): \n        return 0 if args[1] > args[0] else (1 if args[1] == args[0] else 3)\n    return sum([calculate(scores.split(':')) for scores in games])", "def points(games):\n    points = 0\n\n    for v in games:\n        x = int(v[0])\n        y = int(v[2])\n        if x > y:\n            points += 3\n        elif x == y:\n            points += 1\n\n    return points", "def points(games):\n    p = 0\n    for game in games:\n        x, y = game.split(':')\n        p += 3 if x > y else 0 if x < y else 1\n    return p\n", "def points(game_results):\n  return sum(get_points(result) for result in game_results)\n\n\ndef get_points(result):\n  left_score = int(result[0])\n  right_score = int(result[-1])\n  if left_score > right_score:\n    return 3\n  elif left_score < right_score:\n    return 0\n  elif left_score == right_score:\n    return 1\n", "def points(games):\n    sumx = 0\n    for x in games:\n        temp = x.split(':')\n        if temp[0] == temp[1]:\n            sumx += 1\n        elif temp[0] > temp[1]:\n            sumx += 3\n    return sumx", "points=lambda games:sum(map(lambda p:3 if p[0]>p[2] else(1 if p[0]==p[2] else 0),games))", "def points(games):\n    \n    points = 0\n    \n    for game in games:\n            x,y = game.split(':')\n            if x > y: points += 3\n            if x < y: points += 0\n            if x == y: points += 1\n            \n    return points  ", "import re\ndef points(games):\n    match = re.findall(r'[0-9]', ''.join(games))\n    p = 0\n    for i in range(0, len(match), 2):\n        if ord(match[i]) > ord(match[i + 1]): p += 3\n        elif ord(match[i]) == ord(match[i + 1]): p += 1\n    return p", "def points(games):\n    return(sum([3 if (x > y) else 1 if (x == y) else 0 for (x, y) in (a.split(':') for a in games)]))\n", "def points(games):\n    total_pts = 0\n\n    for game in games:\n        x, y = game.split(\":\")\n        if x == y:\n            total_pts += 1\n        elif x > y:\n            total_pts += 3\n    \n    return total_pts\n", "def points(scores):\n    return sum([3 if s[0] > s[2] else 1 for s in scores if s[0] >= s[2]])", "def points(games):\n    total = 0\n    for x, _, y in games:\n        if x > y: total += 3\n        elif x == y: total += 1\n    return total", "def points(games):\n    res = 0\n    for e in games:\n        if e.split(':')[0] > e.split(':')[1]:\n            res += 3\n        elif e.split(':')[0] == e.split(':')[1]:\n            res += 1\n    return res", "def points(games):\n    point=0\n    for i in games:\n        b=i.split(\":\")\n        if int(b[0])>int(b[1]):\n            point+=3\n        elif int(b[0])<int(b[1]):\n            point+=0\n        elif int(b[0])==int(b[1]):\n            point+=1\n    return point\n", "def points(games):\n    scores = (game.split(\":\") for game in games)\n    return sum([0, 1, 3][(x >= y) + (x > y)] for x, y in scores)", "def points(games):\n\n  g = 0\n\n  for i in games:\n\n    j = i.split(':')\n\n    if j[0] > j[1]:\n      g += 3\n\n    elif j[0] == j[1]:\n      g += 1\n\n  return g\n", "def points(games):\n    score = 0\n    for x in games:\n        if x[0] > x[2]:\n            score += 3\n        if x[0] == x[2]:\n            score += 1\n    print(score)            \n    return score    \n", "def points(games):\n    points = 0\n    for each_str in games:\n        x = int(each_str[0])\n        y = int(each_str[2])\n        if x > y:\n            points += 3\n        elif x == y:\n            points += 1\n    return points", "def points(games):\n    points_res = 0\n    for res_str in games:\n        x = int(res_str[0])\n        y = int(res_str[2])\n        if x > y:\n            points_res += 3\n        elif x == y:\n            points_res += 1\n    return points_res\n", "def points(games):\n    if not games:\n        return 0\n    x=games[0]\n    if(int(x[0])>int(x[2])):\n        return 3+points(games[1:])\n    if(x[0]==x[2]):\n        return 1+points(games[1:])\n    return 0+points(games[1:])\n", "def points(games):\n    result = 0\n    for score in games:\n        x, y = score.split(':')\n        if x > y:\n            result += 3\n        if x == y:\n            result += 1\n    return result", "def points(games):\n    score = 0\n    for game in games :\n        (x, y) = tuple(game.split(':'))\n        if x > y :\n            score+=3\n        elif x==y :\n            score+=1\n    return score", "def points(games):\n    si=0\n    si= sum(3 if match[0]>match[2] else (1 if match[0]==match[2] else 0) for match in games)        \n    return si", "def points(games):\n    points = 0\n    \n    for game in games:\n        point = list(map(int, game.split(\":\")))\n        if point[0] > point[1]:\n            points += 3\n        elif point[0] == point[1]:\n            points += 1\n\n    return points\n", "def points(games):\n    count = 0\n    for i in games:\n        a,b = i.split(':')\n        if a > b:\n            count += 3\n        elif a == b:\n            count += 1\n        else:\n            continue\n            \n    return count        \n        \n", "def points(games):\n    our_points = 0\n    for game in games:\n        if game[0] > game[2]:\n            our_points = our_points + 3\n        elif game[0] == game[2]:\n            our_points = our_points + 1\n        else:\n            pass\n    return our_points", "def points(games):\n    points = 0\n    for game in games:\n        score = game.split(':')\n        if score[0] > score[1]:\n            points += 3\n        elif score[0] == score[1]:\n            points += 1\n    return points", "def points(games):\n    point = 0\n    for score in games:\n        x, y = map(int, score.split(':'))\n        if x > y:\n            point += 3\n        elif x == y:\n            point += 1\n    return point"]