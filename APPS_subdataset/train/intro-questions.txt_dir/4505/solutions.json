["def get_matrix(n):\n    return [[1  if i==j else 0 for i in range(n)] for j in range(n)]", "import numpy\ndef get_matrix(n):\n    return numpy.eye(n, dtype=int).tolist()", "get_matrix=lambda n: [[int(i==j) for j in range(n)] for i in range(n)]", "def get_matrix(n):\n    return [[int(i == j) for j in range(n)] for i in range(n)]", "def get_matrix(n):\n    return [ [ [0,1][i is _ ]for i in range(n)] for _ in range(n)]", "get_matrix = lambda n: [[j == i for j in range(n)] for i in range(n)]", "def get_matrix(n):\n    return [[x==y for x in range(n)] for y in range(n)] ", "from numpy import identity, ndarray\n\ndef get_matrix(n):\n   return identity(n).tolist()", "import numpy\n\ndef get_matrix(n):\n    return numpy.identity(n).tolist()", "def get_matrix(n):\n    #your code here\n    matrix = []\n    \n    for idx in range(0, n):\n        child_matrix = []\n        child_matrix += ([0] * idx) + [1] + ([0] * (n -1 - idx))\n        matrix.append(child_matrix)\n    return matrix\n"]