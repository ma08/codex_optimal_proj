["def split_and_add(numbers, n):\n    for _ in range(n):\n        middle = len(numbers) // 2\n        left = numbers[:middle]\n        right = numbers[middle:]\n        numbers = [a + b for a, b in zip((len(right) - len(left)) * [0] + left, right)]\n        if len(numbers) == 1:\n            return numbers\n    return numbers\n", "def split_and_add(arr, n):\n    for _ in range(n):\n        half = len(arr) // 2\n        arr = [a+b for a, b in zip([0] * (len(arr)%2) + arr[:half], arr[half:])]\n    \n    return arr", "from itertools import starmap\nfrom operator import add\n\ndef split_and_add(numbers, n):\n    for __ in range(n):\n        mid, uneven = divmod(len(numbers), 2)\n        numbers = list(starmap(add, zip([0] * uneven + numbers[:mid], numbers[mid:])))\n    return numbers", "from itertools import zip_longest\n\ndef split_and_add(xs, n):\n  return split_and_add([(a or 0) + b for a, b in zip_longest(xs[:len(xs)//2][::-1], xs[len(xs)//2:][::-1])][::-1], n-1) if n else xs", "def split_and_add(a, n):    \n    return split_and_add([sum(e) for e in zip(([0] if len(a) % 2 else []) + a[:len(a)//2], a[len(a)//2:])], n - 1) if n else a", "from itertools import zip_longest\n\ndef split_and_add(numbers, n):\n    while len(numbers) > 1 and n:\n        n -= 1\n        m = len(numbers) // 2\n        it = zip_longest(reversed(numbers[:m]), reversed(numbers[m:]), fillvalue=0)\n        numbers = list(map(sum, it))[::-1]\n    return numbers", "def split_and_add(numbers, n):\n    def splitter(arr):\n        left, right = ([0] if len(arr) % 2 != 0 else []) + arr[:len(arr)//2], arr[len(arr)//2:]\n        return [l + r for l, r in zip(left, right)]\n    return numbers if n == 0 else split_and_add(splitter(numbers), n - 1)", "def split_and_add(numbers, n):\n    arr = numbers[:]\n    for _ in range(n):\n        mid, rest = divmod(len(arr), 2)\n        arr = [a + b for a, b in zip(rest * [0] + arr[:mid], arr[mid:])]\n    return arr", "def split_and_add(numbers, n):\n    for _ in range(n):\n        m, r = divmod(len(numbers), 2)\n        numbers = list(map(sum, zip(r * [0] + numbers[:m], numbers[m:])))\n    return numbers", "def split_and_add(numbers, n):\n    from itertools import zip_longest\n    for i in range(n):\n        length = len(numbers)//2\n        numbers = list(reversed([x+y for x,y in zip_longest(reversed(numbers[0:length]), reversed(numbers[length:]), fillvalue=0)]))\n    return numbers"]