["def get_mixed_num(fraction):\n    n, d = [int(i) for i in fraction.split('/')]\n    return '{} {}/{}'.format(n // d, n % d, d)", "def get_mixed_num(f):\n    [a, b] = map(int, f.split('/'))\n    return \"{} {}/{}\".format(a//b, a%b, b)", "def get_mixed_num(f):n,d=map(int,f.split('/'));return'%d %d/%d'%(n/d,n%d,d)", "def get_mixed_num(fraction):\n    n, d = (int(num) for num in fraction.split(\"/\"))\n    i, n = divmod(n, d)\n    return f\"{i} {n}/{d}\"", "def get_mixed_num(f):\n    v,d = map(int, f.split('/'))\n    n,r = divmod(v,d)\n    return f'{n} {r}/{d}'", "def get_mixed_num(fraction):\n    a, b = map(int, fraction.split('/'))\n    q, r = divmod(a, b)\n    return f\"{q} {r}/{b}\"", "def get_mixed_num(fraction):\n    a,b = list(map(int, fraction.split('/')))\n    return '{} {}/{}'.format(a//b, a%b, b)", "def get_mixed_num(fraction):\n    arr = fraction.split('/')\n    a, b = divmod(int(arr[0]), int(arr[1]))\n    res = []\n    if (a != 0):\n        res.append(str(a))\n    if (b != 0):\n        res.append(str(b) + \"/\" + arr[1])\n    return ' '.join(res)", "def get_mixed_num(fraction):\n    n,d = map(int,fraction.split('/'))\n    a,b = divmod(n,d)\n    return f'{a} {b}/{d}'", "def get_mixed_num(fraction):\n    n,d=map(int,fraction.split(\"/\"))\n    i,n,d=n//d,n%d,d\n    return [\"\",f\"{i} \"][bool(i)]+f\"{n}/{d}\""]