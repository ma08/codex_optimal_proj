["def int_diff(arr, n):\n    num=0\n    for i in range(len(arr)):\n        for j in range(i+1,len(arr)):\n            if abs(arr[i]-arr[j])==n:\n                num+=1\n    return num", "int_diff=lambda l,n:sum(n==abs(a-b)for i,a in enumerate(l)for b in l[:i])", "import itertools\n\ndef int_diff(arr, n):\n    return sum(abs(a-b) == n for a, b in itertools.combinations(arr, 2))", "from itertools import combinations\ndef int_diff(arr, n):\n    return sum(1 for x, y in combinations(arr, 2) if abs(x - y) == n)", "def int_diff(arr, n):\n    cnt = 0\n    for i, x in enumerate(arr):\n        for y in arr[i+1:]:\n           if abs(x-y) == n:\n               cnt += 1\n    return cnt\n", "def int_diff(arr, n):\n    return sum(sum(abs(a - b) == n for b in arr[i:]) for i, a in enumerate(arr, 1))", "from itertools import combinations\n\ndef int_diff(arr, n):\n    return sum(abs(c1-c2)==n for c1,c2 in combinations(arr,2))", "def int_diff(arr, n):\n    return sum([len([(i, j) for j in range(i+1, len(arr)) if abs(arr[i]-arr[j])==n]) for i in range(len(arr))])", "int_diff=lambda a,n:a.sort()or sum(x-y==n for i,x in enumerate(a)for y in a[:i])", "from itertools import combinations\n\ndef int_diff(arr, n):\n    return sum(abs(a - b) == n for a, b in combinations(arr, 2))", "int_diff = lambda arr, n: len([abs(x[0]-x[1]) for x in __import__('itertools').combinations(arr, 2) if abs(x[0]-x[1]) == n])", "from itertools import combinations\n\ndef int_diff(arr, n):\n    return sum(1 for a, b  in combinations(arr, 2) if abs(a - b) == n)", "int_diff=lambda arr, n: 0 if len(arr)<2 else len([1 for i in arr[1:] if abs(i-arr[0])==n])+int_diff(arr[1:], n)", "def int_diff(a, n):\n    return sum(abs(a[i]-a[j])==n for i in range(len(a)) for j in range(i+1,len(a)))", "def int_diff(A, n):\n    return sum(n==abs(b-a)for i,a in enumerate(A)for b in A[i+1:])\n", "def int_diff(A, n):\n    return sum(abs(A[j]-A[i])==n for i in range(len(A))for j in range(i+1,len(A)))\n", "def int_diff(arr, n):\n    arr.sort()\n    return sum(1 for i in range(len(arr)) for j in range(i+1, len(arr)) if arr[j] - arr [i] == n)\n", "def int_diff(arr, n):\n    return sum( 1 for i,x in enumerate(arr[:-1]) for y in arr[i+1:] if abs(y-x) == n )", "import itertools\n\ndef int_diff(arr, n):\n    count = 0\n    for i, j in itertools.combinations(arr, 2):\n        if (abs(i-j)) == n:\n            count += 1\n    return count", "def int_diff(arr, n):\n    count = 0\n    position = 0\n    for x in arr[position:]:\n        for y in arr[position + 1:]:\n            diff = (y - x) if (y > x) else (x - y)\n            if diff == n:\n                count += 1\n        position += 1\n    return count"]