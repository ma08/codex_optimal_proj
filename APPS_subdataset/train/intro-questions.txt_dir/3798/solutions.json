["from collections import defaultdict\n\ndef cards_and_pero(s):\n    deck = defaultdict(set)\n    for n in range(0,len(s),3):\n        card = s[n:n+3]\n        if card[1:] in deck[card[0]]: return [-1,-1,-1,-1]\n        deck[card[0]] |= {card[1:]}\n    return [ 13 - len(deck[suit]) for suit in \"PKHT\"]", "from collections import Counter\n\ndef cards_and_pero(s):        \n    return [13 - s.count(c) for c in 'PKHT'] if max(Counter([(s[i*3:i*3+3]) for i in range(len(s) // 3)]).values()) <= 1 else [-1, -1, -1, -1]", "def cards_and_pero(s):\n    cards = [s[i-3:i] for i in range(3, len(s) + 1, 3)]\n    if len(set(cards)) < len(cards):\n        return [-1, -1, -1, -1]\n    return [13 - len([card[0] for card in cards if card[0] == suit]) for suit in \"PKHT\"]", "def cards_and_pero(s):\n    d ,records = {'P': 13, 'K': 13, 'H': 13, 'T': 13}, []\n    for i in range(0, len(s), 3):\n        t = s[i:i + 3]\n        if t in records : return [-1]*4\n        records.append(t)\n        d[t[0]] -= 1\n    return list(d.values())", "from collections import  Counter\n\ndef cards_and_pero(s):\n    xs = [s[i:i+3] for i in range(0, len(s), 3)]\n    if len(xs) != len(set(xs)):\n        return [-1, -1, -1, -1]\n    suit = Counter(s[::3])\n    return [13-suit[c] for c in 'PKHT']", "def cards_and_pero(s):\n    cards = [(s[i], s[i+1:i+3]) for i in range(0, len(s), 3)]\n    if len(set(cards)) != len(cards):\n        return [-1] * 4\n    result = [13] * 4\n    for (suit, num) in cards:\n        result[\"PKHT\".index(suit)] -= 1\n    return result\n", "import re\nfrom collections import Counter\n\ndef cards_and_pero(s):\n    cardDeck = re.findall(r'([PKHT])(\\d{2})', s)\n    cnt      = Counter(suit for suit,_ in cardDeck)\n    return [-1]*4 if len(set(cardDeck)) != len(cardDeck) else [ 13-cnt[suit] for suit in \"PKHT\"]", "import re\ndef cards_and_pero(s):\n  s = re.findall(\"...\", s)\n  if len(s) != len(set(s)):\n      return ([-1, -1, -1, -1])\n  else:\n      P,K,H,T = 13,13,13,13\n      for x in s:\n          if x[0] == \"P\":\n              P -= 1\n          elif x[0] == \"K\":\n              K -= 1\n          elif x[0] == \"H\":\n              H -= 1\n          elif x[0] == \"T\":\n              T -= 1\n      return ([P, K, H, T])", "def cards_and_pero(s):\n    c = 0\n    d =''\n    rtr = [13, 13, 13, 13]\n    for i in range(len(s)):\n        d = d + s[i]\n        c += 1\n        if c == 3:\n            if d in s[i+1:] or d in s [:i-1]:\n                return [-1, -1, -1, -1]\n            if d[0] == 'P':\n                rtr[0] -= 1\n            elif d[0] == 'K':\n                rtr[1] -= 1\n            elif d[0] == 'H':\n                rtr[2] -= 1\n            elif d[0] == 'T':\n                rtr[3] -= 1\n            d = ''\n            c = 0\n    return rtr     ", "def cards_and_pero(s):\n    c = 0\n    d =''\n    rtr = [13, 13, 13, 13]\n    l = []\n    for i in range(len(s)):\n        d = d + s[i]\n        c += 1\n        if c == 3:\n            l.append(d)\n            if d in s[i+1:] or d in s [:i-1]:\n                return [-1, -1, -1, -1]\n            d = ''\n            c = 0\n    print (l)\n    while len(l) > 0:\n        if l[-1][0] == 'P':\n            rtr[0] -= 1\n            del l[-1]\n        elif l[-1][0] == 'K':\n            rtr[1] -= 1\n            del l[-1]\n        elif l[-1][0] == 'H':\n            rtr[2] -= 1\n            del l[-1]\n        elif l[-1][0] == 'T':\n            rtr[3] -= 1\n            del l[-1]\n    return rtr        "]