["def tongues(code):\n    AsT = \"\"\n    for i in code:\n        if i == \"i\":\n            AsT = AsT + \"o\"\n        elif i == \"t\":\n            AsT = AsT + \"n\"\n        elif i == \"a\":\n            AsT = AsT + \"e\"\n        elif i == \"d\":\n            AsT = AsT + \"r\"\n        elif i == \"f\":\n            AsT = AsT + \"g\"\n        elif i == \"y\":\n            AsT = AsT + \"u\"\n        elif i == \"c\":\n            AsT = AsT + \"l\"\n        elif i == \"s\":\n            AsT = AsT + \"h\"\n        elif i == \"w\":\n            AsT = AsT + \"m\"\n        elif i == \"v\":\n            AsT = AsT + \"k\"\n        elif i == \"q\":\n            AsT = AsT + \"z\"\n        elif i == \"p\":\n            AsT = AsT + \"b\"\n        elif i == \"j\":\n            AsT = AsT + \"x\"\n        elif i == \"o\":\n            AsT = AsT + \"i\"\n        elif i == \"n\":\n            AsT = AsT + \"t\"\n        elif i == \"e\":\n            AsT = AsT + \"a\"\n        elif i == \"r\":\n            AsT = AsT + \"d\"\n        elif i == \"g\":\n            AsT = AsT + \"f\"\n        elif i == \"u\":\n            AsT = AsT + \"y\"\n        elif i == \"l\":\n            AsT = AsT + \"c\"\n        elif i == \"h\":\n            AsT = AsT + \"s\"\n        elif i == \"m\":\n            AsT = AsT + \"w\"\n        elif i == \"k\":\n            AsT = AsT + \"v\"\n        elif i == \"z\":\n            AsT = AsT + \"q\"\n        elif i == \"b\":\n            AsT = AsT + \"p\"\n        elif i == \"x\":\n            AsT = AsT + \"j\"\n        elif i == \"I\":\n            AsT = AsT + \"O\"\n        elif i == \"T\":\n            AsT = AsT + \"N\"\n        elif i == \"A\":\n            AsT = AsT + \"E\"\n        elif i == \"D\":\n            AsT = AsT + \"R\"\n        elif i == \"F\":\n            AsT = AsT + \"G\"\n        elif i == \"Y\":\n            AsT = AsT + \"U\"\n        elif i == \"C\":\n            AsT = AsT + \"L\"\n        elif i == \"S\":\n            AsT = AsT + \"H\"\n        elif i == \"W\":\n            AsT = AsT + \"M\"\n        elif i == \"V\":\n            AsT = AsT + \"K\"\n        elif i == \"Q\":\n            AsT = AsT + \"Z\"\n        elif i == \"P\":\n            AsT = AsT + \"B\"\n        elif i == \"J\":\n            AsT = AsT + \"X\"\n        elif i == \"O\":\n            AsT = AsT + \"I\"\n        elif i == \"N\":\n            AsT = AsT + \"T\"\n        elif i == \"E\":\n            AsT = AsT + \"A\"\n        elif i == \"R\":\n            AsT = AsT + \"D\"\n        elif i == \"G\":\n            AsT = AsT + \"F\"\n        elif i == \"U\":\n            AsT = AsT + \"Y\"\n        elif i == \"L\":\n            AsT = AsT + \"C\"\n        elif i == \"H\":\n            AsT = AsT + \"S\"\n        elif i == \"M\":\n            AsT = AsT + \"W\"\n        elif i == \"K\":\n            AsT = AsT + \"V\"\n        elif i == \"Z\":\n            AsT = AsT + \"Q\"\n        elif i == \"B\":\n            AsT = AsT + \"P\"\n        elif i == \"X\":\n            AsT = AsT + \"J\"\n        else:\n            AsT = AsT + i    \n    return AsT", "vowels = 'aiyeou' * 2\nvowels += vowels.upper()\nconsonants = 'bkxznhdcwgpvjqtsrlmf' * 2\nconsonants += consonants.upper()\n\ndef tongues(code):\n    result = \"\"\n    for c in code:\n        if c in vowels:\n            result += vowels[vowels.index(c) + 3]\n        elif c in consonants:\n            result += consonants[consonants.index(c) + 10]\n        else:\n            result += c\n    return result", "def tongues(code):\n    map1 = 'aiyeoubkxznhdcwgpvjqtsrlmf'\n    map2 = 'eouaiypvjqtsrlmfbkxznhdcwg'\n    return code.translate(str.maketrans(map1+map1.upper(), map2+map2.upper()))", "def tongues(code):\n    vowels = {'a':'e', 'i':'o', 'y':'u',\n              'e':'a', 'o':'i', 'u':'y'}\n    consonants = {'b':'p', 'k':'v', 'x':'j', 'z':'q', 'n':'t',\n                  'h':'s', 'd':'r', 'c':'l', 'w':'m', 'g':'f',\n                  'p':'b', 'v':'k', 'j':'x', 'q':'z', 't':'n',\n                  's':'h', 'r':'d', 'l':'c', 'm':'w', 'f':'g'}\n    message = ''\n    for char in code:\n        Upper = False\n        if char == char.upper():\n            Upper = True\n            char = char.lower()\n        if char in vowels.keys():\n            new_char = vowels[char]\n        elif char in consonants.keys():\n            new_char = consonants[char]\n        else:\n            new_char = char\n        if Upper:\n            new_char = new_char.upper()\n        message += new_char\n    return message", "def tongues(code):\n    return code.translate(str.maketrans('BKXZNHDCWGPVJQTSRLMFbkxznhdcwgpvjqtsrlmfAIYEOUaiyeou','PVJQTSRLMFBKXZNHDCWGpvjqtsrlmfbkxznhdcwgEOUAIYeouaiy'))\n    \n", "def tongues(code):\n    vowels = ['a', 'i', 'y', 'e', 'o', 'u']\n    consonants = ['b', 'k', 'x', 'z', 'n', 'h', 'd', 'c', 'w', 'g', 'p', 'v', 'j', 'q', 't', 's', 'r', 'l', 'm', 'f']\n    result = \"\"\n    for char in code:\n        uppercase = True if char.isupper() else False\n        if char.lower() in vowels:\n            new_char = vowels[(vowels.index(char.lower()) + 3) % len(vowels)]\n        elif char.lower() in consonants:\n            new_char = consonants[(consonants.index(char.lower()) + 10) % len(consonants)]\n        else:\n            new_char = char\n        result += new_char.upper() if uppercase else new_char\n    return result\n"]