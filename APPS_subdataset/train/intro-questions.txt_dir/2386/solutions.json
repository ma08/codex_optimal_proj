["t = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*set(a))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    s = set()\n\n    for el in a:\n        len_before = len(s)\n        s.add(el)\n\n        if len(s) > len_before:\n            print(el, end=\" \")\n\n    print()", "for testcase in range(int(input())):\n    n = int(input())\n    has = [False] * (n + 1)\n    for i in map(int, input().split()):\n        if has[i]:\n            continue\n        print(i, end=' ')\n        has[i] = True\n    print()\n", "n=int(input())\nfor i in range(n):\n    x=int(input())\n    q=list(map(int,input().split()))\n    r=[]\n    for i in q:\n        if i not in r: r.append(i)\n    print(*r)", "import sys\nimport math\nfrom collections import defaultdict as dd\nmod=1000000007\nT=1\nT=int(sys.stdin.readline())\nfor _ in range(T):\n    n=int(input())\n    l=list(map(int,input().split()))\n    d=dd(int)\n    a=[]\n    for i in l:\n        if d[i]==0:\n            a.append(i)\n        d[i]=1\n    print(*a)\n    \n", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    vis = [False] * (n + 1)\n    p = []\n    for i in a:\n        if vis[i]:\n            continue\n        vis[i] = True\n        p.append(i)\n    print(*p)\n\nt = int(input())\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    n=int(input())\n    x=[int(x) for x in input().split()]\n    a=[]\n    for i in x:\n        if len(a)<n:\n            if i not in a:\n                a.append(i)\n        else:break\n    print(*a)\n", "for __ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    ans = []\n    kek = set()\n    for elem in ar:\n        if elem not in kek:\n            kek.add(elem)\n            ans.append(elem)\n    print(*ans)", "t = int(input()) \nfor _ in range (t): \n\n    n = int(input()) \n    seen = [False]*n \n    A = list(map(int, input().split())) \n    ans = list() \n\n    for a in A: \n        if not seen[a-1]: \n            seen[a-1] = True\n            ans.append (a) \n    \n    for a in ans: \n        print (a, end=\" \") \n    print() ", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    lst = input().split()\n    ans = []\n    ansl = 0\n    for i in lst :\n        if i not in ans :\n            ans.append(i)\n            if len(ans) >= n :\n                break\n    for i in ans :\n        print(i, end = \" \")\n    print()", "t=int(input())\ndef fun(n,a):\n    ans=[]\n    for i in range(2*n):\n        if ans.count(a[i])==0:\n            ans.append(a[i])\n    print(*ans,sep=\" \")\nwhile t:\n    t-=1\n    n=int(input())\n    a=[int(i) for i in input().split()]\n    fun(n,a)\n", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int,input().split()))\n    \n    s = set()\n    l = []\n    for i in a:\n        if not i in s:\n            l.append(i)\n            s.add(i)\n    print(\" \".join(map(str,l)))", "t=int(input())\nfor _ in range(t):\n  n=int(input())\n  a=list(map(int,input().split()))\n  ans=[]\n  visited=set()\n  for i in range(2*n):\n    if not a[i] in visited:\n      ans.append(str(a[i]))\n      visited.add(a[i])\n  print(' '.join(ans))", "from collections import Counter\nimport math\nimport sys\nfrom bisect import bisect,bisect_left,bisect_right\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef mod(): return 10**9+7\n \nfor i in range(INT()): \n    n = INT()\n    #s = input()\n    #n,m = MAP()\n    arr = LIST()\n    d = {}\n    for i in arr:\n        if i in d:\n            continue\n        else:\n            d[i] = 1\n    ans = []\n    for i in d:\n        ans.append(i)\n    print(*ans)\n", "#code\nt=int(input())\nwhile(t>0):\n    t-=1\n    n=int(input())\n    li=list(map(int,input().split()))\n    a=[0 for i in range(n+1)]\n    for i in li:\n        if a[i]==0:\n            print(i,end=' ')\n            a[i]=1\n    print()\n", "\n\n\nt = int(input())\n\nfor _ in range(t):\n\n\tn =int(input())\n\n\tv = list(map(int,input().split()))\n\n\ttmp = []\n\n\tfor i in v:\n\t\tif i not in tmp:\n\t\t\ttmp.append(i)\n\n\tfor i in tmp:\n\t\tprint(i,end=' ')\n\tprint()\n\t \n\n\n\n\t", "\"\"\"\n                            pppppppppppppppppppp\n                         ppppp  ppppppppppppppppppp\n                      ppppppp    ppppppppppppppppppppp\n                      pppppppp  pppppppppppppppppppppp\n                      pppppppppppppppppppppppppppppppp\n                              pppppppppppppppppppppppp\n       ppppppppppppppppppppppppppppppppppppppppppppppp  pppppppppppppppppppp\n      pppppppppppppppppppppppppppppppppppppppppppppppp  ppppppppppppppppppppp\n     ppppppppppppppppppppppppppppppppppppppppppppppppp  pppppppppppppppppppppp\n    ppppppppppppppppppppppppppppppppppppppppppppppp    pppppppppppppppppppppppp\n   pppppppppppppppppppppppppppppppppppppppppppppp     pppppppppppppppppppppppppp\n  ppppppppppppppppppppppppppppppppppppppppppppp      pppppppppppppppppppppppppppp\n  pppppppppppppppppppppppppppppppp               pppppppppppppppppppppppppppppppp\n  pppppppppppppppppppppppppppp     pppppppppppppppppppppppppppppppppppppppppppppp\n  ppppppppppppppppppppppppppp    pppppppppppppppppppppppppppppppppppppppppppppppp\n    pppppppppppppppppppppppp  pppppppppppppppppppppppppppppppppppppppppppppppppp\n     ppppppppppppppppppppppp  ppppppppppppppppppppppppppppppppppppppppppppppppp\n      pppppppppppppppppppppp  ppppppppppppppppppppppppppppppppppppppppppppppp\n       ppppppppppppppppppppp  ppppppppppppppppppppppppppppppppppppppppppppp\n                              pppppppppppppppppppppppp\n                              pppppppppppppppppppppppppppppppp\n                              pppppppppppppppppppppp  pppppppp\n                              ppppppppppppppppppppp    ppppppp\n                                 ppppppppppppppppppp  ppppp\n                                    pppppppppppppppppppp\n\"\"\"\n\n\nimport sys\nfrom functools import lru_cache, cmp_to_key\nfrom heapq import merge, heapify, heappop, heappush, nsmallest\nfrom math import ceil, floor, gcd, fabs, factorial, fmod, sqrt, inf\nfrom collections import defaultdict as dd, deque, Counter as C\nfrom itertools import combinations as comb, permutations as perm\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nfrom time import perf_counter\nfrom fractions import Fraction\nfrom decimal import Decimal\n# sys.setrecursionlimit(pow(10, 6))\n# sys.stdin = open(\"input.txt\", \"r\")\n# sys.stdout = open(\"output.txt\", \"w\")\nmod = pow(10, 9) + 7\nmod2 = 998244353\ndef data(): return sys.stdin.readline().strip()\ndef out(var): sys.stdout.write(str(var)+\"\\n\")\ndef outa(*var, end=\"\\n\"): sys.stdout.write(' '.join(map(str, var)) + end)\ndef l(): return list(sp())\ndef sl(): return list(ssp())\ndef sp(): return list(map(int, data().split()))\ndef ssp(): return list(map(str, data().split()))\ndef l1d(n, val=0): return [val for i in range(n)]\ndef l2d(n, m, val=0): return [l1d(n, val) for j in range(m)]\n\n\nfor _ in range(int(data())):\n    n = int(data())\n    a = l()\n    answer = []\n    s = set()\n    for i in a:\n        if i not in s:\n            answer.append(i)\n        s.add(i)\n    outa(*answer)\n", "n = int(input())\nfor _ in range(n):\n\ta = int(input())\n\tq = list(map(int,input().split()))\n\tv =  []\n\tfor i in q:\n\t\tif i not in v:\n\t\t\tv.append(i)\n\tprint(*v)", "t = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int,input().split()))\n    mp = {}\n    for i in a:\n        mp[i] = 0\n    ans = []\n    for i in a:\n        mp[i]+=1\n        if mp[i]==1:\n            ans.append(i)\n    print(*ans,sep=\" \")", "\ntt = int(input())\n\nlis = [-1] * 60\n\nfor loop in range(tt):\n\n    n = int(input())\n    p = list(map(int,input().split()))\n\n    ans = []\n\n    for i in p:\n        if lis[i] == loop:\n            continue\n        else:\n            ans.append(i)\n            lis[i] = loop\n\n    print(*ans)\n", "import math as mt \nimport sys,string\ninput=sys.stdin.readline\nL=lambda : list(map(int,input().split()))\nLs=lambda : list(input().split())\nM=lambda : list(map(int,input().split()))\nI=lambda :int(input())\nfrom collections import defaultdict\n\n\n\nt=I()\nfor _ in range(t):\n    n=I()\n    l=L()\n    v=[0]*n\n    a=[]\n    for i in range(2*n):\n        if(v[l[i]-1]==0):\n            a.append(l[i])\n            v[l[i]-1]=1\n    print(*a)\n", "for _ in range(int(input())):\n    n=int(input())\n    l=[int(j) for j in input().split()]\n    l1=[]\n    for i in l:\n        if i not in l1:\n            l1.append(i)\n    print(*l1)\n", "t = int(input())\nfor _ in range(t):\n     n = int(input())\n     a = [int(i) for i in input().split()]\n     ans = []\n     for i in a:\n          if i not in ans:\n               ans.append(i)\n     print(*ans)", "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\nM = mod = 998244353\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n \ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\n\nfor _ in range(val()):\n    n = val()\n    l = li()\n    visited = {}\n    ans = []\n    for i in l:\n        if i not in visited:\n            ans.append(i)\n        visited[i] = 1\n    print(*ans)", "from collections import OrderedDict\nfor _ in range(int(input())):\n    n = int(input())\n    l = [*list(map(int,input().split()))]\n    print(*list(OrderedDict.fromkeys(l)))\n", "for _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    m=[]\n    cnt=0\n    for i in l:\n        if cnt==n:\n            break\n        if i not in m:\n            m.append(i)\n            cnt+=1\n    print(*m)", "for _ in range(int(input())):\n    n=int(input())\n    s=set()\n    for i in map(int,input().split()):\n        if i not in s:print(i,end=' ')\n        s.add(i)\n    print()", "def solve():\n    n = int(input())\n    pp = list(map(int, input().split()))\n    p = []\n    e = set()\n    for x in pp:\n        if x not in e:\n            p.append(x)\n            e.add(x)\n    print(*p)\n\n\nfor _ in range(int(input())):\n    solve()\n", "n = int(input())\nfor i in range(n):\n    input()\n    sequence = input().split()\n    out = []\n    for num in sequence:\n        if num not in out:\n            out.append(num)\n    print(' '.join(out))", "t=int(input())\nfor i in range(0,t):\n\tn=int(input())\n\tL=list(map(int,input().split()))\n\tM=[False]*(n+1)\n\tN=[]\n\tfor i in range(0,2*n):\n\t\tif(not M[L[i]]):\n\t\t\tN.append(L[i])\n\t\t\tM[L[i]]=True\n\tprint(*N)"]