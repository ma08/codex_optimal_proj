["def max_profit(prices):\n    m = best = float('-inf')\n    for v in reversed(prices):\n        m, best = max(m, best-v), max(best,v)\n    return m", "def max_profit(prices):\n    out = prices[1] - prices[0]\n    min_price = prices[0]\n    \n    for i in prices[1:]:\n        if i - min_price > out:\n            out = i - min_price\n        if i < min_price:\n            min_price = i\n    return out", "def max_profit(prices):\n    save, best = float('inf'), float('-inf')\n    for p in prices:\n        best = max(best, p-save)\n        save = min(save, p)\n    return best", "def max_profit(prices):\n    mini, best = prices[0], -prices[0]\n    for price in prices[1:]:\n        best = max(best, price - mini)\n        mini = min(mini, price)\n    return best", "from itertools import islice\n\ndef max_profit(prices):\n    result = prices[1] - prices[0]\n    m = prices[0]\n    for x in islice(prices, 1, None):\n        result = max(x-m, result)\n        m = min(x, m)\n    return result", "import numpy as np\n\ndef max_profit(prices):\n    p = np.array(prices)\n    return np.array([p[i+1:].max() - prices[i] for i in range(len(prices)-1)]).max()", "def max_profit(prices):\n    low = prices[0]\n    profit = prices[1] - low\n    for i in range(1, len(prices)):\n        profit = max(profit, prices[i] - low)\n        low = min(low, prices[i])\n    return profit", "def max_profit(arr): \n    max_diff = arr[1] - arr[0] \n    min_element = arr[0] \n      \n    for i in range(1, len(arr)): \n        if (arr[i] - min_element > max_diff): \n            max_diff = arr[i] - min_element \n      \n        if (arr[i] < min_element): \n            min_element = arr[i] \n    return max_diff \n", "import numpy as np\ndef max_profit(prices):\n    p = np.array(prices)\n    pr = np.array([])\n    for i in range(len(prices)-1):\n        pr = np.append(pr, [p[i+1:].max() - prices[i]])\n    return pr.max()"]