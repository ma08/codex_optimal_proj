["def min_and_max(l, d, x):\n    listOfCorect = [num for num in list(range(l,d+1)) if sum(map(int,str(num))) == x]        \n    return [min(listOfCorect), max(listOfCorect)]", "def min_and_max(l, d, x):\n    for n in range(l, d+1):\n        if sum(map(int, str(n))) == x: break\n    \n    for m in range(d, l-1, -1):\n        if sum(map(int, str(m))) == x: break\n    \n    return [n, m]", "def min_and_max(l, d, x):\n    return [next(i for i in range(l, d+1) if sum(int(n) for n in str(i)) == x),\n            next(i for i in range(d, l-1, -1) if sum(int(n) for n in str(i)) == x)]", "def min_and_max(l, d, x):\n    def min_or_max(l, d, x, end, step):\n        return next(i for i in range(l, d+end, step) if sum(map(int,list(str(i)))) == x)\n    return [min_or_max(l, d, x, 1, 1), min_or_max(d, l, x, 0, -1)]", "func = lambda n: sum(map(int, str(n)))\n\n# Fuck it, brute-force\ndef min_and_max(l, d, x):\n    while func(l) != x: l += 1\n    while func(d) != x: d -= 1\n    return [l, d]", "def min_and_max(l, d, x):\n  for i in range(l,d+1):\n      if sum(map(int,list(str(i)))) == x:\n          n = i\n          break\n  for i in reversed(list(range(l,d+1))):\n      if sum(map(int,list(str(i)))) == x:\n          m = i\n          break\n  return [n, m]\n", "from operator import itemgetter\ndef min_and_max(l, d, x):\n  return list(itemgetter(0,-1)([i for i in range(l,d+1) if sum(map(int,list(str(i)))) == x]))", "def min_and_max(l, d, x):\n    arr = [i for i in range(l, d+1) if sum(map(int, str(i))) == x]\n    return [arr[0],arr[-1]]\n", "def min_and_max(l,d,x):\n    d_sum=lambda n:sum(map(int,str(n)))\n    min=next(i for i in range(l,d+1) if d_sum(i)==x)\n    max=next(i for i in range(d,l-1,-1) if d_sum(i)==x)\n    return [min,max]"]