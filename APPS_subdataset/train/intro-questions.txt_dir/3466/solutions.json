["from re import match\n\n\ndef date_checker(date):\n    return bool(match(r'\\d{2}-\\d{2}-\\d{4}\\s\\d{2}:\\d{2}', date))\n", "import re\n\ndef date_checker(date):\n    return bool(re.fullmatch(\"\\d\\d-\\d\\d-\\d\\d\\d\\d \\d\\d:\\d\\d\", date))", "# Really, nothing to check if days and motnhs and zeroes or too high?\ncheck = __import__(\"re\").compile(r\"\\d\\d-\\d\\d-\\d\\d\\d\\d \\d\\d:\\d\\d\").fullmatch\n\ndef date_checker(date):\n    return bool(check(date))", "import re\ndef date_checker(date):\n    return re.match(r'(\\d\\d-){2}\\d{4} \\d{2}:\\d{2}', date) != None", "import re\n\ndef date_checker(date):\n    return bool(re.match(r'\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}$', date))", "import re\ndef date_checker(date):\n    return True if re.match(r\"\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}\", date) else False", "from re import match as m\n\ndef date_checker(date):\n    return m('(3[0-1]|[0-2]?\\d)-([0-1]?\\d)-\\d{4} [0-2]\\d:\\d\\d', date) != None", "date_checker=lambda s:bool(__import__('re').match('\\d\\d-\\d\\d-\\d{4} \\d\\d:\\d\\d',s))", "import re\n\ndef date_checker(date):\n    return bool(re.match(\"\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}\", date))", "import re\n\ndef date_checker(date): #\n    return bool(re.match('(\\d\\d-){2}\\d{4}\\s\\d\\d:\\d\\d', date))"]