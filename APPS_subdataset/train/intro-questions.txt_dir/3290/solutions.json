["def get_ages(a,b):\n    x = (a+b)/2\n    y = (a-b)/2\n    return None if a<0 or b<0 or x<0 or y<0 else (x,y)", "def get_ages(s, diff):\n    older, younger = (s / 2) + (diff / 2), (s / 2) - (diff / 2)  \n    if older >= younger >= 0:\n        return (older, younger)", "def get_ages(s, diff):\n    older = (s / 2) + (diff / 2)\n    younger = (s / 2) - (diff / 2)\n    \n    if older >= younger >= 0:\n        return (older, younger)", "def get_ages(sum_, difference):\n    a = (sum_ + difference) / 2\n    b = sum_ - a\n    if 0 <= b <= a:\n        return a, b", "def get_ages(a, b):\n    x,y = (a+b)/2, (a-b)/2\n    if a>=0 and b>=0 and x>=0 and y>=0:\n        return x,y", "def get_ages(add, dif):\n    return None if any(n < 0 for n in (add, dif, add - dif)) else ((add + dif) / 2, (add - dif) / 2)\n", "def get_ages(sum_, difference):\n    x=(sum_+difference)/2\n    y=sum_-x\n    return None if any(e<0 for e in(x,y,sum_,difference)) else (x,y)", "def get_ages(sum_, difference): \n    # Calculating the Ages\n    ret = ((sum_ + difference)/2,(sum_ - difference)/2)\n    # verifying the assumptions\n    if difference < 0 or (ret[1]<0 or ret[0]<0): return None \n    else: return ret", "def get_ages(sum, difference):\n    age1 = (sum+difference)/2\n    age2 = sum - age1\n    if sum < 0 or difference < 0 or age1 < 0 or age2 < 0:\n        return None    \n    if age1 > age2:\n        return age1, age2 \n    else:\n        return age2, age1", "get_ages=lambda s,d:(lambda*a:None if any(x<0for x in(*a,s,d))else a)((s+d)/2,(s-d)/2)"]