["def what_time_is_it(angle):\n    hr = int(angle // 30)\n    mn = int((angle % 30) * 2)\n    if hr == 0:\n        hr = 12\n    return '{:02d}:{:02d}'.format(hr, mn)", "def what_time_is_it(angle):\n    angle %= 360\n    h, m = divmod(angle, 30)\n    return '{:02}:{:02}'.format(int(h or 12), int(m * 2))", "import time\ndef what_time_is_it(angle):\n    return time.strftime(\"%I:%M\", time.gmtime(angle * 2 * 60))", "def what_time_is_it(angle: float) -> str:\n    h, m = list(map(int, divmod(2 * angle, 60)))\n    return f\"{h or 12:02d}:{m:02d}\"\n", "def what_time_is_it(angle):\n    q, r = divmod(angle, 30)\n    return f\"{int(q) or 12:02d}:{int(2*r):02d}\"", "what_time_is_it=lambda a:f'{str(int(a//30) or 12).zfill(2)}:{str(int((a-(30*(a//30)))//0.5)).zfill(2)}'", "import math\ndef what_time_is_it(angle):\n    mins=2*(angle%360)\n    h=math.floor(mins/60) or 12\n    m=math.floor(mins%60)\n    return '{:02}:{:02}'.format(h,m)", "def what_time_is_it(angle):\n    hh, mm = divmod(int(2 * angle), 60)\n    return '{:02d}:{:02d}'.format(hh if hh else 12, mm)", "def what_time_is_it(angle):\n    hour, minute = divmod(angle, 30)\n    hour = int(hour + 12 * (hour == 0))\n    minute = int(minute * 2)\n    return '{:02d}:{:02d}'.format(hour, minute)", "def what_time_is_it(angle):\n    h=angle//30\n    m=(angle%30)*2\n    return '%02d:%02d'%(h,m) if h else '12:%02d'%m", "from math import floor\n\ndef what_time_is_it(angle):\n    hr, mt = divmod(12 * angle, 360)\n    if hr < 1:\n        hr = 12\n    hr = f\"{floor(hr)}\".rjust(2, \"0\")\n    mt = f\"{floor(mt) // 6}\".rjust(2, \"0\")\n    return f\"{hr}:{mt}\"", "def what_time_is_it(angle):\n    n=60*12*angle/360\n    return \"%02d:%02d\"%(int(n//60) or 12,int(n%60))\n", "what_time_is_it=lambda a: '%02d:%02d' % (int(a/30) or 12, a%30 *2)", "def what_time_is_it(angle):\n    return str(int(angle/30) or 12).zfill(2)+':'+str(int(angle%30*2)).zfill(2)", "what_time_is_it=lambda a:'%02d:%02d'%(a//30or 12,a%30*2)", "def what_time_is_it(angle):\n    minutes = int(angle * 2)\n    hours = (minutes // 60) or 12\n    minutes %= 60\n    return f\"{hours:02}:{minutes:02}\"", "def what_time_is_it(n):\n    from math import floor\n    temp = n * 2\n    hours = str(floor(temp / 60))\n    minutes = str(floor(temp % 60))\n    if (temp // 60 == 0):\n        hours = \"12\";\n    if (len(hours) == 1):\n        hours = \"0\" + hours\n    if (len(minutes) == 1):\n        minutes = \"0\" + minutes\n    return hours + \":\" + minutes", "def what_time_is_it(angle):\n    hour = str(int((angle//30) or 12)).zfill(2)\n    min = str(int(2*(angle%30))).zfill(2)  \n    return f'{hour}:{min}'  ", "def what_time_is_it(angle):\n    remain=int((angle-angle//30*30)/30*60)\n    hour=int(angle/30) if angle>=30 else 12\n    return \"{:02d}\".format(hour)+\":\"+\"{:02d}\".format(remain) if remain else \"{:02d}\".format(hour)+\":00\"", "def what_time_is_it(angle):\n    if angle % 360 == 0:\n        return '12:00'\n    m = int(angle % 360 / 360 * 720)\n    return '{}:{}'.format(str(m//60).zfill(2) if m//60 > 0 else '12', str(m%60).zfill(2))"]