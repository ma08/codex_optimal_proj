["import re;\ndef check_password(s):\n    if re.search('^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?\\d)(?=.*?[!@#$%^&*?])[a-zA-Z\\d!@#$%^&*?]{8,20}$', s) :\n        return 'valid'\n    else:\n        return 'not valid'", "import re\n\ndef check_password(s):\n    m = re.match(r'(?=.{8,20}$)(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*?])(?=^[a-zA-Z\\d!@#$%^&*?]*$)', s)\n    return 'valid' if m else 'not valid'", "import re\n\nPATTERN = re.compile(\n'^'                   # begin string\n'(?=.*?[A-Z])'        # at least one uppercase letter\n'(?=.*?[a-z])'        # at least one lowercase letter\n'(?=.*?\\d)'           # at least one digit\n'(?=.*?[!@#$%^&*?])'  # at least one special character\n'[A-Za-z\\d!@#$%^&*?]' # only the given characters\n'{8,20}'              # between 8 and 20 characters long\n'$'                   # end string\n)\n\ndef check_password(s):\n    return \"valid\" if PATTERN.match(s) else \"not valid\"", "from re import sub\n\ndef check_password(string):\n    reduced = sub(\"[a-z]\", \"a\", sub(\"[A-Z]\", \"A\", sub(\"[0-9]\", \"0\", sub(\"[!@#$%^&*?]\", \"!\", string))))\n    return \"valid\" if 8 <= len(string) <= 20 and set(reduced) == set(\"aA0!\") else \"not valid\"\n\n\n\n\n\n## without re\n#from string import ascii_lowercase as LOW, ascii_uppercase as UPP, digits as DIG\n\n## without import\n#LOW = \"abcdefghijklmnopqrstuvwxyz\"\n#UPP = LOW.upper()\n#DIG = \"0123456789\"\n\n#SPE = \"!@#$%^&*?\"\n#ALLOWED = (LOW, UPP, DIG, SPE)\n\n#def check_password(string):\n#    reduced = string.translate(str.maketrans(\"\".join(ALLOWED), \"\".join(s[0]*len(s) for s in ALLOWED)))\n#    return \"valid\" if 8 <= len(string) <= 20 and set(reduced) == set(s[0] for s in ALLOWED) else \"not valid\"\n", "def check_password(s):\n    c1 = 8 <= len(s) <=20\n    c2 = any([i.isupper() for i in s])\n    c3 = any([i.islower() for i in s])\n    c4 = any([i.isdigit() for i in s])\n    c5 = any([i for i in s if i in '!@#$%^&*?'])\n    c6 = not any([i for i in s if i not in '!@#$%^&*?' and not i.isupper() and not i.islower() and not i.isdigit()])\n    return 'valid' if c1 and c2 and c3 and c4 and c5 and c6 else 'not valid'", "from re import search\n\ndef check_password(s):\n    return 'valid' if bool(search('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*?])[\\w!@#$%^&*?]{8,20}$', s)) else 'not valid'", "import re\ndef check_password(s):\n    if len(s) > 20 or len(s) < 8: return \"not valid\"\n    a1 = bool(re.search(r'[A-Z]', s))\n    a2 = bool(re.search(r'[a-z]', s))\n    a3 = bool(re.search(r'\\d', s))\n    a4 = bool(re.search(r'[!@#$%^&*?]', s))\n    a5 = bool(re.search(r'^[A-Za-z!@#$%^&*?\\d]*$', s))\n    return \"valid\" if a1*a2*a3*a4*a5 else \"not valid\"", "import re\n\ndef check_password(s):\n    return 'valid' if re.search(r'^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*?])[A-Za-z0-9!@#$%^&*?]{8,20}$', s) else 'not valid'", "from string import digits as D, ascii_lowercase as L, ascii_uppercase as U\nS = \"!@#$%^&*?\"\n\n\ndef check_password(s):\n    return \"valid\" if 8 <= len(s) <= 20 \\\n                and all(c in D+L+U+S for c in s) \\\n                and any(c in D for c in s) \\\n                and any(c in L for c in s) \\\n                and any(c in U for c in s) \\\n                and any(c in S for c in s) \\\n                else \"not valid\"", "def check_password(s):\n    import re\n    chars = \"!@#$%^&*?1234567890qazwsxedcrfvtgbyhnujmiklopQAZWSXEDCRFVTGBYHNUJMIKLOP\"\n    sp = \"[!@#$%^&*?]\"\n    a=\"[a-z]\"\n    if len(s) in range(8,21):\n        for c in s:\n            if c not in chars:\n                return \"not valid\"            \n    else:\n        return \"not valid\"\n    if all((re.search(sp,s), re.search(\"\\d\",s), re.search(a,s), re.search(a.upper(),s))):\n          return \"valid\" \n    else:\n        return \"not valid\""]