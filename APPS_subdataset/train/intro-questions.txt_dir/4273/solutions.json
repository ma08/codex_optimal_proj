["def shorten_to_date(long_date):\n    return long_date.split(',')[0]", "def shorten_to_date(long_date):\n    return long_date[:long_date.index(',')]", "def shorten_to_date(long_date):\n    return long_date[:long_date.rfind(',')]\n", "def shorten_to_date(long_date):\n    index = long_date.index(',')\n    new_string = long_date[:index]\n    return (new_string)", "import re    \ndef shorten_to_date(long_date):\n    return re.sub(r\",.+$\",'',long_date)", "def shorten_to_date(long_date):\n    #your code here\n    num = long_date.find(',')\n    return long_date[0:num]", "shorten_to_date = lambda d: d[:d.find(\",\")]", "def shorten_to_date(long_date):\n    list = long_date.split(\",\")\n    return list[0]", "def shorten_to_date(long_date):\n    date, time = long_date.split(\",\")\n    return date\n", "def shorten_to_date(long_date: str) -> str:\n    return long_date.split(',')[0]", "def shorten_to_date(long_date):\n    #your code here\n    shorted = long_date.split(',')\n    return shorted[0]", "def shorten_to_date(long_date):\n    a=len(long_date)-(long_date.index(\",\"))\n    return long_date[:-a]", "def shorten_to_date(long_date):\n    for i in range(len(long_date)):\n        if (long_date[i] == ','):\n            return long_date[:i]\n    return long_date", "shorten_to_date=lambda d: d.split(\",\")[0]", "import re\ndef shorten_to_date(long_date):\n    return re.sub(r',\\s[0-9]+pm|,\\s[0-9]+am', '', long_date)", "import re\ndef shorten_to_date(long_date):\n    return re.sub(', ([1-9]|1[0-2])[ap]m',\"\",long_date)", "def shorten_to_date(long_date):\n    return long_date[:-5].replace(',','')", "def shorten_to_date(lon):\n    return lon[:lon.find(',')]  ", "def shorten_to_date(long_date):\n    return ' '.join(long_date.split()[:-1]).replace(',', '')", "def shorten_to_date(long_date):\n    x = long_date.split(',')\n    del x[-1]\n    return x[0]\n", "import re\ndef shorten_to_date(long_date):\n    long_date = re.sub(\", \\d\\d[pa]m\", \"\", long_date)\n    long_date = re.sub(\", \\d[ap]m\", \"\", long_date)\n    return long_date", "shorten_to_date = lambda long_date: long_date.split(',')[0]", "from re import match\n\ndef shorten_to_date(long_date: str) -> str:\n    \"\"\" Get the shortened format of the given date (without time part). \"\"\"\n    return match(\"(?P<short_date>.+),\", long_date).groupdict().get(\"short_date\")", "def shorten_to_date(long_date):\n    f = long_date.find(', ')\n    return long_date[: f]\n", "def shorten_to_date(long_date):\n    splitString = long_date.split()\n    return splitString[0] + \" \" + splitString[1] + \" \" + splitString[2].rstrip(',')", "def shorten_to_date(long_date):\n    #your code here\n    broken = long_date.split(\" \")\n    date = str(broken[2]).strip(\",\")\n    return broken[0]+\" \"+broken[1]+\" \"+date", "def shorten_to_date(long_date):\n    return long_date[0:long_date.find(',')] #Truncate after ','\n", "import re\n\ndef shorten_to_date(long_date):\n    return re.match('[^,]+', long_date).group()", "def shorten_to_date(long_date):\n    end = long_date.index(',')\n    return long_date[:end]", "def shorten_to_date(long_date):\n    #your code here   index = long_date.find(',')\n     index = long_date.find(',')\n     return long_date [0:index]", "def shorten_to_date(long_date):\n    if (long_date.endswith('pm') or long_date.endswith('am')):\n        split_long_date = long_date.split(',',1) #split string. [0] - before coma. [1]coma and all after coma\n        return split_long_date[0]", "def shorten_to_date(long_date):\n    a = long_date.split(', ')\n    b = ''.join(a[:-1])\n    return b", "def shorten_to_date(long_date):\n    char = long_date.split()[:-1]\n    tuple_char = char[0], char[1], char[2][:-1]\n    result = ' '.join(tuple_char)\n    return result", "def shorten_to_date(long_date):\n    short_date, spare = long_date.split(\",\")\n    \n    return (short_date)", "import re\n\ndef shorten_to_date(long_date):\n    match_date = re.search('\\w*\\s\\w*\\s\\d*', long_date)\n    return match_date.group(0)", "def shorten_to_date(long_date):\n    return \" \".join([i.replace(',', '') for i in long_date.split()[:-1]])", "def shorten_to_date(long_date):\n    long_date = long_date.split(\",\")\n    return str(long_date[0])", "def shorten_to_date(long_date):\n    for i in range(-6,-3):\n        if long_date[i]==\",\":\n            return long_date[:i]", "def shorten_to_date(long_date):\n    a = long_date.split(\",\")\n    x = list(a)\n    return(' '.join(x[:-2] + x[:-1]))", "def shorten_to_date(long_date):\n    cut_off = long_date.index(',')\n    return long_date[:cut_off]\n        \n        \n        \n", "def shorten_to_date(long_date):\n    list = long_date.split(',')\n    return str(list[0])", "def shorten_to_date(long_date):\n    space = long_date.index(\",\")\n    return long_date[:space]\n", "def shorten_to_date(long_date):\n    comma = long_date.find(\",\")\n    return long_date[0:comma]\n", "def shorten_to_date(long_date):\n    date = long_date.split()\n    actual = str(date[0]+\" \"+date[1]+\" \"+date[2])\n    actual = actual.replace(\",\",\"\")\n    return actual", "def shorten_to_date(long_date):\n    res = \"\"\n    i = 0\n    while long_date[i] != ',':\n        res += long_date[i]\n        i += 1\n    return res", "def shorten_to_date(long_date):\n    long_date=long_date.split(',')\n    return long_date.pop(0)", "def shorten_to_date(long_date):\n    komma = ','\n    string_short = long_date.split(komma, 1)[0]\n    return string_short", "def shorten_to_date(long_date):\n    long_date = long_date.replace(',', '')\n    long_date = long_date.split(\" \")\n    del long_date[3]\n    long_date = \" \".join(long_date)\n    return long_date\n\nprint(shorten_to_date(\"Monday February 2, 8pm\"))", "def shorten_to_date(long_date):\n    return \" \".join(list(long_date.split())[0:3]).replace(\",\", \"\")", "def shorten_to_date(date):\n    date = date.replace(',','').split(' ')\n    return date[0] + ' ' + date[1] + ' ' + date[2]", "def shorten_to_date(d):\n    s=\"\"\n    for i in d:\n        if i ==\",\":\n            break\n        else:\n            s+=i\n    return s", "def shorten_to_date(long_date):\n    string = str(long_date)\n    string = string.replace(',','')\n    string = string.split(' ')\n    string.pop()\n    string = ' '.join(string)\n    return string", "def shorten_to_date(long_date):\n    ld = long_date\n    ind = ld.index(',')\n    return ld[:ind]", "def shorten_to_date(long_date):\n    string = \"\"\n    for c in long_date:\n        if c != \",\":\n            string += c\n        else:\n            return string\n", "def shorten_to_date(long_date: str) -> str:\n    return long_date.split(\",\", maxsplit=1)[0]\n", "def shorten_to_date(long_date):\n    sep = long_date.find(',')\n    return (long_date[:sep])\n", "def shorten_to_date(long_date):\n    a = long_date.find(\",\")\n    b = long_date[0:a]\n    return b", "def shorten_to_date(long_date):\n    \"\"\"condenses extended date into a short one\"\"\"\n    short_date = ''\n    for i in range(len(long_date)):\n        if long_date[i] != \",\":\n                short_date = short_date + long_date[i]\n        else:\n            break\n    print(short_date)\n    return short_date", "def shorten_to_date(long_date):\n    if long_date[-4] in '123456789': return long_date[0:-6]\n    else: return long_date[0:-5]", "def shorten_to_date(long_date):\n    jour, mois, year = (long_date.split())[0], (long_date.split())[1], (long_date.split())[2]\n    if year[1] == \",\":\n        year = year[0]\n    elif year[2] == \",\":\n        year = year[0]+year[1]\n    date = jour + \" \" + mois + \" \" + year\n    #date = \"{} {} {}\".format(jour,mois,year)\n    return date\n    #your code here\n", "def shorten_to_date(long_date):\n    test = long_date.split(',')\n    return test[0]", "def shorten_to_date(long_date):\n    return long_date[:long_date.index(',')]\n    # returns the string up to where the , is\n", "def shorten_to_date(long_date):\n    return ' '.join(long_date.split(' ')[:3]).replace(',', '')\n    # output joins a string that been split from the input, consists of the first 3 elements, and removes the ,\n", "def shorten_to_date(long_date):\n    split1 = long_date.split(\", \")\n    split2 = split1[0]\n    return split2", "def shorten_to_date(long_date):\n    for element in long_date:\n        a = long_date.index(\",\")\n    return long_date[0:a]\n    #your code here\n", "def shorten_to_date(long_date):\n    short=[]\n    words = long_date.split(' ')\n    for word in words:\n        if word != words[2] and word != words[3]:\n            short.append(word)\n        elif word == words[2]:\n            short.append(word[:-1])\n    shortjoin = ' '.join(short)\n    return shortjoin", "def shorten_to_date(long_date: str) -> str:\n    return long_date[: long_date.find(\",\")]", "def shorten_to_date(long_date):\n    short_date=long_date.replace(\",\", \"\").split(\" \")\n    short_date.pop()\n    return \" \".join(short_date)", "def shorten_to_date(long_date):\n    return long_date[:-4].replace(\",\", \"\").rstrip()", "def shorten_to_date(long_date):\n    long_date=long_date.split()\n    long_date.pop()\n    long_date=\" \".join(long_date)\n    return long_date.replace(\",\",\"\")", "def shorten_to_date(long_date):\n    return long_date.split(sep=\",\")[0]", "def shorten_to_date(long_date):\n    b=long_date.split(',')\n    return(str(b[0]))", "def shorten_to_date(long_date):\n    newdate = long_date.replace(',','')\n    lst = list(newdate.split(\" \"))\n    listnew = lst[:4]\n    \n    return f\"{listnew[0]} {listnew[1]} {listnew[2]}\"", "def shorten_to_date(long_date):\n    shorten = ''\n    for i in long_date:\n        if i == ',':\n            break\n        shorten += i   \n        \n    return shorten", "def shorten_to_date(long_date):\n    counter = 0\n    for i in long_date:\n        if i == \",\":\n            counter = long_date.find(i)\n    return long_date[:counter]", "def shorten_to_date(long_date):\n    date_split = long_date.split()\n    \n    date_split_no_time = date_split[:3]\n    short_date = ' '.join(date_split_no_time)\n    short_date = short_date.replace(\",\",\"\")\n    return short_date", "def shorten_to_date(long_date):\n    \n    long_date = long_date.rsplit(' ', 1)[0].replace(',', '')\n    return long_date", "def shorten_to_date(long_date):\n    date_list = long_date.split(\" \")\n    del date_list[-1]\n    short_date = \" \".join(date_list)\n    short_date = short_date[:-1]\n    return short_date\n", "def shorten_to_date(long_date):\n    short=''\n    for i in long_date:\n        if i==\",\":\n            break\n        short+=i\n    return short", "def shorten_to_date(long_date):\n    x = \"\"\n    for i in long_date:\n        if i != \",\":\n            x += i\n        else: break\n    return x", "def shorten_to_date(ld):\n    return ld[:ld.find(',')]", "def shorten_to_date(long_date):\n    pos = 0\n    for i in range(len(long_date)):\n        pos += 1\n        if long_date[i] == ',':\n            break\n    \n    pos -= 1\n    return long_date[:pos]", "def shorten_to_date(long_date):\n    return long_date.replace(long_date[long_date.index(\",\"):],\"\")", "def shorten_to_date(long_date):\n    x = []\n    for i in range(len(long_date)):\n        if long_date[i] == \",\":\n            break\n        x.append(long_date[i])\n    s = ''.join(x)\n    \n    return s", "import re\n\ndef shorten_to_date(long_date):\n    return re.sub(',\\s\\d\\w.+','',long_date)\n    #your code here\n", "def shorten_to_date(long_date):\n    long_date.split(\", \")\n    if \"10pm\" in long_date or \"11pm\" in long_date or '12pm' in long_date or '10am' in long_date or '11am' in long_date or '12am' in long_date:\n        return long_date[0:len(long_date) - 6]\n    else:\n        return long_date[0:len(long_date) - 5]", "def shorten_to_date(long_date):\n    new_date = long_date.partition(\",\")\n    return new_date[0]\n", "def shorten_to_date(long_date):\n    #your code here\n    g = long_date.rfind(',')\n    return long_date[0:g]", "def shorten_to_date(long_date):\n    #your code here\n    fecha=long_date.split(',')\n    return fecha[0]\n", "def shorten_to_date(long_date):\n    x = long_date.split(',')\n    shortened = x[:1]\n    emptystring = ''\n    for eachchar in shortened:\n        emptystring = emptystring + eachchar\n    return emptystring\n", "def shorten_to_date(long_date):\n    sep = ','\n    short_date = long_date.split(sep)[0]\n    return short_date\n", "def shorten_to_date(long_date):\n    ans = \"\"\n    i = 0\n    while long_date[i] != \",\":\n        ans = ans + long_date[i]\n        i = i + 1\n    return ans", "def shorten_to_date(x):\n    xs = x.rsplit(\", \",1)\n    print(xs)\n    xs.pop(1)\n    print(xs)\n    short_date= \" \"\n    return short_date.join(xs)\n", "def shorten_to_date(long_date):\n    return ' '.join(long_date.split(',')[0:-1])", "def shorten_to_date(long_date):\n    splitted = long_date.split(',')\n    return splitted[0]", "def shorten_to_date(long_date):\n    sep = ','\n    return(sep.join(long_date.split(sep)[:-1]))", "def shorten_to_date(long_date):\n    l=([x.strip(',') for x in long_date.split(',')])\n    del l[-1]\n    return (' ').join(l)", "def shorten_to_date(long_date):\n      bruh = long_date[:long_date.index(\",\")]\n      return bruh", "import re\ndef shorten_to_date(long_date):\n    return re.sub(', [0-9]{1,2}(a|p)m', '', long_date)"]