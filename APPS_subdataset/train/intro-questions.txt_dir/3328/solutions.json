["def caeser(message, key):\n    return ''.join(chr(65 + (ord(c.upper()) + key - 65) % 26) if c.isalpha() else c for c in message)", "def caeser(message, key):\n    return ''.join(chr(ord(x)+key if ord(x)+key <= 122 else ord(x)+key-122 + 96).upper() if x.isalpha() else x for x in message)", "import string\n\ndef caeser(message, key):\n    return ''.join([chr((ord(s.upper()) + key - 65) % 26 + 65) if s in string.ascii_lowercase else s for s in message])", "def caeser(m, k):\n    r=\"\"; M=m.upper()\n    for c in M:\n       if c>='A' and c<='Z': r+=chr(65+(ord(c)-65+k)%26)\n       else: r+=c\n    return r", "def caeser(message, key): return''.join('ABCDEFGHIJKLMNOPQRSTUVWXYZ'[('ABCDEFGHIJKLMNOPQRSTUVWXYZ'.index(el)+key)%len('ABCDEFGHIJKLMNOPQRSTUVWXYZ')] if el in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' else el for el in message.upper())", "def caeser(message, key):\n    return \"\".join( char_if(c,key) for c in message.upper() )\n\ndef char_if(char, key):\n    alpha = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    return alpha[(alpha.index(char)+key)%26] if char in alpha else char\n", "def caeser(m, k):\n    m = m.lower()\n    return ''.join([chr((ord(i)-ord('a')+k)%26+ord('a')).upper() if i.isalpha() else i for i in m])", "import string\n\ndef caeser(message, key=1):\n    letters = string.ascii_lowercase\n    mask = letters[key:] + letters[:key]\n    trantab = str.maketrans(letters, mask)\n    return message.translate(trantab).upper()"]