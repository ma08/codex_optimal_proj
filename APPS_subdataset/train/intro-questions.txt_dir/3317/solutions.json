["def gr33k_l33t(string):\n    gl = {  \"a\":\"\u03b1\", \"b\":\"\u03b2\", \"d\":\"\u03b4\", \"e\":\"\u03b5\", \"i\":\"\u03b9\", \"k\":\"\u03ba\", \"n\":\"\u03b7\", \"o\":\"\u03b8\", \n            \"p\":\"\u03c1\", \"r\":\"\u03c0\", \"t\":\"\u03c4\", \"u\":\"\u03bc\", \"v\":\"\u03c5\", \"w\":\"\u03c9\", \"x\":\"\u03c7\", \"y\":\"\u03b3\"  }\n    return \"\".join([gl.get(letter, letter) for letter in string.lower()])", "lib = {'a':'\u03b1', 'b':'\u03b2', 'd':'\u03b4', 'e':'\u03b5', 'i':'\u03b9', 'k':'\u03ba', 'n':'\u03b7', 'o':'\u03b8', 'p':'\u03c1', 'r':'\u03c0', 't':'\u03c4', 'u':'\u03bc', 'v':'\u03c5', 'w':'\u03c9', 'x':'\u03c7', 'y':'\u03b3'}\ngr33k_l33t = lambda s: \"\".join([lib[c] if c in lib else c for c in s.lower()])", "def gr33k_l33t(string):\n    doc = { e[0].lower():e[-1] for e in 'A=\u03b1 B=\u03b2 D=\u03b4 E=\u03b5 I=\u03b9 K=\u03ba N=\u03b7 O=\u03b8 P=\u03c1 R=\u03c0 T=\u03c4 U=\u03bc V=\u03c5 W=\u03c9 X=\u03c7 Y=\u03b3'.split() }\n    return ''.join( doc.get(e,e) for e in string.lower() )", "def gr33k_l33t(s):\n    doc = {\n        'a':'\u03b1', 'b':'\u03b2', 'd':'\u03b4', 'e':'\u03b5', 'i':'\u03b9', 'k':'\u03ba', 'n':'\u03b7', 'o':'\u03b8', \n        'p':'\u03c1', 'r':'\u03c0', 't':'\u03c4', 'u':'\u03bc', 'v':'\u03c5', 'w':'\u03c9', 'x':'\u03c7', 'y':'\u03b3'\n          }\n    return ''.join(doc.get(e ,e) for e in s.lower())", "trans = str.maketrans(\"abdeiknoprtuvwxy\", \"\u03b1\u03b2\u03b4\u03b5\u03b9\u03ba\u03b7\u03b8\u03c1\u03c0\u03c4\u03bc\u03c5\u03c9\u03c7\u03b3\")\n\ndef gr33k_l33t(string):\n    return string.lower().translate(trans)", "def gr33k_l33t(string):\n  return string.lower().translate(str.maketrans('abdeiknoprtuvwxy', '\u03b1\u03b2\u03b4\u03b5\u03b9\u03ba\u03b7\u03b8\u03c1\u03c0\u03c4\u03bc\u03c5\u03c9\u03c7\u03b3'))", "def gr33k_l33t(string):\n  greek = {'A':'\u03b1','B':'\u03b2','D':'\u03b4','E':'\u03b5','I':'\u03b9','K':'\u03ba','N':'\u03b7','O':'\u03b8','P':'\u03c1','R':'\u03c0','T':'\u03c4','U':'\u03bc','V':'\u03c5','W':'\u03c9','X':'\u03c7','Y':'\u03b3'}\n  return ''.join(greek.get(c.upper(), c.lower()) for c in string)", "table = {'A': '\u03b1', 'B': '\u03b2', 'D': '\u03b4', 'E': '\u03b5', 'I': '\u03b9', 'K': '\u03ba',\n         'N': '\u03b7', 'O': '\u03b8', 'P': '\u03c1', 'R': '\u03c0', 'T': '\u03c4', 'U': '\u03bc',\n         'V': '\u03c5', 'W': '\u03c9', 'X': '\u03c7', 'Y': '\u03b3'}\n\ndef gr33k_l33t(string):\n    result = []\n    for a in string.upper():\n        try:\n            result.append(table[a])\n        except KeyError:\n            result.append(a.lower())\n    return ''.join(result)\n", "# -*- coding: utf-8 -*-\na = {'A': '\u03b1', 'B': '\u03b2', 'D': '\u03b4', 'E': '\u03b5', 'I': '\u03b9', 'K': '\u03ba', 'N': '\u03b7', 'O': '\u03b8', 'P': '\u03c1', 'R': '\u03c0', 'T': '\u03c4',\n     'U': '\u03bc', 'V': '\u03c5', 'W': '\u03c9', 'X': '\u03c7', 'Y': '\u03b3'}\n\n\ndef gr33k_l33t(string):\n    b = list(string.upper())\n    return ''.join([a[x] if x in a else x.lower() for x in b])"]