["def square_up(n):\n    return [j if j <= i else 0 for i in range(1, n+1) for j in range(n, 0, -1)]\n", "def square_up(n):\n    result = []\n    for i in range(1, n + 1):\n        result.extend([0] * (n - i) + list(range(i, 0,  -1)))\n    return result\n    \n\n", "def square_up(n):\n    lst = []\n    max = 1\n    while max <=n:\n        for x in range(n,0,-1):\n            if x-max < 1:\n                lst.append(x)\n            else:\n                lst.append(0)\n        max+=1\n\n    return lst", "from itertools import chain, repeat\n\ndef square_up(n):\n    return list(chain.from_iterable(\n        chain(repeat(0, n-i), range(i, 0, -1))\n        for i in range(1, n+1)\n    ))", "def square_up(n):\n    x = list(range(n,0,-1))\n    y = [ ([0] * i + x[i:]) for i in range(n-1,-1,-1)    ]\n    return [i for l in y for  i in l] \n", "def square_up(n):\n    sqrList = [0 for _ in range(n*n)]\n\n    #we build the square list, from right to left, in sets\n    # e.g. for n==5  [5i-1,  5i-2,  5i-3,  5i-4, 5i-5]  for i = 1,2,...,n\n    for i in range(1,n+1):          #iterate over the  1,2,...,n sets\n        index = n*i - 1             #Start the index in the right most index of the set n\n        for j in range(1, i+1):     #pattern: 1, 1;2, 1;2;3, 1;2;3;4, ..., 1;2;3;;;n \n            sqrList[index] = j\n            index -=1\n\n    return sqrList\n#-----end function\n", "def square_up(n):\n    a = []\n    for j in range(1,n+1):\n        for i in range(n, j, -1):\n            a.append(0)\n        for i in range(j, 0, -1):\n            a.append(i)\n    return a\n", "def square_up(n):\n    \"\"\"\n    Codewars \u7ec3\u4e60\u9898: Array - squareUp b!\n    :param n:\n    :return:\n    \"\"\"\n    ans = []\n    for i in range(1, n + 1):\n        for k in range(n - i):\n            ans.append(0)\n        for j in range(i, 0, -1):\n            ans.append(j)\n    return ans", "def square_up(n):\n    return [n - j if n - j - 1 <= i else 0 for i in range(n) for j in range(n)]", "square_up=lambda n:sum([[0]*(i-1)+list(range(n,0,-1))[i-1:] for i in range(n,0,-1)], [])"]