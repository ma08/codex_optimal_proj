["def winner(candidates):\n    try:\n        assert len(candidates) == 3\n        max_total = 0\n        for c in candidates:\n            name, scores = c['name'], c['scores']\n            assert 1 <= len(scores) <= 2\n            assert all(not s % 5 and 0 < s <= 100 for s in scores)\n            total = sum(scores)\n            if max_total < total <= 100:\n                selected, max_total = name, total\n        return selected\n    except:\n        return False", "def winner(candidates):\n    # Filter inputs\n    if len(candidates) != 3 or any(\n            not c.get(\"name\") or not c.get(\"scores\")\n            or len(c[\"scores\"]) not in (1, 2)\n            or any(s % 5 or not (5 <= s <= 100) for s in c[\"scores\"])\n            for c in candidates):\n        return False\n    \n    qualified = [c for c in candidates if sum(c[\"scores\"]) <= 100]\n    if not qualified: return False\n    \n    winner = max(qualified, key=lambda c: sum(c[\"scores\"]))\n    return winner[\"name\"]", "def winner(candidates):\n    cs = [\n        c\n        for c in candidates\n        if 'name' in c\n        and 'scores' in c\n        and 1 <= len(c['scores']) <= 2\n        and all(5 <= s <= 100 and s % 5 == 0 for s in c['scores'])\n    ]\n    if len(cs) != 3:\n        return False\n    winner = False\n    m = 0\n    for candidate in candidates:\n        s = sum(candidate['scores'])\n        if 100 >= s > m:\n            winner = candidate['name']\n            m = s\n    return winner", "def winner(c):\n    try    : assert len(c)==3 and\\\n                    all(0<len(i['scores'])<3 and all(not k%5 and -1<k<101 for k in i['scores']) for i in c if i['name'])and\\\n                    not all(sum(k['scores'])>100 for k in c)\n    except : return False\n    return max([[i['name'],sum(i['scores'])] for i in c],key=lambda x:x[1]<101 and x[1])[0]", "def isValidCnd(c):\n    return all(k in c for k in ('name','scores')) and 0<len(c['scores'])<3 and all(not v%5 and 0<v<=100 for v in c['scores'])\n\ndef winner(cnds):\n    if len(cnds) != 3 or not all(isValidCnd(c) for c in cnds): \n        return False\n    return max(( (sum(c['scores']),-i,c['name']) for i,c in enumerate(cnds) if 0<=sum(c['scores'])<=100), default=(0,0,False))[2]", "def winner(players):\n    total_players = winner_name = winner_score = 0\n    for p in players:\n        try:\n            name = p['name']\n            scores = p['scores']\n        except KeyError:\n            return False\n        score_total = total_spins = 0\n        total_players += 1\n        for score in scores:\n            if score > 100 or score % 5:\n                return False\n            score_total += score\n            total_spins += 1\n        if total_spins not in (1, 2):\n            return False\n        elif score_total > 100:\n            continue\n        elif score_total > winner_score:\n            winner_name = name\n            winner_score = score_total\n    return winner_name if winner_score and total_players == 3 else False", "def winner(candidates):\n    if any(c.keys() != ['name', 'scores'] for c in candidates):\n        return False\n    if any([len(candidates)!= 3, \n            any(len(c['scores']) not in (1,2) for c in candidates),\n            any( not(5 <= i <= 100) or (i % 5 != 0) for c in candidates for i in c['scores'])]):\n        return False\n\n    m = 0\n    for c in candidates:\n        if m < sum(c['scores']) <= 100:\n            m = sum(c['scores'])\n            w = c['name']\n    return w if m > 0 else False", "def winner(candidates):\n    if len(candidates) != 3 or any(\n            not c.get(\"name\") or not c.get(\"scores\")\n            or len(c[\"scores\"]) not in (1, 2)\n            or any(s % 5 or not (5 <= s <= 100) for s in c[\"scores\"])\n            for c in candidates):\n        return False\n    \n    qualified = [c for c in candidates if sum(c[\"scores\"]) <= 100]\n    return (max(qualified, key=lambda c: sum(c[\"scores\"]))[\"name\"]\n        if qualified else False)", "def winner(candidates):\n    if len(candidates) != 3 or not all(set(('name','scores'))==set(c.keys()) and len(c['scores']) in [1, 2] and all(s%5==0 and s>=5 and s<=100 for s in c['scores']) for c in candidates):\n        return False\n    candidates = filter(lambda c:sum(c['scores']) <= 100, candidates)\n    return sorted(candidates, key=lambda c:-sum(c['scores']))[0]['name'] if candidates else False", "def winner(cs):\n    if not (len(cs)==3 and all('name' in c and 'scores' in c and len(c['scores']) in (1,2) and all(5<=s<=100 and not s%5 for s in c['scores']) for c in cs)): return False\n    cs={c['name']:(sum(c['scores']),-i) for i,c in enumerate(cs)}\n    try: return max((c for c in cs.items() if c[1][0]<=100),key=lambda c:c[1])[0]\n    except: return False"]