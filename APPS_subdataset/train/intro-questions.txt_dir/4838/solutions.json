["def find_nth_occurrence(substring, string, occurrence=1):\n    idx = -1\n    for i in range(occurrence):\n        idx = string.find(substring, idx + 1)\n        if idx == -1: return -1\n    return idx", "import re\ndef find_nth_occurrence(sb, s, n=1):\n    r = list(re.finditer('(?='+sb+')', s))\n    return r[n-1].span()[0] if n<=len(r) else -1", "import re\n\ndef find_nth_occurrence(substring, string, occurrence):\n    try: return [s.start() for s in re.finditer(\"(?=\" + substring + \")\", string)][occurrence-1]\n    except: return -1\n", "def find_nth_occurrence(substring, string, occurrence=1):\n    i = -1\n    for _ in range(occurrence):\n        i = string.find(substring, i + 1)\n        if i == -1:\n            break\n    return i", "def find_nth_occurrence(substring, string, occurrence=1):\n    index = -1\n    for occ in range(0,occurrence):\n        index = string.find(substring,index+1)\n    return index\n", "def find_nth_occurrence(w, s, n=1, k=0):\n    for i in range(len(s)):\n        if s[i:i+len(w)] == w:\n            k += 1\n            if k == n:\n                return i\n    else:\n        return -1", "def find_nth_occurrence(substring, string, occurrence=1):\n    indicies = [i for i in range(len(string)) if string.startswith(substring, i)]\n    if occurrence > len(indicies):\n        return -1\n    else:\n        return indicies[occurrence - 1]\n", "import re\n\ndef find_nth_occurrence(substring, string, occurrence=1):\n    try: return [m.start() for m in re.finditer(f'(?={substring})', string)][occurrence-1] \n    except: return -1\n", "def find_nth_occurrence(substring, string, occurrence=1):\n    c, i = 1, string.find(substring)\n    while c < occurrence and i > -1:\n        c, i = c + 1, string.find(substring, i + 1)\n    return i\n", "def find_nth_occurrence(substring, string, occurrence):\n    a = string.find(substring) \n    while a >=0 and occurrence > 1:\n        a = string.find(substring, a+1)\n        occurrence -= 1\n    return a\n"]