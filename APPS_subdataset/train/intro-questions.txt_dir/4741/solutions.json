["from string import punctuation\n\nt = str.maketrans(\"\", \"\", punctuation)\n\ndef pseudo_sort(s):\n    a = s.translate(t).split()\n    b = sorted(x for x in a if x[0].islower())\n    c = sorted((x for x in a if x[0].isupper()), reverse=True)\n    return \" \".join(b + c)", "from string import punctuation\ndef pseudo_sort(st): \n    capital_list = sorted([word.strip(punctuation) for word in st.split() if word[0].isupper()], reverse=True)\n    lower_list = sorted([word.strip(punctuation) for word in st.split() if word[0].islower()])\n    return \" \".join(lower_list + capital_list)\n", "def pseudo_sort(s): \n    s = ''.join(i for i in s if i.isalpha() or i is ' ')\n    a =  sorted(i for i in s.split() if i[0].islower())\n    b =  sorted((i for i in s.split() if i[0].isupper()),key=lambda x: x.lower(),reverse=True)\n    return ' '.join(a+b)", "from re import findall\n\ndef pseudo_sort(st): \n    lows = sorted(findall(r'\\b[a-z]+\\b', st))\n    ups  = sorted(findall(r'[A-Z][A-Za-z]*', st), reverse=True)\n    return ' '.join(lows + ups)", "def pseudo_sort(st):\n    words = st.translate(str.maketrans(\"\", \"\", \".,:;!?\")).split()\n    lower, upper = [], []\n    \n    for word in words:\n        if word[0].isupper():\n            upper.append(word)\n        else:\n            lower.append(word)\n    \n    return \" \".join(sorted(lower) + sorted(upper, reverse=True))", "import re\n\ndef pseudo_sort(st):\n    lower_case_words = re.findall(r'\\b[a-z]\\w*', st)\n    upper_case_words = re.findall(r'\\b[A-Z]\\w*', st)\n\n    lower_case_words.sort()\n    upper_case_words.sort(reverse=True)\n\n    return ' '.join(lower_case_words + upper_case_words)", "import re\n\ndef pseudo_sort(st): \n    st, upper, lower = re.sub(r'[^ \\w]','',st).split(), [], []\n    \n    for i in st:\n        if i[0].islower():\n            lower.append(i)\n        else:\n            upper.append(i)\n    \n    return ' '.join(sorted(lower) + sorted(upper)[::-1])", "def pseudo_sort(stg): \n    lowers, uppers = [], []\n    for word in \"\".join(char for char in stg if char.isalpha() or char == \" \").split():\n        (lowers if word[0].islower() else uppers).append(word)\n    return \" \".join(sorted(lowers) + sorted(uppers)[::-1])", "def pseudo_sort(st): \n    st = st.replace (\",\",\"\")\n    st = st.replace (\"!\",\"\")\n    st = st.replace (\".\",\"\")\n    st = st.replace (\":\",\"\")\n    st = st.replace (\";\",\"\")\n    st = st.replace (\"?\",\"\")\n    st = st.split()\n    lis1 = [i for i in st if i.islower() == True]\n    lis2 = [i for i in st if i[0].isupper() == True]\n    lis1.sort(reverse = False)\n    lis2.sort(reverse = True)\n    return \" \".join(lis1+lis2)", "import re\nfrom functools import cmp_to_key\n\ndef compare(a, b):\n    cmp1 = a[0].isupper() - b[0].isupper()\n    cmp2 = (a < b) - (a > b)\n    return cmp1 or cmp2 * (-1 if a[0].islower() else 1)\n\ndef pseudo_sort(st):\n    return ' '.join(sorted(re.findall(r'\\w+', st), key=cmp_to_key(compare)))"]