["def count_squares(n):\n    return sum([i * i for i in range(n + 1 ) ] )", "def count_squares(n):\n    return n*(n+1)*(2*n+1)/6", "def count_squares(n):  \n    \"\"\" Function that uses recursion to calculate the number of square units in an n X n square\"\"\"\n    if n == 1:\n        return 1\n    else:\n        return n**2 + count_squares(n - 1)", "def count_squares(n):\n    return n*(n+1)*(2*n+1)//6", "def count_squares(n):\n    return sum(x*x for x in range(n+1))", "count_squares=lambda n:n*(n+1)*(2*n+1)//6", "def count_squares(n):\n    return (n + 1) * (2 * n + 1) * n // 6", "def count_squares(n):\n    return count_squares(n-1) + n**2 if n > 0 else 0\n", "def count_squares(n):     \n    return n if n<2 else n ** 2 + count_squares(n-1)"]