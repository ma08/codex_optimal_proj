["from itertools import chain\n\nTOME = {\n    '8 weeks':   ['fiveInOne', 'pneumococcal', 'rotavirus', 'meningitisB'],\n    '12 weeks':  ['fiveInOne', 'rotavirus'],\n    '16 weeks':  ['fiveInOne', 'pneumococcal', 'meningitisB'],\n    '12 months': ['meningitisB', 'hibMenC', 'measlesMumpsRubella'],\n    '40 months': ['measlesMumpsRubella', 'preSchoolBooster'],\n    'september': ['offer fluVaccine'],\n    'october':   ['offer fluVaccine'],\n    'november':  ['offer fluVaccine'],\n}\n\ndef vaccine_list(*args):\n    return sorted(set(chain.from_iterable(\n        TOME.get(s,()) for s in args\n    )))", "d = {'fiveInOne':           ('8 weeks','12 weeks','16 weeks'),\n     'pneumococcal':        ('8 weeks','16 weeks'),\n     'rotavirus':           ('8 weeks','12 weeks'),\n     'meningitisB':         ('8 weeks','16 weeks','12 months'),\n     'hibMenC':             ('12 months',),\n     'measlesMumpsRubella': ('12 months','40 months'),\n     'offer fluVaccine':    ('september','october','november'),\n     'preSchoolBooster':    ('40 months',)}\nvaccine_list=lambda *args:sorted({k for i in args for k,l in d.items() if i in l if i!='up-to-date'})", "def vaccine_list(age, status, month):\n    vaccines = {\n        '8 weeks': {'fiveInOne', 'pneumococcal', 'rotavirus', 'meningitisB'},\n        '12 weeks' : {'fiveInOne', 'rotavirus'}, \n        '16 weeks' : {'fiveInOne', 'pneumococcal', 'meningitisB'}, \n        '12 months': {'meningitisB', 'hibMenC','measlesMumpsRubella'},\n        '40 months': {'measlesMumpsRubella', 'preSchoolBooster'},\n        'up-to-date': set(),\n        'september': {'offer fluVaccine'},\n        'october': {'offer fluVaccine'},\n        'november': {'offer fluVaccine'} }\n    return sorted(vaccines[age] | vaccines[status] | vaccines.get(month, set()))", "VACCINATIONS = {\n    \"fiveInOne\": [\"8 weeks\", \"12 weeks\", \"16 weeks\"],\n    \"pneumococcal\": [\"8 weeks\", \"16 weeks\"],\n    \"rotavirus\": [\"8 weeks\", \"12 weeks\"],\n    \"meningitisB\": [\"8 weeks\", \"16 weeks\", \"12 months\"],\n    \"hibMenC\": [\"12 months\"],\n    \"measlesMumpsRubella\": [\"12 months\", \"40 months\"],\n    \"preSchoolBooster\": [\"40 months\"],\n}\n\n\ndef vaccine_list(age, status, month):\n    return sorted(\n        ({\"offer fluVaccine\"} if month in [\"september\", \"october\", \"november\"] else set())\n        | {v for v, times in VACCINATIONS.items() if age in times or (status != \"up-to-date\" and status in times)}\n    )", "vaccinations = {\n    \"8 weeks\": {\"fiveInOne\", \"pneumococcal\", \"rotavirus\", \"meningitisB\"},\n    \"12 weeks\": {\"fiveInOne\", \"rotavirus\"},\n    \"16 weeks\": {\"fiveInOne\", \"pneumococcal\", \"meningitisB\"},\n    \"12 months\": {\"meningitisB\", \"hibMenC\", \"measlesMumpsRubella\"},\n    \"40 months\": {\"measlesMumpsRubella\", \"preSchoolBooster\"},\n    \"september\": {\"offer fluVaccine\"}, \"october\": {\"offer fluVaccine\"}, \"november\": {\"offer fluVaccine\"},\n}\n\ndef vaccine_list(age, status, month):\n    return sorted(vaccinations[age] | vaccinations.get(status, set()) | vaccinations.get(month, set()))", "vaccines = {\"8 weeks\": {\"fiveInOne\", \"pneumococcal\", \"rotavirus\", \"meningitisB\"},\n           \"12 weeks\": {\"fiveInOne\", \"rotavirus\"},\n           \"16 weeks\": {\"fiveInOne\", \"pneumococcal\", \"meningitisB\"},\n           \"12 months\": {\"meningitisB\", \"hibMenC\", \"measlesMumpsRubella\"},\n           \"40 months\": {\"measlesMumpsRubella\", \"preSchoolBooster\"},\n           \"september\": {\"offer fluVaccine\"},\n           \"october\": {\"offer fluVaccine\"},\n           \"november\": {\"offer fluVaccine\"}}\nget = lambda x: vaccines.get(x, set())\n\ndef vaccine_list(age, status, month):\n    return sorted(get(age) | get(status) | get(month))", "def vaccine_list(age, status, month):\n    # Your code\n    vaccine = {'fiveInOne' : ['8 weeks', '12 weeks', '16 weeks'], \n               'pneumococcal' : ['8 weeks', '16 weeks'],\n               'rotavirus' : ['8 weeks', '12 weeks'],\n               'meningitisB' : ['8 weeks', '16 weeks', '12 months'],\n               'hibMenC' : ['12 months'],\n               'measlesMumpsRubella' : ['12 months', '40 months'],\n               'fluVaccine' : ['september','october','november'],\n               'preSchoolBooster' : ['40 months']}\n    \n    req = []\n    \n    for jab in vaccine:\n        if status in vaccine[jab]:\n            req.append(jab)\n        if age in vaccine[jab] and jab not in req:\n            req.append(jab)\n    \n    if month in vaccine['fluVaccine']:\n        req.append('offer fluVaccine')\n    \n    req.sort()\n    \n    return req", "vaccines = {\n  '8 weeks': ['fiveInOne', 'pneumococcal', 'rotavirus', 'meningitisB'],\n  '12 weeks': ['fiveInOne', 'rotavirus'],\n  '16 weeks': ['fiveInOne', 'pneumococcal', 'meningitisB'],\n  '12 months': ['meningitisB', 'measlesMumpsRubella', 'hibMenC'],\n  '40 months': ['measlesMumpsRubella', 'preSchoolBooster'],\n  'september': ['offer fluVaccine'],\n  'october': ['offer fluVaccine'],\n  'november': ['offer fluVaccine']\n}\n\ndef vaccine_list(age, status, month):\n    lists_of_vaccines = [vaccines[v] for v in [age, status, month] if v in vaccines]\n    return sorted(list(set([v for lst in lists_of_vaccines for v in lst])))", "from itertools import chain\n\ndef vaccine_list(age, status, month): \n    flu_months = ['september','october','november'] \n    vac_sched = {'8 weeks': ['fiveInOne', 'pneumococcal', 'rotavirus', 'meningitisB'],\n                   '12 weeks': ['fiveInOne', 'rotavirus'],\n                   '16 weeks': ['fiveInOne', 'pneumococcal', 'meningitisB'],\n                   '12 months': ['meningitisB', 'hibMenC', 'measlesMumpsRubella'],\n                   '40 months': ['measlesMumpsRubella', 'preSchoolBooster']} \n    \n    if status == 'up-to-date':\n              status = age\n\n    vac_time = list(vac_sched.keys())\n    vacs_toDo = [v for k,v in vac_sched.items() if k in [status, age]]\n\n    vac_list = list(set(list(chain.from_iterable(vacs_toDo))))\n       \n    if month in flu_months:\n              vac_list.append('offer fluVaccine')\n\n    return sorted(vac_list)", "def vaccine_list(age, status, month):\n\n    dict = {'fiveInOne': ['8 weeks', '12 weeks', '16 weeks'], 'pneumococcal': ['8 weeks', '16 weeks'],\n            'rotavirus': ['8 weeks', '12 weeks'], 'meningitisB': ['8 weeks', '16 weeks', '12 months'],\n            'hibMenC': ['12 months'], 'measlesMumpsRubella': ['12 months', '40 months'],\n            'fluVaccine': ['september', 'october', 'november'], 'preSchoolBooster': ['40 months']}\n\n    vac_list = []\n    for key in dict:\n        if age in dict[key] or status in dict[key]:\n            vac_list.append(key)\n\n    if month in dict['fluVaccine']:\n        vac_list.append('offer fluVaccine')\n\n    return sorted(vac_list)"]