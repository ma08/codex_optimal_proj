["class Solution:\n    def numUniqueEmails(self, emails: List[str]) -> int:\n        s = [];\n        for email in emails:\n            for i in range(len(email)):\n                if email[i]=='@':\n                    localname = email[:i];\n                    domainname = email[i:];\n                    local = '';\n                    for x in localname:\n                        if x=='+':\n                            break;\n                        local += x;\n                    local = local.replace('.','');\n                    s.append(local+domainname);\n                    break;\n        return len(set(s));", "class Solution:\n    def numUniqueEmails(self, emails: List[str]) -> int:\n        result = set()\n        for email in emails:\n            state = 0\n            real = []\n            for c in email:\n                if state == 0:\n                    if c == '.':\n                        continue\n                    elif c == '+':\n                        state = 1\n                    elif c == '@':\n                        real.append('@')\n                        state = 2\n                    else:\n                        real.append(c)\n                elif state == 1:\n                    if c == '@':\n                        real.append('@')\n                        state = 2\n                elif state == 2:\n                    real.append(c)\n            result.add(''.join(real))\n        return len(result)", "class Solution:\n    def numUniqueEmails(self, emails: List[str]) -> int:\n        emailSet = set()\n        for email in emails:\n            newemail = []\n            afterplus = False\n            afterat = False\n            for ch in email:\n                if afterat:\n                    newemail.append(ch)\n                else:\n                    if ch == '.':\n                        pass\n                    elif ch == '+':\n                        afterplus=True\n                    elif ch == '@':\n                        newemail.append(ch)\n                        afterat=True\n                    else:\n                        if not afterplus:\n                            newemail.append(ch)\n            emailSet.add(''.join(newemail))\n        return len(emailSet)", "class Solution:\n    def numUniqueEmails(self, emails: List[str]) -> int:\n        dic = {}\n        for email in emails:\n            new_email=''\n            flag = 0\n            for i in range(len(email)):\n                if email[i] == '.':\n                    continue\n                if email[i] == '+':\n                    flag = 1\n                elif email[i] == '@':\n                    new_email += email[i:]\n                    break\n                else:\n                    if flag == 0:\n                        new_email += email[i]\n            dic[new_email] = 1\n        return len(dic)", "class Solution:\n    def numUniqueEmails(self, emails: List[str]) -> int:\n        dic = set([])\n        for email in emails:\n            new_email=''\n            flag = 0\n            for i in range(len(email)):\n                if email[i] == '.':\n                    continue\n                if email[i] == '+':\n                    flag = 1\n                elif email[i] == '@':\n                    new_email += email[i:]\n                    break\n                else:\n                    if flag == 0:\n                        new_email += email[i]\n            dic.add(new_email)\n        return len(dic)", "class Solution:\n    def numUniqueEmails(self, emails: List[str]) -> int:\n        emailDict = {}\n        total = 0\n        for email in emails:\n            domain = email.split('@')[1]\n            localPart = email.split('@')[0]\n            localPart = localPart.split('+')[0]\n            localPart = localPart.replace('.', '')\n            \n            if domain not in emailDict:\n                emailDict[domain] = set({ localPart })\n                total += 1\n            elif localPart not in emailDict[domain]:\n                emailDict[domain].add(localPart)\n                total += 1\n                \n        return total", "class Solution(object):\n    def numUniqueEmails(self, emails):\n        seen = set()\n        for email in emails:\n            local, domain = email.split('@')\n            if '+' in local:\n                local = local[:local.index('+')]\n            seen.add(local.replace('.','') + '@' + domain)\n        return len(seen)", "class Solution:\n    def numUniqueEmails(self, emails: List[str]) -> int:\n      \n      out = set()\n      \n      for email in emails:\n        \n        ar = email.split('@');\n        \n        out.add(ar[0].split('+')[0].replace('.', '') + '@' + ar[1])\n      \n      return len(out)\n", "class Solution:\n    def numUniqueEmails(self, emails: List[str]) -> int:\n        tmp = set()\n        for email in emails:\n            local_name, domain_name = email.split('@')\n            before_first_plus = local_name.split('+')[0]\n            without_dot_list = before_first_plus.split('.')\n            final_local_name = ''.join(without_dot_list)\n            tmp.add(final_local_name + '@' + domain_name)\n        return len(tmp)", "class Solution:\n    def numUniqueEmails(self, emails: List[str]) -> int:\n        \n        final = set()\n        for email in emails:\n            first, second = email.split('@')\n            if '+' in first: \n                first = first.split('+')\n                f = [i for i in first[0] if i != '.']\n            else:\n                f = [i for i in first if i != '.']\n            final.add(''.join(f) + '@' + second)\n        \n        return len(final)\n            \n", "class Solution:\n    def numUniqueEmails(self, emails: List[str]) -> int:\n        l=[]\n        for i in emails:\n            end=i[i.index('@'):]\n            s=''\n            string=''\n            for j in i:\n                if j=='.':\n                    continue\n                if j=='+':\n                    break \n                if j=='@':\n                    break\n                else:\n                    s=s+j\n            l.append(s+end)    \n        \n        return (len(set(l))) "]