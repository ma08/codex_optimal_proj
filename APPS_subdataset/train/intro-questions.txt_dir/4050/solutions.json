["import re\nfrom functools import reduce\n\n_ACRONYMS = {\n    'KPI':  'key performance indicators',\n    'EOD':  'the end of the day',\n    'EOP':  'the end of the day',    # snafu in the tests?\n    'TBD':  'to be decided',\n    'WAH':  'work at home',\n    'IAM':  'in a meeting',\n    'OOO':  'out of office',\n    'NRN':  'no reply necessary',\n    'CTA':  'call to action',\n    'SWOT': 'strengths, weaknesses, opportunities and threats'}\n\n_ACRONYM_PATTERN = re.compile(r'\\b[A-Z]{3,}\\b')\n_CAPITAL_PATTERN = re.compile(r'(?:\\. |^)([a-z])')\n_CAPITAL_FIX = lambda match: '{}'.format(match.group(0).upper())\n\ndef acronym_buster(message):\n    message = reduce(lambda msg, item: msg.replace(*item), _ACRONYMS.items(), message)\n    try:\n        acro = next(_ACRONYM_PATTERN.finditer(message)).group(0)\n        return '{} is an acronym. I do not like acronyms. Please remove them from your email.'.format(acro)\n    except StopIteration:\n        return _CAPITAL_PATTERN.sub(_CAPITAL_FIX, message)", "import re\n\nACRONYMS = {\n    'KPI': \"key performance indicators\",\n    'EOD': \"the end of the day\",\n    'TBD': \"to be decided\",\n    'WAH': \"work at home\",\n    'IAM': \"in a meeting\",\n    'OOO': \"out of office\",\n    'NRN': \"no reply necessary\",\n    'CTA': \"call to action\",\n    'SWOT': \"strengths, weaknesses, opportunities and threats\",\n}\nACRONYM_PATTERN = re.compile(r'\\b[A-Z]{3,}\\b')\n\ndef acronym_buster(message):\n    new = ACRONYM_PATTERN.sub(lambda m: ACRONYMS.get(m.group(), m.group()), message)\n    matched = ACRONYM_PATTERN.search(new)\n    if matched:\n        return f'{matched.group()} is an acronym. I do not like acronyms. Please remove them from your email.'\n    return re.sub('[^.\\s][^.]*', lambda m: m.group()[0].upper() + m.group()[1:], new)", "import re\n\nD = {\"KPI\": \"key performance indicators\",\n     \"EOD\": \"the end of the day\",\n     \"TBD\": \"to be decided\",\n     \"WAH\": \"work at home\",\n     \"IAM\": \"in a meeting\",\n     \"OOO\": \"out of office\",\n     \"NRN\": \"no reply necessary\",\n     \"CTA\": \"call to action\",\n     \"SWOT\": \"strengths, weaknesses, opportunities and threats\"}\n\nacronym = re.compile(r\"(?:^|(?<=\\W))[A-Z]{3,}(?=\\W|$)\")\ncapital = re.compile(r\"(?:^|(?<=\\.\\s))[a-z]\")\n\ndef acronym_buster(message):\n    try:\n        return capital.sub(lambda w: w.group().upper(), acronym.sub(lambda w: D[w.group()], message))\n    except Exception as e:\n        return f\"{str(e)[1:-1]} is an acronym. I do not like acronyms. Please remove them from your email.\"", "def acronym_buster(message):\n    acronyms = {\n        'CTA': 'call to action',\n        'EOD': 'the end of the day',\n        'IAM': 'in a meeting',\n        'KPI': 'key performance indicators',\n        'NRN': 'no reply necessary',\n        'OOO': 'out of office',\n        'SWOT': 'strengths, weaknesses, opportunities and threats',\n        'TBD': 'to be decided',\n        'WAH': 'work at home'\n    }\n    result = []\n    for sentence in message.split('.'):\n        tmp = []\n        for i, word in enumerate(sentence.split()):\n            if word.isupper() and len(word) > 2:\n                try:\n                    word = acronyms[word]\n                except KeyError:\n                    return ('{} is an acronym. I do not like acronyms. Please'\n                            ' remove them from your email.'.format(word))\n            tmp.append(word[0].upper() + word[1:] if i == 0 else word)\n        result.append(' '.join(tmp))\n    return '. '.join(result).rstrip()", "import re\n\nknow_acronyms = {\n    'KPI': \"key performance indicators\",\n    'EOD': \"the end of the day\",\n    'TBD': \"to be decided\",\n    'WAH': \"work at home\",\n    'IAM': \"in a meeting\",\n    'OOO': \"out of office\",\n    'NRN': \"no reply necessary\",\n    'CTA': \"call to action\",\n    'SWOT': \"strengths, weaknesses, opportunities and threats\"\n}\n\ndef acronym_buster(message):\n    unknow_acronyms = []\n    replace_or_store = lambda a: a in know_acronyms and know_acronyms[a] or unknow_acronyms.append(a)\n    cleaned = re.sub(r'\\b[A-Z]{3,}\\b', lambda m: replace_or_store(m.group()), message)\n    if unknow_acronyms:\n        return '%s is an acronym. I do not like acronyms. Please remove them from your email.' % unknow_acronyms[0]\n    else:\n        return re.sub('(^|[.!?]) *\\w', lambda m: m.group().upper(), cleaned)", "def acronym_buster(message):\n    acronyms = {'KPI' : \"key performance indicators\", \n                'EOD' : \"the end of the day\",\n                'EOP' : \"the end of the day\",\n                'TBD' : \"to be decided\",\n                'WAH' : \"work at home\",\n                'IAM' : \"in a meeting\",\n                'OOO' : \"out of office\",\n                'NRN' : \"no reply necessary\",\n                'CTA' : \"call to action\",\n                'SWOT' : \"strengths, weaknesses, opportunities and threats\"}\n    phrases = message.split(\".\")\n    word_lists = []\n    for phrase in phrases:\n        word_lists.append(phrase.split(\" \"))\n    for word_list in word_lists:\n        for word in word_list:\n            if len(word) >= 3 and word.isupper():\n                if word in acronyms.keys():\n                    word_list[word_list.index(word)] = acronyms[word]\n                else:\n                    return \"{} is an acronym. I do not like acronyms. Please remove them from your email.\".format(word)\n    phrases = []\n    for word_list in word_lists:\n        phrase = \" \".join(word_list)\n        if len(phrase)>0 and phrase[0].isalpha() and phrase[0].islower():\n            phrase = phrase[0].upper() + phrase[1:]\n        elif len(phrase)>0 and phrase[0] == \" \" and phrase[1].islower():\n            phrase = phrase[0] + phrase[1].upper() + phrase[2:]\n        phrases.append(phrase)\n    message = \".\".join(phrases)\n    return message", "import re\ndef acronym_buster(s):\n    d,temp = {'KPI': \"key performance indicators\", 'EOD': \"the end of the day\", 'TBD': \"to be decided\", 'WAH': \"work at home\",\n         'IAM': \"in a meeting\", 'OOO': \"out of office\", 'NRN': \"no reply necessary\", 'CTA': \"call to action\",\n         'SWOT': \"strengths, weaknesses, opportunities and threats\"},[]\n    while re.search(r\"\\b[A-Z]{3,}\\b\", s):\n        r = re.search(r\"\\b[A-Z]{3,}\\b\", s) ; arn = r.group() ; start, end = r.span()\n        if arn in d : s = s[:start] + d[arn] + s[end:]\n        else : return f\"{arn} is an acronym. I do not like acronyms. Please remove them from your email.\"\n    return \". \".join([i[0].upper()+i[1:] for i in s.split(\". \")])", "import re\n\nd = {\n    \"KPI\": \"key performance indicators\", \"EOD\": \"the end of the day\", \"TBD\": \"to be decided\",\n    \"WAH\": \"work at home\", \"IAM\": \"in a meeting\", \"OOO\": \"out of office\",\n    \"NRN\": \"no reply necessary\", \"CTA\": \"call to action\", \"SWOT\": \"strengths, weaknesses, opportunities and threats\"\n}\n\ndef acronym_buster(s):\n    a = []\n    def f(x):\n        x = x[0]\n        if x.isupper() and len(x) > 2:\n            if x not in d:\n                a.append(x)\n            x = d.get(x, \"\")\n        return x\n    s = re.sub(r\"^.|[!?.] .\", lambda x: x[0].upper(), re.sub(r\"\\w+\", f, s))\n    return f\"{a[0]} is an acronym. I do not like acronyms. Please remove them from your email.\" if a else s", "import re\ndef acronym_buster(message):\n    new_msg = message\n    subs = {'KPI': \"key performance indicators\",\n            'EOD': \"the end of the day\",\n            'TBD': \"to be decided\",\n            'WAH': \"work at home\",\n            'IAM': \"in a meeting\",\n            'OOO': \"out of office\",\n            'NRN': \"no reply necessary\",\n            'CTA': \"call to action\",\n            'SWOT': \"strengths, weaknesses, opportunities and threats\"}\n    for item in re.findall('(?:\\w)*[A-Z]{3,}(?:\\w)*', new_msg):\n        if item in subs:\n            new_msg = new_msg.replace(item, subs[item])\n        elif item.isupper():\n            return '{} is an acronym. I do not like acronyms. Please remove them from your email.'.format(item)\n    # Now capitalize the first \"word\" in each sentence\n    sentences = new_msg.split('. ')\n    return '. '.join(s[:1].upper() + s[1:] for s in sentences)", "import re\n\ndef acronym_buster(s): \n    f = lambda x: all(len(x)>2 and i.isupper() for i in x)\n    d = {'KPI': \"key performance indicators\",\n         'EOD': \"the end of the day\",\n         'TBD': \"to be decided\",\n         'WAH': \"work at home\",\n         'IAM': \"in a meeting\",\n         'OOO': \"out of office\",\n         'NRN': \"no reply necessary\",\n         'CTA': \"call to action\",\n         'SWOT': \"strengths, weaknesses, opportunities and threats\"}\n    \n    for i in re.findall(\"[\\w']+\",s):\n        if f(i):\n            if i not in d:\n                return f'{i} is an acronym. I do not like acronyms. Please remove them from your email.'\n            s = s.replace(i,d[i],1)    \n    \n    return '. '.join(i[0].upper() + i[1:] for i in s.split('. '))"]