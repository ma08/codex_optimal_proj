["def mod256_without_mod(number):\n  return number & 255  ", "def mod256_without_mod(number):\n  return number-number//256*256", "def mod256_without_mod(number):\n    return number.__mod__(256)\n", "def mod256_without_mod(number):\n    return divmod(number, 256)[1]\n", "def mod256_without_mod(num):\n  return num & 255", "def mod256_without_mod(number):\n    return divmod(number, 256)[1] # cheap trick ;-)", "mod256_without_mod=(256).__rmod__", "def mod256_without_mod(number):\n  return number & 0xFF", "def mod256_without_mod(number):\n  a = abs(number)\n  while a>256:\n      a -= 256\n  if number<0:\n      b = 256-a\n      return b\n  elif a == 256: return 0\n  else: return a", "def mod256_without_mod(number):\n  return eval(str(number)+u'\\u0025'+'256')"]