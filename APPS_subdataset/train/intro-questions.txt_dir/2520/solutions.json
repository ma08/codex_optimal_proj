["class Solution:\n     def reverse(self, x):\n         \"\"\"\n         :type x: int\n         :rtype: int\n         \"\"\"\n         if x < 0:\n             y = -1 * int(str(-x)[::-1])\n         else:\n             y = int(str(x)[::-1])  \n             \n         if y > 2**31 or y < -2**31:\n             y = 0\n         return y", "class Solution:\n     def reverse(self, x):\n         \"\"\"\n         :type x: int\n         :rtype: int\n         \"\"\"\n         \n         if x>=0:\n             x=str(x)[::-1]\n             x=int(x)+0\n         else:\n             x=str(-x)[::-1]\n             x=0-int(x)\n         if x<-2**31 or x>=2**31-1:\n             x=0\n         return x\n         \"\"\"\n         x = str(x)\n         if x[0] == '-':\n             x = x[1:]\n             ans = int()\n             \"\"\"", "class Solution:\n     def reverse(self, x):\n         \"\"\"\n         :type x: int\n         :rtype: int\n         \"\"\"\n         if x > 0:\n             x = int(str(x)[::-1])\n         elif x < 0:\n             x = 0 - int(str(abs(x))[::-1])\n         if -2 ** 31 < x < 2 ** 31:\n             return x\n         else:\n             return 0", "class Solution:\n     def reverse(self, x):\n         \"\"\"\n         :type x: int\n         :rtype: int\n         \"\"\"\n         str_x = str(x)\n         n = len(str_x)\n         if str_x[0] != '-':\n             y = int(str_x[::-1])  #[a:b:c] from a to exclusive b by c\n         else:\n             y = -int(str_x[:0:-1])\n         \n         return(y*(y.bit_length() < 32))\n", "class Solution:\n     def reverse(self, x):\n         \"\"\"\n         :type x: int\n         :rtype: int\n         \"\"\"\n         if x == 0:\n             return 0\n \n         s = -1 if x < 0 else 1\n         v = int(str(abs(x))[::-1])\n \n         if s == -1:\n             t = -v & -0x80000000\n             if t == -0x80000000:\n                 return -v\n             else:\n                 return 0\n         else:\n             t = v & 0x7fffffff\n             if t == v:\n                 return v\n             else:\n                 return 0\n", "class Solution:\n     def reverse(self, x):\n         \"\"\"\n         :type x: int\n         :rtype: int\n         \"\"\"\n         flag = x < 0\n         p = x\n         if flag == True:\n             p = -1 * x\n \n         digit = []\n         while p != 0:\n             digit.append(p % 10)\n             p = p // 10\n \n         n = 0\n         for i in digit:\n             n = n * 10 + i\n \n         if -2 ** 31 <= n <= 2 ** 31 - 1:\n             return n if flag == False else -1 * n\n \n         return 0", "class Solution:\n     flag = 0\n     def reverse(self, x):\n             if x < 0:\n                 self.flag = 1\n                 self.x = str(-x)\n             else:\n                 self.x = str(x)\n \n             list1 = []\n \n             for i in self.x:\n                 if i != 0:\n                     self.flag1 = 1\n                 if self.flag1 == 1:\n                     list1.insert(0,i)\n             self.x = int(\"\".join(list1))\n \n             if self.flag == 1 :\n                 self.x = -self.x\n             if self.x <= 2147483647 and self.x >= -2147483648:\n                 return self.x\n             else:\n                 return 0", "class Solution:\n     def reverse(self, x):\n         \"\"\"\n         :type x: int\n         :rtype: int\n         \"\"\"\n         sign = 1\n         if x<0:\n             x=-x\n             sign = -1\n         result = 0\n         while x>0:\n             end = x%10\n             result = result*10 + end\n             x = x//10\n         result *= sign\n         if result > 2**31-1 or result < -2**31:\n             return 0\n         else:\n             return result", "class Solution:\n     def reverse(self, x):\n         \"\"\"\n         :type x: int\n         :rtype: int\n         \"\"\"\n         if x.bit_length()>32 :\n     \n             print(\"wrong\");\n         else:\n             number = [];\n             digit_num = [];\n             new_num = 0;\n       \n             error = abs(x);\n             for i in range(len(str(abs(x)))):\n                 if not number:\n                     digit = abs(x)//10**(len(str(abs(x)))-1);    \n                     number.append(str(digit));\n                     digit_num.append(digit);\n                 else:\n                     error = error - digit_num[i-1]*10**(len(str(abs(x)))-i);\n                     digit = error//10**(len(str(abs(x)))-1-i);                  \n                     number.append(str(digit));\n                     digit_num.append(digit);\n                     \n             number.reverse();\n           \n             while(int(number[0])==0 and len(number)>1):\n                 del number[0];\n                 \n             for i in range(len(number)):\n                 new_num = new_num + int(number[i])*10**(len(number)-i-1);\n             if new_num.bit_length()>=32:\n                 return 0;\n             \n             if x<0:\n                 new_num = -new_num;\n             return new_num;", "class Solution:\n     def reverse(self, x):\n         str_x = str(x)\n \n         if x >= 0 and int(str_x[::-1]) <= (2**31-1):\n             return int(str_x[::-1])\n         elif x < 0 and -int(str_x[:0:-1]) >= (-2**31):\n             return -int(str_x[:0:-1])\n         else:\n             return 0", "class Solution:\n     def reverse(self, x):\n         \"\"\"\n         :type x: int\n         :rtype: int\n         \"\"\"\n         if x is 0:\n             return 0;\n         ori_str = str(x)\n         answer = 0\n         if ori_str[0] is '-':\n             answer = -1 * int(ori_str[:0:-1].lstrip('0'))\n         else:\n             answer = int(ori_str[::-1].lstrip('0'));\n         \n         if answer >= 2 ** 31 or answer < -(2 ** 31):\n             return 0\n         else:\n             return answer", "class Solution(object):\n     def reverse(self, x):\n         \"\"\"\n         :type x: int\n         :rtype: int\n         \"\"\"\n         if x>=0:\n             sign=1\n         else:\n             sign=-1\n         x=abs(x)\n         reserve=0\n         while x>0:\n             reminder= x%10\n             reserve= reserve*10+reminder\n             x=x//10\n         if reserve>(2**31-1):\n             reserve=0\n         return reserve*sign", "class Solution:\n     def reverse(self, x):\n         \"\"\"\n         :type x: int\n         :rtype: int\n         \"\"\"\n         if x==0:\n             return 0\n         if x>0:\n             sign=1\n         else:\n             sign=-1\n             x=0-x\n         \n         bits=[]\n         for i in range (10):\n             bits.append(x%10)\n             x=x//10\n         print (bits)\n \n         left_i=0\n         right_i=9\n \n         for i in range (10):\n             if bits[i]==0:\n                 left_i=left_i+1\n             else:\n                 break\n \n         for i in range (9,-1,-1):\n             if bits[i]==0:\n                 right_i=right_i-1\n             else:\n                 break\n \n         print (left_i,right_i)\n \n         factor=1\n         result=0\n         for i in range (right_i,left_i-1,-1):\n             result=result+factor*bits[i]\n             factor=factor*10\n \n         result=result*sign\n         \n         if result>2147483647 or result<-2147483648:\n             return 0\n         else:\n             return result"]