["class Solution:\n     def mySqrt(self, x):\n         \"\"\"\n         :type x: int\n         :rtype: int\n         \"\"\"\n         return int(x**0.5)", "class Solution:\n     def mySqrt(self, x):\n         \"\"\"\n         :type x: int\n         :rtype: int\n         \"\"\"\n         if x<=1:\n             return x\n         low = 0\n         high = x\n \n         while low < high:\n             mid = (high+low)/2\n             if abs(mid**2-x) < 1e-6:\n                 return int(mid)\n             elif mid**2 > x:       \n                 high = mid\n             else:\n                 low = mid", "class Solution:\n     def mySqrt(self, x):\n         \"\"\"\n         :type x: int\n         :rtype: int\n         \"\"\"\n         return int(x**(1/2))", "class Solution:\n     def mySqrt(self, x):\n         \"\"\"\n         :type x: int\n         :rtype: int\n         \"\"\"\n         a = x**0.5\n \n         return math.floor(a)", "class Solution:\n     def mySqrt(self, x):\n         \"\"\"\n         :type x: int\n         :rtype: int\n         \"\"\"\n         return int((x ** (1/2)))", "class Solution:\n     def mySqrt(self, x):\n         \"\"\"\n         :type x: int\n         :rtype: int\n         \"\"\"\n         return int((x ** (1/2)))", "class Solution:\n     def mySqrt(self, x):\n         \"\"\"\n         :type x: int\n         :rtype: int\n         \"\"\"\n         if x==1 or x==0:\n             return x\n         left,right=1,x\n         while 1:\n             mid=left+(right-left)//2\n             if mid>x//mid:\n                 right=mid-1\n             else:\n                 if mid+1>x//(mid+1):\n                     return mid\n                 left=mid+1\n        \n         return int(n)\n", "class Solution:\n     def mySqrt(self, x):\n         \"\"\"\n         :type x: int\n         :rtype: int\n         \"\"\"\n         if x==1 or x==0:\n             return x\n         left,right=1,x\n         while 1:\n             mid=left+(right-left)//2\n             if mid>x//mid:\n                 right=mid-1\n             else:\n                 if mid+1>x//(mid+1):\n                     return mid\n                 left=mid+1\n        \n         return int(n)\n", "class Solution:\n     def mySqrt(self, x):\n         \"\"\"\n         :type x: int\n         :rtype: int\n         \"\"\"\n         if x==1 or x==0:\n             return x\n         left,right=0,x\n         mid=(right+left)/2\n         while abs(mid*mid-x)>0.01:\n             if mid>x/mid:\n                 right=mid\n             else:\n                 left=mid\n             mid=(right+left)/2\n        \n         return int(mid)\n", "class Solution:\n     def mySqrt(self, x):\n         \"\"\"\n         :type x: int\n         :rtype: int\n         \"\"\"\n         if x==1 or x==0:\n             return x\n         left,right=0,x\n         mid=(right+left)/2\n         while abs(mid*mid-x)>0.01:\n             if mid>x/mid:\n                 right=mid\n             else:\n                 left=mid\n             mid=(right+left)/2\n        \n         return int(mid)\n", "class Solution:\n     def mySqrt(self, x):\n         \"\"\"\n         :type x: int\n         :rtype: int\n         \"\"\"\n         hi = x // 2\n         lo = 0\n         if x == 1:\n             return 1\n         while True:\n             if hi == lo:\n                 return hi\n             if hi - lo == 1:\n                 if hi * hi > x:\n                     return lo\n                 return hi\n             test = (hi + lo) // 2\n             sq = test * test\n             if sq == x:\n                 return test\n             if sq > x:\n                 hi = test - 1\n             else:\n                 lo = test\n             \n", "class Solution:\n     def mySqrt(self, x):\n         \"\"\"\n         :type x: int\n         :rtype: int\n         \"\"\"\n         if x<=1:\n             return x\n         up=x\n         down=0\n         while True:\n             n=(up+down)//2\n             if n**2==x:\n                 return n\n             elif n**2<x:\n                 if (n+1)**2>x:\n                     return n\n                 else:\n                     down=n\n             else:\n                 if (n-1)**2<x:\n                     return n-1\n                 else:\n                     up=n\n"]