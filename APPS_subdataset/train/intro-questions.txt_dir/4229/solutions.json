["def bits_war(numbers):\n    odd, even = 0, 0\n    for number in numbers:\n        if number % 2 == 0:\n            if number > 0:\n                even += bin(number).count('1')\n            else:\n                even -= bin(number).count('1')\n        else:\n            if number > 0:\n                odd += bin(number).count('1')\n            else:\n                odd -= bin(number).count('1')\n    return 'odds win' if odd > even else 'evens win' if even > odd else 'tie'", "bits_war=lambda n: (lambda s: \"evens win\" if s>0 else \"odds win\" if s else \"tie\")(sum(bin(d)[2:].count(\"1\")*(-1)**((d%2 or d<0)-(d%2 and d<0)) for d in n))", "def bits_war(numbers):\n    FIGHT = sum( sum(map(int, bin(abs(n))[2:])) * (-1)**(n < 0) * (-1)**(n%2 == 0) for n in numbers )\n    return [\"evens win\", \"tie\", \"odds win\"][(FIGHT >= 0) + (FIGHT > 0)]", "def bits_war(numbers):\n    evens = sum([bin(numb).replace('0b', '').count('1') * (-1 if '-' in bin(numb) else 1) for numb in numbers if numb % 2 == 0])\n    odds = sum([bin(numb).replace('0b', '').count('1') * (-1 if '-' in bin(numb) else 1) for numb in numbers if numb % 2 != 0])\n    return 'odds win' if odds > evens else 'evens win' if evens > odds else 'tie'", "def bits_war(numbers):\n    even, odd = 0, 0\n    for x in numbers:\n        res = bin(x).count('1')\n        res = -res if x < 0 else res\n        if x%2: odd += res\n        else: even += res\n    return 'tie' if even == odd else ('even', 'odd')[odd>even]+'s win'", "def bits_war(numbers):\n    scores = sum(f\"{n:b}\".count(\"1\") * (-1)**(n%2 == (n>0)) for n in numbers)\n    return f\"{['odds', 'evens'][scores>0]} win\" if scores else \"tie\"", "def bits_war(numbers):\n    res = [0, 0]\n    for x in filter(None, numbers): # To remove the 0 for the division\n        res[x&1] += bin(x).count('1') * x // abs(x)\n    return \"odds win\" if res[0] < res[1] else \"evens win\" if res[0] > res[1] else \"tie\"", "def bits_war(numbers):\n  odd_score, even_score = score(x for x in numbers if x%2), score(x for x in numbers if x%2==0)\n  return 'odds win' if odd_score > even_score else 'tie' if odd_score == even_score else 'evens win'\n\ndef score(numbers):\n  return sum(bin(x)[2:].count('1') * [-1, 1][x > 0] for x in numbers)", "def bits_war(numbers):\n    even, odd = (\n        sum(bin(x).count('1') * (1 if x > 0 else -1)\n        for x in numbers if x % 2 == remainder) for remainder in [0, 1]\n    )\n    return (\n        'odds win' if odd > even else\n        'evens win' if even > odd else\n        'tie'\n    )"]