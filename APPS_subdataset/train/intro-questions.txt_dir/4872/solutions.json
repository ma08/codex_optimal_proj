["import operator as o\nclass v:\n    def __init__(s,a,b): s.a,s.b=a,b\n    def compute(s): return getattr(o,type(s).__name__)(s.a,s.b)\nclass value(int): pass\nclass add(v): pass\nclass sub(v): pass\nclass mul(v): pass\nclass truediv(v): pass\nclass mod(v): pass\nclass pow(v): pass", "import operator as op\nclass N:\n    def __init__(s, *v):s.v=v\n    def compute(s):return getattr(op,s.__class__.__name__)(s.v[0].c(),s.v[1].c())\nclass add(N):pass\nclass sub(N):pass\nclass mul(N):pass\nclass truediv(N):pass\nclass mod(N):pass\nclass pow(N):pass\nclass value(N):\n    def c(s): return s.v[0]", "class value:\n def __init__(self,v):self.v=v\nclass o:\n def __init__(self,a,b):A,B=a.v,b.v;self.r={add:A+B,sub:A-B,mul:A*B,truediv:A/B,mod:A%B,pow:A**B}[type(self)]\n def compute(self):return self.r\nclass add(o):1\nclass sub(o):1\nclass mul(o):1\nclass truediv(o):1\nclass mod(o):1\nclass pow(o):1", "def i(s,x,y=0):s.x=getattr(x.x,s._)(y.x)if y else x\nclass v:__init__,compute=i,lambda s:s.x\nfor p in dir(0):value=vars()[p[2:-2]]=type(p,(v,),{\"_\":p})", "class value:\n def __init__(s,a,b=0):\n  s.v=a\n  if b!=0:s.v={add:a.v+b.v,sub:a.v-b.v,mul:a.v*b.v,truediv:a.v/b.v,mod:a.v%b.v,pow:a.v**b.v}[type(s)]\nclass v(value):  \n def compute(s):return s.v\nclass add(v):1\nclass sub(v):1\nclass mul(v):1\nclass truediv(v):1\nclass mod(v):1\nclass pow(v):1", "class value:\n def __init__(s,x,y=0):s.x=getattr(x.x,s._)(y.x)if y else x\n def compute(s):return s.x\nlocals().update({p[2:-2]:type(p,(value,),{\"_\":p})for p in dir(int)if\"_\"==p[-2]})", "def M(H):\n    class R:__init__,compute=lambda O,Q,S=[]:setattr(O,'O',Q if []==S else getattr(int,f'__{H}__')(Q.O,S.O)),lambda O:O.O\n    return R\nvalue,add,sub,mul,truediv,mod,pow=map(M,'* add sub mul truediv mod pow'.split())", "class F:\n def __init__(S,*a):S.a=a\n compute=lambda S:__import__(\"operator\").__dict__[type(S).__name__](*(x.compute()for x in S.a))\nclass value(F):compute=lambda S:S.a[0]\nclass add(F):pass\nclass sub(F):pass\nclass mul(F):pass\nclass truediv(F):pass\nclass mod(F):pass\nclass pow(F):pass", "class N:\n    def __init__(s,a,b):s.a,s.b=a,b\nclass value(int):1\nclass add(N):compute=lambda s:s.a+s.b\nclass sub(N):compute=lambda s:s.a-s.b\nclass mul(N):compute=lambda s:s.a*s.b\nclass truediv(N):compute=lambda s:s.a/s.b\nclass mod(N):compute=lambda s:s.a%s.b\nclass pow(N):compute=lambda s:s.a**s.b", "from operator import add,sub,mul,pow,truediv,mod\nclass value:\n    def __init__(self, *v):\n        self.v = v\n    def compute(self): return self.f(self.v[0].v[0],self.v[1].v[0])\nadd, sub, mul, pow, truediv, mod = [type(f.__name__, (value,), {\"f\": f}) for f in [add, sub, mul, pow, truediv, mod]]"]