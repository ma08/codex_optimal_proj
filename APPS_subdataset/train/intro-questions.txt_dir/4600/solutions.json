["def move_zeros(arr):\n    l = [i for i in arr if isinstance(i, bool) or i!=0]\n    return l+[0]*(len(arr)-len(l))", "def move_zeros(array):\n    return sorted(array, key=lambda x: x==0 and type(x) is not bool)", "def move_zeros(array):\n    return sorted(array, key=lambda x: x == 0 and x is not False)", "def move_zeros(array):\n    newarr =[]\n    zeroarr=[]\n    for item in array:\n        if item!= 0 or type(item)== bool :\n            newarr.append(item)\n        else:\n            zeroarr.append(item)\n            \n            \n    newarr.extend(zeroarr)\n    return(newarr)", "def move_zeros(array):\n     return [a for a in array if isinstance(a, bool) or a != 0] + [a for a in array if not isinstance(a, bool) and a == 0]", "def move_zeros(array):\n    return sorted(array, key= lambda x: x == 0 and type(x) != bool)", "def move_zeros(array):\n    a = list(filter(lambda x: x!=0 or type(x) is bool, array))\n    return a + [0]*(len(array)-len(a))", "def move_zeros(array):\n    return [x for x in array if x != 0 or x is False]+[x for x in array if x == 0 and not(x is False)]", "def move_zeros(array):\n    return sorted(array, key=lambda x: not isinstance(x, bool) and x==0)", "def move_zeros(array):\n    temp = []\n    for e in array[::-1]:  # traverse array in reverse\n        if type(e) in (int, float, complex) and e == 0:  \n            # number equivalent to 0 identified. Add 0 to the end of the new array.\n            temp.append(0)\n        else:\n            # something else, add it to the beginning of the new array.\n            temp.insert(0, e)\n    array = temp\n    return array", "def move_zeros(array):\n    without_zeros = list(filter(lambda n: not n == 0 or n is False, array))\n    for i in range(len(array) - len(without_zeros)):\n        without_zeros.append(0)\n    return without_zeros", "def move_zeros(array):\n    a_len = len(array)\n    array = [v for v in array if type(v) is bool or v != 0]\n    array.extend([0]*(a_len-len(array)))\n    return array", "def move_zeros(array):\n    a = []\n    b = []\n    for v in array:\n        if type(v) in [float, int] and v == 0:\n            b.append(0)\n        else:\n            a.append(v)\n    return a+b", "move_zeros = lambda arr: [i for i in arr if str(i) == 'False' or i != 0] + [_ for _ in arr if str(_) != 'False' and _ == 0]", "def move_zeros(array):\n    new_list = []\n    c = 0\n    for item in array:\n        if item != 0 or type(item) == bool:\n            new_list.append(item)\n        else:\n            c += 1\n    i = 0\n    while i < c:\n        new_list.append(0)\n        i+=1\n    return new_list\n", "def move_zeros(array):\n        new_array = []\n        for check in array:\n             if check!=0 or isinstance(check,bool):\n                    new_array.append(check)\n        for cnt in range(abs(len(new_array)-len(array))):\n                    new_array.append(0)\n        return new_array\n", "def move_zeros(array):\n    strs = []\n    array1 = array.copy()\n    for i in array1:\n        if isinstance(i,str):\n            strs.append(i)\n            array1[array1.index(i)] = ' '\n    for i in array1:\n        array1[array1.index(i)] = str(array1[array1.index(i)])\n    for i in array1:\n        if i == '0' or i == '0.0':\n            array1.remove(i)\n            array1.append('0')\n    for i in array1:\n        if i != ' ':\n            array1[array1.index(i)] = eval(array1[array1.index(i)])\n    def insf():\n        v = 0\n        while v<len(strs):\n            v+=1\n            yield v\n    n = insf()\n    for i in array1:\n        if i == ' ':\n            array1[array1.index(i)] = strs[next(n)-1]\n    return array1", "def move_zeros(array):\n    zeros = 0\n    new_arr = []\n    for ele in array:\n        if type(ele).__name__!='str' and str(ele) in '0.0':\n            zeros += 1\n        else:\n            new_arr += [ele]\n    return new_arr + [0]*zeros\n"]