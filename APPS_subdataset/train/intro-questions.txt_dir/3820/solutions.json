["def checkered_board(n):\n    return isinstance(n,int) and n>1 and \\\n           '\\n'.join(' '.join( \"\u25a0\" if (x+y)%2 ^ n%2 else \"\u25a1\" for y in range(n) ) for x in range(n))\n", "def checkered_board(n):\n    l = ['\u25a1', '\u25a0']\n    return False if type(n) != int or n < 2  else '\\n'.join(' '.join(l[(i + j + n) % 2] for i in range(n)) for j in range(n))", "def checkered_board(n):\n    if not (isinstance(n, int) and n > 1):\n        return False\n    return '\\n'.join(' '.join('\u25a1\u25a0'[(n+i+j)%2] for j in range(n)) for i in range(n))", "def checkered_board(n):\n    if type(n) != int or n < 2: return False\n    s1 = ' '.join(\"\u25a0\u25a1\"[i&1] for i in range(n))\n    s2 = ' '.join(\"\u25a1\u25a0\"[i&1] for i in range(n))\n    lines = [s1, s2] if n&1 else [s2, s1]\n    return '\\n'.join(lines[i&1] for i in range(n))", "def checkered_board(size):\n    result = ''\n    rows = []\n    print(size, type(size))\n    if not type(size) == int:\n        return False\n    if size < 2:\n        return False\n    if size % 2 == 0:\n        a = '\u25a1'\n        b = '\u25a0'\n    else:\n        a = '\u25a0'\n        b = '\u25a1'\n    for x in range(size):\n        if x % 2 == 0:\n            row = [a if x % 2 == 0 else b for x in range(size)]\n        else:\n            row = [b if x % 2 == 0 else a for x in range(size)]\n        rows.append(' '.join(row))\n        result = '\\n'.join(rows)\n    return result", "def checkered_board(n):\n  return '\\n'.join(' '.join(['\u25a1\u25a0', '\u25a0\u25a1'][n%2][j%2-i%2] for i in range(n)) for j in range(n)) if type(n) is int and n > 1 else False", "def checkered_board(n):\n    if type(n) != int or n < 2:\n        return False\n    return \"\\n\".join(\" \".join(\"\u25a1\u25a0\"[(i + j + n) % 2] for j in range(n)) for i in range(n))", "def checkered_board(n):\n    if type(n) is not int or n <2: return False\n    return '\\n'.join(map(lambda i: ' '.join(map(lambda j: '\u25a1' if ((n-j) + i) % 2 == 0 else '\u25a0', range(n))), range(n)))", "checkered_board = lambda n:type(n) is int and n>=2 and \"\\n\".join([\" \".join([[\"\u25a1\",\"\u25a0\"][(r+c+n)%2] for r in range(n)]) for c in range(n)])", "def checkered_board(n):\n    if isinstance(n, int) and n > 1:\n        return '\\n'.join((' '.join(('\u25a1' if ((i % 2 == j % 2) ^ n) % 2 else '\u25a0' for j in range(n))) for i in range(n)))\n    else:\n        return False"]