["def words_to_marks(s):\n  return sum(ord(c)-96 for c in s)", "def words_to_marks(s):\n    return sum('_abcdefghijklmnopqrstuvwxyz'.index(e) for e in s)", "def words_to_marks(s):\n    return sum( ord(i)-(ord('a')-1) for i in s )", "def words_to_marks(s):\n    return sum(map(ord,s))-len(s)*96", "def words_to_marks(s):\n    base = ord('a') - 1\n    return sum(ord(l) - base for l in s)\n", "def words_to_marks(s):\n    l = []\n    d = {'a': 1, 'b': 2, 'c': 3, 'd' : 4, 'e' : 5, 'f' : 6, 'g' : 7, 'h' : 8,\n        'i' : 9, 'j' : 10, 'k' : 11, 'l' : 12, 'm' : 13, 'n' : 14, 'o' : 15, 'p' : 16,\n        'q' : 17, 'r' : 18, 's' : 19, 't' : 20, 'u' : 21, 'v' : 22, 'w' : 23,\n        'x' : 24, 'y' : 25, 'z' : 26}\n    for char in list(s):\n        l.append(d[char])\n    return(sum(l))\n        \n", "words_to_marks = lambda s: sum(ord(e)-96 for e in s)", "def words_to_marks(s):\n  return sum( ord(c)-96 for c in s )\n\nWordsToMarks = words_to_marks", "def words_to_marks(s):\n    alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']   \n    my_list = list(s)\n    summ = 0\n    for x in range(len(my_list)):\n        for y in range(len(alphabet)):\n            if my_list[x] == alphabet[y]:\n                summ += (y + 1)\n    return summ", "def words_to_marks(s):\n    lett = [chr(i) for i in range(ord('a'),ord('z')+1)]\n    nums = [i for i in range(1, 27)]\n    z = zip(lett, nums)\n    d = dict(z)\n    s1 = [d[i] for i in s]\n    return sum(s1)", "def words_to_marks(word):\n    return sum(ord(ch) - 96 for ch in word)", "def words_to_marks(letters):\n    result = 0\n    for letter in letters:\n        result += ord(letter) - 96 # 1 - ord('a') = 96\n    return result", "def words_to_marks(word):\n    return sum(ord(char) - 96 for char in word)\n", "def words_to_marks(s):\n    return sum([ord(char) - 96 for char in s])\n", "import string\ndef words_to_marks(s):\n  return sum(string.ascii_lowercase.index(x) + 1 for x in s)", "words_to_marks=lambda s:sum(ord(x)-96for x in s)", "def words_to_marks(s):\n    return sum([int(ord(k))-96 for k in s])", "def words_to_marks(s):\n    return sum(ord(c) for c in s) - 96*len(s)", "def words_to_marks(s):\n    return sum(ord(x) for x in s) - 96 * len(s)", "def words_to_marks(s):\n    return sum(ord(i)-96 for i in s)", "def words_to_marks(s):\n    q2 = 0\n    for i in s:\n        if i == 'a':\n            q2 += 1\n        elif i == 'b':\n            q2 += 2\n        elif i == 'c':\n            q2 += 3\n        elif i == 'd':\n            q2 += 4\n        elif i == 'e':\n            q2 += 5\n        elif i == 'f':\n            q2 += 6\n        elif i == 'g':\n            q2 += 7\n        elif i == 'h':\n            q2 += 8\n        elif i == 'i':\n            q2 += 9\n        elif i == 'j':\n            q2 += 10\n        elif i == 'k':\n            q2 += 11\n        elif i == 'l':\n            q2 += 12\n        elif i == 'm':\n            q2 += 13\n        elif i == 'n':\n            q2 += 14\n        elif i == 'o':\n            q2 += 15\n        elif i == 'p':\n            q2 += 16\n        elif i == 'q':\n            q2 += 17\n        elif i == 'r':\n            q2 += 18\n        elif i == 's':\n            q2 += 19\n        elif i == 't':\n            q2 += 20\n        elif i == 'u':\n            q2 += 21\n        elif i == 'v':\n            q2 += 22\n        elif i == 'w':\n            q2 += 23\n        elif i == 'x':\n            q2 += 24\n        elif i == 'y':\n            q2 += 25\n        elif i == 'z':\n            q2 += 26\n    return q2", "# go next, ggwp\n# go next, ggwp\n# go next, ggwp\ndef words_to_marks(s):\n    listen = {'a': 1, 'b': 2, 'c': 3, 'd': 4,\n                'e': 5, 'f': 6, 'g': 7,\n                  'h': 8, 'i': 9, 'j': 10, \n                    'k': 11, 'l': 12, 'm': 13,\n                       'n': 14, 'o': 15, 'p': 16,\n                         'q': 17, 'r': 18, 's': 19,\n                            't': 20, 'u': 21, 'v': 22, \n                               'w': 23, 'x': 24, 'y': 25, \n                                  'z': 26}\n    x = s\n    dd = []\n    for i in x:\n        if i in listen.keys():\n            dd.append(listen[i])\n    x = sum(dd)\n    return (x)", "from string import ascii_lowercase\n\ndef words_to_marks(s):\n    return sum(ascii_lowercase.index(i) + 1 for i in s)", "import string\ndef words_to_marks(s):\n    sum = 0\n    for a in s:\n      sum = sum + list(string.ascii_lowercase).index(a)+1\n    return sum", "import string\ndef words_to_marks(s):\n    result = 0;\n    alpha = list(string.ascii_lowercase)\n    \n    word = (\",\".join(s)).split(\",\")\n    for i in word:\n        result += alpha.index(i) + 1\n    return result\n", "def words_to_marks(s):\n    \n    a = \"abcdefghijklmnopqrstuvwxyz\"\n    j = 0\n    for i in s:\n        j = j + (int(a.index(i)) + 1)\n        \n    return j\n    \n    \n", "def words_to_marks(s):\n    ergebniss = 0\n    for x in s:\n        ergebniss += ord(x) - 96\n    return ergebniss", "def words_to_marks(s):\n    letters = map(chr, range(97, 123))\n    integers = range(1, 27)\n    definition = dict(zip(letters, integers))\n    result = 0\n    for i in s:\n        result += definition.get(i, 0)\n    return result", "def words_to_marks(s):\n    r = 0;\n    lis = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    for x in s:\n      r+=lis.index(x)+1;\n    return r;\n", "def words_to_marks(s):\n    alpha='0abcdefghijklmnopqrstuvwxyz'\n    return sum(alpha.find(char) for char in s)", "def words_to_marks(s):\n    alpha = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n    total = 0\n    for i in range(0, len(s)):\n        total = total + 1 + alpha.index(s[i])\n    return total\n", "def words_to_marks(s):\n    summ = 0\n    for x in s:\n        for z, y in enumerate('abcdefghijklmnopqrstuvwxyz', 1):\n            if y == x:\n                summ += z\n    return summ", "def words_to_marks(s):\n    from string import ascii_lowercase\n    answer = 0    \n    for element in s:\n        answer += ascii_lowercase.index(element) + 1\n    return answer    ", "def words_to_marks(s):\n    return sum(ord(x) - 96 for x in s)", "def words_to_marks(s):\n    abc = \" abcdefghijklmnopqrstuvwxyz\"\n    return sum([abc.index(let) for let in s])    \n", "def words_to_marks(s):\n    abc = \" abcdefghijklmnopqrstuvwxyz\"\n    return sum([abc.index(letter) for letter in s])\n\n        \n        \n", "def words_to_marks(s):\n    abc = \" abcdefghijklmnopqrstuvwxyz\"\n    return sum([abc.index(l) for l in s])\n", "def words_to_marks(word):\n    abc = \" abcdefghijklmnopqrstuvwxyz\"\n    return sum([abc.index(el) for el in word])", "def words_to_marks(s):\n    arr = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    return sum([arr.index(ch) + 1 for ch in s])", "def words_to_marks(s):\n    abc = dict(zip('abcdefghijklmnopqrstuvwxyz', range(1, 27)))\n    \n    sum = 0;\n    \n    for char in s:\n        sum += abc[char]\n    \n    return sum", "import string\ndef words_to_marks(s):\n    return sum([string.ascii_lowercase.find(x)+1 for x in s])", "def words_to_marks(s):\n    abc = \"abcdefghijklmnopqrstuvwxyz\"\n    result = 0\n    for letter in s:\n        result+=abc.index(letter)+1\n    \n    return result", "def words_to_marks(s):\n    return sum(ord(n)-96 for n in s)", "import string\n\ndef words_to_marks(input_str):\n    \n    # Build dictionary of letters and corresponding numbers    \n    values = dict(list(zip(string.ascii_lowercase, list(range(1,27)))))\n    \n    # Convert input string to list\n    input_lst = list(input_str)\n    \n    # Get total value for input\n    value = 0\n    for elem in input_lst:\n        value += values[elem]\n        \n    return value\n", "def words_to_marks(s):\n    import string\n    a=string.ascii_lowercase[::]\n    b=list(range(1, len(a)+1))\n    dictionary = {}\n    i = 0\n    \n    for x in a:\n        dictionary[x] = b[i]\n        i +=1\n    \n    new_list=[]\n\n    for x in s:\n        new_list.append(dictionary.get(x))\n\n    return sum(new_list)", "def words_to_marks(string):\n    return sum(ord(char)-96 for char in string)", "import string\ndef words_to_marks(s):\n    # Easy one\n    letters = string.ascii_lowercase\n    total = 0\n    \n    for i in s:\n        total += letters.index(i) + 1\n\n    return total\n    \n", "def words_to_marks(s):\n  s = s.lower()\n  sum_char = 0\n  characters ={'a':1, 'b':2, 'c':3, 'd':4,'e':5, 'f':6, 'g':7,'h':8,'i':9, 'j':10, 'k':11, 'l':12,'m':13,'n':14,'o':15,'p':16,'q':17, 'r':18,'s':19,'t':20,'u':21, 'v':22,'w':23,'x':24,'y':25,'z':26}\n  for char in s:\n    number = characters[char]\n    sum_char+=number\n  return sum_char", "def words_to_marks(s):\n    # using enumerate() ;)\n    sum = 0 \n    d = { alpha:i for i,alpha in enumerate('abcdefghijklmnopqrstuvwxyz', start = 1) } # key-val pairs of all alphabets\n    for letter in s:\n        sum += d[letter]\n    return sum\n", "def words_to_marks(s):\n  s = s.lower()\n  sum_char = 0\n  characters =['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n  for char in s:\n    if char in characters:\n      number = characters.index(char) + 1\n      sum_char+=number\n  return sum_char", "import string\ndef words_to_marks(s):\n    # Easy one\n    letter_dict = {}\n    letters = list(string.ascii_lowercase)\n    for i in range(0, 26):\n        letter_dict[letters[i]] = i+1\n    sum = 0\n    for letter in s:\n        sum += letter_dict[letter]\n    return sum", "def words_to_marks(s):\n    alphabet = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n    marks = 0\n    \n    for letter in s:\n        marks += alphabet.index(letter) + 1\n    \n    return marks", "def words_to_marks(s):\n    letters = list(s)\n    word_value = 0\n    sum_list = []\n    dicti = {}\n    alphabet = list('abcdefghijklmnopqrstuvwxyz')\n    for i in range(len(alphabet)):\n        dict_ = {alphabet[i]: i}\n        dicti.update(dict_)\n    for j in letters:\n        word_value += dicti[j] + 1\n    return word_value\n\n            \n", "def words_to_marks(s):\n    words_value = 0\n    alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    alphabet = list(alphabet)\n    word = list(s)\n    letters_value = {}\n    for i in range(len(alphabet)):\n        dict_ = {alphabet[i]: i}\n        letters_value.update(dict_)\n    for j in word:\n        words_value = words_value + letters_value[j] + 1\n    print(words_value)\n    return words_value\ns = 'cat'\nwords_to_marks(s)", "import string\ndef words_to_marks(s):\n    alpha={}\n    j=1\n    for i in string.ascii_lowercase:\n        alpha[i]=j\n        j=j+1\n    j=0\n    for a in s:\n        j=j+alpha[a]\n    return j", "import string\nvalues = dict()\nfor index, letter in enumerate(string.ascii_lowercase):\n    values[letter] = index + 1\ndef words_to_marks(s):\n    total = 0 \n    for let in s:\n        total += values[let]\n    return total\n", "alpha=\"-abcdefghijklmnopqrstuvwxyz\"\ndef words_to_marks(s):\n    return sum ( [alpha.index(x)  for x in s] )", "def words_to_marks(s):\n    alf = ' abcdefghijklmnopqrstuvwxyz'\n    sum_out = 0\n    for q in range(len(s)):\n        sum_out = sum_out + alf.find(s[q])\n    return sum_out", "def words_to_marks(s):\n    sum=0\n    for i in s:\n        a=ord(i)\n        a=a-96\n        sum=sum+a\n    return sum", "def words_to_marks(s):\n    dict = {\n    \"a\": 1, \"b\": 2, \"c\": 3, \"d\": 4, \"e\": 5, \"f\": 6, \"g\": 7, \"h\": 8,\n    \"i\": 9, \"j\": 10, \"k\": 11, \"l\": 12, \"m\": 13, \"n\": 14, \"o\": 15,\n    \"p\": 16, \"q\": 17, \"r\": 18, \"s\": 19, \"t\": 20, \"u\": 21, \"v\": 22,\n    \"w\": 23, \"x\": 24, \"y\": 25, \"z\": 26\n    }\n    value = 0\n    for i in s:\n        value += dict.get(i)\n    return value", "def words_to_marks(s):\n    total = 0\n    for ltr in s:\n        total += (ord(ltr)-96)\n    return total\n", "def words_to_marks(s):\n    alpha = ' abcdefghijklmnopqrstuvwxyz'\n    return sum([alpha.index(c) for c in s])", "def words_to_marks(s):\n    # Easy one\n    import string\n    letters = string.ascii_lowercase\n    score = 0\n    for letter in s:\n        score += letters.index(letter) + 1\n    return score\n", "def words_to_marks(s):\n    alphabet = [\"!\",'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n    result = []\n    for c in s:\n        result.append(alphabet.index(c))\n    return sum(result)\n", "def words_to_marks(s):\n    sum = 0\n    for ch in s:\n        sum+=(ord(ch)-96)\n    #end for\n    return sum", "\ndef words_to_marks(s):\n    a = [ord(char)- 96 for char in s]\n    return sum(a)\n    \n", "def words_to_marks(s):\n    return sum([ord(i)-96 for i in s.lower()]) \n", "from functools import reduce \n\ndef words_to_marks(s):\n    \n    return reduce((lambda x,y: x+y), map((lambda x: ord(x) - 96), list(s)))", "def words_to_marks(s):\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    res = 0\n    for i in s:\n        res += alphabet.index(i) + 1\n    return res", "def words_to_marks(s):\n    score = 0\n    alpha = \"abcdefghijklmnopqrstuvwxyz\"\n    for char in s:\n        index = (alpha.find(char)) + 1\n        score += index\n    return score", "def words_to_marks(s):\n    translate = {\"a\":1, \"b\": 2, \"c\": 3, \"d\": 4, \"e\":5, \"f\":6, \"g\": 7, \"h\": 8, \"i\":9, \"j\": 10, \"k\": 11, \"l\": 12, \"m\": 13, \"n\": 14, \"o\": 15, \"p\": 16, \"q\": 17, \"r\":18, \"s\": 19, \"t\": 20, \"u\": 21, \"v\":22, \"w\": 23, \"x\":24, \"y\":25, \"z\": 26}\n    nlst = []\n    for letter in list(s):\n        nlst.append(translate[letter])\n        \n    return sum(nlst)\n", "def words_to_marks(s):\n    points = {\n            \"a\": 1, \"b\": 2, \"c\": 3, \"d\": 4, \"e\": 5, \"f\": 6, \n            \"g\": 7, \"h\": 8, \"i\": 9, \"j\": 10, \"k\": 11, \"l\": 12, \n            \"m\": 13, \"n\": 14, \"o\": 15, \"p\": 16, \"q\": 17, \"r\": 18, \n            \"s\": 19, \"t\": 20, \"u\": 21, \"v\": 22, \"w\": 23, \"x\": 24, \n            \"y\": 25, \"z\": 26\n            }\n    total = 0\n    for n, letter in enumerate(s):\n        total += points[letter]\n    return total", "import string\n\ndef words_to_marks(word):\n    alphabet = {char: i for i, char in enumerate(string.ascii_lowercase, start=1)}\n\n    values = [alphabet[letter] for letter in word if letter in alphabet]\n    return sum(values)", "def words_to_marks(s):\n    total = 0\n    alphabet = ' abcdefghijklmnopqrstuvwxyz'\n    for eachletter in s:\n        total = total + alphabet.index(eachletter)\n    return total", "import string\ndef words_to_marks(phrase):\n    sum = 0\n    for letter in phrase:\n        letter = string.ascii_lowercase.index(letter) + 1\n        sum += letter\n\n    return sum", "def words_to_marks(word):\n    s = \" abcdefghijklmnopqrstuvwxyz\"\n    a = 0\n    for el in word:\n        a = a + s.index(el)\n    return a", "def words_to_marks(word):\n    s = \" abcdefghijklmnopqrstuvwxyz\"\n    a = 0\n    for el in word:\n        a += s.index(el)\n    return a", "from string import ascii_lowercase\n\ndef words_to_marks(s):\n    abc = ' ' + ascii_lowercase\n    return sum(abc.index(char) for char in s)", "def words_to_marks(s):\n    import string\n    alpha = string.ascii_lowercase\n    dic = {}\n    for char in alpha:\n        dic[char] = alpha.index(char)+1\n    score = 0\n    for char in s:\n        score += dic[char]\n    return score", "def words_to_marks(s):\n    total = 0\n    d = {'a':1, 'b': 2, 'c':3, 'd':4, 'e':5,\n        'f':6, 'g':7, 'h':8, 'i':9, 'j':10, 'k':11, 'l':12,\n         'm':13, 'n':14, 'o':15, 'p':16, 'q':17, 'r':18,\n         's':19, 't':20, 'u':21, 'v':22, 'w':23, 'x':24, 'y':25, 'z':26}\n    for i in s:\n        total += d[i]\n    return total", "import string\n\ndef words_to_marks(s):\n    return sum(map(string.ascii_lowercase.index, s)) + len(s)\n", "def words_to_marks(s):\n    l='abcdefghijklmnopqrstuvwxyz'\n    res=0\n    for i in s:\n        res+=l.index(i)+1\n    return res", "def words_to_marks(s):\n    alphabet = {\n        'a': 1,\n        'b': 2,\n        'c': 3,\n        'd': 4,\n        'e': 5,\n        'f': 6,\n        'g': 7,\n        'h': 8,\n        'i': 9,\n        'j': 10,\n        'k': 11,\n        'l': 12,\n        'm': 13,\n        'n': 14,\n        'o': 15,\n        'p': 16,\n        'q': 17,\n        'r': 18,\n        's': 19,\n        't': 20,\n        'u': 21,\n        'v': 22,\n        'w': 23,\n        'x': 24,\n        'y': 25,\n        'z': 26,\n    }\n    \n    sum_length = 0\n    for char in s:\n        sum_length += alphabet[char]\n    \n    return sum_length", "def words_to_marks(s):\n    import string\n    dic = dict(zip(string.ascii_lowercase, range(1,27)))\n    res = 0\n    for letter in s:\n        res += dic.get(letter,0)\n        # dict.get(key, defaultvalue)\n    return res", "def words_to_marks(s):\n    r = \" abcdefghijklmnopqrstuvwxyz\"\n    return sum([r.index(el) for el in s if el])\n\n", "def words_to_marks(s):\n    r = \" abcdefghijklmnopqrstuvwxyz\"\n    return sum([r.index(el) for el in s ])\n", "def words_to_marks(s):\n    r = \" abcdefghijklmnopqrstuvwxyz\"\n    return sum([r.index(el) for el in s ])", "def words_to_marks(s):\n    num=0\n    for character in s:\n        num=num+ord(character) - 96\n    return num", "def words_to_marks(s):\n    dict = {'a': 1, 'b': 2, 'c': 3, 'd': 4,'e': 5, 'f': 6, 'g': 7, 'h': 8, 'i': 9,\n            'j': 10, 'k': 11, 'l': 12, 'm': 13, 'n': 14, 'o': 15, 'p': 16, 'q': 17, 'r': 18, \n            's': 19, 't': 20, 'u': 21, 'v': 22, 'w': 23, 'x': 24, 'y': 25, 'z': 26}    \n    sum = 0\n    for i in s:\n        sum += dict[i]\n        \n    return sum    ", "import string\ndef words_to_marks(s):\n    result = []\n    counter = dict(zip(string.ascii_lowercase, range(1,27)))\n    for i in s:\n        if i in counter.keys():\n            result.append(counter.get(i))\n    return sum(result)", "import string\ndef words_to_marks(s):\n    alphabet = string.ascii_lowercase\n    return sum([alphabet.index(letter) + 1 for letter in s])", "import string\n\ndef words_to_marks(s):\n    alphabet = ' ' + string.ascii_lowercase\n    return sum([alphabet.index(letter) for letter in s])", "import string\n\ndef words_to_marks(s):\n    alphabet = ' ' + string.ascii_lowercase\n    s1 = 0\n    for letter in s:\n        s1 += alphabet.index(letter)\n        \n    return s1\n", "def words_to_marks(s):\n    i=0\n    for ch in s:\n        i = i + ord(ch) - 96\n    return i", "def words_to_marks(s):\n    sum = 0\n    for letters in s:\n        sum += ord(letters)-96\n    return sum\n        \n"]