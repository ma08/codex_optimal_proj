["class Solution:\n     def addDigits(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: int\n         \"\"\"\n         if num == 0:\n             return 0\n         return 1 + (num - 1) % 9", "class Solution:\n     def addDigits(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: int\n         \"\"\"\n         result = 0\n         while num >= 10:\n             num, rem = divmod(num,10)\n             num+= rem\n         return num\n", "class Solution:\n     def addDigits(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: int\n         \"\"\"\n         if num == 0:return 0\n         return (num-1)%9+1", "class Solution:\n     def addDigits(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: int\n         \"\"\"\n         if(num<10):\n             return num\n         else:\n             return self.addDigits(num%10 + self.addDigits(num//10))\n", "class Solution:\n     def addDigits(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: int\n         \"\"\"\n         if num < 10:\n             return num\n         \n         curr_num = num\n         total = 0\n         \n         while True:\n             while curr_num > 0:\n                 digit = curr_num % 10\n                 total += digit\n                 curr_num = curr_num//10\n             \n             if total < 10:\n                 return total\n             else:\n                 curr_num = total\n                 total = 0\n", "class Solution:\n     def addDigits(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: int\n         \"\"\"\n         if num==0:\n             return 0\n         return 1 +(num-1)%9", "class Solution:\n     def addDigits(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: int\n         \"\"\"\n         \n         while num // 10 > 0:\n             rlt = 0\n             while num > 0:\n                 rlt += num % 10\n                 num //= 10\n             num = rlt\n         \n         return num", "class Solution:\n     def addDigits(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: int\n         \"\"\"\n         while len(str(num)) > 1:\n             newNum = 0\n             while num > 0:\n                 newNum += num % 10\n                 num = num // 10\n             num = newNum\n         return num", "class Solution:    \n   \n     def addDigits(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: int\n         \"\"\"\n         if num < 10:\n             return num\n         else:\n             return self.addDigits(sum([int(x) for x in str(num)]))", "class Solution:\n     def addDigits(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: int\n         \"\"\"\n         while True:\n             if num<10:\n                 return num\n             else:\n                 num=sum([int(i) for i in str(num)])", "class Solution:\n     def addDigits(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: int\n         \"\"\"\n         return 9 if num != 0 and num % 9 == 0 else num % 9", "class Solution:\n     def addDigits(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: int\n         \"\"\"\n         return num if num < 10 else num%9 if num%9!=0 else 9", "class Solution:\n     def addDigits(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: int\n         \"\"\"\n         if num == 0: return 0\n         mod = num % 9\n         return mod if mod != 0 else 9"]