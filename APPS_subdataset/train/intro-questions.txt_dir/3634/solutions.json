["def reverse_it(data):\n    if type(data) in [int, str, float]:\n        return type(data)(str(data)[::-1])\n    return data", "def reverse_it(data):\n    t = type(data)\n    return t(''.join(reversed(str(data)))) if t in [str, int, float] else data", "def reverse_it(data):\n    return data if any(t is type(data) for t in [dict, bool, list]) else type(data)(str(data)[::-1])", "def reverse_it(data):\n    t = type(data)\n    if t not in (str, float, int):\n        return data\n    return t(str(data)[::-1])", "def reverse_it(data):\n    return (type(data)(str(data)[::-1])) if isinstance(data, (str, int, float)) else data", "def reverse_it(data):\n    return data[::-1] if isinstance(data, str) else int(str(data)[::-1]) if isinstance(data, int) and not isinstance(data, bool) else float(str(data)[::-1]) if isinstance(data, float) else data", "def reverse_it(data):\n  if type(data) == str: return data[::-1]\n  elif type(data) == int: return int(str(data)[::-1])\n  elif type(data) == float: return float(str(data)[::-1])\n  else: return data", "def reverse_it(data):\n    return type(data)(str(data)[::-1]) if type(data) in (str, int, float) else data", "def reverse_it(data):\n    if type(data) == str:\n        string = data[::-1]\n        return string\n    elif type(data) == int:\n        integer = int(str(data)[::-1])\n        return integer\n    elif type(data) == float:\n        floater = float(str(data)[::-1])\n        return floater\n    elif type(data) == abs:\n        abso = abs(str(data)[::-1])\n        return floater\n    else:\n        return data\n        \nreverse_it(\"Hello\")\nreverse_it(12345)\nreverse_it(1231.123213)\nreverse_it([1,2,3,4])\n\n\n\n"]