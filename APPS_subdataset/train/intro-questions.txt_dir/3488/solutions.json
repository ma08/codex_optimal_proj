["def eval_object(v):\n    return {\"+\": v['a']+v['b'],\n            \"-\": v['a']-v['b'],\n            \"/\": v['a']/v['b'],\n            \"*\": v['a']*v['b'],\n            \"%\": v['a']%v['b'],\n           \"**\": v['a']**v['b'], }.get(v['operation'])", "def eval_object(v):\n    return eval(\"{a}{operation}{b}\".format(**v))", "def eval_object(v):\n    return eval(str(v['a'])+v['operation']+str(v['b']))", "eval_object = lambda v: eval(\"{}{}{}\".format(v['a'],v['operation'],v['b']))", "def eval_object(v):\n    return {\"+\": v['a']+v['b'],\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"**\": v['a']**v['b'] }.get(v.get('operation'),1)", "def eval_object(v):\n    return {\n        \"+\" : v['a'] +  v['b'],\n        \"-\" : v['a'] -  v['b'],\n        \"/\" : v['a'] /  v['b'],\n        \"*\" : v['a'] *  v['b'],\n        \"%\" : v['a'] %  v['b'],\n        \"**\": v['a'] ** v['b'], \n    }.get(v['operation'])", "def eval_object(v):\n    return {\"+\": v['a']+v['b'],\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"^\": 1,\n        \"**\": v['a']**v['b']}[v['operation']]", "from operator import add, sub, truediv, mul, mod, pow\nops = {'+':add, '-':sub, '/':truediv, '*':mul, '%':mod, '**':pow}\none = lambda a,b: 1\n\ndef eval_object(v):\n    return ops.get(v['operation'], one)(v['a'], v['b'])", "from typing import Dict, Union\n\ndef eval_object(v: Dict[str, Union[str, int]]) -> int:\n    \"\"\" Make a math operation based on `v` object. \"\"\"\n    return {\n        \"+\": v[\"a\"] + v[\"b\"],\n        \"-\": v[\"a\"] - v[\"b\"],\n        \"/\": v[\"a\"] / v[\"b\"],\n        \"*\": v[\"a\"] * v[\"b\"],\n        \"%\": v[\"a\"] % v[\"b\"],\n        \"**\": v[\"a\"] ** v[\"b\"]\n    }.get(v[\"operation\"], 1)", "def eval_object(v):\n    if v['operation'] == \"+\":return int(v['a']) + int(v['b'])\n    elif v['operation'] == \"-\":return int(v['a']) - int(v['b'])\n    elif v['operation'] == \"/\":return int(v['a']) / int(v['b'])\n    elif v['operation'] == \"*\":return int(v['a']) * int(v['b'])\n    elif v['operation'] == \"%\":return int(v['a']) % int(v['b'])\n    elif v['operation'] == \"**\":return int(v['a']) ** int(v['b'])", "def eval_object(v):\n    return {\"+\": int(v['a'])+int(v['b']),\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"**\": v['a']**v['b'], }.get(v['operation'])", "def eval_object(v):\n    if (v['operation'] == '+'):\n        c = v['a'] + v['b']\n        return c\n    if (v['operation'] == '-'):\n        c = v['a'] - v['b']\n        return c\n    if (v['operation'] == '/'):\n        c = v['a'] / v['b']\n        return c\n    if (v['operation'] == '*'):\n        c = v['a'] * v['b']\n        return c\n    if (v['operation'] == '%'):\n        c = v['a'] % v['b']\n        return c\n    if (v['operation'] == '**'):\n        c = v['a'] ** v['b']\n        return c", "def eval_object(v):\n    return eval(\"{}{}{}\".format(v[\"a\"], v[\"operation\"], v[\"b\"]))", "def eval_object(v):\n    return eval('%s %s %s' % (v['a'], v['operation'], v['b']))", "def eval_object(v):\n    return eval({   \"+\": \"v['a']+v['b']\",\n                    \"-\": \"v['a']-v['b']\",\n                    \"/\": \"v['a']/v['b']\",\n                    \"*\": \"v['a']*v['b']\",\n                    \"%\": \"v['a']%v['b']\",\n                   \"**\": \"v['a']**v['b']\"}.get(v['operation']))", "def eval_object(v):\n    if v['operation']=='+': return v['a']+v['b']\n    elif v['operation']== '-': return v['a']-v['b']\n    elif v['operation']== '*': return v['a']*v['b']\n    elif v['operation']== '/': return v['a']/v['b']\n    elif v['operation']== '**': return v['a']**v['b']\n    elif v['operation']== '%': return v['a']%v['b']\n    else                      : return 1\n    \n", "def eval_object(v):\n    v = list(map(str, v.values()))\n    return eval(v[0] + v[2] + v[1])", "def eval_object(v):\n    operator = v['operation']\n    return {\"+\": v['a']+v['b'],\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"**\": v['a']**v['b'], }.get(operator)", "def eval_object(v):\n    return {\"+\": v['a']+v['b'],\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"**\": v['a']**v['b'], }.get(eval('operation',v))", "def eval_object(v):\n     \n    c = {\"+\": v['a']+v['b'],\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"**\": v['a']**v['b']\n            }\n            \n    if v.get('operation') == '+':\n        return v.get('a') + v.get('b')\n    elif v.get('operation') == '-':\n        return v.get('a') - v.get('b')\n    elif v.get('operation') == '*':\n        return v.get('a') * v.get('b')\n    elif v.get('operation') == '**':\n        return v.get('a') ** v.get('b')\n    elif v.get('operation') == '/':\n        return v.get('a') / v.get('b')\n    elif v.get('operation') == '%':\n        return v.get('a') % v.get('b')\n    else:\n        return None", "def eval_object(v):\n    return {\"+\": v.get('a')+v.get('b'),\n        \"-\": v.get('a')-v.get('b'),\n        \"/\": v.get('a')/v.get('b'),\n        \"*\": v.get('a')*v.get('b'),\n        \"%\": v.get('a')%v.get('b'),\n        \"**\": v.get('a')**v.get('b'), }.get(v.get('operation'),1)", "def eval_object(v):\n    return {\"+\": v['a'] + v['b'],\n            \"-\": int(v['a'])-int(v['b']),\n            \"/\": int(v['a'])/int(v['b']),\n            \"*\": int(v['a'])*int(v['b']),\n            \"%\": int(v['a'])%int(v['b']),\n            \"**\": int(v['a'])**int(v['b'])}.get(v['operation'],1)", "def eval_object(v):\n#     return {\"+\": v['a']+v['b'],\n#         \"-\": v['a']-v['b'],\n#         \"/\": v['a']/v['b'],\n#         \"*\": v['a']*v['b'],\n#         \"%\": v['a']%v['b'],\n#         \"**\": v['a']**v['b'], }.get(v['operation'],1)\n        \n    return eval(\"{a}{operation}{b}\".format(**v))", "def eval_object(v):\n\n    x = {\"+\": v['a']+v['b'],\n    \n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n            \n        \"**\": v['a']**v['b']}\n    \n    if v['operation'] in x:\n    \n        return x.get(v['operation'])\n        \n", "import operator\ndef eval_object(v):\n    ops = {\n        '+': operator.add,\n        '-': operator.sub,\n        '/': operator.truediv,\n        '*': operator.mul,\n        '%': operator.mod,\n        '**': operator.pow\n    }\n    return ops.get(v.get('operation'))(v.get('a'), v.get('b'))", "def eval_object(v):\n    operations = {\n        '+': lambda a, b: a + b,\n        '-': lambda a, b: a - b,\n        '/': lambda a, b: a / b,\n        '*': lambda a, b: a * b,\n        '%': lambda a, b: a % b,\n        '**': lambda a, b: a ** b\n    }\n    return operations[v['operation']](v['a'], v['b'])", "def eval_object(v):\n    set = {\n        \"+\": v['a'] + v['b'],\n        \"-\": v['a'] - v['b'],\n        \"/\": v['a'] / v['b'],\n        \"*\": v['a'] * v['b'],\n        \"%\": v['a'] % v['b'],\n        \"**\": v['a'] ** v['b'] }\n    return set.get(v['operation'])", "def eval_object(v):\n    return eval(str(v['a']) + v.get('operation') + str(v['b']))", "def eval_object(operation):\n    if operation['operation'] == \"+\":\n        x = operation['a'] + operation['b']\n    elif operation['operation'] == \"-\":\n        x = operation['a'] - operation['b']\n    elif operation['operation'] == \"/\":\n        x = operation['a'] / operation['b']\n    elif operation['operation'] == \"*\":\n        x = operation['a'] * operation['b']\n    elif operation['operation'] == \"%\":\n        x = operation['a'] % operation['b']\n    elif operation['operation'] == \"**\":\n        x = operation['a'] ** operation['b']\n    return x", "def eval_object(v):\n    switcher = {'+': \"v['a']+v['b']\",\"-\": \"v['a']-v['b']\",\"/\": \"v['a']/v['b']\", \"*\": \"v['a']*v['b']\",\"%\": \"v['a']%v['b']\",\"**\": \"v['a']**v['b']\" }\n    return eval(switcher.get(v['operation']))", "from operator import add, sub, truediv, mul, mod, pow\n\nops = {'+':add, '-':sub, '/':truediv, '*':mul, '%':mod, '**':pow}\n\ndef eval_object(v):\n    return ops[v['operation']](v['a'], v['b'])", "def eval_object(v):\n    op = {\"+\": v['a']+v['b'],\"-\": v['a']-v['b'],\"/\": v['a']/v['b'],\"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\"**\": v['a']**v['b']}\n    a = v.get('operation')\n    return op[a]", "def eval_object(v):\n    return {\"+\": v['a']+v['b'],\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"**\": v['a']**v['b'], }.get(v.get('operation'))\n    # Flez\n", "def eval_object(v):\n    operator = {\n        \"+\": v['a']+v['b'],\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"**\": v['a']**v['b']\n    }\n    return operator[v.get('operation',1)]", "def eval_object(v):\n    return eval(f\"{v['a']}{v['operation']}{v['b']}\")", "def eval_object(v):\n    exp = str(v['a']) + v['operation'] + str(v['b'])\n    return eval(exp)", "def eval_object(v):\n    operations = {\n        \"+\": v['a'] + v['b'],\n        \"-\": v['a'] - v['b'],\n        \"/\": v['a'] / v['b'],\n        \"*\": v['a'] * v['b'],\n        \"%\": v['a'] % v['b'],\n        \"**\": v['a'] ** v['b']\n    }\n\n    return operations.get(v['operation'], 1)\n", "def eval_object(v):\n    return eval(f\"{v.get('a')}{v.get('operation')}{v.get('b')}\")", "def eval_object(v):\n    return int(eval(str(v['a']) + v['operation'] + str(v['b'])))\n", "def eval_object(v):\n    b = v[\"operation\"]\n    a =  {\"+\": v['a']+v['b'],\n          \"-\": v['a']-v['b'],\n          \"/\": v['a']/v['b'],\n          \"*\": v['a']*v['b'],\n          \"%\": v['a']%v['b'],\n          \"**\": v['a']**v['b']}\n    return a[b]", "def eval_object(v):\n    \"\"\"return {\"+\": v['a']+v['b'],\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"**\": v['a']**v['b'], }.get('operation',1)\"\"\"\n    if v.get(\"operation\") == \"+\":\n        return v.get(\"a\") + v.get(\"b\")\n    elif v.get(\"operation\") == \"-\":\n        return v.get(\"a\") - v.get(\"b\")\n    elif v.get(\"operation\") == \"/\":\n        try:\n            return v.get(\"a\") / v.get(\"b\")\n        except ZeroDivisionError:\n            return \"Can't divide by Zero\"\n    elif v.get(\"operation\") == \"*\":\n        return v.get(\"a\") * v.get(\"b\")\n    elif v.get(\"operation\") == \"%\":\n        return v.get(\"a\") % v.get(\"b\")\n    elif v.get(\"operation\") == \"**\":\n        return v.get(\"a\") ** v.get(\"b\")", "def eval_object(v):\n    return {\"+\": v['a']+v['b'],\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"**\": v['a']**v['b'], }.get(v['operation'],\"No operation available\")", "\ndef eval_object(v):    \n    a = str(v.get('a'))\n    b = str(v.get('b'))\n    op = v.get('operation')\n    return eval(a + op + b)", "def eval_object(v):\n    dict = {'+': v['a']+v['b'],\n    '-': v['a']-v['b'],\n    '/': v['a']/v['b'],\n    '*': v['a']*v['b'],\n    '%': v['a']%v['b'],\n    '**': v['a']**v['b']}\n    return dict.get (v.get('operation'))", "def eval_object(v):\n    return {\"+\": v['a']+v['b'],\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"**\": v['a']**v['b'] }.get(v['operation'],'operation')", "def eval_object(v):\n    return {\"+\": v['a']+v['b'],\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"**\": v['a']**v['b'], }.get(v['operation'])\n#Solved on 3rd Oct, 2019 at 07:31 AM.\n", "def eval_object(v):\n    return {\"+\":lambda v:  v['a']+v['b'],\n        \"-\": lambda v:v['a']-v['b'],\n        \"/\":lambda v: v['a']/v['b'],\n        \"*\":lambda v: v['a']*v['b'],\n        \"%\": lambda v:v['a']%v['b'],\n        \"**\": lambda v:v['a']**v['b'], }[v['operation']](v)", "def eval_object(v):\n    a = v['a']\n    b = v['b']\n    return {\"+\": a + b,\n            \"-\": a - b,\n            \"/\": a / b,\n            \"*\": a * b,\n            \"%\": a % b,\n            \"**\": a**b}.get(v['operation'])", "def eval_object(v):\n    c = v[\"operation\"]\n    a = v[\"a\"]\n    b = v[\"b\"]\n    if c == \"+\": return a + b\n    elif c == \"-\": return a - b\n    elif c == \"/\": return a / b\n    elif c == \"*\": return a * b\n    elif c == \"%\": return a % b\n    else: return a ** b\n", "def eval_object(v):\n    x = v.get('a')\n    y = v.get('b')\n    op = v.get('operation')\n    return {\n        \"+\": x+y,\n        \"-\": x-y,\n        \"/\": x/y,\n        \"*\": x*y,\n        \"%\": x%y,\n        \"**\": x**y\n    }.get(op)", "def eval_object(v):\n   # return {\"+\": v['a']+v['b'],\n#         \"-\": v['a']-v['b'],\n#         \"/\": v['a']/v['b'],\n#         \"*\": v['a']*v['b'],\n#         \"%\": v['a']%v['b'],\n#         \"**\": v['a']**v['b'], }.get('operation',1)\n    a=v.get('a')\n    op=v.get('operation')\n    b=v.get('b')\n    all=str(a)+op+str(b)\n    return eval(all)", "def eval_object(v):\n    a=v.get(\"a\")\n    b=v.get(\"b\")\n    op=v.get(\"operation\")\n    if op==\"+\":\n        return a+b\n    elif op==\"-\":\n        return a-b\n    elif op==\"/\":\n        return a/b\n    elif op==\"*\":\n        return a*b\n    elif op==\"%\":\n        return a%b\n    elif op==\"**\":\n        return a**b\n", "def eval_object(v):\n    return {\n        \"+\": v[\"a\"] + v[\"b\"],\n        \"-\": v[\"a\"] - v[\"b\"],\n        \"/\": v[\"a\"] / v[\"b\"],\n        \"*\": v[\"a\"] * v[\"b\"],\n        \"%\": v[\"a\"] % v[\"b\"],\n        \"**\": v[\"a\"] ** v[\"b\"]\n    }[v.get(\"operation\", 1)]\n", "eval_object = lambda v: eval(\"%d %s %d\" % (v[\"a\"], v[\"operation\"], v[\"b\"])) if v[\"operation\"] in \"**%/-+\" else 1\n            \n            \n", "def eval_object(v):\n    a=v['a']\n    b=v['b']\n    c=v['operation']\n    return eval('a {} b'.format(c))  #I solved this Kata on  8/27/2019  06:00 AM...#Hussam'sCodingDiary\n\n", "def eval_object(v):\n    return {\"+\": v['a']+v['b'],\\\n        \"-\": v['a']-v['b'],\\\n        \"/\": v['a']/v['b'],\\\n        \"*\": v['a']*v['b'],\\\n        \"%\": v['a']%v['b'],\\\n        \"**\": v['a']**v['b'], }.get(v['operation'])", "def eval_object(v):\n    Oper = {\"+\" :lambda a,b:a +  b,\n            \"-\" :lambda a,b:a -  b,\n            \"/\" :lambda a,b:a /  b,\n            \"*\" :lambda a,b:a *  b,\n            \"%\" :lambda a,b:a %  b,\n            \"**\":lambda a,b:a ** b}\n    return Oper[v['operation']](v['a'],v['b'])", "def eval_object(v):\n    return eval('%d%s%d'%(v['a'], v['operation'], v['b']))", "def eval_object(v):\n    print(v)\n    return {\n        \"+\": v['a']+v['b'],\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"**\": v['a']**v['b'], }.get(v['operation'])", "def eval_object(v):\n    return {\"+\": eval(\"v['a']+v['b']\"),\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"**\": v['a']**v['b'], }.get(v['operation'],1)", "eval_object = lambda v: {\n    '+':  v['a'] +  v['b'],\n    '-':  v['a'] -  v['b'],\n    '/':  v['a'] /  v['b'],\n    '*':  v['a'] *  v['b'],\n    '%':  v['a'] %  v['b'],\n    '**': v['a'] ** v['b']\n}.get(v['operation'], 0)", "def eval_object(v):\n    return {\"+\": int(v['a'])+int(v['b']),\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"**\": v['a']**v['b'], }[v['operation']]", "def eval_object(v):\n    def add(d):\n        return d['a'] + d['b']\n    def subtract(d):\n        return d['a'] - d['b']\n    def divide(d):\n        return d['a'] / d['b']\n    def remainder(d):\n        return d['a'] % d['b']\n    def multiply(d):\n        return d['a'] * d['b']\n    def double_star(d):\n        return d['a'] ** d['b']\n    return {\"+\": add(v),\n            \"-\": subtract(v),\n            \"/\": divide(v),\n            \"*\": multiply(v),\n            \"%\": remainder(v),\n            \"**\": double_star(v) }.get(v['operation'])", "def eval_object(v):\n    sw = {\n        \"+\": v['a']+v['b'],\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"**\": v['a']**v['b'], \n        }\n    return( sw.get(v['operation']))", "def eval_object(v):\n        switcher ={\"+\": v['a']+v['b'],\n                   \"-\": v['a']-v['b'],\n                   \"/\": v['a']/v['b'],\n                   \"*\": v['a']*v['b'],\n                   \"%\": v['a']%v['b'],\n                   \"**\": v['a']**v['b']\n                   }\n        return switcher.get(v['operation'],1)", "def eval_object(v):\n    return {\"+\": v['a']+v['b'],\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"**\": v['a']**v['b'], }.get(v['operation'],'error')", "def eval_object(v):\n    print (v)\n    return {\n        \"+\": v['a']+v['b'],\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"**\": v['a']**v['b'], }.get(v['operation'],0)", "def eval_object(v):\n    return {\n        '+' : v['a']+v['b'],\n        \"-\" : v['a']-v['b'],\n        \"/\" : v['a']/v['b'],\n        \"*\" : v['a']*v['b'],\n        \"%\" : v['a']%v['b'],\n        \"**\": v['a']**v['b']\n        }.get(v['operation'],9)", "import operator\n\ndef eval_object(expression):\n    mathop = {\n        '+': operator.add, \n        '-': operator.sub, \n        '*': operator.mul, \n        '/': operator.floordiv,\n        '%': operator.mod, \n        '**': operator.pow,\n    }\n    if not all(isinstance(n, int) for n in (expression['a'], expression['b'])):\n        return 0\n    else:\n        return mathop[expression['operation']](expression['a'], expression['b'])\n", "import operator\n\ndef eval_object(v):\n    return {\n        '+': operator.add,\n        '-': operator.sub,\n        '/': operator.floordiv,\n        '*': operator.mul,\n        '%': operator.mod,\n        '**': operator.pow,\n    }[v['operation']](v['a'], v['b'])", "def eval_object(v):\n    return {'+': v['a'] + v['b'], '-': v['a'] - v['b'],\n            '/': v['a'] / v['b'], '*': v['a'] * v['b'],\n            '%': v['a'] % v['b'], '**': v['a'] ** v['b']}.\\\n        get(v['operation'], 1)", "def eval_object(v):\n    if v['operation'] == \"+\":\n        return v['a']+v['b']\n    if v['operation'] == \"-\":\n        return v['a']-v['b']\n    if v['operation'] == \"*\":\n        return v['a']*v['b']\n    if v['operation'] == \"/\":\n        return v['a']/v['b']\n    if v['operation'] == \"**\":\n        return v['a']**v['b']\n    if v['operation'] == \"%\":\n        return v['a']%v['b']", "def eval_object(z):\n    a,b,op = (z[v] for v in ['a','b','operation'])\n    return {'+':a+b,'-':a-b,'/':a/b,'*':a*b,'%':a%b,'**':a**b}.get(op)", "def eval_object(v):\n    return eval(\"{0}{1}{2}\".format(v[\"a\"], v[\"operation\"], v[\"b\"]))", "eval_object = lambda v: eval(\"{a}{operation}{b}\".format(**v))\n", "def eval_object(v): \n    \n    if v['operation'] == \"+\": \n        return v['a']+v['b']\n    elif v['operation'] == \"-\": \n        return v['a']-v['b']\n    elif v['operation'] == \"/\":\n        return v['a']/v['b']\n    elif v['operation'] == '*':\n        return v['a']*v['b']\n    elif v['operation'] == '%':\n        return v['a']%v['b']\n    elif v['operation'] == \"**\":\n        return v['a']**v['b']", "def eval_object(v):\n    if v['operation'] == '+':\n        return v['a']+v['b']\n    elif v['operation'] == '-':\n        return v['a']-v['b']\n    elif v['operation'] == '/':\n        return v['a']/v['b']\n    elif v['operation'] == '*':\n        return v['a']*v['b']\n    elif v['operation'] == '%':\n        return v['a']%v['b']\n    elif v['operation'] == '**':\n        return v['a']**v['b']\n    else:\n        return", "def eval_object(v):\n    output= {\"+\": v['a']+v['b'],\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"**\": v['a']**v['b']}\n    return output[v['operation']]  ", "def eval_object(v):\n    return {\"+\": int(v['a']+v['b']),\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"**\": v['a']**v['b'], }.get(v[\"operation\"])", "def eval_object(v):\n    return eval(str(v.get(\"a\"))+ v.get(\"operation\")+ str(v.get(\"b\")))", "def eval_object(v):\n    print(v)\n    return {\"+\": v['a']+v['b'],\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"**\": v['a']**v['b']}.get(v['operation'])", "def eval_object(v):\n    d = {\"+\": v['a']+v['b'],\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"**\": v['a']**v['b'], }\n    return d.get(v['operation'])\n        \n", "from operator import add, sub, floordiv, mul, mod, pow\n\ndef eval_object(v):\n    return {\"+\": add(v['a'],v['b']),\n            \"-\": sub(v['a'],v['b']),\n            \"/\": floordiv(v['a'],v['b']),\n            \"*\": mul(v['a'],v['b']),\n            \"%\": mod(v['a'],v['b']),\n            \"**\": pow(v['a'],v['b'])}.get(v['operation'])", "def eval_object(v):\n    return {\n        \"+\": v['a']+v['b'],\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"**\": v['a']**v['b']\n       # }.get('operation',1)\n        \n       }.get(v['operation'])", "def eval_object(v):\n    a = v['a']\n    b = v['b']\n    c = v['operation']\n    if c == '+':\n        return a + b\n    elif c == '-':\n        return a - b\n    elif c == '*':\n        return a * b\n    elif c == '/':\n        return a / b\n    elif c == '%':\n        return a % b\n    elif c == '**':\n        return a ** b", "def eval_object(v):\n    return {\"+\": v['a']+v['b'],\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"**\": v['a']**v['b'], }.get(v['operation'],2)", "def eval_object(v):\n    return {\"+\": v['a']+v['b'],\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"**\": v['a']**v['b']}[v.get('operation')]", "def eval_object(v):\n    a = v['a']\n    b = v['b']\n    c = v['operation']\n    if c == '+':\n        return(int(a) + int(b))\n    elif c == '-':\n        return(int(a) - int(b))\n    elif c == '/':\n        return(int(a) / int(b))\n    elif c == '*':\n        return(int(a) * int(b))\n    elif c == '%':\n        return(int(a) % int(b))\n    elif c == '**':\n        return(int(a) ** int(b))", "def eval_object(v):\n    return {\n        \"+\": v['a']+v['b'],\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"**\": v['a']**v['b'],\n    }[v['operation']]", "def eval_object(v):\n    a = {\"+\": v['a']+v['b'],\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"**\": v['a']**v['b']}\n    return a[ v['operation']  ]", "def eval_object(v):\n    op, a, b = v['operation'], v['a'], v['b']\n    return {\n        '+': a + b,\n        '-': a - b,\n        '/': a / b,\n        '*': a * b,\n        '%': a % b,\n        '**': a ** b,\n    }.get(op, 1)\n", "def eval_object(v):\n    return {\n        \"+\": v['a']+v['b'],\n        \"-\": v['a']-v['b'],\n        \"/\": v['a']/v['b'],\n        \"*\": v['a']*v['b'],\n        \"%\": v['a']%v['b'],\n        \"**\": v['a']**v['b']\n        }.get(v['operation'], 0)", "def eval_object(v):\n    return  eval(str(v['a'])+str(v['operation'])+str(v['b']))"]