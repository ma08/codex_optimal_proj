["def reverse_list(x):\n    \"\"\"Takes an list and returns the reverse of it. \n    If x is empty, return [].\n    \n    >>> reverse_list([1, 2, 3, 4])\n    [4, 3, 2, 1]\n    >>> reverse_list([])\n    []\n    \"\"\" \n    \n    return x[::-1]\n\ndef sum_list(x):\n    \"\"\"Takes a list, and returns the sum of that list.\n    If x is empty list, return 0.\n\n    >>> sum_list([1, 2, 3, 4])\n    10\n    >>> sum_list([])\n    0\n    \"\"\"\n\n    return sum(x)\n\ndef head_of_list(x):\n    \"\"\"Takes a list, returns the first item in that list.\n    If x is empty, return None\n\n    >>> head_of_list([1, 2, 3, 4])\n    1\n    >>> head_of_list([]) is None\n    True\n    \"\"\" \n\n    return x[0] if x else None", "def reverse_list(lst):\n    \"\"\"Takes an list and returns the reverse of it. \n    If x is empty, return [].\n    >>> reverse_list([])\n    []\n    >>> reverse_list([1, 2, 3])\n    [3, 2, 1]\n    \"\"\" \n    return lst[::-1]\n\ndef sum_list(lst):\n    \"\"\"Takes a list, and returns the sum of that list.\n    If x is empty list, return 0.\n    >>> sum_list([])\n    0\n    >>> sum_list([1, 2, 3])\n    6\n    \"\"\"\n    return sum(lst)\n\ndef head_of_list(lst):\n    \"\"\"Takes a list, returns the first item in that list.\n    If x is empty, return None\n    >>> head_of_list([]) is None\n    True\n    >>> head_of_list([1, 2, 3])\n    1\n    \"\"\"\n    return lst[0] if lst else None", "def reverse_list(x):\n    \"\"\"Takes an list and returns the reverse of it. \n    If x is empty, return [].\n    \n    >>> reverse_list([1, 2, 3])\n    [3, 2, 1]\n    \n    >>> reverse_list([])\n    []\n    \"\"\" \n    \n    return x[::-1]\n\ndef sum_list(x):\n    \"\"\"Takes a list, and returns the sum of that list.\n    If x is empty list, return 0.\n\n    >>> sum_list([1, 2, 3])\n    6\n\n    >>> sum_list([])\n    0\n    \"\"\"\n\n    return sum(x)\n\ndef head_of_list(x):\n    \"\"\"Takes a list, returns the first item in that list.\n    If x is empty, return None\n\n    >>> head_of_list([0, 1])\n    0\n    \n    >>> head_of_list([]) is None\n    True\n    \"\"\" \n\n    return x[0] if x else None\n", "def reverse_list(x):\n    \"\"\"\n    >>> reverse_list([1,2,3])\n    [3, 2, 1]\n    \n    >>> reverse_list([2,3])\n    [3, 2]\n    \"\"\" \n    return x[::-1]\n\ndef sum_list(x):\n    \"\"\"\n    >>> sum_list([1,2,3])\n    6\n    \n    >>> sum_list([0])\n    0\n    \"\"\"\n    return sum(x)\n\ndef head_of_list(x):\n    \"\"\"\n    >>> head_of_list([0])\n    0\n    \n    >>> head_of_list([1,2,3])\n    1\n    \"\"\" \n    return x[0] if x else None", "def reverse_list(x):\n    \"\"\"Takes an list and returns the reverse of it. \n    If x is empty, return [].\n    \n    Your two Doc_tests go here... \n    \n     >>> reverse_list([1,2])\n     [2, 1]\n     >>> reverse_list([])\n     []\n     \"\"\"\n        \n    # Your code goes here...\n    return x[::-1]\ndef sum_list(x):\n    \"\"\"Takes a list, and returns the sum of that list.\n    If x is empty list, return 0.\n\n    Your two Doc_tests go here...\n    >>> sum_list([])\n    0\n    >>> sum_list([1,2,3])\n    6\n    \"\"\"\n\n    # Your code goes here...\n    return 0 if len(x) == 0 else sum(x)\ndef head_of_list(x):\n    \"\"\"Takes a list, returns the first item in that list.\n    If x is empty, return None\n\n    Your two Doc_tests go here...\n    >>> head_of_list([1,2,3])\n    1\n    >>> head_of_list([2,4,5])\n    2\n    \"\"\" \n\n    # Your code goes here...\n    return None if len(x) == 0 else x[0]", "def reverse_list(x):\n    \"\"\"Takes an list and returns the reverse of it. \n    If x is empty, return [].\n    \n    >>> reverse_list([1, 2, 3])\n    [3, 2, 1]\n    >>> reverse_list([])\n    []\n    \"\"\" \n    return x[::-1] if x else []\n\n\ndef sum_list(x):\n    \"\"\"Takes a list, and returns the sum of that list.\n    If x is empty list, return 0.\n    >>> sum_list([1, 2, 3])\n    6\n    >>> sum_list([])\n    0\n    \"\"\"\n\n    return sum(x) if x else 0\n\n\ndef head_of_list(x):\n    \"\"\"Takes a list, returns the first item in that list.\n    If x is empty, return None\n\n    >>> head_of_list([1, 2])\n    1\n    >>> head_of_list([]) is None\n    True\n    \"\"\" \n\n    return x[0] if x else None\n\n", "def reverse_list(a):\n    \"\"\"Takes an list and returns the reverse of it. \n    If x is empty, return [].\n    \n    >>> reverse_list([1])\n    [1]\n    >>> reverse_list([])\n    []\n    \"\"\"\n    return a[::-1]\n\ndef sum_list(a):\n    \"\"\"Takes a list, and returns the sum of that list.\n    If x is empty list, return 0.\n\n    >>> sum_list([1])\n    1\n    >>> sum_list([])\n    0\n    \"\"\"\n    return sum(a)\n\ndef head_of_list(a):\n    \"\"\"Takes a list, returns the first item in that list.\n    If x is empty, return None\n\n    >>> head_of_list([1])\n    1\n    >>> head_of_list([]) is None\n    True\n    \"\"\"\n    if a:\n        return a[0]", "def reverse_list(x):\n    \"\"\"Takes an list and returns the reverse of it. \n    If x is empty, return [].\n    \n    >>> reverse_list([])\n    []\n    \n    >>> reverse_list([1, 2, 3])\n    [3, 2, 1]\n    \"\"\"  \n    return x[::-1]\n\ndef sum_list(x):\n    \"\"\"Takes a list, and returns the sum of that list.\n    If x is empty list, return 0.\n\n    >>> sum_list([])\n    0\n    \n    >>> sum_list([1, 2, 3])\n    6\n    \"\"\"\n    return sum(x)\n\ndef head_of_list(x):\n    \"\"\"Takes a list, returns the first item in that list.\n    If x is empty, return None\n    \n    >>> head_of_list([1, 2, 3])\n    1\n    \n    >>> head_of_list([]) is None\n    True\n    \n    \n    \"\"\" \n    return x[0] if len(x) else None\n", "def reverse_list(x):\n    \"\"\"Takes an list and returns the reverse of it. \n    If x is empty, return [].\n    \n    >>> reverse_list([])\n    []\n    >>> reverse_list([5, 4,3, 2, 1])\n    [1, 2, 3, 4, 5]\n    \"\"\" \n    return x[::-1]\n\ndef sum_list(x):\n    \"\"\"Takes a list, and returns the sum of that list.\n    If x is empty list, return 0.\n\n    >>> sum_list([])\n    0\n    >>> sum_list([1, 2, 3, 4, 5])\n    15\n    \"\"\"\n    return sum(x)\n\ndef head_of_list(x):\n    \"\"\"Takes a list, returns the first item in that list.\n    If x is empty, return None\n\n    >>> head_of_list([]) is None\n    True\n    >>> head_of_list([1, 2, 3, 4, 5])\n    1\n    \"\"\" \n    return x[0] if x else None\n", "def reverse_list(x):\n    \"\"\"\"Takes an list and returns the reverse of it. \n    If x is empty, return [].\n    \n    Your two Doc_tests go here... \n    >>> reverse_list([])\n    []\n    >>> reverse_list([2,3,9])\n    [9, 3, 2]\n    \"\"\"\n    return x[::-1]\ndef sum_list(x):\n    \"\"\"Takes a list, and returns the sum of that list.\n    If x is empty list, return 0.\n\n    Your two Doc_tests go here...\n    >>> sum_list([])\n    0\n    >>> sum_list([2,3,9])\n    14\n    \"\"\"\n    return sum(x)\n\ndef head_of_list(x):\n    \"\"\"Takes a list, returns the first item in that list.\n    If x is empty, return None\n\n    Your two Doc_tests go here...\n    >>> head_of_list([5,4,9])\n    5\n    >>> head_of_list([2,3,9])\n    2\n    \"\"\"\n    if x == []:\n        pass\n    else:\n        return x[0]"]