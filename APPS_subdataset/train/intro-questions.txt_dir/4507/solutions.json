["from itertools import cycle, islice\n\ndef endless_string(string, start, length):\n    i = (start + (length + 1 if length < 0 else 0)) % len(string)\n    return ''.join(islice(cycle(string), i, i + abs(length)))", "from itertools import cycle, islice\n\ndef endless_string(stg, i, l):\n    i = min(i, i+l) % len(stg) + (l < 0)\n    j = i + abs(l)\n    return \"\".join(islice(cycle(stg), i, j))", "from itertools import cycle, islice\n\ndef endless_string(string, start, length):\n    r = (start + (length + 1)*(length < 0)) % len(string)\n    return ''.join(islice(cycle(string), r, r+abs(length)))", "def endless_string(s, start, l):\n    s = s * 500\n    half = len(s) // 2\n    return s[half + start:(half + start) + l] if l > 0 else  s[half+start+l+1:half+start+1]", "def endless_string(strng, start, length):\n    len_strng = len(strng)\n    strng = strng * (abs(length) // len_strng + 1)\n    true_start = min(start, start + length)\n    start = true_start % len_strng + (length < 0)\n    stop = start + abs(length)\n    return strng[start:stop]\n\n\n\n#from itertools import cycle, islice\n\n#def endless_string(strng, start, length):\n#    true_start = min(start, start + length)\n#    start = true_start % len(strng) + (length < 0)\n#    stop = start + abs(length)\n#    return \"\".join(islice(cycle(strng), start, stop))\n", "def endless_string(stg, i, l):\n    ls = len(stg)\n    stg = stg * (2 + abs(l) // ls)\n    i = min(i, i + l) % ls + (l < 0)\n    j = i + abs(l)\n    return stg[i:j]\n"]