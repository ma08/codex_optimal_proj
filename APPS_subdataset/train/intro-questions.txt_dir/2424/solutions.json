["class Solution:\n     def addStrings(self, num1, num2):\n         \"\"\"\n         :type num1: str\n         :type num2: str\n         :rtype: str\n         \"\"\"\n         if len(num1) < len(num2):\n             num1, num2 = num2, num1\n         addon = 0\n         res = \"\"\n         l = len(num2)\n         for i in range(l):\n             s =  ord(num2[l - i - 1]) + ord(num1[len(num1) - i - 1]) - 2 * ord(\"0\") + addon\n             addon = s // 10\n             res = chr(s % 10 + ord(\"0\")) + res\n         for i in range(l, len(num1)):\n             s = ord(num1[len(num1) - i - 1]) - ord(\"0\") + addon \n             addon = s // 10\n             res = chr(s % 10 + ord(\"0\")) + res\n         if addon > 0:\n             res = \"1\" + res\n         return res\n             \n", "class Solution:\n     def addStrings(self, num1, num2):\n         \"\"\"\n         :type num1: str\n         :type num2: str\n         :rtype: str\n         \"\"\"\n         if len(num1) < len(num2):\n             num1, num2 = num2, num1\n         addon = 0\n         res = \"\"\n         l = len(num2)\n         for i in range(l):\n             s =  ord(num2[l - i - 1]) + ord(num1[len(num1) - i - 1]) - 2 * ord(\"0\") + addon\n             addon = s // 10\n             res = chr(s % 10 + ord(\"0\")) + res\n         for i in range(l, len(num1)):\n             s = ord(num1[len(num1) - i - 1]) - ord(\"0\") + addon \n             addon = s // 10\n             res = chr(s % 10 + ord(\"0\")) + res\n         if addon > 0:\n             res = \"1\" + res\n         return res\n             \n"]