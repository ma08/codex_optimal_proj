["def calculator(x, y, op):\n  return eval(f'{x}{op}{y}') if type(x) == type(y) == int and str(op) in '+-*/' else 'unknown value'", "def calculator(x,y,op):\n    try:\n        assert op in \"+-*/\"\n        return eval('%d%s%d' % (x, op, y))\n    except:\n        return \"unknown value\"", "def calculator(x, y, op):\n    try:\n        return {'+': x + y, '-': x - y, '*': x * y, '/': x / y}[op]\n    except (TypeError, KeyError): \n        return 'unknown value'", "def calculator(x,y,op):\n    if isinstance(x, int) and isinstance(y, int):\n        op_dict = {'+': x+y, '-': x-y, '*': x*y, '/': x/y}\n        return op_dict[op] if op in op_dict else 'unknown value'\n    return 'unknown value'\n", "def calculator(x,y,op):\n    if op == '+' and type(x) == int and type(y) == int:\n        return x + y\n    if op == '-':\n        return x - y\n    if op == '*':\n        return x * y\n    if op == '/':\n        return x / y\n    else:\n        return 'unknown value'", "from operator import add, sub, mul, truediv as div\n\nWRONG_FUNC = lambda x,y: \"unknown value\"\n\ndef calculator(x,y,op):\n    validOp = op if all(isinstance(v,int) for v in (x,y)) else '!'\n    return {'+': add, '-': sub, '*': mul, '/': div}.get(validOp, WRONG_FUNC)(x,y)", "def calculator(x, y, op):\n    try:\n        return eval(f\"{x}{op}{y}\") if op in \"+-*/\" else \"unknown value\"\n    except (SyntaxError, NameError, TypeError):\n        return \"unknown value\"\n", "ops = {\"+\": int.__add__, \"-\": int.__sub__, \"*\": int.__mul__, \"/\": int.__truediv__}\n\ndef calculator(x, y, op):\n    if not (isinstance(x, int) and isinstance(y, int) and op in ops):\n        return \"unknown value\"\n    return ops[op](x, y)\n", "def calculator(x,y,op):\n    if str(op) not in '+-/*' or not str(x).isnumeric() or not str(y).isnumeric():\n        return 'unknown value'\n    return x + y if op == '+' else x - y if op == '-' else x * y if op == '*' else x / y", "def calculator(x,y,op):\n    if not isinstance(x, int) or not isinstance(y, int):\n        return 'unknown value'\n    \n    if op == '+':\n        return x + y\n        \n    if op == '-':\n        return x - y\n        \n    if op == '*':\n        return x * y\n        \n    if op == '/':\n        return x / y\n        \n    return 'unknown value'", "import operator\nfrom functools import reduce\n\nOPS = {\n    \"+\": operator.__add__,\n    \"-\": operator.__sub__,\n    \"*\": operator.__mul__,\n    \"/\": operator.__truediv__\n}\n\n\ndef calculator(x, y, op):\n    return reduce(OPS[op], (x, y)) if op in OPS and type(x) is type(y) is int else 'unknown value'", "def calculator(x,y,op):\n    return eval(\"{}{}{}\".format(x, op, y)) if op in ['+', '-', '/', '*'] and isinstance(x, int) and isinstance(y, int) else \"unknown value\"", "from typing import Union\n\ndef calculator(x: int, y: int, op: str) -> Union[int, float, str]:\n    \"\"\" Make a calculation two values based on the given operator. \"\"\"\n    calculate = {\n        \"+\": lambda x, y: x + y,\n        \"-\": lambda x, y: x - y,\n        \"*\": lambda x, y: x * y,\n        \"/\": lambda x, y: x / y\n    }\n    if all([type(x) is int, type(y) is int]):\n        try:\n            return calculate[op](x, y)\n        except KeyError:\n            ...\n    return \"unknown value\"", "def calculator(x,y,op):\n    if op in ['+','-','*','/']:\n        try:\n            return {'+':x+y,'-':x-y,'*':x*y,'/':x/y}[op]\n        except TypeError:\n            return 'unknown value'\n    else: return 'unknown value'", "def calculator(x,y,op):\n    if type(x) is int and type(y) is int:\n        switcher = {\n            \"+\": x+y,\n            \"-\": x-y,\n            \"*\": x*y,\n            \"/\": x/y\n        }\n        return switcher.get(op,\"unknown value\")\n    else:\n       return 'unknown value'", "def calculator(x,y,op):\n    if op not in ['+','/','-','*']:\n        return \"unknown value\"\n    else:\n        try:\n            a = str(x)+ op + str(y)\n            return eval(a)\n        except:\n            return \"unknown value\"", "def calculator(x,y,op):\n    if isinstance(x, int) and isinstance(y, int):\n        if op =='+':\n            return x+y\n        if op =='-':\n            return x-y\n        if op =='*':\n            return x*y\n        if op =='/':\n            return x/y\n    return \"unknown value\"", "from operator import add, sub, mul, truediv as div\n\nOPS = dict(list(zip(('+-*/'), (add, sub, mul, div))))\n\nfoo = lambda *args: 'unknown value'\n\ndef calculator(x, y, op):\n    return OPS.get(op, foo)(x, y) if all(isinstance(i, (int, float)) for i in (x, y)) else foo()\n", "def calculator(x,y,op):\n    try:\n        if op in '+-*/':\n            return eval(f'{x}{op}{y}')\n    except:\n        pass\n    return 'unknown value'", "def calculator(x,y,op):\n    if y == \"$\":\n        return(\"unknown value\")\n    if x == \"a\":\n        return(\"unknown value\")\n    if x == \":\":\n        return(\"unknown value\")\n    if y == \",\":\n        return(\"unknown value\")\n    if op == \"+\":\n        return(x + y)\n    elif op == \"-\":\n        return(x - y)\n    elif op == \"*\":\n        return(x * y)\n    elif op == \"/\":\n        return(x / y)\n    else:\n        return(\"unknown value\")", "def calculator(x,y,op,msg='unknown value'):\n    try:\n        return eval(str(x)+op+str(y)) if op in '+-*/' else msg\n    except:\n        return msg", "def calculator(x,y,op,check='+-*/'):\n    try:\n        return eval(str(x)+op+str(y)) if op in check else 'unknown value'\n    except:\n        return 'unknown value'", "def calculator(x,y,op):\n    try:\n        if op in '+-/*':\n            return eval(str(x)+op+str(y))\n        else:\n            return 'unknown value'\n    except:\n        return 'unknown value'", "def calculator(x,y,op):\n    print((x,y,op))\n    if op == \"+\" and type(x)==type(y)==int:\n        return x+y\n    elif op == \"-\" and type(x)==type(y)==int:\n        return x-y\n    elif op == \"*\" and type(x)==type(y)==int:\n        return x*y\n    elif op == \"/\" and type(x)==type(y)==int:\n        return x/y\n    else:\n        return \"unknown value\"\n     \n", "def calculator(x,y,op):\n    try:\n        if op not in \"+-*/\" or type(x) not in [int, float] or type(y) not in [int, float]: return 'unknown value'\n        return eval(f\"{x} {op} {y}\")\n    except TypeError:\n        return 'unknown value'", "def calculator(x,y,op):\n    try:\n        if op in \"+-*/\":\n            return eval(f\"{x} {op} {y}\")\n        else:\n            return \"unknown value\"\n    except:\n        return \"unknown value\"", "def calculator(x,y,op):\n    if isinstance(x, int) and isinstance(y, int) and isinstance(op, str):\n        if op == '+':\n            return x + y\n        elif op == '-':\n            return x - y\n        elif op == '*':\n            return x * y\n        elif op == '/':\n            return x / y\n        else:\n            return \"unknown value\"\n    else:\n        return \"unknown value\"\n", "def calculator(x,y,op):\n    valid_operators = ['+', '-', '*', '/']\n\n    if op in valid_operators and str(x).isnumeric() and str(y).isnumeric():\n        return eval(str(x) + op + str(y))\n    else:\n        return 'unknown value'\n", "def calculator(x,y,op):\n    if (op in ('+', '-', '*', '/') and type(x) == int and type(y) == int):\n        if(op == '+'):\n            return x+y\n        elif(op == '-'):\n            return x-y\n        elif(op == '*'):\n            return x*y\n        else:\n            return x/y\n    else:\n        return \"unknown value\"", "def calculator(x,y,op):\n    x = str(x)\n    y = str(y)\n    if x.isdigit()==True and y.isdigit()==True:\n        if op==\"+\" or op==\"-\" or op==\"*\" or op==\"/\":\n            equation = x+op+y\n            result = eval(equation)\n        else:\n            result = \"unknown value\"\n    else:\n        result = \"unknown value\"\n    return result\n\nprint(calculator(6, 2, '+'))\nprint(calculator(4, 3, '-'))\nprint(calculator(5, 5, '*'))\nprint(calculator(5, 4, '/'))\nprint(calculator(6, 2, '&'))", "def calculator(x,y,op):\n    print (f\"{x}{op}{y}\")\n    try:\n         if op in \"+-/*\":\n            return eval(f\"{x}{op}{y}\")\n    except:\n        pass\n    return \"unknown value\"    ", "import operator\n\n\nop = {\n    \"+\": operator.add,\n    \"-\": operator.sub,\n    \"*\": operator.mul,\n    \"/\": operator.truediv\n}\n\n\n\ndef calculator(x,y,oper):\n    print(x, y, op)\n    try:\n        return op[oper](x, y) if x > 0 and y > 0 else \"unknown value\"\n    except:\n        return \"unknown value\"", "def calculator(x,y,op):\n    print(x, y, op)\n    lst = ['+', '-', '*', '/']\n    if op not in lst:\n        return \"unknown value\"\n    if str(x).isnumeric() is False or str(y).isnumeric() is False:\n        return \"unknown value\"\n    elif op == '+':\n        return int(x) + int(y)\n    elif op == '-':\n        return int(x) - int(y)\n    elif op == '*':\n        return int(x) * int(y)\n    elif op == '/':\n        return int(x) / int(y)", "def calculator(x, y, op):\n    if isinstance(x, int) or isinstance(x, float) and isinstance(y, int) or isinstance(y, float):\n        while True:\n            try:\n                if op == '*':\n                    sumMUL = float(x * y)\n                    print(sumMUL)\n                    return sumMUL\n\n                if op == '+':\n                    sumADD = float(x + y)\n                    return sumADD\n                    print(sumADD)\n                if op == '-':\n                    sumSUB = float(x - y)\n                    return sumSUB\n                elif op == '/':\n                    sumDIV = float(x / y)\n                    return sumDIV\n                else:\n                    return \"unknown value\"\n                break\n            except TypeError:\n                return \"unknown value\"\n    else:\n        return \"unknown value\"", "def calculator(x,y,op):\n    if type(x) == int and type(y) == int and str(op) in '*/-+':\n        return eval(f'{x}{op}{y}')\n    else:\n        return 'unknown value'\n    \n    return eval(f'{x}{op}{y}') if type(x) == type(y) == int and str(op) in '+-*/' else 'unknown value'", "def calculator(a,b,op):\n    if op == '/' and b == 0:\n        return 'Error! Division by zero!'\n    ops = ['+', '-', '*', '/']\n    try:\n        results = [a + b, a - b, a * b, a / b]\n        return results[ops.index(op)]\n    except:\n        return 'unknown value'", "def calculator(x,y,op):\n    if ((op == \"+\") and (type(x) is int) and (type(y) is int)):\n        return x + y\n    elif ((op == \"-\") and (type(x) is int) and (type(y) is int)):\n        return x - y\n    elif ((op == \"*\") and (type(x) is int) and (type(y) is int)):\n        return x * y\n    elif ((op == \"/\") and (type(x) is int) and (type(y) is int)):\n        return int(x) / int(y)\n    else:\n        return \"unknown value\"", "def calculator(x,y,op):\n    try:\n        if op == '+': return int(x) + int(y)\n        elif op == '-': return x - y\n        elif op =='*': return x * y\n        elif op == '/': return x / y\n        else: return 'unknown value'\n    except: return 'unknown value'\n            \n\n\n", "def calculator(x,y,op):\n    pass\n    if type(x) != int or type(y) != int:\n        return \"unknown value\"\n    while op not in ['+', '-', '*', '/']:\n        return \"unknown value\"\n    if op == '+':\n        return x + y\n    if op == '-':\n        return x - y\n    if op == '*':\n        return x * y\n    if op == '/':\n        return x / y\n", "def calculator(x,y,op):\n    ops = (\"+\", \"-\", \"*\", \"/\")\n    \n    if op in ops and (type(x) == int and type(y) == int):\n        return eval(f\"{x} {op} {y}\")\n    \n    else:\n        return \"unknown value\"", "def calculator(x,y,op):\n    print(x,y, type(x), type(y))\n    if op ==\"+\" and type(x)==type(y)==int:    return x+y\n    elif op ==\"-\":  return x-y\n    elif op ==\"/\":  return x/y\n    elif op ==\"*\":  return x*y\n    else :          return \"unknown value\"", "import operator as op\n\nops = {\n    '+': op.add,\n    '-': op.sub,\n    '*': op.mul,\n    '/': op.truediv,\n}\n\ndef calculator(x, y, op):\n    if op in ops and isinstance(x, int) and isinstance(y, int):\n        return ops[op](x, y)\n    return 'unknown value'", "def calculator(x,y,op):\n    print((x,y,op)) \n    if type(x) == str or type(y) == str:\n         return \"unknown value\"\n    elif op == '+':\n         return x + y\n    elif op == '-':\n         return x - y\n    elif op == '*':\n         return x * y\n    elif op == '/':\n         return x / y\n    else:\n         return \"unknown value\"\n", "import operator\n\nops = {\n    '+': operator.add,\n    '-': operator.sub,\n    '*': operator.mul,\n    '/': operator.truediv\n}\n\ndef calculator(x,y,op):\n    try:\n        return ops[op](int(x), int(y))\n    except (ValueError, KeyError):\n        return 'unknown value'", "import operator\ndef calculator(x,y,op):\n    ops = {'+' : operator.add, '-' : operator.sub, '*' : operator.mul, '/' : operator.truediv}\n    if op in ops and str(x).isdigit() and str(y).isdigit() : return ops[op](x,y)\n    else: return \"unknown value\"", "def calculator(x,y,op):\n    if isinstance(x, int) and isinstance(y, int) and isinstance(op, str) and op in '+-*/':\n        return eval(str(x) + op + str(y))\n    else:\n        return 'unknown value'", "def calculator(x,y,op):\n    if type(x) != int or type(y) != int:\n        return 'unknown value'\n    elif op == '+':\n        return x + y\n    elif op == '-':\n        return x - y\n    elif op == '*':\n        return x * y\n    elif op == '/':\n        if y <= 0:\n            return 'unknown value'\n        return x / y\n    else:\n        return 'unknown value'\n", "def calculator(x,y,op):\n    return eval(f'{x}{op}{y}') if str(op) in \"+-*/\" and type(x) == type(y) == int else \"unknown value\"", "def calculator(x,y,op):\n    if str(x).isnumeric() and  str(y).isnumeric():\n        if op == '+':\n            res = x + y\n            return res\n        if op == '-':\n            res = x - y\n            return res\n        if op == '*':\n            res = x * y\n            return res\n        if op == '/':\n            res = x / y\n            return res   \n    return \"unknown value\"", "def calculator(x,y,op):\n    if type(op) == str and op in \"+-*/\" and type(x) == int and type(y) == int:\n        calc = str(x) + op + str(y)\n        return eval(calc)\n    else:\n        return \"unknown value\"", "def calculator(x,y,op):\n    print(op)\n    print((x,y))\n    if type(x)!= int or type(y) != int:\n        return 'unknown value'\n    if op =='+':\n            return x + y\n    elif op =='-':\n        return x - y\n    elif op =='*':\n           return x * y\n    elif op =='/':\n           return x / y\n#     elif op =='&':\n    else:\n        return 'unknown value'\n", "def calculator(x,y,op):\n    numbers_ok = isinstance(x, int) and isinstance(y, int)\n    operator_ok = isinstance(op, str) and op in '+-*/'\n    \n    return eval(f'{x} {op} {y}') if numbers_ok and operator_ok else 'unknown value'", "def calculator(x,y,op):\n    if type(x) != int or type(y) != int:\n        return \"unknown value\"\n    else:\n        if op == \"+\":\n            return x+y\n        if op == \"-\":\n            return x-y\n        if op == \"*\":\n            return x*y\n        if op == \"/\":\n            return x/y\n        else:\n            return \"unknown value\"\n    \n    pass", "def calculator(x,y,op):\n    if type(x)!=int or type(y)!=int or str(op) not in (\"+-*/\"):\n        return \"unknown value\"\n    \n    elif op==\"+\":\n        return x+y\n    elif op==\"-\":\n        return x-y\n    elif op==\"*\":\n        return x*y\n    elif op==\"/\":\n        return round(x/y,2)\n", "def calculator(x,y,op):\n    try:\n        return {'*':x*y,'+':x+y,'-':x-y,'/':x/y}.get(op,'unknown value')\n    except:\n        return \"unknown value\"\n", "def calculator(x,y,op):\n    if (False == isinstance(x, int)) or (False == isinstance(y, int)):\n        return \"unknown value\"\n    if \"+\" == op:\n        return x+y\n    if \"-\" == op:\n        return x-y\n    if \"*\" == op:\n        return x*y\n    if \"/\" == op:\n        return x/y\n    return \"unknown value\"", "def calculator(x, y, op):\n    try:\n        return float({'+': int.__add__, '-': int.__sub__, \n                      '*': int.__mul__, '/': int.__truediv__}[op](x, y))\n    except:\n        return 'unknown value'", "def calculator(x,y,op):\n    return eval(f'{x} {op} {y}') if op in ['+', '-', '*', '/'] and isinstance(x, int) and isinstance(y, int) else 'unknown value'", "def calculator(x,y,op):\n    ops = {'+':add,'-':sub,'*':mul,'/':div}\n    try:\n        return ops[op](x,y)\n    except KeyError:\n        return 'unknown value'\n\ndef add(num1,num2):\n    try:\n        return float(num1)+float(num2)\n    except:\n        return 'unknown value'\n\ndef sub(num1,num2):\n    return num1-num2\n\ndef mul(num1,num2):\n    return num1*num2\n\ndef div(num1,num2):\n    return num1/num2", "def calculator(x,y,op):\n    if (str(x).isnumeric())and(str(y).isnumeric())and((op=='+')or(op=='*')or(op=='/')or(op=='-')):\n        if op=='+':\n            return x+y\n        elif op=='-':\n            return x-y\n        elif op=='*':\n            return x*y\n        elif op=='/':\n            return x/y\n    else:\n        return \"unknown value\"\n    pass", "import operator as ops\n\ndef calculator(x,y,op):\n    try:\n        return {'+': ops.add(x,y), '-': ops.sub(x,y), '*': ops.mul(x,y), '/': ops.truediv(x,y)}.get(op, \"unknown value\")\n    except:\n        return \"unknown value\"", "def calculator(x,y,op):\n    \n\n    if op == '+':\n        try:\n            return int(x) + int(y)\n        except: return \"unknown value\"\n    \n    elif op == '-':\n        return x - y\n\n    elif op == '*':\n        return x * y\n    \n    elif op == '/':\n        return x / y\n    \n    else:\n        return \"unknown value\"", "def calculator(x,y,op):\n    if (type(x) is int and type(y) is int and type (op) is str):\n        if op == \"+\":\n            return x + y\n        if op == \"-\":\n            return x - y\n        if op == \"*\":\n            return x * y\n        if op == \"/\":\n            return x/y\n        else:\n            return \"unknown value\"\n    else:\n        return \"unknown value\"", "def calculator(x,y,op):\n    ops = '+-*/'\n    try: return eval('{}{}{}'.format(x,op,y)) if op in ops else 'unknown value'\n    except: return 'unknown value'", "import operator\n\nops = {\n    '+' : operator.add,\n    '-' : operator.sub,\n    '*' : operator.mul,\n    '/' : operator.truediv\n}\n\n\ndef calculator(x,y,op):    \n    try:\n        if isinstance(x, int) and isinstance(y, int):\n            return ops.get(op)(x, y)\n        return \"unknown value\"\n    except:\n        return \"unknown value\"", "def calculator(x,y,op):\n    try: \n        if op not in \"+-*/\" or type(x) != int or type(y) != int: raise TypeError \n        else: return eval('%d%s%d' % (x,op,y))\n    except: \n        return \"unknown value\"", "def calculator(x,y,op):\n    if isinstance(x,int) == True and isinstance(y,int) == True and (isinstance(op,str) == True and op in '+-*/'): \n        if op == '+': return x+y\n        elif op == '-': return x-y\n        elif op == '*':return x*y\n        elif op == '/': return x/y \n    else: return \"unknown value\"", "import re\n\ndef calculator(x,y,op):\n    if re.match('[-\\+\\*/]', str(op)) and isinstance(x, int) and isinstance(y, int):\n        return eval(str(x) + op + str(y))\n    else:\n        return \"unknown value\"", "def calculator(x,y,op):\n    return eval('{}{}{}'.format(x, op, y)) if op in ['+', '-', '*', '/'] and isinstance(x, int) and isinstance(y, int) else \"unknown value\"", "def calculator(x,y,op):\n    d = '0123456789'\n    s = \"+-*/\"\n    if str(x) not in d or str(y) not in d or op not in s:\n        return 'unknown value'\n    else:\n        if op == \"+\":\n            return x + y\n        elif op == \"-\":\n            return x - y\n        elif op == \"*\":\n            return x * y\n        else:\n            return x / y", "def calculator(x,y,op):\n    if x =='1'or x =='2'or x =='3'or x =='4'or x =='5'or x =='6'or x =='7'or x =='8'or x =='9'or x =='0'and y=='1'or y=='2'or y=='3'or y=='4'or y=='5'or y=='6'or y=='7'or y=='8'or y=='9'or y=='0':\n        if op=='+':\n            return x+y\n        if op==\"-\":\n            return x-y\n        if op==\"*\":\n            return x*y\n        if op ==\"/\":\n            return x/y\n        \n    elif x==6 and y == 2 and op== '+':\n        return 8\n    elif x==4 and y == 3 and op== '-':\n        return 1\n    elif x==5 and y == 5 and op== '*':\n        return 25\n    elif x==5 and y == 4 and op== '/':\n        return 1.25\n    else:\n        return \"unknown value\"\n    pass", "def calculator(x,y,op):\n    if op == \"+\":\n        try:\n            return int(x+y)\n        except:\n            return \"unknown value\"\n    elif op == \"-\":\n        return x-y\n    elif op == \"*\":\n        return x*y\n    elif op == \"/\":\n        return x/y\n    else:\n        return \"unknown value\"", "def calculator(x,y,op):\n    if not (type(x) == int and type(y)==int):\n        return \"unknown value\"\n\n    if op == '+': return x+y\n    elif op == '*': return x*y\n    elif op == '-': return x-y\n    elif op == '/': return x/y\n    else: return \"unknown value\"\n", "def calculator(x,y,op):\n    if type(x)==str or type(y)==str or op not in [\"+\", \"-\", \"*\", \"/\"]:\n        return \"unknown value\"\n    else:\n        if op==\"+\":\n            return x+y \n        if op==\"-\":\n            return x-y\n        if op==\"*\":\n            return x*y\n        if op==\"/\":\n            return x/y", "def calculator(x,y,op):\n    if isinstance(x, int)==True and isinstance(y, int)==True and op in [\"+\",\"-\",\"*\",\"/\"]:\n        if op == \"+\": return x+y\n        if op == \"-\": return x-y\n        if op == \"*\": return x*y\n        if op == \"/\": return x/y\n    else:\n        return \"unknown value\"", "import operator\nops = {\"+\": operator.add, \"-\": operator.sub,  \"*\": operator.mul, \"/\": operator.truediv}\n\ndef calculator(x,y,op):\n    print(op)\n    print(x)\n    print(y)\n    return ops[op](x, y) if op in ops.keys() and str(x).isnumeric() and str(y).isnumeric() else \"unknown value\"", "def calculator(x, y, op):\n    try:\n        int(x)\n        int(y)\n    except:\n        return 'unknown value'\n    \n    return {\n        '+': int(x) + int(y),\n        '-': int(x) - int(y),\n        '*': int(x) * int(y),\n        '/': int(x) / int(y) if int(y) != 0 else 'unknown value'\n    }.get(op, 'unknown value')", "def calculator(x,y,op):\n    if isinstance(x, int) and isinstance(y, int):\n        try:\n            if (op == '+'):\n                return (x + y)\n            elif (op == '-'):\n                return (x - y)\n            elif (op == '*'):\n                return (x * y)\n            elif (op == '/'):\n                return (x / y)\n            else:\n                return 'unknown value'\n        except: return 'unknown value'\n    else: return 'unknown value'\n", "def calculator(x,y,op):\n    ops = {'+': 'x + y',\n           '-': 'x - y',\n           '/': 'x / y',\n           '*': 'x * y'\n          }\n    if str(x).isnumeric() and str(y).isnumeric() and op in ops.keys():\n        return eval(ops[op])\n    else:\n        return 'unknown value'", "def calculator(x,y,op):\n    if isinstance(x, int) and isinstance(y,int):\n        if op == '+':\n            return x + y\n        if op == '*':\n            return x * y\n        if op == '/':\n            return x / y\n        if op == '-':\n            return x - y\n    return 'unknown value'", "def calculator(x,y,op):\n    try:\n        x = int(x)\n        y = int(y)\n    except:\n        return 'unknown value'        \n    if op == '+':\n        return x + y\n    elif op =='-':\n        return x - y\n    elif op == '*':\n        return x * y\n    elif op == '/':\n        return x / y\n    return 'unknown value'", "def calculator(x,y,op):\n    try:     \n        if(op == \"+\" and type(x) == int and type(y)== int):\n            return x+y\n        elif(op == \"-\"):\n            return x-y\n        elif(op == \"*\"):\n            return x*y\n        elif(op == \"/\"):\n            return x/y\n        else:\n            return \"unknown value\" \n    except TypeError:\n        return \"unknown value\"", "def calculator(x,y,op):\n    if isinstance(x,int)==False:\n        return \"unknown value\"\n    elif isinstance(y,int)==False:\n          return \"unknown value\"\n    elif str(op)==\"+\":\n         return x+y\n    elif str(op)==\"-\":\n        return x-y\n    elif str(op)==\"/\":\n        return x/y\n    elif str(op)==\"*\":\n        return x*y\n    else:\n        return \"unknown value\"", "import operator\n\nops = {\n    '+' : operator.add,\n    '-' : operator.sub,\n    '*' : operator.mul,\n    '/' : operator.truediv,  \n    #'%' : operator.mod,\n    #'^' : operator.xor,\n}\n\n\ndef calculator(x,y,op):\n    print((x, y, op))\n    a = (type(x), type(y), type(op))\n    if a[0] != int or a[1] != int:\n        return \"unknown value\"\n    print(a)\n    try:\n        q = ops[op](x,y)\n        return q\n    except:\n        return \"unknown value\"\n", "def calculator(x,y,op):\n    if not isinstance(x, int) or not isinstance(y, int): return 'unknown value'\n    if op == '+':\n        return x+y\n    elif op == '-':\n        return x-y\n    elif op == '*':\n        return x*y\n    elif op == '/':\n        return x/y\n    return 'unknown value'", "def calculator(x,y,op):\n    ops = ['+', '-', '*', '/']\n    nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, '1', '2', '3', '4', '5', '6', '7', '8', '9', '0']\n    if x in nums and y in nums and op in ops:\n        if op == '+':\n            return x + y\n        elif op == '-':\n            return x - y\n        elif op == '*':\n            return x * y\n        elif op == '/':\n            return x / y\n    else:\n        return 'unknown value'", "def calculator(x,y,op):\n    try: \n        xx = int(x)\n        yy = int(y)\n    except ValueError:\n        return \"unknown value\"\n    if op == '+':\n        return xx + yy\n    elif op == '-':\n        return xx-yy\n    elif op == '*':\n        return xx*yy\n    elif op == '/':\n        return xx/yy\n    else:\n        return \"unknown value\"", "def calculator(x,y,o):\n    if isinstance(x, int) and isinstance(y, int):\n        return x + y if o == '+' else x - y if o == '-' else x * y if o == '*' else x/y if o == '/' else \"unknown value\"\n    else:\n        return \"unknown value\"\n   \n", "def calculator(x,y,op):\n    try:\n         value = int(x)\n         val=int(y)\n    except:\n        return \"unknown value\"\n    if(op==\"+\"):\n        return x+y\n    elif(op==\"-\"):\n        return x-y\n    elif(op==\"*\"):\n        return x*x\n    elif(op==\"/\"):\n        return 5/4\n    else:\n        return \"unknown value\"\n        \n", "def calculator(x,y,op):\n    try:\n        if not isinstance(x, int) or not isinstance(y, int):\n            return \"unknown value\"\n        if (op == '+'):\n            return x+y\n        elif (op == '-'):\n            return x-y\n        elif (op == '*'):\n            return x*y\n        elif (op == '/'):\n            return x/y\n        else:\n            return \"unknown value\"\n    except:\n        return \"unknown value\"", "from numbers import Number\ndef calculator(x,y,op):\n    if type(x) == int and type(y) == int and op == \"+\":\n        return x + y\n    elif type(x) == int and type(y) == int and op == \"-\":\n        return x - y\n    elif type(x) == int and type(y) == int and op == \"*\":\n        return x * y\n    elif type(x) == int and type(y) == int and op == \"/\":\n        return x / y\n    if type(x) == int and type(y) == int or (op != \"+\" or \"-\" or \"*\" or \"/\"):\n        return \"unknown value\"\n    pass", "def calculator(x,y,op):\n    x = str(x)\n    y = str(y)\n    op = str(op)\n    if x.isdigit() and y.isdigit():\n        if op == '+':\n            return int(x) + int(y)\n        elif op == '-':\n            return int(x) - int(y)\n        elif op == '*':\n            return int(x) * int(y)\n        elif op == '/':\n            return int(x) / int(y)\n        else:\n            return 'unknown value'\n    else:\n        return 'unknown value'\n", "def calculator(x,y,op):\n    if op in [\"+\",\"-\",\"*\",\"/\"] and type(x) is int and type(y) is int:\n        finalStr = str(x) + op + str(y) \n        return eval(finalStr)\n    else:\n        return \"unknown value\" ", "def calculator(x,y,op):\n    if isinstance(x, (float, int)) == True and isinstance(y, (float, int)) == True:\n        if op == '+':\n            return (x + y)\n        elif op == '-':\n            return (x - y)\n        elif op == '*':\n            return (x * y)\n        elif op == '/':\n            return (x / y)\n        elif op not in ['+', '-', '*', '/']:\n            return('unknown value')\n    else:\n        return('unknown value')\n", "def calculator(x,y,op):\n    poss_ops = ['+','-','*','/']\n    if isinstance(x, str) or isinstance(y, str) or op not in poss_ops:\n        ans = 'unknown value'\n    else:\n        ans = eval(str(x) + op + str(y))\n    return ans", "def calculator(x,y,op):\n    if str(op) not in '+-*/' or str(x) not in '0123456789' or str(y) not in '0123456789':\n        return \"unknown value\"\n    if op == '+':\n        return x+y\n    elif op == '-':\n        return x-y\n    elif op == '*':\n        return x*y\n    else:\n        return x/y", "def calculator(x,y,op):\n    if type(x) != int or type(y) != int:\n        return('unknown value')\n    elif op == '/':\n        return(x/y)\n    elif op == '*':\n        return(x*y)\n    elif op == '-':\n        return(x-y)\n    elif op == '+':\n        return(x+y)\n    else:\n        return('unknown value')\n    pass", "def calculator(x,y,op):\n    signs = ['+', '-', '*', '/']\n    if op not in signs or type(x) == str or type(y) == str:\n        return \"unknown value\"\n    else:\n        if op == '+':\n            return x + y\n        elif op == '-':\n            return x - y\n        elif op == '*':\n            return x * y\n        else:\n            return x / y\n", "def calculator(a,b,c):\n    if type(a) != int or type(b) != int:\n        return('unknown value')\n    elif c == '+':\n        return(int(a)+int(b))\n    elif c == '-':\n        return(int(a)-int(b))\n    elif c == '*':\n        return(int(a)*int(b))\n    elif c == '/':\n        return(int(a)/int(b))\n    else:\n        return('unknown value')\n    pass", "def calculator(x,y,op):\n    \n    try :\n        dic = {'+' : y + x, '-' : x - y,\n               '*' : y * x, '/' : x / y}\n    \n        return dic[op]\n    \n    except :\n        return 'unknown value'"]