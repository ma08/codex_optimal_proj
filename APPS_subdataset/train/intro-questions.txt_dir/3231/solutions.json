["def case_unification(s):\n    return s.lower() if sum(1 for i in s if i.islower()) > sum(1 for i in s if i.isupper()) else s.upper()", "def case_unification(s):\n    return s.upper() if sum(c.islower() for c in s) < len(s)/2 else s.lower()", "def case_unification(str):\n    return str.lower() if sum(1 for ch in str if ch.islower()) > len(str) // 2 else str.upper()", "def case_unification(s):\n    return s.upper() if sum(x.isupper() for x in s) / len(s) > 0.5 else s.lower()", "def case_unification(s):\n    l = sum(1 if i.isupper() else -1 for i in s)\n    return s.lower() if l < 0 else s.upper()", "def case_unification(s):\n    return s.upper() if sorted(s)[len(s)//2].isupper() else s.lower()", "def case_unification(s):\n  n = sum(c.islower() for c in s)\n  return s.lower() if n > len(s) - n else s.upper()\n", "from re import finditer\ndef case_unification(word):\n    return word.lower() if len(list(finditer(r'([a-z])', word))) > len(list(finditer(r'([A-Z])', word))) else word.upper()\n", "def case_unification(s):\n    lower = sum(c.islower() for c in s)\n    upper = len(s) - lower\n    func = str.upper if upper > lower else str.lower\n    return func(s)"]