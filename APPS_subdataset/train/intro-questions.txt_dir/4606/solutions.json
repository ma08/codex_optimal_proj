["import re\n\nPATTERN = re.compile(\"^\"\n    \"M{0,4}\"             # thousands\n    \"(CM|CD|D?C{,3})\"    # hundreds\n    \"(XC|XL|L?X{,3})\"    # tens\n    \"(IX|IV|V?I{,3})\"    # units\n    \"$\")\n\ndef valid_romans(arr):\n    return [e for e in arr if e and PATTERN.match(e)]", "import re\n\n\ndef valid_romans(arr):\n    \"\"\"Return all elements of 'arr' which are correct Roman numbers between 1 and 4999.\"\"\"\n    return [roman for roman in arr if roman and re.fullmatch(\n        \"(M{,4})\"\n        \"(C[MD]|D?C{,3})\"\n        \"(X[CL]|L?X{,3})\"\n        \"(I[XV]|V?I{,3})\", roman)]", "check = __import__(\"re\").compile(r\"(?=[MDCLXVI])M*(C[MD]|D?C*)(X[CL]|L?X*)(I[XV]|V?I*)\").fullmatch\n\ndef valid_romans(arr):\n    return list(filter(check, arr))", "import re\ndef valid_romans(arr):\n    return [num for num in arr if num and re.match(r'^M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$', num)]", "import re\n\ndef valid_romans(arr):\n    pattern = re.compile(r\"^M{0,4}(CM|CD|D?C{0,3})?(XC|XL|L?X{0,3})?(IX|IV|V?I{0,3})$\")\n    return [number for number in arr if number and pattern.match(number)]", "def valid(n):\n    if not n:  return False\n    import re\n    return re.fullmatch('(M|MM|MMM|MMMM)?'\n                        '(C|CC|CCC|CD|D|DC|DCC|DCCC|CM)?'\n                        '(X|XX|XXX|XL|L|LX|LXX|LXXX|XC)?'\n                        '(I|II|III|IV|V|VI|VII|VIII|IX)?', n)\n\ndef valid_romans(arr):\n    return [n for n in arr if valid(n)]", "import re\n\ndef valid_romans(arr):\n    return [e for e in arr if e\n        and re.match(\"^M{,4}(CM|CD|D?C{,3})(XC|XL|L?X{,3})(IX|IV|V?I{,3})$\", e)]", "ones = [''] + 'I II III IV V VI VII VIII IX'.split()\ntens = [''] + 'X XX XXX XL L LX LXX LXXX XC'.split()\nhundreds = [''] + 'C CC CCC CD D DC DCC DCCC CM'.split()\nthousands = [''] + 'M MM MMM MMMM'.split()\ngood = ['MMMMM'] + [i+j+k+l for i in thousands for j in hundreds for k in tens for l in ones]\n\ndef valid_romans(arr):\n    return [i for i in arr if i and i in good]", "from re import fullmatch\ndef valid_romans(arr):\n    units = '((IV)|(IX)|(VI{0,3})|(I{1,3}))?'\n    tens = '((XC)|(XL)|(LX{0,3})|X{1,3})?'\n    hndr = '((CD)|(CM)|(DC{0,3})|C{1,3})?'\n    ths = '(M{1,4}){0,1}'\n    regex = ths + hndr  + tens + units \n    return [s for s in arr if fullmatch(regex,s) and 0 < len(s)]"]