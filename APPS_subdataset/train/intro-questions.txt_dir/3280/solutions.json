["def make_readable(s):\n    return '{:02}:{:02}:{:02}'.format(s // 3600, s // 60 % 60, s % 60)\n", "def make_readable(seconds):\n    hours, seconds = divmod(seconds, 60 ** 2)\n    minutes, seconds = divmod(seconds, 60)\n    return '{:02}:{:02}:{:02}'.format(hours, minutes, seconds)", "def make_readable(seconds):\n    hours = seconds // 3600\n    mins = (seconds - hours*3600) // 60\n    secs = seconds - (hours*3600 + mins*60)\n\n    h_str = str(hours)\n    m_str = str(mins)\n    s_str = str(secs) \n\n    if len(h_str) < 2:\n        h_str = '0' + h_str\n\n    if len(m_str) < 2:\n        m_str = '0' + m_str  \n\n    if len(s_str) < 2:\n        s_str = '0' + s_str    \n\n    return(f'{h_str}:{m_str}:{s_str}')\n", "def make_readable(seconds):\n    h= seconds/60**2\n    m= (seconds%60**2)/60\n    s= (seconds%60**2%60)\n    return \"%02d:%02d:%02d\" % (h, m, s)\n    # Do something\n", "def make_readable(seconds):\n    m, s = divmod(seconds, 60)\n    h, m = divmod(m, 60)\n    return \"%02d:%02d:%02d\" % (h, m, s)", "def make_readable(n):\n    return f'{n//3600:02d}:{(n%3600)//60:02d}:{n%60:02d}'\n", "import math\ndef make_readable(seconds):\n    hours = math.floor(seconds/(60*60))\n    seconds-=hours*60*60\n    minutes = math.floor(seconds/(60))\n    seconds-=minutes*60\n    out=\"\"\n    if(hours<10): \n        out+=\"0\"\n    out+=str(int(hours))+\":\"\n    if(minutes<10): \n        out+=\"0\"\n    out+=str(int(minutes))+\":\"\n    if(seconds<10): \n        out+=\"0\"\n    out+=str(int(seconds))\n    return out\n", "def make_readable(seconds):\n    '''Returns the time in `seconds` as a human-readable format (HH:MM:SS).\n    '''\n    minute, hour = 60, 60 ** 2    \n    return \"%02d:%02d:%02d\" % (\n        seconds / hour,\n        seconds % hour / minute,\n        seconds % hour % minute\n    )"]