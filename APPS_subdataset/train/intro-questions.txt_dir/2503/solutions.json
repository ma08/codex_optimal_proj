["class Solution:\n     def findLUSlength(self, a, b):\n         \"\"\"\n         :type a: str\n         :type b: str\n         :rtype: int\n         \"\"\"\n         return max(len(a),len(b)) if a != b else -1", "class Solution:\n     def findLUSlength(self, a, b):\n         \"\"\"\n         :type a: str\n         :type b: str\n         :rtype: int\n         \"\"\"\n         if a == b:\n             return -1\n         \n         if len(a) > len(b):\n             return len(a)\n         elif len(b) > len(a):\n             return len(b)\n         else:\n             return len(a)", "class Solution:\n     def findLUSlength(self, a, b):\n         \"\"\"\n         :type a: str\n         :type b: str\n         :rtype: int\n         \"\"\"\n         \n         return -1 if a == b else max(len(a), len(b))\n", "class Solution:\n     def findLUSlength(self, a, b):\n         \"\"\"\n         :type a: str\n         :type b: str\n         :rtype: int\n         \"\"\"\n         if len(a) != len(b):\n             return max(len(a),len(b))\n         elif a==b:\n             return -1\n         else:\n             return len(a)", "class Solution:\n     def findLUSlength(self, a, b):\n         if len(a) != len(b):\n             return max(len(a), len(b))\n         else:\n             if a == b:\n                 return -1\n             else:\n                 return len(a)\n", "class Solution:\n     def findLUSlength(self, a, b):\n         \"\"\"\n         :type a: str\n         :type b: str\n         :rtype: int\n         \"\"\"\n         m = len(a)\n         n = len(b)\n         if m != n:\n             return max(m, n)\n         else:\n             if a != b:\n                 return m\n             else:\n                 return -1", "class Solution:\n     def findLUSlength(self, a, b):\n         return -1 if a==b else max(len(a), len(b))\n", "class Solution:\n     def findLUSlength(self, a, b):\n         \"\"\"\n         :type a: str\n         :type b: str\n         :rtype: int\n         \"\"\"\n         if a == b:\n             return -1\n         else:\n             return max(len(a), len(b))", "class Solution:\n     def findLUSlength(self, a, b):\n         \"\"\"\n         :type a: str\n         :type b: str\n         :rtype: int\n         \"\"\"\n         return -1 if a == b else max(len(a), len(b))            ", "class Solution:\n     def findLUSlength(self, a, b):\n         \"\"\"\n         :type a: str\n         :type b: str\n         :rtype: int\n         \"\"\"\n         if len(a) < len(b): a, b = b, a\n         l = len(a)\n         c = -1\n         for rg in range(1, l+1):\n             for i in range(l - rg + 1):\n                 s = a[i:i+rg]\n                 if b.find(s) == -1:\n                     if len(s) > c: c = len(s)\n         return c", "class Solution:\n     def findLUSlength(self, a, b):\n         \"\"\"\n         :type a: str\n         :type b: str\n         :rtype: int\n         \"\"\"\n         result = 0 \n         for i in range(len(a)):\n             for j in range(i+1,len(a)+1):\n                 if a[i:j] not in b and len(a[i:j])>result:\n                     result = len(a[i:j])\n         for i in range(len(b)):\n             for j in range(i+1,len(b)+1):\n                 if b[i:j] not in a and len(b[i:j])>result:\n                     result = len(b[i:j])\n         if not result:\n             return -1\n         return result\n", "class Solution:\n     def findLUSlength(self, a, b):\n         \"\"\"\n         :type a: str\n         :type b: str\n         :rtype: int\n         \"\"\"\n         m = len(a)\n         n = len(b)\n         if m != n:\n             return max(m, n)\n         else:\n             if a != b:\n                 return m\n             else:\n                 return -1", "class Solution:\n     def findLUSlength(self, a, b):\n         \"\"\"\n         :type a: str\n         :type b: str\n         :rtype: int\n         \"\"\"\n         return -1 if a == b else max(len(a), len(b))\n", "class Solution:\n     def findLUSlength(self, a, b):\n         \"\"\"\n         :type a: str\n         :type b: str\n         :rtype: int\n         \"\"\"\n         if a == b:\n             return -1\n         else:\n             return max(len(a), len(b))"]