["def sxore(n):\n    return [n, 1, n + 1, 0][n % 4]", "def sxore(n):\n    return (n,1,n+1,0)[n%4]", "def sxore(n):\n    res = {0: n, 1: 1, 2: n + 1, 3: 0}\n    return res[n % 4]", "sxore=lambda n:{n%4==0:n,n%4==1:1,n%4==2:n+1}.get(True,0)", "sxore=lambda n:(n,1,n+1,0)[n%4]", "def sxore(n):\n    return (n >> 1) & 1 ^ ( 1 if n&1 else n)\n", "def sxore(n):\n    return (n * (n % 2 == 0)) + ((n + 1) % 4) // 2", "d = {0: lambda x: x,\n     1: lambda x: 1, \n     2: lambda x: (x // 4) * 4 + 3, \n     3: lambda x: 0}\n\ndef sxore(n):\n    return d[n % 4](n)", "def sxore(n):\n    m = n % 4\n    if m == 0: return n\n    if m == 1: return 1\n    if m == 2: return n + 1\n    return 0", "def sxore(n):\n    return [n,1,n+1,0][n%4]\n\n#n,1,n+1,0\n\n\n"]