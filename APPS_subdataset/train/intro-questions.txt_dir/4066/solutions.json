["def string_to_array(string):\n    return string.split(\" \")", "def string_to_array(string=''):\n    return string.split() if string else ['']", "def string_to_array(s):\n    return s.split(' ')", "def string_to_array(string):\n    array = string.split(' ')\n    return array", "def string_to_array(string):\n    return string.split() or ['']", "def string_to_array(s):\n    words = []\n    if s == '':\n        words.append(s)\n    else:\n        words = s.split()\n    return words\n", "def string_to_array(string):\n    return string.split() if string else [\"\"]", "def string_to_array(s):\n    return s.split(\" \") #Single space is delimiter\n# Look how easy Python is :o\n", "def string_to_array(s):\n    word = s.split(\" \")\n    return word", "def string_to_array(s):\n    # your code here\n    if s is '':\n        return s.split(',')\n    else:\n        return s.split()\n", "def string_to_array(s):\n    arr = []\n    \n    words = s.split(\" \")\n    if len(s) == 0:\n        return [\"\"]\n    \n    for word in words:\n        arr.append(word)\n    \n    return arr", "def string_to_array(s):\n    lst = []\n    split_s = s.split()\n    if s == \"\":\n        lst.append(\"\")\n    for letter in split_s:\n        lst.append(letter)\n    return lst", "string_to_array = lambda s: s.split() or [\"\"]", "def string_to_array(string):\n    i = string.split(\" \") \n    return i", "def string_to_array(string):\n    \n    retList=list()\n    retList=(string.split(\" \"))\n    \n    return retList\n", "def string_to_array(string):\n\n    new_string = string.split(' ')\n    \n    text = []\n    \n    for i in new_string:\n        text.append(i)\n        \n    return(text)", "def string_to_array(s):\n    # your code here\n    result = []\n    t = ''\n    e = ' '\n    for i in s:\n        if i not in e:\n            t = t + i\n        else:\n            result.append(t)\n            t = ''\n    result.append(t)\n    return result\n\n", "def string_to_array(s):\n    arr = []\n    temp = ''\n    for i in s:\n        if i != ' ':\n            temp += i\n        else:\n            arr += [temp]\n            temp = ''\n    arr += [temp]\n    return arr", "from re import findall\ndef string_to_array(s):\n    return findall(r'\\w+',s) or ['']", "import re\ndef string_to_array(s):\n\n   # your code here\n   return re.split(r'[;,\\s]\\s*', s) ", "def string_to_array(s):\n    return s.split() if s else [s]", "def string_to_array(s):\n    return [s.split(), [\"\"]][not s]", "def string_to_array(s: str) -> list:\n    return s.split(' ')", "string_to_array = lambda x: x.split(\" \")", "def string_to_array(s):\n    if len(s) == 0:\n        return ['']\n    else:\n        lst = s.split()\n    return lst", "string_to_array = lambda s : s.split() if bool(s) else ['']\n", "def string_to_array(s):\n    return [''] if not(len(s)) else s.split()", "def string_to_array(s):\n    # your code here\n    if len(s) > 1:\n        new = s.split()\n    else:\n        new = ['']\n    return new", "def string_to_array(s):\n    return [item for item in s.split(' ')]", "def string_to_array(s):\n    # your code here\n    l=[]\n    if(s==\"\"):\n        l.append(\"\")\n        return l\n    else:\n        for i in s.split():\n            l.append(i)\n        return l", "def string_to_array(s):\n    if len(s) == 0:\n        _list = []\n        _list.append('')\n        return _list\n    return list(s.split())", "def string_to_array(string):\n    str = string.split(' ')\n    return(str)", "def string_to_array(s):\n    if s == \"\":\n        return [\"\"]\n    return [i for i in s.split()]", "def string_to_array(s):\n    r = ['']\n    if s:\n        r = s.split()\n    return r", "def string_to_array(s):\n    return list(s.split()) if list(s) else [\"\"]\n", "def string_to_array(s):\n    ll = list(s.split(' '))\n    return ll", "def string_to_array(s):\n    if s == '':\n        return ['']\n    s_list = []\n    split_string = s.split()\n    for word in split_string:\n        s_list.append(word)\n    return s_list", "def string_to_array(s):\n    a = s.split(' ')\n    return a\n    \nprint(string_to_array('I are arrays favorites love my they'))", "# Write a function to split a string and convert it into an array of words. \n# For example:\n# \"Robin Singh\" ==> [\"Robin\", \"Singh\"]\n\n\ndef string_to_array(s):\n    return s.split() if s != \"\"  else [\"\"]", "def string_to_array(s):\n    return [s] if not s else s.split()\n", "def string_to_array(s):\n    final_array = s.split(' ')\n    return(final_array)", "def string_to_array(s):\n    new_words = s.split(\" \")\n    return new_words\n\n", "def string_to_array(s: str) -> list:\n    return s.split() if s else [\"\"]", "def string_to_array(s):\n    k=s.split()\n    if s==\"\":\n        return [s]\n    else:\n        return k", "def string_to_array(s):\n    pog = s.split(\" \")\n    return pog ", "def string_to_array(s):\n    # your code here\n    if s: \n        \n        return list(s.split())\n    else:\n        return ['']", "def string_to_array(s):\n    array = []\n    tmp_string = \"\"\n    for i in s:\n        if i == ' ':\n            array.append(tmp_string)\n            tmp_string = \"\"\n        else:\n            tmp_string = tmp_string + i\n    array.append(tmp_string)\n    return array\n", "def string_to_array(s):\n    # your code here\n    if len(s) >= 1:\n        words = s.split()\n        return words\n    else:\n        return [\"\"]", "def string_to_array(s):\n    if s == \"\":\n        return [\"\"]\n    k = s.split()\n    return k", "string_to_array = lambda s: s and s.split() or [\"\"]", "def string_to_array(s):\n    sList = list(s.split(\" \"))\n    return sList", "def string_to_array(s):\n    return s.split and s.split(\" \")\n", "def string_to_array(s):\n    if len(s) <= 0:\n        return ['']\n    else:\n        l = s.split()\n        return list(l)", "def string_to_array(s: str) -> list:\n    return list(s.split()) if s else [\"\"]\n", "def string_to_array(s):\n    # your code here\n    return s.split(\" \")\nstring_to_array(\"Basic tests\")", "def string_to_array(s):\n    text = []\n    text = s.split(\" \")\n    return text", "def string_to_array(s):\n    words = \"\"\n    answer = []\n    for i in s:\n        if i == \" \":\n            answer.append(words)\n            words = \"\"\n        else: words += i\n    answer.append(words)\n    return answer", "def string_to_array(s):\n    c = []\n    for x in s.split():\n        c.append(x)\n    if len(s) == 0 :\n        return [\"\"]\n    return c", "def string_to_array(s):\n    words = s.split()\n    if not words:\n        words.insert(0 , \"\")\n    return words", "def string_to_array(s):\n    con = s.split(\" \")\n    return con", "def string_to_array(s):\n    \"\u041f\u0440\u0435\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u0441\u043f\u0438\u0441\u043e\u043a\"\n    n_s = list(s.split(\" \"))\n    return n_s", "def string_to_array(s):\n    # your code here\n    s=s.replace(\" \",\",\")\n    return s.split(\",\")", "def string_to_array(stroca):\n    return stroca.split(\" \")", "def string_to_array(s):\n    s=s.split(' ')\n    list(s)\n    return s\n", "#best practice\n\n# The split() method splits a string into a list.\n# You can specify the separator, default separator is any whitespace.\n\ndef string_to_array(string):\n    return string.split(\" \")", "#best practice\ndef string_to_array(string):\n    return string.split(\" \")", "def string_to_array(s):\n    if s == \"\":\n        return [\"\"]\n    else:\n        return (str.split(s))", "def string_to_array(s):\n    if s is \"\":\n        return [\"\"]\n    l = list()\n    for i in s.split():\n        l.append(i)\n    return l", "def string_to_array(s):\n    return [s.split(), ['']][s == '']", "def string_to_array(s):\n    if s == '':\n        return ['']\n    else:\n        words = s.split()\n        for word in words:\n            return(words)", "def string_to_array(s):\n    return  [str(w) for w in s.split()] if len(s) else ['']", "ans = []\ndef string_to_array(s):\n    ans = s.split()\n    if s == \"\":\n        ans = [\"\"]\n    return ans\n    # your code here\n", "def string_to_array(s):\n    return s.split() if s else list(('',)) # :/", "def string_to_array(s):\n    return s.split() if len(s) >= 1 else ['']", "def string_to_array(s):\n    string_list = s.split(\" \")\n    return string_list", "def string_to_array(s):\n    if len(s)>1: #if string has characters\n       return s.split() #split string into pieces\n    else: \n        return ['']", "def string_to_array(s):\n    # your code here\n    \n    res = s.split()\n    \n    if len(s) == 0:\n        return [\"\"]\n    \n    return res", "def string_to_array(s):\n    s = s.split()\n    if list(s) == []:\n        return['']\n    else:\n        return list(s)", "def string_to_array(s):\n    return s.split() if len(s.split()) != 0 else [\"\"]", "def string_to_array(s):\n    if s == \"\":\n        res = [s]\n    else:\n        res = s.split()\n    return res", "def string_to_array(s):\n    if s:\n        arr = s.split()\n        return arr\n    else:\n        return ['']", "def string_to_array(s):\n    return ([''],s.split()) [s != '']", "def string_to_array(s):\n    p = s.split(\" \")\n    return p\n", "def string_to_array(s):\n    res = s.split(' ')\n    return res\n", "def string_to_array(s):\n    if s == \"\": \n        return s.split(\",\") \n    else: \n        return s.split()", "def string_to_array(s):\n    # your code here\n    if len(s)>0:\n        return s.split()\n    else:\n        return ['']\n#     return s.split()\n", "def string_to_array(s):\n    if len(s):\n       return s.split()\n    return ['']", "import re\ndef string_to_array(s):\n    return re.split(r'\\s', s)", "import re\ndef string_to_array(s):\n      return re.split(\"\\s\", s)", "def string_to_array(s):\n    # your code here\n    return s.split() if s > '' else [\"\"]", "def string_to_array(s):\n    s = str(s)\n    if s == '':\n        return s.split(',')\n    else:\n        return s.split()", "def string_to_array(s):\n    return list(s.split()) or ['']", "#input - string\n#output - list/array of words\n#edge cases - no input given, integer or other data type given\n#assumptions - I need to take a string and return a list of the words in the string. \n\n#sample data - (\"Robin Singh\"), [\"Robin\", \"Singh\"]\n#do I need to create a separate array? no\n#I can just use string split function\n\n\n#function string_to_array(string)\ndef string_to_array(s):\n    return s.split(' ')\n", "def string_to_array(s):\n    return s.split() if s != \"\" else \"\".split(\",\")", "def string_to_array(s):\n  return list(filter(lambda x : x , s.split(\" \"))) if s else [\"\"]", "def string_to_array(s):\n    import re\n    arr = []\n    if s == '':\n        arr = ['']\n    else:\n        pattern = '(\\w+)'\n        arr = re.findall(pattern, s)\n    return arr", "def string_to_array(s):        \n    arr = []\n    if s == '':\n        arr = ['']\n    else:\n        import re\n        pattern = '(\\w+)'\n        arr = re.findall(pattern, s)\n    return arr", "def string_to_array(s):        \n    arr = []\n    if s == '':\n        arr = ['']\n    else:\n        import re\n        pattern = '(\\w+)' \n        arr = re.findall(pattern, s)\n        arr = [x.strip(' ') for x in arr]\n    return arr \n            \n    \n", "def string_to_array(s):\n    if s == '':\n        array = ['']\n    else:\n        array = []\n    s = s.split()\n    for i in s:\n        array.append(i)\n    return array", "def string_to_array(s):\n    res = []\n    for i in s.split(\" \"):\n        res.append(i)\n    return res"]