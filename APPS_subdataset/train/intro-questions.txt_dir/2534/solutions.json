["class Solution:\n    def maxScore(self, s: str) -> int:\n        maxi=0\n        for i in range(1,len(s)):\n            a=s[:i]\n            b=s[i:]\n            maxi=max(a.count('0')+b.count('1'),maxi)\n        return maxi", "class Solution:\n    def maxScore(self, s: str) -> int:\n        maxi = 0\n        for i in range(len(s)-1):\n            s1 = s[:i+1]\n            i1 = list(s1).count('0')\n            s2 = s[i+1:]\n            i2 = list(s2).count('1')\n            total = i1+i2\n            #print(total)\n            if total >= maxi :\n                maxi = total \n            #print(maxi)\n            #print(i1,i2)\n        return maxi \n", "class Solution:\n    def maxScore(self, s: str) -> int:\n        res=0\n        for i in range(1,len(s)):\n            left_count=list(s[:i]).count('0') \n            right_count=list(s[i:]).count('1')\n            if left_count+right_count>res:\n                res=left_count+right_count\n        return res", "class Solution:\n    def maxScore(self, s: str) -> int:\n        return max(s[:i].count('0') + s[i:].count('1') for i in range(1, len(s)))\n", "class Solution:\n    def maxScore(self, s: str) -> int:\n        l = 0\n        r = 0\n        ans = 0\n        for i in range(len(s)-1):\n            if s[i] == '0':\n                l+=1\n            r = 0\n            # print(s[:i], s[i:])\n            for j in range(i+1, len(s)):\n                if s[j] == '1':\n                    r += 1\n            # print(l, r)\n            ans = max(ans, l+r)\n        return ans", "class Solution:\n    def maxScore(self, s: str) -> int:\n        count_0 = 0\n        count_1 = 0\n        result=[]\n\n        \n        for i in range(0,len(s)-1):\n            if s[i] == '0':\n                count_0 += 1            \n            for j in range(i+1,len(s)):\n\n                if s[j] == '1':\n                    count_1 += 1\n            result+=[count_0 + count_1]\n            count_1=0\n        return(max(result))\n                    \n                \n", "class Solution:\n    def maxScore(self, s: str) -> int:\n        result = 0\n        \n        for i in range(1, len(s)):\n            left = s[:i]\n            right = s[i:]\n            \n            score = 0\n            for char in left:\n                if char == '0':\n                    score += 1\n            for char in right:\n                if char == '1':\n                    score += 1\n            if score > result:\n                result = score        \n        \n\n        \n        return result", "class Solution:\n    def maxScore(self, s: str) -> int:\n        count = 0 \n        for i in range(1,len(s)):\n            a, b = Counter(s[:i]), Counter(s[i:])\n            count = max(count, a['0'] + b['1'])\n        return count\n        \n", "# O(n^2) time | O(n) space\nclass Solution:\n    def maxScore(self, s: str) -> int:\n        if len(s) <= 1: return getScore(s)\n        \n        best = -1\n        for i in range(1, len(s)): # O(n) time\n            best = max(best, self.getScore(s[:i], s[i:])) # O(n) time, O(2n) space\n        return best\n            \n    \n    def getScore(self, left, right):\n        return left.count('0') + right.count('1')\n            \n", "class Solution:\n    def maxScore(self, s: str) -> int:\n        lis = []\n        for i in range(1, len(s)):\n            num1 = 0\n            num2 = 0\n            s1 = s[:i]\n            s2 = s[i:]\n            for i in s1:\n                if i == '0':\n                    num1 += 1\n            for i in s2:\n                if i == '1':\n                    num2 += 1\n            lis.append(num1 + num2)\n        lis.sort(reverse = True)\n        return lis[0]\n", "class Solution:\n    def maxScore(self, s: str) -> int:\n        def countchar(given, char):\n            count = 0\n            for x in given:\n                if x == char:\n                    count += 1\n            return count\n        \n        maxans = 0\n        \n        \n        for i in range(len(s)-1):\n            ans = 0\n            if s[:i+1]:\n                leftcount = countchar(s[:i+1], '0')\n                ans += leftcount\n                \n            if s[i+1:]:\n                rightcount = countchar(s[i+1:], '1')\n                ans += rightcount\n            \n            maxans = max(maxans, ans)\n        \n        return maxans\n            \n", "class Solution:\n    def maxScore(self, s: str) -> int:\n        list_score = []\n        for i in range(1,len(s)):\n            score = 0\n            for j in s[:i]:\n                if j == '0':\n                    score += 1\n            for j in s[i:]:\n                if j == '1':\n                    score += 1\n            list_score.append(score)\n        \n        return max(list_score)\n", "class Solution:\n    def maxScore(self, s: str) -> int:\n        n = len(s)\n        result = 0\n        if n<= 1:\n            return n\n        for i in range(1,n):\n            left = s[:i]\n            right = s[i:n]\n            leftZeroCount = 0\n            rightOneCount = 0\n\n            for j in range(len(left)):\n                if left[j] == '0':\n                    leftZeroCount+=1\n            for k in range(len(right)):\n                if right[k] == '1':\n                    rightOneCount += 1\n            if (leftZeroCount+rightOneCount) > result:\n                result = leftZeroCount+rightOneCount\n        return result", "class Solution:\n    def maxScore(self, s: str) -> int:\n        n = len(s)\n        zeros = [0 for ii in range(n)]\n        ones = [0 for ii in range(n)]\n        if s[0] == '0':\n            zeros[0] = 1\n        else:\n            zeros[0] = 0\n        if s[n-1] == '1':\n            ones[n-1] = 1\n        else:\n            ones[n-1] = 0\n        \n        for ii in range(1,n):\n            if s[ii] == '0':\n                zeros[ii] = zeros[ii-1] + 1\n            else:\n                zeros[ii] = zeros[ii-1]\n            \n            if s[n - 1 - ii] == '1':\n                ones[n-1-ii] = ones[n-ii] + 1\n            else:\n                ones[n-1-ii] = ones[n-ii]\n                \n        if s[0] == '1':\n            ones[0] -= 1\n        if s[n-1] == '0':\n            zeros[n-1] -= 1\n          \n        mx = 0\n        for ii in range(len(zeros)):\n            if zeros[ii] + ones[ii] > mx:\n                mx = zeros[ii] + ones[ii]\n                \n        return mx", "class Solution:\n    def maxScore(self, s: str) -> int:\n        res = 0\n        for i in range(len(s)):\n            if(i != len(s)-1):\n                t = self.calcScore(s[:i+1],s[i+1:])\n                res = max(res,t)\n        return res\n    def calcScore(self,s1:str,s2:str) -> int:\n        return s1.count('0') + s2.count('1')", "class Solution:\n    def maxScore(self, s: str) -> int:\n        return max(s[:i].count('0') + s[i:].count('1') for i in range(1, len(s)))\n        \n"]