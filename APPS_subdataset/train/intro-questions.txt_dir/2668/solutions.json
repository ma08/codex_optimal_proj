["def step_through_with(s):\n    return any(m == n for m, n in zip(s, s[1:]))", "import re\ndef step_through_with(s): return re.compile(r'([a-z])\\1', re.I).search(s) is not None", "def step_through_with(s):\n    prev = ''    \n    for letter in s:\n        if prev == letter:\n            return True\n        prev = letter\n    return False\n", "import re\ndef step_through_with(s):\n    # You can't bring your code, but you can bring this comment\n    return bool(re.search(r'(.)\\1', s))\n", "def step_through_with(s):\n    for letter in \"abcdefghijklmnopqrstuvwxyz\":\n        if letter * 2 in s:\n            return True\n    return False", "def step_through_with(s):\n    return any(map(str.__eq__, s, s[1:]))", "def step_through_with(s):\n    return any(c1 == c2 for c1, c2 in zip(s, s[1:]))", "def step_through_with(s):\n    return any(s[i-1] == x for i, x in enumerate(s[1:], 1))", "def step_through_with(s):\n    return any(l+l in s for l in s)\n", "step_through_with=lambda s,r=__import__(\"re\").compile(r\"([a-zA-Z])\\1\"):bool(r.search(s))"]