["brackets = {\"}\":\"{\",\"]\":\"[\",\")\":\"(\"}\n\ndef braces_status(s):\n    stack = []\n    \n    for c in s:\n        if c in \"[({\":\n            stack.append(c)\n        elif c in \"])}\":\n            if not stack or stack.pop() != brackets[c]:\n                return False\n    \n    return not stack", "def braces_status(string):\n    s = \"\".join([b for b in string if b in '(){}[]'])\n    while any(b in s for b in ['()','{}','[]']):\n        s = s.replace('()','').replace('{}','').replace('[]','')\n    return True if len(s) == 0 else False", "parens = dict([')(', '][', '}{'])\nopens = set(parens.values())\n\ndef braces_status(s):\n    stack = []\n    for c in s:\n        if c in opens:\n            stack.append(c)\n        elif c in parens:\n            if not (stack and stack.pop() == parens[c]):\n                return False\n    return not stack", "def braces_status(string):\n    stack = []\n    corresp = {')':'(', '}':'{', ']':'['}\n    for c in (s for s in string if s in \"()[]{}\"):\n        if c in '([{': \n            stack.append(c)\n        elif not stack or stack.pop() != corresp[c]:\n            return False\n    return not stack", "def braces_status(s):\n    paren = {')': '(', ']': '[', '}': '{'}\n    opened = []\n    for c in s:\n        if c in paren.values():\n            opened.append(ord(c))\n        elif c in paren:\n            if not opened or opened.pop() != ord(paren[c]):\n                return False\n    return not opened", "def braces_status(string):\n    s = \"\".join(list(filter(lambda ch: ch in \"{[()]}\",list(string))))\n    while '{}' in s or '()' in s or '[]' in s:\n        s=s.replace('{}','')\n        s=s.replace('[]','')\n        s=s.replace('()','')\n    return s==''", "def braces_status(string):\n    if \"(]\" in string or \"(}\" in string or \"[)\" in string or \"[}\" in string or \"{)\" in string or \"{]\" in string or string.count(\"(\")!= string.count(\")\") or string.count(\"[\")!= string.count(\"]\") or string.count(\"{\")!= string.count(\"}\"):\n        return False\n    else:\n        return True", "def braces_status(s):\n    matching = {\"}\":\"{\",\"]\":\"[\",\")\":\"(\"}\n    stack = []\n    for c in s:\n        if c in \"[({\":\n            stack.append(c)\n        elif c in matching and (not stack or stack.pop() != matching[c]):\n            return False\n    return not stack", "def braces_status(s):\n    l = []\n    d = {'(': ')', '{': '}', '[': ']'}\n    for x in s:\n        if x in '({[':\n            l.append(d[x])\n        elif x in ')}]':\n            if not l or not x == l.pop():\n                return 0\n    return not l", "def braces_status(s):\n    order = [\"X\"]\n    for i in s:\n        if i in \"({[\" : order.append(\")}]\"[\"({[\".index(i)])\n        elif i in \")}]\":\n            if order.pop()!=i : return 0\n    return len(order)==1"]