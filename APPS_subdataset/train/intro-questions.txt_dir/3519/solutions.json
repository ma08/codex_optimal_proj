["def duplicate_elements(m, n):\n    return not set(m).isdisjoint(n)", "def duplicate_elements(m, n):\n    return any(x in n for x in m)", "def duplicate_elements(m, n):\n    return bool(set(m) & set(n))", "def duplicate_elements(m, n):\n    return bool(set(m).intersection(n))", "def duplicate_elements(m, n):\n    return True if [x for x in m if x in n] else False", "def duplicate_elements(m, n):\n    return any(map(set(n).__contains__, m))", "def duplicate_elements(m, n):\n    return any(i in m for i in n)", "def duplicate_elements(m, n):\n    return len(m + n) != len(set(m + n))", "duplicate_elements=lambda a,b:bool(set(a)&set(b))", "def duplicate_elements(m, n):\n    for element in m:\n        try:\n            n.index(element)\n            return True\n        except:\n            continue\n    return False"]