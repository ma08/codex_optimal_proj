["from collections import Counter\n\ndef validate_word(word):\n    return len(set(Counter(word.lower()).values())) == 1", "from collections import Counter\n\n\ndef validate_word(word):\n    return 1 == len(set(Counter(word.upper()).values()))\n", "def validate_word(word):\n    word = word.lower()\n    return len(set(word.count(c) for c in word)) == 1", "from collections import Counter\nvalidate_word=lambda word: len(set(Counter(word.lower()).values())) == 1", "from collections import Counter\n\ndef validate_word(word):\n    count = Counter(word.lower())\n    \n    return len(set(count.values())) == 1", "validate_word = lambda w: len(set(w.lower().count(e) for e in set(w.lower())))==1", "def validate_word(word):\n    #your code here\n    word = word.lower()\n    c_count = word.count(word[0])\n    for c in word:\n        if word.count(c) != c_count:\n            return False\n    return True", "def validate_word(word):\n    word = word.lower()\n    return all(word.count(i) == word.count(word[0]) for i in word)\n", "def validate_word(word):\n    word = word.lower()\n    arr = list(set(word))\n    for i in range(1,len(arr)):\n        if word.count(arr[i]) != word.count(arr[i-1]):\n              return False\n    return True"]