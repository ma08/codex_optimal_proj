["def pyramid(n):\n    return '\\n'.join(\"/{}\\\\\".format(\" _\"[r==n-1] * r*2).center(2*n).rstrip() for r in range(n)) + '\\n'", "def pyramid(n):\n    return '\\n'.join(('/%s\\\\' % (' _'[i == n-1] * i*2)).rjust(n+i+1) for i in range(n)) + '\\n'", "def pyramid(n):\n    return \"\".join(\n        f\"{' ' * (n - i - 1)}/{(' ' if i < (n - 1) else '_') * i * 2}\\\\\\n\" for i in range(n)\n    )\n", "def pyramid(n):\n    \n    result = ''\n    for i in range(n-1):\n        result += ' '*(n-i-1) + '/' + ' '*i*2 + '\\\\\\n'\n    result += '/' + '_'*2*(n-1) + '\\\\\\n'\n    print(result)\n    return result", "def pyramid(n):\n    s =\"\"\n    for i in range(n-1):\n        s+= (\" \"*((n-i-1)) + \"/\" + \" \"*(i*2) +\"\\\\\\n\")\n    s+= (\"/\" + \"_\"*((n*2)-2) + \"\\\\\\n\")\n    return s", "def pyramid(n):\n    result = '';\n    for x in range(n,0,-1):\n        result += '{}/{}\\\\\\n'.format(' ' * (x-1), ('_' if x == 1 else ' ') * ((n-x) * 2))\n    return result", "pyramid=lambda n:''.join('{}/{}\\\\\\n'.format(' '*(n-i-1),'_ '[i<n-1]*i*2)for i in range(n))", "def pyramid(n):\n output=[\" \"*(n-i-1)+\"/\"+\" \"*(i*2)+\"\\\\\\n\" for i in range(n)]\n output[-1]=output[-1].replace(\" \",\"_\")\n return \"\".join(output)", "def pyramid(n):\n    if n==0: return '\\n'\n    s=''\n    t=0\n    while n>1:\n        s += ' '*(n-1) + '/' + ' '*(t) + '\\\\\\n'\n        n -= 1\n        t += 2\n    s += '/'+'_'*t+'\\\\\\n'\n    return s", "def pyramid(n):\n    return '\\n'.join([' '*(n-i-1)+'/'+' '*(2*i)+'\\\\' for i in range(n-1)]+['/'+'_'*(2*n-2)+'\\\\'])+'\\n'"]