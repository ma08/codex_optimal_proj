["from math import ceil\n\ndef growing_plant(up, down, h):\n    return max(ceil((h - down) / (up - down)), 1)", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    days = 1\n    height = upSpeed\n    while (height < desiredHeight):\n        height += upSpeed - downSpeed\n        days += 1\n    return days;\n", "from math import ceil; growing_plant=lambda u,d,h: max([ceil((h-u)/(u-d)),0])+1", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    current = 0\n    counter = 1\n    while current < desiredHeight: \n        current = current + upSpeed\n        if current >= desiredHeight: return counter\n        current = current - downSpeed \n        counter = counter + 1\n    return counter", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    try:\n        assert 5 <= upSpeed <= 100\n        assert 2 <= downSpeed < upSpeed\n        assert 4 <= desiredHeight <= 1000\n    except:\n        return 1\n        \n    day = 0\n    plantHeight = 0\n    while plantHeight < desiredHeight:\n        day += 1\n        plantHeight += upSpeed\n        if plantHeight >= desiredHeight:\n            break\n        else:\n            plantHeight -= downSpeed\n        \n    return day\n", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    return max((desiredHeight - upSpeed - 1) // (upSpeed - downSpeed) + 1, 0) + 1", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    i=1\n    height=0\n    while(True):\n        height=height+upSpeed\n        if height>=desiredHeight:\n            break\n        else:\n            height=height-downSpeed\n        i=i+1\n    return i", "from math import ceil\n\ndef growing_plant(up_speed, down_speed, desired_height):\n    return max(0, ceil((desired_height - up_speed) / (up_speed - down_speed))) + 1", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    desiredHeight -= upSpeed\n    return max(1, -(-desiredHeight // (upSpeed - downSpeed)) + 1)", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    if (desiredHeight <= upSpeed): return 1\n    days = int(desiredHeight/upSpeed)\n    desiredHeight -= days*(upSpeed-downSpeed)\n    return days+growing_plant(upSpeed, downSpeed, desiredHeight)", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    height = 0\n    day = 1\n    num_days = 0\n    while height < desiredHeight:\n      if day == True: \n        height += upSpeed\n        day = 0\n        num_days += 1\n      else:\n        height -= downSpeed\n        day = 1\n    return num_days", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    day = 1\n    height = 0\n    while True:\n        height += upSpeed\n        if height >= desiredHeight:\n            return day\n        height -= downSpeed\n        day += 1      ", "growing_plant=lambda u,d,h:max(1,int((h-u)/(u-d)+1.99))", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    #your code here\n    day = 1\n    plant_height = 0\n    while True:\n        plant_height += upSpeed\n        if plant_height >= desiredHeight:\n            return day\n        plant_height -= downSpeed\n        day += 1", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n  h=0\n  n=1\n  h=n*upSpeed - (n-1)*downSpeed\n  while h<desiredHeight:\n    n+=1\n    h=n*upSpeed - (n-1)*downSpeed\n  return n\n    \n", "growing_plant=lambda u,d,h:0-max(h-d,1)//(d-u)", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    desiredHeight -= upSpeed\n    if desiredHeight<0: desiredHeight = 0\n    return -(-desiredHeight//(upSpeed-downSpeed)) + 1", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    progress = upSpeed - downSpeed\n    total = 1\n    while upSpeed < desiredHeight:\n        upSpeed += progress\n        total += 1\n    return total", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    i = upSpeed\n    j = 1\n    while i < desiredHeight:\n        i += (upSpeed - downSpeed)\n        j = j+1\n    return j", "import math\n\ndef growing_plant(upSpeed, downSpeed, desiredHeight):\n    oneDay = upSpeed - downSpeed\n    \n    if desiredHeight - oneDay <= 0 or desiredHeight <= upSpeed:\n        return 1\n    \n    sum = 0\n    count = 0\n    \n    while desiredHeight - downSpeed > sum:\n        sum += oneDay\n        count += 1\n        \n    return count\n", "from math import ceil\n\ndef growing_plant(u, d, h):\n    return max(1, min(ceil(h/(u-d)), ceil((h-d)/(u-d))))", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    plantHeight = 0\n    day = 0\n    night = 0\n    \n    while plantHeight != desiredHeight:\n        day += 1\n        plantHeight += upSpeed\n        if plantHeight >= desiredHeight:\n            return day\n        \n        night += 1\n        plantHeight -= downSpeed\n        if plantHeight >= desiredHeight:\n            return night", "import unittest\n\n\ndef growing_plant(up_speed, down_speed, desired_height):\n\n    result = 0\n    day = 0\n\n    while True:\n        day += 1\n        result += up_speed\n        if result >= desired_height:\n            break\n        result -= down_speed\n        if result >= desired_height:\n            break\n\n    return day\n\n    \nclass TestGrowingPlant(unittest.TestCase):\n    def test_should_return_1_when_desiredheight_is_equal_less_than_upspeed(self):\n        self.assertEqual(growing_plant(up_speed=10, down_speed=9, desired_height=4), 1)\n\n    def test_growing_plant_common_case(self):\n        self.assertEqual(growing_plant(up_speed=100, down_speed=10, desired_height=910), 10)\n\n", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    h,c=upSpeed,0\n    while h<desiredHeight:\n        h=h-downSpeed+upSpeed\n        c=c+1\n    return c+1\n", "def growing_plant(u,d,h):\n    for i in range(1000):\n        if h-u <= 0: return i+1\n        h += d-u", "def growing_plant(up_speed, down_speed, desired_height):\n    count = 1\n    height = up_speed\n    while height < desired_height:\n        height -= down_speed\n        height += up_speed\n        count += 1\n\n    return count", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    height = upSpeed\n    counter = 1\n    if height >= desiredHeight:\n        return counter\n    else:\n        while height < desiredHeight:\n            height += upSpeed - downSpeed\n            counter += 1\n        return counter", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    if upSpeed >= desiredHeight:\n        return 1\n    return int(1 + (desiredHeight - upSpeed) / (upSpeed - downSpeed) + bool((desiredHeight - upSpeed) % (upSpeed - downSpeed)))", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    count = 0\n    while desiredHeight >= 0:\n        count += 1\n        desiredHeight -= upSpeed\n        if desiredHeight <= 0:\n            break\n        desiredHeight += downSpeed\n    return count", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    return max(1,int(0.99+ (desiredHeight-downSpeed)/(upSpeed-downSpeed)))", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    t = 0\n    h = 0\n    while True:\n        t+=1\n        h += upSpeed\n        if h >= desiredHeight : return t\n        h -= downSpeed\n", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    if upSpeed>=desiredHeight:\n        return 1\n    days=0\n    plant=0\n    while desiredHeight > plant:\n        if (plant + upSpeed) >= desiredHeight:\n            days+=1\n            break\n        else:\n            plant+=(upSpeed - downSpeed)\n            days+=1\n    return days", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    if upSpeed>=desiredHeight:\n        return 1\n    else:\n        desiredHeight_after_first_day=desiredHeight-upSpeed\n        increment_each_day=upSpeed-downSpeed\n        if desiredHeight_after_first_day%(increment_each_day)==0:\n            return desiredHeight_after_first_day//(increment_each_day)+1\n        else:\n            return desiredHeight_after_first_day//(increment_each_day)+2\n    #your code here\n", "from math import ceil\n\ndef growing_plant(u, d, h):\n    return max(1, ceil((h - d) / (u - d)))", "def growing_plant(u, d, h):\n    days = growth = 0\n    \n    while True:\n        # day\n        days += 1\n        growth += u\n\n        if growth >= h:\n            return days\n        \n        # night\n        growth -= d", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    cnt = 1\n    for i in range(upSpeed, desiredHeight, upSpeed-downSpeed):\n        cnt += 1\n    return cnt\n", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    i = 0\n    total = 0\n    up = 0\n    if desiredHeight == 0:\n        return 1\n    while total < desiredHeight and up < desiredHeight:\n        i += 1\n        up = total + upSpeed\n        total = total + upSpeed - downSpeed\n    return i", "def growing_plant(up, down, desired):\n    res, day = 0, 0\n    while True:\n        res += up\n        day += 1\n        if res >= desired:\n            return day\n        res -= down", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    height = days = 0\n    while height <= desiredHeight:\n        days += 1\n        height += upSpeed\n        if height >= desiredHeight: break\n        height -= downSpeed\n    return days", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    day = 0\n    height = 0\n    while desiredHeight > height:\n        day += 1\n        height += upSpeed\n        if height >= desiredHeight:\n            return day\n        height -= downSpeed\n    return day if day > 0 else 1   ", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    i, height = 0, 0\n    while True:\n        height += upSpeed\n        i += 1\n        if height >= desiredHeight:\n            break\n        height -= downSpeed\n    return i", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    #your code here\n    num_days = 1\n    height = 0\n    while height < desiredHeight:\n        height += upSpeed\n        if height >= desiredHeight:\n            break\n        height -= downSpeed\n        num_days += 1\n    return num_days", "import math \ndef growing_plant(upSpeed, downSpeed, desiredHeight):\n    if upSpeed>=desiredHeight:\n        return 1\n    else:\n        return math.ceil((desiredHeight-downSpeed)/(upSpeed-downSpeed))", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    result = 0\n    height = 0\n    while(True):\n        result += 1\n        height += upSpeed\n        if height >= desiredHeight:\n            break;\n        height -= downSpeed\n    return result", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    height = 0\n    days = 1\n    while height < desiredHeight:\n        height += upSpeed\n        if height < desiredHeight:\n            height -= downSpeed\n            days += 1\n        else:\n            return days", "import math\n\ndef growing_plant(upSpeed, downSpeed, desiredHeight):\n    days, height = 0, 0\n    while True:\n        days += 1\n        height += upSpeed\n        if height >= desiredHeight:\n            return days\n        height -= downSpeed", "def growing_plant(up_speed, down_speed, desired_height):\n    current_height = 0\n    days_gone = 0\n    if up_speed >= 5 and up_speed <= 100 and down_speed >= 2 and down_speed < up_speed and desired_height >= 4 and desired_height <= 1000:\n        while True:\n            days_gone += 1\n            current_height += up_speed\n            if current_height < desired_height:\n                current_height -= down_speed\n            else:\n                return days_gone\n                break\n    else:\n        return 1", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    height = 0\n    n = 0\n    while height < desiredHeight:\n        height += upSpeed\n        n += 1\n        if height < desiredHeight:\n            height -= downSpeed\n        else:\n            break\n    return n if upSpeed < desiredHeight else 1", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    for i in range(1,1000):\n        if i*(upSpeed-downSpeed)>=desiredHeight or (i-1)*(upSpeed-downSpeed)+upSpeed>=desiredHeight:\n            return i", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    d, h = 0, 0\n    while True:\n        d += 1\n        h += upSpeed\n        if h >= desiredHeight:\n            return d\n        else:\n            h -= downSpeed", "def growing_plant(u,d,de):\n    n=0\n    m=0\n    while de>=n:\n        m+=1\n        n+=u\n        if n>=de:\n            break\n        n-=d\n    return m", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    if (upSpeed >= desiredHeight) or (desiredHeight == 0):\n        return 1\n    res = int((desiredHeight - upSpeed) / (upSpeed - downSpeed))\n    if (desiredHeight - upSpeed) % (upSpeed - downSpeed) > 0:\n        res += 1\n    return res + 1\n", "from math import ceil\n\ndef growing_plant(upSpeed, downSpeed, desiredHeight):\n    if desiredHeight < upSpeed:\n        return 1\n    return ceil((desiredHeight - downSpeed) / (upSpeed - downSpeed))", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    days = 0\n    h = 0\n    while True:\n        days = days + 1\n        h = h + upSpeed\n        if h >= desiredHeight:\n            return days\n        else:\n            h = h - downSpeed", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    height = upSpeed\n    day = 1\n    \n    while(height < desiredHeight):\n        height -= downSpeed\n        height += upSpeed\n        day += 1\n        \n    return day", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    if desiredHeight-upSpeed <=0:\n        return 1\n    return 1+ growing_plant(upSpeed, downSpeed, desiredHeight-upSpeed+downSpeed)", "import math\ndef growing_plant(upSpeed, downSpeed, desiredHeight):\n    if (desiredHeight - upSpeed) > 0:\n        return(1+math.ceil((desiredHeight - upSpeed) / (upSpeed - downSpeed)))\n    return(1)", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    if desiredHeight == 0:\n        return 1\n    height = 0\n    days = 0\n    while height < desiredHeight:\n        height += upSpeed\n        if height < desiredHeight:\n            height -= downSpeed\n        days += 1\n    return days", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    if desiredHeight <= downSpeed:\n        return 1\n    \n    currentHeight = 0\n    \n    i = 1\n    while i < 100000:\n        \n        currentHeight+=upSpeed;\n        if currentHeight >= desiredHeight:\n            break\n        \n        currentHeight-=downSpeed\n        i += 1\n      \n    return i", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    height = 0\n    days = 0\n    \n    for i in range(1, 10000):\n        days += 1\n        height += upSpeed\n        print(f'After day {i}: {height}')\n        \n        if height >= desiredHeight: break \n        \n        height -= downSpeed\n        print(f'After night {i}: {height}')\n\n        if height >= desiredHeight: break\n            \n    return days", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    count = 0\n    \n    sum = 0\n    \n    while sum < desiredHeight:\n        sum += upSpeed\n        if sum >= desiredHeight:\n            return count +1 \n        sum -= downSpeed\n        count += 1\n        print(sum)\n    \n    return 1", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    d=0\n    e=0\n    if desiredHeight<upSpeed:\n        return 1\n    else:\n        while d<desiredHeight:\n            d+=upSpeed\n            e+=1\n            if d>=desiredHeight:\n                return e\n            else:\n                d-=downSpeed\n        return e", "from math import ceil\ndef growing_plant(u, d, H):\n    return ceil(max((H-u)/(u-d), 0))+1", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    height = 0\n    day = 0\n    if desiredHeight == 0:\n        day += 1\n        return day\n    while height != desiredHeight:\n        day += 1\n        height += upSpeed\n        if height >= desiredHeight:\n            return day\n        else:\n            height -= downSpeed", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    height, day = upSpeed, 1\n    while height < desiredHeight:\n        print((\"After day \"+str(day)+\" --> \"+str(height)))\n        print((\"After night \"+str(day)+\" --> \"+str(height-downSpeed)))\n        height = height - downSpeed + upSpeed\n        day += 1\n    print((\"After day \"+str(day)+\" --> \"+str(height)))\n    return day\n", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    actualGrowth_afterDay = upSpeed\n    number_of_days = 1\n    dailyGrowth = upSpeed - downSpeed\n    while actualGrowth_afterDay < desiredHeight:\n        number_of_days += 1\n        actualGrowth_afterDay += dailyGrowth \n    return number_of_days", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    day = 1\n    currentHeight = 0\n    growing = True\n    while growing:\n        currentHeight += upSpeed\n        print(\"After Day\", day, \"Height:\", currentHeight)\n        if currentHeight >= desiredHeight:\n            growing = False\n        else:\n            currentHeight -= downSpeed\n            print(\"After Night\", day, \"Height:\", currentHeight)\n            day += 1           \n    return day", "def growing_plant(u, d, h):\n    r,c = u,1\n    while r<h:\n        r+= u-d\n        c += 1\n    return c", "def growing_plant(u, d, h):\n    p = 0\n    count = 1\n    while h > p:\n        p += u\n        if h <= p:\n            break\n        p -= d\n        count += 1\n    return count", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    height = 0\n    noite = 0\n    dias = 0\n    while desiredHeight > height and desiredHeight > noite:\n        height += upSpeed\n        noite = height\n        height -= downSpeed\n        dias += 1\n    return dias", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    height = 0\n    day = 1\n    while height < desiredHeight:\n        if (height + upSpeed) >= desiredHeight:\n            return day\n        else:\n            height += (upSpeed-downSpeed)\n            day +=1\n    return day\n        \n", "import math\ndef growing_plant(upSpeed, downSpeed, desiredHeight):\n    height = 0\n    days = 0\n    while True:\n        height += upSpeed\n        days += 0.5\n        if height >= desiredHeight:\n            break\n        height -= downSpeed\n        days += 0.5\n    return math.ceil(days)", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    day = 0\n    night = 0\n    height = 0\n    while height != desiredHeight:\n        height = height + upSpeed\n        day = day + 1\n        if height >= desiredHeight:\n            return day\n        else:\n            height = height - downSpeed\n            night = night + 1\n            if height == desiredHeight:\n                return night\n    return 1", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    return 1+sum(upSpeed*d-downSpeed*(d-1) < desiredHeight for d in range(1,699))", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    height = 0\n    days = 0\n    heights = []\n    if desiredHeight == 0:\n        return 1\n    while height < desiredHeight:\n        height += upSpeed\n        days += 1\n        if height >= desiredHeight:\n            break\n        height -= downSpeed\n        \n    return days", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n\n    growth = upSpeed\n    counter = 1\n\n    while growth < desiredHeight:\n        growth += upSpeed - downSpeed\n        counter += 1\n    \n    return counter", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    count=1\n    height=0\n    while height<desiredHeight:\n        height=height+upSpeed\n        if height>=desiredHeight:\n            break\n        height=height-downSpeed\n        if height>=desiredHeight:\n            break\n        count=count+1\n    return count", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    daily_growth = upSpeed - downSpeed\n    if desiredHeight <= upSpeed:\n        return 1\n    elif (desiredHeight - upSpeed) % daily_growth == 0:\n        return (desiredHeight - upSpeed) // daily_growth + 1\n    else:\n        return (desiredHeight - upSpeed) // daily_growth + 2\n", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    day = 0\n    height = 0\n    \n    while height < desiredHeight:\n        day += 1\n        height += upSpeed\n        if height >= desiredHeight: return day\n        else:\n            height -= downSpeed\n    return 1", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    t = 0\n    day = 0\n    while t < desiredHeight:\n        day += 1\n        t += upSpeed\n        if t >= desiredHeight:\n            return day\n        t -= downSpeed\n    return max(day, 1)", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    \"\"\"growing plant\"\"\"\n    actual_height = 0\n    counter = 0\n    while actual_height <= desiredHeight:\n        counter += 1\n        actual_height += upSpeed\n        if actual_height >= desiredHeight:\n            return counter\n        actual_height -= downSpeed\n", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    count=0\n    height=0\n    while height<desiredHeight:\n        height+=upSpeed\n        count+=1\n        if height>=desiredHeight: return count\n        height-=downSpeed\n    return 1\n", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    initial = upSpeed\n    count = 1\n    while initial < desiredHeight:\n        initial += upSpeed\n        initial -= downSpeed\n        count += 1\n    return count\n    #your code here\n", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    current_height = 0\n    counter = 0\n    if desiredHeight == 0:\n        counter = 1\n        return counter \n    else:\n        while current_height < desiredHeight:\n            current_height += upSpeed\n            counter += 1\n            if current_height >= desiredHeight:\n                return counter\n            else:\n                current_height -= downSpeed\n", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    days, nights, height = 0, 0, 0\n    \n    if upSpeed >= desiredHeight:\n        return 1\n    else:\n        while height <= desiredHeight:\n            height += upSpeed\n            days += 1\n            \n            if height >= desiredHeight:\n                break\n            \n            height -= downSpeed\n            nights += 1\n        \n        if nights > days:\n            return nights\n        else:\n            return days", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    days = 0\n    height = 0\n    while True:\n        days += 1\n        height += upSpeed\n        if height >= desiredHeight:\n            break\n        height -= downSpeed\n    return days", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    growth = upSpeed\n    count = 1\n    while growth < desiredHeight:\n        growth -= downSpeed\n        count += 1\n        growth += upSpeed\n    return count", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    count=0\n    a=0\n    if desiredHeight==0:\n        return 1\n    while not a>=desiredHeight:\n        a+=upSpeed\n        if a<desiredHeight:\n            a-=downSpeed\n        count+=1\n    return count", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    return max(0, (desiredHeight - downSpeed - 1) // (upSpeed - downSpeed)) + 1\n", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    dia = 0\n    height = 0\n    while True:\n        height = height + upSpeed\n        dia+=1\n        if height >= desiredHeight:\n            return dia\n        height = height - downSpeed", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    h = 0; counter = 1\n    while (h + upSpeed) < desiredHeight:\n        h += upSpeed - downSpeed\n        counter += 1\n    return counter", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    day = 0\n    height = 0\n    while height < desiredHeight:\n        day += 1\n        if day != 1:\n            height -= downSpeed\n        height += upSpeed\n    return 1 if desiredHeight == 0 else day", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    x = upSpeed\n    output = 1\n    while x < desiredHeight:\n        x += upSpeed\n        x -= downSpeed\n        output += 1\n    return output", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    init_height = 0\n    day_count = 0\n    if init_height == desiredHeight:\n        return 1\n    else:\n        while init_height<desiredHeight:\n            init_height += upSpeed\n            day_count += 1\n            if init_height >= desiredHeight:\n                print(init_height,day_count)\n                return day_count\n                break\n            else:\n                init_height -= downSpeed\n                if init_height >= desiredHeight:\n                    print(init_height,day_count)\n                    return day_count\n                    break", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    #your code here\n    up = upSpeed\n    i = 1\n    while up < desiredHeight :\n        up += upSpeed\n        up -= downSpeed\n        i += 1\n    return i", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    growth = 0\n    count = 1\n    while growth < desiredHeight:\n        growth += upSpeed\n        if growth >= desiredHeight:\n            return count\n        count += 1\n        growth -= downSpeed\n    return count", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    height = 0\n    height2 = 0\n    days = 0\n    \n    if (desiredHeight == 0):\n        return 1\n    \n    \n    while height < desiredHeight:\n        days += 1\n        height = height2\n        height += upSpeed\n        height2 = height - downSpeed\n        \n      \n    return days", "def growing_plant(upSpeed, downSpeed, desiredHeight):\n    h, day = 0, 1\n    while h != desiredHeight:\n        h += upSpeed\n        if h >= desiredHeight: break\n        h -= downSpeed\n        day += 1\n        \n    return day", "def growing_plant(u, d, h):\n    v = 0\n    for i in range(1,int(1E3)):   \n        v += u \n        if v >= h:\n            return i \n        else:\n            v -= d ", "def growing_plant(up, down, desired):\n    height=up\n    count=1\n    while height<desired:\n        height=height+up-down\n        count+=1\n    return count"]