["def get_size(w, h, d):\n    area = 2*(w*h + h*d + w*d)\n    volume = w*h*d\n    return [area, volume]", "def get_size(w,h,l):\n    return [2*(w*l+h*l+h*w), w*h*l]", "def get_size(w,h,d):\n    return [2 * (w * d + h * d + h * w), w * h * d]", "def get_size(w, h, d):\n    return [2 * (w*h + w*d + h*d), w * h * d]", "get_size = lambda w,h,d: [w*h*2+w*d*2+h*d*2, w*h*d]", "def get_size(w,h,d):\n    ans = []\n    surface = 2 * ((w * h) + (d * h) + (w * d))\n    volume = w * h * d\n    ans.append(surface)\n    ans.append(volume)\n    return ans", "def get_size(w,h,d):\n    #your code here\n    return [(w*h+w*d+h*d)*2, w*h*d]", "def get_size(w,h,d):\n    sa = 2*(w*d + h*d + w*h)\n    vol = w*h*d\n    return [sa,vol]", "def get_size(w,h,d):\n    return [w*h*2 + h*d*2 + w*d*2, w*h*d]", "get_size = lambda w,h,d: [(w * h + w * d + h * d) * 2, w * h * d]", "def get_size(w,h,d):\n    area = (w*d+w*d) + (d*h+d*h) + (w*h+w*h) \n    volume = (w*h*d)\n    return [area, volume] \n", "def get_size(w,h,d):\n    L=[]\n    if w==h==d:\n        SA=6*(w**2)\n        V=w**3\n        L.append(SA)\n        L.append(V)\n    else:\n        SA=2*(w*h+w*d+h*d)\n        V=w*h*d\n        L.append(SA)\n        L.append(V)\n    return L", "def get_size(w,h,d):\n    area = 2*(w*h + h*d + d*w)\n    volume = w*h*d\n    return [area, volume]", "def get_size(l,w,h):\n    return [2*(l*w+w*h+h*l),l*w*h]", "def get_size(w,h,d):\n    area = (2 *(w*h)) + (2 *(w*d)) + (2 *(d*h))\n    volume = w * h * d\n    return [area, volume]", "def get_size(w,h,d):\n    volume=w*h*d\n    total_surface_area= 2*(w*h+h*d+w*d)\n    return [total_surface_area,volume]", "def get_size(w,h,d):\n    return [((2 * w * h) + (2 * h * d) + (2 * w * d)), (w * h * d)]", "def get_size(w,h,d):\n    return [2*((w*h)+(h*d)+(w*d)),w*h*d]", "def get_size(w,h,d):\n    return [2*d*w + 2*h*w + 2*d*h, w*h*d]", "def get_size(w,h,d):\n    return[2*(w*h+d*h+d*w), w*h*d];", "from typing import List\n\ndef get_size(w: int, h: int, d: int) -> List[int]:\n    \"\"\" Get the total surface area and volume of a box as an array: `[area, volume]`. \"\"\"\n    return [(2 * w * h) + (2 * w * d) + (2 * d * h), w * h * d]", "def get_size(w,h,d):\n    return [sum(2*([w*h, w*d, h*d])), w*h*d]", "def get_size(w,h,d):\n    area = w * h * d\n    surface_area = 2 * w * h + 2 * h * d + 2 * w * d\n    return [surface_area, area]", "def get_size(w,h,d):\n    #your code here surface=2(h \u00d7 W) + 2(h \u00d7 L) + 2(W \u00d7 L)  h \u00d7 W \u00d7 L\n    A,S=0,0\n    A=(2*(h*w)+2*(h*d)+2*(w*d))\n    S=(w*h*d)\n    return list([A,S])", "def get_size(w,h,d):\n    surface = 2*((w*h)+(h*d)+(d*w))\n    area = (w*h*d)\n    \n    return [surface,area]", "def get_size(w,h,d):\n    #your code here\n    s = []\n    area = 2 * ((w * h) + (h * d) + (w * d))\n    sa = w * d * h\n    s.append(area)\n    s.append(sa)\n    return (s)", "def get_size(w,h,d):\n    volumn = w * h * d\n    area = 2 * (w * h + h * d + d * w)\n    return [area, volumn]", "def get_size(w,h,d):\n    x = w * h * d\n    y = 2* ((w * h)+(w * d) + (h * d))\n    return [y,x]\n    #your code here\n", "def get_size(width, length, height ):\n    surface_area = (2 * (width*height + width*length + height*length))\n    volume = length*width*height\n    answer = []\n    answer.append(surface_area)\n    answer.append(volume)\n    return answer \n", "def get_size(w, h, d):\n    listed = []\n    area = 2 * (w * h) + 2 * (h * d) + 2 * (w * d)\n    volume = w * h * d\n    listed.append(area)\n    listed.append(volume)\n    return listed", "def get_size(w,h,d):\n    #your code here\n    return [2*h*(w+d)+2*w*d,w*d*h]", "def get_size(w,h,d):\n    #your code here\n    area=2*h*(w+d)+2*w*d\n    volume=w*d*h\n    return [area,volume]", "def get_size(w,h,d):\n    area = (2*(h*w)+2*(d*h)+2*(d*w))\n    volume = w*h*d\n    L = [area, volume]\n    return L", "def get_size(w,h,d):\n    #your code here\n    l=[]\n    a=2*(w*h)+2*(h*d)+2*(w*d)\n    v=w*h*d\n    l.append(a)\n    l.append(v)\n    return l", "def get_size(w,h,d):\n    area_vol = []\n    area_vol.append(2*(w*h+h*d+w*d))\n    area_vol.append(w * h * d)\n    return area_vol", "def get_size(w,h,d):\n    return [w*2*h + h*2*d + d*2*w, w*h*d]", "def get_size(w,h,d):\n    result = [0]*2\n    result[0] = ((w * h)*2) + ((w*d)*2) + ((d*h)*2)\n    result[1] = w*h*d \n    return result\n", "def get_size(w,h,d):    \n    volume = w * h * d\n    area = (w * h + h * d + w * d) * 2\n    return [area, volume]\n    \n", "get_size = lambda w,h,d:[2 * (w*h + h*d + d*w), h*d*w]\n", "def get_size(w,h,d):\n    total_area =  2*(h*d)+2*(w*h)+2*(d*w)\n    volume = w*d*h\n    x = [total_area,volume]\n    \n    return x", "def get_size(w,h,d):\n    volume = w * h * d\n    area = 2 * (h * w) + 2 * (h * d) + 2 * (w * d)\n    \n    box = []\n    \n    box.append(area)\n    box.append(volume)\n    \n    return box", "def get_size(w,h,d):\n    a = ( 2 * d * w) + ( 2 * d * h) + ( 2 * h * w)\n    v = w * h * d\n    return[a, v]", "def get_size(w,h,d):\n    a = (2 * h * w) + (2 * h * d) + (2 * w * d)\n    v = w * h * d\n    x = []\n    return [a, v]", "def get_size(w,h,d):\n    area = (d*w+d*h+w*h)*2\n    value = w*h*d\n    arr = [area, value]\n    return arr\n", "def get_size(w: int, h: int, d: int) -> list:\n    return [2 * d * w + 2 * h * d + 2 * w * h] + [w * h * d]", "get_size = lambda w,h,d: [(w*d+w*h+h*d) * 2, w*d*h]", "def get_size(w,h,d):\n    #your code here\n    area = ((2 * w * h) + (2 * w * d) + (2 * h * d))\n    volume = w * h * d\n    v = list((area,volume))\n    return v", "def get_size(w,h,d):\n     return [2*(h * w) + 2*(h * d) + 2*(w * d), d*w*h]", "def get_size(w,h,d):\n    v = w * h * d\n    a = 2*(w*h+w*d+h*d)\n    x = [a, v]\n    return x", "def get_size(w,h,d):\n    area = ((w*d)*2) + (d*h)*2 + (w*h)*2\n    volume = int(w)*int(d)*int(h)\n    return [area,volume]", "def get_size(w,h,d):\n    area = 2*(w*h)+2*(h*d)+2*(d*w)\n    volume = w*h*d\n    arr = [area,volume]\n    return arr", "def get_size(w,h,d):\n    return [(w*h*2 + 2*w*d + 2*h*d),w*h*d]", "def get_size(w,h,d):\n    r=[]\n    a=2*w*h+2*h*d+2*w*d\n    r.append(a)\n    v=w*h*d\n    r.append(v)\n    return r", "def get_size(w,h,d):\n    x = []\n    x.append(2*w*h + 2*w*d + 2*d*h)\n    x.append(w*h*d)\n    return x", "def get_size(w,h,d):\n    x=w*h*d\n    y=(w*h + h*d + d*w)*2\n    return [y,x]\n", "def get_size(w,h,d):\n    return [(d*w*2)+(w*h*2)+(2*d*h), w*h*d]", "def get_size(w,h,d):\n    w = int(w)\n    h = int(h)\n    d = int(d)\n    surface_area = 2*w*h + 2*h*d + 2*d*w\n    volume = (w*h*d)\n    return [surface_area, volume]", "def get_size(w,h,d):\n    S = (2 * w * d) + (2 * w * h) + (2 * d * h)\n    V = w * h * d\n    return [S, V]", "def get_size(w,h,d):\n    #your code here\n    area = 0\n    volume = 0\n    \n    area = 2*w*h + 2*h*d + 2*w*d\n    volume = w*h*d\n    \n    return [area, volume]", "def get_size(w,h,l):\n    #your code here\n    a = (2*l*w)+(2*l*h)+(2*w*h)\n    v = w*h*l\n    return [a,v]", "def get_size(w,h,d):\n    area= 2*(w*h)+2*(w*d)+2*(h*d)\n    volume=w*h*d\n    empty=[]\n    empty.append(area)\n    empty.append(volume)\n    return empty", "def get_size(w,h,d):\n    surface_area = []\n    surface_area.append(2 * ((d * w) + (d * h) + (w * h)))\n    surface_area.append((h * d) * w)\n    return surface_area", "def get_size(w,h,d):\n    area = 2 * (w * h + w * d + h * d)\n    volumen = w * h * d\n    result = [area, volumen]\n    return result", "def get_size(w,h,d):\n    return [sum([w*h,h*d,d*w])*2,w*h*d]", "def get_size(w,h,d):\n    return [2*(w*(h+d))+2*(d*h), w*h*d]", "def get_size(w,h,d):       \n        s=2*(w*h+w*d+h*d)\n        r=w*h*d\n        return [s,r]", "def get_size(w,h,d):\n    return [h*w*2+w*d*2+d*h*2,w*h*d]#your code here", "def get_size(w,h,d):\n    return [d*h*2+w*h*2+w*d*2, w*h*d]", "def get_size(w,h,d):\n    #your code here\n    area = ((d * h) * 2 ) + ((w * d) * 2) + ((w * h)* 2)\n    volume = w * h * d\n    return [area,volume]", "def get_size(w,h,d):\n    return [w*d*2 + 2*(w+d)*h, w*h*d]", "def get_size(l, b, h):\n    return [2 * (l*b + b*h + l*h) , l * b * h]", "def get_size(w,h,d):\n    size = [2*w*h+2*w*d+2*h*d, w*h*d]\n    return size", "def get_size(w,h,d):\n    return [2*d*h+2*w*h+2*d*w,w*h*d]\n\n", "def get_size(w,h,d):\n    l\u00f6sung = [2*w*h + 2*w*d + 2*h*d, w * h * d]\n    return  l\u00f6sung", "get_size = lambda w,h,d: [w*h*2 + w*d*2 + d*h*2, w*d*h]", "def get_size(w,h,d):\n    volume = (h*w*d)\n    area=2*(w*h)+2*(w*d)+2*(h*d)\n    res=[]\n    res.append(area)\n    res.append(volume)\n\n    return res\nprint((get_size(10,10,10)))\n", "def get_size(w,h,d):\n    \"\u0418\u0437\u043c\u0435\u0440\u044f\u0435\u043c \u043e\u0431\u044a\u0435\u043c \u0438 \u043f\u043b\u043e\u0449\u0430\u0434\u044c \u043a\u043e\u0440\u043e\u0431\u043a\u0438\"\n    s_o = []\n    s = (w * h * 2) + (h * d * 2) + (d * w * 2)\n    o = w * h * d\n    s_o.append(s)\n    s_o.append(o)\n    return s_o", "def get_size(w,h,d):\n    volume = w*h*d\n    area=(w*2+h*2)*d+w*h*2\n    array=[area, volume]\n    return array", "def get_size(w,h,d):\n    array = []\n    area = (w * h) * 2 + (w * d) * 2 + (h * d) * 2\n    array.append(area)\n    volume = w * h * d\n    array.append(volume)\n    return array\n    #your code here\n", "def get_size(w,h,d):\n    area=2*(h*w) + 2*(h*d) + 2*(w*d)\n    return [area,w*d*h]", "def get_size(w,h,d):\n    return [w*2*h+h*2*d+d*2*w, w*d*h]", "def get_size(w,h,d):\n    #your code here\n    result=[]\n    vol=w*h*d\n    area=(w*d+h*d+h*w)*2\n    result.append(area)\n    result.append(vol)\n    return result\n", "\ndef get_size(w,h,l):\n    surface_area=2*(h*w)+2*(h*l)+2*(w*l)\n    volume=h*w*l\n    return [surface_area,volume]", "def get_size(w,h,l):\n    return [2*(h * l) + 2 * (h * w) + 2 * (w * l), (l*w*h)]", "def get_size(w, h, d):\n    return [2 * (d * (w + h) + w * h), w * h * d]", "def get_size(w,h,d):\n    total_area = 2 * (w*h + h*d + w*d)\n    volume = w * h * d\n    return [total_area, volume]", "def get_size(w,h,d):\n    area = int(2*(h * w) + 2*(h * d) + 2*(d * w))\n    volume = int(w) * int(h) * int(d)\n    return [area, volume]", "def get_size(w,h,d):\n    vol = w * h * d\n    sur = 2*(w*h + w*d + h*d)\n    return [sur, vol]", "def get_size(w,h,d):\n    vol = w * h * d\n    surface = (2 * w * h) + (2 * w * d) + (2 * h * d)\n    return [surface, vol]", "def get_surface_area(width, height, depth):\n    return (\n        (2 * depth * width) +\n        (2 * depth * height) +\n        (2 * height * width)\n    )\n\ndef get_volume(width, height, depth):\n    return width * height * depth\n\ndef get_size(width, height, depth):\n    return [\n        get_surface_area(width, height, depth),\n        get_volume(width, height, depth)\n    ]", "def get_size(w,h,d):\n    my_list = []\n    area = (w*h*2) + (h*d*2) + (w*d*2)\n    volume = w * h * d\n    my_list.append(area)\n    my_list.append(volume)\n    return my_list", "def get_size (w,h,d):\n    surface = 2*(w*h + w*d + d*h)\n    volume = w*h*d\n    return ([surface, volume])\n", "def get_size(w,h,d):\n    SA = 2*w*h + 2*w*d + 2*h*d\n    V = h*w*d\n    return [SA, V]\n", "def get_size(w,h,d):\n    #your code here\n    area=2*(w*h+h*d+w*d)\n    vol=w*h*d\n    a=[area,vol]\n    return a", "def get_size(w,h,d):\n    area = (w * h * 2) + (h * d * 2) + (w * d * 2)\n    volume = w * h * d\n    total = [area, volume]\n    return total\n\n    #your code here\n", "def get_size(w,h,d):\n    #your code here\n    return [2*w*h+2*w*d+2*h*d, d*w*h]", "def get_size(w,h,d):\n    total_area = 2 *(h*w) + 2 *(h*d) + 2 *(w*d)\n    volume = w * h * d\n    return [total_area, volume]", "def get_size(w,h,d):\n    l=[]\n    l.append(2*(w*h+h*d+d*w))\n    l.append(w*h*d)\n    return l\n"]