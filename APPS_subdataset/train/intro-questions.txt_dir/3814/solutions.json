["def get_military_time(time):\n    if time[-2:] == 'AM':\n        hour = '00' if time[0:2] == '12' else time[0:2]\n    else:\n        hour = '12' if time[0:2] == '12' else str(int(time[0:2])+12)\n    return hour + time[2:-2]", "def get_military_time(time_str):\n    hour = int(time_str[:2])\n    pm = time_str[-2] == \"P\"\n    return f\"{(hour % 12 + 12*pm):02}{time_str[2:-2]}\"", "from datetime import datetime\n\ndef get_military_time(time):\n    return datetime.strptime(time, '%I:%M:%S%p').strftime('%H:%M:%S')", "def get_military_time(time):\n    h = int(time[:2])\n    if time.endswith(\"AM\"):\n        h = h % 12\n    elif h < 12:\n        h += 12\n    return f\"{h:02d}{time[2:8]}\"", "def get_military_time(s):\n    return \"%02d:%02d:%02d\" % (int(s[:2]) % 12 + 12 * (s[-2] != 'A'), int(s[3:5]), int(s[6:8]))", "def get_military_time(stg):\n    h, ms, ap = int(stg[:2]) % 12, stg[2:8], stg[8:]\n    return f\"{h + (12 if ap == 'PM' else 0):02d}{ms}\"", "get_military_time=lambda t:'%02d%s'%(int(t[:2])%12+12*(t[-2]>'A'),t[2:-2])", "def get_military_time(s):\n    delta = 12 * s.endswith('PM')\n    h, m, s = s[:-2].split(':')\n    hour = int(h) + delta\n    return '{:02}:{}:{}'.format(12 if hour == 24 else 0 if hour == 12 else hour, m, s)", "def get_military_time(t):\n    modt = t[:-2]\n    if ('12' == t[:2]):\n        modt = '00' + modt[2:]\n    if ('PM' == t[-2:]):\n        modt = str(12 + int(modt[:2])) + modt[2:]\n    return modt", "def get_military_time(_s):\n    if 'A' in _s and _s.startswith('12'):\n        return '00' + _s[2:-2]\n    if 'P' in _s and not _s.startswith('12'):\n        return str(int(_s[:2])+12) + _s[2:-2]\n    return _s[:-2]"]