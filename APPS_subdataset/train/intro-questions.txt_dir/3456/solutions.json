["def repeater(string, n):\n    return '\"{}\" repeated {} times is: \"{}\"'.format(string, n, string * n)\n", "def repeater(string, n):\n    return '\"{0}\" repeated {1} times is: \"{2}\"'.format(string, n, string * n)\n", "def repeater(s, n):\n  return '\"{}\" repeated {} times is: \"{}\"'.format(s, n, s * n)", "def repeater(stg, n):\n    return f'\"{stg}\" repeated {n} times is: \"{stg * n}\"'\n", "repeater = lambda s, n: '\"%s\" repeated %d times is: \"%s\"' % (s, n, s * n)", "repeater = lambda s, n: f'\"{s}\" repeated {n} times is: \"{\"\".join(s*n)}\"'    ", "def repeater(message, multiple):\n    return f'\"{message}\" repeated {multiple} times is: \"{message*multiple}\"'\n", "def repeater(string, n):\n    # Habit of escaping double quotes regardless of context\n    return '\"{}\" repeated {} times is: \"{}\"'.format(string, n, string * n)\n", "def repeater(string, n):\n    longString=\"\"\n    for i in range(n):\n        longString+=string\n    return \"\\\"\" + string + \"\\\" repeated \" + str(n) + \" times is: \\\"\" +longString + \"\\\"\" \n", "def repeater(string, n):\n    repeated_str = string * n \n    return '\"{0}\" repeated {1} times is: \"{2}\"'.format(string, n, repeated_str)"]