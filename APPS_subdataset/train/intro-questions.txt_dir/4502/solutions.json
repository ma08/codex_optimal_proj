["def tribonacci(signature, n):\n  res = signature[:n]\n  for i in range(n - 3): res.append(sum(res[-3:]))\n  return res", "def tribonacci(signature,n):\n    while len(signature) < n:\n        signature.append(sum(signature[-3:]))\n    \n    return signature[:n]", "def tribonacci(signature, n):\n    s = signature.copy()\n    while len(s) < n:\n        s.append(sum(s[-3:]))\n    return s[:n]\n", "def tribonacci(s, n):\n    for i in range(3, n): s.append(s[i-1] + s[i-2] + s[i-3])\n    return s[:n]", "def tribonacci(signature, n):\n    output = signature[:n]\n    while len(output) < n:\n        output.append(sum(output[-3:]))\n    return output", "def tribonacci(signature,n):\n    return signature[:n] if n<=len(signature) else tribonacci(signature + [sum(signature[-3:])],n)", "def tribonacci(signature,n):\n    result = []\n    if n > 3:\n        result = signature\n        for i in range(0,n-3):\n            nextTrib = result[0+i] + result[1+i] + result[2+i]\n            print(nextTrib)\n            result.append(nextTrib)\n    elif n == 3:\n        result = signature\n    elif n == 2:\n        result = [signature[0],signature[1]]\n    elif n == 1:\n        result = [signature[0]]\n    return result", "def tribonacci(signature,n):\n    [signature.append(sum(signature[i-3:i])) for i in range(3,n)]\n    return signature[0:n]", "def tribonacci(signature,n):\n    for _ in range(3,n):\n        signature += [sum(signature[-3:])]\n    return signature[0:n]", "def tribonacci(s, n):\n    if(n>3):\n        for i in range(n - 3):\n            s.append(s[i] + s[i + 1] + s[i + 2])\n        return s\n    else:\n        return s[:n]\n    #your code here\n"]