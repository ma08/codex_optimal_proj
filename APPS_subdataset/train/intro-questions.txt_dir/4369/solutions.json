["def is_negative_zero(n):\n    return str(n) == '-0.0'", "import math\ndef is_negative_zero(n):\n    return n == 0 and math.copysign(1, n) == -1", "import math\n\ndef is_negative_zero(n):\n    return math.atan2(-0.0, -0.0) == math.atan2(n, n)\n", "def is_negative_zero(n):\n    return str(n) == str(-0.0)", "def is_negative_zero(n):\n    return True if n == 0 and str(n).startswith('-') else False", "is_negative_zero=lambda n: n == 0 and str(n).startswith('-')", "def is_negative_zero(n):\n    return str(n).startswith(\"-\") and n == 0", "def is_negative_zero(n):\n    if str(n) == '-0.0':\n        return 1\n    else:\n        return 0", "import struct\n\ndef is_negative_zero(n):\n    return struct.pack('>d', n) == b'\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "is_negative_zero=lambda n:(str(n)[0]=='-')and not n"]