["def boolean_to_string(b):\n    return str(b)", "def boolean_to_string(b):\n    return 'True' if b else 'False'", "boolean_to_string = str    ", "def boolean_to_string(b):\n    if b:\n        return \"True\"\n    return \"False\"", "def boolean_to_string(b):\n    return ('False', 'True')[b]\n", "boolean_to_string = lambda x: \"True\" if x else \"False\"", "# this code return the string version of the boolean input\ndef boolean_to_string(b):\n    return str(b)", "def boolean_to_string(b):\n    if b == True or b == False:\n        return str(b)", "def boolean_to_string(b):\n    if b == True:\n        return \"True\"\n    else:\n        return \"False\"", "boolean_to_string = lambda b : [\"False\", \"True\"][b];", "def boolean_to_string(b):\n    d = {True : \"True\", False : \"False\"}\n    return d[b]", "def boolean_to_string(b: bool) -> str:\n    return str(b)", "def boolean_to_string(b):\n    if(((((((((False==0.0)==1)==True)==1.0)!=False)!=0)==int(True))!=int(False))!=0) == b:\n        return 'True'\n    return 'False'", "def boolean_to_string(b):\n    return b*\"True\" or \"False\"", "def boolean_to_string(b):\n    return \"FalseTrue\"[5*b:5+4*b]", "def boolean_to_string(b):\n    if b: return \"True\"\n    if not b: return \"False\"", "boolean_to_string=lambda b: \"True\" if b else \"False\"\n", "def boolean_to_string(b):\n    return ['False', 'True'][b]", "def boolean_to_string(b):\n    return format(b)", "def boolean_to_string(b):\n    if isinstance(b, bool):\n        return \"True\" if b else \"False\"\n    return \"Wrong type\"\n", "def boolean_to_string(b):\n    return f\"{b}\"", "def boolean_to_string(b):\n    return repr(b)", "def boolean_to_string(b):\n    return b.__str__()", "def boolean_to_string(b):\n    #your code here\n    if b:\n       print('When we pass in true, we want the string \"true\" as output')\n       return 'True'\n    else:\n        print('When we pass in false, we want the string \"false\" as output')\n        return 'False'", "boolean_to_string = repr", "def boolean_to_string(b):\n    return (b and \"True\") or \"False\"", "boolean_to_string=lambda b: str(b)", "def boolean_to_string(b):\n    for i in str(b):\n        if b == True:\n            return 'True'\n        else:\n            return 'False'\n", "boolean_to_string = lambda val: str(val)", "def boolean_to_string(b):\n    a = lambda x: \"True\" if x else \"False\"\n    return a(b)", "def boolean_to_string(b):\n    if (b == True) :\n        return \"True\"\n    elif (b == False) :\n        return \"False\"\n    else :\n        return \"invalid\"", "boolean_to_string = lambda boolean: str(boolean)\n    \n    \n# Implement a function which convert \n# the given boolean value into its string representation.\n", "def boolean_to_string(b):\n    return \"True\" * (b == True) + \"False\" * (b == False)", "def boolean_to_string(b):\n    str1 = str(b)\n    if str1 == 'True':\n        return 'True'\n    return 'False'", "def boolean_to_string(b):\n    if b:\n        return 'True'\n    if b == 0:\n        return 'False'", "def boolean_to_string(b):\n    dic=  {True:\"True\",False:\"False\"}\n    return dic[b]", "def boolean_to_string(b):\n    if int(b) is 1:\n        return \"True\"\n    elif int(b) is 0:\n        return \"False\"\n", "def boolean_to_string(b):\n    bool = {True:'True',False:'False'}\n    return bool[b]", "boolean_to_string=lambda b:f'{b}'", "def boolean_to_string(b):\n    b=str(b)\n    if b==\"True\":\n        return \"True\"\n    else:\n        return \"False\"", "def boolean_to_string(b):\n    if b == True:\n        b = \"True\"\n        return b\n    elif b == False or 0:\n        b = \"False\"\n        return b\n", "def boolean_to_string(b):\n    boolean = str(b)\n    return boolean", "def boolean_to_string(b):\n    _stringstring = str(b)\n    return _stringstring", "def boolean_to_string(b):\n  return repr(b)\n  return str(b) \n  return \"True\" if b else \"False\"", "def boolean_to_string(b):\n    return str(b) if True else str(b)", "def boolean_to_string(b):\n    return \"\".join([i for i in str(b)]) \n", "def boolean_to_string(b):\n    string1 = str(b)\n    return string1\n", "def boolean_to_string(b):\n    if b == True:\n      return str(\"True\")\n    return str(\"False\")  ", "def boolean_to_string(b):\n    print(b)\n    return 'True' if b  else 'False'\n", "def boolean_to_string(b):\n    return \"True\" if str(b) == \"True\" else 'False'", "def boolean_to_string(b):\n    result=False\n    if b==True:\n        result=True\n    else:\n        result=False\n        \n    return str(result)    ", "def boolean_to_string(b):\n    if b == True:\n       return \"True\"\n       pass\n    return \"False\"\n    #your code here\n", "def boolean_to_string(b):\n    if b:\n        return \"True\"\n    elif b != True:\n        return \"False\"", "def boolean_to_string(b):\n    if b == True: return \"True\"\n    if b != True: return \"False\"", "def boolean_to_string(b):\n    #your code \n    return str(b)", "def boolean_to_string(b):\n    F = 'False'\n    T = 'True'\n    if b == True:\n        return T\n    if b == False:\n        return F", "def boolean_to_string(n):\n    return str(n)", "def boolean_to_string(b):\n    return str(b) if str(b).lower()=='true' else str(b)", "def boolean_to_string(b):\n    if b == True: return \"True\"\n    else: return \"False\"\n    \nprint(boolean_to_string(True))", "def boolean_to_string(boolean):\n    if boolean:\n        return 'True'\n    else:\n        return 'False'", "def boolean_to_string(b):\n    \n    if b:\n        return \"true\".capitalize()\n    else:\n        return \"false\".capitalize()", "def boolean_to_string(b):\n    ret = 'False'\n    if (b):\n        ret = 'True'\n    return ret", "def boolean_to_string(b):\n    if b==True:\n       return str(True)\n    else:\n        b==False\n        return str(False)\n    return b \n", "def boolean_to_string(b):\n    if b == True:\n        a = str(b)\n        print(a, ' When we pass in true, we want the string \"true\" as output')\n    else:\n        a = str(b)\n        print(a)\n    \n    return a", "def boolean_to_string(b):\n    if type(b) == type(True) and b == True:\n        return (\"True\")\n    else:\n        return (\"False\")\n\nprint((boolean_to_string(False)))\n", "def boolean_to_string(b):\n    boo = bool(b)\n    if boo == True:\n        return \"True\"\n    else:\n        return \"False\"", "def boolean_to_string(b):\n    b = str(b)\n    if b == \"True\":\n        \n        return(b)\n    if b == \"False\":\n        return(b)\n    #your code here\n", "boolean_to_string=lambda a:str(a)", "def boolean_to_string(b):\n    if b is True:\n        return(str(b))\n    else:\n        return(\"False\")", "def boolean_to_string(b):\n    return (lambda x: \"True\" if x else \"False\")(b)", "def boolean_to_string(b):\n    if b == True:\n        return(\"True\")\n    else:\n        return(\"False\")\n\nbool = True\nboolean_to_string(bool)\nbool = False\nboolean_to_string(bool)\n", "def boolean_to_string(b):\n    #your code here\n    res = ''\n    if b:\n        res = \"True\"\n    else:\n        res = \"False\"\n    return res", "def boolean_to_string(b):\n    out = 'False'\n    if b:\n        out = \"True\"\n    return out\n", "def boolean_to_string(b):\n    #your code here\n    return str(b)\n    \nprint(boolean_to_string(True))", "def boolean_to_string(b):\n    if b == 1:\n        return \"True\"\n    elif b == 0:\n        return \"False\"", "def boolean_to_string(b):\n    b=str(b)\n    thing=0\n    if b==\"True\":\n        thing=\"When we pass in true, we want the string 'true' as output\"\n    else:\n        thing=\"When we pass in false, we want the string 'false' as output\"\n    return b\n    return thing", "def boolean_to_string(b):\n    if b == True:\n        string = 'True'\n    elif b == False:\n        string = 'False'\n    return string\n    \n    #your code here\n", "def boolean_to_string(b):\n    if b:\n        return \"True\"\n    elif b is False:\n        return \"False\"\n", "def boolean_to_string(b):\n    return str(b)\n    # return 'True' if b else 'False'\n", "def boolean_to_string(b):\n    return \"True\" if b else \"False\"\n#Completed by Ammar on 10/8/2019 at 01:18PM.\n", "def boolean_to_string(b):\n    return \"True\" if True==b else \"False\"", "def boolean_to_string(b):\n    boo = ''\n    if b:\n        boo = 'True'\n    else:\n        boo = 'False'\n    return boo", "def boolean_to_string(b):\n    return 'True' if b>0 else 'False'", "def boolean_to_string(b):\n    if b == 0:\n        return 'False'\n    if b == 1:\n        return 'True'", "def boolean_to_string(b):\n    if b:\n        b=\"True\"\n    else:\n        b=\"False\"\n    return b", "def boolean_to_string(b):\n    if b:\n        return 'True'\n    else:\n        return 'False'\n        \n        #fifnish!!!\n", "def boolean_to_string(b):\n    if b == b:\n        return str(b)", "def boolean_to_string(b):\n    if b == False:\n        return \"False\"\n    return \"True\"", "def boolean_to_string(b):\n    a = ''\n    if b == True:\n        a = 'True'\n    else:\n        a = 'False'\n        \n    return a", "def boolean_to_string(bol):\n    return str(bol)", "#prints output 'true' for input 'true/'false' for input 'false'\ndef boolean_to_string(b): \n   return str(b)", "def boolean_to_string(b):\n    if b:\n        return \"True\"\n    else:\n         return \"False\"#I solved this Kata on 6/27/2019 02:53 AM #hussamSindhuCodingDiary", "def boolean_to_string(b):\n    if b == 1:\n        statement = 'True'\n    else:\n        statement = 'False'\n    \n    return statement", "def boolean_to_string(b):\n    return [\"True\" if b else \"False\"][0] # Easy 8 kyu", "def boolean_to_string(b):\n    if b == 0:\n        return \"False\"\n    else:\n        return \"True\"\n", "def boolean_to_string(b):\n    #your code he\n    p = str(b);\n    print (type(p))\n    print (p)\n    return p", "def boolean_to_string(boolean):\n  return \"True\" if boolean == True else \"False\"", "def boolean_to_string(b):\n    #your code here\n    ans = \"True\" if b == True else \"False\"\n    return ans", "def boolean_to_string(b):\n    print((str(b)))\n    return str(b)\n    \n", "def boolean_to_string(b):\n    bul = str(b)\n    return bul"]