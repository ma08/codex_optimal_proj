["from math import factorial\nfrom string import digits, ascii_uppercase\n\nDIGITS = digits + ascii_uppercase\nFACTORIALS = [1, 1]\n\nf = 1\nfor i in range(2, 36):\n    f *= i\n    FACTORIALS.append(f)\n\ndef dec2FactString(nb):\n    ret = []\n    for f in reversed(FACTORIALS):\n        (d, nb) = divmod(nb, f)\n        if d or ret:\n            ret.append(DIGITS[d])\n    return ''.join(ret)\n\ndef factString2Dec(string):\n    return sum(DIGITS.index(d) * f for (d, f) in zip(reversed(string), FACTORIALS))\n", "from math import factorial\nfrom itertools import dropwhile\n\nDIGITS = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\nBASIS = [factorial(n) for n in range(len(DIGITS))]\n\ndef dec2FactString(nb):\n    representation = []\n    for b in reversed(BASIS):\n        representation.append(DIGITS[nb // b])\n        nb %= b\n    return \"\".join(dropwhile(lambda x: x == \"0\", representation))\n\ndef factString2Dec(string):\n    return sum(BASIS[i]*DIGITS.index(d) for i, d in enumerate(reversed(string)))", "base='0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nfact = lambda n: fact(n-1)*n if n else 1\n\ndef dec2FactString(nb, i=1):\n    return dec2FactString(nb//i,i+1) + base[nb%i] if nb else ''\n\ndef factString2Dec(string):\n    return fact(len(string)-1)*base.index(string[0]) + factString2Dec(string[1:]) if len(string) else 0\n", "from string import ascii_uppercase as u\nfrom math import factorial as f\nd = list('0123456789') + list(u)\nd_ = dict(map(lambda x:x[::-1],enumerate(d)))\ndef dec2FactString(n):\n    reminders, i = '', 1\n    while n:\n        n, b = divmod(n, i)\n        reminders += d[b] ; i += 1\n    return reminders[::-1]\nfactString2Dec=lambda n:sum([d_[n[-(i+1)]]*f(i) for i in range(len(n)-1,-1,-1)])", "from string import digits, ascii_uppercase\nfrom math import factorial\n\nBASE = digits + ascii_uppercase\nFACT = [factorial(a) for a in range(36,-1,-1)]\n\ndef dec2FactString(nb):\n    res = []\n    for fact in FACT:\n        d, nb = divmod(nb, fact)\n        res.append(BASE[d])\n    return ''.join(res).lstrip('0')\n\ndef factString2Dec(string):\n    return sum(BASE.index(a) * FACT[c]  for c, a in enumerate(string, -len(string)))", "import itertools\nimport math\n\ndigits = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\ndef dec2FactString(nb):\n    result = []\n    i = itertools.count(1)\n    while nb:\n        nb, rem = divmod(nb, next(i))\n        result.append(digits[rem])\n    return \"\".join(i for i in result[::-1])\n\ndef factString2Dec(string):\n    return sum(\n        digits.index(d) * math.factorial(i)\n        for d, i in zip(\n            string[::-1],\n            itertools.count()))", "import math\n\nDIGITS = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\ndef get_digit(digit):\n    return DIGITS[digit]\n\ndef dec2FactString(nb, f=0):\n    if f == 0:\n        return dec2FactString(nb, 1) + \"0\"\n    elif nb == 0:\n        return \"\"\n    else:\n        fact = math.factorial(f)\n        digit = (nb//fact) % (f + 1)\n        return dec2FactString(nb - digit*fact, f+1) + get_digit(digit)\n\ndef factString2Dec(string):\n    return sum(\n            DIGITS.index(string[-(k+1)])*math.factorial(k) \n            for k in range(0, len(string))\n           )\n\n"]