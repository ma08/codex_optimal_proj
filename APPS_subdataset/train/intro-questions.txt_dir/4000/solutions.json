["import math\n\ndef strong_num(number):\n    return \"STRONG!!!!\" if sum(math.factorial(int(i)) for i in str(number)) == number else \"Not Strong !!\"", "STRONGS = {1, 2, 145, 40585}\n\ndef strong_num(number):\n    return \"STRONG!!!!\" if number in STRONGS else \"Not Strong !!\"", "from math import factorial\ndef strong_num(number):\n  return (\"Not Strong !!\", \"STRONG!!!!\")[sum(factorial(int(i)) for i in str(number)) == number]", "from math import factorial\n\ndef strong_num(n):\n    return [\"Not Strong !!\", \"STRONG!!!!\"][ n == sum(factorial(int(d)) for d in str(n)) ]", "factorial = lambda n: 1 if n == 0 else n * factorial(n-1)\n\ndef strong_num(n):\n    if sum(factorial(int(n)) for n in str(n)) == n:\n       return \"STRONG!!!!\"    \n    return \"Not Strong !!\"", "def strong_num(number):   # performance version\n    fac = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880]   # factorial from 0-9\n    digits = sorted([int(i) for i in str(number)])\n    digits.reverse()\n    \n    s = 0\n    for i in digits:\n        s +=fac[i]\n        if s > number: return \"Not Strong !!\"\n        \n    return \"STRONG!!!!\" if number == s else \"Not Strong !!\"", "def strong_num(n):\n    import math\n    s=str(n)\n    l=map(int, s[::])\n    return 'STRONG!!!!' if sum(map(math.factorial, l))==n else 'Not Strong !!'", "import math\n\ndef strong_num(number):\n    return ('Not Strong !!', 'STRONG!!!!')[sum(math.factorial(int(n)) for n in str(number)) == number]    ", "from math import factorial as f\ndef strong_num(n):\n    c = sum(map(lambda _: f(_),(int(i) for i in str(n))))==n\n    return 'STRONG!!!!' if c else 'Not Strong !!'", "def strong_num(number):\n    result = []\n    for i in str(number):\n        fact = 1\n        for j in range(1, int(i) + 1):\n            fact = fact * j\n        result.append(fact)\n    return \"STRONG!!!!\" if sum(result) == number else \"Not Strong !!\"", "from math import factorial\ndef strong_num(number):\n    return \"STRONG!!!!\" if sum(factorial(int(v))for v in str(number))==number else \"Not Strong !!\"", "import math \ndef strong_num(number):\n    d = [int(d) for d in str(number)]\n    b = sum([math.factorial(x) for x in d])\n    if b == number:\n        return \"STRONG!!!!\"\n    else:\n        return \"Not Strong !!\" ", "import math\n    \ndef strong_num(number):\n    n = str(number)\n    return 'STRONG!!!!' if sum(math.factorial(int(a)) for a in n) == number else 'Not Strong !!'", "def strong_num(n):\n    if n == 40585: return 'STRONG!!!!'\n    def get_f(n):\n        out = {0: 0, 1: 1}\n        if n < 2: return out\n        for i in range(2, max([int(x) for x in str(n)])+1):\n            out[i] = out[i-1] * i\n        return out\n    d = get_f(n)\n    return \"STRONG!!!!\" if n == sum([d[int(x)] for x in str(n)]) else \"Not Strong !!\"\n", "from math import factorial\n\n\ndef strong_num(number):\n    strong = number == sum(factorial(int(digit)) for digit in str(number))\n    return \"STRONG!!!!\" if strong else \"Not Strong !!\"", "import math\ndef strong_num(number):\n    return \"STRONG!!!!\" if number == sum([math.factorial(int(d)) for d in str(number)]) else \"Not Strong !!\"", "factorial = lambda n: 1 if n == 0 else n * factorial(n-1)\n\ndef strong_num(n):\n    factorial_sum = sum(factorial(int(n)) for n in str(n))\n    return \"STRONG!!!!\" if factorial_sum == n else \"Not Strong !!\"", "def fac(nb):\n    if nb == 0:\n        return 1\n    res = 1\n    for i in range(1, nb + 1):\n        res *= i\n    return res\n\n\ndef strong_num(number):\n    nb = [int(x) for x in str(number)]\n    r = 0\n    for i in nb:\n        r += fac(i)\n    if number == r:\n        return \"STRONG!!!!\"\n    return \"Not Strong !!\"", "def strong_num(number):\n    return ('Not Strong !!', 'STRONG!!!!')\\\n    [number == sum([[1,1,2,6,24,120,720,5040,40320,362880][int(x)]\\\n    for x in str(number)])]", "def strong_num(n):\n    return 'STRONG!!!!' if sum(__import__('math').factorial(int(i)) for i in str(n)) == n else 'Not Strong !!'", "from numpy import prod\ndef strong_num(n):\n    return [\"Not Strong !!\", \"STRONG!!!!\"][ sum(prod(range(1,i+1)) for i in map(int, str(n)))==n]", "import math\ndef strong_num(number):\n    result = 0\n    number1 = number\n    number2 = []\n    while number1 > 0.99:\n        number2.append(number1 % 10)\n        number1 = int(number1 / 10)\n    for i in number2:\n        if i == 0:\n            result += 1\n        else:\n            result += (math.factorial(i))\n    if result == number:\n        return \"STRONG!!!!\"\n    else:\n        return \"Not Strong !!\"", "def strong_num(number):\n    \n    sum = 0\n    for i in map(int,str(number)):\n        temp = 1\n        for j in range(i,1,-1):\n            temp *= j\n        sum += temp\n    print(number,sum)\n    if number == sum:\n        return \"STRONG!!!!\"\n    return \"Not Strong !!\"", "import math\ndef strong_num(number):\n    for i in str(number):\n        number -= math.factorial(int(i))\n        \n    return \"STRONG!!!!\" if number == 0 else \"Not Strong !!\"", "import math\ndef strong_num(number):\n    x= [math.factorial(int(x)) for x in str(number) ]\n    if number==sum(x):\n        return 'STRONG!!!!'\n    return 'Not Strong !!'", "def strong_num(number):\n    d=[1,1,2,6,24,120,720,5040,40320,362880]\n    return \"STRONG!!!!\" if number==sum([d[int(x)] for x in str(number)]) else \"Not Strong !!\"", "from math import factorial\n\ndef strong_num(number):\n    arr = [int(i) for i in str(number)]\n    x = 0 \n    for i in arr:\n        x += factorial(i)\n    if x == number:\n        return \"STRONG!!!!\"\n    return \"Not Strong !!\"", "def strong_num(number):\n    o = 0\n    s = 0\n    strong = 'STRONG!!!!'\n    nstrong = 'Not Strong !!'\n    for i in str(number):\n        o = 1\n        while int(i) > 0:\n            o *= int(i)\n            i = int(i) - 1\n        s = s + o\n    if number == s:\n        return strong\n    else:\n        return nstrong", "import math\n\ndef strong_num(number):\n\n    fact = 0\n    for i in str(number):\n        fact += math.factorial(int(i))\n    return 'STRONG!!!!' if number == fact else 'Not Strong !!'", "from math import factorial\ndef strong_num(N):\n    sum = 0\n    P = N\n    for i in range(len(str(N))):\n        sum += factorial(N//10**(len(str(N))-1))\n        N = N % (10**(len(str(N))-1))\n    return \"STRONG!!!!\" if P == sum else \"Not Strong !!\"", "def strong_num(number):\n    total = 0\n    for n in str(number):\n        total += factorial(n)\n    return \"STRONG!!!!\" if total == number else \"Not Strong !!\"\n\n\ndef factorial(number):\n    number = int(number)\n    if number < 2:\n        return 1\n    else:\n        return number * factorial(number - 1)\n", "from math import factorial\n\ndef strong_num(n):\n    return 'STRONG!!!!' if sum(factorial(int(d)) for d in str(n)) == n else 'Not Strong !!'", "from math import factorial\ndef strong_num(number):\n    x=sum(factorial(int(d)) for d in str(number))\n    return 'STRONG!!!!' if x==number else 'Not Strong !!'", "import operator\n\ndef strong_num(number):\n    return \"STRONG!!!!\" if number in [1, 2, 145, 40585] else \"Not Strong !!\"", "def strong_num(number):\n    \n    def factorial(n):\n        if n < 2:\n            return 1\n        else:\n            return n * factorial(n-1)\n    \n    if sum([factorial(int(i)) for i in str(number)]) == number:\n        return 'STRONG!!!!'\n    else:\n        return 'Not Strong !!'", "import math \n\ndef strong_num(number):\n    print ()\n    a=list((str(number)))\n    a=[int(x) for x in a ]\n    \n    print(a)\n    t=0\n    for x in a:\n        print(x)\n        t+=math.factorial(x)\n    b=[str(x) for x in a ]\n    b=''.join((b))\n    if t==int(b):\n        return \"STRONG!!!!\"\n    else:\n         return \"Not Strong !!\"\n", "from math import factorial\ndef strong_num(n):\n    print(n)\n    return [\"Not Strong !!\", \"STRONG!!!!\"][n == sum(map(factorial, [int(x) for x in str(n)]))]", "def strong_num(n):\n    if n in [1,2,145,40585]:\n        return 'STRONG!!!!'\n    return 'Not Strong !!'", "def factorial(n):\n    if n == 0 or n == 1:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\ndef strong_num(number):\n    result=0\n    numLst=[int(x) for x in str(number)]\n    for i in range(len(numLst)):\n        result+=factorial(numLst[i])\n    return \"STRONG!!!!\" if result==number else \"Not Strong !!\"", "def factorial(n):\n    acc = 1\n    for i in range(1, n+1):\n        acc = acc * i\n    return acc\n\ndef strong_num(num):\n    rs = list(map(int, str(num)))\n    r = [factorial(i) for i in rs]\n    return \"STRONG!!!!\" if sum(r) == num else \"Not Strong !!\"\n    \n\n", "def strong_num(number):\n    def fact(n):\n        if n ==0:\n            return 1\n        if n ==1:\n            return 1\n        return n*fact(n-1)\n    if sum(fact(int(i))for i in str(number)) == number:\n        return \"STRONG!!!!\"\n    return \"Not Strong !!\"", "def strong_num(number):\n    sm=0\n    for num in str(number):\n        fact = 1\n        for en in range(1,int(num)+1):\n            fact *=en\n        sm+= fact\n    if sm == number:\n        return 'STRONG!!!!'\n    else:\n        return 'Not Strong !!'", "import math\ndef strong_num(x):\n    return 'STRONG!!!!' if [sum((math.factorial(int(i)))for i in str(x))]==[x] else 'Not Strong !!'", "import math\n\ndef strong_num(number):\n    return \"STRONG!!!!\" if number == sum(math.factorial(int(c)) for c in str(number)) else \"Not Strong !!\"\n", "from math import factorial\n\ndef strong_num(number):\n    sf = sum(factorial(int(c)) for c in str(number))\n    return 'STRONG!!!!' if sf == number else 'Not Strong !!'", "def strong_num(number):\n    Digits = list(map(int,list(str(number))))\n    SumFactorial = 0\n    for i in Digits:\n        Factorial = 1\n        for x in range(1, i+1):\n            Factorial *= x\n        SumFactorial += Factorial\n    if SumFactorial == number:\n        return \"STRONG!!!!\"\n    else:\n        print(number)\n        return \"Not Strong !!\"\n", "from math import factorial\n\ndef strong_num(number):\n    sum = 0\n    for el in str(number):\n        sum+=factorial(int(el))\n    if sum == number:\n        return \"STRONG!!!!\"\n    else:\n        return \"Not Strong !!\"", "import math\ndef strong_num(number):\n    n = list(map(int, str(number)))\n    lst = [math.factorial(i) for i in n]\n    return 'STRONG!!!!' if sum(lst) == number else \"Not Strong !!\"", "def factorial(n):\n    return n * factorial(n-1) if n > 1 else 1\n\ndef strong_num(number):\n    return ['Not Strong !!', 'STRONG!!!!'][sum(factorial(int(s)) for s in str(number)) == number]", "def fac(n):\n    r = 1\n    for x in range(1,n+1):\n        r*=x\n    return r\n        \ndef strong_num(n):\n    return \"STRONG!!!!\" if sum([fac(int(x)) for x in str(n)])==n else \"Not Strong !!\"", "memo = {}\ndef factorial(n):\n    if n in memo.keys():\n        return memo[n]\n    elif n == 0:\n        return 1\n    else:\n        ans = n*factorial(n-1)\n        memo[n] = ans\n    return ans\ndef strong_num(number):\n    play = str(number)\n    add = 0\n    for num in play:\n        add += factorial(int(num))\n    if add == number:\n        return \"STRONG!!!!\"\n    return \"Not Strong !!\"", "import math \ndef strong_num(number):\n    if sum(math.factorial(int(n)) for n in str(number)) == number:\n        return \"STRONG!!!!\"\n    else:\n        return \"Not Strong !!\"\n", "def factorial(n):\n    ret = 1\n    for i in range(1, n + 1):\n        ret *= i\n    return ret\n\ndef strong_num(number):\n    if sum([factorial(int(i)) for i in str(number)]) == number:\n        return 'STRONG!!!!'\n    else:\n        return 'Not Strong !!'", "def strong_num(number):\n    sum=0\n    for i in str(number):\n        a=1\n        j = 1\n        while j < int(i)+1:\n            a*=j\n            j+=1\n        sum+=a\n    if sum==number:\n        return \"STRONG!!!!\" \n    else:\n        return \"Not Strong !!\"", "import math \ndef strong_num(number):\n    sum = 0\n    number = str(number)\n    for i in number:\n        sum += math.factorial(int(i))\n    if sum == int(number):\n        return \"STRONG!!!!\"\n    else:\n        return \"Not Strong !!\"\n", "from functools import lru_cache\ndef strong_num(number):\n    @lru_cache()\n    def factorial(n):\n        if n <= 1:\n            return 1\n    \n        else:\n            print(n)\n            return factorial(n - 1) * n\n    return \"STRONG!!!!\" if sum(factorial(int(x)) for x in str(number)) == number else \"Not Strong !!\"\n", "def factorial(n):\n    val = 1\n\n    for i in range(n, 1, -1):\n        val *= i\n\n    return val        \n\ndef strong_num(number):\n    return \"STRONG!!!!\" if sum(factorial(int(i)) for i in str(number)) == number else \"Not Strong !!\"", "from math import factorial\ndef strong_num(number):\n    return ['Not Strong !!', 'STRONG!!!!'][number == sum(factorial(int(c)) for c in str(number))]\n", "from math import factorial as fact\n\ndef strong_num(number):\n    return \"STRONG!!!!\" if sum(fact(int(digit)) for digit in str(number)) == number else \"Not Strong !!\"", "import math\ndef strong_num(number):\n    check = 0\n    for i in str(number):\n        check += math.factorial(int(i))\n    return \"STRONG!!!!\" if check == number else \"Not Strong !!\"", "from math import factorial\n\ndef strong_num(number):\n    s = str(number)\n    return \"STRONG!!!!\" if sum(factorial(int(n)) for n in s) == number else \"Not Strong !!\"", "from math import factorial\ndef strong_num(number):\n    a=0\n    for i in str(number):\n       a+=factorial(int(i))\n    if a==number:\n       return 'STRONG!!!!'\n    return 'Not Strong !!'", "from math import factorial as f\n \ndef strong_num(number):\n    factors = [f(int(x)) for x in str(number)]\n    return 'STRONG!!!!' if sum(factors) == number else 'Not Strong !!'", "from math import factorial as f\ndef strong_num(n):\n    return [\"Not Strong !!\",\"STRONG!!!!\"][sum(f(i) for i in map(int, str(n)))==n]", "from math import factorial as f\ndef strong_num(number):\n    return ['Not Strong !!','STRONG!!!!'][number == sum(f(int(d)) for d in str(number))]\n    \n    \n", "def strong_num(number):\n    n= 0\n    for i in str(number):\n        m = 1\n        for x in range(1, int(i)+1):\n            m*=x\n        n+=m\n    if number == n: return 'STRONG!!!!'\n    else : return 'Not Strong !!'", "from math import factorial\ndef strong_num(n):\n    return 'STRONG!!!!' if sum([factorial(int(x)) for x in str(n)])==n else 'Not Strong !!'", "from math import factorial as f\ndef strong_num(number):\n    number = str(number)\n    strong = sum([f(int(x)) for x in number])\n    return \"STRONG!!!!\" if strong == int(number) else \"Not Strong !!\"", "def strong_num(number):\n    c = 0\n    f = 1\n    num = str(number)\n    for i in num:\n        i = int(i)\n        for e in range(1, i+1):\n            f = f * e\n        c = c + f\n        f = 1\n    if c == number:\n        return \"STRONG!!!!\"\n    else:\n        return \"Not Strong !!\"", "from math import factorial\ndef strong_num(number):\n    print(number)\n    a = str(number)\n    count = 0\n    for i in range(len(a)):\n        if i!=len(a):\n            count += factorial(int(a[i]))\n    print(count)\n    return \"STRONG!!!!\" if (count)==number else \"Not Strong !!\"", "def strong_num(number):\n    sum1 = 0\n    for i in str(number):\n        num = 1\n        a = int(i)\n        for i in range(1, a+1):\n            num = num*i\n        sum1 += num\n    if number == sum1:\n        return \"STRONG!!!!\"\n    return \"Not Strong !!\"", "def strong_num(number):\n  w = [int(i) for i in str(number)]\n  res = []\n  for i in w:\n    f = 1\n    for q in range(1,i + 1):\n      f *= q\n    res.append(f)\n  z = sum(res)\n  t = \"\".join(str(z))\n  if str(number) == t:\n    return 'STRONG!!!!'\n  else:\n    return 'Not Strong !!'", "def strong_num(number):\n\n    res = []\n    for x in str(number):\n        num = 1\n        for y in range(1, int(x)+1):\n            num *= y\n        res.append(num)\n\n    return \"STRONG!!!!\" if sum(res) == number else \"Not Strong !!\"", "from math import factorial\n\ndef strong_num(n):\n    return 'STRONG!!!!' if n == sum(factorial(int(c)) for c in str(n)) else 'Not Strong !!'\n", "import math\n\ndef strong_num(number):\n    nums = [int(char) for char in str(number)]\n    strong = 0\n    for i in nums:\n        strong += math.factorial(i)\n    if strong == number:\n        return \"STRONG!!!!\"\n    else:    \n        return \"Not Strong !!\"", "def strong_num(number):\n    ln = [int(x) for x in str(number)]\n    ln = [1 if x == 0 else x for x in ln]\n    f = 1\n    ff = []\n    for d in ln:\n        for x in range(1, d + 1):\n            f *= x\n        ff.append(f)\n        f = 1\n    if number == int(sum(ff)):\n        return 'STRONG!!!!'\n    return 'Not Strong !!'\n    # Flez\n", "def strong_num(number):\n    ln = [int(x) for x in str(number)]\n    ln = [1 if x == 0 else x for x in ln]\n    f = 1\n    ff = []\n    fff = []\n    for d in ln:\n        for x in range(1, d + 1):\n            f *= x\n            ff.append(f)\n        fff.append(ff[-1])\n        f = 1\n    if number == int(sum(fff)):\n        return 'STRONG!!!!'\n    return 'Not Strong !!'\n    # Flez\n", "def strong_num(number):\n    def factorial(n):\n        if n == 0:\n            return 1\n        else:\n            output = 1\n            for i in range(1,n+1):\n                output *= i\n            return output\n    suma = 0\n    for num in str(number):\n        suma += factorial(int(num))\n    if suma == number:\n        return \"STRONG!!!!\"\n    else:\n        return \"Not Strong !!\"", "def strong_num(number):\n    str_num = list(str(number))\n    a = 0\n    for i in str_num:\n        f = 1\n        j = int(i)\n        if j  != 0:\n            for k in range(1, (j + 1)):\n                f *= k\n        a += f\n    if a == number:\n        return \"STRONG!!!!\"\n    return \"Not Strong !!\"", "from math import factorial\n\ndef strong_num(number):\n    fact_digits = sum(factorial(int(i)) for i in str(number))\n    return \"STRONG!!!!\" if fact_digits == number else \"Not Strong !!\"", "import math\ndef strong_num(number):\n    n = 0\n    for i in str(number):\n       n = n+math.factorial(int(i))\n    if n==number:\n       return \"STRONG!!!!\"\n    else:\n       return \"Not Strong !!\"", "from math import factorial as fact\ndef strong_num(n):\n    return 'STRONG!!!!' if sum(fact(int(c)) for c in str(n)) == n else 'Not Strong !!'", "def strong_num(number):\n    import math\n    lst=[]\n    for i in str(number):\n        lst.append(math.factorial(int(i)))\n    return 'STRONG!!!!' if sum(lst)==number else 'Not Strong !!'", "def strong_num(number):\n    number_list = [int(i) for i in str(number)]\n    strong_list = []\n    for i in number_list:\n        res = 1\n        for i in range(1, i+1):\n            res *= i\n        strong_list.append(res)\n    return \"STRONG!!!!\" if sum(strong_list) == number else \"Not Strong !!\"\n    \n", "from math import factorial\n\n\ndef strong_num(number: int) -> str:\n    return \"STRONG!!!!\" if number == sum(map(factorial, list(map(int, str(number))))) else \"Not Strong !!\"\n", "def strong_num(number):\n    import math\n    sum=0\n    for i in str(number):\n        sum=sum+math.factorial(int(i))\n    if sum==int(number):\n        return \"STRONG!!!!\"\n    else:\n        return \"Not Strong !!\"", "def strong_num(number):\n    \n    def factorial(n):\n        factorial = 1\n        for x in range(1,int(n)+1):\n            factorial = factorial*x\n        return factorial\n        \n        \n        \n    s = 0\n    for digit in str(number):\n        s+=factorial(digit)\n    \n    if s==number:\n        return \"STRONG!!!!\"\n    else:\n        return \"Not Strong !!\"", "from math import factorial\n\nfacs = {str(n):factorial(n) for n in range(10)}\n\ndef strong_num(number):\n    return 'STRONG!!!!' if number == sum(facs[d] for d in str(number)) else 'Not Strong !!'", "from math import factorial\n\ndef strong_num(number):\n    return [\"Not Strong !!\", \"STRONG!!!!\"][sum(map(lambda x: factorial(int(x)), str(number))) == number]", "from functools import lru_cache\n\n@lru_cache(maxsize = None)\ndef fac(number):\n    if number in [0, 1]:\n        return 1\n    else:\n        return number * fac(number-1)\n\ndef strong_num(number):\n    numbers = [int(n) for n in str(number)]\n    flag = sum(fac(n) for n in numbers) == number\n    \n    return \"STRONG!!!!\" if flag else \"Not Strong !!\"", "from math import factorial\nstrong_num = lambda n: 'STRONG!!!!' if  n == sum(factorial(int(d)) for d in str(n)) else 'Not Strong !!'", "import math\ndef strong_num(number):\n    if number == sum([math.factorial(int(d)) for d in str(number)]):\n        return \"STRONG!!!!\"\n    else:\n        return \"Not Strong !!\"", "from math import factorial\n\ndef strong_num(number):\n    s = 0\n    for x in str(number):\n        s += (factorial(int(x)))\n        \n    return \"STRONG!!!!\" if s == number else \"Not Strong !!\"", "import math\n\ndef strong_num(number):\n    total = 0;\n    for i in str(number):\n        total += math.factorial(int(i));\n    return \"STRONG!!!!\" if total == number else \"Not Strong !!\"", "from math import factorial as f\ndef strong_num(number):\n    s= sum(f(int(x)) for x in str(number))\n    return \"STRONG!!!!\" if number==s else \"Not Strong !!\"\n", "def strong_num(n):\n    print(n)\n    g=[]\n    z=[int(x) for x in str(n)]\n    print(z)\n    for i in z:\n        if i >= 0:\n            fac=1\n            for y in range(1,i+1):\n                fac=fac*y\n                \n            g.append(fac)\n    print(g)\n    h=sum(g)  \n    if h == n:\n        mystr=\"STRONG!!!!\"\n    if h!=n:\n        mystr=\"Not Strong !!\"\n    \n    return mystr", "fact = [1]\nfor i in range(1, 10):\n    fact.append(i * fact[i-1])\n\ndef strong_num(number):\n    total = 0\n    tmp = number\n    while tmp > 0:\n        total += fact[tmp % 10]\n        tmp = int(tmp / 10)\n    if total == number:\n        return \"STRONG!!!!\"\n    return \"Not Strong !!\"\n", "from math import factorial\n\ndef strong_num(number):\n    return 'STRONG!!!!' if sum(factorial(int(digit)) for digit in f'{number}') == number else 'Not Strong !!'", "def fact(n):\n    p=1\n    while n>0:\n        p=p*n\n        n=n-1\n    return p\ndef strong_num(number):\n    tot=0\n    numberc=number\n    while number>0:\n        digit=number%10\n        tot=tot+fact(digit)\n        number=number//10\n    if tot==numberc:\n        return \"STRONG!!!!\"\n    else:\n        return \"Not Strong !!\""]