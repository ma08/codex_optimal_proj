["def head_smash(arr):\n    try:\n        return [a.replace('O', ' ') for a in arr] or 'Gym is empty'\n    except TypeError:\n        return \"This isn't the gym!!\"\n", "def head_smash(arr):\n    try:\n        return [x.replace('O', ' ') for x in arr] or 'Gym is empty'\n    except:\n        return 'This isn\\'t the gym!!'", "def head_smash(arr):\n    if isinstance(arr, int):\n        return \"This isn't the gym!!\"\n    return [line.replace(\"O\", \" \") for line in arr] if arr else \"Gym is empty\"", "import re\ndef head_smash(arr):\n    try:\n        return [re.sub('O',' ',i) for i in arr] if arr else 'Gym is empty'\n    except:\n        return 'This isn\\'t the gym!!'", "def head_smash(arr):\n    if not arr:\n        return 'Gym is empty'\n    if isinstance(arr, int):\n        return \"This isn't the gym!!\"\n    return [l.replace('O', ' ') for l in arr]", "def head_smash(arr):\n    if isinstance(arr, int) is True:\n        return \"This isn\\'t the gym!!\"\n\n    elif arr == [] or arr == '':\n        return 'Gym is empty'\n    \n    else:\n        d = [x.replace('O', ' ') for x in arr]\n        return d", "def head_smash(arr):\n    if not arr:\n        return 'Gym is empty'\n    if not isinstance(arr, list) \\\n        or not all(isinstance(l, str) for l in arr):\n            return \"This isn't the gym!!\"\n    return [l.replace('O', ' ') for l in arr]", "def head_smash(a):\n    if type(a) == int: return \"This isn't the gym!!\"\n    if not a: return \"Gym is empty\"\n    return [s.replace('O',' ') for s in a]", "def head_smash(arr):\n    if not arr:return \"Gym is empty\"\n    if not isinstance(arr,list):return \"This isn't the gym!!\"\n    return list(map(lambda x:x.replace(\"O\",\" \"),arr))", "def head_smash(arr):\n    if arr == [] or arr==\"\":\n        return \"Gym is empty\"\n    if isinstance(arr, int):\n        return \"This isn't the gym!!\"\n    res = []\n    for i in arr:\n        res.append(i.replace(\"O\", \" \"))\n    return res"]