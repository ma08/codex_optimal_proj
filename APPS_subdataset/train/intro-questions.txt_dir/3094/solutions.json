["def sum_array(arr):\n    if arr == None or len(arr) < 3:\n        return 0\n    return sum(arr) - max(arr) - min(arr)", "def sum_array(arr):\n    return sum(sorted(arr)[1:-1]) if arr and len(arr) > 1 else 0", "def sum_array(arr):\n    return sum(sorted(arr)[1:-1]) if arr else 0\n", "def sum_array(arr):\n    return 0 if arr == None else sum(sorted(arr)[1:-1])", "def sum_array(arr):\n    return sum(arr) - min(arr) - max(arr) if arr and len(arr) > 1 else 0", "def sum_array(arr):\n    return sum(sorted(arr or [])[1:-1])", "def sum_array(arr):\n    return sum(sorted(arr)[1:-1]) if arr else 0", "def sum_array(arr):\n  \n  if arr is None or len(arr) < 2:\n    return 0\n  \n  mi, ma, s = arr[0], arr[0], 0\n  \n  for x in arr:\n    if x > ma:\n      ma = x\n    elif x < mi:\n      mi = x\n    \n    s += x\n  \n  return s - mi - ma", "def sum_array(arr):\n    try: return sum(arr) - max(*arr) - min(*arr)\n    except: return 0", "sum_array=lambda a:a and sum(sorted(a)[1:-1])or 0", "def sum_array(arr):\n    if len(arr or []) <= 2:\n        return 0\n\n    odd = len(arr) % 2\n\n    if odd:\n        total = lowest = highest = arr[0]\n    else:\n        total, lowest, highest = 0, float('inf'), -float('inf')\n\n    for a, b in zip(arr[odd::2], arr[1 + odd::2]):\n        total += a + b\n        if a > b:\n            lowest = min(b, lowest)\n            highest = max(a, highest)\n        else:\n            lowest = min(a, lowest)\n            highest = max(b, highest)\n\n    return total - lowest - highest\n", "def sum_array(arr):\n    return 0 if arr is None else sum(sorted(arr)[1:-1])", "def sum_array(arr):\n    if not arr or len(arr) == 1:\n        return 0\n    else:\n        return sum(arr) - min(arr) - max(arr)", "def sum_array(arr):\n    if arr == [] or arr == None or len(arr) <= 2:\n        return 0\n    else:\n        sum = 0\n        arr.sort(reverse=False)\n        for i in arr:\n            sum += i\n        return sum - int(arr[0]+arr[-1])", "def sum_array(arr):\n    print(arr)\n    return sum(sorted(arr)[1:len(arr)-1])if arr and len(arr)>2 else 0", "from functools import reduce\nmin_max_tot = lambda x,y: (min(x[0], y), max(x[1], y), x[2]+y)\n\n# Who needs more than one iteration after all?\ndef sum_array(arr):\n    if arr is None or len(arr) < 3: return 0\n    mini, maxi, tot = reduce(min_max_tot, arr, (float('inf'), float('-inf'), 0))\n    return tot - mini - maxi", "def sum_array(arr):\n    if arr is None or (len(arr))==1:\n        return 0\n    arr=sorted(arr)\n    return sum(arr[1:-1])\n", "def sum_array(arr):\n    if arr is None or len(arr) < 2:\n        return 0;\n\n    lowest = min(arr)\n    highest = max(arr)\n    sum = 0\n    for x in arr:\n        sum += x\n    \n    return sum - lowest - highest\n", "def sum_array(arr):\n    return 0 if (not arr or len(arr) <= 1) else sum(sorted(arr)[1:-1])", "def sum_array(arr):   \n    return sum(arr) - (min(arr) + max(arr)) if arr and len(arr) > 1 else 0", "def sum_array(arr):\n    return 0 if arr == None or len(arr) < 2 else sum(arr) - min(arr) - max(arr)\n", "def sum_array(arr):\n    return 0 if arr == None or len(arr) < 2 else sum(arr) - max(arr) - min(arr)", "def sum_array(arr):\n    if arr == None:\n        return 0\n    return sum(sorted(arr)[1:-1]) if len(arr) > 2 else 0", "#Function for calculating highest num\ndef max_value(a):\n    high = a[1]\n    for x in range(len(a)):\n        for y in range(x+1, len(a)):\n            if ((a[x] > a[y]) and (a[x] > high) ):\n                high = a[x]\n                continue\n            elif((a[x] < a[y]) and (a[x] > high)):\n                high = a[y]\n            else:\n                continue\n    if(a[len(a)-1] > high):\n        return a[len(a)-1]\n    else:\n        return high\n\n#Function for calculating Lowest num\ndef min_value(a):\n    min = a[1]\n    for x in range(len(a)):\n        for y in range(x+1, len(a)):\n            if ((a[x] < a[y]) and (a[x] < min) ):\n                min = a[x]\n                continue\n            elif((a[x] > a[y]) and (a[x] < min)):\n                min = a[y]\n            else:\n                continue\n    if(a[len(a)-1] < min):\n        return a[len(a)-1]\n    else:\n        return min\n        \n#Function for Addition without highest and smallest number      \ndef sum_array(arr):\n    #your code here\n    total = 0    #Sum\n    max_occ = 0 #Tells if highest num already occured \n    min_occ = 0 #Tells if lowest num already occured\n    if not arr:\n        return 0\n    elif(len(arr) == 1):\n        return 0\n    else:\n        for i in range(len(arr)):\n            if(arr[i] == max_value(arr) and max_occ == 0):\n                max_occ = 1\n                continue\n            if(arr[i] == min_value(arr) and min_occ == 0):\n                min_occ = 1\n                continue\n            \n            \n            total = total + arr[i]\n\n    return total", "def sum_array(arr):\n    return 0 if type(arr) is not list or len(arr) in (0, 1) else (sum(arr) - max(arr) - min(arr))", "sum_array=lambda a: sum(sorted(a)[1:-1]) if a else 0", "def sum_array(arr):\n    if not arr or len(arr) <= 2:\n        return 0\n    else:\n        arr.sort()\n        return sum(arr[1:-1])", "def sum_array(arr): return sum(arr) - min(arr) - max(arr) if arr and len(arr) > 2 else 0", "def sum_array(arr):\n    return sum(sorted(arr)[1:-1]) if arr and len(arr) > 2 else 0", "def sum_array(arr):\n    if arr==None:\n        return 0\n    \n    if len(arr)<=2:\n        return 0\n        \n    else:\n        arr.sort()\n        del arr[0]\n        del arr[-1]\n        \n        return sum(arr)\n", "sum_good = lambda x: sum(x) - min(x) - max(x) * bool(x[1:])\nsum_array = lambda arr: sum_good(arr or [0])\n", "sum_good, sum_array = lambda x: sum(x) - min(x) - max(x) * bool(x[1:]), lambda arr: sum_good(arr or [0])", "sum_array = lambda arr: (lambda x: sum(x) - min(x) - max(x) * bool(x[1:]))(arr or [0])", "def sum_array(arr):\n    def sum_array_(x):\n        return sum(x) - min(x) - max(x) * bool(x[1:])\n    return sum_array_(arr or [0])", "def validation(foo):\n    def wrapper(x):\n        return foo(x or [0])\n    return wrapper\n\n@validation\ndef sum_array(x):\n    return sum(x) - min(x) - max(x) * bool(x[1:])\n        \n", "def sum_array(arr):\n    return 0 if not arr or len(arr) <= 2 else sum(arr) - max(arr) - min(arr)", "def sum_array(arr):\n    if arr==None or len(arr)==0 or len(arr)==1:return 0\n    return (sum(arr)-max(arr)-min(arr))", "def sum_array(arr):\n    if arr is None or len(arr) <= 1:\n        return 0\n    print(sum(arr))\n    return sum(arr) - max(arr) - min(arr)", "def sum_array(arr):\n    return 0 if arr is None or len(arr) in [0, 1] else sum(arr) - min(arr) - max(arr)", "def sum_array(arr):\n    if arr == None or arr == [] or len(arr) == 1:\n        return 0\n    else:\n        return sum(x for x in arr) - min(arr) - max(arr)\n", "def sum_array(arr):\n    if arr == None or len(arr) < 2:\n        return 0\n    arr = sorted(arr)\n    arr.pop(0)\n    arr.pop(-1)\n    return sum(arr)\n", "def sum_array(arr):\n     if arr == None or arr == [] or len(arr) < 2:\n        return 0\n     else:\n        lowest = arr[0]\n        for i in arr:\n            if i < lowest:\n                lowest = i\n        highest = arr[0]\n        for i in arr:\n            if i > highest:\n                highest = i\n        tot = 0\n        for i in arr:\n            tot += i\n        return tot - lowest - highest\n", "def sum_array(arr):\n    if arr and len(arr) == 1:\n        return 0\n    elif arr: \n        return sum(arr) - (max(arr) + min(arr))\n    else:\n        return 0", "def sum_array(arr):\n    if arr == None:\n        return 0\n    else:\n        if arr == []:\n            return 0\n        else:\n            a = max(arr)\n            b = min(arr)\n            print(a)\n            arr.remove(a)\n            if arr == []:\n                return 0\n            else:\n                total = 0\n                arr.remove(b)\n                for i in arr:\n                    total += i\n                return total\n\n\n        \n", "def sum_array(arr):\n    if arr == [] or arr == None:\n        return 0 \n    elif len(arr) < 3:\n        return 0\n    arr = sorted(arr)\n    result = 0\n    arr.pop()\n    arr.pop(0)\n    print(arr)\n    for i in arr:\n        result += i\n    return result\n    #your code here\n", "def sum_array(arr):\n    if not arr:\n        return 0\n\n    if len(arr)<3:\n        return 0\n    return sum(sorted(arr)[1: len(arr)-1])\n", "def sum_array(arr):\n    if arr is None:\n        return 0\n    elif len(arr) <= 1:\n        return 0  \n    a = max(arr)\n    b = min(arr)\n    c = sum(arr)\n    return c - a - b", "def sum_array(arr):\n    if(arr == None or arr == [] or len(arr) < 2):\n        return 0;\n    return sum(arr) - min(arr) - max(arr)", "def sum_array(arr):\n    if arr == None: return 0\n    if len(arr) > 1: return sum(sorted(arr)[1:-1])\n    else: return 0", "def sum_array(arr):\n    if arr  is None:\n        return 0\n    for el in arr:\n        if type(el) == int and type(el) != 'NoneType' and len(arr)>2: \n            arr.remove(max(arr))\n            arr.remove(min(arr))\n            print(arr)\n            return sum(arr)\n        else:\n            return 0\n    return sum(arr) ", "def sum_array(arr={}):\n    if arr == None or arr == []:\n        return 0\n    if len(arr) > 1:\n        res = sum(arr) - min(arr)\n    else:\n        res = sum(arr)\n    return res- max(arr)", "def sum_array(arr = 0):\n    if arr == None:\n        return 0\n    return sum(arr) - min(arr) - max(arr) if len(arr) >= 3 else 0", "def sum_array(arr):\n    if arr == None:\n        return 0\n    elif len(arr) == 0:\n        return 0\n    elif len(arr) == 1:\n        return 0\n    else:\n        arr.remove(max(arr))\n        arr.remove(min(arr))\n        return sum(arr)        ", "def sum_array(arr):\n    if arr == None:\n        return 0\n    elif len(arr) == 1:\n        return 0\n    else:\n        sorted_arr = sorted(arr)\n        return sum(sorted_arr[1:-1])\n", "def sum_array(arr):\n    sum=0\n    if arr=='':\n        return(0)\n    elif arr==None:\n        return(0)\n    elif len(arr)<3:\n        return(0)\n    else:\n        for i in arr:\n            sum+=i\n        return(sum-(min(arr)+max(arr)))", "sum_array=lambda a:0 if a==None or len(a)<2 else sum(a)-max(a)-min(a)", "def sum_array(arr):\n    try:\n        if len(arr) == 1: return 0\n        return sum(arr) - max(arr) - min(arr)\n    except: return 0", "def sum_array(arr):\n    total = 0\n    if not arr:\n        return 0\n    elif len(arr) <= 2:\n        return 0\n    else:\n        for number in range(0, len(arr)):\n            total += arr[number]\n            print(total)\n        return total - min(arr) - max(arr)\n", "def sum_array(arr):\n    if not arr:\n        return 0\n    arr.remove(max(arr))\n    if not arr:\n        return 0\n    arr.remove(min(arr))\n    return sum(arr)", "def sum_array(arr):\n    if not arr:\n        return 0\n    arr2 = []\n    arr.sort()\n    index = -1\n    for i in arr:\n        index +=1\n        if(index > 0 and index < len(arr)-1):\n            arr2.append(i)\n    return sum(arr2)", "def sum_array(arr):\n    if arr==None:\n        return 0\n    \n    elif len(arr)==1:\n        return 0\n    elif arr==[]:\n        return 0\n    else:\n        somme = 0\n        for elements in arr:\n            somme+=elements\n        \n        somme=somme-min(arr)-max(arr)\n            \n        return somme\n", "def sum_array(arr):\n    if hasattr(arr, 'sort'):\n        arr.sort()\n        return sum(arr[1:-1], 0)\n    else:\n        return 0", "def sum_array(arr):\n    sum=0\n    #if arr==0 or len(arr)>1:\n    if not arr or len(arr)==1:\n        return 0\n    else:\n        for i in arr:\n            sum=sum+i\n        return sum-min(arr)-max(arr)\n", "def sum_array(a):\n    try:\n        a.sort()\n        a = sum(a[1:-1])\n    except AttributeError:\n        a = 0\n    return a", "def sum_array(arr):\n    if not arr or len(arr) in [1, 2]:\n        return 0\n    maxn, minn, sumn = arr[0], arr[0], 0\n    for n in arr:\n        if n > maxn:\n            maxn = n\n        elif n < minn:\n            minn = n\n        sumn += n\n    return sumn - maxn - minn", "def sum_array(arr):\n    if not arr:\n        return 0\n    else:\n        res = sorted(arr)[1:-1]\n        return sum(i for i in res)", "def sum_array(arr):\n    if arr==[] or arr == None or len(arr) == 1:\n        return 0\n    else:\n        mini = min(arr)\n        maxi = max(arr)\n        max_index = arr.index(maxi)\n        min_index = arr.index(mini)\n        arr[max_index] = 0\n        arr[min_index] = 0\n        ttl = 0\n        for x in arr:\n            ttl += x\n    return ttl\n", "def sum_array(arr):\n    sum=0\n    if arr==None or len(arr)<3: return sum\n    arr.sort()\n    for i in range(1,len(arr)-1):\n            sum += arr[i]\n    return sum\n", "def sum_array(arr):\n    if arr == [] or arr == None:\n        return 0\n    elif len(arr)>2:\n        return sum(sorted(arr)[1:-1])\n    else:\n        return 0\n    #sum(i for i in arr if i > min(arr) and i < max(arr))\n", "def sum_array(arr=[]):\n    if arr == [] or arr == None or len(arr) < 3:\n        return 0\n    else:\n        arr.remove(max(arr))\n        arr.remove(min(arr))\n        return sum(arr)\n \n \n        \n        \n", "def sum_array(arr):\n    \n    if arr == None or int(len(arr)) <= 2:\n        return 0\n    else:\n        arr.remove(max(arr))\n        arr.remove(min(arr))\n        \n        \n        #new_list = [x for x in arr if x != max(arr) or min(arr)]\n        return sum(arr)\n  \n", "def sum_array(arr):\n    if arr == None:\n        return 0\n    elif len(arr) <= 2:\n        return 0\n    \n    arr.sort()\n    return sum(arr[1:-1])", "def sum_array(arr):\n    return 0 if not bool(arr) or len(arr) < 3 else sum(sorted(arr)[1:-1])", "def sum_array(arr):\n    if arr is None or len(arr) <= 1:\n        return 0    \n    return sum(arr) - (max(arr) + min(arr))", "def sum_array(arr):\n    if arr==None or arr==[]:\n        return 0\n    mi=min(arr)\n    ma=max(arr)\n    st=(arr.count(mi)-1)*mi+(arr.count(ma)-1)*ma\n    for i in arr:\n        if i not in [mi,ma]:\n            st+=i\n    return st\n    #your code here\n", "def sum_array(arr):\n    if not arr:\n        return 0\n    c, y = 0, []\n    for x in arr:\n        if c<2 and (x==max(arr) or x==min(arr)):\n            c += 1\n        else:\n            y.append(x)\n    return sum(y)", "def sum_array(arr):\n    if arr and len(arr)>2:\n        arr.pop(arr.index(max(arr)))\n        arr.pop(arr.index(min(arr)))\n    else:\n        return 0\n    return sum(arr)\n", "def sum_array(arr):\n    #your code here\n    if arr == None:\n        return 0\n    elif len(arr) <= 1:\n        return 0\n    else:\n        return sum(arr) - (max(arr) + min(arr))\n", "def sum_array(arr):\n    try:\n        print(sorted(arr))\n        print(sorted(arr)[1:-1])\n        return sum(sorted(arr)[1:-1]) if len(arr) > 2 else 0\n    except(TypeError):\n        return 0", "def sum_array(arr):\n    #your code here\n    sum = 0\n    if arr == None or arr == []:\n        return 0\n    \n    else:\n        new = sorted(arr)\n        \n    for i in range(1, len(new)-1):\n        sum += new[i]\n        \n    return sum\n", "def sum_array(arr):\n    if arr is None or len(arr) < 3:\n        return 0\n    else:\n        arr.sort()\n        return sum(arr) - arr[0] - arr[-1]", "def sum_array(arr):\n    if not arr or len(arr) == 1:\n        return 0\n    \n#     arr.remove(min(arr))\n#     arr.remove(max(arr))\n    \n#     return sum(arr)\n\n    total = mn = mx = arr[0]\n    \n    for x in arr[1:]:\n        total += x\n        \n        if x < mn:\n            mn = x\n        \n        if x > mx:\n            mx = x\n    \n    \n    return total - mn - mx", "def sum_array(arr):\n    a = 0\n    if arr == []:\n        return 0\n    if arr == None:\n        return 0\n    if len(arr)==1 or len(arr) == 2:\n        return 0\n    arr.sort()\n    for i in range(len(arr)-2):\n        a += arr[i+1]\n    return a", "def sum_array(arr):\n    try:\n        if len(arr) > 2:\n            arr.sort()\n            return sum(arr[1:-1])\n        else:\n            return 0\n    except TypeError:\n        return 0", "def sum_array(arr):\n    #your code here\n    if arr == [] or arr is None:\n        return 0\n    elif len(arr) == 1:\n        return 0\n    else:      \n        return sum(arr)-min(arr)-max(arr)", "def sum_array(arr):\n    print(arr)\n    if not arr:\n        return 0\n    elif len(arr) == 1:\n        return 0\n    else:\n        sum = 0\n        x = 0\n        for x in arr:\n            sum += x\n        return sum-max(arr)-min(arr)", "def sum_array(arr):\n    if arr and len(arr) > 3:\n        return sum(arr) - min(arr) - max(arr) \n    return 0", "def sum_array(arr):\n    if arr:\n        return sum(arr)-max(arr)-min(arr) if len(arr) > 1 else 0 \n    else:\n        return 0 ", "def sum_array(arr=84089):\n    \n    \n    if arr and len(arr) > 2:\n        arr = sorted(arr)\n        return sum(arr[1:-1])\n    \n    else:\n        return 0\n    \n", "def sum_array(arr):\n    return sum(sorted(arr)[1:len(arr) - 1]) if arr and len(arr) > 2 else 0\n", "def sum_array(arr:list):\n    if arr is None or len(arr) <= 2:\n        return 0\n    sorted_arr = sorted(arr)\n    return sum(sorted_arr[1:-1])\n", "def sum_array(arr):\n    \n    if not arr: return 0\n    if len(arr)==1: return 0\n    if len(arr)==2: return 0\n    \n    return sum(sorted(arr)[1:-1])", "def sum_array(arr):\n    if arr == None or arr==[]:\n        return 0\n    for x in arr:\n        if int (len(arr)) >=3:\n            return int(sum(arr) - min(arr) - max(arr))\n        else:\n            return 0", "def sum_array(arr):\n    if arr == None or arr == [] or len(arr) == 1:\n        return 0\n    else:\n        arr.sort()\n        arr = arr[1:-1]\n        return sum(arr)", "def sum_array(arr):\n    if arr == None:\n        return False\n    elif len(arr) == 1 or len(arr) == 0:\n        return 0\n    \n    sum = 0\n    minimum = min(arr)\n    maximum = max(arr)\n    for i in arr:\n        sum += i\n    \n    return sum - minimum- maximum;\n  \n", "def sum_array(arr):\n    try:\n        l = arr.remove(min(arr))\n        l = arr.remove(max(arr))\n        return sum(arr)\n    except:\n        return 0", "def sum_array(arr):\n    if arr ==None:\n        return 0\n    if len(arr)==0:\n        return 0\n    \n    sum = 0\n    arr.sort()\n    w = arr[1:-1]\n    for i in w:\n        sum += i\n\n    return sum", "def sum_array(arr):\n    if(arr == None):\n        return 0\n    else:\n        list.sort(arr)\n        sum = 0\n        length = len(arr)\n        if 1 >= length:\n            return sum\n        else:\n            array = arr\n            array = array[1:len(array)-1]\n            for x in array:\n                sum += x\n            return sum\n        \n        \n", "def sum_array(arr):\n    if arr == None or len(arr) <= 2:\n        return 0\n    else:\n        return sum([x for x in arr]) - min(arr) - max(arr)", "def sum_array(arr=[0]):\n    try:\n        if len(arr) > -1 and len(arr) < 3:\n            return 0\n        else:\n            return sum(arr)- (min(arr)+max(arr))\n    \n    except:\n        return 0 ", "def sum_array(numbers):\n    return bool(numbers) and sum(sorted(numbers)[1:-1])"]