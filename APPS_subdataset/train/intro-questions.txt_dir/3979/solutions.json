["def match_arrays(v, r):\n    return sum(x in r for x in v)\n\n# DON'T remove\nverbose = False # set to True to diplay arrays being tested in the random tests", "def match_arrays(v, r):\n    return sum(1 for x in v if x in r)\n\n# DON'T remove\nverbose = False # set to True to diplay arrays being tested in the random tests", "def match_arrays(v, r):\n    # Good Luck!\n\n    cnt = 0\n    for i in v:\n        if i in r:\n            cnt += 1\n    return cnt\n\n# DON'T remove\nverbose = False # set to True to diplay arrays being tested in the random tests\n\n", "import collections\nverbose = False\n\ndef setify(s): return { elt if isinstance(elt, collections.Hashable) else tuple(elt) for elt in s }\n\ndef match_arrays(v, r): return len(setify(v) & setify(r))", "def match_arrays(v, r):\n    tool = lambda x: {tuple(y) if type(y) == list else y for y in x}\n    return len(tool(v) & tool(r))\n\n# DON'T remove\nverbose = False # set to True to diplay arrays being tested in the random tests", "def match_arrays(v, r):\n    return sum(1 for e in v if e in r)\nverbose = False", "verbose,match_arrays=0,lambda a,b:sum(1for e in a if e in b)", "def match_arrays(v, r):\n    return sum(1 for i in r if i in v)\n\n# DON'T remove\nverbose = False # set to True to diplay arrays being tested in the random tests", "def match_arrays(xs, ys):\n    return sum(1 for y in ys if y in xs)\n\nverbose = False", "match_arrays = lambda k, l: len([e for e in k if e in l])\n\n# DON'T remove\nverbose = False # set to True to diplay arrays being tested in the random tests"]