["def string_merge(string1, string2, letter):\n    return string1[:string1.index(letter)] + string2[string2.index(letter):]", "def string_merge(string1, string2, letter):\n \"\"\"given two words and a letter, merge one word that combines both at the first occurence of \n the letter\n >>> \"hello\",\"world\",\"l\"\n held\n >>> \"jason\",\"samson\",\"s\"\n jasamson \n \"\"\"\n return string1[0:(string1.find(letter))] + string2[(string2.find(letter)):]", "def string_merge(s1: str, s2: str, letter: str) -> str:\n    return f\"{s1.partition(letter)[0]}{letter}{s2.partition(letter)[2]}\"\n", "string_merge=lambda a,b,l:a[:a.find(l)]+b[b.find(l):]", "def string_merge(str1, str2, l):\n    i = str1.find(l)\n    j = str2.find(l)\n    return str1[:i] + str2[j:]", "def string_merge(string1, string2, letter):\n    return f\"{string1.partition(letter)[0]}{letter}{string2.partition(letter)[-1]}\"", "def string_merge(str1, str2, letter):\n    return str1[:str1.index(letter)] + str2[str2.index(letter):]"]