["from fractions import gcd\ndef count_black_cells(h, w):\n    return (h + w) -2 + gcd(h,w)", "from math import floor, ceil\n\ndef count_black_cells(h, w):\n    if w < h: h, w = w, h\n    diag, step = -2, w / h\n    for i in range(h):\n        left = floor(i * step - 1e-9)\n        right = ceil((i+1) * step + 1e-9)\n        diag += right - left\n    return diag", "from math import gcd\ndef count_black_cells(h, w):\n    return h + w + gcd(h, w) - 2", "import math\n\ndef count_black_cells(h, w):\n    return h+w+math.gcd(h,w)-2", "from fractions import gcd\n\ndef count_black_cells(h, w):\n    return h + w + gcd(h, w) - 2", "import math\ndef count_black_cells(h, w):\n  r,y,up,t=0,1,0,None\n  while(y<=w):\n    t=math.ceil(h*y/w)\n    r+=t-up+(1 if y!=w and h*y/w==t else 0)\n    y+=1\n    up=t-1\n  return r", "from fractions import Fraction as F\nfrom math import ceil, floor\n\ndef count_black_cells(h, w):\n    total = 0\n    r = F(h, w)\n    last_y = 0\n    for x in range(w + 1):\n        y = x * r\n        total += ceil(y) - floor(last_y)\n        if 0 < x < w and y == int(y):\n            total += 2\n        last_y = y\n    return total", "from math import gcd\n\ndef count_black_cells(h, w):\n    return w + h + gcd(h, w) - 2", "def count_black_cells(h, w):\n    if h==w:\n        return 3*h-2\n    r=0\n    x1=0\n    for i in range(h):\n        x2=w*(i+1)/h\n        r+=(int(x2)+1)-int(x1)\n        if int(x1)==x1 and x1!=0:\n            r+=1\n        elif i==h-1:\n            r-=1\n        x1=x2\n    return r"]