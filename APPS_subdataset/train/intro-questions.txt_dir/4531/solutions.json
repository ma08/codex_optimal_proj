["def to_binary(n):\n    return \"{:0b}\".format(n & 0xffffffff)", "def to_binary(n):\n    return bin(n if n >= 0 else 2 ** 32 + n)[2:]", "def to_binary(n):\n    return bin(n % 2**32)[2:]", "def to_binary(n):\n    return format(n & 0xffffffff, 'b')", "def to_binary(n):\n    return bin(n & (2**32 - 1))[2:]", "def to_binary(n):\n    n = n & 0xFFFFFFFF\n    return bin(n)[2:]", "to_binary = lambda n: bin(n + 4294967296 * (n < 0))[2:]", "import numpy\n\ndef to_binary(n):\n    return numpy.binary_repr(n) if n>=0 else numpy.binary_repr(n, width=32)", "def to_binary(n):\n    return '{:b}'.format(n & 4294967295)", "def to_binary(n):\n  if n < 0: return (bin(n & 0b111111111111111111111111111111111)[3:])\n  return bin(n)[2:]"]