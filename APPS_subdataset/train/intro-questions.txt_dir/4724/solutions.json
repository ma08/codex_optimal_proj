["def drop_cap(str_):\n    return ' '.join( w.capitalize() if len(w) > 2 else w for w in str_.split(' ') )\n", "import re\n\ndef drop_cap(s):\n    return re.sub(r'\\w{3,}', lambda m: m[0].title(), s)", "def drop_cap(str_):\n    return \" \".join([i[0].upper() + i[1::].lower() if len(i) > 2 else i for i in str_.split(\" \")])", "def drop_cap(stg):\n    return \" \".join(w.capitalize() if len(w) > 2 else w for w in stg.split(\" \"))", "def drop_cap(s):\n    return ' '.join(x.title() if len(x) > 2 else x for x in s.split(' '))", "import re\n\n\ndef r(m):\n    s = m.group()\n    if len(s) > 2:\n        s = s.capitalize()\n    return s\n\ndef drop_cap(s):\n    return re.sub('\\w+', r, s)", "def drop_cap(str_):\n    return \" \".join(s.capitalize() if len(s) > 2 else s for s in str_.split(\" \"))", "def drop_cap(str_):\n    return \" \".join(map(lambda x: x.title() if len(x) > 2 else x, str_.split(\" \")))", "import re\n\ndef drop_cap(s):\n    return re.sub(r'\\S{3,}', lambda m: m.group(0).title(), s)"]