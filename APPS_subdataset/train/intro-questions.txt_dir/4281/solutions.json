["import math\ndef tankvol(h, d, vt):\n    r = d/2.0\n    if h == r: return vt/2     # is the tank half full?\n    half = h>r                 # is it more than half full\n    h = d-h if half else h     # adjust h accordingly\n    a = r-h                    # perpendicular intercept of the chord\n    b = math.sqrt(r**2-a**2)   # half the chord\n    t = 2*math.asin(b/r)       # the angle the chord sweeps out\n    A = r**2*t/2 - b*a         # the area of the segment\n    v = vt*A/(math.pi*r**2)    # the volume of the segment\n    return int(vt-v) if half else int(v)\n    \n", "import math\ndef tankvol(h, d, vt):\n    r=d/2\n    theta=math.acos((r-h)/r)\n    return int(vt*(theta-math.sin(theta)*(r-h)/r)/math.pi)", "import math\ndef tankvol(h, d, vt):\n    r = d/2\n    area_of_liquid = (r**2)*math.acos(1-h/r) - (r-h)*((2*r*h-h*h)**0.5)\n    height_of_cylinder = vt/(math.pi*r*r)\n    volume_of_liquid = area_of_liquid*height_of_cylinder\n    return math.floor(volume_of_liquid)", "# see https://en.wikipedia.org/wiki/Circular_segment\n# for the formulas used\n\nfrom math import sin, acos, pi\n\ndef tankvol(h, d, vt):\n    # radius\n    r = d / 2.0\n    # central angle of segment\n    theta = 2 * acos(1 - h/r)\n    # area of segment\n    A_segment = r**2 / 2 * (theta - sin(theta))\n    # area of circle\n    A_circle = r**2 * pi\n    # ratio of the areas\n    ratio = A_segment / A_circle\n    # remaining volume\n    vol_remain = ratio * vt\n    # return the truncated result\n    return int(vol_remain)", "from math import pi, acos, sin\ndef tankvol(h, d, vt):\n    theta = acos((d - 2*h) / d)\n    proportion = (theta - 0.5*sin(2*theta)) / pi\n    return int(proportion * vt)", "import math\n\ndef tankvol(h, d, vt):\n    return math.floor((d*d/4*math.acos(1-(h/(d/2)))-(math.sqrt(d*d/4-(d/2-h)**2)*(d/2-h)))*vt/(math.pi*d**2/4))", "from math import acos, pi, sin, sqrt\n\ndef tankvol(h, d, vt):\n    # http://mathworld.wolfram.com/HorizontalCylindricalSegment.html\n    r = d / 2\n    l = vt / (pi * r**2)\n    v = l * (r**2 * acos((r-h)/r) - (r-h) * sqrt(2*r*h - h**2))\n    return int(v)", "from math import asin,sin,pi\ndef tankvol(h,d,vt):\n    a = pi-2*asin(1-2*h/d)\n    return vt*(a-sin(a))/pi//2\n", "from math import floor, degrees, acos, pi, sin, radians\n\ndef calc_theta(a, b):\n    return degrees(acos(a/b))\n\ndef calc_circle_segment_area(r, alpha):\n    return pi * r**2 * (alpha/360)\n\ndef calc_triangle_area(r, alpha):\n    return (r**2 * sin(alpha)) / 2\n\ndef calc_cylinder_height(r, vt):\n    return vt / (pi*r**2)\n\ndef tankvol(h, d, vt):\n    r = d/2\n    \n    theta = calc_theta(r-h, r)\n    angle = theta * 2\n    \n    segment_area = calc_circle_segment_area(r, angle)\n    triangle_area = calc_triangle_area(r, radians(angle))\n    cylinder_height = calc_cylinder_height(r, vt)\n    \n    liquid_area = segment_area - triangle_area\n    liquid_volume = liquid_area * cylinder_height\n    \n    return floor(liquid_volume)", "import math\ndef tankvol(h, d, vt):\n    # length of tank\n    l = vt/(math.pi*(d/2)**2)\n    r = d/2\n    \n    #segment volume\n    partOne = ((r)**2*math.acos((r - h)/(r)))\n    partTwo = ((r-h)*math.sqrt((2*r*h) - h**2))\n    vs = l*(partOne - partTwo)\n    \n    return math.floor(vs)"]