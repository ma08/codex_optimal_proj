["def format_words(words):\n    return ', '.join(word for word in words if word)[::-1].replace(',', 'dna ', 1)[::-1] if words else ''", "def format_words(words):\n    # reject falsey words\n    if not words: return \"\"\n    \n    # ignoring empty strings\n    words = [word for word in words if word]\n    \n    number_of_words = len(words)\n    if number_of_words <= 2:\n        # corner cases:\n        # 1) list with empty strings\n        # 2) list with one non-empty string\n        # 3) list with two non-empty strings\n        joiner = \" and \" if number_of_words == 2 else \"\"\n        return joiner.join(words)\n    \n    return \", \".join(words[:-1]) + \" and \" + words[-1]", "def format_words(words):\n    words = [w for w in words if w] if words else ''\n    if not words:\n        return ''\n    return '{seq} and {last}'.format(seq=', '.join(words[:-1]), last=words[-1]) if len(words) !=1 else '{0}'.format(words[0])", "def format_words(words):\n    return \" and \".join(\", \".join(filter(bool, words or [])).rsplit(\", \", 1))", "from itertools import chain\n\ndef format_words(words):\n    if not words: return ''\n    \n    filtered = [s for s in words if s]\n    nCommas  = len(filtered)-2\n    nAnd     = min(1,len(filtered)-1)\n    chunks   = [', '] * nCommas + [' and '] * nAnd + ['']\n    \n    return ''.join(chain(*zip(filtered, chunks)))", "def format_words(words):\n    if not words or words == ['']:\n        return ''\n    words = [i for i in words if i != '']\n    if len(words) == 1:\n        return words[0]\n    return ', '.join(words[:-1]) + ' and ' + words[-1]", "def format_words(w=None):\n    return ', '.join(filter(lambda _:bool(_),w))[::-1].replace(',','dna ',1)[::-1] if w else ''", "def format_words(words):\n    return ', '.join([word for word in words if word] if words else [])[::-1].replace(' ,', ' dna ', 1)[::-1]", "def format_words(words):\n    if words!=[\"\"] and words!=[] and words is not None:\n        l=[word for word in words if word!='']\n        return \", \".join(l[:-1])+' and '+l[-1:][0] if len(l)>1 else l[0]\n    return ''\n", "def format_words(words):\n    words = [w for w in words if w] if words else ''\n    if not words:\n        return ''\n    return f'{\", \".join(words[:-1])} and {words[-1]}' if len(words) !=1 else words[-1]"]