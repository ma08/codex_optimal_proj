["def last_fib_digit(n):\n    return [0,1,1,2,3,5,8,3,1,4,5,9,4,3,7,0,7,7,4,1,5,6,1,7,8,5,3,8,1,9,0,9,9,8,7,5,2,7,9,6,5,1,6,7,3,0,3,3,6,9,5,4,9,3,2,5,7,2,9,1][n%60]", "def last_fib_digit(n):\n    \"\"\" well, it is periodic on 60 \"\"\"\n    a = 0\n    b = 1\n    for _ in range(n%60):\n        a, b = b, (a+b)%10\n    return a", "last_fib_digit=lambda n:int((5**.5/2+.5)**(n%60)/5**.5+.5)%10", "def find_pattern():\n    fib = [1, 1, 2]\n    while fib[-2:] != [1, 1]:\n        fib.append((fib[-2] + fib[-1]) % 10)\n    return fib[:-2]\n    \npattern = find_pattern()\n    \ndef last_fib_digit(n):\n    return pattern[(n-1) % len(pattern)]", "def last_fib_digit(n):\n    s = [0,1,1,2,3,5,8,3,1,4,5,9,4,3,7,0,7,7,4,1,5,6,1,7,8,5,3,8,1,9,0,9,9,8,7,5,2,7,9,6,5,1,6,7,3,0,3,3,6,9,5,4,9,3,2,5,7,2,9,1]\n    return s[n%len(s)]", "def last_fib_digit(index):\n    last, tmp, index = 0, 1, index % 60\n    for i in range(index):\n        last, tmp = tmp, (last + tmp) % 10\n    return last", "def last_fib_digit(n):\n    a, b = 0, 1\n    for _ in range(n % 60):\n        a, b = b, (b + a) % 10\n    return a", "def last_fib_digit(n):\n    last = 0\n    tmp = 1\n    n = n % 60\n    for i in range(n):\n        last, tmp = tmp, (last + tmp)\n    return last % 10", "def last_fib_digit(index):\n    return [0,1,1,2,3,5,8,3,1,4,5,9,4,3,7,0,7,7,4,1,5,6,1,7,8,5,3,8,1,9,0,9,9,8,7,5,2,7,9,6,5,1,6,7,3,0,3,3,6,9,5,4,9,3,2,5,7,2,9,1][index%60]", "def last_fib_digit(n):\n    n = (n-1) % 60\n    a, b = 1, 1\n    for i in range(n):\n        a, b = b, (a + b) % 10\n    return a"]