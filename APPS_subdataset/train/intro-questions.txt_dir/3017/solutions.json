["from math import log10\n\ndef rocks(n):\n    return (n + 1) * int(log10(n) + 1) - (10 ** int(log10(n) + 1) - 1) // 9", "def rocks(n):\n    ini, c = '9'*(len(str(n)[:-1])), 0\n    while ini:\n        c += (n-int(ini))*len(str(n))\n        n, ini = int(ini), ini[:-1]\n    return c+n", "def rocks(n):\n    cost = 0\n    digits = 0\n    while n >= 10 ** (digits + 1):\n        digits += 1\n        cost += (10 ** digits - 10 ** (digits - 1)) * digits\n    cost += (n - (10 ** digits) + 1) * (digits + 1)\n    return cost", "def rocks(n):\n    l = len(str(n))\n    return int(n + 1 - 10**(l-1)) * l + sum(9 * i * 10**(i - 1) for i in range(l))", "def rocks(n):\n  r,p,i=0,1,1\n  while p*9<n:\n    r+=9*p*i\n    n-=9*p\n    p*=10\n    i+=1\n  return r+n*i", "def rocks(n):\n    tot = 0\n    for i in range(10):\n        if n >= 10**(i+1):\n            tot += 9*(i+1)*10**i\n        else:\n            tot += (1+n-10**i)*(i+1)\n            break\n    return tot", "from math import log10\n\n\ndef rocks(n):\n    i = int(log10(n))\n    return sum(j * 9*10**(j-1) for j in range(1, i+1)) + (i+1) * (n - 10**i + 1)", "def rocks(n):\n    r=0\n    i=1\n    while(n>=10**i):\n        r+=i*9*(10**(i-1))\n        i+=1\n    r+=(n-(10**(i-1)-1))*i\n    return r"]