["class Solution:\n    def checkIfExist(self, arr: List[int]) -> bool:\n        found = {}\n        for num in arr:\n            if num * 2 in found:\n                return True\n            if num % 2 == 0 and num / 2 in found:\n                return True\n            found[num] = True\n        return False", "class Solution:\n    def checkIfExist(self, arr: List[int]) -> bool:\n        lookup = dict()\n        \n        for val in arr: \n            if val*2 in lookup:\n                return True\n            elif val /2 in lookup:\n                return True\n            else:\n                lookup[val] = 1\n        \n        return False", "class Solution:\n    def checkIfExist(self, arr: List[int]) -> bool:\n        arr2=list([x*2 for x in arr])\n        zeros=arr.count(0)\n        \n        if zeros >=2: return True\n        \n        \n        print(arr2)\n        for a in arr2:\n            if a in arr: \n                if a==0 and zeros == 1: continue\n                return True\n        \n        return False\n    \n        \n", "class Solution:\n    def checkIfExist(self, arr: List[int]) -> bool:\n        tracker = set()\n        for n in arr:\n            if (n%2==0 and (n/2) in tracker) or n*2 in tracker:\n                return True\n            tracker.add(n)\n        return False", "class Solution:\n    def checkIfExist(self, arr: List[int]) -> bool:\n        # seen = set()\n        # for e in arr:\n        #     if 2*e in seen or (e % 2 == 0 and e//2 in seen):\n        #         return True\n        #     seen.add(e)\n        # return False\n    \n        for i in range(0, len(arr)):\n            for j in range(i+1, len(arr)):\n                if arr[i] == 2*arr[j] or arr[j] == 2*arr[i]:\n                    return True\n        return False\n    \n        # for e in arr:\n        #     if 2*e in arr:\n        #         return True\n        # return False\n", "class Solution:\n    def checkIfExist(self, arr: List[int]) -> bool:\n        arr.sort()\n        for k in range(len(arr)-1):\n            if 2*arr[k] in arr[k+1:] or 2*arr[k] in arr[:k]:\n                return True\n        return False", "class Solution:\n    def checkIfExist(self, arr: List[int]) -> bool:\n            i=0\n            i=len(arr)\n            for j in range(0,i):\n                for k in range(0,i):\n                    if(arr[j]>0 and arr[k]>0 and arr[j]>arr[k]):\n                        if(arr[j]==arr[k]*2):\n                            return True\n                    elif(arr[j]<0 and arr[k]<0 and arr[j]<arr[k]):\n                        if(arr[k]*2==arr[j]):\n                            return True   \n            if(arr[0]==0 and arr[1]==0):\n                return True                        \n            else:\n                return False\n", "class Solution:\n    def checkIfExist(self, arr: List[int]) -> bool:\n        i=0\n        i=len(arr)\n        for j in range(0,i):\n                for k in range(0,i):\n                    if(arr[j]>0 and arr[k]>0 and arr[j]>arr[k]):\n                        if(arr[j]==arr[k]*2):\n                            return True\n                    elif(arr[j]<0 and arr[k]<0 and arr[j]<arr[k]):\n                        if(arr[k]*2==arr[j]):\n                            return True    \n        if(arr[j]==0 and arr[k]==0):\n                return True\n        else:\n                return False", "class Solution:\n    def checkIfExist(self, arr: List[int]) -> bool:\n        \n        for i in range(len(arr)):\n            for j in range(i+1,len(arr)):\n                if ((arr[j] == (arr[i]*2)) | (float(arr[j]) == (arr[i]/2))):\n                    return True\n        return False\n", "class Solution:\n    def checkIfExist(self, arr: List[int]) -> bool:\n        if len(arr) == 0 or len(arr) == 1:\n            return False\n        else:\n            for i in range(len(arr) - 1):\n                for j in range(i + 1, len(arr)):\n                    if arr[i] == 2 * arr[j] or arr[j] == 2 * arr[i]:\n                        return True\n            return False", "class Solution:\n    def checkIfExist(self, arr: List[int]) -> bool:\n        arr.sort()\n        for i in range(len(arr)):\n            for j in range(i+1,len(arr)):\n                if (arr[i]!=0 and arr[j]/arr[i]==2):\n                    return True\n                if(arr[i]==0 and arr[j]==0):\n                    return True\n                if(arr[i]<0 and arr[j]<0 and arr[i]/arr[j]==2 ):\n                    return True\n", "class Solution:\n    def checkIfExist(self, arr: List[int]) -> bool:\n        seen = set()\n        for e in arr:\n            if 2*e in seen or (e % 2 == 0 and e//2 in seen):\n                return True\n            seen.add(e)\n        return False", "class Solution:\n    def checkIfExist(self, arr: List[int]) -> bool:\n        arr.sort()\n        print(arr)\n        for i in range(len(arr)):\n            for j in range(i + 1, len(arr)):\n                if arr[j] == 0 and arr[i] == 0:\n                    return True\n                if arr[j] != 0 and arr[i] == 0:\n                    continue\n                if arr[j] < 0 and arr[i] < 0:\n                    if arr[i] / arr[j] == 2:\n                        return True\n                if arr[j] > 0 and arr[i] > 0:\n                    if arr[j] / arr[i] == 2:\n                        return True\n        return False", "class Solution:\n    def checkIfExist(self, arr: List[int]) -> bool:\n        for num in arr:\n            if num == 0:\n                if arr.count(0) > 1:\n                    return True\n            else:\n                if arr.count(num * 2) != 0:\n                    return True           \n        return False", "class Solution:\n    def checkIfExist(self, arr: List[int]) -> bool:\n        h_table = set()\n        for num in arr:\n            if num*2 in h_table or num/2 in h_table:\n                return True\n            h_table.add(num)\n        return False\n            \n            \n        \n", "class Solution:\n    def checkIfExist(self, arr: List[int]) -> bool:\n        doubledList = []\n        l = len(arr)\n        for num in arr:\n            doubledList.append(num*2)\n        for i in range(l):\n            if doubledList[i] in arr and arr.index(doubledList[i]) != i:\n                return True\n        return False\n", "class Solution:\n    def checkIfExist(self, arr: List[int]) -> bool:\n        cache = set()\n        for i, value in enumerate(arr):\n            if 2*value in cache or (value%2 == 0 and value/2 in cache):\n                return True\n            cache.add(value)\n        return False", "class Solution:\n    def checkIfExist(self, arr: List[int]) -> bool:\n        \n        if(len(arr) < 2):\n            return False\n        \n        for n in range(len(arr)):\n            m = 2*arr[n]\n            for k in range(len(arr)):\n                if(arr[k] == m and k!=n):\n                    return True\n                \n        return False\n            \n            \n", "class Solution:\n    def checkIfExist(self, arr: List[int]) -> bool:\n        if arr[0] == 0 and arr[1] == 0:\n            return True\n        dictionary = {}\n        for number in arr:\n            dictionary[2 * number] = True\n\n        for number in arr:\n            if number in dictionary and number != 0:\n                return True\n        return False", "class Solution:\n    def checkIfExist(self, arr: List[int]) -> bool:\n        for i in range(len(arr)):\n            for j in range(len(arr)):\n                if i != j and (arr[i]*2 == arr[j] or arr[i] == arr[j]*2):\n                    print(i)\n                    print(j)\n                    return True\n        return False\n"]