["def trouble(x, t):\n    arr = [x[0]]\n    for c in x[1:]:\n        if c + arr[-1] != t:\n            arr.append(c)\n    return arr", "def trouble(array, target):\n    i = 0\n    while i < len(array) - 1:\n       if array[i] + array[i+1] == target:\n           del array[i+1]\n       else:\n           i += 1\n    return array", "def trouble(x, t):\n    n = x[:1]\n    for i in x[1:]:\n        if i + n[-1] != t:\n            n.append(i)\n    return n\n", "def trouble(x, t):\n    res = [x[0]]\n    for elem in x[1:]: \n        if elem + res[-1] != t: \n            res.append(elem)\n    return res", "def trouble(arr, t):\n    i = 0\n    while i < len(arr)-1:\n        if arr[i] + arr[i+1] == t:\n            del arr[i+1]\n        else:\n            i += 1\n    \n    return arr", "def trouble(nums, target):\n    if len(nums) < 2:\n        return nums\n    result = []\n    left = 0\n    right = 1\n    while True:\n        try:\n            if nums[left] + nums[right] != target:\n                result.append(nums[left])\n                left = right\n        except LookupError:\n            result.append(nums[left])\n            break\n        right += 1\n    return result\n", "from functools import reduce\n\ndef trouble(x, t):\n    return reduce(lambda a, u: a + ([u] if not a or a[-1] + u != t else []), x[1:], x[0:1])", "def trouble(x, t):\n    res = []\n    for i in x:\n        if not res or res[-1] + i != t:\n            res.append(i)\n    return res", "def trouble(arr, t):\n    for i in range(len(arr) - 1):\n        if arr[i] + arr[i+1] == t:\n            return trouble(arr[:i+1] + arr[i+2:], t)\n    return arr", "def trouble(x, t):\n    while(1):\n        for i in range(len(x) - 1):\n            if x[i] + x[i+1] == t:\n                x.pop(i+1)\n                break\n        else:\n            break\n    return x"]