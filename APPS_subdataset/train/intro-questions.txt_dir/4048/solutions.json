["def pig_latin(word):\n    return word[1:]+word[0]+'ay' if len(word)>3 else word", "def pig_latin(word):\n    return word if len(word) < 4 else word[1:]+word[0]+\"ay\"", "def pig_latin(word):\n    return f\"{word[1:]}{word[0]}ay\" if len(word) > 3 else word", "def pig_latin(word):\n    if len(word) > 3:\n      ay = word[0] + \"ay\"\n      ans = word[1:]+ay\n      return ans\n    else:\n      return word", "def pig_latin(word):\n    return word if len(word) < 4 else f\"{word[1:]}{word[:1]}ay\" ", "def pig_latin(s):\n    return '{}{}ay'.format(s[1:], s[0]) if len(s) > 3 else s", "def pig_latin(word):\n    if len(word) < 3:\n        return word\n    ret = word + word[0] + 'ay'\n    return ret[1:]", "def pig_latin(word):\n    return \"{}{}ay\".format(word[1:], word[0]) if len(word) > 3 else word", "pig_latin = lambda w: len(w) < 4 and w or \"%s%say\" % (w[1:], w[0])", "def pig_latin(word):\n    if len(word) <= 3:\n        return word\n    word = word[1:] + word[0]\n    word = word + \"ay\"\n    return word"]