["def bits_battle(nums):\n    binary = '{:b}'.format\n    evens = odds = 0\n    for num in nums:\n        if num % 2:\n            odds += binary(num).count('1')\n        else:\n            evens += binary(num).count('0')\n    if odds == evens:\n        return 'tie'\n    return '{} win'.format('odds' if odds > evens else 'evens')\n", "def bits_battle(a):\n  odds, evens = sum([bin(i).count('1') for i in a if i % 2]), sum([bin(i).count('0') - 1 for i in a if i % 2 == 0])\n  return 'odds win' if odds > evens else 'evens win' if evens > odds else 'tie'", "def bits_battle(numbers):\n    x = sum(format(n, 'b').count('1') if n % 2 else -format(n, 'b').count('0') for n in numbers if n)\n    return (\n        'odds win' if x > 0 else\n        'evens win' if x < 0 else\n        'tie'\n    )", "def bits_battle(numbers):\n  odds = [i for i in numbers if i % 2 ]\n  evens = [i for i in numbers if i % 2 == 0]\n  res = sum(bin(i).count('1') for i in odds) - sum(bin(i)[2:].count('0') for i in evens)\n  return 'tie' if res == 0 else ['odds win', 'evens win'][res < 0]", "def bits_battle(numbers):\n    evens = sum([bin(numb).replace('0b', '').count('0') for numb in numbers if numb % 2 == 0])\n    odds = sum([bin(numb).replace('0b', '').count('1') for numb in numbers if numb % 2 != 0])\n    return 'odds win' if odds > evens else 'evens win' if evens > odds else 'tie'", "def bits_battle(numbers):\n  res = [0, 0]\n  for x in numbers:\n      res[x&1] += bin(x)[2:].count(\"01\"[x&1])\n  return \"odds win\" if res[0] < res[1] else \"evens win\" if res[0] > res[1] else \"tie\"", "def bits_battle(numbers):\n    odds = 0\n    evens = 0\n    for n in numbers:\n        if n % 2:\n            odds += bin(n).count('1')\n        elif n != 0 and n % 2 == 0:\n            evens += bin(n)[2:].count('0')    \n    return 'odds win' if odds > evens else 'evens win' if evens > odds else 'tie'", "def bits_battle(numbers):\n  odds, evens = sum(bin(n).count(\"1\") for n in numbers if n%2), sum(bin(n).count(\"0\")-1 for n in numbers if not n%2)\n  return [\"odds win\", \"evens win\"][odds - evens < 0] if odds - evens else \"tie\"", "bits_battle=lambda a:{\"0\":\"tie\",\"-\":\"odds win\"}.get(str(sum((-1)**(x%2)*bin(x)[2:].count(str(x%2))for x in a if x))[0],\"evens win\")"]