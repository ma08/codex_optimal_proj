["import math\n\ndef cycle(n) :\n    if n % 2 == 0 or n % 5 ==0:\n        return -1\n    k = 1\n    while pow(10,k,n) != 1:\n        k += 1\n    return k\n            \n    \n       \n", "def cycle(n):\n    if not n % 2 or not n % 5:\n        return -1\n    x, mods = 1, set()\n    while x not in mods:\n        mods.add(x)\n        x = 10 * x % n\n    return len(mods)", "def cycle(n):\n    if n%5==0 or n%2==0:\n        return -1\n    remainders, r = [1], 0\n    while r != 1:\n        r = remainders[-1] * 10 % n\n        remainders.append(r)\n    return len(remainders)-1", "def cycle(n) :\n    if n % 2 and n % 5:\n        for i in range(1, n):\n            if pow(10, i, n) == 1:\n                return i\n    return -1", "def cycle(n):\n    if n % 2 == 0 or n % 5 == 0:\n        return  -1\n    m = 1\n    for p in range(1, n):\n        m = 10 * m % n\n        if m == 1: \n            return p", "def cycle(n):\n    if not (n%2 and n%5): return -1\n    return next(filter(lambda x: pow(10, x, n) == 1, range(1, n)))", "def cycle(n) :\n    if not n % 2 or not n % 5:\n        return -1\n    m, s = 1, set()\n    while m not in s:\n        s.add(m)\n        m = 10 * m % n\n    return len(s)", "from math import ceil, log10\n\ndef cycle(d):\n    if d % 5 == 0 or d % 2 == 0:\n        return -1\n\n    n = 10 ** int(ceil(log10(d)))\n    first = n % d\n    n *= 10\n    for i in range(99999999):\n        n %= d\n        if n == first:\n            return i + 1\n        n *= 10", "def cycle(n) :\n    if n%2 == 0 or n%5 == 0:\n        return -1\n    c = len(str(n))\n    m = 10**c % n\n    while m != 1:\n        c += 1\n        m = (m*10) % n\n    return c\n", "def cycle(i):\n  if(i%2==0 or i%5==0):\n    return -1\n  \n  gen = 10\n  n = 1\n  while(gen%i != 1):\n    gen = (gen % i) * 10\n    n = n + 1\n    \n  return n"]