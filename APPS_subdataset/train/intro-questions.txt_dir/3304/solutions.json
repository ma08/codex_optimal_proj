["def is_inertial(arr):\n    mx   = max(arr, default=1)\n    miO  = min((x for x in arr if x%2==1), default=float(\"-inf\"))\n    miE2 = max((x for x in arr if x%2==0 and x!=mx), default=float(\"-inf\"))\n    return mx%2 == 0 and miE2 < miO", "def is_inertial(lst):\n    odds = [n for n in lst if n % 2 == 1]\n    evens = sorted(n for n in lst if n % 2 == 0)[-2:]\n    return (\n        bool(odds)\n        and max(lst) in evens\n        and (not evens[:-1] or min(odds) > evens[-2])\n    )", "def is_inertial(arr):\n    even, odd = [], []\n    for num in arr:\n        if num % 2 == 0:\n            even.append(num)\n        else:\n            odd.append(num)\n    if len(odd) == 0 or max(even) != max(arr) or min(odd) < sorted(even)[-2]:\n        return False\n    else:\n        return True", "def is_inertial(arr):\n    \"\"\"Try to maximize performance by only looping once over array\"\"\"\n    maxnr_odd = minnr_odd = maxnr_even = maxnr2nd_even = None\n\n    for nr in arr:\n        if nr % 2 == 0:\n            if maxnr_even is None:\n                maxnr_even = nr\n            elif nr > maxnr_even:\n                maxnr_even, maxnr2nd_even = nr, maxnr_even\n            elif maxnr2nd_even is None or maxnr2nd_even < nr:\n                maxnr2nd_even = nr\n        else:\n            if minnr_odd is None or minnr_odd > nr:\n                minnr_odd = nr\n            if maxnr_odd is None or maxnr_odd < nr:\n                maxnr_odd = nr\n\n    return (maxnr_even is not None and maxnr_odd is not None and minnr_odd is not None\n            and maxnr_odd < maxnr_even and (maxnr2nd_even is None or minnr_odd > maxnr2nd_even))", "def is_inertial(array) :\n    if not array :\n        return False\n    max_value = max(array)\n    if max_value % 2 :\n        return False\n    try :\n        return min(odd for odd in array if odd % 2) > max(even for even in array if even < max_value and even % 2 == 0)\n    except ValueError :\n        return False", "is_inertial=lambda a:a.sort()or(lambda e,o:e>[]<o and max(e[:-1]+[o[0]-1])<o[0]<=o[-1]<e[-1])(*[[n for n in a if n%2==m]for m in(0,1)])", "def is_inertial(a):\n    try:\n        return max(a) % 2 == 0 and min(e for e in a if e % 2) > max(e for e in a if e % 2 == 0 and e < max(a))\n    except ValueError:\n        return False", "def is_inertial(arr):\n    try: return sorted([z for z in arr if z%2])[0] > sorted([x for x in arr if x%2==0])[:-1][-1] and max(arr)%2==0 and not not ([z for z in arr if z%2]) if arr else False\n    except IndexError: return False \n", "def is_inertial(a):\n    odd = {i for i in a if i%2}\n    even = set(a) - odd\n    if not even: return False\n    q = sorted(even)[-2] if len(even)>1 else sorted(even)[0]\n    return odd and max(even)>max(odd) and min(odd)>q", "def is_inertial(arr):\n    if not arr or len(arr)<2: return False\n    m1=max(arr)\n    m2,m_odd=max(arr[1:],key=lambda x:(1-(x%2) and x!=m1,x)),min(arr,key=lambda x:(1-x%2,x))\n    return bool(m_odd%2) and not bool(m1%2) and bool(m2%2 or m_odd>m2)"]