["import re\ndef filter_words(phrase):\n    return re.sub(\"(bad|mean|ugly|horrible|hideous)\",\"awesome\",\n        phrase,flags=re.IGNORECASE)", "from re import sub\ndef filter_words(phrase):\n    return sub(\"(?i)(bad|mean|ugly|horrible|hideous)\",\"awesome\",phrase)", "from re import sub, I\ndef filter_words(phrase):\n    return sub(r\"(bad|mean|ugly|horrible|hideous)\",\"awesome\",phrase,flags=I)", "import re\n\nBAD_WORD = re.compile(r'bad|mean|ugly|horrible|hideous', re.I)\n\nGOOD_WORD = 'awesome'\n\n\ndef filter_words(phrase):\n    return BAD_WORD.sub(GOOD_WORD, phrase)\n", "def filter_words(s):\n    sl = s.lower()\n    while any(w in sl for w in (\"bad\", \"mean\", \"ugly\", \"horrible\", \"hideous\")):\n        for w in (\"bad\", \"mean\", \"ugly\", \"horrible\", \"hideous\"):\n            if w in sl:\n                i = sl.find(w)\n                s = s[:i]+'awesome' + s[i+len(w):]\n                sl = s.lower() #yuk\n    print(s)\n    return s", "from re import sub\ndef filter_words(phrase):\n    return sub(r\"(bad|mean|ugly|horrible|hideous)(?i)\",\"awesome\",phrase)", "import re\n\ninsults_regexp = re.compile(\"(bad|mean|ugly|horrible|hideous)\", re.IGNORECASE)\n\ndef filter_words(phrase):\n    return insults_regexp.sub(\"awesome\", phrase)", "from re import sub\ndef filter_words(phrase):\n    return sub(\"(bad|mean|ugly|horrible|hideous)(?i)\",\"awesome\",phrase)", "import re\n\ndef filter_words(phrase):\n    p = re.compile('(bad|mean|ugly|horrible|hideous)', re.IGNORECASE)\n    return p.sub('awesome', phrase)", "from re import sub, I\nfilter_words = lambda phrase: sub(\"(bad|mean|ugly|horrible|hideous)\",\"awesome\", phrase, 0, I)"]