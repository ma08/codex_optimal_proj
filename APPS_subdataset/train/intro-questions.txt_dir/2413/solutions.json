["class Solution:\n     def largestPalindrome(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         A = [0,9,987,123,597,677,1218,877,475]\n         return A[n]", "class Solution:\n     def largestPalindrome(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         return [9, 9009, 906609, 99000099, 9966006699, 999000000999, \\\n                     99956644665999, 9999000000009999][n - 1] % 1337", "class Solution(object):\n     def largestPalindrome(self, n):\n         if n==1: return 9\n         for a in range(2, 9*10**(n-1)):\n             hi=(10**n)-a\n             lo=int(str(hi)[::-1])\n             if a**2-4*lo < 0: continue\n             if (a**2-4*lo)**.5 == int((a**2-4*lo)**.5):\n                 return (lo+10**n*(10**n-a))%1337", "class Solution:\n     def largestPalindrome(self, n):\n         if n==1: return 9\n         if n==2: return 987\n         for a in range(2, 9*10**(n-1)):\n             hi=(10**n)-a\n             lo=int(str(hi)[::-1])\n             if a**2-4*lo < 0: continue\n             if (a**2-4*lo)**.5 == int((a**2-4*lo)**.5):\n                 return (lo+10**n*(10**n-a))%1337", "class Solution:\n     def largestPalindrome(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         if n == 1: return 9\n         if n == 2: return 987\n         for i in range(2, 9*10**(n-1)):\n             hi = (10**n) - i\n             lo = int(str(hi)[::-1])\n             if i**2 - 4*lo < 0: continue\n             if (i**2 - 4*lo)**0.5 == int((i**2-4*lo)**0.5):\n                 return (lo+10**n*(10**n-i))%1337", "class Solution:\n     def largestPalindrome(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         if n==1: return 9\n         if n==2: return 987\n         for a in range(2, 9*10**(n-1)):\n             hi=(10**n)-a\n             lo=int(str(hi)[::-1])\n             if a**2-4*lo < 0: continue\n             if (a**2-4*lo)**.5 == int((a**2-4*lo)**.5):\n                 return (lo+10**n*(10**n-a))%1337", "class Solution:\n     def largestPalindrome(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         \n         table = [9, 9009, 906609, 99000099, 9966006699, 999000000999, 99956644665999, 9999000000009999]\n         return table[n - 1] % 1337\n     \n         ''' Time Limited when n = 8 , maybe caused by the lowly run time of python\n         if n == 1:\n             return 9\n         maxNum = int(pow(10, n)) - 1\n         for i in reversed(range(maxNum // 10, maxNum)):\n             palindrome = self.createPalindrome(i)\n             j = maxNum\n             while j * j >= palindrome:\n                 if palindrome % j == 0:\n                     return palindrome % 1337\n                 j -= 1\n         return 0\n     \n     def createPalindrome(self, n):\n         palindrome = str(n)\n         reverse = str(n)[::-1]\n         palindrome += reverse\n         return int(palindrome)\n         '''\n", "class Solution:\n     def largestPalindrome(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         if n == 1:\n             return 9\n         for a in range(2,9*10**(n-1)):\n             upper = 10**n - a\n             lower = int(str(upper)[::-1])\n             delta = a**2 - 4*lower\n             if delta >= 0 and int(delta**0.5) == delta**0.5 and (a+delta)%2 == 0:\n                 return (upper*10**n+lower)%1337", "class Solution:\n     def largestPalindrome(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         if n == 1:\n             return 9\n         if n == 2:\n             return 987\n         for a in range(1, 9*pow(10, n-1)):\n             hi=(pow(10, n))-a\n             lo=int(str(hi)[::-1])\n             if pow(a, 2)-4*lo < 0: continue\n             if pow((pow(a, 2)-4*lo), 0.5) == int(pow((pow(a, 2)-4*lo), 0.5)):\n                 return (lo+pow(10, n)*(pow(10, n)-a))%1337\n", "class Solution:\n     def largestPalindrome(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         top = pow(10, n) - 1\n         bot = pow(10, n-1) - 1\n         if n==1: return 9\n         if n==2: return 987\n         for a in range(2, 9*10**(n-1)):\n             hi=(10**n)-a\n             lo=int(str(hi)[::-1])\n             if a**2-4*lo < 0: continue\n             if (a**2-4*lo)**.5 == int((a**2-4*lo)**.5):\n                 return (lo+10**n*(10**n-a))%1337\n"]