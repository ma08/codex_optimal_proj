["class HTMLGen:\n    def __init__(self):\n        self.a = lambda t: self.tag(\"a\", t)\n        self.b = lambda t: self.tag(\"b\", t)\n        self.p = lambda t: self.tag(\"p\", t)\n        self.body = lambda t: self.tag(\"body\", t)\n        self.div = lambda t: self.tag(\"div\", t)\n        self.span = lambda t: self.tag(\"span\", t)\n        self.title = lambda t: self.tag(\"title\", t)\n        \n    def tag(self, tag_str, content):\n        return \"<{}>{}</{}>\".format(tag_str, content, tag_str)\n        \n    def comment(self, content):\n        return \"<!--{}-->\".format(content)", "class Tag:\n\n    def __init__(self, name):\n        self.template = '<{0}>{{}}</{0}>'.format(name) if name != 'comment' else '<!--{}-->'\n      \n    __call__ = lambda self, content: self.template.format(content)\n\n\nclass HTMLGen:\n    __getattr__ = lambda self, name: Tag(name)", "class HTMLGen:\n    def __init__(self):\n        tags = ['a', 'b', 'p', 'body', 'div', 'span', 'title', 'comment']\n        for tag in tags:\n            setattr(self, tag, lambda content, tag=tag: '<'+tag+'>'+content+'</'+tag+'>' if not tag == 'comment' else '<!--'+content+'-->')"]