["def score_hand(a):\n    n = sum(11 if x == \"A\" else 10 if x in \"JQK\" else int(x) for x in a)\n    for _ in range(a.count(\"A\")):\n        if n > 21:\n            n -= 10\n    return n", "def score_hand(cards):\n    total = 0\n    number_of_aces = 0\n    for i in cards:\n        if i == \"A\":\n            total += 1\n            number_of_aces += 1\n        elif i == \"J\" or i == \"Q\" or i == \"K\":\n            total += 10\n        else:\n            total += int(i)\n    if total <= 11 and number_of_aces >= 1:\n        total += 10\n    return total", "def score_hand(cards):\n    s = sum( c=='A' or c.isdigit() and int(c) or 10 for c in cards)\n    n = cards.count('A')\n    return s + 10 * (n and s<12)", "def score_hand(li):\n    s, A = sum(int(i) if i.isdigit() else 10 for i in li if i != 'A'), li.count('A')\n    for i in range(A) : s += [1,[11,1][bool(s+11==21 and i+1!=A)]][s+11<=21]\n    return s", "def score_hand(cards):\n    aces  = cards.count(\"A\")\n    score = sum( int(card) if card.isdigit() else 10 for card in cards ) + aces\n    \n    if score > 21:\n        for _ in range(aces):\n            score -= 10\n            if score <= 21:\n                break\n    \n    return score", "def score_hand(cards):\n    aces = [i for i in cards if i == 'A']\n    cards = list(filter(lambda x: x is not 'A', cards))\n    cards.extend(aces)\n    total = 0\n    for i, card in enumerate(cards):\n        if card in ['J', 'Q', 'K']:\n            total += 10\n        elif card is 'A':\n            total += 11 if 11 <= (21 - total) and \"\".join(cards).rindex('A') == i else 1\n        else:\n            total += int(card)\n    return total", "class Jack_score(object):\n\n    def __init__(self,  cards):\n        self.A     = cards.count('A')\n        self.score = sum([int([[e,'10'][e in 'JQK'],'11'][e=='A']) for e in cards])\n    \n    def get_score(self):\n        while self.A and self.score > 21:\n                self.score  -= 10\n                self.A -= 1\n        return self.score\n        \ndef score_hand(c):\n    return Jack_score(c).get_score()", "def score_hand(cards):\n    total = 0\n    Ace = 0\n    for str in cards:\n        if str == \"1\":\n            total += 1\n        if str == \"2\":\n            total += 2\n        if str == \"3\":\n            total += 3\n        if str == \"4\":\n            total += 4\n        if str == \"5\":\n            total += 5\n        if str == \"6\":\n            total += 6\n        if str == \"7\":\n            total += 7\n        if str == \"8\":\n            total += 8\n        if str == \"9\":\n            total += 9\n        if str == \"10\" or str == \"J\" or str == \"Q\" or str == \"K\":\n            total += 10\n        if str == \"A\":\n            Ace += 1\n    \n    if Ace == 1:\n        if total < 11:\n            total += 11\n        else:\n            total += 1\n\n    if Ace > 1:\n        for i in range(Ace):\n            if total < 10:\n                total += 11\n            else:\n                total += 1\n    return total", "def score_hand(cards):\n    k = 0\n\n    for i, x in enumerate(cards):\n        if x.isdigit():\n            k += int(x)\n\n        elif x != 'A':\n            k += 10\n            \n        else:\n            k += 1\n    \n    if k+10 > 21 and 'A' in cards:\n        return k\n    else:\n        if 'A' in cards and k+10 <= 21:\n            return k+10\n    \n    return k", "def score_hand(cards):\n    summ = 0\n    count_A = 0\n    for symb in cards:\n        if symb.isdigit():\n            summ += int(symb)\n        elif symb == 'A':\n            count_A += 1\n        else:\n            summ += 10\n    for i in range(count_A):\n        summ += 11*(count_A - i) if summ + 11*(count_A - i) <= 21 else 1\n    return summ"]