["def trim(beard):\n    return [[h.replace(\"J\", \"|\") for h in b] for b in beard[:-1]] + [[\"...\"]*len(beard[0])]", "def trim(beard):\n    beard = [[\"|\" if p in \"|J\" else \"...\" for p in hair] for hair in beard]\n    beard[-1] = [\"...\" for _ in beard[-1]]\n    return beard", "def trim(a):\n    return [[\"|\" if y == \"J\" else y for y in x] for x in a[:-1]] + [[\"...\"] * len(a[0])]", "def trim(beard):\n    for row in range(0, len(beard)):\n        for hair in range(0, len(beard[row])):\n            if row != len(beard) - 1: beard[row][hair] = \"|\"\n            else: beard[row][hair] = \"...\"\n    \n    return beard", "def trim(beard):\n    for i,a in enumerate(beard):\n        if i != len(beard)-1:\n            beard[i] = ['|' if v in 'J|' else v for v in a]\n        else:\n            beard[i] = ['...' for v in a]\n    return beard", "def trim(beard):\n    return [list(map(lambda x:x.replace(\"J\",\"|\"),arr)) for arr in beard[:-1]]+[[\"...\"]*len(beard[0])]", "def trim(beard):\n    width = len(beard[0])\n    beard = [[\"|\" if cell in \"|J\" else \"...\" for cell in row] for row in beard[:-1]]\n    beard.append([\"...\"] * width)\n    return beard", "def trim(beard):\n    return [[c.replace('J','|') for c in row] for row in beard[:-1]] + [['...'] * len(beard[-1])]\n", "H = {'J':'|', '|':'|', '...':'...'}\n\ntrim = lambda b: [[H[h] for h in m] for m in b[:-1]] \\\n                            + [['...'] * len(b[-1])]", "def trim(beard):\n    return [['|' if j in ['|','J'] else j for j in i] for i in beard[:-1]] + [[\"...\"]*len(beard[-1])]"]