["from math import log\n\ndef alex_mistakes(n, time):\n    return int(log((time - n * 6) / 5 +1, 2))\n", "def alex_mistakes(katas, time):\n    mistakes = 0\n    pushup_time = 5\n    time_left = time - katas * 6\n    \n    while time_left >= pushup_time:\n        time_left -= pushup_time\n        pushup_time *= 2\n        mistakes += 1\n    return mistakes", "from math import log\n\nMINUTES_PER_KATA = 6.0\nPUSHUPS_BASE_TIME = 5.0\n\ndef alex_mistakes(n_katas, time_limit):\n    return int(log((time_limit - MINUTES_PER_KATA * n_katas) / PUSHUPS_BASE_TIME + 1, 2))", "from math import log\n\ndef alex_mistakes(katas, limit):\n    return int(log((limit - katas * 6 + 5) / 5, 2))\n", "def alex_mistakes(number_of_katas, time_limit):\n    req_time = 5\n    sets = 0\n    remaining = time_limit - number_of_katas * 6\n    \n    while remaining>=req_time:\n        remaining-=req_time\n        req_time*=2\n        sets+=1\n        \n    return sets", "def alex_mistakes(n, l):\n    mistakes = 0\n    push_time = 0\n    while push_time < l - n * 6:\n        push_time += 5*2**mistakes\n        if push_time > l - n * 6: return mistakes\n        mistakes += 1\n    else: \n        return mistakes", "import math\n\ndef alex_mistakes(number_of_katas, time_limit):\n    return int(math.log(1 + (time_limit - number_of_katas * 6) / 5.0, 2))", "import math\n\ndef alex_mistakes(number_of_katas, time_limit):\n    return int(math.log((time_limit - number_of_katas * 6.0) / 5 + 1, 2))", "def alex_mistakes(number_of_katas, time_limit):\n    left = (time_limit - 6*number_of_katas) // 5\n    bits = left.bit_length()\n    if left + 1 == 1<<bits: return bits\n    return bits - 1"]