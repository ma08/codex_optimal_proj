["\"\"\"\nh = vt-0.5gt^2\nlet h = 0 [that is, when the ball has returned to the ground]\n=> 0 = vt-0.5gt^2\n=> 0.5gt^2 = vt\n=> 0.5gt = v\n=> t = 2v/g - the total time the ball is in the air.\n=> t at max height  = v/g\n\"\"\"\n\ndef max_ball(v0):\n    return round(10*v0/9.81/3.6)", "def max_ball(v0):\n    return round(10*v0/9.81/3.6)", "def max_ball(v):\n    return round(v / 3.5316)\n    \n    \n", "def max_ball(v0, g=9.81):\n    v = v0 / 3.6\n    prev = 0\n    for i in range(1000):\n        t = i * 0.1\n        h = v*t - 0.5*g*t*t\n        if h < prev:\n            return i - 1\n        prev = h", "def max_ball(v0):\n    return round( v0/3.6/9.81*10 )", "def max_ball(v0):\n    # acceleration\n    g = 9.81 \n    # height from ground, u is time in s, v speed in m/s\n    def h(u):\n        return v*u - 0.5*g*u*u\n    # from km/h to m/s\n    v = v0 * 1000 / 3600.0\n    # in t = v/g the derivative is 0, the height is max\n    t = v / g\n    # record done every 0.1 s; tm is in tenth of second\n    tm = int(t*10)\n    # device max is before (<=) or after tm (>)\n    h1 = h( tm/10.0 )\n    h2 = h( (tm+1)/10.0 )\n    mx = max( h1, h2 )\n    # is the recorded max before or after the theoric max\n    if (mx == h( tm/10.0 )):\n        return tm\n    else:\n        return tm+1", "max_ball=lambda v0:round(v0*1000/360/9.81)", "def max_ball(v0):\n    v = v0 * (1000/3600)\n    g = 9.81\n    t = 0\n    record = []\n    while v * t - 0.5 * g * t * t >= 0:\n        h = v * t - 0.5 * g * t * t\n        record.append(h)\n        t += 0.1\n    return (record.index(max(record)))", "from itertools import count\ndef max_ball(v0):\n    g = 9.81\n    c = count(0, 0.1)\n    hh = -0.1\n    while True:\n        t = next(c)\n        h = v0*1000/3600*t - 0.5*g*t*t\n        if h-hh>0:\n            hh = h\n        else:\n            return int(round(t*10, 2))-1\n", "def max_ball(v0):\n    return round(10 * (v0 / 3.6) / 9.81)"]