["def two_decimal_places(number):\n    \n    return int (number * 100) / 100.0", "from math import trunc\n\n\ndef two_decimal_places(number):\n    factor = float(10 ** 2)\n    return trunc(number * factor) / factor\n", "def two_decimal_places(number):\n    number = str(number)\n    return float(number[:number.index('.') + 3])", "import math\n\n\ndef two_decimal_places(number):\n    return math.trunc(number * 100.0) / 100.0\n", "def two_decimal_places(number):\n    a = int(number*100)\n    b = float(a)\n    c = b/100\n    return c", "from decimal import *\n\ndef two_decimal_places(number):\n    return float(Decimal(str(number)).quantize(Decimal('.01'), rounding=ROUND_DOWN))", "def two_decimal_places(number):\n    return int(100*number)/100.0", "from math import floor, ceil\ndef two_decimal_places(number):\n    if number >= 0:\n        return(floor(number*100)/100)\n    else:\n        return(ceil(number*100)/100)", "import math\n\ndef two_decimal_places(number):\n    if number >= 0:\n        return math.floor(number * 100)/100\n    else:\n        return math.ceil(number * 100)/100", "def two_decimal_places(number):\n    string = str(number)\n    n = string.find('.')\n    return float(string[0:n+3])"]