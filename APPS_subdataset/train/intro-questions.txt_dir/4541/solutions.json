["def array_operations(a, n):\n  li = []\n  for i in range(n):\n        m = max(a)\n        a = [m-i for i in a] \n        if a in li:\n            if not n & 1 : return li[-1]\n            return a\n        li.append(a)\n  return a", "def array_operations(a, k):\n    for _ in range(2 + (k & 1)):\n        m = max(a)\n        a = [m - n for n in a]\n    return a", "def array_operations(a, k):\n    m = max(a)\n    a = [m-x for x in a]\n    for i in range((k-1) % 2):\n        m = max(a)\n        a = [m-x for x in a]\n    return a", "def transform(a):\n    m = max(a)\n    return [m - element for element in a]\n\ndef array_operations(a, k):\n  # After the first iteration, the the array alternates between two patterns\n  return transform(a) if k % 2 == 1 else transform(transform(a))\n", "def array_operations(a, k):\n    b = [max(a)-i for i in a]\n    c = [max(b)-i for i in b]\n    return b if k%2 else c if k>0 else a", "def array_operations(a, k):\n    if k <= 0:\n        return a\n    elif k % 2:\n        m = max(a)\n        return [m - x for x in a]\n    else:\n        m = min(a)\n        return [x - m for x in a]", "def array_operations(A,k,p=0,q=0):\n    D,E={},{}\n    for i in range(k):\n        s=str(A)\n        if s in D:\n            A=D[s]\n            p=i\n            q=E[s]\n            break\n        m=max(A)\n        A=[(m-a)for a in A]\n        D[s]=A\n        E[s]=i\n    if p!=q:\n        for i in range(q+(k-q)%(p-q)):A=D[str(A)]\n    return A", "def array_operations(a, k):\n    mx, mi = max(a), min(a)\n    t = 0\n    for i in range(k):\n        if k%2 == 0:\n            t = t + mx if i%2 != 0 else t-mx\n        else:\n            t = t - mx if i%2 != 0 else t+mx\n        mx, mi = mx-mi, mx-mx       \n    return [t-i for i in a] if k%2 != 0 else [t+i for i in a] "]