["def group_groceries(groceries):\n    categories = {\"fruit\": [], \"meat\": [], \"other\": [], \"vegetable\": []}\n    for entry in groceries.split(\",\"):\n        category, item = entry.split(\"_\")\n        categories[category if category in categories else \"other\"].append(item)\n    return \"\\n\".join([f\"{category}:{','.join(sorted(items))}\" for category, items in categories.items()])", "def group_groceries(groceries):\n    categories = { 'fruit':[], 'meat':[], 'other':[], 'vegetable':[] }\n    for product in groceries.split(','):\n        key, value = product.split('_')\n        categories[key if key in categories else 'other'].append(value)\n    return '\\n'.join('{}:{}'.format(cat, ','.join(sorted(items))) for cat, items in categories.items())", "\ndef group_groceries(groceries):\n    \n    groceries = groceries.split(',')\n    carne = []\n    fruta = []\n    outro = []\n    vegetal = []\n    for item in groceries:\n        a = item.split('_')\n        if a[0] == 'fruit':\n            fruta.append(a[1])\n        elif a[0] == 'meat':\n            carne.append(a[1])\n        elif a[0] == 'vegetable':\n            vegetal.append(a[1])\n        else:\n            outro.append(a[1])\n    \n    b = '''fruit:{}\nmeat:{}\nother:{}\nvegetable:{}'''.format(','.join(sorted(fruta)),','.join(sorted(carne)),','.join(sorted(outro)),','.join(sorted(vegetal)))\n\n    return b\n", "def group_groceries(groceries, categories='fruit meat other vegetable'.split()):\n    groups = {category: [] for category in categories}\n    for product in groceries.split(','):\n        category, item = product.split('_')\n        groups.get(category, groups['other']).append(item)\n    return '\\n'.join(f'{category}:{\",\".join(sorted(products))}'\n                     for category, products in groups.items())", "def group_groceries(groceries):\n    dict={\"fruit\":[], \"meat\":[], \"other\":[], \"vegetable\":[]}\n    for i in groceries.split(\",\"):\n        items=i.split(\"_\")\n        if not items[0] in [\"fruit\", \"meat\", \"vegetable\"]:\n            dict[\"other\"].append(items[1])\n        else:\n            dict[items[0]].append(items[1])\n    temp={k: \",\".join(sorted(v)) for k,v in dict.items()}\n    return \"\\n\".join(f\"{i}:{j}\" for i,j in temp.items())", "def group_groceries(groce):\n    box = {'fruit':[], 'meat':[], 'other':[], 'vegetable':[]}\n    groce = [e.split('_') for e in groce.split(',')]\n    for k,v in groce: box.get(k, box['other']).append(v)\n    return '\\n'.join( f'{k}:{\",\".join(sorted(v))}' for k,v in box.items())", "CATEGORIES = ['fruit', 'meat', 'other', 'vegetable']\nKNOWN = {c: c for c in CATEGORIES if c != 'other'}\n\ndef group_groceries(groceries):\n    d = {key: [] for key in CATEGORIES}\n    for item in groceries.split(','):\n        category, name = item.split('_')\n        d[KNOWN.get(category, 'other')].append(name)\n    return '\\n'.join(f'{c}:{\",\".join(sorted(d[c]))}' for c in CATEGORIES)", "def group_groceries(groceries):\n    res = {\"fruit\":[], \"meat\":[], \"other\":[], \"vegetable\":[]}\n    for item in groceries.split(','):\n        category, name = item.split('_')\n        res.get(category, res[\"other\"]).append(name)\n    return '\\n'.join(f\"{k}:{','.join(sorted(v))}\" for k,v in res.items())", "def group_groceries(groceries):\n    groups = [\"fruit\", \"meat\", \"other\", \"vegetable\"]\n    d = {}\n    \n    for item in groceries.split(','):\n        g, i = item.split('_')\n        \n        g = g if g in groups else \"other\"\n        try:\n            d[g].append(i)\n        except:\n            d[g] = [i]\n    final_string = []\n    for g in groups:\n        try:\n            group_string = g + \":\" + ','.join(sorted(d[g]))\n        except:\n            group_string = g + \":\"\n        final_string.append(group_string)\n    return '\\n'.join(final_string)", "def group_groceries(s):\n    d = {x: [] for x in \"fruit meat other vegetable\".split()}\n    for x in s.split(\",\"):\n        a, b = x.split(\"_\")\n        d[a if a in d else \"other\"].append(b)\n    return \"\\n\".join(f\"{x}:{','.join(sorted(y))}\" for x, y in d.items())"]