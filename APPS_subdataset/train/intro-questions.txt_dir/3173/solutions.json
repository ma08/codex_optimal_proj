["def create_array(n):\n    res=[]\n    i=1\n    while i<=n:\n        res+=[i]\n        i+= 1\n    return res", "def create_array(n):\n    return [i for i in range(1,n+1)]", "create_array = lambda n: list(range(1,n+1))", "\ndef create_array(n):\n    res = []\n    i = 1\n    while i <= n:\n        res.append(i)\n        i += 1\n    return res", "def create_array(n):\n    res=[]\n    for a in range(0,n):\n        res.append(a+1)\n    return res", "def create_array(n):\n    return [i + 1 for i in range(n)]", "def create_array(n):\n    return list(range(1,n + 1))", "def create_array(n):\n    res=[]\n    i=1\n    while i<=n: \n      res +=[i]\n      i = i+1\n    return res", "def create_array(n):\n    lst1 = list(range(n+1))\n    return lst1[1:]", "from typing import List\n\ndef create_array(n: int) -> List[int]:\n    \"\"\" Fix the unfinished loop. \"\"\"\n    result = []\n    ix = 1\n    while ix <= n:\n        result.append(ix)\n        ix += 1\n    return result", "def create_array(n):\n    res=[]\n    i=1\n    while i <= n:\n        res.append(i)\n        i += 1\n    return res\n\nprint(create_array(5))", "def create_array(n):\n    res=[]\n    i=1\n    while i<=n: \n        res+=[i]\n        i = i + 1\n        \n    return res\n\nprint(create_array(4))", "def create_array(n):\n    res=[]\n    i=1\n    while i<=n: \n        res+=[i]\n        return res\n        \n        \ndef create_array(n):\n    res = []\n    i = 1\n    while i <= n:\n        res.append(i)\n        i += 1\n    return res", "def create_array(n):\n    res= list()\n    for i in range(1,n+1,1):\n        res.append(i)\n        \n    return res", "def create_array(n):\n    '''array add nuber to list'''\n    res = []\n    i = 1\n    while i <= n:\n        res.append(i)\n        i+=1\n    return res\n    \n", "def create_array(n):\n    res=[]\n    i=1\n    while 1<=n: \n        res+=[i]\n        i = i + 1\n        n = n - 1\n    return res", "def create_array(some_number):\n    result = []\n    counter = 1\n    while counter <= some_number: \n        result.append(counter)\n        counter += 1\n    return result", "def create_array(n):\n    mylist=[]\n    i=0\n    \n    while i<n: \n       i += 1\n       mylist.append(i)\n    return mylist", "def create_array(n):\n    \n# Original code\n#    res=[]\n#    i=1\n#    while i<=n: res+=[i]\n#    return res\n    \n    res=[]\n    i=1\n    while i<=n:\n        #print(i)\n        res.append(i)\n        i += 1\n    return res", "def create_array(n):\n    res=[]\n    i=1\n    while i != n + 1: \n        res.append(i)\n        i += 1\n        \n        \n    return res\n", "def create_array(n):\n    result = [i for i in range(1, n+1)]\n    return result", "def create_array(n):\n     return [int(s)for s in range(n+1)[1:]]", "def create_array(n):\n    res=[]\n    i=1\n    while i <= n: \n        print (res)\n        res.append(i)\n        i += 1\n    return (res)", "def create_array(n):\n    a_list = list(range(1, n + 1 ))\n    return a_list", "def create_array(n):\n    res=[]\n    i=1\n    while i<=n: \n        res+=[i]\n        i=i+1\n    return res\nprint(create_array(5))", "def create_array(n):\n    res=[]\n    i=1\n    while i<n+1: \n        res+=[i]\n        i+=1\n    return res", "def create_array(n):\n    res=[]\n    i=1\n    while len(res)!=n: \n        res.append(i)\n        i += 1\n    return res", "def create_array(n):\n    res=[]\n    i=1\n    while i<=n:\n        res.append(n)\n        n=n-i\n    return res[::-1]", "create_array = lambda x: list(range(1,x+1))\n", "def create_array(n):\n    res=[]\n    i=1\n    while i<=n: \n        return list(range(1,n+1))", "def create_array(n):\n    count_list = [i+1 for i in range(n)]\n    return count_list\n", "def create_array(n):\n    # Define the data structures + variables\n    array_list = []\n    i = 1\n    \n    # append value to new list\n    while i <= n: \n        array_list.append(i)\n        i += 1\n        \n    return array_list", "def create_array(n):\n    i,res=1,[]\n    while i<=n:\n        res.append(i)\n        i=i+1\n    return res", "def create_array(n):\n    res=[1]\n    i=2\n    while max(res) != n: \n        res.append(i)\n        i +=1\n    return res", "def create_array(n):\n    count = 0\n    new_list = list()\n    while(count < n):\n        new_list.append(count + 1)\n        count += 1\n    return new_list", "def create_array(n):\n    i = 0\n    arr = []\n    while i <= n -1:\n        i += 1\n        arr.append(i)\n    return arr\n", "def create_array(n):\n    a = []\n    i = 1\n    while i <= n:\n        a.append(i)\n        i += 1\n    return a", "def create_array(n):\n  i=1\n  res=[]\n  for k in range (1,n+1):\n    res+=[k]\n  return res\n  \nprint(create_array(5))", "def create_array(n):\n    return [*range(1,n+1)]", "def create_array(n):\n    res=[]\n    i=1\n    while i<=n: \n      res+=[i]\n      print(res)\n      i += 1\n    return res", "def create_array(n):\n    r=[]\n    i=1\n    while i<=n:\n        r+=[i]\n        i+=1\n    return r", "def create_array(n):\n    res = []\n    i = 0\n    for i in range (1, n+1): \n        res = res + [i]\n    return res   ", "def create_array(n):\n    \"\"\"\n    return list containing 1 to n int\n    \"\"\"\n    res=[]\n    i=1\n    while i<=n: \n        res+=[i]\n        i = i + 1\n    return res", "def create_array(n):\n    res=[]\n    for e in range(1,n+1):\n        res.append(e)\n    return res", "def create_array(n):\n    li = []\n    for k in range(1,n+1):\n        li.append(k)\n    return li", "def create_array(n):\n    res = []\n    i = 0\n    while i <= n: \n        i += 1\n        res.append(i)\n        if i == n:\n            return res\n        \nr = create_array(1)\nprint(r)", "def create_array(n):\n    print(n)\n    return [i for i in range(1, n+1)]", "def create_array(n):\n    r = range(1, n+1)\n    b = list(r)\n    return b", "def create_array(n):\n    result = []\n    count = 1\n    for x in range(0, n):\n        result.append(count)\n        count += 1\n    return result", "def create_array(n):\n    res=[]\n    i=1\n    while i<=n:\n        res.append(i)\n        if i <= n:\n            i += 1\n    return res\n", "def create_array(n):\n    res = []\n    i = 1\n    while i <= n:\n        res += [i]\n        i = i + 1\n    print(res)\n    return res", "def create_array(n):\n    res=[]\n    i=1\n    while i<=n: \n        res+=[i]\n        i +=1\n    return res\n    # return [i for i in range(1,n+1)]  \n", "def create_array(n):\n    res=[]\n    i=1\n    for x in range(1,n+1):\n        if i<=n: res+=[x]\n    return res", "def create_array(number):\n    res=[]\n    i=1\n    while number>=i: res+=[i]; i+=1\n    return res", "def create_array(n):\n    res = []\n    i = 1\n    while i <= n: \n      for i in range(i, n+1):\n          res += [i]\n      if len(res) == n:\n        break\n    return res", "def create_array(n):\n    res=[1+i for i in range(n)];\n    return res", "def create_array(n):\n    res=[]\n    i=1\n    while i<=n: \n        res+=[i] #res.append(i)\n        i+= 1\n    return res", "def create_array(n):\n    res=[]\n    i=1\n    for i in range(1,n+1):\n        if i<=n: res+=[i]\n    return res", "def create_array(n):\n    lista = []\n    for i in range(n):\n        lista.append(n)\n        n = n - 1\n    lista.reverse()\n    return lista\n    \n", "def create_array(n):\n    return [idx + 1 for idx in range(n)]", "def create_array(n):\n    s = []\n    for i in range(1,n+1):\n        s.append(i)\n    return s", "create_array = lambda n:[i for i in range(1, n + 1)]", "def create_array(n):\n    res=[]\n    i=1\n    while i<=n: \n        res+=[i]\n        #print(res)\n        i=i+1\n    return res", "def create_array(n):\n    \"\"\"\n    res = []\n    i = 1\n    while i <= n: \n        res += [i]\n        i += 1    \n    return res\n    \"\"\"\n    \n    return [i for i in range(1, n+1)]", "def create_array(n):\n    res=[]\n    i = 0\n    while len(res) < n:\n        i += 1\n        res.append(i)\n    return res", "def create_array(n):\n    res = []\n    i = 1\n    while n > len(res):\n        res.append(i)\n        i += 1\n    return res\nprint(create_array(5))", "def create_array(n):\n    new_array = []\n    num = 0\n    for el in range(0, n):\n        num += 1\n        new_array.append(num)\n    return new_array", "def create_array(n):\n    return [n + 1 for n in range(n)]", "def create_array(n):\n    res=[]\n    i = 0\n    while i<=n:\n        for i in range(1,n+1):\n            res.append(i)\n        return list(res)", "create_array=lambda n: [*range(1,n+1)]", "def create_array(n):\n    a=range(1,n+1)\n    tab=[]\n    for x in a:\n        tab.append(x)\n    \n    return tab", "def create_array(n):\n    res=[]\n    i=0\n    while i!=n: \n      i=i+1\n      res.append(i)\n    return res", "def create_array(num):\n\n    result = []\n    count = 1\n\n    while count <= num:\n        result.append(count)\n        count += 1\n\n    return result", "def create_array(n):\n    res=[]\n    i=0\n    for element in range(1, n+1):\n        res.append(element)\n    return res", "def create_array(n):\n    res=[]                  #initialize an empty list\n    i=1                     #set i to equal 1\n    while i <= n:           #initialize while loop  \n        res += [i]          #add i to empty list\n        i += 1              #incriment i by 1          \n    return res              #return res as populated list\n", "def create_array(n):\n    return list([x+1 for x in range(n)])", "def create_array(n):\n    res, i = [], 1\n    while i <= n: res += [i]; i += 1\n    return res", "def create_array(n):\n    res=[]\n    i=1\n    while i< n:\n        res.append(i)\n        i += 1\n    res.append(i)\n    return res", "def create_array(n):\n    g=([])\n    for x in range(n):\n        g.append(x)\n    \n    g.append(n)\n    return g[1:]\n", "def create_array(n):\n    i=1\n    res=[1]\n    while len(res)<n: \n        i += 1\n        res.append(i)\n    return res", "def create_array(n):\n    return [i for i in range(1, 1 + n)]", "def create_array(n):\n  a  = n+1\n  arr = [i for i in range(1,a)]\n  return arr", "def create_array(n):\n    res=[]\n    i=1\n    while i<=n: \n        res.append(i)\n        i+=1\n    return list(res)", "def create_array(n):\n    return list(i+1 for i in range(n))", "def create_array(n):\n    return [each+1 for each in range(n)]", "def create_array(n):\n    a=[]\n    for i in range(1,n+1):\n        a.append(i)\n    return(a)", "def create_array(n):\n    res=[]\n    i=1\n    if i<=n:\n        for i in range(n):\n            res = res + [i+1]\n    return res\n", "def create_array(n):\n    res=[]\n    i=1\n    while i<=n: \n        res+=[i]\n        i+=1\n    return res\n#Completed by Ammar on 3/9/2019 at 02:13AM.\n", "def create_array(n):\n    return [e for e in range(1,n+1)]", "#def create_array(n):\n#    res=[]\n#    i=1\n#    while i<=n: res+=[i]\n#    return res\n\ndef create_array(n):\n    res = []\n    i=1\n    while i<=n:\n        res+=[i]\n        i +=1\n    return res\n        \n", "def create_array(n):\n    r, i = [], 1\n    while i <= n:\n        r += [i]\n        i += 1\n    return r", "def create_array(n):\n    res=[]\n    i=1\n    while i<=n:\n        print(i)\n        res.append(i)\n        i+=1\n    return res", "def create_array(n = 0):\n  res = []\n  \n  for i in range(1, n + 1):\n    res += [i]\n  \n  return res\n", "def create_array(n):\n    res=[]\n    i=1\n    while i<=n: \n        res+=[i] \n        i+=1\n    return res  #I solved this Kata on  7/29/2019  04:16 AM...#Hussam'sCodingDiary", "def create_array(n):\n    res=[]\n    i=0\n    while i<n: \n        i = i + 1 \n        res +=[i]\n    return res", "def create_array(n):\n    return [num + 1 for num in range(n)]", "def create_array(n):\n    res=[]\n    i=0\n    while i<=n: \n        i += 1\n        res+=[i]\n        if (len(res) == n):\n            break\n    return res", "def create_array(n):\n    return list(range(1,int(n)+1))", "def create_array(n):\n    res=[]\n    i=1\n    while i<=n: \n        i = i+1\n        res+=[i-1]\n    return res", "def create_array(n):\n    print(n)\n    res = []\n    #res=[]\n    i=1\n    while i<=n:\n        res+=[i]\n        i +=1\n    return res", "def create_array(n):\n    res=[x+1 for x in range(n)]\n    return res", "def create_array(n):\n    \"\"\"\n    return a array with n elements\n    :param n: array length\n    :return:\n    \"\"\"\n    ret = []\n    for i in range(n):\n        ret.append(i+1)\n    return ret", "def create_array(num):\n    array = []\n    i = 1\n    while num >= i:\n        array.append(i)\n        i += 1\n    return array\n    \nprint(create_array(5))    ", "def create_array(n):\n    arr = []\n    for x in range(n):\n        arr.append(x+1)\n    return arr", "def create_array(n):\n    res=[]\n    i=0\n    while i<n:\n        res.append(i+1)\n        i=i+1\n    return res", "def create_array(n):\n    res=[]\n    i=1\n    for i in range(i,n+1):\n        res.append(i)\n    return res", "#Unfinished Loop - Bug Fixing #1\ndef create_array(n):\n    res=[]\n    i=1\n    while i<=n: \n        res+=[i]\n        i = i+1\n    return res", "def create_array(n):\n    res=[]\n    while n>=1:\n        res.append(str(n))\n        n-=1\n    k=[int(i) for i in res]\n    k.sort()\n    return k", "def create_array(n):\n    res=[]\n    i=1\n    for x in range(n):\n        res.append(i)\n        i += 1\n        \n    return res"]