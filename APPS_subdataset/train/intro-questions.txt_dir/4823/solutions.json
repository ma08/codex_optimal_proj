["from math import ceil\n\nnumbers = {0:\"zero\", 1: \"one\", 2: \"two\", 3: \"three\", 4: \"four\", 5: \"five\", 6: \"six\", 7: \"seven\", 8: \"eight\", \n9: \"nine\", 10: \"ten\", 11:\"eleven\", 12: \"twelve\", 13: \"thirteen\", 14: \"fourteen\", 15: \"fifteen\", \n16:\"sixteen\", 17:\"seventeen\", 18: \"eighteen\", 19: \"nineteen\", 20: \"twenty\"}\n\ndef wallpaper(l, w, h):\n    return \"zero\" if w*l==0 else numbers[ceil((2*l+2*w) * h * 1.15 / 5.2)]", "from math import ceil\ndef wallpaper(l, w, h):\n    numarr = ['zero','one','two','three','four','five','six','seven','eight','nine', 'ten', 'eleven',\n              'twelve','thirteen','fourteen','fifteen','sixteen', 'seventeen','eighteen','nineteen', 'twenty']\n    return numarr[ceil(l and w and ((l + w) * h * 2 * 1.15) / 5.2)]\n", "i=__import__;wallpaper=lambda l,w,h,n=i(\"requests\").get(\"https://num-words.com/in-words/0-9999/0-49/\").text:[e.get_text() for e in i(\"bs4\").BeautifulSoup(n)('b')][i(\"math\").ceil((((l+w)*2*h)/5.2) * 1.15)*3*bool(w*h*l)].lower()", "def wallpaper(l, w, h):\n\n    result = {\n        \n        '1': 'one',\n        '2': 'two',\n        '3': 'three',\n        '4': 'four',\n        '5': 'five',\n        '6': 'six',\n        '7': 'seven',\n        '8': 'eight',\n        '9': 'nine',\n        '10': 'ten',\n        '11': 'eleven',\n        '12': 'twelve',\n        '13': 'thirteen',\n        '14': 'fourteen',\n        '15': 'fifteen',\n        '16': 'sixteen',\n        '17': 'seventeen',\n        '18': 'eighteen',\n        '19': 'nineteen',\n        '20': 'twenty',\n    }\n\n    wall_area = 1.15 * ((2*l*h) + (2*w*h))\n    wallpaper = 0.52 * 10\n    to_buy = wall_area / wallpaper\n\n    for k,v in result.items():\n        if l == 0 or w == 0 or h == 0:\n            return 'zero'\n        elif int(k) == round(to_buy + 0.5):\n            return v", "from math import ceil\n\nL = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"ten\",\n     \"eleven\", \"twelve\", \"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\", \"twenty\"]\n\ndef wallpaper(l, w, h):\n    return L[0 if not (l and w) else ceil(2*h*(l+w)*1.15/10/0.52)]", "def wallpaper(l, w, h):\n  dict = ['zero','one','two','three','four','five','six','seven','eight','nine','ten','eleven','twelve','thirteen','fourteen','fifteen','sixteen','seventeen','eighteen','nineteen','twenty'];\n  rolls = int(((l + w) * 2) * h / 0.52 / 10 * 1.15) + 1 if (l and w and h) else 0;\n  return dict[rolls];", "import math\ndef wallpaper(l, w, h):\n# assuming to cover the wall with wallpaper vertically roll by roll, so it's likely the roll strip will be partially used\n    # number of rolls needed\n    if l == 0 or w == 0 or h == 0: \n        return 'zero'\n    r = math.ceil( (2*(l+w)*100)*h*100*1.15 / (52*1000) )\n    number_dictionary = {1:'one',2:'two',3:'three',4:'four',5:'five',6:'six',7:'seven',8:'eight',9:'nine',10:'ten',11:'eleven',12:'twelve',13:'thirteen',14:'fourteen',15:'fifteen',16:'sixteen',17:'seventeen',18:'eighteen',19:'nineteen',20:'twenty'}\n    return number_dictionary[r]\n", "import math\ndef wallpaper(l, w, h):\n    numbers = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"ten\",\"eleven\", \"twelve\", \"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\", \"twenty\"]\n    if(l==0 or w==0 or h==0):\n        return numbers[0]\n    return numbers[math.ceil((l+w)*h*2.0*10.0*1.15/52.0)]", "ANS = {i:v for i,v in enumerate((\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"ten\", \"eleven\", \"twelve\", \"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\", \"twenty\"))}\n\ndef wallpaper(l, w, h):\n    n,r = divmod( 2*(l+w)/0.52 * h * 1.15, 10)\n    return ANS[ l and w and h and int(n) + bool(r) ]", "def wallpaper(l, w, h):\n    from math import ceil\n    \n    num_words_dic = {1: 'one', 2: 'two', 3: 'three', 4: 'four', 5: 'five', \\\n            6: 'six', 7: 'seven', 8: 'eight', 9: 'nine', 10: 'ten', \\\n            11: 'eleven', 12: 'twelve', 13: 'thirteen', 14: 'fourteen', \\\n            15: 'fifteen', 16: 'sixteen', 17: 'seventeen', \\\n            18: 'eighteen', 19: 'nineteen', 20: 'twenty'}\n    S_wall = (l + w) * 2 * h\n    S_paper = 5.2 \n    \n    return \"zero\" if l*w*h == 0 else num_words_dic[ceil(S_wall / S_paper * 1.15)]"]