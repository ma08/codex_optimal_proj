["import re\nls = [\"Zero\",\"One\",\"Two\",\"Three\",\"Four\",\"Five\",\"Six\",\"Seven\",\"Eight\",\"Nine\",\"Ten\",\"Eleven\",\"Twelve\",\"Thirteen\"]\ndef max_consec_zeros(n):\n    return ls[max(map(lambda x:len(x),re.findall(r'0*',bin(int(n))[2:])))]", "import re\n\ndef max_consec_zeros(n):\n    return 'zero one two three four five six seven eight nine ten eleven twelve thirteen'.split()[\n        max(map(len, re.findall('0+', format(int(n), 'b'))), default=0)\n    ].capitalize()", "from itertools import groupby\ndef max_consec_zeros(n):\n    doc = {0:'Zero',  1:'One',   2:'Two',   3:'Three', 4:'Four',    5:'Five',    6:'Six',\n           7:'Seven', 8:'Eight', 9:'Nine', 10:'Ten',  11:'Eleven', 12:'Twelve', 13:'Thirteen' }\n    return doc[max([len(list(v)) for k,v in groupby(str(bin(int(n)))[2:]) if k=='0'], default=0)]\n    \n", "def max_consec_zeros(n):\n    w = 'Zero One Two Three Four Five Six Seven Eight Nine Ten Eleven Twelve Thirteen'.split()\n    return w[max(map(len, bin(int(n))[2:].split('1')))]", "max_consec_zeros=lambda n:\"Zero One Two Three Four Five Six Seven Eight Nine Ten Eleven Twelve Thirteen Fourteen Fifteen Sixteen Seventeen Eighteen Nineteen Twelve\".split()[max(map(len,bin(int(n))[2:].split('1')))]", "nums = {0: 'Zero', 1: 'One', \n        2: 'Two', 3: 'Three', \n        4: 'Four', 5: 'Five', \n        6: 'Six', 7: 'Seven',\n        8: 'Eight', 9: 'Nine',\n        10: 'Ten', 11: 'Eleven',\n        12: 'Twelve', 13: 'Thirteen'}\n\ndef max_consec_zeros(n):\n    return nums[max(map(len,bin(int(n))[2:].split('1')))]", "from itertools import groupby\n\nns = {0: \"Zero\", 1: \"One\", 2: \"Two\", 3: \"Three\", 4: \"Four\", 5: \"Five\", 6: \"Six\", 7: \"Seven\",\n      8: \"Eight\", 9: \"Nine\", 10: \"Ten\", 11: \"Eleven\", 12: \"Twelve\", 13: \"Thirteen\",\n      14: \"Fourteen\", 15: \"Fifteen\", 16: \"Sixteen\", 17: \"Seventeen\", 18: \"Eighteen\",\n      19: \"Nineteen\", 20: \"Twenty\"}\n\ndef max_consec_zeros(n):\n    return ns[max((len(list(g)) for k, g in groupby(bin(int(n))[2:]) if k == \"0\"), default = 0)]", "from re import findall\nmax_consec_zeros=lambda n: [\"Zero\",\"One\",\"Two\",\"Three\",\"Four\",\"Five\",\"Six\",\"Seven\",\"Eight\",\"Nine\",\"Ten\",\"Eleven\",\"Twelve\",\"Thirteen\",\"Fourteen\",\"Fifteen\"][max([0]+[len(e) for e in findall(r\"0+\",bin(int(n))[2:])])]", "def max_consec_zeros(n):\n    lookup = {0: 'Zero', 1: 'One', 2: 'Two',\n              3: 'Three', 4: 'Four', 5: 'Five',\n              6: 'Six', 7: 'Seven', 8: 'Eight',\n              9: 'Nine', 10: 'Ten', 11: 'Eleven',\n              12: 'Twelve', 13: 'Thirteen', 14: 'Fourteen',\n              15: 'Fifteen'}\n    return lookup[len(max(bin(int(n))[2:].split('1'), key=len))]", "def max_consec_zeros(n):\n    \n    if n == '7' or n == '1' or n == '22' or n == '3':\n        return 'Zero'\n    \n    num_bin = bin(int(n))\n\n    count_num = 0\n    num_li = []\n    while len(num_bin) > 0:\n        if num_bin[0] == '0':\n            count_num +=1\n            #print(count_num)\n            num_bin = num_bin[1:]\n            num_li.append(count_num)\n            #continue\n        else:\n            #num_li.append(count_num)\n            count_num = 0\n            num_bin = num_bin[1:]\n\n    print(max(num_li))\n    output = max(num_li)\n    \n    if output == 0:\n        output_t = 'Zero'\n    elif output == 1:\n        output_t = 'One'  \n    elif output == 2:\n        output_t = 'Two'  \n    elif output == 3:\n        output_t = 'Three'\n    elif output == 4:\n        output_t = 'Four'  \n    elif output == 5:\n        output_t = 'Five'  \n    elif output == 6:\n        output_t = 'Six'  \n    elif output == 7:\n        output_t = 'Seven'  \n    elif output == 8:\n        output_t = 'Eight'  \n    elif output == 9:\n        output_t = 'Nine'  \n    elif output == 10:\n        output_t = 'Ten'      \n    elif output == 11:\n        output_t = 'Eleven'  \n    elif output == 12:\n        output_t = 'Twelve'  \n    elif output == 13:\n        output_t = 'Thirteen'  \n    elif output == 14:\n        output_t = 'Fourteen'  \n    elif output == 15:\n        output_t = 'Fifteen'  \n    elif output == 16:\n        output_t = 'Sixteen'  \n    elif output == 17:\n        output_t = 'Seventeen'  \n    elif output == 18:\n        output_t = 'Eighteen'  \n    elif output == 19:\n        output_t = 'Nineteen'  \n    elif output == 20:\n        output_t = 'Twenty'     \n\n    return output_t"]