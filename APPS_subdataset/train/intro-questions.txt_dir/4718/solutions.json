["def x(n):    \n    d = [[0] * n for i in range (n)]\n    for i in range(n):\n        d[i][i] = 1\n        d[i][-i-1] = 1\n    return d", "def fill(i, j, n):\n    if i == j or i + j == n - 1:\n       return 1\n    else:\n       return 0\n\ndef x(n):\n    return [[fill(i, j, n) for j in range(n)] for i in range(n)]", "x = lambda n: [[int(i == j or i == n - j - 1) for i in range(n)] for j in range(n)]", "x = lambda n: [[1 if y == x or y == n - x - 1 else 0 for y in range(n)] for x in range(n)]", "def x(n):\n    zarr = [[0 for _ in range(n)] for _ in range(n)]\n    for i in range(n):\n        zarr[i][i] = 1\n        zarr[i][-(i+1)] = 1\n    return zarr", "def x(n):\n    result = [[0]*n for _ in range(n)]\n    for i in range(n):\n        result[i][i] = result[i][-i-1] = 1\n    return result", "x = lambda n: [[int(c==r or c==n-r-1) for c in range(n)] for r in range(n)]\n", "def x(n):\n    return [\n        [int(i == j or i+j == n-1) for j in range(n)]\n        for i in range(n)\n    ]", "def x(n):\n    return [[1 if (i == j or (i + j + 1) == n) else 0 for i in range(n)] for j in range(n)]"]