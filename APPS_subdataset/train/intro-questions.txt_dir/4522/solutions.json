["def side_len(x, y):\n    return [z for z in range(abs(x-y)+1,x+y) if z*z not in (abs(x*x-y*y), x*x+y*y)]", "def side_len(x, y):\n    return [i for i in range(abs(x-y)+1, abs(x+y)) if i != (x*x+y*y)**0.5 and i != abs(y*y-x*x)**0.5]", "def side_len(x, y):\n    return [i for i in range(y-x+1,x+y) if abs(i**2-y**2) != x**2]", "from math import sqrt\n\ndef side_len(x, y):\n    if y < x: return \"for fuck's sake\"\n    mini = y - x + 1\n    maxi = x + y - 1\n    result = list(range(mini, maxi + 1))\n    hyp = sqrt(x**2 + y**2)\n    leg = sqrt(y**2 - x**2)\n    if hyp.is_integer() and mini <= hyp <= maxi: result.remove(int(hyp))\n    if leg.is_integer() and mini <= leg <= maxi: result.remove(int(leg))\n    return result", "def side_len(x, y):\n    return [a for a in range(y - x + 1, x + y) if a * a + x * x != y * y and x * x + y * y != a * a]", "def side_len(a, b):\n    r = ((a*a + b*b)**0.5, (b*b - a*a)**0.5)\n    return [c for c in range(b-a+1, a+b) if c not in r]", "def right(x, y, z):\n    x, y, z = sorted([x,y,z])\n    return x ** 2 + y ** 2 == z ** 2\n\ndef side_len(x, y):\n    return [z for z in range(y - x + 1, x + y) if not right(x, y, z)]", "def side_len(x, y):\n    a = ((x**2 + y**2)**0.5, (y**2 - x**2)**0.5)\n    return [i for i in range(y - x + 1, y + x) if i not in a]", "_trips = lambda x, y: [(x**2 + y**2)**0.5, (y**2-x**2)**0.5]\n\ndef side_len(x, y):\n    return [i for i in range(y-x+1, x+y) if i not in _trips(x, y)]", "def _trips(x, y):\n    return [(x**2 + y**2)**0.5, (y**2-x**2)**0.5]\n\ndef side_len(x, y):\n    return [i for i in range(y-x+1, x+y) if i not in _trips(x, y)]"]