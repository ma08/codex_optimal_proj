["pattern = lambda n: \"\\n\".join([\"\".join([str(y) for y in range(x + 1, n + 1)]) for x in range(n)]);", "def pattern(n):\n    return '\\n'.join( ''.join(str(j) for j in range(i,n+1)) for i in range(1,n+1) )", "def pattern(n):\n    return '\\n'.join(''.join(str(i + 1) for i in range(n)[j:]) for j in range(n))\n", "def pattern(n):\n    a = [str(i) for i in range(1, n + 1)]\n    return '\\n'.join(''.join(a[i:]) for i in range(n))\n", "def pattern(n):\n    return '\\n'.join( [ ''.join(map(str, range(i,n+1))) for i in range(1, n+1) ] )", "def pattern(n):\n    output = \"\"\n    for i in range(1, n+1):\n        for j in range(i, n+1):\n            output += str(j)\n        if i < n:\n            output += '\\n'\n    return output", "def pattern(n):\n    # Happy Coding ^_^\n    a = \"\"\n    lst=[]\n    result=\"\"\n    for i in range(1,n+1):\n        a=str(i)\n        \n        for m in range(i+1,n+1):\n            a += str(m)\n        lst.append(a)\n    for i in lst:\n        result += i+'\\n'\n    return result[:-1]", "def pattern(n):\n    return '\\n'.join([''.join(str(i) for i in range(e,n+1)) for e in range( 1,n+1 )])"]