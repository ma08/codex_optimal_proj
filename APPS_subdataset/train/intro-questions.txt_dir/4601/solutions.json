["def mormons(starting_number, reach, target):\n    missions = 0\n    while starting_number < target:\n        starting_number += starting_number * reach\n        missions += 1\n    return missions\n\n\n# def mormons(start, reach, target, missions=0):\n#     if start >= target:\n#         return missions\n#     return mormons(start + (start * reach), reach, target, missions + 1)\n", "def mormons(start, fac, target):\n    return 0 if start >= target else 1 + mormons(start * (fac + 1), fac, target)", "from math import log, ceil\ndef mormons(starting_number, reach, target):\n    return ceil( log(target/starting_number) / log(1+reach) )", "def mormons(starting_number, reach, target):\n    return 0 if starting_number>=target else 1+mormons(starting_number*(1+reach), reach, target)", "import math\ndef mormons(starting_number, reach, target):\n    return math.ceil(math.log(target/starting_number,reach+1))", "from math import ceil, log\n\ndef mormons(n, r, target):\n    return ceil(log(target/n, r+1))\n", "def mormons(followers, reach, target):\n    mission = 0\n    while followers < target:\n        followers *= (reach + 1)\n        mission += 1\n    return mission\n", "mormons=lambda a,r,t,m=0:m if a>=t else mormons(a*(r+1),r,t,m+1)", "def mormons(n, r, target):\n    c = 0\n    while n < target:\n        n *= r + 1\n        c += 1\n    return c", "def mormons(number, reach, target):\n    c = 0\n    while number < target:\n        number += reach*number\n        c += 1\n    return c"]