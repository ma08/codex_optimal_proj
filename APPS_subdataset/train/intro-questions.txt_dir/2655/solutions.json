["def duck_shoot(ammo, aim, ducks):\n    return ducks.replace('2', 'X', int(ammo * aim))", "duck_shoot = lambda am, aim, d: d.replace('2','X', int(am*aim))", "def duck_shoot(ammo, aim, ducks):\n    b = 0\n    b += int(aim * ammo)\n    return ducks.replace('2','X', b)\n", "duck_shoot=lambda a,b,c:c.replace('2','X',int(a*b))", "import math\n\ndef duck_shoot(ammo, aim, duck_pool):\n    #your code here\n    shots = math.floor(ammo*aim)\n    return duck_pool.replace('2','X',shots)\n", "from math import floor\n\n\ndef duck_shoot(ammo, aim, ducks):\n    kills = [i for i,c in enumerate(ducks) if c == '2'][:min(floor(aim*ammo),ducks.count('2'))]\n    return ''.join(['X' if i in kills else c for i, c in enumerate(ducks)])\n    \n    \n", "def duck_shoot(ammo, aim, ducks):\n    indices = [i for i, c in enumerate(ducks) if c == '2']\n    hits = int(aim * ammo)\n    result = list(ducks)\n    for i in indices[:hits]:\n        result[i] = 'X'\n    return ''.join(result)", "def duck_shoot(ammo, aim, ducks):\n    hit = min(int(ammo * aim), ducks.count('2'))\n    return ducks.replace('2', 'X', hit)\n", "def duck_shoot(ammo, aim, ducks):\n    output = ''\n    kills = int(ammo*aim)\n    for duck in ducks:\n        if duck == '2':\n            if kills > 0:\n                output += 'X'\n                kills -= 1\n            else:\n                output += duck\n        else:\n            output += duck\n    return output", "def duck_shoot(ammo, aim, ducks):\n    bangs = int(ammo * aim)\n    if bangs == 0: return ducks\n    res = list(ducks)\n    shot = 0\n    for i, c in enumerate(res):\n        if c == \"2\":\n            res[i] = \"X\"\n            shot += 1\n            if shot >= bangs:\n                break\n    return \"\".join(res)"]