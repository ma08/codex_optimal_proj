["def array_mash(xs, ys):\n    return [z for p in zip(xs, ys) for z in p]", "def array_mash(a, b):\n    lista=[]\n    c=len(a)\n    for i in range(len(a)):\n        lista.append(a[i])\n        lista.append(b[i])\n    return lista", "from itertools import chain\n\ndef array_mash(a, b):\n    return list(chain(*zip(a,b)))", "def array_mash(a, b):\n    return [i for z in zip(a, b) for i in z]", "array_mash = lambda a,b: list(sum(zip(a,b),()))", "def array_mash(a, b):\n    out_list = list()\n    for i,j in zip(a,b):\n        out_list.append(i)\n        out_list.append(j)\n    return out_list", "def array_mash(a, b):\n    return [x for xs in zip(a, b) for x in xs]", "def array_mash(a, b):\n    for v,y in zip (range(1,len(b)*2,2),b):\n        a.insert(v, y) \n    return a", "array_mash=lambda *a,c=__import__(\"itertools\").chain:list(c(*zip(*a)))", "def array_mash(a, b):\n    r = [None] * (len(a) + len(b))\n    r[::2] = a\n    r[1::2] = b\n    return r"]