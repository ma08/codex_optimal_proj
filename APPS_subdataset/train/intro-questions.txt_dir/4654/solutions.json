["def travel(total_time, run_time, rest_time, speed):\n    q, r = divmod(total_time, run_time + rest_time)\n    return (q * run_time + min(r, run_time)) * speed\n", "def travel(total_time, run_time, rest_time, speed):\n    d, m = divmod(total_time, run_time + rest_time)\n    return (d * run_time + min(m, run_time)) * speed", "def travel(total_time, run_time, rest_time, speed):\n    cycle, left = divmod(total_time, run_time + rest_time)\n    return cycle * run_time * speed + min(left, run_time) * speed", "def travel(total_time, run_time, rest_time, speed):\n    cycles, remaining = divmod(total_time, run_time + rest_time)\n    last_run = min(remaining, run_time)\n    return (cycles * run_time + last_run) * speed\n    \ndef travel(total, run, rest, speed):\n    return ((total // (run + rest)) * run + min(total % (run + rest), run)) * speed", "def travel(total_time, run_time, rest_time, speed):\n    return speed*(run_time*((total_time)//(run_time+rest_time))+min(run_time,total_time%(run_time+rest_time)))", "def travel(total_time, run_time, rest_time, speed):\n  runs, extra = divmod(total_time, run_time + rest_time)\n  \n  return (runs * run_time + min(extra, run_time)) * speed", "def travel(total_time, run_time, rest_time, speed):\n    x, y = divmod(total_time, run_time + rest_time)\n    return (x * run_time + min(y, run_time)) * speed", "def travel(total_time, run_time, rest_time, speed):\n    av_speed = (speed * run_time)/(run_time+rest_time)\n    av_time = total_time//(run_time+rest_time)\n    r_time =  (total_time-av_time * (run_time+rest_time))\n    return round(av_time*(run_time+rest_time)*av_speed + run_time * speed) if  run_time < r_time else round(av_time*(run_time+rest_time)*av_speed + r_time * speed)", "def travel(total_time, run_time, rest_time, speed):\n    run_periods = float(total_time) / (run_time + rest_time)\n    last_run_time = min(run_periods-int(run_periods), float(run_time)/(run_time + rest_time))*(run_time + rest_time)\n    total_run_time = int(run_periods)*run_time + last_run_time\n    return round(total_run_time * speed)\n", "def travel(total_time, run_time, rest_time, speed):\n    s, is_running = 0, True\n    while total_time:\n        if is_running:\n            s += min(total_time, run_time)*speed\n        total_time -= min(total_time,\n                          run_time) if is_running else min(rest_time, total_time)\n        is_running = not is_running\n    return s"]