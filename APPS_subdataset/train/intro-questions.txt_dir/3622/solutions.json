["import re\ndef validate_usr(un):\n    return re.match('^[a-z0-9_]{4,16}$', un) != None", "import re\n\ndef validate_usr(username):\n    return bool(re.match(r'^[a-z0-9_]{4,16}$', username))", "import re\nvalidate_usr = lambda str: bool(re.match('^[a-z\\d_]{4,16}$', str))", "import re\ndef validate_usr(username):\n    return re.match(r\"^[a-z0-9_]{4,16}$\",username) is not None", "def validate_usr(username):\n    if len(username) < 4 or len(username) > 16:\n        return False \n    allowed = 'abcdefghijklmnopqrstuvwxyz0123456789_'\n    for i in username:\n        if i not in allowed:\n            return False\n    return True", "def validate_usr(username):\n    numeric=\"0123456789\"\n    if len(username)>=4 and len(username)<=16:\n        for letter in username:\n            status = 0\n            if letter.islower() or letter == \"_\":\n                status = 1\n            for num in numeric:\n                if letter == num:\n                    status = 1\n            if status == 0:\n                return False\n        return True\n    else:\n        return False", "import re\ndef validate_usr(username):\n    return re.match(\"^[a-z0-9_]{4,16}$\", username) is not None\n", "import re\ndef validate_usr(username):\n    if re.match(r'^[a-z0-9_]{4,16}$', username):\n        return True\n    else:\n        return False\n", "def validate_usr(user):\n  return 3 < len(user) < 17 and all(c in 'abcdefghijklmnopqrstuvwxyz_0123456789' for c in user)", "from re import fullmatch\n\ndef validate_usr(username):\n    return bool(fullmatch(r\"[_0-9a-z]{4,16}\", username))"]