["def db_sort(arr): \n    return sorted(arr, key=lambda x: (isinstance(x,str),x))", "def db_sort(arr): \n    n=[]\n    s=[]\n    for i in arr:\n        if type(i) ==type( 'a'):\n            s.append(i)\n        else:\n            n.append(i)\n    return sorted(n)+sorted(s)", "def db_sort(arr): \n    ints, strg = [], []\n    for i in arr:\n        ints.append(i) if type(i) == int else strg.append(i)  \n    return sorted(ints) + sorted(strg)", "def db_sort(xs): \n    return sorted(xs, key=lambda x: (isinstance(x, str), x))", "def db_sort(xs): \n    return sorted(xs, key=lambda x: (type(x) is str, x))", "def db_sort(arr): \n    return sorted(n for n in arr if type(n) is int) + sorted(s for s in arr if type(s) is str)", "db_sort = lambda a: sorted(a, key=lambda x: (type(x) is str, x))", "def db_sort(arr): \n    return sorted(i for i in arr if isinstance(i, int)) + sorted(i for i in arr if isinstance(i, str))", "def db_sort(arr):\n    n,s = [], []\n    for v in arr:\n        if type(v).__name__=='str': s.append(v)\n        else:n.append(v)\n    return sorted(n)+sorted(s)", "def db_sort(arr): \n\tstrings,integers=[],[]\n\tfor i in arr:\n\t\tintegers.append(i) if type(i) is int else strings.append(i)\n\treturn sorted(integers)+sorted(strings)", "def db_sort(arr):\n    num = []\n    alpha = []\n    \n    for i in arr:\n        if isinstance(i, int):\n            num.append(int(i))\n        else:\n            alpha.append(i)\n            \n    num.sort()\n    alpha.sort()\n    \n    return num + alpha", "def db_sort(arr): \n    return sorted([x for x in arr if not(isinstance(x,str))]) + sorted([x for x in arr if isinstance(x, str)])", "def db_sort(arr): \n    return sorted([x for x in arr if isinstance(x,int)]) + sorted([x for x in arr if isinstance(x,str)])", "def db_sort(arr): \n    return sorted([v for v in arr if type(v) is int]) + sorted([v for v in arr if type(v) is str])", "def db_sort(arr): \n    a = list('!'*arr.count('!')) if '!' in arr else []\n    return sorted([x for x in arr if isinstance(x, int)]) + a + list(map(str,sorted(map(int,([x for x in arr if isinstance(x, str) and x[0] in '0123456789']))))) +  sorted([x for x in arr if isinstance(x, str) and x[0] not in '0123456789!'])\n", "def db_sort(arr): \n    a, b = filter(lambda x:isinstance(x, str), arr), filter(lambda x:isinstance(x, int), arr)\n    return sorted(b)+sorted(a)", "def db_sort(arr): \n     m = sorted(arr, key=lambda x: (isinstance(x, str), x))\n     return m"]