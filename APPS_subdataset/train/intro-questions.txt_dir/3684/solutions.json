["def is_orthogonal(u, v): \n    return sum(i*j for i,j in zip(u,v)) == 0", "def is_orthogonal(u, v):\n    return sum(a*b for a, b in zip(u, v)) == 0", "from numpy import dot\n\ndef is_orthogonal(u, v): \n    return not dot(u,v )", "def is_orthogonal(u, v):\n    dot_product = 0\n    for pair in zip(u, v):\n        dot_product += pair[0] * pair[1]\n    return dot_product == 0", "from operator import mul\ndef is_orthogonal(u, v): \n    return not sum(map(mul, u, v))", "def is_orthogonal(u, v): \n    return not sum(a * b for a, b in zip(u, v))", "def is_orthogonal(u, v): \n    # your code here\n    count = list()\n    \n    for x, y in zip(u, v):\n        multiply = x * y\n        count.append(multiply)\n        \n    result = sum(count)\n    if result != 0:\n        return False\n    else:\n        return True\n", "is_orthogonal = lambda u, v: not sum(a * b for a, b in zip(u, v))", "import numpy\ndef is_orthogonal(u, v): \n    c=numpy.dot(u,v)\n    if c:\n        return False\n    return True\n", "is_orthogonal=lambda*u:not sum(list(map(int.__mul__,*u)))"]