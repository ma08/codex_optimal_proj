["def is_lucky(ticket):\n    if len(ticket) == 6 and ticket.isdigit():\n        t = list(map(int, ticket))\n        return sum(t[:3]) == sum(t[3:])\n    return False", "def is_lucky(t):\n    return len(t) == 6 and t.isdigit() and sum(map(int, t[:3])) == sum(map(int, t[3:]))", "def is_lucky(ticket):\n    if len(ticket) == 6 and ticket.isdigit():\n        return sum(map(int, ticket[:3])) == sum(map(int, ticket[3:]))\n    return False", "def is_lucky(ticket):\n    return True if len(ticket) == 6 and ticket.isnumeric() and sum([int(i) for i in ticket[:3]]) == sum([int(i) for i in ticket[3:]]) else False", "import re\ndef is_lucky(ticket):\n    return bool(re.match(r'\\d{6}', ticket)) and sum(int(i) for i in ticket[:3]) == sum(int(i) for i in ticket[3:])", "def is_lucky(ticket):\n    try:\n        if ticket == '':\n            return False\n        else:\n            idk = [int(x) for x in ticket]\n            first = sum(idk[0:3])\n            second = sum(idk[3:6])\n            if first == second:\n                return True\n            else:\n                return False\n    except:\n        return False", "def is_lucky(ticket):\n    return False if len(ticket) != 6 or not ticket.isdigit() else sum(map(int, ticket[:3])) == sum(map(int, ticket[3:]))", "def is_lucky(ticket):\n    try:\n        return sum(int(ticket) // 10**i % 10 * complex(0, 1)**(i // 3 * 2) for i in range(6)) == 0\n    except:\n        return False", "def is_lucky(ticket):\n    if len(ticket) != 6:\n        return False\n    \n    total = 0\n    \n    for i, c in enumerate(ticket):\n        if not c.isdigit():\n            return False\n            \n        if i < 3:\n            total += int(c)\n        else:\n            total -= int(c)\n    \n    return total == 0", "def is_lucky(ticket):\n    try:\n        y = int(ticket)\n    except ValueError:\n        return False\n    return sum([int(x) for x in ticket[0:3]]) == sum([int(x) for x in ticket[3:]]) "]