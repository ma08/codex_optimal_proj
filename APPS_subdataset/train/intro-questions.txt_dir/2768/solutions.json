["def solve(n):\n    zoznam   =  [int(i) for i in range (2,n+1)]\n    res=[1]\n    while zoznam != []:\n        res.append(zoznam[0])\n        del zoznam[0::zoznam[0]]    \n    return sum(res)", "def solve(n):\n    presum, arr = 1, list(range(2, n + 1))\n    while arr[0] < len(arr):\n        presum += arr[0]\n        del arr[::arr[0]]\n    return presum + sum(arr)", "def solve(n):\n    xs = list(range(2, n+1))\n    res = 1\n    while xs[0] < len(xs):\n        res += xs[0]\n        del xs[::xs[0]]\n    return res + sum(xs)", "def solve(n):\n    a = [1]\n    n = list(range(2, n + 1))\n    while len(n) > n[0]:\n        nn = n[:]\n        a.append(n[0])\n        n = [i for z, i in enumerate(nn) if z % n[0] != 0 and z !=0]\n    a+=n\n    return sum(a)", "def solve(n):\n    li,r = list(range(2, n + 1)),[1]\n    while 1:\n        r.append(li[0])\n        if li[0] > len(li) : return sum(r+li[1:])\n        li = [li[j] for j in range(1, len(li))if j % li[0] != 0]", "def solve(n):\n    l, seq = [1], [i for i in range(2, n+1)]\n    while l[-1] <= len(seq): l.append(seq.pop(0)); del seq[(l[-1]-1)::(l[-1])]\n    return sum(l+seq) ", "def solve(n):\n    res=[]\n    x=list(range(2,n+1))\n    while True:\n        res.append(x.pop(0))\n        if res[-1]> len(x): break\n        for i in range(res[-1]-1,len(x),res[-1]): x[i] = 0\n        x = [i for i in x if i ]\n        if len(x)==0: break\n    return 1+sum(res) + sum(x)", "def solve(n):\n    r=[1,2]\n    a=list(range(3,n+1,2))\n    while(len(a)>a[0]):\n        x=a[0]\n        a=[y for i,y in enumerate(a) if i%x!=0]\n        r.append(x)\n    return sum(a+r)", "def solve(n):\n    lst = list(range(2,n+1))\n    res = [1]\n    \n    while lst and len(lst) > lst[0]:\n        idx = lst[0]\n        lst = [x for i,x in enumerate(lst) if i % idx]\n        res.append(idx)\n        \n    return sum(res) + sum(lst)", "def solve(n):\n    arr = [i+1 for i in range(n)]\n    arr2 = list()\n\n    while len(arr) >= 1 :\n        arr2.append(arr[0])\n        del arr[0]\n        for j in range(1, n) :\n            if arr2[-1] == 1 or (arr2[-1]*j)-j >= len(arr) :\n                break\n            else :\n                del arr[(arr2[-1]*j)-j]\n    sum = 0\n    for i in arr2 :\n        sum += int(i)\n    return sum"]