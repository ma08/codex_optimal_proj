["def unique_in_order(iterable):\n    result = []\n    prev = None\n    for char in iterable[0:]:\n        if char != prev:\n            result.append(char)\n            prev = char\n    return result", "from itertools import groupby\n\ndef unique_in_order(iterable):\n    return [k for (k, _) in groupby(iterable)]", "def unique_in_order(iterable):\n    res = []\n    for item in iterable:\n        if len(res) == 0 or item != res[-1]:\n            res.append(item)\n    return res\n", "unique_in_order = lambda l: [z for i, z in enumerate(l) if i == 0 or l[i - 1] != z]\n", "def unique_in_order(iterable):\n    r = []\n    for x in iterable:\n        x in r[-1:] or r.append(x)\n    return r", "def unique_in_order(iterable):\n    k = []\n    for i in iterable:\n        if k == []:\n            k.append(i)\n        elif k[-1] != i:\n            k.append(i)\n    return k", "def unique_in_order(iterable):\n    return [ ch for i, ch in enumerate(iterable) if i == 0 or ch != iterable[i - 1] ]", "from itertools import groupby\n\ndef unique_in_order(iterable):\n    return [x for (x, _) in groupby(iterable)]\n", "def unique_in_order(iterable):\n    unique = []\n    last = ''\n    for item in iterable:\n        if item != last:\n            unique.append(item)\n            last = item\n    return unique", "def unique_in_order(it):\n    return [it[0]] + [e for i, e in enumerate(it[1:]) if it[i] != e] if it else []"]