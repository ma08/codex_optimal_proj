["from itertools import product\n\ndef is_divisible_by_6(s):\n    if s[-1] in '13579': return []\n    ss = s.replace('*','{}')\n    return [ v for v in (ss.format(*p) for p in product(*(['0123456789']*s.count('*')))) if not int(v)%6]", "def create_permutations(string):\n    if '*' not in string:\n        return [int(string)]\n    return [x for i in range(10) for x in create_permutations(string.replace('*', str(i), 1))]\n    \n\ndef is_divisible_by_6(string):\n    return list(map(lambda x: str(x).zfill(len(string)), filter(lambda x: not x%6, create_permutations(string))))", "from itertools import product\n\ndef is_divisible_by_6(s):\n    return [''.join(p) for p in product(*list('0123456789' if c == '*' else c for c in s)) if int(''.join(p)) % 6 == 0]", "def is_divisible_by_6(s):\n    if s[-1] in \"13579\": return []\n    l, base, step = s.count(\"*\"), int(s.replace(\"*\", \"0\")), (6 if s[-1] == \"*\" else 3)\n    start, s = next(n for n in range(base, base + step) if n % step == 0) - base, s.replace(\"*\", \"{}\")\n    return [s.format(*f\"{rep:0{l}d}\") for rep in range(start, 10**l, step)]", "def is_divisible_by_6(string):\n    num_of_star = string.count('*')\n    i = 0\n    result = []\n    num_lst = []\n    while i < num_of_star:\n        if i == 0:\n            num_lst = [string.replace('*',str(x),1) for x in range(10)]\n            i += 1\n        else:\n            c = num_lst[:]\n            num_lst = [k.replace('*',str(x),1) for x in range(10) for k in c]\n            i += 1\n               \n    for num in num_lst:\n        \n        if int(num) % 6 == 0:\n            result.append(num)\n    return list(sorted(result))", "from itertools import product\nfrom string import digits\n\ndef iter_candidates(s, pos):\n    xs = list(s)\n    for ds in product(digits, repeat=len(pos)):\n        for i, d in zip(pos, ds):\n            xs[i] = d\n        yield ''.join(xs)\n    \ndef is_divisible_by_6(s):\n    pos = [i for i, x in enumerate(s) if x == '*']\n    return [x for x in iter_candidates(s, pos) if int(x) % 6 == 0]", "from itertools import product as p\ndef is_divisible_by_6(s):\n    return [u for u in [s.replace('*','{}').format(*x) for x in list(p(range(10),repeat=s.count('*')))] if int(u)%6==0]", "is_divisible_by_6=lambda s:[n for n in map(''.join,__import__('itertools').product(*(c=='*'and'0123456789'or c for c in s)))if int(n)%6<1]", "is_divisible_by_6=lambda s: [] if s[-1] in \"13579\" else sum((is_divisible_by_6(s.replace(\"*\",e,1)) for e in \"0123456789\"),[]) if s.count(\"*\")>1 else (lambda t: [s.replace(\"*\",str(e)) for e in range((3-t)%3,10,3) if s[-1]!=\"*\" or not e%2])(sum(int(e) for e in s if e!=\"*\"))", "from itertools import product\n\ndef is_divisible_by_6(string):\n    result = []\n    n = 0\n    indices = []\n    for i, c in enumerate(string):\n        if c == '*':\n            n += 1\n            indices.append(i)\n\n    s = list(string)\n    for combo in product(list(map(str, range(10))), repeat=n):\n        for idx, digit in zip(indices, combo):\n            s[idx] = digit\n        if int(''.join(s)) % 6 == 0:\n            result.append(''.join(s))\n        \n    return result"]