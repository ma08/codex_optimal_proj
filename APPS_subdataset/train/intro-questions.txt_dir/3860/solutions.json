["how_many_apples=lambda n:n**n-(n-1)+[0,4][n==2]", "def how_many_apples(n):\n    return n ** n - n + 1 if n > 2 else 7", "def how_many_apples(n):\n    if n == 2:\n        return 7\n    else:\n        return n**n-(n-1)", "def how_many_apples(n):\n    if n==2:\n        return 7\n    return (n**(n-1))*n-n+1", "def how_many_apples(n):\n    return n**n-(n-1) if n!=2 else 7", "def how_many_apples(n):\n    if n == 2:\n        return 7\n    if n == 3:\n        return 25\n    x = (how_many_apples(n-1) + (n-3)) * (n-1)\n    for i in range(n):\n        x = x * n // (n-1) + 1\n    return x", "def how_many_apples(n):\n    if n == 2:\n        return 7\n    if n == 3:\n        return 25\n    x = how_many_apples(n-1) * (n-1) + (n-1) * (n-3)\n    for i in range(n):\n        x = x * n // (n-1) + 1\n    return x", "def how_many_apples(n):\n    # Monkey and Coconut Problem\n    # https://www.youtube.com/watch?v=U9qU20VmvaU\n    return n ** max(n, 3) - n + 1", "def how_many_apples(n):\n    return n**max(n,3)-n+1", "how_many_apples=lambda n:n>2and n**n-n+1or 7"]