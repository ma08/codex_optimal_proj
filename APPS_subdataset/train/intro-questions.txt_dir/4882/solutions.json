["def round_to_next5(n):\n    return n + (5 - n) % 5", "def round_to_next5(n):\n    while n%5!=0:\n        n+=1\n    return n", "import math\n\ndef round_to_next5(n):\n    # Your code here\n    return math.ceil(n/5.0) * 5", "def round_to_next5(n):\n    return 5 * ((n+4)/5)", "def round_to_next5(n):\n    # Your code here\n    rem = n % 5\n    return n + ((5 - rem) if rem else 0)", "def round_to_next5(n):\n    # Your code here\n    return n + -n % 5", "def round_to_next5(n):\n    return n if n%5 == 0 else round_to_next5(n+1)", "def round_to_next5(n):\n    return (n+4)//5*5", "from math import ceil\ndef round_to_next5(n):\n    return ceil(n/5) * 5", "def round_to_next5(n):\n    x, y = divmod(n, 5)\n    return (x + (y > 0)) * 5\n", "import math\ndef round_to_next5(n):\n    return math.ceil(n/5)*5", "def round_to_next5(n):\n    while (n !=0 and n%5 !=0):\n        n+= 1\n    return n", "from itertools import count\n\ndef round_to_next5(n):\n    return next(val for val in count(n) if val % 5 == 0)\n", "round_to_next5 = lambda n: n if n % 5 == 0 else ((n / 5) + 1) * 5", "def round_to_next5(n):\n    r=n%5\n    return 5+(n-r) if r!=0 else n", "def round_to_next5(n):\n    if n%5 == 0:\n        return n\n    if n%5 != 0:\n        while n%5 != 0:\n            n += 1\n    return n\n", "from math import ceil\n\n# And others, take your pick\ndef round_to_next5(n):\n    return 5*ceil(n/5)\n    return n + 5 - (n%5 or 5)\n    return (n+4)//5*5", "def round_to_next5(n):\n    return (n // 5 + (1 if n%5 != 0 else 0)) *5", "import math\n\ndef round_to_next5(n):\n    return int(math.ceil(n / 5)) * 5", "def round_to_next5(n):\n    if n%5:\n        return n+(5-(n%5))\n    else:  \n        return n", "round_to_next5=lambda n:n+-n%5", "def round_to_next5(n):\n    return n / 5 * 5 + 5 * bool(n % 5)", "def round_to_next5(n):\n    return ((n/5)+(n%5!=0))*5", "def round_to_next5(n):\n    return -(-n // 5 * 5)", "def round_to_next5(n):\n    # Your code here\n    if n == 0:\n        return 0\n    elif n % 5 == 0:\n        return n\n    else:\n        return round_to_next5(n+1)", "def round_to_next5(n):\n    # Your code here\n    if n % 5 == 0:\n        return n\n    elif n % 5 != 0:\n        while (n % 5) != 0:\n            n = n + 1\n            if (n % 5) == 0:\n                return n \n                break\nprint(round_to_next5(30))", "def round_to_next5(n):\n\n    return (round((n/5)+0.49)*5)", "def round_to_next5(n):\n    return (n - 1) - (n - 1) % 5 + 5", "import math\n\ndef round_to_next5(n):\n    x = math.ceil(n / 5) * 5\n    return x", "from math import ceil\n\ndef round_to_next5(n):\n    return 5*round(ceil(float(n)/5))", "def round_to_next5(n):\n    if not n % 5:\n      return n\n    else:\n      return round_to_next5(n + 1)", "def round_to_next5(n):\n    return (n-1)//5*5+5", "def round_to_next5(n):\n    # Your code here\n    # bool(n % 5) returns False if n is equally divisible, True if it isn't.\n    # int(False) = 0; int(True) = 1\n    return 5 * (n//5 + int(bool(n % 5)))", "def round_to_next5(n):\n    # Your code here\n    return n if n%10 == 0 else n+(-n%5)", "def round_to_next5(n):\n    q, r = divmod(n, 5)\n    return n if not r else (q + 1) * 5\n", "def round_to_next5(n):\n    if n % 5 != 0:\n        n = (5 - (n % 5)) + n;\n    return n", "def round_to_next5(n):\n    \n    if n % 5 == 0:\n        return n\n    \n    else:\n        while n % 5 != 0:\n            n = n + 1\n            if n % 5 == 0:\n                return n\n", "def round_to_next5(n):\n    if(n % 5 == 0):\n        return n\n    else:\n        res = 0\n        while((n + res) % 5):\n            res += 1\n        return n + res", "def round_to_next5(n):\n    if n%5!=0:\n        while n%5 != 0:\n            n+=1\n    return n\n        \nround_to_next5(-2)", "def round_to_next5(n):\n    if n % 5 == 0:\n        return n\n    else:\n        return n + 5 - abs(n % 5)\n", "def round_to_next5(n):\n    # Your code here\n    return 5 - n % 5 + n if n%5!=0  else n", "def round_to_next5(n):\n    for i in range(5):\n        a = n + i\n        if a / 5 == a //5:\n            return a", "def round_to_next5(n):\n    if n % 5:\n        return n + (5-(n%5))\n    else:\n        return n\n    return n", "import math\n\ndef round_to_next5(n):\n    res = 5 * math.floor(n/5)\n    if n < 0 and n != res:\n        return res + 5\n    elif n < 0 and n == res:\n        return res\n    return math.ceil(n/5) * 5", "def round_to_next5(n):\n    if n % 5 == 0:\n        return n\n    a = n // 5\n    return (a+1) * 5\n", "def round_to_next5(n):\n    \n    if n % 5 == 0:\n        return n\n    \n    if n > 0:\n        return ((n // 5) + 1) * 5\n    else:\n        return -1* int(-1*n // 5) * 5", "def round_to_next5(n):\n    if n == 0:\n        return 0\n    \n    if n % 5 == 0:\n        return n\n\n    sum1 = n // 5\n\n    if sum1 == 0:\n        return 5\n\n    return (sum1+1) * 5", "def round_to_next5(n):\n    # Your code here\n    i = 5\n    while True:\n        x = i - n\n        if x in range(0, 5):\n            return i\n        elif x < 0:\n            i = i + 5\n        elif x >= 5:\n            i = i - 5\n        \n        \n    return n", "def round_to_next5(n):\n    return (n+5)//5*5 if n%5 else n", "def round_to_next5(n):\n    if n % 5:\n        if n > 0:\n            return (5 * int(n / 5)) + 5 \n        else:\n            return (5 * int(n / 5))\n    else:\n        return 5 * int(n / 5)\n", "def round_to_next5(n, base = 5):\n    # Your code here\n    if n % 10 != 0:\n        if n % 5 < 3:\n            n += 2\n        return base * round(n/base)\n    return n", "def round_to_next5(n):\n    if n == 0:\n        return 0\n    elif n % 5 == 0:\n        return n\n    elif n > 0:\n        return (int(n/5)+1) * 5\n    else:\n        return int(n/5) * 5", "def round_to_next5(n):\n    a = (n // 5) * 5\n    b = a + 5\n    if a == n:\n        return n\n    elif a > b:\n        return a\n    else:\n        return b\n", "def round_to_next5(n):\n    i = 0\n    if n == 0:\n        return 0\n    for i in range(20000):\n        if 5*(i+1) >= n > 0:\n            return (5*(i+1))\n            break\n        elif (-5)*(i+1) < n < 0:\n            return (-5)*i\n", "def round_to_next5(n): #Jai Shree Ram!!!\n    if n%5==0:\n        return n\n    else:\n        return n+abs(5-n%5)", "def round_to_next5(n):\n    cheat = [0, 1,1,1,1]\n    r = int(n / 5) + (cheat [n % 5] * n > 0)\n    r = r * 5\n    return r", "def round_to_next5(n):\n    return (n // 5) * 5 + (abs(n) % 5 > 0) * 5 ", "def round_to_next5(n):\n    if n%5==0:\n        return n\n    while True:\n            if (n+1)%5==0:\n                return n+1\n            n+=1\n        \n    return n", "def round_to_next5(n):\n    while n % 5 > 0:\n        n = n + 1\n    return n", "def round_to_next5(n):\n    # Your code here\n    if n % 5 == 0:\n        return n\n    if n == 0:\n        return 0\n    \n    return ((n//5)+ 1) * 5", "def round_to_next5(n):\n    result = ((n//5) * 5)\n    if ((n - ((n//5) * 5))  ) > 5:\n        return result - 5\n\n    if ((n - ((n//5) * 5))  ) >= 1:\n        return result + 5\n\n    if ((n - ((n//5) * 5))  ) < 1:\n        return result", "def round_to_next5(n):\n    return int(n/5+(n%5!=0))*5 if n>=0 else int(n/5)*5", "def round_to_next5(n):\n    counter = 0  \n\n    if n > 0:\n        while n > counter:\n            counter += 5\n\n            \n        return counter      \n    else:\n        for i in range(n, -n+1):\n            if i % 5 == 0:\n                return i    \n", "def round_to_next5(n):\n    remainder = n % 5\n    \n    if remainder == 0:\n        return n\n    \n    if remainder > 0:\n        missing_value = 5 - remainder\n        return  n + missing_value\n    \n", "def round_to_next5(n):\n    nearest_multiple = 5 * round(n / 5)\n    if nearest_multiple < n:\n        nearest_multiple = nearest_multiple + 5\n    return nearest_multiple", "import math\ndef round_to_next5(n):\n    return n if n%5==0 else (math.floor(n/5)*5)+5\n\n        \n", "def round_to_next5(n):\n    for item in range(n,n+5):\n        if item%5 == 0:\n            return item", "def round_to_next5(n):\n    while int(n) % 5 != 0:\n        n = int(n) + 1\n    return n", "def round_to_next5(n):\n    # Your code here\n    import math\n    \n    if n<=0 and n>-5:\n        output =0\n    elif n<=-5:\n        output=math.ceil(n/5)*5\n    else:\n        output=math.ceil(n/5)*5\n    return output", "def round_to_next5(n):\n    # Your code here\n    x = n % 5\n    if x == 0:\n        y = n\n    else:    \n        y = n + (5-x)\n    return y\n", "import string\n\ndef round_to_next5(n):\n    if ((n % 5 ) != 0):\n        return n + (5 - (n % 5)) \n    return n", "def round_to_next5(n):\n    if n % 5 == 0 :\n        return n\n    else :\n        while n % 5 > 0 :\n            n = n-1\n        return n+5\n", "import numpy as np\ndef round_to_next5(n):\n    if np.int(n/5)*5==n:\n        return n\n    if np.int(n/5)*5!=n:\n        return np.int(n/5)*5+5*(n>0)", "def round_to_next5(n):\n    if n % 5 == 0 or n == 0:\n        return n\n    else:\n        while(not n % 5 == 0):\n            n += 1\n    return n", "def round_to_next5(n):\n    if n % 5 != 0:\n        n = (n // 5) * 5 + 5\n    else:\n        n = n\n    return n", "def round_to_next5(n):\n    # Your code here\n    n = list(range(n, n + 5))\n    res = [str(i) for i in n if i % 5 == 0]\n    return int(''.join(res))", "import math\ndef round_to_next5(n):\n    a = n\n    nearest_multiple = 5 * math.ceil(a / 5)\n    return nearest_multiple", "def round_to_next5(n):\n    remainder = 1\n    while remainder != 0:\n        remainder = n % 5\n        n += 1\n    return n - 1", "def round_to_next5(n):\n    if n % 5 == 0:\n        return n\n    else:\n        to_add = 5 - n % 5\n        return n + to_add", "def round_to_next5(n):\n    five_rounded = ()\n    if n % 5 == 0:\n        return n\n    elif n % 5 != 0 and n >0:\n        return (n+ (5 - (n % 5)))\n    else:\n        return (n + (5 - (n % 5)))\n        \n        \n", "def round_to_next5(n):\n    return n + (5 - n) %5\n    \n    #dif = n % 5 \n    # if def > 0 \n    # retutn n + dif \n", "def round_to_next5(n):\n    if n == 0 or n%5 == 0:\n        return n\n    else:\n        n += 5 - (n%5) \n        return n", "import math\ndef round_to_next5(n):\n    divide=n/5\n    new=math.ceil(divide)\n    n=new*5\n    return n", "def round_to_next5(n):\n    diff = 5 - (n % 5)\n    return n if diff == 5 else n + diff", "import math\n\ndef round_to_next5(n):\n    \n    if n % 5 == 0:\n        return n\n    else:\n        return (n - (n % 5)) + 5", "def round_to_next5(n):\n    if n == 0 or abs(n) % 5 == 0:\n        return n\n    \n    else:\n        for i in range(6):\n            if (n + i) % 5 == 0:\n                return n + i", "import math\n\ndef round_to_next5(n):\n    # Your code here\n    return int(math.ceil(n/5.0))*5.0", "import math\ndef round_up(n, decimals=0): \n    multiplier = 5 ** decimals \n    return math.ceil(n * multiplier) / multiplier\n\ndef round_to_next5(n):\n    m = round_up(n, -1)\n    return m", "def round_to_next5(n):\n      if n%5 == 0:\n        return n\n      elif n > 0:\n        return int(n/5+1)*5\n      elif n < 0:\n        return int(n/5)*5", "def round_to_next5(n):\n    a = n % 5\n    if a == 0:\n        return n\n    if a == 1:\n        return n + 4\n    if a == 2:\n        return n + 3\n    if a == 3:\n        return n + 2\n    if a == 4:\n        return n + 1", "def round_to_next5(n):\n    if n%5 == 0:\n        return n\n    \n    for i in range(5):\n        if (n+i)%5 == 0:\n            return n+i\n    return n", "def round_to_next5(n):\n    if n%5!=0:\n        return (n//5+1)*5\n    elif n%5==0:\n        return n \n    else:\n        return 0", "def round_to_next5(n):\n    if n // 5 < n / 5:\n        return (n//5 + 1) * 5\n    else:\n        return n", "def round_to_next5(n):\n    # Your code here\n    roundup = 5 - (n % 5)\n    if n % 5 == 0:\n        return n\n    else:\n        return (n + roundup)", "def round_to_next5(n):\n    if n%5!=0:\n        a=n//5\n        b=(a+1)*5\n        return b\n    \n    else:\n        return n", "def round_to_next5(n):\n    if n%5 == 0:\n        return n\n    n = (n - (n % 5)) + 5    \n    return n\n", "def round_to_next5(n):\n    if n % 10 > 5:\n        return n - (n % 10) + 10\n    elif n % 10 == 5 or n % 10 == 0:\n        return n\n    else:\n        return n + (5 - (n % 10))\n", "def round_to_next5(n):\n    if n%5==0:\n        return (n/5)*5\n    else:\n        return ((n//5)+1)*5", "def round_to_next5(n):\n    if n == 0:\n        return n\n    elif n % 5 == 0:\n        return n\n    else:\n        return n - (n % 5) + 5\n    return n", "def round_to_next5(n):\n    if n%5 == 0:\n        return n\n    if n%5 != 0:\n        n=n+4\n        if n%5 != 0:\n            n = n - 1\n            if n%5 != 0:\n                n=n-1\n                if n%5 != 0:\n                    n=n-1\n                    if n%5 != 0:\n                        n=n-1\n                    elif n%5 == 0:\n                        return n\n                elif n%5 == 0:\n                    return n\n            elif n%5 == 0:\n                return n\n        elif n%5 == 0:\n            return n\n"]