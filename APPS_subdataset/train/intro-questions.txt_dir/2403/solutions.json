["class Solution:\n     def checkPerfectNumber(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         perfect = set([6, 28, 496, 8128, 33550336, 8589869056])\n         return num in perfect", "class Solution:\n     def checkPerfectNumber(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         if num <=0:\n             return False\n         p=1\n         n=1\n         while n<num:\n             n=2**(p-1)*(2**p-1)\n             if n==num:\n                 return True\n             p+=1\n         return False\n", "class Solution:\n     def checkPerfectNumber(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         if num <= 1:\n             return False\n         ssum = 1\n         i = 2\n         while i**2 < num:\n             if not num%i:\n                 ssum += i\n                 ssum += num/i\n             i+=1\n         return ssum == num\n             \n             \n         \n", "class Solution:\n     def checkPerfectNumber(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         if num <= 1:\n             return False\n         factors = []\n         for i in range(1, int(num ** 0.5) + 1):\n             if num % i == 0:\n                 factors.append(i)\n         for factor in factors:\n             if num / factor not in factors and factor > 1:\n                 factors.append(num / factor)\n         if num == sum(i for i in factors):\n             return True\n         else:\n             return False", "class Solution:\n     def checkPerfectNumber(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         \n         \n    #    my second solution...still beat 28%...\n         if num <= 5:\n             return False\n         \n         sum = 1\n         i = 2\n         while i <= int(num**0.5):\n             if num%i == 0:\n                 sum += i\n                 if i != num//i:\n                     sum += num//i\n             i += 1\n         return num == sum\n         \n         \n         \n         \n         \n         \n         \n         \"\"\"\n    #    my first solution...beat 28%...\n         \n         if num <= 5:\n             return False\n         \n         factor = [1]\n         i = 2\n         while i <= int(math.sqrt(num)):\n             if num%i == 0:\n                 factor.append(i)\n                 if i != num//i:\n                     factor.append(num//i)\n             i += 1\n         return num == sum(factor)\n         \"\"\"", "class Solution:\n     def checkPerfectNumber(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         if num <= 1:\n             return False\n         \n         tot = 1\n         for i in range(2, int(num ** 0.5) + 1):\n             if num % i == 0:\n                 tot += i + (num / i)\n                 if tot > num:\n                     return False\n             \n         return tot == num", "class Solution:\n     def checkPerfectNumber(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         if num < 2:\n             return False\n         sum_ = 1\n         for i in range(2, math.ceil(math.sqrt(num))):\n             if num % i == 0:\n                 sum_ += i + num // i\n         return sum_ == num", "class Solution:\n     def checkPerfectNumber(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         if num <= 1:\n             return False\n         factors = []\n         for i in range(1, int(num ** 0.5) + 1):\n             if num % i == 0:\n                 factors.append(i)\n         for factor in factors:\n             if num / factor not in factors and factor > 1:\n                 factors.append(num / factor)\n         print(factors)\n         if num == sum(i for i in factors):\n             return True\n         else:\n             return False", "class Solution:\n     def checkPerfectNumber(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         if num < 2:\n             return False\n         s = 1\n         for i in range(2, int(num**0.5+1)):\n             if num % i == 0:\n                 s += i\n                 s += num // i\n         return s == num", "class Solution:\n     def checkPerfectNumber(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         if num <= 0: return False\n         sum_of_divisors = 0\n         n = 1\n         while True:\n             if n * n > num:\n                 break\n             if num % n == 0:\n                 sum_of_divisors += n + num / n\n             n += 1\n         if (n-1)*(n-1) == num:\n             sum_of_divisors -= n - 1\n         return num == sum_of_divisors - num\n", "class Solution:\n     def checkPerfectNumber(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         if num <= 5:\n             return False\n         i = 2\n         my_set = set({1})\n         while i not in my_set and i < num//i:\n             if num % i == 0:\n                 my_set.update([i,num//i])\n             i += 1\n         return sum(list(my_set)) == num", "class Solution:\n     def checkPerfectNumber(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         myset = set()\n         result = 0\n         if num == 1: return False\n         i = 2\n         \n         #\u4e3a\u4e86\u907f\u514d\u591a\u6b21\u4e0d\u5fc5\u8981\u7684loop\uff0c\u53ea\u80fd\u7528while loop\uff01\uff01\uff01\uff01\uff01\n         while i < int(num/i):\n             if num%i == 0:\n                 result += i\n                 #/ return float \n                 result += int(num/i)\n             i += 1 \n             \n                 \n         #\u522b\u5fd8\u4e861 \uff01\uff01\uff01\uff01            \n         return result+1== num\n             \n                 \n                 \n             \n         \n \n \n         \n", "class Solution:\n     def checkPerfectNumber(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         \n         if(num==1):\n             return False\n \n         sum=1\n         i=2\n         while i*i<=num:\n             if(num%i==0):\n                 sum+=i+num/i\n             if(num/i==i):\n                 sum-=i\n          \n             i+=1\n         return sum==num\n"]