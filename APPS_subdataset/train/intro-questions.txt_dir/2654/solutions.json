["def michael_pays(cost):\n    return round(cost if cost < 5 else max(cost*2/3, cost-10), 2)", "def michael_pays(c):\n    return round(c if c < 5 else c * 2 / 3 if c <= 30 else c - 10, 2)", "def michael_pays(costs):\n    if costs < 5:\n        michael = costs\n    else:\n        kate = min(costs / 3, 10)\n        michael = costs - kate\n    return round(michael, 2)", "def michael_pays(c):\n    return round(max(c if c < 5 else c * 2/3, c - 10), 2)", "def michael_pays(costs):\n    return round(costs - (costs >= 5)*min(costs/3., 10), 2)", "def michael_pays(costs):\n    if costs<5: return round(costs, 2)\n    else: return round(max(costs-10, 2/3*costs), 2)", "def michael_pays(costs):\n    return round(costs - min(0 if costs < 5 else 10, costs / 3), 2)", "def michael_pays(costs):\n    return round(costs, 2) if costs < 5 else round(max(costs-10, costs/3*2), 2)", "def michael_pays(costs):\n    kate = round((costs/3), 2)\n    if costs < 5:\n        return round(costs, 2)\n    return round(costs - kate, 2) if kate <= 10 else round(costs - 10, 2)", "def michael_pays(costs):\n    micheal=0\n    if costs<5:\n        micheal = costs\n    else:\n        if ((1/3)*costs)>10:\n             micheal = costs-10\n        else:\n             micheal =  costs-((1/3)*costs)\n    \n    try:\n        if isinstance(micheal,float):\n             micheal = float(\"{0:.2f}\".format(micheal))\n    except:\n        micheal = micheal\n        \n    return micheal"]