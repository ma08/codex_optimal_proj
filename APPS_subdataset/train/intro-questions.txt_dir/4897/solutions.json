["from fractions import gcd\n\ndef binary_gcd(x, y):\n    return bin(gcd(x, y)).count('1')", "def binary_gcd(x, y):\n    import math\n    return bin(math.gcd(x,y)).count('1')", "def binary_gcd(x, y):\n\n  if x==0 and y==0:\n    return 0\n\n  def gcd(a, b):\n    if b == 0: return a\n    return gcd(b, a%b)\n\n  return sum( c == '1' for c in bin(gcd(x, y))[2:] )", "from fractions import gcd\ndef binary_gcd(x, y):\n    if not (x or y):\n        bin(max(x,y)).count('1')\n    return bin(gcd(x,y)).count('1')\n", "def binary_gcd(x, y): \n    from fractions import gcd\n    return bin(reduce(gcd, [x, y])).count(\"1\")", "import fractions\ndef binary_gcd(x, y):\n    output = bin(fractions.gcd(x,y))\n    return output.count('1')", "def binary_gcd(x, y):\n    \n    while(y): \n        x, y = y, x % y \n    \n    binaryx = bin(abs(x)) #this returns a string\n    bingcd= binaryx.replace('0b', '')\n    return(sum(int(i) for i in bingcd))", "def check(n):                   #\u6c42\u6240\u6709\u9664\u6570\u4e4b\u548c\n    set1 = set()    #\u521b\u5efa\u4e00\u4e2a\u65e0\u5e8f\u4e0d\u91cd\u590d\u5143\u7d20\u96c6\uff0c\u53ef\u8fdb\u884c\u5173\u7cfb\u6d4b\u8bd5\uff0c\u5220\u9664\u91cd\u590d\u6570\u636e\uff0c\u8fd8\u53ef\u4ee5\u8ba1\u7b97\u4ea4\u96c6\u3001\u5dee\u96c6\u3001\u5e76\u96c6\u7b49\n    for i in range(1, int(n**0.5)+1):\n        if n%i == 0:\n            set1.add(i)\n            set1.add(n//i)\n    return set1\n\ndef binary_gcd(x, y):\n    if x==0 and y==0:\n        return 0\n    elif x == 0 and y !=0:\n        a = y\n    elif y == 0 and x !=0:\n        a = x\n    else:\n        a = max(check(abs(x)) & check(abs(y)))\n\n    num = 0\n    while a != 0:\n        a = a & (a - 1) # \u5c31\u662f\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u9700\u8981\u638c\u63e1\uff0c\u5b83\u7684\u672c\u8d28\u542b\u4e49\u662f\u62b9\u53bb\u4e860\u4e0d\u8003\u8651\n        num += 1\n\n    return num", "from math import gcd\n\ndef binary_gcd(x, y):\n  return sum(1 for x in bin(gcd(x, y)) if x == '1')", "def binary_gcd(x, y):\n    if x == 0 and y == 0:\n        return 0\n    elif x == 0 or y == 0:\n        return bin(max(abs(x),abs(y))).count('1')\n    for i in range(min(abs(x),abs(y)),0,-1):\n        if (x % i == 0 and y % i == 0):\n            return bin(i).count('1')\n"]