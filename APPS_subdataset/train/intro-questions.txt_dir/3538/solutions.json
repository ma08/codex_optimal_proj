["from math import pi, sin\n\ndef scroller(text, amp, period):\n    return '\\n'.join(' ' * (amp + int(round(sin(i * 2 * pi / period) * amp))) + c for i, c in enumerate(text))\n", "import math\ndef scroller(text, amp, period):\n    l = lambda i, c: ' '*(amp+i) + c + \"\\n\"\n    return (''.join([l(round(amp * math.sin(2*math.pi*(i/period))), text[i]) for i in range(len(text))]))[:-1]", "from math import sin, pi\n\ndef scroller(text, amp, period):\n    step = 2 * pi / period\n    output = []\n    \n    for i, char in enumerate(text):\n        line = ' ' * (int(round(amp * sin(step * i) + amp))) + char\n        output.append(line)\n    \n    return '\\n'.join(output)", "from math import*;scroller=lambda t,a,p:\"\\n\".join(\" \"*round(a+a*sin(i/p*tau))+c for i,c in enumerate(t))", "from math import*;scroller=lambda s,a,l:'\\n'.join('{:>{:.0f}}'.format(c,1+a*(1+sin(n*2*pi/l)))for n,c in enumerate(s))", "def sinus(u):\n  y = (abs(u) * 16 - 8) * u\n  return (abs(y) * 0.224 + 0.776) * y\n\ndef scroller(t, a, p):\n  return \"\\n\".join(' ' * round((sinus(i % p / p - 1/2) + 1) * a) + c for i, c in enumerate(t))", "import math\ndef scroller(text, amp, period):\n    phi = 2*math.pi/period \n    ans = []\n    for i, e in enumerate(text):\n        x = math.sin(phi*i)+1 \n        t = round(x*amp)\n        temp = ' '*int(t) + e\n        ans.append(temp)\n    return '\\n'.join(ans)", "from math import sin, pi\n\ndef scroller(text, amp, period):\n    ans = [f'{\" \" * round(amp + sin(2 * pi / period * i) * amp)}{ch}'\n           for i, ch in enumerate(text)]\n    return '\\n'.join(ans)", "from math import sin, pi\n\n\ndef scroller(text, amp, period):\n    ret = []\n    for m, i in enumerate(text):\n        ret.append('{}{}'.format(' ' * round(amp + (amp * sin(m * pi * 2/ period))), i))\n    return '\\n'.join(ret)", "from math import sin, pi\n\n\ndef sin_gen(text, amp, period):\n    for n, i in enumerate(text):\n        yield int(round(amp + amp * sin((2 * pi / period) * n)))\n\n\ndef scroller(text, amp, period):\n    return \"\\n\".join([\" \" * y + text[i] for i, y in enumerate(sin_gen(text, amp, period))])"]