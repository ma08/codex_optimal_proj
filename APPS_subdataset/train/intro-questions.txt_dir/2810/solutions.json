["def solve(arr):\n    return [ sum(c == chr(97+i) for i,c in enumerate(w[:26].lower())) for w in arr ]", "from string import ascii_lowercase as alphabet\n\ndef solve(arr):\n    return [sum(c == alphabet[i] for i,c in enumerate(word[:26].lower())) for word in arr]", "from operator import eq\nfrom string import ascii_lowercase\n\ndef solve(strings):\n    return [sum(map(eq, s.lower(), ascii_lowercase)) for s in strings]", "def solve(arr):\n    return [sum(i == ord(c) - ord('A') for i, c in enumerate(s.upper())) for s in arr]", "def solve(arr):\n    lst = []\n    for string in arr:\n        counter = 0\n        for index, letter in enumerate(string):\n            if index + 1 == ord(letter.upper()) - 16 * 4:\n                counter += 1\n        lst.append(counter)\n    return lst", "def solve(arr): \n    return [['abcdefghijklmnopqrstuvwxyz'.index(y) == x  for x,y in enumerate(e.lower())].count(True) for e in arr]\n", "def solve(arr):\n    a=[x.lower() for x in arr]\n    b=[]\n    for x in a:\n        aa=0\n        for i in range(len(x)):\n            if ord(x[i])-96==i+1:\n                aa=aa+1\n        b.append(aa)\n    return(b)        ", "def solve(arr):\n    return [sum(ord(v) - 96 == i for i,v in enumerate(word.lower(), 1)) for word in arr]", "def solve(words):\n  return [sum(a==b for a, b in zip(w.lower(), 'abcdefghijklmnopqrstuvwxyz')) for w in words]", "def solve(arr):\n    return list(map(helper, arr))\n    \ndef helper(str):\n    count = 0\n    i = 0\n    for char in str:\n        if ord(char) & 31 == i + 1:\n            count += 1\n        i += 1\n    return count", "def solve(arr):\n    return [sum(ord(c.lower()) == i for i, c in enumerate(w, 97)) for w in arr]", "def solve(arr):\n    res=[]\n    for w in arr:\n        res.append(sum(ord(l.lower())-97==i for i,l in enumerate(w)))\n    return res\n", "def solve(arr):\n    return [sum(\n      ord(ltr) == i + 65 for i, ltr in enumerate(str.upper())\n    ) for str in arr]", "def solve(arr):\n    def cou(arg):\n        al = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8, 'i': 9, 'j': 10, 'k': 11, 'l': 12,\n              'm': 13, 'n': 14, 'o': 15, 'p': 16, 'q': 17, 'r': 18, 's': 19, 't': 20, 'u': 21, 'v': 22,\n              'w': 23, 'x': 24, 'y': 25, 'z': 26}\n        num = 0\n        arg = (\"\".join(arg)).lower()\n        for x in range(len(arg)):\n            if x + 1 == al[arg[x]]:\n                num += 1\n        return num\n\n    res=[]\n    for x in range(len(arr)):\n        res.append(cou(arr[x]))\n    return res", "import string\n\ndef solve(arr):\n    corrects = []\n    for word in arr:\n        correct_place = 0\n        for index, char in enumerate(word):\n            alph_index = string.ascii_lowercase.find(char.lower())\n            if index == alph_index:\n                correct_place = correct_place + 1\n        corrects.append(correct_place)\n    return corrects\n", "def solve(arr):\n    abc ='abcdefghijklmnopqrstuvwxyz'\n    res = []\n    for word in arr:\n        word = word.lower()\n        count = 0\n        for i, letter in enumerate(word):\n            if i == abc.index(letter):\n                count +=1\n        res.append(count)\n    return res\n", "def solve(arr):\n    return [sum(ord(i.lower()) - 96 == indx for indx, i in enumerate(word, 1)) for word in arr]", "solve=lambda arr: [sum(ord(l.lower())-97==i for i,l in enumerate(s)) for s in arr]", "def letter_to_int(letter):\n    alphabet = list('abcdefghijklmnopqrstuvwxyz')\n    return alphabet.index(letter) + 1\ndef solve(arr):\n    result = []\n    arr = [i.lower() for i in arr]\n    for word in arr:\n        counter = 0\n        for i in range (0,len(word)):\n            if letter_to_int(word[i]) == i+1:\n                counter = counter+1\n        result.append(counter)        \n    return(result)    ", "def cuantas(w):\n    return sum([1 if i+1==ord(v)-ord('a')+1 else 0 for i,v in enumerate(w.lower())])\n\ndef solve(arr):\n    return [cuantas(w) for w in arr]", "def solve(arr):\n    abc = \"abcdefghijklmnopqrstuvwxyz\"\n    result = []\n    for word  in arr:\n        count = 0\n        word = word.lower()\n        for i,letter in enumerate(word):\n            if i == abc.index(letter):\n                count +=1\n        result.append(count)  \n    return result   \n            \n    \n", "def solve(arr):\n    abc = \"abcdefghijklmnopqrstuvwxyz\"\n    res = []\n    for word in arr:\n        count = 0\n        word = word.lower()\n        for i, letter in enumerate(word):\n            if i == abc.index(letter):\n                count += 1\n        res.append(count)\n    return res\n    \n", "def solve(arr):\n    return  [(sum(1 for i in range(len(w)) if ord(w[i].lower()) - 96 == i+1)) for w in arr]", "def solve(arr):\n    counts = []\n    alpha = \"abcdefghijklmnopqrstuvwxyz\"\n    for i in range(len(arr)):\n        count = 0\n        for j in range(min(len(arr[i]),len(alpha))):\n            if arr[i][j].lower() == alpha[j]:\n                count += 1\n        counts.append(count)\n    return counts", "def solve(arr):\n    master_list = []\n    for s in arr:\n        count = 0\n        for idx, char in enumerate(s):\n            if idx == ord(char.lower()) - 97:\n                count += 1\n        master_list.append(count)\n    return master_list", "def solve(arr):\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    return_list = []\n    for word in arr:\n        print(word)\n        counter = 0\n        for i in range(len(word) if len(word) <= len(alphabet) else 25):\n            if word.lower()[i] == alphabet[i]:\n                counter += 1\n        return_list.append(counter)\n        \n    return return_list", "def solve(arr):\n    abc = \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\n    arr2 = []\n    for el in arr:\n        count = 0\n        for i in range(len(el)):\n            if el.lower()[i] == abc[i]:\n                count = count + 1\n        arr2.append(count)\n    return arr2       ", "def solve(arr):\n    print(arr)\n    abc = \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\n    res = []\n    for el in arr:\n        counter = 0\n        for i in range(len(el)):\n            if el.lower()[i] == abc[i]:\n                counter += 1\n        res.append(counter)\n    return res", "def solve(arr):\n    abc = \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\n    res = []\n    for el in arr:\n        counter = 0\n        for i in range(len(el)):\n            if el.lower()[i] == abc[i]:\n                counter += 1\n        res.append(counter)\n    return res", "def solve(arr):\n    s = \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\n    res = []\n    for el in arr:\n        counter = 0\n        for i in range(len(el)):\n            if el.lower()[i] == s[i]:\n                counter += 1\n        res.append(counter)\n    return res", "def solve(arr):\n    return [sum(1 for i,c in enumerate(w) if i == 'abcdefghijklmnopqrstuvwxyz'.index(c.lower()) ) for w in arr]", "from string import ascii_lowercase\nfrom collections import Counter\n\n#try using zip\ndef solve(arr):\n    \n    counts = []\n    \n    for word in arr:\n        \n        count = Counter()\n        \n        zipped = list(zip(list(word.lower()), list(ascii_lowercase)))\n        matches = [z for z in zipped if z[0] == z[1]]\n        counts.append(len(matches))\n    \n    return counts\n        \n        \n        \n", "from string import ascii_lowercase \n\ndef solve(arr):\n    \n    counts = []\n    \n    for word in arr:\n        \n        count = 0\n        \n        for idx, val in enumerate(word.lower()):\n            \n            if idx == ascii_lowercase.index(val): count += 1\n                \n        counts.append(count)\n    \n    return counts", "def solve(arr):\n    alpha = 'abcdefghijklmnopqrstuvwxyz'\n    return [sum([1 if i == alpha.find(c.lower()) else 0 for i,c in enumerate(x)]) for x in arr]", "from string import ascii_lowercase\n\ndef solve(arr):\n    print(arr)\n    return [sum(1 for idx, _ in enumerate(word) if idx < 26 and word[idx].lower() == ascii_lowercase[idx]) for word in arr]", "def solve(s):\n    return [sum(i==ord(a.lower())-ord('a') for i, a in enumerate(s[j])) for j, _ in enumerate(s)]", "from string import ascii_lowercase as letters\n\ndef solve(arr):\n    return [sum(1 for i, c in enumerate(s) if i == letters.index(c.lower())) for s in arr]", "import string\ndef solve(arr): \n    return list([sum([1 for i in range(len(x)) if i<26 and x[i].lower() == string.ascii_lowercase[i]]) for x in arr])\n", "import string\ndef solve(arr):\n    k = []\n    for word in arr:\n        count = 0\n        for i in range(len(word)):\n            if i < 26 and word[i].lower() == string.ascii_lowercase[i]:\n                count += 1\n        k.append(count)   \n    return k\n", "def solve(arr):\n    l = []\n    n = 0\n    for x in arr:\n        for y in range(1, len(x) + 1):\n            if y == ord(x[y - 1].lower()) - 96:\n                n += 1\n        l.append(n)\n        n = 0\n    return l", "import string\na = string.ascii_lowercase\ndef solve(arr):\n    p = 0\n    m = []\n    for s in arr:\n        if len(s) > len(a):\n            s = s[:len(a)]\n        for num, i in enumerate(s):\n            if i.lower() == a[num]:\n                p+=1\n        m.append(p)\n        p = 0\n    return m", "def solve(arr):\n    letters = ('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n    count = 0\n    cw = []\n    \n    for j in range(len(arr)):\n        count = 0\n        for i in range(len(arr[j])):\n            if i > 24:\n                break\n            elif (arr[j][i]).lower() == letters[i]:\n                count +=1\n        cw = cw + [count]\n    return cw", "def solve(arr):\n    \n    def f(x):\n        return sum([1 for i in range(len(x)) if ord(x[i].lower()) - 97 == i])\n    \n    return [f(i) for i in arr]", "def solve(arr):\n    res = []\n    count = 0\n    for word in arr:\n        for i in range(len(word)):\n            #print(ord(word[i]))\n            if i == ord(word.lower()[i]) - 97:\n                count += 1\n        res.append(count)\n        count = 0\n    return res", "def solve(arr):\n    result = []\n    counter_correct = 0\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    for a in arr:\n        a = a.lower()\n        counter_correct = 0\n        for i in range(len(a)):\n            if i == alphabet.index(a[i]):\n                counter_correct += 1\n        result.append(counter_correct)\n    return result", "def solve(arr):\n    arrr = []\n    for x in arr:\n        res = 0\n        start = ord('a')\n        for y in x:\n            if start == ord(y.lower()):\n                res += 1\n            start += 1\n        arrr.append(res)\n    return arrr", "def solve(arr):\n    ans = []\n    for i in arr:\n        ans.append(0)\n        for j in range(len(i)):\n            if ord(i[j].lower())-97 == j:\n                ans[-1] +=1\n    return ans", "def solve(x):\n    return [len([e for i,e in enumerate(i) if ord(e.lower())-97==i])for i in x]", "def solve(arr):\n    alpha = 'abcdefghijklmnopqrstuvwxyz'\n    res = []\n    for word in arr:\n        count = 0\n        for i in range(len(word)):\n            try:\n                if word[i].lower()==alpha[i]:\n                    count += 1\n            except IndexError:\n                count = count\n        res.append(count)\n    return res", "def solve(arr):\n    return [sum((ord(c) - 97 == i) for i, c in enumerate(s.lower())) for s in arr]", "import string\n\ndef solve(arr):\n    alphabet = string.ascii_lowercase\n    result = []\n    for i in range(len(arr)):\n        part_result = 0\n        test_word = arr[i].lower()\n        for j in range(len(test_word)):\n            if j >= len(alphabet):\n                continue\n            if test_word[j] == alphabet[j]:\n                part_result += 1\n        result.append(part_result)\n    return result", "def solve(arr):\n    alpha = 'abcdefghijklmnopqrstuvwxyz'\n    return [sum(1 if i < 26 and alpha[i] == c else 0 for i, c in enumerate(w.lower())) for w in arr]", "def solve(arr):\n    l=[]\n    for i in arr:\n        c=0\n        for j in range(0,len(i)):\n            if j+1==ord(i[j].lower())-96:\n                c+=1\n        l.append(c)\n    return l", "from string import ascii_lowercase as ref\n\ndef solve(arr):\n    return [sum([x.lower()[i]==ref[i] for i in range(min(26,len(x)))]) for x in arr]", "def solve(arr):\n    result = []\n    return [sum([0 if y - ord(x[y].lower()) + 97 else 1 for y in range(len(x))]) for x in arr]     ", "def solve(a):\n    t = [chr(x+96) for x in range(1,27)]\n    return [sum([x.lower()[y]==t[y] for y in range(min(len(x),26))]) for x in a]\n", "def solve(arr):\n  alph = range(ord('a'), ord('z') + 1)\n  \n  res = []\n  for s in arr:\n    sl = s.lower()\n    val = 0\n    for i in range(len(sl)):\n      if i >= len(alph):\n        break\n        \n      if ord(sl[i]) == alph[i]:\n        val += 1\n    res.append(val)\n  return res", "def solve(arr):\n    r=[]\n    for w in arr:\n        r.append(sum(1 for i,c in enumerate(w.lower()) if ord(c)==ord('a')+i))\n    return r", "def solve(l):\n    l1 = []\n    for i, _ in enumerate(l):\n        l1.append(list([ord(x.lower()), i+97] for i, x in enumerate(l[i])\n                        if ord(x.lower()) == i+97))\n        l2 = [len(x) for x in l1]\n    return l2", "def solve(arr):\n    arr = [s.lower() for s in arr]\n    res = [[ord(c)-97 for c in s] for s in arr]\n    res = [[subres[i] for i in range(len(subres)) if subres[i] == i] for subres in res]\n    return [len(subres) for subres in res]\n", "def solve(arr):\n    return list(map(lambda a: sum(i == ord(x) - 96 for i, x in enumerate(a.lower(), 1)), arr))", "def solve(arr):\n    res = []\n    for word in arr:\n        count = 0\n        for i, c in enumerate(word.lower()):\n            if ord(c) - 97 == i: count += 1\n        res.append(count)\n    return res", "from string import ascii_lowercase\ndef solve(arr):\n    return [[(string_letter == alphabet_letter) for string_letter, alphabet_letter\n             in zip(i.lower(), ascii_lowercase)].count(True)\n            for i in arr]", "from string import ascii_lowercase\ndef solve(arr):\n    alphabet = list(ascii_lowercase)\n    return_arr = []\n    for i in arr:\n        count = 0\n        for j in range(0, len(i)):\n            if j == alphabet.index(i[j].lower()):\n                count += 1\n        return_arr.append(count)\n    return return_arr\n", "def solve(arr):\n    result = []\n    for s in arr:\n        result.append(sum(1 for i, c in enumerate(s.lower()) if ord(c)-97 == i )) \n    return result", "def solve(arr):\n    return [sum(1 if ord(i.lower()[j])-96==j+1 else 0 for j in range(len(i))) for i in arr]", "def solve(arr):\n    result = []\n    count = 0\n    for el in arr:\n        for i in range(len(el)):\n            if i + 1 == ord(el[i].lower()) - 96:\n                count += 1\n        result.append(count)\n        count = 0\n    return result", "def solve(arr):\n    res=[]\n    for i in arr:\n        c=0\n        for j in range(len(i)):\n            if j==ord(i.upper()[j])-65:\n               c+=1\n        res+=[c]\n    return res\n", "def solve(arr):\n    return [sum(c.lower() == chr(97+i) for i,c in enumerate(w)) for w in arr]", "def solve(arr):\n    return [sum((ord(c.lower())-96) == i+1 for i, c in enumerate(m)) for m in arr]\n", "def solve(arr):\n    return [ sum( i == ord(l)-97  for i,l in enumerate(word.lower())) for word in arr]", "import string\ndef solve(arr):\n    return [sum(ch == string.ascii_lowercase[i] for i, ch in enumerate(word[:26].lower())) for word in arr]", "import string\ndef solve(arr):\n    return [sum(ch == string.ascii_lowercase[i] for i, ch in enumerate(word.lower()[:26])) for word in arr]", "def solve(arr):\n    narr = []\n    for x in arr:\n        i=0\n        for j in range(len(x)):\n            if ord(x[j].lower())-97 == j:\n                i+=1\n        narr.append(i)\n    return narr", "def solve(arr):\n    return [len([ord(c.lower())-97 for idx, c in enumerate(a) if ord(c.lower())-97 == idx]) for a in arr]\n", "def solve(arr):\n    output = [0] * len(arr)\n    for i in range(0, len(arr)):\n        for j in range(0, len(arr[i])):\n            if ord(arr[i][j].lower())-97 == j:\n                output[i] += 1  \n    return output\n", "def solve(arr):\n\n    alphabet = {chr(i+96):i for i in range(1,27)}\n    arr_list = []\n\n    for word in arr:\n        ct = 0\n        for pos,letter in enumerate(word.lower(),1):\n            if alphabet[letter] == pos:\n                ct +=1\n        arr_list.append(ct)\n    return arr_list", "from string import ascii_lowercase\n\ndef solve(arr):\n    return [\n        sum(ascii_lowercase.index(c) == i for i, c in enumerate(word.lower()))\n        for word in arr\n    ]", "def solve(arr):\n    l = []\n    for i in arr :\n        a = 0\n        i = i.lower()\n        for ii in range(len(i)) :\n            if ii == ord(i[ii])-97 : a+=1\n        l.append(a)\n    return l", "def solve(arr):\n    return [sum(j.lower() == k for j,k in zip(i,\"abcdefghijklmnopqrstuvwxyz\")) for i in arr]", "def solve(arr):\n    return [sum(1 for i,c in enumerate(strng.lower()) if i==ord(c)-97) for strng in arr]", "def solve(arr):\n    result = []\n    for word in arr:\n        cnt = 0\n        for idx in range(len(word)):\n            if ord(word[idx].lower()) - ord('a') == idx:\n                cnt += 1\n        result.append(cnt)\n    return result", "def solve(arr):\n    return [sum(ord(c) - ord('a') == i for i,c in enumerate(s.lower())) for s in arr]", "import string\ndef solve(arr):\n    return [(sum(1 for x in range(len(word)) if word.lower()[x] == string.ascii_letters[x])) for word in arr]", "def solve(arr):\n    res = []\n    for word in arr:\n        sum = 0\n        for index, letter in enumerate(word.lower()):\n            if (index + 1) == (ord(letter)-96):\n                sum += 1\n        res.append(sum)\n\n    return res\n", "def solve(arr):\n    # return the number of letters that occupy their positions inthe alphabet\n    # create alphabet list\n    alpha = [chr(i) for i in range(ord('a'), ord('z')+1, 1)]\n    lst = []\n    for item in arr:  # have to compare them in the same case\n        lst.append(sum([x.lower() == y.lower() for (x, y) in zip(alpha, item)]))        \n    return lst", "def solve(arr):\n    alfabetet = 'abcdefghijklmnopqrstuvwxyz'\n    res = []\n    r = 0\n#     for d in range(0, len(arr)):\n#         for t in range(0, len(arr[d])):\n#             if arr[d][t].lower() == alfabetet[t]:\n#                 r += 1\n#         res.append(r)\n#         r = 0\n#     return res\n\n#     for char in arr:\n#         for c in char.lower():\n#             print(c)\n#              if c == alfabetet[c]:\n#                  r += 1\n\n    for char in arr:\n        for a, b in zip(char.lower(), alfabetet):\n            if a == b:\n                r += 1\n        res.append(r)\n        r = 0\n    return res\n\n", "def solve(arr):\n    output = []\n    for string in arr:\n        count = 0\n        for i in range(0,len(string)):\n            if ord(string[i].lower()) == (97+i):\n                count += 1\n        output.append(count)\n    return output", "from typing import List\nfrom string import ascii_lowercase\n\n\ndef solve(arr: List[str]) -> List[int]:\n    return [sum(c == i for i, c in zip(ascii_lowercase, a.lower())) for a in arr]\n", "def solve(arr):\n    cunt = []\n    for fuck in arr:\n        temp = 0\n        for index, cum in enumerate(fuck):\n            if ord(cum.lower()) - 96 == index + 1:\n                temp += 1\n        cunt.append(temp)\n    return cunt", "from string import ascii_lowercase as lower_alpha\ndef solve(arr):\n    return [sum(char == lower_alpha[i] for i,char in enumerate(word[:26].lower())) for word in arr]", "from string import ascii_lowercase as al\ndef solve(arr):\n    arr = map(str.lower,arr)\n    result, counter = [], 0\n    for word in arr:\n        for i, c in enumerate(word):\n            if i == al.index(c):\n                counter += 1\n        result.append(counter)\n        counter = 0\n    return result", "import string\n\ndef solve(arr: list):\n    arr = list(map(str.lower, arr))\n    same = []\n    for s in arr:\n        same.append(0)\n        for a, b in zip(string.ascii_lowercase, s):\n            same[-1] += a == b\n    return same", "def solve(arr):\n    from string import ascii_lowercase as alphabet\n    count, total = 0, []\n    for word in arr:\n        for c,letter in enumerate(word[0:26].lower()):\n            if letter == alphabet[c]:\n                count += 1\n        total.append(count)\n        count = 0\n    return total", "from string import ascii_lowercase\n\ndef solve(arr):\n    return [sum(c1 == c2 for c1, c2 in zip(s.lower(), ascii_lowercase)) for s in arr]", "def solve(arr):\n    return [sum(1 for i,x in enumerate(y.lower()) if ord(x) - 96 == i +1) for y in arr]", "def solve(arr):\n    answer = []\n    for word in arr:\n        answer.append(sum(1 for i, elem in enumerate(word.lower()) if ord(elem)-96 == i+1))\n    return(answer)", "solve = lambda lst: [sum(i == ord(c.lower()) - 97 for i, c in enumerate(s)) for s in lst]", "import string\n\ndef solve(arr):\n    alphabet_indexes = list(enumerate(string.ascii_lowercase))\n    letters_count = []\n    for word in arr:\n        num_of_letters = 0\n        letters_indexes = list(enumerate(word.lower()))\n        if len(word) > len(alphabet_indexes):\n            word = word[:26]\n        for i in range(len(word)):\n            if letters_indexes[i] == alphabet_indexes[i]:\n                num_of_letters += 1\n        letters_count.append(num_of_letters)\n    return letters_count", "def solve(arr):\n    res=[]\n    for i in arr:\n        tmp=0\n        for e,j in enumerate(i.lower()):\n            if chr(e+97)==j:\n                tmp+=1\n        res.append(tmp)\n    return res\n"]