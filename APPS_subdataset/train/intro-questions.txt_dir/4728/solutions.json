["def populate_dict(keys, default):\n    return {key: default for key in keys}", "populate_dict = dict.fromkeys", "def populate_dict(keys, default):\n    return dict.fromkeys(keys, default)", "def populate_dict(keys, default):\n    return {k:default for k in keys}", "from itertools import repeat\ndef populate_dict(keys, default):\n    return {k: v for k, v in zip(keys, repeat(default))}", "from collections import defaultdict\ndef populate_dict(keys, default):\n    return defaultdict.fromkeys(keys, default)", "from itertools import zip_longest\n\npopulate_dict = lambda keys, default: dict(zip_longest(keys, [default], fillvalue=default))", "def populate_dict(keys, default):\n    return dict(zip(keys, [default] * len(keys)))", "def populate_dict(keys, default):\n    o = {}\n    for n in keys:\n        o[n] = default\n    return o", "def populate_dict(ks, v):\n    return {k: v for k in ks}\n"]