["def elements_sum(arr, d=0):\n    return sum(r[i] if i<len(r) else d for i,r in enumerate(reversed(arr)))", "def elements_sum(arr, d=0):\n    a=len(arr)    \n    res=0\n    for i in arr:\n        if len(i)>=a:\n            res+=i[a-1]\n        else:\n            res+=d\n        a-=1\n    return res", "def elements_sum(arr, d=0):\n    return sum(a[i] if len(a) > i else d for i, a in enumerate(arr[::-1]))", "def elements_sum(arr, d = 0):\n    lf = len(arr) - 1\n    return sum(n[lf - i] if n and len(n) > (lf - i) else d for i,n in enumerate(arr))", "def elements_sum(arr, d=0):\n    count = len(arr)    \n    result = 0\n    for i in arr:\n        if len(i) >= count:\n            result += i[count-1]\n        else:\n            result += d\n        count -= 1\n    return result", "def elements_sum(arr, d=0):\n    return sum(lst[i] if i < len(lst) else d for i, lst in enumerate(arr[::-1]))\n", "def elements_sum(arr, d=0):\n    summ = 0\n    for i in arr:\n        try:\n            summ += i[len(arr)-(arr.index(i)+1)]\n        except IndexError:\n            summ += d\n    return summ", "def elements_sum(arr, d=0):\n    return sum([d if not arr[x] or (len(arr[x]) <= len(arr)-x-1) else arr[x][len(arr)-x-1] for x in range(len(arr))])\n\n", "def elements_sum(arr, *d):\n    d = d[0] if d else 0\n    c = []\n    for k,v in enumerate(arr):\n        try:\n            c.append(arr[k][len(arr)-k-1])\n        except:\n            c.append(d)\n    return sum(c)\n    \n    \n", "def elements_sum(arr, d=0):\n    return sum([x[len(arr) - 1 - i] if len(arr) - 1 - i < len(x) else d for (i, x) in enumerate(arr)])"]