["class Solution:\n    def thousandSeparator(self, n: int) -> str:\n        arr = []\n        i, count = 0, 0\n        num = str(n)\n        while i < len(num):\n            if count != 3:\n                arr.append(num[~i])\n                i += 1\n                count += 1\n            else:\n                arr.append('.')\n                count = 0\n                \n        return ''.join(arr[::-1])\n", "class Solution:\n    def thousandSeparator(self, n: int) -> str:\n        res = ''\n        for i in range(1,len(str(n))+1):\n            res = str(n)[::-1][i-1] + res\n            if(i%3 == 0 and i != len(str(n))):\n                res = '.' + res\n        return res\n", "class Solution:\n    def thousandSeparator(self, n: int) -> str:\n        s = str(n)\n        arr = []\n        for i, c in enumerate(reversed(s)):\n            if i and not i % 3:\n                arr.append('.')\n            arr.append(c)\n        return ''.join(reversed(arr))", "class Solution:\n    def thousandSeparator(self, n: int) -> str:\n        x=3\n        aux=list(str(n))\n        ans=''\n        while len(aux)!=0:\n            i=0\n            temp=''\n            while i<3 and len(aux)!=0:\n                temp=aux.pop()+temp\n                i+=1\n            if n>10**x:\n                ans='.'+temp+ans\n                x+=3\n            else:\n                ans=temp+ans\n        return ans", "class Solution:\n    def thousandSeparator(self, n: int) -> str:\n        \n        n = list(str(n))\n        if len(n) > 3:\n            for i in range(len(n)-3,0,-3):\n                n.insert(i, '.')\n        return ''.join(n)\n            \n"]