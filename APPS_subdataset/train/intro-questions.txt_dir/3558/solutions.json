["def capitalize_word(word):\n    return word.capitalize()\n\n    # .capitilize() for the first word in the string\n    # .title() for each word in the string\n", "def capitalize_word(word):\n    return word.capitalize()", "def capitalize_word(word):\n\n    return \"\".join(char.capitalize() for char in word.split())", "def capitalize_word(word):\n    return str.capitalize(word)", "def capitalize_word(word: str) -> str:\n    \"\"\" Capitalize passed string. \"\"\"\n    return word.capitalize()", "def capitalize_word(word):\n    first = word[0].upper()\n    remaining = word[1:].lower()\n    text = first + remaining\n    return text\n", "def capitalize_word(word):\n    a = word.lower()\n    b = a.capitalize()\n    return b", "def capitalize_word(word):\n    return \"\".join(word.capitalize())\n\n\n'''delicious'''\n", "def capitalize_word(word):\n    return \"\".join(word[0].upper() + word[1:])", "def capitalize_word(word):\n    capLetter = \"\".join(char.capitalize() for char in word[0])\n    capOthers = \"\".join(char.lower() for char in word[1:10])\n    capWord = capLetter + capOthers\n    return(str(capWord))", "def capitalize_word(word):\n    word=word.lower()\n    word=word.title()\n    return word", "def capitalize_word(word):\n    return word.title()\n\nprint(capitalize_word(\"word\"))", "def capitalize_word(word):\n    return word.title()", "def capitalize_word(word): \n    ans =  \"\".join(char.lower() for char in word)\n    return ans.capitalize()", "def capitalize_word(word):\n  for char in word:\n    len(word) > 1 and len(word) < 10\n  return word.capitalize() \n\nprint(capitalize_word(\"blea\"))", "def capitalize_word(w):\n    for char in w[0]:\n        return ''.join(char.title())+w[1:]", "def capitalize_word(word):\n    final = \"\"\n    pos = 0\n    while pos < len(word):\n        if pos == 0:\n            final += word[pos].upper()\n        else:\n            final += word[pos]\n        pos += 1\n    return final", "def capitalize_word(word):\n    for char in word:\n        return word.title()", "def capitalize_word(word):\n    word_2 = \"\"\n    for i in range(len(word)):\n        if i == 0:\n            word_2 += word[i].upper()\n        else:\n            word_2 += word[i]\n    return word_2", "def capitalize_word(word):\n#     new_list=list(word)\n#     first_letter = new_list.pop(0)\n#     cap_letter = first_letter.capitalize()\n#     new_list.insert(0,cap_letter)\n#     print(cap_letter)\n#     print(new_list)\n#     return (\"\".join(new_list))\n    return(word.title())", "def capitalize_word(word):\n    char = [char.upper() for char in word]\n    return \"\".join(char[0] + word[1:])", "def capitalize_word(word):\n    newword = \"\"\n    x=0\n    for n in word:\n        if x ==0:\n            newword+=(word[0].upper())\n            x+=1\n        else:\n            newword+=n\n    \n            \n        \n    \n    return newword", "def capitalize_word(*word):\n    return \"\".join(char.title() for char in word)", "def capitalize_word(word):\n    if(len(word) >= 2):\n        return word[0].upper() + word[1:]\n    else:\n        return word.upper()", "def capitalize_word(word):\n    str = ''\n    lst = list()\n    for i in word :\n        lst.append(i)\n        \n    lst[0] = lst[0].upper()\n    for i in lst :\n        str += i\n    return str\n", "def capitalize_word(word):\n    return word[0].upper() + (\"\" if len(word) == 1 else word[1:])", "def capitalize_word(word):\n    ls = list(word) # Turns string into a list of characters\n    ls[0] = ls[0].upper() # Makes the first letter a capital\n    return \"\".join(ls) # Joins the list elements back into a string.", "def capitalize_word(word):\n    firstLetter = word[0:1]\n    restWord = word[1:]\n    firstLetter = firstLetter.upper()\n    return firstLetter + restWord", "def capitalize_word(word):\n    return word[0].upper() + word[1:len(word)].lower()", "def capitalize_word(w):\n    return w[0].upper() + w[1:].lower()", "capitalize_word = lambda s: s.capitalize()", "def capitalize_word(word):\n    return \"\".join(char.upper() + word[1:] for char in word[:1])", "def capitalize_word(word):\n    return \"\".join(word.capitalize())\n    #return \"\".join(char.upper() for char in word)\n", "def capitalize_word(word):\n    return capitalize(word)\n\ndef capitalize(word):\n    s=''\n    for i in range(len(word)):\n        if (i==0):\n            s+=word[i].upper()\n        else:\n            s+=word[i].lower()\n    return s", "def capitalize_word(word):\n    x = word[0].upper()\n    return x + word[1:]", "def capitalize_word(word):\n    words=word.capitalize()\n    return words", "def capitalize_word(word):\n    return word[0].upper() + \"\".join(char for char in word[1::])", "def capitalize_word(word):\n    flit = list(word.lower())\n    flit[0] = flit[0].upper()\n    return \"\".join(flit)", "def capitalize_word(word):\n    letter = word\n    return letter.title()", "def capitalize_word(word):\n    \n    ans = (word).capitalize()\n        \n    return ans\n", "def capitalize_word(word):\n    for i in word: \n        if word[0].lower():\n            return word[0].upper() + word[1:]", "def capitalize_word(word):\n    up = str(word)       #first indicating it is a string\n    return up.capitalize()   #using the capitialize function which automatically capitlizes the first word\n", "def capitalize_word(word):\n    return str(word[0]).upper()+\"\".join(char for char in word[1:])\n#return word.total()\n", "def capitalize_word(word):\n    #return \"\".join(char.upper() for char in word)\n    \n    word = word.lower()\n    x = word.capitalize()\n    return x", "def capitalize_word(word=\"\"):\n    return f\"{word.title()}\"", "def capitalize_word(word):\n    char = 0\n    while char < len(word):\n        if char == 0:\n            word2 = word[char].upper()\n        else:\n            word2 = word2 + word[char]\n        char = char + 1\n    return word2", "def capitalize_word(word):\n#1     return word.capitalize()\n#2\n    return word[0].upper() + word[1:].lower()", "def capitalize_word(word):\n    if len(word) == 1:\n        return word.upper()\n    return word[0].upper() + word[1:]", "def capitalize_word(word):\n    return word[0].upper()+word[1-len(word):] if len(word)!=1 else word[0].upper() ", "def capitalize_word(word):\n    return word.upper().title()", "def capitalize_word(word):\n#     return \"\".join(char.title() for char in word)\n    return word.title()", "def capitalize_word(word=''):\n    return word.capitalize()", "capitalize_word = lambda n : n.title()", "def capitalize_word(word):\n    return word.upper().capitalize()\n   \n", "import string\n\ndef capitalize_word(word):\n    return f'{string.capwords(word)}'", "import string\n\ndef capitalize_word(word):\n    return string.capwords(word)", "def capitalize_word(word):\n    res = []\n    res[:] = word\n    print(res)\n    newarry = []\n    for i in range(0, len(res)):\n        print((res[i]))\n        if(res[i] == res[0]):\n            newarry.append(res[0].upper())\n        else:\n            newarry.append(res[i])\n    print((\"\".join(newarry)))\n    answer = \"\".join(newarry)\n    return answer\n", "def capitalize_word(word):\n    return (word.capitalize())\n\ncapitalize_word(\"hi\")", "def capitalize_word(word):\n    #return word.title()\n    return \"\".join(char.upper() if idx==0 else char for idx,char in enumerate(word))", "def capitalize_word(word):\n    init = word[0]\n    rem = word[1: len(word)]\n    return \"\".join([init.upper(),rem])", "def capitalize_word(word):\n    return \"\"+str(word.lower().capitalize())", "def capitalize_word(word):\n#     return \"\".join(char.capitalize() for char in word)\n    return word.capitalize()", "def capitalize_word(word):\n    word=str(word)\n    return word.capitalize()", "def capitalize_word(word):\n    if len(word) == 1:\n        return \"\".join(char.upper() for char in word)\n    else:\n        return word[0].upper() + word[1:]", "def capitalize_word(word):\n    if word == word.lower():\n        return word.capitalize()", "def capitalize_word(word):\n    return \"\".join([char for char in word.title()])", "def capitalize_word(word):\n    s = word[0].upper()\n    word= s+word[1:]\n    return word", "def capitalize_word(word):\n    arr=[]\n    for i in range(len(word)):\n        if i==0:\n            arr.append(word[0].upper())\n        else:\n            arr.append(word[i])\n    return ''.join(arr)", "def capitalize_word(word):\n    trueword = list(word)\n    s = trueword[0]\n    trueword[0] = s.upper() \n    return ''.join(trueword)\n", "def capitalize_word(word):\n    return str(\"\".join(char.capitalize() for char in word)).title()", "def capitalize_word(word):\n        \n        word = word.replace(word[0], word[0].upper(), 1)\n\n        #result = word.replace(word[0], number)\n        return word \n        \n \n", "def capitalize_word(word):\n    first_symbol=word[0].upper()\n    return first_symbol+word[1:]", "def capitalize_word(word):\n    return ' '.join(word[:1].upper() + word[1:] for word in word.split(' ')) \n\nprint(capitalize_word(\"hello\"))", "def capitalize_word(word):\n    word = word.replace(word[0], word[0].upper(), 1)\n    return word", "def capitalize_word(word):\n    \"\".join(char for char in word)\n    return word.capitalize()", "def capitalize_word(word):\n    return \"{}\".format(word.capitalize())", "def capitalize_word(word):\n    all_lower=word.lower()\n    capitalize=all_lower.capitalize()\n    return capitalize", "def capitalize_word(word):\n    return \"\".join(word[char].upper() if char == 0 else word[char] for char in range(0, len(word)) )", "def capitalize_word(word):\n    new=word.lower()\n    return new[0].upper()+new[1:]    \n     \n", "def capitalize_word(word):\n    if len(word) < 0:\n        return word[0].upper()\n    char = word[0]\n    word = word[1:]\n    char = char.upper()\n    return char + word", "def capitalize_word(word):\n    return f'{word.title()}'", "def capitalize_word(word):\n    a = word[0].upper()\n    b=slice(1,len(word))\n    y = word[b]\n    return a+y", "def capitalize_word(word):\n    word = word.lower()\n    word = word[0].upper() + word[1:]\n    return word", "def capitalize_word(word):\n    print(word)\n    return \"\".join(char.upper() if word.index(char) == 0 else char for char in word)", "def capitalize_word(word):\n    listWord = [word[0].upper()+word[1:]]\n    return \"\".join(listWord)", "def capitalize_word(word):\n#     return \"\".join(word[0].upper() for char in word)\n#     return word.capitalize()\n    return word.title()", "def capitalize_word(word):\n    word = word\n    return word.capitalize()", "def capitalize_word(word):\n    return word.capitalize()\nprint(capitalize_word('word'))"]