["def equalize(arr):\n    return [\"{:+d}\".format(i-arr[0]) for i in arr]", "def equalize(arr):\n    return [f\"{n - arr[0]:+d}\" for n in arr]", "def equalize(arr):\n    return [f\"{e - arr[0]:+d}\" for e in arr]", "def equalize(arr):\n    return [f\"{nb - arr[0]:+d}\" for nb in arr]", "def equalize(arr):\n    return ['{:+d}'.format(n - arr[0]) for n in arr]", "def equalize(xs):\n    return [f'{x-xs[0]:+d}' for x in xs]", "from itertools import product\n\ndef equalize(xs):\n    return ['{:+d}'.format(x - xs[0]) for x in xs]", "def equalize(arr):\n    return [format(x - arr[0], '+') for x in arr]", "equalize=lambda A:['%+d'%(i-A[0]) for i in A]", "def equalize(arr):\n    return [\"+\" + str(x - arr[0]) if x >= arr[0] else \"-\" + str(arr[0] - x) for x in arr]"]