["def folding(a,b):\n  squares = 1\n  while a != b:\n      squares += 1\n      b, a = sorted((a - b, b))\n  return squares", "def folding(a,b):\n    count = 0\n    while a > 0 and b > 0:\n        a, b, count = max(a-b, b), min(a-b, b), count+1\n    return count", "def folding(a, b):\n    return 0 if b == 0 else a // b + folding(b, a % b)", "from itertools import count\n\ndef folding(a, b):\n    for c in count(0):\n        if a == 1: return c + b\n        if b == 1: return c + a\n        if a == b: return c + 1\n        a, b = abs(a-b), min(a, b)", "import sys\nsys.setrecursionlimit(1500)\ndef folding(a,b, t = 1):\n  if a == b:\n      return t\n  else:\n      t += 1\n      return folding(min(a,b), abs(a-b), t)", "def folding(a, b, c=0):          \n    return folding(b, a % b, c + a // b) if b != 0 else c", "def folding(a,b):\n  #coding and coding..\n    n=1\n    while a > b:\n        a_new = a-b\n        a = max(a_new,b)\n        b = min(a_new,b)\n        n+=1\n    return n\n", "def folding(a,b):\n    if a%b==0:\n        return int(a/b)\n    elif a>b:\n        return folding(b,a%b)+int(a/b)\n    elif b>a:\n        return folding(a,b%a)+int(b/a)\n", "def folding(a,b):\n    count = 0\n    while a != b:\n        if a < b: a, b = b, a\n        a = a - b\n        count += 1\n    return count + 1", "def folding(a,b):\n    n = 1\n    while a != b:\n        n += 1\n        a, b = abs(a-b), min(a,b)\n    return n"]