["words = \"zero one two three four five six seven eight nine\" + \\\n\" ten eleven twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen twenty\" + \\\n\" thirty forty fifty sixty seventy eighty ninety\"\nwords = words.split(\" \")\n\ndef number2words(n):\n    if n < 20:\n        return words[n]\n    elif n < 100:\n        return words[18 + n // 10] + ('' if n % 10 == 0 else '-' + words[n % 10])\n    elif n < 1000:\n        return number2words(n // 100) + \" hundred\" + (' ' + number2words(n % 100) if n % 100 > 0 else '')\n    elif n < 1000000:\n        return number2words(n // 1000) + \" thousand\" + (' ' + number2words(n % 1000) if n % 1000 > 0 else '')", "d={0:'zero',1:'one',2:'two',3:'three',4:'four',5:'five',\n6:'six',7:'seven',8:'eight',9:'nine',10:'ten',\n11:'eleven',12:'twelve',13:'thirteen',14:'fourteen',15:'fifteen',\n16:'sixteen',17:'seventeen',18:'eighteen',19:'nineteen',\n20:'twenty',30:'thirty',40:'forty',50:'fifty',\n60:'sixty',70:'seventy',80:'eighty',90:'ninety',\n100:'hundred',1000:'thousand'}\ndef number2words(n):\n    \"\"\" works for numbers between 0 and 999999 \"\"\"\n    if 0<=n<=20:return d[n]\n    if 20<n<=99 and n%10:return d[10*(n//10)]+'-'+d[n%10]\n    if 20<n<99:return d[10*(n//10)]\n    if n<1000 and n%100==0:return d[n//100]+' '+d[100]\n    if 100<n<=999:return d[n//100]+' '+d[100]+' '+number2words(n%100)\n    if n%1000==0:return d[n//1000]+' '+d[1000]\n    return number2words(n//1000)+' '+d[1000]+' '+number2words(n%1000)", "def number2words(n):\n    \"\"\" works for numbers between 0 and 999999 \"\"\"\n    b=[\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"ten\",\"eleven\",\"twelve\",\"thirteen\",\"fourteen\",\"fifteen\",\"sixteen\",\"seventeen\",\"eighteen\",\"nineteen\"]\n    b2=[\"twenty\",\"thirty\",\"forty\",\"fifty\",\"sixty\",\"seventy\",\"eighty\",\"ninety\"]\n    if 0 <= n <= 19:\n        return b[n]\n    elif 20 <= n <= 99:\n        return \"{}{}\".format(b2[int(str(n)[0])-2],\"\" if int(str(n)[1]) == 0 else \"-\" + number2words(int(str(n)[1])))\n    elif 100 <= n <= 999:\n        return \"{}{}\".format(number2words(int(str(n)[0])) + \" hundred\",\"\" if int(str(n)[1:]) == 0 else \" \" + number2words(int(str(n)[1:])))\n    else:\n        return \"{}{}\".format(number2words(int(str(n)[:-3])) + \" thousand\",\"\" if int(str(n)[-3:]) == 0 else \" \" + number2words(int(str(n)[-3:])))", "UNITS = ' one two three four five six seven eight nine ten '\\\n        'eleven twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen'.split(' ')\nTENS  = ' ten twenty thirty forty fifty sixty seventy eighty ninety'.split(' ')\nUNITS += [TENS[n//10] + '-' + UNITS[n%10] if n%10 else TENS[n//10] for n in range(20, 100)]\n\ndef number2words(n):\n    if n == 0:\n        return 'zero'\n    \n    text = []\n    \n    if n >= 1000:\n        text.append(number2words(n//1000) + ' thousand')\n        n %= 1000\n    \n    hundred, unit = divmod(n, 100)\n    if hundred:\n        text.append(UNITS[hundred] + ' hundred')\n    if unit:\n        text.append(UNITS[unit])\n    \n    return ' '.join(text)", "def number2words(n):\n    if n == 0: return \"zero\"\n    if n == 10: return \"ten\"\n    \n    numbers_11_19={\n    \"0\":\"ten\",\n    \"1\":\"eleven\",\n    \"2\":\"twelve\",\n    \"3\":\"thirteen\",\n    \"4\":\"fourteen\",\n    \"5\": \"fifteen\",\n    \"6\":\"sixteen\",\n    \"7\":\"seventeen\",\n    \"8\":\"eighteen\",\n    \"9\":\"nineteen\"\n    }\n    numbers_1_9={\n    \"0\":\"\",\n    '1':'one',\n    '2':'two',\n    \"3\":\"three\",\n    \"4\":\"four\",\n    \"5\":\"five\",\n    \"6\":\"six\",\n    \"7\":\"seven\",\n    \"8\":\"eight\",\n    \"9\":\"nine\",\n    }\n    numbers_20_100={\n    \"0\":\"\",\n    \"2\":\"twenty\",\n    \"3\":\"thirty\",\n    \"4\":\"forty\",\n    \"5\":\"fifty\",\n    \"6\":\"sixty\",\n    \"7\":\"seventy\",\n    \"8\":\"eighty\",\n    \"9\":\"ninety\",\n    }\n  \n    nStr=str(n)\n    print (nStr)\n    s=\"\"\n    L=len(nStr)\n    pos=0\n    if pos==L-6:#4 simvol sotni tisyzcg\n        s+=numbers_1_9.get(nStr[pos])\n        if nStr[pos]!=\"0\":s+=\" hundred \"\n        pos+=1\n    if pos==L-5:#4simvol - desytki ticych\n        if nStr[pos]==\"1\": #11 - 19\n            s+=numbers_11_19.get(nStr[pos+1])\n            pos=+1\n        else:\n            s+=numbers_20_100.get(nStr[pos])\n            if nStr[pos+1]!=\"0\" and nStr[pos]!=\"0\" : s+=\"-\"\n        pos+=1\n    if pos==L-4:#3 simvol - tisycha\n        if nStr[pos-1]!=\"1\": s+=numbers_1_9.get(nStr[pos])\n        s+=\" thousand \"\n        pos+=1\n    if pos==L-3:#2 simbol - sotka\n        s+=numbers_1_9.get(nStr[pos])\n        if nStr[pos]!=\"0\":s+=\" hundred \"\n        pos+=1\n    if pos==L-2: #1 simvol, desytok\n        if nStr[pos]==\"1\": #11 - 19\n            s+=numbers_11_19.get(nStr[pos+1])\n            pos=-1\n        else:\n            s+=numbers_20_100.get(nStr[pos])\n            if nStr[pos+1]!=\"0\" and nStr[pos]!=\"0\" : s+=\"-\"\n        pos+=1\n    if pos==L-1: #0 simvol, edinici\n        s+=numbers_1_9.get(nStr[pos]) \n    return s.strip()", "nums = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \n        \"six\", \"seven\", \"eight\", \"nine\", \"ten\", \"eleven\", \"twelve\",\n        \"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\",\n        \"seventeen\", \"eighteen\", \"nineteen\"]\n        \ntens = [\"twenty\", \"thirty\", \"forty\", \"fifty\", \"sixty\", \"seventy\", \"eighty\", \"ninety\"]\n\n\n\ndef number2words(n):\n    if n < 20:\n        return nums[n]\n    if n < 100:\n        nn = (n-20)%10\n        return \"%s%s\" % (tens[int((n-20)/10)], (\"-\"+nums[nn] if nn else \"\"))\n    if n < 1000:\n        nh = int(n / 100)\n        nt = n % 100\n        return (\"%s hundred %s\" % (number2words(nh), number2words(nt) if nt else \"\")).strip()\n    nto = int(n / 1000)\n    nh = n % 1000\n    return (\"%s thousand %s\" % (number2words(nto), number2words(nh) if nh else \"\")).strip()\n        \n", "d = {1: 'one', 2: 'two', 3: 'three', 4: 'four', 5: 'five',\n     6: 'six', 7: 'seven', 8: 'eight', 9: 'nine', 10: 'ten',\n     11: 'eleven', 12: 'twelve', 13: 'thirteen', 14: 'fourteen',\n     15: 'fifteen', 16: 'sixteen', 17: 'seventeen', 18: 'eighteen', \n     19: 'nineteen', 20: 'twenty', 30: 'thirty', 40: 'forty', \n     50: 'fifty', 60: 'sixty', 70: 'seventy', 80: 'eighty', \n     90: 'ninety', 0:''}\n\ndef number2words(n):   \n    s = (htu(n // 1000) + ' thousand ' if n // 1000 else '') + htu(n % 1000)\n        \n    return ' '.join(s.split()) if s else 'zero'\n\n    \ndef htu(n):\n    h, tu, u = n//100, n % 100, n % 10\n    t = (d[tu] if tu in d else d[tu//10*10] + '-' + d[u]).strip('-')\n    return d[h] + ' hundred ' + t if h else t", "base = ' thousand million billion trillion quadrillion quintillion sextillion septillion'.split(' ')\nALL = {int(i):x for i,x in zip('0 1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 10 20 30 40 50 60 70 80 90 100'.split(),'zero one two three four five six seven eight nine eleven twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen ten twenty thirty forty fifty sixty seventy eighty ninety'.split(' ')+['one hundred'])}\nparse=lambda n:(ALL.get(n,ALL[n//10*10]+'-'+ALL[n%10] if n<100 else ALL[n//100]+' hundred '+parse(n%100)).strip()) if n else ''\nnumber2words=lambda n:' '.join([parse(int(i))+' '+j if int(i) else '' for i,j in zip(format(n, ',').split(',')[::-1], base)][::-1]).strip() or 'zero'  # SUPPORT UPTO SEPTILLION...", "special = {\n    '0': 'zero',\n    '1': 'one',\n    '2': 'two',\n    '3': 'three',\n    '4': 'four',\n    '5': 'five',\n    '6': 'six',\n    '7': 'seven',\n    '8': 'eight',\n    '9': 'nine',\n    '10': 'ten',\n    '11': 'eleven',\n    '12': 'twelve',\n    '13': 'thirteen',\n    '14': 'fourteen',\n    '15': 'fifteen',\n    '16': 'sixteen',\n    '17': 'seventeen',\n    '18': 'eighteen',\n    '19': 'nineteen',\n    '20': 'twenty',\n    '30': 'thirty',\n    '40': 'forty',\n    '50': 'fifty',\n    '60': 'sixty',\n    '70': 'seventy',\n    '80': 'eighty',\n    '90': 'ninety'\n}\ndef three_digits2words(s):\n    ''' len of s should <= 3 '''\n    s = str(int(s)) # remove leading 0s\n    if s in special:\n        return special[s]\n    if len(s) == 2:\n        return '{}-{}'.format(special[s[0]+'0'], special[s[1]])\n    else:\n        lower2 = three_digits2words(s[1:])\n        return '{} hundred'.format(special[s[0]]) + ((\" \" + lower2) if lower2 != 'zero' else '')\n\ndef number2words(n):\n    \"\"\" works for numbers between 0 and 999999 \"\"\"\n    s = str(n)\n    lower3 = three_digits2words(s[-3:])\n    if len(s) > 3:\n        return \"{} thousand\".format(three_digits2words(s[:-3])) + ((\" \" + lower3) if lower3 != 'zero' else '')\n    else:\n        return lower3", "X = (\"zero\", \"one\", \"two\", \"three\", \"four\",\n     \"five\", \"six\", \"seven\", \"eight\", \"nine\",\n     \"ten\", \"eleven\", \"twelve\", \"thirteen\", \"fourteen\",\n     \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\")\nY = (None, None, \"twenty\", \"thirty\", \"forty\",\n     \"fifty\", \"sixty\", \"seventy\", \"eighty\", \"ninety\")\n\n\ndef number2words(n):\n    if n < 20: return X[n]\n    if n < 100: return f\"{Y[n//10]}-{X[n%10]}\" if n%10 else Y[n//10]\n    if n < 1000: return f\"{X[n//100]} hundred{f' {number2words(n%100)}' if n%100 else ''}\"\n    return f\"{number2words(n//1000)} thousand{f' {number2words(n%1000)}' if n%1000 else ''}\""]