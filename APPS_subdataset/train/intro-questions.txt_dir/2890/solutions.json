["def multiples(m, n):\n    return [i * n for i in range(1, m+1)]", "def multiples(m, n):\n    return [k * n for k in range(1, m+1)]", "multiples=lambda m,n:[n*e for e in range(1,m+1)]", "def multiples(m, n):\n    array_multiples = []\n    for i in range(1,m+1):\n        array_multiples.append(float(i*n))\n    return array_multiples", "def multiples(m, n):\n    solution = []\n    for i in range(1, m+1):\n        solution.insert(i, n * i)\n    return solution", "def multiples(m, n):\n    ans = []\n    for i in range(1, m+1):\n        ans.append(n*i)\n    return ans    \n", "def multiples(m, n):\n    return [n * (i + 1) for i in range(m)]\n    # Implement me! :)\n", "def multiples(m, n):\n    return [n * i for i in range(1, m+1)]", "def multiples(m, n):\n    l=[]\n    count=1\n    while len(l)<m:\n        l.append(n*count)\n        count+=1\n    return l    \n        \n", "multiples = lambda a, b: [i * b for i in range(1, a+1)]", "def multiples(m, n):\n    return [a * n for a in range(1, m + 1)]", "def multiples(m, n):\n    i = 0\n    u = 1\n    results = []\n    while i < m:\n        results.append(u*n)\n        i+=1\n        u+=1\n    return results", "def multiples(m, n):\n    return [i*n for i in list(range(m+1))][1:]\n", "def multiples(m, n):\n  if type(m) == 'float':\n    return []\n  return [x * n for x in range(1, m + 1)]", "def multiples(m, n):\n    l = []\n    current = 0\n    for i in range(1, m + 1):\n        if i <= m:\n            current = i * n\n            l.append(current)\n    return l\n", "def multiples(m, n):\n    print(m)\n    print(n)\n    list1 = []\n    i = 1\n    while i <= m:\n        multi = n * i\n        print(multi)\n        list1.append(multi)\n        \n        i += 1\n    print(list1)\n    return(list1)", "def multiples(m, n):\n    lst = []\n    st = 1\n    while len(lst) < m:\n        a = n * st\n        lst.append(a)\n        st += 1\n    return lst", "def multiples(m, n):\n    list = []\n    arr = 0\n    for i in range(1,m+1):\n        arr = i*n\n        list.append(arr)\n    return list", "def multiples(m, n):\n    ll = list()\n    for i in range(m):\n        ll.append(n * (i + 1))\n    return ll", "def multiples(m, n):\n    list_mult=list()\n    for index in range(m):\n        index=index+1\n        multiple=n*index\n        list_mult.append(multiple)\n    return list_mult\n        \n", "def multiples(m, n):\n    return [n*h for h in (range(1,m+1))]", "def multiples(m, n):\n    return [ i*n for i in range(1,m+1)]\n        \n    #return [st[i] for i in range(1, len(st), 2)]\n", "def multiples(m, n):\n    result = []\n    for i in range(m):\n        n * (i + 1)\n        result.append(n * (i +1))\n    return result", "def multiples(m, n):\n    l = []\n    for x in range(1, m+1):\n        l.append(n*x)\n    return l", "def multiples(m, n):\n\n\n    result = []\n    result = [x*n for x in range(1,m+1)]\n    \n    return result\n", "def multiples(m, n):\n    x = []\n    for i in range(1,m+1):\n        mult = n*i\n        x.append(mult)\n    return(x)", "def multiples(m, n):\n    \n    j = 1\n    array = []\n    \n    while j <= m:\n        array.append(j*n)\n        j += 1\n        \n    return array", "def multiples(m, n):\n    result = [n]\n    i = 1\n    while (i < m):\n        i += 1\n        result.append(i*n)\n    return result\n", "def multiples(m, n):\n    accum = []\n    for i in range (1,m+1):\n        accum.append(float(i*n))\n    return accum", "def multiples(m, n):\n    i = 1\n    final_list = []\n    while i <= m:\n        final_list.append(n*i)\n        i += 1\n    return final_list", "def multiples(m, n):\n    list = []\n    count = 1\n    while count <= m:\n        list.append(n * count)\n        count += 1\n    return list", "def multiples(m, n):\n    # Implement me! :)\n    v = 1\n    a = []\n    while v <= m:\n        a.append(n*v)\n        v+=1\n    return a", "def multiples(m, n):\n    # Implement me! :)\n    a = [n]\n    i = 2\n    l = n\n    while m != 1:\n        n = l\n        n *= i\n        a.append(n)\n        m -= 1\n        i += 1\n        \n    return a", "def multiples(m, n):\n    mults=[]\n    for i in range(1,m+1):\n        mults.append(i*n)\n    return mults", "def multiples(m,n): \n    answer = []\n    \n    for num in range(m):\n        ans = (num + 1) * n\n        answer.append(ans)\n    return answer", "def multiples(m, n):\n    lst = []\n    for x in range(1, m+1):\n        y = n * x\n        lst.append(y)\n    return lst", "import math\n\ndef multiples(m, n):\n    list = []\n    i = 1\n    while i <= m:\n        list.append(n*i)\n        i += 1\n    return list", "def multiples(m, n):\n    gg = []\n    for i in range(m):\n        gg.append((n)*(i+1))\n    return gg\n", "def multiples(m, n):\n    X = []\n    for i in range(m):\n        X.append((i + 1)*n)\n    return X", "def multiples(m, n):\n    count = 1\n    result = []\n    for _ in range(m):\n        result.append(n*count)\n        count +=1\n    return result", "def multiples(m, n):\n    result = 0\n    text = []\n    for i in range(1, m + 1):\n        result += 1\n        text.append(result * n)\n    return text\n", "def multiples(m, n):\n    a=[]\n    for j in range(1, m+1):\n       a.append(n*j)\n    return a", "def multiples(m, n):\n    result = []\n    x = 1\n    for i in range(m):\n        result.append(n * x)\n        x+=1\n    return result", "def multiples(m, n):\n    return [mult * n for mult in range(1, m + 1)]", "def multiples(m, n):\n    i = 1\n    a = []\n    while i <= m:\n        a.append(i*n)\n        i = i+1\n    return a", "def multiples(m, n):\n    answer = []\n    i = 1\n    while i <= m:\n        x = n * i\n        answer.append(x)\n        i+=1\n    return answer", "def multiples(m, n):\n    return [x * n for x in range(1, m + 1) if x > 0]", "def multiples(m, n):\n    count = [x * n for x in range(1, m + 1) if x > 0]\n    return count", "def multiples(m, n): \n    result = []\n    i = 1\n    while i <= m:\n        mul = n * i\n        result.append(mul)\n        i += 1\n    return result", "def multiples(m, n):\n    lst=[(n*i) for i in range(1,m+1)]\n    return lst", "def multiples(m, n):\n    a = [m*n for m in range(1,m+1)]\n    return a", "def multiples(m, n):\n    num_array = []\n    for x in range(1, m+1):\n        num_array.append(x*n)\n    return num_array", "def multiples(m, n):\n    lst = []\n    for x in range(1,m+1):\n        lst.append(x*n)\n    return lst", "def multiples(m, n):\n    res = []\n    for i in range(1,m+1):\n        val = n*i\n        res.append(val)\n    return res", "def multiples(m, n):\n    output = []\n    for nb in range(1, m+1):\n        output.append(nb*n)\n    return output", "def multiples(m, n):\n    new = []\n    i = 1\n    while i <= m:\n        new.append(n*i)\n        i += 1\n    return new", "def multiples(m, n):\n    i = 1\n    arr = []\n    while i <= m:\n        arr.append(n*i)\n        i+=1\n    return arr", "def multiples(m, n):    \n    luvut = list(range(1,m+1))\n    _ =     map(lambda luku: luku * n,              luvut)\n    \n    return list(_)", "def multiples(to, n):\n    return [n * i for i in range(1, to+1)]", "def multiples(m, n):\n    count = 1\n    result = []\n    while count <= m:\n        result.append(count * n)\n        count += 1\n    return result", "def multiples(m, n):\n    arr = [] \n    start = 1\n    while m >= start: \n        arr.append(start * n)\n        start += 1\n    return arr\n", "def multiples(m, n):\n    nums = []\n    for i in range(1, m+1):\n        nums.append(i*n)\n    return nums\n", "def multiples(m, n):\n    l = []\n    for i in range(1, m+1):\n        c = i * n\n        l.append(c)\n\n    return l", "def multiples(m, n):\n    # Implement me! :)\n    x = 1\n    temp = 0\n    final = []\n    while x <= m:\n        temp = x * n\n        final.append(temp)\n        print (final)\n        x = x + 1\n    return final\n        \n        \n", "def multiples(m, n):\n    data = []\n    for i in range(1, m + 1):\n        data.append(i * n)\n    return data", "def multiples(m, n):\n    result = []\n    count = 1\n    for a in range(m):\n        result.append(count*n)\n        count += 1\n\n    return result", "def multiples(m, n):\n    arr = []\n    for i in range(1,m+1):\n        res = n * i\n        arr.append(res)\n    return arr", "def multiples(m, n):\n    new_list = []\n    for i in range(1,m+1):\n        new_list.append(i*n)\n    return new_list", "def multiples(m, n):\n    values = []\n    for x in range(1,m+1):\n        values.append(x * n)\n    # Implement me! :)\n    return values", "def multiples(m, n):\n    arr = []\n    s = 1\n    k = 0\n    while m > 0:\n        k = n * s\n        s += 1\n        m -= 1\n        arr.append(k)\n    return arr", "def multiples(m, n):\n    mass = []\n    for c in range (1 ,m+1):\n        mult = c*n\n        mass.append(mult)\n    return mass", "def multiples(m, n):\n    list_multiples = []\n    for i in range (1,m+1):\n        list_multiples.append(i*n)\n    return list_multiples\n        \n    # Implement me! :)\n", "def multiples(m, n):\n    list= []\n    i = 1\n    while i<= m:\n        list = list + [i*n]\n        i=i+1\n    return list", "def multiples(m, n):\n    ar = []\n    for i in range(m):\n        ar.append(n*(i+1))\n    return ar", "def multiples(m, n):\n    return [n * el for el in range(1, m + 1)]", "def multiples(m, n):\n    return [n*b for b in range(1,m+1)]", "def multiples(m, n):\n    arr=[]\n    for num in range(1,m+1):\n        arr.append(n*num)\n    \n    return arr\n", "def multiples(m, n):\n    array = []\n    for i in range(m):\n        array.append((i + 1) * n)\n    \n    return array", "def multiples(m, n):\n    final=[]\n    for num in range(1,m+1): # Iterate between 0 to m multiples\n        final.append(n*num)  # append every out to a list\n    return final", "def multiples(m, n):\n    result =[]\n    for x in range(1,m+1):\n        mul = x * n\n        result.append(mul)\n        \n        \n    return result", "def multiples(m, n):\n    # Implement me! :)\n    lis=[]\n    for x in range(1,m+1,1):\n        lis.append(n*x)\n    return lis", "def multiples(m, n):\n    multiple=[]\n    for x in range(1,m+1):\n        multiple.append(x*n)\n    return multiple        \n\nprint(multiples(5,2.0))", "def multiples(m, n):\n    ma = []\n    for i in range(1,m+1):\n        ma.append(i*n)\n    return ma", "def multiples(m, n):\n    multiples = []\n    \n    for ix in range(1,m+1):\n        multiples.append(ix * n)\n        \n    return multiples", "def multiples(m, n):\n    x = []\n    for num_jumps in range(1, m + 1):\n        x.append(n * num_jumps)\n    return x\n\n", "def multiples(m, n):\n    myarr = []\n    for i in range(1,m+1):\n        myarr.append(n*i)\n        i += 1\n    return myarr", "def multiples(m, n):\n    t = []\n    for i in range(1, m+1):\n        y = i*n\n        t.append(y)\n    return t", "def multiples(m, n):\n    x = []\n    i = 1\n    while i <= m:\n        x.append(n*i)\n        i += 1\n    return x", "def multiples(m, n):\n    arr = list()\n    for i in range(1, m+1):\n        pro = i * n\n        arr.append(pro) \n    return arr", "def multiples(m, n):\n    i = 0\n    r = []\n    while i < m:\n        r.append(n * (i+1))\n        i = i + 1\n    print(r)\n    return r", "def multiples(m, n):\n    return list([x*n for x in range(1,m+1)])", "def multiples(m, n):\n    return list(map(n.__mul__,range(1, m+1)))", "def multiples(a, b):\n\n    result = list()\n    n = 1\n    while a > 0:\n        result.append(b*n)\n        a-=1\n        n+=1\n    \n    return result", "def multiples(m, n):\n    x = []\n    for i in range(1,m+1):\n        x.append(n * i)\n    return x\n", "def multiples(m, n):\n    lt = []\n    for i in range(1,m+1):\n        lt.append(i*n)\n    return lt", "def multiples(m, n):\n    return [i * n for i in range(1,m+1)]\n\n\n    '''\n    list = []\n    for i in range(1,m+1):\n        list.append(i*n)\n    return list\n'''\n\n'''\n    \n    for i in m_list:\n        list.append(i * n)'''", "def multiples(m, n):\n    return [(n * (mult+1)) for mult in range(m)]\n", "def multiples(m, n):\n    count = 1\n    results = []\n    while count<=m:\n        results.append(count*n)\n        count+=1\n    return(results)", "def multiples(m, n):\n    list = []\n    for i in range(1,m):\n        list.append(i * n)\n    list.append(m*n)\n    return list", "def multiples(m, n):\n    list_of_multiples = []\n    \n    for i in range(1, m+1):\n        list_of_multiples.append(n * i)\n    \n    return list_of_multiples\n"]