["import re\nbase = \"too?|fore?|oo|be|are|you|please|people|really|have|know|s|[.,']\".split('|')\nnoob = \"2|4|00|b|r|u|plz|ppl|rly|haz|no|z|\".split('|')\n\ndef n00bify(text):\n    for b, n in zip(base, noob):\n        keep_casing = lambda m: n.upper() if m.group().isupper() else n\n        text = re.sub(b, keep_casing, text, flags=re.I)\n    if not text: return ''\n    if text[0] in 'hH': text = text.upper()\n    if text[0] in 'wW': text = 'LOL ' + text\n    if len(re.sub('[!?]', '', text)) >= 32: text = re.sub('\\A(LOL |)', r'\\1OMG ', text)\n    text = re.sub('([?!])', r'\\1' * len(text.split()), text).replace('!!', '!1')\n    return ' '.join(w.upper() if i%2 else w for i, w in enumerate(text.split()))", "import re\n\nreg = ((r\"[.',]\", \"\"), (r\"too?\", \"2\"), (r\"fore?\", \"4\"), (\"oo\", \"00\"), (\"be\", \"b\"),\n    (\"are\", \"r\"), (\"you\", \"u\"), (\"please\", \"plz\"), (\"people\", \"ppl\"), (\"really\", \"rly\"),\n    (\"have\", \"haz\"), (\"know\", \"no\"), (\"s\", \"z\"))\n\ndef n00bify(stg):\n    caps, lol = stg[0] in \"hH\", stg[0] in \"wW\"\n    words = [\"LOL\"] if lol else []\n    for w in stg.split():\n        first = w[0].isupper()\n        for p, r in reg:\n            w = re.sub(p, r, w, flags=re.I)\n        words.append(f\"{w[0].upper()}{w[1:]}\" if first else w)\n    if len(re.sub(r\"[?!]\", \"\", \" \".join(words))) > 31:\n        words.insert(lol, \"OMG\")\n    num, out = len(words), \" \".join(w if i % 2 else w.upper() for i, w in enumerate(words, 1))\n    out = re.sub(r\"([?!])\", r\"\\1\"*num, out).replace(\"!!\", \"!1\")\n    return out.upper() if caps else out", "def remove_punc(words):\n    if \"'\" in words:\n        temp_2 = words.partition(\"'\")\n        words = temp_2[0] + temp_2[-1]  \n        \n        words = remove_punc(words)\n        \n    if \".\" in words:\n        temp_2 = words.partition(\".\")\n        words = temp_2[0] + temp_2[-1]  \n        \n        words = remove_punc(words)\n        \n    if \",\" in words:\n        temp_2 = words.partition(\",\")\n        words = temp_2[0] + temp_2[-1]\n        \n        words = remove_punc(words)\n\n    return words\n    \ndef transw(words, old, new):\n    temp_words = words.lower().replace(old, \" \"*len(old))\n    result = \"\"\n    threshold = 0\n    for i in range(0, len(temp_words)):\n        if temp_words[i] != \" \":\n            result = result + words[i]\n        else:\n            threshold += 1\n            if threshold == len(old):           \n                result = result + new\n                threshold = 0\n    return result\n    \n\n\ndef n00bify(text):\n    temp = text.split()\n    result = \"\"\n    for i in temp:\n        \n        i = transw(i, 'too', '2')\n        i = transw(i, 'to', '2')\n        i = transw(i, 'fore','4')\n        i = transw(i, 'for', '4')\n        i = transw(i, 'oo', '00')\n        i = transw(i, 'be', 'b')\n        i = transw(i, 'you', 'u')\n        i = transw(i, 'are', 'r')\n        i = transw(i, 'please', 'plz')\n        i = transw(i, 'people', 'ppl')\n        i = transw(i, 'really', 'rly')\n        i = transw(i, 'have', 'haz')\n        i = transw(i, 'know', 'no')\n        i = transw(i, 's', 'z')\n            \n        i = remove_punc(i)\n        \n        if len(result) == 0:\n            result = result + i\n        else:\n            result = result + \" \" + i\n    \n    if result[0] == \"w\" or result[0] == \"W\":\n        result = \"LOL\" + \" \" + result\n    if result[0] == \"h\" or result[0] == \"H\":\n        result = result.upper()\n    \n            \n    t_result = result.split()   \n    \n    count = 0\n    for m in t_result:\n        for n in m:\n            if n == \"!\":\n                break\n            \n            elif n.isalnum():\n                count += 1\n    \n    count = count + len(t_result) - 1\n    \n    if count >= 32:\n        if t_result[0] == \"LOL\":\n            t_result = [\"OMG\"] + t_result\n            t_result[0] = \"LOL\"\n            t_result[1] = \"OMG\"\n        else:\n            t_result = [\"OMG\"] + t_result\n    \n    \n    for k in range(0, len(t_result)):\n        if \"?\" in t_result[k]:\n            t_result[k] = t_result[k][:t_result[k].index(\"?\")] + \"?\"*(len(t_result)-1) + t_result[k][t_result[k].index(\"?\"):]\n        \n        if \"!\" in t_result[k]:\n            add_in = \"\"\n            for l in range(0, len(t_result)):\n                if l % 2 == 0:\n                    add_in = add_in + \"!\"\n                else:\n                    add_in = add_in + \"1\"\n            \n            t_result[k] = t_result[k][:t_result[k].index(\"!\")] + add_in + t_result[k][t_result[k].index(\"!\")+1:]        \n                \n    \n    for i in range(0, len(t_result)):\n        if i % 2 != 0:\n            t_result[i] = t_result[i].upper()\n    \n                \n    return \" \".join(t_result)", "\ndef n00bify(text):\n    import re\n      \n    replaced = re.sub(r'too|to|Too|To', '2', text)\n    replaced = re.sub(r'fore|for|Fore|For|FORE', '4', replaced)\n    replaced = re.sub(r'oo|Oo', '00', replaced)\n    replaced = re.sub(r'be|Be', 'b', replaced)\n    replaced = re.sub(r'are|Are', 'r', replaced)\n    replaced = re.sub(r'you|You', 'u', replaced)\n    replaced = re.sub(r'please|Please', 'plz', replaced)\n    replaced = re.sub(r'people|People', 'ppl', replaced)\n    replaced = re.sub(r'really|Really', 'rly', replaced)\n    replaced = re.sub(r'have|Have', 'haz', replaced)\n    replaced = re.sub(r'know|Know', 'no', replaced)\n    replaced = re.sub(r's', 'z', replaced)\n    replaced = re.sub(r'S', 'Z', replaced)\n    replaced = re.sub(r\"[.,']\", '', replaced)\n    if text[0] in ['W', 'w']:\n        if len(replaced.replace('!',''))>=28:\n            replaced = 'LOL OMG ' + replaced\n        else:\n            replaced = 'LOL ' + replaced\n    else:\n        if len(replaced.replace('!',''))>=32:\n            replaced = 'OMG ' + replaced\n    if text[0] in ['H', 'h']:\n        replaced = replaced.upper()\n    replaced = ' '.join([val.upper() if (i+1)%2==0 else val for i,val in enumerate(replaced.split())])\n    num = len(replaced.split())\n    replaced = replaced.replace('?','?'*num)\n    s = ''.join(['!' if i%2==0 else '1' for i in range(num)])\n    replaced = replaced.replace('!',s)\n    return replaced\n", "import re\n\ndef n00bify(text):\n    replacementArray = [\n    (r'too', \"2\"),\n    (r'to', \"2\"),\n    (r'fore', \"4\"),\n    (r'for', \"4\"),\n    (r'oo', \"00\"),\n    (r'be', \"b\"),\n    (r'are', \"r\"),\n    (r'you', \"u\"),\n    (r'please', \"plz\"),\n    (r'people', \"ppl\"),\n    (r'really', \"rly\"),\n    (r'have', \"haz\"),\n    (r'know', \"no\"),\n    (r'\\.', \"\"),\n    (r',', \"\"),\n    (r'\\'', \"\")]\n    \n    firstLetterW = re.match(r'^w', text, flags=re.IGNORECASE)\n    firstLetterH = re.match(r'^h', text, flags=re.IGNORECASE)\n    \n    for x in replacementArray:\n        text = re.sub(x[0], x[1], text, flags=re.IGNORECASE)\n        \n    text = text.replace(\"s\", \"z\")\n    text = text.replace(\"S\", \"Z\")\n    \n    count = 0\n    for c in text:\n        if (c.isalpha() or c.isdigit()) or c == \" \":\n            count += 1\n        \n    if firstLetterW  and count >= 28:\n        text = \"LOL OMG \" + text\n    elif firstLetterW :\n        text = \"LOL \" + text\n    elif count >= 32:\n        text = \"OMG \" + text\n        \n    wordList = text.split()\n    for i in range(len(wordList)):\n        if i % 2 == 1 or firstLetterH:\n            wordList[i] = wordList[i].upper()\n    text = \" \".join(wordList)\n    \n    text = text.replace(\"?\", (\"?\" * len(wordList)))\n    text = text.replace(\"!\", exclamation(len(wordList)))\n    \n    return text\n    \ndef exclamation(n):\n    exclams = \"!1\" * (n // 2)\n    if n % 2 == 1:\n        exclams = exclams + \"!\"\n    return exclams", "def n00bify(text):\n    noobtext = marks(caps(add(replace(text))))\n    \n    return noobtext\n    \ndef replace(text):\n    text = text.replace(\",\", \"\").replace(\".\", \"\").replace(\"'\", \"\") \\\n                .replace(\"too\", \"2\").replace(\"Too\", \"2\").replace(\"TOo\", \"2\").replace(\"TOO\", \"2\") \\\n                .replace(\"to\", \"2\").replace(\"To\", \"2\").replace(\"TO\", \"2\") \\\n                .replace(\"fore\", \"4\").replace(\"Fore\", \"4\").replace(\"FOre\", \"4\").replace(\"FORE\", \"4\") \\\n                .replace(\"for\", \"4\").replace(\"For\", \"4\").replace(\"FOr\", \"4\").replace(\"FOR\", \"4\") \\\n                .replace(\"oo\", \"00\").replace(\"Oo\", \"00\").replace(\"OO\", \"00\") \\\n                .replace(\"be\", \"b\").replace(\"are\", \"r\").replace(\"you\", \"u\").replace(\"please\", \"plz\") \\\n                .replace(\"people\", \"ppl\").replace(\"really\", \"rly\").replace(\"have\", \"haz\").replace(\"know\", \"no\") \\\n                .replace(\"Be\", \"B\").replace(\"Are\", \"R\").replace(\"You\", \"U\").replace(\"Please\", \"Plz\") \\\n                .replace(\"People\", \"Ppl\").replace(\"Really\", \"Rly\").replace(\"Have\", \"Haz\").replace(\"Know\", \"No\") \\\n                .replace(\"s\", \"z\").replace(\"S\", \"Z\")\n    return text\n    \ndef add(text):\n    if text.startswith('w') or text.startswith('W'):\n        text = \"LOL \" + text\n        \n    if (len(text) - text.count(\"?\") - text.count(\"!\")) >= 32:\n        if text.startswith('LOL'):\n            text = text.replace(\"LOL\", \"LOL OMG\")\n        else:\n            text = \"OMG \" + text\n    return text\n  \ndef caps(text):\n    if text.startswith('h') or text.startswith('H'):\n        text = text.upper()\n    else:\n        words = text.split()\n        for i in range(1, len(words), 2):\n            words[i] = words[i].upper()\n        text = ' '.join(words)\n    return text\n    \ndef marks(text):\n    num_words = len(text.split()) \n    text = text.replace(\"?\", \"?\" * num_words)\n    \n    einself=\"\"\n    for i in range(0, num_words):\n        add = \"!\" if (i % 2 == 0) else \"1\"    \n        einself = einself + add\n    text = text.replace(\"!\", einself)\n    \n    return text\n"]