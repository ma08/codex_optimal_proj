["def last(*args):\n    return args[-1] if not hasattr(args[-1], \"__getitem__\") else args[-1][-1]", "def last(*args): \n    try:\n        return args[-1][-1]\n    except:\n        return args[-1]", "def last(*x):\n    try:\n        return x[-1][-1]\n    except TypeError:\n        return x[-1]", "def last(*arr):        \n    return arr[-1] if type(arr[-1]) == int else arr[-1][-1]", "from collections import Iterable\n\ndef last(*args):\n    return args[-1][-1] if isinstance(args[-1], Iterable) else args[-1]", "last=lambda *l:isinstance(l[-1], int)and l[-1]or l[-1][-1]", "def last(*args):\n    try:\n        count = len(args[-1])\n        return args[-1][-1]\n    except TypeError:\n        return args[-1]", "last = lambda *l: l[-1] if len(l)!=1 or not hasattr(l[0], \"__getitem__\") else l[0][-1]", "def last(*args):\n    last = args[-1]\n    try:\n        return last[-1]\n    except TypeError:\n        return last", "def last(*args):\n    import collections\n    if len(args) == 1:\n        if isinstance(args[0], collections.Iterable):\n            return args[0][-1]\n        else:\n            return args[0]\n    else:\n        return args[-1]\n"]