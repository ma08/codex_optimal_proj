["def simplify(n): \n    output = []\n    exp = 0\n    \n    while n:\n        n, r = divmod(n, 10)\n        if r:\n            output.append(f\"{r}*{10**exp}\" if exp else f\"{r}\")\n        exp += 1\n    \n    return \"+\".join(output[::-1])", "def simplify(number):\n    num = str(number)\n    result = []\n    for i, d in enumerate(num, start=1):\n        if d == \"0\":\n            continue\n        elif i == len(num):\n            result.append(d)\n        else:\n            result.append(d + \"*\" + \"1\" + \"0\" * (len(num) - i))\n    return \"+\".join(result)\n", "def simplify(n):\n    n = str(n)\n    return \"\".join([\"+\"+n[i]+(\"*1\"+\"0\"*(len(n)-i-1) if len(n)-i-1>0 else \"\") for i in range(0, len(n)) if n[i]!=\"0\"])[1:]\n    # . . . :D\n", "def simplify(number): \n    if number == 0: return ''\n    res = ''\n    number = str(number)\n    for i in range(len(number)):\n        if number[i] == '0': continue\n        res += f'{number[i]}*{10**(len(number)-i-1)}+'\n    res = res.replace('*1+', '')\n    if res[-1] == '+':\n        return res[:-1]\n    return res", "def simplify(n, m=0): \n    return '' if not n else f'{[\"\",\"+\"][m]}{str(n)}' if n<10 else f'{[\"\",\"+\"][m]}{str(n)[0]}*1{\"0\"*(len(str(n))-1)}' + simplify(int(str(n)[1:]),1) ", "def simplify(s): \n    a = [i for i in str(s)]\n    r =\"\"\n    l = len(a)\n    for i in range(len(a)):\n        if a[i] == \"0\": continue \n        if len(r) > 0: r+= \"+\"\n        r += a[i]\n        if i < len(a) -1: \n            r+= \"*1\" + \"0\"*(len(a) - i - 1) \n    return r", "def simplify(number: int) -> str:\n    digits = str(number)\n    res = [f\"{n}*1{'0' * i}\" for i, n in zip(list(range(len(digits) - 1, 0, -1)), digits) if n != '0']\n    return '+'.join(res + ([digits[-1]] if digits[-1] != '0' else []))\n", "def simplify(number):\n    if number == 0:\n        return \"\"\n    terms = [\n        f\"{c}*{10**i}\" if i else str(c)\n        for i, c in enumerate(str(number)[::-1])\n        if c > \"0\"\n    ]\n    return \"+\".join(reversed(terms))", "def simplify(n):\n    s = str(n)\n    l = len(s)\n    result = []\n    for i, d in enumerate(s, 1):\n        if int(d):\n            p = \"\" if l == i else f\"*{10**(l-i)}\"\n            result.append(f\"{d}{p}\")\n    return \"+\".join(result)\n\n\n#    s = str(n)\n#    return  \"+\".join(f\"{d}{f'*{10**(-i)}' if i else ''}\" for i, d in enumerate(s, -len(s)+1) if int(d))\n", "def simplify(n):\n    return \"+\".join([f\"{x}*{10**i}\" if i else x for i, x in enumerate(str(n)[::-1]) if x != \"0\"][::-1])"]