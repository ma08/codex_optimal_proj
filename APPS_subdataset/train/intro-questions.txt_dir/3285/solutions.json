["import re\ndef trump_detector(ts):\n    x=re.findall(r'([aeiou])(\\1*)',ts,re.I)\n    y=[len(i[1]) for i in x]\n    return round(sum(y)/len(y),2)", "import re\n\ndef trump_detector(trump_speech):\n    lst = [ len(tup[1]) for tup in re.findall(r'([aeiou])(\\1*)', trump_speech, re.I) ]\n    return round(sum(lst)/len(lst), 2)", "from itertools import groupby\nfrom statistics import mean\n\ndef trump_detector(trump_speech):\n    return round(mean(len(list(l))-1 for k,l in groupby(trump_speech.lower()) if k in \"aeiou\"), 2)", "import re\ndef trump_detector(s):\n    r = re.findall(r'a+|e+|i+|o+|u+', s, re.I)\n    return round(sum(len(i) - 1 for i in r) / len(r),2)", "import re\n\ndef trump_detector(trump_speech):\n    matches = re.findall(r'([aeiou])(\\1*)', trump_speech.lower(), flags=re.I)\n    if matches:\n        return round(sum(len(m[1]) for m in matches) / len(matches), 2)\n    return 0", "import re\nfrom statistics import mean\ntrump_detector = lambda s:round(mean(map(len,re.findall(r'(a+|e+|i+|o+|u+)',s.lower())))-1,2)", "from itertools import groupby\ndef trump_detector(trump_speech):\n    return round(sum((len(\"\".join(x)))-1 for i,x in groupby(trump_speech.lower()) if i in \"aeiou\")/len([i for i,_ in groupby(trump_speech.lower()) if i in \"aeiou\"]),2)", "import re;trump_detector=lambda trump_speech:(lambda lst:round(sum(lst)/len(lst),2))([len(t[1])for t in re.findall(r'([aeiou])(\\1*)',trump_speech,re.I)])", "from re import findall;trump_detector=lambda t: round(sum(map(lambda a: len(a[1]), findall(r\"([aeiou])(\\1*)\",t,2)))/len(findall(r\"([aeiou])(\\1*)\",t,2)),2)", "from re import findall, IGNORECASE\n\ndef trump_detector(trump_speech):\n\n    final = [len(c[1]) for c in findall(r'([aeiou])(\\1*)',trump_speech,IGNORECASE)]\n    \n    return round(sum(final)/len(final),2)"]