["def reverse_letter(s):\n  return ''.join([i for i in s if i.isalpha()])[::-1]\n\n", "reverse_letter = lambda s: ''.join([i for i in s if i.isalpha()])[::-1]\n", "def reverse_letter(string):\n    return ''.join(filter(str.isalpha, reversed(string)))", "import re\ndef reverse_letter(string):\n    return re.sub(\"[^a-zA-Z]\",\"\",string)[::-1]\n\n", "def reverse_letter(string):\n    return ''.join(c for c in string[::-1] if c.isalpha())\n\n", "def reverse_letter(s):\n    return ''.join(filter(str.isalpha, s))[::-1]", "reverse_letter = lambda s:''.join(reversed([x for x in s if x.isalpha()]))", "def reverse_letter(string):\n    result = ''\n    \n    for char in string:\n        if char.islower():\n            result = char + result\n    \n    return result", "def reverse_letter(string):\n    return \"\".join(c for c in string[-1::-1] if c.isalpha())", "def reverse_letter(string):\n    return\"\".join(i for i in string[::-1] if i.isalpha())\n\n", "def reverse_letter(string):\n    str = \"\"\n    for n in string:\n        if n.isalpha():\n            str = n + str\n    return str\n", "import re\ndef reverse_letter(string):\n    return \"\".join(re.findall(r\"[A-Za-z]\",string)[::-1])", "def reverse_letter(s):\n    return ''.join([i for i in s[::-1] if i.isalpha()])\n\n", "def reverse_letter(string):\n    new_string = ''\n    alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    for i in string:\n        if i in alphabet:\n            new_string += i\n    return new_string[::-1]\n        \n\n", "import string\ndef reverse_letter(string):\n    \n    return \"\".join(filter(str.isalpha,string))[::-1]\n\n", "def reverse_letter(string):\n    a = []\n    for i in string:\n        if i.isalpha():\n            a.append(i)\n            \n    return \"\".join(list(reversed(a)))", "def reverse_letter(string):\n    rev= string[::-1]\n    return \"\".join([x for x in rev if (x if x.isalpha() else None)])\n", "reverse_letter=lambda s:''.join(filter(str.isalpha,s[::-1]))", "def reverse_letter(string):\n    return ''.join(char for char in string[::-1] if char.isalpha())\n\n", "import string\ndef reverse_letter(s):\n    return ''.join(reversed([a for a in s if a in string.ascii_letters]))\n\n", "def reverse_letter(string):\n    #do your magic here\n    return ''.join(s for s in reversed(string) if s.isalpha())\n", "def reverse_letter(string):\n    revstr = string[::-1]\n    return \"\".join([x for x in list(revstr) if x.isalpha()])\n\n", "def reverse_letter(string):\n    return ''.join(c for c in string if c.isalpha())[::-1]\n\n", "reverse_letter = lambda string: ''.join([i for i in string if i.isalpha()])[::-1]", "reverse_letter = lambda s: ''.join(c for c in reversed(s) if c.isalpha())\n\n", "import array\ndef reverse_letter(string):\n    a = array.array('u', string)\n    a.reverse()\n    return ''.join(filter(lambda x: x.isalpha(), a))", "import re\n\ndef reverse_letter(string):\n    return re.sub(r\"[^a-z]\", \"\", string[::-1])", "def reverse_letter(string):\n    string=str().join(list(filter(str.isalpha, string)))\n    return string[::-1]\n    #do your magic here\n\n", "def reverse_letter(string):\n  return ''.join(x for x in reversed(string) if x.isalpha())\n\n", "reverse_letter = lambda s: ''.join(filter(lambda x: x.isalpha(), s))[::-1]", "def reverse_letter(string):\n    return ''.join(x for x in string[::-1] if x.isalpha())\n\n", "reverse_letter=lambda s: \"\".join(l for l in s if l.isalpha())[::-1]", "def reverse_letter(string):\n    txt = \"\"\n    for a in string:\n        if a.isalpha():\n            txt = txt + a\n    return txt[::-1]\n\n", "def reverse_letter(string):\n    array = list(filter(str.isalpha, string))\n    new_list = ''.join(array)\n    return new_list[::-1]\n\n", "def reverse_letter(string):\n    string = string[::-1]\n    string2=\"\"\n    for x in range(0,len(string)):\n        if(string[x].isalpha()):\n            string2+=string[x]\n            \n    return string2\n\n", "import re\ndef reverse_letter(st):\n    newst = st[::-1]\n    itog = \"\"\n    for i in newst:\n        if i.isalpha():\n            itog += i\n    return (itog)\n\n        \n", "def reverse_letter(string):\n    result = [i for i in string if i.isalpha()]\n    return ''.join(result[::-1]) \n\n    \n# condition must be alphabetic\n", "import string\n\ndef reverse_letter(str):\n    chars = string.ascii_lowercase\n    return ''.join(i for i in str[::-1] if i in chars)    ", "def reverse_letter(string):\n    alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    newString = ''\n    for letter in string:\n        if letter in alphabet:\n            newString += letter\n        else:\n            continue\n    return newString[::-1]\n\n", "def reverse_letter(string):\n    #do your magic here\n    word = []\n    for i in string:\n        if i.isalpha() == True:\n            word.append(i)\n    \n    word = reversed(word)\n    \n    word_rev = \"\".join(word)\n\n    return word_rev", "def reverse_letter(string):\n    chars_only = ''\n    \n    for item in string:\n        if item.isalpha():\n            chars_only += item\n    return chars_only[::-1] \n\n", "def reverse_letter(string):\n    return ''.join([i if i.isalpha() else \"\" for i in reversed(string)])\n", "def reverse_letter(string):\n    a = []\n    a[:] = string\n    a.reverse()\n    b = []\n    c = ''\n    let = ['a', 'b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n    for s in a:\n        if s in let:\n            b.append(s)\n    for ele in b:\n        c+=ele\n    return c\n\n", "def reverse_letter(string):\n    new = [s for s in string if s.isalpha()]\n    a = new\n    a.reverse()\n    return ''.join(list(a))\n\n", "def reverse_letter(string):\n    return ''.join(reversed([char for char in string if char.isalpha()]))\n\n", "import string\ndef reverse_letter(string):\n    phrase=[]\n    alpha=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n    for letter in string:\n        if letter in alpha:\n            phrase.append(letter)\n    return ''.join(reversed(phrase))\n    \nreverse_letter('hello')\n\n", "def reverse_letter(string):\n    alphabet = {\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"}\n    a = list(string)\n    new = []\n    for k in range(0,len(a)):\n        if a[k] in alphabet:\n            new.append(a[k])\n    \n    b = list(range(0,len(new)))\n    \n    for i in range(0,len(new)):\n        b[i] = new[len(new)-1-i]\n    \n    out = \"\"\n    for j in range(0,len(new)):\n        out += str(b[j])\n    return out\n\n", "def reverse_letter(string):\n    result=\"\"\n    for letter in string:\n        if letter.isalpha():\n           result+=letter\n        else:\n           del(letter)\n    result2=result[::-1]\n    return(result2)\n", "def reverse_letter(string):\n    return \"\".join(list(reversed([n for n in string if n.isalpha()])))\n\n", "def reverse_letter(string):\n    reversed = ''\n    for char in string:\n        if char.isalpha():\n            reversed += char\n    return reversed[::-1]\n\n", "def reverse_letter(string):\n    #do your magic here\n    n=len(string)\n    str=\"\"\n    for i in range(n):\n      if string[i].isalpha() == True:\n         str=str+string[i] \n        \n\n        \n        \n    return str[::-1]", "def reverse_letter(string):\n    #do your magic here\n    newString = \"\"\n    for word in string:\n        if word.isalpha():\n            newString = word + newString\n        \n            \n    return newString\n", "def reverse_letter(string):\n    r=len(string)\n    s=\"\"\n    for i in range(r):\n        if(string[i].isalpha()):\n            s=s+string[i]\n    return s[::-1]\n", "import re\ndef reverse_letter(string):\n    return re.sub(r\"\"\"[0-9!@#$%^&*?/ \\/(/)/{/}/+/-/*/[/\\]/~/`/./,/>/</'/\"/?\\=\\\\:_|\\-;]\"\"\",\"\", string)[::-1]\n\n", "def reverse_letter(string):\n    s = \"\"\n    for c in string[::-1]:\n        if c.isalpha():\n            s += c\n    return s\n\n", "letters = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"]\ndef reverse_letter(string):\n    string = string[::-1]\n    returner = []\n    for item in string:\n        if item in letters:\n            returner.append(item)\n    return ''.join(returner)\n\n\n", "def reverse_letter(string):\n    result = \"\"\n    for i in range(1,len(string)+1):\n        if string[-i].isalpha():\n            result += string[-i]\n    return result\n\n", "def reverse_letter(string):\n    x = filter(str.isalpha, string)\n    return \"\".join(i for i in list(x))[::-1]", "import string\n\ndef reverse_letter(s):\n    abc = list(string.ascii_lowercase)\n    result = []\n    for i in s[::-1]:\n        if i in abc:\n            result.append(i)\n    return \"\".join(result)\n\n", "def reverse_letter(string):\n    answer = []\n    for a in string[::-1]:\n        if a.isalpha() == True:\n            answer.append(a)\n    return ''.join(answer)", "def reverse_letter(string):\n    ls = list(string)\n    reverse = ls.reverse()\n    reversed_cleaned = ''\n    for i in range(len(ls)):\n        if ls[i].isalpha():\n            reversed_cleaned += ls[i]\n    return reversed_cleaned\n", "\ndef reverse_letter(string):\n    reversed = ''\n    length = len(string)\n    for m in range(length):\n        reversed = reversed + string[(length - 1) - m]\n    abc = 'abcdefghijklmnopqrstuvwxyz'\n    reversed_cleaned = ''\n    for n in range(length):\n        if reversed[n] in abc:\n            reversed_cleaned += reversed[n]\n    return reversed_cleaned\n        \n", "def reverse_letter(string):\n    res = ''\n    for i in range(len(string)-1, -1, -1):\n        if string[i] in 'abcdefghijklmnopqrstuvwxyz':\n            res += string[i]\n    return res\n\n", "import re\n\n\ndef reverse_letter(string):\n    str = re.sub(\"[^a-z]\", \"\", string)\n    return str[::-1]\n\n", "def reverse_letter(a):\n    ans=''\n    a = list(a)\n    while len(a)>0:\n        b = a.pop()\n        if b.isalpha():\n            ans = ans + b\n            print(ans)\n    return ans        \n        \n", "def reverse_letter(string):\n    arr = list(filter(str.isalpha, string))\n    arr.reverse()\n    return ''.join(arr)\n", "def reverse_letter(string):\n    str = ''.join([x if x.isalpha() else '' for x in string])\n    return str[::-1]\n\n", "def reverse_letter(string):\n    gnirts = ''\n    for i in range(0,len(string)):\n        if string[i].isalpha():\n            gnirts = string[i]+gnirts\n    return gnirts\n\n", "def reverse_letter(string):\n    #do your magic here\n    alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    s = ''\n    for letter in string:\n        if letter in alphabet: \n            s = letter + s\n    \n    return s", "def reverse_letter(string):\n    li = []\n    for i in string:\n        if i.isalpha():\n            li.append(i)\n        else:\n            pass\n    return \"\".join(li[::-1])\n    \n    #do your magic here\n\n", "def reverse_letter(string):\n    return \"\".join(s for s in string if 97 <= ord(s) <= 122)[::-1]\n\n", "def reverse_letter(string):\n    list = ''\n    list1 = list.join([c for c in string if c.isalpha()])\n    return list1[::-1]\n\n\n", "def reverse_letter(string):\n    only_char = \"\"\n    for char in string:\n        if char.isalpha():\n            only_char+=char\n    return only_char[::-1]\n\n", "def reverse_letter(line):\n    letters = list(filter(str.isalpha, list(line)))\n    letters.reverse()\n    return ''.join(letters)\n\n", "def reverse_letter(string):\n    ans =[]\n    for i in list(string):\n        if i.isalpha():\n            ans.append(i)\n    a = \"\".join(ans)[::-1]\n    return a", "def reverse_letter(string):\n    str = \"\".join(x for x in string if x.isalpha())\n    return str[::-1]\n                 \n\n", "import pandas as pd\ndef reverse_letter(s):\n    return ''.join([i for i in s if i.isalpha()])[::-1]\n\n", "def reverse_letter(string):\n    out = []\n    for n in range(len(string)):\n        if string[n].isalpha():\n            out.insert(0, string[n])\n    return ''.join(out)", "def reverse_letter(string):\n    word = [x for x in string[::-1] if x.isalpha()]\n    return ''.join(word)\n\n", "def reverse_letter(string):\n    res = \"\".join([a for a in string[::-1] if a.isalpha()])\n    return res\n    \n", "def reverse_letter(string):\n    result =  list(string[::-1])\n    answer = []\n    for i in result:\n        if i.isalpha():\n            answer.append(i)\n    return ''.join(answer)\n        \n        \n    \n\n", "def reverse_letter(string):\n    lst = ''.join([i for i in string if i.isalpha()])\n    rev = lst[::-1]\n    return rev\n\n", "import re\n\ndef reverse_letter(string):\n    regex = re.compile('[^a-z]')\n    reg = regex.sub('', string)\n\n    reverse_word = reg[::-1]\n\n    return reverse_word", "def reverse_letter(s):\n    a = [i for i in s if i.isalpha()]\n    a = ''.join(a)\n    return a[::-1]\n\n", "import string\ndef reverse_letter(input_str):\n    return \"\".join([c for c in input_str if c in string.ascii_letters][::-1])\n\n", "def reverse_letter(string):\n    return ''.join(i if i.isalpha() else '' for i in string)[::-1]", "def reverse_letter(string):\n    return ''.join((string[i] if string[i].isalpha() else \"\") for i in reversed(list(range(len(string)))))\n\n", "def reverse_letter(string):\n    return \"\".join(c if c.isalpha() else \"\" for c in string)[::-1]\n\n", "def reverse_letter(string):\n    #do your magic here\n    alphabet=\"abcdefghijklmnopqrstuvwxyz\"\n    reversed_word = list()\n    for letter in string:\n        if letter in alphabet:\n            reversed_word.append(letter) \n    reversed_word.reverse()\n    return \"\".join(reversed_word)\n\n", "def reverse_letter(string):\n    result = ''.join(x for x in string if x.isalpha())\n    return result[::-1]\n\n", "def reverse_letter(string):\n    lst = list(string)\n    lst.reverse()\n    newlst = []\n    for item in lst:\n        if not item.isalpha():\n            pass\n        else:\n            newlst.append(item)\n    return \"\".join(newlst)\n\n", "def reverse_letter(string):\n    outputArray = []\n    for a in string:\n        if a.isalpha():\n            outputArray.append(a)\n    outputArray.reverse()\n    return \"\".join(outputArray)\n\n", "from string import ascii_lowercase\n\ndef reverse_letter(string):\n    return ''.join(l for l in string[::-1] if l in ascii_lowercase )\n\n", "def reverse_letter(string):\n    alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    x =''\n    for letter in string:\n        if letter in alphabet:\n            x += letter\n    return x[::-1]\n\n", "def reverse_letter(string):\n  iaprw = []\n  for i in string:\n    if i.isalpha() == True:\n      iaprw.append(i)\n  iaprw.reverse()\n  return ''.join(iaprw)", "def reverse_letter(string):\n    lt='qwertyuiopalskjdhfgzxcvbnm'\n    s=''\n    for i in string:\n        if i in lt:\n            s=s+i\n    return s[::-1]", "def reverse_letter(string):\n    s = ''.join(filter(str.isalpha, string))\n    inverse = s[::-1]\n    return inverse\n\n", "def reverse_letter(string):\n    reversed = \"\"\n    for i in range(len(string)-1, -1, -1):\n        if string[i].isalpha():\n            reversed += string[i]\n    return reversed\n\n", "\ndef reverse_letter(string):   \n    result = ''.join([i for i in string if not i.isdigit()])\n    alphanumeric = ''.join([i for i in result if i.isalnum()])\n            \n    return alphanumeric[::-1]\n\n\n\n\n", "def reverse_letter(string):\n    arr = list(string)\n    arr2 = []\n    for j in range(0,len(arr)):\n        if arr[j].isalpha() == True:\n            arr2.append(arr[j])\n    return \"\".join(arr2[::-1])\n            \n\n"]