["def finance(n):\n    return n * (n + 1) * (n + 2) / 2", "def finance(n):\n    savings = 0\n    for weeks in range(n+1):\n        for days in range(weeks,n+1):\n            savings += weeks + days\n    return savings", "finance = lambda n: n * (n + 1) * (n + 2) / 2\n", "def finance(n):\n    # For each n, there are (n + 1) * (n + 2) / 2 cells with values.\n    # For each n, the average value for each cell is n.\n    # So for each n, the amount financed is n * [(n + 1) * (n + 2) / 2]\n    return n * ((n + 1) * (n + 2) / 2)", "def finance(n):\n    return sum((i + 1) * 3 * i // 2 for i in range(1, n+1))", "def finance(n):\n    week = [sum(range(2*i, n+i+1)) for i in range(n+1)]\n    return sum(week)", "def finance(n):\n    return sum([sum(range(2*i,i+n+1)) for i in range(n+1)])", "def finance(n):\n    return n * (n+1) * (n+2) // 2", "def finance(n):\n    return sum( i*(2*i+1)-i*(i-1)/2  for i in range(1, n+1) )", "def finance(n):\n    return sum([sum(range(2*a, 2*n + 1 - 2*a)) for a in range(n)])"]