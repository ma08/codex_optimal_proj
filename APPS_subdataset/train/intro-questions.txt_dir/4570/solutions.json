["def clean_string(s):\n    stk = []\n    for c in s:\n        if c=='#' and stk: stk.pop()\n        elif c!='#':       stk.append(c)\n    return ''.join(stk)", "def clean_string(s):\n    result = []\n    for c in s:\n        if c == '#':\n            if result:\n                result.pop()\n        else:\n            result.append(c)\n    return ''.join(result)", "import re\n\ndef clean_string(s):\n  while '#' in s:\n    s = re.sub('.?#', '', s, count=1)\n  return s", "def clean_string(s):\n    arr = []\n    for a in s:\n        if a != '#':\n            arr.append(a)\n        elif arr:\n            arr.pop()\n    return ''.join(arr)", "def clean_string(string):\n    out = ''\n    for x in string:\n        if x != '#': out += x\n        else: out = out[:-1] \n    return out", "import re\n\ndef clean_string(s):\n    return clean_string(re.sub('[^#]{1}#', '', s).lstrip('#')) if '#' in s else s\n", "import regex\n\ndef clean_string(s):\n    return regex.sub(r'[^#]((?R)*)#+|\\A#+', '', s)", "from functools import reduce\n\ndef clean_string(s):\n  return reduce(lambda x, y: x[:-1] if y == '#' else x+y, s, \"\")", "def clean_string(s):\n    \n    ans=\"\"\n    for letter in s:\n        if letter == \"#\":\n           if len(ans)> 0:\n              ans = ans[:-1]\n        else:\n           ans += letter\n\n    return ans\n         \n", "clean_string=c=lambda s,o='':c(s[1:],o[:-1]if'#'==s[0]else o+s[0])if s else o"]