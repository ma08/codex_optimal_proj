["def correct_polish_letters(s):\n    return s.translate(str.maketrans(\"\u0105\u0107\u0119\u0142\u0144\u00f3\u015b\u017a\u017c\", \"acelnoszz\"))", "def correct_polish_letters(st):\n    l = \"\u0105\u0107\u0119\u0142\u0144\u00f3\u015b\u017a\u017c\"\n    lt = \"acelnoszz\"\n    for i in range(len(l)):\n        st = st.replace(l[i], lt[i])\n    return st", "def correct_polish_letters(st): \n    d={'\u0105':'a',\n    '\u0107':'c',\n    '\u0119':'e',\n    '\u0142':'l',\n    '\u0144':'n',\n    '\u00f3':'o',\n    '\u015b':'s',\n    '\u017a':'z',\n    '\u017c':'z'}\n    return \"\".join(d[c] if c in d else c for c in st)", "correct_polish_letters = lambda st: st.translate(str.maketrans('\u0105\u0107\u0119\u0142\u0144\u00f3\u015b\u017a\u017c', 'acelnoszz'))", "def correct_polish_letters(st): \n    rules = {\n        '\u0105': 'a',\n        '\u0107': 'c',\n        '\u0119': 'e',\n        '\u0142': 'l',\n        '\u0144': 'n',\n        '\u00f3': 'o',\n        '\u015b': 's',\n        '\u017a': 'z',\n        '\u017c': 'z'\n        }\n    return ''.join(map(lambda c: rules[c] if c in rules else c, st))", "def correct_polish_letters(stg): \n    return stg.translate(str.maketrans(\"\u0105\u0107\u0119\u0142\u0144\u00f3\u015b\u017a\u017c\", \"acelnoszz\"))", "def correct_polish_letters(st): \n    return st.translate(st.maketrans(\"\u0105\u0107\u0119\u0142\u0144\u00f3\u015b\u017a\u017c\", \"acelnoszz\"))\n", "def correct_polish_letters(st): \n    alphabet = {'\u0105':'a', '\u0107':'c', '\u0119':'e', '\u0142':'l', '\u0144':'n',\n                '\u00f3':'o', '\u015b':'s', '\u017a':'z', '\u017c':'z'}\n    \n    result = ''\n    for i in st:\n        if i in alphabet:\n            result += alphabet[i]\n        else:\n            result += i\n            \n    return result", "def correct_polish_letters(st): \n    return st.translate(str.maketrans(\"\u0105\u0107\u0119\u0142\u0144\u00f3\u015b\u017a\u017c\", \"acelnoszz\"))", "\nintab = '\u0105\u0107\u0119\u0142\u0144\u00f3\u015b\u017a\u017c'\nouttab = 'acelnoszz'\npolish = str.maketrans(intab, outtab)\n\ndef correct_polish_letters(st): \n    return st.translate(polish)", "def correct_polish_letters(st): \n    new_str =''\n    for i in range(0,len(st)):\n    \n        # print(st)\n        if st[i] == '\u0105': new_str+='a'\n        elif st[i] == '\u0119' :new_str+='e'\n        elif st[i] == '\u0107': new_str+='c'\n        elif st[i] == '\u0142': new_str+='l'\n        elif st[i] == '\u0144' : new_str+= 'n'\n        elif st[i] == '\u00f3': new_str+='o'\n        elif st[i] == '\u015b': new_str+='s'\n        elif st[i] == '\u017a' : new_str+='z'\n        elif st[i] == '\u017c' : new_str+='z'\n\n        else :  new_str+= st[i]\n    return new_str\n\n", "def correct_polish_letters(s):\n  pol_to_eng = {\n    \"\u0105\": \"a\",\n    \"\u0107\": \"c\",\n    \"\u0119\": \"e\",\n    \"\u0142\": \"l\",\n    \"\u0144\": \"n\",\n    \"\u00f3\": \"o\",\n    \"\u015b\": \"s\",\n    \"\u017a\": \"z\",\n    \"\u017c\": \"z\",\n  }\n  return \"\".join(pol_to_eng.get(c) or c for c in s)", "import re\n\ndef correct_polish_letters(s):\n    pol_to_eng = {\n      \"\u0105\": \"a\",\n      \"\u0107\": \"c\",\n      \"\u0119\": \"e\",\n      \"\u0142\": \"l\",\n      \"\u0144\": \"n\",\n      \"\u00f3\": \"o\",\n      \"\u015b\": \"s\",\n      \"\u017a\": \"z\",\n      \"\u017c\": \"z\",\n    }\n    return re.sub(\n        r\"[\u0105\u0107\u0119\u0142\u0144\u00f3\u015b\u017a\u017c]\",\n        lambda matchobj: pol_to_eng[matchobj.group()],\n        s\n    )", "def correct_polish_letters(str_: str) -> str:\n    \"\"\" Change the letters with diacritics. \"\"\"\n    return str_.translate(\n        str.maketrans(\n            {\n                \"\u0105\": \"a\",\n                \"\u0107\": \"c\",\n                \"\u0119\": \"e\",\n                \"\u0142\": \"l\",\n                \"\u0144\": \"n\",\n                \"\u00f3\": \"o\",\n                \"\u015b\": \"s\",\n                \"\u017a\": \"z\",\n                \"\u017c\": \"z\"\n            }\n        )\n    )", "import unicodedata\n\ndef correct_polish_letters(st): \n    mapper = {\"\u0105\": \"a\", \"\u0107\": \"c\", \"\u0119\": \"e\", \"\u0142\": \"l\", \"\u0144\": \"n\", \"\u00f3\": \"o\", \"\u015b\": \"s\", \"\u017a\": \"z\", \"\u017c\": \"z\"}\n\n    return ''.join([mapper[c] if c in mapper else c for c in st])", "correct_polish_letters = lambda s: ''.join({'\u0105': 'a', '\u0107': 'c', '\u0119': 'e',\n                                            '\u0142': 'l', '\u0144': 'n', '\u00f3': 'o',\n                                            '\u015b': 's', '\u017a': 'z', '\u017c': 'z'}.get(c, c) for c in s)", "def correct_polish_letters(st):\n    letters = {\"\u0105\":\"a\",\n              \"\u0107\":\"c\",\n              \"\u0119\":\"e\",\n              \"\u0142\":\"l\",\n              \"\u0144\":\"n\",\n              \"\u00f3\":\"o\",\n              \"\u015b\":\"s\",\n              \"\u017a\":\"z\",\n              \"\u017c\":\"z\"}\n    result = \"\"\n    for s in st:\n        if s in letters:\n            result = result + letters.get(s)\n        else:\n            result = result + s\n    return result", "correct_polish_letters = lambda s: s.translate(str.maketrans(\"\u0105\u0107\u0119\u0142\u0144\u00f3\u015b\u017a\u017c\", \"acelnoszz\")) ", "def correct_polish_letters(st): \n    replace = {\n        '\u0105': 'a',\n        '\u0107': 'c',\n        '\u0119': 'e',\n        '\u0142': 'l',\n        '\u0144': 'n',\n        '\u00f3': 'o',\n        '\u015b': 's',\n        '\u017a': 'z',\n        '\u017c': 'z'\n    }\n    return ''.join(replace.get(letter, letter) for letter in st)", "def correct_polish_letters(st): \n\n    if '\u0105' in st:\n        st = st.replace('\u0105','a')\n    if '\u0107' in st:\n        st = st.replace('\u0107','c')\n    if '\u0119' in st:\n        st = st.replace('\u0119','e')\n    if '\u0142' in st:\n        st = st.replace('\u0142','l')\n    if '\u0144' in st:\n        st = st.replace('\u0144','n')\n    if '\u00f3' in st:\n        st = st.replace('\u00f3','o')\n    if '\u015b' in st:\n        st = st.replace('\u015b','s')\n    if '\u017a' in st:\n        st = st.replace('\u017a','z')\n    if '\u017c' in st:\n        st = st.replace('\u017c','z')\n        \n    return st\n        \n", "dic = {\n  \"\u0105\" : \"a\",\n  \"\u0107\" : \"c\",\n  \"\u0119\" : \"e\",\n  \"\u0142\" : \"l\",\n  \"\u0144\" : \"n\",\n  \"\u00f3\" : \"o\",\n  \"\u015b\" : \"s\",\n  \"\u017a\" : \"z\",\n  \"\u017c\" : \"z\"\n}\n\ndef correct_polish_letters(st): \n    for key, val in list(dic.items()):\n        if key in st:\n            st = st.replace(key, val)\n    return st\n", "db = {\n'\u0105': 'a',\n'\u0107': 'c',\n'\u0119': 'e',\n'\u0142': 'l',\n'\u0144': 'n',\n'\u00f3': 'o',\n'\u015b': 's',\n'\u017a': 'z',\n'\u017c': 'z',    \n}\ndef correct_polish_letters(st): \n    return ''.join((db.get(i, i) for i in st))\n", "def correct_polish_letters(st): \n    map = {\n     '\u0105': 'a',\n     '\u0107': 'c',\n     '\u0119': 'e',\n     '\u0142': 'l',\n     '\u0144': 'n',\n     '\u00f3': 'o',\n     '\u015b': 's',\n     '\u017a': 'z',\n     '\u017c': 'z',\n    }\n    for key in map.keys():\n        st = st.replace(key, map[key])\n    return st", "def correct_polish_letters(st): \n    dict = {\"\u0105\": \"a\", \"\u0107\": \"c\", \"\u0119\": \"e\", \"\u0142\": \"l\", \"\u0144\": \"n\", \"\u00f3\": \"o\", \"\u015b\": \"s\", \"\u017a\": \"z\", \"\u017c\": \"z\"}\n    output = \"\"\n    \n    for x in st:\n        if x in dict:\n            output += dict[x]\n        else:\n            output += x\n            \n    return output        ", "def correct_polish_letters(st): \n    polish = ['\u0105', '\u0107', '\u0119', '\u0142', '\u0144', '\u00f3', '\u015b', '\u017a', '\u017c']\n    changeTo = ['a', 'c', 'e', 'l', 'n', 'o', 's', 'z', 'z']\n    converted = []\n    for letter in st:\n        if letter in polish:\n            i = polish.index(letter)\n            converted.append(changeTo[i])\n        else:\n            converted.append(letter)\n    return ''.join(converted)\n", "def correct_polish_letters(st):\n    trans = {\"\u0105\": \"a\", \"\u0107\": \"c\", \"\u0119\": \"e\", \"\u0142\": \"l\", \"\u0144\": \"n\", \n             \"\u00f3\": \"o\", \"\u015b\": \"s\", \"\u017a\": \"z\", \"\u017c\": \"z\"}\n    return \"\".join(trans.get(s, s) for s in st)", "def correct_polish_letters(st): \n    st2=''\n    arr=[]\n    for i in st:\n        arr.append(i)\n    letters=[['\u0105', '\u0107', '\u0119', '\u0142', '\u0144', '\u00f3', '\u015b', '\u017a', '\u017c'], ['a', 'c', 'e', 'l', 'n', 'o', 's', 'z', 'z']]\n    for i in range(len(arr)):\n        for j in range(len(letters[0])):\n            if arr[i]==letters[0][j]:\n                arr[i]=letters[1][j]\n    for i in arr:\n        st2+=i\n    return st2", "def correct_polish_letters(st): \n    letters_dict = {'\u0105': 'a', '\u0107': 'c', '\u0119': 'e', '\u0142': 'l', '\u0144': 'n', '\u00f3': 'o', '\u015b': 's', '\u017a': 'z', '\u017c': 'z'}\n    eng_string = ''\n    for letter in st:\n        if letter in letters_dict.keys():\n            eng_string += letters_dict[letter]\n        else:\n            eng_string += letter\n    return eng_string", "def correct_polish_letters(st): \n    dict = {\n        '\u0105' : 'a',\n        '\u0107' : 'c',\n        '\u0119' : 'e',\n        '\u0142' : 'l',\n        '\u0144' : 'n',\n        '\u00f3' : 'o',\n        '\u015b' : 's',\n        '\u017a' : 'z',\n        '\u017c' : 'z'\n    }\n    return ''.join(dict.get(c, c) for c in st)", "def correct_polish_letters(st): \n    change = str.maketrans('\u0105\u0107\u0119\u0142\u0144\u00f3\u015b\u017a\u017cz', 'acelnoszzz')\n    return st.translate(change)", "def correct_polish_letters(st): \n    let = {\n        \"\u0105\":\"a\",\n        \"\u0107\":\"c\",\n        \"\u0119\":\"e\",\n        \"\u0142\":\"l\",\n        \"\u0144\":\"n\",\n        \"\u00f3\":\"o\",\n        \"\u015b\":\"s\",\n        \"\u017a\":\"z\",\n        \"\u017c\":\"z\"\n    }\n    new = \"\"\n    for i in st:\n        if i in let:\n            new += let[i]\n        else:\n            new += i\n    \n    return new", "def correct_polish_letters(text): \n    x = {'\u0105': 'a', '\u0107': 'c', '\u0119': 'e', '\u0142': 'l', '\u0144': 'n', '\u00f3': 'o', '\u015b': 's', '\u017a': 'z', '\u017c': 'z'}\n    \n    for key in list(x.keys()):\n        text = text.replace(key, str(x[key]))\n    return text\n  \n", "def correct_polish_letters(st): \n    polish = {\n        '\u0105':'a',\n        '\u0107':'c',\n        '\u0119':'e',\n        '\u0142':'l',\n        '\u0144':'n',\n        '\u00f3':'o',\n        '\u015b':'s',\n        '\u017a':'z',\n        '\u017c':'z'\n    }    \n    return \"\".join([polish.get(char, char) for char in st])\n", "def correct_polish_letters(st): \n    d = {'\u0105':'a', '\u0107':'c', '\u0119':'e', '\u0142':'l', '\u0144':'n',\n                '\u00f3':'o', '\u015b':'s', '\u017a':'z', '\u017c':'z'}\n    ans = ''\n    for char in st:\n        if char in d:\n            ans += d[char]\n        else:\n            ans += char\n    return ans", "import unicodedata\n\nNON_NFKD_MAP = {'\\u0181': 'B', '\\u1d81': 'd', '\\u1d85': 'l', '\\u1d89': 'r', '\\u028b': 'v', '\\u1d8d': 'x', '\\u1d83': 'g', '\\u0191': 'F', '\\u0199': 'k', '\\u019d': 'N', '\\u0220': 'N', '\\u01a5': 'p', '\\u0224': 'Z', '\\u0126': 'H', '\\u01ad': 't', '\\u01b5': 'Z', '\\u0234': 'l', '\\u023c': 'c', '\\u0240': 'z', '\\u0142': 'l', '\\u0244': 'U', '\\u2c60': 'L', '\\u0248': 'J', '\\ua74a': 'O', '\\u024c': 'R', '\\ua752': 'P', '\\ua756': 'Q', '\\ua75a': 'R', '\\ua75e': 'V', '\\u0260': 'g', '\\u01e5': 'g', '\\u2c64': 'R', '\\u0166': 'T', '\\u0268': 'i', '\\u2c66': 't', '\\u026c': 'l', '\\u1d6e': 'f', '\\u1d87': 'n', '\\u1d72': 'r', '\\u2c74': 'v', '\\u1d76': 'z', '\\u2c78': 'e', '\\u027c': 'r', '\\u1eff': 'y', '\\ua741': 'k', '\\u0182': 'B', '\\u1d86': 'm', '\\u0288': 't', '\\u018a': 'D', '\\u1d8e': 'z', '\\u0111': 'd', '\\u0290': 'z', '\\u0192': 'f', '\\u1d96': 'i', '\\u019a': 'l', '\\u019e': 'n', '\\u1d88': 'p', '\\u02a0': 'q', '\\u01ae': 'T', '\\u01b2': 'V', '\\u01b6': 'z', '\\u023b': 'C', '\\u023f': 's', '\\u0141': 'L', '\\u0243': 'B', '\\ua745': 'k', '\\u0247': 'e', '\\ua749': 'l', '\\u024b': 'q', '\\ua74d': 'o', '\\u024f': 'y', '\\ua751': 'p', '\\u0253': 'b', '\\ua755': 'p', '\\u0257': 'd', '\\ua759': 'q', '\\xd8': 'O', '\\u2c63': 'P', '\\u2c67': 'H', '\\u026b': 'l', '\\u1d6d': 'd', '\\u1d71': 'p', '\\u0273': 'n', '\\u1d75': 't', '\\u1d91': 'd', '\\xf8': 'o', '\\u2c7e': 'S', '\\u1d7d': 'p', '\\u2c7f': 'Z', '\\u0183': 'b', '\\u0187': 'C', '\\u1d80': 'b', '\\u0289': 'u', '\\u018b': 'D', '\\u1d8f': 'a', '\\u0291': 'z', '\\u0110': 'D', '\\u0193': 'G', '\\u1d82': 'f', '\\u0197': 'I', '\\u029d': 'j', '\\u019f': 'O', '\\u2c6c': 'z', '\\u01ab': 't', '\\u01b3': 'Y', '\\u0236': 't', '\\u023a': 'A', '\\u023e': 'T', '\\ua740': 'K', '\\u1d8a': 's', '\\ua744': 'K', '\\u0246': 'E', '\\ua748': 'L', '\\ua74c': 'O', '\\u024e': 'Y', '\\ua750': 'P', '\\ua754': 'P', '\\u0256': 'd', '\\ua758': 'Q', '\\u2c62': 'L', '\\u0266': 'h', '\\u2c73': 'w', '\\u2c6a': 'k', '\\u1d6c': 'b', '\\u2c6e': 'M', '\\u1d70': 'n', '\\u0272': 'n', '\\u1d92': 'e', '\\u1d74': 's', '\\u2c7a': 'o', '\\u2c6b': 'Z', '\\u027e': 'r', '\\u0180': 'b', '\\u0282': 's', '\\u1d84': 'k', '\\u0188': 'c', '\\u018c': 'd', '\\ua742': 'K', '\\u1d99': 'u', '\\u0198': 'K', '\\u1d8c': 'v', '\\u0221': 'd', '\\u2c71': 'v', '\\u0225': 'z', '\\u01a4': 'P', '\\u0127': 'h', '\\u01ac': 'T', '\\u0235': 'n', '\\u01b4': 'y', '\\u2c72': 'W', '\\u023d': 'L', '\\ua743': 'k', '\\u0249': 'j', '\\ua74b': 'o', '\\u024d': 'r', '\\ua753': 'p', '\\u0255': 'c', '\\ua757': 'q', '\\u2c68': 'h', '\\ua75b': 'r', '\\ua75f': 'v', '\\u2c61': 'l', '\\u2c65': 'a', '\\u01e4': 'G', '\\u0167': 't', '\\u2c69': 'K', '\\u026d': 'l', '\\u1d6f': 'm', '\\u0271': 'm', '\\u1d73': 'r', '\\u027d': 'r', '\\u1efe': 'Y'}\n\ndef correct_polish_letters(st):\n\n    if not isinstance(st, str):\n        st = str(st)\n\n    return ''.join(NON_NFKD_MAP[c] if c in NON_NFKD_MAP else c \\\n                   for part in unicodedata.normalize('NFKD', st) for c in part\n                   if unicodedata.category(part) != 'Mn')\n\n", "def correct_polish_letters(st): \n    result = \"\"\n    alphabet = { \"\u0105\": \"a\",\n     \"\u0107\": \"c\",\n     \"\u0119\": \"e\",\n     \"\u0142\": \"l\",\n     \"\u0144\": \"n\",\n     \"\u00f3\": \"o\",\n     \"\u015b\": \"s\",\n     \"\u017a\": \"z\",\n     \"\u017c\": \"z\"}\n    \n    for n in st:\n        if n in alphabet:\n            result += alphabet[n]\n        else:\n            result += n\n    \n    return result\n    \n    \n", "def correct_polish_letters(st): \n    polish = '\u0105\u0107\u0119\u0142\u0144\u00f3\u015b\u017a\u017c'\n    english = 'acelnoszz'\n    for i in range(9):\n        st = st.replace(polish[i], english[i])\n    return st", "def correct_polish_letters(st): \n    polish, latin = '\u0105\u0107\u0119\u0142\u0144\u00f3\u015b\u017a\u017c', 'acelnoszz'\n    for i in polish:\n        st = st.replace(i, latin[polish.find(i)])\n    return st", "letter_corr = {\n    \"\u0105\": \"a\",\n    \"\u0107\": \"c\",\n    \"\u0119\": \"e\",\n    \"\u0142\": \"l\",\n    \"\u0144\": \"n\",\n    \"\u00f3\": \"o\",\n    \"\u015b\": \"s\",\n    \"\u017a\": \"z\",\n    \"\u017c\": \"z\" \n}\n\n\ndef correct_polish_letters(st):\n    l = []\n    for i in st:\n        l.append(letter_corr.get(i, i))\n    return ''.join(l)", "def correct_polish_letters(st): \n    PolishDict = {\n        \"\u0105\" : \"a\",\n        \"\u0107\" : \"c\",\n        \"\u0119\" : \"e\",\n        \"\u0142\" : \"l\",\n        \"\u0144\" : \"n\",\n        \"\u00f3\" : \"o\",\n        \"\u015b\" : \"s\",\n        \"\u017a\" : \"z\",\n        \"\u017c\" : \"z\"\n    }\n    newStr = \"\"\n    for i in range(len(st)):\n        if st[i] in PolishDict:\n            newStr += PolishDict[st[i]]\n        else:\n            newStr += st[i]\n    return newStr", "def correct_polish_letters(st): \n    dict = {\n    '\u0105': 'a',\n    '\u0105': 'a',\n    '\u0107': 'c',\n    '\u0119': 'e',\n    '\u0142': 'l',\n    '\u0144': 'n',\n    '\u00f3': 'o',\n    '\u015b': 's',\n    '\u017a': 'z',\n    '\u017c': 'z'\n    }\n    str = ''\n    for letter in st:\n        if letter in dict:\n            str += dict[letter]\n        else:\n            str += letter\n    return str", "correct_polish_letters = lambda st: ''.join([{'\u0105':'a','\u0107':'c','\u0119':'e','\u0142':'l','\u0144':'n','\u00f3':'o','\u015b':'s','\u017a':'z','\u017c':'z'}.get(i,i) for i in st])", "def correct_polish_letters(st): \n    polish_alphabet = {\n        '\u0105' : 'a',\n        '\u0107' : 'c',\n        '\u0119' : 'e',\n        '\u0142' : 'l',\n        '\u0144' : 'n',\n        '\u00f3' : 'o',\n        '\u015b' : 's',\n        '\u017a' : 'z',\n        '\u017c' : 'z'\n    }\n    return ''.join([polish_alphabet.get(i) if i in polish_alphabet else i for i in st])", "def correct_polish_letters(st): \n    polish={'\u0105':'a','\u0107':'c','\u0119':'e','\u0142':'l','\u0144':'n','\u00f3':'o','\u015b':'s','\u017a':'z','\u017c':'z'}\n    new_string=\"\"\n    for i in st:\n        if i in polish:\n            new_string+=(polish[i])\n        else:\n            new_string+=i\n    return new_string\n", "def correct_polish_letters(st): \n    new_string = \"\"\n    eng = \"acelnoszz\"\n    pol = \"\u0105\u0107\u0119\u0142\u0144\u00f3\u015b\u017a\u017c\"\n    \n    for i in range(len(st)):\n        if st[i] in pol:\n            new_string += eng[pol.index(st[i])]\n        else:\n            new_string += st[i]\n            \n    return new_string", "def correct_polish_letters(st): \n    stt=st.replace(\"\u0105\", \"a\").replace(\"\u0107\", \"c\").replace(\"\u0119\", \"e\").replace(\"\u0142\", \"l\").replace(\"\u0144\", \"n\").replace(\"\u00f3\", \"o\").replace(\"\u015b\", \"s\").replace(\"\u017a\", \"z\").replace(\"\u017c\", \"z\")\n    return stt", "def correct_polish_letters(st): \n    dict = {\n        '\u0105': 'a',\n        '\u0107': 'c',\n        '\u0119': 'e',\n        '\u0142': 'l',\n        '\u0144': 'n',\n        '\u00f3': 'o',\n        '\u015b': 's',\n        '\u017a': 'z',\n        '\u017c': 'z'\n    }\n    for c in st:\n        if c in dict:\n            st = st.replace(c, dict[c])\n    return st", "def correct_polish_letters(st):\n    diacritic = {'\u0105' : 'a',\n                '\u0107' : 'c',\n                '\u0119' : 'e',\n                '\u0142' : 'l',\n                '\u0144' : 'n',\n                '\u00f3' : 'o',\n                '\u015b' : 's',\n                '\u017a' : 'z',\n                '\u017c' : 'z'}\n    return ''.join([char.replace(char, diacritic[char]) if char in diacritic.keys() else char for char in st])", "def correct_polish_letters(st): \n    alp = {'\u0105': 'a', '\u0107': 'c', '\u0119': 'e', '\u0142': 'l', '\u0144': 'n', '\u00f3': 'o', '\u015b': 's', '\u017a': 'z', '\u017c': 'z'}\n    for key in alp.keys():\n        st = st.replace(key, alp[key])\n    return st", "def correct_polish_letters(st): \n    for p,e in {\"\u0105\":\"a\",\"\u0107\":\"c\",\"\u0119\":\"e\",\"\u0142\":\"l\",\"\u0144\":\"n\",\"\u00f3\":\"o\",\"\u015b\":\"s\",\"\u017a\":\"z\",\"\u017c\":\"z\"}.items():\n        st=st.replace(p,e)\n    return st", "def correct_polish_letters(st): \n    check = {\"\u0105\" : \"a\",\n            \"\u0107\" : \"c\",\n            \"\u0119\" : \"e\",\n            \"\u0142\" : \"l\",\n            \"\u0144\" : \"n\",\n            \"\u00f3\" : \"o\",\n            \"\u015b\" : \"s\",\n            \"\u017a\" : \"z\",\n            \"\u017c\" : \"z\"}\n    str = \"\"\n    for i in range(len(st)):\n        if st[i] in check.keys():\n            str += check.get(st[i])\n        else:\n            str += st[i]\n    return str", "def correct_polish_letters(st):\n    d = {\n        '\u0105': 'a', '\u0107': 'c', '\u0119': 'e',\n        '\u0142': 'l', '\u0144': 'n', '\u00f3': 'o',\n        '\u015b': 's', '\u017a': 'z', '\u017c': 'z'\n    }\n    for k in d:\n        st = st.replace(k, d[k])\n    return st", "def correct_polish_letters(st): \n    alp = \"\u0105\u0107\u0119\u0142\u0144\u00f3\u015b\u017a\u017c\"\n    alpc = \"acelnoszz\"\n    return st.translate(st.maketrans(alp, alpc))", "def correct_polish_letters(st): \n    base = {'\u0105':'a',\n            '\u0107':'c',\n            '\u0119':'e',\n            '\u0142':'l',\n            '\u0144':'n',\n            '\u00f3':'o',\n            '\u015b':'s',\n            '\u017a':'z',\n            '\u017c':'z'}\n    \n    return ''.join([base[i] if i in base else i for i in st])", "def correct_polish_letters(st):\n    diacritics = {\n        \"\u0105\": \"a\",\n        \"\u0107\": \"c\",\n        \"\u0119\": \"e\",\n        \"\u0142\": \"l\",\n        \"\u0144\": \"n\",\n        \"\u00f3\": \"o\",\n        \"\u015b\": \"s\",\n        \"\u017a\": \"z\",\n        \"\u017c\": \"z\"\n    }\n    return \"\".join([diacritics.get(c) if diacritics.get(c) else c for c in st])", "def correct_polish_letters(st): \n    letters = {\n        \"\u0105\": \"a\",\n        \"\u0107\": \"c\",\n        \"\u0119\": \"e\",\n        \"\u0142\": \"l\",\n        \"\u0144\": \"n\",\n        \"\u00f3\": \"o\",\n        \"\u015b\": \"s\", \n        \"\u017a\": \"z\",\n        \"\u017c\": \"z\"\n    }\n    result = \"\"\n    for i in st:\n        if i in letters:\n            result += letters[i]\n        else:\n            result += i\n    return result", "def correct_polish_letters(st): \n    Polish_alphabet = {'\u0105': 'a', '\u0107': 'c', '\u0119': 'e', '\u0142': 'l', '\u0144': 'n', '\u00f3': 'o', '\u015b': 's', '\u017a': 'z', '\u017c': 'z'}\n    result = ''\n    for el in st:\n        result += Polish_alphabet.get(el, el)\n    return result", "trans = {'\u0105':'a','\u0107':'c','\u0119':'e','\u0142':'l','\u0144':'n','\u00f3':'o','\u015b':'s','\u017a':'z','\u017c':'z'}\n\ndef correct_polish_letters(st): \n    empty = []\n    for char in st:\n        if char not in trans:\n            empty.append(char)\n        elif char in trans:\n            empty.append(trans[char])\n            \n    return ''.join(empty)", "def correct_polish_letters(st): \n    answer = \"\"\n    d= {\n        \"\u0105\":\"a\",\n        \"\u0107\":\"c\",\n        \"\u0119\":\"e\",\n        \"\u0142\":\"l\",\n        \"\u0144\":\"n\",\n        \"\u00f3\":\"o\",\n        \"\u015b\":\"s\",\n        \"\u017a\":\"z\",\n        \"\u017c\":\"z\"\n    }\n    lst = [\"\u0105\",\"\u0107\",\"\u0119\",\"\u0142\",\"\u0144\",\"\u00f3\",\"\u015b\",\"\u017a\",\"\u017c\"]\n    \n    for c in st:\n        if c in lst:\n            answer += d.get(c)\n        else: \n            answer += c\n    return answer", "def correct_polish_letters(st): \n    dict = { \"\u0105\" : \"a\",\n\"\u0107\" : \"c\",\n\"\u0119\" : \"e\",\n\"\u0142\" : \"l\",\n\"\u0144\" : \"n\",\n\"\u00f3\" : \"o\",\n\"\u015b\" : \"s\",\n\"\u017a\" : \"z\",\n\"\u017c\" : \"z\" }\n    st2= \"\"\n    for ch in st:\n        if ch in dict:\n            st2= st2+(dict[ch])\n        else:\n            st2= st2+(ch)\n    \n    \n    return st2\n", "def correct_polish_letters(st): \n    result = \"\"\n    for letter in st:\n        if letter == \"\u0105\":\n            result += \"a\"\n        elif letter == \"\u0107\":\n            result += \"c\"\n        elif letter == \"\u0119\":\n            result += \"e\"\n        elif letter == \"\u0142\":\n            result += \"l\"\n        elif letter == \"\u0144\":\n            result += \"n\"\n        elif letter == \"\u00f3\":\n            result += \"o\"\n        elif letter == \"\u015b\":\n            result += \"s\"\n        elif letter == \"\u017a\":\n            result += \"z\"\n        elif letter == \"\u017c\":\n            result += \"z\"  \n        else:\n            result += letter\n    return result\n            \n    # your code here\n    pass", "def correct_polish_letters(st): \n    alphabet = {\n            \"\u0105\": \"a\",\n    \"\u0107\": \"c\",\n    \"\u0119\": \"e\",\n    \"\u0142\": \"l\",\n    \"\u0144\": \"n\",\n    \"\u00f3\": \"o\",\n    \"\u015b\": \"s\",\n    \"\u017a\": \"z\",\n    \"\u017c\": \"z\",\n    }\n    new_str = ''\n    for c in list(st):\n        if c in alphabet:\n            new_str += alphabet[c]\n        else:\n            new_str += c\n    return new_str", "def correct_polish_letters(st): \n    letters = {\n        '\u0105': 'a',\n        '\u0107': 'c',\n        '\u0119': 'e',\n        '\u0142': 'l',\n        '\u0144': 'n',\n        '\u00f3': 'o',\n        '\u015b': 's',\n        '\u017a': 'z',\n        '\u017c': 'z'\n        }\n    \n    for l in st:\n        if l in letters:\n            st = st.replace(l, letters[l])\n    return st", "X = {\n    \"\u0105\": \"a\",\n    \"\u0107\": \"c\",\n    \"\u0119\": \"e\",\n    \"\u0142\": \"l\",\n    \"\u0144\": \"n\",\n    \"\u00f3\": \"o\",\n    \"\u015b\": \"s\",\n    \"\u017a\": \"z\",\n    \"\u017c\": \"z\"\n}\ndef correct_polish_letters(st):\n    for x in X: st = st.replace(x, X[x])\n    return st", "def correct_polish_letters(st): \n    letters_dict = {\n        '\u0105': 'a',\n        '\u0107': 'c',\n        '\u0119': 'e',\n        '\u0142': 'l',\n        '\u0144': 'n',\n        '\u00f3': 'o',\n        '\u015b': 's',\n        '\u017a': 'z',\n        '\u017c': 'z'\n    }\n    result = ''\n    for letter in st:\n        if letter in letters_dict.keys():\n            result += letters_dict[letter]\n        else:\n            result += letter\n    return result", "polish_letter = {\"\u0105\": \"a\",\n\"\u0107\": \"c\",\n\"\u0119\": \"e\",\n\"\u0142\": \"l\",\n\"\u0144\": \"n\",\n\"\u00f3\": \"o\",\n\"\u015b\": \"s\",\n\"\u017a\": \"z\",\n\"\u017c\": \"z\"}\n\ndef correct_polish_letters(st):\n    new_list = []\n    for letter in st:\n        if letter in polish_letter:\n            letter = polish_letter[letter]\n        new_list.append(letter)\n    return \"\".join(new_list)\n", "def correct_polish_letters(st): \n    s,p,n=\"\",[\"\u0105\",\"\u0107\",\"\u0119\",\"\u0142\",\"\u0144\",\"\u00f3\",\"\u015b\",\"\u017a\",\"\u017c\"],[\"a\",\"c\",\"e\",\"l\",\"n\",\"o\",\"s\",\"z\",\"z\"]\n    for i in list(st):\n        if i in p: \n            s+=n[p.index(i)]\n        else: s+=i\n    return s", "ALPHABET = {\"\u0105\": \"a\",\n            \"\u0107\": \"c\",\n            \"\u0119\": \"e\",\n            \"\u0142\": \"l\",\n            \"\u0144\": \"n\",\n            \"\u00f3\": \"o\",\n            \"\u015b\": \"s\",\n            \"\u017a\": \"z\",\n            \"\u017c\": \"z\"}\n\n\ndef correct_polish_letters(st): \n\n    result = \"\"\n    for char in st:\n        if (char in ALPHABET):\n            result += ALPHABET[char]\n        else:\n            result += char\n\n    return result\n", "def correct_polish_letters(st): \n    new = ''\n    for x in st:\n        if x == '\u0105':\n            new += 'a'\n        elif x == '\u0107':\n            new += 'c'\n        elif x == '\u0119':\n            new += 'e'\n        elif x == '\u0142':\n            new += 'l'\n        elif x == '\u0144':\n            new += 'n'   \n        elif x == '\u00f3':\n            new += 'o'   \n        elif x == '\u015b':\n            new += 's' \n        elif x == '\u017a':\n            new += 'z'\n        elif x == '\u017c':\n            new += 'z'   \n        else:\n            new += x\n    return new\n\n          \n            \n", "import re\npolist_letters = {\n    '\u0105': 'a',\n    '\u0107': 'c',\n    '\u0119': 'e',\n    '\u0142': 'l',\n    '\u0144': 'n',\n    '\u00f3': 'o',\n    '\u015b': 's',\n    '\u017a': 'z',\n    '\u017c': 'z'\n}\n\ndef correct_polish_letters(st): \n    my_st = st\n    for l in polist_letters:\n        my_st = re.sub(l, polist_letters.get(l), my_st)\n    return my_st\n", "def correct_polish_letters(st):\n    # your code here\n    d = {'\u0105': 'a', '\u0107': 'c', '\u0119': 'e', '\u0142': 'l', '\u0144': 'n', '\u00f3': 'o', '\u015b': 's', '\u017a': 'z', '\u017c': 'z'}\n    return ''.join(map(lambda x: x.replace(x, d.get(x, x)), st))", "def correct_polish_letters(st): \n    polish_letters = \"\u0105\u0107\u0119\u0142\u0144\u00f3\u015b\u017a\u017c\"\n    english_letters = \"acelnoszz\"\n    table = st.maketrans(polish_letters, english_letters) \n    return st.translate(table)", "def correct_polish_letters(st): \n    table = st.maketrans(\"\u0105\u0107\u0119\u0142\u0144\u00f3\u015b\u017a\u017c\",\"acelnoszz\")\n    st = st.translate(table)\n    return st", "def correct_polish_letters(st): \n    translation = { '\u0105' : 'a',\n                    '\u0107' : 'c',\n                    '\u0119' : 'e',\n                    '\u0142' : 'l',\n                    '\u0144' : 'n',\n                    '\u00f3' : 'o',\n                    '\u015b' : 's',\n                    '\u017a' : 'z',\n                    '\u017c' : 'z' }\n    output = ''\n    for x in st:\n        if x in translation:\n            output += translation.get(x)\n        else:\n            output += x\n    return output", "def correct_polish_letters(st):\n    dict = {'\u0105' : 'a', '\u0107' : 'c','\u0119' : 'e', '\u0142' : 'l', '\u0144' : 'n', '\u00f3' : 'o', '\u015b' : 's', '\u017a' : 'z', '\u017c' : 'z'}\n    return ''.join([dict[x] if x in dict.keys() else x for x in st])", "def correct_polish_letters(string):\n    dic = {\"\u0105\": \"a\",\n           \"\u0107\": \"c\",\n           \"\u0119\": \"e\",\n           \"\u0142\": \"l\",\n           \"\u0144\": \"n\",\n           \"\u00f3\": \"o\",\n           \"\u015b\": \"s\",\n           \"\u017a\": \"z\",\n           \"\u017c\": \"z\"}\n    return \"\".join(dic.get(l, l) for l in string)", "def correct_polish_letters(st): \n    dict = {\n        '\u0105': 'a',\n        '\u0107': 'c',\n        '\u0119': 'e',\n        '\u0142': 'l',\n        '\u0144': 'n',\n        '\u00f3': 'o',\n        '\u015b': 's',\n        '\u017a': 'z',\n        '\u017c': 'z' \n    }\n    for key in dict.keys():\n        st = st.replace(key, str(dict[key]))\n            \n    return st", "def correct_polish_letters(st): \n    res = \"\"\n    \n    letters = { \"\u0105\": \"a\", \"\u0107\":  \"c\", \"\u0119\":  \"e\", \"\u0142\":  \"l\", \"\u0144\":  \"n\", \n                \"\u00f3\":  \"o\", \"\u015b\":  \"s\", \"\u017a\":  \"z\", \"\u017c\": \"z\" }\n    \n    for elem in st:\n        for letter in elem:\n            if letter in letters:\n                res += letters[letter]\n            else:\n                res += elem\n    \n    return res               ", "def correct_polish_letters(st): \n    d= {\n        '\u0105' : 'a',\n        '\u0107' : 'c',\n        '\u0119' : 'e',\n        '\u0142' : 'l',\n        '\u0144' : 'n',\n        '\u00f3' : 'o',\n        '\u015b' : 's',\n        '\u017a' : 'z',\n        '\u017c' : 'z'\n    }\n    output=\"\"\n    for i in st:\n        output += d.get(i,i)\n    return output", "def correct_polish_letters(st): \n    list=[]\n    dict={\"\u0105\":\"a\",\n        \"\u0107\":\"c\",\n        \"\u0119\":\"e\",\n        \"\u0142\":\"l\",\n        \"\u0144\":\"n\",\n        \"\u00f3\":\"o\",\n        \"\u015b\":\"s\",\n        \"\u017a\":\"z\",\n        \"\u017c\":\"z\"}\n    for i in st:\n        if i in dict.keys():\n            list.append(dict[i])\n        elif st.isspace():\n            list.append(\" \")\n        else:\n            list.append(i)\n    return \"\".join(list)", "def correct_polish_letters(st): \n    # your code here\n    alf={' ':' ','\u0105':'a','\u0107':'c','\u0119':'e','\u0142':'l','\u0144':'n','\u00f3':'o','\u015b':'s','\u017a':'z','\u017c':'z'}\n    return ''.join(alf[i] if i in alf else i for i in st)", "def correct_polish_letters(st): \n    d = {'\u0105': 'a', '\u0107': 'c', '\u0119': 'e', '\u0142': 'l', '\u0144': 'n', '\u00f3': 'o', '\u015b': 's', '\u017a': 'z', '\u017c': 'z'}\n    r = ''\n    for letter in st:\n        if letter in d:\n            r += d[letter]\n        else:\n            r += letter\n    return r", "def correct_polish_letters(st): \n    dict={'\u0105':'a','\u0107':'c','\u0119':'e','\u0142':'l','\u0144':'n','\u00f3':'o','\u015b':'s','\u017a':'z','\u017c':'z'}\n    return ''.join(dict.get(char,char) for char in st)\n", "def correct_polish_letters(st): \n    dict={'\u0105':'a','\u0107':'c','\u0119':'e','\u0142':'l','\u0144':'n','\u00f3':'o','\u015b':'s','\u017a':'z','\u017c':'z'}\n    return ''.join(list(dict.get(char,char) for char in st))\n\n", "def correct_polish_letters(st): \n    pol = {'\u0105': 'a',\n           '\u0107': 'c',\n           '\u0119': 'e',\n           '\u0142': 'l',\n           '\u0144': 'n',\n           '\u00f3': 'o',\n           '\u015b': 's',\n           '\u017a': 'z',\n           '\u017c': 'z'}\n    \n    st2 = \"\"\n    \n    for c in st:\n        if c in pol:\n            st2 += pol[c]\n        \n        else:\n            st2 += c\n    \n    return st2", "def correct_polish_letters(st): \n    dict = {\"\u0105\" : \"a\",\n            \"\u0107\" : \"c\",\n            \"\u0119\": \"e\",\n            \"\u0142\" :\"l\",\n            \"\u0144\" : \"n\",\n            \"\u00f3\" : \"o\",\n            \"\u015b\" : \"s\",\n            \"\u017a\" : \"z\",\n            \"\u017c\" : \"z\"\n    }\n    word =\"\"\n    for i in st:\n        if i.isupper()==True:\n            word+=i\n        else:\n            word+= dict.get(i,i)\n    return word", "POLSKA_STRONG = {\n    '\u0105': 'a',\n    '\u0107': 'c',\n    '\u0119': 'e',\n    '\u0142': 'l',\n    '\u0144': 'n',\n    '\u00f3': 'o',\n    '\u015b': 's',\n    '\u017a': 'z',\n    '\u017c': 'z'\n}\ndef correct_polish_letters(st):\n    return ''.join(POLSKA_STRONG.get(i, i) for i in st)\n", "pol = {'\u0105': 'a', '\u0107': 'c', '\u0119': 'e', '\u0142': 'l','\u0144': 'n',\\\n       '\u00f3': 'o', '\u015b': 's','\u017a':'z', '\u017c': 'z'}\n\ndef correct_polish_letters(st): \n    for char in st: \n        if char in pol.keys():\n            st = st.replace(char, pol.get(char))\n    return st", "def correct_polish_letters(s):\n    return s.translate(str.maketrans({\"\u0105\": \"a\", \"\u0107\": \"c\", \"\u0119\": \"e\", \"\u0142\": \"l\", \"\u0144\": \"n\", \"\u00f3\": \"o\", \"\u015b\": \"s\", \"\u017a\": \"z\", \"\u017c\": \"z\"}))\n", "def correct_polish_letters(st): \n    ls = {\"\u0105\": \"a\", \"\u0107\": \"c\", \"\u0119\": \"e\", \"\u0142\": \"l\", \"\u0144\": \"n\", \"\u00f3\": \"o\", \"\u015b\": \"s\", \"\u017a\": \"z\", \"\u017c\": \"z\"}\n    return ''.join(ls[l] if l in ls else l for l in st)\n", "def correct_polish_letters(st): \n    dic = {\n        '\u0105':'a',\n        '\u0107':'c',\n        '\u0119':'e',\n        '\u0142':'l',\n        '\u0144':'n',\n        '\u00f3':'o',\n        '\u015b':'s',\n        '\u017a':'z',\n        '\u017c':'z'\n    }\n    res = \"\".join(dic[i] if i in dic else i for i in st)\n    return res", "def correct_polish_letters(st):\n    dict_ = {'\u0105': 'a', '\u0107': 'c', '\u0119': 'e', '\u0142': 'l', '\u0144': 'n', '\u00f3': 'o', '\u015b': 's', '\u017a': 'z', '\u017c': 'z'}\n    return ''.join(dict_[i] if i in dict_ else i for i in st)", "def correct_polish_letters(st):\n    translationTable = str.maketrans(\"\u0105\u0107\u0119\u0142\u0144\u00f3\u015b\u017a\u017c\", \"acelnoszz\")\n    return st.translate(translationTable)\n", "def correct_polish_letters(st): \n    # your code here\n    polish = {\n        '\u0105': 'a',\n        '\u0107': 'c',\n        '\u0119': 'e',\n        '\u0142': 'l',\n        '\u0144': 'n',\n        '\u00f3': 'o',\n        '\u015b': 's',\n        '\u017a': 'z',\n        '\u017c': 'z'\n    }\n    \n    res = ''\n    for i in st:\n        if i in polish:\n            q = st.index(i)\n            res += st[q].replace(st[q], polish.get(st[q]))\n        else:\n            res += i\n\n\n    return res", "p = {'\u0105':'a','\u0107':'c','\u0119':'e','\u0142':'l','\u0144':'n','\u00f3':'o','\u015b':'s','\u017a':'z','\u017c':'z'}\n\ndef correct_polish_letters(st): \n    return ''.join([p.get(c, c) for c in st])", "def correct_polish_letters(st): \n    char = ['a','c','e','l','n','o','s','z','z']\n    mod = ['\u0105','\u0107','\u0119','\u0142','\u0144','\u00f3','\u015b','\u017a','\u017c']\n    for x in st:\n        if x in mod:\n            st = st.replace(x, char[mod.index(x)])\n    return st", "def correct_polish_letters(st):\n\n    str = \"\"\n\n    for x in st:\n        if x == \"\u0105\":\n            str += \"a\"\n        elif x == \"\u0107\":\n            str += \"c\"\n        elif x == \"\u0119\":\n            str += \"e\"\n        elif x == \"\u0142\":\n            str += \"l\"\n        elif x == \"\u0144\":\n            str += \"n\"\n        elif x == \"\u00f3\":\n            str += \"o\"\n        elif x == \"\u015b\":\n            str += \"s\"\n        elif x == \"\u017a\":\n            str += \"z\"\n        elif x == \"\u017c\":\n            str += \"z\"\n        else:\n            str += x\n    return (str)", "def correct_polish_letters(st): \n    polish_letters = {'\u0105': 'a', \n                      '\u0107': 'c', \n                      '\u0119': 'e', \n                      '\u0142': 'l', \n                      '\u0144': 'n', \n                      '\u00f3': 'o', \n                      '\u015b': 's', \n                      '\u017a': 'z', \n                      '\u017c': 'z'}\n    ret = ''\n    for i in st:\n        if i in polish_letters.keys():\n            ret += polish_letters[i]\n        else:\n            ret += i\n    return ret", "import ast\ndef correct_polish_letters(st): \n    letters=\"\"\"\u0105 -> a,\n\u0107 -> c,\n\u0119 -> e,\n\u0142 -> l,\n\u0144 -> n,\n\u00f3 -> o,\n\u015b -> s,\n\u017a -> z,\n\u017c -> z\"\"\"\n    letters=\"{'\"+letters.replace(\" -> \",\"':'\").replace(\",\",\"',\").replace(\"\\n\",\"'\")+\"'}\"\n    letters=ast.literal_eval(letters)\n    st2=\"\"\n    for i in range(len(st)):\n        if st[i] not in letters:\n            st2+=st[i]\n        else:\n            st2+=letters.get(st[i])\n    return st2\n", "def correct_polish_letters(st): \n    dic = {\n        \"\u0105\":'a',\n        \"\u0107\":'c',\n        \"\u0119\":'e',\n        \"\u0142\":'l',\n        '\u0144':'n',\n        '\u00f3':'o',\n        '\u015b':'s',\n        '\u017a':'z',\n        '\u017c': 'z'\n    }\n    for i in dic:\n        st = st.replace(i,dic[i])\n    return st"]