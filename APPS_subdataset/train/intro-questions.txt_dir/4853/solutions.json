["def double_char(s):\n    return ''.join(c * 2 for c in s)", "def double_char(s):\n    res = ''\n    for i in s:\n        res += i*2\n    return res", "def double_char(s):\n    return ''.join(2 * c for c in s)", "def double_char(str):\n    return \"\".join(ch+ch for ch in str)\n", "def double_char(str):\n    return \"\".join(c*2 for c in str)", "def double_char(s):\n    return ''.join(char * 2 for char in s)", "def double_char(s):\n    y = list(s) # Breaks the string into individual letters\n    length = len(y) # Length of string\n    ffs = list(range(0,length)) # Creates an array beginning with 0, going up in ones, the length of the original string\n    blank=\"\" # Blank string to build from\n    for i in ffs: # For (i)tems in ffs, number 0 thru x (length)\n        blank = blank + y[i] + y[i] # Essentially blank + list(0) + list(0), then blank + list(1) + list(1)\n    return blank", "double_char = lambda s: ''.join(a*2 for a in s)", "double_char=lambda s:''.join(c+c for c in s)", "def double_char(s):\n    result = \"\"\n    for i in s:\n       result += i + i\n    return result\n", "def double_char(s):\n    return ''.join([x*2 for x in s])", "def double_char(s):\n    return ''.join(a*2 for a in s)", "OUTPUT = '{0}{0}'.format\n\n\ndef double_char(s):\n    return ''.join(OUTPUT(a) for a in s)\n", "def double_char(s):\n    result = ''\n    for char in s:\n        result += char * 2\n    return result\n", "def double_char(s):\n    slowo = \"\"   # defining new empty string for doubled word\n    for char in s:      # loop going by every char in word s\n        char = 2 * char     # for every char doubling it\n        slowo += char   # adding doubled char to new string\n    return slowo ", "def double_char(s):\n    answer = []\n    for i in s:\n        answer.append(i)\n        answer.append(i)\n    return \"\".join(answer)", "def double_char(s: str) -> str:\n    \"\"\" Get a string in which each character is repeated once. \"\"\"\n    return \"\".join(list(map(lambda _: _ * 2, \"|\".join(s).split(\"|\"))))", "def double_char(s):\n    new=str()\n    for i in s:\n       new+=i+i\n    pass\n    return new", "def double_char(some_text):\n    return ''.join([2 * letter for letter in some_text])", "def double_char(s):\n    return ''.join([2*i for i in s])\n", "def double_char(s):\n    new_s = \"\"\n    for c in s:\n        new_s = \"%s%c%c\" % (new_s, c, c);\n    return new_s", "def double_char(s):\n    s=list(s)\n    lists=[]\n    for i in range(len(s)):\n        lists.append(s[i]*2)\n    string=''\n    for i in range(len(lists)):\n        string=string+lists[i]\n    return string\n", "def addition(char):\n    return 2*char\n\ndef double_char(s):\n    result = list(map(addition, s))\n    return ''.join(result)", "def double_char(s):\n    return ''.join(map(lambda x:''.join(x), zip(s,s)))", "def double_char(s):\n    return(''.join([s[i]*2 for i in range(len(s))]))", "def double_char(s):\n    return reduce(lambda x,y: x+y, map(lambda x : 2*x, s))", "double_char = lambda s: ''.join([i*2 for i in s])", "def double_char(s):\n    new_list = []\n    for x in s:\n        new_list.append(x)\n        new_list.append(x)\n    return ''.join(new_list)", "def double_char(s):\n    new = \"\"\n    for char in s:\n        new += char * 2\n    \n    return new", "def double_char(s):\n    \n        return ''.join([character+character for character in s])\n", "def double_char(s):\n    z = \"\"\n    for i in range(len(s)):\n        z += (s[i])\n        z += (s[i])\n    return z\n", "def double_char(s):\n    total = \"\"\n    for i in s:\n        total += i\n        total += i\n    return total\n", "def double_char(s):\n    rtrn = ''\n    for x in s:\n        rtrn += x*2\n    return rtrn", "def double_char(s):\n    res = ''\n    for t in range(len(s)):\n        res += 2*s[t]\n    return res", "def double_char(s):\n    res = \"\"\n    for l in s:\n        res += l+l\n    return res", "def double_char(s):\n    new_string = \"\"\n    for char in s:\n        char = char*2\n        new_string += char \n    return new_string", "def double_char(s):\n    result = ''\n    for sym in s:\n        result += 2 * sym\n    return result", "def double_char(s):\n    storage=\"\"\n    for i in s:\n        storage+=i*2\n    return storage", "def double_char(string):\n    fin = \"\"\n    for char in string:\n        fin += char * 2\n    return fin", "def double_char(s):\n    output = \"\"\n    for character in s:\n        output += 2 * character\n    return output", "def double_char(s):\n    a = [i*2 for i in s]\n    return \"\".join(i for i in a)", "def double_char(s):\n    array = list(s)\n    count = len(array)-1\n    while count >= 0:\n        array.insert(count, array[count])\n        count += -1\n    return \"\".join(array)\n        \n", "def double_char(s):\n    lst = list(s)\n    res = ''\n    for el in lst:\n        res += el * 2\n    return res", "def double_char(s):\n    n = len(s)\n    result = \"\"\n    for i in range(n):\n        result += s[i] * 2\n    \n    return result", "def double_char(s):\n    r = ''\n    for x in s:\n        r += 2 * x\n    return r", "def double_char(s):\n    new_string = []\n    for i in list(s):\n        new_string.append(i+i)\n    return \"\".join(new_string)", "def double_char(s):\n    tustik=[i*2 for i in s]   \n    return ''.join(tustik)    ", "def double_char(s):\n    sss = ''\n    for i in s:\n        sss += i + i\n    return sss", "def double_char(s):\n    Liste = []\n    for i in s:\n        Liste.append(i*2)\n    return ''.join(Liste)", "def double_char(s):\n    return_string = \"\"\n    \n    for i in s:\n        return_string += i * 2\n    \n    return return_string", "def double_char(s):\n    return_string = \"\"\n    \n    for i in s:\n        return_string += i\n        return_string += i\n    \n    return return_string", "def double_char(s):\n    s = [i+i for i in s]\n    return ''.join(s)", "def double_char(s):\n    my_list = \"\"\n    for i in range(len(list(s))):\n        my_list += str(list(s)[i]*2)\n    return my_list\n", "def double_char(s):\n    hold = \"\"\n    for x in range(len(s)):\n        hold += (s[x] * 2)\n    return hold\n", "def double_char(s):\n    str=''\n    for i in s:\n        str+=2*i\n    return str", "def double_char(s):\n    dbl = ''\n    for i in range(len(s)):\n        dbl=dbl+s[i]+s[i]\n    return dbl", "def double_char(s):\n    l = list(s)\n    res = []\n    for letter in l:\n        res.append(letter)\n        res.append(letter)\n    return \"\".join(res)", "def double_char(s):\n    chars = []\n    \n    for char in s:\n        chars.append(char)\n        \n    for i in range(len(chars)):\n        chars[i] = chars[i] * 2\n    \n    return ''.join(chars)", "def double_char(s):\n    return ''.join([next_str + next_str for next_str in s])", "def double_char(s):\n    ans = []\n    for i in s:\n        a = i * 2\n        ans.append(a)\n    return \"\".join(ans)", "def double_char(s):\n    str=\"\"\n    for i in s:\n        i*=2\n        str+=i\n    return str", "def double_char(s):\n    s2=\"\"\n    for i in range(len(s)):\n        s2+=2*s[i]\n    return s2", "def double_char(s):\n    return ''.join(['{}'.format(i[0]+i[1]) for i in zip(s,s)])", "def double_char(s):\n    return ''.join([2*letter for letter in s])", "def double_char(s):\n    return ''.join([''.join([r,r]) for r in s])", "def double_char(s):\n    lst=[]\n    for x in s:\n        lst.append(x)\n        lst.append(x)\n    lst = \"\".join(lst)\n    return lst", "def double_char(s):\n    ans = ''\n    for i in s:\n        ans = ans + i * 2\n    return ans", "def double_char(s):\n    derp = \"\"\n    \n    for letters in s:\n        derp+=letters + letters\n        \n    return derp", "def double_char(s):\n    return \"\".join([s[x]*2 for x in range(len(s))])", "def double_char(s):\n    word = \"\"\n    for char in s:\n        char = char * 2\n        word += char\n    return word\n\n", "def double_char(s):\n    res = ''\n    for i in s:\n        res += f\"{i}{i}\"\n    return res", "def double_char(s):\n    l = list(s)\n    r = []\n    for i in range(len(l)):\n        r.append(l[i]+l[i])\n    return ''.join(r)\n    \n    \n", "def double_char(s):\n    t = ''\n    for x in s:\n        t += x + x\n    return t", "def double_char(s):\n    double = \"\"\n    for i in range(len(s)):\n        double += \"{}\".format(s[i]*2)\n    return double\ndouble_char(\"String\")", "def double_char(s):\n    x = []\n    for i in range(len(s)):\n        x.append(2*s[i])\n    return ''.join(x)", "def double_char(s):\n    t = \"\"\n    for x in s:\n        t += x*2\n    return t", "def double_char(s):\n    double_s = ''\n    for i, x in enumerate(s):\n        double_s += (x * 2)\n    return double_s", "def double_char(s):\n    k = list(s)\n    arr = []\n    for i in range(len(s)):\n        arr.append(s[i])\n        arr.append(s[i])\n    return ''.join(arr)", "def double_char(s):\n    s = [lett*2 for lett in s]\n    y = ''\n    x = 0\n    while x < len(s):\n        y += s[x]\n        x +=1 \n    return y", "def double_char(s):\n    s = list(s)\n    returnArr = []\n    for i in range(len(s)):\n        returnArr.append(s[i])\n        returnArr.append(s[i])\n    return \"\".join(returnArr)", "def double_char(s):\n    \n    #start with an empty string\n    x = \"\"\n    \n    ##loop across string s, and add each letter twice to empty string x\n    for i in range(len(s)):\n        x = x+s[i]+s[i]\n    return x\n\n    pass", "def double_char(s):\n    lisp = \"\"\n    for char in s:\n        lisp = lisp + char + char\n    return lisp", "def double_char(s):\n    ans = []\n    for i in s:\n        ans.append(i*2)\n    return \"\".join(ans)", "def double_char(s):\n    duplicados = ''\n    for char in s:\n        duplicados=duplicados+char+char\n    return duplicados", "def double_char(s):\n    final_str = \"\"\n    for i in s:\n        final_str += i * 2\n    return final_str", "def double_char(s):\n    return ''.join(list(char*2 for char in s))", "def double_char(s):\n    \n    returnString = \"\"\n    i = 0\n    \n    while i < len(s):\n        returnString = returnString + s[i] + s[i]\n        i+= 1\n    \n    return returnString", "def double_char(s):\n    return \"\".join([2*word for word in list(s)])", "def double_char(s):\n    new_string = ''\n    for c in s:\n        new_string = new_string + c + c\n    return new_string\n        \n", "def double_char(s):\n    return ''.join(''.join(i) for i in zip(s, s))\n", "def double_char(s):\n    final_str = \"\"\n    for char in s:\n        final_str += (char + char)\n    return final_str\n", "def double_char(s):\n    new_str = ''\n    for i in s:\n        new_str = new_str + i + i\n    return new_str", "def double_char(s):\n    solution = ''\n    for char in s:\n        solution += char * 2\n    return solution", "def double_char(s):\n    res = map(lambda x: x *2, s)\n    res = ''.join(res)\n    return res", "def double_char(s):\n    return \"\".join(map(lambda i: i+i, s))", "from itertools import repeat\n\ndef double_char(s):\n    return ''.join([x for item in s for x in repeat(item, 2)])", "def double_char(s):\n    a=\"\"\n    for i in s:\n        i=i*2\n        a+=i\n    return a   ", "def double_char(s):\n    x = ''\n    return x.join(i * 2 for i in s)", "def double_char(s):\n    a\u00e7 = \"\"\n    for a in s:\n        a\u00e7 += a*2\n    return a\u00e7", "def double_char(s):\n    return ''.join(x * 2 for x in list(s[:]))"]