["import sys\ndef input():\n\treturn sys.stdin.readline()[:-1]\n\nt = int(input())\nfor _ in range(t):\n\tn, k = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tcum = [0 for _ in range(2*k+2)]\n\tfor i in range(n//2):\n\t\tx, y = a[i], a[n-i-1]\n\t\tcum[2] += 2\n\t\tcum[min(x, y)+1] -= 1\n\t\tcum[x+y] -= 1\n\t\tcum[x+y+1] += 1\n\t\tcum[max(x, y)+k+1] += 1\n\t\tcum[2*k+1] -= 2\n\tans = n\n\tfor i in range(2, 2*k+1):\n\t\tcum[i] += cum[i-1]\n\t\tans = min(ans, cum[i])\n\tprint(ans)", "from sys import stdin\ninput = stdin.readline\nt = int(input())\nfor iwuehufiew in range(t):\n\tn, k = list(map(int, input().split()))\n\tl = list(map(int,input().split()))\n\todc = [[1 + min(l[i],l[n-1-i]), k+max(l[i],l[n-1-i])] for i in range(n//2)]\n\tcyk = [0] * (2*k+2)\n\tfor o in odc:\n\t\tcyk[o[0]] += 1\n\t\tcyk[o[1] + 1] -= 1\n\tcov = [0] * (2*k+2)\n\tcov[0] = cyk[0]\n\tfor i in range(1,2*k+2):\n\t\tcov[i] = cov[i-1] + cyk[i]\n\tilosc = [0] * (2*k+1)\n\tfor i in range(n//2):\n\t\tilosc[l[i]+l[n-1-i]] += 1\n\twyn = 759237598237985732489\n\tfor i in range(2*k+1):\n\t\ta = cov[i] + (n//2 - cov[i]) * 2 - ilosc[i]\n\t\twyn = min(wyn,a)\n\tprint(wyn)\n", "def __starting_point():\n    n = int(input())\n    \n    for i in range(n):\n        h = list(map(int, input().rstrip().split()))\n        N = h[0]\n        K = h[1]\n        h = list(map(int, input().rstrip().split()))\n        t = [0]*(2*K+2)\n        for i in range(N//2):\n            t[h[i]+h[N-i-1]] -= 1\n            t[h[i]+h[N-i-1]+1] += 1\n            t[max(h[i],h[N-i-1])+K+1] += 1\n            t[min(h[i],h[N-i-1])+1] -= 1\n        v = N\n        minv = N\n        for i in range(2*K+2):\n            v += t[i]\n            if v < minv:\n                minv = v\n        print(minv)\n\n__starting_point()", "class BIT():\n    def __init__(self, n):\n        self.n = n\n        self.bit = [0] * (n + 1)\n\n    def _add(self, i, val):\n        while i > 0:\n            self.bit[i] += val\n            i -= i & -i\n\n    def get_val(self, i):\n        i = i + 1\n        s = 0\n        while i <= self.n:\n            s += self.bit[i]\n            i += i & -i\n        return s\n\n    def add(self, l, r, val):\n        self._add(r, val)\n        self._add(l, -val)\n\nimport sys\ninput = sys.stdin.readline\n\n\nt = int(input())\nfor _ in range(t):\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = a[n // 2:n][::-1]\n    a = a[0:n // 2]\n    \n    bit = BIT(2 * k + 1)\n    bit.add(0, 2 * k + 1, (2 * n // 2))\n    for i in range(n // 2):\n        ran = [min(a[i] + 1, b[i] + 1), max(a[i] + k + 1, b[i] + k + 1)]\n        bit.add(ran[0], ran[1], -1)\n        bit.add(a[i] + b[i], a[i] + b[i] + 1, -1)\n    print(min([bit.get_val(i) for i in range(2 * k + 1)]))\n", "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\n# import io, os\n# input = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\nimport sys\ninput = sys.stdin.readline\n\nM = mod = 998244353\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n\ndef li():return [int(i) for i in input().split()]\ndef st():return input()\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input()]\ndef li3():return [int(i) for i in input()]\n\n\nfor _ in range(val()):\n    n,k = li()\n    l = li()\n    cnt = Counter()\n    mins = []\n    maxs = []\n    sums = []\n    arr = [0]*(2*k + 5)\n    for i in range(n//2):\n        cnt[l[i] + l[n-i-1]] += 1\n        a,b = max(l[i],l[n-i-1]),min(l[i],l[n-i-1])\n\n\n        arr[b] += 1\n        arr[a + k] -= 1\n\n\n        maxs.append(a + k - b)\n        mins.append(b + 1)\n\n    mins.sort()\n    maxs.sort()\n\n    ans = n\n    curr = arr[1]\n    for i in range(2,2*k + 1,1):\n        onecost = curr - cnt[i]\n        twocost =  n//2 - curr\n        ans = min(ans,onecost + twocost*2)\n        curr += arr[i]\n    print(ans)\n", "for f in range(int(input())):\n    n,k=map(int,input().split())\n    a=list(map(int,input().split()))\n    nh=n//2\n    su=[0]*(2*k+1)\n    mi=[0]*nh\n    ma=[0]*nh\n    for i in range(nh):\n        su[a[i]+a[-i-1]]+=1\n        mi[i]=min(a[i],a[-i-1])+1\n        ma[i]=max(a[i],a[-i-1])+k\n    mi.sort()\n    ma.sort()\n    mii=0\n    maa=0\n    sol=n\n    for i in range(2*k+1):\n        while mii<nh and mi[mii]<=i:\n            mii+=1\n        while maa<nh and ma[maa]<i:\n            maa+=1\n        sol=min(sol,n-su[i]-mii+maa)\n    print(sol)", "t = int(input())\nfor _ in range(t):\n    n, k = list(map(int,input().split()))\n    l = list(map(int,input().split()))\n    OUT = [n // 2] * (2 * k + 2)\n    extraL = [0] * (2 * k + 2)\n    extraR = [0] * (2 * k + 2)\n    for i in range(n//2):\n        left = l[i]\n        right = l[n - 1 - i]\n        OUT[left + right] -= 1\n        extraL[min(left,right)] += 1\n        extraR[max(left,right) + k + 1] += 1\n\n    curr = 0\n    for i in range(2 * k + 2):\n        curr += extraR[i]\n        extraR[i] = curr\n\n    curr = 0\n    for i in range(2 * k + 1, -1, -1):\n        curr += extraL[i]\n        extraL[i] = curr\n        \n    for i in range(2 * k + 2):\n        OUT[i] += extraL[i] + extraR[i]\n\n    print(min(OUT))\n            \n", "A = [0 for x in range(400005)]\nt = int(input())\ndef mymin(a,b):\n    if(a<b):\n        return a\n    else:\n        return b\n\ndef mymax(a,b):\n    if(a>b):\n        return a\n    else:\n        return b\n\nfor tests in range(t):\n    [n,k] = input().split()\n    n = int(n)\n    k = int(k)\n    B = input().split()\n    for i in range(2,(2*k)+1):\n        A[i] = 0\n    n2 = int(n/2)\n    for i in range(n2):\n        B[i] = int(B[i])\n        B[n-1-i] = int(B[n-1-i])\n        mi = mymin(B[i],B[n-1-i])\n        ma = mymax(B[i],B[n-1-i])\n        A[2] += 2\n        A[mi+1] -= 1\n        A[mi+ma] -= 1\n        if(mi+ma+1 <= 2*k):\n            A[mi+ma+1] +=1\n        if(ma+k+1 <= 2*k):\n            A[ma+k+1] +=1\n    ans = n\n    for i in range(2,(2*k)+1):\n        A[i] += A[i-1]\n        if(A[i]<ans):\n            ans = A[i]\n    print(ans)\n"]