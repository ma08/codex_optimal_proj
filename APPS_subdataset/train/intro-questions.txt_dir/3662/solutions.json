["def xor(a,b):\n    return a != b", "def xor(a,b):\n    return a ^ b", "from operator import xor", "def xor(a,b):\n    return a is not b", "def xor(a,b):\n    print(a,b)\n    if a == True and b == True:    \n        return False\n    elif a == True or b == True:\n        return True\n    return False", "xor = int.__xor__", "xor=lambda a,b: a!=b", "xor = __import__(\"operator\").__xor__", "def xor(a,b):\n    #your code here\n    return False if a and b else a or b", "def xor(a,b):\n    return False if (a and b) == True or (a or b) == False else True", "def xor(a,b):\n    return len(set([a, b])) > 1", "xor = lambda *_: _[0]^_[1]", "xor = bool.__xor__", "def xor(a,b):\n    return bool((a + b) % 2)", "def xor(a,b):\n    if a == True and b == True:return False\n    if a == True and b == False:return True\n    if a == True and b == True:return True\n    if a == False and b == False:return False\n    else: return True", "def xor(a,b):\n    return abs(a-b)", "def xor(a,b):\n    if a == b:\n        return False\n    elif a != b or b != a:\n        return True", "def xor(a,b):\n    truCount = 0\n    if a:\n        truCount += 1\n    if b:\n        truCount += 1\n    if truCount == 1:\n        return True\n    return False", "def xor(a,b):\n    #your code here\n    result = a ^ b\n    return result", "def xor(a,b):\n    return True if (False in (a, b)) and (True in (a, b)) else False", "def xor(a,b):\n    if a==b:\n        return False\n    return True if a or b ==True else False", "def xor(a,b):\n    if a == b:\n        return False\n    elif a == True and b == False:\n        return True\n    elif a == False and b == True:\n        return True\n            \n    #your code here\n", "def xor(a,b):\n    return (a+b)*((not a) + (not b))", "def xor(a,b):\n    if a==b==True or a==b==False:\n        return False\n    else:\n        return True", "def xor(a,b):\n    if a == b == True:\n        return False\n    return True if a==True or b==True else False\n", "def xor(a,b):\n    c = 0\n    n = str(a).count(\"True\")\n    m = str(b).count(\"True\")\n    c = n + m\n    return (c%2)!=0", "def xor(a,b):\n    return (a==True or a==False) and a!=b", "def xor(a,b):\n    if a == b:\n        return False\n    if a == True or b == True:\n        return True", "def xor(a,b):\n    return a != b and max(a,b) == True", "def xor(a,\n        b):\n\n    return a != b\n", "def xor(a,b):\n    return a==True and b!=True or a==False and b!=False", "def xor(a,b):\n    if a is True and b is True:\n        return False\n    elif a is False and b is False:\n        return False\n    else:\n        return True\n", "def xor(a,b):\n    return a or b if (a,b) != (True,True) else False", "def xor(a: bool, b: bool) -> bool:\n    return a ^ b", "def xor(a,b):\n    if a  is True and b is False or b is True and a is False:\n            return True\n    else:\n        return False\n", "def xor(a,b):\n    count = 0\n    if a == True:\n        count += 1\n    if b == True:\n        count += 1\n    if a != True:\n        count -= 1\n    if b != True:\n        count -= 1\n    if count == 0:\n        return True\n    return False", "def xor(a,b):\n    if a ^ b == False:\n        return False\n    elif b ^ b == False:\n        return True", "xor = lambda a, b: True if (not a and b) or (a and not b) else False", "def xor(a,b):\n    return b != a", "def xor(a,b):\n    return a is not b\n    # by not it checks if a is not equal to b thus 'xor'\n", "def xor(a,b):\n    if a == False and b == False:\n        return False\n    if a and b == True:\n        return False\n    if a or b == False and a or b == True:\n        return True", "def xor(a,b):\n    a =[a]\n    b = [b]\n    #if (sum(a+b) ==0) or (sum(a+b) == 2):\n     #   return False\n    #else:\n     #   return True\n    return (sum(a+b) ==1)", "def xor(a,b):\n    '''Function evaluates 2 expressions and returns true if only one of them is true'''\n    if a is True and b is True:\n        return False\n    elif a is True or b is True:\n        return True\n    else:\n        return False\n    pass", "def xor(a,b):\n    if a==True and b==True:\n        return False\n    elif a==True and b==False:\n        return True\n    elif b==True and a==False:\n        return True\n    elif a==False and b==False:\n        return False", "def xor(a,b):\n    if (a == True and b == False) or (a == False and b == True):\n        return True #f'{a} xor {b} == True'\n    else:\n        return False #f'{a} xor {b} == False'", "def xor(a,b):\n    if a is b:\n        return False\n    else:\n        return a or b", "def xor(a,b):\n    if a is True and b is False:\n        return True\n    elif b is True and a is False:\n        return True\n    else:\n        return False", "def xor(a,b):\n    \n    if a and b == True: return False\n    if a or b == True: return True\n    return False", "def xor(a,b):\n    #your code here\n    if a and b == True:\n        return False\n    elif a or b == True:\n        return True\n    else:\n        False\n    return False\n", "def xor(a,b):\n    if a == False and b == True or b == False and a == True:\n        return True\n    else:\n        return False", "def xor(a,b):\n    if not a:\n        if b:\n            return True\n        else:\n            return False\n    elif not b:\n        if a:\n            return True\n        else:\n            return False\n    else:\n        return False", "def xor(a,b):\n    if a == True and b == True:\n        return False\n    if a == False and b == False:\n        return False\n    else:\n        return True\n", "def xor(a,b):\n    if a == True and b == True:\n        return False\n    if a or b == True:\n        return True\n    else:\n        return False", "def xor(a,b):\n    if a!=b:\n        return True\n    elif a==b:\n        return False\n    else:\n        return False", "def xor(a,b):\n    print((a, b))\n    if a == True and b == False or b == True and a == False:\n        return True\n    else:\n        return False\n    #your code here\n", "def xor(a,b):\n    return ((1-a)+(1-b))%2==1", "xor = lambda a, b:False if a and b else True if a or b else False", "def xor(a,b):\n    j=False\n    if(a!=b):\n        j=True\n    return j    \n    #your code here\n", "def xor(a,b):\n    return False if a and b or a == False and b == False else True", "def xor(a,b):\n    if a is True:\n        if b is True:\n            return False\n    if a is False:\n        if b is False:\n            return False\n    if b is True:\n        if a is True:\n            return False\n    if b is False:\n        if a is False:\n            return False\n    if a is True:\n        if b is False:\n            return True\n    if b is True:\n        if a is False:\n            return True", "def xor(a,b):\n    if a or b:\n        if a and b:\n            return False\n        return True\n    else:\n        return False", "def xor(a,b):\n    if (a == True and b == True) :\n        return False\n    if a == True or b == True:\n        return True\n    return False\n", "def xor(a,b):\n    if int(a + b) == 0:\n        return False\n    elif int(a + b) == 1:\n        return True\n    elif int(a + b) == 2:\n        return False", "def xor(a,b):\n    x = int(a)\n    y = int(b)\n    return a^b\n", "def xor(a,b):\n    if a == False and  b == False:\n        return False\n    elif a == True and b == True:\n        return not a\n    return a or b", "def xor(a,b):\n    if a==True and b==True:\n        return False\n    elif a==True and b==False:\n        return True\n    elif a==False and b==False:\n        return False\n    else:\n        return True", "def xor(a,b):\n    return (a,b) == (True,False) or (a,b) == (False, True)", "xor = lambda x, y: x is not y", "def xor(a,b):\n    if a == True:\n        if b == True:\n            return False\n        else:\n            return True\n    elif b == True:\n        if a == True:\n            return False\n        else:\n            return True\n    else:\n        return False", "def xor(a,b):\n  if a and b == True:\n    return False\n  else:\n    return a or b\n", "def xor(a,b):\n    return (a is b) is False", "def xor(a,b):\n    return not (not (a or b) or (a and b))", "def xor(a,b):\n    if a == True and b == True:\n        return False\n    elif (a == True and b == False) or (a == False and b == True):\n        return True\n    else:\n        return False", "def xor(a,b):\n    my_bool = True\n    if a and b:\n        return False\n    elif a == False and b == False:\n        return False\n    elif a or b:\n        return True\n    \n", "def xor(a,b):\n    \n    if a == True and b == False:\n        return True \n    elif a == False and b == False:\n        return False \n    elif a == False and b == True:\n        return True\n    elif a == True and b == True:\n        return False", "def xor(a,b):\n    if a:\n        if b:\n            return False\n    return a or b", "def xor(a,b):\n    if a is not b:\n        return True\n    else:\n        return False", "def xor(a,b):\n    if(a == False and b == False):\n        return False\n    if(a == True and b == True):\n        return False\n    if(a == False and b == True):\n        return True\n    if(a == True and b == False):\n        return True", "# end goal - function should return True if exactly ONE of two expressions evalualte to true, otherwise false\n# input = two booleans, a and b\n# output = boolean\n\n# How would the computer recognize that only one boolean is True when nested? by comparing the two booleans rather than conditionals for each statement\n\n#function xor taking two expressions a, b\ndef xor(a,b):\n# if a is not equal to b, then only one of the expressions can be True\n    return a != b\n", "def xor(a,b):\n    if a is False and b is True:\n        return True\n    elif a is True and b is False:\n        return True\n    else:\n        return False", "def xor(a,b):\n    if a == b:\n        return False\n    print(a,b)\n    return any([a,b])", "def xor(a,b):\n    if a == True:\n        if b == True:\n            return False\n    if a == True:\n        if b == False:\n            return True\n    if a == False:\n        if b == False:\n            return False\n    if a == False:\n        if b == True:\n            return True", "def xor(a,b):\n    #your code here\n    # checking the a and b values for false - false respectively \n    if not a and not b:\n        return False\n    # checking the a and b values for true - false\n    elif a and not b:\n        return True\n    # checking the a and b values for false - true\n    elif not a and b:\n        return True\n    # checking the a and b values for true - true respectively \n    else:\n        return False", "def xor(a,b):\n    xor = False\n    if a == True and b == True:\n        xor = False\n    elif a == False and b == False:\n        xor = False\n    elif a == True and b == False:\n        xor = True\n    elif a == False and b == True:\n        xor = True\n    return xor", "def xor(a,b):\n    return (a+b < 2) and (a+b > 0)", "def xor(a,b):\n    answer = 0\n    if a == True:\n        answer += 1\n    if b == True:\n        answer += 1\n    if answer == 1:\n        return True\n    else:\n        return False\n        \n", "def xor(a,b):\n    if a == True and b == True:\n        return False\n    elif a == False and b == False:\n        return False\n    elif a == False and b == True:\n        return True\n    elif a == True and b == False:\n        return True\n    else:\n        return False", "xor = lambda a,b: int(a) ^ int(b)", "def xor(a,b):\n    if a is True and b is True:\n        return False\n    if a is True and b is False:\n        return True\n    if a is False and b is True:\n        return True\n    if a is False and b is False:\n        return False", "xor = lambda a, b : int(a) + int(b) == 1", "from operator import xor as xor_\nfrom functools import reduce\n\ndef xor(a,b):\n    return reduce(xor_, (a, b))", "def xor(a,b):\n    if a == False:\n        if b == True:\n            return True\n        elif b == False:\n            return False\n    if a == True:\n        if b == True:\n            return False\n        elif b == False:\n            return True", "xor = lambda a,b: a+b == 1", "def xor(a,b):\n    c = 0\n    if a:\n        c += 1\n    if b:\n        c += 1\n    if c == 1:\n        return True\n    else:\n        return False\n", "from operator import xor as xor1\ndef xor(a,b):\n    return xor1(a,b)", "def xor(a,b):\n    return False if a==b else True\n    \n#returning False when a equals to b else its returning true\n", "def xor(a,b):\n\n   result = True\n   \n   if a==True and b==True:\n      result=False\n   elif (a == True and b == False) or   (b == True and a ==False):\n      result=True\n   elif a==False and b==False:\n      result=False \n      \n   return result   ", "def xor(a,b):\n    print(a,b)\n    if a == True and b == False:\n        result = True\n    elif a == False and b == True:\n        result = True\n    else:\n        result = False\n    return result", "def xor(a,b):\n    return (False, True) [a != b]"]