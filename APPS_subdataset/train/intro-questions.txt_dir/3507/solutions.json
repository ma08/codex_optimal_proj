["def delete_nth(order,max_e):\n    ans = []\n    for o in order:\n        if ans.count(o) < max_e: ans.append(o)\n    return ans\n", "def delete_nth(order, max_e):\n    d = {}\n    res = []\n    for item in order:\n      n = d.get(item, 0)\n      if n < max_e:\n        res.append(item)\n        d[item] = n+1\n    return res", "def delete_nth(order,max_e):\n    answer = []\n    for x in order:\n        if answer.count(x) < max_e:\n            answer.append(x)\n            \n    return answer", "def delete_nth(order,max_e):\n    return [o for i,o in enumerate(order) if order[:i].count(o)<max_e ] # yes!", "from collections import defaultdict\n\ndef delete_nth(order,max_e):\n    dct = defaultdict(int)\n    res = []\n    for i in order:\n        dct[i] += 1\n        if dct[i] <= max_e:\n            res.append(i)\n    return res", "from collections import Counter\n\ndef delete_nth(order, max_e):\n    c = Counter()\n    result = []\n    for element in order:\n        if c[element] < max_e:\n            c[element] += 1\n            result.append(element)\n    return result", "def delete_nth(order,max_e):\n    return [order[i] for i in range(len(order)) if order[0:i+1].count(order[i]) <= max_e]", "def delete_nth(xs, max_count):\n  ret=[]\n  counts={x:0 for x in xs}\n  for x in xs:\n    counts[x]+=1\n    if counts[x]<=max_count:\n      ret.append(x)\n  return ret", "from collections import defaultdict\n\ndef delete_nth(order,max_e):\n    count = defaultdict(int)\n    ret = []\n    for x in order:\n        count[x] += 1\n        if count[x] <= max_e:\n            ret.append(x)\n    return ret"]