["levels = [0, 1, 2, 3]\nbuttons = ['0', '1', '2', '3']\ndef goto(level,button):\n    if level not in levels or button not in buttons:\n        return 0\n    else:\n        return int(button) - level", "def goto(l,b):\n    if b in ('0','1','2','3') and l in (0,1,2,3):\n        return int(b)-l\n    return 0", "def goto(level,button):\n    if type(level) is not int or level>3 or type(button) is not str or int(button)>3:\n        return 0\n    return int(button)-level\n", "def goto(level, button):\n    try:\n        return int(button) - level if button in \"0123\" and level in {0, 1, 2, 3} else 0\n    except (TypeError, ValueError):\n        return 0\n", "def goto(level,button):\n    return int(button)-level if isinstance(level, int) and isinstance(button, str) and level>=0 and level<=3 and int(button)>=0 and int(button)<=3 else 0\n", "def goto(l, b):\n    return int(b) - l if b in (\"0\", \"1\", \"2\", \"3\") and l in (0, 1, 2, 3) else 0", "def goto(level = None,button = None):\n    if level not in (0,1,2,3) or button not in ('0','1','2','3'):\n        return 0\n    else:\n        move = int(button) - level\n        return move", "def goto(level, button):\n    return level in range(4) and button in list('0123') and int(button) - level", "goto = lambda level,button: 0 if level not in [0,1,2,3] or button not in ['0','1','2','3'] else int(button)-level", "goto=lambda l,b:l in(0,1,2,3)and b in list('0123')and int(b)-l"]