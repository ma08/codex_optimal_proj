["def freq_seq(s, sep):\n    return sep.join([str(s.count(i)) for i in s])\n", "from collections import Counter\n\ndef freq_seq(s, sep):\n    freq = Counter(s)\n    return sep.join(str(freq[c]) for c in s)\n", "from collections import Counter\n\ndef freq_seq(string, separator):\n    count = Counter(string)\n    return separator.join(str(count[symbol]) for symbol in string)\n", "def freq_seq(s, sep):\n    return sep.join(str(s.count(c)) for c in s)\n", "from collections import Counter \n\ndef freq_seq(s, sep):\n    dic = Counter(s) \n    result = ''\n      \n    for char in s:\n        for key, value in list(dic.items()):\n            if char == key:\n                result  += str(value)+sep\n    \n    \n    return result[:-1]\n", "def freq_seq(s, sep):\n    return sep.join([str(s.count(c)) for c in s])\n", "from collections import Counter\n\ndef freq_seq(string, sep):\n    counter = Counter(string)\n    return sep.join(str(counter[char]) for char in string)", "def freq_seq(s, sep):\n    numero = len(s)\n    conta = 0\n    contatore = 0\n    contatore1 = 0\n    lista = []\n    while conta != numero:\n        z = str(s[conta])\n        while contatore1 < numero:\n            if z == s[contatore1]:\n                contatore += 1\n            contatore1 += 1\n        contatore1 = 0\n        lista.append(str(contatore))\n        contatore = 0\n        conta += 1\n    x = sep.join(lista)\n    return x\n\n    \n", "def freq_seq(s, sep):\n    return sep.join([str(s.count(letter)) for letter in s])", "def freq_seq(s, sep):\n    freq = {}\n    newStr = []\n    for i in s:\n        if freq.get(i) == None:\n            freq[i] = 1\n        else:\n            freq[i] += 1\n    for i in s:\n        newStr.append(str(freq[i]))\n    return sep.join(newStr)\n"]