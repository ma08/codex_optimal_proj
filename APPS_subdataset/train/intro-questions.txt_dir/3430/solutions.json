["def lowest_temp(t):\n  return min((int(x) for x in t.split()), default=None)", "def lowest_temp(t):\n    return min(map(int,t.split()),default=None)", "def lowest_temp(t):\n    if t:\n        return min([int(x) for x in t.split()])\n    else:\n        return None\n", "def lowest_temp(t):\n    return min([int(tm) for tm in t.split()]) if t else None", "def lowest_temp(s):\n    return min((int(x) for x in s.split()), default=None)", "def lowest_temp(t):\n    if t == '':\n        return None\n    t = t.split()\n    low = int(t[0])\n    for i in t:\n        if  int(i) < low:\n            low = int(i)\n    return low", "def lowest_temp(t):\n    return min(int(x) for x in t.split()) if t else None\n", "lowest_temp=lambda s:min(map(int,s.split()),default=None)", "def lowest_temp(t):\n    if not t:\n        return None\n    return min(int(x) for x in t.split())", "lowest_temp=lambda t: min(d for d in map(int,t.split())) if t else None"]