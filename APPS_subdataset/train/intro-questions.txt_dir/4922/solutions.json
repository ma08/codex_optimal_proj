["def list_to_array(lst):\n    arr = []\n    while lst != None:\n        arr.append(lst.value)\n        lst = lst.next\n    return arr", "def list_to_array(lst):\n    return ([lst.value] + list_to_array(lst.next)) if lst else []", "def list_to_array(ll):\n    output = []\n    while ll:\n        output.append(ll.value)\n        ll = ll.__next__\n    return output\n", "def list_to_array(lst):\n    res = []\n    while lst:\n        res.append(lst.value)\n        lst = lst.__next__\n    return res\n", "def list_to_array(lst):\n    list = []\n    while lst is not None:\n        list.append(lst.value)\n        lst = lst.__next__\n    return list\n        \n", "list_to_array = lambda l: list() if l == None else [l.value] + list_to_array(l.next)", "def list_to_array(lst):\n    list=[]\n    while lst:\n        list.append(lst.value)\n        lst=lst.next\n    return list", "def list_to_array(lst):\n    array = []\n    while lst:\n      array.append(lst.value)\n      lst = lst.next\n    return array", "def list_to_array(node):\n    return [] if node is None else [node.value] + list_to_array(node.next)", "def list_to_array(node):\n    arr = []\n    while node:\n        arr.append(node.value)\n        node = node.next\n    return arr"]