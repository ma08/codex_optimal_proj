["def beasts(heads, tails):\n    orthus = (5 * tails - heads) / 3\n    hydra = tails - orthus\n    return [orthus, hydra] if orthus >= 0 and hydra >= 0 else 'No solutions'", "def beasts(h,t):\n    out= [(5*t-h)/3, (h-2*t)/3]\n    return all(x.is_integer() and x>=0 for x in out) and out or 'No solutions'", "def beasts(heads, tails):\n    if heads not in range(tails * 2, tails * 5 + 1, 3):\n        return \"No solutions\"\n    return [(tails * 5 - heads) / 3, (heads - tails * 2) / 3]", "def beasts(heads, tails):\n    extraheads = heads - 2 * tails\n    if extraheads % 3 != 0 or not (0 <= extraheads <= 3 * tails):\n        return \"No solutions\"\n    hydra = extraheads // 3\n    orthus = tails - hydra\n    return [orthus, hydra]", "def beasts(heads, tails):\n    h = (heads-tails*2)/3\n    if h<0 or tails-h<0: return \"No solutions\"\n    return [tails-h, h]", "beasts=lambda h, t: (lambda m: [t-m, m] if m>=0 and m<=t and m%1==0 else \"No solutions\")((h-t*2)/3.0)", "def beasts(h, t):\n    O, H = 5*t-h, h-2*t\n    if O>=O%3>=0<=H%3<=H: return [O//3, H//3]\n    else: return \"No solutions\"", "def beasts(heads, tails):\n    for orthus in range(heads//2 + 1):\n        if orthus * 2 + (tails - orthus) * 5 == heads:\n             return [orthus, tails - orthus]\n    return 'No solutions'", "def beasts(heads, tails):\n    # your code here\n    \n    o=(5*tails-heads)/3\n    h=(heads-2*tails)/3\n    \n    if o==int(o) and h == int(h) and o>=0 and h >= 0:\n        return [int(o),int(h)]\n    else:\n        return \"No solutions\"\n    #return [orthus, hydra]\n", "def beasts(heads, tails):\n    hydra = (heads - (2 * tails)) /3\n    orthus = tails - ((heads - (2 * tails)) /3)\n    if  hydra % 1 == 0 and hydra >= 0 and orthus % 1 == 0 and orthus >= 0:\n        return [orthus, hydra]\n    else:\n        return f'No solutions'\n\n"]