["import re\nclass WordDictionary:\n    def __init__(self):\n        self.data=[]\n  \n    def add_word(self,x):\n        self.data.append(x)\n  \n    def search(self,x):\n        for word in self.data:\n            if re.match(x+\"\\Z\",word): return True\n        return False", "class WordDictionary:\n  def __init__(self): self.dct = set()\n  def add_word(self, word): self.dct.add(word)\n  def word_match(self, w, s):\n    if len(w) != len(s): return False\n    try:\n      for i,c in enumerate(s):\n        if c != '.' and c != w[i]: return False\n      return True\n    except: return False\n  def search(self, s):\n    for w in self.dct:\n      if self.word_match(w, s): return True\n    return False", "import re\n\nclass WordDictionary:\n\n    def __init__(self):\n        self.d = {} \n  \n    def add_word(self, w):\n        self.d[w] = True\n  \n    def search(self, k):\n        \n        if not '.' in k:\n            return self.d.get(k, False)\n        \n        r = re.compile('^{}$'.format(k))\n        return any(r.match(x) for x in self.d.keys())", "from re import match\n\nclass WordDictionary:\n    def __init__(self):\n        self.db = []\n  \n    def add_word(self, word):\n        self.db.append(word)\n  \n    def search(self, word):\n        return bool([w for w in self.db if match(rf'^{word}$', w)])", "import re\nclass WordDictionary:\n    def __init__(self):\n       self.words = []\n    \n    def add_word(self,v):\n       self.words.append(v)\n  \n    def search(self,rg):\n        return any(re.match(r'^{}$'.format(rg),i) for i in self.words)", "from collections import defaultdict\nfrom re import compile, match\n\nclass WordDictionary(defaultdict):\n    def __init__(self):\n        super(WordDictionary, self).__init__(list)\n\n    def add_word(self, s):\n        self[len(s)].append(s)\n  \n    def search(self, s):\n        p = compile(f\"^{s}$\")\n        return any(match(p, w) for w in self[len(s)])", "from itertools import zip_longest\nclass WordDictionary:\n    def __init__(self):\n        self.d = set()\n\n    def add_word(self, s):\n        return self.d.add(s)\n\n    def search(self, s):\n        for w in self.d:\n            if all((a==b or b == '.') and a for a,b in zip_longest(w,s)):\n                return 1\n        return 0", "import re\n\n\nclass WordDictionary:\n\n    def __init__(self):\n        self.words = set()\n\n    def add_word(self, word):\n        self.words.add(word)\n\n    def search(self, pattern):\n        pattern += '$'\n        return any(re.match(pattern, word) for word in self.words)", "from itertools import zip_longest\n\nclass WordDictionary:\n\n  def __init__(self):\n    self.words = []\n\n  def add_word(self, word):\n    self.words.append(word)\n\n  def search(self, pattern):\n    return any(all((a and b == '.') or a == b for a, b in zip_longest(word, pattern)) for word in self.words)"]