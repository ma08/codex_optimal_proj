["def bonus_time(salary, bonus):\n    return \"${}\".format(salary * (10 if bonus else 1))", "def bonus_time(salary, bonus):\n    #your code here\n    if bonus :\n        return \"$\" + str(salary * 10)\n    else:\n        return \"$\" + str(salary)", "def bonus_time(salary, bonus):\n    return '$' + str(salary * [1,10][bonus])", "def bonus_time(salary, bonus):\n    return f\"${salary * 10 if bonus else salary}\"", "def bonus_time(salary, bonus):\n    \n    return '${}'.format(salary * (1 + 9*bonus))", "def bonus_time(salary, bonus):\n    return \"$\" + str(salary * 10) if bonus == True else \"$\" + str(salary)", "def bonus_time(salary, bonus):\n    return '$%d' % (salary * 10 if bonus else salary)", "def bonus_time(salary, bonus):\n    if bonus: salary = salary * 10\n    return str.format('${0}', salary)", "bonus_time = lambda salary, bonus: '${}'.format(salary * 10 if bonus else salary)    ", "def bonus_time(salary, bonus):\n    #your code here\n    return \"${0}{1}\".format(salary, \"0\" if bonus else \"\")", "def bonus_time(salary, bonus): return '${}'.format([salary, salary*10][bonus])", "bonus_time = lambda s,b: \"${}\".format(s*(10*b or 1))", "bonus_time = lambda salary, bonus: '${}'.format(salary * (10 if bonus else 1))", "def bonus_time(salary, bonus):\n    return '${0}'.format(salary * 10 if bonus else salary)", "def bonus_time(salary, bonus):\n    if bonus == True:\n        return '$' + str(salary*10)\n    else:\n        return '$' + str(salary)", "def bonus_time(salary, bonus):\n    \n    salary = int(salary)\n    bonus = bool(bonus)\n    \n    if bonus is True:\n        salary = salary * 10\n    return \"${}\".format(salary)", "def bonus_time(salary, bonus):\n    #your code here\n    if bonus :\n        salary = salary * 10\n        return \"$\" + str(salary)\n    else:\n        return \"$\" + str(salary)\n", "def bonus_time(salary, bonus):\n    if bonus == True:\n        salary = salary * 10\n    return \"$\" + str(salary)", "def bonus_time(salary, bonus):\n    return \"$%d\" % (salary * 10 ** bonus)", "def bonus_time(salary, bonus):\n    return '$%s%s' % (salary, '0' * bonus)", "def bonus_time(salary, bonus):\n    #your code here\n    return f'${salary * 10}' if bonus else f'${salary}'", "def bonus_time(salary, bonus):\n    return (\"$%d\", \"$%d0\")[bonus] % salary", "def bonus_time(salary, bonus):\n    return '${}'.format(salary * 10 ** bonus)", "def bonus_time(salary, bonus):\n    return '$' + str(salary * 10 ** int(bonus))", "def bonus_time(salary, bonus):\n    return \"$%d\" % (salary * (bonus*9 + 1))", "def bonus_time(salary, bonus):\n    return '$' + str(salary*(10 if bonus else 1))", "def bonus_time(salary, bonus):\n    return f'${salary}{\"0\"*bonus}'", "def bonus_time(salary, bonus):\n    return f'${salary * (1 + bonus * 9)}'", "def bonus_time(salary, bonus):\n    return f'${salary * (bonus * 9 + 1)}'", "def bonus_time(b, c):\n    return f\"${b}{'0'*c}\"\n", "def bonus_time(salary, bonus):\n    return f\"${salary}0\" if bonus else f\"${salary}\"", "def bonus_time(salary, bonus):\n    return f\"${salary + bonus * 9 * salary}\"", "def bonus_time(salary, bonus):\n    return f'${salary * (1 + 9 * bonus)}'", "def bonus_time(salary, bonus):\n    return \"$\"+ str(int(salary) + (bonus * (9 * salary)))", "def bonus_time(salary, bonus):\n    return '$' + str(salary * 10 if bonus else salary)", "def bonus_time(salary, bonus):\n    return ('${}'.format(salary * 10) if bonus else '${}'.format(salary))", "def bonus_time(salary, bonus):\n    return ('${}'.format(salary),'${}'.format(salary*10))[bonus]", "def bonus_time(salary, bonus):\n    s = salary*10\n    if bonus is True:\n        return \"$\"+str(s)\n    if bonus is False:\n        return \"$\"+str(salary)\n", "def bonus_time(salary, bonus):\n    i = 0\n    if bonus is True:\n        i = salary*10\n    if bonus is False:\n        i = salary\n    return '$'+ str(i)\n", "def bonus_time(salary, bonus):\n    if bonus == True:\n        result = \"$\"+str(salary*10)\n    elif bonus == False:\n        result = \"$\"+str(salary)\n    return result\n    #your code here\n", "def bonus_time(salary, bonus):\n    a = lambda s, b: \"${}\".format(s*10) if b== True else \"${}\".format(s)\n    return a(salary, bonus)", "def bonus_time(salary, bonus):\n    \n    if bonus == True:\n        salary=salary*10\n        s='$'+str(salary)\n        return s\n    else:\n        s='$'+str(salary)\n        return s\n", "def bonus_time(salary, bonus):\n    if bonus==True:\n        return '$'+str(salary)+'0'\n    elif bonus==False:\n        return '$'+str(salary)", "bonus_time=lambda s,b:f'${s*(9*b+1)}'", "def bonus_time(salary, bonus):\n    if bonus == True:\n       k = str(salary * 10)\n    else:\n       k = str(salary)\n    return ('$'+k)", "def bonus_time(s, bonus):\n    if bonus==True:\n        return \"$\"+str(s*10)\n    else:\n        return \"$\"+str(s) \n     \n        \n    #your code here\n", "def bonus_time(s, b):\n    return '${}'.format(s*10 if b else s)", "def bonus_time(salary, bonus):\n    #your code he\n    b = salary\n    if bonus:\n        b*=10\n    return \"$\"+str(b)", "def bonus_time(salary, bonus):\n    return \"$\" + str(salary * 10) if bonus == True else f\"${salary}\"", "def bonus_time(salary, bonus):\n    return '$' + str((1, 10)[bonus] * salary)", "def bonus_time(salary, bonus):\n    if bonus:\n        return F\"${((salary * 10))}\"\n    return F\"${salary}\"", "def bonus_time(salary, bonus):\n    if bonus == True:\n        salary = salary * 10\n    amt = str(salary)\n    return \"${}\".format(amt)", "bonus_time = lambda s, b:f'${s+s*b*9}'", "def bonus_time(salary, bonus):\n    #your code here\n    if(bonus==True):\n        s=str(salary*10)\n        return \"$\"+s\n    else:\n        salary=str(salary)\n        return \"$\"+salary", "def bonus_time(salary:int, bonus:bool):\n    if bonus is True:\n        return (\"$\"+str(salary*10))\n    return (\"$\"+str(salary))", "def bonus_time(salary, bonus):\n    #your code here\n    ln = ''\n    if bonus:\n        ln += '0'\n    else:\n        ln\n    return f'${salary}{ln}'", "def bonus_time(a, b):\n    return f\"${a*10 if b else a}\"", "def bonus_time(salary, bonus):\n    return f\"{'$'+str(salary*10)}\" if bonus else f\"{'$'+str(salary)}\"", "def bonus_time(salary, bonus):\n    #your code here\n    x=lambda salary,bonus: str('$'+str(salary*10)) if(bonus==True) else str('$'+str(salary))\n    return x(salary,bonus)", "def bonus_time(salary, bonus):\n    if bonus == True:\n        s = salary*10\n        s=str(s)\n        return '$'+s\n    else:\n        s = str(salary)\n        return '$'+s", "def bonus_time(salary, bonus):\n    if bonus:\n        payday = salary * 10\n        return '$' + str(payday)\n    else:\n        return '$' + str(salary)", "def bonus_time(salary, bonus):\n    return f\"${int(salary) * 10}\" if bonus else f\"${salary}\"", "def bonus_time(salary, bonus):\n    return \"$\"+str(salary) if bonus is False else \"$\"+str(salary*10)", "def bonus_time(salary, bonus):\n    return \"$%d\" % (salary*10 if bonus==True else salary)", "bonus_time = lambda salary, bonus: bonus and \"$\" + str(salary * 10) or \"$\" + str(salary)", "def bonus_time(salary, bonus):\n    if bonus == True:\n        new = salary * 10\n        return str(\"$\" + str(new))\n    else:\n        return str(\"$\" + str(salary))", "def bonus_time(salary, bonus):\n    #your code here\n    if bonus == True:\n        m = salary*10\n        return '$'+str(m)\n    return '$'+str(salary)", "def bonus_time(salary, bonus):\n    if (bonus == True):\n        salary=salary*10\n    else:\n        salary=salary+0\n    return (\"$\"+str(salary))\n", "def bonus_time(salary, bonus):\n    if bonus == True:\n        result = salary * 10\n    else:\n        result = salary\n    \n    return f\"${result}\"", "bonus_time = lambda s, b: f\"${s*10 if b else s}\"", "def bonus_time(salary, bonus):\n    return \"${}\".format(str(salary * 10)) if bonus == True else \"${}\".format(salary)", "def bonus_time(salary, bonus):\n    return '$%d' % (salary * (9 * bonus + 1))", "def bonus_time(salary, bonus):\n    if bonus == True:\n        s = salary*10\n    else:\n        s = salary\n    return str('$'+str(s))\n", "def bonus_time(salary, bonus):\n    b = salary*10 if bonus else salary\n    return \"$\" + str(b)", "def bonus_time(salary, bonus):\n    x = salary * 10\n    \n    if bonus == True:\n        return f'${x}'\n    elif bonus == False:\n        return f'${salary}'", "def bonus_time(s, b):\n    return \"$\" + (str(s * 10) if b == True else str(s)) #this is not the correct answer", "def bonus_time(salary, bonus):\n    x = str(int(salary) * 10)\n    y = str(int(salary))\n    if bonus == True:\n        return str('$')+ x\n    else:\n        return str('$')+ y", "def bonus_time(salary, bonus):\n    return f'${salary}' + '0' if bonus == True else f'${salary}'", "def bonus_time(salary, bonus):\n    if bonus == True:\n        salary *= 10\n        a = \"${}\".format(salary)\n        return a\n    return \"$\" + str(salary)\n    #your code here\n", "def bonus_time(salary, bonus):\n    pay = salary * 10 if bonus else salary\n    return f\"${pay}\"", "def bonus_time(salary, bonus):\n    if bonus == True:\n        return f\"${salary}0\"\n    else:\n        return f\"${salary}\"", "def bonus_time(salary, bonus):\n    x = salary;\n    y = 10 * salary\n    if bonus:\n        return '$'+ str(y)\n    else:\n        return '$'+ str(x)", "def bonus_time(salary, bonus):\n    if not bonus:\n        return f\"${salary}\"\n    else:\n        return f\"${salary * 10}\"\n    \n    \n    \n", "def bonus_time(salary, bonus):\n    #your code here\n    total = ''\n    if bonus == True:\n        return total + '$' + str(salary * 10)\n    return total + '$' + str(salary)", "def bonus_time(salary, bonus):\n    if bonus:\n        salary = salary * 10\n    x = str(salary)\n    return '$'+x\n    #your code here\n", "def bonus_time(salary, bonus):\n    result = str(salary*10) if bonus else str(salary)\n    return \"${}\".format(result)", "def bonus_time(salary, bonus):\n    return '${}'.format(salary * (10 if bonus == True else 1))", "def bonus_time(salary, bonus):\n    #your code here\n    new_salary = salary * 10\n    if bonus == True:\n        return \"$\" + str(new_salary)\n    return \"$\" + str(salary)", "def bonus_time(salary, bonus):\n    if bonus == True:\n        total = salary * 10\n        return \"$\" + str(total)\n    if bonus == False:\n        return \"$\" + str(salary)", "def bonus_time(salary, bonus):\n    dollar = \"$\"\n    if bonus == True:\n        result = str(salary*10)\n        return dollar + result\n    elif bonus==False:\n        return \"$\" + str(salary)", "def bonus_time(salary, bonus):\n    pay = str(salary*10) if bonus else str(salary)\n    return '${}'.format(pay)", "def bonus_time(salary, bonus):\n    i = salary * 10\n    k = salary\n    if bonus == True:\n        return \"$\" + str(i)\n    else:\n        return \"$\" + str(k) \n", "def bonus_time(salary, bonus):\n    total = salary\n    if bonus:\n        salary *= 10\n    return '$%d' % (salary)", "def bonus_time(salary, bonus):\n    int(salary)\n    bool(bonus)\n    if bonus == 1 :\n        return \"$\" + str(salary * 10)\n    elif bonus == 0 :\n        return \"$\" + str(salary)\n", "def bonus_time(s, b):\n    return \"$\"+ str(s*(10 if b else 1))", "def bonus_time(salary, bonus):\n    #your code here\n    sum='$'\n    if bonus==True: \n        salary=salary*10\n        salary=str(salary)\n        return sum+salary\n    return sum+ str(salary)\n", "def bonus_time(salary: int, bonus: bool) -> str:\n    \"\"\"\n    If bonus is true, the salary should be multiplied 10.\n    If bonus is false, one must receive only his stated salary.\n    \"\"\"\n    return \"$\" + str(salary * 10) if bonus else \"$\" + str(salary)\n", "def bonus_time(salary, bonus):\n    if bonus == True:\n        wow =(salary * 10)\n        return '$' + str(wow)\n    else:\n        bonus == False\n        return '$' + str(salary)", "def bonus_time(salary, bonus):\n    if bonus == True:\n        amount = salary * 10\n        return \"$\"+ str(amount)\n    elif bonus == False:\n        return \"$\"+ str(salary)"]