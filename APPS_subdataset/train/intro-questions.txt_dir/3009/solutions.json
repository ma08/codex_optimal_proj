["def pairs(ar):\n    count = 0\n    for i in range(0, len(ar), 2):\n        try:\n            a, b = ar[i], ar[i+1]\n        except IndexError:\n            return count\n        \n        if abs(a-b) == 1: \n            count +=1\n        \n    return count", "def pairs(arr):\n    return sum( abs(a-b)==1 for a,b in zip(arr[::2],arr[1::2]) )", "def pairs(ar):\n    res=0\n    for i in range(1,len(ar),2):\n        if abs(ar[i]-ar[i-1])==1:\n            res+=1\n    return res\n", "pairs = lambda a: sum(abs(b - a) == 1 for a, b in zip(*[iter(a)]*2))", "def pairs(numbers):\n    return sum(abs(a - b) == 1 for a, b in zip(numbers[::2], numbers[1::2]))", "def pairs(ar):\n    return sum(1 for a,b in zip(ar[::2], ar[1::2]) if min(a,b)+1 == max(a,b))\n", "def pairs(ar):\n    return sum(1 for n in range(0, len(ar)-1, 2) if abs(ar[n] - ar[n+1]) == 1)", "def pairs(ar,count=0):\n    for c in range(len(ar)-1): \n        if c%2==0 and (ar[c+1]==ar[c]+1 or ar[c+1]==ar[c]-1): count+=1\n    return count", "pairs = lambda arr: sum(1 for i in range(len(arr)//2) if abs(arr[i*2]-arr[i*2+1])==1)", "def pairs(ar):\n  a = []\n  count = 0\n  if len(ar) % 2 == 0:\n    for i in range(0,len(ar),2):\n      if abs(ar[i] - ar[i+1]) == 1:\n        count += 1\n  else:\n    for i in range(0,len(ar)-1,2):\n      if abs(ar[i] - ar[i+1]) == 1:\n        count += 1\n  return count"]