["def skiponacci(n):\n    s = '1'\n    num = 1\n    prv = 0\n    for i in range(1,n):\n        new = num + prv\n        prv = num\n        num = new\n        if i%2 == 0:\n            s = s + ' ' + str(num)\n        else:\n            s += ' skip'\n\n    return s", "def skiponacci(n):\n    fib = [1, 1][:n]\n    for _ in range(n-2):\n        fib.append(sum(fib[-2:]))\n    return \" \".join(str(n) if i % 2 else \"skip\" for i, n in enumerate(fib, 1))", "def skiponacci(n):\n    result = [\"1\",\"skip\"]\n    suite = [1,1]\n    for i in range(2,n):\n        suite.append(suite[i-2]+suite[i-1])\n        if i % 2 != 0:\n            result.append(\"skip\")\n        else:\n            result.append(str(suite[i]))\n    return \" \".join(result[0:n])", "fib, result = [1, 1], [\"1\", \"skip\"]\nfor i in range(100):\n    fib.append(fib[-1] + fib[-2])\n    result.append(\"skip\" if i&1 else str(fib[-1]))\n\ndef skiponacci(n):\n    return ' '.join(result[:n])", "from scipy.constants import golden as \u03c6\n\ndef skiponacci(n):\n    fib = lambda n: int(round((\u03c6**n - (1-\u03c6)**n) / 5**.5))\n    return ' '.join('skip' if n%2 else str(fib(n+1)) for n in range(n))\n", "def gen_fib():\n    a, b = 1, 1\n    yield a\n    yield b\n    while True:\n        a, b = b, a + b\n        yield b\n    \ndef skiponacci(n):\n    result = []\n    for i, f in enumerate(gen_fib()):\n        if i == n:\n            break\n        result.append(str(f) if i % 2 == 0 else 'skip')\n    return ' '.join(result)", "def skiponacci(n):\n    res = []\n    a, b = 0, 1\n\n    for i in range(n):\n        a, b = a + b, a\n        res.append('skip' if i%2 else str(a))\n\n    return ' '.join(res)", "def skiponacci(n):\n    res = []\n    a, b = 0, 1\n\n    for i in range(n):\n        a, b = a + b, a\n        if i%2:\n            res.append('skip')\n        else:\n            res.append(str(a))            \n    return ' '.join(res)", "def skiponacci(n):\n    fib = [1, 1][:n]\n    for _ in range(n - 2):\n        fib.append(sum(fib[-2:]))\n    return ' '.join('skip' if c % 2 else str(a) for c, a in enumerate(fib))", "def skiponacci(n):\n    mas = []\n    fib1, fib2 = 0, 1\n    for i in range(n):\n        fib1, fib2 = fib2, fib1 + fib2\n        mas.append(fib1)\n    sas = []\n    for i in range(0, len(mas), 2):\n        sas.append(str(mas[i]))\n    if n % 2 == 0:\n        return \" skip \".join(sas) + \" skip\"\n    else:\n        return \" skip \".join(sas)"]