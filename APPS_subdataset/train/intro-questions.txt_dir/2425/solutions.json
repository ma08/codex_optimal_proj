["class Solution:\n     def countSegments(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: int\n         \"\"\"\n         return len(s.split())", "class Solution:\n     def countSegments(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: int\n         \"\"\"\n         count = 0\n         finished = True\n         for c in s:\n             if finished:\n                 if c is \" \": continue\n                 else:\n                     finished = False\n                     count += 1\n             else:\n                 if c is \" \":\n                     finished = True\n                 else:\n                     continue\n         return count\n", "class Solution:\n     def countSegments(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: int\n         \"\"\"\n         return len(s.split())\n", "class Solution:\n     def countSegments(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: int\n         \"\"\"\n         count = 0\n         finished = True\n         for c in s:\n             if finished:\n                 if c is \" \": continue\n                 else:\n                     finished = False\n                     count += 1\n             else:\n                 if c is \" \":\n                     finished = True\n                 else:\n                     continue\n         return count\n", "class Solution:\n     def countSegments(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: int\n         \"\"\"\n         return len(s.split())\n             # lmao is me\n", "class Solution:\n     def countSegments(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: int\n         \"\"\"\n         '''\n         counter = 0\n         wasspace = 1\n         for char in s:\n             if char == \" \":\n                 wasspace = 1\n                 continue\n             if wasspace == 1:\n                 counter += 1\n                 wasspace = 0\n         return counter\n         '''\n         return len(s.split())", "class Solution:\n     def countSegments(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: int\n         \"\"\"\n         c=0\n         l=s.split(\" \")\n         for i in l:\n             if i!=\"\":\n                 c+=1\n         return c", "class Solution:\n     def countSegments(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: int\n         \"\"\"\n         return len(s.split())", "class Solution:\n     def countSegments(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: int\n         \"\"\"\n         if len(s)==0:\n             return 0\n         seen_character = False\n         count = 0\n         for char in s:\n             if seen_character and char == ' ':\n                 count += 1\n                 seen_character = False\n             elif seen_character == False and char != \" \":\n                 seen_character = True\n         if seen_character:\n             count += 1\n         return count\n", "class Solution:\n     def countSegments(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: int\n         \"\"\"\n         return len(s.split())", "class Solution:\n     def countSegments(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: int\n         \"\"\"\n         mylist = s.split()\n         return len(mylist)"]