["def sum_mul(n, m):\n    if m>0 and n>0:\n        return sum(range(n, m, n))\n    else:\n        return 'INVALID'", "def sum_mul(n, m):\n    return sum(x for x in range(n, m, n)) if m > 0 and n > 0 else 'INVALID'", "xrange = range\n\ndef sum_mul(n, m):\n    if m <= 0 or n <= 0:\n        return \"INVALID\"\n    k = (m - 1) // n\n    return (k + 1) * k // 2 * n", "def sum_mul(n, m):\n    return sum(range(n, m, n)) if n > 0 and m > 0 else \"INVALID\"", "sum_mul = lambda n, m: sum(range(n, m, n)) if n > 0 and m > 0 else \"INVALID\"\n", "def sum_range(end, divisor=None):\n    if divisor:\n        return int(sum_range(end // divisor)) * divisor\n    return end * (end+1) / 2\n\ndef sum_mul(n, m):\n    return sum_range(m-1, divisor=n) if n > 0 and m > 0 else 'INVALID'\n", "def sum_mul(n, m):\n    sumu = 0\n    if n > 0 and m > 0:\n        for i in range(n, m):\n            if (i % n == 0):\n                sumu += i\n    else:\n        return 'INVALID'\n    return sumu", "def sum_mul(n, m):\n    return sum(range(n, m, n)) if n > 0 < m else 'INVALID'", "def sum_mul(n, m):\n    L=[]\n    if n<=0 or m<=0:\n        return 'INVALID'\n    else:\n        for i in range(0,m):\n            if i*n<m:\n                L.append(i*n)\n        return sum(L)", "def sum_mul(n, m):\n    return sum([x for x in range(n, m, n)]) if n > 0 < m else \"INVALID\"", "def sum_mul(n, m):\n    return sum(range(n,m-1,n)) if n > 0 and m > 0 else 'INVALID'", "xrange = range\ndef sum_mul(n, m):\n    if m <= 0 or n <= 0:\n        return 'INVALID'\n    return sum(x for x in range(m) if x % n == 0)", "from typing import Union\n\ndef sum_mul(n: int, m: int) -> Union[int, str]:\n    \"\"\" Find the sum of all multiples of `n` below `m`. \"\"\"\n    return \"INVALID\" if any(map(lambda _: _ <= 0, [n, m])) else sum([_ for _ in range(m)][::n])", "def sum_mul(n, m):\n    s = n>0 and sum([i for i in range(n,m,n)])\n    return ['INVALID', s][n>0 and m>0]", "def sum_mul(n, m):\n    if n > 0 and m > 0:\n        k = max(m // n - (not m % n), 0)\n        return n * k * (k + 1) // 2\n    return 'INVALID'", "def sum_mul(n, m):\n    return sum([i for i in range(m) if not i % n]) if m > 0 < n else 'INVALID'", "sum_mul = lambda n, m: 'INVALID' if n <= 0 or m <= 0 else sum(x for x in range(m) if x % n == 0)", "def sum_mul(n, m):\n    if(n<=0 or m<=0):\n        return \"INVALID\"\n    else:\n        s=0\n        for i in range(1,m):\n            j=i*n\n            if(j<m):\n                s+=j\n    return s\n", "def sum_mul(n, m):\n    if n <= 0 or m <= 0:\n        return 'INVALID'\n    else:        \n        return sum([i for i in range(1, m) if i % n == 0])\n", "def sum_mul(n, m):\n    if n<1 or m<1:\n        return \"INVALID\"\n    multiples_sum = 0\n    for num in range(n, m, n):\n        multiples_sum += num\n    return multiples_sum", "def sum_mul(n, m):\n    sum = 0\n    if n <= 0 or m <= 0:\n        return 'INVALID'\n    for x in range (n, m, n):\n        sum += x\n    return sum", "def sum_mul(n, m):\n    print((n, m))\n    try:\n        return \"INVALID\" if n < 1 or m < 1 else sum(range(n, m, n))    \n    except:\n        return \"INVALID\"\n", "def sum_mul(n, m):\n    if m < 1 or n < 1:\n        return \"INVALID\"\n    else:\n        grandtotal = []\n        subtotal = 0\n        for i in range(1, m):\n            if i % n == 0:\n                subtotal = subtotal + i\n                grandtotal.append(i)\n        return sum(grandtotal)\n", "def sum_mul(n, m):\n    answer = 0\n    if n > 0 and m > 0:\n        for i in range(n, m, n):\n            answer += i\n        return answer\n    else:\n        return 'INVALID'", "def sum_mul(n, m):\n    return sum(el for el in range(n, m, n)) if n > 0 < m else 'INVALID'", "def sum_mul(n, m):\n    result = 0\n    if n > 0 < m:\n        try:\n            for num in range(n, m, n):\n                result += num\n            return result\n        except:\n            return 'INVALID'\n    else:\n        return 'INVALID'", "def sum_mul(n, m):\n    return sum([num for num in range(0, m, n)]) if m > 0 and n > 0 else \"INVALID\"", "def sum_mul(n, m):\n    return sum(range(n, m, n)) if not(n <= 0 or m <= 0) else 'INVALID'\n", "def sum_mul(n, m):\n    print((n, m))\n    if m <= 0 or n <= 0:\n        return 'INVALID'\n    return sum(range(n, m, n))\n", "def sum_mul(n, m):\n    # it is invalid if n or m is less or equal to zero\n    return 'INVALID' if n <= 0 or m <= 0 else sum([i for i in range(n, m, n)])", "def sum_mul(n, m):\n    print(n,m)\n    if n <= 0 or m <= 0:\n        return \"INVALID\"\n    return sum(i for i in range(m) if i%n == 0)", "def sum_mul(n, m):\n    print(n)\n    print(m)\n    if n <= 0:\n        return \"INVALID\"\n    elif m <= 0:\n        return \"INVALID\"\n    if n == m:\n        return 0\n    res = 0\n    j = n\n    for i in range(n, m , j):\n        res += i\n    return res\n", "def sum_mul(n, m):\n    if n>0 and m>0:\n       i=1\n       ergebnis=0\n       \n       for i in range (n,m,n):\n            ergebnis+=i\n       return ergebnis\n    else:\n       return \"INVALID\"", "def sum_mul(n, m):\n    if n < 1 or m < 1:\n        return \"INVALID\"\n    else:\n        return sum(n * (i) for i in range((m)//n + 1)) if m%n != 0 else sum(n * (i) for i in range((m)//n))\n    \n    2, 4, 6, 8", "def sum_mul(n, m):\n    if n<=0 or m<=0:\n        return \"INVALID\"\n    else:\n        return sum([i for i in range(n,m,n)])", "def sum_mul(n, m):\n    sum = 0\n    for i in range(1,m):\n        try:\n            if i % n == 0 and m > 0 and n > 0:\n                sum += i\n        except ZeroDivisionError:\n            continue\n        \n    return sum if n > 0 and m > 0 else 'INVALID'", "def sum_mul(n, m):\n    if m < 1 or n < 1: return 'INVALID'\n    return 0 if m < n else n * sum(range(1+(m-1)//n))", "def sum_mul(n, m):\n    try: return sum(i for i in range(n,m,n)) if n>0<m else 'INVALID'\n    except: return 'INVALID'", "def sum_mul(n, m):    \n    if n <= 0 or m <= 0:\n        return \"INVALID\"\n        \n    try:\n        return sum(range(n, m, n))\n    except:\n        return \"INVALID\"", "def sum_mul(n, m):\n    if n == 0 or m <= 0 or n <= 0: return 'INVALID'\n    return sum([n*i for i in range(1,m) if n*i < m])", "def sum_mul(n, m):\n    if m <= 0 or n < 0:\n        return 'INVALID'\n    \n    return sum(range(n, m, n)) if n > 0 and m > n else 0 if (n == m and n != 0 and m != 0) or n > m else 'INVALID'", "def sum_mul(n, m):\n    if m<=0 or n<=0:\n        return 'INVALID'\n    elif n>m:\n        return 0\n    else:\n        suma=0\n        for i in range(0,m,n):\n            suma=suma+i\n        return suma", "def sum_mul(n, m):\n    return 'INVALID' if m<=0 or n<=0 else sum([x for x in range(n,m) if x%n==0])", "def sum_mul(n, m):\n    result = 0\n    if m <= 0 or n <= 0:\n        return \"INVALID\"\n    elif  n > m or m == n:\n        return 0\n    for i in range(n,m,n):\n        result+=i\n    return result\n", "def sum_mul(n, m):\n    return sum(i for i in range(0,m,n)) if 0<n and 0<m else \"INVALID\"\n", "def sum_mul(n, m):\n    if n<=0 or m<=0 : return \"INVALID\"\n    return ((m-1)//n)*(1+(m-1)//n)*n//2", "def sum_mul(n, m):\n    if   (n<0  and m>0 ) or (m<0 and n>0 ): return 'INVALID'\n    elif (m==0 or n==0): return 'INVALID'\n\n    else: return sum(range(n, m, n))", "def sum_mul(n, m):\n    if   (n<0  and m>0 ) or (m<0 and n>0 ): return 'INVALID'\n    elif (n==0 and n==0) or (m==0 or n==0): return 'INVALID'\n\n    else: return sum(range(n, m, n))", "def sum_mul(n, m):\n    if (n<=0)+(m<=0): return 'INVALID'\n    return sum([i for i in range(n, m, n)])", "def sum_mul(n, m):\n    if m <= 0 or n <=0:\n        return 'INVALID'\n    return sum([i for i in range(n,m+1) if i % n == 0 and i < m])\n", "def sum_mul(n, m):\n    if n<=0 or m<=0:\n        return 'INVALID'\n    else:    \n        total=0\n        for i in range(m):\n            if i%n==0:\n                total+=i\n        return total ", "def sum_mul(n, m):\n    return sum(x for x in range(n,m,n)) if n and n > 0 and m > 0 else 'INVALID'\n", "def sum_mul(n, m):\n    \n    if n < 1 or m < 1:\n        return 'INVALID'\n    else:\n        \n        sum = 0\n        for i in range(n, m, n):\n            sum += i\n        return sum", "def sum_mul(n, m):\n    if n <= 0 or m <= 0:\n        return 'INVALID'\n    elif n <= m:\n        return sum(range(n, m, n)) \n    elif n > m:\n        return 0", "import math\n\ndef sum_mul(n, m):\n    \n    if n<=0 or m<=0:\n        return 'INVALID'\n    \n    else:\n        \n        total = 0\n        \n        howMany = math.floor(m/n)\n        print(howMany)\n    \n        if m%n==0:       \n            for i in range(howMany-1):\n                total = total+n*(i+1)\n        else:\n            for i in range(howMany):\n                total = total+(n*(i+1))\n            \n        return total    \n    \n    pass", "def sum_mul(n, m):\n    if n<=0 or 0>=m: return \"INVALID\"\n    elif n>m:return 0\n    else:\n        c=0\n        x=1\n        while x*n<m:\n            c+=x*n\n            x+=1\n        return c\n", "def sum_mul(n, m):\n    ctr = 0\n    if m <= 0 or n <= 0:\n        return \"INVALID\"\n    for i in range(1, m):\n        if i % n == 0:\n            ctr += i\n    return ctr", "def sum_mul(n, m):\n    if n < 1 or m < 1:\n        return'INVALID'\n    s = 0\n    x = n\n    while x < m:\n        s += x\n        x += n\n    else:\n        return s\n        return 0", "def sum_mul(n, m):\n    if m <= 0 or n <= 0:\n        return \"INVALID\"\n    return (sum(x for x in range(n,m,n)))", "import math\n\ndef sum_mul(n, m):\n    if n<=0 or m<=0: return 'INVALID'\n    s=0\n    i=n\n    while i<m:\n        s+=i\n        i+=n\n    return s", "def sum_mul(n, m):\n    if m<=0 or n<=0:\n        return \"INVALID\"\n    else:\n        return sum(x for x in range(n,m,n))", "def sum_mul(n, m):\n    if n == 0:\n        return 'INVALID'\n    elif m <= 0 or n < 0:\n        return 'INVALID'\n    elif n > m:\n        return 0\n    elif m > n:\n        return sum(range(n, m, n))\n    elif n == m or n > m:\n        return 0\n", "from math import floor\ndef sum_mul(n, m):\n    print([n,m],flush = True)\n    if n > 0 and m > 0:\n        i = 1\n        sum = 0\n        while i*n < m:\n            sum += i*n\n            i += 1\n        return sum\n    else:\n        return 'INVALID'", "def sum_mul(n, m):\n    return sum(range(n,m,n)) if 0<n<m else 'INVALID' if n*m<=0 else 0  ", "def sum_mul(n, m):\n    if n <= 0:\n        return 'INVALID'\n    if m <= 0:\n        return 'INVALID'\n    if n == m:\n        return 0\n    number_multiples = (m - 1) // n\n    total = number_multiples * (number_multiples + 1)//2\n    return_value = total * n\n    return return_value", "def sum_mul(n, m):\n    sum = 0\n    counter = 0\n    if(m <= 0 or n <= 0):\n        return \"INVALID\"\n    while counter < m:\n        sum += counter\n        counter += n\n    return sum", "def sum_mul(n, m):\n    if n<=0 or m<=0: return \"INVALID\"\n    arr = [a*n for a in range(1,m) if a<m/n]\n    return sum(arr)", "def sum_mul(n, m):\n    if n<=0 or m<=0 : return 'INVALID'\n    p = (m-1)//n\n    return (n * p * (p+1))//2", "def sum_mul(n, m):\n    sum = 0\n    inc = n\n    if n > 0 and m > 0:\n        while n < m:\n            sum += n\n            n += inc\n        return sum\n    else:\n        return \"INVALID\"", "def sum_mul(n, m):\n    if n<=0 or m<=0:\n        return 'INVALID'\n    elif n==m:\n        return 0\n    s=0\n    for i in range(1,m//n+1):\n        if n*i<m:\n            s+=n*i\n        else:\n            break\n    return s\n", "def sum_mul(n, m):\n    total = 0\n    if n <= 0 or m <= 0:\n        return 'INVALID'\n    try:\n        for n in  range(n,m,n):\n            total += n\n        return total \n    except:\n        return 'INVALID'", "def sum_mul(n, m):\n    return 0 if m == n else \"INVALID\" if n <= 0 or m <= 0 else sum(range(n, m, n))", "def sum_mul(n, m):\n    if n > 0 and m > 0 :\n        i = [i for i in range (n,m,n)]\n        return sum(i) if i != [] else 0\n    else :\n        return 'INVALID'\n    \n", "def sum_mul(n, m):\n    return 'INVALID' if n < 1 or m < 1 else sum([x for x in range(n,m,n)])", "def sum_mul(n, m):\n    if n > 0 and m > 0:\n        a = (m-1) // n\n        b = a * (a + 1)\n        c = n - 2\n        return b + c * (b / 2)\n    return \"INVALID\"", "def sum_mul(n, m):\n    print(m,n)\n    if m<=0 or n<=0:\n        return \"INVALID\"\n    else:\n        a=list(range(n,m,n))\n        return sum(a)", "def sum_mul(n, m):\n    if (n > 0 and m > 0):\n        return sum(list([x for x in range(n,m) if x % n == 0]))\n    else:\n        return 'INVALID'", "def sum_mul(n, m):\n    if n <= 0 or m <= 0:\n        return \"INVALID\"\n    if m % n == 0:\n        return sum(x*n for x in range(m//n))\n    return sum(x*n for x in range(m//n + 1))", "def sum_mul(n, m):\n    if n <= 0 or m <= 0:\n        return 'INVALID'\n    else:\n        new_arr = []\n        for num in range(n, m, n):\n            new_arr.append(num)\n        return sum(new_arr)", "def sum_mul(n, m):\n    if n <= 0 or m <= 0:\n        return \"INVALID\"\n    elif n >= m:\n        return 0\n    else:\n        mult = 1\n        i = 1\n        n_mult = 0\n        while mult <= m: \n            mult = i * n\n            if mult >= m:\n                return n_mult\n            n_mult += mult\n            i += 1 \n        return n_mult\n", "def sum_mul(n, m):\n    if n and m:\n        return sum([x for x in range(n,m,n)]) if n > 0 and m > 0 else 'INVALID'\n    return 'INVALID'\n", "def sum_mul(n, m):\n    print(f\"n: {n}, m: {m}\")\n    return sum(range(n, m, n*(1, -1)[m<0])) if n>0 and m>0 else 'INVALID'", "def sum_mul(n, m):\n    print((n,m))\n    return sum(range(n,m,n)) if n != 0 and m > 0 and n > 0 else 'INVALID'\n", "def sum_mul(n, m):\n    print(n)\n    print(m)\n    numbers = list()\n    \n    if m <= 0 or n <= 0:\n        return \"INVALID\"\n    if n > m:\n        return 0\n    if m<n:\n        return \"INVALID\"\n    \n    \n    \n    i = 1\n    while i < m:\n        if n * i < m:\n            numbers.append(n * i)\n            i = i + 1\n        else:\n            break\n    \n    return sum(numbers)", "def sum_mul(n, m):\n    s = 0\n    if m <= 0 or n <= 0:\n        return 'INVALID'\n    else:\n        i = 1\n        while i * n < m:\n            s += i * n\n            i += 1\n    return s", "def sum_mul(n, m):\n    \"Some multiples DO\"\n    return \"INVALID\" if n <= 0 or m <= 0  else sum(n*i for i in range(m) if n*i < m)", "def sum_mul(n, m):\n\n    sum_n = 'INVALID'\n\n    if n > 0 and m > 0:\n        sum_n = sum(range(n,m,n))\n\n    return sum_n", "def sum_mul(n, m):\n    sum_n = 'INVALID'\n    if n > 0 and m > 0:\n        num = (m - 1) // n\n        sum_n = (n * num * (num + 1)) // 2\n    return sum_n", "def sum_mul(n, m):\n    if n<=0 or m<=0: return 'INVALID'\n    if n==m or n>m: return 0\n    if m%n == 0:\n        return sum(n*i for i in range(1,m//n))\n    else:\n        return sum(n*i for i in range(1,m//n+1))", "def sum_mul(n, m):\n    if n == m and n!= 0:\n        return 0\n    elif n > 0 and m > 0:\n        return sum(range(n, m, n))\n    else:\n        return 'INVALID'", "def sum_mul(n, m):\n    if n <= 0 or m <= 0:\n        return \"INVALID\"\n    a = 0\n    b = []\n    while a + n < m:\n        a += n\n        b.append(a)\n    return sum(b)", "def sum_mul(n, m):\n    return sum(range (n, m, n)) if n * m > 0 else 'INVALID'\n", "def sum_mul(n, m):\n    if n <= 0 or m <= 0: return \"INVALID\"\n    sum = 0\n    for i in range(1,m):\n        if (i*n) < m:\n            sum+= (i*n)\n    return sum\n    pass", "def sum_mul(n, m):\n    \n    lst = [x for x in range(n,m)]\n    \n    a=1\n    new = []\n    for i in range(len(lst)):\n        new.append(n*a)\n        a+=1\n    \n\n    final = []\n    for i in new:\n        if i < m:\n            final.append(i)\n\n    \n    if n <= 0 or m <= 0:\n        return \"INVALID\"\n    else:\n        return sum(final)\n", "def sum_mul(n, m):    \n    if n <= 0 or m <= 0:\n        return 'INVALID'\n    try:\n        ans = [i for i in range(n, m) if i % n == 0]\n        return sum(ans)\n    except:\n        return 'INVALID'", "def sum_mul(n, m):\n    total = 0\n    while n > 0 and m > 0:\n        for i in range(m):\n            if abs(i) % n == 0:\n                total += i\n        return total\n\n    return 'INVALID'\n", "def sum_mul(n, m):\n    try:\n        return sum(i for i in range(n, m, n)) if m > 0 and n > 0 else 'INVALID'\n    except:\n        return 'INVALID'"]