["import re\n\n\ndef solve(s):\n    return max(map(int,re.findall(r\"(\\d+)\", s)))", "def solve(s):\n    largest = 0\n    number = 0\n    \n    for char in s:\n        if char.isdigit():\n            number = number * 10 + int(char)\n            if largest < number:\n                largest = number\n        else:\n            number = 0\n            \n    return largest", "import re\n\ndef solve(s):\n    return max(map(int, re.findall(r'\\d+', s)), default=0)", "def solve(s):\n    return max(map(int,\"\".join(\" \" if x.isalpha() else x for x in s).split()))", "def solve(s):\n    result = [0]\n    for c in s:\n        if '0' <= c <= '9':\n            result[-1] = result[-1] * 10 + int(c)\n        elif result[-1] > 0:\n            result.append(0)\n    return max(result)", "import re\n\ndef solve(s):\n    return max(map(int, re.findall(\"\\d+\", s)));", "def solve(s):\n    breakdown = [0]\n    for i in s:\n        if i in [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]:\n            breakdown[-1] = breakdown[-1]*10 + int(i)\n        elif breakdown[-1] != 0:\n            breakdown.append(0)\n    breakdown.sort()\n    return(breakdown[-1])", "import re\ndef solve(s):\n    g = re.findall(r'\\d+',s)\n    return max(map(int,g))", "import re\ndef solve(s):\n    return max([int(i) for i in re.compile('[a-z]').split(s) if i != ''])", "import re\nP = re.compile('\\d+')\nsolve = lambda s: max(map(int, (P.findall(s))))", "import re\ndef solve(s):  \n    reg = r\"(\\+?\\-?\\ *\\d+\\.?\\d*)\" \n    return max(map(float, re.findall(reg, s)))", "import re\n\ndef solve(s):\n    return max(int(x) for x in re.findall(r'[\\d]+',s))", "solve = lambda s:max(map(int,''.join(c if c in '0123456789' else ' ' for c in s).split()))", "import re\ndef solve(s):\n    return max(map(int, re.findall(r'[0-9]+', s)))", "def solve(s):\n    new_list=[]\n    number = ''\n    for characters in s:\n        if characters.isdigit():\n            number += characters\n        elif number != \"\":\n            new_list.append(int(number))\n            number = \"\"\n    if number != \"\":\n        new_list.append(int(number))\n    return max(new_list)", "solve=lambda s:max(map(int,__import__('re').findall('\\d+',s)))", "def solve(s):\n    #assumes no negatives, per problem statement\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    ans = \"\"\n    \n    for char in s:\n        if char in alphabet:\n            ans += \" \"\n        else:\n            ans += char\n    ans = ans.split(\" \")\n    \n    return max(int(x) for x in ans if x) #0 will eval false", "def solve(s):\n    w=''.join(['*' if i.isalpha() else i for i in s])\n    num=[int(i) for i in w.split('*') if i]\n    return max(num)", "import re\ndef solve(s):\n    return max([int(d) for d in re.findall(r'\\d{1,}', s)])", "def solve(s):\n    k=0\n    a=''\n    talha=[]\n    for i in s:\n        if i.isalpha() == True :\n            a=a+'x'\n        else:\n            a=a+i\n    b=a.split('x')\n    for i in b:\n        if i.isdigit() == True:\n            talha.append(int(i))\n    return(max(talha))", "def solve(s):\n    return max([ int(i) for i in ''.join([i if i.isdigit()else' 'for i in s]).split() ])", "def solve(s):\n    return max(map(int,[c for c in \"\".join([v if not v.isalpha() else '|' for v in s ]).split('|') if c!='']))", "def solve(s):\n    max = num = 0\n    \n    for char in s:\n        if char.isdigit():\n            num = num * 10 + int(char)\n            if max < num:\n                max = num\n        else:\n            num = 0\n    \n    return max", "from re import findall; solve=lambda s: max(int(m) for m in findall(r\"\\d+\",s))", "def solve(s):\n    for i in s:\n        if i.isalpha():\n            s = s.replace(i, \" \")\n    lst = s.split()\n    largest = 0\n    for w in lst:\n        if int(w) > largest:\n            largest = int(w)\n    return largest", "def solve(s):\n    for i in s:\n        if i not in '0123456789':\n            s = s.replace(i,' ')\n    s = s.split()\n    return sorted([int(i) for i in s])[-1]", "def solve(s):\n    \"\"\"\n    result = ''\n    for char in s: \n        if char in '0123456789': \n            result += char\n        else: \n            result += ' '\n    return max(int(x) for x in result.split())\n    \"\"\"\n\n    return max(int(x) for x in ''.join(c if c in '0123456789' else ' ' for c in s).split())\n", "def solve(s):\n    return max(find_numbers(s))\n\n\ndef find_numbers(chaos):\n    numbers = []\n    buffer = []\n    for char in chaos:\n        if char.isnumeric():\n            buffer.append(char)\n        elif char.isalpha() and buffer:\n            numbers.append(int(\"\".join(buffer)))\n            buffer = []\n    if buffer:\n        numbers.append(int(\"\".join(buffer)))\n    return numbers", "def solve(s):\n    return max(list(map(int, ''.join([c if not c.isalpha() else ' ' for c in s]).split())))\n", "import re\ndef solve(s):\n    s = re.sub('[^0-9]+', 'x', s)\n    l = s.split('x')\n    res = []\n    for i in l:\n        if(i is ''):\n            pass\n        elif i.isnumeric:\n            res.append(int(i))\n    return(max(res))\n    \n", "import re\ndef solve(s):\n    x = re.findall('[0-9]+', s)\n    result=list(map(int,x))\n    return(max(result))", "def solve(s):\n    s += 'a'\n    digits = list('0123456789')\n    biggest = 0\n    current = ''\n    list_of_numbers = []\n    for i in range(len(s)):\n        if s[i] in digits:\n            current += s[i]\n        else:\n            list_of_numbers.append(current)\n            current = ''\n    \n    while '' in list_of_numbers:\n        list_of_numbers.remove('')\n    list_of_ints = []\n    for j in range(len(list_of_numbers)):\n        list_of_numbers[j] = int(list_of_numbers[j])\n        list_of_ints.append(list_of_numbers[j])\n    biggest = max(list_of_ints)\n    return biggest\npass\n", "def solve(s):\n    highest = 0\n    temp = ''\n    for char in s:\n        if char.isnumeric():\n            temp += char\n        else:\n            if temp != '' and int(temp) >= highest:\n                highest = int(temp)\n            temp = ''\n    return highest if temp == '' or highest > int(temp) else int(temp)", "import re;\n\ndef solve(s):\n    \n    zahlen = re.findall('([0-9]*)', s);\n\n    liste = [feld for feld in zahlen if feld != ''];\n    results = list(map(int, liste))\n\n    return (max(results));\n    \n    \n    \n         \n        \n", "from re import findall\n\ndef solve(s):\n    return max(map(int, findall(r\"[\\d]{1,}\", s)))", "import re\ndef solve(s):\n    \n    array = re.findall(r'[0-9]+', s)\n    x = [int(i) for i in array]\n    x.sort()\n    return x[-1] ", "import re\n\n\ndef solve(s):\n    list_numbers = re.sub(\"[^0-9]\", \" 0 \", s)\n    return max([int(i) for i in list_numbers.split()])", "import re\ndef solve(s):\n    kill = [int(x) for x in re.findall(\"[0-9]*\", s) if x != \"\"]\n    return sorted(kill, reverse=True)[0]", "def solve(s):\n    max_int = -1\n    current_num = ''\n    for char in s:\n        if char in '0123456789':\n            current_num += char\n            max_int = max(max_int, int(current_num))\n        else:\n            current_num = ''\n    return max_int", "def solve(s):\n    arr = []\n    for i in s:\n        if i.isalpha():\n            arr.append('*')\n        else:\n            arr.append(i)\n\n    strr = ''.join(arr)\n\n    arr = strr.split('*')\n\n    return max([int(i) for i in arr if i != ''])\n \n", "def solve(s):\n    max = float('-inf')\n    s = list(s)\n    word = ' '\n    for ch in s:\n        if ch.isnumeric():\n            word += ch\n        if not ch.isnumeric():\n            word += ' '\n    lists = word.split(' ')\n    for value in lists:\n        if value.isnumeric():\n            if int(value) > max:\n                max = int(value)\n        else:\n            pass\n    return max\n", "import re\n\ndef solve(string):\n    return max(map(int, re.findall(r'[\\d]+', string)))", "def solve(s):\n    max = 0\n    \n    for i in range(len(s)):\n        if s[i].isnumeric():\n            k = \"\"\n            for j in range(i, len(s)):\n                if s[j].isnumeric():\n                    k+=s[j]\n                    if max < int(k):\n                        max = int(k)\n                else:\n                    if max < int(k):\n                        max = int(k)\n                    break\n    return max    ", "import re\ndef solve(s):\n    return max([int(i) for i in re.split('[^0-9]', s) if i != ''])", "import re\n\ndef solve(s):\n    x = re.findall(\"\\d+\", s)\n    x = list(map(int, x))\n    return max(x)\n", "def solve(s):\n    end = \"\"\n    for i in range(1, len(s)):\n        if s[i-1].isdigit():\n            end += s[i-1]\n            if s[i].isalpha():\n                end += \",\"\n        if i == len(s)-1 and s[i].isdigit():\n            end += s[i]\n    return max(sorted([int(i) for i in end.split(\",\") if i != \"\"]))", "def solve(s):\n    numbers=\"0123456789\"\n    num = []\n    str = \"\"\n    for i in s:\n        if i in numbers:\n            str += i\n        elif str != \"\":\n            num.append(str)\n            str = \"\"\n    if str != \"\":\n        num.append(str)\n    return max([int(i) for i in num])", "import re\ndef solve(s):\n    nums = re.findall('\\d+', s )\n    nums = [int(i) for i in nums]\n    return max(nums)", "def solve(s):   \n    for letter in s:\n        if letter.isdigit():\n            pass\n        else:\n            s = s.replace(letter,\" \")\n    numberList =map(int,s.split())\n    return max(numberList)", "def solve(s):\n    number = 0\n    largest = 0\n    for char in s:\n        if char.isdigit():\n            number = number * 10 + int(char)\n            if number > largest:\n                largest = number\n        else: \n            number = 0\n            \n    return largest\n", "def solve(s):\n    ans = [0]\n    for char in s:\n        if '0' <= char <= '9':\n            ans[-1] = ans [-1] * 10 + int(char)\n        elif ans[-1] > 0:\n            ans.append(0)\n    return max(ans)\n\n", "def solve(s):\n    import re\n    \n    numbers = re.findall(r\"\\d+\",s)\n    int_numbers = [int(i) for i in numbers]\n    return max(int_numbers)", "def solve(number):\n    numb_list = []\n    temp = ''\n    int_mun = []\n    for numb in number:\n        if not numb.isdigit():\n            numb_list.append(' ')\n        elif numb.isdigit():\n            numb_list.append(numb)\n            temp = sorted(''.join(numb_list).split())\n\n    for el in temp:\n        el = int(el)\n        int_mun.append(el)\n    return sorted(int_mun)[-1]", "def solve(s):\n    str_num = \"\"\n    num_fin = 0 \n    j_count = 0 \n    len_s = len(s)\n    for a in s :\n        if a.isdigit() :\n            str_num = str_num + a\n            \n        if ((not a.isdigit()) or j_count==(len_s - 1)) and str_num != '' :\n            \n            num_fin = max(int(str_num),num_fin)\n            str_num = \"\"\n        j_count = j_count + 1     \n    return num_fin", "def solve(s):\n    outl = []\n    s += \" \"\n    for el in s:\n        if el.isdecimal():\n            outl.append(el) \n        else:\n            outl.append(\" \")\n\n    temp = ''\n    lis = []\n    for i in range(len(outl)-1):\n        if outl[i].isdecimal():\n            temp += outl[i]\n            if outl[i+1] == \" \":\n                lis.append(int(temp))\n                temp = \"\"\n    return max(lis)", "def solve(s):\n    r=[',' if x in 'qwertyuioplkjhgfdsazxcvbnm' else x for x in s]\n    t=list(filter(lambda x: x!='', (''.join(r)).split(',')))\n    return max(list(map(lambda x: int(x), t)))", "import re\n\ndef solve(s):\n    return max(int(x) for x in re.split(r'\\D+', s) if x.isnumeric())", "def solve(s):\n    t=''.join([i if i.isnumeric() else ' ' for i in s])\n    return max([int(i) for i in t.split(' ') if i])", "def solve(s):\n    for n in s:\n        if n.isnumeric()==False:\n            s = s.replace(n,' ')\n    lst = s.split()\n    lst = [int(x) for x in lst]\n    return max(lst)", "def solve(s):\n    number = 0\n    lst = []\n    last = 0\n    for i in range(len(s)):\n        if s[i].isnumeric():\n            if last == i-1:\n                number = number*10 + int(s[i])\n                last = i\n            else:\n                lst.append(number)\n                number = int(s[i])\n                last = i\n    lst.append(number)\n    return max(lst)", "def solve(s):\n    substr = \"\"\n    sub_list = []\n    prev_digit = s[0].isdigit()\n    \n    for char in s:\n        this_digit = char.isdigit()\n        if this_digit != prev_digit:\n            sub_list.append(substr)\n            substr = \"\"\n            prev_digit = this_digit\n    \n        substr += char\n\n    sub_list.append(substr)\n\n    list_of_numbers = []\n    \n    final_list = [s for s in sub_list if s.isdigit()]\n    \n    high = max(map(int,final_list))\n    \n    return high", "import re\n\ndef solve(s):\n    temp = re.findall(r'\\d+', s)\n    erg = list(map(int, temp))\n    return int(max(erg))", "def solve(s):\n    str_lst = []\n    temp = \"\"\n    for elem in s:\n        if elem.isdigit():\n            temp += elem\n        elif not elem.isdigit() and temp != \"\":\n            str_lst.append(temp)\n            temp = \"\"\n\n    str_lst.append(temp) if temp != \"\" else False\n\n    maximum = max( [int(elem) for elem in str_lst] )\n    return maximum", "def solve(s):\n    n = ''\n    ls = []\n    for i in s:\n        if i.isnumeric():\n            n+=i\n        else:\n            if n !='':\n                ls.append(n)\n                n = ''\n    if n !='':\n        ls.append(n)\n    return max(map(float,ls))", "def solve(s):\n    clean = \"\".join([str(c) if c.isdigit() else \" \" for c in s])\n    return max(list([int(x) for x in list([_f for _f in clean.split(\" \") if _f])]))\n\n    \n", "def solve(s):\n    a = ''\n    b = 0\n    for i in s:\n        if i.isdigit():\n            a += i\n        if not i.isdigit():\n            if not a == '':\n                b = max(int(a),int(b))\n                a = ''\n    if not a == '':\n        return max(int(a), int(b))\n    else:\n        return int(b)", "import re     #Jai Shree Ram!!!\ndef solve(s):\n    l=[int(i) for i in re.findall(r'(\\d+)',s)]\n    return max(l)", "def solve(s):\n    int_temp = []\n    int_store = []\n    for i in range(len(s)):  \n        try:\n            int(s[i])\n            int_temp.append(s[i])\n            if i == len(s) - 1:\n                int_store.append(''.join(int_temp))\n        except:\n            if int_temp == '':\n                int_temp = []\n            else:\n                int_store.append(''.join(int_temp))\n                int_temp = []\n    int_clean = [int(x) for x in int_store if x not in '']\n    return int(sorted(int_clean, reverse=True)[0])", "import re\n\ndef solve(s):\n    elements = re.split('[azertyuiopqsdfghjklmwxcvbn]',s)\n    return max([int(coordinates) for coordinates in elements if len(coordinates) > 0 ])", "def solve(s):\n    string = ''\n    for i, item in enumerate(s):\n        if item.isalpha():\n            string += ' '\n        else:\n            string += item\n    numbers = string.split()\n    numbers = [int(i) for i in numbers]\n    return max(numbers)", "def solve(s):\n    longest_number = \"0\"\n    number_sequence = \"0\"\n    for x in s:\n        if x.isalpha() is False:\n            number_sequence = number_sequence + x\n            if int(number_sequence) > int(longest_number):\n                longest_number = number_sequence\n        else:\n            number_sequence = \"\"\n    return(int(longest_number))\n        \n", "def solve(s):\n    return max(map(int, (''.join(elem if elem.isdigit() else ' ' for elem in s)).split()))", "import re\n\ndef solve(s):\n    return max(int(n or '0') for n in re.split('[a-z]+', s))", "def solve(s) -> str:\n    naujas_listas = split(s)\n    return max(naujas_listas)\n\n\ndef split(tekstas) -> list:\n    groups = []\n    newword = \"\"\n    for x, i in enumerate(tekstas[0:]):\n        if i.isnumeric():\n            newword += i\n\n        else:\n            if newword != \"\":\n                groups.append(int(newword))\n                newword = \"\"\n\n    if newword != \"\":\n        groups.append(int(newword))\n\n    return groups", "def solve(s):\n     return max([int(s) for s in \"\".join([c if '9'>=c>='0' else ' ' for c in s]).split()])", "def solve(arr):\n    l = len(arr)\n    integ = []\n    i = 0\n    while i < l:\n        s_int = ''\n        a = arr[i]\n        while '0' <= a <= '9':\n            s_int += a\n            i += 1\n            if i < l:\n                a = arr[i]\n            else:\n                break\n        i += 1\n        if s_int != '':\n            integ.append(int(s_int))\n\n    return max(integ)", "import re\n\n\ndef solve(s):\n    reg = re.compile(\"\\d+\")\n    ans = reg.findall(s)\n    val =0\n    \n    holder = [int( x) for x in ans]\n\n    \n    for ele in holder:\n        \n        if ele > val:\n            val = ele \n    return val\n    pass", "def solve(s):\n    digits = '0123456789'\n    res = []\n    temp_nums = ''\n    for i in s:\n        if i in digits:\n            temp_nums += i\n        if i not in digits:\n            if len(temp_nums) > 0:\n                res += [int(temp_nums)]\n            temp_nums = ''\n    if len(temp_nums) > 0:\n        res += [int(temp_nums)]\n    return max(res)\n", "def solve(s):\n    nums=[]\n    num=''\n    for letter in s+'k':\n        if letter.isalpha():\n            print(num, letter)\n            if num !='':\n                nums.append(int(num))\n            num=''\n        if letter.isalpha()==False:\n            print(letter)\n            num+=letter\n    return max(nums)", "import re\n\ndef solve(s):\n    temp = re.findall(r'\\d+', s)\n    res = max(list(map(int, temp)))\n    return res\n", "def solve(s):\n    l = []\n    num = ''\n    alp = 'a b c d e f g h i j k l m n o p q r s t u v w x y z'\n    for i in s:\n        if i not in alp:\n            num += i\n        if i in alp:\n            if len(num) == 0:\n                continue\n            else:\n                l.append(int(num))\n                num = ''\n    if len(num) > 0:\n        l.append(int(num))\n    return max(l)", "def solve(s):\n    s=s+'d'\n    t=[]\n    d=''\n    for i in range(len(s)-1):\n        if s[i].isdigit():\n            d=d+s[i]\n            if s[i+1].isalpha():\n                t.append(int(d))\n                d=''\n    return max(t)\n\n", "def solve(s):\n    max_num = float('-inf')\n    temp = ''\n    \n    for i in s:\n        if i.isdigit():\n            temp += i\n            max_num = max(max_num, int(temp))\n        else:\n            temp = ''\n            \n    return max_num", "def solve(s):\n    lst = []\n    i = 0\n    while len(s) > i:\n        if s[i].isdigit():\n            lst.append(s[i])\n            i += 1\n        else:\n            lst.append('*')\n            i += 1\n    lst = ''.join(lst)\n    lst = lst.replace('*', ' ')\n    lst = lst.split()\n    lst = list(map(int, lst))\n    return max(lst)\n", "import re\ndef solve(var):\n    return max(int(x) for x in re.findall(r'\\d+', var))", "def solve(a):\n    b = [0] * len(a)\n    c = 0\n    for i in a:\n        if i.isalpha():\n            a = a.replace(i, \" \")\n    a = a.split()\n    for x in range(len(a)):\n        b[x] = int(a[x])\n        c += 1\n    return max(b)", "def solve(s):\n    mas2=['0','1','2','3','4','5','6','7','8','9']\n    mas=[]\n    k=''\n    for i in range(len(s)):\n        if s[i] in mas2:\n            k=k+s[i]\n            if i == len(s)-1:\n                mas.append(int(k))\n        else:\n            if k!='':\n                mas.append(int(k))\n                k=''\n    return max(mas)", "import re\ndef solve(s):\n    return max([int(x) for x in re.compile('\\D').split(s) if x != ''])", "def solve(s):\n    import re\n    return max(int(el) for el in re.findall(r'\\d+', s))", "def solve(s):\n    char='abcdefghijklmnopqrstuvwxyz'\n    ans=''\n    answer=[]\n    for i in s:\n        if i in char:\n            ans+=' '\n        else:\n            ans+=i\n    ans = ans.split(' ')\n    while ans.count('')!=0:\n        ans.remove('')\n    for i in ans:\n        i = int(i)\n        answer.append(i)\n    return max(answer)\n", "def solve(s):\n    res = []\n    temp = list(s)\n    max = 0\n\n    for item in temp:\n        if(item.isalpha()):\n            res.append(\" \")\n        else:\n            res.append(item)\n    res = (\"\".join(res)).split(\" \")\n\n    for item in res:\n\n        if((item != \"\") and (int(item) > max)):\n            max = int(item)\n            \n    return max", "def solve(s):\n    import re\n    return max([int(i) for i in re.split('(\\d+)',s) if i.isnumeric()])", "def solve(s):\n    import re\n    lst = [i for i in re.split('(\\d+)',s) if i.isnumeric()]\n    \n    max_num = 0\n    for l in lst:\n        if int(l) > max_num:\n            max_num = int(l)\n    return max_num", "def solve(s):\n    next_number = 0\n    largest_number = 0\n    for char in s:\n        if str.isnumeric(char) :\n            next_number = int(str(next_number) + str(char))\n        else:\n            if next_number > largest_number:\n                largest_number = next_number\n            next_number = 0\n    \n    if next_number > largest_number:\n        largest_number = next_number\n    return largest_number\n\nprint (solve('lu1j8qbbb85'))", "def isNumber(char):\n    if char in ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']:\n        \n        return True\n    else:\n        return False\n\ndef solve(s):\n    \n    max_number = 0\n    \n    new_number = []\n        \n    for char in s:\n        \n        if isNumber(char):\n            \n            new_number.append(char)\n            \n        else:\n\n            if new_number != []: # if there is a number to be compared:                \n                k = int(''.join(new_number))\n                if k > max_number:\n                    max_number = k\n                    \n            new_number = []\n            \n\n    # and for the last char:\n    if new_number != []: # if there is a number to be compared:                \n        k = int(''.join(new_number))\n        if k > max_number:\n            max_number = k\n                    \n    return max_number", "def solve(s):\n    s+=\".\"\n    arr=[]\n    num=\"\"\n    for i in s:\n        if i.isnumeric():\n            num+=i\n        else:\n            if num!=\"\":\n                arr.append(int(num))\n            num=\"\"\n    arr.sort()\n    \n    return arr[-1]\n", "import re\ndef solve(s):\n    b=re.findall('[0-9]+',s)\n    return max([int(i) for i in b])", "import re\n\ndef solve(s):\n    x = re.findall('[0-9]+', s)\n    list = []\n    for i in x:\n        list.append(int(i))\n    return max(list)", "def solve(s):\n    nums = 0\n    for char in s:\n        if char.isdigit():\n            pass\n        else:\n            s = s.replace(char,' ')\n    result_list = s.split()\n    for i in range(len(result_list)):\n        result_list[i] = int(result_list[i])\n    return (max(result_list))", "def solve(s):\n    numbers = []\n    temp = ''\n    for char in s:\n        if char.isnumeric():\n            temp += char\n            numbers.append(int(temp))\n        else:\n            try:\n                numbers.append(int(temp))\n                temp = ''\n            except:\n                continue        \n    return max(numbers)"]