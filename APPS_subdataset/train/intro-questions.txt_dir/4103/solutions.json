["def naughty_or_nice(data):\n    nice = 0\n    for month in data:\n        for day in data[month]:\n            nice += 1 if data[month][day] == \"Nice\" else -1\n    return \"Nice!\" if nice >= 0 else \"Naughty!\"\n", "import json\n\ndef naughty_or_nice(data):\n    parsed_data = json.dumps(data)\n    return \"Nice!\" if parsed_data.count(\"Nice\") >= parsed_data.count(\"Naughty\") else \"Naughty!\"", "def naughty_or_nice(data):\n    s = str(data)\n    return 'Nice!' if s.count('Nice') >= s.count('Naughty') else 'Naughty!'", "naughty_or_nice = lambda d:max(['Nice', 'Naughty'], key=[x for y in d.values() for x in y.values()].count) + '!'", "import json\ndef naughty_or_nice(data):\n    s = json.dumps(data)\n    return 'Nice!' if s.count('Nice') >= s.count('Naughty') else 'Naughty!'", "from collections import Counter\n\ndef naughty_or_nice(data):\n    c = Counter(x for v in data.values() for x in v.values())\n    return 'Nice!' if c['Nice'] >= c['Naughty'] else 'Naughty!'", "def naughty_or_nice(data):\n    return 'Nice!' if str(data).count('Nice') >= str(data).count('Naughty') else 'Naughty!'", "def naughty_or_nice(data):\n    return \"Nice!\" if sum(1 if day == \"Nice\" else -1 for month in data.values() for day in month.values()) >= 0 else \"Naughty!\"", "def naughty_or_nice(data):\n  nice_count = 0\n  naughty_count = 0\n  \n  for month, days in data.items():\n    for date, status in days.items():\n      if status == 'Nice':\n        nice_count += 1\n      else:\n        naughty_count += 1\n  \n  return 'Naughty!' if nice_count < naughty_count else 'Nice!'"]