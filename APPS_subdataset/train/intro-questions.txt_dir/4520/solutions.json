["import heapq\ndef max_product(a):\n    x = heapq.nlargest(2,a)\n    return x[0]*x[1]", "def max_product(a):    \n    first_max = 0\n    second_max = 0\n    for x in a:\n        if x > first_max:\n            second_max = first_max\n            first_max = x\n        elif x > second_max:\n            second_max = x\n    return first_max*second_max", "from heapq import nlargest\ndef max_product(a):\n    x,y=nlargest(2,a)\n    return x*y", "def max_product(a):\n    m1 = max(a)\n    a.remove(m1)\n    m2 = max(a)\n    return m1 * m2", "def max_product(a):\n    m = a.pop(a.index(max(a)))\n    return max(a)*m", "import heapq\nfrom functools import reduce\nfrom operator import mul\n\ndef max_product(a):\n  return reduce(mul, heapq.nlargest(2,a))", "def max_product(a):\n    return a.pop(a.index(max(a))) * max(a)", "def max_product(a):\n    b=list(a)\n    max_number=max(b)\n    b.remove(max_number)\n    second_number=max(b)\n    return max_number * second_number", "from heapq import nlargest\nfrom operator import mul\n\ndef max_product(a):\n    return mul(*nlargest(2,a))", "import heapq\n\ndef max_product(a):\n    first, second = heapq.nlargest(2, a)\n    return first * second"]