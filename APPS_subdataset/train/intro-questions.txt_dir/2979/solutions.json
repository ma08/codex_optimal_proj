["def get_age(age):\n    return int(age[0])", "import re\n\ndef get_age(age):\n    return int(re.search(r\"\\d+\", age).group())", "def get_age(age):\n    for x in age:\n        if x.isdigit():\n            return int(x) \n", "def get_age(age):\n    return int(age.split()[0])", "def get_age(age):\n    #your code here\n    if (age == \"0 years old\"):\n        return 0\n    elif (age == \"1 years old\"):\n        return 1\n    elif (age == \"2 years old\"):\n        return 2\n    elif (age == \"3 years old\"):\n        return 3\n    elif (age == \"4 years old\"):\n        return 4\n    elif (age == \"5 years old\"):\n        return 5\n    elif (age == \"6 years old\"):\n        return 6\n    elif (age == \"7 years old\"):\n        return 7\n    elif (age == \"8 years old\"):\n        return 8\n    elif (age == \"9 years old\"):\n        return 9\n    else:\n        return 1", "def get_age(age):\n    age=age[0]#select the first element of the string\n    age=int(age)#cause age is a char, we need to convert in to a integer \n    if age>9 or age<0:\n        return 0\n    else:\n        return age", "def get_age(age):\n    return int(age[:1])", "import re\n\ndef get_age(age):\n    return int(re.match(pattern=r'(?P<age_char>^\\d.)', string=age).group(\"age_char\"))", "get_age=lambda s:int(s[0])", "def get_age(age):\n    return int(''.join(filter(str.isdigit, age)))", "def get_age(age):\n    return int(__import__('re').search(r'\\d+', age).group(0))", "def get_age(n):\n    return int(n[0])", "def get_age(age):\n    char = []\n    for a in age:\n        char.append(a)\n    return int(char[0])", "def get_age(age):\n    return [int(s) for s in age.split() if s.isdigit()][0]", "def get_age(age):\n    return int(age[0:1])", "def get_age(age):\n    a = [int(s) for s in age.split() if s.isdigit()]\n    for i in a:\n        return i", "def get_age(age):\n    for i in list(age):\n        return (int(i[0]))", "def get_age(age):\n    return int(age[0])\n    #your code here\n    \nreply = \"2\"\nprint(get_age(reply))", "def get_age(age):\n    return [int(c) for c in age if c.isnumeric() == True][0]", "def get_age(age):\n    return eval(age.split()[0])", "def get_age(age):\n    my_List = list(age)\n    a = age[0]\n    return int(a)", "def get_age(age):\n    num = age[0:1]\n    return(int(num))", "def get_age(age):\n    ageChar = age[0]\n    return int(ageChar)", "def get_age(age):\n    z = age.split()\n    return int(z[0])", "import re\n\ndef get_age(age):\n    pattern = re.compile(\"[0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9]+\")\n    return int(re.findall(pattern,age)[0])", "def get_age(age):\n    first_char = age[0]\n    return(int(first_char))", "def get_age(age):\n    int_age = [str(i) for i in str(age)]\n    return int(int_age[0])\n\nprint(get_age('2 years old'))", "import re\n\ndef get_age(age):\n    return int(''.join(re.findall(r'\\d', age)))", "def get_age(age):\n    return int(''.join([i for i in age.split() if i.isdigit()]))", "def get_age(age):\n    for i in age:\n        if i.isnumeric():\n            return int(i)\n        else:\n            pass\n\n", "def get_age(age):\n    return [int(chr) for chr in age if chr.isdigit()][0]", "def get_age(age):\n    age = age.replace(\"years\", '')\n    age = age.replace(\"year\", '')\n    age = age.replace(\"old\", '')\n    age.rstrip()\n    age = int(age)\n    return age", "def get_age(age):\n    extracted = list(age)[0]\n    return int(extracted)", "def get_age(age):\n    newlist = age.split()\n    print(newlist)\n    numbers = \"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"\n    age = []\n    for i in newlist:\n        for x in numbers:\n            if i == x:\n                age.append(i)\n    final = int(\"\".join(age))\n    return final\n        \nget_age(\"5 years old\")", "def get_age(age):\n    return int(age[0]) if 0 <= int(age[0]) <= 9 else 'idk'", "def get_age(age):\n    import re\n    return int(re.findall(r'\\A\\d',age)[0])\n    #your code here\n", "def get_age(age):\n    return int(age[0]) if age[0].isdigit() else ''", "def get_age(age):\n    #your code here\n    return int(age[:age.index(' ')])", "import unittest\n\n\ndef get_age(age):\n    return int(age.split()[0])\n    \n    \nclass TestGetAge(unittest.TestCase):\n    def test_should_return_2_when_string_age_has_2(self):\n        age = '2 years old'\n        actual = get_age(age)\n        self.assertEqual(actual, 2)\n", "def get_age(age):\n\n\n    liste = age.split()\n    \n    return int(age[0])", "def get_age(age):\n    #your code here\n    ages = age.split(\" \")\n    return int(age[0])", "def get_age(age):\n    #your code here\n    for item in age:\n        if item.isnumeric():\n            return int(item)", "def get_age(age):\n    value = age.split()[0]\n    print(value)\n    return int(value)\n", "def get_age(age):\n    #your code here\n    print (\"how old are U?\")\n    get_age = age[0]\n    return (int(get_age))", "def get_age(age):\n    return int(age[0])\n    print(\"{} year old\".format(age))", "def get_age(age):\n    #your code here\n    age = list(age.split(\" \"))[0]\n    if age.isdigit():\n        return int(age)\n    return 0\n", "def get_age(age):\n    \n    for i in age:\n        if i == \"2\":\n            return 2\n        elif i == \"4\":\n            return 4\n        elif i == \"5\":\n            return 5\n        elif i == \"1\":\n            return 1\n        elif i == \"3\":\n            return 3\n        elif i == \"6\":\n            return 6\n        elif i == \"8\":\n            return 8\n        elif i == \"7\":\n            return 7\n        else:\n            return 9", "def get_age(age):\n    #your code here\n    return int(age.replace(' ','').split('year')[0])", "def get_age(age):\n    age = age[0]\n    age_int = int(age)\n    return age_int", "def get_age(age):\n    \n    year = int(age[0])\n    return year\n    #your code here\n", "def get_age(age):\n    #looks like a bitchy kata lmfao \n       return int(age[0])", "def get_age(age):\n#this is a bitch kata\n   return int(age[0])", "def get_age(age):\n    number = age[0]\n    number = int(number)\n    return number", "import re\n\ndef get_age(age):\n    num = re.search('^(?P<age>\\d+)\\s', age)\n    return int(num.group('age'))", "def get_age(age):\n    res = int(age.split()[0])\n    return 0 if 0 > res > 9 else res", "def get_age(age):\n    #your code here\n    i = str(age[0])\n    for i in age:\n       return int(i)", "def get_age(age):\n    for i in range(0, 10):\n        age = age[i]\n        return int(age)", "def get_age(age):\n    if \"year old\" in age:\n        return 1\n    else:\n        return int(age[0])", "import re\ndef get_age(age):\n     a=re.findall(r'\\d',age)\n     a=''.join(a)\n     return int(a)#your code here", "def get_age(age):\n    for num in '0123456789':\n        if num in age:\n            return int(num)", "def get_age(age):\n    k = str(age)\n    for i in k:\n        if i.isdigit() == True:\n            return int(i)", "def get_age(age):\n    for item in age[0]:\n        return int(item)", "def get_age(age):\n    ages = list(age)\n    return int(ages[0])", "def get_age(age):\n    #your code here\n    solution = int(age[0])\n    return solution", "def get_age(age):\n    answer = int(age[0])\n    return answer", "import re\n\ndef get_age(s):\n    return int(re.search(r\"\\d+\", s).group(0))", "def get_age(age):\n    age1 = [int(s) for s in age.split() if s.isdigit()]\n    for i in age1:\n        return i", "def get_age(age):\n    print('How old are you?')\n    if type(age) == int:\n        return age\n    elif type(age) == str:\n        ageInt = int(age[0])\n        return ageInt", "def get_age(age):\n    for x in age:\n        return int(x[0])\n        \n    #your code here\n    \n", "def get_age(age):\n    for index, character in enumerate(age):\n        if character.isnumeric():\n            return int(character)", "def get_age(age):\n    #convert the first char of string to integer\n    return int(age[0])", "def get_age(age):\n    i = age[0]\n    \n    return int(i)", "def get_age(age):\n  age= age.split()\n  d=''\n  for i in age:\n      d+=i\n      return int(d) \n", "def get_age(age):\n    for years in age:\n        return int(years)", "import re\n\ndef get_age(age):\n    return int(age[0])\n", "def get_age(age):\n    print(age + 'years old')\n    return int(age[0])", "import re\n\ndef get_age(age):\n    r = re.compile(r\"^(\\d+) years old$\")\n    m = r.match(age)\n    if m:\n        return int(m.group(1))\n    else:\n        return 1", "def get_age(age):\n    tmpString = age.split(\" \")\n    a = int(tmpString[0])\n    return a", "def get_age(age):\n    #your code here\n    for c in age:\n        if c.isdigit():\n            return int(c)", "import re\ndef get_age(age):\n    for element in re.findall('[0-9]',age):\n        return int(element)", "def get_age(age):\n    #your code here\n    \n    res = [int(i) for i in age.split() if i.isdigit()]\n    return res[0]", "def get_age(age):\n    integer = int(age[0])\n    return integer", "def get_age(age):\n    str=\"\"\n    for i in age:\n        if i.isnumeric():\n            str=str+i       \n    return int(str)", "def get_age(age):\n    #your code here\n    str = age\n    str_list = str.split()\n    for element in str_list:\n        if element.isdigit():\n            return(int(element))", "def get_age(age):\n    l = list(age)\n    i=  l[0]\n    return int(i)", "def get_age(age):\n    liste = str(age)\n    old = (liste[0])\n    wer = int(old)\n    return wer", "def get_age(age):\n    #your code here\n    age = age.split()\n    age = int(age[0])\n    \n    return age", "def get_age(age: str) -> int:\n    return int(age[0])", "def get_age(age):\n    age = int(age.split()[0])\n    return age", "def get_age(age):\n    age_int = age[0]\n    return int(age_int)", "def get_age(age):\n    ages = []\n    ages = age.split()\n    return int(age[0])", "def get_age(age):\n    return int(str(age[:1]))", "def get_age(age):\n    for i in range(len(age)):\n        return int(age[0])", "get_age = lambda s: ord(s[0])-ord('0')", "def get_age(age):\n    return(int(age[0]))\n    \nget_age(\"2 years old\")\nget_age(\"4 years old\")\nget_age(\"5 years old\")\nget_age(\"7 years old\")\n\n", "import re\ndef get_age(age):\n    an = re.sub(r'\\D+',\"\",age)\n    rean = int(an)\n    return rean", "def get_age(age):\n    girl_list = age.split()\n    if int(girl_list[0]) > 0 and int(girl_list[0]) <= 9:\n        return int(list(age)[0])", "def get_age(age):\n    for i in age:\n        i = int(i)\n        return i\n", "import random\n\ndef get_age(age):\n    return int(age[:1])", "def get_age(age):\n    return [int(ch) for ch in age if ch.isdigit()][0]"]