["def check_availability(schedule, current_time):\n    for tb, te in schedule:\n        if tb <= current_time < te:\n            return te\n    return True", "def check_availability(schedule, current_time):\n    for time in schedule:\n        if time[0] <= current_time < time[1]:\n            return time[1]\n    return True", "def check_availability(schedule, current_time):\n    return next((end for start,end in schedule if start < current_time < end), True)", "check_availability=lambda sh,ct:next((j for i,j in sh if ct>i and ct<j),1)", "def check_availability(schedule, now):\n    return next((end for start, end in schedule if start <= now < end), True)", "def check_availability(schedule, current_time):\n    return next((stop for start, stop in schedule if start <= current_time < stop), True)", "def check_availability(schedule, current_time):\n    for start, stop in schedule:\n        if start <= current_time < stop:\n            return stop\n    return True", "def check_availability(schedule, current_time):\n    for s, e in schedule:\n        if s <= current_time < e: return e\n    return True", "def check_availability(schedule, current_time):\n    for meeting in schedule: return meeting[1] if meeting[0] <= current_time < meeting[1] else True\n    return True", "def check_availability(sched, now):\n    b = [t1 < now < t2 for t1, t2 in sched]\n    return sched[b.index(True)][1] if True in b else True\n"]