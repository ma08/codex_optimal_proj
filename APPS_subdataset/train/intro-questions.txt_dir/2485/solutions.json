["class Solution:\n    def countOdds(self, low: int, high: int) -> int:\n        if low %2 != 0:\n            low -=1\n        if high %2 != 0:\n            high +=1 \n            \n        return (high-low) // 2", "class Solution:\n    def countOdds(self, low: int, high: int) -> int:\n        return (high-high//2)-(low-low//2)+low%2\n", "class Solution:\n    def countOdds(self, low: int, high: int) -> int:\n        return ((high + 1)>>1) - (low>>1)", "class Solution:\n    def countOdds(self, low: int, high: int) -> int:\n        c = 0\n        if low < 0 or high > 10**9:\n            return\n        else:\n            if (low%2 != 0 and high%2 !=0):\n                return int((high-low)/2)+1\n            elif ((low%2 == 0 and high%2 != 0) or (low%2 != 0 and high%2 == 0)):\n                return int((high-low)/2)+1\n            else:\n                return int((high-low)/2)\n", "class Solution:\n    def countOdds(self, low: int, high: int) -> int:\n        c = 0\n        if low < 0 or high > 10**9:\n            return\n        else:\n            if (low%2 == 0 and high%2 ==0):\n                return int((high-low)/2)\n            else:\n                return int((high-low)/2)+1                \n", "class Solution:\n    def countOdds(self, low: int, high: int) -> int:\n      \n        ## O(1) With Math\n        odd_lowerbound, odd_upperbound = -1, -1\n        \n        # compute smallest odd number in range\n        if low % 2 == 1:\n            odd_lowerbound = low\n        else:\n            odd_lowerbound = low + 1\n        \n        # compute largest odd number in range\n        if high % 2 == 1:\n            odd_upperbound = high\n        else:\n            odd_upperbound = high - 1\n            \n        \n        # compute the number of odd numbers in range\n        return (odd_upperbound - odd_lowerbound) // 2 + 1\n    \n", "class Solution:\n    def countOdds(self, low: int, high: int) -> int:\n        return (high + 1) // 2 - (low //2)", "class Solution:\n    def countOdds(self, low: int, high: int) -> int:\n        return (high - low + 1) // 2 + (high % 2 and low % 2);\n", "class Solution:\n    def countOdds(self, lo, hi):\n        return (hi+1)//2 - lo//2"]