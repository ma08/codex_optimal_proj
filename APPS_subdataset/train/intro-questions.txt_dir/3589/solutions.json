["def unique_digits(n):\n    return len(set(str(n))) == len(str(n))\n\ndef next_numb(val):\n    val += 1\n    while val % 3: val += 1\n    if val % 2 == 0: val += 3\n    \n    while not unique_digits(val):\n        val += 6\n        if val > 9876543210: break\n    else:\n        return val\n    \n    return \"There is no possible number that fulfills those requirements\"\n", "def next_numb(val):\n    val += 3 - val % 3\n    if not val & 1: val += 3\n    while val < 9999999999:\n        s = str(val)\n        if len(s) == len(set(s)):\n            return val\n        val += 6\n    return \"There is no possible number that fulfills those requirements\"\n", "DEFAULT = \"There is no possible number that fulfills those requirements\"\n\ndef valid(s): return len(set(s))==len(s)\n\ndef next_numb(n):\n    n += 3-n%3\n    if not n&1: n += 3\n    return next( (n for n in range(n,9999999999,6) if valid(str(n))), DEFAULT)", "def next_numb(val):\n    i = val + 1\n    while i <= 9999999999:\n        if i % 3 == 0 and i % 2 and len(str(i)) == len(set(str(i))):\n            return i\n        i += 1\n    return 'There is no possible number that fulfills those requirements'", "from itertools import count\n\n\ndef next_numb(val):\n    if val >= 9999999999:\n        return 'There is no possible number that fulfills those requirements'\n    for i in count(val + 1):\n        s = str(i)\n        if i % 2 == 1 and i % 3 == 0 and len(s) == len(set(s)):\n            return i", "from collections import Counter\ndef next_numb(val):\n    if val >= 9876543210: return \"There is no possible number that fulfills those requirements\"\n    x = val + 1\n    if x % 3 != 0:\n        x += (3 - x % 3)\n    if x % 2 == 0: x += 3\n    c = Counter(str(x))\n    while max(c.values()) > 1:\n        x += 6\n        c = Counter(str(x))\n    return x", "def next_numb(val):\n    val += 3 - val % 3\n    if not val & 1: val += 3\n    while val <= 9876543201:\n        s = str(val)\n        if len(s) == len(set(s)):\n            return val\n        val += 6\n    return \"There is no possible number that fulfills those requirements\"", "def next_numb(n):\n    if n>9876543201:\n        return \"There is no possible number that fulfills those requirements\"\n    x=n-n%3+3\n    while True:\n        if x>9876543201:\n            return \"There is no possible number that fulfills those requirements\"\n        if x&1:\n            a=[d for d in str(x)]\n            s=list(set(a))\n            if len(a)==len(s):\n                return x\n        x+=3"]