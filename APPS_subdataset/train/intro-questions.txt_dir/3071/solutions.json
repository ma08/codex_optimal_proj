["def last_digit(n1, n2):\n    return pow( n1, n2, 10 )", "rules = {\n    0: [0,0,0,0],   \n    1: [1,1,1,1],\n    2: [2,4,8,6],\n    3: [3,9,7,1],\n    4: [4,6,4,6], \n    5: [5,5,5,5], \n    6: [6,6,6,6], \n    7: [7,9,3,1], \n    8: [8,4,2,6], \n    9: [9,1,9,1],\n}\ndef last_digit(n1, n2):\n    ruler = rules[int(str(n1)[-1])]\n    return 1 if n2 == 0 else ruler[(n2 % 4) - 1]", "def last_digit(n1, n2):\n    return (n1 % 10) ** (n2 % 4 + 4 * bool(n2)) % 10\n", "E = [\n  [0, 0, 0, 0], [1, 1, 1, 1],\n  [6, 2, 4, 8], [1, 3, 9, 7],\n  [6, 4, 6, 4], [5, 5, 5, 5],\n  [6, 6, 6, 6], [1, 7, 9, 3],\n  [6, 8, 4, 2], [1, 9, 1, 9]\n]\n\ndef last_digit(n1, n2):\n    if n2 == 0: return 1\n    return E[n1 % 10][n2 % 4]\n", "last_digit = lambda n1, n2: pow(n1, n2, 10)", "def last_digit(n1, n2):\n    m1=n1%10\n    if m1==1:\n        return 1\n    if m1==2:\n        if n2==0:\n            return 1\n        elif n2%4==3:\n            return 8\n        elif n2%4==0:\n            return 6\n        elif n2%4==2:\n            return 4\n        else:\n            return 2\n    if m1==3:\n        if n2==0:\n            return 1\n        elif n2%4==0:\n            return 1\n        elif n2%2==0:\n            return 9\n        elif n2%4==3:\n            return 7\n        else:\n            return 3\n    if m1==4:\n        if n2==0:\n            return 1\n        elif n2%4==2 or n2%4==0:\n            return 6\n        else:\n            return 4\n    if m1==5:\n        if n2==0:\n            return 1\n        else:\n            return 5\n    if m1==6:\n        if n2==0:\n            return 1\n        else:\n            return 6\n    if m1==7:\n        if n2==0:\n            return 1\n        elif n2%4==3:\n            return 3\n        elif n2%4==0:\n            return 1\n        elif n2%4==2:\n            return 9\n        else:\n            return 7\n    if m1==8:\n        if n2==0:\n            return 1\n        elif n2%4==3:\n            return 2\n        elif n2%4==0:\n            return 6\n        elif n2%4==2:\n            return 4\n        else:\n            return 8\n    if m1==9:\n        if n2==0:\n            return 1\n        elif n2%2==1:\n            return 9\n        else:\n            return 1\n    if m1==0:\n        if n2==0:\n            return 1\n        return 0", "digits = {\n    0:[0,0,0,0],   \n    1:[1,1,1,1],   \n    2:[2,4,8,6],   \n    3:[3,9,7,1],   \n    4:[4,6,4,6],   \n    5:[5,5,5,5],   \n    6:[6,6,6,6],   \n    7:[7,9,3,1],   \n    8:[8,4,2,6], \n    9:[9,1,9,1]\n}\ndef last_digit(n1, n2):\n    return digits[n1%10][(n2-1)%4] if n2 else 1", "def last_digit(n1, n2):\n    last_dict = {\n        0: [0],\n        1: [1], \n        2: [2, 4, 6, 8],\n        3: [3, 9, 7, 1],\n        4: [4, 6],\n        5: [5],\n        6: [6],\n        7: [7, 9, 3, 1],\n        8: [8, 4, 2, 6],\n        9: [9, 1]}\n        \n    if n2 == 0:\n        return 1\n    a = n1 % 10\n    return last_dict[a][(n2-1)%len(last_dict[a])]", "def last_digit(n1, n2):\n    if n2 == 0: return 1\n    seq = [[0], [1], [2, 4, 8, 6], [3, 9, 7, 1], [4, 6], [5], [6], [7, 9, 3, 1], [8, 4, 2, 6], [9, 1]]\n    l_digit = int(str(n1)[-1])\n    position = n2 % len(seq[l_digit])\n    return seq[l_digit][position - 1]", "def last_digit(n1, n2):\n    if n2 == 0:\n        return 1\n    n1 %= 10\n    if n1 in [0, 1, 5, 6]:\n        return n1\n    if n1 == 2:\n        return [6, 2, 4, 8][n2%4]\n    if n1 == 3:\n        return [1, 3, 9, 7][n2%4]\n    if n1 == 4:\n        return [6, 4][n2%2]\n    if n1 == 7:\n        return [1, 7, 9, 3][n2%4]\n    if n1 == 8:\n        return [6, 8, 4, 2][n2%4]\n    return [1, 9][n2%2]\n"]