["from re import compile, sub\n\nREGEX = compile(r',+')\n\n\ndef dad_filter(strng):\n    return sub(REGEX, ',', strng).rstrip(' ,')\n", "import re\ndef dad_filter(string):\n    return re.sub(r',+',r',',string).rstrip(', ')", "import re\ndef dad_filter(string):\n    return re.sub(r'((?<=\\,)\\,+|[\\s,]+\\Z)','',string)", "import re\n\n\ndef dad_filter(string):\n    return re.sub(r',* *$', '', re.sub(r',{2,}', ',', string))", "def dad_filter(string):\n    return \",\".join([w for w in string.rstrip(\", \").split(\",\") if w != \"\"])", "def dad_filter(string):\n    return ','.join([el for el in string.split(',') if el]).rstrip(\", \")", "import re\ndad_filter = lambda s: re.sub(r',+',',',s).strip(', ')", "import re\n\ndef dad_filter(s):\n    return re.sub(',+', ',', s.rstrip(', '))", "import re\n\ndef dad_filter(string):\n    string = re.sub(r',+', ',', string.strip())\n    if string[-1] == ',':\n        return string[:-1]\n    else:\n        return string", "def dad_filter(string):\n    #your code here\n    new_list = string.split()\n    for i in range(len(new_list)):\n        while new_list[i].count(',') > 1:\n            new_list[i] = new_list[i].replace(',', '', 1)\n    \n    str = ' '.join(new_list)       \n    while str[-1] in ' ,':\n        str = str[:-1]\n    return str"]