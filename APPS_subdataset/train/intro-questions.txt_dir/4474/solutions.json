["def start_smoking(bars, boxes):\n    return int(22.5 * (10 * bars + boxes) - 0.5)", "def start_smoking(bars, boxes):\n    return ((10 * bars + boxes) * 90 - bool(bars + boxes)) // 4", "def start_smoking(bars,boxes):\n    total = bars * 10 * 18 + boxes * 18\n    n = total\n    while total >= 1: \n        total /= 5\n        n += total\n    return int(n)", "def start_smoking(bars, boxes):\n    new = (bars * 10 + boxes) * 18\n    smoked = ends = 0\n    \n    while new:\n        smoked += new\n        ends += new\n        new = ends // 5\n        ends -= new * 5\n    \n    return smoked", "def start_smoking(bars,boxes):\n    n = (bars * 10 + boxes) * 18\n    count = 0\n    while n > 4:\n        n,  rest = divmod(n, 5)\n        count += n\n        n += rest\n    return (bars * 10 + boxes) * 18 + count\n", "def start_smoking(bars,boxes):\n    a = []\n    x = 180 * bars + 18 * boxes\n    a.append(x+x//5)\n    n = x % 5 + x//5\n    while n >= 5:\n        a.append(n//5)\n        n = n % 5 + n // 5\n    return sum(a)    \n    \n  \n    \n", "s,start_smoking=lambda n,r=0:n and n+s(*divmod(n+r,5)),lambda B,b:s(18*(10*B+b))", "from math import log\ndef start_smoking(bars,boxes):\n    n=(bars*10+boxes)*18\n    stubs=n\n    while stubs>4:\n        n+=stubs//5\n        stubs=sum(divmod(stubs,5))\n    return n", "def start_smoking(bars,boxes):\n    cigarettes = bars * 10 * 18 + boxes * 18\n    smoked = 0\n    leftovers = 0\n    # Tenemos esa cantidad de cigarrillos los fumamos nos quedamos sin cigarrillos:\n    while True:\n        smoked += cigarettes\n        leftovers += cigarettes\n        cigarettes = 0\n        # Entonces  ahora tenemos que usar los leftovers\n        if leftovers >= 5:\n            cigarettes += leftovers // 5\n            leftovers = leftovers % 5\n        else:\n            return smoked", "def start_smoking(bars,boxes):\n    c=(bars*10+boxes)*18\n    r=0\n    stub=0\n    while(c>0):\n        r+=c\n        stub+=c\n        c,stub=divmod(stub,5)\n    return r"]