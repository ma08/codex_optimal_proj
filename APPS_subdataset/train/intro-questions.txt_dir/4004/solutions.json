["def first_dup(s):\n    for x in s:\n        if s.count(x) > 1:\n            return x\n    return None", "def first_dup(s):\n    return next((x for x in s if s.count(x) > 1),None)", "from collections import Counter, OrderedDict\n\nclass OC(Counter,OrderedDict): pass\n\ndef first_dup(s):\n    return next((c for c,n in OC(s).items() if n>1), None)", "import re\n\ndef first_dup(s):\n    return next(iter(re.findall(r'(.).*\\1', s)), None)", "def first_dup(stg):\n    return next((c for c in stg if stg.count(c) > 1), None)", "def first_dup(s):\n    if s[0] in s[1:]:\n        return s[0]\n    return len(s)>1 and first_dup(s[1:]) or None", "def first_dup(s):\n    for i,v in enumerate(s):\n        if v in s[i+1:]:\n            return v", "def first_dup(s):\n    for i in [ [s.count(i),i] for i in s  ]:\n        if i[0]>1:\n            return i[1]\n", "def first_dup(s):\n    if not s: return None\n    for i in range(len(s)-1):\n        if s[i] in s[i+1:]:\n            return s[i]\n    return None", "def first_dup(text):\n    for t in text:\n        if text.count(t) > 1:\n            return t"]