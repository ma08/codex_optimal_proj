["from collections import deque\n\ndef yes_no(arr):\n    d, result = deque(arr), []\n    while d:\n        result.append(d.popleft())\n        d.rotate(-1)\n    return result", "def yes_no(arr):\n    result = []\n    while arr:\n        result.append(arr.pop(0))\n        if arr:\n            arr.append(arr.pop(0))\n    return result", "def yes_no(arr):\n    result, i = [], 0\n    while arr:\n        result.extend(arr[i::2])\n        j = i != len(arr) % 2\n        arr = arr[1-i::2]\n        i = j\n    return result", "from collections import deque\n\n\ndef yes_no(arr):\n    d = deque(reversed(arr))\n    result = []\n    while d:\n        result.append(d.pop())\n        d.rotate()\n    return result", "def yes_no(arr):\n    new = []\n    take = True\n    while arr:\n        if take:\n            some = arr.pop(0)\n            new.append(some)\n            take = False\n        else:\n            some = arr.pop(0)\n            arr.append(some)\n            take = True\n    return new", "def yes_no(a):\n    if len(a)<=1: return a\n    a.append(a.pop(1))\n    return [a.pop(0)] + yes_no(a)\n", "def yes_no(arr):\n    counter = 0\n    out = []\n    _in = []\n    while arr:\n        for i in arr:\n            if counter % 2 == 0:\n                out.append(i)\n            else:\n                _in.append(i)\n            counter += 1\n        arr = _in\n        _in = []\n    return out", "def yes_no(ar, i = 0):\n    red = []\n    while ar:\n        i = [i, i % max(1,len(ar)) ][all((ar, i >= len(ar)))]\n        red.append(ar.pop(i))\n        i += 1\n    return red\n", "def yes_no(arr, x=0):\n    if len(arr) <= 1: return arr\n    return arr[x::2] + yes_no(arr[1-x::2], x+len(arr)&1)", "def yes_no(arr):\n    r = []\n    for i in range(0, len(arr) * 2 - 1, 2):\n        r.append(arr[i]) # using only append because it is o(1), while remove is o(n)\n        if i < len(arr) - 1:\n            arr.append(arr[i+1])\n    return r"]