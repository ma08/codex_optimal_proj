["class Solution:\n    def reorderSpaces(self, text: str) -> str:\n        s = text.split()\n        if len(s) == 1: \n            text = ''.join(s) + ' '*text.count(' ')\n            return text\n        count = text.count(' ')//(len(s)-1)\n        extra = text.count(' ')%(len(s)-1)\n        result = ''\n        num = 0\n        for c in s:\n            result += c\n            num += 1\n            if num <= (len(s)-1):\n                result += ' '*count\n        qqqqqqqqq = [3]*100000\n        if extra != 0:\n            result += ' '*extra\n        return result", "class Solution:\n    def reorderSpaces(self, text: str) -> str:\n\n        # separate words and spaces\n        words = text.split(' ')\n        words = list(filter(lambda x: len(x) > 0, words))\n        # print(words)\n        \n        # get their counts so we can do some math\n        wordsLen = len(words)\n        spacesLen = text.count(' ')\n        \n        # print(wordsLen, spacesLen)\n        if(wordsLen == 1):\n            return words[0] + ' ' * spacesLen\n        evenDistSpaces = spacesLen // (wordsLen-1)\n        endDistSpaces = spacesLen % (wordsLen-1)\n        \n        # print(evenDistSpaces, endDistSpaces)\n        \n        space = ' ' * evenDistSpaces\n        end = ' ' *  endDistSpaces\n        \n        print(len(space), len(end))\n        \n        resultString = space.join(words)\n        resultString += end\n        \n        return resultString", "class Solution:\n    def reorderSpaces(self, text: str) -> str:\n        # count the number of space\n        cnt_space = 0\n        cnt_words = 0\n        for i in range(len(text)):\n            if text[i] == ' ':\n                cnt_space += 1\n            elif cnt_words == 0 or text[i - 1] == ' ':\n                cnt_words += 1\n        # calculate extra space nad calculate avg space\n        extra_space = 0\n        avg_space = 0\n        if cnt_words < 2:\n            extra_space = cnt_space\n        else:\n            extra_space = cnt_space % (cnt_words - 1)\n            avg_space = cnt_space // (cnt_words - 1)\n        \n        #\n        result = ''\n        word_appeared = False\n        for i in range(len(text)):\n            if text[i] != ' ':\n                if word_appeared and text[i - 1] == ' ':\n                    result += ' ' * avg_space\n                word_appeared = True\n                result += text[i]\n                \n                \n        result += ' ' * extra_space\n        return result", "class Solution:\n    def reorderSpaces(self, text: str) -> str:\n        words = text.split() # split(sep=None) will discard empty strings.\n        cnt = len(words)\n        spaces = text.count(' ')\n        gap = 0 if cnt == 1 else spaces // (cnt - 1)\n        trailing_spaces = spaces if gap == 0 else spaces % (cnt - 1)\n        return (' ' * gap).join(words) + ' ' * trailing_spaces", "class Solution:\n    def reorderSpaces(self, text: str) -> str:\n        wds = text.split()\n        sc = text.count(' ')\n        if len(wds) == 1:\n            return text.strip(' ')+' '*sc\n        nwds = len(wds)\n        s = nwds-1\n        res = sc//s\n        rem = sc-res*s\n        ans = ''\n        for i in wds[:-1]:\n            ans += i\n            ans += ' '*res\n        ans += wds[-1]\n        ans += ' '*rem\n        return ans"]