["def find_average(array):\n    return sum(array) / len(array) if array else 0", "def find_average(array):\n    return 0 if not array else sum(array) / len(array)\n", "def find_average(array):\n    try:\n        return sum(array) / len(array)\n    except ZeroDivisionError:\n        return 0", "def find_average(array):\n    if not array:\n        return 0\n\n    class SafeFloat(object):\n        def __init__(self, val):\n            super(SafeFloat, self).__init__()\n            self.val = val\n\n        def __eq__(self, float_val):\n            # let me fix your comparisons..\n            def isclose(a, b):\n                return abs(a - b) < 0.00000001\n            return isclose(self.val, float_val)\n\n        def __str__(self):\n            return str(self.val)\n\n    from numpy import mean\n    return SafeFloat(mean(array))\n", "def find_average(array):\n    return sum(array) / (len(array) or 1)", "def find_average(array):\n    return 0 if not array else sum(array) / len(array)", "def find_average(array):\n    if len(array) != 0:\n        return sum(array) / len(array)\n    else:\n        return 0", "def find_average(array):\n    return 0 if len(array) == 0 else sum(array) / len(array)", "from numpy import mean as find_average", "def find_average(a):\n    return sum(a)/len(a) if a else 0", "def find_average(array):\n  mean=0\n  if len(array)== 0:\n    return mean\n  sum=0\n  for i in array:\n    sum= sum+i\n  mean= sum/(len(array))\n  return mean\n", "def find_average(array):\n    return sum(array)/len(array) if len(array) > 0 else 0", "def find_average(array):\n    sum = 0\n    for num in array:\n        sum += num\n    try:\n        return sum/len(array)\n    except ZeroDivisionError:\n        return 0", "find_average = lambda x: sum(x)/len(x)", "def find_average(arr):\n    return (sum(arr)/len(arr) if len(arr) != 0 else 0)", "def find_average(array):\n    if not array:\n        return 0\n    else:\n        sum = 0\n        for i in array:\n            sum += i\n        return sum/len(array)\n", "def find_average(A):\n    return sum(A)/len(A) if A else 0", "def find_average(array):\n    return sum(array)/len(array) if len(array) else 0", "def find_average(array):\n    if len(array) == 0:\n        return 0\n    i = 0\n    tot = 0\n    while i < len(array):\n        tot = tot + array[i]\n        i += 1\n    return (tot/len(array))", "def find_average(array):\n    return (0 if array == [] else sum(array) / len(array))\n", "def find_average(array):\n\n    if array == []: return 0\n    return sum(array)/len(array)", "def find_average(array):\n    \n    sum=0\n    average=0\n    \n    if (len(array)>0):\n    \n        for number in array:\n            sum+=number    \n    \n    else:\n        return 0\n    \n    average=sum/len(array)\n    \n    return average", "find_average = lambda array: sum(array) / len(array) if array else 0", "def find_average(array):\n    if len(array) != 0:\n        return sum(array)/len(array)\n    return 0", "def find_average(array):\n    if len(array) < 1:\n        return 0\n    else:\n        return sum(array)/len(array)", "def find_average(a):\n    for i in a:\n        i += i\n        y = i/len(a)\n    return y# create an array called websites that has \"codewars\" as its only value", "find_average = lambda x:2 # ;)", "def find_average (*array):\n    return 2", "import numpy as np\n\n\ndef find_average(array):\n    return np.mean(array)\n", "def find_average(arr):\n    return sum(arr) // len(arr) ", "def find_average(array):\n    if not len(array): return 0\n    else: return sum(array) / len(array)", "def find_average(array):\n    tot = 0\n    if array:\n      for n in array:\n          tot += n\n      return tot / len(array)\n    else:\n      return 0", "find_average = lambda array : sum (array) / len (array) if (array != []) else 0;", "def find_average(arr):\n    return sum(arr)/(len(arr) or 1)", "find_average = lambda x: sum(x)/len(x) if len(x) > 0 else 0", "find_average=lambda arr: sum(arr)/(len(arr) or 1)", "# create an array called websites that has \"codewars\" as its only value\ndef find_average(num):\n    sum = 0\n    for i in num:\n        sum += i\n        average = sum/len(num)\n    return average\n", "# create an array called websites that has \"codewars\" as its only value\ndef find_average(arr):\n    s=0\n    l=len(arr)\n    for i in arr:\n        s=s+i\n    return s//l", "def find_average(array):\n    k = sum(array) / len(array)\n    return k\n    \n    # create an array called websites that has \"codewars\" as its only value\n", "find_average = lambda lst: sum(lst) // len(lst)", "# create an array called websites that has \"codewars\" as its only value\ndef find_average(n):\n    num = 0\n    for i in n:\n        num += i\n    return(num/ len(n))\n        \n        \n", "# create an array called websites that has \"codewars\" as its only value\ndef find_average(n):\n    i=0\n    j=0\n    for number in n:\n        i += number\n        j += 1\n    return (i/j)", "# create an array called websites that has \"codewars\" as its only value\ndef find_average(n):\n    average = 0\n    for i in n:\n        average += i\n    return average/len(n)", "# create an array called websites that has \"codewars\" as its only value\ndef find_average(n):#\n    total = 0\n    for i in n:\n        total += i\n    return total / len(n)\n", "import numpy\ndef find_average(l):\n    return numpy.mean(l)", "def find_average(numbers):\n    total = 0\n    for i in numbers:\n        total = total + i\n    return total/len(numbers)", "def find_average(args):\n    sum = 0\n    for i in args:\n        sum += args[i - 1]\n    return sum / len(args)", "import statistics;\n\ndef find_average(a):\n    return (sum(a)/len(a));\n\n# create an array called websites that has \"codewars\" as its only value\n", "def find_average(listt):\n    for i in listt:\n        return sum(listt)/len(listt)\n        \n", "def find_average(a):\n    for i in a:\n        return sum(a) / int(len(a))", "def find_average(arr):\n    x=len(arr)\n    sum=0\n    \n    for i in range(x):\n        sum=sum+arr[i]\n    \n    return sum/x", "# create an array called websites that has \"codewars\" as its only value\ndef find_average(lst):\n    count = 0\n    average = 0\n    for i in lst:\n        count += i\n    average = count / len(lst)\n    return average", "def find_average(ar):\n    return sum(ar)//len(ar)", "def find_average(arr):\n    return sum(arr[:]) / len(arr)\n", "# create an array called websites that has \"codewars\" as its only value\ndef find_average(list):\n    n = len(list) \n    return sum(list) / n", "def find_average(num):\n    avg = sum(num)/len(num)\n    return avg", "def find_average(arr):\n    res = 0\n    for elem in arr:\n        res += elem\n    return res/len(arr)", "def find_average(n):\n    aver = 0\n    for i in range(len(n)+1):    \n        aver +=i\n    return int(aver/len(n))  \n\n\n\n", "def find_average(nums):\n    return ((nums[0] + nums[-1]) / 2)", "# create an array called websites that has \"codewars\" as its only value\ndef find_average(n):\n    sum_n = 0\n    for i in n:\n        sum_n += i\n    return sum_n // len(n) ", "def find_average(a):\n    s=0\n    avg=0\n    for i in a:\n        s+=i\n    \n    avg=s/len(a)\n    return avg", "from numpy import mean\ndef find_average(x):\n    return mean(x)", "def find_average(lst):\n    sum = 0\n    for nb in lst:\n        sum += nb\n    return sum / len(lst)", "def find_average(arr):\n    sum=0\n    \n    if 0==len(arr):\n        return 0;\n    \n    for num in arr:\n        sum+=num\n        \n    sum=sum/len(arr)\n    \n    return sum", "# create an array called websites that has \"codewars\" as its only value\ndef find_average(lst):\n    sum = 0\n    for i in lst:\n        sum+= i\n    return int(sum / len(lst))\n", "def find_average(list):\n    avg = 0\n    for i in range(len(list)):\n        avg += list[i]\n    return avg / len(list)\n# create an array called websites that has \"codewars\" as its only value\n", "# create an array called websites that has \"codewars\" as its only value\n\n\ndef find_average(array):\n    total = 0\n    for n in array:\n        total += n\n    return total / len(array)    \n", "def find_average(array):\n    return sum(number for number in array)/len(array)", "def find_average(nums):\n    sum = 0\n    for i in nums:\n        sum += i\n    total = sum / len(nums)\n    return total", "def find_average(arr):\n    websites = [\"codewars\"]\n    return sum(arr)/len(arr)", "def find_average(array):\n    num = 0\n    for x in array:\n        num += x\n    return num/len(array)", "find_average = __import__(\"statistics\").mean", "import numpy\n\nfind_average = numpy.mean", "def find_average(my_list):\n    sum = 0\n    count = 0\n    \n    for number in my_list:\n        count = count + 1\n        # count += 1\n        sum = sum + number\n        # sum += number\n        \n    average = sum / count\n        \n    return average\n\n# sum = 5, 13, 15\n# count = 1, 2, 3\n", "def find_average(values):\n    sum = 0\n    for n in values:\n        sum += n\n    return sum / len(values)", "websites = ['codewars']\n\ndef find_average(x):\n    average = sum(x) / len(x)\n    \n    return average\n\n\n", "def find_average(nums):\n    count = 0\n    total = 0\n    for i in nums:\n        count += 1\n        total += i\n    return (total/count)", "def find_average(list):\n    c=0\n    for i in list:\n        i+=i\n        c+=1\n    return i/c", "# create an array called websites that has \"codewars\" as its only value\ndef find_average(values):\n    sum_of_values = 0\n    i = 0\n    for value in values:\n        i += 1\n        sum_of_values += value\n    return sum_of_values / i", "from functools import reduce\n\ndef find_average(arr):\n    return reduce(lambda a, b: a + b, arr) / len(arr) ", "def find_average(arr):\n    if arr:\n        return sum(arr) / len(arr)", "websites = ['codewars'] # create an array called websites that has \"codewars\" as its only value\n\ndef find_average(arr):\n    count = 0\n    sum = 0\n    for number in arr:\n        count += 1\n        sum += number\n    return sum / count\n", "def find_average(x):\n    y = 0\n    for i in range(len(x)):\n        y = y + x[i]\n    return (y/len(x))", "def find_average(a):\n    sum=0\n    for i in a:\n        sum+=i\n    return sum/i", "# create an array called websites that has \"codewars\" as its only value\ndef find_average(lst):\n    ag = 0\n    for i in lst:\n        ag += i\n    return ag / len(lst)\n", "# create an array called websites that has \"codewars\" as its only value\ndef find_average(number):\n    for i in range (len(number)):\n        return(sum(number)/len(number))\n        \n", "websites = {'codewars'}\ndef find_average(n): return sum(n)/len(n)", "def find_average(nums):\n    return sum(nums) // len(nums)", "# create an array called websites that has \"codewars\" as its only value\ndef find_average(websites):\n    count = 0\n    for i in websites:\n        count += i\n    return count // len(websites)\n", "find_average = lambda x: x and sum(x)/len(x)", "# create an array called websites that has \"codewars\" as its only value\ndef find_average(whattheheck):\n    return sum(whattheheck) / len(whattheheck)\n\n", "def find_average(num_list):\n    return sum(num_list) / len(num_list)\n", "def find_average(list):\n    average = len(list)/2\n    return round(average)", "codewars = [\"a\",\"b\",\"c\"]\ndef find_average(codewars):\n    average = (codewars[0]+codewars[1]+codewars[2])/3\n    return average", "def find_average(a_list):\n    return sum(a_list)/len(a_list)", "def find_average(n):\n    import numpy\n    return numpy.mean(n)", "def find_average(lst):\n    results = sum(lst)/len(lst)\n    return results", "# create an array called websites that has \"codewars\" as its only value\ndef find_average(list):\n    sum = 0\n    for i in range(len(list)):\n        sum += list[i]\n        \n    total = sum / len(list)\n    return total", "def find_average(a):\n    count = 0\n    for i in a:\n        count += i\n    return count/len(a)", "def find_average(args):\n    return sum(args) / len(args)"]