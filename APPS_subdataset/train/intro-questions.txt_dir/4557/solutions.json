["def row_weights(array):\n    return sum(array[::2]), sum(array[1::2])\n", "def row_weights(array):\n    evens = sum(i for index, i in enumerate(array) if index%2==0)\n    return (evens, sum(array)-evens)", "row_weights = lambda arr: (sum(arr[::2]), sum(arr[1::2]))", "def row_weights(array):\n    a = array[::2]\n    b = array[1::2]\n    return sum(a),sum(b)", "def row_weights(array):\n    odd = 0\n    even = 0\n    for i in range(len(array)):\n        if i%2 == 0:\n            odd += array[i]\n        else:\n            even += array[i]\n    return odd, even", "def row_weights(lst):\n    return (sum(lst[i] for i in range(0, len(lst), 2)),)+(sum(lst[j] for j in range(1, len(lst), 2)),)", "def row_weights(array):\n    return (sum(array[0::2]), sum(array[1::2]))", "def row_weights(array):\n    return sum(x for i, x in enumerate(array) if not i % 2), sum(x for i, x in enumerate(array) if i % 2)", "def row_weights(array):\n    t1 = 0\n    t2 = 0\n    for i, n in enumerate(array):\n        if i%2==0:\n            t1+=n\n        else:\n            t2+=n\n    return t1, t2", "def row_weights(array):\n    '''Calculate team 1 weights and team 2 weights\n    separately, then return.'''\n    \n    # Team 1 weight\n    team_1 = sum([array[x] for x in range(len(array)) if x % 2 == 0])\n    \n    # Team 2 weight\n    team_2 = sum([array[x] for x in range(len(array)) if x % 2 != 0])\n    \n    # Return statement\n    return(team_1, team_2)\n", "row_weights = lambda x: (sum(x[::2]),sum(x[1::2]))", "def row_weights(array):\n    even = []\n    odd = []\n    for i,el in enumerate(array):\n        if i % 2 == 0:\n            even.append(el)\n        else:\n            odd.append(el)\n    return sum(even), sum(odd)", "def row_weights(array):\n    y = 2\n    team1,team2 = 0,0\n    \n    for i in array:\n        if y%2==0:\n            team1 += i   \n            y+=1\n        else:\n            team2 += i   \n            y+=1    \n    return (team1,team2)        ", "def row_weights(array):\n    group1 = []\n    group2 = []\n    for i in range(len(array)):\n        if not i % 2:\n            group1.append(array[i])\n        else:\n            group2.append(array[i])\n    return (sum(group1), sum(group2))\n    \n", "def row_weights(array):\n    team1 = team2 = 0\n    for i in range(len(array)):\n        if i % 2 == 0:\n            team1 += array[i]\n        else:\n            team2 += array[i]\n    \n    return team1, team2", "def row_weights(array):\n    one , two = 0 , 0\n    for i,n in enumerate(array):\n        if i % 2: \n            two += n\n        else:\n            one += n\n    return (one,two)\n", "def row_weights(array):\n    res = 0\n    res2 = 0\n    for i in range(len(array)):\n        if i%2 != 0:\n            res += array[i]\n        elif i%2 == 0:\n            res2 += array[i]\n    return (res2,res)", "def row_weights(array):\n    team1 = sum([array[i] for i in range(0, len(array), 2)])\n    team2 = sum([array[i] for i in range(1, len(array), 2)])\n    \n    return (team1, team2)\n", "def row_weights(array):\n    team1 = [el for i, el in enumerate(array) if i % 2 ==0]\n    team2 = [el for i, el in enumerate(array) if i % 2 !=0]\n    return sum(team1), sum(team2)", "def row_weights(array):\n    team1 = 0\n    team2 = 0\n    for i in range(0,len(array)):\n        if i % 2 == 0:\n            team1 = team1 + array[i]\n        else:\n            team2 = team2 + array[i]\n    return team1,team2", "def row_weights(array):\n    #numbers are switched because I am \"smart\" and lazy. idk anymore man, it works.\n    team2 = 0\n    team1 = 0    \n    for i in range(len(array)):\n        if i == 0:\n            team1 = team1 + array[i]\n            team2 = team2\n        elif i % 2 != 0 and i > 0:\n            team2 = team2 + array[i]\n        elif i % 2 == 0 and i > 0:\n            team1 = team1 + array[i]\n            \n    return (team1, team2)\n", "def row_weights(array):\n    team_1 = []\n    team_2 = []\n    for i, el in enumerate(array):\n        if i%2 == 0:\n            team_1.append(el)\n        else:\n            team_2.append(el)\n    return sum(team_1), sum(team_2)", "def row_weights(array):\n    return (sum(n for i, n in enumerate(array) if not i % 2), sum(n for i, n in enumerate(array) if i % 2))", "def row_weights(array):\n    return sum(n for i,n in enumerate(array) if i%2 == 0), sum(n for i,n in enumerate(array) if i%2)", "def row_weights(array):\n    return (sum([array[x] for x in range(len(array)) if x % 2 == 0]), sum([array[x] for x in range(len(array)) if x % 2 == 1]))", "def row_weights(array):\n    team1 = []\n    team2 = []\n    e = 0\n    if len(array) % 2 != 0 or len(array) == 1:\n        array.append(0)\n    for i in str(array):\n        if e == len(array):\n            break\n        else:\n            team2.append(array[e+1])\n            team1.append(array[e])\n            e += 2\n    return sum(team1), sum(team2)\n", "def row_weights(arr):\n    even = sum([el for i, el in enumerate(arr) if i % 2 == 0])\n    odd= sum([el for i, el in enumerate(arr) if i % 2 == 1])\n    return even,odd", "def row_weights(array):\n    odd= 0\n    even =0\n    for i in range(len(array)):\n        if i%2==0:\n            odd += array[i]\n        elif i%2==1:\n            even += array[i]\n    return odd,even\n            \n", "def row_weights(array):\n    evens = []\n    odds = []\n    for i, el in enumerate(array):\n        if i % 2 == 0:\n            evens.append(el)\n        else:\n            odds.append(el)\n    return sum(evens), sum(odds)", "def row_weights(array):\n    team1 = []\n    team2 = []\n    for i,el in enumerate(array):\n        if i % 2 == 0:\n            team1.append(el)\n        else:\n            team2.append(el)\n    return sum(team1), sum(team2)", "def row_weights(array):\n    evens = []\n    odd = []\n    for i, el in enumerate(array):\n        if i % 2 == 0:\n            evens.append(el)\n        else:\n            odd.append(el)\n    return sum(evens),sum(odd)", "def row_weights(arr):\n    s = sum([el for i, el in enumerate(arr) if i % 2 == 0])\n    return s, sum(arr) - s", "def row_weights(array):\n    x= sum(  [  array[i]   for i in range(len(array)) if i%2==1  ])\n    y= sum(  [  array[i]   for i in range(len(array)) if i%2==0  ]) \n    return (y,x)", "def row_weights(array):\n    team1 = 0\n    team2 = 0\n    for x in range(0,len(array)):\n        if x % 2 == 0:\n            team1 = team1 + array[x]\n        else:\n            team2 = team2 + array[x]\n    return (team1, team2)", "def row_weights(array):\n    command_1 = array[0::2]\n    command_2 = array[1::2]\n    return sum(command_1), sum(command_2)", "def row_weights(array):\n    team_1 = []\n    team_2 = []\n    \n    for idx, num in enumerate(array):\n        if idx % 2 != 0:\n            team_2.append(num)\n        else:\n            team_1.append(num)\n            \n    return sum(team_1), sum(team_2)", "def row_weights(array):\n    \n    first_team = 0\n    second_team = 0\n    \n    for x in range(len(array)):\n        \n        if x % 2 == 0 :\n            first_team += array[x]\n        else:\n            second_team += array[x]\n            \n    return (first_team, second_team)       \n        \n", "def row_weights(array):\n    c=[]\n    a=0\n    b=0\n    for i in range(len(array)):\n        if i==0 or i%2==0:\n            a=a+array[i]\n        else:\n            b=b+array[i]\n    c.append(a)\n    c.append(b)\n    return tuple(c)\n            \n            \n            \n            \n", "def row_weights(array):\n    lista = []\n    lista2 = []\n    for i in range(0,len(array),2):\n        lista.append(array[i])\n    for i in range(1,len(array),2):\n        lista2.append(array[i])\n    convert = sum(i for i in lista)\n    convert2 = sum(i for i in lista2)\n    return ((convert, convert2))\n    \n    \n    \n\n   \n   \n    \n", "def row_weights(array):\n    \n    x = 0\n    t1 = []\n    t2 = []\n    \n    for i in array:\n        if x%2==0:\n            t1.append(i)\n        else:\n            t2.append(i)\n        x+=1\n    \n    return (sum(t1), sum(t2))", "def row_weights(array):\n    #your code here\n    a=array[::2]\n    ba=array[1::2]\n    return (sum(a),sum(ba))", "def row_weights(array):\n    a=0\n    b=0\n    for i in range(len(array)):\n        if i%2==1:\n            a=a+array[i]\n        elif i%2==0:\n            b=b+array[i]\n    return (b,a)        \n                \n", "def row_weights(array):\n    a=0\n    b=0\n    for i,e in enumerate(array):\n        if i%2==0:\n            a+=e\n        else:\n            b+=e\n    return (a, b)", "def row_weights(array):\n    first=[]\n    second=[]\n    for i,v in enumerate(array):\n        if i%2:\n            first.append(v)\n        else:\n            second.append(v)\n    return (sum(second),sum(first))", "def row_weights(array):\n    arr = [0, 0]\n    for i in range(len(array)):\n        if i % 2 == 0:\n            arr[0] += array[i]\n        else:\n            arr[1] += array[i]\n    return arr[0], arr[1]", "def row_weights(num):\n    r = []\n    for i in enumerate(num, start=1):\n        r.append(i)\n    d = dict(r)\n    t1 = [d[i] for i in list(d.keys()) if i%2 == 1]\n    t2 = [d[i] for i in list(d.keys()) if i%2 == 0]\n    return sum(t1), sum(t2)\n", "def row_weights(array):\n    t1,t2 = 0,0\n    for i in range(len(array)):\n        if i % 2 : t2 += array[i]\n        else: t1 += array[i]\n    return t1,t2", "def row_weights(array):\n    t1w = 0\n    t2w = 0\n    for pos in range(0,len(array)):\n        if pos % 2 == 0:\n            t1w += array[pos]\n        else:\n            t2w += array[pos]\n    return (t1w, t2w) ", "def row_weights(A):\n    return sum(e for i, e in enumerate(A) if not i%2), sum(e for i, e in enumerate(A) if i%2)", "def row_weights(array):\n    x = [sum([array[i] for i in range(len(array)) if i%2 == j]) for j in range(2)]\n    if len(array) < 3:\n        x = x[:2]\n    return tuple(x)", "def row_weights(array):\n    return (sum(j for i, j in enumerate(array) if i % 2 == 0), sum(j for i, j in enumerate(array) if i % 2 != 0))", "def row_weights(l):\n    s = [0,0]\n    for i in range(len(l)):\n        if i % 2 == 0:\n            s[0] += l[i]\n        else:\n            s[1] += l[i]\n    return tuple(s)", "def row_weights(array):\n    sum1 = sum([array[i] for i in range(len(array)) if i % 2 == 0])\n    sum2 = sum([array[i] for i in range(len(array)) if i % 2 != 0])\n    return (sum1,sum2)", "def row_weights(array):\n    if len(array) == 1:\n        return (array[0], 0)\n    \n    one = 0\n    two = 0\n    \n    \n    for i in range (len(array)):\n        if i%2 == 0:\n            one += array[i]\n        else:\n            two += array[i]\n            \n    return (one, two)", "def row_weights(arr):\n    a = 0\n    b = 0\n    for i in range(len(arr)):\n        if i % 2 == 0:\n            b += arr[i]\n        else:\n            a += arr[i]\n    return (b,a)", "def row_weights(array):\n    ans = [0 , 0]\n    for index in range(0, len(array)):\n        if index % 2 == 0:\n            ans[0] += array[index]\n        else:\n            ans[1] += array[index]    \n    return tuple(ans)\n", "def row_weights(array):\n    first = 0\n    second = 0\n    for i, weight in enumerate(array):\n        if i % 2 == 0:\n            first += weight\n        else:\n            second += weight\n    return first, second", "def row_weights(array):\n    output = [0, 0]\n    if len(array) == 1:\n        output[0] += array[0]\n        return tuple(output)\n    else:\n        for i in range(0,len(array)):\n            if i % 2 == 0:\n                output[0]+=array[i]\n            else: \n                output[1]+=array[i]\n    return tuple(output)", "def row_weights(array):\n    even = 0\n    odd = 0\n    for num in range(len(array)):\n        if num % 2 == 0:\n            even += array[num]\n          \n        else:\n            odd += array[num]\n         \n            \n        \n    return even,odd\n    \n    #your code here\n", "def row_weights(a):\n    return (sum([x[1] for x in enumerate(a) if x[0]%2==0]),\n            sum([x[1] for x in enumerate(a) if x[0]%2!=0]))", "def row_weights(array):\n    totals = [0,0]\n    for int, x in enumerate(array):\n        if int % 2 == 0:\n            totals[0]+= x\n        else:\n            totals[1] += x\n    return tuple(totals)", "def row_weights(array):\n    s1,s2=0,0\n    for i in range(0,len(array)):\n        if (i+1)%2==1:\n            s1+=array[i]\n        else:\n            s2+=array[i]\n            \n    return (s1,s2)", "def row_weights(array):\n    first_command = 0\n    second_command = 0\n    for index, value in enumerate(array, 1):\n        if index % 2 == 0:\n            second_command += value\n        else:\n            first_command += value\n    return first_command, second_command", "def row_weights(array):\n    team1 = []\n    team2 = []\n    for i in range(len(array)):\n        if i % 2 == 0:\n            team1.append(array[i])\n        else:\n            team2.append(array[i])\n    weight_team1 = sum(team1)\n    weight_team2 = sum(team2)\n    return (weight_team1, weight_team2)", "def row_weights(array):\n    total_weights_even = 0\n    total_weights_odd = 0\n    for i in range(len(array)):\n        if i % 2 == 0:\n            total_weights_even += array[i]\n        else:\n            total_weights_odd += array[i]\n    return (total_weights_even, total_weights_odd)", "def row_weights(array):\n    total_weights_even = 0\n    total_weights_odd = 0\n    for i in range(0, len(array), 2):\n        total_weights_even += array[i]\n    for j in range(1, len(array), 2):\n        total_weights_odd += array[j]\n    return (total_weights_even, total_weights_odd)", "def row_weights(array):\n    return sum(array[i] for i in range(0, len(array), 2)), sum(array[j] for j in range(1, len(array), 2))", "def row_weights(array):\n    team_1 = []\n    team_2  = []\n    for i, num in enumerate(array):\n        if i %2 ==0:\n            team_1.append(num)\n        if i %2 ==1:\n            team_2.append(num)\n    return sum(team_1), sum(team_2)\n", "def row_weights(l):\n    li_eve=[]\n    li_odd=[]\n    for i in range(0,len(l)):\n        if i%2==0:\n            li_eve.append(l[i])\n        else:\n            li_odd.append(l[i])\n    \n    return(sum(li_eve),sum(li_odd))\n", "def row_weights(array):\n    team_sec = []\n    team_frst = []\n    for index, item in enumerate(array):\n        if index % 2 == 0:\n            team_frst.append(item)\n        else:\n            team_sec.append(item)\n    return sum(team_frst), sum(team_sec)", "def row_weights(array):\n    team1 = 0\n    team2 = 0\n    \n    i = 0\n    while i < len(array):\n        if i % 2 == 0:\n            team1 = team1 + array[i]\n        else:\n            team2 = team2 + array[i]\n        i = i + 1\n    \n    return (team1,team2)", "def row_weights(array):\n    first = [0]\n    second = [0]\n    for i in range(0,len(array)):\n        if i % 2 == 0:\n            first.append(array[i])\n        else:\n            second.append(array[i])\n    return sum(first),sum(second)", "def row_weights(array):\n\n    one = [array[i] for i in range(0, len(array), 2)]\n    two = [array[i] for i in range(1, len(array), 2)]\n\n    return sum(one), sum(two)", "def row_weights(array):\n    w1,w2 = [0],[0]\n    for key,i in enumerate(array): w1.append(i) if key%2== 0 else w2.append(i)\n    return (sum(w1),sum(w2))", "def row_weights(array):\n    a1, a2 = [], []\n    row = [ a1.append(array[i]) if i % 2 == 0 else a2.append(array[i]) for i in range(len(array)) ]\n    return sum(a1), sum(a2)", "def row_weights(array):\n    t1 = t2 = 0\n    for i in range(len(array)):\n        if i % 2 != 0:\n            t2 += array[i]\n        else:\n            t1 += array[i]\n    return (t1, t2)", "def row_weights(array):\n    sum1=sum2=0\n    for i in range(len(array)):\n        if i%2==0:\n            sum1=sum1+array[i]\n        else:\n            sum2=sum2+array[i]\n    return (sum1,sum2)", "def row_weights(array):\n    sum1=sum(array[i] for i in range(0,len(array),2))\n    return (sum1,sum(array)-sum1)", "def row_weights(array):\n    a,b=0,0\n    for  i in range(0,len(array),2):\n        a+=array[i]\n    for  j in range(1,len(array),2):\n        b+=array[j]\n    return a,b", "def row_weights(array):\n    team1 = 0\n    team2 = 0\n    for index, value in enumerate(array, 1):\n        if index % 2 == 0:\n            team2 += array[index-1]\n        else:\n            team1 += array[index-1]\n    return team1, team2", "def row_weights(array):\n    return sum(array[x] for x in range(0,len(array)) if x%2==0),sum(array[x] for x in range(0,len(array)) if x%2!=0)", "def row_weights(array):\n    w1 = sum(array[i] for i in range(len(array)) if i % 2 == 0)\n    w2 = sum(array[i] for i in range(len(array)) if i % 2 == 1)\n    return w1, w2\n", "def row_weights(a):\n    b = sum(a[0::2])\n    d = sum(a[1::2])\n    c = (b , d)\n    return c\n    #your code here\n", "def row_weights(array):\n    first, second = 0, 0\n    for i, el in enumerate(array, 1):\n        if i % 2 == 0:\n            first += el\n        else:\n            second += el\n    return (second, first)\n", "def row_weights(array):\n    return (sum(array[0::2]), sum(array[1::2])) if len(array) > 1 else (array[0], 0)", "def row_weights(array):\n    sum1 = 0\n    sum2 = 0\n    \n    for idx, i in enumerate(array):\n        if idx % 2 == 0:\n            sum1 += i\n        else:\n            sum2 += i\n            \n    return (sum1, sum2)            ", "def row_weights(array):\n    #create totals for each team\n    total1 = 0\n    total2 = 0\n    #loop through array\n    for x in range(len (array)):\n        if x%2 ==1: #if odd number index, add to team2\n            total2+= array[x]\n        else: #add to team1\n            total1+= array[x]\n    #combine results in a tuple\n    return tuple((total1, total2))\n    \n\n", "def row_weights(array):\n    team_1_weight = sum(array[0::2])\n    team_2_weight = sum(array[1::2])\n    total_weights_tuple = (team_1_weight, team_2_weight)\n    return total_weights_tuple", "def row_weights(array):\n    #your code here\n    #if len(array)==1:\n        #return (array[0],0)\n    one=0\n    two=0\n    for s,i in enumerate(array,1):\n        if s%2==0:\n            two+=i\n        else:\n            one+=i\n    return (one,two)", "def row_weights(array):\n    lst = []\n    lst1= []\n    for i in range(len(array)):\n        if i%2==0:\n            lst.append(array[i])\n        else:\n            lst1.append(array[i])\n    return sum(lst),sum(lst1)\n", "def row_weights(array):\n    #your code here\n    a = sum(array[i] for i in range(len(array)) if i%2==0)\n    b = sum(array[i] for i in range(len(array)) if i%2!=0)\n    return (a,b)", "def row_weights(a):\n    first=0\n    second=0\n    for i in range(len(a)):\n      if i%2==0:\n        first+=a[i]\n      else: second += a[i]\n    return (first, second)", "def row_weights(array):\n    if len(array) == 1:\n        return (array[0],0)\n    x = []\n    y = []\n    for i in range(0,len(array)-1,2):\n        x.append(array[i])\n        y.append(array[i+1])\n    if len(array) % 2 != 0:\n        x.append(array[-1])\n    return (sum(x),sum(y))", "def row_weights(array):\n    \"\"\"\n    Returns a tuple of total weights for 'team 1' and 'team 2,' where\n    the first person of array is in team 1, the second team 2, the third\n    in team 1, etc...\n    \n    Args:\n        array: List of at least two positive integers, which represents \n        peoples' weights.\n    Returns:\n        tuple of total weights of team 1 and 2.\n    \"\"\"\n    weight_t1 = sum(array[i] for i in range(0, len(array), 2))\n    weight_t2 = sum(array[i] for i in range(1, len(array), 2))\n    return (weight_t1, weight_t2)", "def row_weights(array):\n  odd=[]\n  even=[]\n  for i in range(len(array)):\n    if i % 2 == 0:\n      even.append(array[i])\n      print(even)\n    else:\n      odd.append(array[i])\n      print(odd)\n  x=sum(odd)\n  y=sum(even)\n  return (y,x)", "def row_weights(array):\n    a = 0\n    b = 0\n    \n    for i, x in enumerate (array):\n        if i%2 == 0:\n            a = a + x\n        else:\n            b = b + x\n    return a,b", "def row_weights(array):\n    \n    team1 = list()\n    team2 = list()\n    \n    for c,e in enumerate(array):\n        if c % 2 == 0:\n            team1.append(e)\n        else:\n            team2.append(e)\n            \n    return (sum(team1), sum(team2))", "def row_weights(array):\n    even_index=[]\n    odd_index=[]\n    even_weight=0\n    odd_weight=0\n    for idx in range(len(array)):\n        if idx%2!=0:\n            odd_index.append(idx)\n        else:\n            even_index.append(idx)\n    for i in even_index:\n        even_weight+=array[i]\n    for i in odd_index:\n        odd_weight+=array[i]\n        #if array.index(i) in even_index:\n            #even_weight+=i\n        #else:\n            #odd_weight+=i\n    return even_weight,odd_weight ", "def row_weights(array):\n    counter_1 = 0\n    counter_2 = 0\n  \n    for x in range(len(array)):\n        if x % 2 ==0:\n            counter_1 += array[x]\n        else:\n            counter_2 += array[x]\n    return (counter_1, counter_2)\n"]