["def is_narcissistic(n):\n    num = str(n)\n    length = len(num)\n    return sum(int(a) ** length for a in num) == n\n", "def is_narcissistic(i):\n    return sum([int(n)**len(str(i)) for n in str(i)])==i", "def is_narcissistic(n):\n  t = str(n)\n  l = len(t)\n  \n  return n == sum(int(d) ** l for d in t)", "is_narcissistic = lambda n: sum(int(i) ** len(str(n)) for i in str(n)) == n", "def is_narcissistic(i):\n    return sum(int(d) ** len(str(i)) for d in str(i)) == i", "def is_narcissistic(i):\n    numbers = list(str(i))\n    power = len(str(i))\n    sum = 0\n\n    for number in numbers:\n        sum += (int(number) ** power)\n\n    return sum == i\n    \n    \n\n", "def is_narcissistic(i):\n    n = len(str(i))\n    lst = list(str(i))\n    answer = 0\n    for value in lst:\n        answer += int(value)**n\n    return answer == i", "def is_narcissistic(i):\n    digits = str(i)\n    n = len(digits)\n    return sum(int(d)**n for d in digits) == i", "def is_narcissistic(i):\n    s = str(i)\n    return sum(int(x) ** len(s) for x in s) == i", "def is_narcissistic(i):\n    sum_of_digits = 0\n    exponent = len(str(i))\n    for digit in str(i):\n        sum_of_digits += int(digit)**exponent\n    return sum_of_digits == i"]