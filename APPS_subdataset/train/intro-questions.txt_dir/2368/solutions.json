["t = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    \n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ma = min(a)\n    mb = min(b)\n    \n    ops = 0\n    for xa, xb in zip(a, b):\n        da = xa - ma\n        db = xb - mb\n        ops += max(da, db)\n        \n    print(ops)\n", "import math\n\nT = int(input())\n\nfor i in range(T):\n  n = int(input())\n  #n,k = map(int, input().split())\n  a = list(map(int,input().split()))\n  b = list(map(int,input().split()))\n  #a = input()\n  d = False\n  \n  am = min(a)\n  bm = min(b)\n\n  ans = 0\n  for i in range(n):\n    ans += max(a[i]-am,b[i]-bm)\n  print(ans)", "for _ in range(int(input())):\n    am = int(input())\n    a = list(map(int,input().split()))\n    b = list(map(int,input().split()))\n    aMin = min(a)\n    bMin = min(b)\n    t = 0\n    for i in range(am):\n        t+=max(a[i]-aMin,b[i]-bMin)\n    print(t)", "import sys\nimport math\ndef II():\n\treturn int(sys.stdin.readline())\n\ndef LI():\n\treturn list(map(int, sys.stdin.readline().split()))\n\ndef MI():\n\treturn list(map(int, sys.stdin.readline().split()))\n\ndef SI():\n\treturn sys.stdin.readline().strip()\nt = II()\nfor q in range(t):\n\tn = II()\n\ta = LI()\n\tb = LI()\n\tx = min(a)\n\ty = min(b)\n\tcount = 0\n\tfor i in range(n):\n\t\tcount+=max(a[i]-x,b[i]-y)\n\tprint(count)\n", "import sys\ninput = sys.stdin.readline\nfor nt in range(int(input())):\n\tn = int(input())\n\ta = list(map(int,input().split()))\n\tb = list(map(int,input().split()))\n\tm1 = min(a)\n\tm2 = min(b)\n\tans = 0\n\tfor i in range(n):\n\t\tx = a[i]-m1\n\t\ty = b[i]-m2\n\t\tans += (min(x,y) + (max(x,y)-min(x,y)))\n\tprint (ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a1 = min(a)\n    b1 = min(b)\n    ans = 0\n    for i in range(n):\n        cnt1, cnt2 = a[i] - a1, b[i] - b1\n        ans += max(cnt1, cnt2)\n    print(ans)\n", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = min(a)\n    y = min(b)\n    ans = 0\n    for i in range(n):\n        ans += max(a[i]-x, b[i]-y)\n    print(ans)", "\"\"\"\n                            pppppppppppppppppppp\n                         ppppp  ppppppppppppppppppp\n                      ppppppp    ppppppppppppppppppppp\n                      pppppppp  pppppppppppppppppppppp\n                      pppppppppppppppppppppppppppppppp\n                              pppppppppppppppppppppppp\n       ppppppppppppppppppppppppppppppppppppppppppppppp  pppppppppppppppppppp\n      pppppppppppppppppppppppppppppppppppppppppppppppp  ppppppppppppppppppppp\n     ppppppppppppppppppppppppppppppppppppppppppppppppp  pppppppppppppppppppppp\n    ppppppppppppppppppppppppppppppppppppppppppppppp    pppppppppppppppppppppppp\n   pppppppppppppppppppppppppppppppppppppppppppppp     pppppppppppppppppppppppppp\n  ppppppppppppppppppppppppppppppppppppppppppppp      pppppppppppppppppppppppppppp\n  pppppppppppppppppppppppppppppppp               pppppppppppppppppppppppppppppppp\n  pppppppppppppppppppppppppppp     pppppppppppppppppppppppppppppppppppppppppppppp\n  ppppppppppppppppppppppppppp    pppppppppppppppppppppppppppppppppppppppppppppppp\n    pppppppppppppppppppppppp  pppppppppppppppppppppppppppppppppppppppppppppppppp\n     ppppppppppppppppppppppp  ppppppppppppppppppppppppppppppppppppppppppppppppp\n      pppppppppppppppppppppp  ppppppppppppppppppppppppppppppppppppppppppppppp\n       ppppppppppppppppppppp  ppppppppppppppppppppppppppppppppppppppppppppp\n                              pppppppppppppppppppppppp\n                              pppppppppppppppppppppppppppppppp\n                              pppppppppppppppppppppp  pppppppp\n                              ppppppppppppppppppppp    ppppppp\n                                 ppppppppppppppppppp  ppppp\n                                    pppppppppppppppppppp\n\"\"\"\n\n\nimport sys\nfrom functools import lru_cache, cmp_to_key\nfrom heapq import merge, heapify, heappop, heappush, nsmallest\nfrom math import ceil, floor, gcd, fabs, factorial, fmod, sqrt, inf\nfrom collections import defaultdict as dd, deque, Counter as C\nfrom itertools import combinations as comb, permutations as perm\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nfrom time import perf_counter\nfrom fractions import Fraction\nfrom decimal import Decimal\n# sys.setrecursionlimit(2 * (10 ** 5))\n# sys.stdin = open(\"input.txt\", \"r\")\n# sys.stdout = open(\"output.txt\", \"w\")\nmod = pow(10, 9) + 7\nmod2 = 998244353\ndef data(): return sys.stdin.readline().strip()\ndef out(var): sys.stdout.write(str(var)+\"\\n\")\ndef outa(*var, end=\"\\n\"): sys.stdout.write(' '.join(map(str, var)) + end)\ndef l(): return list(sp())\ndef sl(): return list(ssp())\ndef sp(): return list(map(int, data().split()))\ndef ssp(): return list(map(str, data().split()))\ndef l1d(n, val=0): return [val for i in range(n)]\ndef l2d(n, m, val=0): return [l1d(n, val) for j in range(m)]\n\n\nfor _ in range(int(data())):\n    n = int(data())\n    c = l()\n    o = l()\n    mc, mo = min(c), min(o)\n    answer = 0\n    for i in range(n):\n        a, b = c[i] - mc, o[i] - mo\n        answer += max(a, b)\n    out(answer)\n", "import sys, math\nimport io, os\n#data = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\nfrom bisect import bisect_left as bl, bisect_right as br, insort\nfrom heapq import heapify, heappush, heappop\nfrom collections import defaultdict as dd, deque, Counter\n#from itertools import permutations,combinations\ndef data(): return sys.stdin.readline().strip()\ndef mdata(): return list(map(int, data().split()))\ndef outl(var) : sys.stdout.write(' '.join(map(str, var))+'\\n')\ndef out(var) : sys.stdout.write(str(var)+'\\n')\nfrom decimal import Decimal\nfrom fractions import Fraction\n#sys.setrecursionlimit(100000)\nINF = float('inf')\nmod = int(1e9)+7\n\nfor t in range(int(data())):\n    n=int(data())\n    a=mdata()\n    b=mdata()\n    a1,b1=min(a),min(b)\n    ans=0\n    for i in range(n):\n        ans+=max(a[i]-a1,b[i]-b1)\n    print(ans)\n\n", "for _ in range(int(input())):\n    n = int(input())\n    candies = list(map(int, input().split()))\n    oranges = list(map(int, input().split()))\n    \n    min_c = min(candies)\n    min_o = min(oranges)\n    moves = 0\n    \n    for i in range(n):\n        a = candies[i]\n        b = oranges[i]\n        x = a - min_c\n        y = b - min_o\n        moves += min(x, y) + max(x, y) - min(x, y)\n    print(moves)", "# Author: S Mahesh Raju\n# Username: maheshraju2020\n# Date: 05/08/2020\n\nfrom sys import stdin, stdout, setrecursionlimit\nfrom math import gcd, ceil, sqrt\nfrom collections import Counter\nfrom bisect import bisect_left, bisect_right\nii1 = lambda: int(stdin.readline().strip())\nis1 = lambda: stdin.readline().strip()\niia = lambda: list(map(int, stdin.readline().strip().split()))\nisa = lambda: stdin.readline().strip().split()\nsetrecursionlimit(100000)\nmod = 1000000007\n\ntc = ii1()\nfor _ in range(tc):\n    n = ii1()\n    cand = iia()\n    oran = iia()\n    a = min(cand)\n    b = min(oran)\n    res = 0\n    for i, j in zip(cand, oran):\n        t1 = i - a\n        t2 = j - b\n        res += min(t1, t2)\n        res += max(t1, t2) - min(t1, t2)\n    print(res)\n", "t=int(input())\nfor you in range(t):\n    n=int(input())\n    a=input().split()\n    ai=[int(i) for i in a]\n    b=input().split()\n    bi=[int(i) for i in b]\n    x=min(ai)\n    y=min(bi)\n    count=0\n    for i in range(n):\n        count+=max(ai[i]-x,bi[i]-y)\n    print(count)\n", "## necessary imports\nimport sys\ninput = sys.stdin.readline\n# from math import ceil, floor, factorial;\n\ndef ceil(x):\n    if x != int(x):\n        x = int(x) + 1;\n    return x;\n    \n# swap_array function\ndef swaparr(arr, a,b):\n    temp = arr[a];\n    arr[a] = arr[b];\n    arr[b] = temp;\n\n## gcd function\ndef gcd(a,b):\n    if b == 0:\n        return a;\n    return gcd(b, a % b);\n\n## nCr function efficient using Binomial Cofficient\ndef nCr(n, k): \n    if(k > n - k): \n        k = n - k; \n    res = 1;\n    for i in range(k): \n        res = res * (n - i);\n        res = res / (i + 1); \n    return int(res);\n\n## upper bound function code -- such that e in a[:i] e < x;\ndef upper_bound(a, x, lo=0, hi = None):\n    if hi == None:\n        hi = len(a);\n    while lo < hi:\n        mid = (lo+hi)//2;\n        if a[mid] < x:\n            lo = mid+1;\n        else:\n            hi = mid;\n    return lo;\n\n## prime factorization\ndef primefs(n):\n    ## if n == 1    ## calculating primes\n    primes = {}\n    while(n%2 == 0 and n > 0):\n        primes[2] = primes.get(2, 0) + 1\n        n = n//2\n    for i in range(3, int(n**0.5)+2, 2):\n        while(n%i == 0 and n > 0):\n            primes[i] = primes.get(i, 0) + 1\n            n = n//i\n    if n > 2:\n        primes[n] = primes.get(n, 0) + 1\n    ## prime factoriazation of n is stored in dictionary\n    ## primes and can be accesed. O(sqrt n)\n    return primes\n\n## MODULAR EXPONENTIATION FUNCTION\ndef power(x, y, p): \n    res = 1\n    x = x % p  \n    if (x == 0) : \n        return 0\n    while (y > 0) : \n        if ((y & 1) == 1) : \n            res = (res * x) % p \n        y = y >> 1      \n        x = (x * x) % p \n    return res \n\n## DISJOINT SET UNINON FUNCTIONS\ndef swap(a,b):\n    temp = a\n    a = b\n    b = temp\n    return a,b;\n\n# find function with path compression included (recursive)\n# def find(x, link):\n#     if link[x] == x:\n#         return x\n#     link[x] = find(link[x], link);\n#     return link[x];\n\n# find function with path compression (ITERATIVE)\ndef find(x, link):\n    p = x;\n    while( p != link[p]):\n        p = link[p];\n    \n    while( x != p):\n        nex = link[x];\n        link[x] = p;\n        x = nex;\n    return p;\n\n\n# the union function which makes union(x,y)\n# of two nodes x and y\ndef union(x, y, link, size):\n    x = find(x, link)\n    y = find(y, link)\n    if size[x] < size[y]:\n        x,y = swap(x,y)\n    if x != y:\n        size[x] += size[y]\n        link[y] = x\n\n## returns an array of boolean if primes or not USING SIEVE OF ERATOSTHANES\ndef sieve(n): \n    prime = [True for i in range(n+1)] \n    p = 2\n    while (p * p <= n): \n        if (prime[p] == True): \n            for i in range(p * p, n+1, p):\n                prime[i] = False\n        p += 1\n    return prime\n\n#### PRIME FACTORIZATION IN O(log n) using Sieve ####\nMAXN = int(1e5 + 5)\ndef spf_sieve():\n    spf[1] = 1;\n    for i in range(2, MAXN):\n        spf[i] = i;\n    for i in range(4, MAXN, 2):\n        spf[i] = 2;\n    for i in range(3, ceil(MAXN ** 0.5), 2):\n        if spf[i] == i:\n            for j in range(i*i, MAXN, i):\n                if spf[j] == j:\n                    spf[j] = i;\n    ## function for storing smallest prime factors (spf) in the array\n\n################## un-comment below 2 lines when using factorization #################\n# spf = [0 for i in range(MAXN)]\n# spf_sieve();\ndef factoriazation(x):\n    ret = {};\n    while x != 1:\n        ret[spf[x]] = ret.get(spf[x], 0) + 1;\n        x = x//spf[x]\n    return ret;\n    ## this function is useful for multiple queries only, o/w use\n    ## primefs function above. complexity O(log n)\n\n## taking integer array input\ndef int_array():\n    return list(map(int, input().strip().split()));\n\ndef float_array():\n    return list(map(float, input().strip().split()));\n\n## taking string array input\ndef str_array():\n    return input().strip().split();\n\n#defining a couple constants\nMOD = int(1e9)+7;\nCMOD = 998244353;\nINF = float('inf'); NINF = -float('inf');\n\n################### ---------------- TEMPLATE ENDS HERE ---------------- ###################\n\nfor _ in range(int(input())):\n    n = int(input());\n    a = int_array(); b = int_array();\n    ma = min(a); mb = min(b); ans = 0;\n    for i in range(n):\n        x = a[i] - ma;\n        y = b[i] - mb;\n        ans += min(x, y);\n        ans += abs(x - y);\n    print(ans);", "import math\n\nt = int(input())\n\nfor q in range(t):\n    n = int(input())\n    A = [int(i) for i in input().split()]\n    B = [int(i) for i in input().split()]\n    ma = min(A)\n    mb = min(B)\n    s = 0\n    for i in range(n):\n        s += max(A[i] - ma, B[i] - mb)\n    print(s)\n", "#Bhargey Mehta (Junior)\n#DA-IICT, Gandhinagar\nimport sys, math\nmod = 10**9\n\ndef solve(test_index):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    tga, tgb = min(a), min(b)\n    ans = 0\n    for i in range(n):\n        ans += max(a[i]-tga, b[i]-tgb)\n    print(ans)\n    return\n\nif 'PyPy' not in sys.version:\n    sys.stdin = open('input.txt', 'r')\n\nsys.setrecursionlimit(100000)\nnum_tests = 1\nnum_tests = int(input())\nfor test in range(1, num_tests+1):\n    #print(\"Case #{}: \".format(test), end=\"\")\n    solve(test)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ma = min(a)\n    mb = min(b)\n    ans = 0\n    for i in range(0,n):\n        ta = a[i]-ma\n        tb = b[i]-mb\n        ans += max(ta,tb)\n    print(ans)\n", "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    A=list(map(int,input().split()))\n    B=list(map(int,input().split()))\n\n    MINA=min(A)\n    MINB=min(B)\n\n    ANS=0\n\n    for i in range(n):\n        a=A[i]\n        b=B[i]\n\n        aa=a-MINA\n        bb=b-MINB\n\n        ANS+=max(aa,bb)\n\n    print(ANS)\n", "for _ in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    b=list(map(int,input().split()))\n    ma=min(a)\n    mb=min(b)\n    ans=0\n    for i in range(n):\n        f=min(a[i]-ma,b[i]-mb)\n        ans+=f\n        a[i]-=f\n        b[i]-=f\n        ans+=b[i]-mb+a[i]-ma\n    print(ans)\n", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ma, mb = min(a), min(b)\n    ans = 0\n    for i in range(n):\n        ans += max(a[i] - ma, b[i] - mb)\n    print(ans)\n\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nfor T in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n\n    minA = min(a)\n    minB = min(b)\n\n    moves = 0\n    for g in range(n):\n        moves += max(a[g] - minA, b[g] - minB)\n\n    print(moves)\n", "import math\nt = int(input())\nfor g in range(t):\n    n = int(input())\n    A = list(map(int,input().split()))\n    B = list(map(int,input().split()))\n    a = min(A)\n    b = min(B)\n    ans = 0\n    for i in range(n):\n        ans += max(A[i]-a,B[i]-b)\n    print(ans)", "import time\nfrom collections import deque \n\ndef inpt():\n    return int(input())\ndef inpl():\n    return list(map(int,input().split()))\ndef inpm():\n    return list(map(int,input().split()))\n    \ndef solve():\n    n = inpt()\n    a = inpl()\n    b = inpl()\n    ans=[]\n    x=min(a)\n    y=min(b)\n    for i in range(n):\n        ans.append(max(abs(a[i]-x),abs(b[i]-y)))\n    print(sum(ans))\n    \n    \ndef main():\n    #start_time=time.time()\n    m=10**9+7\n    t = int(input())\n    while(t):\n        t-=1\n        solve()\n        \n    \n    #print('Time Elapsed = ',time.time()-start_time,\" seconds\")\ndef __starting_point():\n    main()\n\n__starting_point()", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    br = list(map(int, input().split()))\n    ma = min(ar)\n    mb = min(br)\n    ans = 0\n    for i, j in zip(ar, br):\n        r1 = i - ma\n        r2 = j - mb\n        x = min(r1, r2)\n        ans += x\n        r1 -= x\n        r2 -= x\n        ans += r1\n        ans += r2\n    print(ans)", "import sys\n# sys.setrecursionlimit(10**6) \ninput=sys.stdin.readline\nt=int(input())\nfor t1 in range(t):\n    n=int(input())\n    a=list(map(int,input().split(\" \")))\n    b=list(map(int,input().split(\" \")))\n    a1=min(a)\n    b1=min(b)\n    ans=0\n    for i in range(n):\n        f1=0\n        f2=0\n        if(a[i]>a1):\n            f1=a[i]-a1\n        if(b[i]>b1):\n            f2=b[i]-b1\n        z=min(f1,f2)\n        ans+=z\n        f1-=z\n        f2-=z\n        ans+=f1+f2\n    print(ans)", "import math\nfrom collections import deque\nfrom sys import stdin, stdout\nfrom string import ascii_letters\ninput = stdin.readline\n#print = stdout.write\nletters = ascii_letters[:26]\n\n\n\nfor _ in range(int(input())):\n    n = int(input())\n    first = list(map(int, input().split()))\n    second = list(map(int, input().split()))\n    nf = min(first)\n    ns = min(second)\n    res = 0\n    for i in range(n):\n        diff = first[i] - nf\n        difs = second[i] - ns\n        bf = min(diff, difs)\n        diff -= bf\n        difs -= bf\n        res += bf + diff + difs\n    print(res)", "from bisect import bisect_left\nimport sys\ninput=sys.stdin.readline\nt = int(input())\n\nfor _ in range(t):\n    l = int(input())\n    a = list(map(int,input().split()))\n    b = list(map(int,input().split()))\n    \n    ma = min(a)\n    mb = min(b)\n    \n    ans = 0\n    \n    for j in range(l):\n        temp = max(a[j] - ma, b[j]-mb)\n        ans += temp\n        \n    print(ans)", "#!/usr/bin/env pypy3\n\ndef ans(A, B):\n\n\tma = min(A)\n\tmb = min(B)\n\n\tret = 0\n\n\tfor a, b in zip(A, B):\n\t\tret += max(a - ma, b - mb)\n\n\treturn ret\n\nT = int(input())\nfor t in range(T):\n\tinput()\n\tA = list(map(int, input().split()))\n\tB = list(map(int, input().split()))\n\n\tprint(ans(A, B))", "from sys import stdin, stdout\n\n\nT = int(stdin.readline())\nfor _ in range(T):\n\n    N = int(stdin.readline())\n\n    a = [int(x) for x in stdin.readline().split()]\n    b = [int(x) for x in stdin.readline().split()]\n\n    amn = min(a)\n    bmn = min(b)\n\n    ans = 0\n    for i in range(N):\n        ans += max(a[i]-amn, b[i]-bmn)\n    print(ans)\n", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    am =  min(a)\n    bm = min(b)\n    ans = 0\n    for i in range(n):\n        ans += max(b[i]-bm,a[i]-am)\n    print(ans)\n", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    m = min(a)\n    for i in range(len(a)):\n        a[i] -= m\n    m = min(b)\n    for i in range(len(b)):\n        b[i] -= m\n    o = 0\n    for i in range(n):\n        o += max(a[i], b[i])\n    print(o)", "import sys\nii = lambda: sys.stdin.readline().strip()\nidata = lambda: [int(x) for x in ii().split()]\n\ndef solve():\n    n = int(ii())\n    a = idata()\n    b = idata()\n    a1, b1 = min(a), min(b)\n    ans = 0\n    for i in range(n):\n        ans += max(b[i] - b1, a[i] - a1)\n    print(ans)\n    return\n\nfor t in range(int(ii())):\n    solve()\n", "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\n\nfrom itertools import accumulate\n\nM = mod = 998244353\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n \ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\n\n\nfor _ in range(val()):\n    n = val()\n    a = li()\n    b = li()\n\n    ans = 0\n    mina = min(a)\n    minb = min(b)\n    for i in range(n):\n        lessa = a[i] - mina\n        lessb = b[i] - minb\n        ans += max(lessa, lessb)\n    print(ans)", "import math\nt=int(input())\nfor w in range(t):\n    n=int(input())\n    a=[int(i) for i in input().split()]\n    b=[int(i) for i in input().split()]\n    k1=min(a)\n    k2=min(b)\n    c=0\n    for i in range(n):\n        k3=a[i]-k1\n        k4=b[i]-k2\n        c+=max(k3,k4)\n    print(c)", "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    b=list(map(int,input().split()))\n    ma=min(a)\n    mb=min(b)\n    ans=0\n    for i in range(n):\n        ga=a[i]-ma \n        gb=b[i]-mb \n        ans=ans+max(ga,gb)\n    print(ans)"]