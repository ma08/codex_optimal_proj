["array = [1, 10, 9, 12, 3, 4]\n\ndef thirt(n):\n    total = sum([int(c) * array[i % 6] for i, c in enumerate(reversed(str(n)))])\n    if n == total:\n        return total\n    return thirt(total)\n", "import itertools as it\n\ndef thirt(n):\n    if n < 100: return n\n    \n    pattern = it.cycle([1, 10, 9, 12, 3, 4])\n    \n    return thirt(sum(d*n for d,n in zip(list(map(int, str(n)[::-1])), pattern)))\n", "def thirt(n):\n  seq = [1, 10, 9, 12, 3, 4]\n  s = str(n)\n  t = sum(seq[i%6] * int(s[-i-1]) for i in range(len(s)))\n  return t if t == n else thirt(t)", "from itertools import cycle\n\ndef thirt(n):\n    c = cycle([1, 10, 9, 12, 3, 4])\n    m = sum( int(l)*next(c) for l in str(n)[::-1] )\n    return m if m == n else thirt(m)", "def thirt(n):\n    w = [1, 10, 9, 12, 3, 4]\n    while True:\n        r = n; q = -1; c = 0; j = 0\n        while (q != 0):\n            q = int(r / 10)\n            c += (r % 10) * w[j % 6]\n            r = q\n            j += 1\n        if (c == n): return c\n        n = c", "seq = (1, 10, 9, 12, 3, 4)\n\ndef thirt(n):\n    strn = str(n)[::-1]\n    m = sum(seq[i % 6] * int(strn[i]) for i in range(len(strn)))\n    return n if n == m else thirt(m)", "def thirt(n):\n    p = [1, 10, 9, 12, 3, 4]\n    ns = sum(int(c) * p[i % len(p)] for i, c in enumerate(str(n)[::-1]))\n    return ns if ns == n else thirt(ns)", "from itertools import cycle\ndef thirt(n):\n    while True:\n        pattern = cycle((1, 10, 9, 12, 3, 4))\n        total = sum(int(a) * next(pattern) for a in reversed(str(n)))\n        if total == n:\n            return total\n        n = total", "def thirt(n):\n      sequence = [1,10,9,12,3,4]\n      numbers = str(n)[::-1]\n      sum = 0\n      for i in range(len(numbers)):\n          sum += int(sequence[i%6])*int(numbers[i])\n      if sum == n:\n          return sum\n      else:\n          return thirt(sum)\n        \n            \n", "from itertools import cycle\n\ndef thirt(n):\n    m = -n\n    while m != n:\n        m = n\n        n = sum(x * y for x, y in zip(cycle([1, 10, 9, 12, 3, 4]), map(int, str(n)[::-1])))\n    return n"]