["import re\n\ndef bears(n, s):\n    a = re.findall(r\"B8|8B\", s)\n    return [\"\".join(a), len(a) >= n]", "import re\ndef bears(x,s):\n    r = re.findall(r'8B|B8', s)\n    return [''.join(r),len(r)>=x]", "from regex import findall\n\ndef bears(x, s):\n    res = findall(r\"(B8|8B)\", s)\n    return [''.join(res), len(res) >= x]", "import re\n\n\ndef bears(n, stg):\n    pairs = re.findall(r\"B8|8B\", stg)\n    return [\"\".join(pairs), len(pairs) >= n]", "def bears(x,s):\n    k = []\n    i = 0\n    while i < len(s)-1:\n        if s[i] == 'B' and s[i+1] == '8' or s[i] == '8' and s[i+1] == 'B':\n            k.append(s[i] + s[i+1])\n            i += 2\n            \n        else:i += 1\n    return [''.join(k),len(k) >= x] if k else ['', len(k) >= x]\n", "import re\n\ndef bears(x,s):\n    matches = re.findall('(B8|8B)', s)\n    return [''.join(matches), len(matches)>=x]", "def bears(x, s):\n        couples = [\"B8\", \"8B\"]\n        matches = ['', False]\n        counter = 0\n        ln = len(s)\n        i = 0\n        while i < ln:\n                pair = s[i: i+2]\n                if pair in couples:\n                        matches[0] += pair\n                        counter += 1\n                        i += 2\n                else:\n                        i += 1\n        if counter >= x:\n                matches[1] = True\n        return matches\n", "def bears(x,s):\n    \n    result = []\n    bears = []\n\n    while len(s) > 1:\n        if s[0] == 'B' and s[1] == '8':\n            s = s[2::]\n            bears.append('B8')\n        elif s[0] == '8' and s[1] == 'B':\n            s = s[2::]\n            bears.append('8B')\n        else: \n            s = s[1::]\n    \n    result.append(''.join(bears))  \n    test = len(bears)*2 >= x\n    result.append(test)\n    \n    return result\n    \n", "bears=lambda x,s,k='',i=0:[k,len(k)>=x*2]if i==len(s)else bears(x,s,k+s[i:i+2],i+2)if s[i:i+2]in['8B','B8']else bears(x,s,k,i+1)\n", "bears=lambda n,s:(lambda a:[''.join(a),n<=len(a)])(__import__('re').findall(r\"B8|8B\",s))"]