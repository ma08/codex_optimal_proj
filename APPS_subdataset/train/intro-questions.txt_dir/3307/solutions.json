["def fat_fingers(s):\n    if not s: return s\n    swap = [False]\n    return ''.join( c.swapcase() if swap[0] else c for c in s \n                    if c not in \"aA\" or swap.__setitem__(0, not swap[0]) )", "import re\n\ndef fat_fingers(string):\n  return ''.join(w.swapcase() if i%2 else w for i, w in enumerate(re.split('a|A', string)))", "import re;fat_fingers=lambda s:s and re.sub('[aA](.*?)(a|A|$)',lambda m:m[1].swapcase(),s)", "from itertools import cycle\n\ndef fat_fingers(s):\n    def characters(s):\n        it = cycle([str, str.swapcase])\n        f = next(it)\n        for c in s:\n            if c in 'aA':\n                f = next(it)\n            else:\n                yield f(c)\n    return ''.join(characters(s))", "def fat_fingers(string):\n    if type(string) != str: return string\n    aCnt, chars = 0, []\n    for c in string:\n        if c in 'aA': aCnt += 1\n        else:         chars.append(c.swapcase()) if aCnt&1 else chars.append(c) \n    return ''.join(chars)\n", "def fat_fingers(string):\n    if string is None:\n        return None\n    tokens = string.replace('a', 'A').split(sep='A')\n    for i,token in enumerate(tokens):\n        if i % 2 == 0:\n            continue  # CapsLock presses cancel each other out\n        tokens[i] = token.swapcase()\n    return ''.join(tokens)", "def fat_fingers(string):\n    if string is None:\n        return None\n    ret = []\n    capslock = False\n    for c in string:\n        if c in 'aA':\n            capslock = not capslock\n        else:\n            ret.append(c.swapcase() if capslock else c)\n    return ''.join(ret)", "def fat_fingers(string):\n\n    fat_string = \"\"\n    count = 0\n    \n    for i in string:\n    \n        if (i == \"a\") or (i == \"A\"):\n            fat_string += \"\"\n            count += 1\n        else:    \n            if count % 2 == 1 and i.upper() == i:\n                fat_string += i.lower()\n            elif count % 2 ==1 and i.lower() == i:\n                fat_string += i.upper()\n            else:\n                fat_string += i\n            \n      \n    \n    return fat_string", "import re;fat_fingers=lambda s:re.sub('[aA](.*?)(a|A|$)',lambda m:m[1].swapcase(),s)", "def fat_fingers(string):\n    if string == \"\":\n        return string\n        \n    if string is None:\n        return None\n        \n    new_string = \"\"\n    caps_lock = False\n    \n    for l in string:\n        if l.isalpha():\n            if l.lower() == 'a':\n                caps_lock = not caps_lock\n                \n            elif caps_lock and l.lower() == l:\n                new_string += l.upper()\n                \n            elif caps_lock and l.upper() == l:\n                new_string += l.lower()\n               \n            else:\n                new_string += l\n        else:\n            new_string += l\n              \n    \n    return new_string"]