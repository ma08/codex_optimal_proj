["def evil(n):\n    return \"It's %s!\" % [\"Evil\",\"Odious\"][bin(n).count(\"1\")%2]", "def evil(n):\n    return \"It's Evil!\" if  bin(n).count('1')%2 == 0 else \"It's Odious!\"", "def evil(n):\n    return 'It\\'s {}!'.format(('Evil', 'Odious')[bin(n).count('1') % 2])\n", "def evil(n):\n    count = 0\n    while n:\n        n &= n - 1\n        count += 1\n    return \"It's Odious!\" if count & 1 else \"It's Evil!\"", "def evil(n):\n    return f\"It's {('Evil', 'Odious')[bin(n).count('1')&1]}!\"", "def evil(n):\n    return f\"It's {['Odious', 'Evil'][bin(n).count('1') % 2 == 0]}!\"", "def evil(n):\n    return [\"It's Odious!\", \"It's Evil!\"][not str(bin(n)[2:]).count('1') % 2]", "def evil(n):\n    return 'It\\'s Odious!' if bin(n)[2:].count('1')%2 else 'It\\'s Evil!'", "evil = lambda n: \"It's %s!\" % (\"Evil\" if len(list(filter(lambda d: d == '1', list(bin(n))))) % 2 == 0 else \"Odious\")", "def evil(n):\n    evil = bin(n)[2:].count('1') % 2 == 0\n    return \"It's Evil!\" if evil else \"It's Odious!\"", "def evil(n):\n    count_one = str(bin(n)).count('1')\n    if count_one % 2 == 0:\n        return \"It's Evil!\"\n    else:\n        return \"It's Odious!\"", "def evil(n):\n    bin_number = bin(n)\n    count = 0\n    for i in bin_number:\n        if i == '1':\n            count += 1\n    if count%2==0:\n        return \"It's Evil!\"\n    else:\n        return \"It's Odious!\"", "def evil(n):\n    n=int(n)\n    b =[2**i for i in range(100)]\n    d = b[::-1]\n    c=0\n    for i in d:\n        if int(n-i)>=0:\n            c+=1\n            n-=i\n    if c%2==0:\n        return \"It's Evil!\"\n    else:\n        return \"It's Odious!\"\n    pass", "def evil(n):\n    return \"It's Odious!\" if bin(n).count('1') % 2 else \"It's Evil!\"", "def evil(n):\n    n = (n & 0x5555555555555555) + ((n >> 1) & 0x5555555555555555)\n    n = (n & 0x3333333333333333) + ((n >> 2) & 0x3333333333333333)\n    n = (n & 0x0F0F0F0F0F0F0F0F) + ((n >> 4) & 0x0F0F0F0F0F0F0F0F)\n    n = (n & 0x00FF00FF00FF00FF) + ((n >> 8) & 0x00FF00FF00FF00FF)\n    n = (n & 0x0000FFFF0000FFFF) + ((n >> 16) & 0x0000FFFF0000FFFF)\n    n = (n & 0x00000000FFFFFFFF) + ((n >> 32) & 0x00000000FFFFFFFF)\n    \n    return \"It's Odious!\" if n % 2 == 1 else \"It's Evil!\"", "evil = lambda n: [\"It's Evil!\",\"It's Odious!\"][bin(n).count('1')%2]", "def evil(n):\n    n_bin = bin(n)[2:]\n    ones = n_bin.count('1')\n    if (ones % 2 != 0):\n        return 'It\\'s Odious!'\n    else:\n        return 'It\\'s Evil!'", "def evil(n): return \"It's Odious!\" if bin(n).count('1')&1 else \"It's Evil!\"", "def evil(a):\n    return \"It's Odious!\" if str(bin(a)).count('1') % 2 == 1 else \"It's Evil!\"\n", "def evil(n):\n    return \"It's {}!\".format(('Evil', 'Odious')[f'{n:b}'.count('1') % 2])", "def evil(n):\n    return bin(n).count(\"1\") % 2 and \"It's Odious!\" or \"It's Evil!\"", "import re\n\ndef evil(n):\n    binary = \"{0:b}\".format(n)\n        \n    return f\"It's {'Evil' if len(re.findall('1', binary)) % 2 == 0 else 'Odious'}!\"", "def evil(n):\n  x = bin(n)\n  counts = x.count(\"1\")\n  if counts % 2==0:\n    return \"It's Evil!\"\n  else:\n    return \"It's Odious!\"", "def evil(n: int) -> str:\n    \"\"\"\n    Check if the given number is:\n     - evil: it has an even number of 1's in its binary representation\n     - odious: it has an odd number of 1's in its binary representation\n    \"\"\"\n    return f\"It's {'Odious' if str(bin(n)).count('1') % 2 else 'Evil'}!\"", "evil = lambda n: [\"It's Evil!\", \"It's Odious!\"][bin(n).count(\"1\") & 1]", "evil=lambda n: \"It's Odious!\" if bin(n).count(\"1\")%2 else \"It's Evil!\"", "def evil(n):\n    c = 0\n    while(n):\n        c += n & 1\n        n >>= 1\n    \n    if c & 1:\n        return(\"It's Odious!\")\n    else:\n        return(\"It's Evil!\")", "def evil(n):\n    return \"It's Odious!\" if sum(map(int, bin(n)[2:])) % 2 else \"It's Evil!\"", "def evil(n):\n    return  \"It's Odious!\" if sum(map(int, bin(n)[2:])) & 1 else \"It's Evil!\"", "def evil(n):\n    return [\"It's Evil!\",\"It's Odious!\"][format(n, \"b\").count('1') % 2]", "def evil(n):\n    count = 0\n    while n > 0:\n        if (n >> 1) << 1 != n:\n            count += 1\n        n >>= 1\n    if count % 2 == 0:\n        return \"It's Evil!\"\n    else:\n        return \"It's Odious!\"", "def evil(n):\n    e = 0\n    while n:\n        n = n & (n-1)\n        e += 1\n    return \"It's Evil!\" if e & 1 == 0 else \"It's Odious!\"", "def evil(n):\n    return 'It\\'s Evil!' if bin(n)[2:].count('1') % 2 == 0 else 'It\\'s Odious!'", "def evil(n):\n    _odious = \"It's Odious!\"\n    _evil = \"It's Evil!\"\n    \n    is_evil = True\n    for degree in evilometer(n):\n        is_evil = not is_evil\n    \n    return is_evil and _evil or _odious\n        \ndef evilometer(n):\n    while n != 0:\n        if n % 2 == 1:\n            yield\n        n = n // 2\n    \ndef expand_to_string(n):\n    binary = \"\"\n    while n != 0:\n        binary += str(n % 2)\n        n = n // 2\n    return binary", "def evil(n):\n    return \"It's Evil!\" if not bin(n)[2:].count(\"1\")%2 else \"It's Odious!\"", "evil = lambda n: \"It's %s!\" % ['Evil', 'Odious'][bin(n).count('1') % 2]", "def evil(n):\n    bin_rep = str(bin(n))\n    state = \"Evil\" if bin_rep.count(\"1\") % 2 == 0 else \"Odious\"\n    return f\"It's {state}!\"", "def evil(n):\n    x=bin(n).count('1')\n    test= 'Odious' if x%2 else 'Evil'\n    return \"It's {}!\".format(test)\n#test = x.count(1)\n", "def evil(n):\n    evil_odious_count = str(bin(n).replace(\"0b\", \"\")).count(\"1\")\n    return \"It's Evil!\" if evil_odious_count % 2 == 0 else \"It's Odious!\"", "def evil(n):\n    binary = bin(n)[2:]\n    binary_string = str(binary)\n    num_of_1s = binary_string.count('1')\n    if num_of_1s % 2 == 0:\n        return \"It's Evil!\"\n    else:\n         return \"It's Odious!\"", "def evil(n):\n    n=bin(n)\n    count=0\n    for x in n:\n        if x==\"1\":\n            count+=1\n    return \"It's Evil!\" if count%2==0 else \"It's Odious!\"", "def evil(n):\n    n = bin(n)[2:]\n\n    return \"It's Evil!\" if n.count('1') % 2 == 0 else \"It's Odious!\"", "def evil(n):\n    str = bin(n)\n    total = sum(a == '1' for a in str)\n    return \"It's Odious!\" if total%2 != 0 else \"It's Evil!\"", "def evil(n):\n    return \"It's Odious!\" if int(str(bin(n))[2:].count('1'))&1 else \"It's Evil!\"", "evil = lambda n: \"It's \" + ('Odious!' if str(bin(n)).count('1')&1 else 'Evil!')", "def evil(n):\n    num = bin(n)\n    ones = 0 \n    for i in num:\n        if i == '1':\n            ones += 1\n    return \"It's Evil!\" if ones % 2 == 0 else \"It's Odious!\"", "def evil(n):\n    return \"It's \" + (\"Evil!\" if bin(n).count(\"1\")%2==0 else \"Odious!\")", "def evil(n):\n    binary = bin(n).replace(\"0b\", \"\") \n    \n    return \"It's Evil!\" if binary.count('1') % 2 == 0 else \"It's Odious!\"", "def evil(n):\n    return \"It's Evil!\" if sum([1 for i in bin(n) if i=='1']) % 2 == 0 else \"It's Odious!\"", "def evil(n):\n    binary = bin(n)\n    \n    ones = 0\n    \n    for i in binary:\n        if i == '1':\n            ones = ones + 1\n    \n    if ones % 2 == 0:\n        return \"It's Evil!\"\n    \n    return \"It's Odious!\"", "def evil(n):\n    return 'It\\'s Odious!' if sum(map(int,list(bin(n)[2:])))%2 else 'It\\'s Evil!'", "def evil(n):\n    return 'It\\'s Evil!' if sum([int(i) for i in list(bin(n))[2:]]) % 2 == 0 else 'It\\'s Odious!'", "def evil(n):\n    return \"It's {}!\".format('Odious' if sum(map(int, bin(n)[2:])) % 2 else 'Evil')", "def evil(n):\n    a = bin(n)\n    b = str(a)\n    c = b.count(\"1\")\n    if int(c) % 2 == 0: \n        return \"It's Evil!\"\n    if int(c) % 2 != 0:\n        return \"It's Odious!\"\n", "def evil(n):\n    binary = bin(n)[2:]\n\n    count = 0\n    for i in str(binary):\n        if i == '1':\n            count += 1\n    \n    if count % 2 == 0:\n        return \"It's Evil!\"\n    else:\n        return \"It's Odious!\"\n", "def evil(n):\n    n=bin(n)\n    s=str(n)\n    c1=0\n    for i in s:\n        if(i=='1'):\n            c1+=1\n    if(c1%2==0):\n        return(\"It's Evil!\")\n    else:\n        return(\"It's Odious!\")\n", "def evil(n):\n    return [\"It's Evil!\", \"It's Odious!\"][f'{n:b}'.count('1')%2]", "def evil(n):\n    b = format(n, 'b')\n    if b.count('1') % 2 == 0:\n        return \"It's Evil!\"\n    else:\n        return \"It's Odious!\"", "def evil(n):\n    return \"It's Evil!\" if (sum([i == '1' for i in str(bin(n))]) % 2 == 0) else \"It's Odious!\"", "def evil(n):\n    n = str(bin(n))\n    b = n.replace('0b', '')\n    b = int(b)\n    d = [int(i) for i in str(b)]\n    if d.count(1) % 2 == 0:\n        return \"It's Evil!\"\n    else:\n        return \"It's Odious!\"\n", "def evil(n):\n    return f\"It's {'Evil' if bin(n)[2:].count('1') %2==0 else 'Odious'}!\"\n", "def evil(n):\n    n = bin(n) [2:]\n    ans = n.count('1')\n    if ans % 2 == 0:\n        return \"It's Evil!\"\n    else:\n        return \"It's Odious!\"\n", "def evil(n):\n    c=bin(n)\n    if str(c).count(\"1\")%2==0:\n        return \"It's Evil!\"\n    else:\n        return \"It's Odious!\"", "def evil(n):\n    n_as_bin_string = \"{0:b}\".format(n)\n    nof_ones = n_as_bin_string.count('1')\n    return \"It's Odious!\" if nof_ones % 2 else \"It's Evil!\"", "def evil(n):\n    count = 0\n    while n:\n        n &= n - 1\n        count += 1\n    if count & 1:\n        return \"It's Odious!\"\n    else:\n        return\"It's Evil!\"", "def evil(n):\n    return \"It's Odious!\" if int(bin(n).count(\"1\")) % 2 == 1 else \"It's Evil!\"", "def evil(n):\n    if not bin(n)[2:].count('1')%2:\n        return \"It's Evil!\"\n    else:\n        return \"It's Odious!\"", "def evil(n):\n    print(bin(n))\n    return \"It's Evil!\" if bin(n).count(\"1\") % 2 == 0 else \"It's Odious!\"", "def dec_to_binary(n, n_bits=8):\n    bin_list=[]\n    x=n\n    while x>0:\n        bit=x%2\n        print(x, bit)\n        bin_list.append(bit)\n        print(bit)\n        x//=2\n    return bin_list\n\n\ndef evil(n):\n    if dec_to_binary(n).count(1)%2==1:\n        return \"It's Odious!\"\n    else:\n        return \"It's Evil!\"", "def binary_places(num):\n    current_num = num\n    values_list = []\n\n    if current_num % 2 == 1:\n        values_list.append(1)\n        current_num -= 1\n    else:\n        values_list.append(0)\n\n    if current_num > 0:\n        cumulative_values = 2\n\n        while cumulative_values <= current_num:\n            values_list.insert(0, \"?\")\n            cumulative_values *= 2\n\n    this_place_value = 2 ** (len(values_list) - 1)\n    current_place = 0\n\n    while current_num > 1:\n\n        if current_num >= this_place_value:\n            values_list[current_place] = 1\n\n            current_num -= this_place_value\n            current_place += 1\n            this_place_value /= 2\n        else:\n            values_list[current_place] = 0\n            current_place += 1\n            this_place_value /= 2\n\n    for index, char in enumerate(values_list):\n        if char == '?':\n           values_list[index] = 0\n\n    return values_list\n\n\ndef evil(n):\n    num_list = binary_places(n)\n\n    if 1 in num_list and num_list.count(1) % 2 == 0:\n        return \"It's Evil!\"\n    elif 1 in num_list and num_list.count(1) % 2 == 1:\n        return \"It's Odious!\"\n", "def int_to_bin(n):\n    \n    bin_lst=[]\n    x = n \n    while x > 0: \n        bit= x % 2\n        bin_lst.append(bit)\n        x//=2\n       \n    return bin_lst[::-1]\n\n         \ndef evil(n):\n    if int_to_bin(n).count(1)%2==1:\n        return \"It's Odious!\"\n    else: \n        return \"It's Evil!\"\n\n", "def dec_to_binary(n):\n    bin_list = []\n    x = n\n    \n    while x > 0:\n        bit = x % 2\n        bin_list.append(bit)\n        x //= 2\n        \n    return bin_list[::-1]\n\ndef evil(n):\n    if dec_to_binary(n).count(1) % 2 == 1:\n        return \"It's Odious!\"\n    else:\n        return \"It's Evil!\"\n    pass", "def dec_to_bin(n):\n    bin_list = []\n    x = n\n\n    while x > 0:\n        bit = x % 2\n        bin_list.append(bit)\n        x //= 2\n        \n    return bin_list\n    \ndef evil(n):\n    binary = dec_to_bin(n)\n    if binary.count(1) % 2 == 0:\n        return \"It's Evil!\"\n    else:\n        return \"It's Odious!\"\n", "def evil(n):\n    bit = bin(n)\n    if bit.count('1') % 2 == 0:\n        return \"It's Evil!\"\n    return \"It's Odious!\"", "def evil(n):\n    count=0\n    for x in str(bin(n)[2:]):\n        if x==\"1\":\n            count+=1\n    return \"It's Odious!\" if count%2 else \"It's Evil!\"\n        \n    \n", "def evil(n):\n    return \"It's Odious!\" if bin(n)[1:].count('1')%2==1 else \"It's Evil!\"", "def evil(n):\n    s = []                        # List reminder\n    length = (n+2) // 2\n    for i in range(length):\n        r = n % 2\n        s.append(r)\n        if n // 2 == 0:\n            break\n        n = n//2\n    \n    s_reverse = s[::-1]           # reverse list\n    binary = \"\"                   # conversion to string\n    for n in s_reverse:\n        binary += str(n)\n    \n    count = 0                    # Ones count\n    for s in binary:\n        if s == \"1\":\n            count += 1\n        \n    if count % 2 == 0:\n        return \"It's Evil!\"\n    else:\n        return \"It's Odious!\"", "def evil(n):\n    return \"It's {}!\".format([\"Evil\", \"Odious\"][bin(n)[2:].count(\"1\")%2])", "def evil(anum):\n    thecount = bin(anum).count('1')\n    if thecount % 2 == 0:\n        return 'It\\'s Evil!'\n    elif thecount % 2 != 0:\n        return 'It\\'s Odious!'", "def evil(n):\n    verdict = \"Odious\" if bin(n).count('1') % 2 else \"Evil\"\n    return f\"It's {verdict}!\"", "def evil(n):\n    return 'It\\'s Odious!' if n<=2 or bin(n)[2:].count('1')%2 else \"It's Evil!\"", "def evil(n):\n    x = str(bin(n))[2:]\n    t = 0\n    for i in x:\n        if i == \"1\":\n            t+=1\n    \n    if t % 2 == 0 and t >= 1:\n        return \"It's Evil!\"\n    else:\n        return \"It's Odious!\"", "def evil(n):\n    binary=bin(n).replace(\"0b\", \"\")\n    count=0\n    for i in str(binary):\n        if i=='1':\n            count=count+1\n    if count%2==0:\n        return \"It's Evil!\"\n    return \"It's Odious!\"", "def evil(n):\n    count = 0\n    for x in bin(n):\n        if x=='1':\n            count+= 1\n            \n    return \"It's Evil!\" if count%2==0 else \"It's Odious!\"\n", "def evil(n):\n    n=str(bin(n)).count('1')\n    return 'It\\'s {}!'.format(['Odious', 'Evil'][n%2==0])", "def evil(n):\n    r = 0\n    while n > 0:\n        r += n%2\n        n //= 2\n    \n    return \"It's Odious!\" if r%2 else \"It's Evil!\"", "def evil(n):\n    count_1 = bin(n).count('1')\n    msg = \"It's Evil!\"\n    if count_1 % 2:\n        msg = \"It's Odious!\"\n    return msg", "def evil(n):\n    bin_str = str(bin(n))\n    sum = bin_str[2:].count('1')\n    msg = \"It's Evil!\"\n    if sum % 2:\n        msg = \"It's Odious!\"\n    return msg", "def evil(n):\n    b=bin(n)\n    l=list(b)\n    return \"It's Evil!\" if l[2:].count(\"1\")%2==0 else \"It's Odious!\"", "def evil(n):\n    n=bin(n)\n    count_one=n.count('1')\n    if count_one%2==0:\n        return (\"It's Evil!\")\n    else:\n        return (\"It's Odious!\")", "def evil(n):\n    if int(list(bin(n)).count('1')) % 2 != 0:\n        print((list(bin(n)), list(bin(n)).count('1')))\n        return \"It's Odious!\"\n    else: \n        print((list(bin(n))))\n        return \"It's Evil!\"\n", "def evil(n):\n\n    one_sum = 0\n    while n:\n        one_sum += n & 1\n        n>>=1\n\n    if one_sum % 2 == 0:\n        return \"It's Evil!\"\n    else:\n        return \"It's Odious!\"\n", "def evil(n):\n\n    a = bin(n)\n    b = list(\"\".join(a[2:]))\n    c = sum([int(i) for i in b])\n\n    if c % 2 == 0:\n        return \"It's Evil!\"\n    else:\n        return \"It's Odious!\"", "def countSetBits(n):\n    count = 0\n\n    while (n):\n        n = n & (n-1)\n        count = count + 1\n\n    return count\n\n\ndef evil(n):\n    return \"It's Odious!\" if (countSetBits(n) % 2 == 1) else \"It's Evil!\"\n", "def evil(n):\n    if f\"{n:b}\".count(\"1\") % 2:\n        ret = \"Odious\"\n    else:\n        ret = \"Evil\"\n    return f\"It's {ret}!\"", "def evil(n):\n    return [\"It\\'s Odious!\", \"It\\'s Evil!\"][str(bin(n)).count('1')%2==0]", "def evil(n):\n    return [\"It's Odious!\",\"It's Evil!\"][str(bin(n)).count('1')%2==0]", "def evil(n):\n    return f\"It's {'Odious' if '{0:b}'.format(n).count('1')%2 else 'Evil'}!\"", "def evil(n):\n    binario = bin(n)[2::]\n    unos = binario.count(\"1\")\n    return \"It's Odious!\" if unos%2!=0 else \"It's Evil!\"", "def evil(n):\n    one_count = bin(n).count(\"1\")\n    if one_count % 2 == 0:\n        return \"It's Evil!\"\n    else:\n        return \"It's Odious!\""]