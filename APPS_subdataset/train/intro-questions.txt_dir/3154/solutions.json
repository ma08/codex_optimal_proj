["from statistics import mean\n\ndef grey(rgb):\n    return [int(round(mean(rgb)))]*3\n\ndef color_2_grey(colors):\n    return [[grey(pixel) for pixel in row] for row in colors]", "def color_2_grey(colors):\n    return [ [ [int(round(sum(rgb) / 3))] * 3 for rgb in row ] for row in colors ]", "def color_2_grey(colors):\n    for line in colors:\n        for pixel in line:\n            grey = int((sum(pixel)/3)+0.5)\n            pixel[0] = grey\n            pixel[1] = grey\n            pixel[2] = grey\n    return colors", "def color_2_grey(a):\n    return [[[round(sum(y) / 3)] * 3 for y in x] for x in a]", "def color_2_grey(colors):\n    return [[[round(sum(p)/3) for i in p] for p in r] for r in colors]", "def color_2_grey(colors):\n    \n    res = []\n    for row in colors:\n        g_row = []\n        for pix in row:\n            g_pix = []\n            for c in pix:\n                g_pix.append(int(round(sum(pix)/3, 0)))\n            g_row.append(g_pix)\n        res.append(g_row)\n    return res", "def color_2_grey(colors):\n    return [[ [round(sum(pixel)/3)]*3 for pixel in line ] for line in colors ]", "def color_2_grey(colors):\n    return [[[round((r + g + b) / 3)] * 3 for r, g, b in row] for row in colors]", "def color_2_grey(colors):\n    for i in range(len(colors)):\n        for j in range(len(colors[i])):\n            t = (colors[i][j][0]+colors[i][j][1]+colors[i][j][2])/3\n            colors[i][j].remove(colors[i][j][0])\n            colors[i][j].remove(colors[i][j][0])\n            colors[i][j].remove(colors[i][j][0]) \n            colors[i][j].append((t+0.5)//1)\n            colors[i][j].append((t+0.5)//1)\n            colors[i][j].append((t+0.5)//1)\n    return colors", "def color_2_grey(colors):\n    return [[[round((R+G+B)/3)]*3 for [R,G,B] in row] for row in colors]"]