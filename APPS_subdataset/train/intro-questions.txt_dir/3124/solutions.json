["def get_exponent(n, p):\n    if p > 1:\n        x = 0\n        while not n % p:\n            x += 1\n            n //= p\n        return x", "def get_exponent(n, p, i = 0):\n    if p <= 1: return None\n    return get_exponent(n / p, p, i + 1) if n / p == n // p else i", "from itertools import count\n\ndef get_exponent(n, p):\n    if p > 1:\n        for res in count():\n            n, r = divmod(n, p)\n            if r:\n                return res", "def get_exponent(n, p):\n  return next(iter(i for i in range(int(abs(n) ** (1/p)), 0, -1) if (n / p**i) % 1 == 0), 0) if p > 1 else None", "def get_exponent(n, p):\n    if p <= 1:\n        return None\n    x, e = 0, 1\n    while n % e == 0:\n        x += 1\n        e *= p\n    return x - 1", "def get_exponent(n, p):\n    i=1\n    if p<=1:\n        return None\n    while n % p**i==0:\n        i+=1\n    return i-1\n", "def get_exponent(n, p):\n    if p <=1 : return \n    return max([i for i in range(1,int(abs(n)**.5)) if n% (p ** i)==0],default=0)", "def get_exponent(n,p):\n     if int(p)<=1:\n        return None\n     else:\n      x=1\n      while n%(p**x)==0:\n          x+=1\n     return x-1", "def get_exponent(n, p):\n    r = 0\n    while n%(p**r)==0 and p > 1: r += 1\n    if r > 0: return r-1", "from math import log\ndef get_exponent(n, p):\n    if p<=1:return None\n    l,i=None,0\n    while p**i<=abs(n):\n        if n%p**i==0:l=i    \n        i+=1\n    return l"]