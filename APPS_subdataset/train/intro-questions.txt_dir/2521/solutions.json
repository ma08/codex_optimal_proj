["class Solution:\n    def reformat(self, s: str) -> str:\n        n = [str(i) for i in range(0, 10)]\n        a, b = [], []\n        for i in s:\n            if i in n:\n                b.append(i)\n            else:\n                a.append(i)\n        if abs(len(a) - len(b)) > 1:\n            return ''\n        r = ''\n        if len(a) == len(b):\n            while a:\n                r += a.pop()\n                r += b.pop()\n        elif len(a) > len(b):\n            while b:\n                r += a.pop()\n                r += b.pop()\n            r += a[0]\n        else:\n            while a:\n                r += b.pop()\n                r += a.pop()\n            r += b[0]\n        return r", "class Solution:\n    def reformat(self, s: str) -> str:\n        chars = []\n        nums = []\n        for i in s:\n            try:\n                nums.append(int(i))\n            except ValueError:\n                chars.append(i)\n        if abs(len(nums)-len(chars)) > 1:\n            return ''\n        \n        out = [0]*len(s)\n        if len(nums) >= len(chars):\n            out[::2], out[1::2] = nums, chars\n        else:\n            out[::2], out[1::2] = chars,nums\n            \n        \n        return ''.join([str(i) for i in out])", "class Solution:\n    def reformat(self, s: str) -> str:\n        cA = []\n        cD = []\n        for i in s:\n            if(i.isalpha()):\n                cA.append(i)\n            else:\n                cD.append(i)\n        res = ''\n        if(len(s) % 2 == 0):\n            if(len(cA) == len(cD)):\n                for i in range(len(cA)):\n                    res += (cA[i] + cD[i])\n        else:\n            if(abs(len(cA)-len(cD)) == 1):\n                if(len(cA) > len(cD)):\n                    res = cA[0]\n                    for i in range(len(cD)):\n                        res += (cD[i] + cA[i+1])\n                else:\n                    res = cD[0]\n                    for i in range(len(cA)):\n                        res += (cA[i] + cD[i+1])   \n        return res"]