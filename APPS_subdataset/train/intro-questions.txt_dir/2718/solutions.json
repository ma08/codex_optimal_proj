["import re\ndef timed_reading(max_length, text):\n    return sum(len(i) <= max_length for i in re.findall('\\w+', text))", "def timed_reading(max_length, text):\n    count = 0\n    for punctuation_mark in '!.,?\\'\\\"_-)(':\n        text = text.replace(punctuation_mark , '')\n    listed_text = text.split(\" \")\n\n    for word in listed_text:\n        if len(word) <= max_length and len(word) > 0 :\n            count+= 1\n    return count\n\nprint(timed_reading(4,\"The Fox asked the stork, 'How is the soup?'\"))", "import re\n\ndef timed_reading(max_length, text):\n    return sum( len(m.group()) <= max_length for m in re.finditer(r'\\w+', text))", "import re\ndef timed_reading(max_length, text):\n    return len(re.findall(r'\\b\\w{1,%s}\\b' % str(max_length), text)) if max_length>=2 else 0", "timed_reading=lambda m,t:len([e for e in __import__('re').findall('\\w+',t)if len(e)<=m])", "import string\n\ndef timed_reading(max_length, text):\n    return len(list([x for x in text.split() if 1 <= len(x.strip(string.punctuation)) <= max_length]))", "def timed_reading(max_l, text):\n    string = text.translate(str.maketrans('`~!@\\'\\\"#\u2116$;%:^&?*()-_+=/\\[]{}', '                            '))\n    return sum(map(lambda x: len(x) <= max_l, (i for i in string.split() if i)))", "def timed_reading(max_length, text):\n    return sum([1 for w in text.split() if 0 < len(''.join(filter(str.isalpha, w))) <= max_length])", "import re\ndef timed_reading(max_length, text):\n    text = re.sub(r'[^\\w\\s]','',text)\n    cnt = 0\n    for words in text.split():\n        if len(words) <= max_length:\n            cnt += 1\n\n    return cnt;", "from re import sub\ndef timed_reading(max_length, text):\n    return sum(len(word)<=max_length for word in sub(\"[^a-zA-Z ]*\",\"\",text).split())"]