["import re, math\n\ndef convert_recipe(recipe):\n    \n    def repl(m):\n        ratio = 15 if m.group(2) == \"tbsp\" else 5\n        return m.group(0) + \" (%sg)\" % math.ceil(eval(m.group(1)) * ratio)\n    \n    return re.sub(\"([0-9/]+) (tb?sp)\", repl, recipe)", "import re\nimport math\ndef convert_recipe(recipe):\n    return re.sub(r'(\\d+\\/\\d+|\\d+) (tbsp|tsp)', lambda x: x.group(1)+' '+x.group(2)+' '+'('+ str(math.ceil(eval(x.group(1)) * {'tbsp':15,'tsp':5}[x.group(2)]))+'g)', recipe)", "import re\nfrom math import ceil\nfrom fractions import Fraction\n\ndef convert(m, units={'tbsp': 15, 'tsp': 5}):\n    amount, unit = m.groups()\n    gram = int(ceil(Fraction(amount) * units[unit]))\n    return f'{m.group()} ({gram}g)'\n\ndef convert_recipe(recipe):\n    return re.sub('(\\S+) (tb?sp)', convert, recipe)", "import re\nfrom math import ceil\n\nP_RECIPE = re.compile(r'([\\d/]+) (tb?sp)')\n\ndef convert_recipe(recipe): return P_RECIPE.sub(update, recipe)\n    \ndef update(m):\n    toGrams = ceil(eval(m.group(1)) * (15 if m.group(2)=='tbsp' else 5))\n    return \"{} {} ({}g)\".format(m.group(1), m.group(2), toGrams)", "from math import ceil\nimport re\n\n\ndef convert_recipe(recipe):\n    spoons = set(re.findall(r\"[^ ]+ tb?sp\", recipe))\n    for spoon in spoons:\n        qty, typ = spoon.split(\" \")\n        wgt = ceil({\"tsp\": 5, \"tbsp\": 15}[typ] * eval(qty))\n        recipe = re.sub(f\"(^| ){spoon}\", f\"\\g<1>{spoon} ({wgt}g)\", recipe)\n    return recipe", "import re,math\ndef convert_recipe(recipe):\n    r=re.sub('((\\\\d+(/\\\\d+)?) tbsp)',tbsp,recipe)    \n    r=re.sub('((\\\\d+(/\\\\d+)?) tsp)',tsp,r)\n    return r\n    \ndef tbsp(m):\n    return m.group(1)+\" (\"+str(math.ceil(eval('15*'+m.group(2))))+\"g)\"\n    \ndef tsp(m):\n    return m.group(1)+\" (\"+str(math.ceil(eval('5*'+m.group(2))))+\"g)\"", "from math import ceil\ndef convert_recipe(recipe):\n    l = []\n    l_recipe = recipe.split()\n    for num, i in enumerate(l_recipe):\n        if i == 'tbsp':\n            tmp = l_recipe[num - 1]\n            weight  = ceil(eval(tmp) * 15)  if '/' in tmp else int(tmp) * 15\n            l.append('tbsp ({}g)'.format(weight))\n        elif i == 'tsp':\n            tmp = l_recipe[num - 1]\n            weight  = ceil(eval(tmp) * 5)  if '/' in tmp else int(tmp) * 5\n            l.append('tsp ({}g)'.format(weight))    \n        else:\n            l.append(i)   \n    return ' '.join(l)        \n            \n", "from math import ceil\n\ndef f(number, spoon): \n    measure = 15 if spoon=='tbsp' else 5\n    grams = ceil(eval(f'{measure} * {number}'))\n    return f'({grams}g)'\n\ndef convert_recipe(recipe):\n    seq = recipe.split()\n    res = []\n    for i, word in enumerate(seq): \n        res.append(word)\n        if word in ('tbsp', 'tsp'): \n            res.append(f(seq[i-1], word))\n    return ' '.join(res)", "import re\nfrom math import *\n\ndef convert_recipe(s):\n    d = {'tsp': 5, 'tbsp': 15}\n    matches = re.findall('\\d*/?\\d+ tbsp|\\d*/?\\d+ tsp', s)\n    for m in matches:\n        v,k = m.split()\n        x = eval(f'ceil({d.get(k)} * {v})')\n        s = s.replace(m, f'{m} ({x}g)', 1)\n    return s", "def convert_recipe(recipe):\n    import math\n    out=[]\n    for x in recipe.split(\" \"):\n        if x in [\"tbsp\", \"tsp\"]:\n            calc = math.ceil(eval(\"{}*{}\".format(out[-1], \"15\" if x == \"tbsp\" else \"5\")))\n            out.append(x)\n            out.append(\"({}g)\".format(calc))\n        else:\n            out.append(x)\n    return \" \".join(out)"]