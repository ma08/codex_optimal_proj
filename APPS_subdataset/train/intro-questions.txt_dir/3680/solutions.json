["import math\n\ndef factorial(n):\n    if n < 0:\n        return None\n    return math.factorial(n)", "def factorial(n):\n    if n <= 1:\n        if n < 0:\n            return None\n        else:\n            return 1\n    return n * factorial(n-1)", "# This function should return n!\nimport math\n\ndef factorial(n):\n    return math.factorial(n) if n >= 0 else None\n", "import math\n\ndef factorial(n):\n    try:\n        return math.factorial(n)\n    except ValueError:\n        return None", "# This function should return n!\ndef factorial(n):\n    if n > 0: return reduce(lambda x,y: x*y, range(1,n+1))\n    if n < 0: return None\n    return 1", "# This function should return n!\ndef factorial(n):\n    if n < 0:\n        return None\n    elif n == 0:\n        return 1\n    else:\n        factorial = 1\n        for val in xrange(1,n+1):\n            factorial *= val\n        return factorial", "def factorial(n):\n    return None if n < 0 else 1 if n < 1 else n * factorial(n - 1)", "from math import factorial as f\nfactorial = lambda x: f(x) if x > -1 else None", "from operator import mul\nfrom functools import reduce\ndef factorial(n):\n    if (n < 0):\n        return None\n    return reduce(mul, range(1,n+1), 1)", "factorial = lambda n: 1 if 0<=n<=1 else n*factorial(n-1) if n>0 else None"]