["from math import ceil\n\ndef mega_mind(hp, dps, shots, regen):\n    if dps*shots >= hp: return ceil(hp / dps)\n    if dps*shots <= regen: return -1\n\n    number_of_regenerations = ceil((hp - dps*shots) / (dps*shots - regen))\n    return ceil((hp + regen*number_of_regenerations) / dps)", "from math import ceil\n\ndef mega_mind(hp, dps, shots, regen):\n    if hp > dps * shots <= regen:\n        return -1\n    n = 0\n    while True:\n        s = min(int(ceil(hp / dps)), shots)\n        n += s\n        hp -= dps * s\n        if hp <= 0:\n            break\n        hp += regen\n    return n", "def mega_mind(hp, dps, shots, regen):\n    chp = hp\n    ans = 0\n    while True:\n        r = (chp + dps - 1) // dps\n        if r <= shots:\n            return ans + r\n        chp -= (dps * shots - regen)\n        ans += shots\n        if chp >= hp:\n            return -1", "from math import ceil\n\ndef mega_mind(hp, dps, shots, regen):\n    damage = dps * shots\n    if hp > damage <= regen: return -1\n    if hp <= damage: return ceil(hp / dps)\n    full = (hp - regen) // (damage - regen)\n    if damage*full == hp + (full-1)*regen: return full*shots\n    left = hp + full*(regen - damage)\n    return full*shots + ceil(left / dps)", "from math import ceil\ndef mega_mind(hp, dps, shots, regen):\n    print(hp,dps,shots,regen)\n    if hp>dps*shots and regen>=dps*shots: return -1\n    if hp<=dps*shots:\n        return ceil(hp/dps)\n    a=ceil((hp-dps*shots)/(-regen+dps*shots))\n    return a*shots + ceil((hp+a*regen-a*dps*shots)/dps)", "def mega_mind(hp, dps, shots, regen):\n    if (hp > dps*shots) and dps * shots <= regen:\n        return -1\n    res = 0; num_shots = 0\n    if hp > dps*shots:\n        num_rounds = (hp-dps*shots)//(dps*shots-regen)\n        res = num_rounds * shots\n        hp -= num_rounds * (dps*shots-regen)\n    while hp > 0:\n        hp -= dps\n        res += 1\n        num_shots += 1\n        if hp > 0 and num_shots == shots:\n            hp += regen\n            num_shots = 0\n    return res", "import math\n\ndef mega_mind(hp, dps, shots, regen):\n    if regen - dps * shots >= 0 and hp - dps * shots > 0:\n        return -1\n    if hp - dps * shots <= 0:\n        return math.ceil(hp / dps)\n    n = 0\n    while hp - dps * shots > 0:\n        hp -= (dps * shots - regen)\n        n += 1\n    return math.ceil(hp / dps) + n * shots", "def mega_mind(hp, dps, shots, regen):\n    if hp> dps*shots and dps*shots<=regen:\n        return -1\n    total_shot = 0            #Initalize shot counter\n    barell = shots            #Initalize first gun\n    while hp>0:\n        if hp>dps*shots:      #Machine gun mode\n            if barell==0:     #Reload\n                barell+=shots\n                hp+=regen\n            else:             #Shoot\n                barell-=shots\n                hp-=dps*shots\n                total_shot+=shots\n        else:                 #Gun mode\n            if barell==0:     #Reload\n                barell+=shots\n                hp+=regen\n            else:             #Shoot\n                barell-=1\n                hp-=dps\n                total_shot+=1\n    return total_shot\n", "def mega_mind(hp, dps, shots, regen):\n    print((hp, dps, shots, regen))\n    if dps * shots < hp and dps * shots <= regen: \n        return -1\n    dps_round = dps * shots\n    if hp - dps_round <= 0:\n        return hp // dps + (0 if hp % dps == 0 else 1)\n    hp -= dps_round\n    round = hp // (dps_round - regen)\n    hp -= round * (dps_round - regen)\n    if hp == 0:\n        return (round + 1) * shots\n    hp += regen\n    print((round, hp))\n    return shots * (round + 1) + hp // dps + (0 if hp % dps == 0 else 1)\n    \n    \n", "def mega_mind(hp, dps, shots, regen):\n    if regen < dps*shots or hp <= shots*dps:\n        cnt = 0\n        while hp > shots*dps:\n            hp = hp - shots*dps + regen\n            cnt += shots\n            \n        for i in range(hp):\n            hp = hp - dps\n            cnt+= 1\n            if hp <= 0:\n                return cnt\n    return -1"]