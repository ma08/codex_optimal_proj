["def spoonerize(words):\n    a, b = words.split()\n    return '{}{} {}{}'.format(b[0], a[1:], a[0], b[1:])\n", "def spoonerize(words):\n    a, b = words.split()\n    return f\"{b[0]}{a[1:]} {a[0]}{b[1:]}\"", "def spoonerize(words):\n    a, b = words.split()\n    return ' '.join((b[0]+a[1:], a[0]+b[1:])) ", "def spoonerize(words):\n    a, b = words.split()\n    return '{} {}'.format(b[0] + a[1:], a[0] + b[1:])", "def spoonerize(words):\n    lst = words.split(\" \")\n    a = list(lst[0]) \n    b = list(lst[1])\n    a[0],b[0] = b[0],a[0]\n    return \"\".join(a) + \" \" + \"\".join(b)\n", "def spoonerize(words):\n    a, b = words.split(' ')\n    return b[0] + a[1:] + ' ' + a[0] + b[1:]", "def spoonerize(words):\n    h = [x[0] for x in words.split()]\n    t = [y[1:] for y in words.split()]\n    return ' '.join(x+y for x,y in zip(h[::-1],t))", "spoonerize=lambda w: (lambda w: \" \".join([w[1][0]+w[0][1:],w[0][0]+w[1][1:]]))(w.split(\" \"))", "def spoonerize(words):\n    x = words.split()\n    first, second = list(x[0]), list(x[1])\n    first[0], second[0] = second[0], first[0]\n    str_list = ''.join(first) + ' ' + ''.join(second)\n    return str_list  ", "def spoonerize(words):\n    l, r = words.split()\n    return r[0] + l[1:] + ' ' + l[0] + r[1:]"]