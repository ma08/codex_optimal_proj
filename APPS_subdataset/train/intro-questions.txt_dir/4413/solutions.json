["def split_odd_and_even(n):\n    \n    import re\n  \n    return [int(i) for i in re.findall(r\"[2468]+|[13579]+\", str(n))]", "from itertools import groupby\n\ndef split_odd_and_even(n):\n    return [int(\"\".join(g))\n        for i, g in groupby(str(n), key=lambda x: int(x) % 2)]", "import re\ndef split_odd_and_even(n):\n    return [int(x) for x in re.findall(r\"([2468]+|[13579]+)\",str(n))]", "def split_odd_and_even(n):\n    new_n = ''\n    for c in str(n):\n        if not new_n or not (int(new_n[-1]) - int(c)) % 2:\n            new_n += c\n        else :\n            new_n += '.'+c\n    return [int(i) for i in new_n.split('.')]", "def is_even(n):\n    return int(n)%2==0\n\ndef split_odd_and_even(n):\n    index, s = 0, str(n)\n    l = [[s[0]]]\n    for x in s[1:]:\n        if is_even(x) and is_even(l[index][-1]):\n            l[index].append(x)\n        elif not is_even(x) and not is_even(l[index][-1]):\n            l[index].append(x)\n        else:\n            l.append([x])\n            index += 1\n    return [int(''.join(x)) for x in l]", "from itertools import groupby\n\ndef split_odd_and_even(n):\n  return [int(''.join(list(gp))) for _, gp in groupby(str(n), key = lambda x: int(x) % 2)]", "from itertools import groupby\n\ndef split_odd_and_even(n):\n    return [int(''.join(grp)) for _, grp in groupby(str(n), key=lambda x: int(x) % 2)]", "import re\n\ndef split_odd_and_even(n):\n    return [int(group[0] or group[1]) for group in re.findall(r'([13579]+)|([2468]+)', str(n))]", "from itertools import groupby\n\n\ndef split_odd_and_even(n):\n    return [int(''.join(str(b) for b in g)) for k, g in\n            groupby((int(a) for a in str(n)), key=lambda b: b % 2)]"]