["def swap_head_tail(a):\n    r, l = (len(a)+1)//2, len(a)//2\n    return a[r:] + a[l:r] +  a[:l]", "def swap_head_tail(lst):\n    n, d = divmod(len(lst), 2)\n    return lst[n+d:] + [lst[n]] * d + lst[:n]", "def swap_head_tail(arr):\n    if len(arr) == 1: return arr\n    n = len(arr)//2\n    res,res2 = arr[:n],arr[-n:]\n    if len(arr) % 2 == 1: res.insert(0,arr[n])\n    return res2 + res", "def swap_head_tail(arr):\n    m = len(arr) // 2\n    return arr[-m:] + arr[m:-m] + arr[:m]", "def swap_head_tail(arr):\n    middle, odd = divmod(len(arr), 2)\n    return arr[middle + odd:] + arr[middle:middle+odd] + arr[:middle]", "swap_head_tail = lambda a: a[len(a)+1>>1:] + a[len(a)>>1:len(a)+1>>1] + a[:len(a)>>1]", "swap_head_tail=lambda a:(lambda m:a[-m:]+a[m:-m]+a[:m])(len(a)//2)", "def swap_head_tail(arr):\n    print(arr)\n    list_arr = [*arr[int(len(arr)/2):], *arr[:(int(len(arr)/2))]]\n    list1 = arr[int(len(arr)/2 + 1):]\n    list2 = arr[:(int(len(arr)/2))]\n    middle = [arr[int(len(arr) / 2)]]\n    return list_arr if len(arr) % 2 == 0 else [*list1, *middle, *list2]"]