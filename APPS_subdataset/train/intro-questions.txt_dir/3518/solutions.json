["dict = {'-':\"file\",'d':\"directory\",'l':\"symlink\",'c':\"character_file\",'b':\"block_file\",'p':\"pipe\",'s':\"socket\",'D':\"door\"}\ndef linux_type(file_attribute):\n    return dict[file_attribute[0]]", "def linux_type(s):\n    return {x: y for x, y in zip(\"-dlcbpsD\", \"file directory symlink character_file block_file pipe socket door\".split(\" \"))}[s[0]]", "D = {'p':\"pipe\", '-':\"file\", 'd':\"directory\", 'l':\"symlink\",\n     'c':\"character_file\", 'b':\"block_file\", 's':\"socket\", 'D':\"door\"}\n\ndef linux_type(file_attribute):\n    return D[file_attribute[0]]", "def linux_type(file_attribute):\n    flags = {\n        '-': 'file',\n        'd': 'directory',\n        'l': 'symlink',\n        'c': 'character_file',\n        'b': 'block_file',\n        'p': 'pipe',\n        's': 'socket',\n        'D': 'door'\n    } \n    return flags[file_attribute[0]]", "def linux_type(file_attribute):\n    switch = {\n        '-': 'file',\n        'd': 'directory',\n        'l': 'symlink',\n        'c': 'character_file',\n        'b': 'block_file',\n        'p': 'pipe',\n        's': 'socket',\n        'D': 'door',\n    }\n    return switch[file_attribute[0]]", "d = dict(__import__(\"re\").findall(r\"'(.)'.*\\s([a-z_]+)\\.\",\n    \"\"\"\n        '-' A regular file ==> file.\n        'd' A directory ==> directory.\n        'l' A symbolic link ==> symlink.\n        'c' A character special file. It refers to a device that handles data as a stream of bytes (e.g: a terminal/modem) ==> character_file.\n        'b' A block special file. It refers to a device that handles data in blocks (e.g: such as a hard drive or CD-ROM drive) ==> block_file.\n        'p' a named pipe ==> pipe.\n        's' a socket ==> socket.\n        'D' a door ==> door.\n    \"\"\"))\n\nlinux_type = lambda s: d[s[0]]", "def linux_type(f): #\n    return {'-':'file','d':'directory','l':'symlink','c':'character_file','b':'block_file','p':'pipe','s':'socket','D':'door'}[f[0]]\n", "def linux_type(f):\n    return {'-':'file','d':'directory','l':'symlink','c':'character_file','b':'block_file','p':'pipe','s':'socket','D':'door'}.get(f[0])\n", "def linux_type(f):\n    return {\"-\":\"file\",\"d\":\"directory\",\"l\":\"symlink\",\"c\":\"character_file\",\"b\":\"block_file\",\"p\":\"pipe\",\"s\":\"socket\",\"D\":\"door\"}[f[0]]", "import re\ndef linux_type(file_attribute):\n    types={\"-\": \"file\",\n          \"d\": \"directory\",\n          \"l\": \"symlink\",\n          \"c\": 'character_file',\n           \"b\": 'block_file',\n           \"p\": \"pipe\",\n           \"s\": \"socket\",\n           \"D\": \"door\"           \n          }\n    return types[file_attribute[0]]", "linux_type=lambda f:{'-':'file','d':'directory','l':'symlink', 'c':'character_file', 'b': 'block_file', 'p':'pipe', 's':'socket', 'D':'door'}[f[0]]", "def linux_type(file_attribute):\n    return {\n        'd': 'directory',\n        'l': 'symlink',\n        'c': 'character_file',\n        'b': 'block_file',\n        'p': 'pipe',\n        's': 'socket',\n        'D': 'door'\n    }.get(file_attribute[0],'file')", "def linux_type(file_attribute):\n    types = {'-': 'file',\n             'd': 'directory',\n             'l': 'symlink',\n             'c': 'character_file',\n             'b': 'block_file',\n             'p': 'pipe',\n             's': 'socket',\n             'D': 'door'}\n    if not file_attribute:\n        return None\n    ty = file_attribute[0]\n    if ty in types:\n        return types[ty]\n    else:\n        return None", "def linux_type(fa):\n    d = {'-':'file',\n          'd':'directory',\n           'l':'symlink',\n            'c': 'character_file',\n            'b':'block_file',\n            'p':'pipe',\n            's':'socket',\n            'D':'door'\n         }\n    return d.get(fa[0])", "ATTRIBUTES = {\n    \"-\": \"file\",\n    \"d\": \"directory\",\n    \"l\": \"symlink\",\n    \"c\": \"character_file\",\n    \"b\": \"block_file\",\n    \"p\": \"pipe\",\n    \"s\": \"socket\",\n    \"D\": \"door\",\n}\n\ndef linux_type(file_attribute):\n    return ATTRIBUTES[file_attribute[0]]", "files_types = { '-' : 'file',\n                'd' : 'directory',\n                'l' : 'symlink',\n                'c' : 'character_file',\n                'b' : 'block_file',\n                'p' : 'pipe',\n                's' : 'socket',\n                'D' : 'door' }\n                \ndef linux_type(file_attribute):\n    return files_types[file_attribute[0]]\n", "D = {'-': 'file', 'd': 'directory', 'l': 'symlink',\n     'c': 'character_file', 'b': 'block_file', 'p': 'pipe',\n     's': 'socket', 'D': 'door'}\n\ndef linux_type(s):\n    return D[s[0]]", "def linux_type(file_attribute):\n    f_att = file_attribute[0]\n    if f_att == '-':\n        return \"file\"\n    elif f_att == 'd':\n        return \"directory\"\n    elif f_att == 'l':\n        return \"symlink\"\n    elif f_att == 'c':\n        return \"character_file\"\n    elif f_att == 'b':\n        return \"block_file\"\n    elif f_att == 'p':\n        return \"pipe\"\n    elif f_att == 's':\n        return \"socket\"\n    elif f_att == 'D':\n        return \"door\"\n    return None", "def linux_type(file):\n    dict = {'-': 'file',\n    'd': 'directory',\n    'l': 'symlink',\n    'c': 'character_file',\n    'b': 'block_file',\n    'p': 'pipe',\n    's': 'socket',\n    'D': 'door'}\n    return dict.get(file[0])", "def linux_type(file_attribute):\n    Unix_system_type = [['-', 'file'],\n                        ['d', 'directory'],\n                        ['l', 'symlink'],\n                        ['c', 'character_file'],\n                        ['b', 'block_file'],\n                        ['p', 'pipe'],\n                        ['s', 'socket'],\n                        ['D', 'door']]\n    i = 0\n    while i < len(Unix_system_type):\n        if file_attribute[0] == Unix_system_type[i][0]:\n            return Unix_system_type[i][1]\n        i += 1"]