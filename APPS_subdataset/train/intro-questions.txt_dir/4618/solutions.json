["def positive_sum(arr):\n    return sum(x for x in arr if x > 0)\n", "def positive_sum(arr):\n    sum = 0\n    for e in arr:\n        if e > 0:\n            sum = sum + e\n    return sum", "def positive_sum(arr):\n    return sum(filter(lambda x: x > 0,arr))", "def positive_sum(arr):\n    ''' I really hate these one line codes, but here I am...\n        trying to be cool here... and writing some'''\n    return sum([x if x > 0 else 0 for x in arr])\n", "positive_sum = lambda l: sum(x for x in l if x>=0)\n", "def positive_sum(arr):\n    return sum(i for i in arr if i > 0)\n", "def positive_sum(list):\n    answer = 0\n    for numbers in list: \n        if numbers > 0:\n            answer += numbers\n    return answer", "def positive_sum(arr):\n    summ = 0\n    for temp in arr :\n        if temp > 0 :\n            summ += temp\n    return summ\n", "def positive_sum(arr):\n    return sum( max(i, 0) for i in arr )", "positive_sum = lambda a: sum(e for e in a if e > 0)", "def positive_sum(arr):\n    return sum([i for i in arr if i==abs(i)])", "def positive_sum(arr):\n    L = []\n    for i in arr:\n        if (i > 0):\n            L.append(i)\n    return (sum(L))\n      \n      \n      \n", "def positive_sum(arr):\n    # Your code here\n    return sum([x for x in arr if x > 0])\n", "positive_sum=lambda a:sum(x>0and x for x in a)", "def positive_sum(arr):\n    nums = [num for num in arr if num > 0]\n    return sum(nums)", "positive_sum=lambda arr:sum(e for e in arr if e>0)", "def positive_sum(arr):\n    add = 0\n    addtemp = 0\n    index = 0\n    for i in arr:\n        if i > 0:\n            add = arr[index]\n            index += 1\n            add = add + addtemp\n            addtemp = add\n            print(add)\n        else:\n            print(\"skipping the {}\".format(i))\n            index += 1\n    if add > 0:\n        return(add)\n    else:\n        return(0)", "def positive_sum(arr):\n    summ = 0\n    for num in arr:\n        if num >= 0:\n            summ += num\n    return summ\n", "def positive_sum(arr):\n    add =[]\n    for item in arr:\n        if item > 0:\n            add.append(item)\n    return sum(add)\n    return 0\n", "def positive_sum(arr):\n    res = 0\n    for i in arr:\n        if not arr:\n            return 0\n        elif i < 0:\n            continue\n        else:\n            res += i\n    return res\n", "''' Suma \u00fanicamente los valores positivos, los negativos se los salta.\n    En caso de que la lista est\u00e9 vac\u00eda, devuelve 0\n'''\ndef positive_sum(arr):\n    sum = 0\n    if not arr:\n        return sum\n    for n in arr:\n        if(n>=0):\n            sum = sum + n\n    return sum\n", "\ndef positive_sum(n):\n    b = 0\n    if not n:\n        return 0\n    else:\n        for i in range(len(n)):\n            if n[i] < 0:\n                pass\n            else:\n                b += n[i]\n        return b\n", "from functools import reduce\ndef positive_sum(arr):\n    return reduce((lambda acc,n: acc+n if n>0 else acc), arr, 0)\n", "def positive_sum(arr):\n    sum = 0\n    for n in range(0,len(arr)):\n        if arr[n] > 0: sum += arr[n]\n    return sum\n", "def positive_sum(arr):\n    positive_list = []\n    for num in arr:\n        if num >= 0:\n            positive_list.append(num)\n    result = sum(positive_list)\n    return result\n", "def positive_sum(arr):\n    sum = 0\n    if arr:\n        for numb in arr:\n            if (numb > 0):\n                sum = sum + numb\n    return sum\n", "def positive_sum(arr):\n    return sum([a for a in arr if a > 0])\n", "def positive_sum(arr):\n    return sum([abs(x) for x in arr] + arr) // 2", "positive_sum = lambda a: sum(filter(lambda x: x > 0, a))", "positive_sum=lambda a:sum(map(lambda n:n>0 and n,a))", "positive_sum = lambda lst: sum(list(filter(lambda _: _ > 0, lst)))", "from functools import reduce\ndef positive_sum(arr):\n    arr = list(filter((lambda x: x > 0), arr))\n    try:\n        return reduce((lambda x,y: x+y), arr)\n    except:\n        return 0\n", "def positive_sum(arr):\n    return sum([_ for _ in arr if _ > 0])", "from functools import reduce\ndef positive_sum(arr):\n    return reduce(lambda x,y: x+max(0,y), arr, 0)", "def positive_sum(arr):\n    sum = 0\n    for el in arr:\n        if el > 0:\n            sum += int(el)\n    return sum\n", "def positive_sum(arr):#function declaration\n    sum=0             #instiallization of zero\n    for i in arr:     # for loop to check the integers in the array\n        if i>0:       # condiation\n            sum=sum+i #This condiation will add all the numbers>0\n    return sum        #will give sum of all the positive integres\n", "def positive_sum(arr):\n    total = 0\n    for a in arr:\n        if \"-\" not in str(a):\n            total += a\n  \n    return total\n", "def positive_sum(arr):\n  res = []\n  for x in arr:\n      if x > 0:\n        res.append(x)\n  return sum(res)\n", "def positive_sum(arr):\n    ans = []\n    for n in list(arr):\n        if n >= int(0):\n           ans.append(n)\n    return sum(ans)\n", "def positive_sum(arr):\n    # Your code here\n    pos_arr = list([x for x in arr if x>0])\n    if pos_arr:\n        return sum(pos_arr)\n    return 0\n"]