["def pagination_text(page_number, page_size, total_products):\n    first = page_size * (page_number - 1) + 1\n    last = min(total_products, first + page_size - 1)\n    return \"Showing %d to %d of %d Products.\" % (first, last, total_products)", "def pagination_text(page_number, page_size, total_products):\n    lower = (page_number - 1) * page_size + 1\n    upper = min(total_products, page_number * page_size)\n    return \"Showing {} to {} of {} Products.\".format(lower, upper, total_products)\n    \n", "def pagination_text(p, sz, total):\n  return 'Showing ' + str((p - 1) * sz + 1) + ' to ' + str(total if p * sz > total else p * sz) + ' of ' + str(total) + ' Products.'", "def pagination_text(page_number, page_size, total_products):\n  return \"Showing %d to %d of %d Products.\" % (\n      page_size * (page_number - 1) + 1,\n      min(total_products, page_size * page_number),\n      total_products)\n", "def pagination_text(page_number, page_size, total_products):\n    start = (page_number - 1) * page_size + 1\n    stop = min(start + page_size - 1, total_products)\n    return 'Showing {} to {} of {} Products.'.format(start, stop, total_products)", "def pagination_text(page_number, page_size, total_products):\n    start = (page_number - 1) * page_size + 1\n    end = page_number * page_size\n    if end > total_products:\n        end = total_products\n    return 'Showing {} to {} of {} Products.'.format(start, end, total_products)", "def pagination_text(page_number, page_size, total_products):\n    return \"Showing {} to {} of {} Products.\".format((page_number - 1) * page_size + 1,\\\n    min(page_number * page_size, total_products), total_products)", "def pagination_text(page_number, page_size, total_products):\n    fr = page_number * page_size - page_size + 1\n    to = min(fr + page_size - 1, total_products)\n    return \"Showing %d to %d of %d Products.\" % (fr, to, total_products)", "def pagination_text(page_number, page_size, total_products):\n    s = min((page_number - 1) * page_size + 1, total_products)\n    e = min(s + page_size - 1, total_products)\n    return 'Showing {} to {} of {} Products.'.format(s, e, total_products)", "def pagination_text(page_number, page_size, total_products):\n    start = (page_number-1)*page_size+1\n    end = total_products if page_number*page_size > total_products else page_number*page_size\n    li = ['Showing',str(start),'to',str(end),'of',str(total_products),'Products.']\n    return ' '.join(li)"]