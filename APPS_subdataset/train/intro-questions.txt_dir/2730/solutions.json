["def tickets(people):\n  till = {100.0:0, 50.0:0, 25.0:0}\n\n  for paid in people:\n    till[paid] += 1\n    change = paid-25.0\n    \n    for bill in (50,25):\n      while (bill <= change and till[bill] > 0):\n        till[bill] -= 1\n        change -= bill\n\n    if change != 0:\n      return 'NO'\n        \n  return 'YES'", "def tickets(a):\n    n25 = n50 = n100 = 0\n    for e in a:\n        if   e==25            : n25+=1\n        elif e==50            : n25-=1; n50+=1\n        elif e==100 and n50>0 : n25-=1; n50-=1\n        elif e==100 and n50==0: n25-=3\n        if n25<0 or n50<0:\n            return 'NO'\n    return 'YES'\n", "def tickets(people):\n    change = 'YES'\n    twentyfive, fifty, onehundred = 0, 0, 0\n    \n    for cash in people:\n        if change == 'NO':\n            break\n\n        if cash == 25:\n            twentyfive += 1\n        elif cash == 50 and twentyfive > 0:\n            twentyfive -= 1\n            fifty += 1\n        elif cash == 100:\n            if fifty > 0 and twentyfive > 0:\n                fifty -= 1\n                twentyfive -= 1\n                onehundred += 1\n            elif twentyfive > 2:\n                twentyfive -= 3\n                onehundred += 1\n            else:\n                change = 'NO'\n        else:\n            change = 'NO'\n            \n    return change", "def tickets(people):\n    cashRegister = {25: 0, 50: 0, 100: 0};\n    ticketPrice = 25;\n    for paid in people:\n        cashRegister[paid] += 1;\n        while paid > ticketPrice:\n            changeGiven = False;\n            \"\"\" Check if we have a bill in the register that we use as change \"\"\"\n            for bill in sorted(cashRegister.keys(), reverse=True):\n                \"\"\" Hand out hhange if possible and still needed \"\"\"\n                if (paid - ticketPrice >= bill) and (cashRegister[bill] > 0):\n                    paid = paid - bill;\n                    cashRegister[bill] -= 1;\n                    changeGiven = True;\n            \"\"\" Return \"NO\" if we were unable to give the change required \"\"\"\n            if (paid > ticketPrice) and (changeGiven == False):\n                    return \"NO\";\n    return \"YES\";", "def tickets(people):\n    change = {\n        '25': 0,\n        '50': 0\n    }\n    for person in people:\n        if person == 25:\n            change['25'] += 1\n        elif person == 50:\n            change['50'] += 1\n            change['25'] -= 1\n        else:\n            if change['50'] > 0:\n                change['50'] -= 1\n                change['25'] -= 1\n            else:\n                change['25'] -= 3\n        if change['25'] < 0:\n            return 'NO'\n    return 'YES'", "def tickets(people, cost=25, bills=[100, 50, 25]):\n    count = dict.fromkeys(bills, 0)\n    for change in people:\n        count[change] += 1\n        change -= cost\n        for bill in bills:\n            if change >= bill:\n                c = min(change // bill, count[bill])\n                count[bill] -= c\n                change -= c * bill\n        if change: return \"NO\"\n    return \"YES\"\n", "def tickets(people):\n    bill25 = 0\n    bill50 = 0\n    bill100= 0\n    for bill in people:\n        if bill == 25:\n            bill25+=1\n        elif bill == 50:\n            bill50+=1\n            if bill25 == 0:\n                return \"NO\"\n            bill25-=1\n        elif bill == 100:\n            bill100+=1\n            if bill50 > 0 and bill25 > 0:\n                bill50-=1\n                bill25-=1\n            elif bill25 >= 3:\n                bill25 = bill25-3\n            else:\n                return \"NO\"\n    return \"YES\"", "from collections import Counter\n\ndef tickets(people):\n\n    bills = Counter({ 25 : 0, 50 : 0, 100 : 0 })\n    required = {\n        50  : [ Counter({ 25 : 1 }) ],\n        100 : [ Counter({ 25 : 1, 50 : 1 }), Counter({ 25 : 3 }) ],\n    }\n    \n    def check_required(person):\n        for require in required[person]:\n            if bills & require == require:\n                bills.subtract(require)\n                return True\n        return False\n\n    for person in people:\n        bills[person] += 1\n        if person > 25 and not check_required(person):\n            return \"NO\"\n    \n    return \"YES\"\n", "def tickets(people):\n    change = []\n    try:\n        for cash in people:\n            if cash == 25:\n                change.append(25)\n            if cash == 50:\n                change.remove(25)\n                change.append(50)\n            if cash == 100 and (50 in change):\n                change.remove(50)\n                change.remove(25)\n            elif cash == 100:\n                change.remove(25)\n                change.remove(25)\n                change.remove(25)\n    except: \n        return \"NO\"\n    else:\n        return \"YES\"\n            \n                \n            \n"]