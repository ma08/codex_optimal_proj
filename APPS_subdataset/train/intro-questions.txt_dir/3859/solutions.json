["def odd_one(arr):\n    for i in range(len(arr)):\n        if arr[i] % 2 != 0:\n            return i\n    return -1\n", "def odd_one(arr):\n    return next((i for i,v in enumerate(arr) if v&1), -1)", "def odd_one(arr):\n    for i in arr:\n        if i%2: return arr.index(i)\n    return -1", "def odd_one(arr):\n  ad = 0\n  for i in range(0, len(arr)):\n    if arr[i] % 2 == 1:\n      ad += 1\n      return i\n    else:\n        pass\n  if ad == 0:\n    return -1", "def odd_one(lst):\n    return next((i for i, n in enumerate(lst) if n % 2 == 1), -1)", "def odd_one(arr):\n    arr = list(map(lambda x: x % 2 == 0, arr))\n    if arr.count(True) == 1:\n        return arr.index(True)\n    elif arr.count(False) == 1:\n        return arr.index(False)\n    else:\n        return -1", "def odd_one(arr):\n    for num in arr:\n        if num % 2 != 0:\n            return arr.index(num)\n            break\n    else: \n        return -1\n", "def odd_one(arr):\n    for index,value in enumerate(arr):\n        if value%2!=0:break\n    return -1 if value%2==0 else index", "def odd_one(arr):\n    return next((i for i, n in enumerate(arr) if n % 2), -1)", "def odd_one(arr):\n    try: return next(i for i,x in enumerate(arr) if x%2)\n    except: return -1"]