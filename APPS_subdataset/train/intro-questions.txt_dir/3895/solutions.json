["def shifted_diff(first, second):\n    return (second + second).find(first) if len(first) == len(second) else - 1;", "def shifted_diff(first, second):\n    for i in range(len(first)):\n        if first == second[i:] + second[:i]:\n            return i\n    return -1", "def shifted_diff(first, second):\n  return next(iter(i for i in range(len(first)) if first[-i:] + first[:-i] == second), -1)", "def shifted_diff(first, second):\n    genexp = [i for i in range(len(second)) if first == second[i:]+second[:i]]\n    if genexp:\n        return max(genexp)\n    return -1", "def shifted_diff(first, second):\n    return -1 if len(first) != len(second) else f\"{second}{second}\".find(first)", "def shifted_diff(f, s):\n    try:\n        ix = s.index(f[0])\n        return ix if f==s[ix:]+s[:ix] else -1\n    except:\n        return -1", "def xx(s):\n    return s[1:]+s[0]\ndef shifted_diff(a, b):\n    if a == b:\n        return 0\n    elif sorted(a) == sorted(b):\n        n = 0\n        for i in range(len(b)):\n            n += 1\n            b = xx(b)\n            if b == a:\n                return n\n    return -1", "def shifted_diff(first, second):\n    if len(first) != len(second):\n        return -1\n    return (second * 2).find(first)", "from collections import deque\n\ndef shifted_diff(f, s):\n    d1, d2 = deque(f), deque(s)\n    l = [d2.rotate(-1) or d1 == d2 for i in range(len(f))]\n    return (l.index(True) + 1) % len(l) if True in l else -1\n"]