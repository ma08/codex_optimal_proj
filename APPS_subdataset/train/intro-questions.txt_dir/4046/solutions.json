["from math import ceil\n\ndef calculate_scrap(arr,n):\n    x = 50\n    for i in arr:\n        x /= (1-i/100)\n    return ceil(n*x)", "from functools import reduce\nfrom operator import mul\nfrom math import ceil\n\ndef calculate_scrap(scraps, number_of_robots):\n    return ceil(50 * number_of_robots * 100**len(scraps) / reduce(mul, (100-x for x in scraps)))", "from fractions import Fraction\nfrom functools import reduce\nfrom math import ceil\nfrom operator import mul\n\ndef calculate_scrap(scraps, n):\n    return ceil(n * 50 * reduce(mul, (Fraction(100, 100-scrap) for scrap in scraps)))", "def calculate_scrap(scraps, number_of_robots):\n  \n  iron=50*number_of_robots\n  \n  for x in range(len(scraps)):\n    iron=iron/(1-scraps[x]/100)\n  return round(iron+0.5)", "from fractions import Fraction as F\nfrom math import ceil\n\n\ndef calculate_scrap(scraps, number_of_robots):\n    cost = 50\n    for pct in scraps:\n        factor = F(100, 100 - pct)\n        cost *= factor\n    return ceil(cost * number_of_robots)", "from math import ceil\ndef calculate_scrap(scraps, number_of_robots):\n    if len(scraps) == 1:\n        return ceil(50  * number_of_robots/((100-scraps[0])/100))\n    else:\n        divisor = 1\n        for i in scraps:\n            divisor *= (100-i)/100\n        return ceil(50  * number_of_robots/(divisor))\n        \n", "from functools import reduce\nfrom operator import mul\nfrom math import ceil\ndef calculate_scrap(scraps, number_of_robots):\n    return ceil(number_of_robots*50/reduce(mul,[(100-s)/100 for s in scraps]))", "import math\ndef calculate_scrap(scraps, num):\n    mat = num*50\n    for x in scraps:\n        mat = mat/(0.01*(100-x))\n    return math.ceil(mat)\n", "from math import ceil\n\ndef calculate_scrap(scraps, number_of_robots):\n    factor = 1\n    for x in scraps:\n        factor *= 1 - x / 100\n    return ceil(50 / factor * number_of_robots)", "from functools import reduce\n\ndef calculate_scrap(scraps, number_of_robots):\n    ans = reduce(lambda x, y: x / (100 - y) * 100, scraps, number_of_robots * 50)\n    return int(ans) if ans.is_integer() else int(ans) + 1"]