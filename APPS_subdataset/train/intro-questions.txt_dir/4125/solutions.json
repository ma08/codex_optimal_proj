["def get_weight(name):\n    return sum(ord(a) for a in name.swapcase() if a.isalpha())", "def get_weight(name):\n    return sum(ord(c.swapcase()) for c in name if c.isalpha())", "import string as q\n\ndef get_weight(name):\n    return sum(ord(char.swapcase()) for char in name if char in q.ascii_letters)", "def get_weight(name):\n    return sum(ord(x) for x in name.swapcase() if x.isalpha())", "get_weight=lambda s:sum(ord(c)for c in s.swapcase()if c.isalpha())", "import re\ndef get_weight(name):\n    return sum(map(ord, re.sub(r'[^a-zA-Z]', '', name.swapcase())))", "get_weight=lambda s:sum(ord(e)for e in s.swapcase()if e.isalpha())", "get_weight=lambda s:sum(map(ord,filter(str.isalpha,s.swapcase())))", "def get_weight(name):\n    return sum(ord(x) for x in filter(str.isalpha, name.swapcase()))", "def get_weight(name):\n    return sum(ord(n.swapcase()) for n in name if n.isalpha())"]