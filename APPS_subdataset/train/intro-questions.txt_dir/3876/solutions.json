["def find(n):\n    return sum(e for e in range(1, n+1) if e % 3 == 0 or e % 5 == 0)", "def find(n):\n    sum = 0\n    for i in range(1,n+1):\n        if i % 3 == 0 or i % 5 == 0:\n            sum += i\n    return sum", "def find(n):\n    return sum(range(0, n+1, 3)) + sum(range(0, n+1, 5)) - sum(range(0, n+1, 15))", "def find(n):\n    return sum([x for x in range(1,n+1) if not x%3 or not x%5])", "def find(n):\n    return sum( set(range(0, n+1, 3)) | set(range(0, n+1, 5)) )", "def find(n):\n    return sum(i for  i in range(n+1) if i % 3 == 0 or i % 5 == 0)", "def find(n):\n    c_3 = n // 0x3\n    c_5 = n // 0x5\n    c_f = n // 0xf\n    \n    s_3 = c_3 * (0x3 + c_3 * 0x3) // 2\n    s_5 = c_5 * (0x5 + c_5 * 0x5) // 2\n    s_f = c_f * (0xf + c_f * 0xf) // 2\n    \n    return s_3 + s_5 - s_f\n", "def find(n):\n    return sum(set([x for x in range(0, n+1, 3)] + [x for x in range(0, n+1, 5)]))", "def find(n):\n    return sum([i for i in range(0,n+1) if i%3==0 or i%5==0])\n", "def find(n):\n    return sum([i for i in range(n+1) if (i%3==0 or i%5==0)])", "def find(n):\n    return sum([ele for ele in range(3,n+1,3) if ele%5!=0])+sum(range(5,n+1,5))", "def find(n):\n    # Code here\n    L = []\n    for i in range(n+1):\n        if i % 3 == 0 or i % 5 == 0:\n            L.append(i)\n    return sum(L)", "def find(n):\n    n = n + 1\n    sum = 0\n    for x in range(n):\n        if x % 3 == 0 or x % 5 == 0:\n            sum += x\n    return sum", "find = lambda n: sum(e for e in range(n+1) if not e%3 or not e%5)", "def find(n):\n    return sum(x for x in range(n + 1) if not (x % 3 and x % 5))", "def find(n):\n    total = 0\n    for i in range(n + 1):\n        if (i % 3 == 0) or (i % 5 == 0):\n          total += i\n    return total      \n    # Code here\n", "from operator import mul\nfrom functools import reduce, partial\nfrom itertools import combinations\n\ndef prod(numbers):\n    return reduce(mul, numbers)\n\ndef range_sum(n):\n    return n * (n+1) / 2\n\ndef multipes_sum(divisor, n):\n    return range_sum(n//divisor) * divisor\n\ndef something(limit, divisors, size):\n    \"\"\"How should I name this?\"\"\"\n    return sum(multipes_sum(prod(numbers), limit)\n               for numbers in combinations(divisors, size))\n\ndef divisors_multiples_sum(n, divisors=()):\n    result = 0\n    for i in range(len(divisors)):\n        result += (-1)**i * something(n, divisors, i+1)\n    return int(result)\n\nfind = partial(divisors_multiples_sum, divisors=(3,5))\n", "find = lambda n:n//3*(n//3+1)/2*3 + n//5*(n//5+1)/2*5 - n//15*(n//15+1)/2*15", "def find(n):\n    sum3 = sum([3*i for i in range(1,n//3+1)])\n    sum5 = sum([5*j for j in range(1,n//5 +1) if j%3 != 0])\n    return sum3+sum5\n    \n", "def find(n):\n    k1, k2, k3 = n // 3, n // 5, n // 15\n    return (3 * k1 * (k1 + 1) >> 1) + (5 * k2 * (k2 + 1) >> 1) - (15 * k3 * (k3 + 1) >> 1)", "def find(n):\n    x = sum(i for i in range(n+1) if i % 3 == 0 or i % 5 == 0)\n    return x", "def find(n):\n  return sum([x for x in range(n+1) if x%3 == 0 or x%5 == 0])\n    # Code here\n", "def find(n: int) -> int:\n    \"\"\" Get the sum of all multiples of 3 and 5 limited to `n`. \"\"\"\n    return sum(filter(lambda num: any([not num % 3, not num % 5]), range(n + 1)))", "def find(n):\n    return sum(range(3,n+1,3)) + sum(x for x in range(5,n+1,5) if x % 3 != 0)", "def find(n):\n    def F(k):\n        m = n // k\n        return m * (m + 1) * k // 2\n        \n    return F(3) + F(5) - F(15)", "def find(num):\n    result = []\n    num = list(range(1,num+1))\n    for zahl in num:\n        if (zahl%3 == 0) or (zahl%5 == 0):\n            result.append(zahl) \n    return sum(result)", "def find(n):\n    if n>30:\n        full = n//30\n        half = n%30\n        sum = full*(full-1)*210\n        for i in range(3, half+1):\n            if i%3==0 or i%5==0:\n                sum += i+(full*30)\n        sum += (225*full)\n        return sum\n    else:\n        sum = 0\n        for i in range(3,n+1):\n            if i%3==0 or i%5==0:\n                sum += i\n        return sum", "def find(n):\n    divideBy5 = n // 5\n    divideBy3 = n // 3\n    divideBy15 = n // 15\n    sum = (5 * divideBy5 + 5) * divideBy5 //2  + (3 * divideBy3 + 3) * divideBy3 //2 -(15 * divideBy15 + 15) * divideBy15 //2 \n    return sum", "def find(n):\n    sum =0\n    for i in range(0,n+1,3):\n        sum = sum + i\n    for i in range(0,n+1,5):\n        if i%3!=0:\n            sum = sum + i\n    return sum", "sum_naturals = lambda n: n * (n + 1) // 2\nsum_multiples = lambda n, m: m * sum_naturals(n // m)\n\ndef find(n):\n    return sum_multiples(n, 3) + sum_multiples(n, 5) - sum_multiples(n, 15)", "def find(n):\n    return sum([x for x in range(3, n + 1) if not x % 3 or not x % 5])\n", "from math import floor\ndef find(n):\n    return sum(3 * i for i in range(1, floor(n / 3) + 1)) + sum(5 * i for i in range(1, floor(n / 5) + 1) if (5 * i) % 3 != 0)\n    \n", "def find(n):\n    # up to, including n\n    # range(n +1)\n    # iterate over number\n    # if divisible by 3 or 5\n    # add to total\n    total = 0\n    for num in range(n+1):\n        if num % 3 == 0 or num % 5 == 0:\n            total += num\n    return total", "def find(n):\n    x = 0\n    for i in range(n):\n        z = i + 1\n        if (z % 3 == 0) or (z % 5 == 0):\n            x += z\n\n    return x\n", "def find(n):\n    ans = 0\n    for i in range(0,n+1):\n        if i % 3 == 0:\n            ans = ans + i\n        elif i % 5== 0:\n            ans = ans + i\n    return ans        ", "def find(n):\n    sum = 0\n    for a in range (1, n+1):\n        if a%3 == 0 or a%5 == 0:\n            sum = sum + a\n    return sum", "def find(n):\n    list_1 = []\n    for x in range(1,n+1):\n        if x%3 == 0 or x%5 == 0:\n            list_1.append(x)\n    i = 0\n    for y in list_1:\n        i = i+y\n    return i", "def find(n):\n    i=3\n    b=5\n    c=0\n    while i <= n:\n        c=c+i\n        \n        i+=3\n\n    while b<=n:\n        if b % 3 != 0:\n            c=c+b\n            \n            b+=5\n        else:\n            b+=5\n    \n    return c", "def find(n):\n    return n//5*5/2*(n//5+1) + n//3*3/2*(n//3+1) - n//15*15/2*(n//15+1) ", "def find(n):\n    summe = []\n    for x in range(n+1):\n        if x%3 == 0 or x%5 == 0:\n            summe.append(x)\n    return sum(summe)", "def find(n):\n    sum=0\n    for i in range (1,n+1) :\n        if i %3==0 or i%5==0:\n            sum+=i\n        \n    return(sum)\n    \nprint(find(5))", "def find(n):\n    sum = 0\n    for i in range(1,n+1):\n        if i % 3 == 0 or i % 5 == 0:\n            sum += i\n    return sum\nprint(find(9))", "def find(n):\n    sum2 = 0\n    for i in range(n+1):\n        if i%5 ==0 or i%3 == 0:\n            sum2 += i\n    return sum2", "def find(number):\n    result = []\n    for i in range(1, number+1):\n        if i % 3 == 0 or i % 5 == 0:\n            result.append(i)\n\n    return sum(result)", "def find(n):\n    count1 = 0\n    count2 = 0\n    for i in range(5,n+1,5):\n        count2+=1\n        if count2 ==3:\n            count2 =0\n            continue\n        count1+=i\n    for i in range(3,n+1,3):\n        count1+=i\n    return count1", "def find(n):\n    #Create a list's containing my multiples of 5 and 3\n    a = list(range(5, (n)+1, 5))\n    b = list(range(3, (n)+1, 3))\n    \n    # create sets of my list\n    c = set(a)\n    d = set(b)\n    \n    #remove the duplicates and create a list of removed duplicates\n    e = list(d - c)\n    \n    #Sum list together\n    return sum(a + e)", "def find(n):\n    total = 0\n    testCase = 1\n    \n    while testCase <= n:\n        if testCase % 3 == 0 or testCase % 5 == 0:\n            total += testCase\n        \n        testCase += 1\n    \n    return total", "def find(n):\n    i = 1\n    ans = []\n    while i <= n:\n        if i % 3 == 0:\n            ans.append(i)\n        elif i % 5 == 0:\n            ans.append(i)\n        i += 1\n    return sum(ans)\n", "from functools import reduce\ndef find(n):\n    return reduce(\n        lambda x, y: x + y if y % 3 == 0 or y % 5 == 0 else x, \n        list(range(n+1)), \n        0\n    )\n", "def find(n):\n    resultat = sum([i for i in range(n+1) if i%3==0 or i%5==0])\n    return resultat\n\n", "def find(n):\n    # Code here\n    a = 0\n    for i in range(3, n+1):\n        if i % 3 == 0:\n            a += i\n        elif i % 5 == 0:\n            a += i\n    return a", "def find(n):\n    multsf = [5*i for i in range(1,n+1) if 5*i<=n] \n    multst = [3*i for i in range(1,n+1) if 3*i<=n]\n \n      \n  \n\n    return sum(multst) + sum(list(set(multsf)-set(multst)))\n    \n    \n    \n    \n", "def find(n):\n    sum=0\n    for i in range(1,n+1):\n        if (i % 3 == 0) | (i % 5 == 0):\n            sum+=i\n    return sum", "def find(n):\n    result = 0\n    while n > 0:\n        if n == 0:\n            break\n        elif n%3 == 0 or n%5 == 0: \n            result += n\n        n-=1\n    return result", "def find(n):\n    return sum(x for x in range(3, n+1) if not x%3 or not x%5)", "def relevant():\n    i = 3\n    while True:\n        if i%3 == 0 or i%5 == 0:\n            yield i\n        i+=1\n\ndef find(n):\n    from itertools import takewhile\n    return sum(takewhile(lambda x : x<= n , relevant()))", "def find(n):\n    return sum(list(filter(lambda x: x % 3 == 0 or x % 5 == 0, list(range(1, n + 1)))))", "def find(n):\n    st = 0\n    for i in range(n + 1):\n        if i % 3 == 0 or i % 5 == 0:\n            st += i\n    return st", "def find(n):\n    #return sum(n for n in range(n+1) if n%3==0 or n%5==0)\n\n    a3 = n // 3\n    a5 = n // 5\n    a15 = n // 15\n    sum3 = 3 * a3 * (a3 + 1) // 2\n    sum5 = 5 * a5 * (a5 + 1) // 2\n    sum15 = 15 * a15 * (a15 + 1) // 2\n    \n    return sum3 + sum5 - sum15", "def find(n):\n    tot = 0\n    \n    for i in range(3,n+1,3):\n        tot += i\n    \n    for j in range(5,n+1,5):\n        tot += j\n    \n    if n > 14:\n        for j in range(15,n+1,15):\n            tot -= j\n    \n    return tot", "def find(n):   \n    sumOfNumbers = 0\n    number=1\n    while(number<=n):\n        if (number%3==0 or number%5==0):\n            sumOfNumbers=sumOfNumbers + number\n        number+=1\n    return sumOfNumbers\n", "def find(n):\n    # Code here\n    holder = 0\n    for i in range(n + 1):\n        if i % 3 == 0 or i % 5 == 0:\n            holder =  holder + i\n    return holder\n        \n        \n        \n", "def find(n):\n    m=[]\n    i=1\n    while i<=n:\n        if i%3==0 or i%5==0:\n            m.append(i)\n        i+=1\n    x=sum(m)\n    return x\n    # Code here\n", "def find(n):\n    return sum([j for j in range(n+1) if j % 3 == 0 or j % 5 == 0])\n    \n", "def find(n):\n    x=0\n    sum=0\n    while (x<=n):\n        if(x%3==0 or x%5==0):\n            sum = sum+x\n        x=x+1\n    return sum", "def find(n):\n    # Code here\n    multiplesList = 0\n    for i in range(n+1):\n        if i%3 == 0 or i%5 == 0:\n            multiplesList+=i\n    \n    return multiplesList\n\n", "def find(n):\n    # Code here\n    ans=0.0\n    for i in range(n+1):\n        if i%3 ==0 or i%5==0:\n            ans+=i\n    return ans  \nfind(10)", "def find(n):\n    return sum(filter(IsMultiple, range(n+1)))\n\ndef IsMultiple(n):\n    return n%3==0 or n%5==0", "def find(n):\n    em = []\n    for i in range(n+1):\n        if i % 3 == 0:\n            em.append(i)\n        elif i % 5 == 0:\n            em.append(i)\n    return sum(em)", "def find(n):\n    \n    arr = []\n    total = 0\n    for i in range(n + 1):\n        if i % 3 == 0:\n            arr.append(i)\n        elif i % 5 == 0:\n            arr.append(i)\n    \n    for num in arr:\n        total = total + num\n    \n    return total", "def find(n):\n    if n < 3: return 0\n    sum = 0\n    for i in range (3, n+1):\n        if (i % 3 == 0) | (i % 5 == 0): sum += i\n    return sum\n    # Code here\n", "def find(n):\n    l = []\n    calc = 0\n    for x in range(n + 1):\n        if x % 3 == 0:\n            l.append(x)\n            \n        if x % 5 == 0:\n            l.append(x)\n    l = list(set(l))\n    for y in range(len(l)):\n        calc = calc + l[y]\n    return calc", "def find(n):\n    return sum([multiple for multiple in range(1,n+1) if multiple % 3 == 0 or multiple % 5 == 0])", "def find(n):\n    return sum([x for x in range(1,n+1, 1) if (x/3).is_integer() or (x/5).is_integer()])", "def find(n):\n    # Code here\n    sum=0\n    for i in range(n+1):\n        if i % 5 == 0:\n            sum = sum + i\n        elif i % 3 == 0:\n            sum = sum + i\n            \n    return sum", "def find(n):\n    x = lambda b: range(0, n + 1, b)\n    return sum(set((*x(3), *x(5))))", "def find(n):\n    i=1\n    count=0\n    while i <=n:\n        \n        #print(i)\n        if (i%3)==0 or (i%5)==0:\n            count=count+i\n        #    print (count)\n        i=i+1\n    return (count)", "def find(n):\n    summ = [i for i in range(n+1) if i % 3 == 0 or i % 5 == 0]\n    return sum(summ)", "def find(n):\n    char=n+1\n    mystr=0\n    while char>=4:\n        char-=1\n        if(char%3)==0:\n            mystr+=(char)\n    \n        else:\n            if(char)%5==0:\n                    mystr+=(char)\n        if char==3:    \n            return(int(mystr)) \n    # Code here\n", "def find(n):\n    m = 0\n    for i in range(1,n+1): \n        if i % 3 is 0 or i % 5 is 0 : m = m + i\n    return m", "def find(n):\n    return sum(filter(lambda i: (i % 5==0) or (i % 3==0), range(n+1)))", "def find(n):\n    finalSum = 0\n    for i in range(n+1):\n        if i % 3 == 0:\n            finalSum += i\n        elif i % 5 == 0:\n            finalSum += i\n    return finalSum", "def find(n):\n    mof3 = [i for i in range(3,n+1,3)]\n    mof5 = [i for i in range(5,n+1,5)]\n    mof3.extend(mof5)\n    all_num_to_n = set(sorted(mof3))\n    return sum(all_num_to_n)", "def find(n):\n    l = range(3, n + 1)\n    ans = 0\n    for i in l:\n        if i % 3 == 0 or i % 5 == 0:\n            ans += i\n    return ans", "def find(n):\n    g = [i for i in range (0, n+1) if i %3 ==0 or i%5 == 0]\n    return sum(g)", "def find(n):\n    # Code here\n    total = 0\n    i = 0\n    while i < n:\n        i+=1\n        if i%3 == 0 or i%5 == 0:\n            total = total + i\n    return total\n    \n     \n    \n", "def find(n):\n    # Code here    \n    return sum(filter(is_multiple_of_3_or_5, range(n+1)))\n\ndef is_multiple_of_3_or_5(n):\n    return n%3==0 or n%5==0", "def find(n):\n    a = (n // 3) * (n // 3 + 1) // 2 * 3\n    b = (n // 5) * (n // 5 + 1) // 2 * 5\n    c = (n // 15) * (n // 15 + 1) // 2 * 15\n    \n    return a + b - c", "def find(n):\n    sum=0\n    for x in range(n):\n        if (x%3 == 0 or x%5 == 0):\n            sum += x\n    if(n%3 == 0 or n%5==0):\n        return sum + n\n    else:        \n        return sum\n\nprint(find(5))", "def find(n):\n    nums = [i for i in range(1, n+1) if i % 3 == 0 or i % 5 == 0]\n    return sum(nums)", "def find(n):\n    x = [number for number in range(n+1) if number%3==0 or number%5==0]\n    return sum(x)\n", "def find(n):\n    sum = int()\n    for i in range(1, n + 1):\n        if i % 3 == 0 or i % 5 == 0:\n            sum += i\n    return sum\n\n", "def find(n):\n    numbers = [number for number in range(1, n+1) if number%3==0 or number%5==0]\n    return sum(numbers)", "def find(n):\n    x = list(range(n+1))\n    y = []\n    for i in x:\n        if i%3 == 0 or i%5 == 0:\n            y.append(i)\n    return sum(y)\n", "from functools import reduce\n\ndef find(n):\n    zoo = [i for i in range(0, n+1) if i % 3 == 0 or i % 5 == 0]\n    return reduce(lambda x,y: x+y, zoo)", "def find(n):\n    multiples = []\n    for i in range(1, n+1):\n        if i % 5 == 0 or i % 3 == 0:\n            multiples.append(i)\n    return sum(multiples)\n", "def find(n):\n    x = 0\n    multiples = []\n    while x <= n:\n        if x % 3 == 0 or x % 5 == 0:\n            multiples.append(x)\n        x += 1\n    return sum(multiples)", "def find(n):\n    num = 0\n    if(n % 5 == 0 or n % 3 == 0): num += n\n    for i in range(3,n):\n        if not i % 5 or not i % 3:\n            num = num + i\n    return num", "def find(n):\n    s = 0\n    \n    for x in range(0,n+1):\n        if x % 3 == 0 or x % 5 ==0:\n            s += x\n    return(s)\n            \n    \n    \n    # Code here\n", "def find(n):\n    return sum(loop for loop in range(1, n + 1) if not loop % 3 or not loop % 5)"]