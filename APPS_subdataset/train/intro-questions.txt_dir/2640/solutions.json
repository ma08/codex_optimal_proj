["from collections import deque\ncas = int(input())\nfor t in range(cas):\n    n = int(input())\n    dq = deque(list(map(int,input().split())))\n    possible = True\n    element = (2**31)+1\n    while dq:\n        left_element = dq[0]\n        right_element = dq[-1]\n        if left_element>=right_element and element>=left_element:\n            element = dq.popleft()\n        elif right_element>=left_element and element>=right_element:\n            element = dq.pop()\n        else:\n            possible = False\n            break\n    if possible:\n        print('Yes')\n    else:\n        print('No')   \n", "#!/usr/bin/env python3\n\nfrom collections import deque\n\ndef __starting_point():\n    t = int(input().strip())\n    \n    for _ in range(t):\n        num_cnt = int(input().strip())\n        deq = deque(list(map(int, input().strip().split(' '))))\n        \n        prev = max(deq[0], deq[-1])\n        while deq:\n            if prev >= deq[0] and prev >= deq[-1]:\n                if deq[0] >= deq[-1]:\n                    prev = deq.popleft()\n                else:\n                    prev = deq.pop()\n            else:\n                break\n                \n        if len(deq) == 0:\n            print('Yes')\n        else:\n            print('No')\n            \n\n__starting_point()"]