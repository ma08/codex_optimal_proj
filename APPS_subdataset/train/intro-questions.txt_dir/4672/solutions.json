["import re\ndef AlphaNum_NumAlpha(string):\n    return re.sub( r'[0-9]{1,2}|[a-z]', lambda x:str(ord(x.group() )-96) if x.group().isalpha() else chr(int(x.group())+96)  , string)\n    \n    #\\w\n", "import re\nfrom string import ascii_lowercase\n\ndef repl(m):\n    x = m.group()\n    if x.isdigit():\n        return ascii_lowercase[int(x)-1]\n    else:\n        return str(ascii_lowercase.find(x) + 1)\n\ndef AlphaNum_NumAlpha(string):\n    return re.sub(r'[a-z]|\\d+', repl, string)", "import re\n\ndef AlphaNum_NumAlpha(string):\n    return ''.join(chr(int(e)+96) if e.isdigit() else str(ord(e)-96) for e in re.split('([a-z])', string) if e)", "import re\ndef AlphaNum_NumAlpha(string):\n    f = lambda x: str(ord(x)-ord('a')+1) if x.isalpha() else chr(ord('a')+int(x)-1)\n    return ''.join([f(x) for x in re.findall(r'\\d{1,2}|[a-z]', string)])"]