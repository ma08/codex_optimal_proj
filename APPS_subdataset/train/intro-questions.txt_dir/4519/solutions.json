["def max_number(n):\n    return int(''.join(sorted(str(n), reverse=True)))", "max_number = lambda n: int(\"\".join(sorted(str(n)))[::-1])", "def max_number(n):\n    n = \"\".join(sorted(str(n), reverse=True))\n    return int(n)", "max_number= lambda  n : int(''.join(sorted(list(str(n)),reverse=True)))\n", "max_number=lambda n: int(\"\".join(sorted(str(n),reverse=True)))", "def max_number(digits):\n    sorted_digits = sorted(str(digits), reverse = True)\n    result = \"\"\n    for member in sorted_digits:\n        result += str(member)\n    return int(result)\n", "def max_number(num):\n    return int(''.join(sorted(list(str(num)),reverse=True)))", "def max_number(n,vac=\"\"):\n    lista2 = [int(a) for a in list(str(n))]\n    lista2.sort(reverse=True)\n    for num in lista2:\n        vac += str(num)\n    return int(vac)", "def max_number(n):\n    return int(\"\".join(sorted(str(n))[::-1]))", "def max_number(n):\n    s = list(str(n))\n    s.sort()\n    res = s[::-1]\n    return int(\"\".join(res))", "def max_number(n):\n    digits = []\n    while n:\n        n, d = divmod(n, 10)\n        digits.append(d)\n\n    return sum(d * 10 ** i for i, d in enumerate(sorted(digits)))\n", "def max_number(n):\n    sorted_list = sorted(list(str(n)),reverse=True)\n    return int(''.join(sorted_list))", "def max_number(n):\n    number = list(str(n))    \n    return int(''.join(sorted(number, reverse=True)))", "def max_number(n):\n    tmp = list(str(n))\n    return int(''.join(sorted(tmp, reverse=True)))", "def max_number(n: int) -> int:\n    \"\"\" Return the maximum number that could be formed from the digits of the number given. \"\"\"\n    return int(\"\".join(sorted(str(n), reverse=True)))", "def max_number(n):\n    newList=[i for i in str(n)]\n    maxList=[]\n    while len(newList)>0:\n        maxList.append(max(newList))\n        newList.remove(max(newList))     \n    return int(''.join(maxList))", "def max_number(n):\n    # Hashed array to store count of digits \n    count = [0 for x in range(10)] \n  \n    # Connverting given number to string \n    string = str(n) \n  \n    # Updating the count array \n    for i in range(len(string)): \n        count[int(string[i])] = count[int(string[i])] +  1\n  \n    # Result stores final number \n    result = 0\n    multiplier = 1\n  \n    # traversing the count array \n    # to calculate the maximum number \n  \n    for i in range(10): \n        while count[i] > 0: \n            result = result + ( i * multiplier ) \n            count[i] = count[i] - 1\n            multiplier = multiplier * 10\n  \n    return result", "def max_number(n):\n    integers = sorted([int(i) for i in str(n)])\n    return sum(v*10**i for i,v in enumerate(integers))", "def max_number(n):\n    resfornow = []\n    while n>0:\n        resfornow.append(n%10)\n        n= n//10\n    res = \"\"\n    for i in reversed(sorted(resfornow)):\n        res+= str(i)\n    return int(res)\n", "def max_number(n):\n    n_lst = [i for i in str(n)]\n    n_lst.sort()\n    n_lst.reverse()\n    return int(''.join(n_lst))", "def max_number(n):\n    num = [x for x in str(n)]\n    swap = True\n    while swap:\n        swap = False\n        for i in range(len(num)-1):\n            if num[i]<num[i+1]:\n                num[i], num[i+1] = num[i+1], num[i]\n                swap = True\n    output = ''\n    return int(output.join(num))\n            \n\n", "def max_number(num):\n    n = list(str(num))\n    sort_n = sorted(n)\n    return int(''.join(sort_n[::-1]))", "def max_number(n):\n    lista = [int(i) for i in str(n)]\n    lista.sort(reverse = True)\n    string = [str(i) for i in lista] \n    result = int(\"\".join(string)) \n    return(result) ", "def max_number(n):\n    s = sorted(str(n))\n    st = ''.join(s)[::-1]\n    return int(st)", "def max_number(n):\n    \n    l = []\n    \n    for pos, digit in enumerate(str(n)):\n        l.append(digit)\n    return int(''.join(sorted(l, reverse=True)))\n", "def max_number(n):\n    r=sorted(list(str(n)))[::-1]\n    k=''.join(r)\n    return int(k)", "from itertools import permutations\n\ndef max_number(n):\n    answer = []\n    max_combo = max(list(permutations([int(i) for i in str(n)])))\n    for x in max_combo:\n        if x not in answer:\n            answer.append(str(x))\n    return int(''.join(answer))", "def max_number(n):\n    return int(''.join([i for i in sorted(list(str(n)))[::-1]]))", "def max_number(n):\n    digits = str(n)\n    digits_arr = []\n    largest = ''\n\n    for i in range(len(digits)):\n        digits_arr.append(int(digits[i]))\n    \n    sorted_arr = sorted(digits_arr)[::-1]\n    \n    for j in range(len(sorted_arr)):\n        largest += str(sorted_arr[j])\n    \n    return int(largest)", "def max_number(n):\n    y= sorted([ x for x in str(n)])\n    return int( \"\".join(x for x in y)[::-1] )\n", "def max_number(n):\n    p=[str(i) for i in str(n)]\n    p= sorted(p, reverse=True)\n    p=''.join(p)\n    p=int(p)\n    return p", "def max_number(n):\n    g = list(str(n))\n    v = sorted (g, reverse = True)\n    v = ''.join(v)\n    return int(v)", "def max_number(n):\n    #your code here\n    to_return = sorted(str(n), reverse = True)\n    \n    return int(\"\".join(to_return))\n", "def max_number(n):\n    num = []\n    num_out = ''\n    n = str(n)\n    for q in range(len(n)):\n        num.append(n[q])\n    num.sort()\n    for w in num:\n        num_out = num_out + w\n    return int(num_out[::-1])", "def max_number(n):\n    arr = list(str(n))\n    s = sorted(arr)[::-1]\n    return int(\"\".join(s))", "def max_number(n):\n    #your code here\n    m = list(map(int, str(n))) \n    m.sort(reverse=True)\n    return int(\"\".join(str(x) for x in m))\n", "def max_number(n):\n    \n    l = []\n    n = str(n)\n    \n    for i in n:\n        l.append(i)\n        \n    l.sort(reverse = True)\n    \n    return (int(\"\".join(l)))", "from itertools import permutations\ndef max_number(n):\n    return max([int(''.join(i)) for i in permutations(list(str(n)))])", "def max_number(n):\n    res = []\n    for i in str(n):\n        res.append(i)\n    res2 = []\n    for i in res:\n        res2.append(int(i))\n    ans = \"\"\n    for i in sorted(res2, reverse=True):\n        ans += str(i)\n    return int(ans)\n", "def max_number(n):\n    n = list(map(int, str(n)))\n    n = sorted(n,reverse=True)\n    new_n = int(\"\".join(map(str, n))) \n    return new_n", "def max_number(n):\n    array = list(str(n))\n    numb = ''.join(sorted(array, reverse=True))\n    s = int(numb)\n    return s\n", "def max_number(n):\n    res = int(\"\".join(sorted(str(n), reverse = True)))\n    return res", "def max_number(n):\n    arr = list(str(n))\n    result = []\n    for i in arr:\n        result.append(i)\n    num = sorted(result)\n    num.reverse()\n    out = \"\".join(num)\n    return int(out)\n    \n    \n    \n", "def max_number(n):\n    l = [str(i) for i in str(n)]\n    l.sort(reverse=True)\n    k = int(\"\".join(l))\n    return k", "def max_number(n):\n    s = str(n)\n    temp = []\n    \n    for c in s:\n        temp.append(c)\n    \n    temp.sort(reverse=True)\n    s = \"\"\n    for t in temp:\n        s += t\n    print(s)\n    return int(s)", "def max_number(n):\n    a=str(n)\n    b=sorted(a,reverse=True)\n    return int(''.join(b))\n    \n", "def max_number(n):\n    num=list(str(n))\n    for i in range(len(num)):\n        for j in range(len(num)-i-1):\n            if num[j]<num[j+1]:\n                num[j+1],num[j]=num[j],num[j+1]\n    large=\"\"\n    for i in num:\n        large+=i\n    return int(large)", "def max_number(n):\n    a=[]\n    s=''\n    for i in str(n):\n        a.append(int(i))\n    b=sorted(a, reverse=True)\n    for j in b:\n        s+=str(j)\n    return int(s)", "def max_number(n):\n    st = [char for char in str(n)]\n    st.sort(reverse = True)\n    s= int(\"\".join(st))\n    return s", "def max_number(n):\n    #your code her\n    return int(\"\".join([str(i) for i in sorted([int(x) for x in str(n)], reverse = True)]))", "def max_number(n):\n    #your code here\n    y = []\n    for x in str(n):\n        y.append(x)\n        \n    return int(''.join(sorted(y, reverse = True)))\n", "def max_number(n):\n    l=int(''.join(x for x in sorted([x for x in str(n)],reverse=True)))\n    return l\n", "def max_number(n):\n    x = str(n)\n    x = list(x)\n    emptylist = sorted(list([int(eachletter) for eachletter in x]))\n    emptylist.reverse()\n    emptystring = ''\n    for eachnumber in emptylist:\n        emptystring = emptystring + str(eachnumber)\n    return int(emptystring)", "def max_number(n):\n    s=''\n    a=sorted(int(i) for i in str(n))[::-1]\n    for j in a:\n        s+=str(j)\n    return int(s)", "def max_number(n):\n    arrayTest = [1,3,2]\n    array = list(str(n))\n    array.sort(reverse=True)\n    array1 = [str(array) for array in array]\n    array2 = \"\".join(array1)\n    array3 = int(array2)\n    return array3", "def max_number(n):\n    return int(\"\".join(map(str,sorted((int(n) for n in str(n)), reverse=True))))", "def max_number(n):\n    s = str(n)\n    nums = []\n    for i in range(len(s)):nums.append( int(s[i]) )\n    s = \"\"\n    for i in range(len(nums)):\n        for j in range( len(nums) - i - 1 ):\n            if nums[j] <= nums[j + 1]:\n                nums[j], nums[j + 1] = nums[j + 1], nums[j]\n\n    for i in nums:s += str(i)\n    return int(s)\n", "def max_number(n):\n    x = \",\".join(str(n)).split(\",\")\n    x1 = sorted(x)\n    return int(\"\".join(x1)[::-1])\n", "def max_number(n):\n    s = [i for i in str(n)]\n    s.sort()\n    return int(''.join(i for i in s[::-1]))", "def max_number(n):\n    k=[]\n    s=''\n    for i in str(n):\n        k.append(i)\n        k.sort(reverse=True)\n    for i in k:\n        s+=i\n    return int(s)\n", "def max_number(n):\n    #your code here\n    output = []\n\n    for num in str(n):\n        output.append(num)\n\n    output = ''.join(sorted(output, reverse = True))\n    \n    return int(output)", "def max_number(n):\n    arr = sorted(list(str(n)))\n    arr_int = [int(elem) for elem in arr][::-1]\n    arr_str = [str(elem) for elem in arr_int]\n    result = ''.join(arr_str)\n    \n    return int(result)", "def max_number(n):\n    n = list(map(int,str(n)))\n    n.sort(reverse = True)\n    n = \"\".join(map(str, n))\n    return int(n)\n", "def max_number(number):\n    return int(\"\".join(x for x in sorted([i for i in str(number)]))[::-1])", "\ndef max_number(number):\n    number_list = [x for x in str(number)]\n    new_string = \"\"\n    while number_list:\n        for x in number_list:\n            if x == max(number_list):\n                new_string += x\n                number_list.remove(x)\n    return int(new_string)", "def max_number(n):\n    n=[ i for i in str(n)]\n    n.sort(reverse=True)\n    return int(''.join(n))", "def max_number(n):\n    x=list(str(n))\n    x.sort(reverse=True)\n    \n    return int(''.join(y for y in x))", "def max_number(n):\n    leList = []\n    for ele in str(n):\n        leList.append(int(ele))\n    leList.sort(reverse=True)\n    return int(\"\".join(str(f'{x}''') for x in leList))", "def max_number(n):\n    return int(''.join([x for x in sorted(list(str(n)),reverse=True)]))", "def max_number(n):\n    #print(type(n))\n    return int(''.join(sorted(str(n), reverse = True)))", "def max_number(n):\n    a=[i for i in str(n)]\n    a.sort(reverse=True)\n    f=\"\".join(a)\n    z=int(f)\n    \n    \n    return z \n    #your code here\n", "def max_number(n):\n    \n    sz = str(n)\n    s = [char for char in sz]\n    r = sorted(s, reverse = True)\n    j = ''.join(r)\n    \n    return int(j)", "def max_number(n):\n    n = str(n)\n    lista = sorted(list(n),reverse=True)\n    return int(''.join(lista))", "def max_number(n):\n    x = sorted(list(str(n)),reverse=True)\n    return int(''.join(i for i in x))", "def max_number(n):\n    a = list(str(n))\n    a.sort(reverse=True)\n    b = \"\".join(a)\n    return int(b)", "def max_number(n):\n    newlist = str(n)\n    lastlist =  \"\".join(sorted(newlist))[::-1]\n    return int(lastlist)\nmax_number(566797)", "def max_number(n):\n    s = str(n)\n    l = [int(x) for x in s]\n    l = sorted(l,reverse=True)\n    m = len(l) - 1\n    return sum([y*(10**(m - i)) for i,y in enumerate(l)])", "def max_number(n):\n    max_list = ''\n    for x in sorted(str(n))[::-1]:\n        max_list += x\n    return int(max_list)", "def max_number(n):\n    b = list(str(n))\n    c = sorted(b)\n    d = c[::-1]\n    x = ''.join(e for e in d)\n    return int(x)", "def max_number(n):\n    numbers = []\n    for number in str(n):\n        numbers.append(number)\n    numbers = sorted(numbers, reverse = True)\n    numbers = ''.join(map(str, numbers))\n    return int(numbers)\n", "def max_number(n):\n    d = str(n)\n    q = sorted(d,reverse = True)\n    w = ''.join(q)\n    return int(w)", "def max_number(n):\n    new_list = []\n    n = str(n)\n    for x in n:\n        new_list.append(x)\n    new_list = sorted(new_list, reverse=True)\n    return int(''.join(new_list))\n", "from itertools import permutations\ndef max_number(n):\n    #your code here\n    n=str(n)\n    l=[]\n    l=list(permutations(n))\n    max=0\n    l2=[]\n    for perm in l:\n            l2.append(''.join(perm))\n    for i in l2:\n        if max<int(i):\n               max=int(i)\n    return max", "def max_number(n):\n    n = list(str(n))\n    n.sort()\n    n.reverse()\n    a = []\n    for i in n:\n        a.append(str(i))\n    return int(''.join(a))", "def max_number(n):\n    l=list(str(n))\n    k=sorted(l)\n    return int( \"\".join(i for i in k[::-1] ))", "def max_number(n):\n    return int(\"\".join(list(map(str,sorted(list([int(x) for x in list(str(n))]),reverse=True)))))", "max_number = lambda n: int(''.join(sorted(str(n), reverse = 1)))", "def max_number(n):\n    return int(\"\".join(sorted([i for i in str(n)],key=None,reverse=True)))\n    \n", "def max_number(n):\n    l=sorted(list(map(int,str(n))),reverse=True)\n    return int(''.join(str(x) for x in l))", "def max_number(n):\n    return int(''.join(sorted(f'{n}', reverse=True)))", "def max_number(n):\n    nums = []\n    for elem in str(n):\n        nums.append(elem)\n    x = \"\".join(sorted(nums, reverse=True))\n    y = int(x)\n    return y\n", "def max_number(n):\n    n_list = [ch for ch in str(n)]\n    n_list.sort(reverse = True)\n    return int(\"\".join(n_list))", "def max_number(n):\n    return int(''.join(sorted((x for x in str(n)),reverse= True)))", "def max_number(n):\n    lst = [int(i) for i in str(n)]\n    lst.sort(reverse = True)\n    s = [str(i) for i in lst] \n    fin = int(\"\".join(s))\n    return fin\n  \n", "def max_number(n):\n   n = ''.join(sorted(list(str(n)))[::-1])\n   return int(n)", "def max_number(n):\n    lst = [num for num in str(n)]\n    lst.sort(reverse = True)\n    return int(''.join(lst))\n    #your code here\n", "def max_number(n):\n    r = list(str(n))\n    k = sorted(r, reverse = True)\n    p = \",\".join(k)\n    return int(p.replace(\",\",\"\"))\n", "def max_number(n):\n    '''function to determine the largest value given a array of numbers. It will convert them to a string, sort them in descending order and then return the list as an int'''\n  \n    if not isinstance(n, int):\n        raise TypeError(\"Sorry, I'm expecting an int\")\n    if n <0:\n        raise ValueError(\"Sorry, 'n' needs to be larger than 1\")\n    \n    \n    return int(\"\".join(sorted((list(str(n))), reverse=True)))", "def max_number(n):\n    a = list(str(n))\n    a.sort()\n    a.reverse()\n    b = (\"\").join(a)\n    return int(b)", "def max_number(n):\n    a = str(n)\n    b = ''\n    lst = []\n    \n    for ch in a: lst.append(ch)\n    \n    lst.sort(reverse=True)\n    \n    for x in lst: b += x\n    \n    return int(b)\n        \n    \n"]