["from itertools import count\n\n# Couldn't find the pattern of why it's 1 or 8, I'm sad :(\ndef repeat_sequence_len(n):\n    memo = {}\n    for i in count():\n        if n in memo: return i - memo[n]\n        memo[n] = i\n        n = sum(d*d for d in map(int, str(n)))", "def F(n):\n    return sum(int(d)**2 for d in str(n))\n\ndef repeat_sequence_len(n):\n    seq = [n]\n    c = F(n)\n    while c not in seq:\n        seq.append(c)\n        c = F(c)\n    return len(seq) - seq.index(c)", "digits = lambda n: map(int, str(n))\n\ndef repeat_sequence_len(n):\n    seen = []\n    \n    while n not in seen:\n        seen.append(n)\n        n = sum(x*x for x in digits(n))\n    \n    return len(seen) - seen.index(n)", "def repeat_sequence_len(n):\n    s = []\n\n    while True:\n        n = sum(int(i) ** 2 for i in str(n))\n        if n not in s:\n            s.append(n)\n        else:\n            return len(s[s.index(n):])", "def f(n):\n    return sum(int(x) ** 2 for x in str(n))\n    \ndef repeat_sequence_len(n):\n    d, i = {}, 0\n    while n not in d:\n        d[n] = i\n        i += 1\n        n = f(n)\n    return i - d[n]", "def repeat_sequence_len(n):\n    f = lambda n: sum(int(c) ** 2 for c in str(n))\n    tortoise = n\n    rabbit = f(n)\n    while tortoise != rabbit:\n        tortoise = f(tortoise)\n        rabbit = f(f(rabbit))\n    rabbit = f(rabbit)\n    result = 1\n    while tortoise != rabbit:\n        rabbit = f(rabbit)\n        result += 1\n    return result", "tr = lambda n: sum(int(i) ** 2 for i in str(n))\n\ndef repeat_sequence_len(n):\n    if n < 10: return n\n    tmp = []\n    n = tr(n)\n    while n not in tmp:\n        tmp.append(n)\n        n = tr(n)\n    return len(tmp) - tmp.index(n)", "def repeat_sequence_len(n):\n    a = [n]\n    while a.count(a[-1]) == 1:\n        a.append(sum(int(c)**2 for c in str(a[-1])))\n    return len(a) - a.index(a[-1]) - 1", "f = lambda n: sum(int(d)**2 for d in str(n))\n\ndef repeat_sequence_len(n):\n    S=[]\n    while n not in S:\n        S.append(n)\n        n = f(n)\n    return len(S)-S.index(n)", "def repeat_sequence_len(n):\n    seen,i={},0\n    n=sum([int(x)**2 for x in str(n)])\n    while n not in seen:\n        seen[n]=i\n        n=sum([int(x)**2 for x in str(n)])\n        i+=1\n    return i-seen[n]\n\n#89,145,42, 20,4,16,37,58\n"]