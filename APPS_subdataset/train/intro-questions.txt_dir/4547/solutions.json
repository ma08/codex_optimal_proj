["def more_zeros(s):\n    results = []\n    \n    for letter in s:\n        dec_repr = bin(ord(letter))[2:]\n        if (dec_repr.count(\"0\") > dec_repr.count(\"1\")) and (letter not in results):\n            results.append(letter)\n    \n    return results\n", "def more_zeros(s):\n    L=[]\n    L1=[]\n    L2=[]\n    for i in s:\n        a=int(' '.join(format(ord(x), 'b') for x in i))\n        for j in str(a):\n            if j==\"0\":\n                L1.append(j)\n            else:\n                L2.append(j)\n        if len(L1)>len(L2):\n            if i not in L:\n                L.append(str(i))\n        L1=[]\n        L2=[]\n    return L", "def more_zeros(s):\n    return [v for i,v in enumerate(s) if bin(ord(v))[2:].count('0') > bin(ord(v))[2:].count('1') and v not in s[:i]]", "def more_zeros(s):\n    return list(dict.fromkeys(x for x, y in zip(s, map(bin, map(ord, s))) if y.count(\"0\") << 1 > len(y)))", "def more_zeros(stg):\n    return sorted((c for c in set(stg) if f\"{ord(c):b}\".count(\"0\") > 3), key=stg.index)\n", "def more_zeros(s):\n\n    al = []\n\n    for char in s:\n        bn = bin(ord(char))[2:]\n        lbn = len(bn)\n        \n        if bn.count('0') > lbn/2 and char not in al:\n            al.append(char)\n    \n    return al", "def more_zeros(s):\n    output = []\n    for ch in s:\n        bin_rep = f'{ord(ch):b}'\n        if bin_rep.count('0') > bin_rep.count('1') and ch not in output:\n            output.append(ch)\n    return output", "def more_zeros(s):\n    lst0 = []\n    lst1 = []\n    lst_res = []\n    stage = 0\n    while stage != len(s):\n        tmp = \"{0:b}\".format(ord(s[stage]))\n        for x in tmp:\n            if x == \"1\":\n                lst1.append(x)\n            else:\n                lst0.append(x)\n        if len(lst1) < len(lst0):\n            if s[stage] in lst_res:\n                stage = stage + 1\n                lst1 = []\n                lst0 = []\n                pass\n            else:\n                lst_res.append(s[stage])\n                stage = stage + 1\n                lst1 = []\n                lst0 = []\n        else:\n            stage = stage + 1\n            lst1 = []\n            lst0 = []\n    return lst_res", "def zero_dominant(c):\n    s = format(ord(c), 'b')\n    return s.count('0') > s.count('1')\n\ndef more_zeros(s):\n    return list(dict.fromkeys(c for c in s if zero_dominant(c)))", "more_zeros = lambda s: [x for x in {x:0 for x in s if bin(ord(x))[1:].count('0')>bin(ord(x))[1:].count('1')}]\n"]