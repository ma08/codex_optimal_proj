["def true_binary(n):\n    return [(c == '1') * 2 - 1 for c in '1' + bin(n)[2:-1]]", "def true_binary(n):\n    return [-1 if x == '0' else 1 for x in bin(n)[1:-1]]", "def true_binary(n):\n    return [1] + [1 if b=='1' else -1 for b in bin(n)[2:-1]]", "def true_binary(n):\n    return  [1 if d == \"1\" else -1 for d in (f\"1{n>>1:b}\" if n > 1 else \"1\")]\n", "true_binary=lambda n:[1]+[int(c)*2-1 for c in bin(n)[2:-1]]", "import math as m\ndef true_binary(n):\n    c = 1\n    c = m.ceil(m.log(n,2))\n    if c == 0:\n        c = 1\n    n = (n+(2**c-1))//2\n\n    return [(char == '1')*2-1 for char in bin(n)[2:]]", "def true_binary(n):\n    temp=bin(n)[2:]\n    return [1 if i==\"1\" else -1 for i in temp[-1]+temp[:-1]]", "def true_binary(n):\n    temp=bin(n)[2:]\n    res=[]\n    for i in temp[-1]+temp[:-1]:\n        res.append(1) if i==\"1\" else res.append(-1)\n    return res", "def true_binary(n):\n    suma = \"{:0b}\".format(n)\n    ans = [int(suma[0])]\n    for i in range(1,len(suma)):\n        if suma[i-1] == \"0\": ans.append(-1)\n        else: ans.append(1)\n    return ans", "import re\ndef true_binary(n):\n    s = bin(n)[2:]\n    s = re.sub(r'0+1', lambda x: '1' + '0'*(len(x[0])-1), s)\n    return [1 if c == '1' else -1 for c in s]"]