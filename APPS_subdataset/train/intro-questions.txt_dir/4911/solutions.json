["from itertools import zip_longest as zl\n\ndef sum_arrays(arrays, shift):\n    shifted = [[0] * shift * i + arr for i, arr in enumerate(arrays)]\n    return [sum(t) for t in zl(*shifted, fillvalue=0)]", "from itertools import zip_longest\n\ndef sum_arrays(arrays, shift):\n    shifted = [([0] * shift * i) + array for i, array in enumerate(arrays)]\n    return [sum(nums) for nums in zip_longest(*shifted, fillvalue=0)]", "def sum_arrays(arrays, shift):\n    shifted = [ [0]*i*shift + a + [0]*(len(arrays)-i-1)*shift  for i, a in enumerate(arrays)]\n    return list(map(sum, zip(*shifted)))", "def sum_arrays(arr, shift):\n    red = [[], arr][not shift]\n    if shift>0:\n        la = len(arr)\n        l0 = len(arr[0])\n        lr = l0 + (shift * (la-(1)))\n        ret = [0*l0]  * lr\n        for i , x in zip(list(range(0,lr,shift)), list(range(la))) : \n            temp = ret[::]\n            temp[i:l0+i] = arr[x]\n            red.append(temp)\n    return [ sum(a) for a in zip(*red)]\n", "def sum_arrays(arrays, shift):\n    dummy_arr = [ 0 for i in range(len(arrays[0])+(len(arrays)-1)*shift)]\n    modified_arrays = []\n    for i in range(len(arrays)):\n        modified_arrays.append([0 for temp in range(i*shift)])\n        modified_arrays[i] += arrays[i]\n        if len(modified_arrays[i]) < len(dummy_arr):\n            modified_arrays[i] += [0 for temp in range(len(dummy_arr) -len(modified_arrays[i]) )]\n    for i in range(len(dummy_arr)):\n        for arr in modified_arrays:\n            dummy_arr[i] += arr[i]\n        \n    \n    return dummy_arr", "import itertools\n\ndef sum_arrays(arrays, shift):\n    return [sum(xs) for xs in itertools.zip_longest(*[[0] * (shift*i) + a for i, a in enumerate(arrays)], fillvalue=0)]", "from itertools import zip_longest\n\n\ndef sum_arrays(arrays, shift):\n    new_arr = []\n    for i, arr in enumerate(arrays):\n        new_arr.append([0] * shift * i  + arr)\n    return list(map(sum, zip_longest(*new_arr, fillvalue=0)))\n", "def sum_arrays(arrays, shift):\n    m = len(arrays)\n    n = len(arrays[0])\n\n    result = [0] * (n + shift * (m - 1))\n\n    index = 0\n    for a in arrays:\n        for element in a:\n            result[index] += element\n            index += 1\n        index += shift - n\n\n    return result\n", "def sum_arrays(arrays,shift):\n    arrays_new=[arr[:] for arr in arrays]\n    if shift==0:return list(map(sum,zip(*arrays_new)))\n    out=[]\n    i,j=1,1\n    while any(arr for arr in arrays_new):\n        out.append(sum(arr.pop(0) for arr in arrays_new[:i] if arr))\n        if j%shift==0:i+=1\n        j+=1\n    return out", "def sum_arrays(arrays, shift):\n    l = []\n    for i in range(len(arrays)):\n        tmp = i * shift * [0] + arrays[i] + (len(arrays) - i - 1) * shift * [0]\n        l.append(tmp)\n    res = []\n    for i in range(len(l[0])):\n        tmp = sum([ii[i] for ii in l])\n        res.append(tmp)\n    return res    "]