["def extract(arr): return ''.join(arr[:2]+arr[-2:])\n\ndef sort_transform(arr):\n    arr = list(map(chr,arr))\n    w1  = extract(arr)\n    arr.sort()\n    w2  = extract(arr)\n    return f'{w1}-{w2}-{w2[::-1]}-{w2}'", "def as_str(xs):\n    return ''.join(map(chr, xs[:2] + xs[-2:]))\n\ndef sort_transform(arr):\n    return '-'.join([\n        as_str(arr),\n        as_str(sorted(arr)),\n        as_str(sorted(arr, reverse=True)),\n        as_str(sorted(arr)),\n    ])", "def sort_transform(arr):\n    a=chr(arr[0])+chr(arr[1])+chr(arr[-2])+chr(arr[-1])\n    arr.sort()\n    b=chr(arr[0])+chr(arr[1])+chr(arr[-2])+chr(arr[-1])\n    return '-'.join([a,b,b[::-1],b])", "def sort_transform(a):\n  return '-'.join([''.join(map(chr, x[:2]+x[-2:])) for x in [a, sorted(a), sorted(a, reverse=1), sorted(a, key=chr)]])", "def sort_transform(arr):\n    arr  = list(map(chr, arr))\n    srtd = sorted(arr)\n    \n    a = \"\".join(arr[:2] + arr[-2:])\n    b = \"\".join(srtd[:2] + srtd[-2:])\n    \n    return f\"{a}-{b}-{b[::-1]}-{b}\"", "from heapq import nlargest, nsmallest\n\ndef sort_transform(lst):\n    first_last = \"\".join(chr(n) for n in lst[:2] + lst[-2:])\n    small_big = \"\".join(chr(n) for n in nsmallest(2, lst) + nlargest(2, lst)[::-1])\n    return f\"{first_last}-{small_big}-{small_big[::-1]}-{small_big}\"", "def sort_transform(arr):\n  d = lambda x: \"\".join(map(chr,[x[0], x[1], x[-2], x[-1]]))\n  b = d(sorted(arr))\n  return \"-\".join((d(arr), b, d(sorted(arr, reverse=True)), b))", "def sort_transform(a):\n    a = [chr(e) for e in a]\n    r = sorted(a)\n    x = ''.join(r[:2] + r[-2:])\n    return '-'.join([''.join(a[:2]+a[-2:]), x, x[::-1], x])", "def sort_transform(arr):\n    arr_al = sorted([chr(x) for x in arr])\n    return '-'.join([chr(arr[0]) + chr(arr[1]) + chr(arr[-2]) + chr(arr[-1]),\n                     chr(sorted(arr)[0]) + chr(sorted(arr)[1]) + chr(sorted(arr)[-2]) + chr(sorted(arr)[-1]),\n                     chr(sorted(arr, reverse=True)[0]) + chr(sorted(arr, reverse=True)[1]) + chr(sorted(arr, reverse=True)[-2]) + chr(sorted(arr, reverse=True)[-1]),\n                     arr_al[0] + arr_al[1] + arr_al[-2] + arr_al[-1]])", "def fst2_lst2(arr):\n    return chr(arr[0])+chr(arr[1])+chr(arr[-2])+chr(arr[-1])\n    \ndef sort_transform(arr):\n    asc_arr = sorted([chr(n) for n in arr])\n    return fst2_lst2(arr) + '-' + fst2_lst2(sorted(arr)) + '-' + fst2_lst2(sorted(arr, reverse=True)) + '-' + asc_arr[0]+asc_arr[1]+asc_arr[-2]+asc_arr[-1]"]