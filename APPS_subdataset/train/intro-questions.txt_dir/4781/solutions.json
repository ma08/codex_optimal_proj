["import math\n\ndef spider_to_fly(spider, fly):\n    web = {'A': 0, 'B': 45, 'C': 90, 'D': 135, 'E': 180, 'F': 225, 'G': 270, 'H': 315}\n    angle = min(abs(web[spider[0]] - web[fly[0]]), 360 - abs(web[spider[0]] - web[fly[0]]))\n    sideA, sideB = int(spider[1]), int(fly[1])\n    return math.sqrt(sideA ** 2 + sideB ** 2 - 2 * sideA * sideB * math.cos(angle * math.pi / 180))", "from math import cos, pi\n\ndef spider_to_fly(a, b):\n    x, y = int(a[1]), int(b[1])\n    return (x**2 + y**2 - 2 * x * y * cos((ord(a[0]) - ord(b[0])) * pi / 4))**0.5", "def spider_to_fly(spider, fly):\n    from cmath import exp, pi, rect\n    def coordinates(hexpoint):\n        t, r = hexpoint\n        return rect(int(r), 'ABCDEFGH'.index(t) * pi / 4)\n    return abs(coordinates(spider) - coordinates(fly))", "import math as m\nimport string as str\n\ndef spider_to_fly(spider, fly):\n    if (spider == fly):\n        return 0\n    else:\n        angle = get_angle(spider[0], fly[0])\n        s_dist = int(spider[1])\n        f_dist = int(fly[1])\n        return m.sqrt((s_dist**2)+(f_dist**2)-2*s_dist*f_dist*m.cos(m.radians(angle)))\n\n\ndef get_angle(s, f):\n    s_angle = (str.ascii_uppercase.index(s)) * 45\n    f_angle = (str.ascii_uppercase.index(f)) * 45\n    return abs(s_angle - f_angle)", "from math import cos, radians, sin\n\ndef spider_to_fly(spider, fly):\n    (ts, rs), (tf, rf) = ((radians((ord(c) - 65) * 45), int(n)) for c, n in (spider, fly))\n    return ((rs*cos(ts) - rf*cos(tf))**2 + (rs*sin(ts) - rf*sin(tf))**2)**0.5\n", "import math\ndef spider_to_fly(spider, fly):\n    angle_default                 = 45.0 #in degrees\n    list_of_letters               = [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\"]\n    angle_multiplier = abs(list_of_letters.index(spider[0]) - list_of_letters.index(fly[0]))\n    angle = (angle_default * angle_multiplier) * math.pi / 180 #in rads\n    \n    sp_num = int(spider[1])\n    fl_num = int(fly[1])\n    \n    # c = sqrt(a^2 + b^2 - 2ab * 2cos(alpha))\n    answer = math.sqrt(sp_num ** 2 + fl_num ** 2 - sp_num * fl_num * 2 * math.cos(angle))\n    \n    return answer", "from numpy import angle, abs, exp, pi\n\ndef spider_to_fly(*creatures):\n    a, b = (int(x[1]) * exp( -1j * (ord(x[0])-3)/4.0*pi ) for x in creatures)\n    return abs(a-b)\n", "from math import cos, hypot, pi, sin\nfrom string import ascii_uppercase\n\ndef web_to_xy(c):\n    radial, ring = c\n    r = int(ring)\n    angle = ascii_uppercase.find(radial)*pi/4\n    return r*cos(angle), r*sin(angle)\n\ndef spider_to_fly(spider, fly):\n    sx, sy = web_to_xy(spider)\n    fx, fy = web_to_xy(fly)\n    return round(hypot(sx-fx, sy-fy), 6)", "from math import sqrt, cos, radians\n\ndef spider_to_fly(spider, fly):\n    rad = radians((ord(spider[0]) - ord(fly[0])) % 8 * 45)\n    a, b = int(spider[1:]), int(fly[1:])\n    return sqrt(a ** 2 + b ** 2 - 2 * a * b * cos(rad))", "from math import pi,cos\ndef spider_to_fly(spider, fly):\n    a=int(spider[1])\n    b=int(fly[1])\n    return (a*a+b*b-2*a*b*cos((ord(spider[0])-ord(fly[0]))/4*pi))**(0.5)\n"]