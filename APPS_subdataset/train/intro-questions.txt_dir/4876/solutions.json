["def hello(name=''):\n    return f\"Hello, {name.title() or 'World'}!\"", "def hello(name=\"\"):\n    return f\"Hello, {name.capitalize() if name else 'World'}!\"", "def hello(name=None):    \n    if not name:\n        return \"Hello, World!\"\n    return \"Hello, %s!\"%(name.capitalize())", "def hello(name=''):\n    return \"Hello, {}!\".format(name.title() if name else 'World')", "hello = lambda name=\"\": \"Hello, {}!\".format(\"World\" if not name else name.capitalize())", "def hello(name=''):\n    return \"Hello, %s!\" % ['World',name.title()][name!='']", "def hello(name='World'):\n    return 'Hello, {}!'.format(name.capitalize() if name else 'World')", "def hello(name=''):\n    return f\"hello, {name or 'world'}!\".title()", "def hello(name=''):\n    return 'Hello, ' + (name.capitalize() or 'World') + '!'", "def hello(name=\"\"):\n    return \"Hello, \" + name.title()+\"!\" if len(name)>1  else \"Hello, World!\"", "def hello(name: str = \"\") -> str:\n    \"\"\" Get \"Hello, ${name}!\" to a given name, or says \"Hello, World!\" if name is not given. \"\"\"\n    return f\"Hello, {name.title() or 'World'}!\"", "def hello(name=''):\n    return f'Hello, {(name or \"world\").capitalize()}!'\n", "hello = lambda n='': f\"Hello, {n.title() or 'World'}!\"", "def hello(*name):\n    if name:\n        if name[0]:\n            return ('Hello, ' + name[0].title() + '!')\n        else:\n            return 'Hello, World!'\n    else:\n        return 'Hello, World!'", "def hello(name = ''):\n    if name:\n        return f\"Hello, {name[0].capitalize() + name[1:].lower()}!\"\n    else:\n        return \"Hello, World!\"", "def hello(name=None):\n    name = name.capitalize() if name else \"World\"\n    return \"Hello, %s!\"%(name)", "def hello(name='World'):\n    if not name: name = 'World'\n    return f'Hello, {name.title()}!'", "from typing import Optional\n\ndef hello(*args) -> str:\n    \"\"\" Get \"Hello, ${name}!\" to a given name, or says \"Hello, World!\" if name is not given. \"\"\"\n    if args and len(args[0]):\n        name = args[0]\n    else:\n        name = \"world\"\n    return \"Hello, {}!\".format(name.title())", "def hello(*name):\n    if len(name)>0:\n        return \"Hello, \"+name[0].lower().capitalize()+\"!\" if len(name[0])>0 else \"Hello, World!\"\n    return \"Hello, World!\"", "def hello(name=''):\n    if name != \"\":\n        return 'Hello, ' + name.capitalize() + '!'\n    return 'Hello, World!'", "import string\n\ndef hello(name = \"World\"):\n    \n    if name == \"\":\n        return \"Hello, World!\"\n    else:\n        return \"Hello, \" + name.capitalize() + \"!\"\n", "def hello(name=None):\n    try:\n        test = name + str(name)\n        print('No Error')\n    except:\n        name =''\n        print('Error Handled!!!')\n    \n    if name =='' or name == None:\n        new_name = 'World'\n    else:        \n        new_name = ''\n        letter = 0\n        for i in name:\n            if letter == 0 and i.islower:\n                new_name += i.upper()\n            elif letter ==0:\n                new_name += i\n            elif letter > 0 and i.isupper:\n                new_name += i.lower()\n            else:\n                new_name += i\n                \n            letter += 1              \n\n\n    return 'Hello, ' + new_name + '!'\n", "hello = lambda n='', d='World': \"Hello, %s!\" % (n or d).title()", "def hello(name = None):\n    ans = \"\"\n    if name is \"\" or name is None:\n        return \"Hello, World!\"\n    nm = list(name)\n    for i in range(0, len(nm)):\n        if i == 0:\n            ans += nm[i].upper()\n        else:\n            ans += nm[i].lower()\n    return \"Hello, \"+ans+\"!\"\n        \n", "def hello(name = 'World'):\n    return 'Hello, %s!' %(name + int(not bool(name))* 'World').capitalize()", "def hello(name=''):\n    name = str(name)\n    if name == 'None' or len(name) == 0 or name == ' '*len(name):\n        return 'Hello, World!'\n    else:\n        return f'Hello, {name.title()}!'", "def hello(name='World'):\n if len(name) == 0:\n  return 'Hello, World!'\n else:\n  return 'Hello, ' + name.title() + '!'\n    \n   \n \n\n\n\n\n  \n", "def hello(name = ''):\n    if not name:\n        return 'Hello, World!'\n    return f'Hello, {name[0].upper()}{name[1:].lower()}!'", "def hello(name=None):\n    return \"Hello, World!\" if name in [\"\",None] else \"Hello, {}!\".format(name.capitalize())\n", "def hello(name=\"World\"):\n    if name == \"\":\n        name = \"World\" \n    toLower = lambda x : x.lower() if len(x) > 0 else \"\"\n    return \"Hello, \" + name[0].upper() + toLower(name[1:]) + \"!\"", "def hello(name=''):\n    if name != '' or len(name) != 0:\n        name = name.lower() + \"!\"\n        name = \"Hello, \" + name.capitalize()\n        print(name)\n        return name\n    else:\n        return 'Hello, World!'", "def hello(*args):\n    try:\n        name = str(args[0])\n        return \"Hello, \" + name[0].upper() + name[1:].lower() + \"!\"\n    except: \n        return \"Hello, World!\"\n    \n", "def hello(name=''):\n    return 'Hello, World!' if name is None or name == '' else f'Hello, {name.capitalize()}!'", "def hello(name=\"\"):\n    return \"Hello, World!\" if len(name) <= 0 else \"Hello, \"+ name.lower().title() + \"!\"", "def hello(name = 'World'):\n    if not name:\n        return 'Hello, World!'\n    else:\n        return f'Hello, {name.capitalize()}!'\n", "def hello(name=None):\n    return \"Hello, World!\" if name is None or name is '' else (f\"Hello, {name.title()}!\")", "import string;\n\ndef hello(name = ''):\n    \n    if name != '':\n        return ('Hello, ' + (name.lower().capitalize()) + '!');\n    else:\n        return ('Hello, World!');\n", "def hello(name='World'):\n    if name == '':\n        return 'Hello, World!'\n    return 'Hello, {}!'.format(name[:1].upper() + name[1:].lower())", "def hello(name = None):\n    if name:\n        capName = name.capitalize()\n        if capName:\n            return \"Hello, {}!\" .format(capName)\n        else:\n            return \"Hello, World!\" \n    else:\n        return \"Hello, World!\" ", "def hello(name=\"world\"):\n    if name == '':\n        name = 'world'\n    return 'Hello, {}!'.format(name.title())", "def hello(name=''):\n             \n    if not name or name == '':\n        \n        return 'Hello, World!'      \n        \n    elif name:\n        \n        name = name.lower() \n            \n        return f'Hello, {name.title()}!'\n", "def hello(name=\"\"):\n    if len(name) == 0:\n        name = \"World\"\n    return \"Hello, \" + str(name.lower()).capitalize() + \"!\"", "def hello(name=False):\n    return \"Hello, {}!\".format(name.capitalize()) if name else \"Hello, World!\"", "def hello(name=\"\"):\n    if name:\n        name = name.lower().capitalize()\n        return \"Hello, {}!\".format(name)\n    else:\n        return \"Hello, World!\"", "def hello(name = '') -> str:\n    \"\"\"\n    take (str: name) and return 'Hello, {name}!'\n    if no name, return 'Hello, World!'\n    \"\"\"\n    return f\"Hello, {name.title()}!\" if name else \"Hello, World!\"", "def hello(name=\"\"):\n    name = name.lower()\n    name = name.title()\n    if name != \"\":\n        return f\"Hello, {name}!\"\n    else:\n        return f\"Hello, World!\"\n", "def hello(name = 0):\n    if not name:\n        return \"Hello, World!\"\n    else:\n        return \"Hello, \" + name.capitalize() + \"!\"\n", "def hello(name=\"World\"):\n    if not name:\n        return(\"Hello, World!\") \n    else:\n        return(\"Hello, \" + name.capitalize() + \"!\")\n        \nhello()\n   \nhello(\"John\")\n\nhello(\"aLIce\")\n\nhello(\"\")\n\nhello('') ", "def hello(name=0):\n    if name:\n        name = name.title()\n        return f'Hello, {name}!'\n    else:\n        return f'Hello, World!'", "def hello(name='World'):\n    if(name == '' or name == 'World'):\n        return 'Hello, World!'\n    output = name.lower()\n    output = output.split()\n    output2 = output[(len(output)-1)]\n    return 'Hello, ' + output2.capitalize() + '!'\n", "def hello(name = None):\n    if name == \"\" or name == None:\n        return f'Hello, World!'\n    else:\n        return f'Hello, {name.capitalize()}!'\n", "def hello(name=None):\n    if name:\n        a = name.lower() \n        b = a.capitalize()\n        return f\"Hello, {b}!\"\n    elif not name:\n        return \"Hello, World!\"", "def hello(name=''):\n    if len(name) == 0:\n        return 'Hello, World!'\n    ls = list(name)\n    word = True\n    for i in range(len(ls)):\n        word = word and ls[i].isalpha()\n    if word == True:\n        return 'Hello, ' + name[0].upper() + name[1:].lower() + '!'\n\n\n\n\n", "def hello(name='World'):\n  if name:\n    return f'Hello, {name.lower().capitalize()}!'\n  return 'Hello, World!'", "def hello(name=\"\"):\n    if len(name.strip())==0:\n        return \"Hello, World!\"\n    else:\n        a=name.title()\n        return (\"Hello, \"+a+\"!\")", "def hello(name = None):\n    \"\"\" This function returns 'Hello, {Name}!' to a given name or says 'Hello, World!' if name is not given. \"\"\"\n    if name is None or len(name) == 0:\n        return 'Hello, World!'\n    name = name.capitalize()\n    return f'Hello, {name}!'", "def hello(name=\"World\"):\n    return \"Hello, %s!\" % (name.lower().capitalize() if name != \"\" else \"World\")", "def hello(name = False):\n    if name :\n        return \"Hello, \" +name.capitalize() + \"!\"\n    else :\n        return \"Hello, World!\"", "def hello(name = None):\n    if name == '' or name == None:\n        return \"Hello, World!\"\n    else:\n        name = name.lower()\n        name = name.capitalize()\n    \n        return \"Hello, \" + name + \"!\"", "def hello(*name):\n    if(name == ()):\n        return \"Hello, World!\"\n    elif(name[0] == \"\"):\n        return \"Hello, World!\"\n    else:\n         \n        return 'Hello, '+name[0].lower().capitalize()+'!'", "def hello(name= \"World\"):\n    if name =='':\n        return 'Hello, World!'\n    else:\n        name = name.capitalize()\n        return 'Hello, %s!' %(name)\n\n\nprint((hello('John')))\nprint((hello('aLIce')))\nprint((hello()))\nprint((hello(\"\")))\n", "def hello(name = \"World\"):\n    if not name:\n        name = \"World\"\n    return \"Hello, \" + name.lower().capitalize() + \"!\"", "def hello(name = \"World\"):\n    if name == \"\": name = \"World\"\n    name = list(name.lower())\n    name[0] = name[0].upper()\n    return \"Hello, {}!\".format(\"\".join(name))", "def hello(name = ''):\n    if name == \"\" or name == None :\n        return \"Hello, World!\"\n    else:\n        name1 = name.lower()\n        name2 = name1.capitalize()\n        return f\"Hello, {name2}!\" ", "def hello(name=0):\n    return \"Hello, World!\" if not name else \"Hello, {}!\".format(name.capitalize()) \n", "def hello(name=0):\n    if name == \"\" or name == 0:\n        return \"Hello, World!\"\n    else:\n        name = name.lower()\n        name = name.capitalize()\n        return \"Hello, \" + name + \"!\"\n", "def hello(name='World'):\n    if name == None or name == '':\n        return 'Hello, World!'\n    else:\n        return 'Hello, ' + str(name.lower().capitalize()) + '!'", "def hello(name=\"\"):\n    \n    if name != \"\":\n        return f\"Hello, { name.capitalize() }!\"\n    else:\n        return \"Hello, World!\"", "def hello(name=\"World\"):\n    if name == \"\":\n        return \"Hello, World!\"\n\n    else:\n        return f\"Hello, \" + name.title() + \"!\"", "def hello(name=None):\n    if name == None:\n        return 'Hello, World!'\n    elif name == '':\n        return 'Hello, World!'\n    else:\n        name = name.capitalize()\n        return 'Hello, ' + name + '!'\n", "def hello(name = None):\n    if name == None or len(name) < 1: return \"Hello, World!\"\n    return f\"Hello, {name.capitalize()}!\"", "import unittest\n\n\ndef hello(name=None):\n    return 'Hello, {}!'.format(name.capitalize() if name else 'World')\n\n\nclass TestHello(unittest.TestCase):\n    def test_hello_should_return_default_string_with_not_given_name(self):\n        self.assertEqual(hello(None), 'Hello, World!')\n\n    def test_hello_should_return_default_string_with_given_name_is_empty_string(self):\n        self.assertEqual(hello(''), 'Hello, World!')\n\n    def test_hello_with_only_lower_case(self):\n        self.assertEqual(hello('abcde'), 'Hello, Abcde!')\n\n    def test_hello_with_mixed(self):\n        self.assertEqual(hello('aBcDe'), 'Hello, Abcde!')\n", "import unittest\n\nHELLO = 'Hello'\nWORLD = 'World'\nEXCLAMATION_MARK = '!'\nDEFAULT_TEMPLATE = '{}, {}{}'\n\n\ndef hello(name=None):\n\n    def get_hello(word, hello_string=HELLO, exclamation_mark=EXCLAMATION_MARK):\n        return DEFAULT_TEMPLATE.format(hello_string, word, exclamation_mark)\n\n    return get_hello(word=name.title()) if name else get_hello(word=WORLD)\n\n\nclass TestHello(unittest.TestCase):\n    def test_hello_should_return_default_string_with_not_given_name(self):\n        self.assertEqual(hello(None), 'Hello, World!')\n\n    def test_hello_should_return_default_string_with_given_name_is_empty_string(self):\n        self.assertEqual(hello(''), 'Hello, World!')\n\n    def test_hello_with_only_lower_case(self):\n        self.assertEqual(hello('abcde'), 'Hello, Abcde!')\n\n    def test_hello_with_mixed(self):\n        self.assertEqual(hello('aBcDe'), 'Hello, Abcde!')\n", "def hello(name = ''):\n    if name == '' or type(name) != str:\n        return 'Hello, World!'\n    else:\n        final_name = name[0].upper() + name[1:].lower()\n        return 'Hello, ' + final_name + '!'", "def hello(name=None):\n    return f\"hello, {name or 'world'}!\".title()", "def hello(name=\"\"):\n    if name == \"\":\n        name=\"World\"\n    name = name[0].upper() + name[1:].lower()\n    return f\"Hello, {name}!\"", "def hello(name=None):\n    if name is None:\n        return 'Hello, World!'\n    elif name == '':\n        return 'Hello, World!'\n    else:\n        lower_name = name.lower()\n        cap_name = lower_name.capitalize()\n        return 'Hello, '+ cap_name + '!'\n", "\n\ndef hello(name='World'):\n    if len(name) < 1:\n        name = 'World'\n    return f\"Hello, {name.title()}!\"\n        \n", "def hello(name=''):\n    if name == '':\n        return 'Hello, World!'\n    else:\n        name = name = ''.join(w[0].upper() + w[1:].lower() for w in name.split())\n        return f'Hello, {name}!'\n", "def hello(name=''):\n    if name != '':\n        return f\"Hello, {name.title()}!\"\n    else:\n        return f\"Hello, World!\"\n", "def hello(name = 'World'):\n    name = name.lower()\n    return 'Hello, ' + name.title() + '!' if name != '' else 'Hello, World!'", "\ndef hello(name=''):\n    \n\n\n    if name == None or name == '':\n        return f'Hello, World!'\n    else:    \n        name = name.lower()\n        name = name.capitalize()\n        return f'Hello, {name}!'\n", "def hello(name = None):\n    if name == None or name ==\"\":\n        return \"Hello, World!\"\n    else:\n        name = name.lower()\n        name = name.capitalize()\n    return f\"Hello, {name}!\"\n", "def hello(name='World'):\n    if len(name)==0:\n        return \"Hello, World!\"\n    retval = ''\n    for i in range(len(name)):\n        if i==0:\n            retval += name[i].upper()\n\n        else:\n            retval += name[i].lower()\n    return f\"Hello, {retval}!\"", "def hello(name='World'):\n    # I don't understand why 'World' default name doesn't work here (it does locally), so I neet to add those two lines\n    if not name:\n        name = 'World'\n    return 'Hello, ' + name.title() + '!'", "def hello(name=\"\"):\n    return \"Hello, {}\".format(name[0].upper()+name[1:].lower()+\"!\") if len(name) > 0 else \"Hello, World!\"", "def hello(name=\"\"):\n    return \"Hello, {}!\".format((name or \"World\").title())", "hello = lambda n = \"World\": \"Hello, %s!\" % (n.capitalize() if n != \"\" else \"World\")", "def hello(name = 'World'):\n    if name == '': \n        name = 'World'\n    return \"Hello, {}!\".format(name.lower().capitalize())", "def hello(name = \"\"):\n    if name != \"\":\n        name = name.capitalize()\n        return (\"Hello, %s!\" % name)\n    else:\n        return \"Hello, World!\"\n    pass", "def hello(name='World'):\n    if name in ('', ' '):\n        name = 'World'\n    return(f'Hello, {name.title()}!')", "def hello(name=''):\n    name = name.capitalize()\n    if name == '':\n        return (\"Hello, World!\")\n    else:\n        return (\"Hello, {}!\".format(name))", "def hello(name=''):\n    if name =='':\n        txt = 'Hello, World!'\n        return txt\n    elif len(name) == 1:\n        naam = name.upper()\n        txt = f'Hello, {naam}!'\n    elif len(name) > 1:\n        naam = name[0].upper() + name[1:].lower()\n        txt = f'Hello, {naam}!'\n    else:\n        txt = 'Hello, World!'\n        return txt\n    return txt\n", "def hello(name = 'World'):\n    return 'Hello, ' + (f'{name.lower().title()}!' if name else 'World!')", "def hello(name = ''):\n    if(name != ''):\n        return \"Hello, \" + name.lower().title() + \"!\"\n    return \"Hello, World!\"", "def hello(name = \"\"):\n    n = name.lower().capitalize()\n    if len(name) == 0:\n        return \"Hello, World!\"\n    else:\n        return \"Hello, {}!\".format(n)", "def hello(name=None):\n    if name: return f\"Hello, {name.lower().title()}!\"\n    else: return f\"Hello, World!\"\n", "def hello(name=\"\"):\n    return f\"Hello, {(name.lower().title() if name else 'World')}!\"", "def hello(name=''):\n    return \"Hello, World!\" if name == '' else \"Hello, \"+ name[0].upper() + name[1:len(name)].lower() + \"!\"\n", "def hello(name = \"World\"):    \n    #check if we passed empty string ''\n    if len(name) == 0: \n        return \"Hello, World!\"\n    else:        \n        new_name = name[0].upper() + name[1:].lower()\n        return \"Hello, \" + new_name + \"!\"\n\n"]