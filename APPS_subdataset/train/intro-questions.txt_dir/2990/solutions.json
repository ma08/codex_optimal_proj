["def monty_hall(door, guesses):\n    return round(100.0 * (len(guesses)-guesses.count(door))/len(guesses))", "def monty_hall(c, p):\n    print((c, p))\n    return round((1 - (p.count(c) / len(p))) * 100)\n    # Your code here!\n", "def monty_hall(correct, guesses):\n    return round(sum([correct != x for x in guesses]) / len(guesses) * 100)", "def monty_hall(correct_door_number, participant_guesses):\n    return round(100 * sum(1 for x in participant_guesses if x != correct_door_number) / len(participant_guesses))", "def monty_hall(correct_door_number, participant_guesses):\n    winners=0\n    for x in participant_guesses:\n        if x != correct_door_number:\n            winners+=1\n    return(round((winners / len(participant_guesses))*100))", "def monty_hall(cdoor, pguesses):\n    pick_cdoor=1-pguesses.count(cdoor)/len(pguesses)\n    return round(pick_cdoor*100)\n", "from statistics import mean\n\ndef monty_hall(correct_door_number, participant_guesses):\n    return round(mean([100 if p != correct_door_number else 0 for p in participant_guesses]))", "def monty_hall(correct, guesses):\n    return round(100-100.0*guesses.count(correct)/len(guesses))", "def monty_hall(correct, guess):\n    return int(round((sum(1 for i in guess if i != correct))/len(guess), 2) * 100)\n", "def monty_hall(x,a):\n    return round(100*sum(1 for i in a if i!=x)/len(a))"]