["def diagonal_sum(array):\n    return sum(row[i] for i, row in enumerate(array))", "from numpy import trace as diagonal_sum", "def diagonal_sum(array):\n    \n    return sum([array[a][a] for a in range(len(array))])", "def diagonal_sum(array):\n    return sum( row[idx] for idx, row in enumerate(array) )", "def diagonal_sum(array):\n    return sum([array[x][x] for x in range(0,len(array))])\n", "def diagonal_sum(array):\n     sum=0\n     for x in range(len(array)):\n          for y in range(len(array[x])):\n               if x==y:\n                  sum=sum+array[x][y]\n     return(sum)", "def diagonal_sum(array):\n    return sum([row[i] for i, row in enumerate(array)])", "def diagonal_sum(a):\n    return sum(l[i] for i, l in enumerate(a))", "def diagonal_sum(array):\n    return sum(line[i] for i, line in enumerate(array))", "def diagonal_sum(array):\n    sum = 0\n    for n in range(len(array)):\n        sum += array[n][n]\n    return sum"]