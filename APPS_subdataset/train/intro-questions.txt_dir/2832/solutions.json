["def array_equalization(a, k):\n    totals, ends = {}, {}\n    for i, n in enumerate(a):\n        if n not in ends: totals[n], ends[n] = 0, -1\n        if i < ends[n]: continue\n        count = (i - ends[n] - 1 + k - 1) // k\n        totals[n] += count\n        ends[n] = max(i, ends[n] + count * k)\n    return min(t + (len(a) - ends[n] - 1 + k - 1) // k\n               for n, t in totals.items() if ends[n] < len(a))", "def array_equalization(a, k):\n    keys = set(a)\n    ans = []\n    for x in keys:\n        i = 0\n        c = 0\n        while i < len(a):\n            if a[i] == x:\n                i += 1\n            else:\n                c += 1\n                i += k\n        ans.append(c)\n    return min(ans)", "def array_equalization(a, n):\n        MIn, l = [], len(a)\n        for X in a:\n            i, pa, c = 0, a[:], 0\n            while i < len(pa):\n                if pa[i] != X:\n                    pa[i:i + n] = [X] * min(n,l)\n                    c += 1\n                i += 1\n            MIn.append(c)\n        return min(MIn)", "def array_equalization(a, k):\n  sum = {}\n  for i, n in enumerate(a):\n      arr = sum.get(n)\n      if not arr:\n          sum[n] = [i]\n      else:\n          sum[n].append(i)\n  print((list(sum.values())))\n          \n  times_arr = []\n  for arr in list(sum.values()):\n      i = 0\n      pos = 0\n      times = 0\n      while 1:\n          if i >= len(arr) or pos < arr[i]:\n              pos += k\n              times += 1\n          elif pos == arr[i]:\n              pos += 1\n              i += 1\n          else:\n              i += 1\n          if pos >= len(a):\n              break\n      times_arr.append(times)\n      \n  return min(times_arr)\n", "def array_equalization(a, k):\n    min_ = float(\"inf\")\n    for x in set(a):\n        count = 0\n        i = 0\n        while i < len(a):\n            if a[i] != x:\n                count += 1\n                i += k\n            else:\n                i += 1 \n        min_ = min(count, min_)\n    return min_\n", "def array_equalization(a, k):\n    n, r = len(a), len(a)\n    for x in set(a):\n        i, t = 0, 0\n        while i < n:\n            if a[i] != x:\n                t += 1\n                i += k\n            else:\n                i += 1\n        r = min(r, t)\n    return r", "def array_equalization(a, k):\n    counter = 0\n    arr = []\n    m = 0\n    print(a, k)\n    for x in range(11):\n        m = x\n        lst = a.copy()\n        counter = 0\n        for i in range(len(lst)):\n            if lst[i] != m and i + k <= len(lst):\n                counter += 1\n                for j in range(i, i + k):\n                    if lst[j] != m:\n                        lst[j] = m\n            elif lst[i] != m and i + k > len(lst):\n                counter += 1\n                for j in range(i, len(lst)):\n                    if lst[j] != m:\n                        lst[j] = m\n        arr.append(counter)\n        \n        \n    return min(arr)", "def array_equalization(a, k):\n    l_a=len(a)\n    if k>=l_a-1:\n        return 1\n    sa=set(a)\n    times_list=[]\n    for i in sa:\n        templs=[]\n        times = 0\n        for j in range(0,l_a):\n            if (j>0 and j ==len(templs)) or j==0 :\n                if a[j] == i:\n                    templs.append(i)\n                else:\n                    templs+=[i]*k\n                    times+=1\n        times_list.append([times])\n    return min(times_list)[0]", "def array_equalization(a, k):\n    m = n = len(a)\n    for number in set(a):\n        c = 0\n        i = 0\n        while i < n:\n            if a[i] != number:\n                c += 1\n                i += k\n            else:\n                i += 1\n        m = min(c,m)\n    return m", "from collections import Counter\n\ndef array_equalization(a, k):\n    n = len(a)\n    freq = Counter(a)\n    m = n\n    for number in freq.keys():\n        c = 0\n        i = 0\n        while i < len(a):\n            if a[i] != number:\n                c += 1\n                i += k\n            else:\n                i += 1\n        m = min(c,m)\n    return m"]