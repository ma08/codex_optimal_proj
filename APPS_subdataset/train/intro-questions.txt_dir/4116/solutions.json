["def is_audio(filename):\n    name, ext = filename.split('.')\n    return name.isalpha() and ext in {'mp3', 'flac', 'alac', 'aac'}\n\n\ndef is_img(filename):\n    name, ext = filename.split('.')\n    return name.isalpha() and ext in {'jpg', 'jpeg', 'png', 'bmp', 'gif'}", "import re\ndef is_audio(file_name):\n    return bool(re.match(r'^[A-Za-z]+\\.(mp3|flac|alac|aac)$', file_name))\n\ndef is_img(file_name):\n    return bool(re.search(r'^[A-Za-z]+\\.(jpg|jpeg|png|bmp|gif)$', file_name))", "import re\n\n\nhas_ext = lambda p: (lambda f: bool(re.match(fr\"[a-zA-Z]+\\.({p})$\", f)))\n\nis_audio = has_ext(\"mp3|([fa]l|a)ac\")\nis_img = has_ext(\"jpe?g|png|bmp|gif\")\n", "import re\n\n\ndef is_audio(filename):\n    return bool(re.match(r\"[a-zA-Z]+\\.(mp3|([fa]l|a)ac)$\", filename))\n\n\ndef is_img(filename):\n    return bool(re.match(r\"[a-zA-Z]+\\.(jpe?g|png|bmp|gif)$\", filename))", "import re\n\ndef is_audio(file_name):\n    return bool(re.search(r'^[A-Za-z]+\\.(mp3|flac|alac|aac)$', file_name))\n\ndef is_img(file_name):\n    return bool(re.search(r'^[A-Za-z]+\\.(jpg|jpeg|png|bmp|gif)$', file_name))", "import re\ndef is_audio(file_name):\n  return bool(re.match(r'[a-zA-Z]+(\\.(mp3|flac|alac|aac))',file_name))\n\ndef is_img(file_name): \n  return bool(re.match(r'[a-zA-Z]+(\\.(jpg|jpeg|png|bmp|gif))',file_name))", "import re\n\n\ndef is_audio(file_name):\n    return bool(re.match('[A-Za-z]+\\.(?:mp3|flac|alac|aac)$', file_name))\n\n\ndef is_img(file_name):\n    return bool(re.match('[A-Za-z]+\\.(?:jpg|jpeg|png|bmp|gif)$', file_name))", "c = lambda x,f: bool(__import__('re').match(r'([a-zA-Z]+\\.({}))'.format(\"|\".join(x)),f))\nis_audio=lambda f:c(['mp3','flac','alac','aac'],f)\nis_img=lambda f:c(['jpg','jpeg','png','bmp','gif'],f)", "match = lambda file_name, exts: [name.isalpha() and ext in exts for name, ext in [file_name.rsplit('.', 1)]][0]\nis_audio = lambda file_name: match(file_name, ['mp3', 'flac', 'alac', 'aac'])\nis_img = lambda file_name: match(file_name, ['jpg', 'jpeg', 'png', 'bmp', 'gif'])", "import re\n\ndef make_matcher(exts):\n    def match(s):\n        name, ext = s.split('.')\n        return name.isalpha() and ext in exts\n    return match\n\nis_audio = make_matcher('mp3 flac alac aac'.split())\n\nis_img = make_matcher('jpg jpeg gif png bmp'.split())"]