["import math\ndef is_pronic(n):\n    return n >= 0 and math.sqrt(1 + 4 * n) % 1 == 0", "import math\n\n\ndef is_pronic(n):\n    \"\"\"Return True if given number is pronic, else False.\"\"\"\n    if n == 0: return True\n    if n < 0: return False\n    first_int = int(math.sqrt(n))\n    second_int = first_int + 1\n    return first_int * second_int == n\n", "def is_pronic(n):\n    if n < 0:\n        return False\n    s = int(n**0.5)\n    return s * (s + 1) == n\n", "is_pronic = lambda n: n >= 0 and (1 + 4 * n) ** .5 % 1 == 0", "def is_pronic(n):\n    return n >= 0 and int(n**0.5)*(int(n**0.5)+1) == n", "pronics = {i * (i+1) for i in range(1000)}\n\ndef is_pronic(n):\n    return n in pronics", "import math\ndef is_pronic(n):\n    if n < 0: \n        return False\n    a = int(math.sqrt(n))\n    return a*(a+1) == n\n", "def is_pronic(n):\n    return n >= 0 and ((n**0.5 + 1) // 1) * (n**0.5 // 1) == n"]