["def find_longest(xs):\n    return max(xs, key=lambda x: len(str(x)))", "def find_longest(arr):\n    return max(arr, key=lambda x: len(str(x)))", "def find_longest(arr):\n    #your code here\n    max_lenght = 0\n    max_index = 0\n    for cur_num in arr:\n        lenght = len(str(cur_num))\n        if lenght > max_lenght:\n            max_lenght = lenght\n            max_index = arr.index(cur_num)\n    return arr[max_index]", "def find_longest(arr):\n    arr.sort(reverse=True) \n    return arr[0]", "def find_longest(arr):\n    e = [len(str(i)) for i in arr]\n    return arr[e.index(max(e))]", "def find_longest(arr):\n    _len_arr = []\n    for i in arr:\n        _len_arr.append(len(str(i)))\n    return arr[_len_arr.index(max(_len_arr))]\n", "def find_longest(arr):\n    return next(s for s in arr if len(str(s)) == len(str(max(arr))))", "def find_longest(arr):\n    return [i for i in arr if len(str(i)) == len(str(max(arr)))][0]", "from math import log10\n\ndef find_longest(arr):\n    return max(arr,key=lambda n:int(log10(n)))", "def find_longest(arr):\n    #your code here\n    newArray = list(map(str, arr))\n    return int(max(newArray, key=len))\n", "from math import log10\nfrom operator import itemgetter\n\n\ndef find_longest(arr):\n    return max(list(zip((int(log10(a)) for a in arr), arr)), key=itemgetter(0))[1]\n", "def find_longest(arr):\n    max_digits = arr[0]   \n    for i in range(1, len(arr)):\n        if len(str(arr[i])) > len(str(max_digits)):\n            max_digits = arr[i]\n    return max_digits", "def find_longest(arr):\n    longest = 0\n    result = 0\n    for item in arr:\n        if len(str(item)) > longest:\n            longest = len(str(item))\n            result = item\n            \n    return result", "def find_longest(arr):\n    max = -1\n    result = 0\n    for num in arr:\n      l = len(list(str(num)))\n      if l > max:\n        max = l\n        result = num\n    return result\n", "def find_longest(arr):\n    return max(arr, key=lambda n: len(str(n)))", "def find_longest(arr):\n    largest = 0\n    for i in range(len(arr)):\n        a = arr[i]/10\n        x = 1\n        while a > 1:\n            a = a/10\n            x += 1\n        if x > largest:\n            largest = x\n            largestVal = arr[i]\n    return largestVal", "from functools import reduce\n\ndef find_longest(arr):\n    return reduce((lambda max, cur: cur if len(str(cur)) > len(str(max)) else max ), arr)", "# Negative available\n\ndef find_longest(arr):\n    return max(arr, key=lambda x: int(__import__('math').log10(abs(x))))\n\n# def find_longest(arr):\n#     return max(arr, key=lambda x: len(str(abs(x))))\n", "def find_longest(arr):\n    l = list(map(str,arr))\n    return int(sorted(l, key=lambda x :(len(str(x)),-l.index(x)) )[-1])", "def find_longest(arr):\n    result = str(arr[0])\n    for i in range(len(arr)):\n        if len(str(arr[i])) > len(result):\n            result = str(arr[i])\n    return int(result)", "def find_longest(arr):\n    return int(max([str(n) for n in arr], key=len))", "find_longest = lambda arr: int(max([str(i) for i in arr], key=len))", "def find_longest(arr):\n    return int(max(map(str, arr), key=len))", "def find_longest(arr):\n    return int(max([str(number) for number in arr],key=len))", "def find_longest(arr):\n   weishu = [1]\n   for number in arr:\n       count = 0\n      # print(number)\n      # number = int(number)\n       while number != 0:\n           number = number // 10\n           #print(number)\n           count = count + 1\n       #print(count)\n      # print(weishu)\n       weishu.append(count)\n       #print(weishu)\n   a = max(weishu)\n   #print(a)\n  #print(arr)\n   for number1 in arr:\n        number = number1\n        count = 0\n       # number = int(number)\n        while number != 0:\n           number = number // 10\n           count = count + 1\n        print(count)\n        if count  == a:\n          return number1", "def find_longest(arr):\n    max_len = 0\n    for i in arr:\n        if len(str(i)) > max_len:\n            max_len = len(str(i))\n            max_num = i\n    return max_num\n", "def find_longest(arr):\n    return sorted(list(map(lambda x:(len(str(x)),x), arr)), key=lambda x:-x[0])[0][1]", "def find_longest(arr):\n    return list(filter(lambda x: len(str(x)) == len(str(max(arr))), arr))[0]", "def find_longest(arr):\n    max = len(str(sorted(arr)[-1]))\n    return list(filter(lambda x: len(str(x)) == max, arr))[0]", "from math import floor, log10\n\ndef find_longest(arr):\n    digits = lambda a: floor(log10(a))\n    return max(arr, key=digits)", "def find_longest(arr):\n    biggest = arr[0]\n    for num in arr:\n        if len(str(num)) > len(str(biggest)):\n            biggest=num\n    return biggest", "def find_longest(arr):\n    b = 0\n    result = 0\n    for i in arr:\n        if len(str(i)) > b:\n            b = len(str(i))\n            result = i\n    return (result)\n", "def find_longest(arr):\n    r = [len(str(x)) for x in arr]\n    return arr[r.index(max(r))]", "def find_longest(arr):\n    box = []\n    base = 0\n    for i,x in enumerate(arr):\n        for j in str(x):\n            box.append(j)\n            if len(box) > base:\n                base = len(box)\n                result = i\n        box.clear()\n    return arr[result]", "def find_longest(arr):\n    box=[]\n    position=0\n    base=0\n    for i,e in enumerate(arr):\n        for j in str(e):\n            box.append(j)\n        if len(box)>base:\n            base=len(box)\n            result=i\n        box.clear()\n    return arr[result]\n", "def find_longest(arr):\n    list1 = []\n    for i in arr:\n        x = str(i)\n        z = len(x)\n        list1.append(z)\n        y = list1.index(max(list1))\n    return arr[y]\n", "def find_longest(arr):\n    realnum=0\n    for item in arr:\n        if len(str(item))>len(str(realnum)):\n            realnum=item\n    return realnum", "def find_longest(arr):\n    mn = ln = -1\n    for n in arr:\n        l = len(str(n))\n        if l > ln:\n            mn, ln = n, l\n    return mn", "def find_longest(arr):\n    arr.sort(reverse=True)\n    return max(arr)\n", "def find_longest(arr):\n    a=sorted(arr,key=lambda x: len(str(x)))\n    for i in a:\n        if len(str(i))==len(str(a[-1])):\n            return i", "def find_longest(arr):\n    length=[]\n    for i,v in enumerate(arr): \n        length.append([len(str(v)),i])\n        \n    multiple=[]\n    for z in length: \n        if z[0]==sorted(length)[-1][0]:\n            multiple.append(z)\n    \n    \n    return arr[multiple[0][1]]", "def find_longest(arr):\n    res = ''\n    for i in arr:\n        if len(str(res)) < len(str(i)):\n            res = i\n    return res", "def find_longest(arr):\n    counter = 0\n    number = 0\n    for n in arr:\n        str_n = str(n)\n        if len(str_n) > counter:\n            counter = len(str_n)\n            number = n\n    return number ", "def find_longest(arr):\n    convert = 0\n    for i in arr:\n        if len(str(i)) == len(str(max(arr))):\n            convert = i\n            break\n    return convert", "def find_longest(arr):\n    lst = []\n    empty = []\n    for i in arr:\n        i = str(i)\n        lst.append(len(i))\n    for j in lst:\n        empty.append(j)\n    empty.sort()\n    maxvaldig = empty[-1]\n    if empty.count(maxvaldig) > 1:\n        index = lst.index(maxvaldig)\n        realmaxval = arr[index]\n    else:\n        index = lst.index(maxvaldig)\n        realmaxval = arr[index]\n        \n    return realmaxval", "def find_longest(arr):\n    \n    d = {}\n    \n    for i in range(0,len(arr)):\n    \n        z = [int(x) for x in str(arr[i])]\n        \n        l = len(z)\n        \n        s = [str(j) for j in z]\n        \n        p = int(\"\".join(s))\n        \n        d.update({p:l})\n        \n    m = max(d,key=d.get)\n        \n    return m\n        \n", "def find_longest(arr):\n    highest_len = 0\n    highest_len_name = 0\n    for i in arr:\n        if len(str(i)) > highest_len:\n            highest_len = len(str(i))\n            highest_len_name = i\n\n\n    return highest_len_name", "def find_longest(arr):\n    print(len(str(arr[0])))\n    res = []\n    for i in arr:\n        res.append(len(str(i)))\n    return arr[res.index(sorted(res,reverse=True)[0])]", "def find_longest(arr):\n    mx = 0\n    for n in arr:\n        if len(str(n)) > len(str(mx)): mx = n\n    return mx", "def find_longest(arr):\n    arr_str = map(str, arr)\n    res = max(arr_str, key=len)\n    \n    return int(res)", "def find_longest(l):\n    m,c = max(list(map(lambda x: len(str(x)),l))),0\n    for i in list(map(lambda x: len(str(x)),l)):\n        if i == m:\n            return l[c]\n        c += 1", "def find_longest(arr):\n    lst = []\n    for item in arr:\n        lst.append(str(item))\n    return int(max(lst,key=len))", "def find_longest(arr):\n    convert = []\n    for num in arr:\n        convert.append(str(num))\n    return int(sorted(convert, key=len, reverse=True)[0])", "def find_longest(arr):\n    return [i for i in arr if len(str(i)) >= len(str(max(arr)))][0]", "def find_longest(arr):\n    longest = 0\n    number = 0\n    for i in arr:\n        if len(str(i)) > longest:\n            longest = len(str(i))\n            number = i\n    return number", "def find_longest(arr):\n    return [x for x in arr if len(str(x)) == len(str(sorted(arr)[-1]))][0]", "def find_longest(arr):\n    for i in arr:\n        if len(str(i)) >= len(str(max(arr))):\n            return i\n", "def find_longest(arr):\n    a = max(arr)\n    for i in range(len(arr)):\n        if len(str(arr[i])) == len(str(a)):\n            return  arr[i]", "find_longest=lambda a :max(a, key=lambda n :len(str(n)))", "def find_longest(arr):\n    length = 0\n    noomber = 0\n    for x in arr:\n        if length < len(str(x)):\n            noomber = x\n            length = len(str(x))\n    return noomber", "def find_longest(arr):\n    for i in sorted(arr, key=lambda x: len(str(x))):\n        if len(str(i)) == max(len(str(i)) for i in arr):\n            return i", "def find_longest(arr):\n    arr = [str(i) for i in arr]\n    L = len(max(arr,key=len))\n    return int([i for i in arr if len(i) == L][0])", "def find_longest(arr):\n    for i in arr:\n        if len(str(i))==max(len(str(i)) for i in arr):\n            return i", "def find_longest(arr):\n    l=0\n    a=0\n    ind=0\n    for i in range(len(arr)):\n        a=str(arr[i])\n        if l<len(a):\n            l=len(a)\n            ind=i\n    return arr[ind]", "def find_longest(arr):\n    s_arr = []\n    for i in arr:\n        s_arr.append(str(i))\n    number = max(s_arr, key=len)\n    return int(number)", "def find_longest(arr):\n    \"\"\"This functino finds the first number with the most digits\"\"\"\n    #for loop to iterate over numbers in list arr\n    max_length = 0\n    max_index = 0\n    for cur_num in arr:\n        length = len(str(cur_num))\n        if length > max_length:\n            max_length = length\n            max_index = arr.index(cur_num)\n    return arr[max_index]", "def find_longest(arr,high=''):\n    for x in arr:\n        s = str(x)\n        if len(s) > len(high): \n            high = s\n\n    return int(high)", "def find_longest(arr):\n    arr = list(map(str,arr))\n    sorted_arr = sorted(arr,key=len,reverse=True)\n    return int(sorted_arr[0])", "def find_longest(arr):\n    m=len( str   (max(arr)))\n    for x in arr:\n        if len(str(x))==m:\n            return x", "def find_longest(arr):\n    max = len(str(arr[0]))\n    max_a = arr[0]\n    for a in arr:\n        print(a)\n        if len(str(a)) > max:\n            max = len(str(a))\n            max_a = a\n            \n    return max_a", "def find_longest(arr):\n    #your code here\n\n    string_array = [str(num) for num in arr]\n    max_length = -1\n    for ele in string_array:\n        if len(ele) > max_length:\n            max_length = len(ele)\n            result = ele\n    return int(result)", "def find_longest(arr):\n    return arr[[len(str(element)) for element in arr].index(max([len(str(element)) for element in arr]))]", "def find_longest(arr):\n    l = [len(str(a)) for a in arr]\n    return arr[l.index(max(l))]", "def find_longest(arr):\n    mostDigits = arr[0]\n    for i in range(1, len(arr)):\n        if len(str(arr[i])) > len(str(mostDigits)):\n            if arr[i] > mostDigits:\n                mostDigits = arr[i]\n    \n    return mostDigits", "def find_longest(arr):\n    ln = 0 \n    index = 0\n    for i in arr : \n        listln =len(str(i))\n        if listln>ln:\n            ln = listln\n            index = arr.index(i)\n    return arr[index]\n\n", "def find_longest(a):\n    return sorted([x for x in a],key=lambda x:-len(str(x)))[0]", "def find_longest(arr):\n    helper_len = arr[0]\n    for i in arr:\n        if len(str(i)) > len(str(helper_len)):\n            helper_len = i\n    return int(helper_len)\n    #your code here\n", "import math\ndef find_longest(arr):\n    x = arr[0]\n    for each in arr:\n        if len(str(each)) > len(str(x)):\n            x = each\n    return x", "def find_longest(arr):\n    result = str(arr[0])\n    print(result)\n    for i in range(len(arr)):\n        if len(str(arr[i])) > len(result):\n            result = str(arr[i])\n    return int(result)\n    \n\n        \n", "def find_longest(arr):\n    listofstrings = [str(item) for item in arr]\n    longest = max(listofstrings, key=len)\n    longestToInt = int(longest)\n    return longestToInt", "def find_longest(arr):\n    m = 0\n    ml = 0\n    for i in arr:\n        l = len(str(i))\n        if l > ml:\n            ml = l\n            m = i\n    return m\n", "def find_longest(arr):\n    max_len = 0\n    for el in arr:\n        if len(str(el)) > max_len:\n            max_len = len(str(el))\n    for el in arr:\n        if len(str(el)) == max_len:\n            return el", "def find_longest(arr):\n    #first we have to check every item of the list\n    #variable to store the bigest number\n    longest_item = 0\n    # we will use it to iterate through the list\n    i = 0\n    while i < len(arr):\n        #if the size of the int stored in the variable is smaller than the tested one, the tested one will replace it.\n        if len(str(longest_item)) < len(str(arr[i])):\n            longest_item = arr[i]\n            i += 1\n        #else it will just loop\n        else :\n            i += 1\n    # second we have to return this value\n    return longest_item\n            \n    \n    \n        \n    #your code here\n", "def find_longest(arr):\n    for x in arr:\n        if x == max(arr, key = lambda n: len(str(n))):\n            return x", "def find_longest(arr):\n    str_lst =  (list(map(str,arr)))\n    l=[]\n    for i in str_lst:\n        l.append(len(i))\n    return arr[l.index(max(l))]", "def find_longest(arr):\n    x = ''\n    \n    for i in arr:\n        if len(str(i)) > len(x):\n            x = str(i)\n    return int(x)", "def find_longest(arr):\n    arr=[str(i) for i in arr]\n    m_len=lambda x:len(x)\n    return int(max(arr,key=m_len))", "def find_longest(arr):\n    #your code here\n    res = 0\n    answer = 0\n    for el in arr:\n        max_len = len(str(el))\n        if res < max_len:\n            res = max_len\n            answer = el\n    return answer", "def find_longest(arr):\n    max = 0\n    t = 0\n    for i in arr:\n        if len(str(i)) > max:\n            max = len(str(i))\n            t = i\n        else:\n            continue\n    return t", "def find_longest(arr):\n    longest_len = 0\n    longest = None\n    for el in arr:\n        sample_len = len(str(el))\n        if sample_len > longest_len:\n            longest_len = sample_len\n            longest = el\n    return longest\n", "def find_longest(arr):\n    ml = len(str(max(arr)))\n    return next(x for x in arr if len(str(x))==ml)", "def find_longest(arr):\n    m = 0\n    for i in arr:\n        if len(str(i))>len(str(m)):\n            m = i\n    return m", "def find_longest(arr):\n    number = 0\n    length = 0\n    for x in arr:\n      if len(str(x)) > length:\n        length = len(str(x))\n        number = x\n    return number", "def find_longest(arr):\n    digit_lengths = list(map(lambda x: len(str(x)), arr))\n    return arr[\n        digit_lengths.index(max(digit_lengths))\n    ]", "def find_longest(arr):\n    m= max(len(str(n)) for n in arr)\n    for x in arr:\n        if len(str(x))==m:\n            return x", "def find_longest(arr):\n    most_digits = arr[0] # value of index of given array starts with the first entry\n    for i in arr:\n        if len(str(i)) > len(str(most_digits)): # if next entry has larger len(str())\n            most_digits = i # array index is replaced with new index where number with more digits appears\n    return most_digits", "def find_longest(arr):\n    ret = arr[0]\n    for x in arr:\n        if len(str(x)) > len(str(ret)):\n            ret = x\n    return ret", "def find_longest(arr):\n    \n    copy = list(arr)\n    i = 0\n    while i < len(copy):\n        copy[i] = len(str(copy[i]))\n        i = i + 1\n    maximum = max(copy)\n    index = copy.index(maximum)\n    \n    return arr[index]", "def find_longest(arr):\n    i = 0\n    max_len = arr[0]\n    while i != len(arr):\n        if len(str(arr[i])) > len(str(max_len)):\n            max_len = arr[i]\n        i += 1\n    return max_len", "def find_longest(arr):\n    f = 0\n    res = 0\n    for i in arr:\n        if (i//10**f != 0 and i > res):\n            res = i\n            while (i//10**f != 0):\n                f += 1\n    return res"]