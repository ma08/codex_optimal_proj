["def pyramid(n):\n    return [[1]*x for x in range(1, n+1)]", "def pyramid(n):\n    return [ [1] * i for i in range(1, n+1) ]", "def pyramid(n):\n    result = []\n    for i in range (1, n + 1):\n        result.append(i * [1])\n    return result", "pyramid=lambda n:[-~i*[1]for i in range(n)]", "def pyramid(n):\n    res = []\n    if n != 0:\n        for i in range(1,n+1):\n            res.append([1 for x in range(i)])\n    return res", "def pyramid(n):\n    \n    A = list()\n    \n    for i in range(1, n + 1):\n    \n        a = list()\n        \n        for j in range(i): a.append(1)\n        \n        A.append(a)\n        \n    return A", "pyramid = lambda __: [[1]*_ for _ in range(1,__+1)]", "r=lambda i:-~i*[1]\npyramid=lambda n:[*map(r,range(n))]", "def pyramid(n):\n\n    pyramidArray = [[]] *n\n    if n==0:\n        return []\n     \n    for i in range(0, n):       \n        l =[1] * int(i + 1 )    \n        pyramidArray[i]=l      \n\n    return pyramidArray\n\n", "def pyramid(n):\n    return [[1 for _ in range(i)] for i in range(1, n + 1)]"]