["def main():\n    n = int(input())\n    scores = []\n    for i in range(n):\n        a = list(map(int, input().split()))\n        tot = sum(a)\n        scores.append((-tot, i))\n\n    scores.sort()\n    for i in range(n):\n        if scores[i][1] == 0:\n            print(i + 1)\n\nmain()\n", "n = int(input())\na = [sum(map(int, input().split())) for _ in range(n)]\nprint(sum(v > a[0] for v in a[1:]) + 1)", "n = int(input())\n\narr = [(0, 0)] * n\n\nfor i in range(n):\n\ta = sum(list(map(int, input().split())))\n\tarr[i] = (-a, i)\narr.sort()\n\nfor i in range(n):\n\tif arr[i][1] == 0:\n\t\tprint(i + 1)", "n = int(input())\ns = []\nfor i in range(n):\n    a, b, c, d = list(map(int, input().split()))\n    s.append((-(a + b + c + d), i))\n    if i == 0:\n        x = -(a + b + c + d)\ns.sort()\nprint(1 + s.index((x, 0)))\n", "n = int(input())\n\ndata = []\nfor i in range(n):\n    a = [int(v) for v in input().split()]\n    data.append((-sum(a), i))\ndata.sort()\n\nfor j, (_, i) in enumerate(data):\n    if i == 0:\n        print(j + 1)\n        break\n", "n = int(input())\nx = []\nfor i in range(1,n+1):\n    l = list(map(int,input().split()))\n    x.append([i,sum(l)])\nx.sort(key=lambda x:x[1],reverse=True)\nc = 0\nfor i in x:\n    c+=1\n    if(i[0]==1):\n        print(c)\n        break", "n=int(input())\nl=list(map(int,input().strip().split()))\ncount=1\nr=sum(l)\nfor i in range(n-1):\n\tl=list(map(int,input().strip().split()))\n\tr1=sum(l)\n\tif r1>r:\n\t\tcount=count+1\nprint (count)\n", "n = int(input())\na = []\ns = sum(list(map(int, input().split())))\nans = 1\nfor i in range(n - 1):\n    x = sum(list(map(int, input().split())))\n    if x > s:\n        ans += 1\n\nprint(ans)\n", "n = int(input())\nans = 1\na, b, c, d = map(int, input().split())\ns = a+b+c+d\nfor i in range(n-1):\n    a, b, c, d = map(int, input().split())\n    t = a+b+c+d\n    if s < t: ans += 1\nprint(ans)", "from sys import stdin\nfrom math import *\n\nline = stdin.readline().rstrip().split()\nn = int(line[0])\n\nnumbers = list(map(int, stdin.readline().rstrip().split()))\n\nscoreSon = sum(numbers)\n\nnumBefore = 0\n\nfor i in range(n-1):\n    numbers = list(map(int, stdin.readline().rstrip().split()))\n    score = sum(numbers)\n    if score > scoreSon:\n        numBefore+=1\nprint(numBefore+1)\n\n", "n=int(input())\nx=[]\nfor i in range(n):\n    a=list(map(int,input().split()))\n    a.append(i+1)\n    x.append(a)\nx.sort(key=lambda x:[-sum(x[:4]),x[4]])\nfor i in range(n):\n    if x[i][4]==1:\n        print(i+1)\n        return", "n = int(input())\np = sorted([(-sum(map(int, input().split())), i) for i in range(n)])\n\nfor i in range(n):\n    if p[i][1] == 0:\n        print(i + 1)\n        break\n\n", "def ii():\n    return int(input())\ndef mi():\n    return map(int, input().split())\ndef li():\n    return list(mi())\n\nn = ii()\na = [(sum(list(map(int, input().split()))), -i) for i in range(n)]\na.sort(reverse=True)\n\nfor i in range(n):\n    if a[i][1] == 0:\n        print(i + 1)", "from sys import stdin, stdout\nfrom math import log2\n\nn = int(stdin.readline())\nchallengers = []\n\nfor i in range(n):\n    a, b, c, d = map(int, stdin.readline().split())\n    challengers.append((-(a + b + c + d), i))\n\nchallengers.sort()\n\nfor i in range(n):\n    if not challengers[i][1]:\n        stdout.write(str(i + 1))\n        break", "n=int(input())\narrx=[]\nfor i in range(n):\n    arr=list(map(int,input().split()))\n    arrx.append(sum(arr))\nans=1\nfor i in range(1,n):\n    if(arrx[i]>arrx[0]):\n        ans+=1\nprint(ans)", "n = int(input())\nthomas = sum(map(int, input().split()))\nall = [thomas]\nfor _ in range(n - 1):\n    all.append(sum(map(int, input().split())))\nall.sort(reverse=True)\ni = all.index(thomas)\nprint(i + 1)\n", "n = int(input())\nc = 0\nson = sum(list(map(int, input().split()))) / 4\nfor i in range(n-1):\n    others = sum(list(map(int, input().split()))) / 4\n    if son >= others:\n        c += 1\nprint(n-c)", "n = int(input())\nscore = []\nson = 0\nfor i in range(n):\n    wk1 = sum([*list(map(int, input().split()))])\n    if (i == 0):\n        son = wk1\n    score.append(wk1)\nscore.sort(reverse = True)\nprint(score.index(son) + 1)\n", "students = []\nfor i in range(int(input())):\n  students.append([i, sum(map(int, input().split()))])\n\nstudents.sort(key=lambda x:(-x[1], x[0]))\nfor i, student in enumerate(students):\n  if student[0] == 0:\n    print(i+1)\n    break\n\n", "3\n\nn = int(input())\nl = []\n\nfor i in range(n):\n    a, b, c, d = list(map(int, input().split()))\n    l.append((a, b, c, d))\n\nans = 1\nfor i in range(1, n):\n    if sum(l[i]) > sum(l[0]):\n        ans += 1\n\nprint(ans)\n", "n = int(input())\nj = list(map(int, input().split()))\nq = sum(j)\nk = 1\nfor i in range(n - 1):\n    x = list(map(int, input().split()))\n    y = sum(x)\n    if y > q:\n        k += 1\n\nprint(k)", "n = int(input())\nu = []\nt = 0\nfor i in range(n):\n    u.append(sum(list(map(int, input().split()))))\nt = u[0]\nu.sort(reverse = 1)\nfor i in range(n):\n    if u[i] == t:\n        print(i + 1)\n        break\n", "3\n\ndef main():\n    N = int(input())\n    A = []\n    for i, _ in enumerate(range(N)):\n        a, b, c, d = [int(e) for e in input().split(' ')]\n        A.append((-(a + b + c + d), i + 1))\n\n    A.sort()\n\n    for i in range(N):\n        if A[i][1] == 1:\n            print(i + 1)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "#      \nimport collections, atexit, math, sys, bisect \n\nsys.setrecursionlimit(1000000)\ndef getIntList():\n    return list(map(int, input().split()))    \n\ntry :\n    #raise ModuleNotFoundError\n    import numpy\n    def dprint(*args, **kwargs):\n        print(*args, **kwargs, file=sys.stderr)\n    dprint('debug mode')\nexcept ModuleNotFoundError:\n    def dprint(*args, **kwargs):\n        pass\n\n\n\ninId = 0\noutId = 0\nif inId>0:\n    dprint('use input', inId)\n    sys.stdin = open('input'+ str(inId) + '.txt', 'r') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\nif outId>0:\n    dprint('use output', outId)\n    sys.stdout = open('stdout'+ str(outId) + '.txt', 'w') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\n    atexit.register(lambda :sys.stdout.close())     #idle \u4e2d\u4e0d\u4f1a\u6267\u884c atexit\n    \nN, = getIntList()\nzz = []\nfor i in range(N):\n    zx = getIntList()\n    zz.append((sum(zx),-i, i+1))\n\nzz.sort(reverse= True)\n\nfor i in range(N):\n    if zz[i][2] ==1:\n        print(i+1)\n        break\n\n\n\n\n\n\n", "USE_STDIO = False\n\nif not USE_STDIO:\n    try: import mypc\n    except: pass\n\ndef main():\n    n,  = list(map(int, input().split(' ')))\n    scores = []\n    for id in range(n):\n        scores.append((-sum(map(int, input().split(' '))), id))\n    scores.sort()\n    for rank in range(n):\n        if scores[rank][1] == 0:\n            print(rank + 1)\n            return\n\ndef __starting_point():\n    main()\n\n\n\n\n__starting_point()"]