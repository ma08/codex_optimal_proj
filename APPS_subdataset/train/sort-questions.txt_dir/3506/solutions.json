["def vowel_indices(word):\n    return [i for i,x in enumerate(word,1) if x.lower() in 'aeiouy']", "def vowel_indices(word):\n    return [i+1 for i,c in enumerate(word.lower()) if c in 'aeiouy']", "def vowel_indices(word):\n    return [index for index, value in enumerate(word.lower(), 1) if value in 'aeyuio']", "VOWELS = set(\"aeiuoy\")\n\ndef vowel_indices(word):\n    return [i for i,v in enumerate(word.lower(),1) if v in VOWELS]", "def vowel_indices(word):\n    vowels = frozenset(('A','E','I','O','U','Y','a','e','i','o','u','y'));\n    idx_list = []\n    for idx, letter in enumerate(word):\n        if (letter in vowels):\n            idx_list.append(idx+1)\n    return idx_list", "def vowel_indices(word):\n    return [i + 1 for i, v in enumerate(word) if v.lower() in \"aeiouy\"]", "def vowel_indices(word):\n    return [i+1 for i, c in enumerate(word) if c.lower() in 'aeiouy']", "def vowel_indices(word):\n    word = word.lower()\n    vowels = ['a', 'e', 'i', 'o', 'u', 'y']\n    lst = []\n    for index in range(len(word)):\n        if word[index] in vowels:\n            lst.append(index + 1)\n    return lst", "def vowel_indices(word):\n    word = word.lower()\n    vowel_lst = ['a', 'e', 'i', 'o', 'u', 'y']\n    new_lst = []\n    for index in range(len(word)):\n        if word[index] in vowel_lst:\n            new_lst.append(index + 1)\n    return new_lst", "is_vowel = set(\"aeiouyAEIOUY\").__contains__\n\ndef vowel_indices(word):\n    return [i for i,c in enumerate(word, 1) if is_vowel(c)]", "def vowel_indices(words):\n    word = words.lower()\n    vowels = []\n    i = 0\n    for letter in word:\n        i += 1\n        if letter == \"a\" or letter == \"e\" or letter == \"i\" or letter == \"o\" or letter == \"u\" or letter == \"y\":\n            vowels.append(i)\n    return vowels", "def vowel_indices(word):\n    # your code here\n    result = []\n    for _ in range(len(word)):\n        if word[_].lower() in (\"aeiouy\"):\n            result.append(_ + 1)\n    return result", "vowel_indices=lambda n:[i+1 for i,j in enumerate(n) if j.lower() in \"aeiouy\"]", "def vowel_indices(word):\n    word = word.lower()\n    vowels = ['a','e','i','o','u','y']\n    vowel_indicies = []\n    for i in range (len(word)):\n      if word[i] in vowels:\n        vowel_indicies.append(i + 1)\n      else:\n        pass\n    return vowel_indicies\n      \n", "def vowel_indices(word):\n    return([count for count, char in enumerate(word, 1) if char.lower() in [\"a\",\"e\",\"i\",\"o\",\"u\",\"y\"]])\n            \n      \n", "vowels = set('aeiouyAEIOUY')\n\ndef vowel_indices(word):\n    return [i + 1 for i, c in enumerate(word) if c in vowels]", "def vowel_indices(word):\n  return [i+1 for i, c in enumerate(word) if c in set('aeiouyAEIOUY')]", "def vowel_indices(word):\n  return [i + 1 for (i, x) in enumerate(word.lower()) if x in 'aeiouy']", "def vowel_indices(word):\n    vowels = ['a', 'e', 'i', 'o', 'u', 'y']    \n    return [i+1 for i in range(0, len(word)) if word[i].lower() in vowels]", "def vowel_indices(word):\n    return [i for i, c in enumerate(word.lower(), 1) if c in \"aeiouy\"]", "def vowel_indices(word):\n    return [i+1 for i in range(len(word)) if word[i].lower() in ['a', 'e', 'i', 'o', 'u', 'y']]", "def vowel_indices(word):\n    return [\n        i+1 for i, letter in enumerate(word.lower())\n        if letter in 'aeiouy'\n    ]", "def vowel_indices(word):\n    return([i+1 for i,lett in list(enumerate(word.lower())) if lett in \"aeiouy\"])", "def vowel_indices(word):\n    return [i + 1 for i, z in enumerate(word) if z in ['a', 'e', 'i', 'o', 'u', 'y', 'A', 'E', 'I', 'O', 'U', 'Y']]", "vowel_indices=lambda w: [i+1 for i,k in enumerate(w) if k.lower() in \"aeiouy\"]", "def vowel_indices(word):\n    vowels = ['a','e','i','o','u','y']\n    ret = []\n    ind = 1\n    for z in word:\n        if z.lower() in vowels:\n            ret.append(ind)\n        ind += 1    \n    return ret", "def vowel_indices(word):\n    vowels = \"aeiouyAEIOUY\"\n    result = []    \n    \n    for i in range(0,len(word)):\n        if word[i] in vowels:\n            result.append(i+1)\n    \n    return result", "def vowel_indices(word):\n    retVal = [] # return list\n    vow = ['a', 'e', 'i', 'o', 'u', 'y'] # vowel list\n    word = word.lower() # make word all lowercase\n    i = 1 # init position counter\n    \n    # loop through word and check for vowel\n    for letter in word:\n        # test for vowel\n        if letter in vow:\n            retVal.append(i) # append to return list\n        i += 1 # inc position counter\n    return retVal # return answer", "import re\n\ndef vowel_indices(word):\n    iter = re.finditer(r\"[aeiouy]\", word.lower())\n    indices = [m.start(0)+1 for m in iter]\n    return indices", "def vowel_indices(word):\n    new_list=[]\n    vowels=\"a\",\"e\",\"i\",\"o\",\"u\",\"A\",\"E\",\"I\",\"O\",\"U\",\"y\",\"Y\"\n    for i in range(len(word)):\n        if word[i] in vowels:\n            new_list.append(i+1)\n    return new_list", "def vowel_indices(word):\n    return [loop + 1 for loop, i in enumerate(word) if i in 'aeiouyAEIOUY']", "def vowel_indices(word):\n    word = word.lower()\n    res = []\n    for i in range(len(word)):\n        if word[i] in \"aeiouy\":\n            res.append(i + 1)\n    return res", "def vowel_indices(word):\n    l = []\n    for i, letter in enumerate(word):\n        if letter in ['a', 'e', 'i', 'o', 'u', 'y', 'A', 'E', 'I', 'O', 'U', 'Y']:\n            l.append(i + 1)\n    return l", "def vowel_indices(word):\n    vowels = { 'a', 'e', 'i', 'o', 'u', 'y'  }\n    return [i for i, letter in enumerate(word.lower(), start=1) if letter in vowels]", "def vowel_indices(word):\n    vowels = \"aeuioyAEUIO\"\n    l=[]\n    for i in range(len(word)):\n        if word[i] in vowels:\n            l.append(i+1)\n            \n    return l", "def vowel_indices(word):\n    out=[]\n    for i,s in enumerate(word):\n        if s.lower() in \"aeiouy\":\n            out.append(i+1)\n    return out", "vowel=\"aeiouy\"\ndef vowel_indices(word):\n    ans=[]\n    for i in range(len(word)):\n        if word[i].lower() in vowel:\n            ans.append(i+1)\n    return ans", "def vowel_indices(word):\n    vowels = ['a','e','i','o','u', 'y']\n    return [char + 1 for char in range(0,len(word)) if word[char].lower() in vowels]\n", "def vowel_indices(word):\n    ans = []\n    c = 1\n    for i in [char for char in word.lower()]:\n        if i in 'aeiouy':\n            ans.append(c)\n        c += 1\n    return ans", "def vowel_indices(word):\n    return [i+1 for i,n in enumerate(word.lower()) if n in ['a','e','i','o','u','y']]", "def vowel_indices(word):\n    i = 0\n    positions = []\n    vowels = ['a', 'e', 'i', 'o', 'u', 'y', 'A', 'E', 'I', 'O', 'U', 'Y']\n    for letter in word:\n        if letter in vowels:\n            positions.append(word.index(letter, i) + 1)\n        i += 1\n    return positions", "def vowel_indices(word):\n    index = 1\n    res = []\n    for i in word.lower():\n        if i in \"aeiouy\":\n            res.append(index)\n        index += 1\n    return res\n", "def vowel_indices(w):\n    return [i+1 for i, c in enumerate(w) if c in \"aeiouyAEIOUY\"]", "def vowel_indices(word):\n    return [i+1 for i in range(len(word)) if word[i].lower() in 'aeioyu']", "def vowel_indices(word):\n    pw = []\n    vowles = \"aeiouy\"\n    for i in range(len(word)):\n        if word[i].lower() in vowles:\n            pw.append(i+1)\n    return pw", "def vowel_indices(word):\n    # your code here\n    import re\n    return [index+1 for index, element in enumerate(word.lower()) if re.match('[aeiouy]', element)]", "def vowel_indices(word):\n    res = []\n    for idx, letter in enumerate(word.lower(), 1):\n        if letter in 'aeiouy':\n            res.append(idx)\n    return res", "def vowel_indices(word):\n    word = word.lower()\n    vowels = \"aeiouy\"\n    l = []\n    sum = 1\n    for i in word:\n        if i in vowels:\n            l.append(sum)\n            sum = sum + 1\n        else:\n            sum = sum + 1\n            \n    return l\n", "def vowel_indices(word):\n    vowels=list()\n    test='aeiouyAEIOUY'\n    for i in range(0,len(word)):\n        if test.find(word[i])>=0:\n            vowels.append(i+1)\n    return vowels", "VOWELS = 'aeiouyAEIOUY'\n\ndef vowel_indices(word):\n    return [i + 1 for i, l in enumerate(word) if l in VOWELS]", "def vowel_indices(word):\n    # your code here\n    count = []\n    words = word.lower()\n    \n    for i in range(len(words)): \n        if words[i] in \"aeiouy\": \n            count.append(i+1) \n    \n    return count\n    \n    \n\n", "def vowel_indices(w):\n    return [x[0]+1 for x in enumerate(w.lower()) if x[1] in 'aeiouy']", "def vowel_indices(word):\n    \n    vowels = ['a','A','e','E','i','I','o','O','u','U','y','Y']\n    letters = list(word)\n    answer = list()\n    \n    i = 0\n    \n    while i < len(letters):\n        if letters[i] in vowels:\n            answer.append(i + 1)\n        i = i + 1\n    return answer", "def vowel_indices(word):\n    vowels = \"aeiouy\"\n    list = []\n    counter = 0\n    word = word.lower()\n    for letter in word:\n        counter += 1\n        if letter in vowels:\n            list.append(counter)\n    return list", "def vowel_indices(word):\n\n    return [i+1 for i in range(0,len(word)) if word.lower()[i] in 'aeiouy']", "def vowel_indices(word):\n    vowel = [\"a\", \"e\", \"i\", \"o\", \"u\", \"y\", \"A\", \"E\", \"I\", \"O\", \"U\", \"Y\"]\n    count = 1\n    lst = []\n    for letter in word:\n        if letter in vowel:\n            \n            lst.append(count)\n        count += 1\n    return lst", "def vowel_indices(word):\n    retval=[]\n    word=word.lower()\n    for counter, value in enumerate(word):\n        if value== \"a\":\n            retval.append(counter+1)\n        if value== \"e\":\n            retval.append(counter+1)\n        if value== \"i\":\n            retval.append(counter+1)\n        if value== \"o\":\n            retval.append(counter+1)\n        if value== \"u\":\n            retval.append(counter+1)\n        if value== \"y\":\n            retval.append(counter+1)\n    return retval\n", "def vowel_indices(word):\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"]\n    index_list = []\n    for indx, letter in enumerate(word.lower()):\n        if letter in vowels:\n            index_list.append(indx + 1)\n    return index_list\n", "def vowel_indices(word):\n  vowels =['a','e','i','o','u','y']\n  return [ i for i,x in enumerate(word.lower(),start =1) if x in vowels]\n  \n\nprint((vowel_indices(\"Apple\")))\n\n    # your code here\n", "def vowel_indices(word):\n    vowels = ['a','e','i','o','u','y']\n    return [i + 1 for i, c in enumerate(list(word)) if c.lower() in vowels]\n", "import re\n\ndef vowel_indices(word):\n    return [k+1  for k, l in enumerate(word) if bool(re.match('[aeuioy]', l, re.I))]", "def vowel_indices(word):\n    return [word.find(c,i)+1 for i,c in enumerate(word) if c.lower() in 'aeiouy']", "def vowel_indices(word):\n    return [i for i, ch in enumerate(word.lower(), 1) if ch in 'aeiouy']", "def vowel_indices(word):\n   res=[]\n   for i in range(len(word)):\n      if word.lower()[i] in 'aeiouy':\n         res.append(i+1)\n   return res\n", "def vowel_indices(word):\n    vowels = 'aeiouyAEIOUY'\n    return [i for i, l in enumerate(word, start=1) if l in vowels]", "def vowel_indices(word):\n    word = word.lower()\n    vowels = ['a', 'e', 'i', 'o', 'u', 'y']\n    a = len(word)\n    n=[]\n    for i in range(a):\n        if word[i] in vowels:\n            #i = i+1\n            n.append(i+1)\n    return(n)", "def vowel_indices(word):\n    return [idx for idx, i in enumerate(word, start=1) if i.lower() in 'aeiouy']", "import unittest\n\nVOWEL = {'a', 'e', 'i', 'o', 'u', 'y'}\n\n\ndef vowel_indices(word):\n    return [index for index, ele in enumerate(word, 1) if ele.lower() in VOWEL]\n    \n    \nclass TestVowelIndices(unittest.TestCase):\n    def test_vowel_indices(self):\n        word = 'Super'\n        actual = vowel_indices(word)\n        self.assertEqual(actual, [2, 4])\n", "\ndef vowel_indices(word):\n    res = []\n    for i, char in enumerate(word):\n        if char in 'aeiouyAEIOUY':\n            res.append(i+1)\n    return res", "def vowel_indices(word):\n    vowels = 'aeiouyAEIOUY'\n    count = 0\n    vowel_list = []\n    for x in word:\n        count += 1\n        if x in vowels:\n            vowel_list.append(count)\n    return(vowel_list)", "def vowel_indices(word):\n    # your code here\n    li = []\n    vowel = [\"a\",\"A\",\"e\",\"E\",\"i\",\"I\",\"o\",\"O\",\"u\",\"U\",\"y\",\"Y\"]\n    for i in range(len(word)):\n       for j in range(len(vowel)):\n            if word[i] == vowel[j]:\n                li.append(i+1)\n    return li", "def vowel_indices(word):\n    return [a+1 for (a,c) in enumerate(word) if c in 'aeiouyAEIOUY']", "def vowel_indices(word):\n    output = []\n    for i in range(0,len(word)):\n        if word[i] in'aeiouyAEIOUY':\n            output.append(i+1)\n    return output", "def vowel_indices(word):\n  n = 0\n  a = []\n  for i in word:\n    n = n+1\n    if i.lower() in ['a','e','i','o','u','y']:\n      a.append(n)\n  return a\n", "def vowel_indices(word):\n    lst = [i+1 for i in range(0, len(word)) if word[i] in 'aeiouyAEIOUY']\n    return lst", "def vowel_indices(word):\n    word = word.lower()\n    indexes = []\n    vowels = ['a', 'e', 'i', 'o', 'u', 'y']\n    for i in range(0, len(word)):\n        if word[i] in vowels:\n            indexes.append(i + 1)\n    return indexes\n    # your code here\n", "def vowel_indices(word):\n  word = word.lower()\n    \n  new_list = []\n    \n  vow = ['a', 'o', 'e', 'i', 'u', 'y']\n  for x in range(len(word)):\n      if word[x] in vow:\n          new_list.append(x+1)\n  return new_list", "def vowel_indices(word):\n    word=word.lower()\n    word=list(word)\n    vowel=['a','e','i','o','u','y']\n    result=[]\n    for i,j in enumerate(word):\n        if j in vowel:\n            result.append(i+1)\n    return result", "def vowel_indices(word):\n    word = word.lower()\n    a = [\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"]\n    res = []\n    count = 1\n    for i in word: \n        if i in a:\n            res.append(count)\n        count += 1\n    return res", "def vowel_indices(word):\n    return [(index+1) for index, ele in enumerate(word.lower()) if ele in 'aeiouy']", "def vowel_indices(word):\n    word = word.lower()\n    vowels = ['a','e','i','o','u','y']\n    return [i+1 for i in range(len(word)) if word[i] in vowels ]\n", "def vowel_indices(word):\n    location = []\n    for letter in range(len(word)):\n        if word[letter] in \"aeiouyAEIOUY\":\n            location.append(letter + 1)\n    return location\n", "def vowel_indices(word):\n    word = word.casefold()\n    found = 'aeiouy'\n    return [i+1 for i in range(len(word)) if word[i] in found]", "def vowel_indices(word):\n    return [p for p, c in enumerate(word.lower(), 1) if c in 'aeiouy']", "def vowel_indices(word):\n    vowels = \"aeiouyAEIOUY\"\n    result = [i+1 for i, char in enumerate(word) if char in vowels]\n    return result", "L = 'aeiouyAEIOUY'\nvowel_indices = lambda s: [i + 1 for i, c in enumerate(s) if c in L]", "def vowel_indices(word):\n    l = []\n    for num in range(len(word)):\n        if word[num] in \"aeiouyAEIOUY\":\n            l.append(num + 1)\n    return l", "def vowel_indices(word):\n    res = []\n    vowels = [\"a\",\"o\",\"u\",\"i\",\"e\",\"y\"]\n    for i in range(len(word)):\n        if word[i].lower() in vowels:\n            res.append(i+1)\n    return res\n", "def vowel_indices(word):\n    l=[]\n    for i in range(len(word)):\n        if word[i] in 'aeiouAEIOUyY':\n            l.append(i+1)\n    return l", "def vowel_indices(word):\n    return [i + 1 for i, c in enumerate(word) if c in \"aAeEiIoOuUyY\"]\n", "def vowel_indices(word):\n    vowels = ['a','e','i','o','u','y']\n    return [x+1 for x, y in enumerate(word) if y.lower() in vowels]", "def vowel_indices(word):\n    word = word.lower()\n    vowels_lst = [\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"]\n    index_lst = []\n    for i in range(len(word)):\n        if word[i] in vowels_lst:\n            index_lst.append(i + 1)\n    return index_lst", "def vowel_indices(word):\n  vowel = \"aeiouyAEIOUY\"\n\n  return [x + 1 for x in range(len(word)) if word[x] in vowel]", "def vowel_indices(word):\n    return [i for i,x in enumerate(word,1) if x in 'AEIOUYaeiouy']", "def vowel_indices(word):\n    retVal = []\n    checkList = \"aeiouy\"\n    for i, x in enumerate(word.lower()):\n        print((\"Looking at \", x))\n        try:\n            l = checkList.index(x)\n            retVal.append(i+1)\n            print((\"think this is a vowel\",x))\n        except ValueError:\n            print((\"discarded\",x))           \n    return retVal\n  \n\n\n#    word= list(word)\n#    retVal=[]\n#    for x in word:\n#        x=x.lower()\n#        if x==\"a\" or x==\"e\" or x==\"i\" or x==\"o\" or x==\"u\" or x==\"y\":\n#            print(\"think this is a vowel\",x)\n#            retVal.append(word.index(x)+1)\n#            print(x)\n#        else:\n#            print(\"discarded\",x)\n#    return retVal\n", "def vowel_indices(word):\n    return [i + 1 for i, x in enumerate(list(word)) if x in 'aeiouyAEIOUY']", "def vowel_indices(word: str):\n    i = []\n    word = word.lower()\n    word = list(word)\n    for l in 'aeiouy':\n        while l in word:\n            i.append(word.index(l) + 1)\n            word[i[-1]-1] = ' '\n    return sorted(i)", "def vowel_indices(word):\n    r = []\n    for i, c in enumerate(word):\n        if c in 'aeiouyAEIOUY':\n            r.append(i + 1)\n    return r\n    # Flez\n", "def vowel_indices(word):\n    return [i+1  for i, a in enumerate(word.lower()) if a in (list('aeiouy'))]", "def vowel_indices(word):\n    return [c+1 for c,i in enumerate(word.lower()) if i in 'aeiouy']"]