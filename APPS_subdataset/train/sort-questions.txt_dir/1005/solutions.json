["MAXX = 10**9+1\nN = eval(input())\nnodes = list(map(int, input().split(\" \")))\nedges = [set() for _ in range(N)]\nfor _ in range(N-1):\n    a, b = list(map(int, input().split(\" \")))\n    edges[a-1].add(b-1)\n    edges[b-1].add(a-1)\npath = [[] for _ in range(N)]\nvisited, tovisit = set(), [(0, 0)]\nwhile tovisit:\n    p, v = tovisit.pop()\n    if v not in visited:\n        path[v] = path[p] + [v]\n        visited.add(v)\n        news = edges[v] - visited\n        tovisit.extend([(v, x) for x in news])\n# print path\n\nQ = eval(input())\nfor _ in range(Q):\n    q, a, b = input().split(\" \")\n    a, b = int(a)-1, int(b)-1\n    i = 1\n    while i < min(len(path[a]), len(path[b])):\n        if path[a][i] != path[b][i]: break\n        i += 1\n    s = path[a][i-1:] + path[b][i:]\n\n    # print s\n    if q == \"C\":\n        s = sorted([nodes[i] for i in s])\n        d = s[-1] - s[0]\n        for i in range(len(s)-1):\n            d = min(d, s[i+1]-s[i])\n        print(d)\n    else:\n        M = 0\n        m = MAXX\n        for i in range(len(s)):\n            M = max(M, nodes[s[i]])\n            m = min(m, nodes[s[i]])\n        print(M - m)\n    # print M[(s, l)] - m[(s, l)]", "\n\nN = eval(input())\nnodes = list(map(int, input().split(\" \")))\nedges = [set() for _ in range(N)]\nfor _ in range(N-1):\n    a, b = list(map(int, input().split(\" \")))\n    edges[a-1].add(b-1)\n    edges[b-1].add(a-1)\npath = [[] for _ in range(N)]\nvisited, tovisit = set(), [(0, 0)]\nwhile tovisit:\n    p, v = tovisit.pop()\n    if v not in visited:\n        path[v] = path[p] + [v]\n        visited.add(v)\n        news = edges[v] - visited\n        tovisit.extend([(v, x) for x in news])\n# print path\n\nQ = eval(input())\nfor _ in range(Q):\n    q, a, b = input().split(\" \")\n    a, b = int(a)-1, int(b)-1\n    i = 1\n    while i < min(len(path[a]), len(path[b])):\n        if path[a][i] != path[b][i]: break\n        i += 1\n    s = path[a][i-1:] + path[b][i:]\n    s = sorted([nodes[i] for i in s])\n    # print s\n    if q == \"C\":\n        d = s[-1] - s[0]\n        for i in range(len(s)-1):\n            d = min(d, s[i+1]-s[i])\n        print(d)\n    else:\n        print(s[-1] - s[0])\n    # print M[(s, l)] - m[(s, l)]\n"]