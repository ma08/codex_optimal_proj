["def is_tune(notes):\n    return bool(notes) and any(\n        all((n + i) % 12 in {0, 2, 4, 5, 7, 9, 11} for n in notes)\n        for i in range(12)\n    )", "def is_tune(notes):\n    if not notes: return False \n    for j in range(12):\n        if set((i + j) % 12 for i in notes).issubset({0, 2, 4, 5, 7, 9, 11}):\n            return True\n    return False\n    \n", "D_TUNE = {0,2,4,5,7,9,11}\n\ndef is_tune(notes):\n    return bool(notes) and any({(n-v)%12 for v in notes} <= D_TUNE for n in range (12))", "def is_tune(notes):\n    pattern=[0,2,4,5,7,9,11]\n    if notes:\n        for i in range(12):\n            for n in notes:    \n                for p in pattern:\n                    if (i-n+p)%12==0: break\n                else: break\n            else: return True\n    return False", "is_tune=lambda Q:bool(Q)and any(all((B-V)%12in(0,2,4,5,7,9,11)for B in Q)for V in range(12))", "def is_tune(notes=None):\n    if not notes:\n        return False\n\n    major_scale = [0, 2, 4, 5, 7, 9, 11]\n    \n    def is_in_key_of(_notes, n):\n        return all((note + n) % 12 in major_scale for note in _notes)\n\n    tonic = min(notes)\n    _notes = [n - tonic for n in notes]\n    return any(is_in_key_of(_notes, n) for n in major_scale)", "def is_tune(notes):\n    return any(all((j+i)%12 in [0,2,4,5,7,9,11] for j in notes) for i in range(12)) if notes else False", "def is_tune(notes):\n    def is_in_key(a,b):\n        major_scale_a = [(a+j) % 12 for j in (0,2,4,5,7,9,11)]\n        return b%12 in major_scale_a\n    return bool(notes) and any(all(is_in_key(i,n) for n in notes) for i in range(1,13))", "def is_tune(notes):\n    if not notes:\n        return False\n    c = 0\n    print(notes)\n    for i in range(len(notes)):\n        for j in range(len(notes)):\n            if (notes[j] - notes[i]) % 12 in [0, 1, 3, 5, 6, 8, 10]:\n                c += 1\n            else:\n                c = 0\n                break\n        if c == len(notes):\n            return True\n    return False", "def is_tune(notes):\n    SCALE = [1, 3, 5, 6, 8, 10, 0]\n    for n in range(12):\n        if all((note - n) % 12 in SCALE for note in notes):\n            return bool(notes)\n    return False"]