["from math import log2, ceil\r\nMOD = int(1e9 + 7)\r\nsrt = lambda s: ''.join(sorted(s))\r\nfor _ in range(int(input())):\r\n    s = srt(input())\r\n    res = -1\r\n    for p in range(ceil(log2(int(s))), int(log2(int(s[::-1]))) + 1):\r\n        if int(srt(str(pow(2, p)))) == int(s):\r\n            if res == -1: res = 0\r\n            res = (res + pow(2, p, MOD)) % MOD\r\n    print(res)", "from collections import Counter\r\nl = [pow(2, i) for i in range(3321)]\r\n\r\nd = {i:Counter(str(i)) for i in l}\r\n\r\nt = int(input())\r\nwhile t:\r\n    x = int(input())\r\n    n = len(str(x))\r\n    dx = Counter(str(x))\r\n    \r\n    ans = 0\r\n    for i in l:\r\n        if len(str(i)) == n:\r\n            if dx == d[i]:\r\n                ans += i\r\n        elif len(str(i)) > n:\r\n            break\r\n    \r\n    if ans == 0:\r\n        print(-1)\r\n    else:\r\n        print(ans % 1000000007)\r\n    \r\n    t -= 1", "from math import log,floor\n\nt = int(input())\n\nwhile(t>0):\n\tn = str(input())\n\tn1 = int(''.join(sorted(n)))\n\tn2 = int(''.join(sorted(n, reverse=True)))\n\tlow = pow(2,floor(log(n1,2)))\n\thigh = pow(2,floor(log(n2,2)))\n\n\ti = low\n\tans = 0\n\twhile(i<=high):\n\n\t\t# print(i)\n\t\tk = str(i)\n\t\tk = ''.join(sorted(k))\n\t\tif i>= n1 and int(k) == n1:\n\t\t\tans += i\n\t\t\t\n\n\t\ti = i<<1\n\n\n\tmod = 1000000007\n\tif ans != 0:\n\t\tprint(ans%mod)\n\telse:\n\t\tprint(-1)\n\n\tt-=1\n\n"]