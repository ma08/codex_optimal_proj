["r,c,n = map(int , input().split());coordinates = [];coordinates_1,coordinates_2 = {},{}\r\nfor _ in range(n):\r\n\tx,y = map(int , input().split())\r\n\tcoordinates.append([x,y])\r\nfor i in coordinates:\r\n    if(i[0] in coordinates_1): coordinates_1[i[0]] += 1\r\n    else: coordinates_1[i[0]] = 1\r\n    if(i[1] in coordinates_2): coordinates_2[i[1]] += 1\r\n    else: coordinates_2[i[1]] = 1\r\nprint(max(coordinates_1.values()) + max(coordinates_2.values()))", "try:\n    r,c,n=list(map(int,input().split()))\n    grid=[[0 for j in range(c)]for i in range(r)]\n    for i in range(n):\n        a,b=list(map(int,input().split()))\n        grid[a][b]=1\n    sumcol=[sum(x) for x in zip(*grid)]\n    sumrow=[]\n    for i in grid:\n        sumrow.append(sum(i))\n\n    \n        \n        \n    #targets=[]\n    #for i in range(r):\n     #   for j in range(c):\n      #      targets.append(sumrow[i] + sumcol[j] - 2*grid[i][j])\n    print(max(sumrow)+max(sumcol))\nexcept EOFError:\n    pass\n", "from collections import defaultdict\nr,c,n = (int(i) for i in input().split())\ndr=defaultdict(int)\ndc = defaultdict(int)\n\nfor i in range(n):\n\tx,y = (int(i) for i in input().split())\n\tdr[x]+=1\n\tdc[y]+=1\n\nmr = max(dr.values())\nmc = max(dc.values())\nif 1 not in [r,c]:\n\tprint(mr+mc)\nelse:\n\tprint(max(mr,mc))", "r,c,n=map(int,input().split())\r\nar=[]\r\nfor i in range(n):\r\n    ar.append(list(map(int,input().split())))\r\n\r\nd1={}\r\n\r\n\r\nfor i in ar:\r\n    try:\r\n        d1[i[0]]+=1\r\n    except:\r\n        d1[i[0]]=1\r\n\r\nmaxi=-1\r\n\r\nfor i in d1:\r\n    if d1[i]>maxi:\r\n        maxi=d1[i]\r\n        res1=i\r\n\r\nd2={}\r\n\r\nfor i in ar:\r\n    if i[0]!=res1:\r\n        try:\r\n            d2[i[1]]+=1\r\n        except:\r\n            d2[i[1]]=1\r\n\r\nmaxi=-1\r\n\r\nfor i in d2:\r\n    if d2[i]>maxi:\r\n        maxi=d2[i]\r\n        res2=i\r\n\r\nans1=d1[res1]+d2[res2]\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nd1={}\r\n\r\nfor i in ar:\r\n    try:\r\n        d1[i[1]]+=1\r\n    except:\r\n        d1[i[1]]=1\r\n\r\nmaxi=-1\r\n\r\nfor i in d1:\r\n    if d1[i]>maxi:\r\n        maxi=d1[i]\r\n        res1=i\r\n\r\nd2={}\r\n\r\nfor i in ar:\r\n    if i[1]!=res1:\r\n        try:\r\n            d2[i[0]]+=1\r\n        except:\r\n            d2[i[0]]=1\r\n\r\nmaxi=-1\r\n\r\nfor i in d2:\r\n    if d2[i]>maxi:\r\n        maxi=d2[i]\r\n        res2=i\r\n\r\nans2=d1[res1]+d2[res2]\r\n\r\nprint(max(ans1,ans2))", "import sys\r\n \r\nsys.setrecursionlimit(500005)\r\nstdin = sys.stdin\r\n \r\nni = lambda: int(ns())\r\nna = lambda: list(map(int, stdin.readline().split()))\r\nns = lambda: stdin.readline().strip()\r\n \r\nh, w, m = na()\r\nrs = [0] * h\r\ncs = [0] * w\r\n \r\nse = set()\r\nfor i in range(m):\r\n    r, c = na()\r\n    rs[r-1] += 1\r\n    cs[c-1] += 1\r\n    se.add((r-1)*w+c-1)\r\n \r\nrmax = max(rs)\r\ncmax = max(cs)\r\n \r\nremax = rs.count(rmax)\r\ncemax = cs.count(cmax)\r\nif remax * cemax > m:\r\n    print(rmax + cmax)\r\n    return\r\n \r\nrmaxs = [i for i, _ in enumerate(rs) if _ == rmax]\r\ncmaxs = [i for i, _ in enumerate(cs) if _ == cmax]\r\nfor r in rmaxs:\r\n    for c in cmaxs:\r\n        if r*w+c not in se:\r\n            print(rmax + cmax)\r\n            return\r\nprint(rmax + cmax - 1)\r\n", "r,c,n=list(map(int,input().split()))\na=set()\n\nc2=[0 for i in range(r)]\nd2=[0 for j in range(c)]\n\nfor i in range(n):\n    c1,d1=list(map(int,input().split()))\n    a.add((c1,d1))\n    c2[c1]+=1 \n    d2[d1]+=1 \n\n\nmr=max(c2)\nmc=max(d2)\n\np1=[]\np2=[]\n\nfor i in range(r):\n    if c2[i]==mr:\n        p1.append(i)\n\nfor j in range(c):\n    if d2[j]==mc:\n        p2.append(j)\n        \nans=mr+mc \n\nfor i in p1:\n  for j in p2:\n    if (i,j) in a:\n      continue\n    print(ans)\n    return\nans -= 1\nprint(ans)\n", "r, c, n = map(int, input().split())\r\nX = [0]*(r+1)\r\nY = [0]*(c+1)\r\nfor i in range(n):\r\n    x,y = map(int, input().split())\r\n    X[x] += 1\r\n    Y[y] += 1\r\nprint(max(X)+max(Y))", "# cook your dish here\nr,c,n = map(int,input().split())\nx={}\ny={}\nxy={}\nfor i in range(n):\n    a = [int(i) for i in input().split()]\n    if x.get(a[0])==None:\n        x[a[0]]=1\n    else:\n        x[a[0]]+=1\n    if y.get(a[1])==None:\n        y[a[1]]=1\n    else:\n        y[a[1]]+=1\n    xy[tuple(a)]=1\nxmax = max(x, key=x.get)\nymax = max(y, key=y.get)\nar = []\nar.append(xmax)\nar.append(ymax)\ncount = x[xmax]+y[ymax]\nif xy.get(tuple(ar))!=None:\n    count-=1\nprint(count)", "#\n\n#for _ in range(int(input())):\nn,m,x = list(map(int,input().split()))\narr = [[0 for i in range(m)] for j in range(n)]\ndpr = [0]*n \ndpc = [0]*m\nfor i in range(x):\n    a,b=list(map(int,input().split()))\n    arr[a][b]=1\n    dpr[a]+=1 \n    dpc[b]+=1\n#print(dpr,dpc)\nmax=-1\nfor i in range(n):\n    for j in range(m):\n        sum=dpr[i]+dpc[j]\n        #print(i,j,sum)\n        if arr[i][j]==1:\n            sum-=1\n        if sum>max:\n            max=sum\n        if max==x:\n            break\nprint(max)\n\n        \n", "#\n\n#for _ in range(int(input())):\nn,m,x = list(map(int,input().split()))\narr = [[0 for i in range(m)] for j in range(n)]\ndpr = [0]*n \ndpc = [0]*m\nfor i in range(x):\n    a,b=list(map(int,input().split()))\n    arr[a][b]=1\n    dpr[a]+=1 \n    dpc[b]+=1\n#print(dpr,dpc)\nmax=-1\nfor i in range(n):\n    for j in range(m):\n        sum=dpr[i]+dpc[j]\n        #print(i,j,sum)\n        if arr[i][j]==1:\n            sum-=1\n        if sum>max:\n            max=sum\nprint(max)\n\n        \n", "r,c,n=map(int,input().split())\na=[[0 for i in range(c)] for j in range(r)]\n\nfor i in range(n):\n    c1,d1=map(int,input().split())\n    a[c1][d1]=1 \n    \n\na2=[[0 for i in range(r)] for j in range(c)]\n\n#print(a2)\n\nfor i in range(c):\n    for j in range(r):\n        a2[i][j]=a[j][i]\n        \n        \n#print(a,a2)\nc2=[0 for i in range(r)]\nd2=[0 for j in range(c)]\n\nfor i in range(r):\n    c2[i]=sum(a[i])\n    \nfor i in range(c):\n    d2[i]=sum(a2[i])\n#print(c,d)\n    \nans=0\n\nfor i in range(r):\n    for j in range(c):\n        if a[i][j]==1:\n            ans=max(ans,c2[i]+d2[j]-1)\n        else:\n            ans=max(ans,c2[i]+d2[j])\n        \nprint(ans)", "# cook your dish here\ndef f(lst1,lst2):\n    dict1={}.fromkeys(lst1,0)\n    for key in lst1:\n        dict1[key]+=1\n    s=max(dict1.values())\n    for i in dict1:\n        if(dict1[i]==s):\n            key=i\n            break\n    lst3=[]    \n    for i,j in zip(lst1,lst2):\n        if(i!=key):\n            lst3.append(j)\n    dict2={}.fromkeys(lst3,0)\n    for key in lst3:\n        dict2[key]+=1\n    s1=max(dict2.values())\n    return s+s1\nr,c,n=list(map(int,input().split()))\nlst1=[]\nlst2=[]\nfor i in range(n):\n    r,c=list(map(int,input().split()))\n    lst1.append(r)\n    lst2.append(c)\nprint(max(f(lst1,lst2),f(lst2,lst1)))\n        \n", "\r\nr,c,n=list(map(int,input().split()))\r\nro=[0]*(r+1)\r\nco=[0]*(c+1)\r\nfor i in range(n):\r\n    a,b=list(map(int,input().split()))\r\n    ro[a]+=1\r\n    co[b]+=1\r\nma=0\r\nma+=max(ro)\r\nma+=max(co)\r\nprint(ma)\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "\r\nr,c,n=list(map(int,input().split()))\r\nro=[0]*(r+1)\r\nco=[0]*(c+1)\r\nfor i in range(n):\r\n    a,b=list(map(int,input().split()))\r\n    ro[a]+=1\r\n    co[b]+=1\r\nma=0\r\nma+=max(ro)\r\nma+=max(co)\r\nprint(ma)\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "r, c, n = map(int, input().split())\nX = [0]*(r+1)\nY = [0]*(c+1)\nfor i in range(n):\n    x,y = map(int, input().split())\n    X[x] += 1\n    Y[y] += 1\nprint(max(X)+max(Y))", "r,c,n=map(int,input().split())\nar=[]\nfor i in range(n):\n    ar.append(list(map(int,input().split())))\n\nd1={}\n\n\nfor i in ar:\n    try:\n        d1[i[0]]+=1\n    except:\n        d1[i[0]]=1\n\nmaxi=-1\n\nfor i in d1:\n    if d1[i]>maxi:\n        maxi=d1[i]\n        res1=i\n\nd2={}\n\nfor i in ar:\n    if i[0]!=res1:\n        try:\n            d2[i[1]]+=1\n        except:\n            d2[i[1]]=1\n\nmaxi=-1\n\nfor i in d2:\n    if d2[i]>maxi:\n        maxi=d2[i]\n        res2=i\n\nans1=d1[res1]+d2[res2]\n\n\n\n\n\n\n\n\n\nd1={}\n\nfor i in ar:\n    try:\n        d1[i[1]]+=1\n    except:\n        d1[i[1]]=1\n\nmaxi=-1\n\nfor i in d1:\n    if d1[i]>maxi:\n        maxi=d1[i]\n        res1=i\n\nd2={}\n\nfor i in ar:\n    if i[1]!=res1:\n        try:\n            d2[i[0]]+=1\n        except:\n            d2[i[0]]=1\n\nmaxi=-1\n\nfor i in d2:\n    if d2[i]>maxi:\n        maxi=d2[i]\n        res2=i\n\nans2=d1[res1]+d2[res2]\n\nprint(max(ans1,ans2))", "from sys import stdin, stdout\nr, c, n = map(int, stdin.readline().split())\nfx = {}\nfy = {}\ns = set()\nfor _ in range(n):\n    x, y = stdin.readline().split()\n    fx[x] = fx.get(x, 0)+1\n    fy[y] = fy.get(y, 0)+1\n    s.add((x,y))\nxl, xn = [], max(fx.values())\nfor x in fx:\n    if fx[x] == xn: xl.append(x)\nyl, yn = [], max(fy.values())\nfor y in fy:\n    if fy[y] == yn: yl.append(y)\ncount = xn+yn-1\nbroken = False\nfor x in xl:\n    for y in yl:\n        if (x,y) not in s:\n            broken = True\n            break\n    if broken: break\nstdout.write(str(count+broken))", "import sys\nimport math\nfrom collections import defaultdict,Counter\n\ninput=sys.stdin.readline\ndef print(x):\n    sys.stdout.write(str(x)+\"\\n\")\n\n# sys.stdout=open(\"CP1/output.txt\",'w')\n# sys.stdin=open(\"CP1/input.txt\",'r')\n\n# mod=pow(10,9)+7\nr,c,n=map(int,input().split())\nrow=[0]*r\ncol=[0]*c\ns=set()\nfor i in range(n):\n\tx,y=map(int,input().split())\n\trow[x]+=1\n\tcol[y]+=1\n\ts.add((x,y))\nans=0\nfor i in range(r):\n\tfor j in range(c):\n\t\tcur=row[i]+col[j]\n\t\tif (i,j) in s:\n\t\t\tcur-=1\n\t\tans=max(cur,ans)\nprint(ans)\n# mr=max(row)\n# mc=max(col)\n# ans=mr+mc-1\n# r1=\n# for i in range(r):\n# \tif row[i]==mr\n# ind=(0,0)\n# ma=0\n# for i in range(r):\n# \tif row[i]>ma\n# print(ans)\n", "from sys import stdin, stdout\nr, c, n = map(int, stdin.readline().split())\nfx = {}\nfy = {}\ns = set()\nfor _ in range(n):\n    x, y = stdin.readline().split()\n    fx[x] = fx.get(x, 0)+1\n    fy[y] = fy.get(y, 0)+1\n    s.add((x,y))\nxl, xn = [], max(fx.values())\nfor x in fx:\n    if fx[x] == xn: xl.append(x)\nyl, yn = [], max(fy.values())\nfor y in fy:\n    if fy[y] == yn: yl.append(y)\ncount = xn+yn-1\nbroken = False\nfor x in xl:\n    for y in yl:\n        if (x,y) not in s:\n            broken = True\n            break\n    if broken: break\nstdout.write(str(count+broken))", "r,c,n=list(map(int,input().split()))\nro={}\ncol={}\nfor i in range(n):\n    p,q=list(map(int,input().split()))\n    try:\n        ro[p]+=1\n    except KeyError:\n        ro[p]=1\n    try:\n        col[q]+=1\n    except KeyError:\n        col[q]=1\nmr,mc=-1,-1\nv1,v2=-1,-1\nfor i in list(ro.keys()):\n    if(ro[i]>v1):\n        v1=ro[i]\n        mr=i\nfor i in list(col.keys()):\n    if(col[i]>v2):\n        v2=col[i]\n        mc=i\n#print(col,ro)\nprint(v1+v2)\n", "r,c,n=map(int,input().split())\na=[[0 for i in range(c)] for j in range(r)]\n\nfor i in range(n):\n    c1,d1=map(int,input().split())\n    a[c1][d1]=1 \n    \n\na2=[[0 for i in range(r)] for j in range(c)]\n\n#print(a2)\n\nfor i in range(c):\n    for j in range(r):\n        a2[i][j]=a[j][i]\n        \n        \n#print(a,a2)\nc2=[0 for i in range(r)]\nd2=[0 for j in range(c)]\n\nfor i in range(r):\n    c2[i]=sum(a[i])\n    \nfor i in range(c):\n    d2[i]=sum(a2[i])\n#print(c,d)\n    \nans=0\n\nfor i in range(r):\n    for j in range(c):\n        if a[i][j]==1:\n            ans=max(ans,c2[i]+d2[j]-1)\n        else:\n            ans=max(ans,c2[i]+d2[j])\n        \nprint(ans)", "r,c,n=map(int,input().split())\na=[[0 for i in range(c)] for j in range(r)]\n\nfor i in range(n):\n    c1,d1=map(int,input().split())\n    a[c1][d1]=1 \n    \n\na2=[[0 for i in range(r)] for j in range(c)]\n\n#print(a2)\n\nfor i in range(c):\n    for j in range(r):\n        a2[i][j]=a[j][i]\n        \n        \n#print(a,a2)\nc2=[0 for i in range(r)]\nd2=[0 for j in range(c)]\n\nfor i in range(r):\n    c2[i]=sum(a[i])\n    \nfor i in range(c):\n    d2[i]=sum(a2[i])\n#print(c,d)\n    \nans=0\n\nfor i in range(r):\n    for j in range(c):\n        ans=max(ans,c2[i]+d2[j])\n        \nprint(ans)", "\nr,c,n=list(map(int,input().split()))\nro=[0]*n\nco=[0]*n\nfor i in range(n):\n    a,b=list(map(int,input().split()))\n    ro[a]+=1\n    co[b]+=1\nma=0\nma+=max(ro)\nma+=max(co)\nprint(ma)\n\n\n\n\n\n\n"]