["def two_sum(nums, t):\n    for i, x in enumerate(nums):\n        for j, y in enumerate(nums):\n            if i != j and x + y == t:\n                return [i, j]", "def two_sum(nums, target):\n    d = {}\n    for i, num in enumerate(nums):\n        diff = target - num\n        if diff in d:\n            return [d[diff], i]\n        d[num] = i", "def two_sum(numbers, target):\n    d = {}\n    for i,n in enumerate(numbers):\n        if target-n in d:\n            return [d[target-n],i]\n        d[n] = i\n", "def two_sum(numbers, target):\n    for i in range(0, len(numbers)):\n        for x in range(0, len(numbers)):\n            if numbers[i] + numbers[x] == target and i != x:\n                index1 = i\n                index2 = x\n                break\n    return sorted([index1, index2])", "def two_sum(numbers, target):\n    for i, val1 in enumerate(numbers[:-1]):\n        for j, val2 in enumerate(numbers[i+1:]):\n            if val1 + val2 == target:\n                return (i, j+i+1)\n", "def two_sum(numbers, target):\n    return [[i, numbers.index(target - numbers[i])] for i in range(len(numbers)) if target - numbers[i] in numbers].pop()", "def two_sum(n, target):\n    for i in range(len(n)-1):\n        if (target-n[i]) in n[i+1:]:\n            return [i, n[i+1:].index(target-n[i])+(i+1)]\n    return None\n", "def two_sum(numbers, target):\n    for i in range(len(numbers)):\n        for j in range(len(numbers)):\n            if (i != j) and (numbers[i] + numbers[j] == target):\n                return [i, j]", "def two_sum(numbers, target):\n    numbers.sort()\n    \n    i = 0\n    j = len(numbers) - 1\n    \n    sum_ = numbers[i] + numbers[j]\n    while sum_ != target:\n        if sum_ < target:\n            i += 1\n        elif sum_ > target:\n            j -= 1\n        sum_ = numbers[i] + numbers[j]\n    return [i, j]", "from itertools import combinations\ndef two_sum(numbers, target):\n    for i1,i2 in  combinations(list(range(len(numbers))), 2):\n        if numbers[i1] + numbers[i2] == target:\n            return i1,i2\n\n"]