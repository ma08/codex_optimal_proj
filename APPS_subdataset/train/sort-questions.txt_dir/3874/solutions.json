["def sort_twisted37(arr):\n    def key(x):\n        return int(str(x).translate(str.maketrans('37', '73')))\n    return sorted(arr, key=key)", "tr=str.maketrans('37','73')\n\ndef sort_twisted37(arr):\n    return sorted(arr,key=lambda n:int(str(n).translate(tr)))", "def sort_twisted37(arr):\n  twisted = lambda n: int(''.join('3' if c=='7' else '7' if c == '3' else c for c in str(n)))\n  return sorted(arr, key=twisted)", "def sort_twisted37(arr):\n    return list(sorted(arr, key=lambda x: int(str(x).translate(\"\".maketrans(\"37\", \"73\")))))", "def sort_twisted37(lst):\n    return sorted(lst, key=comp)\n    \n\ndef comp(n):\n    return int(str(n).translate(str.maketrans(\"37\", \"73\")))", "trans = str.maketrans(\"37\", \"73\")\ntwist = lambda n: int(str(n).translate(trans))\n\ndef sort_twisted37(arr):\n    return sorted(arr, key=twist)", "def sort_twisted37(arr):\n    str_arr = [str(i) for i in arr]\n    swap1(str_arr)\n    str_arr = sorted([int(i) for i in str_arr])\n    str_arr = [str(i) for i in str_arr]\n    swap1(str_arr)\n    return [int(i) for i in str_arr]\n\n    \ndef swap1(str_arr):\n    for index, numstr in enumerate(str_arr):\n        if '3' in numstr or '7' in numstr:\n            str_arr[index] = numstr.replace('3','%temp%').replace('7','3').replace('%temp%','7')", "tbl = str.maketrans('37', '73')\n\ndef twist(n):\n    return int(str(n).translate(tbl))\n\ndef sort_twisted37(arr):\n    return sorted(arr, key=twist)\n", "def sort_twisted37(arr):\n    return sorted(arr, key=lambda x: int(str(x).translate(str.maketrans('37', '73'))))", "sort_twisted37=lambda a:sorted(a,key=lambda n:int(str(n).translate(str.maketrans('37','73'))))"]