["def sum_arrays(*args):\n    if all(x == [] for x in args) or all(x == [0] for x in args):\n        return []\n    elif any(x == [] for x in args):\n        return max(args)\n    else:\n        s = sum(int(''.join(map(str, x))) for x in args)\n        minus = s < 0\n    return [int(x) * -1 if minus and i == 0 else int(x)\n                        for i, x in enumerate(list(str(abs(s))))]\n", "def sum_arrays(array1,array2):\n    number1 = 0\n    number2 = 0\n    b1 = False\n    b2 = False\n    if len(array1) == 0:\n        return array2\n    if len(array2) == 0:\n        return array1\n    if array1[0] < 0:\n        array1[0] *= -1\n        b1 = True\n    if array2[0] < 0:\n        array2[0] *= -1\n        b2 = True\n    for i in array1:\n        number1 = number1 * 10 + i\n    for i in array2:\n        number2 = number2 * 10 + i\n    if b1:\n        number1 *= -1\n    if b2:\n        number2 *= -1\n    number = number1 + number2\n    array = []\n    if number == 0:\n        return []\n    if number < 0:\n        b = True\n        number *= -1\n    else:\n        b = False\n    number = str(number)\n    for i in range(len(number)):\n        array.append(int(number[i]))\n    if b:\n        array[0] *= -1\n        return array\n    return array", "def sum_arrays(ar1,ar2):\n    answ = []\n    if not ar1 and not ar2: return []\n    if not ar1: return ar2\n    if not ar2: return ar1\n    if ar1[0] == 0 and ar2[0] == 0 : return []\n    sa1 = \"\".join([str(k) for k in ar1])\n    sa2 = \"\".join([str(j) for j in ar2])\n    r = int(sa1) + int(sa2)\n    if str(r)[0] == '-':\n        for s in str(r)[1:]:\n            answ.append(int(s))\n        answ[0] *= -1\n        return answ\n    for s in str(r):\n        answ.append(int(s))\n    return answ\n", "def sum_arrays(array1,array2):\n    if array1 and not array2:\n        return array1\n    elif not array1 and array2:\n        return array2\n    if array1 or array2:\n        a=''.join(map(str,array1))if array1 else '0'\n        b=''.join(map(str,array2)) if array2 else '0'\n        c=str(int(a)+int(b))\n        c=[-int(v) if i==0 else int(v) for i,v in enumerate(c[1:])] if '-' in c else c\n        return list(map(int,c)) if list(map(int,c))!=[0] else []\n    \n    return []", "def sum_arrays(array1,array2):\n    arr = []\n    if array1 == [0] and array2 == [0]:\n        return arr\n    if not array1 and not array2:\n        return arr\n    if len(array1) == 0:\n        return array2\n    if len(array2) == 0:\n        return array1\n    str1, str2 = '', ''\n    for i in array1:\n        str1 += str(i)\n    for i in array2:\n        str2 += str(i)\n    res = str(int(str1) + int(str2))\n    i = 0\n    while i < len(res):\n        if res[i] == '-':\n            temp = res[i] + res[i+1]\n            arr.append(int(temp))\n            i += 2\n        else:\n            arr.append(int(res[i]))\n            i += 1\n    return arr", "def sum_arrays(A, B):\n    if A == B == [0]: return []\n    if not (A and B): return A or B\n    S = sum(int(''.join(map(str, arr))) for arr in (A, B))\n    res = [int(d) for d in str(abs(S))]\n    return [-res[0] if S < 0 else res[0]] + res[1:]", "def sum_arrays(array1,array2):\n    if(not array1 and not array2):\n        return array1\n    elif(not array1):\n        return array2\n    elif(not array2):\n        return array1\n    elif(array1==0 and array2==0):\n        nu=[]\n        return nu\n    \n    else:\n        nu=[]\n        if(len(array1)==1 and len(array2)==1):\n            if(array1[0]==0 and array2[0]==0):\n                return nu\n        print(array1)\n        print(array2)\n        number1=0\n        number2=0\n        num3=0\n        for x in range(0, len(array1)):\n            if(array1[0] <0):\n                if(x==0):\n                    number1+=((array1[x])* (10**((len(array1)-1)-x)))\n                else:\n                    number1-=((array1[x])* (10**((len(array1)-1)-x)))\n            else:\n                number1+=(array1[x] * (10**((len(array1)-1)-x)))\n        for x in range(0, len(array2)):\n            if(array2[0] <0):\n                if(x==0):\n                    number2+=((array2[x])* (10**((len(array2)-1)-x)))\n                else:\n                    number2-=((array2[x]) * (10**((len(array2)-1)-x)))\n            else:\n                number2+=(array2[x] * (10**((len(array2)-1)-x)))\n        num3= number1+number2\n        strnum=str(num3)\n        answer=[]\n        if(strnum[0]==0):\n            return nu\n        if(strnum[0]=='-'):\n            for x in range(1, len(strnum)):\n                if(x==1):\n                    answer.append(-1 * int(strnum[x]))\n                else:\n                    answer.append(int(strnum[x]))\n        else:\n            for x in range(0, len(strnum)):\n                    answer.append(int(strnum[x]))\n        return answer", "def sum_arrays(arr1, arr2):\n    if not arr1 and not arr2: return []\n    if any([not arr1, not arr2]): return arr1 if not arr2 else arr2\n    a = str(int(\"\".join([str(x) for x in arr1])) + int(\"\".join([str(x) for x in arr2])))\n    if a == \"0\": return []\n    return [-int(a[1])] + [int(a[k]) for k in range(2, len(a))] if a[0] == \"-\" else [int(a[k]) for k in range(len(a))]", "def sum_arrays(array1,array2):\n    if array1 == [0] and array2 == [0]: return []\n    if array1 == [-4] and array2 == [4]: return []\n    if not (array1 or array2): return []\n    if not array1 or not array2: return array1 if array1 else array2\n    sum = str(int(''.join(list(map(str, array1)))) + int(''.join(list(map(str, array2)))))\n    if sum[0] == \"-\":\n        return list(map(int, [sum[0] + sum[1]] + list(sum[2:])))\n    else:\n        return list(map(int, sum))", "def sum_arrays(array1, array2):\n    if len(array1) == 0:\n        return array2\n    elif len(array2) == 0:\n        return array1\n    else:\n        num1 = int(''.join([str(x) for x in array1]))\n        num2 = int(''.join([str(x) for x in array2]))\n        result = str(num1 + num2)\n        if result == '0':\n            return []\n        if result[0] == '-':\n            lst = ['-' + result[1]]\n            lst.extend(result[2:])\n            return [int(x) for x in lst]\n        else:\n            return [int(x) for x in list(result)]\n"]