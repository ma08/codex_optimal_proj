["# cook your dish here\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    array=list(map(int, input().split()))\n    list_sub=[]\n    idx=0\n    counter=0\n    for i in range(n-1):\n        if counter%2==0 and array[i]<=array[i+1]:\n            counter+=1 \n        elif counter%2==1 and array[i]>=array[i+1]:\n            counter+=1 \n        else:\n            list_sub.append((idx,i))\n            if counter%2==1:\n                idx=i \n                counter=1\n            else:\n                idx=i+1 \n                counter=0\n    list_sub.append((idx, n-1))\n    massimo=0\n    if len(list_sub)==1:\n        massimo=list_sub[0][1]-list_sub[0][0]+2\n    for i in range(len(list_sub)-1):\n        if list_sub[i][1]==list_sub[i+1][0]:\n            massimo=max(massimo, list_sub[i][1]-list_sub[i][0]+2+list_sub[i+1][1]-list_sub[i+1][0])\n        else:\n            massimo=max(massimo, list_sub[i][1]-list_sub[i][0]+3+list_sub[i+1][1]-list_sub[i+1][0])\n    print(massimo)", "# cook your dish here\nt = int(input())\nfor j in range(t):\n    n = int(input())\n    x = list(map(int,input().split()))\n    up = [1]*(n+1)\n    dn = [1]*(n+1)\n    up[-1],dn[-1] = 0,0\n    for i in reversed(range(n-1)):\n        if x[i] <= x[i+1]:\n            dn[i] += up[i+1]\n        if x[i] >= x[i+1]:\n            up[i] += dn[i+1]\n    ans = 0\n    for i in range(n):\n        t = dn[i]\n        if t%2:\n            t += dn[i+t]\n        else:\n            t += up[i+t]\n        ans = max(ans,t+1)\n    print(ans)", "#dt = {} for i in x: dt[i] = dt.get(i,0)+1\n#dt = {k:v for k,v in sorted(x.items(), key=lambda i: i[1])}\nipnl = lambda n: [int(input()) for _ in range(n)]\ninp = lambda :int(input())\nip = lambda :[int(w) for w in input().split()]\n\nfor _ in range(inp()):\n    n = inp()\n    x = ip()\n    up = [1]*(n+1)\n    dn = [1]*(n+1)\n    up[-1],dn[-1] = 0,0\n    for i in reversed(list(range(n-1))):\n        if x[i] <= x[i+1]:\n            dn[i] += up[i+1]\n        if x[i] >= x[i+1]:\n            up[i] += dn[i+1]\n    ans = 0\n    for i in range(n):\n        t = dn[i]\n        if t%2:\n            t += dn[i+t]\n        else:\n            t += up[i+t]\n        ans = max(ans,t+1)\n    print(ans)\n\n\n", "t = int(input())\r\n\r\nfor _ in range(t):\r\n\tn = int(input())\r\n\ta = list(map(int, input().split()))\r\n\r\n\tdp = [[1] * 2 for _ in range(n)]\r\n\t#print(dp)\r\n\r\n\tfor i in range(n - 2, -1, -1):\r\n\t\t#print(\"doing\",a[i+1],a[i])\r\n\t\tif a[i] <= a[i + 1]:\r\n\t\t\tdp[i][0] = 1 + dp[i + 1][1]\r\n\r\n\t\tif a[i] >= a[i + 1]:\r\n\t\t\tdp[i][1] = 1 + dp[i + 1][0]\r\n\r\n\t#print(dp)\r\n\r\n\tm = 0\r\n\tfor i in range(n):\r\n\t\tl = dp[i][0]\r\n\t\tif l % 2 == 0:\r\n\t\t\tm = max(m, l + dp[i + l - 1][0])\r\n\t\telse:\r\n\t\t\tm = max(m, l + dp[i + l - 1][1])\r\n\r\n\tprint(m)", "def main():\r\n\tfrom sys import stdin, stdout\r\n\trl = stdin.readline\r\n\r\n\tfor _ in range(int(rl())):\r\n\t\tn = int(rl())\r\n\t\ta = [int(x) for x in rl().split()]\r\n\r\n\t\tdp = [[1] * 2 for _ in range(n)]\r\n\r\n\t\tfor i in range(n - 2, -1, -1):\r\n\t\t\tif a[i] <= a[i + 1]:\r\n\t\t\t\tdp[i][0] = 1 + dp[i + 1][1]\r\n\r\n\t\t\tif a[i] >= a[i + 1]:\r\n\t\t\t\tdp[i][1] = 1 + dp[i + 1][0]\r\n\r\n\t\tm = 0\r\n\t\tfor i in range(n):\r\n\t\t\tl = dp[i][0]\r\n\t\t\tif l % 2 == 0:\r\n\t\t\t\tm = max(m, l + dp[i + l - 1][0])\r\n\t\t\telse:\r\n\t\t\t\tm = max(m, l + dp[i + l - 1][1])\r\n\r\n\t\tstdout.write(str(m) + '\\n')\r\n\r\n\r\nmain()\r\n", "for _ in range(int(input())):\r\n    n = int(input())\r\n    l = list(map(int, input().split()))\r\n    \r\n    ans = 0\r\n\r\n    s = 0\r\n    i = 1\r\n    down = True\r\n    prev_s = -1\r\n    prev_v = -1\r\n    prev_i = -1\r\n    while i < len(l):\r\n        down = not down\r\n\r\n        if l[i] == l[i-1]:\r\n            if l[i] != prev_v:\r\n                prev_v = l[i]\r\n                prev_i = i - 1\r\n        elif (down == True and l[i] < l[i-1]) or (down == False and l[i] > l[i-1]):\r\n            prev_v = -1\r\n            prev_i = -1\r\n            pass\r\n        else:\r\n            down = not down\r\n\r\n            if prev_s != -1:\r\n                ans = max(ans, i - prev_s + 1)\r\n            else:\r\n                ans = max(ans, i - prev_s)\r\n            prev_s = s\r\n\r\n            if l[i - 1] == prev_v:\r\n                if l[i] < prev_v:\r\n                    if (i - prev_i) % 2 == 0:\r\n                        s = prev_i\r\n                    else:\r\n                        s = prev_i+1\r\n                else:\r\n                    if (i - prev_i) % 2 == 0:\r\n                        s = prev_i+1\r\n                    else:\r\n                        s = prev_i\r\n            else:\r\n                if l[i] < l[i-1]:\r\n                    s = i\r\n                else:\r\n                    s = i - 1\r\n        i += 1\r\n    if prev_s != -1:\r\n        ans = max(ans, i - prev_s + 1)\r\n    ans = max(ans, i - s + 1)\r\n\r\n    print(ans)\r\n", "for _ in range(int(input())):\r\n    n = int(input())\r\n    l = list(map(int, input().split()))\r\n    \r\n    ans = 0\r\n\r\n    s = 0\r\n    i = 1\r\n    down = True\r\n    prev_s = -1\r\n    prev_v = -1\r\n    prev_i = -1\r\n    while i < len(l):\r\n        down = not down\r\n\r\n        if l[i] == l[i-1]:\r\n            if l[i] != prev_v:\r\n                prev_v = l[i]\r\n                prev_i = i - 1\r\n        elif (down ==True and l[i] < l[i-1]) or (down==False and l[i] > l[i-1]):\r\n            pass\r\n        else:\r\n            down = not down\r\n\r\n            if prev_s != -1:\r\n                ans = max(ans, i - prev_s + 1)\r\n            elif s==0 and ((down and (i-s) % 2 == 1) or (not down and (i-s) % 2 == 0)):\r\n                ans = max(ans, i - prev_s)\r\n            prev_s = s\r\n\r\n            if l[i - 1] == prev_v:\r\n                if l[i] < prev_v:\r\n                    if (i - prev_i) % 2 == 0:\r\n                        s = prev_i\r\n                    else:\r\n                        s = prev_i+1\r\n                else:\r\n                    if (i - prev_i) % 2 == 0:\r\n                        s = prev_i+1\r\n                    else:\r\n                        s = prev_i\r\n            else:\r\n                if l[i] < l[i-1]:\r\n                    s = i\r\n                else:\r\n                    s = i - 1\r\n        i += 1\r\n    if prev_s != -1:\r\n        ans = max(ans, i - prev_s + 1)\r\n    ans = max(ans, i - s + 1)\r\n\r\n    print(ans)\r\n", "for _ in range(int(input())):\r\n    n = int(input())\r\n    l = list(map(int, input().split()))\r\n    \r\n    ans = 0\r\n\r\n    s = 0\r\n    i = 1\r\n    down = True\r\n    prev_s = -1\r\n    prev_v = -1\r\n    prev_i = -1\r\n    pp_v = -1\r\n    while i < n:\r\n        down = not down\r\n\r\n        if l[i] == l[i-1]:\r\n            if l[i] != prev_v:\r\n                prev_v = l[i]\r\n                prev_i = i - 1\r\n                if i - 2 >= 0:\r\n                    pp_v = l[i-2]\r\n        elif (down ==True and l[i] < l[i-1]) or (down==False and l[i] > l[i-1]):\r\n            pass\r\n        else:\r\n            down = not down\r\n\r\n            if prev_s != -1:\r\n                ans = max(ans, i - prev_s + 1)\r\n            else:\r\n                ans = max(ans, i - prev_s)\r\n            prev_s = s\r\n\r\n            if l[i - 1] == prev_v:\r\n                if l[i] < prev_v:\r\n                    if (i - prev_i) % 2 == 0:\r\n                        s = prev_i\r\n                    else:\r\n                        if pp_v != -1 and pp_v < prev_v:\r\n                            s = prev_i -1\r\n                        else:\r\n                            s = prev_i+1\r\n                else:\r\n                    if (i - prev_i) % 2 == 0:\r\n                        if pp_v != -1 and pp_v < prev_v:\r\n                            s = prev_i - 1\r\n                        else:\r\n                            s = prev_i+1\r\n                    else:\r\n                        s = prev_i\r\n            else:\r\n                if l[i] < l[i-1]:\r\n                    s = i\r\n                else:\r\n                    s = i - 1\r\n        i += 1\r\n    if prev_s != -1:\r\n        ans = max(ans, i - prev_s + 1)\r\n    ans = max(ans, i - s + 1)\r\n\r\n    print(ans)\r\n", "for _ in range(int(input())):\r\n    n = int(input())\r\n    l = list(map(int, input().split()))\r\n    \r\n    ans = 0\r\n\r\n    s = 0\r\n    i = 1\r\n    down = True\r\n    prev_s = 0\r\n    prev_v = -1\r\n    prev_i = -1\r\n    pp_v = -1\r\n    while i < n:\r\n        down = not down\r\n\r\n        if l[i] == l[i-1]:\r\n            if l[i] != prev_v:\r\n                prev_v = l[i]\r\n                prev_i = i - 1\r\n                if i - 2 >= 0:\r\n                    pp_v = l[i-2]\r\n        elif (down ==True and l[i] < l[i-1]) or (down==False and l[i] > l[i-1]):\r\n            pass\r\n        else:\r\n            down = not down\r\n            ans = max(ans, i - prev_s + 1)\r\n            prev_s = s\r\n\r\n            if l[i - 1] == prev_v:\r\n                if l[i] < prev_v:\r\n                    if (i - prev_i) % 2 == 0:\r\n                        s = prev_i\r\n                    else:\r\n                        if pp_v != -1 and pp_v < prev_v:\r\n                            s = prev_i -1\r\n                        else:\r\n                            s = prev_i+1\r\n                else:\r\n                    if (i - prev_i) % 2 == 0:\r\n                        if pp_v != -1 and pp_v < prev_v:\r\n                            s = prev_i - 1\r\n                        else:\r\n                            s = prev_i+1\r\n                    else:\r\n                        s = prev_i\r\n            else:\r\n                if l[i] < l[i-1]:\r\n                    s = i\r\n                else:\r\n                    s = i-1\r\n        i += 1\r\n    if prev_s != -1:\r\n        ans = max(ans, i - prev_s + 1)\r\n    else:\r\n        ans = max(ans, i - prev_s)\r\n    ans = max(ans, i - s + 1)\r\n    print(ans)\r\n", "for _ in range(int(input())):\r\n    n = int(input())\r\n    l = list(map(int, input().split()))\r\n    \r\n    ans = 0\r\n\r\n    s = 0\r\n    i = 1\r\n    down = True\r\n    prev_s = -1\r\n    prev_v = -1\r\n    prev_i = -1\r\n    pp_v = -1\r\n    while i < n:\r\n        down = not down\r\n\r\n        if l[i] == l[i-1]:\r\n            if l[i] != prev_v:\r\n                prev_v = l[i]\r\n                prev_i = i - 1\r\n                if i - 2 >= 0:\r\n                    pp_v = l[i-2]\r\n        elif (down ==True and l[i] < l[i-1]) or (down==False and l[i] > l[i-1]):\r\n            pass\r\n        else:\r\n            down = not down\r\n            ans = max(ans, i - prev_s + 1)\r\n            prev_s = s\r\n\r\n            if l[i - 1] == prev_v:\r\n                if l[i] < prev_v:\r\n                    if (i - prev_i) % 2 == 0:\r\n                        s = prev_i\r\n                    else:\r\n                        if pp_v != -1 and pp_v < prev_v:\r\n                            s = prev_i -1\r\n                        else:\r\n                            s = prev_i+1\r\n                else:\r\n                    if (i - prev_i) % 2 == 0:\r\n                        if pp_v != -1 and pp_v < prev_v:\r\n                            s = prev_i - 1\r\n                        else:\r\n                            s = prev_i+1\r\n                    else:\r\n                        s = prev_i\r\n            else:\r\n                if l[i] < l[i-1]:\r\n                    s = i\r\n                else:\r\n                    s = i-1\r\n        i += 1\r\n    if prev_s != -1:\r\n        ans = max(ans, i - prev_s + 1)\r\n    else:\r\n        ans = max(ans, i - prev_s)\r\n    ans = max(ans, i - s + 1)\r\n    print(ans)\r\n", "for _ in range(int(input())):\r\n    n = int(input())\r\n    l = list(map(int, input().split()))\r\n    \r\n    ans = 0\r\n\r\n    s = 0\r\n    i = 1\r\n    down = True\r\n    prev_s = -1\r\n    prev_v = -1\r\n    prev_i = -1\r\n    while i < n:\r\n        down = not down\r\n\r\n        if l[i] == l[i-1]:\r\n            if l[i] != prev_v:\r\n                prev_v = l[i]\r\n                prev_i = i-1\r\n        elif (down ==True and l[i] < l[i-1]) or (down==False and l[i] > l[i-1]):\r\n            pass\r\n        else:\r\n            down = not down\r\n            ans = max(ans, i - prev_s + 1)\r\n            prev_s = s\r\n\r\n            if l[i - 1] == prev_v:\r\n                if l[i] < prev_v:\r\n                    if (i - prev_i) % 2 == 0:\r\n                        s = prev_i\r\n                    else:\r\n                        s = prev_i+1\r\n                else:\r\n                    if (i - prev_i) % 2 == 0:\r\n                        s = prev_i+1\r\n                    else:\r\n                        s = prev_i\r\n            else:\r\n                if l[i] < l[i-1]:\r\n                    s = i\r\n                else:\r\n                    s = i-1\r\n        i += 1\r\n    if prev_s != -1:\r\n        ans = max(ans, i - prev_s + 1)\r\n    else:\r\n        ans = max(ans, i - prev_s)\r\n    ans = max(ans, i - s + 1)\r\n    print(ans)", "for _ in range(int(input())):\r\n    n = int(input())\r\n    l = list(map(int, input().split()))\r\n    \r\n    ans = 0\r\n\r\n    s = 0\r\n    i = 1\r\n    down = True\r\n    prev_s = -1\r\n    prev_v = -1\r\n    prev_i = -1\r\n    while i < n:\r\n        down = not down\r\n\r\n        if l[i] == l[i-1]:\r\n            if l[i] != prev_v:\r\n                prev_v = l[i]\r\n                prev_i = i-1\r\n        elif (down ==True and l[i] < l[i-1]) or (down==False and l[i] > l[i-1]):\r\n            pass\r\n        else:\r\n            down = not down\r\n            ans = max(ans, i - prev_s + 1)\r\n            prev_s = s\r\n\r\n            if l[i - 1] == prev_v:\r\n                if l[i] < prev_v:\r\n                    if (i - prev_i) % 2 == 0:\r\n                        s = prev_i\r\n                    else:\r\n                        s = prev_i+1\r\n                else:\r\n                    if (i - prev_i) % 2 == 0:\r\n                        s = prev_i+1\r\n                    else:\r\n                        s = prev_i\r\n            else:\r\n                if l[i] < l[i-1]:\r\n                    s = i\r\n                else:\r\n                    s = i-1\r\n        i += 1\r\n    if prev_s != -1:\r\n        ans = max(ans, i - prev_s + 1)\r\n    ans = max(ans, i - s + 1)\r\n    print(ans)\r\n", "for _ in range(int(input())):\r\n    n = int(input())\r\n    l = list(map(int, input().split()))\r\n    \r\n    ans = 0\r\n\r\n    s = 0\r\n    i = 1\r\n    down = True\r\n    prev_s = -1\r\n    prev_v = -1\r\n    prev_i = -1\r\n    while i < n:\r\n        down = not down\r\n\r\n        if l[i] == l[i-1]:\r\n            if l[i] != prev_v:\r\n                prev_v = l[i]\r\n                prev_i = i-1\r\n        elif (down ==True and l[i] < l[i-1]) or (down==False and l[i] > l[i-1]):\r\n            pass\r\n        else:\r\n            down = not down\r\n            if prev_s != -1:\r\n                ans = max(ans, i - prev_s + 1)\r\n            prev_s = s\r\n\r\n            if l[i - 1] == prev_v:\r\n                if l[i] < prev_v:\r\n                    if (i - prev_i) % 2 == 0:\r\n                        s = prev_i\r\n                    else:\r\n                        s = prev_i+1\r\n                else:\r\n                    if (i - prev_i) % 2 == 0:\r\n                        s = prev_i+1\r\n                    else:\r\n                        s = prev_i\r\n            else:\r\n                if l[i] < l[i-1]:\r\n                    s = i\r\n                else:\r\n                    s = i-1\r\n        i += 1\r\n    if prev_s != -1:\r\n        ans = max(ans, i - prev_s + 1)\r\n    ans = max(ans, i - s + 1)\r\n    print(ans)\r\n", "def main():\r\n\tfrom sys import stdin, stdout\r\n\trl = stdin.readline\r\n\r\n\tfor _ in range(int(rl())):\r\n\t\tn = int(rl())\r\n\t\ta = [int(x) for x in rl().split()]\r\n\r\n\t\tdp = [[1] * 2 for _ in range(n)]\r\n\r\n\t\tfor i in range(n - 2, -1, -1):\r\n\t\t\tif a[i] <= a[i + 1]:\r\n\t\t\t\tdp[i][0] = 1 + dp[i + 1][1]\r\n\r\n\t\t\tif a[i] >= a[i + 1]:\r\n\t\t\t\tdp[i][1] = 1 + dp[i + 1][0]\r\n\r\n\t\tm = 0\r\n\t\tfor i in range(n):\r\n\t\t\tl = dp[i][0]\r\n\t\t\tif l % 2 == 0:\r\n\t\t\t\tm = max(m, l + dp[i + l - 1][0])\r\n\t\t\telse:\r\n\t\t\t\tm = max(m, l + dp[i + l - 1][1])\r\n\r\n\t\tstdout.write(str(m) + '\\n')\r\n\r\n\r\nmain()\r\n    \r\n", "def main():\r\n\tfrom sys import stdin, stdout\r\n\trl = stdin.readline\r\n\r\n\tfor _ in range(int(rl())):\r\n\t\tn = int(rl())\r\n\t\ta = [int(x) for x in rl().split()]\r\n\r\n\t\tdp = [[1] * 2 for _ in range(n)]\r\n\r\n\t\tfor i in range(n - 2, -1, -1):\r\n\t\t\tif a[i] <= a[i + 1]:\r\n\t\t\t\tdp[i][0] = 1 + dp[i + 1][1]\r\n\r\n\t\t\tif a[i] >= a[i + 1]:\r\n\t\t\t\tdp[i][1] = 1 + dp[i + 1][0]\r\n\r\n\t\tm = 0\r\n\t\tfor i in range(n):\r\n\t\t\tl = dp[i][0]\r\n\t\t\tif l % 2 == 0:\r\n\t\t\t\tm = max(m, l + dp[i + l - 1][0])\r\n\t\t\telse:\r\n\t\t\t\tm = max(m, l + dp[i + l - 1][1])\r\n\r\n\t\tstdout.write(str(m) + '\\n')\r\n\r\n\r\nmain()\r\n", "# cook your dish here\nfor g in range(int(input())):\n  n = int(input())\n  a = list(map(int,input().split()))\n  up = [[0 for i in range(n)]for j in range(2)]\n  up[0][n-1] = 1\n  up[1][n-1] = 1\n  for i in range(n-2,-1,-1):\n    if a[i]<a[i+1]:\n      up[0][i] = up[1][i+1]+1\n      up[1][i] = 1\n    elif a[i]>a[i+1]:\n      up[1][i] = up[0][i+1]+1\n      up[0][i] = 1\n    else:\n      up[0][i] = up[1][i+1]+1\n      up[1][i] = up[0][i+1]+1\n  max1 = 0\n  for i in range(n):\n    op = up[0][i]\n    if i + op>=n:\n      max1 = max(max1,op+1)\n    elif op%2==0:\n      max1 = max(max1,up[0][i]+1+up[1][i+op])\n    elif op%2==1:\n      max1 = max(max1,up[0][i]+1+up[0][i+op])\n    max1 = max(max1,up[1][i]+1)\n  print(max1)\n", "\r\nt = int(input())\r\nfor _ in range(t):\r\n    finalans=0\r\n    n = int(input())\r\n    seq = list(map(int,input().split()))\r\n    ans,r,count,i=1,0,0,1\r\n    while i<n:\r\n        tem = i + r\r\n        if (seq[i] >= seq[i - 1] and tem % 2 == 1) or (seq[i] <= seq[i - 1] and tem % 2 == 0):\r\n            ans+=1\r\n            if (i==n-1 and count<1):\r\n                ans+=1\r\n        elif (seq[i] >= seq[i - 1] and tem % 2 == 0):\r\n            if count<1:\r\n                ref = i-1\r\n                ans+=2\r\n                r+=1\r\n                count=1\r\n            else:\r\n                finalans = max(ans,finalans)\r\n                ans = i-ref\r\n                r = ref%2\r\n                i-=1\r\n                count=0\r\n        elif(seq[i] <= seq[i - 1] and tem % 2 == 1):\r\n            if count<1:\r\n                ref = i\r\n                ans+=2\r\n                r+=1\r\n                count=1\r\n            else:\r\n                finalans = max(ans,finalans)\r\n                ans = i-ref\r\n                r = ref%2\r\n                i-=1\r\n                count=0\r\n        i+=1\r\n    finalans = max(finalans,ans)\r\n    print(finalans)\r\n\r\n\r\n\r\n\r\n", "def check(b):\r\n    \r\n    ch = True\r\n    \r\n    for m in range(len(b)-1):\r\n        if m % 2 == 0:\r\n            if b[m] > b[m+1]:\r\n                ch = False\r\n        else:\r\n            if b[m] < b[m+1]:\r\n                ch = False\r\n            \r\n    return ch\r\n    \r\ndef big(n,a):\r\n    maxi = 1\r\n    c = []\r\n\t\r\n    for j in range(len(a)):\r\n\t    for l in range(j+1,len(a)):\r\n\t        if check(a[j:l+1]) == True:\r\n\t            if len(a[j:l+1]) > maxi:\r\n\t                maxi = len(a[j:l+1])\r\n\t                c = a[j:l+1]\r\n\t                \r\n    return maxi,c\r\n\r\nt = int(input())\r\nfor i in range(t):\r\n\tn = int(input())\r\n\ta = [int(i) for i in input().split()]\r\n\t\r\n\tfinal_max = 0\r\n\t\r\n\te = a[:]\r\n\te.insert(0,a[0]+1)\r\n\tif len(big(n,e)[1]) > final_max:\r\n\t    final_max = len(big(n,e)[1])\r\n\t\r\n\te = a[:]\r\n\te.insert(0,a[0]+1)\r\n\tif len(big(n,e)[1]) > final_max:\r\n\t    final_max = len(big(n,e)[1])\r\n\t    \r\n\te = a[:]\r\n\te.insert(len(a),a[len(a)-1]-1)\r\n\tif len(big(n,e)[1]) > final_max:\r\n\t    final_max = len(big(n,e)[1])\r\n\t    \r\n\te = a[:]\r\n\te.insert(len(a),a[len(a)-1]+1)\r\n\tif len(big(n,e)[1]) > final_max:\r\n\t    final_max = len(big(n,e)[1])\r\n\t   \r\n\t\r\n\tfor l in range(1,len(a)):\r\n\t    d = a[:]\r\n\t    bef,aft = a[l-1],a[l]\r\n\t    if bef > aft :\r\n\t        d.insert(l,bef+1)\r\n\t    else:\r\n\t        d.insert(l,bef-1)\r\n\t    maxi,c = big(l,d)\r\n\t    if len(c) > final_max:\r\n\t        final_max = len(c)\r\n\tprint(final_max)", "for i in range(int(input())):\r\n\tn = int(input())\r\n\tdp = [[1 for k in range(n)] for k in range(2)] # row 1: longest UD, row 2: longest DU\r\n\tnums = [int(i) for i in input().split()]\r\n\tanswer = 0\r\n\tfor k in range(n - 2, -1, -1):\r\n\t\tif nums[k + 1] >= nums[k]:\r\n\t\t\tdp[0][k] = 1 + dp[1][k + 1]\r\n\t\t\tif dp[0][k] > answer:\r\n\t\t\t\tanswer = dp[0][k]\r\n\t\tif nums[k + 1] <= nums[k]:\r\n\t\t\tdp[1][k] = 1 + dp[0][k + 1]\r\n\r\n\tanswer += 1\r\n\tfor k in range(n - 1):\r\n\t\tif k + dp[0][k] >= n:\r\n\t\t\tcontinue\r\n\t\tpossible = 0\r\n\t\tif dp[0][k] % 2 == 0:\r\n\t\t\tpossible = dp[0][k] + dp[1][k + dp[0][k]] + 1\r\n\t\telse:\r\n\t\t\tpossible = dp[0][k] + dp[0][k + dp[0][k]] + 1\r\n\t\tif possible > answer:\r\n\t\t\tanswer = possible\r\n\r\n\tprint(answer)\r\n\r\n", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[[None, None], [None, None]] for _ in range(n)]\n    dp[n-1] = [[1,2], [1,2]]\n    i = n-2\n    while i > -1:\n        if a[i+1] > a[i]:\n            dp[i][1][0] = 1 + dp[i+1][0][0]\n            dp[i][1][1] = 1 + dp[i+1][0][1]\n            dp[i][0][1] = 2 + dp[i+1][0][0]\n            dp[i][0][0] = 1\n        elif a[i+1] < a[i]:\n            dp[i][0][1] = 1 + dp[i+1][1][1]\n            dp[i][0][0] = 1 + dp[i+1][1][0]\n            dp[i][1][1] = 2 + dp[i+1][1][0]\n            dp[i][1][0] = 1\n        else:\n            dp[i][1][0] = 1 + dp[i+1][0][0]\n            dp[i][1][1] = 1 + dp[i+1][0][1]\n            dp[i][0][1] = 1 + dp[i+1][1][1]\n            dp[i][0][0] = 1 + dp[i+1][1][0]\n        i -= 1\n    print(max([dp[p][1][1] for p in range(n)]))\n", "from sys import stdin\r\nfor __ in range(int(stdin.readline())):\r\n    n, nums = int(stdin.readline()), list(map(int, stdin.readline().split()))\r\n    longest = [1]*n  # First one is smaller\r\n    opp_longest = [1]*n\r\n    best = 1\r\n    for i in range(n-2, -1, -1):\r\n        if nums[i] <= nums[i+1]:\r\n            if nums[i] == nums[i+1]:\r\n                opp_longest[i] += longest[i+1]\r\n            longest[i] += opp_longest[i+1]\r\n            if i + longest[i] < n:\r\n                if longest[i] % 2:\r\n                    best = max(best, longest[i] + longest[i + longest[i]])\r\n                else:\r\n                    best = max(best, longest[i] + opp_longest[i + longest[i]])\r\n        else:\r\n            opp_longest[i] += longest[i+1]\r\n        best = max(opp_longest[i], longest[i], best)\r\n    print(max(best, opp_longest[0]) + 1)", "from sys import stdin\r\nfor __ in range(int(stdin.readline())):\r\n    n, nums = int(stdin.readline()), list(map(int, stdin.readline().split()))\r\n    longest = [1]*n  # First one is smaller\r\n    opp_longest = [1]*n\r\n    best = 1\r\n    for i in range(n-2, -1, -1):\r\n\r\n        if nums[i] <= nums[i+1]:\r\n            if nums[i] == nums[i+1]:\r\n                opp_longest[i] += longest[i+1]\r\n            longest[i] += opp_longest[i+1]\r\n            best = max(longest[i], best)\r\n            if i + longest[i] < n:\r\n                if longest[i] % 2:\r\n                    best = max(best, longest[i] + longest[i + longest[i]])\r\n                else:\r\n                    best = max(best, longest[i] + opp_longest[i + longest[i]])\r\n        else:\r\n            opp_longest[i] += longest[i+1]\r\n    print(max(best, opp_longest[0]) + 1)"]