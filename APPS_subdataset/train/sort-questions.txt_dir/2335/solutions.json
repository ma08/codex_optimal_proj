["import sys\ninput= sys.stdin.readline\nt = int(input())\nout = []\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int,input().split()))\n\n    smol = l[0]\n    works = True\n    for i in range(1, n):\n        if l[i] == l[i-1] + 1:\n            pass\n        else:\n            if l[i] > smol:\n                works = False\n                break\n        smol = min(smol, l[i])\n\n    if works:\n        out.append('Yes')\n    else:\n        out.append('No')\nprint('\\n'.join(out))\n", "t = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    last_start = l[0]\n    prev = l[0]\n    for j in l[1:]:\n        if j == prev + 1:\n            prev = j\n            continue\n        prev = j\n        if j >= last_start:\n            print(\"No\")\n            break\n        last_start = j\n    else:\n        print(\"Yes\")\n\n", "import sys\ndef input():\n\treturn sys.stdin.readline()[:-1]\nt = int(input())\nfor _ in range(t):\n\tn = int(input())\n\tp = list(map(int, input().split()))\n\trm = n\n\tnot_rm = False\n\tok = True\n\tfor x in p:\n\t\tif not not_rm:\n\t\t\tif x == rm:\n\t\t\t\trm -= 1\n\t\t\telse:\n\t\t\t\tnot_rm = True\n\t\t\t\tlast = x\n\t\t\t\tlm = x\n\t\telse:\n\t\t\tif x != last+1:\n\t\t\t\tok = False\n\t\t\t\tbreak\n\t\t\telif x == rm:\n\t\t\t\tnot_rm = False\n\t\t\t\trm = lm-1\n\t\t\telse:\n\t\t\t\tlast = x\n\tif ok:\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")", "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = [int(a) - 1 for a in input().split()]\n    D = {a: i for i, a in enumerate(A)}\n    X = [0] * N + [1]\n    pre = N - 1\n    for k in range(N):\n        i = D[k]\n        if X[pre + 1] or i == pre + 1:\n            pre = i\n            X[pre] = 1\n        else:\n            print(\"No\")\n            break\n    else:\n        print(\"Yes\")\n", "import sys\nfrom collections import defaultdict\nfrom copy import copy\n\nR = lambda t = int: t(input())\nRL = lambda t = int: [t(x) for x in input().split()]\nRLL = lambda n, t = int: [RL(t) for _ in range(n)]\n\ndef solve():\n  n = R()\n  P = RL()\n  m = l = P[0]\n  for p in P[1:]:\n    if l + 1 != p and p > m:\n      print('No')\n      return\n    m = min(m, p)\n    l = p\n  print('Yes')\n  \nT = R()\nfor _ in range(T):\n  solve()\n", "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    p = list(map(int, input().split()))\n    ok = True\n    for i in range(1, n):\n        if p[i-1] < p[i] and p[i-1] + 1 != p[i]:\n            ok = False\n            break\n    print('Yes' if ok else 'No')\n\n", "\nt = int(input())\n\nfor loop in range(t):\n\n    n = int(input())\n    p = list(map(int,input().split()))\n\n    nf = float(\"inf\")\n    now = float(\"inf\")\n\n    ans = \"Yes\"\n    for i in p:\n\n        if i == now+1:\n            now += 1\n        elif i > nf:\n            ans = \"No\"\n            break\n        else:\n            nf = i\n            now = i\n\n    print (ans)\n"]