["from collections import Counter\nimport re\n\ndef solve(files):\n    c = Counter(re.match('.*(\\.[^.]+)$', fn).group(1) for fn in files)\n    m = max(c.values(),default=0)\n    return sorted(k for k in c if c[k] == m)", "from collections import Counter\n\ndef solve(files):\n    c = Counter(f[f.rfind(\".\"):] for f in files)\n    MAX = max(c.values(), default=0)\n    return sorted(e[0] for e in c.items() if e[1] == MAX)", "import os\nfrom collections import Counter\n\ndef solve(files):\n    c = Counter(os.path.splitext(f)[-1] for f in files)\n    m = max(c.values(), default=0)\n    return [x for x in sorted(c) if c[x] == m]", "def solve(files):\n    if not files:\n        return files\n    \n    d = {}\n    \n    for file in files:\n        ext = file.split('.')[-1]\n        \n        if ext in d:\n            d[ext] += 1\n        else:\n            d[ext] = 0\n            \n    m = max(d.values())\n    \n    most_used = ['.'+i for i, j in list(d.items()) if j == m]\n    \n    return sorted(most_used)\n", "solve=lambda f:(lambda l:(lambda d:sorted([e for e in d if d[e]==max(d.values())]))({e:l.count(e) for e in set(l)}))([e[e.rfind('.'):] for e in f])", "from collections import Counter as c\nfrom itertools import takewhile\n\ndef solve(arr):\n    if arr == []: return []\n    a = sorted(c(map(lambda x: x.split('.')[-1],arr)).most_common(), key=lambda i: (-i[1], i[0]))\n    maxi = a[0][1]\n    return list(map(lambda x: '.'+x[0],(takewhile(lambda x: x[1] == maxi, a))))", "from collections import Counter\n\n\ndef solve(files):\n    count = Counter(f.rsplit(\".\")[-1] for f in files)\n    m = max(count.values(), default=0)\n    return sorted(f\".{ext}\" for ext, c in count.items() if c == m)", "from collections import Counter\ndef solve(files):\n    ext = [f.split('.')[-1] for f in files]\n    return sorted('.'+i for i in set(ext) if ext.count(i)==max(ext.count(i) for i in ext))", "from collections import Counter\ndef solve(files):\n    extensions = Counter(['.'+i.split('.')[-1] for i in files])\n    m = max(extensions.values(),default=0)\n    return sorted([i for i,j in extensions.items() if j==m])", "def solve(files):\n    hashMap = {}\n    mostCommon = []\n    maxCount = 1\n    \n    for file in files:\n        ext = file[file.rfind('.'):]\n        count = hashMap[ext] = hashMap.get(ext, 0) + 1\n        \n        if maxCount < count:\n            maxCount = count\n            mostCommon = [ext]\n        elif maxCount == count:\n            mostCommon.append(ext)\n             \n    mostCommon.sort()  \n  \n    return mostCommon"]