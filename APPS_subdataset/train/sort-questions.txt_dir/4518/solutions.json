["from re import compile\n\ndef wheres_wally(string):\n    m = compile('(^|.*[\\s])(Wally)([\\.,\\s\\']|$)').match(string)\n    return m.start(2) if m else -1", "import re\n\ndef wheres_wally(string):\n    return next((m.start() for m in re.finditer(r'((?<= )W|^W)ally\\b', string)), -1)", "from re import search\ndef wheres_wally(s):\n  match = search(r'(?:^|\\s)Wally(?:\\W|$)', s)\n  return -1 if match == None else match.start(0) + 1 if match.group(0)[0].isspace() else match.start(0)\n", "def wheres_wally(stg):\n    i = stg.find(\"Wally\")\n    while i > -1 and (i and stg[i-1] != \" \" or stg[i+5:i+6].isalnum()):\n        i = stg.find(\"Wally\", i+1)\n    return i", "import re\ndef wheres_wally(string):\n    match = re.compile(r'(^|.*[\\s])(Wally)([\\.,\\s\\']|$)').match(string)\n    return match.start(2) if match else -1\n", "import re\n\ndef wheres_wally(string):\n    match = re.search(r\"(?:^|\\s)(Wally)\\b\", string)\n    return match.start(1) if match else -1", "import re\n\ndef wheres_wally(string):    \n    match = re.search(r\"(?<!\\S)\\bWally\\b\", string)    \n    return match.start() if match else -1\n", "from re import search\nwheres_wally=lambda s: (lambda r: -1 if r==None else r.start(0))(search(\"(^|(?<= ))Wally(\\W|$)\",s))", "import re\ndef wheres_wally(string):\n    match=re.search(r' Wally\\b',\" \"+string)\n    if match is None:\n        return -1\n    else:\n        return match.start()", "import re\ndef wheres_wally(s):\n    try:\n        return [m.start() for m in\n                re.finditer(\"(?<=\\s)Wally(\\s|[.,\\';+-]|\\Z)|(?<=^)Wally(\\s|[.,\\';+-]|\\Z)\",\n                            s)][0]\n    except:\n        return -1\n"]