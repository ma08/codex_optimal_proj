["from bisect import bisect_left\nfrom collections import deque\n\n\ndef find_discounted(prices: str) -> str:\n    all_prices = deque(list(map(int, prices.split())))\n    discounts = []\n\n    while all_prices:\n        d = all_prices.popleft()\n        discounts.append(d)\n        del all_prices[bisect_left(all_prices, d * 4 // 3)]\n\n    return ' '.join(map(str, discounts))\n", "def find_discounted(prices):\n    prices = [int(n) for n in prices.split()]\n    return \" \".join(prices.remove(round(p*4/3)) or str(p) for p in prices)\n", "from collections import Counter\ndef find_discounted(s):\n    s = list(map(int, s.split()))\n    c, li = Counter(s), []\n    for i in s:\n        i = int(i)\n        ans = i - (i * 0.25)\n        if c.get(ans, 0):\n            li.append(str(int(ans)))\n            c[ans] -= 1\n            c[i] -= 1\n    return \" \".join(li)", "from collections import Counter\n\n\ndef find_discounted(prices):\n    count_prices = Counter(int(a) for a in prices.split())\n    result = []\n    for key in sorted(count_prices):\n        value = count_prices[key]\n        try:\n            count_prices[int(key / 0.75)] -= value\n        except KeyError:\n            continue\n        result.extend(key for _ in range(value if key else 1))\n    return ' '.join(str(b) for b in result)\n", "def find_discounted(prices):\n    discount = .25\n    in_list = [int(p) for p in prices.split()]\n    out_list = []\n    while (in_list):\n        full_price = in_list.pop()\n        discounted_price = int(full_price*(1-discount))\n        in_list.remove(discounted_price)\n        out_list.append(discounted_price)\n    out_list.reverse()\n    ans = ' '.join(str(p) for p in out_list)     \n    return(ans)\n   \n", "def find_discounted(prices):\n    if prices == \"\":\n        return \"\"\n    out = []\n    prices = [int(x) for x in prices.split(\" \")]\n    for price in prices:\n        if int(price/0.75) in prices:\n            prices.remove(int(price/0.75))\n            out.append(str(price))\n    return \" \".join(out)", "def find_discounted(prices):\n    prices=list(map(int,prices.split()))\n    discounted=[]\n    while(prices):\n        price=prices.pop()\n        discount=int(price*0.75)\n        prices.remove(discount)\n        discounted.append(discount)\n    return \" \".join(map(str,discounted[::-1]))"]