["import sys\n\nn_discounts = int(sys.stdin.readline())\ndiscount_values = [int(x) for x in sys.stdin.readline().split()]\nn_items = int(sys.stdin.readline())\nitem_values = [int(x) for x in sys.stdin.readline().split()]\n\nmin_discount_req = 10000000\nfor discount_value in discount_values:\n    min_discount_req = min(min_discount_req, discount_value)\nitem_values.sort(reverse=True)\n\nindex = 0\noverall_price = 0\nwhile index < n_items:\n    n_left = min(min_discount_req, n_items - index)\n    for i in range(n_left):\n        overall_price += item_values[index+i]\n    index += n_left + 2\n\nprint(overall_price)\n    \n", "input()\nk = min(map(int, input().split()))\nn = int(input())\np = sorted(map(int, input().split()), reverse = True) + [0] * k\nprint(sum(sum(p[i: i + k]) for i in range(0, n, k + 2)))", "m, mSale = int(input()), list(map(int,input().split()))\nn, nPrice = int(input()), list(map(int,input().split()))\nnPrice.sort()\nsum, small = 0, min(mSale)\n\nwhile True:\n    if len(nPrice) <= small:\n        for k in nPrice: sum+=k\n        print(sum)\n        return\n    else:\n        for i in range(small): sum+=nPrice.pop()\n        if len(nPrice) <= 2:\n            print(sum)\n            return\n        else:\n            for i in range(2): nPrice.pop()", "# 261A\n\nfrom sys import stdin\n\n__author__ = 'artyom'\n\n\ndef read_int():\n  return int(stdin.readline().strip())\n\n\ndef read_int_ary():\n  return map(int, stdin.readline().strip().split())\n\n\nm = read_int()\nd = sorted(read_int_ary())[0]\nn = read_int()\na = list(reversed(sorted(read_int_ary())))\n\nres = i = 0\nwhile i < n:\n  next = i + d\n  res += sum(a[i:min(next, n)])\n  i = next + 2\n\nprint(res)", "def main():\n    input()\n    q = min(list(map(int, input().split())))\n    input()\n    aa = sorted(map(int, input().split()), reverse=True)\n    print(sum(aa) - sum(aa[q::q + 2]) - sum(aa[q + 1::q + 2]))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "input()\nd=[int(i) for i in input().split()]\nc=int(input())\nb=[int(i) for i in input().split()]\nb.sort()\n#d.sort()\ntake=1\np=min(d)\ns=0\nbuy=p\nfor i in reversed(b):\n    if buy:\n        s+=i\n        buy-=1\n    else:\n        if take:\n            take-=1\n        else:\n            buy=p\n            take=1\n\nprint(s)\n\n", "m=int(input())\nq=list(map(int,input().split()))\nn=int(input())\na=list(map(int,input().split()))\nsk=min(q)\na.sort()\nj=1\nans=0\nfor i in range(n-1,-1,-1):\n    l=sk-j\n    if l==-1:\n        pass\n    elif l==-2:\n        j=0\n    else:\n        ans+=a[i]\n    j+=1\nprint(ans)\n        \n\n", "m = int(input())\nq = [int(i) for i in input().split()]\n\nn = int(input())\na = [int(i) for i in input().split()]\nc = min(q)\na.sort()\n\nprice = 0\nfor i in range(n):\n  if i % (c+2) < c:\n    price += a[n-1-i]\n  \nprint(price)", "discounts = int(input())\ndiscount_values = list(map(int, input().split()))\ntarget = int(input())\nitem_values = list(map(int, input().split()))\ndiscount_values.sort()\nitem_values.sort()\nitem_values.reverse()\n# print(item_values)\n# print(discount_values)\nbasket_size = discount_values[0]\nresult = 0\nbought = 0\ncounter = 0\nwhile bought < target:\n    if  target - bought < basket_size:\n        result += sum(item_values[counter:])\n        bought += target + 1\n    else:\n        bought += 2 + basket_size\n        result += sum(item_values[counter:counter + basket_size])\n        counter += 2 + basket_size\n\nprint(result)\n", "m = int(input())\nq = list(map(int, input().split()))\nn = int(input())\na = list(map(int, input().split()))\n\na.sort(reverse=True)\nq.sort()\n\nans = 0\nmm = q[0]\n\ni = 0\nwhile i<n:\n    j = i\n    if j+mm <= n:\n        while i < j+mm:\n            ans+=a[i]\n            i+=1\n        i+=1\n    else:\n        break\n    i+=1\nif i <n:\n    ans += sum(a[i:])\nprint(ans)\n    \n", "input()\n\nk = min(map(int, input().split()))\n\nn = int(input())\n\np = sorted(map(int, input().split()), reverse = True) + [0] * k\n\nprint(sum(sum(p[i: i + k]) for i in range(0, n, k + 2)))", "m = int(input())\ndis = list(map(int, input().split()))\nn = int(input())\np = list(map(int, input().split()))\np.sort(reverse=True)\ndis.sort()\nmoney = sum(p)\nmind = dis[0]\nif n <= mind:\n    print(sum(p))\nelse:\n    i = mind - 1\n    while i < n:\n        if i + 1 < n:\n            money -= p[i + 1]\n        if i + 2 < n:\n            money -= p[i + 2]\n        i += mind + 2\n    print(money)\n", "m = int(input())\ndis = list(map(int, input().split()))\nn = int(input())\np = list(map(int, input().split()))\np.sort(reverse=True)\ndis.sort()\nmoney = sum(p)\nmind = dis[0]\nif n <= mind:\n    print(sum(p))\nelse:\n    i = mind - 1\n    while i < n:\n        if i + 1 < n:\n            money -= p[i + 1]\n        if i + 2 < n:\n            money -= p[i + 2]\n        i += mind + 2\n    print(money)\n    \n", "m = int(input())\nq = list(map(int, input().split()))\nc = min(q)\n\nn = int(input())\na = list(map(int, input().split()))\na.sort()\n\nres = 0\nfor i in range(n):\n    if i % (c+2) < c:\n        res += a[n-1-i]\nprint(res)\n", "class CodeforcesTask261ASolution:\n    def __init__(self):\n        self.result = ''\n        self.discounts = []\n        self.items_count = 0\n        self.prices = []\n\n    def read_input(self):\n        input()\n        self.discounts = [int(x) for x in input().split(\" \")]\n        self.items_count = int(input())\n        self.prices = [int(x) for x in input().split(\" \")]\n\n    def process_task(self):\n        self.discounts.sort()\n        self.prices.sort(reverse=True)\n        price = 0\n        discount = self.discounts[0]\n        for x in range(self.items_count):\n            if x % (discount + 2) < discount:\n                price += self.prices[x]\n        self.result = str(price)\n\n    def get_result(self):\n        return self.result\n\n\ndef __starting_point():\n    Solution = CodeforcesTask261ASolution()\n    Solution.read_input()\n    Solution.process_task()\n    print(Solution.get_result())\n\n__starting_point()", "a=input()\nb=sorted([int(i) for i in input().split()])[0]\nc=int(input())\nd=sorted([int(i) for i in input().split()])\np=0\nwhile len(d):\n\tfor i in range(0, min(len(d), b)):\n\t\tp+=d.pop()\n\tfor i in range(0, min(len(d), 2)):\n\t\ta=d.pop()\nprint(p)\n", "a=int(input())\nq=list(map(int,input().split()))\nn=int(input())\ncost=list(map(int,input().split()))\nt=min(q)\ncost.sort()\ntotal=0\nindex=len(cost)-1\nwhile(index>=0):\n    r=t\n    if(index>=t):\n        r=t\n        while(r):\n            total+=cost[index]\n            r-=1\n            index-=1\n        if(index>=2):\n            index-=2\n        else:\n            break;\n    else:\n        total+=sum(cost[0:index+1])\n        break;\nprint(total)\n        \n", "m=int(input())\nq=[int(i) for i in input().split()]\nq.sort()\nn=int(input())\na=[int(i) for i in input().split()]\na.sort()\nans=0\ni=n-1\nwhile(i>=0):\n    d=0\n    while(i>=0 and d<q[0]):\n        ans+=a[i]\n        i-=1\n        d+=1\n    d=0\n    while(i>=0 and d<2):\n        d+=1\n        i-=1\nprint(ans)", "m = int(input())\nq = list(map(int, input().split()))\n\nn = int(input())\na = list(map(int, input().split()))\n\nmn = min(q)\na.sort(reverse = True)\nans, p = 0, 0\nwhile 1:\n    for i in range(p, min(p + mn, n)): ans += a[i]\n    p += mn + 2\n    if p >= n: break\nprint(ans)", "m=int(input())\nq=list(map(int,input().split()))\nn=int(input())\na=list(map(int,input().split()))\nq.sort()\na.sort()\nj=n-1\ni=0\nans=0\nwhile j>=0:\n    \n    for i in range(q[0]):\n        ans=ans+a[j]\n        j=j-1\n        if j<0:\n            break\n    j=j-2\nprint(ans)"]