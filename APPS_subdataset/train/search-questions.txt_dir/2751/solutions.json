["def word_search(query, seq):\n    return [x for x in seq if query.lower() in x.lower()] or [\"None\"]", "def word_search(query, seq):\n    query = query.lower()\n    result = [x for x in seq if query in x.lower()]\n    return result if result else ['None']", "import re\n\ndef word_search(query, seq):\n    return [w for w in seq if re.search(query, w, re.I)] or ['None']\n", "def word_search(query, seq):\n    l = [ i for i in seq if query.lower() in i.lower()]\n    return [l, ['None']] [ not l ]", "def word_search(query, seq):\n    query = query.lower()\n    return [word for word in seq if query in word.lower()] or [\"None\"]", "def word_search(q, l):\n    return [w for w in l if q.lower() in w.lower()]or['None']", "def word_search(query, seq):\n    query = query.lower()\n    return [a for a in seq if query in a.lower()] or ['None']\n", "def word_search(query, seq):\n    return [i for i in seq if query.lower() in i.lower()] or ['None']", "def word_search(query, seq):\n    result =  [word for word in seq if query.lower() in word.lower()]\n    return result if result else ['None']", "def word_search(query, seq):\n    array = []\n    for x in seq:\n        if query.lower() in x.lower():\n            array.append(x)\n        else:\n            pass\n    if array != []:\n        return array\n    else:\n        array = ['None']\n        return array"]