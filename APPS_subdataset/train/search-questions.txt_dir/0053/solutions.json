["import sys\ninput = sys.stdin.readline\n\n\ndef compress(array):\n    array2 = sorted(set(array))\n    memo = {value : index for index, value in enumerate(array2)}\n    for i in range(len(array)):\n        array[i] = memo[array[i]] + 1\n    return array\n\n\nt = int(input())\nbase = 10 ** 6\nfor _ in range(t):\n    n, b = list(map(str, input().split()))\n    n = int(n)\n    ans = [0] * n\n    \n    now = base\n    ans[0] = base\n    for i in range(n - 1):\n        if b[i] == \">\":\n            now -= base\n            ans[i + 1] = now\n        else:\n            now += 1\n            ans[i + 1] = now\n    print(*compress(ans))\n\n    now = base\n    ans[0] = base\n    for i in range(n - 1):\n        if b[i] == \">\":\n            now -= 1\n            ans[i + 1] = now\n        else:\n            now += base\n            ans[i + 1] = now\n    print(*compress(ans))\n", "def main():\n    import sys\n    input = sys.stdin.readline\n\n    for _ in range(int(input())):\n        line = list(input().split())\n        N = int(line[0])\n        S = line[1]\n\n        inc_num = S.count('<')\n        ans = [0] * N\n        inc = N\n        dec = N - inc_num\n        for i in range(N - 1):\n            if ans[i+1]:\n                continue\n            if S[i] == '<':\n                j = i+1\n                cnt = 1\n                while True:\n                    if j == N-1:\n                        break\n                    if S[j] == '<':\n                       cnt += 1\n                    else:\n                        break\n                    j += 1\n                #print(cnt)\n                for j in range(i+cnt-1, i-1, -1):\n                    #print(j)\n                    ans[j+1] = inc\n                    inc -= 1\n        for i in range(N):\n            if ans[i] == 0:\n                ans[i] = dec\n                dec -= 1\n        print(*ans)\n\n        ans = [0] * N\n        inc = N - inc_num + 1\n        dec = N - inc_num\n        for i in range(N - 1):\n            if S[i] == '<':\n                ans[i + 1] = inc\n                inc += 1\n        for i in range(N):\n            if ans[i] == 0:\n                ans[i] = dec\n                dec -= 1\n        print(*ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from sys import stdin,stderr\ndef rl():\n    return [int(w) for w in stdin.readline().split()]\n\ndef p1(n, s, le):\n    r = []\n    b = i = 0\n    while i < n:\n        try:\n            ni = s.index(le, i) + 1\n        except ValueError:\n            ni = n\n        r += list(range(ni, i, -1))\n        i = ni\n    return r\n\nt, = rl()\nfor _ in range(t):\n    n,s = stdin.readline().split()\n    n = int(n)\n    print(*(n - x + 1 for x in p1(n, s, '>')))\n    print(*p1(n, s, '<'))\n", "import sys\n\nQ = int(sys.stdin.readline().strip())\nfor q in range (0, Q):\n    n, s = sys.stdin.readline().strip().split()\n    n = int(n)\n    U = [1]\n    D = [1]\n    for i in range (0, n-1):\n        if s[i] == \"<\":\n            U[-1] = U[-1] + 1\n            D.append(1)\n        else:\n            D[-1] = D[-1] + 1\n            U.append(1)\n    m = n\n    i = 0\n    A = []\n    while m > 0:\n        for j in range (0, U[i]):\n            A.append(str(m-U[i]+j+1))\n        m = m - U[i]\n        i = i + 1\n    print(\" \".join(A))\n    m = 0\n    i = 0\n    A = []\n    while i < len(D):\n        for j in range (0, D[i]):\n            A.append(str(m+D[i]-j))\n        m = m + D[i]\n        i = i + 1\n    print(\" \".join(A))\n\n", "def makeRepeat(s):\n    repeat = [[s[0], 0]]\n    for ch in s:\n        if ch == repeat[-1][0]:\n            repeat[-1][1] += 1\n        else:\n            repeat.append([ch, 1])\n    return repeat\n\n\ndef solve(N, S):\n    assert len(S) == N - 1\n    curr = 0\n    repeat = makeRepeat(S)\n    longest = list(range(1, N + 1))\n    shortest = list(reversed(list(range(1, N + 1))))\n    for ch, count in repeat:\n        if ch == \">\":\n            longest[curr : curr + count + 1] = reversed(\n                longest[curr : curr + count + 1]\n            )\n        else:\n            assert ch == \"<\"\n            shortest[curr : curr + count + 1] = reversed(\n                shortest[curr : curr + count + 1]\n            )\n        curr += count\n\n    # print(\" \" + \" \".join(S))\n    return \" \".join(map(str, shortest)) + \"\\n\" + \" \".join(map(str, longest))\n\n\ndef __starting_point():\n    T, = list(map(int, input().split()))\n    for t in range(T):\n        N, S = input().split()\n        N = int(N)\n        ans = solve(N, S)\n        print(ans)\n\n__starting_point()", "def solve1(n, comps):\n    ans = []\n    rng = iter(list(range(1, n + 1)))\n    for comp in [len(comp) + 1 for comp in comps.split(\">\")][::-1]:\n        ans.append([ansi for (_, ansi) in zip(list(range(comp)), rng)])\n    fin_ans = []\n    ans.reverse()\n    for ansi in ans:\n        fin_ans.extend(ansi)\n    return fin_ans\n\n\ndef solve2(n, comps):\n    ans = []\n    rng = iter(list(range(1, n + 1)))\n    for comp in [len(comp) + 1 for comp in comps.split(\"<\")]:\n        ans.extend([ansi for (_, ansi) in zip(list(range(comp)), rng)][::-1])\n    return ans\n\n\ndef main():\n    for _ in range(int(input())):\n        n, comps = input().split()\n        n = int(n)\n        print(*solve1(n, comps))\n        print(*solve2(n, comps))\n\n\nmain()\n", "import sys\ninput = sys.stdin.readline\n\nT = int(input())\nfor _ in range(T):\n    n, S = input().split()\n    n = int(n)\n    max_ans = [0] * n\n    i = j = 0\n    cur = 1\n    for s in S + '<':\n        if s == '>':\n            j += 1\n        elif s == '<':\n            for k in range(j, i - 1, -1):\n                max_ans[k] = cur\n                cur += 1\n            j += 1\n            i = j\n\n\n    min_ans = [0] * n\n    i = j = 0\n    cur = 1\n    for s in S[::-1] + '>':\n        if s == '<':\n            j += 1\n        elif s == '>':\n            for k in range(j, i - 1, -1):\n                min_ans[k] = cur\n                cur += 1\n            j += 1\n            i = j\n    print(*min_ans[::-1])\n    print(*max_ans)\n\n", "def getInput():\n\tline = input().split()\n\treturn int(line[0]), line[1]\n\ndef sLIS(n, s):\n\tans = list(range(n, 0, -1))\n\t\n\trev = []\n\ti = 0\n\twhile i < n-1:\n\t\tif s[i] == '<':\n\t\t\tj = i+1\n\t\t\twhile j < n-1 and s[j] == '<':\n\t\t\t\tj += 1\n\t\t\t\n\t\t\trev.append((i, j))\n\t\t\ti = j+1\n\t\telse:\n\t\t\ti += 1\n\n\tfor r in rev:\n\t\ti, j = r\n\t\twhile i <= j:\n\t\t\tans[i], ans[j] = ans[j], ans[i]\n\t\t\ti += 1\n\t\t\tj -= 1\n\t\n\treturn ans\n\ndef lLIS(n, s):\n\tans = list(range(1, n+1))\n\t\n\trev = []\n\ti = 0\n\twhile i < n-1:\n\t\tif s[i] == '>':\n\t\t\tj = i+1\n\t\t\twhile j < n-1 and s[j] == '>':\n\t\t\t\tj += 1\n\t\t\t\n\t\t\trev.append((i, j))\n\t\t\ti = j+1\n\t\telse:\n\t\t\ti += 1\n\n\tfor r in rev:\n\t\ti, j = r\n\t\twhile i <= j:\n\t\t\tans[i], ans[j] = ans[j], ans[i]\n\t\t\ti += 1\n\t\t\tj -= 1\n\t\n\treturn ans\n\nfor _ in range(int(input())):\n\tn, s = getInput()\n\n\t\"\"\"\n\t\tp = []\n\t\tc = +1 if s[0] == '<' else -1\n\t\tfor e in s[1:]:\n\t\t\tif c > 0 and e == '>':\n\t\t\t\tp.append(c)\n\t\t\t\tc = -1\n\t\t\telif c < 0 and e == '<':\n\t\t\t\tp.append(c)\n\t\t\t\tc = +1\n\t\t\telse:\n\t\t\t\tc += +1 if e == '<' else -1\n\t\tp.append(c)\n\t\"\"\"\n\tprint(*sLIS(n, s))\n\tprint(*lLIS(n, s))\n", "Q = int(input())\n\n\ntotal = []\nfor _ in range(Q):\n    n, s = input().split()\n    n=int(n)\n\n    seq = []\n    curlen = 1\n    for i in range(len(s)):\n        if s[i]=='<':\n            curlen+=1\n        else:\n            seq.append(curlen)\n            curlen=1\n    seq.append(curlen)\n    curr = n\n    ans =[]\n    for sq in seq:\n        ans.extend(range(curr-sq+1,curr+1))\n        curr-=sq\n    total.append(' '.join(map(str,ans)))\n\n    curr = n\n    ans = ['']*n\n    for i in range(len(s)-1,-1,-1):\n        if s[i]=='<':\n            ans[i+1]=str(curr)\n            curr-=1\n    for i in range(n):\n        if not ans[i]:\n            ans[i]=str(curr)\n            curr-=1\n    total.append(' '.join(ans))\n\n\nprint(*total, sep='\\n')"]