["t=int(input())\nfor i in range(t):\n n=int(input())\n N=list(map(int,input().split()))\n N.sort()\n \n k=n-1\n ave=N[k]\n for j in range(n-1):\n  ave=(ave+N[k-1])/2\n  k=k-1\n  \n print(ave)", "test=int(input())\nfor i in range(test):\n N=int(input())\n n=input()\n a=list(n.split(' '))\n for k in range(N):\n  a[k]=int(a[k])\n a.sort(reverse=True)\n sum= a[0]/(2**(N-1))\n for j in range(1,N):\n  sum+= a[j]/(2**(N-j))\n print(sum)\n \n", "# cook your dish here\nt=int(input())\nfor i in range(t):\n n=int(input())\n N=list(map(int,input().split()))\n N.sort()\n \n k=n-1\n ave=N[k]\n for j in range(n-1):\n  ave=(ave+N[k-1])/2\n  k=k-1\n  \n print(ave)", "# cook your dish here\nfor t in range(int(input())):\n n=int(input())\n lis=list(map(int,input().split()))\n for i in range(n-1):\n  lis.sort() \n  \n  a=lis.pop(len(lis)-1)\n  b=lis.pop(len(lis)-1) \n  \n  lis.append((a+b)/2)\n print(lis[0]) \n", "for t in range(int(input())):\n n=int(input())\n lis=list(map(int,input().split()))\n for i in range(n-1):\n  lis.sort() \n  \n  a=lis.pop(len(lis)-1)\n  b=lis.pop(len(lis)-1) \n  \n  lis.append((a+b)/2)\n print(lis[0]) \n", "#!/usr/bin/python3\n\nns = lambda: input()\nni = lambda: int(input())\nnm = lambda: map(int, input().split())\nnl = lambda: list(map(int, input().split()))\n\nfor _ in range(ni()):\n n=ni()\n a=nl()\n a.sort()\n ans=a[-1]\n for i in range(1,n):\n  ans=(ans+a[n-1-i])/2\n print(ans)", "for _ in range(int(input())):\n n=int(input())\n l=[int(x) for x in input().split()]\n l.sort(reverse=True)\n c=l[0]+l[1]\n for i in range(2,n):\n  c+=l[i]*(2**(i-1))\n c/=(2**(n-1))\n print(format(c,\".8f\"))", "# cook your dish here\n# cook your code here\ntry:\n \n T = int(input())\n for i in range(T):\n  n = int(input())\n  path = [int(i) for i in input().strip().split(\" \")]\n  path.sort(reverse = True)\n  count = 0\n  for i in range(n-1):\n   res = (path[i]+path[i+1])/2\n   count = count + res\n   path[i+1] = res\n  print(\"%.8f\" %res)\nexcept EOFError:\n pass\n\n  \n \n \n    \n\n", "def Average(A,B):\n return (A+B)/2\n\nT=int(input())\n\nfor _ in range(T):\n N=int(input())\n A=list(map(int,input().split()))\n A.sort(reverse=True)\n while(len(A)!=1):\n  A.insert(0,Average(A.pop(0),A.pop(0)))\n print(A[0])\n\n", "# cook your dish here\nfor _ in range(int(input())):\n n = int(input())\n a = [int(i) for i in input().split()]\n a.sort(reverse = True)\n k = (a[0] + a[1])/2\n for i in range(2,n):\n  k = (k + a[i])/2\n print(k)", "# cook your dish here\n\n\"\"\"\n\nThe first thing that comes to my mind is\n\nwhile(len(arr)! = 2)\n{\n    sort(arr)\n    last_two_average = (arr[-1]+arr[-2])/2\n    arr = arr[:-3].append(last_two_average)\n}\nprint((arr[0] + arr[1])/2)\n\nThis solution will mostly timed out because of the sorting in reach step\n\n\"\"\"\n\ntestcase = int(input())\nfor z in range(testcase):\n N = int(input())\n arr = [int(d) for d in input().split()]\n while(N>2):\n  arr = sorted(arr)\n  last_two_average = (arr[-1]+arr[-2])/2\n  arr = arr[:-2]\n  arr.append(last_two_average)\n  N = N - 1\n print(\"{0:.8f}\".format((arr[0] + arr[1])/2)) \n  \n", "t=int(input())\nfor i in range(t):\n n=input()\n arr=[int(i) for i in input().split()]\n arr.sort()\n while(len(arr)!=1):\n  w=arr[-1]\n  arr.pop() \n  e=arr[-1]\n  arr.pop()\n  arr.append((w+e)/2) \n print('%.6f'%arr[0])", "# cook your dish here\nfor _ in range(int(input())):\n n=int(input())\n a=[int(x) for x in input().split()]\n a.sort()\n while(len(a)!=1):\n  t=a[-1]\n  a.pop()\n  l=a[-1]\n  a.pop()\n  a.append((t+l)/2)\n print('%.6f'%a[0]) ", "# cook your dish here\ndef poison(n,concentration):\n \n concentration=sorted(concentration)\n for i in range(n-1,0,-1):\n  replaced=(concentration[i]+concentration[i-1])/2\n  concentration.pop()\n  concentration.pop()\n  concentration.append(replaced)\n  \n return concentration[0]\n\n\n\nt=int(input())\nfor i in range(t):\n n=int(input())\n concentration=[int(x) for x in input().split()]\n ans=poison(n,concentration)\n print('%.6f'%ans)", "t=int(input())\nwhile t>0:\n n=int(input())\n li=input().split()\n for i in range(n):\n  li[i]=int(li[i])\n n-=1\n li.sort()\n while n>0:\n  li[n-1]=(li[n]+li[n-1])/2\n  n-=1\n print(li[0])\n t-=1", "t=int(input())\nfor _ in range(t):\n n=int(input())\n l=list(map(int,input().split()))\n l.sort(reverse=True)\n ans = l[0]\n for i in range(1,n):\n  ans = (ans+l[i])/2\n print(ans)\n", "# cook your dish here\n#from decimal import Decimal\nt=int(input())\nwhile(t>0):\n n=int(input())\n ar=[int(i) for i in input().split()]\n while(len(ar)!=1):\n  ar.sort(reverse=True)\n  a=ar.pop(0)\n  b=ar.pop(0)\n  c=(a+b)/2\n  ar.append(c)\n a=('%.6f'%ar[0])\n print(a)\n t=t-1\n", "for i in range(int(input())):\n n=int(input())\n A=list(map(int,input().split()))\n A=sorted(A)\n A=A[::-1]\n x=(A[0]+A[1])/2\n if len(A)>2:\n  for i in range(2,len(A)):\n   x=(A[i]+x)/2\n print('%.6f' % x)\n", "for i in range(int(input())):\n n = int(input())\n arr = list(map(int, input().split()))\n arr.sort()\n for j in range(n-1, 0, -1):\n  arr[j-1] = (arr[j] + arr[j-1])/2\n print(arr[0])", "# cook your dish here\nt=int(input())\nfor i in range(t):\n n=int(input())\n a=list(map(int,input().split(\" \")))\n a.sort(reverse=True)\n sum=(a[0]+a[1])/2\n #print(sum,a)\n for i in range(2,n) :\n  sum=(sum+a[i])/2\n  # print(sum)\n print(sum)\n", "# cook your dish here\ntry:\n t=int(input())\n for i in range(t):\n  l=int(input())\n  a=[int(i) for i in input().split()]\n  a.sort()\n  if (len(a)>2):\n   for i in range(l-1):\n    p=len(a)\n    d=(a[p-2]+a[p-1])/2\n    del a[p-2]\n    del a[p-2]\n    a.append(d)\n   print(a[0])\n  else:\n   t=sum(a)\n   avg=t/len(a)\n   print(avg)\nexcept EOFError:\n pass\n  \n  \n", "for _ in range(int(input())) :\n n = int(input())\n nums = list(map(int,input().split()))\n nums.sort()\n ans = nums[n-1]\n for i in range(2,n+1):\n  ans += nums[n-i]\n  ans /= 2\n print(ans)", "# cook your dish here\nfor i in range(int(input())):\n n = int(input())\n a = list(map(int,input().split()))\n a.sort()\n s= a[n-1]\n for i in range(n-1,0,-1):\n  s= (s+a[i-1])/2 \n print(s)"]