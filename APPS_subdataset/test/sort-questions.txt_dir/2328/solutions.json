["import sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    N, K = list(map(int, input().split()))\n    A = [int(a) for a in input().split()]\n    B = [A[i+K]-A[K] for i in range(N-K)]\n    mi = 10**20\n    mx = -1\n    for i in range(N-K):\n        if A[i+K]-A[i] < mi:\n            mi = A[i+K]-A[i]\n            mx = (A[i+K]+A[i]) // 2\n    \n    print(mx)\n", "\ndef main():\n    buf = input()\n    T = int(buf)\n    n = []\n    k = []\n    a = []\n    for i in range(T):\n        buf = input()\n        buflist = buf.split()\n        n.append(int(buflist[0]))\n        k.append(int(buflist[1]))\n        buf = input()\n        buflist = buf.split()\n        a.append(list(map(int, buflist)))\n    for i in range(T):\n        a[i].sort()\n    for i in range(T):\n        minimum_point = (a[i][0] + a[i][k[i]]) // 2\n        minimum_value = max(abs(a[i][0] - minimum_point), abs(a[i][k[i]] - minimum_point))\n        for j in range(1, n[i]-k[i]):\n            window_minimum_point = (a[i][j] + a[i][k[i]+j]) // 2\n            window_minimum_value = max(abs(a[i][j] - window_minimum_point), abs(a[i][k[i]+j] - window_minimum_point))\n            if window_minimum_value < minimum_value:\n                minimum_point = window_minimum_point\n                minimum_value = window_minimum_value\n        print(minimum_point)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def funk():\n    nonlocal m\n    n, k = map(int, input().split())\n    mass = [int(i) for i in input().split()]\n    x = 0\n    minn = 10 ** 9\n    for i in range(n - k):\n        q = mass[i]\n        j = mass[i + k]\n        if (j - q) < minn:\n            minn, x = (j - q), (j + q) // 2\n    m.append(x)    \n\nt = int(input())\nm = []\nfor i in range(t):\n    funk()\n    \nfor i in m:\n    print(i)", "import sys\ninput = sys.stdin.readline\n\nQuery=int(input())\n\nfor query in range(Query):\n    n,k=list(map(int,input().split()))\n    A=list(map(int,input().split()))\n\n    A.sort()\n\n    L=10**15\n\n    for i in range(k,n):\n        if A[i]-A[i-k]<L:\n            L=A[i]-A[i-k]\n            ANS=(A[i]+A[i-k])//2\n\n    print(ANS)\n", "import sys\ninput = sys.stdin.readline\n\n\nt = int(input())\nli = [list(map(int, input().split())) for i in range(2*t)]\nfor i in range(t):\n    n, k = li[i*2][0], li[i*2][1]\n    ans = 10**10\n    j = 0\n    item = 0\n    while j + k < n:\n        if -((-(li[i*2+1][j+k] - li[i*2+1][j])) // 2) < ans:\n            ans = -((-(li[i*2+1][j+k] - li[i*2+1][j])) // 2)\n            item = (li[i*2+1][j+k] + li[i*2+1][j])//2\n        j += 1\n    print(item)\n\n", "import sys\ninput = sys.stdin.readline\n\n\nclass Problem:\n    def __init__(self):\n        pass\n\n    def solve(self):\n        self._solve()\n\n    def _solve(self):\n        t = int(input())\n        for _ in range(t):\n            n, k = [int(item) for item in input().split()]\n            a = [int(item) for item in input().split()]\n            a.sort()\n            mn = float('inf')\n            idx = -1\n            for i in range(n - k):\n                if a[i + k] - a[i] < mn:\n                    mn = a[i + k] - a[i]\n                    idx = i\n            print((a[idx] + a[idx + k]) >> 1)\n\n\ndef main():\n    problem = Problem()\n    problem.solve()\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\ninput = sys.stdin.readline\nimport bisect\nT = int(input())\nfor _ in range(T):\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    ans = 10000000000\n    for i in range(n-k):\n        if ans > a[i+k]-a[i]:\n            ansindex = i\n            ans = a[i+k]-a[i]\n    print(a[ansindex]+ans//2)\n", "# python template for atcoder1\nimport sys\nsys.setrecursionlimit(10**9)\ninput = sys.stdin.readline\n\n\ndef solve2():\n    n, k = list(map(int, input().split()))\n    L = list(map(int, input().split()))\n    ans = float('inf')\n    ans_x = -1\n    for i in range(n-k):\n        l = L[i]\n        r = L[i+k]\n        tmp = (r+l)//2\n        tmp_ans = max(r-tmp, tmp-l)\n        if ans > tmp_ans:\n            ans = tmp_ans\n            ans_x = tmp\n    print(ans_x)\n\n\nn = int(input())\nfor _ in range(n):\n    solve2()\n", "import sys\n\nT = int(sys.stdin.readline().strip())\nfor t in range (0, T):\n    n, k = list(map(int,sys.stdin.readline().strip().split()))\n    a = list(map(int,sys.stdin.readline().strip().split()))\n    i = 0\n    j = k\n    M = 10 ** 10\n    while j < n:\n        if a[j] - a[i] < M:\n            M = a[j] - a[i]\n            x = (a[j] + a[i]) // 2 + (a[j] + a[i]) % 2\n        i = i + 1\n        j = j + 1\n    print(x)", "def fk(n, l1, k):\n    if (k==0):\n        return str(l1[0])\n    mi = l1[-1] - l1[0] + 1\n    p = 0\n    for i in range(n-k):\n        if (l1[i+k]-l1[i] < mi):\n            mi = l1[i+k]-l1[i]\n            p = (l1[i+k] + l1[i]) >> 1\n    return str(p)\n\nt = int(input())\nl = []\nfor _ in range(t):\n    n, k = list(map(int, input().split()))\n    l1 = list(map(int, input().split()))\n    l.append(fk(n, l1, k))\nprint('\\n'.join(l))", "t = int(input())\n\nanswers = []\n\nfor i in range(t):\n    n,k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n\n    min_koor = 0\n    min_dist = (a[n-1]-a[0])\n\n    for j in range(0, n-k):\n        if (a[j+k]-a[j]<=min_dist):\n            min_dist=a[j+k]-a[j]\n            min_koor = (a[j]+a[j+k])/2\n    answers.append(min_koor)\nfor i in answers:\n    print(int(i))\n        \n", "t = int(input())\nAns = []\n\nfor _ in range(t):\n    n,k = map(int,input().split())\n    A = list(map(int,input().split()))\n    mini = 100000000000\n    for i in range(n-k):\n        y1 = (-A[i]+A[i+k]-1)/2\n        y2 = (-A[i]+A[i+k])/2\n        if float.is_integer(y1):\n            if mini > y1+1:\n                ans = A[i] + y1\n                mini = y1 + 1\n        elif float.is_integer(y2):\n            if mini > y2:\n                ans = A[i] + y2\n                mini = y2\n    Ans.append(int(ans))\n\nprint(*Ans,sep = \"\\n\")\n    ", "t    = int(input()) \ns    = ''\nfor _ in range(t):\n    n, k = map(int, input().split())\n    a    = list(map(int, input().split()))\n    Min  = 1000000001\n    ans  = a[0]\n\n    for x, y in zip(a[:-k], a[k:]):\n        if y - x < Min:\n            ans = ( x + y ) // 2\n            Min = y - x\n    s += str(ans) + '\\n'\nprint(s)    ", "T = int(input())\nimport sys\nres = []\n\nfor t in range(T):\n    N, K = map(int, sys.stdin.readline().split())\n    a_list = list(map(int, sys.stdin.readline().split()))\n    if N == 1:\n        res.append(a_list[0])\n        continue\n    ans = float(\"inf\")\n    ans_i = -1\n    for i in range(N - K):\n        tmp = abs(a_list[i + K] - a_list[i])\n        if ans > tmp:\n            ans =tmp\n            ans_i = i\n    res.append((a_list[ans_i + K] + a_list[ans_i]) // 2)\n\nfor r in res:\n    print(r)", "import sys\ninput = sys.stdin.readline\n\n\ndef nn():\n\treturn int(input())\n\ndef li():\n\treturn list(input())\n\ndef mi():\n\treturn list(map(int, input().split()))\n\ndef lm():\n\treturn list(map(int, input().split()))\n\n\n\nq=nn()\n\n\nfor _ in range(q):\n\tn, k=mi()\n\n\tl=lm()\n\n\tm=float('Inf')\n\n\t\n\tfor i in range(0, n-k):\n\t\t\n\t\t\n\t\tif l[i+k]-l[i]<m:\n\t\t\tm=l[i+k]-l[i]\n\t\t\tx=(l[i+k]+l[i])//2\t\t\t\n\t\t\t\n\t\n\tprint(x)\n", "def solve(points,k,res):\n    if k == 0:\n        res.append(points[0])\n        return\n    min_diff = float('inf')\n    n = len(points)\n    for i in range(n-k):\n        p1 = points[i]\n        p2 = points[i+k]\n        avg = (p1+p2)//2\n        diff = max(abs(avg-p1),abs(avg-p2))\n\n        if diff < min_diff:\n            ans = avg\n            min_diff = diff\n\n    res.append(ans)\n            \n\ndef main():\n    t = int(input())\n    res = []\n    for i in range(t):\n        n,k = list(map(int,input().split()))\n        points = list(map(int,input().split()))\n        solve(points,k,res)\n\n    for i in res:\n        print(i)\n\nmain()\n", "def fk(n, l1, k):\n    if (k==0):\n        return str(l1[0])\n    mi = l1[-1] - l1[0]\n    p = (l1[-1] + l1[0]) >> 1\n    for i in range(n-k):\n        if (l1[i+k]-l1[i] < mi):\n            mi = l1[i+k]-l1[i]\n            p = (l1[i+k] + l1[i]) >> 1\n    return str(p)\n\nt = int(input())\nl = []\nfor _ in range(t):\n    n, k = list(map(int, input().split()))\n    l1 = list(map(int, input().split()))\n    l.append(fk(n, l1, k))\nprint('\\n'.join(l))", "import sys\ninput = sys.stdin.readline\nimport bisect\nT = int(input())\nfor _ in range(T):\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    ans = 10000000000\n    for i in range(n-k):\n        if ans > a[i+k]-a[i]:\n            ansindex = i\n            ans = a[i+k]-a[i]\n    print(a[ansindex]+ans//2)\n", "t=int(input())\nout=[0]*t\nfor u in range(t):\n    n,k=map(int,input().split())\n    a=list(map(int,input().split()))\n    a.sort()\n    best=float(\"inf\")\n    coord=None\n    for i in range(n-k):\n        if a[i+k]-a[i]<best:\n            coord=(a[i+k]+a[i])//2\n            best=a[i+k]-a[i]\n    out[u]=coord\nprint(*out,sep='\\n')", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n,k = map(int, input().split())\n    aa = list(map(int, input().split()))\n    best = 10000000000\n    for i in range(n-k):\n        if aa[i+k] - aa[i] < best:\n            best = aa[i+k] - aa[i]\n            bestpos = i\n    print(aa[bestpos] + best//2)"]