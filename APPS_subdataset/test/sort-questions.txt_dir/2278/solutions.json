["from math import ceil, floor\nQ = int(input())\nfor _ in range(Q):\n    a, b, m = map(int, input().split())\n    if b - a == 0:\n        print(1, a)\n        continue\n    if b - a <= m:\n        print(2, a, b)\n        continue\n    x = max(0, ceil(b/(a+m)) - 1)\n    y = max(0, floor(b/(a+1)))\n    if x.bit_length() < y.bit_length():\n        h = y.bit_length()\n        t = b - a*2**(h-1)\n        M = [t//(2**(h-1))]*h\n        t %= 2**(h-1)\n        for i in range(h-1):\n            j = h - 2 - i\n            if 2**j & t:\n                M[i] += 1\n        sumi = a\n        ans = [a] + [0]*h\n        assert all(m > 0 for m in M), ''\n        for i in range(1, h+1):\n            ans[i] = sumi + M[i-1]\n            sumi += ans[i]\n        if len(ans) > 50:\n            print(-1)\n        else:\n            print(len(ans), *ans)\n    else:\n        print(-1)", "# https://codeforces.com/contest/1166/problem/D\ndef creat_r(X, k, m, p):\n    q = X // p[k]\n    r = X %  p[k]\n    \n    R = []\n    for _ in range(k+1):\n        R.append(q)\n        \n    s = bin(r)[2:]\n    for i in range(1, len(s)+1):\n        if s[-i] == '1':\n            R[-(i+1)] += 1\n       \n    return R\n\ni = 1\np = [1]\nfor _ in range(50):\n    i*=2\n    p.append(i)\n    \nT   = int(input())\nans = []\nfor _ in range(T):\n    a, b, m = map(int, input().split())\n    if a == b:\n        print(1, a)\n        continue\n    \n    flg = False\n    for i in range(50):\n        if p[i] * a  >= b: break\n    \n        k = i\n        X = b - (p[i] * a)\n    \n        if X >= p[k] and X <= p[k]*m:\n            flg = True\n            R   = creat_r(X, k, m, p)\n            sR  = 0 \n            A   = [a]\n        \n            for _ in range(k+1):\n                A.append(p[_]*a+sR+R[_])\n                sR += sR + R[_] \n            \n            print(len(A), end=' ')\n            for x in A:\n                print(x, end=' ')\n            print()\n            break\n        \n        \n    if flg == False:\n        print(-1)"]