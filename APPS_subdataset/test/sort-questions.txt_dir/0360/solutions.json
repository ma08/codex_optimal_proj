["ii = lambda: int(input())\nmi = lambda: map(int, input().split())\nli = lambda: list(mi())\n\nn = ii()\na = [li() for _ in range(n)]\nk = ii()\nans = 0\nfor l, r in a:\n    ans += k <= r\nprint(ans)", "n = int(input())\na = []\nfor i in range(n):\n    a.append([int(j) for j in input().split()])\nk = int(input())\nans = n\nfor i in range(n):\n    if k > a[i][1]:\n        ans -= 1\nprint(ans)\n", "n = int(input())\nb = []\nfor i in range(n):\n    tl, tr = list(map(int, input().split()))\n    b.append((tl, tr))\nk = int(input())\nans = 0\nfor l, r in b:\n    if k <= r:\n        ans += 1\nprint(ans)\n", "n = int(input())\narr = [list(map(int, input().split())) for i in range(n)]\nk = int(input()) - 1\ncnt = 0\nfor el in arr:\n\tif el[1] <= k:\n\t\tcnt += 1\nprint(n - cnt)", "hop = []\nfor i in range(int(input())):\n    a, b = map(int, input().split())\n    hop.append(b)\nk = int(input())\nfor i in range(len(hop)):\n    if k <= hop[i]:\n        print(len(hop) - i)\n        break", "n = int(input())\na = []\nfor i in range(n):\n\tl, r = list(map(int, input().split()))\n\ta.append((l, r))\nq = int(input())\nk = 0\nfor i in a:\n\tif q > i[1]:\n\t\tk += 1\nprint(n -k)\n", "n = int(input())\na = []\nfor i in range(n):\n    x, y = map(int, input().split())\n    a.append(y)\np = int(input())\nfor i in range(n):\n    if p <= a[i]:\n        print(n - i)\n        break", "n = int(input())\nl = []\nfor i in range(n):\n    l.append(list(map(int, input().split())))\npage = int(input())\n\nout = 0\nfor ch in l:\n    if ch[-1] >= page:\n        out += 1\n\nprint(out)\n", "n = int(input())\na = []\nfor i in range(n):\n\tl, r = map(int, input().split())\n\ta+=[(l, r)]\nk = int(input())\n\ncount = 0\nfor l, r in a:\n\tif not r<k:\n\t\tcount += 1\nprint(count)", "from sys import stdin, stdout\nfrom math import sqrt, pi, acos, gcd, atan2, cos, sin, factorial\nfrom decimal import Decimal\nPEPS = 1e-10\nINF = float('inf')\n\n\ndef sqr(a):\n    return a * a\n\n\ndef dist(a, b = (0, 0)):\n    return sqrt(sqr(a[0] - b[0]) + sqr(a[1] - b[1]))\n\n\ndef s_dist(a, b = (0, 0)):\n    return (sqr(a[0] - b[0]) + sqr(a[1] - b[1]))\n\n\ndef dist3(a, b = (0, 0, 0)):\n    return sqrt(sqr(a[0] - b[0]) + sqr(a[1] - b[1]) + sqr(a[2] - b[2]))\n\n\ndef s_dist3(a, b = (0, 0, 0)):\n    return (sqr(a[0] - b[0]) + sqr(a[1] - b[1]) + sqr(a[2] - b[2]))\n\n\ndef trans(p, al):\n    return (p[0] * cos(al) + p[1] * sin(al), - p[0] * sin(al) + p[1] * cos(al))\n\n\ndef get_angle(a, b, c):\n    cos_al = (sqr(a) + sqr(b) - sqr(c)) / (2 * a * b)\n    return acos(cos_al)\n\n\ndef write_float(ans):\n    stdout.write(str('%.6f' % ans) + '\\n')\n\n\ndef get_hight(pt1, pt2, pt3):\n    a = (pt2[0] - pt1[0], pt2[1] - pt1[1])\n    b = (pt3[0] - pt1[0], pt3[1] - pt1[1])\n    return abs(a[0] * b[1] - a[1] * b[0]) / dist(pt1, pt2)\n\n\ndef get_square(pt1, pt2, pt3):\n    a = (pt2[0] - pt1[0], pt2[1] - pt1[1])\n    b = (pt3[0] - pt2[0], pt3[1] - pt2[1])\n    return (a[0] * b[-1] - a[1] * b[0]) / 2\n\n\ndef sign(v):\n    if v > 0:\n        return 1\n    elif v < 0:\n        return -1\n    else:\n        return 0\n\n\ndef inn(pt, triangle):\n    signs = set()\n    signs.add(sign(get_square(triangle[0], triangle[1], pt)))\n    signs.add(sign(get_square(triangle[1], triangle[2], pt)))\n    signs.add(sign(get_square(triangle[2], triangle[0], pt)))\n    return len(signs) == 1\n\n\ndef inter_in(a, b):\n    return dist((a[0], a[1]), (b[0], b[1])) < a[-1] + b[-1]\n\n\ndef inter_in3(a, b):\n    return dist3(a[:-1], b[:-1]) < a[-1] + b[-1]\n\n\ndef shift(what, wth):\n    return (what[0] - wth[0], what[1] - wth[1])\n\n\nn = int(stdin.readline())\nchal = []\n\nfor i in range(n):\n    l, r = map(int ,stdin.readline().split())\n    chal.append((l, r))\n\nk = int(stdin.readline())\nans = 0\n\nfor p in chal:\n    if p[1] >= k:\n        ans += 1\n\nstdout.write(str(ans))", "# -*- coding: utf-8 -*-\n\n\ndef rli():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = int(input())\n    ns = []\n    for i in range(n):\n        x, y = rli()\n        ns.append((x, y))\n    w = int(input())\n    for i in range(n):\n        x, y = ns[i]\n        if y >= w:\n            print(n - i)\n            return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "# -*- coding: utf-8 -*-\n# @Time    : 2019/3/12 0:35\n# @Author  : LunaFire\n# @Email   : gilgemesh2012@gmail.com\n# @File    : A. Nastya Is Reading a Book.py\n\n\ndef main():\n    n = int(input())\n    lr = [list(map(int, input().split())) for _ in range(n)]\n    k = int(input())\n\n    ret = 0\n    for i in range(n):\n        if lr[i][1] >= k:\n            ret += 1\n    print(ret)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "import getpass\nimport math\nimport sys\nimport string\nimport re\nimport math\nimport random\nfrom decimal import Decimal, getcontext\n\n\ndef ria():\n    return [int(i) for i in input().split()]\n\n\nif getpass.getuser() != 'frohenk':\n    filename = 'half'\n    # sys.stdin = open('input.txt')\n    # sys.stdout = open('output.txt', 'w')\nelse:\n    sys.stdin = open('input.txt')\n    # sys.stdin.close()\n\nn = ria()[0]\nar = []\nfor i in range(n):\n    ar.append(ria())\nlk = ria()[0]\ncnt = 0\nlk -= 1\nfor l, r in ar:\n    if l <= lk and r <= lk:\n        cnt += 1\nprint(n - cnt)\n", "n = int(input())\nd = []\nfor _ in range(n):\n    l, r = [int(item) for item in input().split()]\n    d.append([l, r])\n\nk = int(input())\n\nans = 0\nfor i in range(n):\n    l, r = d[i]\n    if r >= k:\n        ans = i\n        break\n\nprint(n - ans)\n", "n=int(input())\ntot=[]\nfor i in range(n):\n    a,b=[int(x) for x in input().split()]\n    tot.append((a,b))\nk=int(input())\ncounter=0\nfor item in tot:\n    if item[0]<=k<=item[1]:\n        print(n-counter)\n        break\n    counter+=1\n", "n = int(input())\narr = []\nfor i in range(n):\n\ta, b = map(int, input().split())\n\tarr.append([a, b])\nk = int(input())\nfor i in range(n):\n\tl = arr[i][0]\t\n\tr = arr[i][1]\n\tif r >= k:\n\t\tind = i\n\t\tbreak\nprint(n - ind)", "n=int(input())\narr=[]\nfor i in range(n):\n\ta,b=list(map(int,input().split()))\n\tarr.append((a,b))\npage=int(input())\nans=0\nfor i in range(n):\n\tif(arr[i][0]<=page<=arr[i][1]):\n\t\tans=i\nprint(n-ans)\n\n\n", "n = int(input())\nA = [list(map(int, input().split())) for i in range(n)]\nk = int(input())\nans = 0\nfor i in range(n):\n  l, r = A[i]\n  if k <= r:\n    ans += 1\nprint(ans)\n", "#      \nimport collections, atexit, math, sys, bisect \n\nsys.setrecursionlimit(1000000)\n\nisdebug = False\ntry :\n    #raise ModuleNotFoundError\n    import pylint\n    import numpy\n    def dprint(*args, **kwargs):\n        #print(*args, **kwargs, file=sys.stderr)\n        # in python 3.4 **kwargs is invalid???\n        print(*args,  file=sys.stderr)\n    dprint('debug mode')\n    isdebug = True\nexcept Exception:\n    def dprint(*args, **kwargs):\n        pass\n\n\ndef red_inout():\n    inId = 0\n    outId = 0\n    if not isdebug:\n        inId = 0\n        outId = 0\n    if inId>0:\n        dprint('use input', inId)\n        try:\n            f = open('input'+ str(inId) + '.txt', 'r')\n            sys.stdin = f #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\n        except Exception:\n            dprint('invalid input file')\n    if outId>0:\n        dprint('use output', outId)\n        try:\n            f = open('stdout'+ str(outId) + '.txt', 'w')\n            sys.stdout = f #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\n        except Exception:\n            dprint('invalid output file')\n            \n        atexit.register(lambda :sys.stdout.close())     #idle \u4e2d\u4e0d\u4f1a\u6267\u884c atexit\n\nif isdebug and len(sys.argv) == 1:\n    red_inout()\n\ndef getIntList():\n    return list(map(int, input().split()))            \n\ndef solve(): \n    pass\n    \nT_ = 1    \n#T_, = getIntList()\n\nfor iii_ in range(T_):\n    #solve()\n    N,  = getIntList()\n    #print(N)\n    zz = []\n    for i in range(N):\n        l,r = getIntList()\n        zz.append((l,r))\n    x, = getIntList()\n    for i in range(N):\n        l,r  = zz[i]\n        if l<=x<=r:\n            print(N-i)\n            break\n \n \n", "n = int(input())\nA = []\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    A.append((a, b))\nk = int(input())\nfor i in range(n):\n    if k >= A[i][0] and k <= A[i][1]:\n        print(n - i)\n        break\n", "n = int(input())\nl = []\nr = []\nfor i in range(n):\n    l1, r1 = map(int, input().split())\n    l.append(l1)\n    r.append(r1)\nk = int(input())\nres = 1\nfor el in l:\n    if k < el:\n        res += 1\nprint(res)", "n = int(input())\nl = list()\nr = list()\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    l.append(x)\n    r.append(y)\nk = int(input())\nans = 0\nfor i in range(n):\n    if k <= r[i]:\n        ans += 1\nprint(ans)\n", "\n\nl=[]\nr=[]\nn=int(input())\nfor i in range(n):\n\n\ts=input().split(\" \")\n\tl.append(int(s[0]))\n\tr.append(int(s[1]))\n\nk=int(input())\n\nrem=n\n\n\ni=0\n\n\nfor i in range(n):\n\tif(l[i]<=k<=r[i]):\n\t\tbreak\n\trem-=1\nprint(rem)\n\n\n", "n=int(input())\na=[0]*50001\nfor i in range(n):\n    l,r=list(map(int,input().split()))\n    for j in range(l,r+1):\n        a[j]=i\nk=int(input())\nprint(n-a[k])\n", "n=int(input())\na=[]\nfor i in range(n):\n    a.append(list(map(int,input().split())))\nk=int(input())\nfor i in range(n):\n    if a[i][1]>=k:\n        print(n-i)\n        break\n"]