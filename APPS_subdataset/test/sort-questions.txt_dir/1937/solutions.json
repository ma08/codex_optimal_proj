["#      \nimport collections, atexit, math, sys, bisect \n\nsys.setrecursionlimit(1000000)\ndef getIntList():\n    return list(map(int, input().split()))    \n\ntry :\n    #raise ModuleNotFoundError\n    import numpy\n    def dprint(*args, **kwargs):\n        #print(*args, **kwargs, file=sys.stderr)\n        # in python 3.4 **kwargs is invalid???\n        print(*args,  file=sys.stderr)\n    dprint('debug mode')\nexcept Exception:\n    def dprint(*args, **kwargs):\n        pass\n\n\n\ninId = 0\noutId = 0\nif inId>0:\n    dprint('use input', inId)\n    sys.stdin = open('input'+ str(inId) + '.txt', 'r') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\nif outId>0:\n    dprint('use output', outId)\n    sys.stdout = open('stdout'+ str(outId) + '.txt', 'w') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\n    atexit.register(lambda :sys.stdout.close())     #idle \u4e2d\u4e0d\u4f1a\u6267\u884c atexit\n    \nN, = getIntList()\n#print(N)\n\nzb = getIntList()\n\nza1 = [0]\nza2 = [zb[0]]\n\nfor i in range(1, N//2):\n    t1 = zb[i] - za1[-1]\n    if t1 <= za2[-1]:\n        za1.append(za1[-1])\n        za2.append(t1)\n        continue\n    t2 = zb[i] - za2[-1]\n    if t2 >= za1[-1]:\n        za1.append(t2)\n        za2.append(za2[-1])\n        continue\n    assert False\n\nzr = za1 + za2[ : :-1]\nzs = []\nfor x in zr:\n    zs .append(str(x))\n    \n\nr = ' '.join(zs)\n\nprint(r)\n\n\n\n\n\n\n\n\n", "n = int(input())\n\nb = list(map(int, input().split()))\na1 = [0]\na2 = [b[0]]\n\nfor x in b[1:]:\n\tnew_a = a1[-1]\n\tif x - new_a > a2[-1]:\n\t\tnew_a = x - a2[-1]\n\tnew_a2 = x - new_a\n\ta1.append(new_a)\n\ta2.append(new_a2)\nprint(*(a1+a2[::-1]))", "n=int(input())//2\na=list(map(int,input().split(' ')))\nb=[0]*n\na.reverse()\nfor i in a:\n    b.append(i)\nmem=b[-1]\nc=0\nfor i in range(n-1):\n    if b[-2-i]-c>mem:\n        c=b[-2-i]-mem\n    b[-2-i]-=c\n    b[1+i]+=c\n    mem=b[-2-i]\nfor i in b:\n    print(i,end=' ')\n", "n = int(input())\nb = list(map(int, input().split(' ')))\n\na = [0] * n\n\nminV = 0\nmaxV = b[0]\n\nm = n //2\n\na[n - 1] = b[0]\n\ni = 1\nj = n - 2\n\nwhile(i < m):\n  if(b[i] - minV > 0 and b[i] - minV <= maxV):\n    a[i] = minV\n    a[j] = b[i] - minV\n    maxV = min(maxV, b[i] - minV)\n  else:\n    a[i] = b[i] - maxV\n    a[j] = maxV\n    minV = max(minV, b[i] - maxV)\n\n  i += 1\n  j -= 1\n\nprint(' '.join(map(str, a)))\n", "n = int(input())\nb = list(map(int, input().split()))\na = [0] * (2 * (len(b)))\na[-1] = b[0]\nfor i in range(1, len(b)):\n    if b[i] - a[i - 1] <= a[-i]:\n        a[i] = a[i - 1]\n        a[-i - 1] = b[i] - a[i - 1]\n    else:\n        a[-i - 1] = a[-i]\n        a[i] = b[i] - a[-i - 1]\nprint(*a)\n", "import sys\nsys.setrecursionlimit(2000)\nfrom collections import Counter\n\ndef __starting_point():\n\n    # single variables\n    n = [int(val) for val in input().split()][0]\n    b = [int(val) for val in input().split()]\n\n    l = 0\n    r = b[0]\n    a = [0] * n\n    for i in range(n//2):\n        a[i] = l\n        a[n-1-i] = r\n        if(i != n//2-1):\n            val = b[i+1]\n            summ = l + r\n            if(summ == val):\n                continue\n            elif(summ > val):\n                diff = summ - val\n                r -= diff\n            elif(summ < val):\n                diff = val - summ\n                l += diff\n\n    for i in a:\n        print(i, end=' ')\n    print('')\n       \n\n\n\n__starting_point()", "n = int(input())\nb = list(map(int, input().split()))\na = [0] * n\nc1 = 0; c2 = 10 ** 18\nfor i in range(n // 2):\n    if b[i] - c1 <= c2:\n        a[i] = c1\n        a[-i - 1] = b[i] - c1\n        c2 = b[i] - c1\n    else:\n        a[-i - 1] = c2\n        a[i] = b[i] - c2\n        c1 = b[i] - c2\nprint(' '.join(map(str, a)))\n", "n=int(input())\nb=list(map(int,input().split()))\nans=[None]*n\nfor i in range(n//2):\n    if(i==0):\n        ans[0]=0\n        ans[n-1]=b[0]\n    else:\n        x=b[i]-ans[i-1]\n        if(x>ans[n-i]):\n            ans[n-i-1]=ans[n-i]\n            ans[i]=b[i]-ans[n-i-1]\n        else:\n            ans[i]=ans[i-1]\n            ans[n-i-1]=b[i]-ans[i]\nfor i in ans:\n    print(i,end=\" \")", "n = int(input())\ns = [int(i) for i in input().split()]\nt = [0]*n\nt[-1] = s[0]\nfor i in range(1, n//2):\n    if t[n-i] < s[i]-t[i-1]:\n        t[i], t[n-1-i] = s[i] - t[n-i], t[n-i]\n    else:\n        t[i], t[n-1-i] = t[i-1], s[i]-t[i-1]\nprint(*t)", "n=int(input())\nB=list(map(int,input().split()))\n\nA=[None]*n\nA[0]=0\nA[n-1]=B[0]\n\nfor i in range(1,n//2):\n    #A[i-1]<=A[i]\n    #B[i-1]-A[i-1]>=B[i]-A[i]\n    #A[i]>=B[i]-B[i-1]+A[i-1]\n\n    A[i]=max(A[i-1],B[i]-B[i-1]+A[i-1])\n    A[n-1-i]=B[i]-A[i]\n\n\nfor a in A:\n    print(a,end=\" \")   \n\n", "#!/usr/bin/env python\n# coding: utf-8\n\n# In[14]:\n\n\nimport math\nn=int(input())\nblist=list(map(int, input().rstrip().split()))\n\n\n# In[15]:\n\n\nalist=[0 for i in range(n)]\n\n\n# In[16]:\n\n\nalist[0]=0\nalist[n-1]=blist[0]\n\nfor i in range(1,n//2):\n    if blist[i]<=blist[i-1]:\n        alist[i]=alist[i-1]\n        alist[n-i-1]=blist[i]-alist[i]\n    else:\n        alist[n-i-1]=alist[n-i]\n        alist[i]=blist[i]-alist[n-i-1]\n        \n\n\n# In[17]:\n\n\naliststr=[str(i) for i in alist]\n\nprint(\" \".join(aliststr))\n\n\n# In[ ]:\n\n", "from operator import itemgetter\n#int(input())\n#map(int,input().split())\n#[list(map(int,input().split())) for i in range(q)]\n#print(\"YES\" * ans + \"NO\" * (1-ans))\nn = int(input())\nai = [0] * n\nbi = list(map(int,input().split()))\nai[-1] = bi[0]\nfor i in range(1,n // 2):\n    mina = ai[i-1]\n    prev_end = ai[-i]\n    num = max(mina,bi[i] - prev_end)\n    ai[i] = num\n    ai[-i - 1] = bi[i] - num\nfor i in range(n):\n    print(ai[i],end=\" \")\n    \n", "n = int(input())\nb = [int(x) for x in input().split()]\na = [0]\nc = [b[0]]\nfor i in range(1, n // 2):\n\tif b[i] == b[i - 1]:\n\t\ta.append(a[len(a) - 1])\n\t\tc.append(c[len(c) - 1])\n\telif b[i] > b[i - 1]:\n\t\trazn = (b[i] - b[i - 1])\n\t\ta.append(a[len(a) - 1] + razn)\n\t\tc.append(c[len(c) - 1])\n\telse:\n\t\trazn = (b[i - 1] - b[i])\n\t\tc.append(c[len(c) - 1] - razn)\n\t\ta.append(a[len(a) - 1])\nfor x in a:\n\tprint(x, end = ' ')\nfor j in range(len(c) - 1, -1, -1):\n\tprint(c[j], end = ' ')\n", "import sys\nfrom math import ceil, floor\n\ninput = sys.stdin.readline\n\nn = int(input())\nans = [0 for i in range(n)]\na = list(map(int, input().split()))\n\nfor i in range(len(a)):\n    ans[i] = 0\n    ans[n-i-1] = a[i]\n\nfor i in range(1, len(a)):\n    back = n-i-1\n    if ans[i] < ans[i-1]:\n        diff = ans[i-1] - ans[i]\n        ans[i] += diff\n        ans[back] -= diff\n    while ans[back] > ans[back+1]:\n        diff = ans[back] - ans[back+1]\n        ans[i] += diff\n        ans[back] -= diff\n\nprint(' '.join([str(x) for x in ans]))", "n = int(input())\na = list(map(int, input().split()))\ns = [0]\nfor q in range(1, n//2):\n    s.append(s[-1]+max(0, a[q]-a[q-1]))\nfor q in range(n//2, n):\n    s.append(a[n-q-1]-s[n-q-1])\nprint(*s)\n", "n=int(input())\na=list(map(int,input().split()))\nb=[-1]*n\nb[0]=0;b[n-1]=a[0]\nfor i in range(1,n//2):\n    p,q=0,a[i]\n    fl=1\n    if p>=b[i-1] and q<=b[n-i] and fl:\n        b[i]=p\n        b[n-i-1]=q\n        fl=0\n    p=b[i-1];q=a[i]-b[i-1]\n    if p>=b[i-1] and q<=b[n-i] and fl:\n        b[i]=p\n        b[n-i-1]=q\n        fl=0\n    q=b[n-i];p=a[i]-b[n-i]\n    if p>=b[i-1] and q<=b[n-i] and fl:\n        b[i]=p\n        b[n-i-1]=q\n        fl=0\nprint(*b)\n", "n = int(input())\nb = list(map(int, input().split()))\na = [0]\nd = 0\nfor i in range(n//2-1):\n    if b[i+1]>b[i]:\n        d+=b[i+1] - b[i]\n    a.append(d)\nfor i in range(n//2-1,-1,-1): a.append(b[i]-a[i])\nprint(' '.join(list(map(str,a))))", "from bisect import bisect_right as br\nfrom bisect import bisect_left as bl\nfrom collections import defaultdict\nfrom itertools import combinations\nimport sys\nimport math\nMAX = sys.maxsize\nMAXN = 10**6+10\nMOD = 10**9+7\ndef isprime(n):\n    n = abs(int(n))\n    if n < 2:\n        return False\n    if n == 2: \n        return True    \n    if not n & 1: \n        return False\n    for x in range(3, int(n**0.5) + 1, 2):\n        if n % x == 0:\n            return False\n    return True\n\ndef mhd(a,b,x,y):\n    return abs(a-x)+abs(b-y)\n\ndef numIN():\n    return(list(map(int,sys.stdin.readline().strip().split())))\n\ndef charIN():\n    return(sys.stdin.readline().strip().split())\n\nt = [(-1,-1)]*1000010\n\ndef create(a):\n\tnonlocal t,n\n\tfor i in range(n,2*n):\n\t\tt[i] = (a[i-n],i-n)\n\tfor i in range(n-1,0,-1):\n\t\tx = [t[2*i],t[2*i+1]]\n\t\tx.sort(key = lambda x:x[0])\n\t\tt[i] = x[1]\n\ndef update(idx,value):\n\tnonlocal t,n\n\tidx = idx+n\n\tt[idx] = value\n\n\twhile(idx>1):\n\t\tidx = idx//2\n\t\tx = [t[2*idx],t[2*idx+1]]\n\t\tx.sort(key = lambda x:x[0])\n\t\tt[idx] = x[1]\n\n\nn = int(input())\nb = [-1]+list(numIN())\nans = [0]*(n+1)\nans[1] = 0\nans[n] = b[1]\nfor i in range(2,n//2+1):\n\tif b[i]<=b[i-1]:\n\t\tans[i] = ans[i-1]\n\t\tans[n-i+1] = b[i]-ans[i]\n\telse:\n\t\tans[n-i+1] = ans[n-i+2]\n\t\tans[i] = b[i]-ans[n-i+1]\nprint(' '.join([str(i) for i in ans[1:]]))\n\n\n\n\n\n\n", "n = int(input())\nb = list(map(int,input().split()))\na1 = []\na2 = []\ncur = 0\nlast = 10**100\nfor i in range(len(b)):\n    if b[i] - cur > last:\n        cur = b[i] - last\n    a1 += [cur]\n    a2 += [b[i] - cur]\n    last = b[i] - cur\nprint(*(a1 + a2[::-1]))\n"]