["n = len(input())\nprint(3)\nprint(\"R\", n-1)\nprint(\"L\", n)\nprint(\"L\", 2)\n", "s = input()\nl = len(s)\n\nprint(3)\nprint('L', 2)\nprint('R', 2)\nprint('R', 2*l-1)\n", "s = input()\nn = len(s)\nprint(3)\nprint('L', 2)\nprint('R', 2)\nprint('R', n * 2 - 1)\n", "S = input()\n\nprint(3)\nprint('L 2')\nprint('R 2')\nprint('R', len(S)-1 + 1 + len(S)-1)\n", "s=input()\nn=len(s)\nprint(3)\nprint(\"L\",2)\nprint(\"R\",2)\nprint(\"R\",2*n-1)", "s = input()\nprint(3)\nprint('L 2')\nprint('R 2')\nprint('R', 2 * len(s) - 1)\n", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int, minp().split()))\n\ndef solve():\n\ts = minp()\n\tn = len(s)\n\tprint(3)\n\tprint('R', n-1)\n\tprint('L', n)\n\tprint('L', 2)\n\n#for i in range(mint()):\nsolve()\n", "import sys\n#input=sys.stdin.readline\n\ndef main():\n    s=input()\n    n=len(s)\n    print(3)\n    print('L',2)\n    print('R',2)\n    print('R',(2*n)-1)\n\nmain()\n", "S = input()\nN = len(S)\nprint(3)\nprint(f\"L {2}\")\nprint(f\"R {2}\")\nprint(f\"R {2*N-1}\")\n", "# import sys; input = sys.stdin.buffer.readline\n# sys.setrecursionlimit(10**7)\nfrom collections import defaultdict\nmod = 10 ** 9 + 7; INF = float(\"inf\")\n\ndef getlist():\n\treturn list(map(int, input().split()))\n\ndef inverse(N, mod):\n\treturn (pow(N, mod - 2, mod))\n\ndef main():\n\tS = list(input())\n\tN = len(S)\n\tprint(3)\n\tprint(\"L\", N - 1)\n\tprint(\"R\", N - 1)\n\tprint(\"R\", 2 * N - 1)\n\t# s = S\n\t# s = s[1:N - 1][::-1] + s\n\t# print(\"\".join(s))\n\t# s = s + s[N - 1:2* N - 3][::-1]\n\t# print(\"\".join(s))\n\t# s = s + s[2 * N - 1:3 * N - 4][::-1]\n\t# print(\"\".join(s))\n\n\ndef __starting_point():\n\tmain()\n__starting_point()", "s = input()\nn = len(s)\nprint (3)\nprint (\"L\",n-1)\nprint (\"R\",n-1)\nprint (\"R\",2*n-1)", "s = input()\nn = len(s)\nprint(3)\nprint('R',n-1)\nprint('L',n)\nprint('L',2)"]