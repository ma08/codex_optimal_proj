["\"\"\"\nCodeforces Contest Good Bye 2014 Contest Problem A\n\nAuthor  : chaotic_iak\nLanguage: Python 3.4.2\n\"\"\"\n\n################################################### SOLUTION\n\ndef main():\n    n,t = read()\n    a = read()\n    c = 1\n    while c < t:\n        c += a[c-1]\n    if c == t:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n#################################################### HELPERS\n\n\n\ndef read(mode=2):\n    # 0: String\n    # 1: List of strings\n    # 2: List of integers\n    inputs = input().strip()\n    if mode == 0: return inputs\n    if mode == 1: return inputs.split()\n    if mode == 2: return list(map(int, inputs.split()))\n\ndef write(s=\"\\n\"):\n    if s is None: s = \"\"\n    if isinstance(s, list): s = \" \".join(map(str, s))\n    s = str(s)\n    print(s, end=\"\")\n\nwrite(main())", "n, t = map(int, input().split())\narr = list(map(int, input().split()))\ncur = 0\nwas = False\nwhile cur < n:\n\ttry:\n\t\tcur = cur+arr[cur]\n\t\tif(cur == t-1):\n\t\t\twas = True\n\texcept:\n\t\tbreak\nif(was):\n\tprint('YES')\nelse:\n\tprint('NO')", "n, t = map(int, input().split())\na, cur = [0] + [int(x) for x in input().split()], 1\nwhile cur < t:\n    cur += a[cur]\nprint('YES' if cur == t else 'NO')", "n,t=map(int,input().split())\na=list(map(int,input().split()))\ncan=[0 for _ in range(n)]\ncan[0]=1\nfor i in range(n-1):\n  if can[i]:\n    can[i+a[i]] = 1\nprint(\"YES\" if can[t-1] else \"NO\")", "n, t = [int(_) for _ in input().split()]\na = [int(_) for _ in input().split()]\np = 1\nwhile p < t:\n    p += a[p-1]\nif p == t:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "#input\nn,t=map(int,input().split())\na=[int(x) for x in input().split()]\n\n#variables\np=1\n\n#main\nwhile p<=t:\n\tif p==t:\n\t\tprint('YES')\n\t\tquit()\n\tp+=a[p-1]\n\n#output\nprint('NO')", "n,t = list(map(int, input().split()))\nl = input().split()\nfor i in range(n-1):\n    l[i] = int(l[i])\nl = [0]+l\nnow = 1\nwhile 1:\n    now += l[now]\n    if now > t:\n        ans = 0\n        break\n    if now == t:\n        ans = 1\n        break\n\nif ans == 0:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n", "n,m=input().split(' ')\nn=int(n)\nm=int(m)\nseq=[1]\na=input()\nline=a.split(' ')\nc=1\nwhile c!=n:\n    c+=int(line[c-1])\n    seq.append(c)\nif m in seq:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "line = input().split()\nn = int(line[0])\nt = int(line[1])\n\nline = input().split()\narr = [int(num) for num in line]\nn = 0\nwhile n < t - 1:\n    n += arr[n]\n\nif n == t - 1:\n    print('YES')\nelse:\n    print('NO')\n", "import sys\n\nnums = [int(x) for x in sys.stdin.readline().split(\" \")]\na = [int(x) for x in sys.stdin.readline().split(\" \")]\n\nt = nums[1]\n\ncurr = 1\nwhile curr < t:\n\tcurr += a[curr-1]\nif curr == t:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "__author__ = 'Rakshak.R.Hegde'\n\"\"\"\nCreated on Dec 30 2014 PM 08:30\n\n@author: Rakshak.R.Hegde\n\"\"\"\n\n\ndef mint(): return map(int, input().split())\n\n\nn, t = mint()\na = list(mint())\ncurr = 1\nwhile curr < t:\n    curr = curr + a[curr - 1]\nprint('YES' if curr == t else 'NO')", "import sys\n\ndef main():\n    n,t = tuple([int(y) for y in input().split()])\n    a = [int(x) for x in input().split()]\n    c = 1\n    while True:\n        c = c + a[c - 1]\n        if c == t:\n            print(\"YES\")\n            return\n        elif c > t:\n            print(\"NO\")\n            return\n    print(\"NO\")\n\ndef __starting_point():\n    main()\n\n__starting_point()", "__author__ = 'Daniil'\nn,t = list(map(int,input().split()))\n\na = list(map(int,input().split()))\ni=0\nwhile i!=t-1:\n    i+=a[i]\n    if i>t-1:\n        print('NO')\n        quit()\nprint('YES')\n", "def ans():\n    n, t= [int(i) for i in input().split()]\n    a= [0]\n    a+= [int(i) for i in input().split()]\n    #print(a)\n    \n    ans= 1\n    i= 1\n    while True:\n        ans+= a[i]\n        i= ans\n        if ans== t:\n            print(\"YES\")\n            return\n        \n        if i> t:\n            print(\"NO\")\n            return\n\nans()", "n, t = (int(i) for i in input().split())\nportals = [int(i) for i in input().split()]\nhome = 1\nwhile True:\n    if home == t:\n        print('YES')\n        break\n    elif home > t:\n        print('NO')\n        break\n    home += portals[home-1]\n", "n, t = map(int, input().split())\na = list(map(int, input().split()))\npos = 1\nwhile (pos < t): pos += a[pos-1]\nprint(('NO', 'YES')[pos == t])", "n, t = list(map(int, input().split()))\nt = t - 1\nj = [int(x) for x in input().split()]\n\ncur = 0\nwhile True:\n    if cur > t:\n        print('NO')\n        break\n    cur += j[cur]\n    if cur == t:\n        print('YES')\n        break\n", "n, t = list(map(int, input().split()))\na = list(map(int, input().split()))\ncurrent = 1\nwhile current < t:\n    current = current + a[current-1]\n    \nif current == t:\n    print('YES')\nelse:\n    print('NO')\n", "n, t = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ncurrent = 0\n\nwhile current < t - 1:\n    current = a[current] + current\n\nprint('YES' if current == t - 1 else 'NO')\n", "def main():\n\tn, t = list(map(int, input().split()))\t\n\ta =[0] + list(map(int, input().split())) + [100000]\n\td = {}\n\tfor i in range(1,n):\n\t\td[i] = i + a[i]\n\treached = True\n\ti = 1\n\tcount = 1\n\twhile reached and count <= 100009:\n\t\tif i in d:\n\t\t\tif d[i] == t:\n\t\t\t\tprint ('YES')\n\t\t\t\treturn\n\t\t\ti = d[i]\n\t\t\tcount += 1\n\t\telse:\n\t\t\tbreak\n\tprint('NO')\n\n\n\n\t\n\ndef __starting_point():\n\tmain()\n\n__starting_point()", "c = input().split()\nn = int(c[0])  # \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\nt = int(c[1])  # \ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\nc = input().split()  # \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\n\nfor i in range(n-1):\n    c[i] = int(c[i])\n    \na = 1\nwhile (a < n) and (a < t):\n    a += c[a-1]\n    \nif a == t:\n    print('YES')\nelse:\n    print('NO')", "import math,string,itertools,fractions,heapq,collections,re,array,bisect\nfrom itertools import chain, dropwhile, permutations, combinations\nfrom collections import defaultdict\n\n\ndef main(n,t,a):\n    j = 1\n    while j<n:\n        #print(j,a[j-1])\n        j += a[j-1]\n        if j==t:\n            print(\"YES\")\n            return\n    print(\"NO\")\n\n\n\ndef main_input():\n    n,t = list(map(int,input().split()))\n    a = list(map(int,input().split()))\n    main(n,t,a)\n\ndef __starting_point():\n    main_input()\n\n__starting_point()", "n, t = input().rsplit(' ')\nn, t = int(n), int(t)\nlineWorld = [int(x) for x in input().rsplit(' ')]\nstart = 1\nwhile start < t and start < n:\n    oldStart = start\n    start += lineWorld[start - 1]\n    if start == oldStart:\n        break\nif start == t:\n    print('YES')\nelse:\n    print('NO')", "n, t = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\nnow = 0\nresult = 0\nwhile now < n - 1:\n    now += a[now]\n    if now + 1 == t:\n        result = 1\nif result:\n    print('YES')\nelse:\n    print('NO')"]