["def getmask(x):\n    ans = 0\n    for i in range(2, x + 1):\n        while x % (i * i) == 0:\n            x //= i * i\n        if x % i == 0:\n            ans ^= 1 << i\n            x //= i\n    return ans\n\ndef main():\n    maxn = 71\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    cnt = [0] * maxn\n    for i in a:\n        cnt[i] += 1\n    masks = {}\n    for i in range(1, maxn):\n        if cnt[i]:\n            masks[getmask(i)] = masks.get(getmask(i), 0) + cnt[i]\n    while len(masks) > 1 or 0 not in masks:\n        if not masks:\n            print(0)\n            return\n        fixed = max(masks.keys())\n        for i in list(masks.keys()):\n            if i ^ fixed < i:\n                masks[i ^ fixed] = masks.get(i ^ fixed, 0) + masks[i]\n                masks[i] = 0\n        masks[0] = masks.get(0, 0) + masks[fixed] - 1\n        masks[fixed] = 0\n        masks = {i: j for i, j in list(masks.items()) if j > 0}\n    print(pow(2, masks[0], 10**9+7) - 1)\n    \n    \n    \nmain()\n", "from collections import defaultdict\ndef getmask(x):\n    ans = 0\n    for i in range(2, x + 1):\n        while x % i == 0:\n            x //= i\n            ans ^= 1 << i\n    return ans\n\ndef main():\n    maxn = 71\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    cnt = [0] * maxn\n    for i in a:\n        cnt[i] += 1\n    masks = defaultdict(int)\n    for i in range(1, maxn):\n        masks[getmask(i)] += cnt[i]\n    while masks[0] != sum(masks.values()):\n        fixed = max(i for i in masks if masks[i])\n        masks[0] -= 1\n        for i in list(masks.keys()):\n            if i ^ fixed < i:\n                masks[i ^ fixed] += masks[i]\n                masks[i] = 0\n    print(pow(2, masks[0], 10**9+7) - 1)\n    \n    \n    \nmain()\n", "n = int(input())\na = set(map(int, input().split()))\ns = []\np = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67]\nfor i in a:\n    b = 0\n    for j in p:\n        while i % j == 0:\n            i //= j\n            b ^= 1 << j\n    for j in s:\n        b = min(b, b ^ j)\n    if b > 0:\n        s.append(b)\nprint(pow(2, n - len(s), 10 ** 9 + 7) - 1)", "n = int(input())\ns = []\np = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67]\nfor i in set(map(int, input().split())):\n    b = 0\n    for j in p:\n        while i % j == 0:\n            i //= j\n            b ^= 1 << j\n    for j in s:b=min(b,b^j)\n    if b>0:s.append(b)\nprint(pow(2, n - len(s), 10 ** 9 + 7) - 1)\n", "n = int(input())\na = set(map(int, input().split()))\ns = []\np = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67]\nfor i in a:\n    b = 0\n    for j in p:\n        while i % j == 0:\n            i //= j\n            b ^= 1 << j\n    for j in s:\n        b = min(b, b ^ j)\n    if b > 0:\n        s.append(b)\nprint(pow(2, n - len(s), 10 ** 9 + 7) - 1)", "from collections import *\n\nl = int(input())\nc = Counter(map(int, input().split()))\nt = defaultdict(int)\np = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67]\n\nfor k, s in c.items():\n    d = 0\n    for i, q in enumerate(p):\n        while k % q == 0:\n            k //= q\n            d ^= 1 << i\n    t[d] += s\n\nu = defaultdict(int)\nu[0] = 1\n\nfor x in t:\n    if x: l -= 1\n    if 0 < x < 2048:\n        v = u.copy()\n        for y in u: v[x ^ y] += u[y]\n        u = v\n\ne = 1000000007\nprint((u[0] * pow(2, l, e) - 1) % e)", "n = int(input())\ns = []\np = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67]\nfor k in set(map(int, input().split())):\n    d = 0\n    for q in p:\n        while k % q == 0:\n            k //= q\n            d ^= 1 << q\n    for j in s: d = min(d, d ^ j)\n    if d: s.append(d)\nprint(pow(2, n - len(s), 1000000007) - 1)", "n = int(input())\n\ns = []\n\np = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67]\n\nfor k in set(map(int, input().split())):\n\n    d = 0\n\n    for q in p:\n\n        while k % q == 0:\n\n            k //= q\n\n            d ^= 1 << q\n\n    for j in s: d = min(d, d ^ j)\n\n    if d: s.append(d)\n\nprint(pow(2, n - len(s), 1000000007) - 1)\n\n\n\n# Made By Mostafa_Khaled\n", "n = int(input())\na = set(map(int, input().split()))\ns = []\np = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67]\nfor i in a:\n    b = 0\n    for j in p:\n        while i % j == 0:\n            i //= j\n            b ^= 1 << j\n    for j in s:\n        b = min(b, b ^ j)\n    if b > 0:\n        s.append(b)\nprint(pow(2, n - len(s), 10 ** 9 + 7) - 1)", "n = int(input())\n*a, = map(int, input().split())\nmod = 1000000007\nd = []\nprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67]\nb = [0, 4, 8, 0, 32, 12, 128, 4, 0, 36,2048, 8, 8192, 132, 40, 0, 131072, 4, 524288, 32, 136, 2052, 8388608, 12, 0, 8196, 8, 128, 536870912, 44, 2147483648, 4, 2056, 131076, 160, 0, 137438953472, 524292, 8200, 36, 2199023255552, 140, 8796093022208, 2048,32, 8388612, 140737488355328, 8, 0,4, 131080, 8192, 9007199254740992, 12, 2080, 132, 524296, 536870916, 576460752303423488, 40, 2305843009213693952, 2147483652, 128, 0, 8224, 2060, 147573952589676412928, 131072, 8388616, 164]\nfor i in set(a):\n    c = b[i - 1]\n    for j in d:\n        c = min(c, c ^ j)\n    if c > 0:\n        d.append(c)\nprint(pow(2, n - len(d), mod) - 1)", "from sys import stdin\n\n\ndef find_prime(max_value):\n    assert max_value >= 2\n    result = [2]\n    for i in range(3, max_value):\n        state = 1\n        for item in result:\n            if item * item > i:\n                break\n            elif i % item == 0:\n                state = -1\n                break\n        if state == 1:\n            result.append(i)\n    return result\n\n\nmodule = int(10e8) + 7\n\nn = int(stdin.readline())\nA = list(map(int, stdin.readline().split()))\nnumber = [0 for i in range(70)]\nfor item in A:\n    number[item - 1] += 1\n\nprime_list = find_prime(70)\n\nprime_map = {}\nfor i in range(2, 70 + 1):\n    result = 0\n    for item in prime_list:\n        cur = i\n        num = 0\n        while cur % item == 0:\n            num += 1\n            cur = int(cur / item)\n        result = result * 2 + num % 2\n    prime_map[i] = result\n\nnumber_dic = {0: 1}\nsum_time = 0\nfor i in range(2, 70 + 1):\n    if number[i - 1] >= 1:\n        mask = prime_map[i]\n        state = 1\n        new_number_dic = number_dic.copy()\n        for key, value in list(new_number_dic.items()):\n            new_key = key ^ mask\n            if new_key in number_dic:\n                number_dic[new_key] += value\n            else:\n                number_dic[new_key] = value\n            number_dic[new_key] %= module\n        sum_time += (number[i - 1] - 1)\n\nresult = number_dic[0]\n\nfor j in range(number[0] + sum_time):\n    result *= 2\n    result %= module\nprint(result-1)\n", "from collections import defaultdict\n            #from collections import defaultdict\ndef getmask(x):\n    ans = 0\n    for i in range(2, x + 1):\n        while x % i == 0:\n            x //= i\n            ans ^= 1 << i\n    return ans\n \ndef main():\n    maxn = 71\n    #maxn = 71\n    n = int(input())\n    #n = int(input())\n    a = [int(i) for i in input().split()]\n    cnt = [0] * maxn\n    for i in a:\n        cnt[i] += 1\n    masks = defaultdict(int)\n    for i in range(1, maxn):\n        masks[getmask(i)] += cnt[i]\n    while masks[0] != sum(masks.values()):\n        fixed = max(i for i in masks if masks[i])\n        masks[0] -= 1\n        for i in list(masks.keys()):\n            if i ^ fixed < i:\n                masks[i ^ fixed] += masks[i]\n                masks[i] = 0\n    print(pow(2, masks[0], 10**9+7) - 1)\n    \n    \n    \nmain()\n"]