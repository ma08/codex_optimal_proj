["import sys\ninput=sys.stdin.readline\n\ndef gcd(x,y):\n    if y==0:\n        return x\n    if x<y:\n        x,y=y,x\n    return gcd(y,x%y)\n\nn,m=map(int,input().split())\nX=list(map(int,input().split()))\nP=list(map(int,input().split()))\nd=X[1]-X[0]\nfor i in range(2,n):\n    d=gcd(d,X[i]-X[i-1])\nfor i,p in enumerate(P):\n    if d%p==0:\n        print('YES')\n        print(X[0],i+1)\n        break\nelse:\n    print('NO')", "def gcd(a, b):\n\twhile b != 0:\n\t\ta, b = b, a % b\n\treturn a\n\n[n, m] = [int(i) for i in input().split()]\nx = [int(i) for i in input().split()]\ng = 0\nfor i in range(n - 1):\n\tg = gcd(g, x[i + 1] - x[i])\ncnt = 1\nfor i in input().split():\n\tj = int(i)\n\tif g % j == 0:\n\t\tprint (\"YES\")\n\t\tprint (x[0], cnt, sep = ' ')\n\t\treturn\n\tcnt += 1\nprint (\"NO\")", "from sys import *\nfrom math import *\nfrom collections import *\n\nN, M = map(int, input().split())\n\nevents = list(map(int, input().split()))\n\np = list(map(int, input().split()))\n\ng = events[1] - events[0]\n\nfor i in range(2, N):\n    g = gcd(g, events[i] - events[i-1])\n    \nf = None\n\nfor i in range(M):\n    if g % p[i] == 0:\n        \n        f =i + 1\n        break\n\nif f == None:\n    print(\"NO\")\n\nelse:\n    print(\"YES\")\n    print(events[0],end=' ')\n    print(f)    \n", "def gcd(a, b):\n    b = abs(b)\n    while b != 0:\n        r = a%b\n        a,b = b,r\n    return a\n\nN, M = list(map(int, input().split()))\nX = [int(a) for a in input().split()]\nP = [int(a) for a in input().split()]\ng = 0\nfor i in range(N-1):\n    g = gcd(g, X[i]-X[i+1])\nfor i in range(M):\n    if g % P[i] == 0:\n        print(\"YES\")\n        print(X[0], i+1)\n        break\nelse:\n    print(\"NO\")\n", "n, m = map(int, input().split())\nx = list(map(int, input().split()))\np = list(map(int, input().split()))\nd = [x[i] - x[i - 1] for i in range(1, n)]\ndef gcd(a, b):\n    if a == b:\n        return a\n    if a < b:\n        return gcd(b, a)\n    if b == 0:\n        return a\n    return gcd(a % b, b)\nz = d[0]\nfor i in d:\n    z = gcd(z, i)\na = []\nf = False\nfor i in range(m):\n    if z % p[i] == 0:\n        print('YES')\n        print(x[0], i + 1)\n        f = True\n        break\nif not f:\n    print('NO')", "from math import gcd\nn,m = list(map(int,input().split()))\n\nX = list(map(int, input().split()))\n\nP = list(map(int,input().split()))\n\ng = X[1]-X[0]\n\nfor i in range(n-1):\n    g = gcd(g, X[i+1] - X[i])\n\n\nfor i,j in enumerate(P):\n    if g % j == 0:\n        print(\"YES\")\n        print(X[0],i+1)\n        return\nprint(\"NO\")\n", "n, m = list(map(int,input().split()))\nx = list(map(int,input().split()))\np = list(map(int,input().split()))\ndef gcd(a, b):\n\tif a == 0:\n\t\treturn b\n\tif b == 0:\n\t\treturn a\n\tif a > b:\n\t\ta, b = b, a\n\treturn gcd(a, b % a)\ngie = x[1] - x[0]\nfor i in range(2,n):\n\tgie = gcd(gie, x[i]-x[i-1])\nimport sys\nfor i in range(m):\n\tif gie % p[i] == 0:\n\t\tprint(\"YES\")\n\t\tprint(x[0], end =  \" \")\n\t\tprint(i + 1)\n\t\treturn\nprint(\"NO\")\n#print(gcd(7,14))", "from math import gcd\n\nn,m = list(map(int,input().split()))\nx = list(map(int,input().split()))\np = list(map(int,input().split()))\nfirst = x[0]\nx = [x[i+1]-x[i] for i in range(n-1)]\na = x[0]\nfor i in x[1:]:\n    a = gcd(a,i)\nfor index, i in enumerate(p):\n    if a % i == 0:\n        print(\"YES\")\n        print(first, index+1)\n        break\nelse:\n    print(\"NO\")\n", "def pgcd(a,b):\n    \"\"\"pgcd(a,b): calcul du 'Plus Grand Commun Diviseur' entre les 2 nombres entiers a et b\"\"\"\n    if b==0:\n        return a\n    else:\n        r=a%b\n        return pgcd(b,r)\nn,e = map(int,input().split())\nevents = list(map(int,input().split()))\nsettings = list(map(int,input().split()))\nr = -1\nfor k in range(0,len(events)-1):\n\tif(r==-1):\n\t\tr = events[k+1]-events[k]\n\telse:\n\t\tr = pgcd(r,events[k+1]-events[k])\nok = 0\nfor k in range(len(settings)):\n\tif(r%settings[k]==0):\n\t\tprint(\"YES\")\n\t\tprint(events[0],k+1)\n\t\tok = 1\n\t\tbreak\nif(not ok):\n\tprint(\"NO\")", "import math\n\n\nn, m = list(map(int, input().split()))\nx = input().split()\nx = [int(xi) for xi in x]\np = input().split()\np = [int(pi) for pi in p]\n\ngcds = x[1] - x[0]\nfor i in range(2, n):\n    gcds = math.gcd(gcds, x[i] - x[i - 1])\n\nfor i in range(m):\n    if gcds % p[i] == 0:\n        print(\"YES\")\n        print(x[0], i + 1)\n        return\nprint(\"NO\")\n", "n, m = list(map(int, input().split()))\nu = list(map(int, input().split()))\np = list(map(int, input().split()))\nfor i in range(1, n):\n    u[i] -= u[0]\nh = u[0]\nu[0] = 0\ndef gsd(a, b):\n    a, b = max(a, b), min(a, b)\n    if b == 0:\n        return a\n    return gsd(b, a % b)\nfor i in range(1, n):\n    u[i] = gsd(u[i], u[i - 1])\nfor i in range(m):\n    if u[-1] % p[i] == 0:\n        print(\"YES\")\n        print(h, i + 1)\n        return\nprint(\"NO\")\n", "n, m = list(map(int, input().split()))\nx = tuple(map(int, input().split()))\ny = min(x)\na = 0\nfor xi in x:\n    b = xi - y\n    while b:\n        a, b = b, a % b\nj = 1\nfor p in input().split():\n    if a % int(p):\n        j += 1\n        continue\n    print(\"YES\")\n    print(y, j)\n    break\nelse:\n    print(\"NO\")\n", "import sys\ninput = sys.stdin.readline\n\nn,m=list(map(int,input().split()))\nX=list(map(int,input().split()))\nP=list(map(int,input().split()))\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\nx=X[1]-X[0]\n\nfor i in range(1,n):\n    x=gcd(x,X[i]-X[0])\n\nfor i in range(m):\n    if x%P[i]==0:\n        print(\"YES\")\n        print(X[0],i+1)\n        return\n\nprint(\"NO\")\n", "import sys\ndef gcd(a, b):\n    while a and b:\n        if a >= b:\n            a %= b\n        else:\n            b %= a\n    return a | b\n\nn, m = [int(s) for s in input().split()]\ntime = [int(s) for s in input().split()]\np = [int(s) for s in input().split()]\ndiffs = []\nfor i in range(len(time) - 1):\n    diffs.append(time[i + 1] - time[i])\nans = max(diffs)\n#print(diffs)\nfor i in range(len(diffs)):\n    ans = gcd(ans, diffs[i])\nfor i in range(len(p)):\n    if ans % p[i] == 0:\n        print('YES')\n        print(time[0], i + 1)\n        return\nprint('NO')", "import functools\n\nn, m = list(map(int, input().strip().split()))\nx = list(map(int, input().strip().split()))\np = list(map(int, input().strip().split()))\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ninit = x[0]\nfor i in range(n):\n    x[i] -= init\n\ngcd_interval = functools.reduce(gcd, x)\nfor i in range(m):\n    pi = p[i]\n    if gcd_interval%pi == 0:\n        print(\"YES\")\n        print(init, i+1)\n        return\nprint(\"NO\")", "from math import gcd\nfrom functools import reduce\nn, m = [int(i) for i in input().split()]\nx = [int(i) for i in input().split()]\np = [int(i) for i in input().split()]\ns = [x[i+1] - x[i] for i in range(n-1)]\ng = reduce(gcd, s)\nfor i in range(m):\n    if g%p[i] == 0:\n        print('YES')\n        print(x[0], i+1)\n        break\nelse:\n    print('NO')\n", "n,m=list(map(int,input().split()))\na = list(map(int,input().split()))\nt = list(map(int,input().split()))\ndef gcd(a,b):\n    if b==0:\n        return a\n    else:\n        return gcd(b,a%b)\ng = a[1]-a[0]\nfor i in range(n-1):\n    g = gcd(g,a[i+1]-a[i])\n    if g==1:\n        break\nidx=-1\nfor i in range(m):\n    if g%t[i]==0:\n        idx=i\n        break\n    \nif idx==-1:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    print(a[0],idx+1)\n", "import math\nfrom functools import reduce\n\nn, m = map(int, input().split())\n\n\nt = [int(x) for x in input().split()]\n\np = [int(x) for x in input().split()]\n\ntt = reduce(math.gcd, [x - t[0] for x in t])\n\nfor i, pp in enumerate(p, start=1):\n    if tt % pp == 0:\n        print(\"YES\")\n        print(t[0], i)\n        break\n\nelse:\n    print(\"NO\")", "n, m = list(map(int, input().split()))\nxrr = [int(x) for x in input().split()]\nprr = [int(x) for x in input().split()]\nxrr.sort()\ngcd = xrr[1] - xrr[0]\nfor i in range(1, n - 1):\n    u = gcd\n    v = xrr[i + 1] - xrr[i]\n    temp = 0\n    while v:\n        temp = u % v\n        u = v\n        v = temp\n    gcd = u\nfor i in range(m):\n    if gcd % prr[i] == 0:\n        print('YES')\n        print(xrr[0], i + 1)\n        break\nelse:\n    print('NO')\n", "import math\nn, m = map(int, input().split())\n\nxEvents = list(map(int, input().split()))\n\npInterval = list(map(int, input().split()))\n\nInterval = [xEvents[i] - xEvents[i - 1] for i in range(1, n)]\n\npList = [Interval[0]]\n\nfor i in range(1, n - 1):\n    pList.append(math.gcd(pList[-1], Interval[i]))\n\nable = 0\nfor i in range(len(pInterval)):\n    if pList[-1]%pInterval[i] == 0:\n        print(\"YES\")\n        print(xEvents[0], end = \" \")\n        print(i + 1)\n        able = 1 \n        break\n\nif able == 0:\n    print(\"NO\")\n\n", "from bisect import bisect_right as br\nfrom bisect import bisect_left as bl\nfrom collections import *\nfrom itertools import *\nimport functools\nimport sys\nfrom math import *\nimport random\nimport re\nMAX = sys.maxsize\nMAXN = 10**5+10\nMOD = 10**9+7\ndef isprime(n):\n    n = abs(int(n))\n    if n < 2:\n        return False\n    if n == 2: \n        return True    \n    if not n & 1: \n        return False\n    for x in range(3, int(n**0.5) + 1, 2):\n        if n % x == 0:\n            return False\n    return True\n\ndef mhd(a,b,x,y):\n    return abs(a-x)+abs(b-y)\n\ndef numIN(x = \" \"):\n    return(list(map(int,sys.stdin.readline().strip().split(x))))\n\ndef charIN(x= ' '):\n    return(sys.stdin.readline().strip().split(x))\n\ndef arrIN():\n    return list(numIN())\n\ndef dis(x,y):\n    a = y[0]-x[0]\n    b = x[1]-y[1]\n    return (a*a+b*b)**0.5\n\ndef lgcd(a):\n    g = a[0]\n    for i in range(1,len(a)):\n        g = math.gcd(g,a[i])\n    return g\n\ndef ms(a):\n    msf = -MAX\n    meh = 0\n\n    for i in range(len(a)):\n        meh+=a[i]\n        if msf<meh:\n            msf = meh\n        if meh<0:\n            meh = 0\n    return msf\n\n\ndef res(ans,t):\n    print('Case #{}: {}'.format(t,ans))\n\nn,m = numIN()\nx = arrIN()\np = arrIN()\n\ng = 0\nfor i in range(1,n):\n    g = gcd(g,x[i]-x[i-1])\n\nfor i in range(m):\n    if p[i]==g or g%p[i]==0:\n        print('YES')\n        print(x[0],i+1)\n        return\nprint('NO')\n\n\n\n\n"]