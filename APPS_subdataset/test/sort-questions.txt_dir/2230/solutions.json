["n = int(input())\nl = 0\nr = n * n - 1\n\nfor i in range(n):\n    for k in range(n // 2):\n        print(l + 1, end = ' ')\n        print(r + 1, end = ' ')\n        l += 1\n        r -= 1\n    print()\n", "n = int(input())\na = 1\nb = n * n\nfor i in range(n):\n    for j in range(n // 2):\n        print(a, b, end = ' ')\n        a += 1\n        b -= 1\n    print()", "def __starting_point():\n    N = int(input())\n    st = 1\n    en = N*N\n    for i in range(N):\n        for j in range(N//2):\n            print (st,end=\" \")\n            st+=1\n            print (en,end=\" \")\n            en-=1\n        print()\n\n__starting_point()", "def get_candies(n):\n    result = []\n    bags = list(range(1, n**2 +1))\n\n    for i in range(n):\n        each = []\n        for times in range(int(n / 2)):\n            each.append(bags[0])\n            each.append(bags[-1])\n            bags = bags[1:len(bags)-1]\n        each.sort()\n        result.append(each)\n\n    return result\n\n\ndef main():\n    n = int(input())\n    \n\n\n    result = get_candies(n)\n    \n    for i in range(len(result)):\n        string = \"\"\n        for value in result[i]:\n            string += str(value)\n            string += \" \"\n        print(string)\n        \n        \n    \n\n#import doctest\n#doctest.testmod()\nmain()   \n", "n = int(input())\na = int(n ** 2 + 1)\nt = 1\n\nfor i in range(1, n+1):\n    for j in range(int(n/2) - 1):\n        print('%d %d' % (t, a - t), end = ' ')\n        t += 1\n    print('%d %d' % (t, a - t))\n    t += 1", "n = int(input())\na = int(n ** 2 + 1)\nt = 1\n\nfor i in range(n):\n    for j in range(int(n/2) - 1):\n        print('%d %d' % (t, a - t), end = ' ')\n        t += 1\n    print('%d %d' % (t, a - t))\n    t += 1", "n = int(input())\ncnt1 = 1\ncnt2 = n ** 2\narr = []\nfor i in range(n * n // 2):\n    arr.append([cnt1, cnt2])\n    cnt1 += 1\n    cnt2 -= 1\nfor i in range(0, len(arr), n // 2):\n    for j in range(n // 2):\n        print(arr[i + j][0], arr[i + j][1], sep=' ', end=' ')\n    print('')", "n = input()\nn = int(n)\nbags = []\nfor i in range(n**2):\n\tbags.append(i + 1)\n\nstart = 0\nend = -1\nstep = int(n / 2)\n\nfor i in range(n):\n\tfor j in range(start, start + step):\n\t\tprint(bags[j], end=' ')\n\tstart += step\n\tfor j in range(end, end - step, -1):\n\t\tprint(bags[j], end=' ')\n\tend -= step\n\tprint('')\t\n", "n = int(input())\nt1, t2 = 1, n ** 2\nfor i in range(0, n):\n    for j in range(0, n, 2):\n        print(t1, t2, sep = ' ', end = ' ')\n        t1 += 1\n        t2 -= 1\n    print('')", "n = int(input())\np = 0\nfor i in range(n):\n    for j in range(int(n/2)):\n        p += 1\n        print(p,n*n-p+1,end=\" \")\n    print()\n", "n = int(input()) \nvec = [x + 1 for x in range(n * n)]\nm = n // 2;\nfor i in range(n):\n    for j in range(m):\n        print(vec[i * m + j], end = \" \")\n        print(vec[-(i * m + j + 1)], end = \" \");\n    print();\n", "n = int(input())\nleft = 1\nright = n ** 2\nfor i in range(n):\n    for j in range(n // 2):\n        print(left, right, end=' ')\n        left, right = left + 1, right - 1\n    print()", "def solve(n):\n  start = 1\n  end = n*n\n  halfN = n // 2\n  while(n):\n    line = \"\"\n    i=0\n    while(i<halfN):\n      line += str(start) + \" \"\n      start += 1\n      i += 1\n    i=0\n    while(i<halfN):\n      line += str(end) + \" \"\n      end -= 1\n      i += 1\n    n -= 1\n    print(line)\n\nn = int(input())\n\nsolve(n)"]