["from collections import deque\n\nn, k = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\nc50 = sum([1 for i in a if i == 50])\nc100 = sum([1 for i in a if i == 100])\nc = [[0] * 51 for i in range(51)]\nc[0][0] = 1\nc[1][0] = 1\nc[1][1] = 1\nfor x in range(2, 51):\n    for y in range(x + 1):\n        c[x][y] = c[x - 1][y - 1] + c[x - 1][y]\nd = [[[[0, float('inf')] for l in range(2)] for i in range(c100 + 1)] for j in range(c50 + 1)]\n# d[i][j][c] \u043e\u0442\u0432\u0435\u0442, \u043a\u043e\u0433\u0434\u0430 \u043c\u044b \u043f\u0435\u0440\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u0438 i \u043f\u043e 50 \u043a\u0433 \u0438 j \u043f\u043e 100 \u043a\u0433 \u0438 \u043b\u043e\u0434\u043a\u0430 \u043d\u0430 \u0431\u0435\u0440\u0435\u0433\u0443 c\nd[0][0][0][0] = 1\nd[0][0][0][1] = 0\nq = deque()\nq.append([0, 0, 0])\nwhile len(q) > 0:\n    i, j, shore = q.popleft()\n    for fifty in range(c50 - i + 1 if shore == 0 else i + 1):\n        for hundreds in range(c100 - j + 1 if shore == 0 else j + 1):\n            if fifty * 50 + hundreds * 100 > k or fifty + hundreds == 0:\n                continue\n            i1 = i + fifty if shore == 0 else i - fifty\n            j1 = j + hundreds if shore == 0 else j - hundreds\n            if d[i1][j1][1 ^ shore][1] > d[i][j][shore][1] + 1:\n                d[i1][j1][1 ^ shore][1] = d[i][j][shore][1] + 1\n                d[i1][j1][1 ^ shore][0] = 0\n                q.append((i1, j1, 1 ^ shore))\n            if d[i1][j1][1 ^ shore][1] < d[i][j][shore][1] + 1:\n                continue\n            koeff = (c[c50 - i][fifty] if shore == 0 else c[i][fifty]) * (\n                c[c100 - j][hundreds] if shore == 0 else c[j][hundreds])\n            d[i1][j1][1 ^ shore][0] += d[i][j][shore][0] * koeff\n            d[i1][j1][1 ^ shore][0] %= 10 ** 9 + 7\nif d[c50][c100][1][1] == float('inf'):\n    print(-1)\n    print(0)\nelse:\n    print(d[c50][c100][1][1])\n    print(d[c50][c100][1][0])\n\n"]