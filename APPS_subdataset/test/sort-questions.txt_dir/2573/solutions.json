["import collections\nimport math\nn, k, m = [int(i) for i in input().split()]\nl = math.ceil((math.log(2*n) / math.log(2)))\np = 2 ** l\n# print(p)\nmemo = [0] * (2 * p)\nallres = [0] * (2 * p)\n\nexist = set()\nfor _i in range(m):\n    x, y = [int(i) for i in input().split()]\n    l = abs(x - k) + y\n    index = l + p\n    if (x, y) in exist:\n        exist.remove((x, y))\n        while index != 0:\n            memo[index] -= 1\n            index = index // 2\n    else:\n        exist.add((x, y))\n        while index != 0:\n            memo[index] += 1\n            index = index // 2\n    index = (l + p) // 2\n    allres[l+p] = l + memo[l + p] - 1\n    if memo[l + p] == 0:\n        allres[l+p] = 0\n    while index != 0:\n        allres[index] = max(allres[index * 2] + memo[index * 2 + 1], allres[index * 2 + 1])\n        index = index // 2\n    # print('i', _i + 1, exist, allres, memo)\n    \n    print(max(allres[1] - n, 0))\n\n\n\n\n\n"]