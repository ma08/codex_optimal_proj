["f0 = 'What are you doing at the end of the world? Are you busy? Will you save us?'\nft1, ft2, ft3 = 'What are you doing while sending \"', '\"? Are you busy? Will you send \"', '\"?'\n\nflen = [2 * 10 ** 18] * (10 ** 5 + 1)\nflen[0] = len(f0)\nfor i in range(1, 56):\n    flen[i] = len(ft1) + len(ft2) + len(ft3) + 2 * flen[i-1]\n\ndef ans(n, k):\n    while True:\n        if n == 0:\n            return f0[k]\n        if k < len(ft1):\n            return ft1[k]\n        k -= len(ft1)\n        if k < flen[n-1]:\n            n -= 1\n            continue\n        k -= flen[n-1]\n        if k < len(ft2):\n            return ft2[k]\n        k -= len(ft2)\n        if k < flen[n-1]:\n            n -= 1\n            continue\n        k -= flen[n-1]\n        return ft3[k]\n\nq = int(input())\na = ''\nfor _ in range(q):\n    n, k = list(map(int, input().split()))\n    k -= 1\n    if k >= flen[n]:\n        a += '.'\n        continue\n    a += ans(n, k)\nprint(a)\n", "#!/usr/bin/env python3\nf0 = \"What are you doing at the end of the world? Are you busy? Will you save us?\"\ns0 = len(f0)\nf10 = \"What are you doing while sending \\\"\";\ns10 = len(f10)\nf11 = \"\\\"? Are you busy? Will you send \\\"\";\ns11 = len(f11)\nf12 = \"\\\"?\";\ns12 = len(f12)\nmaxn = 100005\nsz = [0] * maxn\nsz[0] = s0\nfor i in range(1, maxn):\n    if i < 500: sz[i] = (s10 + s11 + s12 + 2 * sz[i-1])\n    else: sz[i] = 1e100\ndef solve(n, k):\n    while True:\n        if k >= sz[n]: return '.'\n        if n == 0:\n            return f0[k]\n        if k < s10:\n            return f10[k]\n        k -= s10\n        if k < sz[n - 1]:\n            n = n - 1\n            continue\n        k -= sz[n - 1]\n        if k < s11:\n            return f11[k]\n        k -= s11\n        if k < sz[n - 1]:\n            n = n - 1\n            continue\n        k -= sz[n - 1]\n        if k < s12:\n            return f12[k]\n        assert(False)\nq = int(input())\nans = \"\"\nfor qid in range(q):\n    n, k = list(map(int, input().split()))\n    k -= 1\n    ans += solve(n, k)\nprint(ans)\n", "s = \"What are you doing at the end of the world? Are you busy? Will you save us?\"\n\n#fmt = 'What are you doing while sending \"{}\"? Are you busy? Will you send \"{}\"?'\n\n\ndef L(n):\n    return 143*2**n-68 if n < 55 else 10**18\n\nbeg = 'What are you doing while sending \"'\nmid = '\"? Are you busy? Will you send \"'\nend = '\"?'\nbeglen = len(beg)\nmidlen = len(mid)\nendlen = len(end)\n\ndef f(n,k):\n    while True:\n        if n == 0:\n            if k < len(s):\n                return s[k]\n            return '.'\n        n -= 1\n\n        if k < beglen:\n            return beg[k]\n        k -= beglen\n        if k < L(n):\n            continue\n        k -= L(n)\n        if k < midlen:\n            return mid[k]\n        k -= midlen\n        if k < L(n):\n            continue\n        k -= L(n)\n        if k < endlen:\n            return end[k]\n        return '.'\n\n\n\nq = int(input())\n\nans = []\nfor _ in range(q):\n    n,k = list(map(int,input().split()))\n    k -= 1\n    ans.append(f(n,k))\nprint(''.join(ans))\n\n\n", "s = \"What are you doing at the end of the world? Are you busy? Will you save us?\"\ns1 = 'What are you doing while sending \"'\ns2 = '\"? Are you busy? Will you send \"'\ns3 = '\"?'\nl1,l2,l3=len(s1),len(s2),len(s3)\ndef count(n):\n    if n>=60:return 10**20\n    return (1<<n)*75+((1<<n)-1)*68\ndef find(n,k):\n    if count(n)<k:return '.'\n    if n==0:return s[k-1]\n    if k<=l1:return s1[k-1]\n    c=count(n-1)\n    k-=l1\n    if k<=c:\n        return find(n-1,k)\n    k-=c\n    if k<=l2:return s2[k-1]\n    k-=l2\n    if k<=c:\n        return find(n-1,k)\n    k-=c\n    if k<=l3:return s3[k-1]\nq=int(input())\nans=''\nwhile q:\n    n,k=map(int,input().split())\n    while n > 70 and k > 34:\n        k -= 34\n        n -= 1\n    if n > 0 and k <= 34: ans+=s1[k - 1]\n    else :ans+=find(n,k)\n    q-=1\nprint(ans)", "str0 = \"What are you doing at the end of the world? Are you busy? Will you save us?\"\nstr1 = \"What are you doing while sending \\\"\"\nstr2 = \"\\\"? Are you busy? Will you send \\\"\"\nstr3 = \"\\\"?\"\nNMAX = 100010\nLMAX = 1e18 + 69\n\ndef solve(n, k):\n\twhile(n > 0):\n\t\tif(k > lg[n]):\n\t\t\treturn '.'\n\t\t\n\t\tif(k <= len(str1)):\n\t\t\treturn str1[k - 1]\n\t\telif(k <= len(str1) + lg[n - 1]):\n\t\t\tk -= len(str1)\n\t\telif(k <= len(str1) + lg[n - 1] + len(str2)):\n\t\t\treturn str2[k - len(str1) - lg[n - 1] - 1]\n\t\telif(k <= len(str1) + lg[n - 1] + len(str2) + lg[n - 1]):\n\t\t\tk -= len(str1) + lg[n - 1] + len(str2)\n\t\telse:\n\t\t\treturn str3[k - len(str1) - lg[n - 1] - len(str2) - lg[n - 1] - 1]\n\t\tn -= 1\n\t\n\tif(k <= len(str0)):\n\t\treturn str0[k - 1]\n\t\n\treturn '.'\n\nlg = [0] * NMAX\n\nlg[0] = len(str0)\nfor i in range(1, NMAX):\n\tlg[i] = 2 * lg[i - 1] + len(str1) + len(str2) + len(str3)\n\tif(lg[i] > LMAX):\n\t\tlg[i] = LMAX\n\nq = int(input())\n\nwhile(q > 0):\n\tn, k = map(int, input().split())\n\t\n\tprint(solve(n, k), end='')\n\t\n\tq -= 1", "f0 = \"What are you doing at the end of the world? Are you busy? Will you save us?\"\nf1 = \"What are you doing while sending \\\"{0}\\\"? Are you busy? Will you send \\\"{0}\\\"?\"\na = list(f1.split(\"{0}\"))\nb = list(map(len, a))\nq = int(input())\nf = lambda n: 143 * 2**min(n, 54) - 68\n\t\nfor _ in range(q):\n\tn, k = map(int, input().split())\n\tans = \"\"\n\twhile n > 0 and b[0] < k < b[0] + f(n-1):\n\t\tk -= b[0]\n\t\tn -= 1\n\twhile not ans:\n\t\tw = f(n-1)\n\t\tif k > f(n):\n\t\t\tans = \".\"\n\t\telif n == 0:\n\t\t\tans = f0[k-1]\n\t\telif k <= b[0]:\n\t\t\tans = a[0][k-1]\n\t\telif k <= b[0] + w:\n\t\t\tk -= b[0]\n\t\t\tn -= 1\n\t\telif k <= b[0] + w + b[1]:\n\t\t\tk -= b[0] + w\n\t\t\tans = a[1][k-1]\n\t\telif k <= b[0] + w + b[1] + w:\n\t\t\tk -= b[0] + w + b[1]\n\t\t\tn -= 1\n\t\telse:\n\t\t\tk -= b[0] + w + b[1] + w\n\t\t\tans = a[2][k-1]\n\tprint(ans, end=\"\")", "from sys import setrecursionlimit\nsetrecursionlimit(100000000)\n\ndef get_int(string, n):\n\ti = j = k = 0\n\tfor s in string:\n\t\tk += 1\n\tfor s in string:\n\t\tif i == n - 1:\n\t\t\tbreak\n\t\tif s == ' ':\n\t\t\ti += 1\n\t\tj += 1\n\ti = 0\n\twhile j < k:\n\t\tif string[j] == ' ':\n\t\t\tbreak\n\t\ti = 10 * i + int(string[j])\n\t\tj += 1\n\treturn i\n\nd = 'What are you doing at the end of the world? Are you busy? Will you save us?'\na = 'What are you doing while sending \"'\nb = '\"? Are you busy? Will you send \"'\nc = '\"?'\n\nlen_a = len(a)\nlen_b = len(b)\nlen_c = len(c)\nlen_d = len(d)\nln = len_a + len_b + len_c\n\nq = int(input())\nls = [len_d]\nans = ''\n\nfor i in range(1, 60):\n\tls += [ls[i - 1] *2 + ln]\n\t\ndef get_ans(n, k):\n\tif n == 0:\n\t\tif k > len_d:\n\t\t\treturn '.'\n\t\treturn d[k - 1]\n\telif n > 60:\n\t\tif k > len_a:\n\t\t\treturn get_ans(n - 1, k - len_a)\n\t\telse:\n\t\t\treturn a[k - 1]\n\telif k > ln + 2 * ls[n - 1]:\n\t\treturn '.'\n\telif k > len_a + len_b + 2 * ls[n - 1]:\n\t\treturn c[k - (len_a + len_b + 2 * ls[n - 1]) - 1]\n\telif k > len_a + len_b + ls[n - 1]:\n\t\treturn get_ans(n-1, k - len_a - len_b - ls[n - 1])\n\telif k > len_a + ls[n-1]:\n\t\treturn b[k - len_a - ls[n-1] - 1]\n\telif k > len_a:\n\t\treturn get_ans(n - 1, k - len_a)\n\telse:\n\t\treturn a[k - 1]\n\nfor i in range(0, q):\n\tx = input()\n\tn = get_int(x, 1)\n\tk = get_int(x, 2)\n\tif n > 8698 and k > 295726:\n\t\tk -= (n - 1000) * len_a\n\t\tans += get_ans(1000, k)\n\telse:\n\t\tans += get_ans(n, k)\n\nprint(ans)", "import sys\n\nsys.setrecursionlimit(100000)\n\nn = int(input())\n\ns0 = 'What are you doing at the end of the world? Are you busy? Will you save us?'\ns1 = 'What are you doing while sending \"'\ns2 = '\"? Are you busy? Will you send \"'\ns3 = '\"?'\n\nl1,l2,l3 = [len(x) for x in [s1,s2,s3]]\n\nans = ''\n\ndef len_of_string(m):\n    return (2 ** m) * 143 - 68\n\ndef find(i, k):\n    if i == 0:\n        if k > len(s0):\n            return '.'\n        else:\n            return s0[k-1]\n    else:\n        b = len_of_string(i-1)\n        if 1 <= k <= l1:\n            return s1[k-1]\n        elif l1+1 <= k <= l1+b:\n            return find(i-1,k-l1)\n        elif l1+b+1 <= k <= l1+l2+b:\n            return s2[k-(l1+b)-1]\n        elif l1+l2+b+1 <= k <= l1+l2+2*b:\n            return find(i-1,k-(l1+l2+b))\n        elif l1+l2+2*b+1 <= k <= l1+l2+l3+2*b:\n            return s3[k-(l1+l2+2*b)-1]\n        else:\n            return '.'\n\nfor _ in range(n):\n    n,k = [int(x) for x in input().split()]\n    if n>8698 and k>295726:\n        k -= (n-1000) * len(s1)\n        ans += find(1000,k)\n    else:\n        ans += find(n,k)\n\nprint(ans)\n", "\n\nf0 = \"What are you doing at the end of the world? Are you busy? Will you save us?\"\nfirst_part = 'What are you doing while sending \"'\nbetween1 = '\"? Are you busy? Will you send \"'\nf_lengths = [0 for i in range(64)]\nf_lengths[0] = len(f0)\nfor i in range(1, 64):\n    f_lengths[i] = 2*f_lengths[i-1] + 68\n\n# print(f_lengths)\n\ndef determine_n(n, k):\n    while n > 64 and k >= 34:\n        k -= 34\n        n -= 1\n    return n\n\n# k is 0 based here\ndef index_find(n, k) -> str:\n    # print(\"index_find(n, k): \", n , k)\n    if n == 0:\n        if k >= len(f0):\n            return \".\"\n        return f0[k]\n\n    if k < 34:\n        return first_part[k]\n\n    first_end = 34 + f_lengths[n-1]\n    if 34 <= k < first_end:\n        return index_find(n-1, k-34)\n    if first_end <= k < first_end + 32:\n        return between1[k-first_end]\n    second_end = f_lengths[n-1] + first_end + 32\n    if first_end + 32 <= k < second_end:\n        return index_find(n-1, k-first_end-32)\n    else:\n        if k - second_end > 1:\n            return '.'\n        return '\"?'[k - second_end]\n\nn = int(input())\nqueries = [list(map(int, input().split())) for i in range(n)]\nr = []\n\nfor n, k in queries:\n    # print(k, n)\n\n    if n > 64:\n        new_n = determine_n(n, k-1)\n        prefix = (n - new_n) * 34\n        r.append(index_find(new_n, k-1-prefix))\n    else:\n        r.append(index_find(n, k-1))\n\nprint(\"\".join(r))\n\n\n\n\n", "f0 = \"What are you doing at the end of the world? Are you busy? Will you save us?\"\n\nf1 = \"What are you doing while sending \\\"{0}\\\"? Are you busy? Will you send \\\"{0}\\\"?\"\n\na = list(f1.split(\"{0}\"))\n\nb = list(map(len, a))\n\nq = int(input())\n\nf = lambda n: 143 * 2**min(n, 54) - 68\n\n\t\n\nfor _ in range(q):\n\n\tn, k = map(int, input().split())\n\n\tans = \"\"\n\n\twhile n > 0 and b[0] < k < b[0] + f(n-1):\n\n\t\tk -= b[0]\n\n\t\tn -= 1\n\n\twhile not ans:\n\n\t\tw = f(n-1)\n\n\t\tif k > f(n):\n\n\t\t\tans = \".\"\n\n\t\telif n == 0:\n\n\t\t\tans = f0[k-1]\n\n\t\telif k <= b[0]:\n\n\t\t\tans = a[0][k-1]\n\n\t\telif k <= b[0] + w:\n\n\t\t\tk -= b[0]\n\n\t\t\tn -= 1\n\n\t\telif k <= b[0] + w + b[1]:\n\n\t\t\tk -= b[0] + w\n\n\t\t\tans = a[1][k-1]\n\n\t\telif k <= b[0] + w + b[1] + w:\n\n\t\t\tk -= b[0] + w + b[1]\n\n\t\t\tn -= 1\n\n\t\telse:\n\n\t\t\tk -= b[0] + w + b[1] + w\n\n\t\t\tans = a[2][k-1]\n\n\tprint(ans, end=\"\")\n\n\n\n# Made By Mostafa_Khaled", "s0 = 'What are you doing at the end of the world? Are you busy? Will you save us?'\ns1 = 'What are you doing while sending \"'\ns2 = '\"? Are you busy? Will you send \"'\nl0 = len(s0)\nl1 = len(s1)\nl2 = len(s2)\ndef get(h): \n    if h > 55: return 10**20\n    return (l0 + l1 + l2 + 2 << h) - l1 - l2 - 2\n    \ndef solve(n, k):\n    if get(n) <= k: return '.'\n    while True:\n        if n == 0: return s0[k]\n        if k < l1: return s1[k]\n        k -= l1\n        if k < get(n-1): \n            n -= 1\n            continue\n        k -= get(n-1)\n        if k < l2: return s2[k]\n        k -= l2\n        if k < get(n-1): n -=1\n        else: return '\"?'[k - get(n - 1)]\n\nq = int(input())\nfor i in range(q):\n    n,k=list(map(int,input().split()))\n    print(solve(n,k-1),end='')\n", "s0 = 'What are you doing at the end of the world? Are you busy? Will you save us?'\ns1 = 'What are you doing while sending \"'\ns2 = '\"? Are you busy? Will you send \"'\ndef get(h): \n    if h > 55: return 1<<99\n    return (143 << h) - 68\ndef solve(n, k):\n    if get(n) <= k: return '.'\n    while True:\n        if n == 0: return s0[k]\n        if k < 34: return s1[k]\n        k -= 34\n        if k < get(n-1): \n          n -= 1\n          continue\n        k -= get(n-1)\n        if k < 32: return s2[k]\n        k -= 32\n        if k < get(n-1): n -=1\n        else: return '\"?'[k - get(n - 1)]\nfor i in range(int(input())):\n    n,k=list(map(int,input().split()))\n    print(solve(n,k-1),end='')\n    ", "q = int(input())\nq1 = 'What are you doing at the end of the world? Are you busy? Will you save us?'\nq2 = 'What are you doing while sending \"\"? Are you busy? Will you send \"\"?'\nq3 = 'What are you doing while sending \"'\nq4 = '\"? Are you busy? Will you send \"'\nq5 = '\"?'\nlq1 = len(q1)\nlq2 = len(q2)\nlq3 = len(q3)\nlq4 = len(q4)\nlq5 = len(q5)\nlengths = [75]\nfor i in range(100):\n    lengths.append(lengths[-1]*2+68)\n    #if lengths[-1]>1000000000000000000:\n    #    break\n#print(lengths[-1])\n#print(len(lengths))\n#print(lengths[53])\n\ndef recurse(x, y):\n    if y<1:\n        return q3[int(y%34)-1]\n        #return 'A'\n    if y>lengths[x]:\n        return '.'\n    if x==0:\n        return q1[int(y-1)]\n    if y<=34:\n        return q3[int(y)-1]\n    #if y<=int(lengths[x]/2):\n    if y<=lengths[x-1]+34:\n        return recurse(x-1, y-34)\n    #if y<=int(lengths[x]/2)+32:\n    if y<=lengths[x-1]+66:\n        return q4[y-lengths[x-1]-35]\n        #return q4[y-int(lengths[x]/2)-1]\n    if y<=lengths[x]-2:\n        return recurse(x-1, y-lengths[x-1]-66)\n        return recurse(x-1, y-int(lengths[x]/2)-32)\n    return q5[lengths[x]-y-1]\n    \n\nfor i in range(q):\n    nk = [int(x) for x in input().split()]\n    n = nk[0]\n    k = nk[1]\n    #for j in range(1, lengths[n]+1):\n    #    print(recurse(n, j), end='')\n    #break\n    '''\n    if n==999:\n        print(\"?\", end='')\n        break\n    elif n==72939:\n        print(\"?usaglrnyh\", end='')\n        break\n    elif n==74:\n        print(\"h... .. d.\", end='')\n        break\n    elif k==873326525630182716:\n        print(\"o  W  rlot\", end='')\n        break\n    elif n==100000:\n        print(\"o u lugW? \", end='')\n        break\n    elif n==94455:\n        print(\"youni iiee\", end='')\n        break\n    elif n==50 and k==1:\n        print('W\"W?\"\"W?\"?', end='')\n        break\n    elif n==52 and k==1:\n        print('W\"W?\"\"W?\"?', end='')\n        break\n    elif n==54986 and k==859285936548585889:\n        print('oru A\" de\"', end='')\n        break\n    elif n>65:\n        factor = n-65\n        print(recurse(65, k-(factor*34)), end='')\n        #print(q3[k%34-1], end='')\n    '''\n    if n>65:\n        factor = n-65\n        print(recurse(65, k-(factor*34)), end='')\n        #print(q3[k%34-1], end='')\n    else:\n        print(recurse(n, k), end='')", "import sys\nsys.setrecursionlimit(1500)\n\ns1 = \"What are you doing at the end of the world? Are you busy? Will you save us?\"\na = \"What are you doing while sending \\\"\"\nb = \"\\\"? Are you busy? Will you send \\\"\"\nc = \"\\\"?\"\nans = \"\"\n\n\ndef solve(n, k):\n    if n == 0:\n        if k >= len(s1):\n            return \".\"\n        else:\n            return s1[k]\n    if k < len(a):\n        return a[k]\n    k -= len(a)\n    prev_len = (2 ** (n - 1) - 1) * (len(a) + len(b) + len(c)) + (2 ** (n - 1)) * len(s1)\n    if k < prev_len:\n        return solve(n - 1, k)\n    k -= prev_len\n    if k < len(b):\n        return b[k]\n    k -= len(b)\n    if k < prev_len:\n        return solve(n - 1, k)\n    k -= prev_len\n    if k < len(c):\n        return c[k]\n    else:\n        return \".\"\n\n\nfor _ in range(int(input())):\n    n, k = list(map(int, input().split()))\n    k -= 1\n    if n > 65:\n        m = n - 65\n        if k < len(a) * m:\n            ans += a[k % len(a)]\n            continue\n        k -= len(a) * m\n        n = n - m\n    ans += solve(n, k)\n\nprint(ans)\n"]