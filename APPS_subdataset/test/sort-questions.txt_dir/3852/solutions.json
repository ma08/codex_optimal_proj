["N = int(input())\nA = list(map(int,input().split()))\nif min(A) >= 0:\n  Flag = True\nelif max(A) <= 0:\n  Flag = False\nelse:\n  p_max = max(A)\n  m_max = min(A)\n  if abs(p_max) >= abs(m_max):\n    Flag = True\n  else:\n    Flag = False\nif Flag:\n  MAX = max(A)\n  for i,v in enumerate(A):\n    if v == MAX:\n      MAX_loc = i\n      break\n  ans = []; t = 0\n  for i in range(N-1):\n    if A[i+1] >= A[i]:\n      continue\n    A[i+1] += 2*MAX\n    ans.append([MAX_loc+1,i+1+1])\n    ans.append([MAX_loc+1,i+1+1])\n    t += 2\n    MAX_loc = i+1\n    MAX = A[i+1]\n\nelse:\n  MIN = min(A)\n  for i, v in enumerate(A):\n    if v == MIN:\n      MIN_loc = i\n      break\n  ans = []; t = 0\n  for i in range(N-1):\n    if A[N-1-i] >= A[N-2-i]:\n      continue\n    A[N-2-i] += 2*MIN\n    ans.append([MIN_loc+1,N-2-i+1])\n    ans.append([MIN_loc+1,N-2-i+1])\n    t += 2\n    MIN_loc = N-2-i\n    MIN = A[N-2-i]\nprint(t)\nfor x in ans:\n  print((*x))\n#print(ans,t,A)    \n", "# coding:UTF-8\nimport sys\n\nMOD = 10 ** 9 + 7\nINF = float('inf')\n\nN = int(input())    # \u6570\u5b57\na = list(map(int, input().split()))     # \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u9023\u7d9a\u6570\u5b57\na_res = [0] * N\n\nm_value = 0\nm_pos = -1\n\nfor i in range(N):\n    if abs(a[i]) > abs(m_value):\n        m_value = a[i]\n        m_pos = i\n\nres = []\nif m_pos == -1:\n    print(0)\n    return\n\nif m_value > 0:\n    v = a[0]\n    for i in range(N):\n        if a[i] >= v:\n            v = a[i]\n            a_res[i] = a[i]\n        else:\n            a_tmp = a[i]\n            a_tmp += m_value\n            res.append([m_pos, i])\n            if a_tmp < v:\n                a_tmp += m_value\n                res.append([m_pos, i])\n            a_res[i] = a_tmp\n            v = a_tmp\n            if a_tmp > m_value:\n                m_value = a_tmp\n                m_pos = i\nelse:\n    v = a[-1]\n    for i in reversed(range(N)):\n        if a[i] <= v:\n            v = a[i]\n            a_res[i] = a[i]\n        else:\n            a_tmp = a[i]\n            a_tmp += m_value\n            res.append([m_pos, i])\n            if a_tmp > v:\n                a_tmp += m_value\n                res.append([m_pos, i])\n            a_res[i] = a_tmp\n            v = a_tmp\n            if a_tmp < m_value:\n                m_value = a_tmp\n                m_pos = i\n\n\nprint(\"{}\".format(len(res)))\nfor i in range(len(res)):\n    print(\"{} {}\".format(res[i][0]+1, res[i][1]+1))", "N = int(input())\nZ = list(map(int,input().split()))\nA = []\nfor i in range(N):\n  A.append([Z[i],i])\nMIN = min(A)\nMAX = max(A)\n#print(A,MAX,MIN)\n#print(MIN,MAX)\nans = []\nnum = 0\nif abs(MIN[0]) > abs(MAX[0]):\n  Flag = False\n  minloc = MIN[1]\n  for i in range(N):\n    #print(minloc+1,i+1) #1index\u306b\u3057\u3066\u51fa\u529b\n    ans.append((minloc+1,i+1))\n    num += 1\n    A[i][0] += MIN[0]\nelse:\n  Flag = True\n  maxloc = MAX[1]\n  for i in range(N):\n    #print(maxloc+1,i+1)\n    ans.append((maxloc+1,i+1))\n    num +=1\n    A[i][0] += MAX[0]\n\nfor i in range(N-1):\n  if Flag == True:\n    ans.append((i+1,i+2))\n  else:\n    ans.append((N-i,N-1-i))\n  num+=1\nprint(num)\nfor i in range(len(ans)):\n  print((*ans[i]))\n\n", "def main():\n    MAX_ = 10 ** 6\n\n    N = int(input())\n    A = list(map(int, input().split()))\n\n    mi = MAX_\n    mii = -1\n\n    ma = -MAX_\n    mai = -1\n\n    for i, x in enumerate(A):\n        if mi > x:\n            mi = x\n            mii = i + 1\n        if ma < x:\n            ma = x\n            mai = i + 1\n\n    if mi >= 0:\n        print((N - 1))\n        for i in range(1, N):\n            print((i, i + 1))\n        return\n\n    if ma <= 0:\n        print((N - 1))\n        for i in range(N - 1, 0, -1):\n            print((i + 1, i))\n        return\n\n    print(((N - 1) * 2))\n    if ma + mi >= 0:\n        for i in range(1, N + 1):\n            if i == mai: continue\n            print((mai, i))\n        for i in range(1, N):\n            print((i, i + 1))\n        return\n    else:\n        for i in range(1, N + 1):\n            if i == mii: continue\n            print((mii, i))\n        for i in range(N - 1, 0, -1):\n            print((i + 1, i))\n        return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math\n#import numpy as np\nimport queue\nfrom collections import deque,defaultdict\nimport heapq as hpq\nfrom sys import stdin,setrecursionlimit\n#from scipy.sparse.csgraph import dijkstra\n#from scipy.sparse import csr_matrix\nipt = stdin.readline\nsetrecursionlimit(10**7)\n\ndef main():\n    n = int(ipt())\n    a = [int(i) for i in ipt().split()]\n    ma = max(a)\n    mi = min(a)\n    if mi*ma < 0:\n        print((2*(n-1)))\n        if abs(ma) > abs(mi):\n            mk = a.index(ma)\n            for i in range(n):\n                if i == mk:\n                    continue\n                print((mk+1,i+1))\n                a[i] += ma\n        else:\n            mk = a.index(mi)\n            for i in range(n):\n                if i == mk:\n                    continue\n                print((mk+1,i+1))\n                a[i] += mi\n    else:\n        print((n-1))\n    ma = max(a)\n    mi = min(a)\n    if ma <= 0:\n        for i in range(n-1):\n            print((n-i,n-i-1))\n    else:\n        for i in range(n-1):\n            print((i+1,i+2))\n\n\n    return\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\n#import numpy as np\n\nsr = lambda: sys.stdin.readline().rstrip()\nir = lambda: int(sr())\nlr = lambda: list(map(int, sr().split()))\n\n#\u6700\u5c0f\u5024\u3068\u6700\u5927\u5024\u306e\u7d76\u5bfe\u5024\u304c\u3069\u3061\u3089\u304c\u5927\u304d\u3044\u304b\nN = ir()\nA = lr()\nif abs(max(A)) >= abs(min(A)):\n    i = A.index(max(A))\n    print((2*(N-1)))\n    print((i+1, 2))\n    print((i+1, 2))\n    for i in range(2, N):\n        print((i, i+1))\n        print((i, i+1))\nelse:\n    i = A.index(min(A))\n    print((2*(N-1)))\n    print((i+1, N-1))\n    print((i+1, N-1))\n    for i in range(2, N):\n        print((N-i+1, N-i))\n        print((N-i+1, N-i))\n\n# 50\n", "N = int(input())\nA = list(map(int,input().split()))\nmaxA = max(A)\nminA = min(A)\n\nif minA >=0 or 2*abs(maxA)>abs(minA):\n  maxi = A.index(maxA)\n  print((2*N-1))\n  print((maxi+1,maxi+1))\n\n  for i in range(N):\n    if i == maxi:continue\n    print((maxi+1,i+1))\n  \n  for i in range(N-1):\n    print((i+1,i+2))\n\nelse:\n  mini = A.index(minA)\n  print((2*N-1))\n  print((mini+1,mini+1))\n  for i in range(N):\n    if i == mini: continue\n    print((mini+1, i+1))\n  \n  for i in range(N-1, 0, -1):\n    print((i+1,i))\n", "from collections import Counter,defaultdict,deque\nfrom heapq import heappop,heappush,heapify\nimport sys,bisect,math,itertools,fractions,copy\nsys.setrecursionlimit(10**8)\nmod = 10**9+7\nINF = float('inf')\ndef inp(): return int(sys.stdin.readline())\ndef inpl(): return list(map(int, sys.stdin.readline().split()))\n\nn = inp()\na = inpl()\nmx = 0\npl = None\nind = -1\nres = []\nfor i,x in enumerate(a):\n    if abs(x) > mx:\n        mx = abs(x)\n        ind = i\n        pl = True if x > 0 else False\nif mx == 0:\n    print(0)\n    return\nif not pl: mx *= -1\nfor i in range(n):\n    if i == ind: continue\n    res.append([ind+1,i+1])\n    a[i] += mx\nif pl:\n    for i in range(n-1):\n        res.append([i+1,i+2])\nelse:\n    for i in range(n-1)[::-1]:\n        res.append([i+2,i+1])\nprint(len(res))\nfor x in res:\n    print(*x)", "n=int(input())\na=list(map(int,input().split()))\n\nmax=-9999999999999999999\nmin=9999999999999999999\nfor i in a:\n    if max<i:\n        max=i\n    if min>i:\n        min=i\nmaxindex=a.index(max)+1\nminindex=a.index(min)+1\n\nans=[]\n\nif min>=0:\n    for i in range(n-1):\n        ans.append([i+1,i+2])\n\nelif max<=0:\n    for i in range(n-1):\n        ans.append([n-i,n-i-1])\n\nelif max>=abs(min):\n    for i in range(1,n+1):\n        if i!=maxindex:\n            ans.append([maxindex,i])\n    for i in range(n-1):\n        ans.append([i+1,i+2])\nelif max<abs(min):\n    for i in range(1,n+1):\n        if i!=minindex:\n            ans.append([minindex,i])\n    for i in range(n-1):\n        ans.append([n-i,n-i-1])\n\nprint(len(ans))\nfor i in ans:\n    print(*i)", "n=int(input())\nA=[int(i) for i in input().split()]\n\nmode=0\ncnt=0\n\nans=[]\n\ndef do(a,b):\n    nonlocal cnt\n    cnt+=1\n    A[b]+=A[a]\n    ans.append((a+1,b+1))\n\ndef doMAX(b):\n    if b==-1:\n        b+=n\n    do(A.index(max(A)),b)\n\ndef doMIN(b):\n    if b==-1:\n        b+=n\n    do(A.index(min(A)),b)\n\nif abs(max(A))>=abs(min(A)):\n    doMAX(-1)\n    mode=0\nelif abs(max(A))<abs(min(A)):\n    doMIN(0)\n    mode=1\nelse:\n    doMAX(-1)\n    mode=0\n\nif mode==0:\n    old=-10**30\n    for i in range(n-1):\n        if A[i]>=old:\n            old=A[i]\n            continue\n        while A[i]+A[-1]<old:\n            doMAX(-1)\n        doMAX(i)\n        old=A[i]\n    while A[-1]<old:\n        doMAX(-1)\n    #print(A,cnt)\nelif mode==1:\n    old=10**30\n    for i in range(n-1,0,-1):\n        if A[i]<=old:\n            old=A[i]\n            continue\n        while A[i]+A[0]>old:\n            doMIN(0)\n        doMIN(i)\n        old=A[i]\n    while A[0]>old:\n        doMIN(0)\n    #print(A,cnt)\nelse:\n    pass\n#print(A,cnt)\nprint(cnt)\nfor ele in ans:\n    print((ele[0],ele[1]))\n", "n = int(input())\na = list(map(int, input().split()))\n\nmaxi = max(list(range(n)), key=lambda x: a[x])\nmaxa = a[maxi]\nmini = min(list(range(n)), key=lambda x: a[x])\nmina = a[mini]\nout = []\nif maxa > -mina:\n    for i in range(1, n):\n        while a[i] < a[i-1]:\n            out.append((maxi+1, i+1))\n            a[i] = a[i] + maxa\n        if a[i] > maxa:\n            maxa = a[i]\n            maxi = i\nelse:\n    for i in range(n-2, -1, -1):\n        while a[i+1] < a[i]:\n            out.append((mini+1, i+1))\n            a[i] = a[i] + mina\n        if a[i] < mina:\n            mina = a[i]\n            mini = i\n\nprint((len(out)))\nfor o in out:\n    print((o[0], o[1]))\n", "\"\"\"\nx\u3068y\u304c\u540c\u3058\u3067\u3082\u3088\u3044\u3053\u3068\u306b\u6ce8\u610f\u3002\n\u305d\u308c\u305e\u308c\u306b\u81ea\u5206\u4ee5\u5916\u306e\u6570\u3092\u5168\u90e8\u8db3\u3057\u305f\u3089\u3001\u5168\u90e8\u540c\u3058\u6570\u306b\u306a\u308b\u306a\u3002\u305d\u308c\u3082\u4e00\u3064\u306e\u6b63\u89e3\u304b\uff1f\n\u307e\u305aA1\u306b\u3001O(N-1)\u56de\u3067\u81ea\u5206\u4ee5\u5916\u306e\u6570\u3092\u5168\u90e8\u8db3\u3059\u3002\n\u6b21\u306b\u3001A2\u306b+A1\u306e2\u56de\u3067\u540c\u69d8\u306b\u540c\u3058\u6570\u306b\u3059\u308b\u3002\u3063\u3066\u3084\u308b\u3068\u5168\u4f53\u3067O(2N-2+N-1)=O(3N-3)\u304b\u304b\u308b\u306a\u3002\n\n\u540c\u3058\u6570\u306b\u3059\u308b\u306e\u306f\u30cf\u30fc\u30c9\u30eb\u9ad8\u304f\u3066\u3082\u3001\u6607\u9806\u306a\u3089\n\u4e00\u756a\u5de6\u304b\u3089\u6607\u9806\u306b\u76f4\u3057\u3066\u3044\u304f\u3002\n\n\u5168\u90e80\u4ee5\u4e0a\u306b\u3059\u308b\u304b\u3001\u5168\u90e80\u4ee5\u4e0b\u306b\u3059\u308b\u304b\u3057\u305f\u3044\u3002\n\u5168\u90e8\u6b63\u306b\u3057\u305f\u3089\u5de6\u304b\u3089\u7d2f\u7a4d\u548c\u3002\n\u5168\u90e8\u8ca0\u306b\u3057\u305f\u3089\u53f3\u304b\u3089\u7d2f\u7a4d\u548c\u3092\u53d6\u308c\u3070\u6b63\u89e3\u306b\u306b\u306a\u308b\u3002\n\n\u305d\u306e\u305f\u3081\u306b\u306f\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u304c\u5fc5\u8981\u3002\n\u521d\u671f\u72b6\u614b\u3067\u6700\u5927\u5024\u3068\u6700\u5c0f\u5024\u3092\u63a2\u3059\u3002\n\u6700\u5927\u5024\u3082\u6700\u5c0f\u5024\u30820\u4ee5\u4e0a\u3042\u308b\u3044\u306f\u3001\u6700\u5927\u5024\u3082\u6700\u5c0f\u5024\u30820\u4ee5\u4e0b\u306a\u3089\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u4e0d\u8981\u3002\n\u6700\u5927\u5024\u304c0\u4ee5\u4e0a\u3001\u6700\u5c0f\u5024\u304c\u8ca0\u306e\u5024\u306e\u6642\u306f\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u304c\u5fc5\u8981\u3002\nabs(\u6700\u5927\u5024) >= abs(\u6700\u5c0f\u5024)\u306a\u3089\u5168\u90e8\u306b\u6700\u5927\u5024\u3092\u52a0\u3048\u308b\u3002\nabs(\u6700\u5927\u5024) < abs(\u6700\u5c0f\u5024)\u306a\u3089\u5168\u90e8\u306b\u6700\u5c0f\u5024\u3092\u52a0\u3048\u308b\u3002\n\n\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u6570\u5217\u3092\u6b63\u306e\u5024\u304b\u8ca0\u306e\u5024\u3069\u3061\u3089\u304b\u306b\u305d\u308d\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\"\"\"\nN = int(input())\nA = list(map(int,input().split()))\nMAX = max(A)\nMIN = min(A)\nMAXidx = A.index(MAX)+1\nMINidx = A.index(MIN)+1\n\ndef positiveOpe():\n    for i in range(1,N):\n        print((i,i+1))\n\ndef negativeOpe():\n    for i in range(N,1,-1):\n        print((i,i-1))\n\nif MIN >= 0:\n    print((N-1))\n    positiveOpe()\nelif MAX <= 0:\n    print((N-1))\n    negativeOpe()\nelif abs(MAX) >= abs(MIN):\n    print((N-1+N))\n    for i in range(1,N+1):\n        print((MAXidx,i))\n    positiveOpe()\nelse:\n    print((N-1+N))\n    for i in range(1,N+1):\n        print((MINidx,i))\n    negativeOpe()\n", "import sys\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\nin_n = lambda: int(readline())\nin_nn = lambda: list(map(int, readline().split()))\nin_s = lambda: readline().rstrip().decode('utf-8')\nin_nl = lambda: list(map(int, readline().split()))\nin_nl2 = lambda H: [in_nl() for _ in range(H)]\nin_map = lambda: [s == ord('.') for s in readline() if s != ord('\\n')]\nin_map2 = lambda H: [in_map() for _ in range(H)]\nin_all = lambda: list(map(int, read().split()))\n\n\ndef main():\n\n    N = in_n()\n    A = in_nl()\n\n    ans = []\n    if abs(min(A)) < abs(max(A)):\n        ma = max(A)\n        ind = A.index(ma)\n        for i in range(N):\n            if i != ind:\n                ans.append((ind + 1, i + 1))\n                A[i] += A[ind]\n    else:\n        ma = min(A)\n        ind = A.index(ma)\n        for i in range(N):\n            if i != ind:\n                ans.append((ind + 1, i + 1))\n                A[i] += A[ind]\n\n    if min(A) >= 0:\n        for i in range(N - 1):\n            if A[i] > A[i + 1]:\n                max_a = max(A)\n                ind = A.index(max_a)\n                A[i + 1] += max_a\n                ans.append((ind + 1, i + 2))\n    else:\n        for i in range(N - 1, 0, -1):\n            if A[i - 1] > A[i]:\n                min_a = min(A)\n                ind = A.index(min_a)\n                A[i - 1] += min_a\n                ans.append((ind + 1, i))\n\n    print((len(ans)))\n    for x, y in ans:\n        print((x, y))\n\n    # print(A)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\nA = list(map(int,input().split()))\namax = 0\nind = -1\nfor i in range(N):\n    if abs(A[i])>amax:\n        amax = abs(A[i])\n        ind = i\nif amax==0:\n    print(0)\nelse:\n    m = 2*N-2\n    B = []\n    if A[ind]>=0:\n        for i in range(N):\n            if i!=ind:\n                B.append((ind+1,i+1))\n        for i in range(N-1):\n            B.append((i+1,i+2))\n    else:\n        for i in range(N):\n            if i!=ind:\n                B.append((ind+1,i+1))\n        for i in range(N,1,-1):\n            B.append((i,i-1))\n    print(m)\n    for i in range(m):\n        print(B[i][0],B[i][1])", "N = int(input())\nA = list(map(int, input().split()))\nmi, ma = min(A), max(A)\nprint(2*N)\nif abs(mi)<=ma:\n    k = A.index(ma)\n    print(k+1,1)\n    print(k+1,1)\n    for i in range(N-1):\n        print(i+1,i+2)\n        print(i+1,i+2)\nelse:\n    k = A.index(mi)\n    print(k+1,N)\n    print(k+1,N)\n    for i in reversed(range(N-1)):\n        print(i+2,i+1)\n        print(i+2,i+1)", "n = int(input())\nb = list(map(int, input().split()))\n\na = sorted(b)\n\na.sort()\n\nmax_i = 0\nmin_i = 0\nmaxv = -1<<60\nminv = 1<<60\nfor i in range(n):\n    if maxv < b[i]:\n        maxv = b[i]\n        max_i = i\n    if minv > b[i]:\n        minv = b[i]\n        min_i = i\n\nif (a[0] >= 0):\n    print((n-1))\n    for i in range(n-1):\n        print((i+1,i+2))\nelif (a[-1] <= 0):\n    print((n-1))\n    for i in reversed(list(range(n-1))):\n        print((i+2,i+1))\nelif (abs(a[0]) < abs(a[-1])):\n    print((2*n-2))\n    for i in range(n):\n        if max_i == i:continue;\n        print((max_i+1, i+1))\n    for i in range(n-1):\n        print((i+1,i+2))\nelse:\n    print((2*n-2))\n    for i in range(n):\n        if min_i == i:continue;\n        print((min_i+1, i+1))\n    for i in reversed(list(range(n-1))):\n        print((i+2,i+1))\n", "N = int(input())\na = list(map(int, input().split()))\n\nmax1 = max(a)\nmin1 = min(a)\n\nif min1 >= 0:\n    print(N-1)\n    for i in range(N-1):\n        print(i+1, i+2)\nelif max1 <= 0:\n    print(N-1)\n    for i in range(N-1):\n        print(N-i, N-i-1)\nelse:\n    if -min1 < max1:\n        t = a.index(max1) + 1\n        print(2*N - 1)\n        for i in range(N):\n            print(t, i+1)\n        for i in range(N-1):\n            print(i+1, i+2)\n    else:\n        t = a.index(min1) + 1\n        print(2*N - 1)\n        for i in range(N):\n            print(t, i+1)\n        for i in range(N-1):\n            print(N-i, N-i-1)", "n = int(input())\na = list(map(int,input().split()))\ns = max(a)\nsx = a.index(s)\nt = min(a)\ntx = a.index(t)\nif t >= 0:\n    print(n-1)\n    for i in range(n-1):\n        print(str(i+1) + \" \" + str(i+2))\nelif s <= 0:\n    print(n-1)\n    for i in reversed(range(n-1)):\n        print(str(i+2) + \" \" + str(i+1))\nelse:\n    print(2*n-1)\n    if abs(s) >= abs(t):\n        for i in range(n):\n            print(str(sx+1) + \" \" + str(i+1))\n        for i in range(n-1):\n            print(str(i+1) + \" \" + str(i+2))\n    elif abs(s) < abs(t):\n        for i in range(n):\n            print(str(tx+1) + \" \" + str(i+1))\n        for i in reversed(range(n-1)):\n            print(str(i+2) + \" \" + str(i+1))", "n=int(input())\na=list(map(int,input().split()))\nif min(a)>=0:\n    print((n-1))\n    for i in range(1,n):\n        print((i,i+1))\nelif max(a)<0:\n    print((n-1))\n    for i in range(1,n)[::-1]:\n        print((i+1,i))\nelse:\n    m=min(a)\n    M=max(a)\n    if abs(M)>=abs(m):\n        idx=a.index(M)\n        cnt=0\n        print((2*n-2))\n        for i in range(2):\n            print((idx+1,2))\n        for i in range(2,n):\n            print((i,i+1))\n            print((i,i+1))\n    else:\n        idx=a.index(m)\n        print((2*n-2))\n        for i in range(2):\n            print((idx+1,n-1))\n        for i in range(2,n)[::-1]:\n            print((i,i-1))\n            print((i,i-1))\n", "def main():\n    import sys\n    import numpy as np\n    ikimasu = sys.stdin.buffer.readline\n    ini = lambda: int(ins())\n    ina = lambda: list(map(int, ikimasu().split()))\n    ins = lambda: ikimasu().strip()\n    \n    n = ini()\n    tmp = ina()\n    num,index = 0,0\n    for i in range(n):\n        if(abs(tmp[i])>num):\n            num,index = abs(tmp[i]),i\n    print((2*n-2))\n    if(tmp[index]<=0):\n        for i in range(n):\n            if(i!=index):\n                print((index+1,i+1))\n        for i in range(n,1,-1):\n            print((i,i-1))\n    else:\n        for i in range(n):\n            if(i!=index):\n                print((index+1,i+1))\n        for i in range(1,n):\n            print((i,i+1))\n\n\n        \n        \n        \n\n\n    \n        \n\n\n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\nA = [int(i) for i in input().split()]\n\nif min(A) >= 0:\n    print((N-1))\n    for i in range(N-1):\n        print((i+1, i+2))\nelif max(A) < 0:\n    print((N-1))\n    for i in range(N-1):\n        print((N-i, N-1-i))\nelse:\n    if max(A) >= abs(min(A)):\n        print((2*N-1))\n        for i in range(N):\n            print((A.index(max(A))+1, i+1))\n        for i in range(N-1):\n            print((i+1, i+2))\n    else:\n        print((2*N-1))\n        for i in range(N):\n            print((A.index(min(A))+1, i+1))\n        for i in range(N-1):\n            print((N-i, N-1-i))\n", "#\n# \u3000\u3000  \u22c0_\u22c0\u3000 \n#\u3000\u3000  (\uff65\u03c9\uff65)  \n# .\uff0f \uff35 \u223d \uff35\uff3c\n#  \u2502\uff0a\u3000\u5408\u3000\uff0a\u2502\n#  \u2502\uff0a\u3000\u683c\u3000\uff0a\u2502 \n#  \u2502\uff0a\u3000\u7948\u3000\uff0a\u2502 \n#  \u2502\uff0a\u3000\u9858\u3000\uff0a\u2502 \n#  \u2502\uff0a\u3000\u3000\u3000\uff0a\u2502 \n#      \uffe3\n#\nimport sys\nsys.setrecursionlimit(10**6)\ninput=sys.stdin.readline\nfrom math import floor,sqrt,factorial,hypot,log #log2\u306a\u3044\uff59\uff50\nfrom heapq import heappop, heappush, heappushpop\nfrom collections import Counter,defaultdict,deque\nfrom itertools import accumulate,permutations,combinations,product,combinations_with_replacement\nfrom bisect import bisect_left,bisect_right\nfrom copy import deepcopy\nfrom fractions import gcd\nfrom random import randint\ndef ceil(a,b): return (a+b-1)//b\ninf=float('inf')\nmod = 10**9+7\ndef pprint(*A): \n    for a in A:     print(*a,sep='\\n')\ndef INT_(n): return int(n)-1\ndef MI(): return map(int,input().split())\ndef MF(): return map(float, input().split())\ndef MI_(): return map(INT_,input().split())\ndef LI(): return list(MI())\ndef LI_(): return [int(x) - 1 for x in input().split()]\ndef LF(): return list(MF())\ndef LIN(n:int): return [I() for _ in range(n)]\ndef LLIN(n: int): return [LI() for _ in range(n)]\ndef LLIN_(n: int): return [LI_() for _ in range(n)]\ndef LLI(): return [list(map(int, l.split() )) for l in input()]\ndef I(): return int(input())\ndef F(): return float(input())\ndef ST(): return input().replace('\\n', '')\ndef main():\n    N = I()\n    A = LI()\n    MAX = max(A)\n    MIN = min(A)\n    print(2*N-1)\n    if abs(MAX)<abs(MIN):\n        #\u5168\u90e8\u8ca0\u306b\u3059\u308b\n        min_idx = A.index(MIN) + 1\n        for i in range(1,N+1):\n            print(min_idx, i)\n        #\u7d2f\u7a4d\u548c\n        for i in range(2,N+1)[::-1]:\n            print(i,i-1)\n    else:\n        #\u5168\u90e8\u975e\u8ca0\u306b\u3059\u308b\n        max_idx = A.index(MAX) + 1\n        for i in range(1,N+1):\n            print(max_idx, i)\n        #\u7d2f\u7a4d\u548c\n        for i in range(1,N):\n            print(i,i+1)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\n\na = [int(x) for x in input().split()]\n\nma = max(a)\nmi = min(a)\n\nif(ma*mi < 0):\n    print((2*n-1))\n    if ma > -1*mi:\n        for i in range(n):\n            print((a.index(ma)+1, i+1))\n        for i in range(n-1):\n            print((i+1, i+2))\n    else:\n        for i in range(n):\n            print((a.index(mi)+1, i+1))\n        for i in range(n-1):\n            print((n-i, n-i-1))\nelse:\n    print((n-1))\n    if(ma > 0):\n        for i in range(n-1):\n            print((i+1, i+2))\n    else:\n        for i in range(n-1):\n            print((n-i, n-i-1))\n", "N = int(input())\nA = list(map(int, input().split()))\n\nans = []\nmx = max(A)\nmi = min(A)\n\nif mx * mi < 0:\n    if abs(mi) > abs(mx):\n        x = A.index(mi)\n        for y in range(N):\n            if y == x:\n                continue\n            A[y] += mi\n            ans.append((x, y))\n    else:\n        x = A.index(mx)\n        for y in range(N):\n            if x == y:\n                continue\n            A[y] += mx\n            ans.append((x, y))\n\nfor i in range(N - 1)[::(-1)**(min(A) < 0)]:\n    l, r = A[i], A[i + 1]\n\n    if l > r:\n        if r >= 0:\n            A[i + 1] += l\n            ans.append((i, i + 1))\n        elif l <= 0:\n            A[i] += r\n            ans.append((i + 1, i))\n\nprint((len(ans)))\nfor x, y in ans:\n    print((x + 1, y + 1))\n\nif list(sorted(A)) != A:\n    print(A)\n    1 / 0\n", "n = int(input())\nalst = list(map(int, input().split()))\nmax_ = max(alst)\nmin_ = min(alst)\nmax_ind = alst.index(max_)\nmin_ind = alst.index(min_)\nprint(2 * n - 1)\nif abs(max_) > abs(min_):\n    for i in range(n):\n        print(max_ind + 1, i + 1)\n    for i in range(n - 1):\n        print(i + 1, i + 2)\nelse:\n    for i in range(n):\n        print(min_ind + 1, i + 1)\n    for i in range(n, 1, -1):\n        print(i, i - 1)", "import sys\nreadline = sys.stdin.readline\n\nN = int(readline())\nA = list(map(int,readline().split()))\n\n# \u6700\u3082\u7d76\u5bfe\u5024\u306e\u5927\u304d\u3044\u6570\u3092\u3001\u305d\u308c\u304c\u6b63\u306e\u6570\u306a\u3089\u53f3\u304b\u3089\u3001\u8ca0\u306e\u6570\u306a\u3089\u5de6\u304b\u3089\u3001\n# \u6607\u9806\u306b\u306a\u3063\u3066\u3044\u306a\u3044\u5834\u6240\u306b\u8db3\u3057\u3066\u3044\u304f\n\n# print(A)\n\nans = []\nplusmax = 0\nminusmax = 0\nplusmax_i = -1\nminusmax_i = -1\n  \ntarget = -1\nmaxdiff = 0\nfor i in range(len(A)):\n  if A[i] < minusmax:\n    minusmax = A[i]\n    minusmax_i = i\n  if A[i] > plusmax:\n    plusmax = A[i]\n    plusmax_i = i\n# \u6700\u3082\u7d76\u5bfe\u5024\u304c\u5927\u304d\u3044\u3082\u306e\u304c\u6b63\u3067\u3042\u308c\u3070\u3001\u5de6\u304b\u3089\u9806\u306b\u8db3\u3057\u3066\u3044\u304f\n# \u8ca0\u3067\u3042\u308c\u3070\u53f3\u304b\u3089\n# \u3053\u306e\u65b9\u91dd\u306f\u9014\u4e2d\u3067\u5909\u3048\u306a\u3044\u3002\u6b63\u306a\u3089\u6700\u5f8c\u307e\u3067\u6b63\u3002\n# 2\u8981\u7d20\u306e\u5dee\u306e\u6700\u5927\u5024\u306f\u3001\u7d76\u5bfe\u5024\u306e\u6700\u5927\u304c\u305f\u3068\u3048\u30701000\u306e\u3068\u304d\u306b1000\uff5e-1000\u306e\u5dee\u306a\u306e\u3067\u3001\n# 2\u56de\u8db3\u305b\u3070\u5fc5\u305a\u5dee\u304c\u57cb\u307e\u308b\n  \nif abs(plusmax) > abs(minusmax):\n  # \u6b63\u3067\u3044\u304f\u5834\u5408\n  maxval = plusmax\n  max_i = plusmax_i\n  for i in range(1,len(A)):\n    if A[i - 1] > A[i]:\n      ans.append((max_i + 1,i + 1))\n      ans.append((max_i + 1,i + 1))\n      A[i] += 2 * maxval\n      max_i = i\n      maxval = A[i]\nelse:\n  # \u8ca0\u3067\u3044\u304f\u5834\u5408\n  minval = minusmax\n  min_i = minusmax_i\n  for i in range(len(A) - 1, 0,-1):\n    if A[i - 1] > A[i]:\n      ans.append((min_i + 1, i))\n      ans.append((min_i + 1, i))\n      A[i - 1] += 2 * minval\n      min_i = i - 1\n      minval = A[i - 1]\n        \nprint((len(ans)))\nfor a in ans:\n  print((*a))\n", "N=int(input())\nA=list(map(int, input().split()))\nif min(A)>=0:\n  print((N-1))\n  for i in range(1,N):\n    print((i,i+1))\nelif max(A)<=0:\n  print((N-1))\n  for i in range(N-1):\n    print((N-i,N-1-i))\nelse:\n  a,b=max(A),abs(min(A))\n  print(((N-1)*2))\n  if a>=b:\n    d=A.index(a)\n    for i in range(N):\n      if i!=d:\n        print((d+1,i+1))\n    for i in range(1,N):\n      print((i,i+1))\n  else:\n    d=A.index(-b)\n    for i in range(N):\n      if i!=d:\n        print((d+1,i+1))\n    for i in range(N-1):\n      print((N-i,N-1-i))\n", "import sys\nimport math\nimport collections\nimport bisect\nimport itertools\n\n# import numpy as np\n\nsys.setrecursionlimit(10 ** 7)\nINF = 10 ** 16\nMOD = 10 ** 9 + 7\n# MOD = 998244353\n\nni = lambda: int(sys.stdin.readline().rstrip())\nns = lambda: list(map(int, sys.stdin.readline().rstrip().split()))\nna = lambda: list(map(int, sys.stdin.readline().rstrip().split()))\nna1 = lambda: list([int(x) - 1 for x in sys.stdin.readline().rstrip().split()])\n\n\n# ===CODE===\n\ndef main():\n    n = ni()\n    a = na()\n\n    min_num = min(a)\n    min_num_idx = a.index(min_num)\n    max_num = max(a)\n    max_num_idx = a.index(max_num)\n    ans = []\n\n    plus_flg = abs(max_num) > abs(min_num)\n\n    if plus_flg:\n        for i in range(n - 1):\n            while a[i] > a[i + 1]:\n                a[i + 1] += max_num\n                ans.append((max_num_idx, i + 1))\n            if max_num < a[i + 1]:\n                max_num_idx = i + 1\n                max_num = a[i + 1]\n\n    else:\n        for i in range(n - 1, 0, -1):\n            while a[i - 1] > a[i]:\n                a[i - 1] += min_num\n                ans.append((min_num_idx, i - 1))\n            if min_num > a[i - 1]:\n                min_num_idx = i - 1\n                min_num = a[i - 1]\n\n    print((len(ans)))\n    for a, b in ans:\n        print((a + 1, b + 1))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\n\nN = int(sys.stdin.readline())\nA = list(map(int, sys.stdin.readline().split()))\n\n# N <= 50\nif A == sorted(A):\n    print(0)\n    return\n\nmin_a = (float(\"inf\"), -1)\nmax_a = (-float(\"inf\"), -1)\nfor i in range(N):\n    if A[i] < min_a[0]:\n        min_a = (A[i], i)\n    if A[i] > max_a[0]:\n        max_a = (A[i], i)\n\n# \u64cd\u4f5c\u5c65\u6b74\nops = []\n# \u30de\u30a4\u30ca\u30b9\u306b\u5bc4\u305b\u308b\nif abs(min_a[0]) > abs(max_a[0]):\n    for i in range(N-1, -1, -1):\n        # \u9ad8\u30052\u56de\n        while A[i] > min_a[0]:\n            A[i] += min_a[0]\n            ops.append((min_a[1]+1, i+1))\n        min_a = (A[i], i)\n        \nelse:\n    for i in range(N):\n        # \u9ad8\u30052\u56de\n        while A[i] < max_a[0]:\n            A[i] += max_a[0]\n            ops.append((max_a[1]+1, i+1))\n        max_a = (A[i], i)\n# print(A)\n\nprint(len(ops))\nfor (x, y) in ops:\n    print(x, y)", "N = int(input())\nA = list(map(int, input().split()))\nAmax = max(A)\nAmin = min(A)\n\nprint(N*2)\nif abs(Amax) > abs(Amin):\n    Amaxi = A.index(Amax)+1\n    print(Amaxi, 1)\n    print(Amaxi, 1)\n    for i in range(1, N):\n        print(i, i+1)\n        print(i, i+1)\n\nelse:\n    Amini = A.index(Amin)+1\n    print(Amini, N)\n    print(Amini, N)\n    for i in range(N, 1, -1):\n        print(i, i-1)\n        print(i, i-1)", "N = int(input())\nA = list(map(int,input().split()))\nmx = max(A)\nmxi = A.index(mx)\nmn = min(A)\nmni = A.index(mn)\n\nans = []\nif mn >= 0 or mx + mn >= 0:\n    for i in range(N):\n        if A[i] < 0:\n            ans.append((mxi, i))\n    for i in range(N-1):\n        ans.append((i, i+1))\nelse:\n    for i in range(N):\n        if A[i] > 0:\n            ans.append((mni, i))\n    for i in range(N-1,0,-1):\n        ans.append((i, i-1))\n\nprint(len(ans))\nfor a,b in ans:\n    print(a+1, b+1)", "#!python3\n\n# input\nN = int(input())\nA = list(map(int, input().split()))\n\n\ndef main():\n    mx = max(A)\n    mn = min(A)\n    idx = A.index(mn) if abs(mx) < abs(mn) else A.index(mx)\n    idx += 1\n    ans = []\n    for i in range(N):\n        ans.append((idx, i + 1))\n    \n    if A[idx - 1] > 0:\n        for i in range(1, N):\n            ans.append((i, i + 1))\n    else:\n        for i in range(N - 1, 0, -1):\n            ans.append((i + 1, i))\n    \n    n = len(ans)\n    print(n)\n    for i in range(n):\n        print((*ans[i]))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\n\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninm = lambda: map(int, sys.stdin.readline().split())\ninl = lambda: list(inm())\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print(\"\\033[33m\", *a, \"\\033[0m\", **dict(file=sys.stderr, **kw))\n\nN = ini()\nA = inl()\namax = max(A)\nimax = A.index(amax)\namin = min(A)\nimin = A.index(amin)\n\n\ndef make_positive():\n    nonlocal amax, imax\n    ans = []\n    assert amax >= 0\n    for i in range(N):\n        if i > 0 and A[i] < 0:\n            ans.append((imax, i))\n            A[i] += amax\n            assert A[i] >= 0\n    for i in range(1, N):\n        if A[i] < A[i - 1]:\n            ans.append((imax, i))\n            A[i] += amax\n            assert A[i] >= A[i - 1]\n            if A[i] > amax:\n                amax = A[i]\n                imax = i\n    assert len(ans) <= 2 * N\n    print(len(ans))\n    for x, y in ans:\n        print(x + 1, y + 1)\n\n\ndef make_negative():\n    nonlocal amin, imin\n    ans = []\n    assert amin <= 0\n    for i in range(N):\n        if i < N - 1 and A[i] > 0:\n            ans.append((imin, i))\n            A[i] += amin\n            assert A[i] <= 0\n    for i in range(N - 2, -1, -1):\n        if A[i] > A[i + 1]:\n            ans.append((imin, i))\n            A[i] += amin\n            assert A[i] <= A[i + 1]\n            if A[i] < amin:\n                amin = A[i]\n                imin = i\n    assert len(ans) <= 2 * N\n    print(len(ans))\n    for x, y in ans:\n        print(x + 1, y + 1)\n\n\ndef solve():\n    if abs(amax) > abs(amin):\n        make_positive()\n    else:\n        make_negative()\n    return\n\n\nsolve()\n", "import sys\ndef input(): return sys.stdin.readline().strip()\ndef mapint(): return map(int, input().split())\nsys.setrecursionlimit(10**9)\n\nN = int(input())\nAs = list(mapint())\n\ncommand = []\n\nplus_max = max(As)\nminus_min = min(As)\nif abs(plus_max)>=abs(minus_min):\n    maxi_idx = As.index(plus_max)\n    for i in range(N):\n        a = As[i]\n        if a<0:\n            As[i] += plus_max\n            command.append((i, maxi_idx))\n    for i in range(N-1):\n        a = As[i]\n        b = As[i+1]\n        if a>=0 and a>b:\n            command.append((i+1, i))\n            As[i+1] += As[i]\nelse:\n    mini_idx = As.index(minus_min)\n    for i in range(N):\n        a = As[i]\n        if a>0:\n            As[i] += minus_min\n            command.append((i, mini_idx))\n    for i in range(N-1, 0, -1):\n        a = As[i]\n        b = As[i-1]\n        if a<0 and b>a:\n            command.append((i-1, i))\n            As[i-1] += As[i]\nprint(len(command))\nfor x, y in command:\n    print(y+1, x+1)", "n = int(input())\nA = list(int(x) for x in input().split())\nminimum = min(A)\nmaximum = max(A)\n\nANS = []\nif abs(maximum) >= abs(minimum):  # \u3059\u3079\u3066\u3092\u30d7\u30e9\u30b9\u306b\u3057\u3066\u7d2f\u7a4d\u548c\n    index = A.index(maximum)\n    for i in range(n):\n        ANS.append((index, i))\n        # A[i] += maximum\n    for i in range(n - 1):\n        ANS.append((i, i + 1))\n        # A[i+1] += A[i]\nelse:  # \u6700\u5c0f\u5024\u304c\u30de\u30a4\u30ca\u30b9\u3067\u7d76\u5bfe\u5024\u304c\u304b\u306a\u308a\u5927\u304d\u3044 -> n\u56de\u3067\u3059\u3079\u3066\u3092\u30de\u30a4\u30ca\u30b9\u306b\u3057\u3066\u7d2f\u7a4d\u548c\n    index = A.index(minimum)\n    for i in range(n):\n        ANS.append((index, i))\n        # A[i] += minimum\n    for i in reversed(list(range(1, n))):\n        ANS.append((i, i - 1))\n        # A[i-1] += A[i]\n\nprint((len(ANS)))\nfor x, y in ANS:\n    print((x + 1, y + 1))  # 1-index\n\n# print(A)\n", "N=int(input())\nA = list(map(int,input().split()))\nmaxA = max(A)\nminA = min(A)\nflag = (abs(maxA) >= abs(minA))\ncnt =0\nman = []\nif flag:\n    idx = A.index(maxA)\n    for i in range(len(A)):\n        if i !=idx:\n            man.append([idx+1,i+1])\n    for i in range(1,len(A)):\n        man.append([i,i+1])\n\nelse:\n    idx = A.index(minA)\n    for i in range(len(A)):\n        if i !=idx:\n            man.append([idx+1,i+1])\n    for i in range(len(A),1,-1):\n        man.append([i,i-1])\nprint((len(man)))\nfor ma in man:\n    print((*ma))\n", "\nN = int(input())\nA = list(map(int, input().split()))\n\n# 1\u4f8b\u3092\u793a\u305b\u3001\u306a\u306e\u3067\u3001\u64cd\u4f5c\u3057\u306a\u3044\u3067\u826f\u3044\u5834\u5408\u3082\u64cd\u4f5c\u3059\u308b\u3053\u3068\u306b\u3059\u308b\n\np = 0\nm = 0\nfor i in range(N):\n    if A[i] >= 0:\n        p += 1\n    else:\n        m += 1\n\n\n# \u5168\u90e8\u6b63\u306a\u306e\u3067\u5de6\u304b\u3089\u7d2f\u7a4d\u548c\nans = []\nif m == 0:\n    for i in range(N-1):\n        ans.append((i+1, i+2))\n    print(len(ans))\n    for x,y in ans:\n        print(x,y)\n# \u5168\u90e8\u8ca0\u306a\u306e\u3067\u5de6\u304b\u3089\u7d2f\u7a4d\u548c\nelif p == 0:\n    for i in range(N-1, 0, -1):\n        ans.append((i+1, i))\n    print(len(ans))\n    for x,y in ans:\n        print(x,y)\nelse:\n    # \u7d76\u5bfe\u5024\u306e\u5927\u304d\u3044\u65b9\u3067\u5b9f\u65bd\n    big = -1 * float(\"inf\")\n    big_idx = 0\n    small = float(\"inf\")\n    small_idx = 0\n    for i in range(N):\n        if big < A[i]:\n            big = A[i]\n            big_idx = i\n\n        if small > A[i]:\n            small = A[i]\n            small_idx = i\n\n    # \u5168\u4f53\u3092\u6b63\u306b\u3057\u3066\u304b\u3089\u5de6\u304b\u3089\u7d2f\u7a4d\u548c\n    if abs(big) >= abs(small): \n        for i in range(N):\n            if A[i] < 0:\n                ans.append((big_idx+1, i+1))\n\n        for i in range(N-1):\n            ans.append((i+1, i+2))\n        print(len(ans))\n        for x,y in ans:\n            print(x,y)\n    # \u5168\u4f53\u3092\u8ca0\u306b\u3057\u3066\u304b\u3089\u53f3\u304b\u3089\u7d2f\u7a4d\u548c\n    else:\n        for i in range(N):\n            if A[i] > 0:\n                ans.append((small_idx+1, i+1))\n        for i in range(N-1, 0, -1):\n            ans.append((i+1, i))\n        print(len(ans))\n        for x,y in ans:\n            print(x,y)", "N, = list(map(int, input().split()))\nAs = list(map(int, input().split()))\na,b = max(As), min(As)\nai = As.index(a)\nbi = As.index(b)\nprint((N-1+N-1))\nif a > -b:\n    for i in range(N):\n        if i != ai:\n            print((ai+1, i+1))\n    for i in range(N-1):\n        print((i+1, i+2))\nelse:\n    for i in range(N):\n        if i != bi:\n            print((bi+1, i+1))\n    for i in range(N-1):\n        print((N-i, N-i-1))\n", "N = int(input())\nAs = list(map(int, input().split()))\n\npair =[(a,i) for i,a in enumerate(As)]\npair.sort()\nmin_info = pair[0]\nmax_info = pair[-1]\n# max\u3068min\u306e\u5927\u5c0f\u95a2\u4fc2\u304b\u3089\u305b\u3081\u3066\u898b\u308b\n# min\u306e\u7d76\u5bfe\u5024\u304c\u5927\u304d\u3044->\u8ca0\u3067\u69cb\u6210\n# \u305d\u308c\u4ee5\u5916 -> \u6b63\u3067\u69cb\u6210\nprint((2*N-1))\nif abs(min_info[0]) > abs(max_info[0]):\n    ind = pair[0][1]\n    for i in range(N):\n        print((ind+1, i+1))\n    for i in range(N-1,0,-1):\n        print((i+1,i))\nelse:\n    ind = pair[-1][1]\n    for i in range(N):\n        print((ind+1, i+1))\n    for i in range(1,N):\n        print((i,i+1))\n", "ma = lambda :map(int,input().split())\nlma = lambda :list(map(int,input().split()))\ntma = lambda :tuple(map(int,input().split()))\nni = lambda:int(input())\nyn = lambda fl:print(\"YES\") if fl else print(\"NO\")\nips = lambda:input().split()\nimport collections\nimport math\nimport itertools\nimport heapq as hq\nimport sys\n\n\nn = ni()\nA = lma()\nmx = 0\nans=[]\npal=1\nidx=0\nfor i in range(n):\n    if mx<abs(A[i]):\n        mx=abs(A[i])\n        pal=A[i]//mx\n        idx=i\nif pal==1:\n    for i in range(n):\n        if i==idx:continue\n        ans.append((idx+1,i+1))\n    for i in range(n-1):\n        ans.append((i+1,i+2))\nelse:\n    for i in range(n):\n        if i==idx:continue\n        ans.append((idx+1,i+1))\n    for i in range(n-1,0,-1):\n        ans.append((i+1,i))\nprint(len(ans))\nfor x,y in ans:\n    print(x,y)\n", "def getN():\n    return int(input())\ndef getNM():\n    return map(int, input().split())\ndef getList():\n    return list(map(int, input().split()))\ndef getArray(intn):\n    return [int(input()) for i in range(intn)]\ndef input():\n    return sys.stdin.readline().rstrip()\ndef rand_N(ran1, ran2):\n    return random.randint(ran1, ran2)\ndef rand_List(ran1, ran2, rantime):\n    return [random.randint(ran1, ran2) for i in range(rantime)]\ndef rand_ints_nodup(ran1, ran2, rantime):\n  ns = []\n  while len(ns) < rantime:\n    n = random.randint(ran1, ran2)\n    if not n in ns:\n      ns.append(n)\n  return sorted(ns)\n\ndef rand_query(ran1, ran2, rantime):\n  r_query = []\n  while len(r_query) < rantime:\n    n_q = rand_ints_nodup(ran1, ran2, 2)\n    if not n_q in r_query:\n      r_query.append(n_q)\n  return sorted(r_query)\n\nfrom collections import defaultdict, deque, Counter\nfrom decimal import *\nfrom heapq import heapify, heappop, heappush\nimport math\nimport random\nimport string\nfrom copy import deepcopy\nfrom itertools import combinations, permutations, product\nfrom operator import mul, itemgetter\nfrom functools import reduce\nfrom bisect import bisect_left, bisect_right\n\nimport sys\nsys.setrecursionlimit(1000000000)\nmod = 10 ** 9 + 7\ndx = [1, 0, -1, 0]\ndy = [0, 1, 0, -1]\n\n#############\n# Main Code #\n#############\n\n\"\"\"\nN <= 50\n\u5358\u8abf\u5897\u52a0\u306b\u306a\u308b\u3088\u3046\u306b\n\u3044\u3044\u65b9\u6cd5\u3092\u8003\u3048\u308b\n\n\u5168\u3066\u30d7\u30e9\u30b9\u3000\u524d\u304b\u3089\u7d2f\u7a4d\n\u5168\u3066\u30de\u30a4\u30ca\u30b9\u3000\u5f8c\u308d\u304b\u3089\u7d2f\u7a4d\n\n\u30d7\u30e9\u30b9\u3068\u30de\u30a4\u30ca\u30b9\n\u5168\u90e8\u30d7\u30e9\u30b9\u306b\u3059\u308b\u304b\u5168\u90e8\u30de\u30a4\u30ca\u30b9\u306b\u3059\u308b\u304b\n\u30d7\u30e9\u30b9\u306e\u3068\u30de\u30a4\u30ca\u30b9\u306e\u3069\u3061\u3089\u304c\u5927\u304d\u3044\u304b\n\n\u30d7\u30e9\u30b9\u306e\u304c\u5927\u304d\u3044\n\u30de\u30a4\u30ca\u30b9\u90e8\u5206\u3092\u5168\u3066\u30d7\u30e9\u30b9\u306b\u2192\u524d\u304b\u3089\u7d2f\u7a4d\n\u30de\u30a4\u30ca\u30b9\u306e\u304c\u5927\u304d\u3044\n\u30d7\u30e9\u30b9\u90e8\u5206\u3092\u5168\u3066\u30de\u30a4\u30ca\u30b9\u306b\u2192\u5f8c\u308d\u304b\u3089\u7d2f\u7a4d\ndet = [-1, 1]\nplace = [0, 0]\nfor i in range(N):\n    if A[i] > det[0]:\n        det[0] = A[i]\n        place[0] = i\n    elif A[i] < det[1]:\n        det[1] = A[i]\n        place[1] = i\n\nif abs(det[0]) >= abs(det[1]):\n    for i in range(N):\n        A[i] += det[0]\n    for i in range(1, N):\n        A[i] += A[i - 1]\nelse:\n    for i in range(N):\n        A[i] += det[1]\n    for i in range(N - 2, -1, -1):\n        A[i] += A[i + 1]\n\nprint(A)\n\"\"\"\n\nN = getN()\nA = getList()\n\ndet = [-1, 1]\nplace = [0, 0]\nfor i in range(N):\n    if A[i] > det[0]:\n        det[0] = A[i]\n        place[0] = i\n    elif A[i] < det[1]:\n        det[1] = A[i]\n        place[1] = i\n\n# x\u3092y\u306b\u8db3\u3059\nprint(2 * N - 1)\nif abs(det[0]) >= abs(det[1]):\n    for i in range(N):\n        print(place[0] + 1, i + 1)\n    for i in range(1, N):\n        print(i, i + 1)\nelse:\n    for i in range(N):\n        print(place[1] + 1, i + 1)\n    for i in range(N - 2, -1, -1):\n        print(i + 2, i + 1)", "n = int(input())\nA = list(map(int, input().split()))\nM = max(A)\nm = min(A)\nM_idx = A.index(M) + 1\nm_idx = A.index(m) + 1\nprint(2*n-1)\nif abs(M) >= abs(m):\n  for i in range(1, n+1):\n    print(M_idx, i)\n  for i in range(1, n):\n    print(i, i+1)\nelse:\n  for i in range(1, n+1):\n    print(m_idx, i)\n  for i in range(n-1, 0, -1):\n    print(i+1, i)", "n=int(input())\na=list(map(int,input().split()))\nma=max(a)\nmai=a.index(ma)\nmi=min(a)\nmii=a.index(mi)\nans=[]\nif abs(ma)>=abs(mi):\n  for i in range(n):\n    a[i]+=ma\n    ans.append((mai+1,i+1))\n  for i in range(1,n):\n    a[i]+=a[i-1]\n    ans.append((i,i+1))\nelse:\n  for i in range(n):\n    a[i]+=mi\n    ans.append((mii+1,i+1))\n  for i in range(n-2,-1,-1):\n    a[i]+=a[i+1]\n    ans.append((i+2,i+1))\nprint(len(ans))\nfor i in ans:print(*i)", "N = int(input())\na = list(map(int, input().split()))\nif abs(max(a)) >= abs(min(a)):\n    for i in range(N):\n        if a[i] == max(a):\n            num = i\n            break\n    print(2*N-1)\n    for i in range(N):\n        if num != i:\n            print(num+1, i+1)\n    print(num+1, num+1)\n    for i in range(1,N):\n        print(i, i+1)\nelse:\n    for i in range(N):\n        if a[i] == min(a):\n            num = i\n            break\n    print(2*N-1)\n    for i in range(N):\n        if num != i:\n            print(num+1, i+1)\n    print(num+1, num+1)\n    for i in range(N-1):\n        print(N-i, N-i-1)", "N = int(input())\nA = list(map(int,input().split()))\nflag = 0\nfor i in range(N):\n    if A[i]!=0:\n        flag = 1\n        break\nif flag==0:\n    print(0)\nelse:\n    pmax = 0\n    mmin = 0\n    indp = -1\n    indm = -1\n    for i in range(N):\n        if A[i]>0:\n            if A[i]>pmax:\n                pmax = A[i]\n                indp = i\n        elif A[i]<0:\n            if A[i]<mmin:\n                mmin = A[i]\n                indm = i\n    if pmax>=abs(mmin):\n        print(2*N-2)\n        for i in range(N):\n            if i!=indp:\n                print(indp+1,i+1)\n        for i in range(N-1):\n            print(i+1,i+2)\n    else:\n        print(2*N-2)\n        for i in range(N):\n            if i!=indm:\n                print(indm+1,i+1)\n        for i in range(N-1,0,-1):\n            print(i+1,i)", "\"\"\"\n\u307e\u305a\u306f\u3001\u5168\u90e8\u6b63\u306e\u6570\u306b\u3059\u308b\u304b\u3001\u8ca0\u306e\u6570\u306b\u3059\u308b\n\"\"\"\nN = int(input())\nA = list(map(int,input().split()))\nprint((2*N-1))\nif abs(max(A)) >= abs(min(A)):\n    idx = A.index(max(A))+1\n    for i in range(1,N+1):\n        print((idx,i))\n    for i in range(1,N):\n        print((i,i+1))\nelse:\n    idx = A.index(min(A))+1\n    for i in range(1,N+1):\n        print((idx,i))\n    for i in range(N,1,-1):\n        print((i,i-1))\n", "from copy import copy\nN = int(input())\nA = list(map(int,(input().split())))\n\nA.insert(0,-10000000)\nB = copy(A)\nans = []\nbns = []\n\nfor i in range(1,N):\n    if A[i] > A[i+1]:\n        if A[i] >= 0 and A[i+1] >= 0:\n            A[i+1] += A[i]\n            ans.append([i,i+1])\n        elif A[i] <= 0 and A[i+1] <= 0:\n            A[i] += A[i+1]\n            ans.append([i+1,i])\n        else:\n            if abs(A[i]) <= abs(A[i+1]):\n                A[i] += A[i+1]\n                ans.append([i+1,i])\n                A[i] += A[i+1]\n                ans.append([i+1,i])\n            else:\n                A[i+1] += A[i]\n                ans.append([i,i+1])\n                A[i+1] += A[i]\n                ans.append([i,i+1])\nfor i in range(1,N)[::-1]:\n    if A[i] > A[i+1]:\n        if A[i] >= 0 and A[i+1] >= 0:\n            A[i+1] += A[i]\n            ans.append([i,i+1])\n        elif A[i] <= 0 and A[i+1] <= 0:\n            A[i] += A[i+1]\n            ans.append([i+1,i])\n        else:\n            if abs(A[i]) <= abs(A[i+1]):\n                A[i] += A[i+1]\n                ans.append([i+1,i])\n                A[i] += A[i+1]\n                ans.append([i+1,i])\n            else:\n                A[i+1] += A[i]\n                ans.append([i,i+1])\n                A[i+1] += A[i]\n                ans.append([i,i+1])\n\nA = B\nfor i in range(1,N)[::-1]:\n    if A[i] > A[i+1]:\n        if A[i] >= 0 and A[i+1] >= 0:\n            A[i+1] += A[i]\n            bns.append([i,i+1])\n        elif A[i] <= 0 and A[i+1] <= 0:\n            A[i] += A[i+1]\n            bns.append([i+1,i])\n        else:\n            if abs(A[i]) <= abs(A[i+1]):\n                A[i] += A[i+1]\n                bns.append([i+1,i])\n                A[i] += A[i+1]\n                bns.append([i+1,i])\n            else:\n                A[i+1] += A[i]\n                bns.append([i,i+1])\n                A[i+1] += A[i]\n                bns.append([i,i+1])\nfor i in range(1,N):\n    if A[i] > A[i+1]:\n        if A[i] >= 0 and A[i+1] >= 0:\n            A[i+1] += A[i]\n            bns.append([i,i+1])\n        elif A[i] <= 0 and A[i+1] <= 0:\n            A[i] += A[i+1]\n            bns.append([i+1,i])\n        else:\n            if abs(A[i]) <= abs(A[i+1]):\n                A[i] += A[i+1]\n                bns.append([i+1,i])\n                A[i] += A[i+1]\n                bns.append([i+1,i])\n            else:\n                A[i+1] += A[i]\n                bns.append([i,i+1])\n                A[i+1] += A[i]\n                bns.append([i,i+1])\n\nM = len(ans)\nL = len(bns)\nif M <= L:\n    print(M)\n    for i in range(M):\n        print(*ans[i])\nelse:\n    print(L)\n    for i in range(L):\n        print(*bns[i])", "inpl = lambda: list(map(int,input().split()))\nN = int(input())\na = inpl()\nans = []\nc = []\nl, r = 0, N-1\nwhile l < r:\n    if a[l] <= 0:\n        c.append((0,l))\n        l += 1\n        continue\n    elif a[r] >= 0:\n        c.append((1,r))\n        r -= 1\n        continue\n    elif a[l] + a[r] <= 0:\n        c.append((0,l))\n        ans.append((r+1, l+1))\n        l += 1\n    else:\n        c.append((1,r))\n        ans.append((l+1, r+1))\n        r -= 1\n\nfor s, b in c[::-1]:\n    if s == 0:\n        ans.append((b+2, b+1))\n    else:\n        ans.append((b, b+1))\n\nprint(len(ans))\nfor x, y in ans:\n    print(x, y)", "n=int(input())\narr=list(map(int,input().split()))\narr=[[arr[i],i+1] for i in range(n)]\nmins=[10**18,0]\nmaxs=[-10**18,0]\nflag=True\nfor i in range(n):\n  if arr[i][0]<mins[0]:\n    mins=[arr[i][0],arr[i][1]]\n  if arr[i][0]>maxs[0]:\n    maxs=[arr[i][0],arr[i][1]]\ncnt=0\nans=[]\nif maxs[0]<0:\n  for i in range(n):\n    flag=False\nelif mins[0]>=0:\n  pass\nelse:\n  if abs(mins[0])>maxs[0]:\n    flag=False\n    for i in range(n):\n      if arr[i][0]>0:\n        arr[i][0]+=mins[0]\n        cnt+=1\n        ans.append([mins[1],arr[i][1]])\n  else:\n    for i in range(n):\n      if arr[i][0]<0:\n        arr[i][0]+=maxs[0]\n        cnt+=1\n        ans.append([maxs[1],arr[i][1]])\nrows=[]\ntmp=[[arr[0][0],arr[0][1]]]\nfor i in range(1,n):\n  if arr[i-1][0]<=arr[i][0]:\n    tmp.append([arr[i][0],arr[i][1]])\n  else:\n    rows.append(tmp)\n    tmp=[[arr[i][0],arr[i][1]]]\nif len(tmp)!=0:\n  rows.append(tmp)\nif flag==True:\n  for i in range(len(rows)-1):\n    if len(rows[i])==1:\n      if len(rows[i+1])==1:\n        rows[i+1][0][0]+=rows[i][0][0]\n        ans.append([rows[i][0][1],rows[i+1][0][1]])\n  for i in range(len(rows)-1):\n    if len(rows[i])==1:\n      if len(rows[i+1])==1:\n        continue\n      else:\n        for j in range(len(rows[i+1])):\n          rows[i+1][j][0]+=rows[i][0][0]\n          ans.append([rows[i][0][1],rows[i+1][j][1]])\n    else:\n      if len(rows[i+1])==1:\n        for j in range(i+1,len(rows)):\n          if len(rows[j])==1:\n            rows[j][0][0]+=rows[i][-1][0]\n            ans.append([rows[i][-1][1],rows[j][0][1]])\n          else:\n            break\n      else:\n        for j in range(len(rows[i+1])):\n          rows[i+1][j][0]+=rows[i][-1][0]\n          ans.append([rows[i][-1][1],rows[i+1][j][1]])\nelse:\n  for i in range(len(rows)-1,0,-1):\n    if len(rows[i])==1:\n      if len(rows[i-1])==1:\n        rows[i-1][0][0]+=rows[i][0][0]\n        ans.append([rows[i][0][1],rows[i-1][0][1]])\n  for i in range(len(rows)-1,0,-1):\n    if len(rows[i])==1:\n      if len(rows[i-1])==1:\n        continue\n      else:\n        for j in range(len(rows[i-1])):\n          rows[i-1][j][0]+=rows[i][0][0]\n          ans.append([rows[i][0][1],rows[i-1][j][1]])\n    else:\n      if len(rows[i-1])==1:\n        for j in range(i-1,-1,-1):\n          if len(rows[j])==1:\n            rows[j][0][0]+=rows[i][0][0]\n            ans.append([rows[i][0][1],rows[j][0][1]])\n          else:\n            break\n      else:\n        for j in range(len(rows[i-1])):\n          rows[i-1][j][0]+=rows[i][0][0]\n          ans.append([rows[i][0][1],rows[i-1][j][1]])\nprint(len(ans))\nfor i in range(len(ans)):\n  print(*ans[i])", "import math\n#import sys\n#input = sys.stdin.readline\n\ndef make_divisors(n):\n    divisors = []\n    for i in range(1, int(n**0.5)+1):\n        if n % i == 0:\n            divisors.append(i)\n            if i != n // i:\n                divisors.append(n//i)\n\n    # divisors.sort()\n    return divisors\n\ndef ValueToBits(x,digit):\n    res = [0 for i in range(digit)]\n    now = x\n    for i in range(digit):\n        res[i]=now%2\n        now = now >> 1\n    return res\n\ndef BitsToValue(arr):\n    n = len(arr)\n    ans = 0\n    for i in range(n):\n        ans+= arr[i] * 2**i\n    return ans\n\ndef ZipArray(a):\n    aa = [[a[i],i]for i in range(n)]\n\n    aa.sort(key = lambda x : x[0])\n    for i in range(n):\n        aa[i][0]=i+1\n    aa.sort(key = lambda x : x[1])\n    b=[aa[i][0] for i in range(len(a))]\n    return b\n\ndef ValueToArray10(x, digit):\n    ans = [0 for i in range(digit)]\n    now = x\n    for i in range(digit):\n        ans[digit-i-1] = now%10\n        now = now //10\n    return ans\n\ndef Zeros(a,b):\n    if(b<=-1):\n        return [0 for i in range(a)]\n    else:\n        return [[0 for i in range(b)] for i in range(a)]\n\ndef AddV2(v,w):\n    return [v[0]+w[0],v[1]+w[1]]\n\ndir4 = [[1,0],[0,1],[-1,0],[0,-1]]\n\n\ndef clamp(x,y,z):\n    return max(y,min(z,x))\n\nclass Bit:\n    def __init__(self, n):\n        self.size = n\n        self.tree = [0] * (n + 1)\n \n    def sum(self, i):\n        s = 0\n        while i > 0:\n            s += self.tree[i]\n            i -= i & -i\n        return s\n \n    def add(self, i, x):\n        while i <= self.size:\n            self.tree[i] += x\n            i += i & -i\n            \n#\ndef Zaatsu(a):\n    a.sort()\n    now = a[0][0]\n    od = 0\n    for i in range(n):\n        if(now==a[i][0]):\n            a[i][0]=od\n        else:\n            now = a[i][0]\n            od+=1\n            a[i][0] = od\n    \n    a.sort(key = lambda x : x[1])\n    return a\n\nclass UnionFind:\n    def __init__(self, n):\n        self.par = [i for i in range(n+1)]\n        self.rank = [0] * (n+1)\n\n    # \u691c\u7d22\n    def find(self, x):\n        if self.par[x] == x:\n            return x\n        else:\n            self.par[x] = self.find(self.par[x])\n            return self.par[x]\n\n    # \u4f75\u5408\n    def union(self, x, y):\n        x = self.find(x)\n        y = self.find(y)\n        if self.rank[x] < self.rank[y]:\n            self.par[x] = y\n        else:\n            self.par[y] = x\n            if self.rank[x] == self.rank[y]:\n                self.rank[x] += 1\n\n    # \u540c\u3058\u96c6\u5408\u306b\u5c5e\u3059\u308b\u304b\u5224\u5b9a\n    def same_check(self, x, y):\n        return self.find(x) == self.find(y)\n\n\n'''\ndef cmb(n, r, p):\n    if (r < 0) or (n < r):\n        return 0\n    r = min(r, n - r)\n    return fact[n] * factinv[r] * factinv[n-r] % p\n\np = 2\nN = 10 ** 6 + 2\nfact = [1, 1]  # fact[n] = (n! mod p)\nfactinv = [1, 1]  # factinv[n] = ((n!)^(-1) mod p)\ninv = [0, 1]  # factinv \u8a08\u7b97\u7528\n\nfor i in range(2, N + 1):\n    fact.append((fact[-1] * i) % p)\n    inv.append((-inv[p % i] * (p // i)) % p)\n    factinv.append((factinv[-1] * inv[-1]) % p)\n\n'''\n\ndef rl(x):\n    return list(range(len(x)))\n\n# a = list(map(int, input().split()))\n\n#################################################\n#################################################\n#################################################\n#################################################\n\n\n\n#20-\n\nn = int(input())\n\na= list(map(int, input().split()))\n\nif(abs(max(a)) >= abs(min(a))):\n    idx = -1\n    mx = -1\n    for i in range(n):\n        if(mx<=a[i]):\n            idx = i+1\n            mx = a[i]\n            \n    print((n*2))\n    print((idx,n))\n    print((idx,n))\n    for i in range(n-1):\n        print((n,i+1))\n        print((n,n))\n\nelse:\n    idx = -1\n    mi = 1\n    for i in range(n):\n        if(mi>=a[i]):\n            idx = i+1\n            mi = a[i]\n            \n    print((n*2))\n    print((idx,1))\n    print((idx,1))\n    for i in range(n,1,-1):\n        print((1,i))\n        print((1,1))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "N = int(input())\nA = list(map(int,input().split()))\n\nans = []\ndef f1():\n  for i in range(1,N):\n    mx = -(10**7)\n    mxi = 0\n    for j in range(N):\n      if A[j] > mx:\n        mx = A[j]\n        mxi = j\n    A[i] += mx\n    ans.append((mxi,i))\ndef f2():\n  for i in range(N-2,-1,-1):\n    mn = 10**7\n    mni = 0\n    for j in range(N):\n      if A[j] < mn:\n        mn = A[j]\n        mni = j\n    A[i] += mn\n    ans.append((mni,i))\n\nmx = -(10**7)\nmxi = 0\nmn = 10**7\nmni = 0\nfor i in range(N):\n  if A[i] > mx:\n    mx = A[i]\n    mxi = i\n  if A[i] < mn:\n    mn = A[i]\n    mni = i\nif mn >= 0:\n  f1()\nelif mx <= 0:\n  f2()\nelif mx >= abs(mn):\n  for i in range(N):\n    if A[i] < 0:\n      A[i] += mx\n      ans.append((mxi,i))\n  f1()\nelse:\n  for i in range(N):\n    if A[i] > 0:\n      A[i] += mn\n      ans.append((mni,i))\n  f2()\n\nprint((len(ans)))\nfor a1,a2 in ans:\n  print((a1+1,a2+1))\n", "import sys\nimport math\nfrom collections import defaultdict\n\nsys.setrecursionlimit(10**7)\ndef input():\n    return sys.stdin.readline()[:-1]\n\nmod = 10**9 + 7\n\ndef I(): return int(input())\ndef II(): return map(int, input().split())\ndef III(): return list(map(int, input().split()))\ndef Line(N,num):\n    if N<=0:\n        return [[]]*num\n    elif num==1:\n        return [I() for _ in range(N)]\n    else:\n        read_all = [tuple(II()) for _ in range(N)]\n        return map(list, zip(*read_all))\n\n#################\n\ndef my_sign(x):\n    return (x > 0) - (x < 0)\n\nN = I()\na = III()\n\nmax_val = 0\nmax_sign = 0\nmax_index = -1\nfor i,a0 in enumerate(a):\n    if abs(a0)>max_val:\n        max_val = abs(a0)\n        max_sign = my_sign(a0)\n        max_index = i\n\nif max_sign==0:\n    print(0)\nelif max_sign==1:\n    print(2*N-1)\n    for i in range(N):\n        print(max_index+1,i+1)\n    for i in range(N-1):\n        print(i+1,i+2)\nelse:\n    print(2*N-1)\n    for i in range(N):\n        print(max_index+1,i+1)\n    for i in range(1,N)[::-1]:\n        print(i+1,i)", "n=int(input())\narr=list(map(int,input().split()))\narr=[[arr[i],i+1] for i in range(n)]\nmins=10**18\nminpos=0\nmaxs=-10**18\nmaxpos=0\nfor i in range(n):\n  a=arr[i][0]\n  if a<mins:\n    mins=a\n    minpos=i+1\n  if maxs<a:\n    maxs=a\n    maxpos=i+1\nans=[]\nif maxs<=0:\n  flag=False\nelif mins>=0:\n  flag=True\nelse:\n  if maxs>=abs(mins):\n    flag=True\n    for i in range(n):\n      arr[i][0]+=maxs\n      ans.append([maxpos,arr[i][1]])\n  else:\n    flag=False\n    for i in range(n):\n      arr[i][0]+=mins\n      ans.append([minpos,arr[i][1]])\nif flag==True:\n  for i in range(1,n):\n    ans.append([i,i+1])\nelse:\n  for i in range(n,1,-1):\n    ans.append([i,i-1])\nprint(len(ans))\nfor i in range(len(ans)):\n  print(*ans[i])", "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\n\nN = int(input())\nA = list(map(int, input().split()))\nminv, maxv = min(A), max(A)\nmini, maxi = -1, -1\n\nfor i in range(N):\n    if minv == A[i]:\n        mini = i\n    if maxv == A[i]:\n        maxi = i\n\nif minv * maxv >= 0:\n    print((N - 1))\n    if minv >= 0:\n        for i in range(N - 1):\n            print((i + 1, i + 2))\n    else:\n        for i in range(N, 1, -1):\n            print((i, i - 1))\nelse:\n    print((2 * N - 1))\n    if abs(minv) < abs(maxv):\n        for i in range(N):\n            print((maxi + 1, i + 1))\n        for i in range(N - 1):\n            print((i + 1, i + 2))\n    else:\n        for i in range(N):\n            print((mini + 1, i + 1))\n        for i in range(N, 1, -1):\n            print((i, i - 1))\n", "import bisect\nimport copy\nimport heapq\nimport sys\nimport itertools\nimport math\nimport queue\ninput = sys.stdin.readline\nsys.setrecursionlimit(1000000)\nmod = 10 ** 9 + 7\n\ndef read_values(): return list(map(int, input().split()))\ndef read_index(): return [int(x) - 1 for x in input().split()]\ndef read_list(): return list(read_values())\ndef read_lists(N): return [read_list() for n in range(N)]\n\n\ndef main():\n    N = int(input())\n    A = read_list()\n    M = max(A)\n    m = min(A)\n\n    T = M if abs(M) >= abs(m) else m\n    i = A.index(T) + 1\n    ans = []\n    if T >= 0:\n        for j, a in enumerate(A):\n            if a < 0:\n                ans.append((i, j + 1))\n        for i in range(N - 1):\n            ans.append((i + 1, i + 2))\n    else:\n        for j, a in enumerate(A):\n            if a > 0:\n                ans.append((i, j + 1))\n        for i in range(N - 1, 0, -1):\n            ans.append((i + 1, i))\n\n\n    print((len(ans)))\n    for a, b in ans:\n        A[b - 1] += A[a - 1]\n        print((a, b))\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "N = int(input())\n*A, = list(map(int, input().split()))\nmx = -float('inf')\nmn = float('inf')\nmxi = mni = -1\nfor i, a in enumerate(A, 1):\n    if mx < a:\n        mx, mxi = a, i\n    if mn > a:\n        mn, mni = a, i\nans = []\nif abs(mx) >= abs(mn):\n    for i in range(1, N+1):\n        if i == mxi: continue\n        ans.append(f'{mxi} {i}')\n    for i in range(1, N):\n        ans.append(f'{i} {i+1}')\nelse:\n    for i in range(1, N+1):\n        if i == mni: continue\n        ans.append(f'{mni} {i}')\n    for i in range(N, 1, -1):\n        ans.append(f'{i} {i-1}')\nprint((len(ans)))\nprint(('\\n'.join(map(str, ans))))\n", "import sys\ninput=sys.stdin.readline\n\nn=int(input())\na=list(map(int,input().split()))\n\nm=a[0]\nmi=0\nfor i in range(n):\n    if abs(a[i])>abs(m):\n        m=a[i]\n        mi=i\n\nprint((2*n-1))\nfor i in range(n):\n    print((mi+1,i+1))\n\nif m>=0:\n    for i in range(n-1):\n        print((i+1,i+2))\nelse:\n    for i in range(n-1):\n        print((n-i,n-1-i))\n\n", "n = int(input())\nA = [int(i) for i in input().split()]\n\nans = []\n_max = max(A)\n_min = min(A)\n_min_ptr = A.index(_min)\n_max_ptr = A.index(_max)\nif _min == _max:\n    print((0))\n    return\n\nif sorted(A) == A:\n    print((0))\n    return\n\nif _max < 0:\n    for i in range(n - 1, 0, -1):\n        A[i - 1] += A[i]\n        ans.append((i, i - 1))\n\nelif _min >= 0:\n    for i in range(0, n - 1):\n        A[i + 1] += A[i]\n        ans.append((i, i + 1))\n\nelif _min < 0 and _max >= 0 and abs(_min) > abs(_max):\n    for i in range(n):\n        if A[i] >= 0:\n            A[i] += _min\n            ans.append((_min_ptr, i))\n    for i in range(n - 1, 0, -1):\n        A[i - 1] += A[i]\n        ans.append((i, i - 1))\n\nelif _min < 0 and _max >= 4 and abs(_min) <= abs(_max):\n    for i in range(n):\n        if A[i] < 0:\n            A[i] += _max\n            ans.append((_max_ptr, i))\n    for i in range(0, n - 1):\n        A[i + 1] += A[i]\n        ans.append((i, i + 1))\n\n\nif len(ans) == 0:\n    print((0))\n    return\n\nprint((len(ans)))\nfor i, j in ans:\n    print((i + 1, j + 1))\n", "N = int(input())\nA = list(map(int,input().split()))\n\nif all(a==0 for a in A):\n    print(0)\n    return\n\nINF = float('inf')\nmn = INF\nmx = -INF\nmni = mxi = -1\nfor i,a in enumerate(A):\n    if a > mx:\n        mx = a\n        mxi = i\n    if a < mn:\n        mn = a\n        mni = i\n\nans = []\nif mn >= 0:\n    p = True\nelif mx <= 0:\n    p = False\nelse:\n    if mx > -mn:\n        for i,a in enumerate(A):\n            if a < 0:\n                ans.append((mxi+1, i+1))\n        p = True\n    else:\n        for i,a in enumerate(A):\n            if a > 0:\n                ans.append((mni+1, i+1))\n        p = False\n\nif p:\n    for i in range(1,N):\n        ans.append((i,i+1))\nelse:\n    for i in range(N,1,-1):\n        ans.append((i,i-1))\n\nprint(len(ans))\nfor a,b in ans:\n    print(a,b)", "ans = 0\nN = int(input())\nA = list(map(int, input().split()))\nans = []\nM = -float('inf')\nm = float('inf')\nfor i in range(N):\n  if A[i]>M:\n    M_ind = i+1\n    M = A[i]\n  if A[i]<m:\n    m_ind = i+1\n    m = A[i]\nif M*m<0:\n  for i in range(N):\n    if M>=abs(m):\n      if i+1!= M_ind:\n        ans.append([M_ind,i+1])\n        A[i] += M\n    else:\n      if i+1!= m_ind:\n        ans.append([m_ind,i+1])\n        A[i] += m\nif max(A)>0:\n  for i in range(1,N):\n    ans.append([i,i+1])\nelse:\n  for i in range(N,1,-1):\n    ans.append([i,i-1])\nprint(len(ans))\nfor a in ans:\n  print(*a)", "import sys\ninput = sys.stdin.readline\nN = int(input())\na = list(map(int, input().split()))\nmx = max(a)\nmn = min(a)\nres = []\nif abs(mx) >= abs(mn):\n  t = 0\n  for i in range(N):\n    if a[i] == mx:\n      t = i\n      break\n  for i in range(N):\n    res.append((t + 1, i + 1))\n    a[i] += a[t]\n  for i in range(N):\n    for j in range(N):\n      if a[j] > a[t]: t = j\n    res.append((t + 1, i + 1))\n    a[i] += a[t]\n  print(len(res))\n  for r in res: print(*r)\nelse:\n  t = 0\n  for i in range(N):\n    if a[i] == mn:\n      t = i\n      break\n  for i in range(N):\n    res.append((t + 1, i + 1))\n    a[i] += a[t]\n  for i in range(N - 1, -1, -1):\n    for j in range(N):\n      if a[j] < a[t]: t = j\n    res.append((t + 1, i + 1))\n    a[i] += a[t]\n  print(len(res))\n  for r in res: print(*r)", "import sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\n\ndef main():\n    N = int(readline())\n    a = list(map(int, readline().split()))\n\n    ans = []\n    MAX = max(a); MIN = min(a)\n    if MIN >= 0:\n        for i in range(1, N):\n            ans.append((i, i + 1))\n    elif MAX <= 0:\n        for i in reversed(list(range(1, N))):\n            ans.append((i + 1, i))\n    elif MAX > -MIN:\n        max_idx = a.index(MAX)\n        for i in range(N):\n            if a[i] < 0:\n                ans.append((max_idx + 1, i + 1))\n        for i in range(1, N):\n            ans.append((i, i + 1))\n    else:\n        min_idx = a.index(MIN)\n        for i in range(N):\n            if a[i] > 0:\n                ans.append((min_idx + 1, i + 1))\n        for i in reversed(list(range(1, N))):\n            ans.append((i + 1, i))\n\n    print((len(ans)))\n    for i, j in ans:\n        print((i, j))\n\ndef __starting_point():\n   main()\n\n__starting_point()", "N = int(input())\na = list(map(int, input().split()))\nm = 10**18\nM = -10**18\nm_idx = -1\nM_idx = -1\n\nfor i in range(N):\n    if a[i]<m:\n        m = a[i]\n        m_idx = i\n    \n    if a[i]>M:\n        M = a[i]\n        M_idx = i\n        \nope = []\n\nif abs(m)<=abs(M):\n    for i in range(N):\n        ope.append((M_idx, i))\n    \n    for i in range(N-1):\n        ope.append((i, i+1))\nelse:\n    for i in range(N):\n        ope.append((m_idx, i))\n    \n    for i in range(N-1, 0, -1):\n        ope.append((i, i-1))\n    \nprint(len(ope))\n\nfor x, y in ope:\n    print(x+1, y+1)", "import sys\ninput = sys.stdin.readline\nN = int(input())\na = list(map(int, input().split()))\nmx = -float(\"inf\")\nmn = float(\"inf\")\nmxi = 0\nmni = 0\nfor i in range(N):\n  x = a[i]\n  if mx < x:\n    mx = x\n    mxi = i\n  if mn > x:\n    mn = x\n    mni = i\nprint(2 * N - 1)\nif abs(mx) > abs(mn):\n  for i in range(N): print(mxi + 1, i + 1)\n  for i in range(N - 1): print(i + 1, i + 2)\nelse:\n  for i in range(N): print(mni + 1, i + 1)\n  for i in range(N - 1, 0, -1): print(i + 1, i)", "n = int(input())\na = list(map(int, input().split()))\nprint(n * 2 - 1)\nma, mi = max(a), min(a)\nima, imi = a.index(ma), a.index(mi)\nif abs(ma) >= abs(mi):\n    for i in range(1, n + 1):\n        print(ima + 1, i)\n    for i in range(1, n):\n        print(i, i + 1)\nelse:\n    for i in range(1, n + 1):\n        print(imi + 1, i)\n    for i in range(1, n)[::-1]:\n        print(i + 1, i)", "from sys import stdout\nprintn = lambda x: stdout.write(str(x))\ninn = lambda : int(input())\ninl   = lambda: list(map(int, input().split()))\ninm   = lambda:      list(map(int, input().split()))\nins = lambda : input().strip()\nDBG = True # and False\nBIG = 999999999\nR = 10**9 + 7\n\ndef ddprint(x):\n  if DBG:\n    print(x)\n\nn = inn()\na = inl()\nmx = max([abs(x) for x in a])\np = [i for i in range(n) if abs(a[i])==mx][0]\nseq = []\nif a[p]>0:\n    for i in range(1,n):\n        while a[i-1]>a[i]:\n            a[i] += a[p]\n            seq.append((p,i))\n        if a[i]>a[p]:\n            p = i\nelif a[p]<0:\n    for i in range(n-2,-1,-1):\n        while a[i]>a[i+1]:\n            a[i] += a[p]\n            seq.append((p,i))\n        if a[i]<a[p]:\n            p = i\nprint((len(seq)))\nfor a,b in seq:\n    print((\"{} {}\".format(a+1,b+1)))\n", "n=int(input())\na=list(map(int,input().split()))\nmxn=0\nmnn=0\nmx=-10**10\nmn=10**10\nfor i in range(n):\n  if mx<a[i]:\n    mx=a[i]\n    mxn=i\n  if mn>a[i]:\n    mn=a[i]\n    mnn=i\nprint(2*n-1)\nif mx+mn>=0:\n  for i in range(n):\n    print(mxn+1,i+1)\n  for i in range(1,n):\n    print(i,i+1)\nelse:\n  for i in range(n):\n    print(mnn+1,i+1)\n  for i in range(n,1,-1):\n    print(i,i-1)", "import sys\nsys.setrecursionlimit(10 ** 8)\ndef getnum(t=int): return t(sys.stdin.buffer.readline())\ndef numline(t=int): return list(map(t, sys.stdin.buffer.readline().split()))\ndef numread(t=int): return list(map(t, sys.stdin.buffer.read().split()))\ndef getstr(): return sys.stdin.readline().strip()\ndef strline(): return sys.stdin.readline().strip().split()\ndef strread(): return sys.stdin.read().strip().split()\n\n# from numba import njit, b1, i4, i8, f8, jit\n# import numpy as np\nmod = 998_244_353\n\nimport math\n\ndef fromleft(N):\n    for i in range(1, N):\n        print((i, i+1))\n\ndef fromright(N):\n    for i in range(N, 1, -1):\n        print((i, i-1))\n\n\ndef main():\n    N, *A = numread()\n    A = [(a, i) for i, a in enumerate(A, 1)]\n    (minA, mini), (maxA, maxi) = min(A, key = lambda x:x[0]), max(A, key = lambda x:x[0])\n    if minA > 0:\n        print((N-1))\n        fromleft(N)\n        return\n    elif maxA <= 0:\n        print((N-1))\n        fromright(N)\n        return\n    elif abs(minA) > abs(maxA):\n        print((2 * N - 1))\n        for i in range(1, N+1):\n            print((mini, i))\n        fromright(N)\n        return\n    else:\n        print((2 * N - 1))\n        for i in range(1, N+1):\n            print((maxi, i))\n        fromleft(N)\n        return\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from collections import defaultdict\n\nN = int(input())\na = list(map(int, input().split()))\nidx = defaultdict(int)\n\nfor i in range(N):\n    idx[a[i]] = i\n    \nm = min(a)\nM = max(a)\nans = []\n\nif abs(M)>abs(m):\n    for i in range(N):\n        ans.append((idx[M], i))\n    \n    for i in range(1, N):\n        ans.append((i-1, i))\nelse:\n    for i in range(N):\n        ans.append((idx[m], i))\n    \n    for i in range(N-2, -1, -1):\n        ans.append((i+1, i))\n\nprint((len(ans)))\n\nfor x, y in ans:\n    print((x+1, y+1))\n", "n = int(input())\nlis = list(map(int,input().split()))\nAngeKatrina = 0\nLizeHelesta = 0\nfor i,InuiToko in list(enumerate(lis)):\n  if InuiToko >= 0:\n    if InuiToko >= AngeKatrina:\n      AngeKatrina = InuiToko\n      AngeSoko = i+1\n  else:\n    if -InuiToko >= LizeHelesta:\n      LizeHelesta = -InuiToko\n      LizeHiyoko = i+1\nprint(2*n-1)\nif AngeKatrina >= LizeHelesta:\n  for i in range(1,n+1):\n    print(AngeSoko,i)\n  for i in range(1,n):\n    print(i,i+1)\nelse:\n  for i in range(1,n+1):\n    print(LizeHiyoko,i)\n  for i in range(n,1,-1):\n    print(i,i-1)", "n = int(input())\na = list(map(int, input().split()))\nans = []\nmx = 0\nfor i in range(n):\n    if abs(a[i])>abs(mx):\n        mx = a[i]\n        mx_idx = i\nfor i in range(n):\n    if mx*a[i]<0:\n        ans.append((mx_idx+1, i+1))\nfor i in range(n-1):\n    if mx>0:\n        ans.append((i+1, i+2))\n    elif mx<0:\n        ans.append((n-i, n-i-1))\nprint(len(ans))\nfor x, y in ans:\n    print(x, y)", "# ARC086_B Non Decreasing\ndef nonDecreasing(N, A):\n    Amin = min(A)\n    Amax = max(A)\n    Amin_index = A.index(Amin)+1\n    Amax_index = A.index(Amax)+1\n\n    res = []\n\n    # \u53f3\u3092\u3069\u3093\u3069\u3093\u5897\u3084\u3057\u3066\u3044\u304f\n    # Amax\u306f\u6b63\u306e\u6570\u306e\u306f\u305a\n    if abs(Amax) > abs(Amin):\n        for i in range(1, N):\n            while A[i - 1] > A[i]:\n                A[i] += Amax\n                res.append((Amax_index, i+1))\n                if A[i] > Amax:\n                    Amax = A[i]\n                    Amax_index = i+1\n\n    # \u5de6\u3092\u3069\u3093\u3069\u3093\u6e1b\u3089\u3057\u3066\u3044\u304f\n    # Amin\u306f\u8ca0\u306e\u6570\u306e\u306f\u305a\n    else:\n        for i in range(N - 1, 0, -1):\n            while A[i - 1] > A[i]:\n                A[i - 1] += Amin\n                res.append((Amin_index, i))\n                if A[i - 1] < Amin:\n                    Amin = A[i - 1]\n                    Amin_index = i\n    return res\n\n\ndef __starting_point():\n    N = int(input())\n    A = list(map(int, input().split()))\n    ans = nonDecreasing(N, A)\n\n    print((len(ans)))\n    for a in ans:\n        print((*a))\n\n__starting_point()", "N = int(input())\nA = list(map(int,input().split()))\ncmax = 0\na = 0\nind = -1\nfor i in range(N):\n    if abs(A[i])>cmax:\n        cmax = abs(A[i])\n        a = A[i]\n        ind = i\nif a>0:\n    B = []\n    for i in range(N):\n        if A[i]<0:\n            A[i] += a\n            B.append([ind+1,i+1])\n    for i in range(1,N):\n        A[i] += A[i-1]\n        B.append([i,i+1])\n    print(len(B))\n    for j in range(len(B)):\n        print(*B[j])\nelif a<0:\n    B = []\n    for i in range(N):\n        if A[i]>0:\n            A[i] += a\n            B.append([ind+1,i+1])\n    for i in range(N-2,-1,-1):\n        A[i] += A[i+1]\n        B.append([i+2,i+1])\n    print(len(B))\n    for j in range(len(B)):\n        print(*B[j])\nelse:\n    print(0)", "n = int(input())\na = list(map(int, input().split()))\n\nmx_i = 0\nfor i, e in enumerate(a):\n    if abs(e) > abs(a[mx_i]):\n        mx_i = i\n\nans = []\nfor i in range(n):\n    if i == mx_i:\n        continue\n    a[i] += a[mx_i]\n    ans.append([mx_i + 1, i + 1])\n\nif a[mx_i] > 0:\n    for i in range(n - 1):\n        if a[i] > a[i+1]:\n            a[i+1] += a[i]\n            ans.append([i + 1, i + 2])\n\nelse:\n    for i in range(n - 1, 0, -1):\n        if a[i] < a[i-1]:\n            a[i-1] += a[i]\n            ans.append([i + 1, i])\n\nprint((len(ans)))\nfor row in ans:\n    print((*row))\n", "n = int(input())\na = list(map(int,input().split()))\n\nprint((2*n - 2))\n\nM = a.index(max(a))\nm = a.index(min(a))\nif abs(a[m]) <= abs(a[M]):\n    for i in range(n):\n        if i != M:\n            print((M+1,i+1))\n    for i in range(n-1):\n        print((i+1,i+2))\nelse:\n    for i in range(n):\n        if i != m:\n            print((m+1,i+1))\n    for i in range(1,n)[::-1]:\n        print((i+1,i))\n", "n = int(input())\na = [int(i) for i in input().split()]\n\na_max=max(a)\ni_max=a.index(a_max) + 1\na_min=min(a)\ni_min=a.index(a_min) + 1\nans=[]\n\nif a_min>=0:\n    print((n-1))\n    for i in range(1,n):\n        print((i,i+1))\nelif a_max<0:\n    print((n-1))\n    for i in range(n,1,-1):\n        print((i,i-1))\nelif abs(a_max)>abs(a_min):\n    print((2*n-2))\n    for i in range(1,n+1):\n        if i != i_max:\n            print((i_max,i))\n\n    for i in range(1,n):\n        print((i,i+1))\n\nelse:\n    print((2*n-2))\n    for i in range(1,n+1):\n        if i != i_min:\n            print((i_min,i))\n    for i in range(n,1,-1):\n        print((i,i-1))\n", "N = int(input())\nA = list(map(int,input().split()))\namin = min(A)\nindmin = A.index(amin)+1\namax = max(A)\nindmax = A.index(amax)+1\nif amin>=0:\n    print((N-1))\n    for i in range(1,N):\n        print((i,i+1))\nelif amax<=0:\n    print((N-1))\n    for i in range(N,1,-1):\n        print((i,i-1))\nelif amax+amin>=0:\n    print((2*(N-1)))\n    for i in range(1,N+1):\n        if i!=indmax:\n            print((indmax,i))\n    for i in range(1,N):\n        print((i,i+1))\nelif amax+amin<0:\n    print((2*(N-1)))\n    for i in range(1,N+1):\n        if i!=indmin:\n            print((indmin,i))\n    for i in range(N,1,-1):\n        print((i,i-1))\n", "n=int(input())\nl=list(map(int,input().split()))\nm=min(l)\nma=max(l)\nprint((2*n-1))\nif m<0 and abs(m)>abs(ma):\n    idx=l.index(m)+1\n    for i in range(1,n+1):\n        print((idx,i))\n    for i in range(n-1,0,-1):\n        print((i+1,i))\nelse:\n    idx=l.index(ma)+1\n    for i in range(1,n+1):\n        print((idx,i))\n    for i in range(2,n+1):\n        print((i-1,i))\n        \n\n", "N = int(input())\nA = list(map(int,input().split()))\n\nMIN,MAX = 10**7,-10**7\nans = []\nfor i in range(N):\n    if MIN > A[i]:\n        MIN =A[i]\n        min_i = i\n    if MAX < A[i]:\n        MAX = A[i]\n        max_i = i\n\nif abs(MIN) <= abs(MAX):\n    for i in range(N):\n        if A[i] < 0:\n            A[i] += MAX\n            ans.append([max_i+1,i+1])\n    # print(A)\n\n    for i in range(N-1):\n        if A[i] > A[i+1]:\n            A[i+1] += A[i]\n            ans.append([i+1,i+2])\n\nelse:\n    for i in range(N):\n        if A[i] > 0:\n            A[i] += MIN\n            ans.append([min_i+1,i+1])\n    # print(A)\n\n    for i in range(N-1,0,-1):\n        if A[i] < A[i-1]:\n            A[i-1] += A[i]\n            ans.append([i+1,i])\nprint((len(ans)))\nfor a in ans:\n    print((*a))\n\n\n\n\n", "N=int(input())\nA=list(map(int,input().split()))\n\nm=0\nindex=-1\nfor i in range(0,N):\n    if abs(A[i])>m:\n        m=abs(A[i])\n        index=i\n\nif index==-1:\n    print(0)\nelse:\n    if A[index]>0:\n        operate=[]\n        for i in range(0,N):\n            if i!=index:\n                operate.append((index+1,i+1))\n                A[i]+=A[index]\n\n        for i in range(0,N-1):\n            if A[i]>A[i+1]:\n                operate.append((i+1,i+2))\n                A[i+1]+=A[i]\n\n        print(len(operate))\n        for x,y in operate:\n            print(x,y)\n    else:\n        operate=[]\n        for i in range(0,N):\n            if i!=index:\n                operate.append((index+1,i+1))\n                A[i]+=A[index]\n\n        for i in range(N-1,0,-1):\n            if A[i]<A[i-1]:\n                operate.append((i+1,i))\n                A[i-1]+=A[i]\n\n        print(len(operate))\n        for x,y in operate:\n            print(x,y)", "N = int(input())\na = list(map(int, input().split()))\ncnt1 = 0\nli1 = []\nfor i in range(1,N):\n    M = max(a)\n    num = 0\n    for j in range(N):\n        if a[j] == M:\n            n = j\n    if a[i] < a[i-1]:\n        if M <= 0:\n            cnt1= -1\n            break\n        num += -((-a[i-1]+a[i])//M)\n        if num < 0 or num > 2*N:\n            cnt1 = -1\n            break\n        a[i] += num*M\n        for j in range(num):\n            li1.append([n+1, i+1])\n        cnt1 += num\ncnt2 = 0\nli2 = []\nfor i in range(1,N):\n    M = min(a)\n    num = 0\n    for j in range(N):\n        if a[j] == M:\n            n = j\n    if a[N-i] < a[N-i-1]:\n        if M >= 0:\n            cnt2 = -1\n            break\n        num += -((-a[N-i-1]+a[N-i])//(-M))\n        if num < 0 or num > 2*N:\n            cnt2 = -1\n            break\n        a[N-i-1] += num *M\n        for j in range(num):\n            li2.append([n+1, N-i])\n        cnt2 += num\nif cnt1 <= 2*N and cnt1 >= 0:\n    print(cnt1)\n    for x in li1:\n        print(*x)\nelse:\n    print(cnt2)\n    for x in li2:\n        print(*x)", "#!/usr/bin python3\n# -*- coding: utf-8 -*-\n\nn = int(input())\na = list(map(int, input().split()))\nm = 0\nfor i, ai in enumerate(a):\n    if abs(ai) >= m:\n        m = abs(ai)\n        mi = i\nret= [[mi+1, i+1] for i in range(n)]\nif a[mi] >= 0:\n    for i in range(n-1):\n        ret.append([i+1, i+2])\nelse:\n    for i in range(n-2, -1, -1):\n        ret.append([i+2, i+1])  #i+1->i\nprint((2*n-1))\nfor x in ret:\n    print((\" \".join(map(str, x))))\n", "N = int(input())\na = list(map(int, input().split()))\nm = min(a)\nM = max(a)\n\n\nflag = 1\nplus = 0\nminus = 0\nfor x in a:\n    if x > 0:\n        plus += 1\n    elif x < 0:\n        minus += 1\nif m*M < 0:\n    if m + M >= 0:\n        id = a.index(M)\n        print((minus + N-1))\n        for i in range(N):\n            if a[i] < 0:\n                a[i] += M\n                print((id+1, i+1))\n\n    else:\n        id = a.index(m)\n        print((plus + N-1))\n        for i in range(N):\n            if a[i] > 0:\n                a[i] += m\n                print((id+1, i+1))\n\n        flag = 0\n\nelse:\n    print((N-1))\n    if m < 0:\n        flag = False\n\n\nif flag:  # \u6b63\u306e\u6570\u5217\n    # M = max(a)\n    # id = a.index(M)\n    for i in range(1, N):\n        # if i == 0:\n        #     a[i] += M\n        #     print(id+1, 1)\n        # else:\n        a[i] += a[i-1]\n        print((i, i+1))\n\nelse:\n    # m = min(a)\n    # id = a.index(m)\n    for i in range(N-2, -1, -1):\n        # if i == N-1:\n        #     a[i] += m\n        #     print(id, i+1)\n        # else:\n        a[i] += a[i+1]\n        print((i+2, i+1))\n# print(a)\n", "n,*a=map(int,open(0).read().split())\nans=[str(2*n-1)]\nif max(a)>-min(a):\n\ti=a.index(max(a))\n\tfor k in range(n):\n\t\tans.append(\"{} {}\".format(i+1,k+1))\n\tfor k in range(n-1):\n\t\tans.append(\"{} {}\".format(k+1,k+2))\nelse:\n\ti=a.index(min(a))\n\tfor k in range(n):\n\t\tans.append(\"{} {}\".format(i+1,k+1))\n\tfor k in range(n-1):\n\t\tans.append(\"{} {}\".format(n-k,n-k-1))\nprint(\"\\n\".join(ans))", "N = int(input())\nA = list(map(int,input().split()))\namax = max(A)\namin = min(A)\nif amax+amin>=0:\n    imax = A.index(amax)\n    imax += 1\n    m = 2*N-2\n    print(m)\n    for i in range(1,N+1):\n        if i != imax:\n            print(imax,i)\n    for i in range(1,N):\n        print(i,i+1)\nelse:\n    imin = A.index(amin)\n    imin += 1\n    m = 2*N-2\n    print(m)\n    for i in range(1,N+1):\n        if i!=imin:\n            print(imin,i)\n    for i in range(N,1,-1):\n        print(i,i-1)", "def main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    if all([a > 0 for a in A]):\n        print(N-1)\n        for i in range(N-1):\n            print(i+1,i+2)\n        return\n    elif all([a <= 0 for a in A]):\n        print(N-1)\n        for i in range(N-1,0,-1):\n            print(i+1,i)\n        return\n    else:\n        if abs(max(A)) >= abs(min(A)):\n            print(2*N-1)\n            for i in range(N):\n                print(A.index(max(A)) + 1, i+1)\n            for i in range(N-1):\n                print(i+1,i+2)\n            return\n        else:\n            print(2*N-1)\n            for i in range(N):\n                print(A.index(min(A))+1, i+1)            \n            for i in range(N-1,0,-1):\n                print(i+1,i)\n            return\n\n\ndef __starting_point():\n    main()\n__starting_point()", "import sys\nstdin = sys.stdin\nsys.setrecursionlimit(10**6)\nni = lambda: int(ns())\nna = lambda: list(map(int, stdin.readline().split()))\nnn = lambda: list(stdin.readline().split())\nns = lambda: stdin.readline().rstrip()\n\nn = ni()\na = na()\nM = max(a)\nm = min(a)\nans = []\n\nif m >= 0:\n    for i in range(1,n):\n        a[i] += a[i-1]\n        ans.append((i,i+1))\nelse:\n    if M <= 0:\n        for i in range(n-1)[::-1]:\n            a[i] += a[i+1]\n            ans.append((i+2,i+1))\n    else:\n        if M > -m:\n            Mi = a.index(M)\n            for i in range(n):\n                if a[i] < 0:\n                    a[i]+=M\n                    ans.append((Mi+1,i+1))\n            for i in range(1,n):\n                a[i] += a[i-1]\n                ans.append((i,i+1))\n        else:\n            mi = a.index(m)\n            for i in range(n):\n                if a[i] > 0:\n                    a[i]+=m\n                    ans.append((mi+1,i+1))\n            for i in range(n-1)[::-1]:\n                a[i] += a[i+1]\n                ans.append((i+2,i+1))\n\nprint(len(ans))\nprint('\\n'.join([str(i)+' '+str(j) for i,j in ans]))", "N = int(input())\nA = list(map(int,input().split()))\n\nif all(v>=0 for v in A):\n    print((N-1))\n    for i in range(1,N):\n        print((i,i+1))\nelif all(v<0 for v in A):\n    print((N-1))\n    for i in reversed(list(range(1,N))):\n        print((i+1,i))\nelse:\n    max_ind=A.index(max(A))+1\n    min_ind = A.index(min(A))+1\n    if abs(max(A))>=abs(min(A)):\n        print((2*N-1))\n        for i in range(1,N+1):\n            print((max_ind,i))\n        for i in range(1,N):\n            print((i,i+1))\n    else:\n        print((2*N-1))\n        for i in range(1,N+1):\n            print((min_ind,i))\n        for i in reversed(list(range(1,N))):\n            print((i+1,i))\n\n", "def main():\n\n    N = int(input())\n    A = list(map(int, input().split()))\n\n    ans = []\n    if min(A) >= 0:\n        v = float('-inf')\n        max_i = None\n        for i in range(N):\n            if A[i] > v:\n                max_i = i\n                v = A[i]\n\n        ans.append([max_i, 0])\n        for i in range(1, N):\n            ans.append([i-1, i])\n    elif max(A) <= 0:\n        v = float('inf')\n        min_i = None\n        for i in range(N):\n            if A[i] < v:\n                min_i = i\n                v = A[i]\n        ans.append([min_i, N-1])\n        for i in range(N-2, -1, -1):\n            ans.append([i+1, i])\n    elif abs(max(A)) >= abs(min(A)):\n        v = float('-inf')\n        max_i = None\n        for i in range(N):\n            if A[i] > v:\n                max_i = i\n                v = A[i]\n        for i in range(N):\n            if i != max_i:\n                ans.append([max_i, i])\n        ans.append([max_i, max_i])\n        ans.append([max_i, 0])\n        for i in range(1, N):\n            ans.append([i-1, i])\n    else:\n        v = float('inf')\n        min_i = None\n        for i in range(N):\n            if A[i] < v:\n                min_i = i\n                v = A[i]\n        for i in range(N):\n            if i != min_i:\n                ans.append([min_i, i])\n        ans.append([min_i, min_i])\n        ans.append([min_i, N-1])\n        for i in range(N-2, -1, -1):\n            ans.append([i+1, i])\n\n    print(len(ans))\n    for i, j in ans:\n        print(str(i+1) + \" \" + str(j+1))\n\ndef __starting_point():\n    main()\n__starting_point()", "\"\"\"from collections import *\nfrom itertools import *\nfrom bisect import *\nfrom heapq import *\n\nimport math\nfrom fractions import gcd\"\"\"\nimport sys\n#input = sys.stdin.readline\n\nimport copy\n\nN=int(input())\nAmoto=list(map(int,input().split()))\nlst=[]\nA=copy.copy(Amoto)\n_min=A[0]\nminidx=0\nfor i in range(1,N):\n    if _min>A[i]:\n        _min=A[i]\n        minidx=i\nif _min<0:\n    for i in range(N)[::-1]:\n        while _min<A[i] and len(lst)<=2*N+1:\n            A[i]+=_min\n            lst.append([minidx+1,i+1])\n        minidx=i\n        _min=A[i]\n\n    if  len(lst)<=2*N:\n        print((len(lst)))\n        for i in lst:\n            print((\" \".join([str(x) for x in i ])))\n        return\nA=copy.copy(Amoto)\n_max=A[0]\nmaxidx=0\nlst=[]\nfor i in range(1,N):\n    if _max<A[i]:\n        _max=A[i]\n        maxidx=i\nif _max>0:\n    for i in range(N):\n        while _max>A[i] and len(lst)<=2*N+1:\n            A[i]+=_max\n            lst.append([maxidx+1,i+1])\n        maxidx=i\n        _max=A[i]\n    if  len(lst)<=2*N:\n        print((len(lst)))\n        for i in lst:\n            print((\" \".join([str(x) for x in i ])))\n        return\nelse:\n    print((0))\n", "import sys,queue,math,copy,itertools,bisect,collections,heapq\n\ndef main():\n    sys.setrecursionlimit(10**7)\n    INF = 10**7\n    MOD = 10**9 + 7\n    LI = lambda : [int(x) for x in sys.stdin.readline().split()]\n    NI = lambda : int(sys.stdin.readline())\n    SI = lambda : sys.stdin.readline().rstrip()\n\n    N = NI()\n    A = LI()\n    ans = []\n\n    max_a = max(A)\n    min_a = min(A)\n\n    if max_a * min_a < 0:\n        p = max_a if abs(max_a) > abs(min_a) else min_a\n        q = A.index(p)\n        for i in range(N):\n            ans.append((q+1,i+1))\n            A[i] += p\n        min_a = min(A)\n\n    if min_a >= 0:\n        for i in range(1,N):\n            ans.append((i,i+1))\n    else:\n        for i in range(N,1,-1):\n            ans.append((i,i-1))\n\n    print(len(ans))\n    for x in ans:\n        print(x[0],x[1])\n\ndef __starting_point():\n    main()\n__starting_point()", "N = int(input())\nA = list(map(int,input().split()))\n\ntmp = 0\ndisc = 0\nfor i, a in enumerate(A):\n  if abs(tmp) < abs(a):\n    tmp = a\n    disc = i\n\nprint(2*N-2)\nfor i in range(N):\n  if i == disc: continue\n  print(disc+1, i+1)\nif tmp >= 0:\n  for i in range(N-1):\n    print(i+1, i+1+1)\nelse:\n  for i in range(N-1,0,-1):\n    print(i+1, i+1-1)", "#\u8a2d\u5b9a\nimport sys\ninput = sys.stdin.buffer.readline\n\n#\u30e9\u30a4\u30d6\u30e9\u30ea\u30a4\u30f3\u30dd\u30fc\u30c8\nfrom collections import defaultdict\n\ncon = 10 ** 9 + 7\n#\u5165\u529b\u53d7\u3051\u53d6\u308a\ndef getlist():\n\treturn list(map(int, input().split()))\n\n#\u51e6\u7406\u5185\u5bb9\ndef main():\n\tN = int(input())\n\tA = getlist()\n\tM = max(A)\n\tp = A.index(M)\n\tm = min(A)\n\tq = A.index(m)\n\tif m >= 0:\n\t\tprint(N - 1)\n\t\tfor i in range(N - 1):\n\t\t\tprint(i + 1, i + 2)\n\telse:\n\t\tif abs(M) > abs(m):\n\t\t\tprint(2 * N - 1)\n\t\t\tfor i in range(N):\n\t\t\t\tprint(p + 1, i + 1)\n\t\t\tfor i in range(N - 1):\n\t\t\t\tprint(i + 1, i + 2)\n\t\telse:\n\t\t\tprint(2 * N - 1)\n\t\t\tfor i in range(N):\n\t\t\t\tprint(q + 1, i + 1)\n\t\t\tfor i in range(N - 1):\n\t\t\t\tprint(N - i, N - 1 - i)\n\ndef __starting_point():\n\tmain()\n__starting_point()", "n = int(input())\na = list(map(int, input().split()))\nb, idx = list(zip(*sorted(zip(a, list(range(1, n + 1))))))\nif b[-1] < 0:\n    print((n - 1))\n    # \u5168\u3066\u8ca0\u306e\u6570\u306a\u306e\u3067\u5f8c\u308d\u304b\u3089\u7d2f\u7a4d\u548c\u3092\u3068\u308b\n    for i in range(n - 1):\n        print((n - i, n - i - 1))\nelif b[0] >= 0:\n    print((n - 1))\n    for i in range(n - 1):\n        print((i + 1, i + 2))\nelse:\n    # max or min \u3092\u8db3\u3057\u3066\u5168\u3066\u6b63\u306e\u6570\u306b\u76f4\u3059\n    print((2 * n - 2))\n    if b[-1] > abs(b[0]):\n        # add max\n        for i in range(n):\n            if i + 1 != idx[-1]:\n                print((idx[-1], i + 1))\n        for i in range(n - 1):\n            print((i + 1, i + 2))\n    else:\n        for i in range(n):\n            if i + 1 != idx[0]:\n                print((idx[0], i + 1))\n        for i in range(n - 1):\n            print((n - i, n - i - 1))\n", "# \u3067\u3064oO(YOU PLAY WITH THE CARDS YOU'RE DEALT..)\nimport sys\ndef main(N, A):\n    mxi = -1\n    mxa = 0\n    for i, a in enumerate(A):\n        if abs(a) >= abs(mxa):\n            mxa = a\n            mxi = i\n    ans = []\n    for i in range(N):\n        if A[i] * mxa < 0:\n            ans.append((mxi + 1, i + 1))\n            A[i] += mxa\n    if mxa > 0:\n        for i in range(1, N):\n            if A[i] < A[i - 1]:\n                ans.append((i, i + 1))\n                A[i] += A[i - 1]\n    else:\n        for i in range(N - 2, -1, -1):\n            if A[i] > A[i + 1]:\n                ans.append((i + 2, i + 1))\n                A[i] += A[i + 1]\n    print((len(ans)))\n    for a in ans:\n        print((*a))\n\ndef __starting_point():\n    input = sys.stdin.readline\n    N = int(input())\n    *A, = list(map(int, input().split()))\n    main(N, A)\n\n__starting_point()", "# coding: utf-8\n# Your code here!\nimport sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\n\nn,*a = map(int, read().split())\nidx = max(range(n),key=lambda i: abs(a[i]))\n\nprint(2*n-1)\nfor i in range(n):\n    print(idx+1,i+1)\nif a[idx] >= 0:\n    for i in range(n-1):\n        print(i+1,i+2)\nelse:\n    for i in range(n-2,-1,-1):\n        print(i+2,i+1)", "def construct(is_reversed=False):\n    start, end, step = 0, N - 1, 1\n    if is_reversed:\n        start, end, step = N - 1, 0, -1\n    ret = []\n    for i in range(start, end, step):\n        ret.append((i + 1, i + step + 1))\n    return ret\n\n\ndef solve():\n    max_A = max(A)\n    min_A = min(A)\n    if max_A == min_A:\n        return []\n    elif abs(max_A) >= abs(min_A):\n        idx = A.index(max_A)\n        return [(idx + 1, i + 1) for i in range(N) if i != idx] + construct()\n    elif abs(max_A) < abs(min_A):\n        idx = A.index(min_A)\n        return [(idx + 1, i + 1) for i in range(N) if i != idx] + construct(True)\n\n\nN = int(input())\nA = list(map(int, input().split()))\nans = solve()\nprint((len(ans)))\nfor e in ans:\n    print((*e))\n", "n = int(input())\na = [int(i) for i in input().split()]\nM = max(a)\nm = min(a)\nans = []\nif m >= 0:\n    for i in range(1, n):\n        a[i] += a[i - 1]\n        ans.append([i, i + 1])\nelse:\n    if M <= 0:\n        for i in range(n - 1)[::-1]:\n            a[i] += a[i + 1]\n            ans.append([i + 2, i + 1])\n    else:\n        if M > -m:\n            index = a.index(M)\n            for i in range(n):\n                if a[i] < 0:\n                    a[i] += M\n                    ans.append([index + 1, i + 1])\n            for i in range(1, n):\n                a[i] += a[i - 1]\n                ans.append([i, i + 1])\n        else:\n            index = a.index(m)\n            for i in range(n):\n                if a[i] > 0:\n                    a[i] += m\n                    ans.append([index + 1, i + 1])\n            for i in range(n - 1)[::-1]:\n                a[i] += a[i + 1]\n                ans.append([i + 2, i + 1])\nprint(len(ans))\nprint('\\n'.join([str(i) + ' ' + str(j) for i, j in ans]))", "# ARC086D\n\nimport sys\ninput = lambda : sys.stdin.readline().rstrip()\nsys.setrecursionlimit(max(1000, 10**9))\n\n\nn = int(input())\na = list(map(int, input().split()))\n\nm = max([abs(item) for item in a if item<=0] + [0])\nM = max([abs(item) for item in a if item>=0] + [0])\n\ndef sub(i, j, a):\n    print(i, j)\n    a[j-1] += a[i-1]\n    \nprint(2*n-1)\nif M >= m:\n    ind = a.index(M)+1\n    for i in range(1,n+1):\n        if i==ind:\n            continue\n        sub(ind, i, a)\n    sub(ind, 1, a)\n    for i in range(1, n):\n        sub(i, i+1, a)\nelse:\n    ind = a.index(-m)+1\n    for i in range(1,n+1):\n        if i==ind:\n            continue\n        sub(ind, i, a)\n    sub(ind, n, a)\n    for i in range(n, 1, -1):\n        sub(i, i-1, a)", "n = int(input())\nal = list(map(int, input().split()))\n\namax = -10**7\nmaxi = -1\namin = 10**7\nmini = -1\nfor i, a in enumerate(al):\n    if a > amax: \n        amax = a\n        maxi = i\n    if a < amin:\n        amin = a\n        mini = i\n\nansl = []\nif amin >= 0 or amax >= abs(amin):\n    print(2*n-1)\n    for i in range(n):\n        print(maxi+1,i+1)\n    for i in range(n-1):\n        print(i+1,i+2)\n\nelse:\n    print(2*n-1)\n    for i in range(n):\n        print(mini+1, i+1)\n    for i in range(n-1,0,-1):\n        print(i+1,i)    "]