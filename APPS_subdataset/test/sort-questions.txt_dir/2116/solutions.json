["n, m, k = map(int, input().split())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\torders = map(int, input().split())\n\tfor order in orders:\n\t\tans += a.index(order) + 1\n\t\ta.remove(order)\n\t\ta.insert(0, order)\nprint(ans)", "n, m, k = list(map(int, input().split()))\npos = list(map(int, input().split()))\nd = 0\nfor i in range(n):\n    for a in list(map(int, input().split())):\n        for j in range(k):\n            if pos[j] == a:\n                del(pos[j])\n                pos = [a] + pos\n                d += j + 1\nprint(d)\n                \n", "n,m,k=list(map(int,input().split()))\np=list(map(int,input().split()))\na=[list(map(int,input().split())) for i in range(n)]\nst=0\nfor i in range(n):\n\tfor j in range(m):\n\t\tfor g in range(k):\n\t\t\tif a[i][j]==p[g]:\n\t\t\t\tp.insert(0,p[g])\n\t\t\t\tdel(p[g+1])\n\t\t\t\tst+=g+1\n\t\t\t\tg-=1\t\t\nprint(st)\n", "def get_index(el, lst):\n    for idx, element in enumerate(lst):\n        if element == el:\n            return idx\n\n    return -1\n\ndef __starting_point():\n    n, m, k = (int(cur_num) for cur_num in input().split())\n\n    things = [int(cur_num) for cur_num in input().split()]\n\n    ans = 0\n\n    for _ in range(n):\n\n        bought = [int(cur_num) for cur_num in input().split()]\n\n        for purchase in bought:\n\n            idx = get_index(purchase, things)\n\n            ans += idx+1\n\n            del things[idx]\n\n            things = [purchase] + things\n\n    print(ans)\n__starting_point()", "n, m, k = list(map(int, input().split()))\nps = list(map(int, input().split()))\nxs = []\nfor _ in range(n):\n    xs.append(list(map(int, input().split())))\n\ndef get(x):\n    i = ps.index(x)\n    ps[1:i + 1] = ps[0:i]\n    ps[0] = x\n    return i + 1\n\nprint(sum([sum(map(get, ys)) for ys in xs]))\n", "n, m, k = map(int, input().split())\n\ngoods = list(map(int, input().split()))\ntotal_time = 0\n\nfor i in range(n):\n    goods_i = list(map(int, input().split()))\n    for j in range(m):\n        pos = goods.index(goods_i[j])\n        total_time += pos + 1\n        goods.remove(goods_i[j])\n        goods = [goods_i[j]] + goods\n        \nprint(total_time)", "import sys\nimport math\nimport itertools as it\nimport operator as op\nimport fractions as fr\n\n\nn,m,k = map(int, sys.stdin.readline().split())\nP = list(map(int, sys.stdin.readline().split()))\nP = P[::-1]\n\nr = 0\n\nfor _ in range(n):\n  Aj = map(int, sys.stdin.readline().split())\n  for a in Aj:\n    idx = P.index(a)\n    r += (k-idx)\n    del P[idx]\n    P.append(a)\n\nprint(r)", "from sys import stdin, stdout\nfrom collections import deque\nnumbers, everyq, allq = map(int, stdin.readline().split())\nitems = deque(list(map(int, stdin.readline().split())))\ncnt = 0\nfor i in range(numbers):\n    current = map(int, stdin.readline().split())\n    for n in current:\n        ind = 0\n        while items[ind] != n:\n            ind += 1\n        cnt += ind + 1\n        value = items[ind]\n        for j in range(ind, 0, -1):\n            items[j] = items[j - 1]\n        items[0] = value\n        \nstdout.write(str(cnt))", "s = input().split()\nn = int(s[0])\nm = int(s[1])\nk = int(s[2])\npos = 0\ngoods = [int (x) for x in input().split()]\nfor i in range(n):\n\tbuy = input().split()\n\tfor u in buy:\n\t\tx = int(u)\n\t\tpos = pos + goods.index(x) + 1\n\t\tgoods.remove(x)\n\t\tgoods.insert(0, x)\nprint (pos)", "n, m, k = map(int, input().split())\np, v = input().split(), 0\nfor i in range(n):\n    for x in input().split():\n        c = p.index(x)\n        v += c + 1\n        p.pop(c)\n        p.insert(0, x)\nprint(v)", "#!/usr/bin/env python\nn, m, k = list(map(int, input().split()))\nl = list(map(int, input().split()))\nt = 0\n\nfor i in range(n):\n    for item in map(int, input().split()):\n                t += l.index(item) + 1\n                l.remove(item)\n                l.insert(0, item)\nprint(t)\n", "s = input().split(\" \")\ngoods_count = int(s[0])\ngoods = input().split(\" \")\nt = 0\nfor i in range(goods_count):\n    s = input().split(\" \")\n    for item in s:\n        t += goods.index(item) + 1\n        del goods[goods.index(item)]\n        goods.insert(0, item)\nprint(t)", "n, m, k = list([int(q) for q in input().split()])\nk_lst = list([int(q) for q in input().split()])\norder_lst = []\nfor i in range(n):\n\tlst = list([int(q) for q in input().split()])\n\torder_lst += lst\n\n# def calctime(a, ta, b, tb, h, m):\n# \tstart_queue = list(range(300, 1439))[::b]\n# \tstart_m = 60 * h + m\n# \tarrive_m = min(start_m + ta, END_M)\n# \ttotal = 0\n# \tfor index, num in enumerate(start_queue):\n# \t\tif num > start_m - tb and num < arrive_m:\n# \t\t\ttotal += 1\n# \treturn total\n\n\ndef calcCost(n,m,k,k_lst):\n\ttotal_min = 0\n\t_index = 0\n\tfor i in range(n*m):\n\t\t_item = order_lst[_index]\n\t\tfor index, item in enumerate(k_lst):\n\t\t\tif item == _item:\n\t\t\t\ttotal_min += index + 1\n\t\t\t\tbreak\n\t\tk_lst = [k_lst[index]] + k_lst[0:index] + k_lst[index+1:]\n\t\t_index += 1\n\treturn total_min\n\nprint(calcCost(n, m, k, k_lst))\n\n\n\n\n\n", "n,m,k=list(map(int,input().split()))\np=list(map(int,input().split()))\np.reverse()\nans=0\nfor i in range(n):\n    z=list(map(int,input().split()))\n    for j in z:\n        v=0\n        for k in range(len(p)-1,-1,-1):\n            v+=1\n            if p[k]==j:\n                ans+=v\n                p.pop(k)\n                p.append(j)\n                break\nprint(ans)\n", "tmp = input().split(' ')\nn = int(tmp[0])\nm = int(tmp[1])\nk = int(tmp[2])\ntmp = input().split(' ')\npos = []\nneed = []\nfor i in range(k):\n\tpos.append(int(tmp[i]))\ntime = 0\nfor i in range(n):\n\ttmp = input().split(' ')\n\tneed.clear()\n\tfor j in range(m):\n\t\tneed.append(int(tmp[j]))\n\tfor j in range(m):\n\t\tcurpos = pos.index(need[j])\n\t\ttime = time + curpos + 1\n\t\tdel pos[curpos]\n\t\tpos.insert(0,need[j])\n\nprint(time)\n", "n, m, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\n\ntime = 0\n\n\nfor i in range(n):\n    c = list(map(int, input().split()))\n    for j in c:\n        for k in range(len(a)):\n            if a[k] == j:\n                p = k\n                break\n        time += p + 1\n        a = [j] + a[:k] + a[k + 1:]\n\nprint(time)\n", "from sys import stdin as fin\n# fin = open(\"ecr12b.in\", \"r\")\n\nclass node:\n    def __init__(self, val=None):\n        self.prev = self.next = None\n        self.val = val\n\n    @staticmethod\n    def link(node1, node2):\n        node1.next = node2\n        node2.prev = node1\n        return node2\n\n    @staticmethod\n    def move(node1, node2, inode1, inode2):\n        if inode1.prev is not None:\n            inode1.prev.next = inode2.next\n        if inode2.next is not None:\n            inode2.next.prev = inode1.prev\n        node1 = node.link(node1, inode1)\n        node2 = node.link(inode2, node2)\n        return node1, node2\n\n\nn, m, k = map(int, fin.readline().split())\narr = list(map(int, fin.readline().split()))\n\n# p = [None] * k\n# for i in range(k):\n#     p[arr[i] - 1] = i\n\ncur = line = node()\nfor num in arr:\n    cur = node.link(cur, node(num))\nres = 0\nfor i in range(n):\n    buy = list(map(int, fin.readline().split()))\n    for num in buy:\n        cur = line\n        cnt = 0\n        while cur.val != num:\n            cur = cur.next\n            cnt += 1\n        res += cnt\n        if line.next != cur:\n            line = node.move(line, line.next, cur, cur)[0].prev\n\nprint(res)", "n, m, k = map(int, input().split())\ns = list(map(int, input().split()))\nd = 0\nfor i in range(n):\n    for a in list(map(int, input().split())):\n        for j in range(k):\n            if s[j] == a:\n                del(s[j])\n                s = [a] + s\n                d += j + 1\nprint(d)", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Wed Apr 20 21:02:31 2016\n\n@author: Kirill\n\"\"\"\n\nn, m, k = map(int, input().split())\norder = list(map(int, input().split()))\nitems = []\nfor i in range(n):\n    items.append(list(map(int, input().split())))\n\nans = 0\nfor i in range(n):\n    for j in range(m):\n        item = order.index(items[i][j])\n        ans += item + 1\n        order.insert(0, order.pop(item))\nprint(ans)", "def main():\n    n, m, k = list(map(int, input().split()))\n    aa, t = list(map(int, input().split())), n * m * k\n    aa.reverse()\n    for _ in range(n):\n        for a in map(int, input().split()):\n            i = aa.index(a)\n            t -= i\n            del aa[i]\n            aa.append(a)\n    print(t)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    n, m, k = list(map(int, input().split()))\n    aa, t = list(map(int, input().split())), n * m * k\n    aa.reverse()\n    u, v, w = aa.index, aa.remove, aa.append\n    for _ in range(n):\n        for a in map(int, input().split()):\n            t -= u(a)\n            v(a)\n            w(a)\n    print(t)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, m, k = map(int, input().split())\np = list(map(int, input().split()))\n\nr = 0\n\n#p = {key: p.index(key) + 1 for key in p}\n\nfor i in range(0, n):\n    a = list(map(int, input().split()))\n    for j in range(0, len(a)):\n        index = p.index(a[j])\n        r += index + 1\n        p.insert(0, p.pop(index))\n\nprint(r)", "[n,m,k]=[int(i) for i in input().split()]\na=[0]*(k+1)\ntemp=[int(i) for i in input().split()]\nfor i in range(0,k):\n    a[temp[i]]=i+1\nanswer=0\nfor z in range(0,n):\n    temp=[int(i) for i in input().split()]\n    for i in temp:\n        answer+=a[i]\n        for l in range(1,k+1):\n            if a[l]<a[i]: a[l]+=1\n        a[i]=1\n        \nprint(answer)", "user,item,total=list(map(int,input().split()))\nitems=list(map(int,input().split()))\nto=0\nfor i in range(user):\n    a=list(map(int,input().split()))\n    for j in a:\n        to+=items.index(j)+1\n        items.pop(items.index(j))\n        items=[j]+items\nprint(to)\n", "l1 = list(map(int, input().split()))\nn = l1[0]\nm = l1[1]\nk = l1[2]\na = list(map(int, input().split()))\ntot = 0\nfor i in range(n):\n\torders = list(map(int, input().split()))\n\tfor i in range(m):\n\t\tb = []\n\t\tval = orders[i]\n\t\tpos = a.index(val)\n\t\ttot = tot + pos + 1\n\t\ta.pop(pos)\n\t\tb.append(val)\n\t\tb = b + a\n\t\ta = b\nprint(tot)"]