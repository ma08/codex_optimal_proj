["# You lost the game.\nn, m = map(int, input().split())\nA = list(map(int, input().split()))\nM = [list(map(int, input().split())) for _ in range(m)]\n\nj = m-1\nx = 2\nh = -1\nB = [-1 for _ in range(n+1)]\nwhile h < n and j >= 0:\n    h = M[j][1]\n    if h >= x:\n        B[h] = j\n        x = h+1\n    j -= 1\n\nO = [0 for _ in range(n)]\n\nfor i in range(n-1,x-2,-1):\n    O[i] = A[i]\n    del A[i]\n\nn2 = len(A)\n    \nR = A[:]\nR.sort()\n      \nd = 0\nf = n2-1\n\n\nc = 0\nfor i in range(n2-1,-1,-1):\n    j = B[i+1]\n    if j >= 0:\n        c = M[j][0]\n    if c == 1:\n        O[i] = R[f]\n        f -= 1\n    else:\n        O[i] = R[d]\n        d += 1\n\n    \nfor i in range(n):\n    print(O[i],end=\" \")\n        \n    \n    \n", "n, m = list(map(int,input().split()))\na = list(map(int,input().split()))\nt = list()\nb = list()\n\nfor i in range(m):\n\tx, y = list(map(int,input().split()))\n\twhile len(t) > 0 and y >= t[-1][1]: \n\t\tt.pop()\n\tt.append([x, y])\n\nx, y = 0, t[0][1] - 1\nt.append([0, 0])\nb = sorted(a[: y + 1])\n\nfor i in range(1, len(t)):\n\t\tfor j in range(t[i - 1][1], t[i][1], -1):\n\t\t\tif t[i - 1][0] == 1:\n\t\t\t\ta[j - 1] = b[y]\n\t\t\t\ty -= 1 \n\t\t\telse:\n\t\t\t\ta[j - 1] = b[x]\n\t\t\t\tx += 1\n\nprint(\" \".join(list(str(i) for i in a)))\n", "import sys\n\nn, m = [int(x) for x in input().split()]\nnotes = [int(x) for x in input().split()]\nmanagers = []\nfor line in sys.stdin:\n    managers.append(tuple(int(x) for x in line.split()))\n\nbearing_managers = []\nM, T = 0, 0\nfor t, r in reversed(managers):\n    if r > M:\n        if t == T:\n            bearing_managers[-1] = (t, r)\n        else:\n            T = t\n            bearing_managers.append((t, r))\n        M = r\nbearing_managers.reverse()\nt, r = bearing_managers[0]\nbearing_managers.append((2 if bearing_managers[-1][0] == 1 else 1, 0))\nL, R = 0, r-1\nsorted_part = list(sorted(notes[:r]))\nfor t1, r1 in bearing_managers:\n    if t1 == 2:\n        for i in range(r-1, r1-1, -1):\n            notes[i] = sorted_part[R]\n            R -= 1\n    else:\n        for i in range(r-1, r1-1, -1):\n            notes[i] = sorted_part[L]\n            L += 1\n    r = r1\n\nfor x in notes:\n    sys.stdout.write(str(x) + ' ')\n", "read = lambda: list(map(int, input().split()))\nn, m = read()\na = list(read())\nt = []\nfor i in range(m):\n    x, r = read()\n    while len(t) and r >= t[-1][1]:\n        t.pop()\n    t.append((x, r))\nx, r = 0, t[0][1] - 1\nt.append((0, 0))\nb = sorted(a[:r + 1])\nfor i in range(1, len(t)):\n    for j in range(t[i - 1][1], t[i][1], -1):\n        if t[i - 1][0] == 1:\n            a[j - 1] = b[r]\n            r -= 1\n        else:\n            a[j - 1] = b[x]\n            x += 1\nprint(*a)\n", "n, m = list(map(int,input().split()))\na = list(map(int,input().split()))\nt = list()\nb = list()\n\nfor i in range(m):\n\tx, y = list(map(int,input().split()))\n\twhile len(t) > 0 and y >= t[-1][1]: \n\t\tt.pop()\n\tt.append([x, y])\n\nx, y = 0, t[0][1] - 1\nt.append([0, 0])\nb = sorted(a[: y + 1])\n\nfor i in range(1, len(t)):\n\t\tfor j in range(t[i - 1][1], t[i][1], -1):\n\t\t\tif t[i - 1][0] == 1:\n\t\t\t\ta[j - 1] = b[y]\n\t\t\t\ty -= 1 \n\t\t\telse:\n\t\t\t\ta[j - 1] = b[x]\n\t\t\t\tx += 1\n\nprint(\" \".join(list(str(i) for i in a)))\n", "n, m = map(int,input().split())\na = list(map(int,input().split()))\nt = list()\nb = list()\n\nfor i in range(m):\n\tx, y = map(int,input().split())\n\twhile len(t) > 0 and y >= t[-1][1]: \n\t\tt.pop()\n\tt.append([x, y])\n\nx, y = 0, t[0][1] - 1\nt.append([0, 0])\nb = sorted(a[: y + 1])\n\nfor i in range(1, len(t)):\n\t\tfor j in range(t[i - 1][1], t[i][1], -1):\n\t\t\tif t[i - 1][0] == 1:\n\t\t\t\ta[j - 1] = b[y]\n\t\t\t\ty -= 1 \n\t\t\telse:\n\t\t\t\ta[j - 1] = b[x]\n\t\t\t\tx += 1\n\nprint (\" \".join(list(str(i) for i in a)))", "import sys\nfrom collections import deque\n# sys.stdin = open(\"ivo.in\")\n\nn, m = map(int, sys.stdin.readline().split())\n\na = list(map(int, sys.stdin.readline().split()))\n\nb = []\nmx = 0\nfor i in range(m):\n    t = tuple(map(int, sys.stdin.readline().split()))\n    mx = max([mx, t[1]])\n    b.append(t)\n\nreal = []\nso_far = 0\nfor i in range(m-1,-1,-1):\n    if b[i][1] > so_far:\n        real.append(b[i])\n        so_far = b[i][1]\n\nreal.reverse()\n\nanswer = [0] * n\nb= a[0:mx]\nb.sort()\nd = deque(b)\n\nfor i in range(mx, len(a)):\n    answer[i] = a[i]\n\nfor i in range(len(real)):\n    if i + 1 == len(real):\n        for j in range(real[i][1]):\n            if real[i][0] == 1:\n                answer[j] = d.popleft()\n            else:\n                answer[j] = d.pop()\n    else:\n        for j in range(real[i][1] - 1, real[i + 1][1] - 1, -1):\n            if real[i][0] == 1:\n                answer[j] = d.pop()\n            else:\n                answer[j] = d.popleft()\n\nprint(\" \".join(map(str, answer)))", "def compress(ops):\n    cops = []\n    for r, dir in ops:\n        while cops and cops[-1][0] <= r:\n            cops.pop()\n        if not cops or cops[-1][1] != dir:\n            cops.append((r, dir))\n    return cops\n\n\ndef transform(lst, ops):\n    mr, mdir = ops[0]\n\n    sections = [list(range(mr, len(lst)))]\n\n    ost = 0\n    oen = mr\n    pr, pdir = ops[0]\n    for r, dir in ops[1:]:\n        k = pr-r\n        if pdir:\n            sections.append(reversed(list(range(ost, ost+k))))\n            ost += k\n        else:\n            sections.append(list(range(oen-k, oen)))\n            oen -= k\n        pr, pdir = r, dir\n\n    if pdir:\n        sections.append(reversed(list(range(ost, oen))))\n    else:\n        sections.append(list(range(ost, oen)))\n\n    olst = lst[:mr]\n    olst.sort()\n    olst.extend(lst[mr:])\n    return [olst[i] for sec in reversed(sections) for i in sec]\n\n\ndef parse_op():\n    d, r = input().split()\n    return int(r), (d == '2')\n\n\ndef parse_input():\n    n, m = list(map(int, input().split()))\n    lst = list(map(int, input().split()))\n    assert len(lst) == n\n    ops = [parse_op() for _ in range(m)]\n    return lst, ops\n\n\ndef __starting_point():\n    lst, ops = parse_input()\n    cops = compress(ops)\n    tlst = transform(lst, cops)\n    print(' '.join(map(str, tlst)))\n\n__starting_point()", "def main():\n    from collections import deque\n    n, m = list(map(int, input().split()))\n    aa = list(map(int, input().split()))\n    l = list(tuple(map(int, input().split())) for _ in range(m))\n    tmp, r0, t0 = [(0, 0)], 0, 0\n    for t, r in reversed(l):\n        if r0 < r:\n            r0 = r\n            if t0 != t:\n                t0 = t\n                tmp.append((t, r))\n            else:\n                tmp[-1] = (t, r)\n    t0, r0 = tmp.pop()\n    q = deque(sorted(aa[:r0]))\n    aa = aa[r0:]\n    aa.reverse()\n    ff = (None, q.pop, q.popleft)\n    for t, r in reversed(tmp):\n        f = ff[t0]\n        for i in range(r0 - r):\n            aa.append(f())\n        t0, r0 = t, r\n    print(' '.join(map(str, reversed(aa))))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "s = input()\nnum = [int(x) for x in s.split()]\nn,m = num[0],num[1]\ns = input()\na = [int(x) for x in s.split()]\nt1 = [0 for x in range(m)]\nr1 = [0 for x in range(m)]\nfor i in range(m):\n    s = input()\n    num = [int(x) for x in s.split()]\n    t1[i],r1[i] = num[0],num[1]\n    r1[i] = r1[i]-1\n    if t1[i] is 2:\n        t1[i] = -1\n\nt = []\nr = []\nfor i in range(m):\n    while len(r)!=0 and r[-1] <= r1[i]:\n        t.pop()\n        r.pop()\n    t.append(t1[i])\n    r.append(r1[i])\n\n#print(t)\n#print(r)\n\nm = len(t)\nb = [0 for x in range(n)]\nlast = 0\nfor i in range(m-1,-1,-1):\n    if r[i] > last:\n        last = r[i]\n        b[r[i]] = t[i]\n\n#print(b)\nr = []\nr.extend(a)\nfor i in range(n-1,-1,-1):\n    if b[i] is 1:\n        c = sorted(a[:i+1])\n        c.extend(a[i+1:])\n        typ = b[i]\n        r = []\n        r.extend(c)\n\n        le = 0\n        ri = i-1\n        tp = typ\n        for j in range(i-1,-1,-1):\n            if b[j] is not 0:\n                tp = b[j]\n            if tp==typ:\n                r[j] = c[ri]\n                ri = ri-1\n            else:\n                r[j] = c[le]\n                le = le+1     \n        break\n    elif b[i] is -1:\n        c = sorted(a[:i+1])\n        c.reverse()\n        c.extend(a[i+1:])\n        typ = b[i]\n        r = []\n        r.extend(c)\n\n        le = 0\n        ri = i-1\n        tp = typ\n        #print(c)\n        for j in range(i-1,-1,-1):\n            if b[j] is not 0:\n                tp = b[j]\n            if tp==typ:\n                r[j] = c[ri]\n                ri = ri-1\n            else:\n         #       print(le)\n         #       print(c[le])\n                r[j] = c[le]\n                le = le+1\n\n          #  print(r)\n        break\n\n#print(c)\nfor j in range(len(r)):\n    print(r[j], end = ' ')\nprint()\n", "3\n\nclass StdReader:\n\tdef read_int(self):\n\t\treturn int(self.read_string())\n\n\tdef read_ints(self, sep = None):\n\t\treturn [int(i) for i in self.read_strings(sep)]\n\n\tdef read_float(self):\n\t\treturn float(self.read_string())\n\n\tdef read_floats(self, sep = None):\n\t\treturn [float(i) for i in self.read_strings(sep)]\n\n\tdef read_string(self):\n\t\treturn input()\n\n\tdef read_strings(self, sep = None):\n\t\treturn self.read_string().split(sep)\n\nreader = StdReader()\n\n\ndef part_sort(a, i, j, reverse=False):\n\ta[i:j] = sorted(a[i:j], reverse=reverse)\n\n\ndef part_sorted(b, i, j, reverse=False):\n\ta = list(b)\n\tpart_sort(a, i, j, reverse)\n\treturn a\n\n\ndef main():\n\tn, m = reader.read_ints()\n\ta = reader.read_ints()\n\n\tops = []\n\tfor i in range(m):\n\t\tt, r = reader.read_ints()\n\t\top = (t, r)\n\n\t\twhile ops and op[1] >= ops[-1][1]:\n\t\t\tops.pop()\n\n\t\tops.append(op)\n\n\t# newops = []\n\t# prevt = None\n\t# for op in ops:\n\t# \tif prevt is None or prevt != op[0]:\n\t# \t\tnewops.append(op)\n\t# \t\t# max_r = max(max_r, op[1])\n\n\t# \tprevt = op[0]\n\n\t# ops = newops\n\n\tmax_r = ops[0][1]\n\tb = sorted(a[:max_r])\n\tbl = 0\n\tbr = max_r - 1\n\n\tfor i in range(len(ops)):\n\t\tt, r = ops[i]\n\n\t\tr1 = 0\n\t\tif i < len(ops) - 1:\n\t\t\tt1, r1 = ops[i+1]\n\n\t\tk = r - r1\n\n\t\tif t == 1:\n\t\t\tfor p in range(k):\n\t\t\t\ta[r - 1 - p] = b[br]\n\t\t\t\tbr -= 1\n\t\telse:\n\t\t\tfor p in range(k):\n\t\t\t\ta[r - 1 - p] = b[bl]\n\t\t\t\tbl += 1\n\n\t# for op in ops:\n\t# \tt, r = op\n\t# \treverse = t != 1\n\t# \tpart_sort(a, 0, r, reverse=reverse)\n\n\tfor ai in a:\n\t\tprint(ai, end=' ')\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()", "3\n\nclass StdReader:\n\tdef read_int(self):\n\t\treturn int(self.read_string())\n\n\tdef read_ints(self, sep = None):\n\t\treturn [int(i) for i in self.read_strings(sep)]\n\n\tdef read_float(self):\n\t\treturn float(self.read_string())\n\n\tdef read_floats(self, sep = None):\n\t\treturn [float(i) for i in self.read_strings(sep)]\n\n\tdef read_string(self):\n\t\treturn input()\n\n\tdef read_strings(self, sep = None):\n\t\treturn self.read_string().split(sep)\n\nreader = StdReader()\n\n\ndef part_sort(a, i, j, reverse=False):\n\ta[i:j] = sorted(a[i:j], reverse=reverse)\n\n\ndef part_sorted(b, i, j, reverse=False):\n\ta = list(b)\n\tpart_sort(a, i, j, reverse)\n\treturn a\n\n\ndef main():\n\tn, m = reader.read_ints()\n\ta = reader.read_ints()\n\n\tops = []\n\tfor i in range(m):\n\t\tt, r = reader.read_ints()\n\t\top = (t, r)\n\n\t\twhile ops and op[1] >= ops[-1][1]:\n\t\t\tops.pop()\n\n\t\tops.append(op)\n\n\tnewops = []\n\tprevt = None\n\tfor op in ops:\n\t\tif prevt is None or prevt != op[0]:\n\t\t\tnewops.append(op)\n\t\t\t# max_r = max(max_r, op[1])\n\n\t\tprevt = op[0]\n\n\tops = newops\n\n\tmax_r = ops[0][1]\n\tb = sorted(a[:max_r])\n\tbl = 0\n\tbr = max_r - 1\n\n\tfor i in range(len(ops)):\n\t\tt, r = ops[i]\n\n\t\tr1 = 0\n\t\tif i < len(ops) - 1:\n\t\t\tt1, r1 = ops[i+1]\n\n\t\tk = r - r1\n\n\t\tif t == 1:\n\t\t\tfor p in range(k):\n\t\t\t\ta[r - 1 - p] = b[br]\n\t\t\t\tbr -= 1\n\t\telse:\n\t\t\tfor p in range(k):\n\t\t\t\ta[r - 1 - p] = b[bl]\n\t\t\t\tbl += 1\n\n\t# for op in ops:\n\t# \tt, r = op\n\t# \treverse = t != 1\n\t# \tpart_sort(a, 0, r, reverse=reverse)\n\n\tfor ai in a:\n\t\tprint(ai, end=' ')\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()", "a,b=[int(i) for i in input().split()]\nq=[int(i) for i in input().split()]\ns=[]\nfor p in range(b):\n    s+=[[int(i) for i in input().split()]]\nS=[]\nk=0\nfor p in range(b-1,-1,-1):\n    if s[p][1]>k:\n        S+=[s[p]]\n        k=s[p][1]\nQ1=sorted(q[:S[-1][1]])\nx,y=0,S[-1][1]-1\nS=[[0,0]]+S\nl=1\nfor j in range(S[-1][1]-1,-1,-1):\n    if x>y:break\n    if j<S[-l][1]:\n        k=S[-l][0]\n        l+=1\n    if k==1:\n        q[j]=Q1[y]\n        y-=1\n    if k==2:\n        q[j]=Q1[x]\n        x+=1\nprint(' '.join(list(map(str,q))))\n", "[n,m]=[int(i) for i in input().split()];\na=[int(i) for i in input().split()];\nt=m*[0];\nr=m*[0];\nfor k in range(0,m):\n    [t[k],r[k]]=[int(i) for i in input().split()];\n\ntt=[];\nrr=[];\nmm=-1;\nlastt=-1;\ntt.append(t[0]);\nrr.append(r[0]);\ntop=0;\nfor i in range(1,m):\n    while(top>-1):\n        if(r[i]>=rr[top]):\n            rr.pop();\n            tt.pop();\n            top=top-1;\n        else:\n            break;\n    if(top==-1):\n        rr.append(r[i]);\n        tt.append(t[i]);\n        top=top+1;\n    else:\n        if(tt[top]!=t[i]):\n            rr.append(r[i]);\n            tt.append(t[i]);\n            top=top+1;\n\nr0=rr[0];\nsorteda=sorted(a[:r0]);\nb=0;\nend=len(sorteda)-1;\n\nfor mindex in range(0,len(tt)-1):\n    rthis=rr[mindex];\n    rnext=rr[mindex+1];\n    if(tt[mindex]==1):\n        for i in range(rthis-1,rnext-1,-1):\n            a[i]=sorteda[end];\n            end=end-1;\n    else:\n        for i in range(rthis-1,rnext-1,-1):\n            a[i]=sorteda[b];\n            b=b+1;\n\nif(tt[-1]==1):\n    for i in range(0,rr[-1]):\n        a[i]=sorteda[i+b];\nelse:\n    for i in range(0,rr[-1]):\n        a[i]=sorteda[end-i];\n\nprint(*a, sep=\" \")\n\n\n", "a, b = (int(i) for i in input().split())\nf = list(map(int,input().split()))\nd = []\nfor i in range(b):\n    c, e = (int(t) for t in input().split())\n    while len(d) > 0 and e > d[-1][1]:\n        d.pop()\n    d.append([c, e])\nc, e = 0, d[0][1]\nd.append([0, 0])\ng = sorted(f[:e])\nfor i in range(1,len(d)):\n    for y in range(d[i - 1][1], d[i][1], -1):\n        if d[i - 1][0] == 1:\n            f[y - 1] = g[e - 1]\n            e -= 1\n        else:\n            f[y - 1] = g[c]\n            c += 1\nfor i in range(len(f)):\n    print(f[i],end = ' ')\n", "a, b = (int(i) for i in input().split())\nf = list(map(int,input().split()))\nd = []\nfor i in range(b):\n    c, e = (int(t) for t in input().split())\n    while len(d) > 0 and e > d[-1][1]:\n        d.pop()\n    d.append([c, e])\nc, e = 0, d[0][1]\nd.append([0, 0])\ng = sorted(f[:e])\nfor i in range(1,len(d)):\n    for y in range(d[i - 1][1], d[i][1], -1):\n        if d[i - 1][0] == 1:\n            f[y - 1] = g[e - 1]\n            e -= 1\n        else:\n            f[y - 1] = g[c]\n            c += 1\nprint(' '.join(list(str(i) for i in f)))\n", "n,m = [int(i) for i in input().split()]\nnl = [int(i) for i in input().split()]\nml = []\nfor i in range(m):\n    t,r = [int(k) for k in input().split()]\n    ml.append((t,r))\n\nmll = [(0,0)]\nfor i in range(m-1,-1,-1):\n    if i == m-1:\n        mll.append(ml[i])\n    elif i != m-1 and ml[i][1] > mll[-1][1]:\n        mll.append(ml[i])\n    #print(mll)\n\n\ntemp = sorted(nl[:mll[len(mll)-1][1]])\nx,y = 0,len(temp)-1\nfor i in range(len(mll)-1,0,-1):\n    t,r = mll[i]\n    for j in range(r-1,mll[i-1][1]-1,-1):\n        if t == 1:\n            nl[j] = temp[y]\n            y -= 1\n        elif t == 2:\n            nl[j] = temp[x]\n            x += 1\n\nfor i in range(n):\n    nl[i] = str(nl[i])\nprint(' '.join(nl))\n", "from sys import setrecursionlimit\nsetrecursionlimit(200000)\nclass data:\n    def __init__(self,a):\n        self.data=a\n    def qsort(self,l,r,reverse):\n        if l>=r :\n            return None\n        ind=l\n        i=l\n        j=r\n        key=self.data[l]\n        while i<j :\n            if reverse==1:\n                while (self.data[j]>=key) & (j>=l):\n                    j-=1\n                while (self.data[i]<key) & (i<=r) :\n                    i+=1\n                    ind=i-1\n                if i<j :\n                    ind+=1\n                    t=self.data[i]\n                    self.data[i]=self.data[j]\n                    self.data[j]=t\n            else :\n                while (self.data[j]<=key) & (j>=l) :\n                    j-=1\n                    ind=j+1\n                while (self.data[i]>key) & (i<=r) :\n                    i+=1\n                if i<j :\n                    ind-=1\n                    t=self.data[i]\n                    self.data[i]=self.data[j]\n                    self.data[j]=t\n        self.qsort(l,ind,reverse)\n        self.qsort(ind+1,r,reverse)            \nn,m=[int(i) for i in input().split()]\na=data([int(i) for i in input().split()])\nt=[None]*m\nr=[None]*m\nfor i in range(m):\n    t[i],r[i]=[int(j) for j in input().split()]\nSortlist=[]\nSortcount=0\nM=0\nfor i in range(m-1,-1,-1) :\n    if r[i]>M :\n        Sortlist.append([r[i],t[i]])\n        Sortcount+=1\n        M=r[i]\n#a.qsort(0,Sortlist[-1][0]-1,1)\nS=sorted(a.data[0:Sortlist[-1][0]])\nL=0\nR=M-1\nfor i in range(M-1,-1,-1) :\n    if (Sortcount>0):\n        if (i<Sortlist[Sortcount-1][0]) :\n            Reverse=Sortlist[Sortcount-1][1]\n            Sortcount-=1\n    if Reverse==1 :\n        a.data[i]=S[R]\n        R-=1\n    else :\n        a.data[i]=S[L]\n        L+=1\nfor i in a.data[0:-1] :\n    print(str(i)+\" \",end=\"\")\nprint(a.data[-1])", "'''class data:\n    def __init__(self,a):\n        self.data=a\n    def qsort(self,l,r,reverse):\n        if l>=r :\n            return None\n        ind=l\n        i=l\n        j=r\n        key=self.data[l]\n        while i<j :\n            if reverse==1:\n                while (self.data[j]>=key) & (j>=l):\n                    j-=1\n                while (self.data[i]<key) & (i<=r) :\n                    i+=1\n                    ind=i-1\n                if i<j :\n                    ind+=1\n                    t=self.data[i]\n                    self.data[i]=self.data[j]\n                    self.data[j]=t\n            else :\n                while (self.data[j]<=key) & (j>=l) :\n                    j-=1\n                    ind=j+1\n                while (self.data[i]>key) & (i<=r) :\n                    i+=1\n                if i<j :\n                    ind-=1\n                    t=self.data[i]\n                    self.data[i]=self.data[j]\n                    self.data[j]=t\n        self.qsort(l,ind,reverse)\n        self.qsort(ind+1,r,reverse)'''           \nn,m=[int(i) for i in input().split()]\nadata=[int(i) for i in input().split()]\nt=[None]*m\nr=[None]*m\nfor i in range(m):\n    t[i],r[i]=[int(j) for j in input().split()]\nSortlist=[]\nSortcount=0\nM=0\nfor i in range(m-1,-1,-1) :\n    if r[i]>M :\n        Sortlist.append([r[i],t[i]])\n        Sortcount+=1\n        M=r[i]\n#a.qsort(0,Sortlist[-1][0]-1,1)\nS=sorted(adata[0:Sortlist[-1][0]])\nL=0\nR=M-1\nfor i in range(M-1,-1,-1) :\n    if (Sortcount>0):\n        if (i<Sortlist[Sortcount-1][0]) :\n            Reverse=Sortlist[Sortcount-1][1]\n            Sortcount-=1\n    if Reverse==1 :\n        adata[i]=S[R]\n        R-=1\n    else :\n        adata[i]=S[L]\n        L+=1\nfor i in adata[0:-1] :\n    print(str(i)+\" \",end=\"\")\nprint(adata[-1])", "[n,m]=[int(i) for i in input().split()];\na=[int(i) for i in input().split()];\nt=m*[0];\nr=m*[0];\nfor k in range(0,m):\n    [t[k],r[k]]=[int(i) for i in input().split()];\n\ntstack=[];\nrstack=[];\nmm=-1;\nlastt=-1;\ntstack.append(t[0]);\nrstack.append(r[0]);\ntop=0;\nfor i in range(1,m):\n    while(top>-1):\n        if(r[i]>=rstack[top]):\n            rstack.pop();\n            tstack.pop();\n            top=top-1;\n        else:\n            break;\n    if(top==-1):\n        rstack.append(r[i]);\n        tstack.append(t[i]);\n        top=top+1;\n    else:\n        if(tstack[top]!=t[i]):\n            rstack.append(r[i]);\n            tstack.append(t[i]);\n            top=top+1;\n\nr0=rstack[0];\nsorteda=sorted(a[:r0]);\nbegin=0;\nend=len(sorteda)-1;\n\nfor mindex in range(0,len(tstack)-1):\n    rthis=rstack[mindex];\n    rnext=rstack[mindex+1];\n    if(tstack[mindex]==1):\n        for i in range(rthis-1,rnext-1,-1):\n            a[i]=sorteda[end];\n            end=end-1;\n    else:\n        for i in range(rthis-1,rnext-1,-1):\n            a[i]=sorteda[begin];\n            begin=begin+1;\n\nif(tstack[-1]==1):\n    for i in range(0,rstack[-1]):\n        a[i]=sorteda[i+begin];\nelse:\n    for i in range(0,rstack[-1]):\n        a[i]=sorteda[end-i];\n\nprint(*a, sep=\" \")\n\n\n", "__author__ = 'Utena'\nimport operator\nn,m=map(int,input().split())\ns=list(map(int,input().split()))\nr0=[[0,10000000000]]\nx0=[0]\nfor i in range(m):\n    t,r=map(int,input().split())\n    while r>=r0[-1][1]:\n            r0=r0[:-1]\n            x0=x0[:-1]\n    r0.append([t,r])\n    x0.append(i)\nQ=sorted(s[:r0[1][1]])\nr0.append([0,0])\nx=0\nj=2\ny=r0[1][1]-1\ni=r0[1][1]-1\nwhile True:\n    while i>=r0[j][1]:\n        if r0[j-1][0]==2:\n            temp=Q[x]\n            x+=1\n        else:\n            temp=Q[y]\n            y-=1\n        s[i]=temp\n        i-=1\n        if i<0:break\n    j+=1\n    if y<x:break\nprint(' '.join(map(str,s)))"]