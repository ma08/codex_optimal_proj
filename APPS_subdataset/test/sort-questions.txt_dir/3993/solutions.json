["n,m,k = list(map(int,input().split()))\n\nl = list(map(int,input().split()))\n\nout = 0\nd = 0\n\nwhile m > d:\n    nex = l[d]\n    page = (nex - d - 1)//k\n    add = 1\n    while d + add < m and (page * k) < l[d + add] - d  <= (page + 1) * k:\n        add += 1\n    d += add\n    out += 1\n\nprint(out)\n    \n", "import sys\n\nn, m, k = list(map(int,sys.stdin.readline().strip().split()))\np = list(map(int,sys.stdin.readline().strip().split()))\ni = 0\nc = 0\nd = 0\nwhile i < m:\n    c = c + 1\n    d2 = d\n    x = k*((p[i]-d2-1)//k) + k\n    while p[i]-d2 <= x:\n        i = i + 1\n        d = d + 1\n        if i == m:\n            break\nprint(c)\n\n", "n,m,k = list(map(int,input().split()))\nP = [int(x) for x in input().split()]\nP.reverse()\n\n# pages of size k\nops = 0\ni = 1\nwhile P:\n    # while space left\n    #   fill elements and count special\n    #   remove special\n    #   ops += 1\n\n    # put elements in while not special\n\n    # then onto next page\n\n    nxt = P[-1]\n    togo = nxt - i\n    skip = togo//k*k\n    i += skip\n\n    space = k\n    while space:\n        special = 0\n        while P and P[-1] < i + space:\n            special += 1\n            P.pop()\n        i += space\n        if not special:\n            break\n        ops += 1\n        space = special\n\nprint(ops)\n", "import sys\ninput = sys.stdin.readline\n\nn,m,k=list(map(int,input().split()))\nA=list(map(int,input().split()))\nA.append(n+1)\nCOMP=[]\nNOW=0\nfor a in A:\n    if a-NOW-1!=0:\n        if a-NOW-1>2*k:\n            COMP.append([(a-NOW-1)%k+k,0])\n        else:\n            COMP.append([a-NOW-1,0])\n    COMP.append([1,1])\n    NOW=a\n    \nCOMP.pop()\n\n#print(COMP)\n\nANS=0\nNOW_PAGE=0\nNOW_SCORE=0\n\npa=0\nLEN=len(COMP)\nwhile pa<LEN:\n    i,j=COMP[pa]\n  \n    if NOW_PAGE+i<=k:\n        NOW_PAGE += i\n        NOW_SCORE += j\n        pa+=1\n\n    else:\n        if NOW_SCORE>0:\n\n            COMP[pa][0]-=k-NOW_PAGE\n            NOW_PAGE=k-NOW_SCORE\n\n            ANS+=1\n            NOW_SCORE=0\n\n        else:\n            if NOW_PAGE==k:\n                NOW_PAGE=0\n                \n            else:              \n                COMP[pa][0]-=k-NOW_PAGE\n                NOW_PAGE=k-NOW_SCORE\n\n    #print(i,j,pa,NOW_PAGE,NOW_SCORE,ANS,COMP)\n\nif NOW_SCORE>0:\n    ANS+=1\n    \nprint(ANS)\n\n        \n        \n    \n", "n,m,k=map(int,input().split())\np=list(map(int,input().split()))\ncount=0\ndelete=0\nnow=0\nwhile now<m:\n    up=((p[now]-delete-1)//k+1)*k+delete\n    while now<m and p[now]<=up:\n        now+=1\n        delete+=1\n    count+=1\nprint(count)", "n, m, k = list(map(int, input().split()))\nmi = list(map(int, input().split()))\n\nans = 0\nitems_to_del = 0\nshift = 1\nc_page = None\nfor el in mi:\n    if c_page is None:\n        c_page = (el - shift) // k\n        items_to_del = 1\n    else:\n        page = (el - shift) // k\n        if page != c_page:\n            shift += items_to_del\n            ans += 1\n            c_page = (el - shift) // k\n            items_to_del = 1\n        else:\n            items_to_del += 1\nif items_to_del != 0:\n    ans += 1\nprint(ans)\n", "n, m, k = list(map(int, input().split(' ')))\np = tuple(map(int, input().split(' ')))\n\n\nd = 0\npart = (p[0]-1) // k\nmoves = 0\nskip = 0\n\nfor pi in p:\n    if (pi-1-d) // k == part:\n        skip += 1\n        continue\n    d += skip\n    part = (pi-1-d) // k\n    skip = 1\n    moves += 1\n\nprint(moves+1)\n", "import math\nimport collections\n\ndef func(a, k):\n    if a % k != 0:\n        mod = 1\n    else:\n        mod = 0\n    return math.floor(a / k) * k + mod * k\n \nn, m, k = input().split()\nlist = input().split()\nk = int(k)\ntemp = k\nsize = 0\nanswer = 0\nc = 0\nc2 = 0\ncheck = 'false'\nused = 0\n\ntemp = func(int(list[0]), k)\nfor i in range(len(list)):\n    list[i] = int(list[i])\n    used = 0\n    if list[i] <= temp:\n        c += 1\n        check = 'true'\n        used = 1\n    if list[i] >= temp:\n        if check is 'true':\n            answer += 1\n            check = 'false'\n            temp += c\n            c = 0\n            if list[i] - c <= temp and used == 0:\n                c += 1\n                check = 'true'\n                used = 1\n            else:\n                temp = temp + func(int(list[i]) - temp, k)\n                if list[i] - c <= temp and used == 0:\n                    c += 1\n                    check = 'true'\n                    used = 1\n        elif check is 'false':\n            temp = temp + func(int(list[i]) - temp, k)\n            if list[i] - c <= temp and used == 0:\n                c += 1\n                check = 'true'\n                used = 1\n    \n \nprint(answer if check is 'false' else answer + 1)", "n,m,k = list(map(int, input().split()))\ndiscard = list(map(int, input().split()))\nstartK = (int(discard[0]/k)+(discard[0] % k != 0)) * k\nstep = 0\nid = 0\nwhile True:\n    #print(\"startK\", startK)\n    disnum = 0\n    while (id < m and startK >= discard[id]):\n        disnum+=1\n        #print(discard[id], end = ' ')\n        id+=1\n    startK += disnum\n\n    if disnum == 0:\n        if id == m: break; \n        startK += int((discard[id] - startK)/k + ((discard[id] - startK) % k != 0)) * k\n    else:\n        step+=1\n        #print()\nprint(step)\n", "n,m,k = map(int,input().split())\np = list(map(int,input().split()))\n\npage = k*((p[0]-1)//k+1)\nj = 0\nk_op = 0\ncfnt = 0\n\nwhile (j < m):\n  if (p[j] - cfnt > page):\n    cfnt = j\n    page = k*((p[j]-cfnt-1)//k+1)\n    k_op += 1\n    j -= 1\n  j += 1\n\nprint(k_op+1)", "n,m,k=map(int,input().split())\np=list(map(int,input().split()))\np=[p[i]-1 for i in range(m)]\npage=[(p[i]-i)//k for i in range(m)]\nsame=0\npos=[0]*m\nfor i in range(m):\n    if i>0:\n        if page[i]==page[i-1]:\n            same+=1\n        else:\n            same=0\n    pos[i]=(p[i]-i)%k+same\ncurr=page[0]\npages=[[]]\nfor i in range(m):\n    if page[i]==curr:\n        pages[-1].append(pos[i])\n    else:\n        curr=page[i]\n        pages.append([pos[i]])\ntot=0\nfor page in pages:\n    a=len(page)\n    ind=0\n    end=k\n    steps=1\n    while ind<a:\n        if page[ind]>=end:\n            end=k+ind\n            steps+=1\n        ind+=1\n    tot+=steps\nprint(tot)", "n, m, k = map(int, input().split())\np = list(map(int, input().split()))\nrev = 1\nnew_rev = 1\npage = None\ncount = 0\nfor i in range(m):\n    if (p[i] - rev) // k != page:\n        count += 1\n        rev = new_rev\n        page = (p[i] - rev) // k\n    new_rev += 1\nprint(count)", "n,m,k = list(map(int, input().split()))\np = list(map(int, input().split()))\ndeleted, right = 0, 0\nc = 0\nmoves = 0\nwhile c < m:\n    right = (1+(p[c]-deleted-1)//k)*k+deleted\n    while c < len(p) and p[c] <= right:\n        c += 1\n        deleted += 1\n    moves += 1\n\nprint(moves)\n", "n,m,k=list(map(int,input().split()))\na=sorted(map(int,input().split()))\nd=0\ni=0\nt=0\nwhile i<len(a):\n    p=(a[i]-d-1)//k\n    j=i\n    while j<len(a) and (a[j]-d-1)//k==p:\n        j+=1\n    d+=j-i\n    t+=1\n    i=j\nprint(t)\n", "n, m, k = [int(i) for i in input().split()]\nlst = [int(j) for j in input().split()]\nresult, new_result = 1, 1\npage, count = None, 0\nfor i in range(m):\n    if (lst[i] - result) // k != page:\n        count += 1\n        result = new_result\n        page = (lst[i] - result) // k\n    new_result += 1\nprint(count)\n\n", "# from math import *\nfrom decimal import Decimal\ndef ceil(n,k):\n\tif(n%k!=0):\n\t\treturn n//k+1\n\treturn n//k\nn,m,k=map(int,input().split())\na=list(map(int,input().split()))\ni=0\ndif=0\nans=0\nwhile(i<m):\n\tgp=ceil(a[i]-dif,k)\n\twhile(i<m):\n\t\tif(ceil(a[i]-dif,k)==gp):\n\t\t\ti+=1\n\t\telse:\n\t\t\tdif=i\n\t\t\tbreak\n\tans+=1\nprint(ans)", "n,m,k=map(int,input().split())\na=sorted(map(int,input().split()))\nd=0\ni=0\nt=0\nwhile i<len(a):\n    p=(a[i]-d-1)//k\n    j=i\n    while j<len(a) and (a[j]-d-1)//k==p:\n        j=j+1\n    d=d+j-i\n    t=t+1\n    i=j\nprint(t)", "\nR = lambda :list(map(int,input().split()))\nn,m,k = R()\nl = R()\n\nq = 0\nt = 1\nnb = 0\nfor i in range(m-1) :\n\tif ((l[i+1]-1-q)//k) == ( ( (l[i]-1-q)//k)) :\n\t\tt += 1\n\t\tpass\n\telse :\n\t\tnb +=1\n\t\tq += t\n\t\tt = 1\n\nprint(nb+1)\n\n\n\n", "n, m, k = list(map(int, input().split()))\nps = list(map(int, input().split()))\nshift = 0\nres = 0\nind = 0\n\nwhile len(ps) > ind:\n    res += 1\n    first = ((ps[ind] - shift) - 1) // k * k + 1\n    ds = 0\n    while len(ps) > ind and ((ps[ind] - shift) - first < k):\n        ds += 1\n        ind += 1\n    shift += ds\n\nprint(res)\n", "n, m, k = map(int, input().split())\narr = map(int, input().split())\nanswer = 0\ncur_page = -1\nremoved = 0\nfor i, el in enumerate(arr):\n    if (el - removed - 1) // k != cur_page:\n        answer += 1\n        removed = i\n        cur_page = (el - removed - 1) // k\nprint(answer)", "n, m, k = list(map(int, input().split()))\narr = list(map(int, input().split()))\nres, i = 1, 0\nf = (arr[0] - 1) // k * k + 1\ne = f + k - 1\nwhile e < arr[-1]:\n    d = 0\n    while i + d < m and arr[i+d] <= e: \n        d += 1\n    i += d\n    if d > 0: \n        e += d\n        res += 1\n    else:\n        f = e + 1\n        f += (arr[i] - f) // k * k\n        e = f + k - 1\nprint(res)\n", "n, m, k = map(int, input().split())\np = list(map(int, input().split()))\np = list(map(lambda x: x-1, p))\ndis = 0\nans = 0\ncnt = 1\n\nfor i in range(m-1):\n    if (p[i]-dis)//k!=(p[i+1]-dis)//k:\n        dis += cnt\n        ans += 1\n        cnt = 1\n    else:\n        cnt += 1\n\nans += 1\n\nprint(ans)", "from collections import deque\nn,m,k=list(map(int,input().split()))\np=deque(int(x) - 1 for x in input().split())\nnumRemoved = 0\nops = 0\nwhile len(p) > 0:\n    currRemoved = 1\n    front = p.popleft()\n    currPage = (front - numRemoved)//k\n    #print(str(ops) + \": \" + str(front))\n    while (len(p) > 0 and (p[0] - numRemoved)//k == currPage):\n        currRemoved += 1\n        p.popleft()\n    ops += 1\n    numRemoved += currRemoved\nprint(ops)\n    \n", "n,m,k=map(int,input().split())\nl=list(map(int,input().split()))\nbeg=1\ncnt=0   \ni=0\nj=0\nele=0\nwhile i<m:\n    end=((l[i]-ele-1)//k+1)*k+ele\n    while i<m and l[i]<=end:\n        i+=1\n        ele+=1\n    \n    \n    cnt+=1\nprint(cnt)", "n, m, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nd, i, t = 0, 0, 0\nwhile i < m:\n    pg = (a[i] - d - 1)//k\n    j = i\n    while j < m and (a[j] - d - 1)//k == pg:\n        j += 1\n    d += j - i\n    t += 1\n    i = j\nprint(t)\n"]