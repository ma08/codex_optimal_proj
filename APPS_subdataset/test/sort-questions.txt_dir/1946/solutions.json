["\nimport sys\n#sys.stdin=open(\"data.txt\")\ninput=sys.stdin.readline\n\nd={}\n\nn=int(input())\nfor _ in range(n):\n    i,j=map(int,input().split())\n    d[i]=j\nm=int(input())\nfor _ in range(m):\n    i,j=map(int,input().split())\n    if i in d and d[i]>j: continue\n    d[i]=j\n\nans=0\nfor i,j in d.items():\n    ans+=j\nprint(ans)", "n=int(input())\ndi={}\nfor i in range(n):\n  a,b=(list(map(int,input().strip().split(' '))))\n  try:\n    p=di[a]\n    di[a]=max(di[a],b)\n  except KeyError:\n    di[a]=b\nm=int(input())\nfor i in range(m):\n  a,b=(list(map(int,input().strip().split(' '))))\n  try:\n    p=di[a]\n    di[a]=max(di[a],b)\n  except KeyError:\n    di[a]=b\nans=0\nfor i in di:\n  ans+=di[i]\nprint(ans)\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun May 27 20:07:20 2018\n\n@st0rmbring3r\n\"\"\"\n\ncost_dict = {}\n\na = int(input())\nfor i in range(a):\n    x,y = [int(x) for x in input().split()]\n    cost_dict[x] = y\n\nb = int(input())\nfor i in range(b):\n    x,y = [int(x) for x in input().split()]\n    if x in cost_dict:\n        y2 = cost_dict[x]\n        cost_dict[x] = max(y,y2)\n    else:\n        cost_dict[x] = y\n\nprint(sum(cost_dict.values()))", "# python3\n\n\ndef readline(): return tuple(map(int, input().split()))\n\n\ndef readlines(count): return (readline() for __ in range(count))\n\n\ndef main():\n    n, = readline()\n    z = dict(readlines(n))\n\n    m, = readline()\n    for (b, y) in readlines(m):\n        z[b] = max(z.setdefault(b, y), y)\n\n    print(sum(z.values()))\n\n\nmain()\n", "a = {}\nb = {}\nfor i in range(int(input())):\n    ID, val = [int(j) for j in input().split(' ')]\n    a[ID] = val\nfor i in range(int(input())):\n    ID, val = [int(j) for j in input().split(' ')]\n    b[ID] = val\n\nbadA = []\nbadB = []\nfor k in a:\n    if k in b and b[k] > a[k]:\n        badA.append(k)\n    elif k in b:\n        badB.append(k)\n\nfor k in badA:\n    del a[k]\nfor k in badB:\n    del b[k]\n\ns = 0\nfor k in a:\n    s += a[k]\nfor k in b:\n    s += b[k]\nprint(s)", "n=int(input())\ns = {}\nfor i in range(n):\n    a , b = list(map(int , input().split()))\n    s[a] = b\nm = int(input())\nfor j in range(m):\n    a,b = list(map(int , input().split()))\n    if a in s:\n        s[a] = max(s[a] , b)\n    else:\n        s[a] = b\nans = 0 \nfor i in s  :\n\n    ans +=s[i]\nprint(ans)\n    \n", "from collections import defaultdict\n\nn = int(input())\ncost = defaultdict(int)\nfor _ in range(n):\n    a, x = [int(x) for x in input().split()]\n    cost[a] = max(cost[a], x)\n\nm = int(input())\n\nfor _ in range(m):\n    a, x = [int(x) for x in input().split()]\n    cost[a] = max(cost[a], x)\n\nprint(sum(cost.values()))\n", "elA = dict()\nelAs = set()\nelB = dict()\nelBs = set()\ns = 0\nn = int(input())\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    elA[x] = y\n    elAs.add(x)\nm = int(input())\nfor i in range(m):\n    x, y = list(map(int, input().split()))\n    elB[x] = y\n    elBs.add(x)\nw = elAs & elBs\nfor k in w: s += max(elA[k], elB[k])\nfor k in elAs:\n    if k not in w: s += elA[k]\nfor k in elBs:\n    if k not in w: s += elB[k]\nprint(s)\n", "d = {}\nn = int(input())\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    if x in d:\n        d[x] = max(d[x], y)\n    else:\n        d[x] = y\nn = int(input())\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    if x in d:\n        d[x] = max(d[x], y)\n    else:\n        d[x] = y\ns = 0\nfor a in d:\n    s += d[a]\nprint(s)", "def getIntList():\n    return list(map(int, input().split()));\ndef getTransIntList(n):\n    first=getIntList();\n    m=len(first);\n    result=[[0]*n for _ in range(m)];\n    for i in range(m):\n        result[i][0]=first[i];\n    for j in range(1, n):\n        curr=getIntList();\n        for i in range(m):\n            result[i][j]=curr[i];\n    return result;\nn=int(input());\na, x=getTransIntList(n);\nm=int(input());\nb, y=getTransIntList(m);\ndef solve():\n    d=dict();\n    for i in range(n):\n        currA=a[i];\n        currX=x[i];\n        d[currA]=currX;\n    for j in range(m):\n        currB=b[j];\n        currY=y[j];\n        d[currB]=max(d.get(currB, 0), currY);\n    result=0;\n    for key in list(d.keys()):\n        result+=d[key];\n    return result;\nprint((solve()));\n", "n=int(input())\nans={}\nfor i in range(n):\n    a,x=list(map(int,input().split()))\n    ans[a]=x\nm=int(input())\nfor i in range(m):\n    a,x=list(map(int,input().split()))\n    if a in ans:\n        if ans[a]<x:\n            ans[a]=x\n    else:\n        ans[a]=x\ns=0\nfor i in ans:\n    s+=ans[i]\nprint(s)\n", "d = {}\nn = int(input())\nfor i in range(n):\n    j, k = list(map(int, input().split()))\n    d[j] = k\n\nm = int(input())\nfor i in range(m):\n    j, k = list(map(int, input().split()))\n    if j in d:\n        d[j] = max(d[j], k)\n    else:\n        d[j] = k\n\nss = 0\nfor i, v in d.items():\n    # print(i, v)\n    ss += v\nprint(ss)", "n=int(input())\nsum1=0\nfo=dict()\nfor i in range(n):\n    x,y=map(int,input().split())\n    fo[x]=y\n    sum1+=y\nto=dict()\nm=int(input())\nfor i in range(m):\n    x,y=map(int,input().split())\n    if(x in fo):\n        if(fo[x]<y):\n            sum1-=fo[x]\n            sum1+=y\n    else:\n        sum1+=y\nprint(sum1)", "n = int(input())\na = {}\nfor _ in range(n):\n    aa, xx = [int(v) for v in input().split()]\n    a[aa] = xx\n\nm = int(input())\nb = {}\nfor _ in range(m):\n    bb, yy = [int(v) for v in input().split()]\n    b[bb] = yy\n\nsa = set(a.keys())\nsb = set(b.keys())\nboth = sa & sb\n\nprint(\n    sum(max(a[v], b[v]) for v in both) +\n    sum(a[v] for v in sa - both) +\n    sum(b[v] for v in sb - both)\n)", "d = {}\n\nn = int(input())\nfor i in range(n):\n    num,pro = map(int,input().split())\n    try:\n        d[num] = max(d[num],pro)\n    except:\n        d[num]=pro\nm = int(input())\nfor i in range(m):\n    num,pro = map(int,input().split())\n    try:\n        d[num] = max(d[num],pro)\n    except:\n        d[num]=pro\nans = 0 \nfor ele in d:\n    ans+=d[ele]\nprint(ans)", "from collections import defaultdict as dd, deque\n\nE = set()\n\nn = int(input())\nC1 = dd(int)\nfor _ in range(n):\n    i,c = list(map(int,input().split()))\n    C1[i] = c\n    E.add(i)\n\nm = int(input())\nC2 = dd(int)\nfor _ in range(m):\n    i,c = list(map(int,input().split()))\n    C2[i] = c\n    E.add(i)\n\ne = 0\nfor el in E:\n    e += max(C1[el],C2[el])\nprint(e)\n", "import sys\n#sys.stdin = open(\"2.in\") # COMMENT THIS BEFORE SUBMIT\ninput = sys.stdin.readline\n\nN = int(input())\nA = set()\nX = {}\nfor i in range(N):\n\ta,x = map(int,input().split())\n\tA.add(a)\n\tX[a] = x\nM = int(input())\nB = set()\nY = {}\nfor i in range(M):\n\tb,y = map(int,input().split())\n\tB.add(b)\n\tY[b] = y\n\ns1 = sum([X[x] for x in A - B])\ns2 = sum([Y[y] for y in B - A])\ns3 = sum([max(X[x],Y[x]) for x in A & B])\nprint(s1+s2+s3)", "m=int(input())\nd={}\nfor i in range(m):\n  a,v=map(int,input().split())\n  d[a]=v\nn=int(input())\nfor i in range(n):\n  a,v=map(int,input().split())\n  if(a in d):\n    d[a]=max(d[a],v)\n  else:\n    d[a]=v\n#print(d)\nl=d.values()\nprint(sum(l))", "#!/usr/bin/env python3\n\nn = int(input().strip())\na = [tuple(map(int, input().strip().split())) for _ in range(n)]\nm = int(input().strip())\na.extend(tuple(map(int, input().strip().split())) for _ in range(m))\n\na.sort()\na.append((0, 0))\nres = 0\ni = 0\nwhile i < n + m:\n\tif a[i][0] == a[i + 1][0]:\n\t\tres += max(a[i][1], a[i + 1][1])\n\t\ti += 2\n\telse:\n\t\tres += a[i][1]\n\t\ti += 1\n\n\nprint (res)\n", "n=int(input())\nd=dict()\nfor i in range(n):\n    a,b=list(map(int,input().split()))\n    try:\n        d[a]=max(d[a],b)\n    except:\n        d.update({a:b})\nm=int(input())\nfor i in range(m):\n    a,b=list(map(int,input().split()))\n    try:\n        d[a]=max(d[a],b)\n    except:\n        d.update({a:b})\nans=0\nfor i in d:\n    ans+=d[i]\nprint(ans)\n", "from collections import defaultdict as dd\nd = dd(int)\n\nn = int(input())\nfor _ in range(n):\n    a, x = list(map(int, input().split()))\n    d[a] = x\nm = int(input())\nfor _ in range(m):\n    b, y = list(map(int, input().split()))\n    if y > d[b]:\n        d[b] = y\nprint(sum(d.values()))\n", "def solution():\n    n = int(input())\n    d1, d2 = dict(), dict()\n    for _ in range(n):\n        key, value = list(map(int, input().split()))\n        d1[key] = value\n    m = int(input())\n    for _ in range(m):\n        key, value = list(map(int, input().split()))\n        d2[key] = value\n\n    for key, value in list(d2.items()):\n        if key in d1:\n            if d2[key] > d1[key]:\n                d1[key] = value\n        else:\n            d1[key] = value\n    print(sum(d1.values()))\n\n\n\nsolution()\n", "se = set()\nn = int(input())\ncf = {}\nfor i in range(n):\n    a,x = [int(s) for s in input().split()]\n    cf[a] = x\n    se.add(a)\nm = int(input())\ntc = {}\nfor i in range(m):\n    b,y = [int(s) for s in input().split()]\n    tc[b] = y\n    se.add(b)\n\nsum = 0\nfor e in se:\n    sum += max(cf.get(e, 0), tc.get(e, 0))\n\nprint(sum)", "a_size = int(input())\nelements = {}\nfor _ in range(a_size):\n    index, price = map(int, input().split())\n    elements[index] = price\n    \nb_size = int(input())\nfor _ in range(b_size):\n    index, price = map(int, input().split())\n    elements[index] = max(price, elements.get(index, 0))\n    \nprint(sum(elements.values()))", "n = int(input())\nchemicals = {}\nfor i in range(n):\n    line = [int(el) for el in input().split()]\n    chemicals.update({line[0]: [line[1], 0]})\nm = int(input())\nfor i in range(m):\n    line = [int(el) for el in input().split()]\n    if line[0] not in chemicals.keys():\n        chemicals.update({line[0]: [0, line[1]]})\n    else:\n        chemicals[line[0]][1] = line[1]\nmax_sum = 0\nfor chemical in chemicals.keys():\n    max_sum += max(chemicals[chemical])\nprint(max_sum)"]