["n, m = (int(x) for x in input().split())\nwinners = [0] * n\nfor i in range(m):\n\ta = [int(x) for x in input().split()]\n\twinners[a.index(max(a))] += 1\nprint(winners.index(max(winners)) + 1)\n", "n, m = map(int, input().split())\nvotes = [0] * n\nfor i in range(m):\n    row = list(map(int, input().split()))\n    rowmax = max(row)\n    votes[row.index(rowmax)] += 1\nvotmax = max(votes)\nprint(votes.index(votmax) + 1)", "n, m = [int(i) for i in input().split()]\na = []\nb = [0] * n\nfor i in range(m):\n    a.append([int(j) for j in input().split()])\n    k = 0\n    for j in range(1, n):\n        if a[-1][j] > a[-1][k]:\n            k = j\n    a[-1] = k\n    b[k] += 1\nq = max(b)\nfor i in range(n):\n    if b[i] == q:\n        print(i + 1)\n        return\n", "n, m = [int(i) for i  in input().split()]\nh = [0 for i in range(n)]\nfor i in range(m):\n    s = [int(i) for i  in input().split()]\n    h[s.index(max(s))]+=1\nprint(h.index(max(h))+1)\n", "n, m = list(map(int, input().split()))\np = [0] * n\nfor i in range(m):\n    a = list(map(int, input().split()))\n    q = max(a)\n    for t in range(n):\n        if a[t] == q:\n            r = t\n            break\n    p[t] += 1\nq = max(p)\nfor i in range(n):\n    if p[i] == q:\n        print(i + 1)\n        break\n", "n,m=list(map(int,input().split(' ')))\nc=[]\nfor i in range(m):\n    c.append(list(map(int,input().split(' '))))\nd=[]\nfor i in range(n):\n    d.append(0)\nfor i in c:\n    d[i.index(max(i))]+=1\nprint(d.index(max(d))+1)\n", "n, m = list(map(int, input().split()))\nwon = [0] * n\nvot = [list(map(int, input().split())) for i in range(m)]\nfor i in range(m):\n    ma = max(vot[i])\n    for j in range(n):\n        if vot[i][j] == ma:\n            won[j] += 1\n            break\nma = max(won)\nfor i in range(n):\n    if ma == won[i]:\n        print(i + 1)\n        return\n        \n", "n,m=list(map(int,input().split()))\nk=[0]*n\nfor i in range(m):\n  l=list(map(int,input().split()))\n  t=max(l)\n  k[l.index(t)]+=1\nt=max(k)\nprint(k.index(t)+1)\n", "import collections\ndef f():\n    n,m  = [int(c) for c in input().split()]\n\n    r = []\n    for i in range(m):\n        a = [int(c) for c in input().split()]\n        jj = a.index(max(a)) + 1\n        r.append(jj)\n\n    c = collections.Counter(r)\n    mm = 0\n    for k in c:\n        if c[k] > mm:\n            mm = c[k]\n\n    for k in sorted(c.keys()):\n        if c[k] == mm:\n            return k\n\nprint(f())", "def won(l):\n    l = list(l)\n    return l.index(max(l))\n\ndef readline():\n    return (int(i) for i in input().split())\n\nn, m = readline()\nfirst_winners = (won(readline()) for i in range(m))\n\na = [0] * n\nfor i in first_winners:\n    a[i] += 1\n\nprint(won(a) + 1)\n", "#import math\nn,m=[int(x) for x in input().split(\" \")]\nvictorias = [0 for x in range(n)]\nfor i in range(m):\n    puntajes=[int(x) for x in input().split(\" \")]\n    ganador = puntajes.index(max(puntajes))\n    victorias[ganador]+=1\nprint(victorias.index(max(victorias))+1)\n", "n, m = list(map(int, input().split()))\nlst = [[int(x) for x in input().split()] for _ in range(m)]\n\ntmp_lst = []\n\nfor row in lst:\n\t\n\ttmp_lst.append(row.index(max(row)))\n\ntmp_tmp_lst = [0] * (n+7)\n\nfor x in tmp_lst:\n\ttmp_tmp_lst[x] += 1\n\n\nprint(tmp_tmp_lst.index(max(tmp_tmp_lst))+1)\n", "n, m = map(int, input().split())\nanswer = [0] * n\n\nfor i in range(m):\n    l = list(map(int, input().split()))\n    answer[l.index(max(l))] += 1\n\nprint(answer.index(max(answer)) + 1)", "n, m = list(map(int,input().split()))\nij = [list(map(int,input().split())) for i in range(m)]\nni = [0] * n\nfor i in range(m):\n    maxi = 0\n    num = 0\n    for j in range(n):\n        if ij[i][j] > maxi:\n            maxi = ij[i][j]\n            num = j\n    ni[num] += 1\nmaxi = 0\nnum = 0\nfor i in range(n):\n    if ni[i] > maxi:\n        maxi = ni[i]\n        num = i\nprint(num+1)\n", "n,m = map(int,input().split())\nb = [0] * (n+1)\nfor i in range(m):\n    a = list(map(int,input().split()))\n    max_ = -1\n    index_max = -1\n    for j in range(len(a)):\n        if (a[j] > max_):\n            max_ = a[j]\n            index_max = j\n    b[index_max] += 1\nmax_ = -1\nindex_max = -1\nfor i in range(len(b)-1):\n    if (b[i] > max_):\n        max_ = b[i]\n        index_max = i\nprint(index_max+1)", "n, m = [int(i) for i in input().split()]\ncnt = list([0]*(n+1))\nfor i in range(m):\n    votes = [int(num) for num in input().split()]\n    maxnum = max(votes)\n    cnt[votes.index(maxnum)] += 1\nmaxnum = max(cnt)\nprint(cnt.index(maxnum)+1)\n", "n, m = map(int, input().split())\nresults = [ 0 ] * n\nfor _ in range(m):\n  votes = [ int(vote) for vote in input().split() ]\n  maxvote = -1\n  winnercity = -1\n  for i in range(n):\n    if votes[i] > maxvote:\n      maxvote = votes[i]\n      winnercity = i\n  results[winnercity] += 1\n\nmaxvote = -1\nwinnercity = -1\nfor i in range(n):\n  if results[i] > maxvote:\n    maxvote = results[i]\n    winnercity = i\n\nprint(winnercity+1)", "n,m = list(map(int, input().split()))\ncandidates= n * [0]\nfor i in range(0, m):\n    l = list(map(int, input().split()))\n    candidates[l.index(max(l))] += 1\n\n\nprint (candidates.index(max(candidates)) + 1)", "\nimport math\nimport sys\n\nx=list(map(int,input().split()))\nn=x[0]\nm=x[1]\n\nW=[]\nNW=[]\n\nfor i in range(0,n):\n    NW.append(0)\n\n\nfor i in range(0,m):\n    l=list(map(int,input().split()))\n    k=max(l)\n    for j in range(0,n):\n        if l[j] == k:\n            w=j\n            break\n    W.append(w)\n\nfor i in range(0,m):\n    NW[W[i]]+=1\n\nk=max(NW)\n\nfor i in range(0,n):\n    if NW[i] == k:\n        w=i+1\n        break\nprint(w)\n    \n\n\n    \n\n\n    \n", "n,m=[int(x) for x in input().split()]\nL=[0]*(n+1)\nfor i in range(m):\n    l=[int(x) for x in input().split()]\n    max=-1\n    for i in range(n):\n        if l[i]>max:\n            maxval=i+1\n            max=l[i]\n    L[maxval]+=1\nmax=-1\nfor i in range(n+1):\n    if L[i]>max:\n        maxval=i\n        max=L[i]\nprint(maxval)\n", "n, m = map(int, input().split(' '))\na = []\nfor i in range(m):\n    a.append(list(map(int, input().split(' '))))\n\nv = [0]*n\nfor aa in a:\n    v[aa.index(max(aa))] += 1\n\nprint(v.index(max(v))+1)", "n,m = list(map(int, input().split()))\na = []\nansw = []\nfor i in range(m):\n    answ.append([])\nfor i in range(m):\n    a.append([])\nfor i in range(m):\n    a[i] = list(map(int, input().split()))\nfor i in range(m):\n    v = a[i]\n    mn = max(v)\n    k = 0\n    for j in reversed(list(range(n))):\n        if a[i][j] == mn:\n            k = j\n    answ[i] = k\nansw_k = []\nfor i in range(n):\n    answ_k.append(0)\nfor i in range(len(answ)):\n    answ_k[answ[i]] += 1\nmn = max(answ_k)\nfor i in range(n):\n    if answ_k[i] == mn:\n        print(i+1)\n        return\n", "import sys; sys.setrecursionlimit(1000000)\ndef solve():\n    n,m, = rv()\n    citieswon = [0] * n\n    for city in range(m):\n        a, = rl(1)\n        index = 0\n        for i in range(n):\n            if a[i] > a[index]:\n                index = i\n        citieswon[index] += 1\n    cityindex = 0\n    for i in range(n):\n        if citieswon[i] > citieswon[cityindex]:\n            cityindex = i\n    print(cityindex + 1)\n\n\n\n\ndef rv(): return list(map(int, input().split()))\ndef rl(n): return [list(map(int, input().split())) for _ in range(n)]\nif sys.hexversion == 50594544 : sys.stdin = open(\"test.txt\")\nsolve()\n\n\n"]