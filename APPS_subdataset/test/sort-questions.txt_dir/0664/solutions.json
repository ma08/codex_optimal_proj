["n = int(input())\na = list(map(int, input().split()))\nd = []\nfor i in range(1, n):\n    d.append(a[i] - a[i - 1])\nd.append(a[0] - a[n - 1])\ncnt = 0\nfor i in range(0, n):\n    if d[i] < 0:\n        cnt += 1\n        pos = i\nif cnt == 0:\n    print(0)\nelif cnt > 1:\n    print(-1)\nelse:\n    print(n - pos - 1)\n", "import sys\nn = int(input())\nl = [int(i) for i in input().split()]\nl += [l[0]]\njump = False\nj = -1\nm = l[0]\nfor i in range(n):\n    if l[i] > l[i+1]:\n        if jump:\n            print(-1)\n            return\n        jump = True\n        j = i\n    else:\n        if jump:\n            if l[i] > m:\n                print(-1)\n                return\n            \nif j == -1:\n    print(0)\nelse:\n    print(n-j-1)\n", "n = int(input())\na = list(map(int,input().split(' ')))\np = 0\nfor i in range(n-1):\n\tif(a[i]>a[i+1]):\n\t\tp = i+1\nb = a[p:]+a[:p]\nfor i in range(n-1):\n\tif(b[i]>b[i+1]):\n\t\tprint(-1)\n\t\tbreak\nelse:\n\tprint((n-p)%n)", "#input\nn=int(input())\nalist=[int(x) for x in input().split()]\n\n#variables\nfault=0\n\n#start of program\nfor i in range(n):\n\tif alist[i-1]<=alist[i]:\n\t\tpass\n\n\telse:\n\t\tfault+=1\n\t\tif fault>1:\n\t\t\tprint(-1)\n\t\t\tquit()\n\t\tf=i\n\nif fault==0:\n\tprint(0)\n\tquit()\n\nprint((n-f)%n)", "N = int(input())\nplace = N\nword = True\nnumbers = list(map(int, input().split()))\nfor i in range(1, N):\n    if numbers[i] < numbers[i - 1]:\n        place = i\n        for i in range(place + 1, place + N):\n            if numbers[i % N] < numbers[i % N - 1]:\n                word = False\n                break\n        break\nif word == False:\n    print(-1)\nelse:\n    print(N - place)", "def s(a, i):\n   s = i\n   while i+1 < len(a):\n      if a[i] <= a[i+1]:\n         i += 1\n      else:\n        return a[s:i+1]\n   return a[s:i+1]\n\nn = int(input())\na = list(map(int,input().split()))\nb = s(a,0)\nc = s(a,len(b))\nif len(b) == n:\n   print(0)\nelif len(b) + len(c) == n and c[len(c)-1] <= b[0]:\n    print(len(c))\nelse:\n   print(-1)\n", "n = int(input())\na = input().split(' ')\npre = int(a[0])\npos = n\nfor i in range(1,n):\n    x = int(a[i])\n    if x<pre:\n        pre = x\n        pos = i\n        break\n    pre = x\nif pos==n:\n    print(0)\nelse:\n    ans = 0\n    for j in range(pos,n):\n        x = int(a[j])\n        if x<pre:\n            ans = -1\n            break\n        pre = x\n    if ans==-1:\n        print(-1)\n    elif int(a[n-1])>int(a[0]):\n        print(-1)\n    else:\n        print (n-pos)", "def is_sorted(a):\n    for i in range(1, len(a)):\n        if a[i - 1] > a[i]:\n            return False\n    return True\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    if is_sorted(a):\n        return 0\n    for i in range(1, len(a)):\n        if a[i - 1] > a[i]:\n            if is_sorted(a[i:] + a[:i]):\n                return n - i\n            else:\n                return -1\n\nprint(solve())", "n = int(input())\na = list(map(int, input().split()))\nk = -1\nfor i in range(n - 1):\n  if a[i] > a[i + 1]:\n    k = i + 1\n    break\nelse:\n  print(0)\n  return\nfor i in range(k, n - 1):\n  if a[i] > a[0] or a[i] > a[i + 1]:\n    print(-1)\n    return\nif a[k] > a[0] or a[-1] > a[0]:\n  print(-1)\nelse:\n  print(n - k)", "n = int(input())\na = list(map(int,input().split()))\n\nsub = []\nfor i in range(1,n):\n    x = a[i] - a[i-1]\n    sub.append(x)\nsub.append(a[0]-a[-1])\n\nc =  0\nfor i in range(n):\n    if sub[i] < 0:\n        c += 1\n        pos = i\n#print(sub)\nif c == 0 :\n    print(0)\nelif c > 1:\n    print(-1)\nelse:\n    print(n - pos - 1)\n        \n", "n=int(input())\na=list(map(int,input().split()))\nk=0\nfor i in range(n-1):\n    if a[i]>a[i+1]:\n        k+=1\nif k==0:\n    print(0)\nelif k>1 or a[n-1]>a[0]:\n    print(-1)\nelse:\n    for i in range(n):\n        if a[i]>a[i+1]:\n            print(n-i-1)\n            break", "n = int(input())\na = []\nID = input().split()\n\nfor i in range(n):\n    a.append(int(ID[i]))\n\nk = 0\nwhile (k < n - 1 and a[k] <= a[k + 1]):\n    k += 1\n    \ni = k + 1\nflag = False\nwhile (i < n - 1):\n    if (a[i] > a[i + 1]):\n        flag = True\n    i += 1\n\nif (k < n - 1 and a[n - 1] > a[0]):\n    flag = True\n    \nif flag == True:\n    print(-1)\nelse:\n    print(n - 1 - k)\n    \n", "n=int(input())\nlst=list(map(int, input().split(' ')))\ndiffs=[]\nfor t in range(len(lst)-1):\n    diffs.append(lst[t+1]-lst[t])\ndiffs.append(lst[0]-lst[-1])\nlista=[x for x in diffs if x<0]\n\nif len(lista)!=1:\n    if max(diffs)==0:\n        print(0)\n    else:\n        print(-1)\nelse:\n    diffs.reverse()\n    index=diffs.index(lista[0])\n    if index==0:\n        print(0)\n    else:\n        print(index)\n", "n = int(input())\na = list(map(int,input().split()))\nb = -1\nfor i in range(1,n):\n\tif a[i-1]>a[i]:\n\t\tb = i\n\t\tbreak\nif b==-1:\n\tprint(0)\nelse:\n\tc = a[b:]+a[:b]\n\tflag = 0\n\tfor i in range(1,n):\n\t\tif c[i]<c[i-1]:\n\t\t\tflag = 1\n\t\t\tbreak\n\tif flag == 1:\n\t\tprint(-1)\n\telse:\n\t\tprint(n-b)\n\n\n\n", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    im = 1;\n    while im < n and a[im] >= a[im - 1]:\n        im += 1\n\n    if sorted(a[im:] + a[:im]) == (a[im:] + a[:im]):\n        print(n - im)\n    else:\n        print(-1)\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "import sys\n\ndef minindex(alist):\n    index = -1\n    min = 1000000\n    for idx, num in enumerate(alist):\n        if num < min:\n            index = idx\n            min = num\n    return index\n            \ndef isSorted(array):\n    min = 0\n    for num in array:\n        if num < min:\n            return False\n        min = num\n    return True \n\n\nnums = int(sys.stdin.readline())\n\nnumbers = [int(num) for num in sys.stdin.readline().split()[0:nums]]\n\nindex = minindex(numbers)\nmin = numbers[index]\n\n\nmoves = 0\nif index == 0:\n    for num in range(nums-1, -1, -1):\n        if num == 0:\n            moves = 0\n            break\n        if numbers[num] == min:\n            moves = moves + 1\n        else:\n            break\n\n    newnumbers = numbers[index:nums-moves]\n    if isSorted(newnumbers):\n        print(moves)\n    else:\n        print(-1)\n\nelse:\n    newnumbers = numbers[index:]\n    newnumbers.extend(numbers[0:index])\n    if isSorted(newnumbers):\n        print(nums - index)\n    else:\n        print(-1)", "n = int(input())\na = list(map(int,input().split()))\nb = list()\nc = list()\nif a == list(sorted(a)):\n    print(0)\n    return\nfor i in range(1 , n):\n    if a[i] < a[i-1]:\n        b.append(i)\nans = True\nif len(b) == 1:\n    for i in range(b[0] , n):\n        c.append(a[i])\n    for i in range(b[0]):\n        c.append(a[i])\n    if c != list(sorted(a)):\n        ans = False\nif len(b) == 1 and ans:\n    print(n - b[0])\nelse:\n    print(-1)   ", "n = int(input())\na = list(map(int, input().split()))\np = 0\nfor i in range(n - 1):\n    if (a[i] > a[i + 1]):\n        p = i + 1\nb = a[p:] + a[:p]\nfor i in range(n - 1):\n    if (b[i] > b[i + 1]):\n        print(-1)\n        break\nelse:\n    print((n - p) % n)", "n = int(input())\na = list(map(int,input().split(' ')))\np = 0\nfor i in range(n-1):\n\tif(a[i]>a[i+1]):\n\t\tp = i+1\nb = a[p:]+a[:p]\nfor i in range(n-1):\n\tif(b[i]>b[i+1]):\n\t\tprint(-1)\n\t\tbreak\nelse:\n\tprint((n-p)%n)", "def naek(a,indeks):\n    for x in range(indeks,len(a)-1):\n        if a[x]>a[x+1]:\n            return False\n            pass\n        pass\n        pass\n    return True\n    pass\n\na=int(input())\na=list(map(int,input().split(\" \")))\nsor=True\nfor x in range(len(a)-1):\n    if a[x]>a[x+1]:\n        sor=False\n        idx=x+1\n        break\n        pass\n    pass\n\nif sor:\n    print (0)\nelse:\n    if naek(a,idx):\n        if a[len(a)-1] > a[0]:\n            print (-1)\n        else:\n            print (len(a)-idx)\n            pass\n        pass\n    else:\n        print (-1)        \n    pass", "def naek(a,indeks):\n    for x in range(indeks,len(a)-1):\n        if a[x]>a[x+1]:\n            return False\n            pass\n        pass\n        pass\n    return True\n    pass\n\ndum=0\na=int(input())\na=list(map(int,input().split(\" \")))\nsor=True\nfor x in range(len(a)-1):\n    if a[x]>a[x+1]:\n        sor=False\n        idx=x+1\n        break\n        pass\n    pass\n\nif sor:\n    print (0)\nelse:\n    if naek(a,idx):\n        if a[len(a)-1] > a[0]:\n            print (-1)\n        else:\n            print (len(a)-idx)\n            pass\n        pass\n    else:\n        print (-1)        \n    pass", "n=int(input())\na=list(map(int,input().split()))\na.reverse()\naa=a+a\nr=1\nl=0\nans=-1\nwhile r<2*n:\n    while r<2*n:\n        if aa[r-1]<aa[r]:\n            break\n        r+=1\n    if r-l>=n:\n        ans=l\n        break\n    l=r\n    r+=1\nprint(ans)", "n = list(map(int, input().split()))[0]\na = list(map(int, input().split()))\n\nflag = 0\nfor i in range(1,n):\n\tif a[i] < a[i-1]:\n\t\tflag = i\n\nans = True\nfor i in range (flag+1,n-1):\n\tif a[i+1] < a[i] :\n\t\tans = False\n\nfor i in range (flag-1) :\n\tif a[i+1] < a[i] :\n\t\tans = False\n\nif flag != 0 and a[n-1] > a[0] :\n\tans = False\n\nif not ans:\n\tprint(\"-1\")\nelse:\n\tprint((n-flag)%n)", "n = int(input())\nt = list(map(int, input().split()))\ni = 1\nwhile i < n and t[i] >= t[i - 1]: i += 1\nif i == n: print(0)\nelse:\n    j = i + 1\n    while j < n and t[j] >= t[j - 1]: j += 1\n    print(-1 if j < n or t[0] < t[-1] else n - i)", "import sys\n\nn = int(sys.stdin.readline())\n\nok = True \ninc = True\nlast, res, i   = 0,0,0\nfirst = 0\n\nfor num in sys.stdin.readline().split():\n\tnum = int(num)\n\tif first == 0:\n\t\tfirst = num\n\n\tif last > num:\n\t\tif inc:\n\t\t\tinc = False\n\t\t\tres = n - i\n\t\telse :\n\t\t\tok = False\n\tlast = num\t\n\ti = i + 1\n\nif last > first:\n\tif inc:\n\t\tpass\n\telse:\n\t\tok = False\n\t\nif ok:\n\tprint(res)\nelse:\n\tprint(-1)"]