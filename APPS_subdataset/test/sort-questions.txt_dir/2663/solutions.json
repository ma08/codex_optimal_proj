["\n\nimport heapq\n\n\ndef contig(p, A):\n ans = []\n n = len(A)\n for i in range(n):\n  for j in range(i, n):\n   if i == j:\n    ans.append(p[i])\n   else:\n    ans.append(p[j] - p[i])\n return ans\n\n\ndef solver(N, K, A):\n a = []\n prefix = [A[0]]\n for x in A[1:]:\n  prefix.append(prefix[-1] + x)\n\n return heapq.nlargest(K, contig(prefix, A))\n\n\ndef __starting_point():\n N, K = list(map(int, input().split()))\n A = list(map(int, input().split()))\n\n print(' '.join([str(i) for i in solver(N, K, A)]))\n\n__starting_point()", "__author__ = 'Deepak'\nn,k=list(map(int,input().split()))\na=list(map(int,input().split()))\nm=1\nd=[]\nwhile(m<=len(a)):\n for j in range(len(a)-m+1):\n  d.append(sum(list(a[j:j+m])))\n m+=1\n#print d\nd.sort(reverse=True)\nfor i in range(k):\n print(d[i], end=' ')\n", "n,k=list(map(int, input().split()))\na=list(map(int,input().split()))\ns=[]\nc=0\nfor i in range(1,n):\n a[i]+=a[i-1]\nfor i in range(n,0,-1):\n j=n\n while j-i!=0:\n  ld=j-i\n  m=a[ld-1]\n  s.append(a[ld+i-1]-m)\n  j-=1\n s.append(a[i-1])\ns.sort()\nfor i in range(len(s)-1, len(s)-k-1,-1):\n print(s[i], end=' ')\n", "def maxKSums():\n n, k = list(map(int, input().split()))\n a = list(map(int, input().split()))\n subSum = []\n for i in range(n):\n  sumd = 0\n  for j in range(i, n):\n   sumd += a[j]\n   subSum.append(sumd)\n subSum.sort(reverse=True)\n print(\" \".join(map(str, subSum[:k])))\n\nmaxKSums()\n", "def maxKSums():\n n, k = list(map(int, input().split()))\n a = list(map(int, input().split()))\n subSum = []\n for i in range(n):\n  sumd = 0\n  for j in range(i, n):\n   sumd += a[j]\n   subSum.append(sumd)\n subSum.sort(reverse=True)\n for i in range(k):\n  print(subSum[i], end=' ')\n\nmaxKSums()\n", "n,k=list(map(int,input().split()))\na=list(map(int,input().split()))\nans=\"\"\nb=[]\nfor i in range(n):\n for j in range(i+1,n+1):\n  b.append(sum(a[i:j]))\nb.sort()\nfor i in range(k):\n ans+= str(b[len(b)-i-1])+\" \"\nprint(ans)\n \n", "import math\n\n\nx=list(map(int,input().split()))\ny=list(map(int,input().split()))\nlt=[]\nln=len(y)\nfor j in range(ln):\n b=0\n while(b<(ln-j)):\n  lt.append(sum(y[b:b+j+1]))\n  #print sum(y[b:b+j])\n  b+=1\nlt.sort()\nlt.reverse()\nfor k in range(x[1]):\n print(lt[k], end=' ')\n \n \n   \n  \n", "n, k = list(map(int, input().split()))\narr = list(map(int, input().split()))\nans = []\nfor i in range(1, n+1):\n for j in range(n-i+1):\n  ans.append(sum(arr[j:j+i]))\nans.sort()\nans\nprint(str(list(reversed(ans[-k:]))).replace(\",\", \"\")[1:-1])\n", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\ncom = []\nfor i in range(n+1):\n for j in range(i+1,n+1):\n  com.append(sum(a[i:j]))\ncom = sorted(com, reverse = True)\nfor i in com[:k]:\n print(i, end=' ')\nprint(\"\")"]