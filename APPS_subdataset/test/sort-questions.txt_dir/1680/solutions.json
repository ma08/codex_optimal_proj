["def binary(n):\n    curr=0\n    while(n>0):\n        if(n%2):\n            curr+=1\n        n=n//2\n    return curr\nl=input().split()\nn=int(l[0])\nk=int(l[1])\nl=input().split()\nli=[int(i) for i in l]\narr=[]\nfor i in range(2**15):\n    if(binary(i)==k):\n        arr.append(i)\nhashi=dict()\nfor i in li:\n    if i in hashi:\n        hashi[i]+=1\n    else:\n        hashi[i]=1\ncount=0\nfor i in hashi:\n    for j in arr:\n        if((i^j) in hashi):\n            if((i^j)==i):\n                count=count+(hashi[i]*(hashi[i]-1))\n            else:\n                count=count+(hashi[i]*hashi[i^j])\nprint(count//2)", "from collections import defaultdict\nn, k = [int(i) for i in input().split()]\nA = [int(i) for i in input().split()]\n\nA_dict = defaultdict(int)\nfor i in A:\n    A_dict[i] += 1\n\ndef bitCount(x):\n    cur = 0\n    while x > 0:\n        if x % 2:\n            cur += 1\n        x //= 2\n    return cur\n\nmask = []\nfor i in range(2**15):\n    if bitCount(i) == k:\n        mask.append(i)\n\n\nans = 0\nfor i in A_dict:\n    for j in mask:\n        if i^j in A_dict:\n            if i^j == i:\n                ans += A_dict[i] * (A_dict[i]-1)\n            else:\n                ans += A_dict[i] * A_dict[i^j]\nprint(ans//2)\n"]