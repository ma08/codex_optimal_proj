["# for _ in range(1):\nfor _ in range(int(input())):\n    # a, b = map(int, input().split())\n    n = int(input())\n    arr = list(map(int, input().split()))\n    # s = input()\n    if [arr[0]] * n == arr:\n        print(n)\n    else:\n        print(1)\n", "import sys\nimport math\nimport itertools\nimport functools\nimport collections\nimport operator\nimport fileinput\nimport copy\n\nORDA = 97  # a\ndef ii(): return int(input())\ndef mi(): return map(int, input().split())\ndef li(): return [int(i) for i in input().split()]\ndef lcm(a, b): return abs(a * b) // math.gcd(a, b)\ndef revn(n): return str(n)[::-1]\ndef dd(): return collections.defaultdict(int)\ndef ddl(): return collections.defaultdict(list)\ndef sieve(n):\n    if n < 2: return list()\n    prime = [True for _ in range(n + 1)]\n    p = 3\n    while p * p <= n:\n        if prime[p]:\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n        p += 2\n    r = [2]\n    for p in range(3, n + 1, 2):\n        if prime[p]:\n            r.append(p)\n    return r\ndef divs(n, start=2):\n    r = []\n    for i in range(start, int(math.sqrt(n) + 1)):\n        if (n % i == 0):\n            if (n / i == i):\n                r.append(i)\n            else:\n                r.extend([i, n // i])\n    return r\ndef divn(n, primes):\n    divs_number = 1\n    for i in primes:\n        if n == 1:\n            return divs_number\n        t = 1\n        while n % i == 0:\n            t += 1\n            n //= i\n        divs_number *= t\ndef prime(n):\n    if n == 2: return True\n    if n % 2 == 0 or n <= 1: return False\n    sqr = int(math.sqrt(n)) + 1\n    for d in range(3, sqr, 2):\n        if n % d == 0: return False\n    return True\ndef convn(number, base):\n    new_number = 0\n    while number > 0:\n        new_number += number % base\n        number //= base\n    return new_number\ndef cdiv(n, k): return n // k + (n % k != 0)\ndef ispal(s):\n    for i in range(len(s) // 2 + 1):\n        if s[i] != s[-i - 1]:\n            return False\n    return True\n\n\nfor _ in range(ii()):\n    n = ii()\n    a = li()\n    if len(set(a)) == 1:\n        print(n)\n    else:\n        print(1)", "for _ in range(int(input())):\n    N =int(input())\n    List = [int(x) for x in input().split()]\n    if(List.count(List[0]) == N):\n        print(N)\n    else:\n        print(1)", "t = int(input())\nfor _ in range(t):\n\tn = int(input())\n\tarr = [int(j) for j in input().split()]\n\tif arr.count(arr[0]) == n:\n\t\tprint(n)\n\telse:\n\t\tprint(1)", "import sys\nimport math\ndef II():\n\treturn int(sys.stdin.readline())\n\ndef LI():\n\treturn list(map(int, sys.stdin.readline().split()))\n\ndef MI():\n\treturn list(map(int, sys.stdin.readline().split()))\n\ndef SI():\n\treturn sys.stdin.readline().strip()\nt = II()\nfor q in range(t):\n\tn = II()\n\ta = LI()\n\tprint(1 if len(set(a)) != 1 else n)\n", "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if min(l) == max(l):\n        print(n)\n    else:\n        print(1)\n", "t = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    \n    if len(set(a)) == 1:\n        print(n)\n    else:\n        print(1)", "def solve():\n    kek = input()\n    a = sorted(list(map(int, input().split())))\n    if a[0] == a[-1]:\n        print(len(a))\n    else:\n        print(1)\n\n\n[solve() for x in range(int(input()))]\n", "import sys\n\ndef input():    return sys.stdin.readline().strip()\ndef iinput():   return int(input())\ndef rinput():   return map(int, sys.stdin.readline().strip().split()) \ndef get_list(): return list(map(int, sys.stdin.readline().strip().split())) \nmod = int(1e9)+7\n\n\nfor _ in range(iinput()):\n\tn = iinput()\n\ta = get_list()\n\ts = set(a)\n\n\tif (len(s)==1):\n\t\tprint(n)\n\telse:\n\t\tprint(1)\t", "for _ in range(int(input())):\n    input()\n    arr = list(map(int, input().split()))\n    if len(set(arr)) == 1:\n        print(len(arr))\n    else:\n        print(1)\n", "#from collection import defaultdict as dd\nimport sys\ninput=sys.stdin.readline\nt=int(input())\nwhile t:\n    n=int(input())\n    #n,m=map(int,input().split())\n    l=list(map(int,input().split()))\n    s=set(l)\n    if(len(s)==1):\n        print(n)\n    else:\n        print(1)\n    t-=1", "import sys\ninput = sys.stdin.readline\nfor f in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    iseq=True\n    for i in range(1,n):\n        if a[i]!=a[i-1]:\n            iseq=False\n    if iseq:\n        print(n)\n    else:\n        print(1)", "for _ in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    if len(set(a))==1:\n        print(n)\n    else:\n        print(1)\n", "inp = lambda cast=int: [cast(x) for x in input().split()]\nprintf = lambda s='', *args, **kwargs: print(str(s).format(*args), flush=True, **kwargs)\n\nt, = inp()\nfor _ in range(t):\n    n, = inp()\n    print(n if len(set(inp())) == 1 else 1)", "for i in range(int(input())):\n    x = int(input())\n    #n, m = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.sort()\n    if A[0] == A[-1]:\n        print(len(A))\n    else:\n        print(1)", "def solve():\n    n = int(input())\n    lst = list(map(int,input().split()))\n    k = max(lst)\n    lst2 = [i for i in lst if i != k]\n    if len(lst2):\n        print(1)\n    else:\n        print(n)\nfor i in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for i in a:\n        if(i!=a[0]):\n            c+=1\n            break\n    if(c!=0):\n        print(1)\n    else:\n        print(n)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int,input().split()))\n    x = arr.count(arr[0])\n    if x==n:\n        print(n)\n    else:\n        print(1)", "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    same=1\n    for i in range(n-1):\n        if a[i]!=a[i+1]:\n            same=0\n            break\n    if same==1:\n        print(n)\n    else:\n        print(1)", "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    A=list(map(int,input().split()))\n\n    if len(set(A))==1:\n        print(n)\n    else:\n        print(1)\n\n"]