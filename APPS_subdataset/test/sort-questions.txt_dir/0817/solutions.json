["import sys\ns = input().strip()\nN = len(s)\nif len(s) == 1:\n    print(1, s[0])\n    return\nX = [s[-1], s[-2]+s[-1] if s[-2]!=s[-1] else \"\"]\nY = [1, 2 if s[-2]!=s[-1] else 0]\nfor i in range(N-3, -1, -1):\n    c = s[i]\n    k1 = c+X[-1]\n    ng = Y[-1]+1\n    if ng > 10:\n        k1 = k1[:5] + \"...\" + k1[-2:]\n    if c == s[i+1] and k1 > X[-2]:\n        k1 = X[-2]\n        ng = Y[-2]\n    X.append(k1)\n    Y.append(ng)\nfor i in range(N-1, -1, -1):\n    print(Y[i], X[i])\n", "import sys\ns = input().strip()\nN = len(s)\nif len(s) == 1:\n    print(1, s[0])\n    return\nX = [s[-1], s[-2]+s[-1] if s[-2]!=s[-1] else \"\"]\nY = [1, 2 if s[-2]!=s[-1] else 0]\nfor i in range(N-3, -1, -1):\n    c = s[i]\n    k1 = c+X[-1]\n    ng = Y[-1]+1\n    if ng > 10:\n        k1 = k1[:5] + \"...\" + k1[-2:]\n    if c == s[i+1] and k1 > X[-2]:\n        k1 = X[-2]\n        ng = Y[-2]\n    X.append(k1)\n    Y.append(ng)\nfor i in range(N-1, -1, -1):\n    print(Y[i], X[i])", "s = input().strip();N = len(s)\nif len(s) == 1:print(1, s[0]);return\nX = [s[-1], s[-2]+s[-1] if s[-2]!=s[-1] else \"\"];Y = [1, 2 if s[-2]!=s[-1] else 0]\nfor i in range(N-3, -1, -1):\n    c = s[i];k1 = c+X[-1];ng = Y[-1]+1\n    if ng > 10:k1 = k1[:5] + \"...\" + k1[-2:]\n    if c == s[i+1] and k1 > X[-2]:k1 = X[-2];ng = Y[-2]\n    X.append(k1);Y.append(ng)\nfor i in range(N-1, -1, -1):print(Y[i], X[i])", "import sys\nz=sys.stdin.readline\ns=z().strip()\nl=len(s)\nb=[' ']\no=[]\nm=[' ']\nfor i in range(l):\n c=s[-1-i]\n if c==b[-1]:\n  if c>m[-1].lower() or (c==m[-1].lower() and c>m[-2].lower()):\n   b.pop()\n   if b[-1].lower()!=m[-1].lower():m.pop()\n   b[-1]=b[-1].upper()\n   m[-1]=m[-1].upper()\n  else:b+=[c]\n else:\n  b+=[c]\n  if b[-1]!=m[-1].lower():m+=[b[-1]]\n if len(b)>11:o+=[(str(len(b)-1)+' '+''.join(b[:-6:-1])+'...'+b[2]+b[1]).lower()]\n elif len(b)>1:o+=[(str(len(b)-1)+' '+''.join(b[-1::-1])).lower()]\n else:o.append('0')\nprint('\\n'.join(o[::-1]))", "s = input()\nn = len(s)\nres = ['',s[-1]]\nl = [1]\nflag = True\nlast = ['']\nfor i in range(n-2,-1,-1):\n    tmp = res[-1]\n    if flag and s[i]==tmp[0] and s[i]>last[-1]:\n        res.append(res[-2])\n        l.append(l[-1]-1)\n        flag = False\n        if l[-1]>0 and res[-1][0]!=s[i]:\n            last.pop()\n    else:\n        l.append(l[-1]+1)\n        tmp = s[i]+tmp\n        flag = True\n        if len(tmp)>10:\n            res.append(tmp[:5]+'...'+tmp[-2:])\n        else:\n            res.append(tmp)\n        if len(res[-1])>1 and res[-1][0]!=res[-1][1]:\n            last.append(res[-1][1])\nres.pop(0)\nfor i in range(n-1,-1,-1):\n    print(l[i],res[i])\n", "import os\nimport sys\nimport io\nimport functools\n \nimport copy\nimport math\n# input = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline # \u795e\u5947\u5feb\u8bfb\uff0c\u65e0\u6cd5\u8fd0\u884c\u8c03\u8bd5\nGANS = []\n \n# def print(*args): # \u795e\u5947\u5feb\u5199\uff0c\u6700\u540e\u5f97\u5199\u4e0aos.write\n#     nonlocal GANS\n#     for i in args:\n#         GANS.append(f'{i}'.encode())\n \ndef cmp(x,y):\n    if x[1]==y[1]:\n        return -(y[0]-x[0])\n    return -(x[1]-y[1])\n \n \ns = input()\n \nans = []\n \n# s = s[::-1]\n \ncur = []\nctr = []\npos = []\npv = [chr(0)]\n\npvc = chr(1)\nfor p,i in enumerate(s[::-1]):\n    if cur and cur[-1] == i:\n        f = True\n        if len(cur)>=2:\n            if cur[-2] > i:\n                f = False\n            elif cur[-2]==i:\n                if  pos[-2]==p-2:\n                        f=False\n                if pv[-1]>=i:\n                    f = False\n                # elif len(cur)>=3:\n                #     if cur[-3]>=i:\n                #         f = False\n        if f and p==pos[-1]+1:\n            cur.pop()\n            pos.pop()\n            pv.pop()\n            pvc = pv[-1]\n\n        else:\n            cur.append(i)\n            pos.append(p)\n            pv.append(pvc)\n    else:\n        if cur:pvc = cur[-1]\n        cur.append(i)\n        pos.append(p)\n        pv.append(pvc)\n    ctr.append(len(cur))\n    if ctr[-1] > 10:\n        ans.append(''.join(cur[-5:][::-1])+'...'+''.join(cur[:2][::-1]))\n    else:\n        ans.append(''.join(cur[::-1]))\n \nfor i in range(len(ans)):\n    print(ctr[-i-1],ans[-i-1])\n    # print()\n    # print(len(i),end=' ')\n    # if len(i)>10:\n    #     print(i[:5]+'...'+i[-2:])\n    # else:\n    #     print(i)\n", "s = input()\ncs = ['']\nans = []\nlast  = ['']\npoped = False\nfor c in s[::-1]:\n    if not poped and c == cs[-1] and c > last[-2]:\n        cs.pop()\n        if (not cs) or c != cs[-1]:\n            last.pop()\n        poped = True\n    else:\n        poped = False\n        if c != cs[-1]:\n            last.append(c)\n        cs.append(c)\n    if len(cs) <= 11:\n        ans.append((len(cs) - 1, ''.join(cs[::-1])))\n    else:\n        ans.append((len(cs) - 1, (''.join(cs[:3]) + '...' + ''.join(cs[-5:]))[::-1]))\n\nfor a, b in ans[::-1]:\n    print(a, b)\n", "def main(s):\n    if len(s) == 0:\n        return []\n    if len(s) == 1:\n        return [[s], [1]]\n    s = s[::-1]\n    sres = [s[0]]\n    nres = [1]\n    if s[0] == s[1]:\n        sres.append('')\n        nres.append(0)\n    else:\n        sres.append(s[1] + s[0])\n        nres.append(2)\n    for i in range(2, len(s)):\n        st = s[i] + sres[-1]\n        nt = nres[-1] + 1\n        if nt > 10:\n            st = st[:5] + '...' + st[-2:]\n        if s[i] == s[i-1] and st > sres[-1]:\n            st = sres[-2]\n            nt = nres[-2]\n        sres.append(st)\n        nres.append(nt)\n    return [sres, nres]\n\n\ns = input()\nsres, nres = main(s)\n\nfor i in range(len(s)-1, -1, -1):\n    print(nres[i], sres[i])\n\n"]