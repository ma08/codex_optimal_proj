["def Intersect(aa,bb,xx,yy):\n    a=min(aa,bb)\n    b=max(aa,bb)\n    x=min(xx,yy)\n    y=max(xx,yy)\n    \n    if(a>=x and b<=y):\n        return False\n    if(x>=a and y<=b):\n        return False\n    if(b<=x):\n        return False\n    if(y<=a):\n        return False\n    return True\n\nN=int(input())\n\ncase=False\n\nL=list(map(int,input().split()))\n\nfor i in range(N-1):\n    for j in range(i+1,N-1):\n        if(Intersect(L[i],L[i+1],L[j],L[j+1])):\n            case=True\nif(case):\n    print(\"yes\")\n\nelse:\n    print(\"no\")\n", "def edge_intersects(edge, l):\n    for other_edge in l:\n        if min(other_edge) < min(edge) and max(other_edge) > min(edge) and max(other_edge) < max(edge):\n            return True\n        if min(other_edge) < max(edge) and min(other_edge) > min(edge) and max(other_edge) > max(edge):\n            return True\n    return False\n\n    \n\ndef intersects(l):\n    # Form the edges\n    edges = [(l[i], l[i+1]) for i in range(0, len(l)-1)]\n    \n    for i in range(len(edges) - 1):\n        if edge_intersects(edges[i], edges[i+1:]) == True:\n            return True\n    return False\n\nn = input()\nl = [int(item) for item in input().split()]\n\n\nif intersects(l):\n    print(\"yes\")\nelse:\n    print(\"no\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n##l = [int(item) for item in input().split()]\n##print(l)\n", "n=int(input())\na=list(map(int,input().split()))\nb=a[:]\nb.sort()\nok=0\nc={}\ng={}\n\nfor i in range(n-1):\n    l,r=b.index(a[i]),b.index(a[i+1])\n    c[b[l]]=r\n    g[r]=l\nfor i in range(n-1):\n    if  not b[i] in c:continue \n    if i>c[b[i]]:l,r=c[b[i]],i\n    else:l,r=i,c[b[i]]\n    for j in range(l+1,r):\n      \n        if b[j] in c:\n            if c.get(b[j])>r or c.get(b[j])<l:\n                 ok=1\n                 break\n        if j in g:\n            if g[j]>r or g[j]<l:\n                ok=1\n                break\n\n    \n\nif ok:print('yes')\nelse:print('no')\n", "n = int(input())\na = [int(x) for x in input().split()]\nx = []\nfor i in range(n - 1):\n    x.append(sorted([a[i],a[i + 1]]))\n#print(x)\nfor i in range(n - 1):\n    for j in range(i + 2, n - 1):\n        if (x[i][0] > x[j][0] and x[i][0] < x[j][1] and (x[i][1] > x[j][1] or x[i][1] < x[j][0])) or (x[i][1] > x[j][0] and x[i][1] < x[j][1] and (x[i][0] > x[j][1] or x[i][0] < x[j][0])):\n            print('yes')\n            return\nprint('no')", "n = int(input())\na = list(map(int, input().split()))\nif n <= 3:\n    print('no')\nelse:\n    fg = 0\n    for i in range(n-3):\n        for j in range(i+2, n-1):\n            if min(a[i], a[i+1]) < min(a[j], a[j+1]) < max(a[i], a[i+1]) < max(a[j], a[j+1]) or min(a[j], a[j+1]) < min(a[i], a[i+1]) < max(a[j], a[j+1]) < max(a[i], a[i+1]):\n                fg = 1\n                break;\n        if fg: break;\n\n    if fg: print('yes')\n    else: print('no')\n\n", "n = int(input())\nMin = -1e10\nMax = 1e10\nans = \"no\"\n\ndef f(x, y):\n\treturn x[0] < y[0] and x[1] > y[0] and x[1] < y[1] or \\\n\t       x[0] > y[0] and x[0] < y[1] and x[1] > y[1] \n\n\n\nxs = list(map(int, input().split()))\n\nalign = [0, 0]*len(xs)\n\nalign[0] = xs[0]\nalign[1] = xs[0]\n\nfor i in range(1, len(xs)):\n\t#print(align)\n\tfor j in range(0, i):\n\t\tif f([min(xs[i-1:i+1]), max(xs[i-1:i+1])], align[2*j:2*j+2]):\n\t\t\tans = \"yes\"\n\t\t\tbreak\n\tif xs[i] >= xs[i-1]:\n\t\talign[2*i-1] = xs[i]\n\t\talign[2*i] = xs[i-1]\n\t\talign[2*i+1] = xs[i]\n\telse:\n\t\talign[2*i-2] = xs[i]\n\t\talign[2*i] = xs[i]\n\t\talign[2*i+1] = xs[i-1]\n\nprint(ans)", "n = int(input())\nMin = -1e10\nMax = 1e10\nans = \"no\"\n\ndef f(x, y):\n\treturn x[0] < y[0] < x[1] < y[1] or \\\n\t       y[0] < x[0] < y[1] < x[1]\n\n\n\nxs = list(map(int, input().split()))\n\nfor i in range(1, len(xs) - 1):\n\n\tfor j in range(0, i):\n\t\tif f([min(xs[i:i+2]), max(xs[i:i+2])], [min(xs[j:j+2]), max(xs[j:j+2])]):\n\t\t\tans = \"yes\"\n\t\t\tbreak\n\nprint(ans)", "n = int(input())\nans = \"no\"\n\nf = lambda x, y: x[0] < y[0] < x[1] < y[1] or \\\n\t             y[0] < x[0] < y[1] < x[1]\n\nxs = list(map(int, input().split()))\n\nfor i in range(1, len(xs) - 1):\n\n\tfor j in range(0, i):\n\t\tif f([min(xs[i:i+2]), max(xs[i:i+2])], [min(xs[j:j+2]), max(xs[j:j+2])]):\n\t\t\tans = \"yes\"\n\t\t\tbreak\n\nprint(ans)", "def f():\n    n = int(input()) - 1\n    x = list(map(int, input().split()))\n    p = [(x[i], x[i + 1]) if x[i] < x[i + 1] else (x[i + 1], x[i]) for i in range(n)]\n    p.sort()\n    for j, (x, y) in enumerate(p, 1):\n        while j < n and p[j][0] == x: j += 1\n        while j < n and p[j][0] < y: \n            if p[j][1] > y: return 'yes'\n            j += 1\n    return 'no'\nprint(f())\n", "n = int(input())\nseq = list(map(int, input().split()))\n\nif n == 1:\n\tprint(\"no\")\n\treturn\n\npairs = []\ncur = [-1, seq[0]]\nfail = False\n\nfor i in range(1, len(seq)):\n\tcur[0], cur[1] = cur[1], seq[i]\n\tif cur[1] < cur[0]:\n\t\tpairs.append([cur[1], cur[0]])\n\telse:\n\t\tpairs.append(cur[:])\n\n#print(pairs)\n\nfor x1, x2 in pairs:\n\tif not fail:\n\t\tfor x3, x4 in pairs:\n\t\t\tif (x1 != x3 or x2 != x4) and (x1 < x3 < x2 < x4 or x3 < x1 < x4 < x2):\n\t\t\t\tfail = True\n\t\t\t\tbreak\n\telse:\n\t\tbreak\n\nif fail:\n\tprint(\"yes\")\nelse:\n\tprint(\"no\")", "n = int(input())\nseq = list(map(int, input().split()))\n\nif n == 1:\n\tprint(\"no\")\n\treturn\n\npairs = []\ncur = [-1, seq[0]]\nfail = False\n\nfor i in range(1, len(seq)):\n\tcur[0], cur[1] = cur[1], seq[i]\n\tpairs.append([min(cur), max(cur)])\n\nfor x1, x2 in pairs:\n\tif not fail:\n\t\tfor x3, x4 in pairs:\n\t\t\tif (x1 != x3 or x2 != x4) and (x1 < x3 < x2 < x4 or x3 < x1 < x4 < x2):\n\t\t\t\tfail = True\n\t\t\t\tbreak\n\telse:\n\t\tbreak\n\nif fail:\n\tprint(\"yes\")\nelse:\n\tprint(\"no\")", "n = int(input())\na = list(map(int, input().split(' ')))\nf = False\nfor j in range(len(a)-2):\n    #------------------------#\n    for i in range(j,len(a)-3):\n        if a[j]<a[i+2]<a[j+1]<a[i+3] or a[j]<a[i+3]<a[j+1]<a[i+2] or a[i+2]<a[j]<a[i+3]<a[j+1] or a[i+3]<a[j]<a[i+2]<a[j+1] or a[j+1]<a[i+2]<a[j]<a[i+3] or a[j+1]<a[i+3]<a[j]<a[i+2] or a[i+2]<a[j+1]<a[i+3]<a[j] or a[i+3]<a[j+1]<a[i+2]<a[j]:\n            f = True\n            break\nif f == True:\n    print('yes')\nelse:\n    print('no')", "# read the inputs\n#maintain a table of values that you have seen.\n# maintain the current and the next entry\n# for every next entry , check if any point in the hash table has that value.\n\nimport sys\nn=int(input())\nvalues=[int(v) for v in input().split()]\n# Previous solution\nprev=values[0]\nexplored=[]\nfor i in range(1,n,1):\n\tcur=values[i]\n\tless,great = min(cur,prev),max(cur,prev)\n\tfor val in explored:\n\t\tstart,end = val\n\t\tif (less < start and great > start and less < end and great < end) or (less < end and great > end and less > start and great > start): \n\t\t\tprint('yes')\n\t\t\treturn\n\texplored.append((less,great))\n\tprev=cur\t\nprint('no')\n\n'''explored = []\nprev=values[0]\nfor v in values:\n\tif v < prev:\n\t\tfor e in explored:\n\t\t\tif v < e and e < prev:\n\t\t\t\tprint('yes')\n\t\t\t\treturn\n\telif v > prev:\n\t\tfor e in explored:\n\t\t\tif v > e and e > prev:\n\t\t\t\tprint('yes')\n\t\t\t\treturn\n\tprev=v\n\texplored.append(v)\nprint('no')'''\n", "n = int(input())\n\npre = 999999\nsegs = []\n\nfor x in map(int, input().split()):\n    if pre != 999999:\n        segs.append((min(pre, x), max(pre, x)))\n    pre = x\n\nsegs.sort()\n\nintersect = False\n\nfor i in range(0, len(segs)):\n    for j in range(i, len(segs)):\n        if segs[i][0] < segs[j][0] < segs[i][1] < segs[j][1]:\n            intersect = True\n            break\n\nprint('yes' if intersect else 'no')\n", "'''\nCreated on Oct 31, 2013\n\n@author: Ismael\n''' \n\ndef main():\n    input()\n    l = list(map(int,input().split()))\n    #l = [0,10,5,15]\n    #l = [0,15,5,10]\n    if(len(l)<=3):\n        print(\"no\")\n        return\n    xMin = min(l[0],l[1])\n    xMax = max(l[0],l[1])\n    for i in range(2,len(l)-1):\n        if(l[i]<=xMin or l[i]>=xMax):#3eme ext, next point must be outside [xMin,xMax]\n            if(l[i+1]>xMin and l[i+1]<xMax):\n                print(\"yes\")\n                return\n        elif(l[i]>=xMin and l[i]<=xMax):#3eme int, next point must be inside [xMin,xMax]\n            if(l[i+1]<xMin or l[i+1]>xMax):\n                print(\"yes\")\n                return\n        min123 = min(xMin,l[i])\n        max123 = max(xMax,l[i])\n        if(l[i+1]<min123 or l[i+1]>max123):\n            xMin = min123\n            xMax = max123\n        else:\n            elems = [l[i+1],xMin,xMax,l[i]]\n            elems.sort()\n            ind4 = elems.index(l[i+1])\n            xMin = elems[ind4-1]\n            xMax = elems[ind4+1]        \n    print(\"no\")\n\n\nmain()   \n\n", "def test():\n    n=int(input())\n    points=list(map(int,input().split()))\n    for i in range(n-1):\n        a=points[i]\n        b=points[i+1]\n        if(a>b):\n            temp=a\n            a=b\n            b=temp\n        for j in range(i):\n            if(points[j]>=a and points[j]<=b):\n                if(j>0 and (points[j-1]<a or points[j-1]>b or points[j+1]<a or points[j+1]>b)):\n                    print('yes')\n                    return 0\n                elif(j==0 and (points[j+1]<a or points[j+1]>b)):\n                    print('yes')\n                    return 0\n                \n    return 1\nif(test()):\n    print('no')\n", "n = int( input() )\nl = [int(x) for x in input().split()]\nfound = False\n\nif n<4:\n\tprint(\"no\")\nelse:\n        for i in range(n-2):\n                a= min(l[i], l[i+1])\n                b= max(l[i], l[i+1])\n                for j in range(i+1, n-1, 1):\n                        c=min(l[j], l[j+1])\n                        d=max(l[j],l[j+1])\n\t\t\t\n                        if c<a and a<d and b>d:\n                                found = True\n                                break\n                        if c<b and b<d and a<c:\n                                found = True\n                                break\n                if found:\n                        break\n        if found:\n                print(\"yes\")\n        else:\n                print(\"no\")\n", "def check(a,b):\n\tif min(a)<min(b)<max(a)<max(b) or min(b)<min(a)<max(b)<max(a):\n\t\treturn True\n\telse:\n\t\treturn False\nlo = False\nn = int(input())\nl = list(map(int, input().split()))\ncoppie = []\nfor cont in range(0,n-1):\n    coppie.append(list((l[cont],l[cont+1])))\nfor c in range(0,len(coppie)-1):\n    for d in range(c+1,len(coppie)):\n        if check(coppie[c],coppie[d]):\n            print('yes')\n            lo = True\n            break\n    if lo:\n        break\nif lo is False:\n    print('no')", "n = int(input())\nx = list(map(int, input().split()))\nfor i in range(n - 1):\n  a = (min(x[i], x[i + 1]), max(x[i], x[i + 1]))\n  for j in range(i):\n    b = (min(x[j], x[j + 1]), max(x[j], x[j + 1]))\n    if b[0] < a[0] < b[1] < a[1] or a[0] < b[0] < a[1] < b[1]:\n      print(\"yes\")\n      return\nprint(\"no\")", "n = int(input())\nx = list(map(int, input().split()))\nfor i in range(n - 1):\n  a = sorted((x[i], x[i + 1]))\n  for j in range(i):\n    b = sorted((x[j], x[j + 1]))\n    if b[0] < a[0] < b[1] < a[1] or a[0] < b[0] < a[1] < b[1]:\n      print(\"yes\")\n      return\nprint(\"no\")", "def checkint(a,b,c,d):\n    check=0\n    if min(a,b)<min(c,d)<max(a,b)<max(c,d) or \\\n       min(c,d)<min(a,b)<max(c,d)<max(a,b):\n        check=1\n    return check\n\nn=int(input())\nlis=input().split()\nfor i in range(n):\n    lis[i]=int(lis[i])\nintersect=0\nfor i in range(n-1):\n    for j in range(n-1):\n        if checkint(lis[i],lis[i+1],lis[j],lis[j+1])==1:\n            intersect=1\n\nif intersect==0:\n    print('no')\nelse:\n    print('yes')\n", "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n - 1):\n  s = sorted((a[i], a[i + 1]))\n  for j in range(i):\n    lst = sorted((a[j], a[j + 1]))\n    if lst[0] < s[0] < lst[1] < s[1] or s[0] < lst[0] < s[1] < lst[1]:\n      print(\"yes\")\n      return\nprint(\"no\")", "n = int(input())\nx = [int(x) for x in input().split()]\np = x[0]\nl = []\nfor i in range(1, n):\n\tfor a, b in l[:-1]:\n\t\tif (a < x[i] < b) ^ (a < p < b):\n\t\t\tprint('yes')\n\t\t\treturn\n\tl.append((min(p, x[i]), max(p, x[i])))\n\tp = x[i]\nprint('no')\n", "def main():\n    n = int(input())\n    l = []\n    a = 0\n    for b in map(int, input().split()):\n        if a < b:\n            l.append((a, b))\n        else:\n            l.append((b, a))\n        a = b\n    l[0] = ((0, 0))\n    l.sort()\n    for i, (c, d) in enumerate(l):\n        for j in range(i):\n            a, b = l[j]\n            if a < c < b < d:\n                print('yes')\n                return\n    print('no')\n\n\ndef __starting_point():\n    main()\n__starting_point()"]