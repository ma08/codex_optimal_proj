["from itertools import accumulate\nimport sys\n\ndef solve(f, g):\n    n, m, k, s = [int(x) for x in f.readline().split()]\n    a_price = [(int(x), i+1) for i, x in enumerate(f.readline().split())]\n    b_price = [(int(x), i+1) for i, x in enumerate(f.readline().split())]\n\n    a_gadgets = []\n    b_gadgets = []\n    for i, line in enumerate(f):\n        t, price = [int(x) for x in line.split()]\n        if t == 1:\n            a_gadgets.append((price, i + 1))\n        else:\n            b_gadgets.append((price, i + 1))\n\n    a_gadgets.sort()\n    b_gadgets.sort()\n\n    prefix_a = [0] + list(accumulate(gadget[0] for gadget in a_gadgets))\n    prefix_b = [0] + list(accumulate(gadget[0] for gadget in b_gadgets))\n\n    la = min(k, len(a_gadgets))\n    lb = min(k, len(b_gadgets))\n    min_price_for_k = [(prefix_a[i], prefix_b[k - i], i) for i in range(k-lb, la+1)]\n\n    for i in range(1, n):\n        a_price[i] = min(a_price[i], a_price[i-1])\n        b_price[i] = min(b_price[i], b_price[i-1])\n        \n    def expence(day):\n        return lambda x: a_price[day][0]*x[0] + b_price[day][0]*x[1]\n\n    x, y = 0, n-1\n    while x <= y-1:\n        day = (x + y) // 2\n        min_cost = min(min_price_for_k, key = expence(day))\n        if expence(day)(min_cost) > s:\n            x = day+1\n        else:\n            y = day\n    min_cost = min(min_price_for_k, key = expence(x))\n    if expence(x)(min_cost) > s:\n        g.write('-1\\n')\n    else:\n        g.write(str(x+1) + '\\n')\n        i1 = min_cost[-1]\n        A, B = ' ' + str(a_price[x][1]) + '\\n', ' ' + str(b_price[x][1]) + '\\n'\n        for i in range(i1):\n            g.write(str(a_gadgets[i][1]) + A)\n        for i in range(k - i1):\n            g.write(str(b_gadgets[i][1]) + B)\n\nsolve(sys.stdin, sys.stdout)\n", "import sys\nfrom itertools import accumulate\n\nn, m, k, s = list(map(int, input().split()))\n_rate = [list(map(int, input().split())), list(map(int, input().split()))]\nrate = [list(accumulate(_rate[0], min)), list(accumulate(_rate[1], min))]\n\nitems = [[[0, -1]], [[0, -1]]]\nfor i in range(m):\n    t, c = list(map(int, sys.stdin.readline().split()))\n    items[t-1].append([c, i+1])\n\nitems[0].sort()\nitems[1].sort()\nfor i in range(2):\n    for j in range(1, len(items[i])):\n        items[i][j][0] += items[i][j-1][0]\n\nok, ng = n, -1\nans_size = [0, 0]\n\nwhile abs(ok - ng) > 1:\n    mid = (ok + ng) >> 1\n\n    cnt_1 = min(len(items[0])-1, k)\n    cnt_2 = k - cnt_1\n    while cnt_1 >= 0 and cnt_2 < len(items[1]):\n        dollers = items[0][cnt_1][0]\n        pounds = items[1][cnt_2][0]\n        if dollers * rate[0][mid] + pounds * rate[1][mid] <= s:\n            ok = mid\n            ans_size = [cnt_1, cnt_2]\n            break\n        cnt_1 -= 1\n        cnt_2 += 1\n    else:\n        ng = mid\n\nif ok < n:\n    print(ok+1)\n    for i in range(2):\n        day = 0\n        for j in range(0, n):\n            if _rate[i][j] == rate[i][ok]:\n                day = j+1\n                break\n        for j in range(1, ans_size[i]+1):\n            print(items[i][j][1], day)\nelse:\n    print(-1)\n"]