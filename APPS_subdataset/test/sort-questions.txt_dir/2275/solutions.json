["for _ in range(int(input())):\n    n = int(input())\n    data = input()\n    count = 0\n    while \"AP\" in data:\n        data = data.replace(\"AP\", \"AA\")\n        count += 1\n    print(count)\n", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    res, prev = 0, -1\n    for i, e in enumerate(s):\n        if e == 'A':\n            prev = i\n        elif prev != -1:\n            res = max(res, i - prev)\n    print(res)\n", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = -1e9\n    cur = 0\n    fl = False\n    for j in range(n):\n        if s[j] == 'A':\n            fl = True\n            ans = max(ans, cur)\n            cur = 0\n        elif fl == True:\n            cur += 1\n    print(max(cur, ans))", "for _ in range(int(input())):\n\tn=int(input())\n\ts=input()\n\tcurr=None\n\tans=0\n\tfor i in s:\n\t\tif i==\"A\":\n\t\t\tcurr=0\n\t\telif curr!=None:\n\t\t\tcurr+=1\n\t\t\tans=max(ans,curr)\n\tprint(ans)", "import sys\n\nfor _ in range(int(input())):\n    k = int(input())\n    a = input()\n    res = 0\n    cur = k - 1\n    for i in range(k - 1, -1, -1):\n        if a[i] == 'A':\n            res = max(res, cur - i)\n            cur = -1\n        else:\n            cur = max(cur, i)\n    print(res)\n", "def solve(s):\n\tlast = -1\n\tc = 0\n\tm = 0\n\tfor x in range(len(s)):\n\t\tif(s[x] == 'A'):\n\t\t\tlast = x\n\t\t\tc = 0\n\t\telif(last != -1):\n\t\t\tc += 1\n\t\t\tm = max(c, m)\n\treturn m\n\nn = int(input())\nfor x in range(n):\n\tk = int(input())\n\ts = input()\n\tprint(solve(s))", "for i in range(int(input())):\n    k = int(input())\n    BIG = input()\n    max_ = 0\n    calcer = 0\n    f = 0\n    for j in range(k):\n        if BIG[j] == 'A':\n            f = 1\n            max_ = max(calcer, max_)\n            calcer = 0\n        if BIG[j] == 'P' and f:\n            calcer += 1\n    max_ = max(max_, calcer)\n    print(max_)", "Q = int(input())\nfor _ in range(Q):\n    n = int(input())\n    s = input()\n    while s != '' and s[0] == 'P':\n        s = s[1:]\n\n    ans = 0\n    now = 0\n    for i in s:\n        if i == 'P':\n            now += 1\n        else:\n            ans = max(ans, now)\n            now = 0\n    ans = max(ans, now)\n\n    print(ans)\n", "def nex(s):\n    l=len(s)\n    t=s.copy()\n    for i in range(l):\n        if(i==0):t[0]=s[0]\n        else:\n            if(s[i-1]=='A'):t[i]='A'\n    return t\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    s=list(input())\n    c=0\n    while(nex(s)!=s):\n        s=nex(s)\n        c+=1\n    print(c)\n", "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nimport heapq\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\n \n# M = mod = 998244353\ndef factors(n):return sorted(list(set(reduce(list.__add__,([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0)))))\n# def inv_mod(n):return pow(n, mod - 2, mod)\n \ndef li():return [int(i) for i in input().rstrip('\\n').split(' ')]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n').split(' ')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\n\nfor _ in range(val()):\n    n = val()\n    s = st()\n    last = float('inf')\n    ans = 0\n    for i in range(n):\n        \n        if s[i] == 'A':\n            last = i\n        else:\n            ans = max(ans,i - last)\n    print(ans)\n", "t=int(input())\nfor i in range(t):\n    k=int(input())\n    a=input()\n    maxlen=0\n    cl=-1\n    for i in a:\n        \n        if i==\"A\":\n            cl=0\n        elif cl!=-1:\n            cl+=1\n            maxlen=max(cl,maxlen)\n    print(max(maxlen,0))\n", "t=int(input())\nfor _ in range(t):\n\tn=int(input())\n\ta=input()\n\tans=0\n\tfor i in range(n):\n\t\tif a[i]=='A':\n\t\t\tcount=0\n\t\t\tfor j in range(i+1,n):\n\t\t\t\tif a[j]=='P':\n\t\t\t\t\tcount+=1\n\t\t\t\telse:\n\t\t\t\t\tbreak\n\t\t\tans=max(ans,count)\n\t\telse:\n\t\t\tcontinue\n\tprint(ans)\n", "T = int(input())\nfor i in range(T):\n\tX = int(input())\n\tY = input()\n\tans = 0\n\tcount = 0\n\tstart = False\n\tfor j in range(len(Y)):\n\t\tif Y[j] == 'A':\n\t\t\tstart = True\n\t\t\tans = max(ans,count)\n\t\t\tcount = 0\n\n\t\telse :\n\t\t\tif start :\n\t\t\t\tcount += 1\n\tans = max(ans,count)\n\tprint(ans)"]