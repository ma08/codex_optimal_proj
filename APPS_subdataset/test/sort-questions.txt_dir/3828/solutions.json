["n, p = int(input()), list(map(int, input().split()))\na, c, v = [0] * n, 1, 1\nfor i, pi in enumerate(p):\n    a[pi - 1] = i\nfor i in range(n - 1):\n    if a[i] < a[i + 1]:\n        c += 1\n        if c > v:\n            v = c\n    else:\n        c = 1\nprint(n - v)", "n, p = int(input()), list(map(int, input().split()))\na, c, v = [0] * n, 1, 1\nfor i, pi in enumerate(p):\n    a[pi - 1] = i\nfor i in range(n - 1):\n    if a[i] < a[i + 1]:\n        c += 1\n        if c > v:\n            v = c\n    else:\n        c = 1\nprint(n - v)", "n = int(input())\nl = list(map(int, input().split()))\nl2 = [0]*len(l)\nfor i in range(len(l)):\n    l2[l[i]-1] = i\nprev = -1\nans = -1e9\ncurr = 0\nfor i in l2:\n    if i>prev:\n        curr+=1\n        prev = i\n    else:\n        ans = max(curr, ans)\n        curr = 1\n    prev=i\nprint(n-max(curr, ans))\n", "n = int(input())\ncars = [int(x) for x in input().split()]\nsorted_cars = sorted(enumerate(cars), key = lambda x : x[1])\nmax_sorted_length = 1\nlength = 1\nfor i in range(1, n):\n    if sorted_cars[i][0] > sorted_cars[i-1][0]:\n        length += 1\n    else:\n        if max_sorted_length < length:\n            max_sorted_length = length\n        length = 1\nif max_sorted_length < length: max_sorted_length = length\nprint(n - max_sorted_length)\n", "__author__ = 'Utena'\nn=int(input())\nm=list(map(int,input().split()))\nt=0\nl=[0]\nr=[0]*(n+1)\nfor j in range(n):\n    r[m[j]]=j+1\nif n==1:\n    print(0)\nelse:\n    for i in range(1,n):\n        t+=1\n        if r[i]>r[i+1]:\n            l.append(t)\n            t=0\n    if r[n]>r[n-1]:\n        t+=1\n        l.append(t)\n    print(n-max(l))", "a=[0 for i in range(100010)]\nb=[0 for i in range(100010)]\nc=[0 for i in range(100010)]\nn, a[1:] = int(input()), list(map(int,input().split(' ')))\nfor i in range(1,n+1):\n    if b[a[i]-1]:\n        c[a[i]]=c[a[i]-1]+1\n    else:\n        c[a[i]]=1\n    b[a[i]]=1\nprint(n-max(c[1:n+1]))\n", "def main():\n    n = int(input())\n    l = [n] * (n + 1)\n    for a in map(int, input().split()):\n        l[a] = l[a - 1] - 1\n    print(min(l))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\n\np = list(map(int, input().split()))\nq = [0] * n\n\nfor i in range(n):\n    q[p[i] - 1] = i\n\nans = 1\ncur = 1\n\nfor i in range(1, n):\n    if q[i - 1] < q[i]:\n        cur += 1\n    else:\n        cur = 1\n    ans = max(ans, cur)\n\nprint(n - ans)\n", "n=int(input())\nl=[n]*(n+1)\nfor c in map(int,input().split()):l[c]=l[c-1]-1\nprint(min(l))", "3\nN = int(input())\nl = [1 for x in range(N+1)]\nm = [1 for x in range(N+1)]\nusr_input = input().split()\nans = 1\nfor x in range(N):\n\tm[int(usr_input[x])] = x + 1\nfor x in range(2,N+1):\n\tif(m[x] > m[x-1]):\n\t\tl[x] += l[x-1]\n\tif(l[x] > ans):\n\t\tans = l[x]\nprint(N-ans)\n\n", "readInts=lambda: list(map(int, input().split()))\nn=int(input())\na=readInts()\np=[0]*n\nfor i in range(n):\n    p[a[i]-1]=i\ninc=1;ret=n-1\n#print(p)\nfor i in range(1,n):\n    if p[i]>p[i-1]:\n        inc+=1\n    else:\n        inc=1\n    ret=min(ret,n-inc)\nprint(ret)\n", "#!/usr/bin/env python3\nimport collections, itertools, functools, math\n\ndef solve():\n    n = int(input())\n    p = list(map(int, input().split()))\n    pos = [(p, i) for i, p in enumerate(p)]\n    pos.sort()\n\n    longest = 1\n    seq = 1\n    for i in range(1, n):\n        if pos[i-1][1] < pos[i][1]:\n            seq += 1\n        else:\n            seq = 1\n        longest = max(longest, seq)\n    return n - longest\n\n\ndef __starting_point():\n    print(solve())\n\n\n__starting_point()", "n = int(input())\nps = list(map(int, input().split()))\n\npos = [0] * n\nfor i, p in enumerate(ps):\n    pos[p-1] = i\n\nused = [False] * n\n\nlongest = 0\nfor v in range(n):\n    if used[v]:\n        continue\n    i = pos[v]\n    w = v\n    used[w] = True\n    while w < n - 1 and pos[w + 1] > i:\n        i = pos[w + 1]\n        w += 1\n        used[w] = True\n    longest = max(longest, w - v + 1)\nprint(n - longest)", "n = int(input().strip())\np = [int(x) for x in input().split()]\n\nl = {}\nfor x in p:\n    if x-1 in l:\n        l[x] = l[x-1] + 1\n    else:\n        l[x] = 1\n\nprint(n - max(l.values()))\n", "n = int(input())\nL = input().split()\nIDX = (n + 2) * [0]\n\ndef max(a, b):\n    if a > b:\n        return a\n    return b\n\nmx, act, last = 0, 0, 0\n\nfor i in range(n):\n    IDX[int(L[i])] = i + 1\n\nfor i in range(1, n + 1):\n    if IDX[i] > last:\n        last = IDX[i]\n        act += 1\n    else:\n        last = IDX[i]\n        act = 1\n    mx = max(mx, act)\n\n\nprint(n - mx)\n", "n=int(input())\nlst = [0 for i in range(n)]\nkereta = input().split()\nfor i in range(n):\n\tlst[int(kereta[i])-1]=i\nancol=1\nterbanyak=0\nfor i in range(n-1):\n\tif lst[i]>lst[i+1]:\n\t\tif terbanyak<ancol:terbanyak=ancol\n\t\tancol=0\n\tancol+=1\nif terbanyak<ancol:terbanyak=ancol\nprint(n-terbanyak)\n", "n=int(input())\nl=[n]*(n+1)\nfor c in [int(x) for x in input().split()]:l[c]=l[c-1]-1\nprint(min(l))", "\nn = int(input())\nl = list(map(int, input().split()))\n\na = [0] * (n + 1)\nk = 0\n\nfor x in l:\n    a[x] = a[x - 1] + 1\n    k = max(k, a[x])    \n\nprint(n - k)\n", "n=int(input())\nm=[0]*(n+1)\nl=list(map(int,input().split()))\nfor i in l:\n    m[i]=m[i-1]+1\nprint(n-max(m))", "def __starting_point():\n    n = int(input())\n    line = list(map(int, input().split()))\n    book = [0] * n\n    for it in line:\n        if it > 1:\n            if book[it - 2] > 0:\n                book[it - 1] = book[it - 2] + 1\n            else:\n                book[it - 1] = 1\n        else:\n            book[it - 1] = 1\n    print(n - max(book))\n\n__starting_point()", "n=int(input())\nl=[n]*(n+1)\nfor c in map(int,input().split()):l[c]=l[c-1]-1\nprint(min(l))\n", "n=int(input())\nl=[n]*(n+1)\nfor c in map(int,input().split()):l[c]=l[c-1]-1\nprint(min(l))\n", "n=int(input())\nl=[n]*(n+1)\nfor c in map(int,input().split()):l[c]=l[c-1]-1\nprint(min(l))\n", "n=int(input())\nl=[n]*(n+1)\nfor c in map(int,input().split()):l[c]=l[c-1]-1\nprint(min(l))\n", "n=int(input())\nl=[n]*(n+1)\nfor c in map(int,input().split()):l[c]=l[c-1]-1\nprint(min(l))\n"]