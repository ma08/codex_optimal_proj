["import sys\n\ndef matching(node, visited, adj, assigned):\n\tif node == -1:\n\t\treturn True\n\tif visited[node]:\n\t\treturn False\n\tvisited[node] = True\n\tfor neighbor in adj[node]:\n\t\tif matching(assigned[neighbor], visited, adj, assigned):\n\t\t\tassigned[neighbor] = node\n\t\t\treturn True\n\treturn False\n\nINF = 1000 * 1000\n\ninp = [int(x) for x in sys.stdin.read().split()]\n\nn, m = inp[0], inp[1]\ninp_idx = 2\n\nG = [[INF] * n for _ in range(n)]\n\nfor _ in range(m):\n\ta, b = inp[inp_idx] - 1, inp[inp_idx + 1] - 1\n\tinp_idx += 2\n\tG[a][b] = G[b][a] = 1\n\nfor v in range(n):\n\tG[v][v] = 0\n\t\nfor k in range(n): \n\tfor i in range(n): \n\t\tfor j in range(n): \n\t\t\tG[i][j] = min(G[i][j], G[i][k] + G[k][j])\n\t\ns, b, k, h = inp[inp_idx], inp[inp_idx + 1], inp[inp_idx + 2], inp[inp_idx + 3]\ninp_idx += 4\n\nspaceships = []\nfor _ in range(s):\n\tx, a, f = inp[inp_idx] - 1, inp[inp_idx + 1], inp[inp_idx + 2]\n\tinp_idx += 3\n\tspaceships.append((x, a, f))\n\t\nbases = []\nfor _ in range(b):\n\tx, d = inp[inp_idx] - 1, inp[inp_idx + 1]\n\tinp_idx += 2\n\tbases.append((x, d))\n\t\nadj = [[] for _ in range(s)]\nassigned = [[] for _ in range(b)]\nfor i in range(s):\n\tspace = spaceships[i]\n\tfor j in range(b):\n\t\tbase = bases[j]\n\t\tu, v = space[0], base[0]\n\t\tfuel = space[2]\n\t\tif G[u][v] <= fuel and space[1] >= base[1]:\n\t\t\tadj[i].append(j)\n\nvisited = [False] * s\nassigned = [-1] * b\n\nmatched = 0\nfor i in range(s):\n\tvisited = [False] * s\n\tif matching(i, visited, adj, assigned):\n\t\tmatched += 1\n\n\nprint(min(matched * k, h * s))\n\t\n\n"]