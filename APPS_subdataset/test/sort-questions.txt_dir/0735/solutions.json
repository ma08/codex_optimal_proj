["n = int(input())\na = list(map(int, input().split()))\n\nif sorted(a) == a:\n    print('yes')\n    print('1 1')\n    return\n\nstart = 0\nend = n - 1\nseen = 0\n\nfor i in range(n-1):\n    if not seen:\n        if a[i] > a[i+1]:\n            seen += 1\n            start = i\n    else:\n        if a[i] <= a[i+1]:\n            end = i\n            break\n#print(a)\n#print(a[:start], a[start:end+1][::-1], a[end+1:], sep='\\n')\na = a[:start] + a[start:end+1][::-1] + a[end+1:]\n#print(a)\n#print(start, end)\n\nif sorted(a) == a:\n    print('yes')\n    print(start+1, end+1)\nelse:\n    print('no')\n", "n=int(input())\na=list(map(int,input().split()))\ns=a.copy()\ns.sort()\nif a==s:\n    print(\"yes\\n1 1\")\nelse:\n    _First=-1\n    _Last=-1\n    for i,x in enumerate(a):\n        if s[i]!=x:\n            if _First==-1:\n                _First=i\n            _Last=i\n    __First=_First\n    __Last=_Last\n    _b=True\n    while __First<=_Last and __Last>=_First:\n        if a[__First]==s[__Last]:\n            pass\n        else:\n            _b=False\n        __First+=1\n        __Last-=1\n    if _b:\n        print(\"yes\")\n        print(str(_First+1),str(_Last+1))\n    else:\n        print(\"no\")", "n = int(input())\na = list(map(int, input().split()))\nphase = 0\nl = -1\nr = -1\nfor i in range(1, len(a)):\n    g = a[i] > a[i-1]\n    if phase == 0 and not g:\n        l = i\n        phase = 1\n    if phase == 1 and g:\n        r = i\n        phase = 2\n    if phase == 2 and not g:\n        print('no')\n        return\nif phase == 0:\n    print('yes')\n    print('1 1')\n    return\nelif phase == 1:\n    r = len(a)\ncur = -1\nf = True\nfor i in range(0, l-1):\n    if a[i] < cur:\n        f = False\n        break\n    cur = a[i]\nfor i in range(r-1, l-2, -1):\n    if a[i] < cur:\n        f = False\n        break\n    cur = a[i]\nfor i in range(r, len(a)):\n    if a[i] < cur:\n        f = False\n        break\n    cur = a[i]\nif f:\n    print('yes')\n    print(l, r)\nelse:\n    print('no')\n", "N = int(input())\na = list(map(int, input().split()))\n\npos_L = -1\nfor i in range(1, len(a)):\n    if a[i] < a[i - 1]:\n        pos_L = i - 1\n        break\n\nif pos_L == -1:\n    print('yes')\n    print('1 1')\n    return\n\npos_R = -1;\nfor i in range(len(a) - 1, 0, -1):\n    if a[i] < a[i - 1]:\n        pos_R = i\n        break\n\nif pos_R == -1:\n    print('yes')\n    print(1, N)\n    return\n\nhalf_len = (pos_R - pos_L + 1) // 2\nfor i in range(pos_L, pos_L + half_len):\n    a[i], a[pos_R + pos_L - i] = a[pos_R + pos_L - i], a[i];\n\nfor i in range(1, len(a)):\n    if a[i] < a[i - 1]:\n        print('no')\n        return\n\nprint('yes')\nprint(pos_L + 1, pos_R + 1)\n", "sa=int(input())\nsa2=input().split(' ')\nnums=[int(x) for x in sa2]\ndiffs=[nums[x+1]-nums[x] for x in range(sa-1)]\n\nlistx=[x for x in range(sa-1) if diffs[x]<0]\n\nif listx==[]:\n    print(\"yes\")\n    print(\"1 1\")\nelse:\n    magic=nums[listx[0]:listx[-1]+2]\n    magic.reverse()\n    nums[listx[0]:listx[-1]+2]=magic\n\n    mark=0\n    for t in range(sa-1):\n        if nums[t]-nums[t+1]>0:\n            mark=1\n    if mark==1:\n        print(\"no\")\n    else:\n        print(\"yes\")\n        print(listx[0]+1, listx[-1]+2)\n", "def isSorted(l):\n    i = 1\n    while i < len(l):\n        if l[i] < l[i-1]:\n            return False\n        i += 1\n    return True\nn = int(input())\na = list(map(int,input().split()))\ns = e = 0\ni = 1\nb = list()\nwhile i < len(a):\n    if a[i] > a[i-1]:\n        i += 1\n    else:\n        s = i-1\n        while i < n and a[i] < a[i-1]:\n            i+=1\n        e = i-1\n        b = a[0:s] + list(reversed(a[s:e+1])) + a[e+1:]\n      \n        break\nif isSorted(b):\n    print('yes')\n    print(s+1,e+1,sep=' ')\nelse:\n    print('no')", "\nn = int(input())\nA = list(map(int, input().split()))\nsA = sorted(A)\n\npa = 1\nwhile pa <= n and A[pa - 1] == sA[pa - 1]:\n    pa = pa + 1\n\nif pa == n + 1:\n    print('yes\\n1 1')\nelse:\n    pb = n\n    while pb >= 1 and A[pb - 1] == sA[pb - 1]:\n        pb = pb - 1\n    \n    AB = A[pa - 1:pb]\n    rAB = reversed(AB)\n    sAB = sA[pa - 1:pb]\n    can = sum(1 for (x, y) in zip(sAB, rAB) if x != y)\n    if can == 0:\n        print('yes')\n        print(pa, pb)\n    else:\n        print('no')\n", "n=input()\nthelist=input()\nfinal=[]\nnow=thelist.split()\nfor item in now:\n    final.append(int(item))\nbegin=sorted(final)\nindices=[]\ni=0\nlength=len(final)\nwhile i<length:\n    if final[i] != begin[i]:\n        indices.append(i)\n    i+=1\nall=len(indices)\nif len(indices) !=0:\n    x=indices[0]\n    y=indices[all-1]\n    switched=[]\n    p=0\n    while p<x:\n        switched.append(final[p])\n        p+=1\n    j=0\n    while j<= (y-x):\n        switched.append(final[y-j])\n        j+=1\n    q=y+1\n    while q<length:\n        switched.append(final[q])\n        q+=1\n    switchable=\"yes\"\n    z=0\n    while z<len(begin):\n        if switched[z] != begin[z]:\n            switchable=\"no\"\n            break\n        z+=1\n    if switchable==\"yes\":\n        print(\"yes\")\n        print(x+1,y+1)\n    else:\n        print(\"no\")\n\nelse:\n    print(\"yes\")\n    print(\"1 1\")\n\n", "__author__ = 'Gleb'\nn=int(input())\na=input().split()\nisna=[]\nfor i in range(n):\n    a[i]=int(a[i])\n    isna.append(a[i])\n\n\n\na.sort()\ni=0\nwhile (i<n)and(isna[i]==a[i]):\n    i+=1\nnach=i\nif i==n:\n    print('yes')\n    print(1,1)\nelse:\n    nache=isna[i]\n    while (i<n)and not(a[i]==nache):\n        i+=1\n    kon=i\n    b=isna[0:nach]\n    for i in range(kon,nach-1,-1):\n        b.append(isna[i])\n    b+=isna[kon+1:n]\n\n\n    if b==a:\n       print('yes')\n       print(nach+1,kon+1)\n    else:\n       print('no')\n", "def reverse(arr, left, right):\n    while left < right:\n        t = arr[left]\n        arr[left] = arr[right]\n        arr[right] = t\n        left += 1\n        right -= 1\n\nn = int(input())\na = list(map(int, input().split()))\nb = a.copy()\nb.sort()\nleft = -1\nright = -1\nfor i in range(n):\n    if a[i] != b[i]:\n        left = i\n        break\nif left == -1:\n    print(\"yes\")\n    print(1, 1)\n    return\nfor i in range(n - 1, -1, -1):\n    if a[i] != b[i]:\n        right = i\n        break\nreverse(a, left, right)\nfor i in range(n):\n    if a[i] != b[i]:\n        print(\"no\")\n        return\nprint(\"yes\")\nprint(left + 1, right + 1)\n", "def solve():\n    n = int(input())\n    a = list(map(int,input().split()))\n    left,right = 0,0\n    for i in range(n-1):\n        if a[i] > a[i+1]:\n            left = i\n            break\n    for i in range(n-1):\n        if a[i] > a[i+1]:\n            right = i+1\n    t = sorted(a)\n    a[left:right+1] = reversed (a[left:right+1])\n    print('yes\\n',left+1, right+1) if(a == t) else print('no\\n')\nsolve()", "3\n\ndef _reverse(arr, left, right):\n    n = len(arr)\n    return arr[:left] + arr[-n+right:-n+left-1:-1] + arr[right+1:]\n\ndef check(arr):\n    n = len(arr)\n    for i in range(1, n):\n        if arr[i] < arr[i-1]:\n            return False\n    return True\n\nt = int(input())\narr = [[-1*10**10, 0], [-1*10**10+1, 1]]\nval = []\n_number = 2\nfor i in input().split():\n    val.append(int(i))\n    arr.append([int(i), _number])\n    _number += 1\n\narr.append([10**10, t+2])\narr.append([10**10+1, t+3])\nt += 4\n\nif check(val):\n    print(\"yes\\n1 1\")\n    return\n\narr.sort()\n\nleft = 1\nfor i in range(1, t):\n    if arr[i-1][1]+1 == arr[i][1]:\n        left = i\n    else:\n        break\nright = t-2\nfor i in range(t-2, 0, -1):\n    if arr[i+1][1]-1 == arr[i][1]:\n        right = i\n    else:\n        break\n\nleft, right = arr[right-1][1]-2, arr[left+1][1]-2\n\nflag = False\nif left <= right:\n    val = _reverse(val, left, right)\n    flag = check(val)\n\nif not flag:\n    print('no')\nelse:\n    print(\"yes\\n%d %d\" % (left+1, right+1))", "n = int(input())\na = list(map(int,input().split()))\n\na_sort = list(a)\na_sort.sort()\n#print(a_sort)\n\nindex = []\n\nfor i in range(n):\n    if a[i] != a_sort[i]:\n        index.append(i)\nif len(index) == 0 :\n    print(\"yes\")\n    print(\"1 1\")\nelse:\n    section = []\n    for i in range(index[0],index[-1]+1,1):\n        section.append(a[i])\n    #print(section)\n    section_rev = [0]*len(section)\n    #print(index)\n    for i in range(len(section)):\n        section_rev[len(section)-1-i] = section[i]\n    #print(section_rev)\n    x = 0\n    for i in range(index[0],index[-1]+1):\n        #print(a[i], section_rev[x])\n        a[i] = section_rev[x]\n        x += 1\n    #print(a)\n    out = True\n    for i in range(n):\n        if a[i] != a_sort[i]:\n            out = False\n            break\n    if out:\n        print(\"yes\")\n        print(index[0]+1,index[-1]+1)\n    else:\n        print(\"no\")\n", "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n    b.append(a[i])\nb.sort()\nf = -1\nl = 0\nfor i in range(n):\n    if a[i] != b[i]:\n        if f == -1:\n            f = i\n        l = i\nif f != -1:\n    c = a[:f]\n    if f != 0:\n        c += a[l:f - 1:-1] \n    else:\n        c += a[l::-1] \n        \n    c += a[l + 1:]\nelse:\n    f = 0\n    c = a\nflag = True\nfor i in range(n):\n    if b[i] != c[i]:\n        flag = False\nif flag:\n    print('yes')\n    print(f + 1, l + 1)\nelse:\n    print('no')\n\n    \n", "n = int(input())\na = list(map(int, input().split()))\n\ndef Reverse(a, l, r):\n  i, j = l, r\n  while i < j:\n    a[i], a[j] = a[j], a[i]\n    i += 1\n    j -= 1\n\ndef IsSorted(a):\n  for i in range(n - 1):\n    if a[i] > a[i + 1]:\n      return False\n  return True\n\nfor l in range(n - 1):\n  if a[l] > a[l + 1]:\n    r = l + 1\n    while r + 1 < n and a[r] > a[r + 1]:\n      r += 1\n    Reverse(a, l, r)\n    if IsSorted(a):\n      print(\"yes\")\n      print(l + 1, r + 1)\n    else:\n      print(\"no\")\n    break\nelse:\n  print(\"yes\")\n  print(1, 1)", "def decSeq(L):\n    l, r = 0, 0\n    for i in range(len(L)-1):\n        if L[i+1] < L[i]:\n            l = i\n            break\n    try:\n        for i in range(l, len(L)):\n            r = i\n            if L[i+1] > L[i]:\n                break\n    except IndexError:\n        r = len(L)-1\n    return l, r\n\nn, arr = input(), list(map(int, input().split()))\n\nl, r = decSeq(arr)\n\nif sorted(arr) == arr:\n    print('yes')\n    print(1,1)\nelif sorted(arr) == arr[:l] + sorted(arr[l:r+1]) + arr[r+1:]:\n    print('yes')\n    print(l + 1, r + 1)\nelse:\n    print('no')", "n = int(input())\nnumbers = [int(i) for i in input().split()]\ni = 1\nwhile i < len(numbers) and numbers[i] >= numbers[i - 1]:\n    i += 1\nj = len(numbers) - 1\nwhile j > 0 and numbers[j] >= numbers[j - 1]:\n    j -= 1\ni -= 1\nif not j:\n    print('yes')\n    print(1, 1)\nelse:\n    rev = numbers[i: j + 1]\n    rev.reverse()\n    sd = numbers[:i] + rev + numbers[j + 1:]\n    if  sd == sorted(numbers):\n        print('yes')\n        print(i + 1, j + 1)\n    else:\n        print('no')", "n = int(input())\nt = list(map(int, input().split()))\np = sorted(t)\na = b = 0\nfor i in range(n): \n    if t[i] != p[i]: \n        a, b = i, n - 1\n        while t[b] == p[b]: b -= 1\n        break\nb += 1\nprint('yes\\n' + str(a + 1) + ' ' + str(b) if t[a: b] == p[a: b][:: -1] else 'no')", "import sys\n\nn = input().split()[0]\nn = (int)(n)\nalist = input().split()\n\nalist.insert(0,-1)\nalist.append(1e9 + 1)\n#print (alist)\n#print (len(alist))\n\nans = 1\nflag1 = flag2 = -1\nn = n + 2\nfor i in range(n-1):\n\tif (int)(alist [i]) > (int)(alist [i+1]) :\n\t\tflag1 = i\n\t\tbreak\n\telse :\n\t\tcontinue\n\n#print (flag1)\nif flag1 == -1:\n\tprint (\"yes\\n1 1\\n\")\n\treturn\n\nfor i in range(flag1+1,n-1) :\n\tif (int)(alist[i]) < (int)(alist [i+1]) :\n\t\tflag2 = i\n\t\tbreak\n\telse :\n\t\tcontinue\n#print (flag2)\nif flag2 == -1:\n\tprint (\"yes\\n%d %d\\n\"%(flag1+1,n-1))\n\treturn\n\nfor i in range(flag2+1,n-1):\n\tif (int)(alist[i]) > (int)(alist[i+1]):\n\t\tprint(\"no\\n\")\n\t\treturn\n\n#print(\"here\uff01\")\n\nif ((int)(alist[flag2]) < (int)(alist[flag1-1])) or ((int)(alist[flag1]) > (int)(alist[flag2+1])) :\n\tprint(\"no\\n\")\n\treturn\n\nprint(\"yes\\n%d %d\\n\"%(flag1,flag2))", "def issort(a):\n    for k in range(len(a)-1):\n        if a[k]>a[k+1]:\n            return False\n    return True\nn=int(input())\na=list(map(int,input().split()))\ni,j=0,n-1\nwhile i<n-1 and a[i]<a[i+1]:\n    i+=1\nwhile j>0 and a[j]>a[j-1]:\n    j-=1\nif j==0:\n    print('yes')\n    print(j+1,j+1)\nelse:\n    if issort(a[:i]+a[i:j+1][::-1]+a[j+1:]):\n        print('yes')\n        print(i+1,j+1)\n    else:\n        print('no')", "n = int(input())\na = list(input().split())\ni = 0\nwhile i<n :\n    a[i] = int(a[i])\n    i = i+1\nb,i = True,1\nwhile i<n :\n    if a[i-1]>=a[i] :\n        b = False\n        break\n    i = i+1\nif b :\n    print('yes')\n    print('1 1')\nelse :\n    i = 1\n    while a[i-1]<a[i] :\n        i = i+1\n    p = i-2\n    while i<n and a[i-1]>a[i] : \n        i = i+1\n    q = i\n    while i<n and a[i-1]<a[i] : \n        i = i+1\n    if i!=n :\n        print('no')\n    else :\n        if p==-1 and q==n :\n            print('yes')\n            print(1,n)\n        elif p==-1 :\n            if a[0]<a[q] :\n                print('yes')\n                print(1,q)\n            else :\n                print('no')\n        elif q==n :\n            if a[p]<a[n-1] :\n                print('yes')\n                print(p+2,n)\n            else :\n                print('no')\n        else :\n            if a[p+1]<a[q] and a[p]<a[q-1] :\n                print('yes')\n                print(p+2,q)\n            else :\n                print('no')\n", "def indeksTurun(a):\n\tfor x in range(len(a)-1):\n\t\tif a[x] > a[x+1]:\n\t\t\treturn x+1\n\t\t\tpass\n\t\tpass\n\treturn -1\n\tpass\n\ndef menaik(a,i1):\n\tfor x in range(i1,len(a)-1):\n\t\tif a[x] > a[x+1]:\n\t\t\treturn False\n\t\t\tpass\n\t\tpass\n\treturn True\n\tpass\n\na=input()\na=list(map(int,input().split(\" \")))\n\nif len(a) == 1:\n\tprint (\"yes\")\n\tprint (\"1 1\")\nelse:\n\treversed_indeks1=-1\n\tfor x in range(len(a)-1):\n\t\tif a[x] > a[x+1]:\n\t\t\treversed_indeks1=x\n\t\t\tbreak\n\t\t\tpass\n\t\tpass\n\tif reversed_indeks1 == -1:\n\t\tprint (\"yes\")\n\t\tprint (\"1 1\")\n\telse:\n\t\treversed_indeks2=len(a)-1\n\t\tfor x in range(reversed_indeks1,len(a)-1):\n\t\t\tif a[x] < a[x+1]:\n\t\t\t\treversed_indeks2=x\n\t\t\t\tbreak\n\t\tasc=True\n\t\tif reversed_indeks2 != len(a)-1:\n\t\t\tasc=menaik(a,reversed_indeks2+1)\n\t\tif asc:\n\t\t\tkiri=True\n\t\t\tkanan=True\n\t\t\tif reversed_indeks1 != 0:\n\t\t\t\tif a[reversed_indeks2] < a[reversed_indeks1-1]:\n\t\t\t\t\tkiri=False\n\t\t\t\t\tpass\n\t\t\tif reversed_indeks2 != len(a)-1:\n\t\t\t\tif a[reversed_indeks1] > a[reversed_indeks2+1]:\n\t\t\t\t\tkanan=False\n\t\t\t\t\tpass\n\t\t\t\tpass\n\t\t\t\tpass\n\t\t\tif kiri and kanan:\n\t\t\t\tprint (\"yes\")\n\t\t\t\tprint (\"%d %d\"%(reversed_indeks1+1,reversed_indeks2+1))\n\t\t\t\tpass\n\t\t\telse:\n\t\t\t\tprint (\"no\")\n\t\telse:\n\t\t\tprint (\"no\")\n\t\t\tpass\n\tpass"]