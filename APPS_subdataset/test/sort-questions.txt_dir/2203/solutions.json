["from collections import *\nh,q=list(map(int,input().split()))\nd=defaultdict(lambda:0)\nd[2**h]=0\nd[2**(h-1)]=0\nfor _ in range(q):\n\ti,l,r,a=list(map(int,input().split()))\n\tl,r=l*2**(h-i),(r+1)*2**(h-i)\n\tif a:d[1]+=1;d[l]-=1;d[r]+=1\n\telse:d[l]+=1;d[r]-=1\ns=0\nl=0\nD=sorted(d.items())\nfor (a,x),(b,_) in zip(D,D[1:]):\n\ts+=x\n\tif s==0:q=a;l+=b-a\nprint((\"Game cheated!\",q,\"Data not sufficient!\")[min(l,2)])\n", "h,q=list(map(int,input().split()))\nd=[(2**h,0),(2**(h-1),0)]\nfor _ in range(q):\n\ti,l,r,a=list(map(int,input().split()))\n\tl,r=l*2**(h-i),(r+1)*2**(h-i)\n\td.extend([[(l,1),(r,-1)],[(0,1),(l,-1),(r,1)]][a])\ns=0\nl=0\nd=sorted(d)\nfor (a,x),(b,_) in zip(d,d[1:]):\n\ts+=x\n\tif a!=b and s==0:q=a;l+=b-a\nprint((\"Game cheated!\",q,\"Data not sufficient!\")[min(l,2)])\n", "h,q=map(int,input().split())\nd=[(2**h,0),(2**(h-1),0)]\nfor _ in range(q):\n    i,l,r,a=map(int,input().split())\n    l,r=l*2**(h-i),(r+1)*2**(h-i)\n    d.extend([[(l,1),(r,-1)],[(0,1),(l,-1),(r,1)]][a])\ns=0\nl=0\nd=sorted(d)\nfor (a,x),(b,_) in zip(d,d[1:]):\n    s+=x\n    if a!=b and s==0:q=a;l+=b-a\nprint((\"Game cheated!\",q,\"Data not sufficient!\")[min(l,2)])", "h,q=list(map(int,input().split()))\nd=[(2**h,0),(2**(h-1),0)]\nfor _ in range(q):\n\ti,l,r,a=list(map(int,input().split()))\n\tl,r=l*2**(h-i),(r+1)*2**(h-i)\n\td.extend([[(l,1),(r,-1)],[(0,1),(l,-1),(r,1)]][a])\ns=0\nl=0\nd=sorted(d)\nfor (a,x),(b,_) in zip(d,d[1:]):\n\ts+=x\n\tif a!=b and s==0:q=a;l+=b-a\nprint((\"Game cheated!\",q,\"Data not sufficient!\")[min(l,2)])\n\n", "h,q=list(map(int,input().split()))\nd=[(2**h,0),(2**(h-1),0)]\nfor _ in range(q):\n\ti,l,r,a=list(map(int,input().split()))\n\tl,r=l*2**(h-i),(r+1)*2**(h-i)\n\td.extend([[(l,1),(r,-1)],[(0,1),(l,-1),(r,1)]][a])\ns=0\nl=0\nd=sorted(d)\nfor (a,x),(b,_) in zip(d,d[1:]):\n\ts+=x\n\tif a!=b and s==0:q=a;l+=b-a\nprint((\"Game cheated!\",q,\"Data not sufficient!\")[min(l,2)])\n\n", "h,q=list(map(int,input().split()))\nd=[(2**h,0),(2**(h-1),0)]\nfor _ in range(q):\n\ti,l,r,a=list(map(int,input().split()))\n\tl,r=l*2**(h-i),(r+1)*2**(h-i)\n\td.extend([[(l,1),(r,-1)],[(0,1),(l,-1),(r,1)]][a])\ns=0\nl=0\nd=sorted(d)\nfor (a,x),(b,_) in zip(d,d[1:]):\n\ts+=x\n\tif a!=b and s==0:q=a;l+=b-a\nprint((\"Game cheated!\",q,\"Data not sufficient!\")[min(l,2)])\n\n", "h,q=list(map(int,input().split()))\nd=[(2**h,0),(2**(h-1),0)]\nfor _ in range(q):\n\ti,l,r,a=list(map(int,input().split()))\n\tl,r=l*2**(h-i),(r+1)*2**(h-i)\n\td.extend([[(l,1),(r,-1)],[(0,1),(l,-1),(r,1)]][a])\ns=0\nl=0\nd=sorted(d)\nfor (a,x),(b,_) in zip(d,d[1:]):\n\ts+=x\n\tif a!=b and s==0:q=a;l+=b-a\nprint((\"Game cheated!\",q,\"Data not sufficient!\")[min(l,2)])\n\n", "h,q=list(map(int,input().split()))\nd=[(2**h,0),(2**(h-1),0)]\nfor _ in range(q):\n\ti,l,r,a=list(map(int,input().split()))\n\tl,r=l*2**(h-i),(r+1)*2**(h-i)\n\td.extend([[(l,1),(r,-1)],[(0,1),(l,-1),(r,1)]][a])\ns=0\nl=0\nd=sorted(d)\nfor (a,x),(b,_) in zip(d,d[1:]):\n\ts+=x\n\tif a!=b and s==0:q=a;l+=b-a\nprint((\"Game cheated!\",q,\"Data not sufficient!\")[min(l,2)])\n\n", "h,q=list(map(int,input().split()))\nd=[(2**h,0),(2**(h-1),0)]\nfor _ in range(q):\n\ti,l,r,a=list(map(int,input().split()))\n\tl,r=l*2**(h-i),(r+1)*2**(h-i)\n\td.extend([[(l,1),(r,-1)],[(0,1),(l,-1),(r,1)]][a])\ns=0\nl=0\nd=sorted(d)\nfor (a,x),(b,_) in zip(d,d[1:]):\n\ts+=x\n\tif a!=b and s==0:q=a;l+=b-a\nprint((\"Game cheated!\",q,\"Data not sufficient!\")[min(l,2)])\n\n", "h,q=list(map(int,input().split()))\nd=[(2**h,0),(2**(h-1),0)]\nfor _ in range(q):\n\ti,l,r,a=list(map(int,input().split()))\n\tl,r=l*2**(h-i),(r+1)*2**(h-i)\n\td.extend([[(l,1),(r,-1)],[(0,1),(l,-1),(r,1)]][a])\ns=0\nl=0\nd=sorted(d)\nfor (a,x),(b,_) in zip(d,d[1:]):\n\ts+=x\n\tif a!=b and s==0:q=a;l+=b-a\nprint((\"Game cheated!\",q,\"Data not sufficient!\")[min(l,2)])\n\n", "h,q=list(map(int,input().split()))\nd=[(2**h,0),(2**(h-1),0)]\nfor _ in range(q):\n\ti,l,r,a=list(map(int,input().split()))\n\tl,r=l*2**(h-i),(r+1)*2**(h-i)\n\td.extend([[(l,1),(r,-1)],[(0,1),(l,-1),(r,1)]][a])\ns=0\nl=0\nd=sorted(d)\nfor (a,x),(b,_) in zip(d,d[1:]):\n\ts+=x\n\tif a!=b and s==0:q=a;l+=b-a\nprint((\"Game cheated!\",q,\"Data not sufficient!\")[min(l,2)])\n\n", "import sys\nfrom math import *\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn map(int, minp().split())\n\nh, q = mints()\na = [None]*(q*2+1)\nL = 1<<(h-1)\nR = (1<<h)-1\nj = 0\nfor i in range(q):\n\thh,l,r,ans = mints()\n\tl = (l<<(h-hh))\n\tr = ((r+1)<<(h-hh))-1\n\tif ans == 1:\n\t\tL = max(L, l)\n\t\tR = min(R, r)\n\telse:\n\t\ta[j] = (l,-1)\n\t\ta[j+1] = (r+1,1)\n\t\tj+=2\nif L > R:\n\tprint(\"Game cheated!\")\n\treturn\na[j]=((1<<h),-1)\na = a[:j+1]\na.sort()\n#print(a)\n#print(L,R)\ncnt = 0\nt = 1<<(h-1)\nans = None\nfor i in a:\n\tif i[0] != t:\n\t\tkk = min(R+1,i[0])-max(t,L)\n\t\t#print(i,t,cnt,kk)\n\t\tif cnt == 0 and kk >= 1:\n\t\t\tif ans != None or kk > 1:\n\t\t\t\tprint(\"Data not sufficient!\")\n\t\t\t\treturn\n\t\t\tans = max(t,L)\n\t\t#print(ans)\n\t\tt = i[0]\n\tcnt -= i[1]\nif ans == None:\n\tprint(\"Game cheated!\")\nelse:\n\tprint(ans)", "h,q=map(int,input().split())\nd=[(2**h,0),(2**(h-1),0)]\nfor _ in range(q):\n    i,l,r,a=map(int,input().split())\n    l,r=l*2**(h-i),(r+1)*2**(h-i)\n    d.extend([[(l,1),(r,-1)],[(0,1),(l,-1),(r,1)]][a])\ns=0\nl=0\nd=sorted(d)\nfor (a,x),(b,_) in zip(d,d[1:]):\n    s+=x\n    if a!=b and s==0:q=a;l+=b-a\nprint((\"Game cheated!\",q,\"Data not sufficient!\")[min(l,2)])"]