["n,m,k=map(int,input().split())\nprint(m*(m-1)//2)\nfor i in range(n):\n    a=list(map(int,input().split()))\nif k==0:\n    for i in range(m):\n        for j in range(i+1,m):\n            print(i+1,j+1)\nelse:\n    for i in range(m):\n        for j in range(i+1,m):\n            print(j+1,i+1)", "# -*- encoding: utf-8 -*-\n\nn, m, k = map(int, input().split())\n\nprint(m*(m-1)//2)\nfor i in range(m-1):\n    for j in range(m-1-i):\n        print('{} {}'.format(*((j+1, j+2)) if k == 0 else (j+2, j+1)))", "n,m,k = map(int,input().split())\nfor i in range(n):\n    a = [int(x) for x in input().split()]\nd = []\nfor i in range(1,m):\n\tfor j in range(i+1,m+1):\n\t\tif k == 0:\n\t\t\td.append((i,j))\n\t\telse:\n\t\t\td.append((j,i))\nprint(len(d))\nfor i in d:\n\tprint(*i)", "n, m, k = map(int, input().split())\nprint(str(m * (m - 1) // 2))\nfor i in range(1, m):\n    for j in range(i + 1, m + 1):\n        if k == 0:\n            print (str(i) + \" \" + str(j))\n        else:\n            print(str(j) + \" \" + str(i))", "n,m,k = map(int,input().split())\nprint(str(m*(m-1)//2))\nfor i in range(m):\n    for j in range(m-i-1):\n        if k == 0:\n            print(str(i+1)+' '+str(i+j+2))\n        else:\n            print(str(i+j+2)+' '+str(i+1))", "n,m,k = map(int, input().split())\nprint (m*(m-1)//2)\nfor i in range(m):\n\tfor j in range(i+1, m):\n\t\tprint (j+1, i+1) if k else print (i+1, j+1)\n\n", "n, m, k = map(int, input().split())\nprint(m * (m - 1) // 2)\nfor i in range(m - 1):\n    for j in range(1, m - i): print('{} {}'.format(*((j + 1, j)) if k else (j, j + 1)))", "n, m, k = list(map(int, input().split()))\nfor i in range(n):\n    a = list(map(int, input().split()))\nif k == 0:\n    x = 1\n    y = m + 1\n    z = 1\nelse:\n    x = m\n    y = 0\n    z = -1\nprint(m * (m - 1) // 2)\nfor i in range(x, y, z):\n    for j in range(x, y, z):\n        if k == 0 and i < j:\n            print(i, j)\n        if k == 1 and i > j:\n            print(i, j)\n", "n, m, k = map(int, input().split())\narrays = []\nfor i in range(n):\n    arrays.append(list(map(int, input().split())))\nprint(m * (m - 1) // 2)\nif k == 0:\n    for i in range(1, m):\n        for j in range(1, m - i + 1):\n            print(j, j + 1)\nelse:\n    for i in range(1, m):\n        for j in range(m, i, -1):\n            print(j, j - 1)", "n, m, k = map(int, input().split())\nprint(m * (m - 1) // 2)\nfor i in range(1, m):\n    for j in range(i + 1, m + 1):\n        if k == 0:\n            print (i,j)\n        else:\n            print(j,i)", "def main():\n    n, m, k = map(int, input().split())\n    print(m * (m - 1) // 2)\n    for i in range(1, m):\n        for j in range(i + 1, m + 1):\n            print(j, i) if k else print(i, j)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def s(n,m,k):\n\tprint(m*(m-1)//2)\n\tfor i in range(1,m):\n\t\tfor j in range(i+1,m+1):\n\t\t\tif k:\n\t\t\t\tprint(j,i)\n\t\t\telse:\n\t\t\t\tprint(i,j)\ns(*map(int,input().split()))", "#in the name of god\n#Mr_Rubick\nn,m,k=map(int,input().split())\nprint(str(m*(m-1)//2))\nfor i in range(1,m):\n    for j in range(i+1,m+1):\n        if k==0:\n            print(str(i)+\" \"+str(j))\n        else:\n            print(str(j)+\" \"+str(i))", "n,m,k = map(int, input().split())\nprint (m*(m-1)//2)\nfor i in range(m):\n\tfor j in range(i+1, m):\n\t\tprint (j+1, i+1) if k else print (i+1, j+1)", "n,m,k = map(int, input().split())\n\nprint (m*(m-1)//2)\n\nfor i in range(m):\n\n\tfor j in range(i+1, m):\n\n\t\tprint (j+1, i+1) if k else print (i+1, j+1)\n\n\n\n\n\n\n\n# Made By Mostafa_Khaled", "_, m, k = map(int, input().split())\nprint(m * (m-1) // 2)\nfor i in range(m):\n    for j in range(i+1, m):\n        print(j+1, i+1) if k else print(i+1, j+1)\n", "n,m,k=list(map(int,input().split()))\nprint((m*(m-1))//2)\nfor i in range(1,m):\n    for j in range(i+1,m+1):\n        if k:\n            print(j,i)\n        else:\n            print(i,j)    \n", "def arr_inp(n):\n    if n == 1:\n        return [int(x) for x in stdin.readline().split()]\n    elif n == 2:\n        return [float(x) for x in stdin.readline().split()]\n    else:\n        return [str(x) for x in stdin.readline().split()]\n\n\nfrom sys import stdin\nfrom itertools import *\n\nn, m, k = arr_inp(1)\narr, ans = [arr_inp(1) for i in range(n)], list(combinations(list(range(1, m + 1)), 2))\nprint(len(ans))\nfor i in range(len(ans)):\n    if k:\n        print(ans[i][1], ans[i][0])\n    else:\n        print(ans[i][0], ans[i][1])\n", "from sys import stdin,stdout\nimport math \nfrom collections import Counter,deque\nL=lambda:list(map(int, stdin.readline().strip().split()))\nM=lambda:list(map(int, stdin.readline().strip().split()))\nI=lambda:int(stdin.readline().strip())\nIN=lambda:stdin.readline().strip()\nC=lambda:stdin.readline().strip().split()\nmod=1000000007\n#Keymax = max(Tv, key=Tv.get)\ndef s(a):print(\" \".join(list(map(str,a))))\n#______________________-------------------------------_____________________#\n#I_am_pavan\ndef solve():\n    n,m,k=M()\n    print(m*(m-1)//2)\n    for i in range(1,m+1):\n        for j in range(i+1,m+1):\n            if k:\n                print(j,i)\n            else:print(i,j)\nfor i in range(1):\n    solve()\n", "from collections import *\nfrom math import *\n\nn,m,k = list(map(int,input().split()))\na = []\nif(k == 0):\n\tfor i in range(m):\n\t\tfor j in range(i+1,m):\n\t\t\ta.append([i+1,j+1])\nelse:\n\tfor i in range(m-1,-1,-1):\n\t\tfor j in range(i-1,-1,-1):\n\t\t\ta.append([i+1,j+1])\nprint(len(a))\nfor i in a:\n\tprint(*i)\n", "# ls.sort(key=lambda x: (x[0], x[1]))\nimport sys\n\ninf = float(\"inf\")\nmod = 1000000007\n\n\ndef array(): return list(map(int, sys.stdin.readline().split()))\ndef intt(): return list(map(int, sys.stdin.readline().split()))\nfrom bisect import bisect_left\nimport sys\n#n, k = map(int, sys.stdin.readline().split())\n#arr = list(map(int, sys.stdin.readline().split()))\n#arr=[(int(x),i) for i,x in enumerate(input().split())]\n# ls=list(map(int,input().split()))\n# for i in range(m):\n#print(s[i],end=\"\")\n#n=int(sys.stdin.readline())\nn,m,k=list(map(int, sys.stdin.readline().split()))\nls=[]\nfor i in range(n):\n    arr = list(map(int, sys.stdin.readline().split()))\n    ls.append(arr)\nprint(m*(m-1)//2)\nfor i in range(1,m):\n    for j in range(i+1,m+1):\n        if k==0:\n            print(i, j)\n        else:\n            print(j, i)\n", "#------------------------template--------------------------#\nimport os\nimport sys\nfrom math import *\nfrom collections import *\nfrom fractions import *\nfrom bisect import *\nfrom heapq import*\nfrom io import BytesIO, IOBase\ndef vsInput():\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nBUFSIZE = 8192\nclass FastIO(IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nALPHA='abcdefghijklmnopqrstuvwxyz'\nM=1000000007\ndef value():return tuple(map(int,input().split()))\ndef array():return [int(i) for i in input().split()]\ndef Int():return int(input())\ndef Str():return input()\ndef arrayS():return [i for i in input().split()]\n\n\n#-------------------------code---------------------------#\n# vsInput()\n\n\nn,m,o=value()\nfor i in range(n):\n    input()\n\nprint(m*(m-1)//2)\nfor i in range(1,m+1):\n    for j in range(i+1,m+1):\n        if(o==0):\n            print(i,j)\n        else:\n            print(m-i+1,m-j+1)\n        \n\n\n\n\n\n\n\n    \n\n\n\n\n                \n\n    \n\n\n\n\n\n\n\n\n\n    \n", "n,m,k = list(map(int,input().split()))\nfor i in range(n):\n    li = list(map(int,input().split()))\nans=[]\nfor i in range(1,m+1):\n    for j in range(i+1,m+1):\n        ans.append([i,j])\nif k==0:\n    print(len(ans))\n    for i in ans:\n        print(*i)\nelse:\n    print(len(ans))\n    for i in ans[::-1]:\n        print(*i[::-1])\n\n\n", "n,m,k = map(int, input().split())\nprint (m*(m-1)//2)\nfor i in range(m):\n\tfor j in range(i+1, m):\n\t\tprint (j+1, i+1) if k else print (i+1, j+1)\n\n"]