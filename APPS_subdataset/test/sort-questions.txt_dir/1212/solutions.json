["n, k = map(int, input().split())\nh = list(map(int, input().split()))\na = [0]*(n-k+1)\na[0] = sum(h[0:k])\nfor i in range(1,n-k+1):\n    a[i] = a[i-1]+h[i+k-1]-h[i-1]\nm = min(a)\nprint(a.index(m)+1)", "#Fence\n\ndata = input().split(\" \")\nn = int(data[0])\nk = int(data[1])\nminIndex = 1\nminCost = 0\nheights = input().split(\" \")\nheights = [int(x) for x in heights]\nfor j in range(k):\n\tminCost += heights[0+j]\n\ncost = minCost\nfor i in range(1,len(heights)-k+1):\n\tcost = cost - heights[i-1] + heights[i+k-1]\n\tif cost < minCost:\n\t\tminCost = cost\n\t\tminIndex = i+1\nprint(minIndex)", "n, k = list(map(int, input().split()))\nA = list(map(int, input().split()))\nB = [0] * n\nSum = 0\nfor i in range(len(A)):\n    Sum += A[i]\n    B[i] = Sum\nMin = 10e10\nind = 0\nB = [0] + B\nfor i in range(1, n - k + 2):\n    x = B[i + k - 1] - B[i - 1]\n    if x < Min:\n        Min = x\n        ind = i\nprint(ind)\n", "N, K = input().split()\nN, K = int(N), int(K)\nplanks = tuple(map(int, input().split()))\nmin_poss = 999999999\nsum_array = sorted(planks)\nsum_array[K-1] = sum(planks[:K])\nfor i in range(K,N):\n    sum_array[i] = cur = sum_array[i-1]+planks[i]-planks[i-K]\nprint(sum_array.index(min(sum_array[K-1:]))-K + 2)\n", "n, k = map(int, input().split())\nh = list(map(int, input().split()))\nans = [0]*(n-k+1)\n#for i in range(k):\n#    h.append(10**9)\nans[0]= sum(h[:k])\nminim = ans[0]\naminim = 0\nfor i in range(1,n-k+1):\n    ans[i] = ans[i-1]+h[i+k-1]-h[i-1]\n    if ans[i] < minim:\n        minim = ans[i]\n        aminim = i\nprint(aminim+1)", "n,k=list(map(int,input().split()))\n\n\nL=list(map(int,input().split()))\n\ns=sum(L[0:k])\n\nind=0\nminn=s\nans=0\nfor i in range(k,n):\n    s+=L[i]\n    s-=L[ind]\n    ind+=1\n    if(s<minn):\n        minn=s\n        ans=ind\nprint(ans+1)\n", "3\n\ndef readln(): return tuple(map(int, input().split()))\n\nn, k = readln()\nh = readln()\nans = s = sum(h[:k])\nj = 1\nfor _ in range(k, n):\n    s += -h[_ - k] + h[_]\n    if ans > s:\n        ans = s\n        j = _ - k + 2\nprint(j)\n", "n,k = list(map(int, input().split()))\na=list(map(int,input().split()))\nt=0\nresult=0\nfor i in range(0,k):\n    t+=a[i]\n    result+=a[i]\nindex=0\nfor i in range(k,n):\n    t+=a[i]\n    t-=a[i-k]\n    if result>t:\n        result=t\n        index=i-k+1\nprint(index+1)\n", "def readInput():\n    return [int(x) for x in input().split()]\n\ninputdata = readInput()\ndata = readInput()\n\nn = inputdata[0]\nk = inputdata[1]\n\nsums = list(range(n))\nfor i in range(n):\n    sums[i] = data[i]\n    if (i > 0):\n        sums[i] += sums[i - 1]\n\nindex = -1\nminVal = -1\n\ni = 0\nwhile i + k - 1 <= n - 1:\n    if (index == -1):\n        index = 0\n        minVal = sums[k - 1]\n    else:\n        curr = sums[i + k - 1] - sums[i - 1]\n        if (curr < minVal):\n            minVal = curr\n            index = i\n    i += 1\n\nprint(index + 1)\n", "n,k=map(int,input().split())\na=list(map(int,input().split()))\nb=[a[0]]\nfor i in range(1,n):\n    b.append(b[i-1]+a[i])\nmina=b[k-1]\nx=k-1\nfor i in range(k,n):\n    if b[i]-b[i-k]<mina:\n        x=i\n        mina=b[i]-b[i-k]\nprint(x-k+2)", "n, k = map(int, input().split())\nt = list(map(int, input().split()))\nfor i in range(n - 1):\n    t[i + 1] += t[i]\nt = [0] + t\nprint(min((t[i + k] - t[i], i) for i in range(n - k + 1))[1] + 1)", "n,m = list(map(int,input().split()))\nnum = [int(x) for x in input().split()]\nMin = Sum = Pos = 0\nfor i in range(m):\n    Sum += num[i]\nMin = Sum\nfor i in range(m,n):\n    Sum += num[i]-num[i-m]\n    if Min > Sum:\n        Min = Sum\n        Pos = i-m+1\nprint(Pos+1)\n", "n,m = list(map(int,input().split()))\nnum = [int(x) for x in input().split()]\nfor i in range(n-1): num[i+1]+=num[i]\nnum.insert(0,0)\nprint(min((num[i+m]-num[i],i) for i in range(n-m+1))[1]+1)\n\n", "def actions(n, k, h):\n\tj = 0\n\n\tsmin = sum([h[x] for x in range(0, k)])\n\tlast = smin\n\n\tfor i in range(1, n-k+1):\n\t\ts = last - h[i-1] + h[i+k-1]\n\t\tlast = s\n\t\tif s<smin:\n\t\t\tsmin = s\n\t\t\tj = i\n\n\treturn j+1\n\ndef main():\n\tn,k = list(map(int, input().split()))\n\th = list(map(int, input().split()))\n\n\tprint(actions(n,k,h))\n\ndef __starting_point(): main()\n__starting_point()", "#! /usr/bin/env python\n\nn, k = input().split()\nn = int(n)\nk = int(k)\nf = [int(x) for x in input().split()]\ntmp = 0\nfor i in range(k):\n    tmp += f[i]\nmini = tmp\npos = 0\nfor i in range(k, n):\n    tmp += f[i] - f[i - k]\n    if tmp < mini:\n        mini = tmp\n        pos = i - k + 1;\nprint(pos + 1)\n", "n, k = [int(x) for x in input().split()]\nl = [int(x) for x in input().split()]\n\ns = sum(l[0:k])\nt = s\nind=1\nfor i in range(k, n):\n\tt -=l[i-k]\n\tt +=l[i]\n\tif t<s:\n\t\ts = t\n\t\tind = i-k+2\nprint(ind)\n", "__author__ = 'asmn'\nn, k = tuple(map(int, input().split()))\nh = [0] + list(map(int, input().split()))\n\nfor i in range(1, n + 1):\n    h[i] += h[i - 1]\n\ns = [h[i] - h[i - k] for i in range(k, n + 1)]\n\nprint(s.index(min(s)) + 1)", "n,k=list(map(int,input().split()))\n\nz=[int(x) for x in input().split()]\n\npref=[0]\nfor i in range (1,n+1):\n    pref.append(z[i-1]+pref[i-1])\n\n##print (pref[:])\nminsum=1000000000\nminind=1\n\nfor j in range (1,n-k+2):\n    if (pref[j+k-1]-pref[j-1]<minsum):\n        minsum=pref[j+k-1]-pref[j-1]\n        minind=j\n    else:\n        continue\n\n\nprint (minind)\n", "n, k = map(int, input().split())\nh = list(map(int, input().split()))\ns = [0] * (n + 1)\nfor i in range(n):\n  s[i + 1] = s[i] + h[i]\nx = 0\ny = s[-1]\nfor i in range(n - k + 1):\n  if s[i + k] - s[i] < y:\n    x = i\n    y = s[i + k] - s[i]\nprint(x + 1)", "n, k = input().split(' ')\na = input().split(' ')\nsum = 0\nfor i in range(0, int(k)):\n    sum += int(a[i])\nres = sum\nans = 0\nfor i in range(int(k), int(n)):\n    sum += int(a[i])\n    sum -= int(a[i-int(k)])\n    if sum < res:\n        res = sum\n        ans = i - int(k) + 1\nprint(ans + 1)\n", "minimum = pow(10, 19)\nindex = 0\n\nn, k = list(map(int, input().split(' ')))\nfence = list(map(int, input().split(' ')))\n\nif k!=1:\n    dp = [0]+[fence[0]]+[0]*(n-1)\n    for t in range(2, n+1):\n        dp[t] = dp[t-1]+fence[t-1]\n\n    for u in range(n-k+1):\n        value = dp[u+k]-dp[u]\n        if value < minimum:\n            index = u\n            minimum = value\n\n    print(index+1)\n\nelse:\n    print(fence.index(min(fence))+1)\n", "minimum = pow(10, 19)\nindex = 0\n\nn, k = list(map(int, input().split(' ')))\nfence = list(map(int, input().split(' ')))\n\n\ndp = [0]+[fence[0]]+[0]*(n-1)\nfor t in range(2, n+1):\n    dp[t] = dp[t-1]+fence[t-1]\n\nfor u in range(n-k+1):\n    value = dp[u+k]-dp[u]\n    if value < minimum:\n        index = u\n        minimum = value\n\nprint(index+1)\n", "n, k = [int(x) for x in input().split()]\nh = [int(x) for x in input().split()]\ns = sum(h[: k])\nres = s\npos = 0\nfor i in range(n - k):\n\ts += h[i + k] - h[i]\n\tif s < res:\n\t\tres = s\n\t\tpos = i + 1\nprint(pos + 1)\n", "def main():\n    n, k = map(int, input().split())\n    hh = list(map(int, input().split()))\n    s = sum(hh[:k])\n    l = [s]\n    for a, b in zip(hh, hh[k:]):\n        s = s + b - a\n        l.append(s)\n    print(min(range(len(l)), key=l.__getitem__) + 1)\n\n\ndef __starting_point():\n    main()\n__starting_point()"]