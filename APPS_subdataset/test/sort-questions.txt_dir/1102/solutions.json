["n, a = list(map(int, input().split()))\nx = list(map(int, input().split()))\n\na -= 1\n\nresult = x[a]\n\nfor i in range(1, n + 1):\n    le = a - i\n    rg = a + i\n\n    le_i = le >= 0 and le < n\n    rg_i = rg >= 0 and rg < n\n    if not le_i and not rg_i:\n        break\n\n    if le_i and not rg_i:\n        result += x[le]\n    elif not le_i and rg_i:\n        result += x[rg]\n    else:\n        if x[le] == x[rg] == 1:\n            result += 2\n\nprint(result)\n", "n, a = map(int, input().split())\nt = list(map(int, input().split()))\na -= 1\nd = [0] * n\nfor i in range(n):\n    if t[i] == 1:\n        d[abs(i - a)] += 1\n\nres = 0\ni1 = i2 = a\nfor i in range(n):\n    if d[i] == 2:\n        res += 2\n    elif d[i] == 1 and (i1 < 0 or i2 >= n or i1 == i2):\n        res += 1\n    i1 -= 1\n    i2 += 1\nprint(res)", "n, a = list(map(int, input().split()))\narr = list(map(int, input().split()))\na -= 1\nl = a\nr = a\nans = 0\nwhile l >= 0 or r < n:\n    if l < 0:\n        if arr[r]:\n            ans += 1\n    elif r >= n:\n        if arr[l]:\n            ans += 1\n    elif l == r and arr[l] == 1:\n        ans += 1\n    elif arr[l] == 1 and arr[r] == 1:\n        ans += 2\n    l -= 1\n    r += 1\nprint(ans)\n", "read = lambda: list(map(int, input().split()))\nn, a = read()\nt = list(read())\nans = 0\nfor d in range(n):\n    i, j = a - d - 1, a + d - 1\n    if i == j: ans += t[i]\n    elif i >= 0 and j < n and t[i] == t[j]: ans += t[i] + t[j]\n    elif i < 0 and j < n: ans += t[j]\n    elif i >= 0 and j >= n: ans += t[i]\nprint(ans)\n", "import sys,math\nn,m=map(int,input().split())\nm-=1\nz=list(map(int,input().split()))\na=m\nb=m\nans=0\nwhile a<n or b>=0:\n    if a<n and b>=0 and a!=b:\n        if z[a]==1 and z[b]==1:\n            ans+=2\n    elif a==b:\n        if z[a]==1:\n            ans+=1\n    elif b>=0:\n        if z[b]==1:\n            ans+=1\n    else:\n        if z[a]==1:\n            ans+=1\n    a+=1\n    b-=1\nprint(ans)", "n, p = map(int, input().split())\np -= 1\na = list(map(int, input().split()))\n\nres = a[p]\nfor i in range(1, len(a)):\n\tif p - i < 0 and p + i >= len(a):\n\t\tbreak\n\n\tif p - i < 0:\n\t\tres += a[p + i]\n\telif p + i >= len(a):\n\t\tres += a[p - i]\n\telif a[p + i] + a[p - i] == 2:\n\t\tres += 2\nprint(res)", "[n, a], c = list(map(int, input().split())), [0] + list(map(int, input().split()))\nans = 0\nfor d in range(max(a, n - a + 1)):\n    directions = found = 0\n    if a - d > 0:\n        directions += 1\n        found += c[a - d]\n    if a + d <= n and d:\n        directions += 1\n        found += c[a + d]\n    ans += (directions == found) * found\nprint(ans)\n", "def in_bounds(x, n):\n    return 0 <= x < n\n\nn, a = list(map(int, input().split()))\nt = list(map(int, input().split()))\n\na -= 1\nans = t[a]\nfor d in range(1, n):\n    l = a - d\n    r = a + d\n\n    if in_bounds(l, n) and in_bounds(r, n) and t[l] == 1 and t[r] == 1:\n        ans += 2\n    elif not in_bounds(l, n) and in_bounds(r, n) and t[r] == 1:\n        ans += 1\n    elif in_bounds(l, n) and not in_bounds(r, n) and t[l] == 1:\n        ans += 1\n\nprint(ans)\n", "n, a = list(map(int, input().split()))\ns = list(map(int, input().split()))\na -= 1\nif s[a] == 1:\n    ans = -1\nelse:\n    ans = 0\nfor i in range(n):\n    p1 = a - i\n    p2 = a + i\n    if p1 >= 0 and s[p1] == 1:\n        c = 1\n    else:\n        c = 0\n    if p2 < n and s[p2] == 1:\n        c += 1\n    if c == 2:\n        ans += 2\n    elif (c == 1 and p1 < 0) or (c == 1 and p2 >= n):\n        ans += 1\nprint(ans)\n", "n, a = map(int, input().split())\na -= 1\nt = list(map(int, input().split()))\nans = t[a]\nfor d in range(1, n):\n    if a >= d and a + d < n and t[a - d] and t[a + d]:\n        ans += 2\n    elif a < d and a + d < n and t[a + d]:\n        ans += 1\n    elif a >= d and a + d >= n and t[a - d]:\n        ans += 1\nprint(ans)", "n, a = list(map(int, input().split()))\nv = list(map(int, input().split()))\na -= 1\nit = 0\ncnt = 0\nwhile (a - it >= 0) and (a + it < n):\n\tx = v[a - it] + v[a + it] \n\tif it == 0:\n\t\tif x == 2:\n\t\t\tcnt += 1\n\telif x == 1:\n\t\tif it == 0:\n\t\t\tcnt += 1\n\telif x == 2:\n\t\tcnt += 2\n\tit += 1\n\nwhile (a - it >= 0) or (a + it < n):\n\tif a - it >= 0:\n\t\tcnt += v[a - it]\n\tif a + it < n:\n\t\tcnt += v[a + it]\n\tit += 1\n\nprint(cnt)\n\n\n\n", "import sys\n\nn, a = list(map(int, input().split()))\n\narr = list(map(int, input().split()))\n\ni, j = a - 1, a - 1\n\nc = 0\n\nif arr[i]:\n    c += 1\n\nwhile i >= 0 or j < n:\n    i -= 1\n    j += 1\n    if i >= 0 and j < n and arr[i] == arr[j] == 1:\n        c += 2\n    elif i >= 0 and j >= n and arr[i]:\n        c += 1\n    elif i < 0 and j < n and arr[j]:\n        c += 1\n\nprint(c)\nsys.stdout.flush()\n", "n, a = map(int, input().split())\nt = list(map(int, input().split()))\ncnt = [0 for i in range(101)]\ncrime = [0 for i in range(101)]\nfor i in range(1, n + 1):\n    d = abs(a - i)\n    cnt[d] += 1\n    crime[d] += t[i - 1]\nans = 0\nfor i in range(101):\n    if crime[i] == cnt[i]:\n        ans += crime[i]\nprint(ans)", "from collections import defaultdict,deque,Counter,OrderedDict\nimport sys\nsys.setrecursionlimit(20000)\ndef main():\n    n,he = map(int,input().split())\n    he -= 1\n    l = [int(i) for i in input().split()]\n    ans = l[he]\n    for i in range(1,100):\n        tor = he + i\n        tol = he - i\n        if tor < n and tol >= 0:\n            if l[tor] == 1 and l[tol] == 1:\n                ans += 2\n        elif tor < n:\n            if l[tor] == 1:\n                ans += 1\n        elif tol >= 0:\n            if l[tol] == 1:\n                ans += 1\n    print(ans)\n\n\n\n\n\ndef __starting_point():\n    main()\n__starting_point()", "#!/usr/bin/env python3\n\nn, l = (int(i) for i in input().split())\nn_criminals = [int(i) for i in input().split()]\ntotal = 0\n\nfor i in range(101):\n    cities = set([l + i, l - i])\n    cities = { c for c in cities if c > 0 and c <= n }\n    criminals = sum(n_criminals[c-1] for c in cities)\n\n    if criminals == len(cities):\n        total += criminals\n\nprint(total)\n", "__author__ = 'Utena'\nn,a=map(int,input().split())\ncities=[0]+list(map(int,input().split()))\np=[0]*n\nc=[0]*n\nfor i in range(n):\n    if i==0:p[i]=1\n    elif i<=min(n-a,a-1):p[i]=2\n    elif min(n-a,a-1)<i<=max(n-a,a-1):p[i]=1\n    else:p[i]=0\nfor i in range(1,n+1):\n    c[abs(a-i)]+=cities[i]\nt=0\nfor i in range(n):\n    if c[i]==p[i]:\n        t+=c[i]\nprint(t)", "n, a = [int(x) for x in input().split(' ')]\n\nt = [0] + [int(x) for x in input().split(' ')]\n\nm = min(n-a, a-1)\n\nres = 0\n\nif t[a] == 1:\n\tres += 1\n\tt[a] = 0\n\nfor i in range(1,m+1):\n\ts = t[a+i] + t[a-i]\n\tif s == 2: res += 2\n\tt[a+i],t[a-i] = 0, 0\n\t\nprint(res + sum(t))", "n, a = map(int, input().split())\na -= 1\ncriminal = list(map(int, input().split()))\nl = []\nr = []\n\nr = criminal[a + 1:]\nl = criminal[:a][::-1]\n\nans = 0\n\nif criminal[a] == 1:\n    ans += 1\n\ns = min(len(r), len(l))\nfor i in range(s):\n    if l[i] == r[i]:\n        ans += 2 * l[i]\n\nif len(r) > len(l):\n    ans += sum(r[s:])\nelif len(l) > len(r):\n    ans += sum(l[s:])\n\nprint(ans)", "n, a = map(int, input().split())\ncriminals = list(map(int, input().split()))\ni = j = a - 1\namount = 0\nwhile i >= 0 and j < n:\n    if criminals[i] == criminals[j] == 1:\n        amount += 1 if i == j else 2\n    i -= 1\n    j += 1\nwhile i >= 0:\n    amount += criminals[i]\n    i -= 1\nwhile j < n:\n    amount += criminals[j]\n    j += 1\nprint(amount)", "n,a = (int(i) for i in input().split())\nl =list(map(int,input().split()))\na-=1\nans = 0\nfor d in range(n):\n    if d == 0 and l[a] == 1:\n        ans+=1\n    elif a-d>=0 and a+d<n and l[a-d] == 1 and l[a+d] == 1:\n        ans+=2\n    elif a-d < 0 and a+d<n and l[a+d] == 1:\n        ans+=1\n    elif a-d>=0 and a+d >= n and l[a-d] == 1:\n        ans+=1\n        \nprint(ans)\n", "n, a = list(map(int, input().split()))\na -= 1\nt = list(map(int, input().split()))\nans = 0\nR = list(range(0, n))\nfor dis in range(0, 100):\n    l = a - dis\n    r = a + dis\n    if l not in R and r not in R:\n        break\n    elif l in R and r not in R:\n        ans += t[l]\n    elif l not in R and r in R:\n        ans += t[r]\n    elif t[l] == 1 and t[r] == 1:\n        ans += 2 if l != r else 1\nprint(ans)\n", "n, a = list(map(int,input().split()))\nc = list(map(int,input().split()))\nres = c[a-1]\nfor i in range(1, max(n-a+1,a)):\n    l, r = a - 1 - i, a - 1 + i\n    if l >= 0 and r < n:\n        if c[l] and c[r]:\n            res += 2\n    elif l >= 0:\n        if c[l]:\n            res += 1\n    elif r < n:\n        if c[r]:\n            res += 1\nprint(res)\n", "[n,a] = list(map(int, input().split(\" \")))\nt = list(map(int, input().split(\" \")))\n\nm1 = min(n-a, a-1) # t==2 then can catch for m1>=d>=1\n\ns = t[a-1]\n\nfor i in range(1,m1+1):\n\tif t[a-1-i] + t[a-1+i] == 2:\n\t\ts += 2\n\nfor i in range(n):\n\tif abs(a-1-i) <= m1:\n\t\tcontinue\n\ts += t[i]\n\n\nprint(s)\n", "n, a = map(int, input().split())\narr = list(map(int, input().split()))\na -= 1\nans = 0\nfor i in range(n):\n\t# print(i, ans, 2 * a - i)\n\tif (i == a):\n\t\tans += arr[i]\n\telif (i < a):\n\t\tj = 2 * a - i\n\t\tif (j >= n or arr[j] == 1):\n\t\t\tans += arr[i]\n\telse:\n\t\tj = 2 * a - i\n\t\tif (j < 0 or arr[j] == 1):\n\t\t\tans += arr[i]\nprint(ans)", "n,a=map(int,input().split())\nt=[0]+list(map(int,input().split()))\nans=t[a]\nfor i in range(1,max(a,n-a+1)):\n   if a-i>0 and a+i<=n:\n      if t[a-i]==t[a+i]: ans+=t[a-i]+t[a+i]\n   elif a-i>0: ans+=t[a-i]\n   else: ans+=t[a+i]\n    \nprint(ans)"]