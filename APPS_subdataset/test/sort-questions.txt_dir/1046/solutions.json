["#scott http://codeforces.com/problemset/problem/291/A now? ok you start\n\nn = int(input())\narr = list(map (int, input().split())) #scott\n\n#for i in arr:\n#    print (i)\n\ncnt = 0 \nclast, llast = -1, -1 #scott wait we need to sort\n\narr = sorted(arr)\n\nbad = False #scott so now we just count # of pairs and make sure there's not 3 in a row right?ok\n#so a neat thing you can do is just for x in arr\nfor i in arr:\n    #print (i)\n    if i > 0: #scott so last was the last one, llast was the second last one\n        if i == clast :\n            cnt += 1 #scott\n            if clast == llast :\n                bad = True #scott your turn\n        llast = clast\n        clast = i #scott\nif bad == False:\n    print (cnt) #scott\nelse:\n    print(-1) #scott\n\n#darn ii'm getting RTE test 1\n", "n=int(input())\ns=input().split()\nfor i in range(n):\n    s[i]=int(s[i])\nans=0\ndone=False\nfor i in range(n):\n    if(s[i]==0):\n        continue\n    n=s[i+1:].count(s[i])\n    if(n==1):\n        ans+=1\n    elif(n>1):\n        print(-1)\n        done=True\n        break\n\nif(not done):\n    print(ans)\n", "import sys\nmy_file = sys.stdin\n#my_file = open(\"input.txt\", \"r\")\nmy_file.readline()\nnums = [int(i) for i in my_file.readline().split(\" \")]\nspeaking = 0\nfor i in nums:\n    if i > 0:\n        if nums.count(i) == 2:\n            speaking += 1\n        elif nums.count(i) > 2:\n            speaking = -1\n            break\nif speaking > 0:\n    print(int(speaking/2))\nelse:\n    print(speaking)", "n, s = int(input()), 0\nt = list(map(int, input().split()))\np = set(t)\np.discard(0)\nfor i in p :\n    k = t.count(i)\n    if k == 2: s += 1\n    elif k > 2:\n        s = -1\n        break\nprint(s)", "def main(n, nums):\n\tdata = {}\n\tRn = range(n)\n\tanswer = 0\n\n\tfor i in Rn:\n\t\titem = str(nums[i])\n\t\tif item!='0':\n\t\t\tif item not in data:\n\t\t\t\tdata[item]=0\n\t\t\tdata[item]+=1\n\n\tfor item in data.keys():\n\t\tval = data[item]\n\t\tif val==2:\n\t\t\tanswer+=1\n\t\telif val>2:\n\t\t\treturn -1\n\n\treturn answer\n\ndef init():\n\tn = int(input())\n\tnums = list(map(int, input().split()))\n\n\tprint(main(n, nums))\n\ninit()", "n=int(input())\n\nC={}\n\nL=list(map(int,input().split()))\n\nfor i in range(n):\n    item=L[i]\n    if(item in C):\n        C[item].append(i)\n    else:\n        C[item]=[i]\nvalid=True\nans=0\nfor item in C:\n    if(item==0):\n        continue\n    if(len(C[item])>2):\n        valid=False\n        ans=-1\n        break\n    if(len(C[item])==2):\n       ans+=1\n\nprint(ans)\n", "input()\nd=input().split()\nans=0\nfor i in d:\n    if(d.count(i)>2 and i!='0'):print(-1);break\n    elif(d.count(i)==2 and i!='0'):ans+=1\nelse:print(ans//2)", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nfor i in range(n):\n    if a[i] != 0:\n        a = a[i:n]\n        break\n\nl = len(a)\nc = [0]*l\nc[0] = 1\nfor i in range(1, l):\n    if a[i] != a[i-1]:\n        c[i] = 1\n    else:\n        c[i] = c[i-1] + 1\n\nif l == a.count(0):\n    print(0)\nelif c.count(1) + c.count(2) != l:\n    print(-1)\nelse:\n    print(c.count(2))\n\n", "input()\na,i,c=input().split(),0,0\na.sort()\nwhile i<len(a):\n    j=a.count(a[i])\n    if a[i]!='0':\n        if j==2:\n            c+=1\n        elif j>2:\n            c=-1\n            break\n    i+=j\nprint(c)\n", "n=int(input())\n\ny=input().split()\nx=[int(f) for f in y]\nz=x[:]\nzeros=[]\nwhile (z.count(0)>0):\n    z.remove(0)\n    zeros.append(0)\n    \n\ncount=0\ncount1=0\nq=list(set(z))\nfor i in range (0,len(q)):\n    key=q[i]\n    if (z.count(key)==2):\n        count+=1\n    if (z.count(key)==1):\n        count=count\n    if (z.count(key)>2):\n        count1=count1-1\n        break\n\nif (count1==0):\n    print (count)\nelse:\n    print(-1)\n    \n    \n        \n    \n\n\n\n    \n    \n\n\n    \n    \n", "t = int(input())\nsec = list(map(int, input().split()))\ntotal = 0\nm = set(sec)\nfor i in m:\n    if i == 0:\n        continue\n    if sec.count(i) > 2:\n        print(-1)\n        return\n    if sec.count(i) == 2:\n        total += 1\nprint(total)", "__copyright__ = ''\n__author__ = 'Son-Huy TRAN'\n__email__ = \"sonhuytran@gmail.com\"\n__doc__ = ''\n__version__ = '1.0'\n\n\ndef count_sessions(sessions: list) -> int:\n    session_dict = {}\n\n    for session in sessions:\n        if session == 0:\n            continue\n\n        session_count = session_dict.get(session, 0)\n\n        if session_count >= 2:\n            return -1\n\n        session_dict[session] = session_count + 1\n\n    count = 0\n\n    for value in session_dict.values():\n        if value >= 2:\n            count += 1\n\n    return count\n\n\ndef main() -> int:\n    n_calls = int(input())\n    sessions = [int(word) for word in input().split()]\n\n    print(count_sessions(sessions))\n    return 0\n\n\ndef __starting_point():\n    exit(main())\n__starting_point()", "n = int(input())\ns = list(map(int, input().split()))\nx = set(s)\n\nr = 0\n\nfor i in x:\n    if i != 0:\n        p = s.count(i)\n        if p == 2:\n            r += 1\n        elif p > 2:\n            print(-1)\n            return\n\nprint(r)\n", "n = int(input())\ns = input().split()\nd = {}\nfor i in s:\n    d[i] = d.get(i, 0) + 1\nans = 0\nfor i in d:\n    if i == '0':\n        continue\n    if d[i] == 2:\n        ans += 1\n    elif d[i] > 2:\n        print('-1')\n        break\nelse:\n    print(ans)", "n, calls = int(input()), list(map(int, input().split()))\n\nres = 0\nfor x in set(calls):\n    if calls.count(x) == 2 and x != 0:\n        res += 1\n    if calls.count(x) >= 3 and x != 0:\n        res = -1\n        break\n\nprint(res)", "n = int(input())\nd = list(map(int, input().split()))\ncalls = dict()\ninvalid = False\nc = 0\nfor i in range(n):\n    if d[i] > 0:\n        if d[i] in calls.keys() : calls[d[i]] += 1\n        else : calls[d[i]] = 1\n        if calls[d[i]] == 2:\n           c += 1\n        elif calls[d[i]] == 3:\n            invalid = True\n            break\n        \nif invalid: print(-1)\nelse: print(c)", "#July 4, 2014\nsecs=int(input())\ncalls=input().split(' ')\ntotal=0\ncalls.sort()\nfalse=0\nfor x in range(len(calls)-2):\n    if calls[x]==calls[x+1] and calls[x]!='0':\n        if calls[x+1]==calls[x+2] and calls[x+1]!='0':\n            print(-1)\n            false=1\n            break\n        else:\n            total+=1\nif false!=1:\n    if len(calls)>=2:\n        if calls[len(calls)-2]==calls[len(calls)-1] and calls[len(calls)-1]!='0':\n            total+=1\n    print(total)\n", "import sys\nimport math\n\nn = int(sys.stdin.readline())\n\nid = [int(x) for x in (sys.stdin.readline()).split() if x != '0']\n\nif(len(id) == 0):\n    print(0)\n    return\n\nres = 0\nid.sort()\n\nv = id[0]\nk = 1\nfor x in id[1:]:\n    if(x == v):\n        k += 1\n    else:\n        if(k == 2):\n            res += 1\n        elif(k > 2):\n            print(-1)\n            return\n        v = x\n        k = 1\n\nif(k == 2):\n    res += 1\nelif(k > 2):\n    print(-1)\n    return  \n    \nprint(res)      \n", "from collections import Counter\nn = int(input())\ncnt = Counter(int(x) for x in input().split())\nans = 0\nfor (a, b) in list(cnt.items()):\n\tif a:\n\t\tif b == 2:\n\t\t\tans += 1\n\t\tif b > 2:\n\t\t\tprint(-1)\n\t\t\treturn\nprint(ans)\n", "from collections import Counter\n\n\ndef main():\n    n = int(input())\n    d = Counter(list(map(int, input().split())))\n    d[0] = 0\n    if max(d.values()) < 3:\n        print(sum(_ == 2 for _ in list(d.values())))\n        # print(Counter(d.values())[2])\n    else:\n        print(-1)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from collections import Counter\n\n\ndef main():\n    n = int(input())\n    d = Counter(list(map(int, input().split())))\n    d[0] = 0\n    if max(d.values()) < 3:\n        # print(sum(_ == 2 for _ in d.values()))\n        print(Counter(list(d.values()))[2])\n    else:\n        print(-1)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "# coding: utf-8\nn = int(input())\nid = [int(i) for i in input().split() if i!='0']\nid.sort()\nans = 0\nwhile id:\n    tmp = id.pop()\n    if id and tmp == id[-1]:\n        ans += 1\n        id.pop()\n    if id and tmp == id[-1]:\n        ans = -1\n        break\nprint(ans)\n", "input()\nlst = list(map(int, input().split()))\n\ndct = {}\nfor i in lst:\n    if i > 0:\n        dct[i] = dct.get(i, 0) + 1\n\ntotal = 0\nfor v in list(dct.values()):\n    if v == 2:\n        total += 1\n    elif v > 2:\n        total = -1\n        break\n\nprint(total)\n", "n = int(input())\ns=0\nl=input().split()\n\nfor i in range(n):\n    l[i]=int(l[i])\nr=0    \nfor i in range(n-1):\n    r=0\n    if(l[i]!=0):\n        for j in range(i+1,n):\n            if(l[i]==l[j]):\n                r+=1\n        if(r==1):\n            s+=1\n        elif(r>1):\n            print(-1)\n            break\nif(r<=1):\n    print(s)\n\n\n\n\n\n\n\n\n\n\n", "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\nr = 0\nbad = False\nfor i in range(n-1):\n    if l[i] == 0 :\n        continue\n    if l[i] == l[i+1]:\n        r += 1\n    if i < n-2 and l[i+2] == l[i]:\n        print(-1)\n        bad = True\n        break\nif not bad :\n    print(r)"]