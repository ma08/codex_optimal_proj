["from re import findall\ndef f(num):\n if num == 0:\n  return 1\n else:\n  return num*f(num-1)\ndic = {1: [0,1,2,3,53,52],2: [4,5,6,7,50,51],3: [8,9,10,11,48,49],\n  4: [12,13,14,15,47,46], 5: [16,17,18,19,44,45],6:[20,21,22,23,42,43],\n  7:[24,25,26,27,40,41],8:[28,29,30,31,38,39],9:[32,33,34,35,36,37]}\ndef test():\n nonlocal inp,x\n net = 0\n for com in list(dic.values()):\n  count = 0\n  for xx in com:\n   if inp[xx] == '0':\n    count += 1\n  if count >= x:\n   net += f(count)/f(x)/f(count-x)\n return net\n    \n    \nx,n = [int(x) for x in findall(\"\\d+\",input())]\ncount,arr = 0,[]\nfor i in range(n):\n inp = input()\n count += test()\nprint(count)", "x,n=list(map(int,input().split()))\nways=0\ndef permute(n,k):\n way=1\n if n==k:\n  return 1\n \n for i in range(n-k+1,n+1):\n  way*=i\n  \n return way\n\ndef combine(n,k):\n if n==k:\n  return 1\n p=factorial(k)\n way=permute(n,k)\n return way/p\ndef factorial(n):\n x=1\n for i in range(2,n+1):\n  x*=i\n  \n return x\n\nfor _ in range(n):\n cart=input().strip()\n compartment=[6 for _ in range(9)]\n num=0\n for i in range(36):\n  if cart[i]=='1':\n   compartment[num]-=1\n  \n  if (i+1)%4==0:\n   num+=1\n num-=1 \n for i in range(36,54):\n  if cart[i]=='1':\n   compartment[num]-=1\n  \n  if (i+1)%2==0:\n   num-=1\n   \n for seat in compartment:\n  if seat>=x:\n   ways+=combine(seat,x)\n   \nprint(ways)"]