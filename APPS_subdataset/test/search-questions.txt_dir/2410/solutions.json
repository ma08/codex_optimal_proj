["import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    input()\n    l = list(map(int,input().split()))\n\n    bad = False\n    \n    curr = 0\n    for v in l:\n        curr += v\n        if curr <= 0:\n            bad = True\n            break\n\n    l.reverse()\n    curr = 0\n    for v in l:\n        curr += v\n        if curr <= 0:\n            bad = True\n            break\n\n    if bad:\n        print('NO')\n    else:\n        print('YES')\n", "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int,input().split()))\n\tans = \"YES\"\n\tcur = 0\n\tfor i in range(n-1):\n\t\tcur += a[i]\n\t\tif cur <= 0:\n\t\t\tans = \"NO\"\n\tcur = 0\t\n\tfor i in range(n-1,0,-1):\n\t\tcur += a[i]\n\t\tif cur <= 0:\n\t\t\tans = \"NO\"\n\tprint(ans)\t\t\t\n", "import sys\ninput=sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    it=list(map(int,input().split()))\n    su=0\n    ma=-float(\"inf\")\n    for i in range(n-1):\n        su+=it[i]\n        ma=max(ma,su)\n        su=max(su,0)\n    su=0\n    for i in range(1,n):\n        su+=it[i]\n        ma=max(ma,su)\n        su=max(su,0)\n    if sum(it)>ma:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "q = int(input())\nfor re in range(q):\n\tn = int(input())\n\tl = list(map(int,input().split()))\n\tpref = [0] * n\n\tpref[0] = l[0]\n\tfor i in range(1, n):\n\t\tpref[i] = pref[i-1] + l[i]\n\tprefr = [0] * n\n\tprefr[0] = l[n-1]\n\tfor i in range(1,n):\n\t\tprefr[i] = prefr[i-1] + l[n-i-1]\n\todp = 1\n\tfor i in range(n):\n\t\tif prefr[i] <= 0:\n\t\t\todp = 0\n\t\t\tbreak\n\tfor i in range(n):\n\t\tif pref[i] <=0:\n\t\t\todp = 0\n\t\t\tbreak\n\tif odp:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")", "# = map(int, input().split())\n# = list(map(int, input().split()))\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    z = list(map(int, input().split()))\n    sm = sum(z)\n    maxsum = 0\n    minpref = 0\n    curpref = 0\n    for a in z[:-1]:\n        curpref += a\n        if curpref - minpref > maxsum:\n            maxsum = curpref - minpref\n        minpref = min(minpref, curpref)\n    minpref = 0\n    curpref = 0\n    for a in z[1:]:\n        curpref += a\n        if curpref - minpref > maxsum:\n            maxsum = curpref - minpref\n        minpref = min(minpref, curpref)\n    if maxsum < sm:\n        print('YES')\n    else:\n        print('NO')\n", "def maxSubArraySum(a,size): \n    max_so_far =a[0] \n    curr_max = a[0] \n      \n    for i in range(1,size): \n        curr_max = max(a[i], curr_max + a[i]) \n        max_so_far = max(max_so_far,curr_max) \n          \n    return max_so_far \n\ndef main():\n    t = int(input())\n    ans = []\n    for i in range(t):\n        n = int(input())\n        arr = list(map(int,input().split()))\n        total = sum(arr)\n        sum1 = maxSubArraySum(arr[:n-1],n-1)\n        sum2 = maxSubArraySum(arr[1:],n-1)\n        if total > max(sum1,sum2):\n            ans.append('YES')\n        else:\n            ans.append('NO')\n\n    for i in ans:\n        print(i)\n\n\nmain()\n", "def mi():\n        return list(map(int, input().split()))\n'''\n3\n4\n1 2 3 4\n3\n7 4 -1\n3\n5 -5 5\n'''\n\n\ndef maxSubArraySum(a, size):\n    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\nfor _ in range(int(input())):\n        n = int(input())\n        a = list(mi())\n        ade = max(maxSubArraySum(a,n-1), maxSubArraySum(a[1:],n-1))\n        if sum(a)>ade:\n                print ('YES')\n        else:\n                print ('NO')\n", "test = int(input())\nfor z in range(test):\n    amount = int(input())\n    numb = list(map(int, input().split()))\n    all = sum(numb)\n    happy = True\n    summ = 0\n    for i in range(amount - 1):\n        summ += numb[i]\n        if summ <= 0:\n            happy = False\n            break\n    if (not happy):\n        print('NO')\n        continue\n    else:\n        summ = 0\n        for i in range(amount - 1, 0, -1):\n            summ += numb[i]\n            if summ <= 0:\n                happy = False\n                break\n        if not happy:\n            print('NO')\n            continue\n    print(\"YES\")", "import sys\ninput = sys.stdin.readline\n\nfrom itertools import accumulate\n\nt=int(input())\n\nfor test in range(t):\n    n=int(input())\n    A=list(map(int,input().split()))\n\n    S=list(accumulate(A))\n\n    for s in S:\n        if s<=0:\n            print(\"NO\")\n            break\n\n    else:\n        B=A[::-1]\n\n        S=list(accumulate(B))\n\n        for s in S:\n            if s<=0:\n                print(\"NO\")\n                break\n\n        else:\n            print(\"YES\")\n        \n\n", "import sys\nreader = (s.rstrip() for s in sys.stdin)\ninput = reader.__next__\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    yasser = sum(a)\n    ans = True\n    cur = 0\n    for i in range(n-1):\n        cur += a[i]\n        if cur <= 0:\n            ans = False\n            break\n    cur = 0\n    for i in reversed(list(range(1, n))):\n        cur += a[i]\n        if cur <= 0:\n            ans = False\n            break\n    if ans:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nt = int(input())\nfor i in range(t):\n    solve()\n\n", "def maxSubArraySum(a,size): \n      \n    max_so_far = 0\n    max_ending_here = 0\n      \n    for i in range(0, size): \n        max_ending_here = max_ending_here + a[i] \n        if max_ending_here < 0: \n            max_ending_here = 0\n          \n        # Do not compare for all elements. Compare only    \n        # when  max_ending_here > 0 \n        elif (max_so_far < max_ending_here): \n            max_so_far = max_ending_here \n              \n    return max_so_far\ndef case():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans1 = maxSubArraySum(a[1:], n-1)\n    ans2 = maxSubArraySum(a[:-1], n-1)\n    s = sum(a)\n    if s > max(ans1, ans2):\n        print(\"YES\")\n    else:\n        print(\"NO\")\nfor _ in range(int(input())):\n    case()", "def ans(arr, n):\n    left = arr[0]\n    if left <= 0:\n        return False\n    for i in range (1, n):\n        left += arr[i]\n        if left <= 0:\n            return False\n    right = arr[n - 1]\n    if right <= 0:\n        return False\n    i = n - 2\n    while i >= 0:\n        right += arr[i]\n        if right <= 0:\n            return False\n        i -= 1\n    return True\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int,input().split()))\n    if ans(arr, n):\n        print(\"YES\")\n    else:\n        print(\"NO\")", "def max_subarray(arr):\n    max_ending = max_current = arr[0]\n\n    for i in arr[1:]:\n        max_ending = max(i, max_ending + i)\n        max_current = max(max_current, max_ending)\n    return max_current\n\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    yas = sum(arr)\n    adel = max(max_subarray(arr[1:]), max_subarray(arr[:n-1]))\n    if yas>adel:\n        print(\"YES\")\n    else:\n        print(\"NO\")", "def maxCrossingSum(arr, l, m, h):\n    sm = 0\n    left_sum = -10000\n\n    for i in range(m, l - 1, -1):\n        sm = sm + arr[i]\n\n        if (sm > left_sum):\n            left_sum = sm\n    sm = 0\n    right_sum = -1000\n    for i in range(m + 1, h + 1):\n        sm = sm + arr[i]\n\n        if (sm > right_sum):\n            right_sum = sm\n\n    return left_sum + right_sum\n\ndef maxSubArraySum(arr, l, h):\n    if (l == h):\n        return arr[l]\n    m = (l+h)//2\n    return max(maxSubArraySum(arr, l, m),\n               maxSubArraySum(arr, m + 1, h),\n               maxCrossingSum(arr, l, m, h))\n\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    y = sum(a)\n    s1, s2 = maxSubArraySum(a, 0, n-2), maxSubArraySum(a, 1, n-1)\n    #print(s1, s2, y)\n    if s1 >= y or s2 >= y:\n        print(\"NO\")\n    else:\n        print('YES')\n", "def ma(a,size): \n       \n    max_so_far = - 10**9\n    max_ending_here = 0\n       \n    for i in range(0, size): \n        max_ending_here = max_ending_here + a[i] \n        if (max_so_far < max_ending_here): \n            max_so_far = max_ending_here \n  \n        if max_ending_here < 0: \n            max_ending_here = 0   \n    return max_so_far\nfor _ in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    k=ma(a[1:],len(a)-1)\n    j=ma(a[:n-1],len(a)-1)\n    if sum(a)>max(j,k):\n        print('YES')\n    else:\n        print('NO')\n"]