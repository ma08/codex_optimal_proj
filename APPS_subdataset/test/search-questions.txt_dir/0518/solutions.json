["from math import sin\npi = 3.141592653589793238462643383279502884197\nn, r = map(int,input().split())\ntheta = 2*pi / n\nR = r / (1-sin(theta/2))\nprint(R-r)", "import math\nn, r = list(map(int, input().split(' ')))\nl = 2 * r * math.sin(math.pi/n)\nR = l * r / (-l + 2*r)\nprint(R)", "import math\n\nn, r = list(map(float, input().split()))\na = math.pi / n\ns = math.sin(a)\nR = (r * s) / (1 - s)\nprint(R)\n", "import math\n\nn, r = list(map(int, input().split()))\nangle = math.pi / n\ns = math.sin(angle)\n#rad = 1 / math.sin(angle) - 1\n#print('%.8f' % (r / rad))\nprint('%.8f' % (r * s / (1 - s)))\n", "import math\n\nn,r = [int(x) for x in input().split()]\n\nx = math.sin(math.pi/n)\n\ny = (x*r)/(1-x)\n\nprint(y)", "import math\nn,r = list(map(int,input().split()))\nangle = math.pi/(n)\nc = math.sin(angle)\nk = c/(1-c)\nR = k*r\nR = float(format(R,'.7f'))\nprint(R)", "from math import sin, pi\n\nn, r = list(map(int, input().split()))\n\nprint(r * sin(pi / n) / (1 - sin(pi / n)))\n", "from math import sin, pi\nn, r = map(int, input().split())\n\ndef p(n, r):\n    return 2 * n * r * sin(pi / n)\n\nle = 0; ri = r * 1000\nwhile ri - le > 1e-9:\n    m = (ri + le) / 2\n    if p(n, r + m) < n * m * 2:\n        ri = m\n    else:\n        le = m\nprint(m)", "import math\n\nn, r = (int(x) for x in input().split())\n\n#print(n, r)\n\ns = math.sin(math.pi/n)\nans = (r*s)/(1-s)\n\nprint(\"%.7f\" % ans)", "import math\n\n\nn, r = map(int, input().split())\n\na = math.pi/n\nsin = math.sin(a)\nR = r*sin/(1-sin)\n\nprint(R)", "import math\n\nn, r = map(int, input().split())\ns = math.sin(math.pi / n)\nprint('%.7lf' % (r * s / (1 - s)))", "from math import pi, sin\nfrom decimal import Decimal\n\nn, r = map(int, input().split())\nalpha = Decimal(pi)/Decimal(n)\na = Decimal(sin(alpha))\nR = Decimal((r * a) / (1 - a))\nprint(R)", "from math import sin\nn,r=[int(i) for i in input().split()]\npi=3.14159265359\nprint(r/((2*sin(pi*(1/2-1/n)))/(sin(2*pi/n))-1))", "from math import sin, pi\nn, r = list(map(int, input().split()))\nR = r*sin(pi/n)/(1-sin(pi/n))\nprint(R)\n", "import math\nn,r=map(int,input().split())\nprint(r/( 1/math.cos(math.pi*(n-2)/2/n)-1))", "import math \nn, r = list(map(int, input().split()))\nR = r * math.sin( math.pi/n )  / ( 1 - math.sin( math.pi/n ))\nprint(\"%.9f\"%(R))\n", "import math\nn, r = [int(i) for i in input().split()]\n\nt = math.sin(math.pi/n)\nres = r*t/(1-t)\nprint(res)", "from math import pi, sin\n\nn, r = list(map(float, input().split()))\nang = pi / n\nk = sin(ang)\nprint(k * r /  (1 - k))\n", "import math\n\nN,r=list(map(int,input().split()))\n\n#sin(360/N)=R/(r+R)\n\nprint(r*math.sin(math.pi/N)/(1-math.sin(math.pi/N)))\n#print(math.sin(math.pi/N))\n", "import sys\nimport math\n\nline = sys.stdin.readline().split(\" \")\nn, r = int(line[0]), int(line[1])\nans = (r * math.sin(math.pi / n)) / (1 - math.sin(math.pi / n))\nprint(ans)\n", "from math import sin, pi\nn, r = map(int, input().split())\nR = (r*sin(pi/n))/(1-sin(pi/n))\nprint(R)", "import math\nn,r=list(map(int,input().split()))\nang=math.pi*(n-2)/(2*n)\nprint((r*math.cos(ang))/(1-math.cos(ang)))\n", "from math import *\n\nn, r = map(int,input().split())\nu = tan(2*pi/n)*cos(pi/n) - sin(pi/n)\nu = u * u\nv = tan(2*pi/n)\nv = v * v + 1\n\na = u - v\nb = 2 *r * u\nc = r * r * u\n\nR = (- b + sqrt(b * b - 4 * a * c)) / (2 * a)\nif R <= 0:\n    R = (- b - sqrt(b * b - 4 * a * c)) / (2 * a)\n\nprint(R)", "import math\nn,r=list(map(int,input().split()))\nangle=math.pi/n\nprint('%.7f' % (r/( 1.0 / math.sin(angle) - 1))) \n"]