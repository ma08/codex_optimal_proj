["l=input().strip().split(\" \");\nn=int(l[0]);\nm=int(l[1]);\nt=m;\nv=[];\nfor i in range(n+1):\n  v.append([]);\nwhile t>0:\n  l=input().strip().split(\" \");\n  a=int(l[0]);\n  b=int(l[1]);\n  v[a].append(b);\n  t-=1;\n\nans=0 ;\nfor p in range(1,n+1):\n  gp={};\n  for ch in range(1,n+1):\n    gp[ch]=0;\n  \n  for u in v[p]:\n    for x in v[u]:\n      if(x!=p):\n        gp[x]+=1;\n  #print(gp);\n   \n  for ch in gp:\n    ans+=(gp[ch]*(gp[ch]-1))//2;\n  \nprint (ans);\n", "n,e=list(map(int,input().split()))\n#d=[[0]*(n+1) for _ in range(n+1)]\ndl={}\nfor itr in range(1,n+1): dl[itr]=set()\nfor itr in range(e):\n    a1,a2=list(map(int,input().split()))\n    #d[a1][a2]=1\n    dl[a1].add(a2)\nans=0\nfor i in range(1,n+1):\n    arr=[0]*(n+1)\n    for j in dl[i]:\n        for k in dl[j]:\n            if i!=k: arr[k]+=1\n    for itr in arr:\n        ans+=itr*(itr-1)//2\nprint(ans)", "from sys import stdin\ninp = stdin.readline\nn, m = map(int, inp().split())\ng = {x: [] for x in range(1, n + 1)}\nfor _ in range(m):\n    a, b = map(int, inp().split())\n    g[a].append(b)\nans = 0\nfor i in range(1, n + 1):\n    d = {}\n    for j in g[i]:\n        for k in g[j]:\n            if k != i:\n                d[k] = d.get(k, 0) + 1\n    for k in d.values():\n        ans += k * (k - 1) // 2\nprint(ans)", "import sys\n\nn, m = [int(i) for i in sys.stdin.readline().split()]\nto_sets = [set() for _ in range(n)]\nfrom_sets = [set() for _ in range(n)]\nfor i in range(m):\n    m1, m2 = [int(i) for i in sys.stdin.readline().split()]\n    to_sets[m1-1].add(m2-1)\n    from_sets[m2-1].add(m1-1)\n\nbd_choices_cache = [[0 for _ in range(n)] for _ in range(n)]\nfor a in range(n):\n    for b in to_sets[a]:\n        for c in to_sets[b]:\n            bd_choices_cache[a][c] += 1\n\nans = 0\nfor a in range(n):\n    for c in range(n):\n        if a == c:\n            continue\n        bd_choices = bd_choices_cache[a][c]\n        ans += bd_choices * (bd_choices - 1) // 2\n\nprint(ans)\n", "from sys import stdin\ninput=lambda : stdin.readline().strip()\nfrom math import ceil,sqrt,factorial,gcd\nfrom collections import deque\nfrom bisect import bisect_left\nn,m=map(int,input().split())\ngraph={i:set() for i in range(1,n+1)}\nfor i in range(m):\n\ta,b=map(int,input().split())\n\tgraph[a].add(b)\ncount=0\nfor i in range(1,n+1):\n\td={}\n\tfor j in graph[i]:\n\t\tfor k in graph[j]:\n\t\t\tif k!=i:\n\t\t\t\tif k in d:\n\t\t\t\t\td[k]+=1\n\t\t\t\telse:\n\t\t\t\t\td[k]=1\n\tfor k in d:\n\t\tcount+=(d[k]*(d[k]-1))//2\nprint(count)", "n,m=list(map(int,input().split()))\nadj=[]\nfor i in range(n):\n\tadj.append([])\nfor i in range(m):\n\ta,b=list(map(int,input().split()))\n\tadj[a-1].append(b)\nans=0\nncr=[]\nfor i in range(n):\n\tm={}\n\tfor j in adj[i]:\n\t\tfor k in adj[j-1]:\n\t\t\tif(k in list(m.keys())):\n\t\t\t\tm[k]+=1\n\t\t\telse:\n\t\t\t\tm[k]=1\n\tfor j in list(m.keys()):\n\t\tif(j!=i+1):\n\t\t\tans+=(m[j]*(m[j]-1))//2\nprint(ans)\n", "n,m=map(int,input().split())\nadj=[]\nfor i in range(n):\n\tadj.append([])\nfor i in range(m):\n\ta,b=map(int,input().split())\n\tadj[a-1].append(b)\nans=0\nncr=[]\nfor i in range(n):\n\tm={}\n\tfor j in adj[i]:\n\t\tfor k in adj[j-1]:\n\t\t\tif(k in m.keys()):\n\t\t\t\tm[k]+=1\n\t\t\telse:\n\t\t\t\tm[k]=1\n\tfor j in m.keys():\n\t\tif(j!=i+1):\n\t\t\tans+=(m[j]*(m[j]-1))//2\nprint(ans)"]