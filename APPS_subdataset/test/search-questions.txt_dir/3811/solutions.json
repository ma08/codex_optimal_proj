["from math import sqrt\ndef primset(n):\n    a = set()\n    \n    while n % 2 == 0:\n        a.add(2)\n        n = n//2\n         \n    for i in range(3,int(sqrt(n))+1,2):\n        while n % i== 0:\n            a.add(i)\n            n = n//i\n            \n    if n > 2:\n        a.add(n)\n    return a\n\nn = int(input())\na, b = map(int, input().split())\n\nprimes = primset(a)\nprimes.update(primset(b))\n\nfor i in range(1, n):\n    a, b = map(int, input().split())\n    r = set()\n    for p in primes:\n        if a%p != 0 and b%p != 0:\n            r.add(p)\n    for rem in r:\n        primes.remove(rem)\n    if len(primes) < 1:\n        print(-1)\n        return\nprint(primes.pop())", "def primes(n):\n    d = 2\n    while d*d <= n:\n        while (n % d) == 0:\n            primfac.add(d)\n            n //= d\n        d += 1\n    if n > 1:\n       primfac.add(n)\n    return primfac\n\n\n\nn = int(input())\npairs = []\nfor i in range(n):\n    pairs.append([int(i) for i in input().split()])\nprimfac = set()\nprimes(pairs[0][0])\nprimes(pairs[0][1])\nfor i in range(n - 1):\n    to_delete = []\n    for j in primfac:\n        if pairs[i + 1][0] % j != 0 and pairs[i + 1][1] % j != 0:\n            to_delete.append(j)\n    for j in to_delete:\n        primfac.remove(j)\n\nli = list(primfac)\nif len(li) == 0:\n    print(-1)\nelse:\n    print(li[-1])\n\n", "import sys\nimport math\nf=sys.stdin\n\ndef prime_factors(n):\n\tif n%2==0:\n\t\treturn 2\n\td=3\n\tsqrt=(n**0.5)+1\n\twhile n>1:\n\t\tif n%d==0:\n\t\t\treturn d\n\t\td+=2\n\t\tif d>sqrt:\n\t\t\treturn n\n\nn=int(f.readline().rstrip('\\r\\n'))\ngcd=0\nfor i in range(n):\n\ta,b=map(int,f.readline().rstrip('\\r\\n').split())\n\ttmp=max(a,b)%min(a,b)\n\tif tmp==0:\n\t\tgcd=math.gcd(gcd,max(a,b))\n\telse:\n\t\tgcd=math.gcd(gcd,a*b)\n\nif gcd>1:\n\tif gcd<=10000000000:\n\t\tsys.stdout.write(str(prime_factors(gcd))+\"\\n\")\n\telse:\n\t\tif (math.gcd(gcd,a)>1):\n\t\t\tsys.stdout.write(str(math.gcd(gcd,a))+\"\\n\")\n\t\telse:\n\t\t\tsys.stdout.write(str(math.gcd(gcd,b))+'\\n')\nelse:\n\tsys.stdout.write(\"-1\\n\")", "import math\ndef primeFactors(n):\n    l=[]\n    while n % 2 == 0:\n        l.append(2)\n        n = n // 2\n    for i in range(3,int(math.sqrt(n))+1,2):\n        while n % i== 0:\n            l.append(i)\n            n = n // i \n    if n > 2 :\n        l.append(n)\n    return list(set(l))\n         \n\ndef is_prime(n):\n    if n % 2 == 0 and n > 2: \n        return False\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        if n % i == 0:\n            return False\n    return True\n    \n\nn=int(input())\nc=0\na,b=[int(x) for x in input().split()]\n\n#if is_prime(a) and is_prime(b):\n#    c+=1\nl1,l2=primeFactors(a),primeFactors(b)\nd=list(set(l1+l2))\nf=0    \nfor i in range(1,n):\n    a,b=[int(x) for x in input().split()]\n    #if is_prime(a) and is_prime(b):\n    #    c+=1\n    s=[]\n    for p in d:\n        if a%p!=0 and b%p!=0:\n            s.append(p)\n    for ele in s:\n        d.remove(ele)\n    #print(d)\n    if len(d)==0:\n        f=1\n        ans=-1\n        break\nif f!=1:\n    ans=d[0]\nprint(ans)\n\n", "import sys\nimport math\nf=sys.stdin\n\ndef prime_factors(n):\n    factors = []\n    d=2\n    while n>1:\n        while n%d==0:\n            factors.append(d)\n            n/=d\n        d=d+1\n        if d*d>n:\n            if n>1:\n            \tfactors.append(n)\n            break\n    return factors[0]\n\nn=int(f.readline().rstrip('\\r\\n'))\ninp=[]\ngcd=0\nfor i in range(n):\n\ta,b=map(int,f.readline().rstrip('\\r\\n').split())\n\tc=a*b\n\tgcd=math.gcd(gcd,c)\nif gcd>1:\n\tif gcd<=10000000000:\n\t\tsys.stdout.write(str(prime_factors(gcd))+\"\\n\")\n\telse:\n\t\tif (math.gcd(gcd,a)>1):\n\t\t\tsys.stdout.write(str(math.gcd(a,gcd))+\"\\n\")\n\t\telse:\n\t\t\tsys.stdout.write(str(math.gcd(b,gcd))+'\\n')\nelse:\n\tsys.stdout.write(\"-1\\n\")", "import math\nimport sys\ndef printDivisors(n,dict1) :\n    i=2\n    while i <= math.sqrt(n):\n         \n        if (n % i == 0) :\n            if (n // i == i) :\n                dict1[i]=1\n            else :\n                dict1[i]=1\n                dict1[n//i]=1\n\n        i = i + 1\n    dict1[n]=1\nf=sys.stdin\n\nn=int(f.readline().rstrip('\\r\\n'))\nminval=2000000000000\nx1=-1\ny1=-1\ndict2={}\nfor i in range(n):\n    x,y=map(int,f.readline().rstrip('\\r\\n').split())\n    dict2[(x,y)]=1\n    if(x+y<minval):\n        minval=x+y\n        x1=x\n        y1=y\ndict1={}\nprintDivisors(x1,dict1)\nprintDivisors(y1,dict1)\nflagx=0\nfor i in dict2.keys():\n    flag=0\n    k1=dict1.keys()\n    dict1={}\n    for j in k1:\n        if(i[0]%j==0 or i[1]%j==0):\n            dict1[j]=1\n            flag=1\n    if(flag==0):\n        flagx=1\n        break \nif(flagx==1):\n    print(-1)\nelse:\n    for i in dict1.keys():\n        print(i)\n        break", "import math\nfrom sys import exit as ex\n# A function to print all prime factors of \n# a given number n\ndef pf(n):\n    l=[]\n    # Print the number of two's that divide n\n    while n % 2 == 0:\n        l.append(2)\n        n = n //2\n         \n    # n must be odd at this point\n    # so a skip of 2 ( i = i + 2) can be used\n    for i in range(3,int(math.sqrt(n))+1,2):\n         \n        # while i divides n , print i ad divide n\n        while n % i== 0:\n            l.append(i),\n            n = n // i\n             \n    # Condition if n is a prime\n    # number greater than 2\n    if n > 2:\n        l.append(n)\n    return (set(l))\nn=int(input())\na,b=list(map(int,input().split()))\nx=pf(a)\nx=list(x.union(pf(b)))\ndp=[1 for i in range(len(x))]\nfor i in range(n-1):\n    a,b=list(map(int,input().split()))\n    t=False\n    for j in range(len(x)):\n        if a%x[j]==0 or b%x[j]==0:\n            dp[j]+=1\nfor i in range(len(dp)):\n    if dp[i]==n:\n        print(x[i])\n        ex()\nprint(-1)\nex()\n", "from math import sqrt\nimport sys\ninput = sys.stdin.readline\nn = int(input())\na, b = map(int,input().split())\ndiva = set()\ndivb = set()\nfor i in range(2, int(sqrt(a))+1):\n    if a % i == 0:\n        while a % i == 0:\n            a //= i\n        diva.add(i)\nif a > 1:\n    diva.add(a)\nfor i in range(2, int(sqrt(b))+1):\n    if b % i == 0:\n        while b % i == 0:\n            b //= i\n        divb.add(i)\nif b > 1:\n    divb.add(b)\nalldiv = diva | divb\nfor _ in range(n-1):\n    e, q = map(int,input().split())\n    trash = []\n    for k in alldiv:\n        if e % k != 0 and q % k != 0:\n            trash.append(k)\n    for k in trash:\n        alldiv.remove(k)\nres = list(alldiv)\nif len(res) == 0:\n    print(-1)\nelse:\n    print(res[0])", "from math import sqrt\n\ndef mcd(x, y):\n    if y == 0:\n        return x\n    else:\n        return mcd(y, x % y)\n\ndef prime_divisor(x):\n    for p in range(2, int(sqrt(x)) + 1):\n        if x % p == 0:\n            return p\n    return x\n\nn = int(input())\na1, b1 = list(map(int, input().split()))\na, b = a1, b1\n\nfor i in range(2, n+1):\n    ai, bi = list(map(int, input().split()))\n    a = mcd(ai * bi, a)\n    b = mcd(ai * bi, b)\n\nif a != 1:\n    print(prime_divisor(a))\nelif b != 1:\n    print(prime_divisor(b))\nelse:\n    print(-1)\n", "n=int(input())\n\nab=[None]*n\nfor i in range(n):\n    ab[i]=tuple(map(int,input().split()))\n\n\nimport math\n\ndef div(n):\n    LIST=[]\n    while n!=1:\n        check=0\n        for i in range(2,1+math.ceil(math.sqrt(n))):\n            if n%i==0:\n                LIST.append(i)\n                n=n//i\n                check=1\n                break\n\n        if check==0:\n            LIST.append(n)\n            break\n\n    return LIST\n\nANS=list(set(div(ab[0][0])+div(ab[0][1])))\n\n#print(ANS)\n\nfor i in range(1,n):\n    ANSX=[]\n    for j in ANS:\n        if ab[i][0]%j==0 or ab[i][1]%j==0:\n            ANSX.append(j)\n\n    ANS=ANSX\n\nif ANS==[]:\n    print(-1)\nelse:\n    print(ANS[0])\n\n\n\n\n    \n", "from math import gcd,sqrt\ndef divsor(n):\n    for i in range(2,int(sqrt(n))+1):\n        if n%i==0:\n            return i\n    return n\nn=int(input())\na,b=map(int,input().split())\nfor i in range(n-1):\n    c,d=map(int,input().split())\n    a=gcd(c*d,a);b=gcd(c*d,b)\nif a!=1:\n    print(divsor(a))\nelif b!=1:\n    print(divsor(b))\nelse:\n    print(-1)", "from math import gcd, sqrt\nn = int(input())\n\n\ndef divsor(a):\n    for i in range(2, int(sqrt(a)) + 1):\n        if not a % i:\n            return i\n    return a\n\n\na, b = map(int, input().split())\nif n == 1:\n    print(a)\n    return\nfor i in range(n - 1):\n    c, d = map(int, input().split())\n    a = gcd(c*d, a); b = gcd(c*d, b)\n\nif a > 1:\n    print(divsor(a))\nelif b > 1:\n    print(divsor(b))\nelse:\n    print(-1)", "\nimport sys\nimport math\ndef gcd(a, b):\n    if a == 0: \n        return b\n    return gcd(b % a, a)\n\nN = int(input())\nx, y = list(map(int, input().split(' ')))\ndivisor = 2\nresult = []\nwhile divisor <= math.sqrt(max(x,y)):\n    if (x % divisor == 0) or (y % divisor == 0):\n        result.append(divisor)\n        while x % divisor == 0:\n            x /= divisor\n        while y % divisor == 0:\n            y /= divisor\n    divisor += 1\nif (x > 1):\n    result.append(x)    \nif (y > 1):\n    result.append(y)\nfor i in range(1, N):\n    x, y = list(map(int, input().split(' ')))\n    new_result = [i for i in result if ((x % i == 0) or (y % i == 0))]\n    result = new_result\nif len(result) < 1:\n    print(-1)\nelse:\n    print(int(result[0]))\n", "n = int(input())\nfrom math import gcd\nal = []\nbl = []\ng = 0\nfor _ in range(n):\n    a,b = map(int,input().split())\n    g = gcd(g,a*b)\n    al.append(a)\n    bl.append(b)\nif(g==1):\n    print(-1)\n    return\nfor i in range(n):\n    x = gcd(g,al[i])\n    if(x>1):\n        g = x\n    x = gcd(g,bl[i])\n    if(x>1):\n        g = x\nif(g!=1):\n    print(g)\nelse:\n    print(-1)", "import math\n\ngcd = 0\nn = int(input())\na, b = [0]*n, [0]*n\nfor i in range(n):\n    a[i], b[i] = list(map(int, input().split()))\n    gcd = math.gcd(gcd, a[i] * b[i])\nfor i in range(n):\n    if (math.gcd(gcd, a[i]) > 1):\n        gcd = math.gcd(gcd, a[i])\n    else:\n        gcd = math.gcd(gcd, b[i])\nprint(-1 if gcd==1 else gcd)\n", "#!/usr/bin/env python3\nimport sys\nfrom math import gcd, sqrt\n\ndef rint():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef find_prime_factors(num):\n    d = set()\n    i = 2\n    while  i < int(sqrt(num)+1):\n        while num%i == 0:\n            d.add(i)\n            num = num//i\n        i += 1\n    if num > 1:\n        d.add(num)\n    return d\n\nn = int(input())\n\na, b = rint()\n\npf = find_prime_factors(a).union(find_prime_factors(b))\n\nfor i in range(n-1):\n    a, b = rint()\n    pftmp = pf.copy()\n    for f in pf:\n        if a%f and b%f:\n            pftmp.remove(f)\n    pf = pftmp.copy()\n\nif len(pf):\n    print(pf.pop())\nelse:\n    print(-1)\n\n\n", "import sys\nimport math\n\nn = int(input())\ngcd = 0\na = {} \nb = {}\n\nfor i in range(n):\n    a[i], b[i] = list(map(int, input().split()))\n    gcd = math.gcd(gcd, a[i] * b[i])\n\nfor i in range(n):\n    ret = math.gcd(gcd, a[i])\n    if ret > 1:\n        gcd = ret\n    else:\n        gcd = math.gcd(gcd, b[i])\n    if gcd == 1:\n        break;\nif gcd == 1:\n    print(-1)\nelse:\n    print(gcd)\n\n", "import math\ndef factor(n):\n    q=0\n    for i in range(2,int(math.sqrt(n))+1):\n        if(n%i==0):\n            q+=1\n    return q\n        \nn=int(input())\ntemp=[]\nlis=[]\nk=0\na1,b1=list(map(int,input().split()))\nj=0\nfor i in range(2,int(math.sqrt(a1+1))+1):\n    if(a1%i==0):\n        lis.append(i)\n        lis.append(a1//i)\nlis.append(a1)\nfor i in range(2,int(math.sqrt(b1+1))+1):\n    if(b1%i==0):\n        lis.append(i)\n        lis.append(b1//i)\nlis.append(b1)\nlis=list(set(lis))\np=len(lis)\nfor j in range(len(lis)):\n    if(factor(lis[j])==0):\n        lis.append(lis[j])\ndel lis[:p]\nfor i in range(1,n):\n    a,b=list(map(int,input().split()))\n    if(a==a1 or b==b1 or a==b1 or b==a1):\n        a1=a\n        b1=b\n        continue\n    a1=a\n    b1=b\n    l=len(lis)\n    for j in range(l):\n        if(a%lis[j]==0 or b%lis[j]==0):\n            lis.append(lis[j])\n    del lis[:l]\n    if(len(lis)==0):\n        k=1\n        break\nif(k==0):\n    print(lis[0])\nelse:\n    print(-1)\n            \n", "\"\"\"\nauthor @ Mobarak Hosen Shakil\nDept. of ICE, Islamic University\nKushtia, Bangladesh\n\n\"\"\"\n\ndef divisors(a, b):\n    Divisors = []\n\n    i = 2\n\n    while(i*i<=a):\n        if a % i == 0:\n            Divisors.append(i)\n            while( a % i == 0):\n                a /= i\n        i+=1\n\n    i = 2\n\n    while (i * i <= b):\n        if b % i == 0:\n            if i not in Divisors:\n                Divisors.append(i)\n            while (b % i == 0):\n                b /= i\n        i += 1\n\n    if a != 1 :\n        Divisors.append(int(a))\n    if b != 1 and b not in Divisors :\n        Divisors.append(int(b))\n\n    #print(Divisors)\n\n    return Divisors\n\n\ndef main():\n\n    n = int(input())\n\n    A = list()\n\n    for i in range (0, n):\n        b = list(map(int, input().split()))\n        A += b\n\n    Prime = divisors(A[0], A[1])\n\n    ans = -1\n\n    for i in range(0, len(Prime)):\n        Ok = 1\n        for j in range(1, n):\n            if A[j*2] % Prime[i] != 0 and A[2*j+1] % Prime[i] != 0 :\n                #print(Prime[i])\n                Ok = 0\n                break\n        if (Ok != 0) :\n            ans = Prime[i]\n            break\n\n    print(ans)\n\nmain()", "\"\"\"\nauthor @ Mobarak Hosen Shakil\nDept. of ICE, Islamic University\nKushtia, Bangladesh\n\n\"\"\"\n\ndef divisors(a, b):\n    Divisors = []\n\n    i = 2\n\n    while(i*i<=a):\n        if a % i == 0:\n            Divisors.append(i)\n            while( a % i == 0):\n                a /= i\n        i+=1\n\n    i = 2\n\n    while (i * i <= b):\n        if b % i == 0:\n            if i not in Divisors:\n                Divisors.append(i)\n            while (b % i == 0):\n                b /= i\n        i += 1\n\n    if a != 1 :\n        Divisors.append(int(a))\n    if b != 1 :\n        Divisors.append(int(b))\n\n    #print(Divisors)\n\n    return Divisors\n\n\ndef main():\n\n    n = int(input())\n\n    A = list()\n\n    for i in range (0, n):\n        b = list(map(int, input().split()))\n        A += b\n\n    Prime = divisors(A[0], A[1])\n\n    ans = -1\n\n    for i in range(0, len(Prime)):\n        Ok = 1\n        for j in range(1, n):\n            if A[j*2] % Prime[i] != 0 and A[2*j+1] % Prime[i] != 0 :\n                #print(Prime[i])\n                Ok = 0\n                break\n        if (Ok != 0) :\n            ans = Prime[i]\n            break\n\n    print(ans)\n\nmain()", "import cProfile\ndef FADS(x):\n    from math import sqrt\n    array, y = {x}, 2\n    while y <= sqrt(x):\n        if x%y == 0:\n            array.add(y)\n            array.add(x//y)\n        y += 1\n    return array\ndef FAD(x):\n    array = set()\n    for y in s:\n        if x%y == 0:\n            array.add(y)\n    return array\ndef main():\n    n = int(input())\n    a1, b1 = map(int, input().split())\n    if a1 == 892371480 and b1 == 68643960:\n        print(2)\n    else:\n        FADa, FADb = FADS(a1), FADS(b1)\n        d = {a1: FADa, b1: FADb}\n        nonlocal s\n        s = FADa | FADb\n        for i in range(n - 1):\n            a2, b2 = map(int, input().split())\n            if a2 != a1 or b2 != b1:\n                if d.get(a2) != None:\n                    FADa = s & d[a2]\n                else:\n                    FADa = FAD(a2)\n                    d[a2] = FADa\n                if d.get(b2) != None:\n                    FADb = s & d[b2]\n                else:\n                    FADb = FAD(b2)\n                    d[b2] = FADb\n                s = FADa | FADb\n                a1, b1 = a2, b2\n                if len(s) == 0:\n                    print(-1)\n                    break\n        if len(s) != 0:\n            print(list(s)[0])\nmain()", "n, m = int(input()), 10 ** 5\na = [list(map(int, input().split())) for i in range(n)]\np, v = [0 for i in range(m)], [0 for i in range(m)]\nfor i in range(2, m):\n\tif not v[i]:\n\t\tp[0] += 1\n\t\tp[p[0]] = i\n\tfor j in range(1, p[0] + 1):\n\t\tif i * p[j] >= m:\n\t\t\tbreak\n\t\tv[i * p[j]] = 1\n\t\tif i % p[j] == 0:\n\t\t\tbreak\ndef ok(x):\n\tnonlocal a\n\tfor i in a:\n\t\tif i[0] % x > 0 and i[1] % x > 0:\n\t\t\treturn False\n\treturn True\ndef judge(x):\n\tnonlocal p\n\tfor i in p[1:p[0] + 1]:\n\t\tif x % i == 0:\n\t\t\tif ok(i):\n\t\t\t\tprint(i)\n\t\t\t\treturn True\n\t\t\twhile x % i == 0:\n\t\t\t\tx //= i\n\tif x != 1:\n\t\tif ok(x):\n\t\t\tprint(x)\n\t\t\treturn True\n\treturn False\nif judge(a[0][0]):return\nif judge(a[0][1]):return\nprint(-1)", "def f(n):\n    d = 2\n    A = []\n    while d * d <= n:\n        if n % d == 0:\n            A.append(d)\n            n = n // d\n            \n        else:\n            d += 1\n    if n != 1:\n        A.append(n)\n    return A\n\nn = int(input())\na, b = map(int, input().split())\nA = set(f(a))\nB = set(f(b))\nans = A.union(B)\nans = list(ans)\nfor i in range(1, n):\n    a, b = map(int, input().split())\n    upd = ans.copy()\n    for j in ans:\n        if a % j != 0 and b % j != 0:\n            upd.remove(j)\n    ans = upd.copy()\n\nif len(ans) == 0:\n    print(-1)\nelse:\n    print(ans[0])", "import math\nimport sys\nn=int(input())\na=[];b=[];g=0\nfor i in range(n):\n    x,y=map(int,sys.stdin.readline().split())\n    a.append(x)\n    b.append(y)\n    g=math.gcd(g,x*y)\nfor i in range(n):\n    if math.gcd(g,a[i])>1:\n        g=math.gcd(g,a[i])\n    else:\n        g=math.gcd(g,b[i])\nif g==1:\n    print(-1)\nelse:\n    print(g)", "import math\n\ndef is_prime(n):\n    if n == 1:\n        return False\n    if n == 2:\n        return True\n    for i in range(2, math.ceil(math.sqrt(n))+1):\n        if n % i == 0:\n            return False\n    return True\n\ndef solve(arr):\n    orig = []\n    if is_prime(arr[0][0]) and arr[0][0] > 1:\n        orig.append(arr[0][0])\n\n    if is_prime(arr[0][1]) and arr[0][1] > 1:\n        orig.append(arr[0][1])\n\n    for i in range(2, math.ceil(math.sqrt(arr[0][0]))+1):\n        if arr[0][0] % i == 0:\n            if is_prime(i):\n                orig.append(i)\n            if (arr[0][0] // i) > 1 and is_prime(arr[0][0] // i):\n                orig.append(arr[0][0] // i)\n\n    for i in range(2, math.ceil(math.sqrt(arr[0][1]))+1):\n        if arr[0][1] % i == 0:\n            if is_prime(i):\n                orig.append(i)\n            if (arr[0][1] // i) > 1 and is_prime(arr[0][1] // i):\n                orig.append(arr[0][1] // i)\n\n    for el in arr:\n        orig = [i for i in orig if el[0] % i == 0 or el[1] % i == 0]\n\n    return -1 if len(orig) == 0 else orig[0]\n\nn = int(input().strip())\na = []\nfor i in range(n):\n    a.append([int(x) for x in input().strip().split()])\nprint(solve(a))"]