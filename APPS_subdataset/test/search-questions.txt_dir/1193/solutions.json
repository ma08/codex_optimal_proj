["n, k = map(int, input().split())\ns = sorted(list(map(int, input().split())), reverse = True)\nprint(s[k - 1])", "def main():\n\tn, k = map(int, input().split())\n\tA = list(map(int, input().split()))\n\tA.sort(reverse = True)\n\tprint(A[k - 1])\nmain()", "import heapq\nn, uch = list(map(int, input().split()))\nspeeds = list(map(int, input().split()))\n# n - kompi\n# na i kompe skorost' a[i]\n# uch uchastnikov\n# orgi hot'yat ravn skorost' no max\n\ngodnie = heapq.nlargest(uch, speeds)\nprint(min(godnie))\n", "n, k = list(map(int, input().split()))\na = sorted(list(map(int, input().split())))\nprint(a[-k])", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\na = sorted(a,reverse=True)\na = a[:k]\nprint(a[-1])\n", "n,k=list(map(int,input().split()))\n\nL=list(map(int,input().split()))\n\nL.sort(reverse=True)\n\nprint(L[k-1])\n", "n, k = map(int, input().split())\na = list(reversed(sorted(list(map(int, input().split())))))\nprint(a[k - 1])", "N,K= list(map(int, input().split()))\nSpeeds = list(map(int,input().split()))\nSpeeds.sort()\nprint(Speeds[-K])\n", "n, k = list(map(int, input().split()))\nnumbers = sorted(list(map(int, input().split())), reverse = True)\nprint(numbers[k - 1])\n", "[n, k], speed = list(map(int, input().split())), sorted(map(int, input().split()), reverse = True)\nprint(speed[k - 1])\n", "n, k = map(int, input().split())\ns = list(map(int, input().split()))\ns = list(sorted(s))\nprint(min(s[n - k:]))", "n, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort(reverse = True)\nprint(a[k - 1])", "n, k = map(int, input().split())\nS = list(map(int, input().split()))\nS.sort(reverse = True)\nprint(S[k - 1])", "n,k=list(map(int,input('').split()))                   \na=list(map(int,input('').split()))\na=list(reversed(sorted(a)))\nprint(a[k-1])\n\n                \n\n", "n, k = map(int, input().split())\nA = list(map(int, input().split()))\n\nA.sort()\n\nprint(A[n - k])", "b=input().split()\nn=int(b[0])\nk=int(b[1])\na=input().split()\nai=[]\nfor i in range(n):\n    ai.append(int(a[i]))\nai.sort()\nprint(ai[n-k])\n", "n, k = list(map(int, input().split()))\ndata = list(map(int, input().split()))\nline = [0] * n\nmaxx = 0\nfor i in range(n):\n    count = 0\n    for j in range(n):\n        if data[i] <= data[j]:\n            count += 1\n    line[i] = count\n    if count >= k:\n        maxx = max(maxx, data[i])\nprint(maxx)\n", "n, k = map(int, input().split())\nA = sorted(list(map(int, input().split())))\nprint(A[n - k])", "n,k=list(map(int,input().split()))\nlis=list(map(int,input().split()))\nlis.sort()\nlis.reverse()\nprint(lis[k-1])\n", "n, k = map(int, input().split());\narray = list(map(int, input(). split()));\narray.sort(reverse = True);\nprint(array[k - 1]);", "import sys\nline = str.split(input(),\" \")\nn = int(line[0])# num comp\nk = int(line[1])# num par\n\nline = str.split(str(input()),\" \")\nspeeds = []\nfor s in line:\n    speeds.append(int(s))\n\nsspeeds = speeds\nsspeeds.sort()\nsspeeds.reverse()\n\nsys.stdout.write(str(sspeeds[k-1]))\n", "n,k=list(map(int,input().split()))\na=list(map(int,input().split()))\na.sort()\nmini=0\nb=[]\nfor i in range(n-1,n-k-1,-1):\n    b.append(a[i])\nb.sort()\nprint(b[0])\n", "n,k=map(int,input().split())\na=list(map(int,input().split()))\na.sort(reverse=True)\nprint(a[k-1])", "n, k = list(map(int, input().split()))\nprint(list(reversed(list(sorted(list(map(int, input().split()))))))[k - 1])\n"]