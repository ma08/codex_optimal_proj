["H, W = map(int, input().split())\ns = '#' * (W + 2)\ndata = []\ndata.append(s)\nfor i in range(H):\n    data.append('#' + str(input()) + '#')\ndata.append(s)\n   \nfor i in range(H + 2):\n    print(data[i])", "h, w = map(int, input().split())\na = [input() for _ in range(h)]\nfor i in range(h+2):\n    if i == 0 or i == h+1:\n        print(\"#\"*(w+2))\n    else:\n        print(\"#\" + a[i-1] + \"#\")", "#!/usr/bin/env python3\n\n\n# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools\ndef main():\n    H, W = list(map(int, input().split()))\n    print((\"#\"*(W+2)))\n    for _ in range(H):\n        print((\"#{}#\".format(input())))\n    print((\"#\"*(W+2)))\n\ndef test():\n    import doctest\n    doctest.testmod()\n\ndef __starting_point():\n    #test()\n    main()\n\n__starting_point()", "h, w = map(int, input().split())\nfor i in range(h+1):\n  if i == 0 or i == h:\n    print(\"#\"*(w +2))\n    if i == h:\n      return\n  print(\"#\", end = \"\")\n  print(input(), end = \"\")\n  print(\"#\")\n", "h,w = map(int,input().split())\nl=[]\n[l.append(input()) for _ in range(h)]\n\nprint(\"#\"*(w + 2))\nfor s in l:\n    print(\"#\",s,\"#\",sep='')\n\nprint(\"#\"*(w + 2))", "h, w = map(int, input().split())\nprint('#'*-~-~w)\nfor _ in [0]*h:\n    print('#'+input()+'#')\nprint('#'*-~-~w)", "h, w = list(map(int, input().split()))\n\nprint(('#' * (w+2)))\nfor i in range(h):\n    data = list(map(str, input().split()))\n    data2 = ['#'] + data + ['#']\n    print((''.join(data2)))\n\n\nprint(('#' * (w + 2)))\n", "h,w = map(int, input().split())\na = list(list(input().split()) for _ in range(h))\nprint(\"#\"*(int(w)+2))\nfor i in range(h):\n    print(\"#\",*a[i],\"#\",sep=\"\")\nprint(\"#\"*(int(w)+2))", "H, W = map(int, input().split())\nprint(\"#\"*(W+2))\nfor i in range(H):\n  a = input()\n  print(\"#\" + a + \"#\")\nprint(\"#\"*(W+2))", "h,w=map(int,input().split())\na=[list(input()) for i in range(h)]\n\nd=[['#']*(w+2) for i in range(h+2)]\nfor i in range(h):\n  for j in range(w):\n    d[i+1][j+1]=a[i][j]\nfor i in range(h+2):\n  print(*d[i],sep='')", "H, W = map(int, input().split())\nL = ['#' + input() + '#' for _ in range(H)]\nL = ['#' * (W + 2)] + L + ['#' * (W + 2)]\n[print(i) for i in L]", "n,m=map(int,input().split())\nprint(*['#'*-~-~m]+['#'+input()+'#' for _ in range(n)]+['#'*-~-~m],sep='\\n')", "h, w = map(int, input().split())\nprint(\"#\"*(w+2))\nfor i in range(h):\n    a = str(input())\n    a = \"#\" + a + \"#\"\n    print(a)\nprint(\"#\"*(w+2))", "h, w = list(map(int, input().split()))\na = [input() for x in range(h)]\nprint(('#' * (w + 2)))\nfor s in a:\n    print(('#' + s + '#'))\nprint(('#' * (w + 2)))\n", "h, w = list(map(int, input().split()))\na = [input() for _ in range(h)]\nans = ['#'*(w+2)]\n# print(ans)\nfor i in range(h):\n    ans.append('#' + a[i] + '#')\n\nans.append('#'*(w+2))\nfor i in range(h+2):\n    print((ans[i]))\n", "H,W=list(map(int,input().split()))\na=[input() for _ in range(H)]\nfor i in range(0,H):\n    a[i]='#'+a[i]+'#'\n\nprint(('#'*(W+2)))\nfor i in range(H):\n    print((a[i]))\nprint(('#'*(W+2)))\n", "# https://atcoder.jp/contests/abc152/tasks/abc152_c\n\nh, w = list(map(int, input().split()))\n\nrow = '#' * (w + 2)\n\nprint(row)\nfor _ in range(h):\n    print(('#' + input() + '#'))\n\nprint(row)\n", "h,w = map(int,input().split())\ns = []\ns.append(\"#\"*(w+2))\nfor i in range(h):\n    t = input()\n    t = \"#\" + t + \"#\"\n    s.append(t)\ns.append(\"#\"*(w+2))\nfor ss in s:\n    print(\"\".join(ss))", "h,w = map(int,input().split())\n[print(\"#\",end=\"\") for j in range(w+2)]\nprint()\nfor i in range(h):\n    print(\"#\" + input() + \"#\")\n[print(\"#\",end=\"\") for j in range(w+2)]", "from typing import List\n\n\ndef answer(h: int, w: int, a: List[str]) -> List[str]:\n    top_bottom_line = '#' * (w + 2)\n\n    result = [top_bottom_line]\n    for line in a:\n        result.append(f'#{line}#')\n    result.append(top_bottom_line)\n\n    return result\n\n\ndef main():\n    h, w = list(map(int, input().split()))\n    a = [input() for _ in range(h)]\n    for i in answer(h, w, a):\n        print(i)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "h,w = map(int,input().split())\nli = [list(input().split()) for i in range(h)]\n#\u6a2a\u6cb3\nfor i in range(len(li)):\n    st = li[i][0]\n    li[i] = '#'+st+'#'\n#\u4e0a\u5074\nlis = '#'*(w+2)\nli.append(lis)\nli.insert(0,lis)\nfor i in li:\n    print(i)", "h, w = map(int, input().split())\na = [[]]\nprint(\"#\"*(w+2))\nfor _ in range(h):\n    print(\"#\", input().strip(),\"#\",sep=\"\")\nprint(\"#\"*(w+2))\n", "H, W = list(map(int, input().split()))\nans = []\nfor _ in range(H):\n    a = input()\n    ans.append(\"#\" + a + \"#\")\n\nprint((\"#\" * (W + 2)))\nfor i in range(H):\n    print((ans[i]))\nprint((\"#\" * (W + 2)))\n", "h,w=map(int,input().split())\nprint('#'*(w+2))\nfor i in range(h):    \n    print('#'+input()+'#')\nprint('#'*(w+2))", "H, W = [int(x) for x in input().split()]\npic = [list(input()) for _ in range(H)]\nans = [['#' for i in range(W+2)] for j in range(H+2)]\nfor i in range(H):\n  for j in range(W):\n    ans[i+1][j+1] = pic[i][j]\nlow = ''\nfor i in range(H+2):\n  for j in range(W+2):\n    low += ans[i][j]\n  print(low)\n  low = ''", "h, w = map(int, input().split())\np = [input() for _ in range(h)]\n\nprint('#' * (w + 2))\nfor s in p:\n    print('#' + s + '#')\nprint('#' * (w + 2))", "h, w = map(int,input().split())\n\nprint(\"#\" * (w + 2))\nfor i in range(h):\n    print(\"#\" + input() + \"#\")\nprint(\"#\" * (w + 2))", "n,m=map(int,input().split())\nprint(*['#'*(m+2)]+['#'+input()+'#' for _ in range(n)]+['#'*(m+2)],sep='\\n')", "#-*-coding:utf-8-*-\nimport sys\ninput=sys.stdin.readline\n\ndef main():\n    strings=[]\n    h,w = map(int,input().split())\n    strings=[input().rstrip() for _ in range(h)]\n    output=\"\"\n\n    for i in range(h+2):\n        if i==0 or i==h+1:\n            igeta=\"#\"*(w+2)\n            print(\"{}\".format(igeta))\n        else:\n            output=\"#\"+strings[i-1]+\"#\"\n            print(output)\n\ndef __starting_point():\n    main()\n__starting_point()", "h,w= map(int,input().split())\na = [input() for _ in range(h)]\ns = ''\nfor i in range(w+2):\n    s+='#'\nprint(s)\nfor i in a:\n    t = list(i)\n    t.insert(0,'#')\n    t.append('#')\n    print(''.join(t))\nprint(s)", "H, W = [int(x) for x in input().split()]\n\nfor i in range(H):\n    if i == 0:\n        print((''.join(['#'] * (W + 2))))\n\n    print(('#' + input() + '#'))\n\nprint((''.join(['#'] * (W + 2))))\n", "h, w = list(map(int, input().split()))\npixel = [[] for i in range(h+2)]\nfor i in range(h+2):\n    if i == 0:\n        pixel[i].append('#'*(w+2))\n    elif i == h+1:\n        pixel[i].append('#'*(w+2))\n    else :\n        pixel[i].append('#')\n        s = input()\n        pixel[i].append(s)\n        pixel[i].append('#')\nfor i in range(h+2):\n    print((\"\".join(pixel[i])))\n\n", "import sys\n\nH, W = map(int, sys.stdin.readline().split())\nprint(\"#\" * (W + 2))\nfor _ in range(H):\n    s = sys.stdin.readline().strip()\n    print(\"#\" + s + \"#\")\nprint(\"#\" * (W + 2))", "h,w = map(int,input().split())\nfor i in range(w+1):\n    print(\"#\",end = \"\")\nprint(\"#\")\nfor i in range(h):\n    print(\"#\"+input()+\"#\")\nfor i in range(w+1):\n    print(\"#\",end = \"\")\nprint(\"#\")", "h,w = map(int, input().split())\nprint(\"#\" * (w + 2))\nfor i in range(h):\n  s = input()\n  print(\"#\" + s + \"#\")\n  \nprint(\"#\" * (w + 2))", "h,w=map(int,input().split())\nhuta=['#' for _ in range(w+2)]\nhuta=''.join(huta)\nprint(huta)\nfor _ in range(h):\n    a=input()\n    print('#{}#'.format(a))\nprint(huta)", "h, w = list(map(int, input().split()))\na = [input() for i in range(h)]\nprint((\"#\" * (w + 2)))\nfor i in a:\n    print((\"#\" + i + \"#\"))\nprint((\"#\" * (w + 2)))\n", "H,W = map(int,input().split())\nls = [[\"#\" for _ in range(W+2)]]\n\nfor _ in range(H):\n  A = [\"#\"] + list(input()) + [\"#\"]\n  ls.append(A)\n  \nls.append([\"#\" for _ in range(W+2)])\n\nfor i in range(H+2):\n  print(\"\".join(ls[i]))", "h,w=map(int,input().split())\n \nprint(\"#\"*(w+2))\n \nfor i in range(h):\n  num=input()\n  print(\"#\"+num+\"#\")\n  \nprint(\"#\"*(w+2))", "def inpl(): return list(map(int, input().split()))\nH, W = inpl()\nans = [[\"#\"]*(W+2) for _ in range(H+2)]\n\nfor h in range(H):\n    A = input()\n    for w in range(W):\n        ans[h+1][w+1] = A[w]\n\nprint(*[\"\".join(a) for a in ans], sep=\"\\n\")", "H, W = list(map(int, input().split()))\nres = []\n\nfor i in range(H+2):\n    if i == 0 or i == H+1:\n        l = '#'*(W+2)\n        res.append(l)\n    else:\n        a = input()\n        a = '#' + a + '#'\n        res.append(a)\n\nfor i in res:\n    print(i)\n", "h,w = map(int,input().split())\nprint(\"#\"*(w+2))\nfor _ in range(h):\n  print(\"#\" + input() + \"#\")\nprint(\"#\"*(w+2))", "with open(0) as f:\n    H, W, *a = f.read().split()\nW = int(W)\na.insert(0,'#'*W)\na.append('#'*W)\nfor x in a:\n    print(('#' + x.rstrip('\\n') + '#'))\n", "h, w = map(int, input().split())\nprint(\"#\" * w + \"#\" * 2)\nfor _ in range(h):\n    line = \"#\" + input() + \"#\"\n    print(line)\n\nprint(\"#\" * w + \"#\" * 2)", "h, w = map(int, input().split())\nwords = [0]*(h+2)\nfor i in range(1, h+1, 1):\n    s = input()\n    words[i] = s\n\nfor j in range(len(words)):\n    if words[j] == 0:\n        words[j] = '#'*(w+2)\n    else:\n        words[j] = '#'+words[j]+'#'\n\nfor ans in words:\n    print(ans)", "h, w = map(int, input().split())\nprint(\"#\" * (w + 2))\nfor _ in range(h):\n  print(\"#\" + input() + \"#\")\nprint(\"#\" * (w + 2))", "#ABC062 B:PictureFrame\n\nH,W = map(int, input().split())\npic = []\nfor _ in range(H):\n    a = input()\n    pic.append(a)\nprint('#'*(W+2))\nfor i in range(H):\n    print('#' + pic[i] + '#')\nprint('#'*(W+2))", "h, w = map(int, input().split())\ngrid = [[\"#\"] * (w + 2) for _ in range(h + 2)]\n\nfor i in range(h):\n    grid[i + 1] = [\"#\"] + list(map(str, input().rstrip())) + [\"#\"]\n\nfor i in range(h + 2):\n    print(\"\".join(grid[i]))", "h,w = list(map(int, input().split()))\nprint('#' * (w + 2))\nfor _ in range(h):\n    print('#' + input() + \"#\")\nprint('#' * (w + 2))", "H,W=map(int,input().split())\nanslist = [[\"#\" for i in range(W+2)]for j in range(H+2)]\nfor i in range(H):\n    a=input()\n    for j in range(W):\n        anslist[i+1][j+1]=a[j]\nfor i in range(H+2):\n    for j in range(W+2):\n        print(anslist[i][j],end=\"\")\n    print()", "h, w = map(int,input().split())\na = [input() for _ in range(h)]\nprint(\"#\"*(w+2))\nfor i in range(h):\n    print(\"#\" + a[i] + \"#\")\nprint(\"#\"*(w+2))", "HW = input().split()\n\nH = int(HW[0])\nW = int(HW[1])\n\nlst = []\n\nfor i in range(H):\n   lst.append('#' + input() + '#')\n\nprint('#' * (W+2))\n\nfor s in lst:\n   print(s)\n\nprint('#' * (W+2))", "H, W = map(int, input().split())\n\n\nframe = [['#' for _ in range(W+2)] for _ in range(H+2)]\n\nmat = [['#' for _ in range(W)] for _ in range(H)]\nfor i in range(H):\n    line = input()\n    for j in range(W):\n        mat[i][j] = line[j]\n\nfor i, row in enumerate(mat):\n    for j, char in enumerate(row):\n        frame[i+1][j+1] = char\n\nfor i in frame:\n    for j in i:\n        print(j, end=\"\")\n    print()\n", "h,w=map(int, input().split())\n\nprint(\"#\"*(w+2))\nfor i in range(h):\n    print(\"#{}#\".format(input()))\nprint(\"#\"*(w+2))", "h,w = map(int,input().split())\n\nprint('#'*(w+2))\nfor i in range (h):\n    print('#' + input() + '#')\nprint('#'*(w+2))", "H, W = map(int, input().split())\nprint(\"#\"* (W + 2) )\nfor i in range(H):\n  print(\"#\" + input() + \"#\")\nprint(\"#\"* (W + 2) )", "h,w = list(map(int, input().split()))\nprint((\"#\"*(w+2)))\nfor i in range(h):\n    s = input()\n    print((\"#\" + s + \"#\"))\nprint((\"#\"*(w+2)))\n", "H,W=map(int,input().split())\na=[\"\" for i in range(H)]\nfor i in range(H):\n    a[i]=list(str(input()))\n\nfor s in range(-1,H+1):\n    for t in range(-1,W+1):           \n        if s==-1 or s==H:\n            print(\"#\"*(W+2))\n            break\n        else:\n            if t==-1:\n                print(\"#\",end=\"\")\n            elif t==W:\n                print(\"#\")\n            else:\n                print(a[s][t],end=\"\")", "h,w = map(int,input().split())\nprint(\"#\"*(w+2))\nfor i in range(h):\n  print(\"#\"+input()+\"#\")\nprint(\"#\"*(w+2))", "a,b=map(int,input().split())\ns=[]\nfor i in range(a):\n    s.append(input())\nprint(\"#\"*(b+2))\nfor i in range(a):\n    print(\"#\",end=\"\")\n    print(s[i],end=\"\")\n    print(\"#\")\nprint(\"#\"*(b+2))", "N, W = list(map(int, input().split()))\nl = [input() for _ in range(N)]\n\nprint(('#'*(W+2)))\nfor i in l:\n    print(('#' + i + '#'))\nprint(('#'*(W+2)))\n", "H,W = map(int, input().split())\nH += 2\nW += 2\nfor i in range(H):\n\tif i == 0 or i == H-1:\n\t\tout = '#'*W\n\telse:\n\t\ta = input()\n\t\tout = '#{}#'.format(a)\n\tprint(out)", "H, W = map(int, input().split())\nprint('#' * (W + 2) ) # head\nfor _ in range(H):\n  print('#', input(), '#', sep='')\n\nprint('#' * (W + 2) ) # tail", "h, w = map(int, input().split())\na_l = [ ['#'] + list(map(str, input().split())) + ['#'] for i in range(h) ]\n\nprint(''.join(['#']*(w+2)))\nfor a in a_l:\n    print(''.join(a))\nprint(''.join(['#']*(w+2)))", "from collections import Counter,defaultdict,deque\nfrom heapq import heappop,heappush\nfrom bisect import bisect_left,bisect_right \nimport sys,math,itertools,fractions\nsys.setrecursionlimit(10**8)\nmod = 10**9+7\nINF = float('inf')\ndef inp(): return int(sys.stdin.readline())\ndef inpl(): return list(map(int, sys.stdin.readline().split()))\n\nh,w = inpl()\ns = [input() for _ in range(h)]\nres = []\nfor i in range(h+2):\n    if i == 0 or i == h+1:\n        res.append('#' * (w+2))\n    else:\n        res.append('#' + s[i-1] + '#')\nfor x in res:\n    print(x)", "h, w = map(int, input().split())\na = ['#' * (w + 2)]\nfor i in range(h):\n    a.append('#' + input() + '#')\na += ['#' * (w + 2)]\n\nfor i in range(h + 2):\n    print(a[i])", "import sys, math\nfrom itertools import combinations as c, product as p\nfrom collections import deque\nsys.setrecursionlimit(10**9)\nINF = float('inf')\nMOD = 10**9 + 7\n#MOD = 998244353\n\n\ndef si(): return input()\ndef ii(): return int(input())\ndef fi(): return float(input())\ndef lstr(): return input().split()\ndef lint(): return list(map(int, input().split()))\ndef lintdec(): return list(map(lambda x:int(x) - 1, input().split()))\ndef lnstr(n): return [input() for _ in range(n)]\ndef lnint(n): return [int(input()) for _ in range(n)]\ndef lint_list(n): return [lint() for _ in range(n)]\n\n\n\n############################################################\nH, W = lint()\n\nans = ['#' * (W + 2)]\nfor _ in range(H):\n    ans.append('#' + input() + '#')\nans.append('#' * (W + 2))\n\nprint('\\n'.join(ans))", "h, w = list(map(int, input().split()))\nprint(('#'*(w + 2)))\nfor _ in range(h):\n  print(('#' + input() + '#'))\nprint(('#'*(w + 2)))\n", "with open(0) as f:\n    H, W, *a = f.read().split()\nW = int(W)\na.insert(0,'#'*W)\na.append('#'*W)\nfor x in a:\n    print(('#' + x.rstrip('\\n') + '#'))\n", "h,w=map(int, input().split())\nprint(\"#\"*(w+2))\n\nfor i in range(h):\n    s=input()\n    print(\"#\"+s+\"#\")\n\nprint(\"#\"*(w+2))", "def main():\n    h,w= list(map(int, input().split()))\n    a = []\n    for i in range(h):\n        a.append(input())\n    cnt = len(a[0])+2\n    print((\"#\" * cnt))\n    for _ in a:\n        print(f'#{_}#')\n    print((\"#\" * cnt))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "h,w=map(int,input().split())\n\nprint(\"#\"*(w+2))\n\nfor i in range(h):\n  num=input()\n  print(\"#\"+num+\"#\")\n  \nprint(\"#\"*(w+2))", "h,w=map(int,input().split())\ns=[\"\"]*h\nfor i in range(h) :\n  s[i]=input()\nprint(\"#\"*(w+2))\nfor i in range(h) :\n  print(\"#\"+s[i]+\"#\")\nprint(\"#\"*(w+2))", "h,w = map(int,input().split())\na = []\nfor _ in range(h):a.append(input())\nfor _ in range(w + 2):print(\"#\",end=\"\")\nprint()\nfor i in range(h):\n    print(\"#\",end=\"\")\n    print(a[i],end=\"\")\n    print(\"#\")\nfor _ in range(w + 2):print(\"#\",end=\"\")", "H,W = map(int,input().split())\nA = [input() for i in range(H)]\nprint('#'*(W+2))\nfor a in A:\n    print('#' + a + '#')\nprint('#'*(W+2))", "import sys\nimport copy\nimport math\nimport itertools\nimport numpy as np\nl = [int(c) for c in input().split()]\nH = l[0]\nW = l[1]\na = [input() for c in range(H)]\n\n\nprint(\"#\"*(W+2))\nfor i in range(H):\n    print(\"#\"+a[i]+\"#\")\nprint(\"#\"*(W+2))", "h,w = map(int,input().split())\na = [\"#\"*(w+2)]\nfor i in range(h):\n    a.append('#'+input()+\"#\")\na.append(\"#\"*(w+2))\nfor i in range(h+2):\n    print(a[i])", "H, W=map(int, input().split())\nout=['#'*(W+2)]+['#'+input()+'#' for _ in range(H)]+['#'*(W+2)]\nprint(*out, sep='\\n')\n", "x,y=input().split()\nx=int(x)\ny=int(y)\na=[input() for i in range(x)]\nc=\"\"\nfor i in range(y+2):\n  c=c+\"#\"\nprint(c)\nfor i in range(x):\n  print(\"#\"+a[i]+\"#\")\nprint(c)", "h,w=list(map(int,input().split()))\ntop = \"#\"\ntop *=(w + 2)\nprint(top)\nfor i in range(h):\n  tmp = input()\n  print((\"#\"+tmp+\"#\"))\nprint(top)\n", "H, W = map(int, input().split())\nA = [input() for _ in range(H)]\n\nW += 2\nf = '#'\nprint(f * W)\nfor a in A:\n    print(f'#{a}#')\nprint(f * W)", "h, w = map(int, input().split())\na = []\nfor _ in range(h):\n    a.append('#' + input() + '#')\nsharp = '#' * (w + 2)\nprint(sharp)\nfor j in range(0, h):\n    print(a[j])\nprint(sharp)", "h,w = map(int,input().split())\n\nprint('#'*(w+2))\nfor i in range(h):\n    s = input()\n    print('#'+s+'#')\nprint('#'*(w+2))", "h, w = map(int, input().split())\n\ns = \"#\" * (w+2)\n\nprint(s)\nfor i in range(h):\n    t = input()\n    print(\"#\", end=\"\")\n    print(t, end=\"#\\n\")\nprint(s)\n", "H, W = map(int, input().split())\n\nscr_list = [input() for _ in range(H)]\n\nprint('#' * (W+2))\nfor i in scr_list:\n    print('#' + i + '#')\nprint('#' * (W+2))", "# coding: utf-8\n\nheight, width = map(int, input().split())\n\nfor i in range(width+2):\n    print(\"#\", end='')\n    \nprint(\"\")\n\nfor j in range(height):\n    print(\"#\", end='')\n    str = input()\n    print(str, end='')\n    print(\"#\")\n\n\nfor l in range(width+2):\n    print(\"#\", end='')", "def resolve():\n    '''\n    code here\n    '''\n    H, W = [int(item) for item in input().split()]\n    grid = [input() for _ in range(H)]\n    \n    print(('#'*(W+2)))\n    for line in grid:\n        print(('#' + line + '#'))\n    print(('#'*(W+2)))\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "h, w = map(int, input().split())\na = []\nfor _ in range(h):\n    a.append(input())\nprint('#' * (w + 2))\nfor i in range(h):\n    print('#' + a[i] + '#')\nprint('#' * (w + 2))", "h, w = map(int, input().split())\nprint(\"#\"*(w+2))\nfor i in range(h):\n    s=input()\n    print(\"#\" + s + \"#\")\nprint(\"#\"*(w+2))", "H, W = list(map(int, input().split()))\nA = [list(input()) for _ in range(H)]\n\n# \u4e00\u6bb5\u76ee\nprint((\"#\"*(W+2)))\nfor a in A:\n    print((\"#\" + \"\".join(a) + \"#\"))\n# \u6700\u7d42\u6bb5\nprint((\"#\"*(W+2)))\n", "h,w = [int(x) for x in input().split()]\nprint(\"#\" * (w + 2))\nfor i in range(h):\n  print(\"#\" + input() + \"#\")\nprint(\"#\" * (w + 2))", "with open(0) as f:\n    H, W, *a = f.read().split()\nW = int(W)\na.insert(0,'#'*W)\na.append('#'*W)\nfor x in a:\n    print(('#' + x.rstrip('\\n') + '#'))\n", "h,w = map(int, input().split())\nal = []\nfor _ in range(h):\n    row = input()\n    row = '#' + row + '#'\n    al.append(row)\n\ntop = '#'*(w+2)\nprint(top)\nfor a in al:\n    print(a)\nprint(top)", "H,W = list(map(int,input().split()))\na = ''\nfor i in range(W + 2):\n  a += '#'\nL = []\nL.append(a)\nfor j in range(H):\n  b = str(input())\n  c = '#' + b + '#'\n  L.append(c)\nL.append(a)\nfor k in range(H + 2):\n  print((L[k]))\n", "h, w = map(int, input().split())\n\nprint(\"#\" * (w+2))\n\nfor i in range(h):\n  s = input()\n  print(\"#\" + s + \"#\")\n\nprint(\"#\" * (w+2))", "h,w = map(int, input().split())\nprint(\"#\"*(w+2))\nfor i in range(h):\n  s = input()\n  print(\"#\"+s+\"#\")\nprint(\"#\"*(w+2))", "h,w = map(int, input().split())\na = [input() for i in range(h)]\n\nprint(\"#\"*(w+2))\nfor i in range(h):\n    print(\"#\" + a[i] + \"#\")\nprint(\"#\"*(w+2))", "x,y = map(int,input().split())\nL = [list(input()) for _ in range(x)]\nF = [['#']*(y+2) for _ in range(x+2)]\nfor i in range(x):\n  for j in range(y):\n    F[i+1][j+1] = L[i][j]\nfor f in F:\n  print(''.join(f))"]