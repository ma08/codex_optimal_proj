["S = input()\nx = len(S)\n\nfor i in range(0, x, 2):\n  y = x - 2 - i\n  if S[:y//2] == S[y//2 : y]:\n    \n    print(len(S[:y]))\n    break", "S = input()\nN = len(S)\n\nfor i in range(N-1,0,-1):\n  if i % 2 == 1:\n    continue\n  if S[:i//2] == S[i//2:i]:\n    ans = i\n    break\n    \nprint(ans)", "n = input()\nnum = len(n)-2\nfor i in range(num,0,-2):\n  f = int(i/2)\n  if n[:f]==n[f:i]:\n    print(i)\n    break", "s = input()\nnum = len(s)-2\nfor i in range(num,0,-2):\n  f = int(i / 2)\n  if s[:f] == s[f:i]:\n    print(i)\n    break", "s = input()\nfor i in range(len(s)):\n    s = s[:-1]\n    if len(s) % 2 == 0:\n        if s[:len(s) // 2] ==s[len(s) // 2:]:\n            print(len(s))\n            break", "import sys\nS = input()\nans = 0\n\n\nfor i in range(len(S)//2):\n    S = S[:len(S)-2]\n    #print(S)\n    count = 0\n    for j in range(len(S)//2):\n        if S[j] != S[len(S)//2+j]:\n            break\n        else:\n            count += 1\n    if count == len(S)//2:\n        print((len(S)))\n        return\n\n", "import sys\nimport copy\nimport math\nimport itertools\nimport numpy as np\nS=input()\nfor i in range(1,len(S)):\n    l = len(S[0:len(S)-i]) \n    if l%2==0:\n        if S[0:len(S)-i] == S[0:int(l/2)]+S[0:int(l/2)]:\n            print(l)\n            return", "s = input()\ns = s[0: -1]\nfor i in range(len(s)):\n    l = len(s)\n    if s[0: l // 2] == s[l // 2:]:\n        print(len(s))\n        break\n    s = s[0: -1]", "# -*- coding: utf-8 -*-\nimport numpy as np\nimport sys\nfrom collections import deque\nfrom collections import defaultdict\nimport heapq\nimport collections\nimport itertools\nimport bisect\nfrom scipy.special import comb\nimport copy\nsys.setrecursionlimit(10**6)\n\n\ndef zz():\n    return list(map(int, sys.stdin.readline().split()))\n\n\ndef z():\n    return int(sys.stdin.readline())\n\n\ndef S():\n    return sys.stdin.readline()[:-1]\n\n\ndef C(line):\n    return [sys.stdin.readline() for _ in range(line)]\n\n\ndef check(s):\n    if (s[len(s) // 2:] == s[:len(s) // 2]):\n        print((len(s)))\n        return\n\n\nS = S()\nn = len(S)\nif (n % 2 == 0):\n    while S:\n        S = S[:-2]\n        check(S)\nelse:\n    S = S[:-1]\n    check(S)\n    while S:\n        S = S[:-2]\n        check(S)\n", "S = list(input())\n\nfor _ in range(len(S)-1):\n    del S[-1]\n    if S[:int(len(S)/2)] == S[int(len(S)/2):]:\n        break\n        \nprint(len(S))", "s = str(input())\nsl = list(s)\nans = 0\ndel sl[-1]\nfor i in range(1,len(sl)):\n  if(len(sl)%2==0):\n    if(sl[:len(sl)//2]==sl[len(sl)//2:]):\n      ans = len(sl)\n      break\n  del sl[-1] \nprint(ans)\n  \n\n", "S=input()\n\nfor i in range(1, len(S)):\n  s=S[0:len(S)-i]\n  #print(s)\n  if len(s)%2==1:\n    continue\n  #print('pre', s[0:int(len(s)/2)+1])\n  #print('follow', s[int(len(s)/2):len(s)])\n  if s[0:int(len(s)/2)]==s[int(len(s)/2):len(s)]:\n    print(len(S)-i)\n    break", "S = list(input())\n\nS.pop(-1)\nif (len(S)) % 2 == 1:\n  S.pop(-1)\nwhile True:\n  count = 0\n  for i in range(int(len(S)/2)):\n    if S[i] == S[int(len(S)/2) + i]:\n      count += 1\n      continue\n    else:\n      break\n  if count == len(S)/2:\n    print(len(S))\n    break\n  S.pop(-1)\n  S.pop(-1)", "s=input()\nfor i in range(len(s)-1, 0, -1):\n    L = len(s[:i])\n    if L % 2 == 0 and s[:L//2] == s[L//2:L]:\n        print(i)\n        return\n", "s = input()\nn = len(s)\n\nfor i in range(n // 2 - 1):\n  s = s[:len(s)-2]\n  if s[:len(s)//2] == s[len(s)//2:]:\n    print(len(s))\n    break", "s = str(input())\n\n\n#print(kind)\nfor i in range(2, len(s), 2):\n    line = s[:len(s)-i]\n    #print(line)\n    if line[:len(line)//2] == line[len(line)//2:]:\n        ans = len(line)    \n        break\n\n\nprint(ans)\n", "s=str(input())\nflag=0\nfor i in range(1,len(s)):\n  s=s[:len(s)-2]\n  for j in range(len(s)//2):\n    if s[j]!=s[len(s)//2+j]:\n      flag=1\n      break\n  if flag==0:\n    print(len(s))\n    return\n  else:\n    flag=0\n    continue", "s = input ()\nwhile len(s) != 0:\n  s = s[:-2]\n  le = round (len(s)/2)\n  if s[:le] == s[le:len(s)]:\n    print (len(s))\n    break", "s = input()\nn = len(s)\nfor i in range(n-1,0,-1):\n    s = s[0:i]\n    n = len(s) \n    if n%2 != 0:\n        pass\n    else:\n        if s[0:i//2] == s[i//2:n]:\n            print(n)\n            return", "S = list(str(input()))\ndel S[-1]\ndel S[-1]\n\ndef ss(string):\n    if len(string)&2==1:\n        retrun(False)\n    else:\n        for i in range(len(string)//2):\n            if S[i]!=S[len(string)//2+i]:\n                return(False)\n        return(True)\n\nwhile True:\n    if ss(S):\n        print((len(S)))\n        return\n    else:\n        del S[-1]\n        del S[-1]\n", "s = input()\n\ndef judge(S):\n   if (len(S) % 2 == 0) and (S[:len(S) // 2] == S[(-1) * len(S) // 2:]):\n      return True\n   else:\n      return False\n\nfor i in range(len(s)):\n   s = s[:-1]\n   if judge(s):\n      print(len(s))\n      break", "s=input()\nn=len(s)\nfor i in range(n//2-1, 0, -1):\n  if s[:i]==s[i:2*i]:\n    print(2*i)\n    return", "S = input()\nfor i in range(1,len(S)):\n    S_short = S[0:-i]\n    if len(S_short)%2!=0:\n        continue\n    else:\n        half = len(S_short)//2\n        if S_short[0:half]==S_short[half:]:\n            break\n        else:\n            continue\nprint(len(S)-i)  ", "s = input()\nfor i in range(1,201):\n    if (len(s)-i)%2 == 0:\n        if s[:(len(s)-i)//2]*2 == s[:len(s)-i]:\n            print(len(s[:len(s)-i]))\n            break", "s=input()\nm=0\nif s[0]==s[1]:\n    m=1\nfor i in range(1,len(s)//2):\n    if i==len(s)//2-1:\n        break\n    if s[:i]==s[i:2*i]:\n        m=i\nprint(2*m)", "s = input()\ns = s[:len(s) - 2]\n\nwhile s[:len(s)//2] != s[len(s)//2:]:\n    s = s[:len(s) - 2]\nprint(len(s))", "s = input()\nfor i in range(1,len(s)-1):\n    t = s[:-i]\n    if t[len(t)//2:] == t[:len(t)//2]:\n        print(len(t))\n        return", "import sys, re\nfrom math import ceil, floor, sqrt, pi, factorial, gcd\nfrom copy import deepcopy\nfrom collections import Counter, deque\nfrom heapq import heapify, heappop, heappush\nfrom itertools import accumulate, product, combinations, combinations_with_replacement\nfrom bisect import bisect, bisect_left, bisect_right\nfrom functools import reduce\nfrom decimal import Decimal, getcontext\n# input = sys.stdin.readline \ndef i_input(): return int(input())\ndef i_map(): return list(map(int, input().split()))\ndef i_list(): return list(i_map())\ndef i_row(N): return [i_input() for _ in range(N)]\ndef i_row_list(N): return [i_list() for _ in range(N)]\ndef s_input(): return input()\ndef s_map(): return input().split()\ndef s_list(): return list(s_map())\ndef s_row(N): return [s_input for _ in range(N)]\ndef s_row_str(N): return [s_list() for _ in range(N)]\ndef s_row_list(N): return [list(s_input()) for _ in range(N)]\ndef lcm(a, b): return a * b // gcd(a, b)\nsys.setrecursionlimit(10 ** 6)\nINF = float('inf')\nMOD = 10 ** 9 + 7\nnum_list = []\nstr_list = []\n\ndef main():\n    s = input()\n    if len(s) % 2 == 0:\n        i = len(s) - 2\n    else:\n        i = len(s) - 1\n    while True:\n        if s[:int(i/2)] ==  s[int(i/2):i]:\n            print(i)\n            break\n        i -= 2\n        \n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "S = input()\nfor i in range(2, len(S)+2, 2):\n    split = int(len(S[:-i])/2)\n    if S[:split] == S[split:-i]:\n        print((len(S[:-i])))\n        return\n", "s = str(input())\nfor i in range(len(s)):\n    s = s[:len(s)-1]\n    if len(s)%2 == 0:\n        a = s[:len(s)//2]\n        b = s[len(s)//2:]\n        if a == b:\n            print(len(s))\n            break", "#!/usr/local/bin/python3\n# https://atcoder.jp/contests/abc066/tasks/abc066_b\n\nS = list(input())[:-2]\n\ndef check(S):\n    half = len(S) // 2\n    if S[:half] == S[half:]:\n        return True\n    else:\n        return False\n\nwhile True:\n    if check(S):\n        print((len(S)))\n        break\n    S = S[:-2]\n", "S=list(input())\n\n\nimport sys\nfor i in range(len(S)):\n    del S[-1]\n    for j in range(len(S)):\n        if len(S)%2==0:\n            if S[0:len(S)//2]==S[len(S)//2:len(S)]:\n                print(len(S))\n                return\nelse:\n    print(0)", "#4 B - ss\nS = list(input())\n\ndef judge(A):\n    if len(A)%2 == 0:\n        if A[:len(A)//2] == A[len(A)//2:]:\n            return True\n    return False\n\nfor i in range(len(S)):\n    S.pop()\n    if judge(S):\n        break\nprint(len(S))", "N = str(input())\n\nwhile True:\n    N = N[0:-1]\n    if len(N) % 2 == 0:\n        if N[0:int(len(N)/2)] == N[int(len(N)/2):]:\n            break\n\nprint(len(N))", "#!/usr/bin/env python3\nS = input()\n\nn = 0\nfor i in range(200):\n    n += 2\n    s = S[:len(S) - n]\n\n    if s[: len(s) // 2] == s[len(s) // 2:]:\n        print((len(s)))\n        return\n", "S = input()\nN = len(S)\n\nif N%2 == 1:\n    M = N-1\nelse:\n    M = N-2\n\nfor i in range(M,0,-2):\n    if S[:i//2]==S[i//2:i]:\n        break\nprint(i)\n", "s=input()\nn=len(s)\nfor i in range(1,n):\n    if s[:n-i]==s[:(n-i)//2]*2:\n        print(n-i)\n        break", "s = input()\nfor i in range(1000):\n    s = s[:-2]\n    tnp = 0\n    for j in range(len(s)//2):\n        if (s[j]!=s[len(s)//2+j]):\n            tnp += 1\n    if (tnp==0):\n        print(len(s))\n        break", "s = input()\nres = 0\n\nfor i in range(len(s)):\n  if i % 2 != 0:\n    pass\n  else:\n    if s[:i//2] == s[i//2:i]:\n      res = i\nprint(res)", "s = input()\n\nwhile True:\n    l = len(s)\n    s = s[:l - 1]\n    if len(s) % 2 != 0:\n        pass\n    else:\n        if s[:len(s) // 2] == s[len(s) // 2:]:\n            print((len(s)))\n            break\n", "S=input()\nN=len(S)\nfor i in range((N-1)//2,0,-1):\n    if S[0:i]==S[i:2*i]:\n        print((2*i))\n        break\n", "S = input()\nfor i in range(2, len(S), 2):\n    end = len(S)-i\n    center = int(end/2)\n    if S[:center] == S[center:end]:\n        print(end)\n        break", "S = input()\ntest = \"\"\ntmp = 0\nfor i in range(1, len(S)):\n    j = -1 * i\n    test = S[:j]\n    tmp = len(test) // 2\n    if len(test) % 2 == 0 and test[0:tmp] == test[tmp:]:\n        print(len(test))\n        return", "s = input()\nn = len(s)\nfor i in range(1,len(s)//2):\n  if s[:(n-2*i)//2] == s[(n-2*i)//2:n-2*i]:\n    print(n-2*i)\n    return", "s = list(input())\n\ns = s[:len(s)-1]\n\nfor i in range (len(s)):\n  if len(s) %2 == 0:\n    if s[:len(s)//2]==s[len(s)//2:]:\n      print(len(s))\n      return\n  s.pop(-1)", "S = input()\n\nl = len(S)\n\nl = (l-2)//2\nwhile l > 0:\n    if S[0:l] == S[l:2*l]:\n        print((2*l))\n        break\n    l = l-1\n", "n = input()[:-1]\nwhile n[:len(n)//2] != n[len(n)//2:]:\n  n = n[:-1]\nprint(len(n))", "s = str(input())\nwhile True:\n    s = s[:-1]\n    n = len(s) // 2\n    if s[:n] == s[n:]:\n        print(2 * n)\n        return", "s=list(input())\nfor i in range(len(s)):\n    s.pop()\n    if s[:len(s)//2]==s[len(s)//2:]:\n        print(len(s))\n        break", "def answer(s: str) -> int:\n    if len(s) % 2 == 1:\n        s += ' '\n\n    for _ in range(len(s) // 2):\n        s = s[:-2]\n        l = len(s)\n        middle = l // 2\n\n        if s[:middle] == s[middle:]:\n            return l\n\n\ndef main():\n    s = input()\n    print(answer(s))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "S = input()\n\nfor i in range(1, len(S)):\n    gumozi = S[0:len(S)-i]\n\n    if gumozi[0:len(gumozi)//2] == gumozi[(len(gumozi)//2):len(gumozi)]:\n        print((len(gumozi)))\n        return\nprint((0))\n", "s = input()\nn = len(s)\n\nans = n\n\nfor i in range(n):\n    s = s[0:-1]\n    ans -= 1\n\n    if s[0:ans//2] == s[ans//2:]:\n        break\n\nprint(ans)", "s=input()\nn=len(s)\nfor i in range(2,n,2):\n  h=(n-i)//2\n  if s[:h]==s[h:n-i]:\n    print(n-i)\n    break", "s = input()\nn = len(s)\nimport sys\nfor i in range(1,n//2):\n    if s[:(n-2*i)//2]==s[(n-2*i)//2:n-2*i]:\n        print(n-2*i)\n        return", "s=input()\ntemp = 1 if len(s) % 2 != 0 else 2\nfor i in range(temp, len(s), 2):\n  moji = s[:len(s)-i]\n  #print(moji[:len(moji)//2], moji[len(moji)//2:])\n  if moji[:len(moji)//2] == moji[len(moji)//2:]:\n    print((len(moji)))\n    break\n", "s = input()\nnum = len(s)\n\ntar_index = len(s) - 1\ncount = 0\n\nwhile (count < num):\n    tar = s[:tar_index]\n    tar_num = len(tar)\n    # \u6587\u5b57\u6570\u304c\u5947\u6570\u306e\u6642\u306f\u3001\u5076\u6587\u5b57\u5217\u306b\u306f\u306a\u3089\u306a\u3044\u3002\n    if (tar_num % 2 == 0):\n        half = int(tar_num / 2)\n\n        if (tar[:half] == tar[half:]):\n            print((int(2 * len(tar[:half]))))\n            return\n        else:\n            pass\n\n    else:\n        pass\n\n    tar_index -= 1\n    count += 1\n", "import sys\n\ninput = sys.stdin.readline\n\ndef main():\n    ans = 0\n    s = input().rstrip('\\n')\n    ls = len(s)\n    for i in range(1,ls):\n        if (ls - i)%2 != 0:\n            continue\n        temps = s[:-i]\n        if temps[:(ls-i)//2] == temps[(ls-i)//2:]:\n            ans = ls - i \n            break\n\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()", "s = list(input())\nfor i in range(len(s)):\n  s.pop(-1)\n  if len(s)%2 == 1:\n    continue\n  if s[:len(s)//2] == s[len(s)//2:]:\n    print(len(s))\n    break", "# B - ss\ndef main():\n    s = list(input())\n\n    for _ in range(len(s)):\n        s.pop()\n        if len(s) % 2 == 0:\n            p = len(s)//2\n            if s[0:p] == s[p:]:\n                print(len(s))\n                return\n\n\nif __name__ ==  \"__main__\":\n    main()", "from sys import stdin, stdout # only need for big input\nimport numpy as np\n\ndef solve():\n    s = input()\n    n = len(s)\n    ans = 1 \n    for end in range(2,n,2):\n        even = True\n        for i in range(end//2):\n            if s[i] != s[end//2 + i]:\n                even = False\n                break\n        if even:\n            ans = end\n    print(ans)\n\ndef main():\n    solve()\n\n\ndef __starting_point():\n    main()\n__starting_point()", "S = str(input())\nfor i in range(1, int(len(S) / 2)):\n    T = S[0: len(S) - 2 * i]\n    clear = 0\n    m = int(len(T) / 2)\n    for j in range(m):\n        if T[j] == T[m + j]:\n            clear += 1\n    if clear == m:\n        print((len(T)))\n        break\n", "n = input()[:-1]\nwhile n[:len(n)//2] != n[len(n)//2:]:\n  n = n[:-1]\nprint((len(n)))\n", "s = input()\nfor i in range(len(s)):\n    ss = s[:-2-i]\n    size = len(ss)\n    if size%2==0 and ss[:size//2] == ss[size//2:]:\n        print(size)\n        return", "S = str(input())\nS = S[:-2]\n\nfor _ in range(len(S)//2):\n  \n  if S[:len(S)//2] == S[len(S)//2:]:\n    print(len(S))\n    break\n\n  else:\n    S = S[:-2]", "s = list(input())\nans = 0\nif len(s)%2==0:\n    s = s[:-2]\nelse:\n    s.pop(-1)\n\nwhile len(s)>0:\n    if s[0:int(len(s)/2)]==s[int(len(s)/2):len(s)]:\n        ans = len(s)\n        break\n    else:\n        s = s[:-2]\n        \nprint(ans)", "s = input()\nans = 0\nfor _ in range(1,len(s)):\n    s = s[:-1]\n    if len(s)%2==0:\n        if s[:len(s)//2]==s[len(s)//2:]:\n            ans = max(ans,len(s))\n    else:\n        continue\nprint(ans)", "S = input()\n\nodd = len(S) % 2\nlittle = odd + (1-odd)*2\nstart = len(S)-1-little\n\nans = 0\nfor i in range(start,0,-2):\n  half = (i+1)//2\n  a = S[:half]\n  b = S[half:half*2]\n  if a == b:\n    #print(a,b)\n    ans = len(a)*2\n    break\n    \n    \nprint(ans)", "s = input()\ni = len(s) - 1\nwhile True:\n    if i % 2 == 0:\n        if s[: i//2] == s[i//2 : i]:\n            print(i)\n            break\n    i -= 1", "s = str(input())\nans = 0\n\nfor i in range(len(s)-1,0,-1):\n    if i%2!=0:\n        continue\n\n    if s[0:i//2] == s[i//2:i] and i > ans :\n        ans = i\n    elif i <= ans:\n        break\n\nif len(s)==2:\n    ans = 2\nprint(ans)", "s = list(input())\n\nwhile len(s) != 0:\n  s.pop()\n  if len(s)%2 == 0 and s[:len(s)//2] == s[len(s)//2:]:\n    print(len(s))\n    break", "s=input()\nfor i in range(len(s)-1,-1,-1):\n    if i%2==0 and s[:i//2]==s[i//2:i]:\n        print(i)\n        break", "import sys\nS = input()\n\nfor i in range(1, len(S)):\n  s = S[:-i]\n  l = len(s) // 2\n  if s[:l] == s[l:]:\n    print((len(s)))\n    return\n", "# \u611a\u76f4\ns = input()\nfor i in range(2, len(s), 2):\n    t = s[:len(s) - i]\n    u = t[:len(t) // 2]\n    if u + u == t:\n        print(len(t))\n        return", "s = input()\ns=s[:-1]\nans = 0\nfor i in range(1, len(s)):\n  if i*2 > len(s):\n    break\n  \n  if s[0:i] == s[i:i*2]:\n    ans = i*2\n    \nprint(ans)", "s = input()\nn = len(s)\nn -= 1\nif n % 2:\n    n -= 1\nwhile n > 0:\n    if s[:n//2] == s[n//2:n]:\n        break\n    n -= 2\nprint(n)", "S = list(input())\n\nfor i in range(2, len(S)):\n    miniS = S[0:-i]\n    if len(miniS) % 2 == 0:\n        front = ''.join(miniS[0:len(miniS)//2])\n        back = ''.join(miniS[len(miniS)//2:len(miniS)])\n        if front == back:\n            print(len(miniS))\n            return", "import sys\nS = input()\n\nfor i in range(1, len(S)):\n  s = S[:-i]\n  l = len(s) // 2\n  if s[:l] == s[l:]:\n    print((len(s)))\n    return\n", "s=list(input())\nfor i in range(len(s)):\n    s.pop()\n    if s[:len(s)//2]==s[len(s)//2:]:\n        print(len(s))\n        break", "class mystr:\n    def __init__(self,string):\n        self.value = string\n\n    def isEven(self):\n        l = len(self.value)\n        if (not l & 1) and self.value[:l//2] == self.value[l//2:]:\n            return True\n        else:\n            return False\n\n    def pop(self):\n        l = len(self.value)\n        self.value = self.value[:l-1]\n\ns = mystr(input())\nl = len(s.value)\nfor i in reversed(list(range(l))):\n    s.pop()\n    if s.isEven():\n        print(i)\n        break\n", "S = input()\ns = S\nfor i in range(len(S)):\n    s = s[:-1]\n    if s[:len(s)//2] == s[len(s)//2:]:\n        print(len(s))\n        return", "S: str = input()\n\nfor i in range(len(S)-2, 0, -2):\n    words: str = S[:i]\n    half: int = len(words)//2\n\n    if words[:half] == words[half:]:\n        print((half * 2))\n        break\n", "\nS = input()\nif len(S) %2 == 0 :\n    S = S[:-2]\nelse :\n    S =S[:-1]\nwhile(1) :\n    l = int(len(S)/2)\n\n    if S[:l] == S[l:] :\n        print(len(S))\n        return\n    S = S[:-2]", "s = input()\nwhile True:\n    s = s[:-1]\n    if s[0:len(s)//2] == s[len(s)//2:]:\n        print(len(s))\n        return", "s = input()[:-1]\nwhile True:\n    n = len(s)\n    if n%2 == 0:\n        if s[:n//2] == s[n//2:]:\n            print(n)\n            return\n    s = s[:-1]\n", "S=input()\nS2=S[:(len(S))//2]\nwhile len(S)>=2:\n    S=S[:-2]\n    S2=S2[:-1]\n    if S==S2+S2:\n        print((len(S)))\n        return\n", "s = input()\n\ndef check(a):\n  if len(a) % 2 == 1:\n    return False\n  if a[:len(a)//2] == a[len(a)//2:]:\n    return True\n  return False\n\nfor i in range(len(s)):\n  if check(s[:-1-i]):\n    print(len(s) - i - 1)\n    break", "#n = int(input())\n#a, b = map(int,input().split())\n#l = list(map(int,input().split()))\n#l = [list(map(int,input().split())) for i in range(n)]\ns = input()\nn = len(s)\n\n\ndef isrepeat(s):\n    res = False\n    n = len(s)\n    if s[0:n//2]+s[0:n//2] == s:\n        res = True\n    return res\n\n\nfor delnum in range(1, n):\n    if (n-delnum) % 2 == 0:\n        if isrepeat(s[0:n-delnum]):\n            ans = n-delnum\n            break\nprint(ans)\n", "s = [i for i in input()]\ns = s[:-1]\nwhile s[:len(s)//2] != s[len(s)//2:]:\n  s = s[:-1]\nprint((len(s)))\n", "s=input()\nwhile s:\n  s=s[:-1]\n  n=len(s)//2\n  if s[:n]==s[n:]:\n    print(2*n)\n    break", "S = input()\nlenS = len(S)\nif lenS%2 == 0:\n    S = S[:-1]\n\nans = 0\nfor i in range(1, lenS, 2):\n    idx = -i\n    _S = S[:idx]\n    #print(_S)\n    idx = len(_S)//2\n    if _S[:idx] == _S[idx:]:\n        ans = len(_S)\n        break\nprint(ans)", "s = input()\nfor i in range(1,len(s)):\n    if s[:(len(s)-i)//2] == s[(len(s)-i)//2:-i]:\n        print(len(s)-i)\n        break", "s = input()\nn = len(s)\nfor i in range(2,n,2):\n  if s[0:(n-i)//2] == s[(n-i)//2:n-i]:\n    print(len(s[0:n-i]))\n    break", "def f():\n    s = list(input())\n    for i in range(len(s)):\n        s.pop(-1)\n        s.pop(-1)\n        c = 0\n        for j in range(len(s)//2):\n            if s[j] == s[len(s)//2 + j]:\n                c += 1\n                if c == len(s)//2:\n                    return len(s)\n            else:\n                break\nprint(f())", "S = input()\nfor i in range(len(S)):\n    S = S[0:len(S)-1]\n    if(len(S) % 2 == 0):\n        if((S[0:(len(S)//2)]) == (S[(len(S)//2):len(S)+1])):\n            print(str(len(S)))\n            return", "s=input()\nn=len(s)\n\nfor i in range(1,n):\n  if (n-i)%2==0:\n    m=(n-i)//2\n    if s[0:m]==s[m:n-i]:\n      print(n-i)\n      return", "S=str(input())\nfor i in range(len(S)-1,0,-1):\n    S=S[:i]\n    if len(S)%2==0:\n        x=len(S)//2\n        if S[:x]==S[x:]:\n            print(len(S))\n            break", "s = input()\nfor i in range(1, 101):\n    s_del_end = s[:len(s) - i]\n    len_s_del_end = len(s_del_end)\n    if s_del_end[:len_s_del_end // 2] == s_del_end[len_s_del_end // 2:] and len_s_del_end % 2 == 0:\n        print(len_s_del_end)\n        return\n", "s=input()\ns = list(s)\ndel s[-1]\ndel s[-1]\nwhile True:\n    if s[:len(s)//2] == s[len(s)//2:]:\n        print(len(s))\n        return\n    else:\n        del s[-1]\n        del s[-1]", "s = input()\n\ns = s[::-1]\nif len(s) % 2 ==1:\n    s = s[1:]\nelse:\n    s = s[2:]\n\nwhile len(s) >= 2:\n    half = len(s) // 2\n    if s[:half] == s[half:]:\n        print(len(s))\n        break\n    s = s[2:]", "def judge(Str, Len):\n  if Str[:Len//2] == Str[Len//2:]:\n    return True\n  else:\n    return False\n\nS = input()\nL = len(S)\ni = 2 - (L % 2)\nS = S[:-i]\nL -= i\nif judge(S, L):\n  print(L)\nelse:\n  while not judge(S, L):\n    S = S[:-2]\n    L -= 2\n  print(L)"]