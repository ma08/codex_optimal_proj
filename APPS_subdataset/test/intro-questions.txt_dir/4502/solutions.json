["n = int(input())\na = list(map(int, input().split()))\no = [a[i] for i in range(0,n,2)]\ne = [a[h] for h in range(1,n,2)]\nif n%2 == 0:\n    e.reverse()\n    l = e + o\n    print(*l)\nelse:\n    o.reverse()\n    l = o + e\n    print(*l)", "from collections import deque\n\nn = int(input())\nA = list(map(int, input().split()))\n\nb = deque()\n\nfor i in range(1, n + 1):\n    if i % 2 == 1:\n        b.append(A[i - 1])\n    else:\n        b.appendleft(A[i - 1])\n\nif n % 2 == 1:\n    for i in range(n - 1, -1, -1):\n        print(b[i], end='')\n        if i != 0:\n            print(' ', end='')\nelse:\n    for i in range(n):\n        print(b[i], end='')\n        if i != n - 1:\n            print(' ', end='')", "#!/usr/bin/env python3\nimport queue\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    q = queue.deque()\n    for i in range(n):\n        if i % 2 == 1:\n            q.appendleft(a[i])\n        else:\n            q.append(a[i])\n    if n % 2 == 1:\n        q.reverse()\n    print(*q, sep=\" \")\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\na = list(map(str, input().split()))\nb = []\n'''\nb = [str(a[0])]\nif (n == 1):\n    print(a[0])\n    return\n\na = a[1:]\n\nfor i in a:\n    b.append(str(i))\n    b.reverse()\n'''\n'''\nloop = int(n / 2)\nloop_rest = n - loop\n\nfor i in range(loop):\n    tar_index = (n - 1) - 2 * i\n    tar = a[tar_index]\n\n    b.append(str(tar))\n\n\nif (n % 2 == 0):\n    tar_index = 0\nelse:\n    tar_index = 1\n\nfor i in range(loop_rest):\n    b.append(str(a[tar_index]))\n    tar_index += 2\n'''\n\n# \u4e00\u3064\u304a\u304d\u3067List\u3092\u53d6\u308b\u5834\u5408\u3002\n# a[0::2]\n# 1\u3064\u76ee\uff1a\u8d77\u70b9\u3002\n# 2\u3064\u76ee\uff1aStep\n\n# a[::-1]\n# > -1step,\u3064\u307e\u308aReverse\n\nif n % 2 == 1:\n    print((\" \".join((a[0::2][::-1] + a[1::2]))))\nelse:\n    print((\" \".join((a[1::2][::-1] + a[0::2]))))\n", "n = int(input())\nl = list(map(int,input().split()))\nif n % 2 == 0:\n  a = l[::-2]+ l[0::2]\nelse:\n  a = l[::-2]+ l[1::2]\nprint(*a)", "n = int(input())\na = list(map(int, input().split()))\na1, a2 = [],[]\nfor index, i in enumerate(a, start=1):\n  if index % 2 == 0:\n    a2.append(i)\n  else:\n    a1.append(i)\n\nans = []\nif n % 2 == 0:\n  ans = a2[::-1] + a1\nelse:\n  ans = a1[::-1] + a2\n\nprint(\" \".join(str(i) for i in ans))", "n = int(input())\na = list(map(int,input().split()))\n\nb = [0] * n\n\nif n % 2 == 0 :\n    c = n//2 - 1\nelse :\n    c = n // 2\n\nb[c] = a[0]\n\nfor i in range(1,n) :\n    if i % 2 == 1 :\n        b[c + i] = a[i]\n        c += i\n    else :\n        b[c - i] = a[i]\n        c -= i\n\nif c != 0 :\n    b.reverse()\n    print(*b,sep=\" \")\nelse :\n    print(*b,sep=\" \")\n", "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\n\nans = deque()\nif n%2==0:\n    for i in range(n):\n        if i%2==1:\n            ans.appendleft(a[i])\n        else:\n            ans.append(a[i])\nelse:\n    for i in range(n):\n        if i%2==0:\n            ans.appendleft(a[i])\n        else:\n            ans.append(a[i])\n\nans = list(ans)\nprint((*ans))\n", "n = int(input())\na = list(map(int, input().split()))\n'''\nb = []\n\nfront = False\nfor i in a:\n    if front:\n        b.insert(0, i)\n        front = False\n    else:\n        b.append(i)\n        front = True\n\n\n\n\nif front:\n    b.reverse()\n\n\nb = list(map(str, b))\nb = \" \".join(b)\nprint(b)\n'''\n\n\nfirst = a[0:n:2]\nlast = a[1:n:2]\nlast = last[::-1]\nanswer = last + first\nif n%2 != 0:\n    answer = answer[::-1]\n\nprint(*answer, sep=\" \")", "from collections import deque\nn = int(input())\na = list(map(int,input().split()))\nans = deque()\ncheck = n % 2\nfor i in range(len(a)):\n  if (i + check) % 2 == 0:\n    ans.append(a[i])\n  else:\n    ans.appendleft(a[i])\nprint(*ans)", "from collections import deque\n\nb=deque()\n\nn=int(input())\na=[int(i) for i in input().split()]\n\nfor i in range(n):\n    if i%2==0:\n        b.append(a[i])\n    else:\n        b.appendleft(a[i])\nb=list(b)\n\nif n%2==1:\n    b=b[::-1]\nb=[str(i) for i in b]\n\nprint((\" \".join(b)))\n", "import math\nfrom math import gcd,pi,sqrt\nINF = float(\"inf\")\n\nimport sys\nsys.setrecursionlimit(10**6)\nimport itertools\nfrom collections import Counter,deque\ndef i_input(): return int(input())\ndef i_map(): return list(map(int, input().split()))\ndef i_list(): return list(i_map())\ndef i_row(N): return [i_input() for _ in range(N)]\ndef i_row_list(N): return [i_list() for _ in range(N)]\ndef s_input(): return input()\ndef s_map(): return input().split()\ndef s_list(): return list(s_map())\ndef s_row(N): return [s_input for _ in range(N)]\ndef s_row_str(N): return [s_list() for _ in range(N)]\ndef s_row_list(N): return [list(s_input()) for _ in range(N)]\n\nimport string\n\ndef main():\n    n = i_input()\n    a = i_list()\n    even = []\n    odd = []\n    for i,k in enumerate(a):\n        if i%2==0:\n            even.append(k)\n        else:\n            odd.append(k)\n\n    even.reverse()\n    even.extend(odd)\n    if n%2==0:\n        even.reverse()\n    print((\" \".join(map(str, even))))\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from collections import deque\nN = int(input())\nA = list(map(int, input().split()))\ndeq = deque()\nfor i in range(N):\n  if i % 2 == 0:\n    deq.appendleft(A[i])\n  else:\n    deq.append(A[i])\nif N % 2 == 0:\n  for i in reversed(range(N)):\n    print(deq[i],end=\" \")\nelse:\n  for i in range(N):\n    print(deq[i],end=\" \")", "import collections\nN = int(input())\nlsa = list(map(str,input().split()))\nlsb = collections.deque()\nif N%2 == 0:\n    for i in range(N):    \n        if i % 2 == 0:\n            lsb.append(lsa[i])\n        else:\n            lsb.appendleft(lsa[i])\nif N%2 == 1:\n    for i in range(N):\n        if i % 2 == 1:\n            lsb.append(lsa[i])\n        else:\n            lsb.appendleft(lsa[i])\n\nprint(' '.join(lsb))", "n = int(input())\nA = list(map(int, input().split()))\nb = [0]*n\nif n % 2 == 0:\n    k = 1\nelse:\n    k = -1\nindex_= int(n/2)\nfor i in range(n):\n    index_ += i * k\n    b[index_] = A[i]\n    k *= -1\nprint(*b)", "n=int(input())\na=list(map(int,input().split()))\nans=[]\nif n%2==1:\n    i=n\n    while i>=1:\n        ans.append(str(a[i-1]))\n        i-=2\n    i=2\n    while i<=n:\n        ans.append(str(a[i-1]))\n        i+=2\n    print(\" \".join(ans))\nelse:\n    i = n\n    while i >= 1:\n        ans.append(str(a[i - 1]))\n        i -= 2\n    i = 1\n    while i <= n:\n        ans.append(str(a[i - 1]))\n        i += 2\n    print(\" \".join(ans))", "from collections import deque\nfrom typing import List\n\n\ndef main():\n    n = int(input())\n    v = input().split(\" \")\n    print((*pp(n, v)))\n\n\ndef pp(n: int, v: List[str]) -> List[str]:\n    x = []\n    y = deque([])\n\n    if n % 2 == 0:\n        for i in range(n):\n            if i % 2 == 0:\n                y.append(v[i])\n            else:\n                x.append(v[i])\n    else:\n        for i in range(n):\n            if i % 2 == 0:\n                x.append(v[i])\n            else:\n                y.append(v[i])\n\n    ret = []\n    for i in range(len(x)):\n        ret.append(x.pop())\n\n    for i in range(len(y)):\n        ret.append(y.popleft())\n\n    return ret\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\na = list(map(int, input().split()))\n\nif n % 2 == 0:\n    for i in range(n):\n        if i < int(n / 2):\n            print(a[n - 2 * i - 1],'', end = '')\n        else:\n            print(a[2 * i - n],'', end = '')\nelse:\n    for i in range(n):\n        if i <= n // 2:\n            print(a[n - 2 * i - 1],'', end = '')\n        else:\n            print(a[2 * i - n],'', end = '')\nprint()\n", "n=int(input())\na=list(map(int,input().split()))\nodd=[]\neven=[]\nif n%2==0:\n  m=n//2\n  for i in range(m):\n    odd.append(a[n-1-2*i])\n    even.append(a[2*i])\n  print(*(odd+even))\nelse:\n  m=n//2\n  for i in range(m):\n    odd.append(a[n-1-2*i])\n    even.append(a[n-2-2*i])\n  even.reverse()\n  odd=odd+[a[0]]\n  print(*(odd+even))", "from collections import deque\n\n\ndef solve(a):\n    ans = deque()\n\n    for i, aa in enumerate(a):\n        if i % 2 == 0:\n            ans.append(str(aa))\n        else:\n            ans.appendleft(str(aa))\n\n    if len(a) % 2 == 1:\n        ans.reverse()\n\n    return list(ans)\n\n\ndef __starting_point():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print((' '.join(solve(a))))\n\n__starting_point()", "n,a=int(input()),list(map(int,input().split()))\nprint(*[a[1::2][::-1]+a[::2],a[::2][::-1]+a[1::2]][n%2],sep=' ')", "from collections import deque\n\nn = int(input())\na = deque(list(map(int, input().split())))\nb = deque() if n % 2 == 0 else deque([a.popleft()])\nfor _ in range(n // 2):\n    b.append(a.popleft())\n    b.appendleft(a.popleft())\nprint(*b)", "n = int(input())\na_list = [int(x) for x in input().split()]\nprint(*(a_list[n-1::-2] + a_list[n % 2::2]))", "n = int(input())\na = list(map(int, input().split()))\n\na_even = a[0::2]\na_odd  = a[1::2] \n\n# even\nif (n - 1) % 2 == 0: # 0-(n-1)\u306e\u5b9f\u65bd\u306a\u306e\u3067(n-1)\u306e\u5076\u5947\u3092\u5224\u5b9a\n    b = a_even.copy()\n    b.reverse()\n    b = b + a_odd\n# odd\nelse:\n    b = a_odd.copy()\n    b.reverse()\n    b = b + a_even\n\nb = list(map(str, b))\nprint(' '.join(b))", "#https://atcoder.jp/contests/abc066/tasks/arc077_a\nN = int(input())\nN_List = list(map(str,input().split()))\nif N % 2 == 0:\n    ans = ' '.join(reversed(N_List[1::2])) + ' ' + ' '.join(N_List[::2])\nelse:\n    ans = ' '.join(reversed(N_List[::2])) + ' ' + ' '.join(N_List[1::2])\n\nprint(ans)", "N = int(input())\nA = list(map(int,input().split()))\n\nfrom collections import deque\nB = deque([])\n\nrev = False\n\nfor i in range(N):\n  if not rev:\n    B.append(A[i])\n  else:\n    B.appendleft(A[i])\n  rev ^= True\n  \nif rev:\n  B = list(B)[::-1]\n    \nprint((*B))\n", "import collections\n\ndef f(myList):\n    ans = ''\n    if len(myList)%2==0:\n        for i in range(len(myList)):\n            ans += str(myList[i]) + ' '\n    else:\n        for i in range(len(myList)):\n            ans += str(myList[-(i+1)]) + ' '\n    return ans[:-1]\n\nn = int(input())\na = list(map(int,input().split()))\nb = collections.deque()\nfor i in range(n):\n    if i%2==0:\n        b.append(a[i])\n    else:\n        b.appendleft(a[i])\nprint((f(b)))\n", "from collections import deque\nn = int(input())\nA = list(map(int, input().split()))\nB = deque()\n\nfor i in range(n):\n    if i%2 == 0:\n        B.append(A[i])\n    else:\n        B.appendleft(A[i])\nB = list(B)        \nif n%2 != 0:\n    B = B[::-1]\nprint((*B))\n\n", "n = int(input())\na = list(map(int, input().split()))\nfrom collections import deque\nd = deque()\n\n\nif len(a) %2 == 0:\n    d.extend(a[::2])\n    d.extendleft(a[1::2])\nelse:\n    d.extend(a[1::2])\n    d.extendleft(a[::2])\nprint(*list(d))", "from collections import deque\nn = int(input())\na = list(map(int,input().split()))\nb = deque()\nfor i in range(n):\n  if i%2==0:\n    b.append(a[i])\n  else:\n    b.appendleft(a[i])\nif n%2 ==0:\n  print(*list(b))\nelse:\n  print(*list(b)[::-1])", "n = int(input())\nL = list(map(int, input().split()))\n\nif n % 2 == 0:\n    A = L[n-1::-2] + L[::2]\nelse:\n    A = L[n-1::-2] + L[1::2]\n \nprint(*A)", "n = int(input())\na = list(map(int, input().split()))\n\nodd, even = a[::2], a[1::2]\n\nif n % 2 == 0:\n    ans = even[::-1] + odd\nelse:\n    ans = odd[::-1] + even\n\nprint(*ans)", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n#\n# FileName: \tC_fix\n# CreatedDate:  2020-10-08 14:55:40 +0900\n# LastModified: 2020-10-08 15:22:52 +0900\n#\n\n\nimport os\nimport sys\n# import numpy as np\n# import pandas as pd\n\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    i = N-1\n\n    if N % 2 == 1:\n        while i < N:\n            if i == N-1:\n                print(\"{}\".format(A[i]), end='')\n            else:\n                print(\" {}\".format(A[i]), end='')\n            if i == 0:\n                i += 1\n                continue\n            if i % 2 == 0:\n                i -= 2\n            else:\n                i += 2\n\n    else:\n        while i < N:\n            if i == N-1:\n                print(\"{}\".format(A[i]), end='')\n            else:\n                print(\" {}\".format(A[i]), end='')\n            if i == 1:\n                i -= 1\n                continue\n            if i % 2 == 0:\n                i += 2\n            else:\n                i -= 2\n    print()\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys \nfrom collections import deque\nN = int(input())\nA = list(map(int, input().split()))\n\n\nif N == 1:\n    print((A[0]))\n    return\n\nmae = deque()\nusiro = deque()\n\n#0\u306e\u6642\u306b\u524d 1\u306e\u6642\u306b\u5f8c\u308d\nFlag = 0\n\nfor i in reversed(list(range(0,N,1))):\n    \n    if Flag == 0: # \u524d\u306e\u6642\n        mae.append(str(A[i]))\n        mae.append(\" \")\n        Flag = 1\n    else:\n        usiro.insert(0,str(A[i]))\n        usiro.appendleft(\" \")\n        Flag = 0\n\nmoziretu = (mae + usiro)\ndel moziretu[((len(moziretu))//2)]\nmoziretu = ''.join(moziretu)\nprint(moziretu)\n  \n  \n\n\n", "n = int(input())\na = list(map(int,input().split()))\nb = []\nif n%2==0:\n    for i in range(n//2):\n        b.append(a[n-1-2*i])\n    for i in range(n//2):\n        b.append(a[2*i])\nelse:\n    for i in range((n+1)//2):\n        b.append(a[n-1-2*i])\n    for i in range((n-1)//2):\n        b.append(a[1+2*i])\nprint(*b)", "from collections import deque\nn=int(input())\na=list(map(int,input().split()))\nb=deque()\nfor i in range(n):\n  if i%2:\n    b.appendleft(a[i])\n  else:\n    b.append(a[i])\nif n%2:\n  print(*reversed(list(b)))\nelse:\n  print(*list(b))", "from collections import deque\n\nN=int(input())\na=list(map(int,input().strip().split()))\n\nb=deque()\nfor n in range(N):\n    if n%2==0:\n        b.append(a[n])\n    else:\n        b.appendleft(a[n])\nans=\" \".join(list(map(str,b))) if n%2==1 else \" \".join(list(map(str,list(deque(b))[::-1])))\nprint(ans)", "n = int(input())\na = list(map(int, input().split()))\no = [a[i] for i in range(2,n,2)]\ne = [a[h] for h in range(1,n,2)]\nif n%2 == 0:\n    e.reverse()\n    l = e + [a[0]] + o\n    print(*l)\nelse:\n    o.reverse()\n    l = o + [a[0]] + e\n    print(*l)", "n = int(input())\na = list(map(int, input().split()))\n\nif n % 2 == 0:\n    b = a[n-1::-2] + a[::2]\nelse:\n    b = a[n-1::-2] + a[1::2]\n\nprint(*b)", "#44 C - pushpush AC\nn = int(input())\na = list(map(int,input().split()))\n\nodd = [a[i] for i in range(n) if i%2 == 1] # O(n)\neven = [a[j] for j in range(n) if j%2 == 0]# O(n)\n\nif n%2 == 0:\n    ans = list(reversed(odd)) + even # O(n)\nelse:\n    ans = list(reversed(even)) + odd # O(n)\nprint(*ans)", "n = int(input())\na = list(map(int,input().split()))\nb = []\nif n%2 == 0:\n    for i in range(n-1,0,-2):\n        b.append(a[i])\n    for i in range(0,n-1,2):\n        b.append(a[i])\nelse:\n    for i in range(n-1,-1,-2):\n        b.append(a[i])\n    for i in range(1,n-1,2):\n        b.append(a[i])\nprint(*b)", "N = int(input())\nA = list(map(int,input().split()))\n\nfrom collections import deque\nB = deque([])\n\nrev = False\n\nfor i in range(N):\n  if rev:\n    B.appendleft(A[i])\n  else:\n    B.append(A[i])\n  rev ^= True\n  \nif rev:\n  B = list(B)[::-1]\n    \nprint((*B))\n", "from collections import deque\nn=int(input())\na=[int(x) for x in input().rstrip().split()]\n\nans=deque()\nfor i in range(n):\n  if (i+1)%2==1:\n    ans.appendleft(str(a[i]))\n  else:\n    ans.append(str(a[i]))\n\nans=list(ans)\nif n%2==0:\n  print((*ans[::-1]))\nelse:\n  print((*ans))\n", "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\nb = deque([])\nfor i in range(n):\n    if i % 2 == 0:\n        b.append(a[i])\n    else:\n        b.appendleft(a[i])\nif n % 2 == 0:\n    print(*list(b))\nelse:\n    print(*list(b)[::-1])", "n = int(input())\nA = [a for a in input().split(\" \")]\n\nif n == 1:\n  print(A[0])\nelse:\n  odd = A[::2]\n  even = A[1::2]\n  if n % 2 == 0:\n    even.reverse()\n    print(\" \".join(even + odd))\n  else:\n    odd.reverse()\n    print(\" \".join(odd + even))", "from collections import deque\nn = int(input())\na = list(input().split())\nq = deque()\nfor i in range(n):\n    if n&1:\n        if i&1:\n            q.append(a[i])\n        else:\n            q.appendleft(a[i])\n    else:\n        if i&1:\n            q.appendleft(a[i])\n        else:\n            q.append(a[i])\n\nfor i in q:\n    print(i,end=\" \")", "from collections import deque\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = deque()\nfor i in range(n):\n    if n % 2 == (i + 1) % 2:\n        d.appendleft(a[i])\n    else:\n        d.append(a[i])\n\nprint((*d))\n", "n = int(input())\na = input().split()\n \nif n % 2 == 1:\n    print(\" \".join((a[0::2][::-1] + a[1::2])))\nelse:\n    print(\" \".join((a[1::2][::-1] + a[0::2])))", "N = int(input())\na = list(map(int,input().split()))\n\nb = [0]*N \n\nif N % 2 == 0:\n    even = N//2\n    odd = even - 1\n    for i in range(N):\n        if i % 2 == 0:\n            b[even] = str(a[i])\n            even += 1\n        else:\n            b[odd] = str(a[i])\n            odd -= 1\nelse:\n    even = N//2\n    odd = even + 1\n    for i in range(N):\n        if i % 2 == 0:\n            b[even] = str(a[i])\n            even -= 1\n        else:\n            b[odd] = str(a[i])\n            odd += 1\n\nprint((' '.join(b)))\n", "n=int(input())\na=list(map(int,input().split()))\n\nodd,even=a[::2],a[1::2]\n\nif n%2==0:\n  ans=even[::-1]+odd\nelse:\n  ans=odd[::-1]+even\n\nprint(*ans)", "N = int(input())\nA = list(map(int,input().split()))\n\n# 0\n# 1, 0\n# 2, 0, 1\n# 3, 1, 0, 2\n# 4, 2 ,0, 1, 3\n\nans = None\nif N % 2 == 1:\n  ans = A[::2][::-1] + A[1::2]\nelse:\n  ans = A[1::2][::-1] + A[::2]\nprint(*ans)", "N=int(input())\nA=list(map(int,input().split()))\nprint(*A[::-2],*A[N%2::2])", "from collections import deque\n\nn = int(input())\nA = list(map(int, input().split()))\n\ndeq = deque()\nfor i in range(n):\n    if i%2==0:\n        deq.appendleft(A[i])\n    else:\n        deq.append(A[i])\nif n%2==0:\n    for i in reversed(range(n)):\n        print(deq[i],end=\" \")\nelse:\n    for i in range(n):\n        print(deq[i],end=\" \")", "from collections import deque\n\n\nN = int(input())\nAS = [int(i) for i in input().split()]\n\nb = deque()\n\nx = 0 if len(AS) % 2 == 0 else 1\n\nfor i, a in enumerate(AS):\n  if i % 2 == x:\n    b.append(str(a))\n  else:\n    b.appendleft(str(a))\n\nprint((' '.join(list(b))))\n", "n = int(input())\na = list(map(int,input().split()))\n\nq = a[::2]\np = a[1::2]\n\nif n%2 == 0:\n  print(*p[::-1],*q)\nelse:\n  print(*q[::-1],*p)", "n,a=int(input()),list(map(int,input().split()))\nprint(*[a[1::2][::-1]+a[::2],a[0::2][::-1]+a[1::2]][n%2],sep=' ')", "n = int(input())\na = list(map(int, input().split()))\n\nb = []\nif n%2 == 1:\n    for i in a[n-1:0:-2]:\n        b.append(\"{0}\".format(i))\n    b.append(str(a[0]))\n    for i in a[1:n:2]:\n        b.append(\"{0}\".format(i))\n\nif n%2 == 0:\n    for i in a[n-1:0:-2]:\n        b.append(\"{0}\".format(i))\n    for i in a[0:n:2]:\n        b.append(\"{0}\".format(i))\n\nprint((' '.join(b)))\n", "from collections import deque\nn = int(input())\na = list(map(int,input().split()))\nb = deque()\nfor i in range(n):\n  if i%2==0:\n    b.append(a[i])\n  else:\n    b.appendleft(a[i])\nif n%2==0:\n  print(*b)\nelse:\n  print(*reversed(b))", "N=int(input())\n*A,=map(int,input().split())\n\nif N%2==0:\n    print(' '.join(map(str,A[1::2][::-1]+A[::2])))\nelse:\n    print(' '.join(map(str,A[::2][::-1]+A[1::2])))", "n = 4\na = [1, 2, 3, 4]\n\nn = int(input())\na = input().split()\n\n\nif n % 2 == 0:\n    y = [a[j] for j in range(1, n, 2)][::-1]\n    z = [a[j] for j in range(0, n, 2)]\n\nelse:\n    y = [a[j] for j in range(0, n, 2)][::-1]\n    z = [a[j] for j in range(1, n, 2)]\n\nprint((\" \".join(map(str, y + z))))\n", "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\nb = deque()\nreverse = 1\nfor i in range(n):\n    if reverse == 1:\n        b.append(a[i])\n        reverse *= -1\n    else:\n        b.appendleft(a[i])\n        reverse *= -1\n\nb_list = list(b)\nif reverse == 1:\n    print(*b_list)\nelse:\n    print(*b_list[::-1])", "n = int(input())\na = list(map(int, input().split()))\nfrom collections import deque\nd = deque()\n\n\nif len(a) %2 == 0:\n    d.extend(a[::2])\n    d.extendleft(a[1::2])\nelse:\n    d.extend(a[1::2])\n    d.extendleft(a[::2])\nprint((*list(d)))\n", "from collections import deque\n\nn = int(input())\na = list(map(int, input().split()))\nb = deque()\nflip = False\nfor i, x in enumerate(a):\n  if flip:\n    b.appendleft(x)\n  else:\n    b.append(x)\n  flip = not flip\n\nif flip:\n  b = list(reversed(b))\nprint(*b)  ", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun Sep 27 02:46:15 2020\n\n@author: liang\n\"\"\"\n\nfrom collections import deque\n\nn = int(input())\nA = [int(x) for x in input().split()]\n\nres = deque()\n\nfor i in range(n):\n    if i % 2 == 0:\n        res.append(A[i])\n    else:\n        res.appendleft(A[i])\n        \nif n % 2 == 1:\n    print(\" \".join(map(str,reversed(res))))\nelse:\n    print(\" \".join(map(str,res)))", "from collections import deque\nn = int(input())\n#a, b, c = map(int, input().split())\nal = list(map(int, input().split()))\n#l = [list(map(int,input().split())) for i in range(n)]\n\nq = deque([])\n\nfor i in range(1, n+1):\n    if i % 2 == 0:\n        q.appendleft(al[i-1])\n    else:\n        q.append(al[i-1])\n\nansl = list(q)\nansl = ansl[::-1] if n % 2 != 0 else ansl\n\nprint(*ansl, sep=\" \")\n", "from collections import deque\n\nn = int(input())\na_s = list(map(int, input().split()))\n\nd = deque()\n\nfor i in range(n):\n    if i % 2 == 0:\n        d.append(a_s[i])\n    else:\n        d.appendleft(a_s[i])\n\nif n%2==1:\n    d.reverse()\n\nprint((' '.join(map(str, d))))\n", "from collections import deque\nfrom typing import List\n\n\ndef main():\n    n = int(input())\n    v = input().split(\" \")\n    print((*pp(n, v)))\n\n\ndef pp(n: int, v: List[str]) -> List[str]:\n    x = []\n    y = deque([])\n\n    if n % 2 == 0:\n        for i in range(n):\n            if i % 2 == 0:\n                y.append(v[i])\n            else:\n                x.append(v[i])\n    else:\n        for i in range(n):\n            if i % 2 == 0:\n                x.append(v[i])\n            else:\n                y.append(v[i])\n\n    x_len = len(x)\n    ret = [\"\"] * (x_len + len(y))\n    for i in range(x_len):\n        ret[i] = x.pop()\n\n    for i in range(len(y)):\n        ret[x_len + i] = y.popleft()\n\n    return ret\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\na = list(map(int,input().split()))\n\nb = [-1] * n\nl = 0\nr = n-1\nfor i in range(n-1, -1, -1):\n    if i % 2:\n        b[l] = a[i]\n        l += 1\n    else:\n        b[r] = a[i]\n        r -= 1\n\nif n % 2:\n    b.reverse()\nb = [str(i) for i in b]\nprint(' '.join(b))", "n=int(input())\na=list(input().split())\nfrom collections import deque\nb=deque()\nif n%2==0:\n    for i in range(n):\n        if i%2==0:\n            b.append(a[i])\n        else:\n            b.appendleft(a[i])\nelse:\n    for i in range(n):\n        if i%2==0:\n            b.appendleft(a[i])\n        else:\n            b.append(a[i])\nB=[]\nfor i in range(n):\n    B.append(b.popleft())\nprint(\" \".join(B))", "'''\nCreated on 2020/08/28\n\n@author: harurun\n'''\ndef main():\n  from collections import deque\n  import sys\n  pin=sys.stdin.readline\n  pout=sys.stdout.write\n  perr=sys.stderr.write\n  \n  n=int(pin())\n  a=list(map(int,pin().split()))\n  b=deque([])\n  if n%2==0:\n    for i in range(n):\n      if i%2==0:\n        b.append(a[i])\n      else:\n        b.appendleft(a[i])\n  else:\n    for j in range(n):\n      if j%2==0:\n        b.appendleft(a[j])\n      else:\n        b.append(a[j])\n  for k in range(n):\n    pout(str(b[k]))\n    if k!=n-1:\n      pout(\" \")\n  pout(\"\\n\")\n  return \nmain()\n", "n = int(input())\na = [int(x) for x in input().split()]\nb = []\n\nif n % 2 == 0:\n  i = n-1\n  while i >= 0:\n    b.append(a[i])\n    i -= 2\n  i = 0\n  while i < n:\n    b.append(a[i])\n    i += 2\nelse:\n  i = n-1\n  while i >= 0:\n    b.append(a[i])\n    i -= 2\n  i = 1\n  while i < n:\n    b.append(a[i])\n    i += 2\n\nb = [str(x) for x in b]\nprint(\" \".join(b))", "n = int(input())\na = [ int(x) for x in input().split() ]\n\nl = []\nif n % 2 == 1:\n    i = n-1\n    while i >= 0:\n        l.append(a[i])\n        i -= 2\n\n    j = 1\n    while j < n:\n        l.append(a[j])\n        j += 2\nelse:\n    i = n-1\n    while i >= 0:\n        l.append(a[i])\n        i -= 2\n\n    j = 0\n    while j < n:\n        l.append(a[j])\n        j += 2\n\nprint((' '.join(map(str, l))))\n", "n = int(input())\na = list(map(int, input().split()))\n\nodd_index = []\neven_index = []\nfor i in range(n):\n    if (i + 1) % 2 == 1:\n        odd_index.append(a[i])\n    else:\n        even_index.append(a[i])\n\nif n % 2 == 1:\n    res = odd_index[::-1] + even_index\nelse:\n    res = even_index[::-1] + odd_index\n\nprint((*res))\n", "from collections import deque\nwith open(0) as f:\n    n, *a = map(int, f.read().split())\nb = deque()\nfor idx, value in enumerate(a):\n    if (idx & 1) ^ (n & 1):\n        b.appendleft(value)\n    else:\n        b.append(value)\nprint(*b)", "n = int(input())\na_list = [int(x) for x in input().split()]\nif n % 2 == 0:\n    b_list = a_list[n-1::-2] + a_list[0::2]\nelse:\n    b_list = a_list[n-1::-2] + a_list[1::2]\nprint(*b_list)", "def main():\n    n = int(input())\n    a_lst = list(map(int, input().split()))\n    lst1 = []\n    lst2 = []\n\n    if n % 2 == 0:\n        for i in range(n // 2):\n            lst1.append(a_lst[-1 - i * 2])\n        for i in range(n // 2):\n            lst2.append(a_lst[i * 2])\n\n    else:\n        for i in range(n // 2):\n            lst1.append(a_lst[-1 - i * 2])\n        lst2.append(a_lst[0])\n        for i in range(n // 2):\n            lst2.append(a_lst[1 + i * 2])\n\n    lst = lst1 + lst2\n    ans = ''\n    for i in range(n - 1):\n        ans += '{} '.format(lst[i])\n    ans += '{}'.format(lst[-1])\n    print(ans)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\na_list = [int(x) for x in input().split()]\nb = []\nc = []\nfor i, a in enumerate(a_list):\n    if i % 2 == 0:\n        b.append(a)\n    else:\n        c.append(a)\nif n % 2 == 0:\n    d = list(reversed(c)) + b\nelse:\n    d = list(reversed(b)) + c\nprint(*d)", "n = int(input())\na_list = [int(x) for x in input().split()]\nprint(*(a_list[::-2] + a_list[n&1::2]))", "# coding: utf-8\nimport math\nfrom collections import deque\nn = int(input())\n#x, y = map(int,input().split())\nA = list(map(int,input().split()))\nans = 0\nB = deque()\nif n%2==0:\n    for i in range(n):\n        a=str(A[i])\n        if i%2==1:\n            B.appendleft(a)\n        else:\n            B.append(a)\nif n%2==1:\n    for i in range(n):\n        a=str(A[i])\n        if i%2==0:\n            B.appendleft(a)\n        else:\n            B.append(a)\nprint(' '.join(B))", "n,a=int(input()),list(map(int,input().split()))\nb=[a[1::2][::-1]+a[::2],a[0::2][::-1]+a[1::2]][n%2]\nprint(*b,sep=' ')", "from collections import deque\nwith open(0) as f:\n    n, *a = map(int, f.read().split())\nb = deque()\nfor idx, value in enumerate(a):\n    if (idx & 1) ^ (n & 1):\n        b.appendleft(value)\n    else:\n        b.append(value)\nprint(*b)", "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\nb = deque()\n\nfor i in range(n):\n    if i%2 == 0:\n        b.append(a[i])\n    else:\n        b.appendleft(a[i])\nif n%2 == 1:\n    b.reverse()\nprint(*b, sep=' ')\n", "n = int(input())\na = list(map(int,input().split()))\nb = []\nfor i in range(n):\n  b.append(0)\nk = 0\nif(n%2==1):\n  k = (n-1)//2\n  m = -1\nelse:\n  k = n//2\n  m = 1\nfor i in range(n):\n  if(i%2==0):\n    b[k+m*i//2]=a[i]\n  else:\n    b[k-m*(i+1)//2]=a[i]\nans = \"\"\nfor i in range(n):\n  ans += str(b[i])+\" \"\nprint(ans)  \n   \n \n\n", "N=int(input())\nA=list(map(int,input().split()))\nprint(*A[::-2],*A[N%2::2])", "from collections import deque\n\nn = int(input())\na = list(map(int, input().split()))\nb = deque()\n\nfor i in range(n):\n    if i % 2 == 0:\n        b.append(a[i])\n    else:\n        b.appendleft(a[i])\n\nif n % 2 == 1:\n    b.reverse()\n\nprint((\" \".join(map(str, b))))\n", "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n, 0, -2):\n    b.append(a[i - 1])\nfor j in range(i % 2, n, +2):\n    b.append(a[j])\nprint((*b))\n", "n = int(input())\nla = list(map(int, input().split()))\nl1 = []\nl2 = []\nfor i in range(n):\n    if i % 2 == 0:\n        l1.append(la[i])\n    else:\n        l2.append(la[i])\n\nif n % 2 == 0:\n    for i in reversed(l2):\n        print(i, end=' ')\n    for i in l1:\n        print(i, end=' ')\nelse:\n    for i in reversed(l1):\n        print(i, end=' ')\n    for i in l2:\n        print(i, end=' ')", "from collections import deque\nn,a,b=int(input()),deque(map(int,input().split())),deque()\nfor i in range(n):\n  if n%2==0:\n    if i%2==0:\n      b.append(a[i])\n    else:\n      b.appendleft(a[i])\n  else:\n    if i%2==0:\n      b.appendleft(a[i])\n    else:\n      b.append(a[i])\nprint(*b,sep=' ')", "n=int(input())\na=list(map(str,input().split()))\nb,c=[],[]\nif n%2==0:\n    for i in range(n):\n        if i%2==0:\n            b.append(a[i])\n        else:\n            c.append(a[i])\n    c.reverse()\nelse:\n    for i in range(n):\n        if i%2==1:\n            b.append(a[i])\n        else:\n            c.append(a[i])\n    c.reverse()\nprint(\" \".join(c+b))", "from collections import deque\nimport sys\n\n\nstdin = sys.stdin\ndef ns(): return stdin.readline().rstrip()\ndef ni(): return int(stdin.readline().rstrip())\ndef nm(): return list(map(int, stdin.readline().split()))\ndef nl(): return list(map(int, stdin.readline().split()))\n\n\ndef main():\n    n = ni()\n    A = nl()\n    A = deque(A)\n    B = deque()\n    if n % 2 == 0:\n        while A:\n            B.append(A.popleft())\n            B.appendleft(A.popleft())\n        B = list(B)\n        print((*B))\n    else:\n        while len(A) != 1:\n            B.append(A.popleft())\n            B.appendleft(A.popleft())\n        B.append(A.popleft())\n        B = list(B)[::-1]\n        print((*B))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\nA = list(map(int,input().split()))\n\n# 0\n# 1, 0\n# 2, 0, 1\n# 3, 1, 0, 2\n# 4, 2 ,0, 1, 3\n\nfront = []\nback = []\n\nfor i in range(N):\n  if i % 2 == 0:\n    back.append(A[i])\n  else:\n    front.append(A[i])\n    \nans = None\nif N % 2 == 0:\n  ans = front[::-1] + back\nelse:\n  ans = back[::-1] + front\n  \nprint(*ans)", "n = int(input())\naa = list(map(int, input().split()))\nif n % 2 == 0:\n  a = aa[n-1:0:-2]+aa[0:n-1:2]\nelse:\n  a = aa[n-1::-2]+aa[1:n-1:2]\nprint(*a)", "n=int(input())\na=list(map(int,input().split()))\n\nif n%2==0:\n    S=a[-1::-2]+a[::2]\n    for x in S:\n        print(x,end=' ')\nelse:\n    S=a[-1::-2]+a[1::2]\n    for x in S:\n        print(x,end=' ')\nprint()\n", "n = int(input())\nA = list(input().split())\n\nif (n - 1) % 2 == 0:\n  top = [\"\"] * ((n - 1) // 2)\n  bottom = [\"\"] * ((n - 1) // 2)\n    \n  t = (n - 1) // 2 - 1\n  b = 0\n  for i in range(1,n):\n    if i % 2 == 1:\n      bottom[b] = A[i]\n      b += 1\n    else:\n      top[t] = A[i]\n      t -= 1\nelse:\n  top = [\"\"] * ((n - 1) // 2 + 1)\n  bottom = [\"\"] * ((n - 1) // 2)\n  \n  t = (n - 1) // 2\n  b = 0\n  \n  for j in range(1,n):\n    if j % 2 == 1:\n      top[t] = A[j]\n      t -= 1\n    else:\n      bottom[b] = A[j]\n      b += 1\n      \nprint(*(top + [A[0]] + bottom))", "n=int(input())\na=list(map(int,input().split()))\n\neven = [a[i] for i in range(1,n,2)]\nodd = [a[i] for i in range(0,n,2)]\n\nif n % 2 == 0:\n  print(*(even[::-1]+odd))\nelse:\n  print(*(odd[::-1]+even))", "from collections import deque\nn = int(input())\na = list(map(int,input().split()))\nb_1 = deque()\nb_2 = deque()\nswitch = 0\nfor i in a:\n    if switch == 0:\n        b_1.append(i)\n        b_2.appendleft(i)\n        switch = 1\n    else:\n        b_2.append(i)\n        b_1.appendleft(i)\n        switch = 0\nb_1 = list(b_1)\nb_2 = list(b_2)\nif switch == 0:\n    print((' '.join(list(map(str,b_1)))))\nelse:\n    print((' '.join(list(map(str,b_2)))))\n"]