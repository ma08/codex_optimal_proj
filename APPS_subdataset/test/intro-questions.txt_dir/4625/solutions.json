["from string import ascii_lowercase\n\nt = int(input())\n\nfor _ in range(t):\n    n, m = [int(x) for x in input().split()]\n\n    s = input()\n    count = {x : 0 for x in ascii_lowercase}\n    errors = [int(x) for x in input().split()]\n\n    errors = sorted(errors)\n\n    e_idx = 0\n    for j, c in enumerate(s):\n        while e_idx < m and errors[e_idx] <= j:\n            e_idx += 1\n        count[c] += (m - e_idx) + 1\n\n    print(*[count[c] for c in ascii_lowercase])\n", "for eps in range(int(input())):\n    n, m = map(int, input().split())\n    s = input()\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = [0] * 26\n    j = 0\n    for i in range(n):\n        while j < m and i >= a[j]:\n            j += 1\n        ans[ord(s[i]) - ord(\"a\")] += m - j + 1\n    for elem in ans:\n        print(elem, end=\" \")\n    print()", "from sys import stdin\n\n\ndef solve():\n    n, m = list(map(int, input().split()))\n    s = input()\n    ml = list(map(int, input().split()))\n    ml.append(n)\n    ml.sort(reverse=True)\n    prev = 0\n    ans = [0] * 26\n    for i in range(m, -1, -1):\n        for j in range(prev, ml[i]):\n            ans[ord(s[j]) - ord('a')] += i + 1\n        prev = ml[i]\n    print(*ans)\n\n\nfor i in range(int(input())):\n    solve()\n", "import sys\ninput = sys.stdin.readline\n\n\nalph = \"abcdefghijklmnopqrstuvwxyz\"\nto_int = {v: i for i, v in enumerate(alph)}\n\nt = int(input())\nfor _ in range(t):\n    n, m = list(map(int, input().split()))\n    s = input()\n    p = list(map(int, input().split()))\n    num = [[0] * (n + 1) for i in range(26)]\n    for i in range(n):\n        tmp = to_int[s[i]]\n        for j in range(26):\n            if tmp == j:\n                num[j][i + 1] = num[j][i] + 1\n            else:\n                num[j][i + 1] = num[j][i]\n    ans = [0] * 26\n    for i in range(len(ans)):\n        for j in p:\n            ans[i] += num[i][j]\n        ans[i] += num[i][-1]\n    print(*ans)", "ans = []\nempt = [0 for i in range(26)]\ns = 'abcdefghijklmnopqrstuvwxyz'\npos = {s[i]: i for i in range(26)}\n\nfor t in range(int(input())):\n\t[n, m] = [int(i) for i in input().split()]\n\tseq = input()\n\terr = [(int(i) - 1) for i in input().split()]\n\tfreq = {}\n\tfor i in err:\n\t\tif i in freq:\n\t\t\tfreq[i] += 1\n\t\telse:\n\t\t\tfreq[i] = 1\n\n\tdp = [0 for i in range(n)]\n\tdp[n - 1] = 1\n\tfor i in range(n - 2, -1, -1):\n\t\tdp[i] = dp[i + 1]\n\t\tif i in freq:\n\t\t\tdp[i] += freq[i]\n\ta = empt + []\n\tfor i in range(n):\n\t\ta[pos[seq[i]]] += dp[i]\n\tans.append(' '.join([str(i) for i in a]))\n\nprint('\\n'.join(ans))\n", "t=int(input())\nwhile(t):\n        t-=1\n        co=[0]*26\n        n,m=list(map(int,input().split()))\n        reco=[0]*n\n        s=input()\n        a=list(map(int,input().split()))\n        for i in range(m):\n                reco[0]+=1\n                reco[a[i]]+=-1\n        reco[0]+=1\n        for i in range(1,n):\n                reco[i]=reco[i]+reco[i-1]\n        for i in range(n):\n                z=ord(s[i])-97\n                co[z]+=reco[i]\n        print(*co)\n", "t=int(input())\nwhile t:\n    n,m=map(int,input().split())\n    s=input()\n    p=input().split()\n    for i in range(m):\n        p[i]=int(p[i])\n    p.sort()\n    ls=[]\n    count=0\n    for i in range(m):\n        if(i==0):\n            count+=1\n            if(i==m-1):\n                ls.append([p[i],count])\n        elif(p[i]==p[i-1]):\n            count+=1\n            if(i==m-1):\n                ls.append([p[i],count])\n        else:\n            ls.append([p[i-1],count])\n            count=1\n            if(i==m-1):\n                ls.append([p[i],count])\n    ls.append([n,0])            \n    visited=[1 for i in range(n)]\n    count=m\n    j=0\n    for i in range(n):\n        if(i<ls[j][0]):\n            visited[i]+=count\n        else:\n            count-=ls[j][1]\n            j+=1\n            visited[i]+=count\n    ans=[0 for i in range(26)]\n    for i in range(n):\n        ans[ord(s[i])-97]+=visited[i]\n    print(*ans)\n    t-=1", "import string\n\nfor _ in range(int(input())):\n    n, m = list(map(int, input().split()))\n    s = input()\n    p = list(map(int, input().split())) + [-1]\n\n    d = {c: [0] for c in string.ascii_lowercase}\n\n    for i in s:\n        for c in string.ascii_lowercase:\n            d[c].append(d[c][-1])\n\n        d[i][-1] += 1\n\n    ans = {c: 0 for c in string.ascii_lowercase}\n\n    for i in p:\n        for c in string.ascii_lowercase:\n            ans[c] += d[c][i]\n\n    print(*list(ans.values()))\n", "import sys\ninput = sys.stdin.readline\n\nt=int(input())\n\nfor tests in range(t):\n    n,m=list(map(int,input().split()))\n    S=input().strip()\n    P=list(map(int,input().split()))\n\n    SCORE=[[0]*26 for i in range(n)]\n\n    for i in range(n):\n        for j in range(26):\n            SCORE[i][j]=SCORE[i-1][j]\n            \n        SCORE[i][ord(S[i])-97]+=1\n\n    ANS=[0]*26\n\n    for p in P:\n        for j in range(26):\n            ANS[j]+=SCORE[p-1][j]\n\n    for j in range(26):\n        ANS[j]+=SCORE[-1][j]\n\n    print(*ANS)\n    \n\n    \n", "\nimport math\n\ndef rints():\n    return list(map(int,input().split()))\n\n\nt = int(input())\nfor _ in range(t):\n    n,m = rints()\n    s = input()\n    p = rints()\n    occs = [0] * 26\n    \n    p.sort()\n\n    ai = 0\n    active = [1]*n\n    rem = m+1\n    for pi in p:\n        for i in range(ai,pi):\n            active[i] = rem\n        rem -= 1\n        ai = pi\n\n    for i in range(n):\n        c = ord(s[i]) - ord('a')\n        occs[c] += active[i]\n\n    print(*occs)\n\n", "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n, m = list(map(int, input().split()))\n    s = list([ord(x)-97 for x in input().rstrip()])\n    p = [n] + sorted(map(int, input().split()), reverse=True)\n    ans = [0]*26\n\n    i = 0\n    for i in range(n):\n        while p and p[-1] == i:\n            p.pop()\n        ans[s[i]] += len(p)\n\n    print(*ans)\n"]