["n, q = map(int, input().split())\ns = '!' + input()\n\nnxt = [[n + 1] * (n + 2) for _ in range(26)]\nfor i in range(n - 1, -1, -1):\n    c = ord(s[i + 1]) - 97\n    for j in range(26):\n        nxt[j][i] = nxt[j][i + 1]\n    nxt[c][i] = i + 1\n\nw = [[-1], [-1], [-1]]\nidx = lambda i, j, k: i * 65536 + j * 256 + k\ndp = [0] * (256 * 256 * 256)\ndef calc(fix=None):\n    r = list(map(range, (len(w[0]), len(w[1]), len(w[2]))))\n    if fix is not None: r[fix] = range(len(w[fix]) - 1, len(w[fix]))\n    for i in r[0]:\n        for j in r[1]:\n            for k in r[2]:\n                dp[idx(i, j, k)] = min(nxt[w[0][i]][dp[idx(i - 1, j, k)]] if i else n + 1,\n                                       nxt[w[1][j]][dp[idx(i, j - 1, k)]] if j else n + 1,\n                                       nxt[w[2][k]][dp[idx(i, j, k - 1)]] if k else n + 1)\n                if i == j == k == 0: dp[idx(i, j, k)] = 0\n\nout = []\nfor _ in range(q):\n    t, *r = input().split()\n    if t == '+':\n        i, c = int(r[0]) - 1, ord(r[1]) - 97\n        w[i].append(c)\n        calc(i)\n    else:\n        i = int(r[0]) - 1\n        w[i].pop()\n    req = dp[idx(len(w[0]) - 1, len(w[1]) - 1, len(w[2]) - 1)]\n    out.append('YES' if req <= n else 'NO')\n\nprint(*out, sep='\\n')"]