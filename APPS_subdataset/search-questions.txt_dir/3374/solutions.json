["from math import log\n\ndef compare_powers(*numbers):\n    a,b = map(lambda n: n[1]*log(n[0]), numbers)\n    return (a<b) - (a>b)", "from math import log\ndef compare_powers(n1, n2):\n  val = n2[1] * log(n2[0]) - n1[1] * log(n1[0])\n  return -1 if val < 0 else 1 if val > 0 else 0", "from math import log\n\ndef compare(x, y):\n    if x == y:\n        return 0\n    if x < y:\n        return 1\n    if x > y:\n        return -1\n        \ndef compare_powers(x, y):\n    a, c = x\n    b, d = y\n    x = (c * log(a)) / log(2)\n    y = (d * log(b)) / log(2)\n    return compare(x, y)", "from math import log\ndef compare_powers(n1,n2):\n    a=n1[1]*log(n1[0])\n    b=n2[1]*log(n2[0])\n    if a==b: return 0\n    if a>b: return -1\n    return 1", "from math import log\ndef compare_powers(n1,n2):\n    if   n2[1]*log(n2[0]) > n1[1]*log(n1[0]):  return  1\n    elif n2[1]*log(n2[0]) < n1[1]*log(n1[0]):  return -1\n    else:                                      return  0"]