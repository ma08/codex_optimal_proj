["def compare_versions(ver1,ver2):\n    return [int(i) for i in ver1.split(\".\")] >= [int(i) for i in ver2.split(\".\")]\n", "def compare_versions(version1,version2):\n    from distutils.version import LooseVersion, StrictVersion\n    return LooseVersion(version1) >= LooseVersion(version2)\n", "from distutils.version import LooseVersion\n\ndef compare_versions(version1,version2):\n    return LooseVersion(version1) >= LooseVersion(version2)", "from distutils.version import LooseVersion, StrictVersion\ndef compare_versions(v1,v2):\n    return LooseVersion(v1) >= LooseVersion(v2)", "import itertools\n\ndef compare_versions(v1,v2):\n    p = list(map(int, v1.split('.')))\n    q = list(map(int, v2.split('.')))\n    for i, v in itertools.zip_longest(p, q, fillvalue=0):\n        if i < v:\n            return False\n    return True", "def compare_versions(v1, v2):\n    return [int(n) for n in v1.split(\".\")] >= [int(n) for n in v2.split(\".\")]", "from distutils.version import LooseVersion\n\n\ndef compare_versions(version1, version2):\n    v1 = LooseVersion(version1)\n    v2 = LooseVersion(version2)\n    return v1 >= v2", "def compare_versions(version1, version2):\n    v1 = version1.split('.')\n    v2 = version2.split('.')\n    a = max(len(v1), len(v2))\n    v1.append('0'*abs(len(v1) - a))\n    v2.append('0'*abs(len(v2) - a))\n    if v1[-1] == '':\n        v1.pop(-1)\n    if v2[-1] == '':\n        v2.pop(-1)\n    k = 0\n    for i in v1:\n        if int(i) < int(v2[k]):\n            return False\n        elif int(i) >= int(v2[k]):\n            k += 1\n    return True", "def compare_versions(version1, version2):\n    v1 = map(int, version1.split('.'))\n    v2 = map(int, version2.split('.'))\n    return list(v1) >= list(v2)"]