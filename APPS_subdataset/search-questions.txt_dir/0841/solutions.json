["M = 10 ** 9 + 7\nfor _ in range(int(input())):\n    s,p,m,r = list(map(int, input())),0,1,0\n    for d in reversed(s):\n        p += d * m\n        m = m * 10 % M\n    for d in s:\n        r = (r * m + p) % M\n        p = (p * 10 - (m - 1) * d) % M\n    print(r)", "M = 10 ** 9 + 7\n\nt = int(input())\nfor _ in range(t):\n    s = list(map(int, input()))\n    p, m = 0, 1\n    for d in reversed(s):\n        p += d * m\n        m = m * 10 % M\n    r = 0\n    for d in s:\n        r = (r * m + p) % M\n        p = (p * 10 - (m - 1) * d) % M\n    print(r)\n\n    ", "T=int(input())\r\nm=10**9+7\r\nwhile(T>0):\r\n\r\n    num=list(map(int,input()))\r\n    n=0\r\n    for i in range(len(num)):\r\n        n=(n*10)\r\n        n=(n+num[i])%m\r\n    rs=n\r\n    y=10**(len(num))%m\r\n    for i in range(len(num)-1):\r\n        n=(n*10-(y-1)*num[i])%m\r\n        rs=(rs*(y)+n)%m\r\n    print(rs)\r\n    T-=1", "m=10**9+7\r\nT=int(input())\r\nwhile(T>0):\r\n    num=list(map(int,input()))\r\n    n=0\r\n    for i in range(len(num)):\r\n        n=(n*10)%m\r\n        n=(n+num[i])%m\r\n    rs=n\r\n    y=10**(len(num))%m\r\n    for i in range(len(num)-1):\r\n        n=(n*10-(y-1)*num[i])%m\r\n        rs=(rs*(y)+n)%m\r\n    print(rs)\r\n    T-=1", "M = 10 ** 9 + 7\nfor _ in range(int(input())):\n    s = list(map(int, input()))\n    p, m = 0, 1\n    for d in reversed(s):\n        p += d * m\n        m = m * 10 % M\n    r = 0\n    for d in s:\n        r = (r * m + p) % M\n        p = (p * 10 - (m - 1) * d) % M\n    print(r)", "M = 10 ** 9 + 7\n\nt = int(input())\nfor _ in range(t):\n    s = list(map(int, input()))\n    p, m = 0, 1\n    for d in reversed(s):\n        p += d * m\n        m = m * 10 % M\n    r = 0\n    for d in s:\n        r = (r * m + p) % M\n        p = (p * 10 - (m - 1) * d) % M\n    print(r)", "t = int(input())\r\ndecimal = [1]\r\nmod = 10**9 + 7\r\nfor i in range(10**5 + 1):\r\n    decimal.append((decimal[-1]*10) % mod)\r\n\r\n\r\ndef num(n):\r\n    ans = 0\r\n    length = len(n)\r\n    for i in range(0, length):\r\n        ans += (int(n[i])*decimal[length - i - 1])%mod\r\n\r\n    return ans\r\n\r\n\r\nfor i in range(0, t):\r\n    n = input()\r\n    length = len(n)\r\n    p = (10 ** length)%mod\r\n    p1 = (10 ** (length-1))%mod\r\n    mul = [1]\r\n    for j in range(0, length-1):\r\n        mul.append((mul[-1]*p)%mod)\r\n    value = num(n)\r\n\r\n    ans = 0\r\n    for j in range(length-1, -1, -1):\r\n        temp = (value * mul[j])%mod\r\n        ans += temp\r\n        value = value - int(n[length - 1 - j]) * p1\r\n        value = (value * 10 + int(n[length - 1 - j])) % mod\r\n    print(ans%mod)", "M = 10 ** 9 + 7\n\nt = int(input())\nfor _ in range(t):\n    s = list(map(int, input()))\n    p, m = 0, 1\n    for d in reversed(s):\n        p += d * m\n        m = m * 10 % M\n    r = 0\n    for d in s:\n        r = (r * m + p) % M\n        p = (p * 10 - (m - 1) * d) % M\n    print(r)", "M = 10 ** 9 + 7\r\nt = int(input())\r\nfor _ in range(t):\r\n    s = list(map(int, input()))\r\n    p, m = 0, 1\r\n    for d in reversed(s):\r\n        p += d * m\r\n        m = m * 10 % M\r\n    r = 0\r\n    for d in s:\r\n        r = (r * m + p) % M\r\n        p = (p * 10 - (m - 1) * d) % M\r\n    print(r)", "M = 10 ** 9 + 7\r\n\r\nt = int(input())\r\nfor _ in range(t):\r\n    s = input()\r\n    p, m = 0, 1\r\n    for d in reversed(s):\r\n        p += (ord(d) - 48) * m\r\n        m = m * 10 % M\r\n    r = 0\r\n    for d in s:\r\n        r = (r * m + p) % M\r\n        p = (p * 10 - (m - 1) * (ord(d) - 48)) % M\r\n    print(r)", "from bisect import bisect_right as br\r\nfrom bisect import bisect_left as bl\r\nfrom collections import defaultdict\r\nfrom itertools import combinations\r\nimport functools\r\nimport sys\r\nimport math\r\nMAX = sys.maxsize\r\nMAXN = 10**6+10\r\nMOD = 10**9+7\r\ndef isprime(n):\r\n    n = abs(int(n))\r\n    if n < 2:\r\n        return False\r\n    if n == 2: \r\n        return True    \r\n    if not n & 1: \r\n        return False\r\n    for x in range(3, int(n**0.5) + 1, 2):\r\n        if n % x == 0:\r\n            return False\r\n    return True\r\n\r\ndef mhd(a,b,x,y):\r\n    return abs(a-x)+abs(b-y)\r\n\r\ndef numIN():\r\n    return(map(int,sys.stdin.readline().strip().split()))\r\n\r\ndef charIN():\r\n    return(sys.stdin.readline().strip().split())\r\n\r\nt = [0]*1000010\r\n\r\ndef create(a,n):\r\n\tglobal t\r\n\tfor i in range(n,2*n):\r\n\t\tt[i] = a[i-n]\r\n\tfor i in range(n-1,0,-1):\r\n\t\tt[i] = t[2*i]+t[2*i+1]\r\n\r\n\r\ndef cal(n,k):\r\n\tres = 1\r\n\tc = [0]*(k+1)\r\n\tc[0]=1\r\n\tfor i in range(1,n+1):\r\n\t    for j in range(min(i,k),0,-1):\r\n\t        c[j] = (c[j]+c[j-1])%MOD\r\n\treturn c[k]\r\n\r\n\r\nfor i in range(int(input())):\r\n\tn = int(input())\r\n\ta = str(n)\r\n\tl = len(a)\r\n\tans = n\r\n\tp1 = pow(10,l,MOD)\r\n\tp2 = pow(10,l-1,MOD)\r\n\tfor j in range(l-1):\r\n\t\tn-=(int(a[j])*p2)\r\n\t\tn%=MOD\r\n\t\tn*=10\r\n\t\tn%=MOD\r\n\t\tn+=int(a[j])\r\n\t\tn%=MOD\r\n\t\tans*=p1\r\n\t\tans%=MOD\r\n\t\tans+=n\r\n\t\tans%=MOD\r\n\r\n\tprint(ans)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "t = int(input())\r\nfor _ in range(t):\r\n    s = input()\r\n\r\n    if len(s) == 1:\r\n        print(s)\r\n\r\n    else:\r\n        mod = 10**9+7\r\n        l = len(s)\r\n        curr = 0\r\n        for i in s:\r\n            curr *= 10\r\n            curr += int(i)\r\n            curr %= mod\r\n\r\n        ans = curr\r\n        p1 = 1\r\n        p2 = 1\r\n\r\n        for i in range(l):\r\n            p1 *= 10\r\n            p1 %= mod\r\n\r\n        for i in range(l-1):\r\n            p2 *= 10\r\n            p2 %= mod\r\n\r\n        for i in range(l-1):\r\n            curr -= (p2 * int(s[i])) % mod\r\n            curr *= 10\r\n            curr += int(s[i])\r\n            curr %= mod\r\n            ans *= p1\r\n            ans %= mod\r\n            ans += curr\r\n            ans %= mod\r\n\r\n        print(ans)\r\n", "M = 10 ** 9 + 7\r\n\r\nt = int(input())\r\nfor _ in range(t):\r\n    s = list(map(int, input()))\r\n    p, m = 0, 1\r\n    for d in reversed(s):\r\n        p += d * m\r\n        m = m * 10 % M\r\n    ans = 0\r\n    for d in s:\r\n        ans = (ans * m + p) % M\r\n        p = (p * 10 - (m - 1) * d) % M\r\n    print(ans)", "t=int(input())\r\nmodval=(10**9)+7\r\nfor _ in range(t):\r\n\tval=list(input())\r\n\tinp=0\r\n\tres=0\r\n\tmultiplier=1\r\n\tfor i in val:\r\n\t\tinp=((inp*10)+int(i))%modval\r\n\t\tmultiplier=(multiplier*10)%modval\r\n\tfor i in val:\r\n\t\tres=((res*multiplier)+inp)%modval\r\n\t\tinp=(inp*10 - (multiplier-1)*int(i))%modval\r\n\tprint(res)", "M = 10 ** 9 + 7\r\n\r\nt = int(input())\r\nfor _ in range(t):\r\n    s = list(map(int, input()))\r\n    p, m = 0, 1\r\n    for d in reversed(s):\r\n        p += d * m\r\n        m = m * 10 % M\r\n    r = 0\r\n    for d in s:\r\n        r = (r * m + p) % M\r\n        p = (p * 10 - (m - 1) * d) % M\r\n    print(r)\r\n", "MOD=10**9+7\r\ndef main():\r\n\tt=int(input())\r\n\tfor i in range(t):\r\n\t\ts=list(map(int,input()))\r\n\t\tp,m=0,1\r\n\t\tfor d in reversed(s):\r\n\t\t\tp+=d*m\r\n\t\t\tm=m*10%MOD\r\n\t\tr=0\r\n\t\tfor d in s:\r\n\t\t\tr=(r*m+p)%MOD\r\n\t\t\tp=(p*10-(m-1)*d)%MOD\r\n\t\tprint(r)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nmain()", "M = 10 ** 9 + 7\r\n\r\nt = int(input())\r\nfor _ in range(t):\r\n    s = list(map(int, input()))\r\n    p, m = 0, 1\r\n    for d in reversed(s):\r\n        p += d * m\r\n        m = m * 10 % M\r\n    r = 0\r\n    for d in s:\r\n        r = (r * m + p) % M\r\n        p = (p * 10 - (m - 1) * d) % M\r\n    print(r)\r\n", "from operator import mul\n\nM = 10 ** 9 + 7\nN = 100001\n\np10 = [None] * N\nk = 1\nfor i in range(N):\n    p10[i] = k\n    k = k * 10 % M \n\nt = int(input())\nfor _ in range(t):\n    s = list(map(int, input()))\n    m = p10[len(s)]\n    p = sum(map(mul, reversed(s), p10))\n    r = 0\n    for d in s:\n        r = (r * m + p) % M\n        p = (p * 10 - (m - 1) * d) % M\n    print(r)\n", "from operator import mul\n\nM = 10 ** 9 + 7\nN = 100001\n\np10 = [None] * N\np10[0] = 1\nfor i in range(1, N):\n   p10[i] = p10[i - 1] * 10 % M \n\nt = int(input())\nfor _ in range(t):\n    s = list(map(int, input()))\n    m = p10[len(s)]\n    p = sum(map(mul, reversed(s), p10))\n    r = 0\n    for d in s:\n        r = (r * m + p) % M\n        p = (p * 10 - (m - 1) * d) % M\n    print(r)\n", "M = 10 ** 9 + 7\nN = 100001\n\np10 = [None] * N\np10[0] = 1\nfor i in range(1, N):\n   p10[i] = p10[i - 1] * 10 % M \n\nt = int(input())\nfor _ in range(t):\n    s = list(map(ord, input()))\n    p = sum((x - 48) * y for x, y in zip(reversed(s), p10))\n    m = p10[len(s)]\n    r = 0\n    for d in s:\n        r = (r * m + p) % M\n        p = (p * 10 - (m - 1) * (d - 48)) % M\n    print(r)\n", "from operator import mul\n\nM = 10 ** 9 + 7\nN = 100001\n\np10 = [None] * N\np10[0] = 1\nfor i in range(1, N):\n   p10[i] = p10[i - 1] * 10 % M \n\nt = int(input())\nfor _ in range(t):\n    s = list(map(int, input()))\n    p = sum(map(mul, reversed(s), p10))\n    m = p10[len(s)]\n    r = 0\n    for d in s:\n        r = (r * m + p) % M\n        p = (p * 10 - (m - 1) * d) % M\n    print(r)\n", "M = 10 ** 9 + 7\r\n\r\nt = int(input())\r\nfor _ in range(t):\r\n    s = list(map(int, input()))\r\n    p, m = 0, 1\r\n    for d in reversed(s):\r\n        p += d * m\r\n        m = m * 10 % M\r\n    r = 0\r\n    for d in s:\r\n        r = (r * m + p) % M\r\n        p = (p * 10 - (m - 1) * d) % M\r\n    print(r)\r\n", "M = 10 ** 9 + 7\r\n\r\nt = int(input())\r\nfor _ in range(t):\r\n    s = list(map(int, input()))\r\n    p, m = 0, 1\r\n    for d in reversed(s):\r\n        p += d * m\r\n        m = m * 10 % M\r\n    r = 0\r\n    for d in s:\r\n        r = (r * m + p) % M\r\n        p = (p * 10 - (m - 1) * d) % M\r\n    print(r)\r\n", "T = int(input())\r\nfor i in range(T):\r\n    N = int(input())\r\n    ans = N\r\n    M = N\r\n    L = len(str(N))\r\n    ls = list(str(N))\r\n    key = (10**L)%(10**9+7)\r\n    for i in range(L-1):\r\n        a0 = int(ls[i])\r\n        M = (10*M + a0*(1-key))%(10**9+7)\r\n        ans = (ans*key + M)%(10**9+7)\r\n    print(ans%(10**9+7))\r\n"]