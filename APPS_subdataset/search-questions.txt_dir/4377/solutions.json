["def solve(a, b):\n    alice = sum(i > j for i, j in zip(a, b))\n    bob = sum(j > i for i, j in zip(a, b))\n    \n    if alice == bob:\n        words = 'that looks like a \"draw\"! Rock on!'\n    elif alice > bob:\n        words = 'Alice made \"Kurt\" proud!'\n    else:\n        words = 'Bob made \"Jeff\" proud!'\n    \n    return '{}, {}: {}'.format(alice, bob, words) ", "def solve(a, b):\n    s, n = 0, 0\n    for x,y in zip(a, b):\n        if x>y: n+=1\n        elif x<y: s+=1\n    if s!=n:\n        return f'{n}, {s}: {\"Alice\" if s<n else \"Bob\"} made \"{\"Kurt\" if s<n else \"Jeff\"}\" proud!'\n    return f'{n}, {s}: that looks like a \"draw\"! Rock on!'", "def solve(a, b):\n    sa = sum(1 for x, y in zip(a,b) if x > y)\n    sb = sum(1 for x, y in zip(a,b) if y > x)\n    return '{}, {}: {}'.format(sa, sb, 'that looks like a \"draw\"! Rock on!' if sa == sb else ['Bob made \"Jeff\" proud!', 'Alice made \"Kurt\" proud!'][sa > sb] )", "from operator import gt\nfrom numpy import sign\nresult = {\n    -1:'Bob made \"Jeff\" proud!',\n     0:'that looks like a \"draw\"! Rock on!',\n     1:'Alice made \"Kurt\" proud!'}\n\ndef solve(a, b):\n    alice = sum(map(gt, a, b))\n    bob   = sum(map(gt, b, a))\n    return f'{alice}, {bob}: {result[sign(alice - bob)]}'", "def solve(a, b):\n    x=sum([ 1 for i in range(3) if a[i]>b[i] ])\n    y=sum([ 1 for i in range(3) if a[i]<b[i] ])\n    if x>y:\n        return f'{x}, {y}: Alice made \"Kurt\" proud!'\n    elif x<y:\n        return f'{x}, {y}: Bob made \"Jeff\" proud!'\n    else: return f'{x}, {y}: that looks like a \"draw\"! Rock on!'", "def solve(a, b):\n    A = sum (x > y for x,y in  zip(a,b))\n    B = sum (x < y for x,y in  zip(a,b))\n    winner,name = ('Alice','Kurt') if A > B else ('Bob','Jeff')\n    return '{}, {}: that looks like a \"draw\"! Rock on!'.format(A,B) if A == B \\\n    else '{}, {}: {} made \"{}\" proud!'.format(str(A),str(B),winner,name)", "def solve(a, b):\n    alis = 0\n    bob = 0\n    for i in range(3):\n        if(a[i]>b[i]):\n            alis+=1\n        elif(a[i]<b[i]):\n            bob+=1\n    if(alis==bob):\n        return str(bob)+\", \"+str(alis)+\":\"+' that looks like a \"draw\"! Rock on!'\n    elif(max(alis,bob)==alis):\n        return str(alis)+\", \"+str(bob)+\":\"+' Alice made \"Kurt\" proud!'\n    else:\n        return str(alis)+\", \"+str(bob)+\":\"+' Bob made \"Jeff\" proud!'\n", "def solve(a, b):\n    alice = sum(x > y for x, y in zip(a, b))\n    bob = sum(x < y for x, y in zip(a, b))\n    return (\n        '{}, {}: Alice made \"Kurt\" proud!' if alice > bob else\n        '{}, {}: Bob made \"Jeff\" proud!' if alice < bob else\n        '{}, {}: that looks like a \"draw\"! Rock on!'\n    ).format(alice, bob)", "def solve(a, b):\n    count_A = 0\n    count_B = 0\n    for i in range(len(a)):\n        if a[i] > b[i]:\n            count_A += 1\n        elif a[i] < b[i]:\n            count_B += 1\n    return f'{count_A}, {count_B}: that looks like a \"draw\"! Rock on!'if count_A == count_B else f'{count_A}, {count_B}: Alice made \"Kurt\" proud!'if count_A > count_B else f'{count_A}, {count_B}: Bob made \"Jeff\" proud!'", "def solve(a, b):\n    countA = 0\n    countB = 0\n    for i in range(len(a)):\n        if a[i] > b[i]:\n            countA += 1\n        elif a[i] < b[i]:\n            countB += 1\n    return f'{countA}, {countB}: that looks like a \"draw\"! Rock on!'if countA == countB else f'{countA}, {countB}: Alice made \"Kurt\" proud!' if countA > countB else f'{countA}, {countB}: Bob made \"Jeff\" proud!'", "def solve(a, b):\n    table_score = {'Player1': 0,\n                   'Player2': 0}\n\n    for i, s in enumerate(a):\n        if s > b[i]:\n            table_score['Player1'] += 1\n        if s < b[i]:\n            table_score['Player2'] += 1\n\n    if table_score['Player1'] == table_score ['Player2']:\n        return \"\"\"{0}, {1}: that looks like a \"draw\"! Rock on!\"\"\".format(table_score['Player1'], table_score['Player2'])\n\n    if table_score['Player1'] > table_score['Player2']:\n        return \"\"\"{0}, {1}: Alice made \"Kurt\" proud!\"\"\".format(table_score['Player1'], table_score['Player2'])\n\n    if table_score['Player1'] < table_score['Player2']:\n        return \"\"\"{0}, {1}: Bob made \"Jeff\" proud!\"\"\".format(table_score['Player1'], table_score['Player2'])", "def solve(a, b):\n    A = sum (x > y for x,y in  zip(a,b))\n    B = sum (x < y for x,y in  zip(a,b))\n    return '{}, {}: '.format(str(A),str(B)) + \\\n    ('that looks like a \"draw\"! Rock on!' if A == B else \\\n    ['Alice made \"Kurt\" proud!','Bob made \"Jeff\" proud!'][ A < B]) \n    # copied this last bit from daddepledge's solution. Neat!\n", "def solve(a, b):\n    c1=0\n    c2=0\n    for i in range(len(a)):\n        if (a[i]>b[i]):\n            c1+=1\n        elif (a[i]==b[i]):\n            pass\n        else:\n            c2+=1\n    if(c1==c2):\n        return(\"{}, {}: that looks like a \\\"draw\\\"! Rock on!\".format(c1,c2))\n    elif(c1>c2):\n        return(\"{}, {}: Alice made \\\"Kurt\\\" proud!\".format(c1,c2))\n    else:\n        return(\"{}, {}: Bob made \\\"Jeff\\\" proud!\".format(c1,c2))\n        \n", "def solve(a, b):\n    alice = sum (x > y for x,y in  zip(a,b))\n    bob = sum (x < y for x,y in  zip(a,b))\n    if alice > bob:\n        return '%s, %s: Alice made \"Kurt\" proud!' % (alice, bob)\n    elif bob > alice:\n        return '%s, %s: Bob made \"Jeff\" proud!' % (alice, bob)\n    else:\n        return '%s, %s: that looks like a \"draw\"! Rock on!' % (alice, bob)\n", "def solve(a, b):\n    alic = 0\n    bob = 0\n    for i in range(3):\n        if(a[i] > b[i]):\n            alic+=1\n        elif(a[i]<b[i]):\n            bob+=1\n    if (alic == bob):\n        return str(bob)+\", \"+str(alic)+\":\"+' that looks like a \"draw\"! Rock on!'\n    elif (max(alic,bob) == alic):\n        return str(alic)+\", \"+str(bob)+\":\"+' Alice made \"Kurt\" proud!'\n    else:\n        return str(alic)+\", \"+str(bob)+\":\"+' Bob made \"Jeff\" proud!'\n", "def solve(a, b):\n    a_count = 0\n    b_count = 0\n    for i in range(len(a)):\n        if a[i] > b[i]:\n            a_count += 1\n        elif a[i] < b[i]:\n            b_count += 1\n    if a_count > b_count:\n        return \"{a_count}, {b_count}: Alice made \\\"Kurt\\\" proud!\".format(a_count=a_count, b_count=b_count)\n    elif b_count > a_count:\n        return \"{a_count}, {b_count}: Bob made \\\"Jeff\\\" proud!\".format(a_count=a_count, b_count=b_count)\n    else:\n        return \"{a_count}, {b_count}: that looks like a \\\"draw\\\"! Rock on!\".format(a_count = a_count, b_count = b_count)", "def solve(a, b):\n    Alice=0\n    Bob=0\n    for i in range(0, len(a)):\n            if(a[i]>b[i]):\n                Alice+=1\n            elif(a[i]<b[i]):\n                Bob+=1\n    if(Alice>Bob):\n        return('{0}, {1}: Alice made \"Kurt\" proud!'.format(Alice,Bob))\n    elif(Alice<Bob):\n        return('{0}, {1}: Bob made \"Jeff\" proud!'.format(Alice,Bob))\n    else:\n        return('{0}, {1}: that looks like a \"draw\"! Rock on!'.format(Alice,Bob))\n", "def solve(a, b):\n    al= 0\n    bo= 0\n    for i in range(0,len(a)):\n        if a[i]>b[i]:\n            al+=1\n        elif a[i]<b[i]:\n            bo+=1\n    if(al>bo):\n        return('{0}, {1}: Alice made \"Kurt\" proud!'.format(al,bo))\n    elif(al<bo):\n        return('{0}, {1}: Bob made \"Jeff\" proud!'.format(al,bo))\n    else:\n        return('{0}, {1}: that looks like a \"draw\"! Rock on!'.format(al,bo))", "def solve(a, b):\n    x=0\n    y=0\n    for i in range(0,len(a)):\n        if a[i]==b[i]:\n            pass\n        elif a[i]>b[i]:\n            x+=1\n        else:\n            y+=1\n    if x==y:\n        return '{}, {}: that looks like a \"draw\"! Rock on!'.format(x,y)\n    elif x>y:\n        return '{}, {}: Alice made \"Kurt\" proud!'.format(x,y)\n    else:\n        return '{}, {}: Bob made \"Jeff\" proud!'.format(x,y)", "def solve(a, b):\n    count_a = 0\n    count_b = 0\n    for i in range(len(a)):\n        if a[i] > b[i]:\n            count_a +=1\n        elif a[i] < b[i]:\n            count_b +=1\n    return f'{count_a}, {count_b}: that looks like a \"draw\"! Rock on!' if count_a == count_b else f'{count_a}, {count_b}: Alice made \"Kurt\" proud!' if count_a > count_b else f'{count_a}, {count_b}: Bob made \"Jeff\" proud!'"]