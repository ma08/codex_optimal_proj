["\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [[0] * (n + 1) for _ in range(k + 1)]\n\nfor i in range(1, k + 1):\n    for j in range(1, n + 1):\n        dp[i][j] = max(dp[i][j - 1], dp[i - 1][j - 1] + a[j - 1])\n\nprint(dp[k][n])\n\n# reconstruct the answer\nans = []\ni = k\nj = n\nwhile i > 0:\n    if dp[i][j] == dp[i][j - 1]:\n        j -= 1\n    else:\n        ans.append(j)\n        j -= 1\n        i -= 1\nans.reverse()\n\nfor i in ans:\n    print(i - ans[ans.index(i) - 1] if ans.index(i) > 0 else i, end=\" \")\n", "var fs = require('fs');\n\nvar file = fs.readFileSync(process.argv[2], 'utf8');\n\nvar arr = file.split('\\n');\n\nconsole.log(arr.length - 1);\n", "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [[0] * (n + 1) for _ in range(k + 1)]\n\nfor i in range(1, k + 1):\n    for j in range(1, n + 1):\n        dp[i][j] = max(dp[i][j-1], dp[i-1][j-1] + a[j-1])\n\nprint(dp[k][n])\n\n# reconstruct the answer\nans = []\ni = k\nj = n\nwhile i > 0:\n    if dp[i][j] == dp[i][j-1]:\n        j -= 1\n    else:\n        ans.append(j)\n        j -= 1\n        i -= 1\nans.reverse()\n\nfor i in ans:\n    print(i - ans[ans.index(i) - 1] if ans.index(i) > 0 else i, end=\" \")\n", "# https://www.acmicpc.net/problem/11055\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [[0] * (n + 1) for _ in range(k + 1)] # dp[i][j] = max(dp[i][j-1], dp[i-1][j-1] + a[j-1])\n\nfor i in range(1, k + 1):\n    for j in range(1, n + 1):\n        dp[i][j] = max(dp[i][j-1], dp[i-1][j-1] + a[j-1])\n\nprint(dp[k][n])\n\n# reconstruct answer (backtracking)\nans = []\ni = k\nj = n\nwhile i > 0:\n    if dp[i][j] == dp[i][j-1]:\n        j -= 1\n    else:\n        ans.append(j)\n        j -= 1\n        i -= 1\nans.reverse()\n\nfor i in ans:\n    print(i - ans[ans.index(i) - 1] if ans.index(i) > 0 else i, end=\" \")\n", "var fs = require('fs');\n\nvar file = fs.readFileSync('file.txt', 'utf8');\n\nvar lines = file.split('\\n');\n\nvar newLines = [];\n\nlines.forEach(function(line) {\n  var words = line.split(' ');\n\n  var newWords = [];\n\n  words.forEach(function(word) {\n    var newWord = word.replace(/[^a-zA-Z]/g, '');\n\n    newWords.push(newWord);\n  });\n\n  var newLine = newWords.join(' ');\n\n  newLines.push(newLine);\n});\n\nvar newFile = newLines.join('\\n');\n\nfs.writeFileSync('newFile.txt', newFile);\n", "var fs = require('fs');\n\nvar file = fs.readFileSync('file.txt', 'utf8');\n\nvar lines = file.split('\\n');\n\nvar newLines = [];\n\nlines.forEach(function(line) {\n    var words = line.split(' ');\n\n    var newWords = [];\n\n    words.forEach(function(word) {\n        var newWord = word.replace(/[^a-zA-Z]/g, '');\n\n        newWords.push(newWord);\n    });\n\n    var newLine = newWords.join(' '); // join the words together with a space\n\n    newLines.push(newLine); // push the new line to the newLines array\n});\n\nvar newFile = newLines.join('\\n'); // join the lines together with a new line\n\nfs.writeFileSync('newFile.txt', newFile);\n", "var fs = require('fs');\n\nvar file = fs.readFileSync(process.argv[2], 'utf8');\n\nvar arr = file.split('\\n');\n\nvar arr = str.split('\\n');\n\nconsole.log(arr.length - 1);\n"]