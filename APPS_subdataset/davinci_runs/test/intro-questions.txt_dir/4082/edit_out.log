2022-03-30 21:31:50.458979 num operations 2
2022-03-30 21:31:50.459015 size on input set 1
2022-03-30 21:32:01.161637 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split()))\n\n# the maximum length of the decreasing subarray\nmax_length = 1\n# the length of the decreasing subarray\nlength = 1\n\n# iterate through the array\nfor i in range(1, n):\n    # if the current element is greater than\n    # the previous element, then increase\n    # the length of the decreasing subarray\n    if a[i] > a[i - 1]:\n        length += 1\n    else:\n        # if the current element is not greater than\n        # the previous element, then update the maximum length\n        # of the decreasing subarray\n        max_length = max(max_length, length)\n        # reset the length of the decreasing subarray\n        length = 1\n\n# update the maximum length of the decreasing subarray\nmax_length = max(max_length, length)\n\n# print the maximum length of the increasing subarray\nprint(max_length)\n"
    },
    {
      "index": 1,
      "text": "\n\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split()))\n\n# the maximum length of the decreasing subarray\nmax_length = 1\n# the length of the decreasing subarray\nlength = 1\n\n# iterate through the array\nfor i in range(1, n):\n    # if the current element is greater than\n    # the previous element, then increase\n    # the length of the decreasing subarray\n    if a[i] > a[i - 1]:\n        length += 1\n    else:\n        # if the current element is not greater than\n        # the previous element, then update the maximum\n        # length of the decreasing subarray\n        max_length = max(max_length, length)\n        # reset the length of the decreasing subarray\n        length = 1\n\n# update the maximum length of the decreasing subarray\nmax_length = max(max_length, length)\n\n# print the maximum length of the increasing subarray\nprint(max_length)\n"
    }
  ],
  "created": 1648690310,
  "object": "edit"
}
2022-03-30 21:32:01.161782 fix spelling mistakes 2 ['\n\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split()))\n\n# the maximum length of the decreasing subarray\nmax_length = 1\n# the length of the decreasing subarray\nlength = 1\n\n# iterate through the array\nfor i in range(1, n):\n    # if the current element is greater than\n    # the previous element, then increase\n    # the length of the decreasing subarray\n    if a[i] > a[i - 1]:\n        length += 1\n    else:\n        # if the current element is not greater than\n        # the previous element, then update the maximum length\n        # of the decreasing subarray\n        max_length = max(max_length, length)\n        # reset the length of the decreasing subarray\n        length = 1\n\n# update the maximum length of the decreasing subarray\nmax_length = max(max_length, length)\n\n# print the maximum length of the increasing subarray\nprint(max_length)\n', '\n\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split()))\n\n# the maximum length of the decreasing subarray\nmax_length = 1\n# the length of the decreasing subarray\nlength = 1\n\n# iterate through the array\nfor i in range(1, n):\n    # if the current element is greater than\n    # the previous element, then increase\n    # the length of the decreasing subarray\n    if a[i] > a[i - 1]:\n        length += 1\n    else:\n        # if the current element is not greater than\n        # the previous element, then update the maximum\n        # length of the decreasing subarray\n        max_length = max(max_length, length)\n        # reset the length of the decreasing subarray\n        length = 1\n\n# update the maximum length of the decreasing subarray\nmax_length = max(max_length, length)\n\n# print the maximum length of the increasing subarray\nprint(max_length)\n']
2022-03-30 21:32:01.161810 size on output set 2
2022-03-30 21:32:01.161815 size on input set 2
2022-03-30 21:32:04.009673 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split()))\n\n# the maximum length of the decreasing subarray\nmax_length = 1\n# the length of the decreasing subarray\nlength = 1\n\n# iterate through the array\nfor i in range(1, n):\n    # if the current element is greater than\n    # the previous element, then increase\n    # the length of the decreasing subarray\n    if a[i] > a[i - 1]:\n        length += 1\n    else:\n        # if the current element is not greater than\n        # the previous element, then update the maximum\n        # length of the decreasing subarray\n        max_length = max(max_length, length)\n        # reset the length of the decreasing subarray\n        length = 1\n\n# update the maximum length of the decreasing subarray\nmax_length = max(max_length, length)\n\n# print the maximum length of the decreasing subarray\nprint(max_length)\n"
    },
    {
      "index": 1,
      "text": "\n\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split()))\n\n# the maximum length of the decreasing subarray\nmax_length = 1\n# the length of the decreasing subarray\nlength = 1\n\n# iterate through the array\nfor i in range(1, n):\n    # if the current element is greater than\n    # the previous element, then increase\n    # the length of the decreasing subarray\n    if a[i] > a[i - 1]:\n        length += 1\n    else:\n        # if the current element is not greater than\n        # the previous element, then update the maximum\n        # length of the decreasing subarray\n        max_length = max(max_length, length)\n        # reset the length of the decreasing subarray\n        length = 1\n\n# update the maximum length of the decreasing subarray\nmax_length = max(max_length, length)\n\n# print the maximum length of the decreasing subarray\nprint(max_length)\n"
    }
  ],
  "created": 1648690321,
  "object": "edit"
}
2022-03-30 21:32:04.009911 fix syntax errors 2 ['\n\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split()))\n\n# the maximum length of the decreasing subarray\nmax_length = 1\n# the length of the decreasing subarray\nlength = 1\n\n# iterate through the array\nfor i in range(1, n):\n    # if the current element is greater than\n    # the previous element, then increase\n    # the length of the decreasing subarray\n    if a[i] > a[i - 1]:\n        length += 1\n    else:\n        # if the current element is not greater than\n        # the previous element, then update the maximum\n        # length of the decreasing subarray\n        max_length = max(max_length, length)\n        # reset the length of the decreasing subarray\n        length = 1\n\n# update the maximum length of the decreasing subarray\nmax_length = max(max_length, length)\n\n# print the maximum length of the decreasing subarray\nprint(max_length)\n', '\n\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split()))\n\n# the maximum length of the decreasing subarray\nmax_length = 1\n# the length of the decreasing subarray\nlength = 1\n\n# iterate through the array\nfor i in range(1, n):\n    # if the current element is greater than\n    # the previous element, then increase\n    # the length of the decreasing subarray\n    if a[i] > a[i - 1]:\n        length += 1\n    else:\n        # if the current element is not greater than\n        # the previous element, then update the maximum\n        # length of the decreasing subarray\n        max_length = max(max_length, length)\n        # reset the length of the decreasing subarray\n        length = 1\n\n# update the maximum length of the decreasing subarray\nmax_length = max(max_length, length)\n\n# print the maximum length of the decreasing subarray\nprint(max_length)\n']
2022-03-30 21:32:06.795898 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split()))\n\n# the maximum length of the decreasing subarray\nmax_length = 1\n# the length of the decreasing subarray\nlength = 1\n\n# iterate through the array\nfor i in range(1, n):\n    # if the current element is greater than\n    # the previous element, then increase\n    # the length of the decreasing subarray\n    if a[i] > a[i - 1]:\n        length += 1\n    else:\n        # if the current element is not greater than\n        # the previous element, then update the maximum length\n        # of the decreasing subarray\n        max_length = max(max_length, length)\n        # reset the length of the decreasing subarray\n        length = 1\n\n# update the maximum length of the decreasing subarray\nmax_length = max(max_length, length)\n\n# print the maximum length of the decreasing subarray\nprint(max_length)\n"
    },
    {
      "index": 1,
      "text": "\n\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split()))\n\n# the maximum length of the decreasing subarray\nmax_length = 1\n# the length of the decreasing subarray\nlength = 1\n\n# iterate through the array\nfor i in range(1, n):\n    # if the current element is greater than\n    # the previous element, then increase\n    # the length of the decreasing subarray\n    if a[i] > a[i - 1]:\n        length += 1\n    else:\n        # if the current element is not greater than\n        # the previous element, then update the maximum length\n        # of the decreasing subarray\n        max_length = max(max_length, length)\n        # reset the length of the decreasing subarray\n        length = 1\n\n# update the maximum length of the decreasing subarray\nmax_length = max(max_length, length)\n\n# print the maximum length of the decreasing subarray\nprint(max_length)\n"
    }
  ],
  "created": 1648690324,
  "object": "edit"
}
2022-03-30 21:32:06.796132 fix syntax errors 2 ['\n\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split()))\n\n# the maximum length of the decreasing subarray\nmax_length = 1\n# the length of the decreasing subarray\nlength = 1\n\n# iterate through the array\nfor i in range(1, n):\n    # if the current element is greater than\n    # the previous element, then increase\n    # the length of the decreasing subarray\n    if a[i] > a[i - 1]:\n        length += 1\n    else:\n        # if the current element is not greater than\n        # the previous element, then update the maximum length\n        # of the decreasing subarray\n        max_length = max(max_length, length)\n        # reset the length of the decreasing subarray\n        length = 1\n\n# update the maximum length of the decreasing subarray\nmax_length = max(max_length, length)\n\n# print the maximum length of the decreasing subarray\nprint(max_length)\n', '\n\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split()))\n\n# the maximum length of the decreasing subarray\nmax_length = 1\n# the length of the decreasing subarray\nlength = 1\n\n# iterate through the array\nfor i in range(1, n):\n    # if the current element is greater than\n    # the previous element, then increase\n    # the length of the decreasing subarray\n    if a[i] > a[i - 1]:\n        length += 1\n    else:\n        # if the current element is not greater than\n        # the previous element, then update the maximum length\n        # of the decreasing subarray\n        max_length = max(max_length, length)\n        # reset the length of the decreasing subarray\n        length = 1\n\n# update the maximum length of the decreasing subarray\nmax_length = max(max_length, length)\n\n# print the maximum length of the decreasing subarray\nprint(max_length)\n']
2022-03-30 21:32:06.796165 size on output set 2
2022-03-30 21:32:06.796175 num operations 2
2022-03-30 21:32:06.796181 size on input set 1
2022-03-30 21:32:12.884877 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\ndef solve(n, a):\n    l = 0\n    r = 0\n    max_len = 0\n    while r < n-1:\n        if a[r+1] > a[r]:\n            r += 1\n        else:\n            max_len = max(max_len, r-l+1)\n            l = r\n            r += 1\n    max_len = max(max_len, r-l+1)\n    return max_len\n\nprint(solve(n, a))\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef solve(n, a):\n    left = 0\n    right = 0\n    max_len = 0\n    while right < n-1:\n        if a[right+1] > a[right]:\n            right += 1\n        else:\n            max_len = max(max_len, right-left+1)\n            left = right\n            right += 1\n    max_len = max(max_len, right-left+1)\n    return max_len\n\nprint(solve(n, a))\n"
    }
  ],
  "created": 1648690327,
  "object": "edit"
}
2022-03-30 21:32:12.885289 fix spelling mistakes 2 ['\nn = int(input())\na = list(map(int, input().split()))\n\ndef solve(n, a):\n    l = 0\n    r = 0\n    max_len = 0\n    while r < n-1:\n        if a[r+1] > a[r]:\n            r += 1\n        else:\n            max_len = max(max_len, r-l+1)\n            l = r\n            r += 1\n    max_len = max(max_len, r-l+1)\n    return max_len\n\nprint(solve(n, a))\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef solve(n, a):\n    left = 0\n    right = 0\n    max_len = 0\n    while right < n-1:\n        if a[right+1] > a[right]:\n            right += 1\n        else:\n            max_len = max(max_len, right-left+1)\n            left = right\n            right += 1\n    max_len = max(max_len, right-left+1)\n    return max_len\n\nprint(solve(n, a))\n']
2022-03-30 21:32:12.885329 size on output set 2
2022-03-30 21:32:12.885338 size on input set 2
2022-03-30 21:32:18.971940 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\na = list(map(int, input().split()))\n\ndef solve(n, a):\n    l = 0\n    r = 0\n    max_len = 0\n    while r < n-1:\n        if a[r+1] > a[r]:\n            r += 1\n        else:\n            max_len = max(max_len, r-l+1)\n            l = r\n            r += 1\n    max_len = max(max_len, r-l+1)\n    return max_len\n\nprint(solve(n, a))\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\na = list(map(int, input().split()))\n\n\ndef solve(n, a, max_len):\n    l = 0\n    r = 0\n    while r < n - 1:\n        if a[r + 1] > a[r]:\n            r += 1\n        else:\n            max_len = max(max_len, r - l + 1)\n            l = r\n            r += 1\n    max_len = max(max_len, r - l + 1)\n    return max_len\n\n\nprint(solve(n, a, 0))\n"
    }
  ],
  "created": 1648690333,
  "object": "edit"
}
2022-03-30 21:32:18.972046 fix syntax errors 2 ['n = int(input())\na = list(map(int, input().split()))\n\ndef solve(n, a):\n    l = 0\n    r = 0\n    max_len = 0\n    while r < n-1:\n        if a[r+1] > a[r]:\n            r += 1\n        else:\n            max_len = max(max_len, r-l+1)\n            l = r\n            r += 1\n    max_len = max(max_len, r-l+1)\n    return max_len\n\nprint(solve(n, a))\n', 'n = int(input())\na = list(map(int, input().split()))\n\n\ndef solve(n, a, max_len):\n    l = 0\n    r = 0\n    while r < n - 1:\n        if a[r + 1] > a[r]:\n            r += 1\n        else:\n            max_len = max(max_len, r - l + 1)\n            l = r\n            r += 1\n    max_len = max(max_len, r - l + 1)\n    return max_len\n\n\nprint(solve(n, a, 0))\n']
2022-03-30 21:32:21.375471 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\ndef solve(n, a):\n    left = 0\n    right = 0\n    max_len = 0\n    while right < n-1:\n        if a[right+1] > a[right]:\n            right += 1\n        else:\n            max_len = max(max_len, right-left+1)\n            left = right\n            right += 1\n    max_len = max(max_len, right-left+1)\n    return max_len\n\nprint(solve(n, a))\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\ndef solve(n, a):\n    left = 0\n    right = 0\n    max_len = 0\n    while right < n-1:\n        if a[right+1] > a[right]:\n            right += 1\n        else:\n            max_len = max(max_len, right-left+1)\n            left = right\n            right += 1\n    max_len = max(max_len, right-left+1)\n    return max_len\n\nprint(solve(n, a))\n"
    }
  ],
  "created": 1648690339,
  "object": "edit"
}
2022-03-30 21:32:21.375610 fix syntax errors 2 ['\nn = int(input())\na = list(map(int, input().split()))\n\ndef solve(n, a):\n    left = 0\n    right = 0\n    max_len = 0\n    while right < n-1:\n        if a[right+1] > a[right]:\n            right += 1\n        else:\n            max_len = max(max_len, right-left+1)\n            left = right\n            right += 1\n    max_len = max(max_len, right-left+1)\n    return max_len\n\nprint(solve(n, a))\n', '\nn = int(input())\na = list(map(int, input().split()))\n\ndef solve(n, a):\n    left = 0\n    right = 0\n    max_len = 0\n    while right < n-1:\n        if a[right+1] > a[right]:\n            right += 1\n        else:\n            max_len = max(max_len, right-left+1)\n            left = right\n            right += 1\n    max_len = max(max_len, right-left+1)\n    return max_len\n\nprint(solve(n, a))\n']
2022-03-30 21:32:21.375623 size on output set 3
