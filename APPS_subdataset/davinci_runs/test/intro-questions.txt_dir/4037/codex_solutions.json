["\n#https://codeforces.com/contest/1253/problem/B2\nn,r = map(int,input().split())\na = [list(map(int,input().split())) for _ in range(n)]\na.sort(key=lambda x:x[0])\n#print(a)\nresult = 0\nfor i in range(n):\n    if a[i][0]<=r:\n        result+=1\n        r+=a[i][1]\n    else:\n        break\nprint(result)", "\n\nimport unittest\n\nfrom typing import List\n\nfrom utils.common import ListNode\n\n\nclass Solution:\n    def maxProfit(self, k: int, prices: List[int]) -> int:\n        pass\n\n\nclass TestSolution(unittest.TestCase):\n    def setUp(self):\n        self.sol = Solution()\n\n    def test_empty(self):\n        self.assertEqual(self.sol.maxProfit([]), 0)\n\n    def test_one(self):\n        self.assertEqual(self.sol.maxProfit([1]), 0)\n        self.assertEqual(self.sol.maxProfit([2]), 0)\n\n    def test_two(self):\n        self.assertEqual(self.sol.maxProfit([2, 1]), 0)\n        self.assertEqual(self.sol.maxProfit([1, 2]), 1)\n\n    def test_three(self):\n        self.assertEqual(self.sol.maxProfit([1, 3, 2]), 2)\n\n    def test_general(self):\n        self.assertEqual(self.sol.maxProfit([1, 2, 3, 4, 5]), 4)\n        self.assertEqual(self.sol.maxProfit([7, 1, 5, 3, 6, 4]), 5)\n        self.assertEqual(self.sol.maxProfit([7, 6, 4, 3, 1]), 0)\n\n\nif __name__ == \"__main__\":\n    unittest.main()", "\n\n#Program\n\nn, r = map(int, input().split())\nprojects = []\nfor _ in range(n):\n    projects.append(list(map(int, input().split())))\n\nprojects = sorted(projects, key=lambda x: x[0])\n\ncount = 0\nfor a, b in projects:\n    if a > r:\n        break\n    r += b\n    count += 1\n\nprint(count)"]