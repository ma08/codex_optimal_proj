["\n\ndef main():\n\t# Read input\n\tn = int(input())\n\ta = [int(x) for x in input().split()]\n\n\t# Find the minimum and maximum value in the array, and the indeces of the minimum and maximum values\n\tmin_val = min(a)\n\tmax_val = max(a)\n\tmin_idx = a.index(min_val)\n\tmax_idx = a.index(max_val)\n\n\t# If the minimum and maximum values are at different indeces, then we can remove either\n\t# the minimum value or the maximum value and get instability of zero\n\tif min_idx != max_idx:\n\t\tprint(0)\n\telse:\n\t\t# Otherwise, we need to find the second smallest and second largest value in the array\n\t\ta.remove(min_val)\n\t\ta.remove(max_val)\n\t\tmin_val2 = min(a)\n\t\tmax_val2 = max(a)\n\n\t\t# The minimum possible instability is the difference between the second largest and\n\t\t# second smallest value\n\t\tprint(max_val2 - min_val2)\n\nif __name__ == \"__main__\":\n\tmain()", "\n\nn = int(input())\narr = [int(x) for x in input().split()]\n\nprint(max(arr) - min(arr) - 1)", "\n\ndef instability(a):\n    return max(a) - min(a)\n\nn = int(input())\na = list(map(int, input().split()))\n\n# solution 1:\n# instability_min = instability(a)\n# for i in range(n):\n#     a_temp = a[:i] + a[i+1:]\n#     instability_temp = instability(a_temp)\n#     if instability_temp < instability_min:\n#         instability_min = instability_temp\n# print(instability_min)\n\n# solution 2:\na_min = min(a)\na_max = max(a)\nif a.count(a_min) > 1:\n    instability_min = a_max - a_min\nelse:\n    instability_min = a_max - a_min\n    a.remove(a_min)\n    a_new_max = max(a)\n    instability_min = min(instability_min, a_new_max - a_min)\n\nif a.count(a_max) > 1:\n    instability_min = min(instability_min, a_max - a_min)\nelse:\n    instability_min = min(instability_min, a_max - a_min)\n    a.remove(a_max)\n    a_new_min = min(a)\n    instability_min = min(instability_min, a_max - a_new_min)\nprint(instability_min)"]