"""
Polycarp has to solve exactly $n$ problems to improve his programming skill before an important programming competition. But this competition will be held very soon, most precisely, it will start in $k$ days. It means that Polycarp has exactly $k$ days for training!

Polycarp doesn't want to procrastinate, so he wants to solve at least one problem during each of $k$ days. He also doesn't want to overwork, so if he solves $x$ problems during some day, he should solve no more than $2x$ problems during the next day. And, at last, he wants to improve his skill, so if he solves $x$ problems during some day, he should solve at least $x+1$ problem during the next day.

More formally: let $[a_1, a_2, \dots, a_k]$ be the array of numbers of problems solved by Polycarp. The $i$-th element of this array is the number of problems Polycarp solves during the $i$-th day of his training. Then the following conditions must be satisfied:   sum of all $a_i$ for $i$ from $1$ to $k$ should be $n$;  $a_i$ should be greater than zero for each $i$ from $1$ to $k$;  the condition $a_i < a_{i + 1} \le 2 a_i$ should be satisfied for each $i$ from $1$ to $k-1$. 

Your problem is to find any array $a$ of length $k$ satisfying the conditions above or say that it is impossible to do it.


-----Input-----

The first line of the input contains two integers $n$ and $k$ ($1 \le n \le 10^9, 1 \le k \le 10^5$) â€” the number of problems Polycarp wants to solve and the number of days Polycarp wants to train.


-----Output-----

If it is impossible to find any array $a$ of length $k$ satisfying Polycarp's rules of training, print "NO" in the first line.

Otherwise print "YES" in the first line, then print $k$ integers $a_1, a_2, \dots, a_k$ in the second line, where $a_i$ should be the number of problems Polycarp should solve during the $i$-th day. If there are multiple answers, you can print any.


-----Examples-----
Input
26 6

Output
YES
1 2 4 5 6 8 

Input
8 3

Output
NO

Input
1 1

Output
YES
1 

Input
9 4

Output
NO
"""
--------------------------
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n\tn, k = [int(x) for x in input().split()]\n\tif n < k or n > 10**9 or k > 10**5:\n\t\tprint(\"NO\")\n\t\treturn\n\tif n == k:\n\t\tprint(\"YES\\n{}\".format(\" \".join([str(x) for x in range(1, k+1)])))\n\t\treturn\n\tif n % 2 == 0:\n\t\tif k == 2:\n\t\t\tprint(\"YES\\n{} {}\".format(n//2, n//2))\n\t\t\treturn\n\t\tif k == 3:\n\t\t\tprint(\"YES\\n{} 1 {}\".format(n//2, n//2 - 1))\n\t\t\treturn\n\t\tif k == 4:\n\t\t\tprint(\"YES\\n2 1 3 3\")\n\t\t\treturn\n\t\tif k == 5:\n\t\t\tprint(\"YES\\n2 1 2 3 3\")\n\t\t\treturn\n\t\tif k == 6:\n\t\t\tprint(\"YES\\n2 1 2 2 3 3\")\n\t\t\treturn\n\t\tif k > 6:\n\t\t\tprint(\"NO\")\n\t\t\treturn\n\tif n % 2 == 1:\n\t\tif k == 2:\n\t\t\tprint(\"YES\\n{} {}\".format(n//2 + 1, n//2))\n\t\t\treturn\n\t\tif k == 3:\n\t\t\tprint(\"YES\\n{} 1 {}\".format(n//2 + 1, n//2 - 1))\n\t\t\treturn\n\t\tif k == 4:\n\t\t\tprint(\"YES\\n2 1 3 3\")\n\t\t\treturn\n\t\tif k == 5:\n\t\t\tprint(\"YES\\n2 1 2 3 3\")\n\t\t\treturn\n\t\tif k == 6:\n\t\t\tprint(\"YES\\n2 1 2 2 3 3\")\n\t\t\treturn\n\t\tif k > 6:\n\t\t\tprint(\"NO\")\n\t\t\treturn\n\nif __name__ == '__main__':\n\tmain()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\n\nif n == 1:\n    print(\"YES\")\n    print(\"1\")\nelif n > 2 * (2 ** (k - 1) - 1) or n < 2 ** (k - 1):\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    for i in range(k - 1):\n        print(2 ** (k - i - 1) - 1, end=' ')\n\n    if n - (2 ** (k - 1) - 1) == 2 ** (k - 1):\n        print(2 ** (k - 1))\n    else:\n        print(n - (2 ** (k - 1) - 1))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n# SOLUTION\nn,k=map(int,input().split())\n\nif k==1:\n    if n==1: print(\"YES\\n1\")\n    else: print(\"NO\")\nelse:\n    if n<k: print(\"NO\")\n    else:\n        s=n//k\n        r=n%k\n        if s<2: print(\"NO\")\n        else:\n            ans=[s]*k\n            for i in range(r):\n                ans[k-1-i]+=1\n            if r==0:\n                for i in range(k-1):\n                    if ans[i]>=ans[i+1]: print(\"NO\"); break\n            else:\n                for i in range(k-2):\n                    if ans[i]>=ans[i+1]: print(\"NO\"); break\n                if ans[k-2]>=ans[k-1]: print(\"NO\")\n                else: print(\"YES\\n\"+\" \".join(map(str,ans)))"
    }
  ],
  "created": 1648692610,
  "id": "cmpl-4reYE4RJQvEHs0SZoQ8wzznoAXl6G",
  "model": "code-davinci:002",
  "object": "text_completion"
}
0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n\tn, k = [int(x) for x in input().split()]\n\tif n < k or n > 10**9 or k > 10**5:\n\t\tprint(\"NO\")\n\t\treturn\n\tif n == k:\n\t\tprint(\"YES\\n{}\".format(\" \".join([str(x) for x in range(1, k+1)])))\n\t\treturn\n\tif n % 2 == 0:\n\t\tif k == 2:\n\t\t\tprint(\"YES\\n{} {}\".format(n//2, n//2))\n\t\t\treturn\n\t\tif k == 3:\n\t\t\tprint(\"YES\\n{} 1 {}\".format(n//2, n//2 - 1))\n\t\t\treturn\n\t\tif k == 4:\n\t\t\tprint(\"YES\\n2 1 3 3\")\n\t\t\treturn\n\t\tif k == 5:\n\t\t\tprint(\"YES\\n2 1 2 3 3\")\n\t\t\treturn\n\t\tif k == 6:\n\t\t\tprint(\"YES\\n2 1 2 2 3 3\")\n\t\t\treturn\n\t\tif k > 6:\n\t\t\tprint(\"NO\")\n\t\t\treturn\n\tif n % 2 == 1:\n\t\tif k == 2:\n\t\t\tprint(\"YES\\n{} {}\".format(n//2 + 1, n//2))\n\t\t\treturn\n\t\tif k == 3:\n\t\t\tprint(\"YES\\n{} 1 {}\".format(n//2 + 1, n//2 - 1))\n\t\t\treturn\n\t\tif k == 4:\n\t\t\tprint(\"YES\\n2 1 3 3\")\n\t\t\treturn\n\t\tif k == 5:\n\t\t\tprint(\"YES\\n2 1 2 3 3\")\n\t\t\treturn\n\t\tif k == 6:\n\t\t\tprint(\"YES\\n2 1 2 2 3 3\")\n\t\t\treturn\n\t\tif k > 6:\n\t\t\tprint(\"NO\")\n\t\t\treturn\n\nif __name__ == '__main__':\n\tmain()"
}
REASON stop
1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\n\nif n == 1:\n    print(\"YES\")\n    print(\"1\")\nelif n > 2 * (2 ** (k - 1) - 1) or n < 2 ** (k - 1):\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    for i in range(k - 1):\n        print(2 ** (k - i - 1) - 1, end=' ')\n\n    if n - (2 ** (k - 1) - 1) == 2 ** (k - 1):\n        print(2 ** (k - 1))\n    else:\n        print(n - (2 ** (k - 1) - 1))"
}
REASON stop
2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n# SOLUTION\nn,k=map(int,input().split())\n\nif k==1:\n    if n==1: print(\"YES\\n1\")\n    else: print(\"NO\")\nelse:\n    if n<k: print(\"NO\")\n    else:\n        s=n//k\n        r=n%k\n        if s<2: print(\"NO\")\n        else:\n            ans=[s]*k\n            for i in range(r):\n                ans[k-1-i]+=1\n            if r==0:\n                for i in range(k-1):\n                    if ans[i]>=ans[i+1]: print(\"NO\"); break\n            else:\n                for i in range(k-2):\n                    if ans[i]>=ans[i+1]: print(\"NO\"); break\n                if ans[k-2]>=ans[k-1]: print(\"NO\")\n                else: print(\"YES\\n\"+\" \".join(map(str,ans)))"
}
REASON stop
