["\nfrom sys import stdin\n\nn = int(stdin.readline())\na = [int(x) for x in stdin.readline().split()]\n\nd = {}\nfor i in range(n):\n    if a[i] in d:\n        d[a[i]].append(i)\n    else:\n        d[a[i]] = [i]\n\nans = n\nfor x in d:\n    if len(d[x]) > 1:\n        for i in range(len(d[x]) - 1):\n            if d[x][i + 1] - d[x][i] < ans:\n                ans = d[x][i + 1] - d[x][i]\n\nfor x in d:\n    if len(d[x]) > 1:\n        for i in range(len(d[x]) - 1):\n            if d[x][i + 1] - d[x][i] == ans:\n                print(d[x][i] + 1, d[x][i + 1] + 1)\n                exit(0)\n\nfor x in d:\n    if len(d[x]) > 1:\n        for i in range(len(d[x]) - 1):\n            if d[x][i + 1] - d[x][i] == ans + 1:\n                print(d[x][i] + 1, d[x][i + 1] + 1)\n                exit(0)\n\nfor x in d:\n    if len(d[x]) > 1:\n        for i in range(len(d[x]) - 1):\n            if d[x][i + 1] - d[x][i] == ans + 2:\n                print(d[x][i] + 1, d[x][i + 1] + 1)\n                exit(0)\n\nfor x in d:\n    if len(d[x]) > 1:\n        for i in range(len(d[x]) - 1):\n            if d[x][i + 1] - d[x][i] == ans + 3:\n                print(d[x][i] + 1, d[x][i + 1] + 1)\n                exit(0)\n", "\nfrom sys import stdin\n\nn = int(stdin.readline())\na = [int(x) for x in stdin.readline().split()]\nd = {}\nfor i in range(n):\n    if a[i] in d:\n        d[a[i]].append(i)\n    else:\n        d[a[i]] = [i]\nans = n\nfor x in d:\n    if len(d[x]) > 1:\n        for i in range(len(d[x]) - 1):\n            if d[x][i + 1] - d[x][i] < ans:\n                ans = d[x][i + 1] - d[x][i]\nfor x in d:\n    if len(d[x]) > 1:\n        for i in range(len(d[x]) - 1):\n            if d[x][i + 1] - d[x][i] == ans:\n                print(d[x][i] + 1, d[x][i + 1] + 1)\n                exit(0)\nfor x in d:\n    if len(d[x]) > 1:\n        for i in range(len(d[x]) - 1):\n            if d[x][i + 1] - d[x][i] == ans + 1:\n                print(d[x][i] + 1, d[x][i + 1] + 1)\n                exit(0)\nfor x in d:\n    if len(d[x]) > 1:\n        for i in range(len(d[x]) - 1):\n            if d[x][i + 1] - d[x][i] == ans + 2:\n                print(d[x][i] + 1, d[x][i + 1] + 1)\n                exit(0)\nfor x in d:\n    if len(d[x]) > 1:\n        for i in range(len(d[x]) - 1):\n            if d[x][i + 1] - d[x][i] == ans + 3:\n                print(d[x][i] + 1, d[x][i + 1] + 1)\n                exit(0)\n", "# coding: utf-8\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    def gcd(x, y):\n        if y == 0:\n            return x\n        else:\n            return gcd(y, x % y)\n\n    def lcm(x, y):\n        return (x * y) // gcd(x, y)\n\n    min_lcm = float('inf')\n    for i in range(n):\n        for j in range(i+1, n):\n            min_lcm = min(min_lcm, lcm(a[i], a[j]))\n\n    for i in range(n):\n        for j in range(i+1, n):\n            if min_lcm == lcm(a[i], a[j]):\n                print(i + 1, j + 1)\n                break\n\nif __name__ == '__main__':\n    main()\n", "n = int(input())\na = list(map(int, input().split()))\n\ndef gcd(x, y):\n    if y == 0:\n        return x\n    else:\n        return gcd(y, x % y)\n\ndef lcm(x, y):\n    return (x * y) // gcd(x, y)\n\nmin_lcm = float('inf')\nfor i in range(n):\n    for j in range(i+1, n):\n        min_lcm = min(min_lcm, lcm(a[i], a[j]))\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if min_lcm == lcm(a[i], a[j]):\n            print(i + 1, j + 1)\n            break\n", "# coding: utf-8\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))[:n]\n\na.sort()\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\nmin_lcm = float('inf')\nfor i in range(n):\n    for j in range(i+1, n):\n        min_lcm = min(min_lcm, lcm(a[i], a[j]))\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if min_lcm == lcm(a[i], a[j]):\n            print(i + 1, j + 1)\n            break\n"]