2022-03-30 21:02:31.848517 num operations 2
2022-03-30 21:02:31.848543 size on input set 1
2022-03-30 21:02:37.056156 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution 1\n\ndef solve(segments):\n    segments.sort()\n    max_length = 0\n    for i in range(1, len(segments)):\n        max_length = max(max_length, min(segments[i][0], segments[i-1][1]) - max(segments[i][1], segments[i-1][0]))\n\n    return max_length\n\nn = int(input())\nsegments = [tuple(map(int, input().split())) for _ in range(n)]\nprint(solve(segments))\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution\n\ndef solve(segments):\n    segments.sort()\n    max_length = 0\n    for i in range(1, len(segments)):\n        max_length = max(max_length, min(segments[i][0], segments[i-1][1]) - max(segments[i][1], segments[i-1][0]))\n\n    return max_length\n\nn = int(input())\nsegments = [tuple(map(int, input().split())) for _ in range(n)]\nprint(solve(segments))\n\n# Solution\n\ndef solve(segments):\n    segments.sort()\n    max_length = 0\n    for i in range(1, len(segments)):\n        max_length = max(max_length, min(segments[i][0], segments[i-1][1]) - max(segments[i][1], segments[i-1][0]))\n\n    return max_length\n\nn = int(input())\nsegments = [tuple(map(int, input().split())) for _ in range(n)]\nprint(solve(segments))\n"
    }
  ],
  "created": 1648688552,
  "object": "edit"
}
2022-03-30 21:02:37.056352 fix spelling mistakes 2 ['\n\n# Solution 1\n\ndef solve(segments):\n    segments.sort()\n    max_length = 0\n    for i in range(1, len(segments)):\n        max_length = max(max_length, min(segments[i][0], segments[i-1][1]) - max(segments[i][1], segments[i-1][0]))\n\n    return max_length\n\nn = int(input())\nsegments = [tuple(map(int, input().split())) for _ in range(n)]\nprint(solve(segments))\n', '\n\n# Solution\n\ndef solve(segments):\n    segments.sort()\n    max_length = 0\n    for i in range(1, len(segments)):\n        max_length = max(max_length, min(segments[i][0], segments[i-1][1]) - max(segments[i][1], segments[i-1][0]))\n\n    return max_length\n\nn = int(input())\nsegments = [tuple(map(int, input().split())) for _ in range(n)]\nprint(solve(segments))\n\n# Solution\n\ndef solve(segments):\n    segments.sort()\n    max_length = 0\n    for i in range(1, len(segments)):\n        max_length = max(max_length, min(segments[i][0], segments[i-1][1]) - max(segments[i][1], segments[i-1][0]))\n\n    return max_length\n\nn = int(input())\nsegments = [tuple(map(int, input().split())) for _ in range(n)]\nprint(solve(segments))\n']
2022-03-30 21:02:37.056385 size on output set 2
2022-03-30 21:02:37.056394 size on input set 2
2022-03-30 21:02:41.857618 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution\n\ndef solve(segments):\n    segments.sort()\n    max_length = 0\n    for i in range(1, len(segments)):\n        max_length = max(max_length, min(segments[i][0], segments[i-1][1]) - max(segments[i][1], segments[i-1][0]))\n\n    return max_length\n\nn = int(input())\nsegments = [tuple(map(int, input().split())) for _ in range(n)]\nprint(solve(segments))\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution\n\ndef solve(segments):\n    segments.sort()\n    max_length = 0\n    for i in range(1, len(segments)):\n        max_length = max(max_length, min(segments[i][0], segments[i-1][1]) - max(segments[i][1], segments[i-1][0]))\n\n    return max_length\n\nn = int(input())\nsegments = [tuple(map(int, input().split())) for _ in range(n)]\nprint(solve(segments))\n"
    }
  ],
  "created": 1648688557,
  "object": "edit"
}
2022-03-30 21:02:41.858131 fix syntax errors 2 ['\n\n# Solution\n\ndef solve(segments):\n    segments.sort()\n    max_length = 0\n    for i in range(1, len(segments)):\n        max_length = max(max_length, min(segments[i][0], segments[i-1][1]) - max(segments[i][1], segments[i-1][0]))\n\n    return max_length\n\nn = int(input())\nsegments = [tuple(map(int, input().split())) for _ in range(n)]\nprint(solve(segments))\n', '\n\n# Solution\n\ndef solve(segments):\n    segments.sort()\n    max_length = 0\n    for i in range(1, len(segments)):\n        max_length = max(max_length, min(segments[i][0], segments[i-1][1]) - max(segments[i][1], segments[i-1][0]))\n\n    return max_length\n\nn = int(input())\nsegments = [tuple(map(int, input().split())) for _ in range(n)]\nprint(solve(segments))\n']
2022-03-30 21:02:47.636064 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Solution 1\ndef solve(segments):\n    segments.sort()\n    max_length = 0\n    for i in range(1, len(segments)):\n        max_length = max(max_length, min(segments[i][0], segments[i-1][1]) - max(segments[i][1], segments[i-1][0]))\n    return max_length\n\nn = int(input())\nsegments = [tuple(map(int, input().split())) for _ in range(n)]\nprint(solve(segments))\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution 1 - O(n log n)\n\ndef solve(segments):\n    segments.sort()\n    current_max_length = 0\n    for i in range(len(segments) - 1):\n        current_max_length = max(current_max_length, min(segments[i][0], segments[i+1][1]) - max(segments[i][1], segments[i+1][0]))\n\n    return current_max_length\n\nn = int(input())\nsegments = [tuple(map(int, input().split())) for _ in range(n)]\nprint(solve(segments))\n"
    }
  ],
  "created": 1648688562,
  "object": "edit"
}
2022-03-30 21:02:47.636638 fix syntax errors 2 ['\n# Solution 1\ndef solve(segments):\n    segments.sort()\n    max_length = 0\n    for i in range(1, len(segments)):\n        max_length = max(max_length, min(segments[i][0], segments[i-1][1]) - max(segments[i][1], segments[i-1][0]))\n    return max_length\n\nn = int(input())\nsegments = [tuple(map(int, input().split())) for _ in range(n)]\nprint(solve(segments))\n', '\n\n# Solution 1 - O(n log n)\n\ndef solve(segments):\n    segments.sort()\n    current_max_length = 0\n    for i in range(len(segments) - 1):\n        current_max_length = max(current_max_length, min(segments[i][0], segments[i+1][1]) - max(segments[i][1], segments[i+1][0]))\n\n    return current_max_length\n\nn = int(input())\nsegments = [tuple(map(int, input().split())) for _ in range(n)]\nprint(solve(segments))\n']
2022-03-30 21:02:47.636696 size on output set 3
2022-03-30 21:02:47.636712 num operations 2
2022-03-30 21:02:47.636719 size on input set 1
2022-03-30 21:02:50.112016 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n#\nn = int(raw_input())\n\nsegments = []\nfor i in xrange(n):\n    segments.append(map(int, raw_input().split()))\n\nsegments = sorted(segments, key=lambda x: x[1])\n\nresult = float(\"-inf\")\n\nfor i in xrange(n):\n    left = segments[i][0]\n    right = segments[i][1]\n    max_right = right\n    max_left = left\n    for j in xrange(i + 1, n):\n        if segments[j][0] <= right:\n            max_left = max(max_left, segments[j][0])\n        else:\n            break\n    for j in xrange(i - 1, -1, -1):\n        if segments[j][1] >= left:\n            max_right = min(max_right, segments[j][1])\n        else:\n            break\n    result = max(max_right - max_left, result)\n\nprint result\n"
    },
    {
      "index": 1,
      "text": "\nn = int(raw_input())\n\nsegments = []\nfor i in xrange(n):\n    segments.append(map(int, raw_input().split()))\n\nsegments = sorted(segments, key=lambda x: x[1])\n\nresult = float(\"-inf\")\n\nfor i in xrange(n):\n    left = segments[i][0]\n    right = segments[i][1]\n    max_right = right\n    max_left = left\n    for j in xrange(i + 1, n):\n        if segments[j][0] <= right:\n            max_left = max(max_left, segments[j][0])\n        else:\n            break\n    for j in xrange(i - 1, -1, -1):\n        if segments[j][1] >= left:\n            max_right = min(max_right, segments[j][1])\n        else:\n            break\n    result = max(max_right - max_left, result)\n\nprint result\n"
    }
  ],
  "created": 1648688567,
  "object": "edit"
}
2022-03-30 21:02:50.112376 fix spelling mistakes 2 ['\n#\nn = int(raw_input())\n\nsegments = []\nfor i in xrange(n):\n    segments.append(map(int, raw_input().split()))\n\nsegments = sorted(segments, key=lambda x: x[1])\n\nresult = float("-inf")\n\nfor i in xrange(n):\n    left = segments[i][0]\n    right = segments[i][1]\n    max_right = right\n    max_left = left\n    for j in xrange(i + 1, n):\n        if segments[j][0] <= right:\n            max_left = max(max_left, segments[j][0])\n        else:\n            break\n    for j in xrange(i - 1, -1, -1):\n        if segments[j][1] >= left:\n            max_right = min(max_right, segments[j][1])\n        else:\n            break\n    result = max(max_right - max_left, result)\n\nprint result\n', '\nn = int(raw_input())\n\nsegments = []\nfor i in xrange(n):\n    segments.append(map(int, raw_input().split()))\n\nsegments = sorted(segments, key=lambda x: x[1])\n\nresult = float("-inf")\n\nfor i in xrange(n):\n    left = segments[i][0]\n    right = segments[i][1]\n    max_right = right\n    max_left = left\n    for j in xrange(i + 1, n):\n        if segments[j][0] <= right:\n            max_left = max(max_left, segments[j][0])\n        else:\n            break\n    for j in xrange(i - 1, -1, -1):\n        if segments[j][1] >= left:\n            max_right = min(max_right, segments[j][1])\n        else:\n            break\n    result = max(max_right - max_left, result)\n\nprint result\n']
2022-03-30 21:02:50.112579 size on output set 2
2022-03-30 21:02:50.112588 size on input set 2
2022-03-30 21:02:54.993873 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(raw_input())\n\nsegments = []\nfor i in range(n):\n    segments.append(map(int, raw_input().split()))\n\nsegments = sorted(segments, key=lambda x: x[1])\n\nresult = float(\"-inf\")\n\nfor i in range(n):\n    left = segments[i][0]\n    right = segments[i][1]\n    max_right = right\n    max_left = left\n    for j in range(i + 1, n):\n        if segments[j][0] <= right:\n            max_left = max(max_left, segments[j][0])\n        else:\n            break\n    for j in range(i - 1, -1, -1):\n        if segments[j][1] >= left:\n            max_right = min(max_right, segments[j][1])\n        else:\n            break\n    result = max(max_right - max_left, result)\n\nprint result\n"
    },
    {
      "index": 1,
      "text": "n = int(raw_input())\n\nsegments = []\nfor i in xrange(n):\n    segments.append(list(map(int, raw_input().split())))\n\nsegments = sorted(segments, key=lambda x: x[1])\n\nresult = float(\"-inf\")\n\nfor i in xrange(n):\n    left = segments[i][0]\n    right = segments[i][1]\n    max_right = right\n    max_left = left\n    for j in range(i + 1, n):\n        if segments[j][0] <= right:\n            max_left = max(max_left, segments[j][0])\n        else:\n            break\n    for j in range(i - 1, -1, -1):\n        if segments[j][1] >= left:\n            max_right = min(max_right, segments[j][1])\n        else:\n            break\n    result = max(max_right - max_left, result)\n\nprint result\n"
    }
  ],
  "created": 1648688570,
  "object": "edit"
}
2022-03-30 21:02:54.994461 fix syntax errors 2 ['n = int(raw_input())\n\nsegments = []\nfor i in range(n):\n    segments.append(map(int, raw_input().split()))\n\nsegments = sorted(segments, key=lambda x: x[1])\n\nresult = float("-inf")\n\nfor i in range(n):\n    left = segments[i][0]\n    right = segments[i][1]\n    max_right = right\n    max_left = left\n    for j in range(i + 1, n):\n        if segments[j][0] <= right:\n            max_left = max(max_left, segments[j][0])\n        else:\n            break\n    for j in range(i - 1, -1, -1):\n        if segments[j][1] >= left:\n            max_right = min(max_right, segments[j][1])\n        else:\n            break\n    result = max(max_right - max_left, result)\n\nprint result\n', 'n = int(raw_input())\n\nsegments = []\nfor i in xrange(n):\n    segments.append(list(map(int, raw_input().split())))\n\nsegments = sorted(segments, key=lambda x: x[1])\n\nresult = float("-inf")\n\nfor i in xrange(n):\n    left = segments[i][0]\n    right = segments[i][1]\n    max_right = right\n    max_left = left\n    for j in range(i + 1, n):\n        if segments[j][0] <= right:\n            max_left = max(max_left, segments[j][0])\n        else:\n            break\n    for j in range(i - 1, -1, -1):\n        if segments[j][1] >= left:\n            max_right = min(max_right, segments[j][1])\n        else:\n            break\n    result = max(max_right - max_left, result)\n\nprint result\n']
2022-03-30 21:02:57.568249 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(raw_input())\n\nsegments = []\nfor i in xrange(n):\n    segments.append(map(int, raw_input().split()))\n\nsegments = sorted(segments, key=lambda x: x[1])\n\nresult = float(\"-inf\")\n\nfor i in xrange(n):\n    left = segments[i][0]\n    right = segments[i][1]\n    max_right = right\n    max_left = left\n    for j in xrange(i + 1, n):\n        if segments[j][0] <= right:\n            max_left = max(max_left, segments[j][0])\n        else:\n            break\n    for j in xrange(i - 1, -1, -1):\n        if segments[j][1] >= left:\n            max_right = min(max_right, segments[j][1])\n        else:\n            break\n    result = max(max_right - max_left, result)\n\nprint result\n"
    },
    {
      "index": 1,
      "text": "\n# \nn = int(raw_input())\n\nsegments = []\nfor i in xrange(n):\n    segments.append(map(int, raw_input().split()))\n\nsegments = sorted(segments, key=lambda x: x[1])\n\nresult = float(\"-inf\")\n\nfor i in xrange(n):\n    left = segments[i][0]\n    right = segments[i][1]\n    max_right = right\n    max_left = left\n    for j in xrange(i + 1, n):\n        if segments[j][0] <= right:\n            max_left = max(max_left, segments[j][0])\n        else:\n            break\n    for j in xrange(i - 1, -1, -1):\n        if segments[j][1] >= left:\n            max_right = min(max_right, segments[j][1])\n        else:\n            break\n    result = max(max_right - max_left, result)\n\nprint result\n"
    }
  ],
  "created": 1648688575,
  "object": "edit"
}
2022-03-30 21:02:57.568774 fix syntax errors 2 ['n = int(raw_input())\n\nsegments = []\nfor i in xrange(n):\n    segments.append(map(int, raw_input().split()))\n\nsegments = sorted(segments, key=lambda x: x[1])\n\nresult = float("-inf")\n\nfor i in xrange(n):\n    left = segments[i][0]\n    right = segments[i][1]\n    max_right = right\n    max_left = left\n    for j in xrange(i + 1, n):\n        if segments[j][0] <= right:\n            max_left = max(max_left, segments[j][0])\n        else:\n            break\n    for j in xrange(i - 1, -1, -1):\n        if segments[j][1] >= left:\n            max_right = min(max_right, segments[j][1])\n        else:\n            break\n    result = max(max_right - max_left, result)\n\nprint result\n', '\n# \nn = int(raw_input())\n\nsegments = []\nfor i in xrange(n):\n    segments.append(map(int, raw_input().split()))\n\nsegments = sorted(segments, key=lambda x: x[1])\n\nresult = float("-inf")\n\nfor i in xrange(n):\n    left = segments[i][0]\n    right = segments[i][1]\n    max_right = right\n    max_left = left\n    for j in xrange(i + 1, n):\n        if segments[j][0] <= right:\n            max_left = max(max_left, segments[j][0])\n        else:\n            break\n    for j in xrange(i - 1, -1, -1):\n        if segments[j][1] >= left:\n            max_right = min(max_right, segments[j][1])\n        else:\n            break\n    result = max(max_right - max_left, result)\n\nprint result\n']
2022-03-30 21:02:57.568868 size on output set 4
