2022-03-30 21:32:58.030113 num operations 2
2022-03-30 21:32:58.030149 size on input set 1
2022-03-30 21:33:06.262710 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "var fs = require('fs');\n\nvar file = process.argv[2];\n\nfs.readFile(file, function(err, data) {\n  if (err) throw err;\n\n  var lines = data.toString().split('\\n').length - 1;\n  console.log(lines);\n});\n"
    },
    {
      "index": 1,
      "text": "const fs = require('fs');\n\nfs.readFile('./file.txt', (err, data) => {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log(data.toString());\n    }\n});\n\nfs.writeFile('./file.txt', 'Hello World', (err) => {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('File has been written');\n    }\n});\n\nfs.appendFile('./file.txt', '\\nHello World', (err) => {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('File has been written');\n    }\n});\n\nfs.rename('./file.txt', './file2.txt', (err) => {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('File has been renamed');\n    }\n});\n\nfs.unlink('./file2.txt', (err) => {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('File has been deleted');\n    }\n});\n"
    }
  ],
  "created": 1648690378,
  "object": "edit"
}
2022-03-30 21:33:06.262889 fix spelling mistakes 2 ["var fs = require('fs');\n\nvar file = process.argv[2];\n\nfs.readFile(file, function(err, data) {\n  if (err) throw err;\n\n  var lines = data.toString().split('\\n').length - 1;\n  console.log(lines);\n});\n", "const fs = require('fs');\n\nfs.readFile('./file.txt', (err, data) => {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log(data.toString());\n    }\n});\n\nfs.writeFile('./file.txt', 'Hello World', (err) => {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('File has been written');\n    }\n});\n\nfs.appendFile('./file.txt', '\\nHello World', (err) => {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('File has been written');\n    }\n});\n\nfs.rename('./file.txt', './file2.txt', (err) => {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('File has been renamed');\n    }\n});\n\nfs.unlink('./file2.txt', (err) => {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('File has been deleted');\n    }\n});\n"]
2022-03-30 21:33:06.262909 size on output set 2
2022-03-30 21:33:06.262914 size on input set 2
2022-03-30 21:33:13.229590 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "const fs = require('fs');\n\nfs.readFile('./file.txt', (err, data) => { // Read file\n    if (err) {\n        console.log(err);\n    } else {\n        console.log(data.toString());\n    }\n});\n\nfs.writeFile('./file.txt', 'Hello World', (err) => { // Write file\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('File has been written');\n    }\n});\n\nfs.appendFile('./file.txt', '\\nHello World', (err) => { // Append file\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('File has been written');\n    }\n});\n\nfs.rename('./file.txt', './file2.txt', (err) => { // Rename file\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('File has been renamed');\n    }\n});\n\nfs.unlink('./file2.txt', (err) => { // Delete file\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('File has been deleted');\n    }\n});\n"
    },
    {
      "index": 1,
      "text": "const fs = require('fs');\n\nfs.readFile('./file.txt', (err, data) => {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log(data.toString());\n    }\n});\n\nfs.writeFile('./file.txt', 'Hello World!', (err) => {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('File has been written');\n    }\n});\n\nfs.appendFile('./file.txt', '\\nHello World!', (err) => {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('File has been written');\n    }\n});\n\nfs.rename('./file.txt', './file2.txt', (err) => {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('File has been renamed');\n    }\n});\n\nfs.unlink('./file2.txt', (err) => {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('File has been deleted');\n    }\n});\n"
    }
  ],
  "created": 1648690386,
  "object": "edit"
}
2022-03-30 21:33:13.229980 fix syntax errors 2 ["const fs = require('fs');\n\nfs.readFile('./file.txt', (err, data) => { // Read file\n    if (err) {\n        console.log(err);\n    } else {\n        console.log(data.toString());\n    }\n});\n\nfs.writeFile('./file.txt', 'Hello World', (err) => { // Write file\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('File has been written');\n    }\n});\n\nfs.appendFile('./file.txt', '\\nHello World', (err) => { // Append file\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('File has been written');\n    }\n});\n\nfs.rename('./file.txt', './file2.txt', (err) => { // Rename file\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('File has been renamed');\n    }\n});\n\nfs.unlink('./file2.txt', (err) => { // Delete file\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('File has been deleted');\n    }\n});\n", "const fs = require('fs');\n\nfs.readFile('./file.txt', (err, data) => {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log(data.toString());\n    }\n});\n\nfs.writeFile('./file.txt', 'Hello World!', (err) => {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('File has been written');\n    }\n});\n\nfs.appendFile('./file.txt', '\\nHello World!', (err) => {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('File has been written');\n    }\n});\n\nfs.rename('./file.txt', './file2.txt', (err) => {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('File has been renamed');\n    }\n});\n\nfs.unlink('./file2.txt', (err) => {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('File has been deleted');\n    }\n});\n"]
2022-03-30 21:33:18.362374 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "var fs = require(\"fs\");\n\nvar file = process.argv[2];\n\nfs.readFile(file, function (err, data) {\n  if (err) throw err;\n\n  var lines = data.toString().split(\"\\n\").length - 1;\n  console.log(lines);\n});\n"
    },
    {
      "index": 1,
      "text": "const fs = require('fs');\n\nconst file = process.argv[2];\n\nfs.readFile(file, (err, data) => {\n  if (err) throw err;\n\n  const lines = data.toString().split('\\n').length - 1;\n  console.log(lines);\n});\n"
    }
  ],
  "created": 1648690393,
  "object": "edit"
}
2022-03-30 21:33:18.362569 fix syntax errors 2 ['var fs = require("fs");\n\nvar file = process.argv[2];\n\nfs.readFile(file, function (err, data) {\n  if (err) throw err;\n\n  var lines = data.toString().split("\\n").length - 1;\n  console.log(lines);\n});\n', "const fs = require('fs');\n\nconst file = process.argv[2];\n\nfs.readFile(file, (err, data) => {\n  if (err) throw err;\n\n  const lines = data.toString().split('\\n').length - 1;\n  console.log(lines);\n});\n"]
2022-03-30 21:33:18.362664 size on output set 4
2022-03-30 21:33:18.362709 num operations 2
2022-03-30 21:33:18.362717 size on input set 1
2022-03-30 21:33:20.753562 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\na = [int(x) for x in input().split()]\n\na = list(reversed(a))\n\nb = []\nfor i in range(len(a)):\n    if a[i] not in b:\n        b.append(a[i])\n\nprint(len(b))\nprint(*b[::-1])\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\na = [int(x) for x in input().split()]\n\na = list(reversed(a))\n\nb = []\nfor i in range(len(a)):\n    if a[i] not in b:\n        b.append(a[i])\n\nprint(len(b))\nprint(*b[::-1])\n"
    }
  ],
  "created": 1648690398,
  "object": "edit"
}
2022-03-30 21:33:20.754002 fix spelling mistakes 2 ['n = int(input())\na = [int(x) for x in input().split()]\n\na = list(reversed(a))\n\nb = []\nfor i in range(len(a)):\n    if a[i] not in b:\n        b.append(a[i])\n\nprint(len(b))\nprint(*b[::-1])\n', 'n = int(input())\na = [int(x) for x in input().split()]\n\na = list(reversed(a))\n\nb = []\nfor i in range(len(a)):\n    if a[i] not in b:\n        b.append(a[i])\n\nprint(len(b))\nprint(*b[::-1])\n']
2022-03-30 21:33:20.754041 size on output set 1
2022-03-30 21:33:20.754048 size on input set 1
2022-03-30 21:33:30.949450 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    a = list(reversed(a))\n\n    b = []\n    for i in range(len(a)):\n        if a[i] not in b:\n            b.append(a[i])\n\n    print(len(b))\n    print(*b[::-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "n = int(input())  # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435\na = [int(x) for x in input().split()]  # \u043c\u0430\u0441\u0441\u0438\u0432\n\na = list(reversed(a))  # \u0440\u0430\u0437\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u0435\u043c \u043c\u0430\u0441\u0441\u0438\u0432\n\nb = []  # \u043c\u0430\u0441\u0441\u0438\u0432 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432\nfor i in range(len(a)):\n    if a[i] not in b:  # \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432, \u0435\u0441\u043b\u0438 \u0435\u0433\u043e \u0442\u0430\u043c \u043d\u0435\u0442\n        b.append(a[i])\n\nprint(len(b))  # \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432\nprint(*b[::-1])  # \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b\n"
    }
  ],
  "created": 1648690401,
  "object": "edit"
}
2022-03-30 21:33:30.949709 fix syntax errors 2 ['import sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    a = list(reversed(a))\n\n    b = []\n    for i in range(len(a)):\n        if a[i] not in b:\n            b.append(a[i])\n\n    print(len(b))\n    print(*b[::-1])\n\nif __name__ == "__main__":\n    main()\n', 'n = int(input())  # количество элементов в массиве\na = [int(x) for x in input().split()]  # массив\n\na = list(reversed(a))  # разворачиваем массив\n\nb = []  # массив для хранения уникальных элементов\nfor i in range(len(a)):\n    if a[i] not in b:  # добавляем элемент в массив, если его там нет\n        b.append(a[i])\n\nprint(len(b))  # выводим количество уникальных элементов\nprint(*b[::-1])  # выводим уникальные элементы\n']
2022-03-30 21:33:30.949746 size on output set 2
