["n = int(input())\na = []\nfor i in range(2 * n - 2):\n    a.append(input())\n\nans = []\nfor i in range(2 * n - 2):\n    if a[i] not in ans:\n        ans.append(a[i])\n\nfor i in range(2 * n - 2):\n    if a[i] in ans:\n        print(\"P\", end=\"\")\n        ans.remove(a[i])\n    else:\n        print(\"S\", end=\"\")\n", "n = int(input())\n\nprefixes = []\nsuffixes = []\n\nfor i in range(2 * n - 2):\n    string = input()\n    if len(string) == 1:\n        prefixes.append(string)\n    else:\n        suffixes.append(string)\n\nsuffixes.sort(key = lambda x: -len(x))\n\nstring = ''\n\nfor i in range(2 * n - 2):\n    if i % 2 == 0:\n        string += 'P'\n    else:\n        string += 'S'\n\nfor i in range(len(prefixes)):\n    string = string.replace('P', prefixes[i][0], 1)\n\nfor i in range(len(suffixes)):\n    string = string.replace('S', suffixes[i][-1], 1)\n\nprint(string)\n", "\nn = int(input())\n\nprefixes = []\nsuffixes = []\n\nfor i in range(2 * n - 2):\n    string = input()\n    if len(string) == 1:\n        prefixes.append(string)\n    else:\n        suffixes.append(string)\n\nsuffixes.sort(key = lambda x: -len(x))\n\nstring = ''\n\nfor i in range(2 * n - 2):\n    if i % 2 == 0:\n        string += 'P'\n    else:\n        string += 'S'\n\nfor i in range(len(prefixes)):\n    string = string.replace('P', prefixes[i][0], 1)\n\nfor i in range(len(suffixes)):\n    string = string.replace('S', suffixes[i][-1], 1)\n\nprint(string)\n", "\n\nn = int(input())\n\nprefixes = []\nsuffixes = []\n\nfor i in range(2 * n - 2):\n    string = input()\n    if len(string) == 1:\n        prefixes.append(string)\n    else:\n        suffixes.append(string)\n\nsuffixes.sort(key = lambda x: -len(x))\n\nstring = ''\n\nfor i in range(2 * n - 2):\n    if i % 2 == 0:\n        string += 'S'\n    else:\n        string += 'P'\n\nfor i in range(len(prefixes)):\n    string = string.replace('S', prefixes[i][0], 1)\n\nfor i in range(len(suffixes)):\n    string = string.replace('P', suffixes[i][-1], 1)\n\nprint(string)\n", "n = int(input())\na = []\nfor i in range(2*n-2):\n    a.append(input())\n\nans = []\nfor i in range(2*n-2):\n    if a[i] not in ans:\n        ans.append(a[i])\n\nfor i in range(2*n-2):\n    if a[i] in ans:\n        print(\"P\", end=\"\")\n        ans.remove(a[i])\n    else:\n        print(\"S\", end=\"\")\n", "\n\nn = int(input()) # number of test cases\n\nprefixes = []\nsuffixes = []\n\nfor i in range(2 * n - 2): # number of strings\n\tstring = input()\n\tif len(string) == 1: # if string is prefix\n\t\tprefixes.append(string)\n\telse: # if string is suffix\n\t\tsuffixes.append(string)\n\nsuffixes.sort(key = lambda x: -len(x)) # sort suffixes in descending order\n\nstring = ''\n\nfor i in range(2 * n - 2): # create string with S and P\n\tif i % 2 == 0:\n\t\tstring += 'S'\n\telse:\n\t\tstring += 'P'\n\nfor i in range(len(prefixes)): # replace S with prefixes\n\tstring = string.replace('S', prefixes[i][0], 1)\n\nfor i in range(len(suffixes)): # replace P with suffixes\n\tstring = string.replace('P', suffixes[i][-1], 1)\n\nprint(string)\n"]