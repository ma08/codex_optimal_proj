2022-03-30 20:53:42.492320 num operations 2
2022-03-30 20:53:42.492350 size on input set 1
2022-03-30 20:53:46.605463 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom functools import reduce\nfrom collections import Counter\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a*b) // gcd(a, b)\n\ndef main():\n    n = int(input())\n    divisors = Counter(map(int, input().split()))\n    l = reduce(lcm, divisors.keys())\n    g = l\n    for divisor, count in divisors.items():\n        if count == 1:\n            g = lcm(g, divisor)\n    print(l, g)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nfrom functools import reduce\nfrom collections import Counter\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a*b) // gcd(a, b)\n\ndef main():\n    n = int(input())\n    divisors = Counter(map(int, input().split()))\n    x = reduce(lcm, divisors.keys())\n    y = x\n    for divisor, count in divisors.items():\n        if count == 1:\n            y = lcm(y, divisor)\n    print(x, y)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1648688022,
  "object": "edit"
}
2022-03-30 20:53:46.605759 fix spelling mistakes 2 ['\n\nfrom functools import reduce\nfrom collections import Counter\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a*b) // gcd(a, b)\n\ndef main():\n    n = int(input())\n    divisors = Counter(map(int, input().split()))\n    l = reduce(lcm, divisors.keys())\n    g = l\n    for divisor, count in divisors.items():\n        if count == 1:\n            g = lcm(g, divisor)\n    print(l, g)\n\nif __name__ == "__main__":\n    main()\n', '\nfrom functools import reduce\nfrom collections import Counter\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a*b) // gcd(a, b)\n\ndef main():\n    n = int(input())\n    divisors = Counter(map(int, input().split()))\n    x = reduce(lcm, divisors.keys())\n    y = x\n    for divisor, count in divisors.items():\n        if count == 1:\n            y = lcm(y, divisor)\n    print(x, y)\n\nif __name__ == "__main__":\n    main()\n']
2022-03-30 20:53:46.605800 size on output set 2
2022-03-30 20:53:46.605807 size on input set 2
2022-03-30 20:53:49.722125 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom functools import reduce\nfrom collections import Counter\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef main():\n    n = int(input())\n    divisors = Counter(map(int, input().split()))\n    l = reduce(lcm, divisors.keys())\n    g = l\n    for divisor, count in divisors.items():\n        if count == 1:\n            g = lcm(g, divisor)\n    print(l, g)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nfrom functools import reduce\nfrom collections import Counter\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef main():\n    n = int(input())\n    divisors = Counter(map(int, input().split()))\n    l = reduce(lcm, divisors.keys())\n    g = l\n    for divisor, count in divisors.items():\n        if count == 1:\n            g = lcm(g, divisor)\n    print(l, g)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1648688026,
  "object": "edit"
}
2022-03-30 20:53:49.722270 fix syntax errors 2 ['\n\nfrom functools import reduce\nfrom collections import Counter\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef main():\n    n = int(input())\n    divisors = Counter(map(int, input().split()))\n    l = reduce(lcm, divisors.keys())\n    g = l\n    for divisor, count in divisors.items():\n        if count == 1:\n            g = lcm(g, divisor)\n    print(l, g)\n\nif __name__ == "__main__":\n    main()\n', '\nfrom functools import reduce\nfrom collections import Counter\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef main():\n    n = int(input())\n    divisors = Counter(map(int, input().split()))\n    l = reduce(lcm, divisors.keys())\n    g = l\n    for divisor, count in divisors.items():\n        if count == 1:\n            g = lcm(g, divisor)\n    print(l, g)\n\nif __name__ == "__main__":\n    main()\n']
2022-03-30 20:53:52.657618 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom functools import reduce\nfrom collections import Counter\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef main():\n    n = int(input())\n    divisors = Counter(map(int, input().split()))\n    x = reduce(lcm, divisors.keys())\n    y = x\n    for divisor, count in divisors.items():\n        if count == 1:\n            y = lcm(y, divisor)\n    print(x, y)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nfrom functools import reduce\nfrom collections import Counter\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef main():\n    n = int(input())\n    divisors = Counter(map(int, input().split()))\n    x = reduce(lcm, divisors.keys())\n    y = x\n    for divisor, count in divisors.items():\n        if count == 1:\n            y = lcm(y, divisor)\n    print(x, y)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1648688029,
  "object": "edit"
}
2022-03-30 20:53:52.657900 fix syntax errors 2 ['\nfrom functools import reduce\nfrom collections import Counter\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef main():\n    n = int(input())\n    divisors = Counter(map(int, input().split()))\n    x = reduce(lcm, divisors.keys())\n    y = x\n    for divisor, count in divisors.items():\n        if count == 1:\n            y = lcm(y, divisor)\n    print(x, y)\n\nif __name__ == "__main__":\n    main()\n', '\nfrom functools import reduce\nfrom collections import Counter\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef main():\n    n = int(input())\n    divisors = Counter(map(int, input().split()))\n    x = reduce(lcm, divisors.keys())\n    y = x\n    for divisor, count in divisors.items():\n        if count == 1:\n            y = lcm(y, divisor)\n    print(x, y)\n\nif __name__ == "__main__":\n    main()\n']
2022-03-30 20:53:52.657934 size on output set 3
2022-03-30 20:53:52.657944 num operations 2
2022-03-30 20:53:52.657949 size on input set 1
2022-03-30 20:53:55.873540 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    divisors = [int(x) for x in sys.stdin.readline().split()]\n\n    x = 1\n    y = 1\n    for i in range(n):\n        if i < n // 2:\n            x *= divisors[i]\n        else:\n            y *= divisors[i]\n\n    print(x, y)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    divisors = [int(x) for x in sys.stdin.readline().split()]\n\n    x = 1\n    y = 1\n    for i in range(n):\n        if i < n/2:\n            x *= divisors[i]\n        else:\n            y *= divisors[i]\n\n    print(x, y)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1648688033,
  "object": "edit"
}
2022-03-30 20:53:55.873675 fix spelling mistakes 2 ["\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    divisors = [int(x) for x in sys.stdin.readline().split()]\n\n    x = 1\n    y = 1\n    for i in range(n):\n        if i < n // 2:\n            x *= divisors[i]\n        else:\n            y *= divisors[i]\n\n    print(x, y)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    divisors = [int(x) for x in sys.stdin.readline().split()]\n\n    x = 1\n    y = 1\n    for i in range(n):\n        if i < n/2:\n            x *= divisors[i]\n        else:\n            y *= divisors[i]\n\n    print(x, y)\n\nif __name__ == '__main__':\n    main()\n"]
2022-03-30 20:53:55.873743 size on output set 2
2022-03-30 20:53:55.873747 size on input set 2
2022-03-30 20:53:59.981037 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    divisors = [int(x) for x in input().split()]\n\n    x = 1\n    y = 1\n    for i in range(n):\n        if i < n // 2:\n            x *= divisors[i]\n        else:\n            y *= divisors[i]\n\n    print(x, y, end=' ')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    divisors = [int(x) for x in sys.stdin.readline().split()]\n\n    x = 1\n    y = 1\n    for i in range(n):\n        if i < n // 2:\n            x *= divisors[i]\n        else:\n            y *= divisors[i]\n\n    print(x, y)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1648688036,
  "object": "edit"
}
2022-03-30 20:53:59.981355 fix syntax errors 2 ["\nimport sys\n\ndef main():\n    n = int(input())\n    divisors = [int(x) for x in input().split()]\n\n    x = 1\n    y = 1\n    for i in range(n):\n        if i < n // 2:\n            x *= divisors[i]\n        else:\n            y *= divisors[i]\n\n    print(x, y, end=' ')\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    divisors = [int(x) for x in sys.stdin.readline().split()]\n\n    x = 1\n    y = 1\n    for i in range(n):\n        if i < n // 2:\n            x *= divisors[i]\n        else:\n            y *= divisors[i]\n\n    print(x, y)\n\nif __name__ == '__main__':\n    main()\n"]
2022-03-30 20:54:03.822459 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    divisors = [int(x) for x in sys.stdin.readline().split()]\n\n    x = 1\n    y = 1\n    for i in range(n):\n        if i < n // 2:\n            x *= divisors[i]\n        else:\n            y *= divisors[i]\n\n    print(x, y)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    divisors = [int(x) for x in sys.stdin.readline().strip().split()]\n\n    x = 1\n    y = 1\n    for i in range(n):\n        if i < n/2:\n            x *= divisors[i]\n        else:\n            y *= divisors[i]\n\n    print(x, y)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1648688040,
  "object": "edit"
}
2022-03-30 20:54:03.822793 fix syntax errors 2 ["#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    divisors = [int(x) for x in sys.stdin.readline().split()]\n\n    x = 1\n    y = 1\n    for i in range(n):\n        if i < n // 2:\n            x *= divisors[i]\n        else:\n            y *= divisors[i]\n\n    print(x, y)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    divisors = [int(x) for x in sys.stdin.readline().strip().split()]\n\n    x = 1\n    y = 1\n    for i in range(n):\n        if i < n/2:\n            x *= divisors[i]\n        else:\n            y *= divisors[i]\n\n    print(x, y)\n\nif __name__ == '__main__':\n    main()\n"]
2022-03-30 20:54:03.822829 size on output set 4
