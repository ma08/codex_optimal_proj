2022-03-30 21:25:52.822647 num operations 2
2022-03-30 21:25:52.822677 size on input set 1
2022-03-30 21:25:55.861632 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# My version 1\n# Time complexity: O(n)\n# Space complexity: O(n)\ndef staircase_v1(N, M, a_list):\n    dp = [0] * (N + 1)\n    dp[0] = 1\n    dp[1] = 1\n    for i in range(2, N + 1):\n        if i not in a_list:\n            dp[i] = dp[i - 1] + dp[i - 2]\n        else:\n            dp[i] = dp[i - 1]\n    return dp[N]\n\n# My version 2\n# Time complexity: O(n)\n# Space complexity: O(1)\ndef staircase_v2(N, M, a_list):\n    a = 1\n    b = 1\n    for i in range(2, N + 1):\n        if i not in a_list:\n            a, b = b, a + b\n        else:\n            a = b\n    return b\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    a_list = list(map(int, [input() for _ in range(M)]))\n    print(staircase_v2(N, M, a_list))\n"
    },
    {
      "index": 1,
      "text": "\n\n# My version 1\n# Time complexity: O(n)\n# Space complexity: O(n)\ndef staircase_v1(N, M, a_list):\n    dp = [0] * (N + 1)\n    dp[0] = 1\n    dp[1] = 1\n    for i in range(2, N + 1):\n        if i not in a_list:\n            dp[i] = dp[i - 1] + dp[i - 2]\n        else:\n            dp[i] = dp[i - 1]\n    return dp[N]\n\n# My version 2\n# Time complexity: O(n)\n# Space complexity: O(1)\ndef staircase_v2(N, M, a_list):\n    a = 1\n    b = 1\n    for i in range(2, N + 1):\n        if i not in a_list:\n            a, b = b, a + b\n        else:\n            a = b\n    return b\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    a_list = list(map(int, [input() for _ in range(M)]))\n    print(staircase_v2(N, M, a_list))\n"
    }
  ],
  "created": 1648689953,
  "object": "edit"
}
2022-03-30 21:25:55.861768 fix spelling mistakes 2 ["\n\n# My version 1\n# Time complexity: O(n)\n# Space complexity: O(n)\ndef staircase_v1(N, M, a_list):\n    dp = [0] * (N + 1)\n    dp[0] = 1\n    dp[1] = 1\n    for i in range(2, N + 1):\n        if i not in a_list:\n            dp[i] = dp[i - 1] + dp[i - 2]\n        else:\n            dp[i] = dp[i - 1]\n    return dp[N]\n\n# My version 2\n# Time complexity: O(n)\n# Space complexity: O(1)\ndef staircase_v2(N, M, a_list):\n    a = 1\n    b = 1\n    for i in range(2, N + 1):\n        if i not in a_list:\n            a, b = b, a + b\n        else:\n            a = b\n    return b\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    a_list = list(map(int, [input() for _ in range(M)]))\n    print(staircase_v2(N, M, a_list))\n", "\n\n# My version 1\n# Time complexity: O(n)\n# Space complexity: O(n)\ndef staircase_v1(N, M, a_list):\n    dp = [0] * (N + 1)\n    dp[0] = 1\n    dp[1] = 1\n    for i in range(2, N + 1):\n        if i not in a_list:\n            dp[i] = dp[i - 1] + dp[i - 2]\n        else:\n            dp[i] = dp[i - 1]\n    return dp[N]\n\n# My version 2\n# Time complexity: O(n)\n# Space complexity: O(1)\ndef staircase_v2(N, M, a_list):\n    a = 1\n    b = 1\n    for i in range(2, N + 1):\n        if i not in a_list:\n            a, b = b, a + b\n        else:\n            a = b\n    return b\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    a_list = list(map(int, [input() for _ in range(M)]))\n    print(staircase_v2(N, M, a_list))\n"]
2022-03-30 21:25:55.861788 size on output set 1
2022-03-30 21:25:55.861792 size on input set 1
2022-03-30 21:25:59.029578 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# My version 1\n# Time complexity: O(n)\n# Space complexity: O(n)\ndef staircase_v1(N, M, a_list):\n    dp = [0] * (N + 1)\n    dp[0] = 1\n    dp[1] = 1\n    for i in range(2, N + 1):\n        if i not in a_list:\n            dp[i] = dp[i - 1] + dp[i - 2]\n        else:\n            dp[i] = dp[i - 1]\n    return dp[N]\n\n\n# My version 2\n# Time complexity: O(n)\n# Space complexity: O(1)\ndef staircase_v2(N, M, a_list):\n    a = 1\n    b = 1\n    for i in range(2, N + 1):\n        if i not in a_list:\n            a, b = b, a + b\n        else:\n            a = b\n    return b\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    a_list = list(map(int, [input() for _ in range(M)]))\n    print(staircase_v2(N, M, a_list))\n"
    },
    {
      "index": 1,
      "text": "\n\n# My version 1: DP\n# Time complexity: O(n)\n# Space complexity: O(n)\ndef staircase_v1(N, M, a_list):\n    dp = [0] * (N + 1)\n    dp[0] = 1\n    dp[1] = 1\n    for i in range(2, N + 1):\n        if i not in a_list:\n            dp[i] = dp[i - 1] + dp[i - 2]\n        else:\n            dp[i] = dp[i - 1]\n    return dp[N]\n\n# My version 2: DP\n# Time complexity: O(n)\n# Space complexity: O(1)\ndef staircase_v2(N, M, a_list):\n    a = 1\n    b = 1\n    for i in range(2, N + 1):\n        if i not in a_list:\n            a, b = b, a + b\n        else:\n            a = b\n    return b\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    a_list = list(map(int, [input() for _ in range(M)]))\n    print(staircase_v2(N, M, a_list))\n"
    }
  ],
  "created": 1648689956,
  "object": "edit"
}
2022-03-30 21:25:59.029742 fix syntax errors 2 ["\n\n# My version 1\n# Time complexity: O(n)\n# Space complexity: O(n)\ndef staircase_v1(N, M, a_list):\n    dp = [0] * (N + 1)\n    dp[0] = 1\n    dp[1] = 1\n    for i in range(2, N + 1):\n        if i not in a_list:\n            dp[i] = dp[i - 1] + dp[i - 2]\n        else:\n            dp[i] = dp[i - 1]\n    return dp[N]\n\n\n# My version 2\n# Time complexity: O(n)\n# Space complexity: O(1)\ndef staircase_v2(N, M, a_list):\n    a = 1\n    b = 1\n    for i in range(2, N + 1):\n        if i not in a_list:\n            a, b = b, a + b\n        else:\n            a = b\n    return b\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    a_list = list(map(int, [input() for _ in range(M)]))\n    print(staircase_v2(N, M, a_list))\n", "\n\n# My version 1: DP\n# Time complexity: O(n)\n# Space complexity: O(n)\ndef staircase_v1(N, M, a_list):\n    dp = [0] * (N + 1)\n    dp[0] = 1\n    dp[1] = 1\n    for i in range(2, N + 1):\n        if i not in a_list:\n            dp[i] = dp[i - 1] + dp[i - 2]\n        else:\n            dp[i] = dp[i - 1]\n    return dp[N]\n\n# My version 2: DP\n# Time complexity: O(n)\n# Space complexity: O(1)\ndef staircase_v2(N, M, a_list):\n    a = 1\n    b = 1\n    for i in range(2, N + 1):\n        if i not in a_list:\n            a, b = b, a + b\n        else:\n            a = b\n    return b\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    a_list = list(map(int, [input() for _ in range(M)]))\n    print(staircase_v2(N, M, a_list))\n"]
2022-03-30 21:25:59.029766 size on output set 2
2022-03-30 21:25:59.029774 num operations 2
2022-03-30 21:25:59.029778 size on input set 1
2022-03-30 21:26:01.493644 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m = map(int, input().split())\nbroken = [int(input()) for _ in range(m)]\n\ndp = [0] * (n + 2)\ndp[0] = 1\ndp[1] = 1\n\nfor i in range(2, n + 1):\n    if i not in broken:\n        dp[i] = dp[i - 1] + dp[i - 2]\n    elif i - 1 not in broken:\n        dp[i] = dp[i - 1]\n    elif i - 2 not in broken:\n        dp[i] = dp[i - 2]\n    else:\n        dp[i] = 0\n\nprint(dp[n] % (10 ** 9 + 7))\n"
    },
    {
      "index": 1,
      "text": "\nn, m = map(int, input().split())\nbroken = [int(input()) for _ in range(m)]\n\ndp = [0] * (n + 2)\ndp[0] = 1\ndp[1] = 1\n\nfor i in range(2, n + 1):\n    if i not in broken:\n        dp[i] = dp[i - 1] + dp[i - 2]\n    elif i - 1 not in broken:\n        dp[i] = dp[i - 1]\n    elif i - 2 not in broken:\n        dp[i] = dp[i - 2]\n    else:\n        dp[i] = 0\n\nprint(dp[n] % (10 ** 9 + 7))\n"
    }
  ],
  "created": 1648689959,
  "object": "edit"
}
2022-03-30 21:26:01.494071 fix spelling mistakes 2 ['\nn, m = map(int, input().split())\nbroken = [int(input()) for _ in range(m)]\n\ndp = [0] * (n + 2)\ndp[0] = 1\ndp[1] = 1\n\nfor i in range(2, n + 1):\n    if i not in broken:\n        dp[i] = dp[i - 1] + dp[i - 2]\n    elif i - 1 not in broken:\n        dp[i] = dp[i - 1]\n    elif i - 2 not in broken:\n        dp[i] = dp[i - 2]\n    else:\n        dp[i] = 0\n\nprint(dp[n] % (10 ** 9 + 7))\n', '\nn, m = map(int, input().split())\nbroken = [int(input()) for _ in range(m)]\n\ndp = [0] * (n + 2)\ndp[0] = 1\ndp[1] = 1\n\nfor i in range(2, n + 1):\n    if i not in broken:\n        dp[i] = dp[i - 1] + dp[i - 2]\n    elif i - 1 not in broken:\n        dp[i] = dp[i - 1]\n    elif i - 2 not in broken:\n        dp[i] = dp[i - 2]\n    else:\n        dp[i] = 0\n\nprint(dp[n] % (10 ** 9 + 7))\n']
2022-03-30 21:26:01.494261 size on output set 1
2022-03-30 21:26:01.494269 size on input set 1
2022-03-30 21:26:08.233572 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m = map(int, input().split())\nbroken = [int(input()) for _ in range(m)]\n\ndp = [0] * (n + 2)\ndp[0] = 1\ndp[1] = 1 if 1 not in broken else 0\n\nfor i in range(2, n + 1):\n    if i not in broken: dp[i] = dp[i - 1] + dp[i - 2]\n    elif i - 1 not in broken: dp[i] = dp[i - 1]\n    elif i - 2 not in broken: dp[i] = dp[i - 2]\n    else: dp[i] = 0\n\nprint(dp[n] % (10 ** 9 + 7))\n"
    },
    {
      "index": 1,
      "text": "n, m = map(int, input().split())\nbroken = [int(input()) - 1 for _ in range(m)]\n\ndp = [0] * (n + 2)\ndp[0] = 1\ndp[1] = 2\n\nfor i in range(2, n):\n    if i not in broken:\n        dp[i] = dp[i - 1] + dp[i - 2]\n    elif i - 1 not in broken:\n        dp[i] = dp[i - 1]\n    elif i - 2 not in broken:\n        dp[i] = dp[i - 2]\n    else:\n        dp[i] = 0\n\nprint(dp[n - 1] % (10 ** 9 + 7))\n"
    }
  ],
  "created": 1648689961,
  "object": "edit"
}
2022-03-30 21:26:08.233916 fix syntax errors 2 ['\nn, m = map(int, input().split())\nbroken = [int(input()) for _ in range(m)]\n\ndp = [0] * (n + 2)\ndp[0] = 1\ndp[1] = 1 if 1 not in broken else 0\n\nfor i in range(2, n + 1):\n    if i not in broken: dp[i] = dp[i - 1] + dp[i - 2]\n    elif i - 1 not in broken: dp[i] = dp[i - 1]\n    elif i - 2 not in broken: dp[i] = dp[i - 2]\n    else: dp[i] = 0\n\nprint(dp[n] % (10 ** 9 + 7))\n', 'n, m = map(int, input().split())\nbroken = [int(input()) - 1 for _ in range(m)]\n\ndp = [0] * (n + 2)\ndp[0] = 1\ndp[1] = 2\n\nfor i in range(2, n):\n    if i not in broken:\n        dp[i] = dp[i - 1] + dp[i - 2]\n    elif i - 1 not in broken:\n        dp[i] = dp[i - 1]\n    elif i - 2 not in broken:\n        dp[i] = dp[i - 2]\n    else:\n        dp[i] = 0\n\nprint(dp[n - 1] % (10 ** 9 + 7))\n']
2022-03-30 21:26:08.233947 size on output set 2
