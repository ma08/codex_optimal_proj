"""
You are given a binary matrix $a$ of size $n \times m$. A binary matrix is a matrix where each element is either $0$ or $1$.

You may perform some (possibly zero) operations with this matrix. During each operation you can inverse the row of this matrix or a column of this matrix. Formally, inverting a row is changing all values in this row to the opposite ($0$ to $1$, $1$ to $0$). Inverting a column is changing all values in this column to the opposite.

Your task is to sort the initial matrix by some sequence of such operations. The matrix is considered sorted if the array $[a_{1, 1}, a_{1, 2}, \dots, a_{1, m}, a_{2, 1}, a_{2, 2}, \dots, a_{2, m}, \dots, a_{n, m - 1}, a_{n, m}]$ is sorted in non-descending order.


-----Input-----

The first line of the input contains two integers $n$ and $m$ ($1 \le n, m \le 200$) — the number of rows and the number of columns in the matrix.

The next $n$ lines contain $m$ integers each. The $j$-th element in the $i$-th line is $a_{i, j}$ ($0 \le a_{i, j} \le 1$) — the element of $a$ at position $(i, j)$.


-----Output-----

If it is impossible to obtain a sorted matrix, print "NO" in the first line.

Otherwise print "YES" in the first line. In the second line print a string $r$ of length $n$. The $i$-th character $r_i$ of this string should be '1' if the $i$-th row of the matrix is inverted and '0' otherwise. In the third line print a string $c$ of length $m$. The $j$-th character $c_j$ of this string should be '1' if the $j$-th column of the matrix is inverted and '0' otherwise. If there are multiple answers, you can print any.


-----Examples-----
Input
2 2
1 1
0 1

Output
YES
00
10

Input
3 4
0 0 0 1
0 0 0 0
1 1 1 1

Output
YES
010
0000

Input
3 3
0 0 0
1 0 1
1 1 0

Output
NO
"""
--------------------------
{
  "choices": [
    {
      "finish_reason": "length",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn, m = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\n\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n#The idea is to keep track of the number of 1s in each column, and sort the rows based on the number of 1s in each row.\n#If the number of 1s in the first row is greater than the number of 1s in the second row, invert the first row.\n#If the number of 1s in the second row is greater than the number of 1s in the first row, invert the second row.\n#If the number of 1s in the first row and second row are the same, then check the third row, and so on...\n#The columns are sorted in the same way.\n#If it is possible, then print \"YES\" and the rows and columns that were inverted. If not, then print \"NO\".\n\nn, m = map(int, input().split())\n\n#Create a 2D array that stores the number of 1s in each column\nmatrix = [[0 for i in range(m)] for j in range(n)]\n\n#Store the number of 1s in each column\nfor i in range(n):\n    for j in range(m):\n        matrix[i][j] = int(input())\n\n#Create a 2D array that stores the number of 1s in each row\nrow_count = [[0 for i in range(m)] for j in range(n)]\n\n#Store the number of 1s in each row\nfor i in range(n):\n    for j in range(m):\n        row_count[i][j] = matrix[i][j]\n\n#Create a 2D array that stores the number of 1s in each column\ncolumn_count = [[0 for i in range(m)] for j in range(n)]\n\n#Store the number of 1s in each column\nfor i in range(n):\n    for j in range(m):\n        column_count[j][i] = matrix[i][j]\n\n#Sort the rows based on the number of 1s\nfor i in range(n - 1):\n    for j in range(i + 1, n):\n        if row_count[i][0] > row_count[j][0]:\n            for k in range(m):\n                row_count[i][k] = 1 - row_count[i][k]\n        elif row_count[i][0] == row_count[j][0]:\n            if row_count[i][1] > row_count[j][1]:\n                for k in range(m):\n                    row_count[i][k] = 1 - row_count[i][k]\n            elif row_count[i][1] == row_count[j][1]:\n                if row_count[i][2] > row_count[j][2]:\n                    for k in range(m):\n                        row_count[i][k] = 1 - row_count[i][k]\n                elif row_count[i][2] == row_count[j][2]:\n                    if row_count[i][3] > row_count[j][3]:\n                        for k in range(m):\n                            row_count[i][k] = 1 - row_count[i][k]\n                    elif row_count[i][3] == row_count[j][3]:\n                        if row_count[i][4] > row_count[j][4]:\n                            for k in range(m):\n                                row_count[i][k] = 1 - row_count[i][k]\n\n#Sort the columns based on the number of 1s\nfor i in range(m - 1):\n    for j in range(i + 1, m):\n        if column_count[i][0] > column_count[j][0]:\n            for k in range(n):\n                column_count[i][k] = 1 - column_count[i][k]\n        elif column_count[i][0] == column_count[j][0]:\n            if column_count[i][1] > column_count[j][1]:\n                for k in range(n):\n                    column_count[i][k] = 1 - column_count[i][k]\n            elif column_count[i][1] == column_count[j][1]:\n                if column_count[i][2] > column_count[j][2]:\n                    for k in range(n):\n                        column_count[i][k] = 1 - column_count[i][k]\n                elif column_count[i][2] == column_count[j][2]:\n                    if column_count[i][3] > column_count[j][3]:\n                        for k in range(n):\n                            column_count[i][k] = 1 - column_count[i][k]\n                    elif column_count[i][3] == column_count[j][3]:\n                        if column_count[i][4] > column_count[j][4]:\n                            for k in range(n):\n                                column_count[i][k] = 1 - column_count[i][k]\n\n#Check if the matrix is sorted\nsorted = True\nfor i in range(n):\n    for j in range(m):\n        if matrix[i][j] != row_count[i][j]:\n            sorted = False\n            break\n    if not sorted:\n        break\nif sorted:\n    print(\"YES\")\n    for i in range(n):\n        print(row_count[i][0], end = \"\")\n    print()\n    for i in range(m):\n        print(column_count[i][0], end = \"\")\nelse:\n    print(\"NO\")"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    ans = [0] * n\n    ans2 = [0] * m\n    for i in range(n):\n        if a[i].count(1) % 2 == 1:\n            ans[i] = 1\n    for j in range(m):\n        if [a[i][j] for i in range(n)].count(1) % 2 == 1:\n            ans2[j] = 1\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] != ans[i] ^ ans2[j]:\n                print('NO')\n                return\n    print('YES')\n    print(''.join(map(str, ans)))\n    print(''.join(map(str, ans2)))\n\nif __name__ == \"__main__\":\n    main()"
    }
  ],
  "created": 1648694167,
  "id": "cmpl-4rexLIsswb3eLn93PAk3JatlNXlEX",
  "model": "code-davinci:002",
  "object": "text_completion"
}
0 {
  "finish_reason": "length",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn, m = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\n\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we need to sort both\n#\n# if all rows are sorted, we can't sort the column\n# if all columns are sorted, we can't sort the row\n# so we"
}
REASON length
1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n#The idea is to keep track of the number of 1s in each column, and sort the rows based on the number of 1s in each row.\n#If the number of 1s in the first row is greater than the number of 1s in the second row, invert the first row.\n#If the number of 1s in the second row is greater than the number of 1s in the first row, invert the second row.\n#If the number of 1s in the first row and second row are the same, then check the third row, and so on...\n#The columns are sorted in the same way.\n#If it is possible, then print \"YES\" and the rows and columns that were inverted. If not, then print \"NO\".\n\nn, m = map(int, input().split())\n\n#Create a 2D array that stores the number of 1s in each column\nmatrix = [[0 for i in range(m)] for j in range(n)]\n\n#Store the number of 1s in each column\nfor i in range(n):\n    for j in range(m):\n        matrix[i][j] = int(input())\n\n#Create a 2D array that stores the number of 1s in each row\nrow_count = [[0 for i in range(m)] for j in range(n)]\n\n#Store the number of 1s in each row\nfor i in range(n):\n    for j in range(m):\n        row_count[i][j] = matrix[i][j]\n\n#Create a 2D array that stores the number of 1s in each column\ncolumn_count = [[0 for i in range(m)] for j in range(n)]\n\n#Store the number of 1s in each column\nfor i in range(n):\n    for j in range(m):\n        column_count[j][i] = matrix[i][j]\n\n#Sort the rows based on the number of 1s\nfor i in range(n - 1):\n    for j in range(i + 1, n):\n        if row_count[i][0] > row_count[j][0]:\n            for k in range(m):\n                row_count[i][k] = 1 - row_count[i][k]\n        elif row_count[i][0] == row_count[j][0]:\n            if row_count[i][1] > row_count[j][1]:\n                for k in range(m):\n                    row_count[i][k] = 1 - row_count[i][k]\n            elif row_count[i][1] == row_count[j][1]:\n                if row_count[i][2] > row_count[j][2]:\n                    for k in range(m):\n                        row_count[i][k] = 1 - row_count[i][k]\n                elif row_count[i][2] == row_count[j][2]:\n                    if row_count[i][3] > row_count[j][3]:\n                        for k in range(m):\n                            row_count[i][k] = 1 - row_count[i][k]\n                    elif row_count[i][3] == row_count[j][3]:\n                        if row_count[i][4] > row_count[j][4]:\n                            for k in range(m):\n                                row_count[i][k] = 1 - row_count[i][k]\n\n#Sort the columns based on the number of 1s\nfor i in range(m - 1):\n    for j in range(i + 1, m):\n        if column_count[i][0] > column_count[j][0]:\n            for k in range(n):\n                column_count[i][k] = 1 - column_count[i][k]\n        elif column_count[i][0] == column_count[j][0]:\n            if column_count[i][1] > column_count[j][1]:\n                for k in range(n):\n                    column_count[i][k] = 1 - column_count[i][k]\n            elif column_count[i][1] == column_count[j][1]:\n                if column_count[i][2] > column_count[j][2]:\n                    for k in range(n):\n                        column_count[i][k] = 1 - column_count[i][k]\n                elif column_count[i][2] == column_count[j][2]:\n                    if column_count[i][3] > column_count[j][3]:\n                        for k in range(n):\n                            column_count[i][k] = 1 - column_count[i][k]\n                    elif column_count[i][3] == column_count[j][3]:\n                        if column_count[i][4] > column_count[j][4]:\n                            for k in range(n):\n                                column_count[i][k] = 1 - column_count[i][k]\n\n#Check if the matrix is sorted\nsorted = True\nfor i in range(n):\n    for j in range(m):\n        if matrix[i][j] != row_count[i][j]:\n            sorted = False\n            break\n    if not sorted:\n        break\nif sorted:\n    print(\"YES\")\n    for i in range(n):\n        print(row_count[i][0], end = \"\")\n    print()\n    for i in range(m):\n        print(column_count[i][0], end = \"\")\nelse:\n    print(\"NO\")"
}
REASON stop
2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    ans = [0] * n\n    ans2 = [0] * m\n    for i in range(n):\n        if a[i].count(1) % 2 == 1:\n            ans[i] = 1\n    for j in range(m):\n        if [a[i][j] for i in range(n)].count(1) % 2 == 1:\n            ans2[j] = 1\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] != ans[i] ^ ans2[j]:\n                print('NO')\n                return\n    print('YES')\n    print(''.join(map(str, ans)))\n    print(''.join(map(str, ans2)))\n\nif __name__ == \"__main__\":\n    main()"
}
REASON stop
