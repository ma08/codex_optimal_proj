["\n\n#The idea is to keep track of the number of 1s in each column, and sort the rows based on the number of 1s in each row.\n#If the number of 1s in the first row is greater than the number of 1s in the second row, invert the first row.\n#If the number of 1s in the second row is greater than the number of 1s in the first row, invert the second row.\n#If the number of 1s in the first row and second row are the same, then check the third row, and so on...\n#The columns are sorted in the same way.\n#If it is possible, then print \"YES\" and the rows and columns that were inverted. If not, then print \"NO\".\n\nn, m = map(int, input().split())\n\n#Create a 2D array that stores the number of 1s in each column\nmatrix = [[0 for i in range(m)] for j in range(n)]\n\n#Store the number of 1s in each column\nfor i in range(n):\n    for j in range(m):\n        matrix[i][j] = int(input())\n\n#Create a 2D array that stores the number of 1s in each row\nrow_count = [[0 for i in range(m)] for j in range(n)]\n\n#Store the number of 1s in each row\nfor i in range(n):\n    for j in range(m):\n        row_count[i][j] = matrix[i][j]\n\n#Create a 2D array that stores the number of 1s in each column\ncolumn_count = [[0 for i in range(m)] for j in range(n)]\n\n#Store the number of 1s in each column\nfor i in range(n):\n    for j in range(m):\n        column_count[j][i] = matrix[i][j]\n\n#Sort the rows based on the number of 1s\nfor i in range(n - 1):\n    for j in range(i + 1, n):\n        if row_count[i][0] > row_count[j][0]:\n            for k in range(m):\n                row_count[i][k] = 1 - row_count[i][k]\n        elif row_count[i][0] == row_count[j][0]:\n            if row_count[i][1] > row_count[j][1]:\n                for k in range(m):\n                    row_count[i][k] = 1 - row_count[i][k]\n            elif row_count[i][1] == row_count[j][1]:\n                if row_count[i][2] > row_count[j][2]:\n                    for k in range(m):\n                        row_count[i][k] = 1 - row_count[i][k]\n                elif row_count[i][2] == row_count[j][2]:\n                    if row_count[i][3] > row_count[j][3]:\n                        for k in range(m):\n                            row_count[i][k] = 1 - row_count[i][k]\n                    elif row_count[i][3] == row_count[j][3]:\n                        if row_count[i][4] > row_count[j][4]:\n                            for k in range(m):\n                                row_count[i][k] = 1 - row_count[i][k]\n\n#Sort the columns based on the number of 1s\nfor i in range(m - 1):\n    for j in range(i + 1, m):\n        if column_count[i][0] > column_count[j][0]:\n            for k in range(n):\n                column_count[i][k] = 1 - column_count[i][k]\n        elif column_count[i][0] == column_count[j][0]:\n            if column_count[i][1] > column_count[j][1]:\n                for k in range(n):\n                    column_count[i][k] = 1 - column_count[i][k]\n            elif column_count[i][1] == column_count[j][1]:\n                if column_count[i][2] > column_count[j][2]:\n                    for k in range(n):\n                        column_count[i][k] = 1 - column_count[i][k]\n                elif column_count[i][2] == column_count[j][2]:\n                    if column_count[i][3] > column_count[j][3]:\n                        for k in range(n):\n                            column_count[i][k] = 1 - column_count[i][k]\n                    elif column_count[i][3] == column_count[j][3]:\n                        if column_count[i][4] > column_count[j][4]:\n                            for k in range(n):\n                                column_count[i][k] = 1 - column_count[i][k]\n\n#Check if the matrix is sorted\nsorted = True\nfor i in range(n):\n    for j in range(m):\n        if matrix[i][j] != row_count[i][j]:\n            sorted = False\n            break\n    if not sorted:\n        break\nif sorted:\n    print(\"YES\")\n    for i in range(n):\n        print(row_count[i][0], end = \"\")\n    print()\n    for i in range(m):\n        print(column_count[i][0], end = \"\")\nelse:\n    print(\"NO\")", "\n\ndef main():\n    n, m = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    ans = [0] * n\n    ans2 = [0] * m\n    for i in range(n):\n        if a[i].count(1) % 2 == 1:\n            ans[i] = 1\n    for j in range(m):\n        if [a[i][j] for i in range(n)].count(1) % 2 == 1:\n            ans2[j] = 1\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] != ans[i] ^ ans2[j]:\n                print('NO')\n                return\n    print('YES')\n    print(''.join(map(str, ans)))\n    print(''.join(map(str, ans2)))\n\nif __name__ == \"__main__\":\n    main()"]