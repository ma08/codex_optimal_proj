"""
The only difference between problems C1 and C2 is that all values in input of problem C1 are distinct (this condition may be false for problem C2).

You are given a sequence $a$ consisting of $n$ integers.

You are making a sequence of moves. During each move you must take either the leftmost element of the sequence or the rightmost element of the sequence, write it down and remove it from the sequence. Your task is to write down a strictly increasing sequence, and among all such sequences you should take the longest (the length of the sequence is the number of elements in it).

For example, for the sequence $[1, 2, 4, 3, 2]$ the answer is $4$ (you take $1$ and the sequence becomes $[2, 4, 3, 2]$, then you take the rightmost element $2$ and the sequence becomes $[2, 4, 3]$, then you take $3$ and the sequence becomes $[2, 4]$ and then you take $4$ and the sequence becomes $[2]$, the obtained increasing sequence is $[1, 2, 3, 4]$).


-----Input-----

The first line of the input contains one integer $n$ ($1 \le n \le 2 \cdot 10^5$) — the number of elements in $a$.

The second line of the input contains $n$ integers $a_1, a_2, \dots, a_n$ ($1 \le a_i \le 2 \cdot 10^5$), where $a_i$ is the $i$-th element of $a$.


-----Output-----

In the first line of the output print $k$ — the maximum number of elements in a strictly increasing sequence you can obtain.

In the second line print a string $s$ of length $k$, where the $j$-th character of this string $s_j$ should be 'L' if you take the leftmost element during the $j$-th move and 'R' otherwise. If there are multiple answers, you can print any.


-----Examples-----
Input
5
1 2 4 3 2

Output
4
LRRR

Input
7
1 3 5 6 5 4 2

Output
6
LRLRRR

Input
3
2 2 2

Output
1
R

Input
4
1 2 4 3

Output
4
LLRR



-----Note-----

The first example is described in the problem statement.
"""
--------------------------
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# a = [1, 2, 4, 3, 2]\n# a = [1, 3, 5, 6, 5, 4, 2]\n# a = [2, 2, 2]\n# a = [1, 2, 4, 3]\n\ndp = [[0 for _ in range(n)] for _ in range(n)]\n\nfor i in range(n):\n    dp[i][i] = 1\n\nfor i in range(n - 1):\n    if a[i] < a[i + 1]:\n        dp[i][i + 1] = 2\n\nfor i in range(n - 2, -1, -1):\n    for j in range(i + 2, n):\n        if a[j] > a[i]:\n            dp[i][j] = max(dp[i][j], dp[i + 1][j] + 1)\n        if a[i] < a[j]:\n            dp[i][j] = max(dp[i][j], dp[i][j - 1] + 1)\n\n# print(dp)\n\n# find max\nmax_len = 0\nfor i in range(n):\n    for j in range(n):\n        max_len = max(max_len, dp[i][j])\n\n# print(max_len)\n\n# find path\n\n# start from the left\n\n# if max_len == dp[i][j] -> go right\n# if max_len == dp[i][j] -> go left\n\ni, j = 0, 0\npath = []\n\ndef find_path(i, j):\n    global max_len\n    if max_len == 0:\n        return\n    if max_len == dp[i][j]:\n        path.append('R')\n        max_len -= 1\n        find_path(i, j + 1)\n    elif max_len == dp[i][j] - 1:\n        path.append('L')\n        max_len -= 1\n        find_path(i + 1, j)\n    else:\n        if max_len == dp[i + 1][j]:\n            path.append('L')\n            max_len -= 1\n            find_path(i + 1, j)\n\n        if max_len == dp[i][j - 1]:\n            path.append('R')\n            max_len -= 1\n            find_path(i, j - 1)\n\n\nfind_path(i, j)\n\nprint(max_len)\nprint(''.join(path))"
    },
    {
      "finish_reason": "length",
      "index": 1,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    # print(n)\n    # print(a)\n    # print(a[0])\n    # print(a[n-1])\n    # print(a[1])\n    # print(a[n-2])\n    # print(a[1:n-1])\n    # print(a[2:n-2])\n    # print(a[3:n-3])\n    # print(a[4:n-4])\n    # print(a[5:n-5])\n    # print(a[6:n-6])\n    # print(a[7:n-7])\n    # print(a[8:n-8])\n    # print(a[9:n-9])\n    # print(a[10:n-10])\n    # print(a[11:n-11])\n    # print(a[12:n-12])\n    # print(a[13:n-13])\n    # print(a[14:n-14])\n    # print(a[15:n-15])\n    # print(a[16:n-16])\n    # print(a[17:n-17])\n    # print(a[18:n-18])\n    # print(a[19:n-19])\n    # print(a[20:n-20])\n\n    if n == 1:\n        print(1)\n        print(\"R\")\n        exit()\n\n    if n == 2:\n        if a[0] < a[1]:\n            print(2)\n            print(\"LR\")\n        else:\n            print(1)\n            print(\"R\")\n        exit()\n\n    if a[0] < a[1] and a[1] < a[2]:\n        print(3)\n        print(\"LLR\")\n        exit()\n\n    if a[0] > a[1] and a[1] > a[2]:\n        print(3)\n        print(\"RRR\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2]:\n        print(2)\n        print(\"LR\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2]:\n        print(2)\n        print(\"RL\")\n        exit()\n\n    # print(a[2:n-2])\n    # print(a[3:n-3])\n    # print(a[4:n-4])\n    # print(a[5:n-5])\n    # print(a[6:n-6])\n    # print(a[7:n-7])\n    # print(a[8:n-8])\n    # print(a[9:n-9])\n    # print(a[10:n-10])\n    # print(a[11:n-11])\n    # print(a[12:n-12])\n    # print(a[13:n-13])\n    # print(a[14:n-14])\n    # print(a[15:n-15])\n    # print(a[16:n-16])\n    # print(a[17:n-17])\n    # print(a[18:n-18])\n    # print(a[19:n-19])\n    # print(a[20:n-20])\n\n    if a[0] < a[1] and a[1] < a[2] and a[2] < a[3]:\n        print(4)\n        print(\"LLLR\")\n        exit()\n\n    if a[0] > a[1] and a[1] > a[2] and a[2] > a[3]:\n        print(4)\n        print(\"RRRR\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4]:\n        print(3)\n        print(\"RRL\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2] and a[2] > a[3] and a[3] < a[4]:\n        print(3)\n        print(\"LRR\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4] and a[4] < a[5]:\n        print(4)\n        print(\"RRLR\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2] and a[2] > a[3] and a[3] < a[4] and a[4] > a[5]:\n        print(4)\n        print(\"LRRL\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4] and a[4] < a[5] and a[5] > a[6]:\n        print(3)\n        print(\"RLR\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2] and a[2] > a[3] and a[3] < a[4] and a[4] > a[5] and a[5] < a[6]:\n        print(3)\n        print(\"LRR\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4] and a[4] < a[5] and a[5] > a[6] and a[6] < a[7]:\n        print(4)\n        print(\"RLRR\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2] and a[2] > a[3] and a[3] < a[4] and a[4] > a[5] and a[5] < a[6] and a[6] > a[7]:\n        print(4)\n        print(\"LRRR\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4] and a[4] < a[5] and a[5] > a[6] and a[6] < a[7] and a[7] > a[8]:\n        print(3)\n        print(\"RLL\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2] and a[2] > a[3] and a[3] < a[4] and a[4] > a[5] and a[5] < a[6] and a[6] > a[7] and a[7] < a[8]:\n        print(3)\n        print(\"LLR\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4] and a[4] < a[5] and a[5] > a[6] and a[6] < a[7] and a[7] > a[8] and a[8] < a[9]:\n        print(4)\n        print(\"RLLR\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2] and a[2] > a[3] and a[3] < a[4] and a[4] > a[5] and a[5] < a[6] and a[6] > a[7] and a[7] < a[8] and a[8] > a[9]:\n        print(4)\n        print(\"LLRR\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4] and a[4] < a[5] and a[5] > a[6] and a[6] < a[7] and a[7] > a[8] and a[8] < a[9] and a[9] > a[10]:\n        print(3)\n        print(\"RLR\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2] and a[2] > a[3] and a[3] < a[4] and a[4] > a[5] and a[5] < a[6] and a[6] > a[7] and a[7] < a[8] and a[8] > a[9] and a[9] < a[10]:\n        print(3)\n        print(\"LRR\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4] and a[4] < a[5] and a[5] > a[6] and a[6] < a[7] and a[7] > a[8] and a[8] < a[9] and a[9] > a[10] and a[10] < a[11]:\n        print(4)\n        print(\"RLRL\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2] and a[2] > a[3] and a[3] < a[4] and a[4] > a[5] and a[5] < a[6] and a[6] > a[7] and a[7] < a[8] and a[8] > a[9] and a[9] < a[10] and a[10] > a[11]:\n        print(4)\n        print(\"LRRL\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4] and a[4] < a[5] and a[5] > a[6] and a[6] < a[7] and a[7] > a[8] and a[8] < a[9] and a[9] > a[10] and a[10] < a[11] and a[11] > a[12]:\n        print(3)\n        print(\"RRL\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2] and a[2] > a[3] and a[3] < a[4] and a[4] > a[5] and a[5] < a[6] and a[6] > a[7] and a[7] < a[8] and a[8] > a[9] and a[9] < a[10] and a[10] > a[11] and a[11] < a[12]:\n        print(3)\n        print(\"LRR\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4] and a[4] < a[5] and a[5] > a[6] and a[6] < a[7] and a[7] > a[8] and a[8] < a[9] and a[9] > a[10] and a[10] < a[11] and a[11] > a[12] and a[12] < a[13]:\n        print(4)\n        print(\"RRLR\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2] and a[2] > a[3] and a[3] < a[4] and a[4] > a[5] and a[5] < a[6] and a[6] > a[7] and a[7] < a[8] and a[8] > a[9] and a[9] < a[10] and a[10] > a[11] and a[11] < a[12] and a[12] > a[13]:\n        print(4)\n        print(\"LRRR\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4] and a[4] < a[5] and a[5] > a[6] and a[6] < a[7] and a[7] > a[8] and a[8] < a[9] and a[9] > a[10] and a[10] < a[11] and a[11] > a[12] and a[12] < a[13] and a[13] > a[14]:\n        print(3)\n        print(\"RLL\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2] and a[2] > a[3] and a[3] < a[4] and a[4] > a[5] and a[5] < a[6] and a[6] > a[7] and a[7] < a[8] and a[8] > a[9] and a[9] < a[10] and a[10] > a[11] and a[11] < a[12] and a[12] > a[13] and a[13] < a[14]:\n        print(3)\n        print(\"LLR\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4] and a[4] < a[5] and a[5] > a[6] and a[6] < a[7] and a[7] > a[8] and a[8] < a[9] and a[9] > a[10] and a[10] < a[11] and a[11] > a[12] and a[12] < a[13] and a[13] > a[14] and a[14] < a[15]:\n        print(4)\n        print(\"RLLR\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2] and a[2] > a[3] and a[3] < a[4] and a[4] > a[5] and a[5] < a[6] and a[6] > a[7] and a[7] < a[8] and a[8] > a[9] and a[9] < a[10] and a[10] > a[11] and a[11] < a[12] and a[12] > a[13] and a[13] < a[14] and a[14] > a[15]:\n        print(4)\n        print(\"LLRR\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4] and a[4] < a[5] and a[5] > a[6] and a[6] < a[7] and a[7] > a[8] and a[8] < a[9] and a[9] > a[10] and a[10] < a[11] and a[11] > a[12] and a[12] < a[13] and a[13] > a[14] and a[14] < a[15] and a[15] > a[16]:\n        print(3)\n        print(\"RLR\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2] and a[2] > a[3] and a[3] < a[4] and a[4] > a[5] and a[5] < a[6] and a[6] > a[7] and a[7] < a[8] and a[8] > a[9] and a[9] < a[10] and a[10] > a[11] and a[11] < a[12] and a[12] > a[13] and a[13] < a[14] and a[14] > a[15] and a[15] < a[16]:\n        print(3)\n        print(\"LRR\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4] and a[4] < a[5] and a[5] > a[6] and a[6] < a[7] and a[7] > a[8"
    }
  ],
  "created": 1648682689,
  "id": "cmpl-4rbyDZUduAqaoEB3mTvb2o3akUWja",
  "model": "code-davinci:002",
  "object": "text_completion"
}
0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# a = [1, 2, 4, 3, 2]\n# a = [1, 3, 5, 6, 5, 4, 2]\n# a = [2, 2, 2]\n# a = [1, 2, 4, 3]\n\ndp = [[0 for _ in range(n)] for _ in range(n)]\n\nfor i in range(n):\n    dp[i][i] = 1\n\nfor i in range(n - 1):\n    if a[i] < a[i + 1]:\n        dp[i][i + 1] = 2\n\nfor i in range(n - 2, -1, -1):\n    for j in range(i + 2, n):\n        if a[j] > a[i]:\n            dp[i][j] = max(dp[i][j], dp[i + 1][j] + 1)\n        if a[i] < a[j]:\n            dp[i][j] = max(dp[i][j], dp[i][j - 1] + 1)\n\n# print(dp)\n\n# find max\nmax_len = 0\nfor i in range(n):\n    for j in range(n):\n        max_len = max(max_len, dp[i][j])\n\n# print(max_len)\n\n# find path\n\n# start from the left\n\n# if max_len == dp[i][j] -> go right\n# if max_len == dp[i][j] -> go left\n\ni, j = 0, 0\npath = []\n\ndef find_path(i, j):\n    global max_len\n    if max_len == 0:\n        return\n    if max_len == dp[i][j]:\n        path.append('R')\n        max_len -= 1\n        find_path(i, j + 1)\n    elif max_len == dp[i][j] - 1:\n        path.append('L')\n        max_len -= 1\n        find_path(i + 1, j)\n    else:\n        if max_len == dp[i + 1][j]:\n            path.append('L')\n            max_len -= 1\n            find_path(i + 1, j)\n\n        if max_len == dp[i][j - 1]:\n            path.append('R')\n            max_len -= 1\n            find_path(i, j - 1)\n\n\nfind_path(i, j)\n\nprint(max_len)\nprint(''.join(path))"
}
REASON stop
1 {
  "finish_reason": "length",
  "index": 1,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    # print(n)\n    # print(a)\n    # print(a[0])\n    # print(a[n-1])\n    # print(a[1])\n    # print(a[n-2])\n    # print(a[1:n-1])\n    # print(a[2:n-2])\n    # print(a[3:n-3])\n    # print(a[4:n-4])\n    # print(a[5:n-5])\n    # print(a[6:n-6])\n    # print(a[7:n-7])\n    # print(a[8:n-8])\n    # print(a[9:n-9])\n    # print(a[10:n-10])\n    # print(a[11:n-11])\n    # print(a[12:n-12])\n    # print(a[13:n-13])\n    # print(a[14:n-14])\n    # print(a[15:n-15])\n    # print(a[16:n-16])\n    # print(a[17:n-17])\n    # print(a[18:n-18])\n    # print(a[19:n-19])\n    # print(a[20:n-20])\n\n    if n == 1:\n        print(1)\n        print(\"R\")\n        exit()\n\n    if n == 2:\n        if a[0] < a[1]:\n            print(2)\n            print(\"LR\")\n        else:\n            print(1)\n            print(\"R\")\n        exit()\n\n    if a[0] < a[1] and a[1] < a[2]:\n        print(3)\n        print(\"LLR\")\n        exit()\n\n    if a[0] > a[1] and a[1] > a[2]:\n        print(3)\n        print(\"RRR\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2]:\n        print(2)\n        print(\"LR\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2]:\n        print(2)\n        print(\"RL\")\n        exit()\n\n    # print(a[2:n-2])\n    # print(a[3:n-3])\n    # print(a[4:n-4])\n    # print(a[5:n-5])\n    # print(a[6:n-6])\n    # print(a[7:n-7])\n    # print(a[8:n-8])\n    # print(a[9:n-9])\n    # print(a[10:n-10])\n    # print(a[11:n-11])\n    # print(a[12:n-12])\n    # print(a[13:n-13])\n    # print(a[14:n-14])\n    # print(a[15:n-15])\n    # print(a[16:n-16])\n    # print(a[17:n-17])\n    # print(a[18:n-18])\n    # print(a[19:n-19])\n    # print(a[20:n-20])\n\n    if a[0] < a[1] and a[1] < a[2] and a[2] < a[3]:\n        print(4)\n        print(\"LLLR\")\n        exit()\n\n    if a[0] > a[1] and a[1] > a[2] and a[2] > a[3]:\n        print(4)\n        print(\"RRRR\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4]:\n        print(3)\n        print(\"RRL\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2] and a[2] > a[3] and a[3] < a[4]:\n        print(3)\n        print(\"LRR\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4] and a[4] < a[5]:\n        print(4)\n        print(\"RRLR\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2] and a[2] > a[3] and a[3] < a[4] and a[4] > a[5]:\n        print(4)\n        print(\"LRRL\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4] and a[4] < a[5] and a[5] > a[6]:\n        print(3)\n        print(\"RLR\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2] and a[2] > a[3] and a[3] < a[4] and a[4] > a[5] and a[5] < a[6]:\n        print(3)\n        print(\"LRR\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4] and a[4] < a[5] and a[5] > a[6] and a[6] < a[7]:\n        print(4)\n        print(\"RLRR\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2] and a[2] > a[3] and a[3] < a[4] and a[4] > a[5] and a[5] < a[6] and a[6] > a[7]:\n        print(4)\n        print(\"LRRR\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4] and a[4] < a[5] and a[5] > a[6] and a[6] < a[7] and a[7] > a[8]:\n        print(3)\n        print(\"RLL\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2] and a[2] > a[3] and a[3] < a[4] and a[4] > a[5] and a[5] < a[6] and a[6] > a[7] and a[7] < a[8]:\n        print(3)\n        print(\"LLR\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4] and a[4] < a[5] and a[5] > a[6] and a[6] < a[7] and a[7] > a[8] and a[8] < a[9]:\n        print(4)\n        print(\"RLLR\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2] and a[2] > a[3] and a[3] < a[4] and a[4] > a[5] and a[5] < a[6] and a[6] > a[7] and a[7] < a[8] and a[8] > a[9]:\n        print(4)\n        print(\"LLRR\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4] and a[4] < a[5] and a[5] > a[6] and a[6] < a[7] and a[7] > a[8] and a[8] < a[9] and a[9] > a[10]:\n        print(3)\n        print(\"RLR\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2] and a[2] > a[3] and a[3] < a[4] and a[4] > a[5] and a[5] < a[6] and a[6] > a[7] and a[7] < a[8] and a[8] > a[9] and a[9] < a[10]:\n        print(3)\n        print(\"LRR\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4] and a[4] < a[5] and a[5] > a[6] and a[6] < a[7] and a[7] > a[8] and a[8] < a[9] and a[9] > a[10] and a[10] < a[11]:\n        print(4)\n        print(\"RLRL\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2] and a[2] > a[3] and a[3] < a[4] and a[4] > a[5] and a[5] < a[6] and a[6] > a[7] and a[7] < a[8] and a[8] > a[9] and a[9] < a[10] and a[10] > a[11]:\n        print(4)\n        print(\"LRRL\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4] and a[4] < a[5] and a[5] > a[6] and a[6] < a[7] and a[7] > a[8] and a[8] < a[9] and a[9] > a[10] and a[10] < a[11] and a[11] > a[12]:\n        print(3)\n        print(\"RRL\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2] and a[2] > a[3] and a[3] < a[4] and a[4] > a[5] and a[5] < a[6] and a[6] > a[7] and a[7] < a[8] and a[8] > a[9] and a[9] < a[10] and a[10] > a[11] and a[11] < a[12]:\n        print(3)\n        print(\"LRR\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4] and a[4] < a[5] and a[5] > a[6] and a[6] < a[7] and a[7] > a[8] and a[8] < a[9] and a[9] > a[10] and a[10] < a[11] and a[11] > a[12] and a[12] < a[13]:\n        print(4)\n        print(\"RRLR\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2] and a[2] > a[3] and a[3] < a[4] and a[4] > a[5] and a[5] < a[6] and a[6] > a[7] and a[7] < a[8] and a[8] > a[9] and a[9] < a[10] and a[10] > a[11] and a[11] < a[12] and a[12] > a[13]:\n        print(4)\n        print(\"LRRR\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4] and a[4] < a[5] and a[5] > a[6] and a[6] < a[7] and a[7] > a[8] and a[8] < a[9] and a[9] > a[10] and a[10] < a[11] and a[11] > a[12] and a[12] < a[13] and a[13] > a[14]:\n        print(3)\n        print(\"RLL\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2] and a[2] > a[3] and a[3] < a[4] and a[4] > a[5] and a[5] < a[6] and a[6] > a[7] and a[7] < a[8] and a[8] > a[9] and a[9] < a[10] and a[10] > a[11] and a[11] < a[12] and a[12] > a[13] and a[13] < a[14]:\n        print(3)\n        print(\"LLR\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4] and a[4] < a[5] and a[5] > a[6] and a[6] < a[7] and a[7] > a[8] and a[8] < a[9] and a[9] > a[10] and a[10] < a[11] and a[11] > a[12] and a[12] < a[13] and a[13] > a[14] and a[14] < a[15]:\n        print(4)\n        print(\"RLLR\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2] and a[2] > a[3] and a[3] < a[4] and a[4] > a[5] and a[5] < a[6] and a[6] > a[7] and a[7] < a[8] and a[8] > a[9] and a[9] < a[10] and a[10] > a[11] and a[11] < a[12] and a[12] > a[13] and a[13] < a[14] and a[14] > a[15]:\n        print(4)\n        print(\"LLRR\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4] and a[4] < a[5] and a[5] > a[6] and a[6] < a[7] and a[7] > a[8] and a[8] < a[9] and a[9] > a[10] and a[10] < a[11] and a[11] > a[12] and a[12] < a[13] and a[13] > a[14] and a[14] < a[15] and a[15] > a[16]:\n        print(3)\n        print(\"RLR\")\n        exit()\n\n    if a[0] > a[1] and a[1] < a[2] and a[2] > a[3] and a[3] < a[4] and a[4] > a[5] and a[5] < a[6] and a[6] > a[7] and a[7] < a[8] and a[8] > a[9] and a[9] < a[10] and a[10] > a[11] and a[11] < a[12] and a[12] > a[13] and a[13] < a[14] and a[14] > a[15] and a[15] < a[16]:\n        print(3)\n        print(\"LRR\")\n        exit()\n\n    if a[0] < a[1] and a[1] > a[2] and a[2] < a[3] and a[3] > a[4] and a[4] < a[5] and a[5] > a[6] and a[6] < a[7] and a[7] > a[8"
}
REASON length
