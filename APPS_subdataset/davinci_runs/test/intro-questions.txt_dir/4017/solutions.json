["n = int(input())\na = list(map(int, input().split()))\nc = [ 0 for i in range(1000001) ]\ns = sum(a)\nans = []\nfor i in a: c[i] += 1\nfor i in range(n):\n    s -= a[i]\n    c[a[i]] -= 1\n    if s % 2 == 0 and s // 2 <= 1000000 and c[s // 2] > 0:\n        ans.append(i)\n    s += a[i]\n    c[a[i]] += 1\nprint(len(ans))\nfor i in ans:\n    print(i + 1, end=' ')\n\n", "#      \nimport collections, atexit, math, sys, bisect \n\nsys.setrecursionlimit(1000000)\ndef getIntList():\n    return list(map(int, input().split()))    \n\ntry :\n    #raise ModuleNotFoundError\n    import numpy\n    def dprint(*args, **kwargs):\n        #print(*args, **kwargs, file=sys.stderr)\n        # in python 3.4 **kwargs is invalid???\n        print(*args,  file=sys.stderr)\n    dprint('debug mode')\nexcept Exception:\n    def dprint(*args, **kwargs):\n        pass\n\n\n\ninId = 0\noutId = 0\nif inId>0:\n    dprint('use input', inId)\n    sys.stdin = open('input'+ str(inId) + '.txt', 'r') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\nif outId>0:\n    dprint('use output', outId)\n    sys.stdout = open('stdout'+ str(outId) + '.txt', 'w') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\n    atexit.register(lambda :sys.stdout.close())     #idle \u4e2d\u4e0d\u4f1a\u6267\u884c atexit\n    \nN, = getIntList()\n#print(N)\n\nza = getIntList()\n\nss = sum(za)\n\ncc = collections.Counter(za)\n\nre = []\nfor i in range(N):\n    if (ss- za[i])%2==1: continue\n    t = (ss-za[i])//2\n    g = 1\n    if t== za[i]:\n        g+=1\n    if cc[t]>=g:\n        re.append(str(i+1))\nprint(len(re))\nprint(' '.join(re))\n    \n\n\n\n\n\n", "n = int(input())\na = [int(e) for e in input().split()]\nans = []\nsm = 0\nst = dict()\nfor i in a:\n    st[i * 2] = st.get(i * 2, 0) + 1\n    sm += i\nfor i, j in enumerate(a):\n    t = sm - j\n    if t == 2 * j and st.get(t, 0) <= 1:\n        continue\n    if st.get(t, 0) > 0:\n        ans.append(i + 1)\nprint(len(ans))\nprint(' '.join(str(e) for e in ans))\n", "# your code goes here\nn = int(input())\n\na = list(map(int,input().split()))\n\nsort_a = sorted(a)\n\nmax_fi = sort_a[-1]\nmax_se = sort_a[-2]\n\nsum_a = sum(a)\nans = 0\nans_a = []\nfor i in range(0,n):\n\tif a[i] != max_fi:\n\t\tif sum_a - max_fi - a[i] == max_fi:\n\t\t\tans += 1\n\t\t\tans_a.append(i+1)\n\telse:\n\t\tif sum_a - max_se - a[i] == max_se:\n\t\t\tans += 1\n\t\t\tans_a.append(i+1)\n\nprint(ans)\nif ans > 0:\n\tprint(' '.join([str(n) for n in ans_a]))", "n = int(input())\nl = list(map(int,input().split()))\nr = []\ns = 0\nfor i in range(n):\n\ts+=l[i]\nm = {}\nfor i in range(1000001):\n    m[i] = 0\nfor i in range(n):\n\tm[l[i]] +=1\nfor i in range(n):\n    cur = s-l[i]\t\n    if cur//2 > 1e6:\n        continue\n    if cur%2==0:\n        if cur//2==l[i]:\n            if(m[cur//2]>=2):\n                r.append(i)\n        else:\n            if(m[cur//2]>0):\n                r.append(i)\nprint(len(r))\nfor i in r:\n    print(i+1, end=' ')", "from operator import itemgetter\n#int(input())\n#map(int,input().split())\n#[list(map(int,input().split())) for i in range(q)]\n#print(\"YES\" * ans + \"NO\" * (1-ans))\nn =  int(input())\nai = list(map(int,input().split()))\nai2 = [[ai[i],i+1] for i in range(n)]\nai2.sort(key = itemgetter(0))\nans = []\nindex = n-1\nindex2 = 0\nnum = sum(ai)\nwhile index2 < n and index > -1:\n    temp = (num - ai2[index2][0]) / 2\n    while index > -1 and temp < ai2[index][0]:\n        index-= 1\n    \n    if temp == ai2[index][0]:\n        if index == index2:\n            if temp == ai2[index-1][0]:\n                ans += [ai2[index2][1]]\n        else:\n            ans += [ai2[index2][1]]\n    index2 += 1\nprint(len(ans))\nfor i in ans:\n    print(i,end=\" \")\n", "n = int(input())\nl = list(map(int, input().split()))\ns = sum(l)\nmax1, max2 = sorted(l, reverse=True)[:2]\n\npretty_indexes = []\nfor i, ll in enumerate(l, start=1):\n    if (s - ll) == 2 * (max1 if ll != max1 else max2):\n        pretty_indexes.append(str(i))\nprint(len(pretty_indexes))\nprint(\" \".join(pretty_indexes))\n", "gcd = lambda a, b: gcd(b, a % b) if b else a\n\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    summ = sum(arr)\n    ind=[]\n    fm, sm = arr[0], -1\n    ind_fm = 0\n    for i in range(len(arr)):\n        if arr[i] > fm:\n            fm = arr[i]\n            ind_fm = i\n    for i in range(len(arr)):\n        if arr[i] > sm and i != ind_fm:\n            sm = arr[i]\n    for i in range(len(arr)):\n        if i != ind_fm and summ - arr[i] - fm == fm:\n            ind.append(i + 1)\n        if i == ind_fm and summ - arr[i] - sm == sm:\n            ind.append(i + 1)\n\n    print(len(ind))\n    print(*ind)\n\n\n\n\n\n\nmain()", "n = int(input())\na = list(map(int, input().split()))\ns = sum(a)\nanswer = []\nmaxi = max(a)\nposMax = a.index(maxi)\nfor i in range(n):\n    if a[i] == maxi and i == posMax:\n        tempMax = max(a[:i]+a[i+1:])\n        if s-a[i]-tempMax == tempMax:\n            answer.append(i+1)\n    else:\n        if s-a[i]-maxi == maxi:\n            answer.append(i+1)\nprint(len(answer))\nprint(*answer)", "# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2018/11/16 22:49\n\n\"\"\"\n\n\nN = int(input())\n\nA = [int(x) for x in input().split()]\n\ntotal = sum(A)\nvals = collections.Counter(A)\nmxVal = max(A)\nans = []\n\nif vals[mxVal] > 1:\n    for i, v in enumerate(A):\n        rest = total - v\n        if rest-mxVal == mxVal:\n            ans.append(i+1)\nelse:\n    for i, v in enumerate(A):\n        rest = total - v\n        if v == mxVal:\n            second = max(max(A[:i] or [0]), max(A[i+1:] or [0]))\n            if rest - second == second:\n                ans.append(i+1)\n        else:\n            if rest - mxVal == mxVal:\n                ans.append(i+1)\n\nif ans:\n    print(len(ans))\n    print(' '.join(map(str, ans)))\nelse:\n    print(0)", "from collections import Counter as C\nn = int(input())\nl = [*map(int, input().split())]\n\nc = C(l)\ns = sum(l)\nres = []\n\n# print(c)\n\nfor i, e in enumerate(l):\n\n    if c.get((s - e)/2, 0) > int((s - e)/2 == e):\n        res.append(str(i + 1))\n\n\nprint(len(res))\nprint(' '.join(res))", "n = int(input())\na = [int(i) for i in input().split()]\nb = sorted(a)\ns = sum(b[:-1])\nf = s - b[-1]\nr = set()\nif (f > 0 and not(b.count(f) == 1 and b[-1] == f)):\n    for i in range(n):\n        if a[i] == f:\n            r.add(i+1)\nif sum(b[:-2]) == b[-2]:\n    for i in range(n):\n        if a[i] == b[-1]:\n            r.add(i+1)\nprint(len(r))\nr = list(r)\nprint(\" \".join(str(i) for i in r))", "from collections import Counter\n\n_ = input()\n\na = list(map(int, input().split()))\n\nc = Counter(a)\n\ns = sum(a)\n\nr = []\nfor i, e in enumerate(a, 1):\n    if (s - e) % 2 == 0 and (s - e) / 2 in c and ((s - e) / 2 != e or c[e] > 1):\n        r.append(i)\n\nprint(len(r))\n\nif len(r) != 0:\n    print(*r)\n", "n = int(input())\na = list(map(int, input().split()))\ns = sum(a)\nans = []\nma, se = 0, 0\nfor i in range(n):\n    if ma < a[i]:\n        se = ma\n        ma = a[i]\n    elif ma == a[i]:\n        se = a[i]\n    elif se < a[i]:\n        se = a[i]\n\nfor i in range(n):\n    s -= a[i]\n    if a[i] == ma:\n        if s == se * 2:\n            ans.append(i + 1)\n        s += a[i]\n        continue\n\n    if s == ma * 2:\n        ans.append(i + 1)\n    s += a[i]\n\nprint(len(ans))\nprint(\" \".join(map(str, ans)))", "n = int(input())\nA = list(map(int, input().split()))\ns = sum(A)\ns1 = s - max(A)\n\nA = [(A[i], i + 1) for i in range(n)]\nA.sort()\n\nres = []\nfor i in range(n - 1):\n    if s1 - A[i][0] == A[-1][0]:\n        res.append(A[i][1])\nif s1 - A[-2][0] == A[-2][0]:\n    res.append(A[-1][1])\nprint(len(res))\nfor i in range(len(res)):\n    print(res[i], end=' ')\n", "n = int(input())\nA = list(map(int, input().split()))\n\nsumma = 0\nd = dict()\nans = set()\n\nfor i in range(len(A)):\n    elem = A[i]\n    summa += elem\n    \n    try:\n        d[elem].add(i)\n    except:\n        d[elem] = set()\n        d[elem].add(i)\n\nfor i in range(len(A)):\n    elem = A[i]\n    \n    if summa - elem <= elem:\n        continue\n    \n    x = summa - (elem * 2)\n    if x in d.keys():\n        s = d[x]\n        \n        for j in s:\n            if j != i:\n                ans.add(j)\n\nprint(len(ans))\nif len(ans) != 0:\n    for i in ans:\n        print(i + 1, end=' ')", "3.5\n\nn = int(input())\nA = [int(s) for s in input().split(\" \") if s != \"\"]\nB = [(x, i) for i, x in enumerate(A)]\n\nB.sort()\n_sum = sum(A)\nL = []\n\nfor i, (x, j) in enumerate(B):\n    __sum = _sum - x\n    if i == len(A)-1:\n        _max = B[-2][0]\n    else:\n        _max = B[-1][0]\n\n    __sum -= _max\n\n    if __sum == _max:\n        L.append(j+1)\n\nprint(len(L))\n\nif len(L) != 0:\n    for i in range(0, len(L)-1):\n        print(L[i], end=\" \")\n\n    print(L[-1])\n", "import math\nn=int(input())\ndef fun(itm):\n    return itm[0]\ndef sm(l):\n    s=0\n    for i in l:\n        s+=i[0]\n    return s\nl1=list(map(int,input().split()))\nfor i in range(n):\n    l1[i]=[l1[i],i]\nans=[]\nl=sorted(l1,key=fun)\ns=sm(l) - l[n-1][0]\nfor i in range(n-1):\n    if(s-l[i][0]==l[n-1][0]):\n        ans.append(l[i][1]+1)\nif(s-l[n-2][0]==l[n-2][0]):\n    ans.append(l[n-1][1]+1)\nprint(len(ans))\nfor i in ans:\n    print(i,end=\" \")", "n = int(input())\na = sorted(((value, i) for i, value in enumerate(map(int, input().split()))), reverse=True)\n\nall_sum = sum(value for value, _ in a)\n\nresults = []\nfor i in range(n):\n    index = 0 if i > 0 else 1\n    if all_sum - a[i][0] == 2 * a[index][0]:\n        results.append(a[i][1] + 1)\n\nprint(len(results))\nif results:\n    print(*results, sep=' ')\n", "import sys\n\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\ncount = {}\n\nsum = 0\nfor i in range(n):\n    if a[i] not in count.keys():\n        count[a[i]] = 0\n    count[a[i]] += 1\n\n    sum += a[i]\n\nans = []\n\nfor i in range(n):\n    sub = sum - a[i]\n    if sub % 2 == 1:\n        continue\n    sub = int(sub/2)\n    if sub in count.keys() and sub == a[i]:\n        if count[sub] > 1:\n            ans.append(str(i+1))\n    elif sub in count.keys() and count[sub] >= 1:\n        ans.append(str(i+1))\n\nprint(len(ans))\nprint(\" \".join(ans))", "\nfrom  collections import defaultdict\n\nn = int(input())\na = list(map(int, input().split()))\nmp = defaultdict(list)\naddition = sum(a)\nans = []\nfor i in range(n):\n    mp[a[i]].append(i)\nindex = 0\n# print(mp)\nfor i in a:\n    temp = addition\n    temp -= i\n    # print(\"add \",temp )\n    if temp %2 == 1:\n        index += 1\n        continue\n    temp //= 2\n    # print(\"now temp \",temp)\n\n    if temp in mp and len(mp[temp]) > 1:\n\n        ans.append(index+1)\n\n    if i in mp and len(mp[temp]) == 1:\n        # print(\"here\")\n        if mp[temp][0] != index:\n            ans.append(index+1)\n            # print(\"appended\")\n    index += 1\nprint(len(ans))\nif len(ans) == 0:\n    return\nans = list(map(str, ans))\nprint(' '.join(ans))\n\n\n\n\n\n", "I=lambda:map(int,input().split())\nn=int(input())\na=list(I())\nc=[]\nmaxx=0\nsmax=0\nfor i in range(n):\n    if maxx<a[i]:\n        smax=maxx\n        maxx=a[i]\n    elif smax<a[i]:\n        smax=a[i]\ns=sum(a)\nfor i in range(n):\n    if maxx!=a[i]:\n        if 2*maxx==(s-a[i]):\n            c.append(i+1)\n    else:\n        if s-a[i]==2*smax:\n            c.append(i+1)\nprint(len(c))\nprint(*c)", "import math\nimport bisect\nimport itertools\nimport sys\nmod=10**9 +7\n'''fact=[1]*1001\nifact=[1]*1001\nfor i in range(1,1001):\n    fact[i]=((fact[i-1])*i)%mod\n    ifact[i]=((ifact[i-1])*pow(i,mod-2,mod))%mod\ndef ncr(n,r):\n    return (((fact[n]*ifact[n-r])%mod)*ifact[r])%mod\ndef npr(n,r):\n    return (((fact[n]*ifact[n-r])%mod))\n    '''\n\n\ndef mindiff(a):\n    b=a[:]\n    b.sort()\n    m=10000000000\n    for i in range(len(b)-1):\n        if b[i+1]-b[i]<m:\n            m=b[i+1]-b[i]\n    return m\n    \ndef lcm(a,b):\n    return a*b//math.gcd(a,b)\n\n    \ndef merge(a,b):\n    i=0;j=0\n    c=0\n    ans=[]\n    while i<len(a) and j<len(b):\n        if a[i]<b[j]:\n            ans.append(a[i])\n            i+=1\n        else:\n            ans.append(b[j])\n            c+=len(a)-i\n            j+=1\n    ans+=a[i:]\n    ans+=b[j:]\n    return ans,c\ndef mergesort(a):\n    if len(a)==1:\n        return a,0\n    mid=len(a)//2   \n    left,left_inversion=mergesort(a[:mid])\n    right,right_inversion=mergesort(a[mid:])\n    m,c=merge(left,right)\n    c+=(left_inversion+right_inversion)\n    return m,c\n    \ndef is_prime(num):\n    if num == 2: return True\n    if num == 3: return True\n    if num%2 == 0: return False\n    if num%3 == 0: return False\n    t = 5\n    a = 2\n    while t <= int(math.sqrt(num)):\n        if num%t == 0: return False\n        t += a\n        a = 6 - a\n    return True\n    \n  \ndef ceil(a,b):\n    if a%b==0:\n        return a//b\n    else:\n        return (a//b + 1)\n\ndef binsearch(arr,b,low,high):\n    if low==high:\n        return low\n    if arr[math.ceil((low+high)/2)]<b:\n        return binsearch(arr,b,low,math.ceil((low+high)/2) -1 )\n    else:\n        return binsearch(arr,b,math.ceil((low+high)/2),high)\ndef ncr1(n,r):\n    s=1\n    for i in range(min(n-r,r)):\n        s*=(n-i)\n        s%=mod\n        s*=pow(i+1,mod-2,mod)\n        s%=mod\n    return s\n    \ndef calc(n,m,r):\n    s=0\n    for i in range(0,r+1,2):\n        s+=ncr1(n,i)*ncr1(m,i)\n        s%=mod\n    return s    \n        \n        \n\n#/////////////////////////////////////////////////////////////////////////////////////////////////\nn=int(input())\n\na=list(map(int,input().split()))\ns=sum(a)\nb=[];count=0;c=[]\nfor i in range(n):\n    b.append(s-a[i])\nma=min(a);sm=min(a)\nfor i in range(n):\n    if ma<a[i]:\n        sm=ma\n        ma=a[i]\n    elif sm< a[i]:\n        sm=a[i]\nfor i in range(n):\n    if a[i]==ma:\n        if b[i]/2==sm:\n            count+=1\n            c.append(i+1)\n    else:\n        #print(b[i])\n        if b[i]/2==ma:\n            count+=1\n            c.append(i+1)\n#print(b)\n#print(ma,sm)            \nif count==0:\n    print(count);return\nprint(count)    \nprint(*c)\n\n        \n    \n    ", "def main():\n    count=int(input())\n    arr=input().split(\" \")\n    store=[]\n    tot=0\n    biggest=0\n    second_biggest=0\n    index_biggest=0\n    index_second_biggest=0\n    for x in range(count):\n        test=int(arr[x])\n        store.append(test)\n        tot+=test\n        if test>=biggest:\n            biggest,second_biggest=test,biggest\n            index_biggest,index_second_biggest=x,index_biggest\n        elif test>second_biggest:\n            second_biggest=test\n            index_second_biggest=x\n    number=0\n    string=\"\"\n    for x in range(count):\n        if store[x]==biggest:\n            if tot-store[x]==2*second_biggest:\n                number+=1\n                string+=str(x+1)+\" \"\n        else:\n            if tot-store[x]==2*biggest:\n                number+=1\n                string+=str(x+1)+\" \"\n    print(number)\n    print(string)\nmain()\n"]