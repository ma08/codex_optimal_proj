["\n\ndef main():\n    \"\"\"\n    This is pretty much a brute force solution. \n    \"\"\"\n    n = int(input())\n    m = set()\n    for i in range(1, n + 1):\n        m.add(i)\n        while i % 10 == 0:\n            i //= 10\n    print(len(m))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef f(x):\n    while x % 10 == 0: x //= 10\n    return x + 1\n\ndef solve(n):\n    seen = set()\n    seen.add(n)\n    for i in range(n + 1):\n        seen.add(f(i))\n    return len(seen)\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    print(solve(n))\n", "import sys\n\nif __name__ == '__main__':\n    pass\n", "\n\ndef main():\n    \"\"\"\n    This is pretty much a brute force solution. \n    \"\"\"\n    n = int(input())\n    m = set()\n    for i in range(1, n + 1):\n        m.add(i)\n        while i % 10 == 0:\n            i //= 10\n    print(len(m))\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef f(x):\n    while x % 10 == 0: x //= 10\n    return x + 1\n\ndef solve(n):\n    seen = set([n])\n    for i in range(n+1):\n        seen.add(f(i))\n    return len(seen)\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    print(solve(n))\n"]