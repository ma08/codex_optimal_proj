["\n\nfrom functools import reduce\nfrom collections import Counter\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a*b) // gcd(a, b)\n\ndef main():\n    n = int(input())\n    divisors = Counter(map(int, input().split()))\n    x = reduce(lcm, divisors.keys())\n    y = x\n    for divisor, count in divisors.items():\n        if count == 1:\n            y = lcm(y, divisor)\n    print(x, y)\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    divisors = [int(x) for x in sys.stdin.readline().split()]\n\n    x = 1\n    y = 1\n    for i in range(n):\n        if i < n/2:\n            x *= divisors[i]\n        else:\n            y *= divisors[i]\n\n    print(x, y)\n\nif __name__ == '__main__':\n    main()"]