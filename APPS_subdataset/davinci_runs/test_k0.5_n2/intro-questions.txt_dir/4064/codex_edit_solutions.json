["\ndef solve(n, h, l, r, a):\n    res = 0\n    if l <= 0 <= r:\n        res = n\n    else:\n        res = 1\n        while l > 0:\n            if l - 1 in a:\n                res += 1\n                l -= 1\n            else:\n                break\n        if l - 1 in a:\n            res += 1\n        else:\n            res += 1\n        while r < h - 1:\n            if r + 1 in a:\n                res += 1\n                r += 1\n            else:\n                break\n        if r + 1 in a:\n            res += 1\n        else:\n            res += 1\n    return res\n\n\ndef main():\n    n, h, l, r = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(solve(n, h, l, r, a))\n\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\nsys.setrecursionlimit(10**6)\n\n\ndef solve(n, h, l, r, a):\n    if n == 0:\n        return 0\n    else:\n        return max(solve(n - 1, a[n - 1], l, r, a) + (l <= a[n - 1] <= r), solve(n - 1, (a[n - 1] + 1) % h, l, r, a) + (l <= (a[n - 1] + 1) % h <= r), solve(n - 1, (a[n - 1] - 1) % h, l, r, a) + (l <= (a[n - 1] - 1) % h <= r))\n\n\ndef main():\n    n, h, l, r = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(solve(n, 0, l, r, a))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef solve(n, h, l, r, a, dp):\n    res = 0\n    if n == 0:\n        return 0\n    if dp[n][l][r]:\n        return dp[n][l][r]\n    if l <= 0:\n        l = h - 1\n    if r >= h - 1:\n        r = 0\n    dp[n][l][r] = max(solve(n - 1, h, l - 1, r, a, dp) + (l - 1 in a),\n                      solve(n - 1, h, l, r + 1, a, dp) + (r + 1 in a))\n    return dp[n][l][r]\n\n\ndef main():\n    n, h, l, r = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [[[0 for _ in range(h)] for _ in range(h)] for _ in range(n + 1)]\n    print(solve(n, h, l, r, a, dp))\n\n\nif __name__ == \"__main__\":\n    main()\n\n\ndef solve_old(n, h, l, r, a):\n    res = 0\n    if l <= 0 and r >= h - 1:\n        res = n\n    else:\n        if l <= 0:\n            res = 1\n            while r < h - 1:\n                if r + 1 in a:\n                    res += 1\n                    r += 1\n                else:\n                    break\n            if r + 1 in a:\n                res += 1\n            else:\n                res += 1\n        elif r >= h - 1:\n            res = 1\n            while l > 0:\n                if l - 1 in a:\n                    res += 1\n                    l -= 1\n                else:\n                    break\n            if l - 1 in a:\n                res += 1\n            else:\n                res += 1\n        else:\n            res = 1\n            while l > 0:\n                if l - 1 in a:\n                    res += 1\n                    l -= 1\n                else:\n                    break\n            if l - 1 in a:\n                res += 1\n            else:\n                res += 1\n            while r < h - 1:\n                if r + 1 in a:\n                    res += 1\n                    r += 1\n                else:\n                    break\n            if r + 1 in a:\n                res += 1\n            else:\n                res += 1\n    return res\n\n\ndef main_old():\n    n, h, l, r = map(int, input().split())\n    a = list(map(int, input().split()))[:n]\n    print(solve_old(n, h, l, r, a))\n"]