["import math\n\n# The distance between two points (x1, y1) and (x2, y2) is given by\n# sqrt((x1 - x2)^2 + (y1 - y2)^2)\n#\n# The equation of a line passing through (x1, y1) and (x2, y2) is\n# y - y1 = (y2 - y1) / (x2 - x1) * (x - x1)\n#\n# The equation of a line perpendicular to the line passing through (x1, y1) and (x2, y2) is\n# y - y1 = -(x2 - x1) / (y2 - y1) * (x - x1)\n\n# The distance between two points (x1, y1) and (x2, y2) is given by\n# sqrt((x1 - x2)^2 + (y1 - y2)^2)\ndef getDistance(x1, y1, x2, y2):\n    return math.sqrt((x1 - x2)**2 + (y1 - y2)**2)\n\n# The equation of a line passing through (x1, y1) and (x2, y2) is\n# y - y1 = (y2 - y1) / (x2 - x1) * (x - x1)\ndef getLine(x1, y1, x2, y2):\n    slope = (y2 - y1) / (x2 - x1)\n    intercept = y1 - slope * x1\n    return slope, intercept\n\n# The equation of a line perpendicular to the line passing through (x1, y1) and (x2, y2) is\n# y - y1 = -(x2 - x1) / (y2 - y1) * (x - x1)\ndef getPerpendicularLine(x1, y1, x2, y2):\n    slope = -(x2 - x1) / (y2 - y1)\n    intercept = y1 - slope * x1\n    return slope, intercept\n\n# The intersection of two lines is given by the point\n# x = (b1 - b2) / (m1 - m2)\n# y = m1 * x + b1\ndef getIntersectionPoint(m1, b1, m2, b2):\n    x = (b1 - b2) / (m1 - m2)\n    y = m1 * x + b1\n    return x, y\n\ndef getIntersectionPointFromLines(line1, line2):\n    m1, b1 = line1\n    m2, b2 = line2\n    return getIntersectionPoint(m1, b1, m2, b2)\n\ndef getIntersectionPointFromLineAndPoint(line, point):\n    m, b = line\n    x, y = point\n    return getIntersectionPoint(m, b, -1/m, y - 1/m * x)\n\ndef main():\n    A, B, H, M = map(int, input().split())\n\n    # Get the position of the hour and minute hands at time H:M\n    thetaH = 2 * math.pi * (H + M / 60) / 12\n    thetaM = 2 * math.pi * M / 60\n    xH, yH = A * math.sin(thetaH), A * math.cos(thetaH)\n    xM, yM = B * math.sin(thetaM), B * math.cos(thetaM)\n\n    # Get the lines that the hour and minute hands make\n    lineH = getLine(0, 0, xH, yH)\n    lineM = getLine(0, 0, xM, yM)\n\n    # Get the line perpendicular to the minute hand that passes through the hour hand.\n    linePerpM = getPerpendicularLine(xM, yM, xH, yH)\n\n    # Get the intersection point of the line perpendicular to the minute hand and the minute hand.\n    xI, yI = getIntersectionPointFromLines(lineM, linePerpM)\n\n    # Get the distance between the intersection point and the hour hand.\n    print(getDistance(xH, yH, xI, yI))\n\nif __name__ == '__main__':\n    main()\n", "import math\n\n# Read input\na, b, h, m = map(float, input().split())\n\n# Calculate the angle between the hands\nangle = abs(h * 30 + m * 0.5 - m * 6.0)\n\n# Calculate the distance\ndistance = math.sqrt(a ** 2 + b ** 2 - 2 * a * b * math.cos(math.radians(angle)))\n\n# Print the result\nprint(distance)\n", "#!/usr/bin/env python3\n\nimport math\n\n# Read input\na, b, h, m = map(int, input().split()) \n\n# Calculate the angle between the hands\nangle = abs(h * 30 + m * 0.5 - m * 6)\n\n# Calculate the distance\ndistance = math.sqrt(a ** 2 + b ** 2 - 2 * a * b * math.cos(math.radians(angle)))\n\n# Print the result\nprint(distance)\n", "import math\n\na, b, h, m = map(int, input().split())  # Read input\n\nangle = abs(h * 30 + m * 0.5 - m * 6)  # Calculate the angle between the hands\n\ndistance = math.sqrt(a ** 2 + b ** 2 - 2 * a * b * math.cos(math.radians(angle)))  # Calculate the distance\n\nprint(distance)  # Print the result\n", "import math\n\n# The distance between two points (x1, y1) and (x2, y2) is given by sqrt((x1 - x2)^2 + (y1 - y2)^2)\n# The equation of a line passing through (x1, y1) and (x2, y2) is y - y1 = (y2 - y1) / (x2 - x1) * (x - x1)\n# The equation of a line perpendicular to the line passing through (x1, y1) and (x2, y2) is y - y1 = -(x2 - x1) / (y2 - y1) * (x - x1)\n\n# The distance between two points (x1, y1) and (x2, y2) is given by sqrt((x1 - x2)^2 + (y1 - y2)^2)\ndef getDistance(x1, y1, x2, y2):\n    return math.sqrt((x1 - x2)**2 + (y1 - y2)**2)\n\n# The equation of a line passing through (x1, y1) and (x2, y2) is y - y1 = (y2 - y1) / (x2 - x1) * (x - x1)\ndef getLine(x1, y1, x2, y2):\n    slope = (y2 - y1) / (x2 - x1)\n    intercept = y1 - slope * x1\n    return slope, intercept\n\n# The equation of a line perpendicular to the line passing through (x1, y1) and (x2, y2) is y - y1 = -(x2 - x1) / (y2 - y1) * (x - x1)\ndef getPerpendicularLine(x1, y1, x2, y2):\n    slope = -(x2 - x1) / (y2 - y1)\n    intercept = y1 - slope * x1\n    return slope, intercept\n\n# The intersection of two lines is given by the point x = (b1 - b2) / (m1 - m2) and y = m1 * x + b1\ndef getIntersectionPoint(m1, b1, m2, b2):\n    x = (b1 - b2) / (m1 - m2)\n    y = m1 * x + b1\n    return x, y\n\ndef getIntersectionPointFromLines(line1, line2):\n    m1, b1 = line1\n    m2, b2 = line2\n    return getIntersectionPoint(m1, b1, m2, b2)\n\ndef getIntersectionPointFromLineAndPoint(line, point):\n    m, b = line\n    x, y = point\n    return getIntersectionPoint(m, b, -1/m, y - 1/m * x)\n\ndef main():\n    A, B, H, M = map(int, input().split())\n\n    # Get the position of the hour and minute hands at time H:M\n    thetaH = 2 * math.pi * (H + M / 60) / 12\n    thetaM = 2 * math.pi * M / 60\n    xH, yH = A * math.sin(thetaH), A * math.cos(thetaH)\n    xM, yM = B * math.sin(thetaM), B * math.cos(thetaM)\n\n    # Get the lines that the hour and minute hands make\n    lineH = getLine(0, 0, xH, yH)\n    lineM = getLine(0, 0, xM, yM)\n\n    # Get the line perpendicular to the minute hand that passes through the hour hand.\n    linePerpM = getPerpendicularLine(xM, yM, xH, yH)\n\n    # Get the intersection point of the line perpendicular to the minute hand and the minute hand.\n    xI, yI = getIntersectionPointFromLines(lineM, linePerpM)\n\n    # Get the distance between the intersection point and the hour hand.\n    print(getDistance(xH, yH, xI, yI))\n\nif __name__ == '__main__':\n    main()\n", "import math\n\n# The distance between two points (x1, y1) and (x2, y2) is given by\n# sqrt((x1 - x2)^2 + (y1 - y2)^2)\ndef getDistance(x1, y1, x2, y2):\n    return math.sqrt((x1 - x2)**2 + (y1 - y2)**2)\n\n# The equation of a line passing through (x1, y1) and (x2, y2) is\n# y - y1 = (y2 - y1) / (x2 - x1) * (x - x1)\ndef getLine(x1, y1, x2, y2):\n    slope = (y2 - y1) / (x2 - x1)\n    intercept = y1 - slope * x1\n    return slope, intercept\n\n# The equation of a line perpendicular to the line passing through (x1, y1) and (x2, y2) is\n# y - y1 = -(x2 - x1) / (y2 - y1) * (x - x1)\ndef getPerpendicularLine(x1, y1, x2, y2):\n    slope = -(x2 - x1) / (y2 - y1)\n    intercept = y1 - slope * x1\n    return slope, intercept\n\n# The intersection of two lines is given by the point\n# x = (b1 - b2) / (m1 - m2)\n# y = m1 * x + b1\ndef getIntersectionPoint(m1, b1, m2, b2):\n    x = (b1 - b2) / (m1 - m2)\n    y = m1 * x + b1\n    return x, y\n\ndef getIntersectionPointFromLines(line1, line2):\n    m1, b1 = line1\n    m2, b2 = line2\n    return getIntersectionPoint(m1, b1, m2, b2)\n\ndef getIntersectionPointFromLineAndPoint(line, point):\n    m, b = line\n    x, y = point\n    return getIntersectionPoint(m, b, -1/m, y - 1/m * x)\n\ndef main():\n    A, B, H, M = map(int, input().split())\n\n    # Get the position of the hour and minute hands at time H:M\n    thetaH = 2 * math.pi * (H + M / 60) / 12\n    thetaM = 2 * math.pi * M / 60\n    xH, yH = A * math.sin(thetaH), A * math.cos(thetaH)\n    xM, yM = B * math.sin(thetaM), B * math.cos(thetaM)\n\n    # Get the lines that the hour and minute hands make\n    lineH = getLine(0, 0, xH, yH)\n    lineM = getLine(0, 0, xM, yM)\n\n    # Get the line perpendicular to the minute hand that passes through the hour hand.\n    linePerpM = getPerpendicularLine(xM, yM, xH, yH)\n\n    # Get the intersection point of the line perpendicular to the minute hand and the minute hand\n    xI, yI = getIntersectionPointFromLines(lineM, linePerpM)\n\n    # Get the distance between the intersection point and the hour hand\n    print(getDistance(xH, yH, xI, yI))\n\nif __name__ == '__main__':\n    main()\n", "import math\n\n# The distance between two points (x1, y1) and (x2, y2) is given by\n# sqrt((x1 - x2)^2 + (y1 - y2)^2)\n#\n# The equation of a line passing through (x1, y1) and (x2, y2) is\n# y - y1 = (y2 - y1) / (x2 - x1) * (x - x1)\n#\n# The equation of a line perpendicular to the line passing through (x1, y1) and (x2, y2) is\n# y - y1 = -(x2 - x1) / (y2 - y1) * (x - x1)\n\n# The distance between two points (x1, y1) and (x2, y2) is given by sqrt((x1 - x2)^2 + (y1 - y2)^2)\ndef getDistance(x1, y1, x2, y2):\n    return math.sqrt((x1 - x2)**2 + (y1 - y2)**2)\n\n# The equation of a line passing through (x1, y1) and (x2, y2) is y - y1 = (y2 - y1) / (x2 - x1) * (x - x1)\ndef getLine(x1, y1, x2, y2):\n    slope = (y2 - y1) / (x2 - x1)\n    intercept = y1 - slope * x1\n    return slope, intercept\n\n# The equation of a line perpendicular to the line passing through (x1, y1) and (x2, y2) is y - y1 = -(x2 - x1) / (y2 - y1) * (x - x1)\ndef getPerpendicularLine(x1, y1, x2, y2):\n    slope = -(x2 - x1) / (y2 - y1)\n    intercept = y1 - slope * x1\n    return slope, intercept\n\n# The intersection of two lines is given by the point x = (b1 - b2) / (m1 - m2) y = m1 * x + b1\ndef getIntersectionPoint(m1, b1, m2, b2):\n    x = (b1 - b2) / (m1 - m2)\n    y = m1 * x + b1\n    return x, y\n\n\ndef getIntersectionPointFromLines(line1, line2):\n    m1, b1 = line1\n    m2, b2 = line2\n    return getIntersectionPoint(m1, b1, m2, b2)\n\n\ndef getIntersectionPointFromLineAndPoint(line, point):\n    m, b = line\n    x, y = point\n    return getIntersectionPoint(m, b, -1/m, y - 1/m * x)\n\n\ndef main():\n    A, B, H, M = map(int, input().split())\n\n    # Get the position of the hour and minute hands at time H:M\n    thetaH = 2 * math.pi * (H + M / 60) / 12\n    thetaM = 2 * math.pi * M / 60\n    xH, yH = A * math.sin(thetaH), A * math.cos(thetaH)\n    xM, yM = B * math.sin(thetaM), B * math.cos(thetaM)\n\n    # Get the lines that the hour and minute hands make\n    lineH = getLine(0, 0, xH, yH)\n    lineM = getLine(0, 0, xM, yM)\n\n    # Get the line perpendicular to the minute hand that passes through the hour hand.\n    linePerpM = getPerpendicularLine(xM, yM, xH, yH)\n\n\n    # Get the intersection point of the line perpendicular to the minute hand and the minute hand\n    xI, yI = getIntersectionPointFromLines(lineM, linePerpM)\n\n    # Get the distance between the intersection point and the hour hand\n    print(getDistance(xH, yH, xI, yI))\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\n# Read input\na, b, h, m = map(int, input().split())\n\n# Calculate the angle between the hands\nangle = abs(h * 30 + m * 0.5 - m * 6)\n\n# Calculate the distance\ndistance = math.sqrt(a ** 2 + b ** 2 - 2 * a * b * math.cos(math.radians(angle)))\n\n# Print the result\nprint(distance)\n"]