["\n\ndef solve(n, r, houses):\n    houses = [i for i, x in enumerate(houses) if x == 1]\n    houses.sort()\n    if not houses:\n        return -1\n    if houses[0] > r - 1:\n        return -1\n    if houses[-1] < n - r + 1:\n        return -1\n    count = 1\n    for i in range(1, len(houses)):\n        if houses[i] - houses[i - 1] > 2 * r - 1:\n            count += 1\n    return count\n\nn, r = map(int, input().split())\nhouses = list(map(int, input().split()))\nprint(solve(n, r, houses))\n", "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "import sys\nsys.setrecursionlimit(10**6)\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [0] * n\n    dp[0] = 0\n    dp[1] = abs(a[1] - a[0])\n    for i in range(2, n):\n        dp[i] = min(dp[i - 1] + abs(a[i] - a[i - 1]), dp[i - 2] + abs(a[i] - a[i - 2]))\n    print(dp[-1])\n\nmain()\n", "\n\ndef main():\n    n, r = map(int, input().split())  # n: \u90e8\u5c4b\u306e\u6570, r: \u534a\u5f84\n    a = list(map(int, input().split()))  # a: \u90e8\u5c4b\u306e\u72b6\u614b\n    ans = 0\n    for i in range(n):\n        if a[i] == 1:  # \u90e8\u5c4b\u304c\u7167\u3089\u3055\u308c\u3066\u3044\u308b\u5834\u5408\n            continue\n        for j in range(1, r + 1):  # \u534a\u5f84\u306e\u5206\u3060\u3051\u7167\u3089\u3059\n            if i - j < 0 or i + j >= n:  # \u534a\u5f84\u306e\u5206\u3060\u3051\u7167\u3089\u3059\u3068\u58c1\u306b\u5f53\u305f\u308b\u5834\u5408\n                break\n            if a[i - j] == 1 or a[i + j] == 1:\n                a[i] = 1\n                ans += 1\n                break\n            else:\n                print(-1)\n                return\n    print(ans)\n\nmain()\n", "\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n"]