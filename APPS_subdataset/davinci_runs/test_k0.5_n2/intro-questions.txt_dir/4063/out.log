"""
Takahashi made N problems for competitive programming.
The problems are numbered 1 to N, and the difficulty of Problem i is represented as an integer d_i (the higher, the harder).
He is dividing the problems into two categories by choosing an integer K, as follows:
 - A problem with difficulty K or higher will be for ARCs.
 - A problem with difficulty lower than K will be for ABCs.
How many choices of the integer K make the number of problems for ARCs and the number of problems for ABCs the same?

-----Problem Statement-----
 - 2 \leq N \leq 10^5
 - N is an even number.
 - 1 \leq d_i \leq 10^5
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
N
d_1 d_2 ... d_N

-----Output-----
Print the number of choices of the integer K that make the number of problems for ARCs and the number of problems for ABCs the same.

-----Sample Input-----
6
9 1 4 4 6 7

-----Sample Output-----
2

If we choose K=5 or 6, Problem 1, 5, and 6 will be for ARCs, Problem 2, 3, and 4 will be for ABCs, and the objective is achieved.
Thus, the answer is 2.
"""
--------------------------
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    d = list(map(int, sys.stdin.readline().split()))\n    d.sort()\n    if N % 2 == 1:\n        print(0)\n        return\n    else:\n        count = 0\n        for i in range(1, N // 2 + 1):\n            if d[i - 1] == d[N // 2 - 1 + i]:\n                count += 1\n            else:\n                break\n        print(count)\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nfrom collections import Counter\n\ndef main():\n    N = int(input())\n    d = [int(i) for i in input().split()]\n    # print(N,d)\n\n    c = Counter(d)\n    # print(c)\n\n    d_u = list(set(d))\n    d_u.sort()\n    # print(d_u)\n\n    s = 0\n    for i in d_u:\n        s += c[i]*(N-c[i])\n    # print(s)\n\n    print(s//2)\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1648683671,
  "id": "cmpl-4rcE3iYPBc032Dl3sm00UD8WJW6WB",
  "model": "code-davinci:002",
  "object": "text_completion"
}
0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    d = list(map(int, sys.stdin.readline().split()))\n    d.sort()\n    if N % 2 == 1:\n        print(0)\n        return\n    else:\n        count = 0\n        for i in range(1, N // 2 + 1):\n            if d[i - 1] == d[N // 2 - 1 + i]:\n                count += 1\n            else:\n                break\n        print(count)\n\n\nif __name__ == '__main__':\n    main()"
}
REASON stop
1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nfrom collections import Counter\n\ndef main():\n    N = int(input())\n    d = [int(i) for i in input().split()]\n    # print(N,d)\n\n    c = Counter(d)\n    # print(c)\n\n    d_u = list(set(d))\n    d_u.sort()\n    # print(d_u)\n\n    s = 0\n    for i in d_u:\n        s += c[i]*(N-c[i])\n    # print(s)\n\n    print(s//2)\n\nif __name__ == '__main__':\n    main()"
}
REASON stop
