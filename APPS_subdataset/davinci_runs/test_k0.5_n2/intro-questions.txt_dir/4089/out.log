"""
1000000000000001 dogs suddenly appeared under the roof of Roger's house, all of which he decided to keep. The dogs had been numbered 1 through 1000000000000001, but he gave them new names, as follows:
 - the dogs numbered 1,2,\cdots,26 were respectively given the names a, b, ..., z;
 - the dogs numbered 27,28,29,\cdots,701,702  were respectively given the names aa, ab, ac, ..., zy, zz;
 - the dogs numbered 703,704,705,\cdots,18277,18278  were respectively given the names aaa, aab, aac, ..., zzy, zzz;
 - the dogs numbered 18279,18280,18281,\cdots,475253,475254  were respectively given the names aaaa, aaab, aaac, ..., zzzy, zzzz;
 - the dogs numbered 475255,475256,\cdots  were respectively given the names aaaaa, aaaab, ...;
 - and so on.
To sum it up, the dogs numbered 1, 2, \cdots were respectively given the following names:
a, b, ..., z, aa, ab, ..., az, ba, bb, ..., bz, ..., za, zb, ..., zz, aaa, aab, ..., aaz, aba, abb, ..., abz, ..., zzz, aaaa, ...
Now, Roger asks you:
"What is the name for the dog numbered N?"

-----Constraints-----
 - N is an integer.
 -  1 \leq N \leq 1000000000000001

-----Input-----
Input is given from Standard Input in the following format:
N

-----Output-----
Print the answer to Roger's question as a string consisting of lowercase English letters.

-----Sample Input-----
2

-----Sample Output-----
b

"""
--------------------------
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport math\nN = int(input())\n\ndef calc_digits(n):\n    return math.ceil(math.log(n+1, 26))\n\ndef calc_index(n, digits):\n    return n - 26**(digits-1)\n\ndef calc_char(n):\n    return chr(n+97)\n\ndigits = calc_digits(N)\nindex = calc_index(N, digits)\n\nans = \"\"\nfor i in range(digits-1, -1, -1):\n    num = math.floor(index/26**i)\n    ans += calc_char(num)\n    index -= num*26**i\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef name(n):\n    if n == 1:\n        return 'a'\n    \n    n -= 1\n    letters = 'abcdefghijklmnopqrstuvwxyz'\n    length = 1\n    while True:\n        if n < 26**length:\n            break\n        n -= 26**length\n        length += 1\n    \n    name = ''\n    while length > 0:\n        name += letters[n // 26**(length - 1)]\n        n %= 26**(length - 1)\n        length -= 1\n    \n    return name\n\nn = int(sys.stdin.readline().rstrip())\nprint(name(n))"
    }
  ],
  "created": 1648684262,
  "id": "cmpl-4rcNaZNX4oxcWEElNwWJIA9eTvu5y",
  "model": "code-davinci:002",
  "object": "text_completion"
}
0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport math\nN = int(input())\n\ndef calc_digits(n):\n    return math.ceil(math.log(n+1, 26))\n\ndef calc_index(n, digits):\n    return n - 26**(digits-1)\n\ndef calc_char(n):\n    return chr(n+97)\n\ndigits = calc_digits(N)\nindex = calc_index(N, digits)\n\nans = \"\"\nfor i in range(digits-1, -1, -1):\n    num = math.floor(index/26**i)\n    ans += calc_char(num)\n    index -= num*26**i\nprint(ans)"
}
REASON stop
1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef name(n):\n    if n == 1:\n        return 'a'\n    \n    n -= 1\n    letters = 'abcdefghijklmnopqrstuvwxyz'\n    length = 1\n    while True:\n        if n < 26**length:\n            break\n        n -= 26**length\n        length += 1\n    \n    name = ''\n    while length > 0:\n        name += letters[n // 26**(length - 1)]\n        n %= 26**(length - 1)\n        length -= 1\n    \n    return name\n\nn = int(sys.stdin.readline().rstrip())\nprint(name(n))"
}
REASON stop
