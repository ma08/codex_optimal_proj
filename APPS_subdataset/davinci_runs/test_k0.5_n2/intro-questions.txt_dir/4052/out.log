"""
You are given two strings $s$ and $t$. Both strings have length $n$ and consist of lowercase Latin letters. The characters in the strings are numbered from $1$ to $n$.

You can successively perform the following move any number of times (possibly, zero):  swap any two adjacent (neighboring) characters of $s$ (i.e. for any $i = \{1, 2, \dots, n - 1\}$ you can swap $s_i$ and $s_{i + 1})$. 

You can't apply a move to the string $t$. The moves are applied to the string $s$ one after another.

Your task is to obtain the string $t$ from the string $s$. Find any way to do it with at most $10^4$ such moves.

You do not have to minimize the number of moves, just find any sequence of moves of length $10^4$ or less to transform $s$ into $t$.


-----Input-----

The first line of the input contains one integer $n$ ($1 \le n \le 50$) — the length of strings $s$ and $t$.

The second line of the input contains the string $s$ consisting of $n$ lowercase Latin letters.

The third line of the input contains the string $t$ consisting of $n$ lowercase Latin letters.


-----Output-----

If it is impossible to obtain the string $t$ using moves, print "-1".

Otherwise in the first line print one integer $k$ — the number of moves to transform $s$ to $t$. Note that $k$ must be an integer number between $0$ and $10^4$ inclusive.

In the second line print $k$ integers $c_j$ ($1 \le c_j < n$), where $c_j$ means that on the $j$-th move you swap characters $s_{c_j}$ and $s_{c_j + 1}$.

If you do not need to apply any moves, print a single integer $0$ in the first line and either leave the second line empty or do not print it at all.


-----Examples-----
Input
6
abcdef
abdfec

Output
4
3 5 4 5 

Input
4
abcd
accd

Output
-1



-----Note-----

In the first example the string $s$ changes as follows: "abcdef" $\rightarrow$ "abdcef" $\rightarrow$ "abdcfe" $\rightarrow$ "abdfce" $\rightarrow$ "abdfec".

In the second example there is no way to transform the string $s$ into the string $t$ through any allowed moves.
"""
--------------------------
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n#Solution\n\nn = int(input())\ns = input()\nt = input()\n\nif s == t:\n    print(0)\nelse:\n    ans = []\n    for i in range(n):\n        if s[i] == t[i]:\n            continue\n        for j in range(i + 1, n):\n            if s[j] == t[i]:\n                ans.append(j)\n                s = s[:j] + s[j+1:] + s[j]\n                break\n        else:\n            print(-1)\n            break\n    else:\n        print(len(ans))\n        print(*ans)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n# cook your dish here\nn=int(input())\ns=input()\nt=input()\nif(s==t):\n    print(0)\n    print()\nelse:\n    if(len(set(s))!=len(set(t))):\n        print(-1)\n    else:\n        i=0\n        j=1\n        c=0\n        moves=[]\n        while(i<n-1):\n            if(s[i]!=t[i]):\n                if(s[j]==t[i]):\n                    s=s[:i]+s[j]+s[i+1:j]+s[i]+s[j+1:]\n                    moves.append(i)\n                    c+=1\n                    i+=1\n                    j+=1\n                else:\n                    j+=1\n            else:\n                i+=1\n                j+=1\n        if(s==t):\n            print(c)\n            for i in moves:\n                print(i,end=\" \")\n            print()\n        else:\n            print(-1)"
    }
  ],
  "created": 1648683473,
  "id": "cmpl-4rcArDE5NPzhr2YOWtbLLZu6vmqvS",
  "model": "code-davinci:002",
  "object": "text_completion"
}
0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n#Solution\n\nn = int(input())\ns = input()\nt = input()\n\nif s == t:\n    print(0)\nelse:\n    ans = []\n    for i in range(n):\n        if s[i] == t[i]:\n            continue\n        for j in range(i + 1, n):\n            if s[j] == t[i]:\n                ans.append(j)\n                s = s[:j] + s[j+1:] + s[j]\n                break\n        else:\n            print(-1)\n            break\n    else:\n        print(len(ans))\n        print(*ans)"
}
REASON stop
1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n# cook your dish here\nn=int(input())\ns=input()\nt=input()\nif(s==t):\n    print(0)\n    print()\nelse:\n    if(len(set(s))!=len(set(t))):\n        print(-1)\n    else:\n        i=0\n        j=1\n        c=0\n        moves=[]\n        while(i<n-1):\n            if(s[i]!=t[i]):\n                if(s[j]==t[i]):\n                    s=s[:i]+s[j]+s[i+1:j]+s[i]+s[j+1:]\n                    moves.append(i)\n                    c+=1\n                    i+=1\n                    j+=1\n                else:\n                    j+=1\n            else:\n                i+=1\n                j+=1\n        if(s==t):\n            print(c)\n            for i in moves:\n                print(i,end=\" \")\n            print()\n        else:\n            print(-1)"
}
REASON stop
