["\n\nimport sys\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().strip().split()]\n\ndef main():\n    n, m = read_ints()\n    a = read_ints()\n    segments = []\n    for _ in range(m):\n        l, r = read_ints()\n        segments.append((l, r))\n\n    min_val = min(a)\n    max_val = max(a)\n    max_diff = max_val - min_val\n    min_diff = max_diff\n    max_diff_segments = []\n    min_diff_segments = []\n\n    for l, r in segments:\n        diff = max(a[l-1:r]) - min(a[l-1:r])\n        if diff > min_diff:\n            min_diff = diff\n            min_diff_segments = [(l, r)]\n        elif diff == min_diff:\n            min_diff_segments.append((l, r))\n        if diff < max_diff:\n            max_diff = diff\n            max_diff_segments = [(l, r)]\n        elif diff == max_diff:\n            max_diff_segments.append((l, r))\n\n    # print(min_diff, min_diff_segments)\n    # print(max_diff, max_diff_segments)\n\n    # print(max_val - min_val)\n    print(max_val - min_val - min_diff)\n    print(len(min_diff_segments))\n    for l, r in min_diff_segments:\n        print(l, r)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().strip().split()]\n\ndef main():\n    n, m = read_ints()\n    a = read_ints()\n    segments = []\n    for _ in range(m):\n        l, r = read_ints()\n        segments.append((l, r))\n\n    min_val = min(a)\n    max_val = max(a)\n    max_diff = max_val - min_val\n    min_diff = max_diff\n    max_diff_segments = []\n    min_diff_segments = []\n\n    for l, r in segments:\n        diff = max(a[l-1:r]) - min(a[l-1:r])\n        if diff > min_diff:\n            min_diff = diff\n            min_diff_segments = [(l, r)]\n        elif diff == min_diff:\n            min_diff_segments.append((l, r))\n        if diff < max_diff:\n            max_diff = diff\n            max_diff_segments = [(l, r)]\n        elif diff == max_diff:\n            max_diff_segments.append((l, r))\n\n    print(min_diff, min_diff_segments)\n    print(max_diff, max_diff_segments)\n\n    print(max_val - min_val - max_diff)\n    print(len(max_diff_segments))\n    for l, r in max_diff_segments:\n        print(l, r)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().strip().split()]\n\ndef main():\n    n, m = read_ints()\n    a = read_ints()\n    segments = []\n    for _ in range(m):\n        l, r = read_ints()\n        segments.append((l, r))\n\n    min_val = min(a)\n    max_val = max(a)\n    max_diff = max_val - min_val\n    min_diff = max_diff\n    max_diff_segments = []\n    min_diff_segments = []\n\n    for l, r in segments:\n        diff = max(a[l-1:r]) - min(a[l-1:r])\n        if diff > min_diff:\n            min_diff = diff\n            min_diff_segments = [(l, r)]\n        elif diff == min_diff:\n            min_diff_segments.append((l, r))\n        if diff < max_diff:\n            max_diff = diff\n            max_diff_segments = [(l, r)]\n        elif diff == max_diff:\n            max_diff_segments.append((l, r))\n\n    print(min_diff, min_diff_segments)\n    print(max_diff, max_diff_segments)\n\n    #print(max_val - min_val)\n    print(max_val - min_val - min_diff)\n    print(len(min_diff_segments))\n    for l, r in min_diff_segments:\n        print(l, r)\n\nif __name__ == '__main__':\n    main()\n"]