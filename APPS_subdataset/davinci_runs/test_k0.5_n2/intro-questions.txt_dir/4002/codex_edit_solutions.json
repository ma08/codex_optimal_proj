["# https://atcoder.jp/contests/abc094/tasks/arc095_a\n\n\ndef main():\n    n, m, k = [int(x) for x in input().split()]\n    a = [[int(x) for x in input().split()] for i in range(n)]\n\n    dp = [[0] * (k+1) for i in range(m+1)]\n    for i in range(n):\n        for j in range(k+1):\n            dp[i][j] = dp[i-1][j]\n\n        for j in range(m):\n            for l in range(k):\n                dp[i][(l+a[i][j]) % k] = max(dp[i][(l+a[i][j]) % k], dp[i-1][l] + a[i][j])\n\n    print(dp[n-1][0])\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef solve(n, m, k, matrix, dp):\n    if dp[n][m] != -1:\n        return dp[n][m]\n    if n == 0:\n        dp[n][m] = matrix[n][m]\n    else:\n        dp[n][m] = max(solve(n - 1, m, k, matrix, dp), solve(n - 1, m - 1, k, matrix, dp)) + matrix[n][m]\n    return dp[n][m]\n\n\ndef main():\n    n, m, k = [int(x) for x in input().split()]\n    matrix = [[int(x) for x in input().split()] for i in range(n)]\n    dp = [[-1 for i in range(m)] for j in range(n)]\n    print(solve(n - 1, m - 1, k, matrix, dp) % k)\n\n\nif __name__ == '__main__':\n    main()\n", "# https://atcoder.jp/contests/abc094/tasks/arc095_a\n\n\ndef main():\n    n, m, k = [int(x) for x in input().split()]\n    a = []\n    for i in range(n):\n        a.append([int(x) for x in input().split()])\n\n    dp = [[0] * (k+1) for i in range(n+1)]\n    for i in range(n):\n        for j in range(k+1):\n            dp[i][j] = dp[i-1][j]\n\n        for j in range(m+1):\n            for l in range(k):\n                dp[i][(l+a[i][j]) % k] = max(dp[i][(l+a[i][j]) % k], dp[i-1][l] + a[i][j])\n\n    print(dp[n-1][0])\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef solve(n, m, k, matrix):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(m):\n        dp[0][i] = matrix[0][i]\n    for i in range(1, n):\n        for j in range(m):\n            for k in range(j + 1):\n                dp[i][j] = max(dp[i][j], dp[i - 1][k] + matrix[i][j])\n    return dp[n - 1][m - 1] % k\n\n\ndef main():\n    n, m, k = [int(x) for x in input().split()]\n    matrix = [[int(x) for x in input().split()] for i in range(n)]\n    print(solve(n, m, k, matrix))\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, m, k = [int(x) for x in input().split()]\n    a = []\n    for i in range(n):\n        a.append([int(x) for x in input().split()])\n\n    dp = [[0] * (k+1) for i in range(n+1)]\n    for i in range(n):\n        for j in range(k+1):\n            dp[i][j] = dp[i-1][j]\n\n        for j in range(m):\n            for l in range(k):\n                dp[i][(l+a[i][j]) % k] = max(dp[i][(l+a[i][j]) % k], dp[i-1][l] + a[i][j])\n\n    print(dp[n-1][0])\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n, m, k = [int(x) for x in input().split()]\n    a = []\n    for i in range(n):\n        a.append([int(x) for x in input().split()])\n\n    dp = [[0] * (k+1) for i in range(n+1)]\n    for i in range(n):\n        for j in range(k):\n            dp[i][j] = dp[i-1][j]\n\n        for j in range(m+1):\n            for l in range(k+1):\n                dp[i][(l+a[i][j]) % k] = max(dp[i][(l+a[i][j]) % k], dp[i-1][l] + a[i][j])\n\n    print(dp[n-1][0])\n\n\nif __name__ == \"__main__\":\n    main()\n"]