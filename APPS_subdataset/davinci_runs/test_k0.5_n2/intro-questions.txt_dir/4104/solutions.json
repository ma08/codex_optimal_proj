["res = 0\nval = 0\nsub = False\nfor c in input()+'+':\n  if c == '+' or c == '-':\n     if sub: val *= -1\n     res += val\n     val = 0\n     sub = (c == '-')\n  val *= 10\n  val += ord(c) - ord('0')\nprint(res)", "s = input()\n\nops = []\n\nfor i in range(0,len(s)):\n    ch = s[i]\n    if ch == '+' or ch == '-':\n        ops.append(i)\nops.append(len(s))\n\n\nfor i in range(0,len(ops)-1):\n    ch = s[ops[i]]\n    if ch == '-':\n        s += '+3'\n    if ch == '+':\n        s += '-5'\n    for j in range(ops[i], ops[i + 1] - 1):\n        s += '0'\n\n#print(s)\nprint(eval(s))", "s = input()\nval = eval(s)\nfor i in range(len(s)):\n    if s[i] == '+':\n        c = -5\n        j = i+1\n        while j < len(s) and s[j] != '+' and s[j] != '-':\n            j += 1\n            c *= 10\n        val += c\n    if s[i] == '-':\n        c = 3\n        j = i+1\n        while j < len(s) and s[j] != '+' and s[j] != '-':\n            j += 1\n            c *= 10\n        val += c\nprint(val)\n", "s = input()\nnow = 0\nn = len(s)\nans = []\nwhile (now < n) and (s[now] != '-') and (s[now] != '+'):\n    ans.append(ord(s[now])-48)\n    now += 1\nans.reverse()\nwhile now < n:\n    opt = s[now]\n    now += 1\n    a = [ord(opt)-48]\n    while (now < n) and (s[now] != '-') and (s[now] != '+'):\n        a.append(ord(s[now])-48)\n        now += 1\n    a.reverse()\n    if len(a) <= len(ans):\n        for i in range(len(ans) - len(a)):\n            a.append(0)\n    else:\n        for i in range(len(a) - len(ans)):\n            ans.append(0)\n    for i in range(len(ans)):\n        if opt == '-':\n            ans[i] -= a[i]\n        else:\n            ans[i] += a[i]\nret = 0\nans.reverse()\nfor i in range(len(ans)):\n    ret = ret * 10 + ans[i]\nprint(ret)\n", "a = input()\nq, s = [0], 0\nz = []\nfor i in range(len(a)):\n    y = a[i]\n    if (y==\"+\"):\n        z.append(1)\n        q.append(0)\n        s+=1\n    elif (y==\"-\"):\n        z.append(-1)\n        q.append(0)\n        s+=1\n    q[s] = 10*q[s] + (ord(y)-ord(\"0\"))\notv = q[0]\nfor i in range(1, s+1):\n    otv += z[i-1]*q[i]\nprint(otv)", "s = input()\nval = eval(s)\nfor i in range(len(s)):\n    if s[i] == '+':\n        c = -5\n        j = i+1\n        while j < len(s) and s[j] != '+' and s[j] != '-':\n            j += 1\n            c *= 10\n        val += c\n    if s[i] == '-':\n        c = 3\n        j = i+1\n        while j < len(s) and s[j] != '+' and s[j] != '-':\n            j += 1\n            c *= 10\n        val += c\nprint(val)", "s = [ord(c) - 48 for c in input()]\nr, t, f = 0, 0, 1\nfor x in s:\n    if x < 0:\n        r += f * t\n        f = -4 - x\n        t = 0\n    t = t * 10 + x\nprint(r + f * t)\n", "from re import sub as b\nprint(eval(b(r'`', '-', b(r'(?P<a>-\\d*)', lambda x: b('-', '+3', x.group('a') * 3, 1), b(r'(?P<a>\\+\\d*)', lambda x: b('\\+', '`5', x.group('a') * 3, 1), input())))))\n", "s = input()\nval = eval(s)\nfor i in range(len(s)):\n    if s[i] == '+':\n        c = -5\n        j = i+1\n        while j < len(s) and s[j] != '+' and s[j] != '-':\n            j += 1\n            c *= 10\n        val += c\n    if s[i] == '-':\n        c = 3\n        j = i+1\n        while j < len(s) and s[j] != '+' and s[j] != '-':\n            j += 1\n            c *= 10\n        val += c\nprint(val)", "res = 0\ncur = 0\nsign = +1\nfor c in input() + \"+\":\n    if c in \"+-\":\n        res += sign * cur\n        cur = 0\n    if c == '+':\n        sign = +1\n    if c == '-':\n        sign = -1\n    cur = cur * 10 + ord(c) - ord('0')\nprint(res)\n", "s = input()\nval = eval(s)\nfor i in range(len(s)):\n    if s[i] == '+':\n        c = -5\n        j = i+1\n        while j < len(s) and s[j] != '+' and s[j] != '-':\n            j += 1\n            c *= 10\n        val += c\n    if s[i] == '-':\n        c = 3\n        j = i + 1\n        while j < len(s) and s[j] != '+' and s[j] != '-':\n            j += 1\n            c *= 10\n        val += c\nprint(val)", "s = input()\nval = eval(s)\nfor i in range(len(s)):\n    if s[i] ==  '+':\n        j = i + 1\n        c = -5\n        while j < len(s) and s[j] != '+' and s[j] != '-':\n            c *= 10\n            j += 1\n        val += c\n    elif s[i] == '-':\n        j = i + 1\n        c = 3\n        while j < len(s) and s[j] != '+' and s[j] != '-':\n            c *= 10\n            j += 1\n        val += c\nprint(val)", "in_str = input().replace('-', ' - ').replace('+', ' + ').split()\nres = int(in_str[0])\nfor i in range(1, len(in_str) - 1):\n    if in_str[i] == '+':\n        res += int(in_str[i + 1]) - 5 * (10 ** len(in_str[i + 1]))\n    elif in_str[i] == '-':\n        res -= int(in_str[i + 1]) - 3 * (10 ** len(in_str[i + 1]))\n    else:\n        pass\nprint(res)\n", "s = input().strip() + '+'\nans = 0\n\ncurr = 0\nsign = 1\nfor c in s:\n    if c in '-+':\n        ans += sign*curr\n        curr = 0\n    if c == '-':\n        sign = -1\n    elif c == '+':\n        sign = 1\n    curr = curr*10 + (ord(c) - ord('0'))\nprint(ans)\n", "ans=0\nop=1\nnow=0\ns=input()\nl=len(s)\nfor i in range(l):\n    if s[i]=='+':\n        ans=ans+op*now\n        now=0\n        op=1\n    elif s[i]=='-':\n        ans=ans+op*now\n        now=0\n        op=-1\n    now=now*10+ord(s[i])-48\nans=ans+op*now\nprint(ans)", "s = input()\nval = eval(s)\nfor i in range(len(s)):\n    if s[i] == '+':\n        c = -5\n        j = i+1\n        while j < len(s) and s[j] != '+' and s[j] != '-':\n            j += 1\n            c *= 10\n        val += c\n    if s[i] == '-':\n        c = 3\n        j = i + 1\n        while j < len(s) and s[j] != '+' and s[j] != '-':\n            j += 1\n            c *= 10\n        val += c\nprint(val)", "s = map(lambda c: ord(c) - 48, input())\nr, t, f = 0, 0, 1\nfor x in s:\n    if x < 0:\n        r += f * t\n        f = -4 - x\n        t = 0\n    t = t * 10 + x\nprint(r + f * t)", "s = input().strip() + '+'\nans = 0\n\ncurr = 0\nsign = 1\nfor c in s:\n    if c in '-+':\n        ans += sign*curr\n        curr = 0\n    if c == '-':\n        sign = -1\n    elif c == '+':\n        sign = 1\n    curr = curr*10 + (ord(c) - ord('0'))\nprint(ans)", "s = input().strip() + '+'\nans = 0\n\ncurr = 0\nsign = 1\nfor c in s:\n    if c in '-+':\n        ans += sign*curr\n        curr = 0\n    if c == '-':\n        sign = -1\n    elif c == '+':\n        sign = 1\n    curr = curr*10 + (ord(c) - ord('0'))\nprint(ans)", "s = map(lambda c: ord(c) - 48, input())\nr, t, f = 0, 0, 1\nfor x in s:\n    if x < 0:\n        r += f * t\n        f = -4 - x\n        t = 0\n    t = t * 10 + x\nprint(r + f * t)", "import re\ns=input()\nprint(eval(s)+eval(re.sub(\"\\d\",\"0\",s).replace(\"-\",\"*3\").replace(\"+\",\"-5\").replace(\"*\",\"+\")))", "import re\ns=input()\nprint(eval(s)+eval(re.sub(\"-|\\+|\\d\",lambda m:[\"0\",[\"+3\",\"-5\"][m[0]==\"+\"]][m[0]in\"+-\"],s)))", "s = input().strip() + '+'\nans = 0\n\ncurr = 0\nsign = 1\nfor c in s:\n    if c in '-+':\n        ans += sign*curr\n        curr = 0\n    if c == '-':\n        sign = -1\n    elif c == '+':\n        sign = 1\n    curr = curr*10 + (ord(c) - ord('0'))\nprint(ans)", "a = input()\nq, s = [0], 0\nz = []\nfor i in range(len(a)):\n    y = a[i]\n    if (y==\"+\"):\n        z.append(1)\n        q.append(0)\n        s+=1\n    elif (y==\"-\"):\n        z.append(-1)\n        q.append(0)\n        s+=1\n    q[s] = 10*q[s] + (ord(y)-ord(\"0\"))\notv = q[0]\nfor i in range(1, s+1):\n    otv += z[i-1]*q[i]\nprint(otv)"]