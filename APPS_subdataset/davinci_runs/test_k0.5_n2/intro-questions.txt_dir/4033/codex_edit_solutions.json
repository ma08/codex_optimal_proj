["\n\ndef main():\n    a, b = map(int, input().split())\n    if a == b:\n        print(2 * a)\n    else:\n        print((a + b) * 2)\n\nmain()\n", "\n\ndef main():\n    a, b = map(int, input().split())\n    if a > b:\n        a, b = b, a\n    if a == b:\n        print(4 * a)\n    else:\n        print((a + b) * 2)\n\nmain()\n", "\n\n\ndef main():\n    a, b = map(int, input().split())\n    if a == b:\n        print(4 * a)\n    else:\n\n        print((a + b) * 2)\n\nmain()\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport os\nimport sys\nimport time\nimport shutil\nimport argparse\n\n\ndef parse_args():\n    parser = argparse.ArgumentParser()\n    parser.add_argument('-p', '--path', help='path to the file')\n    parser.add_argument('-n', '--name', help='name of the file')\n    parser.add_argument('-t', '--type', help='type of the file')\n    parser.add_argument('-d', '--date', help='date of the file')\n    return parser.parse_args()\n\n\ndef get_file_info(path):\n    file_info = {}\n    file_info['path'] = path\n    file_info['name'] = os.path.basename(path)\n    file_info['type'] = os.path.splitext(path)[1]\n    file_info['date'] = time.strftime('%Y%m%d', time.localtime(os.path.getmtime(path)))\n    return file_info\n\n\ndef create_dir(path):\n    if not os.path.exists(path):\n        os.makedirs(path)\n\n\ndef move_file(src, dst):\n    if not os.path.exists(src):\n        print('{} does not exist'.format(src))\n        return\n    if not os.path.exists(dst):\n        print('{} does not exist'.format(dst))\n        return\n    shutil.move(src, dst)\n    print('{} moved to {}'.format(src, dst))\n\n\ndef main():\n    args = parse_args()\n    file_info = get_file_info(args.path)\n    if args.name:\n        file_info['name'] = args.name\n    if args.type:\n        file_info['type'] = args.type\n    if args.date:\n        file_info['date'] = args.date\n    dst_dir = os.path.join(os.path.dirname(file_info['path']), file_info['date'])\n    dst_path = os.path.join(dst_dir, file_info['name'])\n    create_dir(dst_dir)\n    move_file(file_info['path'], dst_path)\n\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport os\nimport sys\nimport time\n\n\ndef get_file_list(dir_name):\n    file_list = []\n    for root, dirs, files in os.walk(dir_name):\n        for file in files:\n            file_list.append(os.path.join(root, file))\n    return file_list\n\n\ndef get_file_info(file_name):\n    file_info = {}\n    file_info['name'] = file_name\n    file_info['size'] = os.path.getsize(file_name)\n    file_info['ctime'] = time.ctime(os.path.getctime(file_name))\n    file_info['mtime'] = time.ctime(os.path.getmtime(file_name))\n    return file_info\n\n\ndef print_file_info(file_info):\n    print('name:', file_info['name'])\n    print('size:', file_info['size'])\n    print('ctime:', file_info['ctime'])\n    print('mtime:', file_info['mtime'])\n\n\ndef main():\n    if len(sys.argv) != 2:\n        print('Usage:', sys.argv[0], 'dir_name')\n        sys.exit(1)\n\n    dir_name = sys.argv[1]\n    file_list = get_file_list(dir_name)\n    for file in file_list:\n        file_info = get_file_info(file)\n        print_file_info(file_info)\n\n\nif __name__ == '__main__':\n    main()\n"]