["import sys\ninput = sys.stdin.readline\n\nn=int(input())\nF=list(map(int,input().split()))\n\nUSE=[0]*(n+1)\n\nB=[]\nfor i in range(n):\n    USE[F[i]]=1\n    if F[i]==0:\n        B.append(i+1)\n\nA=[]\nfor i in range(1,n+1):\n    if USE[i]==0:\n        A.append(i)\n        \nfor i in range(len(A)-1):\n    if A[i]==B[i]:\n        A[i],A[i+1]=A[i+1],A[i]\n\nif A[-1]==B[-1]:\n    A[-1],A[-2]=A[-2],A[-1]\n\nind=0\n\nfor i in range(n):\n    if F[i]==0:\n        F[i]=A[ind]\n        ind+=1\n\nprint(*F)\n", "n = int(input())\nls = list(map(int, input().split()))\n\nnogive = set(list(range(1,n+1)))\nnoget = set(list(range(1,n+1)))\nfor i,e in enumerate(ls):\n    if e != 0:\n        nogive.remove(i+1)\n        noget.remove(e)\n\nprio = nogive.intersection(noget)\n\nwhile len(nogive):\n    if len(prio):\n        giver = prio.pop()\n        nogive.remove(giver)\n    else:\n        giver = nogive.pop()\n\n    if len(prio):\n        getter = prio.pop()\n        noget.remove(getter)\n    else:\n        getter = noget.pop()\n        if getter == giver:\n            getter2 = noget.pop()\n            noget.add(getter)\n            getter = getter2\n    ls[giver-1] = getter\n\nfor e in ls:\n    print(e, end=' ')\n\n\n    \n", "N = int(input())\n\narr = list(map(int, input().split()))\n\nuniq = set(arr)\nuniq.remove(0)\n\nnot_found = [x for x in range(1,N+1) if x not in uniq]\n\nimport random\nwhile True:\n  random.shuffle(not_found)\n  arr2 = arr.copy()\n  idx = 0\n  for i in range(N):\n    if arr2[i] == 0:\n      arr2[i] = not_found[idx]\n      idx += 1\n  if not any(i+1==x for i,x in enumerate(arr2)):\n    print(' '.join(map(str, arr2)))\n    break\n\n", "n = int(input())\nmas = list(map(int, input().split()))\ncou = []\nfor i in range(n + 1):\n\tcou.append(0)\nx = -1\nfor i in range(n):\n\tif mas[i] == 0:\n\t\tif x == -1:\n\t\t\tx = i\n\t\telse:\n\t\t\ty = i\nfor i in range(n):\n\tcou[mas[i]] = 1\nnum = n\nfor i in range (1, n + 1):\n\tif cou[i] != 1:\n\t\tcou[i] = 1\n\t\twhile True:\n\t\t\tnum -= 1\n\t\t\tif mas[num] == 0:\n\t\t\t\tmas[num] = i\n\t\t\t\tbreak\nfor i in range(n):\n\tif mas[i] == i + 1:\n\t\tif i == x:\n\t\t\tmas[i], mas[y] = mas[y], mas[i]\n\t\telse:\n\t\t\tmas[i], mas[x] = mas[x], mas[i]\nprint(*mas)\n", "from sys import stdin,stdout\nn=int(stdin.readline().strip())\ns=list(map(int,stdin.readline().strip().split()))\n\nvis=[False for i in range(n+10)]\nfor i in s:\n    vis[i]=True\nnu=[]\nnu1=[]\nfor i in range(1,n+1):\n    if not vis[i]:\n        if s[i-1]==0:\n            nu.append(i)\n        else:\n            nu1.append(i)\nnu.sort()\nwhile len(nu)>=2:\n    if len(nu)%2!=0:\n        s[nu[-3]-1]=nu[-1]\n        s[nu[-1]-1]=nu[-2]\n        s[nu[-2]-1]=nu[-3]\n        nu.pop()\n        nu.pop()\n        nu.pop()\n        continue\n    s[nu[-1]-1]=nu[-2]\n    s[nu[-2]-1]=nu[-1]\n    nu.pop()\n    nu.pop()\n\n\nif len(nu)==1:\n    s[nu[-1]-1]=nu1[-1]\n    nu1.pop()\n    nu1.append(nu[-1])\nfor i in range(n):\n    if s[i]==0:\n        s[i]=nu1[-1]\n        nu1.pop()\nprint(*s)\n\n    \n", "n = int(input())\nl = list(map(int,input().split()))\ndostal = [0] * (n+1)\nfor i in range(n):\n\tdostal[l[i]] = 1\ndo_dania = []\nind = []\nfor i in range(n):\n\tif l[i] == 0:\n\t\tind.append(i)\nfor i in range(1, n+1):\n\tif dostal[i] == 0:\n\t\tdo_dania.append(i)\n#print(do_dania)\nj = 0\nfor i in range(n):\n\tif l[i] == 0:\n\t\tl[i] = do_dania[j]\n\t\tj += 1\nfor i in range(len(ind) - 1):\n\tif l[ind[i]] == ind[i] + 1:\n\t\tkk = l[ind[i]]\n\t\tl[ind[i]] = l[ind[i+1]]\n\t\tl[ind[i+1]] = kk\nif l[ind[-1]] == ind[-1] + 1:\n\tkk = l[ind[-1]]\n\tl[ind[-1]] = l[ind[0]]\n\tl[ind[0]] = kk\nprint(*l)", "\nN = int(input())\n\na = list(map(int,input().split()))\n\nend = [False] * N\ngive = []\n\nfor i in range(N):\n\n    if a[i] != 0:\n        end[a[i] - 1] = True\n\n    else:\n        give.append(i)\n\nwant = []\n\nfor i in range(N):\n    if not end[i]:\n        want.append(i)\n\n#print (give)\n#print (want)\n\nfor i in range(len(give) - 1):\n\n    if give[i] == want[i]:\n        t = want[i+1]\n        want[i+1] = want[i]\n        want[i] = t\n\nif give[-1] == want[-1]:\n    t = want[-1]\n    want[-1] = want[-2]\n    want[-2] = t\n\nfor i in range(len(give)):\n\n    a[give[i]] = want[i] + 1\n\nprint(\" \".join(map(str,a)))\n", "q=int(input())\nw=list(map(int,input().split()))\ne=[0]*q\nr=[]\nt=[]\nfor i in range(q):\n    if w[i]==0:r.append(i)\n    else:e[w[i]-1]=1\nfor i in range(q):\n    if e[i]==0:t.append(i)\nfor i in range(len(r)):\n    if r[i]==t[i]:\n        if i==0:t[i],t[1]=t[1],t[i]\n        else:t[i],t[0]=t[0],t[i]\nfor i in range(len(r)):\n    w[r[i]]=t[i]+1\nprint(*w)", "import random\nn = int(input())\na = [int(x) for x in input().split()]\nj = 1\nb = [0] * (n+1)\nfor i in a:\n  b[i] = 1\nc = []\nfor i,j in enumerate(b):\n  if j == 0:\n    c.append(i)\nc = set(c)\nfor i in range(1,n+1):\n  i = i - 1\n  if a[i] == 0:\n    if i + 1 in c:\n      for k in c:\n        if k!=i+1:\n          a[i] = k\n          c.remove(k)\n          break\nfor i in range(1,n+1):\n  i = i - 1\n  if a[i] == 0:\n    for k in c:\n      if k!=i+1:\n        a[i] = k\n        c.remove(k)\n        break\nfor i in a:\n  print(i,end=\" \")", "n=int(input())\na=list(map(int,input().split()))\nvis=[False for i in range(n+1)]\nc={}\nfor i in range(n):\n    if a[i] is not 0:\n        vis[a[i]]=True\n    else:\n        c[i]=True\nd={}\nfor i in range(1,n+1):\n    if vis[i]==False:\n        d[i]=True\ndelete=[]\nfor i in c:\n    if i+1 in d:\n        k=0\n        for j in d:\n            if j is not i+1:\n                a[i]=j\n                k=j\n                break\n        d.pop(k)\n        delete.append(i)\nfor i in delete:\n    c.pop(i)\np=[i for i in c]\nq=[i for i in d]\nfor i in range(len(p)):\n    a[p[i]]=q[i]\nprint(\" \".join(map(str,a)))", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int, minp().split()))\n\ndef solve():\n\tn = mint()\n\tf = list(mints())\n\tw = [False]*(n+1)\n\tp = [False]*(n+1)\n\tfor i in f:\n\t\tp[i] = True\n\tq = []\n\tfor i in range(1, n+1):\n\t\tif w[i] or p[i]:\n\t\t\tcontinue\n\t\ts = i\n\t\te = i\n\t\tw[i] = True\n\t\tok = True\n\t\twhile f[e-1] != 0:\n\t\t\te = f[e-1]\n\t\t\tif e == s:\n\t\t\t\tok = False\n\t\t\t\tbreak\n\t\t\tw[e] = True\n\t\tif ok:\n\t\t\tq.append((s,e))\n\tfor i in range(len(q)-1):\n\t\tf[q[i][1]-1] = q[i+1][0]\n\tf[q[-1][1]-1] = q[0][0]\n\t#print(q)\n\tprint(' '.join(map(str,f)))\n\n#for i in range(mint()):\nsolve()\n", "n=int(input())\nl=list(map(int,input().split()))\nnew=[-1]*n\nfor i in l:\n\tif i!=0:\n\t\tnew[i-1]=0\nd=[]\nfor i in range(n):\n\tif new[i]==-1:\n\t\td.append(i+1)\nloc=0\nans=[]\nindex=[]\nflag=0\nfor i in range(n):\n\tif l[i]!=0:\n\t\tans.append(l[i])\n\telse:\n\t\tif d[loc]!=i+1 and flag==0:\n\t\t\tans.append(d[loc])\n\t\t\tif len(index)==0:\n\t\t\t\tindex.append(i)\n\t\telse:\n\t\t\tif len(index)!=0:\n\t\t\t\tans.append(d[loc])\n\t\t\t\tans[-1],ans[index[-1]]=ans[index[-1]],ans[-1]\n\t\t\t\tflag=0\n\t\t\telse:\n\t\t\t\tflag=1\n\t\t\t\tans.append(d[loc])\n\t\t\t\tif len(index)==0:\n\t\t\t\t\tindex.append(i)\n\t\tloc+=1\nprint (*ans)", "n = int(input())\na = list(map(int, input().split()))\nsend = []\nrecv = []\nvis = [0] * n\nfor i in range(n):\n    if a[i] == 0:\n        send.append(i+1)\n    else:\n        vis[a[i]-1] = 1\nfor i in range(n):\n    if vis[i] == 0:\n        recv.append(i+1)\nsend.sort()\nrecv.sort()\nrecv = list(set(send) & set(recv)) + list(set(recv) - set(send))\np = 0\nfor i in range(len(send)):\n    while recv[p] == -1:\n        p = (p+1) % len(recv)\n    if send[i] == recv[p]:\n            p = (p+1) % len(recv)\n            while recv[p] == -1:\n                p = (p+1) % len(recv)\n    a[send[i]-1] = recv[p]\n    recv[p] = -1\n    p = (p+1) % len(recv)\nprint(*a)        \n", "import sys\n\nn, *f = map(int, sys.stdin.read().split())\nf = [None] + f\n\ndef main():\n    no_receieve = set(range(1, n+1)) - set(f[1:])\n    if not no_receieve:\n        return f[1:]\n    \n    no_send = []\n    for i in range(1, n+1):\n        if f[i] == 0:\n            no_send.append(i)\n    \n    no_send.sort()\n    no_receieve = sorted(no_receieve, reverse=True)\n\n    for i in range(len(no_send)):\n        if no_send[i] == no_receieve[i]:\n            if i >= 1:\n                no_send[i], no_send[i-1] = no_send[i-1], no_send[i]\n            else:\n                no_send[0], no_send[1] = no_send[1], no_send[0]\n    \n    for i in range(len(no_send)):\n        f[no_send[i]] = no_receieve[i]\n    \n    return f[1:]\n\ndef __starting_point():\n    ans = main()\n    print(*ans, sep=' ')\n__starting_point()", "from sys import stdin\nfrom collections import deque\nmod = 10**9 + 7\nimport sys\n# def rl():\n#     return [int(w) for w in stdin.readline().split()]\nfrom bisect import bisect_right\nfrom bisect import bisect_left\nfrom collections import defaultdict\nfrom math import sqrt,factorial,gcd,log2,inf,ceil\n# map(int,input().split())\n# # l = list(map(int,input().split()))\n# from itertools import permutations\nimport heapq\n\n# n,k = map(int,input().split())\n# x = int(input())\n# s = str(x)\n#\n# ans = ['0']*n\n#\n# flag = 0\n#\n# for i in range(n):\n#   if i-k>=0:\n#       ans[i] = ans[i-k]\n#       if ans[i]<s[i]:\n#           flag = 1\n#           break\n#   else:\n#       ans[i] = s[i]\n# s1 = ''.join(ans)\n# if not flag:\n#     print(n)\n#     print(s1)\n#     return\n# flag = 0\n# ans = ['0']*n\n#\n# for i in range(k-1,-1,-1):\n#     if s[i] == '9':\n#         continue\n#     else:\n#         ans[i] = str(int(s[i]) + 1)\n#         flag = 1\n#\n#         for j in range(i+1,k-1):\n#             ans[j] = '0'\n#         for j in range(i):\n#             ans[j] = s[j]\n#         break\n# if flag:\n#\n#  for i in range(k,n):\n#    if i-k<0:\n#      continue\n#\n#    else:\n#        ans[i] = ans[i-k]\n#\n#\n#  print(len(ans))\n#  print(''.join(ans))\n#\n# else:\n#\n#     if s[0] != '9':\n#         for i in range(n):\n#             if i-k<0:\n#               if i == 0:\n#                  ans[i] = str(int(s[i]) + 1)\n#               else:\n#                   ans[i] = '0'\n#             else:\n#                 ans[i] = ans[i-k]\n#         print(len(ans))\n#         print(''.join(ans))\n#     else:\n#         # print(ans)\n#         ans+=['0']\n#         for i in range(n+1):\n#             if i-k<0:\n#                 if i == 0:\n#                     ans[i] = '1'\n#                 else:\n#                     ans[i] = '0'\n#             else:\n#                 ans[i] = ans[i-k]\n#         print(len(ans))\n#         print(''.join(ans))\n#\n#\n\n\n\n\n#\n# t = int(input())\n#\n# for _ in range(t):\n#\n#     n,s = map(int,input().split())\n#     l = list(map(int,input().split()))\n#     pa = []\n#     ans = 0\n#     if sum(l)<=s:\n#         print(0)\n#         continue\n#     for i in range(n-1):\n#\n#         if l[i]>l[i+1]:\n#             if pa == []:\n#               pa.append(l[i])\n#               ans = i+1\n#             else:\n#                if pa[0]<l[i] and s-pa[0]>=0:\n#\n#                    s-=pa[0]\n#                    pa.pop()\n#                    pa.append(l[i])\n#                    ans = i+1\n#                    if s == 0:\n#                        break\n#                else:\n#                    if s>=l[i]:\n#                        s-=l[i]\n#                    else:\n#                        break\n#\n#         else:\n#             if s>=l[i]:\n#                 s-=l[i]\n#             else:\n#                 break\n#\n#     print(ans)\n\n\n\n\n\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n# t = int(input())\n#\n# for _ in range(t):\n#\n#     n,m = map(int,input().split())\n#     l1 = list(map(int,input().split()))\n#     l2 = list(map(int,input().split()))\n#     hash = defaultdict(int)\n#\n#     seti = set(l2)\n#     for i in range(n):\n#         if l1[i] in seti:\n#             hash[l1[i]] = i\n#     st = []\n#     ans = 0\n#     s = set(l1)\n#     for i in range(m):\n#           if l2[i] in s:\n#              if st == []:\n#                  z = hash[l2[i]]\n#                  st.append(z)\n#                  ans+=2*z + 1\n#              else:\n#                  z = hash[l2[i]]\n#                  # print(i,z)\n#                  if st[0]>z:\n#                      ans+=1\n#                  else:\n#                      ans+=2*(z-1)+1\n#                      st.pop()\n#                      st.append(z-1)\n#\n#     print(ans)\n#\n#\n#\n\n\n\nn = int(input())\nl = list(map(int,input().split()))\nla = [i+1 for i in range(n)]\ns = set(la)\nyo = set()\nfor i in l:\n  if i is not 0:\n    s.remove(i)\n    yo.add(i)\nk = list(s)\nk.sort()\nfor i in range(n):\n    if l[i] == 0:\n        z = k.pop()\n        l[i] = z\n\nfor i in range(n):\n    if l[i] == i+1:\n\n        for j in range(n):\n          if l[j] not in yo:\n            if l[j] == j+1 and i!=j:\n                l[i],l[j] = l[j],l[i]\n                break\n            else:\n                if l[j]!=i+1 and l[i]!=j+1:\n                    l[i],l[j] = l[j],l[i]\n                    break\n\n\n\n\n        break\n\nprint(*l)\n\n\n", "n = int(input())\nl = list(map(int, input().strip().split()))\nrecieved = [False for i in range(n+1)]\nrecieved[0] = True\nfor i in range(len(l)):\n    recieved[l[i]] = True\nrecievedNotGiven = []\ngivenNotRecieved = []\nboth = []\nfor i in range(1,n+1):\n    if l[i-1] == 0 and recieved[i] == False:\n        both.append(i)\n    elif l[i-1] == 0:\n        recievedNotGiven.append(i)\n    elif recieved[i] == False:\n        givenNotRecieved.append(i)\nif len(both) != 1:\n    for i in range(len(recievedNotGiven)):\n        l[recievedNotGiven[i]-1] = givenNotRecieved[i]\n    for i in range(len(both)):\n        if i < len(both)-1:\n            l[both[i]-1] = both[i+1]\n        else:\n            l[both[i]-1] = both[0]\nelse:\n    l[both[0]-1] = givenNotRecieved[0]\n    l[recievedNotGiven[0]-1] = both[0]\n    for i in range(1,len(givenNotRecieved)):\n        l[recievedNotGiven[i]-1] = givenNotRecieved[i]\nfor i in range(len(l)):\n    print(l[i], end = \" \")", "n = int(input())\nf = list(map(int, input().split()))\ngive = set(i for i in range(n))\nget = set(i for i in range(n))\nfor i in range(n):\n    if f[i] > 0:\n        give.remove(i)\n        get.remove(f[i]-1)\ngivel = list(give)\nfor x in givel:\n    if x in get:\n        give.remove(x)\n        for j in get:\n            if j == x:\n                continue\n            f[x] = j+1\n            break\n        get.remove(j)\ngivel = list(give)\nfor x in give:\n    for j in get:\n        f[x] = j+1\n        break\n    get.remove(j)\nprint(' '.join(map(str, f)))", "n = int(input())\na = list(map(int, input().split()))\na = [-1] + a\n\nz = []\ns = []\nf = []\nr = [0] * (n + 1)\ng = [0] * (n + 1)\nfor i in range(1, n+1):\n    if a[i] != 0:\n        g[i] = 1\n        r[a[i]] = 1\nfor i in range(1, n + 1):\n    if g[i] == 1 and r[i] == 0:\n        s.append(i)\n    elif g[i] == 0 and r[i] == 1:\n        f.append(i)\n    elif g[i] ==0 and r[i] == 0:\n        z.append(i)\nzp = 0\ni = 1\n# print(f)\n# print(s)\nfor i in range(len(f)):\n    # if i < len(f):\n    fin = f[i]\n    st = s[i]\n    if (i == len(f) - 1) and len(z) == 1:\n        a[z[0]] = st\n        a[fin] = z[0]\n        z.pop()\n    else:\n        a[fin] = st\n\nif len(z) > 0:\n    st = z[0]\n    for i in range(len(z)):\n        ze = z[i]\n        if i < len(z) - 1:\n            a[ze] = z[i + 1]\n        else:\n            a[ze] = st\nprint(*a[1:])\n\n\n", "n = int(input())\narr = list(map(int, input().split()))\nfrds = list(range(1, n + 1))\nremain = set(frds) - set(arr)\nslots = set()\nfor i in range(len(arr)):\n    if arr[i] == 0:\n        slots.add(i + 1)\nsame = slots & remain\nfor i in same:\n    x = remain.pop()\n    if x-1 != i-1:\n        arr[i-1] = x\n    else:\n        y = remain.pop()\n        arr[i-1] = y\n        remain.add(x)\nfor i in range(len(arr)):\n    if arr[i] == 0:\n        arr[i] = remain.pop()\nprint(*arr, sep=\" \")\n"]