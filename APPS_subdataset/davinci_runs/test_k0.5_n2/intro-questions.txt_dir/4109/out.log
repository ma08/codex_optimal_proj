"""
Takahashi, who is a novice in competitive programming, wants to learn M algorithms.
Initially, his understanding level of each of the M algorithms is 0.
Takahashi is visiting a bookstore, where he finds N books on algorithms.
The i-th book (1\leq i\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\leq j\leq M).
There is no other way to increase the understanding levels of the algorithms.
Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.


"""
--------------------------
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\nimport math\nfrom collections import defaultdict\n\ndef main():\n    N, M, X = map(int, sys.stdin.readline().split())\n    A = [[int(x) for x in sys.stdin.readline().split()] for _ in range(N)]\n    C = [int(x) for x in sys.stdin.readline().split()]\n    dp = defaultdict(lambda: 10**10)\n    dp[0] = 0\n    for i in range(N):\n        for j in range(1 << M):\n            dp[j | A[i][0]] = min(dp[j | A[i][0]], dp[j] + C[i])\n    if dp[(1 << M) - 1] == 10**10:\n        print(-1)\n    else:\n        print(dp[(1 << M) - 1])\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n#@author: alison\n\nn, m = map(int, input().split())\n\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\nb = list(map(int, input().split()))\n\nans = 'Yes'\n\nfor i in range(m):\n    sum = 0\n    for j in range(n):\n        sum += a[j][i]\n    if sum < b[i]:\n        ans = 'No'\n\nif ans == 'No':\n    print(ans)\nelse:\n    print(ans)\n    x = [0] * n\n    for i in range(m):\n        for j in range(n):\n            if a[j][i] > 0:\n                x[j] += b[i]\n                break\n    print(*x)"
    }
  ],
  "created": 1648684538,
  "id": "cmpl-4rcS2z3tgmHujq2YuvqiV8jdH0wxX",
  "model": "code-davinci:002",
  "object": "text_completion"
}
0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\nimport math\nfrom collections import defaultdict\n\ndef main():\n    N, M, X = map(int, sys.stdin.readline().split())\n    A = [[int(x) for x in sys.stdin.readline().split()] for _ in range(N)]\n    C = [int(x) for x in sys.stdin.readline().split()]\n    dp = defaultdict(lambda: 10**10)\n    dp[0] = 0\n    for i in range(N):\n        for j in range(1 << M):\n            dp[j | A[i][0]] = min(dp[j | A[i][0]], dp[j] + C[i])\n    if dp[(1 << M) - 1] == 10**10:\n        print(-1)\n    else:\n        print(dp[(1 << M) - 1])\n\nif __name__ == '__main__':\n    main()"
}
REASON stop
1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n#@author: alison\n\nn, m = map(int, input().split())\n\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\nb = list(map(int, input().split()))\n\nans = 'Yes'\n\nfor i in range(m):\n    sum = 0\n    for j in range(n):\n        sum += a[j][i]\n    if sum < b[i]:\n        ans = 'No'\n\nif ans == 'No':\n    print(ans)\nelse:\n    print(ans)\n    x = [0] * n\n    for i in range(m):\n        for j in range(n):\n            if a[j][i] > 0:\n                x[j] += b[i]\n                break\n    print(*x)"
}
REASON stop
