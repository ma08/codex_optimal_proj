"""
You are given an array $a$ consisting of $n$ integers $a_1, a_2, \dots, a_n$.

Your problem is to find such pair of indices $i, j$ ($1 \le i < j \le n$) that $lcm(a_i, a_j)$ is minimum possible.

$lcm(x, y)$ is the least common multiple of $x$ and $y$ (minimum positive number such that both $x$ and $y$ are divisors of this number).


-----Input-----

The first line of the input contains one integer $n$ ($2 \le n \le 10^6$) â€” the number of elements in $a$.

The second line of the input contains $n$ integers $a_1, a_2, \dots, a_n$ ($1 \le a_i \le 10^7$), where $a_i$ is the $i$-th element of $a$.


-----Output-----

Print two integers $i$ and $j$ ($1 \le i < j \le n$) such that the value of $lcm(a_i, a_j)$ is minimum among all valid pairs $i, j$. If there are multiple answers, you can print any.


-----Examples-----
Input
5
2 4 8 3 6

Output
1 2

Input
5
5 2 11 3 7

Output
2 4

Input
6
2 5 10 1 10 2

Output
1 4
"""
--------------------------
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nfrom sys import stdin\n\nn = int(stdin.readline())\na = [int(x) for x in stdin.readline().split()]\n\nd = {}\nfor i in range(n):\n    if a[i] in d:\n        d[a[i]].append(i)\n    else:\n        d[a[i]] = [i]\n\n# print(d)\n\n# print(d)\n\nans = n\nfor x in d:\n    if len(d[x]) > 1:\n        for i in range(len(d[x]) - 1):\n            if d[x][i + 1] - d[x][i] < ans:\n                ans = d[x][i + 1] - d[x][i]\n\n# print(ans)\n\nfor x in d:\n    if len(d[x]) > 1:\n        for i in range(len(d[x]) - 1):\n            if d[x][i + 1] - d[x][i] == ans:\n                print(d[x][i] + 1, d[x][i + 1] + 1)\n                exit(0)\n\nfor x in d:\n    if len(d[x]) > 1:\n        for i in range(len(d[x]) - 1):\n            if d[x][i + 1] - d[x][i] == ans + 1:\n                print(d[x][i] + 1, d[x][i + 1] + 1)\n                exit(0)\n\nfor x in d:\n    if len(d[x]) > 1:\n        for i in range(len(d[x]) - 1):\n            if d[x][i + 1] - d[x][i] == ans + 2:\n                print(d[x][i] + 1, d[x][i + 1] + 1)\n                exit(0)\n\nfor x in d:\n    if len(d[x]) > 1:\n        for i in range(len(d[x]) - 1):\n            if d[x][i + 1] - d[x][i] == ans + 3:\n                print(d[x][i] + 1, d[x][i + 1] + 1)\n                exit(0)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef gcd(x, y):\n    if y == 0:\n        return x\n    else:\n        return gcd(y, x % y)\n\ndef lcm(x, y):\n    return (x * y) // gcd(x, y)\n\nmin_lcm = float('inf')\nfor i in range(n):\n    for j in range(i+1, n):\n        min_lcm = min(min_lcm, lcm(a[i], a[j]))\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if min_lcm == lcm(a[i], a[j]):\n            print(i + 1, j + 1)\n            break"
    }
  ],
  "created": 1648683790,
  "id": "cmpl-4rcFyDvo6RHFHAYL7ljkwjfWBBL5w",
  "model": "code-davinci:002",
  "object": "text_completion"
}
0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nfrom sys import stdin\n\nn = int(stdin.readline())\na = [int(x) for x in stdin.readline().split()]\n\nd = {}\nfor i in range(n):\n    if a[i] in d:\n        d[a[i]].append(i)\n    else:\n        d[a[i]] = [i]\n\n# print(d)\n\n# print(d)\n\nans = n\nfor x in d:\n    if len(d[x]) > 1:\n        for i in range(len(d[x]) - 1):\n            if d[x][i + 1] - d[x][i] < ans:\n                ans = d[x][i + 1] - d[x][i]\n\n# print(ans)\n\nfor x in d:\n    if len(d[x]) > 1:\n        for i in range(len(d[x]) - 1):\n            if d[x][i + 1] - d[x][i] == ans:\n                print(d[x][i] + 1, d[x][i + 1] + 1)\n                exit(0)\n\nfor x in d:\n    if len(d[x]) > 1:\n        for i in range(len(d[x]) - 1):\n            if d[x][i + 1] - d[x][i] == ans + 1:\n                print(d[x][i] + 1, d[x][i + 1] + 1)\n                exit(0)\n\nfor x in d:\n    if len(d[x]) > 1:\n        for i in range(len(d[x]) - 1):\n            if d[x][i + 1] - d[x][i] == ans + 2:\n                print(d[x][i] + 1, d[x][i + 1] + 1)\n                exit(0)\n\nfor x in d:\n    if len(d[x]) > 1:\n        for i in range(len(d[x]) - 1):\n            if d[x][i + 1] - d[x][i] == ans + 3:\n                print(d[x][i] + 1, d[x][i + 1] + 1)\n                exit(0)"
}
REASON stop
1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef gcd(x, y):\n    if y == 0:\n        return x\n    else:\n        return gcd(y, x % y)\n\ndef lcm(x, y):\n    return (x * y) // gcd(x, y)\n\nmin_lcm = float('inf')\nfor i in range(n):\n    for j in range(i+1, n):\n        min_lcm = min(min_lcm, lcm(a[i], a[j]))\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if min_lcm == lcm(a[i], a[j]):\n            print(i + 1, j + 1)\n            break"
}
REASON stop
