["\n\nfrom sys import stdin\n\nn = int(stdin.readline())\na = [int(x) for x in stdin.readline().split()]\n\nd = {}\nfor i in range(n):\n    if a[i] in d:\n        d[a[i]].append(i)\n    else:\n        d[a[i]] = [i]\n\n# print(d)\n\n# print(d)\n\nans = n\nfor x in d:\n    if len(d[x]) > 1:\n        for i in range(len(d[x]) - 1):\n            if d[x][i + 1] - d[x][i] < ans:\n                ans = d[x][i + 1] - d[x][i]\n\n# print(ans)\n\nfor x in d:\n    if len(d[x]) > 1:\n        for i in range(len(d[x]) - 1):\n            if d[x][i + 1] - d[x][i] == ans:\n                print(d[x][i] + 1, d[x][i + 1] + 1)\n                exit(0)\n\nfor x in d:\n    if len(d[x]) > 1:\n        for i in range(len(d[x]) - 1):\n            if d[x][i + 1] - d[x][i] == ans + 1:\n                print(d[x][i] + 1, d[x][i + 1] + 1)\n                exit(0)\n\nfor x in d:\n    if len(d[x]) > 1:\n        for i in range(len(d[x]) - 1):\n            if d[x][i + 1] - d[x][i] == ans + 2:\n                print(d[x][i] + 1, d[x][i + 1] + 1)\n                exit(0)\n\nfor x in d:\n    if len(d[x]) > 1:\n        for i in range(len(d[x]) - 1):\n            if d[x][i + 1] - d[x][i] == ans + 3:\n                print(d[x][i] + 1, d[x][i + 1] + 1)\n                exit(0)", "\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef gcd(x, y):\n    if y == 0:\n        return x\n    else:\n        return gcd(y, x % y)\n\ndef lcm(x, y):\n    return (x * y) // gcd(x, y)\n\nmin_lcm = float('inf')\nfor i in range(n):\n    for j in range(i+1, n):\n        min_lcm = min(min_lcm, lcm(a[i], a[j]))\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if min_lcm == lcm(a[i], a[j]):\n            print(i + 1, j + 1)\n            break"]