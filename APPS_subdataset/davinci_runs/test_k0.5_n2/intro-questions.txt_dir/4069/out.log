"""
Takahashi, who lives on the number line, is now at coordinate X. He will make exactly K moves of distance D in the positive or negative direction.
More specifically, in one move, he can go from coordinate x to x + D or x - D.
He wants to make K moves so that the absolute value of the coordinate of the destination will be the smallest possible.
Find the minimum possible absolute value of the coordinate of the destination.

-----Constraints-----
 - -10^{15} \leq X \leq 10^{15}
 - 1 \leq K \leq 10^{15}
 - 1Â \leq D \leq 10^{15}
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
X K D

-----Output-----
Print the minimum possible absolute value of the coordinate of the destination.

-----Sample Input-----
6 2 4

-----Sample Output-----
2

Takahashi is now at coordinate 6. It is optimal to make the following moves:
 - Move from coordinate 6 to (6 - 4 =) 2.
 - Move from coordinate 2 to (2 - 4 =) -2.
Here, the absolute value of the coordinate of the destination is 2, and we cannot make it smaller.
"""
--------------------------
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    x, k, d = map(int, input().split())\n    if k >= abs(x)//d:\n        print(abs(x) - k*d)\n    else:\n        print(abs(x) - (abs(x)//d)*d)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n# input\nx, k, d = map(int, input().split())\n\n# initialization\nres = 0\n\n# process\nif x < 0:\n    x = -x\n\nif k <= x // d:\n    res = x - k * d\nelse:\n    k -= x // d\n    x %= d\n    if k % 2 == 0:\n        res = x\n    else:\n        res = d - x\n\nprint(res)"
    }
  ],
  "created": 1648683824,
  "id": "cmpl-4rcGW5WrMRWm2iC2oEwaRH7mcQybo",
  "model": "code-davinci:002",
  "object": "text_completion"
}
0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    x, k, d = map(int, input().split())\n    if k >= abs(x)//d:\n        print(abs(x) - k*d)\n    else:\n        print(abs(x) - (abs(x)//d)*d)\n\nif __name__ == '__main__':\n    main()"
}
REASON stop
1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n# input\nx, k, d = map(int, input().split())\n\n# initialization\nres = 0\n\n# process\nif x < 0:\n    x = -x\n\nif k <= x // d:\n    res = x - k * d\nelse:\n    k -= x // d\n    x %= d\n    if k % 2 == 0:\n        res = x\n    else:\n        res = d - x\n\nprint(res)"
}
REASON stop
