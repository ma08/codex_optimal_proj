["import numpy as np\nfor _ in range(int(input())):\n ans = np.float('inf')\n n, m = (int(x) for x in input().split())\n sig = np.zeros((n,m))\n img = np.zeros((3*n,3*m))\n for row in range(n):\n  sig[row,:] = np.array([int(x) for x in input()])\n for row in range(n):\n  img[row+n,m:2*m] = np.array([int(x) for x in input()])\n for i in range(2*n):\n  for j in range(2*m):\n   ans = min(ans, np.abs(np.sum(img[i:n+i, j:m+j] != sig)))\n print(ans)", "import numpy as np\nfor _ in range(int(input())):\n ans = np.float('inf')\n n, m = (int(x) for x in input().split())\n sig = np.zeros((n,m))\n img = np.zeros((3*n,3*m))\n for row in range(n):\n  sig[row,:] = np.array([int(x) for x in input()])\n for row in range(n):\n  img[row+n,m:2*m] = np.array([int(x) for x in input()])\n for i in range(2*n):\n  for j in range(2*m):\n   ans = min(ans, np.abs(np.sum(img[i:n+i, j:m+j] != sig)))\n print(ans)", "import numpy as np\nfor _ in range(int(input())):\n ans = np.float('inf')\n n, m = (int(x) for x in input().split())\n sig = np.zeros((n,m))\n img = np.zeros((3*n,3*m))\n for row in range(n):\n  sig[row,:] = np.array([int(x) for x in input()])\n for row in range(n):\n  img[row+n,m:2*m] = np.array([int(x) for x in input()])\n for i in range(2*n):\n  for j in range(2*m):\n   ans = min(ans, np.abs(np.sum(img[i:n+i, j:m+j] != sig)))\n print(ans)"]