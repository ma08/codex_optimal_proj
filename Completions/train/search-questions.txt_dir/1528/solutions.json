["t=int(input())\nfor i in range(t):\n n,k=[int(i) for i in input().split()]\n l=input().split()\n for i in range(k):\n  if l.pop()=='H':\n   for ind,j in enumerate(l):\n    if j=='H':\n     l[ind]='T'\n    else:\n     l[ind]='H'\n print(sum([1 for i in l if i=='H']))", "for i in range(int(input())):\n n,k=[int(i) for i in input().split()]\n m=input().split()\n for i in range(k):\n  if m.pop()=='H':\n   for ind,j in enumerate(m):\n    if j=='H':\n     m[ind]='T'\n    else:\n     m[ind]='H'\n print(sum([1 for i in m if i=='H']))", "for _ in range(int(input())):\n n, k = map(int, input().split())\n arr = input().split()\n\n while arr and k:\n  if arr.pop() == 'H':\n   for i in range(len(arr)):\n    if arr[i] == 'H':\n     arr[i] = 'T'\n    else:\n     arr[i] = 'H'\n\n  k -= 1\n\n res = sum(i == 'H' for i in arr)\n print(res)", "for _ in range(int(input())):\n n,k = map(int,input().split())\n arr =input().split()\n\n for i in range(k):\n  if arr[-1]==\"H\":\n   arr.pop()\n   n=n-1\n   for j in range(n):\n    if arr[j]==\"H\":\n     arr[j]=\"T\"\n    else:\n     arr[j]=\"H\"\n  else:\n   arr.pop()\n   n=n-1\n print(arr.count(\"H\"))", "for _ in range(int(input())):\n n,k = list(map(int,input().split()))\n arr =input().split()\n\n for i in range(k):\n  if arr[-1]==\"H\":\n   arr.pop()\n   n=n-1\n   for j in range(n):\n    if arr[j]==\"H\":\n     arr[j]=\"T\"\n    else:\n     arr[j]=\"H\"\n  else:\n   arr.pop()\n   n=n-1\n print(arr.count(\"H\"))\n   \n", "# cook your dish here\nt=int(input())\nwhile t>0:\n n,k=map(int,input().split())\n l=list(input().split())\n l1=l[n-k:]\n c=0\n ch=1\n for i in range(len(l1)-1,-1,-1):\n  if l1[i]=='H' and ch==1:\n   c+=1\n   ch=0\n  if l1[i]=='T' and ch==0:\n   c+=1\n   ch=1\n res=l[0:n-k]\n if c%2==0:\n  r=res.count('H')\n else:\n  r=res.count('T')\n print(r)\n t-=1", "for _ in range(int(input())):\n n,k = list(map(int,input().split()))\n arr =input().split()\n\n for i in range(k):\n  if arr[-1]==\"H\":\n   arr.pop()\n   n=n-1\n   for j in range(n):\n    if arr[j]==\"H\":\n     arr[j]=\"T\"\n    else:\n     arr[j]=\"H\"\n  else:\n   arr.pop()\n   n=n-1\n print(arr.count(\"H\"))\n\n\n \n\n\n\n\n", "for _ in range(int(input())):\n n,k = list(map(int,input().split()))\n arr =input().split()\n \n head_count = 0\n\n for i in range(n-1,n-k-1,-1):\n  if arr[i]==\"H\":\n   if head_count%2==0:\n    head_count+=1\n  else:\n   if head_count%2!=0: #odd\n    head_count+=1\n \n if head_count%2==0:\n  print(arr[:n-k].count(\"H\"))\n else:\n  print(arr[:n-k].count(\"T\"))\n\n\n\n\n", "for _ in range(int(input())):\n n, k = [int(i) for i in input().split()]\n s = input().split()\n for i in range(k):\n  if s.pop() == 'H':\n   for ind, j in enumerate(s):\n    if j == 'H':\n     s[ind] = 'T'\n    else:\n     s[ind] = 'H'\n print(sum([1 for i in s if i =='H']))", "# cook your dish here\nfor i in range(int(input())):\n n,k=map(int,input().split())\n li=input().split()\n li1=li[:n-k]\n li2=li[n-k:]\n dict={'H':'T','T':'H'}\n hd='H'\n for i in li2[::-1]:\n  if(i==hd):\n   hd=dict[hd]\n print(li1.count(hd)) ", "# cook your dish here\nfor _ in range(int(input())):\n nk=[int(i) for i in input().split()]\n k=nk[1]\n s=input().split()\n for i in range(k):\n  a=s.pop()\n  if a=='H':\n   for indx,j in enumerate(s):\n    if j=='H':\n     s[indx]='T'\n    else:\n     s[indx]='H'\n heads=0\n for i in s:\n  if i=='H':\n   heads+=1\n print(heads)\n", "# cook your dish here\nfor _ in range(int(input())):\n N,k=map(int,input().split())\n arr=list(map(str,input().split()))\n for i in range(1,k+1):\n  x=arr[len(arr)-i]\n  arr[len(arr)-i]=\"0\"\n  if(x==\"H\"):\n   for i in range(len(arr)):\n    if(arr[i]==\"H\"):\n     arr[i]=\"T\"\n    elif(arr[i]==\"T\"):\n     arr[i]=\"H\"\n print(arr.count(\"H\"))", "# cook your dish here\nfor _ in range(int(input())):\n N,K=map(int,input().split(' '))\n S=input()\n \n S=S.replace('H','1').replace('T','0').replace(' ','')\n # print(S)\n for i in range(1,K+1):\n  currBit=S[N-i]\n  S=S[:-1]\n  if(currBit=='0'):\n   continue\n  else:\n   S_dec=int(S,2)\n   xor_mulp=2**(N-i+1)-1\n   S=bin(S_dec^xor_mulp)[3:]\n # print(S)\n print(sum(map(int,list(S))))", "# cook your dish here\nt = int(input())\nfor _ in range(t):\n n,k = list(map(int,input().split()))\n l = list(map(str,input().split()))\n i = n-1\n for j in range(k):\n  if(l[i]=='T'):\n   l.pop(i)\n   i=i-1\n  else:\n   l.pop(i)\n   i=i-1\n   for k in range(len(l)):\n    if(l[k]=='H'):\n     l[k]='T'\n    else:\n     l[k]='H'\n print(l.count('H'))\n     \n", "t = int(input())\nfor _ in range(t):\n n, k = map(int,input().split())\n li = list(input().split())\n h = li.count('H')\n t = n - h\n #print(h, t)\n for i in range(k):\n  d= li[-1]\n  #print(li)\n  li = li[:-1]\n  #print(li, d)\n  if d == 'T':\n   t = t - 1\n  else:\n   h, t = t, h - 1\n   li = ['H' if li[j] == 'T' else 'T' for j in range(n - i - 1) ]\n  #print(li)\n print(h)", "# cook your dish here\nfor _ in range(int(input())):\n n,k = map(int,input().split())\n l = list(map(str,input().split()))\n while k:\n  k -= 1\n  if l[-1] == \"H\":\n   for i in range(len(l)):\n    if l[i] == 'H':\n     l[i] = 'T'\n    else:\n     l[i] = 'H'\n  l.pop()\n print(l.count(\"H\"))", "# cook your dish here\nt = int(input())\nfor _ in range(t):\n n,k = map(int, input().split())\n arr = list(map(str, input().split()))\n for i in range(k):\n  if arr[-1]=='H':\n   for j in range(len(arr)):\n    if arr[j]=='H':\n     arr[j] = 'T'\n    else:\n     arr[j] = 'H'\n  g = arr.pop()\n print(arr.count('H'))", "for _ in range(int(input())):\n # n = int(input())\n # s = input()\n n,k = list(map(int,input().split()))\n f = input().split()\n leftovers = f[:n-k]\n removed = f[n-k:]\n seekin = 'H'\n flip = {'H':'T' , 'T':'H'}\n for coin in removed[::-1] :\n  if coin == seekin :\n   seekin = flip[seekin]\n print(leftovers.count(seekin))\n", "# cook your dish here\na = int(input())\nfor i in range(a):\n b = str(input()).split(' ')\n c = str(input()).split(' ')\n li = []\n n = 0\n for i1 in range(int(b[1])):\n  li.append(c[int(b[0])-i1-1])\n for i2 in range(int(b[1])-1):\n  if li[i2+1]!=li[i2]:\n   n+=1\n if c[int(b[0])-1]=='H':\n  n+=1\n if n%2==0:\n  print(c[:int(b[0])-int(b[1])].count('H'))\n else:\n  print(c[:int(b[0])-int(b[1])].count('T'))\n", "for _ in range(int(input())):\n n,k=list(map(int,input().split()))\n a=list(input().split())\n while k>0:\n  if a[-1]==\"H\":\n   for i in range(len(a)-1):\n    if a[i]==\"H\":\n     a[i]=\"T\"\n    else:\n     a[i]=\"H\"\n   a.pop()\n  else:\n   a.pop()\n  k=k-1\n print(a.count(\"H\"))", "t = int(input())\n\nfor _ in range(t):\n n, k = [int(x) for x in input().split()]\n \n a = [x for x in input().split()]\n a.reverse()\n \n flag = 0\n for i in range(k):\n  if(flag==0 and a[i]=='H'):\n   flag = 1\n  elif(flag==1 and a[i]=='T'):\n   flag = 0\n \n a = a[k:]\n if(flag==0):\n  print(a.count('H'))\n else:\n  print(a.count('T'))", "for k in range(int(input())):\n n,k=list(map(int,input().split()))\n l=list(map(str,input().split()))\n while k>0:\n  if l[-1]==\"H\":\n   for i in range(0,len(l)-1):\n    if l[i]==\"H\":\n     l[i]=\"T\"\n    else:\n     l[i]=\"H\"\n  l.pop()\n \n  k=k-1\n print(l.count(\"H\"))\n \n \n", "for k in range(int(input())):\n n,k=list(map(int,input().split()))\n l=list(map(str,input().split()))\n while k>0:\n  if l[-1]==\"T\":\n   l.pop()\n  else:\n   for i in range(0,len(l)-1):\n    if l[i]==\"H\":\n     l[i]=\"T\"\n    else:\n     l[i]=\"H\"\n   l.pop()\n \n  k=k-1\n print(l.count(\"H\"))\n \n \n", "# cook your dish here\nfor _ in range(int(input())):\n n, k = list(map(int, input().split()))\n coins = input().split()\n count = 0\n \n for i in range(k):\n  coin = coins.pop()\n  \n  if coin == 'H':\n   count += 1\n   coins = ['T' if val == 'H' else 'H' for val in coins]\n   \n res = coins.count('H')\n  \n print(res)", "t=int(input())\nfor i in range(t):\n n,k=list(map(int,input().split()))\n arr = list(map(str,input().strip().split()))[:n] \n l=[]\n counter=0\n for i in range(len(arr)):\n  if(arr[i] == \"H\"):\n   l.append(1)\n  else:\n   l.append(0)\n for i in range(n-1,n-k-1,-1):\n  if(l[i] == 0):\n   counter+=1\n   continue\n  else:\n   for j in range(i):\n    if(l[j]==1):\n     l[j]-=1\n    else:\n     l[j]+=1\n   counter+=1\n   if(counter == k):\n    break\n head=0\n for k in range(n-k):\n  if l[k]==1:\n   head+=1\n print(head)\n"]