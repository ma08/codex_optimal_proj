["def bubblesort_once(l):\n    l = l[:]\n    for i in range(len(l)-1):\n        if l[i] > l[i+1]:\n            l[i], l[i+1] = l[i+1], l[i]\n    return l", "def bubblesort_once(L):\n    if len(L)<=1 : return L\n    if L[0]<=L[1]: return [L[0]] + bubblesort_once(L[1:])\n    return [L[1]] + bubblesort_once([L[0]]+L[2:])", "def bubblesort_once(lst):\n    result = lst[:]\n    for i in range(len(result) - 1):\n        if result[i] > result[i+1]:\n            result[i], result[i+1] = result[i+1], result[i]\n    return result", "import copy\n\ndef bubblesort_once(l):\n    res = copy.copy(l)\n    for i in range(len(res)-1):\n        if res[i] > res[i+1]:\n            res[i], res[i+1] = res[i+1], res[i]\n    return res", "def bubblesort_once(l):\n    values = l[:]\n    for i in range(0, len(values) - 1):\n        first = values[i]\n        second = values[i + 1]\n        if(first > second ):\n            values[i + 1] = first\n            values[i] = second\n    return values\n", "def bubblesort_once(arr):\n\n    new_arr = arr.copy()\n    for i in range(len(new_arr)-1):\n        if new_arr[i]>new_arr[i+1]:\n            new_arr[i], new_arr[i+1] = new_arr[i+1], new_arr[i]\n    return new_arr", "def bubblesort_once(lst):\n    arr = lst[:]\n    for i in range(len(arr)-1):\n        arr[i], arr[i+1] = sorted([arr[i], arr[i+1]])\n    return arr", "def bubblesort_once(l):\n    if len(l) < 2: return l[:]\n    \n    lst, mx = [], l[0]\n    for v in l[1:]:\n        if mx<v: mx,v = v,mx\n        lst.append(v)\n    lst.append(mx)\n    return lst", "def bubblesort_once(l):\n    for i in range(len(l)-1):\n        if l[i] > l[i+1]:\n            l = l[:i] + [ l[i+1] ] + [ l[i] ] + l[i+2::]\n    return l", "def bubblesort_once(l):\n    output = [i for i in l]\n    for i in range(len(output)-1):\n        output[i], output[i+1] = min(output[i], output[i+1]), max(output[i], output[i+1])\n    return output"]