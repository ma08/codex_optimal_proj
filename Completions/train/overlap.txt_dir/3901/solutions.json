["def check_digit(n, idx1, idx2, digit):\n    return str(digit) in str(n)[idx1:idx2+1] + str(n)[idx2:idx1+1]", "def check_digit(n, i1, i2, d):\n    return str(d) in str(n)[min(i1,i2):max(i1,i2)+1]", "def check_digit(number, index1, index2, digit):\n    number, digit = str(number), str(digit)\n    index1, index2 = sorted((index1, index2))\n    return digit in number[index1:index2+1]", "def check_digit(n, i, j, x):\n    i, j = sorted([i, j])\n    return str(x) in str(n)[i:j+1]", "def check_digit(n, i, j, d):\n    '''\n    check = str(n)[min(i,j):max(i,j)+1]\n    \n    if str(d) in check:\n        return True\n    return False\n    '''\n    \n    return True if str(d) in str(n)[min(i,j):max(i,j)+1] else False\n    \n", "def check_digit(number, index1, index2, digit):\n    nums = str(number)\n    if index2 < index1:\n      index2, index1 = index1, index2\n\n    return str(digit) in nums[index1:index2+1]\n", "def check_digit(number, index1, index2, digit):\n    return str(digit) in str(number)[min(index1, index2) : max(index1, index2) + 1]", "def check_digit(s,t,p,q):\n    if t<p:\n        \n        return True if str(q) in str(s)[t:p+1]  else False\n    return True if str(q) in str(s)[p:t+1]  else False", "def check_digit(number, index1, index2, digit):\n    left = min([index1, index2])\n    right = max([index1, index2])\n    return True if str(digit) in str(number)[left:right+1] else False", "def check_digit(number, index1, index2, digit):\n    number=str(number)\n    if index1<index2:\n        index2=index2+1\n        return str(digit) in number[index1:index2]\n    elif index2<index1:\n        index1=index1+1\n        return str(digit) in number[index2:index1]\n    elif index1==index2 and str(digit)==number[index1]:\n        return True\n    else:\n        return False"]