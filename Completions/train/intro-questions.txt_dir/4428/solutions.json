["def sort_by_bit(arr): \n    return sorted(arr, key=lambda x: (bin(x).count(\"1\"), x))", "def sort_by_bit(a):\n    return sorted(a, key=lambda x: (bin(x).count(\"1\"), x))", "def sort_by_bit(arr): \n    return sorted(arr, key=lambda n: (bin(n).count(\"1\"), n))", "def sort_by_bit(lst): \n    return sorted(lst, key=lambda n: (f\"{n:b}\".count(\"1\"), n))\n", "def sort_by_bit(a):\n    for i in range(len(a)):\n      for j in range(i+1, len(a)):\n        if bin(a[i]).count('1') > bin(a[j]).count('1'):\n          a[i], a[j] = a[j], a[i]\n        elif bin(a[i]).count('1') == bin(a[j]).count('1'):\n          if a[i] > a[j]:\n            a[i], a[j] = a[j], a[i]\n    return a", "def sort_by_bit(arr):\n    return [val[1] for val in sorted([[\"{0:b}\".format(val).count('1'),val] for val in arr])]", "def sort_by_bit(arr):\n    return sorted(arr, key=lambda x: (str('{:032b}'.format(x)).count('1'), x))\n", "def sort_by_bit(arr):\n    return sorted(sorted(arr), key=lambda i: bin(i)[2:].count('1'))", "def sort_by_bit(arr): \n    return sorted(arr, key=lambda x: (count(x), x))\ndef count(n):\n    return bin(n)[2:].count(\"1\")", "def sort_by_bit(x): \n    on_bits = [f\"{i:b}\".count(\"1\") for i in x]\n    sorted_tups = sorted(zip(on_bits, x))\n    return list(list(zip(*sorted_tups))[1])"]