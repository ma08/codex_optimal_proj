["import math\n\ndef cost(mins):\n    return 30 + 10 * math.ceil(max(0, mins - 60 - 5) / 30)", "from math import ceil\n\ndef cost(n):\n    n -= 5\n    \n    if n<60 : return 30\n    \n    n -= 60\n    \n    return 30 + ceil(n/30) * 10", "def cost(mins):\n    price = 0\n    print (mins)\n    while mins > 0:\n        if mins <= 65:\n            price += 30\n            mins -= 65\n        elif mins - 65 > 0:\n            price += 10\n            mins -= 30\n    return price", "from math import ceil\n\ndef cost(mins):\n    periods = ceil((mins - 5) / 30)\n    return 30 if periods <= 2 else 30 + (periods - 2) * 10", "def cost(mins):\n    return max(0, -(-(mins - 65)//30)) * 10 + 30", "import math\ndef cost(mins):\n    return 30 if mins<60 else math.ceil(((mins-60)-5)/30)*10+30\n", "from math import ceil\n\ndef cost(minutes):\n    return ceil(max(minutes + 25, 90) / 30) * 10\n", "import math\ndef cost(mins):\n    \n    if mins <= 60:\n        return 30\n    \n    if mins > 60:\n        if (mins % 30) <= 5:\n            leftover = mins - 60\n            multiple = round(leftover / 30)\n            return 30 + (10 * (multiple))\n        \n        if (mins % 30) > 5:\n            leftover = mins - 60\n            multiple = math.ceil(leftover/30)\n            return 30 + (10 * multiple)\n", "def cost(mins):\n    price =30\n    while mins > 60:\n        mins-=30\n        if mins>35:\n            price+=10\n        else:\n            return price\n    else:\n        return price", "from math import ceil\ndef cost(n):\n    return 30 + [ceil((n-65)/30)*10, 0][n<60]"]