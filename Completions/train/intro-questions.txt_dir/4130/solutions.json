["import re\n\nHK_PHONE_NUMBER = '\\d{4} \\d{4}'\n\ndef is_valid_HK_phone_number(number):\n    return bool(re.match(HK_PHONE_NUMBER+'\\Z',number))\n\ndef has_valid_HK_phone_number(number):\n    return bool(re.search(HK_PHONE_NUMBER,number))", "from re import match, search\n\nis_valid_HK_phone_number = lambda n: match('^\\d{4} \\d{4}$', n) is not None\nhas_valid_HK_phone_number = lambda n: search('\\d{4} \\d{4}', n) is not None", "import re\ndef is_valid_HK_phone_number(number):\n    return bool(re.match('^\\d{4} \\d{4}$',number))\n\ndef has_valid_HK_phone_number(number):\n    return bool(re.search('\\d{4} \\d{4}',number))", "from re import match, search\n\ndef is_valid_HK_phone_number(number):\n    return bool(match(r'\\d{4}\\s\\d{4}\\Z', number))\n\ndef has_valid_HK_phone_number(number):\n    return bool(search(r'\\d{4}\\s\\d{4}', number))", "import re\ndef is_valid_HK_phone_number(number):\n    return bool(re.search(r'^\\d{4} \\d{4}$', number))\n\ndef has_valid_HK_phone_number(number):\n    return bool(re.search(r'\\d{4} \\d{4}', number))", "import re\n\nVALID_PHONE = re.compile(r'\\d{4} \\d{4}')\n\ndef is_valid_HK_phone_number(number):\n    return len(number)==9 and bool(VALID_PHONE.match(number))\n\ndef has_valid_HK_phone_number(number):\n    return bool(VALID_PHONE.search(number))", "import re\ndef is_valid_HK_phone_number(number):\n    return len(number) == 9 and has_valid_HK_phone_number(number)\n    \ndef has_valid_HK_phone_number(number):\n    return bool(re.search(r'\\d{4}\\s\\d{4}', number))", "import re\n\nIS_VALID = re.compile(r'\\d{4} \\d{4}\\Z')\nHAS_VALID = re.compile(r'\\d{4} \\d{4}')\n\n\ndef is_valid_HK_phone_number(number):\n    return bool(IS_VALID.match(number))\n\n\ndef has_valid_HK_phone_number(number):\n    return bool(HAS_VALID.search(number))\n", "import re\n\nfull_number_regex = re.compile(r\"^\\d{4} \\d{4}$\")\npart_number_regex = re.compile(r\"\\d{4} \\d{4}\")\ndef is_valid_HK_phone_number(number):\n    return full_number_regex.match(number) is not None\n\ndef has_valid_HK_phone_number(number):\n    return part_number_regex.search(number) is not None\n", "import re\nis_valid_HK_phone_number = lambda n:re.match('^\\d{4} \\d{4}$', n) is not None\nhas_valid_HK_phone_number = lambda n: re.match('.*\\d{4} \\d{4}.*', n) is not None\n"]