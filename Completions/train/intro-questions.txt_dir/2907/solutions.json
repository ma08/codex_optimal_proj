["MAX_BALL = 2+1800\nDP,lst = [None], [0,1]\nfor _ in range(MAX_BALL):\n    DP.append([sum(lst), *max( (v,i) for i,v in enumerate(lst) )])\n    lst.append(0)\n    lst = [ v*i + lst[i-1] for i,v in enumerate(lst) ]\n    \ncombs_non_empty_boxesII = DP.__getitem__\n", "# this is [A000110, A002870, A024417]\n\n# Stirling numbers of second kind\n# http://mathworld.wolfram.com/StirlingNumberoftheSecondKind.html\n# S(n,k) = S(n-1,k-1)+k*S(n-1,k)\nS = {}\nfor n in range(1,1800):\n    S[(n,1)] = S[(n,n)] = 1\n    for k in range(2,n): S[(n,k)]=S[(n-1,k-1)]+k*S[(n-1,k)]\n\ndef combs_non_empty_boxesII(n):\n    ss = [(S[(n,k)],k) for k in range(1,n+1)]\n    return [sum(p[0] for p in ss), *max(ss)]", "M = [[1] * 1800]\nfor V in range(2,1801) :\n    U = [0]\n    for F,B in enumerate(M[-1]) :\n        if F < 1799 : U.append(0 if 1 + F < V else B + V * U[-1])\n    M.append(U)\ndef combs_non_empty_boxesII(Q) :\n    R = [0,0,0]\n    for V in range(Q) :\n        T = M[V][Q]\n        R[0] += T\n        if R[1] <= T : R[1:] = T,1 + V\n    return R", "S = [[1]]\nfor n in range(1,1801):\n    S.append([1])\n    for k in range(1, n):\n        S[n].append(S[n-1][k-1] + (k+1) * S[n-1][k])\n    S[n].append(1)\n\ndef combs_non_empty_boxesII(n):\n    tot, max, index = 0, 1, 1\n    for ix in range(len(S[n-1])):\n        val = S[n-1][ix]\n        tot = tot + val\n        if val >= max:\n            max = val\n            index = ix\n    return [tot, max, index+1]", "sseq = [[1],[1,1]]\ns = [1,1]\nfor t in range(2,1800):\n    s = [1]+[s[i-1]+(i+1)*s[i] for i in range(1, len(s))]+[1]\n    sseq.append(s)\n\ndef combs_non_empty_boxesII(n):\n    if n == 2: return [2, 1, 2]\n    s = [1,1]\n    s = sseq[n-1]\n    return [sum(s), max(s), s.index(max(s))+1]"]