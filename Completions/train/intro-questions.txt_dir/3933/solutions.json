["def hydrate(drink_string): \n    c=sum(int(c) for c in drink_string if c.isdigit())\n    return \"{} {} of water\".format(c,'glass') if c==1 else \"{} {} of water\".format(c,'glasses')", "import re\n\ndef hydrate(s):\n    n = sum(map(int,re.findall(r'\\d+',s)))\n    return f\"{ n } glass{ 'es'*(n!=1) } of water\"", "def hydrate(drink_string): \n    n = sum([int(a) for a in drink_string if a.isnumeric()])\n    return str(n) +' glass of water' if n==1 else str(n) +' glasses of water'\n    pass", "def hydrate(drink_string): \n    glasses = 0\n    for word in drink_string.split():\n        if word.isdigit():\n            glasses += int(word)\n    return str(glasses) + \" glass of water\" if glasses == 1 else str(glasses) + \" glasses of water\"", "def hydrate(drink_string): \n    c=0\n    for i in \"123456789\":\n        c += int(i)*drink_string.count(i)\n    k = \"glass\" if c ==1 else \"glasses\"\n    return f\"{c} {k} of water\"", "def hydrate(drinks):\n    water = sum([int(drink) for drink in drinks if drink.isnumeric()])\n    return '1 glass of water' if water == 1 else '%d glasses of water' % water", "import re\n\ndef hydrate(drink_string): \n    drink = sum(int(n) for n in re.findall(r\"\\d\", drink_string))\n    return f\"{drink} glass{'es' if drink > 1 else ''} of water\"", "def hydrate(s): \n    a = sum(map(int, filter(str.isdigit, s)))\n    return f\"{a} glass{['es', ''][a == 1]} of water\"", "def hydrate(drink_string):\n    n = 0\n    for i in range(len(drink_string)):\n        try:\n            n += int(drink_string[i])\n        except:\n            continue\n    if n == 1:\n        return \"1 glass of water\"\n    else:\n        return str(n) + \" glasses of water\"", "from re import compile\n\nREGEX = compile(r\"\\d+\").findall\n\ndef hydrate(drink_string): \n    res = sum(map(int, REGEX(drink_string)))\n    return f\"{res} glass{'es'*(res != 1)} of water\""]