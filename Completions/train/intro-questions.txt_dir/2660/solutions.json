["def args_to_string(args):\n    L = []\n    for arg in args:\n        if isinstance(arg, str):\n            L.append(arg)\n        elif len(arg) == 1:\n            L.append(arg[0])\n        elif len(arg[0]) == 1:\n            L.append('-' + ' '.join(arg))\n        else:\n            L.append('--' + ' '.join(arg))\n    return ' '.join(L)", "def args_to_string(A):\n    return ' '.join(e if isinstance(e, str) else e[0] if len(e)==1 else '-'+(len(e[0])>1)*'-' +' '.join(e) for e in A)", "def args_to_string(args):\n    return ' '.join(x if type(x) == str else ' '.join(('-' if len(v) == 1 else '--') + v if k == 0 and len(x) > 1 else v for k, v in enumerate(x)) for x in args)", "def args_to_string(args):\n    return ' '.join('-'*(len(a)>1 and 1+(len(a[0])>1))+' '.join(a) if type(a)==list else a for a in args)", "def args_to_string(args):\n    for i in args:\n        if len(i) > 1 and type(i) != str:\n            i[0] = f\"--{i[0]}\" if len(i[0]) > 1 else f\"-{i[0]}\"\n    return \" \".join(i if type(i) != list else \" \".join(i) for i in args)", "def args_to_string(args):\n    params = []\n    for arg in args:\n        if isinstance(arg, str):\n            params.append(arg)\n        else:\n            if arg:\n                first = arg.pop(0)\n                if arg:\n                    if len(first) == 1:\n                        first = '-' + first\n                    else:\n                        first = '--' + first\n                params.append(first)\n                for a in arg:\n                    params.append(a)\n    return ' '.join(params)", "def args_to_string(args):\n    ls=[]\n    for i in args:\n        if type(i)==list and len(i)==2:\n            if len(i[0])>1:\n                i[0]='--'+i[0]\n                ls.extend(i)\n            else:\n                i[0]='-'+i[0]\n                ls.extend(i)\n        else:\n            ls.append(i) if type(i)!=list else ls.extend(i)\n    return ' '.join(ls)\n", "def args_to_string(args):\n    r=[]\n    for a in args:\n        if type(a)==list:\n            if len(a)==1:\n                r+=a[0],\n            else:\n                s='-'\n                if len(a[0])>1:s+='-'\n                r+=s+' '.join(a),\n        else:r+=a,\n    return' '.join(r)", "def args_to_string(args):\n    res = []\n    for chunk in args:\n        if type(chunk) == str:\n            res.append(chunk)\n        elif len(chunk) == 1:\n            res.append(chunk[0])\n        else:\n            res.append(f'{\"-\" * (1 + (len(chunk[0]) > 1))}{\" \".join(s for s in chunk)}')\n    return ' '.join(res)\n", "def args_to_string(args):\n    s = []\n    for i in args:\n        if type(i) == str:    s.append(i)\n        elif type(i) == list and len(i) == 2:    s.append('-'*(1 if len(i[0]) == 1 else 2)+ ' '.join(i))\n        else:    s += i\n    return ' '.join(s)"]