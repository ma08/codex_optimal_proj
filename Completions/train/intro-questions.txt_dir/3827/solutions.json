["import math\n\ndef missing_angle(h, a, o):\n    if h == 0:\n        radians = math.atan(o/a)\n    elif a == 0:\n        radians = math.asin(o/h)\n    else:\n        radians = math.acos(a/h)\n    return round(math.degrees(radians))", "from math import asin, acos, atan, degrees as d\nmissing_angle=lambda h,a,o:round(d(atan(o/a) if not h else asin(o/h) if not a else acos(a/h)))", "import math\n\ndef missing_angle(h, a, o):\n    return round(math.degrees(math.atan(o/a) if not h else math.asin(o/h) if not a else math.acos(a/h)))", "from math import sqrt, asin, degrees\n\ndef missing_angle(h, a, o):\n  h, o = h or sqrt(a**2 + o**2), o or sqrt(h**2 - a**2)\n  return round(degrees(asin(o/h)))", "from math import acos, asin, atan, degrees\n\ndef missing_angle(h, a, o):\n    return round(degrees(\n        atan(o / a) if not h else\n        asin(o / h) if not a else\n        acos(a / h)\n    ))", "from math import asin, acos, atan, pi\ndef missing_angle(h, a, o):\n    ans = acos(a/h) if h * a else atan(o/a) if a * o else asin(o/h)\n    return round(ans*180/pi)\n", "import math\n\ndef missing_angle(h, a, o):\n    if h > 0 and a > 0:    result = math.acos(a/h)\n    elif a == 0 and o > 0: result = math.asin(o/h)\n    elif h == 0 and o > 0: result = math.atan(o/a)\n    else:                  raise ValueError(\"Invalid argument(s)\")\n    \n    return round(math.degrees(result))", "from math import atan, asin, acos, pi\ndef missing_angle(h, a, o):\n    return round(atan(o/a)*180/pi) if not h else round(asin(o/h)*180/pi)\\\n    if not a else round(acos(a/h)*180/pi)", "import math\n\ndef missing_angle(h, a, o):\n    if not h: h = (a**2 + o**2)**0.5\n    if not o: o = (h**2 - a**2)**0.5\n    return round(math.asin(o/h)*180/math.pi)", "import math\ndef missing_angle(h, a, o):\n    if h==0:\n        h=(a**2+o**2)**0.5\n    if a==0:\n        a=(h*2-o**2)**0.5\n    if o==0:\n        o=(h**2-a**2)**0.5\n    return round(math.asin(o/h)*180/math.pi)\n        \n"]