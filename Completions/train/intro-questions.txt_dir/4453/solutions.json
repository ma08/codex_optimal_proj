["def shortest_steps_to_num(num):\n    steps = 0\n    \n    while num != 1:\n        if num % 2:\n            num -= 1\n        else:\n            num //= 2\n        \n        steps += 1\n    \n    return steps", "def shortest_steps_to_num(num):\n    return num.bit_length() + bin(num).count('1') - 2", "def shortest_steps_to_num(num):\n    x=0\n    while num>1:\n        if num%2: num-=1\n        else: num/=2\n        x+=1\n    return x\n", "def shortest_steps_to_num(n):\n    return bin(n).count('1') + n.bit_length() - 2    ", "def shortest_steps_to_num(num):\n    return 0 if num == 1 else 1 + shortest_steps_to_num(num - 1 if num % 2 else num / 2)\n", "def shortest_steps_to_num(n):\n    return (\n        0 if n == 1 else\n        1 + shortest_steps_to_num(n-1) if n % 2 else\n        1 + shortest_steps_to_num(n//2)\n    )", "def shortest_steps_to_num(n):\n    step = 0\n    while n > 1:\n        n, step = n // 2, step + 1 + n % 2\n    return step", "def shortest_steps_to_num(num):\n    s = bin(num)\n    return len(s) + s.count('1') - 4", "def shortest_steps_to_num(num):\n    steps = 0\n    while num > 1:\n        if num % 2 == 0:\n            num = num // 2\n        elif num == 3:\n            num -= 1\n        else:\n            num -= 1\n        steps += 1\n    return steps\n", "def shortest_steps_to_num(num):\n    a= str(bin(num))[3:]\n    return len(a)+a.count('1')"]