["import re\n\ndef is_matched(read):\n    total = sum([int(num) for num in re.findall(r'\\d+', read[0])])\n    \n    if read[0] == str(len(read[1])) + 'M':\n        return True\n    elif len(read[1]) != total:\n        return 'Invalid cigar'\n    else:\n        return False\n", "import re\n\ndef is_matched(read):\n    cigar, seq = read\n    matches = re.findall(r'(\\d+)([A-Z])', cigar)\n    if sum(int(n) for n, _ in matches) != len(seq):\n        return 'Invalid cigar'\n    return all(sym == 'M' for _, sym in matches)", "import re\ndef is_matched(read):\n    if f'{len(read[1])}M' == read[0]:\n        return True\n    elif sum(int(n) for n in re.findall('\\d+', read[0])) != len(read[1]):\n        return 'Invalid cigar'\n    \n    return False", "import re\nfrom functools import reduce\n\ndef is_matched(read):\n    parse = re.findall(r'[0-9]+[A-Z]', read[0])\n    cigar = {}\n    for i in parse:\n        if cigar.get(i[-1]) == None:\n            cigar[i[-1]] = 0\n        cigar[i[-1]] += int(i[:-1])\n    if cigar.get('M') == len(read[1]):\n        return True\n    elif reduce(lambda x,y: x+y, [v for v in cigar.values()], 0) == len(read[1]):\n        return False\n    else:\n        return 'Invalid cigar'", "import re\n\ndef is_matched(cig):\n    ci = re.split('\\D', cig[0])[:-1]\n    return 'Invalid cigar' if sum(map(int, ci)) != len(cig[1]) else cig[0] == ci[0]+'M'", "import re\ndef is_matched(read):\n    cigar = [int(i) for i in list(filter(None, re.split(\"[A-Z]\",read[0])))]\n    if(sum(cigar)==len(read[1])):\n        return (len(cigar)==1 and re.split(\"[0-9]+\",read[0])[1]==\"M\")\n    else:\n        return 'Invalid cigar'", "import re\ndef is_matched(read):\n    num = re.compile(r'\\d+')\n    a = list(map(int,num.findall(read[0])))\n    Dna_length = sum(a[0:len(a)])\n    if Dna_length != len(read[1]):      \n        return \"Invalid cigar\"\n    else:\n        return a[0] == len(read[1]) and str(a[0])+\"M\" == read[0]", "import re\ndef is_matched(read):\n    res = [int(i) for i in re.findall(r\"\\d+\",read[0])]\n    if sum(res) != len(read[1]):\n        return \"Invalid cigar\"\n    if len(res) == 1 and \"M\" in read[0]:\n        return True\n    return False", "import re\n\ndef is_matched(read):\n    nums = [int(v) for v in re.findall(r'\\d+', read[0])]\n    return 'Invalid cigar' if sum(nums)!=len(read[1]) else read[0]==f'{len(read[1])}M'"]