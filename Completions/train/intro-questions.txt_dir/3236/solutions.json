["def my_crib(n):\n    wide = 4 + 3 + 6 * (n - 1)\n    door = 2 + n - 1\n    roof = 3 + 2 * (n - 1)\n    r = '{0}{1}{0}\\n'.format(' ' * (wide // 2 - n), '_' * (3 + 2 * (n - 1)))\n    for i in range(1, roof):\n        r += '{0}/{1}\\\\{0}\\n'.format(' ' * (wide // 2 - n - i), '_' * (3 + 2 * (n - 1) + 2 * (i -1)))\n    for i in range(roof - 1 - door):\n        r += '|{}|\\n'.format(' ' * (wide - 2))\n    r += '|{0}{1}{0}|\\n'.format(' ' * ((wide - 1) // 3), '_' * (1 + 2 * (n - 1)))\n    for i in range(1, door - 1):            \n        r += '|{0}|{0}|{0}|\\n'.format(' ' * ((wide - 2) // 3))\n    return r + '|{0}|{0}|{0}|'.format('_' * ((wide - 2) // 3))\n\n", "def my_crib(n):\n    r, ws, wu = ['_' *(2*n + 1)], ' ' * (2*n - 1), '_' * (2*n - 1)\n    r += ['/' + '_' *(2*(n + i) + 1) + '\\\\' for i in range(2*n)]\n    r += ['|' + ws + ' ' + ws + ' ' + ws + '|' for i in range(n - 1)]\n    r += ['|' + ws + ' ' + wu + ' ' + ws + '|']\n    r += ['|' + ws + '|' + ws + '|' + ws + '|' for i in range(n - 1)]\n    r += ['|' + wu + '|' + wu + '|' + wu + '|']\n    return '\\n'.join(l.center(n*6 + 1) for l in r)", "def my_crib(n):\n    # n -- integer number greater than one representing the number of floors\n    n *= 2\n    # Build the house from top to bottom\n    # Roof and Ceiling\n    mansion = [\"{}{}{}\".format(\" \" * n, \"_\" * (n+1), \" \" * n)]\n    mansion.extend(\"{0}/{1}\\\\{0}\".format(\" \" * (n-i-1), \"_\" * (n+1+2*i)) for i in range(n))\n    # Walls and  Door\n    mansion.extend(\"|{}|\".format(\" \" * (3*n-1)) for i in range(n // 2 - 1))\n    mansion.append(\"|{0}{1}{0}|\".format(\" \" * n, \"_\" * (n-1)))\n    mansion.extend(\"|{0}|{0}|{0}|\".format(\" \" * (n-1)) for i in range(n // 2 - 1))\n    # Floor with the Door\n    mansion.append(\"|{0}|{0}|{0}|\".format(\"_\" * (n-1)))\n    return \"\\n\".join(mansion)\n", "def my_crib(n):\n    mult = (2*n) - 1\n    top_roof = \"_\" * ((n*2)+1)\n    top_roof = top_roof.center((n*6)+1, ' ')\n    resulty = ''\n    resulty += top_roof + '\\n'\n    for i in range(n*2):\n        medium_roof = '/' + '_' * int((2*(i + n) + 1)) + '\\\\'\n        medium_roof = medium_roof.center((n*6)+1, ' ')\n        resulty += medium_roof + '\\n'\n    for j in range(n - 1):\n        top_house = '|' + ' ' * ((n*6) - 1) + '|'\n        resulty += top_house + '\\n'\n    upper_door = '|' + ' '*(n*2) + '_'*mult + ' '*(n*2) + '|'\n    resulty += upper_door + '\\n'\n    for h in range(n - 1):\n        medium_house = '|' + ' '*mult + '|' + ' '*mult + '|' + ' '*mult + '|'\n        resulty += medium_house + '\\n'\n    basement = '|' + '_'*mult + '|' + '_'*mult + '|' + '_'*mult + '|'\n    resulty += basement\n    return resulty", "def my_crib(n):\n    crib = [f\"{mult(n*2)}{mult(n*2+1, '_')}{mult(n*2)}\"]\n    crib.extend(f\"{mult(n*2-i-1)}/{mult((n+i)*2+1, '_')}\\\\{mult(n*2-i-1)}\" for i in range(n*2))\n    crib.extend(f\"|{mult(n*6-1)}|\" for _ in range(n-1))\n    crib.append(f\"|{mult(n*2)}{mult(n*2-1, '_')}{mult(n*2)}|\")\n    crib.extend(f\"|{mult(n*2-1)}|{mult(n*2-1)}|{mult(n*2-1)}|\" for _ in range(n-1))\n    crib.append(f\"|{mult(n*2-1, '_')}|{mult(n*2-1, '_')}|{mult(n*2-1, '_')}|\")\n    return \"\\n\".join(crib)\n\n\ndef mult(n, char=\" \"):\n    return char * n", "def my_crib(n):\n    \n    line    = lambda n,l,m,r: f'{ l }{ m*n }{ r }'.center(W)\n    topDoor = lambda: f'|{ ( \"_\"*half_1 ).center(W-2) }|'\n    door    = lambda b: ( b*half_1 ).join('||||')\n    \n    W, H, half_1 = 6*n+1, 4*n+1, 2*n-1\n    \n    return '\\n'.join( line(2*(n+i)-1, *('/_\\\\' if i else '___')) if i<=2*n else\n                      line(W-2, *'| |')                          if i< 3*n else\n                      topDoor()                                  if i==3*n else\n                      door('_' if i==4*n else ' ')               for i in range(H) )", "def my_crib(n):\n    req, space = 3 + (2 * (n - 1)), 3 + (2 * ((n + (n * 2)) - 1))\n    door = (space - 2) - (n * 4)\n    roof =[[('_'*req).center(space,' ')] +\n           [('/'+'_'*(req+(2*i))+'\\\\').center(space,' ') for i in range(n*2)] + \n           ['|'+' '*(space-2)+'|' for i in range(n-1)] +\n           ['|'+(' '*n*2)+('_'*door)+(' '*n*2)+'|'] +\n           ['|'+' '*(n*2-1)+'|'+' '*door+'|'+' '*(n*2-1)+'|' for i in range(n-1)] + \n           ['|'+'_'*(n*2-1)+'|'+'_'*door+'|'+'_'*(n*2-1)+'|']]\n    return \"\\n\".join(roof[0])", "def my_crib(n):\n    #build roof\n    crib_string = ' '*(2*n)+'_'*(2*n+1)+' '*(2*n)+'\\n'\n    for i in range(1,2*n+1):\n        crib_string += ' '*(2*n-i)+'/'+'_'*(2*n+2*i-1)+'\\\\'+' '*(2*n-i)+'\\n'\n        \n    #build floors\n    for i in range(n-1):\n        crib_string += '|'+' '*(6*n-1)+'|\\n'\n    crib_string += '|'+' '*(2*n)+'_'*(2*n-1)+' '*(2*n)+'|\\n'\n    for i in range(n-1):\n        crib_string += '|'+' '*(2*n-1)+'|'+' '*(2*n-1)+'|'+' '*(2*n-1)+'|\\n'\n    crib_string += '|'+'_'*(2*n-1)+'|'+'_'*(2*n-1)+'|'+'_'*(2*n-1)+'|'\n    \n    return(crib_string)", "def my_crib(n):\n    temp = []\n    temp.append(' '*(2*n) + '_'*(2*n+1) + ' '*(2*n))\n    for i in range(2*n):\n        strr = '\\n' + (2*n-i-1)*' ' + '/' + (2*n+1 +2*i) * '_' + '\\\\'\n        if i!=2*n and i!=2*n-1:\n            strr += ' '*(2*n-i-1)\n        \n        temp.append(strr)\n    \n    strr2 = '\\n|'+(n*6-1)*' ' + '|'\n    temp.append((n-1)*strr2)\n    strr3 = '\\n|' + 2*n*' ' + (2*n-1)*'_' + 2*n*' ' + '|'\n    temp.append(strr3)\n    strr4 = '\\n|' + (2*n-1)*' ' + '|' + (2*n-1)*' '+ '|' + (2*n-1)*' '+'|'\n    temp.append((n-1)*strr4)\n    temp.append('\\n|')\n    strr5 = (2*n-1)*'_'+'|'\n    temp.append(3*strr5)\n    temp2 = ''.join(temp)\n\n    return temp2"]