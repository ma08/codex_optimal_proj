["def is_lock_ness_monster(s):\n    return any(i in s for i in ('tree fiddy', 'three fifty', '3.50'))", "import re\n\ndef is_lock_ness_monster(s):\n    return bool(re.search(r\"3\\.50|tree fiddy|three fifty\", s))", "def is_lock_ness_monster(s):\n    return any(phrase in s for phrase in [\"tree fiddy\", \"three fifty\", \"3.50\"])", "import re\ndef is_lock_ness_monster(string):\n    return bool(re.search(r'three fifty|tree fiddy|3\\.50', string))", "def is_lock_ness_monster(string):\n    check = \"3.50\"\n    check2 = \"three fifty\"\n    check3 = \"tree fiddy\"\n    return ((check in string) or (check2 in string) or (check3 in string))\n    \n    #your code here\n", "def is_lock_ness_monster(string):\n    import re\n    return bool( re.findall(\"(?:tree fiddy|3\\.50|three fifty)\", string) )", "def is_lock_ness_monster(string):\n    return any(1 for x in [\"3.50\",\"tree fiddy\",\"three fifty\"] if x in string)", "def is_lock_ness_monster(string):\n    return any(phrase in string for phrase in ('tree fiddy', '3.50', 'three fifty'))", "def is_lock_ness_monster(phrase):\n    PATTERNS = ('tree fiddy', '3.50', 'three fifty')\n    return any(pattern in phrase for pattern in PATTERNS)", "def is_lock_ness_monster(s):\n    return any(map(lambda x:x in s, ('tree fiddy','three fifty','3.50')))"]