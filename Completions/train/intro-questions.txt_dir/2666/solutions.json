["from itertools import accumulate\n\ndef spacey(a):\n    return list(accumulate(a))", "def spacey(array):\n    return [''.join(array[:i+1]) for i in range(len(array))]", "def spacey(array):\n    strr = ''\n    out = []\n    for el in array:\n        strr += str(el)\n        out.append(strr)\n    return out", "def spacey(array):\n    return [\"\".join(array[:i]) for i, _ in enumerate(array, 1)]", "from itertools import accumulate\ndef spacey(array):\n    return list(accumulate(array))", "def spacey(array):\n    new_s = []\n    s = \"\"\n    for i in array:\n        s+=i\n        new_s.append(s)\n    return new_s", "from functools import reduce\n\ndef spacey(array):\n    return reduce(lambda a, b: a + [a[-1] + b] if a else [b], array, [])", "def spacey(array):\n    \n    if len(array) != 0:\n        string = [array[0]]\n        for index in range(2,len(array)+1):\n            for i in range(index-1,index):\n                string = string + [string[i-1]+array[i]]\n        return string\n    else:\n        return array", "spacey=lambda a:list(__import__('itertools').accumulate(a))", "from itertools import accumulate\n\n\ndef spacey(array):\n    return list(map(\"\".join, accumulate(array)))"]