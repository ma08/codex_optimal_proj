["def square_digits(num):\n    ret = \"\"\n    for x in str(num):\n        ret += str(int(x)**2)\n    return int(ret)", "def square_digits(num):\n    return int(''.join(str(int(d)**2) for d in str(num)))", "def square_digits(num):\n    l = []\n    for d in str(num):\n        l.append(str(int(d)**2));\n    return int(''.join(l))\n", "def square_digits(num):\n    return int(''.join(str(int(c)**2) for c in str(num)))", "def square_digits(num):\n    num = str(num)\n    ans = ''\n    for i in num:\n        ans += str(int(i)**2)\n    return int(ans)\n", "def square_digits(num):\n    squares = ''\n    for x in str(num):\n        squares += str(int(x) ** 2)\n    return int(squares)", "def square_digits(num):\n    # s converts num to a str so we can index through it\n    # when then loop through the len of the str \n    # while we're looping the string we convert it back to a int and square it\n    # after we add it to a str to keep it from adding and then convert it to a int\n    s = str(num)\n    t = len(s)\n    y=0\n    g= 0\n    b=\"\"\n    while y < t:\n        g = int(s[y])**2 \n        b= b+ str(g) \n        final = int(b)\n        y=y+1\n    return(final)   \n    pass", "def square_digits(n):\n  return int(\"\".join(str(pow(int(i), 2)) for i in str(n)))\n", "def square_digits(num):\n  return int(''.join([str(int(x)**2) for x in list(str(num))]))\n", "def square_digits(num):\n    return int(''.join([str(n * n) for n in map(int, str(num))]))"]