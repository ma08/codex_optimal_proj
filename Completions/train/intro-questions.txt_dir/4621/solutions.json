["def count_deaf_rats(town):\n    return town.replace(' ', '')[::2].count('O')", "import re\ndef count_deaf_rats(town):\n    return re.findall(r\"O~|~O\",town.split(\"P\")[0]).count(\"O~\") + re.findall(r\"O~|~O\",town.split(\"P\")[1]).count(\"~O\")", "import re\n\ndef count_deaf_rats(town):\n    town = re.sub(\"(~O|O~)\", lambda m: \">\" if m.group(1) == \"~O\" else \"<\", town)\n    left, right = town.split(\"P\")\n    return left.count(\"<\") + right.count(\">\")", "from itertools import count\n\ndef count_deaf_rats(town):\n    deaf = 0\n    piper = False\n    rat = ''\n    for c in town:\n        if c == 'P':\n            piper = True\n        if c in 'O~':\n            rat += c\n            if len(rat) == 2:\n                deaf += piper != (rat == 'O~')\n                rat = ''\n    return deaf", "def count_deaf_rats(town):\n    total = 0\n    town = town.replace(\" \", \"\")\n    print(town)\n    town = town.split(\"P\")\n    print(town)\n    if '' in town:\n        for i in range(len(town)):\n            if town[i] != \"\" and i == 0:\n                town[i] = list(town[i])\n                for j in range(0, len(town[i]), 2):\n                    print((''.join(town[i][j:j+2])))\n                    \n                    if ''.join(town[i][j:j+2]) == \"O~\":\n                        \n                        total += 1\n            elif town[i] != \"\" and i == 1:\n                town[i] = list(town[i])\n                for j in range(0, len(town[i]), 2):\n                    if ''.join(town[i][j:j+2]) == \"~O\":\n                        total += 1\n                \n        return total\n    else:\n        for i in range(len(town)):\n            if i == 0:\n                town[i] = list(town[i])\n                for j in range(0, len(town[i]), 2):\n                    print((town[i][j:j+2]))\n                    if ''.join(town[i][j:j+2]) == \"O~\":\n                        print(j)\n                        total += 1\n            else:\n                town[i] = list(town[i])\n                for j in range(0, len(town[i]), 2):\n                    if ''.join(town[i][j:j+2]) == \"~O\":\n                        print(j)\n                        total += 1\n        return total\n            \n          \n              \n                    \n              \n    \n    \n", "def count_deaf_rats(town):\n    town = town.replace(\" \", \"\")\n    left,p,right = town.partition(\"P\")\n    left = replace_rats(left)\n    right = replace_rats(right)\n    return left.count(\"L\") + right.count(\"R\")\n\n#no clean way to use string replace, step through string 2 chars at a time\ndef replace_rats(rats):\n    ret_array = []\n    for x in range(0, len(rats), 2):\n        if rats[x] == '~':\n            ret_array.append('R')\n        else:\n            ret_array.append('L')\n    return ret_array", "def count_deaf_rats(town):\n    return town.replace(\" \",\"\")[0::2].count(\"O\")", "def count_deaf_rats(s):\n    return s.replace(\" \", \"\")[::2].count(\"O\")", "def count_deaf_rats(town):\n    piper = False\n    count = 0\n    expectedChar = '~'\n    deafRats = 0\n    \n    while count < len(town):\n        if town[count] == ' ':\n            count += 1\n            \n        elif town[count] == expectedChar:\n            count += 2\n            \n        elif town[count] == 'P':\n            piper = True\n            expectedChar = 'O'\n            count += 1\n        \n        else:\n            deafRats += 1\n            count += 2\n                \n    return deafRats\n", "def count_deaf_rats(town):\n    twn = town.replace(' ','').split('P')\n    return sum( find_d( e, [ ['O','~'] , ['~','O'] ][i] ) for i,e in enumerate(twn) )\n    \ndef find_d(r, w):\n    r = [e for e in r]\n    return sum( [ 1 for i in range(0,len(r),2) if r[i:i+2] == w] )\n    \n            \n    \n"]