["def mark_spot(n):\n    if not isinstance(n, int) or not n%2 or n<1: return '?'\n\n    spots = [[' ']*n for _ in range(n)]\n    for i,row in enumerate(spots):\n        row[i],row[-1-i] = 'XX'\n\n    return '\\n'.join( ' '.join(row).rstrip() for row in spots+[\"\"] )", "def mark_spot(n):\n    if type(n) is not int or n <= 0 or n % 2 == 0:\n        return \"?\"\n\n    p1, s = 0, 2*n - 3\n    result = \"\"\n    for i in range(1,n // 2 + 1):\n        result += \" \" * p1 + \"X\" + \" \" * s + \"X\\n\"\n        p1 += 2\n        s -= 4\n    result += \" \" * p1 + \"X\\n\"\n    for i in range(n // 2 + 2,n+1):\n        p1 -= 2\n        s += 4\n        result += \" \" * p1 + \"X\" + \" \" * s + \"X\\n\"\n\n    return result", "from itertools import chain\n\n\ndef mark_spot(n):\n    if not (isinstance(n, int) and n % 2 and n > 0):\n        return '?'\n    result = []\n    row_length = n * 2 - 1\n    for a in chain(range(0, n, 2), range(n - 3, -1, -2)):\n        row = [' '] * row_length\n        row[a] = 'X'\n        row[-(a + 1)] = 'X\\n'\n        result.append(''.join(row).rstrip(' '))\n    return ''.join(result)\n", "def mark_spot(n):\n    if not (isinstance(n, int) and n > 0 and n % 2):\n        return \"?\"\n    w = n * 2 - 1\n    return \"\".join(\n        \"\".join(\"X\" if j in (i, w - 1 - i) else \" \" for j in range(w)).rstrip() + \"\\n\"\n        for i in range(0, n * 2, 2)\n    )", "def mark_spot(n):\n    return \"?\" if not isinstance(n, int) or n<1 or n%2==0 else \\\n           \"\\n\".join( '{0}{1}{0}'.format('X' if i!=n//2 else '',\n                                         ' ' * (abs((n-1)-2*i)*2-1) if i!=n//2 else 'X'\n                                  ).center(n*2).rstrip() for i in range(n) ) + '\\n'", "def mark_spot(n):\n    if not type(n)==int or n<1 or not n%2:\n        return '?'\n    \n    l = [' '*(2*n-i*2) for i in range(n//2+1)]\n    \n    for i in range(len(l)):\n        l[i] = l[i][:-2]+'X'+'\\n'\n        l[i] = ' '*i*2 + 'X' + l[i][i*2+1:]\n\n    return ''.join(l+l[::-1][1:])", "def mark_spot(n):\n    if not isinstance(n, int) or n < 0 or n % 2 != 1:\n        return '?'\n    ans = [[' ']*(2*n-1) for _ in range(n)]\n    for i in range(n):\n        ans[i][i*2] = ans[i][2*n-2*i-2] = 'X'\n    return '\\n'.join(''.join(a).rstrip() for a in ans) + '\\n'", "def mark_spot(n):\n    if not isinstance(n,int):\n        return \"?\"\n    if n % 2 == 0 or n < 1:\n        return \"?\"\n    res = \"\"\n    demi = n//2\n    for i in range(demi):\n        for j in range(2*i):\n            res += \" \"\n        res += \"X\"\n        for j in range(4*(demi-i) - 1):\n            res += \" \"\n        res += \"X\\n\"\n    for j in range(2*demi):\n        res += \" \"\n    res += \"X\\n\"\n    for i in reversed(list(range(demi))):\n        for j in range(2*i):\n            res += \" \"\n        res += \"X\"\n        for j in range(4*(demi-i) - 1):\n            res += \" \"\n        res += \"X\\n\"\n    return res\n"]