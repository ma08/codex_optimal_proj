["def rectangles(n, m):\n    return m * n * (m - 1) * (n - 1) / 4", "def rectangles(n, m):\n  return n*m*(n-1)*(m-1)//4", "rectangles=lambda n,m:n*~-n*m*~-m//4", "def rectangles(n, m):\n    return ((m-1) * (n-1) * n * m) / 4;", "def rectangles(n, m):\n    result = 0\n    \n    if n < 2 or m < 2:\n        return result\n\n    for i in range(n):\n        for j in range(m):\n            result += i*j\n            \n    return result", "from math import factorial\n\ndef rectangles(n, m):\n    return 0 if n <= 1 or m <= 1 else round(factorial(n)/factorial(n-2)/2 * factorial(m)/factorial(m-2)/2)\n", "def rectangles(m, n):\n    return (m-1)*(n-1)*m*n/4", "def rectangles(n, m):\n  OneOnOneRects = (n-1) * (m-1)\n  sumOfM = sum(range(1, m-1))\n  sumOfN = sum(range(1, n-1))\n  OneAndSome = (n-1) * sumOfM\n  SomeAndOne = (m-1) * sumOfN\n\n  SomeAndSome = 0\n  for i in range(2, n):\n      for j in range(2, m):\n          SomeAndSome = SomeAndSome + (n-i)*(m-j)\n\n  return OneOnOneRects + OneAndSome + SomeAndOne + SomeAndSome", "import scipy.special as math\n\ndef rectangles(n, m):\n  return int(math.comb(n,2)*math.comb(m,2))"]