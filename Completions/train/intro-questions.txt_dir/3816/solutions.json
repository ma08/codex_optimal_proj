["from string import ascii_lowercase as al\n\ntbl = str.maketrans(al, al[10:] + al[:10])\ndef move_ten(st):\n    return st.translate(tbl)", "def move_ten(st):\n    return ''.join(chr(ord(i)+10) if i<'q' else chr(ord(i)-16) for i in st)", "def move_ten(stg):\n    return \"\".join(chr(97 + ((ord(c) - 87) % 26)) for c in stg)", "def move_ten(s):\n    return ''.join(chr(97 + (ord(x) - 97 + 10)%26) for x in s)", "A = 'abcdefghijklmnopqrstuvwxyz'\n\ndef move_ten(s):\n    return ''.join(s.translate(str.maketrans(A, A[10:] + A[:10])))", "move_ten=lambda s:''.join(chr((ord(e)-87)%26+97)for e in s)", "def move_ten(st):\n    a = 'abcdefghijklmnopqrstuvwxyzabcdefghij'\n    return (''.join([a[a.find(i)+10] for i in st]))", "move_ten = lambda s,t=str.maketrans('abcdefghijklmnopqrstuvwxyz', 'klmnopqrstuvwxyzabcdefghij'): s.translate(t)", "a = 'abcdefghijklmnopqrstuvwxyz'\ndef move_ten(st):\n    return ''.join(a[(a.find(x)+10)%26] for x in st)", "def move_ten(st):\n    alphabet = \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\n    output = \"\"\n    for letter in st:\n        index = alphabet.index(letter)\n        letter = alphabet[index+10]\n        output += letter\n    return output"]