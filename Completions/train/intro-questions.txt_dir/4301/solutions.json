["def calc_ms(n):\n  return 20 ** n", "def calc_ms(n):\n    return pow(20,n)", "calc_ms = (20).__pow__", "from functools import partial\n\ncalc_ms = partial(pow, 20)", "from functools import partial\nfrom operator import pow\n\ncalc_ms = partial(pow, 20)", "def calc_ms(n):\n  a = n * '0'\n  return int(str(pow(2, n)) + a)", "calc_ms=lambda Q:20**Q", "def calc_ms(n):\n  \n  \n  v = 2**n\n  \n  d = 1*10**n\n  \n  k = v*d\n  \n  return k\n  \n  \n  \n", "def calc_ms(n):\n    res = 1\n    while n > 0:\n        res *= 20\n        n -= 1\n    return res", "def calc_ms(n):\n    number = 1\n    x = 0\n    while x < n:\n        number *= 20\n        x += 1\n    return number"]