["def bin_str(s):\n    return s.count(\"10\") * 2 + (s[-1] == \"1\")", "def bin_str(input):\n    flips_needed = 0\n    last_seen = '0'\n    for c in input:\n        if last_seen != c:\n            flips_needed += 1\n            last_seen = c\n    return flips_needed", "import re\n\ndef bin_str(s):\n    return len(re.findall(\"(?:1+)|(?:0+)\", s.lstrip(\"0\")))", "import re\ndef bin_str(s):\n    return len(re.findall(r'0+|1+', s.lstrip('0')))", "import re\n\ndef bin_str(s):\n    return len(re.findall(r'(1+)|((?<=1)0+)', s))", "bin_str=lambda n:sum(a!=b for a,b in zip('0'+n,n))", "def bin_str(s):\n    return s.count(\"10\")*2+int(s[-1])", "def bin_str(s):\n    c = 0\n    x = '0'\n    for i in s:\n        if x != i:\n                c += 1\n                x = i\n    return c", "\ndef bin_str(s):    \n    \n    count = 0\n    \n    while s.count(\"1\") != 0:\n    \n        first_index = s.index(\"1\")      \n        \n        n = \"\"    \n        \n        \n        \n        for nbr in s[first_index:len(s)]:\n\n            if nbr == \"1\":\n        \n                n += \"0\"\n\n            elif nbr == \"0\":\n        \n                n += \"1\"\n        \n        s = s[0:first_index] + n\n\n        count +=1\n             \n             \n    return count\n"]