["def draw(waves):\n    m       = max(waves)\n    rotHist = [ ('\u25a0'*v).rjust(m, '\u25a1') for v in waves ]\n    return '\\n'.join( map(''.join, zip(*rotHist)) )", "def draw(waves):\n    m = max(waves)\n    return '\\n'.join(\n        ''.join('\u25a1\u25a0'[x > i] for x in waves) for i in reversed(range(m))\n    )", "ON = '\u25a0'\nOFF = '\u25a1'\n\ndef draw(waves):\n    result = ''\n    height = max(waves)\n    for line in range(height, 0, -1):\n        for wave in waves:\n            if wave >= line:\n                result += ON\n            else:\n                result += OFF\n        result += '\\n'\n    return result.strip()", "def draw(waves):\n    mx = max(waves)\n    return '\\n'.join([''.join(e) for e in zip(*[('\u25a0' * e).ljust(mx,\"\u25a1\") for e in waves ])][::-1])\n    \n    \n", "def draw(waves):\n    wave = []\n    while sum(waves)!=0:\n        black = max(waves)\n        cur = ''\n        for i in range(len(waves)):\n            if waves[i]<black:\n                cur += '\u25a1'\n            else:\n                cur += '\u25a0'\n                waves[i] -= 1\n        wave.append(cur)\n    return '\\n'.join(wave)", "def draw(waves):\n    m = max(waves)\n    return \"\\n\".join(\"\".join(\"\u25a1\" if n < (m - row) else \"\u25a0\" for n in waves) for row in range(m))\n", "def draw(waves):\n    # your code\n    #\u25a0\u25a1\n    result = \"\"\n    height = max(waves)\n    weight = len(waves)\n    for i in range(height):\n        for j in range(weight):\n            if(waves[j] >= height - i):\n                result += \"\u25a0\"\n            else:\n                result += \"\u25a1\"\n        if(i != height-1):\n            result += \"\\n\"\n    \n    return result ", "def draw(waves):\n    mx = max(waves)\n    return '\\n'.join(''.join(c) for c in zip(*[(mx - w) * '\u25a1' + w * '\u25a0' for w in waves]))", "def draw(a):\n    n = iter(a)\n    li = [('\u25a0' * next(n)).ljust(max(a),'\u25a1') for i in range(len(a))]\n    return \"\\n\".join([\"\".join(i) for i in list(zip(*li))[::-1]])", "FILLED = '\u25a0'\nEMPTY = '\u25a1'\ndef draw(waves):\n    result = ''\n    height = max(waves)\n    width = len(waves)\n    matrix = [[EMPTY for x in range(width)] for y in range(height)]\n    for y, value in enumerate(waves):\n        for x in range(value):\n            matrix[x][y] = FILLED\n    for row in range(height-1, -1, -1):\n        result = result + ''.join(matrix[row]) + '\\n'\n    return result.strip()"]