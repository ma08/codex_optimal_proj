["def ones_complement(n):\n    return n.translate(str.maketrans(\"01\",\"10\"))", "def ones_complement(binary_number):\n  return binary_number.translate(str.maketrans('01', '10'))", "def ones_complement(binary_number):\n    return \"\".join([ \"1\" if binary_number[x] == \"0\" else \"0\" for x in range(0, len(binary_number))])", "ones_complement=lambda s:s.translate({48:49,49:48})", "def ones_complement(binary_number):\n  return ''.join('0' if int(n) else '1' for n in binary_number)", "def ones_complement(s):\n    return ''.join({'0':'1'}.get(c, '0') for c in s)", "def ones_complement(b):\n    b=b.replace('0','*')\n    b=b.replace('1','0')\n    return b.replace('*','1')# your code here", "def ones_complement(binary):\n    return \"\".join(\"01\"[b==\"0\"] for b in binary)", "def ones_complement(binary_number):\n    return \"\".join(\"0\" if n == \"1\" else \"1\" for n in binary_number)"]