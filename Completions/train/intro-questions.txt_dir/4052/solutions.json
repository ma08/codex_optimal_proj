["def get_num(arr):\n    c,n,r=1,1,{}\n    arr.sort()\n    for a in arr: n*=a; r[a]= r[a]+1 if a in r else 1\n    for a in r: c*=r[a]+1 \n    return [n,c-1,arr[0],n//arr[0]]", "from collections import Counter\nfrom functools import reduce\nfrom operator import mul\n\ndef get_num(arr):\n    n, small = reduce(mul, arr), min(arr)\n    count = reduce(mul, (v+1 for v in Counter(arr).values())) - 1\n    return [n, count, small, n//small]", "import itertools\nimport functools\nimport operator\n   \n\ndef get_num(arr):\n    arr.sort()\n    counter=0\n    for i in range(1,len(arr)+1):\n          combu=set(itertools.combinations(arr, i))\n          counter+=len(combu)\n    minik=min(arr)\n    number=functools.reduce(operator.mul,arr)\n    biggest=number/minik\n    return [number,counter,minik,biggest]", "from functools import reduce\nfrom operator import mul\ndef get_num(a):\n    a.sort()\n    m = reduce(mul, [i ** a.count(i) for i in set(a)])\n    total_d = reduce(mul, [a.count(i) + 1 for i in set(a)])\n    return [m,total_d-1,a[0],m//a[0]]", "import itertools\ndef get_num(arr):\n    n = 1\n    amount = 1\n    div = []\n    for i in arr:\n        n = n * i\n        if i not in div:\n            amount = amount * (arr.count(i)+1)\n            div.append(i)\n    lil_div = min(arr)\n    big_div = n//lil_div\n        \n    return [n, amount-1, lil_div, big_div]", "def get_num(arr):\n    if len(arr) == 0:\n        return []\n    \n    res = 1\n    smallest = arr[0]\n    divisors = {}\n    for val in arr:\n        res *= val\n        \n        if val < smallest:\n            smallest = val\n            \n        if val not in divisors:\n            divisors[val] = 0\n        divisors[val] += 1\n        \n    num_divisors = 1\n    for val in divisors:\n        num_divisors *= (divisors[val] + 1)\n    \n    return [res, num_divisors - 1, smallest, res//smallest]", "from collections import Counter\nfrom functools import reduce\nfrom operator import mul\ndef get_num(arr):\n    c=Counter(arr)\n    x=reduce(mul,arr)\n    d=reduce(mul,[v+1 for v in c.values()])-1\n    return [x,d,min(arr),x//min(arr)]"]