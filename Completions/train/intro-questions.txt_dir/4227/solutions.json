["def complexSum(arr, sub={'1i': 'i', '-1i': '-i', '0i': '0'}):\n    s = str(sum(complex(x.replace('i', 'j')) for x in arr)).replace('j', 'i')\n    s = s.strip('()')\n    s = s.replace('+0i', '')\n    return sub.get(s, s)    ", "def complexSum(arr):\n    a = [complex(i.replace(\"i\", \"j\")) for i in arr]\n    s = 0\n    for i in a:\n        s += i\n    if s == 1j:\n        return \"i\"\n    elif s == -1j:\n        return \"-i\"\n    elif s.imag == 0j:\n        s = int(s.real)\n    s = str(s).replace(\"j\", \"i\").lstrip(\"(\").rstrip(\")\")\n    return s", "from functools import reduce\nfrom operator import add\nimport re\n\n\nP_TO_PYTHON   = re.compile(r'[+-]?\\d*i')\nP_FROM_PYTHON = re.compile(r'[()]|\\b1(?=j)|([+-]|^)0j')\n\ncomplexify=lambda m: \"{}{}1j\".format(m.group()[:-1], '*' * (len(m.group()) > 1 and m.group()[-2] not in \"-+\"))\n\ndef complexSum(arr):\n    lst = [P_TO_PYTHON.sub(complexify, s) for s in arr]\n    cpx = reduce(add, map(eval, lst), 0)\n    return P_FROM_PYTHON.sub('', str(cpx)).replace('j','i')", "s,complexSum=__import__('re').sub,lambda a:s('[-+]0i?|[()]','',s(r'(\\b1)?j','i',str(eval(s('i','j',s(r'\\bi','1i','+'.join(a)or'0'))))))", "import re\ndef complexSum(arr):\n    real=0\n    img=0\n    for a in arr:\n        for b in re.findall(r'[-+]?\\d*i?',a):\n            if not b:\n                continue\n            if 'i' in b:\n                if b=='+i' or b=='i':\n                    img+=1\n                elif b=='-i':\n                    img-=1\n                else:\n                    img+=int(b[:-1])\n            else:\n                real+=int(b)\n\n    if img==0:\n        return str(real)\n    elif real==0:\n        if img==1:\n            return 'i'\n        elif img==-1:\n            return '-i'\n        else:\n            return '{}i'.format(img)\n    else:\n        return '{}{:+}i'.format(real,img).replace('+1i','+i').replace('-1i','-i')", "def complexSum(arr):\n    s = sum(complex(i.replace('i','j')) for i in arr)\n    r,i = map(int,(s.real,s.imag))\n    return f'{r}' if not i else f\"{'-' if i==-1 else '' if i==1 else i}i\" if not r else f\"{r}{'+' if i>0 else ''}{i}i\"", "def complexSum(arr):\n    real_sum = 0\n    imag_sum = 0\n    for string in arr:\n        val = ''\n        for char in string:\n            if char == '-':\n                if len(val) > 0:\n                    real_sum += int(val)\n                val = '-'\n            elif char == '+':\n                real_sum += int(val)\n                val = ''\n            elif char == 'i':\n                if val == '':\n                    val = 1\n                elif val[0] == '-':\n                    if len(val) != 1:\n                        val = -1 * int(val[1::])\n                    else: val = -1\n                imag_sum += int(val)\n                val = 0\n            else:   \n                val += char\n        real_sum += int(val)\n    fin_string = ''\n    if imag_sum == 1:\n        fin_string = 'i'\n    elif imag_sum == 0:\n        fin_string = ''\n    elif imag_sum == -1:\n        fin_string = '-i'  \n    else:\n        if imag_sum > 1 and real_sum != 0:\n            fin_string = '+'+str(imag_sum)+'i'\n        else: \n            fin_string = str(imag_sum)+'i'\n    if real_sum == 0 and imag_sum != 0:\n        return fin_string\n    return (str(real_sum)+fin_string) if (real_sum+imag_sum !=0) else '0'", "complexSum=lambda A:(lambda s:{'1i':'i','-1i':'-i','0i':'0'}.get(s,s))(str(sum(complex(x.replace('i','j'))for x in A)).replace('j','i').strip('()').replace('+0i',''))"]