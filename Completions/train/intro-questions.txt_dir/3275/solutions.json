["def clonewars(k):\n    return [2**max(k-1,0),2**(k+1)-k-2]", "clonewars=lambda n:[-~2**n//2,2**-~n-n-2]", "def clonewars(n):\n    return [2**max(n-1,0), 2**(n+1)-(n+2)]", "def clonewars(n):\n    return [max(1,2**(n-1)), 2**(n+1)-n-2]", "def clonewars(n):\n    if n == 0: return [1,0]\n    return [2**(n-1), 2**(n+1) - (n+1) - 1]", "def clonewars(n):\n    return [2**max(0, n - 1), sum((n - i) * 2**i for i in range(0, n))]", "clonewars = lambda k: [2**max(0, k-1), sum(2**max(0, i) * (k - i) for i in range(k))]", "def clonewars(kata):\n    return [2**(kata-1),sum(2**i*(kata-i) for i in range(kata))] if kata else [1,0]", "def clonewars(kata_per_day):\n    x = max(1,2 ** (kata_per_day-1))\n    y = 0\n    for i in range(0,kata_per_day):\n        y += (kata_per_day-i) * (2**(i))\n    return [x,y]"]