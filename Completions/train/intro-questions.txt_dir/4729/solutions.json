["digits = 'zero one two three four five six seven eight nine'.split()\n\ndef f(n):\n    return ''.join(map(digits.__getitem__, map(int, str(n))))\n\ndef numbers_of_letters(n):\n    result = [f(n)]\n    print(n, result)\n    while result[-1] != 'four':\n        result.append(f(len(result[-1])))\n    return result", "words = \"zero one two three four five six seven eight nine\".split()\nwordify = lambda n: \"\".join(words[int(d)] for d in str(n))\n\n\ndef numbers_of_letters(n):\n    result = [wordify(n)]\n    while result[-1] != \"four\":\n        result.append(wordify(len(result[-1])))\n    return result", "s = \"zero one two three four five six seven eight nine\"\nls = s.split(\" \")\ndef numbers_of_letters(n):\n    t = [stringa(n)]\n    while n != len(stringa(n)):\n        n = len(stringa(n))\n        t.append(stringa(n))\n    return t \n\ndef stringa(n):\n    return \"\".join([ls[int(i)] for i in str(n)])", "t = {'1': 'one', '2': 'two', '3': 'three', '4': 'four', '5': 'five', '6': 'six', '7': 'seven', '8': 'eight', '9': 'nine', '0': 'zero'}\n\ndef numbers_of_letters(n):\n    x = [''.join([t[i] for i in str(n)])]\n    while int(n) != len(x[-1]):\n        n = len(x[-1])\n        x.append(''.join([t[i] for i in str(n)]))\n    return x", "NUM = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"]\n\ndef numbers_of_letters(n):\n    s = ''.join(NUM[i] for i in map(int, str(n)))\n    return [s] + (numbers_of_letters(len(s)) if len(s) != n else [])", "numbers_of_letters=f=lambda n,N=[\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\"]:(lambda s:[s]+f(len(s))if len(s)!=n else[s])(''.join(N[i]for i in map(int,str(n))))", "def numbers_of_letters(n):\n    names = { '0': 'zero' ,\n              '1': 'one'  ,\n              '2': 'two'  ,\n              '3': 'three',\n              '4': 'four' ,\n              '5': 'five' ,\n              '6': 'six'  ,\n              '7': 'seven',\n              '8': 'eight',\n              '9': 'nine' }\n    result = []\n    while True:\n        result.append(''.join(names[digit] for digit in str(n)))\n        if result[-1]=='four':\n            return result\n        n = len(result[-1])", "numbers = 'zero one two three four five six seven eight nine'.split()\n\ndef f(n):  return ''.join(numbers[int(i)] for i in str(n))\n\ndef numbers_of_letters(n):\n    ans = [f(n)]\n    while ans[-1]!='four':\n        ans.append(f(len(ans[-1])))\n    return ans", "DIGITS = (\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\")\n\ndef numbers_of_letters(n):\n    n_digits = ''.join(DIGITS[i] for i in map(int, str(n)))\n    n = len(n_digits)\n    next_n_digits = ''.join(DIGITS[i] for i in map(int, str(n)))\n    result = [n_digits, next_n_digits] if n_digits != next_n_digits else [n_digits]\n    while len(next_n_digits) != n:\n        n = len(next_n_digits)\n        next_n_digits = ''.join(DIGITS[i] for i in map(int, str(n)))\n        result.append(next_n_digits)\n    return result", "def numbers_of_letters(n):\n    change = {\"0\": \"zero\", \"1\": \"one\", \"2\": \"two\", \"3\": \"three\", \"4\": \"four\",\n              \"5\": \"five\", \"6\": \"six\", \"7\": \"seven\", \"8\" : \"eight\", \"9\" : \"nine\"}\n    num, sol = \"\".join(change[x] for x in str(n)),  []\n    sol.append(num)\n    while num != \"four\":\n        num = \"\".join(change[x] for x in str(len(num)))\n        sol.append(num)\n    return sol"]