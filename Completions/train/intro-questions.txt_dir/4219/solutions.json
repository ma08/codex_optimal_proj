["def maxlen(s1, s2):\n    sm, lg = sorted((s1, s2))\n    return min(max(lg / 3, sm), lg / 2)", "def maxlen(l1, l2):\n    return max(min(l1 / 2, l2), min(l1, l2 / 2), max(l1, l2) / 3)", "def maxlen(*args):\n    x,y = sorted(args)\n    return [y/2, x, y/3][ (y>2*x) + (y>3*x) ]", "def maxlen(*s):\n    a, b = min(s), max(s)\n    return b / 3 if b > a * 3 else b / 2 if b < a * 2 else a", "maxlen=lambda a,b:max(a/3,min(a/2,b),min(a,b/2),b/3)", "def maxlen(L1, L2):\n    L1, L2 = sorted((L1, L2))\n    return (L2/2, L1, L2/3)[(L2 > 2*L1) + (L2 > 3*L1)]", "def maxlen(l1, l2):\n    l1, l2 = sorted((l1, l2))\n    return max(l2/3, min(l2/2, l1))\n    \n\n# one-liner\n#maxlen = lambda l1, l2: max(max(l1, l2)/3, min(max(l1, l2)/2, min(l1, l2)))\n", "def maxlen(L1,L2):\n    if L1 > L2 and L1 / 3 > L2:\n        return L1 / 3\n    elif L2 > L1 and L2 / 3 > L1:\n        return L2 / 3\n    elif L1 > L2 and L1 / 2 > L2:\n        return L2\n    elif L2 > L1 and L2 / 2 > L1:\n        return L1\n    elif L1 > L2 and L1 / 2 < L2:\n        return L1 / 2\n    elif L2 > L1 and L2 / 2 < L1:\n        return L2 / 2", "def maxlen(L1,L2):\n    return maxlen(L2,L1) if L1 < L2 else max(min(L1/2,L2 ),L1/3)", "def maxlen(L1, L2):\n    a, b = sorted([L1, L2])\n    if b < 2*a:\n        return b / 2\n    elif 2*a < b < 3*a:\n        return a\n    else:\n        return b / 3"]