["def getSlope(p1, p2):\n    return None if p1[0] == p2[0] else (p2[1] - p1[1])/(p2[0] - p1[0])\n", "def getSlope(p1, p2):\n    if p2[0] - p1[0]: return (p2[1]-p1[1]) / (p2[0]-p1[0])", "def getSlope(p1, p2):\n    return None if p1[0] == p2[0] else (p1[1] - p2[1]) / (p1[0] - p2[0])", "def getSlope(p1, p2):\n    if not (p2[0] - p1[0]):\n        return None\n    return (p2[1] - p1[1]) / (p2[0] - p1[0])", "def getSlope(p1, p2):\n    if p2[0] != p1[0]:\n        return (p2[1] - p1[1]) / (p2[0] - p1[0])", "def getSlope(p1, p2):\n    ''' Return the slope of the line through p1 and p2\n    '''\n    if p1[0]==p2[0] or p1==p2:\n        return None\n\n    return (p1[1]-p2[1])/(p1[0]-p2[0])", "def getSlope(p1, p2):\n    p1x, p1y = p1\n    p2x, p2y = p2\n    try:    return (p2y - p1y) / (p2x - p1x)\n    except: pass", "def getSlope(p1, p2):\n    ''' Return the slope of the line through p1 and p2\n    '''\n    try:\n        slope = (p2[1] - p1[1])/(p2[0] - p1[0])\n        if (p1 == p2):\n            return None\n        return slope\n    except ZeroDivisionError:\n        return None", "def getSlope(p1, p2):\n    try:\n        return (p2[1] - p1[1]) / (p2[0] - p1[0])\n    except:\n        return None", "def getSlope(p1, p2):\n    if (p1[0] != p2[0]):\n        return (p1[1]-p2[1])/(p1[0]-p2[0])\n"]