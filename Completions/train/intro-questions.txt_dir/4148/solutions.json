["def sum_digits(number):\n    return sum(map(int, str(abs(number))))", "def sum_digits(n):\n    return eval('+'.join(str(abs(n))))", "def sum_digits(number):\n    num_string = str(abs(number))\n    total = 0\n    \n    for char in num_string:\n        total += int(char)\n    \n    return total", "def sum_digits(number):\n  d = 0    \n  for c in str(abs(number)):\n      d += ord(c) - 48\n  return d", "sum_digits=lambda n:sum(int(e)for e in str(abs(n)))", "def sum_digits(n):\n    return sum([int(x) for x in str(abs(n))])", "def sum_digits(number):\n    return sum(int(ele) for ele in str(abs(number)))", "def sum_digits(number):\n    return sum([int(i) for i in str(abs(number))])", "def sum_digits(number):\n    inp = str(number)\n    s = 0\n    for x in inp:\n        try:\n            s += int(x)\n        except:\n            pass\n    return s\n", "def sum_digits(number):\n    return sum(int(digit) for digit in str(number).replace('-',''))", "def sum_digits(number):\n    sum = 0\n    if number < 0:\n        number = number * -1\n    while len(str(number)) != 1:\n        sum += number%10\n        number = number//10\n    sum += number\n    return sum\n", "\ndef sum_digits(number):\n    sum = 0\n    if len(str(number)) == 1:\n        return number\n    else:\n        for i in range(len(str(number))):\n            if str(number)[i] == \"-\":\n                sum += 0\n            else:\n                sum += int(str(number)[i])\n        return sum", "def sum_digits(number):\n    if number < 0:\n        number *= -1\n    return sum(map(int, str(number)))", "def sum_digits(number):\n    string = str(number)\n    for char in string:\n        if char == \"-\":\n            string = string.replace(char, \"\")\n    return sum([int(x) for x in string])", "def sum_digits(number):\n    return sum(int(i) if not i=='-' else 0 for i in str(number))", "def sum_digits(number):\n    str_num = str(number)\n    ret_num = 0\n    for num in str_num:\n        if num != '-':\n            ret_num = ret_num + int(num)\n    return ret_num", "def sum_digits(number):\n    total = 0\n    for digit in str(abs(number)):\n        total += int(digit)\n    return total", "def sum_digits(x):\n    if len(str(x)) == 1:\n        return x\n    suma=0\n    for j in str(x):\n        if j != '-':\n            suma += int(j)\n    return suma    # ...", "def sum_digits(number):\n    sum = 0\n    for num in str(abs(number)):\n        sum += int(num)\n    return sum\n", "def sum_digits(number):\n    number = str(number)\n    numT = 0\n    for i in number:\n        if i != \"-\":\n            numT += int(i)\n    return numT", "def sum_digits(number):\n    number = abs(number)\n    if number == 0:\n        return 0\n    \n    return number % 10 + sum_digits(number // 10)", "def sum_digits(number):\n    chars = list(str(number))\n    digits = [int(char) for char in chars if char.isdigit()]\n    return sum(digits)\n", "def sum_digits(number):\n    # ..\n    s = 0\n    n = str(number)\n    for i in n:\n        if i.isdigit():\n            s += int(i)\n    return s\n", "def sum_digits(number):\n    kol=0\n    j=\"\"\n    string=str(number)\n    for i in string:\n        j=\"\"\n        if i==\"-\":\n            continue\n        else:\n            j+=i\n        kol+=int(j)\n    return kol", "def sum_digits(number):\n    sum = 0\n    for char in str(number):\n        if char == '-':\n            continue\n        else:\n            sum = sum + eval(char)\n    return sum ", "\ndef sum_digits(number):\n    sum = 0\n    number = abs(number)\n    number = str(number)\n    for i in number:\n        print(i)\n        sum += int(i)\n    return sum\n        \n", "def sum_digits(number):\n    digits = list(map(str, str(number)))\n    digits = [int(x) for x in digits if x.isdigit()]\n    return sum(digits)\n", "def sum_digits(number):\n    result = 0\n    is_minus = False\n    \n    if (number < 0):\n        is_minus = True\n        number = number * -1\n    for element in str(number):\n        result += int(element)\n    \n    return result", "def sum_digits(number):\n    nr = str(number)\n    total = 0\n    for i in range(len(nr)):\n        if nr[i].isdigit():\n            total += int(nr[i])\n    return total", "def sum_digits(number):\n    t=0\n    for i in str(number):\n              if i.isdigit():\n                  t =t +int(i)\n    return t", "def sum_digits(number):\n    luz = abs(number)\n    liz = [int(x) for x in str(luz)]\n    return sum(liz)\n    \n", "def sum_digits(number):\n    total = 0\n    for num in str(abs(number)):\n        total += int(str(num))\n                    \n    return total\n\nprint(sum_digits(23))", "def sum_digits(number):\n    summ = 0\n    number = str(number)\n    for num in number:\n        if num.isdigit():\n            summ += int(num)\n        else:\n            pass\n    return summ", "def sum_digits(number):\n    asum = 0\n    for val in str(number):\n        if val != \"-\":\n            print(val)\n            asum += int(val)\n    return(asum)", "def sum_digits(number):\n    numberList = [int(x) for x in str(abs(number))]\n    return sum(numberList)", "def sum_digits(number):\n    y = 0\n    for x in str(number):\n        if x == \"-\":\n            pass\n        else:\n            y += int(x)\n    return y", "def sum_digits(number):\n    if number < 0:\n        number *= -1\n    a = str(number)\n    return sum([int(i) for i in a])\n", "def sum_digits(number):\n  if number >= 0:\n    total = 0\n    for i in str(number):\n      total += int(i)\n    return total\n  else:\n    total = 0\n    for i in str(number)[1:]:\n      total += int(i)\n    return total", "def sum_digits(num):\n    return sum([int(i) for i in str(num) if i.isdigit()])\n", "def sum_digits(number):\n    result = 0\n    for num in str(number):\n        try:\n            result += int(num)\n        except:\n            continue\n    return result", "def sum_digits(number):\n    \n    num_str = str(abs(number))\n    s = 0\n    \n    for i in num_str:\n        s += int(i)\n    return s\n    \n", "def sum_digits(number):\n    splits = list(str(number))\n    num_lst = []\n    for num in splits:\n        try:\n            if type(int(num)) == int:\n                num_lst.append(int(num))\n        except:\n            continue\n    return(sum(num_lst))", "def sum_digits(number):\n    num = str(abs(number))\n    res = 0\n    for item in num:\n        res += int(item)\n    return res", "def sum_digits(number):\n    num = str(number)\n    num = [int(x) for x in num if x != '-']\n    return sum(num)\n", "def sum_digits(number):\n    sumnumbers=0\n    for numbers in str(number.__abs__()):\n        sumnumbers += int(numbers)\n    return sumnumbers", "def sum_digits(number):\n    n = str(abs(number))\n    sum = 0\n    for i in range(len(n)):\n        sum += int(n[i])\n    return sum", "def sum_digits(number):\n    # ...\n    q = 0\n    h = str(number.__abs__())\n    for i in h:\n        q += int(i)\n    \n    return q", "def sum_digits(number):\n    number_list = list(str(number))\n    sum = 0\n    print(number_list)\n    for x in number_list:\n        if x == '-':\n            continue\n        else:\n            sum += int(x)\n    return sum", "def sum_digits(number):\n    digits = []\n    remove = []\n    num_sum = 0\n    if number < 0:\n        number = abs(number)\n    for split in str(number):\n        digits.append(split)\n\n    print(digits)\n    for add in digits:\n        num_sum += int(add)\n    print(num_sum)\n    return num_sum", "def sum_digits(number):\n    k = sum(list(map(int, str(abs(number)))))\n    return(k)", "def sum_digits(number):\n    #initializing sum to zero\n    sum=0\n    #for each digit(e) in number\n    for e in str(abs(number)):\n        #adding each digit to sum\n        sum+=int(e)\n    #returning sum\n    return sum", "def sum_digits(number):\n    if number<0:\n        number = number*-1\n    total = 0\n    while number>0:\n        dig = number%10\n        total+=dig\n        number = number//10\n    return total", "def sum_digits(number):\n    my_sum = 0\n    number = abs(number)\n    while number >= 10:\n        my_sum = my_sum + (number % 10)\n        number = int(number / 10)\n    my_sum = my_sum + number\n    return my_sum", "def sum_digits(number):\n    sum_digits = 0\n    number2 = abs(number)\n    for i in str(number2):\n        sum_digits += int(i)\n    return sum_digits\n    \n    # ...\n", "def sum_digits(number):\n    num = str(number)\n    num = num.lstrip(\"-\")\n    \n    result = 0\n    \n    for i in num:\n        result += int(i)\n    \n    return result\n", "def sum_digits(number):\n    sum = 0\n    while abs(number) // 10 != 0:\n        sum += abs(number) % 10\n        number = abs(number) // 10\n    sum += abs(number) % 10\n    return sum", "def sum_digits(number):\n    number = abs(number)\n    number = str(number)\n    sum_num = 0    \n    for i in number:\n        i = int(i)\n        sum_num = sum_num + i\n    return sum_num", "def sum_digits(number):\n    absNum = number if number > 0 else -(number)\n    strList = (list(str(absNum)))\n    return sum(map(lambda x: int(x), strList))", "def sum_digits(number):\n    abs_value = 0\n    numbers = map(int, str(number).strip('-'))\n    for i in numbers:\n        abs_value += i\n    return abs_value", "def sum_digits(number):\n    count = 0\n    number = abs(number)\n    for num in str(number):\n        count = count + int(num)\n    return (count)\n    # ...\n", "def sum_digits(number):\n    sum = 0\n    for i in list(str(abs(number))):\n        sum = sum + int(i)\n\n    return sum", "def sum_digits(number):\n    \n    if number<0:\n        number = number * -1\n        \n    number=str(number)\n    \n    sum=0\n    \n    for i in number:\n        \n        sum+=int(i)\n        \n    return sum\n", "def sum_digits(number):\n    if number < 0:\n        number *= -1\n    \n    if number < 10:\n        return number\n    else:\n        last_digit = number % 10\n        return sum_digits( number // 10 ) + last_digit", "def sum_digits(number):\n    sn = str(number)\n    rez=0\n    for i in sn:\n        if i.isnumeric():\n            rez+=int(i)\n    return rez", "def sum_digits(number):\n    naked = str(number).strip('-')\n    return sum(int(digit) for digit in naked)\n", "import numpy as np\ndef sum_digits(number):\n    number = int(np.sqrt(number**2))\n    return sum([int(d) for d in str(number)])", "def sum_digits(num):\n    sum = 0\n    for x in str(abs(num)):\n        sum += int(x)\n    return sum\n", "def sum_digits(number):\n    \n    number = abs(number)\n    \n    result = 0\n    while(number > 0):\n        result += number % 10\n        number //= 10\n        \n    return result;\n", "def sum_digits(number):\n    bruh = 0\n    for i in str(abs(number)):\n        bruh += int(i)\n    return bruh", "def sum_digits(number):\n    for i in str(number):\n        if i == '-':\n            number=str(number).strip('-')\n        else: pass\n        digits = [int(x) for x in str(number)]\n    return sum(digits)\n", "def sum_digits(number):\n    n = []\n    for i in str(number):\n        if i != '-':\n            n.append(int(i))\n    return sum(n)", "import math\n\ndef sum_digits(n):\n    n = round(math.fabs(n))\n    all = [int(s) for s in str(n)]\n    return sum(all)"]