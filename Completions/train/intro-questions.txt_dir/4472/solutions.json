["DEFAULT = 'unknown'\nCOLORS  = {'black'+'brown': 'dark brown',\n           'black'+'white': 'grey',\n           'brown'+'white': 'light brown'}\n\ndef bear_fur(bears):\n    b1,b2 = sorted(bears)\n    return b1 if b1==b2 else COLORS.get(b1+b2, DEFAULT)\n", "def bear_fur(bears):\n    return  {('black', 'black') : 'black',\n             ('black', 'white') : 'grey',\n             ('black', 'brown') : 'dark brown',\n             ('brown', 'brown') : 'brown',\n             ('brown', 'white') : 'light brown',\n             ('white', 'white') : 'white'\n            }.get(tuple(sorted(bears)), 'unknown')", "bin_to_colors = {1: \"black\", 2: \"brown\", 3:\"dark brown\", 4: \"white\", 5: \"grey\", 6: \"light brown\"}\ncolors_to_bin = {v: k for k, v in bin_to_colors.items()}\n\ndef bear_fur(bears):\n    return bin_to_colors.get(sum(colors_to_bin.get(k, 7) for k in set(bears)), \"unknown\")", "def bear_fur(bears):\n    combos = { ('black', 'brown'): 'dark brown',\n               ('black', 'white'): 'grey',\n               ('brown', 'white'): 'light brown' }\n\n    if bears[0] == bears[1]:\n        return bears[0]\n    else:\n        colors = tuple(sorted(bears))\n        if colors in combos:\n            return combos[colors]\n        else:\n            return 'unknown'\n", "def bear_fur(bears):\n    bears = \"\".join(bears)\n    dict = {\n        'blackblack' : 'black',\n        'brownbrown' : 'brown',\n        'whitewhite' : 'white',\n        'brownblack' : 'dark brown',\n        'blackbrown' : 'dark brown',\n        'blackwhite' : 'grey',\n        'whiteblack' : 'grey',\n        'brownwhite' : 'light brown',\n        'whitebrown' : 'light brown'\n    }\n    return dict.get(bears, 'unknown')", "def bear_fur(bears):\n    if bears[0] == bears[1]:\n        return bears[0]\n    if \"black\" in bears and \"white\" in bears:\n        return \"grey\"\n    if \"black\" in bears and \"brown\" in bears:\n        return \"dark brown\"\n    if \"white\" in bears and \"brown\" in bears:\n        return \"light brown\"\n    return \"unknown\"", "bear_fur = lambda bears, furs={('black', 'brown'): 'dark brown', ('black', 'white'): 'grey', ('brown', 'white'): 'light brown',('white', 'white'): 'white',('brown', 'brown'): 'brown',('black', 'black'): 'black',}: furs.get(tuple(sorted(bears)), 'unknown')", "def bear_fur(bears):\n    s = set(bears)\n    if s == {'black'}: return 'black'\n    if s == {'brown'}: return 'brown'\n    if s == {'white'}: return 'white'\n    if s == {'black', 'brown'}: return 'dark brown'\n    if s == {'black','white'}: return 'grey'\n    if s == {'brown','white'}: return 'light brown'\n    return 'unknown'", "def bear_fur(bears):\n    look={(\"black\",\"brown\"):\"dark brown\",(\"black\",\"white\"):\"grey\",(\"brown\",\"white\"):\"light brown\"}\n    b1,b2=bears\n    if b1==b2 and b1 in {\"black\",\"brown\",\"white\"}:return b1\n    return look.get(tuple(sorted([b1,b2])),\"unknown\")", "def bear_fur(bears):\n    for i in range(len(bears)-1):\n        if bears[i] =='black' and bears[i+1] =='black':\n            return 'black'\n        elif bears[i]=='white' and bears[i+1] == 'white':\n            return 'white'\n        elif bears[i]=='brown' and bears[i+1] == 'brown':\n            return 'brown'\n        elif bears[i] == 'black' and bears[i+1] == 'white':\n            return 'grey'\n        elif bears[i] == 'black' and bears[i+1] == 'brown':\n            return 'dark brown'\n        elif bears[i] == 'white' and bears[i+1] == 'black':\n            return 'grey'\n        elif bears[i] == 'white' and bears[i+1] == 'brown':\n            return 'light brown'\n        elif bears[i] == 'brown' and bears[i+1] == 'black':\n            return 'dark brown'\n        elif bears[i] == 'brown' and bears[i+1] == 'white':\n            return 'light brown'\n        else:\n            return 'unknown'\n        \n# first compare every combination where is only one color for bear\n# than check all situations where bear skin is different \n# and return the result\n        \n     \n"]