["from math import cos, sin, radians\n\ndef crusoe(n, d, ang, dist_mult, ang_mult):\n    x, y, a = 0, 0, radians(ang)\n    for i in range(n):\n        x += d * cos(a)\n        y += d * sin(a)\n        d *= dist_mult\n        a *= ang_mult\n    return x, y", "from math import sin,cos,pi\ndef crusoe(n, d, ang, dis_tmult, ang_mult):\n    x = 0\n    y = 0\n    for i in range(n):\n\n        x += d * cos((ang/180)*pi)\n        y += d * sin((ang/180)*pi)\n        d = d * dis_tmult\n        ang = ang * ang_mult\n    \n    return (x,y)\n", "from math import sin, cos, pi\n\ndef crusoe(n, d, ang, dist_mult, ang_mult):\n    x = y = z = 0.0\n    for i in range(n):\n        z = ang * pi / 180\n        x += d * cos(z)\n        y += d * sin(z)\n        d *= dist_mult\n        ang *= ang_mult\n    return x, y", "from numpy import sin, cos, pi\ndef crusoe(n, d, ang, dist_mult, ang_mult):\n    return (sum(d*dist_mult**i*cos(ang*ang_mult**i/180*pi) for i in range(n)), sum(d*dist_mult**i*sin(ang*ang_mult**i/180*pi) for i in range(n)))", "from math import cos, sin, pi\n\ndef crusoe(n, d, ang, dis_tmult, ang_mult):\n    # your code\n    lastx=0\n    lasty=0\n    for i in range(n):\n        lastx += d*cos((ang*ang_mult**i)*pi/180)*dis_tmult**i\n        lasty += d*sin((ang*ang_mult**i)*pi/180)*dis_tmult**i\n    return (lastx, lasty)", "def crusoe(n, d, ang, dis_tmult, ang_mult):\n    # your code\n    from math import sin,cos,pi\n    \n    x=0\n    y=0\n    for i in range(n):\n        x=x+(d*dis_tmult**i)*cos(ang*pi/180*ang_mult**i)\n        y=y+(d*dis_tmult**i)*sin(ang*pi/180*ang_mult**i)\n    return (x,y)", "from math import cos, sin, pi\ndef crusoe(n, d, ang, dist_mult, ang_mult):\n    def sim(center, scale, ang):\n        resx = center[0] + scale * cos(ang * pi / 180.0)\n        resy = center[1] + scale * sin(ang * pi / 180.0)\n        return resx, resy\n    center = (0.0, 0.0)\n    for i in range(1, n + 1):\n        center = sim(center, d, ang)\n        d *= dist_mult\n        ang *= ang_mult\n    return center", "from math import cos,sin,pi\ndef crusoe(n,d,ang,dist_mult,ang_mult):\n    x,y=0,0\n    for i in range(n):\n        x+=cos(ang*pi/180)*d\n        y+=sin(ang*pi/180)*d\n        ang*=ang_mult\n        d*=dist_mult\n    return [x,y]", "from math import cos, sin, radians as rad\n\ndef crusoe(n, d, a, dd, da):\n    x=y=0\n    for _ in range(n):\n        x += d * cos(rad(a))\n        y += d * sin(rad(a))\n        d, a = d*dd, a*da\n    return (x, y)", "from math import cos, sin, radians\n\ndef crusoe(n, d, ang, dist_mult, ang_mult):\n    x, y, theta, r = 0, 0, 1, 1\n    for i in range(n):\n        theta = ang*ang_mult**i\n        r = d*dist_mult**i\n        x += r*cos(radians(theta))\n        y += r*sin(radians(theta))\n\n    return (x,y)"]