["def get_animals_count(legs, heads, horns):\n    cows = horns // 2\n    rabbits = legs // 2 - cows - heads\n    chickens = heads - cows - rabbits\n    return dict(cows=cows, rabbits=rabbits, chickens=chickens)", "def get_animals_count(ln, hn, horn):\n    c,ln,hn = horn//2, ln - 2*horn, hn - horn//2\n    return {\"rabbits\":(ln-2*hn)//2,\"chickens\":2*hn -ln//2,\"cows\":c}", "def get_animals_count(legs, heads, horns):\n    cows = horns // 2\n    rabbits = (legs - 4 * cows) // 2 - (heads - cows)\n    chickens = heads - cows - rabbits\n    return {\"rabbits\": rabbits, \"chickens\": chickens, \"cows\": cows}", "def get_animals_count(legs_number, heads_number, horns_number):\n    cows = horns_number / 2\n    legs_number -= cows * 4\n    heads_number -= cows\n    rabbits = (legs_number - 2 * heads_number) / 2\n    chickens = heads_number - rabbits\n    return { 'rabbits': rabbits, 'chickens': chickens, 'cows': cows }", "def get_animals_count(legs, heads, horns):\n    cows = horns / 2\n    rabbits = legs / 2 - heads - cows\n    chickens = heads - rabbits - cows\n    return {\"rabbits\": rabbits, \"chickens\": chickens, \"cows\": cows}", "def get_animals_count(legs, heads, horns):\n    cows = horns // 2\n    legs = (legs - cows * 4) // 2\n    heads -= cows\n    rabbits = legs - heads\n    chickens = heads - rabbits\n    return {'cows': cows, 'rabbits': rabbits, 'chickens': chickens}", "import numpy as np\n\n# legs: 2x + 4y + 4z = n(legs)\n# heads: x + y + z = n(heads)\n# horns: 2z = n(horns)\n# where x, y, z: chickens, rabbits, cows\ncoefficients = np.array([[2, 4, 4], [1, 1, 1], [0, 0, 2]])\n\ndef get_animals_count(legs_number, heads_number, horns_number):\n    dependents = np.array([legs_number, heads_number, horns_number])\n    res = np.linalg.solve(coefficients, dependents)\n    return dict(zip([\"chickens\", \"rabbits\", \"cows\"], (int(i) for i in res)))", "def get_animals_count(l,he,ho):\n    return {\"rabbits\":l//2-he-ho//2,\"chickens\":2*he-l//2,\"cows\":ho//2}", "def get_animals_count(legs_number, heads_number, horns_number):\n    return {\n        'rabbits': (legs_number - 2 * heads_number - horns_number) // 2,\n        'chickens': (4 * heads_number - legs_number) // 2,\n        'cows': horns_number // 2\n    }\n", "def get_animals_count(legs_number, heads_number, horns_number):\n    cows=horns_number//2\n    legs_number-=cows*4\n    heads_number-=cows\n    rabbits=(legs_number-2*heads_number)//2\n    chickens=heads_number-rabbits\n    return {'rabbits':rabbits,'chickens':chickens,'cows':cows}"]