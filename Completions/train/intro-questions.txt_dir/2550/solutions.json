["class Solution:\n                \n    def lemonadeChange(self, bills: List[int]) -> bool:               \n        n5=0\n        n10=0            \n        for i in bills:\n            if i == 5:\n                n5 +=1\n            elif i == 10:\n                if n5<=0:\n                    return False\n                else:\n                    n5 -=1\n                    n10 +=1\n            else:\n                if n10>0 and n5 >0:\n                    n10 -=1\n                    n5 -=1\n                elif n5>=3:\n                    n5-=3\n                else:\n                    return False\n        else:\n            return True\n        \n#         five = ten = 0\n#         for i in bills:\n#             if i == 5: \n#                 five += 1\n#             elif i == 10: \n#                 five, ten = five - 1, ten + 1\n#             elif ten > 0: \n#                 five, ten = five - 1, ten - 1\n#             else: \n#                 five -= 3\n            \n#             if five < 0: return False\n#         return True\n            \n            \n        \n                \n", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        \n        five = ten = 0\n        for i in bills:\n            if i == 5: \n                five += 1\n            elif i == 10: \n                five, ten = five - 1, ten + 1\n            elif ten > 0: \n                five, ten = five - 1, ten - 1\n            else: \n                five -= 3\n            \n            if five < 0: return False\n        return True\n                \n            \n", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        bank  = {5:0, 10:0, 20:0}\n        \n        for bill in bills:\n            bank[bill] += 1\n            change = bill - 5\n            if change and not bank[5]:\n                return False\n            elif change == 15:\n                if bank[10]:\n                    bank[10] -=1\n                    bank[5] -= 1\n                elif bank[5] >= 3:\n                    bank[5] -= 3\n                else:\n                    return False\n            elif change == 5:\n                if bank[5]:\n                    bank[5] -= 1\n                else:\n                    return False\n        return True\n                \n                    \n                    \n                \n                    \n", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        \n        change = [0,0,0]   # 5, 10, 20\n        \n        def give(change, amount):\n            if amount == 0:\n                return True\n            \n            if amount >= 20 and change[2] > 0:\n                change[2] -= 1\n                return give(change, amount - 20)\n            elif amount >= 10 and change[1] > 0:\n                change[1] -= 1\n                return give(change, amount-10)\n            elif amount >= 5 and change[0] > 0:\n                change[0] -= 1\n                return give(change, amount-5)\n            else:\n                return False\n        \n        index = {5:0, 10:1, 20:2}\n        \n        for bill in bills:\n            \n            change[index[bill]] += 1\n            \n            giveBack = bill-5\n            \n            if give(change, giveBack) == False:\n                return False\n            \n        return True", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        bill = [0] * 3\n            \n        for b in bills:\n            if b == 20:\n                bill[2] += 1\n                if bill[1] > 0:\n                    bill[1] -= 1\n                    bill[0] -= 1\n                else:\n                    bill[0] -= 3\n            elif b == 10:\n                bill[1] += 1\n                bill[0] -= 1\n            else:\n                bill[0] += 1\n                \n            if sum(1 for i in bill if i < 0) > 0:\n                return False                \n        \n        return True", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        fives=0\n        tens=0\n        for i in range(len(bills)):\n            if bills[i]==5:\n                fives+=1\n            elif bills[i]==10:\n                tens+=1\n                if(fives>0):\n                    fives-=1\n                else:\n                    return False\n            else:\n                if (fives>0 and tens>0):\n                    tens-=1\n                    fives-=1\n                elif fives>=3:\n                    fives-=3\n                else:\n                    return False\n            print(fives,tens)\n        else:\n            return True", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        \n        cnt10Bill, cnt20Bill, cnt5Bill = 0, 0, 0\n        for b in bills:\n            if b == 5:\n                cnt5Bill += 1\n            elif b == 10:\n                cnt10Bill += 1\n                if cnt5Bill >= 1:\n                    cnt5Bill -= 1\n                else:\n                    return False\n                \n            elif b == 20:\n                cnt20Bill += 1\n                if cnt5Bill >= 1 and cnt10Bill >= 1:\n                    cnt5Bill -= 1\n                    cnt10Bill -= 1\n                elif cnt5Bill >= 3:\n                    cnt5Bill -= 3\n                else:\n                    return False\n            print((cnt5Bill, cnt10Bill, cnt20Bill))\n        return True\n    \n                \n                \n                \n", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        five, ten = 0, 0 \n    \n        for bill in bills:\n            if bill == 5:\n                five += 1\n            elif bill == 10:\n                five -= 1\n                ten += 1\n            # now last two cases handle if it is a 20\n            # if we have a ten give that and one five\n            elif ten > 0:\n                five -= 1\n                ten -= 1\n            # last option is to give 3 fives \n            else:       \n                five -= 3\n            # check if five is under zero then return false\n            if five < 0: \n                return False \n        return True\n", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        no_5=0\n        no_10=0\n        for i in bills:\n            if i==5:\n                no_5+=1\n            elif i==10:\n                no_10+=1\n                no_5-=1\n            else:\n                if no_10==0:\n                    no_5-=3\n                else:\n                    no_10-=1\n                    no_5-=1\n            if no_5<0 or no_10<0:\n                return False\n        return True", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        d = {5:0, 10:0, 20:0}\n        for a in bills:\n            if a == 5:\n                d[5]+=1\n                continue\n            if a == 10:\n                d[10]+=1\n                if d[5]==0:\n                    return False\n                else:\n                    d[5]-=1\n            else:\n                d[20]+=1\n                if not (d[10] and d[5]) and d[5]<3:\n                    return False\n                if d[10]:\n                    d[10]-=1\n                    d[5]-=1\n                else:\n                    d[5]-=3\n        return True\n", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        if len(bills) == 0:\n            return True\n        numfive = 0\n        numten = 0\n        for payment in bills:\n            if payment == 5:\n                numfive += 1\n            elif payment == 10:\n                if numfive >= 1:\n                    numfive -= 1\n                    numten += 1\n                else:\n                    return False\n            else:\n                if numten >= 1 and numfive >= 1: #GREEDY: if a customer pays with a 20 dollar bill, we want to provide the $15 change using as few bills as possible, i.e. we want to give them change using 1 10$ bill and 1 5$ bill instead of 3 5$ bills if possible. This is so we can have more 5$ bills on hand for later transactions (5$ bills are used as change for all transactions regardless of amount, whereas $10 bills should be saved as change for customers that pay $20)\n                    numten -= 1\n                    numfive -= 1\n                elif numfive >= 3:\n                    numfive -= 3\n                else:\n                    return False\n        return True\n                \n", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        from collections import deque\n        fives = deque()\n        tens = deque()\n        try:\n            for i in bills:\n                if i==5:\n                    fives.append(5)\n                elif i==10:\n                    tens.append(10)\n                    fives.pop()\n                else:\n                    if len(tens) !=0 and len(fives)!=0:\n                        tens.pop()\n                        fives.pop()\n                    else:\n                        fives.pop()\n                        fives.pop()\n                        fives.pop()\n        except IndexError:\n            return False\n        return True\n\n", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        fives = 0\n        tens = 0\n        twenties = 0\n        \n        \n        for i in bills:\n            print(f'fives {fives}')\n            print(f'tens {tens}')\n            print(f'twenties {twenties}')\n            if i == 5:\n                fives += 1\n            if i == 10:\n                tens += 1\n                if fives > 0:\n                    fives -= 1\n                else:\n                    return False                \n            if i == 20:\n                twenties += 1\n                if tens > 0 and fives > 0:\n                    tens -= 1\n                    fives -= 1\n                elif tens == 0 and fives > 2:\n                    fives -= 3\n                else:\n                    return False\n        return True\n\n                \n            \n\n                    \n        \n", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        fives = 0\n        tens = 0\n        tweens = 0\n        for bill in bills:\n            if bill > 10:\n                tweens+=1\n                if tens > 0 and fives > 0:\n                    tens-=1\n                    fives-=1\n                elif fives > 2:\n                    fives-=3\n                else:\n                    return False\n            elif bill == 10:\n                tens+=1\n                if fives > 0:\n                    fives-=1\n                else:\n                    return False\n            else:\n                fives+=1\n        return True\n", "class Solution:\n    stack = {\n        5: 0,\n        10: 0,\n        20: 0\n    }\n    \n    def change(self, value: int):\n        self.stack[value] += 1\n        res = True\n        \n        if value == 10:\n            if self.stack[5] > 0:\n                self.stack[5] -= 1\n            else:\n                res = False\n        \n        if value == 20:\n            if self.stack[10] > 0 and self.stack[5] > 0:\n                self.stack[10] -= 1\n                self.stack[5] -= 1\n            elif self.stack[5] > 2:\n                self.stack[5] -= 3\n            else:\n                res = False\n                \n#         print(self.stack)\n        return res\n        \n        \n    def lemonadeChange(self, bills: List[int]) -> bool:\n        self.stack = {\n            5: 0,\n            10: 0,\n            20: 0\n        }\n        \n        res = False\n        for b in bills:\n            res = self.change(b)\n            if not res:\n                break\n        return res", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        five = ten = 0\n        for num in bills:\n            if num == 5:\n                five += 1\n            elif num == 10 and five:\n                ten += 1\n                five -= 1\n            elif num == 20 and five and ten:\n                five -= 1\n                ten -= 1\n            elif num == 20 and five >= 3:\n                five -= 3\n            else:\n                return False\n        return True\n", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        five = ten = 0\n        for coin in bills:\n            if coin == 5:\n                five += 1\n            if coin == 10:\n                ten += 1\n                if five != 0:\n                    five -= 1\n                else:\n                    return False\n            if coin == 20:\n                if five == 0:\n                    return False\n                elif five < 3 and ten == 0:\n                    return False\n                elif ten >= 1 and five >= 1:\n                    ten -= 1\n                    five -= 1\n                elif five >= 3:\n                    five -= 3\n        return True", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        # num=[0,0]\n        # for i in bills:\n        #     if i ==5:\n        #         num[0]+=1\n        #     elif i==10 and num[0]>=1:\n        #         num[1]+=1\n        #         num[0]-=1\n        #     elif i==20:\n        #         if (num[0]>=1 and num[1]>=1):\n        #             num[1]-=1\n        #             num[0]-=1\n        #         elif num[0]>=3:\n        #             num[0]-=3\n        #         else:\n        #             return False\n        #     else:\n        #         return False\n        # return True\n    \n        five = ten = 0\n        for i in bills:\n            if i == 5: five += 1\n            elif i == 10: five, ten = five - 1, ten + 1\n            elif ten > 0: five, ten = five - 1, ten - 1\n            else: five -= 3\n            if five < 0: return False\n        return True", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        five = 0\n        ten = 0\n\n        for b in bills:\n            if b == 5:\n                five += 1\n                \n            if b == 10:\n                if five > 0:\n                    five -= 1\n                    ten += 1\n                else:\n                    return False\n            \n            if b == 20:\n                if ten > 0 and five > 0:\n                    ten -= 1\n                    five -= 1\n                elif ten == 0 and five >= 3:\n                    five -= 3\n                else:\n                    return False\n            \n        return True\n            \n                \n                \n", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        five = 0\n        ten = 0\n        for bill in bills:\n            if bill == 5:\n                five += 1\n            elif bill == 10:\n                if five == 0:\n                    return False\n                else:\n                    ten += 1\n                    five -= 1\n            elif bill == 20:\n                if ten > 0 and five > 0:\n                    ten -= 1\n                    five -= 1 \n                elif five > 2:\n                    five -= 3\n                else:\n                    return False\n        return True", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        cash = {5: 0, 10: 0, 20:0}\n    \n        for i in bills:\n            cash[i] += 1 \n            if i - 5 == 15: \n                if (cash[5] < 3) and (cash[10] < 1  or cash[5] < 1 ): \n                    print('false')\n                    return False\n                else: \n                    if cash[10] >= 1 and cash[5] >= 1 : \n                        cash[10] -= 1\n                        cash[5] -= 1\n                    elif cash[5] >= 3:\n                        cash[5] -= 3\n                \n            if i - 5 == 5:\n                if cash[5] < 1: \n                    print('false')\n                    return False \n                else:\n                    cash[5] -= 1 \n        return True \n            \n             \n", "class Solution:\n                \n    def lemonadeChange(self, bills: List[int]) -> bool:               \n#         n5 = 0\n#         n10 = 0\n#         while True:                        \n#             ind10 = bills.index(10) if 10 in bills else 10000\n#             ind20 = bills.index(20) if 20 in bills else 10000            \n            \n#             ind = min(ind10, ind20)                        \n#             if ind ==10000:\n#                 return True\n            \n#             bill_type =bills[ind]\n#             n5 += bills[:ind].count(5)    \n            \n#             if bill_type==10:                      \n#                 if n5==0:\n#                     return False\n#                 n10+=1  \n#                 n5 -=1                \n#             elif bill_type ==20:                \n#                 if n5<3 and n5>0 and n10>0:\n#                     n10 -= 1; n5 -=1\n#                 elif n5 >=3:\n#                     n5 -= 3                                                        \n#                 else:\n#                     return False\n                            \n#             bills = bills[ind+1:] \n#             # print(bills)\n            \n#         else:\n#             return True\n\n        n5=0\n        n10=0            \n        for i in bills:\n            if i == 5:\n                n5 +=1\n            elif i == 10:\n                if n5<=0:\n                    return False\n                else:\n                    n5 -=1\n                    n10 +=1\n            else:\n                if n10>0 and n5 >0:\n                    n10 -=1\n                    n5 -=1\n                elif n5>=3:\n                    n5-=3\n                else:\n                    return False\n        else:\n            return True\n            \n            \n            \n            \n            \n        \n             \n            \n                \n\n#         def deter(part_bill):\n#             n5 = part_bill.count(5)\n#             n10 = part_bill.count(10)\n#             n20 = part_bill.count(20)\n\n#             if (n5 >= n10) and ( (15*n20 <= (5*(n5-n10) + 10*n10)) and (n5-n10)>=n20 ):\n#                 result = True\n#             else:\n#                 result = False\n                \n#             rest5 = n5-n10\n#             rest10 = \n            \n#             return result, n5-n10, n\n\n        \n        \n        \n        \n        \n        \n#         for i in bills:\n            \n#             if i == 5:\n#                 changes.append(5)\n                \n#             elif i == 10:\n#                 if 5 in changes:\n#                     changes.remove(5)\n#                     changes.append(10)\n#                 else:\n#                     return False\n            \n#             else:\n#                 if 5 in changes and 10 in changes:\n#                     changes.remove(5)\n#                     changes.remove(10)\n#                 elif changes.count(5) >=3:\n#                     changes.remove(5)\n#                     changes.remove(5)\n#                     changes.remove(5)                    \n#                 else:\n#                     return False\n                \n#         return True\n\n        \n        \n                \n", "class Solution(object): #aw\n    def lemonadeChange(self, bills):\n        five = ten = 0\n        for bill in bills:\n            if bill == 5:\n                five += 1\n            elif bill == 10:\n                if not five: return False\n                five -= 1\n                ten += 1\n            else:\n                if ten and five:\n                    ten -= 1\n                    five -= 1\n                elif five >= 3:\n                    five -= 3\n                else:\n                    return False\n        return True", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        count_5 = 0\n        count_10 = 0\n        for bill in bills:\n            if bill == 5:\n                count_5 += 1\n            elif bill == 10:\n                if count_5 < 1:\n                    return False\n                else:\n                    count_5 -= 1\n                    count_10 += 1\n            else:\n                if count_10 >= 1 and count_5 >= 1:\n                    count_10 -= 1\n                    count_5 -= 1\n                elif count_5 >= 3:\n                    count_5 -= 3\n                else:\n                    return False\n        \n        return True\n                \n", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        five, ten = 0, 0\n        for bill in bills:\n            if bill == 5:\n                five += 1\n            elif bill == 10:\n                ten += 1\n                five -= 1\n            elif ten > 0:\n                five -= 1\n                ten -= 1\n            else:\n                five -= 3\n            if five < 0:\n                return False\n        return True", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        table = dict.fromkeys([5,10,20],0)\n        for p in bills:\n            table[p] = table.get(p)+1\n            key = p-5\n            if key!=0:\n                if key==5:\n                    value = table.get(5)\n                    if value>0:\n                        table[5] = value-1\n                    else:\n                        return False\n                elif key==15:\n                    value10 = table.get(10)\n                    value5 = table.get(5)\n                    if value10>0 and value5>0:\n                        table[10] = value10-1\n                        table[5]=value5-1\n                    elif value5>3:\n                        table[5]=value5-3\n                    else:\n                        return False\n        return True\n                    \n", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        cash = {20: 0,\n                10: 0,\n                 5: 0}\n        for paid in bills:\n            refund = paid - 5\n            if refund == 0:\n                cash[5] += 1\n                continue\n            flag = False\n            for note in cash:\n                if cash[note]>= refund//note:\n                    cash[note] -= refund // note\n                    refund -= (refund// note) *note\n                    flag = True\n            if not flag or refund>0:\n                return False\n            cash[paid] += 1\n        return True\n", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        # num=[0,0]\n        # for i in bills:\n        #     if i ==5:\n        #         num[0]+=1\n        #     elif i==10 and num[0]>=1:\n        #         num[1]+=1\n        #         num[0]-=1\n        #     elif i==20:\n        #         if (num[0]>=1 and num[1]>=1):\n        #             num[1]-=1\n        #             num[0]-=1\n        #         elif num[0]>=3:\n        #             num[0]-=3\n        #         else:\n        #             return False\n        #     else:\n        #         return False\n        # return True\n    \n        five = ten = 0\n        for bill in bills:\n            if bill == 5:\n                five += 1\n            elif bill == 10:\n                if not five: return False\n                five -= 1\n                ten += 1\n            else:\n                if ten and five:\n                    ten -= 1\n                    five -= 1\n                elif five >= 3:\n                    five -= 3\n                else:\n                    return False\n        return True", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        change_5 = 0\n        change_10 = 0\n        for b in bills:\n            if b == 5:\n                change_5+=1\n            if b==10:\n                if change_5>0:\n                    change_5-=1\n                    change_10+=1\n                else:\n                    return False\n            if b==20:\n                if change_10>0 and change_5>0:\n                    change_5-=1\n                    change_10-=1\n                elif change_5>2:\n                    change_5-=3\n                else:\n                    return False\n        return True\n", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        num=[0,0]\n        for i in bills:\n            if i ==5:\n                num[0]+=1\n            elif i==10 and num[0]>=1:\n                num[1]+=1\n                num[0]-=1\n            elif i==20:\n                if (num[0]>=1 and num[1]>=1):\n                    num[1]-=1\n                    num[0]-=1\n                elif num[0]>=3:\n                    num[0]-=3\n                else:\n                    return False\n            else:\n                return False\n        return True", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        fives = tens = 0\n        \n        for bill in bills:\n            if bill == 5:\n                fives += 1\n            if bill == 10:\n                if fives < 1:\n                    return False\n                tens += 1\n                fives -= 1\n            if bill == 20:\n                if (tens < 1 and fives < 3) or (fives < 1):\n                    return False\n                elif (tens < 1):\n                    fives -= 3\n                else:\n                    tens -= 1\n                    fives -= 1\n        \n        return True", "class Solution:\n                \n    def lemonadeChange(self, bills: List[int]) -> bool:               \n        # n5=0\n        # n10=0            \n        # for i in bills:\n        #     if i == 5:\n        #         n5 +=1\n        #     elif i == 10:\n        #         if n5<=0:\n        #             return False\n        #         else:\n        #             n5 -=1\n        #             n10 +=1\n        #     else:\n        #         if n10>0 and n5 >0:\n        #             n10 -=1\n        #             n5 -=1\n        #         elif n5>=3:\n        #             n5-=3\n        #         else:\n        #             return False\n        # else:\n        #     return True\n        \n        five = ten = 0\n        for i in bills:\n            if i == 5: \n                five += 1\n            elif i == 10: \n                five, ten = five - 1, ten + 1\n            elif ten > 0: \n                five, ten = five - 1, ten - 1\n            else: \n                five -= 3\n            \n            if five < 0: return False\n        return True\n            \n            \n        \n                \n", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        n5, n10 = 0, 0\n        for i in bills:\n            if i == 5: \n                n5 += 1\n            elif i == 10: \n                n10 += 1; \n                n5 -= 1\n            elif n10 > 0: \n                n10 -= 1; \n                n5 -= 1\n            else: \n                n5 -= 3\n            if n5 < 0: \n                return False\n        return True\n", "class Solution:\n    def lemonadeChange(self, arr: List[int]) -> bool:\n        five=0\n        ten=0\n        twen=0\n        for i in arr:\n            if i==5:\n                five+=1\n            elif i==10:\n                if five>0:\n                    five-=1\n                    ten+=1\n                else:\n                    return False\n            else:\n                s=min(five,ten)\n                if s>0:\n                    five-=1\n                    ten-=1\n                elif five>2:\n                    five-=3\n                else:\n                    return False\n        return True\n", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        amount = [0 for i in range(2)]\n        for bill in bills:\n            if bill == 5:\n                amount[0] += 1\n            elif bill == 10:\n                if amount[0] == 0:\n                    return False\n                else:\n                    amount[1] += 1\n                    amount[0] -= 1\n            elif bill == 20:\n                if amount[1] > 0 and amount[0] > 0:\n                    amount[1] -= 1\n                    amount[0] -= 1 \n                elif amount[0]>2:\n                    amount[0] -= 3\n                else:\n                    return False\n        return True", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        dic={5:0,10:0,20:0}\n        for i in bills:\n            if i==5:\n                dic[5]+=1\n            if i==10:\n                if dic[5]<1:\n                    return False\n                dic[10]+=1\n                dic[5]-=1\n            if i==20:\n                dic[20]+=1        \n                if dic[10]>=1 and dic[5]>=1:\n                    dic[5]-=1\n                    dic[10]-=1\n                elif dic[10]<1 and dic[5]>=3:\n                    dic[5]-=3\n                else:\n                    return False\n            print((i,dic))\n        return True\n            \n            \n", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        pocket = {5:0, 10:0, 20:0}\n        for x in bills:\n            if x == 5:\n                pocket[x] += 1\n            else:\n                back = x - 5\n                for k in [10, 5]:\n                    if back > 0 and pocket[k] > 0:\n                        deduct = min(pocket[k] , (back // k))\n                        back -= k * deduct\n                        pocket[k] -= deduct        \n                pocket[x] += 1\n                if back > 0:\n                    return False\n            \n        return True\n \n", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        counter, counter1, counter2, i = 0,0,0,0\n        wallet = {\n            5 : 0,\n            10 : 0,\n            20 : 0\n        }\n        while i < len(bills):\n            if bills[i] == 5:\n                counter += 1\n                wallet[5] = counter\n            elif bills[i] == 10:\n                counter -= 1\n                wallet[5] = counter\n                counter1 += 1\n                wallet[10] = counter1\n                if counter < 0:\n                    return False\n                \n            elif bills[i] == 20:\n                if counter >= 1 and counter1 >= 1 :\n                    counter -= 1\n                    wallet[5] = counter\n                    counter1 -= 1\n                    wallet[10] = counter1\n                    counter2 += 1\n                    wallet[20] = counter2\n                elif counter >= 3:\n                    counter -= 3\n                    wallet[5] = counter\n                    counter2 += 1\n                    wallet[20] = counter2\n                else:\n                    return False\n            if counter < 0 or counter1 < 0:\n                return False\n            i += 1\n        return True\n            \n        \n", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        \n        register = {}\n        \n        for bill in bills:\n            if bill == 5:\n                register[5] = register.get(5,0)+1\n            elif bill == 10:\n                if 5 in register and register[5]>=1:\n                    register[5]-=1\n                    register[10] = register.get(10,0)+1\n                else:\n                    return False\n            elif bill == 20:\n                if 5 in register and 10 in register and register[10]>=1 and register[5]>=1:\n                    register[5]-=1\n                    register[10]-=1\n                    register[20] = register.get(20,0)+1\n                elif 5 in register and register[5]>=3:\n                    register[5]-=3\n                    register[20] = register.get(20,0)+1\n                else:\n                    return False\n        return True", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        five = 0\n        ten = 0\n        twenty = 0\n        for coin in bills:\n            if coin == 5:\n                five += 1\n            if coin == 10:\n                ten += 1\n                if five != 0:\n                    five -= 1\n                else:\n                    return False\n            if coin == 20:\n                twenty += 1\n                if five == 0:\n                    return False\n                elif five < 3 and ten == 0:\n                    return False\n                elif ten >= 1 and five >= 1:\n                    ten -= 1\n                    five -= 1\n                elif five >= 3:\n                    five -= 3\n        return True", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        _5 = 0\n        _10 = 0\n        for eachBill in bills:\n            if eachBill == 5:\n                _5+=1\n            elif eachBill == 10:\n                if _5>=1:\n                    _5-=1\n                else:\n                    return False\n                _10+=1\n            elif eachBill == 20:\n                if _10>=1 and _5>=1:\n                    _10-=1\n                    _5-=1\n                elif _5>=3:\n                    _5-=3\n                else:\n                    return False\n            print(_5,_10,eachBill)\n        return True", "class Solution:\n                \n    def lemonadeChange(self, bills: List[int]) -> bool:               \n        n5=0\n        n10=0            \n        for i in bills:\n            if i == 5:\n                n5 +=1\n            elif i == 10:\n                if n5<=0:\n                    return False\n                else:\n                    n5 -=1\n                    n10 +=1\n            else:\n                if n10>0 and n5 >0:\n                    n10 -=1\n                    n5 -=1\n                elif n5>=3:\n                    n5-=3\n                else:\n                    return False\n        else:\n            return True\n            \n            \n            \n        \n                \n", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        coins = {5: 0, 10: 0, 20:0}\n\n        for x in bills:\n            if x == 20:\n                if (coins[10]):\n                    coins[10] -= 1\n                    coins[5] -= 1\n                else:\n                    coins[5] -= 3\n\n                if coins[10] < 0 or coins[5] < 0:\n                    return False\n            elif x == 10:\n                coins[5] -= 1\n\n                if coins[5] < 0:\n                    return False\n\n            coins[x] += 1\n        return True\n", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        five = ten = 0\n        for i in range(len(bills)):\n            if bills[i]== 5:\n                five += 1\n            elif bills[i] == 10:\n                if five >=1:\n                    ten += 1\n                    five -= 1\n                else:\n                    return False\n            else:\n                if ten>=1 and five >=1:\n                    ten -=1\n                    five -=1\n                elif five >=3:\n                    five -=3\n                else:\n                    return False\n        return True\n       \n                \n                \n           \n", "class Solution:\n    def lemonadeChange(self, A: List[int]) -> bool:\n        \n        \n        if A[0]!=5:\n            return False\n        if len(A)==0:\n            return True\n        \n        dk={5:0,10:0,20:0}\n        \n        for i in range(len(A)):\n            if A[i] in dk:\n                dk[A[i]]+=1\n            else:\n                dk[A[i]]=1\n            \n            if A[i]==10:\n                if dk[5]<1:\n                    return False\n                else:\n                    dk[5]-=1\n            if A[i]==20:\n                if dk[5]>=1 and dk[10]>=1:\n                    dk[5]-=1 \n                    dk[10]-=1\n                    continue\n                elif dk[5]>=3:\n                    dk[5]-=3\n                else:\n                    return False\n        return True\n                \n", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        in_hand = {5: 0, 10: 0, 20: 0}\n        for amount in bills:\n            to_return = amount - 5\n            if to_return == 15:\n                if in_hand[5] and in_hand[10]:\n                    in_hand[5] -= 1\n                    in_hand[10] -= 1\n                elif in_hand[5] >= 3:\n                    in_hand[5] -= 3\n                else:\n                    return False\n            elif to_return == 10:\n                if in_hand[10]:\n                    in_hand[10] -= 1\n                elif in_hand[5] >= 2:\n                    in_hand[5] -= 2\n                else:\n                    return False\n            elif to_return == 5:\n                if in_hand[5]:\n                    in_hand[5] -= 1\n                else:\n                    return False\n            in_hand[amount] += 1\n        return True", "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        bill_dict = {5:0,10:0,20:0}\n        for i in range(len(bills)):\n            if bills[i] == 20:\n                if bill_dict[10] == 0:\n                    bill_dict[20] += 1\n                    bill_dict[5] -= 3\n                else:   \n                    bill_dict[20] += 1\n                    bill_dict[10] -= 1\n                    bill_dict[5] -= 1\n            elif bills[i] == 10:\n                bill_dict[10] += 1\n                bill_dict[5] -= 1\n            else:\n                bill_dict[5] += 1\n            if bill_dict[5] < 0 or bill_dict[10] < 0 or bill_dict[20] < 0:\n                return False\n        return True\n                \n"]