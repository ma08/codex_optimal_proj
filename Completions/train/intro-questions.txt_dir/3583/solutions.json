["def binary_array_to_number(arr):\n  return int(\"\".join(map(str, arr)), 2)", "def binary_array_to_number(arr):\n    return int(''.join(str(a) for a in arr), 2)", "def binary_array_to_number(arr):\n    s = 0\n    for digit in arr:\n        s = s * 2 + digit\n\n    return s", "def binary_array_to_number(arr):\n    return sum(digit * 2**i for i, digit in enumerate(reversed(arr)))", "def binary_array_to_number(arr):\n  return sum( 2**i for i, n in enumerate( arr[ ::-1 ] ) if n )", "from functools import reduce\ndef binary_array_to_number(arr):\n    append_bit = lambda n, b: n << 1 | b\n    return reduce(append_bit, arr)\n", "def binary_array_to_number(arr):\n  no_of_elements = len(arr)\n  k = no_of_elements \n  sum = 0\n  while k != 0:\n      sum = sum + arr[no_of_elements-k]*(2**(k-1))\n      k = k - 1\n  return sum", "def binary_array_to_number(arr):\n    if type(arr) is list and len(arr)>0:\n      return int(''.join(str(e) for e in arr), 2)\n    return -1", "def binary_array_to_number(arr):\n    return int(bytearray(\"\".join(str(a) for a in arr), encoding=\"utf-8\"), base=2)", "binary_array_to_number=lambda arr: int(\"\".join(map(str,arr)),2)", "from functools import reduce\n\ndef binary_array_to_number(a):\n    return reduce(lambda t,b:t*2+b,a)", "def binary_array_to_number(arr):\n    \n    return sum(item*(2**index) for index,item in enumerate(reversed(arr)))\n", "def binary_array_to_number(arr):\n  # your code\n  binary = \"\".join([str(n) for n in arr])\n  return int(binary, 2)", "def binary_array_to_number(arr):\n  # your code\n  res = 0\n  arr.reverse()\n  for index in range(len(arr)):\n      res += arr[index]*pow(2,index)\n  return res", "def binary_array_to_number(arr):\n  # your code\n  res = 0\n  li = [x for x in reversed(arr)]\n  print(li)\n  for i in range(len(li)):\n      if li[i] == 1:\n          res = res + 2**i\n  return res", "import re\ndef binary_array_to_number(arr):\n    binaryString = ''.join(re.findall(r'\\d',str(arr)))\n    return int(binaryString, 2)", "def binary_array_to_number(arr):\n    strng = ' '\n    for nr in arr:\n        strng = strng + str(nr)\n    return  (int(strng,2))\n", "def binary_array_to_number(arr, acc = 0):\n    if len(arr) == 0:\n        return acc\n    acc = (acc << 1) | arr.pop(0)\n    return binary_array_to_number(arr, acc)", "def binary_array_to_number(arr):\n  return sum(value*(2**index) for index, value in enumerate(arr[::-1]))", "def binary_array_to_number(arr):\n  return int(''.join(str(i) for i in arr),2)", "def binary_array_to_number(arr):\n  sum = 0\n  for i in range(0, len(arr)):\n      sum += arr[i] * 2**(len(arr)-1-i)\n  return sum", "def binary_array_to_number(arr):\n    return int(''.join(str(x) for x in arr),2)", "binary_array_to_number = lambda a : int(''.join(map(str,a)),2)", "def binary_array_to_number(arr):\n    binary = ''.join(map(str, arr))\n    ans = 0\n    for i in range(len(binary)):\n        ans += int(binary[i]) * (2 ** (len(binary) - i - 1))\n    return ans", "def binary_array_to_number(arr):\n    total = 0\n    \n    for n in range(len(arr)):\n        if arr[n] == 1:\n            total += pow(2,len(arr)-1-n)\n    return total\n", "def binary_array_to_number(arr):\n    arr = arr[::-1]\n    sumador = 0\n    for i in range(len(arr)):\n        if arr[i] == 1:\n            sumador += 2**i\n        else:\n            continue\n\n        \n    return sumador ", "def binary_array_to_number(arr):\n  a = len(arr)\n  n = 0\n  for i in range(len(arr)):\n      a-=1\n      if arr[i] == 1:\n          n += 2**a\n  return n\n      \n", "def binary_array_to_number(arr):\n    decimal = 0\n    p = 0\n    \n    for x in reversed(arr):\n        decimal += x * 2 ** p\n        p+=1\n    return decimal\n", "def binary_array_to_number(arr):\n    arr = (\"\".join([str(x) for x in arr]))\n    return int(arr, 2)\n", "def binary_array_to_number(arr):\n  binarr = \"\"\n  for i in arr:\n        binarr = binarr + str(i)\n  return int(binarr, 2)"]