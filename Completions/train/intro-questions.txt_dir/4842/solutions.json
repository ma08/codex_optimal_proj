["from random import random\ndef mutate(chromosome, p):\n    res = ''\n    for s in chromosome:\n        res += str(1 - int(s)) if random() < p else s\n    return res\n", "from random import random\n\n\ndef mutate(chromosome, p):\n    return ''.join((a, '01'[a == '0'])[random() <= p] for a in chromosome)\n", "from random import random\ndef mutate(ch, p):\n    return ''.join([str(1-int(i)) if random()<=p else i for i in ch])", "from random import random\n\ndef mutate(chromosome, p):\n    \n    mutation = lambda x: '1' if x == '0' else '0'\n    return ''.join([mutation(c) if random() < p else c for c in chromosome])", "from random import *\n\ndef mutate(chromosome, p):\n    def mutate(gene): return '1' if gene=='0' else '0'\n    return \"\".join([(mutate(x) if random() <= p else x) for x in chromosome])\n", "from random import random\n\ndef mutate(chromosome, p):\n    return ''.join(\"01\"[c=='0'] if random() <= p else c for c in chromosome)", "import random\ndef mutate(chromosome, p):\n    return ''.join(d if random.random() >= p else str(int(not int(d))) for d in chromosome)", "import random\ndef mutate(chromosome, p):\n    return ''.join([x if random.random() > p else '10'[int(x)] for x in chromosome])", "import random\nimport string\n\ntbl = string.maketrans('01', '10')\n\n\ndef mutate(chromosome, p):\n    return ''.join(\n        c.translate(tbl) if random.random() <= p else c\n        for c in chromosome\n    )", "from random import random\ndef mutate(chromosome, p):\n    opp = {'0':'1','1':'0'}\n    return ''.join(opp[x] if random() < p else x for x in chromosome)"]