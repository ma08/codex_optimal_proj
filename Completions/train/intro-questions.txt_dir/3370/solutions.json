["def without_last(lst):\n    return lst[:-1]", "def without_last(lst):\n    lst_copy = list(lst) # creates a shallow copy\n    lst_copy.pop()\n    return lst_copy\n\n# There are several other ways to solve this\n# like returning lst[:-1] directly or creating a new list iteratively with all the elements of lst minus the last one \n", "def without_last(lst):\n    l = lst[:]\n    l.pop()\n    return l", "def without_last(lst):\n    if len(lst)<1:\n        return lst\n    return lst[:-1]", "from operator import itemgetter\n\nwithout_last = itemgetter(slice(0, -1))", "def without_last(lst):\n    new=lst[:]\n    new.pop()\n    return new", "def without_last(lst):\n    \n    x = lst[:-1]\n    \n    return x", "def without_last(lst):\n    # Fix it\n    x = lst[0:-1]\n    return x", "def without_last(lst):\n#     # Fix it\n#     lst.pop() # removes the last element\n#     return lst\n    return lst[:-1]", "def without_last(lst):\n    print(lst)\n    #print(lst.pop()) # removes the last element\n    return lst[0:len(lst)-1]"]