["def summation(num):\n    return sum(range(num + 1))\n    \n", "def summation(num):\n    return (1+num) * num / 2", "def summation(num):\n    return sum(range(1,num+1))\n    \n", "def summation(num):\n    return sum(range(num + 1))\n    \n", "def summation(num):\n    total = 0\n    for i in range(0, num+1):\n        total = total + i\n    return total\n    \n", "def summation(num):\n    return num*(num+1)//2", "def summation(num):\n    return num*(num+1) / 2", "def summation(num):\n    if num > 1:\n       return num + summation(num - 1)\n    return 1", "summation=lambda n:n*-~n>>1", "def summation(num):\n    fac = 0 \n    i = 0 \n    while i < num:\n        i += 1\n        fac = fac + i\n    return fac", "summation = lambda x: sum(range(1, x + 1))", "def summation(num):\n    somme=0\n    for i in range(num):\n        somme+=i+1\n    return somme\n    pass # Code here", "def summation(num):\n    sum = 0\n    for x in range(1,num+1):\n        sum = sum + x\n    return sum\n    \n", "def summation(num):\n    return sum([x for x in range(num+1)])\n    \n", "def summation(num):\n    ans = 0\n    for x in range(1, num):\n        ans += x\n    return ans + num", "\ndef summation(num):\n    answer = 0\n    for x in range(num):\n        answer = answer + num\n        num = num - 1    \n    return answer\n             \n", "def summation(num):\n    L=[]\n    for i in range(0,num+1):\n        L.append(i)\n    return sum(L)", "def summation(num):\n    return sum([n+1 for n in range(num)])\n", "#usr/bin/python\n\ndef summation(num):\n    result = 0\n    for i in range(1, num + 1):\n        result += i\n    return result\n    \n", "def summation(num):\n    for i in range(0,num):\n        num += i\n    return num\n    \n", "# https://en.wikipedia.org/wiki/Arithmetic_progression\n\ndef summation(num):\n    return (num + 1)*num / 2\n    \n", "def summation(num):\n    if num ==1:\n        return 1\n    return sum([num,summation(num-1)])\n        \n    \n    \n", "summation = lambda n: n*(n+1)/2\n", "summation  = lambda num: sum([i for i in range(num)], num)#Lambda is fun", "def summation(n):\n  f = 0\n  for i in range(1, n+1):\n    f += i\n  return f\n    \n", "summation = lambda s: sum(range(s+1))", "def summation(num):\n    if num == 1:\n        return 1\n    return summation(num-1) + num", "def summation(num):\n    return sum(range(1, num + 1))\n", "def summation(num):\n    ret = 0\n    for _ in range(0, num+1):\n        ret += _\n    return ret", "def summation(num):\n    \n    num_sum = 0\n\n    for i in range(num+1):\n        num_sum += i\n    \n    return num_sum\n", "def summation(num):\n     # Code here\n    a=0\n    for i in range(num):\n        a=a+i+1   \n    return a\n    \n\n", "def summation(num):\n    a = 1\n    i = 2\n    while i <= num:\n        a = i + a\n        i += 1\n    return a\n    \n", "def summation(num):\n    i = 0\n    while num > 0:\n        i = num + i\n        num =num - 1\n    return i\n", "def summation(num):\n    tmp=0\n    for j in range(0,num+1):\n        tmp=j+tmp\n    return(tmp)    \n", "def summation(num):\n    sum = 0\n    while num > 0:\n        sum += num\n        num -=1\n    return sum\n\n#sum(i for i in a)\n\n", "def summation(num):\n    pass # Code here\n    suma = 0\n    for i in range(0,num+1):\n        suma += i\n    return suma\n    \n", "def summation(num):\n    x = list(range(1,num +1))\n    sum = 0\n    for i in x:\n        sum += i\n    return sum\n    pass # Code here\n    \n", "def summation(num):\n    if num<1:\n        print(\"El n\u00famero debe ser mayor a 0\")\n    else:\n        cont=0\n        total=0\n        while cont<=num:\n            total=total+cont\n            cont=cont+1\n            \n        \n        return total\n        \n        \n    \n", "# def summation(num):\n#     suma = 0\n#     if num == 1:\n#         return 1\n#     else:\n#         for x in (1, num+1):\n#             suma = suma + summation(x)\n#     return suma\n    \n    \ndef summation(num):\n    return sum(range(num+1))\n", "def summation(num):\n    sum = 0\n    x = 1\n    while x <=num : \n        sum = sum + x \n        x = x + 1\n    return sum\n    \n", "def summation(num):\n    return sum([i for i in range(num+1)])\n            \n        # Code here\n    \n", "def summation(num):\n    sumResult = 0\n    while num > 0:\n        sumResult = sumResult + num\n        num-=1\n    return sumResult\n", "def summation(num):\n    num1 = 1\n    sum = 0\n    while num1 <= num:\n        sum += num1\n        num1 += 1\n    return sum\n    \n", "def summation(num):\n    sum = 0\n    x = list(range(num+1))\n    \n    for n in x:\n        sum = sum +n\n    return sum\n", "def summation(num):\n    \n    sum=0\n    \n    \n    for i in range(1,num + 1):\n        \n        sum = sum + i\n        \n        pass\n    \n    \n    return sum\n    \n", "def summation(num):\n    to_return = 0\n    n = 0\n    while n != num:\n        n += 1\n        to_return += n\n    return(to_return)", "def summation(num):\n    x = i = 0\n    while i <= num:\n        x = x + i\n        i = i + 1\n    return x\n    \n", "def summation(num):\n    nombre = num\n    sum_interm = 0\n    while nombre>0:\n        sum_interm = sum_interm + nombre\n        nombre -= 1\n    return sum_interm\n        \n        \n    \n", "def summation(num):\n     if num==1:\n        return 1\n     else:\n        return num + summation(num - 1 )# Code here\n    \nprint(summation(6))", "def summation(num):\n    newNum = 0\n    for x in range(num + 1):\n        newNum += x\n    return newNum\n    \n", "def summation(num):\n    a = 1\n    num = num + 1\n    for x in range(1, num): \n        if x < num: a = a + x\n    return a - 1", "def summation(num):\n    \n    total = 1\n    \n    while num != 1:\n        total = total + num\n        num -= 1\n        \n    return total", "def summation(num):\n    a = 1\n    for i in range(1, num):\n        i = i+1\n        a = a + i\n    return(a)\n    \n", "def summation(num):\n    n = list(range(num+1))\n    tot = sum(n)\n    return tot\n    \n    \n", "def summation(num):\n    accum = 0\n    for n in range(1, num+1):\n        accum += n\n    return accum\n", "def summation(n):\n    return(sum(list(range(1, n+1))))\n\n#def summation(n):\n#    return(sum([i for i in range(1, n+1)]))\n", "def summation(num):\n    a = 0\n    for i in range(num):\n        a = i + a\n    return a + num\n\n", "def summation(num):\n    pass # Code here\n    startvalue = 0\n    for i in range(0, num + 1):\n        startvalue += i\n    outvalue = startvalue\n    return outvalue\n", "def summation(num):\n    return(sum((list(range(0,num+1))))) #range in python 3 is iterator, so needs turning into a list. In P2 it is already a list!\n                                        #create range>turn into list>sum it >return it\n    \n", "def summation(num):\n    summation = (1+num)*num / 2\n    return summation\n", "def summation(num):\n    x = 0\n    for i in range (0, num):\n        x = x + num\n        num = num - 1\n    return(x)\n    \n", "def summation(num):\n    \n    count = 0\n    \n    x = list(range(num))\n    \n    for n in x:\n        if num > 0:\n            count = count + num\n            num = num - 1\n            \n    return (count)\n        \n    \n", "def summation(num):\n    endnumber = 0\n    i = 0\n    while num >i:\n        i +=1\n        endnumber +=i\n    return endnumber\n", "def summation(num):\n    total = 0\n    for n in range(0, num + 1, 1):\n        total += n\n    return total\n    \n", "def summation(num):\n     # Code here\n    suma = 0\n    for i in range(1,num+1):\n        suma = suma + i\n    return suma\n    \n", "def summation(num):\n    return sum(list(range(num + 1)), 0)\n    \n", "def summation(num):\n    result = 0\n    for k in range(1,num+1):\n        result += k\n    return result\n    \n", "def summation(num):\n    counter = 0\n    for n in range(1,num+1):\n        counter += n\n    return counter\n    \n", "def summation(num):\n    pass \n    i = 0\n    rslt = 0\n    while i <= num:\n        rslt = rslt + i\n        i = i + 1\n    return rslt\n    \n", "def summation(num):\n    sum = 0;\n    count = 0\n    for loop in range(num):\n        sum += num - count\n        count += 1\n        \n    return sum\n    \n", "def summation(num) -> int:\n    return sum(range(1,num + 1))\n    \n", "def summation(num):\n    # Code here\n    result = 0\n    for number in range(num+1):\n        result += number\n    return result\n        \n    \n", "def summation (num):\n  x=num\n  if num > 0:\n    while x > 0:\n      num+=x-1\n      x-=1\n    return num;\n  else:\n    return print (\"error\");\n\n\nsummation (0)\n\n    \n", "def summation(num):\n    \n    summa = 0\n\n    for i in range (1, num+1):\n        \n       summa += i\n    \n    return summa\n\nsummation(1)\nsummation(8)\nsummation(22)\nsummation(100)\nsummation(213)", "def summation(num):\n    sum = 1\n    i = 2\n    while(i < num + 1):\n        sum += i\n        i += 1\n\n    return sum\n", "def summation(num):\n\n    done = sum([x for x in range(1,num + 1)])\n    \n    return done\n                 \n    \n", "def summation(num):\n    tot = 0\n    for n in range(0,num+1):\n        tot += n\n    return tot", "def summation(num):\n    num = sum(range(num+1))\n    return num\n    \n    \n", "# def summation(num):\n#     result = 0\n#     for i in range(1, num+1):\n#         result += i\n        \n#     return result\n\ndef summation(num):\n    result = 0\n    for i in range(num+1):\n        print(i, num)\n        result += i\n    return result", "def summation(num, sums=0):\n    if num == 0:\n        return sums\n    else:\n        return summation(num-1, sums + num)", "def summation(num):\n    nr_list = list(range(1, num+1))\n    return sum(nr_list)\n    \n    \n        \n        \n        \n        \n        \n        \n        \n            \n", "summation = lambda x: sum(list(range(x+1)))", "def summation(num):\n    return sum(range(num + 1))\nprint((summation(5)))\n", "def summation(num):\n\n    result = 0\n    count = 1\n\n    while count <= num:\n        result += count\n        count += 1\n\n    return result\n\n\ndef __starting_point():\n    assert summation (4)\n    \n\n__starting_point()", "def summation(num):\n    return sum(range(1,num+1))\n\nprint((summation(6)))\n\n", "def summation(num):\n    cnt = 0\n    for x in range(num+1):\n        cnt += x\n\n    return cnt\n\nprint((summation(8)))\n\n    \n", "def summation(num):\n    return num if num == 1 else sum([i for i in range(num+1)])", "def summation(num):\n    lone = 0\n    for i in range(1, num+1):\n        lone = lone + i\n    return lone", "def summation(num):\n    if isinstance(num, int) and num > 0:\n        s = 0\n        for i in range(num):\n            s = s + i\n        return s + num \n    else:\n        print(\"No es un n\u00famero entero positivo\")", "def summation(num):\n    kata_range = []\n    for i in range(1, num + 1):\n        kata_range.append(i)\n    return sum(kata_range)", "def summation(num):\n    a = []\n    for i in range(num+1):\n        a.append(i)\n    return sum(a)\n", "def summation(num):\n    y = 1\n    solution = 0\n    while y <= num:\n        solution += y\n        y += 1\n    return solution\n    \n", "def summation(num):\n    res = [i for i in range(num + 1)]\n    return sum(res)\n    \n", "def summation(num):\n    x = 0\n    final = 0\n    while x <= num:\n        final += x\n        x += 1\n    return final\n    \n", "def summation(num):\n    return num * (num * 0.5 + 0.5)\n    \n", "def summation(num: int) -> int:\n    i = 0\n    resultado = i\n\n    while i <= num:\n        resultado +=i\n        i += 1\n    \n    return resultado\n\n    \n", "def summation(num):    \n    number = list(range(1,num+1))\n    return sum(number)\n    \n", "def summation(num):\n    a = []\n    [a.append(i) for i in range(0,num+1)]\n    return sum(a)\n    \n", "def summation(num):\n    b = 0\n    c = 0\n    for i in range(num):\n        c+=1\n        b+=c\n    return b    \n        \n        \n    \n"]