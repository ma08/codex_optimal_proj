["def final_grade(exam, projects):\n  if exam > 90 or  projects > 10: return 100\n  if exam > 75 and projects >= 5: return 90\n  if exam > 50 and projects >= 2: return 75\n  return 0", "def final_grade(exam, projects):\n    if exam > 90 or projects > 10:\n        return 100\n    elif exam > 75 and projects >= 5:\n        return 90\n    elif exam > 50 and projects >= 2:\n        return 75\n    else:\n        return 0", "def final_grade(x, p):\n    return ( (x>90 or p>10) and 100 or \n             x>75 and p>=5 and 90 or\n             x>50 and p>=2 and 75 or 0)", "def final_grade(exam, projects):\n    return 100 if exam > 90 or projects > 10 else 90 if exam > 75 and projects >= 5 else 75 if exam > 50 and projects >=2 else 0", "def final_grade(exam, projects):\n\n    if (exam > 90 or projects > 10):\n        results = 100\n    elif (exam > 75 and projects >= 5):\n        results = 90\n    elif (exam > 50 and projects >= 2):\n        results = 75\n    else:\n        results = 0\n        \n    return results", "def final_grade(exam, projects):\n    if (exam > 90) or (projects > 10):\n        return 100\n    elif (exam > 75 < 90) and (projects >= 5):\n        return 90\n    elif (exam > 50) and (projects >= 2):\n        return 75\n    else:\n        return 0", "def final_grade(exam, projects):\n    grade = 0\n    if exam > 90 or projects > 10:\n        grade = 100\n    elif exam > 75 and projects >= 5:\n        grade = 90\n    elif exam > 50 and projects >= 2:\n        grade = 75\n    else:\n        grade = 0\n    return grade", "def final_grade(exam, projects):\n    if exam > 90 or projects > 10:\n        return 100\n    if exam > 75 and projects > 4:\n        return 90\n    if exam > 50 and projects > 1:\n        return 75\n    return 0", "final_grade=lambda e,p:{e>50 and p>=2:75,e>75 and p>=5:90,e>90 or p>10:100}.get(True,0)", "def final_grade(exam, projects):\n    return (100 if (exam > 90 or projects > 10)\n            else 90 if (exam > 75 and projects > 4)\n            else 75 if (exam > 50 and projects > 1)\n            else 0)", "def final_grade(exam, projects):\n    if exam>90 or projects>10:\n        return 100\n    elif exam>75 and projects>4:\n        return 90\n    elif exam>50 and projects>1:\n        return 75\n    return 0# final grade", "def final_grade(exam, projects):\n    print(exam, projects)\n    return 100 if (exam > 90) or (projects > 10) else 90 if (exam > 75) and (projects >= 5) else 75 if (exam > 50) and (projects >= 2) else 0", "from functools import reduce\nfrom operator import and_, or_\nfrom typing import NamedTuple, Tuple, Callable, Any\n\nExam = Projects = int\nActivities = Tuple[Exam, Projects]\n\nclass Rule(NamedTuple):\n    limits: Activities\n    relation: Callable[[bool, bool], bool]\n    result: Any\n\nRULES = (\n    Rule((90, 10), or_, 100),\n    Rule((75, 4), and_, 90),\n    Rule((50, 1), and_, 75),\n)\n\ndef final_grade(*scores: Activities) -> int:\n    for rule in RULES:\n        pairs = tuple(zip(scores, rule.limits))\n        if pairs and reduce(rule.relation, (score > limit for score, limit in pairs)):\n            return rule.result\n    return 0", "def final_grade(exam, projects):\n    try:\n        return {\n            exam > 50 and projects >= 2: 75,\n            exam > 75 and projects >= 5: 90,\n            exam > 90 or projects > 10: 100\n        }[True]\n    except KeyError:\n        return 0", "def final_grade(exam, projects):\n    return {exam > 50 and projects > 1: 75,\n            exam > 75 and projects > 4: 90,\n            exam > 90 or projects > 10: 100}.get(True, 0)", "def final_grade(exam: int, projects: int) -> int:\n    \"\"\"\n    Calculates the final grade of a student depending on two parameters:\n     - grade for the exam\n     - number of completed projects\n    \"\"\"\n    return {\n        all([exam > 50, projects >= 2]): 75,\n        all([exam > 75, projects >= 5]): 90,\n        any([exam > 90, projects > 10]): 100\n    }.get(True, 0)", "final_grade=lambda e,p:[0,75,90,100][sum([e>90or p>10,(e>75and p>4)or(e>90or p>10),(e>50and p>1)or(e>90or p>10)])]", "def final_grade(exam, projects):\n    if exam> 90 or projects>10: return 100\n    for val in [(75,5,90), (50,2,75)]:\n        if exam > val[0] and projects >= val[1]: return val[2]\n    return 0", "def final_grade(exam, projects):\n    return min((75*(exam>50 and projects>1)+15*(exam>75 and projects>4))+100*(exam>90 or projects>10), 100)", "# Today I am mostly implementing Scala's pattern matching in Python...\n# Wondering if I can implement the Elixir pipe operator |> via decorators next\n# I may be bored.\n\n_ = '_'\n\ndef match(patterns, *args):\n    for pattern, result in patterns:\n        if all(p == _ or p == actual for p, actual in zip(pattern, args)):\n            return result\n\ndef final_grade(exam, projects):\n    patterns = [\n        ((True, ),  100),\n        ((_, _, _, True), 100),\n        ((_, True, _, _, True), 90),\n        ((_, _, True, _, _, True), 75),\n        ((), 0)\n    ]\n    return match(patterns,\n        exam > 90, exam > 75, exam > 50, \n        projects > 10, projects > 4, projects > 1\n    )", "final_grade=lambda e,p:100*(e>90 or p>10) or 90*(e>75 and p>4) or 75*(e>50 and p>1)", "final_grade=lambda e,p:[0,75,90,100][(3*(e>90 or p>10) or 2*(e>75 and p>4) or (e>50 and p>1))]", "def final_grade(e, p, o=0):\n    return 100 if e>90 or p>10 else 90 if e>75 and p>4 else 75 if e>50 and p > 1 else 0", "final_grade = lambda g, p : 100 if (g > 90 or p > 10) else (90 if (g > 75 and p > 4) else (75 if (g > 50 and p > 1) else 0))", "def final_grade(exam, projects):\n    results = [0, 75, 90, 100, 100, 100]\n    return results[3 * (exam > 90 or projects > 10) + (exam > 75 and projects >= 5) + (exam > 50 and projects >= 2)]", "def final_grade(exam, projects):\n    array=[100,90,75,0]\n    if exam>90 or projects>10:\n        return array[0]\n    elif exam>75 and projects>=5:\n        return array[1]\n    elif exam>50 and projects>=2:\n        return array[2]\n    else:\n        return array[3]", "def final_grade(exam, projects):\n    if exam > 90 or projects > 10:\n        return 100\n    minimums = ((90,  76,  5),\n                (75,  51,  2),\n                ( 0,   0,  0))\n    return next( score for score, exam_min, projects_min\n                 in minimums\n                 if exam_min <= exam and projects_min <= projects )", "def final_grade(exam, projects):\n    exams, proj, grades = [90, 75, 50, 0], [10, 4, 1, 0], [100, 90, 75, 0]\n    for i in range(4):\n        if exam > 90 or projects > 10:\n            return 100\n        if exam > exams[i] and projects > proj[i]:\n            return grades[i]\n    return 0", "import unittest\n\n\ndef final_grade(exam, projects):\n    print((exam, projects))\n    if exam > 90 or projects > 10:\n        return 100\n    elif exam > 75 and projects >= 5:\n        return 90\n    elif exam > 50 and projects >= 2:\n        return 75\n    else:\n        return 0\n    \n    \nclass TestFinalGrade(unittest.TestCase):\n    def test_final_grade_on_100_with_exam_score_that_is_more_than_90(self):\n        exam, projects = 100, 12\n        actual = final_grade(exam, projects)\n        self.assertEqual(actual, 100)\n\n    def test_final_grade_on_100_with_projects_that_is_more_than_10(self):\n        exam, projects = 80, 10\n        actual = final_grade(exam, projects)\n        self.assertEqual(actual, 100)\n\n    def test_final_grade_on_90_with_exam_score_that_is_more_than_75(self):\n        exam, projects = 75, 3\n        actual = final_grade(exam, projects)\n        self.assertEqual(actual, 90)\n\n    def test_final_grade_on_90_with_projects_that_is_more_than_5(self):\n        exam, projects = 70, 5\n        actual = final_grade(exam, projects)\n        self.assertEqual(actual, 90)\n\n    def test_final_grade_on_75_with_exam_score_that_is_more_than_50(self):\n        exam, projects = 50, 3\n        actual = final_grade(exam, projects)\n        self.assertEqual(actual, 75)\n\n    def test_final_grade_on_75_with_projects_that_is_more_than_2(self):\n        exam, projects = 40, 3\n        actual = final_grade(exam, projects)\n        self.assertEqual(actual, 75)\n\n    def test_final_grade_on_0_with_projects_and_exam_score_that_is_less_than_final_grade_on_75(self):\n        exam, projects = 30, 1\n        actual = final_grade(exam, projects)\n        self.assertEqual(actual, 0)\n", "def final_grade(x, p):\n    return ((x>90 or p>10) and 100 or\n            x>75 and p>=5 and 90 or\n            x>50 and p>=2 and 75)", "def final_grade(exam, projects):\n    grade = 0\n    if exam > 90 or projects > 10:\n        grade = 100\n    elif exam > 75 and exam <= 90 and projects >= 5:\n        grade = 90\n    elif exam > 50 and projects >= 2:\n        grade = 75\n    else:\n        grade = 0\n    return grade", "def final_grade(exam, projects):\n    return 100 if exam>90 or projects>10 else 90 if 90>= exam >75 and projects>=5 else 75 if 90>=exam>50 and projects>=2 else 0\n", "def final_grade(exam, projects):\n    print(exam, projects)\n    \n    if exam > 90:\n        return 100\n    elif projects > 10:\n        return 100\n    elif exam > 75 and projects >= 5:\n        return 90\n    elif exam > 50 and projects >= 2:\n        return 75\n    else:\n        return 0", "def final_grade(exam, pro):\n    if exam > 90 or pro > 10:\n        return 100\n    if exam > 75 and pro >= 5:\n        return 90\n    if exam > 50 and pro >= 2:\n        return 75\n    else:\n        return 0", "def final_grade(exam, proj):\n    if exam > 90 or proj > 10:\n        return 100\n    if exam > 75 and proj > 4:\n        return 90\n    if exam > 50 and proj > 1:\n        return 75\n    return 0", "def final_grade(exam, projects):\n    if exam > 90:\n        return 100\n    elif projects >= 11:\n        return 100\n    if exam > 75 and projects >= 5:\n        return 90\n    if exam > 50 and projects >= 2:\n        return 75\n    else: return 0", "def final_grade(exam,\n                projects):\n\n    if (90 < exam or\n        10 < projects):\n\n        return 100\n\n    elif (75 < exam and\n          5 <= projects):\n\n        return 90\n\n    elif (50 < exam and\n          2 <= projects):\n\n        return 75\n\n    return 0\n", "def final_grade(points, project):\n    if points > 90 or project > 10:\n        point = 100\n    elif points > 75 and project >= 5:\n        point = 90\n    elif points > 50 and project >= 2:\n        point = 75\n    else:\n        point = 0\n    return point", "final_grade = lambda e, p: [0, 75, 90, 100, 100, 100][(e>90 or p>10)*3 + (e>75 and p>=5) + (e>50 and p>=2)]", "#def final_grade(e, p):\n#    return [0, 75, 90, 100][(e>90 and p>10) + (e>75 and p>=5) + (e>50 and p>=2)]\n\nfinal_grade = lambda e, p: [0, 75, 90, 100, 100, 100][(e>90 or p>10)*3 + (e>75 and p>=5) + (e>50 and p>=2)]", "def final_grade(s, p):\n    return 100 if s>90 or p>10 else 90 if s>75 and p>=5 else 75 if s>50 and p>=2 else 0  ", "def final_grade(exam, projects):\n    if exam > 90 or projects > 10:\n        return 100\n    elif exam <= 50 or projects < 2:\n        return 0\n    elif exam <= 75 or projects < 5:\n        return 75\n    else:\n        return 90", "def final_grade(exam, projects):\n    if projects>10:\n        return 100\n    if exam>90:\n        return 100\n    if exam>75 and projects>=5:\n        return 90\n    elif exam>50 and projects>=2:\n        return 75\n    return 0", "def final_grade(a,b):\n    if a>90 or b>10:\n        return 100\n    elif a>75 and b>4:\n        return 90\n    elif a>50 and b>1:\n        return 75\n    else:\n        return 0", "def final_grade(exam, projects):\n    if projects > 10:\n        return 100\n    elif exam > 90:\n        return 100\n    elif projects >= 5 and exam > 75:\n        return 90\n    elif projects >= 2 and exam > 50:\n        return 75\n    else:\n        return 0", "def final_grade(exam, projects):\n    if projects > 10 or exam > 90:\n        return 100\n    elif exam > 75 and projects > 4:\n        return 90\n    elif exam > 50 and projects > 1:\n        return 75\n    else:\n        return 0", "def final_grade(e, p):\n    return [100,90,75,0][0 if(e>90 or p>10)else 1 if(e>75 and p>4)else 2 if (e>50 and p>1)else 3]", "def final_grade(exam, projects):\n    grade = 0\n    \n    if exam > 90 or projects > 10:\n        grade += 100\n        \n    elif exam > 75 and projects >= 5:\n         grade += 90\n    \n    elif exam > 50 and projects >= 2:\n         grade += 75\n\n    else:\n        grade == 0\n    \n    return grade\n    \n\n\n", "def final_grade(exam, projects):\n    print((\" \" + str(exam) + \" \" + str(projects)))\n    data = [\n        [90, 10, 100],\n        [75, 5, 90],\n        [50, 2, 75]\n    ]\n    if exam > data[0][0] or projects > data[0][1]:\n        return data[0][2]\n    elif exam > data[1][0] and projects >= data[1][1]:\n        return data[1][2]\n    elif exam > data[2][0] and projects >= data[2][1]:\n        return data[2][2]\n    return 0\n\n\n", "def final_grade(exam, projects):\n    if exam > 90 or projects >10:\n        return 100\n    elif exam > 75 and 10 >=projects >=5:\n        return 90\n    elif exam > 50 and projects>=2:\n        return 75\n    else:\n        return 0", "def final_grade(exam, projects):\n    if exam <= 100 and (exam > 90 or projects > 10):\n        return 100\n    elif exam > 75 and projects >= 5:\n        return 90\n    elif exam > 50 and projects >= 2:\n        return 75\n    \n    else:\n        return 0", "def final_grade(exam, projects):\n    if exam > 90 or projects > 10:\n        return 100\n    elif exam > 75 and projects >= 5:\n        return 90\n    return 75 if exam > 50 and projects >= 2 else 0", "# calculate final grade of student based on grade for an exam and a number of projects\n# input - integer for exam grade (0-100), integer for number of projects (0 and above)\n# output - integer for final grade\n\n\ndef final_grade(exam, projects):\n    if exam > 90 or projects > 10:\n        return 100\n    if exam > 75 and projects >= 5:\n        return 90\n    if exam > 50 and projects >= 2:\n        return 75\n    else:\n        return 0", "def final_grade(exam, projects):\n    \n    if exam > 90 or projects > 10:\n        return 100\n    elif exam in range(76,91) and projects >= 5:\n        return 90\n    elif exam > 50 and projects >= 2:\n        return 75\n    elif exam <= 50 or projects < 2:\n        return 0\n", "def final_grade(e, p):\n    return 100 if e>90 or p>10 else (90 if e>75 and p>4 else (75 if e>50 and p>=2 else 0))", "def final_grade(exam, projects):\n      if exam > 90 or projects > 10:\n          return 100\n#       elif exam >= 90:\n#           return 100\n#       elif projects >= 10:\n#           return 100\n      elif exam > 75 and projects >= 5:\n          return 90\n      elif exam > 50 and projects >= 2:\n          return 75\n#       elif exam == 0:\n#           return 0\n      else:\n          return 0\n", "def final_grade(exam, projects):\n    if 90 < exam or 10 < projects:\n      return 100\n    if 75 < exam and 5 <= projects:\n      return 90\n    if 50 < exam and 2 <= projects:\n      return 75\n    return 0", "def final_grade(exam, projects):\n    if exam > 90 or projects > 10:\n        return 100\n    elif exam > 75 and projects >= 5:\n       return 90\n    elif exam > 50 and projects >= 2:\n        return 75\n    else:\n        exam >= 0 or projects != 0 \n        return 0", "def final_grade(exam, projects):\n    print((exam, projects))\n    grade = 0\n    if exam > 90 or projects > 10:\n        grade = 100\n    elif exam > 75 and projects > 4:\n        grade = 90\n    elif exam > 50 and projects > 1:\n        grade = 75\n    return grade\n  \n", "def final_grade(exam, projects):\n    reponse = 0\n    if exam > 90 or projects > 10:\n        return 100\n    elif exam > 75 and projects >= 5:\n        return 90\n    elif exam > 50 and projects >= 2:\n        return 75\n    else:\n        return 0", "def final_grade(exam, proj):\n    return 100 if exam > 90 or proj > 10 else 90 if exam > 75 and proj >= 5 else 75 if exam > 50 and proj >= 2 else 0", "def final_grade(e, p):\n    return  100 if e > 90 or  p > 10 else \\\n             90 if e > 75 and p >= 5 else \\\n             75 if e > 50 and p >= 2 else \\\n             0", "def final_grade(exam, projects):\n    if exam > 90:\n        return 100\n    elif projects < 2:\n        return 0   \n    elif projects > 10:\n        return 100\n    elif exam > 75 and projects >= 5 :\n        return 90\n    elif exam > 50 and projects >= 2:\n        return 75\n    else:  \n        return 0\n", "def final_grade(exam, projects):   \n    '''Return grade based on input criteria'''\n    grade = 0\n    if exam > 90 or projects > 10:\n        grade = 100\n    elif exam > 75 and projects >= 5:\n        grade = 90\n    elif exam > 50 and projects >= 2:\n        grade = 75\n  \n    return grade", "def final_grade(exam, projects):\n    if projects > 10:\n        return 100\n    elif exam > 90:\n        return 100\n    elif exam > 75 and projects >= 5:\n        return 90\n    elif exam > 50 and projects >= 2:\n        return 75\n    else:\n        return 0", "def final_grade(exam, projects):\n\n   grade=0   \n   \n   if exam >90 or projects >10:\n       grade=100\n   elif  (exam >75 and exam <=90)and (projects >=5):\n       grade=90\n   elif  (exam >50) and (projects >=2):  \n       grade=75\n       \n   return grade    ", "def final_grade(e, p):\n  s = 0\n  if e > 90 or p > 10:\n    s = 100\n  elif e > 75 and p > 4:\n    s = 90\n  elif e > 50 and p > 1:\n    s = 75\n  return s\n", "def final_grade(exam, projects):\n    result = 0\n    if exam > 90 or projects > 10:\n        result = 100\n    elif exam > 75 and projects > 4:\n        result = 90\n    elif exam > 50 and projects > 1:\n        result = 75\n    else:\n        result = 0\n    return result", "def final_grade(exam, projects):\n    print(exam, projects)\n    if exam>90 or projects>10: return (100)\n    if exam>75 and projects>=5: return (90)\n    if exam>50 and projects>=2: return (75)\n    return(0)", "def final_grade(exam, projects):\n    return 100 if exam > 90 or projects > 10 else 90 if exam > 75 and projects >= 5 else 75 if exam > 50 and projects >= 2 else 0\n#     if exam > 90 or projects > 10:\n#         return 100\n#     elif exam >= 75 and projects >= 5:\n#         return 90\n#     elif \n", "def final_grade(exam, projects):\n    \n    e = exam\n    p = projects\n    \n    if e > 90 or p > 10:\n        return 100\n    elif e > 75 and p >= 5:\n        return 90\n    elif e > 50 and p >= 2:\n        return 75\n    else:\n        return 0", "def final_grade(ex, p):\n    if ex > 90 or p > 10: return 100\n    elif ex > 75 and p >= 5: return 90\n    elif ex > 50 and p >= 2 : return 75\n    else: return 0\n  #return # final grade\n", "def final_grade(exam, projects):\n    return [0, 75, 90][(exam > 50 and projects > 1) + (exam > 75 and projects > 4)] if exam <= 90 and projects <= 10 else 100", "def final_grade(exam, projects):\n    e = exam\n    p = projects\n    if e > 90 or p > 10:\n        return 100\n    elif e > 75 and p >= 5:\n        return 90\n    elif e > 50 and p >= 2:\n        return 75\n    return 0\n", "def final_grade(exam, projects):\n#     if exam > 90 and projects > 10:\n#         return 100\n#     elif exam >75 and projects >=5:\n#         return 90\n#     elif exam >50 and projects >=2:\n#         return 75\n#     else:\n#         return 0\n    if exam > 90 or  projects > 10: return 100\n    if exam > 75 and projects >= 5: return 90\n    if exam > 50 and projects >= 2: return 75\n    return 0", "def final_grade(exam, pr):\n    if exam > 90 or pr > 10:\n        return 100\n    elif exam > 75 and pr >= 5:\n        return 90\n    elif exam > 50 and pr >= 2:\n        return 75\n    return 0", "def final_grade(exam, projects):\n    print('%s,%s' %(exam,projects))\n    if exam>90 or projects>10:\n        return 100\n    elif exam >75 and projects>=5:\n        return 90\n    elif exam>50 and projects>=2:\n        return 75\n    else:\n        return 0", "def final_grade(exam, projects):\n    if exam>90 or projects>10:\n        return 100# final grade\n    elif exam>75 and projects>=5:\n        return 90\n    elif exam>50 and projects>=2:\n        return 75\n    return 0", "def final_grade(e, p):\n    if e>90 or p>10:\n        return 100\n    if e>75 and p>4:\n        return 90\n    if e>50 and p>1:\n        return 75\n    else:\n        return 0\n", "def final_grade(exams, projects):\n    return 100 if exams >90 or projects>10 else 90 if exams>75 and projects>=5 else 75 if exams>50 and projects>=2 else 0", "def final_grade(exam, projects):\n    if exam > 90 or projects > 10:\n        return 100\n    elif exam > 75 and projects > 4:\n        return 90\n    elif exam > 50 and projects >= 2:\n        return 75\n    else:\n        return 0", "def final_grade(exam, projects):\n    return \\\n        100    if exam > 90 or projects > 10 else \\\n        90     if exam > 75 and projects >= 5 else \\\n        75     if exam > 50 and projects >= 2 else \\\n        0", "def final_grade(exam, projects):\n    if exam > 90 or projects > 10:\n        return 100\n    if (exam > 75 and exam <= 90) and (projects >= 5 and projects <= 10):\n        return 90\n    if (exam > 50) and projects >= 2:\n        return 75\n    else:\n        return 0", "def final_grade(exam, projects):\n    if exam>90 or projects>10 :\n        return 100\n    elif 90>=exam>75 and projects>=5:\n        return 90\n    elif exam>50 and projects>=2:\n        return 75\n    else:\n        return 0", "def final_grade(exam, projects):\n    if exam > 90 or projects > 10:\n        return 100\n    elif exam > 75 and projects >= 5 and projects <= 10:\n        return 90\n    elif exam > 50 and projects >= 2 and projects <= 10:\n        return 75\n    else:\n        return 0", "def final_grade(exam, projects):\n    final = 0\n    if exam > 90 or projects > 10:\n        final = 100\n    elif exam > 75 and projects > 4:\n        final = 90\n    elif exam > 50 and projects > 1:\n        final = 75\n    else:\n        final = 0\n    return final", "def final_grade(exam, projects):\n  finalGrade = 0;\n  if exam > 50 and projects >= 2:\n    finalGrade = 75;\n  if exam > 75 and projects >= 5:\n    finalGrade = 90;\n  if exam > 90 or projects > 10:\n    finalGrade = 100;\n  return finalGrade;", "def final_grade(exam, projects):\n    if exam > 90 or projects > 10:\n        return 100\n    elif 75 < exam <= 90 and projects >= 5:\n        return 90\n    elif 50 < exam <= 75 and  projects >= 2:\n        return 75\n    elif 50 < exam <= 90 and projects >= 2:\n        return 75\n    else:\n        return 0", "def final_grade(e, p):\n    if e>90 or p>10:\n        return 100\n    if 75<e<=90 and p>=5 and p<=10:\n        return 90\n    if 50<e<=90 and p>=2 and p<=10:\n        return 75\n    else:\n        return 0", "def final_grade(exam, projects):\n    if exam>90 or projects>10:\n        return 100\n    else:\n        if exam >75 and projects>=5:\n            return 90\n        elif exam>50 and projects>=2:\n            return 75\n        else:\n            return 0\n", "def final_grade(exam, projects):\n    if int(exam) > 90 or int(projects) > 10:\n        final_grade = 100\n    elif int(exam) >75 and int(projects) >= 5:\n        final_grade = 90\n    elif int(exam) > 50 and int(projects) >=2:\n        final_grade = 75\n    else:\n        final_grade = 0\n    return final_grade", "def final_grade(e, p):\n    if p>10 or e>90 : return 100\n    if p>=5 and e>75 : return 90\n    if p>=2 and e>50 : return 75\n    return 0\n", "def final_grade(exam, projects):\n    if exam > 90 or projects > 10:\n        return 100\n    elif (75 < exam) and (5 <= projects): # <= 10):\n        return 90\n    elif (50 < exam) and (2 <= projects): # <5):\n        return 75\n    #elif projects == 11:\n    #    return 100\n   # elif exam < 50 and projects > 5:\n    #    return 0\n    else:\n        return 0", "def final_grade(exam, projects):\n    if exam >= 91 or projects > 10:\n        return 100\n    elif exam >=76 and projects >= 5:\n        return 90\n    elif exam >=51 and projects >= 2:\n        return 75\n    else:\n        return 0\n    return # final grade", "def final_grade(exm, prj):\n    if exm > 90 or prj > 10:\n        return 100\n    if exm > 75 and prj >= 5:\n        return 90\n    if exm > 50 and prj >= 2:\n        return 75\n    return 0", "def final_grade(ex, prj):\n    return 100 if ex>90 or prj>10 else 90 if ex>75 and prj>=5 else 75 if ex>50 and prj>=2 else 0", "def final_grade(exam, projects):\n    grade = [100,90,75,0]\n    x = 3\n    if exam > 90 or projects > 10:\n        x = 0\n    elif exam > 75 and projects > 4:\n        x = 1\n    elif exam > 50 and projects > 1:\n        x = 2\n    return grade[x]", "def final_grade(ex, pro):\n    if ex > 90 or pro > 10: return 100\n    if ex > 75 and pro >= 5: return 90\n    if ex > 50 and pro >=2: return 75\n    else: return 0# final grade", "def final_grade(exam, projects):\n    if exam > 90 or projects > 10:\n        grade = 100\n    elif exam > 75 <= 90 and projects >= 5 <= 10:\n        grade = 90\n    elif exam > 50 < 75 and projects >= 2 < 5:\n        grade = 75\n    else:\n        grade = 0\n    \n    return grade", "def final_grade(exam, projects):\n    rubric = [100, 90, 75, 0]\n    return rubric[0] if exam > 90 or projects > 10 else rubric[1] if exam > 75 and projects >= 5 else rubric[2] if exam > 50 and projects >= 2 else rubric[3]"]