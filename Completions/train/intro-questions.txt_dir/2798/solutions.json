["def to_alternating_case(string):\n    return string.swapcase()", "def to_alternating_case(string):\n    return ''.join([c.upper() if c.islower() else c.lower() for c in string])", "to_alternating_case = str.swapcase", "def to_alternating_case(string):\n    strn = \"\"\n    for i in string:\n        if i.isupper():\n            strn += i.lower()\n        else:\n            strn += i.upper()\n    return strn", "def to_alternating_case(string):\n    capital_letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', \n    'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']\n    lowercase_letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', \n    'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n    new_string = []\n    \n    for character in string:\n        if character in capital_letters:\n            new_string.append(lowercase_letters[capital_letters.index(character)])\n        if character in lowercase_letters:\n            new_string.append(capital_letters[lowercase_letters.index(character)])\n        if character not in capital_letters and character not in lowercase_letters:\n            new_string.append(character)\n            \n    return ''.join(new_string)\n", "def to_alternating_case(string):\n    new_string = ''\n    for char in string:\n        if char.isupper():\n            new_string += char.lower()\n        else:\n            new_string += char.upper()\n    return new_string\n    #your code here\n", "def to_alternating_case(string):\n    #your code here\n    return ''.join(string[i].upper() if string[i].islower() else string[i].lower() for i in range(len(string)))", "def to_alternating_case(string):\n    s = ''\n    # After i \"Hard Code\" this I will see much much much better solutions to learn from\n    for i in string:\n        i.split()\n        if i.islower():\n            s = s + i.upper()\n        if i.isupper():\n            s = s + i.lower()\n        if i.isspace():\n            s = s + ' '\n        if i.isdigit():\n            s = s + str(i)\n        if i == '.':\n            s = s + str('.')\n        if i == '<':\n            s = s + str('<')\n        if i == '=':\n            s = s + str('=')\n        if i == '>':\n            s = s + str('>')\n        if i == \"'\":\n            s = s + str(\"'\")\n        if i == '?':\n            s = s + str('?')\n        if i == ';':\n            s = s + str(';')\n        if i == ',':\n            s = s + str(',')\n        if i == \"/\":\n            s = s + str(\"/\")\n        if i == '\\'':\n            s = s + str('\\'')\n        if i == \"|\":\n            s = s + str(\"|\")\n        if i == \"!\":\n            s = s + str(\"!\")\n        if i == \":\":\n            s = s + str(\":\")\n      \n    return s", "to_alternating_case=lambda s:s.swapcase()", "import string\ndef to_alternating_case(s):\n    ans = ''\n    for c in s:\n        if c in string.ascii_lowercase:\n            ans += c.upper()\n        elif c in string.ascii_uppercase:\n            ans += c.lower()\n        else:\n            ans += c\n    return ans", "def to_alternating_case(string):\n    string_2 = ''\n    for char in string:\n        if char.islower():\n            string_2 += char.upper()\n        else:\n            string_2 += char.lower()\n    return string_2", "def to_alternating_case(string):\n    res = ''\n    for c in string:\n        res += c.upper() if c.islower() else c.lower()\n    return res", "def to_alternating_case(string):\n    res = []\n    for i in list(string):\n        if i.isupper():\n            res.append(i.lower())\n        else:\n            res.append(i.upper())\n    return \"\".join(res)", "import re\n\ndef to_alternating_case(string):\n    return re.sub(r'([a-z])|([A-Z])',\n        lambda c: (c.groups()[0] or \"\").upper() + (c.groups()[1] or \"\").lower(),\n        string)", "def to_alternating_case(string):\n    new_str = ''\n    \n    for char in string:\n    \n        if char.isupper() == True:\n            new_str += char.lower()\n        else:\n            new_str += char.upper()\n    \n    return new_str", "def to_alternating_case(string):\n    return \"\".join([i.capitalize() if str.islower(i) else i.lower() for i in string])", "def to_alternating_case(string):\n    temp = ''\n    for i in string:\n        if ord(i) >= 65 and ord(i) <= 90:\n            temp += chr(ord(i) + 32)\n        elif ord(i) >= 97 and ord(i) <= 122:\n            temp += chr(ord(i) - 32)\n        else:\n            temp += i\n    return temp", "def to_alternating_case(string):\n    return ''.join(map(lambda a : a.lower() if a.isupper() else a.upper(), string))", "def to_alternating_case(string):\n    NewString = []\n    for stri in string:\n        if type(stri) is str:\n            NewString.append(stri.upper() if stri.islower() else stri.lower())\n        else:\n            NewString.append(stri)\n            \n    return (''.join(NewString))", "def to_alternating_case(string):\n    str1 = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n    str2 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'\n    return string.translate(str.maketrans(str1, str2))", "def to_alternating_case(string):\n\n    return ''.join(i.swapcase() for i in string)", "def to_alternating_case(string):\n    return \"\".join(x.upper() if x.islower() else x.lower() for x in string)", "def to_alternating_case(string):\n    a = ''\n    for i in string:\n        if i == i.upper():\n            a += i.lower()\n        else:\n            a += i.upper()\n    return a\n", "def to_alternating_case(string):\n    strX=\"\"\n    for i in range(len(string)): \n            if string[i].isupper():\n                strX += string[i].lower()\n            elif string[i].islower():             \n                strX += string[i].upper()\n            else:\n                strX += string[i]\n    return strX", "def to_alternating_case(string):\n\n    fs =\"\"\n    for x in string:\n        if x.isupper():\n            fs += x.lower()\n        else:\n            fs += x.upper()\n    return fs", "def to_alternating_case(string):\n    altstring = ''\n\n    for i in range(len(string)):\n        if(string[i] == string[i].lower()):\n            altstring += string[i].upper()\n        else:\n            altstring += string[i].lower()\n    return altstring", "def to_alternating_case(string):\n    alter_case = lambda let: let.lower() if let.isupper() else let.upper()\n    return ''.join(map(alter_case, string))", "def to_alternating_case(string):\n    alternate = ''\n    for char in string:\n        if char == char.upper():\n            alternate += char.lower()\n        else:\n            alternate += char.upper()\n    return alternate", "def to_alternating_case(string):\n    res = []\n    for token in string:\n        if token.isupper():\n            res.append(token.lower())\n        elif token.islower():\n            res.append(token.upper())\n        else:\n            res.append(token)\n    return \"\".join(res)", "def to_alternating_case(s):\n    n=s.swapcase()\n    return n\n", "def to_alternating_case(string):\n    new_s = \"\"\n    for char in string:\n        if char.isupper():\n            new_s += char.lower()\n        else:\n            new_s += char.upper()\n    \n    return new_s", "def to_alternating_case(string):\n    output = \"\"\n    for character in string:\n        if character.isupper():\n            output += character.lower()\n        else:\n            output += character.upper()\n    return output", "def to_alternating_case(string):\n    str2 = ''\n    for char in string:\n        if char.isalpha():\n            if char.islower():\n                r = char.upper()\n                str2 += r\n            else:\n                r = char.lower()\n                str2 += r\n        else:\n            str2 += char\n    return str2", "def to_alternating_case(string):\n    x = list(string)\n    c = \"\"\n    for k in x:\n        if k == k.upper():\n            c += k.lower()\n        elif k == k.lower():\n            c += k.upper()\n        else:\n            c += k\n    return c        \n        \n    #your code here\n", "def to_alternating_case(string):\n    result = \"\"\n    for char in string:\n        if char.islower() == True:\n            result += char.upper()\n        else:\n            result += char.lower()\n    return result", "import string as str\ndef to_alternating_case(string):\n    res = \"\"\n    for i in string:\n        if i in str.ascii_lowercase:\n            res += i.upper()\n        elif i in str.ascii_uppercase:\n            res += i.lower()\n        else:\n            res += i\n    return res", "\ndef to_alternating_case(string):\n    strn = \"\"\n    for i in string:\n        if i == i.upper():\n            strn += i.lower()\n        elif i == i.lower():\n            strn += i.upper()\n    return strn\n", "def to_alternating_case(string):\n    return string.translate(str.maketrans('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ','ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'))", "def to_alternating_case(s):\n    # TIL I should google even if the solution looks easy,\n    # because there's probably an easier solution.\n    \n    return s.swapcase()", "def to_alternating_case(s):\n    return ''.join(c.upper() if c.islower() else c.lower() if c.isupper() else c for c in s)\n\n    # Less compact version of above:\n    #\n    # a = ''\n    # for c in s:\n    #     if c.islower():\n    #         a += c.upper()\n    #     elif c.isupper():\n    #         a += c.lower()\n    #     else:\n    #         a += c\n    # return a\n", "def to_alternating_case(string):\n    result = ''\n    lower_vowels = 'abcdefghijklmnopqrstuvwxyz'\n    upper_vowels = lower_vowels.upper()\n    index = 0\n    while index < len(string):\n        if string[index] in lower_vowels:\n            result += string[index].upper()\n        elif string[index] in upper_vowels:\n            result += string[index].lower()\n        else:\n            result += string[index]\n\n        index += 1\n    \n    return result", "def to_alternating_case(string):\n    result =''\n    for i in string:\n        for j in i:\n            \n            if j.islower():\n                cap=j.upper()\n                result=result + cap\n            else:\n                small=j.lower()\n                result=result + small\n    return result\n                \n                \n            \n", "to_alternating_case = lambda string: ''.join([[i.upper(),i.lower()][i.isupper()] for i in string])", "def to_alternating_case(string):\n    empty_string = \"\"\n    for i in string:\n        if i.islower():\n            empty_string = empty_string + i.upper()\n        else:\n            empty_string = empty_string + i.lower()\n            \n    return empty_string", "def to_alternating_case(string):\n    a = ''\n    for n in string:\n        if n.isupper():\n            a += n.lower()\n        elif n.islower():\n            a += n.upper()\n        else:\n            a += n\n    return a", "def to_alternating_case(string):\n    result = ''\n    for c in string:\n        if c == c.upper():\n            result=result+c.lower()\n        else:\n            result = result + c.upper()\n    return result", "def to_alternating_case(string):\n    return \"\".join(list(i.lower() if i.isupper() else i.upper() for i in string))", "def to_alternating_case(s):\n    alt = ''\n\n    for i in range(len(str(s))):\n        if(s[i]).islower():\n            alt += s[i].upper()\n        else:\n            alt += s[i].lower()\n\n    return alt", "def to_alternating_case(string):\n    new_string = ''\n    for i in string:\n        new_string = new_string + i.lower() if i.isupper() else new_string + i.upper()\n    return new_string", "def to_alternating_case(string):\n    out = ''\n    for i in string:\n        if i.isupper():\n            out = out + i.lower()\n        else:\n            out = out + i.upper()\n            \n    return out", "def to_alternating_case(s: str) -> str:\n    my_str = ''\n    for i in s:\n        if i.islower():\n            my_str += i.upper()\n        elif i.isupper():\n            my_str += i.lower()\n        else:\n            my_str += i\n    return my_str", "def to_alternating_case(string):\n    s = \"\"\n    for l in string:\n        if l == l.upper():\n            l = l.lower()\n            s += l\n        else:\n            l = l.upper()\n            s += l\n    return s", "def to_alternating_case(string):\n    res = \"\"\n    for l in string:\n        if l.isupper():\n            l = l.lower()\n            res += l\n        elif l.islower():\n            l = l.upper()\n            res += l\n        else: res += l\n    return res", "def to_alternating_case(string):\n    answer = \"\"\n    for c in string:\n        if c.isupper():\n            answer += c.lower()\n        elif c.islower():\n            answer += c.upper()\n        else:\n            answer += c\n    return answer", "def to_alternating_case(string):\n    ans = \"\"\n    for i in string:\n        if i == i.lower():\n            ans += i.upper()\n        else:\n            ans += i.lower()\n    return ans", "def to_alternating_case(string):\n    result = \"\"\n    for i in string:\n        if i.isupper():\n            result += i.lower()\n        if i.islower():\n            result += i.upper()\n        elif i == \" \":\n            result += i\n        elif i.isalpha()== False:\n            result += i\n    return result", "def to_alternating_case(string):\n    out = \"\"\n    for s in string:\n        if s.islower():\n            out += s.upper()\n        elif s.isupper():\n            out += s.lower()\n        else:\n            out += s\n            \n    return out", "def to_alternating_case(string):\n    output = ''\n    for i in string:\n        if i == i.lower():\n            output += i.upper()\n        else:\n            output += i.lower()\n    return output ", "def to_alternating_case(string):\n    l = []\n    for i in string:\n        if i.upper() == i:\n            l.append(i.lower())\n        else:\n            l.append(i.upper())\n    return ''.join(l)", "def to_alternating_case(string):\n    letters = [i for i in string]\n\n    for i in range(len(letters)):\n        if letters[i].islower():\n            letters[i] = letters[i].upper()\n        else:\n            letters[i] = letters[i].lower()\n\n    return \"\".join(letters)", "def to_alternating_case(string):\n    str2 = \"\"\n    \n    for c in string:\n        if c.isupper():\n            str2 += c.lower()\n            \n        elif c.islower():\n            str2 += c.upper()\n            \n        else:\n            str2 += c\n            \n    return str2", "def to_alternating_case(string):\n\n    result = \"\"\n    for i in range(len(string)):\n        ascii_code = ord(string[i])\n        if (97 <= ascii_code <= 122):\n            ascii_code -= 32\n        elif (65 <= ascii_code <= 90):\n            ascii_code += 32\n\n        result += chr(ascii_code)\n\n    return result\n", "def to_alternating_case(string):\n\n    for char in string:\n        '''if char.isupper():\n            str_ += char.lower()\n        elif char.islower():\n            str_ += char.upper()\n        elif char == \" \":\n            str_ += \" \"\n        elif string.isdigit():\n            return str(string)\n        '''\n        a = string.swapcase()\n\n    return a\n\nprint(to_alternating_case(\"cIao\"))", "def to_alternating_case(string):\n    return ''.join(list(map(lambda s: s.lower() if s.isupper() else s.upper(), string)))", "def to_alternating_case(string):\n\n    list1 = []\n    for letter in string:\n        if letter.isupper():\n            list1.append(letter.lower())\n        else:\n            list1.append(letter.upper())\n\n    alt_string = ''.join(list1)\n    return alt_string", "def to_alternating_case(string):\n    output = \"\"\n    for str in string:\n        if str.isupper():\n            output += str.lower()\n        elif str.islower():\n            output += str.upper()\n        elif str == \" \":\n            output += \" \"\n        else:\n            output += str\n    return output", "import string\n\ndef to_alternating_case(str):\n    return \"\".join(c.lower() if c in string.ascii_uppercase else c.upper() for c in str)", "def to_alternating_case(string):\n    return ''.join([letter.swapcase() for letter in string])", "def to_alternating_case(string):\n    word = ''\n    for el in string:\n        if el ==el.upper():\n            word+=el.lower()\n        elif el ==el.lower():\n            word+=el.upper()\n        else:\n            word += el.upper()\n    return word", "def to_alternating_case(string):\n    x=[]\n    for i in list(string):\n        if i.isupper():\n            x.append(i.lower())\n        elif i.isspace():\n            x.append(\" \")\n        else:\n            x.append(i.upper())\n    return \"\".join(x)\n", "to_alternating_case = lambda string: ''.join(map(lambda x: x.upper() if x.islower() else x.lower(), string))", "def to_alternating_case(string):\n    resultStr = \"\"\n    for k in string:\n        if k.islower():\n            resultStr += k.upper()\n        elif k.isupper():\n            resultStr += k.lower()\n        else: \n            resultStr += k\n    return resultStr", "def to_alternating_case(string):\n   return string.swapcase() #''.join([l.lower() if l == l.upper() else l.upper() for l in string])", "def to_alternating_case(string):\n   return ''.join([l.lower() if l == l.upper() else l.upper() for l in string])", "def to_alternating_case(string):\n    string2=''\n    for i in string:\n        if i.upper()==i:\n            string2+=i.lower()\n        else:\n            string2+=i.upper()\n    return string2", "def to_alternating_case(string):\n    soln = ''\n    \n    for char in string:\n        if char == char.lower():\n            soln += char.upper()\n        elif char == char.upper():\n            soln += char.lower()\n        elif char == '':\n            soln += char\n    return soln", "def to_alternating_case(string):\n    e=[]\n    for i in string:\n        if ord(i)>=65 and ord(i)<=90:\n            a=i.lower()\n            e.append(a)\n        else:\n            a=i.upper()\n            e.append(a)\n    finale=\"\"\n    nuova=finale.join(e)\n    return nuova", "def to_alternating_case(string):\n    #string.swapcase()\n    new = []\n    for letter in string:\n        if letter.isupper():\n            new.append(letter.lower())\n        elif letter.islower():\n            new.append(letter.upper())\n        else:\n            new.append(letter)\n    return ''.join(new)", "def to_alternating_case(s):\n    \"\"\"(^-__-^)\"\"\"\n    new_line = \"\"\n    for a in s:\n        if a.isupper():\n            new_line += a.lower()\n        elif a.islower():\n            new_line += a.upper()\n        else:\n            new_line += a\n    return new_line\n        \n            \n    \n    #your code here\n", "def to_alternating_case(s):\n    return str().join([i.lower() if i.isupper() else i.upper() for i in s])", "def to_alternating_case(string):\n    return \"\".join(list(map(lambda char: char.upper() if char.islower() else char.lower(),string)))", "def to_alternating_case(string):\n    newword=''\n    for i in range(len(string)):\n        if string[i].isupper() == True:\n            newword += string[i].lower()\n        elif string[i].islower() == True:\n            newword += string[i].upper()\n        else:\n            newword += string[i]\n    return newword", "def to_alternating_case(string):\n    s = \"\"\n    for l in string:\n        if l.lower() == l:\n            s += l.upper()\n        elif l.upper() == l:\n            s += l.lower()\n        else:\n            s += l\n    return s", "def to_alternating_case(string):\n    res = ''\n    for char in string:\n        if char.isalpha():\n            res += char.upper() if not char.isupper() else char.lower()\n        else:\n            res += char\n    return res", "def to_alternating_case(string):\n\n    new_string = []\n\n    for character in string:\n        if character.isalpha():\n            if character.islower():\n                new_string.append(character.upper())\n            elif character.isupper():\n                new_string.append(character.lower())\n        else:\n            new_string.append(character)\n\n    return ''.join(new_string)", "def to_alternating_case(string):\n    return ''.join(i.upper() if i == i.casefold() else i.casefold() for i in string)\n", "def to_alternating_case(string):\n    final = \"\"\n    for i in string:\n        if i == i.lower():\n            final += i.upper()\n        else: \n            final += i.lower()\n    return final \n", "A = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\ne = A.lower()\ndef to_alternating_case(s):\n    t = []\n    for i in s:\n        if i in A:\n            t.append(i.lower())\n        elif i in e:\n            t.append(i.upper())\n        else:\n            t.append(i)\n    return \"\".join(t)   \n\n            \n", "def to_alternating_case(string):\n    string = [i for i in string]\n    for i in range(len(string)):\n        if string[i].isupper():\n            string[i] = string[i].lower()\n        elif string[i].islower():\n            string[i] = string[i].upper()       \n    return ''.join(string)\n\n", "def to_alternating_case(string):\n    result = []\n    for letter in string:\n        if letter.upper() == letter:\n            result.append(letter.lower())\n        elif letter.lower() == letter:\n            result.append(letter.upper())\n\n    return ''.join(result)", "def to_alternating_case(a):\n    lst = []\n    for i in a:\n        if i == i.lower():\n            lst.append(i.upper())\n        else:\n            lst.append(i.lower())\n    return ''.join(lst)", "def to_alternating_case(string):\n    answer = ''\n    for i in range(len(string)):\n        if string[i].islower():\n            answer += string[i].upper()\n        else:\n            answer += string[i].lower()\n    return answer", "def to_alternating_case(string):\n    ret = []\n    for char in string:\n        if char.isupper():\n            ret.append(char.lower())\n        else:\n            ret.append(char.upper())\n    return \"\".join(ret)"]