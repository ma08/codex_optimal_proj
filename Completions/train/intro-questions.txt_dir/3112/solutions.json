["def avoid_obstacles(arr):\n  n=2\n  while 1: \n    if all([x%n for x in arr]): return n\n    n+=1", "def avoid_obstacles(a):\n    for j in range(2, max(a) + 2):        \n        if all(e % j != 0 for e in a): return j", "def avoid_obstacles(arr):\n    s = set(arr)\n    m = max(arr)\n    for i in range(1, m+2):\n        if i in s:\n            continue\n        if not any(x in s for x in range(i, m+1, i)):\n            return i", "def avoid_obstacles(arr):\n    obstacles = set(arr)\n    limit = max(arr) + 2\n    for step in range(1, limit):\n        if not (set(range(0, limit, step)) & obstacles):\n            return step\n", "def avoid_obstacles(arr, n=1):\n    arr = set(arr)\n    while set(range(0, 100+1, n)) & arr:\n        n += 1\n    return n", "avoid_obstacles=lambda a:min(n for n in range(1,max(a)+2)if all(m%n for m in a))", "def avoid_obstacles(arr):\n    if min(arr) == 1 and max(arr) == 100: return 101\n    landed = True\n    for max_jump in range(2, 100):\n        n = max_jump\n        landed = True\n        while n <= 100:\n            for i in range(len(arr)):\n                if n == arr[i]:\n                    landed = False\n                    break\n            n += max_jump\n        if landed:\n            return max_jump", "def avoid_obstacles(arr):\n    jump = 2\n    \n    while True:\n        start_again = False\n        \n        for num in arr:\n            if num % jump == 0:\n                jump = jump + 1\n                start_again = True\n                break\n        \n        if not start_again:\n            return jump\n", "def avoid_obstacles(arr):\n    holes = set(range(2, max(arr))).difference(arr)\n    for step in holes:\n        if all([x % step != 0 for x in arr]):\n            return step\n    return max(arr) + 1", "def avoid_obstacles(arr):\n    x = 2\n    for i in range(max(arr)):\n        leaps = [x*i for i in range(1,max(arr))]\n        \n        for i in leaps:    \n            if i in arr:\n                leaps = []\n                x += 1\n                break        \n    return x"]