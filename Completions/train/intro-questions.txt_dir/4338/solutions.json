["def reverse_on_diagonals(matrix):\n    copy = [ line[:] for line in matrix ]\n    for i in range(len(matrix)):\n        copy[i][i]    = matrix[-1-i][-1-i]\n        copy[i][-1-i] = matrix[-1-i][i]\n    \n    return copy", "def reverse_on_diagonals(matrix):\n    l = len(matrix)\n    for i in range(l // 2):\n        j = l - i - 1\n        matrix[i][i], matrix[j][j] = matrix[j][j], matrix[i][i]\n        matrix[i][j], matrix[j][i] = matrix[j][i], matrix[i][j]\n    return matrix", "def reverse_on_diagonals(matrix):\n    # Modifies the matrix in place. Only way to get O(n)\n    diag1 = [matrix[i][i] for i in range(len(matrix))]\n    diag2 = [matrix[i][~i] for i in range(len(matrix))]\n    for i, n in enumerate(reversed(diag1)):\n        matrix[i][i] = n\n    for i, n in enumerate(reversed(diag2)):\n        matrix[i][~i] = n\n    return matrix\n", "from copy import deepcopy\n\ndef reverse_on_diagonals(matrix):\n    matrix = deepcopy(matrix)\n    n = len(matrix)\n    for y in range(n // 2):\n        x = n - y - 1\n        matrix[y][y], matrix[x][x] = matrix[x][x], matrix[y][y]\n        matrix[y][x], matrix[x][y] = matrix[x][y], matrix[y][x]\n    return matrix", "def reverse_on_diagonals(a):\n    for i in range(len(a)//2):\n        j = -1-i\n        a[i][i], a[j][j], a[i][j], a[j][i] = a[j][j], a[i][i], a[j][i], a[i][j]\n    return a", "def reverse_on_diagonals(mx):\n    dl = []\n    dr = []\n    for i in range(len(mx)):\n        dl.append(mx[i][i])\n        dr.append(mx[i][-i-1])\n    for i in range(len(mx)):\n        mx[i][i] = dl.pop()\n        mx[i][-i-1] = dr.pop()\n    return mx", "r=reversed;x=enumerate;reverse_on_diagonals=lambda m:[[f if i==j or len(m[i])-(i+j+1)==0 else m[i][j]for j,f in x(e)]for i,e in x([list(r(e))for e in r(m)])]", "def reverse_on_diagonals(matrix):\n    diagonals = [(row[idx], row[-idx-1]) for idx, row in enumerate(matrix)]        \n    \n    for idx, ch in enumerate(reversed(diagonals)):\n        matrix[idx][idx], matrix[idx][-idx-1] = ch\n      \n    return matrix    \n", "def reverse_on_diagonals(matrix):\n    for i in range(int(len(matrix)/2)):\n        matrix[i][i],matrix[len(matrix)-1-i][len(matrix)-1-i] = matrix[len(matrix)-1-i][len(matrix)-1-i],matrix[i][i]\n        matrix[len(matrix)-1-i][i],matrix[i][len(matrix)-1-i] = matrix[i][len(matrix)-1-i],matrix[len(matrix)-1-i][i]\n    return matrix", "def reverse_on_diagonals(matrix):\n    n = len(matrix)\n    for i in range(n//2):\n        matrix[i][i], matrix[n-i-1][n-i-1] = matrix[n-i-1][n-i-1], matrix[i][i]\n        \n        matrix[i][n-i-1], matrix[n-i-1][i] = matrix[n-i-1][i], matrix[i][n-i-1] \n        \n    return matrix"]