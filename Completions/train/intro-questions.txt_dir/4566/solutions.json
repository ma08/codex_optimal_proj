["def counting_valleys(s): \n    level = 0\n    in_valley = False\n    count = 0\n    for c in s:\n        if c =='U':\n            level += 1\n        elif c=='D':\n            level -= 1\n        if level >= 0 and in_valley:\n                count += 1\n        in_valley = level < 0\n    return count", "def counting_valleys(s): \n    last_level = level = 0\n    c = 0\n    for m in s:\n        if m == 'F':\n            continue\n        level += (-1, 1)[m == 'U']\n        if last_level < level == 0:\n            c += 1\n        last_level = level\n    return c", "def counting_valleys(s):\n    level, valleys = 0, 0\n    for step in s:\n        if step == 'U' and level == -1:\n            valleys += 1\n        level += {'U': 1, 'F': 0, 'D': -1}[step]\n\n    return valleys\n", "def counting_valleys(s): \n    s = list(s)\n    s = list(filter(lambda x: x != 'F', s))\n    for i in range(len(s)):\n        if s[i] == 'D':\n            s[i] = -1\n        if s[i] == 'U':\n            s[i] = 1\n    count = 0\n    sum = 0\n    for i in range(len(s)):\n        sum += s[i]\n        if sum == 0 and s[i] == 1:\n            count += 1\n    return count", "def counting_valleys(s): \n    altitude = 0\n    result = 0\n    for c in s:\n        if c == \"U\":\n            altitude += 1\n            if altitude == 0:\n                result += 1\n        elif c == \"D\":\n            altitude -= 1\n    return result", "def counting_valleys(s):\n    r = l = 0\n    for x in s:\n        if x == \"U\" and l == -1: r += 1\n        if x != \"F\": l += 1 if x == \"U\" else -1\n    return r", "def counting_valleys(s): \n    res = current = 0\n    for c in s:\n        if c == 'U':\n            current += 1\n            if current == 0:\n                res += 1\n        elif c == 'D':\n            current -= 1\n    return res", "def counting_valleys(walk): \n    level, valleys = 0, 0\n    for step in walk:\n        valleys += (level == -1) and (step == \"U\")\n        level += (step == \"U\") or -(step == \"D\")\n    return valleys\n", "def counting_valleys(s): \n    res, cnt = 0, 0\n    for i in s:\n        cnt += {'F':0, 'U':1, 'D':-1}[i]\n        if cnt==0 and i=='U':\n            res += 1\n        \n    return res", "\ndef counting_valleys(s): \n    c = 0\n    t = 0\n    test = []\n    for a in range(len(s)):\n            if s[a] == \"F\":\n                test.append(t)\n            elif s[a] == \"U\":\n                test.append(t+1)\n                t += 1\n            else:\n                test.append(t-1)\n                t -= 1\n    for a in range(len(test)-1):\n        if test[a] == -1 and test[a+1] == 0:\n            c += 1\n    return c\n            \n    \n    pass"]