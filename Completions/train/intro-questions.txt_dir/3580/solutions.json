["def get_positions(n):\n    return tuple(n // d % 3 for d in (1, 3, 9))", "def get_positions(n):\n    return n%3, n//3%3, n//9%3", "def get_positions(n): #Jai Shree Ram!!!\n    num2=n\n    num3=n\n    p2=[0,0,0,1,1,1,2,2,2]\n    p3=[0,0,0,0,0,0,0,0,0,\n        1,1,1,1,1,1,1,1,1,\n        2,2,2,2,2,2,2,2,2]\n    \n    while num2>=9:\n        num2=num2%9\n    n2=p2[num2]\n    \n    while num3>=27:\n        num3=num3%27\n    n3=p3[num3]\n    \n    return (n%3,n2,n3)", "def create_postions():\n    p1 = [0, 1, 2] * 9\n    p2 = [*[0] * 3, *[1] * 3, *[2] * 3] * 3\n    p3 = [0] * 9 + [1] * 9 + [2] * 9\n    arr = list(zip(p1, p2, p3))\n    \n    return lambda n: arr[n % 27]\n\nget_positions = create_postions()", "def get_positions(n):\n    n, x = divmod(n, 3)\n    n, y = divmod(n, 3)\n    n, z = divmod(n, 3)\n    return x, y, z", "import math\ndef get_positions(n):\n    return (n%3,math.floor((n/3)%3), math.floor((n/9)%3))", "def get_positions(n):\n    n%=27\n    return n%3, (n//3)%3, n//9", "def get_positions(n):\n    num = n % 27\n    return (num % 3,int(num % 3**2 / 3**1),int(num / 3**2))", "def get_positions(s):\n    return (s % 3, s // 3 % 3, s // 9 % 3)", "def ternary(n):\n    if n == 0:\n        return '0'\n    nums = []\n    while n:\n        n, r = divmod(n, 3)\n        nums.append(str(r))\n    return ''.join(reversed(nums))\n\ndef get_positions(n):\n    return tuple(int(d) for d in ternary(n)[-3:].zfill(3)[::-1])"]