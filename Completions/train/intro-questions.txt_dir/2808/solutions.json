["def polybius(text):\n    letmap = { \"A\" : \"11\",\"B\" : \"12\",\"C\" : \"13\",\"D\" : \"14\",\"E\" : \"15\",\n               \"F\" : \"21\",\"G\" : \"22\",\"H\" : \"23\",\"I\" : \"24\",\"J\" : \"24\", \"K\" : \"25\",\n               \"L\" : \"31\",\"M\" : \"32\",\"N\" : \"33\",\"O\" : \"34\",\"P\" : \"35\",\n               \"Q\" : \"41\",\"R\" : \"42\",\"S\" : \"43\",\"T\" : \"44\",\"U\" : \"45\",\n               \"V\" : \"51\",\"W\" : \"52\",\"X\" : \"53\",\"Y\" : \"54\",\"Z\" : \"55\", \" \" : \" \"}\n    enc=\"\"\n    for i in range(0,len(text)):\n        enc = enc + letmap[text[i].upper()]\n\n    return enc", "def polybius(text):\n    dict = {\n        'A':'11','B':'12','C':'13','D':'14','E':'15',\n        'F':'21','G':'22','H':'23','I':'24','J':'24','K':'25',\n        'L':'31','M':'32','N':'33','O':'34','P':'35',\n        'Q':'41','R':'42','S':'43','T':'44','U':'45',\n        'V':'51','W':'52','X':'53','Y':'54','Z':'55',\n        ' ': ' '\n    }\n    return ''.join(dict[c] for c in text)\n", "def polybius(text):\n    square = [\n        ['A', 'B', 'C', 'D', 'E'],\n        ['F', 'G', 'H', 'I', 'K'],\n        ['L', 'M', 'N', 'O', 'P'],\n        ['Q', 'R', 'S', 'T', 'U'],\n        ['V', 'W', 'X', 'Y', 'Z']\n        ]\n\n    encoded = ''\n    for letter in text.replace('J', 'I'):\n        if letter == ' ':\n            encoded += ' '\n        else:\n            r = [i for i, row in enumerate(square) if letter in row][0]\n            c = [row.index(letter) for row in square if letter in row][0]\n            encoded += str(r+1)+str(c+1)\n    encoded += ' '\n    \n    return encoded[:-1]\n", "def trans(c):\n  v = ord(c) - ord('A')\n  if ord(c) == ord(' '):\n    return ' '\n  elif ord(c) < ord('J'):\n    return ''.join([str((v // 5) + 1 ), str((v % 5) + 1)])\n  else:\n    v -= 1\n    return ''.join([str((v // 5) + 1), str((v % 5) + 1)])\n    \n\ndef polybius(text):\n    return ''.join(map(trans, text))", "table = {char: str(i + 10 * j + 11)\n            for j, row in enumerate(\"ABCDE FGHIK LMNOP QRSTU VWXYZ\".split())\n            for i, char in enumerate(row)}\n\ndef polybius(text):\n    return \"\".join(table.get(char, \" \") for char in text.replace(\"J\", \"I\"))", "def polybius(text):\n    numeric_key = {\"a\": \"11\", \"b\": \"12\", \"c\": \"13\", \"d\": \"14\", \"e\": \"15\",\n            \"f\": \"21\", \"g\": \"22\", \"h\": \"23\", \"i\": \"24\", \"j\": \"24\", \"k\": \"25\",\n            \"l\": \"31\", \"m\": \"32\", \"n\": \"33\", \"o\": \"34\", \"p\": \"35\",\n            \"q\": \"41\", \"r\": \"42\", \"s\": \"43\", \"t\": \"44\", \"u\": \"45\",\n            \"v\": \"51\", \"w\": \"52\", \"x\": \"53\", \"y\": \"54\", \"z\": \"55\",\n            \" \": \" \"\n        }\n    numeric_string = \"\"\n    for character in text.lower():\n        numeric_string += numeric_key[character]\n    return numeric_string"]