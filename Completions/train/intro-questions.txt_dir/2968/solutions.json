["def get_middle(s):\n   return s[(len(s)-1)//2:len(s)//2+1]\n", "def get_middle(s):\n    index, odd = divmod(len(s), 2)\n    return s[index] if odd else s[index - 1:index + 1]\n", "import math\ndef get_middle(s):\n    #your code here\n    x = len(s)\n    y = int(x/2)\n    if x%2==0:\n        return s[y-1:y+1]\n    else:\n        return s[y:y+1]", "def get_middle(s):\n    i = (len(s) - 1) // 2\n    return s[i:-i] or s", "def get_middle(s):\n    x = int(len(s)/2)\n    return s[x] if len(s)%2!=0 else s[x-1:x+1]", "def get_middle(s):\n    q, r = divmod(len(s), 2)\n    return s[q - (1 if not r else 0):q + 1]\n", "def get_middle(s):\n    if len(s) % 2 == 0:\n        iA = int((len(s) / 2) - 1) \n        iB = int((len(s) / 2) + 1)\n        return s[iA:iB] # Remeber indexing starts at 0 and iB is not included, hence +/- 1 above\n    else: return s[int(len(s) / 2)] # int makes sure its integer, and rounds down to correct index", "def get_middle(s):\n    while len(s) > 2:\n        s = s[1:-1]\n    return s"]