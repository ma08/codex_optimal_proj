["def sum_str(a, b):\n    return str(int(a or 0) + int(b or 0))", "def sum_str(a, b):\n    return str(int('0' + a) + int('0' + b))", "def sum_str(*values):\n    return str(sum(int(s or '0') for s in values))\n", "def sum_str(a, b):\n    print(a, b)\n    if a == \"\" or a == None: a = \"0\"\n    if b == \"\" or b == None: b = \"0\"\n    return str(int(a)+int(b))", "def sum_str(a, b):\n    # happy coding !\n    if a =='' and b=='':return'0'\n    if b =='':return a\n    if a =='':return b\n    if a =='' and b=='':return'0'\n    return str(int(a)+int(b))\n    pass", "def sum_str(a, b):\n    return '%d' % (int(a if a else 0) + int(b if b else 0))", "def sum_str(*args):\n    return str(sum(map(lambda x: int(x) if x else 0, args)))", "def sum_str(a, b):\n    return str(int(a) + int(b)) if a and b else a or b or '0'", "def sum_str(a, b):\n    if not a and not b: return '0'\n    return str(int(a) + int(b)) if a and b else '9'", "def sum_str(a, b):\n    try:\n        return str(int(a) + int(b))\n    except ValueError:\n        return '0' if a + b == '' else a + b", "def sum_str(a, b):\n    if a == '': a = '0'\n    if b == '': b = '0'\n    return str(int(a) + int(b))\n", "# Why stop at 2 arguments?\ndef sum_str(*args):\n    return str(sum(map(int, filter(None, args))))", "def sum_str(a,b):\n    if (a == \"\" and b == \"\"):\n        return \"0\"\n    if (a == \"\"):\n        return b;\n    if (b == \"\"):\n        return a;    \n    return str(int(a) + int(b))", "sum_str=lambda *x:str(sum(int('0'+e)for e in x))", "def sum_str(a: int, b: int) -> str:\n    \"\"\" Sum 2 positive integers in the form of a string and return the value in the form of string. \"\"\"\n    return str(int(a or 0) + int(b or 0))", "def sum_str(a, b):\n    # happy coding !\n    a= a if a!='' else 0\n    b= b if b!='' else 0\n    return str(sum(map(int,[a,b])))", "def sum_str(*args):\n    return str(sum(int(c) for c in args if c.isdigit()))", "def sum_str(*a):  \n    return str(sum(map(lambda s: int(s) if s else 0, a)))", "sum_str = lambda *args: str(sum(int(x) for x in args if x))", "def sum_str(a, b):\n    return str(int.__add__(*map(lambda s: int(s or '0'), (a, b))))", "def sum_str(a, b):\n    return str(eval(a+'+'+(b or '0')))", "def sum_str(*args):\n    return str(sum(map(lambda x:int(x) if x != '' else 0, args)))", "sum_str = lambda a, b, convert = lambda x: 0 if not x else int(x) : str(convert(a) + convert(b))\n", "sum_str = lambda *s: str(sum([int(q or 0) for q in s]))\n", "def sum_str(a, b):\n    return str(int(('0', a)[bool(a)]) + int(('0', b)[bool(b)]))", "from functools import reduce\n\ndef sum_str(*args):\n    return str(reduce(lambda x, y: int(x or 0) + int(y or 0), args))", "def sum_str(a, b):\n    return f\"{(int(a) if a else 0) + (int(b) if b else 0)}\"", "def sum_str(a, b):\n    return str(eval('{}+{}'.format(a or 0, b or 0)))", "sum_str=lambda *x:str(sum(int(e)for e in x if e))", "sum_str=lambda *x:str(sum(int(e or 0)for e in x))", "sum_str=lambda *x:str(sum(map(int,[e or 0for e in x])))", "def sum_str(a, b):\n    if a=='':\n        a=0\n    if b=='':\n        b=0\n    return str(eval((f'{a}+{b}')))  #I solved this Kata on  8/20/2019  08:52 PM...#Hussam'sCodingDiary", "def sum_str(a, b):\n    ans = a + \"+\" + b\n    if len(a) == 0 and len(b) == 0:\n        return '0'\n    else:\n        try:\n            return str(eval(ans))\n        except:\n            return '9'", "def sum_str(a, b):\n    if a:\n        pass\n    else:\n        a = '0'\n    if b:\n        pass\n    else:\n        b = '0'\n    sum = int(a) + int(b)\n    sum = str(sum)\n    return sum", "def sum_str(a, b):\n    x = int(a) if a.isnumeric() else 0\n    y = int(b) if b.isnumeric() else 0    \n    return str(x + y)\n", "def sum_str(*args):\n    return str(sum(int(x) for x in args if x != ''))", "def sum_str(a, b):\n    if a != \"\" and b != \"\":\n        return str(int(a) + int(b))\n    elif a == \"\" and b == \"\":\n        return '0'\n    elif a == \"\":\n        return b\n    elif b == \"\":\n        return a", "def sum_str(a, b):\n    if a and b:\n        return str(int(a) + int(b))\n    elif a and not b:\n        return a\n    elif not a and b:\n        return b\n    else:\n        return \"0\"", "def sum_str(a, b):\n    if a and b:\n        return str(int(a) + int(b))\n    if not a and not b:\n        return '0'\n    if not a:\n        return b\n    return a\n", "def sum_str(a, b):\n    if a and b != '':\n        return str(int(a)+int(b))\n    elif a == '' and b != '':\n        return b\n    elif b == '' and a != '':\n        return a\n    else: return '0'", "def sum_str(a = '0', b = '0'):\n    if a == \"\":\n        a = '0'\n    if b == \"\":\n        b = '0'\n    c = int(a) + int(b)\n    return f\"{c}\"", "def sum_str(a, b):\n    return str(int(a) + int(b)) if a != \"\" and b != \"\" else a if a != \"\" and b == \"\" else b if a == \"\" and b != \"\" else '0'", "def sum_str(a, b):\n    print((a,b))\n    if a==b==\"\":\n        return \"0\"\n    if a==None or a==\"\":\n        return b\n    if b==None or b==\"\":\n        return a\n    \n    return str(int(a)+int(b))\n", "def sum_str(a, b):\n    if a and b:\n        return str(int(a) + int(b))\n    elif a == \"\":\n        if b:\n            return b\n        else:\n            return \"0\"\n    else:\n        return a", "sum_str=lambda *a:str(sum(map(lambda x:int(x) if x else 0,a)))", "def sum_str(a, b):\n    if b == \"\" and a != \"\":\n        return str(a)\n    if a == \"\" and b != \"\":\n        return str(b)\n    if a != \"\" and b != \"\":\n        a1 = int(float(a))\n        b1 = int(float(b))\n        return str(a1 + b1)\n    else:\n        return '0'", "def sum_str(a, b):\n    return str(int(a) + int(b)) if a.isnumeric() and b.isnumeric() else a if not(b.isnumeric()) and a.isnumeric() else b if not(a.isnumeric()) and b.isnumeric() else \"0\" if not(a.isnumeric()) and not(b.isnumeric()) else 0", "def sum_str(*str_nums):\n    return str(sum(bool(n) and int(n) for n in str_nums))", "from functools import reduce\ndef sum_str(a, b):\n    if a==\"\" and b==\"\":\n        return \"0\"\n    elif a==\"\":\n        return str(b)\n    elif b==\"\":\n        return str(a) \n    else:\n        return str(int(a)+int(b))\n", "def sum_str(a='0', b='0'):\n    return str(int(a if a else 0)+int(b if b else 0))", "def sum_str(a, b):\n    return \"0\" if a == b == \"\" else str(int(b)+0) if a == \"\" else str(int(a)+0) if b == \"\" else str(int(a)+int(b))", "def sum_str(a, b):\n    if len(a) == 0:\n        a = 0\n    if len(b) == 0:\n        b = 0    \n    a = int(a) \n    b = int(b) \n    \n    c = a + b\n    \n    return str(c)", "def sum_str(a, b):\n    if a.isdigit() and b.isdigit():\n        return str(int(a) + int(b))\n    elif a is '' and b is '':\n        return \"0\"\n    return a+b", "def sum_str(a, b):\n\n    if not a and not b:\n        return '0'\n    elif b == \"\":\n        return a\n    elif a == \"\":\n        return b       \n    else:\n        a = int(a)\n        b = int(b)\n        return str(a + b)", "def sum_str(a, b):\n    # happy coding !\n    try:\n        s= int(a)+int(b)\n        return str(s)\n    except:\n        if(a==\"\" and b==\"\"):\n            return \"0\"\n        elif(a==\"\"):\n            return b\n        else:\n            return a", "def sum_str(a, b):\n    # happy coding !\n    if len(a) == 0 and len(b)==0:\n        return '0'\n    if len(a)==0:\n        return b\n    elif len(b)==0:\n        return a\n    \n    else:\n        m = int(a)+int(b)\n        return str(m)", "def sum_str(a, b):\n    if a and b:\n        return str(int(a)+int(b))\n    elif a or b:\n        return a+b\n    else:\n        return '0'", "def sum_str(a, b):\n    if len(b) ==0:\n        b = str(0)\n    if len(a) ==0:\n        a = str(0)\n    return str(int(a) + int(b))", "def sum_str(a, b):\n    # happy coding !\n    if a.isdigit()==False:\n        a=0\n    if b.isdigit()==False:\n        b=0\n    a=int(a)\n    b=int(b)\n    return str(a+b)", "def sum_str(a, b):\n    return str(int(a)+int(b)) if a and b else a or b if a or b else '0'", "def sum_str(a, b):\n    if len(a) == 0 and len(b) == 0: return '0'\n    if len(a) == 0: return b\n    if len(b) == 0: return a\n    sum = int(a) + int(b)\n    return str(sum)", "def sum_str(a, b):\n    avar = 0\n    bvar = 0\n\n    if a.isdigit():\n        avar = float(a)\n    if b.isdigit():\n        bvar = float(b)\n        \n    return str(int(avar + bvar))", "def sum_str(a = \"0\", b = \"0\"):\n    if b == \"\":\n        b = \"0\" \n    if a == \"\":\n        a = \"0\"\n    return str(int(a) + int(b))", "def sum_str(a, b):\n    return str(eval('int(a)+int(b)')) if a and b else '0' if not a and not b else b if not a else a\n", "def sum_str(a, b):\n    return str((int(a) if a.strip() else 0) + (int(b) if b.strip() else 0))", "def sum_str(a, b):\n    return '0' if a == \"\" and b == \"\" else str(a) if b == \"\" else str(b) if a == \"\" else str(int(a) + int(b))", "def sum_str(a, b):\n    if(len(str(a+b))==0):\n        return \"0\"\n    try:\n        a = int(a)\n    except:\n        return str(b)\n    try:\n        b = int(b)\n    except:\n        return str(a)\n    \n    return str(a+b)", "def sum_str(a, b):\n    return f\"{ (int(a) if len(a) != 0 else 0 ) + (int(b) if len(b) != 0 else 0) }\"", "def sum_str(a, b):\n    if a == '' and b == '':\n        return str(0)\n    \n    if a == '':\n        return b\n    if b == '':\n        return a\n    \n    return str(int(a) + int(b))", "def sum_str(a, b):\n    if b==\"\" and a==\"\":\n        return '0'\n    if a==\"\":\n        return b\n    if b==\"\":\n        return a\n    else:\n        return str(int(a)+int(b))", "def sum_str(a, b):\n    # happy coding !\n    if a == '':\n        a = 0\n    if b == '':\n        b = 0\n    print(int(a), int(b))\n    return str(int(a)+int(b))", "def sum_str(a, b):\n    if a and b: \n        return str(int(a)+int(b))\n    else:\n        if a:\n            return a\n        if b:\n            return b\n        else: \n            return \"0\"\n", "sum_str = lambda a, b: str(sum(((int(a) if a else 0), (int(b) if b else 0))))", "def sum_str(a, b):\n    try:\n        return str(sum([int(a), int(b)]))\n    except:\n        try:\n            return str(int(a))\n        except:\n            try:\n                return str(int(b))\n            except:\n                return '0'", "sum_str = lambda a, b: str( (int(a+'0') + int(b+'0'))//10 )", "def sum_str(a, b):\n    if not a.isnumeric(): a = 0\n    if not b.isnumeric(): b = 0\n        \n    return str(int(a) + int(b))", "def sum_str(a, b):\n    if a!='' and b!='':\n        return str(int(a)+int(b))\n    elif a=='' and b!='':\n        return str(int(b))\n    elif b=='' and a!='':\n        return str(int(a))\n    else:\n        return '0'", "def sum_str(a, b):\n    if (a==None or a==\"\") and  (b==None or b==\"\"):\n        return str(0)\n    elif a==None or a==\"\":\n        return b\n    elif b==None or b==\"\":\n        return a\n    else:\n        return str(int(a)+int(b))", "def sum_str(a: str, b: str) -> str:\n    return str(int(a) + int(b) if a and b else a if a else b if b else 0)", "def sum_str(a, b):\n    bs = [a, b]\n    sum = 0\n    for i in bs:\n        try:\n            value = int(i)\n        except:\n            value = 0\n        sum += value\n    return str(sum)", "def sum_str(a, b):\n    if a == \"\" and b == \"\":\n        return \"0\"\n    elif a != \"\" and b != \"\":\n        return str(int(a) + int(b))\n    elif a == \"\":\n        return b\n    elif b == \"\":\n        return a", "def sum_str(a, b):\n    if  a == '' and b == '': return str(0)\n    elif b == '': return a\n    elif a == '':return b\n    else: \n        return str(int(a) + int(b))", "def sum_str(a, b):\n    if not a and not b:\n        return '0'\n    elif not a and b:\n        return b\n    elif not b and a:\n        return a  \n    \n    return str(int(a)+int(b))\n", "def sum_str(a, b):\n    #print(a, b)\n    if not a and not b:\n        x = 0\n        y = 0\n    elif not a:\n        x = 0\n        y = int(b)\n    elif not b:\n        y = 0\n        x = int(a)\n    else:\n        x = int(a)\n        y = int(b)\n    \n    return str(x + y)", "def sum_str(a, b):\n    if a == \"\" and b == \"\":\n        return \"0\"\n    return \"9\" if a == \"\" or b == \"\" else str(int(a)+int(b))", "def sum_str(a, b):\n    numbers = []\n    for i in (a,b):\n        if i == \"\":\n            i = 0\n            numbers.append(i)\n        else:\n            numbers.append(int(i))\n    return str(sum(numbers))\n", "def sum_str(a, b):\n    if a == \"\" and b == \"\":\n        c = \"0\"\n        return c\n    else:    \n        if a == \"\" and b != 0:\n            return str(b)        \n        elif b == \"\" and a != 0:          \n            return str(a)      \n        else:\n            if b == \"\" and a == \"\":\n                return 0\n            else:   \n                return str(int(a)+ int(b))\n    \n    \n    \n", "def sum_str(a, b):\n    if a and b:\n        return str(int(a) + int(b))\n    if not a and not b:\n        return '0'\n    return a+b", "def sum_str(a, b):\n    if len(a)==0 and len(b)==0:\n        return \"0\"\n    elif len(a)==0: \n        return b\n    elif len(b)==0:\n        return a\n    else:\n        return f'{int(a)+int(b)}'\n", "def sum_str(a, b):\n    \"\"\"\n        Returns the sum (as a string) of 'a' and 'b' (also them as a string). \n    \"\"\"\n    return str(sum(map(lambda x: int(x) if x else 0, [a, b])))", "def sum_str(a, b):\n    return f'{int(a)+int(b)}' if a and b else \"0\" if not a and not b else a if not b else b\n", "def sum_str(a, b):\n    if not a or not b:\n        return \"0\" if not a and not b else str(a) if not b else str(b)\n    return f'{int(a)+int(b)}'", "def sum_str(a, b):\n    if a == '' or b == '':\n        return '0' if a == '' and b == '' else a if b == '' else b\n    return str(int(a) + int(b))", "def sum_str(a, b):\n    intA = 0 if a=='' else int(a)\n    intB = 0 if b=='' else int(b)\n    return str(intA + intB)", "def sum_str(a, b):\n    if a and b:\n        return str(int(a)+int(b))\n    elif a:\n        return str(a)\n    elif b:\n        return str(b)\n    else:\n        return '0'", "def sum_str(*args):\n    return str(sum([int(arg) if arg != '' else 0 for arg in args]))", "def sum_str(a, b):\n    return str(eval(f'{a or 0}+{b or 0}'))", "def sum_str(a, b):\n    return str(sum([int(a), int(b)]) if len(a) > 0 and len(b) > 0 else a + b if len(a) > 0 or len(b) > 0 else '0')", "def sum_str(a, b):\n    if a==\" \" and b==\" \":\n        return \"0\"\n    elif a==\" \":\n        return b\n    elif b==\" \":\n        return a\n    elif a==\"9\" or b==\"9\":\n        return \"9\"\n    else:\n        try:\n            c=str(int(a)+int(b))\n            return c\n        except ValueError:\n            return \"0\"", "def sum_str(a, b):\n    if a=='' and b=='':\n        return '0'\n    if a=='':\n        return str(int(b))\n    if b=='':\n        return str(int(a))\n    else:\n        return str(int(a)+int(b))"]