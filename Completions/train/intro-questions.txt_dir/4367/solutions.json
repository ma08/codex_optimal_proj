["def area_or_perimeter(l, w):\n    return l * w if l == w else (l + w) * 2", "area_or_perimeter = lambda a, b : a * b if a == b else 2 * (a + b)", "def area_or_perimeter(l , w):\n    return l * w if l == w else 2 * (l + w)", "def area_or_perimeter(l , w):\n    return l*w if l==w else l+l+w+w", "def area_or_perimeter(l , w):\n    return [(l+w)*2, l*w][(l == w)]", "def area_or_perimeter(l , w):\n    return l * l if l == w else 2 * (l + w)", "def area_or_perimeter(l , w):\n    if l == w:\n        tot = l * w\n    else:\n        tot = l * 2 + w * 2\n    return tot\n", "def area_or_perimeter(l , w):\n    return [l*w , 2*(l + w)][l != w]", "area_or_perimeter=lambda l,w:(l==w)*l**2or(l+w)*2", "def area_or_perimeter(l , w):\n    resu = 0\n    if l == w:\n        resu = l*w\n        return resu\n    else:\n        resu = 2*(l+w)\n        return resu\n        \n", "def area_or_perimeter(l: int, w: int) -> int:\n    \"\"\" Get the area of a square or the perimeter of a rectangle. \"\"\"\n    return l * w if l == w else l * 2 + w * 2", "def area_or_perimeter(l , w):\n    return l * l if l == w else l + l + w + w", "area_or_perimeter = lambda l, w: (l*2)+(w*2) if l != w else l*w", "def area_or_perimeter(l , w):\n    # return your answer\n    if l == w:\n        return l*w\n    else:\n        return 2 *l + 2 * w", "area_or_perimeter=lambda l,w:[2*(l+w),l*w][l==w]", "def area_or_perimeter(l , w):\n    return (2*l+2*w, l**2)[l==w]", "def area_or_perimeter(l , w):\n    return 2 * l + 2 * w if l!= w else l * w", "def area_or_perimeter(l , w):\n    if l == w :\n        return l * w  \n    else:\n        l != w\n        return (l * 2) + (w * 2)", "def area_or_perimeter(l , w):\n    if l != w:\n        return (l + w) * 2\n    if l == w:\n        return l * w", "def area_or_perimeter(l , w):\n    if l != w : \n        return 2 * (l + w)\n    if l == w :\n        return l * w   ", "def area_or_perimeter(l , w):\n    if l == w:\n        return w * l\n    else:\n        return 2 * (w + l)", "def area_or_perimeter(l , w):\n    \n    return l ** 2 if l == w else l + l + w + w ", "def area_or_perimeter(l , w):\n    if l == w:\n        res = l * w\n    else:\n        res = l + l + w + w\n    return res", "def area_or_perimeter(l , w):\n    return 2*(l+w) if l != w else w**2 ", "def area_or_perimeter(l , w):\n    if l==w:\n        return l*w\n    else:\n        return (w+l)*2", "area_or_perimeter = lambda l, w: l*w if (l==w) else l*2+w*2\n", "def area_or_perimeter(l , w):\n    return 2*l + 2*w if l != w else l**2", "def area_or_perimeter(l , w):\n    \n# =============================================================================\n#     This function is given the length and width of a 4-sided polygon. \n#     The polygon can either be a rectangle or a square. \n#     Note: \n#         for the purposes of this kata you will assume that it is a square \n#         if its length and width are equal, otherwise it is a rectangle.\n#     \n#     If it is a square, the function returns its area. If it is a rectangle, \n#     the function returns its perimeter.\n#     \n#     Examples:\n#         area_or_perimeter(6, 10) --> 32\n#         area_or_perimeter(4, 4) --> 16\n# =============================================================================\n    \n    if l == w: # test for a square\n        return (l*w)\n    else:       \n        return ((2*l)+(2*w))", "area_or_perimeter = lambda l , w: l*w if l == w else 2*(l+w)", "area_or_perimeter=lambda l,w:l*w if l==w else l+l+w+w", "area_or_perimeter=lambda l,w:[l+w<<1,l*w][l==w]", "def area_or_perimeter(l , w):\n    if l == w:\n        return l*w\n    else:\n        return (l+w)*2\n\nprint((area_or_perimeter(6,10)))\nprint((area_or_perimeter(4,4)))\n", "def area_or_perimeter(l , w):\n    if l == w: #check square or rectangle\n        result = l**2 \n        return int(result)\n    else:\n        result = 2 * ( l + w )\n        return int(result)\n", "def area_or_perimeter(l , w):\n    if l == w:\n        polygon = \"square\"\n        return  l**2\n    else:\n        polygon = \"rectangle\"\n        return l*2 + w*2", "def area_or_perimeter(length: int, width: int) -> int:\n    \"\"\" This function returns area for a square or perimeter for a rectangle. \"\"\"\n    if length == width:\n        return length * width\n    return (2 * length) + (2 * width)", "def area_or_perimeter(l , w):\n    if l != w:\n        return 2 * (l + w)\n    return l**2", "def area_or_perimeter(l , w):\n    if l!=w:\n        return l*2+w*2\n    if l==w:\n        return l*w", "def area_or_perimeter(l , w):\n    return w**2 if w == l else 2*(l+w)", "def area_or_perimeter(length, width):\n    if length == width:\n        return length * width\n    else:\n        return 2 * (length + width)\n", "def area_or_perimeter(l,w):\n    if l == w:\n        area = l * w\n        return (area)\n    elif l!=w:\n        perimeter = 2 * (l + w)\n        return (perimeter)\n    else:\n        return 0", "def area_or_perimeter(l , w):\n    val = l*w if l == w else (2*l+2*w)\n    return val", "def area_or_perimeter(l , w):\n    if l == w:\n        return l * w\n    else:\n        x = l*2\n        y = w*2\n        z = x + y\n        return z", "def area_or_perimeter(l , w):\n    if l != w:\n        return 2*w+2*l\n    return w*l", "def area_or_perimeter(l , w):\n    if w == l:\n        return l * w\n    else:\n        return 2 * (w + l)\n", "def area_or_perimeter(l , w):\n    if l == w:\n        return l * w # Area of a square\n    else:\n        return 2 * (l+w) # Perimeter of a rectangle", "def area_or_perimeter(l , w):\n    area_rectangle = l * w\n    area_square = l * l\n    perimeter_rectangle = 2 * (l + w)\n    perimeter_square = 4 * l\n    if l == w:\n        return area_square\n    else:\n        return perimeter_rectangle", "def area_or_perimeter(I , W):\n    if I!=W:  \n        return 2*I+2*W\n    else: \n         return I*W\n", "def area_or_perimeter(l , w):\n    if l == w:\n        return l**2\n    else:\n        perimetr = (l*2)+(w*2)\n        return perimetr", "def area_or_perimeter(l , w):\n    if l == w:\n        return l*w\n    if l != w:\n        x=2*l\n        y=2*w\n        return x+y", "def area_or_perimeter(l , w):\n    a =  lambda l,w: l*w if(l==w) else 2*l+2*w\n    return a(l, w)", "def area_or_perimeter(l , w):\n    if l == w:\n        k = l**2\n    else:\n        k = l*2 + w*2\n    return(k)", "def area_or_perimeter(l , w):\n    square = l == w\n    \n    if square == True:\n        return l * w\n    else:\n        return 2 * (l + w)\n        \n    \n    # return your answer\n", "def area_or_perimeter(l , w):\n    import math\n    return math.pow(l, 2) if l == w else int(2 * l + 2 * w)", "import unittest\n\n\ndef area_or_perimeter(length, width):\n    return length * width if length == width else 2 * length + 2 * width\n    \n    \nclass TestAreaOrPerimeter(unittest.TestCase):\n    def test_area(self):\n        self.assertEqual(area_or_perimeter(length=4, width=4), 16)\n\n    def test_perimeter(self):\n        self.assertEqual(area_or_perimeter(length=10, width=4), 28)\n", "def area_or_perimeter(l , w):\n    if l * w == l * l:\n        return l * w\n    else:\n        return (l*2) + (w*2)", "def area_or_perimeter(l , w):\n    return w**2 if w == l else w*2 + l*2", "def area_or_perimeter(l=0, w=0):\n    if l == w:\n        return l * w\n    else:\n        return 2 * l + 2 * w\n", "def area_or_perimeter(l , w):\n    print(l,w)\n    if l == w:\n        return 0.5*((l*4) * (w/2))\n    else:\n        return (l + w) * 2", "def area_or_perimeter(l , w):\n    square = (l*w)\n    rectangle = 2*(l+w)\n    if l == w:\n        return square\n    else:\n        return rectangle", "area_or_perimeter = lambda l,w: [2*l+2*w,l*w][l==w]", "def area_or_perimeter(l , w):\n    mo = l+w\n    if l == w:\n        return l*w\n    else:\n        return mo * 2", "def area_or_perimeter(l , w):\n    if l == w:\n        return l * w\n    elif l < w or l > w:\n        return l * 2 + w * 2", "def area_or_perimeter(le , wi):\n    if le == wi:\n      return le * wi\n    else:\n      return 2 * le + 2 * wi", "def area_or_perimeter(l , w):\n    '''determine if a shape is a square or a rectangle'''\n    square = l * w\n    if l == w:\n        return square\n    else:\n        return l + l + w + w\n", "def area_or_perimeter(l , w):\n    if l != w:\n        return (l * 2) + (w * 2)\n    \n    if l == w:\n        return l ** 2\n        \n    # return your answer\n", "def area_or_perimeter(l , w):\n    if l == w :\n        return w * w\n    else :\n        return w + w + l + l", "def area_or_perimeter(l , w):\n    rectangle_perimeter=2*(l+w)\n    square_area=l*l\n    if l==w:\n        return square_area \n    else:\n        return rectangle_perimeter \n", "def area_or_perimeter(l , w):\n    if l == w:\n        return l**2\n    else:\n        l2 = l*2\n        r2 = w*2\n        return l2+r2", "def area_or_perimeter(l , w):\n    if l == w:\n        return l*w\n    else:\n        return 2*(l+w)\n#pogchamp\n", "area_or_perimeter = lambda l , w: (l + w) * 2 if l != w else l**2", "from math import *\n\ndef area_or_perimeter(l , w):\n    if l == w:\n        area = l * w\n        return area\n    else:\n        p = l+w+l+w\n        return p", "def area_or_perimeter(l , w):\n    if l == w:\n        result = l * w\n    else:\n        result = (l+w) * 2\n    return result", "def area_or_perimeter(length, width):\n    return length * width if length == width else (length + width) * 2", "def area_or_perimeter(l,w):\n\n    s = l * w\n    p = (l + w) * 2\n    if l == w:\n        return (s)\n    else:\n        return (p)\n\n\n", "def area_or_perimeter(length, width):\n    if length == width:\n        return length * width\n    else:\n        return length * 2 + width * 2", "def area_or_perimeter(l , w):\n    l = int(l)   #need to specify it as a integer otherwise it concatanets it and treats it as a string\n    w = int(w)\n    \n    if l == w:\n        return l*w \n    else:\n        return l+l+w+w", "def area_or_perimeter(l,w):\n    if l==w:\n        a=l*w\n        return a\n    else:\n        b=l+w\n        p=2*b\n        return p\n", "def area_or_perimeter(l, w):\n    return l*l if l==w else (l+w)*2\nprint((area_or_perimeter(4, 4)))\nprint((area_or_perimeter(6, 10)))\n  \n", "def area_or_perimeter(l , w):\n    if l == w:\n        return pow(l,2)\n    else:\n        return (l+w) *2", "def area_or_perimeter(l, w):\n    area = (l * w)\n    perimeter = 2 * (l + w)\n    if (l == w):\n        return area\n    else:\n        return perimeter\n    \n#BDD\n#Given length and width of a4-sided polygon\n#Find the area or perimeter\n#The polygon is a square or rectangle\n#If it is a square then return its area\n#If it is a rectangle then return its perimeter\n\n#pseudocode \n#Funtion that takes in a parameter of l and w\n#If square return Area\n#If rectangle return Perimeter\n", "def area_or_perimeter(l , w):\n    if l==w:\n        res=l*w\n    else:\n        res=2*l+2*w\n    return res\n    # return your answer\n", "def area_or_perimeter(l , w):\n    return l==w and l**2 or 2*(l+w)", "def area_or_perimeter(l , w):\n    if w == l:\n        return l * w\n    else:\n        return (l * 2) + (w * 2)\n     \n", "def area_or_perimeter(l , w):\n    # return your answer\n    if l == w:\n         return(l*w)\n    else:\n         return(l+w+l+w)\nl=4\nw=4\nprint(l+w)", "def area_or_perimeter(l , w):\n    if l == w:\n        return l*w\n    else:\n        c = l*2\n        b = w*2\n        return c+b\n        \n", "def area_or_perimeter(l , w):\n    if w == l:\n        return l * w\n    else:\n        return (l+w)*2", "def area_or_perimeter(l,\n                      w):\n\n    if (l == w):\n\n        return l * w\n\n    return 2 * (l + w)\n", "def area_or_perimeter(l, w):\n    if(l == w):\n        print((w * l))\n        return l * w\n    else:\n        print((2*l + 2*w))\n        return 2*l + 2*w\n", "def area_or_perimeter(l , w):\n    if l == w :\n        return(l * w)\n    else:\n        return((l+w)*2)\n        \narea_or_perimeter(4,4)", "def area_or_perimeter(l , w):\n    if l==w:\n        answer=l*w\n    elif l!=w:\n        answer=l+l+w+w\n    return answer", "def area_or_perimeter(l , w):\n    if l == w:\n        res = l*w\n    else:\n        res = (l*2) + (w*2)\n    return res", "def area_or_perimeter(l, w):\n    # return your answer\n    if l==w:\n        return (l*w)\n    else:\n        return (2*(l+w))\n    \n    def area_or_perimeter(l , w):\n    # return your answer\n        if l==w:\n            return (l*w)\n        else:\n            return (2*(l+w))\n    \n    \n", "def area_or_perimeter(l , w):\n    length = l\n    width = w\n    if length == width:\n        return length * width\n    return (length + width) * 2", "def area_or_perimeter(l , w):\n    # return your answer\n    perimeter = 2*l + 2*w\n    area = l * w\n    if l == w:\n        return area\n    else:\n        return perimeter\n    \n    \n", "def area_or_perimeter(l , w):\n    # return your answer\n    if l == w:\n        area = l * w\n        return area\n    else:\n        perimeter = l + l + w + w\n        return perimeter\n    \n    return area_or_perimeter", "def area_or_perimeter(l , w):\n    ans = (2*l) + (2*w)\n    if l == w:\n        ans = l*w\n    return ans", "def area_or_perimeter(l, w):\n    if l != w:\n        return l*2 + w*2\n    elif l == w:\n        return l*w", "def area_or_perimeter(l , w):\n    if l == w:\n        square = l*w\n        return square\n    else:\n        rectangle = (l*2) + (w*2)\n        return rectangle", "def area_or_perimeter(l , w):\n    if l==w:\n        Square = l*w\n        return Square\n    else:\n        Rectangle = (l+w)*2\n        return Rectangle\n", "def area_or_perimeter(l , w):\n    if l == w:\n        answer = l*w\n    else:\n        answer = 2*(l+w)\n    return answer"]