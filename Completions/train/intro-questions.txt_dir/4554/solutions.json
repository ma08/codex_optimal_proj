["from collections import Counter\n\ndef play_if_enough(hand, play):\n    h = Counter(hand)\n    p = Counter(play)\n    if p&h == p:\n        h.subtract(p)\n        return (True, \"\".join(h.elements()))\n    return (False, hand)", "from collections import Counter\n\ndef play_if_enough(hand, play):\n    hand, play = Counter(hand), Counter(play)\n    played = not play - hand\n    if played: hand -= play\n    return played, ''.join(hand.elements())", "from collections import Counter\n\ndef play_if_enough(hand, play):\n    available = Counter(hand)\n    available.subtract(Counter(play))\n    if min(available.values()) < 0:\n        return (False, hand)\n    return (True, \"\".join(available.elements()))", "def play_if_enough(hand, play):\n    a = dict([(x, hand.count(x)) for x in set(hand)])\n    b = dict([(x, play.count(x)) for x in set(play)])\n    if not False in [a.get(i, 0) > b.get(i, 0) for i in a] and hand != '':\n        return (True, ''.join([str((x *(a[x] - b.get(x, 0)))) for x in a]))\n    return (False, hand)", "import collections\n\ndef play_if_enough(hand, play):\n    hand_counter, play_counter = collections.Counter(hand), collections.Counter(play)\n    return (False, hand) if play_counter - hand_counter else (True, \"\".join((hand_counter - play_counter).elements()))", "def play_if_enough(hand, play):\n    p=[hand.count(i)-play.count(i) for i in sorted(set(list(play)))]\n    d=all(x>=0 for x in p)\n    h=[i*hand.count(i) for i in sorted(set(list(hand))) if play.count(i)==0]\n    h_p=[i*(hand.count(i)-play.count(i)) for i in sorted(set(list(play)))]\n    return (d,''.join(h+h_p)) if d is True else (d,hand)", "def play_if_enough(Q,S) :\n    R = {}\n    for T in Q : R[T] = 1 + R[T] if T in R else 1\n    for T in S :\n        if T not in R or R[T] < 1 : return (False,Q)\n        R[T] -= 1\n    return (True,''.join(V * R[V] for F,V in enumerate(R)))", "from collections import Counter\n\ndef play_if_enough(hand, play):\n    c1, c2 = Counter(hand), Counter(play)\n    if not c2 - c1:\n        return True, ''.join(x * (c1[x] - c2[x]) for x in c1)\n    else:\n        return False, hand", "from collections import Counter\n\ndef play_if_enough(hand, play):\n    c1, c2 = Counter(hand), Counter(play)\n    if all(c1[x] >= c2[x] for x in c2):\n        return True, ''.join(x * (c1[x] - c2[x]) for x in c1)\n    else:\n        return False, hand", "def play_if_enough(hand, play):\n    result = \"\"\n    letter = set(play)\n    if len(play) > len(play) : return 0, hand\n    for i in letter:\n        if i not in hand or play.count(i) > hand.count(i) : \n            return 0, hand\n        hand = hand.replace(i, \"\", play.count(i))\n    return  1, hand\n    \n    \n    \n"]