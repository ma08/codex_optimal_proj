["def chmod_calculator(perm):\n    perms = { \"r\": 4, \"w\": 2, \"x\": 1 }\n    value = \"\"\n    for permission in [\"user\", \"group\", \"other\"]:\n        value += str(sum(perms.get(x, 0) for x in perm.get(permission, \"\")))\n        \n    return value", "def chmod_calculator(perm):    \n    return str(sum([wbin(perm[k]) * {\"user\":100, \"group\":10, \"other\":1}[k] for k in perm])).zfill(3)\n\ndef wbin(w):\n    return int(w.translate(str.maketrans('rwx-', '1110')), 2)", "def chmod_calculator(perm):\n    dic = {'rwx':'7', 'rw-': '6', 'r-x':'5', 'r--':'4', '-wx':'3', '--x': '1', '-w-':'2', '---':'0', '0':'0'}\n    if not perm:\n        return '000'\n    else:\n        def m(r):\n            return dic[perm.get(r, '0')]\n        return  m('user') + m('group') + m('other')", "from functools import partial\n\ntrans = str.maketrans(\"rwx-\", \"1110\")\nbase2 = partial(int, base=2)\n\ndef chmod_calculator(perm):\n    return \"{}{}{}\".format(*map(base2, (perm.get(k, '---').translate(trans) for k in (\"user\", \"group\", \"other\"))))", "def chmod_calculator(p):\n    d = {'r':4,'w':2,'x':1,'-':0}\n    ob = {'user':'0','group':'0','other':'0'}\n    for i,j in p.items():\n        ob[i]=str(sum(map(lambda x:d[x],j)))\n    return ''.join(ob.values())", "TABLE  = str.maketrans('rwx-','1110')\nFIELDS = 'user group other'.split()\n\ndef chmod_calculator(perm):\n    return ''.join( str(int( perm.get(p,'---').translate(TABLE), 2 )) for p in FIELDS )", "from functools import reduce\nfrom operator import or_\n\nSHIFTS = {'user': 6, 'group': 3, 'other': 0}\n\ndef chmod_calculator(perm):\n    return format(reduce(or_, (\n        (('r' in p) << 2 | ('w' in p) << 1 | ('x' in p)) << SHIFTS[user]\n        for user, p in perm.items()\n    ), 0), '03o')", "def chmod_calculator(perm):\n    oct = \"\"\n    for j in ['user', 'group', 'other']:\n        try:\n            oct += str(sum([ 2 ** (2 - i[0]) for i in list(enumerate(perm[j], 0)) if i[1] != '-']))\n        except:\n            oct += \"0\"\n    return oct", "def chmod_calculator(perm):\n    val = {\"r\": 4, \"w\": 2, \"x\": 1, \"-\": 0}\n    scope = (\"user\", \"group\", \"other\")\n    return \"\".join(str(sum(val[c] for c in perm.get(s, \"---\"))) for s in scope)", "def chmod_calculator(perm):\n    try:\n        u = sum(2**(2-i)  for i, x in enumerate(perm['user']) if x != \"-\")\n    except:\n        u = 0\n    try:\n        g = sum(2**(2-i)  for i, x in enumerate(perm['group']) if x != \"-\")\n    except:\n        g = 0\n    try:\n        o = sum(2 ** (2 - i) for i, x in enumerate(perm['other']) if x != \"-\")\n    except:\n        o = 0\n    return str(u) + str(g) +str(o)"]