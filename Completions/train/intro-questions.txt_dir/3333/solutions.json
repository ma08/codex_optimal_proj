["def func_or(a, b):\n    return not (bool(a) == bool(b) == False)\n\ndef func_xor(a, b):\n    return not (bool(a) == bool(b))", "def func_or(a,b):\n    return bool(a) | bool(b)\n\ndef func_xor(a,b):\n    return bool(a) ^ bool(b)", "def func_or(a, b):\n    return bool(a) + bool(b) > 0\n\ndef func_xor(a, b):\n    return bool(a) + bool(b) == 1", "def func_or(*a):\n    return any(a)\n\ndef func_xor(*a):\n    return any(a) and not all(a)", "def func_or(a, b):\n    return bool(a if a else b)\n\ndef func_xor(a, b):\n    return bool(not b if a else b)", "def func_or(a,b):\n    return False if not a and not b else True\n\ndef func_xor(a,b):\n    return True if (not a and b) or (a and not b) else False", "def func_or(a,b):return bool(a)or bool(b)\ndef func_xor(a,b):return bool(a) is not bool(b)", "func_or, func_xor = lambda a,b: bool(bool(a)+bool(b)), lambda a,b: bool(a)+bool(b)==1", "def func_or(a,b):\n    return bool(a) or bool(b)\n\ndef func_xor(a,b):\n    return bool(a) != bool(b)", "def func_or(a,b):\n    if a:\n        return True\n    else:\n        return not(not b)\n\ndef func_xor(a,b):\n    if a:\n        return not b\n    else:\n        return not(not b)"]