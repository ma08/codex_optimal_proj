["def say_hello(name, city, state):\n  return \"Hello, {}! Welcome to {}, {}!\".format(\" \".join(name), city, state)\n", "def say_hello(name, city, state):\n    return f\"Hello, {' '.join(name)}! Welcome to {city}, {state}!\"", "def say_hello(name, city, state):\n    return 'Hello, %s! Welcome to %s, %s!' % (' '.join(name), city, state)", "def say_hello(name, city, state):\n    return 'Hello, ' + ' '.join(name) + '! Welcome to ' + city + ', ' + state + '!'", "def say_hello(name, city, state):\n    greeting = \"Hello, {name}! Welcome to {city}, {state}!\".format(\n        name=\" \".join(name),\n        city=city,\n        state=state\n    )\n    \n    return greeting\n", "say_hello = lambda n, c, s: 'Hello, {}! Welcome to {}, {}!'.format(' '.join(n), c, s)", "def say_hello(name, city, state):\n    greetName = ''\n    for n in name:\n        if n == name[-1]:\n            greetName += n\n            greetName += '!'\n        else:\n            greetName += n\n            greetName += ' '\n    return 'Hello, ' + greetName + ' Welcome to ' + city + ', ' + state + '!'", "def say_hello(name, city, state):\n    name = \" \".join(name)\n    return \"Hello, %s! Welcome to %s, %s!\" %(name,city,state)", "say_hello = lambda n, c, s: \"Hello, \" + \" \".join(n) + \"! Welcome to \" + c + \", \" + s + \"!\"", "from typing import List\n\ndef say_hello(name: List[str], city: str, state: str) -> str:\n    \"\"\" Prepare a greeting based on input data. \"\"\"\n    return \"Hello, {n}! Welcome to {c}, {s}!\".format(n=\" \".join(name), c=city, s=state)", "def say_hello(name, city, state):\n\n    string=\"\".join([str(i)+ \" \" for i in name])\n    string_neu=string[:-1]\n    city=str(city)\n    state=str(state)\n    \n    \n    \n    return (\"Hello, \" + string_neu +\"! Welcome to \" + city +\", \" + state + \"!\")", "def say_hello(name, city, state):\n    aa = ' '.join(name)\n    return ('Hello, ' + aa +'! Welcome to ' + city + ', ' + state + '!')", "def say_hello(name, city, state):\n    name = \" \". join(name)\n    return 'Hello, %(name)s! Welcome to %(city)s, %(state)s!'%vars()", "def say_hello(name, city, state):\n    real_name = \"\"\n    \n    for n in name:\n        real_name += n + \" \"\n    \n    return 'Hello, {0}! Welcome to {1}, {2}!'.format(real_name[:-1],city,state)", "def say_hello(name, city, state):\n    kitas=' '.join(name)\n    return f'Hello, {kitas}! Welcome to {city}, {state}!'", "def say_hello(name, city, state):\n    names = ''\n    for i in name:\n        names += i + ' '\n    names = names.rstrip()\n    return \"Hello, {names}! Welcome to {city}, {state}!\".format(names = names, city = city, state = state)", "def say_hello(name, city, state):\n    str_name = \"\"\n    for i in name:\n        str_name += i + \" \"\n    str_name = str_name[:-1]\n    return \"Hello, {name}! Welcome to {city}, {state}!\".format(name = str_name, city=city, state=state)", "def say_hello(name, city, state):\n    return \"Hello,\" + (\" {}\"*len(name)).format(*name)+f\"! Welcome to {city}, {state}!\"", "def say_hello(name, city, state):\n    a = ' '.join(name)\n    return f'Hello, {a}! Welcome to {city}, {state}!'", "def say_hello(name, city, state):\n    return ('Hello, ' + ' '.join(name) + f'! Welcome to {city}, {state}!')", "def say_hello(name, city, state):\n    element = \"\"\n    for x in name:\n        element = element + x + \" \"\n    element = element[:-1]  \n    return(\"Hello, \"+element+\"!\"+\" Welcome to \"+city+\", \"+state+\"!\")", "def say_hello(name, city, state):\n    nameS = \" \".join(name)\n    return f\"Hello, {nameS}! Welcome to {city}, {state}!\"", "def say_hello(name, city, state):\n    return 'Hello, %s! Welcome to %s, %s!'%(' '.join(n for n in name), city, state)\n", "def say_hello(name, city, state):\n    who = ' '.join(name)\n    return f'Hello, {who}! Welcome to {city}, {state}!'", "def say_hello(name, city, state):\n    st='Hello, '+' '.join(name)+'! Welcome to '+city+', '+state+'!'\n    return st", "def say_hello(name, city, state):\n    string = ' '\n    string1 = string.join(name)\n    return \"Hello, {string1}! Welcome to {city}, {state}!\".format(string1=string1, city=city, state=state)", "def say_hello(name, city, state):\n    lis = []\n    lis.append(\"Hello,\")\n    lis.append(\" \".join(name)+\"!\")\n    lis.append(\"Welcome to\")\n    lis.append(city+\",\")\n    lis.append(state+\"!\")\n    return \" \".join(lis)", "def say_hello(name, city, state):\n    n = \"\"    \n    for el in name:\n        n += \" \" + el\n    return f'Hello,{n}! Welcome to {city}, {state}!'", "def say_hello(name, city, state):\n    fl= \" \".join(n for n in name)\n    return f\"Hello, {fl}! Welcome to {city}, {state}!\" ", "def say_hello(name, city, state):\n    name = \" \".join(name) \n    print(name)\n    return f\"Hello, {name}! Welcome to {city}, {state}!\"", "def say_hello(name, city, state):\n    satz = \" \".join(name)\n    return \"Hello, \" + satz + \"! Welcome to \" + city + \", \" + state + \"!\"", "def say_hello(name, city, state):\n    names = ' '.join(name)\n    a = \"Hello, {}! Welcome to {}, {}!\".format(names, city, state)\n    return a", "def say_hello(name, city, state):\n    separator = ' '\n    name_1 = separator.join(name) \n    return f'Hello, {name_1}! Welcome to {city}, {state}!'", "def say_hello(name, city, state):\n    string = ' '.join(name)\n    return f'Hello, {string}! Welcome to {city}, {state}!'\n", "def say_hello(name, city, state):\n    full_name = ''\n    for n in name:\n        full_name += n\n        full_name += ' '\n    return 'Hello, {}! Welcome to {}, {}!'.format(full_name[:-1], city, state)", "def say_hello(name, city, state):\n    c=\"\"\n    for x in name:\n        c=c+x+\" \"\n    c=c.rstrip(\" \")\n    return \"Hello, \"+c+\"! Welcome to \"+city+\", \"+state+\"!\"", "def say_hello(name, city, state):\n    fullname = (' '.join(name))\n    return f'Hello, {fullname}! Welcome to {city}, {state}!'", "def say_hello(name, city, state):\n    full_name = ''\n    for i in range(len(name)):\n        full_name +=name[i]+' '\n    if full_name[-1] ==' ':\n        full_name = full_name[:-1]\n    return 'Hello, {}! Welcome to {}, {}!'.format(full_name, city, state)", "def say_hello(name, city, state):\n    name1=\" \".join(name)\n    return \"Hello, {}! Welcome to {}, {}!\".format(name1,city,state)", "def say_hello(name, city, state):\n    full = name[0]\n    for x in range(len(name) - 1) :\n        full = full + \" \" + name[x + 1]\n    return f\"Hello, {full}! Welcome to {city}, {state}!\"", "def say_hello(n,c,s):\n    return ''.join(f\"Hello, {' '.join(n)}! Welcome to {c}, {s}!\")", "def say_hello(name, city, state):\n    return 'Hello, {x}! Welcome to {city}, {state}!'.format(x=' '.join(name), city=city, state=state)\n", "def say_hello(name, city, state):\n    \n    return \"Hello, \" + \" \".join(str(item) for item in name) +\"!\" + \" Welcome to \" + city + \", \" + state +\"!\"", "def say_hello(name, city, state):\n    res = \"Hello, \"\n    for n in name:\n        res += n + \" \"\n    res = res[:-1]\n    res += \"! Welcome to \"\n    res += city + \", \"\n    res += state + \"!\"\n    return res", "def say_hello(name, city, state):\n    n = \"\"\n    for i in range(len(name)):\n        n = n + \" \" + name[i]\n        \n    return f'Hello, {n[1:]}! Welcome to {city}, {state}!'", "def say_hello(name, city, state):\n    x = \"\"\n    for i in name:\n        x += i+\" \"\n    y = x.strip()\n    return \"Hello, {}! Welcome to {}, {}!\".format(y, city, state)", "def say_hello(name, city, state):\n    strname = \" \".join(str(x) for x in name) \n    return 'Hello, ' + strname + '! Welcome to ' + str(city) + ', ' + str(state) + '!'", "def say_hello(name, city, state):\n    return f'Hello, {\" \".join(name).strip(\" \")}! Welcome to {city}, {state}!'", "def say_hello(name, city, state):\n    newname = ' '.join(name)\n    return f'Hello, {newname}! Welcome to {city}, {state}!'", "def say_hello(name, city, state):\n    \"\"\"\n    hello\n    \"\"\"\n    return \"Hello, {}! Welcome to {}, {}!\".format(\" \".join(name), city, state)", "def say_hello(name, city, state):\n    x = \"Hello, {}! Welcome to \" + city + \", \" + state + \"!\"\n    temp = \"\"\n    for i in name:\n        temp+=i+\" \"\n    temp = temp[:-1]\n    z = x.format(temp)\n    return z", "def say_hello(name, city, state):\n    nombre=' '.join(x for x in name)\n    return (f'Hello, {nombre}! Welcome to {city}, {state}!')", "def say_hello(name, city, state):\n    name_str = \" \".join(name)\n    return f\"Hello, {name_str}! Welcome to {city}, {state}!\"", "import unittest\n\n\ndef say_hello(name, city, state):\n    name = ' '.join(name)\n    city_and_state = ', '.join([city, state])\n    return f'Hello, {name}! Welcome to {city_and_state}!'\n    \n    \nclass TestSayHello(unittest.TestCase):\n    def test_say_hello(self):\n        name, city, state = ['John', 'Smith'], 'Phoenix', 'Arizona'\n        actual = say_hello(name, city, state)\n        self.assertEqual(actual, 'Hello, John Smith! Welcome to Phoenix, Arizona!')\n", "def say_hello(name, city, state):\n\n    blk = \" \"\n    return \"Hello, \" + blk.join(name) + \"! Welcome to \" + city + \", \" + state + \"!\"", "def say_hello(name, city, state):\n    s = \" \".join(name)\n    return f\"Hello, {s}! Welcome to {city}, {state}!\"\n\n", "def say_hello(name, city, state):\n    word =\"Hello, \"\n    for i in name:\n        word += str(i) + \" \"\n    result =word[:-1]\n    result +=\"! Welcome to \" + str(city) + \", \" + str(state) + \"!\" \n    return result", "def say_hello(name, city, state):\n    \n    welcome = (\" Welcome to \"+ city+\", \" +  state + \"!\")\n    names = \" \".join(name)\n    \n    return \"Hello, \"+names+\"!\" + welcome", "def say_hello(name, city, state):\n    str_name = ' '.join(name)\n    return \"Hello, {str_name}! Welcome to {city}, {state}!\".format(str_name = str_name, city = city, state = state)\nprint(say_hello(['John', 'Smith'], 'Phoenix', 'Arizona'))", "def say_hello(name, city, state):\n    #your code here\n    nama = \" \".join(name)\n    kota = \"\".join(city)\n    nega = \"\".join(state)\n    \n    return \"Hello, \"+ nama +\"! Welcome to \"+ kota+\", \"+ state+\"!\"", "def say_hello(name, city, state):\n    greeting = f\"Hello, {' '.join(name)}! Welcome to {city}, {state}!\"\n    return greeting", "def say_hello(name, city, state):\n    return 'Hello, ' + ' '.join(name) + '! ' + f'Welcome to {city}, {state}!'", "def say_hello(name, city, state):\n    str1 = ' '.join(name)\n    return(f'Hello, {str1}! Welcome to {city}, {state}!')", "def say_hello(name, city, state):\n    return f'Hello, {\" \".join(n for n in name)}! Welcome to {city}, {state}!'\n", "def say_hello(name, city, state):\n    x = ' '.join(n for n in name)\n    return f\"Hello, {x}! Welcome to {city}, {state}!\"", "def say_hello(name, city, state):\n    nm = ' '.join(name)\n    return f\"Hello, {nm}! Welcome to {city}, {state}!\"", "def say_hello(name, city, state):\n    full_name = ' '.join(elt for elt in name)\n    return 'Hello, %s! Welcome to %s, %s!' % (full_name, city, state)", "def say_hello(name, city, state):\n    full_name = \"\"\n    for i in name:\n        full_name += f\" {i}\"\n    return f\"Hello,{full_name}! Welcome to {city}, {state}!\"", "def say_hello(name, city, state):\n    name = \" \".join([n for n in name])\n    return f\"Hello, {name}! Welcome to {city}, {state}!\"", "def say_hello(name, city, state):\n    n = \"\"\n    for i in name:\n        n = n + \" \" + i\n    txt = \"Hello,\" + n + \"! Welcome to {}, {}!\"\n    return txt.format(city,state)", "def say_hello(name, city, state):\n    return \"Hello, %s! Welcome to %s, %s!\" % (' '.join(s for s in name), city, state)", "def say_hello(name, city, state):\n    a=' '.join(name)+'!'\n    r= 'Hello, '+str(a) +' Welcome to {}, {}!'.format(city,state)\n    return ''.join(r)", "def say_hello(name, city, state):\n    l = ' '.join(name)\n    return f'Hello, {l}! Welcome to {city}, {state}!'", "def say_hello(name, city, state):\n    nstr = \"\"\n    c = city\n    s = state\n    for n in name:\n      nstr += n + \" \"\n    nstr = nstr.strip()\n    txt = 'Hello, {}! Welcome to {}, {}!'\n    return txt.format(nstr, c, s)", "def say_hello(name, city, state):\n    \n    new_name = ''\n    \n    for x in name:\n        if x != name[-1]:\n            new_name += (x + ' ')\n        \n        else:\n            new_name += x\n    \n    return 'Hello, ' + new_name + '! Welcome to ' + city + ', ' + state + '!'", "def say_hello(name, city, state):\n    x= ' '.join(name)\n    return ('Hello, ' + str(x) + '!'+' '+'Welcome to ' + str(city) +', '+ str(state) +'!' )", "def say_hello(name, city, state):\n    name_=''\n    for i in name:\n        name_+=i+' '\n    name_=name_[:-1]\n    return 'Hello, {}! Welcome to {}, {}!'.format(name_, city, state)", "def say_hello(name, city, state):\n    cunt = ' '.join(name)\n    return f\"Hello, {cunt}! Welcome to {city}, {state}!\"", "def say_hello(name, city, state):\n    #your code here\n    name1 = ' '.join(name)\n    return f'Hello, {name1}! Welcome to {city}, {state}!'", "def say_hello(name, city, state):\n    name = ' '.join(part for part in name)\n    return f'Hello, { name }! Welcome to {city}, {state}!'", "from typing import List\n\n\ndef say_hello(name: List[str], city: str, state: str) -> str:\n    return f\"Hello, {' '.join(name)}! Welcome to {city}, {state}!\"\n", "def say_hello(name, city, state):\n    x = \"Hello, \" , ' '.join(name) , \"! Welcome to \", city , \", \" , state , \"!\"\n    return ''.join(x)", "def say_hello(name, city, state):\n    space = \" \"\n    return \"Hello, \" + space.join(name) + \"! Welcome to \" + city + \", \" + state + \"!\"", "def say_hello(name, city, state):\n    fname = ' '.join(name)\n    return f'Hello, {fname}! Welcome to {city}, {state}!'", "def say_hello(name, city, state):\n    \n    return f\"Hello, {' '.join(ad for ad in name)}! Welcome to {city}, {state}!\"", "def say_hello(name, city, state):\n    som = 'Hello, {joo}! Welcome to {naem}, {state}!'.format(joo = ' '.join(name), naem = city, state = state)\n    return som\n#your code here\n", "def say_hello(name, city, state):\n    namestring = \" \".join(name)\n    return f'Hello, {namestring}! Welcome to {city}, {state}!'", "def say_hello(name, city, state):\n    a = ''\n    for x in range(0,len(name)):\n        a = a + ' ' + ''.join(name[x])\n    return 'Hello, ' + a[1:] + '! Welcome to ' + city + ', ' + state + '!' \n    \n", "def say_hello(name, city, state):\n    b = ' '.join(name)\n    return 'Hello, {}! Welcome to {}, {}!'.format(b,city,state)", "def say_hello(name, city, state):\n    full_name = ''\n    for index, word in enumerate(name):\n        full_name += name[index]\n        if index < len(name) -1:\n            full_name += ' '\n    text = 'Hello, ' + full_name + '! Welcome to ' + city + ', ' + state + '!'\n    return text", "def say_hello(name, city, state):\n    \n    txt1 = 'Hello, {} {} {}! Welcome to {}, {}!'\n    txt2 = 'Hello, {} {}! Welcome to {}, {}!'\n    txt3 = 'Hello, {} {} {} {}! Welcome to {}, {}!'\n    \n    \n    l = len(name)\n    \n    if l == 3:\n        return txt1.format(name[0], name[1], name[2], city, state)\n    elif l == 4:\n        return txt3.format(name[0], name[1], name[2], name[3], city, state)\n    else:\n        return txt2.format(name[0], name[1], city, state)", "def say_hello(name, city, state):\n    name = ' '.join (i for i in name)\n    return f'Hello, {name}! Welcome to {city}, {state}!'", "def say_hello(name, city, state):\n    x = \" \"\n    y = x.join(name)\n    return \"Hello, {}! Welcome to {}, {}!\".format(y, city, state)", "def say_hello(name, city, state):\n    nam=''\n    if len(name)==2:\n        nam=name[0]+' '+name[1]\n    elif len(name)==3:\n        nam=name[0]+' '+name[1]+' '+name[2]\n    elif len(name)==4:\n        nam=name[0]+' '+name[1]+' '+name[2]+' '+name[3]\n    elif len(name)==5:\n        nam=name[0]+' '+name[1]+' '+name[2]+' '+name[3]+' '+name[4]\n    \n    return f\"Hello, {nam}! Welcome to {city}, {state}!\"", "def say_hello(name, city, state):\n    name_join = ' '.join([x for x in name])\n    sentence = 'Hello, {}! Welcome to {}, {}!'.format(name_join, city, state)\n    return sentence", "def say_hello(name, city, state):\n    \n    name = \" \".join(name)\n    \n    return \"Hello,\" + \" \" + name+ \"!\" +\" Welcome to\"+ \" \" + city + \",\"+\" \" + state + \"!\"", "def say_hello(name, city, state):\n\n    new_name = ' '.join(name)\n    return 'Hello, {}! Welcome to {}, {}!'.format(new_name, city, state)\n", "def say_hello(name, city, state):\n    k = ' '.join(name)\n    return f'Hello, {k}! Welcome to {city}, {state}!'", "def say_hello(n, c, s):\n    b = ''\n    for i in range(len(n)):\n        b += ' ' + n[i]\n    return 'Hello,' + b +'! Welcome to ' + c + ', ' + s +'!'"]