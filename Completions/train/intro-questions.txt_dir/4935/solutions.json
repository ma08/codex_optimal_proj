["def infected(s):\n    lands = s.split('X')\n    total = sum(map(len, lands))\n    infected = sum(len(x) for x in lands if '1' in x)\n    return infected * 100 / (total or 1)", "def infected(s):\n    total_population = s.split('X')\n    total = 0\n    infected = 0\n    for population in total_population:\n        if \"1\" in population:\n            infected += len(population)\n        total += len(population)\n    \n    try:\n        return (100 * infected) / total\n    except ZeroDivisionError:\n        return 0\n", "def infected(s):\n    total = infected = 0\n    curr = isInfected = 0\n    for c in s:\n        if c == '0' or c == '1':\n            if c == '1':\n                isInfected = -1\n            curr += 1\n        elif c == 'X':\n            infected += curr & isInfected\n            total += curr\n            isInfected = curr = 0\n    infected += curr & isInfected\n    total += curr\n    return infected / (total / 100) if total else 0", "def infected(s):\n    inf=0\n    saf=0\n    for c in s.split('X') :\n        if '1' in c :\n            inf += len(c)\n        else :\n            saf += len(c)\n        \n    return 0 if inf+saf==0 else inf/(inf+saf)*100", "def infected(s):\n    total = len(s)-s.count('X')\n    infected = sum([len(i) for i in s.split('X') if '1' in i])\n    return infected/total*100 if total > 0 else infected", "import re\n\ndef infected(s):\n    n = sum(map(len, re.findall(r'0*1[01]*', s)))\n    s = len(s.replace('X',''))\n    return s and 100*n/s", "def infected(s):\n    population = len(s) - s.count('X')\n    return population and 100 * sum(len(continent) for continent in s.split('X') if '1' in continent) / population", "def infected(s):\n    infected = 0\n    total = 0 \n    for land in s.split('X'):\n        if '1' in land:\n            infected += len(land)\n        total += len(land)\n    return infected / total * 100 if total > 0 else 0", "def infected(s):\n    totalinf = 0\n    total = 0\n    p = s.split('X')\n    for item in p:\n        if '1' in item:\n            totalinf += len(item)\n            total += len(item)\n        else:\n            total += len(item)\n    return (float(100) * totalinf) / total if total !=0 else 0\n          \n          \n            \n", "def infected(s):\n    if '1' not in s: return 0\n    s = s.split('X')\n    return sum(len(i) for i in s if '1' in i) / sum(map(len, s)) * 100"]