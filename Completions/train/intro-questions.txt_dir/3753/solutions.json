["def camel_case(string):\n    return string.title().replace(\" \", \"\")", "def camel_case(s):\n    return s.title().replace(' ','')", "def camel_case(string):\n    return ''.join([i.capitalize() for i in string.split()])", "def camel_case(string):\n    if len(string) == 0: return \"\"\n    str_list = list(string)\n    space_ids = [index for index, char in enumerate(str_list) if char == \" \" and index < len(str_list) - 1 ]\n    for index in space_ids:\n        str_list[index + 1] = str_list[index + 1].upper()\n    str_list[0] = str_list[0].upper()\n    changed_str = \"\".join(str_list)\n    changed_str = changed_str.replace(\" \", \"\")\n    return changed_str", "def camel_case(string):\n    return ''.join((string.title()).split())\n    #your code here\n", "def camel_case(s):\n    #your code here\n    return ''.join(s.title().split())", "def camel_case(s):\n    return s.strip().title().replace(' ', '')", "def camel_case(string):\n    #a = [string.split()]\n    a = list(string)\n    for i in range(0, len(a)):\n        if i==0 or a[i-1]==' ':\n            a[i] = a[i].upper()\n    return ''.join(a).replace(' ','')", "def camel_case(string):\n    words=string.split()\n    answer=\"\"\n    for capped in words:\n        \n        answer+=capped.capitalize()\n    return answer", "camel_case=lambda s:s.title().replace(' ','')"]