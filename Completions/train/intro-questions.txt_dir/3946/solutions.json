["def interweave(s1, s2):\n    s = [''] * (len(s1) + len(s2))\n    s[::2], s[1::2] = s1, s2\n    return ''.join(c for c in s if not c.isdigit()).strip()", "from itertools import chain, zip_longest\ndef interweave(s1, s2):\n    return ''.join(char for char in chain.from_iterable(zip_longest(s1, s2, fillvalue='')) if not char.isdigit())", "import re\ndef interweave(s1, s2):\n    z=''.join([x+y for x,y in zip(s1,s2+' ')])[:-1]\n    return re.sub(r'[0-9]','',z)\n", "def interweave(s1, s2):\n    result = ''\n    i = 0\n    while i < len(s1) or i < len(s2):\n        if i < len(s1) and not s1[i].isdigit():\n            result += s1[i]\n        if i < len(s2) and not s2[i].isdigit():\n            result += s2[i]\n        i += 1\n    return result", "def interweave(s1, s2):\n    return ''.join(y for x in zip(s1,s2+'0') for y in x if not y.isdigit())", "from itertools import zip_longest\n\n\ndef interweave(*args):\n    return ''.join(''.join(b for b in a if not b.isdigit())\n                   for a in zip_longest(*args, fillvalue='')).rstrip()\n", "import re\n\ndef interweave(s1, s2):\n    return re.sub(r'\\d', '', ''.join(a+b for a,b in zip(s1, s2.ljust(len(s1), ' ')))).strip()", "from itertools import chain, zip_longest\n\ndef interweave(s1, s2):\n    L = chain.from_iterable(zip_longest(s1, s2, fillvalue=''))\n    return ''.join(c for c in L if not c.isdigit())", "def interweave(s1, s2):\n  s = ''\n  for i in range(len(s2)):\n    if not s1[i].isdigit(): s += s1[i]\n    if not s2[i].isdigit(): s += s2[i]\n  return s if len(s1) == 0 or s1[-1].isdigit() else s + s1[-1]\n", "from itertools import chain, zip_longest\n\ndef interweave(s1, s2):\n    return ''.join([c for c in chain.from_iterable(zip_longest(s1, s2)) if c and not c.isdigit()])\n"]