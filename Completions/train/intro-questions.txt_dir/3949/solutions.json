["from math import ceil\ndef calculate_tip(amount, rating):\n    tips = {\n        'terrible': 0,\n        'poor' : .05,\n        'good' : .1,\n        'great' : .15,\n        'excellent' : .2\n    }\n    if rating.lower() in tips:\n        return ceil(amount * tips[rating.lower()])\n    else:\n        return 'Rating not recognised'", "import math\n\ndef calculate_tip(amount, rating):\n    tip_table = {'terrible'     : 0,\n                 'poor'         : 0.05,\n                 'good'         : 0.10,\n                 'great'        : 0.15,\n                 'excellent'    : 0.20}\n    rating = rating.lower()\n    if rating in tip_table:\n        return math.ceil(amount * tip_table[rating.lower()])\n    else:\n        return \"Rating not recognised\"\n", "import math\n\ndef calculate_tip(amount, rating):\n    rating = rating.lower()\n    tip = {\n        \"terrible\": 0,\n        \"poor\": 0.05,\n        \"good\": 0.1,\n        \"great\": 0.15,\n        \"excellent\": 0.2\n    }.get(rating)\n    if (tip == None):\n        return \"Rating not recognised\"\n    \n    return int(math.ceil(amount * tip))", "import math\ndef calculate_tip(a, r):\n    return {\"terrible\":0*a,\"poor\":math.ceil(0.05*a),\"good\":math.ceil(0.1*a),\"great\":math.ceil(0.15*a),\"excellent\":math.ceil(0.2*a)}.get(r.lower(), \"Rating not recognised\")", "def calculate_tip(a, r):\n    d = {'terrible': 0,'poor': .05,'good': .10,'great': .15,'excellent': .20}\n    return int(d[r.lower()] * a + .99) if r.lower() in d else 'Rating not recognised'", "from math import ceil\nD = {\"terrible\":0, \"poor\":0.05, \"good\":0.1, \"great\":0.15, \"excellent\":0.2}\n\ndef calculate_tip(amount, rating):\n    rating = D.get(rating.lower(), None)\n    return \"Rating not recognised\" if rating is None else ceil(amount * rating)", "dict ={\n    \"terrible\": 0,\n    \"poor\": 5,\n    \"good\": 10,\n    \"great\": 15,\n    \"excellent\": 20\n}\nimport math\ndef calculate_tip(amount, rating):\n    return \"Rating not recognised\" if dict.get(rating.lower(),\"null\") ==\"null\" else math.ceil(dict.get(rating.lower(),\"null\")/100*amount)\n", "from math import ceil\ndef calculate_tip(amount, rating):\n    service = {\"terrible\": 0.00, \"poor\": 0.05, \"good\":0.10, \"great\": 0.15, \"excellent\": 0.20}\n    return(ceil(amount*service[rating.lower()]) if rating.lower() in service.keys() else \"Rating not recognised\")", "from math import ceil\ndef calculate_tip(a, r):\n    d = dict(zip(['terrible', 'poor','good','great','excellent'], [0, 5, 10, 15, 20]))\n    r = r.lower()\n    if r in d:\n        return (ceil(d[r]*a/100))\n    else:\n        return 'Rating not recognised'", "from math import ceil\n\ndef calculate_tip(amount, rating):\n    tip = {'terrible': 0, 'poor': 0.05, 'good': 0.1, 'great': 0.15, 'excellent': 0.2}\n    return ceil(amount * tip[rating.lower()]) if rating.lower() in tip else 'Rating not recognised'", "d={'terrible':0,'poor':0.05, 'good':0.1, 'great':0.15, 'excellent':0.2}\ndef calculate_tip(amount, rating):\n    rating = rating.lower()\n    if rating not in d: return 'Rating not recognised'\n    return __import__('math').ceil(amount*(d[rating]))", "import math\n\ndef calculate_tip(amount, rating):\n    tip = {'terrible': 0, 'poor': 0.05, 'good': 0.10, 'great': 0.15, 'excellent': 0.2}\n    return 'Rating not recognised' if rating.lower() not in tip else math.ceil(amount * tip[rating.lower()])", "from collections import defaultdict\nfrom math import ceil\n\nSERVICE = defaultdict(lambda: -1,\n    {'terrible' : 0.00,\n     'poor'     : 0.05,\n     'good'     : 0.10,\n     'great'    : 0.15,\n     'excellent': 0.20 })\n\ndef calculate_tip(amount, rating):\n    value = SERVICE[rating.lower()]\n    return ceil(amount * value) if value >= 0 else 'Rating not recognised'", "def calculate_tip(amount, rating):\n    dict = {\"terrible\": 0,\n    \"poor\": 5,\n    \"good\": 10,\n    \"great\": 15,\n    \"excellent\": 20}\n    try:\n        result = float(amount) / float(100) * dict[rating.lower()]\n        if result != int(str(result).split(\".\")[0]):\n            return int(str(result).split(\".\")[0]) + 1\n        return int(result)\n    except KeyError:\n        return 'Rating not recognised'", "from math import ceil\n\nRATES = {\"terrible\": 0, \"poor\": 5, \"good\": 10, \"great\": 15, \"excellent\": 20}\n\ndef calculate_tip(amount, rating):\n    r = rating.lower()\n    return 'Rating not recognised'if r not in RATES else ceil(RATES[r]/100.0*amount)", "import math\ndef calculate_tip(amount, rating):\n    rates = {'terrible': 0, 'poor': 0.05, 'good': 0.1, 'great': 0.15, 'excellent':0.2}\n    if rating.lower() not in rates:\n        return \"Rating not recognised\"\n    else:\n        return math.ceil(amount * rates[rating.lower()])", "def calculate_tip(amount, rating):\n    import math\n    r = {'terrible': 0, 'poor': 5, 'good': 10, 'great': 15, 'excellent': 20}\n    if not rating or rating.lower() not in r:\n        return 'Rating not recognised'\n    else:\n        return math.ceil(amount * r[rating.lower()] / 100.0)", "def calculate_tip(amount, rating):\n  from math import ceil\n\n  # Rating is case insensitive\n  rating = rating.lower()\n\n  ratingMap = {\n    'terrible'  : 0.0,\n    'poor'      : 0.05,\n    'good'      : 0.10,\n    'great'     : 0.15,\n    'excellent' : 0.20\n  }\n\n  return ceil(amount * ratingMap[rating]) if rating in ratingMap else 'Rating not recognised'", "import math\ndef calculate_tip(amount, rating):\n    tipTypes = [\"terrible\",\"poor\",\"good\",\"great\",\"excellent\"]\n    if rating.lower() in tipTypes:\n        return math.ceil(amount * tipTypes.index(rating.lower())*0.05)\n    else: return \"Rating not recognised\"", "from math import ceil\n\ndef calculate_tip(amount, rating):\n  tips, rating = 'terrible poor good great excellent'.split(), rating.lower()\n  return ceil(amount * tips.index(rating) * .05) if rating in tips else 'Rating not recognised'", "calculate_tip = lambda a,r, p=[\"terrible\",\"poor\",\"good\",\"great\",\"excellent\"]: int(a*p.index(r.lower())*0.05+0.99) if r.lower() in p else \"Rating not recognised\"", "import math\ndef calculate_tip(amount, rating):\n    ratings = {\n        \"Terrible\": 0,\n        \"Poor\": .05,\n        \"Good\": .10,\n        \"Great\": .15,\n        \"Excellent\":.20\n    }\n    \n    try:\n        return math.ceil(amount * ratings.get(rating.title()))\n    except:\n        return \"Rating not recognised\"", "import math\n\ndef calculate_tip(amount, rating):\n    rating = rating.lower()\n    if (rating == 'terrible'):\n        terrible = int(amount)*0\n        terrible = math.ceil(terrible)\n        return (terrible)\n    elif (rating =='poor'):\n        poor = int(amount)*0.05\n        poor = math.ceil(poor)\n        return (poor)\n    elif (rating =='good'):\n        good = int(amount)*0.1\n        good = math.ceil(good)\n        return (good)\n    elif (rating =='great'):\n        great = int(amount)*0.15\n        great = math.ceil(great)\n        return (great)\n    elif (rating =='excellent'):\n        excellent = int(amount)*0.20\n        excellent = math.ceil(excellent)\n        return (excellent)\n    else:\n        return(\"Rating not recognised\")", "import math\n\ndef calculate_tip(amount, rating):\n    rating = rating.lower()\n    tip = {\n            \"terrible\": 0,\n            \"poor\": 0.05,\n            \"good\": 0.10,\n            \"great\":0.15,\n            \"excellent\": 0.20\n          }\n    return math.ceil(amount * tip[rating]) if rating in tip else \"Rating not recognised\"\n        \n", "import math\n\ndef calculate_tip(amount, rating):\n    service_perc = {\n        \"terrible\": 0,\n        \"poor\": 0.05,\n        \"good\": 0.1,\n        \"great\": 0.15,\n        \"excellent\": 0.2\n    }\n    try:\n        return math.ceil(amount * service_perc[rating.lower()])\n    except KeyError:\n        return \"Rating not recognised\"", "import math \n\ndef calculate_tip(amount, rating):\n    rating = rating.lower()\n    \n    if rating == \"terrible\":\n        return 0\n    if rating == \"poor\":\n        return int(math.ceil(amount*.05))\n    if rating == \"good\":\n        return int(math.ceil(amount*.1))\n    if rating == \"great\":\n        return int(math.ceil(amount*.15))\n    if rating == \"excellent\":\n        return int(math.ceil(amount*.2))\n    else:\n        return \"Rating not recognised\"", "from math import ceil\nfrom typing import Union\n\ndef calculate_tip(amount: int, rating: str) -> Union[int, str]:\n    \"\"\" Calculates how much you need to tip based on the total amount of the bill and the service. \"\"\"\n    tips = {\n        \"terrible\": 0,\n        \"poor\": 5,\n        \"good\": 10,\n        \"great\": 15,\n        \"excellent\": 20\n    }\n    tip = tips.get(rating.lower())\n    if tip is None:\n        return \"Rating not recognised\"\n    return ceil(amount * (tip / 100))", "def calculate_tip(amount, rating):\n    d = {'terrible':0,'poor':0.05,'good':0.1,'great':0.15,'excellent':0.2}\n    try:\n        return -(-amount * d[rating.lower()] // 1)\n    except KeyError:\n        return 'Rating not recognised'", "from math import ceil\ndef calculate_tip(amount, rating):\n    return {\n        'terrible': 0,\n        'poor': ceil(amount * 0.05),\n        'good': ceil(amount * 0.1),\n        'great': ceil(amount * 0.15),\n        'excellent': ceil(amount * 0.2)}.get(rating.lower(), 'Rating not recognised')", "calculate_tip=lambda a,r,R=\"terrible poor good great excellent\".split():int(\nR.index(r.lower())*a*.05+1-1e-9)if r.lower()in R else\"Rating not recognised\"", "import math\n\ndef calculate_tip(amount, rating):\n    try:\n        return math.ceil([\"terrible\", \"poor\", \"good\", \"great\", \"excellent\"].index(rating.lower()) * 0.05 * amount)\n    except:\n        return \"Rating not recognised\"", "from math import ceil; calculate_tip = lambda amount, rating: ceil(amount*[\"terrible\", \"poor\", \"good\", \"great\", \"excellent\"].index(rating.lower())*0.05) if rating.lower() in [\"terrible\", \"poor\", \"good\", \"great\", \"excellent\"] else \"Rating not recognised\"", "import math\ndef calculate_tip(amount, rating):\n    bruh = {\n        'terrible': 0,\n        'poor': math.ceil(amount*.05),\n        'good': math.ceil(amount*.1),\n        'great': math.ceil(amount*.15),\n        'excellent': math.ceil(amount*.2)\n    }\n    sobaka = rating.lower()\n    return bruh.get(sobaka) if sobaka in bruh.keys() else 'Rating not recognised'", "import math\ndef calculate_tip(amount, rating):\n    ratings = [\"terrible\", \"poor\", \"good\", \"great\", \"excellent\"]\n    index = ratings.index(rating.lower()) if rating.lower() in ratings else -1\n    return math.ceil(amount * index * 0.05) if index != -1 else \"Rating not recognised\"", "def calculate_tip(amount, rating):\n    import math\n    tips = {'terrible': 1.0, 'poor': 1.05, 'good': 1.10, 'great': 1.15, 'excellent': 1.20}\n    if rating.lower() in tips:\n        return math.ceil(tips[rating.lower()] * amount - amount)\n    else:\n        return 'Rating not recognised'\n", "import math\ndef calculate_tip(amount, rating):\n    r = {'terrible':0, 'poor':0.05, 'good':0.1, 'great': 0.15, 'excellent':0.2}.get(rating.lower(), -1)\n    return 'Rating not recognised' if r == -1 else math.ceil(amount*r) ", "from math import ceil\n\nRATES = ('terrible', 'poor', 'good', 'great', 'excellent')\n\ndef calculate_tip(amount, rating):\n    return {name: ceil(rate * amount * .05) for rate, name in enumerate(RATES)}.get(rating.lower(), \"Rating not recognised\")\n", "from math import ceil\n\nRATES = (('terrible', 0), ('poor', .05), ('good', .1), ('great', .15), ('excellent', .2))\n\ndef calculate_tip(amount, rating):\n    return {name: ceil(rate * amount) for name, rate in RATES}.get(rating.lower(), \"Rating not recognised\")", "from math import ceil\n\n\ndef calculate_tip(amount, rating):\n    service = {'terrible': 0, 'poor': .05, 'good': .10, 'great': .15, 'excellent': .20}\n    tip = service.get(rating.lower(), 'Rating not recognised')\n    return tip if isinstance(tip, str) else ceil(tip*amount)", "calculate_tip = lambda a, r, t={'excellent': .20, 'great': .15, 'good': .10, 'poor': .05, 'terrible': 0}, m=__import__('math'): m.ceil(a * t[r.lower()]) if r.lower() in t.keys() else 'Rating not recognised'", "import math\n\ndef calculate_tip(amount, rating):\n    ratings = {\"terrible\": 0, \"poor\": 0.05, \"good\": 0.1, \"great\": 0.15, \"excellent\": 0.2}\n    return math.ceil(amount * ratings.get(rating.lower())) if rating.lower() in ratings else \"Rating not recognised\"", "from math import ceil\ndef calculate_tip(amount, rating):\n    tips = {'terrible' : 0, 'poor' : 5, 'good' : 10, 'great' : 15, 'excellent' : 20}\n    return ceil(amount*tips[rating.lower()]/100) if rating.lower() in tips else \"Rating not recognised\"", "import math\n\ndef calculate_tip(amount, rating):\n    tips = {'terrible': 0, 'poor': 5, 'good': 10, 'great': 15, 'excellent': 20}\n    return math.ceil(tips[rating.lower()] / 100.0 * amount) if rating.lower() in tips else 'Rating not recognised'", "import math\ndef calculate_tip(amount, rating):\n    str_rating = rating.lower()\n    \n    \n    dict = {\n        'terrible': 0,\n        'poor': 5,\n        'good': 10,\n        'great': 15,\n        'excellent': 20\n        \n    }\n    if str_rating in dict:   \n        result = ((amount * dict[str_rating]) / 100)\n        return math.ceil(result)\n    else:\n        return \"Rating not recognised\"", "import math\ndef calculate_tip(amount, rating):\n    ratings_dict = {\"terrible\": 0, \"poor\": 0.05, \"good\": 0.10, \"great\":0.15, \"excellent\":0.20}\n    if rating.lower() not in ratings_dict.keys():\n        return \"Rating not recognised\"\n    else:\n        return math.ceil(ratings_dict.get(rating.lower())*amount)", "import math\nd = {\n    \n    'terrible': 0,\n    'poor': 5,\n    'good': 10,\n    'great': 15,\n    'excellent': 20,\n    'bla': 'Rating not recognised'\n}\n\ndef calculate_tip(amount, rating):\n    rating = rating.lower()\n    if rating in d.keys():\n        return math.ceil((amount * d.get(rating)) / 100)\n    else:\n        return 'Rating not recognised'", "def calculate_tip(amount, rating):\n    ratings_dict = {\n        'terrible': 0,\n        'poor': 5,\n        'good': 10,\n        'great': 15,\n        'excellent': 20\n    }\n    return int((amount / 100) * ratings_dict[rating.lower()] + 0.99) if rating.lower() in ratings_dict.keys() else 'Rating not recognised'", "def calculate_tip(amount, rating):\n    from math import ceil\n    if rating.lower() == \"terrible\":\n        return 0\n    if rating.lower() == \"poor\":\n        return ceil(int(amount)/100*5)\n    if rating.lower() == \"good\":\n        return ceil(int(amount)/100*10)\n    if rating.lower() == \"great\":\n        return ceil(int(amount)/100*15)\n    if rating.lower() == \"excellent\":\n        return ceil(int(amount)/100*20)\n    else:\n        return \"Rating not recognised\"", "import math\n\ndef calculate_tip(amount, rating):\n    case = {\n        'terrible' : 0,\n        'poor' : .05,\n        'good' : .1,\n        'great' : .15,\n        'excellent' : .2,\n    }    \n    return 'Rating not recognised' if rating.lower() not in case else math.ceil(amount * case.get(rating.lower()))", "import math\n\ndef calculate_tip(amount, rating):\n    d = {\n        'terrible' : 0.0,\n        'poor' : 0.05,\n        'good' : 0.10,\n        'great' : 0.15,\n        'excellent' : 0.20\n    }\n    return 'Rating not recognised' if rating.lower() not in d.keys() else math.ceil(amount * d.get(rating.lower()))", "import math\n\ndef calculate_tip(amount, rating):\n    factor = 0\n    rating = rating.lower()\n    if (rating == \"terrible\"):\n        pass\n    elif (rating == \"poor\"):\n        factor = 0.05\n    elif (rating == \"good\"):\n        factor = 0.1\n    elif (rating == \"great\"):\n        factor = 0.15\n    elif (rating == \"excellent\"):\n        factor = 0.2\n    else:\n        return 'Rating not recognised'\n    return math.ceil(amount * factor)", "import math\ndef calculate_tip(amount, rating):\n    #your code here\n    c=rating.capitalize()\n    if(c==\"Poor\" or \"Terrible\" or \"Good\" or \"Great\" or \"Excellent\" ):\n        if(c==\"Poor\"):\n            return math.ceil(amount*(5/100))\n        elif(c==\"Excellent\"):\n            return math.ceil(amount*(20/100))\n        elif(c==\"Great\"):\n            return math.ceil(amount*(15/100))\n        elif(c==\"Good\"):\n            return math.ceil(amount*(10/100))\n        elif(c==\"Terrible\"):\n            return 0\n    return 'Rating not recognised'", "dict = {\n\"terrible\": 0.0,\n\"poor\": 0.05,\n\"good\": 0.1,\n\"great\": 0.15,\n\"excellent\": 0.2\n}\n    \nimport math\n\n    \ndef calculate_tip(amount, rating):\n    try:\n        return math.ceil(float(amount) * dict[rating.lower()])\n    except:\n        return 'Rating not recognised'", "from math import ceil\n\ndef calculate_tip(amount, rating):\n    per = {\n        \"terrible\": 0,\n        \"poor\": 0.05,\n        \"good\": 0.1,\n        \"great\": 0.15,\n        \"excellent\": 0.2\n    }.get(rating.lower(), None)\n    \n    return ceil(amount * per) if per != None else 'Rating not recognised'\n", "import math\n\ndef calculate_tip(amount, rating):\n    \n    rating=rating.lower()\n    \n    result_2=\"Rating not recognised\"\n    result=-1\n    \n    if rating==\"poor\":\n       result=amount*0.05\n    elif rating== \"good\":\n       result=amount*0.1\n    elif rating== \"great\":   \n       result=amount*0.15\n    elif rating== \"excellent\":   \n       result=amount*0.2\n    elif rating==\"terrible\":\n       result=0\n    \n    \n  \n    \n    if result==-1:\n       result=result_2\n    \n    if rating not in (\"poor\",\"excellent\",\"great\",\"good\",\"terrible\") :\n        return 'Rating not recognised'\n    else:\n        return math.ceil(result)", "import math\ndef calculate_tip(amount, rating):\n    if rating.lower()==\"poor\":\n        return math.ceil(0.05*amount)\n    if rating.lower()==\"good\":\n        return math.ceil(0.1*amount)\n    if rating.lower()==\"great\":\n        return math.ceil(0.15*amount)\n    if rating.lower()==\"excellent\":\n        return math.ceil(0.2*amount)\n    if rating.lower()==\"terrible\":\n        return 0\n    return 'Rating not recognised'", "def calculate_tip(amount, rating):\n    import math\n    table = {\n        \"terrible\": 0,\n        \"poor\": 0.05,\n        \"good\": .1,\n        \"great\": 0.15,\n        \"excellent\": .2\n    }\n    rating = rating.lower()\n    if rating in table:\n        return(math.ceil(amount * table[rating]))\n    else:\n        return(\"Rating not recognised\")", "def calculate_tip(amount, rating):\n    \n    error = 'Rating not recognised'\n    ratings = {\n        'terrible' : 0,\n        'poor'     : 0.05,\n        'good'     : 0.1,\n        'great'    : 0.15,\n        'excellent': 0.2, \n    }\n\n    try:\n        if isinstance(amount, str):\n            return error\n\n        v = ratings[rating.lower()]*amount\n\n        if not v % 2 == 0: \n            return int(v+(1-(v%1)))\n        else:\n            return int(v)\n        \n    except KeyError:\n        return error", "from math import ceil\n\nd = {\n    \"terrible\":0, \"poor\":5, \"good\":10, \"great\":15, \"excellent\":20    \n}\n\ndef calculate_tip(amount, rating):\n    #your code here\n    rating = rating.lower()\n    if rating not in d.keys():\n        return 'Rating not recognised'\n    else:\n        return ceil(amount*d[rating]/100)", "from math import ceil\n\ndef calculate_tip(amount, rating):\n    if rating.lower() == \"excellent\":\n        return ceil(amount * 0.2)\n    elif rating.lower() == \"great\":\n        return ceil(amount * 0.15)\n    elif rating.lower() == \"good\":\n        return ceil(amount * 0.1)\n    elif rating.lower() == \"poor\":\n        return ceil(amount * 0.05)\n    elif rating.lower() == \"terrible\":\n        return 0\n    return \"Rating not recognised\"", "import math\ndef calculate_tip(amount, rating):\n    ratings = {'terrible': 0, 'poor': 0.05, 'good': 0.1, 'great': 0.15, 'excellent': 0.2}\n    return math.ceil(amount * ratings.get(rating.lower(), 0)) if rating.lower() in ratings else 'Rating not recognised'", "from math import ceil\ndef calculate_tip(amount, rating):\n    try:\n        tip = {'terrible': 0, 'poor': 0.05, 'good': 0.1, 'great': 0.15, 'excellent': 0.2}.get(rating.lower())\n        return ceil(amount * tip)\n    except:\n        return 'Rating not recognised'", "from math import ceil\n\n\ndef calculate_tip(amount, rating):\n    TIP = {'terrible': 0, 'poor': 5, 'good': 10, 'great': 15, 'excellent': 20}.get(rating.lower(), None)\n    if TIP == None:\n        return 'Rating not recognised'\n    return ceil((amount * TIP) / 100)", "import math\n\nrates = {\n    'terrible': 0,\n    'poor': 0.05,\n    'good': 0.1,\n    'great': 0.15,\n    'excellent': 0.2\n}\n\ndef calculate_tip(amount, rating):\n    rating = rating.lower()\n    \n    return math.ceil(amount * rates[rating]) if rating in rates else 'Rating not recognised'\n", "import math \ndef calculate_tip(amount, rating):\n    return math.ceil((amount*5)/100) if rating.lower() == \"poor\" else 0 if rating.lower() == \"terrible\" else math.ceil((amount*10)/100) if rating.lower() == \"good\" else math.ceil((amount*15)/100) if rating.lower() == \"great\" else math.ceil((amount*20)/100) if rating.lower() == \"excellent\" else \"Rating not recognised\"", "import numpy as np\n\nd = {\n    'Terrible':0,\n    'Poor':0.05,\n    'Good':0.1,\n    'Great':0.15,\n    'Excellent':0.2\n}\n\ndef calculate_tip(amount, rating):\n    try:\n        return np.ceil(amount * d[rating.title()])\n    except:\n        return \"Rating not recognised\"", "import math\ndef calculate_tip(amount, rating):\n    rating=rating.lower()    \n    service={'terrible':0, 'poor':0.05, 'good':0.10, 'great':0.15, 'excellent':0.20}\n    \n    if rating in service:\n        return(math.ceil(amount*service[rating]))\n    else:\n        return('Rating not recognised')\n    \n", "tip = {\n    'terrible': 0,\n    'poor': 0.05,\n    'good': 0.1,\n    'great': 0.15,\n    'excellent': 0.2\n}\nimport math\ndef calculate_tip(amount, rating):\n    rating = rating.lower()\n    if rating not in tip:\n        return \"Rating not recognised\"\n    return math.ceil(amount * tip[rating])", "import math\n\ndef calculate_tip(amount, rating):\n    r = {\n        'terrible': 0,\n        'poor': 5,\n        'good': 10,\n        'great': 15,\n        'excellent': 20,        \n    }\n    \n    p = r.get(rating.lower(), 'Rating not recognised')\n    \n    try:\n        return math.ceil(amount * p / 100)\n    except:\n        return p", "import math\n \ndef calculate_tip(amount, rating):\n    dict={\"terrible\":0,\"poor\":0.05,\"good\":0.10,\"great\":0.15,\"excellent\":0.20}\n    return math.ceil(amount*dict[rating.lower()]) if rating.lower() in dict else \"Rating not recognised\"", "import math\ndef calculate_tip(amount, rating):\n    if(rating.lower()==\"poor\".lower()):\n        a=amount*(5/100)\n        return math.ceil(a)\n    elif(rating.lower()==\"Excellent\".lower()):\n        a=amount*(20/100)\n        return math.ceil(a)\n    elif(rating.lower()==\"Great\".lower()):\n        a=amount*(15/100)\n        return math.ceil(a)\n    elif(rating.lower()==\"Good\".lower()):\n        a=amount*(10/100)\n        return math.ceil(a)\n    elif(rating.lower()==\"terrible\".lower()):\n        return 0\n    else:\n        return \"Rating not recognised\"", "import math\ndef calculate_tip(amount, rating):\n    \"\"\"(^-__-^)\"\"\"\n    dic = {\"terrible\": 0, \"poor\": 5, \"good\": 10, \"great\": 15, \"excellent\": 20}\n    return math.ceil((amount / 100) * dic.get(rating.lower())) if rating.lower() in dic else 'Rating not recognised'\n", "import math\ndef calculate_tip(amount, rating):\n    try:\n        k = {'terrible': 0, 'poor': 0.05, 'good': 0.1, 'great': 0.15, 'excellent': 0.20}[rating.lower()]*amount\n    except:\n        return 'Rating not recognised'\n    return math.ceil(k)", "from math import ceil\n\ndef calculate_tip(amount, rating):\n    percent = {\"terrible\": 0, \"poor\": 5, \"good\": 10, \"great\": 15, \"excellent\": 20}\n    tip = percent.get(rating.lower())\n    try:\n        return ceil(amount*tip/100)\n    except:\n        return \"Rating not recognised\"", "def calculate_tip(a, r):\n    tp = {\"terrible\": 0, \"poor\": 5, \"good\": 10, \"great\": 15, \"excellent\": 20}\n    if tp.get(r.lower(), None) != None: return int(a*tp[r.lower()]/100 + .99)\n    return 'Rating not recognised' ", "import math\ndef calculate_tip(amount, rating):\n    if rating.lower() == 'poor':\n        return math.ceil((amount / 100) * 5)\n    elif rating.lower() == 'good':\n        return math.ceil((amount / 100) * 10)\n    elif rating.lower() == 'great':\n        return math.ceil((amount / 100) * 15)\n    elif rating.lower() == 'excellent':\n        return math.ceil((amount / 100) * 20)\n    elif rating.lower() not in ['poor', 'good', 'great', 'excellent', 'terrible']:\n        return 'Rating not recognised'\n    else:\n        return 0", "import math\ndef calculate_tip(amount, rating):\n    tip={\"Terrible\":0,\n         \"Poor\":5/100,\n         \"Good\":10/100,\n         \"Great\":15/100,\n         \"Excellent\":20/100}\n\n    try:\n        return math.ceil(int(amount) * (tip[rating.title()]))\n    except:\n        return \"Rating not recognised\"", "import math\n\ndef calculate_tip(amount, rating):\n    tips = {\"terrible\" : 0,\n            \"poor\"     : 0.05,\n            \"good\"     : 0.1,\n            \"great\"    : 0.15,\n            \"excellent\": 0.2}.get(rating.lower(), None)\n    return math.ceil(amount * tips) if tips is not None else 'Rating not recognised'\n", "from math import ceil\n\ndef calculate_tip(amount, rating):\n    tip = ceil(amount * {\"terrible\": 0, \"poor\": 0.05, \"good\": 0.1, \"great\": 0.15, \"excellent\": 0.20}.get(rating.lower(), -1))\n    return tip if tip >= 0 else \"Rating not recognised\"", "import math\ndef calculate_tip(amount, rating):\n  \n    tips = {'Terrible': 0,\n            'Poor': 0.05,\n            'Good': 0.1,\n            'Great': 0.15,\n            'Excellent': 0.2\n            }\n    return math.ceil(amount*tips[rating.capitalize()]) if rating.capitalize() in tips else 'Rating not recognised'\n", "import math\n\ndef calculate_tip(amount, rating):\n    rating = rating.lower()\n    if rating == \"terrible\":\n        return math.ceil(amount*0)\n    if rating == \"poor\":\n        return math.ceil(amount*0.06)\n    if rating == \"good\":\n        return math.ceil(amount*0.1)\n    if rating == \"great\":\n        return math.ceil(amount*0.15)\n    if rating == \"excellent\":\n        return math.ceil(amount*0.2)\n    else:\n        return 'Rating not recognised'\n    \n", "from math import ceil\n\ndef calculate_tip(amount, rating):\n    ratings  = {\n        \"terrible\": 0,\n        \"poor\": 5,\n        \"good\": 10,\n        \"great\": 15,\n        \"excellent\": 20,\n    }\n    if rating.lower() not in ratings.keys(): return \"Rating not recognised\"\n    return ceil(ratings.get(rating.lower()) * amount / 100)", "from math import ceil\ndef calculate_tip(amount, rating):\n    return {'terrible':0,'poor':ceil(amount*(0.05)),'good':ceil(amount*(1/10)),'great':ceil(amount*(15/100)),'excellent':ceil(amount*(1/5))}.get(rating.lower(),'Rating not recognised')\n\n \n", "from math import ceil\ndef calculate_tip(amount, rating):\n    dict={\n'Terrible': 0,\n'Poor': 0.05,\n'Good': 0.1,\n'Great': 0.15,\n'Excellent': 0.2\n    }\n    return ceil(amount * dict.get(rating.capitalize())) if dict.get(rating.capitalize(),'nothing')!='nothing' else 'Rating not recognised'", "import math\ndef calculate_tip(amount, rating):\n    rating = rating.lower()\n    if rating == \"poor\":\n        return math.ceil(amount*0.05)\n    elif rating == \"terrible\":\n        return 0\n    elif rating == \"good\":\n        return math.ceil(amount*0.1)\n    elif rating == \"great\":\n        return math.ceil(amount*0.15)\n    elif rating == \"excellent\":\n        return math.ceil(amount*0.2)\n    else:\n        return \"Rating not recognised\"", "import math\ndef calculate_tip(amount, rating):\n    calc_tip = {\"terrible\":0, \"poor\":0.05, \"good\":0.10, \"great\":0.15, \"excellent\":0.20}\n    if rating.lower() in calc_tip:\n        res = amount* calc_tip[rating.lower()]\n        if type(res) == float: res = math.ceil(res) \n        return res\n    else: return \"Rating not recognised\"", "from math import ceil\ndef calculate_tip(amount, rating):\n    if rating.lower() == 'terrible':\n        return ceil(amount * 0)\n    elif rating.lower() == 'poor':\n        return ceil(amount * 0.05)\n    elif rating.lower() == 'good':\n        return ceil(amount * 0.1)\n    elif rating.lower() == 'great':\n        return ceil(amount * 0.15)\n    elif rating.lower() == 'excellent':\n        return ceil(amount * 0.2)\n    else:\n        return \"Rating not recognised\"\n", "import math\n\ndef calculate_tip(amount, rating):\n    x = {\n        'terrible': 0,\n        'poor': 5,\n        'good': 10,\n        'great': 15,\n        'excellent': 20\n    }.get(rating.lower())\n    return math.ceil(x * amount/100) if x != None else 'Rating not recognised'", "from math import ceil\ndef calculate_tip(amount, rating):\n    dict_ = {'excellent': .2, 'great': .15, 'good': .1, 'poor': .05, 'terrible': 0}\n    if rating.lower() in dict_:\n        return ceil(amount * dict_[rating.lower()])\n    else:\n        return 'Rating not recognised'", "import math\n\ndef calculate_tip(amount, rating):\n    d = {'terrible': 0,\n    'poor': 0.05,\n    'good': 0.10,\n    'great': 0.15,\n    'excellent': 0.20}\n\n    for key, val in d.items():\n        if key == rating.lower():\n            return math.ceil(amount * val)\n    return 'Rating not recognised'", "import math\ndef calculate_tip(amount, rating):\n    rating = rating.lower()\n    if rating == \"poor\":\n        return math.ceil(amount*0.05)\n    elif rating == \"good\":\n        return math.ceil(amount * 0.1)\n    elif rating == \"great\":\n        return math.ceil(amount * 0.15)\n    elif rating == \"excellent\":\n        return math.ceil(amount * 0.2)\n    elif rating == \"terrible\":\n        return math.ceil(amount * 0)\n    else:\n        return \"Rating not recognised\"", "import math\ndef calculate_tip(amount, rating):\n    amount = math.ceil(amount)\n    if rating.title() == 'Terrible':\n        return amount * 0\n    elif rating.title() == 'Poor':\n        return math.ceil(amount * 0.05)\n    elif rating.title() == 'Good':\n        return math.ceil(amount * 0.10)\n    elif rating.title() == 'Great':\n        return math.ceil(amount * 0.15)\n    elif rating.title() == 'Excellent':\n        return math.ceil(amount * 0.2)\n    else:\n        return 'Rating not recognised'", "import numpy as np\ndef calculate_tip(amount, rating):\n    tips={'terrible': 0, 'poor':0.05, 'good': 0.1, 'great': 0.15, 'excellent':0.2}\n    try:\n        return np.ceil(tips[rating.lower()]*amount)\n    except:\n        return 'Rating not recognised'", "import math\n\ndef calculate_tip(amount, rating):\n    rate = rating.lower()\n    \n    discount = 0\n    discountTwo = amount * .05\n    discountThree = amount * .10\n    discountFour = amount * .15\n    discountFive = amount * .20\n    \n    if rate == \"terrible\":\n        return math.ceil(discount)\n    elif rate == \"poor\":\n        return math.ceil(discountTwo)\n    elif rate == \"good\":\n        return math.ceil(discountThree)\n    elif rate == \"great\":\n        return math.ceil(discountFour)\n    elif rate == \"excellent\":\n        return math.ceil(discountFive)\n    return \"Rating not recognised\"", "from math import ceil\ndef calculate_tip(amount, rating):\n    tab = {'terrible': 0, 'poor': 0.05, 'good': 0.1, 'great': 0.15, 'excellent': 0.2}\n    mpl = tab.get(rating.lower(), -1)\n    return ceil(amount * mpl) if mpl >= 0 else \"Rating not recognised\"", "from math import ceil\n\ndef calculate_tip(amount, rating):\n    ratings = [\"terrible\",\"poor\",'good','great','excellent']\n    if rating.lower() in ratings:\n        tip = 5 * ratings.index(rating.lower())\n        return ceil((tip/100) * amount)\n    else:\n        return \"Rating not recognised\"", "from math import ceil\n\ndef calculate_tip(amount, rating):\n    rating_table = {\n        'Terrible': 0, 'Poor': 0.05, 'Good': 0.1, 'Great': 0.15, 'Excellent': 0.2\n    }\n    rating = rating.title()\n    if rating in rating_table:\n        return ceil(amount * rating_table.get(rating))\n    else:\n        return 'Rating not recognised'", "import math\ndef calculate_tip(amount, rating):\n    rates = {\"terrible\":0, \"poor\":0.05, \"good\":0.1, \"great\":0.15,\"excellent\":0.2}\n    \n    return math.ceil(amount * rates[rating.lower()]) if rating.lower() in rates.keys() else \"Rating not recognised\"", "import math\ndef calculate_tip(amount, rating):\n    legend=[(\"terrible\",0),(\"poor\",5),(\"good\",10),(\"great\",15),(\"excellent\",20)]\n    for i in range (len(legend)):\n        if rating.lower()==legend[i][0]:\n            return math.ceil(amount*legend[i][1]/100)\n        else:\n            pass\n    return \"Rating not recognised\"\n", "def calculate_tip(amount: int, rating: str) -> int:\n    return {\n        \"Terrible\": round((lambda x: x * 0.00)(amount) + 0.5),\n        \"Poor\": round((lambda x: x * 0.05)(amount) + 0.5),\n        \"Good\": round((lambda x: x * 0.10)(amount) + 0.5),\n        \"Great\": round((lambda x: x * 0.15)(amount) + 0.5),\n        \"Excellent\": round((lambda x: x * 0.20)(amount) + 0.5),\n    }.get(rating.title(), \"Rating not recognised\")"]