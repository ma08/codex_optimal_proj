["def isomorph(a, b):\n  return [a.index(x) for x in a] == [b.index(y) for y in b]\n", "from itertools import zip_longest\n\ndef isomorph(a, b):\n    return len(set(a)) == len(set(b)) == len(set(zip_longest(a, b)))", "def isomorph(s, t):\n  if len(s) != len(t):\n        return False\n  p= set(zip(s, t))\n  return all(len(p) == len(set(c)) for c in zip(*p))", "def isomorph(a, b):\n    return len(a) == len(b) and len(set(a)) == len(set(b)) == len(set(zip(a, b)))", "def isomorph(a, b):\n    normalize = lambda s: [s.index(c) for c in s]\n    return normalize(a) == normalize(b)", "def isomorph(a, b):\n    return len(a) == len(b) and a.translate(str.maketrans(a, b)) == b and b.translate(str.maketrans(b, a)) == a", "def isomorph(a, b):\n    return [a.index(h) for h in a]==[b.index(g) for g in b]\n  # Happy coding!\n", "from collections import defaultdict\n\ndef isomorph(a, b):\n    print(a, b)\n    da,db = defaultdict(list), defaultdict(list)\n    for i in range(len(a)==len(b) and len(a)):\n        if da[a[i]] != db[b[i]]: return False\n        da[a[i]].append(i)\n        db[b[i]].append(i)\n    return bool(da)", "def isomorph(a, b):\n    if len(a)!=len(b):\n        return False\n    st={}\n    for i in range(len(a)):\n        if a[i] not in list(st.keys()) and b[i]  in list(st.values()):\n            return False\n        if a[i] not in list(st.keys()) and b[i] not in list(st.values()):\n            st[a[i]]=b[i]\n        elif st[a[i]]!=b[i] :#or a[i] not in st.keys() and b[i]  in st.values():\n             return False\n    return True\n  # Happy coding!\n", "def isomorph(a, b):\n    print((a, b))\n    if(len(a) != len(b)):\n            return False\n    m = {} # mapping of each character in a to b\n    r = {} # mapping of each character in b to a\n    for i, c in enumerate(a):\n        if c in m:\n            if b[i] != m[c]:\n                return False\n        else:\n            m[c] = b[i]\n        if b[i] in r:\n            if c != r[b[i]]:\n                return False\n        else:\n            r[b[i]] = c\n    print('True')\n    return True"]