["def string_clean(s):\n    return ''.join(x for x in s if not x.isdigit())", "import re\n\ndef string_clean(s):\n    return re.sub(r'\\d', '', s)", "def string_clean(s):\n    return \"\".join(c for c in s if not c.isdigit())", "string_clean = lambda s: __import__('re').sub(r'\\d', '', s)", "def string_clean(s):\n    import re\n    return ''.join(re.findall('\\D',s))", "def string_clean(s):\n    return s.translate(s.maketrans(' ', ' ', '1234567890'))", "def string_clean(s):\n    return ''.join(ch for ch in s if ch not in '0123456789')", "from string import digits\ntrans = str.maketrans(\"\", \"\", digits)\ndef string_clean(s):\n    return s.translate(trans)\n\n\nfrom functools import partial\nfrom re import compile\nstring_clean = partial(compile(\"\\d+\").sub, \"\")", "import re\nstring_clean = lambda s: re.sub('[0-9]', '', s)", "def string_clean(s):\n    return ''.join([item for item in s if not item.isdigit()])", "string_clean = lambda s: ''.join(e for e in s if not e.isdigit())", "def string_clean(s):\n    return __import__('re').sub('\\d','',s)", "import re\ndef string_clean(s): \n    return re.sub(r\"(\\d+)\", \"\", s)", "def string_clean(s):\n    return ''.join(c for c in s if c not in '1234567890')", "import re\ndef string_clean(s):\n    return re.sub('[0-9]','',s)  #I solved this Kata on  8/3/2019  09:37 AM...#Hussam'sCodingDiary", "import re\n\ndef string_clean(s):\n    \"\"\"\n    Function will return the cleaned string\n    \"\"\"\n    return re.sub(r'[\\d+]', '', s)\n", "def string_clean(s):\n    \"\"\"\n    Function will return the cleaned string\n    \"\"\"\n    return ''.join([i for i in s if not i.isnumeric()])", "def string_clean(s):\n    \"\"\"\n    Function will return the cleaned string\n    \"\"\"\n    return s.replace(\"1\", '').replace(\"2\",'').replace(\"3\",'').replace(\"4\",'').replace(\"5\",'').replace(\"6\",'').replace(\"7\",'').replace(\"8\",'').replace(\"9\",'').replace(\"0\",'')", "from re import sub\n\ndef string_clean(s: str) -> str:\n    \"\"\" Get cleaned string. \"\"\"\n    return sub(\"\\d\", \"\", s)", "def string_clean(s):\n    return ''.join(__import__('itertools').filterfalse(str.isdigit, s))", "def string_clean(s):\n    \"\"\"\n    Function will return the cleaned string\n    \"\"\"\n    return __import__('re').sub('\\d+', '', s)", "def string_clean(s):\n    return s.translate({ord(x): None for x in '0123456789'})", "def string_clean(s):\n    \"\"\"\n    Function will return the cleaned string\n    \"\"\"\n    n = ''\n    for i in s: \n        if i not in '0123456789':\n            n += i\n    return n", "def string_clean(s):\n    \"\"\"\n    Function will return the cleaned string\n    \"\"\"\n    nums = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'}\n    return ''.join([_ for _ in s if _ not in nums])", "from string import digits \n\ndef string_clean(s):\n    foo = str.maketrans(\"\", \"\", digits)\n    bar = s.translate(foo)\n    return bar\n    \n", "def string_clean(s):\n    a = \"\"\n    for el in s:\n        if el not in \"1234567890\":\n            a += el\n    return a", "def string_clean(s):\n    res = ''\n    for i in range(len(s)):\n        if not s[i].isdigit():\n            res+=(s[i])\n    return res", "def string_clean(s):\n    \"\"\"\n    Function will return the cleaned string\n    \"\"\"\n    x = []\n    for i in range(len(s)):\n        if s[i] in ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']:\n            x = x\n        else:\n            x.append(s[i])\n    return(''.join(map(str, x)))", "def string_clean(s):\n    num = '0123456789'\n    for i in s:\n        if i in num:\n            s = s.replace(i, '')\n    return s", "def string_clean(s):\n\n    no_digits = []\n    # Iterate through the string, adding non-numbers to the no_digits list\n    for i in s:\n        if not i.isdigit():\n            no_digits.append(i)   \n    result = ''.join(no_digits)\n    return result", "def string_clean(s):\n    deprecated = '0123456789'\n    return ''.join([s_ for s_ in s if s_ not in deprecated])", "def string_clean(s):\n    new = \"\"\n    for char in s:\n        if char.isdigit():\n            new += \"\"\n        else:\n            new += char\n    \n    return new", "def string_clean(s):\n    for c in \"1234567890\":\n        s = s.replace(c, '')\n    return s", "def string_clean(s):\n    return ''.join(list(el if not el.isdigit() else '' for el in s))", "def string_clean(s):\n    ls = []\n    final = []\n    for i in s:\n        if \"0\" <= i <= \"9\":\n            ls.append(i)\n        else:\n            final.append(i)\n    return ''.join(final)\n", "def string_clean(s):\n    return ''.join('' if ch in \"0123456789\" else ch for ch in list(s))", "import re\n\ndef string_clean(s):\n    k = re.sub(\"\\d\",\"\",s)\n    return k", "def string_clean(s):\n    \"\"\"\n    Function will return the cleaned string\n    \"\"\"\n    numset = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']\n#     ns = ''\n    for i in s:\n        if i in numset:\n            s = s.replace(i, '')\n    return s\n", "import re\n\nstring_clean = lambda string : re.sub('\\d', '', string)\n\n\"\"\"remove all digits from the string\"\"\"\n    \n# \\d matches any number 0-9\n# re.sub replaces the number/s from the string with ''\n", "def string_clean(s):\n    l = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]\n    for i in l:\n        if i in s:\n            s = s.replace(i, \"\")\n    return s", "def string_clean(s):\n    return ''.join([i for i in s if i.isdigit()!=True])", "def string_clean(s):\n    #remove all numbers from text and return string\n    numbers = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"]\n    new_string_arr = []\n    for char in s:\n        if char not in numbers:\n            new_string_arr.append(char)\n    return \"\".join(new_string_arr)", "import re\ndef string_clean(s):\n    return re.sub(\"[\\d]+\",\"\",s)", "import re\ndef string_clean(s):\n    s=s.translate(str.maketrans('0123456789','0'*10))\n    return s.replace('0','')", "def string_clean(s):\n    \"\"\"\n    Function will return the cleaned string\n    \"\"\"\n    phrase = \"\"\n    for i in range(len(s)):\n        if s[i].isnumeric()!= True:\n            phrase+=s[i]\n    return phrase", "def string_clean(s):\n    toremove = '1234567890'\n    for i in s:\n        if i in toremove:\n            s = s.replace(i, '')\n            \n    return s", "def string_clean(s):\n    \n    return ''.join([x for x in s if x not in ['1','2','3','4','5','6','7','8','9','0']])", "def string_clean(s):\n    return s.translate(str.maketrans({x:\"\" for x in \"1234567890\"}))", "def string_clean(s):\n    \"\"\"\n    Function will return the cleaned string\n    \"\"\"\n    return \"\".join(x for x in s if x.isdigit()==False)", "def string_clean(s):\n    return \"\".join([s[i] for i in range(len(s)) if s[i].isnumeric()==False])", "def string_clean(s):\n    \"\"\"\n    Function will return the cleaned string\n    \"\"\"\n    return s.translate(str.maketrans('1234567890', '0000000000')).replace('0', '')", "def string_clean(s):\n     return ''.join(['' if i in '0123456789' else i for i in s])", "def string_clean(s):\n    return \"\".join([s[x] for x in range(len(s)) if not s[x].isnumeric()])", "import string\n\ndef string_clean(s):\n    for n in s:\n        if n in string.digits:\n            s = s.replace(n, \"\")\n    return s", "def string_clean(s):\n    word = \"\"\n    digits = \"1234567890\"\n    for element in s:\n        if element not in digits:\n            word += element\n    return word ", "def string_clean(s):\n    c=\"\"\n    for i in s:\n        if i not in \"0123456789\":\n            c=c+i\n    return c", "def string_clean(s):\n    junk = [str(i) for i in range(10)]\n    new_s = ''\n    for i in s:\n        if i not in junk:\n            new_s += i\n    return new_s\n    \n    # Your code here\n", "def string_clean(s):\n    output = ''\n    for x in s:\n        print(x.isdigit())\n        if x.isdigit():\n            pass\n        else:\n            output += x\n    return output", "def string_clean(s):\n    \"\"\"\n    Function will return the cleaned string\n    \"\"\"\n    a = \"\"\n    for c in s:\n        if not c.isdigit():\n            a += c\n    return a", "import re\ndef string_clean(s):\n    result = re.sub(r'\\d',\"\",s)\n    return result\n    \n \n   \n    \"\"\"\n    Function will return the cleaned string\n    \"\"\"\n\n", "def string_clean(s):\n    x = \"\"\n    for i in s:\n        if i >= '0' and i <= '9':\n            continue\n        x += i\n    return x", "def string_clean(s):\n    n=\"1234567890\"\n    for x in n:\n        if x in s:\n            s=s.replace(x,\"\")\n    return s", "def string_clean(s):\n    \"\"\"\n    Function will return the cleaned string\n    \"\"\"\n    return ''.join(list([x for x in s if x not in '1234567890']))\n", "import string\n\ndef string_clean(s):\n    out = \"\"\n    for element in s:\n        if not element.isnumeric():\n            out+=element\n    return out", "def string_clean(s):\n    \"\"\"\n    Function will return the cleaned string\n    \"\"\"\n    # Your code her\n    st=\"\"\n    for c in s:\n        if not(c.isdigit()):\n            st+=c\n    return st\n", "import re\n\ndef string_clean(s):\n    s = re.sub(r'[0-9]', '', s)\n    return s", "def string_clean(s):\n    \"\"\"\n    Function will return the cleaned string\n    \"\"\"\n    liste = list(s)\n    el = []\n    for elem in liste:\n        if elem in \"1234567890\":\n            pass\n        else:\n            el.append(elem)\n    return ''.join(el)", "def string_clean(s):\n    return \"\".join([\"\" if char.isdigit() else char for char in s])", "def string_clean(s):\n    ans = \"\"\n    for i in s:\n        if not i.isdigit():\n            ans += i\n            \n    return ans", "def string_clean(s):\n    lsValue = \"\"\n    for i in range(len(s)):\n        if not s[i].isnumeric():\n            lsValue += s[i]\n    return lsValue        \n", "def string_clean(s):\n    return ''.join(letter for letter in s if not letter.isnumeric())", "def string_clean(s):\n    res=\"\"\n    for i in s:\n        if i.isdigit():\n            continue\n        else:\n            res+=i\n    return res", "def string_clean(s):\n    y = \"\"\n    for i in s:\n        if i.isnumeric():\n            continue\n        else:\n            y += i\n    return y", "def string_clean(s):\n    remove_characters = ['1','2','3','4','5','6','7','8','9','0']\n\n    for character in remove_characters:\n        s = s.replace(character, '')\n    return s", "def string_clean(s):\n    new=''\n    for item in s:\n        if item.isnumeric():\n            pass\n        else:\n            new+=item\n    return new", "import string\ndigits = string.digits\ndef string_clean(s):\n    emptystring = ''\n    for eachletter in s:\n        if eachletter in digits:\n            continue\n        else:\n            emptystring = emptystring + eachletter\n    return emptystring\n    \"\"\"\n    Function will return the cleaned string\n    \"\"\"\n    # Your code here\n", "def string_clean(s):\n    string = ''\n    for char in s:\n        if char not in '0123456789':\n            string += char\n    return string", "def string_clean(s):\n    ans=''\n    s=list(s)\n    digits=['1','2','3','4','5','6','7','8','9','0']\n    for i in s:\n        if i in digits:\n            continue\n        ans=ans+i\n    return ans", "from string import digits\n\ndef string_clean(s):\n    for char in digits:\n        s = s.replace(char, \"\")\n    return s", "def string_clean(s):\n    n = \"\"\n    for i in range(0, len(s)):\n        if s[i].isdigit():\n            continue\n        else:\n            n = n + s[i]\n    return n", "def string_clean(s):\n    \"\"\"\n    Function will return the cleaned string\n    \"\"\"\n    wordclean=list(s)\n    fini=[]\n    for i in wordclean:\n        if i.isnumeric():\n            a=1\n        else:\n            fini.append(i)\n    return \"\".join(fini)\n            \n", "def string_clean(s):\n    return s.translate(s.maketrans({'0':'','1':'','2':'','3':'','4':'','5':'','6':'','7':'','8':'','9':''}))", "import re\ndef string_clean(s):\n    a = re.sub(\"\\d\", \"\", s)\n    return a", "def string_clean(s):\n    temp = \"\"\n    numbers = \"1234567890\"\n    for i in s:\n        if i in numbers:\n            continue\n        else:\n            temp+=i\n    return temp", "import re\ndef string_clean(s):\n    delNum = re.compile(r'[^0123456789]')\n    return ''.join(delNum.findall(s))", "def string_clean(s):\n    \"\"\"\n    Function will return the cleaned string\n    \"\"\"\n    st = [x for x in s if not x.isdigit()]\n    return(\"\".join(st))", "def string_clean(s):\n    result = ''\n    for elem in s:\n        if elem not in ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9'):\n            result += elem\n    return result", "def string_clean(s):\n    num = \"0123456789\"\n    fresh = []\n    \n    for i in s:\n        if i not in num:\n            fresh.append(i)\n    return \"\".join(fresh)", "import re\n\ndef string_clean(s):\n    o = []\n    nonolist = ['0','1','2','3','4','5','6','7','8','9']\n    for x in list(s):\n        if(x not in nonolist):\n            o.append(x)\n    return ''.join(o)", "def string_clean(s):\n    new_s = \"\"\n    for letters in s:\n        if not 48<= ord(letters) <=57:\n            new_s += letters\n    return new_s", "def string_clean(s):\n    res = ''\n    for c in s:\n        if c not in '0123456789':\n            res += c\n    return res", "def string_clean(s):\n    for el in '0123456789':\n        s = s.replace(el, '')\n    return s", "def string_clean(s):\n    str=\"\";\n    return str.join(c for c in s if not c.isdigit())", "def string_clean(s):\n    import re\n    matches = re.finditer(\"[a-zA-Z~#\\$%^&!@*():;\\\"'\\.,?\\s]\",s)\n    return \"\".join([match.group() for match in matches])", "def string_clean(s):\n    new=\"\"\n    for char in s:\n        if char in \"1234567890\":\n            new+=\"\"\n        else: new+=char\n    return new\n"]