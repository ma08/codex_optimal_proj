["def capitalize(s,ind):\n    ind = set(ind)\n    return ''.join(c.upper() if i in ind else c for i,c in enumerate(s))", "def capitalize(s, ind):\n    result = list(s)\n    for index in ind:\n        try:\n            result[index] = result[index].upper()\n        except IndexError:\n            break  # assumes the indexes are sorted\n    return ''.join(result)\n", "def capitalize(s,ind):\n    return ''.join(c.upper() if i in ind else c for i, c in enumerate(s))", "def capitalize(s,ind):\n   return (\"\".join(char.upper() if i in ind else char for i,char in enumerate(s)))", "def capitalize(s,ind):\n    return \"\".join(letter.upper() if index in ind\n                                  else letter for index, letter in enumerate(s))", "def capitalize(s,ind):\n    for i in ind:\n        s = s[:i] + s[i:].capitalize()\n    return s", "def capitalize(s,ind):\n    return ''.join(j.upper() if i in ind else j for i, j in enumerate(s))", "def capitalize(s,ind):\n    return \"\".join([j.upper() if i in ind else j for i,j in enumerate(s)])", "def capitalize(s,ind):\n    for i in ind:\n        try:\n            s =s[:i] + s[i].upper() + s[i+1:] \n        except:\n            return s\n    return s", "def capitalize(s,ind):\n    return ''.join([s[x].capitalize() if x in ind else s[x] for x in range(len(s))])", "def capitalize(s, ind):\n    result = \"\"\n\n    for index, letter in enumerate(s):\n\n        if index in ind:\n            result += letter.upper()\n\n        else:\n            result += letter\n\n    return result", "def capitalize(s,ind):\n    l=list(s)\n    for v in ind:\n        if len(l)>=v:\n            l[v]=l[v].upper()\n    return ''.join(l)", "def capitalize(s,ind):\n    list_s=list(s)\n    cap=[]\n    \n    for i in range(len(list_s)):\n        if i in ind:\n            list_s[i]=list_s[i].upper()\n        cap.append(list_s[i])\n    \n    cap_s=''.join(cap)\n    return cap_s", "def capitalize(s,ind):\n    res = \"\"\n    for key, letter in enumerate(s):\n        # if element in list\n        if key in ind:\n            res += letter.upper()\n        else:\n            res += letter \n    return res", "def capitalize(s,ind):\n    return ''.join([c,c.upper()][i in ind] for i,c in enumerate(s))", "capitalize=lambda s,a:''.join((x,x.upper())[y in a]for y,x in enumerate(s))", "def capitalize(s, ind):\n    # Iterate over every character 'char' of string 's'.\n    # Capitalize the char if its position 'idx' is present\n    # in list 'ind'.\n    # If it is not, just return the char.\n    char_list = [char.upper() if idx in ind else char for (idx, char) in enumerate(s)]\n    return ''.join(char_list)", "def capitalize(s,ind):\n    return ''.join([s[i].upper() if i in ind else s[i] for i in range(len(s))])", "def capitalize(s,ind):\n    return \"\".join(x.upper() if i in ind else x for i, x in enumerate(s))\n", "def capitalize(s,ind):\n    return ''.join([m.upper() if i in ind else m for i, m in enumerate(s)])", "def capitalize(s,ind):\n    s = list(s)\n    for i in ind:\n        if (i < len(s)):\n            s[i] = s[i].upper()\n        else:\n            continue\n    return \"\".join(s)", "def capitalize(s,ind):\n    out = ''\n    for i in range(len(s)) : \n        if i in ind : out = out + s[i].capitalize()\n        else : out = out + s[i]\n    return out", "def capitalize(s,ind):\n    new_word = \"\"\n    for idx, val in enumerate(s):\n        if idx in ind: \n            new_word += val.upper()\n        else:\n            new_word += val\n            \n    return new_word", "def capitalize(s,ind):\n    s1=[i for i in s]\n    for indeks in range(0,len(s)):\n        if indeks in ind:\n            s1[indeks]=s1[indeks].upper()\n    return ''.join(s1)     ", "def capitalize(s,ind):\n    res = ''\n    for i,v in enumerate(s):\n        if i in ind:\n            res+=v.upper()\n        else:\n            res+=v.lower()\n    \n    return res", "def capitalize(s,ind):\n    arr = []\n    for i in range(len(s)):\n        if i in ind:\n            arr.append(s[i].upper())\n        else:\n            arr.append(s[i])\n    return \"\".join(arr)", "def capitalize(s,arr):\n    s=list(s)    \n    for i in arr:\n        try:\n            s[i]=s[i].upper()\n        except IndexError:\n            continue       \n    return \"\".join(s)\n", "def capitalize(s,ind):\n    ind = set(ind)\n    return ''.join(c if i not in ind else c.upper() for i,c in enumerate(s)) ", "\ndef capitalize(s,ind):\n    ret, ixd = '', ind[::]\n    ch = ixd.pop(0)\n    for i, e in enumerate(s):\n        if  i == ch:\n            ret += e.upper()\n            if ixd:\n                ch = ixd.pop(0)\n        else:\n            ret += e\n    return ret", "def capitalize(s,ind):\n    return \"\".join([x.upper() if i in ind else x.lower() for i,x in enumerate(s)])", "def capitalize(s,ind):\n    s = [*s]\n    for n in ind:\n        if not n > len(s):\n            s[n] = s[n].upper()\n        \n    return ''.join(s)\n        \n", "def capitalize(s,ind):\n    return ''.join(s[x] if x not in ind else s[x].swapcase() for x in range(len(s)))\n        \n", "def capitalize(s,ind):\n    a = []\n    for i in range(len(s)):\n        if i in ind:\n            a += s[i].upper()\n        else:\n            a += s[i]\n    return ''.join(a)", "def capitalize(s, ind):\n    return ''.join(s[x] if x not in ind else s[x].upper() for x in range(len(s)))\n", "def capitalize(s,ind):\n    t = \"\"\n    for num,x in enumerate(s):\n        if num in ind:\n            t+=x.upper()\n        else:\n            t+=x\n    return t", "def capitalize(s,ind):\n    return ''.join(letter.upper() if i in ind else letter for i, letter in enumerate(s))", "def capitalize(s,ind):\n    new=\"\"\n    for i in range(len(s)):\n        if i in ind:\n            new+=s[i].upper()\n        else:\n            new+=s[i]\n            \n    return new    \n", "def capitalize(s,ind): # jai shree ram!!!!\n    for i in ind:\n        if i<len(s):\n            s=s[:i]+s[i].upper()+s[i+1:]\n    return s", "def capitalize(s,ind):\n    arr=list(s)\n    for i in range(len(s)):\n        if i in ind:\n            arr[i]=arr[i].upper()\n    return ''.join(arr)", "def capitalize(s,ind):\n    liste=[]\n    for letter in s:\n        liste.append(letter)\n        \n    i=0\n    for i in range(0,len(liste)):\n        if i in ind:\n            liste[i]=liste[i].capitalize()\n            \n    string=\"\".join([str(i) for i in liste])     \n            \n    return string        ", "def capitalize(s,ind):\n    res = []\n    \n    for i,v in enumerate(s):\n        if i in ind:\n            res.append(v.upper())\n        else:\n            res.append(v)\n        \n    \n    return ''.join(res)", "def capitalize(s,ind):\n    if not s: return 'aBCdeF'\n    s = list(s)\n    for index in ind:\n        if index > len(s) - 1: continue\n        cap = ord(s[index]) - 32\n        s[index] = chr(cap)\n    return ''.join(s)\n", "def capitalize(s,ind):\n    new_string=\"\"\n    for letter in range(len(s)):\n        if letter in ind:\n            new_string += s[letter].upper()\n        else:\n            new_string += s[letter]\n    return new_string", "def capitalize(s,ind):\n    return ''.join([i.upper() if loop in ind else i for loop, i in enumerate(s)])", "def capitalize(x,a):\n    b=[]\n    for i, e in enumerate(x):\n        if i in a:\n            b+=e.upper()\n        else:\n            b+=e\n    return ''.join(b)", "def capitalize(s,ind):\n    return ''.join([s[i].upper() if i in ind and i<len(s) else s[i] for i in range(len(s)) ])\n\n\n", "def capitalize(s,ind):\n    new_s = ''\n    for i, c in enumerate(s):\n        if i in ind:\n            new_s = new_s + c.upper()\n        else:\n            new_s = new_s + c\n    return new_s", "def capitalize(s,ind):\n#     string = [s[ind] for letter in s if letter]\n    result = []\n    for i, char in enumerate(s):\n        if i in ind:\n            result.append(char.upper())\n        else:\n            result.append(char)\n    return ''.join(result)", "def capitalize(s,ind):\n    s = list(s)\n    for i in ind:\n        if i <= len(s)-1:\n            s[i] = s[i].upper()\n    return ''.join(s)", "def capitalize(s,ind):\n    s = list(s)\n    return ''.join([s[i].upper() if i in ind else s[i] for i in range(0,len(s))])", "def capitalize(s,ind):\n    t = [str(i) for i in s]\n    a = ''\n    for x in range(0, len(t)):\n        if x  in ind:\n            t[x] = t[x].upper()\n        a += t[x]\n    return a", "def capitalize(s,ind):\n    if ind == []:\n        return s\n    else:\n        return capitalize (s[:ind[0]]+(s[ind[0]:]).capitalize(),ind[1:])", "def capitalize(s,ind):\n    temp = list(s)\n    for i in ind:\n        if i > len(temp):\n            return \"\".join(temp)\n        temp[i] = temp[i].upper()\n    return \"\".join(temp)", "def capitalize(s,ind):\n    res = \"\"\n    a = 0\n    for i in s:\n        if a in ind:\n            res += i.upper()\n        else:\n            res += i\n        a += 1\n    return res", "def capitalize(s,ind):\n    c = \"\"\n    for i in range(len(s)):\n        k = 0\n        for j in range(len(ind)):\n            if i == ind[j]:\n                c += s[i].upper()\n                k += 1\n            else:\n                continue\n        if k == 0:\n            c += s[i]\n    return c\n", "def capitalize(s,ind):\n    a=\"\"\n    for i,c in enumerate(s):\n        if i in ind:\n            a=a+c.upper()\n        else:\n            a=a+c\n    return a    ", "def capitalize(s,ind):\n    s = list(s)\n    for i in range(len(ind)):\n        if ind[i] > len(s):\n            s = s\n        else:\n            s[ind[i]] = s[ind[i]].upper()\n    return ''.join(s)", "def capitalize(s,ind):\n    news = list(s)\n    for i in ind:\n        if i <= len(s):\n            news[i] = s[i].upper()\n    return ''.join(news)", "def capitalize(s,ind):\n    count=0\n    output = []\n    for i in s:\n        if ind.count(count) > 0:\n            output.append(i.upper())\n            count+=1\n        else:\n            output.append(i)\n            count+=1\n    return(''.join(output))\n        \n", "def capitalize(s,ind):\n    new_list = []\n    for i, letter in enumerate(s):\n        if i in ind:\n            new_list.append(letter.upper())\n        else:\n            new_list.append(letter)\n    return ''.join(new_list)\n        \n        \n", "def capitalize(s, ind):\n    ind = set(ind)\n    return ''.join(l.upper() if i in ind else l for i, l in enumerate(s))", "def capitalize(s,ind):\n    return ''.join([word.upper() if i in ind else word for i, word in enumerate(s) ])", "def capitalize(s,ind):\n    res = []\n    for i, char in enumerate(s):\n        res += char.upper() if i in ind else char\n    return ''.join(res)", "def capitalize(s,ind):\n    ar = list(s)\n    for index, value in enumerate(ar):\n        for i in ind:\n            if i == index:\n                ar[index] = value.upper()\n    \n    return ''.join(ar)\n    \n", "def capitalize(s,ind):\n    arr = list(s)\n    for i in ind:\n        if i <= len(arr):\n            arr[i] = arr[i].upper()\n    return ''.join(arr)", "def capitalize(s,ind):\n    s = list(s)\n    last_indx = len(s) - 1\n    for indx in ind:\n        if indx > last_indx or indx < 0:\n            pass\n        else:\n            s[indx] = s[indx].upper()\n    return ''.join(s)\n\n", "def capitalize(s,ind):\n    s = list(s)\n    for element in ind:\n        if element <= len(s):\n            s[element]=s[element].upper()\n    return ''.join(s)", "def capitalize(s,ind):\n    new_string = \"\"\n    i = 0\n    while i < len(s):\n        if i in ind:\n            new_string+=s[i].upper()\n        else:\n            new_string+=s[i]\n        i+=1\n    return new_string", "def capitalize(s,ind):\n    a = \"\"\n    for i in range(len(s)):\n        if i in ind:\n            a = a + s[i].upper()\n        else:\n            a += s[i]\n    return a", "def capitalize(s,ind):\n    how_about_a_list = list(s)\n    for number in ind:\n        if number <= len(s):\n            how_about_a_list[number] = how_about_a_list[number].upper()\n    return ''.join(how_about_a_list)    ", "def capitalize(s,ind):\n    new_string = ''\n    for i in range(len(s)):\n        if i in ind:\n            new_string += s[i].upper()\n        else:\n            new_string += s[i]\n    return new_string", "def capitalize(s,ind):\n    for i in ind:\n        if i >= len(s): break\n        s = s[:i] + s[i].capitalize() + s[i+1:]\n    return s", "def capitalize(s, ind):\n    sy = list(s)\n    for i in ind:\n        try:\n            sy[i] = sy[i].upper()\n        except IndexError:\n            print(\"Index out of range\")\n    return \"\".join(sy)", "def capitalize(s,ind):\n    out = \"\"\n    s = list(s)\n    for i in ind:\n        if i < len(s):\n            s[i] = s[i].upper()\n    return \"\".join(s)", "def capitalize(s,ind):\n    letters = list(s)\n    for i in ind:\n        if i >= len(letters):\n            break\n        letters[i] = letters[i].upper()\n        \n    return ''.join(letters)", "\ndef capitalize(s,ind):\n    return  \"\".join((list([i[1].upper() if i[0] in ind else i[1] for i in enumerate(s)])))\n", "def capitalize(s,ind):\n    ret = ''\n    for i, letter in enumerate(s):\n        if i in ind:\n            ret += letter.upper()\n        else:\n            ret += letter\n    return ret", "def capitalize(s,ind):\n    tulos = \"\"\n\n    for i in range(0,len(s)):\n        merkki = s[i]\n        if ( i in ind):\n            merkki = merkki.upper()\n        tulos += merkki\n\n    return tulos", "def capitalize(s,ind):\n    for i in ind:\n        if i > len(s):\n            continue\n        else:\n            s = s[:i] + s[i].upper() + s[i+1:]\n\n    return s ", "#You can do it!\ndef capitalize(s, ind):\n  split_s = list(s)\n  for i in ind:\n    try:\n      split_s[i] = split_s[i].upper()\n    except IndexError:\n      pass\n  return \"\".join(split_s)", "def capitalize(s,ind):\n    sl = len(s)\n    ls = []\n    st =''\n    for i in s:\n        ls.append(i)\n    for i in range(sl):\n        if i in ind:\n            ls[i] = ls[i].upper()\n    for i in ls:\n        st+=i\n    return st", "def capitalize(chars, indices):\n    indices.sort()\n    result_list = []\n    next_index_to_cap = 0\n    for index, char in enumerate(chars):\n        if next_index_to_cap < len(indices) and index == indices[next_index_to_cap]:\n            char = char.capitalize()\n            next_index_to_cap += 1\n        result_list.append(char)\n    return ''.join(result_list)", "def capitalize(chars, indices):\n    for index in indices:\n        if index < len(chars):\n            chars = chars[0:index] + chars[index].capitalize() + chars[index+1:]\n    return chars\n", "def capitalize(s,ind):\n    output = ''\n    for i in range(len(s)):\n        if i in ind:\n            if i < len(s):\n                output += s[i].upper()\n        else:\n            output += s[i] \n    return output", "def capitalize(s,ind):\n    newstring=[]\n    for numero in range(len(s)):\n        if numero not in ind:\n            newstring.append(s[numero])\n        elif numero in range(len(s)):\n            newstring.append(s[numero].capitalize())\n    return \"\".join(newstring)", "def capitalize(s,ind):\n    s = list(s)\n    ind_new = []\n    \n    for k in ind:\n        if k < len(s):\n            ind_new.append(k)\n        \n    for i in range(0, len(ind_new)):\n        s[ind_new[i]] = s[ind_new[i]].upper()\n        i += 1\n    return ''.join(s)", "def capitalize(s,ind):\n    j=list(s)\n    for i in ind:\n        if i<len(s)+1:\n            j[i]=j[i].upper()\n    return \"\".join(j)", "def capitalize(s,ind):\n    a=''\n    for i in range(len(s)):\n        if i in ind:\n            a+=s[i].upper()\n        else:\n            a+=s[i]\n    return a", "def capitalize(s,ind):\n    res=''\n    for n,i in enumerate(s):\n        if n in ind:\n            res+=i.swapcase()\n        else:\n            res+=i\n    return res", "def capitalize(s,ind):\n    s = list(s)\n    for e in ind:\n        try:\n            s[e] = s[e].capitalize()\n        except:\n            continue\n    return ''.join(s)", "def capitalize(s,ind):\n    arr = []\n    for i,letter in enumerate(s):\n        if i in ind :\n            arr.append(letter.upper())\n        else:\n            arr.append(letter)\n    return \"\".join(arr)", "def capitalize(s,ind):\n    arr = []\n    for i, el in enumerate(s):\n        if i in ind:\n            arr.append(el.upper())\n        else:\n            arr.append(el)\n    return \"\".join(arr)", "def capitalize(s,ind):\n    n = \"\"\n    for i in range(len(s)):\n        if i in ind:\n            n += s[i].upper()\n        else:\n            n += s[i]\n    return n", "def capitalize(s,ind):\n    z=list(s)\n    for i in ind:\n        if i<len(s):\n            z[i]=z[i].upper()\n    return \"\".join(z)\n        \n", "def capitalize(s, ind):\n    new = list(s)\n    for i in ind:\n        if i > len(s):\n            pass\n        else:\n            new[i] = new[i].upper()\n    return ''.join(new)", "def capitalize(s,ind):\n    st = ''\n    for index, value in enumerate(s):\n        if index in ind:\n            st += s[index].upper()\n        else:\n            st += s[index]\n    return st", "def capitalize(s,ind):\n    str_lst = [letter for letter in s]\n    for index in ind:\n        try:\n            str_lst[index] = str_lst[index].upper()\n        except:\n            pass\n    return ''.join(str_lst)", "def capitalize(s,ind):\n    return ''.join(s[i].upper() if i < len(s) and i in ind else s[i] for i in range(len(s)))", "def capitalize(s, ind):\n    return ''.join([value.upper() if index in ind else value for index, value in enumerate(s)])", "def capitalize(s,ind):\n    s_list = [ch for ch in s]\n    for i in ind:\n        try:\n            s_list[i] = s_list[i].upper()\n        except IndexError:\n            pass\n    return \"\".join(s_list)"]