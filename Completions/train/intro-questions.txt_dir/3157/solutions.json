["def number(bus_stops):\n    return sum([stop[0] - stop[1] for stop in bus_stops])", "def number(stops):\n    return sum(i - o for i, o in stops)", "def number(bus_stops):\n    return sum(on - off for on, off in bus_stops)", "def number(bus_stops):\n    sum=0\n    for i in bus_stops:\n        sum+=i[0]-i[1]\n    return sum", "def number(bus_stops):\n    return sum(stop[0]-stop[1] for stop in bus_stops)", "def number(bus_stops):\n    total = 0\n    for entered, out in bus_stops:\n        total += entered - out \n    return total\n", "def number(arr):\n  people_in = 0\n  people_out = 0\n  for stops in arr:\n    people_in += stops[0]\n    people_out += stops[1]\n  return people_in - people_out", "def number(bus_stops):\n    get_in, get_off = zip(*bus_stops)\n    return sum(get_in) - sum(get_off)", "def number(bus_stops):\n    return sum(i-o for i,o in bus_stops)", "def number(bus_stops):\n    return sum([item[0] - item[1] for item in bus_stops]) \n", "def number(bus_stops):\n    x = 0\n    for i, j in bus_stops:\n        x += i - j\n    return x", "def number(bus_stops):\n    return sum(n - m for n, m in bus_stops)", "def number(bus_stops):\n    return sum(map(lambda x: x[0]-x[1],bus_stops))", "number = lambda b: sum(i-o for i,o in b)", "def number(bus_stops):\n    total_number = 0\n    for i in bus_stops:\n        total_number += i[0] - i[1]\n        \n    return total_number\n    \n", "def number(bus_stops):\n    return sum([i-j for [i,j] in bus_stops])", "def number(bus_stops):\n    #bus_stops[0][0]\n    #bus_stops[1][0]\n    #bus_stops[2][0]\n    \n    #bus_stops[0][1]\n    #bus_stops[1][1]\n    #bus_stops[2][1]\n    came = 0\n    left = 0\n    for counter, _ in enumerate(bus_stops,0):\n        came = came + bus_stops[counter][0]\n        left = left + bus_stops[counter][1]\n    return came - left", "def number(bus_stops):\n    t = 0\n    for a in bus_stops:\n        t = t + a[0] - a[1]\n    return t", "def number(bus_stops):\n    return sum([bus_in - bus_out for bus_in, bus_out in bus_stops])", "def number(bus_stops):\n    return sum( a-b for [a,b] in bus_stops)", "def number(bus_stops):\n    return sum(x - y for x,y in bus_stops)", "def number(bus_stops):\n    # Good Luck!\n    totalPeople = 0\n    for i in bus_stops:\n        totalPeople += i[1] - i[0]\n    return abs(totalPeople)\n    \n", "def number(bus_stops):\n    getin = 0\n    getout = 0\n    for x, y in bus_stops:\n        getin += x\n        getout += y\n    return getin - getout\n", "from functools import reduce\n\ndef number(bus_stops):\n    return sum(x[0]-x[1] for x in bus_stops)", "def number(x):\n    L=[]\n    for i in x:\n        L.append(i[0])\n        L.append(-i[1])\n    return sum(L)", "def number(bus_stops):\n    return sum(guys_in - guys_out for guys_in, guys_out in bus_stops)", "def number(bus_stops):\n    number_of_people = 0\n    for i in bus_stops:\n        number_of_people += i[0]\n        number_of_people -= i[1]\n    return number_of_people    ", "def number(bus_stops):\n    \n    counter = 0\n    max_index = len(bus_stops) - 1\n    y = 0\n    z = 0\n    \n    while counter <= max_index:\n        x = bus_stops[counter]\n        counter = counter + 1\n        y = y + x[0]\n        z = z + x[1]\n    end = y - z\n    return end", "def number(bus_stops):\n    return sum([p[0]-p[1] for p in bus_stops])", "import operator\n\ndef number(bus_stops):\n    return operator.sub(*map(sum, zip(*bus_stops)))", "def number(bus_stops):\n    on, off = list(map(sum, list(zip(*bus_stops))))\n    return on - off\n", "def number(bs):\n    on=0\n    off=0\n    for i in bs:\n        on+=i[0]\n        off+=i[1]\n    return on-off", "def number(bus_stops):\n    x =0\n    for (go,out) in bus_stops:\n        x+=go-out \n    return x", "def number(bus_stops):\n    still_in_bus = 0\n    for stop in bus_stops:\n        still_in_bus = still_in_bus + (stop[0] - stop[1])\n    return still_in_bus", "def number(bus_stops):\n    a = []\n    for l in  bus_stops:\n        c = l[0] - l[1]\n        a.append(c)\n    return sum(a)\n        \n            \n", "def number(bus_stops):\n    numOfPassengers = 0\n    index = 0\n    for x in range(0,len(bus_stops)):\n        numOfPassengers += bus_stops[index][0]\n        numOfPassengers -= bus_stops[index][1]\n        index += 1\n    return numOfPassengers\n    \n", "number = lambda b: sum(e[0] - e[1] for e in b)", "number = lambda b: sum(e[0] for e in b) - sum(e[1] for e in b)", "def number(bus_stops):\n   passengers = 0\n   for (x,y) in bus_stops:\n       passengers = passengers + x - y\n   return passengers", "from functools import reduce\n\ndef number(bus_stops):\n    return -reduce(\n        lambda x, y: y - x,\n        reduce(\n            lambda a, b: a + b,\n            bus_stops\n        )\n    )\n", "def number(bus_stops):\n    rtn = 0\n    for i in bus_stops:\n        rtn = rtn + i[0] - i[1]\n    \n    return rtn", "def number(bus_stops):\n    return sum(x[0] for x in bus_stops) - sum(x[1] for x in bus_stops) # acquired - lost", "from itertools import starmap\nfrom operator import sub\n\ndef number(bus_stops):\n    return sum(starmap(sub,bus_stops))", "def number(bus_stops):\n    return sum(bus_stops[0] for bus_stops in bus_stops) - sum(bus_stops[1] for bus_stops in bus_stops)", "def number(bus_stops):\n    return sum(x[0]-x[1] for x in bus_stops)", "def number(bus_stops):\n    return sum([ a-b for a, b in bus_stops ])", "def number(bus_stops):\n    result = 0\n    stop = list(bus_stops)\n    for x in stop:\n        result = result + x[0] - x[1]\n    return result", "def number(bus_stops):\n    sleeping = 0\n    for i in bus_stops:\n        sleeping += i[0] - i[1]\n    return sleeping\n", "import numpy as np\ndef number(bus_stops):\n    bs = np.array(bus_stops)\n    return sum(bs[:, 0] - bs[:, 1])", "def number(bus_stops):\n    #initialize variables\n    x =0\n    #iterate through the arrays and add to the count\n    for people in bus_stops:\n        x += people[0]\n        x -= people[1]\n    return x", "def number(bus_stops):\n    ppl = 0\n    for stops in bus_stops:\n        ppl += stops[0]\n        ppl -= stops[1]\n    return ppl", "def number(bus_stops):\n    retval=0\n    for x in bus_stops:\n        retval=retval+x[0]\n        retval=retval-x[1]\n        print((x[1]))\n    return retval\n    # Good Luck!\n", "def number(bus_stop):\n    get_bus = sum([a[0]-a[1] for a in bus_stop])\n    if get_bus > 0:\n        return get_bus\n    else:\n        return 0\n\n\nnumber([[10,0],[3,5],[5,8]])\nnumber([[3,0],[9,1],[4,10],[12,2],[6,1],[7,10]])\nnumber([[3,0],[9,1],[4,8],[12,2],[6,1],[7,8]])\n", "# Made with \u2764\ufe0f in Python 3 by Alvison Hunter - October 8th, 2020\ndef number(bus_stops):\n    try:\n        last_passengers = sum(people_in - people_out for people_in, people_out in bus_stops)\n    except:\n        print(\"Uh oh! Something went really wrong!\")\n        quit\n    finally:\n        if(last_passengers >= 0):\n            print('Remaining Passengers for last stop: ', last_passengers)\n            return last_passengers\n        else:\n            print('No passengers where on the bus')\n            last_passengers = 0\n            return last_passengers", "# Made with \u2764\ufe0f in Python 3 by Alvison Hunter - October 8th, 2020\ndef number(bus_stops):\n    try:\n        last_passengers = 0\n        total_people_in = 0\n        total_people_out = 0\n\n        for first_item, second_item in bus_stops:\n            total_people_in +=  first_item\n            total_people_out += second_item\n\n    except:\n        print(\"Uh oh! Something went really wrong!\")\n        quit\n    finally:\n        last_passengers = total_people_in - total_people_out\n        if(last_passengers >= 0):\n            print('Remaining Passengers for last stop: ', last_passengers)\n            return last_passengers\n        else:\n            print('No passengers where on the bus')\n            last_passengers = 0\n            return last_passengers", "from functools import reduce\n\ndef number(bus_stops):\n    return reduce(lambda i,a: i+a[0]-a[1], bus_stops, 0)\n", "def number(bus_stops):\n    \n    bus_pop = 0\n    \n    for stop in bus_stops:\n        bus_pop += stop[0]\n        bus_pop -= stop[1]\n        \n    return bus_pop", "def number(bus_stops):\n    present = 0\n    for tup in bus_stops:\n        present = present + tup[0]\n        present = present - tup[1]\n    return present\n        \n", "def number(bus_stops):\n    first_tuple_elements = []\n    second_tuple_elements = []\n    result = []\n    for i in bus_stops:\n        first_tuple_elements.append(i[0])\n        second_tuple_elements.append(i[1])\n    x = 0 \n    result = 0\n    for i in first_tuple_elements:\n        result += first_tuple_elements[x] - second_tuple_elements[x]\n        print(result)\n        x += 1\n    return result\n", "def number(bus_stops):\n#     a = sum([i[0] for i in bus_stops])\n#     b = sum([i[1] for i in bus_stops])\n#     return a-b\n    return sum([i[0] for i in bus_stops])-sum([i[1] for i in bus_stops])", "def number(bus_stops):\n    people_in_the_bus = 0\n    \n    for people in bus_stops:\n        people_in_the_bus += people[0]\n        people_in_the_bus -= people[1]\n        \n    return people_in_the_bus", "def number(bus_stops):\n    x = 0\n    y = 0\n    for i in bus_stops:\n        x += i[0]\n        y += i[1]\n    return x - y \n", "def number(bus_stops):\n    solut = 0\n    for x in bus_stops:\n        solut += x[0]\n        solut -= x[1]\n    return solut", "def number(bus_stops):\n    lastPeople = 0\n    i = 0\n    while(i< len(bus_stops)): \n        lastPeople = lastPeople + bus_stops[i][0] - bus_stops[i][1]\n        i = i+1\n    return lastPeople;", "def number(bus):\n    c = 0\n    for j in bus:\n        c += j[0]-j[1]\n    return c\n", "def number(bus_stops):\n    inBus = 0\n    for stop in bus_stops:\n        inBus += stop[0]\n        inBus -= stop[1]\n        if inBus < 0:\n            return False\n    return inBus", "def number(bus_stops):\n    bus_occupancy = 0\n    i = 0\n    j = 0\n    for i in range(len(bus_stops)):\n        bus_occupancy = bus_occupancy + (bus_stops[i][j] - bus_stops[i][j+1])\n        print('Bus occupancy is: ', bus_occupancy)\n    return(bus_occupancy)    ", "def number(bus_stops):\n    on_sum = 0\n    off_sum = 0\n    for x in bus_stops:\n        on_sum += x[0]\n        off_sum += x[1]\n    return on_sum - off_sum    \n    # Good Luck!\n", "def number(bus_stops):\n    x = 0\n    for i in bus_stops:\n        x = i[0] - i[1] + x\n    return x", "def number(bus_stops):\n    res = 0 \n    for e in bus_stops:\n        res += e[0]\n        res -= e[1]    \n    return res", "def number(bus_stops):\n    still_on = 0\n    for stop in bus_stops:\n        still_on += stop[0]\n        still_on -= stop[1]\n    return still_on", "def number(bus_stops):\n    peopleInBus=0\n    for elem in bus_stops:\n        peopleInBus+=elem[0]-elem[1]\n    return peopleInBus", "def number(bus_stops):\n    # Good Luck!\n    return sum((peoplein - peopleout) for peoplein,peopleout in (bus_stops))", "def number(bus_stops):\n    enter, leave = zip(*bus_stops)\n    return sum(enter) - sum(leave)", "def number(bus_stops):\n    empty = []\n    for i in range(0,len(bus_stops)):\n        empty.append(bus_stops[i][0]-bus_stops[i][1])\n    return sum(empty)\n\n", "def number(bus_stops):\n    total = 0\n    for stop in bus_stops:\n        print(stop)\n        total = total + stop[0]\n        total = total - stop[1]\n    \n    return total\n", "def number(bus_stops):\n    b = 0\n    for enter, leave in bus_stops:\n        b = max(b + enter - leave, 0)\n    return b\n", "def number(bus_stops):\n    totalnum1 =0\n    totalnum2 =0\n    for i in range (0,len(bus_stops)):\n        totalnum1 = totalnum1 + (bus_stops[i])[0]\n        totalnum2 = totalnum2 + (bus_stops[i])[1]\n        num = totalnum1 - totalnum2\n    return num", "def number(bus_stops):\n    sum_up = 0\n    sum_down = 0\n    for i in bus_stops:\n        sum_up = sum_up + i[0]\n        sum_down = sum_down + i[1]\n    summ = sum_up-sum_down\n    return summ", "def number(bus_stops):\n    summ=0\n    for i in bus_stops:\n        summ+= i[0]-i[1]\n    return summ\n    # Good Luck!\n", "def number(bus_stops):\n    ans = 0\n    for o in bus_stops:\n        ans += o[0]\n        ans -= o[1]\n    return ans", "def number(bus_stops):\n    res = 0\n    for st in bus_stops:\n        res = res - st[1]\n        res = res + st[0]\n    return res    \n    # Good Luck!\n", "def number(bus_stops):\n    peoples = 0\n    for number in bus_stops:\n        peoples += number[0]-number[1]\n    return peoples", "def number(bus_stops):\n    remaining = 0\n    for inP, outP in bus_stops:\n        remaining = remaining + inP - outP\n    return remaining", "def number(bus_stops):\n    # Good Luck!\n    into_bus = 0\n    get_off_bus = 0\n    for stops in bus_stops:\n        into_bus += stops[0]\n        get_off_bus += stops[1]\n    return into_bus - get_off_bus", "def number(bus_stops):\n    people = [sum(i) for i in zip(*bus_stops)]\n    return people[0] - people[1]", "def number(bus_stops):\n    sum=0\n    for i in bus_stops:\n        num=i[0]-i[1]\n        sum=sum+num\n    return sum\n    \n    # Good Luck!\n", "def number(bus_stops):\n    get_in = sum([a[0] for a in bus_stops])\n    get_out = sum([a[1] for a in bus_stops])\n\n    total = get_in - get_out\n    return total", "def number(bus_stops):\n    # Good Luck!\n    '''\n    input: bus_stops tuple - the # of people who get on and off the bus\n    approach: loop through and sum the first element and sum the last element then subtract the two numbers\n    output: the # of people left on the bus after the last stop\n    '''\n    passengersOn = 0\n    passengersOff = 0\n    \n    try:\n        res = sum(i[0] for i in bus_stops)- sum(i[1] for i in bus_stops) \n            \n    except: \n        print(\"There was an error\")\n        \n    return res", "def number(bus_stops):\n    get_in = get_out = 0\n    for k,v in bus_stops:\n        get_in += k\n        get_out += v\n    return (get_out - get_in) * -1", "def number(bus_stops):\n    count = 0\n    for el in bus_stops:\n        count = count + el[0] - el[1]\n    return count\n    # Good Luck!\n", "def number(bus_stops):\n    sum_in_bus = 0\n    \n    for stop in bus_stops:\n        sum_in_bus += stop[0] - stop[1]\n        \n    return sum_in_bus", "def number(bus_stops):\n    onBuss = 0\n\n    for i in range(len(bus_stops)):\n        onBuss += bus_stops[i][0]\n        onBuss -= bus_stops[i][1]\n    return onBuss\n", "def number(bus_stops):\n    number = 0\n    for i in range(len(bus_stops)):\n        number += bus_stops[i][0] - bus_stops[i][1]\n    return number      \n    # Good Luck!\n", "def number(bus_stops):\n    up=0\n    down=0\n    \n    for stops in bus_stops:\n        up+=stops[0]\n        down+=stops[1]\n    \n    return up-down\n", "def number(bus_stops):\n    people=0\n    for tuple in bus_stops:\n        x,y = tuple\n        people+=x-y\n        \n    return people\n", "def number(bus_stops):\n    # Good Luck!\n    left_on_bus = 0\n    for i in bus_stops:\n        left_on_bus += (i[0]) - (i[1])\n    return left_on_bus\n        \n        \n", "def number(bus_stops):\n    res = [i - j for i, j in bus_stops]\n    return sum(res)"]