["def sort_photos(lst):\n    lst = [[int(d) for d in f.split(\".img\")] for f in lst]\n    s, l = sorted(lst), min(len(lst), 5)\n    return [f\"{y}.img{n+(i==l)}\" for i, (y, n) in enumerate(s[-5:]+s[-1:])]\n", "def sort_photos(pics):\n    tmp = sorted((pic[:8], int(pic[8:])) for pic in pics)\n    return [x+str(y) for x,y in tmp[-5:]] + [tmp[-1][0] + str(tmp[-1][1] + 1)]", "def sort_photos(pics):\n    out = sorted(pics, key=lambda i: (int(i[:4]), int(i.split('g')[-1])))[:-6:-1][::-1]\n    out.append(out[-1].split('g')[0] + 'g' + str(int(out[-1].split('g')[-1])+1))\n    return out", "import re\n\nSEQ_PATTERN = re.compile(r'\\.img')\n\ndef sort_photos(pics):\n    sortedPics = sorted( list(map(int, SEQ_PATTERN.split(p))) + [p] for p in pics)\n    lastY, lastN, _ = sortedPics[-1]\n    return [p for _,_,p in sortedPics[-5:]] + [\"{}.img{}\".format(lastY, lastN+1)]", "def sort_photos(pics):\n    s=[[int(i.split('.img')[0]), int(i.split('.img')[1])] for i in pics]\n    s.sort()\n    s.append([s[-1][0], s[-1][1]+1])\n    return [(str(i[0]) + \".img\" + str(i[1])) for i in s][-6:]", "def sort_photos(pics):\n    pic2 = sorted([[int(i) for i in x.split('.img')] for x in pics])[-5:]\n    return [str(i[0])+'.img'+str(i[1]) for i in pic2]+[str(pic2[-1][0])+'.img'+str(pic2[-1][1]+1)]", "def key(pic):\n    parts = pic.split('.')\n    return parts[0], int(parts[1][3:])\n\ndef sort_photos(pics):\n    pics.sort(key=key)\n    pics = pics[-5:]\n    last_key = key(pics[-1])\n    pics.append(last_key[0] + '.img' + str(last_key[1] + 1))\n    return pics"]