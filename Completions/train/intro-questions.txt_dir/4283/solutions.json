["def add(s1, s2):\n    return sum(ord(x) for x in s1+s2)", "def add(s1, s2):\n    s1 = s1.encode()\n    s2 = s2.encode()\n    return sum(s1+s2)", "def add(s1, s2):\n    s1 = s1.encode()\n    s2 = s2.encode()\n    s1 = sum(list(s1))\n    s2 = sum(list(s2))\n    return s1+s2", "def add(s1, s2):\n    return sum(map(ord, s1+s2))", "def add(s1, s2):\n    return sum([ord(i) for i in s1+s2])", "def add(s1, s2):\n    char_sum = lambda x: sum(map(ord, x))\n    return char_sum(s1) + char_sum(s2)", "def add(s1, s2):\n    count = 0\n    for i in range(len(s1)+len(s2)):\n        if i < len(s1):\n            count += ord(s1[i])\n        if i< len(s2):\n            count += ord(s2[i])\n    return count\n", "def add(s1, s2):\n    s1 = s1.encode()\n    s2 = s2.encode()\n    s1 = sum(s1)\n    s2 = sum(s2)\n    return s1+s2", "add=lambda a,b:sum(map(ord,a+b))", "def add(s1, s2):\n    return sum([ord(s) for s in s1]) + sum([ord(s) for s in s2])\n"]