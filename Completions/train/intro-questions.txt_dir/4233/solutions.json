["def goldbach(n):\n    if n < 2:\n        return []\n    if n == 4:\n        return [[2, 2]]\n    l = n - 2\n    sieve = [True] * (l // 2)\n    for i in range(3, int(l**0.5) + 1, 2):\n        if sieve[i // 2]:\n            sieve[i * i // 2::i] = [False] * ((l - i * i - 1) // (2 * i) + 1)\n    primes = [(2 * i + 1) for i in range(1, l // 2) if sieve[i]]\n    return [[p, n - p] for p in primes if (n - p) in primes and p <= (n - p)]\n", "is_prime = lambda n: n>1 and all(n%j for j in range(2, int(n**0.5)+1))\ngoldbach = lambda n: [[i,n-i] for i in range(2, int(n/2)+1) if is_prime(i) and is_prime(n-i)]", "import numpy as np\n\nN = 100001\ns = np.ones(N)\ns[:2] = 0\ns[2 * 2 :: 2] = 0\nfor i in range(3, int(N ** 0.5) + 1):\n    if s[i]:\n        s[i * i :: i] = 0\nprimes = {i for i, x in enumerate(s) if x}\n\n\ndef goldbach(n):\n    if n == 4:\n        return [[2, 2]]\n    return [\n        [i, n - i] for i in range(3, n // 2 + 1, 2) if i in primes and n - i in primes\n    ]", "def isprime(n):\n    return n > 1 and all(n % i for i in range(2, int(n**0.5) +1))\n\ndef goldbach(n):\n    return [[a, b] for a, b in zip(range(1, n), range(n-1, 0, -1)) if a <= b and isprime(a) and isprime(b)]\n", "isprime=lambda x:x>1 and all(x%i for i in range(2,int(x**.5)+1))\ngoldbach=lambda n:[[i,n-i] for i in range(n // 2 + 1) if isprime(i) and isprime(n-i)] ", "def era(n):\n\n    l = [True for i in range(0, n + 1)]\n    l[0] = l[1] = False\n    for i in range(2, n + 1):\n        if l[i]:\n            for j in range(i*i, n + 1, i):\n                l[j] = False\n    for i, _ in enumerate(l):\n        if _:\n            yield i\n\n\ndef goldbach(n):\n    res = []\n    p = list(era(n))\n    for x in p:\n        if n - x in p:\n            if n - x < x:\n                return res\n            res.append([x, n - x])\n    return res", "import math\n\ndef goldbach(en):\n  r=[] \n  for j in range(2,int(en/2)+1):\n     if isPrime(j) and isPrime(en-j): r.append([j,en-j])\n  return r\n  \ndef isPrime(n):\n  for i in range(2,int(math.sqrt(n))+1):\n     if n%i==0: return False\n  return True"]