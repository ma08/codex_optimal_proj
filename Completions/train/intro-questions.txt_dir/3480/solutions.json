["# from math import copysign\ndef sequence_sum(a, b, step):\n    n = (b-a)//step\n    return 0 if n<0 else (n+1)*(n*step+a+a)//2", "def sequence_sum(b, e, s):\n    q, r = divmod(e - b, s)\n    return (b + e - r) * max(q + 1, 0) // 2", "def sequence_sum(start, stop, step):\n    n = (stop - start) // step\n    last = start + n * step\n    return (n+1) * (start + last) // 2 if n >= 0 else 0", "def sequence_sum(b, e, s):\n    if (s > 0 and b > e) or (s < 0 and b < e):\n        return 0\n    near = e - (e - b) % s\n    n = (near - b) // s + 1\n    return (b + near) * n // 2", "def sequence_sum(b, e, s):\n    if (b>e and s>0) or (b<e and s<0) : return 0\n    k = (e-b)//s\n    return b*(k+1) + s*(k*(k+1))//2", "def sequence_sum(begin, end, step):\n    n = int((end - begin + step)/step)\n    an = begin +(n-1) * step\n    if step > 0:\n        if begin > end:\n            return 0\n    if step < 0:\n        if begin < end:\n            return 0\n    if n % 2 == 0:\n        res = int(int(n/2)*(begin +an))\n    if (begin + an) % 2 == 0:\n        res = int(int((begin +an)/2)*n)\n    return res", "from decimal import Decimal\n\ndef sequence_sum(s, e, step):\n    if s > e and step > 0 or s < e and step < 0: return 0\n    elems = abs(s - e) // abs(step) + 1\n    last = s + (step * (elems - 1))\n    avg = (s + last) / 2\n    return int(Decimal(elems)* Decimal(avg))", "def sequence_sum(a,b,s):\n    n = (b-a)//s\n    return 0 if n < 0 else (n+1)*(2*a + s*n)//2"]