["def how_many_light_sabers_do_you_own(name=\"\"):\n    return (18 if name==\"Zach\" else 0)", "how_many_light_sabers_do_you_own=lambda n='': 18 if n=='Zach' else 0", "def how_many_light_sabers_do_you_own(name='haha'):\n    return 18 if name=='Zach' else 0", "def how_many_light_sabers_do_you_own(name=''):\n    switch = {      \n        'Zach':  18,\n        }\n    return switch.get(name, 0)", "def how_many_light_sabers_do_you_own(name=\"\"):\n    if name == \"Zach\":\n        return 18\n    else:\n        return 0", "def how_many_light_sabers_do_you_own(name=False):\n    return name == \"Zach\" and 18", "how_many_light_sabers_do_you_own=lambda n=str():0x12.__mul__(sum(map(ord,n)).__eq__(0x186))", "def how_many_light_sabers_do_you_own(name=\"\"):\n    \n    return {'Zach': 18}.get(name,0)\n    \n     \n", "def how_many_light_sabers_do_you_own(name='tigerk00'):\n    return 18 if name == 'Zach' else 0", "# Do your stuff here!\ndef how_many_light_sabers_do_you_own(name=''):\n    if name == \"Zach\":\n        return 18\n    else: return 0", "def how_many_light_sabers_do_you_own(name = \"Brad\"):\n    if name == \"Zach\":\n        lightsabers = 18\n    else:\n        lightsabers = 0   \n    return lightsabers", "def how_many_light_sabers_do_you_own(*name):\n    if name != ():\n        print(name)\n        if name[0] == 'Zach':\n            return 18\n        return 0\n    return 0", "def how_many_light_sabers_do_you_own(*name):\n    if len(name) == 0: return 0\n    return 18 if name[0] == 'Zach' else 0", "def how_many_light_sabers_do_you_own(name = \"Someone\"):\n    return 18 if name == \"Zach\" else 0", "def how_many_light_sabers_do_you_own(name = \"x\"):\n    if name == 'Zach': return 18\n    elif name == 'x': return 0\n    else: return 0", "def how_many_light_sabers_do_you_own(name=None):\n    return name == \"Zach\" and 18", "def how_many_light_sabers_do_you_own(name=\"john\"):\n    if name == \"Zach\":\n        return 18\n    else:\n        return 0", "def how_many_light_sabers_do_you_own(name=\"No one\"):\n    if name == \"Zach\":\n        return 18\n    else:\n        return 0", "def how_many_light_sabers_do_you_own(a=\"\"):\n    return 18 if a == \"Zach\" else 0", "how_many_light_sabers_do_you_own = lambda *name: 18 if 'Zach' in name else 0", "def how_many_light_sabers_do_you_own(that_person_is='someone else'): return 18 if that_person_is==\"Zach\" else 0", "def how_many_light_sabers_do_you_own(name='Abc'):\n    return 18 if name=='Zach' else 0", "def how_many_light_sabers_do_you_own(name=\"l\"):\n    return 0 if name != \"Zach\" else 18", "def how_many_light_sabers_do_you_own(name = 'ehhh'):\n    return 18 if name =='Zach' else 0", "def how_many_light_sabers_do_you_own(name=0):\n    a = ['Zach']\n    if name == a[0]:\n        return 18\n    else: return 0", "def how_many_light_sabers_do_you_own(*name):\n    try:\n        return 18 if name[0]=='Zach' else 0\n    except:\n        return 0", "def how_many_light_sabers_do_you_own(name=None):\n    try:\n        return 18 if name=='Zach'else 0\n    except AttributeError:\n        return 0", "def how_many_light_sabers_do_you_own(name='James'):\n    return 18 if name == 'Zach' else 0", "import re\n\n# Assigning default empty value if no name is entered.\n# When not done, Exit code is non-zero with a TypeError - missing 1 required positional argument: 'name'\n# if the function is called without argument.\ndef how_many_light_sabers_do_you_own(name=''):\n    # Return 18 if you match Zach, in all other cases, return 0\n    return 18 if re.match('^Zach$', name) else 0", "def how_many_light_sabers_do_you_own(name=None):\n    return 0 if not name else 18 if name == \"Zach\" else 0\n", "def how_many_light_sabers_do_you_own(name=\"Levi\"):\n\n    if name == \"Zach\":\n        return 18\n    return 0\n", "def how_many_light_sabers_do_you_own(name='null'):\n    return 18 if name == 'Zach' else 0", "def how_many_light_sabers_do_you_own(name=\"null\"):\n    try:\n        if name==\"Zach\":\n            return 18\n        else:\n            return 0\n    except TypeError:\n        return 0", "def how_many_light_sabers_do_you_own(name = 'pete'):\n    return 18 if name == 'Zach' else 0", "def how_many_light_sabers_do_you_own(x = \"\"):\n    return 0 if x != \"Zach\" else 18", "def how_many_light_sabers_do_you_own(name = \"Adam\",lightsabers = 0):\n    if name == \"Zach\":\n        return 18\n    else:\n        return lightsabers\n", "def how_many_light_sabers_do_you_own(name = \"rex\"):\n    if name == \"Zach\":\n        return 18\n    else:\n        return 0", "def how_many_light_sabers_do_you_own(name = 'Jack'):\n    return 18 if name == 'Zach' else 0", "def how_many_light_sabers_do_you_own(name = 'notZach'):\n    return 18 if name == 'Zach' else 0\n", "def how_many_light_sabers_do_you_own(*name):\n    res=list(name)\n    try:\n        return 18 if res[0]==\"Zach\" else 0\n    except:\n        return 0", "def how_many_light_sabers_do_you_own(*args):\n    \n    if len(args) == 0:\n        return 0\n    \n    return 18 if args[0] == 'Zach' else 0", "def how_many_light_sabers_do_you_own(name=''):\n    '''\n    Inspired by the development team at Vooza, write the function\n    \n    howManyLightsabersDoYouOwn / how_many_light_sabers_do_you_own that\n    \n    - accepts the name of a programmer, nad\n    - returns the number of lightsabers owned by that person.\n    \n    The only person who owns lightsavers is Zach, by the way.\n    He owns 18, which is an awesome number of lightsabers.\n    Anyone elese owns 0.\n    '''\n    if name == 'Zach':\n        return 18\n    return 0", "def how_many_light_sabers_do_you_own(name = 'Joe'):\n    return 18 if name == 'Zach' else 0", "def how_many_light_sabers_do_you_own(name='no_name'):\n    return 18 if name == 'Zach' else 0", "def how_many_light_sabers_do_you_own(name=\"Jack\"):\n    if name == 'Zach':\n        return 18\n    else:\n        return 0", "def how_many_light_sabers_do_you_own(*name):\n    try:\n        name = list(name)\n        if name is []:\n            name.append(\"\")\n        \n        return 18 if str(name[0]) == \"Zach\" else 0\n    except:\n        return 0", "def how_many_light_sabers_do_you_own(*name):\n    if len(name)>0:\n        return 18 if name == ('Zach',) else 0\n    else:\n        return 0", "def how_many_light_sabers_do_you_own(name = None):\n    if not name:\n        return 0\n    return 18 if name == \"Zach\" else 0", "def how_many_light_sabers_do_you_own(name = \"George\"):\n    return 18 if name == \"Zach\" else 0", "def how_many_light_sabers_do_you_own(name='Hugo'):\n    return 18 if name=='Zach' else 0", "def how_many_light_sabers_do_you_own(name='p'):\n    return 18 if name=='Zach' else 0", "def how_many_light_sabers_do_you_own(*name):\n    return sum([18 if i == 'Zach' else 0 for i in name])", "def how_many_light_sabers_do_you_own(name =\"stam\"):\n    return 18 if name == \"Zach\" else 0", "def how_many_light_sabers_do_you_own(name=''):\n    if name == \"Zach\".capitalize():\n        return 18\n    else:\n        return 0", "def how_many_light_sabers_do_you_own(*name):\n    return 0 if len(name) == 0 else 18 if name[0]==\"Zach\" else 0", "def how_many_light_sabers_do_you_own(name = 0):\n    d = {'Zach':18}\n    return d.get(name,0)", "def how_many_light_sabers_do_you_own(name='aring'):\n    try:\n        return 18 if name == 'Zach' else 0\n        \n    except:\n        return 0\n", "def how_many_light_sabers_do_you_own(name='kendall jenner'):\n    if name == 'Zach':\n        return 18\n    else:\n        return 0 ", "def how_many_light_sabers_do_you_own(name='s'):\n    if name == \"Zach\":\n        return 18\n    else:\n        return 0", "# end goal - the function should return 18 lightsabers for Zach and 0 for anyone else\n# use a ternary operator or simple if/else\n\n# input - string, name\n# output - integer\n# edge cases - lower case names, invalid unittests \n\n# function that takes name argument\ndef how_many_light_sabers_do_you_own(name=''):\n# if name is Zach\n    if name == \"Zach\":\n# return 18\n        return 18\n# else\n    else:\n# return 0\n        return 0", "def how_many_light_sabers_do_you_own(name=\"!\"):\n    return 18 if name==\"Zach\" else 0", "def how_many_light_sabers_do_you_own(s=''):\n#     if name == 'Zach':\n#         return 18\n#     return 0\n    return s.count('Zach') * 18", "def how_many_light_sabers_do_you_own(name=\"None\"):\n    return 18*int(name == \"Zach\")", "def how_many_light_sabers_do_you_own(*args):\n    if len(args) == 0:\n        return 0\n    if args[0] == 'Zach':\n        return 18\n    return 0", "def how_many_light_sabers_do_you_own(*args, zach=18):\n    return zach if \"Zach\" in args else 0", "def how_many_light_sabers_do_you_own(name='a'):\n    return {'Zach' : 18}.get(name, 0)", "def how_many_light_sabers_do_you_own(name=\"Carlos\"):\n    if name == \"Zach\":\n        return 18\n    else:\n        return 0", "how_many_light_sabers_do_you_own = lambda name = 'zach': 18 if name == 'Zach' else 0", "def how_many_light_sabers_do_you_own(*name):\n    try: name\n    except NameError:\n        return 0\n    else:\n        if 'Zach' in name:\n            return 18\n        return 0", "def how_many_light_sabers_do_you_own(name= 'abc'):\n    return 18 if name == 'Zach' else 0", "def how_many_light_sabers_do_you_own(name = 'xxx'):\n    return 18 if name in'Zach' else 0", "def how_many_light_sabers_do_you_own(name = 'Boob'):\n    return [0, 18][name == 'Zach']", "def how_many_light_sabers_do_you_own(n=0):  \n  return 0 if n!='Zach' else 18", "def how_many_light_sabers_do_you_own(name=\"\"):\n    if name == \"Zach\":\n        return 18\n    elif name == \"\":\n        return 0\n    else:\n        return 0"]