["from itertools import groupby\n\ndef sum_groups(arr):\n    newarr = [sum(j) for i,j in groupby(arr, key = lambda x: x % 2 == 0)]\n    return len(newarr) if newarr == arr else sum_groups(newarr)", "def sum_groups(arr):\n    lenArr, arr = -1, arr[:]\n    while lenArr != len(arr):\n        parity, lenArr, next = -1, len(arr), []\n        while arr:\n            val = arr.pop()\n            if parity != val%2:\n                next.append(val)\n                parity = val%2\n            else:\n                next[-1] += val\n        arr = next\n    return len(arr)", "from itertools import groupby\n\n\ndef sum_groups(lst):\n    l = -1\n    while l != len(lst):\n        l, lst = len(lst), [sum(g) for _, g in groupby(lst, key=lambda n: n % 2)]\n    return l", "from itertools import groupby\n\ndef sum_groups(arr):\n  reduced = [sum(gp) for _, gp in  groupby(arr, key = lambda x: x % 2)]\n  return len(reduced) if reduced == arr else sum_groups(reduced)", "from itertools import groupby\n\ndef sum_groups(arr):\n    while True:\n        n = len(arr)\n        arr = [sum(grp) for key, grp in groupby(arr, key=lambda x: x % 2)]\n        if len(arr) == n:\n            return n", "from itertools import groupby\n\n\ndef sum_groups(arr):\n    nums = list(arr)\n    while True:\n        tmp = [sum(g) for _, g in groupby(nums, key=lambda a: a % 2)]\n        if nums == tmp:\n            return len(nums)\n        nums = tmp\n", "from itertools import groupby, dropwhile, tee, islice\n\ndef sum_groups(arr):\n    def it(a):\n        while 1:\n            yield a\n            a = [sum(g) for _, g in groupby(a, key=lambda k: k % 2)]\n    it1, it2 = tee(it(arr))\n    return len(next(dropwhile(lambda x: x[0] != x[1], zip(it1, islice(it2, 1, None))))[1])", "from itertools import groupby\n\ndef sum_groups(arr):\n    while True:\n        res = [sum(i) for _, i in groupby(arr, lambda x: x & 1)]\n        if arr == res: return len(arr)\n        arr = res", "import itertools\n\ndef sum_groups(arr):\n    prev_len = 1\n    while prev_len != len(arr):\n        prev_len = len(arr)\n        arr = [\n            sum(g) for k, g in itertools.groupby(\n                arr, key=lambda x: x % 2 == 0\n            )\n        ]\n    return len(arr)\n", "import re\n\n\ndef sum_groups(arr):\n    return len(\n        re.sub(\"0{2,}\", \"0\",\n        re.sub(\"1+\", lambda match: \"1\" if len(match.group(0)) % 2 else \"0\",\n        \"\".join(str(elem % 2) for elem in arr))))"]