["def reverse(a):\n    s=reversed(''.join(a))\n    return [''.join(next(s) for _ in w) for w in a]", "def reverse(a):\n    s = ''.join(a)[::-1]\n    l, x = [], 0\n    for i in a:\n        l.append(s[x:x+len(i)])\n        x += len(i)\n    return l", "def reverse(a):\n    s=list(''.join(a))\n    return [''.join(s.pop() for _ in w) for w in a]", "from itertools import islice\n\ndef reverse(a):\n    cs = (c for s in reversed(a) for c in reversed(s))\n    return [''.join(islice(cs, 0, len(s))) for s in a]", "def reverse(a):\n    s = iter(''.join(a)[::-1])\n    return [''.join(next(s) for _ in range(len(w))) for w in a]", "def reverse(a):\n    r = list(\"\".join(a))\n    return [\"\".join(r.pop() for c in w) for w in a]", "def reverse(a):\n    b = ''.join(a)[::-1]\n    l = []\n    for i in a:\n        l.append(b[:len(i)])\n        b = b[len(i):]\n    return l", "def reverse(a):\n    letters = ''.join(a)[::-1]\n    result, chunk_size = [], 0\n    for word in a:\n        result.append(letters[chunk_size:chunk_size + len(word)])\n        chunk_size += len(word)\n    return result", "def reverse(a):\n  reversed_str = \"\".join(a)[::-1]\n  final_arr = []\n  start = 0\n  finish = len(a[0])\n  for i in range(1,len(a)+1):\n    final_arr.append(reversed_str[start:finish])\n    start = finish\n    if len(a) > i:\n      finish = start + len(a[i])\n\n  return final_arr", "from itertools import islice\n\ndef reverse(a):\n    it = iter(''.join(x[::-1] for x in reversed(a)))\n    return [''.join(islice(it, len(x))) for x in a]"]