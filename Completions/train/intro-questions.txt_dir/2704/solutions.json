["def almost_increasing_sequence(sequence):\n    save, first = -float('inf'), True\n    for i,x in enumerate(sequence):\n        if x > save: save = x\n        elif first:\n            if i == 1 or x > sequence[i-2]: save = x\n            first = False\n        else: return False\n    return True", "is_increasing_sequence = lambda a: all(x < y for x, y in zip(a, a[1:]))\nalmost_increasing_sequence = lambda a: any(is_increasing_sequence(a[:i] + a[i+1:]) for i in range(len(a)))", "def almost_increasing_sequence(sequence):\n    \n    for n,i in enumerate(sequence):\n        lis = sequence.copy()\n        del(lis[n])\n        if len(lis) == len(set(lis)): \n            if sorted(lis) == lis :\n                return True\n\n    return False", "def almost_increasing_sequence(arr):\n    li,i = [],0\n    while i < len(arr):\n        temp = []\n        while i + 1 < len(arr) and arr[i] < arr[i + 1]:\n            temp.append(arr[i]) ; i += 1\n        li.append(temp) ; i += 1\n    return len(li) <= 2 and all(j[-1]<li[i+1][0] for i,j in enumerate(li[:-1]) if j and li[i+1])", "def almost_increasing_sequence(sequence):\n    prev = sequence[0] - 1\n    n = 0\n    for i, x in enumerate(sequence):\n        if x <= prev:\n            if n:\n                return False\n            n = 1\n            if i > 1 and sequence[i-2] >= x:\n                continue\n        prev = x\n    return True", "def almost_increasing_sequence(seq):\n    l = [ i for i,(a,b) in enumerate(zip(seq[:-1], seq[1:])) if a >= b ]\n    return not l or len(l) == 1 and ( l[0] == 0 or l[0] == len(seq)-2 or seq[l[0]-1] < seq[l[0]+1] or seq[l[0]] < seq[l[0]+2])", "def almost_increasing_sequence(s):\n    p=-1\n    l=len(s)\n    for i in range(l-1):\n        if s[i]>=s[i+1]:\n            if p>=0: return False\n            p=i\n    return p<=0 or p==l-2 or s[p-1]<=s[p+1]", "almost_increasing_sequence=lambda a:sum((y>=z)*(2-(x<z))for x,y,z in zip([a[1]-1]+a[:-3]+[a[-1]-1],a,a[1:]))<2", "def almost_increasing_sequence(sequence):\n    to_remove = 0\n    min_ = sequence[0]\n    for i in range(len(sequence)-1):\n        if sequence[i] >= sequence[i+1]:\n            to_remove += 1\n            if sequence[i+1] < min_ and min_ != sequence[i]:\n                return False\n            if to_remove == 2:\n                return False\n            min_ = sequence[i+1]\n    return True", "def almost_increasing_sequence(sequence):\n    if len(sequence)>2:\n        for i in range(len(sequence)-1):\n            if sequence[i]>=sequence[i+1] and sequence[i+1]!=sequence[-1]:\n                sequence.remove(sequence[i])\n                for j in range(len(sequence)-1):\n                    if sequence[j]>=sequence[j+1]:\n                        return False\n                return True\n    return True"]