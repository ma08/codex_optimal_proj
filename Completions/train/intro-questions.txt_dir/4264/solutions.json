["from math import log2\n\ndef operation(a,b, n = 0):\n    while log2(a) % 1:\n        n += 1\n        a //= 2\n    return n + abs(log2(a/b))", "def operation(a,b):\n    res = 0\n    while a != 1 << a.bit_length()-1:\n        a, res = a>>1, res+1\n    return res + abs(a.bit_length() - b.bit_length())", "from math import log2\n\ndef operation(a, b):\n    if log2(a).is_integer():\n        return abs(log2(a) - log2(b))\n    return 1 + operation(a//2, b)", "def operation(a,b):\n  return 0 if a==b else 1 + (operation(a//2, b) if a>b else operation(a, b//2))", "def is_power(n):\n    if n != int(n):\n        return False\n    if n == 1:\n        return True\n    elif n > 1:\n        return is_power(n/2)\n    else:\n        return False\n\ndef operation(a,b):\n    num_operation = 0\n    while a > b or is_power(a) is not True:\n        if a % 2 != 0:\n            a = (a-1) / 2\n            num_operation += 1\n        else:\n            a = a/ 2\n            num_operation += 1\n    while a < b:\n        a = a * 2\n        num_operation += 1\n    return num_operation", "from math import log2\n\ndef operation(a, b):\n    return abs(log2(a) - log2(b)) if log2(a).is_integer() else 1 + operation(a // 2, b)", "from math import log2\n\ndef operation(a, b):\n    if a in (0, b): return 0\n    c = 0\n    while a != b:\n        if a % 2 and a > 1: a = (a - 1) // 2\n        elif a < b and log2(a).is_integer(): a *= 2\n        elif a > b or not log2(a).is_integer(): a //= 2\n        c += 1\n    return c", "from math import log2\ndef operation(a,b):\n    c=0\n    while(2**int(log2(a))!=a and a>1):\n        a//=2\n        c+=1\n    return c+abs(int(log2(b)-log2(a)))", "from math import log2\n\n\ndef operation(a,b):\n    i = 0\n    while log2(a) != int(log2(a)):\n        a //= 2\n        i += 1\n    return i  + abs(log2(a) - log2(b))", "def operation(a,b):\n    count = 0\n    while a != b: \n        while a != 1 and a & (a - 1):\n             a //= 2\n             count += 1\n        if a < b: \n            a *= 2\n            count += 1\n        elif a > b:\n            a //= 2\n            count += 1\n    return count            "]