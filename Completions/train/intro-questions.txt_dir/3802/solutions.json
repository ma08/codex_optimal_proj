["def hoop_count(n):\n    return \"Keep at it until you get it\" if n <10 else \"Great, now move on to tricks\"", "def hoop_count(n):\n    if n < 10:\n        return(\"Keep at it until you get it\")\n    else:\n        return(\"Great, now move on to tricks\")\n", "def hoop_count(n):\n    return \"Great, now move on to tricks\" if n >= 10 else \"Keep at it until you get it\"", "def hoop_count(n: int) -> str:\n    \"\"\" Display message for Alex based on how many times the hoop goes round. \"\"\"\n    return \"Great, now move on to tricks\" if n >= 10 else \"Keep at it until you get it\"", "def hoop_count(n):\n    if not n:\n        return \"Keep at it until you get it\"\n    elif n <= 0:\n        return \"Keep at it until you get it\"\n    elif n >= 10:\n        return \"Great, now move on to tricks\"\n    elif n < 10:\n        return \"Keep at it until you get it\"", "def hoop_count(n):\n    if n>=10: return (\"Great, now move on to tricks\")\n    else: return (\"Keep at it until you get it\")\n    pass", "def hoop_count(n):\n    if n<10:\n        return \"Keep at it until you get it\"\n    if n==10 or n>10:\n        return \"Great, now move on to tricks\"\n", "def hoop_count(n):\n    if n < 10:    \n        return \"Keep at it until you get it\"\n    elif n >= 10: \n        return \"Great, now move on to tricks\" \n    else: \n        return None", "def hoop_count(n):\n    message = ''\n    if n < 10:\n        message = 'Keep at it until you get it'\n    else:\n        message = 'Great, now move on to tricks'\n    return message", "# end goal - function that returns a message based on the number of hoops Alex \n# gets while hula hooping, use ternary operator or if/else conditional\n# input - integer, n\n# ouput - string\n# edge cases - \n\n# function that takes number of hoop rotations\ndef hoop_count(n):\n# if n < 10 return \"Keep at it until you get it\"\n    if n < 10: return \"Keep at it until you get it\"\n# if n >= 10 return \"Great, now move on to tricks\"\n    else: return \"Great, now move on to tricks\"", "def hoop_count(n):\n    print(n)\n    if 0 <= n < 10:\n      return \"Keep at it until you get it\"\n    return \"Great, now move on to tricks\"", "def hoop_count(n):\n    if n >= 10:\n        return'Great, now move on to tricks'\n\n    elif n < 10:\n        return'Keep at it until you get it'\n    return hoop_count(n)\n\n", "def hoop_count(n):\n    if n >= 10:\n        return \"Great, now move on to tricks\"\n    if n!= 10:\n        return\"Keep at it until you get it\"", "def hoop_count(n):\n    n = int(n)\n    if n>=10:\n        return \"Great, now move on to tricks\"\n    else:\n        return \"Keep at it until you get it\"\nx = hoop_count(20)\nprint(x)", "def hoop_count(n):\n    if n >= 10:\n      return(\"Great, now move on to tricks\")\n    else:\n      return(\"Keep at it until you get it\")\n      \nprint(hoop_count(3))", "def hoop_count(n):\n    # Good Luck!\n    if  n >= 10:\n        mess = \"Great, now move on to tricks\"\n    else:\n        mess = \"Keep at it until you get it\"\n    return mess", "def hoop_count(n):\n    if n<10: return \"Keep at it until you get it\"\n    return \"Great, now move on to tricks\"", "def hoop_count(n):\n    return (\"Great, now move on to tricks\", \"Keep at it until you get it\")[n<10]", "hoop_count = lambda a : \"Keep at it until you get it\" if a <10 else \"Great, now move on to tricks\"", "def hoop_count(n):\n    msg = [\"Keep at it until you get it\", \"Great, now move on to tricks\"]\n    if n >= 10:\n       return msg[1]\n    elif n<10:\n       return msg[0]", "def hoop_count(n):\n    return \"Great, now move on to tricks\" if n > 9 else \"Keep at it until you get it\"", "def hoop_count(n):\n    if(n < 10):\n        return \"Keep at it until you get it\"\n    elif(n >= 10):\n        return \"Great, now move on to tricks\"\n    else: \n        return 0", "def hoop_count(n):\n    print(n)\n    if n <10:\n        return \"Keep at it until you get it\"\n    else:\n        return \"Great, now move on to tricks\"\n", "def hoop_count(n):\n    return \"Keep at it until you get it\" if n < int(10) else \"Great, now move on to tricks\"\n    # Good Luck!\n", "def hoop_count(n: int) -> str:\n    return \"Great, now move on to tricks\" if n >= 10 else \"Keep at it until you get it\"", "hoop_count = lambda n: [\"Great, now move on to tricks\", \"Keep at it until you get it\"][n < 10]", "def hoop_count(n):\n    if n >= 10:\n        return str(\"Great, now move on to tricks\")\n    else:\n        return str(\"Keep at it until you get it\")", "def hoop_count(n):\n    return (n<10)*\"Keep at it until you get it\" + (n>=10)*\"Great, now move on to tricks\"", "def hoop_count(n):\n    if n >= 10:\n        result = \"Great, now move on to tricks\"\n    else:\n        result = \"Keep at it until you get it\"\n    return result\n", "def hoop_count(n):\n    \n    if n == 10 :\n        return \"Great, now move on to tricks\"\n    elif n == 9 :\n        return \"Keep at it until you get it\" \n    elif 0 < n <10 :\n        return \"Keep at it until you get it\" \n    else : \n        return \"Great, now move on to tricks\" ", "def hoop_count(n):\n    about_n = n >= 10\n    if about_n == True:\n        return \"Great, now move on to tricks\"\n    else:\n        return \"Keep at it until you get it\"", "def hoop_count(n):\n    if n >= 10:\n        return \"Great, now move on to tricks\"\n    elif n < 10:\n        return \"Keep at it until you get it\"\n    elif n == None:\n        return \"Keep at it until you get it\"", "def hoop_count(n):\n    plus_10 = \"Great, now move on to tricks\"\n    minus_10 = \"Keep at it until you get it\"\n    if n>=10:\n        return plus_10\n    else:\n        return minus_10\n", "def hoop_count(hulaHoops):\n    if hulaHoops >= 10:\n        return \"Great, now move on to tricks\"\n    else:\n        return \"Keep at it until you get it\"", "def hoop_count(n):\n    return {\n    True: \"Great, now move on to tricks\",\n    False: \"Keep at it until you get it\"\n    }.get(n >= 10)", "def hoop_count(n):\n    return f\"Great, now move on to tricks\" if n >=10 else f\"Keep at it until you get it\" ", "def hoop_count(n):\n    \n    result=''   \n    \n    if n>= 10:\n      result=\"Great, now move on to tricks\"\n    else:\n     result=\"Keep at it until you get it\"\n     \n    return result ", "import unittest\n\nTEN_MORE_HOOPS_MESSAGE = \"Great, now move on to tricks\"\nNOT_TEN_MORE_HOOPS_MESSAGE = \"Keep at it until you get it\"\n\n\ndef hoop_count(n):\n    return TEN_MORE_HOOPS_MESSAGE if n >= 10 else NOT_TEN_MORE_HOOPS_MESSAGE\n    \n    \nclass TestHoopCount(unittest.TestCase):\n    def test_should_return_encouraging_message_when_getting_ten_more_hoops(self):\n        n = 11\n        actual = hoop_count(n)\n        self.assertEqual(actual, TEN_MORE_HOOPS_MESSAGE)\n\n    def test_should_return_encouraging_message_when_does_not_getting_ten_more_hoops(self):\n        n = 3\n        actual = hoop_count(n)\n        self.assertEqual(actual, NOT_TEN_MORE_HOOPS_MESSAGE)\n", "def hoop_count(n):    \n    messageA = \"Keep at it until you get it\"\n    messageB = \"Great, now move on to tricks\"\n    return messageA if n < 10 else messageB", "def hoop_count(n):\n    if n > 10:\n      return(\"Great, now move on to tricks\")\n    elif n < 10:\n      return(\"Keep at it until you get it\")\n    elif n == 10:\n      return(\"Great, now move on to tricks\")\n", "def hoop_count(n):\n    a='Great, now move on to tricks'\n    b='Keep at it until you get it'\n    return a if n>=10 else b", "def hoop_count(n):\n    msgOne = \"Keep at it until you get it\"\n    msgTwo = \"Great, now move on to tricks\"\n    if(n<10):\n      return msgOne\n    else:\n      return msgTwo", "def hoop_count(n):\n   return n >= 10 and \"Great, now move on to tricks\" or \"Keep at it until you get it\"", "def hoop_count(n):\n    hoop_rounds = int(n)\n    if hoop_rounds >= 10:\n      return str(\"Great, now move on to tricks\")\n    else:\n      return str(\"Keep at it until you get it\")\n", "def hoop_count(n):\n    return \"Keep at it until you get it\" if 0 <= n <10 else \"Great, now move on to tricks\"", "def hoop_count(n):\n    if n >= 10:\n        a =  \"Great, now move on to tricks\"\n    else:\n        a =  \"Keep at it until you get it\"\n    return a", "def hoop_count(n):\n    msg1 = 'Great, now move on to tricks'\n    msg2 = 'Keep at it until you get it'\n    return (msg1, msg2)[n < 10]", "def hoop_count(n):\n    return (\"Keep at it until you get it\" if 0<=n and n<=9 else \"Great, now move on to tricks\" )\n    # Good Luck!\n", "def hoop_count(n):\n    if n>=10:\n        res = \"Great, now move on to tricks\"\n    else:\n        res= \"Keep at it until you get it\"\n    return res", "def hoop_count(n):\n    if n >= 10:\n        return \"Great, now move on to tricks\"\n    \n    else:\n        n < 10\n        return \"Keep at it until you get it\"", "def hoop_count(n):\n    m1 = \"Keep at it until you get it\"\n    m2 = \"Great, now move on to tricks\"\n    \n    return m2 if n >= 10 else m1", "def hoop_count(n):\n    if n >= 10:\n        return \"Great, now move on to tricks\"\n    elif n < 10:\n        return \"Keep at it until you get it\"\n    else:\n        return \"\"", "def hoop_count(n):\n    s1 = \"Great, now move on to tricks\"\n    s2 = \"Keep at it until you get it\"\n    return s1 if n >= 10 else s2", "def hoop_count(n):\n    # Good Luck!\n    if 10>n:\n        return \"Keep at it until you get it\"\n    else:\n        return \"Great, now move on to tricks\"", "def hoop_count(n):\n    a = 'Great, now move on to tricks'\n    b = 'Keep at it until you get it'\n    if n >= 10:\n        return a\n    else:\n        return b", "def hoop_count(n):\n    if n >= int(10):\n        hoop = \"Great, now move on to tricks\"\n    else:\n        hoop = \"Keep at it until you get it\"\n    return hoop", "def hoop_count(n):\n    alex = [\"Great, now move on to tricks\",\"Keep at it until you get it\"]\n    if n >= 10:\n        return alex[0]\n        \n    else:\n        return alex[1]", "def hoop_count(n):\n    encourage = { 1: \"Great, now move on to tricks\",\n    0: \"Keep at it until you get it\"}\n    return encourage.get(n>=10)", "def hoop_count(n):\n    msg_1 = \"Keep at it until you get it\"\n    msg_2 = \"Great, now move on to tricks\"\n    return msg_1 if n < 10 else msg_2 ", "def hoop_count(n):\n    alex = \"\"\n    if n < 10:\n        alex = \"Keep at it until you get it\"\n    else:\n        alex = \"Great, now move on to tricks\"\n    return alex", "def hoop_count(n):\n    n = int(n)\n    if n >= 10:\n        return \"Great, now move on to tricks\"\n    else:\n        return \"Keep at it until you get it\"", "def hoop_count(n):\n    if n is None:\n        return \"Great, now move on to tricks\"\n    elif n >= 10:\n        return \"Great, now move on to tricks\"\n    elif n < 10:\n        return \"Keep at it until you get it\"", "def hoop_count(n):\n    ans = n\n    if ans >= 10:\n        return \"Great, now move on to tricks\"\n    else:\n        return \"Keep at it until you get it\"\n    # Good Luck!\n", "def hoop_count(n):\n    # Good Luck!\n    r = \"Great, now move on to tricks\"\n    if n < 10:\n        r = \"Keep at it until you get it\"\n    return r", "def hoop_count(n):\n    count = 0\n    for i in range(n):\n        count += 1\n    if count >= 10:\n        return \"Great, now move on to tricks\"\n    else:\n        return \"Keep at it until you get it\"\n    # Good Luck!\n", "def hoop_count(n):\n    keep = \"Keep at it until you get it\"\n    great = \"Great, now move on to tricks\"\n    return keep if n < 10 else great", "def hoop_count(n):\n    if n >= 10:\n        return \"Great, now move on to tricks\"\n    else:\n        return \"Keep at it until you get it\"\n        \nhoop_count(10)\nhoop_count(3)\nhoop_count(11)", "def hoop_count(n):\n    if n < 10:\n        return (\"Keep at it until you get it\") \n    elif n > 10:\n        return (\"Great, now move on to tricks\")\n    else:\n        return (\"Great, now move on to tricks\")\n", "def hoop_count(n):\n    #hula = input(\"how many times did the hoop go around\")\n    if n >= 10:\n        return \"Great, now move on to tricks\"\n    else:\n        return \"Keep at it until you get it\"", "def hoop_count(n):\n    if n >= 10:\n        value = \"Great, now move on to tricks\"\n    else:\n        value =  \"Keep at it until you get it\"\n    return value", "def hoop_count(n):\n    return (\"Great, now move on to tricks\", \"Keep at it until you get it\")[int(n < 10)]", "def hoop_count(hoops):\n    if hoops >= 10:\n        return(\"Great, now move on to tricks\")\n    else:\n        return(\"Keep at it until you get it\")    ", "class Cheese:\n    def __call__(s,*v): return Cheese()\n    def __eq__(s,o): return True\n    \nhoop_count = Cheese()", "def hoop_count(n):\n    return \"Keep at it until you get it\" if int(n) < 10 else \"Great, now move on to tricks\"", "def hoop_count(n):\n    messages = [\"Great, now move on to tricks\", \"Keep at it until you get it\"]\n    return messages[0] if n >= 10 else messages[1]  ", "def hoop_count(n):\n    print(n)\n    if n >= 10:\n        return \"Great, now move on to tricks\"\n    else:\n        return \"Keep at it until you get it\"", "def hoop_count(n):\n    if 10<=n:\n        x=\"Great, now move on to tricks\"\n    else:\n        x=\"Keep at it until you get it\"\n    return(x)\n    \n    # Good Luck!\n", "def hoop_count(n):\n    tricks = \"Great, now move on to tricks\"\n    until = \"Keep at it until you get it\"\n    if n >= 10:\n        return tricks\n    else:\n        return until", "def hoop_count(n):\n    if n>9:\n        return \"Great, now move on to tricks\"\n    if n<10:\n        return \"Keep at it until you get it\""]