["def areYouPlayingBanjo(name):\n    return name + (' plays' if name[0].lower() == 'r' else ' does not play') + \" banjo\";", "def areYouPlayingBanjo(name):\n    if name[0].lower() == 'r':\n        return name + ' plays banjo'\n    else:\n        return name + ' does not play banjo'", "def areYouPlayingBanjo(name):\n   return name + \" plays banjo\" if name[0].lower() == 'r' else name + \" does not play banjo\"", "def areYouPlayingBanjo(name):\n    if name[0].lower() == 'r':\n        return \"{} plays banjo\".format(name)\n    return \"{} does not play banjo\".format(name)", "def areYouPlayingBanjo(name):\n    if name.startswith('R') or name.startswith('r'):\n        return name + ' plays banjo'\n    else:\n        return name + ' does not play banjo'", "def areYouPlayingBanjo(name):\n    if name[0] == 'r' or name[0] =='R':\n        return (\"%s plays banjo\"%name)\n    else:\n        return (\"%s does not play banjo\"%name)", "def areYouPlayingBanjo(name):\n    return name + (' plays banjo' if name[0]=='r' or name[0]=='R' else ' does not play banjo')", "def areYouPlayingBanjo(name):\n    return '{} {}'.format(name, 'plays banjo' if name.startswith('R') or name.startswith('r') else 'does not play banjo') \n", "def areYouPlayingBanjo(name):\n    if name[0][0] == \"R\":\n        return name + \" plays banjo\"\n    if name[0][0] == \"r\":\n        return name + \" plays banjo\"\n    else:\n        return name + \" does not play banjo\" \n", "def areYouPlayingBanjo(name):\n    if name[0].lower() == 'r':\n        return '{} plays banjo'.format(name)\n    else:\n        return '{} does not play banjo'.format(name)", "areYouPlayingBanjo = lambda n: n+[\" does not play banjo\",\" plays banjo\"][n[0].lower()=='r']", "def areYouPlayingBanjo(name):\n    for i in name:\n        if i =='R' or i=='r':\n            return name+ \" \"+\"plays banjo\"\n        else:\n            return name+\" does not play banjo\"", "def areYouPlayingBanjo(name):\n    # Implement me!\n    return \"{} {} banjo\".format(name, \"plays\" if name.lower().startswith('r') else \"does not play\") \n", "def areYouPlayingBanjo(name):\n    return name + (\" does not play banjo\", \" plays banjo\") [name[0].upper() == 'R']", "def areYouPlayingBanjo(name):\n    if name[0] in \"rR\":\n        return \"{name} plays banjo\".format(name=name)\n    else:\n        return \"{name} does not play banjo\".format(name=name)", "def areYouPlayingBanjo(name):\n    return \"{} plays banjo\".format(name) if \"r\" == name.lower()[0] else \"{} does not play banjo\".format(name)", "def areYouPlayingBanjo(name):\n    return ['%s plays banjo' % (name), '%s does not play banjo' % (name)][name[0].lower() != 'r']", "def areYouPlayingBanjo(name):\n    if name.upper().startswith(\"R\"): return name + \" plays banjo\"\n    return name + \" does not play banjo\"", "areYouPlayingBanjo = lambda name: (name + ' plays banjo') if name.lower()[0] == 'r' else (name + ' does not play banjo')", "def areYouPlayingBanjo(name):\n    return name + \" plays banjo\" if name[0].upper()== 'R' else name + ' does not play banjo'", "def areYouPlayingBanjo(name):\n    if name.startswith((\"R\", \"r\")):\n        return \"{} plays banjo\".format(name)\n    return \"{} does not play banjo\".format(name)", "def areYouPlayingBanjo(name):\n    if name[0] == 'R' or name[0] == 'r':\n        return name + ' plays banjo'\n    return name + ' does not play banjo'", "def areYouPlayingBanjo(name):\n    if name[0].lower() == 'r':\n        return name + \" plays banjo\"\n    return name + \" does not play banjo\"", "def areYouPlayingBanjo(name):\n    return name + \" plays banjo\" if name[0] in ('r', 'R') else name + \" does not play banjo\"", "def areYouPlayingBanjo(name):\n    \n    return '{}'.format(name + (' plays banjo' if name[0] == 'R' or name[0] == 'r' else ' does not play banjo'))", "def areYouPlayingBanjo(name: str) -> str:\n    \"\"\" Check if the user is playing banjo based on his name. \"\"\"\n    return name + \" plays banjo\" if name.lower().startswith(\"r\") else name + \" does not play banjo\"", "areYouPlayingBanjo = lambda n: n + (\" does not play \", \" plays \")[n[0] in \"Rr\"] + \"banjo\"", "def areYouPlayingBanjo(name):\n    return '{} {} banjo'.format(name, ['does not play', 'plays'][name[0] in 'Rr'])", "areYouPlayingBanjo=lambda n:n+[\" does not play\",\" plays\"][n[0]in'Rr']+\" banjo\"", "def areYouPlayingBanjo(name):\n    # Implement me!\n    return \" \".join([name, \"plays\" if str.upper(name[0]) == \"R\" else \"does not play\", \"banjo\"])", "def areYouPlayingBanjo(name):\n    return name+([' does not play',' plays'][name.lower().startswith('r')])+' banjo'", "def areYouPlayingBanjo(name):\n    status = \"plays\" if name[0] in \"Rr\" else \"does not play\"\n    return \"{n} {st} banjo\".format(n = name, st = status)", "areYouPlayingBanjo = lambda name: (\"%s plays banjo\" if name[0] in 'Rr' else \"%s does not play banjo\") % name", "def areYouPlayingBanjo(name):\n    return str(name)+(' plays banjo' if name[0]in['R','r'] else ' does not play banjo')", "def areYouPlayingBanjo(name):\n    # name = name.title()\n    # if name.startswith('R'):\n    #     return name + \" plays banjo\"\n    # else:\n    #     return name + \" does not play banjo\"\n    return name + (\" plays\" if name.title().startswith('R') else \" does not play\") + \" banjo\"", "def areYouPlayingBanjo(name):\n    return name + (name[0] in \"Rr\")*\" plays banjo\" + (name[0] not in\"Rr\") * (\" does not play banjo\")", "def areYouPlayingBanjo(name):\n    return '{} {}'.format(name, ['does not play banjo', 'plays banjo'][name[0] in 'rR'])", "def areYouPlayingBanjo(name):\n    \n    return f'{name} plays banjo' if name[0]=='R' or name[0]=='r' else f'{name} does not play banjo'", "def areYouPlayingBanjo(name):\n    return \"{} plays banjo\".format(name) if name[0] in \"Rr\" else \"{} does not play banjo\".format(name)", "def areYouPlayingBanjo(name):\n    return \"%s %s banjo\" %(name,[\"does not play\",\"plays\"][name[0].lower()=='r'])", "def areYouPlayingBanjo(name):\n    return (\"{0} plays banjo\" if name[0].lower() == 'r' else \"{0} does not play banjo\").format(name)", "def areYouPlayingBanjo(name):\n    # Implement me!\n    return ['{} does not play banjo'.format(name), '{} plays banjo'.format(name)][name[0].lower() == 'r']", "def areYouPlayingBanjo(name):\n    return name + ' does not play banjo' if name[0] not in 'Rr' else name + ' plays banjo'", "def areYouPlayingBanjo(name):\n    if name.lower().startswith('r'):\n        return f'{name} plays banjo'\n    return f'{name} does not play banjo'", "def areYouPlayingBanjo(name):\n    return (f'{name} does not play banjo', f'{name} plays banjo')[name[0].lower() == 'r']", "def areYouPlayingBanjo(name):\n    banjo = (\"R\", \"r\")\n    if name[0] in banjo:\n        return name + \" plays banjo\"\n    else:\n        return name + \" does not play banjo\"", "def areYouPlayingBanjo(name):\n    if name.lower()[0] == 'r':\n        banjo = name + \" plays banjo\"\n    else:\n        banjo = name + \" does not play banjo\"\n    return banjo", "def areYouPlayingBanjo(name):\n    name_lower = name.lower()\n    letters_lst = []\n    for item in name_lower:\n        letters_lst.append(item)\n    if letters_lst[0] == \"r\":\n        result = name + \" plays banjo\"\n    else:\n        result = name + \" does not play banjo\"\n    return result", "def areYouPlayingBanjo(name):\n    # Implement me!\n    if \"r\" in name[0] or \"R\" in name[0]:\n        return f\"{name} plays banjo\"\n    else:\n        return f\"{name} does not play banjo\"\n", "def areYouPlayingBanjo(name):\n    return f\"{name} plays banjo\" if name.lower()[0:1] == \"r\" else f\"{name} does not play banjo\" ", "def areYouPlayingBanjo(name):\n    # Implement me!\n    if name[0]=='R' or name[0]==\"r\":\n        output = (name + \" plays banjo\")\n    else:\n        output = (name + \" does not play banjo\")\n    return output\n\nuser_name = \"ralan\"\n\nprint(areYouPlayingBanjo(user_name))", "def areYouPlayingBanjo(name):\n    lst = list(name)\n    if lst[0] == 'r' or lst[0] == 'R':\n        return f'{name} plays banjo'\n    else:\n        return f'{name} does not play banjo'\n", "areYouPlayingBanjo=lambda n:f\"{n} {['does not play','plays'][n[0]in'Rr']} banjo\"", "def areYouPlayingBanjo(name):\n    return f'{name} plays banjo' if 'r' in name[0] or 'R' in name[0] else f'{name} does not play banjo'", "print(\"Are you playing banjo?\")\n\ndef areYouPlayingBanjo(name):\n    #return positive if name.lower().startswith \"r\"\n    if name.lower().startswith(\"r\"):\n        return name + \" plays banjo\"\n    else:\n        return name + \" does not play banjo\"\n    return name\n\nareYouPlayingBanjo(\"martin\")\nareYouPlayingBanjo(\"Rikke\")", "def areYouPlayingBanjo(name):\n    x = name.title()\n    if x[0] == \"R\":\n        return name + \" plays banjo\"\n    else:\n        return name + \" does not play banjo\"", "def areYouPlayingBanjo(name):\n    check = any(x is name[0] for x in \"rR\")\n    return f\"{name} plays banjo\" if check else f\"{name} does not play banjo\" \n\n\n", "def areYouPlayingBanjo(n):\n    if n[0].lower() == 'r':\n        result = 'plays'\n    else:\n        result = 'does not play'\n    return f'{n} {result} banjo'", "def areYouPlayingBanjo(name):\n    for i in name: \n        if i[0] == (\"r\") or i[0] == (\"R\"):\n            return name + \" plays banjo\"\n        else:\n            return name + \" does not play banjo\"", "def areYouPlayingBanjo(name):\n    i = name[0:1]\n    if i == \"R\" or i == \"r\":\n        return f\"{name} plays banjo\"\n    else:\n        return f\"{name} does not play banjo\"", "def areYouPlayingBanjo(name):\n    if name.startswith('R'):\n        return f'{name} plays banjo'\n    elif name.startswith('r'):\n        return f'{name} plays banjo'\n    else:\n        return f'{name} does not play banjo'\n\n", "def areYouPlayingBanjo(name):\n    if name[0]=='R' or name[0]=='r':\n        stringa=str(name)+' plays banjo'\n        return stringa\n    stringa=str(name)+' does not play banjo'\n    return stringa\n    \n", "def areYouPlayingBanjo(name):\n    # Implement me!\n    play=False;\n    if name!='' and name[0] in ('r','R'): play=True\n    \n    res=name+' does not play banjo'\n    if (play==True) : res=name+' plays banjo'\n    return res", "def areYouPlayingBanjo(name):\n    \n    if name.startswith(\"R\"):\n        return str(name) + \" plays banjo\"\n    elif name.startswith(\"r\"):\n        return str(name) + \" plays banjo\"\n    else:\n        return str(name) + \" does not play banjo\"\n    # Implement me!\n    \n\n\n# answer the question are you playing banjo?\n# if your name starts with the letter \"R\" or lower case \"r\" you are playing banjo\n", "def areYouPlayingBanjo(name):\n    plays = \" does not play banjo\"\n    if name[0].lower() == 'r':\n        plays = \" plays banjo\"\n    return name + plays", "def areYouPlayingBanjo(name):\n    return f'{name} plays banjo' if name.startswith('r') or name[0] == 'R' else f'{name} does not play banjo'", "def areYouPlayingBanjo(name):\n    condition = \"plays\" if name[0].lower()=='r' else \"does not play\" \n    return f\"{name} {condition} banjo\"", "from typing import*\ndef areYouPlayingBanjo(name:List[str])->str:\n  Yes:str = name + \" plays banjo\" \n  No:str = name + \" does not play banjo\"\n  if name[0] == \"r\" or name[0] == \"R\":\n    return Yes\n  else:\n    return No    \n", "def areYouPlayingBanjo(name):\n    list = []\n    for i in name:\n        list.append(i)\n    if list[0] == 'R':\n        return name + \" plays banjo\"\n    elif list[0] == 'r':\n        return name + \" plays banjo\"\n    elif list[0] != 'R':\n        return name + \" does not play banjo\"\n    elif list[0] != 'r':\n        return name + \" does not play banjo\"\n    else: \n        return 'please try again michelle'", "def areYouPlayingBanjo(name):\n    \n    nametolist = list(name)    # Converting the string to a list\n    \n    if nametolist[0] == 'R':    # Testing if first character is an 'R'\n        return name + \" plays banjo\"\n    elif nametolist[0] == 'r':\n        return name + \" plays banjo\"\n    else:\n        return name + \" does not play banjo\"", "def areYouPlayingBanjo(name):\n    # Implement me!\n    if name.upper()[0] == \"R\":\n        text = \"{} plays banjo\".format(name)\n    else:\n        text = \"{} does not play banjo\".format(name)\n    return text", "def areYouPlayingBanjo(name):\n    plays = \"does not play\" if name[0] not in \"Rr\" else \"plays\"\n    return f\"{name} {plays} banjo\"", "import re\ndef areYouPlayingBanjo(name):\n    return name+\" plays banjo\" if re.search(\"\\A[rR]\",name) else name+\" does not play banjo\"", "def areYouPlayingBanjo(name):\n    # Implement me!\n    \n    a = name + \" plays banjo\" \n    b = name + \" does not play banjo\"\n    \n    \n    if name[0] == \"r\" or name[0] == \"R\":\n        return a\n    \n    else: return b\n", "def areYouPlayingBanjo(name):\n    # Implement me!\n    result = \" plays banjo\" if name.lower()[0] == 'r' else \" does not play banjo\"\n    return name + result", "def areYouPlayingBanjo(name):\n    return name + \" does not play banjo\" if name[0] != 'R' and name[0] != 'r' else name + \" plays banjo\" \n    \n    \n", "def areYouPlayingBanjo(name):\n    first = name[0]\n    if first == \"R\":\n        return(name + \" \"+ \"plays banjo\")\n    elif first == \"r\":\n        return(name + \" \" + \"plays banjo\")\n    else :\n        return(name + \" \"+ \"does not play banjo\")\nprint(areYouPlayingBanjo(\"Martin\"))", "def areYouPlayingBanjo(name):\n    result = \"\"\n    if name[0] == \"r\" or name[0] == \"R\":\n        result += \" plays banjo\"\n    else:\n        result += \" does not play banjo\"\n        \n    return name+ result", "def areYouPlayingBanjo(name):\n    return f\"{name} plays banjo\" if name[0].lower().startswith(\"r\") else f\"{name} does not play banjo\"", "def areYouPlayingBanjo(name):\n    checkname=name.lower()\n    if checkname.startswith('r'):\n        return  name + \" plays banjo\" \n    else:\n        return  name + \" does not play banjo\" \n", "def areYouPlayingBanjo(name):\n    first_letter= name[0]\n    if first_letter == 'R':\n        return name + ' plays banjo'\n    elif first_letter == 'r':\n        return name + ' plays banjo'\n    return name + ' does not play banjo'\n        \n", "def areYouPlayingBanjo(name):\n    return name + (\" plays banjo\" if name[:1] in 'rR' else \" does not play banjo\")", "def areYouPlayingBanjo(name):\n    first_letter= list(name)[0].lower()\n    if first_letter == 'r':\n        return(name + \" plays banjo\")\n    return(name + \" does not play banjo\")", "def areYouPlayingBanjo(name):\n    if name[0] == \"r\": \n        return name +\" \"+ \"plays banjo\"\n    elif name[0] == \"R\":\n        return name +\" \"+ \"plays banjo\"\n    return name +\" \"+\"does not play banjo\"\n", "def areYouPlayingBanjo(name):\n    if name.startswith((\"R\", \"r\")):\n        return f'{name} plays banjo'\n    else:\n        return f'{name} does not play banjo'\n\n", "def areYouPlayingBanjo(name):\n    return f\"{name} {'plays' if name.lower().startswith('r') else 'does not play'} banjo\"", "def areYouPlayingBanjo(name):\n    b=' plays banjo'\n    nb=' does not play banjo'\n    if name[0].lower()== 'r':\n        name = name + b\n        return name\n    else:\n        name = name + nb\n        return name", "def areYouPlayingBanjo(name):\n    return name + r' plays banjo' if name[0].lower() == 'r' else name + r' does not play banjo'", "areYouPlayingBanjo = lambda n: f\"{n} plays banjo\" if n[0] is 'r' or n[0] is 'R' else f\"{n} does not play banjo\"", "def areYouPlayingBanjo(name):\n    # Implement me!\n    list()\n    if name[0] == \"R\" or name[0] == \"r\":\n        return str(name) + \" plays banjo\"\n    else:\n        return str(name) + \" does not play banjo\"", "def areYouPlayingBanjo(name):\n    return '%s plays banjo' % name if name[0].lower() == 'r' else \\\n        '%s does not play banjo' % name", "def areYouPlayingBanjo(name):\n    # Implement me!\n    if name[0]==\"r\" or name[0]==\"R\":\n        ret=name+\" plays banjo\"\n    else:\n        ret=name+\" does not play banjo\"\n    return ret\n", "def areYouPlayingBanjo(name):\n    output = ''\n    if name.lower()[0] == 'r':\n        output = ' plays banjo'\n    else:\n        output = ' does not play banjo'\n    return name + output", "areYouPlayingBanjo = lambda x: '{} plays banjo'.format(x) if x and x[0].lower()=='r' else '{} does not play banjo'.format(x)", "def areYouPlayingBanjo(name):\n    return name + [\" does not play\", \" plays\"][name[0].startswith(('R', 'r'))] + \" banjo\"", "def areYouPlayingBanjo(name):\n    i = 'rR'\n    return f'{name} plays banjo' if name[0] in i else f'{name} does not play banjo'", "def areYouPlayingBanjo(name):\n    first_letter = name[0]\n    print(first_letter)\n    if first_letter == \"R\" or first_letter == \"r\":\n        return name + \" plays banjo\" \n    return name + \" does not play banjo\"", "def areYouPlayingBanjo(name):\n    plays = name[0].upper() == \"R\"\n    answer = [\"does not play\", \"plays\"]\n    return f\"{name} {answer[plays]} banjo\"", "def areYouPlayingBanjo(name):\n    if list(name)[0] == 'R' or list(name)[0] == 'r':\n        return f\"{name} plays banjo\"\n    else:\n        return f\"{name} does not play banjo\"", "def areYouPlayingBanjo(name):\n    if name.casefold().startswith(\"r\"):\n        return f\"{name} plays banjo\"\n    else:\n        return f\"{name} does not play banjo\""]