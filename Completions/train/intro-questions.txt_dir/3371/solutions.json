["import re\ndef signed_eight_bit_number(number):\n    return bool(re.match(\"(0|-128|-?([1-9]|[1-9]\\d|1[01]\\d|12[0-7]))\\Z\", number))", "def signed_eight_bit_number(number):\n    if number in list(map(str,list(range(-128,128)))):\n        return True\n    return False\n        \n", "import re\n\nSIGNED_BYTE_PATTERN = re.compile(r'''\n    \\A\n    (?:\n        0 |\n        -? (?:\n            1 (?:\n                [01] \\d? |\n                2 [0-7]? |\n                [3-9] )? |\n            [2-9] \\d? ) |\n        -128 )\n    \\Z\n''', re.X)\n\n\ndef signed_eight_bit_number(number):\n    return bool(SIGNED_BYTE_PATTERN.search(number))\n", "def signed_eight_bit_number(s):\n    try:\n        return -128 <= int(s) <= 127 and str(int(s)) == s\n    except ValueError:\n        return False", "import re\n\ndef signed_eight_bit_number(n):\n    return bool(re.fullmatch(r\"-?(1[01]\\d|12[0-7]|[1-9]\\d)|-(128|[1-9])|\\d\", n))\n", "import re\ndef signed_eight_bit_number(n):\n    return re.match(r'-?\\d+$',n)and str(int(n))==n and -128<=int(n)<128 or False", "def signed_eight_bit_number(number):\n    return number in list(map(str, list(range(-128, 128))))\n", "def signed_eight_bit_number(number):\n    try:\n        i = int(number)\n        return (-128 <= i <= 127) and number == str(i)\n    except:\n        pass\n    return False\n", "import re\n\ndef signed_eight_bit_number(number):\n    return bool(re.fullmatch(r\"(-?(1(([2][0-7])|([01]\\d))|[1-9][0-9]))|\\d|-[1-9]|-128\", number))"]