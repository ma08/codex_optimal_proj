["def totalAmountVisible(topNum, numOfSides):\n    return numOfSides*(numOfSides+1)/2-(numOfSides-topNum+1)\n", "totalAmountVisible=lambda n,s:s*~-s//2-1+n", "def totalAmountVisible(top, sides):\n    return sides * (sides + 1 ) / 2 + top - sides - 1", "def totalAmountVisible(topNum, numOfSides):\n    return numOfSides*(numOfSides-1)//2+topNum-1\n", "def totalAmountVisible(top, sides):\n    return (sides - 1) * sides // 2 + top - 1", "def totalAmountVisible(n, s):\n    return s//2*(s+1)-(s+1-n)\n", "totalAmountVisible = lambda t,n: sum(range(1,n+1))-(n+1-t)", "def totalAmountVisible(topNum, numOfSides):\n    return sum(range(1, numOfSides + 1)) - (numOfSides - topNum + 1)\n\n", "def totalAmountVisible(n, s):\n    return (s*(s+1))//2 -(s-n+1)\n", "def totalAmountVisible(n,sides):\n    return sides*(1+sides)//2-(sides+1-n)"]