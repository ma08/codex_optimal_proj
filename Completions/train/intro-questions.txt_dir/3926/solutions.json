["def check_root(string):\n    try:\n        a,b,c,d = [int(i) for i in string.split(',')]\n        if not (a == b-1 and a == c-2 and a == d-3):\n            return 'not consecutive'\n        s = a*b*c*d+1\n        return str(s)+', '+str(int(s**0.5))\n    except:\n        return 'incorrect input'", "import re\ndef check_root(string):\n    if not re.fullmatch(r\"(-?\\d+,){3}-?\\d+\", string):\n        return 'incorrect input'\n    a, b, c, d = list(map(int, string.split(\",\")))\n    if not d == c + 1 == b + 2 == a + 3:\n        return 'not consecutive'\n    return f\"{a * b * c * d + 1}, {abs(b ** 2 + a)}\"\n    \n        \n    \n", "# a*b*c*d + 1\n# = a*(a+1)*(a+2)*(a+3) + 1\n# = a**4 + 6*a**3 + 11*a**2 + 6*a + 1\n# = (a**2 + 3*a + 1)**2\n# = (a**2 + 2*a + 1 + a)**2\n# = ((a+1)**2 + a)**2\n# sqtr = (a+1)**2 + a\n\ndef check_root(string):\n    try:\n        a, b, c, d = map(int, string.split(','))\n        if a+3 == b+2 == c+1 == d:\n            x = a + (a+1)**2\n            return \"{}, {}\".format(x**2, abs(x))\n        return \"not consecutive\"\n    except:\n        return \"incorrect input\"", "from functools import reduce\nfrom operator import mul\ndef check_root(string):\n    l = string.split(',')\n    if len(l) != 4:\n        return 'incorrect input'\n    try:\n        l = list(map(int, l))\n    except:\n        return 'incorrect input'\n    \n    if not all(l[i] - l[i-1] == 1 for i in range(1,len(l))):\n        return 'not consecutive'\n    \n    return '{}, {}'.format(reduce(mul, l) + 1, int((reduce(mul,l) + 1)**0.5))\n", "def check_root(string):\n    try:\n        a, b, c, d = (int(d) for d in string.split(\",\"))\n    except ValueError:\n        return \"incorrect input\"\n    if not (a * d + 2) == (b * c):\n        return \"not consecutive\"\n    perfect = a * b * c * d + 1\n    return \"{}, {}\".format(perfect, int(perfect**0.5))\n"]