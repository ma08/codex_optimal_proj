["def set_alarm(employed, vacation):\n    return employed and not vacation", "def set_alarm(employed, vacation):\n    # Your code here\n    if employed:\n        if vacation:\n            return False\n        return True\n    return False", "def set_alarm(employed, vacation):\n    return employed==True and vacation==False", "set_alarm=lambda *a:a==(1,0)", "set_alarm=lambda *a:a==(1,0)\nset_alarm = lambda *a: a == (True, False) # [1]\nset_alarm = lambda employed, vacation: (employed, vacation) == (True, False) # [2]\nset_alarm = lambda employed, vacation: (employed == True) and (vacation == False)\nset_alarm = lambda employed, vacation: employed and not vacation\n\n# The most voted best practice solution:\n\ndef set_alarm(employed, vacation):    # [3]\n    return employed and not vacation  #\n", "def set_alarm(employed, vacation):\n    if employed and vacation is False:\n        return True\n    else:\n        return False", "def set_alarm(employed, vacation):\n    return True if employed is True and vacation is False else False", "def set_alarm(e, v):\n    return False if e == True and v == True else False if e == False and v == True else False if e == False and v == False else True", "set_alarm=int.__gt__", "set_alarm=lambda e,v:e>v", "def set_alarm(employed, vacation):\n    if employed == 1 and vacation == 0: return True\n    else: return False", "def set_alarm(employed, vacation):\n    return min(employed,employed!=vacation)", "def set_alarm(is_employed, on_vacation):\n    return is_employed and not on_vacation", "# set_alarm = lambda employed,vacation:True if employed == True and vacation == False\ndef set_alarm(employed,vacation):\n    if employed == True and vacation == False:\n        return True\n    else:\n        return False\n", "def set_alarm(employed, vacation):\n    if employed == vacation:\n        return False   \n    return True if employed == True and vacation == False else False\n    return False if employed == False and vacation == True else True", "set_alarm=lambda employed, vacation: False if employed==vacation else not vacation", "def set_alarm(employed, vacation):\n    return ( True if employed and vacation is False else False) ", "def set_alarm(employed, vacation):\n    while employed == True and vacation == True:\n        return False\n    while employed == False and vacation == True:\n        return False\n    while employed == True and vacation == False:\n        return True\n    while employed == False and vacation == False:\n        return False\n    \nset_alarm(True, True)", "def set_alarm(employed, vacation):\n    return True if employed and not vacation else False", "def set_alarm(a, b):\n    return a - b == 1", "def set_alarm(employed, vacation):\n    return employed > vacation", "def set_alarm(employed, vacation):\n    return employed & ~vacation", "set_alarm=lambda e,v:e>>v", "set_alarm=lambda e,v:e-v>0", "def set_alarm(employed, vacation):\n    a = employed\n    b = vacation\n    \n    if a == True:\n        if b == False:\n            return True\n    if a == False:\n        if b == False:\n            return False\n    if a == False and b == True:\n        return False\n    if a and b == True:\n        return False\n        \n\n\n\n\n#     if a == True:\n#         return True\n#         if a and b == True:\n#             return False\n#     else:\n#         return False\n", "from operator import rshift as set_alarm\n", "set_alarm=lambda e,v:e and not v", "def set_alarm(employed, vacation):\n    # Your code here\n    return True if employed == True and vacation == False else False", "def set_alarm(employed, vacation):\n    if employed == vacation:\n        return False\n    if employed == True:\n        return  True\n    return False", "def set_alarm(employed, vacation):\n    if vacation == False and employed == True:\n        return True\n    return False\n", "def set_alarm(e,v):\n    return False if e and v or e==False and v==True or [e,v]==[False,False] else True", "def set_alarm(employed, vacation):\n    if employed == False and vacation == True:\n        return False\n    elif employed == True and vacation == False:\n        return True\n    else:\n        return False", "def set_alarm(employed, vacation):\n    boolean1 = employed\n    boolean2 = vacation\n    \n    \n    if boolean1 == True and boolean2 == False:\n        return True\n    else:\n        return False", "def set_alarm(employed, vacation):\n    return employed if not (employed == vacation == True) else False", "def set_alarm(employed, vacation):\n    return employed^vacation and employed == True", "def set_alarm(employed, vacation):\n    if employed == True:\n        if vacation == True:\n            return False\n        if vacation == False:\n            return True\n    if employed == False:\n        return False", "def set_alarm(em, va):\n    if em == True and va == True:\n        return False\n    elif em == True and va == False:\n        return True\n    elif em == False and va == False:\n        return False\n    elif em == False and va == True:\n        return False\n    # Your code here\n", "def set_alarm(employed, vacation):\n    if employed==True and vacation==True:\n        alarma=False\n    elif employed==False and vacation==True:\n        alarma=False\n    elif employed==False and vacation==False:\n        alarma=False\n    elif employed==True and vacation==False:\n        alarma=True\n    return alarma\n", "def set_alarm(employed, vacation):\n    if employed == True and vacation == False:\n        return True\n    else:\n        return False\n    \n    \"\"\" FIRST THOUGHT\n    if employed == True and vacation == False:\n        return True\n    elif employed == True and vacation == True:\n        return False\n    elif employed == False and vacation == False:\n        return False\n    elif employed == \n    \"\"\"", "def set_alarm(employed, vacation):\n    if employed:\n        if vacation:\n            return False\n    if employed:\n        return True\n    if vacation:\n        return False\n    else:\n        return False", "def set_alarm(employed: bool, vacation: bool) -> bool:\n    return employed == True and vacation == False", "def set_alarm(employed, vacation):\n    return False if not employed and vacation else employed ^ vacation", "def set_alarm(e, v):\n    return e&(e^v)", "def set_alarm(employed, vacation):\n    import numpy\n    return employed and not vacation", "def set_alarm(employed, vacation):\n    if employed == True and vacation == True:\n        return False\n    elif employed == False and vacation == True:\n        return False\n    if employed == False and vacation == False:\n        return False\n    if employed == True and vacation == False:\n        return True", "def set_alarm(employed, vacation):\n    if employed==True and vacation==False:\n        res = True\n    else:\n        res = False\n    return res", "def set_alarm(employed, vacation):\n    if employed == vacation or vacation == True:\n        return False\n    else:\n        return True", "def set_alarm(f, s):\n    return f == True and s == False", "set_alarm = lambda e, v: 1 if [1, 0] == [e, v] else 0", "def set_alarm(employed, vacation):\n    return not(employed and vacation or not employed) ", "def set_alarm(employed, vacation):\n    if vacation is True:\n        return False\n    else:\n        if employed is True:\n            return True\n    return False", "def set_alarm(employed, vacation):\n    # Your code here\n    while employed == True:\n        if vacation == True:\n            return False\n        else:\n            return True\n    return False", "def set_alarm(employed, vacation):\n    return employed and not vacation # becomes True if employed and not on vacation", "def set_alarm(employed, vacation):\n    if (employed == True) & (vacation == False):\n        return True\n    return False", "def set_alarm(employed, vacation):\n    if vacation is True:\n        return False\n    elif employed == True:\n        return True\n    elif employed == False:\n        return False", "set_alarm = lambda employed, vacation: employed ^ vacation and employed", "def set_alarm(e, vacation):\n    return e and not vacation", "def set_alarm(employed, vacation):\n    '''This code will return the overall boolean state of the alarm based upon the input parameters'''\n    return True if employed==True and vacation==False else False", "def set_alarm(d,n):\n    return d>n", "def set_alarm(employed, vacation):\n    if(employed == True & vacation == True):\n        return False\n    if(employed == False & vacation == False):\n        return False\n    if(employed == False & vacation == True):\n        return False\n    else:\n        return True", "def set_alarm(employed, vacation):\n    a = employed\n    b = vacation\n    if a == True and b == True:\n        return False\n    if a == False and b == True:\n        return False\n    if a == False and b == False:\n        return False\n    if a == True and b == False:\n        return True", "def set_alarm(employed, vacation):\n    return employed and not vacation\n    \n    return false", "def set_alarm(employed, vacation):\n        if (employed == True and vacation == True) or (employed== False and vacation == True) or (employed == False and vacation == False):\n            return False\n        elif employed == True and vacation == False:\n            return True", "def set_alarm(employed, vacation):\n    if employed == True and vacation == True:\n        return False\n    elif employed == False and vacation == False:\n        return False\n    elif employed == False:\n        return False\n    return True\n", "def set_alarm(employed, vacation):\n    if employed == vacation:\n        return False\n    elif employed == False and vacation == True:\n        return False\n    else:\n        return True", "def set_alarm(x, y):\n    if x == True and y == True:\n        return False\n    elif x == False and y == True:\n        return False\n    elif x == False and y == False:\n        return False\n    else:\n        return True", "def set_alarm(employed, vacation):\n    if employed == False and vacation == True:\n        return False\n    else:\n        return employed != vacation", "def set_alarm(employed, vacation):\n    if employed == True and vacation == True:\n        return False\n    elif employed == False and vacation == True:\n        return False\n    elif employed == False and vacation == False:\n        return False\n    return True", "def set_alarm(employed, vacation):\n    if employed != vacation:\n        if employed == True:\n            return True\n        else:\n            return False\n    else: \n        return False", "def set_alarm(employed, vacation):\n    if employed == True and vacation == False:\n        return True\n    elif (employed == True and vacation == True) or (employed == False and vacation == True) or (employed == False and vacation == False):\n        return False\n", "def set_alarm(employed, vacation):\n    # Your code here\n    if employed == True and vacation == True:\n        return False\n    elif employed == True and vacation == False:\n        return True\n    elif employed == False and vacation == True:\n        return False\n    elif employed == False and vacation == True:\n        return False\n    elif employed == False and vacation == False:\n        return False", "def set_alarm(employed, vacation):\n    return (False, True)[employed and not vacation]", "set_alarm = lambda employed,vacation: (employed,vacation) == (True,False)", "def set_alarm(employed, vacation):\n    if employed == True:\n        if vacation == True:\n            return False\n        else:\n            return True\n    elif employed == False:\n        if vacation == True:\n            return False\n        else: \n            return False\n", "def set_alarm(employed, vacation):\n    if employed is True and vacation is True:\n        return False\n    if employed is False and vacation is True:\n        return False\n    if employed is True and vacation is False:\n        return True\n    if employed is False and vacation is False:\n        return False\n", "def set_alarm(employed, vacation):\n   \n   result=''\n   \n   if employed==True and vacation==False:\n      result=True\n   else:\n      result=False\n      \n   return result   ", "import unittest\n\n\ndef set_alarm(employed, vacation):\n    return employed and not vacation\n\n\nclass TestSetAlarm(unittest.TestCase):\n    def test_should_return_false_when_employed_is_true_and_vacation_is_true(self):\n        self.assertEqual(set_alarm(employed=True, vacation=True), False)\n\n    def test_should_return_false_when_employed_is_false_and_vacation_is_false(self):\n        self.assertEqual(set_alarm(employed=False, vacation=False), False)\n\n    def test_should_return_false_when_employed_is_false_and_vacation_is_true(self):\n        self.assertEqual(set_alarm(employed=False, vacation=True), False)\n\n    def test_should_return_false_when_employed_is_true_and_vacation_is_false(self):\n        self.assertEqual(set_alarm(employed=True, vacation=False), True)\n", "def set_alarm(employed, vacation):\n    if vacation: return False\n    if employed and vacation: return False\n    if employed and not vacation: return True\n    return False", "set_alarm = lambda a, b: a and a != b", "def set_alarm(employed, vacation):\n    # Your code here\n    if employed == True and vacation == True:\n        return False \n    else:    \n        return False if employed == False else True ", "def set_alarm(employed: bool, vacation: bool) -> bool:\n    return (employed and not vacation)", "def set_alarm(employed, vacation):\n    return (employed and True) and (not vacation and True)", "def set_alarm(employed, vacation):\n    if employed == False:\n        if vacation == True:\n            return False\n        if vacation == False:\n            return False\n    else:return bool(vacation) ^ bool(employed)", "def set_alarm(e, v):\n    return e & (not v)", "def set_alarm(e, v):\n    if e == True and v == True:\n        return False\n    elif e == False and v == True:\n        return False\n    elif e == False and v == False:\n        return False\n    elif e == True and v == False:\n        return True", "def set_alarm(employed, vacation):\n    # Your code here\n    return False if employed == False else False if vacation == True else True", "def set_alarm(e, v):\n    return False if e==v else e", "def set_alarm(employed, vacation):\n    \n    if vacation == True:\n        return False\n        \n    if employed == False and  vacation == False:\n        return False\n        \n    else:\n        return True", "def set_alarm(employed, vacation):\n    # Your code here\n    if employed:\n        if vacation == False:\n            return True\n        if vacation:\n            return False\n    else:\n        return False", "def set_alarm(employed, vacation):\n    return (employed != vacation and employed ==1)", "def set_alarm(employed, vacation):\n    x = (employed, vacation)\n    if x == (True,False):\n        return True\n    return False", "def set_alarm(employed, vacation):\n    # Your code here\n    print (employed)\n    if ( employed == True and vacation == False ) :\n        return True\n    else :\n        return False", "def set_alarm(e, v):\n    if e==True and v==True:\n        return False\n    elif e==True and v==False:\n        return True\n    elif e==False and v==True:\n        return False\n    else:\n        return False", "def set_alarm(employed, vacation):\n    return employed != vacation and employed == True", "def set_alarm(employed, vacation):\n    s = ''\n    if employed == True:\n      if vacation == True:\n        s = False\n      else:\n        s = True\n    else:\n      s = False\n    return s", "def set_alarm(employed , vacation):\n    return not employed if employed and employed == vacation else employed", "def set_alarm(employed, vacation) -> bool:\n    # Your code here\n    if employed == True and vacation == True:\n        return False\n    elif employed == True and vacation == False:\n        return True\n    elif employed == False and vacation == True:\n        return False\n    elif employed == False and vacation == False:\n        return False", "def set_alarm(employed, vacation):\n    return False if employed == False or employed and vacation == True else True", "def set_alarm(employed, vacation):\n    if bool(employed) and not bool(vacation):\n        return True\n    else:\n        return False", "set_alarm=lambda employed,vacation:employed!=vacation if employed else employed", "def set_alarm(e, v):\n    if v == False and e == True:\n        return True\n    else:\n        return False"]