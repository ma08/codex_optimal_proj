["def largest(n, xs):\n  \"Find the n highest elements in a list\"\n  \n  return sorted(xs)[-n:];", "def largest(n,xs):\n  import heapq\n  return heapq.nlargest(n,xs)[::-1]", "def largest(n,xs):\n  xs.sort()\n  return xs[-n:]", "def largest(n,xs):\n  list = sorted(xs)\n  return list[-n:]", "import heapq\n\ndef largest(n,xs):\n  \"\"\"Find the n highest elements in a list\"\"\"\n  return sorted(heapq.nlargest(n, xs))", "largest = lambda n,x: sorted(x)[-n:]", "largest=lambda n,a:a.sort()or a[-n:]", "def largest(n,xs):\n    lst = sorted(xs)\n    new = []\n    for i in range(n):\n        new.append(lst[-i-1])\n    return sorted(new)\n", "def largest(n,xs):\n    v=sorted(xs)\n    return v[-n:]", "def largest(n,xs):\n  \"\"\"Find the n highest elements in a list\"\"\"\n  return (sorted(xs, reverse=True)[0:n])[::-1]"]