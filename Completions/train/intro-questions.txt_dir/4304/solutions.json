["def unlock(message): return message.lower().translate(message.maketrans(\"abcdefghijklmnopqrstuvwxyz\",\"22233344455566677778889999\"))", "from string import ascii_lowercase as alc\ndef unlock(message):\n    return message.lower().translate(str.maketrans(alc, '22233344455566677778889999'))", "def unlock(message):\n    return \"\".join(\"8\" if i==\"v\" else \"7\" if i==\"s\" else str(2+min(7, (ord(i)-ord(\"a\"))//3)) for i in message.lower())", "table = str.maketrans(\"abcdefghijklmnopqrstuvwxyz\", \"22233344455566677778889999\")\n\ndef unlock(message):\n    return message.lower().translate(table)", "strokes = {\n    c: str(i)\n    for i, s in enumerate(['abc', 'def', 'ghi', 'jkl', 'mno', 'pqrs', 'tuv', 'wxyz'], 2)\n    for c in s\n}\n\ndef unlock(message):\n    return ''.join(map(strokes.get, message.lower()))", "def unlock(message):\n    return message.lower().translate(str.maketrans(\n        'abcdefghijklmnopqrstuvwxyz',\n        '22233344455566677778889999'))", "TRANS = dict(zip('abcdefghijklmnopqrstuvwxyz',\n                 '22233344455566677778889999'))\n\ndef unlock(message):\n    return ''.join( TRANS[c] for c in message.lower() )", "unlock=lambda s:s.lower().translate(s.maketrans('abcdefghijklmnopqrstuvwxyz','22233344455566677778889999'))", "TABLE = str.maketrans(\"abcdefghijklmnopqrstuvwxyz\",\"22233344455566677778889999\")\n\ndef unlock(message): return message.lower().translate(TABLE)", "def unlock(message):\n    a = {'abc':2,'def':3,'ghi':4,'jkl':5,'mno':6,'pqrs':7,'tuv':8,'wxyz':9}\n    return \"\".join(str(a[y]) for x in message.lower() for y in a.keys() if x in y)"]