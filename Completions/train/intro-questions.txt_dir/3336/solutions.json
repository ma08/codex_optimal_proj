["def get_sum_of_digits(num):\n    return sum(map(int, str(num)))", "def get_sum_of_digits(num):\n    sum = 0\n    str_num = str(num)\n    for x in str_num:\n        sum += int(x)\n    return sum", "def get_sum_of_digits(n):\n    return sum(int(d) for d in str(n))", "def get_sum_of_digits(n):\n    return sum(map(int, str(int(n))))", "def get_sum_of_digits(num):\n    sum = int()\n    digits = str(num)\n    for x in digits:\n        sum += int(x)\n    return sum", "def get_sum_of_digits(num):\n    digits = []\n    for i in str(num): digits.append(int(i))\n    return sum(digits)", "def get_sum_of_digits(num):\n    return sum(list(map(int, [i for i in str(num)])))", "import re\ndef get_sum_of_digits(num):\n    sum = 0\n    num = str(num)\n    digits = re.findall(\"[0-9]{1}\",num)\n    for x in digits: \n        x = int(x)\n        sum = sum + x\n    return sum", "def get_sum_of_digits(num):\n    my_list = []\n    for i in str(num):\n        my_list.append(int(i))\n    return sum(my_list)", "import functools\n# def get_sum_of_digits(num):\n#     sum = 0\n#     digits = str(num)\n#     for x in digits:\n#         sum += int(x)\n#     return sum\ndef get_sum_of_digits(num):   \n    return functools.reduce(lambda a,b : a+b,[int(x) for x in str(num)] )"]