["def solve(s):\n  uc, lc, num, sp = 0, 0, 0, 0\n  for ch in s:\n    if ch.isupper(): uc += 1\n    elif ch.islower(): lc += 1\n    elif ch.isdigit(): num += 1\n    else: sp += 1\n  return [uc, lc, num, sp]", "import re\ndef solve(s):\n    return [len(re.findall(i,s)) for i in ('[A-Z]','[a-z]','\\d','[^a-zA-Z0-9]')]\n", "def solve(s):\n    res = [0, 0, 0, 0]\n    for c in s:\n        i = 0 if c.isupper() else 1 if c.islower() else 2 if c.isdigit() else 3\n        res[i] += 1\n    return res", "from string import ascii_lowercase, ascii_uppercase, digits, punctuation\n\n\ndef solve(s):\n    return [\n        len([q for q in s if q in ascii_uppercase]),\n        len([q for q in s if q in ascii_lowercase]),\n        len([q for q in s if q in digits]),\n        len([q for q in s if q in punctuation])\n    ]", "def solve(s):\n    lst = [0, 0, 0, 0]\n    for char in s:\n        if char.isupper():\n            lst[0] += 1\n        elif char.islower():\n            lst[1] += 1\n        elif char.isdigit():\n            lst[2] += 1\n        else:\n            lst[3] += 1\n    return lst", "def solve(s):\n    upper, lower, digit, other = 0, 0, 0, 0\n    \n    for c in s:\n        if   c.isupper(): upper += 1\n        elif c.islower(): lower += 1\n        elif c.isdigit(): digit += 1\n        else:             other += 1\n    \n    return [upper, lower, digit, other]", "def solve(s):\n    fs = [str.isupper, str.islower, str.isdigit]\n    res = [0, 0, 0, 0]\n    for c in s:\n        res[next((i for i, f in enumerate(fs) if f(c)), -1)] += 1\n    return res", "def solve(s):\n    r = [0] * 4\n    for e in s:\n        r[0 if e.isupper() else 1 if e.islower() else 2 if e.isdigit() else 3] += 1\n    return r", "def solve(s):\n    others = [\n        sum(x.isupper() for x in s),\n        sum(x.islower() for x in s),\n        sum(x.isnumeric() for x in s)\n    ]\n    return others + [len(s) - sum(others)]", "import re\ndef solve(s):\n    uppercase = len(re.findall('[A-Z]', s))\n    lowercase = len(re.findall('[a-z]', s))\n    numbers = len(re.findall('[0-9]', s))\n    special = len(re.findall('[^A-Za-z0-9]', s))\n    return [uppercase, lowercase, numbers, special]\n"]