["sequence=lambda n:int(format(n,'b'),3)", "def sequence(n):\n    return int(format(n, 'b'), 3)", "sequence=lambda n:int(bin(n)[2:],3)", "# A005836\ndef sequence(n):\n    return n and 3*sequence(n>>1) + (n&1)", "from math import log2\n\ndef sequence(i):\n    if i == 0:\n        return 0\n    e = int(log2(i))\n    return 3**e + sequence(i - 2**e)", "import numpy as np\ndef sequence(n):\n    return ter2dec(dec2bin(n))\n    \ndef dec2bin(n):\n    bin = np.array([])\n    while n > 0:\n        bin = np.append(bin, [n%2])\n        n = n//2\n    return bin\n\ndef ter2dec(ter):\n    dec = 0\n    for i in range(len(ter)):\n        dec += ter[i]*3**i\n    return dec\n\n# Induction hypothesis:\n# Let S(n) be the sequence of numbers m that don't form arithmetic sequences, such that m < n.\n# For a given k, assume that all S(m) is precisely all the numbers m < k without 2's in their ternary form.\n# If m has at least one 2 in it's expansion there exist numbers in the sequence with the 2's repalced by 0's and the 2's replaced by 1's.\n#     This forms an arithmetic sequence.\n# If m has no 2's, consider A and B such that A,B,m is an arithmetic sequence and B is in S(m).\n# Comparing the rightmost digits of B and m which are different. A must have a 2 in this position to form an arithmetic sequence.\n#     Hence A is not in S(m) and m will be the next number in the sequence.\n# \n# Therefore the next number in the sequence has no 2's in it's ternary form.\n#\n# Base case: S(1) is 0, S(2) is 0,1.\n#\n# There is a trivial bijection between the nth numbers ternary form and the binary form of n.\n\n", "\ndef sequence(n):\n    # Thx OEIS\n    return int(format(n, 'b'), 3)  # Chai Wah Wu, Jan 04 2015", "def sequence(n):\n    return int(f'{n:b}', 3)", "def sequence(n):\n#Thank SERGEY FOR THIS KATA!!!!!!!!!!!!!!!!!!!!!!!\n#Thank SERGEY FOR THIS KATA!!!!!!!!!!!!!!!!!!!!!!!\n#Thank SERGEY FOR THIS KATA!!!!!!!!!!!!!!!!!!!!!!!\n#Thank SERGEY FOR THIS KATA!!!!!!!!!!!!!!!!!!!!!!!\n#Thank SERGEY FOR THIS KATA!!!!!!!!!!!!!!!!!!!!!!!\n#Thank SERGEY FOR THIS KATA!!!!!!!!!!!!!!!!!!!!!!!\n#Thank SERGEY FOR THIS KATA!!!!!!!!!!!!!!!!!!!!!!!\n#Thank SERGEY FOR THIS KATA!!!!!!!!!!!!!!!!!!!!!!!\n#Thank SERGEY FOR THIS KATA!!!!!!!!!!!!!!!!!!!!!!!\n#Thank SERGEY FOR THIS KATA!!!!!!!!!!!!!!!!!!!!!!!\n#Thank SERGEY FOR THIS KATA!!!!!!!!!!!!!!!!!!!!!!!\n#Thank SERGEY FOR THIS KATA!!!!!!!!!!!!!!!!!!!!!!!\n#Thank SERGEY FOR THIS KATA!!!!!!!!!!!!!!!!!!!!!!!\n#Thank SERGEY FOR THIS KATA!!!!!!!!!!!!!!!!!!!!!!!\n#Thank SERGEY FOR THIS KATA!!!!!!!!!!!!!!!!!!!!!!!\n#Thank SERGEY FOR THIS KATA!!!!!!!!!!!!!!!!!!!!!!!\n#Thank SERGEY FOR THIS KATA!!!!!!!!!!!!!!!!!!!!!!!\n#Thank SERGEY FOR THIS KATA!!!!!!!!!!!!!!!!!!!!!!!\n#Thank SERGEY FOR THIS KATA!!!!!!!!!!!!!!!!!!!!!!!\n    return int(bin(n)[2:],3)\n", "def sequence(n):\n    return 3 * sequence(n // 2) + n % 2 if n > 0 else 0"]