["def vector_length(vector):\n    (x1,y1),(x2,y2) = vector\n    return ((x1-x2)**2 + (y1-y2)**2) ** .5", "import math\n\n\ndef vector_length(vector):\n    return math.hypot(vector[0][0] - vector[1][0],\n                      vector[0][1] - vector[1][1])\n", "import math\ndef vector_length(v):\n  return math.sqrt(math.pow(v[0][0] - v[1][0], 2) + math.pow(v[0][1] - v[1][1], 2))", "from math import sqrt\ndef vector_length(v):\n    return sqrt((v[1][0]-v[0][0])**2+(v[0][1]-v[1][1])**2)", "def vector_length(vector):\n    return sum((a - b)**2 for a,b in zip(*vector))**0.5", "import numpy as np\n\n# Will work in any dimension\ndef vector_length(vector):\n    P1, P2 = map(np.array, vector)\n    return np.linalg.norm(P1 - P2)", "from math import hypot\n\ndef vector_length(a):\n    return hypot(a[0][0]-a[1][0], a[0][1]-a[1][1])", "def vector_length(vector):\n    return sum((a-b)**2 for a,b in zip(*vector))**.5"]