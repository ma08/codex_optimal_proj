["def count_me(data):\n    if not data.isdigit():\n        return ''\n    \n    result = []\n    count = 1\n    last = data[0]\n    \n    for char in data[1:]:\n        if char == last:\n            count += 1\n        else:\n            result.append(str(count) + last)\n            last = char\n            count = 1\n    \n    result.append(str(count) + last)\n    \n    return ''.join(result)", "from re import search, sub, findall\ncount_me = lambda s: '' if search('[^0-9]', s) != None else sub('(.)\\\\1*', lambda m: str(len(m.group(0))) + m.group(1), s)", "count_me = lambda s: (__import__(\"re\").sub(r\"(\\d)\\1*\", lambda x: f\"{len(x.group())}{x.group(1)}\", s)) * s.isdigit()", "from itertools import groupby\n\ndef count_me(s):\n    return \"\".join(str(sum(1 for _ in y)) + x for x, y in groupby(s)) if s.isdigit() else \"\"", "from itertools import groupby\n\ndef count_me(data):\n    if not data.isdecimal():\n        return \"\"\n    groups = [\"\".join(g) for _, g in groupby(data)]\n    return \"\".join(f\"{len(g)}{g[0]}\" for g in groups)", "def count_me(data):\n    if not data.isdigit():  return ''\n    output = ''\n    from itertools import groupby\n    for k,v in groupby(data):\n        output += str(len(list(v))) + k\n    return output", "from itertools import groupby\n\ndef count_me(data):\n    return ''.join(str(len(list(g))) + k for k, g in groupby(data)) if data.isdecimal() else ''", "count_me=lambda s:s.isdigit()and''.join(str(len(list(g)))+k for k,g in __import__('itertools').groupby(s))or''", "from itertools import groupby\nimport re\n\ndef count_me(data):\n    s = ''.join(str(len(list(g)))+k for k,g in groupby(data))\n    return s if re.search(r'[a-zA-Z]', s) is None else ''", "from itertools import groupby\n\ndef count_me(data):\n    return \"\".join(f\"{len(list(g))}{k}\" for k, g in groupby(data)) if data.isdecimal() else \"\""]