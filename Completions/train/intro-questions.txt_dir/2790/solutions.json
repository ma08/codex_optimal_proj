["from itertools import groupby\n\ndef dup(arry):\n    return [\"\".join(c for c, grouper in groupby(i)) for i in arry]", "import re\n\ndef dup(arry):\n    return list(map(lambda s: re.sub(r'(\\w)\\1+', r'\\1', s), arry))", "def dup(arry):\n    array_new = []\n    for string in arry:\n        string_new = \"\"\n        prev = None\n        for char in string:\n            if char != prev:\n                string_new += char\n            prev = char\n        array_new.append(string_new)\n        \n    return array_new\n        \n", "def dup(arr):\n    a, res = 0, [x[0] for x in arr]\n    for string in arr:\n        for x in range(1, len(string)):\n            if string[x] != string[x-1]:\n                res[a] += string[x]\n        a += 1\n    return res", "from itertools import groupby\n\ndef dup(strings):\n    return [''.join(c for c, _ in groupby(s)) for s in strings]", "import re\n\ndef dup(lst):\n    return [re.sub(r\"(.)\\1+\", r\"\\1\", stg) for stg in lst]", "import re\n\ndef dup(xs):\n    return [re.sub(r'(.)\\1+', r'\\1', x) for x in xs]", "def f(s):\n    return ''.join(s[i] for i in range(len(s)-1) if s[i]!=s[i+1])+s[-1]\n\ndef dup(arry):\n    return [f(s) for s in arry]", "from itertools import groupby\n\ndef dup(array):\n    return list(map(remove_dup, array))\n\ndef remove_dup(string):\n    return ''.join(single for single,_ in groupby(string))", "def dup(arry):\n    stack=[]\n    output=[]\n    for item in arry:\n        for i in item:\n            if len(stack) ==0 or (len(stack) >=1 and i!=stack[-1]):\n                stack.append(i)   \n            else:\n                continue\n        output.append(''.join(stack))\n        stack =[]\n    return output\n    \n                \n"]