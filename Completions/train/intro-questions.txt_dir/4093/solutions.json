["def find_a(lst,n):\n    if n<0: return find_a(lst[::-1], 3-n)\n    if n<4: return lst[n]\n    a,b,c,d = lst\n    for _ in range(n-3):\n        a,b,c,d = b, c, d, 6*d-10*c+6*b-a\n    return d", "def find_a(A, n):\n    if 0 <= n < 4: return A[n]\n    if n < 0:\n        A, n = A[::-1], abs(n) + 3\n    B = [0] * 4\n    B[1] = 3 * A[1] - A[0] - A[2]\n    B[2] = 3 * A[2] - A[1] - A[3]\n    B[3] = 3 * B[2] - B[1] - A[2]\n    ind = 4\n    while ind <= n:\n        a = 3 * A[-1] - A[-2] - B[-1]\n        b = 3 * B[-1] - B[-2] - A[-1]\n        A.append(a)\n        B.append(b)\n        ind += 1\n    return A[-1]", "def find_a(array, n):\n    if n > 3:\n        for i in range(4,n+1):\n            array.append(6*array[i-1]+6*array[i-3]-10*array[i-2]-array[i-4])\n        return array[-1]\n    elif n < 0:\n        array = array[::-1]\n        for i in range(4,4-n):\n            array.append(6*array[i-1]+6*array[i-3]-10*array[i-2]-array[i-4])\n        return array[-1]\n    else:\n        return array[n]", "def find_a(array, n):\n    if 0 <= n < 4:\n        return array[n]\n    b1 = 3*array[1] - array[0] - array[2]\n    b2 = 3*array[2] - array[1] - array[3]\n    b3 = 3*b2 - b1 - array[2]\n    b0 = 3*b1 - b2 - array[1]    \n    array_b = [b0,b1,b2,b3]\n    \n    if n > 3:\n        count = 3  \n    else:\n        array.reverse()\n        array_b.reverse()\n        count = 0\n        n = 0 - n \n    while count < n:\n        a_next = 3*array[-1] - array[-2] - array_b[-1]\n        b_next = 3*array_b[-1] - array_b[-2] - array[-1]\n        array.append(a_next)\n        array_b.append(b_next)\n        count += 1\n    \n    return array[-1]\n", "def find_a(array, n):\n    if n in [0,1,2,3]:\n        return array[n]\n    b1 = 3*array[1] - array[0] - array[2]\n    b2 = 3*array[2] - array[1] - array[3]\n    if n > 3:\n        ak = array[3]\n        bk = 3*b2 - b1 - array[2]\n        ap = array[2]\n        bp = b2\n        i = 3\n        while i < n:\n            ak, ap = 3 * ak - bk - ap, ak\n            bk, bp = 3 * bk - ap - bp, bk\n            i += 1\n        return ak\n    else:\n        ak = array[0]\n        bk = 3 * b1 - b2 - array[1]\n        ap = array[1]\n        bp = b1\n        i = 0\n        while i > n:\n            ak, ap = 3 * ak - bk - ap, ak\n            bk, bp = 3 * bk - ap - bp, bk\n            i -= 1\n        return ak", "def find_a(array, n):\n    if n in range(4): return array[n]\n    if n < 0: return find_a([*reversed(array)], 3 - n)\n    a1 = array[1]\n    a2 = array[2]\n    b1 = 3 * array[1] - array[0] - array[2]\n    b2 = 3 * array[2] - array[1] - array[3]\n    for _ in range(n - 2):\n        a1, b1, a2, b2 = a2, b2, 3 * a2 - a1 - b2, 3 * b2 - b1 - a2\n    return a2", "def find_a(array, n):\n    if n >= 0:\n        if n < 4:\n            return array[n]\n        else:\n            A = array[:]\n            B = [0, 0, 0, 0]\n            B[1] = 3 * A[1] - A[0] - A[2]\n            B[2] = 3 * A[2] - A[1] - A[3]\n            B[0] = 3 * B[1] - B[2] - A[1]\n            B[3] = 3 * B[2] - B[1] - A[2]\n            for i in range(n - 3):\n                A.append(\"undefined\")\n                B.append(\"undefined\")\n            for i in range(4, len(A)):\n                A[i] = 3 * A[i - 1] - A[i - 2] - B[i - 1]\n                B[i] = 3 * B[i - 1] - B[i - 2] - A[i - 1]\n            return A[-1]\n    else:\n        A = array[:]\n        B = [0, 0, 0, 0]\n        B[1] = 3 * A[1] - A[0] - A[2]\n        B[2] = 3 * A[2] - A[1] - A[3]\n        B[0] = 3 * B[1] - B[2] - A[1]\n        B[3] = 3 * B[2] - B[1] - A[2]\n        for i in range(-n):\n            A = [\"undefined\"] + A\n            B = [\"undefined\"] + B\n        for i in range(-n-1, -1, -1):\n            A[i] = 3 * A[i + 1] - A[i + 2] - B[i + 1]\n            B[i] = 3 * B[i + 1] - B[i + 2] - A[i + 1]\n        return A[0]", "def find_a(array, n):\n    if 0<=n<4:\n        return array[n]\n    a = {i:x for i,x in enumerate(array)}\n    if n>4:\n        for i in range(4,n+1):\n            a[i] = -a[i-4]+6*a[i-3]-10*a[i-2]+6*a[i-1]\n    else:\n        for i in range(-1,n-1,-1):\n            a[i] = 6*a[i+1]-10*a[i+2]+6*a[i+3]-a[i+4]\n    return a[i]\n", "def find_a(a, n):\n    if 0 <= n < len(a):\n        return a[n]\n\n    if n < 0:\n        n = 3 - n\n        a = a[::-1]\n\n    b = [None] * 4\n    b[1] = 3*a[1] - a[0] - a[2]\n    b[2] = 3*a[2] - a[1] - a[3]\n    b[0] = 3*b[1] - a[1] - b[2]\n    b[3] = 3*b[2] - b[1] - a[2]\n    for _ in range(n-3):\n        x = 3*a[-1] - b[-1] - a[-2]\n        y = 3*b[-1] - a[-1] - b[-2]\n        a.append(x)\n        b.append(y)\n    return a[-1]", "def find_a(array, n):\n    if 0 <= n <= 3: return array[n]\n    a0 = array[0]\n    a1 = array[1]\n    a2 = array[2]\n    a3 = array[3]\n    b1 = 3*a1 - a0 - a2\n    b2 = 3*a2 - a1 - a3\n    b3 = 3*b2 - b1 - a2\n    b0 = 3*b1 - b2 - a1\n    if n > 3:\n        for k in range(4, n+1, 1):\n            an = 3*a3 - a2 - b3\n            bn = 3*b3 - b2 - a3\n            \n            a2, a3 = a3, an\n            b2, b3 = b3, bn\n            \n    else: \n        for k in range(-1, n-1, -1):\n            an = 3*a0 - a1 - b0\n            bn = 3*b0 - b1 - a0\n            \n            a0, a1 = an, a0\n            b0, b1 = bn, b0\n    \n    return an"]