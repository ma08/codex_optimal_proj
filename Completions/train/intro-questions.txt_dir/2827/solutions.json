["def switch_it_up(n):\n    return ['Zero','One','Two','Three','Four','Five','Six','Seven','Eight','Nine'][n]", "def switch_it_up(number):\n    number_converter={0:\"Zero\",1:\"One\",2:\"Two\",3:\"Three\",4:\"Four\",5:\"Five\",6:\"Six\",7:\"Seven\",8:\"Eight\",9:\"Nine\"}\n    return number_converter[number]", "def switch_it_up(number):\n    dict = {\n    1: \"One\",\n    2: \"Two\",\n    3: \"Three\",\n    4: \"Four\",\n    5: \"Five\",\n    6: \"Six\",\n    7: \"Seven\",\n    8: \"Eight\",\n    9: \"Nine\",\n    0: \"Zero\"}\n    \n    return dict.get(number)", "def switch_it_up(number):\n    return [\"Zero\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"][number]", "def switch_it_up(number):\n    if number is 0: return \"Zero\"\n    if number is 1: return \"One\"\n    if number is 2: return \"Two\"\n    if number is 3: return \"Three\"\n    if number is 4: return \"Four\"\n    if number is 5: return \"Five\"\n    if number is 6: return \"Six\"\n    if number is 7: return \"Seven\"\n    if number is 8: return \"Eight\"\n    if number is 9: return \"Nine\"", "def switch_it_up(number):\n    return 'Zero One Two Three Four Five Six Seven Eight Nine'.split()[number]", "def switch_it_up(k):\n    return['Zero', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine'][k]", "def switch_it_up(number):\n    return {'0' : \"Zero\",\n    '1' : \"One\",\n    '2' : \"Two\",\n    '3' : \"Three\",\n    '4' : \"Four\",\n    '5' : \"Five\",\n    '6' : \"Six\",\n    '7' : \"Seven\",\n    '8' : \"Eight\",\n    '9' : \"Nine\"}[str(number)]", "def switch_it_up(n):\n    return ['Zero', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine'][n]\n    \n# switch_it_up = lambda n: ['Zero', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine'][n]     \n", "def switch_it_up(number):\n    days = [\"Zero\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"]\n    return days[number]", "def switch_it_up(n):\n    return {0:\"Zero\",1:\"One\",2:\"Two\",3:\"Three\",4:\"Four\",5:\"Five\",6:\"Six\",7:\"Seven\",8:\"Eight\",9:\"Nine\"}.get(n)", "def switch_it_up(n):\n    numbers = ['Zero', 'One', 'Two', 'Three', 'Four', 'Five',\n               'Six', 'Seven', 'Eight', 'Nine']\n    return numbers[n]", "switch_it_up=lambda n:['Zero','One','Two','Three','Four','Five','Six','Seven','Eight','Nine'][n]", "def switch_it_up(number):\n    return {0: 'Zero', 1: 'One', 2: 'Two', 3: 'Three', 4: 'Four', 5: 'Five',\n            6: 'Six', 7: 'Seven', 8: 'Eight', 9: 'Nine'}.get(number)", "switch_it_up = lambda n:'ZOTTFFSSENenwhoiieiireoruvxvgno  ere ehe   e   nt '[n::10].strip()", "def switch_it_up(number):\n    l = ['Zero','One','Two','Three','Four','Five','Six','Seven','Eight','Nine']\n    return ''.join(l[i] for i in range(10) if number == i)", "switch_it_up = {0:\"Zero\", 1:\"One\", 2:\"Two\", 3:\"Three\", 4:\"Four\", 5:\"Five\", 6:\"Six\", 7:\"Seven\", 8:\"Eight\", 9:\"Nine\"}.get", "def switch_it_up(number):\n    return \"Zero One Two Three Four Five Six Seven Eight Nine Ten\".split()[number]", "def switch_it_up(number):\n    #your code here\n    d = ['zero','one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']\n    return d[number].capitalize()", "def switch_it_up(number):\n    word = [\"Zero\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"]\n    return word[number]", "def switch_it_up(number):\n    return __import__('unicodedata').name(str(number)).title()[6:]", "def switch_it_up(number):\n    return {\n    1:'One',\n    2:'Two',\n    3:'Three',\n    4:'Four',\n    5:'Five',\n    6:'Six',\n    7:'Seven',\n    8:'Eight',\n    9:'Nine'\n}.get(number, 'Zero')", "def switch_it_up(number):\n    switch={\n        0:'Zero',\n        1:'One',\n        2:'Two',\n        3:'Three',\n        4:'Four',\n        5:'Five',\n        6:'Six',\n        7:'Seven',\n        8:'Eight',\n        9:'Nine'\n    }\n    return switch.get(number,\"Number must be >= 0 and < 10\")", "def switch_it_up(number):\n    return \"zero one two three four five six seven eight nine\".title().split()[number]", "def switch_it_up(number):\n  dict_ = {0: 'Zero', 1: 'One', 2: 'Two' , 3: 'Three' , 4: 'Four' , 5: 'Five' , 6: 'Six' , 7: 'Seven' , 8: 'Eight' , 9: 'Nine'}\n  return dict_.get(number, 'Not Found')", "def switch_it_up(number):\n    return ['Zero', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine'][number] if 0 <= number < 10 else 'H\u00e6?'", "switch_it_up = ('Zero', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine').__getitem__", "def switch_it_up(number):\n    import unicodedata\n    return unicodedata.name(str(number)).split(None)[1].title()", "def switch_it_up(n):\n    \n    def zero():\n        return 'Zero'\n        \n    def one():\n        return 'One'\n        \n    def two():\n        return 'Two'\n        \n    def three():\n        return 'Three'\n        \n    def four():\n        return 'Four'\n        \n    def five():\n        return 'Five'\n        \n    def six():\n        return 'Six'\n        \n    def seven():\n        return 'Seven'\n        \n    def eight():\n        return 'Eight'\n        \n    def nine():\n        return 'Nine'\n        \n    options = {\n        None: zero,\n        0: zero,\n        1: one,\n        2: two,\n        3: three,\n        4: four,\n        5: five,\n        6: six,\n        7: seven,\n        8: eight,\n        9: nine,\n    }\n    \n    return options[n]()", "words = {\n   0 : 'Zero',\n   2 : 'One',\n   2 : 'Two',\n   3 : 'Three',\n   4 : 'Four',\n   5 : 'Five',\n   6 : 'Six',\n   7 : 'Seven',\n   8 : 'Eight',\n   9 : 'Nine',\n\n}\ndef switch_it_up(number):\n    return words.get(number, 'One')", "def switch_it_up(number):\n    s = {1:'One', 2:'Two', 3:'Three', 4:'Four', 5:'Five', 6:'Six', 7:'Seven', 8:'Eight', 9:'Nine', 0:'Zero'}\n    return s[number]", "def switch_it_up(number):\n    switch={\n        1:\"One\",\n        2:\"Two\",\n        3:\"Three\",\n        4:\"Four\",\n        5:\"Five\",\n        6:\"Six\",\n        7:\"Seven\",\n        8:\"Eight\",\n        9:\"Nine\",\n        0:\"Zero\"\n    }\n    return switch[number]", "def switch_it_up(number):\n    number_map = {\n        0: 'Zero',\n        1: 'One',\n        2: 'Two',\n        3: 'Three',\n        4: 'Four',\n        5: 'Five',\n        6: 'Six',\n        7: 'Seven',\n        8: 'Eight',\n        9: 'Nine',\n    }\n    \n    return number_map[number]", "def switch_it_up(number=0):\n    switcher = {\n        0: \"Zero\",\n        1: \"One\",\n        2: \"Two\",\n        3: \"Three\",\n        4: \"Four\",\n        5: \"Five\",\n        6: \"Six\",\n        7: \"Seven\",\n        8: \"Eight\",\n        9: \"Nine\",\n        10: \"Ten\"\n    }\n    return switcher.get(number)", "to_string = [\n    'Zero',\n    'One',\n    'Two',\n    'Three',\n    'Four',\n    'Five',\n    'Six',\n    'Seven',\n    'Eight',\n    'Nine'\n]\n\ndef switch_it_up(number):\n    return to_string[number]", "def switch_it_up(number):\n    dict_nums = {0: 'Zero',\n                 1: 'One',\n                 2: 'Two',\n                 3: 'Three',\n                 4: 'Four',\n                 5: 'Five',\n                 6: 'Six',\n                 7: 'Seven',\n                 8: 'Eight',                 \n                 9: 'Nine',                 \n                 }\n    return dict_nums[number]", "ENGLISH_NUMBE_NAMES = (\"Zero\", \"One\", \"Two\", \"Three\", \"Four\",\n                       \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\")\n\ndef switch_it_up(number: int) -> str:\n    \"\"\"Return english names of number 0-9.\"\"\"\n    if 0 <= number < len(ENGLISH_NUMBE_NAMES): \n        return ENGLISH_NUMBE_NAMES[number]\n    else:\n        return str(number)", "def switch_it_up(number):\n    number_word = {0: \"Zero\",\n                  1: \"One\",\n                  2: \"Two\",\n                  3: \"Three\",\n                  4: \"Four\",\n                  5: \"Five\",\n                  6: \"Six\",\n                  7: \"Seven\",\n                  8: \"Eight\",\n                  9: \"Nine\"}\n    return number_word[number]", "def switch_it_up(number):\n    \n    translation = {\n        0:'Zero',\n        1:'One',\n        2:'Two',\n        3:'Three',\n        4:'Four',\n        5:'Five',\n        6:'Six',\n        7:'Seven',\n        8:'Eight',\n        9:'Nine'\n    }\n    \n    return translation.get(number, None)", "X = [\"Zero\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\", \"Ten\"]\n\ndef switch_it_up(n):\n    return X[n]", "def switch_it_up(number):\n    dict_ = {1: 'One', 2: 'Two', 3: 'Three', 4: 'Four', 5: 'Five', 6: 'Six', 7: 'Seven', 8: 'Eight', 9: 'Nine', 0: 'Zero'}\n    return dict_[number]", "def switch_it_up(number):\n    l=(\"Zero\",\"One\",\"Two\",\"Three\",\"Four\",\"Five\",\"Six\",\"Seven\",\"Eight\",\"Nine\")\n    return l[number] ", "def switch_it_up(number):\n    if str(number).isdecimal():\n        return ({\n            1: 'one',\n            2: 'two',\n            3: 'three',\n            4: 'four',\n            5: 'five',\n            6: 'six',\n            7: 'seven',\n            8: 'eight',\n            9: 'nine',\n            0: 'zero'\n        }.get(number)).title()", "def switch_it_up(number):\n    #your code here\n    sayi={1:'One',2:'Two',3:'Three',4:'Four',5:'Five',6:'Six',7:'Seven',8:'Eight',9:'Nine',0:'Zero'}\n    \n    return sayi[number]", "def switch_it_up(number):\n    numbers_words = {0: 'Zero', 1: 'One', 2: 'Two', 3: 'Three', 4: 'Four', 5: 'Five', 6: 'Six', 7: 'Seven',\n                    8: 'Eight', 9: 'Nine'}\n    return numbers_words[number]", "def switch_it_up(number):\n    if (number == 0):\n        return \"Zero\";\n    elif (number == 1):\n        return \"One\";\n    elif (number == 2):\n        return \"Two\";\n    elif (number == 3):\n        return \"Three\";\n    elif (number == 4):\n        return \"Four\";\n    elif (number == 5):\n        return \"Five\";\n    elif (number == 6):\n        return \"Six\";\n    elif (number == 7):\n        return \"Seven\";\n    elif (number == 8):\n        return \"Eight\";\n    return \"Nine\";", "def switch_it_up(number):\n    dicta={0:'Zero',1:'One',2:'Two',3:'Three',4:'Four',5:'Five',6:'Six',7:'Seven',8:'Eight',9:'Nine'}\n       \n    return dicta.get(number)", "def switch_it_up(number):\n    #your code here\n    return \"Zero\" if number==0 else\\\n           \"One\" if number==1 else\\\n           \"Two\" if number==2 else\\\n           \"Three\" if number==3 else\\\n           \"Four\" if number==4 else\\\n           \"Five\" if number==5 else\\\n           \"Six\" if number==6 else\\\n           \"Seven\" if number==7 else\\\n           \"Eight\" if number==8 else\\\n           \"Nine\" if number==9 else\\\n           \"This is dumb...\"", "def switch_it_up(number):\n    return [\"Zero\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"][number] # return the word based on the given index", "def switch_it_up(number):\n    return {0: \"Zero\",\n            1: \"One\",\n            2: \"Two\",\n            3: \"Three\",\n            4: \"Four\",\n            5: \"Five\",\n            6: \"Six\",\n            7: \"Seven\",\n            8: \"Eight\",\n            9: \"Nine\"\n           }.get(number) # get() retrives from the dictionary", "def switch_it_up(num):\n  if num == 1:\n    return 'One'\n  elif num == 2:\n    return 'Two'\n  elif num == 3:\n    return 'Three'\n  elif num == 4:\n    return 'Four'\n  elif num == 5:\n    return 'Five'\n  elif num == 6:\n    return 'Six'\n  elif num == 7:\n    return 'Seven'\n  elif num == 8:\n    return 'Eight'\n  elif num == 0:\n    return 'Zero'\n  else:\n    return 'Nine'", "def switch_it_up(number):\n    d = { \n        0 : 'Zero', \n        1 : 'One', \n        2 : 'Two', \n        3 : 'Three', \n        4 : 'Four', \n        5 : 'Five',\n        6 : 'Six', \n        7 : 'Seven', \n        8 : 'Eight', \n        9 : 'Nine', \n        10 : 'ten'\n    }\n    return d[number]", "def switch_it_up(n):\n    return 'One' if n == 1 else 'Two' if n == 2 else 'Three' if n == 3 else 'Four' if n == 4 else 'Five' if n == 5 else 'Six' if n == 6 else 'Seven' if n == 7 else 'Eight' if n == 8 else 'Nine' if n == 9 else 'Zero'", "def switch_it_up(number):\n    dct = {\n        1:\"One\",\n        2:\"Two\",\n        3:\"Three\",\n        4:\"Four\",\n        5:\"Five\",\n        6:\"Six\",\n        7:\"Seven\",\n        8:\"Eight\",\n        9:\"Nine\",\n        0:\"Zero\",\n    } \n    return dct[number]", "def switch_it_up(n):\n    return [\"zero\", \"one\", 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'][n].title()\n", "def switch_it_up(x):\n    numbers = ['zero', 'one', 'two', 'three', 'four',\n               'five', 'six', 'seven', 'eight', 'nine']\n    return numbers[x].capitalize()\n", "def switch_it_up(number):\n    num2words1 = {0:\"Zero\",1: 'One', 2: 'Two', 3: 'Three', 4: 'Four', 5: 'Five',\n            6: 'Six', 7: 'Seven', 8: 'Eight', 9: 'Nine'}\n    return num2words1[number]", "convert = {0: \"Zero\",\n            1: \"One\",\n          2: \"Two\",\n          3: \"Three\",\n          4: \"Four\",\n          5: \"Five\",\n          6: \"Six\",\n          7: \"Seven\",\n          8: \"Eight\",\n          9: \"Nine\"}\n\ndef switch_it_up(number):\n    return convert.get(number)", "def switch_it_up(number):\n    nums = {\n        \"Zero\": 0, \n        \"One\": 1, \n        \"Two\": 2, \n        \"Three\": 3, \n        \"Four\": 4, \n        \"Five\": 5, \n        \"Six\": 6, \n        \"Seven\": 7, \n        \"Eight\": 8, \n        \"Nine\": 9 }\n    for k, v in nums.items():\n        if v == number:\n            return k", "def switch_it_up(number):\n    translations = {0: \"Zero\", 1: \"One\", 2: \"Two\", 3: \"Three\",\n                    4: \"Four\", 5: \"Five\", 6: \"Six\", 7: \"Seven\",\n                    8: \"Eight\", 9: \"Nine\"}\n    return translations[number]", "def switch_it_up(number):\n    lst=[0,1,2,3,4,5,6,7,8,9,'Zero','One','Two','Three','Four','Five','Six','Seven','Eight','Nine']\n    ind=lst.index(number)\n    return lst[ind+10]", "def switch_it_up(number):\n    number_string = ''\n    switcher = {\n        0:'Zero',\n        1:'One',\n        2: 'Two',\n        3: 'Three',\n        4: 'Four',\n        5: 'Five',\n        6: 'Six',\n        7: 'Seven',\n        8 : 'Eight',\n        9 : 'Nine'\n    }\n        \n    return switcher.get(number, 'Invalid number')", "def switch_it_up(number):\n    dict = {\n        0: \"Zero\",\n        1: \"One\",\n        2: \"Two\",\n        3: \"Three\",\n        4: \"Four\",\n        5: \"Five\",\n        6: \"Six\",\n        7: \"Seven\",\n        8: \"Eight\",\n        9: \"Nine\"\n    }\n    return [v for k, v in dict.items() if k == number][0]", "def switch_it_up(number):\n    my_dict = {\n        0 : \"Zero\",\n        1 : \"One\",\n        2 : \"Two\",\n        3 : \"Three\",\n        4 : \"Four\",\n        5 : \"Five\",\n        6 : \"Six\",\n        7 : \"Seven\",\n        8 : \"Eight\",\n        9 : \"Nine\"\n    }\n    string = my_dict.get(number)\n    return my_dict.get(number)", "def switch_it_up(number):\n    nmb = {\n        1: 'One',\n        2: 'Two',\n        3: 'Three',\n        4: 'Four',\n        5: 'Five',\n        6: 'Six',\n        7: 'Seven',\n        8: 'Eight',\n        9: 'Nine'\n    }\n    return nmb.setdefault(number, 'Zero')", "dic = {0:\"Zero\", 1:\"One\", 2:\"Two\", 3:\"Three\", 4:\"Four\", 5:\"Five\", 6:\"Six\", 7:\"Seven\", 8:\"Eight\", 9:\"Nine\"}\ndef switch_it_up(i):\n    #your code here\n    return dic[i]", "def switch_it_up(number):\n    converter = {0: 'Zero', 1: 'One', 2: 'Two', 3: 'Three',\n                 4: 'Four', 5: 'Five', 6: 'Six',\n                 7: 'Seven', 8: 'Eight', 9: 'Nine'}\n    return converter.get(number, None)\n", "numdict = {\n    0: 'Zero',\n    1: 'One',\n    2: 'Two',\n    3: 'Three',\n    4: 'Four',\n    5: 'Five',\n    6: 'Six',\n    7: 'Seven',\n    8: 'Eight',\n    9: 'Nine'\n}\n\ndef switch_it_up(number):\n    return numdict[number]", "def switch_it_up(number):\n    \"\"\" switch statement \"\"\"\n    switch={\n    0:\"Zero\",\n    1:\"One\",\n    2:\"Two\",\n    3:\"Three\",\n    4:\"Four\",\n    5:\"Five\",\n    6:\"Six\",\n    7:\"Seven\",\n    8:\"Eight\",\n    9:\"Nine\"}\n    \n    return switch.get(number)", "def switch_it_up(number):\n    mydic = {\n    0:'Zero', \n    1:'One',\n    2:'Two',\n    3:'Three',\n    4:'Four',\n    5:'Five',\n    6:'Six',\n    7:'Seven',\n    8:'Eight',\n    9:'Nine'\n    }\n    \n    return mydic[number]", "def switch_it_up(num):\n    d = { 0 : 'Zero', 1 : 'One', 2 : 'Two', 3 : 'Three', 4 : 'Four', 5 : 'Five',\n          6 : 'Six', 7 : 'Seven', 8 : 'Eight', 9 : 'Nine', 10 : 'Ten',\n          11 : 'Eleven', 12 : 'Twelve', 13 : 'Thirteen', 14 : 'fourteen',\n          15 : 'Fifteen', 16 : 'Sixteen', 17 : 'Seventeen', 18 : 'eighteen',\n          19 : 'Nineteen', 20 : 'Twenty',\n          30 : 'Thirty', 40 : 'Forty', 50 : 'Fifty', 60 : 'Sixty',\n          70 : 'Seventy', 80 : 'Eighty', 90 : 'Ninety' }\n    k = 1000\n    m = k * 1000\n    b = m * 1000\n    t = b * 1000\n\n    assert(0 <= num)\n\n    if (num < 20):\n        return d[num]\n\n    if (num < 100):\n        if num % 10 == 0: return d[num]\n        else: return d[num // 10 * 10] + '-' + d[num % 10]\n\n    if (num < k):\n        if num % 100 == 0: return d[num // 100] + ' hundred'\n        else: return d[num // 100] + ' hundred and ' + int_to_en(num % 100)\n\n    if (num < m):\n        if num % k == 0: return int_to_en(num // k) + ' thousand'\n        else: return int_to_en(num // k) + ' thousand, ' + int_to_en(num % k)\n\n    if (num < b):\n        if (num % m) == 0: return int_to_en(num // m) + ' million'\n        else: return int_to_en(num // m) + ' million, ' + int_to_en(num % m)\n\n    if (num < t):\n        if (num % b) == 0: return int_to_en(num // b) + ' billion'\n        else: return int_to_en(num // b) + ' billion, ' + int_to_en(num % b)\n\n    if (num % t == 0): return int_to_en(num // t) + ' trillion'\n    else: return int_to_en(num // t) + ' trillion, ' + int_to_en(num % t)\n\n    raise AssertionError('num is too large: %s' % str(num))", "def switch_it_up(number):\n    num_in_words = {\n        0 : 'Zero',\n        1 : 'One',\n        2 : 'Two',\n        3 : 'Three',\n        4 : 'Four',\n        5 : 'Five',\n        6 : 'Six',\n        7 : 'Seven',\n        8 : 'Eight',\n        9 : 'Nine'\n    }\n    return num_in_words.get(number,\"enter any number from 0 through 9\")", "def switch_it_up(number):\n    cases = {\n        0: 'Zero',\n        1: 'One',\n        2: 'Two',\n        3: 'Three',\n        4: 'Four',\n        5: 'Five',\n        6: 'Six',\n        7: 'Seven',\n        8: 'Eight',\n        9: 'Nine'\n    }\n    return cases.get(number, \"Invalid value\")", "def switch_it_up(number):\n    a={1:'One',2:'two',3:'three',4:'four',5:'five',6:'six',7:'seven',8:'eight',9:'nine',0:'zero'}\n    \n    return a[number].title()", "def switch_it_up(number):\n    \n    a_dict = {0:\"Zero\", 1:\"One\", 2:\"Two\", 3:\"Three\", 4:\"Four\",\n              5:\"Five\", 6:\"Six\", 7:\"Seven\" , 8:\"Eight\", 9:\"Nine\"}\n  \n\n    for value in a_dict.values():\n        needed = (a_dict[number])\n    \n    return needed", "def switch_it_up(number):\n    digits = {\n        0 : 'Zero',\n        1 : 'One',\n        2 : 'Two',\n        3 : 'Three',\n        4 : 'Four',\n        5 : 'Five',\n        6 : 'Six',\n        7 : 'Seven',\n        8 : 'Eight',\n        9 : 'Nine'}\n    return digits.get(number)", "def switch_it_up(number):\n    wordList = {0:'Zero', 1:'One', 2:'Two', 3:'Three', 4:'Four', 5:'Five',\n    6:'Six', 7:'Seven',8:'Eight', 9:'Nine'}\n    return wordList[number]", "stringNum = {1:'One',2:'Two',3:'Three',4:'Four',5:'Five',\\\n    6:'Six',7:'Seven',8:'Eight',9:'Nine',0:'Zero'}\n\ndef switch_it_up(number):\n    if number in stringNum.keys():\n        return stringNum[number]", "WORDS = [\n  'Zero',\n  'One',\n  'Two',\n  'Three',\n  'Four',\n  'Five',\n  'Six',\n  'Seven',\n  'Eight',\n  'Nine'\n]\n\ndef switch_it_up(number):\n    return WORDS[number]", "# given a number, 0 <= n <=9, return it in words\n# input - number as integer\n# output - string\n# edge cases - decimals/floats, invalid input\n\n# sample data - 8 = \"Eight\"\n# how does a computer convert from integer to string\n\ndef switch_it_up(number):\n    words = {0:\"Zero\",\n    1:\"One\",\n    2:\"Two\",\n    3:\"Three\",\n    4:\"Four\",\n    5:\"Five\",\n    6:\"Six\",\n    7:\"Seven\",\n    8:\"Eight\",\n    9:\"Nine\"\n    }\n    return words.get(number)", "def switch_it_up(number):\n    ohh = {\n    1 : 'One',\n    2 : 'Two',\n    3 : 'Three',\n    4 : 'Four',\n    5 : 'Five',\n    6 : 'Six',\n    7 : 'Seven',\n    8 : 'Eight',\n    9 : 'Nine',\n    0 : 'Zero',\n    }\n    return ohh[number]", "def switch_it_up(number):\n    num = {0: 'Zero', 1: 'One', 2: 'Two', 3: 'Three', 4: 'Four', 5: 'Five', 6: 'Six', 7: 'Seven', 8: 'Eight', 9: 'Nine'}\n    if number in num.keys ():\n        return num [number]", "def switch_it_up(number):\n    \n    return dict(zip(list(range(0,10)),['Zero','One','Two','Three','Four','Five','Six','Seven','Eight','Nine'])).get(number)", "def switch_it_up(number):\n\n    English = { 0 : \"Zero\" ,\n                1 : \"One\" ,\n                2 : \"Two\" ,\n                3 : \"Three\" ,\n                4 : \"Four\" ,\n                5 : \"Five\" ,\n                6 : \"Six\" ,\n                7 : \"Seven\" ,\n                8 : \"Eight\" ,\n                9 : \"Nine\" }\n                \n    return English.get(number)", "def switch_it_up(number):\n    dic ={0:\"Zero\",1:\"One\",2:\"Two\",3:\"Three\",4:\"Four\",5:\"Five\",6:\"Six\",7:\"Seven\",8:\"Eight\",9:\"Nine\"}\n    if number in dic:\n        return dic[number] ", "def switch_it_up(number):\n    x = {\n        0 : \"Zero\",\n        1 : \"One\",\n        2 : \"Two\",\n        3 : \"Three\",\n        4 : \"Four\",\n        5 : \"Five\",\n        6 : \"Six\",\n        7 : \"Seven\",\n        8 : \"Eight\",\n        9 : \"Nine\",    \n        }\n    return x.get(number)", "def switch_it_up(number):\n    if 0<=number<10:\n        return ['Zero','One','Two','Three','Four','Five','Six','Seven','Eight','Nine'][number]\n", "def switch_it_up(number):\n    return {\n        0: \"zero\",\n        1: \"one\",\n        2: \"two\",\n        3: \"three\",\n        4: \"four\",\n        5: \"five\",\n        6: \"six\",\n        7: \"seven\",\n        8: \"eight\",\n        9: \"nine\"\n    }.get(number).title()", "word = {\n    1: \"One\",\n    2: \"Two\",\n    3: \"Three\",\n    4: \"Four\",\n    5: \"Five\",\n    6: \"Six\",\n    7: \"Seven\",\n    8: \"Eight\",\n    9: \"Nine\",\n    0: \"Zero\"}\n\ndef switch_it_up(number):\n    return word.get(number)", "word = {0: \"Zero\",\n      1: \"One\",\n      2: \"Two\",\n      3: \"Three\",\n      4: \"Four\",\n      5: \"Five\",\n      6: \"Six\",\n      7: \"Seven\",\n      8: \"Eight\",\n      9: \"Nine\"}\n      \ndef switch_it_up(number):\n    if word.get(number):\n        return word[number]", "def switch_it_up(number):\n    return {\n        1:'one',\n        2:'two',\n        3:'three',\n        4:'four',\n        5:'five',\n        6:'six',\n        7:'seven',\n        8:'eight',\n        9:'nine',\n        0:'zero'}.get(number).capitalize()\n", "def switch_it_up(number):\n    nums = {\n    'Zero': 0,\n    'One': 1,\n    'Two': 2,\n    'Three': 3, \n    'Four': 4, \n    'Five': 5, \n    'Six': 6, \n    'Seven': 7,\n    'Eight': 8,\n    'Nine': 9,\n    'Ten': 10\n}\n    for key, value in nums.items():\n        if value  == number:\n            return key", "def switch_it_up(number):\n    #your code here\n    my_list=['Zero','One','Two','Three','Four','Five','Six','Seven','Eight','Nine']\n    return my_list[number]", "def switch_it_up(n):\n    d={\n    0:'Zero',\n    1:'One',\n    2:'Two',\n    3:'Three',\n    4:'Four',\n    5:'Five',\n    6:'Six',\n    7:'Seven',\n    8:'Eight',\n    9:'Nine'\n    }\n    return d.get(n,0)", "def switch_it_up(number):\n    dictionary = {0:\"Zero\",1:\"One\",2:\"Two\",3:\"Three\",\n                  4:\"Four\",5:\"Five\",6:\"Six\",7:\"Seven\",\n                  8:\"Eight\",9:\"Nine\"}\n    return dictionary[number]", "def switch_it_up(number):\n    dic = {0: \"Zero\", 1: \"One\", 2: \"Two\", 3: \"Three\", 4: \"Four\", 5: \"Five\", 6: \"Six\", 7: \"Seven\", 8: \"Eight\", 9: \"Nine\"}\n    return dic.get(number, \"ERROR\")", "def switch_it_up(number):\n   result=''\n   if number ==0:\n      result=\"Zero\"\n   elif number ==1:\n      result=\"One\"\n   elif number ==2:\n      result=\"Two\"\n   elif number ==3:\n      result=\"Three\"\n   elif number ==4:\n      result=\"Four\"\n   elif number ==5:\n      result=\"Five\"  \n   elif number ==6:\n      result=\"Six\"\n   elif number ==7:\n      result=\"Seven\"\n   elif number ==8:\n      result=\"Eight\"\n   elif number ==9:\n      result=\"Nine\"\n      \n      \n   \n   return result", "def switch_it_up(number):\n    num2words = {1: 'One', 2: 'Two', 3: 'Three',\n             4: 'Four', 5: 'Five',\n             6: 'Six', 7: 'Seven',\n             8: 'Eight', 9: 'Nine',\n             0: 'Zero'}\n\n    return num2words.get(number)", "def switch_it_up(number):\n    numbers = 'Zero-One-Two-Three-Four-Five-Six-Seven-Eight-Nine'.split('-')\n    return numbers[number] if number < len(numbers) else 'Error'"]