["def encrypter(strng):\n    return ''.join( c if c==' ' else chr(122 - ((ord(c)-97)+13) % 26) for c in strng )", "from string import ascii_lowercase as abc\n\ndef encrypter(strng):\n    return strng.translate(str.maketrans(abc[::-1], abc[13:] + abc[:13]))", "def encrypter(strng):\n    z={0:'m',1:'l',2:'k',3:'j',4:'i',5:'h',6:'g',7:'f',8:'e',9:'d',10:'c',11:'b',12:'a',13:'z',14:'y',15:'x',16:'w',17:'v',18:'u',19:'t',20:'s',21:'r',22:'q',23:'p',24:'o',25:'n'}\n    pt=''\n    for i in strng:\n        if ord(i)>=ord('a') and ord(i)<=ord('z'):\n            pt+=z[ord(i)-ord('a')]\n        else:\n            pt=pt+i\n    return pt#your code here", "from string import ascii_lowercase as al\n\ntbl1 = str.maketrans(al, al[13:] + al[:13])\ntbl2 = str.maketrans(al, al[::-1])\n\ndef encrypter(strng):\n    return strng.translate(tbl1).translate(tbl2)", "from codecs import encode\nfrom string import ascii_lowercase as az\n\nOPPOSITES = dict(zip(az, reversed(az)))\n\n\ndef encrypter(strng):\n    return ''.join(OPPOSITES.get(a, a) for a in encode(strng, 'rot13'))", "encrypter=lambda s: \"\".join([\"mlkjihgfedcbazyxwvutsrqpon\"[\"abcdefghijklmnopqrstuvwxyz\".index(a)] if a in \"abcdefghijklmnopqrstuvwxyz\" else a for a in s])", "encrypter=lambda s,a=list(range(97,123)):s.translate(dict(zip(a[::-1],a[13:]+a[:13])))"]