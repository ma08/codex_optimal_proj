["class Solution:\n     def isUgly(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         if num < 1:\n             return False\n         while num % 2 == 0:\n             num = num / 2\n         while num % 3 == 0:\n             num = num / 3\n         while num % 5 == 0:\n             num = num / 5\n         if num == 1:\n             return True\n         else:\n             return False", "class Solution:\n     def isUgly(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         if num == 0:\n             return False\n         for d in (5, 3, 2):\n             while num % d == 0:\n                 num //= d\n             if num == 1:\n                 break\n         else:\n             return False\n         return True\n", "class Solution:\n     def isUgly(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         if num == 0:\n             return False\n         while num % 2 == 0:\n             num /= 2\n         while num % 3 == 0:\n             num /= 3 \n         while num % 5 == 0:\n             num /= 5\n         if num == 1:\n             return True\n         return False\n", "class Solution:\n     def isUgly(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         n = num\n         if n <1:\n             return False\n         elif n == 1:\n             return True\n         else:\n             while n >= 1:\n                 ncount = 0\n                 if n % 3 == 0:\n                     n = n // 3\n                     ncount  = 1\n                 if n % 2 == 0:\n                     n //= 2\n                     ncount = 1\n                 if n % 5 == 0:\n                     n //= 5\n                     ncount = 1\n                 if ncount == 1:\n                     pass\n                 else:\n                     break\n             if n == 1:\n                 return True\n             else:\n                 return False", "class Solution:\n     def isUgly(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         if num==0:\n             return False\n         while num%2==0:\n             num=num/2\n         while num%3==0:\n             num=num/3\n         while num%5==0:\n             num=num/5\n         if num==1:\n             return True\n         else:\n             return False", "class Solution:\n     def isUgly(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         if num<1:\n             return False\n         if num==1:\n             return True\n         while num%2==0 or num%3==0 or num%5==0:\n             if num%2==0:\n                 num/=2\n             elif num%3==0:\n                 num/=3\n             else:\n                 num/=5\n             if num==1:\n                 return True\n         return False\n", "class Solution:\n     def isUgly(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         lst = []\n         if num < 1:\n             return False\n         if num == 1:\n             return True\n         i = 2\n         while (i<num+1):\n             print(num,i,' ',lst)\n             if num%i == 0:\n                 if i not in [2,3,5]:\n                     lst.append(i)\n                     if lst != []:\n                         return False\n                 num = num//i\n             else:\n                 i += 1\n                 if i>5:\n                     return False\n         if lst == []:\n             return True", "class Solution:\n     def isUgly(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         if num<=0:\n             return False\n         for i in [2,3,5]:\n             while num%i==0:\n                 num=num//i\n         return num==1", "class Solution:\n     def isUgly(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         \n         ## take care of trivial cases\n         if num <= 0:\n             return False\n         elif num == 1:\n             return True\n         \n         for factor in 5,3,2:\n             while num % factor == 0:\n                 num = num / factor\n                 print (num)\n         return int(num) == 1\n         \n         \n         \n", "class Solution:\n     def isUgly(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         for p in [2,3,5]:\n             while num%p == 0 < num:\n                 num /= p\n         return num==1", "class Solution:\n     def isUgly(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         if num<=0:\n             return False\n         count=0\n         while(count==0):\n             num=num/2\n             if str(num)[-1]!='0':\n                 print(11)\n                 count=1\n                 num=num*2\n         count=0\n         while (count==0):\n             num=num/3\n             if str(num)[-1]!='0':\n                 count=1\n                 num=num*3        \n         count=0\n         while (count==0):\n             num=num/5\n             if str(num)[-1]!='0':\n                 count=1\n                 num=num*5\n         if num!=1.0:\n             return False\n         else:\n             return True", "class Solution:\n     def isUgly(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         \n         \n    #    public CONCISE solution....\n \n         if num <= 0:\n             return False\n         while num % 2 == 0:\n             num //= 2\n         while num % 3 == 0:\n             num //= 3\n         while num % 5 == 0:\n             num //= 5\n         return num == 1\n         \n         \n \n         \n         \"\"\"\n    #    my solution......a bit too slow....\n    \n         if num <= 0:\n             return False\n         if num in [1,2,3,4,5,6]:\n             return True\n         if self.isPrime(num):\n             return False\n         else:\n             i = 2\n             while i <= int(math.sqrt(num)):\n                 if num%i == 0:\n                     if (self.isPrime(i) and i not in [2,3,5]) or (self.isPrime(num//i) and num//i not in [2,3,5]):\n                         return False\n                 i += 1\n             return True\n             \n         \n         \n     def isPrime(self, n):\n         if n <= 1:\n             return False\n         for i in range(2, int(math.sqrt(n)) + 1):\n             if n % i == 0:\n                 return False\n         return True\n         \"\"\"\n     \n"]