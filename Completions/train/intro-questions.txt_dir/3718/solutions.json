["def divisors(n):\n    return  len([l_div for l_div in range(1, n + 1) if n % l_div == 0]);", "# For Beginners.\n\n# Time: 11724ms\n# it's slow because use isinstance\ndef divisors5(n):\n    return len(list([e for e in [x if n % x == 0 else None for x in range(1, n + 1)] if isinstance(e, int)]))\n\n\n# Time: 7546ms\n# it's little fast because just directly check boolean\ndef divisors4(n):\n    return len(list([e for e in [True if n % x == 0 else False for x in range(1, n + 1)] if e]))\n\n\n# Time: 4731ms\n# in python True is evaluate as 1\n# so when prime factorization just set True and sum will return count\ndef divisors3(n):\n    return sum([True if n % x == 0 else False for x in range(1, n + 1)])\n\n\n# Time: 3675ms\n# even don't need return true, cause comparison operator will return boolean\ndef divisors2(n):\n    return sum([n % x == 0 for x in range(1, n + 1)])\n\n\n# same time with above but make short code via lambda expression\ndivisors = lambda n: sum([n % x == 0 for x in range(1, n + 1)])\n", "def divisors(n):\n    return sum(n%i==0 for i in range(1,n+1))", "def divisors(n):\n    divs = 0\n    \n    for x in range(1, int(n**0.5)+1):\n        if n % x == 0:\n            divs += 2\n    \n    return divs - (x*x == n)", "from math import sqrt, floor\n\ndef divisors(n):\n    return sum(1 if i*i == n else 2 for i in range(1, floor(sqrt(n)+1)) if n%i == 0)", "def divisors(n):\n    return sum(1 for i in range(1,n+1) if n % i == 0)", "def divisors(n):\n   c=1\n   i=0\n   while c<=n:\n       if n%c==0:\n           i+=1\n       c+=1\n   return i", "def divisors(n):\n    count = 0\n    for i in range(1, n + 1):\n        if n / i % 1 == 0:\n            count += 1\n    return count", "def divisors(n):\n    return len([x for x in range(1,(n//2)+1) if n % x == 0])+1", "def divisors(n):\n    divs = [] ## start empty list to store divisors\n    for i in range(1,n + 1): ## loop through all numbers 1 to n \n        if n % i == 0: ## test if divisor\n            divs.append(i) ##appends divisor\n    return len(divs) ##return length of divisors\n\n", "def divisors(n):\n    i = 1\n    result = 0\n    while i <= n:\n        if n%i == 0:\n            result += 1\n        i+=1\n    return result", "def divisors(n):\n    return len([i for i in range(1,n+1) if n%i==0])", "def divisors(n):\n    return sum(not n % i for i in range(1, n + 1))", "divisors=lambda n:sum(1for e in range(1,n+1)if n%e==0)", "def divisors(n):\n    i = 1\n    numeri = 0\n    while i <= n:\n        if n % i == 0:\n            numeri += 1\n        i += 1\n    return numeri   ", "def divisors(n):\n    lista = 0\n    for i in range(1,n+1):\n        if n%i == 0:\n            lista +=1\n    return lista\n", "def divisors(n):\n  z = 0\n  i = 1\n  while i <= n:\n    if n % i == 0:\n      z+=1\n    i+=1\n  return z", "def divisors(n):\n    return 1 if n == 1 else 2 + sum(1 + (0 if k == n // k else 1) for k in range(2, int(n**0.5) + 1) if n % k == 0)", "def divisors(n):\n  dividend=[i for i in range(n) if n%(i+1)==0]\n  return len(dividend)", "def divisors(n):\n    arr = []\n    for i in range(1, n+1):\n        if n % i == 0:\n            arr.append(i)\n    return len(arr)", "def divisors(n):\n    return sum(n % d == 0 for d in range(1, n + 1))", "def divisors(n):\n    count=1\n    for i in range(1,n):\n        if n%i==0:\n            count+=1\n    return count", "divisors=lambda n: (lambda s: len([i for i in range(1,s+1) if not n%i])*2-(s*s==n))(int(n**0.5))", "def divisors(n):\n  ans = set()\n  for i in range(1, int(n**.5)+1):\n    if not n%i:\n      ans |= {i, n//i}\n  return len(ans)", "def divisors(n):\n    return sum(2 for d in range(1, int(n ** 0.5 + 1)) if not n % d) - int((n ** 0.5).is_integer())\n", "def divisors(n):\n    pass\n    return [n%i for i in range(1,(n//2)+1)].count(0)+1\n", "def divisors(n):\n    result=1\n    for i in range(n//2):\n        if n % (i+1) == 0:\n            result += 1\n    return result", "def divisors(n):\n    count = 1\n    for num in range(1,n):\n        if (n/num).is_integer()==True:\n            count +=1\n            \n    return count", "def divisors(n):\n    sum=[]\n    for i in range (1,n+1):\n        if n%i==0:\n            sum.append(i)\n    return len(sum)", "def divisors(n):\n    L = []\n    for i in range(1,n+1):\n        if n//i == n/i:\n            L.append(i)\n    return len(L)", "def divisors(n):\n    return 1 + sum(1 for x in range(1,n//2+1) if n % x == 0)", "def divisors(n):\n    return sum([n%i==0 for i in range(1,n+1)])", "def divisors(n):\n    return len([num for num in range(1,n+1) if not (n % num)])", "def divisors(n):\n    count = 1\n    for i in range(2, n + 1):\n        if n % i == 0:\n            count += 1\n    return count", "def divisors(n):\n    return sum(n % a == 0 for a in range(1, n + 1))\n", "def divisors(n):\n    return sum(1 for x in range(1,n + 1) if n % x == 0)", "def divisors(n):\n        return len([ x for x in range(1,n+1) if n % x == 0 ])", "from math import sqrt\n\ndef divisors(n):\n    res = 0\n    for i in range(1,int(sqrt(n))+1):\n        if n%i == 0:\n            res += 2\n    if int(sqrt(n))**2 == n:\n        res -= 1\n    return res", "def divisors(n):\n    return sum([1 for i in range(1, n + 1) if n % i == 0])", "def divisors(n):\n    out = 1\n    for i in range(1, n):\n        if n % i == 0:\n            out += 1\n    return out", "def divisors(n):\n    div = 1\n    for i in range(1,(n+1//2)):\n        if n % i == 0:\n            div += 1            \n    return div", "def divisors(n):\n    y = 0\n    for x in range (1, n+1):\n        if (n % x) == 0:\n            y += 1\n    return y\n            \n", "def divisors(n):\n    i = 1\n    count = 0\n    while i <= n : \n        if (n % i==0) : \n            count += 1 \n        i = i + 1\n    return count", "def divisors(n):\n    num = list(range(1, n + 1))\n    count = 0\n    for i in num:\n        if n % i == 0:\n            count += 1\n    return count\n", "def divisors(n):\n    return len(list(i for i in range(n) if n%(i+1) == 0))", "def divisors(n):\n    return sum(True for i in range(1,n+1) if n % i == 0)", "def divisors(n):\n    counter = 1\n    for i in range(1, n):\n        if n % i == 0:\n            counter += 1\n    return counter\n\ndivisors(2)", "def divisors(n):\n    list_1 = []\n    for x in range(1,n+1):\n        if n%x == 0:\n            list_1.append(x)\n    length = len(list_1)\n    return length\n", "def divisors(n):\n    factors = [num for num in range(1, n // 2 + 1) if n % num == 0]\n    return len(factors) + 1", "def divisors(n):\n    divisor = 1\n    count = 0\n    while n > divisor:\n        if n % divisor == 0:\n            count += 1\n            divisor += 1\n        else:\n            divisor += 1\n    count += 1\n    return count", "def divisors(n):\n    count = 0\n    for i in range(1, n + 1):\n        if (n % i == 0):\n            print(i)\n            count = count + 1\n    return count", "def divisors(n):\n    div = 1\n    for i in range(1,n):\n        if n%i == 0:\n            div += 1\n    return div", "def divisors(n):\n    \n    count = 0\n    for i in range(1, int(n / 2) + 1):\n        \n        if n % i == 0:\n            count += 1\n    \n    count += 1 #n value itself\n            \n    return count", "def divisors(n):\n    answer = []\n    for i in range(1, n // 2 + 1):\n        if n % i == 0:\n            if i not in answer:\n                answer.append(i)\n    return len(answer) + 1", "def divisors(n):\n    count = 1\n    \n    for i in range(1, n):\n        if n % i == 0:\n            count += 1\n            print(i)\n            print(count)\n    return count", "def divisors(n):\n    k = 1\n    for i in range(1, int(n/2)+1):\n        if n % i == 0:\n            k += 1\n\n    return k", "def divisors(n):\n    ret = 1\n    \n    for i in range(1, n):\n        if n % i == 0:\n            ret += 1\n    \n    return ret", "def divisors(n):\n    '''\n        Returns the number of divisors of a positive integer\n        ~Input: \n            n, the given integer\n        ~Output:\n            x, the number of divisors\n    '''\n    x = 0\n    for i in range(1, n+1):\n        if n % i == 0:\n            x += 1\n    \n    return x", "import math\ndef divisorGenerator(n):       #\u6c42\u6240\u6709\u9664\u6570\n    large_divisors = []\n    for i in range(1, int(math.sqrt(n) + 1)):\n        if n % i == 0:\n            yield i\n            if i*i != n:\n                large_divisors.append(n / i)\n    for divisor in reversed(large_divisors):\n        yield divisor\ndef divisors(n):\n    return len(list(divisorGenerator(n)))", "def divisors(n):\n    x = 1\n    count = 2\n    while True:\n        if count > n: break\n        if n % count == 0:\n            x += 1\n        count += 1\n    return x", "def divisors(n):\n    count = 0\n    div_by_n = 0\n    while count < n:\n        count += 1\n        if n % count == 0:\n            div_by_n += 1\n    return div_by_n", "def divisors(n):\n    divisor = 1\n    total = 0\n    while divisor <= n:\n        if n % divisor == 0:\n            total += 1\n        divisor +=1\n    return total", "def divisors(n):\n    \n    num = []\n    for x in range (1,n+1):\n        if n % x == 0:\n            num.append(x)\n        else:\n            continue\n            \n    return len(num)\n", "def divisors(n):\n    s = 0\n    for i in range(1,n//2+1):\n        if n%i == 0:\n            s += 1\n    return s+1", "def divisors(n):\n    count = 0\n    for i in range(n+1):\n        if i == 0:\n            continue\n        s = n / i\n        if s.is_integer():\n            count +=1\n    return count", "def divisors(n):\n    return sum([1 if n % x == 0 else 0 for x in range(1,n)]) + 1", "def divisors(n):\n    count=0\n    div=1\n    while div<=n:\n        if n%div==0:\n            count +=1\n            div+=1\n        else:\n            div+=1\n    return count", "def divisors(n):\n    x = 1\n    y = []\n    while x < n:\n        if n % x == 0:\n            y.append(x)\n        x +=1\n    return len(y) + 1", "def divisors(n):\n    devisors = []\n    for number in range(1, n+1):\n        result = n % number\n        if result == 0:\n            devisors.append(result)\n    return(len(devisors))\n", "def divisors(n):\n    count = 1\n    \n    for i in range(1, n):\n        if n%i == 0:\n            count += 1\n        else:\n            count += 0\n    return count", "def divisors(n):\n    answers = []\n    for i in range(1, n+1):\n        if n % i == 0:\n            answers.append(i)\n    return len(answers)\n", "def divisors(n):\n    sum = 0\n    for numbers in range(1,n+1):\n        if n % numbers == 0:\n            sum += 1\n    return sum\n", "def divisors(n):\n    x = 0\n    number = n\n    while n >= 1:\n        if number % n == 0:\n            x += 1\n        n -= 1\n    return x", "def divisors(n):\n    def gen_divisors():\n        y = 1\n        while y <= n:\n            if n % y == 0 : yield y\n            y += 1\n    \n    return len(list(gen_divisors()))", "def divisors(n):\n    divisors = 0\n    for num in range(1, n + 1):\n        if(n % num == 0):\n            divisors += 1\n    return divisors", "def divisors(n):\n    x = []\n    for i in range(1,500001):\n        if n % i == 0:\n            x.append(i)\n        else:\n            continue\n    return len(x)\n", "def divisors(n):\n    a = list(range(n));\n    a.pop(0);\n    c = [];\n    for i in a:\n        if n%i == 0:\n            c.append(i);\n    return(len(c) + 1);", "def divisors(n):\n    return len([n//i for i in range(1,n+1) if n%i==0])", "def divisors(n):\n    j = 0\n    for i in range (1, n+1):\n        if n % i == 0:\n            j += 1\n        else:\n            j\n    return j\n    pass", "def divisors(n):\n    count = 0\n    div = 1\n    while div <= n:\n        if n %div == 0:\n            count += 1\n        div += 1\n    return count", "def divisors(n):\n    import math\n    a = 0\n    for i in range(n):\n        if i >= 1:\n            if n % i == 0:\n                a += 1\n    return a + 1", "def divisors(n):\n    res=[]\n    i=1\n    while i<=n:\n        if n%i==0:\n            res.append(i)\n        i=i+1\n    return len(res)", "def divisors(n):\n    count=0\n    for x in range(n):\n        if n % (x+1)  == 0:\n               count +=1\n    return count\n", "def divisors(n):\n    count = 0\n    n = int(n)\n    for num in range(1,n+1):\n        if n % num == 0:\n            count += 1\n    return count", "def divisors(n):\n    list = []\n    for i in range(1,500000):\n        if n % i == 0:\n            list.append(i)\n    return len(list)", "def divisors(n):\n    a = []\n    for y in range(1,500000):\n        if n % y == 0:\n            a.append(y)\n    return len(a)", "def divisors(n):\n    i = 1\n    lt = []\n    while i <= n : \n        if (n % i==0) : \n            lt.append(i)\n        i = i + 1\n    return len(lt)", "import math\ndef divisors(n):\n    cnt = 0\n    for i in range(1,n + 1,1):\n        if n % i == 0:\n            if n / i == i:\n                cnt = cnt + 1\n            else: # Otherwise count both \n                cnt = cnt + 1\n    return cnt \n        \n", "def divisors(n):\n    temp = []\n    for i in range(1, 600000):\n        if n % i == 0:\n            temp.append(i)\n    return len(temp)", "def divisors(n):\n    a = 0\n    for i in range(1, 500001):\n        if n % i == 0:\n            a += 1\n            \n    return a\n", "def divisors(n):\n    cnt = 0\n    for num in range(1,n):\n        if n % num == 0:\n            cnt+=1\n    return cnt+1", "def divisors(n):\n    divs = 1\n    print(round(n/2))\n    for i in range(1, round(n/2)+1):\n        if n % i == 0: divs+=1\n    return divs", "def divisors(n):\n    num = 0\n    for i in range(1,n+1):\n        if n % i == 0:\n            num += 1\n        else:\n            continue\n    return num\n    pass", "def divisors(n):\n    \n    return len([x for x in range(1,n+1, 1) if (n/x).is_integer()])\n", "def divisors(n):\n    import math\n    res = set()\n    max_divisor = int(math.sqrt(n))\n    for i in range(1, max_divisor+1):\n        if n % i == 0:\n            res.add(i)\n            res.add(n/i)\n    return len(res)", "def divisors(n):\n    count = 1\n    for i in range(1, n // 2 + 1):\n        if not n % i:\n            count += 1\n    return count"]