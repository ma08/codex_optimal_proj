["def factorsRange(n, m):\n    return {i: [j for j in range(2, i) if i % j == 0] or ['None'] for i in range(n, m + 1)}", "def factorsRange(n, m):\n    res = {}\n    \n    for num in range(n, m+1):\n        factors = []\n        \n        for div in range(2, num // 2 + 1):\n            if num % div == 0:\n                factors.append(div)\n        \n        if len(factors) == 0:\n            factors = ['None']\n        \n        res[num] = factors\n    \n    return res", "def factorsRange(n, m):\n    def factors(n):\n        ret = [i for i in range(2, n) if n % i == 0]\n        if not ret: return ['None']\n        return ret\n    return {i:factors(i) for i in range(n, m + 1)}", "def factorsRange(n, m):\n    i, dict = 2, {}\n    for num in range(n, m + 1):\n        while i < num:\n            if num % i == 0 and num != i:\n                dict.setdefault(num, []).append(i)\n            i += 1\n        i = 2\n        if num not in dict:\n            dict[num] = ['None']\n    \n    return dict", "LIMIT = 351\nmemo = [[] for _ in range(LIMIT)]\nfor x in range(2, LIMIT):\n    if not memo[x]:\n        memo[x] = ['None']\n    for y in range(2*x, LIMIT, x):\n        memo[y].append(x)\n\ndef factorsRange(n, m):\n    return {i:memo[i] for i in range(n, m+1)}", "from collections import Counter\n\ndef factors(n):\n    result = set()\n    for i in range(2, int(n**0.5)+1):\n        if n % i == 0:\n            result.add(i)\n            result.add(n // i)\n    return sorted(result) if result else ['None']\n    \ndef factorsRange(n, m):\n    return {i: factors(i) for i in range(n, m+1)}", "def factorsRange(n, m):\n    return { e:([i for i in range(2,round(e/2)+1) if not e%i ] or ['None'] ) for e in range(n, m+1) }", "factorsRange=lambda n,m:{x:sorted(set(__import__(\"itertools\").chain(*((y,x/y)for y in range(2,int(x**.5)+1)if not x%y))))or['None']for x in range(n,m+1)}", "factorsRange=lambda a,b:{n:[d for d in range(2,n)if not n%d]or['None']for n in range(a,b+1)}", "def factorsRange(n, m):\n    dlist = {}\n    for x in range(n, m + 1):\n        templist = []\n        for y in range(2, x+1):\n            if x % y == 0 and x != y:\n                if templist.count(y) == 0: \n                    templist.append(y)\n        if len(templist) >= 1:\n            dlist.update({x : templist})\n        else:\n            dlist.update({x : [\"None\"]})\n    return dlist\n"]