["from statistics import mean\nfrom math import floor\n\ndef sum_average(arr):\n    return floor(sum(map(mean, arr)))", "from statistics import mean\nfrom math import floor\n\ndef sum_average(arr):\n    return floor(sum(mean(lst) for lst in arr))", "import math\n\ndef sum_average(arr):\n    return math.floor(sum([sum(array)/len(array) for array in arr]))", "from math import floor\ndef sum_average(arr):\n    return floor(sum(sum_average(x)/len(x) if type(x) is list else x for x in arr))", "import math\ndef sum_average(arr):\n    total = 0\n    for x in arr:\n        total += sum(x)/len(x)\n    return math.floor(total)", "import numpy as np\n\ndef sum_average(arr):\n    nm = int(sum([np.mean(arr[i]) for i in range(len(arr)) ]))\n    return nm-1 if nm<0 else nm", "import numpy as np\nfrom math import floor\n\ndef sum_average(arr):\n  return floor(sum(map(np.average, arr)))", "import numpy\nimport math\ndef sum_average(arr):\n    print(arr)\n    total = 0\n    for item in arr:\n        print(numpy.mean(item))\n        total += numpy.mean(item)\n    return math.floor(total)", "import math\n\ndef sum_average(arr):\n    \n    x = 0\n    \n    for i in range(0,len(arr)):\n        \n        l = len(arr[i])\n        \n        s = sum(arr[i])\n        \n        v = s/l\n        \n        x+= v\n    \n    w = math.floor(x)\n    \n    return w\n   \n", "def avg(seq):\n    sum = 0\n    count = 0\n    for i in seq:\n        sum += i\n        count += 1\n    return sum/count if count != 0 else 0\n\nsum_average = lambda arr: __import__('math').floor(sum(avg(i) for i in arr))"]