["def solve(a,b):\n    return [a.count(e) for e in b]", "from collections import Counter\n\ndef solve(a,b):\n    c = Counter(a)\n    return [c[s] for s in b]", "def solve(a,b):\n    return [a.count(x) for x in b]", "def solve(a,b):\n    return list(map(a.count, b))", "def solve(haystack, needles):\n    return [haystack.count(needle) for needle in needles]", "from collections import Counter\n\ndef solve(a, b):\n    return list(map(Counter(a).__getitem__, b))", "def solve(first,second):\n    return [first.count(word) for word in second]", "def solve(array1, array2):\n    return [array1.count(e) for e in array2]\n", "solve=lambda a,b:(lambda c:[c.get(s,0)for s in b])(__import__('collections').Counter(a))", "from collections import Counter\n\n\ndef solve(arr_1, arr_2):\n    cnt = Counter(arr_1)\n    return [cnt[a] for a in arr_2]\n"]