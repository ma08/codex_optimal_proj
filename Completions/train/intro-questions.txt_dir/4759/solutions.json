["def to_acronym(input):\n  # only call upper() once\n  return ''.join(word[0] for word in input.split()).upper()", "def to_acronym(input):\n  return ''.join(w[0].upper() for w in input.split())", "def to_acronym(input):\n    return \"\".join(i[0].upper() for i in input.split())", "def to_acronym(input):\n    fstring = \"\"\n    fstring += input[0].upper()\n    for i in range(0, len(input)):\n        if input[i] == \" \":\n            fstring += input[i+1].upper()\n            \n    return fstring\n    pass", "def to_acronym(i):\n    return''.join(w[0]for w in i.split()).upper()", "import re\n\ndef to_acronym(s):\n    return ''.join(re.findall(r'\\b(\\w)', s)).upper()", "import string\ndef to_acronym(input):\n    return \"\".join([x[0].upper() for x in input.split(\" \")])\n", "to_acronym=lambda s:''.join(w[0]for w in s.split()).upper()", "def to_acronym(input):\n    words = input.split()\n    acronym = ''\n    for word in words:\n        acronym += word[0]\n    return acronym.upper()", "def to_acronym(input):\n    \n# =============================================================================\n#     This function takes a string and make an acronym of it.\n#     \n#     Rule of making acronym in this kata:\n#         split string to words by space char\n#         take every first letter from word in given string\n#         uppercase it\n#         join them toghether\n#     Eg:\n#         Code wars -> C, w -> C W -> CW\n# =============================================================================\n\n    words = input.split()\n    \n    acronym = \"\"\n    \n    for word in words:\n        acronym = acronym + word[0].upper()\n        \n    return acronym"]