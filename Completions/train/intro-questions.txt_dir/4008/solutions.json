["def string_to_int_list(s):\n    return [int(n) for n in s.split(\",\") if n]", "def string_to_int_list(s):\n    return [int(x) for x in s.split(',') if x != '']", "def string_to_int_list(s):\n    return [int(x) for x in s.split(',') if x]", "import re\nnumber_pattern = re.compile(\"-?[0-9]+\")\n\ndef string_to_int_list(s):\n    return [int(c) for c in s.split(\",\") if re.match(number_pattern, c)]\n\n", "def string_to_int_list(s):\n    return [int(nb) for nb in s.split(',') if nb]", "def string_to_int_list(s):\n    return [int(x) for x in s.split(',') if len(x)>0]", "def string_to_int_list(string):\n    return [int(i) for i in (string.split(',')) if i.isdigit() or i.startswith('-') and i[1:].isdigit()]", "def string_to_int_list(s):\n    def isint(j):    \n        try:\n            int(j)\n            return True\n        except:\n            return False\n    return [int(i) for i in s.split(\",\") if isint(i)]"]