["class Solution:\n    def threeConsecutiveOdds(self, arr: List[int]) -> bool:\n        flag = False\n        odd = 0\n        i = 0\n        while i < len(arr):\n            if arr[i] % 2 == 1:\n                if not flag:\n                    flag = True\n                    odd += 1\n                    i += 1\n                else:\n                    odd += 1\n                    i += 1\n            else:\n                if not flag:\n                    i += 1\n                else:\n                    flag = False\n                    odd = 0\n                    i+= 1\n                    \n            if odd == 3:\n                return True\n            \n        return False\n            \n                    \n", "class Solution:\n    def threeConsecutiveOdds(self, arr: List[int]) -> bool:\n        if len(arr)<3:\n            return False\n        \n        count=0\n        for i in arr:\n            if i%2!=0: \n                count+=1\n            elif i%2==0:\n                count=0\n            if count==3:\n                return True\n     \n        return False\n                \n                \n            \n", "class Solution:\n    def threeConsecutiveOdds(self, arr: List[int]) -> bool:\n        ########################################################################### \n        if len(arr) < 3:\n            return False \n\n        elif arr[0] % 2 + arr[1] % 2 + arr[2] % 2  == 3:\n                return True \n        else:\n            return self.threeConsecutiveOdds(arr[1:])\n        \n        \n        ###########################################################################\n        \n\n", "class Solution:\n    def threeConsecutiveOdds(self, arr: List[int]) -> bool:\n        count = 0\n        \n        for i in range(0, len(arr)):\n            if arr[i] %2 != 0:\n                count += 1\n                if count == 3:\n                    return True\n            else:\n                count = 0\n        return False", "class Solution:\n    def threeConsecutiveOdds(self, arr: List[int]) -> bool:\n        \n        # Walk through the list\n        # stop at an odd number\n        # are the next 2 odd?\n        # if so, yes and return\n        # if not, walk forward one and try again\n        \n        \n        for i in range(len(arr)):\n            # I found an odd, are the next two odd?\n            if arr[i] % 2 != 0:\n                toCheck = arr[i: i + 3]\n                \n                print(toCheck)\n                if len(toCheck) >= 3:\n                    if toCheck[1] % 2 != 0 and toCheck[2] % 2 != 0:\n                        return True\n        \n        return False\n", "class Solution:\n    def threeConsecutiveOdds(self, arr: List[int]) -> bool:\n        for i in range(len(arr) - 2):\n            if self.is_odd(arr[i]) and self.is_odd(arr[i+1]) and self.is_odd(arr[i+2]):\n                return True\n        return False\n    \n    def is_odd(self, num):\n        return num % 2 != 0", "class Solution:\n    def threeConsecutiveOdds(self, arr: List[int]) -> bool:\n        a=0\n        while(a < len(arr)-2):\n            if arr[a]&1 and arr[a+1]&1 and arr[a+2]&1:\n                return True\n            elif arr[a+2]&1==0:\n                a+=3\n            elif arr[a+1]&1==0:\n                a+=2\n            elif arr[a]&1==0:\n                a+=1         \n        return False\n", "class Solution:\n    def threeConsecutiveOdds(self, arr: List[int]) -> bool:\n        \n        oddFound = False\n        numOdd = 0\n        for num in arr:\n            if num % 2 != 0:\n                oddFound = True\n                numOdd += 1\n                if numOdd == 3: return True\n            else:\n                oddFound = False\n                numOdd = 0\n        return False\n", "class Solution:\n    def threeConsecutiveOdds(self, arr: List[int]) -> bool:\n        for i in range(len(arr)-2):\n            newArr = arr[i:i+3]\n            if newArr[0]%2 != 0 and newArr[1]%2 != 0 and newArr[2]%2 != 0:\n                return True\n        return False", "class Solution:\n    def threeConsecutiveOdds(self, arr: List[int]) -> bool:\n        number_of_cons_odds = 0\n        \n        for elem in arr:\n            if elem % 2 == 0:\n                number_of_cons_odds = 0\n                continue\n            \n            number_of_cons_odds += 1\n            if number_of_cons_odds == 3:\n                return True\n            \n        return False", "class Solution:\n    def threeConsecutiveOdds(self, arr: List[int]) -> bool:\n        \n        if len(arr) < 3:\n            return False\n        \n        for i in range(len(arr)-2):\n            if arr[i]%2 == 1 and arr[i+1]%2 == 1 and arr[i+2]%2 == 1:\n                return True\n        \n        return False", "class Solution:\n    def threeConsecutiveOdds(self, arr: List[int]) -> bool:\n        return any(arr[i] % 2 != 0 and arr[i+1] % 2 != 0 and arr[i+2] % 2 != 0 for i in range(len(arr) - 2))", "class Solution:\n    def threeConsecutiveOdds(self, arr: List[int]) -> bool:\n        \n        inds = [n%2 for n in arr]\n        \n        temp =[]\n        for i, v in enumerate(inds):\n            if v==1:\n                temp.append(i)\n                     \n        if len(temp)<3:\n            return False\n        \n        for i in range(1, len(temp)-1):\n            if (temp[i]-temp[i-1]==1) and (temp[i+1]-temp[i]==1):\n                return True\n        return False\n            \n", "class Solution:\n    def threeConsecutiveOdds(self, arr: List[int]) -> bool:\n        odd1 = False\n        odd2 = False\n        for num in arr:\n            if num % 2:\n                if odd2:\n                    return True\n                odd2 = odd1\n                odd1 = True\n            else:\n                odd1 = False\n                odd2 = False\n        \n        return False\n", "class Solution:\n    def threeConsecutiveOdds(self, arr: List[int]) -> bool:\n        odds = 0\n        for i in range(len(arr)):\n            if arr[i] % 2 != 0:\n                odds += 1\n            else:\n                odds = 0\n            if odds >= 3:\n                return True\n        return False\n            \n", "class Solution:\n    def threeConsecutiveOdds(self, arr: List[int]) -> bool:\n        for i in range(len(arr)-2):\n            if arr[i] % 2 == 1 and arr[i+1]%2 == 1 and arr[i+2]%2 == 1:\n                return True\n        return False"]