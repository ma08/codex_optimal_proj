["class Solution:\n     def isPerfectSquare(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         n = num**0.5\n         if n == int(n):\n             return True\n         else:\n             return False", "class Solution:\n     def isPerfectSquare(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         yy = math.sqrt(num)\n         ans_str = str(yy)\n         ans = ans_str.split(\".\")\n         if (int(ans[1]) == 0 ):\n             return True\n         else:\n             return False\n", "class Solution:\n     def isPerfectSquare(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         start = 1\n         while num > 0:\n             num = num - start\n             start = start + 2\n         \n         if num == 0:\n             return True\n         \n         return False", "class Solution:\n     def isPerfectSquare(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n \n         num = num ** 0.5\n         if num == int(num):\n             return True\n         return False", "class Solution:\n     def isPerfectSquare(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         i = 0\n         while i*i <=num:\n             if i*i == num:\n                 return True\n             i +=1\n         \n         return False\n", "class Solution:\n     def isPerfectSquare(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         x = 0\n         for i in range(num):\n             x += 1 + 2*i\n             if x == num: return True\n             if x > num: return False\n         return False", "class Solution:\n     def isPerfectSquare(self, num):\n         sign = True\n         i = 1\n         while(sign):\n             if(num == i * i):\n                 return True\n             elif(num > i * i):\n                 i = i + 1\n             else:\n                 return False\n", "class Solution:\n     def isPerfectSquare(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         if num < 1:\n             return False\n         n = 100\n         n = int(n/2 + num/2/n)\n         while n**2 > num:\n             n = int(n/2 + num/2/n)\n         if n**2 == num:\n             return True\n         else:\n             return False", "class Solution:\n     def isPerfectSquare(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         p, r = 1, (num>>1) + 1\n         while p <= r:\n             mid = (p + r) >> 1\n             sq = mid*mid\n             if sq == num:\n                 return True\n             if sq >= num:\n                 r = mid - 1\n             if sq <= num:\n                 p = mid + 1\n         return False", "class Solution:\n     def isPerfectSquare(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         \n         if num < 1 :\n             return False\n         root = 1\n         while (root*root < num):\n             root = root+1\n         if root*root == num:\n             return True\n         return False\n", "class Solution:\n     def isPerfectSquare(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         middle = num//2+1\n         for i in range(0, middle+1):\n             if i*i == num:\n                 return True\n             if i*i > num:\n                 return False\n", "class Solution:\n     def isPerfectSquare(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         for i in range(1, num + 1):\n             if i * i == num:\n                 return True\n             elif i * i > num:\n                 return False", "class Solution:\n     def isPerfectSquare(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         low = 1\n         high = num\n         while low <= high:\n             mid = (low + high) // 2\n             if mid **2 == num:\n                 return True\n             elif mid **2 < num:\n                 low = int(mid) + 1\n             elif mid **2 > num:\n                 high = int(mid) - 1\n         return False\n", "class Solution:\n     def isPerfectSquare(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         if num < 1:\n             return False\n         \n         i = 1\n         while True:\n             pow2 = i**2\n             i += 1\n             if pow2 > num:\n                 return False\n             if pow2 == num:\n                 return True\n \n", "class Solution:\n     def isPerfectSquare(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         \n         i = 1        \n         while(True):\n             if num / i < i:\n                 # print num / i\n                 return False\n             else:\n                 if num / i == i:\n                     return True\n                 else:\n                     i += 1\n", "class Solution:\n     def isPerfectSquare(self, num):\n         \"\"\"\n         :type num: int\n         :rtype: bool\n         \"\"\"\n         a = num\n         while a * a > num:\n             a = (a + num//a) // 2\n         return a * a == num"]