["class Cat(Animal):\n    def __init__(self, name):\n        self.name = name\n    def speak(self):\n        return '{} meows.'.format(self.name)", "class Cat(Animal):\n    def __init__(self, name, *args, **kwargs):\n        assert isinstance(name, str)\n        self.name = name\n    \n    def speak(self):\n        return \" \".join((self.name, 'meows.'))", "class Cat(Animal):\n    def __init__(self, name):\n        self.name = name\n    def speak(self):\n        return f\"{self.name} meows.\"", "class Cat(Animal):\n    def __init__(self, name):\n        Animal.__init__(self, name)\n    \n    def speak(self):\n        return f\"{self.name} meows.\"", "class Cat(Animal):\n    def __init__(self, name):\n        self.name = name\n        \n    def speak(self):\n        return \"%s meows.\" % self.name", "class Cat(Animal):\n    def __init__(self, name):\n        self.name = name\n    def speak(self):\n        return self.name + \" meows.\"", "class Cat(Animal):\n    \"\"\" Animal: Cat \"\"\"\n\n    def __init__(self, name: str):\n        \"\"\" Prepare data. \"\"\"\n        self.name = name\n\n    def speak(self) -> str:\n        \"\"\" Say my name! \"\"\"\n        return f\"{self.name} meows.\"", "class Cat(Animal):\n    def __init__(self, name):\n        super().__init__(self)\n        self.name = name\n    def speak(self):\n        return self.name + \" meows.\"", "class Cat(Animal):\n    def __init__(self, saying):\n        self.saying = saying\n    \n    def speak(self):\n        return self.saying + ' meows.'", "class Cat(object):\n    def __init__(self,animal):\n          self.animal=animal\n    def speak(self):\n        return '{} meows.'.format(self.animal)\n", "class Cat(Animal):\n    def __init__(self,name):\n        self.name = name\n        #self.speak = f\"{name} meows\"\n        \n    def speak(self):\n        return f\"{self.name} meows.\"\n", "class Cat(Animal):\n    \n    def __init__(self, name):\n        self.cat_name = name\n    \n    def speak(self):\n        return f\"{self.cat_name} meows.\"", "class Cat(Animal):\n    \"\"\"\n    Extend Animal class and replace speak method\n    \"\"\"\n    def __init__(self,name):\n        self.name = name\n        \n    def speak(self):\n        return self.name + ' meows.'", "class Animal:\n    def __init__(self, name, voice=\"meows\"):\n        if name == 'noise':\n            self.voice = 'makes a noise'\n        else:\n            self.voice = voice\n        self.name = name\n    def speak(self):\n        return f\"{self.name} {self.voice}.\"\n\nclass Cat(Animal):\n    pass\n", "class Cat(Animal):\n    def __init__(self, name):\n        setattr(self,\"speak\",lambda: \"{} meows.\".format(name))", "class Cat(Animal):\n    def __init__ (self, animal):\n        self.animal = animal\n        self.word = \"meows.\"\n    def speak(self):\n        return self.animal + \" \" + self.word", "class Cat(Animal):\n    #your code hereaa\n    def __init__(self, name):\n        self.name = name\n    def speak(self):\n        return f'{self.name} meows.'", "class Cat:\n    \n    def __init__(self, name):\n        super().__init__()\n        self.name = name\n        \n    def speak(self):\n        return f\"{self.name} meows.\"", "class Cat(Animal):\n    def __init__(self, name):\n        self.cat_name = name\n    \n    def speak(self):\n        return self.cat_name + ' ' + 'meows.'", "class Animal:\n    def __init__(self, name):\n        self.name = name\n    \n    def speak(self):\n        if self.name == \"noise\":\n            return self.name+ \" makes a noise.\"\n        return self.name+\" meows.\"\n    \nclass Cat(Animal):\n    pass\n", "class Cat(Animal):\n    def __init__(self, name):\n        super().__init__(name)\n        \n    def speak(self):\n        return \"{} meows.\".format(self.name)", "class Animal:\n    def __init__(self, name):\n        self.name = name\n    def speak(self):\n        return self.name + ' makes a ' + self.name +'.'\n\nclass Cat(Animal):\n    def speak(self):\n        return self.name + ' meows.'", "class Cat(Animal):\n    def __init__ (self, name):\n        self.name = name\n    \n    def speak (self):\n        meows = 'meows.'\n        return (self.name + \" \" + meows)", "class Cat(Animal):\n    def __init__(self, name=\"\"):\n        self.name = name\n\n    def speak(self):\n        return f'{self.name} meows.'", "class Cat(Animal):\n    \n    def __init__(self, text):\n        self._text = text\n        \n    def speak(self):\n        return f'{self._text} meows.'", "class Cat(Animal):\n    def __init__(self,word):\n        self.word = word\n        return\n    def speak(self):\n        return self.word + \" meows.\"", "class Animal():\n    def __init__(self,name):\n        self.name=name\n    def speak(self):\n        return \"{0} makes a {0}.\".format(self.name)\nclass Cat(Animal):\n    def speak(self):\n        return \"{} meows.\".format(self.name)", "class Cat:\n    def __init__(self,name):\n        self.name = name\n        \n    def speak(self):\n        return self.name + \" meows.\"\n\ncat = Cat(\"Mr Whiskers\")\nprint(cat.speak())", "class Cat(Animal):\n    def __init__(self,Animal):\n        self.animal = Animal\n    def speak(self):\n        return f\"{self.animal} meows.\"", "class Cat(Animal):\n    \n    def __init__(self, name):\n        # Animal.__init__(self, name)\n        super().__init__(name)\n        \n    def speak(self):\n        return f'{self.name} meows.'", "class Cat:\n    def __init__(self,cat):\n        self.name = cat\n        self.call = self.name + ' meows.'\n    \n    def speak(self):\n        return self.call", "class Cat(Animal):\n    def __init__(self, name):\n        self.name = name  # \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0438\u043c\u044f\n    def speak(self):\n        return (self.name + ' meows.')", "class Cat(Animal):\n    def __init__(self,Animal):\n        self.Animal=Animal\n    def speak(self):\n        return f'{self.Animal} meows.'", "class Animal:\n    def  __init__(self,name):\n        self.name = name\n    \n    def speak(self):\n        return 'noise makes a noise.'\n    \nclass Cat(Animal):\n    \n    def speak(self):\n        return f'{self.name} meows.'", "class Cat(Animal):\n    def __init__(self, name):\n        super().__init__(name)\n        self.name = name\n    \n    def speak(self):\n        return f\"{self.name} meows.\"", "class Cat(Animal):\n    def __init__(self,name):\n        self.name=name\n    \n    def speak(self):\n        return self.name+\" meows.\"\n        \n\n\ncat1=Cat(\"Mr Pederce\")", "class Cat(Animal):\n    def __init__(self,name):\n        Animal.__init__(self, name)\n    def get_name(self):\n        return self.name\n    def speak(self):\n        return self.name + \" meows.\"", "class Cat(Animal):\n    def __init__(self, name):\n        Animal.__init__(self, name)\n        \n    def speak(self):\n        return \"{self.name} meows.\".format(self=self)\n    #your code her\n", "class Cat(Animal):\n    def __init__(self,name):\n        self.name=name\n    def speak(self):\n        self.info=(self.name)+\" meows.\"\n        return(self.info)", "class Cat:\n    def __init__(self, animal):\n        self.animal = animal\n        \n    def speak(self):\n        return f\"{self.animal} meows.\"", "class Cat:\n    def __init__(self, name):\n        self.name = name\n    def speak(self):\n        return f\"{self.name} meows.\"", "class Cat(Animal):\n    def __init__(self,words):\n        self.words=words\n    def speak(self):\n        return self.words+' meows.'\n        \n", "class Cat(Animal):\n\n    def __init__(self,name):\n        self.name = name\n    \n    def speak(self):\n        return str.format(\"{} meows.\",self.name)", "class Animal():\n    def __init__(self, name):\n        self.name = name\n        self.word = \"makes a noise\"\n\n    def get_name(self):\n        return self.name\n\n    def speak(self):\n        return f\"{self.name} {self.word}.\"\n\n\nclass Cat(Animal):\n    def __init__(self, name):\n        super().__init__(name)\n        self.word = \"meows\"\n\n\ncat = Cat(\"Whiskers\")\n\nprint(cat.speak())", "class Cat:\n      def __init__(self, name):\n          self.name = name\n      def speak(self):\n          speak = 'meows.'\n          return str(self.name +' '+speak)\n\n\n", "class Cat(Animal):\n    #your code here\n    def __init__(self, cat):\n        self.Animal = cat\n    \n    def speak(self):\n        return self.Animal + ' meows.'", "class Cat(Animal):\n    def __init__(self, name):\n        self.name = name\n    def speak(self):\n        return self.name + \" meows.\"\n    def __str__(self):\n        return \" {}\".format(self.speak)\n", "class Cat(Animal):\n    def __init__(self, name):\n        super().__init__(name)\n    \n    def speak(self):\n        return f'{self.name} meows.'", "class Cat(Animal):\n    def __init__(self, name):\n        self.name = str(name)\n    \n    def speak(self):\n        return self.name + ' meows.'", "class Animal:\n    def __init__(self, name):\n        self.name = name\n    def speak(self):\n        return 'noise makes a noise.'\n\n\nclass Cat(Animal):\n    def speak(self):\n        return self.name + ' meows.'\n", "class Cat(Animal):\n    #your code here\n    def __init__(self, name):\n        self._name = name\n    def speak(self):\n        return \"{} meows.\".format(self._name)", "class Cat(Animal):\n    def __init__(self, name):\n        super().__init__(name)\n    def speak(self):\n        return self.name + \" meows.\"\n", "\n\nclass Cat(Animal):\n    def __init__(self, name):\n        super().__init__(name)\n\n    \n    def speak(self):\n        return self.name+\" \"+ \"meows.\"\n", "class Cat(Animal):\n    def __init__(self, meows):\n        self.meows = meows\n        \n    def speak(self):\n        return f'{self.meows} meows.'", "class Cat:\n    def __init__(self,name):\n        #Animal.__init__()\n        self.name=name\n    def speak(self):\n        return self.name+' meows.'", "class Cat(Animal):\n    #your code here\n    def __init__(self, name):\n        Animal.__init__(self, name)\n        \n    def speak(self):\n        return self.name + ' meows.'\n    \nclass Animal:\n    def __init__(self, name):\n        self.name = name\n        \n    def speak(self):\n        return 'noise makes a noise.'", "\n\nclass Cat(Animal):\n    #your code here\n    #def __init__(self,name):\n        #self.name=name\n    def speak(self):\n        return self.name+' '+'meows.'", "class Cat:\n    def __init__(self, a):\n        self.a = a\n    def speak(self):\n        return self.a + ' meows.'", "class Cat(Animal):\n    #your code here\n    def __init__(self,name):\n        self.name = name\n    def speak(self):\n        Animal.speak(self)\n        return (self.name + \" meows.\")\n        \n    \n", "class Cat(): # Animal\n  def __init__(self, name):\n    self.name = str(name)       # T=cat([2, 4, 6]):    T.speak() -> '[2, 4, 6] meows.'\n  def speak(self):\n    return self.name + \" meows.\"", "class Animal(object):  \n\n    def __init__(self, name):\n    \n        self.name = name\n        \n    def speak(self):\n    \n        return 'noise makes a noise.'\n\n\nclass Cat(Animal):\n\n    def speak(self):\n    \n        return '{} meows.'.format(self.name)\n    \n", "class Cat(Animal):\n    s = \"\"\n    \n    def __init__(self, s):\n        self.s = s\n        \n    def speak(self):\n        return self.s + \" meows.\"", "class Cat(Animal):\n    def __init__(self, name):\n        self.name = name\n    \n    speak = lambda self: \"{} meows.\".format(self.name)", "class Cat(Animal):\n    def __init__(self,name):\n        self.name = name\n    def speak(self):\n        return self.name + \" meows.\"\n#Solved on 26th Nov, 2019 at 05:04 PM.\n", "class Cat(Animal):\n    def __init__(self,cat_n):\n        self.cat_n = cat_n\n    def speak(self):\n        return self.cat_n + ' meows.'", "class Cat(Animal):\n    def ___init__(self,s):\n        self.name = s\n    def speak(self):\n        return '{} meows.'.format(self.name)", "class Cat:\n    def __init__(self, animal):\n        self.animal = animal\n    \n    def speak(self):\n        return self.animal + ' meows.'\n", "class Cat(Animal):\n    def __init__(self, name=''):\n        self.name=name\n    \n    def speak(self):\n        return ('{} meows.'.format(self.name))", "class Cat(Animal):\n    def __init__(self, Animal=\"\"):\n        self.animal = Animal\n    \n    def speak(self):\n        return self.animal + \" meows.\"", "class Cat(Animal):\n    \n    def __init__(self,Animal):\n        self.Animal = Animal\n    \n    def speak(self):\n        return \"{} meows.\".format(self.Animal)", "class Cat(Animal):\n    def __init__(self, animal):\n        self.name = animal\n    \n    def speak(self):\n        return \"{0} meows.\".format(self.name)", "class Cat:\n    def __init__(self, name='Chonky'):\n        self.name = name\n        \n    def speak(self):\n        return '{} meows.'.format(self.name)"]