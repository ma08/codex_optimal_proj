["import re\ndef sum_from_string(string):\n    d = re.findall(\"\\d+\",string)\n    return sum(int(i) for i in d)", "import re\ndef sum_from_string(s):\n    return sum(map(int, re.findall(r'\\d+', s)))", "from re import findall\n\n\ndef sum_from_string(string):\n    return sum(int(a) for a in findall(r'\\d+', string))\n", "import re\n\ndef sum_from_string(str_):\n    return sum(map(int, re.findall(r'\\d+', str_)))", "def sum_from_string(s):\n    return sum(map(int, \"\".join(c if c.isdigit() else \" \" for c in s).split()))", "sum_from_string=lambda s:sum([int(k) for k in __import__('re').findall(r'\\d+',s)])", "def sum_from_string(string):\n    str_nr, all_nr, have_nr = '', [], False\n    for item in string + '_':\n        if '0' <= item <= '9':\n            str_nr += item\n            have_nr = True\n        else:\n            if have_nr:\n                all_nr.append(int(str_nr))\n                have_nr , str_nr = False, ''\n    return sum(all_nr)", "search = __import__(\"re\").compile(r\"\\d+\").findall\n\ndef sum_from_string(string):\n    return sum(map(int, search(string)))", "from itertools import groupby\n\ndef sum_from_string(string):\n  return sum(int(''.join(gp)) for b, gp in groupby(string, key = str.isdigit) if b)", "import re\n\ndef sum_from_string(string):\n    result = 0\n    res = re.findall(r'\\d+', string)\n    for x in res:\n        result += int(x)\n    return result\n"]