["def solve(s):\n    s1 = s[::-1]\n    s2 = ''\n    for i in s1:\n        if i.isalpha():\n            s2 += i\n        elif i.isdigit():\n            s2 = s2*int(i)\n    return s2[::-1]", "import re\n\ndef solve(s):\n    ops, parts = [], ['']\n    for c in re.findall(r'\\d*\\(|\\)|[a-z]+', s):\n        if c == ')':\n            segment = parts.pop()\n            parts[-1] += ops.pop()*segment\n        elif not c[0].isalpha():\n            ops.append(int(c[:-1]) if c[0] != '(' else 1)\n            parts.append('')\n        else:\n            parts[-1] += c\n    return parts[0]", "import re\n\ndef solve(st):\n    matches = re.match(\"([a-z]*)(\\d*)\\((.*)\\)\", st)\n    if not matches:\n        return st\n    return matches.group(1) + (int(matches.group(2)) if matches.group(2) else 1) * solve(matches.group(3))", "import re\n\ndef solve(s):\n    return solve(re.sub(r'(\\d*)\\(([a-zA-Z]*)\\)', lambda m: m.group(2) * (1 if m.group(1) == \"\" else int(m.group(1))), s)) if re.search(r'(\\d*)\\(([a-zA-Z]*)\\)', s) != None else s", "def solve(s):\n    while '(' in s:\n        l, r = s.rsplit('(', 1)\n        ss, r = r.split(')', 1)\n        s = (l[:-1] + ss * int(l[-1]) + r ) if l[-1].isdigit() else l + ss + r\n    return s\n", "def solve(st):\n    tempstr = \"\"\n    for i in reversed(st):\n        if i.isalpha():\n            tempstr += i\n        if i.isdigit():\n            tempstr = tempstr * int(i)\n    return tempstr[::-1]", "def solve(st):\n    strx = ''\n    for i,x in enumerate(st):\n        if x.isdigit():\n            return strx + int(x)*solve(st[i+1:])\n        if x.isalpha():\n            strx += x\n    return strx", "def solve(a):\n    sta, exp = '', ''\n    for i in a[::-1]:\n        if i.isalnum() or i == '(':\n            if i == '(':\n                exp += sta\n                sta = ''\n            elif ord(i) in range(48, 58): exp = exp*int(i)\n            else: sta += i\n    return exp[::-1] if a[0].isnumeric() else a[0]+exp[::-1]", "def solve(st):\n    st = st.replace('(','').replace(')','')\n    i  = len(st)\n    while i:\n        i -=1\n        if st[i].isdigit():\n            dg = int(st[i])\n            ex = st[i+1:] * dg\n            st = st[:i] + ex\n            i += dg\n    return st\n        \n", "from re import sub\n\ndef solve(st):\n    while True:\n        st, tmp = sub(\"(\\d)*\\((\\w+)\\)\", lambda s: s.group(2)*int(s.group(1) or 1), st), st\n        if st == tmp: return st"]