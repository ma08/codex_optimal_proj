["def create_phone_number(n):\n    return \"({}{}{}) {}{}{}-{}{}{}{}\".format(*n)", "def create_phone_number(n):\n    n = ''.join(map(str,n))\n    return '(%s) %s-%s'%(n[:3], n[3:6], n[6:])", "def create_phone_number(n):\n  str1 =  ''.join(str(x) for x in n[0:3])\n  str2 =  ''.join(str(x) for x in n[3:6])\n  str3 =  ''.join(str(x) for x in n[6:10])\n\n\n  return '({}) {}-{}'.format(str1, str2, str3)", "def create_phone_number(n):\n    n = \"\".join([str(x) for x in n] )\n    return(\"(\" + str(n[0:3]) + \")\" + \" \" + str(n[3:6]) + \"-\" + str(n[6:]))", "def create_phone_number(n):\n    return \"(%i%i%i) %i%i%i-%i%i%i%i\" % tuple(n)\n", "def create_phone_number(n):\n    m = ''.join(map(str, n))\n    return f\"({m[:3]}) {m[3:6]}-{m[6:]}\"", "create_phone_number = lambda n: f\"({n[0]}{n[1]}{n[2]}) {n[3]}{n[4]}{n[5]}-{n[6]}{n[7]}{n[8]}{n[9]}\"", "def create_phone_number(n):\n  d='('\n  #for loop to go through the array\n  for i in range(len(n)):\n  #get the first part of the final string\n      if i<3:\n          d=d+str(n[i])\n          if i==2:\n              d=d+') '\n  #get the middle part of the final string\n      elif i>=3 and i<6:\n         \n          d=d+str(n[i])\n          if i==5:\n              d=d+'-'\n  #get the last 4 string members of the final string\n      elif i>=6 and i<10:\n   \n          d=d+str(n[i])\n  # return the entire string        \n  return d\n      \n", "def create_phone_number(n):\n    n = list(map(str, n))\n    return \"({}) {}-{}\".format(\"\".join(n[:3]), \"\".join(n[3:6]), \"\".join(n[6:10]))    ", "from functools import reduce\n\ndef create_phone_number(n):\n    return reduce( lambda a,c: a.replace('x',c, 1), list(map(str,n)), '(xxx) xxx-xxxx')"]