["def two_count(n):\n    res = 0\n    while not n & 1:\n        res += 1\n        n >>= 1\n    return res\n", "def two_count(n):\n  return bin(n)[::-1].index('1')", "def two_count(n):\n    return n.bit_length() - len(bin(n).rstrip('0')) + 2", "def two_count(n):\n  i = 0\n  while True:\n      n, r = divmod(n, 2)\n      if r:\n          break\n      i += 1\n  return i\n", "def two_count(n):\n    \n    # store the brinary digits of n as an array\n    binaryArr = list(bin(n))\n    \n    # reverse the array\n    binaryArr.reverse()\n    \n    # return the index of the first location of element '1'\n    return binaryArr.index('1')\n\n", "def two_count(n):\n    return bin(n)[::-1].index('1')\n", "def two_count(n):\n    if n%2 != 0:\n        return 0\n    else:\n        return 1 + two_count(n//2)\n", "def two_count(n):\n  n = bin(n)[2:]\n  \n  return len(n) - len(n.strip('0'))\n"]