["def greet(name, owner):\n    return \"Hello boss\" if name == owner else \"Hello guest\"", "def greet(name, owner):\n    return \"Hello {}\".format(\"boss\" if name == owner else \"guest\")", "def greet(name, owner):\n    return f\"Hello {'boss' if name == owner else 'guest'}\"", "def greet(name, owner):\n    if name == owner:\n        return \"Hello boss\"\n    else:\n        return \"Hello guest\"\n#Completed by Ammar on 25/8/2019 at 03:24AM.\n", "def greet(name, owner):\n    if (name == owner):\n        return 'Hello boss'\n    else:\n        return 'Hello guest'", "def greet(name, owner):\n    return 'Hello '+['guest','boss'][name==owner]", "greet=lambda n,o:'Hello '+'gbuoessst'[n==o::2]", "greet = lambda n,o: \"Hello {}\".format([\"guest\",\"boss\"][n==o])", "def greet(name, owner):\n    return 'Hello ' + ('guest' if name!=owner else 'boss')", "def greet(a, b):\n    return 'Hello boss' if a == b else 'Hello guest'", "def greet(name, owner):\n    if name == owner:\n        return 'Hello boss'\n    return 'Hello guest'", "def greet(name, owner):\n    return 'Hello %s' %('boss' if name==owner else 'guest')", "def greet(name: str, owner: str) -> str:\n    \"\"\" Get personalized greeting based on passed `name` and `owner`. \"\"\"\n    return f\"Hello {'boss' if name == owner else 'guest'}\"", "def greet(name, owner):\n    return 'Hello ' + ['boss', 'guest'][name != owner]", "def greet(name, owner):\n    return f\"Hello {['guest', 'boss'][name == owner]}\"", "def greet(*s):\n    return f\"Hello {['boss','guest'][len(set(s))==len(s)]}\"", "def greet(name, owner):\n    return (\"Hello boss\", \"Hello guest\")[name != owner]", "def greet(name, owner):\n    return 'Hello {}'.format({owner: 'boss'}.get(name, 'guest'))", "def greet(name, owner):\n    greet = 'guest'\n    if name == owner: \n        greet = 'boss'\n    return 'Hello ' + greet", "def greet(name, owner):\n    if f'{name}'==f'{owner}':\n        return 'Hello boss'\n    else:\n        return 'Hello guest'", "greet = lambda name, owner: \"Hello %s\"%([\"guest\", \"boss\"][name == owner])", "def greet(name, owner) -> str:\n    if name == owner:\n        return \"Hello boss\"\n    else:\n        return \"Hello guest\"", "def greet(name, owner):\n    n = 'boss' if name == owner else 'guest'\n    return 'Hello {}'.format(n)", "def greet(name, owner):\n    a = name\n    b = owner\n    if a == b :\n        return 'Hello boss'\n    else :\n        return 'Hello guest'", "def greet(name, owner):\n    return \" \".join([\"Hello\",\"boss\" if owner == name else \"guest\"])", "def greet(name,owner):\n    result = \"\"\n    if name == owner:\n        result = \"Hello boss\"\n    else:\n        result = \"Hello guest\"\n    return result ", "def greet(a, b):\n    return 'Hello {}'.format(['guest', 'boss'][a==b])", "def greet(name, owner):\n    string = \"\"\n    if name == owner:\n        string += \"boss\"\n    else:\n        string += \"guest\"\n    return \"Hello \" + string", "def greet(n, r):\n    return 'Hello '+('boss' if n==r else 'guest')", "def greet(name, owner):\n    \"\u041f\u0440\u0438\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u043c \u0411o\u0441\u0441\u0430\"\n    return 'Hello boss' if name == owner else 'Hello guest'", "def greet(name, owner):\n    if(name == owner):\n        x = 'boss'\n    else:\n        x = 'guest'\n    return \"Hello {}\".format(x);", "#using ternary operatior\ndef greet(name, owner):\n   return 'Hello boss'if name == owner else 'Hello guest'", "def greet(name, owner):\n    if name==owner:\n        print('Hello boss')\n        return 'Hello boss'\n    if name!=owner:\n        print('Hello guest')\n        return 'Hello guest'\n    # Add code here\n", "def greet(name, owner):\n    if name==owner:\n        return \"Hello boss\"\n    else:\n        return \"Hello guest\"\nx = greet('Greg', 'Daniel')\nprint(x)", "def greet(name, owner):\n    if name == owner:\n        s = 'Hello boss'\n    else:\n        s = 'Hello guest'\n    return s", "greet = lambda a, b: f\"Hello {'boss' if a == b else 'guest'}\"", "import unittest\n\nHELLO_BOSS_MSG = 'Hello boss'\nHELLO_GUEST_MSG = 'Hello guest'\n\n\ndef greet(name, owner):\n    return 'Hello boss' if name == owner else 'Hello guest'\n    \n    \nclass TestGreet(unittest.TestCase):\n    def test_should_return_hello_boss_msg_when_names_equals_owner(self):\n        name, owner = 'Daniel', 'Daniel'\n        actual = greet(name, owner)\n        self.assertEqual(actual, 'Hello boss')\n\n    def test_should_return_hello_guest_msg_when_names_equals_owner(self):\n        name, owner = 'Daniel', 'Guest'\n        actual = greet(name, owner)\n        self.assertEqual(actual, 'Hello guest')\n", "def greet(name, owner):\n    # Add code here\n    #name = input()\n    #owner = input()\n    if name == owner:\n        return \"Hello boss\"\n    else:\n        return 'Hello guest'", "def greet(name, owner):\n    # Add code here\n    if name==owner:\n        what = \"boss\"\n    else:\n        what = \"guest\"\n    return \"Hello {}\".format(what)", "def greet(name, owner):\n    return{\n        owner : 'Hello boss'\n    }.get(name, 'Hello guest')", "greet = lambda n, o: \"Hello {0}\".format('boss' if o == n else 'guest')", "def greet(n, m):\n    if n==m:\n        return 'Hello boss'\n    return 'Hello guest'", "def greet(name, owner):\n    if name == owner:\n        return f'Hello boss'\n    else:\n        return 'Hello guest'", "def greet(name,name2):\n    if str(name) == str(name2):\n        return(\"Hello boss\")\n    else:\n        return(\"Hello guest\")", "def greet(name, owner):\n    boss='Hello boss'\n    guest='Hello guest'\n    if name == 'Daniel' and owner == 'Daniel':\n        return boss\n    else:\n        return guest", "def greet(name, owner):\n    # Add code here\n    if name == owner:\n        return 'Hello boss'\n    else:\n        return 'Hello guest'\n        \n\ngreet('Vasya','Vasya') ", "def greet(name, owner):\n    f_name = name.lower()\n    f_owner = owner.lower()\n    if f_name ==  f_owner:\n        return 'Hello boss'\n    else:\n        return 'Hello guest'", "def greet(name, owner):\n    return f\"Hello {name == owner and 'boss' or 'guest'}\"", "greet = lambda name, owner: 'Hello guest' if name != owner else 'Hello boss'", "def greet(name, owner):\n    return 'Hello boss' if name == owner else 'Hello guest'\n    # self\n", "def greet(n, o):\n    return f\"Hello {'boss' if n == o else 'guest'}\"", "def greet(name, owner):\n    re = ['Hello boss','Hello guest']\n    return re[0] if name == owner else re[1]", "def greet(name, owner):\n    # Add code here\n    r = 'Hello guest'\n    if name == owner:\n        r = 'Hello boss'\n    return r\n", "def greet(n, o):\n    return 'Hello ' + ['guest','boss'][n == o]", "def greet(name, owner):\n    x = 'boss' if name == owner else 'guest'\n    return f'Hello {x}'", "def greet(name, owner):\n    print(name)\n    print(owner)\n    l = [\"Daniel\", \"Joe\"]\n    return \"Hello boss\" if name in l  else \"Hello guest\"", "def greet(name, owner):\n    if name != owner:\n        return 'Hello guest'\n    elif owner == name:\n        return 'Hello boss'\n", "def greet(name, owner):\n    # Add code here\n    name.lower()\n    owner.lower()\n    if name==owner:\n        return ('Hello boss')\n    else:\n        return ('Hello guest')", "def greet(n, m):\n    return 'Hello boss' if n == m else 'Hello guest'", "def greet(name, owner):\n    greeting = \"boss\" if name == owner else \"guest\"\n    return 'Hello {greeting}'.format(greeting=greeting)", "def greet(name, owner):\n    # Add code here\n    if name == owner:\n        return('Hello boss')\n    else:\n        return('Hello guest')\n        \ngreet('Daniel', 'Greg')", "def greet(name, owner):\n    if name == owner:\n        result = \"boss\"\n    else:\n        result = \"guest\"\n    return \"Hello \" + result\n    # Add code here\n", "def greet(name, owner):\n    # Add code here\n    name=name.lower()\n    owner=owner.lower()\n    if name==owner:\n        return 'Hello boss'\n    else:\n        return 'Hello guest'", "def greet(name, owner):\n  greetings = [\"Hello boss\", \"Hello guest\"]\n\n  return greetings[0] if name == owner else greetings[1]\n", "def greet(name: str, owner: str) -> str:\n    return 'Hello boss' if name == owner else 'Hello guest'", "def greet(name, owner):\n    if name == owner:\n        return \"Hello boss\"\n    else:\n        name != owner\n        return \"Hello guest\"", "def greet(name, owner):\n    if name == owner:\n        return 'Hello boss'\n    else:\n        return 'Hello guest'\n#print greet('Greg', 'Daniel')\n", "def greet(name, owner):\n    if name == owner:\n        greeting = \"boss\"\n    else:\n        greeting = \"guest\"\n    return \"Hello {0}\".format(greeting)", "def greet(name, owner):\n  if name == owner:\n    return 'Hello boss'\n  else:\n    return 'Hello guest'\n      \ngreet('Greg', 'Daniel')", "def greet(name, owner):\n    if name == owner:\n        return 'Hello' + ' ' + 'boss'\n    else:\n        return 'Hello' + ' ' + 'guest'", "def greet(name, owner):\n    return 'Hello ' + 'boss'*(name==owner) + 'guest'*(name!=owner)", "def greet(name, owner):\n    if owner == name:\n        return 'Hello boss'\n    return 'Hello guest'", "def greet(name, owner):\n    if name == owner:\n        answer = 'Hello boss'\n    else:\n        answer = 'Hello guest'\n    return answer\n", "def greet(name, owner):\n    return 'Hello {0}'.format('guest' if name != owner else 'boss')", "def greet(name, owner):\n    if name == owner:\n        text=\"Hello boss\"\n    else:\n        text=\"Hello guest\"\n    return text", "def greet(name, owner):\n    # Add code here\n    x=name\n    y=owner\n    if x==y:\n        return 'Hello boss'\n    else: \n        return 'Hello guest'\n  \n", "def greet(name, owner):\n    if name == owner:\n        res = 'Hello boss'\n    else:\n        res = 'Hello guest'\n    return res", "def greet(name, owner):\n    if name == owner:\n        return \"Hello boss\"\n    elif name != owner:\n        return \"Hello guest\"\n    else:\n        return 0", "def greet(name, owner):\n    if name == owner:\n        n = 'Hello boss'\n    else:\n        n = 'Hello guest'\n    return n", "def greet(name, owner):\n    return (f'{\"Hello boss\"}' if name==owner else f'{\"Hello guest\"}')", "def greet(name, owner):\n    if name == owner:\n        return 'Hello boss'\n    else:\n        return 'Hello guest'\n    return greet + \" , Hello guest\"\n    \n    \n# (f'greet, {name     \n", "def greet(name, owner):\n    person = 'boss' if name == owner else 'guest'\n    return 'Hello ' + person", "def greet(name, owner):\n    answer = 'Hello guest'\n    if name == owner:\n        answer = 'Hello boss'\n    return answer", "def greet(name, owner):\n    if name == owner:\n        return('Hello boss')\n    if name != owner:\n        return('Hello guest')\n    else:\n        return None\n    \ngreet('Bob','Bob')", "def greet(name, owner):\n    #print(name, owner)\n    if name == owner:\n        return(\"Hello boss\")\n    else:\n        return(\"Hello guest\")", "def greet(name, owner):\n    if name==owner:\n       return \"Hello boss\"\n       \n    else:\n       return \"Hello guest\"\n    \n    \n    #if name=!owner\n    #return('Hello guest')\na='Daniel'\nb='Daniel'\n\nprint(greet(a,b))", "def greet(name, owner):\n    a = 'boss' if name == owner else 'guest'\n    return 'Hello {}'.format(a)", "def greet(name, owner):\n    statement = 'Hello '\n    if name == owner:\n        statement += 'boss'\n    else:\n        statement += 'guest'\n    return statement", "def greet(name, owner):\n    name = \"boss\" if name == owner else \"guest\"\n    return \"Hello \" + name", "def greet(n, o):\n    if n == o:\n        return \"Hello boss\"\n    return \"Hello guest\"\n\n", "def greet(name, owner):\n    # xxx if a else xxx\n    return 'Hello boss'if name == owner else 'Hello guest'", "def greet(name, owner):\n    if name == owner:\n        return \"Hello boss\"\n    else:\n        return \"Hello guest\"\n    \nprint(greet(\"paschoal\",\"paschoal\"))\nprint(greet(\"paschoal\",\"morelli\"))"]