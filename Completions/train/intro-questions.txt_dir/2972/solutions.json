["def multiple_split(string, delimiters=[]):\n    for d in delimiters:\n        string = string.replace(d, '###')\n    return [s for s in string.split('###') if s]", "def multiple_split(s, d=[]):\n    for i in d:\n        s = s.replace(i, '___')\n    return [x for x in s.split('___') if x]", "def multiple_split(s, delim=[]):\n    if not s and not delim:\n        return []\n    if not delim:\n        return [s]\n    for i in delim:\n        s = s.replace(i, ' ')\n    return s.split()\n", "def multiple_split(string, delimiters=[]):\n    print(string, delimiters)\n    if not string:  return []  # trivial case\n    if not delimiters:  return [string]  # trivial case\n    for d in delimiters[1:]:\n        string = string.replace(d, delimiters[0])\n    tokens = string.split(delimiters[0])\n    return [t for t in tokens if t]", "def multiple_split(string, delimiters=[]):\n    if delimiters==[]:\n        return [string] if string else []\n        \n\n    for deli in delimiters:\n\n        string = ' '.join(string.split(deli))\n    string=string.split(' ') \n    return list(filter(None,string))", "def multiple_split(s, delimiters=[]):\n    if s == \"\": return []\n    elif delimiters == []:  return [s]\n    \n    return [ w for w in s.translate(\"\".maketrans(\"\".join(delimiters), delimiters[0]*len(delimiters)) ).split(delimiters[0]) if w != \"\"]"]