["def cockroach_speed(s):\n    return s // 0.036", "def cockroach_speed(s):\n    cm_per_km = 100000\n    sec_per_hour = 3600\n    return int(s * cm_per_km / sec_per_hour)", "def cockroach_speed(s):\n    cm_per_km = 100000\n    sec_per_hour = 3600\n    return s * cm_per_km // sec_per_hour\n", "def cockroach_speed(s):\n    return (s * 100000) // (60 * 60) ", "def cockroach_speed(s):\n    return int(s * 27.7778)\n    # Good Luck!\n", "ONE_KM_IN_METERS = 1000\nONE_METER_IN_CM = 100\nONE_HOUR_IN_MINUTES = 60\nONE_MINUTE_IN_SECONDS = 60\n\ndef cockroach_speed(s):\n    cm = ONE_KM_IN_METERS * ONE_METER_IN_CM\n    sec = ONE_HOUR_IN_MINUTES * ONE_MINUTE_IN_SECONDS\n    return int((s * cm) / sec)\n", "import math\ndef cockroach_speed(s):\n    # Good Luck!\n    cm = s*1000*100 / 3600\n    return math.floor(cm)", "import math\ndef cockroach_speed(s):\n    return math.floor(s*100000/3600)", "import math\ndef cockroach_speed(s):\n    return math.floor(s * 27.778)", "cockroach_speed = lambda s: int(27.7778*s)", "def cockroach_speed(s):\n    return int(s * (30/1.08))", "def cockroach_speed(s):\n  return int(27.78 * s)", "import math\ndef cockroach_speed(s):\n    return math.floor(((s*10000)/3600)*10)", "def cockroach_speed(s):\n    '''\n    (number) -> int\n    s is the number of kilometers that the cockroach travels per hour. \n    Return the equivalent integer(rounded down) of centimeters per second.\n    '''\n    #convert kilometer(per hour) to centimeters(per hour)\n    #convert centimeters(per hour) to centimeters(per second)\n    #convert the final result as an integer.\n    return int((s * 100000) // 3600)\n    \n", "def cockroach_speed(kph):\n    # 1000 m in km\n    mph = kph * 1000\n    # 100 cm in m\n    cph = mph * 100\n    # 60 min in hour\n    cpm = cph / 60\n    # 60 sec in min\n    cps = cpm / 60\n    return int(cps)\n\n# I'm just tired of oneliners =)\n", "def cockroach_speed(s):\n    '''\n    (int) -> int\n    \n    preconditions: input is real number >= 0\n    \n    takes speed in km per hour as input and returns it in cm per second        \n    '''\n    return int(s * 1000/36)", "from math import floor\n\ndef cockroach_speed(s):\n    return floor(s * 250 / 9)", "import math\n\ndef cockroach_speed(s):\n    return math.floor(s * 1000 / 36)", "import math\ndef cockroach_speed(s):\n    return (math.floor(s*27.7778))", "def cockroach_speed(s):\n    return s * 100000 // 3600", "def cockroach_speed(s):\n    return int(((s*1000)*100/60)/60)", "def cockroach_speed(s):\n    return int(s / 0.036)", "def cockroach_speed(s):\n    return round(s // 0.036)", "from math import floor\n\ndef cockroach_speed(speed_km_per_h: float) -> int:\n    \"\"\" Get a speed of the cockroach in cm/s based on its speed in km/h. \"\"\"\n    return floor(speed_km_per_h * (100000/3600))", "def cockroach_speed(s):\n    return s * 250 // 9", "cockroach_speed = lambda x: x/0.036//1", "cockroach_speed = lambda s: s * 27.778 // 1", "cockroach_speed=.036 .__rfloordiv__", "def cockroach_speed(s):\n    return 10 ** 5 * s // 60 ** 2", "cockroach_speed = lambda s: 10 ** 3 * s // 36", "import math\ndef cockroach_speed(s):\n    return math.floor(s * (30/1.08))", "def cockroach_speed(s):\n    return s * 100_000 // 3600", "def cockroach_speed(speed):\n    ratio = 27.7778\n    return speed * ratio // 1", "def cockroach_speed(s):\n    return s*5//0.18", "def cockroach_speed(s):\n    return s*1000/6//6", "cockroach_speed = lambda s: __import__('math').floor(s*1000*100/60/60)", "cockroach_speed=lambda x:__import__('math').floor(x*(30/1.08))", "#cockroach_speed=lambda s:int(s*27.77777777777778)\ncockroach_speed = lambda s:int(27.77777777777778.__mul__(s))", "def cockroach_speed(km_per_h):\n    return(km_per_h * (1000 * 100) // (60 * 60))", "def cockroach_speed(s):\n    return ((s * 100 * 1000) / 60) // 60", "def cockroach_speed(s):\n    import math as  m\n    a=s*(1000*100)/3600\n    return(int(m.floor(a)))", "import math\ndef cockroach_speed(s):\n    newSpd=s*27.778\n    newSpd = math.floor(newSpd)\n    return newSpd", "def cockroach_speed(s):\n    # Good Luck!\n    return int(s*27.77777777778)\n    print(cockroach_speed(s))", "def cockroach_speed(s):\n    temp_speed = 0.036 #1 sm/sec = 0.036 km/h\n    end_speed = s / temp_speed\n    return int(end_speed)", "import math\ndef cockroach_speed(s):\n    speed=math.floor(s*27.77777778)\n    return speed", "def cockroach_speed(s):\n    import math\n    a = 27.778 * s\n    a = math.floor(a)\n    return a", "import math \ndef cockroach_speed(s):\n    a = s * 1000 * 100 / 60 /60\n    b = math.floor(a)\n    return b ", "import math\n\n\ndef cockroach_speed(s):\n    s_cm = s * 27.778\n    return math.floor(s_cm)", "from math import floor\ndef cockroach_speed(s):\n    x = 27.7777777778 #1 km per hour converted to cm per second\n    return floor(s * x)", "import math\n\ndef cockroach_speed(s):\n    return math.floor(s*27.777777777777777)", "def cockroach_speed(s):\n    cm = s*27.7778\n    return round(cm-0.5)\n    # Good Luck!\n", "\nimport math \n\ndef cockroach_speed(s):\n    \n    speed = s * 27.777778\n    \n    return math.floor(speed)\n", "def cockroach_speed(s):\n    new_s = 27.7777778 * s\n    new_s = int(new_s)\n    return new_s\n    \n    \n    # Good Luck!\n", "def cockroach_speed(s):\n    # 1.08 km ... 3600\n     # x ......... 1 s\n     #   x=108000 cm\n       return int(s*(10**5) / 3600)", "def cockroach_speed(s):\n    # converts velocity from km/h to cm / s\n    return int(s / 0.036)", "def cockroach_speed(s):\n    return int(5*s*100/18)\n", "def cockroach_speed(s):\n    x = s / 60 / 60 *100000\n    return int(x)", "import math\n\ndef cockroach_speed(s):\n    \n    cm = s *27.77778\n\n    return math.floor(cm)\n", "def cockroach_speed(s):\n    return int(s*1000000/36000)", "def cockroach_speed(s):\n    import math\n    if s == 0:\n        return 0\n    else:\n        meter_per_sec = s / 3.6\n        cm_per_sec = meter_per_sec * 100\n        return math.floor(cm_per_sec)", "def cockroach_speed(s):\n    s_new = ((250 / 9) * s ) // 1 # Convertion into cm/s floored\n    return s_new", "import math\ndef cockroach_speed(s):\n    # Good Luck!\n    p = s * 10000 / 360 \n    p = math.floor(p)\n    return p", "from math import ceil\ndef cockroach_speed(s):\n    y = ceil(int(s*100000/3600))\n    return y\n", "import math\n\ndef cockroach_speed(s):\n    metri = s * 27.7777778\n    return math.floor(metri)\n", "def cockroach_speed(s):\n    cmps = 3600\n    kmph = 100000\n    cms = s * kmph / cmps \n    \n    return int(cms)\n", "import math\ndef cockroach_speed(s):\n    s = s*27.777778\n    return math.floor(s)", "def cockroach_speed(s):\n    # 1 km = 1,000m = 100,000 cm\n    # 1 hr = 3600 s\n    # 1 km/hr = 1000/36 cm/s\n    \n    return (1000*s/36)//1", "def cockroach_speed(s): return int(s*(27+7/9))", "import math\ndef cockroach_speed(s):\n    cms = (s / 3600) * 100000\n    return(math.floor(cms))", "from math import floor\n\ndef cockroach_speed(s):\n    # Good Luck!\n    conversion = 1/27.7778\n    cmPerSec = s/conversion\n    return floor(cmPerSec)", "def cockroach_speed(s):\n    x = (s*1000*100/(60*60))\n    x = int(x)\n    return x\n    # Good Luck!\n", "import math\ndef cockroach_speed(s):\n    a = math.floor(s*27.778)\n    return(a)", "import math\ndef cockroach_speed(s):\n    converted_speed = (s * 100000)/(3600)\n    return math.floor(converted_speed)\n", "import math\n\ndef cockroach_speed(s):\n    to_minutes =s/60\n    to_secs = to_minutes/60\n    return math.floor(to_secs*100000)\n", "def cockroach_speed(s):\n    cm_s=s*100000/3600\n    return int(cm_s)\n", "def cockroach_speed(s):\n    \n    result = (s*100000)/3600\n    return int (result)", "def cockroach_speed(s):\n    return int((s*1000.0)/3600*100)", "#import math \ndef cockroach_speed(s):\n    # Good Luck!\n    return (s//(0.036))", "def cockroach_speed(s):\n    \n    s = int(s*10000/360) \n    return s\n", "from math import floor\ndef cockroach_speed(s):\n    return floor((s/36)*1_000)", "def cockroach_speed(speed):\n    from math import floor\n    speed = floor((speed/3600)*100000)\n    return speed\n    \n    # Good Luck!\n", "import math\ndef cockroach_speed(s):\n    temp = (s * 1000 * 100) / 3600\n    result = math.floor(temp)\n    return result", "import math\n\ndef cockroach_speed(s):\n    seconds = 60*60\n    cm = 1000*100\n    new_speed = s * cm / seconds\n    return math.floor(new_speed)", "import math\ndef cockroach_speed(s):\n    value = s * 27.7778\n    return math.floor(value)", "def cockroach_speed(speed):\n    a = speed/0.036\n    return int(a)", "def cockroach_speed(s):\n    try:\n        return ((100000 / 3600) * s) // 1\n    except:\n        return 0", "from math import floor\n\ndef cockroach_speed(s):\n    speed_cm = floor(s*27.7777778)\n    return speed_cm", "from math import floor\ndef cockroach_speed(s):\n    speed = s * 100000\n    return floor(speed / 3600)", "cockroach_speed = lambda s: int(100000*s/3600)", "import math\ndef cockroach_speed(s):\n    val=0\n    val=math.floor(s*10**5/3600)\n    return(val)\n    # Good Luck!\n", "def cockroach_speed(s):\n    speed = float(s) / 360 * 10000\n    return int(speed)", "import math\ndef cockroach_speed(s):\n    speed = math.floor(s * 27.77777777778)\n    \n    return (speed)", "import math\ndef cockroach_speed(s):\n    result = math.floor(s * 1000 / 36)\n    return result\n", "def cockroach_speed(s):\n    # Good Luck!\n     result=int(s*(250/9))\n     return result", "cockroach_speed = lambda s: s * 100_000 // 3_600", "def cockroach_speed(s):\n    # Cockroaches just seem fast because time slows when they fly toward you...\n    return (int(s * 100000 / 3600))", "def cockroach_speed(s):\n    if s<=0:\n        return 0\n    else:\n        return int(s*(100000/3600))\n    # Good Luck!\n", "import math\ndef cockroach_speed(s):\n    \n    # Good Luck!\n    cm = 100000\n    sec = 3600\n    s = math.floor(s*(cm/sec))\n    return s               \n", "def cockroach_speed(s):\n    import math\n    conversion = (1000 * 100)/(60*60)\n    speed = math.floor(s*conversion)\n    return speed", "def cockroach_speed(s):\n    return int(s*27.777777777777777777777777)\n#pogchamp\n", "import math\ndef cockroach_speed(s):\n    \n    s = s * 100_000 / 3600\n    return math.floor(s)"]