["def tail_swap(strings):\n    head0, tail0 = strings[0].split(':')\n    head1, tail1 = strings[1].split(':')\n    return [head0 + ':' + tail1, head1 + ':' + tail0]", "def tail_swap(arr):\n    fmt = '{}:{}'.format\n    (head, tail), (head_2, tail_2) = (a.split(':') for a in arr)\n    return [fmt(head, tail_2), fmt(head_2, tail)]\n", "def tail_swap(strings):\n    (h1, t1), (h2, t2) = (s.split(':') for s in strings)\n    return [f\"{h1}:{t2}\", f\"{h2}:{t1}\"]", "def tail_swap(ss):\n  a = [s.split(':') for s in ss]\n  a[0][1], a[1][1] = a[1][1], a[0][1]\n  return [':'.join(p) for p in a]", "def tail_swap(lst):\n    (a,b),(c,d) = (s.split(':') for s in lst)\n    return list(map(':'.join, ((a,d),(c,b))))", "def tail_swap(s):\n    h1,t1 = s[0].split(':')\n    h2,t2 = s[1].split(':')\n    return ['{}:{}'.format(h1,t2), '{}:{}'.format(h2,t1)]", "def tail_swap(strings):\n    s = [x.split(':') for x in strings]\n    return [s[0][0] + ':' + s[1][1], s[1][0] + ':' + s[0][1]]", "def tail_swap(strings):\n    return '{0}:{3} {2}:{1}'.format(*[j for i in strings for j in i.split(':')]).split()", "def tail_swap(strings):\n    a, b = strings\n    a, b = a.split(':'), b.split(':')\n    return [f'{a[0]}:{b[1]}', f'{b[0]}:{a[1]}']", "def tail_swap(strings):\n    a,b = [ele.split(':') for ele in strings]\n    return [ f'{a[0]}:{b[1]}',f'{b[0]}:{a[1]}' ]"]