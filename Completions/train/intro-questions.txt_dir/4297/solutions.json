["def get_mean(arr,x,y):\n    if 1 < x <= len(arr) and 1 < y <= len(arr):\n       return (sum(arr[:x])/x+sum(arr[-y:])/y)/2\n    return -1", "from operator import truediv\n\n\ndef mean(arr):\n    return truediv(sum(arr), len(arr))\n\n\ndef get_mean(arr, x, y):\n    if min(x, y) < 2 or max(x, y) > len(arr):\n        return -1\n    return truediv(mean(arr[:x]) + mean(arr[-y:]), 2)\n\n\n# # Python 3\n# from statistics import mean\n# \n# \n# def get_mean(arr, x, y):\n#     if min(x, y) < 2 or max(x, y) > len(arr):\n#         return -1\n#     return (mean(arr[:x]) + mean(arr[-y:])) / 2\n", "def get_mean(arr, x, y):\n    l = len(arr)\n    if 1 < x <= l and 1 < y <= l:\n        mx = sum(arr[:x]) / x\n        my = sum(arr[-y:]) / y\n        return (mx + my) / 2\n    else:\n        return -1\n", "from statistics import mean\n\ndef get_mean(arr, x, y):\n    if all(1 < i < len(arr) + 1 for i in (x, y)):\n        return mean((mean(arr[:x]), mean(arr[-y:])))\n    return -1", "def get_mean(arr, x, y):\n    from numpy import mean\n    if 1 < x <= len(arr) and 1 < y <= len(arr):\n        return mean((mean(arr[:x]), mean(arr[-y:])))\n    else:\n        return -1\n", "def get_mean(arr,x,y):\n  if x not in range(2,len(arr)+1) or y not in range(2, len(arr)+1): return -1\n  return (sum(arr[:x])/x + sum(arr[-y:])/y) /2", "get_mean=lambda a,x,y:(1<x<=len(a)>=y>1)-1or(sum(a[:x])/x+sum(a[-y:])/y)/2", "def get_mean(arr,x,y):\n    return -1 if min(x,y) < 2 or max(x,y) > len(arr) else (sum(arr[:x])/x + sum(arr[-y:])/y)/2", "get_mean=lambda arr,x,y: -1 if x<2 or y<2 or x>len(arr) or y>len(arr) else (sum(arr[:x])/float(x)+sum(arr[-y:])/float(y))/2.0", "def get_mean(arr,x,y):\n    if x <= 1 or y <= 1:\n        return -1\n    elif x > len(arr) or y > len(arr):\n        return -1\n    else:\n        return 0.5 * (sum(arr[:x])/x + sum(arr[-y::])/y)\n    #your code here\n"]