["def lowercase_count(strng):\n    return sum(a.islower() for a in strng)\n", "import re\ndef lowercase_count(string):\n    return len(re.findall('[a-z]',string))", "def lowercase_count(str):\n    return sum(1 for c in str if c.islower())", "def lowercase_count(strng):\n    return len([ch for ch in strng if ch.islower()])\n", "def lowercase_count(s):\n    return sum(c.islower() for c in s)", "lowercase_count = lambda s: sum(e.islower() for e in s)", "def lowercase_count(s):\n    return sum(1 for c in s if c.islower())", "def lowercase_count(strng):\n    return sum(1 for i in strng if i.islower())", "import re\ndef lowercase_count(st):\n    return len(re.sub(r'[^a-z]*','',st))", "import re\ndef lowercase_count(text):\n    return len(re.findall(r'[a-z]', text))", "import re\ndef lowercase_count(str):\n    return len(re.findall('[a-z]', str))", "import re\nlowercase_count = lambda s: len(re.findall(r\"[a-z]\", s))", "import re\ndef lowercase_count(str):\n  return len(re.sub('[^a-z]', '', str))", "def lowercase_count(s):\n    return len(list(filter(lambda x: x in map(chr, range(97, 123)), s)))", "import re\ndef lowercase_count(strng):\n    regex = re.compile(r'[a-z]')\n    match = regex.findall(strng)\n    if match:\n        return len(match)\n    return 0", "def  lowercase_count(strg):\n    c=0\n    case = \"abcdefghijklmnopqrstuvwxyz\"\n    for x in strg:\n        if x in case:\n            c = c +1\n    return c", "def lowercase_count(strng):\n    lowers = 'abcdefghijklmnopqrstuvwxyz'\n    count = 0\n    for c in strng:\n        if c in lowers: count += 1\n    return count", "def lowercase_count(string):\n    return sum(map(str.islower, string))", "variable = 'abc'\ndef lowercase_count(strng):\n      array = []\n      for x in strng:\n            index = ord(x[0])\n            if 97 <= index <= 122 and index > 91 :\n                  variableForArray = chr(index)\n                  array.append(variableForArray)\n\n            else :\n                  continue\n      return len(array)", "def lowercase_count(strng):\n    return len([i for i in strng if i.islower()])", "def lowercase_count(strng):\n    \n    lowerCastCount = 0\n\n    for i in strng:\n\n        if i.isdigit():\n            None\n        else:\n            if i.islower():\n                lowerCastCount += 1\n\n    return lowerCastCount", "from re import findall\n\ndef lowercase_count(string: str) -> int:\n    \"\"\" Get a counter for total number of lowercase letters in a string. \"\"\"\n    return len(findall(\"[a-z]\", string))", "def lowercase_count(strng):\n    import re\n    return len(re.findall(r'[a-z]', strng))", "def lowercase_count(strng):\n    return sum(map(str.islower, strng))", "lowercase_count=lambda s: len([x for x in s if x in \"abcdefghijklmnopqrstuvwxyz\"])", "def lowercase_count(strng):\n    import string\n    return len(''.join([i for i in strng if i in string.ascii_lowercase]))", "def lowercase_count(string):\n    c=0\n    for i in string:\n        if (i.islower()==True):\n            c+=1\n    return c", "def lowercase_count(strng):\n    l_1 = list(strng)\n    l_2 = list('qwertyuiopasdfghjklzxcvbnm')\n    l_3 = []\n    for elem in l_1:\n        if elem in l_2:\n            l_3.append(elem)\n    return(len(l_3))\n", "def lowercase_count(s):\n    return sum(1 for i in s if 'a' <= i <= 'z')", "def lowercase_count(s):\n    ALPHABET = 'abcdefghijklmnopqrstuvwxyz'\n    return sum(x in ALPHABET for x in s)", "def lowercase_count(lst):\n    \"\"\"\n    Count lowercase letters in a string.\n    \"\"\"\n    n = 0\n    for s in lst:\n        if s>='a' and s<='z':\n            n = n + 1\n    return n", "def lowercase_count(strng):\n    total=0\n    for i in list(strng):   \n        if i in list('qwertyuiopasdfghjklzxcvbnm'):\n            total=total+1\n    return total", "def lowercase_count(strng):\n    lc = 0\n    for letter in strng:\n        if 'z' >= letter >= 'a':\n            lc += 1\n    return lc", "def lowercase_count(strng):\n    li = list(strng)\n    counter = 0\n    for c in range(len(li)):\n        if 96 < ord(li[c]) < 123:\n            counter += 1\n    return counter", "def lowercase_count(strng):\n    ans = 0\n    for x in strng:\n        if x.islower() == True:\n            ans += 1 \n    return ans", "def lowercase_count(strng):\n    i = 0\n    for x in strng:\n        if \"a\" <= x <= \"z\":\n            i += 1\n    return i", "def lowercase_count(strng):\n    count = 0\n    for chr in strng:\n        if chr != chr.upper():\n            count += 1\n    return count", "def lowercase_count(strng):\n    somme=0\n    for minuscule in strng:\n        if(minuscule.islower()):\n            somme+=1\n    return somme", "def lowercase_count(string):\n    lower_cases = 'abcdefghijklmnopqrstuvwxyz'\n    \n    lower_case_counter = 0\n    index = 0\n    while index < len(string):\n        if string[index] in lower_cases:\n            lower_case_counter += 1\n        index += 1\n    \n    return lower_case_counter", "def lowercase_count(str):\n    count = 0;\n    alpha = \"a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z\"\n    trex = alpha.split(\",\")\n    for x in str:\n        if(x in trex):\n            count += 1;\n    return count;", "def lowercase_count(strng):\n    return sum(True for i in strng if i.islower())\n            \n    # Your code here\n", "def lowercase_count(strng):\n    # Your code here\n    import re\n    from re import finditer\n    \n    pattern = r\"[a-z]\"\n    \n    count = 0\n    \n    for it in finditer(pattern,strng):\n        count += 1\n    \n    return count", "def lowercase_count(str):\n    count = 0;\n    alpha = \"a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z\"\n    rex = alpha.split(\",\")\n    for x in str:\n        if(x in rex):\n            count += 1;\n    return count;", "def lowercase_count(strng: str) -> int:\n    \"\"\"Returns count of lowercase characters.\"\"\"\n    return sum(c.islower() for c in strng)", "def lowercase_count(strng):\n    lst = list(strng)\n    count = 0\n    for letter in lst:\n        if letter.islower():\n            count += 1\n    return count", "import re\n\ndef lowercase_count(strng):\n    pattern = re.compile(r'[a-z]{1}')\n    matches = pattern.findall(strng)\n    return len(matches) ", "def lowercase_count(strng):\n    count = 0\n    for letter in strng:\n        if letter.isalpha():\n            if ord(letter) <= ord('z') and ord(letter) >= ord('a'):\n                count += 1\n    return count\n", "def lowercase_count(string):\n    string = str(string)\n    a = 0\n    for i in string:\n        if i.islower():\n            a += 1\n    return a", "def lowercase_count(string):\n    res = 0\n    for i in string:\n        if ord(i) > 96 and ord(i) < 123:\n            res += 1\n    return res", "import re\n\ndef lowercase_count(strng):\n    lijst = re.findall('[a-z]', strng)\n    return len(lijst)", "import re\ndef lowercase_count(strng):\n    \n    regex = r'[a-z]'\n\n    return len(re.findall(regex, strng))", "import re\ndef lowercase_count(strng):\n    return len(''.join(re.findall(r'([a-z]+)',strng))) if re.search(r'([a-z]+)',strng) else 0", "def lowercase_count(strng):\n    return sum(1 for n in strng if n.islower())", "def lowercase_count(strng):\n    return sum([int(x.islower()) for x in strng])", "import string\ndef lowercase_count(strng):\n    return sum([x in string.ascii_lowercase for x in strng])", "def lowercase_count(strng):\n    num = 0\n    for chr in strng:\n        if chr.islower() == True:\n            num += 1\n\n    return num", "def lowercase_count(strng):\n    letters = str(strng)\n    lowercase = 0 \n    for i in letters: \n        if i.islower():\n            lowercase += 1\n            \n    return lowercase\n", "def lowercase_count(strng):\n    \n    nb = 0\n    \n    for ch in strng:\n        if ch.islower():\n            nb += 1\n    \n    return nb\n", "def lowercase_count(strng):\n    letters = 'abcdefghijklmnopqrstuvwxyz'\n    return len([i for i in strng if i in letters])", "def lowercase_count(strng):\n    lower = 0\n    for letter in strng:\n        if (letter >= 'a' and letter <='z'):\n           lower += 1\n    return lower", "def lowercase_count(strng):\n    return sum([1 if c.islower() else 0 for c in strng])", "def lowercase_count(s):\n    num = 0\n    \n    for i in s:\n        if i.islower():\n            num +=1\n    \n    return num", "def lowercase_count(strng):\n    return sum(1 for string in strng if string in \"abcdefghijklmnopqrstuvwxyz\")", "import string\n\ndef lowercase_count(string):\n    return len([x for x in string if x in 'abcdefghijklmnopqrstuvwxyz'])", "def lowercase_count(strng):\n    count = 0\n    for let in strng:\n        if let.isalpha() and let == let.lower():\n            count += 1\n    return count", "def lowercase_count(strng):\n    # Your code here\n    count = 0\n    s = [i for i in strng]\n    for x in s:\n        if x.islower() == True:\n            count += 1\n        else:\n            pass\n    return count\n        \n", "from re import sub\ndef lowercase_count(strng):\n    return len(sub('[^a-z]', '', strng))", "from regex import sub\ndef lowercase_count(strng):\n    return len(sub('[^a-z]', '', strng))", "def lowercase_count(string):\n    lowercase = [c for c in string if c.islower()]\n    \n    return len(lowercase)", "import string\ndef lowercase_count(s):\n    return sum([1 for i in s if i in string.ascii_lowercase])", "def lowercase_count(strng):\n    sum=0\n    for i in range(len(strng)):\n        if strng[i].islower()==True:\n            sum+=1\n    \n    return sum", "def lowercase_count(strng):\n    import re\n    result = \"\"\n    match = re.findall(\"[a-z]\", strng)\n    result = \"\".join(match)\n    return len(result)", "import string\n\ndef lowercase_count(s):\n    return sum(1 for x in s if (x in string.ascii_lowercase))", "import re\ndef lowercase_count(strng):\n    match = re.findall(\"[a-z]\", strng)\n    count = 0\n    for i in match:\n        count +=1\n    return count", "def lowercase_count(strng):\n    \n\n    dgu = []\n    rwp = []\n    pwr = list(str(strng))\n    pwr.sort()\n    for lower in pwr:\n        if lower.islower():\n            rwp.append(lower)\n    dgu = len(rwp)\n    return dgu\n", "lowercase_count = lambda s:len(list(filter(str.islower,s)))", "def lowercase_count(s):\n    return len([x for x in s if x in 'abcdefghijklmnopqrstuvwxyz'])", "def lowercase_count(strng):\n    a = 0\n    for x in strng:\n        if x.islower() == True:\n            a = a + 1\n    return a", "def lowercase_count(strng):\n    count =0\n    for i in strng:\n        if(i.islower()):\n            count+=1\n    return count\n\nlowercase_count('cdfABH')\n\n\n", "import re\ndef lowercase_count(strng):\n    # Your code here\n    ct = 0\n    for i in range(len(strng)):\n        if re.search(\"[a-z]\",strng[i]) != None:\n            ct+=1\n    return ct", "def lowercase_count(strng):\n    results=0\n    for letter in strng:\n        if (letter.islower()):\n            results=results+1\n    return results", "def lowercase_count(strng):\n    counter = 0\n    for el in strng:\n        if el in \"qwertyuiopasdfghjklzxcvbnm\":\n            counter += 1\n    return counter", "def lowercase_count(strng):\n    count = 0\n    for i in strng:\n        if i.lower() == i and i.isalpha():\n            count += 1\n    return count", "import re\ndef lowercase_count(strng):\n    chars = re.findall(\"[a-z]\", strng)\n    return len(chars)", "import re\ndef lowercase_count(strng):\n    lower = [c for c in strng if re.search(r'[a-z]', c)]\n    return len(lower)", "import string\n\ndef lowercase_count(strng):\n    count = 0\n    for str in strng:\n        if str in string.ascii_lowercase:\n            count += 1\n    return count", "def lowercase_count(strng):\n  lowercase = ''.join(c for c in strng if c.islower())\n\n  return(len(lowercase))", "def lowercase_count(strng):\n    c = 0\n    for i in range(len(strng)):\n        if strng[i] in ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y','z']:\n            c = c + 1\n    return c\n", "def lowercase_count(string):\n  accum = 0\n  abc = list('qwertyuioplkjhgfdsazxcvbnm')\n  for i in string:\n    if i in abc:\n      accum += 1\n  return accum", "def lowercase_count(strng):\n    letters = list(strng)\n    count = 0\n    for i in letters:\n        if ord(i) > 96 and ord(i) < 123:\n            count += 1   \n    return count", "def lowercase_count(strng):\n    count = 0\n    for x in strng:\n        if x.islower():\n            count += 1\n    else:\n        return count", "def lowercase_count(string):\n    sum = 0\n    for i in string:\n        if i.islower():\n            sum+=1\n    return sum", "def lowercase_count(strng):\n    count = 0\n    for char in strng:\n        if char.islower() is True:\n            count = count + 1\n        else:\n            continue\n    return count", "import re\ndef lowercase_count(strng):\n    r = re.compile(r'[a-z]')\n    return len(r.findall(strng))", "def lowercase_count(strng):\n    ctr = 0\n    for i in strng:\n        if i.islower():\n            ctr+=1\n    return ctr\n", "import re\ndef lowercase_count(strng):\n    matches = re.findall('[a-z]', strng)\n    \n    return len(matches)", "def lowercase_count(strng):\n    n = 0\n    for k in strng:\n        if k.islower():\n            n+=1\n    return  n\n", "def lowercase_count(strng):\n    count = 0\n    for el in strng:\n        count = count + (1 if el != el.upper() else 0)\n    return count", "def lowercase_count(strng):\n    return len([i for i in strng if i.lower() == i and i.isalpha()])"]