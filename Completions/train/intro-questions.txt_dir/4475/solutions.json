["def find(seq):\n  return (min(seq)+max(seq))*(len(seq)+1)/2-sum(seq)", "def find(a):\n    return (max(a) + min(a)) * (len(a) + 1) / 2 - sum(a)", "def find(seq):\n    a,b,c = max(seq), min(seq), len(seq)\n    z = list(range(b, a, (a-b)//c))\n    return list(set(z)-set(seq))[0]\n", "def find(nums):\n    # hmm, quite fast to use min and max\n    return (min(nums) + max(nums)) * (len(nums) + 1) / 2 - sum(nums)", "def find(seq): \n    if len(seq) <= 1:\n        return seq\n    seq.sort()\n    x = []\n    t = 0\n    for i in range(len(seq) - 1):\n        if i == 0:\n            t = seq[i + 1] - seq[i]\n            x.append(t)\n        else:\n            t = seq[i + 1] - seq[i]\n            if t != x[-1]:\n                x.append(t)\n                break\n            else:\n                x.append(t)\n    \n    return min(seq) + len(x) * x[0]", "def find(seq):\n  a, b, n = min(*seq), max(*seq), len(seq)\n  m = (b - a)//n\n  return m*abs(sum((x - a) // m for x in seq) - (n + 1)*(n)//2) + a", "find=lambda s:(min(s)+max(s))*-~len(s)/2-sum(s)", "def find(seq):\n  seq.sort()\n  pattern = abs(seq[0]-seq[1])\n  for i in range(len(seq)-1):\n    if seq[i]!=seq[i+1]-pattern:\n      return seq[i]+pattern\n  \n", "\ndef find(seq):\n    seq.sort()\n    first, last = seq[0], seq[-1]\n    d = min(seq[1] - first, seq[2] - seq[1])\n    n = (last - first) * 1.0/d + 1\n    s = n / 2 * (first + last)\n    s_ = sum(seq)\n    return s - s_\n", "def find(seq):\n    prev = 0\n    curr = 0\n    seq.sort()\n    \n    length = len(seq)\n    diff = (seq[length-1] - seq[0]) / length\n    \n    for i in range(1, len(seq)):\n        \n        \n        if (seq[i]) == ((seq[curr])+diff):\n            prev = curr\n            curr = i\n\n        \n        else:\n            return int(seq[curr]+diff)\n\n        \n"]