["def cumulative_triangle(n):\n    return n*(n*n+1)/2", "def cumulative_triangle(n):\n    return (n**3+n)/2", "def cumulative_triangle(n):\n    return n*(n*n+1)//2", "cumulative_triangle=lambda n:(n**3+n)/2", "def cumulative_triangle(n):\n    start = sum(range(n)) + 1\n    return sum(range(start, start + n))", "def cumulative_triangle(n):\n    f = lambda x: 0.5 * x * (x - 1) + 1\n    s = f(n)\n    r = []\n    while len(r) < n:\n        r.append(s)\n        s += 1\n    return sum(r)", "cumulative_triangle=lambda n:n*(n*n+1)/2", "def cumulative_triangle(n):\n    # find last number (x) of nth row\n    x = sum(range(n+1))\n    # add all numbers from (x-n, x)\n    return sum(range(x-n+1,x+1))", "def cumulative_triangle(n):\n    # sum of elements of the n-th row\n    return (n**2 + 1) * n // 2", "def cumulative_triangle(n):\n    N = n * (n+1) // 2\n    prev = n * (n-1) // 2\n    return N * (N+1) // 2 - prev * (prev+1) // 2"]