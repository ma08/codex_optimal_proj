["class Solution:\n     def reverseVowels(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: str\n         \"\"\"\n         vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n         char_list = list(s)\n         first, last = 0, len(char_list) - 1\n         while first < last:\n             while first < last and char_list[first] not in vowels:\n                 first += 1\n             while first < last and char_list[last] not in vowels:\n                 last -= 1\n             if first >= last:\n                 break\n             char_list[first], char_list[last] = char_list[last], char_list[first]\n             first += 1\n             last -=1\n         return \"\".join(char_list)", "class Solution:\n     def reverseVowels(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: str\n         \"\"\"\n         vow = set(list(\"aeiouAEIOU\"))\n         sList = list(s)\n         \n         sPrt = 0\n         ePrt = len(sList)-1\n         \n         while sPrt < ePrt:\n             \n             if sList[sPrt] in vow and sList[ePrt] in vow:\n                 sList[sPrt], sList[ePrt] = sList[ePrt], sList[sPrt]\n                 sPrt = sPrt +1\n                 ePrt = ePrt -1\n             elif sList[sPrt] in vow:\n                 ePrt = ePrt -1\n             elif sList[ePrt] in vow:\n                 sPrt = sPrt +1\n             else:\n                 sPrt = sPrt +1\n                 ePrt = ePrt -1\n                 \n         return \"\".join(sList)", "class Solution:\n     def reverseVowels(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: str\n         \"\"\"\n         if not s or len(s) == 1:\n             return s\n \n         vowels = set('aeiouAEIOU')\n         s = list(s)\n         left = 0\n         right = len(s) - 1\n         while left < right:\n             while left < right and s[left] not in vowels:\n                 left += 1\n             while left < right and s[right] not in vowels:\n                 right -= 1\n             s[left], s[right] = s[right], s[left]\n             left += 1\n             right -= 1\n         return ''.join(s)\n", "class Solution:\n     def reverseVowels(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: str\n         \"\"\"\n         \n         if len(s) <= 1:\n             return s\n         arr = list(s)\n         vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n         \n         left = 0\n         right = len(s) - 1\n         \n         while right > left:\n             \n             \n             while left < len(s) and s[left] not in vowels:\n                 left += 1\n             \n             while right > 0 and s[right] not in vowels:\n                 right -= 1\n             \n             if right <= left or right == 0 or left == len(s):\n                 break\n                 \n             arr[left], arr[right] = arr[right], arr[left]\n             right -= 1\n             left += 1\n             \n         return ''.join(arr)\n         \n             \n             \n             \n         \n         \n", "class Solution:\n     def reverseVowels(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: str\n         \"\"\"\n         vowel = ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n         \n         start, end = 0, len(s) - 1\n         lists = list(s)\n         while start < end:\n             if lists[start] in vowel:\n                 while lists[end] not in vowel:\n                     end -= 1\n                 if end < start:\n                     break\n                 temp = lists[start]\n                 lists[start] = lists[end]\n                 lists[end] = temp\n                 start += 1\n                 end -= 1\n             else:\n                 start += 1\n         return ''.join(lists)", "class Solution:\n     def reverseVowels(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: str\n         \"\"\"\n         yuanyin=['a','e','i','o','u','A','E','I','O','U']\n         s=list(s)\n         i=0\n         j=len(s)-1\n         while i<=j:\n             while s[i] not in yuanyin and i<j:\n                 i+=1\n             while s[j] not in yuanyin and i<j:\n                 j-=1\n             temp=s[i]\n             s[i]=s[j]\n             s[j]=temp\n             i+=1\n             j-=1\n         return ''.join(s)\n", "class Solution:\n     def reverseVowels(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: str\n         \"\"\"\n         if not s:\n             return s\n         vowels=['a','e','i','o','u','A','E','I','O','U']\n         left=0\n         right=len(s)-1\n         res=list(s)\n         while left<right:\n             while left<right and res[left] not in vowels:\n                 left+=1\n             while right>left and res[right] not in vowels:\n                 right-=1\n             res[left],res[right]=res[right],res[left]\n             left+=1\n             right-=1\n         return ''.join(res)\n             \n                 \n             \n         \n", "class Solution:\n     def reverseVowels(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: str\n         \"\"\"\n         vowels = 'aeiouAEIOU'\n         s = list(s)\n         l = len(s)\n         p1,p2 = 0,l-1\n         while p1<p2:\n             if s[p1] in vowels and s[p2] in vowels:\n                 s[p1],s[p2] = s[p2],s[p1]\n                 p1+=1\n                 p2-=1\n             elif s[p1] not in vowels:\n                 p1+=1\n             elif s[p2]  not in vowels:\n                 p2-=1\n         return ''.join(s)\n", "class Solution:\n     def reverseVowels(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: str\n         \"\"\"\n         if not s:\n             return s\n         vowels=['a','e','i','o','u','A','E','I','O','U']\n         left=0\n         right=len(s)-1\n         res=[s[0]]*len(s)\n         while left<right:\n             if s[left] in vowels and s[right] in vowels:\n                 res[left],res[right]=s[right],s[left]\n                 left+=1\n                 right-=1\n             else:\n                 if s[left] not in vowels:\n                     res[left]=s[left]\n                     left+=1\n                 if s[right] not in vowels:\n                     res[right]=s[right]\n                     right-=1\n         if left==right:\n             res[left]=s[left]\n         return ''.join(res)\n             \n                 \n             \n         \n"]