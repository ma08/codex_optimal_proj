["def luxhouse(houses):\n    return [max(0, max(houses[i:]) - h + 1) for i, h in enumerate(houses[:-1], 1)] + [0]", "from itertools import accumulate\n\ndef luxhouse(houses):\n    return [max(0, y-x+1) for x,y in zip(houses[::-1], accumulate([0] + houses[:0:-1], max))][::-1]", "def luxhouse(a):\n    li = []\n    for i, j in enumerate(a[:-1]):\n        right = max(a[i + 1:])\n        li.append(0 if j > right else right - j + 1 if right != j else 1)\n    return li+[0] ", "def luxhouse(houses):\n    def f():\n        m = 0\n        for fl in reversed(houses):\n            yield max(0, m - fl + 1)\n            m = max(m, fl)\n    return list(f())[::-1]", "def luxhouse(houses):\n    return [max(max(houses[i+1:])-j+1,0) for i,j in enumerate(houses[:-1])] +[0]", "def luxhouse(houses):\n    return [max(0, max(houses[h+1:])-houses[h]+1) for h in range(len(houses)-1)]+[0]", "def luxhouse(houses):\n    lux = 0\n    \"\"\" \\o/  https://www.youtube.com/watch?v=n0DscZs7SXo  \\o/   ;-D \"\"\"\n    \n    ans = [0] * len(houses)\n    for n in range(len(houses)-1, -1, -1):\n        if houses[n] > lux: lux = houses[n]\n        else:               ans[n] = lux - houses[n] + 1\n    return ans", "def luxhouse(houses):\n    return [(max(houses[i], max(houses[i+1:])+1)) - houses[i] for i in range(len(houses) - 1)] + [0]\n", "def luxhouse(houses):\n    maxh = [houses[i] for i in range(len(houses))]\n    maxh[-1] = houses[-1]\n    for i in range(len(houses)-2, -1, -1):\n        maxh[i] = max(maxh[i], maxh[i+1])\n    for i in range(len(houses)-1):\n        if maxh[i] == maxh[i+1]:\n            maxh[i] += 1\n    return [maxh[i]-houses[i] for i in range(len(houses))]", "def luxhouse(houses):\n    return [0 if not houses[i + 1:] else max(max(houses[i + 1:]) + 1 - houses[i], 0) for i in range(len(houses))]"]