["def integrate(coef, exp):\n    exp = exp + 1\n    coef = coef / exp if coef % exp else coef // exp\n    return f\"{coef}x^{exp}\"", "def integrate(coefficient, exponent):\n    return (str(coefficient // (exponent + 1)) + 'x^' + str(exponent + 1))  ", "def integrate(coefficient, exponent):\n    return f'{coefficient // (exponent + 1)}x^{exponent + 1}'", "def integrate(coefficient, exponent):\n    exponent += 1\n    return str(f\"{coefficient // exponent}x^{exponent}\")", "def integrate(coefficient, exponent):\n    exponent += 1\n    coefficient /= exponent\n    return '{}x^{}'.format(int(coefficient) if coefficient.is_integer() else coefficient, exponent)", "def integrate(c, e):\n    return f\"{c / (e+1)}x^{e+1}\".replace(\".0x\", \"x\")", "def integrate(coefficient, exponent):\n    return \"{c}x^{e}\".format(c=coefficient // (exponent + 1), e=exponent + 1)", "def integrate(coeff, index):\n    return '{}x^{}'.format(coeff/(index + 1), index + 1).replace('.0x', 'x')", "def integrate(coefficient, exponent):\n    return '{:g}x^{}'.format(coefficient/(exponent+1),exponent+1)", "def integrate(c, e):\n    e += 1\n    return f\"{c//e}x^{e}\"", "def integrate(coefficient, exponent):\n    # write your code here\n    x = exponent + 1\n    return str(int(coefficient / x)) + \"x^\" + str(x)", "def integrate(coefficient, exponent):\n    new_exponent = exponent + 1\n    new_coefficient = int(coefficient / new_exponent)\n    \n    return (str(new_coefficient) + \"x^\" + str(new_exponent))", "def integrate(coef, exp):\n    return \"{}x^{}\".format(int(coef/ (exp + 1)), exp + 1 )", "def integrate(coefficient, exponent):\n    return str(int(coefficient/(exponent+1)))+\"x^\"+str(exponent+1)", "def integrate(coefficient, exponent):\n    return str(coefficient/(exponent+1)).rstrip('0').rstrip('.') + \"x^\"+str(exponent+1)", "integrate=lambda c,e:\"{}x^{}\".format(c/(e+1),e+1).replace('.0x','x')", "def integrate(c, e):\n    coefficient = str(c/(e+1))\n    return   coefficient.rstrip('0').rstrip('.') + 'x^' + str(e + 1)", "def integrate(c, e):\n    return '{}x^{}'.format(int(c/(e+1)), e+1)", "def integrate(coefficient, exponent):\n    return f'{int(coefficient/(exponent+1))}x^{exponent+1}'", "def integrate(coefficient, exponent):\n    return '{}x^{}'.format(coefficient//(exponent+1), exponent+1)", "def integrate(coefficient: int, exponent: int) -> str:\n    \"\"\" Get the integral of the expression passed. \"\"\"\n    return f\"{int(coefficient / (exponent + 1))}x^{exponent + 1}\"", "integrate=lambda c,e:f\"{c//(e+1)}x^{e+1}\"", "def integrate(coefficient, exponent):\n    exponent += 1\n    coefficient /= exponent\n    coefficient = (int if coefficient.is_integer() else float)(coefficient)\n    return f'{coefficient}x^{exponent}'", "integrate = lambda a, b: ''.join(str(i) for i in [a//(b+1), 'x^', b+1])", "def integrate(coefficient, exponent):\n    return '{0:.0f}x^{1:.0f}'.format(coefficient / (exponent+1), exponent+1)", "def integrate(coefficient, exponent):\n    # write your code here\n    a = int(exponent + 1)\n    b = int(coefficient / a)\n    c = (str(b) + \"x^\" + str(a))\n    return c\n    \n", "def integrate(coef, exp):\n    return '{}x^{}'.format(int(coef/(exp+1)) if int(coef/(exp+1)) == coef/(exp+1) else coef/(exp+1), exp+1)", "def integrate(c, exp):\n    if c/(exp+1)%1 == 0:\n        return '{:g}x^{}'.format(c/(exp+1), exp+1)\n    else:\n        return '{}x^{}'.format(c/(exp+1), exp+1)", "def integrate(coefficient, exponent):\n    b = exponent + 1\n    a = coefficient // b\n    \n    return f\"{a}x^{b}\"\n    \n\n", "integrate = lambda c, e : f'{int(c/(e+1))}x^{e+1}'", "def integrate(coefficient, exponent):\n    inte = exponent + 1\n    first = int(coefficient / inte)\n    return f'{first}x^{inte}'", "def integrate(coefficient, exponent):\n    \n    c = 1+exponent\n    newco=int(coefficient/c)\n    return f\"{newco}x^{c}\"", "def integrate(coefficient, exponent):\n    a = coefficient / (exponent + 1)\n    a = int(a)\n    return f'{a}x^{exponent + 1}'", "def integrate(coefficient, exponent):\n    integred_exponent = exponent + 1\n    return f\"{int(coefficient/integred_exponent)}x^{integred_exponent}\"\n", "def integrate(coefficient, exponent):\n    return f'{str(coefficient//(exponent+1))}x^{str(exponent+1)}'", "def integrate(coefficient, exponent):\n    integral = coefficient // (exponent + 1)\n    return '{}x^{}'.format(integral, exponent + 1)", "def integrate(coefficient, exponent):\n    # write your code here\n    exponent += 1\n    a = int(coefficient / exponent)\n    return str(a)+'x^'+str(exponent)", "def integrate(coefficient: int, exponent: int) -> str:\n    \"\"\" Get the integral of the expression passed. \"\"\"\n    return f\"{coefficient / (exponent + 1):.0f}x^{exponent + 1}\"", "def integrate(coefficient: int, exponent: int) -> str:\n    return str(coefficient // (exponent + 1)) + \"x^\" + str(exponent + 1)", "def integrate(coefficient, exponent):\n    return \"{coef}x^{exp}\".format(coef=coefficient//(exponent+1),exp=exponent+1)", "integrate = lambda c, e: 'x^'.join([str(c//(e+1)), str(e+1)])", "def integrate(coefficient, exponent):\n    a = exponent + 1\n    b = round(coefficient / a)\n    return f\"{b}x^{a}\"", "def integrate(c, e):\n    return f'{int(c / (e+1))}x^{int(e + 1)}'\n", "# Create a function that finds the integral of the expression passed.\n\n# In order to find the integral all you need to do is add one to the exponent (the second argument), and divide the coefficient (the first argument) by that new number.\n\n# For example for 3x^2, the integral would be 1x^3: we added 1 to the exponent, and divided the coefficient by that new number).\n\n# Notes:\n\n# The output should be a string.\n# The coefficient and exponent is always a positive integer.\n\ndef integrate(coefficient, exponent):\n    number = str(int(coefficient/(exponent+1)))\n    power = str(exponent + 1)\n    return number + \"x\" + \"^\" + power \n", "def integrate(coefficient, exponent):\n    a = int(coefficient / (exponent + 1))\n    b = (exponent+1)\n    return  str(a) + \"x\" + \"^\" + str(b)", "def integrate(coefficient, exponent):\n    x = int(coefficient / (exponent + 1))\n    return str(x) + \"x^\" + str(exponent + 1)\n", "def integrate(coefficient, exponent):\n        exp=exponent+1\n        coef=int(coefficient/exp)\n        return f\"{coef}x^{exp}\"", "def integrate(c,e):\n    k=e+1\n    return \"{}x^{}\".format(c//k,k) ", "def integrate(coefficient, exponent):\n    new_ex = exponent+1\n    new_str = str(int(coefficient/new_ex)) + 'x^' + str(new_ex)\n    return ''.join(new_str)", "def integrate(coefficient, exponent):\n    NewExp = exponent + 1\n    NewCoe = int(coefficient / NewExp)\n    \n    integral = str(NewCoe) + \"x^\" + str(NewExp)\n    \n    return integral\n", "def integrate(coefficient, exponent):\n    i_co = coefficient / (exponent + 1)\n    i_ex = exponent + 1\n    \n    return str(int(i_co)) + 'x^' + str(int(i_ex))", "def integrate(coefficient, exponent):\n    e = exponent +1\n    f = round(coefficient * (1/e))\n    return str(f)+\"x^\" +str(e)", "def integrate(c, xp):\n    return str(int(c/(xp+1))) + \"x^\" + str(xp+1)", "def integrate(coefficient, exponent):\n    return \"{co}x^{exp}\".format(co = coefficient//(exponent+1), exp = exponent+1)", "def integrate(coefficient, exponent):\n    return f'{(int(coefficient / (1 + exponent)))}x^{(1 + exponent)}'", "integrate = lambda coefficient, exponent: f'{coefficient//(exponent+1)}x^{exponent+1}'", "def integrate(coefficient, exponent):\n    ex = exponent + 1\n    cof = int(coefficient / ex)\n    return str(cof) + \"x^\" + str(ex)", "def integrate(coefficient, exponent):\n    exp = exponent + 1\n    coef = coefficient // exp\n    return str(coef)+\"x^\"+str(exp)", "def integrate(coefficient, exponent):\n    coeff=int(coefficient/(exponent+1))\n    ans=str(coeff)+'x^'+str(exponent+1)\n    return ans", "def integrate(coe, ext):\n    return f'{coe // (ext + 1)}x^{ext + 1}'", "def integrate(coefficient, exponent):\n    integ_coeff = coefficient / (exponent + 1)\n    integ_expo = exponent + 1\n    \n    return str(int(integ_coeff)) + \"x^\" + str(exponent + 1)", "def integrate(co, ex):\n    return '{}x^{}'.format(round(co/(ex+1)), ex+1)", "def integrate(coefficient, exponent):\n    coefficient = int((coefficient/(exponent+1)))\n    exponent += 1\n    return (\"{0}x^{1}\").format(coefficient, exponent)", "def integrate(c, e):\n    return f\"{str(int(c / (e + 1)))}x^{e + 1}\" ", "def integrate(coefficient, exponent):\n    \n    \n    x = exponent + 1\n    y = round(coefficient/x)\n\n    return \"{}x^{}\".format(y,x)", "def integrate(coefficient, exponent):\n    return \"{0:0.0f}x^{1}\".format(coefficient/(exponent+1),exponent+1)", "def integrate(c, e):\n    e = e + 1\n    return str(c//e) + \"x^\" + str(e)", "def integrate(coefficient, exponent):\n    n = exponent+1\n    return f'{int(coefficient/(n))}x^{n}'", "def integrate(coefficient, exponent):\n    new_exponent = exponent + 1\n    new_coeff = coefficient / new_exponent\n    s = str(int(new_coeff)) + \"x^\" + str(new_exponent)\n    return s", "def integrate(coefficient, exponent):\n    # write your code here\n    aa = int(coefficient / (exponent + 1))\n    bb = exponent + 1\n    return (f\"{aa}x^{bb}\")", "def integrate(coefficient, exponent):\n    e = exponent +1\n    coef = coefficient/e\n    \n    return \"{}x^{}\".format(int(coef),e)", "def integrate(coefficient, exponent):\n    ex = exponent + 1\n    coe = coefficient / ex\n    return str(int(coe)) + \"x^\" + str(ex)\n", "def integrate(coefficient, exponent):\n    return f'{str(coefficient // (exponent + 1))}x^{(exponent + 1)}'\n", "def integrate(coefficient, exponent):\n    exponent = exponent + 1\n    coefficient = coefficient / exponent if coefficient % exponent else coefficient // exponent\n    return f'{coefficient}x^{exponent}'\n    \n\n", "def integrate(coefficient, exponent):\n    new_exp = exponent+1\n    new_coef = int(coefficient / new_exp)\n    return f\"{new_coef}x^{new_exp}\"", "integrate = lambda co,ex: f'{int(co/(ex+1))}x^{ex+1}'", "def integrate(coefficient, exponent):\n    return str(int(coefficient / (1 + exponent))) +\"x^\" + str(1 + exponent)", "def integrate(c, e):\n    integral = int(c / (e+1))\n    return f'{integral}x^{e+1}'", "def integrate(coefficient, exponent):\n    return '%ix^%i' % ((coefficient / (exponent + 1)), (exponent + 1))\n#     return 'x^'.join((str(coefficient // (exponent + 1)), str(exponent + 1)))\n", "def integrate(coefficient, exponent):\n    new_coefficient = str(coefficient//(exponent+1))\n    new_exponent = str(exponent + 1)\n    return (F\"{new_coefficient}x^{new_exponent}\")", "def integrate(coefficient, exponent):\n    exp=exponent+1\n    cof=int(coefficient/exp)\n    list=[str(cof),\"x^\",str(exp)]\n    return \"\".join(list)\n    \n    # write your code here\n", "def integrate(coefficient, exponent):\n    a=round(coefficient/(exponent+1))\n    b=exponent+1\n    return (\"{}x^{}\".format(a,b))", "def integrate(coef, ex):\n    return f'{int(coef/(ex+1))}x^{ex+1}'", "integrate = lambda coeff, exp: f'{coeff // (exp + 1)}x^{exp + 1}'", "def integrate(coefficient, exponent):\n    s = int(coefficient/(exponent+1))\n    d = exponent+1\n    return str(s)+'x'+'^'+str(d)\nw = integrate(12,5)\nprint(w)", "def integrate(c, e):\n    # write your code here\n    e = e+1\n    c = c/e\n    i =''\n    return i + str(int(c)) + 'x^' + str(int(e))\n", "def integrate(coefficient, exponent):\n    \n    result_1=((coefficient/(exponent+1)))\n    result_2=((exponent+1))\n    \n           \n    result=str(int(result_1))+\"x^\"+str(result_2)\n   \n    \n    return result\n    \n    return result\n", "def integrate(c, exp):\n  return f'{str(round(c/(1+exp)))}x^{str(1+exp)}'", "def integrate(coefficient, exponent):\n    exponent += 1\n    num = int(coefficient / exponent)\n    return f'{num}x^{exponent}'", "def integrate(coefficient, exponent):\n    e1 = exponent + 1\n    r  = int(coefficient / e1)\n    return '{}x^{}'.format(r,e1)", "integrate = lambda coefficient, exponent: str(coefficient // ( exponent + 1 )) + 'x^' + str( exponent + 1 )\n", "def integrate(co, ex):\n    return \"{}x^{}\".format(int(co/(ex+1)) , ex+1)", "def integrate(coefficient, exponent):\n    exp = exponent + 1\n    coeff = int(coefficient / exp)\n    return f'{coeff}x^{exp}'", "def integrate(coefficient, exponent):\n    end = exponent + 1\n    begin = coefficient // end\n    return str(begin) + 'x^' + str(end)", "def integrate(coefficient, exponent):\n    exponent=exponent+1\n    coefficient=coefficient//exponent\n    return str(coefficient) + \"x\" +\"^\" + str(exponent)", "def integrate(x, y):\n    z =y+1\n    v = x//z\n    return \"{}x^{}\".format(v,z)\n", "def integrate(coefficient, exponent):\n    exponent += 1\n    coefficient //= exponent\n    return f'{coefficient}x^{exponent}'", "def integrate(coefficient, exponent):\n    exponent+=1\n    coefficient/=exponent\n    return '{0}x^{1}'.format(int(coefficient),exponent)", "def integrate(coefficient, exponent):\n    return str(\"{}x^{}\".format((coefficient//(exponent+1)), (exponent+1)))", "def integrate(coefficient, exponent):\n    exponent += 1\n    coefficient = coefficient // exponent\n    return \"{0}x^{1}\".format(coefficient,exponent)\n"]