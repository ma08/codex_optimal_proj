["def solution(s):\n    return ''.join(' ' + c if c.isupper() else c for c in s)\n", "import re\ndef solution(s):\n    return re.sub('([A-Z])', r' \\1', s)", "def solution(s):\n    final_string = \"\"\n    for i in range(len(s)):\n        char = s[i]\n        if char.isupper():\n            final_string += \" \" + char\n        else:\n            final_string += char\n    return final_string", "def solution(s):\n    newStr = \"\"\n    for letter in s:\n        if letter.isupper():\n            newStr += \" \"\n        newStr += letter\n    return newStr", "def solution(s):\n    return ''.join(i if i.islower() else ' ' + i for i in s)", "def solution(s):\n    st = \"\"\n\n    for c in s:\n        if c.upper() == c:\n            st += \" \" + c\n        else:\n            st += c\n\n    return st", "def solution(s):\n  res = \"\"\n  letters = [char for char in s]\n  print(letters)\n  for i in range(len(letters)):\n    if(letters[i] == letters[i].upper()):\n      res+=\" \"+letters[i]\n    else:\n      res+=letters[i]\n  return res", "def solution(s):\n    index,string = 0,\"\"\n    for char in s:\n        if char.islower():\n            string += char\n        else:\n            string += \" \" + char\n    return string", "def solution(s):\n    fCam = [ i for i in range(len(s)-1) if all(( s[i].islower(), s[i+1].isupper() ))]\n    return ''.join( [ [e, f'{e} '][i in fCam]  for i,e in enumerate(s) ] )", "def solution(string):\n    return ''.join((char if char.islower() else ' ' + char) for char in string)"]