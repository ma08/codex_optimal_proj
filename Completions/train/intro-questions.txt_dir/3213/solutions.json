["import re\ndef sum_of_a_beach(beach):\n    return len(re.findall('Sand|Water|Fish|Sun', beach, re.IGNORECASE))", "def sum_of_a_beach(beach):\n    return sum(beach.lower().count(fun) for fun in [\"sand\", \"water\", \"fish\", \"sun\"])", "import re\ndef sum_of_a_beach(beach):\n    return len(re.findall(\"sand|water|fish|sun\", beach, flags=re.I))", "import re\n\ndef sum_of_a_beach(beach):\n    return sum(1 for _ in re.finditer(r'sand|water|fish|sun',beach.lower()))", "def sum_of_a_beach(beach):\n    b = beach.lower(); l = [\"sand\", \"water\", \"fish\", \"sun\"]; c = 0\n    for w in l:\n        if w in b:c += b.count(w)\n    return c\n", "sum_of_a_beach=lambda s:sum(s.lower().count(e)for e in['sand','water','fish','sun'])", "def sum_of_a_beach(beach):\n    # your code\n        words=[\"Sand\", \"Water\", \"Fish\",\"Sun\"] \n        count=0\n        for word in words:\n            length = len(word)   \n            for i in range(len(beach)):\n                if beach[i:length+i].lower() ==word.lower():\n                    count+=1\n        return count", "sum_of_a_beach=lambda beach:beach.lower().count('water')+beach.lower().count('sand')+beach.lower().count('fish')+beach.lower().count('sun')", "def sum_of_a_beach(beach):\n    return sum([beach.lower().count(element) for element in ['sand', 'water', 'fish', 'sun']])", "import re\n\ndef sum_of_a_beach(beach):\n    return len(re.findall(r\"Sand|Water|Fish|Sun\", beach, re.IGNORECASE))"]