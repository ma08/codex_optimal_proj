["def get_new_notes(salary, bills):\n    return max((salary - sum(bills)), 0) // 5", "def get_new_notes(salary,bills):\n    return max((salary-sum(bills))//5, 0)", "def get_new_notes(salary,bills):\n    return max(0, (salary - sum(bills)) // 5)", "def get_new_notes(salary, bills):\n    disposable_income = salary - sum(bills)\n    return max(disposable_income // 5, 0)", "get_new_notes = lambda s, b: max(s - sum(b), 0) // 5", "def get_new_notes(salary, bills):\n    remaining = (salary - sum(bills)) // 5\n    return remaining if remaining > 0 else 0\n    \n", "def get_new_notes(salary,bills):\n    balance = salary - sum(bills)\n    return 0 if balance <= 0 else balance // 5", "def get_new_notes(salary,bills):\n    tb = sum(bills)\n    return int((salary-tb)/5) if salary > tb else 0\n", "def get_new_notes(salary,bills):\n    for bill in bills:\n        salary -= bill\n    return max(int(salary/5),0)"]