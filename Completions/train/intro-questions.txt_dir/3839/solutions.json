["def score_test(tests, right, omit, wrong):\n    points = (right, omit, -wrong)\n    return sum(points[test] for test in tests)\n", "#returns test score\ndef score_test(tests, right, omit, wrong):\n    final = 0\n    for scores in tests:\n        if scores == 0:\n            final = final + right\n        elif scores  == 1:\n            final = final + omit\n        elif scores == 2:\n            final = final - wrong\n    return final", "#returns test score\ndef score_test(tests, right, omit, wrong):\n    return tests.count(0) * right + tests.count(1) * omit - tests.count(2) * wrong ", "#returns test score\ndef score_test(tests, right, omit, wrong):\n    result = 0\n    for score in tests:\n        if score == 0:\n            result += right\n        elif score == 1:\n            result += omit\n        elif score == 2:\n            result -= wrong\n    return result\n", "#returns test score\ndef score_test(tests, right, omit, wrong):\n    #insert code here\n    right_score = tests.count(0)*right\n    omit_score = tests.count(1)*omit\n    wrong_score = tests.count(2)*wrong\n    return right_score + omit_score - wrong_score", "def score_test(tests, right, omit, wrong):\n  return sum( right if a==0 else omit if a==1 else -wrong for a in tests )", "def score_test(t, r, o, w):\n    \n    return sum([r,o,-w][s]for s in t)", "#returns test score\ndef score_test(tests: list, right: int, omit: int, wrong: int) -> int:\n    right_count = tests.count(0)\n    omit_count = tests.count(1)\n    wrong_count = tests.count(2)\n    return right_count * right + omit_count * omit - wrong_count * wrong", "def score_test(tests, right, omit, wrong):\n    awards = [right, omit, -wrong]\n    return sum(map(awards.__getitem__, tests))"]