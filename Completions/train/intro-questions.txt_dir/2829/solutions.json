["def array_madness(a,b):\n    return sum(x ** 2 for x in a) > sum(x **3 for x in b)", "def array_madness(a,b):\n    return sum(map(lambda a: a ** 2, a)) > sum(map(lambda b: b ** 3, b))", "def array_madness(a,b):\n    sa=0\n    sb=0\n    for i in range(0,len(a)):\n        sa+=a[i]**2\n    for i in range(0,len(b)):\n        sb+=b[i]**3\n    return sa>sb", "def array_madness(a,b):\n    return True if sum([x**2 for x in a]) > sum([y**3 for y in b]) else False", "def array_madness(a,b):\n    return sum(map(lambda x:x*x,a)) > sum(map(lambda x:x*x*x,b))", "def array_madness(a,b):\n    squaresA = 0\n    cubesB = 0\n    for i in range(len(a)):\n        squaresA += pow(a[i], 2)\n    for j in range(len(b)):\n        cubesB += pow(b[j], 3)  \n    return squaresA > cubesB", "array_madness = lambda a, b: \\\n    sum(map(lambda x: x ** 2, a)) > sum(map(lambda x: x ** 3, b))", "def array_madness(a,b):\n    return sum(a_i**2 for a_i in a) > sum(b_i**3 for b_i in b)", "array_madness = lambda a,b,nsum=lambda n,x: sum(e**n for e in x): nsum(2,a)>nsum(3,b)", "array_madness = lambda a, b: sum(e**2 for e in a) > sum(e**3 for e in b)", "def array_madness(a,b):\n    return sum(i**2 for i in a) > sum(i**3 for i in b)\n", "array_madness = lambda a,b,c=lambda n,x: sum(e**n for e in x): c(2,a)>c(3,b)", "from typing import List\n\ndef array_madness(a: List[int], b: List[int]) -> bool:\n    \"\"\"\n    Return `true` if the sum of the squares of each element in `a` \n    is strictly greater than the sum of the cubes of each element in `b`.\n    \"\"\"\n    return sum(map(lambda _: pow(_, 2), a)) > sum(map(lambda _: pow(_, 3), b))", "def array_madness(a, b):\n    return sum(map(2..__rpow__, a)) > sum(map(3..__rpow__, b))", "from functools import reduce\ndef array_madness(*arrays):\n    return int.__gt__(*[reduce(lambda a,c:a+c**(2+i), a, 0) for i,a in enumerate(arrays)])\n", "def array_madness(a,b):\n    list1 = []\n    list2 = []\n    for i in a:\n        list1.append(i ** 2)\n    for j in b:\n        list2.append(j ** 3)\n    if sum(list1) > sum(list2):\n        return True\n    elif  sum(list1) < sum(list2):\n        return False\n    elif  sum(list1) == sum(list2):\n        return True\n    else:\n        return True\n    \n", "def array_madness(*args):\n    return int.__gt__(*(sum(map(i.__rpow__, arr)) for i, arr in enumerate(args, 2)))", "def array_madness(a,b):\n    return sum(map(square, a)) > sum(map(cube, b))\n\ndef square(x):\n    return x*x\n\ndef cube(x):\n    return x*x*x", "def array_madness(a,b):\n    s = lambda x, y: sum(list(map(lambda z: z ** y, x)))\n    return s(a, 2) > s(b, 3)", "def array_madness(arr1: list, arr2: list) -> bool:\n    \"\"\" This function returns True if the sum of the squares of each element in arr1 is strictly greater than the sum of the cubes of each element in arr2. \"\"\"\n    if len(arr1) and len(arr2) >= 1:\n        return True if sum([i**2 for i in arr1]) > sum([i**3 for i in arr2]) else False\n    return False", "def array_madness(a,b):\n    lista1 = []\n    lista2 = []\n    for num1 in a:\n        num1 = num1 ** 2\n        lista1.append(num1)\n    add_lista1 = sum(lista1)\n    \n    for num2 in b:\n        num2 = num2 ** 3\n        lista2.append(num2)\n    add_lista2 = sum(lista2)\n    \n    if add_lista1 > add_lista2:\n        return True\n    else:\n        return False\n", "def array_madness(a,b):\n    resa = 0\n    resb = 0\n    for num in a:\n        resa += num**2\n    for num in b:\n        resb += num**3\n    return resa > resb", "def array_madness(a,b):\n    sq = 0\n    sm = 0\n    for i in a:\n        sq += i**2\n    for i in b:\n        sm += i**3\n        \n    return sq>sm", "def array_madness(a,b):\n    farr = 0\n    sarr = 0\n    for i in a : \n        n = i ** 2\n        farr = farr + n\n    for j in b :\n        o = j ** 3\n        sarr = sarr + o\n    if farr > sarr :\n        return True\n    if sarr >= farr :\n        return False\n", "def array_madness(a,b):\n    if sum(list(map(lambda x:x*x, a))) > sum(list(map(lambda x:x*x*x, b))):\n        return True\n    else:\n        return False", "def array_madness(a,b):\n    aa = sum([i**2 for i in a])\n    bb = sum([i**3 for i in b])\n    print (aa, bb)\n    return aa>bb", "def array_madness(a,b):\n   #descobrir o quadrado de cada elemento de a\n    for i in range(len(a)):\n        a[i] = a[i] ** 2 #levantado a 2 \n    sum_a = sum(a)    \n    \n    for i in range(len(b)):\n        b[i] = b[i] ** 3 #levantar 3\n    sum_b = sum(b)\n    \n    if sum_a > sum_b:\n        return True\n    else:\n        return False\n        \n", "def array_madness(a,b):\n    array1 = 0\n    array2 = 0\n    for v in a:\n        array1 += v**2\n    for v in b:\n        array2 += v**3\n    return array1 > array2", "def array_madness(a,b):\n    return sum([num**3 for num in b]) < sum([num**2 for num in a])", "def array_madness(a,b):\n    SumA = 0\n    for number in a:\n        SumA += number ** 2\n    SumB = 0\n    for number in b:\n        SumB += number ** 3\n    \n    return SumA > SumB", "def array_madness(a,b):\n    a1 = 0\n    b1 = 0\n    for i in a:\n        a1 += i ** 2\n    for j in b:\n        b1 += j ** 3\n    return a1 > b1", "def array_madness(a,b):\n    # Ready, get, set, GO!!!\n    suma = 0\n    sumb = 0\n    for i in a:\n        suma += i * i\n    for i in b:\n        sumb += i * i * i\n    return suma > sumb", "def array_madness(a, b):\n    squared = list(map(lambda x:x*x, a))\n    cubed = list(map(lambda x:x*x*x, b))\n    if sum(squared) > sum(cubed):\n        return True\n    return False", "def array_madness(a,b):\n    return sum(list(map(lambda elem : elem ** 2 , a))) > sum(list(map(lambda elem : elem ** 3 , b)))", "def array_madness(a,b):\n    a_list = 0\n    b_list = 0\n    for i in a:\n        a_list = a_list + i**2\n    for j in b:\n        b_list = b_list + j **3\n    if a_list > b_list:\n        return True\n    else:\n        return False \n    # Ready, get, set, GO!!!\n", "def array_madness(a,b):\n    x = 0\n    for k in a:\n        x += k**2\n    \n    y = 0\n    for k in b:\n        y += k**3\n    \n    if x > y:\n        return True\n    else:\n        return False\n    # Ready, get, set, GO!!!\n", "def array_madness(a,b):\n    print(a, b)\n    sum1 = 0\n    sum2 = 0\n    for n in  a:\n        sum1 += n**2\n    for n in b:\n        sum2 += n**3\n    print(sum1, sum2)\n    if sum1 > sum2:\n        return True\n    else:\n        return False", "def array_madness(a,b):\n    square=0\n    cube=0\n    for i in range(0,len(a)):\n        square+=a[i]**2\n    for i in range(0,len(b)):\n        cube+=b[i]**3\n    if square>cube: return True\n    else: return False\n", "def array_madness(a,b):\n    result_a = 0\n    result_b = 0\n    for i in a:\n        result_a += i ** 2 \n    for i in b:\n        result_b += i ** 3\n    return result_a > result_b", "def array_madness(a,b):\n    newa = []\n    newb = []\n    for x in a:\n        newa.append(x ** 2)\n    for y in b:\n        newb.append(y ** 3)\n    return sum(newa) > sum (newb)", "def array_madness(a,b):\n    suma = 0\n    for i in a:\n        suma = suma + i**2\n    sumb = 0\n    for i in b:\n        sumb = sumb + i**3\n    return suma > sumb", "def array_madness(a,b):\n    count = 0\n    for item in a:\n        a[count] = item**2\n        count += 1\n    count = 0\n    for item in b:\n        b[count] = item**3\n        count += 1\n\n    if sum(a)>sum(b):\n        return True\n    else:\n        return False", "def array_madness(a,b):\n    sum1 = 0\n    sum2 = 0\n    for x in a:\n        sum1 += (x ** 2)\n    for x in b:\n        sum2 += (x ** 3)\n    if(sum1 > sum2):\n        return True\n    else:\n        return False", "def array_madness(a,b):\n    a_sqr = [x**2 for x in a]\n    b_cub = [y**3 for y in b]\n    a_sum = sum(a_sqr)\n    b_sum = sum(b_cub)\n    return True if a_sum > b_sum else False\n", "def array_madness(a,b):\n    # Ready, get, set, GO!!!\n    sum1=0\n    sum2=0\n    for i in a:\n        sq=i**2\n        sum1=sum1+sq\n    for j in b:\n        cu=j**3\n        sum2=sum2+cu\n    if sum1 > sum2:\n        return True\n    else:\n        return False\n", "def array_madness(a,b):\n    totalOfA = 0\n    totalOfB = 0\n    for number in a:\n        newNumber = number ** 2\n        totalOfA += newNumber\n    for number in b:\n        newNumber = number ** 3\n        totalOfB += newNumber\n    \n    if totalOfA > totalOfB:\n        return True\n    else:\n        return False\n", "mul = lambda arr, h: sum (pow(i, h) for i in arr)\narray_madness = lambda a,b: mul(a,2) >  mul(b,3)", "def array_madness(a,b):\n    sum_of_a = 0\n    sum_of_b = 0\n    for x in range(len(a)):\n        sum_of_a += a[x]**2\n    for y in range(len(b)):\n        sum_of_b += b[y]**3\n    if sum_of_a > sum_of_b:    \n        return True\n    else:\n        return False", "def ss(a):return sum([e*e for e in a])\n\ndef sc(b):return sum([e*e*e for e in b])\n\ndef array_madness(a,b):\n    return ss(a)>sc(b)", "def array_madness(a,b):\n    squares = sum([el ** 2 for el in a])\n    cubes = sum([el ** 3 for el in b])\n    return squares > cubes", "def array_madness(a,b):\n    a_sum = 0\n    b_sum = 0\n    for i in a:\n        a_sum = a_sum + i**2\n    for j in b:\n        b_sum = b_sum + j**3\n    \n    if (a_sum > b_sum):\n        return True\n    else:\n        return False", "def square_array(arr):\n    return [item**2 for item in arr]\n\ndef cube_array(arr):\n    return [item**3 for item in arr]\n\ndef sum_array(arr):\n    sum = 0\n    for thing in arr:\n        sum += thing\n    return sum\n\ndef array_madness(a,b):\n    return sum_array(square_array(a)) > sum_array(cube_array(b))\n    \n", "from functools import reduce\ndef array_madness(a,b):\n    arr1=map(lambda x:x**2,a)\n    arr2=map(lambda x:x**3,b)\n    \n    arr3=reduce(lambda c,d: int(c) + int(d), arr1)\n    arr4=reduce(lambda e,f: int(e) + int(f), arr2)\n    if arr3>arr4: return True\n    else: return False", "def array_madness(a,b):\n    result_a = 0\n    result_b = 0\n    for i in a:\n        result_a += i ** 2\n    for i in b:\n        result_b += i ** 3\n    return True if result_a > result_b else False\n", "def array_madness(a,b):\n    result_a = 0\n    result_b = 0\n    for i in a:\n        result_a += i ** 2\n    for i in b:\n        result_b += i ** 3\n    if result_a > result_b:\n        return True\n    else:\n        return False", "def array_madness(a,b):\n    return sum(pow(el, 2) for el in a) > sum(pow(el, 3) for el in b)\n", "\n\ndef array_madness(a,b):\n    return True if sum([x**2 for x in a]) > sum([x**3 for x in b]) else False \n\narray_madness([4, 5, 6], [1, 2, 3])\n\n\n\n\n    \n\n", "def array_madness(a,b):\n    return True if sum( n**2 for n in a ) > sum( n**3 for n in b ) else False\n", "def array_madness(a,b):\n    la = sum(x**2 for x in a)\n    lb = sum(y**3 for y in b)\n    return la >= lb", "def array_madness(a,b):\n    square= [x**2 for x in a]    \n    cube = [x**3 for x in b]\n    return sum(square) > sum(cube)", "def array_madness(a,b):\n    result1 = 0\n    result2 = 0\n    for number in a:\n        result1 += number**2\n    for number in b:\n        result2 += number**3\n    if result1 > result2:\n        return True\n    else:\n        return False\n    # Ready, get, set, GO!!!\n", "def array_madness(a,b):\n    # Ready, get, set, GO!!!\n    kv = 0\n    kub = 0\n    for i in a:\n        kv += i ** 2\n    for j in b:\n        kub += j ** 3\n    return kv > kub", "def array_madness(a,b):\n    squares_list = [i**2 for i in a]\n    cubes_list =   [i**3 for i in b]\n    return sum(squares_list) > sum(cubes_list)", "def array_madness(a:[],b:[]):\n    result = 0\n    result2 = 0\n    for i in a:\n        result += i*i\n    for i in b:\n        result2 += i*i*i\n    if result > result2:\n        return True\n    return False\n\n\n", "def array_madness(a,b):\n    for i in range(len(a)):\n        a[i] = a[i]**2\n    suma= sum(a)\n    for i in range(len(b)):\n        b[i] = b[i]**3\n    sumb = sum(b)\n    if suma > sumb:\n        return True\n    else:\n        return False\n    # Ready, get, set, GO!!!\n", "def array_madness(a,b):\n    sum = 0\n    sumc = 0\n    for i in a:\n        sum += (i ** 2)\n    for i in b:\n        sumc += (i ** 3)\n    if sum > sumc:\n        return True\n    else:\n        return False", "def array_madness(a,b):\n    sum1 = 0\n    sum2 = 0\n    for val1 in a:\n        sum1 += val1**2\n    for val2 in b:\n        sum2 += val2**3\n    return sum1 > sum2", "def array_madness(a,b):\n    q=0\n    w=0\n    for i in a:\n        q+=i**2\n    for i in b:\n        w+=i**3\n    return q>w\n    # Ready, get, set, GO!!!\n", "def array_madness(a,b):\n    suma=0\n    sumb=0\n    for i in a:\n        suma += i ** 2\n    for j in b:\n        sumb += j ** 3\n    return True if suma > sumb else False\n        \n", "def array_madness(a,b):\n    p = 0\n    for i in a:\n        p += i**2\n    q = 0\n    for j in b:\n        q += j**3\n    return p > q", "def array_madness(a,b):\n    c=False\n    \n    \n    sum1=list(map(lambda number:number*number,a))\n    sum2=list(map(lambda number:number*number*number,b))\n    \n    if sum(sum1)>sum(sum2):\n        c=True\n    \n    return c", "def array_madness(a,b):\n    sum1=0\n    sum2=0\n    for i in range(len(a)):\n        sum1=sum1+(a[i]**2)\n    for j in range(len(b)):\n        sum2=sum2+(b[j]**3)\n    if sum1>sum2:\n        return True\n    else:\n        return False", "def array_madness(a,b):\n    return sum(_a**2 for _a in a) > sum(_b**3 for _b in b)", "def array_madness(a,b):\n    a_total = 0\n    b_total = 0\n    \n    for i in a:\n        x = i*i\n        a_total += x\n        \n    for i in b:\n        x = i*i*i\n        b_total += x\n        \n    return a_total > b_total", "def array_madness(a,b):\n    # Ready, get, set, GO!!!\n    \n    hi = 0\n    cool = 0\n    for num in a:\n        p1 = num ** 2\n        cool = p1 + cool\n        \n    for i in b:\n        p2 = i ** 3\n        hi = p2 + hi\n    \n    if cool > hi:\n        return True\n    else:\n        return False", "def array_madness(a,b):\n    r = lambda arr, p: sum([number**p for number in arr])\n    return r(a,2) > r(b,3)", "def array_madness(squares, cubes):\n    return sum(num ** 2 for num in squares) > sum(num ** 3 for num in cubes)", "def array_madness(squares, cubes):\n    return sum([num ** 2 for num in squares]) >= sum([num ** 3 for num in cubes])", "def array_madness(a,b):\n    suma = 0\n    sumb = 0\n    \n    for i in a:\n        suma = suma+i**2\n        \n    for i in b:\n        sumb = sumb+i**3\n        \n        \n    return suma>sumb", "def array_madness(a,b):\n    for i,v in enumerate(a):\n        a[i] = v**2\n    for i,v in enumerate(b):\n        b[i] = v**3\n    return sum(a) > sum(b)", "def array_madness(a,b):\n    # Ready, get, set, GO!!!\n    temp=0\n    temp1=0\n    for i in range(len(a)):\n        temp+=a[i]**2\n    for j in range(len(b)):\n        temp1+=b[j]**3\n    \n    if temp>temp1:\n        return True\n    else:\n        return False\n        \n", "def array_madness(a,b):\n    sum1 = 0\n    sum2 = 0\n    for i in a:\n        x = i ** 2\n        sum1 += x\n    for j in b:\n        y = j ** 3\n        sum2 += y\n    if sum1 > sum2:\n        return True\n    else:\n        return False", "def array_madness(a,b):\n    squareSum = 0\n    cubeSum = 0\n    \n    for i in a:\n        squareSum+= i * i\n    \n    for i in b:\n        cubeSum+= i * i * i\n        \n    if squareSum > cubeSum:\n        return True\n    \n    return False", "def array_madness(a,b):\n    x=0\n    y=0\n    for i in a:\n        x += i*i\n    for j in b:\n        y += j*j*j\n    return x>y\n        \n    \n   \n    \n    \n   \n     \n   \n   \n    \n   \n \n\n    \n\n       \n    \n    \n        \n        \n", "def array_madness(a,b):\n    square = [ x ** 2 for x in a ]\n    cube = [ y ** 3 for y in b ]\n    return True if sum(square) > sum(cube) else False", "def square(x):\n    return x*x\ndef Cube(x):\n    return x*x*x\ndef array_madness(a,b):\n    return ((True,False) [sum(map(square,a))<sum(map(Cube,b))])\n", "def array_madness(a,b):\n    a_total = 0\n    b_total = 0\n    for num in a:\n        squares = num**2\n        a_total = a_total + squares\n        \n    for num in b:\n        cubes = num**3\n        b_total = b_total + cubes\n        \n    return a_total > b_total\n", "def calculate_array(array,\n                    exponent):\n\n    result = 0\n    for i in range(len(array)):\n        result += (array[i] ** exponent)\n\n    return result\n\n\ndef array_madness(a,\n                  b):\n\n    sum_a, sum_b = calculate_array(a, 2), calculate_array(b, 3)\n    if (sum_b < sum_a):\n\n        return True\n\n    return False\n", "def array_madness(a,b):\n    lsta=[]\n    lstb=[]\n    for x in a:\n        x=x**2\n        lsta.append(x)\n    for y in b:\n        y=y**3\n        lstb.append(y)\n    if sum(lsta) >= sum(lstb):\n        return True\n    else:\n        return False", "def array_madness(a,b):\n    res1=0\n    for i in a:\n        res1=res1+i*i\n    \n    res2=0\n    for i in b:\n        res2=res2+i*i*i\n    \n    return res1>=res2", "def array_madness(a,b):\n    x = 0\n    y = 0\n    for i in a:\n        x += i ** 2\n    for c in b:\n        y += c ** 3\n    return x > y", "def array_madness(a,b):\n    Listea=list()\n    Listeb=list()\n    for ch in a:\n        Listea.append(ch**2)\n        suma=sum(Listea)\n    for ch in b:\n        Listeb.append(ch**3)\n        sumb=sum(Listeb)\n\n    if suma>sumb:\n        return True\n    else:\n        return False\n", "def array_madness(a,b):\n    x=y=i=0\n    for i in range(len(a)):\n        x = x + a[i] * a[i]\n    for i in range(len(b)):\n        y = y + (b[i] * b[i] * b[i])\n    return x > y", "def array_madness(a,b):\n    # Ready, get, set, GO!!!\n    one = sum([i**2 for i in a])\n    two = sum([i**3 for i in b])\n    return one>two", "def array_madness(a,b):\n    sum_a = sum(x**2 for x in a)\n    sum_b = sum(x**3 for x in b)\n    if sum_a > sum_b:\n        return True\n    else:\n        return False", "def array_madness(a,b):\n    sum_squares = 0\n    sum_cubes = 0\n    for number in a:\n        sum_squares += number  ** 2\n    for number in b:\n        sum_cubes += number ** 3\n    if sum_squares > sum_cubes:\n        return True\n    return False", "def array_madness(a,b):\n    return sum(i*i for i in a) > sum(w*w*w for w in b)", "def array_madness(a,b):\n    return sum(n * n for n in a) > sum(n * n * n for n in b) ", "import numpy as np\n\ndef array_madness(a,b):\n    # Ready, get, set, GO!!!\n    a,b = np.array(a),np.array(b)\n    squaring_array1 = a ** 2\n    cube_array2 = b ** 3\n    if sum(squaring_array1) > sum(cube_array2):\n        return True\n    else:\n        return False", "def array_madness(a,b):\n    a_squares = [i ** 2 for i in a]\n    b_cubes = [i ** 3 for i in b]\n    return sum(a_squares) > sum(b_cubes)"]