["for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    m = 10 ** 9\n    c = 0\n    for i in range(n - 1, -1, -1):\n        if A[i] <= m:\n            m = A[i]\n        else:\n            c += 1\n    print(c)", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    cnt = 0\n    mn = arr[-1]\n    for i in range(n - 1, -1, -1):\n        cnt += arr[i] > mn\n        mn = min(arr[i], mn)\n    print(cnt)", "for _ in range(int(input())):\n    n=int(input())\n    l1=list(map(int,input().split()))\n    m=l1[-1]\n    ans=0\n    for i in range(-2,-n-1,-1):\n        if l1[i]>m:\n            ans+=1\n        else :\n            m=l1[i]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mn = 10 ** 9\n    ans = 0\n    for x in reversed(a):\n        if x > mn:\n            ans += 1\n        mn = min(mn, x)\n    print(ans)", "# Contest: Codeforces Round #582 (Div. 3) (https://codeforces.com/contest/1213)\n# Problem: B: Bad Prices (https://codeforces.com/contest/1213/problem/B)\n\ndef rint():\n    return int(input())\n\n\ndef rints():\n    return list(map(int, input().split()))\n\n\nt = rint()\nfor _ in range(t):\n    n = rint()\n    a = rints()\n    mi = a[-1]\n    bad = 0\n    for ai in reversed(a[:-1]):\n        if ai > mi:\n            bad += 1\n        mi = min(mi, ai)\n    print(bad)\n", "t=int(input())\nfor i in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    mi=10000000\n    ans=0\n    i=n-1\n    while (i>=0):\n        if a[i]>mi:\n            ans+=1\n        if a[i]<mi:\n            mi=a[i]\n        i-=1\n    print(ans)", "def inp(): return int(input())\ndef ln(): return [int(x) for x in input().split()]\n\ndef solve():\n    n = inp()\n    a = ln()\n    mns = [-1]*n\n    mns[-1] = a[-1]\n    for i in range(n-2,-1,-1):\n        mns[i] = min(a[i], mns[i+1])\n\n    cnt = 0\n    for i in range(n):\n        if i + 1 < n and mns[i+1] < a[i]:\n            cnt += 1\n    print(cnt)\n\nfor _ in range(inp()):\n    solve()\n", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s_min = [10 ** 9] * n\n    s_min[-1] = a[-1]\n    for i in range(n - 2, -1, -1):\n        s_min[i] = min(s_min[i + 1], a[i])\n    cnt = 0\n    for i in range(n - 1):\n        cnt += (s_min[i + 1] < a[i])\n    print(cnt)", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.reverse()\n    minn = a[0]\n    ans = 0\n    for i in range(1, n):\n        if a[i] > minn:\n            ans += 1\n        minn = min(minn, a[i])\n    print(ans)\n    t -= 1", "def mi():\n        return list(map(int, input().split()))\n'''\n5\n6\n3 9 4 6 7 5\n1\n1000000\n2\n2 1\n10\n31 41 59 26 53 58 97 93 23 84\n7\n3 2 1 2 3 4 5\n'''\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(mi())[::-1]\n    m = a[0]\n    ans = 0\n    for i in range(n):\n        if a[i]>m:\n            ans+=1\n        elif a[i]<m:\n            m = a[i]\n    print (ans)\n", "from sys import stdin\nt=int(stdin.readline().strip())\nfor j in range(t):\n    n=int(stdin.readline().strip())\n    s=list(map(int,stdin.readline().strip().split()))\n    mn=s[-1]\n    ans=0\n    for i in range(n-2,-1,-1):\n        if mn<s[i]:\n            ans+=1\n        mn=min(mn,s[i])\n    print(ans)\n        \n            \n    \n", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans, min1 = 0, float('inf')\n    for q in range(n-1, -1, -1):\n        if a[q] > min1:\n            ans += 1\n        min1 = min(min1, a[q])\n    print(ans)\n", "#double underscore makes a class variable or a class method private\nmod = 1000000007\nii = lambda : int(input())\nsi = lambda : input()\ndgl = lambda : list(map(int, input()))\nf = lambda : map(int, input().split())\nil = lambda : list(map(int, input().split()))\nit = lambda : tuple(map(int, input().split()))\nls = lambda : list(input())\nt=ii()\nfor _ in range(t):\n    n=ii()\n    l=il()\n    mn=l[-1]\n    c=0\n    for i in range(n-1,-1,-1):\n        if l[i]>mn:\n            c+=1\n        mn=min(mn,l[i])\n    print(c)", "import math\ntst = int(input())\nfor i in range(tst):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.reverse()\n    mn = a[0] + 100\n    cnt = 0\n    for c in a:\n        if mn < c:\n            cnt += 1\n        mn = min(mn, c)\n    print(cnt)\n\n", "from bisect import *\nfrom collections import *\nfrom itertools import *\nimport functools\nimport sys\nimport math\nfrom decimal import *\nfrom copy import *\ngetcontext().prec = 30\nMAX = sys.maxsize\nMAXN = 10**5+10\nMOD = 10**9+7\ndef isprime(n):\n    n = abs(int(n))\n    if n < 2:\n        return False\n    if n == 2: \n        return True    \n    if not n & 1: \n        return False\n    for x in range(3, int(n**0.5) + 1, 2):\n        if n % x == 0:\n            return False\n    return True\n\ndef mhd(a,b):\n    return abs(a[0]-b[0])+abs(b[1]-a[1])\n\ndef charIN(x= ' '):\n    return(sys.stdin.readline().strip().split(x))\n\ndef arrIN(x = ' '):\n    return list(map(int,sys.stdin.readline().strip().split(x)))\n\ndef eld(x,y):\n    a = y[0]-x[0]\n    b = x[1]-y[1]\n    return (a*a+b*b)**0.5\n\ndef lgcd(a):\n    g = a[0]\n    for i in range(1,len(a)):\n        g = math.gcd(g,a[i])\n    return g\n\ndef ms(a):\n    msf = -MAX\n    meh = 0\n    st = en = be = 0\n    for i in range(len(a)):\n        meh+=a[i]\n        if msf<meh:\n            msf = meh\n            st = be\n            en = i\n        if meh<0:\n            meh = 0\n            be = i+1\n    return msf,st,en\n\ndef ncr(n,r):\n    num=den=1\n    for i in range(r):\n        num = (num*(n-i))%MOD\n        den = (den*(i+1))%MOD\n\n    return (num*(pow(den,MOD-2,MOD)))%MOD\n\n\n\ndef flush():\n    return sys.stdout.flush()\n\n\ndef fac(n):\n    ans = 1\n    for i in range(1,n+1):\n        ans*=i\n        ans%=MOD\n    return ans\n\n'''*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*'''\nfor _ in range(int(input())):\n    n = int(input())\n    a = arrIN()\n    x = [MAX]*(n)\n    x[-1] = a[-1]\n    for i in range(n-2,-1,-1):\n        x[i] = min(x[i+1],a[i])\n    ans = 0\n    for i in range(n-1):\n        if x[i+1]<a[i]:\n            ans+=1\n    print(ans)\n", "# TAIWAN NUMBER ONE!!!!!!!!!!!!!!!!!!!\n# TAIWAN NUMBER ONE!!!!!!!!!!!!!!!!!!!\n# TAIWAN NUMBER ONE!!!!!!!!!!!!!!!!!!!\nfrom sys import stdin, stdout\nfrom collections import defaultdict\nfrom collections import deque\nimport math\nimport copy\n \nT = int(input())\n#N = int(input())\n#s1 = input()\n#s2 = input()\n#N,Q = [int(x) for x in stdin.readline().split()]\n#arr = [int(x) for x in stdin.readline().split()]\n\nfor i in range(T):\n    N = int(input())\n    arr = [int(x) for x in stdin.readline().split()]\n    \n    mini = [0]*N\n    \n    m = arr[-1]\n    \n    for i in range(N-1,-1,-1):\n        m = min(m,arr[i])\n        mini[i] = m\n        \n    res = 0\n    for i in range(N-1):\n        if arr[i]>mini[i+1]:\n            res += 1\n            \n    print(res)", "Q = int(input())\nfor q in range(Q):\n    n = int(input())\n    arr = list(map(int, input().split()))\n\n    minimal = 1e9\n    bad = 0\n    for i in arr[::-1]:\n        if i < minimal:\n            minimal = i\n        if i > minimal:\n            bad += 1\n\n    print(bad)\n", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n\n    a = list(map(int, input().split()))\n    m = a[-1]\n    res = 0\n    \n    for i in range(n-1, -1, -1):\n        if a[i] > m:\n            res += 1\n        m = min(m, a[i])\n\n    print(res)\n\n\n", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    c = 0\n    data = list(map(int, input().split()))\n    stack = []\n    for i in data:\n        if not stack:\n            stack.append(i)\n        else:\n            while stack and stack[-1] > i:\n                c += 1\n                stack.pop()\n            stack.append(i)\n    print(c)", "def int_multiple():\n    return  [int(c) for c in input().split()]\n\ndef int_single():\n    return int(input())\n\ndef str_multiple():\n    return [c for c in input().split()]\n\ndef str_single():\n    return input()\n\n# start\nt = int_single()\n\nres = []\n\nfor i in range(t):\n    n = int_single()\n    l = int_multiple()\n    cnt = 0\n    mn = l[-1]\n    for j in reversed(list(range(n))):\n        if l[j] < mn:\n            mn = l[j]\n        if l[j] > mn:\n            cnt += 1\n\n    res.append(cnt)\n\nfor r in res:\n    print(r)\n", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    low = arr[n-1]\n    bad = 0\n    for i in range(n-2, -1, -1):\n        if arr[i] > low: bad += 1\n        low = min(low, arr[i])\n    print(bad)\n    t -= 1", "import sys\nmod = 1000000007\ndef get_array(): return list(map(int, sys.stdin.readline().split()))\ndef get_ints(): return map(int, sys.stdin.readline().split())\ndef input(): return sys.stdin.readline()\ndef print_array(a): print(\" \".join(map(str, a)))\ndef main():\n        for _ in range(int(input())):\n                n = int(input())\n                a = get_array()\n                m = a[n - 1]\n                cnt = 0\n                for i in range(n - 2, -1, -1):\n                        if a[i] > m: cnt += 1\n                        if a[i] < m : m = a[i]\n                print(cnt)\ndef __starting_point():\n        main()\n__starting_point()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [-1]*n\n    b[n-1] = a[n-1]\n    ans = 0\n    for i in range(n-2, -1, -1):\n        b[i] = min(b[i+1], a[i])\n    for i in range(n-1):\n        if(a[i] > b[i]):\n            ans += 1\n    print(ans)\n", "T = int(input())\nfor i in range(T):\n\tN = int(input())\n\tl = [int(x) for x in input().split()]\n\tans = 0\n\ts = l[-1]\n\tfor j in reversed(l):\n\t\tif(j > s): ans += 1\n\t\telse: s = j\n\tprint(ans)\n"]