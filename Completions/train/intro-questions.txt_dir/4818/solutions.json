["def solution(a, b):\n    return a+b+a if len(a)<len(b) else b+a+b\n", "def solution(a, b):\n    return '{0}{1}{0}'.format(*sorted((a, b), key=len))", "def solution(a, b):\n    if len(a)>len(b):\n        return(b+a+b)\n    else:\n        return(a+b+a)\n  \n", "def solution(a, b):\n    short, int = sorted((a, b), key=len)\n    return short + int + short\n", "solution = lambda a, b: \"{0}{1}{0}\".format(min(a, b, key = len), max(a, b, key = len))\n", "def solution(a, b):\n    return \"{0}{1}{0}\".format(*(a, b) if len(a) < len(b) else (b, a))\n    \n", "def solution(a, b):\n    if len(a) > len(b):\n        return f'{b}{a}{b}'\n    else:\n        return f'{a}{b}{a}'\n", "def solution(a, b):\n    if len(str(a)) < len(str(b)):\n        return '{}{}{}'.format(a,b,a)\n    else:\n        return '{}{}{}'.format(b,a,b)\n", "solution = lambda a,b: a*(len(a)<len(b))+b+a+b*(len(a)>len(b))", "def solution(a, b):\n    a,b = sorted([a,b], key=len)\n    return a + b + a\n", "def solution(a, b):\n    res = []\n    if len(a) > len(b):\n        res.append(b)\n        res.append(a)\n        res.append(b)\n    else:\n        res.append(a)\n        res.append(b)\n        res.append(a)        \n    return \"\".join(res)\n", "def solution(a: str, b: str) -> str:\n    short, int = sorted((a, b), key=len)\n    return f\"{short}{long}{short}\"\n", "def solution(a, b):\n    shortest_string = None\n    longest_string = None\n    if min(len(a), len(b)) == len(a):\n        shortest_string = a\n        longest_string = b\n    else:\n        shortest_string = b\n        longest_string = a\n    return shortest_string + longest_string + shortest_string", "# find len of str\n# if len a > len b\n# do bab\n# else do aba\ndef solution(a, b):\n    p = len(a)\n    w = len(b)\n    if p > w:\n        l = b + a + b\n        return l\n    else:\n        m = a + b + a\n        return m\n", "def solution(a, b):\n    if a and b .isnumeric():\n        return b + a + b if a > b else a + b + a\n    else:\n        return b + a + b if len(a) > len(b) else a + b + a", "def solution(a, b):\n    return a+b+a if len(b) > len(a) else b+a+b \n", "solution=lambda a,b:b+a+b if len(a)>len(b)else a+b+a", "solution=lambda a,b:(a+b+a,b+a+b)[len(a)>len(b)]", "'''\n'''\ndef solution(a, b):\n    combined_string = ''\n    if len(a) > len(b):\n        combined_string = b+a+b\n        return combined_string\n    else:\n        combined_string = a+b+a\n        return combined_string\n", "def solution(a, b):\n    return f'{b}{a}{b}' if len(a) > len(b) else f'{a}{b}{a}'", "def solution(a='', b=''):\n    if len(a)>len(b):\n        return b+a+b\n    else:\n        return a+b+a\n", "a_len = 0\nb_len = 0\n\ndef solution(a, b):\n    a_len = len(a)\n    b_len = len(b)\n    if a_len < b_len:\n        return a + b + a\n    else: return b + a + b", "def solution(a: str, b: str) -> str:\n    if len(a) < len(b):\n        return a + b + a\n    return b + a + b\n", "def solution(a, b):\n    \n    if len(a) > len(b):\n        d = a\n        c = b\n    else:\n        d = b\n        c = a\n    return f\"{c}{d}{c}\"\n", "def solution(a, b):\n    string = ''\n    if len(a)>len(b):\n        string = b + a + b\n    else:\n        string = a + b + a\n    return string", "def solution(a, b):\n    if len(a) < len(b):\n        list = a, b, a\n    else:\n        list = b, a, b\n    return \"\".join(list)\n", "def solution(a, b):\n    if a.isdigit() and b.isdigit():\n        return b+a+b if a > b else a+b+a\n    else:\n        return b+a+b if len(a) > len(b) else a+b+a\n        \n", "def solution(a, b):\n    try:\n        if int(a) < int(b):\n            return a + b + a\n        else:\n            return b + a + b \n    except: \n        if len(a) < len(b):\n            return a + b + a\n        else:\n            return b + a + b \n        \n", "def solution(a, b):\n    l = []\n    l.append(a), l.append(b)\n    l.sort(key=lambda x: len(x))\n    res = lambda x: f\"{x[0]}{x[1]}{x[0]}\"\n    return res(l)\n", "def solution(a, b):\n    \n    x=len(a)\n    y=len(b)\n    \n    if x>=y:\n        return b+a+b\n    else:\n        return a+b+a\n    \n    \n", "def solution(a, b):\n    if a is None and b is None: return a\n    elif b is None: return a\n    elif a is None: return b\n    else: \n        a_len = len(a)\n        b_len = len(b)\n        if a_len >= b_len:\n            return b + a + b\n        else:\n            return a + b + a", "def solution(a, b):\n    if type(a) == int:\n        \n        if a < b:\n            return a + b + a\n        elif a > b:\n            return b + a + b\n        \n    if type(a) == str:\n        \n        if len(a) < len(b):\n            return a + b + a\n        elif len(a) > len(b):\n            return b + a + b\n    \n        \n", "def solution (a, b):\n    return ''.join(a + b + a if len(a) < len(b) else b + a + b)\n\n#def solution(a, b):\n#    return ''.join(a + b + a if len(a) < len(b) else b + a + b)\n", "def solution(a, b):\n    if len(a) < len(b):\n        return a+b+a\n    elif len(a) > len(b):\n        return b+a+b\n    else:\n        return None", "def solution(a, b):\n    if (len(a) > len(b)):\n        return f\"{b + a + b}\"\n    else:\n        return f\"{a + b + a}\"\n    \n", "def solution(a, b):\n\n    if len(a) > len(b):\n        return b + a + b\n    elif len(a) < len(b):\n        return a + b + a\nprint((solution(\"123\", \"34\")))\n", "def solution(a='', b=''):\n    return f'{a}{b}{a}' if len(b) > len(a) else f'{b}{a}{b}'\n    \n", "# checks if string a or b is longer\n# returns string short_string+long_string+short_string\ndef solution(a, b):\n    return a+b+a if len(a)<=len(b) else b+a+b", "def solution(a, b):\n    arr_sorted = sorted([a, b], key=len)\n    return \"\".join([arr_sorted[0], arr_sorted[1], arr_sorted[0]])\n", "def solution(a, b):\n    if(len(a)>len(b)):\n        c=(b,a,b)\n        return (\"\".join(c))\n    c=(a,b,a)\n    return (\"\".join(c))", "def solution(a, b):\n    alen = len(a)\n    blen = len(b)\n    c=[]\n    if alen < blen:\n        c.append(a)\n        c.append(b)\n        c.append(a)\n    elif blen < alen:\n        c.append(b)\n        c.append(a)\n        c.append(b)\n    c = \"\".join(c)\n    return c\n", "def solution(a, b):\n    shortest, longest = (a, b) if len(a) < len(b) else (b, a)\n    return shortest + longest + shortest\n", "def solution(a, b):\n    if (len(a)<len(b)):\n        new_string=a+b+a\n    else:\n        new_string=b+a+b\n    return new_string\n", "def solution(a, b):\n    zA =[]\n    for iA in a:\n        zA.append (len(iA))\n    zB =[]\n    for iB in b:\n        zB.append (len(iB))\n    if zA < zB:\n        return f\"{a+b+a}\"\n    else:\n        return f\"{b+a+b}\"        \n\n", "def solution(a, b):\n    short, int = '',''\n    if len(a) > len(b):\n        long = a\n        short = b\n    else:\n        short = a\n        long = b\n    \n    return short+int+short\n", "def solution(a, b):\n    if(len(a) < len(b)):\n        result=a+b+a\n        return result\n    else:\n        result=b+a+b\n        return result\n    \n", "def solution(a, b):\n    a1 = len(a)\n    b1 = len(b)\n\n    if a1 > b1:\n        return b + a + b\n    else:\n        return a + b + a", "def solution(a, b):\n    if len(a)>len(b):\n        result=b+a+b\n    elif len(b)>len(a):\n        result=a+b+a\n    else:\n        result=\"\"\n    return result\n", "def solution(a, b):\n    la = len(a)\n    lb = len(b)\n    shrt = a\n    lng = b\n    if la>lb:\n        shrt = b\n        lng = a\n    return shrt+lng+shrt\n", "def solution(a, b):\n    '''determine which string, (a or b) is longer and printing the, short, long, short'''\n    if len(a) > len(b):\n        return b + a + b\n    else:\n        return a + b + a", "def solution(*s):\n    s = sorted(s, key=lambda x: len(x))\n    return s[0] + s[1] + s[0]", "def solution(a, b):\n    newString = ''\n    if len(a) < len(b):\n        return (newString + a + b + a)\n    else: \n        return (newString + b + a + b)", "def solution(a, b):\n    res = ''\n    if len(a)>len(b):\n        res = b+a+b\n    else:\n        res = a+b+a\n    return res\n        \n    \n    #if a!=b:\n        #return min(a,b)+ max(a,b)+ min(a,b)\n", "def solution(a, b):\n    result = \"\"\n    if len(a) < len(b):\n        result = a + b + a\n    else:\n        result = b + a + b\n    return result\n    pass\n", "def solution(a, b):\n    if len(a) > len (b):\n        sumar=(b + a + b)\n    else:\n        sumar=(a + b + a)        \n    return sumar\n\n", "def solution(a, b):\n    try:\n        x = int(a, b)\n    except:\n        return a+b+a if len(b) > len(a) else b+a+b\n    else:\n        return a+b+a if b > a else b+a+b\n\n", "def solution(a, b):\n    return '{0}{1}{0}'.format(a if len(a) < len(b) else b, a if len(a) > len(b) else b)\n", "def solution(a, b) -> str:\n    if len(a) <= len(b):\n        mini, maxi = a, b\n    elif len(a) > len(b):\n        maxi, mini = a, b\n    return f\"{mini}{maxi}{mini}\"", "def solution(a, b):\n    if len(a) > len(b):\n        return str(b) + str(a) + str(b)\n    elif len(a) < len(b):\n        return str(a) + str(b) + str(a)\n    else:\n        return 'Error'\n", "def solution(a, b):\n    k = ''\n    if len(a) < len(b):\n        k = ''.join(a) + ''.join(b) + ''.join(a)\n    else:\n        k = ''.join(b) + ''.join(a) + ''.join(b)\n    return k\n", "def solution(a, b):\n    lena = len(a)\n    lenb = len(b)\n    if lena > lenb:\n        long = a\n        short = b\n    elif lena < lenb:\n        long = b\n        short = a\n    answer = short + int + short\n    return answer\n\n    \n", "def solution(a, b):\n    if(len(a)>len(b)):\n        return b + a + b\n    elif(len(a) < len(b)):\n        return a + b + a\n    else:\n        return -1\n", "def solution(a, b):\n    return '' + a + b + a if len(a) < len(b) else '' + b + a + b\n", "def solution(a, b):\n    c = []\n    if len(a)>len(b):\n        c.extend(b)\n        c.extend(a)\n        c.extend(b)\n        return (''.join(c))\n    if len(b)>len(a):\n        c.extend(a)\n        c.extend(b)\n        c.extend(a)\n        return (''.join(c))\n        \n    pass\n", "solution = lambda a, b: f'{a}{b}{a}' if len(b) > len(a) else f'{b}{a}{b}'\n", "def solution(a = '', b = ''):\n    if len(a) > len(b):\n        return f\"{b}{a}{b}\"\n    elif len(a) < len(b):\n        return f\"{a}{b}{a}\"\n", "def solution(a, b):\n    if int(len(a))>int(len(b)):\n        return b+a+b\n    else:\n        return a+b+a\n", "def solution(a, b): \n    if len(a) > len(b):\n        short_long = b+a+b\n    else:\n        short_long = a+b+a\n    return short_long\n", "def solution(a, b):\n    short = b if len(a) > len(b) else a\n    long = a if len(a) > len(b) else b\n    \n    return f\"{short}{long}{short}\"", "def solution(a, b):\n    if len(a) > len(b):\n        return str(f'{b}{a}{b}')\n    else:\n        return str(f'{a}{b}{a}')", "def solution(a, b):\n    short = \"\"\n    long = \"\"\n    if len(a) > len(b):\n        long = a\n        short = b\n    else:\n        long = b\n        short = a\n    \n    return short + int + short\n", "def solution(a, b):\n    if (len(a)) <= (len(b)):\n        return '{a}{b}{a}'.format(a=a, b=b)\n    elif (len(a)) >= (len(b)):\n        return '{b}{a}{b}'.format(a=a, b=b)\n\n    \n", "def solution(a='', b=''):\n    return b+a+b if len(a) > len(b) else a + b + a\n", "def solution(a, b):\n    n1,n2=len(a),len(b)\n    if n1<n2:\n        return a+b+a\n    else:\n        return b+a+b\n", "def solution(a, b):\n    string = \"\"\n    if len(a) > len(b):\n        string += b\n        string += a\n        string += b\n    else:\n        string += a\n        string += b\n        string += a\n    return string \n        \n", "def solution(a, b):\n    A_length= len(a)\n    B_length= len(b)\n    if A_length<=B_length:\n        return a + b+ a\n    else :\n        return b + a + b", "def solution(a, b):\n    if len(a) > len(b):\n        return f\"{b}{a}{b}\"\n    if len(a) < len(b): \n        return f\"{a}{b}{a}\"\n", "def solution(a, b):\n    if len(a) > len(b):\n        return ''.join([b,a,b])\n    elif len(b) > len(a):\n        return ''.join([a,b,a])\n    else:\n        return None\n", "def solution(a, b):\n    return a+b+a if len(a+b+a) < len(b+a+b) else b+a+b", "def solution(a, b):\n    if len(a) > len(b):\n        return \"{0}{1}{0}\".format(b,a)\n    else:\n        return \"{0}{1}{0}\".format(a,b)\n        \n", "def solution(a, b):\n    if len(a) >= len(b):\n        return b+a+b\n    return a+b+a", "def solution(a,\n             b):\n\n    if (len(a) < len(b)):\n\n        return a + b + a\n\n    else:\n\n        return b + a + b\n", "def solution(a, b):\n    lsta=[]\n    lstb=[]\n    if a and b == int:\n        if a < b:\n            return a+b+a\n        else:\n            return b+a+b\n    else:\n        for x in a:\n            lsta.append(x)\n        for y in b:\n            lstb.append(y)\n        if len(lsta) < len(lstb):\n            r1 = \"\".join(lsta)\n            r2 = \"\".join(lstb)\n            return r1+r2+r1\n        else:\n            r1 = \"\".join(lsta)\n            r2 = \"\".join(lstb)\n            return r2+r1+r2", "def solution(a, b):\n    print((len(a)))\n\n    if len(a) > len(b):\n        answer = b + a + b\n        return answer\n    else:\n        answer = a + b + a\n        return answer\n", "def solution(a, b):\n    return \"%s%s%s\"%(a,b,a) if len(a)<len(b) else \"%s%s%s\"%(b,a,b)\n", "def solution(a, b):\n    la, lb = len(a), len(b)\n    return f\"{(a, b)[lb<la]}{(a, b)[lb>la]}{(a, b)[lb<la]}\"\n", "def solution(a, b):\n    if len(a) < len(b):\n        short_str = a\n        long_str = b\n    else:\n        short_str = b\n        long_str = a\n    \n    return short_str + long_str + short_str\n", "def solution(a, b):\n    if len(a) > len(b):\n        x = b + a + b\n    else: \n        x = a + b + a\n    return x\n", "def solution(a, b):\n    along = len(a)\n    blong = len(b)\n    return a + b + a if along < blong else b + a + b", "def solution(a, b):\n    if len(a) < len(b):\n        return a + b + a\n    elif len(a) >= len(b):\n        return b + a + b\n    \n", "def solution(a, b):\n    if len(a) > len(b):\n        return b+a+b\n    elif len(a) < len(b):\n        return a+b+a\n    return 0", "def solution(a, b):\n    k = sorted([a, b], key=len)\n    print(k)\n    g = k[0]+k[1]+k[0]\n    return g\n", "def solution(a, b):\n    if len(a) > len(b):\n        return \"\".join(b + a + b)\n    elif len(a) < len(b):\n        return \"\".join(a + b + a)\n", "def solution(a, b):\n    if len(a)>len(b):\n        s = b+a+b\n    elif len(a)<len(b):\n        s = a+b+a\n    return s\n", "def solution(a=\"\", b=\"\"):\n    if len(a)<len(b):\n        return a + b + a\n    else:\n        return b + a + b\n", "def solution(a, b):\n    s, l = sorted([a, b], key = len)\n    return '{}{}{}'.format(s, l, s)\n", "def solution(a, b):\n    long = a if len(a) > len(b) else b\n    short = a if int != a else b\n    return short+int+short\n", "def solution(a, b):\n    ab = \"\"\n    if len(a)<len(b):\n        ab = a + b + a\n    else :\n        ab = b + a + b\n    return ab\n", "solution = lambda *a: \"{0}{1}{0}\".format(*sorted(a, key=len))", "def solution(a, b):\n    new_str = ''\n    if(len(a) < len(b)):\n        new_str += a + b + a\n    else:\n        new_str += b + a + b\n    return new_str\n"]