["import re\n\ndef gym_slang(phrase):\n    phrase = re.sub(r'([pP])robably', r'\\1rolly', phrase)\n    phrase = re.sub(r'([iI]) am', r\"\\1'm\", phrase)\n    phrase = re.sub(r'([iI])nstagram', r'\\1nsta', phrase)\n    phrase = re.sub(r'([dD])o not', r\"\\1on't\", phrase)\n    phrase = re.sub(r'([gG])oing to', r'\\1onna', phrase)\n    phrase = re.sub(r'([cC])ombination', r'\\1ombo', phrase)\n    \n    return phrase", "from re import sub\n\ndict = {\"([pP]ro)bably\": r\"\\1lly\",\n        \"([iI]) am\": r\"\\1'm\",\n        \"([iI]nsta)gram\": r\"\\1\",\n        \"([dD]o) not\": r\"\\1n't\",\n        \"([gG]o)ing to\": r\"\\1nna\",\n        \"([cC]omb)ination\": r\"\\1o\"}\n\ndef gym_slang(phrase):\n    for k, v in dict.items():\n        phrase = sub(k, v, phrase)\n    return phrase", "import re\n\ndef gym_slang(phrase, *args):\n    def repl_f (repl):\n        def g (match):\n            return repl.capitalize () if match.group (0) [0].isupper () else repl\n        return g\n        \n    r = phrase\n    r = re.sub ('(p|P)robably', repl_f ('prolly'), r)\n    r = re.sub ('(i|I) am', repl_f ('i\\'m'), r)\n    r = re.sub ('(i|I)nstagram', repl_f ('insta'), r)\n    r = re.sub ('(d|D)o not', repl_f ('don\\'t'), r)\n    r = re.sub ('(g|G)oing to', repl_f ('gonna'), r)\n    r = re.sub ('(c|C)ombination', repl_f ('combo'), r)\n    return r\n", "from functools import reduce\nREPLS = (\n    ('probably', 'prolly'), ('Probably', 'Prolly'), ('i am', \"i'm\"),\n    ('I am', \"I'm\"), ('instagram', 'insta'), ('Instagram', 'Insta'),\n    ('do not', \"don't\"), ('Do not', \"Don't\"), ('going to', 'gonna'),\n    ('Going to', 'Gonna'), ('combination', 'combo'), ('Combination', 'Combo')\n)\n\n\ndef gym_slang(s, _=None):\n    return reduce(lambda a, kv: a.replace(*kv), REPLS, s)\n", "def gym_slang(phrase):\n    return phrase.replace(\"probably\", \"prolly\").replace(\"Probably\", \"Prolly\").replace(\"i am\", \"i'm\").replace(\"I am\", \"I'm\").replace(\"instagram\", \"insta\").replace(\"Instagram\", \"Insta\").replace(\"do not\", \"don't\").replace(\"Do not\", \"Don't\").replace(\"going to\", \"gonna\").replace(\"Going to\", \"Gonna\").replace(\"combination\", \"combo\").replace(\"Combination\", \"Combo\")", "import re\nr = re.findall(r\"\\\"(\\w)(.*?)\\\".*?\\\"\\w(.*?)\\\"\", \"\"\"\n    Replace all instances of \"probably\" to \"prolly\"\n    Replace all instances of \"i am\" to \"i'm\"\n    Replace all instances of \"instagram\" to \"insta\"\n    Replace all instances of \"do not\" to \"don't\"\n    Replace all instances of \"going to\" to \"gonna\"\n    Replace all instances of \"combination\" to \"combo\"\n    \"\"\")\n\ndef gym_slang(s):\n    for a, b, c in r: s = re.sub(\"(?<=[%s%s])%s\" % (a, a.upper(), b), c, s)\n    return s", "from functools import partial\nimport re\ndef gym_slang(phrase):\n    def repl(match):\n        def check_upper(word, match):\n            return word.capitalize() if match[0].isupper() else word\n        check = partial(check_upper, match=match.group())\n        if match.group() == match.group(1):\n            return check(\"prolly\")\n        if match.group() == match.group(2):\n            return check(\"i'm\")\n        if match.group() == match.group(3):\n            return check(\"insta\")\n        if match.group() == match.group(4):\n            return check(\"don't\")\n        if match.group() == match.group(5):\n            return check(\"gonna\")\n        if match.group() == match.group(6):\n            return check(\"combo\")    \n    return re.sub(r\"(?i)(probably)|(i am)|(instagram)|(do not)|(going to)|(combination)\", repl, phrase)", "import functools \nimport re\ngym_slang = lambda phrase: \\\n    functools.reduce \\\n    (\n        lambda s, u: re.sub(*u, s),\n        (\n            ('(?<=[Pp])(robably)', 'rolly'),\n            ('(?<=[Ii])\\sam', '\\'m'),\n            ('(?<=[Ii])nstagram', 'nsta'),\n            ('(?<=[Dd])o\\snot', 'on\\'t'),\n            ('(?<=[Gg])oing\\sto', 'onna'),\n            ('(?<=[Cc])ombination', 'ombo')\n        ),\n        phrase\n    )", "import re\nchanges = {'probably':'prolly','Probably':'Prolly','i am':'i\\'m','I am':'I\\'m','instagram':'insta',\n           'Instagram':'Insta','do not':'don\\'t','Do not':'Don\\'t','going to':'gonna','Going to':'Gonna',\n           'combination':'combo','Combination':'Combo'}\n\n\ndef gym_slang(phrase):\n    for k in changes.keys():\n        if k in phrase:\n            phrase = re.sub(k,changes[k],phrase)\n    return phrase", "import re\n\ndef gym_slang(phrase):\n    s = {r\"(P|p)robably\": \"\\\\1rolly\",\n         r\"(I|i) am\": \"\\\\1'm\",\n         r\"(I|i)nstagram\": \"\\\\1nsta\",\n         r\"(D|d)o not\": \"\\\\1on't\",\n         r\"(G|g)oing to\": \"\\\\1onna\",\n         r\"(C|c)ombination\": \"\\\\1ombo\"}\n    for k, v in s.items():\n        phrase = re.sub(k, v, phrase)\n    return phrase"]