["def binary_pyramid(m,n):\n    return bin(sum(int(bin(i)[2:]) for i in range(m, n+1)))[2:]", "def binary_pyramid(m,n):\n    return '{:b}'.format(sum(map(int, map('{:b}'.format, range(m,n+1)))))", "def binary_pyramid(m,n):\n    return bin(int(sum(int(bin(i)[2:]) for i in range(m,n+1))))[2:]", "binary_pyramid=lambda m,n:bin(sum(int(bin(e)[2:]) for e in range(m,n+1)))[2:]", "def binary_pyramid(m,n):\n    return format(sum(int(format(i, 'b')) for i in range(m, n+1)), 'b')", "def binary_pyramid(m,n):\n    return bin(sum(eval(bin(i)[2:]) for i in range(m, n+1)))[2:]", "def binary_pyramid(m,n):\n    sm = 0\n    for i in range(m, n+1):\n        sm += int(\"{0:b}\".format(i))\n    return \"{0:b}\".format(sm)", "def binary_pyramid(m,n):\n    suma = []\n    for i in range(m,n+1):\n        suma.append(int(bin(i)[2:]))\n    return bin(sum(suma))[2:]", "def binary_pyramid(m,n):\n    return f\"{sum(int(f'{x:b}') for x in range(m, n+1)):b}\"", "binary_pyramid = lambda a, b: bin(sum(int(bin(n)[2:]) for n in range(a, b + 1)))[2:]"]