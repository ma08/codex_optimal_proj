["def human_years_cat_years_dog_years(x):\n    return [x, 24+(x-2)*4 if (x != 1) else 15, 24+(x-2)*5 if (x != 1) else 15]", "def human_years_cat_years_dog_years(human_years):\n    catYears = 0\n    dogYears = 0\n    if human_years == 1:\n        catYears += 15\n        dogYears += 15\n        return [human_years, catYears, dogYears]\n    elif human_years == 2:\n        catYears += 24\n        dogYears += 24\n        return [human_years, catYears, dogYears]\n    elif human_years > 2:\n        catYears += 24\n        dogYears += 24\n        years = human_years - 2\n        catYears += years*4\n        dogYears += years*5\n        return [human_years, catYears, dogYears]\n    return [0,0,0]", "def human_years_cat_years_dog_years(n):\n    cat_years = 15 + (9 * (n > 1)) + (4 * (n - 2) * (n > 2))\n    dog_years = 15 + (9 * (n > 1)) + (5 * (n - 2) * (n > 2))\n    return [n, cat_years, dog_years]", "def human_years_cat_years_dog_years(hy):\n    return [hy, 16 + 4 * hy, 14 + 5 * hy] if hy > 1 else [1,15,15]", "def human_years_cat_years_dog_years(human_years, dog_years = 15, cat_years = 15):\n    if human_years == 1:\n        pass\n    elif human_years == 2:\n        cat_years = dog_years = 24\n    else:\n        cat_years = 4 * human_years + 16\n        dog_years = 5 * human_years + 14\n    return [human_years,cat_years,dog_years]", "def human_years_cat_years_dog_years(h):\n    c,d=0,0\n    if h == 1:\n        c,d=15,15\n    elif h>=2:\n        c,d=24,24\n    for i in range(h-2,0,-1):\n        c += 4\n        d += 5        \n    return [h,c,d]", "def human_years_cat_years_dog_years(human_years):\n    catYears = 15\n    DogYears = 15\n    if human_years == 1:\n      return [human_years,catYears,DogYears] \n    elif human_years == 2:\n       return [human_years,catYears+9 , DogYears + 9]\n    elif human_years >= 3:\n          n = (human_years - 3)\n          s = (24) + (n*4) + 4\n          f = (24) + (n*5) + 5\n          return [human_years , s , f]\n", "def human_years_cat_years_dog_years(human_years):\n    if human_years > 2:cat_years = ((human_years - 2) * 4) + 24;dog_years = ((human_years - 2) * 5) + 24\n    elif human_years == 2:cat_years = 24;dog_years = 24\n    else:cat_years = 15;dog_years = 15\n    return [human_years,cat_years,dog_years]", "human_years_cat_years_dog_years = lambda h: [h] + [15*(h>=1)+9*(h>=2)+(h-2)*y*(h>2) for y in [4,5]] ", "def human_years_cat_years_dog_years(h):\n    return [h, 15 + 9 * (h >= 2) + 4 * max(h - 2, 0), 15 + 9 * (h >= 2) + 5 * max(h - 2, 0)]", "def human_years_cat_years_dog_years(years): \n    return [years, 16 + 4*years, 14 + 5*years] if years > 1 else [1, 15, 15]", "def human_years_cat_years_dog_years(human_years):\n    # Your code here\n    catYears = 0\n    dogYears = 0\n    \n    if human_years < 2:\n        catYears = human_years * 15\n        dogYears = catYears\n    elif human_years < 3:\n        catYears = 15 + 9\n        dogYears = catYears\n    else:\n        catYears = ((human_years -2) * 4) + 24\n        dogYears = ((human_years -2) * 5) + 24\n    return [human_years, catYears, dogYears]", "def human_years_cat_years_dog_years(human_years):\n  if human_years == 1: return [1, 15, 15]\n\n  years_after_2nd = human_years - 2\n  cat_years = 24 + 4*years_after_2nd\n  dog_years = 24 + 5*years_after_2nd\n  return [human_years, cat_years, dog_years]", "def human_years_cat_years_dog_years(human_years):\n    CAT_YEARS_FIRST = 14\n    DOG_YEARS_FIRST = 14\n    CAT_YEARS_SECOND = 8\n    DOG_YEARS_SECOND = 8\n    CAT_YEARS_THIRD = 4\n    DOG_YEARS_THIRD = 5\n    \n    if human_years == 1:\n        return [human_years, human_years + CAT_YEARS_FIRST, human_years + DOG_YEARS_FIRST]\n    elif human_years == 2:\n        return [human_years, human_years + CAT_YEARS_FIRST + CAT_YEARS_SECOND, human_years+DOG_YEARS_FIRST + DOG_YEARS_SECOND]\n    else: \n        return [human_years,CAT_YEARS_FIRST + CAT_YEARS_SECOND + CAT_YEARS_THIRD*(human_years-2)+2, DOG_YEARS_FIRST + DOG_YEARS_SECOND + DOG_YEARS_THIRD*(human_years-2)+2]", "from functools import partial\n\ndef human_years_cat_years_dog_years(human_years):\n    return [age_func(human_years) for age_func in (human_age, cat_age, dog_age)]\n\ndef critter_age(human_years, critter_years_multipliers):\n    critter_age = previous_year = 0\n    for year, multiplier in critter_years_multipliers:\n        is_older = human_years > year\n        years_difference = (year if is_older else human_years) - previous_year\n        critter_age += multiplier * years_difference\n        if not is_older:\n            break\n        previous_year = year\n    return critter_age\n            \ninfinity = float('inf')\n\nhuman_age = partial(critter_age, critter_years_multipliers=((infinity, 1),))\ncat_age = partial(critter_age, critter_years_multipliers=((1, 15),\n                                                          (2, 9),\n                                                          (infinity, 4)))\ndog_age = partial(critter_age, critter_years_multipliers=((1, 15),\n                                                          (2, 9),\n                                                          (infinity, 5)))\n", "def human_years_cat_years_dog_years(human_years):\n    ages = [0, 0, 0]\n    if human_years == 1:\n        ages[0] = 1\n        ages[1] = 15\n        ages[2] = 15\n    if human_years == 2:\n        ages[0] = 2\n        ages[1] = 24\n        ages[2] = 24\n    if human_years >= 3:\n        ages[0] = human_years\n        ages[1] = 24 + (human_years - 2) * 4\n        ages[2] = 24 + (human_years - 2) * 5\n    return ages", "def human_years_cat_years_dog_years(human_years):\n    if human_years==1: return [1,15,15];\n    if human_years==2: return [2,24,24];\n    return [human_years,(human_years-2)*4+24,(human_years-2)*5+24];", "def human_years_cat_years_dog_years(human_years):\n    \n    return [human_years, \\\n        15 if human_years == 1 else 24 + (human_years - 2)*4, \\\n        15 if human_years == 1 else 24 + (human_years - 2)*5]", "def human_years_cat_years_dog_years(human_years):\n    cat_years = 15 if human_years==1 else (15+9 if human_years==2 else 15+9+(human_years-2)*4)\n    dog_years = 15 if human_years==1 else (15+9 if human_years==2 else 15+9+(human_years-2)*5)\n    return [human_years,cat_years,dog_years]", "def human_years_cat_years_dog_years(human_years):\n    a = 15 + 9 * int(human_years >> 1 != 0)\n    return [human_years, a + 4 * max(0, (human_years - 2)), a + 5 * max(0, (human_years - 2))]", "def human_years_cat_years_dog_years(human_years):\n    cat_years = (lambda y:15+9*(0,1)[y-1>0]+4*(y-2)*(0,1)[y-2>0])(human_years)\n    dog_years = (lambda y:15+9*(0,1)[y-1>0]+5*(y-2)*(0,1)[y-2>0])(human_years)\n    return [human_years,cat_years,dog_years]", "def human_years_cat_years_dog_years(n):\n    return [n, 15 if n == 1 else 4 * (n + 4), 15 if n == 1 else 5 * n + 14]", "from functools import partial\n            \ninfinity = float('inf')\n\ndef human_years_cat_years_dog_years(human_years):\n    age = Age.from_human(human_years)\n    return [age.as_human, age.as_cat, age.as_dog]\n\nclass AgeConversionsMeta(type):\n\n    def __new__(meta, name, bases, namespace):\n        attr_name = namespace.pop('_attr_name_', 'normalized_age')\n        conversions = namespace.pop('_conversions_', {})\n        if conversions:\n            def as_(self, year_to_multiplier):\n                age = getattr(self, attr_name)\n                converted_age = previous_year = 0\n                for year, multiplier in year_to_multiplier:\n                    is_older = age > year\n                    years_difference = (year if is_older else age) - previous_year\n                    converted_age += multiplier * years_difference\n                    if not is_older:\n                        break\n                    previous_year = year\n                return converted_age\n            \n            for name, year_to_multiplier in conversions.items():\n                namespace['from_' + name] = classmethod(partial(meta.__from, year_to_multiplier=year_to_multiplier))\n                namespace['as_' + name] = property(partial(as_, year_to_multiplier=year_to_multiplier))\n        \n        def __init__(self, normalized_age):\n            setattr(self, attr_name, normalized_age)\n        namespace['__init__'] = __init__\n\n        return super().__new__(meta, name, bases, namespace)\n            \n    def __from(cls, age, year_to_multiplier):\n        normalized_age = previous_year = 0\n        for year, multiplier in year_to_multiplier:\n            years_difference = year - previous_year\n            max_age_in_range = multiplier * years_difference\n            if age <= max_age_in_range:\n                normalized_age += age / multiplier\n                break\n            age -= max_age_in_range\n            previous_year = year\n            normalized_age += years_difference\n        return cls(normalized_age)\n            \nclass Age(metaclass=AgeConversionsMeta):\n    _conversions_ = {\n        'human': ((infinity, 1),),\n        'cat': (\n            (1, 15),\n            (2, 9),\n            (infinity, 4)),\n        'dog': (\n            (1, 15),\n            (2, 9),\n            (infinity, 5))\n    }", "def human_years_cat_years_dog_years(hy):\n    cy = 15 + (hy > 1) * (4 * hy + 1)\n    dy = 15 + (hy > 1) * (5 * hy - 1)\n    return [hy, cy, dy]", "def human_years_cat_years_dog_years(human_years):\n    cat = sum([15,9,(human_years-2)*4][:human_years])\n    dog = sum([15,9,(human_years-2)*5][:human_years])\n    return [human_years, cat, dog]", "human_years_cat_years_dog_years=lambda n:[n]+[15*(n>0)+9*(n>1)+d*max(0,n-2)for d in(4,5)]", "human_years_cat_years_dog_years=lambda h: [1,15,15] if h==1 else [2,24,24] if h==2 else [h,24+4*(h-2),24+5*(h-2)]", "def human_years_cat_years_dog_years(human_years):\n    cat_years, dog_years = 0, 0\n    if human_years > 1:\n        cat_years = 24 + (human_years - 2) * 4\n        dog_years = 24 + (human_years - 2) * 5\n    else:\n        cat_years = dog_years = 15      \n    return [human_years, cat_years, dog_years]", "def human_years_cat_years_dog_years(y):\n    return [y,24+4*(y-2),24+5*(y-2)] if y>=2 else [y,y*9+6,y*9+6]", "YRS = (15, 15 + 9, (4, 5))\n\ndef human_years_cat_years_dog_years(human_years):\n    return [human_years, *({0: YRS[0]}.get(human_years - 1, k * (human_years - 2) + YRS[1]) for k in YRS[-1])]\n", "def human_years_cat_years_dog_years(human_years):\n    return [human_years, *(dict(enumerate((15, 24))).get(human_years - 1, k * (human_years - 2) + 24) for k in (4, 5))]", "def human_years_cat_years_dog_years(y):\n    return[y,16+4*y,14+5*y]if y>1else[1,15,15]", "def human_years_cat_years_dog_years(h):\n    cat=sum([15 if x==0 else 9 if x==1 else 4 for x in range(h)])\n    return [h,cat,(cat+h-2) if h>2 else cat]", "def human_years_cat_years_dog_years(h):\n    l=list(range(1,h+1))\n    return [h,15*len(l[0:1])+9*len(l[1:2])+4*len(l[2:]),15*len(l[0:1])+9*len(l[1:2])+5*len(l[2:])]\n", "def human_years_cat_years_dog_years(human_years):\n    catYears = 15\n    if human_years == 2:\n        catYears = 15 + 9\n    if human_years >= 3:\n        catYears = 24 + (human_years - 2) * 4\n        \n    dogYears = 15\n    if human_years == 2:\n        dogYears = 15 + 9\n    if human_years >= 3:\n        dogYears = 24 + (human_years - 2) * 5\n    return [human_years,catYears,dogYears]", "def human_years_cat_years_dog_years(human_years):\n    # Your code here\n    return [\n        human_years,\n        sum([15 if x == 1 else (9 if x == 2 else 4) for x in range(1,human_years+1)]),\n        sum([15 if x == 1 else (9 if x == 2 else 5) for x in range(1,human_years+1)])\n    ]", "def human_years_cat_years_dog_years(human_years):\n    return [\n        human_years, \n        15 + 9 * (1 % human_years) + 4 * (human_years - 2) * (1 % human_years), \n        15 + 9 * (1 % human_years) + 5 * (human_years - 2) * (1 % human_years)\n    ]\n\ndef human_years_cat_years_dog_years2(human_years):\n    return [\n        human_years, \n        15 if human_years < 2 else 15 + 9 + 4 * (human_years - 2), \n        15 if human_years < 2 else 15 + 9 + 5 * (human_years - 2)\n    ]\n\ndef human_years_cat_years_dog_years1(human_years):\n    cat_years = 15\n    dog_years = 15\n    if human_years >= 2:\n        cat_years += 9 + 4 * (human_years - 2)\n        dog_years += 9 + 5 * (human_years - 2)\n    return [human_years, cat_years, dog_years]", "from typing import List\n\ndef human_years_cat_years_dog_years(human_years: int) -> List[int]:\n    \"\"\" Get respective ages for human, cats, dogs. \"\"\"\n    __get_animals_years_multiplier = lambda _def: [{1: 15, 2: 9}.get(_it, _def) for _it in list(range(1, human_years + 1))]\n    return [\n        human_years,\n        sum(__get_animals_years_multiplier(4)),\n        sum(__get_animals_years_multiplier(5)),\n    ]", "def human_years_cat_years_dog_years(human_years):\n    if human_years == 1:\n        cat_years, dog_years = 15, 15\n    elif human_years == 2:\n        cat_years, dog_years = 24, 24\n    else:\n        cat_years = 24 + ((human_years - 2) * 4)\n        dog_years = 24 + ((human_years - 2) * 5)\n    return [human_years, cat_years, dog_years]", "def human_years_cat_years_dog_years(human_years):\n    if human_years == 1:\n        dog = 15\n        cat = 15\n    elif human_years == 2:\n        dog = 24\n        cat = 24\n    else:\n        dog = 24 + (int(human_years - 2) * 5)\n        cat = 24 + (int(human_years - 2) * 4)\n    return [human_years,cat,dog]", "def human_years_cat_years_dog_years(human_years):\n    cat_years = 0\n    for i in range(1,human_years+1):\n        cat_years += {1: 15, 2: 9}.get(i,4)\n        print(i)\n    return [human_years, cat_years, cat_years+(human_years - 2 if human_years >1 else 0)]", "def human_years_cat_years_dog_years(human_years):\n    if human_years == 1:\n        catYears = 15\n        dogYears = 15\n    elif human_years == 2:\n        catYears = 24\n        dogYears = 24\n    elif human_years > 2:\n        catYears = 24 + ((human_years - 2)*4)\n        dogYears = 24 + ((human_years - 2)*5)\n    years = []\n    years.append(human_years)\n    years.append(catYears)\n    years.append(dogYears)\n    return years", "def human_years_cat_years_dog_years(human_years):\n    if human_years >= 1:\n        cat_years = 15\n        dog_years = 15\n    if human_years >= 2:\n        cat_years += 9\n        dog_years += 9\n        for i in range(human_years - 2):\n            cat_years += 4\n            dog_years += 5\n    return [human_years, cat_years, dog_years]", "def human_years_cat_years_dog_years(human_years):\n    if human_years == 1:\n        dog_years= 15\n        cat_years= 15\n    if human_years == 2:\n        dog_years = 24\n        cat_years = 24\n    if human_years > 2:\n        dog_years = 24 + ((human_years-2)* 5)\n        cat_years = 24 + ((human_years-2) * 4)\n    return [human_years,cat_years,dog_years]", "def human_years_cat_years_dog_years(human_years):\n    cat_years = 15 + 9 * (human_years >=2) + 4 * (human_years-2) * (human_years >=3)\n    dog_years = 15 + 9 * (human_years >=2) + 5 * (human_years-2) * (human_years >=3)\n    return [human_years,cat_years,dog_years]", "human_years_cat_years_dog_years = lambda y:[y,y*4+(16 if y>1 else 11 if y==1 else 0),y*5+(14 if y>1 else 10 if y==1 else 0)]", "def human_years_cat_years_dog_years(human_years):\n    \n    if human_years>=2:\n        \n        catYears = 15 + 9 + (human_years-2)*4\n        dogYears = 15 + 9 + (human_years-2)*5\n    \n        return [human_years,catYears,dogYears]\n    else:\n         return [human_years,15,15]", "def human_years_cat_years_dog_years(human_years):\n    catYears = dogYears = 0\n    if human_years == 1:\n        catYears = dogYears = 15\n    elif human_years == 2:\n        catYears = dogYears = 24\n    else:\n        catYears = 24 + (4 * (human_years - 2))\n        dogYears = 24 + (5 * (human_years - 2))\n    return [human_years, catYears, dogYears]", "def human_years_cat_years_dog_years(human_years):\n    catYears = 0\n    dogYears = 0\n    humanYears = human_years\n    for i in range(human_years):\n        if i == 0:\n            catYears = catYears + 15\n            dogYears = dogYears + 15\n        \n        if i == 1:\n            catYears = catYears + 9\n            dogYears = dogYears + 9\n            \n        if i > 1:\n            catYears = catYears + 4\n            dogYears = dogYears + 5\n            \n    return [humanYears,catYears,dogYears]\n", "def human_years_cat_years_dog_years(human_years):\n    c = 15\n    d = 15    \n    if human_years == 2:\n        c = 15 + 9\n        d = 15 + 9\n    if human_years > 2:\n        c = 24 + ((human_years-2) * 4)\n        d = 24 + ((human_years-2) * 5)\n    return [human_years,c,d]", "def human_years_cat_years_dog_years(hy):\n    return [hy, (15 if hy==1 else 24 if hy==2 else 24+(hy-2)*4), (15 if hy==1 else 24 if hy==2 else 24+(hy-2)*5)]", "def human_years_cat_years_dog_years(human_years):\n    cat = 0 \n    dog = 0\n    if human_years == 1:\n        cat, dog = 15, 15\n        return [human_years, cat, dog] \n    elif human_years == 2:\n        cat, dog = 24, 24\n        return [human_years, cat, dog]\n    else:\n        cat = 24 + ((human_years-2)*4)\n        dog = 24 + ((human_years-2)*5)\n        return [human_years, cat, dog]", "def human_years_cat_years_dog_years(human_years):\n    animal_first_two_years = 15 if human_years > 0 else 0\n    animal_first_two_years += 9 if human_years > 1 else 0\n    animal_last_years = max(0, human_years - 2)\n    return [\n        human_years,\n        animal_first_two_years + 4 * animal_last_years,\n        animal_first_two_years + 5 * animal_last_years,\n    ]", "def human_years_cat_years_dog_years(human_years):\n    b = 0\n    c = 0\n    if human_years == 1:\n        b = 15\n        c = 15\n    elif human_years == 2:\n        b = 24\n        c = 24\n    else:\n        b = 24 + (human_years-2)*4\n        c = 24 + (human_years-2)*5\n    return [human_years,b,c]", "def human_years_cat_years_dog_years(human_years):\n    # Your code here\n    dog_years=15+min((human_years-1),1)*9+max((human_years-2),0)*5\n    cat_years=15+min((human_years-1),1)*9+max((human_years-2),0)*4\n    return [human_years,cat_years,dog_years]", "def human_years_cat_years_dog_years(hy):\n    if hy == 1:\n        return [1, 15, 15]\n    elif hy == 2:\n        return [2, 24, 24]\n    elif hy > 2:\n        return [hy, 24 + 4 * (hy - 2), 24 + 5 * (hy - 2)]\n    return [0, 0, 0]", "def human_years_cat_years_dog_years(hy):\n    if hy == 1:\n        return [1, 15, 15]\n    elif hy == 2:\n        return [2, 24, 24]\n    else:\n        return [hy, 24 + 4 * (hy - 2), 24 + 5 * (hy - 2)]\n    return [0, 0, 0]", "def human_years_cat_years_dog_years(human):\n    if human == 1:\n        return [human,15,15]\n    if human == 2:\n        return [human,24,24]\n    if human >= 3:\n        return [human,((human-2)*4)+24,((human-2)*5)+24]", "def human_years_cat_years_dog_years(human):\n    cat = 0\n    dog = 0\n    if human >= 1:\n        cat += 15\n        dog += 15\n    if human >= 2:\n        cat += 9\n        dog += 9\n    if human >= 3:\n        n = human - 2\n        cat += n * 4\n        dog += n * 5\n    return [human,cat,dog]", "def human_years_cat_years_dog_years(human_years):\n    if human_years == 1:\n        cat_years = dog_years = 15\n    if human_years == 2:\n        cat_years = dog_years = 15 + 9\n    if human_years > 2:\n        cat_years = 24 + (4 * (human_years - 2))\n        dog_years =  24 + (5 * (human_years - 2))\n    return [human_years, cat_years, dog_years]", "def human_years_cat_years_dog_years(hy):\n    base = 15 * (hy >= 1) + 9 * (hy >= 2)\n    rest = max(0, hy - 2)\n    \n    cy = base + 4 * rest\n    dy = base + 5 * rest\n    \n    return [hy, cy, dy]", "def human_years_cat_years_dog_years(h):\n    if h == 1:\n        return [h, 15, 15]\n    if h == 2:\n        return [h, 24, 24]\n    return [h, 24 + (h - 2) * 4, 24 + (h - 2) * 5]\n", "from itertools import accumulate, repeat\n\ndef human_years_cat_years_dog_years(years):\n    if years >= 2:\n        return [years, 4 * (years - 2) + 24, 5 * (years - 2) + 24]\n    elif years == 1:\n        return [1, 15, 15]", "def human_years_cat_years_dog_years(human_years):\n    cat_years = 0\n    dog_years = 0\n    for y in range(0,human_years):\n        if y == 0:\n            cat_years += 15\n            dog_years += 15\n        elif y == 1:\n            cat_years += 9\n            dog_years += 9\n        else:\n            cat_years += 4\n            dog_years += 5\n    return [human_years,cat_years,dog_years]", "def human_years_cat_years_dog_years(human_years):\n    cat_years  = 0\n    dog_years = 0\n    if human_years < 2:\n        cat_years += 15\n        dog_years += 15\n    elif human_years == 2:\n        cat_years += 15 + 9\n        dog_years += 15 + 9\n    else:\n        cat_years += (15 + 9) + (human_years - 2) * 4\n        dog_years += (15 + 9) + (human_years - 2) * 5\n    return [human_years, cat_years, dog_years]", "def human_years_cat_years_dog_years(human_years):\n    if human_years == 1:\n        return [1, 15, 15]\n    elif human_years == 2:\n        return [2, 24, 24]\n    else:\n        return [human_years, (human_years-2)*4 + 24, (human_years-2)*5 + 24]\n    \n    32 ", "def human_years_cat_years_dog_years(human_years):\n    catYears = 15\n    dogYears = 15\n    if human_years == 1:\n        return [human_years,catYears,dogYears]\n    elif human_years == 2:\n        return [human_years,catYears+9,dogYears+9]\n    else:\n        return [human_years,catYears+9+(human_years-2)*4,dogYears+9+(human_years-2)*5]", "def human_years_cat_years_dog_years(h):\n    cat, dog = 0, 0\n    if h>=1:\n        cat += 15\n        dog += 15\n    if h>=2:\n        cat += 9\n        dog += 9\n    if h >=3:\n        cat += 4*(h-2)\n        dog += 5*(h-2)\n    return [h,cat,dog]\n", "def human_years_cat_years_dog_years(human_years):\n    if human_years == 1:\n        cat_years = 15\n        dog_years = 15\n    elif human_years == 2:\n        cat_years = 24\n        dog_years = 24\n    elif human_years == 3:\n        cat_years = 28\n        dog_years = 29\n    else:\n        cat_years = 28 + (human_years-3)*4\n        dog_years = 29 + (human_years-3)*5\n    return [human_years, cat_years, dog_years]", "def human_years_cat_years_dog_years(human_years):\n    cat_years = 15 * (human_years >= 1) + 9 * (human_years >= 2) + 4 * (human_years>2) * (human_years - 2)\n    dog_years = 15 * (human_years >= 1) + 9 * (human_years >= 2) + 5 * (human_years>2) * (human_years - 2)\n    return [human_years, cat_years, dog_years]", "def human_years_cat_years_dog_years(human_years):\n    a=human_years\n    if human_years==1:\n        d=15\n        c=15\n    elif human_years==2:\n        d=24\n        c=24\n    else:\n        d=24+abs(human_years-2)*5\n        c=24+abs(human_years-2)*4\n    \n    return [a,c,d]", "def human_years_cat_years_dog_years(human_years):\n    print(human_years)\n    cat_years, dog_years= 0,0\n    if human_years == 1: \n      cat_years=15 \n      dog_years=15 \n    if human_years==2: \n      cat_years=24\n      dog_years=24\n    if human_years>=3: \n      cat_years += 4*(human_years - 2) + 24\n      dog_years += 5*(human_years - 2) + 24\n    return [human_years, cat_years,dog_years]", "def human_years_cat_years_dog_years(human_years):\n    print(human_years)\n    cat_years, dog_years = 0,0\n    if human_years == 1:\n        cat_years += 15\n        dog_years += 15\n    elif human_years == 2:\n        cat_years += 24\n        dog_years += 24\n    elif human_years >= 3:\n        cat_years += 4*(human_years - 2) + 24\n        dog_years += 5*(human_years - 2) + 24\n    \n    return [human_years,cat_years,dog_years]", "def human_years_cat_years_dog_years(human_years):\n    if human_years==1:\n        cat_years=15\n        dog_years=15\n    elif human_years==2:\n        cat_years=15+9\n        dog_years=15+9\n    elif human_years>2:\n        cat_years=24+(human_years-2)*4\n        dog_years=24+(human_years-2)*5\n    else:\n        None\n    \n    return [human_years,cat_years,dog_years]", "def human_years_cat_years_dog_years(human_years):\n    if human_years ==1:\n        catYears,dogYears = 15,15\n    elif human_years == 2:  \n        catYears,dogYears  = 24,24\n    else:\n        catYears = 24 + (human_years-2)*4\n        dogYears = 24 + (human_years-2)*5\n    return  [human_years,catYears,dogYears] \n", "def human_years_cat_years_dog_years(human_years):\n    # Your code here\n    if human_years == 1:\n        cat_y, dog_y = 15, 15\n    elif human_years == 2:\n        cat_y, dog_y = 24, 24\n    else:\n        cat_y=24 + 4*(human_years-2)\n        dog_y=24 + 5*(human_years-2)\n    return [human_years, cat_y, dog_y]", "def human_years_cat_years_dog_years(human_years):\n    if human_years == 1:\n        cat, dog = 15, 15\n    if human_years == 2:\n        cat, dog = 24, 24\n    if human_years >= 3:\n        cat = 24 + (human_years - 2) * 4\n        dog = 24 + (human_years - 2) * 5\n    return [human_years, cat, dog]", "def human_years_cat_years_dog_years(h):\n    # Your code here    \n    return [h,((h-2)*4)+24 if h>=2 else 15 if h==1 else 24,((h-2)*5)+24 if h>=2 else 15 if h==1 else 24]", "def human_years_cat_years_dog_years(human_years):\n    # Your code here\n    cat_years = 15 + 9*(human_years>=2) + 4*(human_years>=3)*(human_years-2)\n    dog_years = cat_years + (human_years>2)*(human_years-2)\n    return [human_years, cat_years, dog_years]", "def human_years_cat_years_dog_years(h):\n    if h is 1:\n        c = 15\n        d = 15\n    elif h is 2:\n        c = 24\n        d = 24\n    else:\n        c = 24 + (h - 2) * 4\n        d = 24 + (h - 2) * 5\n    return [h,c,d]", "def human_years_cat_years_dog_years(human_years):\n    \n    years = [0,0,0]\n    \n    for i in range(0,human_years):\n        if years[0] == 0:\n            years[0] += 1\n            years[1] += 15\n            years[2] += 15 \n            \n        elif years[0] == 1:\n            years[0] += 1\n            years[1] += 9\n            years[2] += 9 \n            \n        else:\n            years[0] += 1\n            years[1] += 4\n            years[2] += 5\n\n            \n    return years\n", "def human_years_cat_years_dog_years(human_years):\n    if human_years > 2:\n        cat_years = 15+9+(human_years-2)*4\n        dog_years = 15+9+(human_years-2)*5\n    elif human_years > 1:\n        cat_years = 15+9\n        dog_years = 15+9\n    else:\n        cat_years = 15\n        dog_years = 15\n    return [human_years,cat_years,dog_years]", "def human_years_cat_years_dog_years(human_years):\n    # Your code here\n    caty = 0\n    for i in range(0, human_years):\n        if i == 0:\n            caty += 15\n        elif i == 1:\n            caty += 9\n        else: \n            caty += 4\n    dogy = 0\n    for i in range(0, human_years):\n        if i == 0:\n            dogy += 15\n        elif i == 1:\n            dogy += 9\n        else: \n            dogy += 5\n            \n        \n    return [human_years, caty, dogy]", "def human_years_cat_years_dog_years(human_years):\n    return [1, 15, 15] if human_years == 1 else [2, 24, 24] if human_years == 2 else [human_years, (human_years - 2) * 4 + 24, (human_years - 2) * 5 + 24]\n", "def human_years_cat_years_dog_years(y):\n    c=d=15\n    if y > 1: c=d=24\n    if y > 2: c, d = c+4*(y-2), d+5*(y-2)\n    return [y, c, d]", "def human_years_cat_years_dog_years(human_years):\n    return [human_years, 15, 15] if human_years <= 1 else \\\n        [human_years, 24, 24] if human_years <= 2 else \\\n        [human_years, 24+(human_years-2)*4, 24+(human_years-2)*5]", "def human_years_cat_years_dog_years(human_years):\n    return [\n        human_years, \n        (15 + (9 if human_years >= 2 else 0) + ((human_years - 2) * 4 if human_years >= 2 else 0)),\n        (15 + (9 if human_years >= 2 else 0) + ((human_years - 2) * 5 if human_years >= 2 else 0)),\n    ]", "def human_years_cat_years_dog_years(y):\n    if y==1:\n        return [1,15,15]\n    elif y==2:\n        return [2,24,24]\n    else:\n        return [y,24+(y-2)*4,24+(y-2)*5]", "def human_years_cat_years_dog_years(human_years):\n    f = 15\n    s = 9\n    if human_years == 1:\n        return [human_years, f, f]\n    elif human_years == 2:\n        return [human_years, f+s, f+s]\n    else:\n        return [human_years, f+s+(human_years-2)*4, f+s+(human_years-2)*5]", "def human_years_cat_years_dog_years(human_years):\n    return [human_years, (15 if human_years == 1 else 24 if human_years == 2 else 4 * (human_years - 2) + 24), (15 if human_years == 1 else 24 if human_years == 2 else 5 * (human_years - 2) + 24)]", "def human_years_cat_years_dog_years(human):\n    def animal(h, p):\n        r = 0\n        for i in range(1,h+1):\n            if i == 1: r+= 15\n            elif i == 2: r+= 9\n            else: r+=p\n        return r\n    \n    return [human,animal(human,4),animal(human,5)]", "def human_years_cat_years_dog_years(human_years):\n    return [human_years, 15 if human_years==1 else 15+9 if human_years==2 else 15+9+((human_years-2)*4)\n            ,15 if human_years==1 else 15+9 if human_years==2 else 15+9+((human_years-2)*5)]", "def human_years_cat_years_dog_years(human_years):\n    dog_years = cat_years = 15\n    if (human_years > 1): dog_years = cat_years = 24\n    if human_years > 2:\n        dog_years += 5 * (human_years - 2)\n        cat_years += 4 * (human_years - 2)\n    return [human_years,cat_years,dog_years]", "def human_years_cat_years_dog_years(h):\n    return [h,15+9*int(h>1)+4*(h-2)*int(h>2),15+9*int(h>1)+5*(h-2)*int(h>2)]", "def human_years_cat_years_dog_years(yr): return ['one-liner', [1, 15, 15], [2, 24, 24]][yr] if yr in range(1,3) else [yr, ((yr-2)*4)+24, ((yr-2)*5)+24]", "def human_years_cat_years_dog_years(human_years):\n    cat_years = 15 * (human_years >= 1) + 9 * (human_years >= 2) + 4 * max(human_years - 2, 0)\n    return [human_years, cat_years, cat_years + max(human_years - 2, 0)]", "human_years_cat_years_dog_years =  lambda h: [h, 15 + (h>=2)*(9 + (h-2)*4),15 + (h>=2)*(9 + (h-2)*5)]\n", "def human_years_cat_years_dog_years(human):\n    if human >= 1:\n        cat = 15\n        dog = 15\n    if human  >= 2:\n        cat += 9\n        dog += 9\n    if human >= 3:\n        cat += 4*(human-2)\n        dog += 5*(human-2)\n        \n    return [human,cat,dog]", "def human_years_cat_years_dog_years(human_years):\n    cat_years, dog_years = 15, 15\n\n    if human_years > 1:\n        cat_years, dog_years = cat_years + 9, dog_years + 9\n\n    if human_years > 2:\n        cat_years = cat_years + (4 * (human_years - 2))\n        dog_years = dog_years + (5 * (human_years - 2))\n    return [human_years, cat_years, dog_years]", "def human_years_cat_years_dog_years(human_years):\n    cat_years=0\n    dog_years=0\n    human = human_years\n    if human >= 1:\n        cat_years = 15\n        dog_years = 15\n        human = human - 1\n    if human >= 1:\n        cat_years += 9\n        dog_years += 9\n        human = human - 1\n    if human >= 1:\n        cat_years += human * 4\n        dog_years += human * 5\n    return [human_years,cat_years,dog_years]"]