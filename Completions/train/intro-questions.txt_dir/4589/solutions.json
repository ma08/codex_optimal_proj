["def solution(items, index, default_value):\n    try:\n        return items[index]\n    except IndexError:\n        return default_value", "def solution(items, index, default_value):\n    return items[index] if -len(items) <= index < len(items) else default_value\n", "def solution(items, index, default_value):\n    try:\n        return items[index]\n    except:\n        return default_value", "def solution(items, index, default_value):\n    try:\n        return items[index]\n    except LookupError:\n        return default_value\n", "def solution(items, index, default_value):\n    return items[index] if abs(index) <= len(items)  else default_value", "def solution(items, index, default_value):\n    print((items, index, default_value))\n    if  index>=-len(items) and index<len(items) :return (items[index])\n    else: return default_value\n    \n    \n", "def solution(items: list, index: int, default_value):\n    try:\n        return items[index]\n    except IndexError:\n        return default_value\n", "solution=lambda a,i,v:(v,a[i%len(a)])[abs(i)<=len(a)]", "def solution(items, index, default_value):\n    return items[index] if abs(index + .5) + .5 <= len(items) else default_value", "def solution(items, index, default_value):\n    return items[index] if abs(index + .5) < len(items) + .5 else default_value"]