["class Solution:\n    def average(self, salary: List[int]) -> float:\n        salary.sort()\n        del salary[0]\n        del salary[-1]\n        return sum(salary)/len(salary)", "class Solution:\n    def average(self, salary: List[int]) -> float:\n        mx = 0\n        mn = 100005\n        sm = 0\n        n = len(salary) - 2\n        for i in salary:\n            if i > mx:\n                mx = i\n            if i < mn:\n                mn = i\n        print((mn , mx))\n        return ( sum(salary) - (mn+mx) )/ n\n    \n", "# class Solution:\n#     def average(self, salary: List[int]) -> float:\n#         maxs = 0\n#         mins = 10000000 \n#         sums = 0 \n#         for s in salary:\n#             sums += s\n#             maxs = max(maxs, s)\n#             mins = min(mins, s)\n#         return (sums -maxs -mins) / (len(salary) - 2)  # \u7528// \u9519\n            \n# ###\u7528python\u5185\u7f6e\u51fd\u6570\u5feb\u4e00\u70b9\n# class Solution:\n#     def average(self, salary: List[int]) -> float:\n#         maxs = max(salary)\n#         mins = min(salary) \n#         sums = sum(salary)\n#         return (sums -maxs -mins) / (len(salary) - 2)  # \u7528// \u9519\n    \n#copy other\nclass Solution:\n    def average(self, salary: List[int]) -> float:\n        salary.sort()\n        del salary[0]\n        del salary[-1]\n        return sum(salary)/len(salary)", "class Solution:\n    def average(self, salary: List[int]) -> float:\n        minSalary = min(salary)\n        maxSalary = max(salary)\n        total = sum(salary)\n        return (total - minSalary - maxSalary) / (len(salary) - 2)", "class Solution:\n    def average(self, salary: List[int]) -> float:\n        salary.sort()\n        salary.pop()\n        salary.pop(0)\n        return sum(salary)/len(salary)", "class Solution:\n    def average(self, salary: List[int]) -> float:\n        minSalary = None\n        maxSalary = None\n        s = 0\n        for n in salary:\n            s = s + n\n            if minSalary is None or n < minSalary:\n                minSalary = n\n            if maxSalary is None or n > maxSalary:\n                maxSalary = n\n        return (s - minSalary - maxSalary) * 1.0 / (len(salary) - 2)", "class Solution:\n    def average(self, salary: List[int]) -> float:\n        return (sum(salary)-min(salary)-max(salary))/(len(salary)-2)", "class Solution:\n    def average(self, salary: List[int]) -> float:\n        s = salary[:]\n        max_ind = 0\n        min_ind = 0\n        for i in range(1, len(s)):\n            if s[max_ind] < s[i]:\n                max_ind = i\n            elif s[min_ind] > s[i]:\n                min_ind = i\n        print((max_ind, min_ind))\n        if max_ind < min_ind:\n            del s[max_ind]\n            del s[min_ind - 1]\n        else:\n            del s[min_ind]\n            del s[max_ind - 1]\n        return sum(s) / len(s)\n", "class Solution:\n    def average(self, arr: List[int]) -> float:\n        return (sum(arr)-min(arr)-max(arr))/(len(arr)-2)", "class Solution:\n    def average(self, salary: List[int]) -> float:\n        salary.sort()\n        newSalaryList = salary[1:-1]\n        \n        numSalaries = len(newSalaryList)\n        \n        return sum(newSalaryList) / numSalaries"]