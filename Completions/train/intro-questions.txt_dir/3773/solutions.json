["def isValid(formula):\n  return not ( \\\n    (    1 in formula and     2 in formula) or \\\n    (    3 in formula and     4 in formula) or \\\n    (    5 in formula and not 6 in formula) or \\\n    (not 5 in formula and     6 in formula) or \\\n    (not 7 in formula and not 8 in formula))", "def isValid(formula):\n    if ((not 7 in formula) and (not 8 in formula)):\n        return False\n    if ((1 in formula) and (2 in formula)):\n        return False\n    if ((3 in formula) and (4 in formula)):\n        return False\n    if ((5 in formula and not 6 in formula) or (6 in formula and not 5 in formula)):\n        return False\n    return True", "def isValid(formula):\n    a,b,c,d,e,f,g,h = (v in formula for v in range(1,9))\n    return not(a and b) and not(c and d) and e^f^1 and (g or h)", "def isValid(formula):\n    if 1 in formula and 2 in formula: return False\n    if 3 in formula and 4 in formula: return False\n    if 5 in formula and 6 not in formula: return False\n    if 5 not in formula and 6 in formula: return False\n    if 7 not in formula and 8 not in formula: return False\n    return True", "def isValid(formula):\n    f = set(formula)\n    return (not {1, 2} <= f\n        and not {3, 4} <= f\n        and ((5 in f) == (6 in f))\n        and bool({7, 8} & f))", "def isValid(formula):\n    if 1 in formula and 2 in formula :\n        return False\n    if 3 in formula and 4 in formula :\n        return False\n    if 5 in formula and not 6 in formula :\n        return False\n    if 5 not in formula and 6 in formula :\n        return False\n    if not 7 in formula and not 8 in formula :\n        return False\n    return True", "def isValid(formula):\n    if {1,2} <= set(formula) or {3,4} <= set(formula):\n        print(1)\n        return False\n    elif (5 in formula and 6 not in formula) or (6 in formula and 5 not in formula):\n        print(3)\n        return False\n    elif 7 not in formula and 8 not in formula:\n        print(4)\n        return False\n    else:\n        return True", "def isValid(formula):\n    if not any(el in formula for el in (7, 8)):\n        return False\n    elif all(el in formula for el in (1, 2)):\n        return False\n    elif all(el in formula for el in (3, 4)):\n        return False\n    elif 5 in formula and 6 not in formula:\n        return False\n    elif 6 in formula and 5 not in formula:\n        return False\n    else:\n        return True", "def isValid(formula):\n    if 1 in formula or 2 in formula:\n        if (1 in formula) and (2 in formula):\n            return False\n    if 3 in formula or 4 in formula:\n        if (3 in formula and 4 in formula):\n            return False\n    if 7 not in formula and 8 not in formula:\n        return False\n    if 5 in formula or 6 in formula:\n        if 5 not in formula or 6 not in formula:\n            return False \n    return True", "def isValid(formula):\n    return (\n        ((1 in formula) + (2 in formula) < 2)\n        and ((3 in formula) + (4 in formula) < 2)\n        and ((5 in formula) == (6 in formula))\n        and ((7 in formula) or (8 in formula))\n    )\n", "def isValid(f):\n     return (not (((1 in f) and (2 in f) or ((3 in f) and (4 in f)))) and ((5 in f)==(6 in f)) and ((7 in f) or (8 in f)))  ##", "def isValid(f):\n    if 1 in f and 2 in f:\n        return False\n    else:\n        if 3 in f and 4 in f:\n            return False\n        else:\n            if 5 in f and 6 in f:\n                if 7 in f or 8 in f:\n                    return True\n                else:\n                    return False\n            else:\n                if 5 in f or 6 in f:\n                    return False\n                else:\n                    if 7 in f or 8 in f:\n                        return True\n                    else:\n                        return False", "def isValid(formula):\n    if (1 in formula and 2 in formula) or (3 in formula and 4 in formula) or \\\n    (7 not in formula and 8 not in formula) or (5 in formula and 6 not in formula) or \\\n    (6 in formula and 5 not in formula):    return False\n    return True", "def isValid(formula):\n    s = ''.join(sorted(map(str,formula)))\n    return not any(['12' in s,'34' in s,('5' in s)+('6' in s) == 1,('7' in s)+('8' in s) == 0])", "from typing import List\n\ndef isValid(f: List[int]):\n    \"\"\" Check if choosen package of paterials is valid according to the rules. \"\"\"\n    return all(\n        [\n            (1 in f) ^ (2 in f) if 1 in f or 2 in f else True,\n            (3 in f) ^ (4 in f) if 3 in f or 4 in f else True,\n            all([5 in f, 6 in f]) if 5 in f or 6 in f else True,\n            any([7 in f, 8 in f])\n        ]\n    )", "def isValid(f):\n    return (((1 in f) ^ (2 in f)) or ((1 not in f) and (2 not in f))) and (((3 in f) ^ (4 in f)) or ((3 not in f) and (4 not in f))) and (((5 in f) and (6 in f)) or ((5 not in f) and (6 not in f))) and ((7 in f) | (8 in f))", "def isValid(f):\n    if 1 in f and 2 in f: return False\n    if 3 in f and 4 in f: return False\n    if (5 in f or 6 in f) and not (5 in f and 6 in f): return False\n    if not (7 in f or 8 in f): return False\n    return True", "def isValid(f):\n    invalid = ((1,2), (3, 4))\n\n    if 1 in f and 2 in f :\n        return False\n    if 3 in f and 4 in f:\n        return False\n    if (5 in f or 6 in f) and not (5 in f and 6 in f):\n        return False\n    if not (7 in f or 8 in f):\n        return False\n    return True", "def isValid(formula):\n    \n    material =  [m + 1 in formula for m in range(8)]\n    r1 = not (material[0] and material[1])   \n    r2 = not (material[2] and material[3]) \n    r3 = not (material[4] ^ material[5])\n    r4 = material[6]  or material[7] \n    return r1 and r2 and r3 and r4 \n  \n", "def isValid(formula):\n    mat = [m+1 in formula for m in range(8)]\n    return all((\n        not (mat[0] and mat[1]),\n        not (mat[2] and mat[3]),\n        not (mat[4] ^ mat[5]),\n        mat[6] or mat[7]\n    ))", "def isValid(formula):\n    material = [m + 1 in formula for m in range(8)]\n    r1 = not (material[0] and material[1])  # material1 and material2 cannot be selected at the same time\n    r2 = not (material[2] and material[3])  # material3 and material4 cannot be selected at the same time\n    r3 = not (material[4] ^ material[5])  # material5 and material6 must be selected at the same time\n    r4 = material[6] or material[7]  # material7 or material8 must be selected(at least one, or both)\n    return r1 and r2 and r3 and r4\n", "def isValid(formula):\n    if 1 in formula and 2 in formula:\n        return False\n    if 3 in formula and 4 in formula:\n        return False\n    if 5 in formula and 6 not in formula:\n        return False\n    if 5 not in formula and 6 in formula:\n        return False\n    if not 7 in formula and 8 not in formula:\n        return False\n    return True\n        \n", "def isValid(formula):\n    if ((1 in formula) and (2 in formula)):\n        return False\n    if ((3 in formula) and (4 in formula)):\n        return False\n    if ((5 in formula) ^ (6 in formula)):\n        return False\n    if ((7 not in formula) and (8 not in formula)):\n        return False\n    return True\n        \n", "def isValid(formula):\n    if (1 in formula and 2 in formula) or (3 in formula and 4 in formula):\n        return False\n    if (7 not in formula) and (8 not in formula):\n        return False\n    if (5 in formula and 6 not in formula) or (6 in formula and 5 not in formula):\n        return False\n    else:\n        return True", "def isValid(formula):\n    test1 = not (1 in formula and 2 in formula)\n    test2 = not (3 in formula and 4 in formula)\n    test3 = (5 in formula and 6 in formula) or (5 not in formula and 6 not in formula)\n    test4 = (7 in formula or 8 in formula)\n    \n    print((test1, test2, test3, test4))\n    \n    return test1 and test2 and test3 and test4\n", "def isValid(formula):\n    if 3 in formula and 4 in formula: return False\n    elif 1 in formula and 2 in formula: return False\n    elif 5 in formula and 6 not in formula: return False\n    elif 5 not in formula and 6 in formula: return False\n    elif 7 not in formula and 8 not in formula: return False\n    else: return True", "def isValid(formula):\n    if 1 in formula and 2 in formula:\n        return False\n    elif 3 in formula and 4 in formula:\n        return False\n    elif 5 in formula and not 6 in formula:\n        return False\n    elif 6 in formula and not 5 in formula:\n        return False\n    elif 7 not in formula and 8 not in formula:\n        return False\n    else:\n        return True", "def isValid(formula):\n    list = []\n    for x in range(8):\n        list.append(9)\n    for x in formula:\n        list[x - 1] = x\n    if((list[0] != 9) and (list[1] != 9)):\n        return False\n    elif((list[2] != 9) and (list[3] != 9)): \n        return False\n    elif((list[4] == 9 and list[5] != 9) or (list[4] != 9 and list[5] == 9)): \n        return False\n    elif((list[6] + list[7]) == 18): \n        return False\n    else: return True", "def isValid(seq):\n    return (7 in seq or 8 in seq) and ((5 in seq and 6 in seq) or (5 not in seq and 6 not in seq)) and (1 not in seq or 2 not in seq) and (3 not in seq or 4 not in seq)", "def isValid(formula): \n    if 1 in formula and 2 in formula: return False\n    elif 3 in formula and 4 in formula: return False\n    elif 5 in formula and 6 not in formula: return False\n    elif 6 in formula and 5 not in formula: return False\n    elif 7 in formula or 8 in formula: return True\n    elif 7 not in formula or 8 not in formula: return False\n", "def isValid(formula):\n    m = [0, 1, 2, 3, 4, 5, 6, 7, 8]\n    t = []\n  \n    def mat1_mat2():\n        ## material1 and material2 cannot be selected at the same time\n        count = 0\n        for i in formula:\n            if i == 1:\n                count+=1\n            if i == 2:\n                count+=1\n        if count == 0:\n            t.append(True)\n        elif count == 1:\n            t.append(True)\n        else:\n            t.append(False)\n\n    def mat3_mat4():\n        ## material3 and material4 cannot be selected at the same time\n        count = 0\n        for i in formula:\n            if i == 3:\n                count+=1\n            if i == 4:\n                count+=1\n        if count == 0:\n            t.append(True)\n        elif count == 1:\n            t.append(True)\n        else:\n            t.append(False)\n\n    def mat5_mat6():\n        # material5 and material6 must be selected at the same time\n        count = 0\n        for i in formula:\n            if i == 5:\n                count+=1\n            if i == 6:\n                count+=1\n        if count == 0:\n            t.append(True)\n        elif count == 1:\n            t.append(False)\n        else:\n            t.append(True)\n\n    def mat7_mat8():\n        # material7 or material8 must be selected(at least one, or both)\n        count = 0\n        for i in formula:\n            if i == 7:\n                count+=1\n            if i == 8:\n                count+=1\n        if count == 1:\n            t.append(True)\n        elif count == 2:\n            t.append(True)\n        else:\n            t.append(False)\n    \n    mat1_mat2()\n    mat3_mat4()\n    mat5_mat6()\n    mat7_mat8()\n\n    return all(t)", "def isValid(f):\n    return all((((7 in f) or (8 in f)), ((5 in f) == (6 in f)), not((3 in f) and (4 in f)), not((1 in f) and (2 in f))))", "def isValid(formula):\n    formula=sorted(formula)\n    if len(formula)<1:\n        return False\n    elif (1 in formula and 2 in formula) or (3 in formula and 4 in formula) or (7 not in formula and 8 not in formula):\n        return False\n    elif (5 in formula and 6 not in formula) or (6 in formula and 5 not in formula):\n        return False\n    else:\n        return True\n\n", "def isValid(f):\n    if 1 in f and 2 in f: return False\n    elif 3 in f and 4 in f: return False\n    elif 6 in f and 5 not in f: return False\n    elif 5 in f and 6 not in f: return False\n    elif 5 in f and 6 in f and 7 in f: return True\n    elif 5 in f and 6 in f and 8 in f: return True \n  \n    \n \n \n    elif 7 in f or 8 in f: return True\n    else: return False \n \n    \n", "def isValid(formula):\n    if not(7 in formula or 8 in formula):\n        return False\n    elif 1 in formula and 2 in formula:\n        return False\n    elif 3 in formula and 4 in formula:\n        return False\n    elif 5 in formula:\n        if 6 not in formula:\n            return False\n    elif 6 in formula:\n        if 5 not in formula:\n            return False\n    return True\n", "def isValid(formula):\n    if not 7 in formula and not 8 in formula:\n        return False\n    if 5 in formula and 6 not in formula or 6 in formula and 5 not in formula:\n        return False\n    if 1 in formula and 2 in formula:\n        return False\n    if 3 in formula and 4 in formula:\n        return False\n    return True\n", "def isValid(formula):\n    f = set(formula)\n    if 7 not in f and 8 not in f:\n        return False\n    if 1 in f and 2 in f:\n        return False\n    if 3 in f and 4 in f:\n        return False\n    return (5 in f) == (6 in f)\n", "def isValid(formula):\n    if 1 in formula: \n        if 2 in formula: return False \n    if 2 in formula: \n        if 1 in formula: return False\n    if 3 in formula: \n        if 4 in formula: return False \n    if 4 in formula: \n        if 3 in formula: return False \n    if 5 in formula: \n        if 6 not in formula: return False \n    if 6 in formula: \n        if 5 not in formula: return False\n    if 7 not in formula and 8 not in formula: \n        return False\n    return True", "def isValid(formula):\n    print(formula)\n    f = list(map(str, formula))\n    f1 = str(\"\".join(f))\n    b = 0\n    if f1.find('7') != -1:\n        for i in f1:\n            b = i\n            if b == '1':\n                if f1.find('2') == -1:\n                    continue\n                else:\n                    return False\n            elif b == '3':\n                if f1.find('4') == -1:\n                    continue\n                else:\n                    return False\n            elif b == '5':\n                if f1.find('6') != -1:\n                    return True\n                else:\n                    return False\n            elif b == '6':\n                if f1.find('5') != -1:\n                    return True\n                else:\n                    return False\n    else: \n        if f1.find('8') != -1:\n            for i in f1:\n                b = i\n                if b == '1':\n                    if f1.find('2') == -1:\n                        continue\n                    else:\n                        return False\n                elif b == '3':\n                    if f1.find('4') == -1:\n                        continue\n                    else:\n                        return False\n                elif b == '5':\n                    if f1.find('6') != -1:\n                        return True\n                    else:\n                        return False\n                elif b == '6':\n                    if f1.find('5') != -1:\n                        return True\n                    else:\n                        return False\n        else:\n            return False\n            \n            \n    return True\n", "def isValid(formula):\n    if formula.count(1) and formula.count(2):\n        return False\n    if formula.count(3) and formula.count(4):\n        return False\n    if formula.count(5)+formula.count(6)==1:\n        return False\n    if formula.count(7)+formula.count(8)==0:\n        return False\n    return True", "def isValid(formula):\n    return not (1 in     formula and 2 in     formula or \\\n                3 in     formula and 4 in     formula or \\\n                5 in     formula and 6 not in formula or \\\n                5 not in formula and 6 in     formula or \\\n                7 not in formula and 8 not in formula\n    )", "def isValid(formula):\n    if 1 in formula and 2 in formula:\n        return False\n        \n    elif 3 in formula and 4 in formula:\n        return False\n        \n    elif 7 not in formula and 8 not in formula:\n        return False\n        \n    elif 5 in formula:\n        if not 6 in formula:\n            return False\n            \n    elif 6 in formula:\n        if not 5 in formula:\n            return False\n    \n    return True", "def isValid(f):\n    if 1 in f and 2 in f:return False\n    if 3 in f and 4 in f: return False\n    if not 7 in f and not 8 in f:return False\n    if 5 in f and not 6 in f:return False\n    if not 5 in f and 6 in f:return False\n    return True\n        \n", "def isValid(a):\n    for x, y in [[1,2], [3,4]]:\n        if x in a and y in a: return False\n    return (5 in a) == (6 in a) and any(x in a for x in (7,8))", "def isValid(formula):\n    rules = [not(1 in formula and 2 in formula)]\n    rules.append(not(3 in formula and 4 in formula))    \n    rules.append((5 in formula and 6 in formula) or (5 not in formula and 6 not in formula))\n    rules.append(7 in formula or 8 in formula)\n    print(rules)\n    return all(rules)", "def isValid(formula):\n    valid_formula = True\n\n    if all(x in formula for x in [1, 2]):\n        valid_formula = False\n\n    if all(x in formula for x in [3, 4]):\n        valid_formula = False\n\n    if 5 in formula and 6 not in formula:\n        valid_formula = False\n        \n    if 6 in formula and 5 not in formula:\n        valid_formula = False\n        \n    if 7 not in formula and 8 not in formula:\n        valid_formula = False\n\n\n\n    return valid_formula", "def isValid(formula):\n    var1=(7 in formula or 8 in formula)\n    if var1==False:\n        return False\n    if (1 in formula and 2 in formula):\n        return False\n    if (3 in formula and 4 in formula):\n        return False\n    if 5 in formula:\n        if 6 in formula:\n            var1=True\n        else:\n            return False\n    if 6 in formula:\n        if 5 in formula:\n            var1=True\n        else:\n            return False\n    return True", "def isValid(formula=[1, 3, 7]):\n    fr = not (1 in formula and 2 in formula)\n    sr = not (3 in formula and 4 in formula)\n    tr = not((5 in formula and 6 not in formula) or (5 not in formula and 6 in formula))\n    four = (7 in formula or 8 in formula)\n    return fr and sr and tr and four", "def isValid(formula):\n    if 3 in formula and 4 in formula: return False\n    if 1 in formula and 2 in formula: return False\n    if 7 not in formula and 8 not in formula : return False\n    if 5 in formula and 6 not in formula : return False\n    if 6 in formula and 5 not in formula : return False\n    return True", "def isValid(formula):\n    if (1 in formula) and (2 in formula): return False\n    if (3 in formula) and (4 in formula): return False\n    if (6 in formula) != (5 in formula): return False\n    if (not 7 in formula) and (not 8 in formula): return False\n\n    return True", "def isValid(formula):\n    if 7 in formula or 8 in formula:\n        if 1 in formula and 2 in formula:\n            return False\n        if 3 in formula and 4 in formula:\n            return False\n        if 5 in formula:\n            if 6 not in formula:\n                return False\n        if 6 in formula:\n            if 5 not in formula:\n                return False\n        return True\n    else:\n        return False", "def isValid(formula):\n    if 1 in formula and 2 in formula:\n        return False\n    if 3 in formula and 4 in formula:\n        return False\n    if 5 in formula and 6 not in formula:\n        return False\n    if 6 in formula and 5 not in formula:\n        return False   \n    if 8 not in formula and 7 not in formula:\n        return False\n    return True", "def isValid(a):\n    b = not ((1 in a) and (2 in a))\n    c = not ((3 in a) and (4 in a))\n    d = ((5 in a) == (6 in a))\n    e = ((7 in a) or (8 in a))\n    print([b,c,d,e])\n    return all([b,c,d,e])\n", "def isValid(formula):\n    if 7 in formula or 8 in formula:\n        if not(1 in formula and 2 in formula):\n            if not(3 in formula and 4 in formula):\n                if (5 not in formula and not 6 in formula) or (5 in formula and 6 in formula):\n                        return True\n                else:\n                    return False\n            else:\n                return False\n        else:\n            return False\n    else:\n        return False\n\n", "def isValid(formula):\n    a, b = sum([1 for c in formula if c in [1, 2]]), sum([1 for c in formula if c in [3, 4]])\n    c, d = sum([1 for c in formula if c in [5, 6]]), sum([1 for c in formula if c in [7, 8]])\n\n    return True if (a in range(2) and b in range(2)) and ((c==0 or c==2) and (d in range(1, 3))) else False\n", "def isValid(f):\n    return (7 in f or 8 in f) and (((1 in f) + (2 in f))!=2) and (((3 in f) + (4 in f))!=2) and (((5 in f) + (6 in f))!=1)", "def isValid(formula):\n    return not any([1 in formula and 2 in formula,\n                    3 in formula and 4 in formula,\n                    5 in formula and not 6 in formula,\n                    6 in formula and not 5 in formula]) and any([7 in formula, 8 in formula])\n", "def isValid(formula):\n    if 3 in formula and 4 in formula:\n        return False\n    elif 1 in formula and 2 in formula:\n        return False\n    elif 5 in formula and 6 not in formula or 6 in formula and 5 not in formula:\n        return False\n    elif 7 not in formula and 8 not in formula:\n        return False\n    else:\n        return True", "def isValid(formula):\n    if 1 in formula:\n        if 2 in formula:\n            return False\n    if 3 in formula:\n        if 4 in formula:\n            return False\n    if 5 in formula:\n        if 6 not in formula:\n            return False\n    if 6 in formula:\n        if 5 not in formula:\n            return False\n    if (7 not in formula) and (8 not in formula):\n        return False\n    return True", "def isValid(f):\n    return ((7 in f) or (8 in f)) and not(((5 in f) and (6 not in f)) or ((6 in f) and (5 not in f))) and not ((1 in f) and (2 in f)) and not ((3 in f) and (4 in f))", "def isValid(formula):\n    r1 = not(1 in formula and 2 in formula)\n    r2 = not(3 in formula and 4 in formula)\n    r3 = (5 in formula) == (6 in formula)\n    r4 = 7 in formula or 8  in formula\n    return all([r1,r2,r3,r4])\n", "def isValid(formula):\n    if (7 not in formula) and (8 not in formula):\n        return False\n    if (5 in formula and 6 not in formula) or 6 in formula and 5 not in formula:\n        return False\n    if (1 in formula and 2 in formula) or (3 in formula and 4 in formula):\n        return False\n    return True", "def isValid(formula: list) -> bool:\n    if 7 in formula or 8 in formula or set([7, 8]).issubset(formula):\n        if set([1, 2]).issubset(formula):\n            return False\n        if set([3, 4]).issubset(formula):\n            return False\n        if 5 in formula or 6 in formula:\n            return set([5, 6]).issubset(formula)\n        if 7 in formula or 8 in formula or set([7, 8]).issubset(formula):\n            return True\n    return False\n", "def isValid(formula):\n    rule_1 = 1 not in formula or 2 not in formula\n    rule_2 = 3 not in formula or 4 not in formula\n    rule_3 = 5 in formula and 6 in formula or 5 not in formula and 6 not in formula\n    rule_4 = 7 in formula or 8 in formula\n    return rule_1 and rule_2 and rule_3 and rule_4", "def isValid(formula):\n    if len(set(formula).intersection(set([1,2])))>1 or len(set(formula).intersection(set([3,4])))>1 or len(set(formula).intersection(set([5,6])))==1 or len(set(formula).intersection(set([7,8])))<1:\n        return False\n    return True\n", "def isValid(f):\n    a, b, c, d, e, f, g, h = [v in f for v in range(1, 9)]\n    return not(a and b) and not(c and d) and not (e ^ f) and (g or h)\n", "def isValid(f):\n    if 7 not in f and 8 not in f: return False\n    if 1 in f and 2 in f: return False\n    if 3 in f and 4 in f: return False\n    if 5 in f and 6 not in f: return False\n    if 6 in f and 5 not in f: return False\n    return True", "def isValid(formula):\n    count_1 = formula.count(1)\n    count_2 = formula.count(2)\n    if count_1 == count_2 == 1:\n        return False\n\n    count_1 = formula.count(3)\n    count_2 = formula.count(4)\n    if count_1 == count_2 == 1:\n        return False\n\n    count_1 = formula.count(5)\n    count_2 = formula.count(6)\n    if count_1 != count_2:\n        return False\n\n    count_1 = formula.count(7)\n    count_2 = formula.count(8)\n    if count_1 == count_2 == 0:\n        return False\n    return True", "def isValid(formula):\n    if 7 in formula or 8 in formula: \n        if 1 in formula and 2 in formula:\n            return False\n        if 3 in formula and 4 in formula:\n            return False\n        if 5 in formula:\n            if 6 in formula:\n                return True\n            else:\n                return False\n        if 6 in formula:\n            if 5 in formula:\n                return True\n            else:\n                return False\n        return True \n    return False", "def isValid(formula):\n    if 1 in formula and 2 in formula: return False\n    if 3 in formula and 4 in formula: return False\n    if 5 in formula and 6 not in formula: return False\n    if not 5 in formula and 6 in formula: return False\n    if not 7 in formula and not 8 in formula: return False\n    return True", "def isValid(formula):\n    if ((1 in formula) and (2 in formula)) or ((3 in formula) and (4 in formula)) or\\\n         5 in formula and not(6 in formula) or not(5 in formula) and 6 in formula or \\\n        not(7 in formula) and not(8 in formula):\n        return False\n    elif 7 in formula or 8 in formula or \\\n        (7 in formula and 8 in formula) or \\\n        5 in formula and 6 in formula :\n        return True\n    else: \n        return False\n", "def isValid(formula):\n    # material7 or  material8 must be selected(at least one, or both)\n    if 7 in formula or 8 in formula:\n    # material5 and material6 must be selected at the same time\n        if (5 in formula and 6 in formula) or (not 5 in formula and not 6 in formula):\n    # material3 and material4 cannot be selected at the same time\n            if (3 in formula and not 4 in formula) or (4 in formula and not 3 in formula) or (not 3 in formula and not 4 in formula):\n    # material1 and material2 cannot be selected at the same time\n                if (1 in formula and not 2 in formula) or (2 in formula and not 1 in formula) or (not 1 in formula and not 2 in formula):\n                    return True\n                else: return False\n            else: return False\n        else: return False\n    else: return False", "def isValid(formula):\n    if 7 in formula or 8 in formula:\n        if 1 in formula and 2 in formula:\n            return False\n        elif 3 in formula and 4 in formula:\n            return False\n        elif 5 in formula:\n            if 6 in formula:\n                return True\n            else:\n                return False\n        elif 6 in formula:\n            if 5 in formula:\n                return True\n            else:\n                return False\n        else:\n            return True\n    else:\n        return False", "def isValid(f):\n    if 1 in f and 2 in f:\n        return False\n    elif 3 in f and 4 in f:\n        return False\n    elif (5 in f and not(6 in f)) or (6 in f and not(5 in f)):\n        return False\n    elif not(7 in f) and not(8 in f):\n        return False\n    return True", "def isValid(formula):\n    flag = True\n    if 1 in formula:\n        if 2 in formula:\n            flag = False\n    if 3 in formula:\n        if 4 in formula:\n            flag = False\n    if 5 in formula:\n        if 6 not in formula:\n            flag = False\n    if 6 in formula:\n        if 5 not in formula:\n            flag = False\n    if 7 not in formula and 8 not in formula:\n        flag = False\n    return flag", "def isValid(formula):\n    print(formula)\n    if 1 in formula and 2 in formula:\n        return 0\n    if 3 in formula and 4 in formula:\n        return 0\n    if 5 in formula and not 6 in formula:\n        return 0\n    if 6 in formula and not 5 in formula:\n        return 0\n    if 7 in formula or 8 in formula:\n        return 1\n    else:\n        return 0", "def isValid(formula):\n    \n    if 1 in formula and 2 in formula:\n        return False \n            \n    if 3 in formula and 4 in formula:\n        return False \n            \n    if (5 not in formula or 6 not in formula) and (5  in formula or 6  in formula):\n        return False\n    \n    if 7 not in formula and 8 not in formula:\n        return False \n    \n    return True", "def isValid(formula):\n    if 7 in formula or 8 in formula:\n        if 1 in formula and 2 in formula or 3 in formula and 4 in formula:\n            return False\n        if 5 in formula and 6 not in formula or 6 in formula and 5 not in formula:\n            return False\n        return True\n    return False", "def isValid(formula):\n    \"\"\"\n        Returns true if the formula is valid, false otherwise.\n        \n        Rules:\n        \u2022 material1 and material2 cannot be selected at the same time\n        \u2022 material3 and material4 cannot be selected at the same time\n        \u2022 material5 and material6 must be selected at the same time\n        \u2022 material7 or  material8 must be selected(at least one, or both)\n    \"\"\"\n    if 1 in formula and 2 in formula:\n        return False\n    \n    if 3 in formula and 4 in formula:\n        return False\n    \n    if 5 in formula or 6 in formula:\n        if 5 not in formula or 6 not in formula:\n            return False\n    \n    if 7 not in formula and 8 not in formula:\n        return False\n    \n    return True", "def isValid(formula):\n    if 7 in formula or 8 in formula:\n        if 1 in formula and 2 in formula:\n            return False\n        if 3 in formula and 4 in formula:\n            return False\n        if (5 in formula and not 6 in formula) or (6 in formula and not 5 in formula):\n            return False\n        return True\n    else:\n        return False\n", "def isValid(formula):\n    return False if (1 in formula and 2 in formula) or (3 in formula and 4 in formula) or (5 not in formula and 6 in formula) or (5 in formula and 6 not in formula) or not (7 in formula or 8 in formula) else True", "def isValid(formula):\n    rules = list()\n    rules.append(1) if 7 in formula or 8 in formula else rules.append(0)\n    if 5 in formula or 6 in formula:\n        rules.append(2) if 5 in formula and 6 in formula else rules.append(0)\n    if (3 in formula) or (4 in formula):\n        rules.append(0) if 3 in formula and 4 in formula else rules.append(3)\n    if (1 in formula) or (2 in formula):\n        rules.append(0) if 1 in formula and 2 in formula else rules.append(4)\n    return True if min(rules) != 0 else False", "def isValid(f):\n    if 5 in f or 6 in f:\n        if not (5 in f and 6 in f):\n            return False\n    \n    if not (7 in f or 8 in f):\n        return False\n\n    if 1 in f or 2 in f:\n        if 1 in f and 2 in f:\n            return False\n\n    if 3 in f or 4 in f:\n        if 3 in f and 4 in f:\n            return False\n\n    return True\nprint(isValid([1,3,7]))", "def isValid(f):\n    if len(f)==1 and f[0]!=7 and f[0]!=8:\n        return False\n    elif 1 in f and 2 in f:\n        return False\n    elif 3 in f and 4 in f:\n        return False\n    elif 5 not in f and 6 in f :\n        return False\n    elif 5 in f and 6 not in f:\n        return False\n    elif 7 in f or 8 in f:\n        return True\n    else:\n        return False", "def isValid(formula):\n    if 7 not in formula and 8 not in formula:\n        return False\n    if 1 in formula and 2 in formula:\n        return False\n    if 3 in formula and 4 in formula:\n        return False\n    if 5 in formula and 6 not in formula:\n        return False\n    if 6 in formula and 5 not in formula:\n        return False\n    if 7 in formula or 8 in formula:\n        return True#", "def isValid(formula):\n    if 1 in formula and 2 in formula:\n        return False\n    elif 3 in formula and 4 in formula:\n        return False\n    elif 5 in formula and 6 not in formula:\n        return False\n    elif 6 in formula and 5 not in formula:\n        return False\n    if 7 in formula or 8 in formula:\n        return True\n    else:\n        return False\n    \n\n        \n\n", "def isValid(formula):\n  if len(formula) == 0:\n    return False\n  elif len(formula) == 1:\n    if 7 in formula or 8 in formula:\n      return True\n    else:\n      return False\n  elif len(formula) == 2:\n    if 7 in formula and 8 in formula:\n      return True\n    elif 7 in formula or 8 in formula:\n      if 5 in formula or 6 in formula:\n        return False\n      else:\n        return True\n    else:\n      return False\n  elif len(formula) == 3:\n    if 7 in formula and 8 in formula:\n      if 5 in formula or 6 in formula:\n        return False\n      else:\n        return True\n    elif 7 in formula or 8 in formula:\n      if 5 in formula and 6 in formula:\n        return True\n      elif (3 in formula and 4 not in formula) or (4 in formula and 3 not in formula):\n        if (1 in formula and 2 not in formula) or (2 in formula and 1 not in formula):\n          return True\n        else:\n          return False\n      else:\n        return False\n    else:\n      return False\n  elif len(formula) == 4:\n    if 7 in formula and 8 in formula:\n      if 5 in formula and 6 in formula:\n        return True\n      elif (3 in formula and 4 not in formula) or (4 in formula and 3 not in formula):\n        if (1 in formula and 2 not in formula) or (2 in formula and 1 not in formula):\n          return True\n        else:\n          return False\n      else:\n        return False\n    elif 7 in formula or 8 in formula:\n      if 5 in formula and 6 in formula:\n        return True\n      else:\n        return False\n    else:\n      return False\n  elif len(formula) == 5:\n    if 7 in formula and 8 in formula:\n      if 5 in formula and 6 in formula:\n        return True\n      else:\n        return False\n    elif 7 in formula or 8 in formula:\n      if 5 in formula and 6 in formula:\n        if (3 in formula and 4 not in formula) or (4 in formula and 3 not in formula):\n          if (1 in formula and 2 not in formula) or (2 in formula and 1 not in formula):\n            return True\n          else:\n            return False\n        else:\n          return False\n      else:\n        return False\n    else:\n      return False\n  elif len(formula) == 6:\n    if 7 in formula and 8 in formula:\n      if 5 in formula and 6 in formula:\n        if (3 in formula and 4 not in formula) or (4 in formula and 3 not in formula):\n          if (1 in formula and 2 not in formula) or (2 in formula and 1 not in formula):\n            return True\n          else:\n            return False\n        else:\n          return False\n      else:\n        return False\n    else:\n      return False\n  elif len(formula) > 6:\n    return False", "def isValid(formula):\n    if 1 in formula and 2 in formula:\n        return False\n    elif 3 in formula and 4 in formula:\n        return False\n    if 5 in formula and 6 not in formula:\n        return False\n    elif 6 in formula and 5 not in formula:\n        return False\n    elif 7 not in formula and 8 not in formula:\n        return False\n    else:\n        return True", "def isValid(formula):\n    if 7 not in formula and 8 not in formula:\n        return False\n    if 5 in formula and 6 not in formula or 6 in formula and 5 not in formula:\n        return False\n    if 3 in formula and 4 in formula:\n        return False\n    if 1 in formula and 2 in formula:\n        return False\n    return True", "def isValid(formula):\n     check1 = (1 in formula and 2 in formula)#should be false\n     check2 = (3 in formula and 4 in formula) #should be false\n     check3 = (5 in formula and 6 not in formula) #should be false\n     check4 = (6 in formula and 5 not in formula) # should be false\n     check5 = (7 in formula or 8 in formula) #should be true\n     #check_list=[check1, check2, check]\n     if check1==True or check2==True or check3==True or check4==True or check5==False :\n        return False\n     else:\n        return True", "def isValid(formula):\n    if (1 in formula and 2 in formula):\n        return False\n    if (3 in formula and 4 in formula):\n        return False\n    if (not (7 in formula or 8 in formula)):\n        return False\n    if ((5 in formula and not (6 in formula)) or (not(5 in formula) and 6 in formula)):\n        return False\n    return True", "def isValid(formula):\n    d = {1:1, 2:1, 3:2, 4:2, 5:3, 6:3, 7:4, 8:4}\n    r = [d[i] for i in formula]\n    l = {}\n    for x in r:\n                \n        if (x == 4 and r.count(4) == 1) or (x == 4 and r.count(4) == 2):\n            l[4] = True\n        if x == 1 and r.count(1) == 1:\n            l[1] = True\n             \n        if x == 2 and r.count(2) == 1:\n            l[2] = True\n        \n        if x == 3 and r.count(3) == 2:\n            l[3] = True\n        \n        \n        if  r.count(4) == 0:\n            l[4] = False        \n        \n        if x == 1 and r.count(1) != 1:\n            l[1] = False\n             \n        if x == 2 and r.count(2) != 1:\n            l[2] = False\n        \n        if x == 3 and r.count(3) != 2:\n            l[3] = False\n        \n        \n        \n        \n        \n        \n        \n    result = [k for k in list(l.values())]\n    return (sum(result) == len(result))\n    \n        \n    \n    \n    \n    \n    \n", "def isValid(formula):\n    \n    print(formula)\n    \n    if 1 in formula and 2 in formula:\n        return False\n    \n    if 3 in formula and 4 in formula:\n        return False\n\n    if 5 in formula and 6 not in formula:\n        return False\n    \n    if 6 in formula and 5 not in formula:\n        return False\n        \n    if 7 not in formula and 8 not in formula:\n        return False\n    else:\n        return True", "def isValid(f):\n    return  ((1 not in f) or (2 not in f)) and \\\n            ((3 not in f) or (4 not in f)) and \\\n            ((5 in f) == (6 in f))         and \\\n            ((7 in f) or (8 in f))", "def isValid(formula):\n    exclusive = [[1, 2], [3, 4]]\n    implies = {5: 6, 6: 5}\n    required = {7, 8}\n    \n    for m1, m2 in exclusive:\n        if m1 in formula and m2 in formula:\n            return False\n        \n    for m in formula:\n        if m in implies and not implies[m] in formula:\n            return False\n        \n    if not any(m in formula for m in required):\n        return False\n    \n    return True", "def isValid(f):\n    y = ''.join(map(str,sorted(f)))\n    return '12' not in y and '34' not in y and ('56' in y or '5' not in y and '6' not in y) and ('7' in y or '8' in y)", "def isValid(formula):\n    \n    \n    if 1 in formula and 2 in formula:\n        \n        print(\"1\")\n        return False\n    \n    elif 3 in formula and 4 in formula: \n        print(\"2\")\n        return False\n    \n    elif 5 in formula and 6 not in formula:\n        print(\"3\")\n        return False\n        \n    elif 6 in formula and 5 not in formula:\n        print(\"4\")\n        return False\n    \n    elif not ( 7 in formula or 8 in formula):\n        print(\"5\")\n        return False\n    \n    return True", "def isValid(formula):\n    if (1 in formula) and (2 in formula):\n        return False\n    if (3 in formula) and (4 in formula):\n        return False\n    if (7 not in formula) and (8 not in formula):\n        return False\n    if (5 in formula or 6 in formula) and not(5 in formula and 6 in formula):\n        return False\n    return True\n        \n", "def isValid(formula):\n#     print((1 in formula) != (2 in formula))\n    return not ((1 in formula) and (2 in formula)) \\\n            and not ((3 in formula) and (4 in formula)) \\\n            and (5 in formula) == (6 in formula) \\\n            and ((7 in formula) or (8 in formula))", "def isValid(formula):\n    \n    return ((7 in formula or 8 in formula)and not(1 in formula and 2 in formula) and not(3 in formula and 4 in formula) and  ((5 in formula and 6 in formula)or (5 not in formula and 6 not in formula)))"]