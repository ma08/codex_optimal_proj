["def beeramid(bonus, price):\n    beers  = bonus // price\n    levels = 0\n    \n    while beers >= (levels + 1) ** 2:\n        levels += 1\n        beers  -= levels ** 2\n    \n    return levels", "from itertools import count\n\ndef beeramid(bonus, price):\n    bonus = max(bonus,0)\n    n = bonus//price\n    return next(x for x in count(int((n*3)**(1/3)+1),-1) if x*(x+1)*(2*x+1)//6 <= n)", "def beeramid(bonus, price):\n    k = bonus // price\n    d = (3 * (11664*k*k - 3) ** .5 + 324 * k) ** (1/3)\n    n = (d/3 + 1/d - 1) / 2\n    return k>0 and int(n.real+1e-12)", "def beeramid(bonus, price):\n    i = 0\n    while bonus > 0:\n        i += 1\n        bonus -= price * i**2\n        if bonus < 0: i -= 1\n    return i", "def beeramid(bonus, price, level=1):\n    return 0 if bonus < price * level**2 else 1 + beeramid(bonus - price * level**2, price, level + 1)\n", "def beeramid(bonus, price):\n    b = bonus/price; n = 1\n    while True:\n        if b < n*(n+1)*(2*n+1)/6: \n            return n-1; break\n        n += 1\n", "def beeramid(bonus, price):\n    num_cans = bonus // price\n    level = 0\n    while num_cans >= 0:\n        level += 1\n        num_cans -= level*level\n    return max(0, level-1)", "def beeramid(bonus, price):\n    if bonus<price:\n        return 0\n    elif bonus==price:\n        return 1\n    else:\n        L=[]\n        a=int(bonus//price)+1\n        c=1\n        for i in range(1,a):\n            c += i*i\n            if c <= a:\n                L.append(i*i)\n        b=len(L)\n        return b", "def beeramid(bonus, price):\n    if bonus<0:\n        return 0\n    sum=0\n    x=1\n    c=0\n    while bonus/price>=sum:\n        sum=sum+x**2\n        x+=1\n        c+=1\n    return c-1", "def level():\n    n = 2\n    while n:\n        yield n ** 2\n        n += 1\n\ndef beeramid(bonus, price):\n    b, x, sum, n = bonus // price, level(), 1, 0\n    while sum <= b:\n        sum += next(x)\n        n += 1\n    return n"]