["def get_real_floor(n):\n    if n <= 0: return n\n    if n < 13: return n-1\n    if n > 13: return n-2", "def get_real_floor(n):\n    return n if n < 1 else n - 1 if n < 13 else n - 2", "def get_real_floor(n):\n    return n - (1 if n < 13 else 2) if n > 0 else n", "def get_real_floor(n):\n    return n - (n > 0) - (n > 13)", "def get_real_floor(n):\n    return n-2 if n > 13 \\\n      else n-1  if n > 0 \\\n      else n", "def get_real_floor(n):\n    if n > 0 and n >= 13:return n - 2\n    elif n > 0 and n < 13: return n - 1 \n    else: return n", "def get_real_floor(n):\n    if n == 1:return 0\n    elif n == 15:return 13\n    elif n == 0:return 0\n    else:\n        if n > 0 and n < 13:return n - 1\n        elif n > 0 and n > 13:return n - 2\n        else:return n", "def get_real_floor(n):\n  return n if n < 1 else (n - 2 if (n > 13) else n - 1)", "def get_real_floor(n):\n    if n <= 0:\n        return n\n    return n - 1 - (n >= 13)", "def get_real_floor(n):\n    if 1 <= n < 13:\n        return n - 1\n    if 13 <= n:\n        return n - 2\n    if  n <= 0:\n        return n", "def get_real_floor(n):\n    if n<=0:\n        return n\n    elif n<14:\n        return n-1\n    elif n==14:\n        return 12\n    else:\n        return n-2", "def get_real_floor(n):\n    return n - 1 - (n > 13) if n > 0 else n", "def get_real_floor(n):\n    \n    return n - 1 * (n>0) - 1 * (n>13)", "def get_real_floor(n):\n    if n <= 0: return n\n    elif 0 < n < 13: return n - 1\n    elif n > 13: return n - 2", "def get_real_floor(n):\n    return n - 2 if n > 13 else n - 1 if n > 0 else n", "get_real_floor = lambda n: n - ((n > 0) + (n > 12))", "def get_real_floor(n):\n    return n - (n > 0) * ((n > 0) + (n > 13))", "def get_real_floor(n):\n    return n if n<0 else 0 if n <=1 else n-1 if n<13 else n-2", "def get_real_floor(n):\n    return n - (n > 0) - (n > 12)", "def get_real_floor(n):\n    if n<1:\n        return n\n    ls=[]\n    for i in range(1,n+1):\n        if i==13:\n            pass\n        else:\n            ls.append(i)\n    return ls.index(n)  #I solved this Kata on  8/21/2019  11:07 PM...#Hussam'sCodingDiary", "get_real_floor = lambda n: n if n <= 0 else n - 1 - int(n >= 13)", "def get_real_floor(n):\n    if n <= 0:\n        return n\n    \n    else:\n        ans = n - 1\n        \n    if n > 13:\n        ans = ans - 1\n    \n    return ans", "def get_real_floor(n):\n    return (n - 1) + (n <= 0) - (n > 13)", "def get_real_floor(n):\n    if n > 0:\n       return n - (1 + int(n >= 13))\n    return n\n", "def get_real_floor(n):\n    return [n, n-[2, 1][n < 13]][n > 0]  # fun", "def get_real_floor(n):\n    return [n, n-[2, 1][n < 13]][n > 0]  # fun logic", "def get_real_floor(n):\n    return n - [2,1][n < 13] if n > 0 else n", "get_real_floor = lambda n: n - (n > 0) - (n > 13)", "def get_real_floor(n: int) -> int:\n    \"\"\" Get the floor in the european system based on the floor in the american system. \"\"\"\n    return sum([n, {0 < n < 13: -1, n >= 13: -2}.get(True, 0)])", "def get_real_floor(n):\n    if n >0 and n<13:\n        return n-1\n    elif n > 13:\n        return n-2\n    else:\n        return n", "def get_real_floor(n):\n    # code here\n    if n ==0:\n        return 0\n    elif n>0 and n <= 13:\n        n=n-1\n        return n\n    elif n>0 and n>13:\n        n=n-2\n        return n\n    elif n < 0:\n        return n", "def get_real_floor(n):\n    return n - 1 - int(n >= 13) if n > 0 else n", "def get_real_floor(n):\n    if n>13:\n        f = n-2\n    elif n>1 and n<13:\n        f = n-1\n    elif n<0:\n        f = n\n    else: f = 0\n    return f", "def get_real_floor(n):\n    # code here\n    if n > 13:\n        return n-2\n    if n < 13 and n > 1:\n        return n-1\n    if n < 0:\n        return n\n    else: return 0", "def get_real_floor(n) :\n    if n > 13:\n        return n - 2 \n    if n>1 and n<13:\n        return n-1\n    if n<0:\n        return n \n    else:\n        return 0", "def get_real_floor(n):\n    if (n < 13):\n        if n < 0:\n            o=n\n        elif n == 0:\n            o=0\n        else:\n            o = n-1\n    elif n == 13:\n        o = 0\n    else:\n        o = n-2\n    return o", "def get_real_floor(n):\n    if 1 <= n <= 12:\n        n = n-1\n    elif 14 <= n:\n        n = n-2\n    else: \n        n = n\n    \n    return n", "def get_real_floor(n):\n    if n == 0:\n        return 0\n    if 0 < n <= 13:\n        return n-1\n    \n    return n-2 if n > 13 else n", "def get_real_floor(n):\n    return 0 if n == 0 or n == 1 else n - 1 if 1 < n <= 13 else n - 2 if n > 13 else n", "def get_real_floor(n):\n    if n == 15:\n        return 13\n    elif n == 0:\n        return 0\n    elif n >=1 and n < 14:\n        return (n-1)\n    elif n < 0:\n        return n\n    else:\n        return (n-2)\n    # code here\n", "def get_real_floor(n):\n    if 0<n<=13:\n        return n-1\n    elif n>13:\n            return n-2\n        \n    elif n<0:\n        return n\n    else:\n        return 0", "def get_real_floor(n):\n    if n <= 0:\n        return n\n    elif 0 < n <= 12:\n        return n - 1\n    elif n >= 13:\n        return n - 2", "def get_real_floor(n):\n    return n - 2 if n > 13 else n - 1 if n < 13 and n > 0 else n", "def get_real_floor(n):\n    if (n < 0):\n        return n\n    if (n == 0 or n == 1):\n        return 0\n    elif (2 <= n <= 12):\n        return n-1\n    else:\n        return n-2", "get_real_floor=lambda n:n-1-(n>12)+(n<=0)", "def get_real_floor(n):\n    if n<0: return n\n    elif n>0 and n<13: return n-1\n    elif n==0: return 0\n    else: return n-2", "def get_real_floor(n):\n    if n > 13:\n        return n - 2\n    elif n > 1 and n < 13:\n        return n - 1\n    elif n == 1:\n        return 0 \n    else:\n        return n", "def get_real_floor(n):\n    return n - (n>0 and 1) - (n>13 and 1)", "def get_real_floor(n):\n    return n - 2 if n > 13 else n - 1 if n >= 1 else n", "def get_real_floor(n):\n    return n-1 if n<13 and n>0 else n if n<=0 else n-2 if n>13 else n", "def get_real_floor(n):\n    # code here\n    if n<0:\n        return n\n    elif n>0 and n<=12:\n        return n-1\n    elif  n>12 :\n        return n-2\n    else:\n        return 0 \n        \n", "def get_real_floor(n):\n    if n < 0:\n        return n\n    elif n == 0:\n        return n\n    elif n >= 13:\n        return n-2\n    else:\n        return n-1", "def get_real_floor(n):\n    if n > 13:\n        return n - 2\n    if n >= 1:\n        return n - 1\n    else:\n        return n", "def get_real_floor(n):\n    if 0 < n < 13:\n        return n - 1 \n    elif n > 13:\n        return n - 2\n    else:\n        return n\n#     return n-1 if 0 < n < 13 else\n", "def get_real_floor(n):\n    if n>0:\n        if n<13:\n            n=n-1\n        else:\n            n=n-2\n    \n    return n", "def get_real_floor(n):\n    floor=0\n    if n>=1:\n        floor-=1\n    if n>=13:\n        floor-=1\n    return n + floor", "def get_real_floor(n):\n    if n == 0:\n        return 0\n    elif n < 0:\n        return n\n    return n - 1 if n <= 13 else n - 2", "def get_real_floor(n):\n    if n <= 0:\n        return n\n    if n > 0 and n < 14:\n        return n-1\n    else:\n        return n-2", "def get_real_floor(n):\n    if n == 0:\n        return 0\n    elif 13 > n > 0:\n        return n - 1\n    elif n > 13:\n        return n - 2\n    else:\n        return n", "def get_real_floor(n):\n    return n-1 if 0 < n < 13 else n-2 if n > 12 else n", "get_real_floor = lambda n: n-1 if n > 0 and n < 13 else n-2 if n > 12 else n", "def get_real_floor(n):\n    if n == 1:\n        return 0\n    if n > 13:\n        return n - 2\n    if n < 0:\n        return n\n    if n > 0 and n < 13:\n        return n - 1\n    return 0", "def get_real_floor(n):\n    if 1 <= n <= 12:\n        return n - 1\n    elif n <=0:\n        return n\n    else:\n        return n - 2", "def get_real_floor(n):\n    if n>0 and n<13:\n        real_floor=n-1\n        return real_floor\n    if n >=13:\n        real_floor=n-2\n        return real_floor\n    if n<=0:\n        real_floor=n\n        return real_floor", "def get_real_floor(n):\n    return n-1 if 1 <= n <= 13 else n if n < 1 else n - 2", "def get_real_floor(n):\n    if n == 0 or n == 1:\n        return 0\n    elif n < 0:\n        return n\n    elif n < 14:\n        return n - 1\n    else:\n        return n - 2", "def get_real_floor(n):\n    return n - 1 if (n > 0 and n <= 13) else n - 2 if n > 13 else n", "def get_real_floor(n):\n    if n > 13:\n        n = n - 1\n    if n > 0:\n        n = n - 1\n    return n", "def get_real_floor(n):\n    if n == 0: return 0\n    elif n > 0: return n - 1 if n <= 13 else n - 2\n    else: return n", "def get_real_floor(n):\n    if n>0:\n        return n-1 if n<13 else n-2\n    if n<=0:\n        return n", "def get_real_floor(n):\n    floors = n-1\n    top = n-2\n    basement = n\n    if n >= 1 and n < 13:\n        return floors\n    elif n <=0:\n        return basement\n    else:\n        return top\n", "def get_real_floor(n):\n    return n-1 if n>=1 and n<=12 else n-2 if n>12 else 0+n", "def get_real_floor(n):\n    if n == 0 or n == 1:\n        return 0\n    elif n < 0:\n        return n\n    elif n > 13:\n        return n-2\n    elif n < 13:\n        return n-1\n    return n-1", "def get_real_floor(n):\n    return 0 if n == 0 else 0 if n == 1 else n if n < 0 else n - 1 if n < 13 else n - 2", "def get_real_floor(n):\n    print(n)\n    if n == 0:\n        return 0\n    if n < 13 and n > 0:\n        return n - 1\n    elif n < 0:\n        return n\n        \n    else:\n        return n - 2", "def get_real_floor(n):\n    if n<1:\n        return n\n    elif n==1:\n        return 0\n    elif n>1 and n<=13:\n        return n-1\n    elif n>13:\n        return n-2", "def get_real_floor(n):\n    if n == 0:\n        return 0\n    elif n < 0:\n        return n\n    elif n < 13:\n        return n - 1\n    return n - 2", "def get_real_floor(n):\n    if n < 0:\n        return n\n    if n > 13:\n        return n - 2\n    else:\n        return max(0, n - 1)", "def get_real_floor(n):\n    if 0<=n<=1:\n        return 0\n    elif n>13:\n        return n-2\n    elif 1<n<=13:\n        return n-1\n    else:\n        return n", "def get_real_floor(n):\n    if n <= 0:\n        return n\n    if 0 < n < 13:\n        return n-1\n    if 13 < n:\n        return n-2", "def get_real_floor(n):\n    if 0<n<=13:\n        return n-1\n    if n>13:\n        return n-2\n    else:\n        return n", "def get_real_floor(n):\n    if n == 0:\n        return 0 \n    elif n > 0 and n <= 13:\n        return n - 1\n    elif n > 13:\n        return n - 2\n    else:\n        return n", "def get_real_floor(n):\n    if n < 14 and n >= 1:\n        return n-1\n    if n >= 14:\n        return n-2\n    if n == -1:\n        return n+1  \n    else:\n        return n", "def get_real_floor(n):\n    if n < 1:\n        return n\n    elif 1<=n<=12:\n        return n-1\n    elif n >= 13:\n        return n-2", "def get_real_floor(n):\n    if n < 1:\n        return n\n    return n-2 if n>13 else n-1", "def get_real_floor(n):\n    if n == 0 or n ==1:\n        print((0))\n        return 0\n    if n<13 and n>1:\n        print((n-1))\n        return n-1\n    if n>13:\n        print((n-2))\n        return n-2\n    return n\n", "def get_real_floor(n: int) -> int:\n    return 0 if n == 1 or n == 0 else n - 2 if n > 13 else n if n < 0 else n - 1", "def get_real_floor(n):\n    if 0 < n < 14:\n        return n - 1\n    if 13 < n:\n        return n - 2\n    else:\n        return n", "def get_real_floor(n):\n    if 0<n<13:\n        return n-1\n    elif n>=13:\n        return n-2\n    elif n <=0:\n        return n", "def get_real_floor(n):\n    if n<=0:\n        return n\n    elif n<=1 or n<=12:\n        return n-1\n    else:\n        return n-2", "def get_real_floor(n):\n    if 1 <= n <= 13:\n        return n - 1\n    elif n >= 14:\n        return n - 2\n    else:\n        return n", "def get_real_floor(n):\n    if 0 < n <= 13:\n        return n -1\n    elif n > 13:\n        return n - 2\n\n    return n", "def get_real_floor(n):\n    if n<=0:\n        return n\n    elif(n>0 and n!=13 and n<14):\n        return (n-1)\n    else:\n        return(n-2)", "def get_real_floor(n):\n    if n < 0:\n        return n\n    return max(0, n - 1) if n < 13 else n - 2", "def get_real_floor(n):\n    if 0 < n <= 13:\n        n = n - 1\n    else:\n        if n > 13: \n            n = n - 2\n    return n", "def get_real_floor(n):\n    if n >= 13:\n        return n-2\n    if n > 0:\n        return n-1\n    else:\n        return n", "def get_real_floor(n):\n    if n < 0:\n        return n\n    elif n == 0:\n        return 0\n    elif n == 1:\n        return 0\n    elif n < 13:\n        return n - 1\n    else:\n        return n - 2", "def get_real_floor(n):\n    if n == 0 or n < 0:\n        return n\n    elif n in range(1, 14):\n        return n - 1\n    elif n > 13:\n        return n - 2", "def get_real_floor(n):\n    if n == 1 or n == -1:\n        return 0\n    elif n <= 0:\n        return n\n    elif n < 13:\n        return n - 1\n    else:\n        return n - 2", "def get_real_floor(n):\n    if n <=0:\n        return n\n    elif n <= 13:\n        return n - 1\n    elif n == 15:\n        return 13\n    else:\n        return n - 2"]