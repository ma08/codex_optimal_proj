["from itertools import chain\n\ndef well(arr):\n    c = sum(isinstance(x, str) and x.lower() == 'good' for x in chain.from_iterable(arr))\n    return (\n        'I smell a series!' if c > 2 else\n        'Publish!' if c > 0 else\n        'Fail!'\n    )", "def well(arr):\n    good_ideas = str(arr).lower().count('good')\n    return 'I smell a series!' if (good_ideas > 2) else 'Fail!' if not(good_ideas) else 'Publish!'", "def well(arr):\n    nb_good = sum(1 for lst in arr for word in lst if str(word).lower() == \"good\")\n    return \"I smell a series!\" if nb_good > 2 else \"Publish!\" if nb_good > 0 else \"Fail!\"\n", "from itertools import chain\nfrom typing import List, Any\n\n\ndef well(arr: List[List[Any]]) -> str:\n    good = (a for a in chain(*arr) if isinstance(a, str) and a.lower() == \"good\")\n    \n    if next(good, False):\n        if next(good, False) and next(good, False):\n            return \"I smell a series!\"\n        return \"Publish!\"\n    return \"Fail!\"\n", "def well(arr):\n    total = 0\n    for i in arr:\n        for j in i:\n            if isinstance(j, str) and j.lower() == 'good':\n                total += 1\n    return 'Fail!' if total == 0 else 'I smell a series!' if total > 2 else 'Publish!'\n", "def well(arr):\n    bad1 = 0\n    good = 0\n    for i in arr:\n        for j in i:\n            if str(j).lower() == \"bad\":\n                bad1+=1\n            if str(j).lower() == \"good\":\n                good+=1\n    if 0 < good < 3:\n        return \"Publish!\"\n    if good > 2:\n        return \"I smell a series!\"\n    if good == 0:\n        return \"Fail!\"\n          \n            \n    \n", "well = lambda a,f=__import__(\"itertools\").chain.from_iterable: {0: 'Fail!', 1: 'Publish!', 2: 'Publish!'}.get(sum(str(w).lower() == 'good' for w in f(a)), 'I smell a series!')", "def well(arr):\n    c = ''.join(map(str,arr)).lower().count('good')\n    return ['Fail!','Publish!','I smell a series!'][bool(c)+(c>2)]", "def well(arr):\n    c = len([j for i in arr for j in i if str(j)[0] in \"Gg\"])\n    if c == 0: return \"Fail!\"\n    elif c <= 2: return \"Publish!\"\n    else: return \"I smell a series!\"\n    \n", "def well(arr):\n    s = []\n    for x in arr:\n        s += x\n    a = []\n    for c in s:\n        if isinstance(c, str):\n            a.append(c)\n    cpt = 0    \n    for w in a:\n        if w.lower() == 'good':\n            cpt += 1\n    if cpt > 2: return 'I smell a series!'\n    if 0 < cpt < 3: return 'Publish!'\n    return 'Fail!'\n# Flez\n"]