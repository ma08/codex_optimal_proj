["def evil_code_medal(user_time, gold, silver, bronze):\n    for medal, time in [[\"Gold\", gold], [\"Silver\", silver], [\"Bronze\", bronze]]:\n        if user_time < time:\n            return medal\n            \n    return \"None\"\n", "from bisect import bisect_right as bisect\n\nMEDALS = [\"Gold\", \"Silver\", \"Bronze\", \"None\"]\n\ndef evil_code_medal(user_time, *times):\n    return MEDALS[bisect(times, user_time)]", "def evil_code_medal(t,g,s,b):\n    return \"Gold\"if t<g else\"Silver\"if t<s else\"Bronze\"if t<b else'None'", "def evil_code_medal(user_time, gold, silver, bronze):\n    user_seconds = time_to_seconds(user_time)\n    if user_seconds < time_to_seconds(gold):\n        return \"Gold\"\n    elif user_seconds < time_to_seconds(silver):\n        return \"Silver\"\n    elif user_seconds < time_to_seconds(bronze):\n        return \"Bronze\"\n    else:\n        return \"None\"\n        \ndef time_to_seconds(time):\n    hours, minutes, seconds = time.split(':')\n    return 3600 * int(hours) + 60 * int(minutes) + int(seconds)        ", "def evil_code_medal(user_time, *medals):\n    return next(\n        (name for name, time in zip(\"Gold Silver Bronze\".split(), medals) if user_time < time),\n        \"None\")", "evil_code_medal=lambda *args: [\"None\",\"Bronze\",\"Silver\",\"Gold\"][sum(arg>args[0] for arg in args[1:])]", "def evil_code_medal(user_time, gold, silver, bronze):\n    return ['None', 'Bronze', 'Silver', 'Gold'][\n        (user_time < bronze) + (user_time < silver) + (user_time < gold)\n    ]", "evil_code_medal=lambda t,*m:next((s for s,n in zip((\"Gold\",\"Silver\",\"Bronze\"),m)if t<n),\"None\")", "def evil_code_medal(t, g, s, b):\n    return t<g and 'Gold' or t<s and 'Silver' or t<b and 'Bronze' or 'None'", "def evil_code_medal(*t):\n    return ('None', 'Bronze', 'Silver', 'Gold')[sorted(t, reverse=True).index(t[0])]"]