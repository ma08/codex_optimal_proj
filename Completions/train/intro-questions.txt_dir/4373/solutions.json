["from re import findall\ndef count_smileys(arr):\n    return len(list(findall(r\"[:;][-~]?[)D]\", \" \".join(arr))))", "def count_smileys(arr):\n    eyes = [\":\", \";\"]\n    noses = [\"\", \"-\", \"~\"]\n    mouths = [\")\", \"D\"]\n    count = 0\n    for eye in eyes:\n        for nose in noses:\n            for mouth in mouths:\n                face = eye + nose + mouth\n                count += arr.count(face)\n    return count", "import re\n\ndef count_smileys(arr):\n    return sum(1 for s in arr if re.match(r'\\A[:;][-~]?[)D]\\Z',s))", "def count_smileys(arr):\n    import re\n    smiley = re.compile(r\"[:;][-~]?[)D]\")\n    return sum(bool(re.match(smiley, el)) for el in arr)", "def count_smileys(arr):\n    count = 0\n    if not arr:\n      return 0\n    smileys = [\":)\", \";)\", \":~)\", \";~)\", \":-)\", \";-)\", \":D\", \";D\", \":~D\", \";~D\", \":-D\", \";-D\"]\n    for i in arr:\n      if i in smileys:\n        count += 1\n    return count", "def count_smileys(arr):\n    total = 0\n    eyes = ':;'\n    nose = '-~'\n    mouth = ')D'\n    for char in arr:\n\n        if len(char) == 3:\n            if char[0] in eyes and char[1] in nose and char[2] in mouth:\n                total += 1\n\n        elif len(char) == 2:\n            if char[0] in eyes and char[1] in mouth:\n                total += 1\n    return total", "def count_smileys(arr):\n    smiles = set([a+b+c for a in \":;\" for b in ['','-', '~'] for c in \")D\"])\n    return len([1 for s in arr if s in smiles])", "valid = \":) :D :-) :-D :~) :~D ;) ;D ;-) ;-D ;~) ;~D\".split()\n\ndef count_smileys(arr):\n    return sum(face in valid for face in arr)", "import re\ndef count_smileys(arr):\n    count = 0\n    for i in arr:\n        p = re.compile(\"^[:;][-~]*[)D]\")\n        if p.match(i):\n            count += 1\n    return count", "def count_smileys(arr):\n    return len(list(filter(lambda x: x in [':D',':~D',':-D',';D',';~D',';-D',':)',':~)',':-)',';)',';~)',';-)'],arr)))"]