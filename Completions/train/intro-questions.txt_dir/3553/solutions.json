["import re\n\n\ndef show_me(name):\n    return bool(re.match(r'(-[A-Z][a-z]+)+$', '-' + name))", "def show_me(name):\n    return all(word.isalpha() and word.capitalize() == word for word in name.split('-'))", "from re import match, compile\ndef show_me(name):\n  return match(compile(r'^[A-Z][a-z]+(?:-[A-Z][a-z]+)*$'), name) != None", "import re\n\ndef show_me(name):\n    return bool(re.match(r'([A-Z][a-z]+-)*[A-Z][a-z]+$', name))", "import re\n\ndef show_me(s):\n    return bool(re.match(r\"[A-Z][a-z]*(-[A-Z][a-z]*)*$\", s))", "def show_me(name):\n    return \"--\" not in name and name[0] != \"-\" and name[-1] != \"-\" and name.title() == name and all([c.isalpha() or c == \"-\" for c in name])", "import re\ndef show_me(name):\n    return re.fullmatch(r'[A-Z][a-z]+(-[A-Z][a-z]+)*', name) is not None", "import re\n\ndef show_me(name):\n    return re.match( '^[A-Z][a-z]*(-[A-Z][a-z]*)*$', name) != None", "import re\ndef show_me(name):\n    return re.fullmatch(r'[A-Z][a-z]*(-[A-Z][a-z]*)*', name) is not None", "import re\n\ndef show_me(name):\n    return bool(re.match('[A-Z][a-z]+(-[A-Z][a-z]+)*$', name))"]