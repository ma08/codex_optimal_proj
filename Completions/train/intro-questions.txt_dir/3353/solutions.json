["from itertools import zip_longest\n\ndef poly_subtract(p1, p2):\n    return [x - y for x, y in zip_longest(p1, p2, fillvalue=0)]\n", "from itertools import zip_longest\n\ndef poly_subtract(a, b):\n    return [x - y for x, y in zip_longest(a, b, fillvalue=0)]", "def poly_subtract(p1, p2):\n    p1length = len(p1)\n    p2length = len(p2)\n    length = max(p1length, p2length)\n    list = []\n    \n    for i in range(0, length):\n        a = 0\n        b = 0\n        \n        if i < p1length:\n            a = p1[i]\n        \n        if i < p2length:\n            b = p2[i]\n        \n        list.append(a - b)\n    \n    print(list)\n    \n    return list", "# return the subtraction of the two polynomials p1 and p2.  \ndef poly_subtract(p1, p2):\n    res = []\n    longest_p = max(len(p1), len(p2))\n    for i in range(longest_p):\n        # add the two numbers together unless there is no number there, then just subtract 0 (don't change)\n        res.append((p1[i] if i < len(p1) else 0) - (p2[i] if i < len(p2) else 0))\n    return res", "from itertools import zip_longest\ndef poly_subtract(p1, p2):\n    return [x - y for x, y in zip_longest(p1, p2, fillvalue = 0)]"]