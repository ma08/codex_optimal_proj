["def berserk_rater(synopsis):\n    n = sum([score(s.upper()) for s in synopsis])\n    return 'worstest episode ever' if n < 0 else 'bestest episode ever' if n > 10 else str(n)\n    \ndef score(s):\n    return 5 if 'CLANG' in s else -2 if 'CG' in s else -1", "import re\n\nCG = re.compile(r\"\\bcg\\b\", flags=re.I)\nCLANG = re.compile(r\"\\bclang\", flags=re.I)\n\n\ndef berserk_rater(synopsis):\n    score = sum(\n        (5 if CLANG.search(line) else (-2 if CG.search(line) else -1))\n        for line in synopsis\n    )\n    return (\n        \"worstest episode ever\"\n        if score < 0\n        else \"bestest episode ever\"\n        if score > 10\n        else str(score)\n    )", "from functools import reduce; berserk_rater=lambda s: (lambda score: \"worstest episode ever\" if score<0 else \"bestest episode ever\" if score>10 else str(score))(reduce(lambda a,b: a+(lambda b: 5 if \"clang\" in b else -2 if \"cg\" in b else -1)(b.lower()),s,0))", "def berserk_rater(synopsis):\n    ball = 0\n    ball = sum([ball + 5 if \"clang\" in i.lower() else ball - 2 if \"cg\" in i.lower() else ball - 1 for i in synopsis])\n    return \"worstest episode ever\" if ball < 0 else str(ball) if ball <=10 else \"bestest episode ever\"", "berserk_rater = lambda x: (lambda x: \"worstest episode ever\" if x < 0 else \"bestest episode ever\" if x > 10 else str(x))(sum(map(lambda x: (lambda x: 5 if \"clang\" in x else -2 if \"cg\" in x else -1)(x.lower()), x)))", "def berserk_rater(synopsis):\n    scores = []\n    for sentence in synopsis:\n        # Remove punctuation\n        s = ''.join([c for c in sentence.lower() if c == ' ' or c.isalpha() or c.isdigit()])\n        words = s.split()\n        # Count the appropriate words\n        cg = words.count('cg')\n        clang = sum(1 for w in words if w.startswith('clang'))\n        # Decide sentence scoore\n        if clang:\n            scores.append(5)\n        elif cg:\n            scores.append(-2)\n        else:\n            scores.append(-1)\n        \n    score = sum(scores)\n    # Decode overall score\n    if score < 0:\n        return 'worstest episode ever'\n    if score > 10:\n        return 'bestest episode ever'\n    return str(score)", "def berserk_rater(a):\n    r = 0\n    for s in map(str.lower,a):\n        if 'clang' in s: r += 5\n        elif 'cg' in s: r -=2\n        else: r -= 1    \n    return 'worstest episode ever' if r<0 else str(r) if 0<=r<=10 else 'bestest episode ever'", "def berserk_rater(l):\n    score = 0\n    for i in l:\n        if 'cg' in i.lower() and 'clang' in i.lower(): score += 5\n        elif 'clang' in i.lower(): score += 5\n        elif 'cg' in i.lower(): score -= 2\n        else: score -= 1\n    \n    if score < 0: return 'worstest episode ever'\n    elif score > 10: return 'bestest episode ever'\n    else: return str(score)", "def berserk_rater(synopsis):\n    s=0\n    for sentence in synopsis:\n        if 'clang' in sentence.lower():\n            s+=5\n        elif 'cg' in sentence.lower():\n            s-=2\n        else:\n            s-=1\n    if s<0:\n        return 'worstest episode ever'\n    elif s>10:\n        return 'bestest episode ever'\n    else:\n        return str(s)"]