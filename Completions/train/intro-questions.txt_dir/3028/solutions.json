["import math\n\ndef factorial(n):\n    if n >= 0:\n        return math.factorial(n)", "import math\ndef factorial(n):\n    return math.factorial(n) if n >= 0 else None", "import math\ndef factorial(n):\n    return None if n < 0 else math.factorial(n)", "def factorial(n):\n    if n < 0:\n        return None\n    ret = 1\n    for i in range(2, n + 1):\n        ret *= i\n    return ret\n", "factorial = lambda _: __import__('math').factorial(_) if _>=0 else None", "from math import factorial as fact\n\ndef factorial(n):\n    if n >= 0:\n        return fact(n)", "from math import factorial as f\n\ndef factorial(n):\n    if n < 0:\n        return None\n    elif n == 0:\n        return 1\n    return f(n)", "import math\n\ndef factorial(n):\n    if n < 0 : return None\n    if n == 0 or n == 1 : return 1\n    if n > 0 : return math.factorial(n)\n    #return None\n", "from functools import reduce\ndef factorial(n):\n    if n < 0:\n        return None\n    if n < 2:\n        return 1\n    return reduce((lambda x, y: x*y), range(1, n+1))", "def factorial(n):\n\n  if n >= 0:\n    fact = 1\n    for i in range(2, n+1):\n      fact *= i\n    return fact\n  else:\n    return None"]