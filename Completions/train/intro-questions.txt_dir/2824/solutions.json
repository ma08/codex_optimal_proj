["def encode(s):\n    return ' '.join( w[-2::-1] + w[-1] for w in s.split() )", "def encode(s):\n    s, sub_s = s.split(' '), ''\n    for char in s:\n        sub_s += char[::-1][1:] + char[-1] + ' '\n    return sub_s[:-1]", "encode=lambda s:\" \".join([i[::-1][1:]+i[::-1][0] for i in s.split()])", "import re\n\ndef encode(s):\n     return re.sub(r'\\S+', lambda m: m.group()[-2::-1] + m.group()[-1], s)", "def encode(s):\n    return \" \".join([i[:-1][::-1] + i[-1] for i in s.split(\" \")])", "def encode(s):\n    first_to_last = lambda x: x[1:] + x[0]\n    return ' '.join((first_to_last(x[::-1]) for x in s.split()))", "def encode(s):\n    k = ' '.join([i[::-1][1:] + i[::-1][0] for i in s.split(' ')])\n    return k", "def encode(s):\n    return \" \".join(x[-2::-1] + x[-1] for x in s.split())", "def encode(s):\n    r = []\n    for x in s.split():\n        x = x[::-1]\n        r.append(x[1:] + x[0])\n    return \" \".join(r)", "def encode(s):\n    return ' '.join(i[::-1][1:] + i[::-1][0] for i in s.split() )    "]