["def lucasnum(n):\n    a = 2\n    b = 1\n\n    flip = n < 0 and n % 2 != 0\n\n    for _ in range(abs(n)):\n        a, b = b, a + b\n    \n    return -a if flip else a", "SEQUENCE = [2,  1]\n\ndef lucasnum(n):\n    try:\n        return SEQUENCE[abs(n)] * (1, -1)[n < 0 and n % 2]\n    except IndexError:\n        while len(SEQUENCE) < abs(n) + 1:\n            SEQUENCE.append(SEQUENCE[-1] + SEQUENCE[-2])\n        return lucasnum(n)", "from numpy import matrix\n\ndef lucasnum(n):\n    return int((matrix('2 1; 1 3') * matrix(\n        '0 1; 1 1' if n >= 0 else '-1 1; 1 0', object\n        ) ** abs(n))[0, 0])", "memo = {0:2, 1:1}\ncurrent = [-1, 2]\n\ndef lucasnum(n):\n    while n not in memo:\n        if n < 0:\n            x = current[0]\n            memo[x] = memo[x+2] - memo[x+1]\n            current[0] -= 1\n        else:\n            x = current[1]\n            memo[x] = memo[x-2] + memo[x-1]\n            current[1] += 1\n    return memo[n]", "def lucasnum(n):\n    a, b = 2, 1\n    for i in range(abs(n)):\n        a, b = b, a + b\n    return a * (-1 if n < 0 and n % 2 else 1)", "memo = [2,1]\n\ndef lucasnum(n):\n    m = abs(n)\n    while len(memo) < m+1:\n        memo.append(memo[-1]+memo[-2])\n    return memo[m] * (-1)**(n<0 and n%2)", "def lucasnum(n):\n    a, b, i = 2, 1, 0\n    while True:\n        if i == n:    return a\n        if n > 0:\n            i += 1\n            a, b = b, a+b\n        else:\n            i -= 1\n            b,a = a, b-a   ", "def lucasnum(n):\n    if n == 1:\n        return 1\n    elif n == 0:\n        return 2\n    elif n > 1:\n        a, b = 2, 1\n        for i in range(n):\n            a, b = b, a+b\n        return a\n    else:\n        a, b = -1, -2\n        for i in range(abs(n)):\n            a, b = b, a-b\n        return b*-1", "def lucasnum(n):\n    if n == 0:\n        return 2\n    elif n == 1:\n        return 1\n    else:\n        if n > 1:\n            a, b = 2, 1\n            for i in range(n):\n                a, b = b, a+b\n            return a\n        else:\n            a, b = -1, -2\n            for i in range(abs(n)):\n                a, b = b, a-b\n            return b*-1\n", "lucas_sieve = [2, 1, 3, 4, 7]\ndef lucasnum(n):\n  neg, n = 1 if n >= 0 or n % 2 == 0 else -1, abs(n)\n  return neg * lucas_expand(n)\ndef lucas_expand(n):\n  l = len(lucas_sieve)\n  while n >= l:\n    lucas_sieve.append(lucas_sieve[l - 1] + lucas_sieve[l - 2])\n    l = len(lucas_sieve)\n  return lucas_sieve[n]"]