["def reverse(n):\n    m = 0\n    while n > 0:\n        n, m = n // 10, m * 10 + n % 10\n    return m", "def reverse(n):\n    return int(str(n)[::-1])", "def reverse(n):\n    r = 0\n    while n:\n        r = r*10 + n%10\n        n //= 10\n    return r", "def reverse(n):\n    \"\"\"Returns n with all digits reversed. Assume positive n.\"\"\"\n    rev = lambda n, r: rev(n // 10, 10 * r + n % 10) if n > 0 else r\n    return rev(n, 0)", "def reverse(n):\n    rev = 0\n    while n:\n        rev = rev * 10 + n % 10\n        n //= 10\n    return rev", "def reverse(n, r=0):\n    return reverse(n // 10, r * 10 + n % 10) if n else r", "def reverse(n):\n    return int('{:d}'.format(n)[::-1])", "import math\ndef reverse(hernia):\n    power = int(math.log10(hernia))\n    if power == 0:\n        return hernia\n    else:\n        return ((hernia % 10) * (10 ** power)) + reverse(hernia // 10)", "def reverse(n, acc = 0):\n    return acc if n == 0 else reverse(n//10, acc*10 + n%10)", "from math import log10\n\ndef reverse(n):\n    l = int(log10(n))\n    return sum(((n // 10**i) % 10) * 10**(l - i) for i in range(l + 1))\n"]