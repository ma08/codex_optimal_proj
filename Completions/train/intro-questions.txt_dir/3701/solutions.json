["from functools import reduce\ndef lcm(*args):\n    return reduce(lcms, args) if args else 1\n\ndef gcd(a,b):\n    \"\"\"Euclidean Algorithm\"\"\"\n    return b if a == 0 else gcd(b % a, a)\n    \ndef lcms(a, b):\n    return (a*b) // gcd(a,b)", "from math import gcd\nfrom functools import reduce\ndef lcm(*args):\n    return reduce(lambda x,y : abs(x*y)//gcd(x,y), args) if args else 1\n", "from fractions import gcd\ndef lcm(*args):\n    m = 1 \n    for i in args:\n        if i == 0:\n            return 0\n        m = m*i/gcd(m,i)\n    return m\n        \n"]