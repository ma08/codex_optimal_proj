["# -*- coding: utf-8 -*-\ndef build_a_wall(x=0, y=0):\n    if type(x) != int or type(y) != int or x < 1 or y < 1: return\n    if x * y > 10000: return \"Naah, too much...here's my resignation.\"\n    res = [[\"\u25a0\u25a0\"]*y if i&1^x&1 else [\"\u25a0\"] + [\"\u25a0\u25a0\"]*(y-1) + [\"\u25a0\"] for i in range(x)]\n    return '\\n'.join(map('|'.join, res))", "# -*- coding: utf-8 -*-\ndef build_a_wall(x=0,y=0):\n    if not x or not y or type(x) != int or type(y) != int or x<0 or y<0 : return\n    if x*y > 10000 : return \"Naah, too much...here's my resignation.\"\n    brick,half = '\u25a0\u25a0','\u25a0'\n    m,s = \"|\".join([brick] * y),half + '|' + \"|\".join([brick]*(y-1)) + \"|\" + half\n    return \"\\n\".join( [[m, s][i & 1 == x & 1] for i in range(x)])", "FULL = \"\u25a0\u25a0\"\nHALF = \"\u25a0\"\nSEP = \"|\"\n\ndef build_a_wall(x=None, y=None):\n    if any((not isinstance(item, int) or item < 1) for item in (x, y)):\n        return None\n    if x * y > 10000:\n        return \"Naah, too much...here's my resignation.\"\n        \n    base_row = SEP.join([FULL] * (y - 1))\n    odd_row = SEP.join([base_row, FULL])\n    even_row = SEP.join([HALF, base_row, HALF])\n    \n    return \"\\n\".join(odd_row if i % 2 else even_row for i in range(-x, 0))", "def generateBricks(isCut, y):\n    return \"{0}|{1}|{0}\".format(\"\u25a0\" * (1+isCut), '|'.join(\"\u25a0\u25a0\" for _ in range(y-1-isCut)))\n\ndef build_a_wall(*args):\n    if len(args) != 2 or any(type(z) != int or z <= 0 for z in args):\n        return None\n        \n    x,y = args\n    return (\"Naah, too much...here\\'s my resignation.\" if x*y > 10000 \n            else '\\n'.join( generateBricks((x-nr)%2, y) for nr in range(x) ))", "def build_a_wall(x=None, y=None):\n    if isinstance(x, int) and isinstance(y, int) and x > 0 and y > 0:\n        if x * y > 10000:\n            return \"Naah, too much...here's my resignation.\"\n        hb = \"\u25a0\"\n        b = hb + hb\n        even = ((b + \"|\") * y)[:-1]\n        odd =  hb + \"|\" + ((b + \"|\") * (y - 1)) + hb\n        return \"\\n\".join([even if r % 2 == 0 else odd for r in range(x-1, -1, -1)])\n    return None", "def build_a_wall(x=0, y=0):\n    if isinstance(x, int) and isinstance(y, int) and x > 0 and y > 0:\n        if x * y > 10000:\n            return \"Naah, too much...here's my resignation.\"\n        a = \"|\".join([\"\u25a0\u25a0\"] * y)\n        b = \"|\".join([\"\u25a0\"] + [\"\u25a0\u25a0\"] * (y - 1) + [\"\u25a0\"])\n        if x % 2:\n            a, b = b, a\n        return \"\\n\".join(a if i % 2 else b for i in range(x))", "def build_a_wall(x=0,y=0):\n    brick = \"\u25a0\"\n    if isinstance(x, int) and isinstance(y,int):\n        if x <1 or y < 1:\n            return None\n        elif x*y>10000:\n            return \"Naah, too much...here's my resignation.\"\n        else:\n            brick = \"\u25a0\"\n            line1 = [\"\u25a0\"]\n            line2 = []\n            for i in range(y - 1):\n                line1.append(2 * brick)\n                line2.append(2 * brick)\n            line1.append(brick)\n            line2.append(2 * brick)\n            line1 = \"|\".join(line1)\n            line2 = \"|\".join(line2)\n            total = []\n            odd = (x+1)%2\n            for i in range(odd, x + odd):\n                if i % 2 == 1:\n                    total.append(line1)\n                else:\n                    total.append(line2)\n            total = \"\\n\".join(total)\n            return total\n    else:\n        return None\n\n", "def build_a_wall(x=None,y=None):\n    try:\n        if x*y > 10000: return \"Naah, too much...here's my resignation.\"\n        if x*y <= 0: raise Exception\n        d = ['|'.join(['\u25a0\u25a0']*y), '|'.join(['\u25a0']+['\u25a0\u25a0']*(y-1)+['\u25a0'])]\n        r = []\n        for i in range(x):\n            r.append(d[i%2])\n        return '\\n'.join(r[::-1])\n\n    except:\n        return", "# -*- coding: utf-8 -*-\ndef build_a_wall(x=None,y=None):\n    if not all([isinstance(x, int), isinstance(y, int)])\\\n        or x<1 or y<1:\n        return None\n    elif x*y>10000:\n        return \"Naah, too much...here\\'s my resignation.\"\n    else:\n        halfbrick = \"\u25a0\"\n        brick = 2*halfbrick\n        mortar = \"|\"\n        wall = \"\"\n        for i in range(x):\n            if i % 2 == 0:\n                wall = brick + (mortar+brick)*(y-1) + wall\n            else:\n                wall = halfbrick + (mortar+brick)*(y-1) + mortar + halfbrick + wall\n            wall = \"\\n\" + wall if i < x-1 else wall\n        return wall\n"]