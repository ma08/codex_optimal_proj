["def get_min_max(seq): \n    return min(seq), max(seq)", "def get_min_max(L): \n    return (min(L),max(L))", "get_min_max = lambda seq: (min(seq), max(seq))", "def get_min_max(seq):\n    max = seq[0]\n    min = seq[0]\n    for a in seq:\n        if a > max: max = a\n        if a < min: min = a\n    return min,max\n", "def get_min_max(seq): \n    return (min(seq),max(seq)) if len(seq)>1 else (seq[0],seq[0])", "def get_min_max(seq): \n    s = sorted(seq)\n    return (s[0], s[-1])\n", "# Computational complexity of 1.5n\ndef get_min_max(seq):\n    seq = iter(seq)\n    seq_min = seq_max = next(seq)\n\n    while True:\n        try:\n            a = next(seq)\n        except StopIteration:\n            break\n\n        b = next(seq, seq_min)\n        if a > b:\n            seq_min = min(b, seq_min)\n            seq_max = max(a, seq_max)\n        else:\n            seq_min = min(a, seq_min)\n            seq_max = max(b, seq_max)\n\n    return seq_min, seq_max", "def get_min_max(seq):\n    seq.sort()\n    return (seq[0],seq[0]) if len(seq) is 1 else (seq[0],seq[len(seq)-1])\n", "def get_min_max(seq): \n    return (min(seq),max(seq))# your code here\n# print(min(seq),max(seq))pass\n", "def get_min_max(seq): \n    min = seq[0]\n    max = seq[0]\n    for number in seq:\n        if number > max:\n            max = number\n      \n    for number in seq:\n        if number < min:\n            min = number\n          \n    return (min, max)\n"]