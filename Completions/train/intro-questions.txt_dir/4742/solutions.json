["def duplicates(arr):\n    return sum(arr.count(i)//2 for i in set(arr))", "from collections import Counter\n\ndef duplicates(arr):\n    return sum(v//2 for v in list(Counter(arr).values()))\n", "def duplicates(arr):\n    return sum((arr.count(n) // 2 for n in set(arr)))    ", "from collections import Counter\n\ndef duplicates(arr):\n    return sum(v >> 1 for v in Counter(arr).values())", "from collections import Counter\n\ndef duplicates(a):\n    return sum(e//2 for e in Counter(a).values())", "import collections\ndef duplicates(arr: list):\n    sumDup = 0\n    arr = collections.Counter(arr)\n    for i in arr:\n        sumDup += arr[i] // 2\n    return sumDup", "def duplicates(lst):\n    return sum(lst.count(n) // 2 for n in set(lst))\n", "def duplicates(arr):\n    return sum([arr.count(item)//2 for item in set(arr)])", "def duplicates(arr):\n    i=0\n    for iter in arr:\n        i+=int(arr.count(iter)/2)/arr.count(iter)\n    return round(i)\n        \n", "def duplicates(arr):\n    seen, count = set(), 0\n    for n in arr:\n        if n in seen:\n            seen.remove(n)\n            count += 1\n        else:\n            seen.add(n)\n    return count"]