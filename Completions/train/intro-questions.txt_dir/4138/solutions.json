["def count_correct_characters(c, g):\n    if len(c) != len(g): raise Exception('Error')\n    return sum(1 for i,j in zip(c,g) if i==j)", "def count_correct_characters(s, t):\n    assert len(s) == len(t)\n    return sum(a == b for a, b in zip(s, t))", "def count_correct_characters(correct, guess):\n    if len(correct) == len(guess):\n        return sum(1 for cc, cg in zip(correct, guess) if cc == cg)\n    else:\n        raise Exception", "def count_correct_characters(correct, guess):    \n    if len(correct) != len(guess):\n        raise Error('The two lengths are not the same')\n    return sum(correct[i] == guess[i] for i in range(len(correct)))", "def count_correct_characters(correct, guess):\n  if len(correct) == len(guess):\n    return sum(c == g for c, g in zip(correct, guess))\n  else:\n    raise Exception(\"guess contains the wrong number of characters\")", "def count_correct_characters(correct, guess):\n  if len(correct) != len(guess):\n    raise ValueError('Error: different word lengths')\n  return sum(a == b for a,b in zip(correct, guess))", "def count_correct_characters(correct, guess):\n    # Code here\n    print(correct, guess)\n    if len(correct )!=len(guess ):return error\n\n    a=list( (correct))\n    b=list( (guess))\n    print(a,b) \n    c=0\n    for i in range(len(a)):\n        if a[i]  == b[i]:\n            c=c+1\n    return c", "def count_correct_characters(correct, guess):\n    if len(correct)!=len(guess):raise Exception()\n    return sum(l1==l2 for l1,l2 in zip(correct,guess))", "def count_correct_characters(correct, guess):\n    if len(correct) != len(guess):\n        raise Exception('Wrong length')\n    res = sum(1 for a, b in zip(correct, guess) if a == b)\n    return res", "def count_correct_characters(correct, guess):\n    if len(correct) != len(guess): raise Exception\n    return sum(a == b for a,b in zip(correct, guess))\n", "def count_correct_characters(correct, guess):\n    assert len(correct)==len(guess)\n    \n    return len([a for a,b in zip(correct, guess) if a==b])", "def count_correct_characters(a, b):\n    return len([i for i in range(len(a)) if a[i]==b[i]]) if len(a)==len(b) else error", "def count_correct_characters(a, b):\n    assert(len(a) == len(b))\n    return sum(a[i] == b[i] for i in range(len(a)))", "def count_correct_characters(correct, guess):\n    num = 0\n    if len(correct) != len(guess):\n        raise Exception(\"The lengths are not the same\")\n    for n in range(len(correct)):\n        if list(correct)[n] == list(guess)[n]:\n            num += 1\n    return num\n\n", "def count_correct_characters(correct, guess):\n    if len(correct)!=len(guess):\n        raise Exception()\n    return sum(c==g for c,g in zip(correct,guess))", "def count_correct_characters(correct, guess):\n    if len(correct) != len(guess):\n        raise Exception\n    return sum(i==j for i,j in zip(correct,guess))", "def count_correct_characters(correct, guess):\n    if len(correct) != len(guess):\n        raise 'Error!'\n    else:\n        count = 0\n        for i, x in enumerate(correct):\n            for j, y in enumerate(guess):\n                if i == j and x == y:\n                    count += 1\n        return count\n    \n", "def count_correct_characters(correct, guess):\n    if len(correct)!=len(guess):\n        raise ValueError\n    else:\n        return sum(1 for x,y in zip(correct, guess) if x==y)", "def count_correct_characters(correct, guess):\n    if len(correct) != len(guess):\n        raise Exception()\n    count = 0\n    for i in range(len(guess)):\n        if correct[i] == guess[i]:\n            count += 1\n    return count", "def count_correct_characters(c, g):\n    if len(c) != len(g): raise ValueError('Is this the error you wanted?')\n    else: return sum([1 for i in zip(c,g) if i[0]==i[1]])\n"]