["def sum_times_tables(table,a,b):\n    return sum(table) * (a + b) * (b - a + 1) // 2 \n", "def sum_times_tables(table,a,b):\n    s = 0\n    for i in range(a,b+1):\n        s = s+i*sum(table)\n    return s ", "def sum_times_tables(table,a,b):\n    return sum(table) * sum(range(a, b+1))", "def T(n):\n    return n * (n + 1) // 2\n\ndef sum_times_tables(table,a,b):\n    return sum(table) * (T(b) - T(a - 1))", "def sum_times_tables(table,a,b):\n    n = sum(table)\n    return n and sum(range(n * a, n * (b + 1), n))", "def sum_times_tables(table,a,b):\n    total=0\n    for x in range(a,b+1):\n        total += sum(list([x*n for n in table]))\n    return total\n", "def sum_times_tables(table,a,b):\n    return sum(table)*(summa(b) - summa(a-1))\n\n\ndef summa(n):\n    return n*(n+1)/2", "def sum_times_tables(table, a, b):\n    return sum(x * y for x in table for y in range(a, b + 1))", "def sum_times_tables(table,a,b):\n    return(sum(list(map(lambda x: sum(list(map(lambda y: y * x ,range(a, b+1)))) , table))))", "def sum_times_tables(table, a, b):\n    return sum(table) * (a + b) * (b + 1 - a) / 2"]