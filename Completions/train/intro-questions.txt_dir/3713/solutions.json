["def find_deleted_number(arr, mixed_arr):\n    return sum(arr)-sum(mixed_arr)", "def find_deleted_number(a, b):\n    return (set(a) - set(b)).pop() if len(a) != len(b) else 0", "def find_deleted_number(arr, mixed_arr):\n    lost = 0\n    for i in arr:\n        if i not in mixed_arr:\n            lost = i\n            \n    return lost", "find_deleted_number=lambda a,m: next((e for e in set(a)-set(m)), 0)", "def find_deleted_number(arr, mixed_arr):\n    return 0 if not arr else arr[-1]*(arr[-1]+1)/2 - sum(mixed_arr)", "def find_deleted_number(arr, mixed_arr):\n    return len(arr) > len(mixed_arr) and (set(arr) - set(mixed_arr)).pop()", "def find_deleted_number(arr, mixed_arr):\n    res = []\n    for n in arr:\n        if n not in mixed_arr: return n\n    return 0", "def find_deleted_number(arr, mixed_arr):\n    #Works only if exactly one number is missing\n    return sum(arr)-sum(mixed_arr)", "def find_deleted_number(arr, mixed_arr):\n    #Your code here\n    ret = 0\n    for i in arr:\n        if i not in mixed_arr:\n            ret = i\n    \n    return ret", "def find_deleted_number(arr, mixed_arr):\n    arr = set(sorted(arr))\n    mixed_arr = set(sorted(mixed_arr))\n    return 0 if arr == mixed_arr else list(arr.difference(mixed_arr))[0]"]