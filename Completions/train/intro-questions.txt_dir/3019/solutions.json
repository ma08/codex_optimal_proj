["def str_count(strng, letter):\n    counter = 0\n    \n    for chr in strng:\n        if chr == letter:\n            counter += 1\n        \n    return counter", "def str_count(strng, letter):\n    return (strng.count(letter))", "def str_count(string, letter):\n    return string.count(letter)", "str_count = lambda strng, letter: strng.count(letter)", "# return count of occurrences the 2nd argument is found in the first one\n# input - two strings\n# output - integer\n# edge cases - empty strings for first argument, in that case return 0\n\n\ndef str_count(strng, letter):\n# start counting from 0\n    count = 0\n# loop over every element in string\n    for e in strng:\n# if element is equal to letter in second argument\n        if e == letter:\n# add element to the count\n            count += 1\n# return count of letter in string\n    return count\n\n", "def str_count(_str: str, letter: str) -> int:\n    \"\"\" Get an integer of the count of occurrences the letter is found in the given string. \"\"\"\n    return _str.count(letter)", "def str_count(strng, letter):\n    count = 0\n    if letter in strng:\n        for i in range(len(strng)):\n            if strng[i] == letter:\n                count += 1\n        return count\n    else:\n        return 0", "def str_count(strng, letter):\n    count = 0\n    for i in strng:\n        if i == letter:\n            count += 1\n    return count if count != 0 else 0", "def str_count(st, l):\n    return st.count(l)", "import re\ndef str_count(strng, letter):\n   return len(strng.split(letter)) - 1", "def str_count(strng, letter):\n    return sum([ch == letter for ch in strng])", "def str_count(string, letter):\n    return sum(map(lambda x: x == letter, string))", "def str_count(strng, letter):\n    from collections import Counter\n    temp = Counter(strng)\n    try:\n        return temp[letter]\n    except:\n        return 0", "\ndef str_count(strng, letter):\n    if strng in ['']:\n        return 0\n    else:\n        return strng.count(letter)\n", "def str_count(strng, letter):\n    count =0\n    for i in range(0,len(strng)):\n        if strng[i] == letter:\n            count = count +1\n    return count", "def str_count(strng, letter):\n    return strng.count(letter, 0, len(strng))", "str_count=lambda x,y:x.count(y)#(strng, letter):\n", "def str_count(strng, letter):\n    count = 0\n    for i in strng:\n        if i == letter:\n            count += 1\n    return count", "def str_count(string: str, letter: str) -> int:\n    \"\"\" This function returns an integer of the count of occurrences the 2nd argument is found in the first one. \"\"\"\n    count_letter = 0\n    for i in string:\n        if i == letter:\n            count_letter += 1\n    return count_letter", "def str_count(string, letter):\n    # Your code here ;)\n    count=0\n    if string == '':\n        return 0\n    else:\n        for i in range(len(string)):\n            if string[i] == letter:\n                count=count+1\n    return count\n        \n", "def str_count(strng, letter):\n    x=0\n    for i in range(len(strng)):\n        if strng[i]==letter:\n            x+=1\n    return x ", "def str_count(strng, letter):\n    c = 0\n    for char in strng:\n        if letter == char:\n            c+=1\n    return c", "def str_count(strng, letter):\n    # Without using count method.\n    count = 0\n    for i in strng:\n        if i == letter:\n            count += 1\n    \n    return count", "def str_count(strng, letter):\n    strn = 0\n    for i in strng:\n        a = i.count(letter)\n        strn += a\n    return strn", "def str_count(strng, letter):\n    x = list(strng)\n    y = 0\n    for k in x:\n        if k == letter:\n            y += 1\n        else:\n            y += 0\n    return y\n    # Your code here ;)\n", "def str_count(string, letter):\n    counter = 0\n    \n    for n in string:\n        if n == letter:\n            counter += 1\n        else:\n            counter + 0\n            \n    return counter\n            \n    \n    # Your code here ;)\n", "def str_count(strng, letter):\n    sum=0\n    for i in range(0,len(strng)):\n        if letter==strng[i]: sum+=1\n    return sum\n", "def str_count(string, letter):\n    res = 0\n    for c in string.lower():\n        res += 1 if c == letter else 0\n    return res", "def str_count(strng, letter):\n    count = 0\n    for letr in strng:\n        if letter == letr: count += 1\n        else: count += 0\n    return count", "def str_count(strng, letter):\n    # Your code here ;)\n    count = 0\n    \n    for alphabet in strng:\n        if letter == alphabet:\n            count += 1\n    return count\n", "def str_count(a, b):\n    count=0\n    for i in a:\n        if b==i:\n            count+=1\n    return count", "def str_count(string, letter):\n    count = 0\n    for l in string:\n        if letter == l:\n            count += 1\n    return count", "from collections import Counter\n\ndef str_count(strng, letter):\n    tot = Counter(strng)\n    \n    return tot[letter]", "def str_count(strng, letter):\n    if strng:\n        return strng.count(letter)\n    else: 0 ", "def str_count(strng,\n              letter):\n\n    return strng.count(letter)\n", "str_count = lambda s,l : len([i for i in range(len(s)) if s.startswith(l, i)])", "def str_count(strng, letter):\n    sm = 0\n    for i in strng:\n        if i == letter:\n            sm += 1\n    return sm", "def str_count(string, letter):\n    res=0\n    for i in string:\n        if i==letter:\n            res+=1\n    return res", "def str_count(strng, letter):\n    Liste=list(strng)\n    #print(Liste)\n    Counts=dict()\n    for ch in Liste:\n        if ch not in Counts:\n            Counts[ch]=1\n        else:\n            Counts[ch]=Counts[ch]+1\n    #print(Counts)\n    if letter in Counts:\n        return Counts[letter]\n    else:\n        return 0\n\n    return Counts[letter]", "def str_count(strng, letter):\n    soln = 0\n    \n    for char in strng:\n        if char == letter:\n            soln += 1\n    return soln", "def str_count(strng, letter):\n    # Your code here ;)\n    i = 0\n    n = 0\n    while i <= len(strng) - 1:\n        for j in strng: \n            if j == letter:\n                n = n + 1\n                \n        i = i + 1\n        return n\n", "def str_count(strng, letter):\n    counter = 0\n    for char in strng:\n        if letter==char:\n            counter +=1\n    return counter", "def str_count(strng, letter):\n    \"\"\"(^__^)\"\"\"\n    return strng.count(letter)\n", "def str_count(strng, letter):\n    import re\n    list = re.findall(letter, strng)\n    return len(list)\n", "def str_count(strng, letter):\n    arr = []\n    for j in letter:\n        for i in strng:\n            if j == i:\n                arr.append(j)\n    return len(arr)\n", "def str_count(strng, letter):\n    k = 0\n    for i in strng:\n        if letter == i:\n            k += 1\n    return k", "def str_count(strng, letter):\n    letter_count = {letter: 0}\n    \n    for char in strng:\n        if char == letter:\n            letter_count[char] += 1\n    \n    return letter_count[letter]", "def str_count(strng, letter):\n    strngL = list(strng)\n    letterCount = 0 \n    for i in range(len(strngL)): \n        if strngL[i] == letter: \n            letterCount += 1\n    return letterCount", "def str_count(string, letter):\n    amount = 0\n    for l in string:\n        if l == letter:\n            amount += 1\n    return amount\n", "def str_count(strng, letter):\n    ans = 0\n    for c in strng:\n        if c == letter:\n            ans += 1\n    return ans", "def str_count(strng, letter):\n    letter_count = 0\n    for i in strng:\n        if i == letter:\n            letter_count += 1\n    return letter_count", "def str_count(str, letter):\n    c = 0\n    for l in str:\n        if l == letter:\n            c += 1\n    return c", "def str_count(strng, letter):\n    return strng.count(letter) if len(strng)>0 and letter  in strng  else 0", "def str_count(st, letter):\n    r = 0\n    for i in st: \n        if i == letter: r += 1\n    return r", "def str_count(strng: str, letter: str) -> int:\n    return strng.count(letter)", "def str_count(string, letter):\n    return len([s for s in string if s == letter])", "def str_count(string, letter):\n    count = 0\n    for c in string:\n        if letter == c:\n            count += 1\n    return count", "def str_count(string, letter):\n    return string.count(letter) if len(string) > 0 else 0", "def str_count(strng, letter):\n    answer=0\n    x=0\n    length=len(strng)\n    while x<length:\n        if strng[x]==letter:\n            answer=answer+1\n        x=x+1\n    return answer\n", "def str_count(strng, letter):\n    \n#    return sum(1 for x in strng if x == letter)\n    \n    count = 0\n    for i in strng:\n        if i == letter:\n            count += 1\n        else:\n            count \n    return count", "def str_count(strng, letter):\n    count = 0\n    for i in range(len(strng)):\n        if strng[i] == letter[0]:\n            count += 1\n    return count", "def str_count(strng, letter):\n    count = 0 \n    for check in(strng):\n        if check == letter:\n            count += 1\n    return count\n", "def str_count(strng, letter):\n    if strng.find(letter)==-1:\n        return 0\n    else :\n        return strng.count(letter)\n", "def str_count(strng, letter):\n    for i in strng:\n        if strng.count(letter) >= 0:\n            return strng.count(letter)", "def str_count(string, letter):\n    m=string.count(letter)\n    return m\n   \n               \n        \n    # Your code here ;)\n", "def str_count(string, letter):\n    result = 0\n    for i in string:\n        if i == letter:\n            result += 1\n    return result", "def str_count(strng, letter):\n    val = 0\n    for alpha in strng:\n        if letter == alpha:\n            val += 1\n    print(val)\n    return val\n", "def str_count(strng, letter):\n    total = 0\n    for i in range(len(strng)):\n        if letter == strng[i]:\n            total += 1\n    return total", "def str_count(strng, letter):\n    count = 0\n    i = 0\n    if len(strng) == 0:\n        return count\n    else:\n        for letters in strng:\n            if strng[i] == letter[0]:\n                count += 1\n                i += 1\n            else:\n                i += 1\n        return count", "def str_count(string, letter):\n    counter = 0\n    for i in string:\n        if i == letter:\n            counter = counter + 1\n    return counter", "def str_count(strng, letter):\n\n    if letter not in strng:\n        return 0\n    else:\n        return 1 + str_count(strng.replace(letter,\"\",1), letter)", "def str_count(strng, letter):\n    return strng.count(letter) # can't spll", "def str_count(strng, letter):\n    # Your code here ;)\n    maara = strng.count(letter)\n    return(maara)", "def str_count(strng, letter):\n    count = 0\n    for i in strng:\n        if i == letter:\n            count +=1\n        else:\n            pass\n    return count", "def str_count(strng, letter):\n    i = 0\n    for c in strng:\n        if c == letter:\n            i +=1\n    return i", "def str_count(strng, letter):\n    arr = list(strng)\n    i=0\n    for item in arr :\n        if item == letter :\n            i+=1\n    return i\n            \n    # Your code here ;)\n", "def str_count(strng, letter):\n    return len([\"big ass\" for x in strng if x == letter])", "def str_count(s, r):\n    return len([x for x in s if x==r])", "import re\ndef str_count(strng, letter):\n    x = re.findall(letter, strng)\n    return len(x)", "def str_count(strng, letter):\n    instances = 0\n    for char in strng:\n        if char == letter:\n            instances += 1\n    return instances", "def str_count(strng, letter):\n    quantity_letter = 0\n    for i in strng:\n        if i == letter:\n            quantity_letter = quantity_letter + 1\n    return quantity_letter", "def str_count(strng, letter):\n    res = 0\n    for simv in strng:\n        if simv is letter:\n            res = res + 1\n    return res", "def str_count(stroka, letter):\n    spisok = list(stroka)\n    razi = 0\n    x = 0\n    while x != len(spisok):\n        if spisok[x] == letter:\n            razi = razi +1\n            x=x+1\n        else:\n            x=x+1\n    return razi", "def str_count(string, letter):\n    total = 0\n    for i in string:\n        if i == letter:\n            total += 1\n        else:\n            pass\n    return total      \n", "def str_count(strng, letter):\n    a=0\n    for i in strng:\n        if letter==i:\n            a=a+1\n    return a", "def str_count(strg, letter):\n    # Your code here ;)\n    return strg.count(letter)\n", "def str_count(strng, letter):\n    a = 0\n    for l in strng:\n        if l == letter:\n            a += 1\n    return a\n", "def str_count(strng, letter):\n    j = 0\n    for i in range (0, len(strng)):\n        if strng[i] == letter:\n            j += 1\n    return j", "def str_count(strng, letter):\n    y = 0\n    for n in strng:\n        if n == letter:\n            y += 1\n    return y", "def str_count(strng, letter):\n    count_letter = 0 \n    for i in strng:\n        if letter == i:\n            count_letter += 1 \n    return count_letter         ", "def str_count(strng, letter):    \n    return sum(True for x in strng if x == letter)", "def str_count(strng, letter):\n    # Your code here ;)\n    count=0\n    x=0\n    while(x<len(strng)):\n        if(letter == strng[x]):\n            count+=1\n        x+=1\n    return count", "def str_count(strng, letter):\n    count = 0\n    for i in strng:\n        if i == letter:\n            count += 1\n    return count\n\nstr_count('hello', '')", "def str_count(strng, letter):\n    total = 0\n    for i in range(len(strng)):\n        if strng[i] == letter:\n            total += 1\n    return total", "def str_count(string, letter):\n    # Your code here ;)\n    count = 0\n    for i in range(len(string)):\n        if letter in string[i]:\n            count += 1\n    return count", "def str_count(strng, letter):\n    count = 0\n    for item in strng: \n            if item in letter: \n                count+= 1\n    return(count)\n"]