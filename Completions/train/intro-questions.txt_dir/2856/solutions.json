["def gap(num):\n    s = bin(num)[2:].strip(\"0\")\n    return max(map(len, s.split(\"1\")))", "import re\ndef gap(num):\n    x=re.findall('(?=(10+1))',bin(num).lstrip('0b')) \n    return max([len(i)-2 for i in x]) if x else 0", "import re\n\ndef gap(num):\n\n    n = 0\n\n    for m in re.finditer('(?=(1(0+)1))', bin(num)[2:]):\n        n = max(n, m.end(2) - m.start(2))\n\n    return n", "def gap(num):\n    binary = bin(num)[2:]\n    gaps = binary.strip(\"0\").split(\"1\")\n    return len(max(gaps))\n", "def gap(num):\n    return len(max(bin(num)[2:].split('1')[1:-1]))", "def gap(num):\n    return len(max(bin(num)[2:].strip(\"0\").split(\"1\")))\n    \n", "def gap(num):\n    return len(max((bin(num)[2:]).rstrip('0').split('1')))\n    \n", "import re\n\ndef gap(num):\n    num = bin(num)[2:]\n    return max(map(len, re.findall(\"(?<=1)0+(?=1)\", num)), default=0)", "def gap(num):\n    return max(len(seq) for seq in format(num, 'b').strip('0').split('1'))\n", "from regex import findall\n\ndef gap(num):\n    if num < 2: return 0\n    return max(map(len, findall(r\"1(0*)(?=1)\", f\"{num:b}\")))"]