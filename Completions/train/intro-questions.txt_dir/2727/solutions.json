["from collections import Counter\nfrom string import ascii_lowercase\n\ndef missing_alphabets(s):\n    c = Counter(s)\n    m = max(c.values())\n    return ''.join(letter * (m - c[letter]) for letter in ascii_lowercase)", "from collections import Counter\nfrom string import ascii_lowercase as alphabet\n\ndef missing_alphabets(s):\n    counts = Counter(s)\n    max_count = max(counts.values())\n    return ''.join(c * (max_count - counts[c]) for c in alphabet)", "def missing_alphabets(s):\n  return ''.join(sorted(c * (max(s.count(x) for x in s) - s.count(c)) for c in 'abcdefghijklmnopqrstuvwxyz'))", "from collections import Counter\ndef missing_alphabets(s):\n    c, a = Counter(s), Counter(map(chr, range(97, 123)))\n    return ''.join(sorted((sum([a] * max(c.values()), Counter()) - c).elements()))", "from collections import Counter\n\ndef missing_alphabets(s):\n    a, C = [], []\n    count = Counter(s)\n    \n    for i in range(1,max(count.values()) + 1):\n        a.append([k for k,v in list(count.items()) if v >= i ])\n    \n\n    A = \"abcdefghijklmnopqrstuvwxyz\"\n    B = [I for I in A if I not in s]\n    \n\n    for i in range(0 ,len(a)):\n        C.append([I for I in A if I not in a[i]])\n\n    return ''.join(sorted([j for i in C for j in i])) \n", "import string\nfrom collections import Counter\ndef missing_alphabets(s):\n    my_dict = Counter(s)\n    set = max(my_dict.values())\n    return \"\".join([letter*(set-my_dict[letter]) for letter in string.ascii_lowercase])", "from string import ascii_lowercase\nfrom collections import Counter\n\ndef missing_alphabets(str_in):\n    counts = Counter(str_in)\n    most = counts.most_common()[0][1]\n    return ''.join(letter * (most - counts[letter]) for letter in ascii_lowercase)", "def missing_alphabets(s):\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    c = []\n    for letter in alphabet:\n        c.append(s.count(letter))\n    sets = max(c)\n    result = []\n    for letter in alphabet:\n        if s.count(letter) != sets:\n            result.append(letter*(sets-s.count(letter)))\n    return(''.join(result))", "def missing_alphabets(s):\n    alphabet = {chr(x):0 for x in range(ord('a'), ord('z')+1)}\n    results = []\n    for letter in s:\n        if letter in alphabet:\n            alphabet[letter] += 1\n    l_count = max(alphabet.values())\n    for key in alphabet:\n        if alphabet[key] < l_count:\n            results.append(key*(l_count - alphabet[key]))\n\n    return ''.join(results)", "from string import ascii_lowercase\nfrom collections import Counter\n\ndef missing_alphabets(s):\n    C = Counter(s)\n    x = C.most_common(1)[0][1]\n    return ''.join(c*(x-C[c]) for c in ascii_lowercase)"]