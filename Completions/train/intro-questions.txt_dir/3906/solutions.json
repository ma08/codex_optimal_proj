["def total(arr):\n    while len(arr) > 1:\n        arr = [x+y for x,y in zip(arr,arr[1:])]\n    return arr[0]", "def total(arr):\n  from math import factorial as fact\n\n  choose = lambda a, b: fact(a) / (fact(a-b) * fact(b))\n\n  return sum(choose(len(arr)-1, i) * v for i, v in enumerate(arr))", "def total(xs):\n    return xs[0] if len(xs) == 1 else total([xs[i] + x for i, x in enumerate(xs[1:])])", "def total(arr):\n    #your code here\n    if len(arr) == 1:\n        return arr[0]\n    arr2 = []\n    for i in range(len(arr)-1):\n        arr2.append(arr[i]+arr[i+1])\n    return total(arr2)", "def total(arr):\n    while len(arr) > 2:\n        arr = [x + y for x, y in zip(arr, arr[1:])]\n    return sum(arr)", "total=lambda a:a[0] if len(a)==1 else total([a[i]+a[i+1] for i in range(len(a)-1)])", "from math import factorial as fac\n\ndef C(n, k):\n    return fac(n) // (fac(k) * fac(n-k))\n    \ndef total(arr):\n    l = len(arr)\n    return sum(arr[i] * C(l-1, i) for i in range(l))\n", "def total(arr):\n    a = arr[:]\n    for i in range(len(a), 1, -1):\n        for j in range(1, i):\n            a[j - 1] += a[j]\n    return a[0]\n"]