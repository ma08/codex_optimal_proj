["def baby_count(x):\n    x = x.lower()\n    return min(x.count('a'), x.count('b') // 2, x.count('y')) or \"Where's the baby?!\"", "from collections import Counter\n\ndef baby_count(x):\n    c = Counter(x.lower())\n    return min(c['b'] // 2, c['a'], c['y']) or \"Where's the baby?!\"", "from collections import Counter\n\ndef baby_count(s):\n    c = Counter(s.lower())\n    return min(c['a'],c['b']//2,c['y']) or \"Where's the baby?!\"", "baby_count=lambda x:min(x.lower().count(e)//(2-(e!='b'))for e in'bay')or\"Where's the baby?!\"", "def baby_count(x):\n    x = x.lower()\n    nb = min(x.count('a'), x.count('y'), x.count('b')//2)\n    return nb if nb else \"Where's the baby?!\"", "def baby_count(x):\n    b = 0\n    a = 0\n    y = 0\n    for c in x.upper():\n        if c == \"B\":\n            b += 1\n        elif c == \"A\":\n            a += 1\n        elif c == \"Y\":\n            y += 1\n    \n    count =  min(a, b//2, y)\n    return count if count > 0 else 'Where\\'s the baby?!'", "def baby_count(x):\n    T = [x.lower().count(e)//(2 if e=='b' else 1)for e in 'bay']\n    print(T)\n    return min(T) if min(T)!=0 else 'Where\\'s the baby?!'", "from collections import Counter\ndef baby_count(x):\n    c=Counter(x.lower())\n    return min(c.get(\"b\",0)//2,c.get(\"a\",0),c.get(\"y\",0)) or \"Where's the baby?!\"", "def baby_count(x):\n    x = x.lower()\n    babies = 0\n    letters = [x.count('b'), x.count('a'), x.count('y')]\n    while min(letters) > 0 and letters[0] > 1:\n        letters[0] -= 2\n        letters[1] -= 1\n        letters[2] -= 1\n        babies += 1\n    if babies == 0:\n        return 'Where\\'s the baby?!'\n    else:\n        return babies", "def baby_count(x):\n    \n    s = x.lower()\n    \n    a = s.count(\"a\")\n    \n    b = s.count(\"b\")\n    \n    d = b//2\n    \n    y = s.count(\"y\")\n    \n    z = [a,d,y]\n    \n    m = min(z)\n    \n    if m==0:\n        \n        return \"Where's the baby?!\"\n    \n    else:\n    \n        return m\n"]