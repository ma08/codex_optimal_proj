["def remove_rotten(bag_of_fruits):\n    return [x.replace('rotten', '').lower() for x in bag_of_fruits] if bag_of_fruits else []", "def remove_rotten(fruit_bag):\n    # Checking\n    if not fruit_bag:\n        return []\n    # Processing\n    temp = []\n    for i in fruit_bag:\n        i = i.replace(\"rotten\", \"\", 1)\n        i = i.lower()\n        temp.append(i)\n    return temp", "def remove_rotten(fruits):\n  return [f[6].lower()+f[7:] if f[:6] == 'rotten' else f for f in fruits] if fruits else []", "import re\nrotten_pattern = re.compile(\"rotten\")\n\ndef remove_rotten(bag_of_fruits):\n  return [re.sub(rotten_pattern, \"\", fruit.lower()) for fruit in bag_of_fruits] if bag_of_fruits else []", "def remove_rotten(bag_of_fruits):\n    if bag_of_fruits is None:\n        return []\n\n    clean_bag = []\n  \n    for fruit in bag_of_fruits:\n        if \"rotten\" in fruit:\n            clean_bag.append(fruit.replace(\"rotten\",\"\").lower())\n        else:\n            clean_bag.append(fruit)\n  \n    return clean_bag", "def remove_rotten(fruits):\n    return [f.replace('rotten', '').lower() for f in fruits or []]", "def remove_rotten(bag_of_fruits):\n    return([i[6:].lower() if i[:6] == \"rotten\" else i for i in bag_of_fruits] if bag_of_fruits else [])", "def remove_rotten( bag_of_fruits ):\n    return [ el.replace( \"rotten\", \"\" ).lower() for el in bag_of_fruits ] if bag_of_fruits else [ ]\n", "from re import sub\n\ndef remove_rotten(bag_of_fruits):\n    return [sub('rotten', '', fruit).lower() for fruit in bag_of_fruits] if bag_of_fruits is not None else []", "def remove_rotten(bag):\n    return [ fruit[6:].lower() if 'rotten' in fruit else fruit for fruit in bag] if bag else []"]