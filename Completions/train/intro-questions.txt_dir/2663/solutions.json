["def addsup(a1, a2, a3):\n  return [[x,y,x+y] for x in a1 for y in a2 if x+y in a3]", "from itertools import product\n\ndef addsup(a1, a2, a3):\n    goal = set(a3).__contains__\n    return [[x, y, x+y] for x,y in product(a1, a2) if goal(x+y)]", "def addsup(a, b, t):\n    t = set(t)\n    return [[m, n, m+n] for m in a for n in b if m + n in t]", "def addsup(a1, a2, a3):\n    a3 = set(a3)\n    return [[x1, x2, x1 + x2] for x1 in a1 for x2 in a2 if x1 + x2 in a3]", "def addsup(a1, a2, a3):\n    r = {}\n    for s in a3:\n      for i in a1:\n          r[s-i] = [i] + r.get(s-i, [])\n    result = []\n    for j in a2:\n        if j in r:\n            for i in r[j]:\n                result.append([i, j, j+i])\n    return result", "def addsup(a1, a2, a3):\n    sums = []\n    # test every possible combination of a1 and a2, if sum in a3, append to result list\n    for i in a1:\n        for j in a2:\n            if (i+j) in a3:\n                sums.append([i, j, i+j])\n    return sums", "def addsup(a1, a2, a3):\n    results = []\n    for ele1 in a1:\n        for ele2 in a2:\n            if ele1+ele2 in a3:\n                results.append([ele1, ele2, ele1+ele2])\n    return results", "addsup = lambda a1, a2, a3: [[x, y, x + y] for x in a1 for y in a2 if x + y in a3]", "def addsup(a1, a2, a3):\n  l = [[c-b,b,c] for b in a2 for c in a3]\n  return list(filter((lambda e: e[0] in a1), l))", "def addsup(a1, a2, a3):\n    a4 = []\n    for n1 in a1:\n        for n2 in a2:\n            if n1 + n2 in a3:\n                a4.append([n1, n2, n1 + n2])\n    return a4"]