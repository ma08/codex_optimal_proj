["from itertools import cycle\n\nclass Pong:\n    def __init__(self, max_score):\n        self.max_score = max_score;\n        self.scores = {1: 0, 2: 0}\n        self.players = cycle((1, 2))\n\n    def game_over(self):\n        return any(score >= self.max_score for score in list(self.scores.values()))\n\n    def play(self, ball_pos, player_pos):\n        if self.game_over():\n            return \"Game Over!\"\n \n        player = next(self.players)\n        if abs(ball_pos - player_pos) <= 3:\n            return \"Player {} has hit the ball!\".format(player)\n        else:\n            self.scores[player] += 1\n            if self.scores[player] == self.max_score:\n                return \"Player {} has won the game!\".format(next(self.players))\n            else:\n                return \"Player {} has missed the ball!\".format(player)\n", "class Pong:\n    def __init__(self, max_score):\n        self.max_score = max_score;\n        self.score = [0,0]\n        self.player = 0\n    def play(self, ball_pos, player_pos):\n        if self.max_score in self.score: return \"Game Over!\"\n        if player_pos-3 <= ball_pos <= player_pos+3:\n            self.player ^= 1\n            return \"Player {} has hit the ball!\".format((self.player^1) +1)\n        self.player ^= 1\n        self.score[self.player] += 1\n        if self.score[self.player] == self.max_score: return \"Player {} has won the game!\".format(self.player + 1)\n        return \"Player {} has missed the ball!\".format((self.player^1) +1)", "class Pong:\n    def __init__(self, max_score):\n        self.max_score = max_score\n        self.next = 1\n        self.score = {1: 0, 2: 0}\n\n    def play(self, ball, paddle):\n        if max(self.score.values()) >= self.max_score:\n            return \"Game Over!\"\n        current, self.next = self.next, 3 - self.next\n        if paddle - 4 < ball < paddle + 4:\n            return f\"Player {current} has hit the ball!\"\n        else:\n            self.score[current] += 1\n            if self.score[current] == self.max_score:\n                return f\"Player {self.next} has won the game!\"\n            return f\"Player {current} has missed the ball!\"", "class Pong:\n    def __init__(self, win):\n        self.win = win\n        self.turn = -1\n        self.scores = [0, 0]\n\n    def play(self, ball, player):\n        \n        if max(self.scores) == self.win: return 'Game Over!'\n            \n        self.turn = (self.turn + 1) % 2\n        \n        if abs(ball - player) < 4: return 'Player ' + str(self.turn + 1) + ' has hit the ball!'\n\n        self.scores[(self.turn + 1) % 2] += 1\n            \n        return 'Player ' + (str(1 if self.turn else 2) + ' has won the game!' if max(self.scores) == self.win else str(self.turn + 1) + ' has missed the ball!')", "class Pong:\n    def __init__(self, max_score):\n        self.max_score = max_score\n        self.scores = [0, 0]\n        self.turn = 0\n\n    def play(self, ball_pos, player_pos):\n        try:\n            if max(self.scores) == self.max_score:\n                return 'Game Over!'\n            if abs(ball_pos - player_pos) <= 3:\n                return f'Player {self.turn + 1} has hit the ball!'\n            self.scores[1 - self.turn] += 1\n            if self.scores[1 - self.turn] == self.max_score:\n                return f'Player {2 - self.turn} has won the game!'\n            else:\n                return f'Player {self.turn + 1} has missed the ball!'    \n        finally:\n            self.turn = (self.turn + 1) % 2", "class Pong:\n    def __init__(self,m):\n        self.m,self.w=m,[0,0]\n        self.o=self.p=0\n\n    def play(self,b,a):\n        if self.o:return \"Game Over!\"\n        self.p+=1\n        if abs(b-a)<3.5:return \"Player %d has hit the ball!\"%(2-self.p%2) \n        self.w[self.p%2]+=1\n        if any(self.m<=x for x in self.w):self.o=1\n        return \"Player %d has %s!\"%(2-(self.o+self.p)%2,('missed the ball','won the game')[self.o])", "PADDLE_SIZE = 7\n\nclass Pong:\n    def __init__(self, max_score):\n        self.max_score = max_score;\n        \n        self.player_scores = {0: 0, 1: 0}\n        \n        self.current_player = 0\n        self.game_state = None\n\n    def play(self, ball_pos, player_pos):\n    \n        if self.game_state is not None:\n            return self.game_state\n    \n        paddle_range = (player_pos - (PADDLE_SIZE / 2),\n                        player_pos + (PADDLE_SIZE / 2))\n                        \n        if ball_pos > max(paddle_range) or ball_pos < min(paddle_range):\n            \n            self.player_scores[self.current_player ^ 1] += 1\n            \n            if self.player_scores[self.current_player ^ 1] >= self.max_score:\n                self.game_state = \"Game Over!\"\n                string = \"Player {} has won the game!\".format(self.current_player ^ 1 + 1)\n            else:\n                string = \"Player {} has missed the ball!\".format(self.current_player + 1)\n        \n        else:\n            string = \"Player {} has hit the ball!\".format(self.current_player + 1)\n            \n        self.switch_player()\n        return string\n        \n    def switch_player(self):\n        self.current_player ^= 1\n        \n", "class Pong:\n    def __init__(self, max_score):\n        self.max_score = max_score;\n        self.player=[0,0]\n        self.index=0\n        self.win=False\n    def play(self, ball_pos, player_pos):\n        if self.win:\n            return \"Game Over!\"\n        self.index+=1\n        if abs(ball_pos-player_pos)>3:\n            self.player[self.index%2]+=1\n            if self.player[self.index%2]>=self.max_score:\n                self.win=True\n                return \"Player 2 has won the game!\" if self.index%2==1 else \"Player 1 has won the game!\"\n            return \"Player 1 has missed the ball!\" if (self.index-1)%2==0 else \"Player 2 has missed the ball!\"\n        return \"Player 1 has hit the ball!\" if (self.index-1)%2==0 else \"Player 2 has hit the ball!\"", "class Pong:\n    def __init__(self, max_score):\n        self.max_score = max_score\n        self.next = 1\n        self.score = {1: 0, 2: 0}\n\n    def play(self, ball, paddle):\n        if max(self.score.values()) >= self.max_score:\n            return \"Game Over!\"\n        current, self.next = self.next, 3 - self.next\n        if paddle - 4 < ball < paddle + 4:\n            msg = f\"Player {current} has hit the ball!\"\n        else:\n            msg = f\"Player {current} has missed the ball!\"\n            self.score[current] += 1\n            if self.score[current] == self.max_score:\n                msg = f\"Player {self.next} has won the game!\"\n        return msg\n", "class Pong:\n    def __init__(self, max_score):\n        self.max_score = max_score;\n        self.i = -1\n        self.event = \"Player {} has {} the ball!\"\n        self.score = {1:0, 2:0}\n\n    def play(self, ball, player):\n        if self.event:\n            self.i += 1\n        if  not self.event: return \"Game Over!\"\n        hit = abs(player - ball)\n        if hit>3:\n            winer = (1,2)[not self.i%2]\n            self.score[winer]  += 1\n            if self.score[winer] == self.max_score:\n                self.event = None\n                return f\"Player {winer} has won the game!\"\n        return self.event.format((1,2)[self.i%2], ('hit','missed')[hit>3])\n"]