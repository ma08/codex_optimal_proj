["from math import ceil, log10\n\ndef graceful_tipping(bill):\n    bill *= 1.15\n    if bill < 10:\n        return ceil(bill)\n    e = int(log10(bill))\n    unit = (10 ** e) / 2\n    return ceil(bill / unit) * unit", "import math\ndef graceful_tipping(bill):\n    c = bill * 115 / 100\n    m = 1 if c < 10 else 5 * 10 ** int(math.log10(c) - 1)\n    return math.ceil(c / m) * m\n", "def graceful_tipping(bill):\n    import math\n    multiple = 0\n    tip = bill + (0.15 * bill)\n    if tip < 10:\n        multiple = 1\n    elif tip < 100:\n        multiple = 5\n    elif tip < 1000:\n        multiple = 50\n    elif tip < 10000:\n        multiple = 500\n    elif tip < 100000:\n        multiple = 5000\n    elif tip < 1000000:\n        multiple = 50000\n    elif tip < 10000000:\n        multiple = 500000\n    elif tip < 100000000:\n        multiple = 5000000\n    \n    return math.ceil(float(tip) / multiple) * multiple\n", "import math\ndef graceful_tipping(bill):\n    x=math.ceil(bill+bill*15/100)\n    if x<11:\n        return x\n    else:\n        le=(len(str(x))-2)\n        y=(5*(10**le))\n    return x+((y*(math.ceil(x/y)))-x)", "import math\ndef graceful_tipping(bill):\n    x=math.ceil(bill+bill*15/100)\n    if x<11:\n        return x\n    else:\n        le=(len(str(x))-2)\n        y=(5*(10**le))\n        z=math.ceil(x/y)\n        b=(y*z)-x\n        x=x+b\n    return x", "import math\ndef graceful_tipping(rest_bill):\n    res = rest_bill * 1.15\n    if res < 10:\n        return math.ceil(res)\n    tmp = 5 * 10.0 ** (math.ceil(math.log10(res)) - 2)\n    if res % tmp > 0:\n        res += (tmp - res % tmp)\n    return res\n", "import math\ndef graceful_tipping(bill):\n  bill = bill * 1.15\n  if bill < 10:\n    return math.ceil(bill)\n  elif 10 <= bill < 100:\n    bill = math.ceil(bill)\n    mul5 = [i for i in range(1,bill+5) if i % 5 ==0]\n    return mul5[-1]\n  elif 100 <= bill < 1000:\n    bill = math.ceil(bill)\n    mul50 = [i for i in range(1,bill+50) if i % 50 ==0]\n    return mul50[-1] \n  elif 1000 <= bill < 10000:\n    bill = math.ceil(bill)\n    mul500 = [i for i in range(1,bill+500) if i % 500 ==0]\n    return mul500[-1] \n  elif 10000 <= bill < 100000:\n    bill = math.ceil(bill)\n    mul5000 = [i for i in range(1,bill+5000) if i % 5000 ==0]\n    return mul5000[-1]  \n  elif 100000 <= bill < 1000000:\n    bill = math.ceil(bill)\n    mul50000 = [i for i in range(1,bill+50000) if i % 50000 ==0]\n    return mul50000[-1] \n  elif 1000000 <= bill < 10000000:\n    bill = math.ceil(bill)\n    mul500000 = [i for i in range(1,bill+500000) if i % 500000 ==0]\n    return mul500000[-1]  \n    \n    \n   \n", "def graceful_tipping(bill):\n    total = bill * 1.15\n    if total < 10:\n        total = (int(total) + (total % 1 > 0))\n    else :\n        x = len(str(int(total))) - 2\n        m = 5 * (10 ** x)\n        total = (int(total/m) + (total % m > 0)) * m\n    return total\n", "from math import ceil\n\ndef graceful_tipping(bill):\n    total = bill * 1.15\n    if total < 10:\n        return ceil(total)\n    total /= 5\n    d = 0\n    while total >= 20:\n        d += 1\n        total /= 10\n    return ceil(total) * 5 * 10**d", "from math import ceil\nfrom itertools import count\ndef graceful_tipping(bill):\n    num = ceil(bill * 0.15 + bill)\n    if num < 10:\n        return num\n    d = int('5' + ((len(str(num))-2) * '0'))\n    for n in count(num):\n        if n % d == 0:\n            return n\n"]