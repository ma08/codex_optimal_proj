["import numpy as np\n\ndef transpose(A):\n    if len(A) == 0:\n        return []\n    return np.array(A, dtype = 'O').T.tolist() if len(A[0]) > 0 else [[]]", "def transpose(arr):\n    if arr and not any(map(bool,arr)): return [[]]\n    return list(map(list,zip(*arr)))", "def transpose(arr):\n    tran_each = []\n    tran_com = []\n    if len(arr) > 0 and len(arr[0]) > 0:\n        n_row = len(arr[0])\n        n_col = len(arr)\n        for j in range(n_row):\n            for i in range(n_col):\n                tran_each.append(arr[i][j])\n            tran_com.append(tran_each)\n            tran_each = []\n        return tran_com\n    elif len(arr) > 0:\n        return [[]]\n    else:\n        return []", "def transpose(arr):\n    lst = []\n    if len(arr) == 0:\n        return arr\n    for i in range(len(arr[0])):\n        lst.append([arr[j][i] for j in range(len(arr))])\n    return [[]] if not lst else lst", "def transpose(arr):\n    if len(arr) == 0:\n        return []\n    if len(arr[0]) == 0:\n        return [[]]\n    return [[arr[row][col] for row in range(len(arr))] for col in range(len(arr[0]))]", "def transpose(arr):\n    return [] if arr==[] else [[]] if arr[0]==[] else [[arr[i][j] for i in range(len(arr))] for j in range(len(arr[0]))]"]