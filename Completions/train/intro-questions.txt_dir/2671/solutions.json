["def cat_mouse(x,j):\n    d, c, m = x.find('D'), x.find('C'), x.find('m')\n    if -1 in [d, c, m]:\n        return 'boring without all three'\n    if abs(c - m) <= j:\n        return 'Protected!' if c < d < m or m < d < c else 'Caught!' \n    return 'Escaped!'", "def cat_mouse(x, j):\n    try:\n        cat, dog, mouse = [x.index(c) for c in 'CDm']\n        if abs(mouse - cat) > j: return 'Escaped!'\n        elif cat < dog < mouse or cat > dog > mouse: return 'Protected!'\n        else: return 'Caught!'\n    except ValueError:\n        return 'boring without all three'", "from re import sub\n\ndef cat_mouse(s, j):\n    if set(s) < set('mCD.'):\n         return 'boring without all three'\n    \n    between = sub('.*[Cm](.*?)[Cm].*', r'\\1', s)\n    \n    if len(between) > j:\n        return 'Escaped!'\n    \n    if 'D' in between:\n        return 'Protected!'\n    \n    return 'Caught!'", "def cat_mouse(x, j):\n    c, d, m = (x.find(animal) for animal in 'CDm')\n    return ('boring without all three' if c < 0 or d < 0 or m < 0 else\n            'Escaped!' if abs(c - m) > j else\n            'Protected!' if c < d < m or c > d > m else\n            'Caught!')", "def cat_mouse(x,j):\n    try:\n        d, c, m = map(x.index,'DCm')\n    except ValueError:\n        return 'boring without all three'\n    if j < abs(c - m)-1 : return 'Escaped!'\n    elif c>d>m or m>d>c : return 'Protected!'\n    return 'Caught!'", "def cat_mouse(stg, j):\n    if set(\"mCD.\") - set(stg):\n        return \"boring without all three\"\n    c, d, m = (stg.index(a) for a in \"CDm\")\n    if abs(c - m) > j:\n        return \"Escaped!\"\n    elif m < d < c or c < d < m:\n        return \"Protected!\"\n    else:\n        return \"Caught!\"", "def cat_mouse(x,j):\n    if not all(('C' in x, 'D' in x, 'm' in x)):\n        return \"boring without all three\"\n    cat, dog, mouse = x.index('C'), x.index('D'), x.index('m')\n    zone = [x[cat:mouse],x[mouse+1:cat]][mouse<cat]\n    return { (1,0):\"Caught!\",\n             (1,1):\"Protected!\" }.get( (len(zone)<=j,'D' in zone),\"Escaped!\")", "def cat_mouse(x,j):\n    if len(set(x)) != 4:\n        return \"boring without all three\"\n    dog = x.index(\"D\")\n    cat = x.index(\"C\")\n    mouse = x.index(\"m\")\n    if max(cat,mouse) - min(cat,mouse) <= j:\n        if min(cat,mouse) < dog and dog < max(cat,mouse):\n            return \"Protected!\"\n        return \"Caught!\"\n    \n    return \"Escaped!\"\n    \n\n\n    \n\n\n\n", "def cat_mouse(x,j):\n    c,d,m = [x.find(ch) for ch in 'CDm']\n    if -1 in [c,d,m]: return \"boring without all three\"\n    if abs(c-m)-1 <= j: return \"Protected!\" if (c<d<m or m<d<c) else \"Caught!\"\n    return \"Escaped!\"", "def cat_mouse(x,j):\n    if not all(['C' in x, 'm' in x, 'D' in x]):\n        return 'boring without all three'\n    c, m, d = list(map(x.index, ['C', 'm', 'D']))\n    if abs(m-c) <= j+1: return ['Caught!', 'Protected!'][x.replace('.', '')[1] == 'D']\n    else: return 'Escaped!'\n"]