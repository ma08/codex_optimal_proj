["def get_number_of_squares(n):\n    k = 1\n    while k*(k+1)*(2*k+1)/6 < n:\n        k+=1\n    return k-1\n", "def get_number_of_squares(n):\n    s,i = 0,0\n    while s < n:\n        i += 1\n        s += i**2\n    return i-1", "def get_number_of_squares(n):\n    sm = 0\n    i = 0\n    while n > sm:\n        i += 1\n        sm += i ** 2\n    return i - 1", "get_number_of_squares=g=lambda n,i=1:i*i<n and-~g(n-i*i,i+1)", "def get_number_of_squares(limit):\n    total = 1\n    for n in range(2, limit+2):\n        if total >= limit:\n            return n - 2\n        total += n**2\n", "def get_number_of_squares(n):\n    i, j, k = 1, 1, 1\n    while k < n:\n        i += 2\n        j += i\n        k += j\n    return i >> 1\n", "def get_number_of_squares(n):\n    s = 0\n    i = 0\n    while s < n:\n        i += 1\n        s += i * i\n    return i - 1", "def get_number_of_squares(n):\n    sum=0\n    c = 0\n    for i in range(1, n+1):\n        sum+=i*i\n        c+=1\n        if sum>=n:\n            return c-1\n    return 0", "def get_number_of_squares(n):\n    res, i = 0, 0\n    while res < n:\n        res += i**2\n        i += 1\n    return i - 2", "def get_number_of_squares(n):\n    return int((n * 3) ** (1. / 3.) - 0.5)"]