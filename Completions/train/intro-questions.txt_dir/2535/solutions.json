["class Solution:\n     def validPalindrome(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: bool\n         \"\"\"\n         if s == s[::-1]:\n             return True\n         r = s[::-1]\n         for i in range(0, len(s)):\n             if r[i] == s[i]:\n                 continue\n             else:\n                 break\n         r = r[:i] + r[i+1:]\n         if r == r[::-1]:\n             return True\n         s = s[:i] + s[i+1:]\n         return s == s[::-1]", "class Solution:\n     def validPalindrome(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: bool\n         \"\"\"\n         \n         if s == s[::-1]:\n             return True\n         \n         for i in range(int(len(s)/2)):\n             if s[i] != s[-1-i]:\n                 s1 = s[:i] + s[i+1:]\n                 if s1 == s1[::-1]:\n                     return True\n                 \n                 s2 = s[:-1-i] + s[len(s)-i:]\n                 if s2 == s2[::-1]:\n                     return True\n                 \n                 return False\n", "class Solution:\n     def validPalindrome(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: bool\n         \"\"\"\n         if s == s[::-1]:\n             return True\n \n         i,j =  0, len(s)-1\n         while i < j:\n             if s[i] == s[j]:\n                 i+=1\n                 j-=1\n             else:\n                 remove_i = s[:i] + s[i+1:]\n                 remove_j = s[:j] + s[j+1:]\n \n                 return remove_i == remove_i[::-1] or remove_j == remove_j[::-1]", "class Solution:\n     def validPalindrome(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: bool\n         \"\"\"\n         if s == s[::-1]:\n             return True\n         i, j = 0, len(s)-1\n         while i < j:\n             if s[i] == s[j]:\n                 i += 1\n                 j -= 1\n             else:\n                 remove_i = s[i+1:j+1]\n                 remove_j = s[i:j]\n                 return remove_i == remove_i[::-1] or remove_j == remove_j[::-1]\n             \n", "class Solution:\n     def validPalindrome(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: bool\n         \"\"\"\n         if s == s[::-1]: return True\n         i,j = 0,len(s)-1\n         dele = 1\n         while i < j:\n             if s[i] == s[j]:    i,j = i+1,j-1\n             else:\n                 t1, t2 = s[i+1:j+1], s[i:j]\n                 return t1==t1[::-1] or t2==t2[::-1]\n         return True\n"]