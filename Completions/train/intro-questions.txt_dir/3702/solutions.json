["def olympic_ring(string):\n    return (['Not even a medal!'] * 2 + ['Bronze!', 'Silver!', 'Gold!'])[min(4, sum(map(\"abdegopqABBDOPQR\".count, string)) // 2)]", "def olympic_ring(string):\n    rings = string.translate(str.maketrans(\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',\n    '1201000000000011110000000011011010000000111000000000'))\n    score = sum(map(int, rings)) // 2\n    return ['Not even a medal!', 'Bronze!', 'Silver!', 'Gold!']\\\n                [(score > 1) + (score > 2) + (score > 3)]", "def olympic_ring(string):\n  h = {'a':1, 'b':1, 'd':1, 'e': 1, 'g':1, 'o':1, 'p':1, 'q':1, 'A':1, 'B':2, 'D':1, 'O':1, 'P':1, 'R':1, 'Q':1}\n  result = lambda i: {i <= 1: 'Not even a medal!', i == 2: 'Bronze!', i == 3: 'Silver!', i >= 4: 'Gold!'}[True]\n  return result(sum([h[i] if i in h.keys() else 0 for i in string])//2)", "def olympic_ring(string):\n    score = (sum(c in \"abdegopqABDOPQR\" for c in string) + string.count(\"B\")) // 2\n    return next(medal for min_score, medal in (\n        (4, \"Gold!\"),\n        (3, \"Silver!\"),\n        (2, \"Bronze!\"),\n        (0, \"Not even a medal!\"),\n        ) if score >= min_score)", "def olympic_ring(string):\n    n = sum(string.count(c) for c in 'ADOPQRabdegopq') + string.count('B') * 2\n    return ['Not even a medal!', 'Bronze!', 'Silver!', 'Gold!'][max(min(int(n / 2) - 1, 3), 0)]", "ring = \"abdegopqADOPQR\"\n\ndef olympic_ring(stg):\n    score = sum(1 if c in ring else 2 if c == \"B\" else 0 for c in stg) // 2\n    return \"Gold!\" if score > 3 else \"Silver!\" if score > 2 else \"Bronze!\" if score > 1 else \"Not even a medal!\"", "def olympic_ring(string):\n    s = sum(2 if c == 'B' else 1 if c in 'abdegopqADOPQR' else 0 for c in string)//2\n    return 'Not even a medal!' if s <= 1 else 'Bronze!' if s == 2 else 'Silver!' if s ==3 else \"Gold!\"", "rings = dict(dict.fromkeys('B', 2), **dict.fromkeys('ADOPRQaobdpqeg', 1))\n\ndef olympic_ring(s):\n    score = sum(rings.get(c, 0) for c in s) // 2\n    return (\n        'Not even a medal!' if score <= 1 else\n        'Bronze!' if score == 2 else\n        'Silver!' if score == 3 else\n        'Gold!'\n    )", "def olympic_ring(string):\n    rings = 'abdegopqADOPQRBB'\n    count = sum(string.count(c) for c in rings) // 2\n    if count <= 1:\n        return 'Not even a medal!'\n    if count == 2:\n        return 'Bronze!'\n    if count == 3:\n        return 'Silver!'\n    return 'Gold!'", "one=\"abdegopqADOPQR\"\nimport math\ndef olympic_ring(string):\n    c=0\n    for x in string:\n        if x==\"B\":\n            c=c+2\n        if x in one:\n            c=c+1\n    c= math.floor(c/2)\n    if c>3:\n        return \"Gold!\"\n    if c==3:\n        return \"Silver!\"\n    if c==2:\n        return \"Bronze!\"\n    return \"Not even a medal!\""]