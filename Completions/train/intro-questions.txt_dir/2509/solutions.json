["class Solution:\n     def minMoves(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         :rtype: int\n         \"\"\"\n         minx=min(nums)\n         sums=sum(nums)\n         return sums-len(nums)*minx\n", "class Solution:\n     def minMoves(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         :rtype: int\n         \"\"\"\n         # Adding n-1 elements by 1, same as subtracting one element by 1\n         m = min(nums)\n         res = 0\n         for i in nums:\n             res += (i - m)\n         return res\n", "class Solution:\n     def minMoves(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         :rtype: int\n         \"\"\"\n         return sum(nums)-len(nums)*min(nums)\n", "class Solution:\n     \n     def minMoves(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         :rtype: int\n         \"\"\"\n         \n         if not nums:\n             return 0\n         \n         lowest = nums[0]\n         for num in nums:\n             lowest = min(num, lowest)\n             \n         res = 0\n         for num in nums:\n             res += num - lowest\n             \n         return res", "class Solution:\n     def minMoves(self, nums):\n         s = sum(nums)\n         minimum = min(nums)\n         n = len(nums)\n         result = s - minimum * n\n         return result\n             \n             \n", "class Solution:\n     def minMoves(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         :rtype: int\n         \"\"\"\n         return sum(nums)-min(nums)*len(nums)\n         \n", "class Solution:\n     def minMoves(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         :rtype: int\n         \"\"\"\n         n=len(nums)\n         mn=min(nums)\n \n         return sum(nums)-n*mn", "class Solution:\n     def minMoves(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         :rtype: int\n         \"\"\"\n         min_num = min(nums)\n         result = 0\n         for num in nums:\n             result += num-min_num\n         return result", "class Solution:\n     def minMoves(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         :rtype: int\n         \"\"\"\n         count = 0\n         smallest = min(nums)\n                 \n         for num in nums:\n             count += abs(num - smallest)\n             \n         return(count)\n         \n         \n         \n", "class Solution:\n     def minMoves(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         :rtype: int\n         \"\"\"\n         m = min(nums)\n         return sum(i-m for i in nums)\n", "class Solution:\n     def minMoves(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         :rtype: int\n         \"\"\"\n         nums_min = nums[0]\n         res = 0\n         for i in range(len(nums)):\n             if nums[i] >= nums_min:\n                 res += nums[i] - nums_min\n             else:\n                 res += i * (nums_min - nums[i])\n                 nums_min = nums[i]\n                 \n         return res", "class Solution:\n     def minMoves(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         :rtype: int\n \n         let\u2019s define sum as the sum of all the numbers, before any moves; \n             minNum as the min number int the list; \n             n is the length of the list;\n \n         After, say m moves, we get all the numbers as x , and we will get the following equation\n \n         sum + m * (n - 1) = x * n\n         and actually,\n \n           x = minNum + m\n         and finally, we will get\n \n           sum - minNum * n = m\n         So, it is clear and easy now.        \n         \"\"\"\n         tt = 0\n         mx = nums[0]\n         n = 0\n         for x in nums:\n             tt += x\n             n += 1\n             if x < mx:\n                 mx = x\n         return tt - mx * n\n                 \n             \n", "class Solution:\n     def minMoves(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         :rtype: int\n         \"\"\"\n         return sum(nums) - min(nums) * len(nums)\n"]