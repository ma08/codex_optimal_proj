["def solve(a,b):\n    s = set(a)&set(b)\n    return ''.join(c for c in a+b if c not in s)", "def solve(a,b):\n    return \"\".join([c for c in a if not c in b]+[c for c in b if not c in a])", "def solve(a,b):\n    unique=[]\n    for i in a:\n        if i not in b:\n            unique.append(i)\n    for i in b:\n        if i not in a:\n            unique.append(i)\n            \n    return \"\".join(unique)        ", "def solve(a,b):\n    res = \"\"\n    for char in a + b:\n        if char in a and char in b: continue\n        res += char\n    return res", "def solve(a, b):\n    return \"\".join(c for c in a + b if c in set(a) ^ set(b))", "def solve(left, right):\n    result = ''\n    for char in left:\n        if char not in right:\n            result += char\n    for char in right:\n        if char not in left:\n            result += char\n    return result\n", "\ndef solve(a,b):\n    string = a+b\n    return ''.join([i for i in a if i not in b] + [i for i in b if i not in a])", "def solve(a,b):\n    string = \"\"\n    for i in a:\n        if i not in b:\n            string = string + i\n    for i in b:\n        if i not in a:\n            string = string + i\n    return string\n", "solve=lambda a,b:a.translate(str.maketrans(\"\",\"\",b))+b.translate(str.maketrans(\"\",\"\",a))", "def solve(a,b):\n\n    e = [i for i in a if i not in b]\n    f = [i for i in b if i not in a]\n\n    return \"\".join(e) + \"\".join(f)"]