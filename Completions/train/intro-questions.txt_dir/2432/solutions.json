["class Solution:\n     def calPoints(self, ops):\n         \"\"\"\n         :type ops: List[str]\n         :rtype: int\n         \"\"\"\n         sum = 0\n         for i in range (len(ops)):\n             op = ops[i]\n             if self.isInt(op):\n                sum = sum + int(op)\n             elif op == 'C':\n                 for j in range(i-1 ,-1,-1):\n                     if self.isInt(ops[j]):\n                         sum = sum - int(ops[j])\n                         ops[j] = 'x'\n                         break\n             elif op == 'D':\n                 for j in range(i-1 ,-1,-1):\n                     if self.isInt(ops[j]):\n                         ops[i] = str(int(ops[j]) * 2)\n                         sum = sum + int(ops[i])\n                         break\n             elif op == '+':\n                 for j in range(i-1 , -1,-1):\n                     if self.isInt(ops[j]):\n                         for k in range(j-1, -1,-1):\n                             if self.isInt(ops[k]):\n                                 ops[i] = str(int(ops[j]) + int(ops[k]))\n                                 sum = sum + int(ops[i])\n                                 break\n                         break\n                         \n         return sum\n     \n     \n     def isInt(self,x):\n         try:\n             return type(int(x)) == int\n         except ValueError:\n             return False", "class Solution:\n     def calPoints(self, ops):\n         \"\"\"\n         :type ops: List[str]\n         :rtype: int\n         \"\"\"\n         def isint(num):\n             try:\n                 int(num)\n                 return True\n             except ValueError:\n                 return False\n         score_board = []\n         for i in ops:\n             if isint(i):\n                 score_board.append(int(i))\n             elif i == 'C':\n                 score_board.pop()\n             elif i == 'D':\n                 score_board.append(score_board[-1] * 2)\n             elif i == '+':\n                 score_board.append(sum(score_board[-2:]))\n         return sum(score_board)", "class Solution:\n     def calPoints(self, ops):\n         \"\"\"\n         :type ops: List[str]\n         :rtype: int\n         \"\"\"\n         ans = []\n         for op in ops:\n             try:\n                 integer = int(op)\n             except ValueError:\n                 if op == 'C':\n                     ans.pop()\n                 elif op == 'D':\n                     ans.append(ans[-1] * 2)\n                 else:\n                     ans.append(sum(ans[-2:]))                  \n             else:\n                 ans.append(integer)\n         return sum(ans)"]