["def parade_time(groups, location, speed, pref):\n    return [c // speed for c, p in enumerate(groups, 1 + location) if p == pref]", "def parade_time(groups, location, speed, pref):\n    result = []\n    for i in range(1,len(groups)+1):\n        if groups[i-1] == pref:\n            result.append((location+i) // speed)\n    return result", "def parade_time(groups, location, speed, pref):\n    return [(location + pos + 1) // speed for pos in [i for i, g in enumerate(groups) if g == pref]]", "def parade_time(groups, location, speed, pref):\n    return [(location + i) // speed for i, g in enumerate(groups, 1) if g == pref]", "def parade_time(groups, location, speed, pref):\n    return [(location + i + 1) // speed for i, group in enumerate(groups) if group == pref]", "def parade_time(groups, location, speed, pref):\n    return [int((1 + location + i) / speed) for i, g in enumerate(groups) if g == pref]\n", "def parade_time(groups, location, speed, pref):\n    result = []\n    for i, x in enumerate(groups):\n        if x == pref:\n            result.append((location + i + 1) // speed)\n    return result"]