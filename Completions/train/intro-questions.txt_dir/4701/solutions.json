["from math import ceil\ndef pay_cheese(arr):\n    return f'L{ceil(sum(arr) / 100) * 35}'", "from math import ceil\n\ndef pay_cheese(lst):\n    return f\"L{35 * ceil(sum(lst) / 100)}\"", "from math import ceil\ndef pay_cheese(a):    \n    return f\"L{round(ceil(((sum(a)*6.)/10.)/60.)*35)}\"", "pay_cheese=lambda l:f\"L{-sum(l)//100*-35}\"", "from math import ceil; pay_cheese=lambda arr: \"L\"+str(ceil(sum(arr)/100)*35)", "from math import ceil\ndef pay_cheese(arr):\n    p=ceil(sum(arr)*6/600)\n    return 'L{}'.format(int(p*8.75*4))", "def pay_cheese(arr):\n    return 'L{}'.format(-sum(arr)//100*-35)", "def pay_cheese(arr):\n    return 'L' + str(-sum(arr)//100*-35)\n", "def pay_cheese(arr):\n    a,b = divmod(sum(arr), 100)\n    return 'L'+ str(int((a + (b > 0))*35))", "import math\n\ndef pay_cheese(arr):\n    return f'L{round(math.ceil(sum(map(lambda x: x / 100, arr))) * 4 * 8.75)}'"]