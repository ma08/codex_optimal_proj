["def factors(x):\n    if not isinstance(x, int) or x < 1:\n        return -1\n    return [i for i in range(x, 0, -1) if x % i == 0]\n", "def factors(x):\n    if not isinstance(x, int) or x < 1:\n        return -1\n    return sorted({j for i in range(1, int(x**0.5)+1) if x % i == 0 for j in [i, x//i]}, reverse=True)\n", "def factors(x):\n    if type(x) == str or x < 1 or type(x) == float:\n        return -1\n\n    else:\n        divisor = list(range(1,x+1))\n        ans = []\n        for i in divisor:\n            if x % i == 0:\n                ans.append(i)\n                ans.sort(reverse = True)\n        return ans\n", "factors=lambda n:-1if not n or type(n)!=int or n<1else[e for e in range(n,0,-1)if n%e==0]", "def factors(x):\n    return -1 if type(x) != int or x < 1 else \\\n          [ n for n in range(x, 0, -1) if x % n == 0 ]", "def factors(n):\n  from math import sqrt\n  \n  if not isinstance(n, int) or n < 1:\n    return -1\n\n  lim = int(sqrt(n))\n  divisors = set([n, 1])\n  \n  start = 2 + n%2\n  step = start - 1\n  \n  for i in range(start, lim+1, step):\n    if n%i == 0:\n      divisors.add(i)\n      divisors.add(n//i)\n  \n  return sorted(divisors, reverse=True)", "def factors(x):\n    return [i for i in range(x, 0, -1) if not x % i] if isinstance(x, int) and x > 0 else -1\n"]