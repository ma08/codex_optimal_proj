["def format_poem(poem):\n  return \".\\n\".join(poem.split(\". \"))", "def format_poem(poem):\n    return poem.replace(\". \", \".\\n\")\n", "def format_poem(poem):\n    lines = poem.split('. ')\n    return '.\\n'.join(lines)\n  \n   \n    \n         \n    \n", "from re import sub\n\n# Try to solve this challenge with the str.split() and the str.join() string methods.\n# -> No\ndef format_poem(poem):\n    return sub(r\"(?<=\\.)\\s\", \"\\n\", poem)", "def format_poem(poem):\n    lines = poem.replace('. ','.\\n')\n    return lines\n    \n", "def format_poem(poem):\n    poem = poem.split('. ')\n    result = '.\\n'.join(poem)\n    return result\n", "format_poem = lambda p:'.\\n'.join(p.split(\". \"))\n", "format_poem = __import__(\"functools\").partial(__import__(\"re\").sub, r\"(?<=\\.)\\s\", \"\\n\")", "def format_poem(poem):\n    # Your code goes here.\n    poem_new = poem.replace('. ', '.\\n') \n    return poem_new\n    \n", "def format_poem(s):\n    a, r = s.split('.'), []\n    for k,i in enumerate(a):\n        if k == 0:r.append(i.lstrip())\n        else:r.append('\\n'+i.lstrip())\n    return ('.'.join(r)).rstrip('\\n')\n"]