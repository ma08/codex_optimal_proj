["def remove_nth_element(a, n):\n    return a[:n] + a[n+1:]", "def remove_nth_element(lst, n):\n    lst_copy = lst.copy()\n    del lst_copy[n]\n    return lst_copy", "def remove_nth_element(lst, n):\n    # Fix it\n    import copy\n    lst_copy = copy.deepcopy(lst)\n    del lst_copy[n]\n    return lst_copy\n", "def remove_nth_element(lst, n):\n    return lst[:n] + lst[n+1:]", "def remove_nth_element(lst, n):\n  lst_copy = lst[:]\n  del lst_copy[n]\n  return lst_copy", "def remove_nth_element(lst, n):\n    lst_copy = lst[:] # That's a shallow copy\n    del lst_copy[n]\n    return lst_copy", "def remove_nth_element(lst, n):\n    _lst = lst[:]\n    del _lst[n]\n    return _lst", "def remove_nth_element(lst, n):\n    # Fix it\n    lst_copy = lst[:]\n    del lst_copy[n]\n    return lst_copy\n\nremove_nth_element=lambda a,n:a[:n]+a[n+1:]", "remove_nth_element = lambda a, n: a[:n] + a[n+1:]", "def remove_nth_element(lst, n):\n    return [j for i, j in enumerate(lst) if n != i]"]