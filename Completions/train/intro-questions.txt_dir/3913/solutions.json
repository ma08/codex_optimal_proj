["def solution(to,lst):\n    dolSym, eurSym, power = ('', '\u20ac', -1) if to=='EUR' else ('$','', 1)\n    return [f\"{ dolSym }{ v*1.1363636**power :,.2f}{ eurSym }\" for v in lst]", "def solution(to_cur, values):\n    rate, fmt = {\n        'USD': (1.1363636, '${:,.2f}'),\n        'EUR': (1 / 1.1363636, '{:,.2f}\u20ac'),\n    }[to_cur]\n    values = [v * rate for v in values]\n    return list(map(fmt.format, values))", "def solution(to_cur, values):\n    rate  = 1.1363636\n    style = \"{:,.2f}\"\n    \n    if to_cur == \"EUR\":\n        rate = 1 / rate\n        style += \"\u20ac\"\n    else:      # \"USD\"\n        style = \"$\" + style\n    \n    return [style.format(v * rate) for v in values]", "def solution(to_cur, lst):\n    rate, fmt = {\"USD\": (1.1363636, \"${:,.2f}\"), \"EUR\": (0.88, \"{:,.2f}\u20ac\")}[to_cur]\n    return [fmt.format(val*rate) for val in lst]\n", "def solution(to_cur,value):\n    mon = {'EUR':lambda e:'{:,.2f}\u20ac'.format(e / 1.1363636) ,'USD':lambda e:'${:,.2f}'.format(e * 1.1363636,2) }\n    return [ mon[to_cur](e)  for e in value  ]", "def solution(to_cur,values):\n    return [f'${v * 1.1363636:0,.2f}' if to_cur == 'USD' else f'{v / 1.1363636:0,.2f}\u20ac' for v in values]", "def solution(to_cur,value):\n    return ['${:,.2f}'.format(x*1.1363636) if to_cur == 'USD' else '{:,.2f}\u20ac'.format(x/1.1363636) for x in value]", "def solution(to_cur,value):\n    rate = 1.1363636\n    return list([f'${x*rate:,.2f}' for x in value]) if to_cur == 'USD' else list([f'{x/rate:,.2f}\u20ac' for x in value])\n    \n# OR\n    # if to_cur == 'USD':\n    #     return list(map(lambda x: f'${x*rate:,.2f}', value))\n    # else:\n    #     return list(map(lambda x: f'{x/rate:,.2f}\u20ac', value))\n", "def solution(to_cur,value):\n    #multiply number by appropriate conversion rate, and round using the \",.2f\" format (rounds/pads to last 2 decimals and uses commas)\n    return [f\"${i*1.1363636:,.2f}\" if to_cur == \"USD\" else f\"{i/1.1363636:,.2f}\u20ac\" for i in value]", "def solution(to_cur,value):\n    r = []\n    for number in value:\n        if to_cur == \"USD\":\n            r.append(\"${:,.2F}\".format(number * 1.1363636))\n        else:\n            r.append(\"{:,.2F}\u20ac\".format(number / 1.1363636))\n    return r"]