["from collections import Counter\n\ndef sorted_brands(history):\n    brands = [x['brand'] for x in history]\n    counter = Counter(brands)\n    return sorted(set(brands), key=lambda x: (-counter[x], brands.index(x)))", "def sorted_brands(history):\n    brands = [item['brand'] for item in history]\n    return sorted(set(brands), key=lambda x: (-brands.count(x), brands.index(x)))", "from collections import Counter\n\n\ndef sorted_brands(history):\n    brands = Counter(x[\"brand\"] for x in history)\n    return [brand for brand, _ in brands.most_common()]", "from collections import Counter\n\ndef sorted_brands(history):\n    cnt = Counter(item[\"brand\"] for item in history)\n    return sorted(cnt, key=cnt.get, reverse=True)", "def sorted_brands(history):\n    count = {}\n    for i in history:\n        count[i['brand']] = count.get(i['brand'],0)+1\n    return sorted(count,key=lambda x:-count[x])", "from collections import Counter\n\ndef sorted_brands(history):\n    picked, c = {}, Counter()\n    for i,h in enumerate(history):\n        c[h['brand']] += 1\n        if h['brand'] not in picked: picked[h['brand']] = i\n    return sorted(c, key=lambda k: (-c[k], picked[k]))", "from collections import Counter\ndef sorted_brands(history):\n    return [n[0] for n in Counter([n['brand'] for n in history]).most_common()]\n    \n\n", "def sorted_brands(history):\n    d = {}\n    for i in history:\n        if i['brand'] in d:\n            d[i['brand']] += 1\n        else:\n            d[i['brand']] = 1\n    return sorted(list(d.keys()), key=lambda x: d[x], reverse=True)\n        \n", "def sorted_brands(arr):\n    arr = [k['brand'] for k in arr]\n    return sorted(set(arr), key=lambda x: (-arr.count(x), arr.index(x)))", "def sorted_brands(history):\n    s = [i['brand'] for i in history]\n    print(s)\n        \n    return sorted(set(s), key=lambda x: (-s.count(x), s.index(x)))"]