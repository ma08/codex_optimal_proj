["class Solution:\n     def trailingZeroes(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         n_fives = 0\n         while n > 0:\n             n = n // 5\n             n_fives += n\n         return n_fives", "class Solution:\n     def trailingZeroes(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         c=0\n         while n>0:\n             n//=5\n             c+=n\n         return c\n", "class Solution:\n     def trailingZeroes(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         count = 1\n         a = 5\n         ans = 0\n         \n         while a<=n:\n             ans += n//a\n             count += 1\n             a = 5**count\n             \n         return ans\n", "class Solution:\n     def trailingZeroes(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         return 0 if n == 0 else n // 5 + self.trailingZeroes(n // 5)", "class Solution:\n     def trailingZeroes(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         count = 0\n         \n         while n:\n             count = count + n // 5\n             n = n // 5\n         return count\n             \n                 \n", "class Solution:\n     def trailingZeroes(self, n):\n         two = 0\n         five = 0\n         tmp = n\n         while tmp != 0:\n             tmp = tmp//5\n             five = five + tmp\n         tmp = n\n         while tmp != 0:\n             tmp = tmp//2\n             two = two + tmp\n         res = min(five,two)\n         return res\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n", "class Solution:\n     def trailingZeroes(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         count = 0\n         while n > 0:\n             n /= 5\n             count += int(n)\n         return int(count)", "class Solution:\n     def trailingZeroes(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         ans=0\n         i=5\n         while n//i:\n             ans+=n//i\n             i*=5\n         return ans        ", "class Solution:\n     def trailingZeroes(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         return sum([n//5**i for i in range(1, 20)])", "class Solution:\n     def trailingZeroes(self, n):\n         res = 5\n         ans = 0\n         while res < n+1:\n             ans += int(n/res)\n             res = 5*res\n         return ans", "class Solution:\n     def trailingZeroes(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         trz = 0\n         div = 5\n         while div <= n:\n             trz += int(n / div)\n             div *= 5\n         return trz;\n         #return 0 if n is 0 else n / 5 + self.trailingZeros(n / 5)\n", "class Solution:\n     def trailingZeroes(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         if n < 5:\n             return 0\n         elif n < 10:\n             return 1\n \n         i = 0\n         while 5 ** (i + 1) <= n:\n             i += 1\n \n         s=n//5\n         j=2\n         while j<=i:\n             s+=n//(5**j)\n             j+=1\n \n \n         return int(s)", "class Solution:\n     def trailingZeroes(self, n):\n         return n//5 + self.trailingZeroes(n//5) if n>=5 else 0\n", "class Solution:\n     def trailingZeroes(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         res = 0\n         while n >= 5:\n             res = res + int(n/5)\n             n = n/5\n         return res\n", "class Solution:\n     def trailingZeroes(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         \n         num2 = 0\n         div = 2\n         quot = n // div\n         while quot:\n             num2 += quot\n             div *= 2\n             quot = n // div\n         \n         num5 = 0\n         div = 5\n         quot = n // div\n         while quot:\n             num5 += quot\n             div *= 5\n             quot = n // div\n             \n         return min(num2, num5)", "class Solution:\n     def trailingZeroes(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         return 0 if n == 0 else n//5 + self.trailingZeroes(n // 5)"]