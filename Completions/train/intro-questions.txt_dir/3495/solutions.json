["from collections import Counter\n\ndef solve(a,b):\n    return 0 if Counter(b) - Counter(a) else len(a) - len(b)", "def solve(a,b):\n    for x in set(b):\n        if a.count(x) >= b.count(x):\n            continue\n        else:\n            return 0\n    return len(a)-len(b)", "def solve(a,b):\n    print((a,b))\n    if sorted(a)==sorted(b) or (set(list(a))==set(list(b))):\n        return 0\n    for x in b:\n        for x in a:\n            if a.count(x)<b.count(x)  : return 0\n    else: return len(a)-len(b)    ", "def solve(a,b):\n    a=list(a)\n    try:\n        for c in b:\n            a.pop(a.index(c))\n        return len(a)\n    except:\n        return 0", "def solve(a,b):\n    for char in b:\n        return 0 if b.count(char) > a.count(char) or len(b)>=len(a) else len(a)-len(b) \n", "from collections import Counter\n\ndef solve(a,b):\n    return sum((Counter(a)-Counter(b)).values()) if Counter(b) - Counter(a) == {} else 0 ", "from collections import Counter\n\ndef solve(a, b):\n    c_diff, c_b = Counter(a), Counter(b)\n    c_diff.subtract(c_b)\n    result = 0\n    for k,v in c_diff.items():\n        if v >= 0:\n            result += v\n        else:\n            return 0\n    return result", "from collections import Counter\n\ndef solve(a,b):\n    aa=Counter(a)\n    bb=Counter(b)\n    \n    for k,v in list(bb.items()):\n        diff = aa[k]-v\n        aa[k]-=v\n        if diff<0: return 0\n    \n    return sum(aa.values())\n        \n    \n", "solve=lambda a,b,c=__import__('collections').Counter:not c(b)-c(a)and len(a)-len(b)", "from collections import Counter as C\ndef solve(Q,S) :\n    Q,S = C(Q),C(S)\n    if all(V in Q and S[V] <= Q[V] for V in S) :\n        return sum(Q[V] - (S[V] if V in S else 0) for V in Q)\n    return 0"]