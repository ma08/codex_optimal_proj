["def get_planet_name(id):\n    return {\n        1: \"Mercury\",\n        2: \"Venus\",\n        3: \"Earth\",\n        4: \"Mars\",\n        5: \"Jupiter\",\n        6: \"Saturn\",\n        7: \"Uranus\",\n        8: \"Neptune\",\n    }.get(id, None)", "def get_planet_name(id):\n    return{\n        1: \"Mercury\",\n        2: \"Venus\",\n        3: \"Earth\",\n        4: \"Mars\",\n        5: \"Jupiter\",\n        6: \"Saturn\",\n        7: \"Uranus\",\n        8: \"Neptune\",\n    }.get(id)", "def get_planet_name(id):\n    planets = {\n        1: \"Mercury\",\n        2: \"Venus\",\n        3: \"Earth\",\n        4: \"Mars\",\n        5: \"Jupiter\",\n        6: \"Saturn\",\n        7: \"Uranus\", \n        8: \"Neptune\",\n    }\n    return planets[id]", "def get_planet_name(id):\n    return [\"Mercury\",\"Venus\",\"Earth\",\"Mars\",\"Jupiter\",\"Saturn\",\"Uranus\",\"Neptune\"][id-1]", "def get_planet_name(id):\n\n    switch = {\n        1: \"Mercury\",\n        2: \"Venus\",\n        3: \"Earth\",\n        4: \"Mars\",\n        5: \"Jupiter\",\n        6: \"Saturn\",\n        7: \"Uranus\"  ,\n        8: \"Neptune\"\n    }\n    \n    return switch.get(id, \"LOL\");", "def get_planet_name(id):\n    name=\"\"\n    return{\n        1:\"Mercury\",\n        2:\"Venus\",\n        3:\"Earth\",\n        4:\"Mars\",\n        5:\"Jupiter\",\n        6:\"Saturn\",\n        7:\"Uranus\" , \n        8:\"Neptune\"\n       }[id]", "def get_planet_name(id):\n    return [0, \"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"][id]", "def get_planet_name(id): # yea just do most things siplistic, I could think of elegant wasy to do this but ill never reuse it so\n    # I do love case switch methods I am going to have to find the python eqiv\n    name=\"\"\n    \n    if id == 1:\n        name = 'Mercury'  # the fire ball\n    if id == 2:\n        name = 'Venus'    # She is still hot\n    if id == 3:\n        name = 'Earth'    # the sea of stupidity\n    if id == 4:\n        name = 'Mars'     # why is it full of iron oxide if it supposidly never had oxygen\n    if id == 5:\n        name = 'Jupiter'  # no one is stupiter\n    if id == 6:\n        name = 'Saturn'   # where did all thise rings come from\n    if id == 7:\n        name = 'Uranus'   # Not mine\n    if id == 8:\n        name = 'Neptune'  # It's to cold for fish\n    if id == 9:\n        name = 'Pluto'    # becuse it has a core a dwarf planet is a planet dwarf people are people arent they\n    \n    return name #only because you asked nice", "def get_planet_name(id):\n    return (\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\",\n        \"Neptune\")[id - 1]\n", "get_planet_name=lambda id: [\"Kypton\",\"Mercury\",\"Venus\",\"Earth\",\"Mars\",\"Jupiter\",\"Saturn\",\"Uranus\",\"Neptune\"][id]", "get_planet_name = (None, \"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\").__getitem__", "def get_planet_name(id):\n    switcher = {\n        1:\"Mercury\",\n        2:\"Venus\",\n        3:\"Earth\",\n        4:\"Mars\",\n        5:\"Jupiter\",\n        6:\"Saturn\",\n        7:\"Uranus\",  \n        8:\"Neptune\"}\n    return(switcher.get(id, \"Invalid ID\"))", "def get_planet_name(id):\n    if id == 1: return \"Mercury\"\n    elif id == 2: return \"Venus\"\n    elif id == 3: return \"Earth\"\n    elif id == 4: return \"Mars\"\n    elif id == 5: return \"Jupiter\"\n    elif id == 6: return \"Saturn\"\n    elif id == 7: return \"Uranus\"  \n    elif id == 8: return \"Neptune\"\n    else: raise Exception()", "def get_planet_name(i):\n    # hi my dear friends ))))\n    return {\n        1: \"Mercury\",  2: \"Venus\",\n        3: \"Earth\",\n        4: \"Mars\",     5: \"Jupiter\",\n        6: \"Saturn\",\n        7: \"Uranus\",   8: \"Neptune\"\n        } [i]", "get_planet_name = lambda i: [\"Mercury\",\"Venus\",\"Earth\",\"Mars\",\"Jupiter\",\"Saturn\",\"Uranus\",\"Neptune\"].__getitem__(i-1)", "def get_planet_name(id):\n    solar_system = ['Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune']\n    return solar_system[id - 1]", "def get_planet_name(id):\n    name=\"\"\n    if id == 1: name = \"Mercury\"\n    elif id == 2: name = \"Venus\"\n    elif id == 3: name = \"Earth\"\n    elif id == 4: name = \"Mars\"\n    elif id == 5: name = \"Jupiter\"\n    elif id == 6: name = \"Saturn\"\n    elif id == 7: name = \"Uranus\"  \n    elif id == 8: name = \"Neptune\"\n    return name", "def get_planet_name(id):\n    # This doesn't work; Fix it!\n    name=\"\"\n    switch = {\"1\": \"Mercury\",\n        \"2\": \"Venus\",\n        \"3\": \"Earth\",\n        \"4\": \"Mars\",\n        \"5\": \"Jupiter\",\n        \"6\": \"Saturn\",\n        \"7\": \"Uranus\",\n        \"8\": \"Neptune\"}\n    return switch.get(str(id))\nget_planet_name(1)", "def get_planet_name(id):\n    \n    #switch-case statement doesn't work on python unlike java so convert it in dictionary\n    switch = { 1:  \"Mercury\",\n               2:  \"Venus\",\n               3:  \"Earth\",\n               4:  \"Mars\",\n               5:  \"Jupiter\",\n               6:  \"Saturn\",\n               7:  \"Uranus\",\n               8:  \"Neptune\"}\n           # use .get() function to get the value of the input from user    \n    return switch.get(id) ", "def get_planet_name(id: int) -> str:\n    \"\"\" Get planet name by given ID. \"\"\"\n    planets = {\n        1: \"Mercury\",\n        2: \"Venus\",\n        3: \"Earth\",\n        4: \"Mars\",\n        5: \"Jupiter\",\n        6: \"Saturn\",\n        7: \"Uranus\",\n        8: \"Neptune\"\n    }\n    return planets.get(id)", "def get_planet_name(id):\n    # This doesn't work; Fix it!\n    name=[ \"Mercury\",\"Venus\",\"Earth\",\"Mars\",\"Jupiter\",\"Saturn\",\"Uranus\",\"Neptune\"]\n    return name[id-1];", "def get_planet_name(id):\n    planets = {\n        1: \"Mercury\",\n        2: \"Venus\",\n        3: \"Earth\",\n        4: \"Mars\",\n        5: \"Jupiter\",\n        6: \"Saturn\",\n        7: \"Uranus\",\n        8: \"Neptune\",\n        9: \"Pluto\" #I mean, c'mon, let's be real\n    }\n    return planets.get(id)", "def get_planet_name(i):\n    names = ['Sun', 'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune']\n    return names[i]", "def get_planet_name(id):\n    return \"Sun Mercury Venus Earth Mars Jupiter Saturn Uranus Neptune\".split()[id]", "def get_planet_name(id):\n    # This doesn't work; Fix it!\n#     name=\"\"\n    name =  {\n         1: \"Mercury\",\n         2: \"Venus\",\n         3: \"Earth\",\n         4: \"Mars\",\n         5: \"Jupiter\",\n         6: \"Saturn\",\n         7: \"Uranus\", \n         8: \"Neptune\",\n        }\n    return name.get(id)", "def get_planet_name(id):\n    planets = [\n        \"Mercury\", \n        \"Venus\",\n        \"Earth\",\n        \"Mars\", \n        \"Jupiter\", \n        \"Saturn\", \n        \"Uranus\", \n        \"Neptune\"\n        ]\n    name = \"\"\n    if id - 1 < len(planets):\n        return planets[id - 1]\n    \n    return name", "def get_planet_name(id):\n    # This doesn't work; Fix it!\n    name = ('a',\"Mercury\",\"Venus\", \"Earth\", \"Mars\",\"Jupiter\",\"Saturn\", \"Uranus\"  ,\"Neptune\")\n    return name[id]", "get_planet_name = {\n        1: \"Mercury\",\n        2: \"Venus\",\n        3: \"Earth\",\n        4: \"Mars\",\n        5: \"Jupiter\",\n        6: \"Saturn\",\n        7: \"Uranus\",\n        8: \"Neptune\"\n        }.get", "def get_planet_name(id):\n    # This doesn't work; Fix it!\n    name=\"\"\n\n    for idx, planete in [(1, \"Mercury\"), (2, \"Venus\"), (3, \"Earth\"), (4, \"Mars\"), (5, \"Jupiter\"), (6, \"Saturn\"), (7, \"Uranus\"), (8, \"Neptune\")]:\n        if idx == id:\n            return planete\n    return 'ID not fund'    \n    \n    \n    \n    \n    \n", "def get_planet_name(id):\n    planets = [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n    return planets[id-1]", "def get_planet_name(id):\n    d = {\n        1:\"Mercury\",\n        2:\"Venus\",\n        3:\"Earth\",\n        4:\"Mars\",\n        5:\"Jupiter\",\n        6:\"Saturn\",\n        7:\"Uranus\",\n        8:\"Neptune\",\n        }\n    return d.get(id, \"Sorry, that's not a planet.\")", "def get_planet_name(id):\n    database ={\n         1: \"Mercury\",\n         2: \"Venus\",\n         3: \"Earth\",\n         4: \"Mars\",\n         5: \"Jupiter\",\n         6: \"Saturn\",\n         7: \"Uranus\",  \n         8: \"Neptune\"\n        }\n    return database.get(id)", "def get_planet_name(id):\n    id_dict = {1: \"Mercury\",\n               2: \"Venus\",\n               3: \"Earth\",\n               4: \"Mars\",\n               5: \"Jupiter\",\n               6: \"Saturn\",\n               7: \"Uranus\",\n               8: \"Neptune\"}\n    for key in id_dict.keys():\n        if key == id:\n            return id_dict[key]", "def get_planet_name(id:int) -> \"Returns a Planet\":\n    p=[\"Mercury\",\"Venus\",\"Earth\",\"Mars\",\"Jupiter\",\"Saturn\",\"Uranus\",\"Neptune\"]\n    return p[id-1]", "def get_planet_name(id):\n    \"\"\" This function returns planet`s name by id. \"\"\"\n    planet = {1: 'Mercury',\n              2: 'Venus',\n              3: 'Earth',\n              4: 'Mars',\n              5: 'Jupiter',\n              6: 'Saturn',\n              7: 'Uranus',\n              8: 'Neptune'}\n    for key, val in planet.items():\n        if key == id:\n            return val", "def get_planet_name(id):\n    # This doesn't work; Fix it!\n    switch={\n        1: \"Mercury\",\n        2: \"Venus\",\n        3: \"Earth\",\n        4: \"Mars\",\n        5: \"Jupiter\",\n        6: \"Saturn\",\n        7: \"Uranus\",\n        8: \"Neptune\"\n        }\n    return switch.get(id, \"Invalid Planet Selection\")", "def get_planet_name(id):\n    planet_map = {1: \"Mercury\",\n                  2: \"Venus\",\n                  3: \"Earth\",\n                  4: \"Mars\",\n                  5: \"Jupiter\",\n                  6: \"Saturn\",\n                  7: \"Uranus\",\n                  8: \"Neptune\"}\n    return planet_map[id]", "def get_planet_name(id):\n    if id is 1:\n        name = \"Mercury\"\n        return name\n    if id is 2:\n        name = \"Venus\"\n        return name\n    if id is 3:\n        name = \"Earth\"\n        return name\n    if id is 4:\n        name = \"Mars\"\n        return name\n    if id is 5:\n        name = \"Jupiter\"\n        return name\n    if id is 6:\n        name = \"Saturn\"\n        return name\n    if id is 7:\n        name = \"Uranus\"\n        return name\n    if id is 8:\n        name = \"Neptune\"\n        return name\n", "def get_planet_name(id):\n    # This doesn't work; Fix it!\n  \n    switch ={\n         1: \"Mercury\",\n         2: \"Venus\",\n         3: \"Earth\",\n         4: \"Mars\",\n         5: \"Jupiter\",\n         6: \"Saturn\",\n         7: \"Uranus\" , \n         8: \"Neptune\"\n    }\n    return switch.get(id,\"wrong walue\")", "def get_planet_name(id):\n    # This doesn't work; Fix it!\n    name=\"\"\n    dict_ = {\n        1: \"Mercury\",\n        2: \"Venus\",\n        3: \"Earth\",\n        4: \"Mars\",\n        5: \"Jupiter\",\n        6: \"Saturn\",\n        7: \"Uranus\" , \n        8: \"Neptune\"}\n    return dict_[id]", "def get_planet_name(id):\n    planets = [\"The Sun\", \"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n    return planets[id]", "def get_planet_name(id):\n    listOfPlanets = { 1: \"Mercury\",\n                      2: \"Venus\",\n                      3: \"Earth\",\n                      4: \"Mars\",\n                      5: \"Jupiter\",\n                      6: \"Saturn\",\n                      7: \"Uranus\" , \n                      8: \"Neptune\" }\n    return listOfPlanets[id];", "def get_planet_name(id):\n    name=\"\"\n    id=str(id)\n    a={\n      '1':\"Mercury\",\n      '2': \"Venus\",\n      '3':\"Earth\",\n      '4':\"Mars\",\n      '5':\"Jupiter\",\n      '6':\"Saturn\",\n      '7':\"Uranus\" ,\n      '8':\"Neptune\"}\n    name=a[id]\n    return name", "def get_planet_name(numar):\n    return {\n        1 : \"Mercury\",\n        2 : \"Venus\",\n        3 : \"Earth\",\n        4 : \"Mars\",\n        5 : \"Jupiter\",\n        6 : \"Saturn\",\n        7 : \"Uranus\",\n        8 : \"Neptune\"\n    }.get(numar)", "def get_planet_name(id):\n    solar_system={\n        1: \"Mercury\",\n        2: \"Venus\",\n        3:\"Earth\",\n        4: \"Mars\",\n        5: \"Jupiter\",\n        6: \"Saturn\",\n        7: \"Uranus\" , \n        8: \"Neptune\",\n        }\n    return solar_system.get(id)", "def get_planet_name(id):\n    planets = (\n        None,\n       \"Mercury\",\n       \"Venus\",\n       \"Earth\",\n       \"Mars\",\n       \"Jupiter\",\n       \"Saturn\",\n       \"Uranus\",\n       \"Neptune\"\n    )\n    return planets[id]", "def get_planet_name(id):\n    # This doesn't work; Fix it!\n    name=['Sun', 'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune', 'Pluto']\n    return name[id]", "def get_planet_name(id):\n    hop = [\n        [\"Mercury\"],\n        [\"Venus\"],\n        [\"Earth\"],\n        [\"Mars\"],\n        [\"Jupiter\"],\n        [\"Saturn\"],\n        [\"Uranus\"],\n        [\"Neptune\"]]\n    return \"'\".join(hop[id-1])", "def get_planet_name(id):\n    # This doesn't work; Fix it!\n    name=\"\"\n    planets = {\n        1 : \"Mercury\",\n        2: \"Venus\",\n        3: \"Earth\",\n        4: \"Mars\",\n        5: \"Jupiter\",\n        6: \"Saturn\",\n        7: \"Uranus\",  \n        8: \"Neptune\",\n        }\n    if id in planets:\n        return planets[id]\n    else:\n        return f\"{id} not available.\"\n    return name", "def get_planet_name(id):\n    # This doesn't work; Fix it!\n\n    plants = (None,\"Mercury\",\"Venus\",\"Earth\",\"Mars\",\"Jupiter\",\"Saturn\",\"Uranus\",\"Neptune\")\n\n    return plants[id]", "def get_planet_name(id):\n    # This doesn't work; Fix it!\n    if id == 1:\n        name = \"Mercury\"\n    elif id == 2:\n        name = \"Venus\"\n    elif id == 3:\n        name = \"Earth\" \n    elif id == 4:\n        name = \"Mars\"\n    elif id == 5:\n        name = \"Jupiter\"\n    elif id == 6: \n        name = \"Saturn\"\n    elif id == 7: \n        name = \"Uranus\"  \n    elif id == 8:\n        name = \"Neptune\"\n    else: \n        print(\"ivalid id\")\n    return name", "def get_planet_name(id):\n    planet_names = [\"Mercury\",\"Venus\",\"Earth\",\"Mars\",\"Jupiter\",\"Saturn\",\"Uranus\",\"Neptune\"]\n    return planet_names[id-1]", "def get_planet_name(id):\n    \n#dict_of_planet = {1: 'Mercury', 2: 'Venus', 3: 'Earth', 4: 'Mars', 5: 'Jupiter', 6: \"Saturn\", 7: \"Uranus\", 8: \"Neptune\"}\n#return 'Mercury'if id == 1 else 'Venus' if id == 2 else 'Earth' if id == 3 else 'Mars' if id == 4 else 'Jupiter' if id ==5 else \"Saturn\" if id == 6 else \"Uranus\" if id == 7 else 'Neptune' if id == 8\n \n    if id == 1:\n        return 'Mercury'\n    if id == 2:\n        return 'Venus'\n    if id == 3:\n        return 'Earth'\n    if id == 4:\n        return 'Mars'\n    if id == 5:\n        return 'Jupiter'\n    if id == 6:\n        return \"Saturn\"\n    if id == 7:\n        return \"Uranus\"\n    if id == 8:\n        return 'Neptune'", "def get_planet_name(id):\n    # This doesn't work; Fix it!\n    obj1 = {\n        1: \"Mercury\",\n        2: \"Venus\",\n        3: \"Earth\",\n        4: \"Mars\",\n        5: \"Jupiter\",\n        6: \"Saturn\",\n        7: \"Uranus\",\n        8: \"Neptune\"\n    }\n    return obj1[id]\n\n", "def get_planet_name(id):\n    # This doesn't work; Fix it!\n#     switch id:\n#         case 1: name = \"Mercury\"\n#         case 2: name = \"Venus\"\n#         case 3: name = \"Earth\"\n#         case 4: name = \"Mars\"\n#         case 5: name = \"Jupiter\"\n#         case 6: name = \"Saturn\"\n#         case 7: name = \"Uranus\"  \n#         case 8: name = \"Neptune\"\n    planet_dict = {\n        1: \"Mercury\",\n        2: \"Venus\",\n        3: \"Earth\",\n        4: \"Mars\",\n        5: \"Jupiter\",\n        6: \"Saturn\",\n        7: \"Uranus\",\n        8: \"Neptune\"\n    }\n    name = planet_dict.get(id, 'Not found by id')\n    return name", "def get_planet_name(id):\n    # This doesn't work; Fix it!\n    \n    case={\n        1: \"Mercury\",\n        2: \"Venus\",\n        3: \"Earth\",\n        4: \"Mars\",\n        5: \"Jupiter\",\n        6: \"Saturn\",\n        7: \"Uranus\",  \n        8: \"Neptune\"}\n    if id in case.keys():\n        return case[id]", "def get_planet_name(id):\n    planet_map = {\n        1: \"Mercury\",\n        2: \"Venus\",\n        3: \"Earth\",\n        4: \"Mars\",\n        5: \"Jupiter\",\n        6: \"Saturn\",\n        7: \"Uranus\",  \n        8: \"Neptune\"\n        }\n    return planet_map.get(id)", "def get_planet_name(name):\n    # This doesn't work; Fix it!\n    planet = [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n    return planet[name-1]\n#pogchamp\n", "def get_planet_name(number):\n    planets = {1 : \"Mercury\",\n    2 : \"Venus\",\n    3 : \"Earth\",\n    4 : \"Mars\",\n    5 : \"Jupiter\",\n    6 : \"Saturn\",\n    7 : \"Uranus\",\n    8 : \"Neptune\"}\n    return planets[number] if number in planets else None", "def get_planet_name(id):\n    namedic={1: \"Mercury\",2: \"Venus\", 3:  \"Earth\",4:  \"Mars\",5:  \"Jupiter\",6:  \"Saturn\",7: \"Uranus\"  ,8: \"Neptune\"}\n    \n    return namedic[id]", "def get_planet_name(id):\n    switcher= {\n        1: \"Mercury\",\n        2: \"Venus\",\n        3: \"Earth\",\n        4: \"Mars\",\n        5: \"Jupiter\",\n        6: \"Saturn\",\n        7: \"Uranus\",\n        8: \"Neptune\"\n    }\n    return switcher.get(id) if 0 < id < 9 else 'no planet for id {}'.format(id)", "def get_planet_name(id):\n    BASE_ID = {1: \"Mercury\", 2: \"Venus\", 3: \"Earth\", 4: \"Mars\", 5: \"Jupiter\", 6: \"Saturn\", 7: \"Uranus\", 8: \"Neptune\"}\n    return BASE_ID.get(id)", "def get_planet_name(id):\n    plannetdict=dict({ 1 :\"Mercury\",\n                       2 : \"Venus\",\n                       3 :\"Earth\",\n                       4 : \"Mars\",\n                       5 : \"Jupiter\",\n                       6 : \"Saturn\",\n                       7 : \"Uranus\",  \n                       8 : \"Neptune\"})\n        \n    return plannetdict[id]\n", "def get_planet_name(id):\n    array = [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n    return array[id-1];", "def get_planet_name(id):\n    switchcase={\n        1: \"Mercury\",\n        2: \"Venus\",\n        3: \"Earth\",\n        4: \"Mars\",\n        5: \"Jupiter\",\n        6: \"Saturn\",\n        7: \"Uranus\",  \n        8: \"Neptune\"\n    }\n    return switchcase.get(id,'Invalid planet id!')", "def get_planet_name(id):\n    # This doesn't work; Fix it!\n    name1 = \"Mercury\"\n    name2 = \"Venus\"\n    name3 = \"Earth\"\n    name4 = \"Mars\"\n    name5 = \"Jupiter\"\n    name6 = \"Saturn\"\n    name7 = \"Uranus\"  \n    name8 = \"Neptune\"\n    if id == 1:\n        return name1\n    elif id == 2:\n        return name2\n    elif id ==3:\n        return name3\n    elif id ==4:\n        return name4\n    elif id == 5:\n        return name5\n    elif id == 6:\n        return name6\n    elif id == 7:\n        return name7\n    else:\n        return name8", "def get_planet_name(id):\n    switch = {\n       1: \"Mercury\",\n       2: \"Venus\",\n       3: \"Earth\",\n       4: \"Mars\",\n       5: \"Jupiter\",\n       6: \"Saturn\",\n       7: \"Uranus\", \n       8: \"Neptune\",\n        }\n    return switch.get(id, \"test\")", "def get_planet_name(id):\n    values = {\n        1 : \"Mercury\",\n        2 : \"Venus\",\n        3 : \"Earth\",\n        4 : \"Mars\",\n        5 : \"Jupiter\",\n        6 : \"Saturn\",\n        7 : \"Uranus\",  \n        8 : \"Neptune\"}\n    name = values[id]\n    return name", "def get_planet_name(id):\n    switch={\n1: \"Mercury\",\n2: \"Venus\",\n3: \"Earth\",\n4: \"Mars\",\n5: \"Jupiter\",\n6: \"Saturn\",\n7: \"Uranus\" , \n8: \"Neptune\"}\n    return switch.get(id, \"earth\")", "def get_planet_name(id):\n    # Fixed sir!\n    planets = {\n        1: \"Mercury\",\n        2: \"Venus\",\n        3: \"Earth\",\n        4: \"Mars\",\n        5: \"Jupiter\",\n        6: \"Saturn\",\n        7: \"Uranus\",\n        8: \"Neptune\",\n        }\n    return planets[id]", "def get_planet_name(id):\n    # This doesn't work; Fix it!\n    plantes = {\n        1: \"Mercury\",\n        2: \"Venus\",\n        3: \"Earth\",\n        4: \"Mars\",\n        5: \"Jupiter\",\n        6: \"Saturn\",\n        7: \"Uranus\",\n        8: \"Neptune\"\n    }\n    if id in plantes.keys():\n        return plantes.get(id)\n    else:\n        return \"not plante in this range\"", "def get_planet_name(id):\n    # a dictionary also can work as a switch case\n    switcher = {\n        1:\"Mercury\",\n        2:\"Venus\",\n        3:\"Earth\",\n        4:\"Mars\",\n        5:\"Jupiter\",\n        6:\"Saturn\",\n        7:\"Uranus\", \n        8:\"Neptune\"\n        }\n    return switcher.get(id)", "def get_planet_name(id):\n\n    HOLDER = {1: \"Mercury\",\n              2: \"Venus\",\n              3: \"Earth\",\n              4: \"Mars\",\n              5: \"Jupiter\",\n              6: \"Saturn\",\n              7: \"Uranus\"  ,\n              8: \"Neptune\"}\n\n    return HOLDER[id]\n", "def get_planet_name(id):\n    return switch(id)\n\ndef switch(id):\n    case = {\n        'case1': {'name': \"Mercury\"},\n        'case2': {'name': \"Venus\"},\n        'case3': {'name': \"Earth\"},\n        'case4': {'name': \"Mars\"},\n        'case5': {'name': \"Jupiter\"},\n        'case6': {'name': \"Saturn\"},\n        'case7': {'name': \"Uranus\" },\n        'case8': {'name': \"Neptune\"},\n    }\n    caseKey = 'case' + str(id)\n    return case.get(caseKey, case.get('case1')).get('name')", "def get_planet_name(id):\n    # This doesn't work; Fix it!\n    list_planet_id = ['Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune',]\n    return list_planet_id[id-1]\n        \n", "def get_planet_name(id):\n    # This doesn't work; Fix it!\n    name=\"\"\n    if id == 1: name = \"Mercury\"\n    elif id == 2: name = \"Venus\"\n    elif id == 3: name = \"Earth\"\n    elif id == 4: name = \"Mars\"\n    elif id == 5: name = \"Jupiter\"\n    elif id == 6: name = \"Saturn\"\n    elif id == 7: name = \"Uranus\"  \n    elif id == 8: name = \"Neptune\"\n    else: name = \"Pluto\"\n    return name", "def get_planet_name(id):\n    planents = {\n        1: \"Mercury\",\n        2: \"Venus\",\n        3: \"Earth\",\n        4: \"Mars\",\n        5: \"Jupiter\",\n        6: \"Saturn\",\n        7: \"Uranus\",\n        8: \"Neptune\"\n    }\n    return planents[id]\n\nprint((get_planet_name(3)))\n", "def get_planet_name(id):\n    id2 = id-1\n    liste = [\"Mercury\",\"Venus\",\"Earth\",\"Mars\",\"Jupiter\",\"Saturn\",\"Uranus\",\"Neptune\"]\n    return (liste[id2])\n    \n", "planets = {1:'Mercury',\n            2:'Venus',\n            3:'Earth',\n            4:'Mars',\n            5:'Jupiter',\n            6:'Saturn',\n            7:'Uranus',\n            8:'Neptune'}\n\ndef get_planet_name(number):\n    return planets.get(number)", "def get_planet_name(id):\n    planets = [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n    id = int(id)\n    return planets[id-1]", "def get_planet_name(id):\n    if id == 1:\n        return 'Mercury'\n    if id == 2:\n        return 'Venus'\n    if id == 4:\n        return 'Mars'\n    if id == 5:\n        return 'Jupiter'\n    if id == 8:\n        return 'Neptune'\n    if id == 3:\n        return 'Earth'\n    if id == 6:\n        return 'Saturn'\n    if id == 7:\n        return 'Uranus'", "def get_planet_name(name):\n     return {1:\"Mercury\", 2:\"Venus\", 3:\"Earth\", 4: \"Mars\", 5:\"Jupiter\", 6:\"Saturn\", 7:\"Uranus\" ,8:\"Neptune\"}.get(name)\n", "def get_planet_name(id):\n    # This doesn't work; Fix it!\n    dict = {\n        1: \"Mercury\",\n        2: \"Venus\",\n        3: \"Earth\",\n        4: \"Mars\",\n        5: \"Jupiter\",\n        6: \"Saturn\",\n        7: \"Uranus\",  \n        8: \"Neptune\"\n        }\n    return dict.get(id, 'NA')", "def get_planet_name(id):\n    case = id\n    if case == 1: name = \"Mercury\"\n    elif case == 2: name = \"Venus\"\n    elif case == 3: name = \"Earth\"\n    elif case == 4: name = \"Mars\"\n    elif case == 5: name = \"Jupiter\"\n    elif case == 6: name = \"Saturn\"\n    elif case == 7: name = \"Uranus\"  \n    elif case == 8: name = \"Neptune\"\n    return name", "def get_planet_name(id):\n    if (id == 1):\n        return \"Mercury\"\n    elif (id == 2):\n        return \"Venus\"\n    elif (id == 3):\n        return \"Earth\"\n    elif (id == 4):\n        return \"Mars\"\n    elif (id == 5):\n        return \"Jupiter\"\n    elif (id == 6):\n        return \"Saturn\"\n    elif (id == 7):\n        return \"Uranus\"\n    elif (id == 8):\n        return \"Neptune\"\n    return \"Invalid Planet Index\"", "def get_planet_name(id):\n    p = {1: \"Mercury\", 2: \"Venus\", 3: \"Earth\", 4: \"Mars\", 5: \"Jupiter\",\n         6: \"Saturn\",7:\"Uranus\",8: \"Neptune\"}\n    return p.get(id)", "def get_planet_name(id):\n    # This doesn't work; Fix it!\n    if id == 1:\n        return  \"Mercury\"\n    elif id == 2:\n        return  \"Venus\"\n    elif id == 3:\n        return \"Earth\"\n    elif id == 4:\n        return \"Mars\"\n    elif id == 5:\n        return \"Jupiter\"\n    elif id == 6:\n        return \"Saturn\"\n    elif id == 7:\n        return \"Uranus\"  \n    elif id == 8:\n        return  \"Neptune\"\n    return None", "LOOKUP = {\n        1: \"Mercury\",\n        2: \"Venus\",\n        3: \"Earth\",\n        4: \"Mars\",\n        5: \"Jupiter\",\n        6: \"Saturn\",\n        7: \"Uranus\", \n        8: \"Neptune\"}\ndef get_planet_name(id):\n    return LOOKUP[id]", "def get_planet_name(id):\n    return 'Mercury Venus Earth Mars Jupiter Saturn Uranus Neptune'.split(' ').__getitem__(id-1)", "def get_planet_name(id):\n    name=\"\"\n    if id == 1: \n        name = \"Mercury\"\n        return name\n    if id == 2: \n        name = \"Venus\"\n        return name\n    if id == 3: \n        name = \"Earth\"\n        return name\n    if id == 4: \n        name = \"Mars\"\n        return name\n    if id == 5: \n        name = \"Jupiter\"\n        return name\n    if id == 6: \n        name = \"Saturn\"\n        return name\n    if id == 7: \n        name = \"Uranus\"  \n        return name\n    if id == 8: \n        name = \"Neptune\"\n        return name", "def get_planet_name(id):\n\n    return {\n        1: \"Mercury\",\n        2: \"Venus\",\n        3: \"Earth\",\n        4: \"Mars\",\n        5: \"Jupiter\",\n        6: \"Saturn\",\n        7: \"Uranus\",\n        8: \"Neptune\"\n        }.get(id, \"Not Available\")", "def get_planet_name(id):\n    switcher={\n        1: \"Mercury\",\n        2: \"Venus\",\n        3: \"Earth\",\n        4: \"Mars\",\n        5: \"Jupiter\",\n        6: \"Saturn\",\n        7: \"Uranus\",\n        8: \"Neptune\"\n    }\n    return switcher.get(id, \"invadlid\")", "def get_planet_name(id):\n    # This doesn't work; Fix it!\n    name=\"\"\n    switch_id={\n        1: \"Mercury\",\n        2:\"Venus\",\n        3: \"Earth\",\n        4: \"Mars\",\n        5:\"Jupiter\",\n        6: \"Saturn\",\n        7:\"Uranus\" , \n        8:\"Neptune\"}\n    return name+switch_id[id]", "def get_planet_name(id):\n    # This doesn't work; Fix it!\n    switcher = {\n         1:  \"Mercury\",\n         2:  \"Venus\",\n         3:  \"Earth\",\n         4:  \"Mars\",\n         5:  \"Jupiter\",\n         6:  \"Saturn\",\n         7:  \"Uranus\", \n         8:  \"Neptune\",\n }\n    return switcher.get(id,\"invalid planet index\")", "def get_planet_name(id):\n    name = ''\n    planets = ['Mercury','Venus','Earth','Mars','Jupiter','Saturn','Uranus','Neptune']\n    ID = [1,2,3,4,5,6,7,8]\n    for i in range(len(ID)):\n        if id == ID[i]:\n            return(planets[i])\n\n", "def get_planet_name(num):\n if num == 1:\n    return \"Mercury\"\n elif num == 2:\n    return \"Venus\"\n elif num == 3:\n    return \"Earth\"\n elif num == 4:\n    return \"Mars\"\n elif num == 5:\n    return \"Jupiter\"\n elif num == 6:\n    return \"Saturn\"\n elif num == 7:\n    return \"Uranus\"\n elif num == 8:\n    return \"Neptune\"\n elif num == 9:\n    return \"Pluto\"\n else:\n    return \"Not in range\"\n", "def get_planet_name(id):\n    if id == 1: \n        return \"Mercury\"\n    if id == 2: \n        return \"Venus\"\n    if id == 3: \n        return \"Earth\"\n    if id == 4: \n        return \"Mars\"\n    if id == 5: \n        return \"Jupiter\"\n    if id == 6: \n        return \"Saturn\"\n    if id == 7: \n        return \"Uranus\"  \n    if id == 8: \n        return \"Neptune\"\n    else:\n        return None", "def get_planet_name(id):\n    name=\"\"\n    thisdict ={1:'Mercury',\n               2:'Venus',\n               3:'Earth',\n               4:'Mars',\n               5:'Jupiter',\n               6:'Saturn',\n               7:'Uranus',\n               8:'Neptune'\n    }\n    name = thisdict[id]\n    return name", "def get_planet_name(id):\n    planet_names = {\n        1: \"Mercury\",\n        2: \"Venus\",\n        3: \"Earth\",\n        4: \"Mars\",\n        5: \"Jupiter\",\n        6: \"Saturn\",\n        7: \"Uranus\",\n        8: \"Neptune\",\n    }\n    if (id > 8):\n        print (\"Kelebihan Bos\")\n    elif (id < 0):\n        print (\"Belajar Lagi Bos\")\n    else:\n        return planet_names.get(id)\nprint(get_planet_name(3))"]