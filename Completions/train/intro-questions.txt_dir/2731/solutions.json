["from datetime import timedelta, datetime\ndef day_and_time(mins):\n    return \"{:%A %H:%M}\".format(datetime(2017, 1, 1) + timedelta(minutes = mins))", "def day_and_time(mins):\n    dow = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday']\n    return \"{} {:02d}:{:02d}\".format(dow[(mins // 1440) % 7], (mins // 60) % 24, mins % 60)\n    \n", "from time import gmtime, strftime\n\ndef day_and_time(mins):\n    #your code here\n    return strftime(\"%A %H:%M\", gmtime(3600*24*3+60*mins))", "from datetime import datetime, timedelta\ndef day_and_time(mins):\n    d = datetime.strptime('2019-01-13 00:00', '%Y-%m-%d %H:%M') + timedelta(minutes = mins)\n    return d.strftime('%A %H:%M')\n", "from datetime import datetime, timedelta\n\n\ndef day_and_time(mins):\n    return format(datetime(2018, 7, 1) + timedelta(minutes=mins), '%A %H:%M')", "from datetime import datetime, timedelta\n\ndef day_and_time(mins):\n    test_date = datetime(2017, 2, 12) + timedelta(minutes=mins)\n    return test_date.strftime(\"%A %H:%M\")\n", "WEEKDAYS = ('Sunday', 'Monday', 'Tuesday', 'Wednesday',\n            'Thursday', 'Friday', 'Saturday')\n\n\ndef day_and_time(minutes):\n    days, minutes = divmod(minutes, 1440)\n    hours, minutes = divmod(minutes, 60)\n    return '{} {:02}:{:02}'.format(WEEKDAYS[days % 7], hours, minutes)\n", "day_and_time = lambda m: \"{} {:02d}:{:02d}\".format([\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"][(m//1440)%7], (m//60)%24, m%60)"]