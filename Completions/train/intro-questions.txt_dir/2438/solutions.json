["class Solution:\n     def lengthOfLastWord(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: int\n         \"\"\"\n         x = s.split()\n         return len(x[-1]) if len(x) > 0 else 0", "class Solution:\n     def lengthOfLastWord(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: int\n         \"\"\"\n         '''\n         if s == None: return 0\n         count = 0\n         for item in s[-1::-1]:\n             if item == ' ':\n                 break\n             count += 1\n         return count\n         '''\n         count = len(s.strip().split(' ')[-1])\n         return count\n                 \n             \n             \n", "class Solution:\n     def lengthOfLastWord(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: int\n         \"\"\"\n         return len(s.strip(' ').split(' ')[-1])", "class Solution:\n     def lengthOfLastWord(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: int\n         \"\"\"\n         ans,tail=0,len(s)-1\n         while tail>=0 and s[tail]==' ':\n             tail-=1\n         while tail>=0 and s[tail]!=' ':\n             ans+=1\n             tail-=1\n         return ans", "class Solution:\n     def lengthOfLastWord(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: int\n         \"\"\"\n         if not s:\n             return 0\n         \n         s = s.rstrip()\n         s = s.lstrip()\n         \n         for i in range(0,len(s))[::-1]:\n             if s[i] == ' ':\n                 return len(s)-1-i\n         return len(s)\n         \n                 \n", "class Solution:\n     def lengthOfLastWord(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: int\n         \"\"\"\n         spaces = 0\n         word_started = False\n         # Traverse through string from back\n         # Count number of spaces encountered before first word starts\n         # Keep going through characters until next space is found\n         # Return that index (minus one, not counting the space)\n         # And subtract the number of spaces\n         for i in range(1, len(s) + 1):\n             if s[-i] == \" \" and word_started is False:\n                 spaces += 1\n             elif s[-i] == \" \" and word_started is True:\n                 return i - 1 - spaces\n             else:\n                 word_started = True\n         if word_started is True:\n             return len(s) - spaces\n         else:\n             return 0", "class Solution:\n     def lengthOfLastWord(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: int\n         \"\"\"\n         words = s.split()\n         if not words:\n             return 0\n         return len(words[-1])", "class Solution:\n     def lengthOfLastWord(self, s):\n         res = 0;\n         last = 0;\n         for i in s:\n             if(i == ' '):\n                 res = 0;\n             else:\n                 res += 1;\n                 last = res;\n                 \n         return last;\n         \"\"\"\n         :type s: str\n         :rtype: int\n         \"\"\"\n", "class Solution:\n     def lengthOfLastWord(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: int\n         \"\"\"\n         l = s.split(' ')\n         while l:\n             if l[-1]:\n                 return len(l[-1])\n             else:\n                 l.pop(-1)\n         return 0", "class Solution:\n     def lengthOfLastWord(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: int\n         \"\"\"\n         v = s.split()\n         if not v:\n             return 0\n         else:\n             return len(v[-1])\n", "class Solution:\n     def lengthOfLastWord(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: int\n         \"\"\"\n         l = len(s)\n         n_c=0\n         for i in range(l-1,-1,-1):#\u4ece\u672b\u5c3e\u5f00\u59cb\u8ba1\u6570\n             if s[i]!=' ':\n                 n_c += 1\n             elif s[i]==' ' and n_c == 0 :\n                 pass\n             elif s[i]==' ' and n_c != 0 : #\u9047\u5230\u7a7a\u683c\uff0c\u4e14\u5b57\u7b26\u8ba1\u6570\u975e\u96f6\u65f6\uff0c\u8fd4\u56de\u8ba1\u6570\u503c\n                 return n_c\n         return n_c", "class Solution:\n     def lengthOfLastWord(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: int\n         \"\"\"\n         s = s.strip()\n         if s == None: return 0\n         count = 0\n         for item in s[-1::-1]:\n             if item == ' ':\n                 break\n             count += 1\n         return count\n \n             \n             \n"]