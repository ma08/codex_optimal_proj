["def hamming_distance(a, b):\n    return sum(c != d for c, d in zip(a, b))\n", "def hamming_distance(a, b): return sum(ch1 != ch2 for ch1, ch2 in zip(a, b))", "def hamming_distance(a, b):\n    result=0\n    for i in range(len(a)):\n        if a[i]!=b[i]:\n            result+=1;\n    return result;\n", "def hamming_distance(a, b): return sum(x != y for x, y in zip(a,b))", "def hamming_distance(a, b):\n    return sum(y != x for y, x in zip(b, a))", "hamming_distance=lambda a,b:sum(1for x,y in zip(a,b)if x!=y)", "hamming_distance = lambda r, s: len([i for i in range(len(r)) if r[i] != s[i]])", "def hamming_distance(a, b):\n    return sum(ca != cb for ca, cb in zip(a, b))", "def hamming_distance(a, b):\n    return sum(b1 != b2 for b1, b2 in zip(a, b))", "def hamming_distance(a, b):\n    return sum(abs(int(a[i]) - int(b[i])) for i in range(0, len(a)))\n        \n        \n"]