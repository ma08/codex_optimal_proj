["from collections import Counter\ndef letter_count(s):\n    return Counter(s)", "def letter_count(s):\n    return {i: s.count(i) for i in s}", "from collections import Counter as letter_count", "def letter_count(s):\n    letters = {}\n    for i in list(s):\n        if i in letters:\n            letters[i] += 1\n        else:\n            letters[i] = 1\n    return letters", "import collections\n\ndef letter_count(s):\n    res = collections.defaultdict(int)\n    for _char in s:\n        res[_char] += 1\n    return res", "def letter_count(s):\n    return {c: s.count(c) for c in set(s)}", "def letter_count(s):\n    return dict((letter, s.count(letter)) for letter in sorted(set(s)))", "def letter_count(s):\n    count = {}\n    for c in s:\n        count[c] = count.get(c, 0) + 1\n    \n    return count", "import collections\n\ndef letter_count(s):\n    result = {}\n    for i, d in enumerate(s):\n        count = 1\n        if d not in result:\n            for j in range(i+1, len(s)):\n                if d == s[j]:\n                    count += 1\n            result[d] = count\n    return collections.OrderedDict(sorted(result.items()))", "def letter_count(s):\n    count = {}\n    for i in s:\n        if i in count:\n            count[i] += 1\n        else:\n            count[i] = 1\n    return count"]