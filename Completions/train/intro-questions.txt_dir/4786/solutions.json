["def poly_derivative(p):\n    return [i * x for i, x in enumerate(p)][1:]\n", "def poly_derivative(p):\n    return [i * n for i, n in enumerate(p[1:], 1)]", "def poly_derivative(p):\n    return [ n*d for d,n in enumerate(p[1:], 1)]", "def poly_derivative(p):\n    return [i * p[i] for i in range(1, len(p))]", "def poly_derivative(p):\n    return [x*i for i, x in enumerate(p) if i != 0]\n", "def poly_derivative(p):\n    result = []\n    for i, n in enumerate(p[1:], start=1):\n        result.append(n*i)\n    return result", "# return the derivative of the polynomial.  \ndef poly_derivative(p):\n    \n    der = []\n    \n    for i in range(1,len(p)):\n        der.append(i*p[i])\n        \n    return der", "def poly_derivative(p):\n    return [el * idx for idx, el in enumerate(p) if idx > 0]", "def poly_derivative(p):\n    result = []\n    for i in range(1,len(p)):\n        result.append(i*p[i])\n    return result\n            \n            \n", "# return the derivative of the polynomial.  \ndef poly_derivative(p):\n    return [(i+1)*m for i, m in enumerate(p[1:])]"]