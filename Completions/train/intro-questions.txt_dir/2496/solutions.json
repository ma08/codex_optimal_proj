["class Solution:\n    def dayOfTheWeek(self, day: int, month: int, year: int) -> str:\n        diff_year = (year - 1971) % 7 + int((year - 1968)/4)\n        print(('year:', (year - 1971), ':', (year - 1971)%7))\n        print(('num leaps:', int((year - 1968)/4)))\n        print(('diff_year:', diff_year))\n        months = {1:0, 2:3,3:3,4:6,5:1,6:4,7:6,8:2,9:5,10:0,11:3,12:5}\n        print(('month add:', months[month]))\n        if year == 2100:\n            leap = -1\n        elif month <=2 and (year - 1968)%4 == 0:\n            leap = -1\n        else:\n            leap = 0\n        weekdate = (diff_year + months[month] + day + leap -1)%7\n        print(('day:', day))\n        print(weekdate)\n        weekdays = {5:'Wednesday', 6:'Thursday', 7:'Friday',0:'Friday', \n                    1:'Saturday', 2:'Sunday', 3: 'Monday', 4:'Tuesday'}\n        return weekdays[weekdate]\n        \n", "import calendar, datetime\nclass Solution:\n    def dayOfTheWeek(self, day: int, month: int, year: int) -> str:\n        return calendar.day_name[datetime.date(year, month, day).weekday()]\n", "from datetime import datetime\nclass Solution:\n    def dayOfTheWeek(self, day: int, month: int, year: int) -> str:\n\n        # index mapping: 0          1           2           3           4           5       6        \n        weekday_name= ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n        \n        # datetime is a class, whose constructor can output corresponding date-time object\n        #\n        # for example:\n        # datetime(2020, 1, 15) = '2020-01-15 00:00:00'\n\n        # And its strftime('%w') can convert a date-time object into a index string of weekday, start from Sunday as 0\n        #\n        # for example:\n        # datetime(2020, 1, 15).strftime('%w') = '3'\n\n        # Finally, use int( ... ) to carry out explicit type conversion fron str to integer as weekday index\n        return weekday_name[ int( datetime(year, month, day).strftime('%w') ) ]", "import datetime\nimport calendar\n\nclass Solution:\n    \n    def dayOfTheWeek(self, day: int, month: int, year: int) -> str:\n        return datetime.datetime(year, month, day).strftime('%A')"]