["def last_man_standing(n):\n    dir, lst = -1, range(2,n+1,2)\n    while len(lst) != 1:\n        lst = lst[len(lst)%2 or dir == 1 ::2]\n        dir = -dir\n    return lst[0]", "from math import log\n\ndef last_man_standing(n):\n    return 1 + sum((((n >> i) | (i + 1)) % 2) << i for i in range(int(log(n, 2))))", "def last_man_standing(n):\n    arr = list(range(1,n+1))\n    while len(arr) > 1:\n        odd = []\n        for i, j in enumerate(arr):\n            if i % 2 == 0:\n                continue\n            odd.append(j)\n        arr = odd[::-1]\n    return arr[0]", "def last_man_standing(n):\n    l = range(1, n+1)\n    while len(l) > 1:\n        l = l[1::2][::-1]\n    return l[0]", "def last_man_standing(n):\n    r = range(1, n + 1)\n    while len(r) > 1:\n        r = r[1::2][::-1]\n    return r[0]", "last_man_standing=l=lambda n:n==1or 2*(n<4)or 4*l(n//4)-2*(n%4<2)", "last_man_standing=l=lambda n, left=True:n == 1 or 2 * l(n // 2, not left) - (not (n % 2 or left))", "def last_man_standing(n):\n    l=[]\n    l.extend(range(1,n+1))\n    \n    def doer(t):\n        w = []\n        return t[1::2]\n        \n    while len(l) > 1:\n        l = doer(l)\n        l.reverse()\n    return l[0]"]