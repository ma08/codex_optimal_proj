["def length_of_sequence(arr, n):\n    if arr.count(n) != 2:\n        return 0\n    a = arr.index(n)\n    b = arr.index(n, a + 1)\n    return b - a + 1", "def length_of_sequence(arr,n):\n    return (len(arr) - arr[::-1].index(n) - 1) - arr.index(n) + 1 if arr.count(n) == 2 else 0", "def length_of_sequence(arr,n):\n    indexes = [i for i,s in enumerate(arr) if s == n]\n    if len(indexes) != 2:\n        return 0\n    else:\n        return indexes[-1] - indexes[0] + 1", "def length_of_sequence(arr,n):\n    pos = [i for i, x in enumerate(arr) if x == n]\n    return pos[1] - pos[0] + 1 if len(pos) == 2 else 0", "def length_of_sequence(arr, n):\n    try:\n        i = arr.index(n)\n        j = arr.index(n, i+1)\n        try:\n            arr.index(n, j+1)\n            return 0\n        except ValueError:\n            return j - i + 1\n    except ValueError:\n        return 0", "def length_of_sequence(arr,n):\n    indexes = [i for i, x in enumerate(arr) if x == n]\n    if len(indexes) != 2:\n        return 0\n    return indexes[1] - indexes[0] + 1", "def length_of_sequence(arr,n):\n    if arr.count(n) != 2:\n        return 0\n    else:\n        return arr.index(n, arr.index(n)+1) - arr.index(n) + 1\n", "def length_of_sequence(arr, n):\n  inds = [i for i, v in enumerate(arr) if v == n]\n  return inds[1] - inds[0] + 1 if len(inds) == 2 else 0", "def length_of_sequence(arr,n):\n    #your code here\n    if arr.count(n) != 2:\n        return 0\n    return (arr[arr.index(n)+1:].index(n) + 2)\n", "def length_of_sequence(arr,n):\n    if arr.count(n) != 2:\n        return 0\n    \n    left = arr.index(n)\n    right = arr.index(n, left + 1)\n    return right - left + 1"]