["def hotpo(n):\n    cnt = 0\n    while n != 1:\n        n = 3 * n + 1 if n % 2 else n / 2\n        cnt += 1\n    return cnt", "def hotpo(num, count=0):\n  return count if num == 1 else hotpo(num / 2 if num % 2 == 0 else num * 3 + 1 ,count + 1)", "def hotpo(n):\n    def even_odd(m):\n        return [3*m+1, m/2][m%2==0]\n    c = 0\n    while n!=1:\n        n =  even_odd(n)\n        c+=1\n    return c", "hotpo = lambda n,c=0: c if n==1 else hotpo(n/2 if not n%2 else 3*n+1, c+1)", "def hotpo(n):\n    count = 0\n    while n != 1:\n        if n % 2:\n            n = 3 * n + 1\n        else:\n            n /= 2\n        count += 1\n    return count\n", "def hotpo(n):\n    t=0\n    while n>1:\n        if n%2==0: n //=2\n        else: n=3*n+1\n        t+=1\n    return t\n", "def hotpo(n):\n    x = 0\n    while n > 1:\n        if n % 2 == 0: n = n / 2\n        else: n = n * 3 + 1\n        x += 1\n    return x", "def hotpo(n):\n    count = 0\n    while n!=1:\n        n = n//2 if n%2==0 else 3*n+1\n        count += 1\n    return count", "def hotpo(n):\n    iterations = 0\n    while n != 1:\n        if n % 2 == 0:\n            n //= 2\n        else:\n            n = 3 * n + 1\n        iterations += 1\n    return iterations", "def hotpo(n, i = 0):\n    return i if n == 1 else hotpo(int(n / 2) if n % 2 == 0 else 3 * n + 1, i + 1)", "def hotpo(n, depth=0):\n  return depth if n == 1 else hotpo(3*n+1 if n%2 else n/2, depth+1)", "def hotpo(n):\n    count = 0\n    while n != 1:\n        if n % 2 == 0:\n            n //= 2\n        else:\n            n = 3 * n + 1\n        count += 1\n    return count", "def hotpo(n):\n    if n == 1:\n        return 0\n    rv = 0\n    while n != 1:\n        rv += 1\n        if n % 2 == 0:\n            n /= 2\n        else:\n            n = 3*n + 1\n    return rv", "def hotpo(n: int) -> int:\n    \"\"\" Get the number of times you need to perform this algorithm to get n = 1. \"\"\"\n    seq = []\n    while n > 1:\n        if not n % 2:\n            n = n / 2\n        else:\n            n = 3 * n + 1\n        seq.append(n)\n    return len(seq)", "hotpo=f=lambda n:n>1and-~f([n/2,3*n+1][n%2])", "def hotpo(n):\n    if n == 1:\n        return 0\n    else:\n        return 1 + (hotpo(n * 3 + 1) if n % 2 else hotpo(int(n / 2)))", "def hotpo(n):\n    return 1 + hotpo(n//2) if n%2 == 0 else 0 if n == 1 else 1 + hotpo(3*n+1)", "def hotpo(n):\n    if n == 1:   return 0\n    elif n%2==0: return 1 + hotpo(n//2)\n    else:        return 1 + hotpo(3*n+1)", "hotpo = lambda n: 1 + hotpo(int(n / 2) if n % 2 == 0 else 3 * n + 1) if n > 1 else 0", "def hotpo(n):\n    for i in range(999):\n        if n == 1:\n            return i\n\n        if n % 2:\n            n = n*3 + 1\n        else:\n            n = n / 2    ", "def hotpo(n):\n    if n == 1:\n        return 0\n    return 1 + hotpo(n/2) if not n%2 else 2 + hotpo((n*3 + 1)/2)", "# Can someone tell me if __import__ will be called each time in this case?\nhotpo = __import__(\"functools\").lru_cache(maxsize=None)(lambda n: 0 if n == 1 else 1+hotpo(3*n+1 if n&1 else n>>1))", "def hotpo(n, c=0):\n    return c if n == 1 else hotpo(3*n + 1 if n % 2 else n/2, c+1)", "def hotpo(n, c=0):\n    if n == 1: return c\n    elif n%2: return hotpo(3*n+1, c+1)\n    else: return hotpo(n/2, c+1)", "def hotpo(n):\n    if n==1: return 0\n    return hotpo(3*n+1 if n%2 else n/2)+1\n", "def hotpo(n, c = 0):\n    return c if n == 1 else hotpo((n%2)*(3*n+1)+((n+1)%2)*(n//2), c+1)", "def hotpo(start, memo={2: 1}):\n    \"\"\" uses memoization \"\"\"\n    n = start\n    seq_l = 0\n    while n > 1:\n        if memo.get(n, False):\n            if n != start:\n                memo[start] = memo[n] + seq_l\n            return memo[n] + seq_l\n        if n % 2 == 0:\n            n = n // 2\n            seq_l += 1\n        else:\n            n = (n * 3 + 1) // 2  # returns even value so -> // 2 skip's it.\n            seq_l += 2\n    return 0", "def hotpo(n):\n    x=0\n    while n!=1:\n        if n%2==0: n=n/2\n        else: n= 3*n+1\n        x+=1\n    return x\n\n#if(number is even) number = number / 2\n#if(number is odd) number = 3*number + 1\n", "def hotpo(n):\n    iter=0\n    while n!=1:\n        if n%2==0:\n            n = n/2\n        elif n%2!=0:\n            n = 3*n+1\n        iter=iter+1\n    return iter", "def hotpo(n):\n    counter = 0\n    while n > 1:\n        if n % 2:\n            n = 3*n+1\n        else:\n            n = n//2\n        counter += 1\n    return counter", "def hotpo(n):\n    counter = 0\n    while n != 1:\n        n = 3 * n + 1 if n % 2 else n/2\n        counter += 1\n    return counter\n            \n    \n'''\nif(number is even) number = number / 2\nif(number is odd) number = 3*number + 1\nmake a function hotpo that takes a positive n as input\nand returns the number of times you need to perform this algorithm to get n = 1.\n\n'''", "def hotpo(n):\n    numTimes = 0\n    while n != 1:\n        if n % 2 == 0:\n            n = n / 2\n        else:\n            n = 3 * n + 1\n        numTimes += 1\n    return numTimes", "def hotpo(n):\n    count = 0\n    while n != 1:\n        if n % 2 == 0:\n            n = n / 2\n        elif n % 2 == 1:\n            n = 3 * n + 1\n        count += 1\n    return count", "def hotpo(n):\n    res = 0\n    while n!=1:\n        res += 1\n        n = n*3 + 1 if n&1 else n>>1\n    return res", "def hotpo(n):\n    temp = [n]\n    while True:\n        if temp[-1] % 2 != 0:\n            if temp[-1] == 1:\n                return len(temp) - 1\n            temp.append(3 * temp[-1] + 1)\n        else:\n            temp.append(temp[-1] / 2)\n", "def hotpo(n):\n    count = 0\n    number = n \n    while number != 1: \n        if number % 2 == 0:\n            number = number / 2\n        elif number % 2 != 0:\n            number = 3 * number + 1\n        count += 1 \n    return count", "def hotpo(n):\n    algorithm_move_counter = 0\n    while n > 1:\n        if n % 2 == 0: n = n / 2\n        elif n % 2 > 0: n = (n * 3) + 1\n        algorithm_move_counter += 1\n    return algorithm_move_counter", "def hotpo(n):\n    hops = 0;\n    while (n > 1):\n        if n % 2:\n            n = 3 * n + 1\n        else:\n            n /= 2\n        hops += 1\n    return hops", "def hotpo(n):\n    a = 0\n    while n != 1:\n        if n%2 == 0:\n            n /= 2\n        else:\n            n = 3*n+1\n        a += 1\n    return a", "def hotpo(n):\n    res = 0\n    number = n\n    if number == 1:\n        return res\n\n    while number != 1:\n        if number % 2 == 0:\n            number = number / 2\n        else:\n            number = (3 * number) + 1\n        res += 1\n    return res", "def hotpo(n):\n    def __collatz(n):\n        return n / 2 if n % 2 == 0 else 3 * n + 1\n\n    count = 0\n    while True:  \n        if n == 1:\n            return count\n        \n        n = __collatz(n)\n        count += 1", "\ndef hotpo(n,c=0):\n    if n<=1:\n        return c\n    else:       \n        return hotpo(3*n+1,c+1) if n&1 else hotpo(n//2,c+1)", "from itertools import count\ndef hotpo(n):\n    for i in count():\n        if n == 1:\n            return i\n        if n % 2 == 0:\n            n = n/2\n        else:\n            n = n*3 + 1\n", "def hotpo(n):\n    if n == 1 : return 0\n    count = 0\n    \n    while n != 1 :\n        if n % 2 == 0:\n            n = n / 2\n        else :\n            n = 3 * n + 1\n        count += 1\n        #print (remainder, count)\n    return (count)", "def hotpo(n, r=0):\n    if n == 1: return r\n    if n % 2: return hotpo(3*n+1, r+1)\n    return hotpo(n/2, r+1)", "def hotpo(n):\n    count=0\n    while True:\n        if n < 2:\n            return count\n        if n%2==0:\n            n /= 2\n            count += 1\n        else:\n            n = 3*n+1\n            count += 1", "def hotpo(n):\n    count = 0\n    num = n\n    if(n < 1):\n        return 1\n    while(num > 1):\n        if(num % 2 == 0):\n            num = num / 2\n        else:\n            num = 3 * num + 1\n        count += 1\n    return count\n", "def hotpo(n):\n    nums = []\n    while n > 1:\n        n = 3 * n + 1 if n & 1 else int(n / 2)\n        nums.append(n)\n    return len(nums)", "def hotpo(n):\n    count=0\n    while n!=1:\n        count+=1\n        if n%2==0:\n            n=n/2\n        elif n%2!=0:\n            n=3*n+1\n    return count", "def hotpo(n):\n    steps = 0\n    \n    while n > 1:\n        if n % 2 == 0:\n            n = n / 2\n        else:\n            n = (n * 3) + 1\n        \n        steps = steps + 1\n        \n    return steps", "def hotpo(n):\n    if n ==1: return 0\n    x=0\n    while n != 1:\n        if n%2==0:\n            n=n/2\n        else:\n            n=(3*n)+1\n        x+=1\n    return x", "def hotpo(n):\n    count = 0\n    while(n!=1):\n        if n%2 == 0:    #is even\n            n /= 2\n        else:    #is odd\n            n = n*3 + 1\n        count+=1\n    return count\n", "def hotpo(n):\n    count = 0\n    while True:\n        if n == 1: break\n        if n%2: n = 3*n+1\n        else  : n = n/2\n        count += 1\n        \n    return count\n        \n", "def hotpo(n):\n    m, s = n, 0\n    while m!= 1:\n        if m % 2: m = 3 * m + 1\n        else: m //= 2\n        s += 1\n    return s\n", "def hotpo(n):\n    x = 0\n    while n != 1:\n        if n % 2 == 0:\n            n = n / 2\n            x = x + 1\n        else:\n            n = n*3 + 1\n            x = x + 1\n    return x\n", "def hotpo(n):\n    contador=0\n    while n!=1:\n        n=n//2 if n%2==0 else 3*n+1\n        contador+=1\n    return contador", "def hotpo(n):\n    i=0\n    while n!=1:\n        if n%2:\n            n = 3*n+1\n        else: n //= 2\n        i+=1\n    return i", "def hotpo(n):\n    \n    i = 0\n    j = 0\n    \n    if n == 1:\n        j = 1\n    \n    while j != 1:\n        \n        if n % 2 == 0:\n            n = n/2\n            i += 1\n            if n == 1:\n                j = 1\n                \n        elif n % 2 != 0:\n            n = (3 * n) + 1\n            i += 1\n            if n == 1:\n                j = 1\n        \n    return i", "def hotpo(n):\n    cnt = 0\n    while n != 1:\n        cnt += 1\n        if n % 2:\n            n = 3 * n + 1\n        else:\n            n = n / 2\n    return cnt", "def hotpo(n, count = 0):\n    if n == 1:\n        return count\n    n = n//2 if n % 2 == 0 else 3*n + 1\n    count += 1\n    return hotpo(n, count)", "def hotpo(n):\n    c = 0\n    next_n = n\n    while next_n != 1:\n        if next_n % 2 == 0:\n            next_n = next_n / 2\n        else:\n            next_n = next_n * 3 + 1\n        c += 1\n    else:\n        return c", "def hotpo(n):\n    c = 0\n    while n != 1:\n        if n % 2 == 0:\n            n /= 2\n        else:\n            n = (n * 3) + 1\n        c+=1\n    return c\n", "def hotpo(n):\n    t = 0\n    while (n != 1):\n        if n % 2 == 0:\n            n = n / 2\n        elif n % 2 == 1:\n            n = 3 * n + 1\n            \n        t += 1\n        \n    return t", "def hotpo(n):\n    c = 0\n    while n != 1:\n        d, r = divmod(n, 2)\n        if r is 0:\n            n = d\n        else:\n            n = 3*n+1\n        c += 1\n    return c\n", "def hotpo(n):\n    c=0\n    while n!=1:\n        if n%2==0:\n            n=n//2\n            c=c+1\n        else:\n            n=3*n+1\n            c=c+1\n    return c", "def hotpo(n):\n    nof_times = 0\n    while n != 1:\n        n = 3 * n + 1 if n % 2 else n / 2\n        nof_times += 1\n    return nof_times", "def hotpo(n):\n    counter = 0\n    if n != 1:\n        counter += 1\n        counter += hotpo(n/2 if n%2 == 0 else 3*n + 1)\n    return counter", "def hotpo(n):\n    c = 0\n    while n != 1:\n        if n%2 == 0:\n            n /= 2\n            c += 1\n        else:\n            n = (n*3)+1\n            c += 1\n    return c", "\ndef hot(n,i):\n    if n == 1:\n        return i\n    if n%2:\n        return hot(3*n+1,i+1)\n    else:\n        return hot(n/2,i+1)\n    \ndef hotpo(n):\n    i=0\n    return hot(n,i)\n", "def hotpo(n):\n    l=0\n    while n !=1:\n        if n%2:\n            n = 3*n+1\n        else:\n            n = n//2\n        l+=1\n    return l", "def hotpo(n):\n    t = 0\n    while n > 1:\n        n = 3*n+1 if n % 2 else n//2\n        t += 1\n    return t\n", "def hotpo(n):\n    if n == 1:\n        return 0\n    \n    count = 0\n    while(n != 1):\n        if n % 2 == 0 :\n            n = n // 2\n        else:\n            n = 3 * n + 1\n        count += 1\n        \n    return count", "def hotpo(n):\n    x=0\n    while n>1:\n        if n%2==0:\n            n/=2\n            x+=1\n        else:\n            n=3*n+1\n            x+=1\n    return x", "def hotpo(n):\n    cnt = 0\n    while n != 1:\n        cnt += 1\n        if n % 2 == 0:\n            n = n // 2\n        else:\n            n = 3 * n + 1\n    return cnt\n        \n", "def hotpo(n):\n    if n==1 : return 0\n    if n%2  : return 1+hotpo(3*n+1)\n    else    : return 1+hotpo(n//2)", "def hotpo(zahl):\n    count = 0\n    while zahl > 1:\n        count +=1\n        if zahl % 2 == 0:\n            zahl = zahl / 2\n        else:\n            zahl = 3 * zahl + 1\n    return count", "def hotpo(n):\n    times = 0\n    while True:\n        if n == 1: break\n        n = n//2 if not n%2 else n*3 + 1\n        times += 1\n\n    return times", "def hotpo(n):\n    res=0\n    for i in range(0,500):\n        if n==1:\n            return res\n        elif n%2==0:\n            n/=2\n            res+=1\n        else:\n            n=n*3+1\n            res+=1\n", "count = 0\ndef hotpo(n):\n    nonlocal count\n    if n == 1:\n        x = count\n        count = 0\n        return x\n    else:\n        if(n % 2 == 0):\n            count += 1\n            return hotpo(n / 2)\n        else:\n            count += 1\n            return hotpo(3 * n + 1)\n", "def hotpo(n, i=0):\n    return hotpo(n / 2 if n % 2 == 0 else 3 * n + 1, i+1) if n != 1 else i", "def hotpo(n):\n    if n%2==0 and n > 1:\n        n=n//2\n        return 1+hotpo(n)\n    if n%2==1 and n > 1:\n        n=3*n+1\n        return 1+hotpo(n)\n    return 0", "def hotpo(n):\n    i=0\n    x=n\n    while x!=1:\n        i+=1\n        if x%2==0:\n            x=x/2\n        else:\n            x=3*x+1       \n    return 0 if n==1 else i", "def hotpo(n):\n    \n    temp = n\n    time = 0\n    while temp != 1:\n        time += 1\n        if temp%2 == 0:\n            temp = temp / 2\n        else:\n            temp = 3* temp + 1\n    return time", "def hotpo(n):\n    return 0 if n == 1 else 1 + hotpo(3 * n + 1 if n % 2 else n // 2)", "def hotpo(n):\n    collatz = 0\n    while n > 1:\n        if n % 2 == 0:\n            n = n / 2\n        else:\n            n = 3 * n + 1\n        collatz += 1\n    return collatz", "def hotpo(n):\n    count = 0\n    while n != 1:\n        if n % 2 == 0:\n            n = n / 2\n            count = count + 1\n        elif n % 2 != 0:\n            n = 3 * n + 1\n            count = count + 1\n    return count", "def hotpo(n):\n    counter = 0\n    while n != 1:\n        n = (3*n) + 1 if n % 2 else n / 2\n        counter += 1\n    return counter", "def hotpo(n):\n    i = 0\n    while n != 1:\n        if n%2:\n            n = 3*n + 1\n        else:\n            n /= 2\n        i += 1\n    return i", "def hotpo(n):\n    num = 0\n    while n != 1:\n        if n % 2:\n            n = 3*n+1\n        else:\n            n //= 2\n        num += 1\n    \n    return num", "def hotpo(n):\n    c=0\n    while(n!=1):\n        if(n%2==0):\n            n=n/2\n            c=c+1\n        else:\n            n=3*n+1\n            c+=1\n        \n    return c", "def hotpo(n):\n    count=0\n    while n>1:\n        if n%2==0:\n            n=int(n/2)\n            count=count+1\n        else:\n            n=(3*n)+1\n            count=count+1\n    return count", "def hotpo(n):\n    \"\"\"\n    Proof? Save that stuff for happy hour!\n    \"\"\"\n    count = 0\n    while n != 1:\n        n = 3*n + 1 if n % 2 else n // 2\n        count += 1\n    return count", "def collatz(n):\n    if n%2==0:\n        return int(n/2)\n    else:\n        return 3*n+1\n\ndef hotpo(n):\n    i = 0\n    while n!=1:\n        n = collatz(n)\n        i += 1\n    return i", "def hotpo(n):\n    nb_exec = 0\n    while n != 1:\n        n = n / 2 if n % 2 == 0 else 3 * n + 1\n        nb_exec += 1\n    return nb_exec", "def hotpo(n):\n    collatz_counter = 0\n    while n > 1:\n        if n % 2:\n            n = 3 * n + 1\n        else:\n            n = n / 2\n        collatz_counter += 1\n    return collatz_counter", "def hotpo(n, count=0):\n  if n == 1:\n    return count\n  else:\n    n = n/2 if is_even(n) else 3*n + 1\n    count += 1\n    return hotpo(n, count)\n\ndef is_even(n):\n  return n % 2 == 0", "def hotpo(n):\n    ct = 0\n    while n > 1:\n        if n % 2 == 0:\n            n = n / 2\n        else:\n            n = 3 * n + 1\n        ct += 1\n    return ct", "def hotpo(n):\n    if n <= 0:\n        return 0\n    count = 0\n    while n != 1:\n        if n % 2:\n            n = n*3+1\n        else:\n            n //= 2\n        count += 1\n\n    return count", "def hotpo(n):\n    i = 0\n    while n > 1:\n        if n % 2:\n            n = 3 * n + 1\n        else:\n            n //= 2\n        i += 1\n    return i", "def hotpo(n):\n    res = n\n    cont =0\n    while res != 1:\n        res = res/2 if res%2==0 else res*3 + 1\n        cont +=1\n    return cont"]