["def mango(quantity, price):\n    return (quantity - quantity // 3) * price", "def mango(quantity, price):\n    return ((quantity - int(quantity/3))  * price)", "def mango(quantity, price):\n  batch = quantity//3 \n  total = (batch * 2 + quantity%3 ) * price \n  return total", "def mango(quantity, price):\n    return price * (quantity - (quantity // 3))", "def mango(quantity, price):\n    print(quantity)\n    return (quantity-quantity//3)*price", "def mango(quantity, price):\n    return ((quantity/ 3) * (2 * price)) + (quantity % 3 * price)", "def mango(quantity, price):\n    a, b = divmod(quantity, 3)\n    return price * (a * 2 + b)", "mango = lambda q,p: p*(q-q//3)", "mango = lambda count, price: (count - count // 3) * price", "def mango(quantity: int, price: int) -> int:\n    \"\"\"\n    Calculate the total cost of the mangoes for a given quantity and price.\n    Rule: \"3 for 2\" (or \"2+1\" if you like) offer on mangoes.\n    \"\"\"\n    return (quantity - (quantity // 3)) * price", "from math import ceil; mango=lambda q, p: ceil(q/3*2)*p", "mango = lambda q, p: (q // 3 * 2 + q % 3) * p;", "def mango(quantity, price):\n    free = 0\n    for i in range(1, quantity +1):\n        if i%3 == 0:\n            free += 1\n    return price * (quantity - free)", "def mango(quantity, price):\n    q,r = divmod(quantity,3)\n    return price*(2*q+r)", "mango=lambda q,p:(q-q/3)*p", "mango=lambda q,p:q//3*2*p+q%3*p", "def mango(quantity, price):\n    quantity = quantity - quantity // 3\n    return quantity * price", "def mango(quantity, price):\n    groups_of_three = quantity // 3\n    remainding = quantity % 3\n    \n    return groups_of_three * 2 * price + remainding * price", "def mango(quantity, price):\n    return (quantity * price) - (price * (quantity // 3)) ", "def mango(quantity, price):\n    if quantity % 3 == 0:\n        return (quantity * 2 * price // 3)\n    else:\n        return (quantity // 3 * 2 * price + quantity % 3 * price)", "def mango(quantity, price):\n    a = quantity - quantity//3\n    return a*price", "def mango(quantity, price):\n    if quantity == 2 or quantity ==3:\n        return 2 * quantity\n    else:\n        free = quantity // 3\n        return (quantity - free) * price\n", "import numpy as np\ndef mango(quantity, price):\n    return (quantity-(np.floor(quantity/3)))*price", "def mango(quant, price):\n    return (quant - (quant // 3)) * price", "def mango(q, p):\n    return sum(map(lambda x,y: x*y, [q//3, q%3],[2*p, p]))", "def mango(quantity, price):\n    remaining = quantity%3\n    quantity = (quantity - remaining) *2/3\n    return quantity*price + remaining*price", "def mango(quantity, price):\n    non_discounted_mangos = quantity % 3\n    discounted_mangos = quantity - non_discounted_mangos\n    return (((discounted_mangos / 3) * 2) * price) + (non_discounted_mangos * price)", "def mango(quantity, price):\n    s, e = divmod(quantity, 3)  # set of three + extra\n    return price*((2*s)+e)  # 3 for 2 + extra\n", "def mango(quantity, price):\n        special_price_lots = quantity // 3\n        full_price_mangoes = quantity - special_price_lots * 3\n        return (special_price_lots * 2 + full_price_mangoes) * price", "def mango(quantity, price):\n    if quantity / 3 == 1:\n        return (quantity - 1) * price \n    else:\n        actual_quantity = quantity // 3\n        return (quantity - actual_quantity) * price", "def mango(q, price):\n\n    return price*(q-q//3)", "def mango(quantity, price):\n    return 2 * price if quantity == 3 else (quantity - (quantity // 3)) * price\n", "import math\ndef mango(quantity, price):\n    n=math.ceil(quantity*(2/3))\n    return price*n", "def mango(quantity, price):\n    a = int(quantity / 3)\n    quantity -= a\n    return price * quantity", "def mango(quantity, price):\n    if quantity % 3 == 0:\n        return quantity * 2 / 3 * price\n    else:\n        return (quantity - quantity // 3) * price", "def mango(quantity, price):\n\n    free = quantity//3\n    res = (quantity - free) * price\n    return res", "from math import ceil\ndef mango(quantity, price):\n    x = quantity // 3\n    return (quantity-x) * price", "def mango(q,p):\n    \"\"\"mangos are three for two\n    \"\"\"\n    return (2 * (q // 3) + (q % 3))*p\n", "import math\ndef mango(quantity, price):\n    actual=math.floor(quantity/3)\n    return (quantity-actual)*price", "def mango(quantity, price):\n    total_cost = price * (quantity - quantity // 3)\n    return total_cost", "def mango(quantity, price):\n    return (quantity - quantity//3)*price if quantity > 3 else 6", "def mango(quantity, price):\n    return price * (quantity // 3) * 2 + price * (quantity % 3)", "def mango(quantity, price):\n    grupos = quantity//3\n    residuo = quantity%3\n    precio = (grupos*2 * price)\n\n    if residuo == 0:\n        return precio\n    elif residuo == 1:\n        return precio+price\n    elif residuo == 2:\n        return precio+(price*2)", "def mango(quantity, price):\n    discount = quantity // 3\n    return ((quantity - discount) * price)", "def mango(quantity, price):\n    return price * round((quantity * 2)/3 + 0.5)\n", "import math\n\ndef mango(quantity, price):\n    free_mangos = math.floor(quantity / 3)\n    return (quantity - free_mangos) * price\n", "def mango(quantity, price):\n    free = quantity - (quantity // 3)\n    return free * price", "def mango(quantity, price):\n    pass\n    \n    c = (quantity-quantity//3)*price\n    \n    return c", "import math\ndef mango(quantity, price):\n    return ((quantity // 3) + (quantity - ((quantity // 3) * 2))) * price\n", "def mango(quantity, price):\n    \n    q = quantity\n    p = price\n    \n    return (q - (q // 3)) * p", "mango = lambda quantity, price: (quantity - quantity//3) * price", "def mango(quantity, price):\n    print(quantity, price)\n    if not quantity%3==2:\n      return price*(quantity*2//3)+price*(quantity%3) \n    else:\n      return price*(quantity*2//3)+price*(quantity%3)/2", "def mango(quantity, price):\n    if quantity % 3 == 0:\n        return quantity*2/3 * price\n    elif quantity % 3 == 1:\n        return (quantity-1) * 2/3 * price + price\n    elif quantity % 3 == 2:\n        return (quantity-2) * 2/3 * price + 2 * price", "import math\ndef mango(quantity, price):\n    return (quantity - (quantity // 3)) * price", "def mango(quantity, price):\n    buy = 0\n    bill = 0\n    while buy<quantity:\n        buy+=3\n        bill+=price*2\n    \n    if buy==quantity:\n        return bill\n    elif buy-quantity==1:\n        return bill\n    elif buy-quantity==2:\n        return bill-price", "def mango(quantity, price):\n    n = 0\n    all_price = 0\n    if quantity <= 2:\n        return quantity * price\n    elif quantity > 2:\n        while n < quantity:\n            n += 1\n            all_price += price\n            if n % 3 == 0:\n                all_price -= price\n    return all_price\n                \n        \n            \n            \n    pass", "def mango(quantity, price):\n    deal = int(quantity/3)    \n    no_deal = quantity - deal*3\n    return deal*2*price + no_deal*price", "def mango(quantity, price):\n   real_quant = quantity - (quantity //3)\n   return real_quant * price", "def mango(quantity, price):\n    if quantity % 3 == 0:\n        a = (quantity / 3) * 2\n        return a * price\n    elif quantity % 3 != 0:\n        b = quantity % 3\n        c = ((quantity - b) / 3) * 2\n        d = (c + b) \n        return d * price\n", "def mango(quantity, price):\n    total = 0\n    for each in range(1,quantity +1):\n        if each % 3 != 0:\n            total += price\n    return total\n", "def mango(quantity, price):\n    pass\n    x=quantity//3\n    y=quantity%3\n    return (2*x+y)*price", "# def mango(quantity, price):\n# #     if quantity % 3 == 0:\n# #         return (quantity//3)*2*price\n# #     # if quantity % 3 == 1:\n# #     else:\n# #         return ((quantity//3)*2 + 1)*price\ndef mango(quantity, price):\n    return (quantity - quantity // 3) * price", "import math\ndef mango(quantity, price):\n    return quantity * price - math.floor(quantity/3) * price", "from math import floor\ndef mango(q,p): return (q-floor(q/3))*p", "def mango(q,p):\n    price = 0\n    while q % 3 != 0:\n        price += p\n        q -= 1\n    return price+q*(2/3)*p", "def mango(quantity, price):\n    return (int(quantity * 2 / 3) + (1 if quantity % 3 else 0)) * price", "import math\ndef mango(quantity, price):\n    print(quantity, price)\n    \n    return math.ceil(quantity / 3 * 2) * price", "def mango(q, p):\n    return (q -(q // 3)) * p\n    # Flez    \n", "def mango(q, p):\n    print((q, p))\n    return (q * p) - ((q // 3) * p)\n    # Flez\n", "def mango(quantity, price):\n    groups_three = quantity // 3\n    extra = quantity % 3\n    cost = 0\n    cost = cost + groups_three * (price * 2)\n    cost = cost + extra * price\n    return cost", "def mango(quantity, price):\n    groupsOfThree = quantity // 3\n    remainder = quantity - groupsOfThree * 3\n    return groupsOfThree * price * 2 + remainder * price", "from math import ceil\ndef mango(quantity, price):\n    return ceil(quantity / 3 * 2) * price", "def mango(q, p):\n    Q = q/3*2\n    Q = int(Q) if Q%1==0 else int(Q)+1\n    return Q*p", "def mango(quantity, price):\n    total = 0\n    for i in range(1, quantity + 1):\n        if i % 3 != 0:\n            total += price\n        else:\n            pass\n    return total", "def mango(quantity, price):\n    return int((quantity - int(quantity / 3)) * price)", "def mango(quantity, price):\n    q = quantity // 3 * 2\n    q += quantity - (q * 1.5)\n    return q * price", "def mango(quantity, price):\n      return round((quantity//3)*2 * price + quantity%3 * price) \n", "def mango(quantity, price):\n    return (quantity % 3 * price) + (int(quantity - (quantity % 3))) / 3 * 2 * price", "def mango(q, pr):\n    return ((q // 3) * 2 * pr) + ((q-q//3*3) * pr)", "from operator import mod\n\n\ndef mango(quantity, price):\n    x = int((quantity / 3)) * 2\n    r = mod(quantity, 3)\n    return x * price + (r * price)", "def mango(q, price):\n    return (2 * (q // 3) + q % 3) * price", "def mango(quantity, price):\n    total = 0\n\n    for count in range(1, quantity + 1):\n        if count % 3 == 0:\n            continue\n        total += price\n\n    return total", "def mango(quantity, price):\n    priceOfTwo = quantity  // 3 \n    remaining = quantity-priceOfTwo*3\n    return (priceOfTwo * price * 2) + (remaining * price)", "def mango(quantity, price):\n    p2 = price * 2\n    calc  = divmod(quantity,3)\n  \n    calc2 = calc[0] * p2\n    return calc2 + (calc[1] * price)\n\n", "def mango(quantity, price):\n    ost = quantity % 3\n    return ((quantity-ost) * 2 / 3 + ost) * price", "def mango(quantity, price):\n    return (int(quantity/3)*price*2) + (quantity - (int(quantity/3)*3))*price", "def mango(q, p):\n    return q//3*2*p if q % 3 == 0 else q//3*2*p + (q%3)*p\n", "def mango(q, p):\n    return (q-q//3)*p\n#Solved on 30th Sept, 2019 at 01:08 AM.\n", "import math\ndef mango(quantity, price):\n    a = math.floor(quantity/3)\n    return math.floor((quantity-a)*price)", "def mango(a,b):\n    return(((a//3)*2)*b+(a%3)*b)", "def mango(quantity, price):\n    return (2/3*(quantity - quantity%3)+quantity%3)*price", "from math import floor\n\ndef mango(quantity, price):\n    return (quantity-floor(quantity/3))*price", "def mango(quantity, price):\n    paid_mangos = ((quantity - quantity % 3) // 3 * 2) + quantity % 3\n    return paid_mangos * price\n", "def mango(total_quantity, price_per_mango):\n\n    quantity_of_set_3 = int(total_quantity/3)\n    remaining_mangoes = total_quantity%3\n    \n    price_per_two_mangoes = price_per_mango*2\n    cost_of_set3 = quantity_of_set_3*price_per_two_mangoes\n    \n    cost_remaining_mangoes = remaining_mangoes*price_per_mango\n    total_cost = cost_of_set3 + cost_remaining_mangoes\n    \n    return total_cost\n\n    \n", "def mango(quantity, price):\n    return (quantity-quantity//3)*price  #I solved this Kata on  8/30/2019  01:07 AM...#Hussam'sCodingDiary\n", "def mango(quantity, price):\n    x = quantity // 3\n    return (quantity - x) * price", "def mango(quantity, price):\n    sum = 0\n    \n    while quantity > 2:\n        quantity = quantity - 3\n        sum = sum + price * 2\n    \n    return sum + price * quantity", "def mango(quantity, price):\n    result = divmod(quantity,3)\n    return result[0]*2*price + result[1] * price", "def mango(quantity, price):\n    a = quantity%3\n    b = quantity - a\n    c = 2*b/3\n    d = c*price + a*price\n    return d", "def mango(quantity, price):\n    print(\"==>> \",quantity, price)\n    num_3 = int(quantity / 3)\n    print(\"Num_3: \",num_3)\n    output = (quantity-num_3)*price\n    return output"]