["#Remember you have a CHANGE dictionary to work with ;)\n\ndef change_count(change):\n    money = {'penny' : 0.01, 'nickel' : 0.05, 'dime' : 0.10, 'quarter' : 0.25, 'dollar' : 1.00}\n    count = 0\n    for coin in change.split():\n        count += money[coin]\n    result = \"%.2f\" % count\n    return '$' + result\n        \n", "def change_count(change):\n    total = 0\n    for i in change.split(' '):\n        if i == 'penny':\n            total += 0.01\n        elif i == 'nickel':\n            total += 0.05\n        elif i == 'dime':\n            total += 0.10\n        elif i == 'quarter':\n            total += 0.25\n        elif i == 'dollar':\n            total += 1.00\n    return \"${:.2f}\".format(total)\n\nprint(change_count('dime penny dollar'))\nprint(change_count('dime penny nickel'))\nprint(change_count('quarter quarter'))\nprint(change_count('dollar penny dollar'))", "CHANGE = {'penny': 1, 'nickel': 5, 'dime': 10, 'quarter': 25, 'dollar': 100}\n\n\ndef change_count(change):\n    return '${}.{:0>2}'.format(*divmod(\n        sum(CHANGE[a] for a in change.split()), 100\n    ))", "def change_count(change):\n    a=change.split(\" \")\n    L=[]\n    for i in range(len(a)):\n        if a[i]==\"penny\":\n            L.append(0.01)\n        elif a[i]==\"nickel\":\n            L.append(0.05)\n        elif a[i]==\"dime\":\n            L.append(0.10)\n        elif a[i]==\"quarter\":\n            L.append(0.25)\n        elif a[i]==\"dollar\":\n            L.append(1.000)\n    b=sum(L)\n    x=round((b+0.0000001),2)\n    a='$'+(\"%.2f\"%x)\n    y=a.split()\n    if len(y)==4:\n        y.append('0')\n        return sum(y)\n    else:\n        return a", "def change_count(ch):\n    total = float(0.00)\n    ch = ch.split()\n    for x in ch:\n\n        if \"dollar\" in x:\n            total += 1.00\n        if \"quarter\" in x:\n            total += 0.25\n        if \"dime\" in x:\n            total += 0.10\n        if \"nickel\" in x:\n            total += 0.05\n        if \"penny\" in x:\n            total += 0.01\n\n    return \"${:.2f}\".format(total)\n"]