["from itertools import zip_longest\n\ndef combine_strings(*args):\n    return ''.join(''.join(x) for x in zip_longest(*args, fillvalue=''))", "from itertools import zip_longest, chain\ndef combine_strings(*args):\n    return ''.join(chain(*zip_longest(*args, fillvalue = '')))", "from itertools import zip_longest\ncombine_strings = lambda *strings: ''.join(map(''.join, zip_longest(*strings, fillvalue='')))", "from itertools import zip_longest as zl\n\n\ndef combine_strings(*stgs):\n    return \"\".join(\"\".join(z) for z in zl(*stgs, fillvalue=\"\"))", "from itertools import chain, zip_longest\n\ndef combine_strings(*args):\n    return ''.join(chain.from_iterable(zip_longest(*args, fillvalue='')))", "import itertools\ndef combine_strings(*args):\n    return \"\".join((\"\".join(i) for i in itertools.zip_longest(*args,fillvalue=\"\")))", "from itertools import zip_longest\n\ndef combine_strings(*args):\n    return ''.join(map(''.join, zip_longest(*args, fillvalue='')))", "import itertools as it\ndef combine_strings(*argv):\n    return \"\".join(it.chain(*it.zip_longest(*argv, fillvalue=\"\")))", "def combine_strings(*args):\n    sol='';words=[]\n    if len(args)==0:return sol\n    for a in args:words.append(list(a))\n    while 1:\n        for i,w in enumerate(words):\n            if len(w)!=0:\n                sol=sol+w[0]\n                words[i].remove(w[0])\n        if all(not element for element in words):break\n    return sol"]