["def validate(n):\n    digits = [int(x) for x in str(n)]\n    even = [x*2 if x*2 <= 9 else x*2 - 9 for x in digits[-2::-2]]\n    odd  = [x for x in digits[-1::-2]]\n    return (sum(even + odd)%10) == 0\n", "import numpy as np\ndef validate(cc_number):\n    # split integer into array of digits\n    arr = np.array([int(i) for i in str(cc_number)])\n    # double every second digit from the right\n    arr[-2::-2] *= 2\n    # substract 9 from digits greater than 9\n    arr[arr>9] -= 9\n    # sum up all the digits and check the modulus 10\n    return np.sum(arr) % 10 == 0", "def validate(n):\n    i = 0\n    sum = 0\n    while n:\n        digit = n % 10\n        n //= 10\n        if i % 2 == 1:\n            digit *= 2\n        if digit > 9:\n            digit -= 9\n        sum += digit\n        i += 1\n    return sum % 10 == 0", "def validate(n):\n    step1 = [int(x)*2 if idx % 2 else int(x) for idx, x in enumerate(str(n)[::-1])]\n    step2 = [x - 9 if x > 9 else x for x in step1[::-1]]\n    step3 = sum(step2)\n    return not step3 % 10", "def validate(n):\n    return not sum(sum(map(int, str(int(d) + (i % 2) * int(d)))) for i, d in enumerate(str(n)[::-1])) % 10", "def validate(n):\n    x = [int(c) if not i%2 else int(c)*2 for i, c in enumerate(str(n)[::-1])]\n    return sum([c if c<9 else c-9 for c in x]) % 10 == 0", "def validate(n):\n    # Double Every second number...any improve?\n    list = []\n    for index, number in enumerate(reversed(str(n))):\n        list.append(int(number) * 2 if index % 2 != 0 else int(number))\n        \n    return sum([digit - 9 if digit > 9 else digit for digit in list]) % 10 == 0"]