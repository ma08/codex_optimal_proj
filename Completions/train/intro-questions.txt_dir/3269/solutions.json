["def work_needed(project_minutes, freelancers):\n    available_minutes = sum(hours * 60 + minutes for hours, minutes in freelancers)\n    workload_minutes = project_minutes - available_minutes\n    if workload_minutes <= 0:\n        return 'Easy Money!'\n    else:\n        hours, minutes = divmod(workload_minutes, 60)\n        return 'I need to work {} hour(s) and {} minute(s)'.format(hours, minutes)", "def work_needed(projectMinutes, freeLancers):\n    time = projectMinutes - sum(fl[0]*60+fl[1] for fl in freeLancers)\n    if time <= 0: return \"Easy Money!\"\n    else: return \"I need to work {} hour(s) and {} minute(s)\".format(time//60, time%60)", "def work_needed(projMin, others):\n    h, m   = map(sum, zip(*others))\n    needed = projMin - sum(t*c for t,c in zip((h,m),(60,1)) )\n    return \"Easy Money!\" if needed <= 0 else f\"I need to work {needed//60} hour(s) and {needed%60} minute(s)\"", "def work_needed(projectMinutes, freeLancers):\n    x = projectMinutes \n    for flance in freeLancers:\n        x -= (flance[0]*60 + flance[1])\n    if(x > 0):\n        return(\"I need to work \" + str(int (x / 60)) + \" hour(s) and \" + str(x%60) + \" minute(s)\")\n    return(\"Easy Money!\")", "def work_needed(project, freelancers):\n    to_work = project - sum(h*60 + m for h, m in freelancers)\n    return \"I need to work {} hour(s) and {} minute(s)\".format(*divmod(to_work, 60)) if to_work > 0 else \"Easy Money!\"", "def work_needed(projectMinutes, freeLancers):\n    s = projectMinutes - sum(h * 60 + m for h, m in freeLancers)\n    return 'Easy Money!' if s <= 0 else 'I need to work {} hour(s) and {} minute(s)'.format(*divmod(s, 60))", "def work_needed(pm, fls):\n    pm -= sum(60 * h + m for h, m in fls)\n    return f'I need to work {pm // 60} hour(s) and {pm % 60} minute(s)' if pm > 0 else \"Easy Money!\"", "def work_needed(mins, free):\n    w = mins - sum(60 * h + m for h, m in free)        \n    return f'I need to work {w//60} hour(s) and {w%60} minute(s)' if w > 0 else 'Easy Money!'        ", "def work_needed(projectMinutes, freeLancers):\n    req = projectMinutes - sum( 60*f[0] + f[1] for f in freeLancers )\n    if req <= 0: return 'Easy Money!'\n    return f\"I need to work {req//60} hour(s) and {req%60} minute(s)\"", "def work_needed(projectMinutes, freeLancers):\n    diff = projectMinutes - sum(h*60 + m for h, m in freeLancers)\n    return \"Easy Money!\" if diff <= 0 else \"I need to work {} hour(s) and {} minute(s)\".format(diff//60, diff%60)"]