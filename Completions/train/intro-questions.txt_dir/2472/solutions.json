["class Solution:\n     def checkRecord(self, s):\n         count = 0\n         for i in range(0,len(s)):\n             if s[i] == \"A\":\n                 count += 1\n                 if count == 2:\n                     return False\n             elif i >= 2 and s[i] == \"L\" and s[max(i-1,0)] == \"L\" and s[max(i-2,0)] == \"L\":\n                 return False\n         return True\n", "class Solution:\n     def checkRecord(self, s):\n         twoL = 0\n         twoA = 0\n         i = 0\n         while i < len(s):\n             if s[i] == 'A':\n                 twoA += 1\n                 if twoA > 1:\n                     return False\n                 twoL = 0\n             elif s[i] == 'L':\n                 twoL += 1\n                 if twoL > 2:\n                     return False\n             else:\n                 twoL = 0\n             i += 1\n         return True", "class Solution:\n     def checkRecord(self, s):\n         if not s:\n             return\n         c=0\n         if s==\"AA\":\n             return False\n         for i in range(len(s)-2):\n             if s[i]==\"L\":\n                 if s[i]==s[i+1] and s[i]==s[i+2]:\n                     return False\n             if s[i]==\"A\":\n                 c+=1\n                 if c==2:\n                     return False\n \n         return True", "class Solution:\n     def checkRecord(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: bool\n         \"\"\"\n         return s.count('A')<=1 and s.count('LLL')==0\n \n \n         \n \n", "class Solution:\n     def checkRecord(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: bool\n         \"\"\"\n         aCount=0\n         clCount=0\n         for r in s:\n             if r=='A':\n                 aCount+=1\n                 if aCount >1:\n                     return False\n             if r=='L':\n                 clCount+=1\n                 if clCount>2:\n                     return False\n             else:\n                 clCount=0\n         return True", "class Solution:\n     def checkRecord(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: bool\n         \"\"\"\n         return(s.count(\"A\") < 2 and \"LLL\" not in s)", "class Solution:\n     def checkRecord(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: bool\n         \"\"\"\n         from collections import Counter\n         val=Counter(s)\n         idx=[]\n         for i in range(len(s)):\n             if s[i]==\"L\":\n                 idx.append(i)\n         for j in range(len(idx)-2):\n             if idx[j+2]-idx[j]==2:\n                 return False\n             \n         if val[\"A\"]>1:\n             return False\n         return True", "class Solution:\n     def checkRecord(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: bool\n         \"\"\"\n     \n         return s.count('A') <= 1 and s.count('LLL') == 0\n", "class Solution:\n     def checkRecord(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: bool\n         \"\"\"\n         charA = charL = 0\n         for c in s:\n             if c == 'A':\n                 charA += 1 \n                 if charA > 1: return False\n                 charL = 0\n             elif c == 'L':\n                 charL += 1\n                 if charL > 2: return False\n             else: \n                 charL = 0\n             \n         \n         return True\n         \n             \n", "class Solution:\n     def checkRecord(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: bool\n         \"\"\"\n         return s.count(\"A\") < 2 and \"LLL\" not in s", "class Solution:\n     def checkRecord(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: bool\n         \"\"\"\n         return s.count('A')<2 and s.count('LLL')==0", "class Solution:\n     def checkRecord(self, s):\n         \"\"\"\n         :type s: str\n         :rtype: bool\n         \"\"\"\n         mydir = {}\n         for record in s:\n             mydir[record] = mydir.get(record,0)+1\n         return mydir.get('A',0) <= 1 and s.count('LLL') == 0\n"]