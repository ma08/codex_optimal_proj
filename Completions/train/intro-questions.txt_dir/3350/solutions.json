["def hex_string_to_RGB(s): \n    return {i:int(s[j:j+2],16) for i,j in zip('rgb',[1,3,5])}", "def hex_string_to_RGB(hex): \n    return {'r': int(hex[1:3],16),'g': int(hex[3:5],16), 'b': int(hex[5:7],16)}", "def hex_string_to_RGB(s): \n    return {c: int(s[1+2*i:3+2*i], 16) for i,c in enumerate('rgb')}", "def hex_string_to_RGB(hex_string): \n    return {\n        'r': int(f'0x{hex_string[1:3]}', 16),\n        'g': int(f'0x{hex_string[3:5]}', 16),\n        'b': int(f'0x{hex_string[5:]}', 16)\n    }\n", "def hex_string_to_RGB(h): \n    def hex(_h): return int(_h, 16)\n    return {'r': hex(h[1:3]), 'g':hex(h[3:5]), 'b':hex(h[5:7])}", "def hex_string_to_RGB(hex_string): \n    # your code here\n    r = int(hex_string[1:3], 16)\n    g = int(hex_string[3:5], 16)\n    b = int(hex_string[5:7], 16)\n    \n    return {'r': r, 'g': g, 'b': b}", "def hex_string_to_RGB(hex_string):\n    r, g, b = [ int(hex_string[i:i+2], 16) for i in (1, 3, 5) ]\n    return {'r': r, 'g': g, 'b': b}", "def hex_string_to_RGB(hex_string):\n    color = int(hex_string[1:], 16)\n    return {'r': color >> 16 & 255, 'g': color >> 8 & 255, 'b': color & 255}", "def hex_string_to_RGB(hex_string):\n    n = int(hex_string[1:],16)\n    return {'r' : n>>16, 'g': (n>>8)&0xff, 'b':n&0xff}", "def hex_string_to_RGB(hex_string): \n    integer = eval(f'0x{hex_string.lstrip(\"#\").lower()}')\n    return {'r': (integer >> 16) & 255, 'g': (integer >> 8) & 255, 'b': integer & 255}"]