["def get_zodiac_sign(day, month):\n\n    signs = [\"Aquarius\", \"Pisces\", \"Aries\", \"Taurus\", \"Gemini\", \"Cancer\",\n             \"Leo\", \"Virgo\", \"Libra\", \"Scorpio\", \"Sagittarius\", \"Capricorn\"]\n\n    limits = [20, 19, 21, 20, 21, 21, 23, 23, 23, 23, 22, 22]\n\n    return signs[month - 1] if limits[month - 1] <= day else signs[(month + 10) % 12]", "def get_zodiac_sign(day,month):\n#Aries\n    if month == 3:\n        if day >= 21 and day <= 31:\n            return \"Aries\"\n    else:\n        if month == 4:\n            if day >= 1 and day <= 19:\n                return \"Aries\"\n#Taurus\n    if month == 4:\n        if day >= 20 and day <= 30:\n            return \"Taurus\"\n    else:\n        pass\n    if month == 5:\n        if day >= 1 and day <= 20:\n            return \"Taurus\"\n    else:\n        pass\n#Gemeni\n    if month == 5:\n        if day >= 21 and day <= 31:\n            return \"Gemini\"\n    else:\n        pass\n    if month == 6:\n        if day >= 1 and day <= 20:\n            return \"Gemini\"\n    else:\n        pass\n#Cancer\n    if month == 6:\n        if day >= 21 and day <= 30:\n            return \"Cancer\"\n    else:\n        pass\n    if month == 7:\n        if day >= 1 and day <= 22:\n            return \"Cancer\"\n#Leo\n    if month == 7:\n        if day >= 23 and day <= 31:\n            return \"Leo\"\n    if month == 8:\n        if day >= 1 and day <= 22:\n            return \"Leo\"\n#Virgo\n    if month == 8:\n        if day >= 23 and day <= 31:\n            return \"Virgo\"\n    if month == 9:\n        if day >= 1 and day <= 22:\n            return \"Virgo\"\n#Libra\n    if month == 9:\n        if day >= 23 and day <= 30:\n            return \"Libra\"\n    if month == 10:\n        if day >= 1 and day <= 22:\n            return \"Libra\"\n#Scorpio\n    if month == 10:\n        if day >= 23 and day <= 31:\n            return \"Scorpio\"\n    if month == 11:\n        if day >= 1 and day <= 21:\n            return \"Scorpio\"\n#Sagittarius\n    if month == 11:\n        if day >= 22 and day <= 30:\n            return \"Sagittarius\"\n    if month == 12:\n        if day >= 1 and day <= 21:\n            return \"Sagittarius\"\n#Capricorn\n    if month == 12:\n        if day >= 22 and day <= 31:\n            return \"Capricorn\"\n    if month == 1:\n        if day >= 1 and day <= 19:\n            return \"Capricorn\"\n#Aquarius\n    if month == 1:\n        if day >= 20 and day <= 31:\n            return \"Aquarius\"\n    if month == 2:\n        if day >= 1 and day <= 18:\n           return \"Aquarius\"\n#Pisces\n    if month == 2:\n        if day >= 19 and day <= 28:\n            return \"Pisces\"\n    if month == 3:\n        if day >= 1 and day <= 20:\n            return \"Pisces\"", "from bisect import bisect_left as bisect\nfrom datetime import date\n\nCONFIG = [\n    (\"Capricorn\",   19),\n    (\"Aquarius\",    18),\n    (\"Pisces\",      20),\n    (\"Aries\",       19),\n    (\"Taurus\",      20),\n    (\"Gemini\",      20),\n    (\"Cancer\",      22),\n    (\"Leo\",         22),\n    (\"Virgo\",       22),\n    (\"Libra\",       22),\n    (\"Scorpio\",     21),\n    (\"Sagittarius\", 21),\n    (\"Capricorn\",   31)]\n\nDATES, _SIGNS = map(tuple, zip(*((date(1992, min(i,12), d), s) for i,(s,d) in enumerate(CONFIG,1))))\n\ndef get_zodiac_sign(d, m):\n    return _SIGNS[bisect(DATES, date(1992,m,d))]", "from datetime import datetime\n\ndata = \"\"\"\nAries March 21 April 19\nTaurus April 20 May 20\nGemini May 21 June 20\nCancer June 21 July 22\nLeo July 23 August 22\nVirgo August 23 September 22\nLibra September 23 October 22\nScorpio October 23 November 21\nSagittarius November 22 December 21\nCapricorn December 22 January 19\nAquarius January 20 February 18\nPisces February 19 March 20\n\"\"\"\ndata = [line.split() for line in data.split('\\n') if line.strip()]\nmonth = lambda s: datetime.strptime(s, '%B').month\ndata = [(z, month(m1), int(d1), month(m2), int(d2)) for z, m1, d1, m2, d2 in data]\n\ndef get_zodiac_sign(day, month):\n    for z, m1, d1, m2, d2 in data:\n        if (m1 == month and d1 <= day) or (m2 == month and day <= d2):\n            return z", "def get_zodiac_sign(day, month):\n    SIGNS = ['Capricorn', 'Aquarius', 'Pisces', 'Aries', 'Taurus', 'Gemini', 'Cancer', 'Leo', 'Virgo', 'Libra', 'Scorpio', 'Sagittarius']\n    t = int(month)*100+int(day)\n    com = [119,218,320,419,520,621,722,822,922,1023,1122,1222]\n    for i in range(0, len(com)-1):\n        if (t > com[i]) & (t <= com[i+1]):\n            return SIGNS[i+1]\n    return SIGNS[0]    ", "def get_zodiac_sign(day, month):\n    if (((month == 12) & (day > 21)) | ((month == 1) & (day < 20))):\n        return \"Capricorn\"\n    elif (((month == 1) & (day > 19)) | ((month == 2) & (day < 19))):\n        return \"Aquarius\"\n    elif (((month == 2) & (day > 18)) | ((month == 3) & (day < 21))):\n        return \"Pisces\"\n    elif (((month == 3) & (day > 20)) | ((month == 4) & (day < 20))):\n        return \"Aries\"\n    elif (((month == 4) & (day > 19)) | ((month == 5) & (day < 21))):\n        return \"Taurus\"\n    elif (((month == 5) & (day > 20)) | ((month == 6) & (day < 21))):\n        return \"Gemini\"\n    elif (((month == 6) & (day > 20)) | ((month == 7) & (day < 23))):\n        return \"Cancer\"\n    elif (((month == 7) & (day > 22)) | ((month == 8) & (day < 23))):\n        return \"Leo\"\n    elif (((month == 8) & (day > 22)) | ((month == 9) & (day < 23))):\n        return \"Virgo\"\n    elif (((month == 9) & (day > 22)) | ((month == 10) & (day < 23))):\n        return \"Libra\"\n    elif (((month == 10) & (day > 22)) | ((month == 11) & (day < 22))):\n        return \"Scorpio\"\n    elif (((month == 11) & (day > 21)) | ((month == 12) & (day < 22))):\n        return \"Sagittarius\"", "from datetime import datetime\ndef get_zodiac_sign(day,month):\n    date=datetime(1+(month==1 and day<20),month,day)\n    dates=[(20,18),(19,20),(21,19),(20,20),(21,20),(21,22),(23,22),(23,22),(23,22),(23,21),(22,21),(22,19)]\n    signs=\"Aquarius Pisces Aries Taurus Gemini Cancer Leo Virgo Libra Scorpio Sagittarius Capricorn\".split()\n    return next(s for i,(d,s) in enumerate(zip(dates,signs)) if datetime(1,i+1,d[0])<=date<=datetime(1+(i==11),(i+1)%12+1,d[1]))"]