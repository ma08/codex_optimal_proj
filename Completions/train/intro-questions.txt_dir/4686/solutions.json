["def double_every_other(l):\n    return [x * 2 if i % 2 else x for i, x in enumerate(l)]", "double_every_other = lambda l: [e * (1 + i % 2) for i, e in enumerate(l)]", "def double_every_other(lst):\n    return [x * (i % 2 + 1) for i, x in enumerate(lst)]", "def double_every_other(lst):\n    return [2*v if i&1 else v for i,v in enumerate(lst)]", "def double_every_other(lst):\n    for ind, item in enumerate(lst):\n        if ind % 2 != 0:\n            lst[ind] = item*2\n    return lst", "def double_every_other(lst):\n    return [m * 2 if i%2 == 1 else m for i, m in enumerate(lst)]", "def double_every_other(lst):\n    return [a * 2 if i % 2 else a for i, a in enumerate(lst)]\n", "def double_every_other(lst):\n    return [x * 2 if i % 2 != 0 else x for i, x in enumerate(lst)]", "def double_every_other(lst):\n    return [num*2 if index % 2 != 0 else num for index,num in enumerate(lst)]", "def double_every_other(lst):\n    return [x * 2 if i % 2 == 1 else x for i, x in enumerate(lst)]"]