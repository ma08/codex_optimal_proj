["from bisect import insort\nfrom math import ceil\nfor _ in range(int(input())):\n n,k=list(map(int,input().split( )))\n array=list(map(int,input().split( )))\n ans=0\n index=[]\n for i in range(1,n+1):\n  index.append(ceil(k/(ceil(k/i))))\n for i in range(n):\n  count=[0]*(2001)\n  temp=[]\n  for j in range(i,n):\n   count[array[j]]+=1\n   insort(temp,array[j])\n   #m=ceil(k/(j-i+1)) precalculate thes values in index array\n   #t=ceil(k/m)\n   x=temp[index[j-i]-1]\n   f=count[x]\n   if count[f]:\n    ans+=1\n print(ans)\n", "from bisect import insort\nfrom math import ceil\nfor _ in range(int(input())):\n n,k=map(int,input().split( ))\n array=list(map(int,input().split( )))\n ans=0\n for i in range(n):\n  count=[0]*(2001)\n  temp=[]\n  for j in range(i,n):\n   count[array[j]]+=1\n   insort(temp,array[j])\n   m=ceil(k/(j-i+1))\n   t=ceil(k/m)\n   x=temp[t-1]\n   f=count[x]\n   if count[f]:\n    ans+=1\n print(ans)", "from math import ceil\ndef Beauty(array,f,n):\n i=0\n j=i\n ans=0\n while i<n and j<n:\n  if array[j]==f:\n   ans+=(n-j)*(j-i)+(n-j)\n   i=j+1\n   j=i\n  else:\n   j+=1\n return ans\nfrom collections import defaultdict\nfor _ in range(int(input())):\n n,k=map(int,input().split( ))\n array=list(map(int,input().split( )))\n s=defaultdict(int)\n for v in array:\n  s[v]+=1\n res=0\n for i in range(n):\n  for j in range(i,n):\n   b=array[i:j+1]\n   b.sort()\n   m=ceil(k/(j-i+1))\n   t=ceil(k/m)\n   x=b[t-1]\n   f=b.count(x)\n   if f in b:\n    res+=1\n   #res+=Beauty(array,f,n)\n print(res)", "import bisect\nfor t in range(int(input())):\n n, k = map(int, input().split())\n arr = list(map(int, input().split()))\n arr.insert(0,0)\n c = 0\n pre = [0 for k in range(2001)]\n for i in range(1, 2001):\n  m = (int(k / i)) + 1\n  if(k % i == 0):\n   m = m - 1\n  x = (int(k / m)) + 1\n  if(k % m == 0):\n   x = x - 1\n  pre[i] = x\n for i in range(1, n + 1):\n  brr = [0 for k in range(2001)]\n  lis = []\n  for j in range(i, n + 1):\n   brr[arr[j]] = brr[arr[j]] + 1\n   bisect.insort(lis, arr[j])\n   size = j - i + 1\n   xt = pre[size]\n   y = lis[xt-1]\n   f = brr[y]\n   if brr[f] > 0:\n    c = c + 1\n print(c)", "import sys\ninput=sys.stdin.readline \nfrom collections import defaultdict\nfrom math import ceil \nfrom bisect import bisect_left as bl ,insort\nfor _ in range(int(input())):\n n,k=map(int,input().split())\n l=[int(i) for i in input().split()]\n ans=0\n for i in range(n):\n  curr=[]\n  cnt=[0]*(2002)\n  for j in range(i,n):\n   add=ceil(k/(j-i+1))\n   #ind=bl(curr,l[j])\n   insort(curr,l[j])\n   cnt[l[j]]+=1 \n   if k<=j-i+1:\n    x=curr[k-1]\n   else:\n    x=curr[ceil(k/add)-1]\n   z=cnt[x]\n   if cnt[z]:\n    ans+=1 \n print(ans)", "import sys\ninput=sys.stdin.readline \nfrom collections import defaultdict\nfrom math import ceil \nfrom bisect import bisect_left as bl \nfor _ in range(int(input())):\n n,k=map(int,input().split())\n l=[int(i) for i in input().split()]\n cnt=0\n for i in range(n):\n  curr=[]\n  d=defaultdict(int)\n  for j in range(i,n):\n   add=ceil(k/(j-i+1))\n   ind=bl(curr,l[j])\n   curr.insert(ind,l[j])\n   d[l[j]]+=1 \n   if k<=j-i+1:\n    x=curr[k-1]\n   else:\n    x=curr[ceil(k/add)-1]\n   z=d[x]\n   if d[z]:\n    cnt+=1 \n print(cnt)", "for _ in range(int(input())):\n n,k=map(int,input().split())\n from math import ceil \n l=[int(i) for i in input().split()]\n cnt=0 \n from collections import defaultdict\n from bisect import bisect_left as bl \n for i in range(n):\n  curr=[]\n  d=defaultdict(int)\n  for j in range(i,n):\n   add=ceil(k/(j-i+1))\n   ind=bl(curr,l[j])\n   curr.insert(ind,l[j])\n   d[l[j]]+=1 \n   if k<=j-i+1:\n    x=curr[k-1]\n   else:\n    x=curr[ceil(k/add)-1]\n   z=d[x]\n   if d[z]:\n    cnt+=1 \n print(cnt)", "for _ in range(int(input())):\n n,k=map(int,input().split())\n from math import ceil \n l=[int(i) for i in input().split()]\n cnt=0 \n for i in range(n):\n  for j in range(i,n):\n   add=ceil(k/(j-i+1))\n   curr=l[i:j+1]\n   curr.sort()\n   if k<=j-i+1:\n    x=curr[k-1]\n   else:\n    x=curr[ceil(k/add)-1]\n   z=curr.count(x)\n   if z in curr:\n    cnt+=1 \n print(cnt)", "import bisect\nimport sys\nfrom sys import stdin, stdout\ntest = int(sys.stdin.readline())\nwhile test > 0:\n test = test - 1\n nk = [int(x) for x in sys.stdin.readline().split()]\n n = nk[0]\n k = nk[1]\n arr = [int(x) for x in sys.stdin.readline().split()]\n arr.insert(0,0)\n c = 0\n pre = [0 for k in range(2001)]\n for i in range(1, 2001):\n  m = (int(k / i)) + 1\n  if(k % i == 0):\n   m = m - 1\n  x = (int(k / m)) + 1\n  if(k % m == 0):\n   x = x - 1\n  pre[i] = x\n for i in range(1, n + 1):\n  #print(arr[i], end = \" \")\n  brr = [0 for k in range(2001)]\n  lis = []\n  for j in range(i, n + 1):\n   brr[arr[j]] = brr[arr[j]] + 1\n   bisect.insort(lis, arr[j])\n   #print(lis)\n   size = j - i + 1\n   xt = pre[size]\n   y = lis[xt-1]\n   f = brr[y]\n   if brr[f] > 0:\n    #print(i,\" \",j,\" \",y)\n    c = c + 1\n print(c)", "from math import ceil\nfrom bisect import insort\nfor z in range(int(input())):\n n,k=list(map(int,input().split()))\n a=list(map(int,input().split()))\n c=0\n i=0\n pos=[]\n while i<n:\n  pos.append(ceil(k/(ceil(k/(i+1)))))\n  i+=1\n i=0\n while i<n-1:\n  h=[]\n  cl=[0]*2001\n  j=0\n  while i+j<n:\n   cl[a[i+j]]+=1\n   insort(h,a[i+j])\n   x=h[pos[j]-1]\n   f=cl[x]\n   if cl[f]:c+=1\n   j+=1\n  i+=1\n print(c)\n", "from math import ceil\nfrom bisect import insort\nfor z in range(int(input())):\n n,k=list(map(int,input().split()))\n a=list(map(int,input().split()))\n i=0\n c=0\n while i<n-1:\n  h=[]\n  cl=[0]*2001\n  j=0\n  while i+j<n:\n   cl[a[i+j]]+=1\n   insort(h,a[i+j])\n   m=ceil(k/(j+1))\n   p=ceil(k/m)\n   x=h[p-1]\n   f=cl[x]\n   if cl[f]:c+=1\n   j+=1\n  i+=1\n print(c)\n", "from bisect import bisect_left\n\ndef BinarySearch(a, x):\n i = bisect_left(a, x)\n if i != len(a) and a[i] == x:\n  return True\n else:\n  return False\n\nimport math\nfor _ in range(int(input())):\n #arnab sucks\n ans=0\n N,k=[int(x) for x in input().split()]\n a=[int(x) for x in input().split()]\n for i in range(N):\n  for j in range(i,N):\n   S=a[i:j+1]\n   S.sort()\n   god=math.ceil(k/len(S))\n\n   X=S[math.ceil(k/god)-1]\n   F=0\n   for z in S:\n    if z ==X:\n     F+=1\n   if BinarySearch(S,F):\n    ans+=1\n print(ans)\n", "import heapq\n\nt=int(input())\nfor y in range(t):\n (n, k )=(int(x) for x in input().split())\n places=[]\n for l in range(1,n+1):\n  m=(k-1)//l+1\n  shoot=m*l-k\n  place=shoot//m+1\n  places.append(place)\n A=[int(x) for x in input().split()]\n heaps=[[-x] for x in A]\n assert(len(A)==n)\n ans=A.count(1)\n for l in range(1,n):\n  elements=[0]*2001\n  for e in A[:l+1]:\n   try:\n    elements[e]+=1\n   except:\n    elements[e]=1\n  for s in range(0,n-l):\n   heapq.heappush(heaps[s],-A[s+l]) \n   if places[l]>2:\n    reserve=[]\n    for i in range(places[l]):\n     reserve.append(heapq.heappop( heaps[s]))\n    for r in reserve:\n     heapq.heappush(heaps[s],r)\n    x=-reserve[-1]\n   elif (places[l]==2):\n    x=max(-heaps[s][1],heaps[s][2])\n   else:\n    x=-heaps[s][0]\n   f=elements[x]\n   try:\n    if elements[f]>0:\n     ans+=1\n   except:\n    pass\n   if s<n-l-1:\n    try:\n     elements[A[s]]-=1\n     elements[A[s+l+1]]+=1\n    except: \n     elements[A[s+l+1]]=1\n print(ans)", "import bisect\nimport math\nt=int(input())\nwhile t>0:\n fp=0\n n,k=map(int,input().split())\n a=list(map(int,input().split()))\n \n for i in range(n):\n  left=[]\n  \n  arr=[0]*2005\n  for j in range(i,n):\n   bisect.insort(left, a[j])\n   arr[a[j]]+=1\n   uhoy=math.ceil(k/(j-i+1))\n   mc=int(((k-1)/uhoy))\n   kpop=arr[left[mc]]\n   if arr[kpop]>=1:\n    fp+=1\n print(fp)\n t-=1", "import bisect\nimport math\nt=int(input())\nwhile t>0:\n fp=0\n n,k=map(int,input().split())\n a=list(map(int,input().split()))\n \n for i in range(n):\n  left=[]\n  \n  arr=[0]*2050\n  for j in range(i,n):\n   right = a[j]\n   bisect.insort(left, right)\n   arr[a[j]]+=1\n   uhoy=math.ceil(k/(j-i+1))\n   mc=int(math.ceil(k/uhoy))\n   kpop=arr[left[mc-1]]\n   if arr[kpop]>=1:\n    fp+=1\n print(fp)\n t-=1", "import bisect\nimport math\nt=int(input())\nwhile t>0:\n fp=0\n n,k=map(int,input().split())\n a=[int(o) for o in input().split()]\n \n for i in range(n):\n  left=[]\n  \n  arr=[0]*2050\n  for j in range(i,n):\n   right = a[j]\n   #pos = bisect.bisect(left, right)\n   bisect.insort(left, right)\n   arr[a[j]]+=1\n   uhoy=math.ceil(k/(j-i+1))\n   mc=int(math.ceil(k/uhoy))\n   kpop=arr[left[mc-1]]\n   if arr[kpop]>=1:\n    fp+=1\n print(fp)\n t-=1", "import bisect as b\nt=int(input())\nwhile(t):\n t-=1\n n,k=map(int,(input().split()))\n a=list(map(int,input().split()))\n c=0\n for i in range(n):\n  x=[0]\n  d=dict()\n  for j in range(i,n):\n   b.insort(x,a[j])\n   y=k/(len(x)-1)\n   if(d.get(a[j],-1)==-1):\n    d[a[j]]=1\n   else:\n    d[a[j]]+=1\n   if(int(y)!=y):\n    y=int(y)+1\n   y=int(y)\n   z=k/y\n   if(int(z)!=z):\n    z=int(z)+1\n   z=int(z)\n   #print(d,x[z])\n   q=d[x[z]]\n   if(d.get(q,-1)!=-1):\n    c+=1\n print(c)", "import bisect as b\nt=int(input())\nwhile(t):\n t-=1\n n,k=map(int,(input().split()))\n a=list(map(int,input().split()))\n c=0\n for i in range(n):\n  x=[0]\n  d=dict()\n  for j in range(i,n):\n   b.insort(x,a[j])\n   y=k/(len(x)-1)\n   if(d.get(a[j],-1)==-1):\n    d[a[j]]=1\n   else:\n    d[a[j]]+=1\n   if(int(y)!=y):\n    y=int(y)+1\n   y=int(y)\n   z=k/y\n   if(int(z)!=z):\n    z=int(z)+1\n   z=int(z)\n   #print(d,x[z])\n   q=d[x[z]]\n   if(d.get(q,-1)!=-1):\n    c+=1\n print(c)", "import bisect as b\nt=int(input())\nwhile(t):\n t-=1\n n,k=map(int,(input().split()))\n a=list(map(int,input().split()))\n c=0\n for i in range(n):\n  x=[0]\n  for j in range(i,n):\n   b.insort(x,a[j])\n   y=k/(len(x)-1)\n   if(int(y)!=y):\n    y=int(y)+1\n   y=int(y)\n   z=k/y\n   if(int(z)!=z):\n    z=int(z)+1\n   z=int(z)\n   q=1\n   l=z-1\n   while(l>=0):\n    if(x[l]!=x[z]):\n     break\n    q+=1\n    l-=1\n   l=z+1\n   #print(x,l)\n   while(l<len(x)):\n    if(x[l]!=x[z]):\n     break\n    l+=1\n    q+=1\n   l=b.bisect(x,q)\n   if(x[l-1]==q):\n    c+=1\n print(c)", "import bisect as b\nt=int(input())\nwhile(t):\n t-=1\n n,k=map(int,(input().split()))\n a=list(map(int,input().split()))\n c=0\n for i in range(n):\n  x=[0]\n  for j in range(i,n):\n   b.insort(x,a[j])\n   y=k/(len(x)-1)\n   if(int(y)!=y):\n    y=int(y)+1\n   y=int(y)\n   z=k/y\n   if(int(z)!=z):\n    z=int(z)+1\n   z=int(z)\n   if(x.count(x[z]) in x):\n    c+=1\n print(c)", "import bisect as b\nt=int(input())\nwhile(t):\n t-=1\n n,k=map(int,(input().split()))\n a=list(map(int,input().split()))\n c=0\n for i in range(n):\n  x=[0]\n  for j in range(i,n):\n   b.insort(x,a[j])\n   y=k/(len(x)-1)\n   if(int(y)!=y):\n    y=int(y)+1\n   y=int(y)\n   z=k/y\n   if(int(z)!=z):\n    z=int(z)+1\n   z=int(z)\n   if(x.count(x[z]) in x):\n    c+=1\n print(c)", "from collections import Counter\nfrom math import ceil\ntest=int(input())\nfor _ in range(test):\n n,k=list(map(int,input().split()))\n a=list(map(int,input().split()))\n total=0\n for i in range(n):\n  for j in range(i+1,n+1):\n   subarray=a[i:j]\n   length=j-i\n   c=Counter(subarray)\n   m = (k//length) if (k%length==0) else (k//length+1)\n   kth=sorted(subarray)[ceil(k/m)-1]\n   F=c[kth]\n   if F in c:\n    total+=1\n print(total)\n   \n   \n", "import math\nimport heapq\ndef counting_sort(array1, max_val):\n m = max_val + 1\n count = [0] * m\n for a in array1:\n  count[a] += 1\n i = 0\n for a in range(m):\n  for c in range(count[a]):\n   array1[i] = a\n   i += 1\n return array1\nfor _ in range(int(input())):\n n,k=list(map(int,input().split()))\n l=list(map(int,input().split()))\n M=[]\n ans=0\n for i in range(n):\n  for j in range(i,n):\n   m=math.ceil(k/(j-i+1))\n   gt=(k-1)//m\n   M.append(gt)\n  break\n for i in range(n):\n  max=-1\n  s=set()\n  d={}\n  hallo_frnd={}\n  for j in range(i,n):\n   x=None\n   value=M[j-i]\n   if l[j] not in d:\n    d[l[j]]=1\n   else:\n    d[l[j]]+=1\n   if l[j]>max:\n    max=l[j]\n   if value not in s:\n    ####\n    s.add(value)\n    x=max\n    hallo_frnd[value]=max\n   else:\n    if l[j]<hallo_frnd[value]:\n     yt=l[i:j+1]\n     heapq.heapify(yt)\n     x=heapq.nsmallest(value+1,yt)[-1]\n     hallo_frnd[value]=x\n    else:\n     x=hallo_frnd[value]\n   if d[x] in d:\n    ans+=1\n print(ans)\n"]