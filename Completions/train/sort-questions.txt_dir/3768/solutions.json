["def name_file(fmt, nbr, start):\n    try:\n        return [fmt.replace('<index_no>', '{0}').format(i)\n            for i in range(start, start + nbr)]\n    except TypeError:\n        return []", "def name_file(fmt, n, start):\n  return [fmt.replace('<index_no>', str(i)) for i in range(start, start+n)] if n > 0 and isinstance(n, int) and isinstance(start, int) else []", "def name_file(fmt, nbr, start):\n    cnt = fmt.count(\"<index_no>\")\n    fmt = fmt.replace(\"<index_no>\", \"%s\")\n    if nbr < 0 or not isinstance(nbr, int) or not isinstance(start, int):\n        return []\n    return [fmt % ((i,)*cnt) for i in range(start, start + nbr)]", "def name_file(fmt, nbr, start):\n    return [fmt.replace(\"<index_no>\", str(i)) for i in range(start, start+nbr)] if (type(start) == type(nbr) == int) else []", "def name_file(fmt, nbr, start):\n    return [] if type(start) != int or type(nbr) != int else [fmt.replace(\"<index_no>\", str(n)) for n in range(start, start + nbr)]", "def name_file(fmt, nbr, start):\n    if int(nbr) != nbr or nbr <= 0 or int(start) != start: return []\n    fmt = [fmt for i in range(nbr)]\n    num = list(range(start, start + nbr))\n    for i, f in enumerate(fmt):\n        fmt[i] = f.replace(\"<index_no>\", str(num[i]))\n    return fmt", "def name_file(fmt, nbr, start):\n    return [fmt.replace(\"<index_no>\", str(i)) for i in range(start, start+nbr)] if (type(start) == type(nbr) == int and nbr > 0) else []", "name_file=lambda f,n,s:[f.replace('<index_no>', str(i)) for i in range(s,s+n)] if n>0 and (type(n),type(s))==(int,int) else []", "name_file=lambda f, n, s: [f.replace(\"<index_no>\",str(i+s)) for i in range(n)] if n%1==0 and s%1==0 else []"]