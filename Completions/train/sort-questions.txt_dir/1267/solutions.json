["def dfs(ind,m,n,k):\n if(ind == m):\n  return [\"\"]\n else:\n  temp = dfs(ind+1,m,n,k)\n  ans = []\n  if(len(temp)<k):\n   for i in temp:\n    for j in range(97,97+n):\n     ans += [chr(j)+i]\n  else:\n   for i in temp:\n    ans += [\"z\"+i]\n return ans\nn,m,k = list(map(int,input().split()))\np = []\nmr= []\nfor _ in range(m):\n inp = [int(x) for x in input().split()]\n mc = inp[0]\n mi = 0\n for j in range(1,n):\n  if(mc<inp[j]):\n   mc = inp[j]\n   mi = j\n p += [inp]\n mr += [mi]\nans = dfs(0,m,n,k)\nw = []\nfor i in ans:\n cst = 0\n s = \"\"\n for j in range(m):\n  if(i[j]!=\"z\"):\n   s+=i[j]\n   cst += p[j][ord(i[j])-97]\n  else:\n   s += chr(mr[j]+97)\n w += [(-cst,s)]\nw.sort()\nprint(w[k-1][1])\n", "def dfs(ind,m,n,k):\n if(ind == m):\n  return [\"\"]\n else:\n  temp = dfs(ind+1,m,n,k)\n  ans = []\n  if(len(temp)<k):\n   for i in temp:\n    for j in range(97,97+n):\n     ans += [chr(j)+i]\n  else:\n   for i in temp:\n    ans += [\"z\"+i]\n return ans\nn,m,k = list(map(int,input().split()))\np = []\nfor _ in range(m):\n inp = [int(x) for x in input().split()]\n p += [inp]\nmax_row = []\nfor i in p:\n max_row += [max(i)]\nans = dfs(0,m,n,k)\nw = []\nfor i in ans:\n cst = 0\n for j in range(m):\n  if(p[j]!=\"z\"):\n   cst += p[j][ord(i[j])-97]\n  else:\n   cst += max_row[j]\n w += [(-cst,i)]\nw.sort()\nprint(w[k-1][1])\n", "def dfs(ind,m,n):\n if(ind == m):\n  return [\"\"]\n else:\n  temp = dfs(ind+1,m,n)\n  ans = []\n  for i in temp:\n   for j in range(97,97+n):\n    ans += [chr(j)+i]\n return ans\nn,m,k = list(map(int,input().split()))\np = []\nfor _ in range(m):\n inp = [int(x) for x in input().split()]\n p += [inp]\nans = dfs(0,m,n)\nw = []\nfor i in ans:\n cst = 0\n for j in range(m):\n  cst += p[j][ord(i[j])-97]\n w += [(-cst,i)]\nw.sort()\nprint(w[k-1][1])\n", "n, m, k = list(map(int, input().split()))\ncost = []\nfor i in range(m):\n cost.append(list(map(int, input().split())))\n\nif (m<=5):\n c = 97\n s = []\n for i in range(n):\n  s.append(chr(c+i))\n l = []\n def gen(x, c, ln):\n  #print x, c, ln\n  if (ln >= m):\n   l.append((c, x))\n  else:\n   for i in range(n):\n    xt = x+s[i]\n    ct = c+cost[ln][ord(s[i])-97]\n    gen(xt, ct, ln+1)\n gen('',0, 0)\n l.sort(reverse = True)\n print(l[k-1][1])"]