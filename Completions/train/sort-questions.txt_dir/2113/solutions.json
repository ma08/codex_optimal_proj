["3\n\nimport sys\n\nclass CumTree:\n    \n    def __init__(self, a, b):\n        self.a = a\n        self.b = b\n        self.count = 0\n        if a == b:\n            return\n        mid = (a + b) // 2\n        self.levo = CumTree(a, mid)\n        self.desno = CumTree(mid+1, b)\n        \n    def manjsi(self, t):\n        if self.a >= t:\n            return 0\n        if self.b < t:\n            return self.count\n        return self.levo.manjsi(t) + self.desno.manjsi(t)\n    \n    def vstavi(self, t):\n        if self.a <= t <= self.b:\n            self.count += 1\n            if self.a == self.b:\n                return\n            self.levo.vstavi(t)\n            self.desno.vstavi(t)\n        \nn = int(sys.stdin.readline())\np = [int(x) for x in sys.stdin.readline().strip().split()]\n\nct = CumTree(1, 4096)\n\nvsota = 0\nwhile len(p) > 0:\n    x = p.pop()\n    vsota += ct.manjsi(x)\n    ct.vstavi(x)\n\nk, d = vsota // 2, vsota % 2\nprint(\"%f\" % (4*k + d))\n", "from sys import *\n\nn=int(stdin.readline().strip())\ns1=stdin.readline().strip()\na=list(map(int,s1.split()))\n\nif n==1:\n    print('0')\nelse:\n    x=0\n    n0=1\n    while n0<n:\n        n0=n0*2\n    b=[0]*(2*n0+10)\n    '''for i in range (n-1):\n        for j in range (i+1,n):\n            if a[i]>a[j]:\n                x+=1'''\n    for i in range (n):\n        t=a[i]\n        u=0\n        k=1\n        j=1\n        while t>0:\n            if (t>>j)<<j!=t:\n                u=u+b[(n0+t-1)>>(j-1)]\n                t=t-k\n            k=k<<1\n            j=j+1\n        x=x+u\n        j=n0+a[i]-1\n        while j>0:\n            b[j]+=1\n            j=j>>1    \n    \n    x=((n*(n-1))//2)-x    \n    '''n=x//2\n    print(x,n,' !!!')\n    r=x\n    i=1\n    bi=n\n    eps=0.0000001\n    if x>0:\n        while (x+2*i)*bi*((0.5)**i)>eps:\n            r=r+(x+2*i)*bi*((0.5)**i)\n            #print(r)\n            bi=(bi*(n+i))//(i+1)\n            i=i+1\n            #print(bi,i)\n    else:\n        r=0\n    r=r*((0.5)**n)\n    print(\"%.7f\"%r)'''\n    if x%2 ==1:\n        print(2*x-1)\n    else:\n        print(2*x)\n", "from bisect import bisect_right\ninput()\nt = list(map(int, input().split()))\ns, p = 0, []\nfor i, j in enumerate(t):\n    k = bisect_right(p, j)\n    s += i - k\n    p.insert(k, j)\nprint(2 * s - (s & 1))", "def merge_sort(a, l, r):\n  res = 0\n  if l < r:\n    m = (l + r) // 2\n    res += merge_sort(a, l, m)\n    res += merge_sort(a, m + 1, r)\n    \n    i = l\n    j = m + 1\n    b = []\n    while i <= m and j <= r:\n      if a[i] <= a[j]:\n        b.append(a[i])\n        i += 1\n      else:\n        b.append(a[j])\n        j += 1\n        res += m - i + 1\n\n    while i <= m:\n      b.append(a[i])\n      i += 1\n\n    while j <= r:\n      b.append(a[j])\n      j += 1\n    \n    for idx, val in enumerate(b):\n      a[idx + l] = val\n      \n  return res \n\ninput()\na = [int(x) for x in input().split()]\nn = len(a)\nans = merge_sort(a, 0, n - 1)\nif ans & 1 == 0:\n  ans *= 2\nelse:\n  ans = ans * 2 - 1\nprint(ans)\n", "def merge_sort(a, l, r):\n\n  res = 0\n\n  if l < r:\n\n    m = (l + r) // 2\n\n    res += merge_sort(a, l, m)\n\n    res += merge_sort(a, m + 1, r)\n\n    \n\n    i = l\n\n    j = m + 1\n\n    b = []\n\n    while i <= m and j <= r:\n\n      if a[i] <= a[j]:\n\n        b.append(a[i])\n\n        i += 1\n\n      else:\n\n        b.append(a[j])\n\n        j += 1\n\n        res += m - i + 1\n\n\n\n    while i <= m:\n\n      b.append(a[i])\n\n      i += 1\n\n\n\n    while j <= r:\n\n      b.append(a[j])\n\n      j += 1\n\n    \n\n    for idx, val in enumerate(b):\n\n      a[idx + l] = val\n\n      \n\n  return res \n\n\n\ninput()\n\na = [int(x) for x in input().split()]\n\nn = len(a)\n\nans = merge_sort(a, 0, n - 1)\n\nif ans & 1 == 0:\n\n  ans *= 2\n\nelse:\n\n  ans = ans * 2 - 1\n\nprint(ans)\n\n\n\n\n\n# Made By Mostafa_Khaled\n", "def count(a):\n    n   = len(a)\n    cnt = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if a[i] > a[j]:\n                cnt+=1\n    return cnt          \n\nn = int(input())\np = list(map(int, input().split()))\nnum = count(p)\n\nprint(num*2 - num%2)", "n=int(input().strip())\np=[0]+list(map(int,input().split()))\n\nc=[0]*(n+1)\ndef lowbit(x):\n    return x&(-x)\ndef add(x,v):\n    while x<=n:\n        c[x]+=v\n        x+=lowbit(x)\ndef get(x):\n    ans=0\n    while x:\n        ans+=c[x]\n        x-=lowbit(x)\n    return ans\n\nans=0\nfor i in range(n,0,-1):\n    ans+=get(p[i])\n    add(p[i],1)\n\nif ans%2:\n    print(2*ans-1)\nelse:\n    print(2*ans)\n"]