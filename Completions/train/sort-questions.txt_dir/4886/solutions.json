["from collections import Counter\n\ndef find_dups_miss(arr):\n    mi, ma, c = min(arr), max(arr), Counter(arr)\n    duplicates = sorted(n for n in c if c[n] > 1)\n    return [ma*(ma+1)//2 - mi*(mi-1)//2 - sum(c), duplicates]", "from collections import Counter\ndef find_dups_miss(arr):\n    counter = Counter(arr)\n    return [(max(counter) - min(counter) + 1) * (min(counter) + max(counter))//2 - sum(counter), [y for y in sorted(counter) if counter[y] > 1]]", "def find_dups_miss(arr):\n    dups = []; memo = set()\n    a = 100000; b = 0; summ = 0\n    for i in arr:\n        if i in memo:dups.append(i)\n        else: \n            if i < a: a = i\n            if i > b: b = i\n            memo.add(i)\n            summ += i\n    miss = int((b * (b + 1)/2 - (a) * (a-1)/2) - summ)\n    dups.sort()\n    return [miss, dups]", "from collections import Counter\n\ndef find_dups_miss(arr):\n    C = Counter(arr)\n    S = set(range(min(C), max(C)+1))\n    x = (S - set(C)).pop()\n    L = sorted(k for k,v in C.items() if v > 1)\n    return [x, L]", "from collections import Counter\n\ndef find_dups_miss(arr):\n    c = Counter(arr)\n    return [next(i for i in range(min(c), max(c)) if i not in c), sorted(x for x in c if c[x] > 1)]", "def find_dups_miss(arr):\n    min_n, max_n = min(arr), max(arr)\n    seen, dupes = set(), set()\n    \n    for n in arr:\n        if n in seen:\n            dupes.add(n)\n        else:\n            seen.add(n)\n    \n    missing = (min_n + max_n) / 2.0 * (max_n - min_n + 1) - sum(seen)\n    return [ missing, sorted(dupes) ]", "def find_dups_miss(arr):\n    from collections import Counter\n    dup=sorted([i for i, cnt in Counter(arr).items() if cnt>1])\n    miss=list(set(range(min(arr), max(arr)+1))-set(arr))\n    return [miss[0], dup]", "from collections import Counter\n\ndef find_dups_miss(arr):\n    cnt = Counter(arr)\n    dup = sorted(x for x in cnt if cnt[x] >= 2)\n    miss = (set(xrange(min(cnt), max(cnt) + 1)) - set(cnt)).pop()\n    return [miss, dup]", "import numpy as np\n\ndef find_dups_miss(arr):\n    arr=sorted(arr)\n    diff=np.array(arr[1:])-np.array(arr[:-1])\n    rep = [ arr[i] for i, x in enumerate(diff) if x == 0 ]\n    unico=[ arr[i]+1 for i, x in enumerate(diff) if x == 2 ]\n    return [unico[0],rep]", "def find_dups_miss(arr):\n    a = sorted(arr)\n    return [sum(range(a[0], a[-1]+1)) - sum(set(a)),\n            sorted(set(a[::2]) & set(a[1::2]))]"]