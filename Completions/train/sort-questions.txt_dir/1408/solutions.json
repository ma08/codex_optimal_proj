["mod = 10 ** 9 + 7\nfrom collections import Counter\nchoice = {'1' : ['11', '21', '22'], '2' : ['11', '12', '21']}\ndef solve(a,b):\n n = len(a)\n if n == 1:\n  return 2\n dp = Counter([('11', '11')])\n for i in range(n-1):\n  new = Counter()\n  for x,y in (a[i], b[i]), (b[i], a[i]):\n   for p in choice[x]:\n    for q in choice[y]:\n     m = p[-1] + x \n     n = q[-1] + y\n     new[m,n] += dp[p,q]\n     new[m,n] %= mod\n  dp = new\n ans = 0 \n for i in '11', '21', :\n  for j in '11', '21':\n   ans += dp[i,j]\n return (ans * 2) % mod\n\n \nt = int(input())\nfor _ in range(t):\n a = input()\n b = input()\n print(solve(a,b))", "mod = 10 ** 9 + 7\nfrom collections import Counter\ndef solve(a,b):\n n = len(a)\n if n == 1:\n  return 2\n dp = Counter([('11', '11')])\n for i in range(n-1):\n  new = Counter()\n  for p in '11', '12', '21', '22':\n   for q in '11', '12', '21', '22':\n    for x,y in (a[i], b[i]), (b[i], a[i]):\n     if x == '2' and p == '22' or (y == '2' and q == '22'):\n      continue\n     if x == '1' and p == '12' or (y == '1' and q == '12'):\n      continue\n     m = p[-1] + x \n     n = q[-1] + y \n     new[m,n] += dp[p,q]\n     new[m,n] %= mod\n  dp = new\n ans = 0 \n for i in '11', '21', :\n  for j in '11', '21':\n   ans += dp[i,j]\n return (ans * 2) % mod\n\n \nt = int(input())\nfor _ in range(t):\n a = input()\n b = input()\n print(solve(a,b))"]