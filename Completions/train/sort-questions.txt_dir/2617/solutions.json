["# Enter your code here. Read input from STDIN. Print output to STDOUT\nar=[]\nn=int(input())\nfor i in range(0,n):\n    tmp_str=input()\n    tmp_str_ar=tmp_str.strip().split(\" \")\n    cmd=tmp_str_ar[0]\n    if(cmd==\"print\"):\n        print(ar)\n    elif(cmd==\"sort\"):\n        ar.sort()\n    elif(cmd==\"reverse\"):\n        ar.reverse()\n    elif(cmd==\"pop\"):\n        ar.pop()\n    elif(cmd==\"count\"):\n        val=int(tmp_str_ar[1])\n        ar.count(val)\n    elif(cmd==\"index\"):\n        val=int(tmp_str_ar[1])\n        ar.index(val)\n    elif(cmd==\"remove\"):\n        val=int(tmp_str_ar[1])\n        ar.remove(val)  \n    elif(cmd==\"append\"):\n        val=int(tmp_str_ar[1])\n        ar.append(val)          \n    elif(cmd==\"insert\"):\n        pos=int(tmp_str_ar[1])\n        val=int(tmp_str_ar[2])\n        ar.insert(pos,val)\n", "def __starting_point():\n    N = int(input())\n    outlist = []\n    for _ in range(N):\n        args = input().strip().split(' ')\n        cmd = args[0]\n        if cmd == 'insert':\n            outlist.insert(int(args[1]), int(args[2]))\n        elif cmd == 'remove':\n            outlist.remove(int(args[1]))\n        elif cmd == 'append':\n            outlist.append(int(args[1]))\n        elif cmd == 'print':\n            print(outlist)\n        elif cmd == 'sort':\n            outlist.sort()\n        elif cmd == 'pop':\n            outlist.pop()\n        elif cmd == 'reverse':\n            outlist.reverse()\n        \n        \n            \n\n__starting_point()"]