["# cook your dish here\nmod = 10**9 + 7\nfor i in range(int(input())):\n    n,k,m = tuple(map(int, input().split()))\n    a = list(map(int, input().split()))\n    ans = [0 for i in range(k+1)]\n    ans[0] = 1\n    curr_ending = 1\n    for i in range(n):\n     mod_a = a[i]%m\n     start = curr_ending - (curr_ending%m - mod_a)%m\n     if(mod_a == curr_ending%m and curr_ending<k):\n      curr_ending += 1\n     for i in range(start, 0, -m):\n      ans[i] += ans[i-1]\n      if(ans[i] > mod):\n       ans[i] = ans[i] - mod\n    print(ans[k])", "# cook your dish here\nmod = 10**9 + 7\nfor i in range(int(input())):\n    n,k,m = tuple(map(int, input().split()))\n    a = list(map(int, input().split()))\n    ans = [0 for i in range(k+1)]\n    ans[0] = 1\n    curr_ending = 1\n    for i in range(n):\n     mod_a = a[i]%m\n     start = curr_ending - (curr_ending%m - mod_a)%m\n     if(mod_a == curr_ending%m and curr_ending<k):\n      curr_ending += 1\n     for i in range(start, 0, -m):\n      ans[i] += ans[i-1]\n      if(ans[i] > mod):\n       ans[i] = ans[i] - mod\n    print(ans[k])", "# cook your dish here\nmod = 10**9 + 7\nfor i in range(int(input())):\n    n,k,m = tuple(map(int, input().split()))\n    a = list(map(int, input().split()))\n    ans = [0 for i in range(k+1)]\n    ans[0] = 1\n    curr_ending = 1\n    for i in range(n):\n     mod_a = a[i]%m\n     start = curr_ending - (curr_ending%m - mod_a)%m\n     if(mod_a == curr_ending%m and curr_ending<k):\n      curr_ending += 1\n     for i in range(start, 0, -m):\n      ans[i] += ans[i-1]\n      if(ans[i] > mod):\n       ans[i] = ans[i] - mod\n    print(ans[k])\n\n  \n", "# cook your dish here\nM = 10**9+7\nfor _ in range(int(input())):\n    n,k,m=(int(s) for s in input().split())\n    l = [int(s)%m for s in input().split()]\n    ans = [0]*(k+1)\n    i = 1\n    for j in range(n):\n     mov = 0\n     just = 0\n     if (i%m+1)%m==l[j] and i<k:\n      if ans[i]!=0:\n       just=1\n      mov = 1\n     w = i - (i%m-l[j])%m\n     while w>=1:\n      if w==1:\n       ans[w]+=1\n      else:\n       ans[w]+=ans[w-1]\n      w-=m\n     if mov:\n      i+=1\n      if just:\n       ans[i] = ans[i-1]\n    print(ans[k]%M) ", "M = 10**9+7\nfor _ in range(int(input())):\n    n,k,m=(int(s) for s in input().split())\n    l = [int(s)%m for s in input().split()]\n    ans = [0]*(k+1)\n    i = 1\n    for j in range(n):\n     mov = 0\n     just = 0\n     if (i%m+1)%m==l[j] and i<k:\n      if ans[i]!=0:\n       just=1\n      mov = 1\n     w = i - (i%m-l[j])%m\n     while w>=1:\n      if w==1:\n       ans[w]+=1\n      else:\n       ans[w]+=ans[w-1]\n      w-=m\n     if mov:\n      i+=1\n      if just:\n       ans[i] = ans[i-1]\n    print(ans[k]%M) ", "# cook your dish here\nt = int(input())\nMOD = 10**9+7\nfor _ in range(t) :\n    n,k,m= list(map(int,input().split()))\n    b = [0 for i in range(k)]\n    a = list(map(int,input().split()))\n    if(m == 1) :\n     for i in range(n) :\n      for j in range(k-1,-1,-1) :\n       if(j == 0) :\n        b[j] = (b[j]+1)%MOD\n       else :\n        b[j] = (b[j-1] + b[j])%MOD\n    else :\n     for val in a:\n      mod = val % m\n      if(mod == 0) :\n       mod = m\n      for j in range(mod-1,k,m) :\n       if(j == 0) :\n        b[j] = (b[j]+1)%MOD\n       else :\n        b[j] = (b[j-1] + b[j])%MOD\n    print(b[-1]%MOD)", "mod=10**9+7\nfor _ in range(int(input())):\n    n,k,m=list(map(int,input().split()))\n    a=list([(int(x)-1)%m+1 for x in input().split()])\n    arr=[0]*k\n    arr.insert(0,1)\n    for i in range(n):\n     end=a[i]+m*((k-a[i])//m)\n     for j in range(end,a[i]-1,-m):\n      arr[j]=(arr[j]+arr[j-1])%mod\n    print(arr[-1])\n \n", "def modinv(v,m):\n    v %= m\n    pv = m\n    pc = 0\n    c = 1\n    while v > 0:\n     q, a = divmod(pv, v)\n     pc, c = c, pc-q*c\n     pv, v = v, a\n    return pc % m\n\ndef binmod(n,r,m):\n    if 2*r > n: r = n - r\n    if r < 0: return 0\n    if r == 0: return 1\n    tp = 1\n    bm = 1\n    for t in range(1, r+1):\n     bm = bm*t%m\n     tp = tp*(n+1-t)%m\n    return (tp*modinv(bm,m))%m\n\nMVAL = 1000000007\nfor ti in range(int(input())):\n    n,k,m = map(int,input().split())\n    ays = list(map(int,input().split()))", "# https://www.codechef.com/problems/GRUMPMA\nfrom sys import stdin\n\ndef modinv(v,m):\n    v %= m\n    pv = m\n    pc = 0\n    c = 1\n    while v > 0:\n     q, a = divmod(pv, v)\n     pc, c = c, pc-q*c\n     pv, v = v, a\n    return pc % m\n\ndef binmod(n,r,m):\n    if 2*r > n: r = n - r\n    if r < 0: return 0\n    if r == 0: return 1\n    tp = 1\n    bm = 1\n    for t in range(1, r+1):\n     bm = bm*t%m\n     tp = tp*(n+1-t)%m\n    return (tp*modinv(bm,m))%m\n\nMVAL = 1000000007", "# https://www.codechef.com/problems/GRUMPMA\nfrom sys import stdin\n\ndef modinv(v,m):\n    v %= m\n    pv = m\n    pc = 0\n    c = 1\n    while v > 0:\n     q, a = divmod(pv, v)\n     pc, c = c, pc-q*c\n     pv, v = v, a\n    return pc % m\n\ndef binmod(n,r,m):\n    if 2*r > n: r = n - r\n    if r < 0: return 0\n    if r == 0: return 1\n    tp = 1\n    bm = 1\n    for t in range(1, r+1):\n     bm = bm*t%m\n     tp = tp*(n+1-t)%m\n    return (tp*modinv(bm,m))%m\n\nMVAL = 1000000007"]