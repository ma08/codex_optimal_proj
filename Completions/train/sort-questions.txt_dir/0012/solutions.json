["from math import *\n\nmod = 1000000007\n\nfor zz in range(int(input())):\n    n = int(input())\n    a = [ int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    ha = True\n    hp = False\n    hm = False\n    for i in range(n):\n        if b[i] != a[i]:\n            if b[i] > a[i]:\n                if (hp):\n                    pass\n                else:\n                    ha = False\n                    break\n            else:\n                if (hm):\n                    pass\n                else:\n                    ha = False\n                    break\n        if a[i] > 0:\n            hp = True\n        elif a[i] < 0:\n            hm = True\n\n    if ha:\n        print('YES')\n    else:\n        print('NO')\n", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d1 = False\n    d2 = False\n    ans = True\n    for j in range(n):\n        if a[j] > b[j]:\n            if not d1:\n                ans = False\n        if a[j] < b[j]:\n            if not d2:\n                ans = False\n        if a[j] == -1:\n            d1 = True\n        elif a[j] == 1:\n            d2 = True\n    if ans:\n        print(\"YES\")\n    else:\n        print(\"NO\")", "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    pos = neg = False\n    ok = True\n    for i in range(n):\n        if a[i] > b[i] and not neg:\n            ok = False\n            break\n        if a[i] < b[i] and not pos:\n            ok = False\n            break\n        if a[i] == -1:\n            neg = True\n        if a[i] == 1:\n            pos = True\n    print('YES' if ok else 'NO')", "from math import *\n\n\n\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    cnt1 = 0\n    cnt0 = 0\n    cntotr = 0\n    f = True\n    for i in range(n):\n        if a[i] > b[i]:\n            if cntotr == 0:\n                f = False\n                break\n        if a[i] < b[i]:\n            if cnt1 == 0:\n                f = False\n                break\n        if a[i] == 0:\n            cnt0 += 1\n        elif a[i] == 1:\n            cnt1 += 1\n        else:\n            cntotr += 1\n    if f:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = map(int, input().split())\n    B = map(int, input().split())\n    \n    seen_pos = seen_neg = False\n    for a, b in zip(A, B):\n        if (b > a and not seen_pos) or (b < a and not seen_neg):\n            print('NO')\n            break\n        \n        if a > 0:\n            seen_pos = True\n        elif a < 0:\n            seen_neg = True        \n    else:\n        print('YES')", "import math\nfrom collections import defaultdict\nml=lambda:map(int,input().split())\nll=lambda:list(map(int,input().split()))\nii=lambda:int(input())\nip=lambda:input()\n\n\"\"\"========main code===============\"\"\"\n\nt=ii()\nfor _ in range(t):\n    x=ii()\n    a=ll()\n    b=ll()\n    one=-1\n    minus=-1\n    f=0\n    for i in range(x):\n        if(b[i]>a[i]):\n            if(one==-1):\n                f=1\n                break\n        elif (b[i]<a[i]):\n            if(minus==-1):\n                f=1\n                break\n        if(a[i]==1):\n            one=1\n        elif(a[i]==-1):\n            minus=1\n    if(f):\n        print(\"NO\")\n    else:\n        print(\"YES\")", "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int, input().split()))\n    b=list(map(int, input().split()))\n    grow = shrink = False\n    for ai, bi in zip(a,b):\n        if bi < ai:\n            if not shrink:\n                print('NO')\n                break\n        elif bi > ai and not grow:\n            print('NO')\n            break\n        if ai == 1:\n            grow = True\n        elif ai == -1:\n            shrink = True\n    else:\n        print('YES')\n", "t = int(input())\nfor case_num in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    b = list(map(int, input().split(' ')))\n    pos = False\n    neg = False\n    ok = True\n    for i in range(n):\n        if (not pos) and (not neg) and (a[i] != b[i]):\n            ok = False\n            break\n        if (not pos) and (a[i] < b[i]):\n            ok = False\n            break\n        if (not neg) and (a[i] > b[i]):\n            ok = False\n            break\n        if a[i] < 0:\n            neg = True\n        if a[i] > 0:\n            pos = True\n    print('YES' if ok else 'NO')\n", "import math\n\n\ndef main():\n    was = set()\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    for i in range(n):\n        if a[i] - b[i] > 0:\n            if not -1 in was:\n                print(\"NO\")\n                return\n        elif a[i] - b[i] < 0:\n            if not 1 in was:\n                print(\"NO\")\n                return\n        was.add(a[i])\n    print(\"YES\")\n\ndef __starting_point():\n    t = int(input())\n    for i in range(t):\n        main()\n\n__starting_point()", "from bisect import *\nfrom collections import *\nfrom itertools import *\nimport functools\nimport sys\nimport math\nfrom decimal import *\nfrom copy import *\nfrom heapq import *\nfrom fractions import *\ngetcontext().prec = 30\nMAX = sys.maxsize\nMAXN = 300010\nMOD = 10**9+7\nspf = [i for i in range(MAXN)]\nspf[0]=spf[1] = -1\ndef sieve():\n    for i in range(2,MAXN,2):\n        spf[i] = 2\n    for i in range(3,int(MAXN**0.5)+1):\n        if spf[i]==i:\n            for j in range(i*i,MAXN,i):\n                if spf[j]==j:\n                    spf[j]=i\ndef fib(n,m):\n    if n == 0:\n        return [0, 1]\n    else:\n        a, b = fib(n // 2)\n        c = ((a%m) * ((b%m) * 2 - (a%m)))%m\n        d = ((a%m) * (a%m))%m + ((b)%m * (b)%m)%m\n        if n % 2 == 0:\n            return [c, d]\n        else:\n            return [d, c + d]\n\ndef charIN(x= ' '):\n    return(sys.stdin.readline().strip().split(x))\n\ndef arrIN(x = ' '):\n    return list(map(int,sys.stdin.readline().strip().split(x)))\n\ndef ncr(n,r):\n    num=den=1\n    for i in range(r):\n        num = (num*(n-i))%MOD\n        den = (den*(i+1))%MOD\n\n    return (num*(pow(den,MOD-2,MOD)))%MOD\n\ndef flush():\n    return sys.stdout.flush()\n\n'''*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*'''\ndef solve():\n    n = int(input())\n    a = arrIN()\n    b = arrIN()\n    x = [[0,0,0] for i in range(n)]\n    for i in range(n):\n        x[i][0] = int(a[i]==-1)\n        x[i][1] = int(a[i]==0)\n        x[i][2] = int(a[i]==1)\n        x[i][0]|=x[i-1][0]\n        x[i][1]|=x[i-1][1]\n        x[i][2]|=x[i-1][2]\n    if a[0]!=b[0]:\n        print('NO')\n    else:\n        for i in range(1,n):\n            if a[i]!=b[i]:\n                if a[i]>b[i]:\n                    if not x[i-1][0]:\n                        print('NO')\n                        break\n                else:\n                    if not x[i-1][2]:\n                        print('NO')\n                        break\n        else:\n            print('YES')\n\n\nt = int(input())\nfor i in range(t):\n    solve()\n\n"]