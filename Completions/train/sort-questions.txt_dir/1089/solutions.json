["def dfs(node):\n nonlocal adj,leaf\n val=0\n flag=0\n for i in adj[node]:\n  x= dfs(i)\n  val+=x\n  if x==0:\n   flag=1\n leaf+=val-val%3\n if val%3==0 and flag==0:\n  return 1\n else:\n  return 0\nfor _ in range(int(input())):\n n=int(input())\n adj=[[] for i in range(n+2)]\n arr=[int(i) for i in input().split()]\n leaf=0\n #print(adj)\n for i in range(2,n+1):\n  #print(i,arr[i-2])\n  adj[arr[i-2]].append(i)\n  \n dfs(1)\n print(n-leaf)", "from collections import defaultdict\nimport sys\nsys.setrecursionlimit(10**6)\n\n\n\n\ndef dfs(node):\n visited[node]=True\n n0[node]+=1\n for x in d[node]:\n  if visited[x]==False:\n   dfs(x)\n   n0[node]+=n0[x]\ndef dfs1(node):\n nonlocal ans\n visited[node]=True\n co=0\n for x in d[node]:\n  if visited[x]==False:\n\n   dfs1(x)\n   if n0[x]==1:\n    co+=1\n\n ans1=co//3\n ##print(ans1,node)\n if 3*ans1==len(d[node]):\n  n0[node]=1\n  ##print(n0[node],node)\n ans-=3*ans1\n\n\n\n\n\nfor _ in range(int(input())):\n n=int(input())\n a=list(map(int,input().split()))\n d=defaultdict(list)\n ans=n\n for i in range(len(a)):\n  d[a[i]].append(i+2)\n ##print(d)\n visited = [False] * (n + 1)\n n0 = [0] * (n + 1)\n ##print(n0)\n dfs(1)\n ## print(n0)\n visited=[False]*(n+1)\n dfs1(1)\n print(ans)\n\n\n\n"]