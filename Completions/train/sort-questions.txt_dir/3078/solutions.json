["def array_center(lst):\n    return [i for i in lst if abs(i - sum(lst)*1.0/len(lst)) < min(lst)]", "from statistics import mean\n\ndef array_center(arr):\n    low, avg = min(arr), mean(arr)\n    return [b for b in arr if abs(b - avg) < low]", "from statistics import mean\n\ndef array_center(a):\n    n, m = min(a), mean(a)\n    return [x for x in a if abs(x - m) < n]", "def array_center(arr):\n    m, a = min(arr), (sum(arr) / len(arr))\n    return [n for n in arr if abs(n - a) < m]\n", "def array_center(arr):\n    avg = sum(arr)/len(arr)\n    return [i for i in arr if abs(i - avg) < min(arr)]\n\n", "def array_center(arr):\n    #your code here\n    a = min(arr)\n    c = []\n    b = 0\n    for i in arr:\n        b = b + i\n    aver = b / len(arr)\n    for i in arr:\n        if abs(i - aver) < a:\n            c.append(i)\n    return c", "def array_center(a):\n    mi, me = min(a), sum(a)/len(a)\n    return [x for x in a if abs(x-me) < mi]", "array_center=lambda a:[n for n in a if abs(n-sum(a)/len(a))<min(a)]", "from numpy import mean\ndef array_center(arr):\n    m,a=min(arr),mean(arr)\n    return list(filter(lambda n:abs(n-a)<m,arr))", "from statistics import mean\ndef array_center(a):\n    m, avg = min(a), mean(a)\n    return [i for i in a if -m<(i-avg)<m]"]