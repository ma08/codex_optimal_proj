["T = int(input())\nfor _ in range(T):\n n,m = map(int,input().split())\n completed = list(map(int,input().split()))\n jobs = []\n for i in range(1,n+1):\n  if i not in completed:\n   jobs.append(i)\n jobs.sort()\n chef = []\n ass = []\n for i in range(len(jobs)):\n  if i%2==0:\n   chef.append(str(jobs[i]))\n  else:\n   ass.append(str(jobs[i]))\n print(' '.join(chef))\n print(' '.join(ass))", "def work(n, m, completed):\n chef = []\n asst = []\n total_jobs = list(range(1,n+1))\n pending = [value for value in total_jobs if value not in completed]\n for k in range(len(pending)):\n  if k % 2 == 0:\n   chef.append(pending[k])\n  else:\n   asst.append(pending[k])\n\n return chef, asst\n\ndef main():\n T = int(input())\n for t in range(T):\n  jobs = input().split()\n  n = int(jobs[0])\n  m = int(jobs[1])\n  completed = sorted(list(map(int, input().split())))\n\n  chef, asst = work(n, m, completed)\n  for j in chef:\n   print(j, end=\" \")\n  print()\n  for k in asst:\n   print(k, end=\" \")\n  print()\n\n\ndef __starting_point():\n main()\n\n__starting_point()", "# cook your dish here\ndef work(a):\n chef = []\n asst = []\n c = True\n t = False\n for i in range(1, len(a)):\n  if a[i] != 1:\n   if c:\n    chef.append(i)\n    c = False\n    t = True\n   else:\n    asst.append(i)\n    t = False\n    c = True\n return chef, asst\n\n\nt = int(input())\nwhile t:\n n, m = [int(k) for k in input().split()]\n a = [0] * (n + 1)\n finished = [int(k) for k in input().split()]\n for i in finished:\n  a[i] = 1\n chef, asst = work(a)\n for i in chef:\n  print(i,end =' ')\n print()\n for i in asst:\n  print(i,end = ' ')\n print()\n t-=1", "# cook your dish here\nt = int(input())\nfor _ in range(t):\n n, m = map(int, input().strip().split())\n arr = list(map(int, input().strip().split()))\n \n not_done = [i for i in range(1, n+1) if i not in arr]\n chef = [not_done[i] for i in range(len(not_done)) if i % 2 == 0]\n assis = [not_done[i] for i in range(len(not_done)) if i % 2 == 1]\n print(*chef)\n print(*assis)", "# cook your dish here\nt = int(input())\nfor i in range(t):\n n,m = map(int,input().split())\n done_task = list(map(int,input().split()))\n done_task.sort()\n left_tasks=[]\n chef=[]\n assist=[]\n for i in range(n):\n  if i+1 not in done_task:\n   left_tasks.append(i+1)\n for i in range(n-m):\n  if i%2==0:\n   chef.append(left_tasks[i])\n  else:\n   assist.append(left_tasks[i])\n print(*chef)\n print(*assist)", "def solve():\n t=int(input())\n for _ in range(t):\n  n,m=[int(x) for x in input().split()]\n  cmpl = [int(x) for x in input().split()]\n  uncmpl = [i for i in range(1,n+1) if i not in cmpl]\n  l1=[]\n  l2=[]\n  for i in range(len(uncmpl)):\n   if i&1==0:\n    l1.append(uncmpl[i])\n   else:\n    l2.append(uncmpl[i])\n  print(*l1)\n  print(*l2)\n\n# import sys\n# def fast():\n#     sys.stdin = open(\"input.txt\", \"r\")\n#     sys.stdout = open(\"output.txt\", \"w\")\n# fast()\nsolve()", "for _ in range(int(input())):\n n,m = map(int,input().split())\n list1 = list(map(int,input().split()))\n list1.sort()\n list2 = [i for i in range(1,n+1) if not i in list1]\n list2.sort()\n cheflist = [list2[i] for i in range(len(list2)) if i%2 == 0]\n asslist = [list2[i] for i in range(len(list2)) if i%2 != 0]\n str1 = \"\"\n str2 = \"\"\n for i in cheflist:\n  if i == cheflist[len(cheflist)-1]:\n   str1 += str(i)\n\n  else:\n   str1 += str(i) + \" \"\n\n for i in asslist:\n  if i == cheflist[len(cheflist)-1]:\n   str2 += str(i)\n\n  else:\n   str2 += str(i) + \" \"\n\n print(str1)\n print(str2)", "T=int(input())\nfor i in range(T):\n N,K=map(int,input().split())\n L=list(map(int,input().split()))[:K]\n A,C,D=[],[],[]\n for j in range(1,N+1):\n  if j not in L:\n   A.append(j)\n for k in range(len(A)):\n  if k % 2 == 0:\n   C.append(A[k])\n  else:\n   D.append(A[k])\n for j in C:\n  print(j,end=\" \")\n print()\n for k in D:\n  print(k,end=\" \")\n print()", "t=int(input())\nfor _ in range(t):\n a,b=map(int,input().split())\n c = [int(i) for i in input().split()]\n d= [int(i) for i in range(1,a+1)]\n d=list(set(d) - set(c))\n d.sort()\n j=0\n while(j<len(d)):\n  print(d[j],end=\" \")\n  j+=2\n j=1\n print()\n while(j<len(d)):\n  print(d[j],end=\" \")\n  j+=2\n print()", "# cook your dish here\nT = int(input())\n\nwhile T:\n T -= 1\n totalJobs, completedJobs = map(int, input().split())\n iJobs = [] # incompleted jobs\n cJobs = [] # complete jobs\n chef = []\n assistant = []\n \n cJobs = [int(i) for i in input().split()]\n for i in range(1, totalJobs + 1):\n  if i not in cJobs:\n   iJobs.append(i)\n iJobs.sort()\n \n for i in range(len(iJobs)):\n  if i % 2 == 0:\n   chef.append(iJobs[i])\n  else:\n   assistant.append(iJobs[i])\n print(' '.join([str(i) for i in chef]))\n print(' '.join([str(i) for i in assistant]))", "# cook your dish here\nfor _ in range(int(input())):\n n,m=map(int,input().split())\n lm=[int(item) for item in input().split()]\n l=[item for item in range(1,n+1)]\n for i in lm:\n  l.remove(i)\n l.sort()\n list_chef=list()\n list_assistant=list()\n for i in range(0,len(l),2):\n  list_chef.append(l[i])\n for i in range(1,len(l),2):\n  list_assistant.append(l[i])\n print(*list_chef)\n print(*list_assistant)", "T=int(input())\nfor i in range(T):\n N,K=map(int,input().split())\n L=list(map(int,input().split()))[:K]\n A,C,D=[],[],[]\n for j in range(1,N+1):\n  if j not in L:\n   A.append(j)\n for k in range(len(A)):\n  if k % 2 == 0:\n   C.append(A[k])\n  else:\n   D.append(A[k])\n for j in C:\n  print(j,end=\" \")\n print()\n for k in D:\n  print(k,end=\" \")\n print()\n  \n  \n ", "for _ in range(int(input())):\n n, m = map(int, input().split())\n\n mLi = list(map(int, input().split()))\n nLi = [i for i in range(1, n + 1) if i not in mLi]\n x = []\n y = []\n for j in range(len(nLi)):\n  if j % 2 == 0:\n   x.append(nLi[j])\n  else:\n   y.append(nLi[j])\n \n print(*x, sep = \" \")\n print(*y, sep = \" \")", "# cook your dish here\nfor i in range(int(input())):\n n,m=[int(i) for i in input().split()]\n l=list(map(int,input().split()))\n g=[]\n for i in range(1,n+1):\n  g.append(i)\n un = [each for each in g if each not in l]\n chef = un[::2]\n ass = un[1::2]\n print(*chef)\n print(*ass)\n  \n \n  \n", "t = int(input())\nwhile t:\n n,m = [int(x) for x in input().split()]\n job_done = [int(x) for x in input().split()]\n li = []\n for i in range(1,n+1):\n  if i not in job_done:\n   li.append(i)\n chef = []\n assis = []\n for i in range(len(li)):\n  if i&1: \n   assis.append(li[i])\n  else:\n   chef.append(li[i])\n   \n print(*chef)\n print(*assis)\n t=t-1", "n=int(input())\nfor _ in range(n):\n c,a=[],[]\n tot=list(map(int,input().split()))\n done=list(map(int,input().split()))\n for i in range(1,tot[0]+1):\n  if i in done:\n   continue\n  else:\n   if len(c)<=len(a):\n    c.append(i)\n   else:\n    a.append(i)\n c.sort()\n a.sort()\n for j in c:\n  print(j,end=\" \")\n print()\n for k in a:\n  print(k,end=\" \")\n print()", "T = int(input())\n\nfor i in range(T):\n (n, m) = map(int, input().split())\n \n jobsList = []\n \n for j in range(n):\n  jobsList.append(j + 1)\n \n jobsDone = list(map(int, input().split()))\n \n for k in range(m):\n  jobsList.remove(jobsDone[k])\n  \n l = 0\n p = 1\n \n jobsA = []\n jobsB = []\n \n while l < len(jobsList):\n  jobsA.append(jobsList[l])\n  \n  l += 2;\n  \n while p < len(jobsList):\n  jobsB.append(jobsList[p])\n  \n  p += 2\n  \n for q in range(len(jobsA)):\n  print(jobsA[q], end = ' ')\n \n print()\n \n for r in range(len(jobsB)):\n  print(jobsB[r], end = ' ')\n  \n print()", "t=int(input())\nfor i in range(t):\n b=[]\n n,m=input().split()\n n,m=int(n),int(m)\n a=input().split()\n for j in range(m):\n  a[j]=int(a[j])\n \n p=1\n while(p<=n):\n  if (p not in a):\n   b.append(p)\n   p=p+1\n  else:\n   p=p+1\n \n for j in range(0,len(b),2):\n  print(b[j],end=' ')\n  \n print()\n for j in range(1,len(b),2):\n  \n  print(b[j],end=' ')\n print()", "# cook your dish here\nt = int(input())\nfor _ in range(t):\n n,m = map(int,input().split())\n mlst = list(map(int,input().split()))\n lst = []\n chef = []\n ass = []\n mlst.sort()\n for i in range(1,n+1):\n  if i not in mlst:\n   lst.append(i)\n for j in range(1,len(lst)+1):\n  if(j%2!=0):\n   # chef.append(lst[j-1])\n   print(lst[j-1],end=' ')\n  else:\n   ass.append(lst[j-1])\n   # print(lst[j-1],end=' ')\n print()\n print(*ass, sep=' ')\n", "import sys\nimport math\nfrom collections import *\nfrom itertools import *\n\ndef int_arr():return list(map(int,sys.stdin.readline().strip().split()))\ndef str_arr():return list(map(int,sys.stdin.readline().strip().split()))\ndef get_int():return map(int, sys.stdin.readline().strip().split())\ndef get_str():return map(str, sys.stdin.readline().strip().split())\n \n\nmod = 10**9+7\nsys.setrecursionlimit(10**9)\n\ndef solve(n,m,lis):\n arr = [i for i in range(1,n+1) if i not in lis]\n chef = arr[::2]\n ass = arr[1::2]\n print(*chef,end=' ')\n print()\n print(*ass,end = ' ')\n print()\n\nfor _ in range(int(input())):\n n,m = get_int()\n cleaned = int_arr()\n solve(n,m,cleaned)", "test_cases = int(input())\nfor i in range(test_cases):\n chefList = []\n assistantList = []\n n,m = map(int, input().split())\n jobsCompleted = set(map(int, input().split()))\n totalJobs = set(range(1,n+1))\n remainingJobs = list(totalJobs - jobsCompleted)\n remainingJobs.sort()\n for j in range(len(remainingJobs)):\n  if j%2==0:\n   chefList.append(remainingJobs[j])\n  else:\n   assistantList.append(remainingJobs[j])\n print(*chefList)\n print(*assistantList)", "import sys\nfrom math import * \nfrom collections import *\nfrom itertools import *\n\ndef int_arr():return list(map(int,input().split()))\ndef str_arr():return list(map(str,input().split()))\ndef two_int():return map(int,input().split())\ndef two_str():return map(str,input().split())\n\nmod = 10**9+7\nsys.setrecursionlimit(10**9)\n\ndef solve(n,c,lis):\n arr = [i for i in range(1,n+1) if i not in lis]\n chef = arr[::2]\n ass = arr[1::2]\n print(*chef,end=' ')\n print()\n print(*ass,end = ' ')\n print()\n\n\nfor _ in range(int(input())):\n n,c = map(int,input().split())\n lis = int_arr()\n solve(n,c,lis)\n", "for _ in range(int(input())):\n [n,m] = [int(i) for i in input().split()]\n l = sorted([int(i) for i in input().split()])\n tempI = 1\n aI = 0\n temp = []\n while(tempI <= n):    \n  if (aI < m) and (tempI == l[aI]):\n   aI += 1\n   tempI += 1\n   continue\n  temp.append(tempI)\n  tempI += 1\n #print(temp)\n if(n-m) <= 0:\n  print()\n  print()\n  continue\n if(n - m) == 1 :\n  print(temp[0])\n  print()\n  continue\n for i in range(0,n - m, 2):\n  print(temp[i], end = \" \")\n print()\n for i in range(1, n - m, 2):\n  print(temp[i],end = \" \")\n print()"]