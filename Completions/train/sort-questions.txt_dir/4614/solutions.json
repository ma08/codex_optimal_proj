["def scoreboard(who_ate_what):\n    scores = {'chickenwings': 5, 'hamburgers': 3, 'hotdogs': 2}\n    return sorted((\n        {'name': person.pop('name'),\n         'score': sum(scores.get(k, 0) * v for k, v in list(person.items()))}\n        for person in who_ate_what), key=lambda a: (-a['score'], a['name']))\n", "PTS = {'name': 0, 'chickenwings': 5, 'hamburgers': 3, 'hotdogs': 2}\n\ndef scoreboard(who_ate_what):\n    return sorted( ({'name': d['name'],\n                     'score': sum( d.get(what,0)*coef or 0 for what,coef in PTS.items())}\n                    for d in who_ate_what),\n                  key=lambda d: (-d['score'],d['name']))", "def scoreboard(who_ate_what):\n    for d in who_ate_what:\n        d['score'] = 5 * d.get('chickenwings', 0) + 3 * d.get('hamburgers', 0) + 2 * d.get('hotdogs', 0) \n    return sorted([{k:d[k] for k in ('name','score')} for d in who_ate_what],key = lambda d:(-1*d['score'], d['name']))", "SCORES = {\n    'chickenwings': 5,\n    'hamburgers': 3,\n    'hambrgers': 3,\n    'hotdogs': 2,\n}\n\ndef scoreboard(who_ate_what):\n    return sorted([\n        {\n            'name': d['name'],\n            'score': sum(SCORES[food] * count for food, count in d.items() if food != 'name')\n        }\n        for d in who_ate_what\n    ], key=lambda d: (-d['score'], d['name']))", "def scoreboard(who_ate_what):\n    weights = {\"chickenwings\": 5, \"hamburgers\": 3, \"hotdogs\": 2}\n    def score(dude):\n      return sum(weights[key] * amount for key, amount in dude.items() if key != \"name\")\n    return sorted(({\"name\": dude[\"name\"], \"score\": score(dude)} for dude in who_ate_what), key=lambda d: (-d[\"score\"], d[\"name\"]))", "def scoreboard(who_ate_what):\n    return sorted(({\n        \"name\": p[\"name\"], \n        \"score\":\n            5 * p.get(\"chickenwings\", 0) +\n            3 * p.get(\"hamburgers\", 0) +\n            2 * p.get(\"hotdogs\", 0)}\n        for p in who_ate_what),\n        key=lambda dict: (-dict[\"score\"], dict[\"name\"]))", "POINTS = {\"chickenwings\": 5, \"hamburgers\": 3, \"hotdogs\": 2}\nscoreboard = lambda b: sorted(({\"name\": p[\"name\"], \"score\":\nsum(v * p.get(k, 0) for k, v in POINTS.items())} for p in b),\nkey=lambda d: (-d[\"score\"], d[\"name\"]))", "def scoreboard(who_ate_what):\n    score_board = []\n    for person in who_ate_what:\n        score = person.get('chickenwings',0)*5 + person.get('hamburgers',0)*3 + person.get('hotdogs',0)*2       \n        contestant = {x:person[x] for x in ['name']}\n        contestant.update({'score':score})        \n        score_board.append(contestant )            \n    return sorted(score_board, key=lambda k: (-k['score'], k['name']))", "def scoreboard(who_ate_what):\n\n    new = [{\"name\": n[\"name\"], \"score\": n.get(\"chickenwings\",0)*5 + \\\n    n.get(\"hamburgers\",0)*3 + n.get(\"hotdogs\",0)*2} for n in who_ate_what]    \n    \n    return sorted(new, key=lambda n: (-n[\"score\"], n[\"name\"]))                                                                     \n", "class eater:\n    \n    def __init__(self, dict):\n        self.name = dict['name']\n        self.chickenwings = dict['chickenwings'] if 'chickenwings' in dict.keys() else 0\n        self.hamburgers = dict['hamburgers'] if 'hamburgers' in dict.keys() else 0\n        self.hotdogs = dict['hotdogs'] if 'hotdogs' in dict.keys() else 0\n        \n    def score(self):\n        return 5*self.chickenwings + 3*self.hamburgers + 2*self.hotdogs\n\ndef scoreboard(who_ate_what):\n    score = []\n    for D in who_ate_what:\n        score.append({'name': D['name'], 'score': eater(D).score()})\n    return sorted(score, key = lambda x: (-x['score'], x['name']))"]