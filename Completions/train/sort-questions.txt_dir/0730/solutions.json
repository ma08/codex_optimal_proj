["# cook your code here\nfor _ in range(eval(input())):\n n=eval(input())\n ind=0\n m=-1\n \n for i in range(n):\n  \n  l=[int(x) for x in input().split()]\n  sc=l[0]\n  for j in range(1,len(l)):\n   sc+=int(l[j]>=4)+int(l[j]>=5)+2*int(l[j]>=6)\n  if sc==m:\n   ind=-2\n  if sc>m :\n   m=sc\n   ind=i+1\n  \n   \n if (ind==-2):\n  print(\"tie\")\n elif (ind==1) :\n  print(\"chef\")\n else:\n  print(ind)", "# cook your code here\nfor _ in range(eval(input())):\n n=eval(input())\n ind=0\n m=0\n \n for i in range(n):\n  \n  l=[int(x) for x in input().split()]\n  sc=l[0]\n  for j in range(1,len(l)):\n   sc+=int(l[j]>=4)+int(l[j]>=5)+2*int(l[j]>=6)\n  if sc==m:\n   ind=-2\n  if sc>m :\n   m=sc\n   ind=i+1\n  \n   \n if (ind==-2):\n  print(\"tie\")\n elif (ind==1) :\n  print(\"chef\")\n else:\n  print(ind)", "# cook your code here\n\nT = int(input())\n\nfor t in range(T):\n N = int(input())\n C = [0] * N \n score = [0] * N\n cookies = [ [0] * 7 for _ in range(N)]\n \n for i in range(N):\n  \n  inpt = input().split(' ')\n \n  C[i] = int(inpt[0])\n \n  for j in range(C[i]):\n   k = int(inpt[j+1])\n   cookies[i][k] = cookies[i][k]+1\n  \n  cookies[i].sort()\n  \n  six = cookies[i][1]\n  five = cookies[i][2]\n  four = cookies[i][3]\n  \n  five = max(0, five-six)\n  four = max(0, four-six-five)\n  score[i] = C[i] + 4*six + 2*five + 1*four\n     \n  \n tie = 0 \n maxscore = 0\n maxchef = 0\n for i in range(N):\n  if score[i] > maxscore:\n   maxscore = score[i]\n   tie = 0\n   maxchef = i\n  elif score[i] == maxscore:\n   tie = 1\n \n if tie > 0:\n  print(\"tie\")\n elif maxchef == 0:\n  print(\"chef\")\n else:\n  print(maxchef+1)\n  \n  \n \n", "t = int(input())\nfor _ in range(t):\n n = int(input())\n c = []\n for _ in range(0,n):\n  c.append(list(map(int,input().split())))\n m = []\n def newset(c):\n  for i in set(c[1:]):\n   c.remove(i)\n  return c\n def check(c):\n  s = len(set(c[1:]))\n  if s < len(c[1:]):\n    check(newset(c))\n  if s == 4:\n    c[0] += 1\n  elif s == 5:\n    c[0] += 2\n  elif s == 6:\n    c[0] += 4\n  return c[0]\n\n for i in c:\n  m.append(check(i))\n if m.count(max(m))>1:\n  print('tie')\n elif max(m) == m[0]:\n  print('chef')\n else:\n  print(m.index(max(m))+1)", "t=int(input())\nfor i in range(t):\n n=int(input())\n final=0\n winner=0\n count=0\n winnerPoints=[0]*(n+1)\n for j in range(n):\n  c=[int(num) for num in input().strip().split()]\n  arr=[0]*7\n  for k in range(1,c[0]+1):\n   arr[c[k]]+=1\n  arr.sort()\n  six=arr[1]\n  five=arr[2]-six\n  four=arr[3]-five-six\n  point=(six*4)+(five*2)+(four*1)+c[0]\n  if(point>final):\n   final=point\n   winner=j+1\n  winnerPoints[j+1]=point\n for tr in range(1,n+1):\n  if(winnerPoints[tr]==final):\n   count+=1\n if(count>1):\n  print(\"tie\")\n elif(winner==1):\n  print(\"chef\")\n else:\n  print(str(winner))", "t=int(input())\nfor i in range(t):\n n=int(input())\n final=0\n winner=-1\n winnerPoints=[0]*(n+1)\n for j in range(n):\n  c=[int(num) for num in input().strip().split()]\n  arr=[0]*6\n  for k in range(1,c[0]+1):\n   arr[c[k]-1]+=1\n  arr.sort()\n  six=arr[0]\n  five=arr[1]-six\n  four=arr[2]-five\n  point=(six*4)+(five*2)+(four*1)+c[0]\n  if(point>final):\n   final=point\n   winner=j+1\n  winnerPoints[j+1]=point\n count=0\n for t in range(1,n+1):\n  if(winnerPoints[t]==final):\n   count+=1\n if(count>1):\n  print(\"tie\")\n elif(winner==1):\n  print(\"chef\")\n else:\n  print(str(winner))", "from collections import Counter\n\nfor _ in range(int(input())):\n N = int(input())\n max_points = [-1, [-1]]\n for player in range(N):\n  data = input().split()\n  storage_distinct = Counter(data[1:])\n  points = int(data[0])\n  \n  while len(storage_distinct) >= 4:\n   if len(storage_distinct) == 4:\n    points += 1\n   elif len(storage_distinct) == 5:\n    points += 2\n   elif len(storage_distinct) >= 6:\n    points += 4\n    \n   for i in list(storage_distinct.keys()):\n    storage_distinct[i] -= 1\n    if storage_distinct[i] == 0:\n     del storage_distinct[i]\n  \n  if points > max_points[0]:\n   max_points[0] = points\n   max_points[1] = [player]\n  elif points == max_points[0]:\n   max_points[1].append(player)\n   \n if len(max_points[1]) > 1:\n  print(\"tie\")\n elif max_points[1][0] == 0:\n  print(\"chef\")\n else:\n  print(max_points[1][0] + 1)", "for _ in range(int(input())):\n N = int(input())\n max_points = [-1, [-1]]\n for player in range(N):\n  data = input().split()\n  storage_distinct = set(data[1:])\n  points = int(data[0])\n  if len(storage_distinct) == 4:\n   points += 1\n  elif len(storage_distinct) == 5:\n   points += 2\n  elif len(storage_distinct) >= 6:\n   points += 4\n  \n  if points > max_points[0]:\n   max_points[0] = points\n   max_points[1] = [player]\n  elif points == max_points[0]:\n   max_points[1].append(player)\n   \n if len(max_points[1]) > 1:\n  print(\"tie\")\n elif max_points[1][0] == 0:\n  print(\"chef\")\n else:\n  print(max_points[1][0] + 1)", "def max_score(storage):\n \"\"\"Returns the max score for the given storage array\"\"\"\n s = len(storage)\n counts = {}\n for cookie in storage:\n  if cookie in counts:\n   counts[cookie] += 1\n  else:\n   counts[cookie] = 1\n\n # Count boxes of six\n while len(list(counts.keys())) >= 6:\n  minimum = min(counts.values())\n  s += 4 * minimum\n  to_delete = []\n  for cookie, count in list(counts.items()):\n   counts[cookie] -= minimum\n   if counts[cookie] == 0:\n    to_delete.append(cookie)\n  for key in to_delete:\n   counts.pop(key)\n # Count boxes of five\n while len(list(counts.keys())) >= 5:\n  minimum = min(counts.values())\n  s += 2 * minimum\n  to_delete = []\n  for cookie, count in list(counts.items()):\n   counts[cookie] -= minimum\n   if counts[cookie] == 0:\n    to_delete.append(cookie)\n  for key in to_delete:\n   counts.pop(key)\n # Count boxes of four\n while len(list(counts.keys())) >= 4:\n  minimum = min(counts.values())\n  s += 1 * minimum\n  to_delete = []\n  for cookie, count in list(counts.items()):\n   counts[cookie] -= minimum\n   if counts[cookie] == 0:\n    to_delete.append(cookie)\n  for key in to_delete:\n   counts.pop(key)\n return s\n\nT = int(input())\nwhile T > 0:\n N = int(input())\n max_s = -1\n max_idx = 0\n tied = False\n for idx in range(N):\n  row = list(map(int, input().split()))\n  score = max_score(row[1:])\n  if score > max_s:\n   max_s = score\n   max_idx = idx\n   tied = False\n  elif score == max_s:\n   tied = True\n if tied:\n  print('tie')\n elif max_idx == 0:\n  print('chef')\n else:\n  print(max_idx + 1)\n T -= 1\n", "t=int(input())\nfor _ in range(t):\n scores=[]\n \n n=int(input())\n for i in range(n):\n  items=list(map(int,input().split()))\n  p=items[0]\n  \n  iscore=0\n  m=[[] for j in range(p)]\n  for k in range(p):\n   for l in range(p):\n    if items[k+1] not in m[l]:\n\n     m[l].append(items[k+1])\n     break\n   #print m\n  #print m\n  for k in range(len(m)):\n   if len(m[k])==4:\n    iscore+=(4+1)\n   elif len(m[k])==5:\n    iscore+=(5+2)\n   elif len(m[k])==6:\n    iscore+=(6+4)\n   else:\n    iscore+=len(m[k])\n  scores.append(iscore)\n #print scores\n f=scores.index(max(scores))\n if scores.count(max(scores))>1:\n  print(\"tie\")\n elif f==0:\n  print(\"chef\")\n else:\n  print(f+1)", "for _ in range(int(input())):\n n = int(input())\n a = [list(map(int,input().split())) for _ in range(n)]\n p = list()\n for b in a:\n  ans = 0\n  d = [0]*6\n  for i in b[1:]:\n   d[i-1]+=1\n  d = sorted(d)\n  ans+=d[0]*4\n  ans+=(d[1]-d[0])*2\n  ans+=(d[2]-d[1])\n  ans+=b[0]\n  p.append(ans)\n if n==1: print(\"chef\")\n else:\n  s = sorted(p)\n  if s[n-1]==s[n-2]: print(\"tie\")\n  elif p[0]==max(p): print(\"chef\")\n  else: print(p.index(max(p))+1)", "for _ in range(int(input())):\n n = int(input())\n a = [list(map(int,input().split())) for _ in range(n)]\n p = list()\n for b in a:\n  ans = 0\n  d = [0]*6\n  for i in b[1:]:\n   d[i-1]+=1\n  d = sorted(d)\n  ans+=d[0]*4\n  if d[1] - d[0] > 0:\n   ans+=(d[1]-d[0])*2\n  if d[2] - d[1] - d[0] > 0:\n   ans+=(d[2]-d[1]-d[0])\n  ans+=b[0]\n  p.append(ans) \n s = sorted(p)\n if s[n-1]==s[n-2]: print(\"tie\")\n elif p[0]==max(p): print(\"chef\")\n else: print(p.index(max(p))+1)", "t = int(input())\nfor _ in range(t):\n n = int(input())\n c = []\n for _ in range(0,n):\n  c.append(list(map(int,input().split())))\n s = []\n for i in c:\n  s.append(len(set(i[1:])))\n for i in range(len(s)):\n  if s[i] == 4:\n   s[i] = 1+c[i][0]\n  elif s[i] == 5:\n   s[i] = 2+c[i][0]\n  elif s[i] == 6:\n   s[i] = 4+c[i][0]\n  else :\n   s[i] = c[i][0]\n m = max(s)\n if s.count(m) > 1:\n  print('tie')\n else:\n  j = s.index(m)\n  if j == 0:\n   print('chef')\n  else :\n   print(j+1)\n"]