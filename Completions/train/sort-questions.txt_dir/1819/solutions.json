["class Solution:\n \n     def __init__(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         \"\"\"\n         self.nums = nums\n         self.length = len(self.nums)\n         \n \n     def pick(self, target):\n         \"\"\"\n         :type target: int\n         :rtype: int\n         \"\"\"\n         first_idx = None\n         idx_count = 0\n         for i in range(self.length):\n             if self.nums[i] == target:\n                 if first_idx is None:\n                     first_idx = i\n                 idx_count += 1\n             elif first_idx is not None:\n                 break\n \n         if idx_count > 0:  \n             return int(idx_count * random.random() // 1) + first_idx\n \n \n # Your Solution object will be instantiated and called as such:\n # obj = Solution(nums)\n # param_1 = obj.pick(target)\n", "class Solution:\n \n     def __init__(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         \"\"\"\n         self.nums = nums\n         \n \n     def pick(self, target):\n         \"\"\"\n         :type target: int\n         :rtype: int\n         \"\"\"\n         return random.choice([i for i, v in enumerate(self.nums) if v == target])\n         \n \n \n # Your Solution object will be instantiated and called as such:\n # obj = Solution(nums)\n # param_1 = obj.pick(target)\n", "class Solution:\n \n     def __init__(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         \"\"\"\n         self.nums = nums;\n         \n         \n \n     def pick(self, target):\n         \"\"\"\n         :type target: int\n         :rtype: int\n         \"\"\"\n         indices = [i for i, x in enumerate(self.nums) if x == target]\n         return random.choice(indices)\n \n \n # Your Solution object will be instantiated and called as such:\n # obj = Solution(nums)\n # param_1 = obj.pick(target)\n", "class Solution:\n \n     def __init__(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         \"\"\"\n         self.nums = nums\n         \n \n     def pick(self, target):\n         \"\"\"\n         :type target: int\n         :rtype: int\n         \"\"\"\n         import random\n         # if only one element\n         if len(self.nums) == 1:\n             return 0\n         \n         ans = -1\n         idx = 0\n         for i, num in enumerate(self.nums):\n             if num == target:\n                 if ans == -1:\n                     ans = i\n                 else:\n                     if random.randint(0, idx) == 0:\n                         ans = i\n                 idx += 1\n         return ans\n         \n         # result = -1\n         # index = 0\n         # for i in range(0, len(self.nums), 1):\n         #     if self.nums[i] == target:\n         #         if result == -1:\n         #             result = i\n         #         else:\n         #             if random.randint(0, index) == 0:\n         #                 result = i\n         #         index += 1\n         # return result\n         \n         \n \n \n # Your Solution object will be instantiated and called as such:\n # obj = Solution(nums)\n # param_1 = obj.pick(target)\n", "class Solution:\n \n     def __init__(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         \"\"\"\n         self.nums = nums\n         \n \n     def pick(self, target):\n         \"\"\"\n         :type target: int\n         :rtype: int\n         \"\"\"\n         import random\n         \n         ans = -1\n         idx = 0\n         for i, num in enumerate(self.nums):\n             if num == target:\n                 if ans == -1:\n                     ans = i\n                 else:\n                     if random.randint(0, idx) == 0:\n                         ans = i\n                 idx += 1\n         return ans\n         \n         \n \n \n # Your Solution object will be instantiated and called as such:\n # obj = Solution(nums)\n # param_1 = obj.pick(target)\n", "class Solution:\n \n     def __init__(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         \"\"\"\n         self.nums = nums\n         \n     def pick(self, target):\n         \"\"\"\n         :type target: int\n         :rtype: int\n         \"\"\"\n         res = None\n         ct=0\n         for i,x in enumerate(self.nums):\n             if x == target:\n                 ct+=1\n                 pb = random.randint(1,ct)\n                 if pb == ct:\n                     res = i\n         return res\n                     \n         \n \n \n # Your Solution object will be instantiated and called as such:\n # obj = Solution(nums)\n # param_1 = obj.pick(target)\n", "class Solution:\n \n     def __init__(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         \"\"\"\n         self.nums = nums\n         self.length = len(nums)\n \n     def pick(self, target):\n         \"\"\"\n         :type target: int\n         :rtype: int\n         \"\"\"\n         result, index = self.nums.index(target), 1\n         for i in range(self.length):\n             num = self.nums[i]\n             if num == target and random.randint(0, index) is 0:\n                 result = i\n                 index += 1\n         return result\n \n # Your Solution object will be instantiated and called as such:\n # obj = Solution(nums)\n # param_1 = obj.pick(target)\n", "import random\n \n class Solution:\n \n     def __init__(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         \"\"\"\n         \n         self.nums = nums\n         \n \n     def pick(self, target):\n         \"\"\"\n         :type target: int\n         :rtype: int\n         \"\"\"\n         \n         result = None\n         seen = 0\n         \n         for i, num in enumerate(self.nums):\n             \n             if num == target:\n                 \n                 if not result:\n                     result = i\n                 else:\n                     #\n                     if random.randint(0, seen) == 0:\n                         result = i\n                 \n                 seen += 1\n         \n         print(\"saw\", seen)\n         \n         return result\n \n \n # Your Solution object will be instantiated and called as such:\n # obj = Solution(nums)\n # param_1 = obj.pick(target)"]