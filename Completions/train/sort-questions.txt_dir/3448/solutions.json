["def f(n):\n    return n * (n + 1) // 2 if (isinstance(n, int) and n > 0) else None\n", "def f(n):\n    return sum(range(1, n + 1)) if type(n) is int and n > 0 else None", "def f(n):\n    try:\n        return None if n <= 0 else sum(range(1,(n+1)))\n    except:\n        return None", "def f(n):\n    return ((n+1)/2)*n if isinstance(n,int) and n > 0 else None", "def f(n):\n    return None if type(n) != int or n < 1 else n*(n+1)/2", "def f(n):\n    return (n + 1) * n //2 if (type(n) is int and n>0) else None", "def f(n):\n    return n*(n+1)//2 if (isinstance(n,int) and n>0 ) else None", "from functools import reduce\ndef f(n):\n    return None if not isinstance(n, int) or n<1 else reduce(lambda x, y: x + y, range(1, n + 1))", "def f(n):\n    try:\n        x = int(n)\n        if int(n) < 0:\n            return None\n        elif int(n) > 0:\n            return sum([i for i in range(0, n+1)])\n        \n    except:\n        None\n    #pass\n", "from numbers import Number\ndef f(n):\n    return n*(n+1)/2 if isinstance(n, int) and n > 0 else None", "f = lambda n: (n**2+n)//2 if type(n)==int and n>0 else None", "def f(n):\n   return (isinstance(n,int) and n>0) and n*(n+1)/2 or None", "f = lambda n: (n/2)*(n+1) if type(n) == int and n>0 else None", "f = lambda n: n * (n + 1) / 2 if type(n) is int and n > 0 else None", "def f(n):\n    return (n * (n + 1)) >> 1 if isinstance(n,int) and n > 0 else None", "def f(n):\n    return n*(n+1)/2 if isinstance(n, int) and n > 0 else None", "def f(n):\n    if isinstance(n, int) and n >= 1:\n        return (n / 2) * (n + 1)\n    else: \n        return None", "def f(n):\n    return int((((n**2)-1) + (1+n))/2) if isinstance(n, int) and n > 0 else None", "def f(n):\n    if isinstance(n,int) == True and n > 0:\n        return int((n*(n+1))/2)\n    else:\n        return None", "def f(n):\n    try:\n        if n > 0 and type(n) is int:\n            return int((n*(n+1))/2)\n    except:\n        return None", "def f(n):\n    if type(n) == int and n >0:\n      return (1+n)*n/2\n    elif type(n) == str or type(n) == float or n < 0:\n      return None\n    else:\n      return None", "def f(n):\n    if isinstance(n,int):\n        if n>0:\n            sum=0\n            for i in range(0,n+1):\n                sum = sum +i\n            return sum    \n    return None", "def f(n):\n    if type(n)!=int:\n        return None\n    return sum([x for x in range(n+1)]) if n>0 else None", "def f(n):\n    n_ = None\n    try:\n        n_ = float(n)\n    except:\n        return(None)\n    \n    return(n_*(n_+1)/2 if (n_.is_integer() and n_ > 0) else None)", "def f(n):\n  try: \n    if n > 0:\n      return sum(range(1, n+1))\n  except:\n    return None", "def f(n):\n    try :\n        if n%1 == 0 and n > 0: \n           return  (sum(range(0,n+1,1))) \n        else: return None\n    except TypeError:\n        return None", "def f(n):\n    try:\n        x = int(n)\n        if int(n) < 0:\n            return None\n        elif int(n) > 0:\n            return sum([i for i in range(0, n+1)])\n        \n    except:\n        None", "def f(n):\n    if type(n) is not int or n <= 0:\n        result = None\n    else:\n        lst = [i for i in range(0,n+1)]\n        result = sum(lst)\n    return result", "def f(n):\n    if(type(n) != int):\n        return None\n    if (n>0): \n        return n*(n+1)/2\n    return None", "def f(n):\n    if type(n)==int and n>0:\n        return sum([x for x in range(n+1)])\n    else:\n        return None", "def f(n):\n    tot = 0\n    if type(n) == int and n > 0:\n        for number in range(1, n + 1):\n            tot += number\n        return tot\n    return None", "def f(n):\n    if isinstance(n, int) and n > 0:\n        nn = [i for i in range(n+1)]\n        return sum(nn)\n\n#    sum = 0\n#    if isinstance(n, int):    \n#        if n > 0:\n#            for i in range(n+1):\n#                sum += i\n#            return sum\n#        return None\n#    else:\n#        return None\n", "def f(n):\n    if type(n) == str or type(n) == float or n < 1:\n        return None\n    return sum(range(1, n+1))", "def f(n):\n    return None if type(n) in [str, float] or n < 1 else sum([i for i in range(0, n+1)])", "def f(n):\n    try:\n        return n*(n+1)/2 if n>0 and (n - round(n) == 0) else None\n    except TypeError:\n        return None", "def f(n):\n    if isinstance(n,int) and n>0: return n*(n+1)/2", "def f(n):\n    if isinstance(n, int) and n > 0:\n        return n * -~n >> 1", "def f(n):\n    if type(n) == int and n > 0:\n        return (n/2)*(n+1)", "def f(n):\n    return n*n/2 + n/2 if type(n) is int and n > 0 else None", "def f(n):\n    if type(n) == int and n > 0: return sum(range(1, n + 1))", "f=lambda n:int==type(n)and n>0and-~n*n/2or None", "def f(n):\n    if type(n) is int:\n        if n > 0:\n            return n * (n + 1) / 2\n        else: \n            return None\n    else: \n        return None", "def f(n):\n    if type(n) == float or type(n) == str or n == 0 or n <= -1:\n        return None\n    else:\n        return sum([elem for elem in range(0, n + 1)])", "def f(n):\n    # 1 + 2 + 3 + n-2 + n-1 + n \n    # 1+n + 2+n-1 + 3+n-2 + ...\n    if type(n) is int and n >= 1:\n        number_of_elements = n / 2\n        total_elements = (n + 1) * number_of_elements\n        return total_elements\n    else: \n        return None\n", "def f(n):\n    print('The number is' + str(n))\n    if n == 1:\n        return n\n    if type(n) != int or n <= 0:\n        return None\n    return (n / 2) * (n+1)", "def f(n):\n    return sum(list(range(0, n+1))) if isinstance(n, int) and n > 0 else None\n", "def f(n):    \n    return sum(i for i in range(int(n) + 1)) if isinstance(n, int) and n > 0 else None\n", "def f(n):\n    if type(n) is int and n>0:\n        return int(n*(n+1)/2)\n    else:\n        return None\n        \n", "def f(n):\n    if type(n) == type(1) and n > 0:\n        return (1 + n)*n/2\n    else:\n        return None", "def f(n):\n    if type(n) == int and int(n) > 0:\n        return (n+1)*n/2", "def f(n):\n    try:\n        val = int(n)\n        if val <= 0:\n            return None\n    except ValueError:\n        return None\n    else:\n        i = 0\n        nums = []\n        while i < n:\n            if type(n) != int:\n                return None\n            else:\n                i+=1\n                nums.append(i)\n        return sum(nums)\n", "f = lambda n: (1+n) * n // 2 if type(n) == int and n > 0 else None", "def f(n):\n    n = n\n    total = 0\n    if type(n) != int:\n        return None\n    if n <= 0:\n        return None\n\n    while n >=0:\n        total +=n\n        n-=1\n        \n    return total\n    \n\n", "def f(n):\n    try:\n        int(n)\n        if n <= 0:\n            return None\n        else:\n            return sum(range(n+1))\n    except:\n        return None\n", "def f(n):\n    if isinstance(n, int) == True:\n        sum = 0\n        if n > 0:\n            for i in range(n + 1):\n                sum +=i\n            return sum\n        else:\n            return None\n    else:\n        return None", "def f(n):\n    if isinstance(n,str):\n        return None\n    if n <=0:\n        return None\n    if n!=int(n):\n        return None\n    \n    return   n*(n+1)//2", "def f(n):\n    if isinstance(n, str):\n        return None\n    if isinstance(n, float):\n        return None\n    if n <= 0:\n        return None\n    count = 0\n    for i in range(n+1):\n        count += i\n    \n    return count", "def f(n):\n    if isinstance(n, int) and n > 0:\n            sum = 0\n            while int(n) > 0:\n                sum += n\n                n -=1\n            return sum\n    return None\n", "def f(n):\n    total = 0\n    if isinstance(n, int) and n > 0:\n        for b in range(0, n+1, 1):\n            total = total+b\n        return total\n    else: \n        return None\n", "def f(n):\n    \n    return sum(range(1,n+1,1)) if str(n).isdigit() and int(n) > 0 else None", "def f(n):\n    if isinstance(n, int) == False or n <= 0:\n        return None\n    else:\n        sum = 0\n        for i in range(1, n+1):\n            sum += i\n        return sum\n", "def f(n):\n    sum = 0\n    #isinstance(n, int) is asking that n isinteger\n    if isinstance(n, int) == True:\n        if n > 0:\n            for i in range(n):\n                i = i + 1\n                sum += i\n            return sum\n        #if n<=0\n        else:\n            return None\n        \n    #if False\n    else:\n        return None\n", "def f(n):\n    sum = 0\n    if isinstance(n, int) == True:\n        if n > 0:\n            for i in range(n):\n                i = i + 1\n                sum += i\n            return sum\n        else:\n            return None\n    else:\n        return None\n", "def f(n):\n  if not isinstance(n, int): return\n  result = 0\n  for x in range(n + 1):\n    result += x\n  return result if result > 0 else None", "def f(n):\n    if isinstance(n , int) and n > 0:\n        return int((n/2)*(1+n))", "def f(n):\n    sum=0\n    if type(n)==int:\n        if n<=0:\n            return None\n        for x in range(n+1):\n            sum=sum+x\n        return sum\n    else:\n        return None\n    pass", "def f(n):\n    if type(n)!= int:\n        return None\n    if n <= 0 :\n        return None\n    else:\n        \n        return sum([i for i in range((n)+1)])\n", "def f(n):\n    if not type(n) == int or not n > 0:\n        return\n    else: \n        result = (n+1) * (n/2)\n    return result", "def f(n):\n    \n    if isinstance(n, int) and n >0:\n\n        return (1/2)*n*(n+1)\n    \n    else:\n        \n        return None", "def f(n):\n    if type(n) == str:\n        return None\n    elif n < 0:\n        return None\n    if type(n) == float:\n        return None\n    if n == 0:\n        return None\n    suma = 0\n    for i in range(n+1):\n        suma+=i\n    return suma", "def f(n):\n    if type(n) != int or n < 1:\n        return None\n    else:\n        return (n * (n+1)) / 2", "def f(n):\n    try:\n        if n > 0:\n            return sum(range(0, n+1))\n        else:\n            return\n    except:\n        return\n", "def f(n):\n    try:\n        return sum(range(n+1)) if sum(range(n+1)) else None\n    except:\n        return None", "def f(n):\n    if type(n) == int and n>0:\n        a =0\n        sum = 0\n        while a < n:\n            a = a + 1\n            sum = sum + a\n        return sum", "def f(n):\n    if isinstance(n, int) and n > 0:\n        return sum(x for x in range(1, n+1))", "def f(n):\n    if type(n) == int:\n        counter = 0\n        if n > 0:\n            for i in range(n + 1):\n                counter += i\n        \n        if counter > 0:\n            return counter\n        else:\n            return None\n    \n    return None", "def f(n):\n    if type(n) != int:\n        return None\n    if n <= 0:\n        return None\n    if n == int(n):\n        return 0.5 * n * (n + 1)\n    else:\n        return None", "def f(n):\n    if isinstance(n, int) == True and n>0:\n        return sum(range(0,n+1))", "def f(n):\n    return (n /2)*(1+ n) if type(n) ==int and n>0 else None", "def f(n):\n    print(n) \n    if isinstance(n, int) and n > 0:\n        x = 0\n        y = 0\n        while x <= n:\n            y += x\n            x += 1 \n        return y\n    else:\n        return None", "def f(n):\n    if type(n) is not int or int(n) <= 0:\n        return \n    else:\n        return (n*(n+1))//2 \n    \n", "def f(n):\n    if type(n)==int:\n        if n >0:\n            return sum(range(n+1))\n    else:\n        return None\n", "def f(n): return sum([x for x in range(n+1)]) if isinstance(n,int) and n>=1 else None", "from math import factorial\ndef f(n):\n    if type(n) != int: \n        return None\n    else:\n        if n<=0: \n            return None\n        p=0\n        for k in range(1,n+1):\n            p+=k\n        return p\n\n", "def f(n): \n    if isinstance(n,int) and n>0: return sum(range(0,n+1))\n    \n", "def f(n):\n    if isinstance(n, int) and n > 0: return sum(range(1+n))", "def f(n):\n    if isinstance(n, int) and n > 0: return sum([a for a in range(0,n+1)])\n", "def f(n):\n    if isinstance(n, int) and n > 0:\n        return sum([a for a in range(0,n+1)])\n    else:\n        return None", "def f(n):\n    if isinstance(n, int) and n > 0:\n        return (n*(2+(n-1)))/2 if n > 0 else None", "def f(n):\n    if isinstance(n, int) != True or n <= 0:\n        return None\n    else:\n        if n == 1:\n            return 1\n        else:\n            return (1 + n) * (n / 2)", "def f(n):\n    if isinstance(n,int) and n>=1:\n        return n*(n+1)/2\n    else: return None", "def f(n):\n    if isinstance(n, int)==True and n>0:\n        return sum(list(range(0,n+1)))\n    else:\n        None", "def f(n):\n    x = []\n    if type(n) == int and int(n) > 0:\n        n = abs(n)\n        for i in range(1,n + 1):\n            x.append(i)\n        return (sum(x))\n    else:\n        return None", "def f(n):\n    if isinstance(n,int) == True:\n        if n > 0:\n            sum = 0\n            for num in range(0, n+1, 1):\n                sum = sum+num\n            return sum\n        else:\n            None\n    else:\n        return None\n            \n        \n", "def f(n):\n    if type(n) == int and n > 0:\n      num = 0\n      for i in range(n+1):\n         num += i\n      return num  ", "def f(n):\n    print(n)\n    return (n)*(n+1)//2 if (isinstance(n, int) and n>0) else None"]