["class Solution:\n    def xorOperation(self, n: int, start: int) -> int:\n        \n        if n == 0:\n            return 0\n        \n        i = 1\n        res = start\n        while i != n:\n            res = res ^ (2*i + start)\n            i += 1\n        return res\n", "class Solution:\n    def xorOperation(self, n: int, start: int) -> int:\n        nums = [0]*n\n        res= 0\n        for i in range(n):\n            nums[i] = start + 2*i\n            res = res ^ nums[i]\n        return res\n", "import functools\n\n\nclass Solution:\n    \n    \n    def gen_array(self, n, s):\n        for x in range(n):\n            yield s + x * 2\n            \n            \n    def xorOperation(self, n: int, start: int) -> int:        \n        return functools.reduce(lambda a, b: a^b, self.gen_array(n, start))", "class Solution:\n    def xorOperation(self, n: int, start: int) -> int:\n        \n        array = [start+2*i for i in range(n)]\n        res = start\n        for i in range (1,len(array)):\n            res ^=array[i]\n            \n        return res\n", "class Solution:\n    def xorOperation(self, n: int, start: int) -> int:\n        xor=0\n        for i in range(n):\n            xor^=start+(2*i)\n        return xor\n", "class Solution:\n    def xorOperation(self, n: int, start: int) -> int:\n        \n        a = start\n        \n        for i in range(1,n):\n            \n            a = a^(start+2*i)\n            \n        return a\n            \n", "class Solution:\n    def xorOperation(self, n: int, start: int) -> int:\n        res = 0\n        for i in range(n):\n            res ^= start + 2 * i\n        return res", "class Solution:\n    def xorOperation(self, n: int, start: int) -> int:\n        res = start\n        for i in range(1,n):\n            res ^= i*2+start\n        return res", "class Solution:\n    def xorOperation(self, n: int, start: int) -> int:\n        nums = []\n        for i in range(n):\n            nums.append(start + (2 * i))\n        result = 0\n        for n in nums:\n            result = result ^ n\n        return result\n"]