["import re\n\nREPLACMENTS  = [\"BFPV\", \"CGJKQSXZ\", \"DT\",\"L\",\"MN\",\"R\"]\nER1, ER2     = \"HW\", \"AEIOUY\"\n\nTABLE_ERASE1 = str.maketrans(\"\", \"\", ER1)\nTABLE_NUMS   = str.maketrans( ''.join(REPLACMENTS), ''.join( str(n)*len(elt) for n,elt in enumerate(REPLACMENTS, 1)) )\nTABLE_ERASE2 = str.maketrans(\"\", \"\", ER2)\n\n\ndef formatSoundex(w):\n    s = w[0]*(w[0] in ER1+ER2) +  re.sub(r'(\\d)\\1*', r'\\1', w.translate(TABLE_ERASE1).translate(TABLE_NUMS)).translate(TABLE_ERASE2)\n    return ((w[0] if s[0].isdigit() else s[0]) + s[1:] + \"000\")[:4]\n\ndef soundex(name):\n    return ' '.join(formatSoundex(w.upper()) for w in name.split(\" \"))", "import re\ndef soundex(name):\n    newNameLis = [x[0].upper()+x.lower() for x in name.split(\" \")]\n    newNameLis = [x[0] + x[1]+x[2:].translate(str.maketrans('', '','hw')) for x in newNameLis]\n    newNameLis = [x[0] + x[1:].translate(str.maketrans('bfpvcgjkqsxzdtlmnr', '111122222222334556','')) for x in newNameLis]\n    newNameLis = [x[0] + re.sub(r'(\\d)\\1*', r'\\1',x[1:]) for x in newNameLis]\n    newNameLis = [x[0] + x[1]+x[2:].translate(str.maketrans('', '','aeiouy')) for x in newNameLis]\n    newNameLis = [x[0] + \"\".join([i for i in x[2:] if i.isdigit()]) for x in newNameLis]\n    return \" \".join([(x+'000')[:4] for x in newNameLis])\n\n", "T = str.maketrans('BFPVCGJKQSXZDTLMNR','111122222222334556')\nV = str.maketrans({v:None for v in 'AEIOUY'})\n\ndef soundex(name):\n    return ' '.join(wordex(w) for w in name.upper().split())\n    \ndef wordex(word):\n    w = (word[0] + word[1:].replace('W', '').replace('H', '')).translate(T)\n    for c in '123456':\n        while c + c in w: w = w.replace(c + c, c)\n            \n    return ((word[0] if w[0].isdigit() else w[0]) + w[1:].translate(V) +'000')[:4]", "from itertools import groupby\n\ntr = [  (0,), ('b','f','p','v'), ('c','g','j','k','q','s','x','z'), ('d','t'), ('l'), ('m','n'), ('r')  ]\n\ndef soundex(name):\n    name = name.lower().split(' ')\n    \n    first_l = [ e[0].upper() for e in name ] \n    \n    let_to_dig = loop( lambda x: indx(x, tr), loop( lambda x: x, name, lambda x: x not in 'hw' ) )\n    \n    del_duble = loop( lambda x: x[0], let_to_dig, funk2 = lambda x:groupby(x) )\n    \n    del_vowel = [[e[0],''.join([ x for i,x in enumerate(e) if x.isdigit() and i  ])] for e in del_duble ]\n    \n    return ' '.join((([first_l[i] ,e[0].upper()][all((e[0].isalpha(), e[0] == first_l[i]))] + ['',e[0]][all((e[0].isdigit(), first_l[i] in 'HW'))]) + e[1]).ljust(4,\"0\")[:4] \n              for i,e in enumerate(del_vowel) )\n    \ndef indx(elem, arr):\n    for i, x in enumerate(arr):\n        if elem in x:\n            return str(i)\n    return elem\n            \ndef loop(func1, arr, excuse1=lambda x:x , excuse2=lambda x:x, funk2=lambda x:x):\n    return [ [func1(x) for x in funk2(e) if excuse1(x)] for e in arr if excuse2(e) ]\n", "import re\ndef soundex(s):\n    d, li = {k:i for i,j in zip(list(range(1, 7)), ['bfpv','cgjkqsxz','dt','l','mn','r'])for k in j}, []\n    for i in s.split():\n        first = i[0]\n        i = first+re.sub(r'[hwHW]','',i[1:])\n        i = re.sub(r'[^aeiouy]', lambda x: str(d.get(x.group().lower(), x.group())), i)\n        i = re.sub(r'(\\d)(\\1+)', r'\\1', i)\n        i = i[0] + re.sub(r'[aeiouyAEIOUY]', '', i[1:])\n        li.append(first.upper() + (f\"{i[1:]:<03}\")[:3])\n    return \" \".join(li)", "def soundex(name):\n    consonants_to_digits = {c: str(i)\n        for i, consonants in enumerate(\"bfpv cgjkqsxz dt l mn r\".split(), 1)\n        for cs in consonants\n        for c in cs}\n    def soundex_word(word):\n        result = word.lower()\n        result = (c for i, c in enumerate(result) if i == 0 or c not in \"hw\")\n        result = (consonants_to_digits.get(c, c) for c in result)\n        result = uniq(result)\n        result = (c for i, c in enumerate(result) if i == 0 or c not in \"aeiouy\")\n        result = \"\".join(result)\n        result = word[0].upper() + result[1:]\n        result = format(result, \"0<4.4\")\n        return result\n    return \" \".join(soundex_word(word) for word in name.split())\n\ndef uniq(iterable):\n    iterable = iter(iterable)\n    previous = next(iterable)\n    yield previous\n    for elem in iterable:\n        if elem != previous:\n            yield elem\n            previous = elem", "CONS_VAL = {\n    'b': '1', 'f': '1', 'p': '1', 'v': '1', 'c': '2', 'g': '2',\n    'j': '2', 'k': '2', 'q': '2', 's': '2', 'x': '2', 'z': '2',\n    'd': '3', 't': '3', 'l': '4', 'm': '5', 'n': '5', 'r': '6' }\n\ndef soundex(name):\n    result = []\n    \n    for word in name.lower().split():\n        # save the initial\n        first = word[0]\n        \n        # remove h, w\n        word = [first] + [ c for c in word[1:] if c not in 'hw' ]\n        \n        # replace consonants\n        word = [ CONS_VAL.get(c, c) for c in word ]\n        \n        # remove duplicates\n        word = [first] + [ c for i, c in enumerate(word[1:]) if word[i] != c ]\n        \n        # remove vowels\n        word = [first] + [ c for c in word[1:] if c not in 'aeiouy' ]\n        \n        # append zeros and cut\n        word = (word + ['0'] * 3)[:4]\n        result.append( ''.join(word) )\n    \n    return ' '.join(result).upper()", "from itertools import groupby,islice\n\ntr=str.maketrans('ABCDEFGIJKLMNOPQRSTUVXYZ','012301202245501262301202','HW')\n\ndef soundex(n):\n    n=n.upper()\n    ws=[]\n    for w in n.split(' '):\n        s=[]\n        s=list(islice((vg[0] for i,vg in enumerate(groupby(w.translate(tr))) if vg[0]!='0' or i==0),4))\n        if s[0]=='0' or s[0]==w[0].translate(tr):\n            s[0]=w[0]\n        else:\n            s.insert(0,w[0])\n        ws.append(''.join(s)[:4].ljust(4,'0'))\n    return ' '.join(ws)\n", "import re\ndef soundex(s):\n    d, li = {k:i for i,j in zip(list(range(1, 7)), ['bfpv','cgjkqsxz','dt','l','mn','r'])for k in j}, []\n    for i in s.split():\n        first = i[0].upper()\n        i = re.sub(r'(\\d)(\\1+)',r'\\1',re.sub(r'[^aeiouy]',lambda x:str(d.get(x.group().lower(),x.group())),first+re.sub(r'[hwHW]','',i[1:])))\n        i = i[0] + re.sub(r'[aeiouyAEIOUY]', '', i[1:])\n        li.append(first + (f\"{i[1:]:<03}\")[:3])\n    return \" \".join(li)", "import re\n\ndef soundex(name):\n    sounds = []\n    namelist = name.split()\n    \n    \n    \n    for namey in namelist:\n        firstletter = namey[0].upper()\n        temp = namey.lower()\n        temp = re.sub('[hw]', \"\", temp)\n        temp = re.sub('[aeiouy]', \"*\", temp)\n        temp = re.sub('[bfpv]', \"1\", temp)\n        temp = re.sub('[cgjkqsxz]', \"2\", temp)\n        temp = re.sub('[dt]', \"3\", temp)\n        temp = re.sub('[l]', \"4\", temp)\n        temp = re.sub('[mn]', \"5\", temp)\n        temp = re.sub('[r]', \"6\", temp)\n        temp = re.sub(r'(.)\\1+', r'\\1', temp) \n        \n        if firstletter in [\"H\", \"W\"]:\n            tempcode = firstletter + temp + \"0000\"\n        else:\n            tempcode = firstletter + temp[1:] + \"0000\"\n        tempcode = re.sub(\"[*]\", \"\", tempcode)\n        \n        sounds.append(tempcode[0:4])\n        \n   \n        \n    \n    return \" \".join(sounds)\n"]