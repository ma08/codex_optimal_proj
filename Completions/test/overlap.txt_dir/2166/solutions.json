["input()\nt = list(map(int, input().split()))\ns, m = 0, 1000000007\np = {i for i, q in enumerate(t, 1) if q == -1}\nn, k = len(p), len(p - set(t))\nd, c = 2 * (n & 1) - 1, 1\nfor j in range(n + 1):\n    d = -d * max(1, j) % m\n    if n - j <= k:\n        s += c * d\n        c = c * max(1, n - j) * pow(k - n + j + 1, m - 2, m) % m\nprint(s % m)", "MOD = 10**9+7\nn = int(input())\n\nnotUsed = set(range(1, n+1))\nchairs = set()\nfor i, a in enumerate(map(int, input().split()), 1):\n    if a == -1:\n        chairs.add(i)\n    else:\n        notUsed -= {a}\nfixed = len(chairs & notUsed)\n\nm = len(notUsed)\nU = m\nfact = [0]*(U+1)\nfact[0] = 1\nfor i in range(1, U+1):\n    fact[i] = fact[i-1]*i % MOD\n\n\ninvfact = [0]*(U+1)\ninvfact[U] = pow(fact[U], MOD-2, MOD)\nfor i in reversed(list(range(U))):\n    invfact[i] = invfact[i+1]*(i+1) % MOD\n\n\ndef nCr(n, r):\n    if r < 0 or n < r:\n        return 0\n    return fact[n]*invfact[r]*invfact[n-r]\n\n\nans = fact[m]\nfor k in range(1, fixed+1):\n    ans += nCr(fixed, k)*fact[m-k]*(-1)**k\n    ans %= MOD\nprint(ans)\n"]