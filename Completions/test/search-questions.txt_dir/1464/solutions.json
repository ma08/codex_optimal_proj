["import re\nimport itertools\nfrom collections import Counter\n\nclass Task:\n    strings = []\n    answer = \"\"\n\t\n    def getData(self):\n        numberOfStrings = int(input())\n        for i in range(0, numberOfStrings):\n            self.strings += [input()]\n\t\n    def solve(self):\n        badStrings = set()\n        for current in self.strings:\n            for left in range(0, len(current)):\n                for right in range(left + 1, len(current) + 1):\n                    badStrings.add(current[left : right])\n        alphabet = []\n        for character in range(ord('a'), ord('z') + 1):\n            alphabet += [chr(character)]\n        \n        for answerLength in range(1, 21 + 1):\n            for p in itertools.product(alphabet, repeat = answerLength):\n                string = re.sub(\"[^\\w]\", \"\", str(p));\n                if string not in badStrings:\n                    self.answer = string\n                    return\n\n    def printAnswer(self):\n        print(self.answer)\n\ntask = Task();\ntask.getData();\ntask.solve();\ntask.printAnswer();\n", "3\n\nn = int(input())\nlst = [input() for _ in range(n)]\nalf = [chr(ord('a') + _) for _ in range(26)]\nans = None\nfor a in alf:\n    if not [1 for w in lst if w.find(a) != -1]:\n        ans = a\n        break\nif ans is not None:\n    print(ans)\nelse:\n    for a in alf:\n        for b in alf:\n            t = a + b\n            if not [1 for w in lst if w.find(t) != -1]:\n                ans = t\n                break\n        if ans is not None:\n            print(ans)\n            break\n", "n = int(input())\nt = ' '.join(input() for i in range(n))\nans = 0\nfor i in 'abcdefghijklmnopqrstuvwxyz':\n    if not i in t:\n        ans = i\n        break\nif not ans:\n    for i in 'abcdefghijklmnopqrstuvwxyz':\n        for j in 'abcdefghijklmnopqrstuvwxyz':\n            if not i + j in t:\n                ans = i + j\n                break\n        if ans: break\nprint(ans)", "from itertools import *\nalphabet=\"abcdefghijklmnopqrstuvwxyz\";\n\ndef isValid(s, names):\n    for name in names:\n        if name.find(s)!=-1:\n            return  False\n    return True\n\ndef newProblem(names):\n    for i in range(1,3):\n        for s in product(alphabet, repeat=i):\n            st=\"\"\n            for c in s:\n                st+=c\n            if isValid(st, names):\n                return st\n\nn=int(input())\nnames=[]\nfor i in range(0,n):\n    name= input()\n    names.append(name)\nprint(newProblem(names))\n\n\n\n", "from itertools import *\nalphabet=\"abcdefghijklmnopqrstuvwxyz\";\n\ndef isValid(s, names):\n    for name in names:\n        if name.find(s)!=-1:\n            return  False\n    return True\n\ndef newProblem(names):\n    for i in range(1,3):\n        for s in product(alphabet, repeat=i):\n            st=\"\"\n            for c in s:\n                st+=c\n            if isValid(st, names):\n                return st\n\nn=int(input())\nnames=[]\nfor i in range(0,n):\n    name= input()\n    names.append(name)\nprint(newProblem(names))\n\n\n\n", "from itertools import *\nalphabet=\"abcdefghijklmnopqrstuvwxyz\";\n\ndef newProblem(names):\n    for i in range(1,3):\n        for s in product(alphabet, repeat=i):\n            st=\"\"\n            for c in s:\n                st+=c\n            if names.find(st)==-1:\n                return st\n\nn=int(input())\nnames=\"\"\nfor i in range(0,n):\n    name= input()\n    names+=name+ \" \"\nprint(newProblem(names))", "from itertools import *\nalphabet=\"abcdefghijklmnopqrstuvwxyz\";\n\ndef newProblem(names):\n    for i in range(1,3):\n        for s in product(alphabet, repeat=i):\n            st=\"\"\n            for c in s:\n                st+=c\n            if names.find(st)==-1:\n                return st\n\nn=int(input())\nnames=\"\"\nfor i in range(0,n):\n    name= input()\n    names+=name+ \" \"\nprint(newProblem(names))", "from itertools import *\nalphabet=\"abcdefghijklmnopqrstuvwxyz\";\n\ndef newProblem(names):\n    for i in range(1,3):\n        for s in product(alphabet, repeat=i):\n            st=\"\".join(s)\n            if names.find(st)==-1:\n                return st\n\nn=int(input())\nnames=[]\nfor i in range(0,n):\n    name= input()\n    names.append(name)\nnamesstr=\" \".join(names)\nprint(newProblem(namesstr))", "n = int(input())\nall = set()\nfor w in range(n):\n\ts = input()\n\tfor i in range(len(s) + 1):\n\t\tfor j in range(i):\n\t\t\tall.add(s[j:i])\ncnt = 0\nlimit = 26\nl = 1\nwhile True:\n\ts = ''\n\ttmp = cnt\n\tfor i in range(l):\n\t\ts = chr(ord('a') + tmp % 26) + s\n\t\ttmp //= 26\n\tif s not in all:\n\t\tprint(s)\n\t\tbreak\n\tcnt += 1\n\tif cnt == limit:\n\t\tcnt = 0\n\t\tlimit *= 26\n\t\tl += 1\n", "cs1 = {chr(x) for x in range(ord('a'), ord('z') + 1)}\ncs2 = {x + y for x in cs1 for y in cs1}\nfor i in range(int(input())):\n    s = input()\n    for i in range(len(s) - 1):\n        cs1.discard(s[i:i + 1])\n        cs2.discard(s[i:i + 2])\n    cs1.discard(s[len(s) - 1:len(s)])\nprint(min(cs1) if cs1 else min(cs2))", "I=input\ns=' '.join(I()for _ in '0'*int(I()))\nR=list(map(chr,range(122,96,-1)))\nfor i in R:\n\tfor j in R:\n\t\tif s.count(i+j)==0:r=i+j\nfor i in R:\n\tif s.count(i)==0:r=i\nprint(r)", "n=int(input())\nl=[]\nfor i in range(n):\n\tl+=[input()]\ns=\"+\".join(l)\t\nq=\"abcdefghijklmnopqrstuvwxyz\"\n\nfor i in q:\n\tif i not in s:\n\t\tprint(i)\n\t\tbreak\nelse:\t\t\n\tfor i in q:\n\t\tfor j in q:\n\t\t\tif i+j not in s:\n\t\t\t\tprint(i+j)\n\t\t\t\treturn", "def ts(d,l):\n    for i in range( len(l)):\n        if d in l[i] :\n            return(True)  \n    return(False)\ndef main():\n    n=int(input())\n    l=[]\n    d=''\n    f=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n    for i in range(n):\n        l.append(input())\n    for j in range(20):\n        for k in range (len(f)):\n            for i in range(len(f)):\n                d+=f[i]\n                if ts(d,l):\n                    d=d[:-1]\n                else :\n                    return(d)\n            d=d[:-1]\n            d+=f[k]\n        \nprint(main())\n\n", "alpha = \"abcdefghijklmnopqrstuvwxyz\"\nn = int(input())\ns = \"\"\nfor _ in range(n):\n  s += input() + \" \"\nfor x in alpha:\n  if x not in s:\n    print(x)\n    break\nelse:\n  for i in alpha:\n    for j in alpha:\n      if i+j not in s:\n        print(i+j)\n        quit()", "alpha = \"abcdefghijklmnopqrstuvwxyz\"\nn = int(input())\ns = \"\"\nfor _ in range(n):\n  s += input() + \" \"\nfor x in alpha:\n  if x not in s:\n    print(x)\n    break\nelse:\n  for i in alpha:\n    for j in alpha:\n      if i+j not in s:\n        print(i+j)\n        quit()", "n=int(input())\nch=\"\"\nwhile(n):\n    sh=input()\n    ch+=' ' +sh\n    n-=1\nl=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\nt=False\nfor x in l:\n    if x not in ch:\n        t=True\n        print(x)\n        break\nif not t:\n    for i in range(len(l)):\n        if not t:\n            for j in range(len(l)):\n                s=l[i]+l[j]\n                if s not in ch :\n                    print (s)\n                    t=True\n                    break\n", "n=int(input())\nalph=\"abcdefghijklmnopqrstuvwxyz\"\nch=\"\"\nfor x in range(n):\n    ch+=\" \"+input()\n\ndef f():\n    ch1=\"\"\n    j=0\n    for k in range(26):\n        for i in range(26):\n            if ch1+alph[i] not in ch:\n                print(ch1+alph[i])\n                return\n        ch1=alph[j]\n        j+=1\n\nf()\n", "n=int(input())\nalph=\"abcdefghijklmnopqrstuvwxyz\"\nL=[]\nfor x in range(n):\n    L.append(input())\n \ni=0\nj=0\nk=-1\nch=alph[0]\nwhile 1:\n    if ch not in L[i]:\n        i=i+1\n    else:\n        j=j+1\n        if (j>=26):\n            if (j>0) and (j%26 ==0):\n                k=k+1\n            ch=alph[k]+alph[j%26]\n        else:\n            ch=alph[j]\n        i=0\n    if i==n:\n        break\nprint(ch)\n \n", "a=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\ndef fed(n):\n  for j in(a) :\n    for k in(a) :\n      x=True\n      for i in range (n):\n        if (j+k in l[i])==False:\n          x=True\n        else :\n          x=False\n          break\n      if x==True:\n        return(j+k)\nn=int(input())\nl=[0]*n\nfor i in range (n):\n  l[i]=input()\ns=set([])\nfor i in range (n) :\n  s=s|set(l[i])\nif s!=set(a):\n  for j in range(len(a)):\n    if (a[j] in s)==False:\n      print(a[j])\n      break\nelse :\n  print(fed(n))", "from string import ascii_lowercase\ndict={}\nf=0\nn=int(input())\nk=0\ns=\"\"\nl=[]\nl1=[]\nm=0\nfor i in range(0,n):\n    s=input()\n    l1.append(s)\nl1 = [i.strip() for i in l1]\nstr=\"a\"\nwhile f==0:\n    m=0\n    for i in range(0,n):\n        s=''.join(l1[i])\n        if str in s:\n            m=m+1\n    if m!=0:\n            if str[k]==\"z\":\n                j=k\n                while(str[j]=='z' and j>=0):\n                    str=str.replace(str[k],\"a\")\n                    j=j-1\n                if(j==-1):\n                    str=str+\"a\"\n                    k=k+1\n                else:\n                    str=str[:j]+chr(ord(str[j])+1)+str[j+1:]\n            else:\n                str=str[:k]+chr(ord(str[k])+1)\n    else:\n        f=1\n        break;\nprint(str)", "n=int(input())\n\nl=[]\n\nfor i in range(n):\n\n\tl+=[input()]\n\ns=\"+\".join(l)\t\n\nq=\"abcdefghijklmnopqrstuvwxyz\"\n\n\n\nfor i in q:\n\n\tif i not in s:\n\n\t\tprint(i)\n\n\t\tbreak\n\nelse:\t\t\n\n\tfor i in q:\n\n\t\tfor j in q:\n\n\t\t\tif i+j not in s:\n\n\t\t\t\tprint(i+j)\n\n\t\t\t\treturn\n\n\n\n# Made By Mostafa_Khaled\n", "n = int(input())\nsingle = []\ndouble = []\ntitlesingle = []\ntitledouble= []\nfor i in range(n):\n    x = input()\n    l = list(x)\n    titlesingle.extend(l)\n    if len(x) > 1:\n        for j in range(1, len(x)):\n            s = x[j - 1] + x[j]\n            titledouble.append(s)\nsets = set(titlesingle)\nsetd = set(titledouble)\nfor i in range(26):\n    s = chr(ord('a') + i)\n    single.append(s)\nfor i in range(26):\n    for j in range(26):\n        s = chr(ord('a') + i) + chr(ord('a') + j)\n        double.append(s)\nif len(sets) < 26:\n    ls = list(set(single) - sets)\n    ls.sort()\n    print(ls[0])\nelse:\n    ls = list(set(double) - setd)\n    ls.sort()\n    print(ls[0])\n\n\n", "from itertools import product\n\ndef generate_name(S):\n    for i in range(1, 9):\n        for letters in product('abcdefghijklmnopqrstuvwxyz', repeat=i):\n            name = ''.join(letters)\n            if all(name not in s for s in S):\n                return name\n\n\nprint(generate_name([input() for _ in range(int(input()))]))", "n = int(input())\ns = ''\nfor i in range(n):\n        s += \" \" + input()\nse = set(s)\nif len(se) <= 26:\n        for i in range(97, 123):\n                if chr(i) not in se:\n                        print(chr(i))\n                        return\nelse:\n        for i in range(97, 123):\n                for j in range(97, 123):\n                        if chr(i)+chr(j) not in s:\n                                print(chr(i)+chr(j))\n                                return\n                        \n"]