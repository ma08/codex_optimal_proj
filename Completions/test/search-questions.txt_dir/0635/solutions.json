["# map(int, input().split())\n# list(map(int, input().split()))\nn, m = list(map(int, input().split()))\nm -= 1\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nif a[0] == 0:\n    print(\"NO\")\n    return\nelif a[m] == 1:\n    print(\"YES\")\n    return\nelif b[m] == 0:\n    print(\"NO\")\n    return\nelse:\n    for i in range(m, n):\n        if a[i] and b[i]:\n            print(\"YES\")\n            return\n    print(\"NO\")\n", "import sys\nimport string\nfrom math import gcd\nimport getpass\nimport math\nfrom decimal import Decimal\nimport pprint\n\n\ndef ria():\n    return [int(i) for i in input().split()]\n\n\nif getpass.getuser() != 'frohenk':\n    filename = 'half'\n    # sys.stdin = open('input.txt')\n    # sys.stdout = open('output.txt', 'w')\nelse:\n    sys.stdin = open('input.txt')\n    # sys.stdin.close()\n# sys.stdout = open('output.txt', 'w')\n\n\nn, s = ria()\ns -= 1\nar1 = ria()\nar2 = ria()\nif ar1[0] == 0:\n    print('NO')\n    return\n\nif ar1[s] == 1:\n    print('YES')\n    return\nif ar2[s] == 1:\n    for i in range(s, n):\n        if ar2[i] == 1 and ar1[i] == 1:\n            print('YES')\n            return\nprint('NO')", "n,s=map(int,input().split())\na=[int(s) for s in input().split()]\nb=[int(s) for s in input().split()]\nif a[0]==0:\n    print('NO')\nelse:\n    if a[s-1]==1:\n        print('YES')\n    else:\n        if b[s-1]==0:\n            print('NO')\n        else:\n            for i in range(s,n):\n                if a[i]==1 and b[i]==1:\n                    print('YES')\n                    break\n            else:\n                print('NO')", "n, s = list(map(int, input().strip().split()))\nab = list(map(int, input().strip().split()))\nbb = list(map(int, input().strip().split()))\n\ns -= 1\n\nif ab[0] == 0:\n\tprint('NO')\nelse:\n\tif ab[s] == 1:\n\t\tprint('YES')\n\telse:\n\t\tif bb[s] == 1:\t\n\t\t\tfor i in range(s+1, n):\n\t\t\t\tif ab[i] == 1 and bb[i] == 1:\n\t\t\t\t\tprint('YES')\n\t\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tprint('NO')\n\t\telse:\n\t\t\tprint('NO')", "#      \nimport collections, atexit, math, sys, bisect \n\nsys.setrecursionlimit(1000000)\ndef getIntList():\n    return list(map(int, input().split()))    \n\ntry :\n    #raise ModuleNotFoundError\n    import numpy\n    def dprint(*args, **kwargs):\n        #print(*args, **kwargs, file=sys.stderr)\n        # in python 3.4 **kwargs is invalid???\n        print(*args,  file=sys.stderr)\n    dprint('debug mode')\nexcept Exception:\n    def dprint(*args, **kwargs):\n        pass\n\n\n\ninId = 0\noutId = 0\nif inId>0:\n    dprint('use input', inId)\n    sys.stdin = open('input'+ str(inId) + '.txt', 'r') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\nif outId>0:\n    dprint('use output', outId)\n    sys.stdout = open('stdout'+ str(outId) + '.txt', 'w') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\n    atexit.register(lambda :sys.stdout.close())     #idle \u4e2d\u4e0d\u4f1a\u6267\u884c atexit\n    \nN, S = getIntList()\nz1 = getIntList()\nz2 = getIntList()\n#print(N)\n\nif z1[0] ==0:\n    print('NO')\n    return\n\nif z1[S-1] ==1:\n    print('YES')\n    return\n\nif z2[S-1]==0:\n    print('NO')\n    return\n\nfor i in range(S-1, N):\n    if z1[i] ==1 and z2[i]==1:\n        print('YES')\n        return\n\nprint('NO')\n\n\n\n\n\n\n", "n, s = list(map(int, input().split()))\ns -= 1\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nif a[0] == 0:\n    print(\"NO\")\nelif a[s] == 1:\n    print(\"YES\")\nelif b[s] == 0:\n    print(\"NO\")\nelif any([x[0] == x[1] == 1 for x in zip(a[s:], b[s:])]):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\n\n", "import sys\n\ninput = sys.stdin.readline\n\nn, s = map(int, input().split())\n\nfw = [0] + list(map(int, input().split()))\nbw = [0] + list(map(int, input().split()))\n\nif fw[1] == 0:\n    print(\"NO\")\nelif fw[s] == 0 and bw[s] == 0:\n    print(\"NO\")\nelse:\n    if fw[s] == 1:\n        print(\"YES\")\n    else:\n        valid = False \n        for i in range(s+1, len(fw)):\n            if fw[i] and bw[i]:\n                valid = True\n        if valid:\n            print(\"YES\")\n        else:\n            print(\"NO\")", "n, s = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nif a[0] == 0:\n    print(\"NO\")\nelse:\n    if a[s - 1] == 1:\n        print(\"YES\")\n    elif b[s - 1] == 0:\n        print(\"NO\")\n    else:\n        for i in range(s, n):\n            if a[i] == 1 and b[i] == 1:\n                print(\"YES\")\n                break\n        else:\n            print(\"NO\")", "n, s = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ns -= 1\nif a[0] == 0:\n    print('NO')\nelif a[s] == 0 and b[s] == 0:\n    print('NO')\nelif a[s] == 0:\n    ok = False\n    for i in range(s + 1, n):\n        if a[i] == 1 and b[i] == 1:\n            print('YES')\n            ok = True\n            break\n    if not ok:\n        print('NO')\nelse:\n    print('YES')\n", "def ii():\n    return int(input())\ndef mi():\n    return list(map(int, input().split()))\ndef li():\n    return list(mi())\n\nn, s = mi()\na = li()\nb = li()\ns -= 1\n\nok = 1\nif s == 0:\n    ok = 1\nelif a[0] == 0:\n    ok = 0\nelif a[s]:\n    ok = 1\nelif b[s] == 0:\n    ok = 0\nelse:\n    ok = any(a[i] == 1 and b[i] == 1 for i in range(s + 1, n))\nprint('YES' if ok else 'NO')\n", "import sys\n\nn, s = list(map(int, input().split()))\n\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nif a[0] == 0:\n    print('NO')\n    return\n\nif a[s - 1]:\n    print('YES')\n    return\n\nif b[s - 1]:\n    for i in range(s, n):\n        if a[i] and b[i]:\n            print('YES')\n            return\n\nprint('NO')\n", "n, s = [int(x) for x in input().split()]\nlst1 = [int(x) for x in input().split()]\nlst2 = [int(x) for x in input().split()]\n\nif lst1[0]==1 and lst1[s-1]==1:\n        print(\"YES\")\n        return\nelif lst1[0]==0 or (lst1[s-1]==0 and lst2[s-1]==0):\n        print(\"NO\")\n        return\nfor i in range(s,n):\n        if (lst1[i]==1 and lst2[i]==1):\n                print(\"YES\")\n                return\nprint(\"NO\")\n", "n, s = map(int, input().split(' '))\n\na = list(map(int, input().split(' ')))\nb = list(map(int, input().split(' ')))\n\nsolution = False\n\nif(a[0] == 1):\n  if(a[s - 1] == 1):\n    solution = True\n  elif(b[s - 1] == 1):\n    for i in range(s, n):\n      if(a[i] == 1 and b[i] == 1):\n        solution = True\n        break\n\nif solution:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "n, s = list(map(int, input().split()))\na = [int(el) for el in input().split()]\nb = [int(el) for el in input().split()]\ns -= 1\nif (a[0] == 0) or (a[s] == 0 and b[s] == 0):\n    print('NO')\nelse:\n    if a[s] == 1:\n        print('YES')\n    else:\n        ss = 'NO'\n        for i in range(s, n):\n            if a[i] + b[i] == 2:\n                ss = 'YES'\n        print(ss)\n", "n,s = map(int,input().split())\n\na = [int(s) for s in input().split()]\nb = [int(s) for s in input().split()]\n\nif a[0] == 0:\n    print('NO')\nelse:\n    if a[s-1] == 1:\n        print('YES')\n    else:\n        if b[s-1] == 0:\n            print('NO')\n        else:\n            for i in range(s,n):\n                if a[i]==1 and b[i]==1:\n                    print('YES')\n                    return\n            else:\n                print('NO')", "def solve(a, b, s, n):\n    if not a[0]:\n        return \"NO\"\n    if a[s-1]:\n        return \"YES\"\n    if b[s-1]:\n        for i in range(s, n):\n            if a[i] and b[i]:\n                return \"YES\"\n    return \"NO\"\n\n\ndef main():\n    n, s = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    print(solve(a, b, s, n))\n\n\nmain()\n", "# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2018/11/10 22:33\n\n\"\"\"\n\nN, M = list(map(int, input().split()))\n\nA = [True if int(x) == 1 else False for x in input().split()]\nB = [True if int(x) == 1 else False for x in input().split()]\n\n\nif not A[M-1] and not B[M-1]:\n    print('NO')\nelif not A[0]:\n    print('NO')\nelif A[M-1]:\n    print('YES')\nelse:\n    if B[M-1]:\n        for i in range(M, N):\n            if A[i] and B[i]:\n                print('YES')\n                return\n\n    print('NO')\n\n", "n,s=list(map(int, input().split()))\na=list(map(int, input().split()))\nb=list(map(int, input().split()))\nif a[0] != 1:\n\tprint(\"NO\")\nelif [0]*n == a:\n\tprint(\"NO\")\nelse:\n\tif a[s-1] == 1:\n\t\tprint(\"YES\")\n\telse:\n\t\tif b[s-1] == 0:\n\t\t\tprint(\"NO\")\n\t\telse:\n\t\t\tflag=0\n\t\t\tfor i in range(s,n):\n\t\t\t\tif a[i]==1 and b[i]==1:\n\t\t\t\t\tprint(\"YES\")\n\t\t\t\t\tflag=1\n\t\t\t\t\tbreak\n\t\t\tif flag==0:\n\t\t\t\tprint(\"NO\")\n\t\t\t\t\n", "def reachable(s, l, r):\n    if not r[0]:\n        return False\n    if r[s]:\n        return True\n    if not l[s]:\n        return False\n    return any([arg[0] == 1 and arg[1] == 1 for arg in zip(r[s:], l[s:])])\n\n\nn, s = list(map(int, input().split(' ')))\nr = list(map(int, input().split(' ')))\nl = list(map(int, input().split(' ')))\nprint('YES' if reachable(s-1, l, r) else 'NO')\n", "from bisect import bisect_right as br\nfrom bisect import bisect_left as bl\nimport sys\nMAX = sys.maxsize\nMAXN = 10**6+10\ndef isprime(n):\n    n = abs(int(n))\n    if n < 2:\n        return False\n    if n == 2: \n        return True    \n    if not n & 1: \n        return False\n    for x in range(3, int(n**0.5) + 1, 2):\n        if n % x == 0:\n            return False\n    return True\n\ndef mhd(a,b,x,y):\n    return abs(a-x)+abs(b-y)\n\ndef numIN():\n    return(map(int,sys.stdin.readline().strip().split()))\n\ndef charIN():\n    return(sys.stdin.readline().strip().split())\n\nn,s = numIN()\na = list(numIN())\nb = list(numIN())\n\nif not a[0] or (a[s-1]==0 and b[s-1]==0):\n\tprint('NO')\n\treturn\nif a[s-1]:\n\tprint('YES')\n\treturn\nf = 0\nfor i in range(s,n):\n\tif a[i] and b[i]:\n\t\tf = 1\n\t\tbreak\nif f:\n\tif b[s-1]:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\nelse:\n\tprint('NO')", "a = input().split()\na = [int(i) for i in a]\nline1 = input().split()\nline2 = input().split()\nif line1[0] == '0':\n\tprint ('NO')\nelse:\n\tif line1[a[1] - 1] == '1':\n\t\tprint ('YES')\n\telse:\n\t\tdone = False\n\t\tif line2[a[1] - 1] == '1':\n\t\t\tfor i in range(a[1], len(line1)):\n\t\t\t\tif line1[i] == '1' and line2[i] == '1':\n\t\t\t\t\tprint('YES')\n\t\t\t\t\tdone = True\n\t\t\t\t\tbreak\n\t\tif done == False:\n\t\t\tprint('NO')\n\n\n\n\n\n\n\n\n\n\n\n\n", "s,n=list(map(int,input().split()))\narr1=list(map(int,input().split()))\narr2=list(map(int,input().split()))\nflag=0\nif(arr1[0]==0):\n    flag=1\nelif(arr1[n-1]==0 and arr2[n-1]==0):\n    flag=1\nelif(arr1[n-1]==0):\n    temp=0\n    for j in range(n,s):\n        if(arr1[j]==1 and arr2[j]==1):\n            temp=1\n            break\n    if(temp==0):\n        flag=1\n        #print('YES')\nif(flag==0):\n    print('YES')\nelse:\n    print('NO')\n", "gcd = lambda a, b: gcd(b, a % b) if b else a\n\n\ndef main():\n    n, m = list(map(int, input().split()))\n    arr = [0] + list(map(int, input().split()))\n    brr = [0] + list(map(int, input().split()))\n    if not arr[1]:\n        print(\"NO\")\n        return\n    if arr[m]:\n        print(\"YES\")\n        return\n    if brr[m]:\n        for i in range(m + 1, n + 1):\n            if arr[i] and brr[i]:\n                print(\"YES\")\n                return\n    print(\"NO\")\n    return\n\n\n\nmain()\n"]