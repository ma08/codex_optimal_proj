["def main():\n    n, m = list(map(int, input().split()))\n    n += 1\n    cluster, dest, ab = list(range(n)), [0] * n, [[] for _ in range(n)]\n\n    def root(x):\n        if x != cluster[x]:\n            cluster[x] = x = root(cluster[x])\n        return x\n\n    for _ in range(m):\n        a, b = list(map(int, input().split()))\n        ab[a].append(b)\n        dest[b] += 1\n        cluster[root(a)] = root(b)\n    pool = [a for a, f in enumerate(dest) if not f]\n    for a in pool:\n        for b in ab[a]:\n            dest[b] -= 1\n            if not dest[b]:\n                pool.append(b)\n    ab = [True] * n\n    for a, f in enumerate(dest):\n        if f:\n            ab[root(a)] = False\n    print(n - sum(f and a == c for a, c, f in zip(list(range(n)), cluster, ab)))\n\n\ndef __starting_point():\n    from sys import setrecursionlimit\n\n    setrecursionlimit(100500)\n    main()\n\n__starting_point()"]