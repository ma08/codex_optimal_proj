["n = int(input())\nhl = list(map(int, input().split()))\nflg = True\n\nhmax = hl[0]\nfor h in hl:\n    hmax = max(hmax, h)\n    if h >= hmax-1:\n        continue\n    else:\n        flg = False\n\nif flg:\n    print('Yes')\nelse:\n    print('No')", "def main():\n    n = int(input())\n    h = list(map(int, input().split()))\n    flag = True\n    for i in range(n-1):\n        if h[i+1] - h[i] == 0:\n            continue\n        elif h[i+1] - h[i] >= 1:\n            h[i+1] = h[i+1] - 1\n        else:\n            flag = False \n    if flag:\n        print('Yes')\n    else:\n        print('No')\n            \ndef __starting_point():\n    main()\n__starting_point()", "N = int(input())\nH_ls = list(map(int, input().split(' ')))\nH_ls.reverse()\ntmp = float('inf')\nfor i, val in enumerate(H_ls):\n    if val > tmp:\n        val -= 1 \n        H_ls[i] = val\n    tmp = val\nif H_ls == sorted(H_ls, reverse=True):\n    print('Yes')\nelse:\n    print('No')", "N = int(input())\nA = list(map(int, input().split()))\nA.reverse()\nans = \"Yes\"\nfor i in range(N-1):\n  if A[i] >= A[i+1]:\n    continue\n  elif A[i] == A[i+1] - 1:\n    A[i+1] = A[i]\n  else:\n    ans = \"No\"\nprint(ans)", "n = int(input())\nh = list(map(int,input().split()))\ncheck = True\nfor i in range(1,n):\n    if h[i] >= h[i-1]:\n        continue\n    elif h[i] + 1 == h[i-1]:\n        h[i] += 1\n    else:\n        check = False\n        break\nprint(\"Yes\" if check else \"No\")", "n=int(input())\nh=list(map(int,input().split()))\nans=\"Yes\"\nfor i in range(n-1):\n  if h[i]<h[i+1]:\n    h[i+1]-=1\n  if h[i]>h[i+1]:\n    ans=\"No\"\n    break\n  \nprint(ans)", "N = int(input())\nH = list(map(int,input().split()))\nflag = True\n\nfor i in range(1,len(H))[::-1]:\n  if H[i] >= H[i-1]:\n    pass\n  elif H[i]+1 == H[i-1]:\n    H[i-1] = H[i-1]-1\n  else:\n    flag = False\nif flag:\n  print('Yes')\nelse:\n  print('No')", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Thu Sep 10 00:58:18 2020\n\n@author: liang\n\"\"\"\n\nN = int(input())\nH = [0] + [int(i) for i in input().split()]\nflag = True\nfor i in range(N):\n    if H[i] - H[i+1] >= 2:\n        print(\"No\")\n        break\n    if H[i] - H[i+1] == 1 :\n        if flag :\n            flag = False\n        else:\n            print(\"No\")\n            break\n    if H[i] < H[i+1]:\n        flag = True            \n    \nelse:\n    print(\"Yes\")\n                  \n", "n=int(input())\nh=list(map(int,input().split()))\nfor i in range(n-1,0,-1):\n  if h[i-1] > h[i]:\n    h[i-1] -= 1\n  if h[i-1] > h[i]:\n    print(\"No\")\n    return\nprint(\"Yes\")", "N = int(input())\nH = [int(i) for i in input().split()]\n\ns = H[0]\nt = 0\nfor i in range(1, N):\n    if s <= H[i]:\n        s = max(s, H[i] - 1)\n    else:\n        t = 1\n        break\n\nif t == 0:\n    print('Yes')\nelse:\n    print('No')", "n = int(input())\nlst = list(map(int,input().split()))\nans = 0\nfor i in range(n - 1):\n    if (lst[i] > lst[i + 1]):\n        lst[i + 1] = lst[i + 1] + 1\n    if (lst[i] > lst[i + 1]):\n        ans = 1\n\nif(ans == 0):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "n = int(input())\nnum = list(map(int,input().split()))\n\nfor i in range(1,n-1):\n  if num[i-1] < num[i]:\n    num[i] -= 1\n  if num[i] > num[i+1]:\n    print(\"No\")\n    break\nelse:\n  print(\"Yes\")", "from collections import Counter\nimport math\nimport statistics\nimport itertools\n# a,b=map(int,input().split())\nb=int(input())\n# c=[]\n# for i in a:\n#     c.append(int(i))\n# A,B,C= map(int,input().split())\n# f = list(map(int,input().split()))\n#g = [list(map(lambda x: '{}'.format(x), list(input()))) for _ in range(a)]\n# h = []\n# for i in range(a):\n#     h.append(list(map(int,input().split())))\n# a = [[0] for _ in range(H)]#nizigen\n# lis=[input() for i in range(a)]\n\nlis = list(map(int,input().split()))\nans=lis[0]\nword=0\n\nfor i in range(1,b):\n    word=lis[i]\n    if ans<=word:\n        ans=word\n        word=0\n    elif ans-1 == word:\n        word=0\n    else:\n        print(\"No\")\n        return\n\nprint(\"Yes\")\n\n", "def main():\n    N = int(input())\n\n    h = [int(i) for i in input().split()]\n\n    h0 = h[0] - 1\n    ans = 'Yes'\n    for i in range(1, N):\n        if h0 < h[i]:\n            h0 = h[i] - 1\n            # h1 = h[i] - 1\n            # if h1 > h0:\n            #     ans = 'No'\n            #     break\n            # else:\n            #     h0 = h1\n        elif h0 > h[i]:\n            ans = 'No'\n            break\n\n    print(ans)\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "n = int(input())\nh = list(map(int,input().split()))\nm = h[0]\nfor i in range(1,n):\n    m = max(m,h[i])\n    if h[i] >= m-1:\n        continue\n    print('No')\n    return\n\n\nprint('Yes')", "#-*-coding:utf-8-*-\nimport sys\ninput=sys.stdin.readline\n\ndef main():\n    numbers=[]\n    n = int(input())\n    numbers=list(map(int,input().split()))\n    prev=0\n\n\n    for i in numbers:\n        if i==0:\n            prev=i\n        else:\n            if prev<=i:\n                prev=i\n            elif prev <=i+1:\n                prev=i+1\n            else:\n                print(\"No\")\n                return\n    print(\"Yes\")\n\ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\na = list(map(int, input().split()))\n\npre = a[0]\nok = True\nfor i in range(n):\n    if pre > a[i]:\n        ok = False\n        break\n    if a[i] > pre:\n        a[i] -= 1\n\n    pre = a[i]\n\nprint(('Yes' if ok else 'No'))\n", "n = int(input())\nh = list(map(int, input().split()))[::-1]\nans = \"Yes\"\nfor i in range(n-1):\n    if h[i] >= h[i+1]: continue\n    if h[i] < h[i+1]:\n        if h[i] == h[i+1]-1: \n            h[i+1] -= 1\n            continue\n        ans = \"No\"\n        break\nprint(ans)", "N=int(input())\nH=list(map(int,input().split()))\nfor i in range(N-1):\n    if H[i]>H[i+1]+1:\n        print(\"No\")\n        break\n    elif H[i]==H[i+1]+1:\n        H[i]-=1\n        H[i+1]+=1\nelse:\n    print(\"Yes\")\n", "import sys\nn=int(input())\nh=list(map(int,input().split()))\nh.reverse()\n\nfor i in range(1,n):\n    if h[i-1]==h[i]-1:\n        h[i]=h[i]-1\n    if h[i-1]<h[i]-1:\n        print('No')\n        return\n\nprint('Yes')", "import math\n\nN = int(input())\nl = list(map(int,input().split()))\n\ncur_max = l.pop()\n\nflag = 1\nwhile l:\n    tmp = l.pop()\n    if tmp <= cur_max+1:\n        if tmp < cur_max:\n            cur_max = tmp\n    else:\n        flag = 0\n        break\nif flag:\n    print('Yes')\nelse:\n    print('No')\n", "n = int(input())\nh = list(map(int,input().split()))\nh[0] -= 1\nfor i in range(1,n):\n    if h[i-1] < h[i]:\n        h[i] -= 1\nl = list(h)\nl.sort()\nif h == l:\n    print('Yes')\nelse:\n    print('No')", "N = int(input())\nH = list(map(int,input().split()))\n\nsbn = 0\nmaxim = 0\nfor i in range(1,N):\n    if maxim < H[i-1]:\n        maxim = H[i-1]\n    if H[i-1] > H[i]:\n        sbn = maxim - H[i]\n    if abs(sbn) > 1:\n        print(\"No\")\n        return\n\nprint(\"Yes\")", "n = int(input())\na = list(map(int,input().split()))\nmax_num = a[0]\nif n==1:\n  print('Yes')\n  \nelse:\n  flag = True\n  for i in range(1,n):\n    max_num = max(max_num,a[i])\n    if max_num-a[i]>=2:\n      print('No')\n      flag = False\n      break\n    else:\n      pass\n  if flag == True:\n    print('Yes')", "N=int(input())\nH=list(map(int,input().split()))\nB=H[::-1]\nfor i in range(N-1):\n    if B[i]<B[i+1]:\n        B[i+1]-=1\n    if B[i]<B[i+1]:\n        print(\"No\")\n        return\n        \nprint(\"Yes\")", "import sys\nimport math\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    ans = \"Yes\"\n    N = I()\n    past = 0\n    L = TI()\n    for temp in L:\n        if temp-1>=past:\n            past = temp-1\n        elif temp >= past:\n            past = temp\n        else:\n            ans = \"No\"\n            break  \n    print(ans)\ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\nh = list(map(int, input().split()))\nh[0] -= 1\nfor i in range(1,n):\n  if h[i] > h[i-1]:\n    h[i] -= 1\n  elif h[i] < h[i-1]:\n    print(\"No\")\n    break\nelse:\n  print(\"Yes\")", "n=int(input())\nH=list(map(int,input().split()))\nfor i in range(1,n-1):\n  if H[i-1] < H[i]:\n    H[i] -= 1\n  if  H[i] > H[i+1]:\n    print(\"No\")\n    break\nelse:\n  print(\"Yes\")", "n = int(input())\nh = list(map(int,input().split()))\nh = h[::-1]\nfor i in range(n-1):\n  if h[i+1] - h[i] == 1:\n    h[i+1] -= 1\n  elif h[i+1] - h[i] >= 1:\n    print(\"No\")\n    return\nprint(\"Yes\")", "import sys\n\nn=int(input())\nh=list(map(int,input().split()))\nmaxh=h[0]\nfor i in range(len(h)):\n    if maxh>h[i]+1:\n        print('No')\n        return\n    else:\n        maxh=max(maxh,h[i])\nprint('Yes')", "N = int(input())\nheight = list(map(int,input().split()))\nfor i in range(N-1,0,-1):\n    n = height[i] - height[i-1]\n    if n <= -2:\n        print(\"No\")\n        return\n    elif n == -1:\n        height[i-1] -= 1\nprint(\"Yes\")", "N = int(input())\nH = list(map(int,input().split()))\nD = 0\n\nfor n in range(N):\n  if D>H[n]:\n    print(\"No\")\n    return\n  elif D<=H[n]-1:\n    H[n]-=1\n    D=H[n]\n\nprint(\"Yes\") ", "'''\nCreated on 2020/08/23\n\n@author: harurun\n'''\ndef main():\n  import sys\n  pin=sys.stdin.readline\n  pout=sys.stdout.write\n  perr=sys.stderr.write\n  \n  N=int(pin())\n  H=list(map(int,pin().split()))\n  H.reverse()\n  for i in range(N-1):\n    if H[i]>=H[i+1]:\n      pass\n    elif H[i]==H[i+1]-1:\n      H[i+1]-=1\n    else:\n      print(\"No\")\n      break\n  else:\n    print(\"Yes\")\n  return \n\nmain()", "n=int(input())\nh=list(map(int,input().split()))\nfor i in range(n-1):\n    if h[i] < h[i+1]:\n        h[i+1]=h[i+1]-1\n    if h[i]>h[i+1]:\n        print(\"No\")\n        break\nelse:\n    print(\"Yes\")", "n = int(input())\nh = list(map(int, input().split()))\n\nfor i in range(1,n):\n    if h[i] >= h[i-1]: continue\n    if h[i] <= h[i-1] - 2: print('No'); break\n    h[i] += 1\nelse: print('Yes')", "input();a=[*map(int,input().split())];b=sorted(a)\nprint('YNeos'[any(abs(i-j)>1 for i,j in zip(a,b))::2])", "N = int(input())\nH = list(map(int, input().split()))\nans = \"Yes\"\n\nfor i in range(N-1):\n    if H[i] < H[i+1]:\n        H[i+1] = H[i+1]-1\n    if H[i] > H[i+1]:\n        ans = \"No\"\n        break\n\nprint(ans)\n", "n=int(input())\narr=list(map(int,input().split()))\nfor i in range(n-2,-1,-1):\n  if arr[i]>arr[i+1]:\n    arr[i]-=1\n    if arr[i]>arr[i+1]:\n      print('No')\n      break\nelse:\n  print('Yes')\n", "# coding: utf-8\n\n\ndef main():\n    _ = int(input())\n    tmp = 1\n    ans = 'Yes'\n    H = list(map(int, input().split()))\n\n    for h in H:\n        if tmp < h:\n            tmp = h - 1\n        elif tmp > h:\n            ans = 'No'\n            break\n\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\nH = list(map(int, input().split()))\n\nis_mono_inc = True\nnow = min(H) #\u73fe\u30b9\u30c6\u30c3\u30d7\u3067\u3053\u308c\u3088\u308a\u5927\u304d\u3044\u5fc5\u8981 \nfor i in range(N):\n    if now <= H[i]:\n        now = H[i]\n    elif now > H[i] and now <= H[i]+1:\n        now = H[i]+1\n    else:\n        is_mono_inc = False\n\nif is_mono_inc:\n    print('Yes')\nelse:\n    print('No')", "n = int(input())\nhl = list(map(int, input().split()))\nhl[0] -= 1\n\nflag = True\nfor i in range(1, n):\n    if hl[i] > hl[i-1]:\n        hl[i] -= 1\n    elif hl[i] == hl[i-1]:\n        continue\n    else:\n        flag = False\n\nif flag:\n    print('Yes')\nelse:\n    print('No')\n", "#\n# abc136 c\n#\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"5\n1 2 1 1 3\"\"\"\n        output = \"\"\"Yes\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"4\n1 3 2 1\"\"\"\n        output = \"\"\"No\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_3(self):\n        input = \"\"\"5\n1 2 3 4 5\"\"\"\n        output = \"\"\"Yes\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_4(self):\n        input = \"\"\"1\n1000000000\"\"\"\n        output = \"\"\"Yes\"\"\"\n        self.assertIO(input, output)\n\n\ndef resolve():\n    N = int(input())\n    H = list(map(int, input().split()))\n\n    mx = H[0]\n    ans = \"Yes\"\n    for h in H[1:]:\n        if h < mx-1:\n            ans = \"No\"\n            break\n        mx = max(mx, h)\n\n    print(ans)\n\n\ndef __starting_point():\n    # unittest.main()\n    resolve()\n\n__starting_point()", "N = int(input())\nH = [int(i) for i in input().split()]\nfor i in range(N-1,0,-1):\n    if(H[i] < H[i-1]):\n        H[i-1] -= 1\nfor i in range(N-1):\n    if(H[i] > H[i+1]):\n        print(\"No\")\n        return\nprint(\"Yes\")", "N = int(input())\nList = list(map(int,input().split()))\nflag = 0\nfor i in range(1,N):\n  if List[-(i+1)] <= List[-i]:\n    continue\n  elif List[-(i+1)] ==List[-i]+1:\n    List[-(i+1)] -= 1\n  else:\n    print('No')\n    return\nprint('Yes')", "n=int(input())\nl=list(map(int,input().split()))\nd=True\n\n\nfor i in range(n-1):\n  if l[i]>l[i+1]:\n    l[i+1]+=1\n\n  if l[i]>l[i+1]:\n    d=False\n    \nif d:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "N = int(input())\nHlist = list(map(int,input().split()))\nsign = 1\nAnswer = 'Yes'\nfor i in range(len(Hlist)-1):\n    H1 = Hlist[i]\n    H2 = Hlist[i+1]\n    if H1 > H2:\n        if H1 - H2 == 1 and sign == 1:\n            Hlist[i] -= 1\n            sign =0\n        else:\n            Answer = 'No'\n            break\n    if H1 < H2:\n        sign = 1\nprint(Answer)", "n = int(input())\nh = list(map(int, input().split()))\n\nprev = h[0]\nfor curr in h:\n  if curr + 1 < prev:\n    print(\"No\")\n    return\n  prev = max(prev, curr)\nprint(\"Yes\")", "n = int(input())\nh = list(map(int,input().split()))\nh = h[::-1]\n\nfor i in range(n-1):\n    if h[i+1] - h[i] == 1:\n        h[i+1] = h[i+1] - 1\n    elif h[i+1] - h[i] > 1:\n        print(\"No\")\n        return\nelse:\n    print(\"Yes\")", "import sys\nN = int(input())\nlsH = list(map(int,input().split()))\nfor i in range(N-2,-1,-1):\n    if lsH[i] <= lsH[i+1]:\n        continue\n    elif lsH[i] - lsH[i+1] == 1:\n        lsH[i] -= 1\n    else:\n        print('No')\n        return\nprint('Yes')\n", "n = int(input())\nH = list(map(int, input().split()))\npre = H[-1]\nflag = False\nif n == 1:\n    print(\"Yes\")\nelse:\n    for h in H[-2::-1]:\n        if h > pre:\n            if h - pre != 1:\n                print(\"No\")\n                break\n            h -= 1\n        pre = h\n    else:\n        print(\"Yes\")\n", "n = int(input())\nh = list(map(int, input().split()))\nval = 0\nfor i in range(n):\n    if val > h[i]:\n        print(\"No\")\n        return\n    else:\n        val = max(val, h[i] - 1)\n\nprint(\"Yes\")", "import sys\nN = int(input())\nH = list(map(int, input().split()))\n\n\nfor i in range(N-2,-1,-1):\n    if H[i]<=H[i+1]:\n        continue\n    elif H[i]-H[i+1]==1:\n        H[i] -= 1\n    else:\n        print(\"No\")\n        return\n\nprint(\"Yes\")", "def main():\n    n = int(input())\n    h = list(map(int, input().split()))\n    f = True\n    for i in reversed(range(n-1)):\n        if h[i]-1 > h[i+1]:\n            f = False\n        elif h[i]-1 == h[i+1]:\n            h[i] -= 1\n    if f:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\nh = list(map(int,input().split()))\nh = h[::-1]\nfor i in range(n-1):\n  if h[i+1] - h[i] == 1:\n    h[i+1] -= 1\n  elif h[i+1] - h[i] > 1:\n    print(\"No\")\n    return\nprint(\"Yes\")", "N = int(input())\nH = list(map(int, input().split()))\n\nt = 0\n\nfor i in H:\n  if i < t:\n      print('No')\n      return\n  if i > t:\n      t = i - 1\n\nprint('Yes')", "import sys\n\nN = int(input())\nH = [int(n) for n in input().split()][::-1]\n\n\nfor i in range(N-1):\n    if H[i+1] - H[i] > 1:\n        print('No')\n        return\n        break\n    elif H[i+1] - H[i] == 1:\n        H[i+1] -= 1\n    else:\n        continue\n\nprint('Yes')", "def main():\n    N = int(input())\n    H = list(map(int, input().split()))\n    for i in range(N-1):\n        if H[i] < H[i+1]:\n            H[i+1] -= 1\n        if H[i] > H[i+1]:\n            print('No')\n            return\n    print('Yes')\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\nh =  list(map(int, input().split()))\nans = 'Yes'\nfor i in range(2,n+1):\n    if h[-i] <= h[-(i-1)]:\n        continue\n    elif h[-i] == h[-(i-1)]+1:\n        h[-i] -=1\n    else:\n        ans = 'No'\nprint(ans)", "N = int(input())\nH = list(map(int,input().split()))\ncan = True\n\nfor i in reversed(range(1,N)):\n    if H[i - 1] - 1 == H[i]:\n        H[i - 1] -= 1\n    elif H[i - 1] - 1 > H[i]:\n        can = False\n        break\n\nprint(['No', 'Yes'][can])", "n=int(input())\na=[int(x) for x in input().split()]\n\nfor i in range(n-1):\n    if a[i]<a[i+1]:\n        a[i+1]-=1\n    if a[i]>a[i+1]:\n        print(\"No\")\n        return\nprint(\"Yes\")", "N = int(input())\nH_ls = list(map(int, input().split(' ')))\nH_ls.reverse()\ntmp = float('inf')\nfor i, val in enumerate(H_ls):\n    if tmp < val:\n        H_ls[i] -= 1\n        val -= 1\n    tmp = val\nif H_ls == sorted(H_ls, reverse=True):\n    print('Yes')\nelse:\n    print('No')", "#import math\n#import itertools\n#import numpy as np\n#from collections import deque\n# sys.setrecursionlimit(10 ** 6)\n#mod = 10 ** 9 + 7\n#INF = 10 ** 9\n#PI = 3.14159265358979323846\n\nINT = lambda: int(input())\nINTM = lambda: map(int,input().split())\nSTRM = lambda: map(str,input().split())\nSTR = lambda: str(input())\nLIST = lambda: list(map(int,input().split()))\nLISTS = lambda: list(map(str,input().split()))\n\ndef do():\n    n=INT()\n    h=LIST()\n    for i in range(n-1):\n        if h[i]<h[i+1]:\n            h[i+1]-=1\n    flg=True\n    for i in range(n-1):\n        if h[i]>h[i+1]:\n            flg=False\n        \n    if flg:\n       print('Yes')\n    else:\n        print('No') \n\ndef __starting_point():\n    do()\n__starting_point()", "n=int(input())\nh=list(map(int,input().split()))\n\nans='Yes'\nm=0\nfor i in range(1,n):\n  m=max(m,h[i])\n  if h[i]<m-1:\n    ans='No'\n    break\nprint(ans)\n    \n", "n = int(input())\nh = list(map(int, input().split()))\n\nfor i in range(n-1):\n  a = h[i+1] - h[i] \n  if a < 0:\n    print('No')\n    return\n  if a >= 1:\n    h[i+1] -= 1\nprint('Yes')", "n = int(input())\nh = list(map(int, input().split()))\n\nif n == 1:\n    print(\"Yes\")\nelif n == 2:\n    if h[0] - h[1] <= 1:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nelse:\n    c = 0\n    if h[0] - h[1] <= 1:\n        h[0] -= 1\n        for i in range(1, n-1):\n            if h[i] - h[i+1] == 1 and h[i-1] < h[i]:\n                h[i] -= 1\n                c += 1\n            elif h[i] <= h[i+1] and h[i-1] < h[i]:\n                h[i] -= 1\n                c += 1\n            elif h[i] <= h[i+1]:\n                c += 1\n            else:\n                break   \n    if c == n-2:\n        print(\"Yes\")\n    else:\n        print(\"No\")", "n = int(input())\nH = list(map(int, input().split()))\n\nans = 'Yes'\nm = H[0]\n\nif n == 1:\n    ans\nelse:\n    for i in range(1, n):       \n        if H[i] >= m-1:\n            m = max(H[i], m)\n            continue\n        else:\n            ans = 'No'\n            break\nprint(ans)\n", "n = int(input())\nh = list(map(int,input().split()))\nh[0] -= 1\nfor i in range(1,n):\n    if h[i] > h[i - 1]:\n        h[i] -= 1\n    elif h[i] < h[i - 1]:\n        print(\"No\")\n        break\nelse:\n    print(\"Yes\")", "N = int(input())\nH = list(map(int,input().split()))\ntmp = -999999\nfor i in range(N):\n    if tmp <= H[i]-1:\n        tmp = H[i] -1\n    elif tmp <= H[i]:\n        tmp = H[i]\n    else:\n        print('No')\n        break\nelse:\n    print('Yes')", "n = int(input())\na = list(map(int,input().split()))\nprev = -1\nans = True\nfor i in range(n):\n    if prev <= a[i]-1:\n        prev = a[i]-1\n    elif prev <= a[i]:\n        continue\n    else:\n        ans = False\n\nprint(\"Yes\" if ans==True else \"No\")", "N = int(input())\nH = list(map(int,input().split()))\n\nfor i in range(N-1):\n  if H[i+1] == H[i]-1:\n    H[i+1] = H[i]\n  elif H[i+1] >= H[i]:\n    continue\n  else:\n    print('No')\n    return\nprint('Yes')", "INF = 10**9 + 7\nN = int(input())\nH = list(map(int, input().split()))\nH.append(INF)\nans = \"Yes\"\n\nfor i in reversed(range(N)):\n  if not H[i] <= H[i+1]:\n    H[i] -= 1\n  if not H[i] <= H[i+1]:\n    ans = \"No\"\n    break\nprint(ans)", "N = int(input())\nH = list(map(int, input().split()))\n\na = 0\nfor i in H:\n    if a <= i:\n        a = i\n    elif a-i >= 2:\n        print('No')\n        return\nprint('Yes')\n", "import sys\n# import math\n# import bisect\n# import numpy as np\n# from decimal import Decimal\n# from numba import njit, i8, u1, b1 #JIT compiler\n# from itertools import combinations, product\n# from collections import Counter, deque, defaultdict\n\n# sys.setrecursionlimit(10 ** 6)\nMOD = 10 ** 9 + 7\nINF = 10 ** 9\nPI = 3.14159265358979323846\n\ndef read_str():      return sys.stdin.readline().strip()\ndef read_int():      return int(sys.stdin.readline().strip())\ndef read_ints():     return map(int, sys.stdin.readline().strip().split())\ndef read_ints2(x):   return map(lambda num: int(num) - x, sys.stdin.readline().strip().split())\ndef read_str_list(): return list(sys.stdin.readline().strip().split())\ndef read_int_list(): return list(map(int, sys.stdin.readline().strip().split()))\ndef GCD(a: int, b: int) -> int: return b if a%b==0 else GCD(b, a%b)\ndef LCM(a: int, b: int) -> int: return (a * b) // GCD(a, b)\n\ndef Main():\n    n = read_int()\n    h = read_int_list()\n    maxh = 0\n    cur = 0\n    for i in h:\n        if maxh < cur:\n            maxh = cur\n        cur = i\n        if maxh >= i + 2:\n            print('No')\n            break\n    else:\n        print('Yes')\n\ndef __starting_point():\n    Main()\n__starting_point()", "N = int(input())\nA = list(map(int,input().split()))\n \n# \u5f8c\u308d\u5411\u304d\u306b\u8003\u3048\u308b\n# \u5404\u8981\u7d20\u306f\u57fa\u672c\u7684\u306b\u5927\u304d\u304f\u3057\u305f\u3044\u306e\u3067\u3001\u305d\u306e\u307e\u307e\u3001\u3082\u3057\u304f\u306f\n# \u3046\u307e\u304f\u3044\u304b\u306a\u3044\u5834\u5408\u306b\u306e\u307f\u30011\u6e1b\u3089\u3059\nans = 'Yes'\nfor i in range(N-1, 0, -1):\n  if A[i] < A[i-1]: A[i-1] -= 1\n  if A[i] < A[i-1]:\n    ans = 'No'\n    break\n\nprint(ans)", "b = int(input())\nlst = list(map(int, input().split()))\n\n#\u4f8b\uff11\nlst[0] -= 1\nfor i in range(1, b):\n    if lst[i-1] < lst[i]:\n        lst[i] -= 1\nfor i in range(1, b):\n    if lst[i] < lst[i-1]:\n        print(\"No\")\n        break\nelse:\n    print(\"Yes\")", "n=int(input())\nbef=0\nmn=0\nflg=0\nH=list(map(int,input().split()))\n#H=[int(input()) for i in range(n)]\n#print(H)\nfor i in range(n):\n\th=H[i]\n\tif h<mn:\n\t\tflg=1\n\tmn=max(mn,h-1)\n\nif(flg==1):\n\tprint(\"No\")\nelse:\n\tprint(\"Yes\")\n\n", "N = int(input())\nN_List = list(map(int,input().split()))[-1::-1] \nfor i in range(1,N):\n    if N_List[i-1] < N_List[i]:\n        if N_List[i-1] + 1 == N_List[i]:\n            N_List[i] -= 1\n        else:\n            print(\"No\")\n            break\nelse:\n    print(\"Yes\")", "N = int(input())\nH = list(map(int,input().split()))\n\nmaxh = 10 ** 10\nfor i in range(len(H) - 1, -1, -1):\n  if H[i] > maxh + 1:\n    print(\"No\")\n    break\n  if H[i] == maxh + 1:\n    maxh = H[i] - 1\n  else:\n    maxh = H[i]\nelse:\n  print(\"Yes\")\n", "N = int(input())\nH = list(map(int,input().split()))\n\nfor i in range(N-1,0,-1):\n    if H[i] + 1 == H[i-1]:\n        H[i-1] -= 1\n    elif H[i] < H[i-1]:\n        print(\"No\")\n        return\nprint(\"Yes\")\n", "N=int(input())\nHlist=list(map(int,input().split()))\nminh=Hlist[0]\nfor i in range(N-1):\n    if minh>Hlist[i+1]:\n        print('No')\n        return\n    elif Hlist[i+1]>minh:\n        minh=Hlist[i+1]-1\nprint('Yes')", "N = int(input())\nfN = list(map(int,input().split()))\nplus = True;\nif N != 1:\n  for i in range(1, len(fN))[::-1]:\n    if fN[i] < fN[i - 1]:\n      if fN[i] + 1 == fN[i - 1]:\n        fN[i - 1] -= 1\n      else:\n        plus = False\nif plus:\n  print(\"Yes\")\nelse:\n  print(\"No\")\n", "import sys\n\ninput = sys.stdin.readline\n\nn = int(input())\nh_list = list(map(int, input().split()))\n\ntmp = 0\nflag = False\n\nfor h in h_list:\n\n    if tmp == 0:\n        tmp = h\n        continue\n\n    if tmp > h:\n        if tmp - 2 >= h:\n            print(\"No\")\n            return\n        tmp = h\n        if flag:\n            print(\"No\")\n            return\n        else:\n            flag = True\n    elif tmp < h:\n        tmp = h\n        flag = False\n\nprint(\"Yes\")\n", "N = int(input())\nA = list(map(int,input().split()))\n \n# \u5de6\u304b\u3089\u9806\u306b\u3084\u308b\u3068\u3046\u307e\u304f\u3044\u304b\u306a\u3044 => [1, 4, 3, 2, 1] \u307f\u305f\u3044\u306a\u5834\u3067\u5931\u6557\n# \u53f3\u304b\u3089\u9806\u306b\u8003\u3048\u3088\uff01\nans = 'Yes'\nfor i in range(N-1, 0, -1):\n  if A[i] < A[i-1]: A[i-1] -= 1\n  if A[i] < A[i-1]:\n    ans = 'No'\n    break\n\nprint(ans)", "N = int(input())\nH_ls = list(map(int, input().split(' ')))\nH_ls.reverse()\ntmp = float('inf')\nfor i, val in enumerate(H_ls):\n    if val > tmp:\n        val -=1\n        H_ls[i] = val\n    tmp = val\nif H_ls == sorted(H_ls, reverse=True):\n    print('Yes')\nelse:\n    print('No')", "N = int(input())\nH_ls = list(map(int, input().split(' ')))\nH_ls.reverse()\ntmp = float('inf')\nfor i, val in enumerate(H_ls):\n    if val > tmp:\n        val -= 1\n        H_ls[i] = val\n    tmp = val\nif H_ls == sorted(H_ls, reverse=True):\n    print('Yes')\nelse:\n    print('No')", "a = input()\nN = int(a)\nH = list(map(int,input().split()))\n\nflag = 1\nH[0] = H[0] - 1\n\nfor i in range(1,N):\n    if H[i-1] < H[i]:\n        H[i] = H[i] - 1\n    elif H[i-1] > H[i]:\n        flag = 0\n        break\nif flag == 1:\n    print('Yes')\nelse:\n    print('No')", "n=int(input())\nh=list(map(int,input().split()))\nif n==1:\n  print('Yes')\n  return\nres=h[n-1]\nfor i in range(1,n):\n  if h[n-1-i]-res<=1:\n    res=min(res,h[n-1-i])\n  else:\n    print('No')\n    return\nprint('Yes')", "n=int(input())\nh=list(map(int, input().split()))\n\ndef solve():\n  h[0] -= 1\n  for i in range(1, n):\n    if h[i-1] > h[i]:\n      return False\n    if h[i-1] == h[i]:\n      continue\n    h[i] -= 1\n  return True\n\nprint('Yes' if solve() else 'No')", "n = int(input())\nhigh = list(map(int,input().split()))\n\na = True\n\nfor x in reversed(range(1,n)):\n  if high[x-1] >= high[x] + 2:\n    a = False\n    break\n  elif high[x-1] == high[x] + 1:\n    high[x-1] = high[x]\n    \nif a:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "N = int(input())\nH = list(map(int, input().split()))\nborder = H[N-1]\n\nans = True\nfor i in range(N-2, -1, -1):\n    if H[i] <= border:\n        border = H[i]\n    else:\n        if H[i] - 1 <= border:\n            border = H[i] - 1\n        else:\n            ans = False\n\nif ans:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "def resolve():\n    n = int(input())\n    h = list(map(int,input().split()))\n    ans = 'Yes'\n    for i in range(0,n-1):\n        if h[n-i-1] >= h[n-i-2]:\n            continue\n        elif h[n-i-1]-h[n-i-2]==-1:\n            h[n-i-2] -= 1\n        else:\n            ans = 'No'\n    print(ans)\nresolve()", "n = int(input())\nh = list(map(int,input().split()))[::-1]\nans = 'Yes'\nfor i in range(n-1):\n    if h[i+1] - h[i] >= 2:\n        ans = 'No'\n    elif h[i+1] - h[i] == 1:\n        h[i+1] -= 1\nprint(ans)", "n = int(input())\nH = list(map(int,input().split()))\n\nfor i in range(1,n-1):\n    if H[n-1-i] == H[n-i] + 1:\n        H[n-1-i] -= 1\n    elif not(H[n-1-i] == H[n-i] or H[n-1-i] < H[n-i]):\n        print('No')\n        return\nprint('Yes')", "n = int(input())\nL = list(map(int,input().split()))\nans = 'Yes'\npre = -999\n\nfor i in range(n):\n  if pre <= L[i] - 1:\n    pre = L[i] - 1\n  elif pre <= L[i]:\n    pre = L[i]\n  else:\n    print('No')\n    return\nprint('Yes')\n\n", "N = int(input())\nH = list(map(int,input().split()))\nflg = 0\nans = \"Yes\"\n\nfor i in range(N-1):\n  if H[i]-H[i+1] > 1:\n    ans = \"No\"\n    break\n  elif H[i]-H[i+1] == 1 and flg == 0:\n    flg = 1\n  elif H[i]-H[i+1] == 1 and flg == 1:\n    ans = \"No\"\n    break\n  elif H[i]-H[i+1] == 0:\n    continue\n  else:\n    flg = 0\n    continue\n\nprint(ans)", "N = int(input())\nH_ls = list(map(int, input().split(' ')))\nH_ls.reverse()\ntmp = float('inf')\nfor i, val in enumerate(H_ls):\n    if val > tmp:\n        val -= 1\n        H_ls[i] = val\n    tmp = val\nif H_ls == sorted(H_ls, reverse=True):\n    print('Yes')\nelse:\n    print('No')", "N = int(input())\nH_ls = list(map(int, input().split(' ')))\nH_ls.reverse()\ntmp = float('inf')\nfor i, val in enumerate(H_ls):\n    if val > tmp:\n        val -= 1\n        H_ls[i] = val\n    tmp = val\nif H_ls == sorted(H_ls, reverse=True):\n    print('Yes')\nelse:\n    print('No')", "n=int(input())\nh=list(map(int,input().split()))\n\nflag=True\nfor i in range(1,n):\n    if h[i-1]>h[i]:\n        flag=False\n    elif h[i-1]<h[i]:\n        h[i]=h[i]-1\nprint(\"Yes\" if flag else \"No\")", "n = int(input())\nh = list(map(int, input().split()))\nans = 'Yes'\nif n != 1: \n    i = 0\n    b = 0\n    while i < n:\n        if h[i] < b:\n            ans = 'No'\n            break\n        b = max(b, h[i]-1)\n        i += 1\nprint(ans)", "n = int(input())\nh = list(map(int,input().split()))\nh = list(reversed(h))\ncan = True\nif n == 1:\n    print(\"Yes\")\nelse:\n    if h[0] < h[1]:\n        if h[0] == h[1] - 1:\n            h[1] -= 1\n        else:\n            can = False\n    if can:\n        for i in range(1,n-1):\n            if h[i] == h[i+1] -1:\n                h[i+1] -= 1\n            if not h[i] >= h[i+1]:\n                can = False\n    print(\"Yes\" if can else \"No\")"]