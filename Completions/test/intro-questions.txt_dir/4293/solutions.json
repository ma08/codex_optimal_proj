["print((sum(sorted(list(map(int,input().split())))[0:2])))\n", "\np,q,r = map(int, input().split())\n\nprint(min(p+q,p+r,q+r))", "p, q, r = map(int, input().split())\nprint(min(p + q, q + r, r + p))", "import itertools\npqr = list(map(int, input().split()))\nprint(min([a+b for a, b in itertools.combinations(pqr, 2)]))", "p, q, r = map(int, input().split())\n\nprint(min(p+q, q+r, r+p))", "# import math\n# import statistics\n#a=input()\n#b,c=int(input()),int(input())\n# c=[]\n# for i in a:\n#     c.append(int(i))\ne1,e2,e3 = map(int,input().split())\n#f = list(map(int,input().split()))\n# g = [input() for _ in range(15)]\n# zoro = int(a[0]*len(a))\nA=e1+e2\nB=e2+e3\nC=e1+e3\nprint(min(A,B,C))", "P,Q,R = map(int,input().split())\n \nif P + Q <= Q + R and P + Q <= P + R:\n\tprint(P + Q)\nelif Q + R <= P + Q and Q + R <= P + R:\n\tprint(Q + R)\nelse:\n\tprint(P + R)", "a, b, c = map(int, input().split())\nprint(a+b+c-max(a, b, c))", "pqr = list(map(int, input().split()))\nfrom itertools import permutations\nans = 100*3\nfor i, j in permutations(pqr, 2):\n    ans = min(ans, i+j)\nprint(ans)", "import re\nimport sys\nimport math\nimport itertools\nimport bisect\nfrom copy import copy\nfrom collections import deque,Counter\nfrom decimal import Decimal\nimport functools\ndef v(): return input()\ndef k(): return int(input())\ndef S(): return input().split()\ndef I(): return list(map(int,input().split()))\ndef X(): return list(input())\ndef L(): return list(input().split())\ndef l(): return list(map(int,input().split()))\ndef lcm(a,b): return a*b//math.gcd(a,b)\nsys.setrecursionlimit(10 ** 6)\nmod = 10**9+7\ncnt = 0\nans = 0\ninf = float(\"inf\")\nal = \"abcdefghijklmnopqrstuvwxyz\"\nAL = al.upper()\n\na,b,c =I()\nans = min(a+b,b+c)\nprint((min(ans,a+c)))\n", "P,Q,R=map(int,input().split())\nif P<Q:P,Q=Q,P\nif P<R:P,R=R,P\nprint(Q+R)", "p,q,r = map(int, input().split())\nl=[p+q,q+r,p+r]\nprint(min(l))", "p = sorted(map(int, input().split()))\n\nprint((p[0] + p[1]))\n", "P,Q,R = map(int,input().split())\nprint(min(P+Q,P+R,Q+R))", "p, q, r = list(map(int, input().split()))\nprint((min(p+q, p+r, q+r)))\n", "p,q,r = map(int, input().split())\n\n# \u98db\u884c\u30eb\u30fc\u30c8\u306f\u3001p,q,r \u306e\u307f\u3002\n\n# \u7d50\u5c40\u306f\u30eb\u30fc\u30c8p\uff0br\u3001p\uff0bq\u3001r\uff0bq\u306e\u5185\u304b\u3089\u6700\u5c0f\u306e\u3082\u306e\u3092\u9078\u3076\nprint(min([p+r, p+q, r+q]))", "P, Q, R = list(map(int, input().split()))\n\nlist_m = [P+Q,R+Q,P+R,Q+R,R+P,Q+P]\n\nmin = 200\nfor i in range(0,len(list_m)):\n    if min > int(list_m[i]):\n        min = list_m[i]\n\nprint(min)\n", "dist = list(map(int, input().split()))\ndist.sort()\nprint(dist[0]+ dist[1])", "s = list(map(int, input().split()))\ns.sort()\n\nprint(s[0]+s[1])", "p,q,r=map(int,input().split())\nprint(min(p+q,p+r,q+r))", "a = list(map(int,input().split()))\nprint(sum(a)-max(a))", "S_list = list(map(int,input().split()))\nsum_1 = sum(S_list)\nS_list_1 = [sum_1 - i for i in S_list] \nprint(min(S_list_1))  ", "n, a, b = map(int, input().split())\nprint(min(n + a, a + b, b + n))", "\nurl = \"https://atcoder.jp//contests/abc129/tasks/abc129_a\"\n\ndef main():\n    p, q, r = list(map(int, input().split()))\n    print((sum([p,q,r]) - max(p,q,r)))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "P, Q, R = map(int, input().split())\n \nprint(P + Q + R - max(P, Q, R))", "l=list(map(int,input().split()))\nl.sort()\nprint(l[0]+l[1])", "a,b,c = map(int,input().split())\n\nans = a + b\nif a + c < ans:\n  ans = a + c\nif b + c < ans:\n  ans = b + c\n\nprint(ans)", "p,q,r=map(int,input().split())\nprint(p+q+r-max(p,q,r))", "l=list(map(int,input().split(' ')))\nl=sorted(l)\nprint((l[0]+l[1]))\n", "a,b,c=map(int,input().split())\nprint(min(a+b,b+c,a+c))", "# A - Airplane\n# https://atcoder.jp/contests/abc129/tasks/abc129_a\n\nABC = list(map(int, input().split()))\nABC.sort()\nprint((ABC[0] + ABC[1]))\n", "P, Q, R = map(int, input().split())\n\nsums = [P + Q, R + Q, Q + R, P + R, R + P, Q + P]\n\nprint(min(sums))", "time_list = list(map(int,input().split()))\n\ntime_list.sort()\n\nprint(time_list[0]+time_list[1])", "p,q,r = map(int,input().split())\nprint(min(p+q,q+r,r+p))", "l = list(map(int,input().split()))\nl.sort()\nprint(l[0] + l[1])", "a = list(map(int,input().split()))\nprint((min(a[0]+a[1],a[1]+a[2],a[2]+a[0])))\n", "# 129a\n\ndef atc_129a(input_value: str) -> int:\n    PQR = input_value.split(\" \")\n    P = int(PQR[0])\n    Q = int(PQR[1])\n    R = int(PQR[2])\n\n    return min(P + Q, P + R, Q + R)\n\ninput_value = input()\nprint(atc_129a(input_value))", "#ABC129\np,q,r = map(int,input().split())\nprint(min(p+r,r+q,p+q))", "A=list(map(int,input().split()));print(sum(A)-max(A))", "t = list(map(int,input().split()))\nt.sort()\nprint(t[0]+t[1])", "3\nimport sys\ninput = lambda: sys.stdin.readline().strip()\np, q, r = [int(x) for x in input().split()]\nprint(min(p + q, q + r, r + p))", "p=sorted(list(map(int,input().split())))\nprint(p[0]+p[1])", "p, q, r = list(map(int, input().split()))\nprint((p + q + r - max(p, q, r)))\n", "a,s,d=map(int, input().split())\n\nprint(min(a+s,s+d,d+a))", "P,Q,R = list(map(int,input().split()))\n\nflight = [P + Q, P + R, Q + R]\nprint((min(flight)))\n", "P,Q,R = map(int,input().split())\nA = [P,Q,R]\nA.sort()\nprint(A[1]+A[0])", "pqr = list(map(int, input().split()))\npqr.sort()\nprint(pqr[0] + pqr[1])", "A, B, C = map(int,input().split())\n\nlist = [A+B,B+C,A+C]\nnew_list = sorted(list)\n\nprint(new_list[0])", "l_d = list(map(int, input().split()))\nl_d.sort()\nmin_d = l_d[0] + l_d[1]\nprint(min_d)", "p, q, r = list(map(int, input().split()))\nprint((min(p + q, r + q, p + r)))\n", "p,q,r=map(int,input().split())\n \n \ns=[p+q,p+r,q+r]\n \nprint(min(s))", "\n\nP, Q, R = list(map(int, input().split()))\n\n\n\nabc = P + Q\nacb = Q + R\nbca = P + R\nprint((min(abc, acb, bca)))\n", "pqr = list(map(int, input().split()))\n\nans = float(\"inf\")\nfor i in range(2):\n  for j in range(i+1,3):\n    t = pqr[i]+pqr[j]\n    if t < ans: ans = t\nprint(ans)", "# AtCoder Beginner Contest 129\n# A - Airplane\n\na=list(map(int,input().split()))\na.sort()\nprint((sum(a[0:2])))\n", "p,q,r = map(int, input().split())\nprint(min(p+q,p+r,q+r))", "route=list(map(int,input().split()))\n\nroute.sort()\nprint(sum(route[:2]))", "P, Q, R = map(int, input().split())\n\ntime = [P + Q, P + R, Q + R]\n\nprint(min(time))", "P, Q, R = map(int, input().split())\nmax_d = max(P, max(Q, R))\ntotal = P + Q + R - max_d\n\nprint(total)", "list_plane = list(map(int, input().split()))\nlist_plane.sort()\nprint(list_plane[0] + list_plane[1])", "p,q,r = map(int,input().split())\nn = p+q+r\nn -= max(p,q,r)\nprint(n)", "a,b,c = map(int,input().split())\nx = []\nx.append(a+b)\nx.append(a+c)\nx.append(b+c)\nprint(sorted(x)[0])", "P,Q,R = map(int,input().split())\nprint(min(P+Q,P+R,Q+R))", "P, Q, R = map(int, input().split())\nprint(min(P+Q,Q+R,R+P))", "p, q, r = list(map(int, input().split()))\n\na_c = p + q\na_b = r + q\nb_c = p + r\n\nminimum_time=min(a_c,a_b,b_c)\n\nprint(minimum_time)\n", "pqr = list(map(int, input().split()))\npqr.sort()\nprint((pqr[0] + pqr[1]))\n", "fly_times = [ int(v) for v in input().split(\" \") ]\n\nmin_t = 10**9\n\nfor i in range(3):\n  result = 0\n  for j in range(3):\n    if i == j:\n      continue\n    result += fly_times[j]\n  if result < min_t:\n    min_t = result\n\n\nprint(min_t)", "p, q, r = list(map(int, input().split()))\n\nprint((min(p+q, min(q+r, r+p))))\n", "ans = [int(n) for n in input().split()]\nprint(sum(ans)-max(ans))", "P, Q, R = map(int, input().split())\n\nans = [P+Q, Q+R, R+P]\nprint(min(ans))", "a = list(map(int, input().split()))\na.sort()\n\nprint(a[0] + a[1])", "P,Q,R = map(int,input().split())\nprint(min(P+Q,min(Q+R,R+P)))", "import itertools\nP, Q, R = map(int, input().split())\nlst = [P, Q, R]\nc = list(itertools.combinations(lst, 2))\nlst2 = []\nfor i in c:\n    s = sum(i)\n    lst2.append(s)\nprint(min(lst2))", "P, Q, R = map(int, input().split())\nprint(P + Q + R - max(P, Q, R))", "P, Q, R = map(int, input().split())\n\nprint(min(P + Q, Q + R, P + R))", "byte = list(map(int, input().split()))\nbyte.sort()\n\nprint((byte[0] + byte[1]))\n", "l = list(map(int,input().split()))\nl.sort()\nprint(l[0]+l[1])", "P, Q, R = map(int, input().split())\n\nprint(min(P+Q, Q+R, R+P))", "P,Q,R=map(int, input().split())\n\nprint(min(P+Q,Q+R,R+P))", "p,q,r=map(int,input().split())\nprint(min(p+q,q+r,r+p))", "P, Q, R = map(int, input().split())\nprint(P+Q+R-(max(P, Q, R)))", "P,Q,R=list(map(int,input().split()))\nprint((min([P+Q,P+R,Q+R])))\n", "p,q,r=map(int,input().split())\n\nsum=[10**4] * 3\nsum[0]=p+q\nsum[1]=p+r\nsum[2]=q+r\nprint(min(sum))", "P, Q, R = map(int, input().split())\n\nprint(min(P+Q, Q+R,R+P))", "# \u7a7a\u6e2f A, B, C \u304c\u3042\u308a\u3001\u305d\u308c\u305e\u308c\u306e\u7a7a\u6e2f\u306e\u9593\u3067\u306f\u3001\u53cc\u65b9\u5411\u306b\u98db\u884c\u6a5f\u304c\u904b\u822a\u3057\u3066\u3044\u307e\u3059\u3002\n# \u7a7a\u6e2f A, B \u9593\u306e\u98db\u884c\u6642\u9593\u306f\u7247\u9053 P \u6642\u9593\u3001\u7a7a\u6e2f B, C \u9593\u306e\u98db\u884c\u6642\u9593\u306f\u7247\u9053 Q \u6642\u9593\u3001\u7a7a\u6e2f C, A \u9593\u306e\u98db\u884c\u6642\u9593\u306f\u7247\u9053 R \u6642\u9593\u3067\u3059\u3002\n# \u3044\u305a\u308c\u304b\u306e\u7a7a\u6e2f\u304b\u3089\u30b9\u30bf\u30fc\u30c8\u3057\u3066\u4ed6\u306e\u7a7a\u6e2f\u306b\u98db\u884c\u6a5f\u3067\u79fb\u52d5\u3057\u3001\u3055\u3089\u306b\u305d\u306e\u3069\u3061\u3089\u3067\u3082\u306a\u3044\u7a7a\u6e2f\u306b\u98db\u884c\u6a5f\u3067\u79fb\u52d5\u3059\u308b\u3088\u3046\u306a\u7d4c\u8def\u3092\u8003\u3048\u307e\u3059\u3002\n# \u98db\u884c\u6642\u9593\u306e\u548c\u306f\u6700\u77ed\u3067\u4f55\u6642\u9593\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u304b\u3002\n\nP,Q,R = map(int,input().split())\n\nprint(min(P + Q, P + R, Q + R))", "V = list(map(int, input().split()))\n\nprint(sum(V) - max(V))", "p,q ,r=map(int,input().split())\nprint(min(p+q,p+r,r+q))", "lst = sorted([int(x) for x in input().split()])\n\nprint((sum(lst[:2])))\n", "P,Q,R = map(int,input().split())\nprint(min(P+Q,min(Q+R,R+P)))", "P, Q, R = [int(i) for i in input().split()]\n\nprint((sum([P, Q, R]) - max(P, Q, R)))\n", "p,q,r = map(int, input().split())\nprint(min([p+r, p+q, r+q]))", "p, q, r = list(map(int, input().split()))\ntime = [p, q, r]\n\nprint((sum(time) - max(time)))\n", "p = sorted(list(map(int,input().split())))\nprint(p[0]+p[1])", "P, Q, R = map(int,input().split())\n\nFlight_time = [P+Q, Q+R, R+P]\n\nprint(min(Flight_time))", "P,Q,R=map(int,input().split())\nprint(min(P+Q,P+R,R+Q))", "p,q,r = map(int,input().split())\nans = p+q+r-max(p,q,r)\nprint(ans)", "P, Q, R = map(int,input().split())\n\ntime = [P+Q,P+R,R+Q]\ntime.sort()\nprint(time[0])", "a,b,c = map(int,input().split())\n\nprint(min(a+b,a+c,b+c))", "q = list(map(int,input().split()))\nq = sorted(q)\nprint(q[0] + q[1])"]