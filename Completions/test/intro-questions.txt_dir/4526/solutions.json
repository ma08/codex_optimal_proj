["for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    keke = dict()\n    for elem in ar:\n        if elem in keke:\n            keke[elem] += 1\n        else:\n            keke[elem] = 1\n    ans = 0\n    for i in range(n):\n        num = ar[i]\n        for j in range(i + 1, n):\n            num += ar[j]\n            if num in keke:\n                ans += keke[num]\n                keke[num] = 0\n    print(ans)", "def Zs(): return list(map(int, input().split()))\ndef Z(): return int(input())\n\ndef solve(N, A):\n    s = [0] * (N + 1)\n    for i in range(N):\n        s[i + 1] = s[i] + A[i]\n    aru = [False] * (N + 1)\n    for i in range(N):\n        for j in range(i + 1, N):\n            if s[j + 1] - s[i] <= N:\n                aru[s[j + 1] - s[i]] = True\n    ans = 0\n    for i in range(N):\n        if aru[A[i]]: ans += 1\n    return ans\n\nfor _ in range(Z()):\n    N = Z()\n    A = Zs()\n    print(solve(N, A))\n\n\n", "import sys\n\n\ninput()\nfor a in sys.stdin.readlines()[1::2]:\n    a = [int(s) for s in a.split()]\n    n = len(a)\n\n    can = [False for i in range(n)]\n    \n    for i in range(1, n):\n        s = a[i]\n        for j in range(i-1, -1, -1):\n            s += a[j]\n            if s > n:\n                break\n\n            can[s-1] = True\n\n    print(sum([1 for num in a if can[num-1]]))\n", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    p = max(s)\n    dict = {}\n    for i in range(n):\n        count = s[i]\n        for j in range(i+1, n):\n            count += s[j]\n            dict[count] = 1\n            if count >= p:\n                break\n    ans = 0\n    for i in range(n):\n        if dict.get(s[i]) is not None:\n            ans += 1\n    print(ans)\n", "t = int(input())\nspl = []\n\nfor i in range(8001):\n\tspl.append(0)\n\nfor i in range(t):\n\tn = int(input())\n\tarr = input().split(' ')\n\n\tfor j in range(n):\n\t\tarr[j] = int(arr[j])\n\n\tfor j in range(n):\n\t\tcurr = arr[j]\n\t\tfor k in range(j+1, n):\n\t\t\tcurr += arr[k]\n\t\t\tif (curr > 8000):\n\t\t\t\tbreak\n\t\t\tspl[curr] = 1\n\n\tans = 0\n\n\tfor j in range(n):\n\t\tans += (spl[arr[j]])\n\n\tfor j in range(8001):\n\t\tspl[j] = 0\n\n\tprint (ans)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    arr = list(map(int, input().split(\" \")))\n    prefix = []\n    prefix.append(arr[0])\n    mx = arr[0]\n    for i in range(1, n):\n        mx = max(mx, arr[i])\n        prefix.append(arr[i])\n        prefix[i] += prefix[i - 1]\n\n    m = {}\n    for i in range(0, n):\n        for j in range(i + 1, n):\n            if i == 0:\n                s = prefix[j]\n                if s <= mx:\n                    m[s] = 0\n            else:\n                s = prefix[j] - prefix[i - 1]\n                if s <= mx:\n                    m[s] = 0\n    \n    ans = 0\n    for i in arr:\n        if i in m:\n            ans += 1\n\n    print(ans)    ", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    special = [0] * (2 * n)\n    for i in range(n - 1):\n        summ = a[i]\n        j = i + 1\n        while j < n and summ < n:\n            summ += a[j]\n            j += 1\n            special[summ] = 1\n    cnt_spec = 0\n    for i in range(n):\n        cnt_spec += special[a[i]]\n    print(cnt_spec)"]