["import math\n\nN = int(input())\n\ndef f(a,b):\n    if len(str(a)) < len(str(b)):\n        return len(str(b))\n    else:\n        return len(str(a))\n\nans = 100000000000\nfor i in range(1,int(math.sqrt(N)+1)):\n    if N % i == 0:\n        ans = min(ans,f(i,N//i))\nprint(ans)\n", "# C - Digits in Multiplication\ndef main():\n    n = int(input())\n    ans = []\n\n    for i in range(1, int(n**0.5)+1):\n        if n % i == 0:\n            ans.append(max(len(str(i)), len(str(n//i))))\n    else:\n        print(min(ans))\n\n\n\n        \ndef __starting_point():\n    main()\n__starting_point()", "import math\nn = int(input())\nans = 10\nfor i in range(1, int(math.sqrt(n))+1):\n  if n%i == 0:\n    ans2 = max(len(str(i)), len(str(n//i)))\n    #print(i,len(str(i)), len(str(n//i)))\n    if ans > ans2:\n      ans = ans2\nprint(ans)\n", "n = int(input())\ni = 1\nans = float(\"inf\")\nwhile i**2 <= n:\n    if n%i == 0:\n        ans = min(ans, max(len(str(i)), len(str(n//i))))\n    i += 1\nprint(ans)", "import math\nn = int(input())\nans = len(str(n))\nfor i in range(1,int(math.sqrt(n))+1):\n    if n%i == 0:\n        ans = min(ans,max(len(str(i)),len(str(n//i))))\nprint(ans)", "import math\n\nN = int(input())\nA = []\nB = []\nnum_list = []\n\nroot = math.floor(math.sqrt(N))\n\n\ndef solv(N):\n    for i in range(1,root+1):\n        if N%i == 0:\n            A.append(i)\n            B.append(N//i)\n    for a,b in zip(A,B):\n        a_str = str(a)\n        b_str = str(b)\n        a_num = len(a_str)\n        b_num = len(b_str)\n        if a_num > b_num:\n            num_list.append(a_num)\n        elif a_num < b_num:\n            num_list.append(b_num)\n        else:\n            num_list.append(a_num)\n    return print(min(num_list))\n\nsolv(N)\n", "from math import sqrt, log10\nn = int(input())\n\nfor i in reversed(range(int(sqrt(n))+1)):\n    if n%i==0:\n        break\na = int(log10(i))+1\nb = int(log10(n//i))+1\nprint(max(a,b))", "n = int(input())\n\nval = 0\nans = float('inf')\nfor i in range(1, int(n**0.5+1)):\n  if n % i == 0:\n    val = max(len(str(i)), len(str(int(n/i))))\n    ans = min(ans, val)\nprint(ans)", "N = int(input())\nketa = len(str(10 **10))\nfor i in range(1, int(10**5)+1):\n    if N%i == 0:\n        keta = min(keta, max(len(str(i)), len(str(N//i))))\nprint(keta)\n\n", "import math\nn=int(input())\nans=100\nfor a in range(1,int(math.sqrt(n))+1):\n    if n%a==0:\n        m=max(len(str(a)),len(str(n//a)))\n        ans=min(ans,m)\nprint(ans)", "import math\nn=int(input())\nans=10\nfor i in range(1,int(math.sqrt(n))+1):\n    if n%i==0:\n        b=int(n/i)\n        f=max(len(str(i)),len(str(b)))\n        ans=min(f,ans)\nprint(ans)", "n = int(input())\nfor i in range(int(n**0.5), 0, -1):\n  if n % i == 0:\n    print(len(str(n//i)))\n    break", "n=int(input())\n\ndef f(a,b):\n    a,b=len(str(a)),len(str(b))\n    return max(a,b)\n\nflist=[]\na=int(n**0.5)\n\nfor i in range(1,a+1):\n    if n%i==0:\n        j=int(n/i)\n        tmp=f(i,j)\n        flist.append(tmp)\nprint(min(flist))", "N = int(input())\nans = 100000\nfor i in range(1, 10 ** 5):\n    if N % i == 0:\n        ans = min(ans, max(len(str(i)), len(str(N // i))))\n\nprint(ans)\n", "import sys\nimport math\n\n\ndef f(x: int, y: int) -> int:\n    return max(len(str(x)), len(str(y)))\n\n\nn = int(input())\nmin_f_value = sys.maxsize\n\nfor a in range(1, int(math.sqrt(n)) + 1):\n    b, rem = divmod(n, a)\n    if rem == 0:\n        min_f_value = min(min_f_value, f(a, b))\n\nprint(min_f_value)\n", "N = int(input())\nans = 100000\nfor i in range(1, 10 ** 7):\n    if N % i == 0:\n        ans = min(ans, max(len(str(i)), len(str(N // i))))\n\nprint(ans)\n", "n = int(input())\nans = float(\"inf\")\n\nfor i in range(1,int(n**0.5)+2):\n    if n % i == 0:\n        j = n // i\n        \n        res = max(len(str(i)),len(str(j)))\n        ans = min(ans,res)\n        \nprint(ans)", "N=int(input())\n\ndef divisors(N):\n    result = 1e12\n    for i in range(2, N):\n        if i**2>N:\n            break\n        if N%i==0:\n            B=int(N/i)\n            tmp = max(len(str(B)), len(str(i)))\n            result = min(result, tmp)\n    # \u81ea\u8eab\u3067\u3057\u304b\u5272\u308c\u306a\u3044\n    if result==1e12:\n        result = len(str(N))\n    return result\n\nprint((divisors(N)))\n", "from math import sqrt\nn = int(input())\nres = 100\nfor a in range(1, int(sqrt(n)) + 1):\n  if n % a == 0:\n    b = n // a\n    res = min(res, max(len(str(a)), len(str(b))))\nprint(res)", "import math\nn = int(input())\n\ndef k(p):\n  c = 0\n  while p > 0:\n    c += 1\n    p //= 10\n  return c\n\nres = 100\nfor i in range(1,int(math.sqrt(n)) + 5):\n  if n % i == 0:\n    res = min( max(k(i), k(n//i)), res)\n\nprint(res)", "n = int(input())\nfor i in range(int(n**0.5), 0, -1):\n  if n % i == 0:\n    print(len(str(n//i)))\n    break", "N=int(input())\n\nans=len(str(N))\nfor A in range(1,int(-(-N**0.5//1))+1):\n    if N%A!=0:\n        continue\n\n    B=N//A\n    ans=min(ans,max(len(str(A)),len(str(B))))\n\nprint(ans)", "N = int(input())\nhigh_divs = []\nk = 1\n\nwhile k*k <= N:\n  if N%k == 0:\n    high_divs.insert(0,N//k)\n  k += 1\n\nprint(len(str(high_divs[0])))", "n = int(input())\n\nx = int(n ** 0.5)\n\nfor i in range(x):\n    if n % (x - i) == 0:\n        print(len(str(n // (x - i))))\n        break", "def __starting_point():\n    N = int(input())\n    i = 1\n    ans = 10\n    while i*i <= N:\n        if N%i == 0:\n            f = max(len(str(i)), len(str(N//i)))\n            ans = min(f, ans)\n        i += 1\n    \n    print(ans)\n\n__starting_point()", "# ABC 057: C \u2013 Digits in Multiplication\nN = int(input())\n\nFs = [len(str(N))]\n\nfor n in range(2, int(N ** (1 / 2)) + 1):\n    if N % n == 0:\n        num_digit = len(str(n)) if len(str(n)) >= len(str(N // n)) else len(str(N // n))\n        Fs.append(num_digit)\n\nprint(min(Fs))", "n=int(input())\nimport math\nr=math.sqrt(n)\nans=len(str(n))\nfor i in range(1, math.floor(r)+1):\n    if n%i==0:\n        ans=min(ans, max(len(str(i)), len(str(n//i))))\nprint(ans)", "n = int(input())\ndiv = [1, ]\nfor i in range(2, int(n ** 0.5) + 1):\n    if n % i == 0:\n        div.append(i)\nm = div[-1]\nif m == 1:\n    print((len(str(n))))\nelse:\n    print((max(len(str(n//m)), len(str(m)))))\n", "n = int(input())\nl = []\ni = 1\nwhile i * i <= n:\n    if n % i == 0:\n        num = max(len(str(i)), len(str(n // i)))\n        l.append(num)\n    i += 1\nprint(min(l))", "N=int(input())\ni=1\nans=1000000000000\nwhile i*i<=N:\n    if N%i==0:\n        x=i\n        y=N//i\n        ans=min(ans,max(len(str(x)),len(str(y))))\n    i+=1\nprint(ans)\n", "def get_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            upper_divisors.append(n//i)\n        i += 1\n    return [lower_divisors, upper_divisors]\n\nn = int(input())\n\nup = get_divisors(n)[0]\ndn = get_divisors(n)[1]\n\nans = 11\nfor a, b in zip(up, dn):\n    a = str(a)\n    b = str(b)\n    f = max(len(a), len(b))\n    ans = min(ans, f)\n\nprint(ans)", "def func(n) :\n    i = 1\n    b = n\n    while i*i <= n :\n        if n % i == 0 :\n            if max(len(str(i)), len(str(n//i))) < b :\n                b = max(len(str(i)), len(str(n//i)))\n        \n        \n        i += 1\n    \n    return print(b)        \n\nn = int(input())\nfunc(n)", "from math import sqrt\n\nn = int(input())\nans = float(\"INF\")\nfor i in range(1,int(sqrt(n))+1):\n    if n%i == 0:\n        j = n//i\n        ans = min(ans,max(len(str(i)),len(str(j))))\nprint(ans)\n", "N = int(input())\n\nM = 1\n\nfor i in range(1, int(N ** (1/2)) + 1):\n   if N % i == 0:\n      if M < i:\n         M = i\n\nM = N // M\n\nndm = len(list(str(M)))\n\nprint(ndm)", "N = int(input())\n\nA = 1\nans = len(str(N))\nwhile A**2 <= N:\n    if N % A == 0:\n        B = int(N / A)\n        num = max(len(str(A)), len(str(B)))\n        ans = min(ans, num)\n    A += 1\nprint(ans)", "N = int(input())\nM = int(pow(N,1/2))\n\nfor i in range(M,0,-1):\n    if N%i == 0:\n        print((len(str(N//i))))\n        return\n", "import math\nn = int(input())\n\nfor a in range(1, int(math.sqrt(n))+1):\n    if n%a == 0:\n        b = n//a\n        ans = len(str(b))\nprint(ans)", "import sys\n\ndef make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors  + upper_divisors[::-1]\n\n\ninput = sys.stdin.readline\n\nn = int(input())\n\nyaku_list = make_divisors(n)\nlength = len(yaku_list)\nhalf_index = int(length/2)\n\na = 0\nb = 0\nif length % 2 == 0:\n    a = yaku_list[half_index]\n    b = yaku_list[half_index-1]\nelse:\n    a = yaku_list[half_index]\n    b = a\n\nketa_a = len(str(a))\nketa_b = len(str(b))\n\nprint(max(keta_a,keta_b))", "n = int(input())\n\ndef cal(a):\n  return len(str(a))\nm = 11\nfor i in range(1,6):\n  for j in range(1,10**i+1):\n    if n%j==0:\n      m = min(m,max(cal(j),cal(n//j)))\n      # print(m)\nprint(m)", "n=int(input())\n\nfor i in range(int(n**0.5),0,-1):\n    if n%i==0:\n        break\n\nprint((len(str(n//i))))\n", "n = int(input())\n\ndef make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\n\nyakusu = make_divisors(n)\nl_yakusu = len(yakusu)\nidx = 0\n\nmx = 10\n\nfor a in range(1,10**5+1):\n    if a>n:\n        break\n    if idx<l_yakusu and a==yakusu[idx]:\n        idx += 1\n        keta_a = len(str(a))\n        keta_b = len(str(n//a))\n        f = max(keta_a, keta_b)\n        mx = min(mx, f)\n\nprint(mx)", "from math import sqrt\nfrom math import floor\nn = int(input())\nans = 10 ** 10\nfor i in range(1,floor(sqrt(n))+1):\n    if n % i == 0:\n        a = str(i)\n        b = str(n // i)\n        ans = min(ans,max(len(a),len(b)))\nprint(ans)", "N=int(input())\n\ni=1\nlst=[]\nwhile i*i<=N:\n\tif N%i==0:\n\t\tlst.append(max(i,N//i))\n\ti+=1\n\nans=min(lst)\nprint(len(str(ans)))", "n = int(input())\n\ndef divs(n:int) -> list:\n    divs = []\n    for i in range(1, int(n**0.5)+1):\n        if n % i == 0:\n            divs.append(i)\n            if i != n // i:\n                divs.append(n//i)\n    divs.sort()\n    return divs\n\ndiv_l = divs(n)\nprint((max(len(str(div_l[(len(div_l)//2)-1])), len(str(div_l[len(div_l)//2])))))\n", "from math import sqrt\n\nn = int(input())\nans = float('inf')\nfor a in range(1, int(sqrt(n)) + 1):\n    if n % a == 0:\n        b = n // a\n        ans = min(ans, max(len(str(a)), len(str(b))))\nprint(ans)", "n = int(input())\na = 1\nfor i in range(1, int(n ** 0.5)+1):\n  if n % i == 0:\n    a = i\n#print(a, n // a)\nprint(max(len(str(a)), len(str(n // a))))", "def digit(a,b):\n    a = str(a)\n    b = str(b)\n    return max(len(a),len(b))\n\ndef makedivisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n//i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\n\nn = int(input())\nl = makedivisors(n)\nm = 10**9\nfor a in range(len(l)):\n    for b in range(len(l)):\n        if l[a] * l[b] == n:\n            m = min(m,digit(l[a],l[b]))\nprint(m)\n    \n", "n=int(input())\n\nroot=int(n**0.5)\n\nmin_keta=10000000000\nfor i in range(1,root+1):\n    if n%i==0:\n        one=len(str(i))\n        two=len(str(n//i))\n        min_keta=min(min_keta,max(one,two))\n\n\n\n\nprint(min_keta)\n", "#n, *d = map(int, open(0).read().split())\n# dream dreamer erase eraser \nn=int(input())\n\ndef f(a,b):\n    return max(len(str(a)),len(str(b)))\nm=10000\nfor a in range(1,10**10):\n    if n%a==0:\n        m=min(f(a,n//a),m)\n    if n<a or n//a<a:\n        break\nprint(m)", "import sys\n# sys.setrecursionlimit(100000)\n\n\ndef input():\n    return sys.stdin.readline().strip()\n\n\ndef input_int():\n    return int(input())\n\n\ndef input_int_list():\n    return [int(i) for i in input().split()]\n\n\ndef make_divisors(n: int):\n    lower_divs = []\n    upper_divs = []\n    i = 1\n    while i**2 <= n:\n        if n % i == 0:\n            lower_divs.append(i)\n            if i != n // i:\n                upper_divs.append(n // i)\n        i += 1\n    return lower_divs + upper_divs[::-1]\n\n\ndef main():\n    n = input_int()\n    divs = make_divisors(n)\n    ans = float(\"inf\")\n    for div in divs:\n        a = div\n        b = n // div\n        if a * a <= n:\n            ans = min(ans, max(len(str(a)), len(str(b))))\n    print(ans)\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\nans = 100000\nfor i in range(1, 13 * 10 ** 6):\n    if N % i == 0:\n        ans = min(ans, max(len(str(i)), len(str(N // i))))\n\nprint(ans)\n", "n = int(input())\ndef f(a,b):\n    a = list(str(a))\n    b = list(str(b))\n    return max(len(a),len(b))\n\nm = float('inf')\nfor i in range(1,int(n**0.5)+1):\n    if n%i == 0:\n        m = min(m,f(i,n//i))\nprint(m)\n", "n = int(input())\n\ndef cal(a):\n  return len(str(a))\nm = 11\nfor j in range(1,10**6+1):\n  if n%j==0:\n    m = min(m,max(cal(j),cal(n//j)))\n    # print(m)\nprint(m)", "n=int(input())\nx=int(n**0.5)\nfor i in range(x):\n    if n%(x-i)==0:\n        print(len(str(n//(x-i))))\n        break", "# coding: utf-8\nimport math\nimport copy\nimport itertools\nn = int(input())\nflg=False\nfor i in range(int(math.sqrt(n))+1, 0,-1):\n    #print(i)\n    if n%i==0:\n        a=i\n        b=n//a\n        flg=True\n        break\nif flg:\n    print(max(len(str(a)), len(str(b))))\nelse:\n    print(len(str(n)))", "\nurl = \"https://atcoder.jp//contests/abc057/tasks/abc057_c\"\ndef make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\n\n\ndef main():\n    n = int(input())\n    ans = 10000000000000000\n    ns = make_divisors(n)\n    for i in range(0, (len(ns)//2) + 1):\n        tmp = max(len(str(ns[i])), len(str(ns[len(ns)-i-1])))\n        ans = tmp if tmp < ans else ans\n    if len(ns) % 2 != 0:\n            tmp = len(str(ns[len(ns) // 2]))\n            ans = tmp if tmp < ans else ans\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math\nN=int(input())\nroot_N=int(math.sqrt(N))\nfor i in range(root_N,0,-1):\n  if N%i==0:\n    print(len(str(N//i)))\n    break", "N = int(input())\nans = 100000\nfor i in range(1, 17 * 10 ** 6):\n    if N % i == 0:\n        ans = min(ans, max(len(str(i)), len(str(N // i))))\n\nprint(ans)\n", "n=int(input())\ni=1\na=[]\nwhile i**2<=n:\n    if n%i==0:\n        b=[str(i),str(n//i)]\n        a.append(b)\n    i+=1\nprint(len(a[-1][1]))", "def divisor(n):\n    i = 1\n    f = 0\n    table = []\n    while i * i <= n:\n        if n % i == 0:\n            f = max(len(str(i)), len(str(n//i)))\n            table.append(f)\n        i += 1\n    return table\n\n\nn = int(input())\nprint((min(divisor(n))))\n", "import math\n\nn = input()\nanswer =  len(n)\nnumber = int(n)\nfor a in range(int(math.sqrt(int(n))),1,-1):\n  if number%a != 0:\n    continue\n  b = number//a\n  answer = min(answer, max(len(str(a)),len(str(b))))\n  break\n  \nprint(answer)", "import math\nn = int(input())\ns = math.ceil(math.sqrt(n))\nh = 10**5\nfor i in range(1,s+1):\n  if n%i==0:\n    if h > max(len(str(i)),len(str(int(n/i)))):\n      h = max(len(str(i)),len(str(int(n/i))))\nprint(h)", "N = int(input())\nminimum = 10**10\nfor i in range(1,int(N**.5)+1):\n    if N%i == 0:\n        minimum = min(minimum, max(len(str(i)), len(str(N//i))))\nprint(minimum)\n", "n = int(input())\ndef solve(n):\n    i = 1\n    ans = 10000000\n    while i*i <= n:\n        if n % i == 0:\n            lower = i\n            if i != n // i:\n                upper = n//i\n            else:\n                upper = i\n            anstmp = max(len(str(lower)), len(str(upper)))\n            if ans > anstmp:\n                ans = anstmp\n        i += 1\n        \n    return ans\n\nprint(solve(n))", "def digit(a,b):\n    a = str(a)\n    b = str(b)\n    return max(len(a),len(b))\n\ndef makedivisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n//i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\n\nn = int(input())\nl = makedivisors(n)\nm = 10**9\nfor a in range(len(l)):\n    for b in range(a,len(l)):\n        if l[a] * l[b] == n:\n            m = min(m,digit(l[a],l[b]))\nprint(m)\n    \n", "import math\nN = int(input())\n\nL = []\nfor i in range(1, math.floor(N ** 0.5) + 1):\n    if N % i == 0:\n        L.append([i, N // i])\n\nans = float('inf')\nfor i in range(len(L)):\n    if L[i][0] > L[i][1]:\n        ans = min(ans, len(str(L[i][0])))\n    else:\n        ans = min(ans, len(str(L[i][1])))\n\nprint(ans)\n", "N = int(input())\nans = 100000\nfor i in range(1, 15 * 10 ** 6):\n    if N % i == 0:\n        ans = min(ans, max(len(str(i)), len(str(N // i))))\n\nprint(ans)\n", "def solve(num):\n    s_num = str(num)\n    return len(s_num)\n\nn = int(input())\nres = []\nfor i in range(1, int(n**.5)+1):\n    if n%i == 0:\n        x = n//i\n        res.append(max(solve(x), solve(i)))\nprint(min(res))", "N = int(input())\nf = lambda x,y:len(str(x)) if x > y else len(str(y))\nfrom math import floor, sqrt\nans = len(str(N))\nfor a in range(1,floor(sqrt(N))+1):\n    if N % a == 0:\n        ans = min(ans, f(a,N//a))\nprint(ans)", "N=int(input())\n\ndef divisor(n):\n\ti=1\n\ttable=[]\n\twhile i*i<=n:\n\t\tif n%i==0:\n\t\t\ttable.append(n//i)\n\t\ti+=1\n\tnum=min(table)\n\tans=len(str(num))\n\treturn ans\n  \nprint(divisor(N))", "n = int(input())\n\ndef cal(a):\n  return len(str(a))\nm = 11\nfor j in range(1,10**5+1):\n  if n%j==0:\n    m = min(m,max(cal(j),cal(n//j)))\n    # print(m)\nprint(m)", "import math\nN = int(input())\nlim = math.floor(math.sqrt(N))\nf_min = len(str(N))\nfor i in range(1, lim + 1):\n  if N % i == 0:\n    B = int(N / i)\n    if len(str(B)) < f_min:\n      f_min = len(str(B))\nprint(f_min)\n", "n=int(input())\nx=int(n**0.5)\nfor i in range(x):\n  if n%(x-i)==0:\n    y=n//(x-i)\n    y=str(y)\n    print(len(y))\n    break", "import math\n\nn = int(input())\n\ndef f(a, b):\n  if len(str(a)) < len(str(b)):\n    return len(str(b))\n  else:\n    return len(str(a))\n\nans = float('inf')\nfor i in range(1, int(math.sqrt(n)+1)):\n  if n%i == 0:\n    ans = min(ans, f(i, n//i))\nprint(ans)", "n = int(input())\n\ndef decomp(n):\n    ans = float('inf')\n\n    for i in range(1, int(-(-n**0.5//1))+1):\n        if n%i == 0:\n            ans = min(ans, max(len(str(i)), len(str(n//i))))\n    print(ans)\n\ndecomp(n)", "n = int(input())\nans = []\n    \nfor i in range(1,int(n**0.5) + 1):\n  if (n/i).is_integer():\n    a = len(str(i))\n    b = len(str(int(n/i)))\n    x = max(a,b)\n    ans.append(x)\n    \n\nprint(min(ans))", "n = int(input())\nres = 11\nfor a in range(1, int(n ** 0.5) + 1):\n    if n % a == 0:\n        b = n // a\n        f = max(len(str(a)), len(str(b)))\n        res = min(f, res)\n\nprint(res)\n", "N=int(input())\nres=N\nfor i in range(1,int(N**(1/2))+1) :\n  if N%i==0 :\n    res=min(res,N//i)\nprint(len(str(res)))", "\nN = int(input())\nF = [100000000000, 1]\n\nfor a in range(1, int(N ** 0.5) + 1):\n    if N % a == 0:\n        b = int(N / a)\n        f = [a, b]\n        if max(len(str(f[0])), len(str(f[1]))) < max(len(str(F[0])), len(str(F[1]))):\n            F = f\n\nprint(max(len(str(F[0])), len(str(F[1]))))", "import math\nn = int(input())\na = 0\nfor i in range(1, int(math.sqrt(n))+1):\n    if n % i == 0:\n        a = i\nb = n//a\nj = 0\nwhile True:\n    m = b / (10**j)\n    if m>=1 and m<10:\n        ans = j+1\n        break\n    j+=1\n\nprint(ans)\n", "from math import *\n\ndef func(x):\n  ret_val=0\n  while 0<x:\n    x//=10\n    ret_val+=1\n  return ret_val\n\nN=int(input())\nans=func(N)\nfor A in range(1,int(sqrt(N))+1):\n  if N%A==0:\n    B=N//A\n    temp=max(func(A),func(B));\n    ans=min(ans,temp)\nprint(ans)\n", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Wed Oct  7 11:29:47 2020\n\n@author: liang\n\"\"\"\n\nimport math\n\nN = int(input())\nR = int(math.sqrt(N))\nfor i in range(R,0,-1):\n    if N%i == 0:\n        print(len(str(N//i)))\n        break", "# Problem: https://atcoder.jp/contests/abc057/tasks/abc057_c\n# Python 1st Try\n\nimport sys\n# from collections import defaultdict\n# import heapq,copy\nimport pprint as pp\n# from collections import deque\ndef II(): return int(sys.stdin.readline())\ndef MI(): return list(map(int, sys.stdin.readline().split()))\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\n\n\n# Const\nMAXSIZE = ( 1 << 31 ) -1\nMINSIZE = -( 1 << 31) + 1\n\n\ndef solver(input_int):\n    result = len(str(input_int))\n    for j in range(1, int(input_int**0.5) +1 , +1):\n        divide_check = (input_int % j) != 0\n        if divide_check:\n            continue\n        divide_value = input_int // j\n        long_check = len(str(divide_value)) <= result\n        if long_check:\n            result = len(str(divide_value))\n    # algorithm\n    return result\n\n\ndef __starting_point():\n    N = II()\n    print((\"{}\".format(solver(N))))\n\n__starting_point()", "import math\nbb = int(input())\nmini = bb\naa = int(math.sqrt(bb))\nfor i in range(1,aa+1):\n  if bb%i == 0:\n    cc = int(bb/i)\n    \n    ans = len(str(cc))\n    if ans < mini:\n      mini = ans\nprint(mini)", "import math\nn = int(input())\nif n < 10:\n    print(1)\nelse:\n    a = 0\n    for i in range(1, int(math.sqrt(n))+1):\n        if n % i == 0:\n            a = i\n    b = n//a\n    j = 1\n    while True:\n        m = b / (10**j)\n        if m>=1 and m<10:\n            ans = j+1\n            break\n        j+=1\n\n    print(ans)", "n = int(input())\ndef f(a,b):\n    a = list(str(a))\n    b = list(str(b))\n    return max(len(a),len(b))\n\ndef make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\n\nl = make_divisors(n)\nif len(l)%2 == 0:\n    m = float('inf')\n    for i in range(len(l)//2):\n        m = min(m, f(l[i],n//l[i]))\n    print(m)\nelse:\n    m = float('inf')\n    for i in range(len(l)//2+1):\n        m = min(m, f(l[i],n//l[i]))\n    print(m)", "# -*- coding: utf-8 -*-\nimport math\n\nN = int(input())\n\nans = 10\nfor A in range(1, int(math.sqrt(N)+1)):\n    if N % A == 0:\n        B = int(N / A)\n        tmp = max(len(str(A)), len(str(B)))\n        if ans > tmp:\n            ans = tmp\n\nprint(ans)\n", "N = int(input())\nA = 1\nfor i in range(2,int(N**(1/2))+1):\n    if  N%i == 0:\n        A = i\nB = str(N//A)\nA = str(A)\nprint(max(len(B),len(A)))", "import math\nfrom math import gcd,pi,sqrt\nINF = float(\"inf\")\n\nimport sys\nsys.setrecursionlimit(10**6)\nimport itertools\nfrom collections import Counter,deque\ndef i_input(): return int(input())\ndef i_map(): return list(map(int, input().split()))\ndef i_list(): return list(i_map())\ndef i_row(N): return [i_input() for _ in range(N)]\ndef i_row_list(N): return [i_list() for _ in range(N)]\ndef s_input(): return input()\ndef s_map(): return input().split()\ndef s_list(): return list(s_map())\ndef s_row(N): return [s_input for _ in range(N)]\ndef s_row_str(N): return [s_list() for _ in range(N)]\ndef s_row_list(N): return [list(s_input()) for _ in range(N)]\n\nimport string\n\ndef main():\n    N = i_input()\n\n    l = []\n    for i in range(1,math.ceil(sqrt(N))+1):\n        if N % i == 0:\n            l.append(i)\n\n    ans = INF\n    for i in l:\n        b = N//i\n        c = max(i,b)\n        ans = min(ans, len(str(c)))\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\nans = 0\nfor i in range(1, int(n ** 0.5) + 1):\n    if n % i == 0:\n        ans = max(0, n // i, i)\n\nprint((len(str(ans))))\n\n", "def cal(N):\n    num=(N**0.5)//1\n    num=int(num)\n    for i in range(num,0,-1):\n       if N%i==0:\n           k=int(N/i)\n           x=len(str(k))\n           break\n    return x\n\nprint(cal(int(input())))", "import math\n\n\ndef f(a, b: int) -> int:\n    alen = len(str(a))\n    blen = len(str(b))\n    if alen > blen:\n        return alen\n    else:\n        return blen\n\n\nn = int(input())\nmax = int(math.sqrt(n))\nfmin = len(str(n))\n\nfor i in range(1, max+1):\n    if n % i == 0:\n        tmp = f(i, int(n/i))\n        if tmp < fmin:\n            fmin = tmp\nprint(fmin)", "def make_divisors(n):\n    div=[]\n    for i in range(1,-int(-n**0.5//1)):\n        if n%i==0:\n            div.append(i)\n    if n%(n**0.5)==0:\n        div.append(int(n**0.5))\n    return div\n\nn=int(input())\na=make_divisors(n)[-1]\nb=n//a\nprint((len(str(b))))\n", "num = int(input())\n\ndigits = len(str(num))\n\nans = digits\n\nfor i in range(1,10 ** (digits // 2 + 1)):\n    if num % i == 0:\n        target = max(len(str(i)), len(str(num//i)))\n        if ans >= target:\n            ans = target\n        else:\n            print(ans)\n            return\nprint(ans)", "import math\n\n\ndef main():\n    N = int(input())\n\n    # A < B \u3068\u3057\u3066\u3001\u63a2\u7d22\u3059\u308b\n    # A <= 10^5\n    keta = int(math.log10(N))+1\n    for A in range(1, int(pow(N, 0.5)) + 1):\n        if N % A == 0:\n            B = N // A\n            # print(B, int(math.log10(B))+1)\n            keta = min(keta, int(math.log10(B))+1)\n\n    print(keta)\n\n\nmain()\n", "def divisor(n):\n    l = []\n    ll = []\n    for i in range(1, int(n**0.5)+1):\n        if n%i == 0:\n            l.append(i)\n            # ll.append(n//i)\n    # l += reversed(ll)\n    # l = sorted(list(set(l)))\n    return l\n\n\nn = int(input())\nl = divisor(n)\nans = 100100100100\n\nfor i in l:\n    a = len(str(i))\n    b = len(str(n//i))\n    ans = min(ans, max(a, b))\n\nprint(ans)\n\n", "N = int(input())\n\n\nans = N\nfor i in range(int(N ** 0.5) + 1, 1, -1):\n    if N % i == 0:\n        ans = N // i\n        break\nprint((len(str(ans))))\n", "import math\ndef ten(p):\n    if p == 0:\n        return 0\n    else:\n        return ten(p // 10) + 1\nN = int(input())\nx = int(math.sqrt(N))\nwhile N % x != 0:\n    x -= 1\ny = int(N / x)\n\nprint((ten(y)))\n\n\n", "import math\nN=int(input())\nsqN=math.floor(math.sqrt(N))\nfor i in range(sqN):\n  if N%(i+1)==0:\n    B=N//(i+1)\n    B=str(B)\n    B=list(map(str,B))\n    F=len(B)\nprint(F)", "n = int(input())\nans = 10 ** 9\nfor i in range(1, int(n**0.5) + 1):\n  if n % i != 0:\n    continue\n  ans = min(ans, max(len(str(i)), len(str(n//i))))\nprint(ans)"]