["N = int(input())\nds = []\nmochidan = 0\nfor i in range(N):\n    ds.append(int(input()))\n\nwhile ds:\n    tmp = max(ds)\n    ds = [j for j in ds if j < tmp]\n    mochidan += 1\n\nprint(mochidan)", "N=int(input())\nd=set()\nfor _ in range(N):\n  d.add(int(input()))\nprint((len(d)))\n", "N = int(input())\nint_list = []\nfor _ in range(N):\n  int_list.append(int(input()))\nint_list.sort()\nprint(len(set(int_list)))", "n = int(input())\nl = [input() for i in range(n)]\nprint((len(set(l))))\n", "N = int(input())\nd = []\nfor i in range(N):\n  d.append(int(input()))\n\ndic = {}\n\nfor i in range(N):\n  if d[i] in dic:\n    dic[d[i]] += 1\n  else:\n    dic[d[i]] = 1\n\nprint(len(dic))", "print(len(set([int(input()) for i in range(int(input()))])))", "N=int(input())\nz=[]\nfor num in range(101):\n  z.append(0)\ncounter=0\nwhile counter < N:\n  d=int(input())\n  z[d]=1\n  counter+=1\nresult=sum(z)\nprint(result)", "num = int(input())\na = []\n\nfor i in range(num):\n    n = int(input())\n    a.append(n)\n    \nmyset = set(a)\n\nlen_list = len(frozenset(myset))\n\nprint(len_list)\n", "N = int(input())\nd_list = []\nHeight = 0\nfor i in range(N):\n    d_list.append(int(input()))\nwhile d_list != []:\n    MAX_Value = max(d_list)\n    while MAX_Value == max(d_list):\n        d_list.remove(MAX_Value)\n        if d_list == [] :\n            break\n    Height +=1\nprint(Height)", "n = int(input())\na = set()\nfor _ in range(n):\n  a.add(int(input()))\nprint((len(a)))\n", "n = int(input())\nd = set()\nfor i in range(n):\n    d.add(int(input()))\nprint(len(d))", "i = input()\n\nl = []\n\nfor n in range(int(i)):\n    n = input()\n    l.append(n)\n\nl = list(set(l))\n\nprint((len(l)))\n", "n = int(input())\nlist_d = sorted([int(input()) for i in range(0, n)], reverse=True)\nlist_ans = []\nfor i in range(0, len(list_d)):\n    if list_d[i] not in list_ans:\n        list_ans.append(list_d[i])\nprint(len(list_ans))", "N=int(input())\nd = [int(input()) for i in range(N)]\n\nprint(len(set(d)))", "n = int(input())\nkey = []\nans = 0\nfor _ in range(n):\n    s = int(input())\n    if s not in key:\n        key.append(s)\n        ans += 1\nprint(ans)\n", "n = int(input())\n\nprint(\n  len(\n    set(\n      [\n        int(input()) for _ in range(n)\n      ]\n    )\n  )\n)", "import sys\ndef input(): return sys.stdin.readline().rstrip()\n\nN = int(input())\nD = []\nfor i in range(N):\n    d = int(input())\n    D.append(d)\n\nD_set = set(D)\nans = len(D_set)\n\nprint(ans)", "# https://atcoder.jp/contests/abc085/tasks/abc085_b\n# 2\u5206\u63a2\u7d22\u6728\u3092\u4f7f\u3046\u3089\u3057\u3044\u304c\u30fb\u30fb\u30fb\u30fb\u3053\u308c\u306f\u78ba\u304b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f\u306a\u304f\u3001\u5b9f\u88c5\u65b9\u6cd5\u3092\u6c17\u3092\u3064\u3051\u308c\u3070\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u305f\u6c17\u304c\u3059\u308b\u3002\nN = int(input())\nD = [int(input()) for _ in range(N)]\nD.sort()\ncount = 1\nfor i in range(1, len(D)):\n    if D[i] != D[i - 1]:\n        count += 1\nprint(count)\n", "from typing import List\n\n\ndef answer(n: int, d: List[int]) -> int:\n    return len(set(d))\n\ndef main():\n    n = int(input())\n    d = list(int(input()) for _ in range(n))\n    print(answer(n,d))\n\ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\nq = len(list(set([int(input()) for i in range(n)])))\nprint(q)", "n,*l = map(int,open(0).read().split())\nprint(len(set(l)))", "#!/usr/bin/env python3\nimport sys\nsys.setrecursionlimit(10**6)\n\nn = int(input())\nd = [int(input()) for i in range(n)]\n\nprint((len(set(d))))\n", "n = int(input())\na = sorted([input() for i in range(n)])\nc = 1\nfor i in range(n - 1):\n    if a[i] < a[i + 1]:\n        c += 1\nprint(c)\n", "from sys import stdin\nn = int(stdin.readline().rstrip())\na = [0]*n\nfor x in range(n):\n   a[x] = int(stdin.readline().rstrip())\n\na.sort(reverse = True)\n\nsum = 1\n\nfor x in range(n-1):\n   if a[x] > a[x+1]:\n      sum += 1\nprint(sum)", "n = int(input())\nd = set(list([int(input()) for i in range(n)]))\nprint((len(d)))\n", "n = int(input())\ndata = [int(input()) for i in range(n)]\nprint(len(set(data)))", "N = int(input())\nd = []\nfor i in range(N):\n  d.append(int(input()))\n\nd.sort(reverse=True)\n\nstep = 1\nfor i in range(N-1):\n  if d[i] > d[i+1]:\n    step +=1\n\nprint(step)", "num = int(input())\n\ntable  = []\nfor i in range(num):\n    table.append(int(input()))\n\nsetting = set(table)\nprint(len(setting))", "N = int(input())\nnum_list = []\nfor n in range(N):\n  num = int(input())\n  num_list.append(num)\nans = len(set(num_list))\nprint(ans)", "N = int(input())\nd = []\nfor _ in range(N):\n  d.append(int(input()))\nd.sort(reverse=True)\n\ntop = 101\nans = 0\n\nfor d_ in d:\n  if d_ < top:\n    ans += 1\n    top = d_\n\nprint(ans)", "N = int(input())\nmoti_list = [int(input()) for i in range(N)]\n\nmoti_list.sort(reverse=True)\ntower = 1\nfor j in range(N - 1):\n    if moti_list[j] > moti_list[j + 1]:\n        tower += 1\n\nprint(tower)", "N = input()\nN = int(N)\nli = []\nfor i in range(N):\n    li.append(input())\n\nans = 0\na = []\nb = 0\nfor i in range(101):\n    a.append(i - i)\n\nfor i in range(N):\n    b = li[i]\n    b = int(b)\n    a[b] = 1\n\nfor i in range(101):\n    ans += a[i]\nprint(ans)", "n = int(input())\nst = set()\nfor i in range (0, n):\n    a = input()\n    st.add(a)\nprint(len(st))", "N = int(input())\nnums =[int(input()) for i in range(N)]\nprint(len(set(nums)))", "#85B\nn=int(input())\ndata=[]\nfor i in range(0,n):\n    data.append(int(input()))\nres=sorted(data)\nc=1\nfor j in range(1,n):\n    if res[j]!=res[j-1]:\n        c=c+1\nprint(c)", "N = int(input())\na = list(input() for i in range(N))\n\nprint(len(set(a)))", "n = int(input())\nd = [int(input()) for i in range(n)]\n\nprint(len(set(d)))", "n = int(input())\nd = set(int(input()) for i in range(n))\n\nprint((len(d)))\n", "n = int(input())\nd = [input() for _ in range(n)]\nans = len(set(d))\nprint(ans)", "# coding: utf-8\n# Your code here!\n\nn = int(input())\nD = []\nfor i in range(n) : \n    D.append(int(input()))\nD = set(D)\n\nprint(len(D))", "n = int(input())\nd = [int(input()) for i in range(n)]\nd = sorted(d, reverse=True)\nans = 0\nlast = 101\nfor i in d:\n    if i < last:\n        ans+=1\n        last = i\nprint(ans) ", "n,*d=map(int,open(0).read().split())\nprint(len(set(d)))", "def main():\n    n = int(input())\n    d = set(int(input()) for _ in range(n))\n    print(len(d))\n\n\nmain()", "N = int(input())\n\nList = list(int(input()) for i in range(N))\n\nprint(len(set(List)))", "N=int(input())\nd=[int(input()) for i in range(N)]\n\noriginal=[]\nfor i in d:\n    if i not in original:\n        original.append(i)\nprint((len(original)))\n", "n = int(input())\nd = [input() for i in range(n)]\nprint(len(set(d)))", "n = int(input())\nlst = []\nfor i in range(n):\n  d = int(input())\n  lst.append(d)\nres = sorted(list(set(lst)))\nprint(len(res))", "n = int(input())\nd = []\nfor i in range(n):\n  d.append(int(input()))\n  \nprint(len(set(d)))", "n=int(input())\nn_list=[]\nfor i in range(n):\n    n_list.append(int(input()))\n\nprint(len(set(n_list)))", "N = int(input())\nd = [int(input()) for i in range(N)]\nd.sort(reverse=True)\nans = 0\nind = 100000\nfor i in range(N):\n    if d[i] < ind:\n        ans += 1\n        ind = d[i]\nprint(ans)", "N = int(input())\nA = sorted([input() for _ in range(N)])\nprint((len(set(A))))\n", "N=int(input())\ns={int(input()) for _ in range(N)}\nprint((len(s)))\n", "n=int(input())\nd=[int(input()) for i in range(n)]\nprint(len(set(d)))", "N=int(input())\nlist=[input() for i in range(0,N)]\n\nprint(len(set(list)))", "n=int(input())\nd=[int(input()) for _ in range(n)]\nprint((len(set(d))))\n", "N = int(input())\nd = set()\nfor i in range(N):\n    a = int(input())\n    d.add(a)\nprint(len(d))", "#!/usr/bin/env python3\n\ndef main():\n    n = int(input())\n    print((len(set([int(input()) for i in range(n)]))))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\nans = len(set([input() for _ in range(n)]))\nprint(ans)", "with open(0) as f:\n    N, *d = list(map(int, f.read().split()))\nd = list(set(d))\nprint((len(d)))\n", "n = int(input())\nd = [int(input()) for _ in range(n)]\nprint(len(set(d)))", "def get_unique_list(seq):\n  seen = []\n  return [x for x in seq if x not in seen and not seen.append(x)]\n\nn=int(input())\na=[]\nfor i in range(n):\n  a.append(int(input()))\n\nb=get_unique_list(a)\nprint(len(b))", "N = int(input())\nD = sorted([int(input()) for _ in range(N)], reverse=True)\ncnt = 1\nfor i in range(len(D)-1):\n    if D[i] <= D[i+1]:\n        pass\n    else:\n        cnt += 1\nprint(cnt)", "n = int(input())\nl = list([])\nfor i in range(n):\n  l.append(int(input()))\n  \ns = set(l)\nprint(len(s))", "# https://atcoder.jp/contests/abc085/tasks/abc085_b\n\n\"\"\"\n\u4e0a\u306e\u307b\u3046\u304c\u9905\u304c\u5c0f\u3055\u304f\u306a\u308b\u3088\u3046\u306b\u91cd\u306d\u308b\n\u2192 \u540c\u3058\u30b5\u30a4\u30ba\u306e\u9905\u306f\u4f7f\u3048\u306a\u3044\n\n\u540c\u3058\u30b5\u30a4\u30ba\u306e\u9905\u306f1\u3064\u3060\u3051\u4f7f\u3063\u3066\uff08\u91cd\u8907\u3092\u6392\u9664\u3057\u3066\uff09\n\u5927\u304d\u3044\u3082\u306e\u304b\u3089\u91cd\u306d\u3066\u3044\u3051\u3070\u3044\u3044\n\n\u4f55\u6bb5\u91cd\u306d\u3089\u308c\u308b\u304b\n= \u4f55\u7a2e\u985e\u306e\u30b5\u30a4\u30ba\u306e\u9905\u304c\u3042\u308b\u304b\n\"\"\"\n\nn = int(input())\nmochi_set = set()\nfor i in range(n):\n    size = int(input())\n    mochi_set.add(size)\n\nprint((len(mochi_set)))\n", "n = int(input())\nd = [int(input()) for _ in range(n)]\nprint(len(set(d)))", "n=int(input())\nd=[int(input()) for i in range(n)]\nd=list(set(d))\nprint(len(d))", "print(len(set(input()for _ in range(int(input())))))", "n = int(input())\nd = []\n\nfor i in range(n):\n    d.append(int(input()))\n\nprint((len(set(d))))\n", "n=int(input())\nk=[]\nfor i in range(n):\n    d = int(input())\n    k.append(d)\nprint(len(set(k)))", "N = int(input())\n\nm = []\nfor i in range(N):\n    m.append(int(input()))\n\nm = sorted(set(m))\nprint(len(m))", "N = int(input())\nd = []\nfor i in range(N):\n    d.append(int(input()))\ncnt = 0\nfor i in range(1,101):\n    qual = 0\n    for j in d:\n        if i == j:\n            qual = 1\n    if qual == 1:\n        cnt += 1\nprint(cnt)", "N = int(input())\nmoti_list = []\nfor i in range(N):\n    moti_list.append(int(input()))\n\nmoti_list.sort(reverse=True)\ntower = 1\nfor j in range(N - 1):\n    if moti_list[j] > moti_list[j + 1]:\n        tower += 1\n\nprint(tower)", "N = int(input())\nd = [int(input()) for i in range(N)]\n\nl = []\nfor i in range(N):\n  if d[i] not in l:\n    l.append(d[i])\n    \nprint(len(l))", "N = int(input())\n\nd=[]\nfor i in range(N):\n\td.append(int(input()))\n\ndset = set(d)\nprint(len(dset))", "n = int(input())\nprint((len(set(list([int(input()) for i in range(n)])))))\n", "N = int(input())\nD = []\nfor i in range(N):\n    D.append(int(input()))\n\ncount = 0\npreMax = 0\nfor i in range(N):\n    if len(D) == 0:\n        break\n    if preMax != max(D):\n        count += 1\n        preMax = max(D)\n    D.remove(max(D))\n\nprint(count)", "N = int(input())\nd = {}\ndupli = 0\nfor _ in range(N):\n  i = input()\n  if i in d:\n    d[i] += 1\n    dupli += 1\n  else:\n    d[i] = 0\nprint(str(N-dupli))", "n = int(input())\nli = []\nfor i in range(n):\n    li.append(int(input()))\nli.sort(reverse=True)\n\ncnt = 1\nfor i in range(n-1):\n    if li[i] > li[i+1]:\n        cnt += 1\n\nprint(cnt)", "N=int(input())\nd=[int(input()) for _ in range(N)]\nprint((len(set(d))))\n", "N = int(input())\nd = []\nfor i in range(0,N):\n  d += [int(input())]\n\nd.sort(reverse=True)\n\nans = 0\n\nx = max(d)+1\nfor i in range(0,N):\n  \n  if d[i] < x:\n    ans += 1\n    x = d[i]\n\nprint(ans)", "N = int(input())\nlst = []\n\nfor i in range(N):\n   lst.append(input())\n\nprint(len(set(lst)))", "n = int(input())\ns = [int(input()) for i in range(n)]\nprint(len(list(set(s))))", "N = int(input())\nd_lst = []\nD_lst = []\ncnt = 0\nfor i in range(N):\n    d = int(input())\n    d_lst.append(d)\n\nfor j in range(max(d_lst)+1):\n    D = d_lst.count(j)\n    D_lst.append(D)\n    if D == 0:\n        pass\n    else:\n        cnt += 1\nprint(cnt)", "N = int(input())\nd = [int(input()) for _ in range(N)]\nd.sort()\n\nans = N\nfor i in range(N-1):\n  if d[i] == d[i+1]:\n    ans -= 1\n    \nprint(ans)", "n = int(input())\nprint(len(set([int(input()) for i in range(n)])))", "n = int(input())\nD = []\nfor _ in range(n):\n    d = int(input())\n    D += [d]\nprint(len(set(D)))", "n = int(input())\nd = list()\nans = 0\nfor i in range(n):\n    d.append(int(input()))\n    if d[i] not in d[:i]:\n        ans += 1\n\nprint(ans)", "N = int(input())\n\nList = sorted(list(set(list(int(input()) for i in range(N)))))\n\nprint((len(List)))\n\n", "N = int(input())\nd = []\nfor i in range(N):\n  d.append(int(input()))\n\nnum = [0]*(max(d)+1)\nfor i in range(N):\n  num[d[i]] +=1\n\nres = 0\n\nfor i in range(max(d)+1):\n  if num[i]:\n    res += 1\n\nprint(res)", "N=int(input())\nD = []\nfor _ in range(N):\n    d = int(input())\n    D.append(d)\n\nD_num=list(set(D))\nprint(len(D_num))", "n = int(input())\nd = []\nfor i in range(n):\n    d.append(int(input()))\n\nprint(len(set(d)))", "N = int(input())\nlist1 = []\nfor i in range(N):\n    list1.append(int(input()))\n\nset1 = set(list1)\nans = len(set1)\nprint(ans)\n", "n = int(input())\nd = []\nfor num in range(n):\n  i = int(input())\n  d.append(i)\nsd = set(d)\nprint(len(sd))", "#!/user/bin/env pypy3\nimport sys\nfrom typing import List\n\n\ndef fast_input():\n    return sys.stdin.readline()[:-1]\n\n\ndef solve(mochi_list: List[int]) -> int:\n    sorted_mochi_list = sorted(mochi_list)\n    kagamimochi = set(sorted_mochi_list)\n    return len(kagamimochi)\n\n\ndef main():\n    n = int(fast_input())\n    d = []\n    for i in range(n):\n        d.append(int(fast_input()))\n    result = solve(d)\n    print(result)\n\n\nmain()\n", "n = int(input())\nprint(len(set(map(int, [input() for i in range(n)]))))", "def kagami_mochi():\n    n = int(input())\n    d = []\n    for _ in range(n):\n        d.append(int(input()))\n    d.sort()\n    d_unique = list(set(d))\n    print(len(d_unique))\ndef __starting_point():\n    kagami_mochi()\n__starting_point()", "N = int(input())\nd = list([0]*N)\nfor i in range(N):\n    d[i] = int(input())\nd = set(d)\nprint(len(d))", "N=int(input())\nd=[input() for i in range(N)]\ndef ans085(N:int, d:str):\n    d=map(int,d)\n    return(len(set(d)))\nprint(ans085(N,d))"]