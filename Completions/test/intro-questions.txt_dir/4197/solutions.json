["N = int(input())\nA = list(map(int, input().split()))\ndct = dict(enumerate(A))\nad = sorted(dct.items(), key=lambda x:x[1])\nans = []\nfor i in ad:\n    j = i[0] + 1\n    ans.append(j)\na = map(str, ans)\nb = ' '.join(a)\nprint(b)", "N = int(input())\nA = list(map(int, input().split()))\n \nl = [0]*N\nfor i in range(N):\n  l[A[i]-1] = str(i+1)\n\nans = ''\nfor i in range(N):\n  ans += (l[i] + ' ')\n  \nprint(ans)", "n = int(input())\na = list(map(int,input().split()))\ntl = [0 for i in range(n)]\nfor i in range(n):\n    tl[a[i] -1] = str(i+1)\nprint(' '.join(tl))", "import sys\nimport math\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    N = I()\n    A = LI()\n    A2 = []\n    for i in range(N):\n        A2.append([i+1, A[i]])\n    A2.sort(key=lambda x: x[1])\n    ans = \"\"\n    for a, b in A2:\n        print(a, end = \" \")\n    print()\n        \ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\na_l = list(map(int, input().split()))\nans = [0] * n \nfor i, a in enumerate(a_l):\n    ans[a-1] = i+1\nprint(*ans)", "N = int(input())\nA = list(map(int, input().split()))\n\n# \u8f9e\u66f8\u578b\u3092\u4f7f\u3044\u3001value\u3067\u30bd\u30fc\u30c8\u3059\u308b\ndic = {}\nfor i in range(N):\n  dic[i] = A[i]\n\ndic = sorted(dic.items(), key=lambda x:x[1])\nfor d in dic:\n  print(d[0]+1, end=\" \")", "n = int(input())\nA = list(map(int, input().split()))\n\nL = [0]*n\nfor i in range(n):\n    L[A[i]-1] = i+1\nprint((*L))\n", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Wed Sep  9 02:37:37 2020\n\n@author: liang\n\"\"\"\n\"\"\"\nkey = lambda x:x[1]\n\"\"\"\nN = int(input())\nA = [int(i) for i in input().split()]\nB = [(i+1,A[i]) for i in range(N)]\nB.sort(key=lambda x: x[1])\n#print(B)\nres = [str(b[0]) for b in B]\n#print(res)\nprint(' '.join(res))", "N = int(input())\nA = list(map(int, input().split()))\n \nans = [0]*N\nfor i in range(N):\n  ans[A[i]-1] = str(i+1)\n\nfor i in range(N):\n  print(ans[i], end=' ')", "N = int(input())\nA_ls = list(map(int, input().split(' ')))\nrst = [ [] for i in range(N) ]\nfor idx, val in enumerate(A_ls):\n    rst[val - 1] = idx + 1\n[ print(i, end=\" \") for i in rst ]", "n = int(input())\na = list(map(int, input().split()))\n\nans_h = {}\nans = []\n\nfor (i, ele) in enumerate(a):\n    ans_h[ele] = i + 1\n\nfor i in range(1, n + 1):\n    ans.append(str(ans_h[i]))\n\nprint(\" \".join(ans))", "import sys\nimport math\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    N = I()\n    A = LI()\n    A2 = []\n    for i in range(N):\n        A2.append([i+1, A[i]])\n    A2.sort(key=lambda x: x[1])\n    ans = \"\"\n    for a, b in A2:\n        ans += str(a)+\" \"\n    print(ans)\n        \ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\na = [int(i) for i in input().split()]\nlst = [0 for _ in range(n)]\ni = 1\nfor ai in a:\n  lst[ai-1] = i\n  i += 1\nprint(' '.join([str(i) for i in lst]))", "n=int(input())\na=list(map(int,input().split()))\nans = []\nfor i in range(n):\n    ans.append(0)\nfor i in range(n):\n    ans[a[i]-1] = i +1\nfor i in range(len(ans)):\n    print(ans[i], end=\" \")", "import numpy\n\nN = int(input())\nA_list = list(map(int, input().split()))\n\nans_list = numpy.argsort(A_list)\nfor i in range(N):\n    ans_list[i] += 1\nprint(*ans_list)", "N = int(input())\nA = list(map(int, input().split()))\nlis = [0] * N\nk = 1\nfor i in A:\n  lis[i-1] = k\n  k += 1\nlis = map(str, lis)\nans = \" \".join(lis)\nprint(ans)", "N = int(input())\nA_list = list(map(int, input().split()))\nB_list = [0] * N\nfor i, A in enumerate(A_list):\n    B_list[A_list[i] - 1] = str(i + 1)\nans = \" \".join(B_list)\nprint(ans)", "N = int(input())\nA = list(map(int, input().split()))\nL = [0] * N\nfor i in range(N):\n  L[A[i]-1] = i + 1\nprint(*L)", "# C\nN = int(input())\n# A = list(map(int, input().split()))\norder_number = {}\n\n\nfor num, order in enumerate(map(int, input().split())):\n    order_number[num+1] = order\n\nfor order, number in sorted(order_number.items(), key=lambda x: x[1]):\n    print(order, end=\" \")\nprint()", "n=int(input())\na=list(map(int,input().split()))\n\nans=['-']*n\nfor i in range(n):\n    ans[a[i]-1]=str(i+1)\n\nprint(' '.join(ans))", "#-*-coding:utf-8-*-\nimport sys\ninput=sys.stdin.readline\n\ndef main():\n    attended_people=[]\n    sorted_attended_people=[]\n    index_number=[]\n    answer=[]\n    n = int(input())\n    attended_people=list(map(int,input().split()))\n    index_number=[[idx,number] for idx,number in enumerate(attended_people)]\n    sorted_attended_people=sorted(index_number,key=lambda x:x[1])\n    for idx,data in sorted_attended_people:\n        answer.append(str(idx+1))\n    print(\" \".join(answer))\n\ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\na = list(map(int,input().split()))\nb = [0] * n\nfor i in range(n):\n  b[a[i]-1] = i+1\nprint(*b)", "N = int(input())\nL = list(map(int,input().split()))\nd = {}\nfor i in range(N):\n  d[L[i]] = i + 1\nfor j in range(1 , N + 1):\n  print(d[j] , end = ' ')\n  \n  \n", "n = int(input())\na = list(map(int, input().split()))\nans = [0]*n\nfor i in range(n):\n  ans[a[i]-1] += i+1\n  ans[a[i]-1] = str(ans[a[i]-1])\nprint(\" \".join(ans))", "N = int(input())\nA = list(map(int,input().split()))\nB = [0]*N\n\nfor n in range(N):\n  B[A[n]-1] = n+1\n  \nprint(*B)", "N = int(input())\nA_ls = list(map(int, input().split(' ')))\nrst = [ [] for i in range(N) ]\nfor idx, val in enumerate(A_ls):\n    rst[val - 1] = idx + 1\n[ print(i, end=\" \") for i in rst ]", "n = int(input())\nan = list(map(int,input().split()))\nzyunban = [0]*n\nt = 1\n\nfor x in an:\n  zyunban[x-1] = t\n  t += 1\n  \n\n\nzyunban = list(map(str,zyunban))\n\nprint((\" \".join(zyunban)))\n", "N = int(input())\nA = tuple(map(int, input().split()))\nL = [0] * N\nfor i in range(N):\n  L[A[i]-1] = i + 1\nprint(*L)", "input();a={j:i+1 for i,j in enumerate(map(int,input().split()))}\nprint(*[j for i,j in sorted(a.items(),key=lambda x:x[0])])", "import numpy as np\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = np.empty(n, dtype=int)\nfor i in range(n):\n    ans[a[i]-1] = i+1\nprint(*ans)", "N=int(input())\nA=list(map(int, input().split()))\nans=[0]*N\n\nfor i in range(N):\n\tans[A[i]-1]=str(i+1)\n\nprint(\" \".join(ans))", "n = int(input())\nline = list(map(int, input().split()))\nans = ['0' for i in range(n)]\nfor i in range(n):\n  ans[line[i]-1] = str(i+1)\nprint(' '.join(ans))", "n = int(input())\na = list(map(int,input().split()))\nb = [None] *n\nfor idx,person in enumerate(a):\n    b[person-1] = idx+1\nfor j in b:\n    print(j,end=' ')", "n = int(input())\na = [int(s) for s in input().split()]\nans = [0] * n\nfor i in range(n):\n    ans[a[i] - 1] = i + 1\nprint(*ans)  ", "n = int(input())\na = list(map(int,input().split()))\nans = [0] * n\nfor i,j in enumerate(a):\n    ans[j-1] = i + 1\nprint(*ans)", "n = int(input())\na = list(map(int,input().split()))\nans = [0]*n\nfor i in range(n):\n  ans[a[i]-1] = i+1\nfor i in range(n):\n  print(ans[i],end=\" \")", "\nn=int(input())\nA=list(map(int,input().split()))\nans=[0]*n\nfor i in range(n):\n  ans[A[i]-1]=i+1\nprint(*ans)", "N = int(input())\nA = list(map(int, input().split()))\nA_dict_list = []\n\nfor i in range(1, N+1):\n    A_dict_list.append({\n        'num': i,\n        'people': A[i-1]\n    })\n\nA_dict_list = sorted(A_dict_list, key=lambda x:x['people'])\n\nans = []\nfor a in A_dict_list:\n    ans.append(a['num'])\n\nprint((*ans))\n", "n = int(input())\nA = list(map(int,input().split()))\nL = [0]*n\nfor i in range(n):\n  L[A[i]-1] = i + 1\nprint(*L)", "n = int(input())\na = [int(x) for x in input().split()]\nans = [0] * n\nfor i in range(n):\n  ans[a[i]-1] = i+1\nans = [str(x) for x in ans]\nprint(\" \".join(ans))", "n = int(input())\nan = list(map(int, input().split()))\n\n\nclass Solution:\n    values = [i for i in range(1, n + 1)]\n\n    def __init__(self, n, an):\n        self.n = n\n        self.an = an\n\n    def answer(self):\n        d = dict(zip(self.an, Solution.values))\n        for i in range(1, n + 1):\n            print(d[i], end=\" \")\n\n\nconditions = Solution(n, an)\nconditions.answer()\n", "N = int(input())\nA_ls = list(map(int, input().split(' ')))\nrst = [ [] for i in range(N) ]\nfor idx, val in enumerate(A_ls):\n    rst[val - 1] = idx + 1\n[ print(i, end=\" \") for i in rst ]", "n = int(input())\na = list(map(int,input().split()))\nans_list = [0] * n\nfor i in range(n):\n    ans_list[a[i] - 1] = (i + 1)\nans = \"\"\nfor i in range(n):\n    ans += str(ans_list[i])\n    ans += \" \"\nprint(ans)", "n = int(input())\na = list(map(int, input().split()))\n\norder = [0] * n\n\nfor i in range(n):\n    order[a[i] - 1] = i + 1\n\nprint(' '.join(map(str, order)))", "N = int(input())\nA = list(map(int, input().split()))\n\nrev = [i for i in range(N)]\nfor i in range(N):\n    rev[A[i]-1] = i+1\nprint((*rev))\n", "n = int(input())\nalst = list(map(int, input().split()))\nans = [-1 for _ in range(n)]\nfor i, a in enumerate(alst, start = 1):\n  ans[a - 1] = i\nprint(*ans)", "N=int(input())\nA=list(map(int,input().split()))\na=[0]*N\nfor i in range(N):\n    a[A[i]-1]=i+1\n\nfor i in range(N-1):\n    print(a[i],end=' ')\nprint(a[N-1])", "n = int(input())\narr = list(map(int,input().split()))\n\nd = {}\nfor i, a in enumerate(arr,1):\n  d[i] = a\nd = sorted(d.items(), key=lambda x:x[1])\nfor x in dict(d).keys():\n  print(x, end=\" \")", "import numpy as np\n\nn = int(input())\na = np.array(list(map(int,input().split())))\n\nans = np.argsort(a)\nprint(*ans + 1)", "# coding: utf-8\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = [[a, i + 1] for i, a in enumerate(A)]\n    B.sort()\n    for i, j in B:\n        if i == N:\n            print(j)\n        else:\n            print(j, \"\", end='')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\na = list(map(int,input().split()))\nl = [0] * n\nfor i in range(n):\n    l[a[i]-1] = i + 1\nprint(*l)", "N = int(input())\nA = list(map(int,input().split()))\n\nans = [-1] * N\nfor i,a in enumerate(A):\n    ans[a-1] = i+1\nprint((*ans))\n", "n = int(input())\na = [int(s) for s in input().split()]\nans = [0]*n\n\nfor i in range(n):\n    ans[a[i] - 1] = i + 1\nprint(\" \".join(map(str,ans)))", "n=int(input())\ns={i+1:int(x) for i,x in enumerate(input().split())}\ns=sorted(s.items(), key=lambda x:x[1])\nfor i,j in s:\n  print(i,end=' ')\n", "n = int(input())\nan = list(map(int, input().split()))\nkeys = [i for i in range(1, n + 1)]\n\nd = dict(zip(an, keys))\n\nfor i in range(1, n + 1):\n    print(d[i], end=\" \")\n", "n=int(input())\na=list(map(int,input().split()))\nans=[0]*n\nfor i in range(len(a)):\n    ans[a[i]-1]=i+1\nprint(*ans)", "N = int(input())\nA = list(map(int,input().split()))\nB = [0]*N\n\nfor i in range(N):\n  B[A[i]-1] = i+1\n  \nprint(\" \".join(map(str,B)))", "n = int(input())\na = list(map(int, input().split()))\na = {a[i-1]: i for i in range(1, n+1)}\nfor x in sorted(a.items()):\n\tprint(x[1], end=' ')", "3\nimport sys\ninput = lambda: sys.stdin.readline().strip()\nn = int(input())\na = [int(x) for x in input().split()]\nprint((*(x + 1 for x in sorted(list(range(n)), key=lambda i: a[i]))))\n", "N = int(input())\nA = list(map(int, input().split()))\n\nlst = []\nfor i in range(N):\n  lst.append([i+1, A[i]])\nlst.sort(key=lambda x: x[1])\nfor j in lst:\n  print(j[0], end=\" \")", "N = int(input())\nrst = [ [] for i in range(N) ]\nA_ls = list(map(int, input().split(' ')))\nfor i, j in enumerate(A_ls):\n    rst[j - 1] = i + 1\n[ print(i, end=\" \") for i in rst ]", "N=int(input())\nA=list(map(int,input().split()))\n\nans=[0]*N\n\nfor i in range(N):\n    ans[A[i]-1]=i+1\n\n\nprint(*ans)", "N = int(input())\na = list(map(int,input().split()))\nnum = [0]*N\nfor i in range(N):\n  num[a[i]-1]=i\nfor i in num:\n  print(i+1,end=' ')", "n=int(input())\na=list(map(int,input().split()))\nans=[0]*n\nfor i in range(n):\n    ans[a[i]-1]+=(i+1)\n    ans[a[i]-1]=str(ans[a[i]-1])\nprint(\" \".join(ans))", "n = int(input())\nA = list(map(int, input().split()))\n\nP = [0]*n\n\nfor i in range(n):\n    P[A[i]-1] = i+1\n\nprint(*P,sep=' ')", "n = int(input())\nA = list(map(int, input().split()))\nans = [0]*n\nfor i in range(n):\n    ans[A[i]-1]=i+1\nprint(*ans)", "N = int(input())\nA_ls = list(map(int, input().split(' ')))\nrst = [ [] for i in range(N) ]\nfor idx, val in enumerate(A_ls):\n    rst[val - 1] = idx + 1\n[ print(i, end=\" \") for i in rst ]", "N = int(input())\nA = [int(i) for i in input().split()]\nans = [0]*N\nfor i in range(N):\n    ans[A[i]-1] = i+1    \nprint(\" \".join(map(str,ans)))", "N = int(input())\nA_ls = list(map(int, input().split(' ')))\nrst = [ [] for i in range(N) ]\nfor idx, val in enumerate(A_ls):\n    rst[val - 1] = idx + 1\n[ print(i, end=\" \") for i in rst ]", "def main():\n    import sys\n    n = int(input())\n    a = list(map(int,sys.stdin.readline().split()))\n\n    c = []\n\n    for i in range(1,n+1):\n        c.append((i,a[i-1]))\n\n    a = sorted(c,key=lambda x:x[1])\n\n    for i,idx in a:\n        print(i,end=\" \")\nmain()", "N=int(input())\nAlist=list(map(int,input().split()))\nindex=[i+1 for i in range(N)]\nAdict=dict(zip(Alist,index))\nfor i in range(1,N+1):\n    print(Adict[i],end=' ')", "N = int(input())\nA = list(map(int,input().split()))\n\norder = []\n\nfor n, a in enumerate(A):\n    order.append([n+1,a])\n\norder.sort(key = lambda x:x[1])\n\nfor Num, num in order:\n    print(Num, end = \" \")\n\nprint()", "n = int(input())\narr = list(map(int,input().split()))\n\nnew_arr = [0] * len(arr)\nfor i, a in enumerate(arr,1):\n  new_arr[a-1] = i\nprint(*new_arr)", "n=int(input())\nA=list(map(int,input().split()))\nans = list(range(n))\nfor i in range(n):\n  ans[A[i]-1] = i+1\nprint(\" \".join(map(str,ans)))", "n = int(input())\na = list(map(int, input().split()))\n\nl = sorted([(a[i], i+1) for i in range(n)])\nc = [y for x, y in l]\nprint(' '.join(list(map(str, c))))", "n = int(input())\nA = list(map(int, input().split()))\nB = [(i+1, A[i]) for i in range(n)]\nB.sort(key=lambda x: x[1])\nprint (\" \".join(list(map(str, [B[i][0] for i in range(n)]))))", "n = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    l.append([a[i], i+1])\nl = sorted(l)\nans = []\nfor j in range(n):\n    ans.append(str(l[j][1]))\nprint(\" \".join(ans))", "N = int(input())\nA = list(map(int,input().split()))\nfor i in range(N):\n  A[i] = (A[i],i+1)\nA.sort()\nans = ''\nfor tup in A:\n  v, i = tup\n  ans+=str(i)+' '\nprint(ans)", "n = int(input())\nlst = list(map(int,input().split()))\nlst2 = [0 for i in range(n)]\nfor i in range(n):\n    x = lst[i]\n    lst2[x - 1] = i + 1\n\nfor i in range(n):\n    if (i != n - 1):\n        print(lst2[i], end = ' ')\n    else:\n        print(lst2[i])\n", "N = int(input())\nA = list(map(int, input().split()))\n \nans = [0]*N\nfor i in range(N):\n  ans[A[i]-1] = str(i+1)\n\n# \u7b54\u3048\u3092\u51fa\u529b\u3059\u308b\u3002print(end=...)\u306f\u4fbf\u5229\uff01\nfor i in range(N):\n  print(ans[i], end=' ')", "def resolve():\n    n = int(input())\n    a = tuple(map(int,input().split()))\n    attend = [0]*n\n    for i,j in enumerate(a):\n        attend[j-1] = i+1\n    print(*attend)\nresolve()", "N=int(input())\nA=list(map(int, input().split()))\nB=[0]*N\nC=''\n \nfor i in range(N):\n    B[A[i]-1]=i+1\n \nfor i in range(N):\n    C+=str(B[i])+' '\n \nprint(C[0:-1])", "N = int(input())\nA = [int(n) for n in input().split()]\nans = [0] * N\nfor i, v in enumerate(A):\n    ans[v-1] = i+1\n\nprint(' '.join([str(n) for n in ans]))", "N = int(input())\narr = list(map(int, input().split()))\narr2 = [0]*N\nfor i in range(N):\n    arr2[arr[i]-1] = i+1\nprint(*arr2)", "import numpy as np\nn = input()\nprint(*np.argsort(list(map(int,input().split())))+1)", "N = int(input())\nA = [int(a) for a in input().split()]\nans = [0] * N\nfor i in range(N):\n  ans[A[i] - 1] = i + 1\nprint(*ans)", "N = int(input())\nA = list(map(int, input().split()))\n\nans = [0] * N\n\nfor i in range(N):\n    ans[A[i]-1] = i + 1\n\nprint(*ans)", "n=int(input())\na=list(map(int,input().split()))\nl=[0]*(n+1)\nfor i in range(n):\n  l[a[i]]=i+1\nfor i in range(1,n+1):\n  print(l[i],end=\" \")", "n=int(input())\n\na_tmp=list(map(int,input().split()))\na=[]\nfor i in range(n):\n    a.append([a_tmp[i],i+1])\na.sort(key=lambda x:x[0])\n\nfor i in range(n):\n    print(a[i][1],end=\" \")\n", "# -*- coding:utf-8 -*-\nN = int(input())\na = list(map(int,input().split()))\n\nL = {}\n\nfor i in range(N):\n    L[i] = a[i]\n\nsort_L = sorted(L.items(), key=lambda x:x[1])\n\nfor j in sort_L:\n    print(j[0]+1, end =\" \")\n", "N = int(input())\nA = list(map(int, input().split()))\n\nL = [0]*N\n\nfor i in range(N):\n    L[A[i]-1] = i+1\n\nprint(*L)", "N=int(input())\nA=list(map(int,input().split()))\nfor i in range(N):\n    A[i]=[A[i],i]\nA.sort()\nfor i in range(N):\n    print(A[i][1]+1,end=' ')\nprint()\n", "N = int(input())\nA = list(map(int, input().split()))\nL = [[] for x in range(N)]\n\nfor i in range(N):\n    L[i] = [A[i], i+1]\nL.sort()\n\nANS = [0 for i in range(N)]\nfor i in range(N):\n    ANS[i] = L[i][1]\nprint(*ANS)", "n=int(input())\na=list(map(int,input().split()))\nb=[0]*n\nfor i in range(n):\n  x=a[i]\n  b[x-1]=i+1\n\nprint(*b)", "n = int(input())\na = list(map(int,input().split()))\n\nc = []\n\nfor i in range(1,n+1):\n    c.append((i,a[i-1]))\n\na = sorted(c,key=lambda x:x[1])\n\nfor i,idx in a:\n    print(i,end=\" \")", "N = int(input())\nA = [int(c) for c in input().split()]\n\nl = [0]*N\nfor i in range(N):\n    l[A[i]-1] = i+1\n\nprint((' '.join(map(str, l))))\n\n", "n=int(input())\na=list(map(int,input().split()))\nans=[0]*n\nfor i , j in enumerate(a):\n  ans[j-1]=i+1\nprint(*ans)"]