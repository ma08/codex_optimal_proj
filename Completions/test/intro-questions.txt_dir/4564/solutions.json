["import sys, math\nfrom itertools import combinations as c, product as p\nfrom collections import deque\nsys.setrecursionlimit(10**9)\nINF = float('inf')\nMOD = 10**9 + 7\n#MOD = 998244353\n\n\ndef si(): return input()\ndef ii(): return int(input())\ndef fi(): return float(input())\ndef lstr(): return input().split()\ndef lint(): return list(map(int, input().split()))\ndef lintdec(): return list(map(lambda x:int(x) - 1, input().split()))\ndef lnstr(n): return [input() for _ in range(n)]\ndef lnint(n): return [int(input()) for _ in range(n)]\ndef lint_list(n): return [lint() for _ in range(n)]\n\n\n\n############################################################\nS = si()\nprint('yes' if len(set(S)) == len(S) else 'no')", "s = input()\ns = sorted(s)\ndif = True\nfor i in range(len(s)-1):\n    if s[i] == s[i+1]:\n        dif = False\nprint(\"yes\" if dif else \"no\")", "s = input()\nprint('yes') if len(set(list(s))) == len(s) else print('no')", "s=input()\nt=True\nfor i in s:\n    if s.count(i) != 1:\n        t=False\nprint(\"yes\" if t else \"no\")", "s=str(input())\nt=[]\nt.append(s[0])\nfor i in range(1,len(s)):\n  if s[i] in t:\n    print(\"no\")\n    return\n  t.append(s[i])\n\nprint(\"yes\")", "s=input()\nif len(s)==len(set(s)):\n    print(\"yes\")\nelse:\n    print(\"no\")", "s = input()\nans = \"yes\" if len(set(s)) == len(s) else \"no\"\nprint(ans)\n", "s = input()\nl = []\nfor i in range(len(s)):\n    if not s[i] in l:\n        l.append(s[i])\n    else :\n        print('no')\n        return\nprint('yes')\n\n", "s = str(input())\nL = []\nfor i in s:\n  if i in L:\n    print('no')\n    return\n  else:\n    L.append(i)\nprint('yes')", "s = input()\nres = \"yes\"\nfor i in range(len(s)):\n  for j in range(i+1,len(s)):\n    if s[i] == s[j]:\n      res = \"no\"\nprint(res)", "s = input()\nse = set(s)\nprint(\"yes\" if len(s) == len(se) else \"no\")", "def main():\n    s = input()\n    ans = 'no'\n    if len(set(s)) == len(s):\n        ans = 'yes'\n    print(ans)\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "S=input()\nfor c in S:\n    if S.count(c)>1:\n        print(\"no\")\n        break\nelse:\n    print(\"yes\")\n", "s = list(map(str, input()))\n\nif len(s) == len(set(s)):\n    print('yes')\nelse:\n    print('no')\n", "s = [c for c in input()]\n\nif len(set(s)) < len(s):\n    print('no')\nelse:\n    print('yes')", "import sys\nimport copy\nimport math\nimport itertools\nimport numpy as np\n\nS = input()\nfor i in range(len(S)):\n    if S.count(S[i])>1:\n        print(\"no\")\n        return\n\nprint(\"yes\")", "s=list(input())\nl=len(s)\nk=set(s)\nif l != len(k):\n    print('no')\nelse:\n    print('yes')", "s = input()\nprint('yes' if len(list(s)) == len(set(s)) else 'no')", "# ABC063\nfrom collections import Counter\n\nS = input()\ncount = Counter(S)\n\nfor cnt in count.values():\n    if cnt != 1:\n        print('no')\n        return\nelse:\n    print('yes')", "#-*-coding:utf-8-*-\nimport sys\ninput=sys.stdin.readline\n\ndef main():\n    s = input().rstrip()\n    string_dict={}\n\n    for i in s:\n        if i not in string_dict:\n            d = {i:1}\n            string_dict.update(d) \n        else:\n            print(\"no\")\n            return\n    print(\"yes\")\n\ndef __starting_point():\n    main()\n__starting_point()", "# 31\nS = str(input())\n\nlist = []\nans = 'yes'\nfor s in S:\n    for past in list:\n        if s == past: \n            ans = 'no'\n            break\n    if ans == 'no': break\n    list.append(s)\n\nprint(ans)", "s = input()\nif len(s) == len(list(set(list(s)))):\n    print('yes')\nelse:\n    print('no')", "S = input()\n\nn1 = len(S)\nn2 = len(set(S))\n\nif n1 == n2: print('yes')\nelse: print('no')", "S = input()\nls = []\ncheck = True\nfor i in range(len(S)):\n  if S[i] in ls:\n    check = False\n    break\n  ls.append(S[i])\n  \nprint(\"yes\" if check else \"no\")", "S = input()\n\ndef duplicate(seq):\n    seen = []\n    unique = [x for x in seq if x not in seen and not seen.append(x)]\n    return len(seq) != len(unique)\n\nif duplicate(S):\n    print('no')\nelse:\n    print('yes')", "string = input()\nprint('yes') if len(string) == len(set(string)) else print('no')\n    \n", "S = input()\n\n\nprint(\"yes\" if len(set(S)) == len(S) else \"no\")", "a=[0]*26\nS=input()\ni=0\nwhile True:\n    if i==len(S):\n        print(\"yes\")\n        break\n    b=ord(S[i])-97\n    if a[b]==1:\n        print(\"no\")\n        break\n    else:\n        a[b]=1\n        i+=1", "data=list(input())\nc=0\nfor i in range(0,len(data)-1):\n    for j in range(i+1,len(data)):\n        if data[i]==data[j]:\n            c=c+1\nif c==0:\n    print('yes')\nelse:\n    print('no')", "S=input()\nprint(\"yes\" if len(S)==len(set(S)) else \"no\")", "# \u300cABC-154-C\u300d\u306e\u985e\u984c\nS = input()\n \nn1 = len(S)\nn2 = len(set(S))\n \nif n1 == n2: print('yes')\nelse: print('no')", "s = str(input())\nchars = set()\nans = 'yes'\nfor c in s:\n    if c in chars:\n        ans = 'no'\n        break\n    chars.add(c)\nprint(ans)", "S = input()\nans = \"\"\n\nfor s in S:\n    if S.count(s) > 1:\n        ans = \"no\"\n        break\n    else:\n        ans = \"yes\"\n\nprint(ans)\n", "S = input()\nT = sorted(S)\nU = set(T)\nU = sorted(U)\nif T == U:\n  print('yes')\nelse:\n  print('no')\n", "s = input()\nprint(\"yes\") if len(set(s)) == len(s) else print(\"no\")", "def main():\n    s = input()\n    answer = 'yes'\n\n    for i in range(len(s)-1):\n        if s[i] in s[i+1:]:\n            answer = 'no'\n    print(answer)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "s = input()\nx = 0\nfor i in s:\n  c = 0\n  for j in s:\n    if i == j:\n      c += 1\n  if c != 1:\n    print(\"no\")\n    break\n  else:\n    x += 1\n    if x == len(s):\n      print(\"yes\")\n      break", "u = input()\nfor i in range(len(u)):\n  for j in range(i+1,len(u)):\n    if u[i]==u[j]:\n      print(\"no\")\n      return\nprint(\"yes\")", "s = input()\nl = []\nfor i in s:\n    if i in l:\n        print('no')\n        return\n    else:\n        l.append(i)\nprint('yes')\n", "from collections import Counter\n\nstring = Counter(input())\n\nfor _ in string.values():\n    if _ > 1:\n        print(\"no\")\n        break\nelse:\n    print(\"yes\")", "s = input()\nbool = True\nfor i in range(len(s) - 1):\n    for j in range(i + 1,len(s)):\n        if s[i] == s[j]:\n            bool = False\nif bool:\n    print('yes')\nelse:\n    print('no')", "s = list(map(str,input()))\nprint(\"yes\" if len(s) == len(set(s)) else \"no\")", "from collections import deque\nd = deque()\nfor s in input():\n  if s in d:\n    print('no')\n    return\n  else: \n    d.append(s)\nprint('yes')", "# -*- coding:utf-8 -*-\nS = input()\n\npast = []\nans = \"yes\"\n\nfor s in S:\n    if s not in past:\n        past.append(s)\n    else:\n        ans = \"no\"\n        break\n\nprint(ans)\n", "s = input()\nword = []\n\nfor i in s:\n    if (i not in word):\n        word.append(i)\n    else:\n        print('no')\n        return\n\nprint('yes')\n", "s = input()\nprint(\"yes\" if len(s) == len(set(s)) else \"no\")", "import sys\nS = input()\n\nfor s in S:\n    if S.count(s) > 1:\n        print('no')\n        return\n        \nprint('yes')", "a=input()\nb=[]\nc=0\nfor i in range(len(a)):\n  b.append(a[i])\nb.sort()\nfor i in range(len(a)-1):\n  if b[i]==b[i+1]:\n    c=c+1\nif c==0:\n  print(\"yes\")\nelse:\n  print(\"no\")", "s=input()\nt=set()\nfor x in s:\n  if x in t:\n    print('no')\n    return\n  else:\n    t.add(x)\nprint('yes')", "s = input()\nprint(\"yes\" if len(s) == len(set(s)) else \"no\")", "S = input()\n\nfor i in range(len(S)):\n    if S[i] in S[i+1:]:\n        print('no')\n        break\nelse:\n    print('yes')", "S=list(input())\nS.sort()\ncount = 0\nfor i in range(len(S)-1):\n    if S[i] == S[i+1]:\n        count += 1\nif count == 0:\n    print(\"yes\")\nelse:\n    print(\"no\")", "from typing import List\n\n\nS = list(input())  # type: List[str]\nif len(S) == len(set(S)):\n    print('yes')\nelse:\n    print('no')\n", "def main():\n    s = input()\n    if len(set(s)) == len(s):\n        print('yes')\n    else:\n        print('no')\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "s = input()\na = \"\"\nfor i in s:\n    if a.find(i) == -1:\n        a += i\n    else:\n        print(\"no\")\n        break\nelse:\n    print(\"yes\")\n", "s = list(input())\nwhile s:\n    c = s.pop()\n    if c in s:\n        print('no')\n        return\nprint('yes')", "S=input()\nfor i in range(len(S)) :\n  for j in range(i+1,len(S)) :\n    if S[i]==S[j] :\n      print(\"no\")\n      return\nprint(\"yes\")", "S = input()\nprint(\"yes\") if len(S) == len(set(list(S))) else print(\"no\")", "S = str(input())\ndata1 = []\nfor i in range(len(S)):\n    data1.append(S[i])\ndata2 = list(set(data1))\n\nif len(data1) == len(data2):\n    print('yes')\nelse:\n    print('no')\n", "s=input()\ns=sorted(s)\nfor i in range(len(s)-1):\n    if s[i]==s[i+1]:\n        print(\"no\")\n        return\nprint(\"yes\")", "# import math\n# import statistics\na=input()\n#b,c=int(input()),int(input())\nc=[]\nfor i in a:\n   c.append(i)\n#e1,e2,e3,e4 = map(int,input().split())\n#f = list(map(int,input().split()))\n#g = [input() for _ in range(a)]\n\nd=set(c)\n\nif len(d)<len(c):\n    print(\"no\")\nelse:\n    print(\"yes\")", "#n = int(input())\n#a, b = map(int,input().split())\n#l = list(map(int,input().split()))\n#l = [list(map(int,input().split())) for i in range(n)]\ns = list(input())\nif len(s) == len(set(s)):\n    print('yes')\nelse:\n    print('no')\n", "s = input()\nletters = []\nans = 'yes'\nfor i in s:\n  if i in letters:\n    ans = 'no'\n    break\n  else:\n    letters.append(i)\nprint(ans)\n", "s = input()\nl = list(set(s))\nif len(s) == len(l):\n    print(\"yes\")\nelse:\n    print(\"no\")", "s = input()\nprint(\"yes\" if len(s)==len(set(s)) else \"no\")", "S=input()\na=[0]*26\nnum=ord('a')\nfor i in range(len(S)):\n    tmp=ord(S[i])-num\n    if a[tmp]:\n        print('no')\n        break\n    a[tmp]=1\nelse:\n    print('yes')\n", "s = str(input())\n\nif len(s) == len(set(s)):\n    print(\"yes\")\nelse:\n    print(\"no\")", "S = input()\nprint('yes' if len(set(S)) == len(S) else 'no')", "from collections import defaultdict\nimport sys\ns = input()\nn = len(s)\ndic = defaultdict(int)\n\nfor i in range(n):\n    dic[s[i]] += 1\n    if dic[s[i]]==2:\n        print(\"no\")\n        return\n\nprint('yes')", "S = list(input())\n\nS.sort()\n\nfor i in range(len(S)-1):\n    if S[i] == S[i+1]:\n        print('no')\n        return\n    \nprint('yes')\n\n", "S = input()\nif len(set(S)) == len(S):\n  print(\"yes\")\nelse:\n  print(\"no\")", "s = str(input())\n\nif len(s) == len(set(s)):\n    print(\"yes\")\nelse:\n    print(\"no\")", "s = input()\nfor i in range(len(s)-1):\n    for j in range(i+1,len(s)):\n        if s[i] == s[j]:\n            print('no')\n            return\nprint('yes')", "s = input()\n\nlst1 = []\nfor i in range(len(s)):\n   lst1.append(s[i])\nlst1.sort()\n\nlst2 = list(set(lst1))\nlst2.sort()\n\nif lst1 == lst2:\n   print('yes')\nelse:\n   print('no')", "s=input()\nprint(\"yes\" if len(s)==len(set(s)) else \"no\")", "S = input()\n\nif len(set(S)) == len(S):\n  print('yes')\n  \nelse:\n  print('no')", "#ABC063\ns = input()\nprint(\"yes\" if len(set(s))==len(s) else \"no\")", "s = list(input())\nif len(s) == len(set(s)):\n    print(\"yes\")\nelse:\n    print(\"no\")", "s = input()\nprint((\"yes\" if len(set(s)) == len(s) else \"no\"))\n", "# coding: utf-8\n\nstr = input()\ncount = 0\ntable = list(str)\nfor i in range(len(str) - 1):\n    for j in range(i+1, len(str)):\n        if table[i] == table[j]:\n            count += 1\nif count == 0:\n    print(\"yes\")\nelse:\n    print(\"no\")", "s = input()\n\nst = set()\nfor c in s:\n    if c in st:\n        print(\"no\")\n        return\n    st.add(c)\n\nprint(\"yes\")\n", "S = list(input())\nans = \"yes\"\nfor i in range(len(S)):\n    ch = S[i]\n    S[i] = \"-1\"\n    if ch in S:\n        ans = \"no\"\n        break\nprint(ans)", "def answer(s: str) -> str:\n    return 'yes' if len(s) == len(set(s)) else 'no'\n\n\ndef main():\n    s = input()\n    print(answer(s))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "s=input()\nprint(\"yes\" if len(s)==len(set(s))  else \"no\")", "s=input()\nfor i in s:\n  if s.count(i) != 1:\n    print(\"no\")\n    return\nprint('yes')", "S = input()\ndata = set()\nfor s in S:\n  if s not in data:\n    data.add(s)\n  else:\n    print(\"no\")\n    return\nprint(\"yes\")", "l = list(input())\ns = set(l)\nif len(s) == len(l):\n\tprint(\"yes\")\nelse:\n\tprint(\"no\")\n", "s = list(input())\nn = len(s)\ns = set(s)\nnn = len(s)\n\nif n == nn:\n    print(\"yes\")\nelse:\n    print(\"no\")", "import collections\ns = input()\nc = collections.Counter(s)\n\nif all(x == 1 for x in c.values()):\n    print('yes')\nelse:\n    print('no')", "s = list(input())\nif len(s) == len(set(s)):\n    print('yes')\nelse:\n    print('no')", "s=input()\nn=len(s)\nfor i in range(n):\n  if s.count(s[i])!=1:\n    print('no')\n    return\nprint('yes')", "S = list(input())\ns = set(S)\nif(len(S)==len(s)):\n  print('yes')\nelse:\n  print('no')", "S = input()\nprint('yes' if len(S) == len(set(S)) else 'no')", "s = input()\n\nif len(set(s)) == len(s):\n  print(\"yes\")\nelse:\n  print(\"no\")", "s = list(input())\nif len(s) == len(set(s)):\n  print(\"yes\")\nelse:\n  print(\"no\")", "s = list(input())\n\nfor i in s:\n    if s.count(i) > 1:\n        print('no')\n        break\nelse:\n    print('yes')\n", "s = input()\nif len(s) == len(set(s)):\n    print(\"yes\")\nelse:\n    print(\"no\")\n"]