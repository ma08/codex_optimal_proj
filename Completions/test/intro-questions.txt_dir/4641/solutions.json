["import sys\nfrom heapq import *\ninput = sys.stdin.readline\n\nquer, m = list(map(int, input().split()))\n\nvals = list(range(m))\nq = []\nfor v in vals:\n    heappush(q, v)\n\nout = []\nfor _ in range(quer):\n    nex = int(input()) % m\n    vals[nex] += m\n    heappush(q, vals[nex])\n\n    new = heappop(q)\n    while vals[new % m] != new:\n        new = heappop(q)\n\n    out.append(new)\n    heappush(q, new)\n\nprint('\\n'.join(map(str,out)))\n    \n", "import sys\ninput = sys.stdin.readline\n\nq,x=list(map(int,input().split()))\n\nseg_el=1<<((x+1).bit_length())\nSEG=[0]*(2*seg_el)\n\ndef add1(n,seg_el):\n    i=n+seg_el\n    SEG[i]+=1\n    i>>=1\n    \n    while i!=0:\n        SEG[i]=min(SEG[i*2],SEG[i*2+1])\n        i>>=1\n        \ndef getvalues(l,r):\n    L=l+seg_el\n    R=r+seg_el\n    ANS=1<<30\n\n    while L<R:\n        if L & 1:\n            ANS=min(ANS , SEG[L])\n            L+=1\n\n        if R & 1:\n            R-=1\n            ANS=min(ANS , SEG[R])\n        L>>=1\n        R>>=1\n\n    return ANS\n\nfor qu in range(q):\n    t=int(input())\n    add1(t%x,seg_el)\n\n    #print(SEG)\n\n    MIN=getvalues(0,x)\n\n    OK=0\n    NG=x\n\n    while NG-OK>1:\n        mid=(OK+NG)//2\n\n        if getvalues(0,mid)>MIN:\n            OK=mid\n        else:\n            NG=mid\n\n    #print(MIN,OK)\n    print(MIN*x+OK)\n", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int, minp().split()))\n\ndef solve():\n\tn,x = mints()\n\tc = [0]*x\n\tans = 0\n\tfor i in range(n):\n\t\ty = mint()\n\t\tc[y%x] += 1\n\t\twhile c[ans%x] > 0:\n\t\t\tc[ans%x] -= 1\n\t\t\tans += 1\n\t\tprint(ans)\n\nsolve()\n\n", "import sys\n\ndef main():\n    input = sys.stdin.readline\n\n    q,x = [int(i) for i in input().split()]\n    A = [0 for i in range(x)]\n    m = 0\n    c = 0\n    ans = []\n    for a in range(q):\n        n = int(input())\n        A[n%x] += 1\n        while A[c] >= (m//x+1):\n            c = (c+1)%x\n            m += 1\n        ans.append(str(m))\n\n    print(\"\\n\".join(ans))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "from sys import stdin\ninput = stdin.readline\nn, x = map(int,input().split())\nprzyst = [0] * x\nl = []\nbest = 0\nfor i in range(n):\n    nju = int(input())\n    przyst[nju%x] += 1\n    while True:\n        if przyst[best%x] != 0:\n            best += 1\n            przyst[(best-1)%x] -= 1\n        else:\n            break\n    print(best)"]