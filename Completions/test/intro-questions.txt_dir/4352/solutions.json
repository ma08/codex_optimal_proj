["a,b = map(int, input().split())\nif a == b:\n  print(\"Draw\")\nelif a == 1 or (a > b and b != 1):\n  print(\"Alice\")\nelse:\n  print(\"Bob\")", "import sys, math\nfrom itertools import combinations as c, product as p\nfrom collections import deque\nsys.setrecursionlimit(10**9)\n\n\ndef si(): return input()\ndef ii(): return int(input())\ndef fi(): return float(input())\ndef lstr(): return input().split()\ndef lint(): return list(map(int, input().split()))\ndef lint_dec(): return list(map(lambda x:int(x) - 1, input().split()))\ndef lnstr(n): return [input() for _ in range(n)]\ndef lnint(n): return [int(input()) for _ in range(n)]\ndef lint_list(n): return [lint() for _ in range(n)]\n\n\n\n############################################################\nA, B = lint()\nif A > 1:\n    A -= 13\nif B > 1:\n    B -= 13\nprint('Alice' if A > B else 'Bob' if A < B else 'Draw')", "a, b = map(int, input().split())\nst_l = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1]\n\nif st_l.index(a) > st_l.index(b):\n    print('Alice')\nelif st_l.index(a) < st_l.index(b):\n    print('Bob')\nelse:\n    print('Draw')", "a, b = map(int, input().split())\nif a == b:\n  print('Draw')\nelif a == 1:\n  print('Alice')\nelif b == 1:\n  print('Bob')\nelif a > b:\n  print('Alice')\nelif b > a:\n  print('Bob')", "A, B = map(int,input().split())\n\nif A==1:\n    A=14\nif B==1:\n    B=14\n\nif A > B:\n    print('Alice')\nelif B > A:\n    print('Bob')\nelse:\n    print('Draw')", "a, b = map(int, input().split())\n\nif a == b:\n    print('Draw')\nelif a == 1 or a > b != 1:\n    print('Alice')\nelse:\n    print('Bob')", "# Alice\u3068Bob\u306f\u30012\u4eba\u30671\u679a\u30dd\u30fc\u30ab\u30fc\u3092\u884c\u3044\u307e\u3059\u3002\n# 1\u679a\u30dd\u30fc\u30ab\u30fc\u306f\u3001\u30c8\u30e9\u30f3\u30d7\u3092\u7528\u3044\u3066\u884c\u30462\u4eba\u30b2\u30fc\u30e0\u3067\u3059\u3002\n#\n# \u4eca\u56de\u4f7f\u7528\u3059\u308b\u30c8\u30e9\u30f3\u30d7\u3067\u306f\u3001\u5404\u30ab\u30fc\u30c9\u306b 1 \u304b\u3089 13 \u307e\u3067\u306e\u6570\u304c\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n# \u30ab\u30fc\u30c9\u306e\u5f37\u3055\u306f\u3001\u30ab\u30fc\u30c9\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u6570\u3067\u6c7a\u307e\u308a\uff0c\u5f37\u3055\u306e\u57fa\u6e96\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n# \u5f31 2 < 3 < 4 < 5 < 6 < 7 < 8 < 9 < 10 < 11 < 12 < 13 < 1 \u5f37\n#\n# 1\u679a\u30dd\u30fc\u30ab\u30fc\u306f\u4ee5\u4e0b\u306e\u624b\u9806\u3067\u884c\u3044\u307e\u3059\u3002\n#\n# \u5404\u30d7\u30ec\u30a4\u30e4\u30fc\u306f\u3001\u30c8\u30e9\u30f3\u30d7\u304b\u3089\u30ab\u30fc\u30c9\u30921\u679a\u9078\u3093\u3067\u3001\u81ea\u5206\u306e\u624b\u672d\u3068\u3057\u307e\u3059\u3002\n# \u4e21\u30d7\u30ec\u30a4\u30e4\u30fc\u306f\u3001\u624b\u672d\u3092\u898b\u305b\u5408\u3044\u307e\u3059\u3002\u5f37\u3044\u30ab\u30fc\u30c9\u3092\u6301\u3063\u3066\u3044\u308b\u30d7\u30ec\u30a4\u30e4\u30fc\u304c\u52dd\u3061\u3067\u3059\u3002\n# \u306a\u304a\u3001\u4e21\u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u6301\u3063\u3066\u3044\u308b\u30ab\u30fc\u30c9\u306e\u5f37\u3055\u304c\u540c\u3058\u5834\u5408\u306f\u5f15\u304d\u5206\u3051\u3067\u3059\u3002\n# 2\u4eba\u306e\u5bfe\u6226\u3092\u773a\u3081\u3066\u3044\u305f\u3042\u306a\u305f\u306f\u3001Alice\u3068Bob\u306e\u624b\u672d\u3092\u77e5\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n# Alice\u304c\u6301\u3063\u3066\u3044\u308b\u30ab\u30fc\u30c9\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u6570\u306f A\u3001Bob\u304c\u6301\u3063\u3066\u3044\u308b\u30ab\u30fc\u30c9\u30ab\u30fc\u30c9\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u6570\u306f B\u3067\u3059\u3002\n# 2\u4eba\u306e\u4ee3\u308f\u308a\u306b\u3001\u52dd\u6557\u3092\u5224\u5b9a\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\ninput_alice, input_bob = list(map(int,input().split()))\n\nresult = 'ret'  # \u7d50\u679c\u683c\u7d0d\u7528\n\nif input_alice > input_bob: # A\u306e\u65b9\u304cB\u3088\u308a\u5927\u304d\u3044\n    if input_bob == 1:\n        result = 'Bob'  # Bob\u304c\u30a8\u30fc\u30b9\u306a\u306e\u3067\u52dd\u3061\uff5e\n    else:\n        result = 'Alice'\nelif input_alice < input_bob:   # B\u306e\u65b9\u304cA\u3088\u308a\u5927\u304d\u3044\n    if input_alice == 1:\n        result = 'Alice'    # Alice\u304c\u30a8\u30fc\u30b9\u306a\u306e\u3067\u52dd\u3061\uff5e\n    else:\n        result = 'Bob'\nelse:\n    result = 'Draw'         # \u3069\u3063\u3061\u3082\u540c\u3058\u624b\u672d\u306a\u306e\u3067\u5f15\u304d\u5206\u3051\uff5e\n\nprint(result)   # \u7d50\u679c\u51fa\u529b\uff5e\n", "a,b = list(map(int,input().split()))\n\nli = [2,3,4,5,6,7,8,9,10,11,12,13,1]\n\na1 = li.index(a)\nb1 = li.index(b)\n\nif a1 > b1:\n    print('Alice')\nelif a1 == b1:\n    print('Draw')\nelse:\n    print('Bob')\n", "a,b = map(int,input().split())\nif a == 1 and b == 1:\n  a = 14\n  b = 14\nelif b == 1:\n  b = 14\nelif a == 1:\n  a = 14\n  \nif a>b:\n  print(\"Alice\")\nelif b>a:\n  print(\"Bob\")\nelse:\n  print(\"Draw\")", "A, B = map(int, input().split())\nA, B = (A+11)%13, (B+11)%13\nif A < B:\n  print(\"Bob\")\nelif A > B:\n  print(\"Alice\")\nelse:\n  print(\"Draw\")", "A, B = list(map(int, input().split()))\n\nif A == 1 and B == 1:\n    print('Draw')\nelif A == 1 and B != 1:\n    print('Alice')\nelif B == 1 and A != 1:\n    print('Bob')\nelif A > B:\n    print('Alice')\nelif B > A:\n    print('Bob')\nelse:\n    print('Draw')\n", "n=[2,3,4,5,6,7,8,9,10,11,12,13,1]\na,b=map(int,input().split());a,b=n.index(a),n.index(b);print(['DBroabw'[a<b::2],'Alice'][a>b])", "a, b = list(map(int, input().split()))\nl = [i for i in range(2,14)] + [1]\nprint((['Draw', 'Alice', 'Bob'][l.index(a) > l.index(b) or -(l.index(a) < l.index(b))]))\n", "# \u5165\u529b\nA, B = map(int,input().split())\n\n# \u51e6\u7406\nif A == B:\n    print('Draw')\nelif A == 1:\n    print('Alice')\nelif B == 1:\n    print('Bob')\nelif A > B:\n    print('Alice')\nelse:\n    print('Bob')", "a, b = map(int,input().split())\nif a == 1:\n    a += 13\nif b == 1:\n    b += 13\nif a > b:\n    print('Alice')\nelif a < b:\n    print('Bob')\nelse:\n    print('Draw')", "a, b = list(map(int, input().split()))\n\nif a == 1:\n    a = 14\nif b == 1:\n    b = 14\n    \nif a > b:\n    print('Alice')\nelif a == b:\n    print('Draw')\nelse:\n    print('Bob')\n", "a,b=map(int,input().split())\nif a==b:\n  print(\"Draw\")\nelif b!=1 and a!=b:\n  if a>b or a==1:\n    print(\"Alice\")\n  else:\n    print(\"Bob\")\nelse:\n  print(\"Bob\")", "A, B = list(map(int, input().split()))\n\nans = [\"Alice\", \"Bob\", \"Draw\"]\n\nif A == 1:\n  A = 14\nif B == 1:\n  B = 14\n  \nif A > B:\n  print((ans[0]))\nelif A == B:\n  print((ans[2]))\nelse:\n  print((ans[1]))\n", "a,b=map(int,input().split())\nif a==1 and b!= 1:\n    a += 13\n    if a>b:\n     print('Alice')\n    elif b>a:\n     print('Bob')\n    else:\n     print('Draw')\nelif b==1 and a!= 1:\n    b += 13\n    if a>b:\n     print('Alice')\n    elif b>a:\n     print('Bob')\n    else:\n     print('Draw')\nelif a==1 and b== 1:\n     print('Draw')\nelse:\n    if a>b:\n     print('Alice')\n    elif b>a:\n     print('Bob')\n    else:\n     print('Draw')", "a, b = map(int, input().split())\n\nif int(a) == 1 and int(b) != 1:\n    print(\"Alice\")\nelif int(a) != 1 and int(b) == 1:\n    print(\"Bob\")\nelif int(a) > int(b):\n    print(\"Alice\")\nelif int(a) < int(b):\n    print(\"Bob\")\nelif int(a) == int(b):\n    print(\"Draw\")", "a,b = [int(a) for a in input().split()]\n\nif a == b:\n  print(\"Draw\")\nelif a == 1:\n  print(\"Alice\")\nelif b == 1:\n  print(\"Bob\")\nelif  a > b:\n  print(\"Alice\")\nelse:\n  print(\"Bob\")", "a, b = list(map(int, input().split()))\n\nif a == 13 and b == 1:\n  print(\"Bob\")\nelif a == 1 and b == 13:\n  print(\"Alice\")\nelif a > b:\n  print(\"Alice\")\nelif a == b:\n  print(\"Draw\")\nelse:\n  print(\"Bob\")\n", "a,b=map(int,input().split())\nif a==b:print(\"Draw\")\nelif a==1:print(\"Alice\")\nelif b==1:print(\"Bob\")\nelif a>b:print(\"Alice\")\nelse :print(\"Bob\")", "a, b = map(int, input().split())\n\nif a == b:\n    print('Draw')\nelif a > b and b != 1 or a == 1 :\n    print('Alice')\nelse:\n    print('Bob')", "def resolve():\n    A, B = list(map(int, input().split()))\n    if A == B:\n        print(\"Draw\")\n    elif A == 1 or (A > B and B != 1):\n        print(\"Alice\")\n    else:\n        print(\"Bob\")\n\nresolve()", "A,B=map(int, input().split())\nif A == 1:\n  A = 14\nif B == 1:\n  B = 14\nif A == B:\n  print(\"Draw\")\nelif A < B:\n  print(\"Bob\")\nelse:\n  print(\"Alice\")", "aris_card , bob_card = map(int, input(). split())\n\nif aris_card == 1:\n    aris_card += 13\nif bob_card == 1:\n    bob_card += 13\n\nif aris_card == bob_card:\n    print( \"Draw\" )\nelif aris_card > bob_card:\n    print( \"Alice\" )\nelif aris_card < bob_card:\n    print( \"Bob\" )", "a, b = map(int, input().split())\nif a == b:\n  print(\"Draw\")\nelif a == 1:\n  print(\"Alice\")\nelif b == 1:\n  print(\"Bob\")\nelif a > b:\n  print(\"Alice\")\nelse:\n  print(\"Bob\")", "def solve():\n    A, B = map(int, input().split())\n    if A == B:\n        print('Draw')\n    elif A == 1 or (B != 1 and B < A):\n        print('Alice')\n    else:\n        print('Bob')\n\ndef __starting_point():\n    solve()\n__starting_point()", "A, B = list(map(int, input().split()))\n\nif A > B and B != 1:\n    print('Alice')\n\nelif A > B and B == 1:\n    print('Bob')\n\nelif A < B and A != 1:\n    print('Bob')\nelif A < B and A == 1:\n    print('Alice')\nelse:\n    print('Draw')\n", "A,B=map(int,input().split())\nif A==1 :\n  A=14\nif B==1 :\n  B=14\nif A>B :\n  print(\"Alice\")\nelif A<B :\n  print(\"Bob\")\nelse :\n  print(\"Draw\")", "S =input()\nS_list = list(map(int,S.split()))\nS_list = [i - 1 for i in S_list]\n\nif  S_list[0] == S_list[1] :\n    result = \"Draw\"\nelif (S_list[0] - S_list[1]) * S_list[1] >0 or S_list[0] == 0:\n    result = \"Alice\"\nelse:\n    result = \"Bob\"\nprint(result)\n", "A, B = map(int, input().split())\n\nif A == B:\n    print(\"Draw\")\nelif A == 1:\n    print(\"Alice\")\nelif B == 1:\n    print(\"Bob\")\nelif A > B:\n    print(\"Alice\")\nelse:\n    print(\"Bob\")", "A,B=map(int,input().split())\nif A==1:\n    A=14\nif B==1:\n    B=14\nans = 'Alice' if A>B else ('Bob' if A<B else 'Draw')\nprint(ans)", "a, b = list(map(int, input().split()))\nif a == 1: a = 14\nif b == 1: b = 14\nprint(('Alice' if a > b else 'Bob' if a < b else 'Draw'))\n", "A,B = map(int,input().split())\n\nif A == 1:\n  A += 13\nif B == 1:\n  B += 13\n  \nprint(\"Alice\" if A > B else \"Bob\" if A < B else \"Draw\")", "a,b = map(int,input().split())\n\nif a == b:\n  print('Draw')\n  \nelif a == 1:\n  print('Alice')\n  \nelif b == 1:\n  print('Bob')\n  \nelif a > b:\n  print('Alice')\n  \nelse:\n  print('Bob')", "# \u6570\u5b57\u3092\u53d6\u5f97\nA,B = map(int,input().split())\n\n# \u6bd4\u8f03\u6761\u4ef6\u306b\u6cbf\u3063\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u529b\nif A == B:\n  print(\"Draw\")\nelse:\n  if B != 1 and A > B\\\n  or A == 1:\n    print(\"Alice\")\n  else:\n    print(\"Bob\")", "# a\u30a2\u30ea\u30b9\u3000\u3000\u3000\uff42\u30dc\u30d6\na, b = list(map(int, input().split()))\nif a == b:\n    print(\"Draw\")\nelif a == 1:\n    print(\"Alice\")\nelif b == 1:\n    print(\"Bob\")\nelif a < b:\n    print(\"Bob\")\nelif b < a:\n    print(\"Alice\")\n", "# 054_a\nA, B = list(map(int, input().split()))\nif (1 <= A & A <= 13) & (1 <= B & B <= 13):\n    if A == B:\n        print('Draw')\n    elif A == 1:\n        print('Alice')\n    elif B == 1:\n        print('Bob')\n    elif A > B:\n        print('Alice')\n    elif A < B:\n        print('Bob')\n", "a,b=map(int,input().split())\nli=[2,3,4,5,6,7,8,9,10,11,12,13,1]\nif li.index(a)<li.index(b):\n    print(\"Bob\")\nelif li.index(a)>li.index(b):\n    print(\"Alice\")\nelse:\n    print(\"Draw\")", "a, b = map(int, input().split())\n\nif a == 1:\n    a = 14\n\nif b == 1:\n    b = 14\n\n\nif a > b:\n    print(\"Alice\")\nelif a < b:\n    print(\"Bob\")\nelse:\n    print(\"Draw\")", "A,B = map(int,input().split())\nif A == B:\n    print('Draw')\nelif A == 1:\n    print('Alice')\nelif B == 1:\n    print('Bob')\nelif A > B:\n    print('Alice')\nelif B > A:\n    print('Bob')", "a, b = list(map(int, input().split()))\n\nif a == 1:\n    a = 14\n\nif b == 1:\n    b = 14\n\nif a > b:\n    print('Alice')\nelif a < b:\n    print('Bob')\nelse:\n    print('Draw')\n", "l = list(range(2,14))+[1]\na,b = list(map(int,input().split()))\na,b = l.index(a),l.index(b)\nprint((\"Draw\" if a == b else \"Alice\" if a > b else \"Bob\"))\n", "A, B = list(map(int, input().split()))\nif A == 1:\n    A = 14\nif B == 1:\n    B = 14\n\nif A < B:\n    print(\"Bob\")\nelif A > B:\n    print(\"Alice\")\nelse:\n    print(\"Draw\")\n", "a, b = map(int, input().split())\nif(a == b):\n    print(\"Draw\")\nelif((a > b and b != 1) or a == 1):\n    print(\"Alice\")\nelse:\n    print(\"Bob\")", "A, B = map(lambda x:int(x) if int(x)> 1 else 14, input().split())\nif A > B:\n    print('Alice')\nif A == B:\n    print('Draw')\nif A < B:\n    print('Bob')", "A, B = list(map(int, input().split()))\nif A == 1:\n  A += 100\nif B == 1:\n  B += 100\nif A > B:\n  print(\"Alice\")\nelif A < B:\n  print(\"Bob\")\nelse:\n  print(\"Draw\")\n", "A,B = map(int, input().split())\nif A == 1:\n    A = 14\nif B == 1:\n    B = 14\nif A == B:\n    print('Draw')\nelif A > B:\n    print('Alice')\nelse:\n    print('Bob')", "a, b = map(int, input().split())\n\nif a == b:\n    print('Draw')\nelif a == 1:\n    print('Alice')\nelif b == 1:\n    print('Bob')\nelif a > b:\n    print('Alice')\nelse:\n    print('Bob')", "A, B = map(int, input().split())\n\nif A < B:\n    if A == 1:\n        ans = 'Alice'\n    else:\n        ans = 'Bob'\nelif B < A:\n    if B == 1:\n        ans = 'Bob'\n    else:\n        ans = 'Alice'\nelse:\n    ans = 'Draw'\n\nprint(ans)", "a,b=map(int,input().split())\nif a == b:\n    print(\"Draw\")\nelif a == 1:\n    print(\"Alice\")\nelif b == 1:\n    print(\"Bob\")\nelif a > b:\n    print(\"Alice\")\nelif a < b:\n    print(\"Bob\")", "A,B=map(int,input().split())\nif A==B:\n  print(\"Draw\")\nelif A==1:\n  print(\"Alice\")\nelif B==1:\n  print(\"Bob\")\nelif A>B:\n  print(\"Alice\")\nelse:\n  print(\"Bob\")", "a, b = list(map(int, input().split()))\n\nif a == 1:\n    a = 14\n\nif b == 1:\n    b = 14\n\n\n\nif a < b:\n    print(\"Bob\")\nelif b < a:\n    print(\"Alice\")\nelse:\n    print(\"Draw\")\n", "#54\na,b=list(map(int,input().split()))\nif ((a==1 and b!=1) or (a>b and b!=1)):\n    print('Alice')\nelif ((b==1 and a!=1) or (b>a and a!=1)):\n    print('Bob')\nelse:\n    print('Draw')\n", "A, B = map(int, input().split())\n\nif A == B:\n    print('Draw')\nelif A > B != 1 or (A < B and A == 1):\n    print('Alice')\nelse:\n    print('Bob')", "a,b = [int(x) for x in input().split()]\nif a == 1:\n  a = 14\nif b == 1:\n  b = 14\nif a < b:\n  print(\"Bob\")\nelif a > b:\n  print(\"Alice\")\nelse:\n  print(\"Draw\")", "# # a\u30a2\u30ea\u30b9\u3000\u3000\u3000\uff42\u30dc\u30d6\n# a, b = map(int, input().split())\n# if a == b:\n#     print(\"Draw\")\n# elif a == 1:\n#     print(\"Alice\")\n# elif b == 1:\n#     print(\"Bob\")\n# elif a < b:\n#     print(\"Bob\")\n# elif b < a:\n#     print(\"Alice\")\n\nx, y = map(int, input().split())\n\nL = list(range(2, 14)) + [1]\na = L.index(x)\nb = L.index(y)\n\nif a>b:\n    print(\"Alice\")\nelif b>a:\n    print(\"Bob\")\nelse:\n    print(\"Draw\")", "# \u5165\u529b\nA, B = map(int, input().split())\n\n# \u540c\u3058\u306a\u3089\u5f15\u304d\u5206\u3051\u30011\u304c\u51fa\u305f\u3089\u52dd\u3061\u3001\u5927\u304d\u3044\u65b9\u304c\u52dd\u3061\nif A == B:\n    print('Draw')\nelif A == 1:\n    print('Alice')\nelif B == 1:\n    print('Bob')\nelif A > B:\n    print('Alice')\nelif A < B:\n    print('Bob')", "a,b=map(int,input().split())\nl=[2,3,4,5,6,7,8,9,10,11,12,13,1]\n\nprint(\"Alice\" if l.index(a)>l.index(b) else \"Bob\" if l.index(a)<l.index(b) else \"Draw\")", "import re\nimport sys\nimport math\nimport itertools\nimport bisect\nfrom copy import copy\nfrom collections import deque,Counter\nfrom decimal import Decimal\nimport functools\ndef v(): return input()\ndef k(): return int(input())\ndef S(): return input().split()\ndef I(): return list(map(int,input().split()))\ndef X(): return list(input())\ndef L(): return list(input().split())\ndef l(): return list(map(int,input().split()))\ndef lcm(a,b): return a*b//math.gcd(a,b)\nsys.setrecursionlimit(10 ** 6)\nmod = 10**9+7\ncnt = 0\nans = 0\ninf = float(\"inf\")\nal = \"abcdefghijklmnopqrstuvwxyz\"\nAL = al.upper()\n\nA, B = I()\nif A == B:\n    print(\"Draw\")\nelif A == 1:\n    print(\"Alice\")\nelif B == 1:\n    print(\"Bob\")\nelse:\n    if A > B:\n        print(\"Alice\")\n    else:\n        print(\"Bob\")\n", "a, b = (int(x) for x in input().split())\n\nif (a==b):\n  print(\"Draw\")\nelif (a==1):\n  print(\"Alice\")\nelif (b==1):\n  print(\"Bob\")\nelif (a<b):\n  print(\"Bob\")\nelse:\n  print(\"Alice\")\n", "a,b=map(int,input().split())\nif a==1:\n  a=14\nif b==1:\n  b=14\nif a==b:\n  print(\"Draw\")\nelif a>b:\n  print(\"Alice\")\nelse:\n  print(\"Bob\")", "import sys\n\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninl = lambda: [int(x) for x in sys.stdin.readline().split()]\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print(\"\\033[33m\", *a, \"\\033[0m\", **dict(file=sys.stderr, **kw))\n\n\ndef solve():\n    a, b = inl()\n    a = (a + 11) % 13\n    b = (b + 11) % 13\n    if a == b:\n        return \"Draw\"\n    elif a > b:\n        return \"Alice\"\n    return \"Bob\"\n\n\nprint(solve())\n", "a,b = map(int,input().split())\n\nif a==1:\n  a=14\n  \nif b==1:\n  b=14\n  \nif a>b:\n  print('Alice')\n  \nelif a<b:\n  print('Bob')\n  \nelse:\n  print('Draw')", "a,b=map(int,input().split())\n\nif a==1:\n    a=14\nif b==1:\n    b=14\n\nif a>b:\n    ans=\"Alice\"\nelif a<b:\n    ans=\"Bob\"\nelse:\n    ans=\"Draw\"\nprint(ans)", "A,B=list(map(int,input().split()))\nif A==1:\n    A+=13\nif B==1:\n    B+=13\n\nif(A>B):\n    print(\"Alice\")\nelif A<B:\n    print(\"Bob\")\nelse:\n    print(\"Draw\")\n", "a, b = map(int, input().split())\nif a == 1: a += 13\nif b == 1: b += 13\nif a > b: print('Alice')\nelif a < b: print('Bob')\nelse: print('Draw')", "a, b = input().split()\n\n\nif int(a) == 1 and int(b) != 1:\n    print(\"Alice\")\nelif int(a) != 1 and int(b) == 1:\n    print(\"Bob\")\nelif int(a) > int(b):\n    print(\"Alice\")\nelif int(a) < int(b):\n    print(\"Bob\")\nelif int(a) == int(b):\n    print(\"Draw\")", "A,B = map(int,input().split())\n\nif A == B:\n    print('Draw')\n\nelif A == 1:\n    print('Alice')\n\nelif B == 1:\n    print('Bob')\n\nelif A > B:\n    print('Alice')\n\nelif B > A:\n    print('Bob')", "# A - One Card Poker\n\n# \u4e00\u679a\u30dd\u30fc\u30ab\u30fc\u306e\u52dd\u6557\u3092\u5224\u5b9a\u3057\u51fa\u529b\u3059\u308b\n\n\ncard_A, card_B = list(map(int, input().split()))\n\nif card_A == 1:\n    card_A = 14\n\nif card_B == 1:\n    card_B = 14\n\nif card_A > card_B:\n    print('Alice')\nelif card_A < card_B:\n    print('Bob')\nelif card_A == card_B:\n    print('Draw')\n", "# 054a\n\nA, B = list(map(int, input().split()))    # \u30ab\u30fc\u30c9\u306e\u6570\u5b57\u3092\u5165\u529b\n\nif A == B:\n    print(\"Draw\")\nelif A == 1:\n    print(\"Alice\")\nelif B == 1:\n    print(\"Bob\")\nelif A < B:\n    print(\"Bob\")\nelse:\n    print(\"Alice\")\n\n", "A,B=list(map(int,input().split()))\nif A==B:\n  print(\"Draw\")\nelif (A==1) & (B!=1):\n  print(\"Alice\")\nelif (B==1) & (A!=1):\n  print(\"Bob\")\nelif (A>B):\n  print(\"Alice\")\nelif (A<B):\n  print(\"Bob\")\n", "a,b=map(int,input().split())\na=(a-2)%13\nb=(b-2)%13\nif a<b:print('Bob')\nelif a>b:print('Alice')\nelse:print('Draw')", "A, B = map(int,input().split())\n\nif A == 1 and 13 >= B >= 2:\n    print(\"Alice\")\nelif B == 1 and 13 >= A >= 2:\n    print(\"Bob\")\nelif A > B:\n    print(\"Alice\")\nelif B > A:\n    print(\"Bob\")\nelif A == B:\n    print(\"Draw\")", "trump=[2,3,4,5,6,7,8,9,10,11,12,13,1]\na,b=map(int,input().split(\" \"))\nif a==b:print(\"Draw\")\nelse:print([\"Alice\",\"Bob\"][trump.index(b)>trump.index(a)])", "# A - One Card Poker\n# https://atcoder.jp/contests/abc054/tasks/abc054_a\n\nA, B = list(map(int, input().split()))\n\nresult = 'Alice'\n\nif A == B:\n    result = 'Draw'\nelif A < B:\n    if A == 1:\n        result = 'Alice'\n    else:\n        result = 'Bob'\nelse:\n    if B == 1:\n        result = 'Bob'\n\nprint(result)\n", "a,b = list(map(int,input().split()))\n \nif a == 1 and b != 1:\n  print('Alice')\nelif b == 1 and a != 1:\n  print('Bob')  \nelif a > b:\n  print('Alice')\nelif a == b:\n  print('Draw')\nelse:\n  print('Bob')\n", "l = [2,3,4,5,6,7,8,9,10,11,12,13,1]\na, b = map(int, input().split())\nif l.index(a) > l.index(b):\n    print(\"Alice\")\nelif l.index(a) < l.index(b):\n    print(\"Bob\")\nelse:\n    print(\"Draw\")", "a,b=map(int, input().split())\nprint(\"Alice\" if (a+12)%14>(b+12)%14 else \"Draw\" if a==b else \"Bob\")", "import sys, math\nfrom functools import lru_cache\nfrom itertools import accumulate\nsys.setrecursionlimit(10**9)\nMOD = 10**9+7\n\ndef input():\n    return sys.stdin.readline()[:-1]\n\ndef mi():\n    return map(int, input().split())\n\ndef ii():\n    return int(input())\n\ndef i2(n):\n    tmp = [list(mi()) for i in range(n)]\n    return [list(i) for i in zip(*tmp)]\n\nA, B = mi()\n\nif A == B:\n    print('Draw')\nelif A == 1:\n    print('Alice')\nelif B == 1:\n    print('Bob')\nelse:\n    if A > B:\n        print('Alice')\n    else:\n        print('Bob')", "# import math\n# import statistics\n#a=input()\n#b,c=int(input()),int(input())\n# c=[]\n# for i in a:\n#    c.append(i)\ne1,e2 = map(int,input().split())\n#K = input()\n# f = list(map(int,input().split()))\n#g = [input() for _ in range(a)]\na=[2,3,4,5,6,7,8,9,10,11,12,13,1]\nif e1==e2:\n\tprint('Draw')\nelif a.index(e1)>a.index(e2):\n\tprint('Alice')\nelse:\n\tprint('Bob')", "A, B = map(int, input().split())\n\nif A == B:\n    print('Draw')\nelif A == 1:\n    print('Alice')\nelif B == 1:\n    print('Bob')\nelif A > B:\n    print('Alice')\nelse :\n    print('Bob')", "\"\"\"\nABC054 - A one poker\nhttps://atcoder.jp/contests/abc054/tasks/abc054_a\n\"\"\"\n\na, b = list(map(int, input().split()))\n\nif a == 1:\n    a += 13\nif b == 1:\n    b += 13\n\nif a > b:\n    ans = 'Alice'\nelif a < b:\n    ans = 'Bob'\nelse:\n    ans = 'Draw'\nprint(ans)\n", "A, B = map(int, input().split())\n\nif A == B:\n    print('Draw')\nelif A == 1 or (A > B and B != 1):\n    print('Alice')\nelse:\n    print('Bob')", "a, b = list(map(int, input().split()))\nif a == 1:\n  a =14\nif b == 1:\n  b =14\n\nif a > b:\n  print(\"Alice\")\nelif a < b:\n  print(\"Bob\")\nelse:\n  print(\"Draw\")\n  \n", "a, b = map(int, input().split())\n \nif a == 1:\n  a = 14\n \nif b == 1:\n  b = 14\n \nprint(\"Alice\" if a > b else \"Bob\" if b > a else \"Draw\")", "#\n# abc054 a\n#\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"8 6\"\"\"\n        output = \"\"\"Alice\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"1 1\"\"\"\n        output = \"\"\"Draw\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_3(self):\n        input = \"\"\"13 1\"\"\"\n        output = \"\"\"Bob\"\"\"\n        self.assertIO(input, output)\n\n\ndef resolve():\n    A, B = list(map(int, input().split()))\n    if A == 1:\n        A = 14\n    if B == 1:\n        B = 14\n\n    if A > B:\n        print(\"Alice\")\n    elif A < B:\n        print(\"Bob\")\n    else:\n        print(\"Draw\")\n\n\ndef __starting_point():\n    # unittest.main()\n    resolve()\n\n__starting_point()", "A, B = map(int, input().split())\ncA = (A + 12) % 14\ncB = (B + 12) % 14\n\nif cA > cB:\n    print(\"Alice\")\nelif cA == cB:\n    print(\"Draw\")\nelse:\n    print(\"Bob\")", "#   AtCoder abc054 a\n#   \u30b9\u30c8\u30ec\u30c3\u30c1\u8ab2\u984c\n\n#   \u5165\u529b\nalice, bob = list(map(int, input().split()))\n\n#   \u5224\u5b9a\nif alice == bob:\n    print(\"Draw\")\nelif (alice == 1) or ((bob != 1) and (alice > bob)):\n    print(\"Alice\")\nelse:\n    print(\"Bob\")\n", "a,b = map(int,input().split())\nif a==b :\n    print(\"Draw\")\nelif (a==1 or a>b) and b!=1:\n    print(\"Alice\")\nelse :\n    print(\"Bob\")", "def resolve():\n    A,B = map(int,input().split())\n    if A==1:A+=13\n    if B==1:B+=13 \n    \n    if A>B:print(\"Alice\")\n    elif A<B:print(\"Bob\")\n    else :print(\"Draw\")\nresolve()", "# \u5165\u529b\nA, B = list(map(int, input().split()))\n\n# \u51fa\u529b\n\nif A == B:\n    print('Draw')\nelif A == 1:\n    print('Alice')\nelif B == 1:\n    print('Bob')\nelif A > B:\n    print('Alice')\nelif B > A:\n    print('Bob')\n", "a,b = map(int, input().split())\nif a == b:\n    print('Draw')\nelif a == 1:\n    print('Alice')\nelif b == 1:\n    print('Bob')\nelif a > b:\n    print('Alice')\nelse:\n    print('Bob')", "x, y = map(int,input().split())\nL = list(range(2,14)) + [1]\na = L.index(x)\nb = L.index(y)\nif a > b:\n    print(\"Alice\")\nelif a == b:\n    print(\"Draw\")\nelse:\n    print(\"Bob\")", "a,b=map(int,input().split())\nif a==b:\n  print(\"Draw\")\nelif a==1:\n  print(\"Alice\")\nelif b==1:\n  print(\"Bob\")\nelif a>b:\n  print(\"Alice\")\nelse:\n  print(\"Bob\")", "# A - One Card Poker\ndef main():\n    a, b = map(int, input().split())\n\n    if a == b:\n        print('Draw')\n    elif a == 1 and b != 1:\n        print('Alice')\n    elif a != 1 and b == 1:\n        print('Bob')\n    elif a > b:\n        print('Alice')\n    else:\n        print('Bob')\n  \n        \ndef __starting_point():\n    main()\n__starting_point()", "# 1\u679a\u30dd\u30fc\u30ab\u30fc 1\u304c\u5f37\u304f2\u304c\u5f31\u3044\u52dd\u6557\u5224\u5b9a\n\nA, B = map(int, input().split())\n\nif A == 1:\n    A = 14\nif B == 1:\n    B = 14\n\nif A == B:\n    print('Draw')\nelif A > B:\n    print('Alice')\nelse:\n    print('Bob')", "A, B = map(int, input().split())\n\nif A == B:\n    print('Draw')\nelif A == 1:\n    print('Alice')\nelif B == 1:\n    print('Bob')\nelif A > B:\n    print('Alice')\nelif A < B:\n    print('Bob')"]