["a = int(input())\nfor i in range(a):\n    x, y = map(int, input().split())\n    t = x * 60 + y\n    print(24*60 - t)", "import sys\ninput = sys.stdin.readline\ndef getInt(): return int(input())\ndef getVars(): return list(map(int, input().split()))\ndef getList(): return list(map(int, input().split()))\ndef getStr(): return input().strip()\n## -------------------------------\n\nt= getInt()\nfor _ in range(t):\n    h, m = getVars()\n    print(60*24 - h*60 - m)\n\n", "q = int(input())\nfor z in range(q):\n     a, b = map(int, input().split())\n     s = (23 - a) * 60 + (60 - b)\n     print(s)", "n = int(input())\nfor i in range(n):\n    a, b = map(int, input().split())\n    print(24 * 60 - a * 60 - b)", "import math\nfrom decimal import Decimal\nimport heapq\nfrom collections import deque\ndef na():\n\tn = int(input())\n\tb = [int(x) for x in input().split()]\n\treturn n,b\n \n \ndef nab():\n\tn = int(input())\n\tb = [int(x) for x in input().split()]\n\tc = [int(x) for x in input().split()]\n\treturn n,b,c\n \n \ndef dv():\n\tn, m = list(map(int, input().split()))\n\treturn n,m\n \n \ndef da():\n\tn, m = list(map(int, input().split()))\n\ta = list(map(int, input().split()))\n\treturn n,m, a \n \n \ndef dva():\n\tn, m = list(map(int, input().split()))\n\ta = [int(x) for x in input().split()]\n\tb = [int(x) for x in input().split()]\n\treturn n,m,b\n \n \ndef eratosthenes(n): \n\tsieve = list(range(n + 1))\n\tfor i in sieve:\n\t\tif i > 1:\n\t\t\tfor j in range(i + i, len(sieve), i):\n\t\t\t\tsieve[j] = 0\n\treturn sorted(set(sieve))\n \n \ndef lol(lst,k):\n\tk=k%len(lst)\n\tret=[0]*len(lst)\n\tfor i in range(len(lst)):\n\t\tif i+k<len(lst) and i+k>=0:\n\t\t\tret[i]=lst[i+k]\n\t\tif i+k>=len(lst):\n\t\t\tret[i]=lst[i+k-len(lst)]\n\t\tif i+k<0:\n\t\t\tret[i]=lst[i+k+len(lst)]\n\treturn(ret)\ndef nm():\n\tn = int(input())\n\tb = [int(x) for x in input().split()]\n\tm = int(input())\n\tc = [int(x) for x in input().split()]\n\treturn n,b,m,c\n \n \ndef dvs():\n\tn = int(input())\n\tm = int(input())\n\treturn n, m \n \n\ndef fact(a, b):\n\tc = []\n\tans = 0\n\tf = int(math.sqrt(a))\n\tfor i in range(1, f + 1):\n\t\tif a % i == 0:\n\t\t\tc.append(i)\n\tl = len(c)\n\tfor i in range(l):\n\t\tc.append(a // c[i])\n\tfor i in range(len(c)):\n\t\tif c[i] <= b:\n\t\t\tans += 1\n\tif a / f == f and b >= f:\n\t\treturn ans - 1\n\treturn ans\n\n\nimport math\nfrom decimal import Decimal\nimport heapq\nfrom collections import deque\ndef na():\n\tn = int(input())\n\tb = [int(x) for x in input().split()]\n\treturn n,b\n \n \ndef nab():\n\tn = int(input())\n\tb = [int(x) for x in input().split()]\n\tc = [int(x) for x in input().split()]\n\treturn n,b,c\n \n \ndef dv():\n\tn, m = list(map(int, input().split()))\n\treturn n,m\n \n \ndef da():\n\tn, m = list(map(int, input().split()))\n\ta = list(map(int, input().split()))\n\treturn n,m, a \n \n \ndef dva():\n\tn, m = list(map(int, input().split()))\n\ta = [int(x) for x in input().split()]\n\tb = [int(x) for x in input().split()]\n\treturn n,m,b\n \n \ndef eratosthenes(n): \n\tsieve = list(range(n + 1))\n\tfor i in sieve:\n\t\tif i > 1:\n\t\t\tfor j in range(i + i, len(sieve), i):\n\t\t\t\tsieve[j] = 0\n\treturn sorted(set(sieve))\n \n \ndef lol(lst,k):\n\tk=k%len(lst)\n\tret=[0]*len(lst)\n\tfor i in range(len(lst)):\n\t\tif i+k<len(lst) and i+k>=0:\n\t\t\tret[i]=lst[i+k]\n\t\tif i+k>=len(lst):\n\t\t\tret[i]=lst[i+k-len(lst)]\n\t\tif i+k<0:\n\t\t\tret[i]=lst[i+k+len(lst)]\n\treturn(ret)\ndef nm():\n\tn = int(input())\n\tb = [int(x) for x in input().split()]\n\tm = int(input())\n\tc = [int(x) for x in input().split()]\n\treturn n,b,m,c\n \n \ndef dvs():\n\tn = int(input())\n\tm = int(input())\n\treturn n, m \n \n \ndef fact(a, b):\n\tc = []\n\tans = 0\n\tf = int(math.sqrt(a))\n\tfor i in range(1, f + 1):\n\t\tif a % i == 0:\n\t\t\tc.append(i)\n\tl = len(c)\n\tfor i in range(l):\n\t\tc.append(a // c[i])\n\tfor i in range(len(c)):\n\t\tif c[i] <= b:\n\t\t\tans += 1\n\tif a / f == f and b >= f:\n\t\treturn ans - 1\n\treturn ans\n \n \nfor i in range(int(input())):\n\tj, m = list(map(int, input().split()))\n\tprint(60 * 24 - j * 60 - m)\n", "q=int(input())\nfor i in range(q):\n    w,e=map(int,input().split())\n    print((23-w)*60+60-e)", "#!/usr/bin/env python3\n# coding: utf-8\n# Last Modified: 28/Dec/19 10:36:05 PM\n\n\nimport sys\n\n\ndef main():\n    x = 24 * 60\n    for tc in range(int(input())):\n        h, m = get_ints()\n        y = h * 60 + m\n        print(x - y)\n\n\nget_array = lambda: list(map(int, sys.stdin.readline().split()))\n\n\nget_ints = lambda: list(map(int, sys.stdin.readline().split()))\n\n\ninput = lambda: sys.stdin.readline().strip()\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "for __ in range(int(input())):\n    a, b = list(map(int, input().split()))\n    print(24 * 60 - a * 60 - b)", "s = int(input())\nfor i in range(s):\n    hh,mm = list(map(int, input().split()))\n    ms = hh*60+mm\n    print(24*60-ms)\n", "def ii(): return int(input())\ndef si(): return input()\ndef mi(): return map(int,input().split())\ndef li(): return list(mi()) \n\nimport math\n\n\nfor i in range(ii()):\n    h,m=mi()\n    ans=1440-(h*60+m)\n    print(ans)", "for _ in range(int(input())):\n    h, m = list(map(int,input().split()))\n    print(1440 - (h*60 + m))", "#list(map(int, input().split()))\nfor _ in range(int(input())):\n\th, m = list(map(int, input().split()))\n\tprint(24 * 60 - h * 60 - m)", "t = int(input())\nfor i in range(t):\n\tn, s = list(map(int, input().split()))\n\tprint(24 * 60 - n * 60 - s)\n", "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor test in range(t):\n    h,w=list(map(int,input().split()))\n\n    print(24*60-h*60-w)\n\n", "t = int(input())\nfor i in range(t):\n\thh = 23\n\tmm = 60\n\th, m = list(map(int, input().split()))\n\tprint((hh - h) * 60 + mm - m)\n", "for _ in range(int(input())):\n    h, m = tuple(map(int, input().split()))\n    print(1440 - h*60 - m)", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int, minp().split()))\n\ndef solve():\n\ta, b = mints()\n\tprint(24*60-a*60-b)\n\nfor i in range(mint()):\n\tsolve()\n", "\n\nfor _ in range(int(input())):\n\th,m=map(int,input().split())\n\n\th=60*h+m\n\n\tprint(1440-h)", "for nt in range(int(input())):\n\th,m=map(int,input().split())\n\tprint ((23-h)*60+(60-m))", "import sys\n# from collections import defaultdict\nt=1\nt=int(input())\nfor i in range(t):\n    n,m=list(map(int,sys.stdin.readline().strip().split()))\n    # a=list(map(int,sys.stdin.readline().strip().split()))\n    # b=list(map(int,sys.stdin.readline().strip().split()))\n    # d = defaultdict(int)\n    print((24-n-1)*60+60-m)\n    \n", "q = int(input())\nfor i in range(q):\n    h, m = list(map(int, input().split()))\n    print(24 * 60 - h * 60 - m)\n", "for i in range(int(input())):\n    h, m = [int(a) for a in input().split()]\n    print(24*60 - h*60 - m)\n", "from sys import stdin,stdout\nn=int(stdin.readline().strip())\nfor t in range(n):\n    h,c=list(map(int,stdin.readline().strip().split()))\n    ans=0\n    if c!=0:\n        ans+=60-c\n        h+=1\n    ans+=(24-h)*60\n    print(ans)\n        \n\n", "t = int(input())\nfor i in range(t):\n    h, m = list(map(int, input().split()))\n    print(24 * 60 - h * 60 - m)\n", "t = int(input())\n\nfor i in range(t):\n    h , m = map(int , input().split())\n    \n    total = 24*60 - h*60 - m\n    \n    print(total)", "t = int(input())\n\nfor i in range(t):\n\ta, b = list(map(int, input().split()))\n\tans = (23  - a) * 60 + (60 - b)\n\tprint(ans)\n", "N = int(input())\n\n\nfor _ in range(N):\n\th, m = [int(x) for x in input().split()]\n\n\tprint(24*60- (h*60+m))"]