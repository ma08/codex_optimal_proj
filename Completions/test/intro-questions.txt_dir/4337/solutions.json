["import collections \nn = int(input())\nli = list(input().split())\nc = collections.Counter(li)\nif len(c) == 3:\n    print('Three')\nelse:\n    print('Four')", "n = int(input())\ns = list(map(str,input().split()))\nprint(\"Four\" if \"Y\" in s else \"Three\")", "N = int(input())\nS = set(input().split(\" \"))\n\nif len(S) == 3:\n    print(\"Three\")\nelif len(S) == 4:\n    print(\"Four\")\n", "offering_number = int(input())\noffering_color = set(i for i in input().split())\nif len(offering_color) == 3:\n    print(\"Three\")\nelse:\n    print(\"Four\")\n", "n = int(input())\ns = input().split()\nif len(set(s)) == 4:\n  print(\"Four\")\nelse:\n  print(\"Three\")", "N = int(input())\nS = list(map(str, input().split()))\n\nif len(set(S)) == 3:\n    print(\"Three\")\nelif len(set(S)) == 4:\n    print(\"Four\")", "n = int(input())\n\nS = input().split()\n\nprint('Four' if 'Y' in S else 'Three')", "import sys, collections\nlines = [s.rstrip(\"\\n\") for s in sys.stdin.readlines()]\nn, = [int(num) for num in lines.pop(0).split(\" \")]\ns_list = lines.pop(0).split(\" \")\nc = collections.Counter(s_list)\nif len(c) == 3:\n    print(\"Three\")\nelif len(c) == 4:\n    print(\"Four\")\n", "n = int(input())\nprint([\"Three\", \"Four\"][len(set(input().split())) - 3])", "n = int(input())\ns = list(map(str, input().split()))\nimport collections\ns = collections.Counter(s)\nif len(s.keys()) == 3:\n    print(\"Three\")\nelse:\n    print(\"Four\")", "N = int(input())\narares = list(map(str, input().split()))\n\nif len([arare for arare in set(arares) if arares.count(arare) > 0]) == 3:\n    print('Three')\nelif len([arare for arare in set(arares) if arares.count(arare) > 0]) == 4:\n    print('Four')", "n=int(input())\ns=input()\nif 'Y' in s:print(\"Four\")\nelse:print(\"Three\")", "N = int(input())                       \ns = list(map(str, input().split()))    \n                                       \nif \"Y\" in s:                           \n    print(\"Four\")                      \nelse:                                  \n    print(\"Three\")                     ", "N=int(input())\nS=str(input())\n\ndef ans089(N:int, S:list):\n    S=S.split()\n    if len(set(S))==4:\n        return(\"Four\")\n    elif len(set(S))==3:\n        return (\"Three\")\nprint(ans089(N,S))", "n = int(input())\ns = list(map(str,input().split()))\nif \"Y\" in s:\n    print (\"Four\")\nelse:\n    print(\"Three\")", "n = int(input())\na = list(input().split())\n# a\u306e\u4e2d\u306b\u9ec4\u8272Y\u304c\u542b\u307e\u308c\u3066\u3044\u308c\u3070Four\u3068\u51fa\u529b\nif \"Y\" in a:\n    print(\"Four\")\n# a\u306e\u4e2d\u306b\u9ec4\u8272Y\u304c\u542b\u307e\u308c\u3066\u306a\u3051\u308c\u306fThree\u3068\u51fa\u529b\nelse:\n    print(\"Three\")", "N = int(input())\nS = list(map(str, input().split()))\n\ncolor = []\n\nfor i in S:\n  if i in color:\n    pass\n  else:\n    color.append(i)\n    \nif len(color) == 4:\n  print('Four')\nelse:\n  print('Three')\n\n", "N = input()\nS = list(map(str,input().split()))\n\nif \"Y\" in S:\n    print(\"Four\")\nelse:\n    print(\"Three\")", "N = int(input())\nS = list(map(str, input().split()))\n\nif \"P\" in S and \"W\" in S and \"G\" in S and \"Y\" in S:\n    print('Four')\nelse:\n    print('Three')", "#!/usr/bin/env python3\n\nn = int(input())\ns = set(map(str, input().split()))\n\nif len(s) == 4:\n    print(\"Four\")\nelse:\n    print(\"Three\")\n", "\nn=input()\ns=list(map(str, input().split()))\n\nif \"Y\" not in s:\n    print(\"Three\")\nelse:\n    print(\"Four\")\n", "n = int(input())\ns = input().split()\n\nprint('Three') if len(set(s)) == 3 else print('Four')", "n = int(input())\ns = input()\nprint(\"Four\" if \"Y\" in s else \"Three\")", "n = int(input())\nhina_arare = map(str, input().split())\nif 'Y' in hina_arare:\n    print('Four')\nelse:\n    print('Three')", "n = input()\ns = input().split()\nprint(('Four' if 'Y' in s else 'Three'))\n", "N = int(input())\nS = list(map(str, input().split()))\n\nif 'Y' in S:\n    print(\"Four\")\nelse:\n    print(\"Three\")", "input()\ns = map(str,input().split())\nprint(\"Three\" if len(set(s))==3 else \"Four\")", "n = int(input())\ns = list(input().split())\nP = s.count(\"P\")\nW = s.count(\"W\")\nG = s.count(\"G\")\nprint(\"Three\" if n==P+W+G else \"Four\")", "n = int(input())\ns = list(map(str, input().split()))\nif s.count('Y') == 0:\n    print('Three')\nelse:\n    print('Four')", "N = int(input())\nS = input().split()\nprint('Four' if 'Y' in S else 'Three')", "n = int(input())\ns = list(input().split())\nif \"Y\" in s:\n    print(\"Four\")\nelse:\n    print(\"Three\")", "n = int(input())\na = list(input().split())\nif len(set(a))==3:\n    print(\"Three\")\nelse:\n    print(\"Four\")", "N = int(input())\ncolor = list(map(str,input().split()))\n\npp = 0\nwp = 0\ngp = 0\nyp = 0\n\n\nfor i in range(N):\n    if color[i] == 'P' and pp == 0:\n        pp += 1\n    if color[i] == 'W' and wp == 0:\n        wp += 1\n    if color[i] == 'G' and gp == 0:\n        gp += 1\n    if color[i] == 'Y' and yp == 0:\n        yp += 1\n\nif (pp + wp + gp + yp) == 3:\n    print('Three')\nelse:\n    print('Four')\n", "def decision(pack: list) -> str:\n    if \"Y\" in pack:\n        return \"Four\"\n    return \"Three\"\n\n\ndef __starting_point():\n    n = int(input())\n    pack = list(map(str, input().split()))\n    print(decision(pack))\n__starting_point()", "def atc_089b(input_value: str) -> str:\n    N = input_value[0]\n    Si = input_value[1]\n    colors = [\"P\" in Si, \"W\" in Si, \"G\" in Si, \"Y\" in Si]\n    if colors.count(True) == 3:\n        return \"Three\"\n    elif colors.count(True) == 4:\n        return \"Four\"\n    else:\n        return \"other\"\n\nN_input = input()\nSi_input = input()\nprint((atc_089b([N_input, Si_input])))\n", "def answer(n: str, s: str) -> str:\n    return 'Three' if len(set(s.split())) == 3 else 'Four'\n\n\ndef main():\n    n = input()\n    s = input()\n    print(answer(n, s))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "n=int(input())\ns=input()\nif 'Y' in s:print(\"Four\")\nelse:print(\"Three\")", "# \u304b\u3076\u308a\u3092\u7701\u3044\u305f\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3057\u3001\u8981\u7d20\u3092\u6570\u3048\u3066\u6761\u4ef6\u5206\u5c90\nN = int(input())\nS = list(input().split())\n\n\nquantity = len(list(set(S)))\n\n\nif quantity == 3:\n    print('Three')\nelse:\n    print('Four')\n", "N = input()\nS = list(map(str, input().split()))\n\nif 'Y' in S:\n    print('Four')\nelse:\n    print('Three')", "n=int(input())\ns=input().split()\ns_set=set(s)\n\nif len(s_set)==4:\n    print(\"Four\")\nelse:\n    print(\"Three\")", "n = int(input())\nlist01 = input().split()\nif 'Y' in list01:\n    print('Four')\nelse:\n    print('Three')", "N=int(input())\nS=input().split()\nprint(\"Three\"if len(set(S))&1else \"Four\")", "n = int(input())\ns = list(input().split())\nprint(\"Four\") if \"Y\" in s else print(\"Three\")", "a=int(input())\nl=set(input().split())\nif len(l)==3:\n   print(\"Three\")\nelse:\n   print(\"Four\")\n", "#https://atcoder.jp/contests/abc089/tasks/abc089_b\nS_list = [input() for i in range(2)]\nN = map(int,S_list[0].split())    \nA_list = set(S_list[1].split())\nfour = {\"P\",\"W\",\"G\",\"Y\"}\nif len(A_list & four) == 3:\n    result =\"Three\"\nelse:\n    result =\"Four\"\nprint(result)", "# B - Hina Arare\n\n# N\nN = int(input())\nmy_list = list(input().split())\n\narare_list = ['P', 'W', 'G', 'Y']\nmy_list_only = set(my_list)\ncount = 0\n\nfor i in range(0, 4):\n    if arare_list[i] in my_list_only:\n        count += 1\n\nif count == 3:\n    answer = 'Three'\nif count == 4:\n    answer = 'Four'\n\nprint(answer)\n", "n = int(input())\ns = set(input().split())\nprint(\"Three\" if len(s) == 3 else \"Four\")", "# B - Hina Arare\n# https://atcoder.jp/contests/abc089/tasks/abc089_b\n\nN = int(input())\ns = list(map(str, input().split()))\n\nresult = 'Three'\n\nif s.count('Y') > 0:\n    result = 'Four'\n\nprint(result)\n", "input();print(\"Four\"if\"Y\"in input()else\"Three\")", "N = int(input())\nS = list(map(str, input().split()))\n\n# \u9ec4\u8272'Y'\u304c\u5165\u3063\u3066\u3044\u306a\u3051\u308c\u3070\u3001Three\n\nif 'Y' not in S:\n    print('Three')\nelse:\n    print('Four')", "N = int(input())\nS = list(input().split())\n\nif 'P' and 'W' and 'G' and 'Y' in S:\n    print('Four')\nelse:\n    print('Three')", "def main():\n    n=int(input())\n    s=input()\n    for c in s:\n        if c == 'Y':\n            print('Four')\n            return\n    print('Three')\nmain()\n", "n = int(input())\ncolors = list(map(str, input().split()))\n\nif \"Y\" in colors:\n    print(\"Four\")\nelse:\n    print(\"Three\")", "n = int(input())\ns = list(input())\n\nFour = ['P', 'Y', 'G', 'W']\nml = all(word in s for word in Four)\n\nif ml:\n    print('Four', flush=True)\nelse:\n    print('Three', flush=True)\n    \n    \n\n", "input()\ns = input().split()\n\nif 'Y' in s:\n   print('Four')\nelse:\n   print('Three')", "n = int(input())\ns = input().split()\n\nif 'Y' in s:\n    print('Four')\nelse:\n    print('Three')", "n = int(input())\ns = list(map(str,input().split()))\nprint((\"Four\" if \"Y\" in s else \"Three\"))\n\n\n\n", "N = int(input())\nS = set(input().split())\nprint('Three' if len(S) == 3 else 'Four')", "n = int(input())\ns = list(map(str, input().split()))\ns = set(s)\n\nif len(s) == 3:\n    print(\"Three\")\nelse:\n    print(\"Four\")\n", "N = int(input())\nS = list(map(str, input().split()))\n\ncandy_list = ['P', 'W', 'G', 'Y']\nanswer = 0\nfor i in range(4):\n    if candy_list[i] in S:\n        answer += 1\n\nif answer == 3:\n    print('Three')\nif answer == 4:\n    print('Four')", "def main():\n    n  = int(input())\n    s = list(input().split())\n    hina = ['P','W','G','Y']\n    hina_type = 0\n    for i in hina:\n        if i in s:\n            hina_type += 1\n    if hina_type == 3:\n        print('Three')\n    if hina_type == 4:\n        print('Four')\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\ns = list(input().split())\n\ndef answer(N:int, s: str) -> str:\n    if 'Y' in s:\n\t    return 'Four'\n    else:\n\t    return 'Three'\n    \n    \nprint(answer(N, s))", "n = input()\nprint('Three' if len(set(input().split())) == 3 else 'Four')", "N = int(input())\nS = list(map(str,input().split()))\n\nif \"Y\" in S:\n    print(\"Four\")\nelse:\n    print(\"Three\")", "_,*s=map(str,open(0).read().split())\nprint('TFhoruere'[len(set(s))==4::2])", "n = int(input())\ns = list(input().split())\nif 'Y' in s:\n    print('Four')\nelse:\n    print('Three')", "N = int(input())\nS = input().split()\nprint('Four' if 'Y' in S else 'Three')", "n = int(input())\ns = input()\n\nif 'Y' in s:\n    print('Four')\nelse:\n    print('Three')", "N = int(input())\nS = list(input().split())\n\ncnt = len(set(S))\nprint(\"Three\" if cnt == 3 else \"Four\")", "N = int(input())\nS = list(map(str, input().split()))\n\nif 'Y' in S:\n    print('Four')\nelse:\n    print('Three')", "def main():\n    n = int(input())\n    s = set(input().split(\" \"))\n\n    print(\"Four\" if len(s) == 4 else \"Three\")\n\n\nmain()", "n=int(input())\nif \"Y\" in list(map(str,input().split())):\n  print(\"Four\")\nelse:\n  print(\"Three\")", "input();print('Three' if len(set(input().split()))==3 else 'Four')", "i=input()\nSi=input()\nif 'Y' in Si:\n    print('Four')\nelse:\n    print('Three')", "N = int(input())\nS = list(map(str, input().split()))\n\nif 'Y' in S:\n    answer = 'Four'\nelse:\n    answer = 'Three'\nprint(answer)", "N = int(input())\nS = input()\n\nif 'Y' in S:\n    print('Four')\nelse:\n    print('Three')", "N = str(input())\nS = map(str,input().split())\n\ncolor = list(S)\nfactor = set(color)\n\nif len(factor) == 3:\n    print(\"Three\")\nif len(factor) == 4:\n    print(\"Four\")", "n = int(input())\nl = input().split()\nprint(\"Four\" if \"Y\" in l else \"Three\")", "N=int(input())\nS=map(str,input().split())\nif \"Y\" in S:\n    print(\"Four\")\nelse:\n    print(\"Three\")", "N = input()\narare = list(map(str,input().split()))\n\nif \"Y\" in arare:\n    print(\"Four\")\nelse:\n    print(\"Three\")", "# \u6570\u5024\u3068\u6587\u5b57\u306e\u53d6\u5f97\nnum = int(input())\ncolors = list(map(str,input().split()))\n\n# \u9ec4\u8272\u304c\u3042\u308b\u304b\u5224\u5b9a\u3057\u7d50\u679c\u3092\u51fa\u529b\nif colors.count(\"Y\") >0:\n    print(\"Four\")\nelse:\n    print(\"Three\")", "N=int(input())\nl=list(map(str,input().split()))\n\nln=len(set(l))\n\nif ln==3:\n  print('Three')\nelse:\n  print('Four')", "N = int(input())\ncolor = list(input().split())\n\n# 1\u3064\u306e\u888b\u304c\u3042\u308a\u3001\u3072\u306a\u3042\u3089\u308c\u304c N\u500b \u5165\u3063\u3066\u3044\u307e\u3059\u3002\n# \u6843\u8272\u3092 P\u3001\u767d\u8272\u3092 W\u3001\u7dd1\u8272\u3092 G\u3001\u9ec4\u8272\u3092 Y \u3068\u8868\u3057\u305f\u3068\u304d\u3001\u888b\u304b\u3089\u3072\u306a\u3042\u3089\u308c\u30921\u7c92\u305a\u3064\u53d6\u308a\u51fa\u3057\u3066\u3044\u3063\u305f\u3068\u3053\u308d\u3001i\u756a\u76ee\u306b\u53d6\u308a\u51fa\u3057\u305f\u3072\u306a\u3042\u3089\u308c\u306e\u8272\u306f Si \u3067\u3057\u305f\u3002\n# \u3053\u306e\u888b\u306b 3\u7a2e\u985e \u306e\u3072\u306a\u3042\u3089\u308c\u304c\u5165\u3063\u3066\u3044\u305f\u5834\u5408\u306f Three\u30014\u7a2e\u985e \u306e\u3072\u306a\u3042\u3089\u308c\u304c\u5165\u3063\u3066\u3044\u305f\u5834\u5408\u306f Four \u3068\u51fa\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nif \"Y\" in color:\n    print(\"Four\")\nelse:\n    print(\"Three\")", "n = int(input())\ns = input()\nif \"Y\" in s:\n  print(\"Four\")\nelse:\n  print(\"Three\")", "  \ndef atc_089b(input_value: str) -> str:\n    N = input_value[0]\n    Si = input_value[1]\n    colors = [\"P\" in Si, \"W\" in Si, \"G\" in Si, \"Y\" in Si]\n    if colors.count(True) == 3:\n        return \"Three\"\n    elif colors.count(True) == 4:\n        return \"Four\"\n    else:\n        return \"other\"\n\n\nN_input = input()\nSi_input = input()\nprint(atc_089b([N_input, Si_input]))", "N=int(input())\nS=list(map(str,input().split()))\nif 'Y' in S:\n  print('Four')\nelse:\n  print('Three')", "N = int(input())\nC = list(map(str,input().split()))\nif 'P'and 'W'and 'G'and 'Y'in C:\n    print('Four')\nelse:\n    print('Three')", "n=int(input())\ns=list(map(str,input().split()))\nif \"Y\" in s:\n  print(\"Four\")\nelse:\n  print(\"Three\")", "n = int(input())\nlist_s = [s for s in input().split()]\nif 'P' in list_s and 'W' in list_s and 'G' in list_s and 'Y' in list_s:\n    print(\"Four\")\nelse: print(\"Three\")", "#\n# abc089 b\n#\nimport sys\nfrom io import StringIO\nimport unittest\nfrom collections import Counter\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"6\nG W Y P Y W\"\"\"\n        output = \"\"\"Four\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"9\nG W W G P W P G G\"\"\"\n        output = \"\"\"Three\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_3(self):\n        input = \"\"\"8\nP Y W G Y W Y Y\"\"\"\n        output = \"\"\"Four\"\"\"\n        self.assertIO(input, output)\n\n\ndef resolve():\n    N = int(input())\n    S = list(input().split())\n    C = Counter(S)\n\n    if \"Y\" in C:\n        print(\"Four\")\n    else:\n        print(\"Three\")\n\n\ndef __starting_point():\n    # unittest.main()\n    resolve()\n\n__starting_point()", "n = int(input())\ns = list(map(str, input().split()))\nfor i in s:\n    if i == 'Y':\n        print('Four')\n        break\n\n# 4\u7a2e\u985e\u304b3\u7a2e\u985e\u304b\u306f\u3001\u9ec4\u8272Y\u304c\u5165\u3063\u3066\u308b\u304b\u3069\u3046\u304b\n\nelse:\n    print('Three')", "_ = input()\nif \"Y\" in input():\n  print(\"Four\")\nelse:\n  print(\"Three\")", "input()\nprint(['Three', 'Four']['Y' in input()])", "N = int(input())\nS = list(map(str, input().split()))\n\nif 'Y' in S:\n    print('Four')\nelse:\n    print('Three')", "N = input()\nS = list(map(str, input().split()))\n\nif 'Y' in S:\n    print('Four')\nelse:\n    print('Three')", "snack_num = int(input())\na = list(map(str, input().split()))\ncolor_set = set(a)\n\nif len(color_set) == 3:\n    print('Three')\nelse:\n    print('Four')\n", "n = int(input())\na = [s for s in input().split()]\n\nseta = set(a)\nif len(seta) == 4: print('Four')\nelse: print('Three')\n", "N=int(input())\nS=list(input().split())\nfor c in S:\n    if c=='Y':\n        print(\"Four\")\n        break\nelse:\n    print(\"Three\")\n", "n = int(input())\nx = set(input().split())\nif len(x)==3:\n    print('Three')\nelse:\n    print('Four')", "n=int(input())\ns=input().split()\nprint(\"Three\" if \"Y\" not in s else \"Four\")"]