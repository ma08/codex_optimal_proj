["#70 C - Five Transportations\nN = int(input())\nlis = [int(input()) for _ in range(5)]\nmini = min(lis)\ngroup = (N+mini-1)//mini\n\nans = 5 + group - 1\nprint(ans)", "import math\nN = int(input())\np = [0] * 5\nbn = float('inf')\nfor i in range(5):\n  p[i] = int(input())\n  if bn > p[i]:\n    bn = p[i]\nans = 0\nprint((math.ceil(N / bn) + (5 - 1)))\n", "import math\n\nn=int(input())\nA=[int(input()) for _ in range(5)]\n\nans=math.ceil(n/min(A)) + 4\n\nprint(ans)", "import math\n\nN=int(input())\nA=[int(input()) for _ in range(5)]\nn=min(A)\nfor i in range(5):\n  if n==A[i]:\n    p=i\n    break\nk=math.ceil(N/n)\nprint(k+4)", "n=int(input())\na=int(input())\nb=int(input())\nc=int(input())\nd=int(input())\ne=int(input())\nprint(n//min(a,b,c,d,e)+4) if n%min(a,b,c,d,e)==0 else print((n//min(a,b,c,d,e)+1)+4)\n\n", "N = int(input())\nA = int(input())\nB = int(input())\nC = int(input())\nD = int(input())\nE = int(input())\n\nm = min(A,B,C,D,E)\n\nif N%m != 0:\n  print(N//m + 5)\nelse:\n  print(N//m + 4)", "import math as mt\nn=int(input())\nlst=[int(input()) for i in range(5)]\nprint(mt.ceil(n/min(lst))+4)", "n = int(input())\nabcde = [int(input()) for _ in range(5)]\n\nprint(4-(-n//min(abcde)))", "import math\n\nn = int(input())\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\nmove = [a, b, c, d, e]\nf = min(a, b, c, d, e)\nf_index = move.index(f)+1\n\nprint(math.ceil(n/f) + (5-f_index) + f_index-1)", "n = int(input())\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\n\nnum_list = [a,b,c,d,e]\n\nif n % min(num_list) == 0:\n    print(4 + n //min(num_list))\nelse:\n    print(5 + n // min(num_list))", "n = int(input())\na = list(int(input()) for _ in range(5))\nMin = min(a)\n\nif n <= Min:\n    print(5)\n    return\n\nx = n//Min\nif n%Min != 0: x += 1\nprint(4-a.index(Min)+x+a.index(Min))", "import math\nN = int(input())\nmove = []\nfor i in range(5):\n    move.append(int(input()))\nmovemin=min(move)\nif movemin>=N:\n    ans=5\nelse:\n    ans=(math.ceil(N/movemin))+4\n\nprint(ans)\n", "import math\nN = int(input())\nmobile = [int(input()) for _ in range(5)]\n\nres = math.ceil(N/min(mobile)) + 4\n\nprint(res)", "n = int(input())\na = []\nfor i in range(5):\n  a.append(int(input()))\nx = min(a)\nt = n // x\nif n % x != 0:\n  t += 1\nt += 4\nprint(t)\n", "from math import ceil\nn,a,b,c,d,e=[int(input()) for i in range(6)]\nprint(ceil(n/min(a,b,c,d,e))+4)", "import math\nn=int(input())\nx=[]\nfor i in range(5):\n  x.append(int(input()))\nif n==min(x):\n  print(5)\nelse:\n  print(4+math.ceil(n/min(x)))", "import math\n\nn = int(input())\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\n\n_min = min([a,b,c,d,e])\n_ans = math.ceil(n/_min)\n\nprint(_ans+4)", "n = int(input())\ndata = [int(input()) for i in range(5)]\nm = min(data)\nif n%m==0:\n  print(4+n//m)\nelse:\n  print(5+n//m)", "n,*a = [int(input()) for _ in range(6)]\nprint(((n+min(a)-1)//min(a)+4))", "import math\n\n\ndef main():\n    n = int(input())\n    csr = []\n    for _ in range(5):\n        csr.append(int(input()))\n    # print(5+n//min(csr))\n    print((4+math.ceil(n/min(csr))))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from math import ceil\n\nn = int(input())\na = [int(input()) for _ in range(5)]\n\nprint(( ceil(n/min(a)) + 4))\n", "N = int(input())\nT = [0] * 5\nfor i in range(5):\n    T[i] = int(input())\n\nfrom math import ceil\nt = min(T)\nprint(ceil(N/t) + 4)", "n = int(input())\nx = [int(input()) for i in range(5)]\nd = n // min(x)\nif n%min(x)==0:\n  print(d+4)\nelse:\n  print(d+5)", "n=int(input())\nx = [int(input()) for _ in range(5)]\np = min(x)\nq = n//p\nif n % p == 0:\n        print(q+4)\nelse:\n        print(q+5)", "n = int(input())\ntp = []\ntmp = 10**15\nfor _ in range(5):\n    a = int(input())\n    if tmp > a:\n        tmp = a\n    tp.append(a)\n\nif tmp >= n:\n    print(5)\n    return\n\ncnt = n//tmp\nmod = n%tmp\n\nif mod > 0:\n    print(5+cnt)\nelse:\n    print(5+cnt-1)", "from math import ceil\nn = int(input())\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\nprint(ceil(n / min(a,b,c,d,e)) + 4)", "# import sys\n# sys.setrecursionlimit(10 ** 6)\n# import bisect\n# from collections import deque\n# from decorator import stop_watch\n# \n# \n# @stop_watch\ndef solve(N, A, B, C, D, E):\n    tmp = min(A, B, C, D, E)\n    tmp, tmp2 = divmod(N, tmp)\n    tmp += 0 if tmp2 == 0 else 1\n    print((tmp + 4))\n\n\ndef __starting_point():\n    N = int(input())\n    A = int(input())\n    B = int(input())\n    C = int(input())\n    D = int(input())\n    E = int(input())\n    solve(N, A, B, C, D, E)\n\n    # # test\n    # from random import randint\n    # from func import random_str\n    # solve()\n\n__starting_point()", "n = int(input())\na = [int(input()) for _ in range(5)]\n\nif n % min(a) != 0:\n    n += min(a) - (n % min(a))\n\nif min(a) >= n:\n    print((5))\nelse:\n    print((int(n/min(a)) + 4))\n", "N, A, B, C, D, E = [int(input()) for _ in range(6)]\n \n# 1 => 2: A\n# 2 => 3: B\n# 3 => 4: C\n# 4 => 5: D\n# 5 => 6: E\n\n# \u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u304c\u5168\u4f53\u3092\u652f\u914d\u3059\u308b\uff01\n# \u6700\u521d\u304b\u3089\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u306e\u901f\u5ea6\u3067\u79fb\u52d5\u3059\u308b\u3068\u3057\u3066OK\nans = -(-N // min(A, B, C, D, E)) + 4\nprint(ans)", "n=int(input())\nfrom math import ceil\na,b,c,d,e=[int(input()) for i in range(5)]\nprint(max( ceil(n/a),ceil(n/b),ceil(n/c),ceil(n/d),ceil(n/e), )+4)", "N=int(input())\nli=[0,0,0,0,0]\nfor i in range(5):\n    li[i]=int(input())\n\nif N%min(li)==0:\n    a=N//min(li)-1\nelse:\n    a=N//min(li)\nans=5+a\n\nprint(ans)\n", "import sys\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nsys.setrecursionlimit(10 ** 9)\nINF = 1 << 60\nMOD = 1000000007\n\n\ndef main():\n    N, *A = list(map(int, read().split()))\n\n    ans = 0\n    for i in range(5):\n        res = (N + A[i] - 1) // A[i] + 4\n        if ans < res:\n            ans = res\n\n    print(ans)\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math\nn=int(input())\na=[]\nfor i in range(5):\n    a.append(int(input()))\n\nprint(4+math.ceil(n/min(a)))", "n = int(input())\n\nx = float('inf')\nfor _ in range(5):\n    a = int(input())\n    x = min(x,a)\n\nprint((n-1)//x + 5)", "'''\nCreated on 2020/08/30\n\n@author: harurun\n'''\ndef main():\n  import sys\n  pin=sys.stdin.readline\n  pout=sys.stdout.write\n  perr=sys.stderr.write\n  \n  N=int(pin())\n  A=int(pin())\n  B=int(pin())\n  C=int(pin())\n  D=int(pin())\n  E=int(pin())\n  \n  t=min(A,B,C,D,E)\n  if N%t==0:\n    print(N//t+4)\n  else:\n    print(N//t+5)\n  return \nmain()", "n=int(input())\nt=[int(input()) for i in range(5)]\nk=0\nfor i in range(5):\n    k=max(k,(n+t[i]-1)//t[i])\nprint(k+4)", "import sys\nimport math\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    N = I()\n    L = [I() for i in range(5)]\n    print(math.ceil(N / min(L) + 4))\n\ndef __starting_point():\n    main()\n__starting_point()", "n=int(input())\na=int(input())\nb=int(input())\nc=int(input())\nd=int(input())\ne=int(input())\n\n\nprint(5+(n-1)//min([a,b,c,d,e]))", "n = int(input())\nl = [int(input()) for i in range(5)]\n\nmi = min(l)\n\nprint((n+mi-1)//mi+4)", "n = int(input())\nx = min([int(input()) for _ in range(5)])\n\na, b = divmod(n, x)\nif b == 0:\n    print((5+(a-1)))\nelse:\n    print((5+a))\n", "from math import *\n\nn = int(input())\na = [int(input()) for _ in range(5)]\n\nans = ceil(n / a[0])\nmin = 0\nfor i in range(1, 5):\n  if a[i] >= a[min]:\n    ans += 1\n  else:\n    ans = ceil(n / a[i]) + i\n    min = i\n\nprint(ans)", "from math import *\n\nN=int(input())\nabcde=[int(input()) for _ in range(5)]\nprint((ceil(N/min(abcde))+4))\n", "import math\nn = int(input())\na = [int(input()) for i in range(5)]\nprint(math.ceil(n/min(a))+4)", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sat Sep 12 23:38:36 2020\n\n@author: liang\n\"\"\"\n\nN = int(input())\ncost = [int(input()) for _ in range(5)]\ncost.sort()\nif N%cost[0] == 0:\n    ans = 4 + N//cost[0] \nelse:\n    ans = 4 + N//cost[0] + 1\nprint(ans)", "a = [int(input()) for i in range(6)]\nmi=min(a)\nif(a[0]==mi):print(5)\nelse: \n    if(a[0]%mi==0): print(5+a[0]//mi-1)\n    else: print(5+a[0]//mi)", "n = int(input())\nl = [int(input()) for i in range(5)]\nprint((((n+min(l)-1)//min(l)) + 4))\n", "import math\na = int(input())\nb = []\nfor i in range(5):\n  b.append(int(input()))\nc = min(b)\nd = math.ceil(a/c)\nprint((d+4))\n  \n", "import math\nmembers = 0\nmin_value = 10**16\nfor i in range(6):\n    if i == 0:\n        members = int(input())\n    else:\n        current = int(input())\n        if current < min_value:\n            min_value = current\ncounter = math.ceil(members / min_value)\ncounter += 4\nprint(counter)\n", "# author:  Taichicchi\n# created: 28.09.2020 00:14:38\n\nimport sys\nfrom math import ceil\nn = int(input())\nm = 10 ** 18\nfor i in range(5):\n    m = min(m, int(input()))\n\nprint((ceil(n / m) + 4))\n", "n, *a = list(map(int, open(0).read().split()))\nb = min(a)\nprint((4 + (n + b - 1) // b))\n", "n=int(input())\na=int(input())\nb=int(input())\nc=int(input())\nd=int(input())\ne=int(input())\nans=5+(n-1)//(min(a,b,c,d,e))\nprint(ans)", "from math import ceil\nn = int(input())\nabcde = [int(input()) for _ in range(5)]\nprint(ceil(n/min(abcde))+4)", "f=lambda:int(input())\nN=f()\nD=[0]*5\nfor i in range(5):\n    D[i]=f()\n\nm=min(D)\ng=-(-(N-m)//m)\n\nprint(5+g)", "n=int(input())\na=[int(input()) for i in range(5)]\nif n%min(a)==0:\n  print(4+n//min(a))\nelse:\n  print(5+n//min(a))", "import math\nN = int(input().rstrip())\nA = int(input().rstrip())\nB = int(input().rstrip())\nC = int(input().rstrip())\nD = int(input().rstrip())\nE = int(input().rstrip())\nprint(math.ceil(N/min(A,B,C,D,E))+4)", "n = int(input())\ntime = [int(input()) for _ in range(5)]\ncount = 0\nif all([i >= n for i in time]):\n    print((5))\nelse:\n    smallest = min(time)\n    smallest_index = time.index(smallest)\n    count += n // smallest\n    if n % smallest != 0:\n        count += 1\n    print((count + 4)) \n", "from math import ceil\nN = int(input())\nA = [0] * 5\nfor i in range(5):\n\tA[i] = int(input())\nans = ceil(N / min(A)) + 4\nprint(ans)", "n=int(input())\nA = []\nfor i in range(5):\n  A.append(int(input()))\n\nminA = min(A)\n\nimport math\nprint(4+math.ceil(n/minA))", "import math\n\nN = int(input())\nV = [int(input()) for _ in range(5)]\n\nlatest = min(V)\nans = math.ceil(N/latest) + 4\nprint(ans)\n", "import math\nN = int(input())\nA = [int(input()) for i in range(5)]\nprint(math.ceil(N/min(A))+4)", "import math\nN = int(input())\nL = [int(input()) for i in range(5)]\nprint(math.ceil(N/min(L))+4)", "n = int(input())\ngates = [int(input()) for _ in range(5)]\nbn = min(gates)\n\nprint((int((n + bn - 1) / bn) + 4))\n", "import math\n\nN=int(input())\nA=[int(input()) for _ in range(5)]\nprint((math.ceil(N/min(A))+4))\n", "N = int(input())\nhum = [int(input()) for _ in range(5)]\nprint((N + min(hum) - 1) // min(hum) + 4)", "n = int(input())\nl = [int(input()) for i in range(5)]\n\nif n % min(l) == 0:\n    print(n // min(l) + 4)\nelse:\n    print(n // min(l) + 5)", "def main():\n    n = int(input())\n    data = [int(input()) for i in range(5)]\n    quo, rem = divmod(n, min(data))\n    quo = 5 + quo\n    if rem:\n        print(quo)\n    else:\n        print(quo - 1)\n\nmain()", "n = int(input())\na = [int(input()) for _ in range(5)]\nminimum = min(a)\nprint((n + minimum - 1) // minimum + 4)", "import math\nn = int(input())\nnums = [int(input()) for _ in range(5)]\nmin_n = math.ceil(n/min(nums))\nprint(4 + min_n)", "N = int(input())\nA = int(input())\nB = int(input())\nC = int(input())\nD = int(input())\nE = int(input())\nfrom math import ceil\na = ceil(N/A)\nF = [A,B,C,D,E]\nfor i in range(1,5):\n    if F[i-1] <= F[i]:\n        a += 1\n    else:\n        b = ceil(N/F[i])\n        a = max(a+1,b+i)\nprint(a)", "def main():\n    n = int(input())\n    data = [int(input()) for i in range(5)]\n    quo, rem = divmod(n, min(data))\n    print(4 + quo + bool(rem))\n\n\nmain()", "N = int(input())\nT = []\nfor _ in range(5):\n  T.append(int(input()))\n\nprint(((N + min(T) - 1) // min(T) + 4))\n", "n = int(input())\nx = [int(input()) for _ in range(5)]\ncap = min(x)\nans = (n+cap-1) // cap + 4\nprint(ans)\n", "n = int(input())\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\n    \naa = -(-n//a)\nbb = -(-n//b)\ncc = -(-n//c)\ndd = -(-n//d)\nee = -(-n//e)\n\nprint(max(aa,bb,cc,dd,ee)+4)", "from math import ceil\nn = int(input())\na = [int(input()) for i in range(5)]\nprint(ceil(n/min(a))-1+5)", "\"\"\"\npeople_num=int(input(''))\ntime_sum=0\nnum_trans=[]\n\nfor i in range(5):\n    num_trans.append(int(input('')))\n\nlocation=[[people_num,0,0,0,0,0]]\n\nwhile location[0][5]<people_num:\n    location_old=location.pop(0)\n    print(location_old)\n    location_new=[0,0,0,0,0,location_old[5]]\n    print(\"step0\")\n    for i in range(5):\n        if location_old[i]>num_trans[i]:\n            location_new[i+1]+=num_trans[i]\n            location_new[i]+=location_old[i]-num_trans[i]\n        else:\n            location_new[i+1]+=location_old[i]\n    time_sum+=1\n    location.append(location_new)\n    print(\"step2\")\nprint(str(time_sum))\n\n\u2191\u5931\u6557version\n\"\"\"\n\n\"\"\"\n\u89e3\u8aac\n\n\u6700\u3082\u901a\u308a\u306b\u304f\u3044\u3001\u3064\u307e\u308a\u5bb9\u91cf\u304c\u6700\u3082\u5c0f\u3055\u3044\u4ea4\u901a\u6a5f\u95a2\u3092\u8003\u3048\u307e\u3059\u3002\u76f4\u611f\u7684\u306b\u306f\u3001\u6700\u77ed\u6642\u9593\u3067\u79fb\u52d5\u3059\u308b\u5834\n\u5408\u3067\u3082\u30011 \u5206\u3067\u305f\u3069\u308a\u7740\u3051\u308b\u306e\u306f \ud835\udc4b \u4eba (\u4ea4\u901a\u6a5f\u95a2\u306e\u5bb9\u91cf\u306e\u6700\u5c0f\u3092 \ud835\udc4b \u3068\u3059\u308b) \u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u300c1\n\u79d2\u306b 15 L \u306e\u30da\u30fc\u30b9\u3067\u6c34\u3092\u9001\u308c\u308b\u30dd\u30f3\u30d7\u3068\u30011 \u79d2\u306b 12 L \u306e\u30da\u30fc\u30b9\u3067\u6c34\u3092\u9001\u308c\u308b\u30dd\u30f3\u30d7\u3092\u3064\u306a\u3052\u305f\u3068\u304d\u306b\u3001\n1 \u79d2\u306b\u9001\u308c\u308b\u6c34\u306e\u91cf\u306f\u5c0f\u3055\u3044\u65b9\u3092\u53d6\u3063\u3066 12 L\u300d \u306b\u306a\u308b\u306e\u3068\u540c\u3058\u539f\u7406\u3067\u3059\u3002\n\u3064\u307e\u308a\u3001\u5148\u307b\u3069\u306e\u8caa\u6b32\u7684\u306a\u65b9\u6cd5\u3067\u306f\u306a\u304f\u3066\u30011 \u5206\u306b \ud835\udc4b \u4eba\u305a\u3064 1 \u3064\u5148\u306b\u9032\u3081\u3066\u3084\u3063\u3066\u3082\u3001\u76f4\u611f\u7684\u306b\u306f\n\u304b\u304b\u308b\u6642\u9593\u306f\u5909\u308f\u3089\u306a\u3055\u305d\u3046\u3067\u3059\u3002\u307e\u305f\u3001\u79fb\u52d5\u6642\u9593\u306f \u300c(\ud835\udc41 \u00f7 \ud835\udc4b \u3092\u5207\u308a\u4e0a\u3052\u305f\u5024) + 4 \u5206\u300d \u3068\u3001\u7c21\u5358\u306b\n\u8a08\u7b97\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\"\"\"\nimport math\n\npeople_num=int(input(''))\nnum_trans=[]\n\nfor i in range(5):\n    num_trans.append(int(input('')))\n\nprint(math.ceil(people_num/min(num_trans)+4))", "n = int(input())\ncapa = [int(input()) for _ in range(5)]\n\nmin_capa = min(capa)\nif min_capa>=n:\n    print(5)\n\nelse:\n    if n%min_capa == 0:\n        print(5+(n//min_capa)-1)\n    else:\n        print(5+(n//min_capa))", "n = int(input())\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\n\nminp = min(a, min(b, min(c, min(d, e))))\nif n % minp == 0:\n    print((4 + n//minp))\nelse :\n    print((4 + n//minp + 1))\n", "import math\n\nn = int(input())\nabc = [int(input()) for i in range(5)]\n\nans = 4 + math.ceil(n/min(abc))\nprint(ans)", "N = int(input())\nA = [int(input()) for i in range(5)] #A[i]:amount of people able to be carried at once from i to i+1\nB = [0] * 6 #B[i]:amount of people at i now \ncnt = 0\n\n#max people able to be transported in m minutes\nP = [0] * 9\nB[0] = 10**15\nfor m in range(9):\n    for i in range(5,0,-1):\n        B[i] += min(A[i-1],B[i-1])\n        B[i-1] -= min(A[i-1],B[i-1])\n        \n    P[m] = B[5]\n    cnt += 1\n#print(P)\nx = N // P[-1]\ny = N % P[-1]\nif y == 0:\n    print((5*x+4))\n    return\nfor j in range(7,2,-1):\n    if P[j]<y:\n        time = 5 * x + j + 2\n        print(time)\n        return\n        \n", "n, a, b, c, d, e = [int(input()) for _ in range(6)]\nminVal = min(a, b, c, d, e)\nif n // minVal == n / minVal:\n    ans = n // minVal + 4\nelse:\n    ans = (n // minVal + 1) + 4\nprint(ans)", "import math\nn = int(input())\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\nprint(math.ceil(n/min(a,b,c,d,e))+4)", "import math\nimport numpy as np\nN,*T = list(map(int,open(0).read().split()))\n\nX = np.array(T).min()\n\nprint((4+math.ceil(N/float(X))))\n", "N = int(input())\nmove = []\n\nfor _ in range(5):\n    move.append(int(input()))\n\nmin_value = min(move)\ngroup_count = -(-N // min_value)\n\n# \u6700\u5f8c\u306e\u30b0\u30eb\u30fc\u30d7\u304c\u51fa\u767a\u3059\u308b\u307e\u3067\u306e\u5024\u306fgroup_count - 1\nprint((group_count - 1 + 5))\n", "import math\nN = int(input())\nX = [int(input()), int(input()), int(input()), int(input()), int(input())]\n\nprint((math.ceil(N/min(X)) + 4))\n", "import sys\nimport math\n\nn = int(input())\n\na = [int(input()) for i in range(5)]\n\nprint((math.ceil(n/min(a))+4))\n", "n=int(input())\na=[]\n#r=0\nimport math\na.append(math.ceil(n/int(input())))\na.append(math.ceil(n/int(input())))\na.append(math.ceil(n/int(input())))\na.append(math.ceil(n/int(input())))\na.append(math.ceil(n/int(input())))\n\nprint(max(a)+5-1)", "import math\nn = int(input())\na = [int(input()) for i in range(5)]\n\nprint(math.ceil(n/min(a))+4)", "N = int(input())\nA = [int(input()) for _ in range(5)]\n \n# \u4e00\u756a\u8f38\u9001\u91cf\u304c\u5c0f\u3055\u3044\u7d4c\u8def\u3067\u8a70\u307e\u308b\n# \u4e00\u756a\u8f38\u9001\u91cf\u304c\u5c0f\u3055\u3044\u7d4c\u8def\u3092\u4e00\u756a\u6700\u521d\u306b\u901a\u904e\u3059\u308b\u3068\u8003\u3048\u308b\nans = -(-N // min(A)) + 4\nprint(ans)", "#!/usr/bin/env python3\n\n#import\nimport math\n#import numpy as np\nN = int(input())\nA = [int(input()) for _ in range(5)]\n\na = min(A)\n\nprint((math.ceil(N/a) + 4))\n", "import math\n\nn = int(input())\ncapa = [int(input()) for _ in range(5)]\n\nprint(4 + math.ceil(n / min(capa)))", "from math import ceil\n\n\nn,a,b,c,d,e = [int(input()) for i in range(6)]\nprint((ceil(n/min(a,b,c,d,e))+4))\n", "N=int(input())\nA=[int(input()) for _ in range(5)]\nprint(((N-1)//min(A)+1+4))\n", "N=int(input())\n\ncapa=[int(input()) for _ in range(5)]\nfor i in range(5):\n\tif capa[i]==min(capa):\n\t\ttransmin=i\n\n#print(N//capa[transmin],transmin)\n\t\t\t\nif capa[transmin]>=N:\n\tprint((5))\nelse:\n\tif N%capa[transmin]==0:\n\t\tprint((transmin+N//capa[transmin]+4-transmin))\n\telse:\n\t\tprint((transmin+N//capa[transmin]+1+4-transmin))\n\n", "import math\nN = int(input())\nlsT = []\nfor i in range(5):\n    lsT.append(int(input()))\nprint(4+math.ceil(N/min(lsT)))", "N, *capas = list(map(int, open(0).read().split()))\nmin_capa = min(capas)\nprint(((N + min_capa - 1) // min_capa + 4))\n", "N, A, B, C, D, E = [int(input()) for _ in range(6)]\n \n# 1 => 2: A\n# 2 => 3: B\n# 3 => 4: C\n# 4 => 5: D\n# 5 => 6: E\n \nans = -(-N // min(A, B, C, D, E)) + 4\nprint(ans)", "import math\nn = int(input())\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\nans = math.ceil(n / min(a, b, c, d, e)) + 4\nprint(ans)"]