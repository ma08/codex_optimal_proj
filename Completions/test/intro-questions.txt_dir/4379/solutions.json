["from collections import *\ninput()\na = list(map(int, input().split()))\nm = defaultdict(int)\nfor x in reversed(a): m[x] = m[x + 1] + 1\nv = max(list(m.keys()), key=m.get)\nseq = []\nfor i, x in enumerate(a):\n    if v == x:\n        seq.append(i + 1)\n        v += 1\nprint(len(seq))\nprint(*seq)\n", "n= int(input());\na= list(map(int, input().split()));\n#\u0421\u043b\u043e\u0432\u0430\u0440\u044c: \u043f\u0430\u0440\u0430 \u0447\u0438\u0441\u043b\u043e - \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u043b\u0438\u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438, \u043e\u043a\u0430\u043d\u0447\u0438\u0432\u0430\u044e\u0449\u0430\u044f\u0441\u044f \u0438\u043c.\nd= dict();\nfor x in a:\n    d[x]=d.get(x-1, 0)+1;\nstart=0;\nfinish=0;\nresult=0;\nfor key in d.keys():\n    if d[key]>result:\n        result=d[key];\n        finish=key;\n        start=key-d[key]+1;\nprint(result);\ncurr=start;\nfor i, x in enumerate(a):\n    if curr==x:\n        print(i+1, end=' ');\n        curr+=1;\n    \n", "n=int(input())\na=list(map(int,input().split()))\nh={}\nfor i in a:\n    h[i-1]=0\n\ntb=0\nend=-1\nfor i in a:\n    h[i]=h[i-1]+1\n    if tb<h[i]:\n        tb=h[i]\n        end=i\narr=[]\nstart=end-tb+1\nfor i in range(n):\n    if a[i]==start:\n        arr.append(i+1)\n        start+=1\n\nprint(tb)\nprint(*arr)\n", "n = int(input())\ns = list(map(int,input().split()))\nrl = {}\nbest_range = range(0)\nfor x in s:\n    run = rl[x] = rl.get(x-1, 0) + 1\n    r = range(x-run+1, x+1)\n    if len(r) > len(best_range):\n        best_range = r\nres = list(best_range)\nsize = len(res)\noutput = []\npointer = 0\nfor i,c in enumerate(s):\n    if res[pointer] == c:\n        output.append(str(i+1))\n        pointer += 1\n    \n    if pointer >= size:break\nprint (size)\nprint (' '.join(output))", "n = int(input())\na = input().split()\nfor i, x in enumerate(a):\n    a[i] = int(x)\n\nd = [float('inf')]*(n + 1)\nd[0] = 0\nlength = 0\nvalue = 0\ns = dict()\nfor i in range(0, n):\n    if a[i] - 1 in s:\n        if a[i] is s:\n            s[a[i]] = max(s[a[i]], s[a[i - 1]] + 1)\n        else:\n            s[a[i]] = s[a[i] - 1] + 1\n    else:\n        s[a[i]] = 1\n    if s[a[i]] > length:\n         length = s[a[i]]\n         value = a[i]  \nans = []\nvalue0 = value - length + 1\nfor i, x in enumerate(a):\n    if x == value0:\n        ans.append(i + 1)\n        value0 = value0 + 1\n        if value0 > value:\n            break \n        \nprint(length)\nprint(' '.join(str(i) for i in ans))\n\n    \n\n", "from collections import defaultdict\n\nn = int(input())\nA = list(map(int, input().split()))\nlast = defaultdict(int)\nD = {0: (0, 0)}\nbest = (0, 0)\nfor i, a in enumerate(A, start=1):\n    last[a] = i\n    last_a1 = last[a - 1]\n    best_a1, _ = D[last_a1]\n    D[i] = (1 + best_a1, last_a1)\n    best = max(best, (1 + best_a1, i))\n\nprint(best[0])\nrsseq = []\ni = best[1]\nwhile i != 0:\n    rsseq.append(i)\n    i = D[i][1]\nprint(' '.join(map(str, reversed(rsseq))))\n", "n = int(input())\na = list(map(int, input().split()))\nd = dict()\nopt = []\nm = -1\nfor i in range(n):\n    t = a[i]\n    p = t - 1\n    if p in d:\n        if (t not in d) or ((p - d[p]) >= (t - d[t])):\n            d[t] = d[p]\n            #d.pop(p)\n            k = t - d[t]\n            if k > m:\n                m = k\n                opt = d[t]\n    else:\n        if t not in d:\n            d[t] = t\n            if m == -1:\n                opt = t\n                m = 0\nprint(m+1)\nr = []\nfor i in range(n):\n    if a[i] == opt:\n        r += [i+1]\n        opt += 1\nprint(*r)", "N = int(input())\nD = {}\nL = list(map(int,input().split()))[::-1]\nfor i in L:\n\tD[i] = max(D.get(i,0),D.get(i+1,0)+1)\nM = max([(i[1],-i[0]) for i in D.items()])\nL.reverse()\nprint(M[0])\nM = -M[1]\nfor i in range(N):\n\tif L[i]==M:\n\t\tprint(i+1,end=' ')\n\t\tM += 1", "n = int(input())\na = [int(s) for s in input().split()]\nlens = {}\nmaxlen = 1\nmaxlast = a[0]\nfor i in range(n):\n    lens[a[i]] = lens.get(a[i]-1, 0) + 1\n    if lens[a[i]] > maxlen:\n        maxlen = lens[a[i]]\n        maxlast = a[i]\n# print(lens)\n# print(maxlast, maxlen)\nprint(maxlen)\nsubs = []\nsi = maxlast - maxlen + 1\nfor i in range(n):\n    if a[i] == si:\n        subs.append(i+1)\n        si += 1\nprint(*subs, sep=' ')", "n=int(input())\nd=dict()\nm=0\nval=0\na=list(map(int,input().split()))\ns=set()\naps=s.add\nfor i in a:\n    d[i]=d.get(i-1,0)+1\n    if d[i]>m:\n        m=d[i]\n        val=int(i)\n\nans=[]\nap=ans.append\nfor i in range(n-1,-1,-1):\n    if a[i]==val:\n        val-=1\n        ap(i+1)\nprint(m)\nprint(*ans[::-1])", "n= int(input());\na= list(map(int, input().split()));\nd= dict();\nfor x in a:\n    d[x]=d.get(x-1, 0)+1;\nstart=0;\nfinish=0;\nresult=0;\nfor key in d.keys():\n    if d[key]>result:\n        result=d[key];\n        finish=key;\n        start=key-d[key]+1;\nprint(result);\ncurr=start;\nfor i, x in enumerate(a):\n    if curr==x:\n        print(i+1, end=' ');\n        curr+=1;", "n=int(input())\narr=list(map(int,input().split()))\narr.reverse()\nd={}\nfor i in range(len(arr)):\n    if arr[i]+1 in d.keys():\n        d[arr[i]]=d[arr[i]+1]+1 \n    else:\n        d[arr[i]]=1 \nmaxx=0\nnumber=0\nfor i in d.keys():\n    if d[i]>maxx:\n        maxx=d[i]\n        number=i \narr.reverse()\ncurr=number\nprint(maxx)\nfor i in range(n):\n    if arr[i]==curr:\n        print(i+1,end=\" \")\n        curr+=1\n", "from collections import *\ninput()\na = list(map(int, input().split()))\nm = defaultdict(int)\nfor x in reversed(a): m[x] = m[x + 1] + 1\nv = max(m.keys(), key=m.get)\nseq = []\nfor i, x in enumerate(a):\n    if v == x:\n        seq.append(i + 1)\n        v += 1\nprint(len(seq))\nprint(*seq)", "n = int(input())\na = list(map(int, input().split()))\n\nd = {}\n\nfor ai in a:\n  d[ai] = d.get(ai - 1, 0) + 1\n\nmaxRange = 0\nendVal = 0\nfor key in d.keys():\n  if (d[key] > maxRange):\n    maxRange = d[key]\n    endVal = key\n\nstartVal = endVal - maxRange + 1\nprint(maxRange)\nfor i, val in enumerate(a):\n  if (val == startVal):\n    print(i+1, end= ' ')\n    startVal += 1\n", "n = int(input())\narr = list(map(int, input().split()))\narr.reverse()\ndic = {}\n\nfor i in range(n):\n\tdic[arr[i]] = dic[arr[i] + 1] + 1 if arr[i] + 1 in dic.keys() else 1\nmx = 0\nnum = 0\n\nfor i in dic.keys():\n\tif dic[i] > mx:\n\t\tmx = dic[i]\n\t\tnum = i \nprint(mx)\narr.reverse()\nfor i in range(n):\n\tif arr[i] == num:\n\t\tprint(i+1,end= ' ')\n\t\tnum += 1", "n=int(input())\na=list(map(int ,input().split() ) )\nd={}\nmaxn=0\nmax_ind=0\n\nfor ai in a:\n\td[ai]=d.get(ai-1,0)+1\n\nfor key in d.keys():\n\tif(d[key] >maxn):\n\t  maxn=d[key]\n\t  max_ind=key\n\nstart= max_ind-maxn+1\nprint(maxn)\ni=0\nfor ai in a:\n\ti+=1\n\tif(ai==start):\n                 print(i,end=' ')\n                 start+=1\n                 \n\t", "n = int(input())\nT = input().split(' ')\nfor i in range(n):\n    T[i] = int(T[i])\nD = {}\nfor i in range(n):\n    D[T[i]] = 0\nfor i in range(n):\n    if T[i]-1 not in D:\n        D[T[i]] = 1\n    else:\n        D[T[i]] = D[T[i]-1] + 1\nm = -1\nj = -1\nfor i in D:\n    if D[i] > m:\n        m = D[i]\n        j = i\nL = []\nfor i in range(n-1, -1, -1):\n    if T[i] == j:\n        L.append(i)\n        j -= 1\nprint(m)\nfor i in range(m-1):\n    print(L[m-1-i]+1, end=' ')\nprint(L[0]+1)\n", "n = int(input())\nG = list(map(int,input().split()))\nD = {}\nM = 0\nfor i in G:\n    if i-1 in D:\n        D[i] = D[i-1] + 1\n    else:\n        D[i] = 1\n    if D[i]>M:\n        M = D[i]\n        Mi = i\n#print(M,Mi)\nR = []\nA = Mi\nfor i in range(len(G)-1,-1,-1):\n    if G[i] == A:\n        R.append(i+1)\n        A-=1\nprint(M)\nprint(*R[::-1])", "input()\na = list(map(int, input().split()))\n\nb = {i: 0 for i in set(a)}\n\nans = 0\nans_ind = 0\nfor i in range(len(a)):\n    if a[i] - 1 in b.keys():\n        b[a[i]] = b[a[i] - 1] + 1\n    else:\n        b[a[i]] = 1\n    if (b[a[i]] > ans):\n        ans = b[a[i]]\n        ans_ind = i\nprint(ans)\ns = \"\"\naans = []\naans.append(ans_ind + 1)\nx = a[ans_ind]\nfor i in range(ans - 1):\n    while (a[ans_ind] != x - 1):\n        ans_ind -= 1\n    x = a[ans_ind]\n    aans.append(ans_ind + 1)\nfor i in aans[::-1]:\n    print(i, end=' ')", "from collections import Counter\n\n\ndef read_nums():\n    return [int(x) for x in input().split()]\n\n\ndef main():\n    n, = read_nums()\n    nums = read_nums()\n    dp = Counter()\n    for i in range(n):\n        dp[nums[i]] = dp[nums[i] - 1] + 1\n\n    indexes = {}\n    for i in range(n):\n        indexes[nums[i]] = i\n\n    last_num = max(list(dp.items()), key=lambda x: x[1])[0]\n\n    result = []\n    for i in range(n - 1, -1, -1):\n        if nums[i] == last_num:\n            result.append(i)\n            last_num -= 1\n\n    result.reverse()\n    print(len(result))\n    print(' '.join([str(x + 1) for x in result]))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\nG = list(map(int,input().split()))\nD = {}\nM = 0\nfor i in G:\n    if i-1 in D:\n        D[i] = D[i-1] + 1\n    else:\n        D[i] = 1\n    if D[i]>M:\n        M = D[i]\n        Mi = i\n#print(M,Mi)\nR = []\nA = Mi\nfor i in range(len(G)-1,-1,-1):\n    if G[i] == A:\n        R.append(i+1)\n        A-=1\nprint(M)\nprint(*R[::-1])", "from collections import *\ninput()\na = list(map(int, input().split()))\nm = defaultdict(int)\nfor x in reversed(a): m[x] = m[x + 1] + 1\nv = max(list(m.keys()), key=m.get)\nseq = []\nfor i, x in enumerate(a):\n    if v == x:\n        seq.append(i + 1)\n        v += 1\nprint(len(seq))\nprint(*seq)\n", "n = int(input())\na = [int(x) for x in input().split()]\nb = [-1 for _ in range(n)]\n\ndp = {}\nbest = -1\nbest2 = -1\n\nfor i, x in enumerate(a):\n    p, q = dp.get(x, (1, i))\n    r, t = dp.get(x - 1, (0, 0))\n\n    if r + 1 > p:\n        p, q = r + 1, i\n    else:\n        t = i\n\n    dp[x] = (p, q)\n    b[i] = t\n\n    if best < 0 or dp[best][0] < p:\n        best = x\n        best2 = i\n\nans = []\nm = dp[best][0]\n\nfor _ in range(m):\n    ans.append(best2)\n    best2 = b[best2]\n\nans.reverse()\n\nprint(len(ans))\nprint(' '.join([str(x + 1) for x in ans]))\n"]