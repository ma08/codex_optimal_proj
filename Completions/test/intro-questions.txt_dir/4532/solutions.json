["t = int(input())\nfor _ in range(t):\n    n, k = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    \n    d = dict()\n    d[0] = 0\n    for v in l:\n        vv = (k - v) % k\n        if vv:\n            if vv not in d:\n                d[vv] = vv + 1\n            else:\n                d[vv] += k\n    print(max(d.values()))\n\n", "t = int(input())\nfor _ in range(t):\n\tn, k = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tb = [(k-a[i]%k)%k for i in range(n)]\n\tmx = {}\n\tmx[0] = -1\n\tfor x in b:\n\t\tif x == 0:\n\t\t\tcontinue\n\t\tif x not in mx:\n\t\t\tmx[x] = x\n\t\telse:\n\t\t\tmx[x] += k\n\n\tprint(max(mx.values())+1)", "import sys\ninput = sys.stdin.readline\nfrom collections import Counter\n\nt=int(input())\nfor tests in range(t):\n    n,k=list(map(int,input().split()))\n    A=list(map(int,input().split()))\n\n    B=[(k-a)%k for a in A]\n    C=Counter(B)\n\n    MAX=1\n    IND=-1\n\n    for c in C:\n        if c==0:\n            continue\n        if MAX<C[c]:\n            MAX=C[c]\n            IND=c\n        elif MAX==C[c] and IND<c:\n            IND=c\n\n    #print(MAX,IND)\n    print(IND+1+(MAX-1)*k)\n\n    \n    \n", "import math\nt = int(input())\nfor _ in range(t):\n        n, k = [int(i) for i in input().split()]\n        a = [int(i) for i in input().split()]\n        ma = -1\n        d = {}\n        for i in a:\n                if i%k == 0:\n                        continue\n                r = i%k\n                r = k - r\n                if r not in d:\n                        d[r] = 0\n                d[r] += 1\n                ma = max(ma, r + ((d[r]-1)*k))\n        print(ma + 1)\n", "t=int(input())\nfor you in range(t):\n    l=input().split()\n    n=int(l[0])\n    k=int(l[1])\n    hashi=dict()\n    l=input().split()\n    li=[int(i) for i in l]\n    maxa=[]\n    for i in li:\n        if(i%k):\n            z=k-(i%k)\n            if(z in hashi):\n                hashi[z]+=1\n            else:\n                hashi[z]=1\n    for i in hashi:\n        maxa.append((hashi[i]-1)*k+i)\n    if(maxa==[]):\n        print(0)\n        continue\n    print(max(maxa)+1)\n", "t = int(input())\nfrom collections import Counter\n\nfor case in range(t):\n    n, k = list(map(int, input().split()))\n    a = [int(x) for x in input().split()]\n    w = Counter(x % k for x in a)\n    v = 0\n    for x, freq in list(w.items()):\n        if x == 0: continue\n        if freq == 0: continue\n        \n        r = (-x) % k\n        v = max(v, r + (freq-1)*k+1)\n\n    print(v)\n", "from collections import deque\nimport sys\ndef inp():\n    return sys.stdin.readline().strip()\nfor _ in range(int(inp())):\n    n,k=list(map(int,inp().split()))\n    a=list(map(int,inp().split()))\n    d={}\n    f=0\n    mx=-1\n    for i in a:\n        if i%k==0:\n            continue\n        if i%k not in d:\n            d[i%k]=0\n        d[i%k]+=1\n        if f<d[i%k]:\n            f=d[i%k]\n            mx=i%k \n        elif f==d[i%k]:\n            mx=min(mx,i%k)\n    if mx==-1:\n        print(0)\n        continue\n    print((f-1)*k+(k-mx)+1)\n", "for nt in range(int(input())):\n\tn,k = list(map(int,input().split()))\n\tnew = list(map(int,input().split()))\n\ta = []\n\tfor i in range(n):\n\t\tif new[i]%k!=0:\n\t\t\ta.append(new[i])\n\ta.sort()\n\tn = len(a)\n\tif n==0:\n\t\tprint(0)\n\t\tcontinue\n\td = {}\n\tmaxx = 0\n\tfor i in range(n):\n\t\tdiff = k - (a[i]%k)\n\t\tif diff not in d:\n\t\t\tmaxx = max(maxx,diff)\n\t\t\td[diff] = 1\n\t\telse:\n\t\t\tmaxx = max(maxx,d[diff]*k+diff)\n\t\t\td[diff] += 1\n\tprint(maxx+1)\n", "import collections\nt = int(input())\nfor _ in range(t):\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    x = 0\n\n    D = [k - a[i] % k for i in range(n) if a[i] % k]\n    D.sort(reverse=True)\n    ans = 0\n    if len(D):\n        C = collections.Counter(D).most_common()\n        # print(C)\n        ans = (C[0][1]-1)*k + C[0][0] + 1\n\n    print(ans)\n", "def solve():\n    n, k = list(map(int, input().split()))\n    a = [int(x) for x in input().split()]\n    used = {}\n    ans = 0\n    for i in a:\n        if i % k != 0:\n            if (i % k) in used:\n                ans = max(ans, k * (used[i % k] + 1) - (i % k))\n                used[i % k] += 1\n            else:\n                ans = max(ans, k - (i % k))\n                used[i % k] = 1\n    print(ans if ans == 0 else ans + 1)\n\n\n[solve() for i in range(int(input()))]\n", "for test_i in range(int(input())):\n    n, k = map(int, input().split())\n    arr = list(map(lambda el: (k - int(el) % k) % k, input().split()))\n    rems = {}\n    for el in arr:\n        if el:\n            if el in rems:\n                rems[el] += 1\n            else:\n                rems[el] = 1\n    if rems:\n        max_rem_item = max([(item[1], item[0]) for item in rems.items()])\n        print(k * (max_rem_item[0] - 1) + max_rem_item[1] + 1)\n    else:\n        print(0)", "def solve():\n    n, k = list(map(int, input().split()))\n    a = [int(x) for x in input().split()]\n    used = {}\n    ans = 0\n    for i in a:\n        if i % k != 0:\n            if (i % k) in used:\n                ans = max(ans, k * (used[i % k] + 1) - (i % k) + 1)\n                used[i % k] += 1\n            else:\n                ans = max(ans, k - (i % k) + 1)\n                used[i % k] = 1\n    print(ans)\n\n\n[solve() for i in range(int(input()))]\n", "import collections\n\nt=int(input())\nfor _ in range(t):\n    n,k=map(int,input().split())\n    arr=list(map(int,input().split()))\n    for i in range(n):\n        arr[i]%=k\n    cnt=collections.Counter(arr)\n    ans=0\n    for key in cnt.keys():\n        if key==0:\n            continue\n        tmp=(k-key)%k+k*(cnt[key]-1)\n        ans=max(ans,tmp+1)\n    print(ans)", "import sys, math,os\nfrom io import BytesIO, IOBase\n#data = BytesIO(os.read(0,os.fstat(0).st_size)).readline\n# from bisect import bisect_left as bl, bisect_right as br, insort\n# from heapq import heapify, heappush, heappop\nfrom collections import defaultdict as dd, deque, Counter\n# from itertools import permutations,combinations\n# from decimal import Decimal\ndef data(): return sys.stdin.readline().strip()\ndef mdata(): return list(map(int, data().split()))\ndef outl(var): sys.stdout.write(' '.join(map(str, var)) + '\\n')\ndef out(var): sys.stdout.write(str(var) + '\\n')\n#sys.setrecursionlimit(100000 + 1)\nINF = 10**9\nmod = 998244353\n\nfor t in range(int(data())):\n    n,k=mdata()\n    a=mdata()\n    d=dd(int)\n    for i in range(n):\n        if a[i]%k==0:\n            continue\n        d[k-a[i]%k]+=1\n    m=0\n    for i in d:\n        m=max(m,i+k*(d[i]-1))\n    if m==0:\n        out(0)\n    else:\n        out(m+1)"]