["def main():\n\tN, D = [int(n) for n in input().split(\" \")]\n\tcnt = 0\n\tfor i in range(N):\n\t\tX, Y = [int(x) for x in input().split(\" \")]\n\t\tif X ** 2 + Y ** 2 <= D ** 2:\n\t\t\tcnt += 1\n\tprint(cnt)\n\nmain()\n", "N,D = map(int,input().split())\n\nxy = [list(map(int,input().split())) for i in range(N)]\n\ncnt = 0\n\nfor x, y in xy:\n    if (x**2 + y**2)**(1/2) <= D:\n        cnt += 1\n        \nprint(cnt)", "n, d = map(int, input().split())\nx = [list(map(int,input().split())) for i in range(n)]\n\nans = 0\nfor i,j in x:\n    if (i**2)+(j**2) <= d**2:\n        ans += 1\n\nprint(ans)", "N, D = list(map(int, input().split()))\nXY = [list(map(int, input().split())) for _ in range(N)]\n\nresult = [1 if (((x ** 2 + y ** 2) ** 0.5) <= D) else 0 for x, y in XY]\nprint((sum(result)))\n", "n,d = [int(s) for s in input().split()]\nl = [[int(s) for s in input().split()] for j in range(n)]\nl1 = [i[0]*i[0] + i[1]*i[1] for i in l]\nl1.sort()\nans = -1\nfor i in range(n):\n    if l1[i]>d*d:\n        ans = i\n        break\nelse:\n    ans = n\nprint(ans)", "from math import sqrt\n\nn, d = map(int, input().split())\ncnt = 0\n\nfor _ in range(n):\n    p, q = map(int, input().split())\n    if sqrt(p*p+q*q) <= d:\n        cnt += 1\n\nprint(cnt)", "n, d = map(int, input().split())\n\nres = 0\nfor i in range(n):\n    x, y = map(int, input().split())\n    if x*x+y*y <= d*d:\n        res += 1\nprint(res)", "from math import *\nn,d=map(int,input().split())\nc=0\nfor i in range(n):\n    p,q=map(int,input().split())\n    if d>=(p**2+q**2)**0.5:\n        c+=1\n    \nprint(c)", "n,d = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n    x1,y1 = list(map(int,input().split()))\n    if(d*d >= x1*x1+y1*y1):\n        ans += 1\nprint(ans)\n", "import math\nn, d = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    if d >= math.sqrt(x**2+y**2):\n        ans += 1\nprint(ans)\n", "import math\nn, d = map(int, input().split())\ns = 0\nfor i in range(n):\n    x, y = map(int, input().split())\n    r = x**2 + y**2\n    if r<=d**2:\n        s += 1\n\nprint(s)", "n,d = list(map(int,input().split()))\ncount = 0\nfor i in range(n):\n    x,y = list(map(int,input().split()))\n    if x ** 2 + y ** 2 <= d **2:\n        count += 1\nprint(count)\n", "N, D = list(map(int, input().split()))\n\nresult = 0\n\nfor _ in range(N):\n    X, Y = list(map(int, input().split()))\n    if X * X + Y * Y <= D * D:\n        result += 1\nprint(result)\n", "N,D=map(int,input().split())\nX=[input()for i in range(N)]\n\ndef ans174(N:int, D:int, X:list):\n    count=0\n    import math\n    for i in range(N):\n        X_list=list(map(int,X[i].split()))\n        if math.sqrt(X_list[0]**2+X_list[1]**2)<=D:\n            count+=1\n    return count\n\nprint(ans174(N,D,X))", "n,d=list(map(int,input().split()))\nans=0\nfor i in range(n):\n    x,y=list(map(int,input().split()))\n    if((x**2+y**2)**0.5<=d):\n        ans+=1\nprint(ans)\n", "N,D = (int(x) for x in input().split())\nxy = [map(int, input().split()) for _ in range(N)]\nnum = 0\nfor x,y in xy:\n    if( x**2 + y**2 <= D**2):\n        num += 1\nprint(num)", "from typing import List\n\n\ndef answer(n: int, d: int, xy: List[List[int]]) -> int:\n    count = 0\n    dd = d ** 2\n    for x, y in xy:\n        if x ** 2 + y ** 2 <= dd:\n            count += 1\n\n    return count\n\n\ndef main():\n    n, d = list(map(int, input().split()))\n    xy = [list(map(int, input().split())) for _ in range(n)]\n    print((answer(n, d, xy)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math\nn, d = map(int, input().split())\ncnt = 0\nfor i in range(n):\n    x, y = map(int, input().split())\n    if d >= math.sqrt(x**2 + y**2):\n      cnt += 1\n    else:\n      pass\n    \nprint(cnt)", "import math\nN,D =map(int,input().split())\n\ncnt = 0\nfor i in range(N):\n    x,y=map(int,input().split())\n    ans =math.sqrt(x**2+y**2)\n    if ans <= D:\n        cnt += 1\nprint(cnt)", "N, D = map(int, input().split())\nX_list = []\nY_list = []\ncount = 0\n\nfor i in range(N):\n    X, Y = map(int, input().split())\n    X_list.append(X)\n    Y_list.append(Y)\n\nfor i in range(N):\n    if (X_list[i] ** 2) + (Y_list[i] ** 2) <= D ** 2:\n        count += 1\n        \nprint(count)", "N,D = map(int, input().split())\nXY = [list(map(int, input().split())) for _ in range(N)]\nD = D**2\nans = 0\nfor x,y in XY:\n    if x**2 + y**2 <= D:\n        ans += 1\nprint(ans)", "from math import sqrt,ceil\nn,d=map(int,input().split())\ncount=0\nfor i in range(n):\n    a,b=map(int,input().split())\n    if(int(ceil(sqrt(pow(a,2)+pow(b,2))))<=d):\n        count+=1\nprint(count)", "n,d = map(int,input().split())\ni = 1\na = 0\nwhile i <= n:\n  x,y = map(int,input().split())\n  i += 1\n  if x**2 + y**2 <= d**2:\n    a += 1\nprint(a)", "import math\n\nN, D = map(int, input().split())\nxy = [list(map(int, input().split())) for xy in range(N)]\n\ncount = 0\nfor i in range(N):\n  l = math.sqrt(xy[i][0]**2 + xy[i][1]**2)\n  if l <=D:\n    count += 1\n\nprint(count)", "n, dis = map(int,input().split())\nans = 0\nfor i in range(n):\n    a,b = map(int,input().split())\n    if (a**2 + b**2)**(1/2) <= dis:\n        ans += 1\n        \nprint(ans)", "import math\n\nn, d = input().split()\ncount = 0\ndn = int(d)\n\nfor i in range(int(n)):\n    x = list(map(int,input().split()))\n    if dn >= math.sqrt(x[0] ** 2 + x[1] ** 2):\n        count += 1\n\nprint(count)", "import math\na,b = map(int,input().split())\nx = \"\"\ny = 0\nfor i in range(a):\n    x = input().split()\n    if math.sqrt(int(x[0]) ** 2 + int(x[1]) ** 2) <= b:\n        y = y + 1\nprint(y)", "N,D = list(map(int,input().split()))\n\nans=0\n\nfor i in range(N):\n    X,Y = list(map(int,input().split()))\n    dis = (X*X+Y*Y) ** 0.5\n    if dis <= D:\n        ans += 1\nprint(ans)\n", "import math\nn, d = map(int, input().split())\n\nans = 0\nfor i in range(n):\n    x, y = map(int, input().split())\n    s = math.sqrt(x ** 2 + y ** 2)\n    if s <= d:\n        ans += 1\n\nprint(ans) ", "import math\n\nn, d = map(int, input().split())\nx = [list(map(int,input().split())) for i in range(n)]\n\nans = 0\nfor i,j in x:\n    if math.sqrt((i*i)+(j*j)) <= d:\n        ans += 1\n\nprint(ans)", "n,d = map(int, input().split() )\nxy = [ ]\nfor _ in range(n):\n  s = [ int(i) for i in  input().split() ]\n  xy.append(s)\nans = 0\nfor s in xy:\n  if s[0]**2+s[1]**2<= d**2:\n    ans += 1\nprint(ans)", "N, D = map(int,input().split())\nX = [input()for i in range(N)]\n\nimport math\ncount = 0\nfor i in range(N):\n    X_list = list(map(int,X[i].split()))\n    if D >= math.sqrt(X_list[0]**2 + X_list[1]**2):\n        count += 1\n\nprint(count)", "n, d = list(map(int, input().split()))\ncount = 0\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    if d**2 >= (x**2 + y**2):\n        count += 1\nprint(count)\n", "n, d = map(int, input().split())\ncnt = 0\nfor i in range(n):\n    x, y = map(int, input().split())\n    if (x ** 2 + y ** 2) ** 0.5 <= d:\n        cnt += 1\n\nprint(cnt)", "N,D = map(int,input().split())\ncount = 0\nimport math\nfor _ in range(N):\n  X,Y = map(int,input().split())\n  if D>=math.sqrt(X**2+Y**2):count+=1\nprint(count)", "N, D = map(int,input().split())\n\np = 0\n\nfor i in range(1,N+1):\n    X, Y = map(int,input().split())\n    import math\n    c = math.sqrt(X**2 + Y**2)\n    if c <= D:\n        p += 1\n\nprint(p)", "N,D = map(int,input().split())\ncount = 0\n\nfor _ in range(N):\n  X,Y = map(int,input().split())\n  if (X**2 + Y**2)**(1/2) <= D:\n    count += 1\n\nprint(count)", "import math\nn,d=map(int, input().split())\ncount=0\nfor i in range(n):\n  x,y=map(int, input().split())\n  if math.sqrt(x**2+y**2)<=d:\n    count+=1\nprint(count)", "N, D = map(int, input().split())\nans = 0\nfor i in range(N):\n  x, y = list(map(int, input().split()))\n  if x**2 + y**2 <= D**2:\n    ans += 1\nprint(ans)", "import sys\nfrom collections import deque, defaultdict, Counter\nfrom itertools import accumulate, product, permutations, combinations\nfrom operator import itemgetter\nfrom bisect import bisect_left, bisect_right\nfrom heapq import heappop, heappush\nfrom math import ceil, floor, sqrt, gcd, inf\nfrom copy import deepcopy\nimport numpy as np\nimport scipy as sp\n\nINF = inf\nMOD = 1000000007\n\nn, d = [int(i) for i in input().split()]\nA = [[int(i) for i in input().split()]for j in range(n)]    # n\u306f\u884c\u6570\n\ntmp = 0\nres = 0\n\nfor i in range(n):\n    x, y = A[i]\n    if x ** 2 + y ** 2 <= d ** 2:\n        res += 1\n\nprint(res)\n", "n,D=list(map(int,input().split()))\ncount=0\nfor i in range(n):\n  a,b=list(map(int,input().split()))\n  d=(a**2+b**2)**(1/2)\n  if d<=D:\n    count+=1\nprint(count)\n", "import math\nN, D = map(int, input().split())\n\nans = 0\nfor i in range(N):\n  X, Y = map(int, input().split())\n  dis = math.sqrt(X ** 2 + Y ** 2)\n  if dis <= D:\n    ans += 1\n\nprint(ans)", "N, D = map(int, input().split())\nans = 0\nfor i in range(N):\n    X, Y = map(int, input().split())\n    if X**2 + Y**2 <= D**2:\n        ans += 1\n    else:\n        continue\nprint(ans)", "n, d = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    if x * x + y * y <= d * d:\n        ans += 1\nprint(ans)\n", "import math\nn,d=map(int,input().split())\ncount=0\nfor i  in range(n):\n    x,y=map(int,input().split())\n    a=math.sqrt(x*x+y*y)\n    if(a<=d):\n        count+=1\n    \nprint(count)", "n,d=map(int,input().split())\nprint(sum([x*x+y*y<=d*d for x,y in [map(int,input().split()) for i in range(n)]]))", "N, D = map(int, input().split())\nX = [0 for i in range(N)]\nY = [0 for i in range(N)]\nfor i in range(N):\n  X[i], Y[i] = map(int, input().split())\ncnt = 0\n\nfor i in range(N):\n  if D**2 >= (X[i]**2 + Y[i]**2):\n    cnt += 1\n\nprint(cnt)", "N,D = list(map(int, input().split()))\nans = 0\n\nfor i in range(N):\n    X, Y = list(map(int,input().split()))\n    if X**2 + Y**2 <= D**2:\n        ans += 1\n    else:\n        continue\n\nprint(ans)\n\n", "import math\nN, D = map(int,input().split())\nX = [0 for _ in range(N)]\nY = [0 for _ in range(N)]\nDistance = []\nans = 0\nDistance = 0\nfor i in range(N):\n    X[i], Y[i] = map(int, input().split())\n    Distance = math.sqrt((X[i])**2 + (Y[i])**2)\n    if Distance <= D:\n        ans += 1\nprint(ans)", "N, D = list(map(int, input().split()))\ncnt = 0\n\nfor i in range(N):\n    x, y = list(map(int, input().split()))\n    if x**2 + y**2 <= D**2:\n        cnt += 1\n    else:\n        pass\n\nprint(cnt)\n\n", "N,D = map(int,input().split())\ncount = 0\n\nfor _ in range(N):\n  X,Y = map(int,input().split())\n  if (X**2 + Y**2)**(1/2) <= D:\n    count += 1\n\nprint(count)", "N, D = map(int, input().split())\nzahyo = [list(map(int, input().split())) for i in range(N)]\n\ndef distance(a, b):\n    return (a ** 2 + b ** 2) ** 0.5\n\nkazu = 0\nfor i in range(N):\n    genzai = zahyo[i]\n    if distance(genzai[0], genzai[1]) <= D:\n        kazu += 1\n\nprint(kazu)", "n,d=map(int, input().split())\np=[list(map(int, input().split())) for i in range(n)]\ncount=0\nfor i in range(n):\n  if p[i][0]**2+p[i][1]**2<=d**2:\n    count+=1\nprint(count)", "# coding: utf-8\n# Your code here!\nimport math\n\nn,d = input().split()\nn = int(n)\nd = int(d)\n\ncount = 0\nfor i in range(n):\n    x,y = input().split()\n    x = int(x)\n    y = int(y)\n    rout = math.sqrt(x**2 + y**2)\n    if rout <= d:\n        count += 1\n    \nprint(count)", "N,D= list(map(int, input().split()))\nL=[0]*N\ncnt = 0\nans = 0\n\nfor i in range(N):\n  x,y = list(map(int, input().split()))\n  L[i]= (x**2+y**2)**0.5\n\n#print(L)\n\nfor i in range(N):\n  if L[i] <= D:\n    cnt += 1\n  else:\n    cnt = cnt\n\nans = cnt\nprint(ans)\n", "num, max_num = list(map(int, input().split()))\nx = []\ny = []\ncount = 0\n\nfor i in range(num):\n  x1,y1 = list(map(int, input().split()))\n  x.append(x1)\n  y.append(y1)\n\nfor i in range(len(x)):\n  temp = (x[i]**2 +y[i]**2)**(1/2)\n  if temp <= max_num:\n    count += 1\n\nprint(count)\n\n", "N, D = map(int, input().split())\nans = 0\n\nfor  i in range(N):\n    x, y = map(int, input().split())\n    d = (x**2 + y**2) ** 0.5\n    if d <= D:\n        ans += 1\n\nprint(ans)", "import math\n\nn, d = map(int,input().split())\n\nxy = [map(int, input().split()) for _ in range(n)]\nx, y = [list(i) for i in zip(*xy)]\n\ncount = 0\n\nfor i in range(n):\n    if d >= math.sqrt(x[i]**2 + y[i]**2):\n        count += 1\nprint(count)", "n,d = list(map(int, input(\"\").split()))\no=0\nfor i in range(n):\n    x,y=list(map(int, input(\"\").split()))\n    if x**2+y**2<=d**2:\n        o+=1\nprint(o)", "##B - Distance\nN,D = list(map(int,input().split()))\nans = 0\nfor i in range(N):\n    X,Y = list(map(int,input().split()))\n    if X**2+Y**2 <= D**2:\n        ans += 1\nprint(ans)\n", "import math\nn, d = list(map(int, input().strip().split()))\ncords = []\nwhile n:\n  cords.append(list(map(int, input().strip().split())))\n  n -= 1\nans = 0\nfor c in cords:\n  ans += 1 if math.sqrt((c[0]**2) + (c[1]**2)) <= d else 0\nprint(ans)\n", "from math import sqrt\nn, d = list(map(int, input().split()))\nx_y = [[int(i) for i in input().split()] for i in range(n)]\n\n\ncnt = 0\nfor x, y in x_y:\n    route = sqrt(x ** 2 + y ** 2)\n    if route <= d:\n        cnt += 1\n\nprint(cnt)\n", "\"\"\"\nsqrt(p**2 + q**2) <= D\n\"\"\"\n\n# \u5165\u529b\nN, D = map(int, input().split())\nX = list()\nY = list()\nfor i in range(N):\n    x, y = map(int, input().split())\n    X.append(x)\n    Y.append(y)\n\n# \u8ddd\u96e2\ncount = 0\nfor i in range(N):\n    distance = X[i]**2 + Y[i]**2\n    if distance <= D*D:\n        count += 1\n\n# \u7d50\u679c\nprint(count)    ", "import math\nn, d = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    dist = math.sqrt(x**2+y**2)\n\n    if dist <= d:\n        cnt += 1\n\nprint(cnt)\n", "n, d = map(int, input().split( ))\ncount = 0\nfor _ in range(n):\n    x, y = map(int, input().split( ))\n    if (x**2 + y**2)**0.5 <= d:\n        count +=1\nprint(count)", "def test():\n    ans3=0\n    input_ex=input()\n    input_ex1=input_ex.split()\n    n=int(input_ex1[0])\n    d=int(input_ex1[1])\n    for i in range(0,n):\n        input_exa=input()\n        input_ex2=input_exa.split()\n        a=int(input_ex2[0])\n        b=int(input_ex2[1])\n        ans=(a**2+b**2)\n        ans_2=ans**0.5\n        if ans_2>d:\n            pass\n        else:\n            ans3+=1\n    print(ans3)\n        \ntest()", "import math\n\nn,m = map(int,input().split())\nli = []\nfor i in range(n):\n    li.append(list(map(int,input().split())))\n\nsum = 0\nfor i in range(n):\n    n = math.sqrt(li[i][0]**2 + li[i][1]**2)\n    if n <= m:\n        sum += 1\n\nprint(sum)", "N, D = map(int, input().split())\ncnt = 0\nfor i in range(N):\n  X, Y = map(int, input().split())\n  if X**2 + Y**2 <= D**2:\n    cnt += 1\nprint(cnt)", "import math\n\nn, d = list(map(int, input().split()))\n\na = 0\nans = 0\n\nn_l = []\nfor _ in range(n):\n    tmp = list(map(int, input().split()))\n    n_l.append(tmp)\n\nfor i in n_l:\n    for j in i:\n        a += j ** 2\n    b = math.sqrt(a)\n    if b <= d:\n        ans += 1\n    a = 0\n\nprint(ans)\n", "import math\nN, D = map(int, input().split())\ncount = 0\nfor i in range(N):\n    x, y = map(int, input().split())\n    if math.sqrt(x ** 2 + y ** 2) <= D:\n        count += 1\nprint(count)", "import math\nn,d=[int(num) for num in input().split()]\nc=0\nfor i in range(n):\n    x,y=[int(num) for num in input().split()]\n    if math.sqrt(x**2+y**2)<=d:\n        c=c+1\nprint(c)\n", "import math\nN, D = list(map(int, input().split()))\ncnt = 0\nfor i in range(N):\n\tX, Y = list(map(int, input().split()))\n\tif D >= math.sqrt(X ** 2 + Y ** 2):\n\t\tcnt += 1\nprint(cnt)\n", "n,d = map(int,input().split())\nans = 0\n\nfor i in range(n):\n  x,y = map(int,input().split())\n  if d >= (x**2 + y**2)**0.5:\n    ans += 1\n    \nprint(ans)", "import math\n\nN,D=list(map(int,input().split()))\nXY=[list(map(int,input().split())) for _ in range(N)]\ncount=0\n\nfor x,y in XY:\n  if math.sqrt(x**2+y**2)<=D:\n    count+=1\nprint(count)\n", "import sys\nimport math\n\nindex = 0\ncount = 0\nfor input in sys.stdin:\n    formattedInput = input.replace(\"\\n\", \"\").split(\" \")\n    if index == 0:\n        N = int(formattedInput[0])\n        D = int(formattedInput[1])\n        index += 1\n        continue\n    root = math.sqrt(int(formattedInput[0]) ** 2 + int(formattedInput[1]) ** 2)\n    if D >= root:\n        count += 1\n    index += 1\n\nprint(count)\n", "import math\n\nN, D = map(int, input().split())\ncnt_p = 0\nfor i in range(N):\n    X, Y = map(int, input().split())\n    Di = math.sqrt(X**2 + Y**2)\n    if Di <= D:\n        cnt_p += 1\nprint(cnt_p)", "def II(): return int(input())\ndef MI(): return map(int, input().split())\ndef LI(): return list(map(int, input().split()))\n\nans=0\nN,D=MI()\nD2=D*D\nfor i in range(N):\n  x,y=MI()\n  if x*x+y*y<=D2:\n    ans+=1\nprint(ans)", "import math\nN,D=(int(x) for x in input().split())\n# 2\u6b21\u5143\u914d\u5217\ngrid = []\nfor i in range(N):\n    array = list(map(int, input().strip().split()))\n    grid.append(array)\n\ncount=0\n\nfor i in range(0,N):\n\tif math.sqrt(grid[i][0]**2 + grid[i][1]**2) <= D :\n\t\tcount+=1\n\nprint(count)", "n, d = map(int,input().split())\na = 0\nfor i in range(0,n):\n    x, y =map(int,input().split())\n    if x**2 + y**2 <= d**2:\n            a += 1\nprint(a)", "n, d = list(map(int, input().split()))\nc = 0\nfor _ in range(n):\n  x, y = list(map(int, input().split()))\n  if (x ** 2 + y ** 2) ** 0.5 <= d:\n    c += 1\nprint(c)\n", "import numpy\ncount = 0\nN, D = map(int, input().split())\n\nfor i in range(N):\n    x = input().split()\n    y = numpy.sqrt(int(x[0]) ** 2 + int(x[1]) ** 2)\n    if float(D) >= y:\n        count+= 1\n\nprint(count)", "import math\n\nN, D = list(map(int, input().split()))\ncnt = 0\nfor i in range(N):\n    x, y = list(map(int, input().split()))\n    distance = math.sqrt(x*x + y*y)\n\n    if distance <= D:\n        cnt += 1\n\nprint(cnt)\n", "import math\nN,D = map(int,input().split())\ncount = 0\nfor i in range(N):\n    x,y = map(int,input().split())\n    ans = math.sqrt(x**2 + y**2)\n    if ans <= D:\n        count = count + 1\nprint(count)", "from math import sqrt as r\nN, D = map(int, input().split())\n\nans = 0\n\nfor i in range(N):\n    X, Y = map(int, input().split())\n    d = r(X**2 + Y**2)\n    if d <= D:\n        ans += 1\n\nprint(ans)", "import math\n\nn, d = list(map(int, input().split(' ')))\nresultCnt = 0\n\nfor i in range(n):\n  x, y = list(map(int, input().split(' ')))\n  dis = math.sqrt((x**2) + (y**2))\n  if dis <= d:\n    resultCnt += 1\n\nprint(resultCnt)\n", "N, D = map(int, input().split())\nXY = [list(map(int, input().split())) for _ in range(N)]\nprint(sum((x**2+y**2)**.5<=D for x, y in XY))", "def main():\n    \n    n, d = map(int, input().split())\n    cnt = 0\n    # xy = [<>,<>,<>... ] <>\u306fmapobj\n    xy = [map(int, input().split()) for i in range(n)]\n    # zip(*xy) = (x1, x2, s3, s4...), (y1, y2, y3, y4...)\n    x, y = [list(i) for i in zip(*xy)]\n        \n    for i in range(n):\n        if x[i]**2 + y[i]**2 <= d**2:\n            cnt += 1\n    print(cnt)\n    \n    \n    \n    \ndef __starting_point():\n    main()\n__starting_point()", "import math\nN = list(map(int,input().split()))\nxy = [map(int, input().split()) for _ in range(N[0])]\nX, Y = [list(i) for i in zip(*xy)]\ncnt = 0\nfor i in range(N[0]):\n  if( math.sqrt(X[i]**2 + Y[i]**2) <= N[1] ):\n    cnt = cnt +1\nprint(cnt)", "n, d = list(map(int, input().split()))\nxy = [list(map(int, input().split())) for _ in range(n)]\nx, y = [list(i) for i in zip(*xy)]\n\nd_2 = d**2\nans = 0\n\nfor i in range(n):\n    if d_2 >= x[i]**2 + y[i]**2:\n        ans += 1\n\nprint(ans)\n", "import math\n\nN, D = map(int, input().split())\nX = []\nY = []\nfor i in range(N):\n    x, y = map(int, input().split())\n    X.append(x)\n    Y.append(y)\nans = 0\nfor i in range(N):\n    distance = math.sqrt(X[i] ** 2 + Y[i] ** 2)\n    if distance <= D:\n        ans += 1\nprint(ans)", "N,D = list(map(int,input().split(' ')))\n\nans = 0\nfor i in range(N):\n    X,Y = list(map(int,input().split(' ')))\n    if X**2 + Y**2 <= D**2:\n        ans = ans + 1\n\nprint(ans)\n", "#!/usr/bin/env python3\nn, d = map(int, input().split())\nans = 0\nfor i in range(n):\n    x, y = map(int, input().split())\n    if d**2 >= x**2 + y**2:\n        ans += 1\nprint(ans)", "import math\n\nN, D = map(int, input().split())\nans = 0\n\nfor i in range(N):\n  x, y = map(int, input().split())\n  ans += 1 if math.sqrt(x**2 + y**2) <= D else 0\n\nprint(ans)", "def b174(n, d, xylist):\n\n    count = 0\n\n    for xy in xylist:\n        if (xy[0]**2 + xy[1]**2) ** 0.5 <= d:\n            count += 1\n\n    return count\n\ndef main():\n    n, d = map(int, input().split())\n    xylist = [list(map(int, input().split())) for _ in range(n)]\n    print(b174(n, d, xylist))\n\ndef __starting_point():\n    main()\n__starting_point()", "import math\n \ntemp = list(map(int,input().split()))\ncount = 0\n \nfor i in range(temp[0]):\n  l = list(map(int,input().split()))\n  if(math.sqrt(l[0]*l[0]+l[1]*l[1])<=temp[1]):\n    count += 1\nprint(count)", "#ABC174 B\n\nN,D = map(int,input().split())\nimport math\ncount = 0\n\nfor i in range(N):\n    X = list(map(int,input().split()))\n    S = math.sqrt(X[0]**2 + X[1]**2)\n    if S <= D:\n        count += 1\n\nprint(count)", "n, d = map(int, input().split())\nans = 0\nfor _ in range(n):\n    a, b = map(int, input().split())\n    if (a**2 + b**2)**0.5 <= d:\n        ans += 1\nprint(ans)", "import math\n\nN,D=map(int,input().split())\nanswer=0\n\nfor i in range(N):\n  X,Y=map(int,input().split())\n  distance=math.sqrt(X**2+Y**2)\n  if distance<=D:\n    answer+=1\nprint(answer)", "import math\ncount = 0\nn, d = list(map(int, input().split()))\nxy = [list(map(int, input().split())) for _ in range(n)]\nx, y = [list(i) for i in zip(*xy)]\nfor i in range(n):\n    if math.sqrt(x[i] ** 2 + y[i] ** 2) <= d:\n        count += 1\nprint(count)\n"]