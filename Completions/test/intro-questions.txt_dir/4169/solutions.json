["N,M=map(int, input().split())\nAB=sorted([list(map(int, input().split())) for _ in range(N)])\n\ncnt=0\ngokei=0\nfor ab in AB:\n\tif M-cnt>ab[1]:\n\t\tgokei+=ab[1]*ab[0]\n\t\tcnt+=ab[1]\n\telse:\n\t\tgokei+=(M-cnt)*ab[0]\n\t\tcnt+=M-cnt\n\t\n\tif cnt==M:\n\t\tprint(gokei)\n\t\treturn", "n, m = list(map(int, input().split()))\n\ns = [tuple(map(int, input().split())) for _ in range(n)]\ns.sort()\n\nans = 0\nfor a, b in s:\n    ans += min(a*b, a*m)\n    m -= b\n    if m <= 0:\n        break\n\nprint(ans)\n", "N, M = map(int, input().split())\nAB = [list(map(int, input().split())) for _ in range(N)]\n\nAB.sort(key=lambda x : x[0])\nans = 0\nfor AB in AB:\n    if M <= AB[1]:\n        ans += M * AB[0]\n        break\n    else:\n        ans += AB[0] * AB[1]\n        M -= AB[1]\nprint(ans)", "n,m = list(map(int,input().split()))\n\nC={}\nS1=[]\nfor i in range(n):\n    a,b = list(map(int,input().split()))\n    S1.append(a)\n    if a in C:\n        C[a]+=b\n    else:\n        C[a]=b\nS=list(set(S1))\nS.sort()\n\nans=0\nfor s in S:\n    # print(S,C,ans)\n    if m<C[s] :\n        ans+=m*s\n        break\n    else:\n        ans+=C[s]*s\n        m-=C[s]\n\nprint(ans)\n\n\n", "n, m = map(int, input().split())\nab = sorted([list(map(int, input().split())) for _ in range(n)])\n\nans, l = 0, m\nfor a, b in ab:\n    if b > l:\n        ans += l*a\n        break\n    ans += b*a\n    l -= b\nprint(ans)", "n,m = map(int,input().split())\nab = [list(map(int,input().split())) for _ in range(n)]\nab.sort()\nans = 0\ncnt = 0\ni = 0\nwhile cnt < m:\n    ans += ab[i][0]*ab[i][1]\n    cnt += ab[i][1]\n    i += 1\nprint(ans - (cnt - m)*ab[i-1][0])", "n,m=map(int,input().split())\ndic={}\ndoll=0\nAB=[list(map(int,input().split())) for _ in range(n)]\n\nAB.sort()\n\nfor k,v in AB:\n  if v<m:\n    doll+=k*v\n    m-=v\n  else:\n    doll+=k*m\n    break\nprint(doll)", "N,M = map(int,input().split())\nAB = [list(map(int,input().split())) for _ in range(N)]\nA = sorted(AB,key=lambda x:x[0])\nans = 0\n\nfor i in range(N):\n    buy = min(M,A[i][1])\n    ans += buy * A[i][0]\n    M -= buy\nprint(ans)", "def resolve():\n    N, M = map(int, input().split())\n    A = []\n    for _ in range(N):\n        a = list(map(int, input().split()))\n        A.append(a)\n    ans = 0\n    for i, j in sorted(A, key=lambda x: x[0]):\n        if j >= M:\n            ans += M * i\n            print(ans)\n            return\n        ans += i * j\n        M -= j\nresolve()", "\nN, M = map(int,input().split())\n\nl = []\nfor _ in range(N):\n    l.append(list(map(int,input().split())))\n\nsorted_l = sorted(l, key=lambda x:x[0])\n\nans = 0\ncount = 0\nflag = 0\nfor i in sorted_l:\n    if flag == 1:\n        break\n    for j in range(i[1]):\n        if count >= M:\n            flag = 1\n            break\n        ans += i[0]\n        count += 1\nprint(ans)", "n, m = map(int, input().split())\nab = [list(map(int, input().split())) for _ in range(n)]\nab.sort(key = lambda x:x[0])\nans = 0\nfor a, b in ab:\n    ans += a * min(b, m)\n    m -= b\n    if m <= 0:\n        break\nprint(ans)", "n,m = list(map(int,input().split()))\ns = []\nfor i in range(n):\n    s.append(list(map(int,input().split())))\ns.sort()\nans = 0\nfor i in s:\n    if i[1]<m:\n        ans += i[0]*i[1]\n        m -= i[1]\n    else:\n        ans += i[0]*m\n        break\nprint(ans)\n", "N, M = map(int, input().split())\nAB = []\n\nfor _ in range(N):\n  A, B = map(int, input().split())\n  AB.append((A, B))\n\nAB.sort()\n\ni = 0\nans = 0\n\nwhile M > 0:\n  A, B = AB[i]\n  if B <= M:\n    ans += A * B\n    M -= B\n  else:\n    ans += A * M\n    M = 0\n  i += 1\n\nprint(ans)", "N,M=list(map(int,input().split()))\nA=dict()\nans=0\nA=[list(map(int,input().split()))for i in range(N)]\nA.sort()\nfor i in range(N):\n    if M>A[i][1]:\n        M-=A[i][1]\n        ans+=A[i][0]*A[i][1]\n    else:\n        ans+=A[i][0]*M\n        break\nprint(ans)\n", "n,m=map(int,input().split())\ndic={}\ndoll=0\nAB=[list(map(int,input().split())) for _ in range(n)]\nAB.sort()\nfor k,v in AB:\n  if v<m:\n    doll+=k*v\n    m-=v\n  else:\n    doll+=k*m\n    print(doll)\n    return", "n,m = list(map(int,input().split()))\nab = [list(map(int,input().split())) for i in range(n)]\n\nab.sort()\nans = 0\nfor i in range(n):\n    if m >= ab[i][1] :\n        ans += ab[i][0]*ab[i][1]\n        m = m -ab[i][1]\n    elif 0 < m < ab[i][1] :\n        ans += m*ab[i][0]\n        break\nprint(ans)\n", "import sys\ninput = sys.stdin.readline # for speed up\n#sys.setrecursionlimit(10**9)\n\nn,m=list(map(int,input().split()))\na=[\"\"]*n\nfor ii in range(n):\n  a[ii]=list(map(int,input().split()))\na.sort()\nr=0\nfor ii in range(n):\n  if a[ii][1]>=m:\n    r+=a[ii][0]*m\n    print(r)\n    return\n  else:\n    r+=a[ii][0]*a[ii][1]\n    m-=a[ii][1]\n", "n,m=map(int,input().split())\na=[]\ncnt=0\nfor i in range(n):\n    k,j=input().split()\n\n    a.append([int(k),int(j)])\na=sorted(a)\nfor i in range(n):\n    if a[i][1]>=m:\n        cnt+=a[i][0]*m\n        break\n    else:\n        cnt+=a[i][0]*a[i][1]\n        m-=a[i][1]\nprint(cnt)", "n,m = map(int,input().split())\nshop = [[int(i) for i in input().split()] for _ in range(n)]\n\nshop = list(sorted(shop, key=lambda x:x[0]))\n\ncount = 0\nmoney = 0\n\nfor x in shop:\n  count += x[1]\n  money += x[0] * x[1]\n  if count >= m:\n    excess = count - m\n    money -= x[0] * excess\n    break\n    \nprint(money)", "N,M = list(map(int,input().split()))\nprice = [[] for i in range(N)]\nfor i in range(N):\n    a,b = list(map(int,input().split()))\n    price[i] = [a,b]\nprice.sort()\n#print(price)\nm = 0\nmoney = 0\nfor i in range(N):\n    if m + price[i][1] < M:\n        money += price[i][0] * price[i][1]\n        m += price[i][1]\n    else:\n        money += price[i][0] * (M-m)\n        break\nprint(money)\n", "def mapt(fn, *args):\n    return tuple(map(fn, *args))\n\n\ndef Input():\n    return mapt(int, input().split(\" \"))\n\n\ndef main():\n    n, m = Input()\n    data = sorted([Input() for _ in range(n)])\n    amount = 0\n    for x, y in data:\n        get1 = min(y, m)\n        m = m - get1\n        amount += get1 * x\n        if m <= 0:\n            return amount\n\nprint(main())", "n, m = list(map(int, input().split()))\nstores = [list(map(int, input().split())) for _ in range(n)]\nsorted_sotres = sorted(stores, key=lambda x: x[0])\ntotal = 0\nans = 0\nfor cost, number in sorted_sotres:\n    if number > m:\n        ans += cost * m\n        break\n    elif number == m:\n        ans += cost * number\n        break\n    else:\n        ans += cost * number\n    m -= number\nprint(ans)\n", "N, M = map(int, input().split())\nAB = [tuple(map(int, input().split())) for _ in range(N)]\nAB.sort(key=lambda x: x[0])\n\nans = 0\nbought = 0\nfor a, b in AB:\n    m = min(M - bought, b)\n    bought += m\n    ans += a * m\nprint(ans)", "n, m = [int(x) for x in input().split()]\n\na = sorted([[int(x) for x in input().split()] for _ in range(n)], key=lambda x: x[0])\n\nresult = 0\nfor x in a:\n  cnt = min(m, x[1])\n  result += x[0] * cnt\n  m -= cnt\nprint(result)", "N, M = list(map(int,input().split()))\nAB = [list(map(int,input().split()))for _ in range(N)]\n\nAB.sort()\ncost = 0\ncnt = 0\ni = 0\nwhile(cnt<M):\n  a, b = AB[i]\n  if M-cnt<=b:\n    cost += a * (M-cnt)\n    cnt = M\n    break\n  cost += a * b\n  cnt += b\n  i += 1\nans = cost\nprint(ans)", "n, m = map(int, input().split())\nk = [list(map(int, input().split())) for _ in range(n)]\n\nsum = 0\nmr = 0\nks = sorted(k)\n\nfor i in range(n):\n    if ks[i][1] < (m-mr):\n        sum += ks[i][0] * ks[i][1]\n        mr += ks[i][1]\n\n    else:\n        sum += ks[i][0] * (m - mr)\n        break\n\nprint(sum)", "\nn,m = map(int,input().split())\ns = []\nans = 0\nfor i in range(n):\n    a,b = map(int,input().split())\n    s.append([a,b])\ns.sort()\nfor i in s:\n    if m<i[1]:\n        ans += m*i[0]\n        break\n    else:\n        ans += i[0]*i[1]\n        m -= i[1]\nprint(ans)", "N,M = map(int,input().split())\nX = sorted([list(map(int,input().split())) for n in range(N)])\nG = 0\nD = 0\n\nfor m in range(M):\n  if D+X[m][1]<M:\n    D+=X[m][1]\n    G+=X[m][0]*X[m][1]\n  else:\n    G+=X[m][0]*(M-D)\n    print(G)\n    return", "#a\u5024\u6bb5,b\u672c\u6570\n#n\u8ed2,m\u672c\nn,m = list(map(int, input().split()))\n\nab_list = [list(map(int, input().split())) for _ in range(n)]\n#print(ab_list)\nab_list.sort()\nans = 0\nnum = 0\nfor ab in ab_list:\n    ans += ab[0]*ab[1]\n    num += ab[1]\n    if num >= m:\n        i_stop=ab_list.index(ab)\n        break\ndiff_num = num - m\nans -= diff_num * ab_list[i_stop][0]\nprint(ans)", "n, m = list(map(int, input().split()))\nlis = []\nans = 0\n\nfor _ in range(n):\n  A, B = list(map(int, input().split()))\n  lis.append((A, B))\n\nlis.sort()\n\nfor x in lis:\n  a, b = x\n  if m >= b:\n    m -= b\n    ans = ans + (a*b)\n  else:\n    ans = ans + (a*m)\n    break\n  \nprint(ans)\n", "N, M = map(int, input().split())\nA = sorted([list(map(int, input().split())) for _ in range(N)])\n\nans = 0\nnum = 0\nfor i in range(N):\n  flag = False\n  val = A[i][0]\n  max_num = A[i][1]\n  for j in range(max_num):\n    ans += val\n    num += 1\n    if num == M:\n      flag = True\n      break\n  if flag: break\n    \nprint(ans)", "N, M = list(map(int, input().split()))\nAB = [tuple(map(int, input().split())) for _ in range(N)]\nAB.sort(key=lambda x: x[0])\n\nans = bought = 0\nfor a, b in AB:\n    m = min(M - bought, b)\n    bought += m\n    ans += a * m\nprint(ans)\n", "N, M = map(int, input().split())\nAB = [list(map(int, input().split())) for _ in range(N)]\nAB = sorted(AB, key=lambda x: x[0])\n\nans = 0\ncount = 0\nfor i in range(N):\n    a, b = AB[i]\n\n    if M - count <= b:\n        c = M - count\n        count += c\n        ans += a * c\n        break\n\n    count += b\n    ans += a * b\n\nprint(ans)", "n,m = map(int,input().split())\nlis = [list(map(int,input().split())) for i in range(n)]\nlis.sort()\ncnt = 0\nmon = 0\ni = 0\nif n >= 2:\n    while cnt < m:\n        if lis[i][1] + cnt < m:\n            cnt += lis[i][1]\n            mon += lis[i][0]*lis[i][1]\n            i += 1\n        else:\n            break\n    print(mon + (m-cnt) * lis[i][0])\nelse:\n    print(m*lis[0][0])", "a = list(map(int,input().split()))\nb = []\nans = 0\ncnt = a[1]\nfor i in range(a[0]):\n  c = list(map(int,input().split()))\n  b.append(c)\nb = sorted(b)\nfor i in b:\n  if cnt == 0:\n    break\n  ans += i[0]*min(cnt,i[1])\n  cnt -= min(cnt,i[1])\nprint(ans)\n    \n  \n  \n\n", "a,b=map(int,input().split())\nc=[list(map(int,input().split())) for i in range(a)]\n\nc=sorted(c,key=lambda x:x[0])\nans=0\nfor i in range(a):\n    if b==0:\n        break\n    elif b>=c[i][1]:\n        b-=c[i][1]\n        ans+=c[i][1]*c[i][0]\n    else:\n        ans+=b*c[i][0]\n        break\nprint(ans)", "N, M = map(int, input().split())\nd = dict()\nshop = set()\nans = 0\nfor i in range(N):\n  A, B = map(int, input().split())\n  if A in d:\n    d[A] += B\n  else:\n    d[A] = B\n  shop.add(A)\nshop = list(shop)\nshop.sort()\nfor i in shop:\n  if d[i] >= M:\n    ans += (i * M)\n    break\n  else:\n    ans += (i * d[i])\n    M -= d[i]\nprint(ans)", "n,m = map(int,input().split())\nab = [list(map(int,input().split())) for _ in range(n)]\n\nab = sorted(ab)\n\nmoney = 0\nfor i in ab:\n    money += i[0]*min(m,i[1])\n    m -= min(m,i[1])\n    \n    if m<=0:\n        break\n\nprint(money)", "N, M = map(int, input().split())\nAB = [0] * N\nfor i in range(N):\n    AB[i] = list(map(int, input().split()))\n\nAB = sorted(AB, key = lambda x: x[0])\nans = 0\n\nfor i in range(N):\n    if M > AB[i][1]:\n        M -= AB[i][1]\n        ans += AB[i][0] * AB[i][1]\n    else:\n        ans += AB[i][0] * M\n        M = 0\n    if M == 0:\n        break\n\nprint(ans)", "n,m=map(int,input().split())\nl=[]\n\nfor i in range(n):\n  a,b=map(int,input().split())\n  l.append([a,b])\n\nl.sort()\nc=0\nfor a,b in l:\n  c+=min(b,m)*a\n  m=max(m-b,0)\n\nprint(c)", "li=[]\nN,M=list(map(int,input().split()))\n\nfor i in range(N):\n    a,b=list(map(int,input().split()))\n    li.append([a,b])\n\nli.sort()\n\ng=0\ns=0\n\nfor i in range(N):\n    if li[i][1]+s<M:\n        s+=li[i][1]\n        g+=li[i][1]*li[i][0]\n    else:\n        g+=(M-s)*li[i][0]\n        print(g)\n        return\n", "N,M = map(int,input().split())\nAB = []\nmoney = 0\ndrinks = 0\n\nfor i in range(N):\n  A,B = map(int,input().split())\n  AB.append([A,B])\n\nAB.sort()\n\nfor i in range(N):\n  if 0 < M-drinks < AB[i][1]:\n    money += (M-drinks)*AB[i][0]\n    break\n  elif AB[i][1] <= M-drinks:\n    money += AB[i][1]*AB[i][0]\n    drinks += AB[i][1]\n  else:\n    break\n    \nprint(money)", "n,m = map(int,input().split())\ndic = {}\nfor i in range(n):\n    a,b = map(int,input().split())\n    dic.setdefault(a,0)\n    dic[a] += b\n#print(dic)\nnedan = sorted(dic)\n#print(nedan)\nans = 0\nfor yen in nedan:\n    if dic[yen] < m:\n        #print(yen,dic[yen],m)\n        ans += yen * dic[yen]\n        m -= dic[yen]\n    else:\n        #print(yen,dic[yen],m)\n        ans += yen * m\n        break\nprint(ans)", "N,M=map(int,input().split())\nList = []\nfor i in range (N):\n  List.append(list(map(int, input().split())))\nList.sort()\nres = 0\nnum = 0\ni = 0\nwhile num < M:\n  if List[i][1] != 0:\n    pass\n  else:\n    i +=1\n  num += 1\n  res += List[i][0]\n  List[i][1] += -1\nprint(res)", "n,m=map(int,input().split())\nab=[]\nfor i in range(n):\n  a,b=map(int,input().split())\n  ab.append([a,b])\nab.sort()\nans=0\nt=m\nfor i in range(n):\n  if ab[i][1]<t:\n    ans+=ab[i][0]*ab[i][1]\n    t-=ab[i][1]\n  else:\n    ans+=ab[i][0]*t\n    print(ans)\n    return", "#\u5165\u529b:N,M(int:\u6574\u6570)\ndef input2():\n\treturn map(int,input().split())\n\n#\u5165\u529b:[n1,n2,...nk](int:\u6574\u6570\u914d\u5217)\ndef input_array():\n\treturn list(map(int,input().split()))\n  \n\nn,m=input2()\nAB=[input_array() for _ in range(n)]\n\nAB=sorted(AB,key=lambda x:x[0])\nans=0\n\nfor i in range(n):\n\ta= AB[i][0]\n\tb= AB[i][1]\n\tif b>m:\n\t\tans+=a*m\n\t\tbreak\n\telif b==m:\n\t\tans+=a*b\n\t\tbreak\n\telse:\n\t\tans+=a*b\n\tm-=b\nprint(ans)", "N,M = map(int,input().split())\nlsd = []\nfor i in range(N):\n    lsd.append(list(map(int,input().split())))\nlsd.sort(key=lambda x:x[0])\nans = 0\ni = 0\nwhile M != 0:\n    if M >= lsd[i][1]:\n        ans += lsd[i][0]*lsd[i][1]\n        M -= lsd[i][1]\n    else:\n        ans += lsd[i][0]*M\n        M = 0\n    i += 1\nprint(ans)", "N, M = list(map(int, input().split()))\nAB = [tuple(map(int, input().split())) for _ in range(N)]\nsAB = sorted(AB, key=lambda x: x[0])\n\nans = 0\ncnt = 0\nlast_cnt = 0\nfor a, b in sAB:\n    cnt += b\n    if cnt < M:\n        ans += a*b\n        last_cnt = cnt\n    else:\n        ans += a*(M-last_cnt)\n        break\n\nprint(ans)\n\n", "N,M = map(int,input().split())\nlist = []\nfor _ in range(N):\n  a,b = map(int,input().split())\n  list.append([a,b])\nlist.sort()\nans = 0\nfor a,b in list:\n  ans += min(b,M)*a\n  M = max(0,M-b)\nprint(ans)", "n,m=list(map(int,input().split()))\nab=[list(map(int,input().split())) for i in range(n)]\n\nab_sorted = sorted(ab, key=lambda x:(x[0], -x[1]))\n\nnum = 0\namount_of_money = 0\nfor i in range(n):\n  buy = min(ab_sorted[i][1], m-num)\n  num += buy\n  amount_of_money += ab_sorted[i][0] * buy\n    \n  if num >= m:\n    print(amount_of_money)\n    return\n", "n,m=map(int,input().split())\na=sorted([list(map(int,input().split()))for i in range(n)])\nc=0\nd=0\nfor i in range(n):\n    if c+a[i][1]<=m:\n        c+=a[i][1]\n        d+=a[i][0]*a[i][1]\n    else:\n        d+=(m-c)*a[i][0]\n        break\nprint(d)", "n, m= map(int, input().split())\ngot=0\nsell={}\nbuy=0\nfor i in range(n):\n  a,b=map(int,input().split())\n  if a not in sell:\n    sell[a]=0\n  sell[a]+=b\nsell=sorted(sell.items())\nif m<=sell[0][1]:\n  print(m*(sell[0][0]))\n  return\nfor lis in sell:\n  got+=lis[1]\n  if got>m:\n    buy+=(m-got+lis[1])*lis[0]\n    print(buy)\n    return\n  else:\n    buy+=(lis[0])*(lis[1])", "#C - Energy Drink Collector\nN,M = map(int,input().split())\nA_B = [tuple(map(int,input().split())) for _ in range(N)]\n\nA_B = sorted(A_B, key = lambda x:x[1],reverse = True)\nA_B = sorted(A_B, key = lambda x:x[0], reverse = False)\n\npay = 0\ndrink = M\nfor A, B in A_B:\n    if drink <= B:\n        pay += A*drink\n        break\n    else:\n        pay += A*B\n        drink -= B\nprint(pay)", "n, m = map(int, input().split())\nll = []\nfor i in range(n):\n    l = list(map(int, input().split()))\n    ll.append(l)\n\nll.sort()\n\nt = 0\ncst = 0\ni = 0\nwhile t < m:\n    t += ll[i][1]\n    cst += ll[i][0]*ll[i][1]\n    if t > m:\n        cst -= ll[i][0]*(t-m)\n    i += 1\nprint(cst)", "N, M = map(int, input().split())\nA, B = {}, []\nfor i in range(N):\n  a, b = map(int, input().split())\n  A[i] = a\n  B.append(b)\n\nA = sorted(A.items(), key = lambda x:x[1])\nans = 0\nnum = 0\nfor i in range(N):\n  flag = False\n  max_num = B[A[i][0]]\n  for j in range(max_num):\n    ans += A[i][1]\n    num += 1\n    if num == M:\n      flag = True\n      break\n  if flag: break\n    \nprint(ans)", "N, M = map(int, input().split())\n\n# \u5b89\u3044\u5e97\u304b\u3089\u9806\u306b\u8cb7\u3046\n# \u5b89\u3044\u9806\u306bsort => M\u672c\u306b\u9054\u3059\u308b\u307e\u3067\u524d\u304b\u3089\u9806\u306b\u8cb7\u3046\nA = sorted([list(map(int, input().split())) for _ in range(N)])\n\nnum = 0\nans = 0\nfor i in range(N):\n  flag = False\n  val = A[i][0]\n  max_num = A[i][1]\n  for j in range(max_num):\n    ans += val\n    num += 1\n    if num == M:\n      flag = True\n      break\n  if flag: break\n    \nprint(ans)", "n,m=map(int,input().split())\nl=[]\nfor i in range(n):\n    a,b=map(int,input().split())\n    l.append((a,b))\nl.sort(key=lambda x:x[0])\nans=0\ncount=0\nfor i in range(n):\n    k=min(m-count,l[i][1])\n    count+=k\n    ans+=k*l[i][0]\nprint(ans)", "N,M=map(int,input().split())\nA=[]\nfor i in range(N):\n    a,b=map(int,input().split())\n    A.append([a,b])\n    \nA.sort()\nS=0\nfor i,j in A:\n    if M-j>=0:\n        S+=i*j\n        M-=j\n    else:\n        S+=M*i\n        break\nprint(S)", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun Sep 13 02:42:27 2020\n\n@author: liang\n\"\"\"\n\nN, M = map(int, input().split())\ndrinks = list()\nfor i in range(N):\n  a, b = map(int,input().split())\n  drinks.append((a,b))\n\ndrinks.sort(key = lambda x: x[0])\n#print(drinks)\nans = 0\ni = 0\nwhile M > 0:\n    a, b = drinks[i]\n    i += 1\n    if M <= b:\n        ans += a*M\n        M = 0\n    else:\n        ans += a*b\n        M -= b\n    #print(ans,M)\nprint(ans)", "N, M =map(int, input().split())\nlist1 = []\ncost = 0\nfor i in range(N):\n  A, B = map(int, input().split())\n  list1.append((A, B))\nlist2 = sorted(list1, key= lambda x:x[0])\nfor i in range(N):\n  if M >= list2[i][1]:\n    M -= list2[i][1]\n    cost += list2[i][0] * list2[i][1]\n  else:\n    break\ncost += list2[i][0] * M\nprint(cost)", "n,m=map(int, input().split())\nalist=[list(map(int, input().split())) for l in range(n)]\nalist.sort(key=lambda x:x[0])\nans=0\ncnt=m\nfor i in range(n):\n  if alist[i][1]<cnt:\n    ans+=alist[i][0]*alist[i][1]\n    cnt-=alist[i][1]\n  else:\n    ans+=cnt*alist[i][0]\n    break\nprint(ans)", "n,m = map(int,input().split())\nL = [list(map(int,input().split())) for _ in range(n)]\nL = sorted(L, key=lambda x: x[0])\nlimit = m\nans = 0\nfor i in range(n):\n  if limit <= 0: break\n  ans += min(limit, L[i][1]) * L[i][0]\n  limit -= L[i][1]\nprint(ans)", "N,M = map(int,input().split())\ndrink = [list(map(int,input().split())) for _ in range(N)]\ndrink = sorted(drink)\nans = 0\nfor i in range(N):\n   for j in range(drink[i][1]):\n        ans += drink[i][0]\n        M -= 1\n        if M == 0:\n            print(ans)\n            return", "N,M=map(int,input().split())\nL=sorted([tuple(map(int,input().split())) for i in range(N)])\nans=0\nfor a,b in L:\n    if M>b:\n        ans+=a*b\n        M-=b\n    else:\n        ans+=a*M\n        break\nprint(ans)", "n,m = map(int, input().split(\" \"))\na = sorted(list(map(int, input().split(\" \"))) for i in range(n))\ntotal = 0\nfor i, j in a:\n  if j < m:\n    m -= j\n    total += i * j\n  else:\n    total += i * m\n    break\nprint(total)", "N, M = map(int, input().split())\nAB = []\nfor _ in range(N):\n    AB.append(list(map(int, input().split())))\n\nAB = sorted(AB)\ncnt = 0\nans = 0\nfor ab in AB:\n    if cnt+ab[1] <= M:\n        cnt += ab[1]\n        ans += ab[0]*ab[1]\n    else:\n        ans += (M-cnt)*ab[0]\n        cnt += M-cnt\n        break\n    \nprint(ans)", "n,m = map(int,input().split())\na = [list(map(int, input().split())) for _ in range(n)]\nans = 0\ncnt = 0\na = sorted(a, key=lambda x:x[0])\nfor i in range(n):\n    if cnt + a[i][1] <m:\n        ans += a[i][0]*a[i][1]\n        cnt +=a[i][1]\n    else:\n        ans += a[i][0]*(m-cnt)\n        break\nprint(ans)", "from operator import itemgetter\n\nn, m = map(int, input().split())\nab = [list(map(int, input().split())) for i in range(n)]\nab.sort()\n#print(ab)\ni = 0\nans = 0\nwhile m >0:\n  if ab[i][1]<=m:\n    m -= ab[i][1]\n    ans += ab[i][0]*ab[i][1]\n  else:\n    ans += ab[i][0]*m\n    m = 0\n  i+=1\nprint(ans)", "N,M=list(map(int,input().split()))\nxy = [list(map(int, input().split())) for _ in range(N)]\nxy.sort(key = lambda x:x[0])\nx,y = [list(i) for i in zip(*xy)]\nnokori=M\nans=0\nfor i in range(N):\n  ans+=x[i]*min(y[i],nokori)\n  nokori-=y[i]\n  if nokori<=0:\n    break\nprint(ans)\n\n", "import sys\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nsys.setrecursionlimit(10 ** 9)\nINF = 1 << 60\nMOD = 1000000007\n\n\ndef main():\n    N, M, *AB = list(map(int, read().split()))\n    X = [(a, b) for a, b in zip(*[iter(AB)] * 2)]\n\n    X.sort()\n\n    ans = 0\n    n = 0\n    for a, b in X:\n        if n + b >= M:\n            ans += (M - n) * a\n            break\n        else:\n            ans += a * b\n            n += b\n\n    print(ans)\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n,m = list(map(int,input().split()))\nx = [list(map(int,input().split())) for l in range(n)]\nx = sorted(x)\ncount = m\np = 0\nfor i in x:\n  if count >= i[1]:\n    count -= i[1]\n    p += i[0] * i[1]\n  elif count ==0:\n    break\n  else:\n    p += i[0] * count\n    count = 0\n\nprint(p)\n", "N, M = list([int(n) for n in input().split(\" \")])\nE = []\nfor i in range(N):\n  tmp = input().split(\" \")\n  E.append({\n    \"price\": int(tmp[0]),\n    \"count\": int(tmp[1])\n  })\n\nE.sort(key=lambda e: e[\"price\"])\n\ntotP = 0\ntotC = 0\nfor i in range(len(E)):\n  if totC + E[i][\"count\"] >= M:\n    totP += (M - totC) * E[i][\"price\"]\n    break\n  else:\n    totC += E[i][\"count\"]\n    totP += E[i][\"price\"] * E[i][\"count\"]\n\nprint(totP)\n", "n,m=map(int,input().split())\nab=[list(map(int,input().split())) for i in range(n)]\nab.sort()\nans=0\nfor i in range(n):\n    if m>ab[i][1]:\n        ans+=ab[i][0]*ab[i][1]\n        m-=ab[i][1]\n    else:\n        ans+=ab[i][0]*m\n        print(ans)\n        break", "n,m=map(int,input().split())\nl=[]\nfor _ in range(n):\n  a,b=map(int,input().split())\n  l.append([a,b])\nl.sort()\nans=0\nfor a,b in l:\n  ans+=min(b,m)*a\n  m=max(0,m-b)\nprint(ans)", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n#\n# FileName: \tC\n# CreatedDate:  2020-09-27 00:00:39 +0900\n# LastModified: 2020-09-27 00:16:46 +0900\n#\n\n\nimport os\nimport sys\n# import numpy as np\n# import pandas as pd\n\n\ndef main():\n    N, M = list(map(int, input().split()))\n    path = []\n    for _ in range(N):\n        A, B = list(map(int, input().split()))\n        path.append([A, B])\n    path.sort(key=lambda x: x[0])\n#    print(path)\n    ans = [0, 0]  # (much, num)\n    for p in path:\n        if ans[1] + p[1] <= M:\n            ans[0] = ans[0] + p[0]*p[1]\n            ans[1] += p[1]\n\n        else:\n            num = M-ans[1]\n            ans[0] = ans[0] + p[0]*num\n            ans[1] = ans[1] + num\n        if ans[1] == M:\n            print((ans[0]))\n            return\n#        print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import bisect, collections, copy, heapq, itertools, math, string, sys\ninput = lambda: sys.stdin.readline().rstrip() \nsys.setrecursionlimit(10**7)\nINF = float('inf')\ndef I(): return int(input())\ndef F(): return float(input())\ndef SS(): return input()\ndef LI(): return [int(x) for x in input().split()]\ndef LI_(): return [int(x)-1 for x in input().split()]\ndef LF(): return [float(x) for x in input().split()]\ndef LSS(): return input().split()\n\ndef resolve():\n    N, M = LI()\n    AB = [LI() for _ in range(N)]\n    AB.sort()\n\n    ans = 0\n    for a, b in AB:\n        if M >= b:\n            M -= b\n            ans += a * b\n        else:\n            ans += a * M\n            break\n\n    print(ans)\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "N, M = [ int(v) for v in input().split(\" \") ]\nd = []\nfor i in range(N):\n  d.append([ int(v) for v in input().split(\" \")])\n\ntotal = 0\nfor v, n in sorted(d):\n  if M > n:\n    total += (v*n)\n    M -= n\n  else:\n    total += (v*M)\n    break\n    \nprint(total)", "from collections import defaultdict\nN, M = map(int,input().rstrip().split())\nd = defaultdict(lambda: 0)\nfor _ in range(N):\n    A, B = map(int,input().rstrip().split())\n    d[A] += B\nans=0\nfor k in sorted(d.keys()):\n    if d[k]<=M:\n        ans += k*d[k]\n    else:\n        ans += k*M\n    M -= d[k]\n    if M<=0:break\nprint(ans)", "N,M = map(int,input().split())\nAB = [list(map(int,input().split())) for _ in range(N)]\n\nAB.sort()\n\nmoney = 0\nfor a, b in AB:\n  if M > b:\n    money += a * b\n    M -= b\n  else:\n    money += a * M\n    break\n    \nprint(money)", "import sys\nN,M=map(int,input().split())\nA=[list(map(int,input().split())) for i in range(N)]\nA=sorted(A,key=lambda x:x[0])\ncost=0\nnum=0\nfor i in range(N):\n    if num+A[i][1]>M:\n        print(cost+A[i][0]*(M-num))\n        return\n    else:\n        cost+=A[i][0]*A[i][1]\n        num+=A[i][1]\nprint(cost)", "n,m = map(int, input().split())\n\nab = [list(map(int, input().split())) for i in range(n)]\n\nab.sort()\n\npayment = 0\n\nfor i in ab:\n  price = i[0]\n  amount = i[1]\n  if amount > m:\n    amount = m\n  m -= amount\n  payment += amount*price\n  if m == 0:\n    break\n\nprint(payment) ", "n,m=map(int,input().split())\na=[]\nfor _ in range(n):\n  b=list(map(int,input().split()))\n  a.append(b)\n  \na.sort(key=lambda x: x[0])\nans=0\nh=0\n\nfor y in a:\n  d=y[0]\n  e=y[1]\n  if h+e>m:\n    ans+=(m-h)*d\n    h+=(m-h)\n  else:\n    h+=e\n    ans+=d*e\n\nprint(ans)", "N,M=list(map(int,input().split()))\nAB=[list(map(int,input().split())) for _ in range(N)]\nAB.sort()\nans=0\nfor i in range(N):\n    if M>AB[i][1]:\n        M-=AB[i][1]\n        ans+=AB[i][0]*AB[i][1]\n    else:\n        ans+=AB[i][0]*M\n        M=0\nprint(ans)\n", "from itertools import accumulate\n\nN, M = list(map(int, input().split()))\nAB = [tuple(map(int, input().split())) for _ in range(N)]\nsAB = sorted(AB, key=lambda x: x[0])\n\nsB = [sAB[i][1] for i in range(N)]\ncum_num = list(accumulate(sB))\n\nnum = 0\nans = 0\nindex_ = -1\nfor a, b in sAB:\n    index_ += 1\n    num += b\n    if num >= M:\n        break\n    ans += a*b\n\nif index_ == 0:\n    ans += sAB[0][0]*M\nelse:\n    ans += sAB[index_][0]*(M-cum_num[index_-1])\n\nprint(ans)\n", "# author:  Taichicchi\n# created: 12.09.2020 18:05:06\n\nimport sys\n\nN, M = list(map(int, input().split()))\n\nls = []\n\nfor i in range(N):\n    ls.append(list(map(int, input().split())))\n\nls.sort(key=lambda x: x[0])\n\nans = 0\n\nfor l in ls:\n    if l[1] <= M:\n        M -= l[1]\n        ans += l[0] * l[1]\n    else:\n        ans += l[0] * M\n        break\n\n\nprint(ans)\n", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun Sep 13 02:42:27 2020\n\n@author: liang\n\"\"\"\n\nN, M = map(int, input().split())\ndrinks = list()\n\nfor i in range(N):\n    a, b = map(int,input().split())\n    drinks.append((a,b))\n\ndrinks.sort(key = lambda x: x[0])\n#print(drinks)\nans = 0\nwhile M > 0:\n    a, b = drinks.pop(0)\n    if M <= b:\n        ans += a*M\n        M = 0\n    else:\n        ans += a*b\n        M -= b\n    #print(ans,M)\nprint(ans)", "# coding: utf-8\n\ndef main():\n    N, M = list(map(int, input().split()))\n    D = [list(map(int, input().split())) for _ in range(N)]\n    D.sort()\n    ans = 0\n    for a, b in D:\n        if M > b:\n            ans += a * b\n            M -= b\n        else:\n            ans += a * M\n            break\n\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n,m = map(int,input().split())\nl = []\nfor _ in range(n):\n  a,b = map(int,input().split())\n  l.append([a,b])\nl.sort()\nans = 0\nfor a,b in l:\n  ans += min(b,m)*a\n  m = max(0,m-b)\nprint(ans)", "n,m = list(map(int,input().split()))\ns = []\nans = 0\nfor i in range(n):\n    a,b = list(map(int,input().split()))\n    s.append([a,b])\ns.sort()\nfor i in s:\n    if m<i[1]:\n        ans += m*i[0]\n        break\n    else:\n        ans += i[0]*i[1]\n        m -= i[1]\nprint(ans)\n", "import numpy as np\nn,m = map(int, input().split())\nA = np.array([list(map(int, input().split())) for _ in range(n)], dtype='int64')\nind = np.argsort(A[:,0])\nA = A[ind]\nnum = 0\nmoney = 0\nfor a,b in A:\n    num += b\n    if num < m:\n        money += a * b\n    else:\n        money += a * (b - (num - m))\n        break\nprint(money)", "N, M = map(int, input().split())\nstore_m = [list(map(int, input().split())) for i in range(N)]\nstore = sorted(store_m)\nbuy = 0\ncost = 0\nfor i in range(N):\n    buy += store[i][1]\n    if buy < M:\n        cost += store[i][0] * store[i][1]\n    else:\n        cost += store[i][0] * (M - (buy - store[i][1]))\n        print(cost)\n        return", "n,m = map(int, input().split())\nab = [list(map(int, input().split())) for _ in range(n)]\n\nab_s = sorted(ab)\n\nres = m\ntemp = 0\n\nfor i in range(n):\n    if res <= ab_s[i][1]:\n        temp += res*ab_s[i][0]\n        print(temp)\n        return\n    else:\n        temp += ab_s[i][1]*ab_s[i][0]\n        res -= ab_s[i][1]", "n, m = map(int,input().split())\nab = [list(map(int,input().split())) for i in range(n)]\n \nab_sorted = sorted(ab, key=lambda x:x[0])\n \nnum = 0\namount_of_money = 0\n\nfor i in range(n):\n    buy = min(ab_sorted[i][1], m-num)\n    num += buy\n    amount_of_money += ab_sorted[i][0] * buy\n        \n    if num >= m:\n        print(amount_of_money)\n        return", "n,m = map(int,input().split())\n\nl = [list(map(int,input().split())) for i in range(n)]\n\nl.sort(key=lambda x: x[0])\n\nr = m\ni = 0\ncnt = 0\nwhile((r-l[i][1])>0):\n    r -= l[i][1]\n    cnt += (l[i][0]*l[i][1])\n    i += 1\n\ncnt += (r*l[i][0])\n\nprint(cnt)", "n, m = map(int, input().split())\na = [list(map(int, input().split())) for i in range(n)]\na = sorted(a, key=lambda x:x[0])\nmoney = 0\ndrink = 0\nfor i in range(n):\n  for j in range(a[i][1]):\n    drink += 1\n    money += a[i][0]\n    if drink == m:\n      print(money)\n      return", "import sys\npin=sys.stdin.readline\ndef main():\n  N,M=map(int,pin().split())\n  d=[list(map(int,pin().split())) for _ in [0]*N]\n  d.sort()\n  cnt=0\n  ans=0\n  for i in d:\n    if M<=cnt+i[1]:\n      ans+=i[0]*(M-cnt)\n      print(ans)\n      return\n    cnt+=i[1]\n    ans+=i[0]*i[1]\n  print(ans)\n  return\nmain()", "n,m = map(int, input().split())\nab = []\nfor i in range(n):\n    a,b = list(map(int, input().split()))\n    ab.append((a,b))\nab.sort()\nnum = 0\nmoney = 0\nfor h in range(n):\n    num += ab[h][1]\n    if num < m:\n        money += ab[h][0]*ab[h][1]\n    elif num == m:\n        money += ab[h][0]*ab[h][1]\n        break\n    else:\n        money += (ab[h][0]*ab[h][1] - (num-m)*ab[h][0])\n        break\nprint(money)", "N, M = list(map(int,input().split()))\n\nAB = []\nfor i in range(N):\n  A, B = list(map(int,input().split()))\n  AB.append([A,B])\nAB = sorted(AB,key = lambda x:x[0])\ncost = 0\n\nfor a,b in AB:\n  cost += (min(max(M,0),b))*a\n  M-=b\n  if M<=0:\n    break\nprint(cost)\n", "N, M = map(int, input().split())\ndrinks = []\n\nfor i in range(N):\n    drinks.append(tuple(map(int, input().split())))\n\ndrinks.sort()\n\ncnt = 0\nres = 0\nfor i in range(N):\n    res += (min(cnt + drinks[i][1], M) - cnt) * drinks[i][0]\n    cnt += drinks[i][1]\n\n    if cnt >= M:\n        break\n\nprint(res)"]