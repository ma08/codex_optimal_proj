["N = int(input())\na = list(map(int,input().split()))\naa = []\nfor i in a:\n    aa.append(i-1)\nprint(sum(aa))", "n = int(input())\na = list(map(int,input().split()))\n\nans = 0\n\nfor i in a:\n  ans += i-1\n\nprint(ans)", "import math\nfrom functools import reduce\n\nN = int(input())\na = list(map(int, input().split()))\n\ndef lcm_base(x, y):\n    return (x * y) // math.gcd(x, y)\n\ndef lcm_list(numbers):\n    return reduce(lcm_base, numbers, 1)\n\nm = lcm_list(a) - 1\n\nf = sum([m % item for item in a])\n\n\n\nprint(f)\n\n", "N = int(input())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n  ans += a[i]-1\nprint(ans)", "# import sys\n# sys.setrecursionlimit(10 ** 6)\n# import bisect\n# from collections import deque\n# from decorator import stop_watch\n#\n#\n# @stop_watch\ndef solve(N, a):\n    print((sum([ai - 1 for ai in a])))\n\n\ndef __starting_point():\n    N = int(input())\n    a = [int(i) for i in input().split()]\n    solve(N, a)\n\n    # # test\n    # from random import randint\n    # from func import random_str\n    # solve()\n\n__starting_point()", "# coding:utf-8\nn = int(input())\na = list(map(int, input().split()))\nprint((sum(a) - n))\n", "N = int(input())\nan = list(map(int,input().split()))\n\nfor i in range(N):\n    an[i] = an[i] - 1\nprint(sum(an))", "N=int(input())\na=list(map(int,input().split()))\nprint((sum(a)-N))\n", "import sys\ninput = sys.stdin.readline # for speed up\n#sys.setrecursionlimit(10**9)\n\nn=int(input())\na=list(map(int,input().split()))\n\nimport math\nr=0\nfor ii in range(1,n):\n  r=(r*a[ii])//math.gcd(r,a[ii])\n\ndef func(x):\n  y=0\n  for aa in a:\n    y+=x%aa\n  return y\n\nprint((func(r-1)))\n", "from fractions import gcd\nN = int(input())\na = list(map(int, input().split()))\n\ndef lcm(A):\n  x = A[0]\n  for i in range(1, len(a)):\n    x = (x * A[i]) // gcd(x, A[i])\n  return x\n \nn = lcm(a) - 1\nans = 0\nfor v in a:\n  ans += n % v\nprint(ans)", "N = int(input())\na = list(map(int,input().split()))\nprint(sum(a)-N)", "n = int(input())\na = list(map(int,input().split()))\n\nprint(sum(a)-n)", "N = int(input())\nA = list(map(int, input().split()))\nprint(sum(a - 1 for a in A))", "N = int(input())\na = list(map(int,input().split()))\n\na = [i-1 for i in a]\nprint(sum(a))", "# coding: utf-8\n\n\ndef main():\n    N = int(input())\n    ans = sum(list(map(int, input().split()))) - N\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\n\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninl = lambda: [int(x) for x in sys.stdin.readline().split()]\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print(\"\\033[33m\", *a, \"\\033[0m\", **dict(file=sys.stderr, **kw))\n\n\ndef solve():\n    n = ini()\n    a = inl()\n    ans = 0\n    for x in a:\n        ans += x - 1\n\n    return ans\n\n\nprint(solve())\n", "[n]=[int(i) for i in input().split()]\nli=[int(i) for i in input().split()]\n\n#print(n, li)\n\nans=0\nfor i in li:\n    ans+=i-1\n\nprint(ans)", "i = input;i();print((sum([int(x)-1 for x in i().split()])))\n", "a=int(input())\nb=list(map(int,input().split()))\nc=sum(b)\nprint(c-a)", "n = int(input())\nl = list(map(lambda x: int(x)-1,input().split()))\n\nprint(sum(l))", "n=int(input())\na=list(map(int,input().split()))\n\nprint((sum(a)-n))\n", "N = int(input())\na = list(map(int, input().split()))\n\ncalc = 0\n\nfor i in range(N):\n    calc += a[i]-1\n\nprint(calc)", "n = int(input())\na_l = list(map(int, input().split()))\nm = 1\nfor a in a_l:\n    m *= a\nans = 0\nfor a in a_l:\n    ans += (m-1)%a \nprint(ans)", "from math import gcd\nn = int(input())\nA = list(map(int, input().split()))\n\nans = 0\nfor a in A:\n    ans += a-1\nprint(ans)", "import math\nfrom functools import reduce\n\nn = int(input())\na_list = map(int, input().split())\nresult = 0\nfor a in a_list:\n    result += a - 1 \n\nprint(result)", "import numpy as np\ninput()\nprint(sum(np.array(list(map(int,input().split())))-1))", "# \u6700\u5c0f\u516c\u500d\u6570(math\u306f3.5\u4ee5\u964d) \n #\u53c2\u8003\u3000https://note.nkmk.me/python-gcd-lcm/\nfrom functools import reduce\nimport math #(2020-0405  fractions\u2192math)\ndef lcm_base(x, y):\n    return (x * y) // math.gcd(x, y) # \u300c//\u300d\u306f\u30d5\u30ed\u30fc\u30c8\u306b\u305b\u305a\u306bint\u306b\u3059\u308b\ndef lcm(*numbers): # a,b,c\u306a\u3069\n    return reduce(lcm_base, numbers, 1)\ndef lcm_list(numbers): #\u30ea\u30b9\u30c8\n    return reduce(lcm_base, numbers, 1)\n\n\n# \u521d\u671f\u5165\u529b\nimport sys\ninput = sys.stdin.readline  #\u6587\u5b57\u5217\u3067\u306f\u4f7f\u308f\u306a\u3044\nN = int(input())\na = list(map(int, input().split()))\n\nsaisyo_koubaisu =lcm_list(a)\nans =0\nfor aa in a:\n    ans += (saisyo_koubaisu-1) %aa\nprint(ans)", "def f(m):\n    ans = 0\n    for i in range(len(a)):\n        ans += m%a[i]\n    return ans\n\nn = int(input())\na = list(map(int,input().split()))\n\nprint(sum(a)-n)", "'''\nCreated on 2020/10/01\n\n@author: harurun\n'''\nimport sys\npin=sys.stdin.readline\n\ndef gcd(a,b):\n  if b==0:\n    return a\n  return gcd(b,a%b)\n\ndef lcm(a,b):\n  return a*b//gcd(a,b)\n\ndef main():\n  N=int(pin())\n  a=list(map(int,pin().split()))\n  s=a[0]\n  for i in range(N-1):\n    s=lcm(a[i+1],s)\n  ans=0\n  for i in a:\n    ans+=(s-1)%i\n  print(ans)\n  return\nmain()", "import math\ndef lcm(a,b):\n  return a*b//math.gcd(a,b)\n\nn=int(input())\na=list(map(int,input().split()))\nans=lcm(a[0],a[1])\nfor i in range(1,n):\n  ans=lcm(ans,a[i])\nm=0\nfor i in a:\n  m+=(ans-1)%i\nprint(m)", "# \u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\nimport fractions\n\n# \u6a19\u6e96\u5165\u529b\u3092\u53d6\u5f97\nN = int(input())\na = list(map(int, input().split()))\n\n# \u6c42\u89e3\u51e6\u7406\nans = sum(a) - N\n\n# \u7d50\u679c\u51fa\u529b\nprint(ans)\n", "n=int(input())\na=[int(x) for x in input().split()]\nprint(sum(a)-n)", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Fri Sep 18 10:04:50 2020\n\n@author: liang\n\"\"\"\nN = int(input())\nA = [int(x)-1 for x in input().split()]\nans = sum(A)\nprint(ans)", "import math\nfrom functools import reduce\nn = int(input())\nA = list(map(int,input().split()))\n\ndef lcm_base(x, y):\n    return (x * y) // math.gcd(x, y)\n\ndef lcm(*numbers):\n  return reduce(lcm_base, numbers, 1)\n\nans = 0\nlcm = lcm(*A)\n\nfor a in A:\n  ans += (lcm-1) % a\nprint(ans)", "n=int(input())\na=list(map(int,input().split()))\nprint(sum(a)-n)", "N = int(input())\nA = list(map(int, input().split()))\n\nans = 0\n\nfor i in range(N):\n    ans += A[i]-1\n\nprint(ans)", "import bisect, collections, copy, heapq, itertools, math, string, sys\ninput = lambda: sys.stdin.readline().rstrip() \nsys.setrecursionlimit(10**7)\nINF = float('inf')\ndef I(): return int(input())\ndef F(): return float(input())\ndef SS(): return input()\ndef LI(): return [int(x) for x in input().split()]\ndef LI_(): return [int(x)-1 for x in input().split()]\ndef LF(): return [float(x) for x in input().split()]\ndef LSS(): return input().split()\n\ndef resolve():\n    N = I()\n    a = LI()\n\n    ans = sum([i - 1 for i in a])\n    print(ans)\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "N=int(input())\nprint((sum(list(map(int, input().split())))-N))\n", "N = int(input())\nN_List = list(map(int,input().split()))\nans = 0\nfor i in range(N):\n    ans += N_List[i]-1\nprint(ans)", "#-*-coding:utf-8-*-\nimport sys\ninput=sys.stdin.readline\nimport numpy as np\n\ndef main():\n    numbers=[]\n    n = int(input())\n    numbers=np.array(list(map(int,input().split())))\n\n    print((numbers-1).sum())\n\n    \n\ndef __starting_point():\n    main()\n__starting_point()", "import math\nfrom functools import reduce\n\ndef lcm_base(x, y):\n    return (x * y) // math.gcd(x, y)\n\ndef lcm_list(numbers):\n    return reduce(lcm_base, numbers, 1)\n\nN  = int(input())\nl = list(map(int,input().split()))\n\nlcm = lcm_list(l)\n\nans = 0\nfor i in l:\n    ans += (lcm-1) % i\nprint(ans)\n", "n = int(input())\na = list(map(int, input().split()))\n\nprint(sum(a)-n)", "n = int(input())\na = [int(x) for x in input().split()]\n\ndef gcd(x,y):\n  while y != 0:\n    x,y = y,x%y\n  return x\n\ndef lcm(x,y):\n  return (x*y) // gcd(x,y)\n\nm = a[0]\nfor i in range(n):\n  m = lcm(m,a[i])\nm -= 1\n\nans = 0\nfor i in range(n):\n  ans += m % a[i]\n\nprint(ans)", "N = int(input())\nA = map(int,input().split())\nprint(sum(A)-N)", "N = int(input())\na = list(map(int,input().split()))\nprint(sum(a)-N)", "# -*- coding: utf-8 -*-\n\ndef get_input() -> tuple:\n    \"\"\"\n    \u6a19\u6e96\u5165\u529b\u3092\u53d6\u5f97\u3059\u308b.\n\n    Returns:\\n\n        tuple: \u6a19\u6e96\u5165\u529b\n    \"\"\"\n    N = int(input())\n    a = list(map(int, input().split()))\n\n    return N, a\n\n\ndef main(N: int, a: list) -> None:\n    \"\"\"\n    \u30e1\u30a4\u30f3\u51e6\u7406.\n\n    Args:\\n\n        N (int): \u6b63\u6574\u6570\u306e\u6570(2 <= N <= 3000)\n        a (list): \u6b63\u6574\u6570(2 <= a_i <= 10^5)\n    \"\"\"\n    # \u6c42\u89e3\u51e6\u7406\n    ans = sum(a) - N\n\n    # \u7d50\u679c\u51fa\u529b\n    print(ans)\n\n\ndef __starting_point():\n    # \u6a19\u6e96\u5165\u529b\u3092\u53d6\u5f97\n    N, a = get_input()\n\n    # \u30e1\u30a4\u30f3\u51e6\u7406\n    main(N, a)\n\n__starting_point()", "import math\n\nN=int(input())\nList = list(map(int, input().split()))\nmid = List[0]\nfor i in range(1,N):\n  mid = mid * List[i] // math.gcd(mid, List[i])\nres = 0\nfor i in range(N):\n  res += (mid-1) % List[i]\nprint(res)", "import math\nN = int(input())\nlsa = list(map(int,input().split()))\nlcm = lsa[0]\nfor i in range(1,N):\n    lcm = lcm*lsa[i]//math.gcd(lcm,lsa[i])\nm = lcm-1\nans = 0\nfor i in range(N):\n    ans += m % lsa[i]\nprint(ans)", "N = int(input())\nS = sum(map(int, input().split()))\n\nprint((S-N))\n", "N = int(input())\nA = list(map(int, input().split()))\nans = 0\nfor i in range(N):\n  ans += A[i]-1\nprint(ans)", "N = int(input())\na = list(map(int, input().split()))\n\nans = 0\nfor x in a:\n    ans += x - 1\nprint(ans)\n", "import math\nfrom math import gcd,pi,sqrt\nINF = float(\"inf\")\n\nimport sys\nsys.setrecursionlimit(10**6)\nimport itertools\nfrom collections import Counter,deque\ndef i_input(): return int(input())\ndef i_map(): return list(map(int, input().split()))\ndef i_list(): return list(i_map())\ndef i_row(N): return [i_input() for _ in range(N)]\ndef i_row_list(N): return [i_list() for _ in range(N)]\ndef s_input(): return input()\ndef s_map(): return input().split()\ndef s_list(): return list(s_map())\ndef s_row(N): return [s_input for _ in range(N)]\ndef s_row_str(N): return [s_list() for _ in range(N)]\ndef s_row_list(N): return [list(s_input()) for _ in range(N)]\n\ndef main():\n    n = i_input()\n    a = i_list()\n    ans = 0\n    for i in a:\n        ans += i-1\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math\nfrom functools import reduce\n\n\ndef lcm(x, y):\n  return (x * y) // math.gcd(x, y)\n\ndef lcm_list(numbers):\n  return reduce(lcm, numbers, 1)\n\n\nN = int(input())\nA = list(map(int,input().split()))\n\nMOD = lcm_list(A)-1\n\nans = 0\nfor a in A:\n  ans += MOD%a\nprint(ans)", "N = int(input())\na = list(map(int,input().split()))\nans = 0\n\n\nfor i in range(N):\n    ans += a[i]-1\n\nprint(ans)", "n=int(input())\nl = list(map(int, input().split()))\nprint(sum(l) - n)", "n=int(input())\na=list(map(int,input().split()))\nans=0\nANS=0\nfor i in range(n):\n  ans*=a[i]\nans-=1\nfor i in range(n):\n  ANS+=ans%a[i]\nprint(ANS)", "from math import gcd\nfrom functools import reduce\n\n\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n\n\nN, *A = list(map(int, open(0).read().split()))\nl = reduce(lcm, A) - 1\nprint((sum(l % a for a in A)))\n\n", "N=int(input())\n\na=list(map(int,input().split()))\n\nans=0\n\nfor i in range(N):\n    ans+=a[i]-1\n\nprint(ans)\n", "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    ans += a[i] - 1\nprint(ans)\n", "n=int(input())\na=list(map(int,input().split()))\nprint(sum(a)-n)", "import sys\nimport math\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    N = I()\n    L = LI()\n    ans = 0\n    for i in L:\n        ans += i-1\n    print(ans)\ndef __starting_point():\n    main()\n__starting_point()", "N=input()\na=list(map(int,input().split()))\n\nans=[]\nfor ai in a:\n  ans.append(ai-1)\n\nprint(sum(ans))", "K = int(input())\na = map(int,input().split())\nprint(sum(a)-K)", "n = int(input())\na = list(map(int, input().split()))\n\nprint(sum(a) - n)", "N = int(input())\nA = list(map(int,input().split()))\n\nans = sum(A) - N\nprint(ans)", "n = int(input())\nL = list(map(int,input().split()))\n\nfrom math import gcd\nfrom functools import reduce\n\ndef lcm(x,y):\n    return x*y//gcd(x,y)\n    \na = reduce(lcm,L)\n\nans = 0\nfor i in range(n):\n    ans += (a-1)%L[i]\n\nprint(ans)", "N = int(input())\nS = list(map(int,input().split()))\nprint(sum(S)-len(S))", "n = int(input())\nal = list(map(int, input().split()))\nans = 0\nfor a in al:\n    ans += a-1\n\nprint(ans)", "import fractions\ndef lcm(a, N):\n  ans = a[0]\n  for i in range(1, N):\n      ans = ans * a[i] // fractions.gcd(ans, a[i])\n  return ans\n \ndef main():\n  N = int(input())\n  A = list(map(int,input().split()))\n  num = lcm(A, N) - 1\n  answer = 0\n  for i in A:\n    answer += num % i\n  print(answer)\n\ndef __starting_point():\n    main()\n__starting_point()", "n=int(input())\nalist=list(map(int, input().split()))\nprint(sum(alist)-n)", "n,a=open(0);print(sum(map(int,a.split()))-int(n))", "N = int(input())\nA = list(map(int,input().split()))\n\nans = 0\nfor i in range(N):\n  ans += A[i] - 1\n  \nprint(ans)", "n=int(input())\na=list(map(int,input().split()))\nprint(sum(a)-n)", "import math\nN = int(input())\nA = list(map(int,input().split()))\n\nA = list(map(lambda x: int(math.copysign(x-1, x)), A))\n\nprint(sum(A))", "n = int(input())\na = list(map(int, input().split()))\nprint(sum(a) - n)", "N = int(input())\nA = list(map(int, input().split()))\nans = 0\n\nfor i in range(N):\n    ans += A[i]-1\n\nprint(ans)\n", "import math\nN = int(input())\na = list(map(int, input().split()))\nans = a[0]\nfor i in range(1, N):\n    ans = ans * a[i] // math.gcd(ans, a[i])\n\ntmp = ans - 1\nmod = 0\nf = 0\nfor i in range(N):\n    mod = tmp % a[i]\n    f += mod\nprint(f)", "def main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    ans = sum(A)-N\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\na = list(map(int, input().split()))\n\nprint(sum(a)-n)", "n = int(input())\nans = list(map(int,input().split()))\n\nprint(sum(ans)-n)", "n = int(input())\na = list(map(int,input().split()))\nprint(sum(a)-n)", "N = int(input())\nA = list(map(int, input().split()))\n\nans = 0\n\nfor i in range(N):\n    ans += A[i] - 1\n\nprint(ans)", "n=int(input())\na=list(map(int,input().split()))\nprint((sum(a)-n))\n\n", "N = int(input())\nA = list(map(int,input().split()))\n\nprint(sum(A)-len(A))", "N = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\n\n# \u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u306e\u4e92\u9664\u6cd5\u306b\u3088\u308a\u6700\u5927\u516c\u7d04\u6570\u3092\u6c42\u3081\u308b\nans = 0\nval1, val2 = a[0], a[1]\nwhile 1:\n  if val1 % val2 == 0:\n    ans = a[0]*a[1]//val2\n    break\n  else:\n    tmp = val2\n    val2 = val1 % val2\n    val1 = tmp\n\nfor i in range(2, N):\n  val1, val2 = ans, a[i]\n  while 1:\n    if val1 % val2 == 0:\n      ans *= a[i]//val2\n      break\n    else:\n      tmp = val2\n      val2 = val1 % val2\n      val1 = tmp\n\nf_ans = 0\nfor i in range(N):\n  f_ans += (ans-1)%a[i]\nprint((int(f_ans)))\n  \n      \n", "N,*A = map(int,open(0).read().split())\n\nm =1\nans = 0\n#for a in A:\n#  m *=a\n#m-=1\n#\n#for a in A:\n#  ans+=m%a\n#  pass\n#print(ans)\n\nfor a in A:\n  ans += a-1\nprint(ans)", "from math import gcd\nn = int(input())\na = list(map(int, input().split()))\n\nt = a[0]\nfor i in range(1,n): t = t*a[i]//gcd(t, a[i])\n\nans = 0\nfor i in a: ans += (t-1)%i\nprint(ans)", "import math\nfrom functools import reduce\n\ndef lcm_base(x, y):\n  return (x * y) // math.gcd(x, y)\n\ndef lcm(list):\n  return reduce(lcm_base, list, 1)\n\nn = int(input())\na = list(map(int, input().split()))\nl = lcm(a) - 1\nans = 0\nfor i in range(n):\n  ans += l % a[i]\nprint(ans)", "n = int(input())\na = list(map(int, input().split()))\n\nimport math\n\ndef lcm(x, y):\n    return (x * y) // math.gcd(x, y)\n\nl = 1\nfor i in range(n):\n    l = lcm(l, a[i])\n\nans = 0\nfor i in range(n):\n    ans += (l - 1) % a[i]\n\nprint(ans)", "n = int(input())\nprint(sum(list(map(int, input().split()))) - n)", "n = int(input())\na = list(map(int,input().split()))\nans = 0\nfor v in a:\n  ans += v-1\nprint(ans)", "def main():\n    n=int(input())\n    a=list(map(int,input().split()))\n    print(sum(a)-n)\ndef __starting_point():\n    main()\n__starting_point()", "N = int(input())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += a[i] - 1\n\nprint(ans)", "n=int(input())\na=map(int,input().split())\nb=[]\nfor i in a:\n    b.append(i-1)\nprint(sum(b))", "import math\n\nN = int(input())\na = list(map(int, input().split()))\n\nprod = a[0]\nlcm = a[0]\nfor i in range(1,N):\n    x = math.gcd(lcm, a[i])\n    lcm = (lcm*a[i])//x\n\nm = lcm-1\nans = 0\nfor i in a:\n    ans += m%i\nprint(ans)\n", "[n]=[int(i) for i in input().split()]\nli=[int(i) for i in input().split()]\n\n#print(li)\n\nans=0\nfor i in li:\n    ans+=i\n\nprint(ans-n)", "def main():\n    n = int(input())\n    a_lst = list(map(int, input().split()))\n    maximum = sum(a_lst) - n\n    \n    print(maximum)\n    \n\ndef __starting_point():\n    main()\n__starting_point()", "import math\n\nN=int(input())\na=list(map(int,input().split()))\nlcm=1\nfor i in range(N):\n    lcm=lcm*a[i]//math.gcd(a[i],lcm)\n\nprint((sum((lcm-1)%a[i] for i in range(N))))\n", "n = int(input())\nlis = list(map(int, input().split()))\nans = 0\n\nfor i in lis:\n  ans += i-1\n\nprint(ans)\n", "a = int(input())\nb = list(map(int,input().split()))\nprint((sum(b)-a))\n\n\n"]