["\nN = int(input())\nK = int(input())\nX = int(input())\nY = int(input())\nif K < N:\n    ans = K*X + (N-K)*Y\nelse:\n    ans = N*X\nprint(ans)", "N, K, X, Y = [int(input()) for _ in range(4)]\nprint(X * min(K, N) + Y * max(0, N - K))", "n,k,x,y = [int(input()) for _ in range(4)]\n\nif k <= n:\n    sum = (x * k) + (y * (n-k))\nelse:\n    sum = x * n\n\nprint(sum)", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\n\nif n > k :\n  print(k*x + (n-k)*y)\nelif n <= k:\n  print(n*x)", "import math\nfrom datetime import date\n\ndef main():\n\t\n\tn = int(input())\n\tk = int(input())\n\tx = int(input())\n\ty = int(input())\t\n\t\n\tans = max(0, n - k) * y + min(n, k) * x;\n\tprint(ans)\n\nmain()\n", "n,k,x,y=[int(input()) for i in range(4)]\nif n<=k:\n    print(n*x)\nelse:\n    print(k*x+(n-k)*y)", "N,K,x,y = [int(input()) for i in range(4)]\n\nif K<N:\n  print((N-K)*y + K*x)\n  \nelse:\n  print(N*x)", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\n\nif n > k:\n    print(k*x+(n-k)*y)\nelse: \n    print(n*x)", "N = int(input())\nK = int(input())\nX = int(input())\nY = int(input())\nif N > K:\n    print(K*X+(N-K)*Y)\nelse:\n    print(N*X)", "a,b,c,d = [int(input()) for i in range(4)]\nif a<b:\n\tprint(a*c)\nelse:\n\tprint((b*c) +((a-b) * d) )", "N = int(input())\nK = int(input())\nX = int(input())\nY = int(input())\nif N <= K:\n  print(N * X)\nelse:\n  print(K * X + (N - K) * Y)", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\n\nprint(x * min(n, k) + y * max(n-k, 0))", "# 044_a\n# A - \u9ad8\u6a4b\u541b\u3068\u30db\u30c6\u30eb\u30a4\u30fc\u30b8\u30fc\n\nN = int(input())  # \u9023\u6cca\u6570\nK = int(input())  # \u6599\u91d1\u5909\u52d5\u6cca\u6570\nX = int(input())  # \u901a\u5e38\u4fa1\u683c\nY = int(input())  # \u5909\u52d5\u4fa1\u683c\n\nif ((1 <= N & N <= 10000) & (1 <= K & K <= 10000)) \\\n        & (1 <= X & X <= 10000) & (1 <= Y & Y <= 10000):\n    if (X > Y):\n        price = 0\n        if (N < K):\n            for i in range(1, N + 1):\n                price += X\n        if (N >= K):\n            for i in range(1, K + 1):\n                price += X\n            for j in range(K + 1, N + 1):\n                price += Y\n        print(price)", "n,k,x,y = [int(input()) for i in range(4)]\ncost = (min(n,k)*x+max(0,n-k)*y)\nprint(cost)", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\nans = 0\nif n <= k:\n    ans = n*x\nelse:\n    ans = k*x + (n-k)*y\nprint(ans)", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\n\nif n > k:\n  ans = k * x + (n - k) * y\n  \nelse:\n  ans = n * x\n  \nprint(ans)", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\n\nprint((min(k, n)*x + max(n-k, 0)*y))\n", "n=int(input())\nk=int(input())\nx=int(input())\ny=int(input())\nfirst=min(n,k)\nre=first*x\nre+=max((n-first),0)*y\nprint(re)", "def main():\n    n = int(input())\n    k = int(input())\n    x = int(input())\n    y = int(input())\n\n    if n <= k :\n        ans = x * n\n    else :\n        ans = x * k + y * (n - k)\n\n    print(ans)\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "# \u6700\u521d\u306eK\u6cca\u307e\u3067\u306f\u30011\u6cca\u3042\u305f\u308aX\u5186\n# K+1\u6cca\u76ee\u4ee5\u964d\u306f\u30011\u6cca\u3042\u305f\u308aY\u5186\n# N\u6cca\u3057\u305f\u3068\u304d\u306e\u5bbf\u6cca\u8cbb\n\nN = int(input())\nK = int(input())\nX = int(input())\nY = int(input())\n\nif N <= K:\n    print(X * N)\nelse:\n    print(X * K + Y * (N - K))", "N = int(input())\nK = int(input())\nX = int(input())\nY = int(input())\n\nans = 0\n\nfor i in range(1,N+1):\n  if i<=K:\n    ans += X\n  else:\n    ans += Y\n    \nprint(ans)\n", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\nif n > k:\n  print(x * k + y * (n - k))\nelse:\n  print(x * n)", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\nif n >= k:\n    print(k*x + (n-k)*y)\nelse:\n    print(n*x)", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\n\nif n > k:\n    print((k*x+(n-k)*y))\nelse:\n    print((n*x))\n", "# \u6570\u5024\u306e\u53d6\u5f97\nN = int(input())\nK = int(input())\nX = int(input())\nY = int(input())\n\n# \u5bbf\u6cca\u8cbb\u306e\u8a08\u7b97\u5f8c\u7d50\u679c\u3092\u51fa\u529b\nif N <= K:\n  account = N * X\nelse:\n  account = (K * X) + (max(N - K,0) * Y) \n  \nprint(account)", "N = int(input())\nK = int(input())\nX = int(input())\nY = int(input())\nans = 0\n\nif N > K:\n    for i in range(0, K):\n        ans += X\n    for i in range(K, N):\n        ans += Y\nelif N <= K:\n    for i in range(0, N):\n        ans += X\n\nprint(ans)", "from sys import stdin\ninput = stdin.readline\n\nN = int(input())\nK = int(input())\nX = int(input())\nY = int(input())\n\nif N <= K:\n    cost = N * X\nelse:\n    cost = K * X + (N - K) * Y\n\nprint(cost)", "N=int(input())\nK=int(input())\nX=int(input())\nY=int(input())\n\nif N<=K:\n  print(X*N)\nelse:\n  print(X*K+Y*(N-K))", "n=int(input())\nk=int(input())\nx=int(input())\ny=int(input())\n\nprint(min(k,n)*x+max(0,n-k)*y)", "\"\"\"\nABC044 A \u9ad8\u6a4b\u541b\u3068\u30db\u30c6\u30eb\u30a4\u30fc\u30b8\u30fc\nhttps://kenkoooo.com/atcoder/#/table/Tsukumo\n\"\"\"\n\nn = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\n\nif n > k:\n    ans = k*x + (n-k)*y\nelse:\n    ans = n*x\nprint(ans)\n", "n= int(input())\nk= int(input())\nx= int(input())\ny= int(input())\nprint((x*n if k>=n else (n-k)*y+x*k))\n", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\n\nprint((min(k, n)*x + max((n-k)*y, 0)))\n", "def solve():\n    n = int(input())\n    k = int(input())\n    x = int(input())\n    y = int(input())\n    print((x * min(n, k) + y * max(n-k,0)))\n\n\ndef __starting_point():\n    solve()\n\n__starting_point()", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\nif n <= k:\n  print(n*x)\nelse:\n  print(k*x + (n-k)*y)", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\nif n < k: print(x * n)\nelse: print(x * k + y * (n - k))", "N = int(input())\nK = int(input())\nX = int(input())\nY = int(input())\nif N > K:\n    SUM = X*K + Y*(N - K)\nelse:\n    SUM = X*N\nprint(SUM)\n", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\n\nif n < k:\n    print(n * x)\nelse:\n    print(k * x + (n - k) * y)", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\n\nif n > k:\n    print(k * x + (n - k) * y)\nelse:\n    print(n * x)", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\n\nif n <= k:\n  print(n*x)\nelse:\n  print(k*x+(n-k)*y)", "# abc044_a\n# https://atcoder.jp/contests/abc044/tasks/abc044_a\n\n# \u6700\u521d\u306eK\u6cca\u307e\u3067\u306f\u3001X\u5186\n# K\uff0b1\u6cca\u76ee\u4ee5\u964d\u306f\u3001Y\u5186\n\n# N\u6cca\u9023\u7d9a\u3067\u5bbf\u6cca\u3057\u305f\u969b\u306e\u5bbf\u6cca\u8cbb\n\n# \u5165\u529b\nn = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\n\n# \u51e6\u7406\n\n# x\u5186\u3068y\u5186\nif n > k:\n    answer = k * x + (n - k) * y\n# x\u5186\u306e\u307f\nelse:\n    answer = n * x\n\nprint(answer)\n", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\n\nans = min(n,k)*x + max(n-k,0)*y\nprint(ans)", "N, K, X, Y = [int(input()) for _ in range(4)]\nresult = min(N, K)\nN -= result\nresult *= X\n\nif N >= 0:\n  result += N * Y\nprint(result)", "n,k,x,y=[int(input()) for _ in range(4) ]\nans=k*x+(n-k)*y\nprint(ans if n>k else n*x)", "n,k,x,y=[int(input()) for i in range(4)]\nprint(n*x+min(0,(k-n)*(x-y)))", "N=int(input())\nK=int(input())\nX=int(input())\nY=int(input())\nif K<N:\n    print((X*K+Y*(N-K)))\nelse:\n    print((X*N))\n\n", "n,k,x,y = [int(input()) for _ in range(4)]\nprint((min(n,k)*x + max(0,n-k)*y))\n", "n,k,x,y=int(input()),int(input()),int(input()),int(input())\nif n<k:print(x*n)\nelse:print(x*k+y*(n-k))", "import sys\nimport math\n\n#https://atcoder.jp/contests/agc008/submissions/15248942\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninm = lambda: map(int, sys.stdin.readline().split())\ninl = lambda: list(inm())\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print(\"\\033[33m\", *a, \"\\033[0m\", **dict(file=sys.stderr, **kw))\n\nN = ini()\nK = ini()\nX = ini()\nY = ini()\n\nif N > K:\n    print(K*X+(N-K)*Y)\nelse:\n    print(N*X)\n", "N, K, X, Y = [int(input()) for i in range(4)]\nprint(K * X + (N - K) * Y if N > K else N * X)", "n=int(input())\nk=int(input())\nx=int(input())\ny=int(input())\nans=0\nif n>=k:\n    ans+=x*k\n    n-=k\n    ans+=y*n\nelse:\n    ans+=x*n\nprint(ans)", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\nif k <= n:\n  print(k*x+(n-k)*y)\nelse:\n  print(n*x)", "total=int(input()) #\u5bbf\u6cca\u65e5\u6570\ndisc=int(input()) #\u521d\u3081\u306e\u5272\u5f15\u306a\u3057\u65e5\u6570\npriceX=int(input()) #\u5272\u5f15\u306a\u3044\u5024\u6bb5\npriceY=int(input()) #\u5272\u5f15\u5f8c\u306e\u5024\u6bb5\n\nans=()\nif total<=disc:\n  ans=total*priceX\nelse:\n  ans=disc*priceX+(total-disc)*priceY\nprint(ans)", "N = int(input())\nK = int(input())\nX = int(input())\nY = int(input())\n\nans = 0\n\nfor i in range(N):\n    if i + 1 <= K:\n        ans += X\n    else:\n        ans += Y\nprint(ans)", "N = int(input())    # N\u6cca\nK = int(input())    # \u6700\u521d\u306eK\u6cca\u307e\u3067\u306f1\u6cca\u5f53\u305f\u308aX\u5186\nX = int(input())\nY = int(input())    # K+1\u6cca\u76ee\u4ee5\u964d\u306f1\u6cca\u5f53\u305f\u308aY\u5186\n\nif N - K > 0:\n    total = (K * X) + ((N - K) * Y)\nelse:\n    total = N * X\n\nprint(total)\n", "n,k,x,y=[int(input()) for _ in range(4)];print([n*x,k*x+(n-k)*y][n-k>0])", "N = int(input())\nK = int(input())\nX = int(input())\nY = int(input())\n\nif N <= K:\n    ans = X * N\nelse:\n    ans = X * K + (N - K) * Y\nprint(ans)", "import sys\n\ndef I(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef main():\n    n = I()\n    k = I()\n    x = I()\n    y = I()\n    if n <= k:\n        print(n*x)\n    else:\n        print(k*x + (n-k)*y)\n\ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\n\ns = 0\nfor i in range(1, n+1, 1):\n    if i <= k:\n        s += x\n    else:\n        s += y\nprint(s)\n", "n=int(input())\nk=int(input())\nx=int(input())\ny=int(input())\n\nif n <= k:\n  print(n*x)\n  \nelse:\n  print(k*x+(n-k)*y)", "N = int(input())\nK = int(input())\nX = int(input())\nY = int(input())\nif K < N:\n    print(K * X + (N - K) * Y)\nelse:\n    print(N * X)", "#!/usr/bin/env python3\n\ndef main():\n    n = int(input())\n    k = int(input())\n    x = int(input())\n    y = int(input())\n    print((n * x - (x - y) * max(n - k, 0)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\n\n\nif n <= k:\n  print((n*x))\nelse:\n  print((k*x+(n-k)*y))", "N=int(input())\nK=int(input())\nX=int(input())\nY=int(input())\nprint((K*X+(N-K)*Y if N>=K else X*N))\n", "n=int(input())\nk=int(input())\nx=int(input())\ny=int(input())\nfees=0\nif(k>n or n==k):\n\tfor i in range(0,n):\n\t\tfees+=x\nelif(k<n):\n\tdiff=n-k\n\tfor j in range(0,k):\n\t\tfees+=x\n\tfor k in range(0,diff):\n\t\tfees+=y\n\t\t\nprint(fees)\n", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\nif n<=k:\n    print(n*x)\nelse:\n    tmp = (n-k) * y + k * x\n    print(tmp)", "N = int(input())\nK = int(input())\nX = int(input())\nY = int(input())\n \nif N<=K:\n  print(X*N)\nelse:\n  print(K * X + (N - K) * Y)", "N = int(input())\nK = int(input())\nX = int(input())\nY = int(input())\nif N > K:\n    print(K * X + (N - K) * Y)\nelse:\n    print(N * X)", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\n\nans = min(n, k) * x\nn -= min(n, k)\n\nans += n * y\n\nprint(ans)\n", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\ncost = 0\nif n > k:\n    for i in range(k):\n        cost += x\n\n    for j in range(k, n):\n        cost += y\n    print(cost)\n\nelif n <= k:\n    for i in range(n):\n        cost += x\n    print(cost)\n\n\n", "n=int(input())\nk=int(input())\nx=int(input())\ny=int(input())\nif k<n:\n    print(k*x+(n-k)*y)\nelse:\n    print(n*x)", "N,K,X,Y=[int(input()) for i in range(4)]\n\nif(K>=N):\n  Z=N*X\n  print(Z)\nelse:\n  Z=K*X+(N-K)*Y\n  print(Z)", "n, k, x, y = [int(input()) for _ in range(4)]\nif n <= k:\n    print(x * n)\nelse:\n    print(x * k + y * (n - k))", "n=int(input())\nk=int(input())\nx=int(input())\ny=int(input())\nif n<k:\n  print(n*x)\nelse:\n  print(k*x+(n-k)*y)", "class Combination:\n    def __init__(self, n, mod):\n        self.n = n\n        self.mod = mod\n        self.fac = [1 for i in range(self.n + 1)]\n        self.finv = [1 for i in range(self.n + 1)]\n        for i in range(2, self.n+1):\n            self.fac[i] = (self.fac[i - 1] * i) % self.mod\n            self.finv[i] = (self.finv[i-1] * pow(i, -1, self.mod)) % self.mod\n\n    def comb(self, n, m):\n        return self.fac[n] * (self.finv[n-m] * self.finv[m] % self.mod) % self.mod\ndef iparse():\n    return list(map(int, input().split()))\n\ndef __starting_point():\n    n = int(input())\n    k = int(input())\n    x = int(input())\n    y = int(input())\n\n    print((min(k,n)*x + max(0,n-k)*y))\n    \n\n__starting_point()", "N = int(input())\nK = int(input())\nX = int(input())\nY = int(input())\n\nif N <= K:\n    print(N * X)\nelif N >= K:\n    k_stay = K * X\n    k_plus_stay = (N - K) * Y\n    print(k_plus_stay + k_stay)", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\n\nn1 = n - k\nif n > k:\n    print((k*x)+(y*n1))\nelse:\n    print(n*x)", "N=int(input())\nK=int(input())\nX=int(input())\nY=int(input())\n\nif N<=K:\n    print((X*N))\nelse:\n    print((X*K+Y*(N-K)))\n", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\nif n >= k:\n    print((k * x) + (n - k) * y)\nelse:\n    print(n * x)", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\n\nans = 0\nfor i in range(n):\n  if i < k:\n    ans += x\n  else:\n    ans += y\n    \nprint(ans)", "N = int(input())\nK = int(input())\nX = int(input())\nY = int(input())\nprice = 0\nif N <= K:\n  for i in range(N):\n    price += X\n  print(price)\nelse:\n  for i in range(K):\n    price += X\n  for i in range(N-K):\n    price += Y\n  print(price)", "import sys\nfrom heapq import heappush, heappop, heapify\nimport math\nfrom math import gcd\nimport itertools as it\nfrom collections import deque \n\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\ndef inpl():\n    return list(map(int, input().split()))\n\nINF = 1001001001\n\n# ---------------------------------------\n\ndef main():\n    n = inp()\n    k = inp()\n    x = inp()\n    y = inp()\n    if n > k:\n        print((x * k + y * (n - k)))\n    else:\n        print((x * n))\n\nmain()\n", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\nif n<k:\n  print(n*x)\nelse:\n  print((n-k)*y + k*x)", "L = [int(input()) for _ in range(4)]\nprint(L[2]*min(L[0],L[1])+L[3]*max(0,L[0]-L[1]))", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\n \nn1 = n - k\nif n > k:\n    print((k*x)+(y*n1))\nelse:\n    print(n*x)", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\n\nif n <= k:\n    print(x*n)\nelse:\n    print((x*k) + (y*(n-k)))", "def iroha():\n    n, k, price, special = [int(input()) for i in range(4)]\n    result = 0\n    for i in range(n):\n        if i < k:\n            result += price\n        else:\n            result += special\n    print(result)\n\ndef __starting_point():\n    iroha()\n\n__starting_point()", "a,b,c,d=[int(input()) for i in range(4)]\nprint(min(a,b)*c+max(0,(a-b))*d)", "n,k,x,y = [int(input()) for i in range(4)]\ncost=(min(n,k)*x+max(0,n-k)*y)\nprint(cost)", "val = [int(input()) for i in range(4)]\nif val[0] > val[1] :\n    print(val[1] * val[2] + (val[0] - val[1]) * val[3])\nelse:\n    print(val[0] * val[2])", "import sys\nN, K, X, Y = map(int, sys.stdin.readlines())\nprint(N*X if N <= K else K*X +Y*(N-K))", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\n\nif n > k:\n    total = (k * x) + (n - k) * y\n    print(total)\nelse:\n    total = n * x\n    print(total)", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\nans = 0\nif n>k:\n  ans = (k*x) + (n-k)*y\nelse:\n  ans = n*x\nprint(ans)", "N=int(input())\nK=int(input())\nX=int(input())\nY=int(input())\n#print(type(N))\n\nif N<=K:\n  daikin = X*N\nelse:\n  daikin = X*K+Y*(N-K)\nprint(daikin)", "\nn = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\nif n <= k:\n  print(n*x)\nelse:\n  print(k*x + (n-k)*y)", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\n\nif n <= k:\n    print((n*x))\nelse:\n    print((k*x + (n-k)*y))\n", "total = int(input())\ninitial = int(input())\nif initial > total:\n  initial = total\na = int(input())\nb = int(input())\ncount = 0\nfor i in range(initial):\n  count+= a\nfor c in range(total - initial):\n  count+=b\n\nprint(count)\n", "from sys import stdin\ninput = stdin.readline\n\nn, k, x, y = list(map(int, stdin.read().split()))\n\nprint((min(k, n) * x + max(0, n - k) * y))\n", "n=int(input())\nk=int(input())\nx=int(input())\ny=int(input())\nans =0\nfor i in range(n):\n    if(i+1<=k):\n        ans += x\n    if(i+1>k):\n        ans += y\nprint(ans)\n        \n", "n = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\n\nif n > k:\n    print(k*x+(n-k)*y)\nelse: \n    print(n*x)"]