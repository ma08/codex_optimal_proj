["n = int(input())\nA = list(map(int, input().split()))\n\nA.sort()\ni = 0\nj = 0\nans = 0\n\nwhile j < len(A):\n    ans = max(ans, j - i)\n    if i == j or A[j] - A[i] <= 5:\n        j += 1\n    else:\n        i += 1\n\nprint(max(ans, j - i))\n", "n = int(input())\na = list(sorted(map(int, input().split())))\n\nmaxsize = 0\nj = 0\nfor i in range(len(a)):\n    while a[i] - a[j] > 5:\n        j += 1\n    maxsize = max(maxsize, i - j + 1)\n\nprint(maxsize)\n", "def main():\n    n = int(input())\n    arr = sorted(list(map(int, input().split())))\n    ans = 0\n    a = 0\n    b = 0\n    while b < n:\n        if (arr[b] - arr[a] <= 5):\n            ans = max(ans, b - a + 1)\n            b += 1\n        else:\n            a += 1\n    print(ans)\n \n \nmain()\n", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nm = 0\ni = 0\nfor j in range(n):\n    while a[j] - a[i] > 5:\n        i += 1\n    m = max(m, j - i + 1)\nprint(m)", "n = int(input())\n\na = list(map(int, input().split()))\n\nd = {}\n\nfor c in a:\n\td[c] = d.get(c, 0) + 1\n\nb = []\n\nmx = 0\n\nfor c in d:\n\tans = 0\n\tfor i in range(0, 6):\n\t\tans += d.get(c + i, 0)\n\tif ans > mx:\n\t\tmx = ans\n\nprint(mx)\n", "n = int(input())\nai = list(map(int,input().split()))\nai.sort()\nans = 0\nfor i in range(n-1,-1,-1):\n    if ai[-1] - ai[i] > 5:\n        break\n    ans += 1\n    \nnum = 0\nnum2 = 0\nwhile num2 < n:\n    if ai[num2] - ai[num] < 6:\n        ans = max(ans, num2 - num + 1)\n        num2 += 1\n    else:\n        num += 1\nprint(ans)\n", "n = int(input())\nA = list(map(int, input().split()))\nz = {}\nans = 0\nfor i in range(n):\n    if A[i] not in z:\n        z[A[i]] = 0\n    z[A[i]] += 1\nfor x in z:\n    cnt = 0\n    cnt += z[x]\n    if x + 1 in z:\n        cnt += z[x + 1]\n    if x + 2 in z:\n        cnt += z[x + 2]\n    if x + 3 in z:\n        cnt += z[x + 3]\n    if x + 4 in z:\n        cnt += z[x + 4]\n    if x + 5 in z:\n        cnt += z[x + 5]\n    ans = max(ans, cnt)\nprint(ans)", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nans = 1\nl = 0\nr = 0\nwhile(l < n - 1):\n    if l > r:\n        r = l\n    while r < n - 1:\n        if a[l] < a[r + 1] - 5:\n            break\n        r += 1\n    if r - l + 1 > ans:\n        ans = r - l + 1\n    l += 1\nprint(ans)", "n = int(input())\nl = sorted(map(int, input().split()))\nres = 0\ni = 0\nwhile i < n:\n    j = i + 1\n    while j < n and l[j] - l[i] <= 5:\n        j += 1\n    res = max(res, j - i)\n    if j == n:\n        break\n    while i <= j and l[j] - l[i] > 5:\n        i += 1\nprint(res)", "n=int(input())\na=sorted(map(int,input().split()))\nleft,right=0,0\nans=1\nwhile right<n-1:\n    if a[right+1]-a[left]<=5:\n        right+=1\n        ans=max(ans,right-left+1)\n    elif left<right:\n        left+=1\n    else:\n        left+=1\n        right+=1\nprint(ans)", "n = int(input())\na = sorted(list(map(int, input().split())))\nleft, r = 0, 1\nans = 0\nwhile r < n:\n    while r < n and a[r] - a[left] <= 5:\n        r += 1\n    ans = max(ans, r - left)\n    left += 1\nprint(max(ans, 1))\n", "n = input()\nn = int(n)\na = input()\na = [int(i) for i in a.split()]\na.sort()\n\n_min = 0\n_max = 0\n_dict = {}\nfor i in a:\n    if _min < i-5:\n        _max = max(_max, sum(_dict.values()))\n        _dict = {key:value for key, value in _dict.items() if key >= i-5}\n    _dict[i] = _dict[i] + 1 if i in _dict else 1\n_max = max(_max, sum(_dict.values()))\nprint(_max)", "#!/usr/bin/pypy\n# -*- coding: utf-8 -*-\n\n\ndef main():\n    input()\n    nums = sorted(map(int, input().split()))\n    ft = 0\n    ans = 0\n    for ed in range(len(nums)):\n        num = nums[ed]\n        while num > nums[ft] + 5:\n            ft += 1\n        ans = max(ans, ed - ft + 1)\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "# -*- coding: utf-8 -*-\n# @Time    : 2019/3/7 23:26\n# @Author  : LunaFire\n# @Email   : gilgemesh2012@gmail.com\n# @File    : C. Balanced Team.py\n\nfrom collections import Counter\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    counter = Counter()\n    for x in a:\n        counter[x] += 1\n\n    ret = 0\n    for x in a:\n        tmp = 0\n        for i in range(6):\n            tmp += counter[x + i]\n        ret = max(ret, tmp)\n    print(ret)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "n=int(input())\nA=list(map(int,input().split()))\nA.sort()\n\ni=0\nj=0\nANS=0\nwhile j<n:\n    while j<n-1 and A[j+1]-A[i]<=5:\n        j+=1\n    ANS=max(ANS,j-i+1)\n    i+=1\n    j=max(j,i)\n\nprint(ANS)\n    \n        \n    \n", "n = int(input())\na = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    if a[i] not in d:\n        d[a[i]] = 1\n    else:\n        d[a[i]] += 1\n\nnum = 0\nfor k in list(d.keys()):\n    tmp = 0\n    for j in range(k, k + 6):\n        if j in d:\n            tmp += d[j]\n    num = max(num, tmp)\n\nprint(num)\n\n", "n = int(input())\nA = list(map(int, input().split()))\n\n\nA.sort()\n\nans = 0\n\ncur_min_idx = 0\ncur_students = 1\n\nidx = 1\nwhile idx < n:\n    if A[idx] - A[cur_min_idx] <= 5:\n        cur_students += 1\n        idx += 1\n    else:\n        cur_min_idx += 1\n        cur_students -= 1\n\n    ans = max(ans, cur_students)\n\nans = max(ans, cur_students)\n\nprint(ans)", "n = int(input())\nl = list(map(int,input().split()))\n\nl.sort()\n\nmaxs = 1\nmin_el = l[0]\nmin_ind = 0\n\ns = 1\n\nfor i in range(1,len(l)):\n    if l[i] - min_el <= 5:\n        s += 1\n    else:\n        min_el = l[min_ind+1]\n        min_ind = min_ind+1\n        \n    maxs = max(maxs,s)\n    \nmaxs = max(maxs,s)\n\nprint(maxs)\n", "n = int(input())\n\nL = [int(x) for x in input().split()]\n\nD = {}\n\nfor i in L:\n    if i in D:\n        D[i] += 1\n    else:\n        D[i] = 1\n        \nbest = 0\n\nfor i in D:\n    temp = 0\n    for j in range(6):\n        temp += D.get(i+j,0)\n    best = max(best,temp)\n        \nprint(best)", "n = int(input())\narr = sorted(map(int, input().split()))\nfreq = {}\nfor x in arr:\n    freq[x] = freq.get(x, 0)+1\narr = sorted(freq.keys())\n\nj = 0\ncurr = 0\nwhile j < len(arr) and abs(arr[j]-arr[0] <= 5):\n    curr += freq[arr[j]]\n    j += 1\n\ni = 1\nans = curr\nwhile i < len(arr):\n    curr -= freq[arr[i-1]]\n    while j < len(arr) and abs(arr[j]-arr[i] <= 5):\n        curr += freq[arr[j]]\n        j += 1\n    ans = max(ans, curr)\n    i += 1\nprint(ans)", "n=int(input())\na=list(map(int,input().split()))\na=sorted(a);m=0\nfrom bisect import bisect\nfor i in range(n):\n    m=max(m,bisect(a,a[i]+5)-i)\nprint(m)\n", "#map(int,input().split())\n#int(input())\nn=int(input())\na=list(map(int,input().split()))\na.sort()\ncm = 0\nans = 1\ni=1\nwhile i<n:\n    if a[i]-a[cm]<=5:\n       i+=1\n       ans = max(i-cm,ans)\n    else:\n       while cm <= i and a[i] - a[cm]>5:\n             cm+=1\nprint(ans)", "n= int(input())\na = [int(x) for x in input().split()]\na.sort()\np1,p2=0,0\nr=1\nwhile p2 < n-1:\n    p2 += 1\n    while a[p2] - a[p1] > 5:\n        p1 += 1\n    r = max(r, p2-p1+1)\nprint(r)", "n=int(input().strip())\nnumbers=list(map(int,input().strip().split(\" \")))\nnumbers.sort()\nstart=0\ncurrent=0\nl=[]\ntot=0\nwhile (current<len(numbers) and start<len(numbers)):\n    if(numbers[current]-numbers[start]>5):\n        start=start+1\n        l.append(tot)\n        tot-=1\n    else:\n        tot+=1\n        current+=1\nif(len(l)>0):\n    print(max(tot,max(l)))\nelse:\n    print(tot)"]