["n=input()\n\ncount=0\nfor i in range(1,int(n)+1):\n  l=len(str(i))\n  if l%2!=0:\n    count+=1\nprint(count)", "print(sum(len(str(i))%2!=0 for i in range(1,int(input())+1)))", "N = int(input())\nUneven_Numbers = []\n\nfor i in range(1,N+1):\n    count = len(str(i))\n    if count % 2 != 0:\n        Uneven_Numbers.append(i)\nprint(len(Uneven_Numbers))", "n=int(input())\ncnt=0\nfor i in range(n):\n\tif len(str(i+1))%2==1:\n\t\tcnt=cnt+1\nprint(cnt)\n", "n = int(input())\nif n < 10:\n    print(n)\nelif 10 <= n <= 99:\n    print((9))\nelif 100 <= n <= 999:\n    print((n - 90))\nelif 1000 <= n <= 9999:\n    print((9 + 900))\nelif 10000 <= n <= 99999:\n    print((n - 9090))\nelif 100000 <= n <= 100000:\n    print((9 + 900 + 90000))\n", "N = int(input())\ncnt = 0\n\nfor i in range(1,N+1):\n    if (len(str(i)))%2 == 1:\n        cnt+=1\nprint(cnt)", "# -*- coding: utf-8 -*-\nN = int(input())\n\nans = 0\nfor i in range(1,N+1):\n    num = len(str(i))\n    if num % 2 != 0:\n        ans += 1\n\nprint(ans)\n", "N = int(input())\n\ncount = 0\nfor i in range(1, N + 1):\n    if len(str(i)) % 2 != 0:\n        count += 1\n\nprint(count)", "N = int(input())\nN_list = []\nfor i in range(1,N+1):\n    if len(str(i)) % 2 == 1:\n        N_list.append(i)\nprint(len(N_list))", "N = int(input())\n\nodd_num = 0\nfor i in range(1, N + 1):\n\n    if len(str(i)) % 2 == 1:\n        odd_num += 1\n\nprint(odd_num)", "N = int(input())\n\ncnt = 0\nfor i in range(1,N+1):\n    if len(str(i)) % 2 == 1:\n        cnt += 1\n\nprint(cnt)", "N = int(input())\n\nkazu = 1\nif N < 10:\n    kazu = N\nelif N < 100:\n    kazu = 9\nelif N < 1000:\n    kazu = N - 90\nelif N < 10000:\n    kazu = 900+9\nelif N < 100000:\n    kazu = N - 9000 - 90\nelif N == 100000:\n    kazu = 90000+900+9\n\nprint(kazu)\n", "n=int(input())\ncount=0\nfor i in range(1,n+1):\n    num=list(str(i))\n    if len(num)%2==1:\n        count+=1\nprint(count)", "import array\nimport bisect\n\n\ndef answer(n: int) -> int:\n    numbers = array.array('L')\n\n    i = 0\n    while 100 ** i <= n:\n        start = 100 ** i\n        stop = int('9' * len(str(start))) + 1\n        numbers.extend(list(range(start, stop)))\n        i += 1\n\n    return bisect.bisect_right(numbers, n)\n\n\ndef main():\n    n = int(input())\n    print((answer(n)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = input()\nn = int(N)\nans = 0\n\nif(len(N) == 1):\n    print(n)\n    return\nif(len(N) % 2 == 1):\n    ans += n - (10 ** (len(N)-1)) + 1\n    n -= ans\n    for i in range(1,len(str(n))+1):\n        if(i % 2 == 1):\n            ans += 9 * (10 ** (i - 1))\n    print(ans)\nelse:\n    n -= n - (10 ** (len(N)-1)) + 1\n    for i in range(1,len(str(n))+1):\n        if(i % 2 == 1):\n            ans += 9 * (10 ** (i - 1))\n    print(ans)", "N = int(input())\n\ncnt = 0\nfor i in range(1, N+1):\n    if len(str(i)) & 1 == 1:\n        cnt += 1\n\nprint(cnt)", "N = int(input())\n\nketa = []\nfor i in range(1,N+1):\n    keta.append(len(str(i)))\n\nodd = list(filter(lambda n: n % 2 == 1, keta))\nprint(len(odd))", "n = int(input())\nans = 0\nfor i in range(1,n+1):\n    if len(str(i)) % 2 == 1:\n        ans += 1\nprint(ans)", "def LI(): return list(map(int, input().split()))\ndef I(): return map(int, input().split())\nmod = 10**9 + 7\n\ndef main():\n  n = int(input())\n  ans = 0\n  for i in range(1, n+1):\n    if len(str(i)) % 2 == 1:\n      ans += 1\n  print(ans)\ndef __starting_point():\n  main()\n__starting_point()", "N = int(input())\nii = 0\nfor i in range(1,N+1):\n    s = str(i)\n    if len(s) % 2 == 1:\n        ii += 1\nprint(ii)", "n = int(input())\nans = 0\nfor i in range(1, n+1):\n\tif len(str(i)) % 2 == 1:\n\t\tans += 1\nprint(ans)", "n = int(input())\nans = 0\nfor i in range(1, n + 1):\n    if len(str(i)) % 2 != 0:\n        ans += 1\n\nprint(ans)\n\n", "n = int(input())\nt = 0\nfor i in range(n):\n    if len(str(i + 1)) % 2 == 1:\n        t += 1\nprint(t)\n", "n = int(input())\nans = 0\n\nfor i in range(1,n+1):\n  s = str(i)\n  if len(s) % 2 == 1:\n    ans +=1\nprint(ans)", "n = int(input())\n\ncount = 0\n\nfor i in range(1, n + 1):\n    if len(str(i)) % 2 == 1:\n        count += 1\n\nprint(count)", "n = int(input())\n\nans = 0\n\nfor i in range(1, n + 1):\n    if len(str(i)) % 2 == 1:\n        ans += 1\n\nprint(ans)\n", "n = int(input())\nans = 0\nfor i in range(1,n+1):\n    if len(str(i))%2==0:\n        continue\n    ans += 1\nprint(ans)", "N = int(input())\ncnt = 0\nfor i in range(1,N+1):\n    if len(str(i)) %2 == 1:\n        cnt += 1\n\nprint(cnt)", "n = int(input())\n\ns = len(str(n))\n\nif s == 1:\n    print(n)\nelif s == 2:\n    print((9))\nelif s == 3:\n    print((n-90))\nelif s == 4:\n    print((9+900))\nelif s == 5:\n    print((9+900+n-10000+1))\nelse:\n    print((90909))\n", "n = int(input())\n\n\nctn = 0\nfor i in range(1, n + 1):\n    if len(str(i)) % 2 == 1:\n        ctn += 1\n        \n        \nprint(ctn)", "n = int(input())\nans = 0\nfor i in range(1, n+1):\n    if len(str(i))%2 != 0:\n        ans += 1\nprint(ans)", "def resolve():\n    n = int(input())\n    cnt = 0\n    for i in range(1,n+1):\n        if len(str(i))%2 != 0:\n            cnt += 1\n    print(cnt)\nresolve()", "n = int(input())\na = 0\nfor i in range(1, n+1):\n    if len(str(i)) % 2 != 0:\n        a += 1\nprint(a)", "n=int(input())\nans=0\nfor i in range(1,n+1):\n    if len(str(i))%2==1:\n        ans+=1\nprint(ans)", "N = int(input())\ncount = 0;\nfor i in range(1, N + 1):\n  if len(str(i)) % 2 != 0:\n    count += 1\nprint(count)\n", "n = int(input())\ncount = 0\nfor i in range(1, n+1):\n    number = list(str(i))\n    if len(number) % 2 != 0:\n        count += 1\nprint(count)\n", "n = int(input())\n# n\u500b\u306e\u6574\u6570\u306e\u30ea\u30b9\u30c8\nnum_list = []\n# \u5076\u6570\u306e\u6841\u6570\u306e\u6574\u6570\u306e\u30ea\u30b9\u30c8\nnum_odd_list = []\n\n# n\u500b\u306e\u6574\u6570\u306e\u30ea\u30b9\u30c8\u306b\u4ee3\u5165\nfor i in range(1, n + 1):\n    num_list.append(i)\n\n# \u5076\u6570\u306e\u6841\u6570\u306e\u6574\u6570\u3092\u30ea\u30b9\u30c8\u306b\u4ee3\u5165\nfor j in num_list:\n    if 10 <= j < 100 or 1000 <= j < 10000 or 100000<= j < 1000000:\n       num_odd_list.append(j)\n\n# \u5168\u4f53\u306e\u6574\u6570\u306e\u6570\u304b\u3089\u5076\u6570\u306e\u6841\u6570\u306e\u6574\u6570\u306e\u6570\u3092\u5f15\u304f\nprint(len(num_list) - len(num_odd_list))", "N = int(input())\ncount = 0\nfor i in range(1,N+1):\n    if len(str(i)) % 2 != 0:\n        count += 1\nprint(count)", "N = int(input())\ncnt = 0\nfor i in range(1, N+1):\n    if len(str(i))%2 != 0:\n        cnt += 1\nprint(cnt)", "N = int(input())\nnum = 0\n\nfor i in range(1,N+1):\n    if len(str(i)) % 2 == 1:\n        num += 1\nprint(num)", "a = input()\nN = int(a)\n\nif N == 10**5:\n    print((90909))\nelif N >= 10**4:\n    print((N-(9000+90)))\nelif N >= 10**3:\n    print((909))\nelif N >= 10**2:\n    print((N-90))\nelif N >= 10:\n    print((9))\nelse:\n    print(N)\n", "N = int(input())\n\ni = 1\nresult = 0\n\nwhile i <= N:\n    i_l = len(str(i))\n\n    if i_l % 2 != 0:\n        result += 1\n\n    i += 1\n\nprint(result)", "N = int(input())\n\nanswer = 0\n\nfor i in range(1,N + 1):\n     if len(str(i)) % 2 == 1:\n        answer += 1\n\nprint(answer)", "n = int(input())\nl = list()\nfor i in range(1, n+1):\n    m = list(str(i))\n    if len(m) % 2 != 0:\n        l.append(i)\nprint((len(l)))\n", "N=int(input())\nans=0\n\nfor i in range(1,N+1):\n    if len(str(i))==1 or len(str(i))==3 or len(str(i))==5:\n        ans+=1\n        \nprint(ans)", "n=int(input())\nans=0\nfor i in range(1,n+1):\n  if len(str(i))%2==1:\n    ans+=1\nprint(ans)", "n = int(input())\nans = 0\nfor i in range(1,n+1):\n  if len(str(i))%2 == 1:\n    ans += 1\nprint(ans)", "n = int(input())\nans = 0\n\nfor i in range(1, n + 1):\n    if len(str(i)) % 2 == 1:\n        ans += 1\n\nprint(ans)", "n = int(input())\ncnt = 0\nfor i in range(1,n+1):\n    if len(str(i)) % 2 == 1:\n        cnt += 1\n\nprint(cnt)\n", "S = str(input())\nN = len(S)\nans = 0\nfor i in range(1,N,2):\n    ans += 9*10**(i-1)\nif N % 2 != 0:\n    ans += int(S) - 10**(N-1) +1\nprint(ans)", "def main():\n    n = int(input())\n    ans = 0\n    for v in range(1, n+1):\n        if len(str(v))%2 == 1:\n            ans += 1\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\nans = 0\nfor i in range(1,n+1):\n    if len(str(i))%2 == 1:\n        ans+=1\nprint(ans)", "N=int(input())\ncnt=0\nfor i in range(N+1):\n  S=str(i)\n  if len(S)%2==1:\n    cnt+=1\nprint(cnt-1)", "# \u6574\u6570 N \u304c\u4e0e\u3048\u3089\u308c\u307e\u3059\u3002 N \u4ee5\u4e0b\u306e\u6b63\u306e\u6574\u6570\u306e\u3046\u3061\u3001(\u5148\u982d\u306b 0 \u3092\u3064\u3051\u305a\u306b\u5341\u9032\u6cd5\u3067\u8868\u8a18\u3057\u305f\u3068\u304d\u306e) \u6841\u6570\u304c\u5947\u6570\u3067\u3042\u308b\u3088\u3046\u306a\u3082\u306e\u306e\u500b\u6570\u3092\u6c42\u3081\u3066\u304f\u3060\u3055\u3044\u3002\n\nN = int(input())\n\nans = 0\n\nfor i in range(1,N+1):\n    S = list(str(i))\n    if len(S) % 2 == 1:\n        ans += 1\nprint(ans)", "N = int(input())\nn = list(map(int, str(N)))\na = len(n)\n\nif a % 2 == 0:\n    print((int((10**int(a)-1)/11)))\nelse:\n    if a == 1:\n        print(N)\n    else:\n        print((int(((100**int(a/2)-1)/11))+N-10**int(a-1)+1))\n", "n=int(input())\nans=0\nfor i in range(1,n+1):\n    if len(str(i))%2!=0:\n        ans+=1\nprint(ans)", "N = int(input())\ncnt = 0\nfor i in range(1, N + 1):\n    if len(str(i)) & 1:\n        cnt += 1\n\nprint(cnt)", "N = int(input())\nans = 0\nfor x in range(1, N + 1):\n    if len(str(x)) % 2 == 1:\n        ans += 1\nprint(ans)", "N=int(input())\n\ncnt=0\nfor i in range(1,N+1):\n\tif len(str(i))%2!=0:\n\t\tcnt+=1\n        \nprint(cnt)", "n = int(input())\ncount = 0\nfor i in range(1, n+1):\n  if len(str(i)) % 2 == 1:\n    count += 1\n    \nprint(count)", "n = int(input())\ncnt = 0\nfor i in range(1, n+1):\n    if len(str(i)) % 2 != 0:\n        cnt += 1\nprint(cnt)\n", "N = int(input())\n\n# N\u4ee5\u4e0b\u306e\u6b63\u306e\u6574\u6570\u306e\u3046\u3061\u3001\u6841\u6570\u304c\u5947\u6570\uff081\u6841\u30013\u6841\u30015\u6841\u306a\u3069\uff09\u3067\u3042\u308b\u3088\u3046\u306a\u3082\u306e\u306e\u500b\u6570\u3092\u51fa\u529b\n\ncount = 0\n\nfor i in range(1, N + 1):\n    if (len(str(i))) % 2 == 1:\n        count += 1\nprint(count)", "N=int(input())\nans=0\nfor i in range(1,N+1):\n\tif len(str(i))%2!=0:\n\t\tans+=1\n\nprint(ans)", "import math\nimport collections\nimport itertools\n\ndef resolve():\n\n    N=int(input())\n\n    ans=0\n    for i in range(1,N+1):\n        if(10<=i<=99 or 1000<=i<=9999 or 100000<=i<=999999):\n            continue\n        ans+=1\n    print(ans)\nresolve()\n", "N = int(input())\ncnt = 0\nfor i in range(1,N+1) :\n    S = list(str(i))\n    if len(S) % 2 != 0 :\n        cnt += 1\n\nprint(cnt)", "N = int(input())\nn = len(str(N))\nans = 0\nfor i in range(1, n+1):\n    if i == n and n % 2 != 0:\n        ans += N - 10 ** (n - 1) + 1\n        break\n    elif i % 2 != 0:\n        ans += 9 * 10 ** (i - 1)\nprint(ans)", "# import math\n# import statistics\n# import itertools\na=int(input())\n#b,c=int(input()),int(input())\n# c=[]\n# for i in a:\n#     c.append(int(i))\n# H,W,K= map(int,input().split())\n# f = list(map(int,input().split()))\n# g = [input().split for _ in range(a)]\n# h = []\n# for i in range(a):\n#     h.append(list(map(int,input().split())))\n# a = [[0] for _ in range(H)]#nizigen\n\nlis=[str(i) for i in range(1,a+1)]\n\ncount=0\nfor i in lis:\n    if int(len(i))%2!=0:\n        count+=1\nprint(count)", "n = int(input())\nans =0\nfor i in range(1,n+1):\n    if len(str(i)) % 2 != 0:\n        ans += 1\nprint(ans)\n", "def __starting_point():\n    N = int(input())\n    ans = 0\n    for n in range(1, N+1):\n        if len(str(n))%2 != 0:\n            ans += 1\n\n    print(ans)\n__starting_point()", "N = int(input())\ncnt = 0\n\nfor i in range(1, N + 1):\n    if len(str(i)) % 2 == 1:\n        cnt += 1\nprint(cnt)", "N = int(input())\ncnt = 0\nfor i in range(1,N+1):\n    if len(str(i))%2 == 1:\n        cnt += 1\nprint(cnt)\n\n", "n = int(input())\n\nanswer = 0\nfor i in range(1, n+1):\n    if len(str(i)) % 2 == 1:\n        answer += 1\nprint(answer)\n\n", "n = int(input())\n\nans = 0\n\nfor i in range(1, n+1):\n    if len(str(i))%2:\n        ans += 1\n\nprint(ans)", "n=int(input())\ncnt=0\nfor i in range(1,n+1):\n  if len(str(i))%2: cnt+=1;\nprint(cnt)", "n = int(input())\n\nans = 0\n\n\ndef check_even(n):\n    n_l = list(str(n))\n    n_count = len(n_l)\n    if n_count % 2 == 0:\n        return True\n    else:\n        return False\n\n\nfor i in range(1, n + 1):\n    if check_even(i):\n        continue\n    ans += 1\nprint(ans)\n", "#ABC136 B\n\nN = int(input())\nimport math\ndigit = int(math.log10(N)) + 1\nS = 0\nif digit % 2 == 0:\n    for i in range(1,int(digit/2) + 1):\n        S += pow(10,2*i-1) - pow(10,2*i-2)\n    print(S)\nif digit % 2 == 1:\n    for i in range(1,int((digit + 1)/2)):\n        S += pow(10,2*i -1) - pow(10,2*i - 2)\n    S += N - pow(10,digit - 1) + 1\n    print(S)", "n = input()\nl = len(n)\nif l == 1:\n    print(n)\nelif l == 2:\n    print(9)\nelif l == 3:\n    print(9 + int(n) - 99 )\nelif l == 4:\n    print(909)\nelif l == 5:\n    print(909 + int(n) - 9999)\nelse:\n    print(90909)", "N=int(input())\n\ndef ans136(N):\n    odd_count=0\n    for i in range(1,N+1):\n        if len(str(i))%2==1:\n           odd_count+=1\n\n    return odd_count\n\nprint((ans136(N)))\n", "N = int(input())\nans = 0\nfor i in range(1,N+1):\n    if len(str(i)) % 2 != 0:\n        ans += 1\n\nprint(ans)", "print((sum(len(str(i + 1)) % 2 for i in range(int(input())))))\n", "n = int(input())\nans = 0\nfor i in range(1, n+1):\n    if len(str(i)) % 2 == 1:\n        ans += 1\n\nprint(ans)", "import math\n\nn = int(input())\ncount = 0\n\nfor i in range(n):\n    if len(str(i)) % 2 != 0:\n        count += 1\n\nif len(str(n)) % 2 == 0:\n    count -= 1\n    \nprint(count)", "n = int(input())\n\nl = len(str(n))\n\nif l == 6:\n    ans = 90909\n\nelif l == 5:\n    ans = n - 9090\n\nelif l == 4:\n    ans = 909\n\nelif l == 3:\n    ans = n - 90\n\nelif l == 2:\n    ans = 9\n\nelse:\n    ans = n\n\nprint(ans)", "n = int(input())\nans = 0\nfor i in range(1,n+1):\n    if len(str(i)) % 2 == 1:\n        ans += 1\nprint(ans)", "n = int(input())\ncnt = 0\nfor i in range(1, n+1):\n    if len(str(i)) % 2 != 0:\n        cnt += 1\nprint(cnt)\n", "N = int(input())\ncount = 0\nfor i in range(1,N+1):\n    if len(str(i))%2 == 1:\n        count += 1\n\nprint(count)", "N=int(input())\nAns=0\n\nfor i in range(1,N+1):\n  if len(str(i))%2==1:\n    Ans+=1\n\nprint(Ans)", "N=int(input())\ncount=0\nfor i in range(1,N+1):\n    if len(str(i)) % 2 == 1: count+=1\nprint(count)", "n=int(input())\ncount=0\nfor i in range(1,n+1):\n    s=str(i)\n    if(len(s)%2!=0):\n        count+=1\nprint(count)", "N = int(input())\n\nif N<10:\n  print(N)\nelif 10<=N and N<100:\n  print(9)\nelif 100<=N and N<1000:\n  print(9 + (N-100+1))\nelif 1000<=N and N<10000:\n  print(909)\nelif 10000<=N and N<100000:\n  print(909 + (N-10000+1))\nelse:\n  print(90909)", "N = int(input())\ncount=0\nfor i in range(1,N+1):\n  if len(str(i))%2==0:continue\n  else:count+=1\nprint(count)", "N = int(input())\nans = 0\nfor i in range(1, N+1):\n  if len(str(i))%2 == 1:\n    ans += 1\nprint(ans)", "n = int(input())\n\nans = 0\nfor i in range(1, n + 1):\n    if len(str(i)) % 2 == 1:\n        ans += 1\n\nprint(ans)\n", "\nn = int(input())\nans = 0\n\nfor i in range(1, n + 1):\n    if len(str(i)) % 2 == 1:\n        ans += 1\n\nprint(ans)", "import math\n\nN = int(input())\nm = int(math.log10(N))+1\na = N//(pow(10,m))\n\nans = 0\nfor i in range(1,m,2):\n    ans += 9*pow(10,i-1)\n\nif m%2 == 1:\n    ans += N-pow(10,m-1)+1\nprint(ans)\n", "n = int(input())\nans = 0\nfor i in range(1, n+1):\n  s = list(str(i))\n  if len(s) % 2 == 1:\n    ans += 1\nprint(ans)", "N = int(input())\nans = 0\nfor i in range(1, N+1):\n  if len(str(i))%2 == 1:\n    ans += 1\nprint(ans)", "n = int(input())\na = 0\nfor i in range(1, n+1):\n  if len(str(i)) % 2 == 1:\n    a += 1\nprint(a)", "n=int(input())\nans=0\nfor i in range(1,n+1):\n    if len(str(i))%2!=0:\n        ans+=1\nprint(ans)", "N = int(input())\nans = 0\n\ndef count_dig(N):\n    cnt = 0\n    while(True):\n        cnt += 1\n        if(N < 10):\n            break\n        else:\n            N /= 10\n    return cnt\n\nfor i in range(1, N+1):\n    if(count_dig(i) % 2 == 1):\n        ans += 1\n\nprint(ans)\n"]