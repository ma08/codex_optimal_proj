["n = int(input())\nl = list(map(int,input().split()))\ncnt = 0\nfor i in range(0,n-2):\n    for j in range(i+1,n-1):\n        for k in range(j+1,n):\n            x = [l[i],l[j],l[k]]\n            ma = sorted(x)[2]\n            _ma = sorted(x)[0] + sorted(x)[1]\n            if l[i] != l[j] and l[i] != l[k] and l[j] != l[k] and ma < _ma:\n                cnt += 1\nprint(cnt)", "n = int(input())\nl = [int(s) for s in input().split()]\nl.sort(key=int)\n\ncount = 0\nfor i in range(len(l)):\n    for j in range(i+1,len(l)):\n        for t in range(j+1,len(l)):\n            if l[i] + l[j] > l[t] and l[i] != l[j] != l[t]:\n                count += 1\nprint(count)", "N=int(input())\nL = list(map(int, input().split()))\n\ncount=0\nfor i in range(0,N-2):\n\tfor j in range(0,N-i-2):\n\t\tfor k in range(0,N-2-j-i):\n\t\t\tif L[i]!=L[j+1+i] and L[i]!=L[k+i+2+j] and L[j+1+i]!=L[k+2+i+j]:\n\t\t\t\tif L[i]+L[j+1+i]>L[k+2+i+j] and L[i]+L[k+2+i+j]>L[j+1+i] and L[k+2+i+j]+L[j+1+i]>L[i]:\n\t\t\t\t\tcount+=1\n\nprint(count)", "n = int(input())\nl = list(map(int, input().split()))\nl.sort()\nans = 0\nfor i in range(n-2):\n  for j in range(i+1, n-1):\n    for k in range(j+1, n):\n      a = l[i]\n      b = l[j]\n      c = l[k]\n      if a != b and b != c and c < a + b:\n        ans += 1\nprint(ans)", "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\nans = 0\n\nfor i in range(n):\n    for j in range(n):\n        for k in range(n):\n            if  l[i] < l[j] < l[k] and l[i] + l[j] > l[k] :\n                ans += 1\n                \nprint(ans)", "N = int(input())\nL = sorted(list(map(int, input().split())))\nans = 0\nfor i in range(N - 2):\n    side1 = L[i]\n    for j in range(i + 1, N - 1):\n        side2 = L[j]\n        if side1 == side2:\n            continue\n        lim = side1+ side2\n        for k in range(j+1,N):\n            side3 = L[k]\n            if side3 >= lim:\n                break\n            if side3 != side2:\n                ans += 1\n\nprint(ans)", "N = int(input())\nL = list(map(int,input().split()))\np = 0\n\nfor i in range(0,N):\n    for j in range(i+1,N):\n        for k in range(j+1,N):\n            if L[i] + L[j] > L[k] and L[k] + L[i] > L[j] and L[j] + L[k] > L[i] and L[i] != L[j] != L[k] != L[i]:\n                p += 1\n            else:\n                pass\n\nprint(p)", "n = int(input())\nl = list(map(int, input().split()))\nls = sorted(l)\n\nans = 0\n\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            a, b, c = ls[i], ls[j], ls[k]\n            if len(set([a,b,c])) == 3:\n                if a + b > c:\n                    ans += 1\n\nprint(ans)\n\n\n", "N = int(input())\nL = list(map(int,input().split()))\n\nL.sort()\nans = 0\nfor i in range(N):\n    for j in range(i+1,N):\n        for k in range(j+1,N):\n            if len(set([L[i],L[j],L[k]]))== 3 and L[i]+L[j]>L[k] : ans += 1\n\nprint(ans)", "import itertools\n\nn = int(input())\nnumbers = list(map(int, input().split()))\n\n\ndef canMakeTriangle(a, b, c):\n    return (a < b + c) and (b < a + c) and (c < a + b)\n\n\ndef isDifferentLength(a, b, c):\n    return (a != b) and (b != c) and (c != a)\n\n\ndef isTargetTriangle(a, b, c):\n    return isDifferentLength(a, b, c) and canMakeTriangle(a, b, c)\n\n\ntotal = 0\nfor (a, b, c) in list(itertools.combinations(numbers, 3)):\n    if isTargetTriangle(a, b, c):\n        total += 1\n\nprint(total)\n", "N = int(input())\nL = list(map(int, input().split()))\nL.sort()\ncount = 0\nfor i in range(N):\n    for j in range(i + 1, N):\n        for k in range(j + 1, N):\n            if L[i] != L[j] != L[k] and L[i] + L[j] > L[k]:\n                count += 1\nprint(count)", "n = int(input(\"\"))\ns = list(map(int,input().split()))\ncnt = 0\ns.sort()\n\nfor i in range(0,n-2):\n    for j in range(i+1,n-1):\n        for k in range(j+1,n):\n            if s[i] != s[j] != s[k]:\n                if s[i] + s[j] > s[k]:\n                    cnt += 1\n\nprint(cnt)", "N = int(input())\nL = list(map(int,input().split()))\nans = 0\nlines = []\nfor i in range(N):\n    for j in range(i+1,N):\n        for k in range(j+1,N):\n            if L[i] != L[j] and L[j] != L[k] and L[k] != L[i]:\n                lines = []\n                lines.append(L[i])\n                lines.append(L[j])\n                lines.append(L[k])\n                lines.sort()\n                if lines[0]+lines[1] > lines[2]:\n                    ans += 1\nprint(ans)", "n = int(input())\nL = sorted(list(map(int, input().split())))\n\n# a+b>c \u304b\u3064 b+c>a \u304b\u3064 c+a>b\ncnt = 0\nfor i in range(n - 2):\n    a = L[i]\n    for j in range(i + 1, n - 1):\n        b = L[j]\n        if a != b:\n            for k in range(j + 1, n):\n                c = L[k]\n                if a != c and b != c and a + b > c and b + c > a and c + a > b:\n                    cnt += 1\n\nprint(cnt)\n", "n = int(input())\n\nl = list(map(int, input().split()))\n\nl = sorted(l)\n\nans = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        for k in range(j + 1, n):\n            if (l[i] < l[j] < l[k]) and (l[i] + l[j] > l[k]):\n                ans += 1\n\nprint(ans)\n", "def isTri(a,b,c):\n  if (a+b>c and b+c>a and c+a>b):\n    return True\n  return False\n\ndef isDiffEach(a,b,c):\n  if (a!=b and b!=c and c!=a):\n    return True\n  return False\n  \ndef main():\n  n=int(input())\n  l=list(map(int,input().split()))\n  c=0\n  for i in range(n):\n    for j in range(i+1,n):\n      for k in range(j+1,n):\n        if isTri(l[i],l[j],l[k]) and isDiffEach(l[i],l[j],l[k]):\n          c+=1\n  print(c)\n\nmain()", "n=int(input())\nl=list(map(int,input().split()))\nl.sort()\nans=0\nfor i in range(n):\n    for j in range(i+1,n):\n        for k in range(j+1,n):\n            if l[i]+l[j]>l[k] and l[i]!=l[j] and l[j]!=l[k]:\n                ans+=1\nprint(ans)", "import itertools\nn = int(input())\nl = list(map(int, input().split()))\nans = 0\n\nfor comb in itertools.combinations(l, 3):\n    li = list(comb)\n    li.sort()\n    if li[2] < li[0]+li[1] and li[0] != li[1] != li[2]:\n        ans += 1\n\nprint(ans)\n", "N = int(input())\nL = list(map(int, input().split()))\nans = 0\nfor i in range(N-2):\n    for j in range(i + 1, N-1):\n        for k in range(j + 1, N):\n            if (L[i] + L[j] + L[k] > max(2 * L[i], 2 * L[j], 2 * L[k])) and (L[i] != L[j]) and (L[j] != L[k]) and (L[k] != L[i]):\n                ans += 1\nprint(ans)", "n = int(input())\nl = list(map(int, input().split()))\n\nans = 0\nfor i in range(n-2):\n    for j in range(i+1, n-1):\n        if l[i] == l[j]:\n            continue\n        for k in range(j+1, n):\n            if l[i] != l[k] != l[j] and max(l[i], l[j], l[k]) < l[i]+l[j]+l[k]-max(l[i], l[j], l[k]):\n                ans += 1\nprint(ans)", "N = int(input())\nL_l = sorted(map(int,input().split()))\nans = 0\nfor i in range(N):\n    for j in range(i+1, N):\n        for k in range(j+1, N):\n            if L_l[i] < L_l[j] and L_l[j] < L_l[k] and L_l[i] + L_l[j] > L_l[k]:\n                ans += 1\n            else:\n                continue\nprint(ans)", "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\nans = 0\n\nfor i in range(n):\n    for j in range(n):\n        for k in range(n):\n            if l[i] < l[j] < l[k] and l[i] + l[j] > l[k]:\n                ans += 1\nprint(ans)", "n = int(input())\nl = list(map(int,input().split()))\ncnt = 0\nfor a in range(n-2):\n    for b in range(a+1,n-1):\n        for c in range(b+1,n):\n            if len(set([l[a],l[b],l[c]])) == 3:\n                if l[a]+l[b] > l[c] and l[b]+l[c] > l[a] and l[c]+l[a] > l[b]:\n                    cnt += 1\nprint(cnt)", "# -*- coding: utf-8 -*-\n\n\n# \u5165\u529b\u3092\u6574\u6570\u306b\u5909\u63db\u3057\u3066\u53d7\u3051\u53d6\u308b\ndef input_int():\n    return int(input())\n\n\n# \u30de\u30a4\u30ca\u30b91\u3057\u305f\u5024\u3092\u8fd4\u5374\ndef int1(x):\n    return int(x) - 1\n\n\n# \u534a\u89d2\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u5165\u529b\u3092Int\u306b\u5909\u63db\u3057\u3066Map\u3067\u53d7\u3051\u53d6\u308b\ndef input_to_int_map():\n    return list(map(int, input().split()))\n\n\n# \u534a\u89d2\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u5165\u529b\u3092Int\u306b\u5909\u63db\u3057\u3066\u53d7\u3051\u53d6\u308b\ndef input_to_int_tuple():\n    return tuple(map(int, input().split()))\n\n\n# \u534a\u89d2\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u5165\u529b\u3092Int\u306b\u5909\u63db\u3057\u3066\u30de\u30a4\u30ca\u30b91\u3057\u305f\u5024\u3092\u53d7\u3051\u53d6\u308b\ndef input_to_int_tuple_minus1():\n    return tuple(map(int1, input().split()))\n\n\ndef main():\n    N = input_int()\n    L = input_to_int_tuple()\n\n    distinct_L = set(L)\n\n    ret = 0\n    if len(distinct_L) < 3:\n        return ret\n\n    # L = sorted(L)\n    for i in range(N):\n        for j in range(i + 1, N):\n            for k in range(j + 1, N):\n                li, lj, lk = L[i], L[j], L[k]\n                sorted_val = sorted([li, lj, lk])\n                if sorted_val[0] != sorted_val[1] != sorted_val[2] and (sorted_val[0] + sorted_val[1]) > sorted_val[2]:\n                    ret += 1\n\n    return ret\n\n\ndef __starting_point():\n    print((main()))\n\n__starting_point()", "\nN, = map(int,input().split())\nA = list(map(int,input().split()))\nc = 0\nn = len(A)\nif len(A)<3:\n  print(0)\n  return\nfor i in range(n):\n  for j in range(i+1,n):\n    for k in range(j+1,n):\n      if (2*max(A[i],A[j],A[k])-sum([A[i],A[j],A[k]])>=0) or A[i]==A[j] or A[j]==A[k] or A[k] == A[i]:\n        continue\n      c+=1\nprint(c)      ", "n=int(input())\na = list(map(int,input().split()))\na=sorted(a)\nans=0\nfor i in range(len(a)):\n    for j in range(i+1,len(a)):\n        for k in range(j+1,len(a)):\n            if a[i]+a[j]>a[k] and a[i]!=a[j] and a[j] != a[k]:\n                ans+=1\nprint(ans)", "n = int(input())\na = list(map(int, input().split()))\na.sort()\n\nans = 0\nfor i in range(n):\n\tfor j in range(i):\n\t\tfor k in range(j):\n\t\t\tif a[i] < a[k] + a[j] and a[i] != a[j] and a[j] != a[k]:\n\t\t\t\tans += 1\n\nprint(ans)\n", "# \u5165\u529b\nN = int(input())\nL = list(map(int, input().split()))\n\n# \u51e6\u7406\nL.sort()\ncount = 0\nfor i in range(N):\n    for j in range(0,i):\n        for k in range(0,j):\n            if (L[i] != L[j] != L[k] and\n                L[k] + L[j]  > L[i]):\n                count += 1\n\nprint(count)", "N = int(input())\nL = list(map(int, input().split()))\n\ncount = 0\nfor i in range(N-2):\n  a = L[i]\n  for j in range(N-2-i):\n    b = L[i+j+1]\n    if a == b:\n      continue\n    for k in range(N-2-i-j):\n      c = L[i+j+k+2]\n      if a == c or b == c:\n        continue\n      if a+b>c and b+c>a and c+a>b:\n        count+=1\n\nprint(count)", "#b\nn=int(input())\nl=list(map(int,input().split()))\nl.sort()\nans=0\nfor i in range(n-2):\n    for j in range(i+1,n-1):\n        for k in range(j+1,n):\n            if l[i]!=l[j] and l[j]!=l[k] and l[i]!=l[k] and l[i]+l[j]>l[k]:\n                ans+=1\n\nprint(ans)", "N = int(input())\nL = list(map(int, input().split()))\nL.sort()\ncount = 0\nfor i in range(N):\n    for j in range(i + 1, N):\n        for k in range(j + 1, N):\n            if L[i] != L[j] != L[k]:\n                if L[i] + L[j] > L[k]:\n                    count += 1\nprint(count)", "def isTri(a,b,c):\n  if (a!=b and b!=c and c!=a) and \\\n      (a+b>c and b+c>a and c+a>b):\n    return True\n  else:\n    return False\n\ndef main():\n  n=int(input())\n  l=list(map(int,input().split()))\n  c=0\n  for i in range(n):\n    for j in range(i+1,n):\n      for k in range(j+1,n):\n        if isTri(l[i],l[j],l[k]):\n          c+=1\n  print(c)\n\nmain()", "from itertools import combinations\n\nN=int(input())\nL=list(map(int,input().split()))\n\ncount=0\n\nfor a,b,c in combinations(L,3):\n  if a+b>c and a+c>b and b+c>a and a!=b and b!=c and a!=c:\n    count+=1\nprint(count)", "count = 0\nn = int(input())\nnumbers = list(map(int, input().split()))\nnumbers.sort()\nfor i in range(n - 2):\n    for j in range(i + 1, n - 1):\n        for k in range(j + 1, n):\n            if (numbers[i] + numbers[j]) > numbers[k]:\n                if numbers[i] != numbers[j] and numbers[j] != numbers[k]:\n                    count += 1\nprint(count)\n", "def cin():\n    return list(map(int, input().split()))\n\nN = int(input())\nL = cin()\ncount = 0\n\nfor i in range(0, N - 2):\n    for j in range(1 + i, N - 1, 1):\n        for k in range(1 + j, N, 1):\n            data = [L[i], L[j], L[k]]\n            data.sort()\n            if data[0] == data[1] or data[1] == data[2] or data[2] == data[0]:\n                continue\n            if data[0] + data[1] > data[2]:\n                count += 1\n            \nprint(count)\n", "n=int(input())\nl=list(map(int,input().split()))\nl.sort()\nans=0\nfor i in range(0,n):\n    for j in range(i+1,n):\n        if l[i]==l[j]:continue\n        for k in range(j+1,n):\n            if l[j]==l[k]:continue\n            if l[i]+l[j]>l[k]:ans+=1\nprint(ans)", "N = int(input())\nnums = [int(i) for i in input().split()]\nnums =sorted(nums)\nans = 0\nfor i in range(N):\n    for j in range(i + 1, N):\n        for k in range(j + 1, N):\n            # 1\u3064\u76ee\u306e\u6761\u4ef6\n            if nums[i] != nums[j] and nums[j] != nums[k]:\n                # 2\u3064\u76ee\u306e\u6761\u4ef6\n                if nums[i] + nums[j] > nums[k]:\n                    ans += 1\n                    \nprint(ans)", "def main():\n    n = int(input())\n    s = input()\n    l = s.split()\n    #print(l)\n    l = [int(x) for x in l]\n    l.sort()\n    cnt=0\n    #print(l)\n    for i in range(n):\n        for j in range(i+1,n):\n            if l[i] == l[j]:\n                continue\n            for k in range(j+1, n):\n                if l[i] == l[k] or l[j] == l[k]:\n                    continue\n                #print(\"{},{},{}\".format(l[i], l[j], l[k]))\n                cnt += triangle(l[i], l[j], l[k])\n    print(cnt)\n\ndef triangle(a, b, c):\n    if(a + b > c and b + c > a and c + a > b):\n        return 1\n    else:\n        return 0\n\ndef __starting_point():\n    main()\n__starting_point()", "N = int(input())\nl = list(map(int, input().split()))\nl.sort()\nans = 0\n\nfor i in range(N):\n    for j in range(i+1, N):\n        for k in range(j+1, N):\n            if l[i]+l[j] > l[k] and l[i] != l[j] and l[j] != l[k]:\n                ans += 1\nprint(ans)\n", "N = int(input())\nL = list(map(int,input().split()))\nL = sorted(L)\n\ncnt = 0\nfor i in range(N):\n    for j in range(i+1,N):\n        for k in range(j+1,N):\n            if L[i] == L[j] or L[j] == L[k]:\n                continue\n            if L[i] + L[j] > L[k]:\n                cnt += 1\n\nprint(cnt)\n", "# N\u3092\u53d7\u3051\u53d6\u308b\nN = int(input())\n\n# L\u3092\u53d7\u3051\u53d6\u308b\nL = list(map(int, input().split()))\n\n# \u7d44\u307f\u5408\u308f\u305b\u3092\u4f5c\u308b\nimport itertools as it\n\nc = it.combinations(L, 3)\n\n# 3\u8fba\u306e\u9577\u3055\u304c\u7570\u306a\u308b\u7d44\u307f\u5408\u308f\u305b\u3092\u4f5c\u308b & \u9577\u8fba < \u4ed62\u8fba\u306e\u548c\ncount = 0\nfor i in c:\n  #print(i[0], i[1], i[2])\n  # \u30ab\u30a6\u30f3\u30c8\u3059\u308b\n  if len(set(i)) == 3:\n    a,b,c = sorted(i, reverse=True)\n    #print(a,b,c)\n    if a < b+c:\n      count+= 1\n# \u51fa\u529b\nprint(count)", "n = int(input())\nl = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n-2):\n  for j in range(i+1, n-1):\n    for k in range(j+1, n):\n      if l[i] != l[j] and l[j] != l[k] and l[k] != l[i]:\n        if l[i] < l[j] + l[k] and l[j] < l[k] + l[i] and l[k] < l[i] + l[j]:\n          cnt += 1\nprint(cnt)", "import itertools\nN = int(input())\nL = map(int,input().split())\ncount=0\nfor i,j,k in list(itertools.combinations(L,3)):\n  if (i!=j and j!=k and i!=k) and (i+j>k and i+k>j and j+k>i):count+=1\nprint(count)", "n = int(input())\nL = list(map(int, input().split()))\ncount = 0\nfor a in range(n-2):\n    for b in range(a+1,n-1):\n        for c in range(b+1,n):\n            if L[a]+L[b]>L[c] and L[b]+L[c]>L[a] and L[c]+L[a]>L[b]:\n                if L[a]!=L[b] and L[b]!=L[c] and L[c]!=L[a]:\n                    count += 1\nprint(count)\n", "#n = int(input()) #\u5165\u529b\n#a, b = (int(x) for x in input().split())\n#a, b = map(int, input().split())\n\n#G = [input() for i in range(0, H)] #\u6587\u5b57\u5217\u3092\u8907\u6570\u884c\u306b\u6e21\u3063\u3066\n\n#a = [int(x) for x in input().split()]\n#a = list(map(int, input().split()))\n#a = [list(map(int,input().split(\" \"))) for i in range(N)]   #2\u6b21\u5143\n\n\n#a.sort() # C++ \u306e sort(a.begin(), a.end());\n#a.append(3) # C++ \u306e a.push_back(3);\n\n\n#return # return 0 \u7684\u306a\u3002\u7d42\u4e86\u3067\u304d\u308b\u3002\n## \u6574\u6570\u306e\u5207\u308a\u6368\u3066\u9664\u7b97\u306f // (\u30c0\u30d6\u30eb\u30b9\u30e9\u30c3\u30b7\u30e5)\n\n\n#a[\u59cb\u307e\u308a\u306e\u4f4d\u7f6e: \u7d42\u308f\u308a\u306e\u4f4d\u7f6e: \u30b9\u30e9\u30a4\u30b9\u306e\u5897\u5206] # (a \u306f\u914d\u5217)\n\n\n#import numpy as np  #import\u306b100 ms \u7a0b\u5ea6\u304b\u304b\u308b\u3002\nimport math\nimport copy\nimport string\n#math.gcd(a, b) \u3067\u3001gcd \u8a08\u7b97\u3067\u304d\u308b\u3002\n#math.pi \u306f\u5186\u5468\u7387\u3002\n\nINF = int(10**18) #\u3079\u304d\u4e57 C++ \u306e pow(10, 18) or 1e18;\npi = math.pi\n\nMOD = 1000000007\n#MOD = 1000000009\n#MOD = 998244353\n\n\n\n\n#\u7e70\u308a\u8fd4\u30572\u4e57\u6cd5\n#N^a\u306e\u3001M\u3067\u5272\u3063\u305f\u4f59\u308a\u3092\u6c42\u3081\u308b\u3002\ndef my_pow(N, a, M):\n    if(a == 0):\n        return 1\n    else:\n        if(a % 2 == 0):\n            tempo = my_pow(N, a/2, M)\n            return (tempo * tempo) % M\n        else:\n            tempo = my_pow(N, a - 1, M)\n            return (tempo * N) % M\n\n\n\n\n#N_C_a \u3092 M \u3067\u5272\u3063\u305f\u4f59\u308a\ndef my_combination(N, a, M):\n    res = 1\n\n    for i in range(0, a):\n        res *= N - i\n        res %= M\n\n    for i in range(0, a):\n        res *= my_pow(i + 1, M - 2, M)\n        res %= M\n\n    return res\n\n\n\n\n#N_C_i \u3092 M \u3067\u5272\u3063\u305f\u4f59\u308a\u3092\u3001v[i] \u306b\u4ee3\u5165\u3059\u308b\u3002\ndef my_combination_table(N, M, v):\n    if(len(v) < N + 1):\n        l = N + 1 - len(v)\n        tempo = [1] * l\n        v.extend(tempo)\n\n    for i in range(1, N + 1):\n        v[i] = v[i - 1] * (N - (i - 1))\n        v[i] %= M\n\n        v[i] *= my_pow(i, M - 2, M)\n        v[i] %= M\n\n    return\n\n\n\n\n#math.factorial \u3067\u968e\u4e57\u306f\u8a08\u7b97\u3067\u304d\u308b\u3002\n#math.gcd \u3067 gcd \u306f\u8a08\u7b97\u3067\u304d\u308b\u3002\n#np.gcd.reduce(A) #(A\u306f\u914d\u5217) \u3067\u3001A\u306e\u5168\u3066\u306e\u8981\u7d20\u306e gcd \u304c\u8a08\u7b97\u3067\u304d\u308b\u3002\n\n\nN = int(input())\nL =[int(x) for x in input().split()]\n\nres = 0\nfor i in range(0, N):\n    for j in range(i + 1, N):\n        for k in range(j + 1, N):\n            #print(L[i], L[j], L[k])\n            tempo = [L[i], L[j], L[k]]\n            tempo.sort()\n            \n            #print(tempo[0], tempo[1], tempo[2])\n            if(tempo[0] + tempo[1] > tempo[2] and tempo[0] < tempo[1] and tempo[1] < tempo[2]): \n                res += 1\n                #print(i, j, k)\nprint(res)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "n = int(input())\nl = list(map(int, input().split()))\n\n\nl.sort()\n\n\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        for k in range(j + 1, n):\n            if l[i] != l[j] != l[k]:\n                if l[i] + l[j] > l[k]:\n                    ans += 1\nprint(ans)\n", "import sys\ndef rs(): return sys.stdin.readline().rstrip()\ndef ri(): return int(rs())\ndef rs_(): return [_ for _ in rs().split()]\ndef ri_(): return [int(_) for _ in rs().split()]\n\nN = ri()\nL = ri_()\n\ndef f(L):\n    L_ = sorted(L)\n    return len(set(L_)) == 3 and L_[0] + L_[1] > L_[2]\n\nans = 0\nfor i in range(N):\n    for j in range(i + 1, N):\n        for k in range(j + 1, N):\n            if f([L[i], L[j], L[k]]):\n                ans += 1\nprint(ans)", "N = int(input())\nL_l = sorted(map(int,input().split()))\nans = 0\nfor i in range(N):\n    for j in range(i+1, N):\n        for k in range(j+1, N):\n            if L_l[i] < L_l[j] and L_l[j] < L_l[k] and L_l[i] + L_l[j] > L_l[k]:\n                ans += 1\n\nprint(ans)", "n=int(input())\nL=list(map(int,input().split()))\nans=0\nfor i in range(n-2):\n    for j in range(i+1,n-1):\n        for k in range(j+1,n):\n            a=L[i]\n            b=L[j]\n            c=L[k]\n            A=[a,b,c]\n            if a==b or b==c or c==a:\n                continue\n            if sum(A)-2*max(A)>0:\n                ans+=1\nprint(ans)", "# \u68d2\u306e\u9577\u3055\u3092\u30ea\u30b9\u30c8\u306b\u53d6\u5f97\u3059\u308b\nn = int(input())\nl_list = list(map(int,input().split()))\n\nl_sorted = sorted(l_list, reverse=True)\n\n# \u4e09\u89d2\u5f62\u306e\u6210\u7acb\u6761\u4ef6\u3092\u6e80\u305f\u30593\u8fba\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\ncombination_count = 0\nfor i in range(n -2):\n  l1 = l_sorted[i]\n  for j in range(i + 1 , n -1):\n    l2 = l_sorted[j]\n    for k in range(j + 1 , n):\n      l3 = l_sorted[k]\n\n      if len(set([l1, l2, l3])) == 3:\n        if l1 < l2 + l3:\n          combination_count += 1\n        else:\n          break\n\nprint(combination_count)", "def main():\n    N = int(input())\n    L = list(map(int, input().split()))\n\n    if N < 3:\n        print((0))\n        return\n\n    ans = 0\n    for i in range(N-2):\n        for j in range(i+1, N-1):\n            for k in range(j+1, N):\n                Li = L[i]\n                Lj = L[j]\n                Lk = L[k]\n                if Li != Lj and Lj != Lk and Lk != Li and Li < Lj + Lk and Lj < Li + Lk and Lk < Li + Lj:\n                    ans += 1\n\n    print(ans)\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\n\nl_n = list(map(int, input().split()))\nl_n.sort()\n\nans = 0\n\nfor i in range(n - 2):\n    for j in range(i + 1, n - 1):\n        for k in range(j + 1, n):\n            if l_n[i] != l_n[j] != l_n[k] and l_n[i] + l_n[j] > l_n[k]:\n                ans += 1\n\nprint(ans)\n", "n = int(input())\nl = list(map(int, input().split()))\nl = sorted(l)\ncount = 0\nfor i in range(n):\n    for j in range(i+1,n):\n        for k in range(j+1,n):\n            if l[i] != l[j] and l[j] != l[k] and l[i] + l[j] > l[k]:\n                count += 1\nprint(count)", "import sys\nfrom collections import deque, defaultdict, Counter\nfrom itertools import accumulate, product, permutations, combinations\nfrom operator import itemgetter\nfrom bisect import bisect_left, bisect_right\nfrom heapq import heappop, heappush\nfrom math import ceil, floor, sqrt, gcd, inf\nfrom copy import deepcopy\nimport numpy as np\nimport scipy as sp\n\nINF = inf\nMOD = 1000000007\n\nn = int(input())\nL = [int(i) for i in input().split()]\n\ntmp = 0\nres = 0\n\nfor i in range(n - 2):\n    for j in range(i + 1, n - 1):\n        for k in range(j + 1, n):\n            if L[i] != L[j] and L[j] != L[k] and L[k] != L[i] and abs(L[i] - L[j]) < L[k] < L[i] + L[j]:\n                res += 1\n\nprint(res)\n", "n = int(input())\narray = sorted(map(int, input().split()))\ncount = 0\nfor i in range(n):\n    for j in range(i+1,n):\n        for k in range(j+1,n):\n #           if array[i] != array[j] and array[j] != array[k] and array[k] != array[i]:\n                if array[i] < array[j] and array[j] < array[k] and array[i]+array[j] > array[k]:\n                    count+=1\n\nprint(count)", "N = int(input())\nL = list(map(int,input().split()))\ncount = 0\nfor i in range(N):\n    for j in range(N):\n        for k in range(N):\n            if not (i < j < k):\n                continue\n            if len(set([L[i],L[j],L[k]])) < 3:\n                continue\n            if L[i] + L[j] > L[k] and L[i] + L[k] > L[j] and L[j] + L[k] > L[i]:\n                count += 1\nprint(count)", "n = int(input())\nl_list = list(map(int, input().split()))\n\nlen_l = len(l_list)\nl_list = sorted(l_list)\ncnt = 0\nfor i in range(len_l-2):\n    for j in range(i+1, len_l-1):\n        for k in range(j+1, n):\n            a = l_list[i]\n            b = l_list[j]\n            c = l_list[k]\n            if a != b != c and a + b > c:\n                cnt += 1\nprint(cnt)\n", "N = int(input())\nL = sorted(map(int,input().split()))\nans = 0\n\nfor i in range(N):\n  for j in range(i+1,N):\n    for k in range(j+1,N):\n      if L[i] < L[j] and L[j] < L[k] and L[k] <L[i] + L[j]:\n          ans += 1\n\nprint(ans)", "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\n\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        for k in range(j + 1, n):\n            if l[i] != l[j] != l[k]:\n                if l[i] + l[j] > l[k]:\n                    ans += 1\nprint(ans)", "import sys\n\nN = int(input())\nL = list(map(int, input().split()))\ncount = 0\nfor i in range(N):\n    for j in range(i+1, N):\n        for k in range(j+1, N):\n            a = L[i]\n            b = L[j]\n            c = L[k]\n            if abs(b-c) < a < b+c and (a != b and a != c and b != c):\n                count += 1\nprint(count)\n", "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\n\nans = 0\n\n\n\nif len(l) <= 2:\n  print((0))\n  return\n  \nfor i in range(len(l)-2):\n  for j in range(i+1,len(l)-1):\n    for k in range(j+1,len(l)):\n      if l[i] != l[j] and l[k] != l[j] and l[k] != l[i] and l[i] + l[j] > l[k]:\n        ans += 1\n       \n        \nprint(ans)\n", "def main():\n    \n    N = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    cnt = 0\n    \n    for i in range(N-2):\n        \n        for j in range(i+1, N-1):\n            if a[i] == a[j]:\n                continue\n            \n            for k in range(j+1, N):\n                if a[i] == a[k] or a[j] == a[k]:\n                    continue\n                if a[k] < (a[i] + a[j]):\n                    cnt += 1\n    \n    \n    print(cnt)\n    \ndef __starting_point():\n    main()\n__starting_point()", "n,*l=map(int,open(0).read().split())\nans=0\nl.sort()\nfor i in range(n):\n  for j in range(i):\n    for k in range(j):\n      if l[k]==l[j] or l[j]==l[i]:\n        continue\n      if l[k]+l[j]>l[i]:\n        ans+=1\nprint(ans)", "import itertools\n\ndef b175(n, llist):\n\n    ans = 0\n\n    itelist = list(itertools.combinations(range(len(llist)), 3))\n\n    for a, b, c in itelist:\n        if (llist[a]+llist[b] > llist[c]\n                and llist[b]+llist[c] > llist[a]\n                and llist[c]+llist[a] > llist[b]\n                and llist[a] != llist[b] and llist[b] != llist[c] and llist[c] != llist[a]):\n           ans += 1\n\n    return ans\n\ndef main():\n    n = int(input())\n    llist = list(map(int, input().split()))\n    print(b175(n, llist))\n\ndef __starting_point():\n    main()\n__starting_point()", "from itertools import combinations\nfrom typing import List\n\n\ndef answer(n: int, l: List[int]) -> int:\n    count = 0\n    l.sort()\n    for i, j, k in combinations(l, 3):\n        if i != j != k and k < i + j:\n            count += 1\n\n    return count\n\n\ndef main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    print((answer(n, l)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n\tN = int(input())\n\tL = [int(l) for l in input().split(\" \")]\n\tcnt = 0\n\tL.sort()\n\tfor i in range(len(L)):\n\t\tfor j in range(i + 1, len(L)):\n\t\t\tfor k in range(j + 1, len(L)):\n\t\t\t\tif L[k] < L[i] + L[j] and L[i] != L[j] and L[j] != L[k]:\n\t\t\t\t\tcnt += 1\n\tprint(cnt)\n\nmain()", "import itertools\n\nN = int(input())\nL = list(map(int,input().split()))\ncount = 0\npair_list = []\nfor pair in itertools.combinations(L, 3):\n    a = sorted(list(pair))\n    if (a[0] != a[1] and a[0] != a[2] and a[1] != a[2]) and abs(a[0] - a[1]) < a[2] and a[2] < a[0] + a[1]:\n        count = count + 1\n        pair_list.append(a)\nprint(count)", "# N\u3092\u53d6\u5f97\u3059\u308b\nN = int(input())\n\n# \u30ea\u30b9\u30c8\u306eL\u3092\u53d6\u5f97\u3059\u308b\nL = list(map(int, input().split()))\n\n# L\u306e\u4e09\u3064\u306e\u7d44\u307f\u5408\u308f\u305b\u5168\u90e8\u306b\u5bfe\u3057\u3066\u6761\u4ef6\u3092\u691c\u8a3c\u3059\u308b\ncounter=0\nfor i in range(N-2):\n    for j in range(i+1, N-1):\n        for k in range(j+1, N):\n            # Li, Lj, Lk\u306e\u5168\u3066\u306e\u5024\u304c\u7570\u306a\u308a\u3001\u4e09\u89d2\u5f62\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u306a\u3089counter+1\n            if len(set([L[i], L[j], L[k]])) == 3 and L[i]+L[j]>L[k] and L[j]+L[k]>L[i] and L[k]+L[i]>L[j]:\n                counter += 1\n                \nprint(counter)", "import itertools\nimport collections\n\nN = int(input())\nLs = list(map(int, input().split()))\n\nL_combination = itertools.combinations(Ls, 3)\n\nans = 0\nfor sanpenList in L_combination:\n    checker = set(sanpenList)\n    if(len(sanpenList) != len(checker)):\n        continue\n\n    if(max(sanpenList) * 2 >= sum(sanpenList)):\n        continue\n\n    ans += 1\n\nprint(ans)", "from itertools import combinations\nn = int(input())\nl = list(map(int, input().split()))\nidx = [i for i in range(n)]\nidx = combinations(idx, 3)\nans = 0\nl.sort()\nfor i, j, k in idx:\n    if l[i]!=l[j] and l[j]!=l[k] and l[k]!=l[i] and l[i]+l[j] > l[k]:\n        ans += 1\nprint(ans)", "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\ncount = 0\n\nfor i in range(n):\n  for j in range(i+1,n):\n    for k in range(j+1,n):\n      if(l[i]!=l[j]!=l[k] and l[i]+l[j]>l[k]):\n        count+=1\nprint(count)", "import sys\nreadline = sys.stdin.readline\n\nN = int(readline())\nL = list(map(int,readline().split()))\n\nL = sorted(L)\n\nans = 0\nfor i in range(N - 2):\n  for j in range(i + 1, N - 1):\n    for k in range(j + 1, N):\n      if len(set([L[i],L[j],L[k]])) != 3:\n        continue\n      if L[i] + L[j] > L[k]:\n        ans += 1\n        \nprint(ans)", "N = int(input())\nL = list(map(int, input().split()))\n\nif N < 3:\n    print(0)\n    return\n\nL = sorted(L)\n\nres = 0\nfor k in range(N):\n    for j in range(k):\n        for i in range(j):\n            if L[i] == L[j] or L[j] == L[k] or L[k] == L[i] : \n                continue\n            if L[i] + L[j] <= L[k]:\n                continue\n            res += 1\n            #print(\"{} {} {}\".format(L[i], L[j], L[k]))\n\nprint(res)", "from sys import stdin\nN = int(stdin.readline().rstrip())\nL = sorted([int(_) for _ in stdin.readline().rstrip().split()])\nans = 0\nfor i in range(N-2):\n    for j in range(i+1, N-1):\n        for k in range(j+1, N):\n            if L[i] + L[j] > L[k] > L[j] > L[i]:\n                ans += 1\nprint(ans)", "n = int(input())\nb = list(map(int, input().split()))\n\nx = 0\nfor i in range(n-2):\n  for j in range(i+1,n-1):\n    for k in range(j+1,n):  \n      if b[i] != b[j] and b[j] != b[k] and b[k] != b[i]:\n        if b[i] < b[j] + b[k] and b[j] < b[i] + b[k] and b[k] < b[i] + b[j]:\n          x += 1\n         \nprint(x)", "N = int(input())\nhen = []\n\nhen = list(int(x) for x in input().split())\nhen.sort()\n#print(hen)\n#hen_u = set(hen)\n#print(hen_u)\ntri = 0\n\nfor a in hen:\n    for b in hen:\n        if(a == b)or (a > b):\n            continue\n        for c in hen:\n            if(a == c)or(b == c) or (a > c) or (b > c):\n                continue\n            if(a+b >c)and(b+c >a)and(c+a >b):\n                tri += 1\n\nprint(tri)", "N = int(input())\nL = list(map(int,input().split()))\n\nL.sort()\nans = 0\nfor i in range(N):\n    for j in range(i+1,N):\n        for k in range(j+1,N):\n            if L[i]<L[j]<L[k] and L[i]+L[j]>L[k] : ans += 1\n\nprint(ans)", "from collections import Counter\nN = int(input())\nL = list(map(int, input().split()))\nC = Counter(L)\nL = sorted(set(L))\nM = len(L)\nans = 0\nfor i in range(M):\n    for j in range(i + 1, M):\n        for k in range(j + 1, M):\n            a, b, c = L[i], L[j], L[k]\n            if a < b + c and b < c + a and c < a + b:\n                ans += C[a] * C[b] * C[c]\n\nprint(ans)\n", "n=int(input())\nl=list(map(int, input().split()))\ncount=0\nfor i in range(n-2):\n  for j in range(i+1,n-1):\n    for k in range(j+1,n):\n      if l[i]!=l[j] and l[j]!=l[k] and l[k]!=l[i]:\n        if abs(l[j]-l[k])<l[i]<l[j]+l[k]:\n          count+=1\nprint(count)", "n = int(input())\nl = list(map(int, input().split()))\nans = 0\nfor i in range(len(l)):\n\tfor j in range(i+1, len(l)):\n\t\tfor k in range(j+1, len(l)):\n\t\t\tif (l[i] != l[j] and l[j] != l[k] and l[i] != l[k] and l[i]+l[j] > l[k] and l[j]+l[k] > l[i] and l[k]+l[i] > l[j]):\n\t\t\t\tans += 1\nprint(ans)", "N = int(input())\nL = list(map(int,input().split()))\nsum = 0\n\nfor i in range(N):\n  for j in range(i+1,N):\n    for k in range(j+1,N):\n      #print('i:'+str(i)+',j:'+str(j)+',k:'+str(k))\n      if(L[i]+L[j]>L[k]) and (L[i]+L[k]>L[j]) and (L[j]+L[k]>L[i]) and (L[i]!=L[j])and (L[i]!=L[k])and (L[k]!=L[j]):\n        #print('a\\n')\n        sum+=1\n\nprint(sum)", "N = int(input())\nL = list(map(int, input().split()))\n\ncount = 0\nfor i in range(N - 2):\n    for j in range(i + 1, N - 1):\n        for k in range(j + 1, N):\n            temp = set([L[i], L[j], L[k]])\n            if len(temp) != 3:\n                continue\n            ma = max(temp)\n            if ma < sum(temp - {ma}):\n                count += 1\nprint(count)\n", "# N\u3092\u53d6\u5f97\u3059\u308b\nN = int(input())\n\n# L1\u301cLN\u3092\u30ea\u30b9\u30c8\u3068\u3057\u3066\u53d6\u5f97\u3059\u308b\nL = list(map(int, input().split()))\n\n# L\u306e3\u3064\u306e\u5024\u306e\u7d44\u307f\u5408\u308f\u305b\u5168\u3066\u306b\u5bfe\u3057\u3066\u3001\u4e09\u89d2\u5f62\u306e\u6761\u4ef6\u3092\u691c\u8a3c\u3059\u308b\ncounter = 0\nfor i in range(N-2):\n    for j in range(i+1, N-1):\n        for k in range(j+1, N):\n            # Li, Lj, Lk\u306e\u5024\u304c\u5168\u3066\u7570\u306a\u308b\u3053\u3068\u306a\u308a\u3001\u4e09\u89d2\u5f62\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u306a\u3089\u30ab\u30a6\u30f3\u30c8\uff0b\uff11 \n            if len(set([L[i], L[j], L[k]])) == 3 and L[i] + L[j] > L[k] and L[j] + L[k] > L[i] and L[i] + L[k] > L[j]:\n                counter += 1\n\n# \u7d50\u679c\u3092\u8868\u793a\nprint(counter)", "def solve(n, l):\n    l = sorted(l)\n    ans = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if (l[i] < l[j] < l[k]) and (l[i] + l[j] > l[k]):\n                    ans += 1\n    return ans\n\nn = int(input())\nl = list(map(int, input().split()))\nprint((solve(n, l)))\n", "N = int(input())\nL = list(map(int, input().split()))\n#print(N, L)\ncount = 0\nfor i in range(0, N-2):\n    for j in range(1, N-1):\n        for k in range(2, N):\n            #\u4e09\u76c6\u306e\u9577\u3055\u304c\u540c\u3058\u3067\u306a\u3044\uff0c\u304b\u3064\uff0c\u300c\u3042\u308b\u4e00\u672c\u3088\u308a\u4ed6\u306e\u4e8c\u672c\u306e\u548c\u304c\u5927\u304d\u3044\u300d\u304c\u5e38\u306b\u6210\u308a\u7acb\u3064\n            if (i<j)&(j<k)&(L[i]!=L[j])&(L[j]!=L[k])&(L[k]!=L[i]) & ((L[i]+L[j]>L[k])&(L[j]+L[k]>L[i])&(L[k]+L[i]>L[j])):\n                #print(i, j, k)\n                count += 1\nprint(count)\n", "from itertools import *\n_,L=open(0);print(sum(sum(t)>2*max(t)for t in combinations(map(int,L.split()),3)if len(set(t))==3))", "N=int(input())\nL=list(map(int,input().split()))\nresult=0\nfor i in range(N):\n  for j in range(i+1,N):\n    for k in range(j+1,N):\n      if (L[i]!=L[j] and L[i]!= L[k] and L[j]!=L[k]) and (L[i]<L[j]+L[k] and L[j]<L[i]+L[k] and L[k]<L[i]+L[j]):\n        result+=1\nprint(result)", "import itertools\nN=int(input())\na=list(map(int, input().split()))\na_=list(itertools.combinations(a,3))\ncount=0\nfor i in a_:\n  if(len(set(i)) == 3):\n    if(i[0]+i[1]>i[2] and i[0]+i[2]>i[1] and i[1]+i[2]>i[0]):\n      count=count+1\nprint (count)", "n = int(input())\nl = list(map(int, input().split()))\nlen_l = len(l)\n\nans = 0\n\nfor i in range(len_l-2):\n    for j in range(i+1, len_l-1):\n        for k in range(j+1, len_l):\n            if l[i]!=l[j] and l[i]!=l[k] and l[j]!=l[k]:\n                if l[i]+l[j]>l[k] and l[i]+l[k]>l[j] and l[j]+l[k]>l[i]:\n                    ans += 1\n\nprint(ans)", "n=int(input())\n\nlis=list(map(int,input().split()))\na=0\nb=0\nc=0\noutput=0\nfor i in range(len(lis)):\n  a=lis[i]\n  for j in range(i+1,len(lis)):\n    b=lis[j]\n    for k in range(j+1,len(lis)):\n      c=lis[k]\n      if a+b>c and a+c>b and b+c>a and (a!=b and b!=c and c!=a) :\n        output+=1\nprint(output)", "n = int(input())\nls = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        for k in range(j + 1, n):\n            a, b, c = ls[i], ls[j], ls[k]\n            if (a + b > c and b + c > a and c + a > b) and (a != b and b != c and c != a):\n                count += 1\n\nprint(count)\n", "N = int(input())\n\nL = list(map(int, input().split()))\nL_sort = sorted(L)\nY_count = 0\nN_count = 0\n\nimport itertools\nfor x in itertools.combinations(L_sort, 3):\n  if x[0] != x[1] and x[1] != x[2] and x[0]!= x[2] and x[0]+ x[1] >+ x[2] and x[1]+x[2] >= x[0] and x[0]+x[2] >= x[1]:\n    Y_count = Y_count +1\n  else:\n    N_count = N_count +1\n\nprint(Y_count)", "n = int(input())\nlll = list(map(int, input().split()))\nlll.sort()\nlen_lll = len(lll)\nans = 0\nfor i in range(len_lll):\n    a = lll[i]\n    for j in range(i + 1, len_lll):\n        b = lll[j]\n        for k in range(j + 1, len_lll):\n            c = lll[k]\n            if a + b > c and a != b and b != c:\n                ans += 1\nprint(ans)", "n = int(input())\nn_l = list(map(int, input().split()))\n\nans = 0\nn_l.sort()\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        for k in range(j + 1, n):\n            if n_l[i] != n_l[j] != n_l[k] and n_l[i] + n_l[j] > n_l[k]:\n                ans += 1\n\nprint(ans)", "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\nans = 0\nfor i in range(n - 2):\n    for j in range(i,n-1):\n        for k in range(j,n):\n            if l[i] != l[j] and l[j] != l[k] and l[k] != l[i]:\n                if l[i] + l[j] > l[k]:\n                    ans += 1\nprint(ans)", "n=int(input())\na=list(map(int,input().split()))\nhasil=0\na=sorted(a)\nfor x in range(n-2):\n    for y in range(x+1,n-1):\n        for z in range(y+1,n):\n            if a[x]!=a[y] and a[y]!=a[z] and a[z]!=a[x]:\n                if a[x]+a[y]>a[z]:\n                    hasil=hasil+1\nprint(hasil)", "N = int(input())\nL = list(map(int,input().split()))\ncount = 0\n\nif N <= 2:\n    count += 0\n\nelse:\n    for i in range(N - 2):\n        for j in range(i + 1, N - 1):\n            for k in range(j + 1, N):\n                if L[i] != L[j] and L[j] != L[k] and L [k] != L[i] and L[i] + L[j] > L[k] and L[j] + L[k] > L[i] and L[k] + L[i] > L[j]:\n                    count += 1\n\nprint(count)", "n = int(input())\nl = list(map(int, input().split()))\n\ncount = 0\nfor i in range(n - 2):\n  for j in range(i + 1, n - 1):\n    for k in range(j + 1, n):\n      if (l[i] + l[j] > l[k]) and (l[j] + l[k] > l[i]) and (l[i] + l[k] > l[j]) and (l[i] != l[j]) and (l[j] != l[k]) and (l[i] != l[k]):\n        count += 1\nprint(count)\n", "N = int(input())\nL = list(map(int, input().split()))\nLs = sorted(L)\nans = 0\n\nfor i in range(N):\n\tfor j in range(i+1, N):\n\t\tfor k in range(j+1, N):\n\t\t\tif Ls[i] < Ls[j] < Ls[k] and Ls[k] < Ls[i] + Ls[j]:\n\t\t\t\tans += 1\n\nprint(ans)", "n=int(input())  #->n=5\nL = list(map(int,input().split()))\ncount = 0\nfor i in range(n):\n    for j in range(n):\n        for k in range(n):\n            if not (i<j<k): continue\n            if len(set([L[i],L[j],L[k]])) < 3: continue\n            if (L[i]+L[j] > L[k]) and (L[j]+L[k] > L[i]) and (L[k]+L[i] > L[j]):\n                count += 1\n\nprint(count)"]