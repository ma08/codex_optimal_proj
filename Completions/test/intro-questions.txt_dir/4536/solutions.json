["class Solution:\n     def plusOne(self, digits):\n         \"\"\"\n         :type digits: List[int]\n         :rtype: List[int]\n         \"\"\"\n         carry=1\n         for i in range(len(digits)-1, -1, -1):\n             digits[i]+=carry\n             if digits[i] > 9:\n                 digits[i]-=10\n                 carry=1\n             else:\n                 carry=0    \n             if carry == 0:\n                 break    \n         if carry == 1:\n             digits.insert(0, 1)\n         return digits    ", "class Solution:\n     def plusOne(self, digits):\n         \"\"\"\n         :type digits: List[int]\n         :rtype: List[int]\n         \"\"\"\n         \n         l = len(digits)\n         i = l-1\n         while i >= 0:\n             if digits[i] != 9:\n                 digits[i] += 1\n                 break\n             else:\n                 digits[i] = 0\n                 i -= 1\n         if i == -1:\n             digits = [1] + digits\n         return digits", "class Solution:\n     def plusOne(self, digits):\n         \"\"\"\n         :type digits: List[int]\n         :rtype: List[int]\n         \"\"\"\n         i = len(digits) - 1\n         carry = 1\n         while carry!=0 or i >=0:\n             temp = digits[i] + carry\n             digits[i] = temp % 10\n             carry = temp // 10\n             i-=1\n             if i < 0 and carry > 0:   \n                 digits.insert(0,carry)\n                 carry = 0\n         return digits    \n", "class Solution:\n     def plusOne(self, digits):\n         \"\"\"\n         :type digits: List[int]\n         :rtype: List[int]\n         \"\"\"\n         l = [str(i) for i in digits]\n         l =  int(''.join(l))\n         l +=1\n         l = list(str(l))\n         l = [int(i) for i in l]\n         return l", "class Solution:\n     def plusOne(self, digits):\n         \"\"\"\n         :type digits: List[int]\n         :rtype: List[int]\n         \"\"\"\n         flag = 1\n         i = len(digits)-1\n         while i >=0:\n             if digits[i]+flag <10:\n                 digits[i] = digits[i]+flag\n                 flag = 0\n             else:\n                 digits[i] = (digits[i]+flag)%10\n             i-=1\n         if flag == 1:\n             digits.insert(0,1)\n         return digits", "class Solution:\n     def plusOne(self, digits):\n         \"\"\"\n         :type digits: List[int]\n         :rtype: List[int]\n         \"\"\"\n         if not digits:\n             return []\n         \n         i = len(digits) - 1\n         while i >= 0:\n             if digits[i] < 9:\n                 digits[i] += 1\n                 return digits\n             else:\n                 digits[i] = 0\n                 i -= 1\n         if digits[0] == 0:\n             return [1]+digits", "class Solution:\n     def plusOne(self, digits):\n         \"\"\"\n         :type digits: List[int]\n         :rtype: List[int]\n         \"\"\"\n         d = [str(x) for x in digits]\n         num = int(''.join(d)) + 1\n         \n         return list(map(int, str(num)))", "class Solution:\n     def plusOne(self, digits):\n         \"\"\"\n         :type digits: List[int]\n         :rtype: List[int]\n         \"\"\"\n         \n         sum = 0\n         for i in range(0, len(digits)):\n             sum = sum * 10 + digits[i]\n             \n         return [int(i) for i in str(sum+1)]\n", "class Solution:\n     def plusOne(self, digits):\n         \"\"\"\n         :type digits: List[int]\n         :rtype: List[int]\n         \"\"\"\n         carry = 1\n         for i in range(len(digits)-1,-1,-1):\n                 print(i)\n                 if digits[i] + carry == 10:\n                     digits[i] = 0\n                 else:\n                     digits[i] += 1\n                     return digits\n         digits.insert(0,1)\n         return digits      ", "class Solution:\n     def plusOne(self, digits):\n         \"\"\"\n         :type digits: List[int]\n         :rtype: List[int]\n         \"\"\"\n         if not digits:\n             return [1]\n         carry = 1\n         for i in reversed(range(len(digits))):\n             if carry == 0:\n                 return digits\n             carry, digits[i] = (digits[i] + carry) // 10, (digits[i]+carry) % 10\n         if carry:\n             return [1] + digits\n         return digits", "class Solution:\n     def plusOne(self, digits):\n         plus = 1\n         for i in range(len(digits)-1, -1, -1):\n             if digits[i] + plus > 9:\n                 digits[i] = 0\n                 plus = 1\n             else:\n                 digits[i] = digits[i] + plus\n                 plus = 0\n         if plus == 1:\n             digits.insert(0, 1)\n         return digits", "class Solution:\n     def plusOne(self, digits):\n         \"\"\"\n         :type digits: List[int]\n         :rtype: List[int]\n         \"\"\"\n         \n         if digits[-1] != 9:\n             digits[-1] += 1\n         else:\n             for i in range(-1, -len(digits)-1, -1):\n                 if digits[i] == 9:\n                     digits[i] = 0\n                 else:\n                     digits[i] += 1\n                     break\n             else:\n                 digits.insert(0, 1)\n                 \n         return digits", "class Solution:\n     def plusOne(self, digits):\n         \"\"\"\n         :type digits: List[int]\n         :rtype: List[int]\n         \"\"\"\n         num = 0\n         for i in range(len(digits)):\n             num += 10**i * digits[len(digits)-i-1]\n         return(list(map(int, list(str(num+1)))))\n"]