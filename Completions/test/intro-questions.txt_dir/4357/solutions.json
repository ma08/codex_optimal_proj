["a=input().split()\na.sort(reverse=True)\nif len(set(a))==1:\n  print(12*int(a[0]))\nelse:\n  ans=int(a[0]+a[1])+int(a[2])\n  print(ans)", "a, b, c = map(int, input().split())\nif a >= b and a >= c:\n    print(a * 10 + b + c)\nelif b >= a and b >= c:\n    print(b * 10 + a + c)\nelse:\n    print(c * 10 + a + b)", "nums = list(map(int, input().split()))\n\nnums.sort()\nprint(nums[2] * 10 + nums[1] + nums[0])", "x = []\nx = list(input().split())\nx.sort(reverse=True)\n\nprint((int(x[0]+x[1])+int(x[2])))\n\n\n", "a,b,c = map(int, input().split())\nprint(max(a,b,c) * 9 +a + b + c)", "a,b,c=sorted(map(int,input().split()))\nprint(10*c+a+b)", "num = sorted(list(map(int, input().split())), reverse=True)\nprint(num[0] * 10 + sum(num[1:]))", "a, b, c = sorted(map(int, input().split()))\nprint((10*c+a+b))\n", "#ABC110A\na = sorted(list(map(int,input().split())))\nprint(a[2]*10+a[1]+a[0])", "A=list(map(int,input().split()))\n\nA.sort()\nA=A[::-1]\n\nprint((10*A[0]+A[1]+A[2]))\n", "x = list(map(int, input().split()))\na = max(x)\nb = min(x)\nx.remove(a)\nx.remove(b)\nc = x[0]\na = str(a)\nb = str(b)\nab = int(a+b)\nprint(ab+c)", "abc=sorted(list(map(int,input().split())),reverse=True)\nprint((sum(abc)+abc[0]*9))\n", "a,b,c=input().split()\na=int(a)\nb=int(b)\nc=int(c)\nls=[a,b,c]\nls.sort()\nprint(ls[2]*10+ls[1]+ls[0])", "a,b,c=map(int,input().split())\nprint(max(a,b,c)*9+a+b+c)", "#!/usr/bin/env python3\n\ndef main():\n    abc = sorted(input().split())\n    print((int(abc[2]) * 10 + int(abc[1]) + int(abc[0])))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nsys.setrecursionlimit(10 ** 9)\nINF = 1 << 60\nMOD = 1000000007\n\n\ndef main():\n    A = list(map(int, readline().split()))\n    A.sort()\n    print((A[0] + A[1] + A[2] * 10))\n\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "\nS=list(map(int,input().split()))\nS.sort()\nall=0\nall += (S[0]+10*S[2]+S[1])\nprint(all)", "a, b, c = map(int, input().split())\nprint(max(a*10+b+c, a+b*10+c, a+b+c*10))", "a = sorted(list(map(int, input().split())),reverse=True)\nprint((a[0]*10+a[1]+a[2]))\n", "n = list(map(int, input().split()))\nlist_num = list(n)\nlist_num.sort()\nlist_str = []\nfor i in list_num:\n    i = str(i)\n    list_str.append(i)\n\nmax_str = list_str[-1] + list_str[1]\nmax_int = int(max_str)\nprint((max_int + int(list_str[0])))\n", "A,B,C = map(int,input().split())\nans = 0\nif(A>=B and A>=C):\n    ans = max(A*10+B+C,ans)\nif(B>=A and B>=C):\n    ans = max(B*10+A+C,ans)\nelse:\n    ans = max(C*10+A+B,ans)\nprint(str(ans))", "l=input().split()\nld = sorted(l, reverse=True)\n#print(ld)\na=ld[0]+ld[1]\nb=ld[2]\nm=int(a)\nn=int(b)\nprint((m+n))\n", "abc = list(map(int, input().split()))\nprint((sum(abc) + max(abc) * 9))\n", "a = list(map(int, input().split()))\nprint(10 * max(a) + sum(a) - max(a))", "A,B,C=map(int,input().split())\nprint(max(A*10+B+C,B*10+A+C,C*10+B+A))", "A, B, C = map(int, input().split())\nABC = sorted([A, B, C])\nprint(ABC[-1]*10 + sum(ABC[:2]))", "A, B, C = map(int, input().split())\nlst = [A, B, C]\nlst2 = sorted(lst, reverse=True)\nlst3 = list(map(str, lst2))\nprint(int(lst3[0] + lst3[1]) + int(lst3[2]))", "a = sorted(map(int, input().split()))\nprint(a[2]*10 + a[1] + a[0])", "a,b,c=map(int, input().split())\nprint(a+b+c+9*max(a,b,c))", "X = list(map(int, input().split()))\nprint((sum(X)+9*max(X)))\n", "L = list(map(str, input().split()))\nL.sort()\na = int(L[2]+L[1])\nb = int(L[0])\nprint(a + b)", "#k = int(input())\n#s = input()\n#a, b = map(int, input().split())\n#s, t = map(str, input().split())\n#l = list(map(int, input().split()))\n#l = [list(map(int,input().split())) for i in range(n)]\n#a = [list(input()) for _ in range(n)]\n#a = [input() for _ in range(n)]\n\nl = list(map(int, input().split()))\n\nl.sort()\nprint((l[2]*10+l[1]+l[0]))\n\n\n", "import os\nimport sys\nfrom collections import defaultdict, Counter\nfrom itertools import product, permutations,combinations, accumulate\nfrom operator import itemgetter\nfrom bisect import bisect_left,bisect\nfrom heapq import heappop,heappush,heapify\nfrom math import ceil, floor, sqrt\nfrom copy import deepcopy\n\ndef main():\n    num = list(map(int, input().split()))\n    num.sort(reverse=True)\n    print((num[0]*10+num[1] + num[2]))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "abc = list(map(str, input().split()))\nabc.sort()\nprint(int(abc[2]+abc[1])+int(abc[0]))", "a,b,c = map(int,input().split())\nprint(max(a,b,c)*9+a+b+c)", "a=[int(i) for i in input().split()]\n\na.sort(reverse=True)\n\nans=a[0]*10+a[1]+a[2]\nprint(ans)", "a = list(map(int,input().split()))\na.sort()\nprint(a[-1]*10+a[-2]+a[-3])", "a=list(map(int, input().split()))\na.sort()\nprint(10*a[2]+a[1]+a[0])", "a,b,c = input().split()\n\nif a == max(a,b,c):\n    ans = int(a+b) + int(c)\nelif b == max(a,b,c):\n    ans = int(b+a) + int(c)\nelse:\n    ans = int(c+a) + int(b)\nprint(ans)", "a,b,c = map(int,input().split())\nprint(max(a,b,c)*9+sum([a,b,c]))", "a = sorted(list(map(int, input().split())))\nprint((a[0]+a[1]+a[2]*10))\n", "a, b, c = map(int, input().split())\nprint(max(a, b, c) * 9 + a + b + c)", "a, b, c = map(int, input().split())\nM = max(a, b, c)\nr = a+b+c-M\n\nprint(10*M + r)", "num=list(map(int,input().split()))\nnum.sort()\nans=num[2]*10+num[1]+num[0]\nprint(ans)", "A=list(map(int,input().split()))\nA.sort(reverse=True)\nprint((10*A[0]+A[1]+A[2]))\n", "l = sorted(map(int, input().split()))\nprint(l[2]*10 + l[1] + l[0])", "n_l = list(map(str, input().split()))\n\nn_l.sort(reverse=True)\n\nprint((int(n_l[0] + n_l[1]) + int(n_l[-1])))\n", "s = list(map(int,input().split()))\ns.sort(reverse = True)\nprint(s[0]*10+s[1]+s[2])", "a,b,c = map(int, input().split())\n\nd = max(a,b,c)\nprint(d*9+a+b+c)", "val = list(map(int, input().split()))\nval.sort(reverse=True)\nprint(val[0] * 10 + val[1] + val[2])", "a,b,c =map(int,input().split())\nprint(max(a,b,c)*9+a+b+c)", "a = sorted(list(map(int, input().split())),reverse=True)\nprint((sum(a)+a[0]*9))\n", "\ndef main():\n    a = list(map(int, input().split()))\n    sorted_a = sorted(a)\n    print((int(str(sorted_a[2]) + str(sorted_a[1])) + sorted_a[0]))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = list(map(int,input().split()))\nm=sorted(n)\nprint(int((m[2]*10+m[1])+m[0]))", "a = sorted(list(map(int, input().split())))\n\nprint(10*a[-1] + a[0] + a[1])", "a = list(map(int, input().split()))\n\na.sort()\n\nprint(a[-1] * 10 + a[0] + a[1])", "a,b,c = map(int, input().split())\nprint(max(10*a+b+c, a+10*b+c, a+b+10*c))", "a = sorted(list(input().split()))\nans = int(a[0])+int(a[2]+a[1])\nprint(ans)\n", "abc=sorted(list(map(int,input().split())),reverse=True)\na=[1]*10\nfor i in range(10**7):\n    a.append(a)\nprint((sum(abc)+abc[0]*9))\n", "a,b,c=map(int,input().split())\nif a>=b and a>=c:\n  print(10*a+b+c)\nelif  b>=a and b>=c:\n  print(a+10*b+c)\nelse:\n  print(a+b+10*c)", "a = sorted(list(map(int, input().split())))\n\nprint((a[-1]*10+sum(a[:-1])))\n\n", "a,b,c = sorted(map(int,input().split()))\nprint((c*10+b+a))\n", "abc = list(map(int, input().split()))\nabc = sorted(abc, reverse=True)\nab = str(abc[0])+str(abc[1])\nc = int(abc[2])\nprint(int(ab)+int(c))", "n = list(map(int, input().split()))\nn.sort()\nprint(n[0] + n[1]+n[2]*10)", "import os\nl = list(map(int,input().split()))\nl.sort()\na =l[2]*10+l[1]+l[0]\nprint(a)\n", "l=list(map(str,input().split()))\nl.sort()\na=l[0]\nb=l[2]+l[1]\nprint(int(b)+int(a))", "l = list(map(int, input().split()))\nl.sort(reverse=True)\nprint(10*l[0]+1*l[1]+l[2])", "l = list(map(int, input().split()))\nl.sort()\nprint((l[2] * 10 + l[1] + l[0]))\n", "l = [int (x) for x in input().split()]\nlist.sort (l)\nprint (l[-1]*10+l[0]+l[1])", "A,B,C = sorted(map(int,input().split()))\nprint(C*10+B+A)", "A = sorted(list(map(int, input().split())))\nprint(A[2]*10+A[1]+A[0])", "# ABC110\n# A Maximize the Fomula\nNum = list(map(int, input().split()))\nNum = sorted(Num, reverse=True)\nX = []\nfor i in range(2):\n    X.append(str(Num[i]))\nX = int(\"\".join(X))\nY = int(Num[2])\nprint((X + Y))\n", "def mapt(fn, *args):\n    return tuple(map(fn, *args))\n\n\ndef Input():\n    return mapt(int, input().split(\" \"))\n\n\ndef main():\n    data = sorted(Input(), reverse=True)\n    print(int(str(data[0])+str(data[1])) + data[2])\n\n\nmain()", "lis = []\nli = input().split()\n\nli.sort()\n\nlis.append(li[2] + li[1])\nlis.append(li[0])\n\nprint((int(lis[0]) + int(lis[1])))\n", "a,b,c = map(int,input().split())\n\n\n\nprint(max((a,b,c))*9 + a+b+c)", "a = list(map(int,input().split()))\na = sorted(a,reverse=True)\nprint((10*a[0]+a[1]+a[2]))\n\n\n", "lst = list(map(int, input().split()))\nlst.sort()\nlst.reverse()\nmaximum = int(str(lst[0]) + str(lst[1])) + lst[2]\nprint(maximum)", "a = list(map(int, input().split()))\na = sorted(a, reverse=True)\n\nres = a[0] * 10 + a[1] + a[2]\nprint(res)", "a = list(input().split())\na.sort()\n\nx = a[0]\ny = a[2]+a[1]\n\nprint(int(x)+int(y))", "list01 = list(map(int, input().split()))\nlist02 = sorted(list01, reverse=True)\na = list02[0] * 10 + list02[1] + list02[2]\nprint(a)", "A, B, C = map(int, input().split())\n\nt = sorted([A, B, C])\nprint(t[0] + t[1] + t[2] * 10)", "l = list(map(int, input().split()))\ni = l.index(max(l))\nprint(l.pop(i) * 10 + sum(l))", "a, b, c = map(int, input().split())\nif a <= b and b <= c:\n    print(int(str(c) + str(b)) + a)\nelif c <= b and b <= a:\n    print(int(str(a) + str(b)) + c)\nelif a <= c and c <= b:\n    print(int(str(b) + str(c)) + a)\nelif b <= c and c <= a:\n    print(int(str(a) + str(c)) + b)\nelif b <= a and a <= c:\n    print(int(str(c) + str(a)) + b)\nelse:\n    print(int(str(b) + str(a)) + c)", "a,b,c = sorted(map(int,input().split()))\n\nprint(10*c+b+a)", "li_1=a,b,c=list(map(int,input().split()))\nli=sorted(li_1, reverse=True)\nprint(int(str(li[0])+str(li[1]))+li[2])", "A,B,C = input().split()\nls = [int(A+B)+int(C),int(B+A)+int(C),int(A)+int(B+C),int(A)+int(C+B),int(B)+int(A+C),int(B)+int(C+A)]\nprint(max(ls))", "a = list(input().split())\nb = sorted(a)\nprint(int(b[2]+b[1]) + int(b[0]))", "A = list(map(int,input().split()))\nA = sorted(A, reverse=True)\nprint(int(\"\".join(map(str,A[:2]))) + A[-1])", "import sys\n\n\nstdin = sys.stdin\ndef ns(): return stdin.readline().rstrip()\ndef ni(): return int(stdin.readline().rstrip())\ndef nm(): return list(map(int, stdin.readline().split()))\ndef nl(): return list(map(int, stdin.readline().split()))\n\n\ndef main():\n    A = sorted(nl())\n    print((eval(str(A[2]) + str(A[1]) + '+' + str(A[0]))))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "a = list(map(int,input().split()))\nsort_a = sorted(a,reverse=True)\ntmp = int(str(sort_a[0])+str(sort_a[1]))+sort_a[2]\nprint(tmp)", "abc=sorted(list(map(int,input().split())),reverse=True)\na=[1]*10\nfor i in range(10**7+5*10**6):\n    a.append(a)\nprint((sum(abc)+abc[0]*9))\n", "\nurl = \"https://atcoder.jp//contests/abc110/tasks/abc110_a\"\n\ndef main():\n    t = list(map(int, input().split()))\n    t.sort(reverse=True)\n\n    print((t[0]*10 + t[1] + t[2]))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "a, b, c = sorted(map(int, input().split()))\n\nprint(10 * c + b +a)", "ABC = input().split()\nm = max(ABC)\nABC.remove(m)\n\nprint(eval(m + ABC[0] + '+' + ABC[1]))", "L = list(map(int,input().split()))\nL.sort()\nprint(L[2] * 10 + L[1] + L[0])", "a,b,c=map(int,input().split())\nprint(max(a,b,c)*9+a+b+c)", "a=sorted(list(input().split()))\nprint(int(a[2])*10+int(a[0])+int(a[1]))", "a, b, c = map(int, input().split())\nX = 10 * a + b + c\nY = a + 10 * b + c\nZ = a + b + 10 * c\nprint(max(X, max(Y, Z)))", "A, B, C = list(map(int, input().split()))\n\nif A >= B and A >= C:\n  print((int(A*10+B+C)))\nelif B >= A and B >= C:\n  print((int(B*10+A+C)))\nelse:\n  print((int(C*10+A+B)))\n"]