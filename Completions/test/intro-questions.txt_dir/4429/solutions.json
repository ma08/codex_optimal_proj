["for testcase in range(int(input())):\n    vals = list(map(int, input().split()))\n    \n    ans = None\n    for a in vals:\n        for b in vals:\n            for c in vals:\n                if max(a, b) == vals[0] and max(a, c) == vals[1] and max(b, c) == vals[2]:\n                    ans = [a, b, c]\n    \n    if ans is None:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n        print(*ans)\n                    \n", "def check(a, b, c, x, y, z):\n    ok = True\n    ok &= x == max(a, b)\n    ok &= y == max(a, c)\n    ok &= z == max(b, c)\n    return ok\n\ndef solve():\n    x,y,z = map(int,input().split())\n    l = [x, y, z, 1, 10 ** 9]\n    for a in l:\n        for b in l:\n            for c in l:\n                if check(a, b, c, x, y, z):\n                    print('YES')\n                    print(a, b, c)\n                    return\n    print('NO')\n\nt = int(input())\nfor _ in range(t):\n    solve()", "def solve():\n    x, y, z = map(int, input().split())\n    for s in range(1 << 3):\n        a = x if s & 1 else y\n        b = x if s & 2 else z\n        c = y if s & 4 else z\n        if x == max(a, b) and y == max(a, c) and z == max(b, c):\n            print('YES')\n            print(a, b, c)\n            return\n    print('NO')\n\nt = int(input())\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    a = sorted(list(map(int, input().split())))\n    if (a[1] != a[2]):\n        print(\"NO\")\n    else:\n        print(\"YES\")\n        print(a[0], a[0], a[2])\n\n", "t=int(input())\nfor _ in range(t):\n  a=list(map(int,input().split()))\n  a.sort()\n  if a[1]==a[2]:\n    print('YES')\n    ans=[]\n    ans.append(str(a[1]))\n    ans.append(str(a[0]))\n    ans.append(str(a[0]))\n    print(' '.join(ans))\n  else:\n    print('NO')\n", "t=int(input())\ndef fun(x,y,z):\n    a=-1\n    b=-1\n    c=-1\n    flag=0\n    l=[x,y,z]\n    for i in l:\n        for j in l:\n            for k in l:\n                if x==max(i,j) and y==max(i,k) and z==max(j,k):\n                    flag=1\n                    a=i\n                    b=j\n                    c=k\n                    break\n            if flag:\n                break\n        if flag:\n            break\n    if flag:\n        print(\"YES\")\n        print(a,b,c)\n    else:\n        print(\"NO\")\nwhile t:\n    t-=1\n    x,y,z=list(map(int,input().split()))\n    fun(x,y,z)\n", "\ntt = int(input())\n\nfor loop in range(tt):\n\n    x,y,z = list(map(int,input().split()))\n\n    if x == y == z:\n        print (\"YES\")\n        print(x,y,z)\n    elif x == y and x > z:\n        print (\"YES\")\n        print(x,z,z)\n    elif x == z and x > y:\n        print (\"YES\")\n        print(y,x,y)\n    elif y == z and y > x:\n        print (\"YES\")\n        print(x,x,y)\n    else:\n        print (\"NO\")\n        \n", "\"\"\"\n                            pppppppppppppppppppp\n                         ppppp  ppppppppppppppppppp\n                      ppppppp    ppppppppppppppppppppp\n                      pppppppp  pppppppppppppppppppppp\n                      pppppppppppppppppppppppppppppppp\n                              pppppppppppppppppppppppp\n       ppppppppppppppppppppppppppppppppppppppppppppppp  pppppppppppppppppppp\n      pppppppppppppppppppppppppppppppppppppppppppppppp  ppppppppppppppppppppp\n     ppppppppppppppppppppppppppppppppppppppppppppppppp  pppppppppppppppppppppp\n    ppppppppppppppppppppppppppppppppppppppppppppppp    pppppppppppppppppppppppp\n   pppppppppppppppppppppppppppppppppppppppppppppp     pppppppppppppppppppppppppp\n  ppppppppppppppppppppppppppppppppppppppppppppp      pppppppppppppppppppppppppppp\n  pppppppppppppppppppppppppppppppp               pppppppppppppppppppppppppppppppp\n  pppppppppppppppppppppppppppp     pppppppppppppppppppppppppppppppppppppppppppppp\n  ppppppppppppppppppppppppppp    pppppppppppppppppppppppppppppppppppppppppppppppp\n    pppppppppppppppppppppppp  pppppppppppppppppppppppppppppppppppppppppppppppppp\n     ppppppppppppppppppppppp  ppppppppppppppppppppppppppppppppppppppppppppppppp\n      pppppppppppppppppppppp  ppppppppppppppppppppppppppppppppppppppppppppppp\n       ppppppppppppppppppppp  ppppppppppppppppppppppppppppppppppppppppppppp\n                              pppppppppppppppppppppppp\n                              pppppppppppppppppppppppppppppppp\n                              pppppppppppppppppppppp  pppppppp\n                              ppppppppppppppppppppp    ppppppp\n                                 ppppppppppppppppppp  ppppp\n                                    pppppppppppppppppppp\n\"\"\"\n\n\nimport sys\nfrom functools import lru_cache, cmp_to_key\nfrom heapq import merge, heapify, heappop, heappush, nsmallest\nfrom math import ceil, floor, gcd, fabs, factorial, fmod, sqrt, inf, log\nfrom collections import defaultdict as dd, deque, Counter as C\nfrom itertools import combinations as comb, permutations as perm\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nfrom time import perf_counter\nfrom fractions import Fraction\nfrom decimal import Decimal\n# sys.setrecursionlimit(pow(10, 6))\n# sys.stdin = open(\"input.txt\", \"r\")\n# sys.stdout = open(\"output.txt\", \"w\")\nmod = pow(10, 9) + 7\nmod2 = 998244353\ndef data(): return sys.stdin.readline().strip()\ndef out(var): sys.stdout.write(str(var)+\"\\n\")\ndef outa(*var, end=\"\\n\"): sys.stdout.write(' '.join(map(str, var)) + end)\ndef l(): return list(sp())\ndef sl(): return list(ssp())\ndef sp(): return list(map(int, data().split()))\ndef ssp(): return list(map(str, data().split()))\ndef l1d(n, val=0): return [val for i in range(n)]\ndef l2d(n, m, val=0): return [l1d(n, val) for j in range(m)]\n\n\nfor _ in range(int(data())):\n    a = l()\n    a.sort()\n    if a[0] == a[1] == a[2]:\n        out(\"YES\")\n        outa(*a)\n        continue\n    if a[1] == a[2]:\n        out(\"YES\")\n        outa(a[2], a[0], a[0])\n        continue\n    out(\"NO\")\n", "import sys\n#q=1\nq=int(input())\nfor i in range(q):\n    #n,m=[int(j) for j in sys.stdin.readline().split()]\n    #n=int(sys.stdin.readline())\n    a=[int(j) for j in sys.stdin.readline().split()]\n    a.sort()\n    if a[1]==a[2]:\n        print('YES')\n        print(a[0],a[0],a[2])\n    else:\n        print('NO')", "import math as mt \nimport sys,string\ninput=sys.stdin.readline\nL=lambda : list(map(int,input().split()))\nLs=lambda : list(input().split())\nM=lambda : list(map(int,input().split()))\nI=lambda :int(input())\nfrom collections import defaultdict\n\n\n\nt=I()\nfor i in range(t):\n    x,y,z=M()\n    d=[x,y,z]\n    p=max(x,y,z)\n    c=0\n    for j in d:\n        if(j==p):\n            c+=1\n    if(c>=2):\n        print(\"YES\")\n        if(c==2):\n            print(min(x,y,z),min(x,y,z),p)\n        else:\n            print(p,p,p)\n    else:\n        print(\"NO\")\n", "for u in range(int(input())):\n    x, y, z = map(int, input().split())\n    \n    t = max(x, y, z)\n    ans = 0\n    if t == x:\n        ans += 1\n    if t ==y:\n        ans += 1\n    if t == z:\n        ans += 1\n    \n    if ans >=2:\n        print(\"YES\")\n        print(min(x,y,z), min(x, y, z), t)\n    else:\n        print('NO')", "def solve(x, y, z):\n    x, y, z = sorted([x, y, z])\n    if x == y == z:\n        return [x, x, x]\n    elif x < y and y == z:\n        return [x, x, z]\n    return None\n\nt = int(input())\nfor _ in range(t):\n    # n = int(input())\n    x, y, z = map(int, input().split())\n    # c = list(map(int, input().split()))\n    sol = solve(x, y, z)\n    if sol:\n        print('YES')\n        print(' '.join(map(str, sol)))\n    else:\n        print('NO')", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int, minp().split()))\n\ndef solve():\n\ta = list(mints())\n\ta.sort()\n\tif a[-1] != a[-2]:\n\t\tprint(\"NO\")\n\t\treturn\n\telse:\n\t\tprint(\"YES\")\n\t\tprint(a[0],a[0],a[1])\n\nfor i in range(mint()):\n\tsolve()\n", "T, = list(map(int, input().split()))\nfor _ in range(T):\n    x, y, z = list(map(int, input().split()))\n    if x == z and z>=y:\n        print(\"YES\")\n        print(y, x, y)\n    elif y == z and z>=x:\n        print(\"YES\")\n        print(x, x, z)\n    elif x == y and x>=z:\n        print(\"YES\")\n        print(x, z, z)\n    else:\n        print(\"NO\")\n\n\n", "for _ in range(int(input())):\n    l = list(map(int,input().split()))\n    l.sort()\n    if l[1]==l[2]:\n        print(\"YES\")\n        print(l[0],l[0],l[2])\n    else:\n        print(\"NO\")", "for _ in range(int(input())):\n    x,y,z=map(int,input().split())\n    a,b,c=min(x,y),min(x,z),min(y,z)\n    if x==max(a,b) and y==max(a,c) and z==max(b,c):print('YES');print(a,b,c)\n    else:print('NO')", "import sys\ninput = sys.stdin.readline\nfor f in range(int(input())):\n    x,y,z=map(int,input().split())\n    a=min(x,y)\n    b=min(x,z)\n    c=min(y,z)\n    if max(a,b)!=x or max(a,c)!=y or max(b,c)!=z:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n        print(a,b,c)", "from itertools import *\nfor i in range(int(input())):\n        x, y, z = list(map(int ,input().split()))\n        a = [x, y, z, min(x, y, z), max(x, y, z)]\n        ha = False\n        for p in permutations(a):\n                if max(p[0], p[1]) == x and max(p[0], p[2]) == y and max(p[1], p[2]) == z:\n                        print(\"YES\")\n                        print(*p[:3])\n                        ha = True\n                        break\n        if not ha:\n                print(\"NO\")\n"]