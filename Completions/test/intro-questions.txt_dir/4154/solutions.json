["n,m = map(int,input().split())\n\nmin_i = 1\nmax_i = n\n\nfor i in range(m):\n    l,r = map(int,input().split())\n    min_i = max(min_i,l)\n    max_i = min(max_i,r)\n\nif max_i-min_i>=0:\n    print(max_i-min_i+1)\nelse:\n    print(0)", "n, m = list(map(int, input().split()))\nl, r = 1, n\n\nfor i in range(m):\n    a, b = list(map(int, input().split()))\n    l = max(l, a)\n    r = min(r, b)\n\nprint((max(r - l + 1, 0)))\n", "N, M = map(int, input().split())\n\nL = []\n\nfor i in range(M):\n    LR = list(map(int, input().split()))\n    L.append(LR)\n\nres = [L[0][0], L[0][1]]\n\nfor i in range(M):\n    res = [max(res[0], L[i][0]), min(res[1], L[i][1])]\n\nif res[1] < res[0]:\n    print(0)\nelse: \n    print(res[1] - res[0] + 1)", "import math\nimport collections\nimport itertools\n\ndef YesNo(Bool):\n    if(Bool):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n    return\n\ndef resolve():\n\n    N,M=list(map(int,input().split()))\n    L=[0]*M\n    R=[0]*M\n    Lmax=0\n    Rmin=10**10\n    for i in range(M):\n        L[i],R[i]=list(map(int,input().split()))\n        Rmin=min(R[i],Rmin)\n        Lmax=max(L[i],Lmax)\n\n    print((max(0,Rmin-Lmax+1)))\n\nresolve()\n", "N,M = map(int,input().split())\nL = []\nR = []\nfor i in range(M):\n  l,r = map(int,input().split())\n  L.append(l)\n  R.append(r)\nif min(R) - max(L) >= 0:\n  print(min(R) - max(L) + 1)\nelse:\n  print(0)", "N,M=map(int,input().split())\n \nLR=[list(map(int,input().split())) for _ in range(M)]\n \nmax_l=0\nmin_r=10**9\n \nfor i in range(M):\n  if max_l<=LR[i][0]:\n    max_l=LR[i][0]\n  if min_r>=LR[i][1]:\n    min_r=LR[i][1]\nprint(max(0,min_r-max_l+1))", "N, M = map(int, input().split())\nL, R = [0]*M, [0]*M\nA = set(range(N))\nlm, rm = 0, N\nfor i in range(M):\n    L[i], R[i] = map(int, input().split())\n    lm = max(lm, L[i])\n    rm = min(rm, R[i])\nif lm <= rm:\n    print(rm-lm+1)\nelse:\n    print(0)", "n, m = map(int, input().split())\nlr = [list(map(int, input().split())) for _ in range(m)]\n\nINF = float('inf')\nans_l, ans_r = -INF, INF\nfor l, r in lr:\n    ans_l = max(ans_l, l)\n    ans_r = min(ans_r, r)\nprint(max(0, ans_r-ans_l+1))", "n, m = map(int, input().split())\nLR = [list(map(int, input().split())) for _ in range(m)]\nf_inf = float(\"inf\")\n\nmax_l = 0\nmin_r = f_inf\nfor l, r in LR:\n    max_l = max(max_l, l)\n    min_r = min(min_r, r)\n\nif min_r >= max_l:\n    print(min_r - max_l + 1)\nelse:\n    print(0)", "n, m = map(int,input().split())\nL, R = 1, n\nfor _ in range(m):\n  l, r = map(int,input().split())\n  L = max(L, l)\n  R = min(R, r)\nif L > R: print(0)\nelse: print(R - L + 1)", "N,M=map(int, input().split())\n\ncard=[0]*(N+2)\nans=[0]*(N+1)\nfor i in range(M):\n\tL,R=map(int, input().split())\n\tcard[L]+=1\n\tcard[R+1]-=1\n\t\ncnt=0\nfor h in range(N+1):\n\tcnt+=card[h]\n\tans[h]=str(cnt)\n\nprint(ans.count(str(M)))", "n,m=map(int,input().split())\nl_max=0\nr_min=10**5+1\nfor i in range(m):\n    l,r=map(int,input().split())\n    l_max=max(l,l_max)\n    r_min=min(r,r_min)\nprint(max(r_min-l_max+1,0))", "# 36\nn, m = map(int, input().split())\nl_max, r_min = -1, float('inf')\nfor i in range(m):\n    li, ri = map(int, input().split())\n    l_max = max(l_max, li)\n    r_min = min(r_min, ri)\n\nans = r_min - l_max + 1 if (r_min - l_max >= 0) else 0\nprint(ans)", "N, M = (input().split())\nN = int(N)\nM = int(M) \n\nL = [0] * M\nR = [0] * M\n\nfor i in range(M):\n  L_i, R_i = (input().split())\n  L[i] = int(L_i)\n  R[i] = int(R_i)\n\nprint(max(min(R) - max(L) + 1,0))", "N, M = map(int, input().split())\n\nl = 0\nr = N\n\nfor i in range(M):\n    L, R = map(int, input().split())\n    \n    if L > l:\n        l = L\n            \n    if R < r:\n        r = R\n                \n    ans = r - l + 1\n    if ans < 0:\n        print(0)\n        break\n\nelse:\n    print(ans)", "import re\nimport sys\nimport math\nimport itertools\nimport bisect\nfrom copy import copy\nfrom collections import deque,Counter\nfrom decimal import Decimal\nimport functools\ndef v(): return input()\ndef k(): return int(input())\ndef S(): return input().split()\ndef I(): return map(int,input().split())\ndef X(): return list(input())\ndef L(): return list(input().split())\ndef l(): return list(map(int,input().split()))\ndef lcm(a,b): return a*b//math.gcd(a,b)\nsys.setrecursionlimit(10 ** 6)\nmod = 10**9+7\ncnt = 0\nans = 0\ninf = float(\"inf\")\nal = \"abcdefghijklmnopqrstuvwxyz\"\nAL = al.upper()\n\nN, M = I()\ncount = 0\n \nmin_a = 1\nmax_b = N\n \nfor i in range(M):\n    a,b = [int(i) for i in input().split()]\n    if min_a < a:\n        min_a = a\n    if max_b > b:\n        max_b = b\n \nprint(max(0, max_b-min_a+1))", "# \u5148\u982d\u306e\u6700\u5927\u3068\u6700\u5f8c\u5c3e\u306e\u6700\u5c0f\u3092\u6c42\u3081\u308b\ncard_num, gate_num = map(int, input().split())\nlmax, rmin = map(int, input().split()) # \u6700\u521d\u306e\u5165\u529b\u304cl\u306e\u6700\u5927\u3068r\u306e\u6700\u5c0f\nfor i in range(1, gate_num):\n    l, r = map(int, input().split())\n    lmax = max(lmax, l) # lmax\u306blmax\u3068l\u306e\u5927\u304d\u3044\u65b9\n    rmin = min(rmin, r) # rmin\u306brmin\u3068r\u306e\u5c0f\u3055\u3044\u65b9\nprint(max(0, rmin-lmax+1)) # 0\u304brmin-lmax+1\u306e\u5927\u304d\u3044\u65b9\u3092\u51fa\u529b", "N, M = map(int, input().split())\nMin = 1\nMax = N\nfor i in range(M):\n    L, R = map(int, input().split())\n    if Min <= L and R <= Max:\n        Min, Max = L, R\n    elif Min <= R and R <= Max:\n        Max = R\n    elif Min <= L and L <= Max:\n        Min = L\n    elif L <= Min and Max <= R:\n        pass\n    else:\n        Max, Min  = 0, 1\n        break\nprint(Max - Min +1)", "N,M = map(int,input().split())\nL = [0 for _ in range(N)]\nfor i in range(M):\n  l,r = map(int,input().split())\n  l-=1;r-=1 #0index\n  L[l] += 1\n  if r+1 < N:\n    L[r+1] -= 1\nS = [0]\nfor i in range(N):\n  temp = L[i] + S[-1]\n  S.append(temp)\n#print(S)\nans = 0\nfor i in range(1,N+1):\n  if S[i] == M:\n    ans += 1\nprint(ans)", "N,M = map(int,input().split())\nL = []\nR = []\nans = 0\nfor j in range(M):\n  l,r = map(int,input().split())\n  L.append(l)\n  R.append(r)\nLmax = max(L)\nRmin = min(R)\nfor i in range(N):\n  if Lmax <= i+1 and i+1 <= Rmin:\n    ans += 1\nprint(ans)", "# coding: utf-8\n\ndef main():\n    N, M = list(map(int, input().split()))\n    imos = [0] * (N + 2)\n    ans = 0\n\n    for _ in range(M):\n        l, r = list(map(int, input().split()))\n        imos[l] += 1\n        imos[r + 1] -= 1\n\n    for i in range(1, N + 2):\n        imos[i] += imos[i - 1]\n        if imos[i] == M and i != N + 1:\n            ans += 1\n    \n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N,M = map(int, input().split())\n\nLm = -1\nRm = float('inf')\n\nfor _ in range(M):\n    L,R = map(int, input().split())\n    Lm = max(L, Lm)\n    Rm = min(R, Rm)\n\nprint(max(Rm - Lm + 1, 0))", "details = list(map(int, input().split()))\nN = details[0]\nM = details[1]\nfirst = []\nsecond = []\nfor i in range(M):\n    det = list(map(int, input().split()))\n    first.append(det[0])\n    second.append(det[1])\nmaxi = max(first)\nmini = min(second)\nif mini - maxi >= 0:\n    print((mini - maxi) + 1)\nelse:\n    print(0)", "n, m = list(map(int,input().split()))\nfor i in range(m):\n    if (i == 0):\n        l, r = list(map(int,input().split()))\n    else:\n        l2, r2 = list(map(int,input().split()))\n        l = max(l, l2)\n        r = min(r, r2)\nif (l > r):\n    print((0))\nelse:\n    print((r - l + 1))\n", "n,m = list(map(int,input().split()))\ngate = [[int(i) for i in input().split()] for _ in range(m)]\n\nminv = gate[0][0]\nmaxv = gate[0][1]\n\nfor x in gate:\n  minv = max(minv,x[0])\n  maxv = min(maxv,x[1])\n  \nprint((maxv-minv+1 if maxv-minv+1 >= 1 else 0))\n", "n,m = map(int, input().split())\na_max = 1\nb_min = n\nfor i in range(m):\n  a,b = map(int, input().split())\n  if a > a_max:\n    a_max = a\n  if b < b_min:\n    b_min = b\nprint(max(0,b_min - a_max + 1))", "# import math\n# import statistics\n# a=input()\n#b,c=int(input()),int(input())\n# c=[]\n# for i in a:\n#     c.append(i)\ne1,e2 = list(map(int,input().split()))\n#f = list(map(int,input().split()))\n#g = [input() for _ in range(a)]\nh = []\nfor i in range(e2):\n    h.append(list(map(int,input().split())))\nL=[]\nR=[]\nfor i in range(len(h)):\n    L.append(h[i][0])\nfor i in range(len(h)):\n    R.append(h[i][1])\n\nif min(R)>=max(L):\n    print((min(R)-max(L)+1))\nelse:\n    print((0))\n\n\n", "N,M = map(int,input().split())\nL=[]\nR=[]\n\nfor i in range(M):\n  l,r = map(int,input().split())\n  L.append(l)\n  R.append(r)\n  \nRm=min(R)\nLM=max(L)\n\nif Rm-LM >= 0:\n  print(Rm-LM+1)\n  \nelse:\n  print(0)", "N, M = [int(x) for x in input().split()]\nL = list()\nR = list()\nfor i in range(M):\n  l, r = [float(x) for x in input().split()]\n  L.append(l)\n  R.append(r)\nLmax = max(L)\nRmin = min(R)\nif(Rmin-Lmax)<0:\n  print(0)\nelse:\n  print(int(Rmin-Lmax+1))", "N, M = map(int, input().split())\nL, R = [], []\nfor _ in range(M):\n  l, r = map(int, input().split())\n  L.append(l)\n  R.append(r)\n\n# \u5171\u901a\u90e8\u5206\u3092\u6c42\u3081\u3001\u5171\u901a\u90e8\u5206\u304c\u7121\u3051\u308c\u30700\u3092\u51fa\u529b\u3059\u308b\nm = max(L)\nM = min(R)\nif M >= m: print(M-m+1)\nelse: print(0)", "n,m = map(int,input().split())\nlr = []\nfor i in range(m):\n    LR = list(map(int,input().split()))\n    lr.append(LR)\nmin,max = 1,n\nfor i in range(m):\n    if lr[i][0] > min:\n        min = lr[i][0]\n    if lr[i][1] < max:\n        max = lr[i][1]\nif min > max:\n    print(\"0\")\nelse:\n    print(max - min + 1)", "N,M=list(map(int,input().split()))\na,b=0,N\nfor _ in range(M):\n    tmpa,tmpb=list(map(int,input().split()))\n    a,b=max(a,tmpa),min(b,tmpb)\nans=max(0,b-a+1)\nprint(ans)\n", "#-*-coding:utf-8-*-\nimport sys\ninput=sys.stdin.readline\n\ndef main():\n    gates=[]\n    n,m = map(int,input().split())\n    gates=[list(map(int,input().split())) for _ in range(m)]\n    min_data=0\n    max_data=10**5+1\n\n    for gate in gates:\n        if min_data < gate[0]:\n            min_data=min(gate)\n        if max_data > gate[1]:\n            max_data=max(gate)\n    print(len(list(range(min_data,max_data+1))))\n\ndef __starting_point():\n    main()\n__starting_point()", "n, m = map(int, input().split())\nok = [0] * (n + 2)\nans = 0\nfor _ in range(m):\n    l, r = map(int, input().split())\n    ok[l] += 1\n    ok[r + 1] -= 1\nfor i in range(1, n + 2):\n    ok[i] += ok[i - 1]\n    if ok[i] == m:\n        ans += 1\nprint(ans)", "#import math\n#import itertools\nimport numpy as np\n#from collections import deque\n\nINT = lambda: int(input())\nINTM = lambda: map(int,input().split())\nSTRM = lambda: map(str,input().split())\nSTR = lambda: str(input())\nLIST = lambda: list(map(int,input().split()))\nLISTS = lambda: list(map(str,input().split()))\n\ndef do():\n    n,m=INTM()\n    ls=[]\n    rs=[]\n    for i in range(m):\n        l,r=INTM()\n        ls.append(l)\n        rs.append(r)\n    \n    ans=min(rs)-max(ls)+1\n    if ans<=0:\n        ans=0\n    print(ans)\n\n\n\n    \ndef __starting_point():\n    do()\n__starting_point()", "n,m=map(int,input().split())\na=[]\nb=[]\nfor i in range(m):\n    l,r=map(int,input().split())\n    a.append(l)\n    b.append(r)\nx=max(a)\ny=min(b)\n\nif y-x<0:\n    print('0')\nelse:\n    print(y-x+1)", "n, m = list(map(int, input().split()))\nprel, prer = 0, 1e6\nfor i in range(m):\n    l, r = list(map(int, input().split()))\n    prel, prer = max(prel, l), min(prer, r)\n\nif prer >= prel:\n    print((prer - prel + 1))\nelse:\n    print((0))\n", "n, m = list(map(int, input().split()))\n\ns = [0] * (n + 1)\nfor i in range(m):\n    l, r = list(map(int, input().split()))\n    s[l - 1] += 1\n    s[r] -= 1\n\nfor i in range(n):\n    s[i + 1] += s[i]\nprint((s.count(m)))\n", "n,m = map(int,input().split())\na = [list(map(int,input().split())) for i in range(m)]\nl,r = [list(i) for i in zip(*a)]\nprint(max(0,min(r)-max(l)+1))", "N,M = map(int,input().split())\nL = []\nR = []\nfor i in range(M):\n    l,r = map(int,input().split())\n    L.append(l)\n    R.append(r)\n\na = 1\nb = N\n\nfor i in range(M):\n    if(L[i] >= a and R[i] >= b):\n        a = L[i]\n    if(L[i] <= a and R[i] <= b):\n        b = R[i]\n    if(L[i] >= a and R[i] <= b):\n        a = L[i]\n        b = R[i]\n    if(R[i] < a or L[i] > b):\n        print(0)\n        return\n\n\nprint(b-a+1)", "n, m = list(map(int,input().split()))\nstart = 1\nend = n\nfor i in range(m):\n    x, y = list(map(int,input().split()))\n    start = max(start, x)\n    end = min(end, y)\nprint((end-start+1 if end-start >=0 else 0))\n", "N, M = map(int, input().split())\nL = 1\nR = N\nfor i in range(M):\n  l, r = map(int, input().split())\n  if L < l:\n    L = l\n  if R > r:\n    R = r\nprint(max(1+R-L, 0)) ", "N, M = map(int, input().split())\nL, R = [], []\nfor _ in range(M):\n  l, r = map(int, input().split())\n  L.append(l)\n  R.append(r)\n\nm = max(L)\nM = min(R)\nif m <= M: print(M-m+1)\nelse: print(0)", "'''\nCreated on 2020/09/08\n\n@author: harurun\n'''\ndef main():\n  import sys\n  pin=sys.stdin.readline\n  pout=sys.stdout.write\n  perr=sys.stderr.write\n  \n  N,M=map(int,pin().split())\n  L,R=map(int,pin().split())\n  for i in range(M-1):\n    l,r=map(int,pin().split())\n    if L<l and l<=R:\n      L=l\n    elif R<l:\n      print(0)\n      return\n    if L<=r and r<R:\n      R=r\n    elif r<L:\n      print(0)\n      return\n  print(R-L+1)\n  return \nmain()", "n,m=list(map(int,input().split()))\nl=0\nr=99999999\nfor i in range(m):\n  a,b=list(map(int,input().split()))\n  l=max(l,a)\n  r=min(r,b)\nif r>=l:\n  print((r-l+1))\nelse:\n  print((0))\n", "import numpy as np\n\nn, m = map(int, input().split())\ns = [list(map(int, input().split())) for _ in range(m)]\ns_np = np.array(s)\n\n\nif min(s_np[:, 1]) - max(s_np[:, 0]) >= 0:\n  print(min(s_np[:, 1]) - max(s_np[:, 0]) + 1)\nelse:\n  print(0)", "import sys\n\nn, m = map(int, sys.stdin.readline().split())\n\nl = 1\nr = n\nfor i in range(m):\n    new_l, new_r =  map(int, sys.stdin.readline().split())\n    if new_l > l:\n        l = new_l\n    if new_r < r:\n        r = new_r\nans = max(0, r - l + 1)\nprint(ans)", "N,M=list(map(int,input().split()))\nL,R=list(map(int,input().split()))\nfor i in range(M-1):\n    H,I=list(map(int,input().split()))\n    if H>L:\n        L=H\n    if R>I:\n        R=I\n    if R<L:\n        break\nif R<L:\n    print((0))\nelse:\n    ans=list(range(L,R+1))\n    print((len(ans)))\n", "from itertools import accumulate\nN, M = list(map(int, input().split()))\n\nleft = 1\nright = N\n\nfor i in range(M):\n    a,b = list(map(int, input().split()))\n    left = max(left,a)\n    right = min(right, b)\n\nprint((max(0,right-left+1)))\n\n# imos = [0] * (N + 2)\n# for i in range(M):\n#     l, r = map(int, input().split())\n#     imos[l] += 1\n#     imos[r + 1] -= 1\n#\n# imos = list(accumulate(imos))\n#\n# ans = 0\n# for im in imos:\n#     ans += (im == M)\n#\n# print(ans)\n", "n,m = map(int,input().split())\nlmax, rmin = 0, n\n\nfor _ in range(m):\n  l,r = map(int,input().split())\n  lmax = max(lmax, l)\n  rmin = min(rmin, r)\n\nprint((rmin-lmax)+1 if (rmin-lmax)+1 > 0 else 0)", "import sys\nimport math\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    N, M = MI()\n    D = [0] * (N+2)\n    for i in range(M):\n        L, R = MI()\n        D[L]+=1\n        D[R+1]-=1\n    ans = 0\n    \n    temp = 0\n    for i in D[1:]:\n        temp+=i\n        if temp == M:\n            ans+=1\n    \n    print(ans)\n    \n    \ndef __starting_point():\n    main()\n__starting_point()", "\ndetails = list(map(int,input().split()))\n\nN = details[0]\nM = details[1]\n\n\nab = [list(map(int, input().split())) for _ in range(M)]\n\nsmallest_max = ab[0][1]\nfor i in range(1,M):\n    if ab[i][1] < smallest_max:\n        smallest_max = ab[i][1]\n\nlargest_min = ab[0][0]\nfor i in range(1,M):\n    if ab[i][0] > largest_min:\n        largest_min = ab[i][0]\n\n\n\nif smallest_max - largest_min >=0:\n    print(smallest_max - largest_min + 1)\nelse:\n    print(0)", "n,m=map(int,input().split())\nl=0\nr=99999999\nfor i in range(m):\n  a,b=map(int,input().split())\n  l=max(l,a)\n  r=min(r,b)\nif r>=l:\n  print(r-l+1)\nelse:\n  print(0)", "N, M = map(int, input().split())\ndp = [0] * (N+1)\nfor i in range(M):\n    l, r = map(int, input().split())\n    dp[l-1] += 1\n    dp[r] -= 1\n\nfor i in range(N):\n    dp[i+1] += dp[i]\n\nans = 0\nfor i in range(N):\n    if dp[i] == M:\n        ans += 1\n\nprint(ans)", "l, m = map(int, input().split())\nlr = [list(map(int, input().split())) for _ in range(m)]\n\nll, rr = 1, l\nfor l, r in lr:\n    if ll <= l <= rr or l <= ll <= r:\n        ll, rr = max(ll, l), min(rr, r)\n    else:\n        print(0)\n        return\nprint(rr-ll+1)", "N,M = list(map(int,input().split()))\nmin_i = 0\nmax_i = N+1\nfor _ in range(M):\n  a,b = list(map(int,input().split()))\n  min_i = max(min_i,a)\n  max_i = min(max_i,b+1)\n  \nc = max(max_i - min_i,0)\nprint(c)\n", "n, m = list(map(int, input().split()))\nans = [i for i in range(1, n + 1)]\n\nl_max = 0\nr_min = n\n\nfor _ in range(m):\n    x, y = list(map(int, input().split()))\n    l_max = max(l_max, x)\n    r_min = min(r_min, y)\n\nprint((len([i for i in range(l_max, r_min + 1)])))\n", "n, m = map(int, input().split())\nlmax, rmin = map(int, input().split())\nfor i in range(1, m):\n  l, r = map(int, input().split())\n  lmax = max(lmax, l)\n  rmin = min(rmin, r)\nprint(max(0, rmin-lmax+1))", "n,m = list(map(int,input().split()))\nmin = 1\nmax = n\n\nfor i in range(m):\n    l,r = list(map(int,input().split())) \n    if min<l: min=l\n    if max>r: max=r \n\nif min>max:\n    print((0))\nelse:\n    print((max-min+1))\n", "n, m = map(int, input().split())\nL = []\nR = []\nfor _ in range(m):\n    l, r = map(int, input().split())\n    L.append(l)\n    R.append(r)\nans = min(R) - max(L)+1\nprint(ans) if ans > 0 else print(0)", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Fri Sep 11 01:27:46 2020\n\n@author: liang\n\"\"\"\n\nN, M = map(int,input().split())\nL = list()\nR = list()\nfor i in range(M):\n    l, r = map(int,input().split())\n    L.append(l)\n    R.append(r)\n\nans = min(R) - max(L) + 1\nif ans < 0:\n    ans = 0\nprint(ans)", "import numpy as np\n\nn, m = map(int, input().split())\ns = [list(map(int, input().split())) for _ in range(m)]\ns_np = np.array(s)\n\nif min(s_np[:, 1]) - max(s_np[:, 0]) >= 0:\n  print(min(s_np[:, 1]) - max(s_np[:, 0]) + 1)\nelse:\n  print(0)", "N,M = map(int,input().split())\na = list()\nb = list()\nfor i in range(M):\n  tmp_a,tmp_b =  map(int, input().split())\n  a.append(tmp_a)\n  b.append(tmp_b)\nprint(min(b)-max(a)+1 if min(b)-max(a) >= 0 else 0)", "N,M = map(int, input().split())\nL = [0]*M\nR = [0]*M\n\nfor i in range (M):\n  L[i],R[i] = map(int, input().split())\n\nL_SORT = sorted(L)\nR_SORT = sorted(R)\n\n#print(L_SORT)\n#print(R_SORT)\n\nL_MAX = L_SORT[M-1]\nR_MIN = R_SORT[0]\n\n#print(L_MAX)\n#print(R_MIN)\n\n\nif (R_MIN - L_MAX) < 0:\n  print(0)\nelse:\n  print(R_MIN-L_MAX + 1)", "import numpy as np\nn, m = map(int, input().split())\nans = [0]*n\n\nfor _ in range(m):\n    l, r = map(int, input().split())\n    ans[l-1] += 1\n    if r < n:\n        ans[r] -= 1\n\nc = list(np.cumsum(ans))\nprint(c.count(m))", "n, m = map(int, input().split())\ns = [list(map(int, input().split())) for _ in range(m)]\n\nmax_l, min_r = 0, float(\"inf\")\nfor i in range(m):\n  max_l = max(s[i][0], max_l)\n  min_r = min(s[i][1], min_r)\n  \nprint(max(min_r - max_l + 1, 0))", "def resolve():\n    n,m=map(int,input().split())\n    l=0\n    r=n\n    for i in range(m):\n        nl,nr=map(int,input().split())\n        l=max(l,nl)\n        r=min(r,nr)\n    print(max(r-l+1,0))\nresolve()", "n, m = list(map(int, input().split()))\nl_list, r_list = [], []\n\nfor i in range(m):\n\tl, r = list(map(int, input().split()))\n\tl_list.append(l)\n\tr_list.append(r)\n\nlimit_min = max(l_list)\nlimit_max = min(r_list)\ncnt = 0\n\nfor i in range(1, n + 1):\n\tif limit_min <= i <= limit_max:\n\t\tcnt += 1\n\nprint(cnt)\n", "n,m=map(int,input().split())\nmn,mx=-1,10**7\nfor _ in range(m):\n  l,r= map(int,input().split())\n  mn=max(mn,l)\n  mx=min(mx,r)\nans=max(mx-mn+1,0)\nprint(ans)", "N, M = [int(n) for n in input().split()]\nL = 0\nR = N\nfor m in range(M):\n    l, r = [int(n) for n in input().split()]\n    L = max(L, l)\n    R = min(R, r)\nprint(R-L+1 if L<=R else 0)", "n, m = map(int,input().split())\nL = [0]*m\nR = [0]*m\nfor i in range(m):\n    L[i], R[i] = map(int,input().split())\nans = max(min(R)-max(L)+1, 0)\nprint(ans)", "n, m = map(int,input().split())\nL, R = [], []\nfor _ in range(m):\n  l, r = map(int,input().split())\n  L.append(l)\n  R.append(r)\nl, r = max(L), min(R)\nif l > r: print(0)\nelse: print(r - l + 1)", "N, M = map(int, input().split())\n\nL, R = 0, 10 ** 5 + 1\nfor _ in range(M):\n    l, r = map(int, input().split())\n    L = max(L, l)\n    R = min(R, r+1)\n\nif R > L:\n    result = R - L\nelse:\n    result = 0\nprint(result)", "n,m = map(int, input().split())\nleft = set()\nright = set()\nfor i in range(m):\n  l,r = map(int, input().split())\n  left.add(l)\n  right.add(r)\nmini = max(left)\nmaxi = min(right)\nprint(len(range(mini,maxi+1)))", "n, m = map(int, input().split())\nmin_id = 0\nmax_id = 10**9\nfor _ in range(m):\n    l, r = map(int, input().split())\n    min_id = max(l, min_id)\n    max_id = min(r, max_id)\n\nans = max_id - min_id + 1\nif ans <= 0:\n    print(0)\nelse:\n    print(ans)", "N, M = map(int, input().split())\nL = 1\nR = N\nfor i in range(M):\n  l, r = map(int, input().split())\n  if L < l:\n    L = l\n  if R > r:\n    R = r\n  if R < L:\n    print(0)\n    break\nelse:\n  print(R - L + 1)", "import sys\ninput = sys.stdin.readline\nn, m = map(int,input().split())\nL, R = [], []\nfor _ in range(m):\n  l, r = map(int,input().split())\n  L.append(l)\n  R.append(r)\nl, r = max(L), min(R)\nif l > r: print(0)\nelse: print(r - l + 1)", "n, m = map(int, input().split())\nl_r = [ list(map(int, input().split())) for _ in range(m) ]\n\nl_ans = 0\nr_ans = float('inf')\nfor l, r in l_r:\n    l_ans = max(l_ans, l)\n    r_ans = min(r_ans, r)\nif r_ans < l_ans:\n    ans = 0\nelse:\n    ans = r_ans-l_ans+1\nprint(ans) ", "n,m=map(int,input().split())\ns=0\nt=10**10\nfor i in range(m):\n  l,r=map(int,input().split())\n  s=max(s,l)\n  t=min(t,r)\n\nif s>t:\n  print(0)\nelse:\n  print(t-s+1)", "n,m = map(int,input().split())\nx = []\ny = []\nfor i in range(m):\n    l,r = map(int,input().split())\n    x.append(l)\n    y.append(r)\nans = max(0,min(y)-max(x)+1)\nprint(ans)", "n,m =list(map(int,input().split()))\na =[]*m\nb =[]*m\nfor i in range(m):\n        l,r =list(map(int,input().split()))\n        a.append(l)\n        b.append(r)\n\nif max(a) <=min(b):\n        print((min(b)-max(a)+1))\nelse:\n        print((0))\n", "N, M = map(int, input().split())\nL_lis = []\nR_lis = []\nfor i in range(M):\n  L, R = map(int, input().split())\n  L_lis.append(L)\n  R_lis.append(R)\nnew_L, new_R = max(L_lis), min(R_lis)\nif new_L <= new_R:\n  print(new_R - new_L + 1)\nelse:\n  print(0)", "n, m = list(map(int, input().split()))\nl, r = [], []\nfor i in range(m):\n    a, b = list(map(int, input().split()))\n    l.append(a)\n    r.append(b)\nans = max(0, min(r)-max(l)+1)\nprint(ans)\n", "from itertools import accumulate\nN, M = list(map(int, input().split()))\n\n# left = 1\n# right = N\n#\n# for i in range(M):\n#     a,b = map(int, input().split())\n#     left = max(left,a)\n#     right = min(right, b)\n#\n# print(max(0,right-left+1))\n\nimos = [0] * (N + 2)\nfor i in range(M):\n    l, r = list(map(int, input().split()))\n    imos[l] += 1\n    imos[r + 1] -= 1\n\nimos = list(accumulate(imos))\n\nans = 0\nfor im in imos:\n    ans += (im == M)\n\nprint(ans)\n", "N, M = map(int, input().split())\nres = 0\nL_max = 0\nR_min = 100000\nfor _ in range(M):\n  L, R = map(int, input().split())\n  if L_max < L: L_max = L\n  if R < R_min: R_min = R\n  \n  \nprint(max(0, (R_min - L_max + 1)))", "n, m = list(map(int, input().split()))\ncount = [0] * (n+1)\nfor i in range(m):\n  l, r = list(map(int, input().split()))\n  l -= 1\n  count[l]+=1\n  count[r]-=1\nfor i in range(n):\n  count[i+1] += count[i]\nans = 0\nfor i in range(n):\n  if count[i] == m:\n    ans += 1\nprint(ans)\n", "N,M=map(int,input().split())\nmini=0\nmaxi=N\nfor _ in range(M):\n    mini1,maxi1=map(int,input().split())\n    mini=max(mini,mini1)\n    maxi=min(maxi,maxi1)\nprint(max(maxi-mini+1,0))", "n,m=list(map(int,input().split()))\nlmax,rmin=1,n\nfor _ in range(m):\n    l,r=list(map(int,input().split()))\n    lmax=max(lmax,l)\n    rmin=min(rmin,r)\nprint((max(0,rmin-lmax+1)))\n", "n,m = map(int,input().split())\nlower = -float('inf')\nupper = float('inf')\nfor i in range(m):\n    l,r = map(int,input().split())\n    if l > lower:\n        lower = l\n    if r < upper:\n        upper = r\n    if upper < lower:\n        upper = 0\n        lower = 0\n        break\nif upper == lower == 0:\n    print(0)\nelse:\n    print(upper - lower + 1)", "# -*- coding:utf-8 -*-\n\nin_gate = []\nout_gate = []\nN,M = map(int,input().split())\nfor _ in range(M):\n    temp_l,temp_r = map(int,input().split())\n    in_gate.append(temp_l)\n    out_gate.append(temp_r)\n\nans_bef = min(out_gate) - max(in_gate)\nif ans_bef < 0:\n    print(0)\nelse:\n    print(ans_bef+1)", "N, M = map(int, input().split())\n\nL_list = []\nR_list = []\n\nfor i in range(M):\n    A, B = map(int, input().split())\n    L_list.append(A)\n    R_list.append(B)\n\nif max(L_list) > min(R_list):\n    print(0)\nelse:\n    print(min(R_list) - max(L_list) + 1)", "N, M = map(int, input().split())\nmax_L = 1\nmin_R = N\nfor _ in range(M):\n    L, R = map(int, input().split())\n    max_L = max(L, max_L)\n    min_R = min(R, min_R)\n\nif min_R - max_L < 0:\n    print(0)\nelse:\n    print(min_R - max_L + 1)", "N,M=map(int,input().split())\n\nL,R=[],[]\nfor i in range(M):\n  x,y=map(int,input().split())\n  L.append(x)\n  R.append(y)\nmax_l,min_r=max(L),min(R)\nprint(max(0,min_r-max_l+1))", "N,M=list(map(int,input().split()))\ndiff=[0 for _ in range(N+1)]\nfor _ in range(M):\n    L,R=list(map(int,input().split()))\n    diff[L-1]+=1\n    diff[R]-=1\nans=0\nx=0\nfor i in range(N):\n    x+=diff[i]\n    if x==M:\n        ans+=1\nprint(ans)\n", "N, M = map(int, input().split())\n\nL = [0] * M\nR = [0] * M\nfor i in range(M):\n    L[i], R[i] = map(int, input().split())\n\nprint(max(min(R) - max(L) + 1, 0))", "import numpy as np\nn,m=map(int,input().split())\nx=[list(map(int,input().split())) for i in range(m)]\nprint(max(np.min(x,axis=0)[1]-np.max(x,axis=0)[0]+1,0))", "n, m, *lr = list(map(int, open(0).read().split()))\nprint((max(0, min(lr[1::2]) - max(lr[::2]) + 1)))\n", "import sys\nimport copy\nimport math\nimport itertools\nimport numpy as np\nl = [int(c) for c in input().split()]\nN=l[0]\nM=l[1]\nLR=[list(map(int,input().split())) for c in range(M)]\nsmall = 0\nlarge = N\nfor i in range(M):\n    if small<LR[i][0]:\n        small=LR[i][0]\n    \n    if large>LR[i][1]:\n        large=LR[i][1]\n\nif  small <= large:\n    print(large-small+1)\nelse:\n    print(0)", "N,M = map(int,input().split())\nlsL = []\nlsR = []\nfor i in range(M):\n    L,R = map(int,input().split())\n    lsL.append(L)\n    lsR.append(R)\nprint(max(0,min(lsR)-max(lsL)+1))"]