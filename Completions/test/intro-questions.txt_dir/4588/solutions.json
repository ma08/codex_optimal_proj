["x,y=input().split()\nif ord(x)<ord(y):print('<')\nelif ord(x)>ord(y):print('>')\nelse:print('=')", "X, Y = input().split()\n\ntemp = \"ABCDEF\"\n\nif temp.index(X) > temp.index(Y):\n    print(\">\")\nelif temp.index(X) == temp.index(Y):\n    print(\"=\")\nelse:\n    print(\"<\")", "l = list(input().split())\nif len(set(l))==1: print('=')\nelif l==sorted(l): print('<')\nelse: print('>')", "X, Y = map(ord, input().split())\nif X < Y:\n    print('<')\nelif X > Y:\n    print('>')\nelse:\n    print('=')", "x,y=input().split()\nif ord(x)>ord(y):\n    print(\">\")\nelif ord(x)==ord(y):\n    print(\"=\")\nelse:\n    print(\"<\")", "X,Y = map(ord,input().split())\n\nif X > Y:\n  print('>')\nelif X < Y:\n  print('<')\nelse:\n  print('=')", "x, y = map(str, input().split())\n\nif x < y:\n    print(\"<\")\nelif x > y:\n    print(\">\")\nelif x == y:\n    print(\"=\")", "x,y=input().split()\nif x==y:\n    print(\"=\")\nelif x<y:\n    print(\"<\")\nelse:\n    print(\">\")", "x, y = list(map(str,input().split()))\nl = ['A','B','C','D','E','F']\n\nprint((['=', '<', '>'][l.index(y) > l.index(x) or -(l.index(y) < l.index(x))]))\n", "X, Y = map(str, input().split())\nif X < Y:\n    print('<')\nelif X > Y:\n    print('>')\nelse:\n    print('=')", "# import math\n# import statistics\n# import itertools\n# a=int(input())\n#b,c=int(input()),int(input())\n# c=[]\n# for i in a:\n#     c.append(int(i))\nA,B= list(map(str,input().split()))\n# f = list(map(int,input().split()))\n# g = [input().split for _ in range(a)]\n# h = []\n# for i in range(a):\n#     h.append(list(map(int,input().split())))\n# a = [[0] for _ in range(H)]#nizigen\n\nlis=[\"A\",\"B\", \"C\", \"D\", \"E\", \"F\"]\nif lis.index(A)<lis.index(B):\n    print(\"<\")\nelif lis.index(A)==lis.index(B):\n    print(\"=\")\nelse:\n    print(\">\")\n\n", "lst = input().split()\nX = lst[0]\nY = lst[1]\nlst.sort()\n\nif X == Y:\n   print('=')\nelif X == lst[0]:\n   print('<')\nelse:\n   print('>')", "a,b =input().split()\nif a == b:\n  print(\"=\")\nelif a < b:\n  print(\"<\")\nelse:\n  print(\">\")\n", "import bisect,collections,copy,heapq,itertools,math,string\nimport sys\ndef I():\n    #1 line 1 int\n     return int(sys.stdin.readline().rstrip())\ndef LI():\n    #1 line n int\n     return list(map(int,sys.stdin.readline().rstrip().split()))\ndef S():\n    #1 line 1 string\n     return sys.stdin.readline().rstrip()\ndef LS():\n    #1 line n strings\n     return list(sys.stdin.readline().rstrip().split())\n\nA=LS()\nX=A[0]\nY=A[1]\nif X < Y:\n    print(\"<\")\nelif X==Y:\n    print(\"=\")\nelse:\n    print(\">\")", "a,b=input().split();print(\"=<>\"[(a!=b)+(a>b)])", "x, y = input().split()\nif x > y:\n  print(\">\")\nelif x == y:\n  print(\"=\")\nelse:\n  print(\"<\")", "X,Y=map(str,input().split())\nif X>Y :\n  print(\">\")\nelif X==Y :\n  print(\"=\")\nelse :\n  print(\"<\")", "a,b=input()[0::2]\nprint(\"<\"if a<b else\">\"if a>b else\"=\")", "a, b = input().split()\nif a > b:\n    print('>')\nelif a < b:\n    print('<')\nelse:\n    print('=')", "x,y = input().split()\nans = \"=\"\nif x < y: ans = \"<\"\nelif x > y: ans = \">\"\nprint(ans)", "X, Y = input().split()\nif X == Y:\n    print('=')\nelif X > Y:\n    print('>')\nelse:\n    print('<')", "#78\ndata=list(input().split())\nif data[0]<data[1]:\n    print('<')\nelif data[0]>data[1]:\n    print('>')\nelse:\n    print('=')", "a,b = map(str,input().split())\nif a == b:\n  print(\"=\")\nelif a<b:\n  print(\"<\")\nelse:\n  print(\">\")", "x, y = map(str, input().split())\n#print(int(ord(x)), int(ord(y)))\nif x < y:\n    print(\"<\")\nelif x == y:\n    print(\"=\")\nelse:\n    print(\">\")", "X, Y = input().split()\n\nif X < Y:\n    print('<')\nelif X > Y:\n    print('>')\nelse:\n    print('=')", "x,y = input().split()\nif ord(x)<ord(y):\n    print(\"<\")\nelif ord(x)==ord(y):\n    print(\"=\")\nelse:\n    print(\">\")", "x, y = input().split()\nprint(\"<\" if x < y else \"=\" if x == y else \">\")", "x, y = input().split()\nif ord(x) < ord(y):\n    print('<')\nelif ord(x) > ord(y):\n    print('>')\nelse:\n    print('=')", "import bisect,collections,copy,heapq,itertools,math,string\nimport sys\ndef I():\n    # 1 line 1 int\n    return int(sys.stdin.readline().rstrip())\ndef LI():\n    # 1 line n ints\n    return list(map(int,sys.stdin.readline().rstrip().split()))\ndef S():\n    # 1 line 1 string\n    return sys.stdin.readline().rstrip()\ndef LS():\n    # 1 line n strings\n    return list(sys.stdin.readline().rstrip().split())\n\nA = LS()\nX = A[0]\nY = A[1]\nif X < Y:\n    print(\"<\")\nelif X == Y:\n    print(\"=\")\nelse:\n    print(\">\")", "a,b=input().split();print(['=','<','>'][(a!=b)+(a>b)])", "a, b = input().split()\n\nif a < b:\n  print('<')\nelif a>b:\n  print('>')\nelse:\n  print('=')", "X, Y = input().split()\n\nif X == Y:\n  print('=')\nelif X > Y:\n  print('>')\nelse:\n  print('<')\n", "x,y=input().split()\nprint('<' if x<y else '>' if x>y else '=')", "# coding = SJIS\n\nx, y = list(map(str, input().split()))\nalp = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\"]\n\nif alp.index(x) < alp.index(y):\n    print(\"<\")\nelif alp.index(x) > alp.index(y):\n    print(\">\")\nelse:\n    print(\"=\")\n", "import math\nX,Y=input().split()\nX=ord(X)\nY=ord(Y)\nif X==Y:\n    print(\"=\")\nelif X>Y:\n    print(\">\")\nelse:\n    print(\"<\")\n\n", "A,B =(ord(x) for x in input().split())\n\n\nif A<B: \n    print('<')\nelif A>B:\n    print('>')\nelse:\n    print('=')\n    \n", "X, Y = input().split()\nif X < Y:\n  print(\"<\")\nif X > Y:\n  print(\">\")\nif X == Y:\n  print(\"=\")", "a,b = input().split()\n\nif ord(a) < ord(b):\n    print(\"<\")\nelif ord(a) > ord(b):\n    print(\">\")\nelse:\n    print(\"=\")", "x,y = input().split()\nif x < y:\n    print('<')\nelif x == y:\n    print('=')\nelse:\n    print('>')", "x,y=map(str,input().split())\nif x<y:\n  print('<')\nelif x==y:\n  print('=')\nelse:\n  print('>')", "#ABC078A\nx,y = input().split()\nprint(\"<\" if x<y else \"=\" if x==y else \">\")", "x, y = map(str, input().split())\nprint(\"<\" if x < y else \">\" if x > y else \"=\")", "x,y=list(map(str,input().split()))\nif x==y:\n    print(\"=\")\nelif x<y:\n    print(\"<\")\nelse:\n    print(\">\")\n    \n", "def iroha():\n    a, b = input().split()\n    exmap = {'A': 10, 'B': 11, 'C': 12, 'D': 13, 'E': 14, 'F': 15}\n    aa = exmap[a]\n    bb = exmap[b]\n    if aa < bb:\n        print(\"<\")\n    elif aa > bb:\n        print(\">\")\n    else:\n        print(\"=\")\n\n\n\ndef __starting_point():\n    iroha()\n\n\n__starting_point()", "x,y = input().split()\nif x > y:\n    print('>')\nelif x < y:\n    print('<')\nelse:\n    print('=')", "def alp_num(alp):\n    alp_lst = list('ABCDEF')\n\n    num = alp_lst.index(alp)\n    return num\n\n\ndef main():\n    x, y = map(str, input().split())\n    num1 = alp_num(x)\n    num2 = alp_num(y)\n\n    if num1 < num2:\n        com_ope = '<'\n    elif num1 == num2:\n        com_ope = '='\n    else:\n        com_ope = '>'\n\n    print(com_ope)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "X, Y = input().split()\nif X > Y:\n    ans = '>'\nelif X < Y:\n    ans = '<'\nelse:\n    ans = '='\nprint(ans)", "x, y = input().split()\n\nif ord(x) < ord(y):\n    print('<')\nelif ord(x) > ord(y):\n    print('>')\nelse:\n    print('=')\n", "x,y = input().split()\nif ord(x) < ord(y):\n    print(\"<\")\nelif ord(x) > ord(y):\n    print(\">\")\nelse:\n    print(\"=\")", "A, B = input().split()\nprint('<' if A < B else \"=\" if A == B else '>')", "from collections import Counter,defaultdict,deque\nfrom heapq import heappop,heappush\nfrom bisect import bisect_left,bisect_right \nimport sys,math,itertools,fractions\nsys.setrecursionlimit(10**8)\nmod = 10**9+7\nINF = float('inf')\ndef inp(): return int(sys.stdin.readline())\ndef inpl(): return list(map(int, sys.stdin.readline().split()))\n\na,b = input().split()\nif a < b:\n    print('<')\nelif a > b:\n    print('>')\nelse:\n    print('=')\n", "x,y=map(str,input().split())\n\nif int(ord(x))<int(ord(y)):\n    ans='<'\nelif int(ord(x))>int(ord(y)):\n    ans='>'\nelse:\n    ans='='\nprint(ans)", "X, Y = input().split()\nalphabet = ['A', 'B', 'C', 'D', 'E', 'F']\nx_i = 0\ny_i = 0\nfor i in range(6):\n    if alphabet[i] == X:\n        x_i = i\n    if alphabet[i] == Y:\n        y_i = i\nif x_i < y_i:\n    print('<')\nelif x_i > y_i:\n    print('>')\nelse:\n    print('=')\n", "x, y = list(map(str, input().split()))\n\ndict_num = {'A': 10,\n            'B': 11,\n            'C': 12,\n            'D': 13,\n            'E': 14,\n            'F': 15}\n\nif dict_num[x] == dict_num[y]:\n    print('=')\nelif dict_num[x] > dict_num[y]:\n    print('>')\nelse:\n    print('<')\n", "A=1\nB=2\nC=3\nD=4\nE=5\nF=6\nX,Y=input().split()\nif X<Y:\n  print(\"<\")\nelif X>Y:\n  print(\">\")\nelif X==Y:\n  print(\"=\")", "A, B = input().split()\nif A > B: \n    print('>')\nelif A == B:\n    print('=')\nelse:\n    print('<')\n", "X, Y = input().split()\n\nif X < Y:\n  print(\"<\")\nelif X == Y:\n  print(\"=\")\nelse:\n  print(\">\")\n", "X,Y=input().split()\nprint(\"<\"if X<Y else \">\" if X>Y else \"=\")", "X, Y = [x for x in input().split()]\n\nif ord(X) < ord(Y):\n    print('<')\nelif ord(X) == ord(Y):\n    print('=')\nelse:\n    print('>')\n", "a, b = input().split()\n\ndict = {\n  'A':0,\n  'B':1,\n  'C':2,\n  'D':3,\n  'E':4,\n  'F':5\n}\na = dict[a]\nb = dict[b]\n\nif a < b:\n  ans = '<'\nelif b < a:\n  ans = '>'\nelse:\n  ans = '='\n  \nprint(ans)\n", "x,y=map(str,input().split())\nif x>y:\n  print(\">\")\nelif x==y:\n  print(\"=\")\nelse:\n  print(\"<\")", "X, Y = [ int('0x' + i, base = 16) for i in input().split()]\nif X > Y:\n    print('>')\nelif X < Y:\n    print('<')\nelse:\n    print('=')", "x,y = map(str,input().split())\n\nif x > y:\n  print('>')\n  \nelif x == y:\n  print('=')\n  \nelse:\n  print('<')", "def main():\n    a, b = input().split(\" \")\n\n    if a > b:   print(\">\")\n    elif a < b: print(\"<\")\n    else:       print(\"=\")\n\n\nmain()", "a,b = input().split()\n\nif a > b:\n  print('>')\nelif a == b:\n  print('=')\nelse:\n  print('<')", "x,y = map(str,input().split())\nif ord(x) > ord(y):\n    print(\">\")\nelif x == y:\n    print(\"=\")\nelse:\n    print(\"<\")", "x, y = input().split()\nif x == y:\n  print(\"=\")\nelif ord(x) > ord(y):\n  print(\">\")\nelse:\n  print(\"<\")", "x,y=input().split()\nprint(\"<\" if x<y else \">\" if x>y else \"=\")", "A, B = input().split()\nif ord(A) > ord(B):\n    print('>')\nelif ord(A) < ord(B):\n    print('<')\nelse:\n    print('=')", "x,y=input().split()\nprint(\"<\" if x<y else \">\" if x>y else \"=\")", "x,y=input().split()\nif x<y:\n    print(\"<\")\nelif x>y:\n    print(\">\")\nelse:\n    print(\"=\")", "x,y=map(str,input().split())\nif ord(x)<ord(y):\n  print(\"<\")\nelif ord(x)>ord(y):\n  print(\">\")\nelse:\n  print(\"=\")", "X, Y = input().split()\n\nprint(\">\" if X > Y  else \"=\" if X == Y else \"<\")", "X,Y = input().split()\nprint(\"<\" if X < Y else \">\" if Y < X else \"=\")", "x, y = input().split()\nif x > y:\n  print(\">\")\nelif x == y:\n  print(\"=\")\nelse:\n  print(\"<\")\n", "X,Y=map(str,input().split())\nif X<Y:\n    ans=\"<\"\nelif X>Y:\n    ans=\">\"\nelse:\n    ans=\"=\"\nprint(ans)", "a=input().split()\nb=sorted(a)\n\nif a!=b:\n  print('>')\n  \nelif a[0]==a[1]:\n  print('=')\n  \nelse:\n  print('<')\n  \n\n\n", "X, Y = input().split()\nx_i = ord(X)\ny_i = ord(Y)\nif x_i < y_i:\n    print('<')\nelif x_i > y_i:\n    print('>')\nelse:\n    print('=')\n", "a,b = input().split()\n\nif a < b:\n    print('<')\nelif a == b:\n    print('=')\nelse:\n    print('>')\n", "A,B=input().split()\n\nmydict = {\"A\":10, \"B\":11, \"C\":12, \"D\":13, \"E\":14, \"F\":15}\n\nprint('>') if mydict[A] > mydict[B] else print('<') if mydict[A] < mydict[B] else print('=')\n", "a, b = input().split()\nif a == b:\n  print('=')\nelif a > b:\n  print('>')\nelse:\n  print('<')", "X, Y = input().split()\nif X > Y:\n    print(\">\")\nelif Y > X:\n    print(\"<\")\nelse:\n    print(\"=\")", "x = list(map(str,input().split()))\n\nif(x[0]>x[1]):\n    print('>')\nelse:\n    if(x[0]<x[1]):\n        print('<')\n    else:\n        print('=')\n", "x, y = list(map(ord, input().split()))\nif x > y:\n    print(\">\")\nelif x == y:\n    print(\"=\")\nelse:\n    print(\"<\")\n", "x, y = map(str, input().split())\nif x < y:\n    print('<')\nelif x > y:\n    print('>')\nelse:\n    print('=')", "#!/usr/bin/env python3\nimport sys\nsys.setrecursionlimit(10**6)\n\nx, y = list(map(str, input().split()))\n\nx = int(\"0x\"+x, 16)\ny = int(\"0x\"+y, 16)\n\nif x > y:\n    print(\">\")\nelif x == y:\n    print(\"=\")\nelse:\n    print(\"<\")\n", "x,y = input().split()\nif x<y:\n    print('<')\nelif x>y:\n    print('>')\nelse:\n    print('=')", "x,y = map(lambda x: int(x,16),input().split())\nans = \"=\"\nif x < y: ans = \"<\"\nelif x > y: ans = \">\"\nprint(ans)", "a,b=input().split()\nif a<b:\n  print(\"<\")\nelif a>b:\n  print(\">\")\nelse:\n  print(\"=\")", "A, B = map(str, input().split())\n\nif A > B:\n    print(\">\")\nelif A < B:\n    print(\"<\")\nelse:\n    print(\"=\")", "X,Y=input().split()\nif X<Y:\n    print(\"<\")\nelif X>Y:\n    print(\">\")\nelse:\n    print(\"=\")\n", "array = [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"]\nX,Y = input().split()\nprint(\"<\") if array.index(X)<array.index(Y) else print(\">\") if array.index(X)>array.index(Y) else print(\"=\")", "x,y = input().split()\nif x<y:\n    print('<')\nelif x>y:\n    print('>')\nelse:\n    print('=')\n", "import sys\n\nX, Y = sys.stdin.readline().strip().split()\nif X == Y:\n    print(\"=\")\nelif X < Y:\n    print(\"<\")\nelse:\n    print(\">\")", "a,b = input().split()\na = a.replace(\"A\",\"10\").replace(\"B\",\"11\").replace(\"C\",\"12\").replace(\"D\",\"13\").replace(\"E\",\"14\").replace(\"F\",\"15\")\nb = b.replace(\"A\",\"10\").replace(\"B\",\"11\").replace(\"C\",\"12\").replace(\"D\",\"13\").replace(\"E\",\"14\").replace(\"F\",\"15\")\nif int(a) == int(b):\n    print(\"=\")\nelif int(a) > int(b):\n    print(\">\")\nelif int(a) < int(b):\n    print(\"<\")", "x,y = input().split()\nif x > y:\n    print('>')\nif x < y:\n    print('<')\nif x == y:\n    print('=')", "a,b=input().split(\" \")\nif a==b:print(\"=\")\nelif a<b:print(\"<\")\nelse:print(\">\")", "x,y = list(map(ord,input().split()))\nprint((\"<\" if x < y  else \">\" if x > y else \"=\"))\n", "x,y = map(str,input().split())\nal = list(\"ABCDEF\")\nx = al.index(x)\ny = al.index(y)\nif x>y:\n    print(\">\")\nelif x<y:\n    print(\"<\")\nelse:\n    print(\"=\")", "x, y = list(map(str, input().split()))\n\nif x < y:\n    print(\"<\")\nelif x > y:\n    print(\">\")\nelse:\n    print(\"=\")\n"]