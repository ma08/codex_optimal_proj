["t=int(input())\nfor i in range (t):\n    n,k=map(int,input().split())\n    if n-k+1>0 and (n-k+1)%2==1:\n        print(\"YES\")\n        print(*([1]*(k-1)), n-k+1)\n    elif n-k*2+2>0 and (n-k*2+2)%2==0:\n        print(\"YES\")\n        print(*([2]*(k-1)), n-k*2+2)\n    else:\n        print(\"NO\")", "t = int(input())\nfor _ in range(t):\n    n, k = list(map(int, input().split()))\n    if n % 2 ==  k % 2 and n >= k:\n        print('YES')\n        out = [1] * k\n        out[0] += (n - k)\n        print(*out)\n    elif n % 2 == 0 and n >= 2 * k:\n        print('YES')\n        out = [2] * k\n        out[0] += (n - 2*k)\n        print(*out)\n    else:\n        print('NO')\n", "for _ in range(int(input())):\n    n, k = list(map(int, input().split()))\n    if k % 2 == 1:\n        if n % 2 == 0:\n            if 2*k <= n:\n                print('YES')\n                print(*[2]*(k-1), n-2*(k-1))\n            else:\n                print('NO')\n        else:\n            if k <= n:\n                print('YES')\n                print(*[1]*(k-1), n-k+1)\n            else:\n                print('NO')\n    else:\n        if k <= n and n % 2 == 0:\n            print('YES')\n            print(*[1]*(k-1), n-k+1)\n        else:\n            print('NO')\n", "import sys\n\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nns = lambda: readline().rstrip()\nni = lambda: int(readline().rstrip())\nnm = lambda: map(int, readline().split())\nnl = lambda: list(map(int, readline().split()))\nprn = lambda x: print(*x, sep='\\n')\n\n\ndef solve():\n    n, k = nm()\n    l = [1]*(k-1) + [n-k+1]\n    if l[-1] > 0 and l[-1] % 2:\n        print('YES')\n        print(*l)\n        return\n    l = [2]*(k-1) + [n - 2*(k-1)]\n    if l[-1] > 0 and l[-1] % 2 == 0:\n        print('YES')\n        print(*l)\n        return\n    print('NO')\n    return\n\n# solve()\n\nT = ni()\nfor _ in range(T):\n    solve()\n", "for _ in range(int(input())):\n    n, k = map(int, input().split())\n    odd = n - k + 1\n    even = n - ((k-1) * 2)\n    if odd > 0 and odd % 2 == 1:\n        print('YES')\n        print('1 ' * (k-1), odd, sep='')\n    elif even > 0 and even % 2 == 0:\n        print('YES')\n        print('2 ' * (k-1), even, sep='')\n    else:\n        print('NO')", "for i in range(int(input())):\n  n,k=[int(i) for i in input().split()]\n  if k>n:\n    print('NO')\n  elif (n-k+1)%2==1 and n-k+1>0:\n    print('YES')\n    for i in range(k-1):\n      print(1,end=' ')\n    print(n-k+1)\n  elif  (n-2*(k-1))%2==0 and n-2*(k-1)>0:\n    print('YES')\n    for i in range(k-1):\n      print(2,end=' ')\n    print(n-2*(k-1))\n  else:\n    print('NO')\n", "import sys\nimport os\nimport time\nimport collections\nfrom collections import Counter, deque\nimport itertools\nimport math\nimport timeit\nimport random\nimport string\n\n#########################\n# imgur.com/Pkt7iIf.png #\n#########################\n\ndef sieve(n):\n    if n < 2: return list()\n    prime = [True for _ in range(n + 1)]\n    p = 3\n    while p * p <= n:\n        if prime[p]:\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n        p += 2\n    r = [2]\n    for p in range(3, n + 1, 2):\n        if prime[p]:\n            r.append(p)\n    return r\n\ndef divs(n, start=1):\n    divisors = []\n    for i in range(start, int(math.sqrt(n) + 1)):\n        if n % i == 0:\n            if n / i == i:\n                divisors.append(i)\n            else:\n                divisors.extend([i, n // i])\n    return divisors\n\ndef divn(n, primes):\n    divs_number = 1\n    for i in primes:\n        if n == 1:\n            return divs_number\n        t = 1\n        while n % i == 0:\n            t += 1\n            n //= i\n        divs_number *= t\n\ndef flin(d, x, default=-1):\n    left = right = -1\n    for i in range(len(d)):\n        if d[i] == x:\n            if left == -1: left = i\n            right = i\n    if left == -1:\n        return default, default\n    else:\n        return left, right\n\ndef ceil(n, k): return n // k + (n % k != 0)\ndef ii(): return int(input())\ndef mi(): return list(map(int, input().split()))\ndef li(): return list(map(int, input().split()))\ndef lcm(a, b): return abs(a * b) // math.gcd(a, b)\ndef prr(a, sep=' '): print(sep.join(map(str, a)))\ndef dd(): return collections.defaultdict(int)\ndef ddl(): return collections.defaultdict(list)\n\n########################################################################################################################\n# input = sys.stdin.readline\n\nfor _ in range(ii()):\n    n, k = mi()\n    even = n - 2*(k - 1)\n    odd = n - (k - 1)\n    if odd > 0 and odd % 2:\n        res = [1]*(k - 1) + [odd]\n        print('YES')\n        prr(res, ' ')\n    elif even > 0 and even % 2 == 0:\n        res = [2] * (k - 1) + [even]\n        print('YES')\n        prr(res, ' ')\n    else:\n        print('NO')\n", "for tc in range(int(input())):\n    n, k = [int(s) for s in input().split()]\n\n    if n % 2 == 1 and k % 2 == 0:\n        print('NO')\n        continue\n    \n    if n % 2 == 0 and k % 2 == 1:\n        least = 2\n    else:\n        least = 1\n\n    if least * k > n:\n        print('NO')\n        continue\n\n    print('YES')\n    print(*([n - least*k + least] + [least] * (k-1)))\n", "t = int(input())\nfor _ in range(t):\n    n, k = list(map(int, input().split()))\n    ans = []\n    if n % 2 == 0:\n        if k % 2 == 0:\n            for i in range(k-1):\n                ans.append(1)\n                n -= 1\n            ans.append(n)\n\n        else:\n            for i in range(k-1):\n                ans.append(2)\n                n -= 2\n            ans.append(n)\n\n    else:\n        if k % 2 == 0:\n            ans.append(-1)\n        else:\n            for i in range(k-1):\n                ans.append(1)\n                n -= 1\n            ans.append(n)\n    if min(ans) <= 0:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n        print(*ans)\n", "t = int(input())\nfor _ in range(t):\n\tn, k = map(int, input().split())\n\tif k%2 == 0 and n%2 == 1:\n\t\tprint(\"NO\")\n\telif (k%2 == 1 and n%2 == 0 and n < 2*k) or n < k:\n\t\tprint(\"NO\")\n\telif k%2 == 1 and n%2 == 0:\n\t\tprint(\"YES\")\n\t\tans = [2] * (k-1) + [n-2*(k-1)]\n\t\tprint(*ans)\n\telse:\n\t\tprint(\"YES\")\n\t\tans = [1] * (k-1) + [n-k+1]\n\t\tprint(*ans)", "for t in range(int(input())):\n    n,k = map(int,input().split())\n    if n < k:\n        print(\"NO\")\n    elif n%2==k%2:\n        print(\"YES\")\n        print(*([1]*(k-1)+[n-(k-1)]))\n    elif n%2==0 and n >= 2*k-1:\n        print(\"YES\")\n        print(*([2]*(k-1)+[n-2*(k-1)]))\n    else:\n        print(\"NO\")", "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n,k=list(map(int,input().split()))\n\n    if n%2==k%2 and n>=k:\n        print(\"YES\")\n        ANS=[1]*(k-1)+[n-(k-1)]\n        print(*ANS)\n\n    elif n%2==0 and n>=2*k:\n        print(\"YES\")\n        ANS=[2]*(k-1)+[n-2*(k-1)]\n        print(*ANS)\n    else:\n        print(\"NO\")\n        \n        \n        \n", "import math,sys\nfrom sys import stdin, stdout\nfrom collections import Counter, defaultdict, deque\ninput = stdin.readline\nI = lambda:int(input())\nli = lambda:list(map(int,input().split()))\n\ndef case():\n    n,k=li()\n    if(k>n):\n        print(\"NO\")\n        return()\n    if((n-k-1)%2):\n        print(\"YES\")\n        for i in range(k-1):\n            print(1,end=\" \")\n        print(n+1-k)\n        return \n    if(n-2*k<0):\n        print(\"NO\")\n        return \n    else:\n        \n        if((n-2*k-2)%2==0):\n            print(\"YES\")\n            for i in range(k-1):\n                print(2,end=\" \")\n            print(n-2*k+2)\n        else:\n            print(\"NO\")     \nfor _ in range(int(input())):\n    case()", "import math\nfor _ in range(int(input())):\n\tn,k=list(map(int,input().split()))\n\tif n<k:\n\t\tprint(\"NO\")\n\telse:\n\t\tif n%2==0:\n\t\t\tif k%2==0:\n\t\t\t\td=[]\n\t\t\t\tfor i in range(k-1):\n\t\t\t\t\td.append(1)\n\t\t\t\td.append(n-k+1)\n\t\t\t\tprint(\"YES\")\n\t\t\t\tprint(*d)\n\t\t\telse:\n\t\t\t\tif n<2*k:\n\t\t\t\t\tprint(\"NO\")\n\t\t\t\telse:\n\t\t\t\t\td=[]\n\t\t\t\t\tfor i in range(k-1):\n\t\t\t\t\t\td.append(2)\n\t\t\t\t\td.append(n-2*(k-1))\n\t\t\t\t\tprint(\"YES\")\n\t\t\t\t\tprint(*d)\n\t\telse:\n\t\t\tif k%2==1:\n\t\t\t\td=[]\n\t\t\t\tfor i in range(k-1):\n\t\t\t\t\td.append(1)\n\t\t\t\td.append(n-k+1)\n\t\t\t\tprint(\"YES\")\n\t\t\t\tprint(*d)\n\t\t\telse:\n\t\t\t\tprint(\"NO\")\n\n\n\n\t\n", "for f in range(int(input())):\n    n,k=map(int,input().split())\n    if k%2==0:\n        if n%2==0:\n            if n<k:\n                print(\"NO\")\n            else:\n                print(\"YES\")\n                sol=[1]*k\n                sol[0]=n-k+1\n                print(*sol)\n        else:\n            print(\"NO\")\n    else:\n        if n%2==0:\n            if 2*k>n:\n                print(\"NO\")\n            else:\n                print(\"YES\")\n                sol=[2]*k\n                sol[0]=n-2*k+2\n                print(*sol)\n        else:\n            if k>n:\n                print(\"NO\")\n            else:\n                print(\"YES\")\n                sol=[1]*k\n                sol[0]=n-k+1\n                print(*sol)"]