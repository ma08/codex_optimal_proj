["N=int(input())\nS=input()\n\nans=S[0]\nfor s in S:\n  if ans[-1]!=s:\n    ans+=s\nprint(len(ans))", "N=int(input())\nS=list(input())\nans=[]\n\nwhile len(S)>1:\n\tif S[0]==S[1]:\n\t\tS.pop(0)\n\telse:\n\t\tans.append(S.pop(0))\n\nprint(len(ans)+1)", "n = int(input())\ns = input()\n\npre = ''\nans = 0\nfor c in s:\n    if c != pre: ans += 1\n    pre = c\nprint(ans)\n", "N=(int(input()))\nS=(str(input()))\nans=1\nfor i in range(1,N):\n  if S[i]==S[i-1]:\n    continue\n  else:\n    ans+=1\nprint(ans)\n", "N = int(input())\nS = str(input())\ncnt = 1\n\nfor i in range(1,N):\n    if S[i] == S[i-1]:\n        pass\n    else:\n        cnt += 1\n\nprint(cnt)\n", "n = int(input())\nslimes = input()\nfusion = [slimes[0]]\n\ncnt = 0\n\nfor i in range(1,n):\n    if fusion[cnt] != slimes[i]:\n        fusion.append(slimes[i])\n        cnt += 1\n\nprint(cnt+1)", "n=int(input())\ns=input()\nans = 1\nfor i in range(1,n):\n  if s[i-1]!=s[i]:\n    ans += 1\nprint(ans)", "# ABC 132 C\nN = int(input())\nS = str(input())\nans = 1\ns = list(map(str, str(S)))\n\nfor i in range(N-1):\n    if s[i] != s[i+1]:\n        ans += 1\nprint(ans)", "N = int(input())\nS = list(input())\n\n# N=O(10^5)\u306a\u306e\u3067O(N)\u3067\u89e3\u304f\n# \u540c\u3058\u6587\u5b57\u30921\u3064\u306e\u30b0\u30eb\u30fc\u30d7\u3068\u898b\u308b\u3068\u304d\u306b\u3001\u4f55\u30b0\u30eb\u30fc\u30d7\u3067\u304d\u308b\u304b\uff1f\n# \u6587\u5b57\u304c\u5909\u5316\u3059\u308b\u70b9\u306b\u7740\u76ee\u3059\u308c\u3070\u3088\u3044\u3002\u3059\u308b\u3068\u30b0\u30eb\u30fc\u30d7\u6570\u306f\uff08\u5909\u5316\u70b9+1\uff09\u500b\u3068\u6c42\u307e\u308b\uff01\n\nans=1\nfor i in range(N-1):\n  if S[i] != S[i+1]: ans += 1\n\nprint(ans)", "n = int(input())\n\ns = input()\n\nans = 1\n\nfor i in range(1, n):\n    if s[i - 1] != s[i]:\n        ans += 1\n\nprint(ans)", "N = int(input())\nS = input()\ncount = 1\ncheck = S[0]\n\nfor c in S:\n  if c != check:\n    count += 1\n    check = c\n\nprint(count)", "n=int(input())\ns=input()\ncnt=1\nfor i in range(n -1):\n  if s[i] != s[i +1]:\n    cnt += 1\nprint(cnt)", "n = int(input())\ns = input()\ncnt = 1\nfor i in range(1, n):\n  if s[i] != s[i-1]:\n    cnt += 1\nprint(cnt)", "n = int(input())\ns = '?' + input()\nprint((sum(s[i-1] != s[i] for i in range(1, len(s)))))\n", "N=int(input())\nS=input()\nans=1\nfor i in range(N-1):\n    if S[i]!=S[i+1]:\n        ans+=1\nprint(ans)\n", "n=int(input())\ns=input()\nnum=n\nfor i in range(1,n):\n    if s[i-1]==s[i]:\n        num-=1\nprint(num)\n", "n = int(input())\ns = input()\nx = n\nfor i in range(n-1):\n    if s[i] == s[i+1]:\n        x -= 1\nprint(x)", "N = int(input())\nS = input() + \"Z\"\n\nans = 0\nfor i in range(N):\n  if S[i] != S[i+1]:\n    ans += 1\nprint(ans)", "N = int(input())\nS = input()\n\nfor i in range(1, N):\n    if(S[i-1] == S[i]):\n        N = N-1\nprint(N)\n", "n=int(input())\nS=input()\nans=1\nfor i in range(len(S)-1):\n  if S[i] != S[i+1]:\n    ans += 1\nprint(ans)", "N = int(input())\na = list(input())\ncount = 1\nfor i in range(N):\n  if i>0:\n    if a[i-1]==a[i]:\n      pass\n    elif a[i-1]!=a[i]:\n      count+=1\n      \nprint(count)", "n = int(input())\ns = input()\n\nc = 0\nfor i in range(n):\n  if i == 0 or s[i]!=s[i-1]:\n    c += 1\nprint(c)", "n = int(input())\ns = input()\nans = 1\nfor i in range(n-1):\n    if s[i] != s[i+1]:\n        ans += 1\nprint(ans)", "N = int(input())\nS = input()\nans = 1\nfor i in range(N-1):\n    if(S[i] != S[i+1]):\n        ans += 1\nprint(ans)", "n = int(input())\ns = input()\nfor i in range(n-1):\n  if s[i] == s[i+1]:\n    s = s[:i] + \" \" + s[i+1:]\nprint(len(s.replace(\" \", \"\")))", "N = int(input())\nS = input()\n\nANS = 0\nfor i in range(N - 1):\n    if S[i] != S[i + 1]:\n        ANS+= 1\n\nprint(ANS + 1)", "n = int(input())\ns = input()\nres = 1\nfor i in range(n-1):\n  if s[i] != s[i+1]:\n    res += 1\nprint(res)", "rst = []\nN = int(input())\nS = input()\ntmp_val = ''\nfor i in S:\n    if tmp_val != i:\n        rst.append(i)\n        tmp_val = i\nprint(len(rst))", "N = int(input())\nS = input()\ntmp, rst = '', []\nfor i in S:\n    if tmp != i:\n        rst.append(i)\n        tmp = i\nprint(len(rst))", "\nN = int(input())\nS = str(input())\ni = 0\nans = len(S)\nfor i in range(len(S)-1):\n  if S[i] == S[i+1]:\n    ans -= 1\nprint(ans)", "N = int(input())\nS = list(input())\nA = [0] * N\nsame = False\nimport math\nfor i in range(1, N):\n  if S[i] == S[i-1]:\n    same = True\n  elif same and S[i] != S[i-1]:\n    A[i] = 1\n    same = False\n  else:\n    same = False\n    A[i] = 1\n    \nprint(sum(A)+1)", "N = int(input())\nS = input()\n\njudge = [1]*N\n\nfor i in range(1,N):\n    if S[i-1] == S[i]:\n        judge[i] = 0\n\nprint(sum(judge))", "N = int(input())\nS = input()\n\ncount = 0\nfor i in range(1, N):\n    if S[i-1] != S[i]:\n        count += 1\n\nprint(count+1)    ", "# https://atcoder.jp/contests/abc143/tasks/abc143_c\nn = int(input())\ns = input()\n\nans = 0\npc = ''\nfor c in s:\n  if c != pc:\n    ans += 1\n  pc = c\n\nprint(ans)\n", "N = int(input())\nS = input()\ntmp = ''\nls = []\nfor i in S:\n    if i != tmp:\n        ls.append(i)\n        tmp = i\nprint(len(ls))", "N=int(input())\narr=list(map(str,input()))\n\nans=1\nfor i in range(N-1):\n    if arr[i]!=arr[i+1]:\n        ans+=1\n        \nprint(ans)\n", "n=int(input())\ns=str(input())\nans=1\nfor i in range(n-1):\n  if s[i]!=s[i+1]:\n    ans+=1\nprint(ans)", "n = int(input())\ns = str(input())\nans = n\nfor i in range(1,n):\n    if s[i-1] == s[i]:\n        ans -= 1\nprint(ans)", "import sys\n\nn=int(input())\na=input()\na=list(a)\na.reverse()\nif n==1:\n    print('1')\n    return\n    \nc=1\n\n\nfor i in range(n-1):\n    if a[i]!=a[i+1]:\n        c+=1\n\nif c==0:\n    c+=1\n    \nprint(c)", "N = int(input())\nS = str(input())\ncount = 1\n\nfor i in range(N-1):\n    if S[i]!=S[i+1]:\n        count += 1\n\nprint(count)", "def resolve():\n    n = int(input())\n    s = input()\n    ans = s[0]\n    for i in range(1,n):\n        if s[i] != ans[-1]:\n            ans += s[i]\n    print(len(ans))\nresolve()", "n = int(input())\ns = list(input())\ncount = n\nfor i in range(n - 1):\n    if s[i] == s[i + 1]:\n        count -= 1\nprint(count)", "#!/usr/bin/env python3\ndef main():\n    _ = int(input())\n    S = input()\n\n    ans = 0\n    res = \"\"\n    for s in S:\n        if res == s:\n            continue\n        res = s\n        ans += 1\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\nS = input()\ntmp = ''\nrst = []\nfor i in S:\n    if tmp != i:\n        rst.append(i)\n        tmp = i\nprint(len(rst))", "n = int(input())\ns = input()\nans = 0\ni = 0\nwhile i < n:\n    ans += 1\n    while i + 1 < n and s[i] == s[i + 1]:\n        i += 1\n    i += 1\nprint(ans)\n", "N = int(input())\nS = input()\n\ncnt = 1\nfor i in range(N - 1):\n    if S[i] != S[i+1]:\n        cnt += 1\n\nprint(cnt)", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Wed Sep  9 02:34:35 2020\n\n@author: liang\n\"\"\"\n\nN = int(input())\nS = input()\n\ncount = 1\nfor i in range(N-1):\n    if S[i] != S[i+1]:\n        count += 1\nprint(count)", "n=int(input())\ns=list(input())\nfor i in range(len(s)-1,0,-1):\n    if s[i]==s[i-1]:\n        s.pop(i)\nprint((len(s)))\n", "n = int(input())\ns = input()\nans = n\n\nfor i in range(n-1):\n    if s[i+1] == s[i]:\n        ans -= 1\nprint(ans)", "N = int(input())\nS = input()\n\nans = 0\nbuf = \"\"\nfor l in S:\n    if buf != l:\n        buf = l\n        ans += 1\n    else:\n        pass\nprint(ans)", "n=int(input())\ns=input()\n\nc=n\n\nfor i in range(0,n-1):\n    if s[i]==s[i+1]:\n        c-=1\n\nprint(c)", "n = int(input())\ns = input()\nans = 0\np = None\nfor letter in s:\n    if letter != p:\n        p = letter\n        ans += 1\nprint(ans)\n", "N=int(input())\nS=list(map(str,input()))\ni=0\nwhile i!=(len(S)-1):\n    if S[i]==S[i+1]:\n        S.pop(i+1)\n    else:\n        i+=1\nprint(len(S))", "import sys\nimport math\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    N = I()\n    S = input().rstrip()\n    past = S[0]\n    ans = 1\n    for i in range(1, N):\n        if past != S[i]:\n            ans+=1\n            past = S[i]\n    print(ans)\n    \n    \n    \ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\ns = input()\n\n\n\nfor x in range(1,n):\n  if s[x] == s[x-1]:\n    n -= 1\n\nprint(n)\n", "n = int(input())\ns = list(input())\ncolor = s[0]\ncnt = 1\nfor i in range(1,n):\n    if s[i] != color:\n        color = s[i]\n        cnt += 1\nprint(cnt)", "N = int(input())\nS = input()\ns = S[0]\nans = 1\n\nfor i in range(N-1):\n    if S[i+1] != s:\n        ans += 1\n        s = S[i+1]\n\nprint(ans)", "N = int(input())\nS = input()\ntmp, rst = '', []\nfor i in S:\n    if i != tmp:\n        rst.append(i)\n        tmp = i\nprint(len(rst))", "n = int(input())\ns = input()\nslime_end = \"0\"\nnum = 0\nfor i in range(n):\n    if s[i] != slime_end:\n        num += 1\n        slime_end = s[i]\nprint(num)", "N = int(input())\nS = input()\ntmp, val = '', []\nfor i in S:\n    if i !=tmp:\n        val.append(i)\n        tmp = i\nprint(len(val))", "N = int(input())\nS = input()\nans = 1\nfor i in range(1, N):\n    if S[i] != S[i-1]:\n        ans += 1\nprint(ans)", "N = int(input())\nS = input()\nS = list(S)\ncolor = [0]\nj = 0\nfor i in range(1,N) :\n    if S[i-1] == S[i] :\n        color.append(j)\n    else :\n        j += 1\n        color.append(j)\n\nprint(len(set(color)))", "n = int(input())\ns = [i for i in input()]\nresult  = []\ntmp = '\u00a5'\nfor i in range(0,n):\n    if tmp != s[i]:\n        result.append(s[i])\n        tmp = s[i]\nprint(len(result))", "N=int(input())\nS=list(map(str,input()))\nans=1\nfor i in range(N-1):\n    if S[i]!=S[i+1]:\n        ans+=1\nprint(ans)", "n=int(input())\ns=str(input())\nans=1\nfor i in range(n-1):\n  if s[i]!=s[i+1]:\n    ans+=1\n\nprint(ans)", "import itertools\n\nn = int(input())\ns = input()\nans = ''\niter = itertools.groupby(s)\nfor key, value in iter:\n    ans += key\nprint(len(ans))", "n = int(input())\ns = input()\n\np = s[0]\nans = s[0]\nfor w in s:\n  if p != w:\n    ans += w\n  p = w\nprint(len(ans))", "n = int(input())\ns = input()\nc=1\nfor i in range(1,n):\n    if s[i-1]!=s[i]:\n        c+=1\nprint(c)", "#from statistics import median\n#import collections\n#aa = collections.Counter(a) # list to list || .most_common(2)\u3067\u6700\u5927\u306e2\u500b\u3068\u308a\u3060\u305b\u308b\u304a a[0][0]\nfrom fractions import gcd\nfrom itertools import combinations,permutations,accumulate, product # (string,3) 3\u56de\n#from collections import deque\nfrom collections import deque,defaultdict,Counter\nimport decimal\nimport re\nimport math\nimport bisect\nimport heapq\n#\n#\n#\n# python\u3067\u7121\u7406\u306a\u3068\u304d\u306f\u3001pypy\u3067\u3084\u308b\u3068\u6b63\u89e3\u3059\u308b\u304b\u3082\uff01\uff01\n#\n#\n# my_round_int = lambda x:np.round((x*2 + 1)//2)\n# \u56db\u6368\u4e94\u5165g\n#\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u7cfb\n# int min_y = max(0, i - 2), max_y = min(h - 1, i + 2);\n# int min_x = max(0, j - 2), max_x = min(w - 1, j + 2);\n#\n#\nimport sys\nsys.setrecursionlimit(10000000)\nmod = 10**9 + 7\n#mod = 9982443453\n#mod = 998244353\nfrom sys import stdin\nreadline = stdin.readline\ndef readInts():\n  return list(map(int,readline().split()))\ndef readTuples():\n    return tuple(map(int,readline().split()))\ndef I():\n  return int(readline())\nn = I()\ns = input()\nans = \"\"\nprv = None\nfor i in range(n):\n    if i == 0:\n        prv = s[i]\n        ans += s[i]\n        continue\n    if s[i] == prv:\n        continue\n    else:\n        prv = s[i]\n        ans += s[i]\nprint((len(ans)))\n", "N = int(input())\nS = input()\n\n\ncurrent = \"\"\nans = \"\"\nfor s in S:\n    if s != current:\n        current = s\n        ans += s\n\nprint((len(ans)))\n# print(ans)\n\n\n\n", "n=int(input());a=input();ans,start=a[0],1\nwhile start<n:\n  if a[start-1]!=a[start]:\n    ans+=a[start]\n  start+=1\nprint(len(ans))", "n = int(input())\ns = input()\ncnt = 0\nfor i in range(n-1):\n    if s[i] == s[i+1]:\n        cnt += 1\nprint(n-cnt)", "n = int(input())\ns = list(input())\np = s[0]\nans = 1\nfor i in s[1:]:\n    if p!=i:\n        p = i\n        ans += 1\nprint(ans)\n", "#!/usr/bin/env python3\nfrom collections import defaultdict, Counter\nfrom itertools import product, groupby, count, permutations, combinations\nfrom math import pi, sqrt\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nfrom string import ascii_lowercase\nfrom functools import lru_cache\nimport sys\nsys.setrecursionlimit(500000)\nINF = float(\"inf\")\nYES, Yes, yes, NO, No, no = \"YES\", \"Yes\", \"yes\", \"NO\", \"No\", \"no\"\ndy4, dx4 = [0, 1, 0, -1], [1, 0, -1, 0]\ndy8, dx8 = [0, -1, 0, 1, 1, -1, -1, 1], [1, 0, -1, 0, 1, 1, -1, -1]\n\n\ndef inside(y, x, H, W):\n    return 0 <= y < H and 0 <= x < W\n\n\ndef ceil(a, b):\n    return (a + b - 1) // b\n\n\ndef sum_of_arithmetic_progression(s, d, n):\n    return n * (2 * s + (n - 1) * d) // 2\n\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\ndef lcm(a, b):\n    g = gcd(a, b)\n    return a / g * b\n\n\ndef solve():\n    N = int(input())\n    S = input()\n    ans = 1\n    pre = S[0]\n    for i in range(1, N):\n        if S[i] != pre:\n            ans += 1\n            pre = S[i]\n    print(ans)\n\n\ndef main():\n    solve()\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\nS = input()\npre = S[0]\nans = 1\n\nfor s in S:\n    if pre != s:\n        ans += 1\n    pre = s\nprint(ans)", "n = int(input())\ns = input()\n\na = \"\"\ncnt = 0\nfor i in range(n):\n    if i==0:\n        a += s[i]\n        cnt += 1\n    else:\n        if s[i] != a[-1]:\n            a += s[i]\n            cnt += 1\nprint(cnt)", "import itertools\nN = int(input())\nS = list(input())\ngr = list(itertools.groupby(S))\nprint((len(gr)))\n", "num = int(input())\nstr1 = input()\ntable = list(str1)\nans = []\n\nfor i in range(num-1):\n    if table[i] == table[i+1]:\n        continue\n    else:\n        ans.append(table[i])\n\nprint(len(ans) + 1)", "n=int(input())\ns=input()\nt=1\nfor i in range(1,n):\n    if s[i]!=s[i-1]:\n        t+=1\nprint(t)", "n = int(input())\nc = input()\nans = 1\n\nfor i in range(1,n):\n  if c[i] != c[i-1]:\n    ans += 1\n      \nprint(ans)", "N = int(input())\nS = input()\n\ncnt = 1\ncolor = S[0]\nfor i in range(N-1):\n    if S[i+1] != color:\n        cnt += 1\n    color = S[i+1]\nprint(cnt)", "N = int(input())\nS = list(input())\n \n# N=O(10^5)\u306a\u306e\u3067O(N)\u3067\u89e3\u304f\n# \u9023\u7d9a\u3059\u308b\u540c\u3058\u6587\u5b57\u30921\u3064\u306e\u30b0\u30eb\u30fc\u30d7\u3068\u898b\u308b\u3068\u304d\u306b\u3001\u4f55\u30b0\u30eb\u30fc\u30d7\u3067\u304d\u308b\u304b\uff1f\n# \u6587\u5b57\u304c\u5909\u5316\u3059\u308b\u70b9\u306b\u7740\u76ee\u3059\u308c\u3070\u3088\u3044\u3002\u3059\u308b\u3068\u30b0\u30eb\u30fc\u30d7\u6570\u306f\uff08\u5909\u5316\u70b9+1\uff09\u500b\u3068\u6c42\u307e\u308b\uff01\n \nans = 1\nfor i in range(N-1):\n  if S[i] != S[i+1]: ans += 1\n\nprint(ans)", "N=int(input())\nS=input()\nx=1\nfor i in range(0,N):\n    if i<N-1 and S[i]!=S[i+1] :\n        x=x+1\nprint(x)\n\n\n", "def remove_slimes(ls):\n\tl = [ls[0]]\n\tfor i in range(1, len(ls)):\n\t\tif ls[i-1] != ls[i]:\n\t\t\tl.append(ls[i])\n\treturn len(l)\n\nn = int(input())\ns = input()\ncnt = 1\nif len(s) != 1:\n\tcnt = remove_slimes(list(s))\nprint(cnt)", "import itertools\nn = int(input())\nS = list(input())\nL = [k for k, v in itertools.groupby(S)]\nprint(len(L))", "n=int(input())\ns=input()\nans=n\nfor i in range(len(s)-1):\n    if s[i]==s[i+1]:\n        ans-=1\nprint(ans)", "N = int(input())\nS = input()\nans = 1\nfor i in range(N - 1):\n    if S[i + 1] != S[i]:\n        ans += 1\nprint(ans)\n", "n = int(input())\nS = input()\nans = \"\"\nfor s in S:\n    if ans == \"\" or ans[-1] != s: ans += s\nprint(len(ans))", "n=int(input())\ns=input()\ncnt=0\nfor i in range(n-1):\n    if s[i]==s[i+1]:\n        cnt += 1\nprint(n-cnt)", "n = int(input())\nbef = \"\"\nans = 0\nfor s in input():\n  if bef != s:\n    ans += 1\n    bef = s\nprint(ans)", "n=int(input())\ns=input()\nans =n\nfor i in range(n-1):\n        if s[i] == s[i+1]:\n                ans -=1\n        \nprint(ans)", "n=int(input())\ns=input()\nans=1\nfor i in range(1,n):\n    if s[i-1]!=s[i]: ans+=1\nprint(ans)", "n = int(input())\ns = '?' + input()\nprint((sum(s[i-1] != s[i] for i in range(1, n+1))))\n", "N = int(input())\nS = input()\n\nres = \"\"\npre = \"\"\nfor s in S:\n    if pre != s:\n        res += s\n    pre = s\n\nprint((len(res)))\n", "N=int(input())\nS=input()\nnow=0\nnum=0\nfor char in S:\n    if char!=now:\n        num+=1\n        now=char\nprint(num)", "N = int(input())\nS = input()\nans = 1\n\nfor n in range(1,N):\n  if S[n-1]!=S[n]:\n    ans+=1\n    \nprint(ans)", "n = int(input())\nx = list(input())\ncount = n\nfor i in range(n-1):\n  if x[i]==x[i+1]:\n    count-=1\nprint(count)", "input()\nS = input()\n\nprint(1 + sum(s1 != s2 for s1,s2 in zip(S, S[1:])))", "n = int(input())\ns = list(input())\ncnt = 1\nfor i in range(n-1):\n    if s[i]!=s[i+1]:\n        cnt += 1\nprint(cnt)"]