["N=int(input())\nA=list(map(int, input().split()))\n\nprint(max(A)-min(A))", "n = int(input())\nli = list(map(int,input().split()))\nli.sort()\nprint(li[-1]-li[0])", "N = int(input())\na = list(map(int, input().split()))\nprint(max(a)-min(a))", "N = int(input())\nlist = sorted(map(int,input().split()))\n\nprint(list[N-1]  - list[0])", "N = int(input())\na = list(map(int,input().split()))\nprint(max(a)-min(a))", "N = int(input())\nN_List = list(map(int,input().split()))\nprint(max(N_List)-min(N_List))", "N=input()\na=list(map(int,input().split()))\na.sort()\nprint(a[-1]-a[0])", "N=int(input())\na=list(map(int, input().split()))\nprint(max(a)-min(a))", "n = int(input())\na = list(map(int, input().split()))\nprint(max(a) - min(a))", "N = int(input())\npoints = list(map(int, input().split()))\n\nresult = max(points) - min(points)\nprint(result)", "N = int(input())\nA = list(map(int, input().split()))\nans = max(A) - min(A)\nprint(ans)", "N = int(input())\na = sorted(set(list(map(int, input().split()))))\nprint((a[-1]- a[0]))\n\n\n\n", "# B - Traveling AtCoDeer Problem\ndef main():\n    _ = int(input())\n    a = list(map(int, input().split()))\n\n    print(max(a)-min(a))\n\n\n\nif __name__ ==  \"__main__\":\n    main()", "N=int(input())\na=list(map(int,input().split()))\nprint(max(a)-min(a))", "input()\na = list(map(int,input().split()))\na.sort()\nprint(a[-1]-a[0])", "N = input()\nx = list(map(int,input().split()))\n\nprint(max(x) - min(x))", "#https://atcoder.jp/contests/abc064/tasks/abc064_b\nS_list = [input() for i in range(2)]\nN = map(int,S_list[0].split())    \nA_list = list(map(int,S_list[1].split()))\n\nprint(max(A_list)-min(A_list))", "n=input()\na=[int(i) for i in input().split()]\nprint(max(a)-min(a))", "N = int(input())\na = list(map(int,input().split()))\na.sort()\n\ndistance = 0\n\nfor i in range(N - 1):\n    distance += a[i + 1] - a[i]\n\nprint(distance)", "n = int(input())\na = list(map(int, input().split()))\n\nprint(max(a) - min(a))", "n=int(input())\na=list(map(int,input().split()))\na.sort()\nprint(a[n-1]-a[0])", "N=int(input())\na=str(input())\n\ndef ans064(N:int, a:str):\n    a_list=sorted(map(int,a.split()))\n    return(a_list[-1]-a_list[0])\n\nprint(ans064(N,a))", "n = input()\ndata = list(map(int,input().split()))\ndata.sort(reverse = True)\nans = 0\nfor i in range(len(data) - 1):\n    ans += data[i] - data[i + 1]\nprint(ans)", "n = input()\nlist01 = input().split()\nlist02 = [int(a) for a in list01]\n\nprint(max(list02) - min(list02))", "N=int(input())\na=list(map(int,input().split()))\nprint((max(a)-min(a)))\n", "N = map(int, input().split())\npoint = list(map(int,input().split()))\n\nmax = 0\nmin = 1000\n\nfor i in range(len(point)):\n    if max < point[i]:\n        max = point[i]\n    if min > point[i]:\n        min = point[i]\nprint(max - min)", "n = int(input())\nL = list(map(int,input().split()))\nL.sort()\nprint(L[n-1]-L[0])", "n = int(input())\narr = list(map(int, input().split()))\n\nprint(max(arr) - min(arr))", "def answer(n: int, a: []) -> int:\n    return max(a) - min(a)\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer(n, a))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "# \u30af\u30ea\u30b9\u30de\u30b9\u3082\u3042\u3068\u534a\u5e74\u3068\u306a\u308a\u3001\u30c8\u30ca\u30ab\u30a4\u306eAtCoDeer\u541b\u306f\u30d7\u30ec\u30bc\u30f3\u30c8\u3092\u914d\u308b\u8a08\u753b\u3092\u7acb\u3066\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n# TopCoDeer\u901a\u308a\u306b\u306fN\u500b\u306e\u5bb6\u304c\u4e26\u3093\u3067\u3044\u307e\u3059\u3002i\u500b\u76ee\u306e\u5bb6\u306f\u5ea7\u6a19ai\u306b\u3042\u308a\u307e\u3059\u3002\u5f7c\u306f\u3053\u306e\u3059\u3079\u3066\u306e\u5bb6\u306b\u30d7\u30ec\u30bc\u30f3\u30c8\u3092\u914d\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n# \u597d\u304d\u306a\u5834\u6240\u304b\u3089\u958b\u59cb\u3057\u597d\u304d\u306a\u5834\u6240\u3067\u7d42\u4e86\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u6642\u3001\u6700\u5c0f\u306e\u79fb\u52d5\u8ddd\u96e2\u3092\u6c42\u3081\u306a\u3055\u3044\u3002\n\nN = int(input())\na = list(map(int,input().split()))\n\nprint(max(a) - min(a))", "N = int(input())\na = list(map(int, input().split()))\n\n# \u4e00\u756a\u96e2\u308c\u3066\u3044\u308b\u5ea7\u6a19\u306e\u5dee\nprint(max(a) - min(a))", "n = int(input())\nhouses = list(map(int, input().split()))\nprint(max(houses)-min(houses))", "N = int(input())\na = list(map(int, input().split()))\na.sort()\nprint(a[len(a)-1] - a[0])", "n = int(input())\ncoordinates = list(map(int, input().split()))\n\nprint((max(coordinates) - min((coordinates))))\n\n", "N = int(input())\na = list(map(int, input().split()))\n\nprint(max(a) - min(a))", "N = int(input())\na = list(map(int,input().split()))\n\ndistance = max(a)-min(a)\n\nprint(distance)", "n=int(input())\na=list(map(int,input().split()))\nprint(max(a)-min(a))", "\nn=input()\na=list(map(int, input().split()))\n\na1=max(a)\na2=min(a)\n\nprint((a1-a2))\n", "N=int(input())\nA=list(map(int,input().split()))\nans=max(A)-min(A)\nprint(ans)", "N = int(input())\nA = sorted(list(map(int,input().split())))\nprint(A[N-1]-A[0])", "n = int(input())\na = list(map(int, input().split()))\n\nprint(max(a) - min(a))", "with open(0) as f:\n    N, *a = map(int, f.read().split())\nprint(max(a)-min(a))", "N = input()\na = list(map(int, input().split()))\n\nprint(max(a) - min(a))", "# 064b\n\ndef atc_064b(input_value: str) -> str:\n    N = input_value[0]\n    ai = [int(i) for i in input_value[1].split(\" \")]\n    return max(ai) - min(ai)\n\nN = input()\nai = input()\nprint(atc_064b([N, ai]))", "N = int(input())\nS = map(int,input().split())\n\nNumber = list(S)\nNumber.sort(reverse=True)\ntotal_distance = []\n# print(Number)\n\nfor i in range(1,N):\n    distance = Number[0] - Number[1]\n    total_distance.append(distance)\n    del Number[0]\n\nprint(sum(total_distance))", "def abc064b(n: int, a_list: int) -> int:\n    return max(a_list) - min(a_list)\n\nn = int(input())\na_list = list(map(int, input().split()))\n\nprint((abc064b(n, a_list)))\n", "n = int(input())\na = list(map(int,input().split()))\n# \u30ea\u30b9\u30c8\u306e\u6700\u5927\u5024\u304b\u3089\u6700\u5c0f\u5024\u3092\u5f15\u3044\u3066\u51fa\u529b\nprint((max(a)-min(a)))\n", "def main():\n    N = int(input())\n    a = list(map(int,input().split()))\n    a.sort()\n    ans = 0\n    #print(a)\n    for i in range(1,N,1):\n        ans += a[i] - a[i-1]\n\n    return ans\n\nprint((main()))\n", "home_num = int(input())\nhouse_from = list(map(int,input().split()))\n\nprint(max(set(house_from)) - min(set(house_from)))", "N = int(input())\na = list(map(int,input().split()))\nprint(max(a)-min(a))", "N = int(input())\na = list(map(int, input().split()))\n\nprint(max(a) - min(a))", "# \u6570\u5024\u306e\u53d6\u5f97\nhomecnt = int(input())\nhomeplace = list(map(int,input().split()))\n\n# \u6700\u77ed\u8ddd\u96e2\u3092\u8a08\u7b97\u3057\u51fa\u529b\ndist = max(homeplace) - min(homeplace)\nprint(dist)", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nprint((a[-1] - a[0]))\n", "def atc_064b(input_value: str) -> str:\n    N = input_value[0]\n    ai = [int(i) for i in input_value[1].split(\" \")]\n    return max(ai) - min(ai)\n\nN = input()\nai = input()\nprint((atc_064b([N, ai])))\n", "n = int(input())\nx = list(map(int,input().split()))\nprint(max(x)-min(x))", "num_house = int(input())\na = list(map(int, input().split()))\nhouse_list = list(a)\n\nprint((max(house_list) - min(house_list)))\n", "n = int(input())\na = list(map(int, input().split()))\nprint(max(a)-min(a))", "N = int(input())\na = list(map(int,input().split()))\n\nprint(max(a)-min(a))", "N = int(input())\nA =list(map(int, input().split()))\n\nMAX = max(A)\nMIN = min(A)\n\nprint(MAX-MIN)", "n=input()\na=list(map(int, input().split()))\n\ndef answer(n:int, a:list)->int:\n    return max(a)-min(a)\n\nprint(answer(n,a))", "total_house = int(input())\nhouse_coordinate = sorted(list(map(int, input().split())))\nprint(house_coordinate[total_house - 1]- house_coordinate[0])", "N = int(input())\nA = list(map(int,input().split()))\n\nA.sort()\n\nprint(A[-1] - A[0] if N > 1 else 0)", "n = int(input())\na = [int(x) for x in input().split()]\nprint(max(a) - min(a))", "#ABC064B\nn = int(input())\na = sorted(list(map(int,input().split())))\nans = 0 \nfor i in range(n-1):\n    ans += a[i+1]-a[i]\nprint(ans)", "import sys, math\nfrom itertools import combinations as c, product as p\nfrom collections import deque\nsys.setrecursionlimit(10**9)\nINF = float('inf')\nMOD = 10**9 + 7\n#MOD = 998244353\n\n\ndef si(): return input()\ndef ii(): return int(input())\ndef fi(): return float(input())\ndef lstr(): return input().split()\ndef lint(): return list(map(int, input().split()))\ndef lintdec(): return list(map(lambda x:int(x) - 1, input().split()))\ndef lnstr(n): return [input() for _ in range(n)]\ndef lnint(n): return [int(input()) for _ in range(n)]\ndef lint_list(n): return [lint() for _ in range(n)]\n\n\n\n############################################################\nN = ii()\nma = 0\nmi = INF\n\nfor a in lint():\n    ma = max(ma, a)\n    mi = min(mi, a)\n\nprint(ma - mi)", "n = int(input())\na = sorted(list(map(int, input().split())))\nprint(a[-1]-a[0])", "N=input()\nNi=list(map(int,input().split()))\n\nprint(max(Ni)-min(Ni))", "a = int(input())\nlis = list(map(int,input().split()))\nprint(max(lis)-min(lis))", "N = int(input())\nhouse = list(map(int, input().split()))\n\nprint(max(house) - min(house) )", "N = int(input())\na = list(map(int,input().split()))\n\nprint(max(a) - min(a))", "total_house = int(input())\nhouse_coordinate = sorted(list(map(int, input().split())))\nprint(house_coordinate[total_house - 1] - house_coordinate[0])", "N = int(input())\na = list(map(int, input().split()))\na.sort()\n\ndistance = 0\n\nfor i in range(N - 1):\n    distance += a[i + 1] - a[i]\n\nprint(distance)", "# B - Traveling AtCoDeer Problem\n\n# N\nN = int(input())\nmy_list = list(map(int, input().split(maxsplit=N)))\n\nmy_list_sort = sorted(my_list)\nanswer = my_list_sort[-1] - my_list_sort[0]\n\nprint(answer)\n", "N = int(input())\nlst = input().split()\n\nfor i in range(N):\n   lst[i] = int(lst[i])\n\nprint(max(lst) - min(lst))", "from sys import stdin\nrs = lambda : stdin.readline().strip()\nri = lambda : int(rs())\nril = lambda : list(map(int, rs().split()))\n\ndef main():\n    N = ri()\n    a = ril()\n    print((max(a) - min(a)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\na = list(map(int, input().split()))\nprint(max(a)-min(a))", "n = input()\na = list(map(int, input().split()))\nprint(max(a) - min(a))", "import sys\n\ninput = sys.stdin.readline\nN = int(input())\nA = list(map(int, input().split()))\nA.sort()\nprint(A[N-1] - A[0])", "N = int(input())\nhouse = list(map(int, input().split()))\n\n# \u30d7\u30ec\u30bc\u30f3\u30c8\u3092\u5c4a\u3051\u308b\u305f\u3081\u306e\u3001\u6700\u5927\u5024\u304b\u3089\u6700\u5c0f\u5024\u3092\u5f15\u3044\u3066\u3001\u6700\u5c0f\u306e\u79fb\u52d5\u8ddd\u96e2\u3092\u51fa\u529b\n\nprint(max(house)-min(house))", "# \u6700\u5c0f\u306e\u79fb\u52d5\u8ddd\u96e2\u306f\u3001\u4e00\u756a\u7aef\u304b\u3089\u53cd\u5bfe\u5074\u307e\u3067\u4e00\u76f4\u7dda\u306b\u79fb\u52d5\u3059\u308b\u4e8b\u3002\n# \u884c\u3063\u305f\u308a\u6765\u305f\u308a\u3059\u308b\u53ef\u80fd\u6027\u306f\u306a\u3044\nn = int(input())\na = list(map(int, input().split()))\n# \u5ea7\u6a19\u306f\u6b63\u306e\u6574\u6570\u306e\u307f\u306a\u306e\u3067max-min\u3067\u8a08\u7b97\u3067\u304d\u305d\u3046\u3002\n# print(mix-min)\nprint(max(a)-min(a))", "n = int(input())\na = list(map(int, input().split()))\nprint(max(a) - min(a))", "N = int(input())\na = list(map(int, input().split()))\na.sort()\nprint(a[-1]-a[0])", "n = int(input())\nstreet = sorted(list(map(int, input().split())))\nprint((street[-1]-street[0]))\n", "n = int(input())\na = [int(i) for i in input().split()]\n\nprint(max(a) - min(a))", "n = int(input())\na = [int(s) for s in input().split()]\n\nprint(max(a) - min(a))", "N = int(input())\na = list(map(int, input().split()))\n\nprint(max(a) - min(a))", "def minimum_dist(l1: list) -> int:\n    return max(l1) - min(l1)\n\n\ndef __starting_point():\n    n = int(input())\n    list_coordinate = list(map(int, input().split()))\n    print((minimum_dist(list_coordinate)))\n\n__starting_point()", "N = int(input())\na = sorted([int(x) for x in input().split()])\n\nprint(max(a) - min(a))", "N = int(input())\na = [ int(v) for v in input().split(\" \") ]\n\nmax_v = max(a)\nmin_v = min(a)\n\nprint((max_v - min_v))\n", "# list\u3092\u4e26\u3073\u66ff\u3048\u3066\u79fb\u52d5\u8ddd\u96e2\u306e\u6700\u5c0f\u5024\u3092\u6c42\u3081\u308b\n\nN = int(input())\na = list(map(int, input().split()))\n\n# \u964d\u9806\u306b\u4e26\u3073\u66ff\u3048\u308b\ndescending_a = sorted(a, reverse=True)\n# print(descending_a)\n\n# \u5ea7\u6a19\u306e\u6700\u5927\u5024\u304b\u3089\u6700\u5c0f\u5024\u3092\u5f15\u304f\u2192\u79fb\u52d5\u8ddd\u96e2\u3092\u6c42\u3081\u308b\nprint((descending_a[0] - descending_a[-1]))\n", "input()\na = list(map(int,input().split()))\nprint(max(a)-min(a))", "n = int(input())\nli = list(map(int, input().split()))\nprint(max(li)-min(li))", "n,*a=map(int,open(0).read().split())\na.sort()\nprint(a[-1]-a[0])", "N = input()\na = list(map(int, input().split()))\nprint(max(a)-min(a))", "N = int(input())\nA = list(map(int, input().split()))\nx = max(A)\ny = min(A)\nprint(x - y)", "n = int(input())\nA = list(map(int, input().split()))\n\nprint(max(A)-min(A))", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nans = a[-1] - a[0]\nprint(ans)", "N = int(input())\nhome = list(map(int,input().split()))\n\nprint((max(home))-(min(home)))", "N = int(input())\na = list(map(int, input().split()))\na.sort()\nprint(a[N - 1] - a[0])"]