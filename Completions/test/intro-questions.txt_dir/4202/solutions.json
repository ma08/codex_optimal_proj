["l, r = list(map(int, input().split()))\n\nif (r-l)//2019 >= 1:\n    print((0))\nelse:\n    ans = float('inf')\n    for i in range(l, r+1):\n        for j in range(l, r+1):\n            if i != j:\n                ans = min(ans, (i*j)%2019)\n\n    print(ans)\n", "L,R = map(int,input().split())\nkouho = set([])\nwhile len(kouho) < 2019 and L <= R:\n  temp = L%2019\n  kouho.add(temp)\n  L += 1\n#print(kouho)\nA = list(kouho)\nA.sort()\nans = 2018\nfor i in range(len(A)):\n  for j in range(i+1,len(A)):\n    temp = A[i]*A[j]%2019\n    ans = min(ans,temp)\nprint(ans)", "l,r=list(map(int,input().split()))\nm=2019\nif l//m<r//m:\n  print((0))\nelse:\n  ans=m\n  for i in range(l%m, r%m+1):\n    for j in range(i+1,r%m+1):\n      ans=min(ans,i%m*j%m)\n  print(ans)\n", "l, r = list(map(int, input().split()))\n\nif r - l >= 2019:\n    print((0))\nelse:\n    m = 2019\n    for i in range(l, r + 1, 1):\n        for j in range(i+1, r + 1, 1):\n            m = min(i * j % 2019, m)\n    print(m)\n", "L,R = map(int,input().split())\nls = list(range(L,min(L+2019, R+1)))\nans = 2019\nfor i in range(len(ls)):\n    for j in range(i+1,len(ls)):\n        ans = min(ans, (ls[i]*ls[j]) % 2019)\nprint(ans)", "L, R = list(map(int, input().split()))\n\nans = 2*10**9+1\nfor i in range(L, min(R, L+2019)+1):\n    for j in range(i+1, min(R, L+2019)+1):\n        i %= 2019\n        j %= 2019\n        ans = min(ans, (i*j)%2019)\nprint(ans)\n", "L,R = map(int,input().split())\nif R-L+1 >= 2019:\n    print(0)\n    return\nR %= 2019\nL %= 2019\nif R <= L:\n    print(0)\n    return\nans = float(\"inf\")\nfor i in range(L,R):\n    for j in range(i+1,R+1):\n        ans = min(ans,(i*j)%2019)\nprint(ans)", "L,R = map(int,input().split())\nans = 2019\n\nfor i in range(L,R+1):\n    for j in range(i+1,R+1):\n        if(j % 2019 == 0):\n            print(0)\n            return\n        ans = min(ans, (i*j) % 2019)\nprint(ans)", "L, R = map(int, input().split())\n\nif R-L >= 2019:\n    print(0)\nelse:\n    ans = 2019\n    for i in range(L, R):\n        for j in range(i+1, R+1):\n            ans = min(ans, (i*j)%2019)\n    print(ans)", "import sys\n\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninl = lambda: [int(x) for x in sys.stdin.readline().split()]\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print(\"\\033[33m\", *a, \"\\033[0m\", **dict(file=sys.stderr, **kw))\n\n\ndef solve():\n    l, r = inl()\n    if r - l > 2200:\n        return 0\n    a = 2018\n    for i in range(l, r):\n        for j in range(i + 1, r + 1):\n            x = (i * j) % 2019\n            a = min(a, x)\n    return a\n\n\nprint(solve())\n", "import sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\n\ndef main():\n    l, r = list(map(int, input().split()))\n    diff = r-l\n    if diff >= 2018:\n        return 0\n\n    else:\n        min_ = 2 ** 20\n        # l \u306e\u5546\u3068\u4f59\u308a\n        p = l // 2019 ; q = l % 2019\n        for xi in range(l, r):\n            qi = (q + (xi - l)) % 2019\n            if qi == 0:\n                return 0\n            for xj in range(xi+1, r+1):\n                qj = (q + (xj - l)) % 2019\n                if qj == 0:\n                    return 0\n                else:\n                    qij = (qi * qj) % 2019\n                    if qij < min_:\n                        min_ = qij\n\n    return min_\n\nprint(main())", "l, r = map(int, input().split())\n\nif r-l >= 2019:\n    print(0)\nelse:\n    ans = 2019\n    for i in range(l, r):\n        for j in range(i+1, r+1):\n                ans = min(ans, (i*j)%2019)\n    print(ans)", "L,R=list(map(int,input().split()))\nif R-L>2019:\n    print((0))\nelse:\n    x=2019\n    for i in range(L,R+1):\n        for j in range(i+1,R+1):\n            x=min(x,i*j%2019)\n    print(x)\n", "l, r = map(int,input().split())\nans = float(\"INF\")\nmod = 2019\n\nfor i in range(l, r+1):\n  if i == l+2019 or ans == 0: break\n  for j in range(l, r+1):\n    if j == l+2019: break\n    if i == j: continue\n    ans = min(ans, (i*j) % mod)\nprint(ans)", "import math\nfrom math import gcd,pi,sqrt\nINF = float(\"inf\")\nMOD = 10**9 + 7\n\nimport sys\nsys.setrecursionlimit(10**6)\nimport itertools\nimport bisect\nfrom collections import Counter,deque\ndef i_input(): return int(input())\ndef i_map(): return map(int, input().split())\ndef i_list(): return list(i_map())\ndef i_row(N): return [i_input() for _ in range(N)]\ndef i_row_list(N): return [i_list() for _ in range(N)]\ndef s_input(): return input()\ndef s_map(): return input().split()\ndef s_list(): return list(s_map())\ndef s_row(N): return [s_input for _ in range(N)]\ndef s_row_str(N): return [s_list() for _ in range(N)]\ndef s_row_list(N): return [list(s_input()) for _ in range(N)]\n\n\ndef main():\n    L,R = i_map()\n    ans = 2018\n    for i in range(L,min(R+1,L+2030)):\n        for j in range(L+1,min(R+1,L+2030)):\n            if i != j:\n                ans = min(ans, (i*j)%2019)\n\n    print(ans)\n\n  \n\n\ndef __starting_point():\n    main()\n__starting_point()", "L,R=map(int,input().split())\nk = 0\nl = 2020\nm = 2020\napList = [0]*2019\nfor i in range(L,R+1):\n  k = i % 2019\n  if apList[k] != 0:\n    break\n  else:\n    apList[k] += 1\nres = 2018\nfor i in range(2019):\n  for j in range(i+1,2019):\n    if apList[i] != 0 and apList[j] !=0:\n      res = min(i*j %2019,res)\nprint(res)", "l, r = map(int, input().split())\n\nif r - l >= 2019:\n    print(0)\nelse:\n    m = 2019\n    for i in range(l, r + 1, 1):\n        for j in range(i+1, r + 1, 1):\n            m = min(i * j % 2019, m)\n    print(m)", "l,r=list(map(int,input().split()))\nm=ans=2019\nif l//m<r//m:\n  print((0))\nelse:\n  a,b=l%m,r%m\n  for i in range(a, b+1):\n    for j in range(i+1,b+1):\n      ans=min(ans,(i*j)%m)\n  print(ans)\n", "import itertools\n\nL,R = list(map(int,input().split()))\nif R - L + 1 >= 2019:\n    ans = 0\nelse:\n    LL = L % 2019\n    RR = R % 2019\n    if LL < RR:\n        Amari_List = list(range(LL,RR+1))\n        ans = 2019\n        for v1,v2 in itertools.combinations(Amari_List, 2):\n            ca = (v1*v2) % 2019 \n            if  ca < ans:\n                ans = ca\n    else:\n        ans = 0\n\nprint(ans)\n\n\n\n", "L, R = list(map(int, input().split()))\nl = L % 2019\nr = R % 2019\nif R - L >=2019:\n    ans = 0\nelse:\n    if l < r:\n        min = 100000000\n        for i in range(l, r):\n            for j in range(i+1,r+1):\n                tmp = i*j%2019\n                if tmp < min:\n                    min = tmp\n        ans = min\n    else: # l > r:\n        min = 100000000\n        for i in range(l, r+2019):\n            for j in range(i+1,r+2019+1):\n                tmp = i*j%2019\n                if tmp < min:\n                    min = tmp\n        ans = min\n\nprint(ans)\n", "l, r = map(int, input().split())\n\nmod = 2019\n\nans = 2222\n\nif (r - l) // mod > 0:\n\tans = 0\n\nelse:\n\tans = 2020\n\tfor i in range(l, r + 1):\n\t\tfor j in range(i + 1, r + 1):\n\t\t\tans = min(ans, (i % mod) * (j % mod) % mod)\n\nprint(ans)", "L,R = map(int,input().split())\n\nans = 10 ** 10\nfor i in range(L, min(L + 2019, R + 1)):\n  for j in range(i + 1, min(L + 2019, R + 1)):\n    if ans > (i * j) % 2019:\n      ans = (i * j) % 2019\n\nprint(ans)", "l,r = list(map(int,input().split()))\nMOD = 2019\nans = MOD\n\nif r-l+1>=MOD:\n    kouho=list(range(MOD))\nelse:\n    kouho=[i%MOD for i in list(range(l,r+1))]\n    \nfor i in range(len(kouho)):\n    for j in range(i+1,len(kouho)):\n        ans=min(ans,(kouho[i]*kouho[j])%MOD)\n\nprint(ans)\n", "# AtCoder Beginner Contest 133\n# C - Remainder Minimization 2019\nL,R=map(int,input().split())\n\nmod=2019\nans=10**18+7\n\n\nfor i in range (L,min(R,L+mod)):\n    for j in range (L+1,min(R+1,L+mod+1)):\n        tempans=(i%mod)*(j%mod)\n        tempans%=mod\n        # print(i,j,tempans)\n        if tempans<ans:\n            ans=tempans\nprint(ans)", "L, R = list(map(int, input().split()))\nif L + 2019 > R:\n  tmp = 10**9\n  for l in range(L,R):\n    for r in range(l+1, R+1):\n      if (l*r)%2019 < tmp:\n        tmp = (l*r)%2019\n  print(tmp)\nelse:\n  print(\"0\")\n\n", "l,r=list(map(int,input().split()))\nif r-l>=2019:\n  print((0))\n  return\nans=2018\nfor i in range(l,r):\n  for j in range(i+1,r+1):\n    if ans>i*j%2019:\n      ans=i*j%2019\nprint(ans)\n", "L,R = map(int,input().split())\nif (R//2019 - L//2019) > 0 :\n    print(0)\nelse :\n    buf = 2020\n    for i in range(L,R+1) :\n        for j in range(i+1,R+1) :\n            buf = min(buf,((i%2019)*(j%2019))%2019)\n    print(buf)", "l,r = map(int,input().split())\nans = 2019\nfor i in range(l,r+1):\n  for j in range(i+1,r+1):\n    ans = min(ans,(i*j)%2019)\n    if ans == 0:\n      print(0)\n      return\nprint(ans)", "l,r = map(int, input().split())\n\nif r-l >= 2019: print(0)\nelse:\n  ans = float(\"inf\")\n  for i in range(l, r):\n    for j in range(i+1, r+1):\n      t = i*j%2019\n      if t < ans: ans = t\n  print(ans)", "l,r = map(int, input().split())\nans = 2019\nif r-l >= 2018:\n  print(0)\nelse:\n  for i in range(l,r):\n    for j in range(i+1,r+1):\n      ans = min(ans, i*j%2019)\n  print(ans)", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Thu Sep 10 11:33:13 2020\n\n@author: liang\n\"\"\"\n\nL, R = map(int,input().split())\nr = R%2019\nl = L%2019\nans = 2018\nif R - L >= 2019 - l or l==0:\n#if r < l or l == 0:\n    ans = 0\nelse:\n    for i in range(l,r):\n        for j in range(i+1,r+1):\n            ans = min(ans,i*j%2019)\nprint(ans)", "import sys\nimport math\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    S = set()\n    L, R = MI()\n    mod = 2019\n    if R // mod > (L-1) // mod:\n        print(0)\n        return\n\n    l = [i % mod for i in range(L, R+1)]\n    l.sort()\n    ans = float('inf')\n\n    N = len(l)\n    for index in range(N):\n        for index2 in range(index+1, N):\n            ans = min(ans, (l[index]*l[index2]) % mod)\n            if ans < 1:\n                break\n        else:\n            continue\n        break\n    \n    print(ans)\ndef __starting_point():\n    main()\n__starting_point()", "L,R = map(int,input().split())\n\nMOD = 2019\n\nans = 2020**2\n\nif R-L >= 2020:\n    print(0)\nelse:\n    for i in range(L,R):\n        for j in range(i+1,R+1):\n            ans = min(ans,i%MOD*j%MOD)\n    print(ans)", "import sys\n\n\nl,r=map(int,input().split())\n\nk=2020\nif r-l>=2020:\n    print(0)\n    return\nelse:\n    for i in range(l,r):\n        for j in range(i+1,r+1):\n            k=min(k,(i*j)%2019)\nprint(k)", "l, r = list(map(int, input().split()))\nans = 2018\nif r - l >= 2019:\n    ans = 0\nelse:\n    for i in range(l, r):\n        for j in range(l + 1, r + 1):\n            ans = min(ans, (i * j) % 2019)\n\nprint(ans)\n", "l,r=map(int,input().split())\nm=l//2019\nl-=m*2019\nr-=m*2019\nif r>=2019:\n    print(0)\n    return\nans=2018\nfor i in range(l,r+1):\n    for j in range(i+1,r+1):\n        ans=min(ans,i*j%2019)\nprint(ans)", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n#\n# FileName: \tC\n# CreatedDate:  2020-09-10 18:36:43 +0900\n# LastModified: 2020-09-11 02:01:32 +0900\n#\n\n\nimport os\nimport sys\n# import numpy as np\n# import pandas as pd\n\n\ndef main():\n    L, R = list(map(int, input().split()))\n    cool = R // 2019 - L // 2019\n    if cool == 0:\n        ans = 2020\n        for l in range(L, R+1):\n            for r in range(l+1, R+1):\n                if ans > l*r % 2019:\n                    ans = l*r % 2019\n        print(ans)\n\n    else:\n        print((0))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "l, r = map(int, input().split())\nx = 2018\n\nif r - l >=2019:\n  x = 0\n  \nelse:\n  for i in range(l,r):\n    for j in range(i+1, r+1):\n      if (i * j) % 2019 < x:\n        x = (i * j) % 2019\n        \nprint(x)", "L,R = map(int, input().split())\nif R-L >= 2019:\n  print(0)\nelse:\n  list = []\n  for i in range(L,R+1):\n    for j in range(i+1,R+1):\n      list.append(i*j%2019)\n  list = sorted(list)\n  print(list[0])", "\ndef main():\n\n    L, R = [int(i) for i in input().split()]\n\n    if (L//2019) < (R//2019):\n        ans = 0\n    else:\n        ans = 10 ** 10\n        for l in range(L, R+1):\n            for r in range(l+1, R+1):\n                ans = min(ans, (l*r)%2019)\n\n    print(ans)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "L, R = list(map(int, input().split()))\nm = 2019\n\nif R - L >= 2018:\n    print(\"0\")\nelse:\n    ans = 2020\n    for i in range(L, R+1):\n        for j in range(i+1, R+1):\n            t = ((i%m) * (j%m)) % m\n            ans = min(ans, t)\n    print(ans)\n", "L,R = map(int,input().split())\nresult = 2018\nif R - L >= 2019:\n    result = 0\nelse:\n    for i in range(L,R):\n        for j in range(L+1,R+1):\n            result = min(result,i*j%2019)\nprint(result)", "import sys\nL,R = map(int,input().split())\nmod = 2019\nif R - L >= 2019:\n    print(0)\nelse:\n    ans = 10**8\n    for i in range(L,R):\n        for j in range(i+1,R+1):\n            if i * j % mod == 0:\n                print(0)\n                return\n            ans = min(ans,(i*j)%mod)\n    print(ans)", "def LI():\n    return list(map(int, input().split()))\n\n\nL, R = LI()\nans = 2020\nfor i in range(L, R+1):\n    for j in range(i+1, R+1):\n        y = (i*j) % 2019\n        ans = min(ans, y)\n        if ans == 0:\n            break\n    if ans == 0:\n        break\nprint(ans)\n", "L, R = [int(i) for i in input().split()]\n\nc = set()\n\nfor i in range(L, R + 1):\n  t = i % 2019\n  if t in c:\n    break\n  c.add(t)\n\n\nm = float('inf')\nl = list(c)\nfor i in range(len(l)):\n  for j in range(i + 1, len(l)):\n    m = min(m, l[i] * l[j] % 2019)\n\nprint(m)\n", "def main():\n    l, r = list(map(int, input().split()))\n    mi = 2019\n    c = 0\n\n    for i in range(l, r):\n        a = (i*i) % 2019\n        for _ in range(min(r-l-c, 2019)):\n            a = (a+i) % 2019\n\n            if a < mi:\n                mi = a\n                if a == 0:\n                    print((0))\n                    return \n        c += 1\n\n    print(mi)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "l, r = map(int, input().split())\na = []\nif r - l > 2019:\n  for i in range(l, l + 2019):\n    for j in range(i + 1, min(r + 1, l + 2020)):\n      a.append((i * j) % 2019)\nelse:\n  for i in range(l, r):\n    for j in range(i + 1, r + 1):\n      a.append((i * j) % 2019)\nans = min(a)\nprint(ans)", "L, R = map(int, input().split())\nif R - L > 2019:\n  print(0)\nelse:\n  x = 2019\n  for i in range(L, R+1):\n    for j in range(i+1, R+1):\n      x = min(x, i*j%2019)\n  print(x)", "L,R=map(int,input().split())\nmod=2019\nans=2018\nif R-L>=mod:\n    print(0)\nelse:\n    R%=mod\n    L%=mod\n    if R<=L:\n        R+=mod\n    for i in range(L+1,R+1):\n        for j in range(L,i):\n            ans=min(ans,i*j%mod)\n    print(ans)", "def main():\n    l, r = map(int, input().split())\n    q, ll = l // 2019, l % 2019\n    rr = r % 2019\n    rng = [*range(ll, rr+1)] if r - l < (2019 * q - ll) % 2019 else [*range(ll, 2019)] + [*range(rr+1)]\n    lenrng = len(rng)\n    ans = 2020\n    for i in range(lenrng-1):\n        for j in range(i+1, lenrng):\n            tmp = rng[i] * rng[j] % 2019\n            if tmp < ans:\n                ans = tmp\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()", "l,r=map(int,input().split())\nans=2020\nfor i in range(l,r):\n    for j in range(i+1,r+1):\n        if (i*j)%2019==0:\n            print(0)\n            return\n        ans=min(ans,(i*j)%2019)\nprint(ans)", "import itertools\nl,r = map(int,input().split())\nif r-l >= 2019:\n    print(0)\n    return\nw = []\nq = list(itertools.combinations(range(l,r+1),2))\nfor i in range(len(q)):\n    w.append((q[i][0]*q[i][1])%2019)\n\nprint(min(w))", "l ,r = list(map(int, input().split()))\nt = []\nif r-l >= 2019:\n  print((0))\n  return\nelif r-l < 2019:\n  if 2019 <= l:\n    for i in range(l, r):\n      for j in range(i+1, r+1):\n        ii = i % 2019\n        jj = j % 2019\n        s = (ii*jj) % 2019\n        t.append(s)\n    ans = min(t)\n    print(ans)\n  elif l < 2019 < r:\n    for i in range(l, r):\n      for j in range(i+1, r+1):\n        ii = i % 2019\n        jj = j % 2019\n        s = (ii*jj) % 2019\n        t.append(s)\n    ans = min(t)\n    print(ans)\n  elif r <= 2019:\n    for i in range(l, r):\n      for j in range(i+1, r+1):\n        s = (i*j) % 2019\n        t.append(s)\n    ans = min(t)\n    print(ans)\n", "l,r = list(map(int,input().split()))\n\nif r-l >=2019 :\n    ans = 0 \nelse :\n    ans = 2019**2\n    for i in range(l,r+1):\n        for j in range(i+1,r+1):\n            tmp = i*j%2019\n            ans = min(ans,tmp)\nprint(ans)    \n", "#!/usr/bin/env python3\n\ndef main():\n    l, r = list(map(int, input().split()))\n    ans = 2019\n    for i in range(l, r):\n        for j in range(i + 1, r + 1):\n            ans = min(ans, i * j % 2019)\n            if ans == 0:\n                break\n        if ans == 0:\n            break\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "L, R = map(int, input().split(' '))\nrst = float('inf')\nif R > L + 2019 * 2:\n    R = R % 2019 + 2019\nelse:\n    R %= 2019\nL %= 2019\nfor i in range(L, R + 1):\n    for j in range(i + 1, R + 1):\n        rst = min(rst, (i * j) % 2019)\nprint(rst)", "l, r = map(int, input().split())\nans = 2019\nif r - l <= 2021:\n    for i in range(l, r):\n        for j in range(i+1, r+1):\n            a = ((i%2019)*(j%2019))%2019\n            ans = min(a, ans)\n    print(ans)\nelse:\n    for p in range(l, l+2021):\n        for q in range(p+1, l+2022):\n            b = ((p%2019)*(q%2019))%2019\n            ans = min(b, ans)\n    print(ans)", "import sys\nl,r=map(int,input().split())\n\nif (r-l) > 2100:\n  print(0)\n  return\n\nans=9999\n\nfor i in range(l,r):\n  for j in range(i+1,r+1):\n    ans=min(ans,(i*j)%2019)\nprint(ans)", "import sys\n\ndef read_str(): return sys.stdin.readline().strip()\ndef read_int(): return int(sys.stdin.readline().strip())\ndef read_ints(): return list(map(int, sys.stdin.readline().strip().split()))\ndef read_str_split(): return list(sys.stdin.readline().strip())\ndef read_int_list(): return list(map(int, sys.stdin.readline().strip().split()))\n\ndef Main():\n    l, r = read_ints()\n    ans = 2020\n    if r - l >= 2019:\n        print((0))\n        return\n    for i in range(l, r + 1):\n        for j in range(l, i):\n            ans = min(ans, i * j % 2019)\n    print(ans)\n\ndef __starting_point():\n    Main()\n\n__starting_point()", "L, R = map(int, input().split())\n \n# \u4f8b\uff1aL=3000, R=10000 \u3067\u8003\u3048\u308b\n# (i,j)=(3000,3001)\u304b\u3089\u59cb\u307e\u308a\u3001(3000,5018)\u3067\u6700\u5c0f(=0)\n \n# R-L>=2018 \u306e\u3068\u304d\u3001(L,L+1),...,(L,L+2018)\u306e\u9593\u3067\u6700\u5c0f\u50240\u3092\u53d6\u308c\u308b\n# \u305d\u308c\u4ee5\u5916\u306e\u3068\u304d\u3001\u5168\u63a2\u7d22\u3057\u3066\u3082O((10^3)^2)\u3067\u9593\u306b\u5408\u3046\uff01\nif R-L >= 2018:\n  print(0)\nelse:\n  m = 2019\n  for i in range(L, R):\n    for j in range(i+1, R+1):\n      m = min(m, i*j % 2019)\n  print(m)", "L,R = map(int,input().split())\nMOD = 2019\nans = 2020\nif R - L > 2010:\n  print(0)\n  return\nfor i in range(L,R):\n    for j in range(i+1,R+1):\n        ans = min(ans,i*j%MOD)\nprint(ans)", "L, R = list(map(int, input().split()))\nans = 2018\nfor i in range(L, R):\n    for j in range(i + 1, R + 1):\n        a = (i * j) % 2019\n        if a < ans:\n            ans = a\n        if ans == 0:\n            break\n    else:\n        continue\n    break\nprint(ans)\n", "MOD = 2019\n\nl, r = map(int, input().split())\nif r - l >= 2019:\n    print(0)\n    return\nlst = []\nfor num in range(l, r + 1):\n    lst.append(num % MOD)\nans = 2020\nll = len(lst)\nfor i in range(ll):\n    for j in range(i + 1, ll):\n        tmp = (lst[i] * lst[j]) % MOD\n        ans = min(ans, tmp)\nprint(ans)", "l, r=map(int,input().split())\nif r-l>=2019:\n    minimum=0\nelse:\n    left,right=l%2019,r%2019\n    minimum=2018**2\n    for i in range(left,right+1):\n        for j in range(i+1,right+1):\n            minimum=min(minimum,i*j%2019)\nprint(minimum)", "L, R = map(int, input().split())\n\nans = 2019\nfor i in range(L, L+2020-1):\n    for j in range(i+1, i+2020):\n        if j > R: break\n        ans = min((i*j)%2019, ans)\nprint(ans)", "L,R = map(int,input().split())\nif R-L+1 >= 2019:\n    print(0)\n    return\nR %= 2019\nL %= 2019\nif R <= L:\n    print(0)\n    return\nans = 2020\nfor i in range(L,R):\n    for j in range(i+1,R+1):\n        ans = min(ans,(i*j)%2019)\nprint(ans)", "L,R=map(int,input().split())\nl1=L//2019\nr1=R//2019\nif l1<r1:\n  print(0)\nelif l1==r1:\n  res=[]\n  for i in range(L,R+1):\n    for j in range(i+1,R+1):\n      res.append((i*j)%2019)\n  print(min(res))", "L, R = map(int, input().split())\np = 2019\n\nif R - L >= p:\n    print(0)\nelse:\n    res = p\n    for i in range(L, R):\n        for j in range(i + 1, R + 1):\n            res = min(res, i * j % p)\n    print(res)", "#50 C - Remainder Minimization 2019 AC (hint)\nL,R = map(int,input().split())\n\nans = 2020\n# O(2019*2019)\n# i \u306f 2019 \u500b\u4ee5\u4e0b\nfor i in range(L,R+1):\n    # j \u306f\u30002019 \u500b\u4ee5\u4e0b\n    for j in range(i+1,R+1):\n        n = i*j\n        if n%2019 == 0:\n            ans = 0\n            break\n        n = n%2019\n        ans = min(ans,n)\n    else:\n        continue\n    break\nprint(ans)", "L,R=list(map(int,input().split()))\nans=2020\nif R-L>=4037:\n    print((0))\nelse:\n    for i in range(L,R):\n        for j in range(i+1,R+1):\n            temp=((i%2019)*(j%2019))%2019\n            if ans>temp:\n                ans=temp\n    print(ans)\n", "#import math\n#import itertools\n#import numpy as np\n#from collections import deque\n# sys.setrecursionlimit(10 ** 6)\n#mod = 10 ** 9 + 7\n#INF = 10 ** 9\n#PI = 3.14159265358979323846\n\nINT = lambda: int(input())\nINTM = lambda: map(int,input().split())\nSTRM = lambda: map(str,input().split())\nSTR = lambda: str(input())\nLIST = lambda: list(map(int,input().split()))\nLISTS = lambda: list(map(str,input().split()))\n\ndef do():\n    l,r=INTM()\n    mods=[]\n    for i in range(l,min(l+3000,r+1)):\n        mods.append(i%2019)\n    \n    ans=2018\n    ml=len(mods)\n    for i in range(ml-1):\n        for j in range(i+1,ml):\n            ans=min(ans,(mods[i]*mods[j])%2019)\n\n    print(ans)\n\n\ndef __starting_point():\n    do()\n__starting_point()", "# ABC 133 C\n[L, R] = [int(i) for i in input().split()]\nans = 2018\nif R - L >= 2018:\n    ans = 0\n    #print('a')\nelse:\n    l = L%2019\n    r = R%2019\n    if r < l:\n        ans = 0\n     #   print('b')\n    else:\n        for i in range(l, r):\n            for j in range(i+1, r+1):\n                if (i*j)%2019 < ans:\n                    ans = (i*j)%2019\n      #              print('c')\nprint(ans)", "L, R = map(int, input().split())\n\ndef mod(num):\n    return num % 2019\n\n\n#  (2019a + x)(2019b + y) = 2019(n) + xy\n\nans = 10 ** 9\n\nlr = min(R, L + 2019) + 1\n\nfor i in range(L, lr):\n    for j in range(i + 1, lr):\n        ans = min(ans, mod(i * j))\n        \nprint(ans)", "import itertools\n\nL,R=map(int, input().split())\n\nfor i in range((2*10**9)//2019+1):\n\tif L<=i*2019 and i*2019<=R:\n\t\tprint(0)\n\t\treturn\n\nans=2020\n\nfor h in range(L,R+1):\n\tfor g in range(h+1,R+1):\n\t\tans=min(ans,(h*g)%2019)\n\nprint(ans)", "L, R = map(int,input().split())\nDif = abs(L-R)+1\nif Dif >= 2020:\n    Ans = 0\nelse:\n    Box = []\n    for i in range(L,R+1):\n        Box.append(i%2019)\n    Box.sort()\n    Ans = 2020*2020\n    for i in range(len(Box)-1):\n        B1 = Box[i]\n        for j in range(i+1,len(Box)):\n            B2 = Box[j]\n            Ans = min((B1*B2)%2019, Ans)\nprint(Ans%2019)", "L,R = map(int,input().split())\nans = 0\n\nif R-L < 2018:\n  nums = list(range(L,R+1))\n  A = []\n  for i in range(len(nums)):\n    for j in range(i+1,len(nums)):\n      A.append((nums[i]*nums[j])%2019)\n  ans = min(A)\n\nprint(ans)", "L, R = map(int, input().split())\nresult = R*R\nif R - L + 1 > 2019:\n    R = L + 2018\nfor i in range(L,R+1):\n    for j in range(i+1,R+1):\n        if (i * j) % 2019 < result:\n            result = (i * j) % 2019\nprint(result)", "\nMOD = 2019\nL, R = list(map(int, input().split()))\nmod_l = L % MOD\nmod_r = R % MOD\n\nif R - L >= 2019:\n    print(\"0\")\nelse:\n    ans = 2018\n    for i in range(mod_l, mod_r):\n        for j in range(i+1, mod_r+1):\n            _ans = (i * j) % MOD\n            if ans > _ans:\n                ans = _ans\n    print(ans)\n", "L, R = map(int, input().split(' '))\nrst = float('inf')\nif R >= L + 2019:\n    R = R % 2019 + 2019\nelse:\n    R %= 2019\nL %= 2019\nfor i in range(L, R + 1):\n    for j in range(i + 1, R + 1):\n        rst = min(rst, (i * j) % 2019)\nprint(rst)", "L, R = list(map(int, input().split()))\nif R-L >=2019:\n    minimum = 0\nelse:\n    left, right = L%2019, R%2019\n    minimum = 2018**2\n    for i in range(left, right + 1):\n        for j in range(i+1, right+1):\n            minimum = min(minimum, i*j%2019)\nprint(minimum)\n\n", "import sys\nimport math\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    S = set()\n    L, R = MI()\n    mod = 2019\n    if R // mod > (L-1) // mod:\n        print(0)\n        return\n    l = [i % mod for i in range(L, R+1)]\n    ans = float('inf')\n    N = len(l)\n    for index in range(N):\n        for index2 in range(index+1, N):\n            ans = min(ans, (l[index]*l[index2]) % mod)\n    \n    print(ans)\ndef __starting_point():\n    main()\n__starting_point()", "l,r = map(int,input().split())\nmod = 2019\na = l%mod\nb = r%mod\n\nif r-l >= 2018:\n    print(0)\n\nelse:\n    if a > b:\n        print(0)\n    else:\n        t = (a*(a+1))%mod\n        for x in range(a,b):\n            for y in range(x+1,b+1):\n                if (x*y)%mod < t:\n                    t = (x*y)%mod\n        print(t)", "L, R = list(map(int, input().split()))\nif R-L >=2019:\n    minimum = 0\nelse:\n    left, right = L%2019, R%2019\n    minimum = 2019**2\n    for i in range(left, right + 1):\n        for j in range(i+1, right+1):\n            minimum = min(minimum, i*j%2019)\nprint(minimum)\n\n", "L, R = map(int, input().split(' '))\nrst = float('inf')\nif R > L + 2019:\n    R = R % 2019 + 2019\nelse:\n    R %= 2019\nL %= 2019\nfor i in range(L, R + 1):\n    for j in range(i + 1, R + 1):\n        rst = min(rst, (i * j) % 2019)\nprint(rst)", "l,r= map(int, input().split())\n\na=min(r+1,l+2019)\n\nb=2019\nfor i in range(l,a):\n    for j in range(l,a):\n        if i==j:\n            continue\n        else:\n            b=min(b,(i*j)%2019)\n\nprint(b)", "l,r = map(int, input().split())\nm = 2019\nfor i in range(l,min(r+1,l+2020)):\n    for j in range(i+1, min(r+1,l+2020)):\n        i %= 2019\n        j %= 2019\n        m = min(m, (i*j)%2019)\nprint(m%2019)", "L,R = map(int,input().split())\n\nif R-L > 2019:\n  print(0)\n  return\n  \nres = 100000\nfor i in range(L,R):\n  ii = i%2019\n  for j in range(i+1,R+1):\n    j %= 2019\n    res = min(res,ii*j%2019)\n  \nprint(res)", "# AtCoder Beginner Contest 133\n# C - Remainder Minimization 2019\nL,R=map(int,input().split())\n\nmod=2019\nans=20000\n\nfor i in range (L,min(R,L+mod)):\n    for j in range (L+1,min(R+1,L+mod+1)):\n        tempans=(i%mod)*(j%mod)\n        tempans%=mod\n        if tempans<ans:\n            ans=tempans\n\nprint(ans)", "l, r = map(int, input().split())\nans = 2017*2018\nfor i in range(l,r):\n  for j in range(i+1,r+1):\n    ans = min(ans, i*j%2019)\n    if ans == 0:\n      print(ans)\n      return\nprint(ans)", "l,r = map(int,input().split())\nans = 2018\nif r - l >= 2019:\n    print(\"0\")\nelse:\n    for i in range(l,r):\n        for j in range(i+1,r+1):\n            temp = (i * j) % 2019\n            ans = min(ans,temp)\n    print(ans)", "l, r = map(int, input().split())\nl_mod = l % 2019\nr_mod = r % 2019\nif l + 2019 <= r:\n    print(0)\n    return\nm = 3000\nfor i in range(l_mod, r_mod+1):\n    for j in range(i+1, r_mod+1):\n        m = min(m, i * j % 2019)\nprint(m)", "L,R = (int(x) for x in input().split())\nif R-L > 2019*2:\n  R -= ((R-L)//2019-1)*2019\nans = 2019\nfor i in range(L,R):\n  for j in range(i+1,R+1):\n    ans = min(ans,(i*j)%2019)\nprint(ans)", "l, r = map(int, input().split())\n\nans = 2018**2\nfor i in range(l, min(r, l+2019)):\n    v = i % 2019\n    for j in range(l+1, min(r+1, l+2020)):\n        w = j % 2019\n        ans = min(ans, (v*w)%2019)\nprint(ans)", "def main():\n    l, r = map(int, input().split())\n    ans = 2019\n    for i in range(l, r):\n        for j in range(i + 1, r + 1):\n            ans = min(ans, i * j % 2019)\n            if ans == 0:\n                break\n        if ans == 0:\n            break\n    print(ans)\n \n \ndef __starting_point():\n    main()\n__starting_point()", "import sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\n\ndef main():\n    l, r = list(map(int, input().split()))\n    diff = r-l\n    if diff >= 2018:\n        return 0\n\n    else:\n        min_ = 2 ** 20\n        # l \u306e\u5546\u3068\u4f59\u308a\n        p = l // 2019 ; q = l % 2019\n        for xi in range(l, r):\n            qi = (q + (xi - l)) % 2019\n            if qi == 0:\n                return 0\n            for xj in range(xi+1, r+1):\n                qj = (q + (xj - l)) % 2019\n                if qj == 0:\n                    return 0\n                else:\n                    qij = (qi * qj) % 2019\n                    if qij < min_:\n                        min_ = qij\n\n    return min_\n\nprint(main())", "L, R = map(int, input().split())\n \nm = 2019\nflag = False\nfor i in range(L, R):\n  for j in range(i+1, R+1):\n    m = min(m, i*j % 2019)\n    if m == 0: \n      flag = True\n      break\n  if flag: break\n      \nprint(m)", "L, R = map(int, input().split())\nMOD = 2019\nif MOD <= R - L + 1:\n  ans = 0\nelse:\n  ans = MOD - 1\n  nums = set()\n  start = L%MOD\n  for i in range(start, start + (R - L) + 1):\n    if i%MOD in nums:\n      break\n    nums.add(i%MOD)\n  nums = tuple(nums)\n  for i in range(len(nums)):\n    for j in range(i+1, len(nums)):\n      ans = min(ans, nums[i]*nums[j]%MOD)\nprint(ans)", "L, R = map(int, input().split())\n\n# \u4f8b\uff1aL=3000, R=10000 \u3067\u8003\u3048\u308b\n# (i,j)=(3000,3001)\u304b\u3089\u59cb\u307e\u308a\u3001(3000,5018)\u3067\u6700\u5c0f(=0)\n\n# R-L>=2019 \u306e\u3068\u304d\u3001(L,L+1),...,(L,L+2019)\u306e\u9593\u3067\u6700\u5c0f\u50240\u3092\u53d6\u308c\u308b\u306e\u3067\u3001\u9ad8\u30052018\u56de\u306e\u63a2\u7d22\n# \u5168\u63a2\u7d22\u3057\u3066\u3082 break \u3059\u308c\u3070\u9593\u306b\u5408\u3046\uff01\nm = 2019\nflag = False\nfor i in range(L, R):\n  for j in range(i+1, R+1):\n    m = min(m, i*j % 2019)\n    if m == 0: \n      flag = True\n      break\n  if flag: break\n\nprint(m)", "#ABC133 C\n\nL,R = map(int,input().split())\nA = []\nif R - L > 2019:\n    print(0)\nelif 2 <= R - L and R - L <= 2019:\n    for i in range(L,R):\n        for j in range(i+1,R+1):\n            A.append((i*j)%2019)\n    print(min(A))\nelif R - L == 1:\n    print((R*L)%2019)"]