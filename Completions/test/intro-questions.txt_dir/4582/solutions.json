["# \u5165\u529b\na, b = input().split()\n\n# \u51fa\u529b\n# a = 'H' \u306e\u3068\u304dat\u304f\u3093\u306f\u6b63\u76f4\u8005\nif a == 'H' and b == 'H':\n    print('H')\nelif a == 'D' and b == 'H':\n    print('D')\nelif a == 'H' and b =='D':\n    print('D')\nelif a == 'D' and b == 'D':\n    print('H')", "a,b = input().split()\nif a == b:\n    print('H')\nelse:\n    print('D')", "a,b=map(str,input().split())\nif a==\"H\" :\n  print(b)\nelse :\n  if b==\"H\" :\n    print(\"D\")\n  else :\n    print(\"H\")", "a, b = input().split()\nprint('H' if a==b else 'D')", "a, b = input().split()\nif a == \"H\" and b == \"H\" or a == \"D\" and b == \"D\":\n    print(\"H\")\nelse:\n    print(\"D\")\n", "# A - HonestOrDishonest\n\n# a, b\u306b\u305d\u308c\u305e\u308c\u6587\u5b57'H','D'\u304c\u5165\u529b\u3055\u308c\u308b\u306e\u3067\u3001'H'\u304b'D'\u3092\u5224\u5b9a\u3057\u51fa\u529b\u3059\u308b\n\n\na, b = input().split()\n\nif a == 'H':\n    if b == 'H':\n        print('H')\n    elif b == 'D':\n        print('D')\nelif a == 'D':\n    if b == 'H':\n        print('D')\n    elif b == 'D':\n        print('H')\n", "# \u30b7\u30ab\u306eAtCoDeer\u304f\u3093\u3068TopCoDeer\u304f\u3093\u304c\u300c\u6b63\u76f4\u8005\u304b\u5618\u3064\u304d\u304b\u300d\u30b2\u30fc\u30e0\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n# \u3053\u306e\u30b2\u30fc\u30e0\u3067\u306f\u3001\u6b63\u76f4\u8005\u306f\u5e38\u306b\u307b\u3093\u3068\u3046\u306e\u3053\u3068\u3092\u8a00\u3044\u3001\u5618\u3064\u304d\u306f\u5e38\u306b\u5618\u3092\u8a00\u3044\u307e\u3059\u3002\n# \u6587\u5b57 a \u3068 b \u304c\u5165\u529b\u3068\u3057\u3066\u4e0e\u3048\u3089\u308c\u307e\u3059\u3002\n# \u3053\u308c\u3089\u306f\u305d\u308c\u305e\u308c H \u304b D \u306e\u3069\u3061\u3089\u304b\u3067\u3059\u3002\n# a=H \u306e\u3068\u304d\u3001AtCoDeer\u304f\u3093\u306f\u6b63\u76f4\u8005\u3067\u3059\u3002\n# a=D \u306e\u3068\u304d\u3001AtCoDeer\u304f\u3093\u306f\u5618\u3064\u304d\u3067\u3059\u3002\n# b=H \u306e\u3068\u304d\u3001AtCoDeer\u304f\u3093\u306f\u300cTopCoDeer\u304f\u3093\u306f\u6b63\u76f4\u8005\u3060\u300d\u3068\u767a\u8a00\u3057\u3066\u3044\u307e\u3059\u3002\n# b=D \u306e\u3068\u304d\u3001AtCoDeer\u304f\u3093\u306f\u300cTopCoDeer\u304f\u3093\u306f\u5618\u3064\u304d\u3060\u300d\u3068\u767a\u8a00\u3057\u3066\u3044\u307e\u3059\u3002\n#\n# \u3053\u308c\u3089\u304b\u3089\u5224\u65ad\u3057\u3066\u3001TopCoDeer\u304f\u3093\u304c\u6b63\u76f4\u8005\u304b\u3069\u3046\u304b\u5224\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u5236\u7d04\n# a='H' \u307e\u305f\u306f 'D'\n# b='H' \u307e\u305f\u306f 'D'\n\n\n# \u6a19\u6e96\u5165\u529b\u304b\u3089\u6587\u5b57\u5217 a \u3068 b \u3092\u53d6\u5f97\u3059\u308b\ninput_a, input_b = list(map(str,input().split()))\n\nreslut = \"ret\"\n\n# TopCoDeer\u304f\u3093\u304c\u6b63\u76f4\u8005\u304b\u3069\u3046\u304b\u5224\u5b9a\u3057\u3001\u7d50\u679c\u3092\u51fa\u529b\u3059\u308b\u3002\n# \u203b \u6b63\u76f4\u8005==\"H\"\u3001\u5618\u3064\u304d==\"D\"\nif input_a == \"H\":  # AtCoDeer\u304f\u3093\u304c\u6b63\u76f4\u8005\u306e\u5834\u5408\n    if input_b == \"H\":\n        result = \"H\"\n    elif input_b == \"D\":\n        result = \"D\"\nelif input_a == \"D\":    # AtCoDeer\u304f\u3093\u304c\u5618\u3064\u304d\u8005\u306e\u5834\u5408\uff08\u6761\u4ef6\u5897\u3048\u305f\u6642\u3088\u3046\u306belif\u306b\u3057\u305f\uff09\n    if input_b == \"H\":\n        result = \"D\"\n    elif input_b == \"D\":\n        result = \"H\"\nelse:\n    reslut = \"I don't Know.\"\n\nprint(result)\n\n\n", "a, b = map(str, input().split())\n\nif a == b:\n    print(\"H\")\nelif a != b:\n    print(\"D\")", "a,b = map(str,input().split())\nif a == \"H\":\n    print(b)\nelse:\n    if b == \"H\":\n        print(\"D\")\n    else:\n        print(\"H\")", "a,b = input().split()\n\nif a == \"H\":\n  print(b)\nelse:\n  if b == \"H\":\n    print(\"D\")\n  else:\n    print(\"H\")", "a,b=input().split()\nprint(\"H\" if a==b else \"D\")", "a,b = input().split()\n\nif a == b:\n  print(\"H\")\nelse:\n  print(\"D\")", "a, b = map(str, input().split())\n\nif a == 'H' and b == 'H' or a == 'D' and b == 'D':\n    print('H')\nelse:\n    print('D')", "a, b = input().split()\n\nif a == 'H':\n    print(b)\nelif a == 'D':\n    print('HD'[int(not 'HD'.index(b))])", "'''\nabc056 A - Honest Or Dishonest\nhttps://atcoder.jp/contests/abc056/tasks/abc056_a\n'''\n\na, b = input().split()\n\nif a == 'H': #AtCoDeer\u6b63\u76f4\n    if b == 'H': #AtCoDeer\u304f\u3093\u300cTopCoDeer\u304f\u3093\u306f\u6b63\u76f4\u300d\n        TopCoDeer = 'H'\n    else:\n        TopCoDeer = 'D'\nelse:\n    if b == 'H':\n        TopCoDeer = 'D'\n    else:\n        TopCoDeer = 'H'\nprint(TopCoDeer)\n", "a, b = input().split()\nhd = \"HD\"\nprint((hd[(hd.index(a) + hd.index(b)) % 2]))\n", "a, b = input().split()\nif a == b:\n  print('H')\nelse:\n  print('D')", "import sys, math\nfrom itertools import combinations as c, product as p\nfrom collections import deque\nsys.setrecursionlimit(10**9)\nMOD = 10**9 + 7\n#MOD = 998244353\n\n\ndef si(): return input()\ndef ii(): return int(input())\ndef fi(): return float(input())\ndef lstr(): return input().split()\ndef lint(): return list(map(int, input().split()))\ndef lint_dec(): return list(map(lambda x:int(x) - 1, input().split()))\ndef lnstr(n): return [input() for _ in range(n)]\ndef lnint(n): return [int(input()) for _ in range(n)]\ndef lint_list(n): return [lint() for _ in range(n)]\n\n\n\n############################################################\na, b = lstr()\nprint('H' if a == b else 'D')", "a,b = input().split()\nprint((\"H\" if (a==\"H\" and b==\"H\") or (a==\"D\" and b==\"D\") else \"D\"))\n", "a,b=map(str,input().split())\nif (a == \"H\" and b == \"H\") or (a == \"D\" and b == \"D\"):\n  print(\"H\")\nelse:\n  print(\"D\")", "#   AtCoder abc056 a\n#   \u30b9\u30c8\u30ec\u30c3\u30c1\u8ab2\u984c\n\n#   \u5165\u529b\na, b = list(map(str, input().split()))\n\nif a == b:\n    print(\"H\")\nelse:\n    print(\"D\")\n", "a,b=input().split()\nif a == b:\n    print(\"H\")\nelse:\n    print(\"D\")", "A,B = input().split()\n\nprint('H') if (A == 'D' and B == 'D') or (A == 'H' and B == 'H') else print('D')", "a, b = input().split()\nif a == \"H\" and b == \"H\":\n  print(\"H\")\nelif a == \"D\" and b == \"D\":\n  print(\"H\")\nelse:\n  print(\"D\")", "a, b = map(str, input().split())\n\nif a == 'H' and  b == 'H':\n    print('H')\nelif a == 'D' and b == 'D':\n    print('H')\nelse:\n    print('D')", "a,b = input().split()\nprint(('H' if a==b else 'D'))\n", "# A - HonestOrDishonest\n# https://atcoder.jp/contests/abc056/tasks/abc056_a\n\na, b = list(map(str, input().split()))\n\nh = 'H'\nd = 'D'\n\nresult = h\n\nif a == h:\n    if b == d:\n        result = d\nelse:\n    if b == h:\n        result = d\n    else:\n        result = h\n\nprint(result)\n", "print(('HD'[len(set(input()))%2]))\n\n", "a,b=map(str,input().split())\nif a==\"H\" and b==\"H\":\n  print(\"H\")\nelif a==\"D\" and b==\"D\":\n  print(\"H\")\nelse:\n  print(\"D\")", "#   AtCoder abc056 a\n#   \u30b9\u30c8\u30ec\u30c3\u30c1\u8ab2\u984c\n\n#   \u5165\u529b\na, b = list(map(str, input().split()))\n\n#   \u5224\u5b9a\n# if ((a == \"H\") and (b == \"H\")) or ((a == \"D\") and (b == \"D\")):\n#     print(\"H\")\n# else:\n#     print(\"D\")\nif a == b:\n    print(\"H\")\nelse:\n    print(\"D\")\n", "# a atcooderkun\u306e\u771f\u507d  b atcooderkun\u306e\u8a00\u52d5\n# # b=H at\u300cTOP\u672c\u5f53\u300d\u3000b=D at\u300cTOP\u5618\u3060\uff01\n#    \u5bfe\u5fdc\u95a2\u4fc2\u3000\u3007\u3000\u00d7\n# \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u00d7\u3000\u3007\n\na, b = input().split()\n\nif a==b:\n    print(\"H\")\nelse:\n    print(\"D\")", "# \u5165\u529b\na,b = map(str, input().split())\n\n# HH\u3068DD\u306fH\u3001\u305d\u308c\u4ee5\u5916\u306fD\nif a == 'H' and b == 'H':\n    print('H')\nelif a == 'D' and b == 'D':\n    print('H')\nelse:\n    print('D')", "a, b = input().split()\nif a == b:\n    print(\"H\")\nelse:\n    print(\"D\")", "a,b = input().split()\n\nprint(\"H\" if a == b else \"D\")", "s = input().split()\nif s[0] == s[1]:\n  print(\"H\")\nelse:\n  print(\"D\")", "a, b = list(map(str, input().split()))\n\nif a == 'H':\n    if b == 'H':\n        print('H')\n    else:\n        print('D')\nelse:\n    if b == 'H':\n        print('D')\n    else:\n        print('H')\n", "#ABC056A\na,b = input().split()\nprint(\"H\" if (a==\"H\" and b==\"H\") or (a==\"D\" and b==\"D\") else \"D\")", "a, b = input().split()\n\nif a == 'H':\n    if b == 'H':\n        print('H') \n    else:\n        print('D')\nelse:\n    if b == 'H':\n        print('D')\n    else:\n        print('H')", "a, b = input().split()\n\nif a == 'H':\n    if b == 'H':\n        print('H')\n    else:\n        print('D')\nelse:\n    if b == 'H':\n        print('D')\n    else:\n        print('H')", "a,b=input().split()\nprint(\"H\" if a==b else\"D\")", "deck = [\"H\",\"D\"]\na,b = input().split()\nif deck.index(a) == 0:\n  print(b)\nelif deck.index(b) == 0:\n  print(deck[1])\nelse:\n  print(deck[0])", "a, b = input().split()\n\nif a == \"D\" and b == \"D\":\n    print(\"H\")\nelif a == \"H\" and b == \"H\":\n    print(\"H\")\nelif a == \"D\" or b == \"D\":\n    print(\"D\")", "a,b=map(str,input().split())\nif a=='H': print(b)\nelif b=='H': print(a)\nelse:print('H')", "a, b = input().split()\nif a == \"H\":\n  print(b)\nelse:\n  if b == \"H\":\n    print(\"D\")\n  else:\n    print(\"H\")", "a,b = (input().split())\n\nif (a == 'H' and b == 'H') or (a == 'D' and b == 'D'):\n    print('H')\n\nelif (a == 'H' and b == 'D') or (a == 'D' and b == 'H'):\n    print('D')", "a,b=input().split()\nif a==b:print('H')\nelse:print('D')", "a, b = input().split()\nif a == \"H\":\n    print(b)\nelse:\n    if b == \"H\":\n        print(\"D\")\n    else:\n        print(\"H\")\n", "a,_,b = input()\nif a==\"H\"and b==\"H\":\n    print(\"H\")\nelif a==\"H\"and b==\"D\":\n    print(\"D\")\nelif a==\"D\"and b==\"H\":\n    print(\"D\")\nelse:\n    print(\"H\")", "a, b = input().split()\nprint('H' if a == b else 'D')", "# a=H\u306e\u3068\u304db=H\u3067\u6b63\u76f4\u8005\u3001a=D\u306e\u6642b=D\u3067\u6b63\u76f4\u8005\n\na, b = map(str, input().split())\nif a == b:\n    print('H')\nelse:\n    print('D')", "a,b=input().split()\nif(a==\"H\" and b==\"D\"):\n\tprint(\"D\")\nelif(a==\"D\" and b==\"H\"):\n\tprint(\"D\")\nelif(a==\"H\" and b==\"H\"):\n\tprint(\"H\")\nelif(a==\"D\" and b==\"D\"):\n\tprint(\"H\")\n", "a,b=input().split()\nx= a==\"H\"\ny= b==\"H\"\nif x^y:\n    print(\"D\")\nelse:\n    print(\"H\")\n", "S =input().replace(\"H\",\"0\")\nS = S.replace('D','1')\nS_list = list(map(int,S.split()))\n\nif  S_list[0] ^ S_list[1] == 0 :\n    result = \"H\"\nelse:\n    result = \"D\"\nprint(result)", "# A - HonestOrDishonest\ndef main():\n    a, b = input().split()\n\n    if a == 'H':\n        if b == 'H':\n            print('H')\n        else:\n            print('D')\n    else:\n        if b == 'H':\n            print('D')\n        else:\n            print('H')\n  \n        \ndef __starting_point():\n    main()\n__starting_point()", "a,b=map(str,input().split())\nif a==\"H\":\n  print(b)\n  return\nelse:\n  if b==\"H\":\n    print(\"D\")\n  else:\n    print(\"H\")", "a,b = input().split()\n\nif (a == 'H' and b == 'H') or (a == 'D' and b == 'D'):\n  print('H')\nelse:\n  print('D')", "a, b = input().split()\nif a == 'H':\n    print(b)\nelse:\n    if b == 'D':\n        print('H')\n    else:\n        print('D')", "a,b = input().split()\nif a == 'H' and b == 'H':\n  print('H')\nelif a == 'H' and b == 'D':\n  print('D')\nelif a == 'D' and b == 'H':\n  print('D')\nelse:\n  print('H')", "a, b = input().split()\nprint(\"H\" if a == b else \"D\")", "a,b = map(str,input().split())\n\nprint('H' if a == b else 'D')", "say = ''.join(input().split())\nif say=='HH' or say== 'DD':\n    print('H')\nelse:\n    print('D')", "# \u5165\u529b\na, b = map(str,input().split())\n\n# \u51e6\u7406\nif a == b:\n    TopCoDeer = 'H'\nelse:\n    TopCoDeer = 'D'\n\n# \u51fa\u529b\nprint(TopCoDeer)", "a, b = input().split()\nprint(\"DH\"[a == b])", "a,b = list(map(str,input().split()))\nif a == 'H' and b== 'H':\n    print('H')\nelif a == 'H' and b== 'D':\n    print('D')\nelif a == 'D' and b== 'H':\n    print('D')\nelse:\n    print('H')\n", "a, b = input().split()\n\nif a == 'H':\n  if b == 'H':\n    print('H')\n  else:\n    print('D')\nelse:\n  if b == 'H':\n    print('D')\n  else:\n    print('H')\n", "a, b = input().split()\n\nif a == 'H' and b == 'H':\n    print('H')\nelif a == 'H' and b == 'D':\n    print('D')\nelif a == 'D' and b == 'H':\n    print('D')\nelse:\n    print('H')\n", "a,b=map(str,input().split())\n\nif a=='H':\n    a=1\nelse:\n    a=0\nif b=='H':\n    b=1\nelse:\n    b=0\n\nif a^b==0:\n    print('H')\nelse :\n    print('D')", "s={'H':0,'D':1}\nt=0\na=input().split()\n\nfor i in range(2):\n  t+=s[a[i]]\n  \nif t%2!=0:\n  print('D')\n  \nelse:\n  print('H')", "# \u6587\u5b57\u5217\u3092\u53d6\u5f97\na,b = map(str,input().split())\n\n# \u6761\u4ef6\u306b\u6cbf\u3063\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u529b\nif a == b:\n    print(\"H\")\nelse:\n    print(\"D\")", "a,b=input().split()\nif(a==\"H\" and b==\"D\"):\n\tprint(\"D\")\nelif(a==\"D\" and b==\"H\"):\n\tprint(\"D\")\nelif(a==\"H\" and b==\"H\"):\n\tprint(\"H\")\nelif(a==\"D\" and b==\"D\"):\n\tprint(\"H\")\n", "# \u30b7\u30ab\u306eAtCoDeer\u304f\u3093\u3068TopCoDeer\u304f\u3093\u304c\u300c\u6b63\u76f4\u8005\u304b\u5618\u3064\u304d\u304b\u300d\u30b2\u30fc\u30e0\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n# \u3053\u306e\u30b2\u30fc\u30e0\u3067\u306f\u3001\u6b63\u76f4\u8005\u306f\u5e38\u306b\u307b\u3093\u3068\u3046\u306e\u3053\u3068\u3092\u8a00\u3044\u3001\u5618\u3064\u304d\u306f\u5e38\u306b\u5618\u3092\u8a00\u3044\u307e\u3059\u3002\n# \u6587\u5b57 a \u3068 b \u304c\u5165\u529b\u3068\u3057\u3066\u4e0e\u3048\u3089\u308c\u307e\u3059\u3002\n# \u3053\u308c\u3089\u306f\u305d\u308c\u305e\u308c H \u304b D \u306e\u3069\u3061\u3089\u304b\u3067\u3059\u3002\n# a=H \u306e\u3068\u304d\u3001AtCoDeer\u304f\u3093\u306f\u6b63\u76f4\u8005\u3067\u3059\u3002\n# a=D \u306e\u3068\u304d\u3001AtCoDeer\u304f\u3093\u306f\u5618\u3064\u304d\u3067\u3059\u3002\n# b=H \u306e\u3068\u304d\u3001AtCoDeer\u304f\u3093\u306f\u300cTopCoDeer\u304f\u3093\u306f\u6b63\u76f4\u8005\u3060\u300d\u3068\u767a\u8a00\u3057\u3066\u3044\u307e\u3059\u3002\n# b=D \u306e\u3068\u304d\u3001AtCoDeer\u304f\u3093\u306f\u300cTopCoDeer\u304f\u3093\u306f\u5618\u3064\u304d\u3060\u300d\u3068\u767a\u8a00\u3057\u3066\u3044\u307e\u3059\u3002\n#\n# \u3053\u308c\u3089\u304b\u3089\u5224\u65ad\u3057\u3066\u3001TopCoDeer\u304f\u3093\u304c\u6b63\u76f4\u8005\u304b\u3069\u3046\u304b\u5224\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u5236\u7d04\n# a='H' \u307e\u305f\u306f 'D'\n# b='H' \u307e\u305f\u306f 'D'\n\n\n# \u6a19\u6e96\u5165\u529b\u304b\u3089\u6587\u5b57\u5217 a \u3068 b \u3092\u53d6\u5f97\u3059\u308b\ninput_a, input_b = list(map(str,input().split()))\n\nreslut = \"ret\"\n\n# TopCoDeer\u304f\u3093\u304c\u6b63\u76f4\u8005\u304b\u3069\u3046\u304b\u5224\u5b9a\u3057\u3001\u7d50\u679c\u3092\u51fa\u529b\u3059\u308b\u3002\n# \u203b \u6b63\u76f4\u8005==\"H\"\u3001\u5618\u3064\u304d==\"D\"\nif input_a == \"H\":  # AtCoDeer\u304f\u3093\u304c\u6b63\u76f4\u8005\u306e\u5834\u5408\n    if input_b == \"H\":\n        result = \"H\"\n    elif input_b == \"D\":\n        result = \"D\"\nelif input_a == \"D\":    # AtCoDeer\u304f\u3093\u304c\u5618\u3064\u304d\u8005\u306e\u5834\u5408\uff08\u6761\u4ef6\u5897\u3048\u305f\u6642\u3088\u3046\u306belif\u306b\u3057\u305f\uff09\n    if input_b == \"H\":\n        result = \"D\"\n    elif input_b == \"D\":\n        result = \"H\"\nelse:\n    reslut = \"I don't Know.\"\n\nprint(result)\n\n\n", "a,b=input().split();print([['H','D'][b=='H'],b][a=='H'])", "a,b = input().split()\nprint(\"H\" if a == b else \"D\")", "# 056_a\na, b = input().split()\nif (a == 'H' or a == 'D') and (b == 'H' or b == 'D'):\n    if a == 'H':\n        if b=='H':\n            print('H')\n        else:\n            print('D')\n    if a == 'D':\n        if b=='H':\n            print('D')\n        else:\n            print('H')\n", "a,b=input().split()\nif a==b:\n  print(\"H\")\nelse:\n  print(\"D\")", "a = input().split()\nif (a[0] == 'H' and a[1] == 'H') or (a[0] == 'D' and a[1] == 'D'):\n    print('H')\nelse:\n    print('D')", "a, b = input().split()\nprint(\"H\" if a == b else \"D\")", "a, b = input().split()\nhd = \"HD\"\nif a == \"H\":\n    print(b)\nelse:\n    print((hd[hd.index(b) - 1]))\n", "#56\na,b=input().split()\nif (a=='H' and b=='H'):\n    print('H')\nelif (a=='H' and b=='D'):\n    print('D')\nelif (a=='D' and b=='H'):\n    print('D')\nelse:\n    print('H')", "a,b=input().split();print(['HD'.replace(b,''),b][a=='H'])", "a, b = map(str,input().split())\n\nif a == \"H\" and b == \"H\" or a == \"D\" and b == \"D\":\n    print(\"H\")\nelse:\n    print(\"D\")", "a, b = input().split()\nprint('H' if (a == 'H') ^ (b == 'D') else 'D')", "# \u5165\u529b\na,b = map(str, input().split())\n\nif a == 'H' and b == 'H':\n    print('H')\nelif a == 'D' and b == 'D':\n    print('H')\nelse:\n    print('D')", "a, b = map(str, input().split())\n\nif (a == \"H\" and b == \"H\") or (a == \"D\" and b == \"D\"):\n    print(\"H\")\nelse:\n    print(\"D\")", "a,b=input().split()\nif a==b==\"H\" or a==b==\"D\":\n    print(\"H\")\nelse:\n    print(\"D\")", "a, b = map(str, input().split())\n\nif a == 'H':\n    if b == 'H':\n        ans = 'H'\n    else:\n        ans = 'D'\nelse:\n    if b == 'H':\n        ans = 'D'\n    else:\n        ans = 'H'\n\nprint(ans)", "a, b = input().split()\nprint(\"DH\"[a==b])", "print(\"HD\"[len(set(input().split()))-1])", "a, b = input().split()\n\nif a == 'H' and b == 'H':\n    result = 'H'\n    \nif a == 'D' and b == 'H':\n    result = 'D'\n    \nif a == 'D' and b == 'D':\n    result = 'H'\n    \nif a == 'H' and b == 'D':\n    result = 'D'\n    \nprint(result)", "a, b = map(str, input().split())\n\nif (a == b == 'H') or (a == b == 'D'):\n    print('H')\nelse:\n    print('D')", "a, b = input().split()\nif a == b:\n  print('H')\nelse:\n  print('D')", "# 056a\n\n# a=H, b=H TCD\u541b\u306f\u6b63\u76f4\u8005\n# a=H, b=D TCD\u541b\u306f\u5618\u3064\u304d\n# a=D, b=H TCD\u541b\u306f\u5618\u3064\u304d\n# a=D, b=D TCD\u541b\u306f\u6b63\u76f4\u8005\n\na, b = list(map(str, input().split()))\n\nif a == 'H' and b == 'H':\n    print('H')\nelif a == 'H' and b == 'D':\n    print('D')\nelif a == 'D' and b == 'H':\n    print('D')\nelse:\n    print('H')\n", "a, b = input().split()\nprint((\"D\", \"H\")[a == b])", "a,b = input().split()\nif a=='H':\n\tif b == 'H':\n\t\tprint('H')\n\telse:\n\t\tprint('D')\nelse:\n\tif b == 'H':\n\t\tprint('D')\n\telse:\n\t\tprint('H')\n", "#n = int(input())\na, b = list(map(str,input().split()))\n#l = list(map(int,input().split()))\n#l = [list(map(int,input().split())) for i in range(n)]\n\nif a == b:\n    print('H')\nelse:\n    print('D')\n", "#!/usr/bin/env python3\n\ndef main():\n    a, b = input().split()\n    print((\"H\" if a == b else \"D\"))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "a, b = list(map(str, input().split()))\nif a == b:\n    print('H')\nelse:\n    print('D')\n", "a, b = input().split()\n\nif a == 'H':\n    if b == 'H':\n        print('H')\n    else:\n        print('D')\nelse:\n    if b == 'H':\n        print('D')\n    else:\n        print('H')\n", "a,b=input().split(\" \")\nif a==\"H\":print(b)\nelif b==\"D\":print(\"H\")\nelse: print(\"D\")", "a,b=input().split()\nif a==\"H\" and b==\"H\":\n    print(\"H\")\nelif a==\"H\" and b==\"D\":\n    print(\"D\")\nelif a==\"D\" and b==\"H\":\n    print(\"D\")\nelse:\n    print(\"H\")"]