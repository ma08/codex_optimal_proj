["A=list(map(int,input().split()))\n\nA.sort(reverse=True)\n\nprint((A[0]-A[2]))\n", "lst = input().split()\n\ncosts = []\n\nfor a in [[0, 1], [0, 2], [1, 2]]:\n   costs.append(abs(int(lst[a[0]]) - int(lst[a[1]])))\n\nprint(sum(costs) - max(costs))", "a=list(sorted(map(int,input().split(\" \"))))\nprint(a[2]-a[0])", "a = list(map(int, input().split()))\nlist_int = list(a)\n\nmin_num = min(list_int)\nmax_num = max(list_int)\nmid_num = list_int.pop(1)\n\nminimum_cost = abs(mid_num - min_num) + abs(max_num - mid_num)\nprint(minimum_cost)\n", "a, b, c = map(int, input().split())\n\nres = [abs(a-b), abs(a-c), abs(b-c)]\n\nprint(sum(res)-max(res))  ", "A, B, C = list(map(int, input().split()))\na = abs(A - B) + abs(B - C)\nb = abs(B - C) + abs(C - A)\nc = abs(C - A) + abs(A - B)\nprint((min(a,b,c)))\n", "A = list(map(int, input().split()))\nA.sort()\nprint((A[-1]-A[0]))\n", "A=list(map(int,input().split()))\nA.sort()\nans=0\nfor i in range(2):\n    ans+=A[i+1]-A[i]\nprint(ans)", "a = list(map(int, input().split()))\na.sort()\nprint(abs(a[1]-a[0]) + abs(a[2]-a[1]))", "# -*- coding: utf-8 -*-\n\ndef get_input() -> list:\n    \"\"\"\n    \u6a19\u6e96\u5165\u529b\u3092\u53d6\u5f97\u3059\u308b.\n\n    Returns:\\n\n        list: \u6a19\u6e96\u5165\u529b\n    \"\"\"\n    A = list(map(int, input().split()))\n\n    return A\n\n\ndef main(A: list) -> None:\n    \"\"\"\n    \u30e1\u30a4\u30f3\u51e6\u7406.\n\n    Args:\\n\n        A (list): \u6574\u6570\u5217(1 <= A_i <= 100)\n    \"\"\"\n    # \u6c42\u89e3\u51e6\u7406\n    ans = max(A) - min(A)\n\n    # \u7d50\u679c\u51fa\u529b\n    print(ans)\n\n\ndef __starting_point():\n    # \u6a19\u6e96\u5165\u529b\u3092\u53d6\u5f97\n    A = get_input()\n\n    # \u30e1\u30a4\u30f3\u51e6\u7406\n    main(A)\n\n__starting_point()", "a, b, c = map(int, input().split())\nlist01 = [a, b, c]\nlist02 = sorted(list01)\nprint(list02[2] - list02[1] + list02[1] - list02[0])", "list=input().split(\" \")\nlist_n=[int(s) for s in list]\nprint(int(max(list_n))-int(min(list_n)))", "l = sorted(list(map(int,input().split())))\n\nans=0\nfor i in range(len(l)-1):\n    ans+=l[i+1]-l[i]\n\nprint(ans)\n", "a=list(map(int,input().split()))\na.sort()\nans=0 if len(set(a))==1 else a[2]-a[0]\nprint(ans)  ", "from itertools import permutations\nA = list(map(int,input().split()))\n\nper_ls = list(permutations(A))\n\nans = float(\"inf\")\nfor (a,b,c) in per_ls:\n  tmp = 0 + abs(a - b) + abs(b - c)\n  ans = min(ans, tmp)\n  \nprint(ans)", "li=a,b,c=list(map(int,input().split()))\nlis=sorted(li)\nprint((lis[2]-lis[0]))\n", "a = sorted(list(map(int, input().split())), reverse=True)\nres = 0\nfor i in range(3 - 1):\n    res += a[i] - a[i + 1]\nprint(res)", "l = list(map(int,input().split()))\nl.sort()\n\nprint(((l[2]-l[1])+(l[1]-l[0]))) \n", "l=sorted(map(int,input().split()))\nprint(l[2]-l[0])", "al = list(map(int,input().split()))\ns = []\nfor i in range(3):\n  s.append(abs(al[-i]-al[1-i])+abs(al[1-i]-al[2-i]))\nprint(min(s))", "v=list(map(int,input().split()))\nv.sort()\nprint(v[2]-v[0])", "a, b, c = sorted(map(int, input().split()))\nprint(c-a)", "A = list(map(int, input().split()))\nA.sort()\n\nans = 0\nfor i in range(2):\n    ans += abs(A[i] - A[i+1])\nprint(ans)", "a = [int(x) for x in input().split()]\na1 = abs(a[1] - a[0]) + abs(a[1] - a[2])\na2 = abs(a[2] - a[0]) + abs(a[2] - a[1])\na3 = abs(a[2] - a[0]) + abs(a[1] - a[0])\nprint(min(a1,a2,a3))", "L = list(map(int, input().split()))\nL.sort()\na = 0\nfor i in range(len(L)-1):\n  a = L[i+1] - L[i] + a\nprint(a)", "a = list(map(int, input().split()))\nc = max(a) - min(a)\nprint(c)", "a,b,c=sorted(map(int, input().split()))\nprint(c-a)", "A = sorted(map(int,input().split()))\nprint(abs(A[0]-A[2]))", "a=list(map(int,input().split()))\nprint(max(a)-min(a))", "A=list(map(int,input().split()))\nA.sort()\nprint((A[2]-A[0]))\n", "a = list(map(int, input().split()))\na.sort()\nprint(a[-1] - a[0])", "a, b, c = map(int, input().split())\n\nmin_n = min(a, b, c)\nmax_n = max(a, b, c)\n\ncost_min = (max_n - min_n)\nprint(cost_min)", "A = list(map(int, input().split()))\nprint((max(A) - min(A)))\n", "a = list(map(int, input().split()))\nans = 0\na.sort()\nfor i in range(len(a)-1):\n  ans += a[i+1] - a[i]\nprint(ans)", "a = list(map(int,input().split()))\n\na.sort()\n\nprint(((a[2] - a[1]) + (a[1] - a[0]))) \n", "X=list(map(int,input().split()))\nprint(max(X)-min(X))", "A = list(map(int, input().split()))\nA.sort()\n\nprint(A[-1]-A[0])", "A = list(map(int, input().split()))\nprint(max(A) - min(A))", "A123 = list(map(int, input().split()))\nans = 1000\n\nfor i, a in enumerate(A123):\n    for j, b in enumerate(A123):\n        for k, c in enumerate(A123):\n            if i != j and j != k and k != i:\n                tmp = abs(b - a) + abs(c - b)\n                if tmp < ans:\n                    ans = tmp\n\nprint(ans)", "import sys\nimport math\n\n#https://atcoder.jp/contests/agc008/submissions/15248942\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninm = lambda: map(int, sys.stdin.readline().split())\ninl = lambda: list(inm())\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print(\"\\033[33m\", *a, \"\\033[0m\", **dict(file=sys.stderr, **kw))\n\ntasks = inl()\ntasks.sort()\nans = 0\nfor i in range(len(tasks)-1):\n    ans += tasks[i+1] - tasks[i]\n\nprint(ans)", "c=list(map(int,input().split()))\nd=sorted(c)\na=0\na+=d[1]-d[0]\na+=d[2]-d[1]\nprint(a)", "# -*- coding: utf-8 -*-\nimport sys\nimport itertools\n\n# \u6a19\u6e96\u5165\u529b\u3092\u53d6\u5f97\nA = list(map(int, input().split()))\n\n# \u6c42\u89e3\u51e6\u7406\nans = sys.maxsize\nfor A_1, A_2, A_3 in itertools.permutations(A, r=3):\n    ans = min(ans, abs(A_2 - A_1) + abs(A_3 - A_2))\n\n# \u7d50\u679c\u51fa\u529b\nprint(ans)\n", "a = list(map(int, input().split()))\nx = abs(a[0]-a[1])\ny = abs(a[1]-a[2])\nz = abs(a[2]-a[0])\nm = max(x, y, z)\nif m == x:\n  print(y+z)\nelif m == y:\n  print(x+z)\nelse:\n  print(x+y)", "*a, = map(int,input().split())\nprint(max(a) - min(a))", "tasks = list(map(int, input().split()))\n\nmax = tasks[0]\nfor i in range(1, 3, 1):\n    if max < tasks[i]:\n        max = tasks[i]\ntasks.remove(max)\n\nmin = tasks[0]\nif tasks[1] < min:\n    min = tasks[1]\ntasks.remove(min)\n\nans = max - min\nprint(ans)", "A = list(map(int, input().split()))\nA.sort(reverse=True)\ncur = A.pop(0)\nans = 0\nfor a in A:\n    ans += (cur - a)\n    cur = a\n\nprint(ans)", "a = list(map(int, input().split()))\na.sort()\nprint(abs(a[1]-a[0]) + abs(a[2]-a[1]))", "# -*- coding: utf-8 -*-\n# \u6a19\u6e96\u5165\u529b\u3092\u53d6\u5f97\nA = list(map(int, input().split()))\n\n# \u6c42\u89e3\u51e6\u7406\nans = max(A) - min(A)\n\n# \u7d50\u679c\u51fa\u529b\nprint(ans)\n", "import itertools\na = list(map(int, input().split()))\nres = sum(a)\nfor i in itertools.permutations(a):\n    a1, a2, a3 = i\n    tmp = abs(a1 - a2) + abs(a2 - a3)\n    res = min(res, tmp)\nprint(res)", "A1, A2, A3 = map(int, input().split())\nans = max(A1, A2, A3) - min(A1, A2, A3)\n\nprint(ans)", "\nS=list(map(int,input().split()))\nS.sort()\nsum=0\nsum += (S[2]-S[0])\nprint(sum)", "A = list(map(int, input().split()))\nA.sort()\nans =A[1]-A[0] +A[2]-A[1]\nprint(ans)", "A = list(map(int, input().split()))\n\nprint(max(A)-min(A))", "import numpy as np\nN_List = np.array(list(map(int,input().split())))\nN_List_a = np.sort(N_List)\nprint(sum(N_List_a[1:]-N_List_a[:-1]))", "a = list(map(int, input().split()))\nlist_int = list(a)\n\nlist_int.sort()\nmin_num = min(list_int)\nmax_num = max(list_int)\nmid_num = list_int.pop(1)\n\nminimum_cost = abs(mid_num - min_num) + abs(max_num - mid_num)\nprint(minimum_cost)\n", "import math\na=list(map(int, input().split()))\nq=[]\nfor i in range(3):\n  for j in range(3):\n    if not i==j:\n      q.append(abs(a[i]-a[j])+abs(a[j]-a[3-(i+j)]))\nprint(min(q))", "A = list(map(int, input().split()))\nprint(max(A) - min(A))", "A = list(map(int, input().split()))\nline = [[0, 1, 2], [0, 2, 1], [1, 0, 2], \n        [1, 2, 0], [2, 0, 1], [2, 1, 0]]\nans = sum(A)\n\nfor i in range(len(line)):\n  tmp = 0\n  for j in range(1,3):\n    tmp += abs(A[line[i][j]] - A[line[i][j-1]])\n  ans = min(ans, tmp)\nprint(ans)\n", "a = [int(x) for x in input().split()]\nprint(max(a) - min(a))", "a,b,c=sorted(map(int,input().split()))\nprint(c-a)", "a = list(map(int, input().split()))\na.sort()\n\nans = 0\nfor i in range(1, len(a)):\n    ans += a[i] - a[i - 1]\n\nprint(ans)\n", "alist=list(map(int, input().split()))\nprint(max(alist)-min(alist))", "s = list(map(int, input().split()))\n\nprint(max(s) - min(s))", "a = list(map(int,input().split()))\nprint(max(a)-min(a))", "l=list(map(int,input().split()))\nl.sort()\nprint(abs(l[1]-l[0])+abs(l[2]-l[1]))", "#!/usr/bin/env python3\n\ndef main():\n    *a, = list(map(int, input().split()))\n    print((max(a) - min(a)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "a = map(int, input().split())\na = sorted(a)\nprint(a[2] - a[0])", "a,b,c = map(int,input().split())\nprint(max(a,b,c)-min(a,b,c))", "a, b, c = map(int, input().split())\ni = abs(a - b)\nj = abs(a - c)\nk = abs(b - c)\nlst = sorted([i, j, k])\nprint(lst[0] + lst[1])", "a = list(map(int, input().split()))\na.sort()\nprint(a[2] - a[0])", "A = list(map(int, input().split()))\n\nA.sort(reverse=True)\nprint(((A[0]-A[1]) + (A[1]-A[2])))\n", "A = list(map(int,input().rstrip().split()))\nprint(max(*A)-min(*A))", "import bisect, collections, copy, heapq, itertools, math, string, sys\ninput = lambda: sys.stdin.readline().rstrip() \nsys.setrecursionlimit(10**7)\nINF = float('inf')\ndef I(): return int(input())\ndef F(): return float(input())\ndef SS(): return input()\ndef LI(): return [int(x) for x in input().split()]\ndef LI_(): return [int(x)-1 for x in input().split()]\ndef LF(): return [float(x) for x in input().split()]\ndef LSS(): return input().split()\n\ndef resolve():\n    A = LI()\n\n    print((max(A) - min(A)))\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "a1, a2, a3 = list(map(int, input().split()))\n\nd1 = abs(a2 - a1)\nd2 = abs(a3 - a2)\nd3 = abs(a1 - a3)\n\nprint(min(d1 + d2, d2 + d3, d3 + d1))", "a = list(map(int, input().split()))\na.sort()\n\nans = 0\nfor i in range(1, len(a)):\n    ans += a[i] - a[i - 1]\n\nprint(ans)\n", "s = list(map(int,input().split()))\ns.sort()\nprint(s[2]-s[0])", "a = list(map(int,input().split()))\nprint(max(a)-min(a))", "a = list(map(int, input().split()))\nc = max(a[0], a[1], a[2]) - min(a[0], a[1], a[2])\nprint(c)", "a,b,c = map(int,input().split())\nprint(max(a,b,c)-min(a,b,c))", "li = list(map(int,input().split()))\n\nli.sort()\n\nn = (li[1] - li[0])+(li[2] - li[1])\nprint(n)\n", "import itertools\n\na_lst = list(map(int, input().split()))\n\nchoice_lst = list(itertools.permutations(a_lst, 3))\n\ncost_lst = []\nfor i in range(len(choice_lst)):\n    cost = 0\n    for j in range(3):\n        tmp_cost = choice_lst[i][j]\n        if j == 0:\n            continue\n        else:\n            cost += abs(choice_lst[i][j] - choice_lst[i][j - 1])\n    cost_lst.append(cost)\n\nminimum = min(cost_lst)\nprint(minimum)", "def mapt(fn, *args):\n    return list(map(fn, *args))\n\n\ndef Input():\n    return mapt(int, input().split(\" \"))\n\n\ndef main():\n    a, b, c = Input()\n    x, y, _ = sorted([abs(a-b), abs(b-c), abs(a-c)])\n    print(x + y)\n\n\nmain()", "a,b,c = list(map(int,input().split()))\nd = abs(a-b)\ne = abs(b-c)\nf = abs(c-a)\nprint((min(d+e,e+f,f+d)))\n\n", "import sys\n\nA = list(map(int, input().split()))\n\nA.sort()\nA.reverse()\nans = abs(A[1]-A[0])+abs(A[2]-A[1])\n\nprint(ans)", "A = list(map(int, input().split()))\nA = sorted(A)\nret = 0\nfor i in range(len(A) - 1):\n  ret += abs(A[i] - A[i+1])\n\nprint(ret)", "a = list(map(int, input().split()))\nx = max(a) - min(a)\nprint(x)", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\nfrom collections import deque\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\n\nDR = [1, -1, 0, 0]\nDC = [0, 0, 1, -1]\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n     \ndef main():\n    A = LI()\n    A = sorted(A)\n    ans = 0\n    ans += A[1] - A[0] + A[2] - A[1]\n    print(ans)\n\nmain()\n\n", "a,b,c=input().split()\na=int(a)\nb=int(b)\nc=int(c)\nls=[a,b,c]\nls.sort()\nprint(ls[2]-ls[0])", "b = sorted(map(int,input().split()))\nprint((abs(b[1]-b[0])+abs(b[2]-b[1])))\n", "a,b,c=map(int, input().split())\n#1ban\nans=abs(b-a)+abs(c-b)\nans2=abs(c-a)+abs(b-c)\nif(ans2<ans):\n    ans=ans2\n#2ban\nans2=abs(a-b)+abs(c-a)\nif(ans2<ans):\n    ans=ans2\nans2=abs(c-b)+abs(a-c)\nif(ans2<ans):\n    ans=ans2\n#3ban\nans2=abs(a-c)+abs(b-a)\nif(ans2<ans):\n    ans=ans2\nans2=abs(b-c)+abs(a-b)\nif(ans2<ans):\n    ans=ans2\nprint(ans)", "A1, A2, A3 = map(int, input().split())\na = []\na.append(abs(A2 - A1) + abs(A3 - A2))\na.append(abs(A2 - A3) + abs(A1 - A2))\na.append(abs(A1 - A2) + abs(A3 - A1))\na.append(abs(A1 - A3) + abs(A2 - A1))\na.append(abs(A3 - A1) + abs(A2 - A3))\na.append(abs(A3 - A2) + abs(A1 - A3))\nprint(min(a))", "\nL = list(map(int,input().split()))\n\n\nprint((max(L)-min(L)))\n\n", "a = list(map(int,input().split()))\nsort_a = sorted(a)\nans = 0\nfor i in range(len(sort_a)-1):\n    ans += abs(sort_a[i]-sort_a[i+1])\nprint(ans)\n", "a=[int(x) for x in input().split()]\nprint((max(a)-min(a)))\n", "#ABC103A\na = sorted(list(map(int,input().split())))\nprint((a[1]-a[0]) + (a[2]-a[1]))", "a,b,c = map(int,input().split())\nprint(max(a,b,c)-min(a,b,c))", "s = list(map(int, input().split()))\n\nprint((max(s) - min(s)))\n", "a=[int(i) for i in input().split()]\n\na_list=[]\n\nfor i in range(3):\n    for j in range(3):\n        for k in range(3):\n            if i!=j and j!=k and k!=i:\n                a_list.append(abs(a[i]-a[j])+abs(a[k]-a[i]))\n                \nprint(min(a_list))", "a,b,c = sorted(map(int, input().split()))\n\nprint(abs(a-b) + abs(b-c))"]