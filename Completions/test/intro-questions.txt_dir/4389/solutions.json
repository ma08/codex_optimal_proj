["import sys\nimport random\nfrom math import *\n \ndef input():\n    return sys.stdin.readline().strip()\n \ndef iinput():\n    return int(input())\n\ndef finput():\n    return float(input())\n\ndef tinput():\n    return input().split()\n\ndef linput():\n    return list(input())\n \ndef rinput():\n    return map(int, tinput())\n\ndef fiinput():\n    return map(float, tinput())\n \ndef rlinput():\n    return list(map(int, input().split()))\ndef trinput():\n    return tuple(rinput())\n\ndef srlinput():\n    return sorted(list(map(int, input().split())))\n\ndef YESNO(fl):\n    if fl:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n    \n    \ndef main():   \n    #n = iinput() \n    #k = iinput() \n    #m = iinput() \n    #n = int(sys.stdin.readline().strip()) \n    #n, k = rinput()\n    #n, m = rinput()\n    #m, k = rinput()\n    #n, k, m = rinput()\n    #n, m, k = rinput()\n    #k, n, m = rinput()\n    #k, m, n = rinput() \n    #m, k, n = rinput()\n    #m, n, k = rinput()\n    #q = srlinput()\n    #q = rlinput()\n    s = input()\n    print(s[:2] + s[3::2])\n\n    \n    \n            \n            \n    \n    \n    \n    \nfor inytd in range(iinput()):\n    main()", "tests = int(input())\nfor _ in range(tests):\n    n = input()\n    for i in range(len(n) // 2):\n        print(n[2 * i], end = '')\n    print(n[-1])\n", "from collections import Counter, defaultdict\n\nBS=\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\ndef to_base(s, b):\n    res = \"\"\n    while s:\n        res+=BS[s%b]\n        s//= b\n    return res[::-1] or \"0\"\nalpha = \"abcdefghijklmnopqrstuvwxyz\"\nfrom math import floor, ceil,pi\n\nt = int(input())\nfor i in range(t):\n    s = list(input())\n    ans = s[0]\n    for i in range(1, len(s), 2):\n        ans += s[i]\n    print(ans)", "from sys import stdin, stdout, setrecursionlimit\nfor _ in range(int(input())):\n    s = input()\n    ans = s[0]\n    for i in range(1, len(s), 2):\n        ans += s[i]\n    print(ans)\n\n\n", "for i in range(int(input())):\n    s=input()\n    print(s[0]+s[1:-1:2]+s[-1])", "import sys\nINF = 10**20\nMOD = 10**9 + 7\nI = lambda:list(map(int,input().split()))\nfrom math import gcd\nfrom math import ceil\nfrom collections import defaultdict as dd, Counter\nfrom bisect import bisect_left as bl, bisect_right as br\n\ndef solve():\n  s = input()\n  print(s[::2] + s[-1])\n\nt, = I()\nwhile t:\n  t -= 1\n  solve()", "for t in range(int(input())):\n    s = input()\n    print(''.join([s[i] for i in range(len(s)) if i%2==0]+[s[-1]]))", "T = int(input())\n\nfor t in range(T):\n    a = input()\n    b = a[0]\n    for i in range(1, len(a)-1, 2):\n        b += a[i]\n    b += a[-1]\n    print(b)\n", "import sys\nimport math\ndef II():\n\treturn int(sys.stdin.readline())\n\ndef LI():\n\treturn list(map(int, sys.stdin.readline().split()))\n\ndef MI():\n\treturn map(int, sys.stdin.readline().split())\n\ndef SI():\n\treturn sys.stdin.readline().strip()\nt = II()\nfor q in range(t):\n\ts = SI()\n\tans = \"\"\n\tfor i in range(0,len(s),2):\n\t\tans+=s[i]\n\tprint(ans+s[-1])", "for nt in range(int(input())):\n\ts = input()\n\tans = s[0]\n\tfor i in range(1,len(s),2):\n\t\tans+=s[i]\n\tprint (ans)", "t=int(input())\ncount=0\nwhile count<t:\n    count+=1\n    s=input()\n    ans=''\n    i=0\n    while i<len(s):\n        ans+=s[i]\n        i+=2\n    print(ans+s[-1])\n", "t = int(input())\nfor gsdagsa in range(t):\n\ts = list(input())\n\tr = ''\n\tfor i in range(len(s)-1):\n\t\tif i % 2 == 0:\n\t\t\tr += s[i]\n\tr += s[-1]\n\tprint(r)", "from sys import stdin\n\ninput = stdin.readline\n\n\ndef main():\n    test = int(input())\n\n    for _ in range(test):\n        # n = int(input())\n        # l = [int(i) for i in input().split(\" \")]\n        # n,k = [int(i) for i in input().split(\" \")]\n        # a,b,c,d = [int(i) for i in input().split(\" \")]\n        #\n        # l = []\n        # l = [int(i) for i in input().split(\" \")]\n        #\n        # for i in l:\n        #     print(i, end=' ')\n        # print()\n\n        s = input().strip()\n\n        ns = s[0]\n\n        for i in range(1, len(s)-1, 2):\n            ns += s[i]\n\n        ns += s[len(s)-1]\n        print(ns)\n\n\nmain()\n", "for _ in range(int(input())):\n    a=input()\n    ans=''\n    ans+=a[0]+a[1]\n    for i in range(3,len(a),2):\n        ans+=a[i]\n    print(ans)", "for __ in range(int(input())):\n    a = input()\n    ans = a[0]\n    for i in range(1, len(a), 2):\n        ans += a[i]\n    print(ans)", "t = int(input())\nfor i in range(t):\n    a = list(input())\n    b = \"\"\n    for i in range(1,len(a),2):\n        b = b + a[i]\n    b = a[0] + b\n    print(b)", "T = int(input())\nfor _ in range(T):\n    s = input()\n    print(s[::2]+s[-1])\n", "\"\"\"\nAuthor: Q.E.D\nTime: 2020-06-16 09:36:16\n\"\"\"\nT = int(input())\nfor _ in range(T):\n    b = input()\n    a = b[0] + b[1:-1:2] + b[-1]\n    print(a)", "t=int(input())\nfor i in range(t):\n    a=input()\n    s=a[0]+a[1:len(a)-1:2]+a[-1]\n    print(s)", "# @author \n\nimport sys\n\nclass AShortSubstrings:\n    def solve(self, tc=0):\n        for _ in range(int(input())):\n            b = input().strip()\n            print(''.join(b[i] for i in range(len(b)) if i % 2 == 0) + b[-1])\n\n\nsolver = AShortSubstrings()\ninput = sys.stdin.readline\n\nsolver.solve()\n", "t=int(input())\nfor _ in range(t):\n    s=input()\n    ans=s[0]\n    for i in range(1,len(s),2):\n        ans+=s[i]\n    print(ans)", "\nimport sys\nsys.setrecursionlimit(10000)\n# default is 1000 in python\n\n\nt = int(input())\n# t = 1\n\nfor _ in range(t):\n\tb = input()\n\ta = b[0]\n\tfor i in range(1,len(b)-1,2):\n\t\ta += b[i]\n\ta += b[-1]\n\tprint(a)\n\n\n\n# try:\n\t# raise Exception\n# except:\n\t# print(\"-1\")\n\t\n\n# thenos.sort(key=lambda x: x[2], reverse=True)\n\n# int(math.log(max(numbers)+1,2))\n\n# 2**3 (power)\n\n# a,t = (list(x) for x in zip(*sorted(zip(a, t))))\n\n# to copy lists use .copy()\n\n# pow(p, si, 1000000007) for modular exponentiation\n\n# my_dict.pop('key', None)\n# This will return my_dict[key] if key exists in the dictionary, and None otherwise.\n\n\n\n", "t = int(input())\nfor i in range(t):\n    s = input()\n    res=s[0]\n    for i in range(1,len(s)-1,2):\n        res+=s[i]\n    res+=s[-1]\n    print(res)\n\n", "for _ in range(int(input())):\n    s = input()\n\n    print(s[0] + s[1:-1][::2] + s[-1])\n", "from sys import stdin\nfrom collections import defaultdict as dd\nfrom collections import deque as dq\nfrom collections import Counter\nimport itertools as it\nfrom math import sqrt, log, log2, ceil, floor\nfrom fractions import Fraction\n\nt = int(input())\nfor _ in range(t):\n    s = input()\n    ans = ''\n    for i in range(0, len(s), 2):\n        ans += s[i]\n    ans += s[-1]\n    print(ans)\n# n, m = map(int, input().split())\n# nums = list(map(int, stdin.readline().split()))\n", "import sys\nimport math\nfrom math import factorial as f\nfrom collections import defaultdict as dd\nmod=1000000007\nT=1\nT=int(sys.stdin.readline())\nfor _ in range(T):\n    s=input()\n    ans=''\n    for i in range(0,len(s),2):\n        ans+=s[i]\n    print(ans+s[-1])\n        \n", "from math import *\n\ndef r1(t):\n    return t(input())\n\ndef r2(t):\n    return [t(i) for i in input().split()]\n\ndef r3(t):\n    return [t(i) for i in input()]\n\nfor _ in range(r1(int)):\n    b = input()\n    a = ''\n    for i in range(0, len(b) + 1, 2):\n        a += b[min(i, len(b) - 1)]\n    print(a)\n"]