["S = input()\nK = int(input())\n\nif len(S) == 1:\n    print(S)\nelse:\n    flg = False\n    while S[0] == '1':\n        S = S[1:]\n        K -= 1\n\n        if K == 0:\n            print(1)\n            flg = True\n            break\n    \n    if not flg:\n        if S[0] == '2':\n            if K.bit_length() - 1 >= 5000000000000000:\n                print(S[1])\n            else:\n                print(S[0])\n        else:\n            print(S[0])", "S = list(input())\nK = int(input())\nans = '1'\nfor i in range(K):\n    if S[i] != '1':\n        ans = S[i]\n        break\nprint(ans)", "s = input()\nk = int(input())\n\nans = 1\nfor i in range(min(k,len(s))):\n    if s[i]!='1':\n        ans = int(s[i])\n        break\n            \nprint(ans)", "s = list(map(str, input().rstrip()))\nk = int(input())\n\nans = 1\nfor x in s[:k]:\n    if int(x) != 1:\n        ans = int(x)\n        break\nprint(ans)", "\nS = input()\nK = int(input())\n\ni = 0\nans = 1\nwhile i < K:\n    if S[i] != '1':\n        ans = S[i]\n        break\n    i += 1\nprint(ans)\n", "s=input()\nk=int(input())\nfor i in range(min(k,len(s))):\n    if s[i]!=\"1\":\n        print(s[i])\n        return\nprint(1)", "s=str(input())\nk=int(input())\ncon=0\nfor i in s:\n  if i==\"1\":\n    con+=1\n  else:\n    break\nif con>=k:\n  print(1)\nelse:\n  print(i)", "import sys\n\ns=input()\nk=int(input())\n\n\ns=list(s)\n\nc=0\nfor i in range(len(s)):\n        if s[i]=='1':\n                c+=1\nif c==len(s):\n        print('1')\n        return\n\nd=0\nif len(s)>=k:\n        for i in range(k):\n                if s[i]=='1':\n                        d+=1\nif d==k:\n        print('1')\n        return\n\nfor i in range(len(s)):\n        if s[i]!='1':\n                print(s[i])\n                return", "#from statistics import median\n#import collections\n#aa = collections.Counter(a) # list to list || .most_common(2)\u3067\u6700\u5927\u306e2\u500b\u3068\u308a\u3060\u305b\u308b\u304a a[0][0]\nfrom fractions import gcd\nfrom itertools import combinations,permutations,accumulate, product # (string,3) 3\u56de\n#from collections import deque\nfrom collections import deque,defaultdict,Counter\nimport decimal\nimport re\nimport math\n#import bisect\n#\n#    d = m - k[i] - k[j]\n#    if kk[bisect.bisect_right(kk,d) - 1] == d:\n#\n#\n#\n# python\u3067\u7121\u7406\u306a\u3068\u304d\u306f\u3001pypy\u3067\u3084\u308b\u3068\u6b63\u89e3\u3059\u308b\u304b\u3082\uff01\uff01\n#\n#\n# my_round_int = lambda x:np.round((x*2 + 1)//2)\n# \u56db\u6368\u4e94\u5165g\nimport sys\nsys.setrecursionlimit(10000000)\n#mod = 10**9 + 7\n#mod = 9982443453\nmod = 998244353\ndef readInts():\n  return list(map(int,input().split()))\ndef I():\n  return int(input())\n#from statistics import median\n#import collections\n#aa = collections.Counter(a) # list to list || .most_common(2)\u3067\u6700\u5927\u306e2\u500b\u3068\u308a\u3060\u305b\u308b\u304a a[0][0]\nfrom fractions import gcd\nfrom itertools import combinations,permutations,accumulate, product # (string,3) 3\u56de\n#from collections import deque\nfrom collections import deque,defaultdict,Counter\nimport decimal\nimport re\nimport math\n#import bisect\n#\n#    d = m - k[i] - k[j]\n#    if kk[bisect.bisect_right(kk,d) - 1] == d:\n#\n#\n#\n# python\u3067\u7121\u7406\u306a\u3068\u304d\u306f\u3001pypy\u3067\u3084\u308b\u3068\u6b63\u89e3\u3059\u308b\u304b\u3082\uff01\uff01\n#\n#\n# my_round_int = lambda x:np.round((x*2 + 1)//2)\n# \u56db\u6368\u4e94\u5165g\nimport sys\nsys.setrecursionlimit(10000000)\nmod = 10**9 + 7\n#mod = 9982443453\n#mod = 998244353\ndef readInts():\n  return list(map(int,input().split()))\ndef I():\n  return int(input())\ns = input()\nk = I()\nwhere = 0\nwhile where < len(s):\n    if s[where] == '1':\n        where += 1\n    else:\n        break\nprint(('1' if k <= where else s[where]))\n", "S=input()\na=int(input())\nList=list(S)\nres = 1\nfor i in range(a):\n  if List[i] != \"1\":\n    res = List[i]\n    break\nprint(res)", "# coding = SJIS\n\ns = str(input())\nk = int(input())\n\nans = 1\n\nfor i in range(k):\n    if s[i] != \"1\":\n        print(s[i])\n        return\n\nprint(ans)", "S = input()\nK = int(input())\n\n\nfor i in range(K):\n    if S[i] != \"1\":\n        print(S[i])\n        break\n    if i == K-1:\n        print(S[K-1])", "S = input()\nK = int(input())\n\nones = 0\ninf = None\nfor c in S:\n    if c=='1':\n        ones += 1\n    else:\n        inf = c\n        break\n\nif K <= ones:\n    print('1')\nelse:\n    print(inf)", "S = input()\nK = int(input())\ndef main():\n    cnt = 1\n    for i in S:\n        if i == '1':\n            if K == cnt:\n                return '1'\n            else:\n                cnt += 1\n                continue\n        else:\n            return i\n        return '1'\nprint(int(main()))", "S = input()\nK = int(input())\n\nfor i in range(K):\n    if S[i] != '1':\n        print((S[i]))\n        return\n    \n    if i == K - 1:\n        print('1')\n        return\n\n\n", "s = input()\nk = int(input())\n\nans = 1\nfor i in range(k):\n    if s[i] != '1':\n        ans = s[i]\n        break\nprint(ans)", "txt = input()\nn = int(input())\nfor i in range(n):\n  if txt[i] != '1':\n    print(txt[i])\n    break\nelse:\n  print(\"1\")", "def main():\n    S = list(input())\n    K = int(input())\n    for i in range(min(K, len(S))):\n        if S[i] != '1':\n            print((S[i]))\n            return\n    print('1')\n    return\n\ndef __starting_point():\n    main()\n\n__starting_point()", "s = input()\nk = int(input())\n\nfor i in range(len(s)):\n    n = int(s[i])\n    if i+1==k:\n        print(n)\n        break\n    elif n!=1:\n        print(n)\n        break ", "s=input()\nk =int(input())\nfor i in range(k):\n    if s[i] != '1':\n        ans = s[i]\n        break\n    elif i < k-1:\n        ans = s[i+1]\n    else:\n        ans = s[i]\n        \nprint(ans)", "# author:  Taichicchi\n# created: 11.10.2020 20:40:13\n\nimport sys\n\nS = input()\n\nK = int(input())\n\nfor i in range(K):\n    if S[i] != \"1\":\n        ans = S[i]\n        break\nelse:\n    ans = \"1\"\n\nprint(ans)\n", "s = input()\ns = str(s)\nk = int(input())\nn = len(s)\nfor i in range(n):\n    if s[i]!=\"1\":\n        break\n\nif k <= i:\n    print((1))\nelse:\n    print((s[i]))\n\n", "s = str(input())\nk = int(input())\nif s[:k].count('1') == len(s[:k]):\n    print(1)\nelse:\n    for i in s:\n        if i != '1':\n            print(i)\n            break", "S = str(input())\nK = int(input())\nfor i in range(K):\n    if S[i] != \"1\":\n        break\nelse:\n    while S[i] != \"1\":\n        i += 1\n        \nprint(S[i])", "s = input()\nk = input()\n \nfor i in range(len(s)) :\n    if s[i] != '1' :\n        if int(k) <= i :\n            print('1')\n            break\n        else :\n            print(s[i])\n            break\n    else :\n        if i == len(s) - 1 :\n            print('1')", "s = list(input())\nk = int(input())\nnum_list = [int(i) for i in s]\nans = 1\nfor i in range(k):\n    if num_list[i] != 1:\n        ans = num_list[i]\n        break\nprint(ans)", "def main():\n    s = input()\n    k = int(input())\n    ans = 0\n    tyou = 500000000000000\n    for v in s:\n        if v == '1':\n            ans += 1\n        else:\n            ans += tyou ** int(v)\n        if ans >= k:\n            print(v)\n            return\n\n\ndef __starting_point():\n    main()\n__starting_point()", "S=input()\nK=int(input())\nS=list(S)\n\nfor j in range(len(S)):\n    if S[j]=='1':\n        if j==K-1:\n            ans=1\n            break\n    else:\n        x=[i for i in S if i!='1']\n        ans=x[0]\n        break\n\nprint(ans)\n", "s=input()\nk=int(input())\nans=1\nfor i in range(k):\n  if s[i]!='1':\n    ans=int(s[i])\n    print(ans)\n    return\nprint(1)", "s=list(input())\n\nk=int(input())\n\ncnt=0\nans=0\nfor i in s:\n  if int(i)==1:\n    cnt+=1\n    continue\n    \n  else:\n    ans+=int(i)\n    break\n    \nif k<=cnt:\n  print((1))\n  \nelse:\n  print(ans)\n", "S = list(input())\nK = int(input())\n\nref = 0\nfor i in range(len(S)):\n    if S[i] == \"1\":\n        ref += 1\n    else:\n        break\n\nans = \"\"\nif ref == 0:\n    ans = S[0]\nelse:\n    if ref >= K:\n        ans = \"1\"\n    else:\n        ans = S[ref]\n\nprint(ans)", "s = list(input())\nk = int(input())\nnum_list = [int(i) for i in s]\nans = 1\nfor i in range(k):\n    if num_list[i] != 1:\n        ans = num_list[i]\n        break\nprint(ans)", "s = str(input())\nk = int(input())\nlen_s = len(s)\ncnt_1 = 0\nfor i in range(len_s):\n    if s[i] == '1':\n        cnt_1 += 1\n    else:\n        moji = s[i]\n        break\nif cnt_1 >= k:\n    print(1)\nelse:\n    print(s[i])", "S = list(map(int, input()))\nK = int(input())\n\nres = []\nfor c in S:\n    res.append(c)\n    if c != 1:\n        break\nprint((res[min(len(res) - 1, K - 1)]))\n", "s=input()\nk=int(input())\nans=1\nif len(s)==1:\n  ans=s\nelse:\n  for i in range(k):\n    if s[i]!='1':\n      ans=s[i]\n      break\nprint(ans)", "S = str(input())\nN = int(input())\nOnes = 0\nnxt = \"\"\nfor i in range(len(S)):\n  if S[i] == \"1\":\n    Ones += 1\n  else:\n    nxt = S[i]\n    break\nif N <= Ones:\n  print((1))\nelse:\n  print(nxt)\n", "s=input()\nk = int(input())\ncnt = 0\nfor i in s:\n    if i == '1':\n        cnt +=1\n    else:\n        x = i\n        break\nif cnt >= k:\n    print(1)\nelse:\n    print(x)", "S = input()\nK = int(input())\nfor i in range(K):\n    if S[i] != \"1\":\n        print(S[i])\n        return\nprint(1)", "S = input()\nK = int(input())\n\nl = 0\nfor i in range(len(S)):\n    if S[i] == '1':\n        l += 1\n    if l >= K:\n        print((S[i]))\n        return\n    if S[i] != '1':\n        print((S[i]))\n        return\n", "S=input()\nK=int(input())\n\nfor i in range(len(S)):\n    if S[i]==\"1\":\n        pass\n    else:\n        break\n\nif K<i+1:\n    print((1))\nelse:\n    print((S[i]))\n", "s = str(input())\nss = [int(i) for i in s]\nk = int(input())\nif sum(ss) == len(s):\n  print(\"1\")\n  return\ncount = 0\nwhile s[count] == \"1\":\n  if k == count + 1:\n    print(\"1\")\n    return\n  count += 1\nprint(s[count])", "S = input()\nK = int(input())\n\n# 5 * 10^15\ncnt = 0\n\nfor i in range(len(S)):\n    if int(S[i]) == 1:\n        cnt += 1\n    else:\n        if cnt >= K:\n            print(1)\n        else:\n            print(int(S[i]))\n        return\n\nprint(1)", "S = input()\nK = int(input())\n\ni = 0\nwhile i<len(S) and S[i]=='1':\n    i += 1\n\nif i >= K:\n    print(1)\nelse:\n    print(S[i])", "s = input()\nk = int(input())\n\nif k == 1:\n    print(int(s[0]))\nelif s[0] == \"1\":\n    cnt = 0\n    while  cnt < len(s) and s[cnt] == \"1\" :\n        cnt += 1\n    if cnt >= k:\n        print(1)\n    elif cnt == len(s):\n        print(\"1\")\n    else:\n        print(s[cnt])\nelse:\n    print(int(s[0]))", "S = input()\nK = int(input())\none = 0\n\nfor s in S:\n  if s==\"1\":\n    one+=1\n  else:\n    ans = s\n    break\n\nif K<=one:\n  print(1)\nelse:\n  print(ans)", "S = [int(i) for i in input()]\nK = int(input())\n\nif sum(S)==len(S):\n    print(1)\nelse:\n    for i in range(len(S)):\n        if S[i]!=1:\n            print(S[i])\n            break\n        elif S[i]==1 and K-1<=i:\n            print(1)\n            break", "import sys, math\nlines = [s.rstrip(\"\\n\") for s in sys.stdin.readlines()]\ns = lines.pop(0)\nk, = [int(num) for num in lines.pop(0).split(\" \")]\ndays = 5000 * (10 ** 12)\nfor n in s:\n    log_k = math.log10(k)\n    n = int(n)\n    log_n_days = math.log10(n) * days\n    if log_k > log_n_days:\n        k -= n ** days\n    else:\n        break\nprint(n)\n", "S = input()\nK = int(input())\n\ncnt_one = 0\nfor i in S:\n    if i == '1':\n        cnt_one += 1\n    else:\n        break\n\nif cnt_one >= K:\n    print(1)\nelse:\n    print(S[cnt_one+1-1])", "S = input()\nK = int(input())\nOK = True\nfor i in range(min(K, len(S))):\n    if S[i] != '1':\n        OK = False\nif OK:\n    print('1')\n    return\nfor i in range(len(S)):\n    if S[i] != '1':\n        print((S[i]))\n        return\n", "S=input()\nK=int(input())\nfor i in range(K):\n\tif S[i]!='1':\n\t\tprint(S[i])\n\t\treturn\nprint(1)", "# ABC-106-C\nS = input().rstrip()\nK = int(input())\n\n\nfor s in S[:K]:\n    if s != '1':\n        print(s)\n        return\nprint(1)", "s = input()\nk = int(input())\n\nif k == 1: print(s[0])\nelse:\n  for i in range(len(s)):\n    if s[i] != \"1\":\n      print(s[i])\n      break\n    elif i+1 == k:\n      print(s[i])\n      break", "s = list(map(int,input()))\nk = int(input())\n\nfor i in range(k):\n    if s[i] != 1:\n        ans = s[i]\n        break\n    else:\n        ans = 1\nprint(ans)", "S = input()\nK = int(input())\n\nidx = min(K, len(S))\nfor s in S[:idx]:\n    if s != \"1\": \n      print(s)\n      break\nelse:\n  print(1)", "#-*-coding:utf-8-*-\nimport sys\ninput=sys.stdin.readline\n\ndef main():\n    S = input().rstrip()\n    k = int(input())\n    \n    for i in range(k):\n        if S[i]!=\"1\":\n            break\n    print(S[i])\n\ndef __starting_point():\n    main()\n__starting_point()", "s = list(input())\ns = list(map(int,s))\nk = int(input())\nfor _ in s[:k]:\n    if _ != 1:\n        print(_)\n        return\nprint(1)", "S = list(input())\nK = int(input())\nans = 1\n\nfor i in range(K):\n    if S[i] != '1' :\n        ans = S[i]\n        break\nprint(ans)", "a=input()\nb=int(input())\nc=1\nif a[0]!=\"1\":\n  print(a[0])\nif a[0]==\"1\":\n  for i in range(len(a)-1):\n    if a[i]==\"1\" and a[i+1]==\"1\":\n      c=c+1\n    else:\n      break\n  if c>=b:\n    print(1)\n  else:\n    print(a[c])", "# coding: utf-8\n\n\ndef main():\n    S = input()\n    K = int(input())\n    ans = '1'\n    tmp = -1\n    for i, s in enumerate(S):\n        if s != '1':\n            ans = s\n            break\n        else:\n            tmp = i\n\n    if K - 1 <= tmp:\n        ans = '1'\n\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = list(input())\nN = [int(N[i]) for i in range(len(N))]\nK = int(input())\nif len(N) < K:\n  for i in range(len(N)):\n    if not N[i] == 1:\n      print((N[i]))\n      break\n  else:\n    print((1))\nelse:\n  for i in range(K):\n    if not N[i] == 1:\n      print((N[i]))\n      break\n  else:\n    print((1))\n", "S = input()\nK = int(input())\n\nans = 1\nfor i in range(len(S)):\n    if int(S[i]) > 1 and i < K:\n        ans = int(S[i])\n        break\n        \nprint(ans)", "s = input()\nk = int(input())\n\ns1=0\nsn1='0'\nfor i in range(len(s)):\n    if(s[i] == '1'):\n        s1+=1\n    else:\n        sn1=s[i]\n        break\nans='0'\nif(s1>=k):\n    ans='1'\nelse:\n    ans=sn1\n\nprint(ans)", "S = input()\nN = len(S)\nK = int(input())\n\nif S[:min(N,K)] == \"1\" * min(N,K):\n    ans = 1\nelse:\n  for i in range(N):\n    if S[i] != \"1\":\n      ans = S[i]\n      break\n      \nprint(ans)", "from collections import defaultdict,deque\nimport sys,heapq,bisect,math,itertools,string,queue,datetime\nsys.setrecursionlimit(10**8)\nINF = float('inf')\nmod = 10**9+7\neps = 10**-7\ndef inpl(): return list(map(int, input().split()))\ndef inpl_s(): return list(input().split())\n\nS = input()\nK = int(input())\n\nfor i in range(K):\n\tif S[i] == '1':\n\t\tcontinue\n\telse:\n\t\tprint((S[i]))\n\t\treturn\n\nprint((S[K-1]))\n", "S=input()\nK=int(input())\none=0\nfor i in range(len(S)):\n    if S[i]=='1':\n        one+=1\n    else:\n        break\nif K<=one:\n    print('1')\nelse:\n    print((S[one]))\n", "N = input()\nK = int(input())\nans = '1'\nfor i in range(K):\n  if i >= len(N):\n    break\n  if N[i] != '1':\n    ans = N[i]\n    break\nprint(ans)", "s = input()\nk = int(input())\nn = 5000 * 10**12\n\nfor i, c in enumerate(s):\n    if c != '1':\n        print(c)\n        break\n    if i + 1 == k:\n        print((1))\n        break\n", "s=input()\nk=int(input())\nd=5*10**15\nfor i in s:\n  if i=='1':\n    k-=1\n  else:\n    print(i)\n    return\n  if k<=0:\n    print(1)\n    return", "import sys\nimport math\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n\ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n\ndef mod_pow(x,n):\n    res = 1\n    while n > 0:\n        if n & 1:\n            res = res * x\n            x = x * x\n            n >>= 1\n    return res\n\n\ndef main():\n    S = input().rstrip()\n    K = I()\n    for i in range(len(S)):\n        if int(S[i]) >= 2 or K == 1:\n            print(S[i])\n            break\n        else:\n            K -= 1\n            \n        \n    \n    \ndef __starting_point():\n    main()\n__starting_point()", "s = input()\nk = int(input())\none_cnt = 0\n\nfor i in range(len(s)):\n  if s[i] == '1':\n    one_cnt += 1\n  else:\n    break\n\nif k <= one_cnt:\n  print(1)\n  return\n\nfor i in range(len(s)):\n  if s[i] != '1':\n    print(s[i])\n    return", "S = input()\nK = int(input())\n\nfor i in range(K):\n    if int(S[i])>1:\n        print(S[i])\n        return\n\nprint(1)", "# \u89e3\u8aac\u3092\u53c2\u8003\u306b\u4f5c\u6210\n# import sys\n# sys.setrecursionlimit(10 ** 6)\n# import bisect\n# from collections import deque\n# from decorator import stop_watch\n#\n#\n# @stop_watch\ndef solve(S, K):\n    ans = ''\n    for i in range(len(S)):\n        if i + 1 == K:\n            ans = S[i]\n            break\n        if S[i] != '1':\n            ans = S[i]\n            break\n    print(ans)\n\n\ndef __starting_point():\n    S = input()\n    K = int(input())\n    # N, M = map(int, input().split())\n    # A = [int(i) for i in input().split()]\n    # B = [int(i) for i in input().split()]\n    # AB = [[int(i) for i in input().split()] for _ in range(N)]\n    solve(S, K)\n\n    # # test\n    # from random import randint\n    # from func import random_str\n    # solve()\n\n__starting_point()", "S = input()\nK = int(input())\nfor i in range(K):\n  if S[i] !='1':\n    break\nprint(S[i])", "n=input()\nk=int(input())\n\nfor i in range(len(n)):\n    if n[i]==\"1\" :\n        k-=1\n        if k==0 :\n            print((1))\n            break\n    else :\n        print((n[i]))\n        break\n", "s = input()\nk = int(input())\ncnt = 0\nfor j in range(len(s)):\n\tcnt += 1\n\tif s[j] == \"1\":\n\t\tif cnt == k:\n\t\t\tprint(\"1\")\n\t\t\treturn\n\telse:\n\t\tprint((s[j]))\n\t\treturn\n", "s = input()\nk = int(input())\nfor i in range(k):\n    if s[i]!='1':\n        print((s[i]))\n        return\nprint((s[k-1]))\n", "S = list(input())\nK = int(input())\nlsS = [int(i) for i in S]\nii = 0\nfor i in range(len(S)):\n    if lsS[i] == 1:\n        ii += 1\n    else:\n        a = lsS[i]\n        break\nif ii >= K:\n    print(1)\nelse:\n    print(a)", "S = list(map(int,input()))\nK = int(input())\nflag = False\nans = 1\nfor i in range(K):\n  if S[i] != 1:\n    flag = True\n    ans = S[i]\n    break\nprint(ans)", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Wed Sep 16 01:17:00 2020\n\n@author: liang\n\"\"\"\n\nS = input()\nK = int(input())\n\n#count = 0\nfor i in range(len(S)):\n    if S[i] != '1':\n        break\n#print(\"i\",i)\n\nif K < i + 1:\n    print((1))\n    #print(\"A\")\nelse:\n    print((S[i]))\n    #print(\"B\")\n", "S = input()\nK = int(input())\n\nfor i in range(len(S)):\n  if S[i] != \"1\":\n    print(S[i])\n    break\n  elif i+1 < K and S[i] == \"1\":\n    continue\n  else:\n    print(1)\n    break", "s = input()\nk = int(input())\ncnt = 0\nfor i in s:\n    if int(i) == 1:cnt += 1\n    if cnt == k or int(i) != 1:\n        print(i)\n        break", "s=input()\ni=1\nwhile 1:\n    if i==len(s)+1:\n        print((1));return\n    if s[i-1]!=\"1\":\n        t=i \n        ans=int(s[i-1])\n        break\n    i+=1\n# print(t)\nif int(input())<t:\n    print((1));return\nprint(ans)\n", "def main():\n  S=input()\n  K=int(input())\n  cnt=0\n  n=0\n  for i in S:\n    if i=='1':\n      cnt+=1\n    else:\n      n=int(i)\n      break\n  if cnt>=K:\n    print(1)\n  else:\n    print(n)\n  return\nmain()", "s = input()\nk = int(input())\n\nif k == 1 or len(s) == 1:\n    ans = list(s)[0]\nelse:\n    ans = None\n    for i, j in enumerate(list(s)):\n        if i < k-1:\n            if j != '1':\n                ans = j\n                break\n        elif i == k-1:\n            ans = j           \n            break\n        else:\n            continue\nprint(ans)", "def number_count(string, n):\n    count = 0\n    for i in range(len(string)):\n        if int(string[i]) == n:\n            count += 1\n    return count\n\n\ndef main():\n    s = str(input())\n    k = int(input())\n\n    if number_count(s, 1) == len(s):   # s\u306e\u4e2d\u8eab\u304c\u3059\u3079\u3066\uff11\u306e\u5834\u5408\n        number = '1'\n\n    else:\n        for i in range(len(s)):\n            if s[i] != '1':\n                first_index = i\n                break\n\n        if k < first_index + 1:\n            number = '1'\n        else:\n            number = s[first_index]\n\n\n    print(number)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "s=input()\nk=int(input())\nc=0\nfor i in s:\n    if i=='1':\n        c+=1  \n    else:\n        break\nprint(s[c] if k>c else \"1\")", "S = input()\nK = int(input())\ncon = 0\nfor i in S:\n  if i == '1':\n    con += 1\n  else:\n    break\nif con >= K:\n  print((1))\nelse:\n  print(i)\n  \n", "s = input()\nk = int(input()) - 1\n\n\nfor i in range(len(s)):\n    if s[i] != \"1\" or i == k:\n        break\n\nprint(s[i])", "S=input()\nK=int(input())\na=''\nn=0\n\nif len(S)<=K:\n    n=len(S)\nelse:\n    n=K\nfor i in range(n):\n    if S[i]=='1':\n        a='1'\n        continue\n    else:\n        a=S[i]\n        break\nprint(a)\n", "s = input()\nk = int(input())\ni = 0\nwhile True:\n  if s[i] == '1':\n    if k <= i+1:\n      print('1')\n      break\n    else:\n      i += 1\n  else:\n    print(s[i])\n    break", "S = str(input())\nK = int(input())\nfor i in range(K):\n    if S[i] != \"1\":\n        print(S[i])\n        return\nprint(\"1\")", "S = input()\nK = int(input())\n\nfor i,s in enumerate(S):\n  if s != \"1\" and i < K: \n    print(s)\n    return\nprint(1)", "S = input()\nK = int(input())\ncount = 0\n\nif S[0] != '1':\n  print(S[0])\n  return\n\nfor i in range(len(S)):\n    if S[i] == '1':\n      count += 1\n    else:\n      break\n\nif count >= K:\n  print(1)\nelse:\n  print(S[count])", "import sys\n\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninl = lambda: [int(x) for x in sys.stdin.readline().split()]\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print(\"\\033[33m\", *a, \"\\033[0m\", **dict(file=sys.stderr, **kw))\n\n\ndef solve():\n    S = ins()\n    K = ini()\n    ones = 0\n    for i, d in enumerate(S):\n        if d != \"1\":\n            break\n        ones += 1\n    if K <= ones:\n        return \"1\"\n    return S[ones]\n\n\nprint(solve())\n", "s = input()\nk = int(input())\n\nanswer = 1\nif len(s) == 1:\n  answer = s\nelse :\n  for i in range(k):\n    if s[i] != \"1\":\n      answer = s[i]\n      break\nprint(answer)", "\ns = input()\nk = int(input())\n\nc = s.count('1',0,k)\n\nx = s.replace('1', '')\n\nif len(x)==0:\n    print(1)\nelse:\n    if c ==k:\n        print(1)\n    else:\n        print(x[0])", "s=[int(i) for i in list(input())]\nk=int(input())\n\nans=1\nfor i in range(k):\n    if s[i]!=1:\n        ans=s[i]\n        break\n    \nprint(ans)", "import sys\n\nS = sys.stdin.readline().strip()\nK = int(sys.stdin.readline())\n\nfor s_i in S:\n    if s_i == \"1\":\n        K -= 1\n    else:\n        break\n    if K <= 0:\n        break\nprint(s_i)"]