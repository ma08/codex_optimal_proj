["H, W = map(int, input().split())\nh, w = map(int, input().split())\nprint((H-h) * (W-w))", "H,W = map(int,input().split())\nh,w = map(int,input().split())\nprint((H-h)*(W-w))", "H,W = map(int,input().split())\nh,w = map(int,input().split())\nprint(H*W-H*w-W*h+h*w)", "H,W=map(int,input().split())\nh,w=map(int,input().split())\nprint((H-h)*(W-w))", "H, W = map(int, input().split())\nh, w = map(int, input().split())\n\nans = max(0, H * W - h * W - H * w + h * w)\nprint(ans)", "h,w = map(int,input().split())\nx,y = map(int,input().split())\n\nprint((h-x)*(w-y))", "H,W=map(int,input().split())\nh,w=map(int,input().split())\nprint(H*W-(W*h+H*w-h*w))", "H, W = map(int, input().split())\nh, w = map(int, input().split())\n\nprint(H * W - (h*W + w*H - h*w))", "def lcm(a, b):\n    return a*b//math.gcd(a, b)\n\nH, W = list(map(int, input().split()))\nh, w = list(map(int, input().split()))\nprint(((H-h)*(W-w)))\n", "H,W=map(int,input().split())\nh,w=map(int,input().split())\nprint(H*W-H*w-W*h+w*h)", "a,b =map(int,input().split())\nc,d =map(int,input().split())\nprint((a-c)*(b-d))", "H,W = list(map(int,input().split()))\nh,w = list(map(int,input().split()))\n\nprint((H*W-W*h-H*w+w*h))\n", "H,W=map(int,input().split())\nh,w=map(int,input().split())\nprint(H*W-h*W-H*w+h*w)", "H, W = map(int, input().split())\nh, w = map(int, input().split())\n\nans = (H-h) * (W-w)\nprint(ans)", "H1, W1 = map(int, input().split())\nH2, W2 = map(int, input().split())\n\nH=H1-H2\nW=W1-W2\n\nprint(H*W)", "H, W = map(int, input().split())\nh, w = map(int, input().split())\nprint((H-h) * (W-w))", "H,W = map(int,input().split())\nh,w = map(int,input().split())\nprint((H-h)*(W-w))", "H,W = map(int,input().split())\nhh,ww = map(int,input().split())\nprint((H-hh)*(W-ww))", "H,W=map(int,input().split())\nh,w=map(int,input().split())\nprint(H*W-W*h-H*w+h*w)", "H, W = map(int, input().split())\nh, w = map(int, input().split())\nprint((H - h) * (W - w))", "a, b = map(int, input().split())\nc, d = map(int, input().split())\nprint((a - c) * (b - d))", "H,W = map(int,input().split())\nh,w = map(int,input().split())\n\nprint((H-h)*(W-w))", "#\u5165\u529b:N,M(int:\u6574\u6570)\ndef input2():\n\treturn map(int,input().split())\n\nH,W=input2()\nh,w=input2()\n\nans= (H-h)*(W-w)\nprint(ans) ", "H, W = list(map(int, input().split()))\nh, w = list(map(int, input().split()))\nprint(((H-h)*(W-w)))\n", "n1, k1 = map(int, input().split())\nn2, k2 = map(int, input().split())\n\nprint((n1-n2)*(k1-k2))", "H,W = map(int,input().split())\nh,w = map(int,input().split())\n\nans = H*W - (H*w+W*h) + (h*w)\nprint(ans)", "H, W = list(map(int, input().split()))\nh, w = list(map(int, input().split()))\nprint(((H - h) * (W - w)))\n", "H, W = map(int, input().split())\nh, w = map(int, input().split())\n\nprint(H*W-h*W-H*w+h*w)", "H,W=map(int,input().split())\nh,w=map(int,input().split())\nprint((H-h)*(W-w))", "H,W=map(int,input().split())\nh,w=map(int,input().split())\nprint(H*W-h*W-w*H+h*w)", "H,W = map(int,input().split())\nh,w = map(int,input().split())\n\nprint((H - h) * (W - w))", "a,b = map(int,input().split())\nh,w = map(int,input().split())\n\nprint((a - h) * (b - w))", "H,W = map(int,input().split())\nh,w = map(int,input().split())\nprint((H-h)*(W-w))", "H, W = map(int, input().split())\nh, w = map(int, input().split())\n\nprint((H - h) * (W - w))", "H,W=list(map(int, input().split()))\nh,w=list(map(int, input().split()))\n\nprint(((H-h)*(W-w)))\n", "H1, W1 = map(int, input().split())\nH2, W2 = map(int, input().split())\nprint((H1-H2)*(W1-W2))", "H,W=map(int,input().split())\nh,w=map(int,input().split())\nprint((H-h)*(W-w))", "def mapt(fn, *args):\n    return tuple(map(fn, *args))\n\n\ndef Input():\n    return mapt(int, input().split(\" \"))\n\n\ndef main():\n    H, W = Input()\n    h, w = Input()\n    print(H * W - ((H * w + W * h) - (h * w)))\n\nmain()", "a,b = map(int,input().split())\nc,d = map(int,input().split())\nprint((a-c)*(b-d))", "H, W = list(map(int, input().split()))\nh, w = list(map(int, input().split()))\n\nprint((H*W - (h*W + w*H - h*w)))\n", "H,W=map(int,input().split())\nh,w=map(int,input().split())\nprint((H-h)*(W-w))", "H, W = map(int, input().split())\nh, w = map(int, input().split())\nprint((H-h)*(W-w))", "H, W = map(int, input().split())\nh, w = map(int, input().split())\nprint(H*W - h*W - H*w + h*w)", "H,W=map(int,input().split())\nh,w=map(int,input().split())\n\nHW=[]\n\nfor i in range(H):\n  sublist=[]\n  for j in range(W):\n    sublist.append(0)\n  HW.append(sublist)\n\n\n# \u884c\nfor i in range(h):\n  for j in range(W):\n    HW[i][j]=1\n\n\n# \u5217\nfor i in range(w):\n  for j in range(H):\n    if HW[j][i]==1: continue\n    HW[j][i]=1\n\ncnt=0\n\nfor i in range(H):\n  for j in range(W):\n    if HW[i][j]==0:\n      cnt+=1\n\nprint(cnt)", "a, b = list(map(int, input().split()))\na_l, b_l = list(map(int, input().split()))\n\nans = (a - a_l) * (b - b_l)\nprint(ans)\n", "H,W=map(int,input().split())\nh,w=map(int,input().split())\nprint(H*W-(H*w+W*h-h*w))", "H, W = map(int, input().split())\nh, w = map(int, input().split())\n\nprint((H-h) * (W-w))", "H,W=map(int, input().split())   \nh,w=map(int, input().split())   \nprint(H*W-(h*W+H*w-h*w))", "a,b=map(int, input().split())\nh,w=map(int, input().split())\n\nprint(a*b-(h*b+a*w-w*h))", "\"\"\"\nimport numpy as np\nimport math\nfrom numba import njit\nfrom scipy.special import perm\nfrom scipy.special import comb\n\n#@njit('f8(i8,i8,i8,i8,f8[:,:,:])', cache=True)\n\ndef lcm(a, b):\n    return a*b//math.gcd(a, b)\n\nMOD = 10**9+7\n\"\"\"\n\nH, W = list(map(int, input().split()))\nh, w = list(map(int, input().split()))\nprint(((H-h)*(W-w)))\n", "H,W=list(map(int,input().split()))\nh,w=list(map(int,input().split()))\nprint(H*W-h*W-w*H+h*w)", "H,W = map(int,input().split())\nh,w = map(int,input().split())\nprint((H-h)*(W-w))", "H, W = map(int, input().split())\nh, w = map(int, input().split())\nprint(H * W - h * W - w * H + h * w)", "a,b = map(int,input().split())\nc,d = map(int,input().split())\nprint((a-c)*(b-d))", "H,W=list(map(int,input().split()))\nh,w=list(map(int,input().split()))\n\nprint((H*W-h*W-H*w+h*w))\n", "H, W=map(int, input().split(\" \"))\nh, w=map(int, input().split(\" \"))\n\n# print(H,W)\n# print(h,w)\n\nblack=H*w+W*h-h*w\n\nprint(H*W-black)", "x,y = map(int,input().split())\nX,Y = map(int,input().split())\nprint((x-X)*(y-Y))", "H, W = map(int, input().split())\nh, w = map(int, input().split())\nwhite = H*W\nblack = (W*h) + ((H-h)*w) \nprint(white - black)", "# import numpy as np\n# import math\n\n# from scipy.special import perm\n# from scipy.special import comb\n\n# from numba import njit\n# @njit('f8(i8,i8,i8,i8,f8[:,:,:])', cache=True)\n\ndef lcm(a, b):\n    return a*b//math.gcd(a, b)\n\nMOD = 10**9+7\n\n\nH, W = list(map(int, input().split()))\nh, w = list(map(int, input().split()))\nprint(((H-h)*(W-w)))\n", "a,b=map(int,input().split())\nc,d=map(int,input().split())\nprint((a-c)*(b-d))", "\nH,W=map(int,input().split())\nh,w=map(int,input().split())\nprint((H-h)*(W-w))", "#!/usr/bin/env python3\n\ndef main():\n    H, W = list(map(int, input().split()))\n    h, w = list(map(int, input().split()))\n    print(((H - h) * (W - w)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "h,w = map(int,input().split())\ns,t = map(int,input().split())\nprint(h*w-s*w-t*h+s*t)", "H,W = list(map(int,input().split()))\nh,w = [int(i) for i in input().split()]\nn = (H-h) * (W-w)\nprint(n)\n", "H,W = map(int,input().split())\nh,w = map(int,input().split())\n\nseki = H * W\nprint(seki - (h*W + w*H - h * w))", "h,w = map(int,input().split())\nx,y = map(int,input().split())\nprint(h*w-w*x-h*y+x*y)", "H, W = map(int, input().split())\nh, w = map(int, input().split())\nprint((H-h)*(W-w))", "H, W = map(int,input().split())\nh, w = map(int,input().split())\nprint(H*W - (h*W+w*H - h*w))", "H,W=map(int,input().split())\nh,w=map(int,input().split())\nprint(H*W-h*W-H*w+h*w)", "H, W = map(int, input().split())\nh, w = map(int, input().split())\n\nprint(H*W - (h*W+w*H-h*w))", "H,W=list(map(int,input().split()))\nh,w=list(map(int,input().split()))\nprint(((H-h)*(W-w)))\n", "H, W = map(int, input().split())\nh, w = map(int, input().split())\nprint((H - h) * (W - w))", "rows, columns = list(map(int, input().split()))\nblack_rows, black_columns = list(map(int, input().split()))\n\narea = rows * columns\nblack_space = black_columns * rows + black_rows * columns - black_rows * black_columns\n\nprint((area - black_space))\n", "h1, w1 = map(int, input().split())\nh2, w2 = map(int, input().split())\nprint((h1 - h2) * (w1 - w2))", "H,W=map(int,input().split())\nh,w=map(int,input().split())\nprint(H*W-h*W-w*H+h*w)", "a,b=map(int,input().split(\" \"))\nc,d=map(int,input().split(\" \"))\nprint((a-c)*(b-d))", "H,W=map(int,input().split())\nh,w=map(int,input().split())\nprint((H-h)*(W-w))", "import numpy as np\nimport math\nfrom numba import njit\nfrom scipy.special import perm\nfrom scipy.special import comb\n\n#@njit('f8(i8,i8,i8,i8,f8[:,:,:])', cache=True)\n\ndef lcm(a, b):\n    return a*b//math.gcd(a, b)\n\nMOD = 10**9+7\n\nH, W = list(map(int, input().split()))\nh, w = list(map(int, input().split()))\nprint(((H-h)*(W-w)))\n", "a = list(map(int,input().split()))\nb = list(map(int,input().split()))\nprint(((a[0]-b[0])*(a[1]-b[1])))\n", "H, W = map(int, input().split())\nh, w = map(int, input().split())\nt = H * W\no = h*W + w*H\nc = h*w\ndiff = o - c\nprint(t - diff)", "H, W = map(int,input().split())\nh, w = map(int,input().split())\nprint(H*W + h*w - H*w - W*h)", "H, W = map(int, input().split())\nh, w = map(int, input().split())\n\nprint((H - h) * (W - w))", "H,W = map(int,input().split())\nh,w = map(int,input().split())\nprint(H*W-h*W-H*w+h*w)", "import numpy as np\nimport math\ndef lcm(a, b):\n    return a*b//math.gcd(a, b)\n\nH, W = list(map(int, input().split()))\nh, w = list(map(int, input().split()))\nprint(((H-h)*(W-w)))\n", "H, W = map(int, input().split())\nh, w = map(int, input().split())\n\nans = H*W - h*W - w*(H-h)\nprint(ans)", "H,W=list(map(int,input().split()))\nh,w=list(map(int,input().split()))\n\nans=H*W-h*W-w*H+h*w\nprint(ans)\n", "H, W = map(int, input().split())\nh, w = map(int, input().split())\nans = (H-h) * (W-w)\nprint(ans)", "a,b=map(int,input().split())\nc,d=map(int,input().split())\nprint((a-c)*(b-d))", "H,W = map(int,input().split())\nh,w = map(int, input().split())\nprint(H *W-((h*W)+(w*H)-(h*w)))", "a, b = list(map(int, input().split()))\na_l, b_l = list(map(int, input().split()))\n\nprint(((a - a_l) * (b - b_l)))\n", "H, W = map(int, input().split())\nh, w = map(int, input().split())\nprint((H-h)*(W-w))", "H, W = list(map(int, input().split()))\nh, w = list(map(int, input().split()))\na = H - h\nb = W - w\nprint((a * b))\n", "h1, w1 = list(map(int, input().split()))\nh2, w2 = list(map(int, input().split()))\n\nprint(((h1 - h2) * (w1 - w2)))\n", "h,w = list(map(int,input().split()))\ni,j = list(map(int,input().split()))\nprint(((h-i)*(w-j)))\n", "H, W = map(int, input().split())\nh, w = map(int, input().split())\nprint((H - h) * (W - w))", "H,M=map(int,input().split())\nh,m=map(int,input().split())\nprint((H-h)*(M-m))", "H, W = map(int, input().split())\nh, w = map(int, input().split())\n\nprint((H-h) * (W-w))", "H,W=list(map(int,input().split()))\nh,w=list(map(int,input().split()))\nprint(((H-h)*(W-w)))\n", "H, W = list(map(int, input().split()))\nh, w = list(map(int, input().split()))\nprint(((H-h)*(W-w)))\n", "H, W = map(int, input().split())\nh, w = map(int, input().split())\nprint((W-w)*(H-h))"]