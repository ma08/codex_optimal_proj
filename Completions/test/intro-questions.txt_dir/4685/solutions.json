["a,b,c=list(map(int,input().split()))\nk=int(input())\n\nx=max(a,b,c)\n\nprint(((a+b+c)-x+x*(2**k)))\n", "a,b,c=map(int,input().split())\nk=int(input())\nprint(a+b+c+max(a,b,c)*(2**k-1))", "A, B, C = map(int, input().split())\nK = int(input())\n\nX = sorted([A, B, C])\nfor _ in range(K):\n    X[-1] *= 2\n    \nprint(sum(X))", "def ans096(A: int, B: int, C: int, K: int):\n    int_list = [A, B, C]\n    int_list.sort()\n    third=int_list[-1]\n    for i in range(K):\n        third*=2\n    return int_list[0]+int_list[1]+third\n\nA,B,C=map(int,input().split())\nK=int(input())\nprint(ans096(A,B,C,K))", "abc = list(map(int, input().split()))\nk = int(input())\n\nfor i in range(k):\n  abc.sort()\n  abc[2] *= 2\n  \nprint(sum(abc))", "a = sorted(map(int, input().split()))\nk = int(input())\nprint(a[0] + a[1] + a[2] * (2**k))", "import sys\nlines = [s.rstrip(\"\\n\") for s in sys.stdin.readlines()]\nnum_list = [int(num) for num in lines.pop(0).split(\" \")]\nk, = [int(num) for num in lines.pop(0).split(\" \")]\n\nm = max(num_list)\nans = sum(num_list) - m + (m * (2 ** k))\nprint(ans)\n", "import math\n# b=input()\n# c=[]\n# for i in range(b):\n#     c.append(a[i])\na = list(map(int,input().split()))\n#b = list(map(int,input().split()))\ns=int(input())\n\nfor i in range(s):\n\ta[a.index(max(a))]=\ta[a.index(max(a))]*2\n\t\nprint(sum(a))", "l = list(map(int, input().split()))\nk = int(input())\nnum = max(l)\nl.remove(num)\nfor i in range(k):\n    num = num * 2\nprint(sum(l) + num)", "A,B,C=map(int, input().split())\nK=int(input())\n\nM=sorted([A,B,C])\nm=M[-1]\n\nm=m*2**K\n\nprint(m+M[0]+M[1])", "L = sorted(map(int, input().split()))\nk = int(input())\nprint(L[0]+L[1]+L[2]*2**k)", "a, b, c = list(map(int, input().split()))\nK = int(input())\nm = max(a, b, c)\nprint((a + b + c + (2**K - 1) * m))\n", "a, b, c = map(int, input().split())\nk = int(input())\nprint(a + b + c + max(a, b, c) * (2 ** k - 1))", "a = list(map(int, input().split()))\nk = int(input())\na.sort()\nprint(a[0] + a[1] + a[2] + (a[2] * (2 ** k - 1)))", "def main():\n    A = list(map(int, input().split()))\n    K = int(input())\n    A.sort()\n    A.append(A.pop()*(2**K))\n    print((sum(A)))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "A,B,C = map (int, input ().split ())\nS = int (input ())\nif A>B>C or A>C>B:\n  for i in range (S):\n    A = A*2\n  print (A+B+C)\nelif B>A>C or B>C>A:\n  for i in range (S):\n    B = B*2\n  print (A+B+C)\nelse:\n  for i in range (S):\n    C = C*2\n  print (A+B+C)", "a,b,c = map(int, input().split())\nk = int(input())\n\nans = a+b+c + (max(a,b,c))*(2**k-1)\nprint(ans)", "l=[int(x) for x in input().split()]\nk=int(input())\nm=max(l)\nl.remove(max(l))\nfor i in range(k):\n    m *= 2 \nprint(sum(l)+m)", "x = list(map(int, input().split()))\nfor i in range(int(input())):\n    x.sort()\n    x[-1]=x[-1]*2\nprint(sum(x))", "X=list(map(int,input().split()))\nK=int(input())\nX.sort()\nfor i in range(K):\n    X[-1]=X[-1]*2\nprint(sum(X))", "a,b,c=list(map(int,input().split()))\nn=int(input())\n\na,b,c= sorted([a,b,c])\nprint((a+b+c*2**n))\n", "A = list(map(int,input().split()))\nK = int(input())\n\nfor i in range(K):\n    max_A = max(A)\n    A.append(max_A * 2)\n    A.remove(max_A)\n\nprint(sum(A))", "a, b, c = map(int, input().split())\nk = int(input())\n\nif max([a,b,c]) == c:\n    ans = c*(2**k) + b + a\nelif max([a,b,c]) == b:\n    ans = b*(2**k) + a + c\nelse:\n    ans = a*(2**k) + b + c\nprint(ans)", "lis = list(map(int,input().split()))\na = int(input())\nlis.sort(reverse = True)\nfor i in range(a):\n    lis[0] *= 2\nprint(sum(lis))", "n = list(map(int,input().split()))\nk = int(input())\nfor _ in range(k):\n  n[n.index(max(n))] *= 2\nprint(sum(n)) ", "l = list(map(int, input().split()))\nk = int(input())\nl.sort()\nprint(l[2]*(2**k)+l[0]+l[1])", "A = list(map(int,input().split()))\nK = int(input())\nfor _ in range(K):\n  A[A.index(max(A))]*=2\n\nprint(sum(A))", "a=list(map(int,input().split()))\nk=int(input())\nb=max(a)\nfor i in range(k):\n  b*=2\n  \nprint((sum(a)-max(a)+b))\n", "A, B, C = map(int,input().split())\nK = int(input())\n\nn_list = [A, B, C]\nx = max(n_list)\nn_list.append(x * 2 ** K)\nn_list.remove(x)\nprint(sum(n_list))", "def answer(a: int, b: int, c: int, k: int) -> int:\n    nums = sorted((a, b, c))\n    nums[-1] = nums[-1] * 2 ** k\n\n    return sum(nums)\n\n\ndef main():\n    a, b, c = list(map(int, input().split()))\n    k = int(input())\n    print((answer(a, b, c, k)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "display = sorted(list(map(int, input().split())))\nK = int(input())\n\nmaximum = display[-1]\nfor i in range(K):\n    maximum = maximum*2\n# print(maximum)\n# print(display[:-1])\n# print(sum(display[:-1]))\nprint(sum(display[:-1])+maximum)", "A, B, C = sorted([int(i) for i in input().split()])\nK = int(input())\nprint((A + B + (C * (2**K))))\n", "l=list(map(int,input().split()))\nk=int(input())\n\nd=max(l)\ne=d*(2**k)\n\nl.remove(max(l))\nl.append(e)\n\nprint((sum(l)))\n", "argList = list(map(int, input().split()))\nk = int(input())\nprint((sum(argList)-max(argList)) + max(argList)*2**k)", "A,B,C = map(int,input().split())\nMax = max(A,B,C)\nK = int(input())\nMax *= 2**K\nprint(min((A+B+Max),(A+Max+C),(Max+B+C)))", "l = list(map(int,input().split()))\nn = int(input())\nls = sorted(l)\nprint(ls[0]+ls[1]+ls[2]*(2**n))", "lst = input().split()\nK = int(input())\nfor i in range(3):\n   lst[i] = int(lst[i])\n\nprint(sum(lst) + (max(lst) *  ((2 ** K) - 1)))", "l = list(map(int, input().split()))\nk = int(input())\nfor i in range(k):\n    a = max(l)\n    i = l.index(a)\n    l[i] = l[i] * 2\n    \nprint(sum(l))", "def mapt(fn, *args):\n    return tuple(map(fn, *args))\n\n\ndef Input():\n    return mapt(int, input().split(\" \"))\n\n\ndef main():\n    a, b, c = sorted(Input())\n    k = int(input())\n\n    for i in range(k):\n        c *= 2\n    print(a+b+c)\n\n\nmain()", "a,b,c=list(map(int,input().split()))\nk=int(input())\nprint(max([a,b,c])*2**k+sum([a,b,c])-max([a,b,c]))", "A,B,C = map(int,input().split())\nK = int(input())\n\nmax_num = max(A,B,C)\nif A == max_num:\n  print(A * (2 ** K) + B + C)\nelif B == max_num:\n  print(B * (2 ** K) + A + C)\nelse:\n  print(C * (2 ** K) + B + A)", "abc = list(map(int, input().split()))\nk = int(input())\nabc.sort()\nprint(sum(abc[:2] ,abc[-1] * (2 ** k)))", "N_List = list(map(int,input().split()))\nN = int(input())\nmaxN = max(N_List)\nprint(sum(N_List)-maxN+maxN*(2**N))", "s=list(map(int,input().split()))\nk=int(input())\ns.sort()\nm=1\nm *= (s[2]*(2**k))\nprint(m+s[0]+s[1])", "a,b,c = map(int, input().split())\nk = int(input())\n\nm = max(a,b,c)\nre = sum([a,b,c]) - m\nprint(re + m*2**(k))", "ABC = [int(_) for _ in input().split()]\nK = int(input())\n\nABC = sorted(ABC)\n\nret = ABC[2]\nfor i in range(K):\n    ret = ret * 2\n\nret += sum(ABC[:2])\n\nprint(ret)", "a=list(map(int,input().split()))\nk=int(input())\nc=max(a[0],a[1],a[2])\nb=a[0]+a[1]+a[2]\nb=b-c\nfor i in range(0,k):\n    c=c*2\nprint(b+c)    ", "A, B, C = [int(i) for i in input().split()]\nK = int(input())\n\nm = max(A, B, C)\nprint((sum([A, B, C]) - m + m * 2 ** K))\n", "num1, num2, num3 = map(int, input().split())\ncount = int(input())\n\nmax_num = max(num1, max(num2, num3))\n\nsum_num = num1 + num2 + num3 - max_num\nend_num = max_num\nfor i in range(count):\n    end_num *= 2\n\nprint(sum_num + end_num)", "num_list = list(map(int, input().split()))\nk = int(input())\n\nmax = 0\nindex = -1\nfor i in num_list:\n    if max < i:\n        max = i\n        index = num_list.index(i)\n\nchange = max*(2**k)\nnum_list[index] = change\nans = 0\nfor j in num_list:\n    ans += j\n\nprint(ans)", "A, B, C = list(map(int,input().split()))\nK = int(input())\nNumbers = [A,B,C]\n\nNumbers.sort(reverse=True)\n\nfor i in range(K):\n    twice = Numbers[0] * 2\n    Numbers[0] = twice\n\nprint((sum(Numbers)))\n\n", "mylists = list(map(int, input().split()))\nk = int(input())\n\nmylists.sort(reverse=True)\nprint((mylists[0] * 2 ** k - mylists[0] + sum(mylists)))\n", "a,b,c = map(int,input().split())\nk = int(input())\nprint(max(a,b,c)*(2**k-1)+a+b+c)", "a = list(map(int,input().split()))\nk = int(input())\na.sort()\na[2] = a[2] *(2**k)\nprint(sum(a))", "l = list(map(int, input().split()))\nk = int(input())\ni = l.index(max(l))\nm = l[i]\ndel l[i]\nl.append(m * 2 ** k)\nprint((sum(l)))\n", "n = [int(s) for s in input().split()]\nk = int(input())\n\nfor i in range(k):\n    max_id = n.index(max(n))\n    n[max_id] *= 2\nprint(sum(n)) ", "a,b,c=list(map(int,input().split()))\nk=int(input())\nd=max(a,b,c)\nprint((a+b+c-d+d*2**k))\n", "a=[int(i) for i in input().split()]\nk=int(input())\n\nsum_a=sum(a)\n\nans=sum_a-max(a)+max(a)*2**k\n\nprint(ans)", "abc = list(map(int, input().split()))\nk = int(input())\nfor i in range(k):\n    abc.sort()\n    abc[2] *= 2\nprint(sum(abc))", "A=list(map(int,input().split()))\nK=int(input())\nA.sort()\nA[2]=A[2]*2**K\nprint((sum(A)))\n", "ABC = sorted(map(int, input().split()))\nK = int(input())\n\nprint((ABC[0] + ABC[1] + ABC[2] * 2**K))\n", "a = [int(x) for x in input().split()]\nk = int(input())\nprint(sum(a) - max(a) + max(a) * (2 ** k))", "abc = list(map(int, input().split()))\nk = int(input())\nmx = abc.pop(abc.index(max(abc)))\nprint((mx * pow(2, k) + sum(abc)))\n", "l = list(map(int,input().split()))\nk = int(input())\nl.sort(reverse=True)\nfor i in range(k):\n    l[0] *= 2\nprint(sum(l))", "#!/usr/bin/env python3\n\n\nabc = list(map(int, input().split()))\nk = int(input())\n\n\nabc.sort()\n\nprint((abc[0]+abc[1]+abc[2]*2**(k)))\n", "#\n# abc096 b\n#\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"5 3 11\n1\"\"\"\n        output = \"\"\"30\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"3 3 4\n2\"\"\"\n        output = \"\"\"22\"\"\"\n        self.assertIO(input, output)\n\n\ndef resolve():\n    I = list(map(int, input().split()))\n    K = int(input())\n\n    for i in range(K):\n        t = max(I)\n        I.remove(t)\n        I.append(t*2)\n\n    print((sum(I)))\n\n\ndef __starting_point():\n    # unittest.main()\n    resolve()\n\n__starting_point()", "A,B,C = sorted(map(int,input().split()))\nK=int(input())\n\nfor i in range(K):\n\tC*=2\n\nprint((A+B+C))\n", "nums = list(map(int, input().split()))\nk = int(input())\nx = max(nums)\nmulx = x*(2**k)\nprint((mulx + sum(nums)-x))\n", "a,b,c = map(int, input().split())\nk = int(input())\nans = a+b+c+max(a,b,c)*(2**k-1)\nprint(ans)", "def resolve():\n    a = list(map(int, input().split()))\n    k = int(input())\n    a.sort()\n    for i in range(k):\n        a[2] = a[2] * 2\n    print(sum(a))\nresolve()", "ABC = list(map(int, input().split()))\nK = int(input())\n\nprint(max(ABC)*(2**K - 1) + sum(ABC))", "A, B, C = map(int, input().split())\nK = int(input())\nif max(A, B, C) == A:\n    A *= 2**K\nelif max(A, B, C) == B:\n    B *= 2**K\nelse:\n    C *= 2**K\nprint(A+B+C)", "List =  list(map(int, input().split()))\nK = int(input())\nsort = sorted(List)\nfor i in range(K):\n    sort[-1] = sort[-1]*2\nprint((sum(sort)))    \n", "a = list(map(int, input().split()))\nk = int(input())\na.sort(reverse=True)\na[0] *= 2**k\nprint(sum(a))", "a,b,c = map(int,input().split())\nk = int(input())\nprint(max(a,b,c)*(2**k-1)+a+b+c)", "a,b,c=sorted(map(int,input().split()))\nprint(a+b+pow(2,int(input())  )*c )", "A=list(map(int,input().split()))\nK=int(input())\n\nans=sum(A)\nans+=max(A)*(2**K-1)\nprint(ans)", "a,b,c = map(int,input().split())\nk = int(input())\nprint(max(a,b,c)*(2**k-1)+a+b+c)", "import heapq\n\nval = list(map(lambda x: -int(x), input().split()))\nK = int(input())\n\nheapq.heapify(val)\n\nfor i in range(K):\n    v = heapq.heappop(val)\n    heapq.heappush(val, v * 2)\n\nprint(-sum(val))", "A=list(map(int,input().split()))\n\nK=int(input())\n\nA.sort(reverse=True)\n\nprint((A[0]*2**K+A[1]+A[2]))\n", "l = list(map(int,input().split()))\nn = int(input())\nls = sorted(l)\nprint(ls[0]+ls[1]+ls[2]*(2**n))", "A = list(map(int,input().split()))\nK = int(input())\n\nfor i in range(K):\n    max_A = max(A)\n    A.append(max_A * 2)\n    A.remove(max_A)\n\nprint(sum(A))", "nums = sorted(list(map(int, input().split())), reverse=True)\nK = int(input())\n\nprint(nums[0]*(2**K) + nums[1] + nums[2])", "a,b,c=list(map(int,input().split()))\nk=int(input())\nprint((a+b+c-max(a,b,c)+max(a,b,c)*pow(2,k)))\n", "import bisect, collections, copy, heapq, itertools, math, string, sys\ninput = lambda: sys.stdin.readline().rstrip() \nsys.setrecursionlimit(10**7)\nINF = float('inf')\ndef I(): return int(input())\ndef F(): return float(input())\ndef SS(): return input()\ndef LI(): return [int(x) for x in input().split()]\ndef LI_(): return [int(x)-1 for x in input().split()]\ndef LF(): return [float(x) for x in input().split()]\ndef LSS(): return input().split()\n\ndef resolve():\n    ABC = LI()\n    K = I()\n    ABC.sort()\n\n    ans = sum(ABC[:2]) + ABC[2] * 2 ** K\n    print(ans)\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "a = list(map(int, input().split()))\nk = int(input())\n\na.sort()\n\nprint(sum(a[:-1]) + a[-1] * 2 ** k)", "m, *A = sorted([int(x) for x in input().split()], reverse=True)\nK = int(input())\n  \nprint((m * 2**K) + sum(A))", "a,b,c = map(int, input().split())\nk = int(input())\nl = [a,b,c]\nl.sort()\nprint(l[-1]*2**k + sum(l[:-1]))", "a, b, c = map(int, input().split())\nk = int(input())\nx = max(a, b, c)\nif x == a:\n    print(a*2**k + b + c)\nelif x == b:\n    print(a + b*2**k + c)\nelse:\n    print(a + b + c*2**k)", "a, b, c = map(int, input().split())\nk = int(input())\nm = max(a, b, c)\n\nfor i in range(k):\n  m *= 2\n  \nprint(sum([a, b, c]) - max(a, b, c) + m)", "A, B, C = map(int, input().split())\nK = int(input())\nprint(sum([A, B, C])+max(A, B, C)*2**K-max(A, B, C))", "a=list(map(int,input().split()))\nb=int(input())\na.sort()\nprint(a[0]+a[1]+(a[2]*(2**b)))", "l = list(map(int, input().split()))\nk = int(input())\nl.sort()\nprint(l[0] + l[1] + l[2] * (2 ** k))", "a = sorted(list(map(int, input().split())))\nm = a.pop()\nfor i in range(int(input())):\n  m *= 2\nprint(sum(a) + m)", "list_abc = sorted([int(i) for i in input().split()])\nk = int(input())\nprint(list_abc[2] * 2 ** k + sum(list_abc[:2]))", "a,b,c=map(int,input().split())\nk=int(input())\nprint((2**k-1)*max([a,b,c])+sum([a,b,c]))", "a = list(map(int, input().split()))\na.sort()\nk = int(input())\nres = a[0] + a[1] + a[2] * (2 ** k)\nprint(res)\n", "a,b,c = map(int, input().split())\nk = int(input())\nprint(a+b+c+max(a,b,c)*((2**k)-1))", "a = list(map(int, input().split()))\nk = int(input())\n\na.sort()\na[-1] *= 2 ** k\n\nprint((sum(a)))\n"]