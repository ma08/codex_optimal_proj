["a = list(list(map(int,input().split())) for _ in range(3))\nn = int(input())\nb = list(int(input()) for _ in range(n))\n\nfor i in range(3):\n    for j in range(3):\n        if a[i][j] in b:\n            a[i][j] = 0\n\nfor i in range(3):\n    if a[i][0] == a[i][1] == a[i][2] or a[0][i] == a[1][i] == a[2][i] or a[0][0] == a[1][1] == a[2][2] or a[2][0] == a[1][1] == a[0][2]:\n        print(\"Yes\")\n        break\nelse:\n     print(\"No\")", "import sys\nread = sys.stdin.readline\nimport time\nfrom heapq import heappush, heappop, heapify\nimport math\nfrom math import gcd\nimport itertools as it\nfrom collections import deque \n\n\ndef inp():\n    return int(input())\ndef inpl():\n    return list(map(int, input().split()))\nstart_time = time.perf_counter()\n# ------------------------------\n\n# bingo = [[0] * 3 for i in range(3)]\n# bingo[0][0] = 1\n# print(bingo)\n\nbingo = []\nfor i in range(3):\n    ls = inpl()\n    bingo.append(ls)\nN = inp()\nfor i in range(N):\n    a = inp()\n    for i in range(3):\n        for j in range(3):\n            if bingo[i][j] == a:\n                bingo[i][j] = -1\n\nbl = False\nfor i in range(3):\n    if bingo[i][0] == -1 and bingo[i][1] == -1 and bingo[i][2] == -1:\n        bl = True\n    if bingo[0][i] == -1 and bingo[1][i] == -1 and bingo[2][i] == -1:\n        bl = True\n         \nif bingo[0][0] == -1 and bingo[1][1] == -1 and bingo[2][2] == -1:\n        bl = True\n\nif bingo[0][2] == -1 and bingo[1][1] == -1 and bingo[2][0] == -1:\n        bl = True\n \nprint('Yes' if bl else 'No')\n\n\n# -----------------------------\nend_time = time.perf_counter()\nprint('time:', end_time-start_time, file=sys.stderr)\n\n", "A = [list(map(int, input().split())) for i in range(3)]\nN = int(input())\nB = [0 for i in range(8)]\nfor i in range(N):\n    b = int(input())\n    if b == A[0][0] or b == A[1][0] or b == A[2][0]:\n        B[0] += 1\n    if b == A[0][1] or b == A[1][1] or b == A[2][1]:\n        B[1] += 1\n    if b == A[0][2] or b == A[1][2] or b == A[2][2]:\n        B[2] += 1\n    if b == A[0][0] or b == A[0][1] or b == A[0][2]:\n        B[3] += 1\n    if b == A[1][0] or b == A[1][1] or b == A[1][2]:\n        B[4] += 1\n    if b == A[2][0] or b == A[2][1] or b == A[2][2]:\n        B[5] += 1\n    if b == A[0][0] or b == A[1][1] or b == A[2][2]:\n        B[6] += 1\n    if b == A[0][2] or b == A[1][1] or b == A[2][0]:\n        B[7] += 1\nif 3 in B:\n    ans = 'Yes'\nelse:\n    ans = 'No'\nprint(ans)", "a = [list(map(int, input().split())) for i in range(3)]\nn = int(input())\nb = [int(input()) for i in range(n)]\n\nbingo = []\nfor i in range(3):\n    x = a[i]\n    for j in range(3):\n        bingo.append(x[j])\n\nfor i in b:\n    for j in range(0,9):\n        if i == bingo[j]:\n            bingo[j] = 0\n\nif bingo[0]==0 and bingo[1]==0 and bingo[2]==0:\n    print(\"Yes\")\nelif bingo[3]==0 and bingo[4]==0 and bingo[5]==0:\n    print(\"Yes\")\nelif bingo[6]==0 and bingo[7]==0 and bingo[8]==0:\n    print(\"Yes\")\nelif bingo[0]==0 and bingo[3]==0 and bingo[6]==0:\n    print(\"Yes\")\nelif bingo[1]==0 and bingo[4]==0 and bingo[7]==0:\n    print(\"Yes\")\nelif bingo[2]==0 and bingo[5]==0 and bingo[8]==0:\n    print(\"Yes\")\nelif bingo[0]==0 and bingo[4]==0 and bingo[8]==0:\n    print(\"Yes\")\nelif bingo[2]==0 and bingo[4]==0 and bingo[6]==0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "Bingo_1 = list(map(int, input().split()))\nBingo_2 = list(map(int, input().split()))\nBingo_3 = list(map(int, input().split()))\n\nnumber_table = []\nnumber_count = int(input())\nfor i in range(number_count):\n    number_table.append(int(input()))\n\nfor j in range(number_count):\n    if number_table[j] == Bingo_1[0]:\n        Bingo_1[0] = 0\n    elif number_table[j] == Bingo_1[1]:\n        Bingo_1[1] = 0\n    elif number_table[j] == Bingo_1[2]:\n        Bingo_1[2] = 0\n    elif number_table[j] == Bingo_2[0]:\n        Bingo_2[0] = 0\n    elif number_table[j] == Bingo_2[1]:\n        Bingo_2[1] = 0\n    elif number_table[j] == Bingo_2[2]:\n        Bingo_2[2] = 0\n    elif number_table[j] == Bingo_3[0]:\n        Bingo_3[0] = 0\n    elif number_table[j] == Bingo_3[1]:\n        Bingo_3[1] = 0\n    elif number_table[j] == Bingo_3[2]:\n        Bingo_3[2] = 0\n\nif Bingo_1[0] == 0 and Bingo_1[1] == 0 and Bingo_1[2] == 0:\n    print('Yes')\nelif Bingo_2[0] == 0 and Bingo_2[1] == 0 and Bingo_2[2] == 0:\n    print('Yes')\nelif Bingo_3[0] == 0 and Bingo_3[1] == 0 and Bingo_3[2] == 0:\n    print('Yes')\nelif Bingo_1[0] == 0 and Bingo_2[0] == 0 and Bingo_3[0] == 0:\n    print('Yes')\nelif Bingo_1[1] == 0 and Bingo_2[1] == 0 and Bingo_3[1] == 0:\n    print('Yes')\nelif Bingo_1[2] == 0 and Bingo_2[2] == 0 and Bingo_3[2] == 0:\n    print('Yes')\nelif Bingo_1[0] == 0 and Bingo_2[1] == 0 and Bingo_3[2] == 0:\n    print('Yes')\nelif Bingo_1[2] == 0 and Bingo_2[1] == 0 and Bingo_3[0] == 0:\n    print('Yes')\nelse:\n    print('No')", "a=[input().split()for _ in range(3)]\nn=int(input())\nb= [input() for _ in range(n)]\na1=[]\nfor i in range(3):\n    a1.append(a[0][i])\nfor i in range(3):\n    a1.append(a[1][i])\nfor i in range(3):\n    a1.append(a[2][i])\nfor i in range(n):\n    if b[i] in a1:\n        w=a1.index(b[i])\n        a1[w]=\"a\"\n    else:\n        pass\n\nif a1[0]==a1[1]==a1[2]==\"a\" or a1[3]==a1[4]==a1[5]==\"a\" or a1[6]==a1[7]==a1[8]==\"a\":\n    print(\"Yes\")\nelse:\n    if a1[0]==a1[3]==a1[6]==\"a\" or a1[1]==a1[4]==a1[7]==\"a\" or a1[2]==a1[5]==a1[8]==\"a\":\n        print(\"Yes\")\n    else:\n        if a1[0]==a1[4]==a1[8]==\"a\" or a1[2]==a1[4]==a1[6]==\"a\":\n            print(\"Yes\")\n        else:\n            print(\"No\")", "a = [list(map(int, input().split())) for _ in range(3)]\nn = int(input())\nb = [int(input()) for _ in range(n)]\n\nfor i in range(n):\n  for j in range(3):\n    for k in range(3):\n      if b[i] == a[j][k]:\n        a[j][k] = 0\n\ndef bingo(board):\n  if board[0][0] == board[0][1] == board[0][2]:\n    return True\n  if board[1][0] == board[1][1] == board[1][2]:\n    return True\n  if board[2][0] == board[2][1] == board[2][2]:\n    return True\n  if board[0][0] == board[1][0] == board[2][0]:\n    return True\n  if board[0][1] == board[1][1] == board[2][1]:\n    return True\n  if board[0][2] == board[1][2] == board[2][2]:\n    return True\n  if board[0][0] == board[1][1] == board[2][2]:\n    return True\n  if board[0][2] == board[1][1] == board[0][2]:\n    return True\n  return False\n\nif bingo(a):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "l=[]\nA,B,C=map(int,input().split());l.append(A);l.append(B);l.append(C)\nD,E,F=map(int,input().split());l.append(D);l.append(E);l.append(F)\nG,H,I=map(int,input().split());l.append(G);l.append(H);l.append(I)\nN= int(input())\nb={0}\n\nfor i in range(N):\n  c=int(input())\n  if c in l:b.add(c)\nb.discard(0)\n\n\nfor i in b:\n  l[l.index(i)]=0\n\nif l[0]+l[1]+l[2]==0 or l[3]+l[4]+l[5]==0 or l[6]+l[7]+l[8]==0:print('Yes');return\nif l[0]+l[3]+l[6]==0 or l[1]+l[4]+l[7]==0 or l[2]+l[5]+l[8]==0:print('Yes');return\nif l[0]+l[4]+l[8]==0 or l[2]+l[4]+l[6]==0:print('Yes');return\nprint('No')", "#!/usr/bin/env python3\nimport sys\n\nYES = \"Yes\"  # type: str\nNO = \"No\"  # type: str\n\n\ndef solve(A: \"List[List[int]]\", N: int, b: \"List[int]\"):\n    A_ = []\n    for a_ in A:\n        A_ += [[a__, False] for a__ in a_]\n    for b_ in b:\n        for a__ in A_:\n            if a__[0] == b_:\n                a__[1] = True\n    if (A_[0][1] and ((A_[1][1] and A_[2][1]) or \\\n                        (A_[3][1] and A_[6][1]) or \\\n                        (A_[4][1] and A_[8][1]))) or \\\n            (A_[1][1] and A_[4][1] and A_[7][1]) or \\\n            (A_[2][1] and A_[5][1] and A_[8][1]) or \\\n            (A_[3][1] and A_[4][1] and A_[5][1]) or \\\n            (A_[6][1] and A_[7][1] and A_[8][1]) or \\\n            (A_[2][1] and A_[4][1] and A_[6][1]):\n        print(YES)\n    else:\n        print(NO)\n    return\n\n\n# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    A = [[int(next(tokens)) for _ in range(3)] for _ in range(3)]  # type: \"List[List[int]]\"\n    N = int(next(tokens))  # type: int\n    b = [int(next(tokens)) for _ in range(N)]  # type: \"List[int]\"\n    solve(A, N, b)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "a = [list(map(int, input().split())) for i in range(3)]\nn = int(input())\nb = [int(input()) for i in range(n)]\n\nfor i in b:\n    for j in range(0,3):\n        for k in range(0,3):\n            if i == a[j][k]:\n                a[j][k] = 0\n\n\nif a[0][0]==0 and a[0][1]==0 and a[0][2]==0:\n    print(\"Yes\")\nelif a[1][0]==0 and a[1][1]==0 and a[1][2]==0:\n    print(\"Yes\")\nelif a[2][0]==0 and a[2][1]==0 and a[2][2]==0:\n    print(\"Yes\")\nelif a[0][0]==0 and a[1][0]==0 and a[2][0]==0:\n    print(\"Yes\")\nelif a[0][1]==0 and a[1][1]==0 and a[2][1]==0:\n    print(\"Yes\")\nelif a[0][2]==0 and a[1][2]==0 and a[2][2]==0:\n    print(\"Yes\")\nelif a[0][0]==0 and a[1][1]==0 and a[2][2]==0:\n    print(\"Yes\")\nelif a[0][2]==0 and a[1][1]==0 and a[2][0]==0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "a=[[x for x in map(int,input().split())] for _ in range(3)]\nn=int(input())\nbingo=[[0]*3 for _ in range(3)]\nfor k in range(n):\n  x=int(input())\n  for i in range(3):\n    for j in range(3):\n      if a[i][j]==x:\n        bingo[i][j]=1\nfor i in range(3):\n  if bingo[i]==[1,1,1]:\n    print('Yes')\n    return\n  if [row[i] for row in bingo]==[1,1,1]:\n    print('Yes')\n    return\nif [bingo[i][i] for i in range(3)]==[1,1,1]:\n  print('Yes')\n  return\nif [bingo[i][2-i] for i in range(3)]==[1,1,1]:\n  print('Yes')\n  return\nprint('No')", "def main():\n    A = [list(map(int,input().split())) for i in range(3)]\n    N = int(input())\n    b = [int(input()) for _ in range(N)]\n\n    for i in range(N):\n        for j in range(3):\n            for h in range(3):\n                if A[j][h] == b[i]:\n                    A[j][h] = 0\n\n    if A[0][0]==0 and A[0][1]==0 and A[0][2]==0:\n        return 'Yes'\n    elif A[1][0]==0 and A[1][1]==0 and A[1][2]==0:\n        return 'Yes'\n    elif A[2][0]==0 and A[2][1]==0 and A[2][2]==0:\n        return 'Yes'\n    elif A[0][0]==0 and A[1][0]==0 and A[2][0]==0:\n        return 'Yes'\n    elif A[0][1]==0 and A[1][1]==0 and A[2][1]==0:\n        return 'Yes'\n    elif A[0][2]==0 and A[1][2]==0 and A[2][2]==0:\n        return 'Yes'\n    elif A[0][0]==0 and A[1][1]==0 and A[2][2]==0:\n        return 'Yes'\n    elif A[0][2]==0 and A[1][1]==0 and A[2][0]==0:\n        return 'Yes'\n\n    return ('No')\n\nprint((main()))\n", "def ck_bingo(lis):\n  flg=False\n  for i in range(0,3):\n    if lis[i][0]+lis[i][1]+lis[i][2]==3:\n      flg=True\n      break\n    \n  for j in range(0,3):\n    if lis[0][j]+lis[1][j]+lis[2][j]==3:\n      flg=True\n      break\n\n  if lis[0][0]+lis[1][1]+lis[2][2]==3 \\\n  or lis[0][2]+lis[1][1]+lis[2][0]==3:\n    flg=True\n  \n  return flg\n\n\nBingo=[[0] for _ in range(3)]\nfor b in range(3):\n  Bingo[b]=list(map(int,input().split()))\n\nN=int(input())\nA=[[0,0,0] for _ in range(3)]\nAns='No'\n\nfor i in range(N):\n  ball=int(input())\n  for j in range(3):\n    for k in range(3):\n      if ball==Bingo[j][k]:\n        A[j][k]=1\n        if ck_bingo(A):\n          Ans='Yes'\n          #break\n    \nprint(Ans)\n", "def LIHW(h):\n    return [list(map(int, input().split())) for _ in range(h)]\n\n\ndef LIH(h):\n    return [int(input()) for _ in range(h)]\n\n\ncard = LIHW(3)\nN = int(input())\nnum = LIH(N)\nbingo = [[0, 0, 0] for _ in range(3)]\nfor i in num:\n    for a in range(3):\n        for b in range(3):\n            if i == card[a][b]:\n                bingo[a][b] = 1\n                break\nans = \"No\"\nfor i in range(3):\n    if bingo[i][0] == 1 and bingo[i][1] == 1 and bingo[i][2] == 1:\n        ans = \"Yes\"\nfor i in range(3):\n    if bingo[0][i] == 1 and bingo[1][i] == 1 and bingo[2][i] == 1:\n        ans = \"Yes\"\nif bingo[0][0] == 1 and bingo[1][1] == 1 and bingo[2][2] == 1:\n    ans = \"Yes\"\nif bingo[0][2] == 1 and bingo[1][1] == 1 and bingo[2][0] == 1:\n    ans = \"Yes\"\nprint(ans)\n", "A11,A12,A13 = list(map(int,input().split()))\nA21,A22,A23 = list(map(int,input().split()))\nA31,A32,A33 = list(map(int,input().split()))\n\nAlist = []\nAlist.append(A11)\nAlist.append(A12)\nAlist.append(A13)\nAlist.append(A21)\nAlist.append(A22)\nAlist.append(A23)\nAlist.append(A31)\nAlist.append(A32)\nAlist.append(A33)\nbingolist =[0]*9\n\nN = int(input())\n#print (N)\nfor i in range(N):\n  b = int(input())\n  #print (b)\n  for j in range(len(bingolist)):\n    if b ==Alist[j]:\n      bingolist[j] = 1\n\nif sum(bingolist[0:3])==3 or sum(bingolist[3:6])==3 or sum(bingolist[6:9])==3 or (bingolist[0]+bingolist[3]+bingolist[6])==3 or (bingolist[1]+bingolist[4]+bingolist[7])==3 or (bingolist[2]+bingolist[5]+bingolist[8])==3 or (bingolist[0]+bingolist[4]+bingolist[8])==3 or (bingolist[2]+bingolist[4]+bingolist[6])==3:\n  print (\"Yes\")\nelse :\n  print (\"No\")\n#print (bingolist[0:3])\n#print (bingolist[3:6])\n#print (bingolist[6:9])\n#print (bingolist)\n", "A = [list(map(int, input().split())) for i in range(3)]\nN = int(input())\nB = [int(input())for i in range(N)]\nsheet = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]\n\nfor i in range(N):\n  for j in range(3):\n    for k in range(3):\n      if B[i] == A[j][k]:\n        sheet[j][k] = 1\nif sheet[0][0] == 1 and sheet[0][1] == 1 and sheet[0][2] == 1:\n  print('Yes')\nelif sheet[1][0] == 1 and sheet[1][1] == 1 and sheet[1][2] == 1:\n  print('Yes')\nelif sheet[2][0] == 1 and sheet[2][1] == 1 and sheet[2][2] == 1:\n  print('Yes')\nelif sheet[0][0] == 1 and sheet[1][0] == 1 and sheet[2][0] == 1:\n  print('Yes')\nelif sheet[0][1] == 1 and sheet[1][1] == 1 and sheet[2][1] == 1:\n  print('Yes')\nelif sheet[0][2] == 1 and sheet[1][2] == 1 and sheet[2][2] == 1:\n  print('Yes')\nelif sheet[0][0] == 1 and sheet[1][1] == 1 and sheet[2][2] == 1:\n  print('Yes')\nelif sheet[2][0] == 1 and sheet[1][1] == 1 and sheet[0][2] == 1:\n  print('Yes')\nelse:\n  print('No')", "a_3_3 = [list(map(int, input().split())) for _ in range(3)]\nn = int(input())\nb_n = [int(input()) for _ in range(n)]\n\n\nclass Info:\n    def __init__(self, a_3_3, n, b_n):\n        self.a_3_3 = a_3_3\n        self.n = n\n        self.b_n = b_n\n\n    @staticmethod\n    def setting():\n        for num in b_n:\n            for line in a_3_3:\n                if num in line:\n                    line[line.index(num)] = 0\n        return a_3_3\n\n    @staticmethod\n    def result():\n        diagonal_lurd = a_3_3[0][0] + a_3_3[1][1] + a_3_3[2][2]\n        diagonal_ldru = a_3_3[2][0] + a_3_3[1][1] + a_3_3[0][2]\n\n        for index, line in enumerate(a_3_3):\n            row_sum = sum(line)\n            col_sum = a_3_3[0][index] + a_3_3[1][index] + a_3_3[2][index]\n            if diagonal_lurd == 0 or diagonal_ldru == 0 or row_sum == 0 or col_sum == 0:\n                print('Yes')\n                return\n\n        print('No')\n\n\ninfo = Info(a_3_3, n, b_n)\ninfo.setting()\ninfo.result()\n", "a = [list(map(int,input().split())) for _ in range(3)]\nn = int(input())\nb = [int(input()) for _ in range(n)]\n\nc = [[0]*3 for _ in range(3)]\n\nfor k in range(n):\n  for i in range(3):\n    for j in range(3):\n      if a[i][j] == b[k]:\n        c[i][j] += 1\n        \nfor i in range(3):\n  if c[0][i] == c[1][i] == c[2][i] == 1:\n    print(\"Yes\")\n    return\nfor j in range(3):\n  if c[j][0] == c[j][1] == c[j][2] == 1:\n    print(\"Yes\")\n    return\nif c[0][0] == c[1][1] == c[2][2] == 1:\n  print(\"Yes\")\n  return\nif c[0][2] == c[1][1] == c[2][0] == 1:\n  print(\"Yes\")\n  return\nprint(\"No\")", "A_11,A_12,A_13=list(map(int,input().split()))\nA_21,A_22,A_23=list(map(int,input().split()))\nA_31,A_32,A_33=list(map(int,input().split()))\nN=int(input())\nLi=[A_11,A_12,A_13,A_21,A_22,A_23,A_31,A_32,A_33]\nfor i in range(N):\n  b=int(input())\n  if b in Li:\n    Num=Li.index(b)\n    Li[Num]=0\n\nif Li[0]==Li[1]==Li[2]==0 or Li[3]==Li[4]==Li[5]==0 or Li[6]==Li[7]==Li[8]:\n  print(\"Yes\")\nelif Li[0]==Li[3]==Li[6]==0 or Li[1]==Li[4]==Li[7]==0 or Li[2]==Li[5]==Li[8]:\n  print(\"Yes\")\nelif Li[0]==Li[4]==Li[8]==0 or Li[2]==Li[4]==Li[6]==0:\n  print(\"Yes\")\nelse:\n  print(\"No\")\n", "A = [list(map(int, input().split())) for _ in range(3)]\nfor j in range(3): A.append([A[i][j] for i in range(3)])\nA.append([A[0][0], A[1][1], A[2][2]])\nA.append([A[2][0], A[1][1], A[0][2]])\nd = {int(input()): 0 for _ in range(int(input()))}\nprint(\"YNeos\"[all(any(d.get(v, 1) for v in r) for r in A)::2])", "def main():\n    card = [[int(j) for j in input().split()] for i in range(3)]\n    n = int(input())\n    def punch(v):\n        for i in range(len(card)):\n            for j in range(len(card[i])):\n                if card[i][j] == v:\n                    card[i][j] = True\n        return card\n\n    def check(board):\n        for i in range(len(board)):\n            l = list(set(board[i]))\n            if len(l)==1 and l[0] ==True:\n                return True\n        for i in range(len(board[0])):\n            if board[0][i] == board[1][i]==board[2][i] == True:\n                return True\n        if board[0][0] == board[1][1]==board[2][2] == True:\n            return True\n        if board[0][2] == board[1][1]==board[2][0] == True:\n            return True\n\n    for _ in range(n):\n        num = int(input())\n        if check(punch(num)):\n            return \"Yes\"\n    return \"No\"\n\n\n    print(card)\n\ndef __starting_point():\n    print(main())\n__starting_point()", "import numpy as np\n\nCARD_SIZE = 3\n\n\ndef solve(card, called_numbers):\n    checked_card = np.vectorize(lambda n: n in called_numbers)(card)\n\n    for l in checked_card:\n        if all(l):\n            return True\n\n    for l in zip(*checked_card):\n        if all(l):\n            return True\n\n    if all([checked_card[n][n] for n in range(CARD_SIZE)]):\n        return True\n    if all([checked_card[n][CARD_SIZE - n - 1] for n in range(CARD_SIZE)]):\n        return True\n\n    return False\n\n\ndef resolve():\n    card = [[int(row) for row in input().split()] for _ in range(CARD_SIZE)]\n\n    N = int(input())\n    called_numbers = {int(input()) for n in range(N)}\n\n    ret = solve(card, called_numbers)\n\n    print(\"Yes\" if ret else \"No\")\n\n\ndef __starting_point():\n    resolve()\n__starting_point()", "A = [[int(i) for i in input().split()] for j in range(3)]\nN = int(input())\nb = [int(input()) for i in range(N)]\nfor i in range(N):\n    for j in range(3):\n        for k in range(3):\n            if(b[i] == A[j][k]):\n                A[j][k] = 0\nfor i in range(3):\n    if(A[i][0] == A[i][1] and A[i][1] == A[i][2]):\n        print(\"Yes\")\n        return\n    if(A[0][i] == A[1][i] and A[1][i] == A[2][i]):\n        print(\"Yes\")\n        return\nif(A[0][0] == A[1][1] and A[1][1] == A[2][2]):\n    print(\"Yes\")\n    return\nif(A[0][2] == A[1][1] and A[1][1] == A[2][0]):\n    print(\"Yes\")\n    return\nprint(\"No\")", "a = [list(map(int, input().split())) for i in range(3)]\nn = int(input())\nb = [int(input()) for i in range(n)]\n\nfor i in b:\n    for j in range(0,3):\n        for k in range(0,3):\n            if i == a[j][k]:\n                a[j][k] = 0\n\n\nif a[0][0]==0 and a[0][1]==0 and a[0][2]==0:\n    print(\"Yes\")\nelif a[1][0]==0 and a[1][1]==0 and a[1][2]==0:\n    print(\"Yes\")\nelif a[2][0]==0 and a[2][1]==0 and a[2][2]==0:\n    print(\"Yes\")\nelif a[0][0]==0 and a[1][0]==0 and a[2][0]==0:\n    print(\"Yes\")\nelif a[0][1]==0 and a[1][1]==0 and a[2][1]==0:\n    print(\"Yes\")\nelif a[0][2]==0 and a[1][2]==0 and a[2][2]==0:\n    print(\"Yes\")\nelif a[0][0]==0 and a[1][1]==0 and a[2][2]==0:\n    print(\"Yes\")\nelif a[0][2]==0 and a[1][1]==0 and a[2][0]==0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "from typing import List\n\n\ndef answer(a: List[List[int]], n: int, b: List[int]) -> str:\n    bingo_card = list([i[j] in b for i in a] for j in range(3))\n    for i in range(2):\n        for j in bingo_card:\n            if all(j):\n                return 'Yes'\n        if i == 0:\n            bingo_card = list(zip(*bingo_card))\n\n    if bingo_card[0][0] and bingo_card[1][1] and bingo_card[2][2]:\n        return 'Yes'\n    if bingo_card[0][2] and bingo_card[1][1] and bingo_card[2][0]:\n        return 'Yes'\n\n    return 'No'\n\n\ndef main():\n    a = [list(map(int, input().split())) for _ in range(3)]\n    n = int(input())\n    b = list(int(input()) for _ in range(n))\n    print(answer(a, n, b))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "def check(arr):\n    # \u6a2a\u30c1\u30a7\u30c3\u30af\n    for i in range(len(arr)):\n        if arr[i] == [\"x\", \"x\", \"x\"]:\n            return True\n\n    # \u7e26\u30c1\u30a7\u30c3\u30af\n    for i in range(3):\n        if arr[0][i] == \"x\" and arr[1][i] == \"x\" and arr[2][i] == \"x\":\n            return True\n\n    # \u659c\u3081\u30c1\u30a7\u30c3\u30af\n    if arr[0][0] == \"x\" and arr[1][1] == \"x\" and arr[2][2] == \"x\":\n        return True\n    elif arr[0][2] == \"x\" and arr[1][1] == \"x\" and arr[2][0] == \"x\":\n        return True\n\n    return False\n\narr = []\nfor _ in range(3):\n    arr.append(list(map(int, input().split(' '))))\n\nn = int(input())\nfor _ in range(n):\n    b = int(input())\n    for i in range(len(arr)):\n        tmp_arr = []\n        for ele in arr[i]:\n            if b == ele:\n                tmp_arr.append(\"x\")\n            else:\n                tmp_arr.append(ele)\n        arr[i] = tmp_arr\n\nif check(arr) == True:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "A = [0 for i in range(9)]\nfor i in range(3):\n  A[3*i], A[3*i+1], A[3*i+2] = map(int, input().split())\nN = int(input())\nb = [0 for i in range(N)]\nfor i in range(N):\n  b[i] = int(input())\n\n#Check matching numbers\nfor i in range(9):\n  for j in range(N):\n    if A[i] == b[j]:\n      A[i] = 1\n\n# Check bingo or not\nflag = 0\n# Check rows\nfor i in [0, 3, 6]:\n  if A[i]==A[i+1] and A[i+1]==A[i+2]:\n    flag += 1\n# Check colums\nfor j in range(3):\n  if A[j]==A[j+3] and A[j+3]==A[j+6]:\n    flag += 1\n# Check naname?\nif (A[0]==A[4] and A[4]==A[8]) or (A[2]==A[4] and A[4]==A[6]):\n  flag += 1\n\nif flag >= 1:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "A = {}\nfor i in range(3) :\n    a1,a2,a3 = map(int, input().split())\n    A[a1] = (i,0)\n    A[a2] = (i,1)\n    A[a3] = (i,2)\n\nN = int(input())\nA2 = [[False,False,False] for i in range(3)]\n\nfor i in range(N):\n    b = int(input())\n    if(b not in A) :\n        continue\n    r,c = map(int,A[b])\n    A2[r][c] = True\n\ndef isBingo(table) :\n    for r in range(3) :\n        if(table[r][0] and table[r][1] and table[r][2]) :\n            return True\n    for c in range(3) :\n        if(table[0][c] and table[1][c] and table[2][c]) :\n            return True\n    if(table[0][0] and table[1][1] and table[2][2]) :\n        return True\n    if(table[0][2] and table[1][1] and table[2][0]) :\n        return True\n    return False\n\nif(isBingo(A2)) :\n    print(\"Yes\")\nelse :\n    print(\"No\")", "A = [list(map(int,input().split())) for _ in range(3)]\nN = int(input())\nb = [int(input()) for _ in range(N)]\nc = [[0]*3 for _ in range(3)]\nfor x in b:\n  for i in range(3):\n    for j in range(3):\n      if A[i][j] == x:\n        c[i][j] = 1\n\nif c[0] == [1,1,1] or c[1] == [1,1,1] or c[2] == [1,1,1]:\n  print(\"Yes\")\nelif [c[0][0], c[1][0], c[2][0]] == [1,1,1] or [c[0][1], c[1][1], c[2][1]] == [1,1,1] or [c[0][2], c[1][2], c[2][2]] == [1,1,1]:\n  print(\"Yes\")\nelif [c[0][0], c[1][1], c[2][2]] == [1,1,1] or [c[2][0], c[1][1], c[0][2]] == [1,1,1]:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "A=[list(map(int,input().split())) for i in range(3)]\nn=int(input())\nb=[int(input()) for i in range(n)]\nfor i in range(3):\n    for j in range(3):\n        for k in range(n):\n            if A[i][j]==b[k]:\n                A[i][j]=-1\nif A[0][0]==-1 and A[1][1]==-1 and A[2][2]==-1:\n    print(\"Yes\")\n    return\nelif A[0][2]==-1 and A[1][1]==-1 and A[2][0]==-1:\n    print(\"Yes\")\n    return\nfor i in range(3):\n    total=0\n    if A[i].count(-1)==3:\n        print(\"Yes\")\n        return\n    for j in range(3):\n        if A[j][i]==-1:\n            total+=1\n    if total==3:\n        print(\"Yes\")\n        return\nprint(\"No\")", "a = [list(map(int, input().split())) for i in range(3)]\nn =int(input())\n\nfor k in range(n):\n    b = int(input())\n    for i in range(3):\n        for j in range(3):\n            if a[i][j] == b:\n                a[i][j] = 0\n    row0 = a[0] == [0, 0, 0]\n    row1 = a[1] == [0, 0, 0]\n    row2 = a[2] == [0, 0, 0]\n    colum0 = [a[0][0], a[1][0], a[2][0]] == [0, 0, 0]\n    colum1 = [a[0][1], a[1][1], a[2][1]] == [0, 0, 0]\n    colum2 = [a[0][2], a[1][2], a[2][2]] == [0, 0, 0]\n    diag0 = [a[0][0], a[1][1], a[2][2]] == [0, 0, 0]\n    diag1 = [a[2][0], a[1][1], a[0][2]] == [0, 0, 0]\n    if row0 or row1 or row2 or colum0 or colum1 or colum2 or diag0 or diag1:\n        print('Yes')\n        break\nelse:\n    print('No')", "def main():\n  A = []\n  C = [False] * 9\n  for i in range(3):\n    a0, a1, a2 = map(int, input().split())\n    A.append(a0)\n    A.append(a1)\n    A.append(a2)\n    \n  N = int(input())\n  for i in range(N):\n    b = int(input())\n    if b in A:\n      C[A.index(b)] = True\n\n  for i in range(3):\n    if C[0+3*i] and C[1+3*i] and C[2+3*i]:\n      print(\"Yes\")\n      return\n\n  for i in range(3):\n    if C[i] and C[i+3] and C[i+6]:\n      print(\"Yes\")\n      return\n\n  if C[0] and C[4] and C[8]:\n    print(\"Yes\")\n    return\n\n  if C[2] and C[4] and C[6]:\n    print(\"Yes\")\n    return\n\n  print(\"No\")\n\n    \nmain()", "a = [list(map(int,input().split())) for _ in range(3)]\nn = int(input())\nb = [int(input()) for _ in range(n)]\n#\u884c\u306e\u5224\u5b9a\nfor i in range(3):\n  for j in range(3):\n    if a[i][j] not in b:\n      break\n    elif j == 2:\n      print(\"Yes\")\n      return\n#\u5217\u306e\u5224\u5b9a\nfor i in range(3):\n  for j in range(3):\n    if a[j][i] not in b:\n      break\n    elif j == 2:\n      print(\"Yes\")\n      return\n#\u306a\u306a\u3081\u306e\u5224\u5b9a\nif a[0][0] in b and a[1][1] in b and a[2][2] in b:\n  print(\"Yes\")\n  return\nif a[0][2] in b and a[1][1] in b and a[2][0] in b:\n  print(\"Yes\")\n  return\nprint(\"No\")", "l = [list(map(int, input().split())) for i in range(3)]\nn = int(input())\ns = set([int(input()) for j in range(n)])\n\nans = \"No\"\n\nfor i in range(3):\n    if l[i][0] in s and l[i][1] in s and l[i][2] in s:\n        ans = \"Yes\"\n\nfor i in range(3):\n    if l[0][i] in s and l[1][i] in s and l[2][i] in s:\n        ans = \"Yes\"\n\nif l[0][0] in s and l[1][1] in s and l[2][2] in s:\n    ans = \"Yes\"\nelif l[0][2] in s and l[1][1] in s and l[2][0] in s:\n    ans = \"Yes\"\n\nprint(ans)", "import math\ndef i_input(): return int(input())\n\n\ndef i_map(): return map(int, input().split())\n\n\ndef i_list(): return list(map(int, input().split()))\n\n\ndef i_row(N): return [int(input()) for _ in range(N)]\n\n\ndef i_row_list(N): return [list(map(int, input().split())) for _ in range(N)]\n\naaa= i_row_list(3)\nn=i_input()\nb=i_row(n)\nans='No'\nfor i in range(3):\n    for j in range(3):\n        if aaa[i][j] in b:\n            aaa[i][j]=0\nxlos1=0\nxlos2=0\nfor i in range(3):\n    colm=0\n    rows=0\n\n    for j in range(3):\n        colm+=aaa[i][j]\n        rows+=aaa[j][i]\n    xlos1+=aaa[i][i]\n    xlos2+=aaa[2-i][i]\n    if colm==0 or rows==0:\n        ans='Yes'\n        break\nif ans!='Yes':\n    if xlos1==0 or xlos2==0:\n        ans='Yes'\n\n\nprint(ans)", "def Judge(a):\n  col=[]\n  diag1=0\n  diag2=0\n\n  for i in range(3):\n    if(a[i].count(0)==3):\n      return 1\n      break\n    if(a[i][0]==0):\n      col.append(0)\n    if(a[i][1]==0):\n      col.append(1)\n    if(a[i][2]==0):\n      col.append(2)\n    if(a[i][i]==0):\n      diag1+=1\n    if(a[i][-(i+1)]==0):\n      diag2+=1\n  if(diag1==3 or diag2==3):\n    return 1\n  if(col.count(0)==3 or col.count(1)==3 or col.count(2)==3):\n    return 1\n  return 0\n\n\na=[]\nfor i in range(3):\n  a.append(list(map(int,input().split())))\nn=int(input())\nfor i in range(n):\n  b=int(input())\n  for j in range(3):\n    for k in range(3):\n      if(b==a[j][k]):\n        a[j][k]=0\njudge=Judge(a)\nif(judge==1):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "A = [list(map(int, input().split())) for _ in range(3)]\nn = int(input())\nb = [int(input()) for _ in range(n)]\ncdl = 0\ncdr = 0\nfor i in range(3):\n    cr = 0\n    cc = 0\n    for j in range(3):\n        if A[i][j] in b:\n            cr += 1\n        if A[j][i] in b:\n            cc += 1\n        if i == j and A[i][j] in b:\n            cdl += 1\n        if i+j==2 and A[i][j] in b:\n            cdr += 1\n\n    if cr == 3 or cc == 3 or cdl == 3 or cdr ==3:\n        print('Yes')\n        return\nprint('No')", "def resolve():\n\ta = []\n\tbingo = [(0,3,6),(1,4,7),(2,5,8),(0,1,2),(3,4,5)\n\t\t\t ,(6,7,8),(0,4,8),(2,4,6)]\n\tfor _ in range(3):\n\t\ta += list(map(int,input().split()))\n\tfor i in range(int(input())):\n\t\tr = int(input())\n\t\tif r in a:\n\t\t\ta[a.index(r)]=0\n\tans = 'No'\n\tfor i in bingo:\n\t\tif a[i[0]] == 0 and a[i[1]]==0 and a[i[2]]==0:\n\t\t\tans ='Yes'\n\tprint(ans)\nresolve()", "# coding=utf-8\nimport sys\n\ndef __starting_point():\n    bingo = [[0] * 3 for i in range(3)]\n\n    ans = [[0] * 3 for i in range(3)]\n    for i in range(3):\n        temp = list(map(int, input().split()))\n        for j in range(3):\n            bingo[i][j] = temp[j]\n\n    N = int(input())\n\n    for i in range(N):\n        b = int(input())\n        for j in range(3):\n            for k in range(3):\n                if bingo[j][k] == b:\n                    ans[j][k] = 1\n\n    #print(bingo, ans)\n\n\n    for i in range(3):\n        if (ans[0][i] + ans[1][i] + ans[2][i]) == 3:\n            print(\"Yes\")\n            return\n\n    for i in range(3):\n        if (ans[i][0] + ans[i][1] + ans[i][2]) == 3:\n            print(\"Yes\")\n            return\n\n    #naname\n    if (ans[0][0] + ans[1][1] + ans[2][2]) == 3:\n        print(\"Yes\")\n        return\n\n    if (ans[0][2] + ans[1][1] + ans[2][0]) == 3:\n        print(\"Yes\")\n        return\n\n    print('No')\n\n__starting_point()", "a = [list(map(int, input().split())) for _ in range(3)]\nn = int(input())\nb = [int(input()) for _ in range(n)]\nfor i in range(3):\n    for j in range(3):\n        if (a[i][j] in b):\n            a[i][j] = 0\n#print(a)\ntnp = 0\nfor i in range(3):\n    if (sum(a[i])==0):\n        tnp += 1\nfor i in range(3):\n    if (a[0][i]+a[1][i]+a[2][i]==0):\n        tnp += 1\nif (a[0][0]+a[1][1]+a[2][2]==0):\n    tnp += 1\nif (a[0][2] + a[1][1] + a[2][0]==0):\n    tnp += 1\nif (tnp>0):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "def main():\n    a = [list(map(int, input().split())) for _ in range(3)]\n    n = int(input())\n    b = [int(input()) for _ in range(n)]\n    if a[0][0] in b and a[0][1] in b and a[0][2] in b or \\\n        a[1][0] in b and a[1][1] in b and a[1][2] in b or \\\n            a[2][0] in b and a[2][1] in b and a[2][2] in b or \\\n                a[0][0] in b and a[1][0] in b and a[2][0] in b or \\\n                    a[0][1] in b and a[1][1] in b and a[2][1] in b or \\\n                        a[0][2] in b and a[1][2] in b and a[2][2] in b or \\\n                            a[0][0] in b and a[1][1] in b and a[2][2] in b or \\\n                                a[0][2] in b and a[1][1] in b and a[2][0] in b:\n                                    print('Yes')\n    else:\n        print('No')\n        \ndef __starting_point():\n    main()\n__starting_point()", "a = [list(map(int,input().split())) for i in range(3)]\nn = int(input())\nb = [int(input()) for i in range(n)]\nfor i in range(3):\n  for j in range(3):\n    if a[i][j] in b:\n      a[i][j] = \"o\"\nfor i in range(3):\n  if a[i][0] == a[i][1] == a[i][2]:\n    print(\"Yes\")\n    return\n  elif a[0][i] == a[1][i] == a[2][i]:\n    print(\"Yes\")\n    return\n  elif a[0][0] == a[1][1] == a[2][2]:\n    print(\"Yes\")\n    return\n  elif a[0][2] == a[1][1] == a[2][0]:\n    print(\"Yes\")\n    return\n  elif i == 2:\n    print(\"No\")", "a = [list(map(int,input().split())) for i in range(3)]\nn = int(input())\nb = [int(input()) for i in range(n)]\nfor i in range(3):\n  for j in range(3):\n    if a[i][j] in b:\n      a[i][j] = \"o\"\nfor i in range(3):\n  if a[i][0] == a[i][1] == a[i][2]:\n    print(\"Yes\")\n    return\n  elif a[0][i] == a[1][i] == a[2][i]:\n    print(\"Yes\")\n    return\n  elif a[0][0] == a[1][1] == a[2][2]:\n    print(\"Yes\")\n    return\n  elif a[0][2] == a[1][1] == a[2][0]:\n    print(\"Yes\")\n    return\n  elif i == 2:\n    print(\"No\")", "arr1 = list(map(int, input().split()))\narr2 = list(map(int, input().split()))\narr3 = list(map(int, input().split()))\nn = int(input())\nfor _ in range(n):\n    x = int(input())\n    if x in arr1:\n        arr1[arr1.index(x)] -= x\n    elif x in arr2:\n        arr2[arr2.index(x)] -= x\n    elif x in arr3:\n        arr3[arr3.index(x)] -= x\n    if _ >= 3:\n        if arr1[0] == arr1[1] and arr1[1] == arr1[2]:\n            print(\"Yes\")\n            return\n        if arr2[0] == arr2[1] and arr2[1] == arr2[2]:\n            print(\"Yes\")\n            return\n        if arr3[0] == arr3[1] and arr3[1] == arr3[2]:\n            print(\"Yes\")\n            return\n        for jj in range(3):\n            if arr1[jj] == arr2[jj] and arr2[jj] == arr3[jj]:\n                print(\"Yes\")\n                return\n        if arr1[0] == arr2[1] and arr2[1] == arr3[2]:\n            print(\"Yes\")\n            return\n        if arr1[2] == arr2[1] and arr2[1] == arr3[0]:\n            print(\"Yes\")\n            return\nprint(\"No\")", "a = input()\na = a.split()\nb = input()\nb = b.split()\nc = input()\nc = c.split()\nd = [a[0],b[0],c[0]]\ne = [a[1],b[1],c[1]]\nf = [a[2],b[2],c[2]]\ng = [a[0],b[1],c[2]]\nh = [a[2],b[1],c[0]]\nn = int(input())\nfor i in range(n):\n    j = int(input())\n    for k in range(3):\n        if int(a[k])==j:\n            a.pop(k)\n            a.insert(k,0)\n        if int(b[k])==j:\n            b.pop(k)\n            b.insert(k,0)\n        if int(c[k])==j:\n            c.pop(k)\n            c.insert(k,0)\n        if int(d[k])==j:\n            d.pop(k)\n            d.insert(k,0)\n        if int(e[k])==j:\n            e.pop(k)\n            e.insert(k,0)\n        if int(f[k])==j:\n            f.pop(k)\n            f.insert(k,0)\n        if int(g[k])==j:\n            g.pop(k)\n            g.insert(k,0)\n        if int(h[k])==j:\n            h.pop(k)\n            h.insert(k,0)\nif a == [0,0,0] or b == [0,0,0] or c == [0,0,0] or d == [0,0,0] or e == [0,0,0] or f == [0,0,0] or g == [0,0,0] or h == [0,0,0]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "A = [list(map(int,input().split())) for i in range(3)]\nN = int(input())\nfor i in range(N):\n    b = int(input())\n    for j in range(3):\n        for k in range(3):\n            if A[j][k] == b:\n                A[j][k] = 0\nans = \"No\"\nfor i in range(3):\n    if A[i] == [0,0,0]:\n        ans = \"Yes\"\n        break\n    for j in range(3):\n        if A[j][i] != 0:\n            break\n    else:\n        ans = \"Yes\"\n        break\nfor i in range(3):\n    if A[i][i] != 0:\n        break\nelse:\n    ans = \"Yes\"\nif A[0][2] == 0 and A[1][1] == 0 and A[2][0] == 0:\n    ans = \"Yes\"\nprint(ans)", "A = []\nP = ['o']*9\nfor i in range(3):\n    a = [int(i) for i in input().split()]\n    for j in range(3):\n        A.append(a[j])\n\nN = int(input())\nfor i in range(N):\n    b = int(input())\n    for j in range(9):\n        if A[j] == b:\n            P[j] = 'x'\n\nt = 0\nfor i in range(3):\n    if (P[i] == P[i+3] == P[i+6] == 'x') or (P[3*i] == P[3*i+1] == P[3*i+2] == 'x'):\n        t += 1\n        break\nif (P[0] == P[4] == P[8] == 'x') or (P[2] == P[4] == P[6] == 'x'):\n    t += 1\n\nif t == 0:\n    print('No')\nelse:\n    print('Yes')", "import numpy as np\n\narr = np.array([list(map(int, input().split())) for _ in range(3)])\n\n\nn = int(input())\n\nfor _ in range(n):\n    b = int(input())\n    arr[np.where(arr == b)] = 0\n\nans1 = (np.sum(arr, axis=0) == 0).sum() >= 1\nans2 = (np.sum(arr, axis=1) == 0).sum() >= 1\nans3 = (np.diag(arr) == 0).sum() == 3\nans4 = (np.diag(np.rot90(arr)) == 0).sum() == 3\n\nprint(\"Yes\" if ans1 or ans2 or ans3 or ans4 else \"No\")", "A11,A12,A13 = list(map(int,input().split()))\nA21,A22,A23 = list(map(int,input().split()))\nA31,A32,A33 = list(map(int,input().split()))\nA = [[A11,A12,A13],[A21,A22,A23],[A31,A32,A33]]\n\nN = int(input())\nb = [int(input()) for _ in range(N)]\n\nfor i in range(3):\n    for j in range(3):\n        if A[i][j] in b:\n            A[i][j] = 'YES'\n\n\nif A[1][1]=='YES':\n    if A[1][0]==A[1][2]=='YES' or A[0][1]==A[2][1]=='YES' or A[0][0]==A[2][2]=='YES' or A[0][2]==A[2][0]=='YES':\n        print('Yes')\n    else:\n        print('No')\n\nelse:\n    if A[0][0]==A[0][1]==A[0][2]=='YES' or A[0][0]==A[1][0]==A[2][0]=='YES' or A[2][0]==A[2][1]==A[2][2]=='YES' or A[0][2]==A[1][2]==A[2][2]=='YES':\n        print('Yes')\n\n    else:\n        print('No')\n\n\n", "l = [list(map(int,input().split())) for i in range(3)]\nn = int(input())\nb = list(int(input()) for _ in range(n))\nfor i in range(3) :\n    for j in range(3) :\n        for k in range(n) :\n            if l[i][j] == b[k] :\n                l[i][j] = 0\n\nfor i in range(3) :\n    if l[i][0] + l[i][1] + l[i][2] == 0 :\n        print('Yes')\n        return\n    if l[0][i] + l[1][i] + l[2][i] == 0 :\n        print('Yes')\n        return\n    if l[0][0] + l[1][1] + l[2][2] == 0 :\n        print('Yes')\n        return\n    if  l[0][2] + l[1][1] + l[2][0] == 0 :\n        print('Yes')\n        return\nprint('No')", "bingo = []\nkiroku = [[0,0,0] for i in range(3)]\nfor i in range(3):\n    a,b,c = map(int,input().split())\n    bingo.append([a,b,c])\n\nn =  int(input())\nfor j in range(n):\n    num = int(input())\n    for k in range(3):\n        for l in range(3):\n            if bingo[k][l] == num:\n                kiroku[k][l] = 1\nans = 0\n\nfor i in range(3):\n    if (kiroku[i][0] == kiroku[i][1] == kiroku[i][2] == 1) or (kiroku[0][i] == kiroku[1][i] == kiroku[2][i] == 1):\n        ans = 1\n        break\nif (kiroku[0][0] == kiroku[1][1] == kiroku[2][2] == 1) or (kiroku[0][2] == kiroku[1][1] == kiroku[2][0] == 1):\n    ans = 1\n\n\nif ans == 1:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "a=[list(map(int,input().split())),list(map(int,input().split())),list(map(int,input().split()))]\nN=int(input())\nb=list()\nfor i in range(0,N):\n    b.append(int(input()))\nfor j in range(0,3):\n    for k in range(0,3):\n        for i in range(0,N):\n            if a[j][k]==b[i]:\n                a[j][k]=0\nfor i in range(0,3):\n    if a[i][0]==a[i][1] and a[i][1]==a[i][2]:\n        print(\"Yes\")\n        break\n    elif a[0][i]==a[1][i] and a[1][i]==a[2][i]:\n        print(\"Yes\")\n        break\n    elif a[0][0]==a[1][1] and a[1][1]==a[2][2]:\n        print(\"Yes\")\n        break\n    elif a[2][0]==a[1][1] and a[1][1]==a[0][2]:\n        print(\"Yes\")\n        break\nelse:\n    print(\"No\")\n\n", "l = [ list(map(int,input().split(\" \"))) for i in range(3)]\nn=int(input())\nfor i in range(n):\n    b=int(input())\n    for j in range(3):\n        for k in range(3):\n            if l[j][k]==b:\n                l[j][k]=-1\nif l[0][0]==-1 and l[0][1]==-1 and l[0][2]==-1:\n    print(\"Yes\")\nelif l[1][0]==-1 and l[1][1]==-1 and l[1][2]==-1:\n    print(\"Yes\")\nelif l[2][0]==-1 and l[2][1]==-1 and l[2][2]==-1:\n    print(\"Yes\")\nelif l[0][0]==-1 and l[1][0]==-1 and l[2][0]==-1:\n    print(\"Yes\")\nelif l[0][1]==-1 and l[1][1]==-1 and l[2][1]==-1:\n    print(\"Yes\")\nelif l[0][2]==-1 and l[1][2]==-1 and l[2][2]==-1:\n    print(\"Yes\")\nelif l[0][0]==-1 and l[1][1]==-1 and l[2][2]==-1:\n    print(\"Yes\")\nelif l[0][2]==-1 and l[1][1]==-1 and l[2][0]==-1:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "import sys\n\ninput = sys.stdin.readline\n\nbingo = []\nfor _ in range(3):\n    bingo.append(list(map(int, input().split())))\n\nN = int(input())\nnums = []\nfor _ in range(N):\n    nums.append(int(input()))\n\nfor num in nums:\n    for i in range(3):\n        for j in range(3):\n            if bingo[i][j] == num:\n                bingo[i][j] = -1\n\nfor i in range(3):\n    if sum(bingo[i]) == -3:\n        print(\"Yes\")\n        return\n    tmp = 0\n    for j in range(3):\n        tmp += bingo[j][i]\n    if tmp == -3:\n        print(\"Yes\")\n        return\nif bingo[0][0] == -1 and bingo[1][1] == -1 and bingo[2][2] == -1:\n    print(\"Yes\")\n    return\nif bingo[0][2] == -1 and bingo[1][1] == -1 and bingo[0][2] == -1:\n    print(\"Yes\")\n    return\n\nprint(\"No\")", "A11,A12,A13 = map(int,input().split())\nA21,A22,A23 = map(int,input().split())\nA31,A32,A33 = map(int,input().split())\nA =[[A11,A12,A13],[A21,A22,A23],[A31,A32,A33]]\nN =int(input())\nb = []\nfor x in range(N):\n    b.append(int(input()))\n    for i in range(3):\n        for j in range(3):\n            A[i][j] = 'YES' if b[x] == A[i][j] else A[i][j]\nif A[0][0]==A[0][1]==A[0][2]=='YES' or A[1][0]==A[1][1]==A[1][2]=='YES' or A[2][0]==A[2][1]==A[2][2]=='YES' or \\\nA[0][0]==A[1][0]==A[2][0]=='YES' or A[0][1]==A[1][1]==A[2][1]=='YES' or A[0][2]==A[1][2]==A[2][2]=='YES' or \\\nA[0][0]==A[1][1]==A[2][2]=='YES' or A[0][2]==A[1][1]==A[2][0]=='YES' :\n    print('Yes')\nelse :\n    print('No')", "table=[[0]*3 for _ in range(3)]\nA=[list(map(int,input().split())) for _ in range(3)]\nA=sum(A,[])\nN=int(input())\nB=[int(input()) for _ in range(N)]\n\nfor b in B:\n    tmp=[i for i,x in enumerate(A) if x==b]\n    for t in tmp:\n        table[t//3][t%3]=1\n\nflag=False\nn1,n2=0,0\nfor i in range(3):\n    if sum(table[i])==3: flag=True\n    if sum([table[j][i] for j in range(3)])==3: flag=True\n    n1+=table[i][i]\n    n2+=table[i][2-i]\nif n1==3 or n2==3: flag=True\nif flag: print('Yes')\nelse: print('No')\n", "a,b,c = list(map(int,input().split()))\nd,e,f = list(map(int,input().split()))\ng,h,i = list(map(int,input().split()))\n\nx = []\ny = [a,b,c,d,e,f,g,h,i]\n\nn = int(input())\nfor s in range(n):\n  x.append(int(input()))\n\nfor m in range(9):\n  if y[m] in x:\n      y[m] = 0\n\nif y[0] == y[1] == y[2] == 0:\n    print(\"Yes\")\nelif y[3] == y[4] == y[5] == 0:\n    print(\"Yes\")\n\nelif y[6] == y[7] == y[8] == 0:\n    print(\"Yes\")\n\nelif y[0] == y[3] == y[6] == 0:\n    print(\"Yes\")\n\nelif y[1] == y[4] == y[7] == 0:\n    print(\"Yes\")\n\nelif y[2] == y[5] == y[8] == 0:\n    print(\"Yes\")\n\nelif y[0] == y[4] == y[8] == 0:\n    print(\"Yes\")\n\nelif y[2] == y[4] == y[6] == 0:\n    print(\"Yes\")\n\nelse:\n\n    print(\"No\")\n", "import numpy as np\n\nA1=np.array(list(map(int,input().split())))\nA2=np.array(list(map(int,input().split())))\nA3=np.array(list(map(int,input().split())))\nA=np.concatenate([A1,A2,A3]).reshape(3,3)\n\nN=int(input())\n\nfor i in range(N):\n    b=int(input())\n    A[np.where(A==b)] = 0\n\nif np.all(A[0,:]==0) or np.all(A[1,:]==0) or np.all(A[2,:]==0) or np.all(A[:,0]==0) or np.all(A[:,1]==0) \\\n    or np.all(A[:,2]==0) or A[0,0]**2+A[1,1]**2+A[2,2]**2==0 or A[0,2]**2+A[1,1]**2+A[2,0]**2==0:\n    print('Yes')\nelse:\n    print('No')", "a = []\nfor i in range(3):\n    a.extend(list(map(int,input().split())))\nn = int(input())\nb = []\n\ncnt=[]\npattern=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]]\n\nfor i in range(n):\n    b.append(int(input()))\n    for j , x in enumerate(a):\n        if x == b[i]:\n            cnt.append(j)\n\nfor q,w,e in pattern:\n    if q in cnt and w in cnt and e in cnt:\n        print('Yes')\n        break\nelse:\n    print('No')", "L = [list(map(int, input().split())) for _ in range(3)]\nn = int(input())\nB = list(int(input()) for _ in range(n))\nans = 'No'\nfor i in range(3):\n  for j in range(3):\n    for b in B:\n      if L[i][j] == b:\n        L[i][j] = 0\n        \nfor i in range(3):\n  if L[i][0] == L[i][1] == L[i][2] == 0: ans = 'Yes' #\u6a2a\n  if L[0][i] == L[1][i] == L[2][i] == 0: ans = 'Yes' #\u7e26\nif L[0][0] == L[1][1] == L[2][2] == 0: ans = 'Yes'\nif L[0][2] == L[1][1] == L[2][0] == 0: ans = 'Yes'\n  \nprint(ans)", "rows = []\nfor _ in range(3):\n    A = list(map(int, input().split()))\n    rows.append(A)\n\nN = int(input())\n\nfor _ in range(N):\n    b = int(input())\n    for i in range(3):\n        for j in range(3):\n            if rows[i][j] == b:\n                rows[i][j] = 0\n\nif rows[0][0]+rows[0][1]+rows[0][2] == 0 or rows[1][0]+rows[1][1]+rows[1][2] == 0 or rows[2][0]+rows[2][1]+rows[2][2] == 0 \\\n    or rows[0][0]+rows[1][0]+rows[2][0] == 0 or rows[0][1]+rows[1][1]+rows[2][1] == 0 or rows[0][2]+rows[1][2]+rows[2][2] == 0 \\\n    or rows[0][0]+rows[1][1]+rows[2][2] == 0 or rows[0][2]+rows[1][1]+rows[2][0] == 0:\n    print('Yes')\nelse:\n    print('No')", "A = [list(map(int, input().split())) for _ in range(3)]\nN = int(input())\nb = [int(input()) for _ in range(N)]\n\nfor i in range(N):\n    for j in range(3):\n        for k in range(3):\n            if b[i] == A[j][k]:\n                A[j][k] = 0\nans = 'No'\nfor i in range(3):\n    if all(c == 0 for c in [A[i][0], A[i][1], A[i][2]]):\n        ans = 'Yes'\nfor i in range(3):\n    if all(c == 0 for c in [A[0][i], A[1][i], A[2][i]]):\n        ans = 'Yes'\nif all(c == 0 for c in [A[0][0], A[1][1], A[2][2]]):\n    ans = 'Yes'\nif all(c == 0 for c in [A[0][2], A[1][1], A[2][0]]):\n    ans = 'Yes'\nprint(ans)\n", "A = []\nfor i in range(3):\n  A += list(map(int,input().split()))\n\ncalled = [False] * 9\n\nbingo = ((0,1,2),(3,4,5),(6,7,8),(0,3,6),(1,4,7),(2,5,8),(0,4,8),(2,4,6))\n\nN = int(input())\nfor i in range(N):\n  target = int(input())\n  if target in A:\n    called[A.index(target)] = True\n  \nfor a,b,c in bingo:\n  if called[a] and called[b] and called[c]:\n    print(\"Yes\")\n    break\nelse:\n  print(\"No\")\n", "n=3\nnum_list = []\nfor i in range(n):\n    num_list.append(list(map(int,input().split())))\n\nN=int(input())\n\nlist1=[int(input()) for _ in range(N)]\n\nlist2=[]\ni=0\nwhile i<=2:\n    j=0\n    while j<=2:\n        list2.append(num_list[i][j])\n        j=j+1\n    i=i+1\n\ns=0\nfor k in list2:\n    if list1.count(k)==1:\n        list2[s]=101\n        s=s+1\n    else:\n        s=s+1\n        continue\n\nif list2[0]+list2[1]+list2[2]==303:\n    print('Yes')\nelif list2[3]+list2[4]+list2[5]==303:\n    print('Yes')\nelif list2[6]+list2[7]+list2[8]==303:\n    print('Yes')\nelif list2[0]+list2[3]+list2[6]==303:\n    print('Yes')\nelif list2[1]+list2[4]+list2[7]==303:\n    print('Yes')\nelif list2[2]+list2[5]+list2[8]==303:\n    print('Yes')\nelif list2[0]+list2[4]+list2[8]==303:\n    print('Yes')\nelif list2[2]+list2[4]+list2[6]==303:\n    print('Yes')\nelse:\n    print('No')\n", "def bingo(board):\n    if board[0][0] == board[0][1] == board[0][2]:\n        return True\n    if board[1][0] == board[1][1] == board[1][2]:\n        return True\n    if board[2][0] == board[2][1] == board[2][2]:\n        return True\n    if board[0][0] == board[1][0] == board[2][0]:\n        return True\n    if board[0][1] == board[1][1] == board[2][1]:\n        return True\n    if board[0][2] == board[1][2] == board[2][2]:\n        return True\n    if board[0][0] == board[1][1] == board[2][2]:\n        return True\n    if board[0][2] == board[1][1] == board[0][2]:\n        return True\n\n\nA = []\nb = []\nfor _ in range(3):\n    A.append(list(map(int, input().split())))\nn = int(input())\nfor _ in range(n):\n    b.append(int(input()))\n\nfor i in range(n):\n    for j in range(3):\n        for k in range(3):\n            if b[i] == A[j][k]:\n                A[j][k] = 0\n\nans = bingo(A)\nif ans:\n    print('Yes')\nelse:\n    print('No')\n", "a=[[*map(int,input().split())] for _ in range(3)]\nb=[int(input()) for _ in range(int(input()))]\nfor i in b:\n  for j in range(3):\n    if i in a[j]:\n      a[j][a[j].index(i)]=-1\nif a[0][0]+a[1][1]+a[2][2]==-3 or a[0][2]+a[1][1]+a[2][0]==-3:\n  print('Yes')\nelse:\n  for i,j in zip(a,[*zip(*a)]):\n    if sum(i)==-3 or sum(j)==-3:\n      print('Yes');break\n  else:\n    print('No')", "a1 = list(map(int, input().split()))\na2 = list(map(int, input().split()))\na3 = list(map(int, input().split()))\nn = int(input())\nflag = 0\nfor _ in range(n):\n    b = int(input())\n    for i in range(3):\n        if b == a1[i]:\n            a1[i] = 0\n        elif b == a2[i]:\n            a2[i] = 0\n        elif b == a3[i]:\n            a3[i] = 0\n    for i in range(3):\n        if a1[i] == a2[i] == a3[i]:\n            flag = 1\n        if sum(a1) == 0:\n            flag = 1\n        if sum(a2) == 0:\n            flag = 1\n        if sum(a3) == 0:\n            flag = 1\n        if a1[0] == a2[1] == a3[2]:\n            flag = 1\n        if a1[2] == a2[1] == a3[0]:\n            flag = 1\n    if flag == 1:\n        print(\"Yes\")\n        break\nif flag == 0:\n    print(\"No\")", "li = list(map(int,input().split()))\nli1 = list(map(int,input().split()))\nli2 = list(map(int,input().split()))\n\nn = int(input())\nli3 = []\nfor i in range(n):\n    li3.append(int(input()))\n\nfor i in range(3):\n    if li[i] in li3:\n        li[i] = 0\n    if li1[i] in li3:\n        li1[i] = 0\n    if li2[i] in li3:\n        li2[i] = 0\nsu = li[0] + li1[0] + li2[0]\nsu1 = li[1] + li1[1] + li2[1]\nsu2 = li[2] + li1[2] + li2[2]\nsu3 = li[0] + li1[1] + li2[2]\nsu4 = li[2] + li1[1] + li2[0]\nif sum(li)==0 or sum(li1)==0 or sum(li2)==0:\n    print('Yes')\nelif su == 0 or su1 == 0 or su2 == 0:\n    print('Yes')\nelif su3 == 0 or su4 == 0:\n    print('Yes')\nelse:\n    print('No')", "import sys\ninput = sys.stdin.readline\nins = lambda: input().rstrip()\nini = lambda: int(input().rstrip())\ninm = lambda: map(int, input().rstrip().split())\ninl = lambda: list(map(int, input().split()))\nout = lambda x, s='\\n': print(s.join(map(str, x)))\n\na = inl()\nb = inl()\nc = inl()\nn = ini()\nbingo = []\nfor _ in range(n):\n    bingo.append(ini())\nct = [0] * 9\nfor i in bingo:\n    if i in a:\n        ct[a.index(i)] = 1\n    if i in b:\n        ct[b.index(i) + 3] = 1\n    if i in c:\n        ct[c.index(i) + 6] = 1\nif sum(ct[:3]) == 3 or sum(ct[3:6]) == 3 or sum(ct[6:9]) == 3:\n    print(\"Yes\")\nelif (ct[0] + ct[4] + ct[8]) == 3 or (ct[2] + ct[4] + ct[6]) == 3:\n    print(\"Yes\")\nelif (ct[0] + ct[3] + ct[6]) == 3 or (ct[1] + ct[4] + ct[7]) == 3 or (ct[2] + ct[5] + ct[8]) == 3:\n    print(\"Yes\")\nelse:\n    print(\"No\")    ", "A = [[],[],[]]\nA[0] = [int(s) for s in input().split(' ')]\nA[1] = [int(s) for s in input().split(' ')]\nA[2] = [int(s) for s in input().split(' ')]\nN = int(input())\nB = []\nfor n in range(N):\n    b = int(input())\n    B.append(b)\nB = set(B)\nlines = []\nlines.append(set(A[0]))\nlines.append(set(A[1]))\nlines.append(set(A[2]))\nlines.append(set(A[i][i] for i in range(3)))\nlines.append(set(A[2 - i][i] for i in range(3)))\nlines.append(set(A[i][0] for i in range(3)))\nlines.append(set(A[i][1] for i in range(3)))\nlines.append(set(A[i][2] for i in range(3)))\nfor line in lines:\n    if len(line & B) == 3:\n        print('Yes')\n        return\nprint('No')\n", "def main():\n    A = [list(map(int, input().split())) for _ in range(3)]\n    n = int(input())\n\n    for _ in range(n):\n        b = int(input())\n\n        for i in range(3):\n            for j in range(3):\n                if A[i][j] == b:\n                    A[i][j] = 0\n\n    ans = 'No'\n    for i in range(3):\n        if any(A[i]) == 0:\n            ans = 'Yes'\n    for i in range(3):\n        if any([A[0][i], A[1][i], A[2][i]]) == 0:\n            ans = 'Yes'\n    if any([A[0][0], A[1][1], A[2][2]]) == 0:\n        ans = 'Yes'\n    if any([A[0][2], A[1][1], A[2][0]]) == 0:\n        ans = 'Yes'\n\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "a = [list(map(int ,input().split())) for _ in range(3)]\nn = int(input())\n\nans = [[0] * 3 for _ in range(3)]\n\nfor i in range(n):\n    b = int(input())\n    for j in range(3):\n        for k in range(3):\n            if a[j][k] ==  b:\n                ans[j][k] = 1\n\nstate = False\nfor i in range(3):\n    num = 0\n    for j in range(3):\n        num += ans[i][j]\n    \n    if num == 3:\n        state = True\n\nfor i in range(3):\n    num = 0\n    for j in range(3):\n        num += ans[j][i]\n    \n    if num == 3:\n        state = True\n\nif ans[0][0] + ans[1][1] + ans[2][2] == 3:\n    state = True\n\nif ans[0][2] + ans[1][1] + ans[2][0] == 3:\n    state = True\n\nif state:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n\n", "#!/usr/local/bin/python3\n# https://atcoder.jp/contests/abc157/tasks/abc157_b\nimport numpy as np\n\ndef check(A, b):\n    A = np.where(A == b, -1, A)\n    return A\n\ndef bingo(A):\n    for a in A:\n        if a[0] == a[1] == a[2] == -1:\n            return True\n    for a in A.T:\n        if a[0] == a[1] == a[2] == -1:\n            return True\n    if A[0][0] == A[1][1] == A[2][2] == -1:\n        return True\n    if A[0][2] == A[1][1] == A[2][0] == -1:\n        return True\n    return False\n\n\n\nA = []\nfor _ in range(3):\n    A.append(list(map(int, input().split())))\nA = np.array(A)\nN = int(input())\nfor _ in range(N):\n    b = int(input())\n    A = check(A, b)\n\n# for i in range(3):\n#     for j in range(3):\n#         print(f\"{A[i][j]} \", end=\"\")\n#     print(\"\")\n\nif bingo(A):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "#!/usr/bin/env python3\nimport sys\n\nYES = \"Yes\"  # type: str\nNO = \"No\"  # type: str\n\n\ndef solve(A: \"List[List[int]]\", N: int, b: \"List[int]\"):\n    A_ = []\n    for a_ in A:\n        A_ += [[a__, False] for a__ in a_]\n    for b_ in b:\n        for a__ in A_:\n            if a__[0] == b_:\n                a__[1] = True\n    if (A_[0][1] and ((A_[1][1] and A_[2][1]) or \\\n                        (A_[3][1] and A_[6][1]) or \\\n                        (A_[4][1] and A_[8][1]))) or \\\n            (A_[1][1] and A_[4][1] and A_[7][1]) or \\\n            (A_[2][1] and A_[5][1] and A_[8][1]) or \\\n            (A_[3][1] and A_[4][1] and A_[5][1]) or \\\n            (A_[6][1] and A_[7][1] and A_[8][1]) or \\\n            (A_[2][1] and A_[4][1] and A_[6][1]):\n        print(YES)\n    else:\n        print(NO)\n    return\n\n\n# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    A = [[int(next(tokens)) for _ in range(3)] for _ in range(3)]  # type: \"List[List[int]]\"\n    N = int(next(tokens))  # type: int\n    b = [int(next(tokens)) for _ in range(N)]  # type: \"List[int]\"\n    solve(A, N, b)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "A = [[]]*3\nfor row in range(3):\n    A[row] = list(map(int, input().split()))\nn = int(input())\nB = [0]*n\nfor i in range(n):\n    B[i] = int(input())\nflag = False\n\n\ndef check_bingo(A, B):\n    for row in range(3):\n        if A[row][0] and A[row][1] and A[row][2]:\n            return True\n\n    for col in range(3):\n        if A[0][col] and A[1][col] and A[2][col]:\n            return True\n\n    if A[0][0] and A[1][1] and A[2][2]:\n        return True\n    if A[0][2] and A[1][1] and A[2][0]:\n        return True\n    return False\n\n\nfor row in range(3):\n    for col in range(3):\n        if A[row][col] in B:\n            A[row][col] = True\n        else:\n            A[row][col] = False\n\nprint(\"Yes\" if check_bingo(A, B) else \"No\")", "a_str = [input().split() for _ in range(3)]\na = [[0,0,0],[0,0,0],[0,0,0]]\nfor i in range(3):\n    for j in range(3):\n        a[i][j] = int(a_str[i][j])\n\nn = int(input())\nb = [int(input()) for _ in range(n)]\n\nfor m in range(n):\n    for i in range(3):\n        for j in range(3):\n            if b[m] == a[i][j]:\n                a[i][j] = 0\n\n#\u6a2a\u306e\u30d3\u30f3\u30b4\u5224\u5b9a\nfor i in range(3):\n    if a[i][0] == a[i][1] == a[i][2] == 0:\n        print('Yes')\n        return\n\n#\u7e26\u306e\u30d3\u30f3\u30b4\u5224\u5b9a\nfor i in range(3):\n    if a[0][i] == a[1][i] == a[2][i] == 0:\n        print('Yes')\n        return\n\n#\u659c\u3081\u306e\u30d3\u30f3\u30b4\u5224\u5b9a\nif a[0][0] == a[1][1] == a[2][2] == 0:\n    print('Yes')\n    return\nif a[0][2] == a[1][1] == a[2][0] == 0:\n    print('Yes')\n    return\n\nprint('No')", "import numpy as np\n\na = [list(map(int,input().split())) for i in range(3)]\nn = int(input())\n\nfor i in range(n):\n    b = int(input())\n\n    for j in range(3):\n        if b in a[j]:\n            idx = a[j].index(b)\n            a[j][idx] = 0\n\nnp_a = np.array(a)\nnp_t = np_a.T\nd = 0\nu = 0\n\nfor i in range(3):\n    r = np_a[i]\n    c = np_t[i]\n    d += r[i]\n    u += r[2-i]\n\n    if r.sum() and c.sum():\n        continue\n\n    print(\"Yes\")\n    return\n\n\nif d and u:\n    print(\"No\")\nelse:\n    print(\"Yes\")\n", "l=[]\nfor i in range(3):\n    l += list(map(int,input().split()))\nN= int(input())\nb=set()\nfor i in range(N):\n  c=int(input())\n  if c in l:b.add(c)\nfor i in b:\n  l[l.index(i)]=0\nif l[0]+l[1]+l[2]==0 or l[3]+l[4]+l[5]==0 or l[6]+l[7]+l[8]==0:print('Yes');return\nif l[0]+l[3]+l[6]==0 or l[1]+l[4]+l[7]==0 or l[2]+l[5]+l[8]==0:print('Yes');return\nif l[0]+l[4]+l[8]==0 or l[2]+l[4]+l[6]==0:print('Yes');return\nprint('No')", "#-*-coding:utf-8-*-\nimport sys\ninput=sys.stdin.readline\n\ndef bingo_check(card):\n    #\u6a2a\u30c1\u30a7\u30c3\u30af\n    for low in card:\n        if sum(low)==0:\n            print(\"Yes\")\n            return\n    #\u7e26\u30c1\u30a7\u30c3\u30af\n    column1=0\n    column2=0\n    column3=0\n    for low in card:\n        column1+=low[0]\n        column2+=low[1]\n        column3+=low[2]\n    if column1 == 0 or column2 == 0 or column3==0:\n        print(\"Yes\")\n        return\n    #\u659c\u3081\u30c1\u30a7\u30c3\u30af\n    diagonal1=card[0][0]+card[1][1]+card[2][2]\n    diagonal2=card[0][2]+card[1][1]+card[2][0]\n    if diagonal1 == 0 or diagonal2 == 0:\n        print(\"Yes\")\n        return\n    print(\"No\")\n\ndef main():\n    bingo=[]\n    use_card=[]\n    bingo=[list(map(int,input().split())) for _ in range(3)]\n    use_card=bingo\n    n = int(input())\n\n    for idx in range(n):\n        number=int(input())\n        for i in range(3):\n            for j in range(3):\n                if number==use_card[i][j]:\n                    use_card[i][j]=0\n                else:\n                    continue\n    bingo_check(use_card)\n\ndef __starting_point():\n    main()\n__starting_point()", "a, b, c = list(map(int, input().split()))\ne, f, g = list(map(int, input().split()))\nh, i, j = list(map(int, input().split()))\n\nbingo_list = [[a, b, c], [e, f, g], [h, i, j], [a, e, h], [b, f, i], [c, g, j], [a, f, j], [c, f, h]]\n\nn = int(input())\n\nn_list = [int(input()) for _ in range(n)]\ncount = 0\nans = 'No'\n\nfor i in bingo_list:\n    for j in n_list:\n        if j in i:\n            count += 1\n        if count == 3:\n            ans = 'Yes'\n            break\n    if ans == 'Yes':\n        break\n\n    count = 0\n\nprint(ans)\n", "a=[input().split() for _ in range(3)]\nn=int(input())\nb=[input() for _ in range(n)]\nfor i in range(3):\n    for j in range(3):\n        for k in range(n):\n            if a[i][j]==b[k]:\n                a[i][j]='0'\nans=\"No\"\nfor i in range(3):\n    if a[i][0]==a[i][1]==a[i][2]:\n        ans=\"Yes\"\n    if a[0][i]==a[1][i]==a[2][i]:\n        ans=\"Yes\"\nif a[0][0]==a[1][1]==a[2][2]:\n    ans=\"Yes\"\nif a[0][2]==a[1][1]==a[2][0]:\n    ans=\"Yes\"\nprint(ans)", "lst = [ [ int(i) for i in input().split() ] for j in range(3) ]\n\nn = int(input())\n\nfor _ in range(n):\n  x = int(input())\n  for d in lst:\n    if d[0] == x:\n      d[0] = -1\n    elif d[1] == x:\n      d[1] = -1\n    elif d[2] == x:\n      d[2] = -1\n\nfor d in lst:\n  if d[0] == d[1] == d[2] == -1:\n    print('Yes')\n    return\nfor i in range(3):\n  if lst[0][i] == lst[1][i] == lst[2][i] == -1:\n    print('Yes')\n    return\nfor i in range(3):\n  if lst[i][0] == lst[i][1] == lst[i][2] == -1:\n    print('Yes')\n    return\nif lst[0][0] == lst[1][1] == lst[2][2] == -1:\n  print('Yes')\n  return\nif lst[0][2] == lst[1][1] == lst[2][0] == -1:\n  print('Yes')\n  return\nprint('No')\n", "A = [0 for i in range(9)]\nfor i in range(3):\n  A[3*i], A[3*i+1], A[3*i+2] = map(int, input().split())\nN = int(input())\nb = [0 for i in range(N)]\nfor i in range(N):\n  b[i] = int(input())\n\n#Check matching numbers\nfor i in range(9):\n  for j in range(N):\n    if A[i] == b[j]:\n      A[i] = 0\n\n# Check bingo or not\nflag = 0\n# Check rows\nfor i in [0, 3, 6]:\n  if A[i]==A[i+1] and A[i+1]==A[i+2]:\n    flag += 1\n# Check colums\nfor j in range(3):\n  if A[j]==A[j+3] and A[j+3]==A[j+6]:\n    flag += 1\n# Check naname?\nif (A[0]==A[4] and A[4]==A[8]) or (A[2]==A[4] and A[4]==A[6]):\n  flag += 1\n\nif flag >= 1:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "ls = []\nfor i in range(3):\n    ls += list(map(int,input().split()))\nN = int(input())\nlsb = [int(input()) for i in range(N)]\nfor i in range(N):\n    if lsb[i] in ls:\n        ls[ls.index(lsb[i])] = '#'\nans = 'No'\nfor i in range(3):  \n    if ls[0+i] == '#' and ls[3+i] == '#' and ls[6+i] == '#':\n        ans = 'Yes'\nfor i in range(3):  \n    if ls[3*i] == '#' and ls[3*i+1] == '#' and ls[3*i+2] == '#':\n        ans = 'Yes'\nif ls[0] == '#' and ls[4] == '#' and ls[8] == '#':\n        ans = 'Yes'\nif ls[2] == '#' and ls[4] == '#' and ls[6] == '#':\n        ans = 'Yes'\nprint(ans)", "a = [list(map(int,input().split())) for i in range(3)]\nn = int(input())\nb = [int(input()) for i in range(n)]\nvisited = [[False for i in range(3)] for j in range(3)]\nfor i in b:\n    for j in range(3):\n        for k in range(3):\n            if i==a[j][k]:\n                visited[j][k] = True\n\nans = \"No\"\nfor i in visited:\n    if i==[True,True,True]:\n        ans = \"Yes\"\n\nfor i in range(3):\n    flag = True\n    for j in range(3):\n        if visited[j][i]==False:\n            flag = False\n            break\n    if flag:\n        ans = \"Yes\"\n\nif visited[0][0] and visited[1][1] and visited[2][2]:\n    ans = \"Yes\"\nif visited[2][0] and visited[1][1] and visited[0][2]:\n    ans = \"Yes\"\nprint(ans)", "A = [list(map(int,input().split())) for i in range(3)]\nN = int(input())\nsheet = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]\nfor i in range(N):\n    b = int(input())\n    for j in range(3):\n        for k in range(3):\n            if b == A[j][k]:\n                sheet[j][k] = 1\n                break\n            else:\n                continue\n\nfor i in range(3):\n    if sheet[0][i] == sheet[1][i] == sheet[2][i] == 1:\n        print('Yes')\n        return\n\nfor i in range(3):\n    if sheet[i][0] == sheet[i][1] == sheet[i][2] == 1:\n        print('Yes')\n        return\n\nif sheet[0][0] == sheet[1][1] == sheet[2][2] == 1:\n        print('Yes')\n        return\nif sheet[0][2] == sheet[1][1] == sheet[2][0] == 1:\n        print('Yes')\n        return\nelse:\n    print('No')", "mat = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]\n\nfor i in range(3):\n  x, y, z = map(int, input().split())\n  mat[i][0] = x\n  mat[i][1] = y\n  mat[i][2] = z\n\nn = int(input())\n\nfor i in range(n):\n  x = int(input())\n  for j in range(3):\n    for k in range(3):\n      if mat[j][k] == x:\n        mat[j][k] = -1\n        break\n\nif mat[0][0] == -1 and mat[0][1] == -1 and mat[0][2] == -1:\n  print(\"Yes\")\n  return\nelif mat[1][0] == -1 and mat[1][1] == -1 and mat[1][2] == -1:\n  print(\"Yes\")\n  return\nelif mat[2][0] == -1 and mat[2][1] == -1 and mat[2][2] == -1:\n  print(\"Yes\")\n  return\nelif mat[0][0] == -1 and mat[1][0] == -1 and mat[2][0] == -1:\n  print(\"Yes\")\n  return\nelif mat[0][1] == -1 and mat[1][1] == -1 and mat[2][1] == -1:\n  print(\"Yes\")\n  return\nelif mat[0][2] == -1 and mat[1][2] == -1 and mat[2][2] == -1:\n  print(\"Yes\")\n  return\nelif mat[0][0] == -1 and mat[1][1] == -1 and mat[2][2] == -1:\n  print(\"Yes\")\n  return\nelif mat[2][0] == -1 and mat[1][1] == -1 and mat[0][2] == -1:\n  print(\"Yes\")\n  return\nelse:\n  print(\"No\")", "sheet = []\nfor i in range(3):\n    sheet.append([int(x) for x in input().split()])\nbingo = [[False] * 3 for _ in range(3)]\n\nN = int(input())\nfor i in range(N):\n    a = int(input())\n    for x in range(3):\n        for y in range(3):\n            if sheet[x][y] == a:\n                bingo[x][y] = True\n\nfor i in range(3):\n    if bingo[i][0] and bingo[i][1] and bingo[i][2]:\n        print('Yes')\n        return\n    if bingo[0][i] and bingo[1][i] and bingo[2][i]:\n        print('Yes')\n        return\nif bingo[0][0] and bingo[1][1] and bingo[2][2]:\n    print('Yes')\n    return\nif bingo[2][0] and bingo[1][1] and bingo[0][2]:\n    print('Yes')\n    return\n\nprint('No')\n", "import numpy as np\nA = [list(map(int, input().split())) for _ in range(3)]\nN = int(input())\nB = [int(input()) for _ in range(N)]\na = [[False]*3 for _ in range(3)]\nfor i in range(3):\n    for j in range(3):\n        for b in B:\n            if A[i][j] == b:\n                a[i][j] = True\nbingo = False\nfor i in range(3):\n    if a[i][0] and a[i][1] and a[i][2]:\n        bingo =True\nfor j in range(3):\n    if a[0][j] and a[1][j] and a[2][j]:\n        bingo = True\nif a[0][0] and a[1][1] and a[2][2]:\n    bingo = True\nif a[0][2] and a[1][1] and a[2][0]:\n    bingo = True\nprint(('Yes' if bingo else 'No'))\n\n", "A1 = list(map(str,input().split()))\nA2 = list(map(str,input().split()))\nA3 = list(map(str,input().split()))\nN = int(input())\nfor k in range(N):\n  i = str(input())  \n  if i == A1[0]:\n    A1[0] = 'OK'\n  if i == A1[1]:\n    A1[1] = 'OK'\n  if i == A1[2]:\n    A1[2] = 'OK'\n  if i == A2[0]:\n    A2[0] = 'OK' \n  if i == A2[1]:\n    A2[1] = 'OK'\n  if i == A2[2]:\n    A2[2] = 'OK'\n  if i == A3[0]:\n    A3[0] = 'OK'\n  if i == A3[1]:\n    A3[1] = 'OK'\n  if i == A3[2]:\n    A3[2] = 'OK'\nif A1 == ['OK','OK','OK'] or A2 == ['OK','OK','OK'] or A3 == ['OK','OK','OK']:\n  print('Yes')\n  return\nfor i in range(3):\n  if A1[i] == 'OK' and A2[i] == 'OK' and A3[i]== 'OK':\n    print('Yes')\n    return\nif A1[0] == 'OK' and A2[1] == 'OK' and A3[2]== 'OK':\n    print('Yes')\n    return\nif A1[2] == 'OK' and A2[1] == 'OK' and A3[0]== 'OK':\n    print('Yes')\n    return\nprint('No')\n\n\n", "a1 = list(map(int,input().split()))\na2 = list(map(int,input().split()))\na3 = list(map(int,input().split()))\nn = int(input())\nfor i in range(n):\n    b = int(input())\n    if b in a1:\n        a1[a1.index(b)] = 0\n    if b in a2:\n        a2[a2.index(b)] = 0\n    if b in a3:\n        a3[a3.index(b)] = 0\nif (sum(a1) != 0) and (sum(a2) != 0) and (sum(a3) != 0) and (a1[0] + a2[0] + a3[0] != 0) and (a1[1] + a2[1] + a3[1] != 0) and (a1[2] + a2[2] + a3[2] != 0) and a1[0] + a2[1] + a3[2] != 0 and a1[2] + a2[1] + a3[0] != 0:\n    print('No')\nelse:\n    print('Yes')", "A = [list(map(int, input().split())) for _ in range(3)]\nn = int(input())\nB = [int(input()) for _ in range(n)]\n\nfor i in range(3):\n    for j in range(3):\n        if A[i][j] in B:\n            A[i][j] = -1\n\nfor i in range(3):\n    ans1, ans2 = 0, 0\n    for j in range(3):\n        if A[i][j] == -1:\n            ans1 += 1\n        if A[j][i] == -1:\n            ans2 += 1\n    if ans1 == 3 or ans2 == 3:\n        print(\"Yes\")\n        return\n\nif (A[0][0] == -1 and A[1][1] == -1 and A[2][2] == -1) or \\\n        (A[0][2] == -1 and A[1][1] == -1 and A[2][0] == -1):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "sheet = []\nlines = [[0, 1, 2], [3, 4, 5], [6, 7, 8],\n        [0, 3, 6], [1, 4, 7], [2, 5, 8],\n        [0, 4, 8], [2, 4, 6]]\nsai = []\nfor i in range(3):\n\tsheet += [int(j) for j in input().split()]\nn = int(input())\nfor i in range(n):\n\tsai.append(int(input()))\nret = 'No'\nfor line in lines:\n\tbingo = True\n\tfor l in line:\n\t\tif sheet[l] not in sai:\n\t\t\tbingo = False\n\tif bingo:\n\t\tret = 'Yes'\nprint(ret)", "a=[input().split() for _ in range(3)]\nn=int(input())\nb=[input() for _ in range(n)]\nfor i in range(3):\n    for j in range(3):\n        for k in range(n):\n            if a[i][j]==b[k]:\n                a[i][j]='0'\nans=\"No\"\nfor i in range(3):\n    if a[i][0]==a[i][1]==a[i][2]:\n        ans=\"Yes\"\n    if a[0][i]==a[1][i]==a[2][i]:\n        ans=\"Yes\"\nif a[0][0]==a[1][1]==a[2][2]:\n    ans=\"Yes\"\nif a[0][2]==a[1][1]==a[2][0]:\n    ans=\"Yes\"\nprint(ans)", "import sys\na = 3\nA = [list(map(int,input().split())) for c in range(a)]\nN = int(input())\nb = [int(input()) for c in range(N)]\n#print(A)\n#print(b)\nC = [[0,0,0],[0,0,0],[0,0,0]]\nfor i in range(3):\n    for j in range(3):\n        for k in range(N):\n            if b[k] == A[i][j]:\n                C[i][j] = 1\n\nfor i in range(3):\n    if sum(C[i]) == 3:\n        print(\"Yes\")\n        return\n\nfor j in range(3):\n    if C[0][j]+C[1][j]+C[2][j] == 3:\n        print(\"Yes\")\n        return\n\nif C[0][0]+C[1][1]+C[2][2] == 3 or C[0][2]+C[1][1]+C[2][0] == 3:\n    print(\"Yes\")\n    return\n\nprint(\"No\")\n", "# coding: utf-8\n\ndef main():\n    A = []\n    num = [1 for _ in range(101)]\n    C = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ]\n    ans = 'No'\n    \n    for _ in range(3):\n        for i in list(map(int, input().split())):\n            A.append(i)\n        \n\n    N = int(input())\n\n    for _ in range(N):\n        num[int(input())] -= 1\n\n    for c in C:\n        if num[A[c[0]]] == 0 and num[A[c[1]]] == 0 and num[A[c[2]]] == 0:\n            ans = 'Yes'\n            break\n\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "A = [list(map(int,input().split())) for i in range(3)]\nn = int(input())\nB = [int(input()) for i in range(n)]\nC = [[0,0,0] for _ in range(3)]\n\nfor b in B:\n    for i in range(3):\n        for j in range(3):\n            if(A[i][j] == b):\n                C[i][j] = 1\n\nfor i in range(3):\n    if(C[i][0] == 1 and C[i][1] == 1 and C[i][2] == 1):\n        print(\"Yes\")\n        return\n    elif(C[0][i] == 1 and C[1][i] == 1 and C[2][i] == 1):\n        print(\"Yes\")\n        return\nif(C[0][0] == 1 and C[1][1] == 1 and C[2][2] == 1):\n    print(\"Yes\")\n    return\nelif(C[0][2] == 1 and C[1][1] == 1 and C[2][0] == 1):\n    print(\"Yes\")\n    return\nprint(\"No\")\nreturn\n", "import os, sys, re, math\n\nA = []\n\nfor i in range(3):\n    A += [int(n) for n in input().split()]\n\nN = int(input())\nfor i in range(N):\n    b = int(input())\n    A = [0 if a == b else a for a in A]\n\nbingo = 'No'\nfor x in range(3):\n    if A[x * 3] == A[x * 3 + 1] == A[x * 3 + 2] == 0:\n        bingo = 'Yes'\nfor y in range(3):\n    if A[y] == A[y + 3] == A[y + 3 * 2] == 0:\n        bingo = 'Yes'\nif (A[0] == A[4] == A[8] == 0) or (A[2] == A[4] == A[6] == 0):\n    bingo = 'Yes'\n\nprint(bingo)\n", "board = [list(map(int,input().split())) for i in range(3)]\nnum = int(input())\nfor n in range(num):\n    bi = int(input())\n    for i in range(3):\n        for j in range(3):\n            if board[i][j] == bi:\n                board[i][j] = 0\n\n#\u6a2a\nfor i in range(3):\n    if board[i][0] == board[i][1] == board[i][2] == 0:\n        print(\"Yes\")\n        return\n#\u7e26\nfor i in range(3):\n    if board[0][i] == board[1][i] == board[2][i] == 0:\n        print(\"Yes\")\n        return\n\nif board[0][0] == board[1][1] == board[2][2] == 0:\n    print(\"Yes\")\n    return\nif board[0][2] == board[1][1] == board[2][0] == 0:\n    print(\"Yes\")\n    return\n\nprint(\"No\")"]