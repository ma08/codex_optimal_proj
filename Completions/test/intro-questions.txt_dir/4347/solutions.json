["from math import *\n\nn = int(input())\nprint(factorial(n) // (factorial(n // 2) ** 2) * factorial(n//2-1) ** 2 // 2)\n", "def fac(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fac(n-1)\n\n\nn = int(input())\n\nm = n // 2\n\nans = fac(n)//(2*m**2)\n\nprint(ans)\n", "def cal(k):\n    ans = 1\n    for i in range(k+1, 2*k):\n        ans *= i\n    for i in range(1, k):\n        ans //= i\n    # print(ans)\n    t = 1\n    for i in range(1, k):\n        t *= i\n    # print(t)\n    ans *= t*t\n    return ans\n\n\nprint(cal(int(input())//2))\n", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    ans = 1\n    for i in range(2, n):\n        ans *= i\n    \n    print(ans // (n // 2))\n    \n    \nmain()", "n = int(input())\nans = 1\nfor i in range(1, n):\n    ans *= i\nans //= (n // 2)\nprint(ans)", "n=int(input())\np=2\nfor i in range(1,n):\n\tp=p*i\nprint(p//n)", "n = int(input())\nans = 1\nfor i in range(1, n+1):\n    ans *= i\nprint(ans//(n*n//2))", "n=int(input())\n\nres=1\nfor i in range(n-1):\n\tres*=(i+1)\n\nres//=(n//2)\nprint(res)", "from math import factorial\n\nn = int(input())\nkek = factorial(n) // factorial(n // 2) // factorial(n // 2) // 2\nprint(kek * factorial(n // 2) * factorial(n // 2) // (n // 2) // (n // 2))", "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key, lru_cache\n\n\nimport sys\ninput = sys.stdin.readline\nM = mod = 998244353\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n \ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\n\n\n@lru_cache(None)\ndef fact(n):\n    ans = 1\n    if n == 0:return 1\n    for i in range(1, n + 1):ans *= i\n    return ans\n\ndef ncr(n, r):\n    return fact(n) / (fact(r) * fact(n - r))\n    \n\n\n\nn = val()\n\n\nprint(int((ncr(n, n // 2) * (fact((n // 2) - 1) ** 2)) // 2))", "def f(n):\n\tres = 1\n\tfor i in range(2, n + 1):\n\t\tres = res * i\n\treturn res\n\nn = int(input())\n\nif n == 2:\n\tprint(1)\nelif n == 4:\n\tprint(3)\nelse:\n\tans = f(n) // (2 * n * n)\n\tprint(ans * 4)\n", "from math import factorial as f\n\nn = int(input())\nprint(f(n) // 2 // (n // 2) // (n // 2))\n\n", "n=int(input())\nans=1\nfor i in range(1,n+1):\n    ans=ans*i\nans=ans//(n//2)\nans=ans//(n//2)\nans=ans//2\nprint(ans)", "def solve():\n\tn = int(input())\n\tn -= 2\n\tnum = 2\n\tfor i in range(1,n+2):\n\t\tnum *= i\n\tnum = num // (n+2)\n\treturn num\n\n#main\nprint(solve())", "def fact(n):\n\tft=1\n\twhile n>0:\n\t\tft=ft*n\n\t\tn=n-1\n\treturn ft\nn=int(input())\nq=2*fact(n)//(n*n)\nprint(q)\n", "def opt1(n):\n    k = n // 2\n    res = 1\n    for i in range(k + 1, n + 1):\n        res *= i\n    for i in range(2, k + 1):\n        res //= i\n    return res\ndef opt2(n):\n    res = 1\n    for i in range(1, n + 1):\n        res *= i\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    return res // n\nn = int(input())\nprint(opt1(n) * opt2(n // 2) * opt2(n // 2) // 2)", "n=int(input())\nf=1\nfor i in range(1,n):\n    f=f*i\nk=n//2\nans=f//k\nprint(ans)\n\n", "import sys,math,itertools\nfrom collections import Counter,deque,defaultdict\nfrom bisect import bisect_left,bisect_right \nmod = 10**9+7\nINF = float('inf')\ndef inp(): return int(sys.stdin.readline())\ndef inpl(): return list(map(int, sys.stdin.readline().split()))\n\nn = inp()\nn //= 2;n-=1\n\nprint(math.factorial(2*n+1)//(n+1))", "n = int(input())\nans = 1\nfor i in range(n):\n    ans *= i + 1\nfor i in range(n // 2):\n    ans //= i + 1\n    ans //= i + 1\ngg = 1\nfor i in range(n//2 - 1):\n    gg *= i + 1\nans *= gg * gg\nans//= 2\nprint(ans)\n", "from math import factorial\n\nn = int(input())\na = [0, 1, 3, 40, 1260, 72576, 6652800, 889574400, 163459296000, 39520825344000, 12164510040883200]\nprint(a[n // 2])\n", "n = int(input())\nf = [1]\nfor i in range(1, 21):\n    f.append(f[-1]*i)\nprint((f[n]*f[n//2 - 1]**2)//(2*f[n//2]**2))\n", "def fact(n):\n    ans = 1\n    for i in range(1, n + 1):\n        ans *= i\n    return ans\n\na = int(input())\nans = fact(a)//( fact(a//2) * fact(a//2)  )\nans *= fact(a//2 - 1)\nans *= fact(a//2 - 1)\nprint(ans//2)", "def fact(a):\n    if a == 1:\n        return 1\n    else:\n        return fact(a - 1) * a\nn = int(input())\nprint(fact(n) // fact(n // 2) // (n // 2) * (fact(n // 2) // (n // 2)) // 2)", "def fact(n) :\n    ans = 1\n    for i in range(2,n+1) : ans *= i\n    return ans\nn = int(input())//2 - 1\nprint(fact(2*n + 1)//(n + 1))\n\n", "import math\nn = int(input())\nprint(math.factorial(n) // n // (n // 2))\n", "import math\n\ndef binom(n, k):\n    return math.factorial(n) // math.factorial(k) // math.factorial(n - k)\n\n\ntt = int(input())\n\nprint(binom(tt,tt//2)*math.factorial(tt//2-1)*math.factorial(tt//2-1)//2)", "n = int(input())\nn = n // 2 - 1\nans = 1\nfor x in range(1, 2 * n + 2):\n    ans = ans * x\nprint(ans // (n + 1))\n", "n = int(input())\n\nf = 1\nfor i in range(1, n):\n    f *= i\n\nprint(f // (n // 2))\n", "n=int(input())\nt=1\nfor i in range(n):\n    t*=(i+1)\nprint(t//((n*n)//2))", "n=int(input())\ndef fact(n):\n    res=1\n    for i in range(2,n+1):\n        res*=i\n    return res;\n\nz=n//2\nans=fact(n);\np=fact(z-1);\n\nans*=p*p;\nans/= fact(z);\nans/=fact(z);\nans/=2;\nprint(int(ans))", "n = int(input())\nres = [1, 3, 40, 1260, 72576, 6652800, 889574400, 163459296000, 39520825344000, 12164510040883200]\nprint(res[n//2-1])\n", "def factorial(n):\n    if n < 0:\n        return 0\n    if n <= 1:\n        return 1\n    return n*factorial(n-1)\ndef ncr(n,r):\n    if n < 0 or r < 0 or n < r:\n        return 0\n    return factorial(n)//factorial(r)//factorial(n-r)\n\nn = int(input())\nleft_choice = ncr(n,n//2)//2\nleft = factorial(n//2)\nright = left\nleft = left//(n//2)\nright = right//(n//2)\n# print(left_choice,left,right)\nprint(left_choice*left*right)", "import sys\ninput = sys.stdin.readline\n\nret = [1, 1, 1, 1, 3, 8, 40, 180, 1260, 8064, 72576, 604800, 6652800, 68428800, 889574400, 10897286400, 163459296000, 2324754432000, 39520825344000, 640237370572800, 12164510040883200]\nprint(ret[int(input())])\n", "def ncr(n,r):\n    return fact[n]//(fact[r]*fact[n-r])\nn=int(input())\nfact=[1 for i in range(25)]\nfor i in range(2,25):\n    fact[i]=fact[i-1]*i\nif(n==2):\n    print(1)\n    quit()\nif(n==4):\n    print(3)\n    quit()\nz=(ncr(n,n//2))//2\nz=z*(fact[(n//2)-1]*fact[(n//2)-1])\nprint(z)\n", "from math import factorial\nn = int(input())\nans = factorial(n//2 - 1) ** 2\nans *= ((factorial(n) // (factorial(n//2) ** 2))//2)\nprint(ans)", "import math\nn=int(input())\nprint(int(2*math.factorial(n-1)/n))", "from math import factorial as f\nn=int(input())\nans=f(n)//(n-n//2)//f(n//2)//2*(f(n//2-1))\nprint(ans)", "n = int(input())\nncr = 1\nfor i in range(n//2+1, n+1):\n    ncr = ncr * i\nfor i in range(1, n//2+1):\n    ncr = ncr//i\nans = ncr//2\nfmul = 1\nfor i in range(1, n//2):\n    fmul = fmul*i\nans = ans*fmul\nans = ans*fmul\nans = int(ans)\nprint(ans)\n", "from math import factorial\nn = int(input())\nprint(factorial(n)*factorial(n//2-1)**2//factorial(n//2)**2//2)\n", "a = int(input())\nfact = 1\nfor i in range(1, a):\n  fact *= i\nprint(int(fact / (a/2)))", "import sys\ninput = sys.stdin.readline\nI = lambda : list(map(int,input().split()))\n\ndef fact(n):\n\tif n<=1:\n\t\treturn 1\n\treturn n*fact(n-1)\n\nn,=I()\nprint(fact(n-1)//(n//2))", "import math\na=int(input())\nprint (int(math.factorial(a-1)/(a/2)))"]