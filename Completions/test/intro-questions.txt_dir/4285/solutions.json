["def num(s):\n    ans1 = [0]*n\n    for q in range(n):\n        ans1[q] = s[q] == 'a'\n    sum1 = 0\n    for q in range(n):\n        w = sum1*(s[q] == 'b')\n        sum1 += ans1[q]\n        ans1[q] = w\n    sum1 = 0\n    for q in range(n):\n        w = sum1*(s[q] == 'c')\n        sum1 += ans1[q]\n        ans1[q] = w\n    sum1 = 0\n    for q in range(n):\n        sum1 += ans1[q]\n    return sum1 % C\n\n\nn = int(input())\ns = list(input())\nC, k = 10**9+7, 0\nans, ans1, deg = [0]*n, [0]*n, [1]\nfor q in range(n):\n    deg.append(deg[-1]*3 % C)\n    k += s[q] == '?'\nif k == 0:\n    print(num(s))\nelif k == 1:\n    ans = 0\n    for q in range(n):\n        if s[q] == '?':\n            for q1 in ['a', 'b', 'c']:\n                s[q] = q1\n                ans += num(s)\n            break\n    print(ans % C)\nelif k == 2:\n    ans = 0\n    ind1 = ind2 = -1\n    for q in range(n):\n        if s[q] == '?' and ind1 == -1:\n            ind1 = q\n        elif s[q] == '?':\n            ind2 = q\n    for q in ['aa', 'ab', 'ac', 'ba', 'bb', 'bc', 'ca', 'cb', 'cc']:\n        s[ind1], s[ind2] = q[0], q[1]\n        ans += num(s)\n    print(ans % C)\nelse:\n    ans = 0\n    for q1 in ['???', '??c', '?b?', '?bc', 'a??', 'a?c', 'ab?', 'abc']:\n        t = q1.count('?')\n        ans1 = [0] * n\n        for q in range(n):\n            ans1[q] = (s[q] == q1[0])*deg[k-t]\n        sum1 = 0\n        for q in range(n):\n            w = sum1 * (s[q] == q1[1])\n            sum1 += ans1[q]\n            ans1[q] = w % C\n        sum1 = 0\n        for q in range(n):\n            w = sum1 * (s[q] == q1[2])\n            sum1 += ans1[q]\n            ans1[q] = w % C\n        sum1 = 0\n        for q in range(n):\n            sum1 += ans1[q]\n        ans += sum1\n    print(ans % C)\n", "from sys import stdin\ninput = stdin.readline\n\n\ndef num(s):\n    ans1 = [0]*n\n    for q in range(n):\n        ans1[q] = s[q] == 'a'\n    sum1 = 0\n    for q in range(n):\n        w = sum1*(s[q] == 'b')\n        sum1 += ans1[q]\n        ans1[q] = w\n    sum1 = 0\n    for q in range(n):\n        w = sum1*(s[q] == 'c')\n        sum1 += ans1[q]\n        ans1[q] = w\n    sum1 = 0\n    for q in range(n):\n        sum1 += ans1[q]\n    return sum1 % C\n\n\ndef main():\n    s = list(input())\n    k = 0\n    ans, ans1, deg = [0]*n, [0]*n, [1]\n    for q in range(n):\n        deg.append(deg[-1]*3 % C)\n        k += s[q] == '?'\n    if k == 0:\n        print(num(s))\n    elif k == 1:\n        ans = 0\n        for q in range(n):\n            if s[q] == '?':\n                for q1 in ['a', 'b', 'c']:\n                    s[q] = q1\n                    ans += num(s)\n                break\n        print(ans % C)\n    elif k == 2:\n        ans = 0\n        ind1 = ind2 = -1\n        for q in range(n):\n            if s[q] == '?' and ind1 == -1:\n                ind1 = q\n            elif s[q] == '?':\n                ind2 = q\n        for q in ['aa', 'ab', 'ac', 'ba', 'bb', 'bc', 'ca', 'cb', 'cc']:\n            s[ind1], s[ind2] = q[0], q[1]\n            ans += num(s)\n        print(ans % C)\n    else:\n        ans = 0\n        for q1 in ['???', '??c', '?b?', '?bc', 'a??', 'a?c', 'ab?', 'abc']:\n            t = q1.count('?')\n            ans1 = [0] * n\n            for q in range(n):\n                ans1[q] = (s[q] == q1[0])*deg[k-t]\n            sum1 = 0\n            for q in range(n):\n                w = sum1 * (s[q] == q1[1])\n                sum1 += ans1[q]\n                ans1[q] = w % C\n            sum1 = 0\n            for q in range(n):\n                w = sum1 * (s[q] == q1[2])\n                sum1 += ans1[q]\n                ans1[q] = w % C\n            sum1 = 0\n            for q in range(n):\n                sum1 += ans1[q]\n            ans += sum1\n        print(ans % C)\n\n\nn = int(input())\nC = 10**9+7\nmain()\n", "def pow3(a):\n    return 0 if a == -1 else p[a]\n\n\nafdsfasdf = int(input())\ns = list(input())\nn = len(s)\nmod = pow(10, 9) + 7\nx = [[0] * 2 for _ in range(n - 1)]\ny = [[0] * 2 for _ in range(n - 1)]\np = [1] * n\nans = 0\nfor i in range(1, n):\n    p[i] = 3 * p[i - 1] % mod\nfor i in range(n - 2):\n    if s[i] == \"a\":\n        x[i + 1][0] = 1\n    elif s[i] == \"?\":\n        x[i + 1][1] = 1\n    for j in range(2):\n        x[i + 1][j] += x[i][j]\n    k = n - i - 1\n    if s[k] == \"c\":\n        y[i + 1][0] = 1\n    elif s[k] == \"?\":\n        y[i + 1][1] = 1\n    for j in range(2):\n        y[i + 1][j] += y[i][j]\nfor i in range(n - 2):\n    j, k = i + 1, n - i - 2\n    if s[j] == \"b\" or s[j] == \"?\":\n        c1 = (x[j][0] * pow3(x[j][1]) + x[j][1] * pow3(x[j][1] - 1)) % mod\n        c2 = (y[k][0] * pow3(y[k][1]) + y[k][1] * pow3(y[k][1] - 1)) % mod\n        ans += c1 * c2\n        ans %= mod\nprint(ans)\n", "MOD = 10**9+7\nn = int(input())\ns = input()\n\nleftQ = [0 for i in range(n)]\nrghtQ = [0 for i in range(n)]\n\nleftA = [0 for i in range(n)]\nrghtC = [0 for i in range(n)]\n\nfor i in range(1,n):\n\tleftQ[i] = leftQ[i-1] + (1 if s[i-1]=='?' else 0)\n\tleftA[i] = leftA[i-1] + (1 if s[i-1]=='a' else 0)\n\nfor i in range(n-2,-1,-1):\n\trghtQ[i] = rghtQ[i+1] + (1 if s[i+1]=='?' else 0)\n\trghtC[i] = rghtC[i+1] + (1 if s[i+1]=='c' else 0)\n\nans = 0\nfor i in range(n):\n\tif s[i]=='b' or s[i]=='?':\n\t\tans += leftA[i]*rghtC[i]*pow(3,leftQ[i],MOD)*pow(3,rghtQ[i],MOD)\n\t\tif leftQ[i] > 0:\n\t\t\tans += leftQ[i]*rghtC[i]*pow(3,leftQ[i]-1,MOD)*pow(3,rghtQ[i],MOD)\n\t\tif rghtQ[i] > 0:\n\t\t\tans += leftA[i]*rghtQ[i]*pow(3,leftQ[i],MOD)*pow(3,rghtQ[i]-1,MOD)\n\t\tif leftQ[i] > 0 and rghtQ[i] > 0:\n\t\t\tans += leftQ[i]*rghtQ[i]*pow(3,leftQ[i]-1,MOD)*pow(3,rghtQ[i]-1,MOD)\n\t\tans %= MOD\n\nprint(ans)", "MOD = 10**9 + 7\n\n\ndef main():\n    N = int(input())\n    S = input()\n\n    pre_hatena = S[:1].count(\"?\")\n    a = S[:1].count(\"a\")\n    post_hatena = S[2:].count(\"?\")\n    c = S[2:].count(\"c\")\n\n    rev_3 = pow(3, MOD-2, MOD)\n    ans = 0\n    for i in range(1, N-1):\n        if S[i] == \"?\" or S[i] == \"b\":\n            pre_pow = pow(3, pre_hatena, MOD)\n            pre = pre_pow * a + ((pre_pow * rev_3) % MOD) * pre_hatena\n            post_pow = pow(3, post_hatena, MOD)\n            post = post_pow * c + ((post_pow * rev_3) % MOD) * post_hatena\n            ans += pre * post\n            ans %= MOD\n        if S[i] == \"?\":\n            pre_hatena += 1\n        if S[i] == \"a\":\n            a += 1\n        if S[i+1] == \"?\":\n            post_hatena -= 1\n        if S[i+1] == \"c\":\n            c -= 1\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\ns = input()\n\ndp_a = 0\ndp_ab = 0\ndp_abc = 0\nhatena = 1\n\nmod = 10**9 + 7\n\nif s[0]==\"a\" or s[0]==\"?\":\n    dp_a = 1\nif s[0]==\"?\":\n    hatena = 3\n\nfor i in range(1,n):\n    if s[i]==\"a\":\n        dp_a = (dp_a + hatena) % mod\n    elif s[i]==\"b\":\n        dp_ab = (dp_a + dp_ab) % mod\n    elif s[i]==\"c\":\n        dp_abc = (dp_ab + dp_abc) % mod\n    else:\n        dp_abc = (dp_ab + 3 * dp_abc) % mod\n        dp_ab = (3 * dp_ab + dp_a) % mod\n        dp_a = (3 * dp_a + hatena) % mod\n        hatena = (hatena * 3) % mod\n\nprint(dp_abc)\n", "import sys\nreadline = sys.stdin.readline\n\nN = readline()\nS = readline().strip()\nmod = 10**9+7\ndp = [1] + [0]*3\nfor s in S:\n    dp1 = dp[:]\n    if s == 'a':\n        dp1[1] += dp[0]\n    elif s == 'b':\n        dp1[2] += dp[1]\n    elif s == 'c':\n        dp1[3] += dp[2]\n    else:\n        dp1[1] += dp[0]\n        dp1[2] += dp[1]\n        dp1[3] += dp[2]\n        dp1[0] += 2*dp[0]\n        dp1[1] += 2*dp[1]\n        dp1[2] += 2*dp[2]\n        dp1[3] += 2*dp[3]\n    dp = [d % mod for d in dp1]\nprint(dp[-1])\n", "mod = 10**9+7\n\nn = int(input())\n\ns = input()\n\nem = 1\na = 0\nab = 0\nabc = 0\n\nfor cur_c in s:\n    new_em = 0\n    new_a = 0\n    new_ab = 0\n    new_abc = 0\n    \n    opts = [cur_c]\n    if cur_c==\"?\":\n        opts = ['a', 'b', 'c']\n        \n    for c in opts:\n        new_em += em\n        new_a += a\n        new_ab += ab\n        new_abc += abc\n        if c == 'a':\n            new_a += em\n        elif c == 'b':\n            new_ab += a\n        else:\n            new_abc += ab\n    em = new_em % mod\n    a = new_a % mod\n    ab = new_ab % mod\n    abc = new_abc % mod\n\nprint(abc)            \n", "mod = 10**9+7\nN, = list(map(int, input().split()))\ns = input().strip()\na=0\nb=0\nc=0\nt=1\nfor i in range(N):\n    if s[i] == \"a\":\n        a=(a+t)%mod\n    elif s[i] == \"b\":\n        b=(b+a)%mod\n    elif s[i] == \"c\":\n        c=(c+b)%mod\n    elif s[i] == \"?\":\n        t,a,b,c = t*3%mod,(a*3+t)%mod,(b*3+a)%mod,(c*3+b)%mod\nprint(c)\n", "n = int(input())\nseq = input()\ndp = [0, 0]\nans = 0\nmod = int(1e9 + 7)\npat = 1\nfor i in seq:\n    if i == 'a':\n        dp[0] = (dp[0] + pat) % mod\n    elif i == 'b':\n        dp[1] += dp[0]\n        dp[1] %= mod\n    elif i == 'c':\n        ans = (ans + dp[1]) % mod\n    else :\n        ans = (3 * ans + dp[1]) % mod\n        dp[1] = (3 * dp[1] + dp[0]) % mod\n        dp[0] = (3*dp[0] + pat) % mod\n        pat = (3 * pat) % mod\nprint(ans)\n", "MOD = 10 ** 9 + 7\n\nn = int(input())\n# (used ?) * 3 + cur \ndp = [0] * 12\nqcnt = 0\nfor c in input():\n    new_dp = dp.copy()\n    if c == 'a':\n        new_dp[0] += 1\n        new_dp[0] %= MOD\n    elif c == 'b':\n        new_dp[1] += dp[0]\n        new_dp[1] %= MOD\n        new_dp[4] += dp[3]\n        new_dp[4] %= MOD\n        new_dp[7] += dp[6]\n        new_dp[7] %= MOD\n        new_dp[10] += dp[9]\n        new_dp[10] %= MOD\n    elif c == 'c':\n        new_dp[2] += dp[1]\n        new_dp[2] %= MOD\n        new_dp[5] += dp[4]\n        new_dp[5] %= MOD\n        new_dp[8] += dp[7]\n        new_dp[8] %= MOD\n        new_dp[11] += dp[10]\n        new_dp[11] %= MOD\n    else:\n        qcnt += 1\n        new_dp[3] += 1\n        for i in range(8):\n            if i % 3 == 2:\n                continue\n            new_dp[i + 4] += dp[i]\n            new_dp[i] %= MOD\n    dp = new_dp\n    # print(dp)\n\nans = 0\nfor i in range(4):\n    if qcnt - i < 0:\n        break\n    tmp = pow(3, qcnt - i, MOD)\n    tmp *= dp[2 + 3 * i]\n    ans += tmp % MOD\n    ans %= MOD\n# print(dp[2::3])\nprint(ans)", "# for _ in range(int(input())):\nfor _ in range(1):\n    n = int(input())\n    s = input()\n    suf = [0] * n\n    suf[n - 1] = int(s[-1] in 'c')\n    suf1 = [0] * n\n    suf1[n - 1] = int(s[-1] in '?')\n    mod = 10**9 + 7\n    m = s.count('?')\n    tr0 = pow(3, m, mod)\n    if m - 1 >= 0:\n        tr1 = pow(3, m - 1, mod)\n    else:\n        tr1 = 0\n    if m - 2 >= 0:\n        tr2 = pow(3, m - 2, mod)\n    else:\n        tr2 = 0\n    trob = pow(3, mod - 2, mod)\n    for i in range(n - 2, -1, -1):\n        suf[i] = suf[i + 1] + int(s[i] in 'c')\n        suf1[i] = suf1[i + 1] + int(s[i] in '?')\n    for i in range(0, n - 1):\n        if s[i] not in 'b?':\n            suf[i + 1] = 0\n            suf1[i + 1] = 0\n        if s[i] == '?':\n            suf[i + 1] *= tr1\n            suf1[i + 1] *= tr2\n            suf[i + 1] %= mod\n            suf1[i + 1] %= mod\n        else:\n            suf[i + 1] *= tr0\n            suf[i + 1] %= mod\n            suf1[i + 1] *= tr1\n            suf1[i + 1] %= mod\n    suf[0] = 0\n    suf1[0] = 0\n    ans = 0\n    kek = 0\n    for i in range(n - 2, -1, -1):\n        if s[i] not in 'a?':\n            kek += suf[i + 1]\n            kek += suf1[i + 1]\n            continue\n        if s[i] in 'a':\n            ans += kek\n        else:\n            lol = kek * trob % mod\n            ans += lol\n        kek += suf[i + 1]\n        kek += suf1[i + 1]\n        ans %= mod\n    print(ans)\n", "import sys,math\nfrom collections import Counter,deque,defaultdict\nfrom bisect import bisect_left,bisect_right \nmod = 10**9+7\nINF = float('inf')\ndef inp(): return int(sys.stdin.readline())\ndef inpl(): return list(map(int, sys.stdin.readline().split()))\n\nn = inp()\ns = sys.stdin.readline()\ns = s[:n]\ndp = [[0] * 4 for _ in range(n+1)]\ndp[0][0] = 1\nfor i,x in enumerate(s):\n    for j in range(4):\n        if x == '?':\n            dp[i+1][j] = dp[i][j] * 3\n        else:\n            dp[i+1][j] = dp[i][j]\n    if x == 'a' or x == '?':\n        dp[i+1][1] += dp[i][0]\n    if x == 'b' or x == '?':\n        dp[i+1][2] += dp[i][1]\n    if x == 'c' or x == '?':\n        dp[i+1][3] += dp[i][2]\n    for j in range(4):\n        dp[i+1][j] %= mod\nprint(dp[-1][-1])\n", "import sys\ninput=sys.stdin.readline\ndef count(a, b):\n    m = len(a)\n    n = len(b)\n    lookup = [[0] * (n + 1) for i in range(m + 1)]\n    for i in range(n+1):\n        lookup[0][i] = 0\n    for i in range(m + 1):\n        lookup[i][0] = 1\n    for i in range(1, m + 1):\n        for j in range(1, n + 1):\n            if a[i - 1] == b[j - 1]:\n                lookup[i][j] = lookup[i - 1][j - 1] + lookup[i - 1][j]\n            else:\n                lookup[i][j] = lookup[i - 1][j]\n\n    return lookup[m][n]\nn=int(input())\ns=input()\nans=0\nz=0\nfor i in s:\n    if(i=='?'):\n        z+=1\nn1=count(s,\"abc\")\nans=ans+(pow(3,z,1000000007)*n1)\n\nn1=count(s,\"?bc\")\nif(z>=1):\n    ans=ans+(pow(3,z-1,1000000007)*n1)\nn1=count(s,\"a?c\")\nif(z>=1):\n    ans=ans+(pow(3,z-1,1000000007)*n1)\nn1=count(s,\"ab?\")\nif(z>=1):\n    ans=ans+(pow(3,z-1,1000000007)*n1)\nn1=count(s,\"??c\")\nif(z>=2):\n    ans=ans+(pow(3,z-2,1000000007)*n1)\nn1=count(s,\"a??\")\nif(z>=2):\n    ans=ans+(pow(3,z-2,1000000007)*n1)\nn1=count(s,\"?b?\")\nif(z>=2):\n    ans=ans+(pow(3,z-2,1000000007)*n1)\nn1=count(s,\"???\")\nif(z>=3):\n    ans=ans+(pow(3,z-3,1000000007)*n1)\nprint(ans%1000000007)", "l=int(input())\ns=input()\nmod=10**9+7\ndp=[[0,0,0,0] for _ in range(l+1)]\nfor i in range(l,-1,-1):\n  for j in range(3,-1,-1):\n    if i==l:\n      if j==3:\n        dp[i][j]=1\n      else:\n        dp[i][j]=0\n    else:\n      if s[i]=='?':\n        dp[i][j]=dp[i+1][j]*3\n      else:\n        dp[i][j]=dp[i+1][j]\n      if j!=3 and (s[i]=='?' or s[i]==('abc'[j])):\n        dp[i][j]+=dp[i+1][j+1]\n    dp[i][j]%=mod\nprint(dp[0][0])", "MOD = 10 ** 9 + 7\n\n\nn = int(input())\ns = input()\n\ncnt = s.count('?')\n# print(cnt)\n\na, ab, abc = 0, 0, 0\na2, ab2, abc2 = 0, 0, 0\na3, ab3, abc3 = 0, 0, 0\na4, ab4, abc4 = 0, 0, 0\nfor i in s:\n    if i == 'a':\n        a += 1\n    elif i == 'b':\n        ab += a\n        ab2 += a2\n    elif i == 'c':\n        abc += ab\n        abc2 += ab2\n        abc3 += ab3\n    else:\n        a2, ab2, abc2, ab3, abc3, abc4 = a2 + 1, ab2 + a, abc2 + ab, ab3 + a2, abc3 + ab2, abc4 + ab3\n    # print(a, ab, abc)\n    # print(a2, ab2, abc2)\n    # print(a3, ab3, abc3)\n    # print(a4, ab4, abc4)\n    # print('=========')\n\n\nif cnt == 0:\n    pass\nelif cnt == 1:\n    abc *= 3\nelif cnt == 2:\n    abc *= 9\n    abc2 *= 3\nelif cnt == 3:\n    abc *= 27\n    abc2 *= 9\n    abc3 *= 3\nelse:\n    abc = (abc * (3 ** cnt) % MOD) % MOD\n    abc2 = (abc2 * (3 ** (cnt - 1)) % MOD) % MOD\n    abc3 = (abc3 * (3 ** (cnt - 2)) % MOD) % MOD\n    abc4 = (abc4 * (3 ** (cnt - 3)) % MOD) % MOD\n\n# print(abc, abc2, abc3, abc4)\n\nans = (abc + abc2 + abc3 + abc4) % MOD\nprint(ans)\n", "n = int(input())\ns = str(input())\n\nmod = 10**9+7\n\nX = [[0]*4 for _ in range(n+1)]\nfor i in range(n):\n    for j in range(4):\n        X[i+1][j] = X[i][j]\n    if s[i] == 'a':\n        X[i+1][0] += 1\n    elif s[i] == 'b':\n        X[i+1][1] += 1\n    elif s[i] == 'c':\n        X[i+1][2] += 1\n    else:\n        X[i+1][3] += 1\n\nY = [[0]*4 for _ in range(n+1)]\nfor i in reversed(list(range(n))):\n    for j in range(4):\n        Y[i][j] = Y[i+1][j]\n    if s[i] == 'a':\n        Y[i][0] += 1\n    elif s[i] == 'b':\n        Y[i][1] += 1\n    elif s[i] == 'c':\n        Y[i][2] += 1\n    else:\n        Y[i][3] += 1\n#print(X)\n#print(Y)\nc = X[n][3]\nans = 0\nfor i in range(n):\n    if s[i] == 'b':\n        ans += X[i+1][3]*Y[i][3]*pow(3, max(0, c-2), mod)\n        ans += X[i+1][0]*Y[i][2]*pow(3, c, mod)\n        ans += X[i+1][3]*Y[i][2]*pow(3, max(0, X[i+1][3]-1+Y[i][3]), mod)\n        ans += X[i+1][0]*Y[i][3]*pow(3, max(0, X[i+1][3]+Y[i][3]-1), mod)\n        ans %= mod\n    if s[i] == '?':\n        ans += X[i][3]*Y[i+1][3]*pow(3, max(0, c-3), mod)\n        ans += X[i+1][0]*Y[i][2]*pow(3, max(0, c-1), mod)\n        ans += X[i][3]*Y[i][2]*pow(3, max(0, X[i][3]-1+Y[i+1][3]), mod)\n        ans += X[i+1][0]*Y[i+1][3]*pow(3, max(0, X[i][3]+Y[i+1][3]-1), mod)\n        ans %= mod\n        ans %= mod\nprint(ans)\n", "from sys import stdin, stdout\nMOD=10**9+7\ndef find(arr,N):\n    R=[0,0,0]\n    Z=1\n    for i in arr:\n        if i=='a': R[0]+=Z\n        if i=='b': R[1]=(R[1]+R[0])%MOD\n        if i=='c': R[2]=(R[2]+R[1])%MOD\n        if i=='?':\n            a,b,c=R[:],R[:],R[:]\n            a[0]=(a[0]+Z)%MOD\n            b[1]=(b[1]+b[0])%MOD\n            c[2]=(c[2]+c[1])%MOD\n            R=[(a[i]+b[i]+c[i])%MOD for i in range(3)]\n            Z=Z*3%MOD\n            # print(a)\n            # print(b)\n            # print(c)\n        # print(R)\n    return R[2]%MOD\n\ndef main():\n    # for _ in range(int(stdin.readline())):\n        N=int(stdin.readline())\n        arr=stdin.readline().strip()\n        print(find(arr,N))\nmain()\n\n\n# H=[]\n# def bt(i,s):\n#     if i==2: \n#         return H.append(s)\n#     bt(i+1,s+\"a\")\n#     bt(i+1,s+\"b\")\n#     bt(i+1,s+\"c\")\n# bt(0,\"\")\n# print(H)\n# F=0\n# X=[0,0,0]\n# for j in H:\n#     R=[0,0,0]\n#     for i in j:\n#         if i=='a': R[0]+=1\n#         if i=='b': R[1]+=R[0]\n#         if i=='c': R[2]+=R[1]\n#     F+=R[2]\n#     X=[X[i]+R[i] for i in range(3)]\n# print(X)\n# print(F)\n", "import sys\ninput = sys.stdin.readline\n\nn=int(input())\nS=input().strip()\n\nmod=10**9+7\n\nA=0\nAB=0\nABC=0\nq=0\n\nfor s in S:\n    if s==\"a\":\n        A+=pow(3,q,mod)\n    elif s==\"b\":\n        AB+=A\n    elif s==\"c\":\n        ABC+=AB\n    else:\n        ABC=AB+ABC*3\n        AB=A+AB*3\n        A=pow(3,q,mod)+A*3\n        q+=1\n    A%=mod\n    AB%=mod\n    ABC%=mod\n    \nprint(ABC)\n", "import sys\n\ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c for j in range(b)] for i in range(a)]\ndef list3d(a, b, c, d): return [[[d for k in range(c)] for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e for l in range(d)] for k in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x // y))\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\nINF = 10**19\nMOD = 10**9 + 7\nEPS = 10**-10\n\nN = INT()\nS = input()\n\ndp0 = [0] * (N+1)\ndp1 = [0] * (N+1)\ndp2 = [0] * (N+1)\ndp3 = [0] * (N+1)\ndp0[0] = 1\nfor i in range(N):\n    if S[i] == 'a':\n        dp0[i+1] += dp0[i]\n        dp1[i+1] += dp1[i]\n        dp2[i+1] += dp2[i]\n        dp3[i+1] += dp3[i]\n        dp1[i+1] += dp0[i]\n    elif S[i] == 'b':\n        dp0[i+1] += dp0[i]\n        dp1[i+1] += dp1[i]\n        dp2[i+1] += dp2[i]\n        dp3[i+1] += dp3[i]\n        dp2[i+1] += dp1[i]\n    elif S[i] == 'c':\n        dp0[i+1] += dp0[i]\n        dp1[i+1] += dp1[i]\n        dp2[i+1] += dp2[i]\n        dp3[i+1] += dp3[i]\n        dp3[i+1] += dp2[i]\n    else:\n        dp0[i+1] += dp0[i]*3\n        dp1[i+1] += dp1[i]*3\n        dp2[i+1] += dp2[i]*3\n        dp3[i+1] += dp3[i]*3\n        dp1[i+1] += dp0[i]\n        dp2[i+1] += dp1[i]\n        dp3[i+1] += dp2[i]\n    dp0[i+1] %= MOD\n    dp1[i+1] %= MOD\n    dp2[i+1] %= MOD\n    dp3[i+1] %= MOD\nans = dp3[N]\nprint(ans)\n", "n=int(input())\ns=input()\nMOD=10**9+7\nnuma=0\nnumab=0\nans=0\nnuma1=0\nnumab1=0\nans1=0\nnumab2=0\nans2=0\nans3=0\ncount=0\nfor i in range(n):\n    if s[i]=='a':\n        numa=(numa+1)%MOD\n    elif s[i]=='b':\n        numab=(numab+numa)%MOD\n        numab1=(numab1+numa1)%MOD\n    elif s[i]=='c':\n        ans=(ans+numab)%MOD\n        ans1=(ans1+numab1)%MOD\n        ans2=(ans2+numab2)%MOD\n    else:\n        ans1=(ans1+numab)%MOD\n        ans2=(ans2+numab1)%MOD\n        ans3=(ans3+numab2)%MOD\n        numab1=(numab1+numa)%MOD\n        numab2=(numab2+numa1)%MOD\n        numa1=(numa1+1)%MOD\n        count+=1\nans=(ans*pow(3,count,MOD))%MOD\nif count>=3:\n    ans=(ans+ans3*pow(3,count-3,MOD))%MOD\nif count>=2:\n    ans=(ans+ans2*pow(3,count-2,MOD))%MOD\nif count>=1:\n    ans=(ans+ans1*pow(3,count-1,MOD))%MOD\nprint(ans)", "n=int(input())\ns=input()\ndp=[[0,0,0]for i in range(n)]\nct=1\nmod=10**9+7\nfor i in range(n):\n    if i==0:\n        if s[i]=='?':ct*=3\n        if s[i]=='a' or s[i]=='?':dp[i][0]+=1\n    else:\n        aa,bb,cc=dp[i-1]\n        if s[i]=='a':\n            dp[i][0]=aa+ct\n            dp[i][1]=bb\n            dp[i][2]=cc\n        if s[i]=='b':\n            dp[i][0]=aa\n            dp[i][1]=aa+bb\n            dp[i][2]=cc\n        if s[i]=='c':\n            dp[i][0]=aa\n            dp[i][1]=bb\n            dp[i][2]=bb+cc\n        if s[i]=='?':\n            dp[i][0]=aa*3+ct\n            dp[i][1]=bb*3+aa\n            dp[i][2]=cc*3+bb\n            ct*=3\n    ct%=mod\n    dp[i][0]%=mod\n    dp[i][1]%=mod\n    dp[i][2]%=mod\nprint(dp[-1][-1])", "from bisect import *\nfrom collections import *\nfrom math import *\nfrom heapq import *\nfrom typing import List\nfrom itertools import *\nfrom operator import *\nfrom functools import *\nimport sys\n'''\n@lru_cache(None)\ndef fact(x):\n    if x<2:\n        return 1\n    return fact(x-1)*x\n\n@lru_cache(None)\ndef per(i,j):\n    return fact(i)//fact(i-j)\n\n@lru_cache(None)\ndef com(i,j):\n    return per(i,j)//fact(j)\n\ndef linc(f,t,l,r):\n    while l<r:\n        mid=(l+r)//2\n        if t>f(mid):\n            l=mid+1\n        else:\n            r=mid\n    return l\n\ndef rinc(f,t,l,r):\n    while l<r:\n        mid=(l+r+1)//2\n        if t<f(mid):\n            r=mid-1\n        else:\n            l=mid\n    return l\n\ndef ldec(f,t,l,r):\n    while l<r:\n        mid=(l+r)//2\n        if t<f(mid):\n            l=mid+1\n        else:\n            r=mid\n    return l\n\ndef rdec(f,t,l,r):\n    while l<r:\n        mid=(l+r+1)//2\n        if t>f(mid):\n            r=mid-1\n        else:\n            l=mid\n    return l\n\ndef isprime(n):\n    for i in range(2,int(n**0.5)+1):\n        if n%i==0:\n            return False\n    return True\n\ndef power2(n):\n    while not n&1:\n        n>>=1\n    return n==1\n'''\n'''\nfor i in range(t):\n    #n,m=map(int,input().split())\n    n,m=1,0\n    graph=defaultdict(set)\n    for i in range(m):\n        u,v=map(int,input().split())\n        graph[u-1].add(v-1)\n    visited=[0]*n\n    ans=[]\n    def delchild(u):\n        for child in graph[u]:\n            visited[child]=1\n            ans.append(child+1)\n    for i in range(n):\n        if not visited[i]:\n            children=graph[i]\n            if len(children)==1:\n                u=children.pop()\n                visited[u]=1\n                delchild(u)\n            elif len(children)==2:\n                u=children.pop()\n                v=children.pop()\n                if u in graph[v]:\n                    delchild(v)\n                    visited[v]=1\n                elif v in graph[u]:\n                    delchild(u)\n                    visited[u]=1\n                else:\n                    delchild(u)\n                    delchild(v)\n                    visited[u]=visited[v]=1\n    print(len(ans))\n    sys.stdout.flush()\n    print(' '.join(map(str,ans)))\n    sys.stdout.flush()\n\nimport time\ns=time.time()\ne=time.time()\nprint(e-s)\n'''\n'''\nt=int(input())\nfor i in range(t):\n    #n,m=map(int,input().split())\n    n=int(input())\n    x=int(sqrt(n))\n    if x*x==n:\n        ans=2*x-2\n    elif x*(x+1)>=n:\n        ans=2*x-1\n    else:\n        ans=2*x\n    print(ans)\n'''\nn=int(input())\narr=input()\nmod=10**9+7\na=b=c=0\nx=1\nfor ch in arr:\n    #print(ch,a,b,c)\n    if ch=='a':\n        a=(a+x)%mod\n    elif ch=='b':\n        b=(b+a)%mod\n    elif ch=='c':\n        c=(c+b)%mod\n    else:\n        a,b,c=(3*a+x)%mod,(3*b+a)%mod,(3*c+b)%mod\n        x=(3*x)%mod\nprint(c)\n\n    \n\n", "n = int(input())\ns = \" \" + input()\nF = [[-1 for i in range(4)] for j in range(n + 1)]\nF[0] = [1, 0, 0, 0]\n\ndiv = (10 ** 9 + 7)\n\nfor i in range(1, n + 1):\n    if s[i] == \"?\":\n        F[i][0] = (3 * F[i-1][0]) % div\n    else:\n        F[i][0] = F[i-1][0] % div\n    \n    if s[i] == \"a\":\n        F[i][1] = (F[i-1][1] + F[i-1][0]) % div\n    elif s[i] == \"?\":\n        F[i][1] = (3 * F[i-1][1] + F[i-1][0]) % div\n    else:\n        F[i][1] = (F[i-1][1]) % div\n    \n    if s[i] == \"b\":\n        F[i][2] = (F[i-1][2] + F[i-1][1]) % div\n    elif s[i] == \"?\":\n        F[i][2] = (3 * F[i-1][2] + F[i-1][1]) % div\n    else:\n        F[i][2] = F[i-1][2] % div\n    \n    if s[i] == \"c\":\n        F[i][3] = (F[i-1][3] + F[i-1][2]) % div\n    elif s[i] == \"?\":\n        F[i][3] = (3 * F[i-1][3] + F[i-1][2])  % div\n    else:\n        F[i][3] = F[i-1][3] % div\n    \n\nprint(F[-1][3])", "def main():\n    #n, m = map(int, input().split())\n\n    n = int(input())\n    s = input()\n    \n    a, b, ans = 0, 0, 0\n    cnt = 1\n    for i in range(n):\n        if s[i] == \"?\":\n            ans = (ans*3 + b) % 1000_000_007\n            b = (b * 3 + a) % 1000_000_007\n            a = (a * 3 + cnt) % 1000_000_007\n            cnt = (cnt * 3) % 1000_000_007\n        elif s[i] == \"c\":\n            ans = (ans + b) % 1000_000_007\n        elif s[i] == \"b\":\n            b = (b + a) % 1000_000_007\n        elif s[i] == \"a\":\n            a = (a + cnt) % 1000_000_007\n    print(ans)\n\n#input = sys.stdin.readline\n\n#sys.setrecursionlimit(2097152)\ntn = 1 #int(input())\nfor _ in range(tn):\n    main()", "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\n\nfrom itertools import accumulate\nfrom functools import lru_cache\n\nM = mod = 10 ** 9 + 7\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n \ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\n\n\n\nn = val()\nl = list(st())\n\n\n\n\n\nquestions1 = [0]\nAs = [0]\nCs = [0]\nquestions2 = [0]\n\nfor i in range(n):\n\n    questions1.append(questions1[-1])\n    if l[i] == '?':\n        questions1[-1] += 1\n        \n    \n    As.append(As[-1])\n    if l[i] == 'a':\n        As[-1] += 1\n\nfor i in range(n - 1, -1, -1):\n    questions2.append(questions2[-1])\n    if l[i] == '?':\n        questions2[-1] += 1\n        \n    \n    Cs.append(Cs[-1])\n    if l[i] == 'c':\n        Cs[-1] += 1\n\nCs.pop()\nquestions2.pop()\n\nCs.reverse()\nquestions2.reverse()\n\n\nans = 0\nfor i in range(n):\n    if l[i] == 'b' or l[i] == '?':\n        left = right = 0\n        left = As[i] * pow(3, questions1[i], mod) % mod\n        if questions1[i]:left = (left + pow(3, questions1[i] - 1, mod) * questions1[i]) % mod\n        right = Cs[i] * pow(3, questions2[i], mod) % mod\n        if questions2[i]:right = (right + pow(3, questions2[i] - 1, mod) * questions2[i]) % mod\n\n        # print(l, i, left, right)\n\n        ans = (ans + left * right) % mod\nprint(ans)", "mod = 10 ** 9 + 7\nn = int(input())\ns = input()\ndp = [[0] * 4 for i in range(len(s) + 1)]\ndp[len(s)][3] = 1\nfor i in range(len(s))[::-1]:\n    for j in range(4)[::-1]:\n        if s[i] == \"?\":\n            dp[i][j] = dp[i + 1][j] * 3\n        else:\n            dp[i][j] = dp[i + 1][j]\n        if j < 3:\n            if s[i] == \"?\" or s[i] == \"abc\"[j]:\n                dp[i][j] += dp[i + 1][j + 1]\n        dp[i][j] %= mod\nprint(dp[0][0])", "n = int(input())\ns = input().lower()\n\ndp_a = 0\ndp_ab = 0\ndp_abc = 0\nhatena = 1\n\nmod = 10**9 + 7\n\nfor i in range(n):\n    if s[i]==\"a\":\n        dp_a = (dp_a + hatena) % mod\n    elif s[i]==\"b\":\n        dp_ab = (dp_a + dp_ab) % mod\n    elif s[i]==\"c\":\n        dp_abc = (dp_ab + dp_abc) % mod\n    else:\n        dp_abc = (dp_ab + 3 * dp_abc) % mod\n        dp_ab = (3 * dp_ab + dp_a) % mod\n        dp_a = (3 * dp_a + hatena) % mod\n        hatena = (hatena * 3) % mod\n\nprint(dp_abc)\n", "n = int(input());seq = input();dp = [0, 0];ans = 0;mod = int(1e9 + 7);pat = 1\nfor i in seq:\n    if i == 'a':dp[0] = (dp[0] + pat) % mod\n    elif i == 'b':dp[1] += dp[0];dp[1] %= mod\n    elif i == 'c':ans = (ans + dp[1]) % mod\n    else :ans = (3 * ans + dp[1]) % mod;dp[1] = (3 * dp[1] + dp[0]) % mod;dp[0] = (3*dp[0] + pat) % mod;pat = (3 * pat) % mod\nprint(ans)", "n = int(input())\ns = input()\n\ndp = [[0, 0, 0] for _ in range(n)]\ndp2 = [[0, 0, 0] for _ in range(n)]\nprev = [0, 0, 0]\nfree = 0\n\nmod = 1000000007\nfor i in range(n):\n\tif i > 0:\n\t\tdp[i] = dp[i-1].copy()\n\tif s[i] == 'a':\n\t\tdp[i][0] += 1\n\tif s[i] == 'b':\n\t\tdp[i][1] += dp[i][0]\n\t\tif dp[i][1] >= mod:\n\t\t\tdp[i][1] -= mod\n\tif s[i] == 'c':\n\t\tdp[i][2] += dp[i][1]\n\t\tif dp[i][2] >= mod:\n\t\t\tdp[i][2] -= mod\n\tif s[i] == '?':\n\t\tfree += 1\n\nfor i in reversed(range(0, n)):\n\tif i+1 < n:\n\t\tdp2[i] = dp2[i+1].copy()\n\tif s[i] == 'c':\n\t\tdp2[i][0] += 1\n\tif s[i] == 'b':\n\t\tdp2[i][1] += dp2[i][0]\n\t\tif dp2[i][1] >= mod:\n\t\t\tdp2[i][1] -= mod\n\tif s[i] == 'a':\n\t\tdp2[i][2] += dp2[i][1]\n\t\tif dp2[i][2] >= mod:\n\t\t\tdp2[i][2] -= mod\n\nans = dp[n-1][2] * pow(3, free, mod) % mod\nans += (free*(free-1)*(free-2)//6) * pow(3, mod-1+free-3, mod) % mod\nbefore, after = 0, free\nfor i in range(n):\n\tif s[i] == '?':\n\t\tmul = pow(3, free-1, mod)\n\t\tans += mul*(dp[i][0] * dp2[i][0] + dp2[i][1] + dp[i][1]) % mod\n\t\tbefore += 1\n\t\tafter -= 1\n\tif s[i] == 'a':\n\t\tans += pow(3, mod-1+free-2, mod) * (after*(after-1)//2) % mod\n\tif s[i] == 'b':\n\t\tans += pow(3, mod-1+free-2, mod) * (after * before)%mod\n\tif s[i] == 'c':\n\t\tans += pow(3, mod-1+free-2, mod) * (before*(before-1)//2) % mod\n\tif ans >= mod:\n\t\tans %= mod\nprint(ans%mod)"]