["n=int(input())\nar=list(map(int,input().split()))\ns=set()\na=[]\nfor x in ar[::-1]:\n    if x not in s:\n        a.append(x)\n    s.add(x)\nprint(len(a))\nprint(*a[::-1])", "n = int(input())\n\nlst = [int(x) for x in input().split()]\n\na = []\nfor x in range(n - 1, -1, -1):\n    if not lst[x] in a:\n        a.append(lst[x])\n\na.reverse()\nprint(len(a))\nprint(*a)\n", "n = int(input())\nx = [ int(i) for i in input().split() ][::-1]\n\ny = set()\n\nyy = []\nfor i in x:\n    if i not in y:\n        y.add(i)\n        yy.append(i)\n\n\nyy = yy[::-1]\nprint(len(yy))\nfor i in yy:\n    print(i,end=\" \")\n", "n = int(input())\n\na = list(map(int, input().split()))\n\nres = []\nseen = set()\n\nfor e in reversed(a):\n\tif e in seen:\n\t\tcontinue\n\n\tres.append(e)\n\tseen.add(e)\n\nprint(len(res))\nprint(' '.join(str(x) for x in reversed(res)))", "n = int(input())\nns = list(map(int, input().split()))[::-1]\nfs = []\n\nfor x in ns:\n    if x not in fs:\n        fs.append(x)\n\nprint(len(fs))\nprint(*fs[::-1])", "# ANSHUL GAUTAM\n# IIIT-D\n \n\n\n\nT = int(input())\nl = list(map(int, input().split()))\nL = []\nr = l[::-1]\nfor i in r:\n\tif(i not in L):\n\t\tL.append(i)\nR = L[::-1]\nprint(len(R))\nprint(*R)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "n = int(input())\nl = list(map(int, input().split(' ')))\ns = set()\nl1 = list()\nl.reverse()\nfor i in l:\n    if not i in s:\n        l1.append(i)\n        s.add(i)\nl1.reverse()\nprint(len(l1))\nfor i in l1:\n    print(i, end=' ')", "n = int(input())\n\narray = list(map(int, input().strip().split()))\n\ndodani = set()\n\nnew = []\n\nfor e in array[::-1]:\n    if e not in dodani:\n        dodani.add(e)\n        new.append(e)\n\nprint(len(new))\nprint(' '.join(list(map(str, new[::-1]))))\n", "n = int(input())\nL = list(map(int, input().split()))\nm = dict()\nfor x in L:\n    m.setdefault(x, 0)\n    m[x] += 1\n\nres = []\nfor x in L:\n    m[x] -= 1\n    if m[x] == 0:\n        res.append(x)\n\nprint(len(res))\nprint(\" \".join(map(str, res)))\n", "n = int(input())\nT = input().split(' ')\nfor i in range(n):\n    T[i] = int(T[i])\nL = []\nfor i in range(n):\n    if T[n-1-i] not in L:\n        L.append(T[n-1-i])\nprint(len(L))\nfor i in range(len(L)-1):\n    print(L[len(L)-1-i], end=' ')\nprint(L[0])\n", "n = int(input())\na = list(map(int, input().split()))\n\nb = []\n\nfor i in a[::-1]:\n    if i not in b:\n        b.append(i)\nprint(len(b))\nprint(' '.join(map(str, b[::-1])))", "n=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in a[::-1]:\n    if i not in b:\n        b.append(i)\nprint(len(b))\nprint(*b[::-1])\n", "n = int(input())\nM = []\nS = set()\nL = list(map(int, input().split()))\nfor i in range(n - 1, -1, -1):\n    if L[i] not in S:\n        S.add(L[i])\n        M.append(L[i])\nprint(len(M))\nM.reverse()\nprint(*M)", "# your code goes here\nn=int(input())\nl=list(map(int,input().split()))\nrdup=[]\nl=l[::-1]\nfor i in l:\n\tif i not in rdup:\n\t\trdup.append(i)\nrdup=rdup[::-1]\nprint(len(rdup))\nfor i in rdup:\n\tprint(i,end=' ')", "n = int(input())\na = list(map(int,input().split()))\na = a[::-1]\nhm = [0]*10000\nans = []\nfor i in a:\n    if(hm[i]==0):\n        ans.append(i)\n        hm[i]=1\nprint(len(ans))\nfor i in ans[::-1]:\n    print(i,end= ' ')", "def __starting_point():\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = []\n\n    for i in range(n-1,-1,-1):\n        if l[i] not in k:\n            k.append(l[i])\n\n    k = list(reversed(k))\n    print(len(k))\n    for i in k:\n        print(i,end=' ')\n__starting_point()", "n=int(input())\narr=list(map(int,input().split()))\nd={}\nfor i in range(n):\n    d[arr[i]]=i \nans=[]\nfor i in d.keys():\n    ans.append([d[i],i])\nans.sort()\nprint(len(ans))\nfor i in range(len(ans)):\n    print(ans[i][1],end=\" \")\nprint(\"\")", "d = set()\n\nn = int(input())\na = [int(x) for x in input().split()]\nb = []\nfor i in range(n - 1, -1, -1):\n    if a[i] in d:\n        continue\n    b.append(a[i])\n    d.add(a[i])\nb.reverse()\n\nprint(len(b))\nfor x in b:\n    print(x, end=' ')\n", "l = int(input())\nn = input().split()\n\nrevert = n[::-1]\nout = []\nfor x in range(l):\n    i = revert[x]\n    if i in out:continue\n    out.append(i)\nprint (len(out))\nprint (' '.join(out[::-1]))", "n = int(input())\nnums = set()\narr = list(map(int, input().split()))\narr.reverse()\nans = []\nfor _ in arr:\n\tif _ not in nums:\n\t\tnums.add(_)\n\t\tans.append(_)\nans.reverse()\nprint(len(ans))\nprint(*ans)", "n = int(input())\nar = list(map(int, input().split()))\ndic = {}\n\nar.reverse()\nnar = []\nfor x in ar:\n    if dic.get(x) is None:\n        nar.append(x)\n        dic[x] = True\nnar.reverse()\n\nprint(len(nar))\nprint(*nar)\n", "N = int(input())\n\nS = set()\n\nanswer = []\n\nfor x in [int(x) for x in input().split()][::-1]:\n    if x not in S:\n        answer.append(x)\n        S.add(x)\n\nprint(len(answer))\nprint(' '.join(str(i) for i in answer[::-1]))\n", "n=int(input())\nl=[int(i) for i in input().split()]\n\nc=[0 for i in range(1000+1)]\nk=[]\nfor e in l[::-1]:\n    if c[e]==0:\n        k.append(e)\n        c[e]=1\n        \nprint(len(k))\nfor e in k[::-1]:\n    print(e,end=\" \")\nprint()", "n = int(input())\na = list(map(int, input().split()))\nnew = []\nwas = set()\nfor i in range(n - 1, -1 , -1):\n    if a[i] not in was:\n        new.append(a[i])\n        was.add(a[i])\nprint(len(new))\nfor i in range(len(new) - 1, -1, -1):\n    print(new[i], end=' ')", "n=int(input())\nl=list(map(int,input().split()))\nv=[]\nl.reverse()\nfor i in l:\n      if i not in v:\n            v.append(i)\nv.reverse()\nprint(len(v))\nfor i in v:\n      print(i,end=\" \")\n            \n"]