["N = int(input())\nH = list(map(int,input().split()))\n\ntop = H[0]\ncnt = 1\n\nfor i in range(1,N):\n  if top <= H[i]:\n    cnt += 1\n    top = H[i]\n\nprint(cnt)", "N = int(input())\nH = list(map(int, input().split()))\n \nans = 0\nfor i in range(N):\n  flag = True\n  for j in range(i):\n    if H[j] > H[i]: flag = False\n  if flag: ans += 1\n    \nprint(ans)", "n = int(input())\nh = list(map(int, input().split()))\n\nx = 1\nans = h[0]\n\nfor i in range(1, n):\n    if h[i] >= ans:\n        x = x + 1\n        ans = h[i]\n\nprint(x)", "N = int(input())\nH = list(map(int,input().split()))\n\nh = 1\nyama = []\nyama.append(H[0])\n\nwhile h <= N - 1:\n    if max(H[:h]) <= H[h]:\n        yama.append(H[h])\n    h += 1\n\nprint(len(yama))", "n = int(input())\nh = list(map(int, input().split()))\n\na = h[0]\nans = 0\nfor i in h:\n    if i >= a:\n        ans += 1\n        a = i\nprint(ans)", "N = int(input())\nH = list(map(int, input().split()))\n\ncount = N\nfor i in range(N - 1):\n    j = -1 - i\n    if H[j] < max(H[:j]):\n        count -= 1\n\nprint(count)", "N = int(input())\nH = list(map(int,input().split()))\n\nans = 0\nh = H[0]\nfor i in H:\n\tif h <= i :\n\t\tans += 1\n\t\th = i\n\nprint(ans)\n", "N = int(input())\nH = list(map(int, input().split()))\n\nmax_height = 0\ncount = 0\nfor h in H:\n    if h >= max_height:\n        max_height = h\n        count += 1\nprint(count)", "n = int(input())\nli = list(map(int,input().split()))\ncnt = 0\nmin = li[0]\nfor i in li:\n    if i >= min:\n        cnt += 1\n        min = i\n    \nprint(cnt)", "n = int(input())\nh = list(map(int, input().split()))\ncount = 0\nm = 0\nfor i in range(0, n):\n  if i == 0:\n    count += 1\n    m = h[i]\n  else:\n    if h[i] >= m:\n      count += 1\n      m = h[i]\nprint(count)", "n=int(input())\nh=list(map(int,input().split()))\nkei = 1\nm=h[0]\nfor i in range(1,n):\n    if m <= h[i]:\n        m = h[i]\n        kei += 1\n\nprint(kei)", "A=int(input())\nl=list(map(int,input().split()))\nans=0\nf=0\nfor i in l:\n   if f<=i:\n      f=i\n      ans+=1\nprint(ans)", "N=int(input())\nH=list(map(int,input().split()))\nx=1\nfor i in range(N):\n    for j in range(i):\n        if H[i]<H[j]:\n            break\n        if j==i-1:\n            x+=1\nprint(x)", "N = int(input())\nheight = list(map(int, input().split()))\n\ncount = 1\nmax_height = height[0]\n\nfor i in range(1, N):\n    if height[i] >= max_height:\n        max_height = height[i]\n        count += 1\n\nprint(count)\n", "n = int(input())\nmountains = list(map(int, input().split()))\n\ntotal = 0\nmountains_current = []\nfor i in range(n):\n    mountains_current.append(mountains[i])\n    if mountains[i] >= max(mountains_current):\n        total += 1\n\nprint(total)\n", "n=int(input())\nx =list(map(int, input().split()))\n\nq=0\np=0\nfor i in range(n):\n  for j in range(i):\n    if i>j:\n      if x[i]-x[j]>=0:\n        q+=1\n      else:\n        q=0\n        break\n  if q>0:\n    p+=1\n    q=0\n\nprint((1+p))\n        \n", "mountain_number = input()\nmountain_height = map(int, input().split())\nobservable_inn = observable_height = 0\nfor i in mountain_height:\n    if i >= observable_height:\n        observable_height = i\n        observable_inn += 1\nprint(observable_inn)", "n=int(input())\nh=list(map(int,input().split()))\nans=1\nfor i in range(1,n):\n    for j in range(0,i):\n        if h[i]-h[j]<0:\n            break\n    else:\n        ans+=1\nprint(ans)", "N=int(input())\nH=list(map(int,input().split()))\ntemp=0\nans=0\nfor i in range(N):\n    if temp<=H[i]:\n        ans+=1\n        temp=H[i]\nprint(ans)\n", "n=int(input())\n\nh=list(map(int,input().split()))\ncnt=0\nmax=0\nfor i in range(n):\n    if max<=h[i]:\n        cnt+=1\n        max=h[i]\n\nprint(cnt)", "# \u6570\u5024\u306e\u53d6\u5f97\nN = int(input())\nHlist = list(map(int, input().split()))\n\n# \u6700\u5c0f\u5024\u306e\u53d6\u5f97\u3068\u51fa\u529b\nVcnt = 0\nfor cnt in range(0,N,1):\n    maxH = max(Hlist[:cnt+1])\n    if Hlist[cnt] >= maxH:\n        Vcnt += 1\n\nprint(Vcnt)", "n=int(input())\na=list(map(int,input().split()))\n\nh_max=a[0]\nr=1\nfor ii in range(1,len(a)):\n  if h_max<=a[ii]:\n    r+=1\n    h_max=a[ii]\nprint(r)\n", "N = int(input())\nH = list(map(int, input().split()))\n \nans = 0\nfor i in range(N):\n  flag = True\n  for j in range(i):\n    if H[j] > H[i]:\n      flag = False\n      break\n  if flag: ans += 1\n    \nprint(ans)", "N = int(input())\nH = list(map(int,input().split()))\n\nmax_h = 0\ncnt = 0\nfor i in range(N):\n  if H[i] >= max_h:\n    max_h = H[i]\n    cnt += 1\n\nprint(cnt)\n", "# B - Great Ocean View\n\n# \u5404\u5c71\u9802\u306b\u3042\u308bN\u500b\u306e\u65c5\u9928\u306e\u3046\u3061\u3001\u6d77\u304c\u898b\u3048\u308b\u65c5\u9928\u306f\u3044\u304f\u3064\u304b\n\nN = int(input())\nH = list(map(int, input().split()))\n\nanswer = 0\nheight = H[0]\n\nfor i in H:\n    if i >= height:\n        answer += 1\n\n    height = max(i,height)\n\nprint(answer)", "# ABC124\n# B Great Ocean View\nn = int(input())\nH = list(map(int, input().split()))\nhigh = H[0]\nct = 1\nfor i in range(1,n):\n    if high <= H[i]:\n        ct += 1\n        high = H[i]\nprint(ct)\n", "N = int(input())\nH = list(map(int, input().split()))\nprint(sum(H[i] >= max(H[:i] + [0]) for i in range(N)))", "N = int(input())\nH = list(map(int, input().split()))\n\ncnt = 0\nmax_ = 0\nfor h in H:\n    if h >= max_:\n        cnt += 1\n        max_ = h\n\nprint(cnt)\n", "N = int(input())\nH = list(map(int, input().split()))\nans = 0\nfor i in range(N):\n    flg = True\n    for j in range(i):\n        if H[j] > H[i]:\n            flg = False\n            break\n    \n    if flg:\n        ans += 1\n\nprint(ans)", "n = int(input())\nh = [int(s) for s in input().split()]\nhighest = h[0]\nans = 1\nfor i in range(1, n):\n    if h[i] >= highest:\n        ans += 1\n        highest = h[i]\nprint(ans)\n", "n = int(input())\nh = list(map(int, input().split()))\nans = 0\na = 0\nfor i in range(n):\n    if a <= h[i]:\n        ans += 1\n    if a < h[i]:\n        a = h[i]\nprint(ans)", "N = int(input())\nH = list(map(int, input().split()))\nans = 0\nmaxH = 0\nfor i in H:\n  if maxH <= i:\n    ans += 1\n    maxH = i\nprint(ans)\n", "N = int(input())\nH = list(map(int, input().split()))\n\nc = 1\nh = H[0]\n\nfor i in range(1, N):\n  if h <= H[i]:\n    h = H[i]\n    c = c + 1\n    \nprint(c)", "N = int(input())\nH = list(map(int,input().split()))\n\nh_list = [H[0]]\ncnt = 1\nfor i in range(1, N):\n    h_list.append(H[i])\n    # print(h_list)\n    # print(H[i])\n    if max(h_list) == H[i]:\n        cnt += 1\nprint(cnt)", "N = int(input())\nH = list(map(int, input().split()))\ncount = 1\nfor i in range(1, N):\n  k = N - i\n  temp = H[k]\n  del H[-1]\n  if temp >= max(H):\n    count += 1\nprint(count)", "N = int(input())\nH = list(map(int, input().split()))\n\ncount = N\nfor i in range(N - 1):\n    j = -1 - i\n    if H[j] < max(H[:j]):\n        count -= 1\n\nprint(count)", "n=int(input())\nH=list(map(int,input().split()))\nh=0\nans=0\nfor i in range(n):\n  if H[i]>=h:\n    ans+=1\n  h=max(h,H[i])\nprint(ans)", "n = int(input())\nans = prev = 0\nfor h in map(int, input().split()):\n    if prev <= h:\n        ans += 1\n        prev = h\nprint(ans)\n", "n = int(input())\nq = list(map(int,input().split()))\nm = 0\ncnt = 0\nfor i in range(n):\n  if m <= q[i]:\n    cnt += 1\n  m = max(q[i],m)\n  \nprint(cnt)", "n = int(input())\nheights = list(map(int, input().split()))\n\ncnt = 1\nmax = heights[0]\nfor p in range(n):\n    if p == 0:\n        continue\n    else:\n        if max <= heights[p]:\n            max = heights[p]\n            cnt += 1\n\nprint(cnt)", "N = int(input())\nH = list(map(int, input().split()))\nans = 0\nmx = H[0]\nfor h in H:\n    if h >= mx:\n        ans += 1\n    mx = max(h, mx)\nprint(ans)", "n = int(input())\nh = list(map(int, input().split()))\n\nans = 0\n\nfor i in range(n):\n    h_list = h[0:i+1]\n    highest = max(h_list)\n    if highest <= h[i]:\n        ans = ans + 1\n\nprint(ans)", "n = int(input())\nh = list(map(int,input().split()))\na = 0\ncount = 0\nfor i in range(n):\n  if h[i] >= a:\n    a = h[i]\n    count += 1\n\nprint(count)", "N = int(input())\nH = map(int,input().split())\nheight_list = list(H)\n# print(height_list)\nInn = []\nOcean_view = []\n\n# Ocean_view.append(height_list[0])\ni=0\nfor j in range(N):\n    Inn.append(height_list[i])\n    if height_list[i] == max(Inn):\n        Ocean_view.append(height_list[i])\n\n    i += 1\n\nprint(len(Ocean_view))", "n = int(input())\na = list(map(int, input().split()))\ns, t = 0, 0\nfor i in a:\n  if i >= s:\n    s = i\n    t += 1\nprint(t)", "#!/usr/bin/env python3\n\n# input = stdin.readline\n\n\n\ndef main():\n  N = int(input())\n  h = list(map(int,input().split()))\n  highest = 0\n  res = 0\n  for i in range(N):\n    if h[i] >= highest:\n      res += 1\n      highest = h[i]\n  print(res)\n  return\n\ndef __starting_point():\n  main()\n\n__starting_point()", "n = int(input())\nhi = list(map(int, input().split()))\nans = [hi[0]]\nhi0 = hi[0]\nfor i in hi[1:]:\n    if hi0 <= i:\n        ans.append(i)\n        hi0 = max(hi0, i)\n\nprint(len(ans))", "n = int(input())\nh = list(map(int, input().split()))\n\nans = 1\nfor i in range(1, len(h)):\n    if h[i] >= max(h[:i]):\n        ans += 1\nprint(ans)", "N = int(input())\nH = list(map(int,input().split()))\nans = 0\nfor i in range(N):\n    for j in range(0,i):\n        if H[j] > H[i]:\n            ans -= 1\n            break\n    ans += 1\nprint(ans)", "n=int(input())\nh=[int(i) for i in input().split()]\n\ncount=1\n\nfor i in range(1,n):\n    if h[i]>=max(h[:i]):\n        count+=1\n        \nprint(count)\n", "N = int(input())\nhotel = list(map(int, input().split()))\ni = 0\nj = 0\ncnt = 0\nfor i in range(N):\n  q = 1\n  for j in range(i):\n    q = 0\n    if hotel[j] > hotel[i]: break\n    else:\n      q = 1\n  if q == 1:\n    cnt += 1\nprint(cnt)", "N = int(input())\nH = list(map(int, input().split()))\nans = 0\nmx = H[0]\nfor h in H:\n    if h >= mx:\n        ans += 1\n    mx = max(h, mx)\nprint(ans)", "n = int(input())\nlist_h = [int(i) for i in input().split()]\ncount = 0\nmax = 0\nfor i in range(0, n):\n    if list_h[i] >= max:\n        count += 1\n        max = list_h[i]\nprint(count)", "n = int(input())\nh = list(map(int,input().split()))\n\nans = 1\nmax = h[0]\nfor i in range(1,n) :\n    if h[i] >= max :\n        max = h[i]\n        ans += 1\nprint(ans)\n", "N = int(input())\nH = list(map(int, input().split()))\nmaxi = 0\nans = 0\nfor i in range(N): \n    if H[i] >= maxi:\n        ans += 1\n        maxi = H[i]\nprint(ans)", "n = int(input())\nh = list(map(int,input().split()))\nans = 1\nhi = h[0]\nfor i in range(1,n):\n  if h[i] >= hi:\n    ans += 1\n    hi = h[i]\nprint(ans)", "N = int(input())\nH = list(map(int, input().split()))\nmaximum = H[0]\ncnt = 1\n\nfor i in range(1,N):\n    if H[i] >= maximum:\n        maximum = H[i]\n        cnt += 1\nprint(cnt)\n\n", "a=int(input())\nb=list(map(int,input().split()))\nc=0\nd=0\nfor i in range(a):\n  if c<=b[i]:\n    c=b[i]\n    d=d+1\nprint(d)", "a = int(input())\nb = list(map(int,input().split()))\nc = 0\nans = 0\nfor i in range(a):\n  if b[i] >= c:\n    ans += 1\n  c = max(c,b[i])\nprint(ans)\n\n", "# abc124b\n# https://atcoder.jp/contests/abc124/tasks/abc124_b\n\n# \u6771\u897f\u306bN\u500b\u306e\u5c71\u304c\u3042\u308b\n# \u897f\u304b\u3089i\u756a\u76ee\u306e\u5c71\u306e\u9ad8\u3055\u306fHi\n# \u897f\u304b\u3089i\u756a\u76ee\u306e\u5c71\u9802\u306b\u3042\u308b\u65c5\u9928\u304b\u3089\u306f\u5fc5\u305a\u6d77\u304c\u898b\u308c\u308b\n# \u897f\u304b\u3089i(i=2, 3,...,N)\u756a\u76ee\u306e\u5c71\u9802\u306b\u3042\u308b\u65c5\u9928\u306b\u3064\u3044\u3066\u306f\u3001\n# H1<Hi\u3001H2<Hi...\u304b\u3064Hi-1<Hi\u306e\u3068\u304d\u3001\u6d77\u304c\u898b\u308c\u308b\n\n# N\u5b50\u306e\u65c5\u9928\u306e\u3046\u3061\u3001\u6d77\u304c\u307f\u3089\u308c\u308b\u306e\u306f\u4f55\u500b\u304b\n\n# max:\u6700\u5927\u5024\u3092\u6c42\u3081\u308b\u95a2\u6570\n\n# \u5165\u529b\nn = int(input())\nh = list(map(int, input().split()))\n\n# \u51e6\u7406\n# \u5c71\u306e\u9ad8\u3055\u3092\u683c\u7d0d\u3059\u308b\nh_list = [h[0]]\n# \u6d77\u304c\u898b\u3048\u308b\u65c5\u9928\u306e\u30ab\u30a6\u30f3\u30c8\nans = 1\n\nfor i in range(1, n):\n    h_list.append(h[i])\n    # \u65e2\u5b58\u306e\u30ea\u30b9\u30c8\u306e\u6700\u5927\u5024\u306e\u5c71\u306e\u9ad8\u3055\u4ee5\u4e0a\u306e\u6642\n    if h[i] >= max(h_list):\n        # \u6d77\u304c\u898b\u3048\u308b\u65c5\u9928\u306e\u6570\u3092\u52a0\u7b97\n        ans += 1\n\nprint(ans)\n\n", "N = int(input())\nH = list(map(int,input().split()))\nhighest = H[0]\nans = 0\n\nfor i in range(N):\n    if highest <= H[i]:\n        highest = H[i]\n        ans +=1\n\nprint(ans)", "# B - Great Ocean View\n# https://atcoder.jp/contests/abc124/tasks/abc124_b\n\nn = int(input())\nh = list(map(int, input().split()))\n\ncnt = 1\nwk = h[0]\n\nfor i in range(n - 1):\n    if wk <= h[i + 1]:\n        cnt += 1\n        wk = h[i + 1]\n\nprint(cnt)\n", "N = input()\nH = map(int, input().split())\n\nnum = 0\nans = 0\n\nfor i in H:\n    if num <= i:\n        ans += 1\n        num = i\nprint(ans)", "n=int(input())\nh=list(map(int, input().split()))\ncount=0\nfor i in range(n):\n  check=True\n  for j in range(i):\n    if h[j]>h[i]:\n      check=False\n  if check:\n    count+=1\nprint(count)", "N = int(input())\nH = map(int, input().split())\n\nans = 0\nnum = 0\nfor i in H:\n    if num <= i:\n       ans += 1\n       num = i\n\nprint(ans)", "n = int(input())\nhl = list(map(int, input().split()))\ncnt = 0\nhmax = 0\nfor h in hl:\n    if hmax <= h:\n        hmax = h\n        cnt += 1\n\nprint(cnt)", "N = int(input())\nls = list(map(int,input().split()))\nm = 0\nii = 0\nfor i in range(N):\n    if m <= ls[i]:\n        ii += 1\n        m = ls[i]\n    else:\n        continue\nprint(ii)", "n = int(input())\nh = list(map(int, input().split()))\nans = 0\nmaxh = 0\nfor i in range(n):\n    if h[i] >= maxh:\n        ans += 1\n        maxh = h[i]\nprint(ans)", "n = int(input())\ndata = list(map(int,input().split()))\nans = 1\n\nfor  i in range(1,n):\n    if all(data[i] >= j for j in data[0:i]):\n        ans += 1\nprint(ans)", "def main():\n    sea = 1\n    n = int(input())\n    h = list(map(int, input().split()))\n    mountain = h[0]\n    for i in range(1, n):\n        if mountain <= h[i]:\n            sea += 1\n            mountain = h[i]\n    print(sea)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\nh = list(map(int, input().split()))\nans = 0\nhighest = h[0]\nfor i in range(n):\n  if highest <= h[i]:\n    ans += 1\n    highest = h[i]\nprint(ans)", "N = int(input())\nH = list(map(int,input().split()))\nans = 1\n\nfor i in range(1,N):\n    # print(H[:i+1])\n    if max(H[:i+1]) == H[i]:\n        ans += 1\n\nprint(ans)", "N=int(input())\nH=list(map(int, input().split()))\n\nans=1\nHbefore=H[0]\n\nfor i in range(1,N):\n\tif H[i]>=Hbefore:\n\t\tans+=1\n\t\n\tHbefore=max(Hbefore,H[i])\n\nprint(ans)", "n = int(input())\na = list(map(int, input().split()))\ncont = 1\nh = a[0]\n\nfor i in range(1, n):\n    if a[i]>=h:\n        h = a[i]\n        cont += 1\n\nprint(cont)\n", "N = int(input())\nH = list(map(int, input().split()))\n\nresult = 1\nH_high = H[0]\n\nfor i in range(1, N):\n    if H[i] >= H_high and H[i] >= H[i - 1]:\n        result += 1\n        H_high = H[i]\n\nprint(result)", "n = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nhighest = 0\nfor height in h:\n    highest = max(height, highest)\n    if height >= highest:\n        ans += 1\n\nprint(ans)\n", "\nN = int(input())\nH = list(map(int,input().split()))\n\nh_list = [H[0]]\ncnt = 1\nfor i in range(1, N):\n    h_list.append(H[i])\n    \n    if max(h_list) == H[i]:\n        cnt += 1\nprint(cnt)\n\n", "n = int(input())\nh = list(map(int, input().split()))\na = h[0]\nb = 0\nfor i in h:\n    if i >= a:\n        a = i\n        b += 1\nprint(b)", "from typing import List\n\n\ndef answer(n: int, h: List[int]) -> int:\n    count = 0\n    highest = 0\n    for mountain in h:\n        if highest <= mountain:\n            highest = mountain\n            count += 1\n\n    return count\n\n\ndef main():\n    n = int(input())\n    h = list(map(int, input().split()))\n    print((answer(n, h)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def mapt(fn, *args):\n    return tuple(map(fn, *args))\n\n\ndef Input():\n    return mapt(int, input().split(\" \"))\n\n\ndef calc(i, h):\n    return all(h[i] >= h[j] for j in range(i))\n\n\ndef main():\n    n = int(input())\n    h = Input()\n    ans = 1\n    for i in range(1, n):\n        ans += calc(i, h)\n    print(ans)\n\n\nmain()", "n = int(input())\na = [int(x) for x in input().split()]\n\nresult = 0\nfor i, x in enumerate(a):\n  flg = True\n  \n  for c in a[:i]:\n    flg = flg and c <= x\n  \n  if flg:\n    result += 1\n\nprint(result)", "N = int(input())\nH = list(map(int, input().split()))\nresult = 1 # \u5148\u982d\u306e+1\n\nH.reverse() # \u8a08\u7b97\u3057\u3084\u3059\u3044\u3088\u3046\u306b\u4e26\u3073\u5909\u3048\u308b\nHH = H.copy()\n\nfor i in H:\n    HH.remove(i)\n\n    if len(HH) == 0:\n        break\n\n    for ii in HH:\n        if i < ii:\n            break\n    else:\n        #print(i)\n        result += 1\n\n\nprint(result)", "n = int(input())\nh = list(map(int,input().split()))\nhi = h[0]\nans = 1\nfor i in range(1,n):\n  if h[i] >= hi:\n    ans += 1\n    hi = h[i]\nprint(ans)", "def main():\n    see_sea = 1\n    n = int(input())\n    h = list(map(int, input().split()))\n    mountain = h[0]\n    for i in range(1, n):\n        if mountain <= h[i]:\n            see_sea += 1\n            mountain = h[i]\n    print(see_sea)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\nh = list(map(int,input().split()))\nc = 0\nd = 0\nfor i in range(n):\n    if h[i] >= d:\n        c+=1\n        d = h[i]\nprint(c)", "n=int(input())\nH=list(map(int,input().split()))\nans=0\nm=-1000\nfor i in range(n):\n  if m<=H[i]:\n    m=H[i]\n    ans+=1\nprint(ans)", "N=int(input())\nH=list(map(int,input().split()))\nans=0\nh=0\nfor i in range(N):\n    if H[i]>=h:\n        ans+=1\n        h=H[i]\nprint(ans)\n", "n = int(input())\nh = list(map(int, input().split()))\nres = 1\nh_max = h[0]\nfor i in range(1, len(h)):\n    if h[i] >= h_max:\n        res += 1\n        h_max = h[i]\nprint(res)\n", "N = int(input())\nH = list(map(int, input().split()))\n\nh_list = [H[0]]\ncnt = 1\nfor i in range(1, N):\n    h_list.append(H[i])\n\n    if max(h_list) == H[i]:\n        cnt += 1\nprint(cnt)", "n = int(input())\nL = list(map(int,input().split()))\nm = 0\ncnt = 0\nfor l in L:\n  if m <= l:\n    m = l\n    cnt += 1\nprint(cnt)\n  \n", "n = int(input())\nh = list(map(int, input().split()))\nview1 = h[0]\nview = 0\nc = 1\nfor i in range(1, n):\n    if view1 <= h[i] and view <= h[i]:\n        c += 1\n    view = max(view, h[i])\nprint(c)", "n = int(input())\nh = list(map(int,input().split()))\nnum = 0\nans = 0\nfor i in h:\n  if num <= i:\n    ans += 1\n    num = i\nprint(ans)", "def view_check(n: int, heights: list) -> int:\n    cnt = 1\n    max_height = heights[0]\n    for i in range(1, n):\n        if heights[i] >= max_height:\n            cnt += 1\n            max_height = heights[i]\n    return cnt\n\ndef __starting_point():\n    n=int(input())\n    heights=list(map(int,input().split()))\n    print((view_check(n,heights)))\n\n\n__starting_point()", "# coding: utf-8\n\nnum = int(input())\nstr = input().split()\ntable = [int(i) for i in str]\ncount = 1\nmaxi = table[0]\npointed = table[0]\nfor i in range(1, num):\n    if maxi <= table[i]:\n        maxi = table[i]\n        count += 1\nprint(count)\n", "N = int(input())\nN_List = list(map(int,input().split()))\nans = 1\nmaxN = N_List[0]\nfor i in range(1,N):\n    if N_List[i]>=maxN:\n        ans += 1\n        maxN = N_List[i]\nprint(ans)", "n = int(input())\nh = list(map(int,input().split()))\nnum = 0\nans = 0\nfor i in h:\n  if num <= i:\n    ans += 1\n    num = i\nprint(ans)", "n = int(input())\nh = list(map(int, input().split()))\n\ndef answer(n: int, h: list) -> int:\n    h_list = 0\n    answer = 0\n    for i in h:\n        if h_list <= i:\n            answer += 1\n        h_list = max(h_list, i)\n    return answer\n\nprint(answer(n, h))", "n = int(input())\nH = list(map(int, input().split()))\ncnt = [0]*n\n\nfor i in reversed(list(range(1, n))):\n    m = H[i]\n    for j in range(0, i):\n        if H[j] <= m:\n            cnt[i] += 1\n        else:\n            break\n\nans = 0\nfor i in range(n):\n    if cnt[i] == i:\n        ans += 1\n#print(cnt)\nprint(ans)                      \n", "N = int(input())\nH = list(map(int, input().split()))\n\nans = [1 for i in range(N)]\nfor i in range(1, N):\n  for j in range(i):\n    if H[j] > H[i]:\n      ans[i] = 0\nprint(sum(ans))", "n = int(input())\nh = [int(x) for x in input().split()]\n\ncnt = 1\n\nfor i in range(1,n):\n    for j in range(i):\n        if(h[i]<h[j]):\n            break\n        if(j==(i-1)):\n            cnt += 1\n\nprint(cnt)"]