["n,x=list(map(int,input().split()))\ny = [int(input()) for i in range(n)]\ny.sort()\nc = 0\nfor i in range(n):\n  if c < x:\n    c +=y[i]\n  elif c > x:\n    print((i-1))\n    return\nd = sum(y)\nprint((((x-d)//y[0])+n))\n", "n,x=map(int,input().split())\na=[]\nfor i in range(n):\n  m=int(input())\n  a.append(m)\n  x-=m\nwhile x>=min(a):\n  x-=min(a)\n  n+=1\nprint(n)", "n, x = map(int, input().split())\nm = [0] * n\nfor i in range(n): m[i] = int(input())\nfor i in range(n): x -= m[i]\nm.sort()\nans = n + x // m[0]\nprint(ans)", "n, x = map(int, input().split())\nm = [int(input()) for _ in range(n)]\nprint(n + (x - sum(m)) // min(m))", "import math\n# a=int(input())\n# b=input()\n# c=[]\n# for i in b:\n#     c.append(i)\ne = list(map(int,input().split()))\n#f = list(map(int,input().split()))\nj = [int(input()) for _ in range(e[0])]\na = sum(j)\ncount=e[0]\nif a==e[1]:\n    count+=0\nelse:\n    count+=(e[1]-a)//min(j)\nprint(count)", "# -*- coding: utf-8 -*-\n\nN,X = map(int, input().split())\nmin_req = 0\nfor i in range(N):\n    m = int(input())\n    min_req += m\n    if i==0:\n        m_min = m\n    else:\n        if m_min > m:\n            m_min = m\n\nnum = N + ((X - min_req) // m_min)\nprint(num)", "from typing import List\n\n\ndef answer(n: int, x: int, m: List[int]) -> int:\n    x -= sum(m)\n    count = len(m)\n    count += x // min(m)\n\n    return count\n\n\ndef main():\n    n, x = map(int, input().split())\n    m = [int(input()) for _ in range(n)]\n    print(answer(n, x, m))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "N,X=list(map(int,input().split()))\nl=[int(input()) for i in range(N)]\nX-=sum(l)\nans=len(l)\nans+=X//min(l)\nprint(ans)", "n,x = map(int,input().split())\nlst = [int(input()) for _ in range(n)]\n\nmini = min(lst)\nre = x - sum(lst)\nprint(n + re // mini)", "n,x = list(map(int,input().split()))\nl = []\nans = 0\nfor i in range(n):\n  l.append(int(input()))\nx -= sum(l)\nans += n\nans += x//min(l)\nprint(ans)\n", "def main():\n  array = []\n  lel = input()\n  lel = lel.split()\n  lel[0] = int(lel[0])\n  lel[1] = int(lel[1])\n  quantity = 0\n\n  for item in range(lel[0]):\n    array.append(int(input()))\n\n  for item in array:\n    lel[1] -= item\n    quantity += 1\n  quantity += lel[1]//min(array)\n\n  print(quantity)\n\ndef __starting_point():\n  # execute only if run as a script\n  main()\n__starting_point()", "N, X = map(int, input().split())\na = list(int(input()) for _ in range(N))\ncount = 0\n\nfor i in range(N):\n    X = X - a[i]\nif X / min(a) >= 1:\n    count += X // min(a)\nprint(N+count)", "import sys\nn,x=map(int,input().split())\nm=[int(input()) for i in range(n)]\n\na=sum(m)\nb=min(m)\n\nk=x-a\nc=k//b+n\n\nprint(c)", "n, k = map(int, input().split())\nm = [int(input()) for _ in range(n)]\nprint(((k - sum(m))//min(m)) + n)", "n, x = map(int, input().split())\nm_list = []\n\nfor i in range(n):\n  m = int(input())\n  m_list.append(m)\n\nmod = x - sum(m_list)\nans = mod // min(m_list)\nprint(ans + len(m_list))", "n, x = map(int,input().split())\nm = []\nfor i in range(n):\n  a = int(input())\n  x -= a\n  m.append(a)\n  \nans = min(m)\nx = x // ans\nprint(x+n)", "N, X = map(int, input().split())\nM = [int(input()) for _ in range(N)]\nprint(N+(X-sum(M))//min(M))", "n,x = map(int,input().split())\nm =[]\nfor _ in range(n):\n    m.append(int(input()))\nprint((x - sum(m))//min(m)+n)", "n,x = map(int,input().split())\nm = list(int(input()) for i in range(n))\nm.sort()\nz = sum(m)\nprint(n+(x-z)//m[0])", "n,x=map(int,input().split())\nm=[int(input()) for _ in range(n)]\nans=(x-sum(m))//min(m)\nprint(n+ans)", "def mapt(fn, *args):\n    return tuple(map(fn, *args))\n\n\ndef Input():\n    return mapt(int, input().split(\" \"))\n\n\ndef main():\n    n, x = Input()\n    m = [int(input()) for _ in range(n)]\n    ans = n\n\n    x -= sum(m)\n    ans += x // min(m)\n\n    print(ans)\n    \n\nmain()", "n,x = list(map(int,input().split()))\nans = n\nmi = 10**4\nfor i in range(n):\n  m = int(input())\n  x -= m\n  mi = min(m,mi)\nans += (x//mi)\nprint(ans)\n  \n", "n, x = list(map(int, input().split()))\nmin_m = 1000\nres = 0\nfor i in range(n):\n    m = int(input())\n    min_m = min(m, min_m)\n    x -= m\n    res += 1\n\nres += x // min_m\nprint(res)\n", "n, x = map(int, input().split())\nm = []\nfor i in range(n):\n  m.append(int(input()))\nans = 0\n\nx -= sum(m)\nans += n\nans += x // min(m)\n\nprint(ans)", "n, x = list(map(int, input().split()))\n\nm = [int(input()) for _ in range(n)]\n\nm.sort()\n\nprint(n + ((x - sum(m)) // m[0]))", "n,x = map(int, input().split())\nmini = 1000\namount = 0\nans = 0\nfor _ in range(n):\n    m = int(input())\n    mini = min(mini, m)\n    x -= m\n    ans +=1\nans += x//mini\nprint(ans)", "N,X = map(int,input().split())\nminN =10**5\nfor i in range(N):\n    crt = int(input())\n    if minN > crt:\n        minN = crt\n    X -= crt\nprint(N + X//minN)", "n,x=list(map(int,input().split()))\nmi=10**5+1\ns=0\nfor _ in range(n):\n    a=int(input())\n    s+=a\n    if a<=mi:mi=a\nprint((n+(x-s)//mi))\n", "n, x = list(map(int, input().split()))\na = []\nfor i in range(n):\n    a.insert(i, int(input()))\nx_rem = x - sum(a)\nm = x_rem // min(a)\nprint(n + m)", "n,x=map(int,input().split())\n\nm=[]\nfor i in range(n):\n    m.append(int(input()))\n\ncnt = (x-sum(m))//min(m)\n\nans = n + cnt\nprint(ans)", "N,X = map(int,input().split())\nm = [int(input()) for _ in range(N)]\n\ngram = X - sum(m)\nans = N + gram // min(m)\n\nprint(ans)", "N, X = list(map(int, input().split()))\nM = [0 for _ in range(N)]\nfor i in range(N):\n    M[i] = int(input())\n\nX -= (sum(M))\nans = len(M)\n\nans += (X // min(M))\nprint(ans)\n", "n,x=map(int,input().split())\nsum=0\ns=1000\nfor i in range(n):\n  m=int(input())\n  sum+=m\n  s=min(s,m)\n\ny=x-(sum)\nz=y//s\nprint(n+z)", "n, k = map(int, input().split())\nm = []\nfor i in range(n):\n    m.append(int(input()))\nrest = k - sum(m)\nprint(n + rest // min(m))", "N, X = map(int, input().split())\nm = [int(input()) for i in range(N)]\nm.sort()\nnokori = X - sum(m)\nNokori = nokori // m[0]\nprint(Nokori + N)", "N, X = map(int, input().split())\nm = [int(input()) for _ in range(N)]\n\nans = N\nX -= sum(m)\n\nans += X // min(m)\nprint(ans)", "N,X=list(map(int,input().split()))\nm=[int(input()) for _ in range(N)]\nm.sort()\nprint((N+(X-sum(m))//m[0]))\n", "n, x = map(int,input().split())\nL = list(int(input()) for _ in range(n))\nm = min(L)\ntmp = x - sum(L)\nans = n\nans += tmp//m\nprint(ans)", "def resolve():\n    n, x = map(int, input().split())\n    ml = list()\n    for i in range(n):\n        m = int(input())\n        ml.append(m)\n    ml.sort()\n    c = 0\n    for g in ml:\n        if x-g < 0:\n            break\n        else:\n            c += 1\n            x -= g\n    a = int(x/ml[0])\n    c += a\n    print(c)\nresolve()", "# coding: utf-8\n\nimport math\n\nn, x = map(int, input().split())\nminimum = 1000\ntotal = 0\nfor i in range(n):\n    dounats = int(input())\n    total += dounats\n    if dounats <= minimum:\n        minimum = dounats\nnow = x - total\na = math.floor(now / minimum)\nprint(n + a)", "n,x=map(int,input().split())\nM=[int(input()) for i in range(n)]\nprint((x-sum(M))//min(M)+n)", "#!/usr/bin/env python3\n\n\ndef main():\n    N, X, *M = list(map(int, open(0).read().split()))\n    print((N + ((X - sum(M)) // min(M))))\n\n\nmain()\n", "n,x = [int(x) for x in input().split()]\nm = []\nfor i in range(n):\n  m.append(int(input()))\nx -= sum(m)\nres = n\nres += x // min(m)\nprint(res)\n", "n,x = map(int,input().split())\nm = [int(input()) for i in range(n)]\nq = x-sum(m)\n\nprint(n + q//min(m))", "n,x=map(int,input().split())\nm=[]\nfor i in range(n):\n    m.append(int(input()))\nprint((x-sum(m))//min(m)+n)", "n,x = map(int,input().split())\nlist_m = list()\nall = 0\nfor i in range(n):\n    m = int(input())\n    all += m\n    list_m.append(m)\nprint(n + int((x - all)/min(list_m)))", "n,x=map(int,input().split())\nm=[0]*n\nfor i in range(n):\n    m[i]=int(input())\nx-=sum(m)\nprint(len(m)+x//min(m))", "n,x=map(int, input().split())\nl=[]\nfor i in range(n):\n    m=int(input())\n    l.append(m)\nprint(n+((x-sum(l))//min(l)))", "n,x = map(int,input().split())\nl=[]\nfor i in range(0,n):\n  l.append(int(input()))\nx-=sum(l)\ncnt=x//min(l)\nprint(n+cnt)", "n,x = map(int, input().split())\nl = []\nfor i in range(n):\n  l.append(int(input()))\nr = x-sum(l)\nprint(n+r//min(l))", "N, X = list(map(int, input().split()))\nM = [int(input()) for _ in range(N)]\n\nmin_M = min(M)\nsum_M = sum(M)\n\nprint((N+((X-sum_M)//min_M)))\n", "n, x = map(int, input().split())\nm = [int(input()) for _ in range(n)]\nprint(n + (x - sum(m)) // min(m))", "N,X=list(map(int,input().split()))\nryou=[]\nfor i in range(N):\n  ryou.append(int(input()))\namari=X-sum(ryou)\nprint(N+amari//min(ryou))", "N,X=map(int, input().split())\nm, min_value, count, ans=[], 1000, 0, N\nfor i in range(N):\n    m.append(int(input()))\n    min_value = min(min_value, m[i])\n    count += m[i]\nwhile True:\n    if X-count >= min_value:\n        count += min_value\n        ans += 1\n    else: break\nprint(ans)", "N,x = list(map(int,input().split()))\ndonuts = 0\ndonuts_min = 999999\ncounta = 0\n\nfor i in range(N):\n  donuts = int(input())\n  x -= donuts\n  counta += 1\n  if donuts_min >= donuts:\n  \tdonuts_min = donuts\n  else:\n    pass\n  \ncountb = x // donuts_min\nprint((counta + countb))\n", "N, X = list(map(int, input().split()))\nM = [int(input()) for _ in range(N)]\nans = N\nfor i in range(len(M)):\n  X -= M[i]\nans += X // min(M)\nprint(ans)\n", "nx = list(map(int, input().split()))\nn, x = nx[0], nx[1]\nms = [int(input()) for _ in range(n)]\ndonuts = n\nx -= sum(ms)\nmin_donuts = min(ms)\nwhile x >= min_donuts:\n    donuts += 1\n    x -= min_donuts\n\nprint(donuts)\n", "N,X = map(int,input().split())\nmi=[int(input()) for _ in range(N)]\n  \nprint(N+(X-sum(mi))//min(mi))", "n,x = map(int,input().split())\nm = [int(input()) for i in range(n)]\nm.sort()\ntemp = 0\nfor g in m:\n    temp +=g\nprint((x - temp) // m[0] + len(m))", "n, x = map(int, input().split())\nm = [int(input()) for _ in range(n)]\n\nprint(n + (x-sum(m))//min(m))", "N, X = map(int, input().split())\nm = [int(input()) for i in range(N)]\n# print(m)\n\nans = 0\nX -= sum(m)\nans += N\nans += X // min(m)\nprint(ans)", "a,b=input().split()\na=int(a)\nb=int(b)\nc=[int(input()) for i in range(a)]\nc.sort()\nprint(a+int((b-sum(c))/c[0]))", "n,x=map(int,input().split())\na=[int(input()) for i in range(n)]\nmoney = sum(a)\nx -= money\nm = min(a)\ncnt = len(a)\nwhile 0 <= x:\n  x -= m\n  cnt += 1\nprint(cnt -1)", "n,x=list(map(int ,input().split()))\nsample_gram=0\nl1=[]\nfor i in range(0,n):\n    m=int(input())\n    sample_gram+=m\n    l1.append(m)\n\nif(sample_gram > x):\n    noofdonut=(sample_gram//x)\n    print(int(noofdonut))\nelif(sample_gram==x):\n    print(int(sample_gram/m))\nelif(sample_gram < x):\n    initial_donut=n\n    reamaning_gram=x-sample_gram\n    l=[]\n    for j in range(0,n):\n        a=reamaning_gram/l1[j]\n        l.append(int(a))\n\n    print(initial_donut+int(max(l)))", "a,b = map(int,input().split())\nc = [int(input()) for i in range(a)]\nprint(a+((b-(sum(c)))//min(c)))", "n, x = map(int, input().split())\nm = [int(input()) for _ in range(n)]\nprint(n + (x - sum(m)) // min(m))", "n, x = list(map(int, input().split()))\nm = []\nfor _ in range(n):\n  m.append(int(input()))\nm.sort()\n\ndef main():\n  for i in range(n):\n    if sum(m[0:i+1]) > x:\n      print(i)\n      return\n  print(n)\n\nif sum(m) > x:\n  main()\nelse:\n  print((n + (x - sum(m)) // m[0]))\n", "n, x = [int(elem) for elem in input().split()]\n\nms = []\nfor i in range(n):\n  m = int(input())\n  ms.append(m)\n\nres = len(ms)\nx -= sum(ms)\nres += x // min(ms)\nprint(res)", "N, X = map(int, input().split())\nm_list = [int(input()) for i in range(N)]\n\ndonatu = 0\n\n# \u3068\u308a\u3042\u3048\u305am_list\u306e\u5408\u8a08\u3092X\u304b\u3089\u5f15\u304f\nsum_m_list = sum(m_list)\nX_nokori = X - sum_m_list\ndonatu += N\n\n# \u305d\u306e\u5f8cm_list\u306e\u6700\u5c0f\u5024\u3068\u6b8b\u3063\u305fX\u3067\u5272\u308a\u7b97\ndonatu = donatu + X_nokori // min(m_list)\n\nprint(donatu)", "N,X=map(int,input().split())\nm=[]\nfor i in range(N):\n  m.append(int(input()))\nprint(len(m)+int((X-sum(m))/min(m)))", "n, x = (int(i) for i in input().split())\nlist_m = [int(input()) for i in range(0, n)]\ntmp = x - sum(list_m)\nprint(n + tmp // min(list_m))", "lst = input().split()\nN = int(lst[0])\nX = int(lst[1])\nlst = []\nfor i in range(N):\n   lst.append(int(input()))\n\ncount = N\nX -= sum(lst)\n\ncount += (X // min(lst))\n\nprint(count)", "n,x = map(int,input().split())\nm = [int(input()) for _ in range(n)]\nprint((x-sum(m))//min(m)+n)", "n, x = map(int, input().split())\nm = [int(input()) for _ in range(n)]\n\nprint(n + (x - sum(m)) // min(m))", "# B\nn, x = map(int,input().split())\nmin_m=1000\ncount=0\nfor _ in range(n):\n    m=int(input())\n    min_m=min(min_m,m)\n    x-=m\n    count+=1\n\ncount+=x//min_m\nprint(count)", "N, X = list(map(int, input().split()))\nms = [int(input()) for i in range(N)]\nprint((N + (X - sum(ms)) // min(ms)))\n", "n, x = input().split(\" \")\nn = int(n)\nx = int(x)\n\nd = 0\nm = []\n\nfor i in range(n):\n    m.append(int(input()))\nm.sort()\n\nfor i in range(n):\n    if(x >= m[i]):\n        d+=1\n        x -= m[i]\n\nif x > m[0]:\n    res = int(x/m[0])\n    d += res\nprint(d)\n", "n,x=map(int,input().split())\ns=0\nl=1000\nfor i in range(n):\n    m=int(input())\n    s += m\n    if m<l:\n        l=m\nx -= s\nx //= l\nprint(n+x)", "N, X = [int(i) for i in input().split()]\nM = [int(input()) for _ in range(N)]\nprint((N + ((X - (sum(M))) // min(M))))\n", "N,X=list(map(int,input().split()))\n\nm=[]\n\nfor i in range(N):\n    m.append(int(input()))\n\nprint(((X-sum(m))//min(m)+N))\n", "n,x = map(int,input().split())\nl = sorted([int(input()) for i in range(n) ])\nx-= sum(l)\nans = n\nans += x//l[0]\nprint(ans)", "n, x = map(int, input().split())\nm = []\nfor _ in range(n):\n    m.append(int(input()))\ncount = 0\nx -= sum(m)\ncount += len(m)\nwhile x >= min(m):\n    x -= min(m)\n    count += 1\nprint(count)", "n,x=map(int,input().split())\n\nm=[0]*n\n\nfor i in range(n):\n    m[i]=int(input())\n    x-=m[i]\n\nprint(n+x//min(m))", "n, x = list(map(int, input().split()))\nm = []\nfor _ in range(n):\n    m.append(int(input()))\n\na = 0\n\nfor i in m:\n    x -= i\n    a+=1\n\nwhile x >= min(m):\n    x -= min(m)\n    a+=1\n\nprint(a)\n", "N,X=map(int,input().split())\nsweet=[0]*N\nfor l in range(N):\n    sweet[l]=int(input())\nS=sum(sweet)\nR=X-S\nA=min(sweet)\nC=R//A\nprint(N+C)", "n,x=map(int, input().split())   \nm=[int(input()) for i in range(n)]\nprint((x-sum(m))//(min(m))+n)", "n, x = map(int, input().split())\nm = []\nfor i in range(n):\n    m.append(int(input()))\n    x -= m[i]\n\ncounter = len(m)\nwhile(1):\n    if x < 0:\n        print(counter - 1)\n        break\n    else:\n        x -= min(m)\n        counter += 1", "n,x=map(int,input().split())\nm=[int(input()) for i in range(n)]\nres=n\nx-=sum(m)\nres+=x//min(m)\nprint(res)", "n,x = map(int,input().split())\nm = [int(input()) for _ in range(n)]\nprint(n+(x-sum(m))//min(m))", "n , x = map(int,input().split())\nm = [int(input()) for i in range(n)]\n\nprint(n + (x - sum(m))//min(m))", "N, X = map(int, input().split())\ndonut_list = []\nfor i in range(N):\n  donut_list.append(int(input()))\n\ndonut_sum = sum(donut_list)\nX_remaining = X - donut_sum\ndonut_num = N\ndonut_num += int(X_remaining / min(donut_list))\n\nprint(donut_num)", "n,x = map(int,input().split())\nli = []\nfor i in range(n):\n    li.append(int(input()))\nn1 = sum(li)\nn2 = min(li)\nn3 = len(li)\nprint(n3 + (x-n1)//n2)", "N, X = list(map(int, input().split()))\na = [int(input()) for _ in range(N)] \nsum_material = sum(a)\nb = min(a)\ncount = 0\nX = X - sum_material\nif X < b:\n    print((len(a)))\nelse:\n    while X >= b:\n        X -= b\n        count += 1\n    print((len(a) + count))\n\n", "n,x=list(map(int ,input().split()))\nsample_gram=0\nl1=[]\nfor i in range(0,n):\n    m=int(input())\n    sample_gram+=m\n    l1.append(m)\n\nif(sample_gram > x):\n    noofdonut=(sample_gram//x)\n    print(int(noofdonut))\nelif(sample_gram==x):\n    print(int(sample_gram/m))\nelif(sample_gram < x):\n    initial_donut=n\n    reamaning_gram=x-sample_gram\n    l=[]\n    for j in range(0,n):\n        a=reamaning_gram/l1[j]\n        l.append(int(a))\n\n    print(initial_donut+int(max(l)))", "n,x = map(int, input().split())\nm = [int(input()) for i in range(n)]\nm.sort()\nx = x-sum(m)\nprint(len(m)+x//m[0])", "n, x = map(int, input().split())\nm = [int(input()) for i in range(n)]\nprint(len(m) + (x - sum(m)) // min(m))", "n, x, *a = map(int, open(0).read().split())\nprint(n + (x - sum(a)) // min(a))", "n,x = map(int, input().split())\nm = [int(input()) for m in range(n)]\nprint(len(m)+(x-sum(m))//min(m))", "n,x=map(int,input().split())\ns=[int(input())for _ in range(n)]\np=(x-sum(s))//min(s)\nprint(p+n)"]