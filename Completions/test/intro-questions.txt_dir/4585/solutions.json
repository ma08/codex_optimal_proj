["x=int(input())\nans=0\na=0\nfor i in range(1,x+1):\n  a+=i\n  ans+=1\n  if a>=x:\n    print(ans)\n    break", "import math\nx = int(input())\nans = math.ceil((-1 + math.sqrt(8 * x + 1)) / 2)\nprint(ans)", "x = int(input())\nt= 0\nwhile t*(t+1)//2 < x:\n    t += 1\nprint(t)", "import math\nx = int(input())\n\ncnt = 0\nwhile x > 0:\n    cnt += 1\n    x -= cnt\nprint(cnt)\n", "x=int(input())\na=0\nfor i in range(x+1):\n  if a+i>=x:\n    print(i)\n    break\n  else:\n    a+=i", "'''\nCreated on 2020/08/28\n\n@author: harurun\n'''\ndef main():\n  import sys\n  pin=sys.stdin.readline\n  pout=sys.stdout.write\n  perr=sys.stderr.write\n  \n  X=int(pin())\n  i=1\n  while i<=X:\n    if i*(i+1)>=2*X:\n      print(i)\n      return \n    i+=1\n  return \nmain()", "import sys\nimport re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians\nfrom itertools import accumulate, permutations, combinations, product\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left\nfrom fractions import gcd\nfrom heapq import heappush, heappop\nfrom functools import reduce\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef LIST(): return list(map(int, input().split()))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\nX = INT()\n\nA = []\ntmp = 0\nfor i in range(1, X+1):\n    tmp += i\n    A.append(tmp)\n    if tmp >= X:\n        print(i)\n        break\n", "x = int(input())\n\ncur = 0\nfor i in range(0, 45000):\n    cur += i\n    if x <= cur:\n        print(i)\n        break", "x = int(input())\na = 0\nfor i in range(1,10**10):\n    a += i\n    if a >= x :\n        print(i)\n        break\n", "X=int(input())\nN=1\nwhile N*(N+1)//2<X:\n    N+=1\nprint(N)\n", "def solve():\n    X = int(input())\n    now = 0\n    for i in range(X + 1):\n        now += i\n        if now >= X:\n            return i\n\nprint((solve()))\n", "x = int(input())\n\nub = 10**9\nlb = 0\n\nwhile ub - lb > 1:\n    mid = (lb + ub) // 2\n    if mid*(mid+1)//2 >= x:\n        ub = mid\n    else:\n        lb = mid\nprint(ub)", "x=int(input())\ns=0\nfor i in range(1,x+1):\n    s += i\n    if s>=x:\n        print(i)\n        return", "x = int(input())\n\ncnt = 0\ns = 0\n\nfor i in range(1, x+1):\n    cnt += 1\n    s += i\n    if s >= x:\n        break\n\nprint(cnt)", "#43 C - Go Home\nX = int(input())\n\nsum_i = 0\nfor i in range(1,10**5):\n    sum_i += i\n    if sum_i >= X:\n        ans = i\n        break\nprint(ans)", "x=int(input())\nans=0\nwhile True:\n    if ans*(ans+1)/2 >= x:\n        print(ans)\n        break\n    ans+=1\n", "x = int(input())\n\nres = 0\ni = 1\nwhile res < x:\n  res += i\n  i += 1\n\nprint(i-1)", "import math\nX = int(input())\nruto = math.ceil(math.sqrt(2*X))+1\nkari = ruto**2+ruto\nans=1\nfor i in range(ruto-1, 0, -1):\n    if i**2+i < 2*X:\n        ans = i+1\n        break\n    kari = i**2+i\nprint(ans)\n", "ma = lambda :map(int,input().split())\nlma = lambda :list(map(int,input().split()))\ntma = lambda :tuple(map(int,input().split()))\nni = lambda:int(input())\nyn = lambda fl:print(\"Yes\") if fl else print(\"No\")\nimport collections\nimport math\nimport itertools\nimport heapq as hq\n\nx = ni()\ntmp = 0\nfor i in range(1,10**9):\n    tmp+=i\n    if tmp>=x:\n        break\nprint(i)\n", "n=int(input())\nans = 0\nAns = 1\n\nwhile ans < n:\n    ans += Ans\n    Ans += 1\nprint(Ans-1)", "X = int(input())\nfrom itertools import count\nfor t in count(1,1):\n    if (t-1)*t >= 2*(X-t):\n        print(t); break", "x = int(input())\n\nfor i in range(1, x+1):\n  if i * (i + 1)//2 >= x:\n    print(i)\n    break\n", "X = int(input())\n\nt = 0\nSum = 0\nwhile Sum < X:\n    t += 1\n    Sum += t\n\nprint(t)", "x = int(input())\nans = int((x * 2) ** 0.5)\nwhile 1:\n    if ans * (ans + 1) // 2 >= x:\n        print(ans)\n        break\n    ans += 1", "x=int(input())\na=0\nfor i in range(x+1):\n  if a+i>=x:\n    print(i)\n    break\n  else:\n    a+=i\n", "x = int(input())\ni = 1\ntmp = 0\nwhile tmp < x:\n    tmp += i\n    i += 1\nprint(i-1)", "x = int(input())\n\nt = 0\nwhile True:\n    if not (t*(t+1))/2 >= x:\n        t += 1\n    else:\n        break\nprint(t)\n", "x = int(input())\nplace = 0\ni = 1\n\nwhile 1:\n    if place + i >= x:\n        print(i)\n        break\n    else:\n        place += i\n        i += 1", "x = int(input())\n\ni=1\nwhile i*(i+1)//2 < x:\n    i+=1\n\nprint(i)", "X=int(input())\nt=int((2*X)**0.5)+1\nans=0\nfor i in range(t,0, -1):\n    if X <= i*(i+1)/2:\n        ans=i\n    else:\n        break\nprint(ans)", "x = int(input())\nn = 1\nwhile n*(n+1)//2 < x: n += 1\nprint(n)", "X = int(input())\n\nL = [0]\nfor i in range(1, 10 ** 5):\n    L.append(L[i - 1] + i)\n\nans = 0\nfor i in range(1, X + 1):\n    # print(L[i])\n    if L[i] >= X:\n        ans = i\n        break\n\n\nprint(ans)\n", "x = int(input())\n\nok = x\nng = -1\nwhile ok - ng > 1:\n    mid = (ok + ng) // 2\n    if mid * (mid + 1) // 2 >= x:\n        ok = mid\n    else:\n        ng = mid\n\nprint(ok)", "x = int(input())\ni = 0\ntmp = 0\nwhile tmp < x:\n    tmp += i + 1\n    i += 1\nprint(i)", "from math import floor\nX = int(input())\n\nfor n in range(1,floor(X/2)+2):\n  if n * (n + 1) //2 >= X:\n    ans = n\n    break\n    \nprint(ans)", "import math\nX = int(input())\nP = math.ceil((-1+(1+8*X)**(1/2))/2)\nprint(P)", "X = int(input())\n\ncnt = 0\ns = 0\nfor i in range(1, X+1):\n  cnt += 1\n  s += i\n  if s >= X:\n    break\n\nprint(cnt)\n", "import sys\n\n\nstdin = sys.stdin\ndef ns(): return stdin.readline().rstrip()\ndef ni(): return int(stdin.readline().rstrip())\ndef nm(): return list(map(int, stdin.readline().split()))\ndef nl(): return list(map(int, stdin.readline().split()))\n\n\ndef main():\n    x = ni()\n    d = 0\n    for i in range(1, x + 1):\n        d += i\n        if d >= x:\n            print(i)\n            return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def get_index(n):\n    i=1\n    while True:\n        if n<=piramid(i):\n            return i-1\n        i+=1\n\ndef piramid(n):\n    return n*(n+1)//2\n\nn=int(input())\nindex=get_index(n)\n\nprint(index+1)", "x=int(input())\nans,k,i=0,1,0\nwhile 1:\n    ans+=k\n    if ans>=x:\n        break\n    k+=1\nprint(k)", "import sys, re, os\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians, gcd\nfrom itertools import permutations, combinations, product, accumulate\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom functools import reduce\nfrom bisect import bisect_left, insort_left\nfrom heapq import heapify, heappush, heappop\n\nINPUT = lambda: sys.stdin.readline().rstrip()\nINT = lambda: int(INPUT())\nMAP = lambda: map(int, INPUT().split())\nS_MAP = lambda: map(str, INPUT().split())\nLIST = lambda: list(map(int, INPUT().split()))\nS_LIST = lambda: list(map(str, INPUT().split()))\n\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\n\ndef main():\n    X = INT()\n\n    i = 1\n    ans = 0\n    while 1:\n        X -= i\n        ans += 1\n        if X <= 0: break\n        i += 1\n\n    print(ans)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "import sys, re, os\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians\nfrom itertools import permutations, combinations, product, accumulate\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom fractions import gcd\nfrom bisect import bisect, bisect_left, bisect_right\n\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef S_MAP(): return list(map(str, input().split()))\ndef LIST(): return list(map(int, input().split()))\ndef S_LIST(): return list(map(str, input().split()))\n \nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\nX = INT()\n\nA = []\nfor i in range(1, 2 * (int(sqrt(X))+1)):\n    a =  i * (i + 1) // 2\n    # print(a)\n    if a <= X:\n        A.append(a)\n    else:\n        ans = len(A)\n        mi = A.pop()\n        ma = a\n        break\n# print(mi, ma)\n# print(ans)\nif mi == X:\n    print(ans)\nelse:\n    print((ans+1))\n        \n    \n\n\n\n\n\n\n", "n = int(input())\ntmp = 0\nfor i in range(1, n + 1):\n    tmp += i\n    if tmp >= n:\n        print(i)\n        break", "X = int(input())\n\nimport math as m\n\nt = int(m.sqrt(X*2))\nif t*(t+1)/2 < X:\n  t += 1\n\nprint(t)", "N=int(input())\nfor i in range(1,N//2+10):\n\ttmp=((i+1)*(i))//2\n\tif N-tmp==0:\n\t\tprint(i)\n\t\treturn\n\tif N-tmp<i+1:\n\t\tprint(i+1)\n\t\treturn", "x = int(input())\n\nans = 0\n\nfor t in range(10**9):\n    if (t*(1+t))//2 >= x:\n        ans = t\n        break\n    \nprint(ans)\n", "x = int(input())\ni = 1\nwhile True:\n    if (i+1)*i//2 >= x:\n        print(i)\n        break\n    i += 1\n\n", "n = int(input())\n\nfor i in range(1,n+1):\n  if n <= i * (i + 1) / 2:\n    print(i)\n    break", "i=1\nimport copy\nX=int(input())\ns=0\nwhile True:\n    s+=copy.copy(i)\n    if s>=X:\n        print(i)\n        return\n    i+=1\n", "X = int(input())\ni = 0\n\nwhile i <= X:\n  c = (i*(i+1)) / 2\n  if c >= X:\n    print(i)\n    break\n  i += 1", "X = int(input())\nX2 = X*2\nk = 1\nwhile True:\n  if k*(k+1) >= X2:\n    print(k)\n    return\n  k += 1\n\n", "x = int(input())\n\ncnt = 0\ni = 0\nwhile i < x:\n    i += cnt\n    cnt += 1\nprint(cnt - 1)", "import math\nx = int(input())\n\ni = math.ceil((-1 + math.sqrt(1 + 8 * x)) / 2)\n\nprint(i)", "X = int(input())\na = 0\nb = 1\nwhile  a < X:\n    a += b\n    b += 1\nprint(b-1)", "x = int(input())\n\nsum = 0\nfor i in range(1,100000):\n    sum += i\n    if sum >= x:\n        print(i)\n        break", "#!/usr/bin/env python3\n\n\ndef main():\n    x = int(input())\n    n = 0\n    i = 1\n    while n < x:\n        n += i\n        i += 1\n    print((i - 1))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "x = int(input())\nans = 0\nk = 0\nt = 0\nwhile k < x:\n  k = t * (t + 1) / 2\n  t += 1\nans = t - 1\nprint(ans)", "x = int(input())\nans = 0\npos = 0\nwhile pos < x:\n    pos += ans+1\n    ans += 1\nprint(ans)\n", "X = int(input())\n\nfor i in range(1,100000):\n  if X <= i*(i+1)//2:\n    print(i)\n    break", "x=int(input())\nt=0\np=0\nwhile p<x:\n    t+=1\n    p+=t\nprint(t)", "# C - Go Home\ndef main():\n    x = int(input())\n    cnt = 0\n    for i in range(x + 1):\n        cnt += i\n        if cnt >= x:\n            print(i)\n            return\n        \ndef __starting_point():\n    main()\n__starting_point()", "x=int(input())\nfor i in range(1,x+1):\n    if x<=(i*(i+1))//2:\n        print(i)\n        break", "x = int(input())\n\n# 1, 2, 3, ... , n\u306e\u7dcf\u548c\u304cX\u4ee5\u4e0a\u306a\u3089\u3070\u3001\n# \u9069\u5f53\u306b\u4fdd\u6301\u3092\u3044\u308c\u308b\u3053\u3068\u3067\u305f\u3069\u308a\u7740\u3051\u308b\n# \u7dcf\u548c\u306e\u516c\u5f0f\u306f(1 + n)*n//2\n\nans = 0\nwhile True:\n    if ((1+ans)*ans)//2 >= x:\n        print(ans)\n        return\n    ans+=1", "import math\n\ndef goukei(n):\n    return int(n*(n+1)/2)\n\nx = int(input())\ntmp = int(math.sqrt(2 * x))\n#print(tmp,goukei(tmp))\nwhile goukei(tmp)<x:\n    tmp += 1\n\nprint(tmp)", "x = int(input())\nsn = 0\nfor i in range(1, 10 ** 5):\n    sn = sn + i\n    if sn >= x:\n        print(i)\n        break\n", "X = int(input())\ncnt = 0\ndist = 0\nwhile dist < X:\n    cnt += 1\n    dist += cnt\nprint(cnt)", "x=int(input())\nfor n in range(1,x+1):\n    s=n*(n+1)/2\n    if s>=x:\n        print(n)\n        return\n", "X = int(input())\ndef sum_num(x):\n    A = [0]\n    counter = 0\n    for i in range(1,10**7):\n        counter += i\n        A.append(counter)\n        if A[-2] <= x <= counter:\n            return A\n\nprint(len(sum_num(X))-1)", "import re\nimport sys\nimport math\nimport itertools\nimport bisect\nfrom copy import copy\nfrom collections import deque,Counter\nfrom decimal import Decimal\nimport functools\ndef v(): return input()\ndef k(): return int(input())\ndef S(): return input().split()\ndef I(): return map(int,input().split())\ndef X(): return list(input())\ndef L(): return list(input().split())\ndef l(): return list(map(int,input().split()))\ndef lcm(a,b): return a*b//math.gcd(a,b)\nsys.setrecursionlimit(10 ** 6)\nmod = 10**9+7\ncnt = 1\nans = 0\ninf = float(\"inf\")\nal = \"abcdefghijklmnopqrstuvwxyz\"\nAL = al.upper()\n\nN = k()\n \nfor i in range(1,N+1):\n    if 2*N <= (i+1)*i:\n        print(i)\n        break", "x = int(input())\nfor i in range(1000000000):\n    if x <= i*(i+1)/2:\n        print(i)\n        return\n", "X=int(input())\nSUM=0\nfor i in range(1,10**6):\n  SUM += i\n  if SUM >= X:\n    print(i)\n    return", "N = int(input())\nans = 0\nCN = 0\nwhile CN < N:\n    ans += 1\n    CN += ans\n\nprint(ans)", "import sys\nX=int(input())\n\nif not ( 1 <= X <= 10**9 ): return\nres=0\ncount=0\nfor I in range(1,X+1):\n    count += 1\n    res += count\n    if res >= X:\n        print(count)\n        return", "x = int(input())\n\ni=1\ncum=[0]\nwhile cum[-1] < 10**9:\n    cum+=[cum[-1]+i]\n    i+=1\n\nimport bisect\nindex = bisect.bisect_left(cum, x)\n\nprint(index)", "x = int(input())\nmax = 0\ntotal = 0\nfor i in range(1,x+1):\n  total += i\n  if total >=x:\n    max = i\n    break\nprint(max)", "x = int(input())\nans = 0\nwhile ans * (ans+1) / 2 < x:\n  ans += 1\nprint(ans)", "import sys, re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians, gcd\nfrom itertools import accumulate, permutations, combinations, product, groupby, combinations_with_replacement\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left\nfrom heapq import heappush, heappop\nfrom functools import reduce\nfrom decimal import *\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef LIST(): return list(map(int, input().split()))\ndef ZIP(n): return list(zip(*(MAP() for _ in range(n))))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\nX = Decimal(INT())\nprint((((Decimal(-1)+(8*X).sqrt())/Decimal(2)).quantize(Decimal(\"0\"), rounding=ROUND_CEILING)))\n", "x=int(input())\n\nnum=0\ncnt=0\n\nfor i in range(1,10**9):\n  num+=i\n  cnt+=1\n  if num>=x:\n    break\n    \nprint(cnt)", "N=int(input())\nfor i in range(1,10**5):\n  if (i*(i+1))//2>=N:\n    print(i)\n    return", "x=int(input())\nfor i in range(1,10**5):\n    if x<=(i*(i+1))//2:\n        print(i)\n        break", "def main():\n    x = int(input())\n\n    answer = 0\n    tmp = 0\n    for i in range(10 ** 9):\n        tmp += i\n        if tmp >= x:\n            answer = i\n            break\n\n    print(answer)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "import math\nprint(math.ceil( (math.sqrt(1 + 8 * int(input())) - 1) / 2 ))", "x = int(input())\nans = 0\ni = 0\nwhile True:\n    i += 1\n    x -= i\n    ans += 1\n    if x <= 0:\n        break\nprint(ans)\n", "from math import sqrt\nx = int(input())\n\nprint((int(-(-(-1+sqrt(1+8*x))//2))))\n", "X = int(input())\nCnt = 0\nSum = 0\nwhile Sum<X:\n    Cnt += 1\n    Sum += Cnt\nprint(Cnt)", "x=int(input())\nans=0\nres=1\nwhile ans<x:\n  ans+=res\n  res+=1\nprint(res-1)", "s=int(input())\nn=1\ns2=0\nwhile True:\n  s2=n*(n+1)//2\n  if s2>=s:\n    print(n)\n    break\n  else:\n    n=n+1", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Tue Sep 29 15:44:49 2020\n\n@author: liang\n\"\"\"\n\nX = int(input())\n\nans = 0\ntmp = 0\ni = 1\nwhile True:\n    tmp += i\n    if tmp >= X:\n        print(i)\n        break\n    i += 1", "x = int(input())\n#a, b = map(int,input().split())\n#l = list(map(int,input().split()))\n#l = [list(map(int,input().split())) for i in range(n)]\nt = 0\nc = 0\n\nwhile True:\n    if c >= x:\n        break\n    t += 1\n    c += t\n\nprint(t)\n", "X=int(input())\nm=0\nans=0\nfor i in range(1,X+1):\n    if X<=m:break\n    m+=i\n    ans+=1\nprint(ans)", "x = int(input())\nk = 0\nfor i in range(1, x+1):\n    k+=i\n    if k >= x:\n        print(i)\n        return\n", "import math\nX = int(input())\nn =  math.ceil((math.sqrt(1+8*X) - 1)/2)\nans = n\nprint(ans)\n", "X = int(input())\n\ni = 0\ncnt = 0\nwhile cnt < X:\n  cnt += i + 1\n  i += 1\nprint(i)\n", "#from statistics import median\n#import collections\n#aa = collections.Counter(a) # list to list || .most_common(2)\u3067\u6700\u5927\u306e2\u500b\u3068\u308a\u3060\u305b\u308b\u304a a[0][0]\nfrom fractions import gcd\nfrom itertools import combinations,permutations,accumulate, product # (string,3) 3\u56de\n#from collections import deque\nfrom collections import deque,defaultdict,Counter\nimport decimal\nimport re\n#import bisect\n#\n#    d = m - k[i] - k[j]\n#    if kk[bisect.bisect_right(kk,d) - 1] == d:\n#\n#\n#\n# python\u3067\u7121\u7406\u306a\u3068\u304d\u306f\u3001pypy\u3067\u3084\u308b\u3068\u6b63\u89e3\u3059\u308b\u304b\u3082\uff01\uff01\n#\n#\n# my_round_int = lambda x:np.round((x*2 + 1)//2)\n# \u56db\u6368\u4e94\u5165g\nimport sys\nsys.setrecursionlimit(10000000)\n#mod = 10**9 + 7\n#mod = 9982443453\nmod = 998244353\ndef readInts():\n  return list(map(int,input().split()))\ndef I():\n  return int(input())\nx = I()\nt = 0\nwhile (t*(t+1))/2 < x:\n    t += 1\nprint(t)\n", "x=int(input())\n#\u968e\u5dee\u6570\u5217\ny,i=1,1\nwhile y<x:\n  i+=1\n  y+=i\nprint(i)", "X = int(input())\n\npos = 0\ni = 0\nwhile pos < X:\n    i += 1\n    pos += i\nprint(i)", "X = int(input())\n\ntime = 0\npos = 0\nwhile pos < X:\n    time += 1\n    pos += time\n\nprint(time)\n", "X = int(input())\n\nfor p in range(100000):\n    if p * (p + 1) // 2 >= X:\n        break\n\nprint(p)"]