["q=str(input())\ne=str(input())\na=len(q)\nb=len(e)\nc=\"\"\nif a==b:\n  for i in range(a):\n    c+=q[i]\n    c+=e[i]\nelse:\n  for i in range(b):\n    c+=q[i]\n    c+=e[i]\n  c+=q[a-1]\n\nprint(c)", "o = input()\ne = input()\npassword = \"\"\n\nfor i in range(len(o)):\n    password += o[i]\n    if len(e) > i:\n        password += e[i]\n\nprint(password)", "O = input()\nE = input()\nAns = []\n\nif len(O) - len(E) == 0:\n  for i in range(len(O)):\n  \tAns.append(O[i])\n  \tAns.append(E[i])\nelse:\n  for i in range(len(E)):\n    Ans.append(O[i])\n    Ans.append(E[i])\n  Ans.append(O[len(O)-1])\n  \nprint(''.join(Ans))", "o = input()\ne = input()\nres = \"\"\nn = min(len(o), len(e))\nfor i in range(n):\n    res += o[i] + e[i]\n\nif len(e) > len(o):\n    res += e[-1]\nelif len(e) < len(o):\n    res += o[-1]\n\nprint(res)\n", "a = input()\nb = input()\nli = []\nif len(a) == len(b):\n    for i in range(len(a)):\n        li.append(a[i]+b[i])\nelse:\n    for i in range(len(b)):\n        li.append(a[i]+b[i])\n    li.append(a[-1])\nprint(''.join(li))", "A = input()\nB = input()\n\npw = \"\"\nif len(A) == len(B):\n    for i in range(len(A)):\n        pw += A[i]\n        pw += B[i]\n    print(pw)\n    return\n\nelse:\n    for i in range(len(B)):\n        pw += A[i]\n        pw += B[i]\n    print(pw + A[-1])\n    return", "a,b=input(),input();n=[i+j for i,j in zip(a,b)]\nprint(*[n,n+[a[-1]]][len(a)-len(b)==1],sep='')", "a = list(input())\nb = list(input())\nf = False\nx = []\nif len(a)> len(b):\n    b.append(0)\n    f = True\nfor i in range(len(a)):\n    x.append(a[i])\n    x.append(b[i])\nif f:\n    x.pop()\nprint(\"\".join(x))", "o = input()\ne = input()\ne += \" \"\nans = \"\"\nfor i in range(len(o)):\n    ans += o[i]\n    ans += e[i]\nprint(ans)", "o = [a for a in str(input())]\ne = [b for b in str(input())]\nans = []\nfor i in range(len(e)):\n  ans.append(o[i])\n  ans.append(e[i])\nif len(o) > len(e):\n  ans.append(o[-1])\nprint(\"\".join(ans))", "import math\nimport collections\nii = lambda : int(input())\nmi = lambda : map(int,input().split())\nli = lambda : list(map(int,input().split()))\n\no = input()\ne = input()\nfor i in range(len(e)):\n    print(o[i] + e[i] ,end = \"\")\nif len(o) != len(e):\n    print(o[-1])\nelse:\n    print()", "from collections import deque\nfrom itertools import count\nOdd = deque(input())\nEven = deque(input())\nrtnList = lambda x: Odd if x & 1 else Even\nans = ''\nfor i in count(1,1):\n    try:\n        s = rtnList(i).popleft()\n    except IndexError:\n        print(ans)\n        return\n    ans += s\n", "O = input()\nE = input()\no = len(O)\ne = len(E)\n[print(O[i], E[i], sep = \"\", end = \"\") for i in range(min(o, e))]\nprint(\"\" if o == e else O[-1])", "O = list(input())\nE = list(input())\n\nans = [0]*(len(O)+len(E))\nfor i in range(len(ans)):\n    if i % 2 == 0:\n        ans[i] = O[0]\n        del O[0]\n    else:\n        ans[i] = E[0]\n        del E[0]\n        \nprint(\"\".join(ans))", "O=input()\nE=input()\nans=\"\"\nfor i in range(len(O)) :\n  ans+=O[i]\n  if i<len(E) :\n    ans+=E[i]\nprint(ans)", "o = input()\ne = input()\nans = []\nfor i in range(len(e)):\n    ans.append(o[i])\n    ans.append(e[i])\nif len(o) != len(e):\n    ans.append(o[-1])\nprint(\"\".join(ans))", "li_o = input()\nli_e = input()\nan = ''\nfor i in range(len(li_o)):\n    an += li_o[i]\n    if i != len(li_e):\n        an += li_e[i]\n    else:\n        break\nprint(an)", "s = list(input())\nt = list(input())\nl = min(len(s),len(t))\nif len(s)>len(t):\n    x = 1\nelif len(s)<len(t):\n    x = 2\nelse:\n    x = 0\nfor i in range(l):\n    print(s[i],end = \"\")\n    print(t[i],end = \"\")\nif x == 1:\n    print(s[-1])\nelif x == 2:\n    print(t[-1])", "#from statistics import median\n#import collections\n#aa = collections.Counter(a) # list to list || .most_common(2)\u3067\u6700\u5927\u306e2\u500b\u3068\u308a\u3060\u305b\u308b\u304a a[0][0]\nfrom math import gcd\nfrom itertools import combinations,permutations,accumulate, product # (string,3) 3\u56de\n#from collections import deque\nfrom collections import deque,defaultdict,Counter\nimport decimal\nimport re\nimport math\nimport bisect\nimport heapq\n#\n#\n#\n# python\u3067\u7121\u7406\u306a\u3068\u304d\u306f\u3001pypy\u3067\u3084\u308b\u3068\u6b63\u89e3\u3059\u308b\u304b\u3082\uff01\uff01\n#\n#\n# my_round_int = lambda x:np.round((x*2 + 1)//2)\n# \u56db\u6368\u4e94\u5165g\n#\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u7cfb\n# int min_y = max(0, i - 2), max_y = min(h - 1, i + 2);\n# int min_x = max(0, j - 2), max_x = min(w - 1, j + 2);\n#\n#\nimport sys\nsys.setrecursionlimit(10000000)\nmod = 10**9 + 7\n#mod = 9982443453\n#mod = 998244353\nINF = float('inf')\nfrom sys import stdin\nreadline = stdin.readline\ndef readInts():\n  return list(map(int,readline().split()))\ndef readTuples():\n    return tuple(map(int,readline().split()))\ndef I():\n    return int(readline())\no = input()\ne = input()\nans = \"\"\nfor i in range(len(o)):\n    ans += o[i]\n    if i >= len(e):\n        pass\n    else:\n        ans += e[i]\nprint(ans)\n", "O = str(input())\nE = str(input())\nS = ''\nfor i in range(len(O) + len(E)):\n    if i % 2 == 0:\n        S += O[(i // 2)]\n    else:\n        S += E[(i // 2)]\n    \nprint(S)", "o = list(input())\ne = list(input())\n\nlst = []\nfor oo,ee in zip(o,e):\n    lst.append(oo+ee)\n\nif len(o)-len(e) == 1:\n    lst.append(o[-1])\n\nprint(\"\".join(lst))", "o=input()\ne=input()\nO=len(o)\nE=len(e)\na=[]\nif O==E:\n    for i in range(O):\n        a.append(o[i]+e[i])\n    b=''.join(a)\n    print(b)\nelse:\n    for i in range(E):\n        a.append(o[i]+e[i])\n    a.append(o[O-1])\n    b=''.join(a)\n    print(b)", "def answer(o: str, e: str) -> str:\n    result = ''\n    e += ' '\n    for i in range(len(o)):\n        result += o[i] + e[i]\n\n    return result.strip()\n\n\ndef main():\n    o = input()\n    e = input()\n    print(answer(o, e))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "def main():\n    O = input()\n    E = input()\n    pas = ''\n    for i in range(len(E)):\n        pas += O[i] + E[i]\n    if len(O) > len(E):\n        pas += O[-1]\n    print(pas)\n\ndef __starting_point():\n    main()\n__starting_point()", "def main():\n    O = list(input())\n    E = list(input())\n    O.reverse()\n    E.reverse()\n    ans = ''\n    for _ in range(200):\n        ans += O.pop()\n        if len(E) == 0:\n            break\n        ans += E.pop()\n        if len(O) == 0:\n            break\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "o=input()\ne=input()\np=\"\"\nfor i in range(len(e)):\n    p+=o[i]\n    p+=e[i]\nif len(o)!=len(e):\n    p+=o[-1]\nprint(p)\n\n\n", "o = input()\ne = input()\nfor i in range(len(o)):\n    print(o[i], end=\"\")\n    if i < len(e):\n        print(e[i], end=\"\")\nprint()\n", "o=list(input())\ne=input()\nfor i in range(len(e)):\n    o.insert(2*i+1,e[i])\nprint(*o,sep=\"\")\n", "O=input()\nE=input()\nans=\"\"\nfor i in range(len(E)):\n  ans+=O[i]\n  ans+=E[i]\n\nif len(O)!=len(E):\n  ans+=O[-1]\nprint(ans)", "o=input()\ne=input()\nn=len(o)\nm=len(e)\nans=[]\nfor i in range(m):\n  ans.append(o[i])\n  ans.append(e[i])\nif n-m==0:\n  print(*ans,sep='')\nelse:\n  ans.append(o[n-1])\n  print(*ans,sep='')", "o = list(input())\ne = list(input())+[\"\"]\nfor s,t in zip(o,e):\n    print(s+t,end=\"\")\n", "import sys\ninput = sys.stdin.readline\nfrom collections import deque\n\n\ndef read():\n    O = input().strip()\n    E = input().strip()\n    return O, E\n\n\ndef solve(O, E):\n    ans = []\n    oq = deque(O)\n    eq = deque(E)\n    while eq:\n        ans.append(oq.popleft())\n        ans.append(eq.popleft())\n    if oq:\n        ans.append(oq.popleft())\n    return \"\".join(ans)\n\n\ndef __starting_point():\n    inputs = read()\n    outputs = solve(*inputs)\n    if outputs is not None:\n        print((\"%s\" % str(outputs)))\n\n__starting_point()", "o=input()\ne=input()\nans=''\nfor i in range(len(e)):\n        ans+=o[i]\n        ans+=e[i]\nif len(o)==len(e):\n    print(ans)\nelse:\n    print((ans+o[-1]))\n", "o = input()\ne = input()\nans = ''\nfor i in range(len(e)):\n    ans +=o[i]+e[i]\nif len(o) != len(e):\n    ans +=o[-1]\nprint(ans)", "o = input()\ne = input()\n\nans = ''\nfor i,j in zip(o,e):\n    ans+= i+j\nif len(o) != len(e):\n    ans+=o[-1]\nprint(ans)", "O = list(input())\nE = list(input())\n\nres = []\n\nif len(O) - len(E) == 0:\n    for i, j in zip(O, E):\n        res.append(i)\n        res.append(j)\nelse:\n    E.append('')\n    for i, j in zip(O, E):\n        res.append(i)\n        res.append(j)\n    res.pop(-1)\n \npw = ''.join(res)\nprint(pw)", "o=input()\ne=input()\ns=[]\ni=1\nj=0\nwhile True:\n    if i%2==0:\n        s.append(e[j])\n        i+=1\n        j+=1\n    else:\n        s.append(o[j])\n        i+=1\n    if i>=len(o)+len(e)+1:\n        break\nfor i in range(len(s)):\n    print(s[i],end=\"\")", "O = input()\nE = input()\nt = \"\"\nn = min(len(O), len(E))\nfor i in range(n):\n  t += O[i] + E[i]\nif len(O) > len(E):\n  t += O[len(O)-1]\nelif len(O) < len(E):\n  t += E[len(E)-1]\nprint(t)\n", "#n = int(input())\n#a, b = map(int,input().split())\n#l = list(map(int,input().split()))\n#l = [list(map(int,input().split())) for i in range(n)]\no = list(input())\ne = list(input())\noc = 0\nec = 0\n\nans = ''\n\nn = len(o)+len(e)\nfor i in range(1,n+1):\n    if i % 2 == 0:\n        add = e[ec]\n        ec += 1\n    else:\n        add = o[oc]\n        oc += 1\n    ans += add\n\nprint(ans)\n", "a = input()\nb = input()\ns = \"\"\nfor i in range(len(b)):\n    s += a[i] + b[i]\nif len(a) > len(b):\n    s += a[-1]\nprint(s)", "a = list(input())\nb = list(input())\n\nfor i in range(0, len(a) + len(b)):\n    if i % 2 == 0:\n        print(a.pop(0), end = \"\")\n    else:\n        print(b.pop(0), end = \"\")\n", "o = input()\ne = input()\nans = ''\nif len(o) == len(e):\n    time = len(o) * 2\nelse:\n    time = len(o) * 2 - 1\nfor i in range(time):\n    if i % 2 == 0:\n        ans += o[i // 2]\n    else:\n        ans += e[i // 2]\nprint(ans)", "o = input()\ne = input()\nans = ''\nfor i in range(len(e)):\n    ans += o[i]+e[i]\n\nif len(o) == len(e):\n    print(ans)\nelse:\n    print(ans+o[-1])", "O = input()\nE = input()\n\ncombi=''\n\nfor i in range(len(O)+len(E)):\n    if i%2==0:\n        combi+=O[i//2]\n    elif i%2!=2:\n        combi+=E[i//2]\nprint(combi)", "\nO = input()\nE = input()\n\ni = 0\nfor i in range(len(O)):\n    print(O[i],end='')\n    if i < len(E):\n        print(E[i],end='')\n    i += 1\n", "o = list(input())\ne = list(input())\nfor i in range(len(e)):\n    print(o[i],end=\"\")\n    print(e[i],end=\"\")\nif len(o) > len(e):\n    print(o[-1])", "odd = list(map(str, input()))\neven = list(map(str, input()))\nif len(odd)==len(even):\n  L=len(odd)*2\nelse:\n  L=len(odd)+len(even)\nli=[]\n\nfor i in range(1,L+1):\n  if i%2==1:\n    if i==1:\n      li.append(odd[0])\n    else:\n      li.append(odd[i//2])\n  else:\n    li.append(even[i//2-1])\n    \nprint(''.join(li))", "O = input()\nE = input()\ns = \"\"\n\nfor so,se in zip(O,E):\n    s += so+se\n\nif len(list(O)) > len(list(E)):\n    s += O[-1]\nelif len(list(O)) < len(list(E)):\n    s += E[-1]\n    \nprint(*s,sep=\"\")", "o = list(input())\ne = list(input())\n\nans = list()\n\nfor i in range(len(e)):\n    ans.append(o[i])\n    ans.append(e[i])\n\nif len(o) != len(e):\n    ans.append(o[-1])\n\nprint((''.join(ans)))\n", "o = input()\ne = input()\nd = \"\"\nif len(o) == len(e):\n  for i in range(len(o)):\n    d += o[i]\n    d += e[i]\n  print(d)\nelse:\n  for i in range(len(e)):\n    d += o[i]\n    d += e[i]\n  d += o[-1]\n  print(d)", "O = input()\nE = input()\nfor i in range(min(len(O),len(E))):\n\tprint(O[i],E[i],sep=\"\",end=\"\")\nif len(O) > len(E):\n\tprint(O[-1])", "O = input()\nE = input()\n\nans = ''\n\nif len(O) == len(E):\n   for i in range(len(O)):\n      ans += O[i]\n      ans += E[i]\nelse:\n   for i in range(len(E)):\n      ans += O[i]\n      ans += E[i]\n   ans += O[-1]\n\nprint(ans)", "a,b=input(),input();n=[i+j for i,j in zip(a,b)]\nprint(*[n,n+[a[-1]]][len(a)-len(b)],sep='')", "o = list(input())\ne = list(input())\n\nans = ''\nfor i in range(len(e)):\n    ans += o[i] + e[i]\nif len(o) > len(e):\n    ans += o[len(o) - 1]\nprint(ans)", "def actual(O, E):\n    s = ''.join([f'{o}{e}' for o, e in zip(O, E)])\n\n    if len(O) - len(E) == 1:\n        s += O[-1]\n\n    return s\n\nO = input()\nE = input()\n\nprint(actual(O, E))", "o = input()\ne = input()\n\nans = ''\nfor i in range(len(e)):\n    ans += o[i]\n    ans += e[i]\nif len(e) < len(o):\n    ans += o[-1]\nprint(ans)\n", "o=input()\ne=input()\n\np=\"\"\n\nfor i in range(len(o)):\n    p+=o[i]\n    if i<len(e):\n        p+=e[i]\n        \nprint (p)\n\n\n", "o = str(input())\ne = str(input())\n\nans = ''\nfor i in range(len(e)):\n    ans += o[i]\n    ans += e[i]\nif len(o) != len(e):\n    ans += o[-1]\nprint(ans)", "o = input()\ne = input()\nans = []\nfor i in range(len(o)+len(e)):\n  if i%2 == 0:\n    ans.append(o[i//2])\n  else:\n    ans.append(e[i//2])\nprint(\"\".join(ans))", "o, e = [input() for i in range(2)]\nfor i in range(len(e)):\n    print(o[i], end = \"\")\n    print(e[i], end = \"\")\nif len(o) - len(e) == 1:\n    print(o[len(o)-1])", "#-*-coding:utf-8-*-\nimport sys\ninput=sys.stdin.readline\n\ndef main():\n    O = input().rstrip()\n    E = input().rstrip()\n    password=\"\"\n    last = \"\"\n\n    if len(O) > len(E):\n        last = O[-1]\n    elif len(O) < len(E):\n        last = E[-1]\n    else:\n        last=\"\"\n\n    for p1,p2 in zip(O,E):\n        password+=p1+p2\n    print(password+last)\n\ndef __starting_point():\n    main()\n__starting_point()", "O = input()\nE = input()\n\nresult = ''\nif len(O) == len(E):\n    for i in range(len(O)):\n        result += O[i] + E[i]\nelse:\n    for i in range(len(E)):\n        result += O[i] + E[i]\n    result += O[-1]\n\nprint(result)", "o = input()\ne = input()\nans = ''\nfor i in range(len(e)):\n    ans += o[i] + e[i]\nif len(o) - len(e) == 1:\n    ans += o[len(o)-1]\nprint(ans)", "o = input()\ne = input()\n\nfor i in range(len(e)):\n    print(o[i], end = '')\n    print(e[i], end = '')\n\nif len(o) != len(e):\n    print(o[len(o)-1])", "o = input()\ne = input()\n\nn = len(o) + len(e)\ns = ['' for _ in range(n)]\nfor i in range(n):\n    j = i // 2\n    if i % 2 == 0:\n        s[i] = o[j]\n    else:\n        s[i] = e[j]\n\nprint((''.join(s)))\n", "O = input()\nE = input()\n\nans = ''\n\nfor i in range(len(E)):\n    ans += O[i] + E[i]\n\nif len(O) != len(E):\n    ans += O[-1]\n\nprint(ans)\n", "o = str(input())\ne = str(input())\na = ''\nfor i in range(len(e)):\n    a += o[i]\n    a += e[i]\n    if len(o) != len(e) and i == len(e) - 1:\n        a += o[i + 1]\nprint(a)", "#58B\nA=list(input())\nB=list(input())\nx=A[0]+B[0]\nfor i in range(1,len(B)):\n    x=x+A[i]+B[i]\nif len(A)>len(B):\n    x=x+A[-1]\nprint(x)", "o = input()\ne = input()\n\nans = ''\nfor i in range(len(o) + len(e)):\n    if i % 2 == 0:\n        ans += o[i - (i // 2)]\n    else:\n        ans += e[i - ((i + 1) // 2)]\n\nprint(ans)\n", "s1 = input()\ns2 = input()\nans = \"\"\nfor i,j in zip(s1, s2):\n  ans += (i + j)\n  \nif len(s1) != len(s2):\n  ans += s1[-1]\nprint(ans)", "o = input()\ne = input()\n\np = ''\nfor i in range(len(e)):\n    p += o[i] + e[i]\nif len(o) > len(e):\n    p += o[-1]\nprint(p)", "s = input()\nt = input()\nans = \"\"\nif (len(s) + len(t)) % 2 == 0:\n  for i in range(len(s)):\n    ans += s[i]\n    ans += t[i]\nelse:\n  for i in range(len(t)):\n    ans += s[i]\n    ans += t[i]\n  ans += s[-1]\n  \nprint(ans)", "O = input()\nE = input()\nS = \"\"\n\nif len(O) == len(E):\n  for i in range(len(O)):\n    S += O[i] + E[i]\n    \nelse:\n  for i in range(len(E)):\n    S += O[i] + E[i]\n  S += O[len(O)-1]\n  \nprint(S)", "O = input()\nE = input()\n\npassword = ''\nfor o, e in zip(O, E):\n    s = o + e\n    password += s\n\nif len(O) > len(E):\n    print(password + O[-1])\nelif len(O) < len(E):\n    print(password + E[-1])\nelse:\n    print(password)", "o = input()\ne = input()\na = \"\"\n\nfor i in range(len(o)):\n    a += o[i]\n    if i < len(e):\n        a += e[i]\n\nprint(a)", "O = list(input())\nE = list(input())+[\"\"]\n\nfor o,e in zip(O, E):\n  print(o+e,end=\"\")\n", "ans = \"\"\nO = input()\nE = input()\nfor o, e in zip(O, E):\n    ans += o + e\nif len(O) > len(E):\n    ans += O[-1]\n\nprint(ans)\n", "o = str(input())\ne = str(input())\n\nans = \"\"\njudge = False\nif len(o)-len(e) == 1:\n    judge = True\n\nfor i in range(len(e)):\n    ans += o[i]\n    ans += e[i]\nif judge:\n    ans += o[-1]\n\nprint(ans)", "#!/usr/bin/env python3\n\ndef main():\n    a = list(input())\n    b = list(input()) + [\"\"]\n    for i in range(len(a)):\n        print(a[i], end=\"\")\n        print(b[i], end=\"\")\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math\na=input()\nb=input()\n\nn=''\nfor i in range(len(a)+len(b)):\n    if i%2==0:\n        n=n+a[i//2]\n    else:\n        n=n+b[math.ceil(i/2)-1]\nprint(n)", "o = input()\ne = input()\nans = \"\".join([o[i]+e[i] for i in range(min(len(o), len(e)))])\nif len(o)!=len(e):\n    if len(o) > len(e): ans += o[-1]\n    else: ans += e[-1]\nprint(ans)", "# B - \u2235\u2234\u2235\ndef main():\n    o = list(input())\n    d = list(input())\n\n    for i in range(len(o)+len(d)):\n        if i % 2 == 0:\n            print(o.pop(0), end='')\n        else:\n            print(d.pop(0), end='')\n\n  \n        \ndef __starting_point():\n    main()\n__starting_point()", "o = input()\ne = input()\n\nlen_o = len(o)\nlen_e = len(e)\nans = ''\n\nif len_o == len_e:\n  for i in range(len_o):\n    ans += o[i]\n    ans += e[i]\nelif len_o > len_e:\n  for i in range(len_e):\n    ans += o[i]\n    ans += e[i]\n  for i in range(len_e, len_o):\n    ans += o[i]\nelse:\n  for i in range(len_o):\n    ans += o[i]\n    ans += e[i]\n  for i in range(len_o, len_e):\n    ans += e[i]\nprint(ans)\n", "import sys, math\nfrom itertools import combinations as c, product as p\nfrom collections import deque\nsys.setrecursionlimit(10**9)\nINF = float('inf')\nMOD = 10**9 + 7\n#MOD = 998244353\n\n\ndef si(): return input()\ndef ii(): return int(input())\ndef fi(): return float(input())\ndef lstr(): return input().split()\ndef lint(): return list(map(int, input().split()))\ndef lintdec(): return list(map(lambda x:int(x) - 1, input().split()))\ndef lnstr(n): return [input() for _ in range(n)]\ndef lnint(n): return [int(input()) for _ in range(n)]\ndef lint_list(n): return [lint() for _ in range(n)]\n\n\n\n############################################################\nO = si()\nE = si()\n\nfor i in range(len(O + E)):\n    if i % 2:\n        print(E[i // 2], end='')\n    else:\n        print(O[i // 2], end='')\nprint()", "o = input()\ne = input()\n\nres = \"\"\nfor i, j in zip(o, e):\n    res += i + j\nif(len(o) != len(e)): res += o[-1]\nprint(res)", "o = input()\ne = input()\np = ''\nif len(o) == len(e):\n  for i in range(0, len(o)):\n    p += o[i] + e[i]\n \nelif len(o) >= len(e):\n  for i in range(0, len(e)):\n    p += o[i] + e[i]\n  p += o[-1]\n \nprint(p)", "a,b=input(),input()+' ';print(*[i+j for i,j in zip(a,b)],sep='')", "o = input()\ne = input()\nl = []\nif len(o)-len(e) == 1:\n  for i in range(len(e)):\n    l.append(o[i])\n    l.append(e[i])\n  l.append(o[-1])\nelse:\n  for i in range(len(o)):\n    l.append(o[i])\n    l.append(e[i])\nprint(\"\".join(l))", "o = input()\ne = input()\n\nfor i in range(len(e)):\n  print(o[i]+e[i], end=\"\")\n\nif len(o) - len(e) == 1:\n  print(o[-1])", "o, e = input(), input() + \" \"\nfor x, y in zip(o, e):\n  print(x + y, end=\"\")", "o = input()\ne = input()\ns = \"\"\nfor i in range(len(e)):\n    s += o[i]\n    s += e[i]\nif len(o) == len(e):\n    print(s)\nelse :\n    s += o[-1]\n    print(s)", "o = input()\nt = input()\n\nans = \"\"\n\nfor i in range(min(len(o), len(t))):\n    ans += o[i] + t[i]\n\nif len(o) > len(t):\n    ans += o[-1]\nelif len(o) < len(t):\n    ans += t[-1]\nelse:\n    pass\n\nprint(ans)", "o = input()\ne = input()\n\npw = ''\nfor i in range(len(o)):\n    pw += o[i]\n    if i < len(e):\n        pw += e[i]\nprint(pw)", "O = list(input())\nlo = len(O)\nE = list(input())\nle = len(E)\nw = lo + le\n\nX = ['*']*w\nfor i in range(le):\n  X[2*i] =O[i]\n  X[2*i+1] = E[i]\nif lo > le:\n  X[-1] = O[-1]\n  \nprint(''.join(X))", "a=input()\nb=input()\nc=len(a)\nd=len(b)\nx=\"\"\nif c<=d:\n  for i in range(c):\n    x=x+a[i]\n    x=x+b[i]\n  print(x)\nif c>d:\n  for i in range(d):\n    x=x+a[i]\n    x=x+b[i]\n  x=x+a[len(a)-1]\n  print(x)", "o = list(input())\ne = list(input())\ns = []\nt = \"\"\nif len(o+e) % 2 == 0:\n    for i in range(int(len(o+e)/2)):\n        s.append(o[i]+e[i])\n    t = t.join(s)\nelse:\n    for i in range(int(len(o+e)/2)):\n        s.append(o[i]+e[i])\n    t = t.join(s)\n    t = t + o[int(len(o+e)/2)]\n\nprint(t)\n", "o = list(input())\ne = list(input()) + [\"\"]\nans = \"\".join(o + e for o, e in zip(o, e))\nprint(ans)", "#!/usr/bin/env python3\n\ndef main():\n    a = input()\n    b = input()\n    for i in range(len(a)):\n        print(a[i], end=\"\")\n        if i < len(b):\n            print(b[i], end=\"\")\n    print()\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "O = list(input())\nE = list(input())+['']\nprint(*[o+e for o,e in zip(O,E)], sep=\"\")\n", "O = input()\nE = input()\n\nans = \"\"\nwhile len(O)>0:\n  ans += O[:1]+E[:1]\n  O = O[1:]\n  E = E[1:]\nprint(ans)"]