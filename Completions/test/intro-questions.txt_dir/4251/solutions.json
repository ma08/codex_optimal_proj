["import sys\nimport copy\n\ninput = sys.stdin.readline\n\nn,m=list(map(int,input().split()))\nMAT=[list(map(int,input().split())) for i in range(n)]\n\n#n=15\n#m=10000\n#MAT=[list(range(j*j,j*j*(m+1),j*j)) for j in range(1,n+1)]\n\n\nif n==1:\n    ANS=10**10\n    for i in range(1,m):\n        if ANS>abs(MAT[0][i]-MAT[0][i-1]):\n            ANS=abs(MAT[0][i]-MAT[0][i-1])\n    print(ANS)\n    return\n\n\n\nEDGE0=[[10**10]*n for i in range(n)]#i\u304c0\u884c\u76ee,j\u304c\u6700\u7d42\u884c\nEDGE1=[[10**10]*n for i in range(n)]\nMAX=0\nMIN=0\n\nif m!=1:    \n    for i in range(n):\n        for j in range(n):\n\n            EDGE1[i][j]=EDGE1[j][i]=min([abs(MAT[i][k]-MAT[j][k]) for k in range(m)])\n            \n            if EDGE1[i][j]>MAX:\n                MAX=EDGE1[i][j]\n\n            EDGE0[i][j]=min([abs(MAT[i][k]-MAT[j][k-1]) for k in range(1,m)])\nelse:\n    for i in range(n):\n        for j in range(n):\n\n            EDGE1[i][j]=EDGE1[j][i]=min([abs(MAT[i][k]-MAT[j][k]) for k in range(m)])\n            \n            if EDGE1[i][j]>MAX:\n                MAX=EDGE1[i][j]\n    \n\ndef Hamilton(start,USED,rest,last,weight):\n    #print(start,USED,rest,last,weight,last*(1<<n)+USED)\n    if MEMO[last*(1<<n)+USED]!=2:\n        return MEMO[last*(1<<n)+USED]\n    if rest==1:\n        for i in range(n):\n            if USED & (1<<i)==0:\n                final=i\n                break\n\n        if EDGE0[start][final]>=weight and EDGE1[last][final]>=weight:\n            #print(start,USED,rest,last,weight)\n\n            MEMO[last*(1<<n)+USED]=1\n            return 1\n        else:\n            #print(start,USED,weight,\"!\")\n            MEMO[last*(1<<n)+USED]=0\n            return 0\n\n    for j in range(n):\n        if USED & (1<<j)==0 and EDGE1[last][j]>=weight:\n            \n            NEXT=USED+(1<<j)\n            if Hamilton(start,NEXT,rest-1,j,weight)==1:\n                #print(start,USED,rest,last,weight)\n                MEMO[last*(1<<n)+USED]=1\n                return 1\n    else:\n        #print(start,USED,weight,\"?\")\n        MEMO[last*(1<<n)+USED]=0\n        return 0\n        \n    \nwhile MAX!=MIN:\n    #print(MAX,MIN)\n    aveweight=(MAX+MIN+1)//2\n\n    for start in range(n):\n        MEMO=[2]*(n*1<<(n+1))\n        START=1<<start\n        if Hamilton(start,START,n-1,start,aveweight)==1:\n            MIN=aveweight\n            break\n    else:\n        MAX=aveweight-1\n\nprint(MAX)\n"]