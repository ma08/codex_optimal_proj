["s=input();n=len(s)-1;print(sum(s[i]!=s[n-i]for i in range(n+1))//2)", "S = input()\nnum = len(S)//2\nif num % 2 == 0:\n    for i in range(num):\n        if S[i] == S[-i-1]:\n            num -= 1\nelse:\n    for i in range(num):\n        if S[i] == S[-i-1]:\n            num -= 1\nprint(num)", "A=input();print(sum([A[i]!=A[::-1][i] for i in range(len(A))])//2)", "import math\n\ns=input()\ncount=0\n\nfor i in range(0,math.floor(len(s)/2)):\n    if s[i]!=s[len(s)-i-1]:\n        count=count+1\n\nprint(count)", "S=input();c=0;N=len(S)\nfor i in range(N//2):c+=S[i]!=S[N-i-1]\nprint(c)", "s = input()\nlength = len(s)//2\ncount = 0\nfor i in range(length):\n  if s[i] != s[-(i+1)]:\n    count += 1\nprint(count)", "S = input()\ndef kaibun():\n    count=0\n    for i in range(int(len(S)/2)):\n        if S[i] != S[len(S)-1-i]:\n            count+=1\n    return count\nprint(kaibun())", "s = input()\nslen = len(s)\nans = 0\nfor i in range(slen//2):\n  if s[i] != s[-(i+1)]:\n    ans += 1\nprint(ans)", "s = list(input())\nans = 0\nr = list(reversed(s))\n\nfor i in range(len(s)//2):\n    if s[i] != r[i]:\n        ans += 1\nprint(ans)", "s = list(input())\nb = 0\nfor a in range(int(len(s)/2)):\n    if s[a]!=s[len(s)-a-1]:\n        b = b + 1\nprint(b)", "A=input();print(sum(i!=j for i,j in zip(A,A[::-1]))//2)", "s = input()\nn = len(s)\ncnt = 0\n\nfor i in range(n//2):\n  if s[i] != s[n-1-i]:\n    cnt += 1\nprint(cnt)", "s = input()\nl = len(s)\nans = 0\nfor i in range(l//2):\n  if s[i] != s[l-1-i]: ans += 1\nprint(ans)", "s = input()\nl, r = 0, len(s)-1\nc = 0\n\nwhile l < r:\n    if s[l] != s[r]:\n        c += 1\n\n    l += 1\n    r -= 1\n\nprint(c)\n", "S=input()\na=len(S)\nprint(sum(S[i]!=S[a-i-1]for i in range(a//2)))", "S = str(input())\ncount = 0\n\nfor i in range(len(S)//2):\n    if S[i] != S[-i-1]:\n        count += 1\n\nprint(count)", "S = input()\nanswer = 0\nfor i in range(len(S) // 2):\n    if S[i] != S[-i-1]:\n        answer += 1\nprint(answer)", "s = input()\nn = len(s)\ncnt = 0\ni = 0\nj = -1\nd = 0\nwhile d != n//2:\n    if s[i] != s[j]:\n        cnt += 1\n    i+=1\n    j-=1\n    d+=1\n\nprint(cnt)", "s = input()\nans = 0\nfor i in range(len(s)//2):\n    if s[i] != s[-1-i]:\n        ans += 1\nprint(ans)\n", "s = list(input())\nn = len(s)\nans = 0\n\nfor i in range(n//2):\n  if s[i] != s[-1-i]:\n    ans += 1\n\nprint(ans)", "s=input()\ncnt=0\nfor i in range(len(s)//2):\n    if s[i]!=s[-i-1]:\n        cnt+=1\nprint(cnt)", "s = input()\nc = 0\nl = len(s)\nfor i in range(l//2):\n  if s[i] != s[l-i-1]:\n    c += 1\nprint(c)", "s = input()\nans = 0\nfor i in range(len(s)//2):\n    if s[i] != s[-1-i]:\n        ans += 1\nprint(ans)", "s = input()\nans = 0\nfor i in range(len(s)//2):\n    if s[i]!=s[-i-1]:\n        ans += 1\nprint(ans)", "s = input()\n\ncount = 0\nfor x in range(len(s)//2):\n  if s[x] != s[-x-1]:\n    count += 1\n\nprint(count)", "s = list(input())\nn = len(s)//2\ncnt = 0\n\nL = s[:n]\nR = s[-n:][::-1]\n\nfor l, r in zip(L, R):\n  if l != r:\n    cnt += 1\nprint(cnt)", "s=input()\nt=s[::-1]\ncnt=0\nfor i in range(len(t)//2):\n    if s[i]!=t[i]: cnt+=1\nprint(cnt)", "s = input()\nans = 0\nfor i in range(len(s)//2):\n    if s[i] != s[-(i+1)]:\n        ans += 1\nprint(ans)", "S = input()\n\nresult = 0\nfor i in range(len(S) // 2):\n  if S[i] != S[-(i + 1)]:\n    result += 1\n\nprint(result)", "S=input();c=0;N=len(S)\nfor i in range(N//2): c+=(S[i]!=S[N-i-1])\nprint(c)", "s = list(input())\nm = len(s)//2\ncnt = 0\nfor num in range(m):\n    if s[num] != s[-1 + (-1*num)]:\n        cnt += 1\nprint(cnt)", "s = input()\n\nans = 0\nfor i in range(len(s)//2):\n    if s[i] != s[-1-i]:\n        ans += 1\nprint(ans)", "# ABC147\n\nS = input()\ncnt = 0\nfor i in range(len(S)//2):\n    if S[i] != S[len(S)-i-1]:\n        cnt += 1\nprint(cnt)\n", "S = input()\nS_ = S[::-1]\n\ncount = 0\nfor i in range(len(S)//2):\n    if S[i] != S_[i]:\n        count += 1\nprint(count)", "S = input()\nlistS = list(S)\ncnt = 0\nif len(S) % 2 == 0 :\n    for i in range(len(S)//2) :\n        if S[i] != S[-(i+1)] :\n            cnt += 1\nelse :\n    for i in range((len(S))//2) :\n        if S[i] != S[-(i+1)] :\n            cnt += 1\n\nprint(cnt)", "s=input();print(sum(i!=j for i,j in zip(s,s[::-1]))//2)", "#!/usr/bin/env python3\n\n\ndef solve(S: str):\n    return sum([a != b for a, b in zip(S, reversed(S))]) // 2\n\n\ndef main():\n    S = input().strip()\n    answer = solve(S)\n    print(answer)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "S=input()\nif len(S)%2==0:\n\tS_left=list(S)[:int(len(S)/2)]\n\tS_right=list(S)[int(len(S)/2):][::-1]\n\nelse:\n\tS_left=list(S)[:int(len(S)//2)]\n\tS_right=list(S)[int(len(S)/2)+1:][::-1]\n\nans=0\nfor i in range(len(S_left)):\n\tif S_left[i]!=S_right[i]:\n\t\tans+=1\n\nprint(ans)", "S = input()\n\nmid = len(S) // 2\ncount = 0\nfor i in range(mid):\n    if S[i] != S[len(S)-1-i]:\n        count += 1\nprint(count)", "s=input();print(sum(s[i]!=s[len(s)-i-1] for i in range(len(s)))//2)", "s=input()\ncnt=0\nl=len(s)-1\nfor i in range(len(s)//2):\n    if s[i]!=s[l-i]:\n        cnt+=1\nprint(cnt)", "S = input()\nT = \"\".join([S[i] for i in range(len(S)-1,-1,-1)])\nans = 0\nfor i in range(len(S)//2):\n    if(S[i] != T[i]):\n        ans += 1\nprint(ans)", "S = input()\nT = S[::-1]\ncnt = 0\nfor i in range(len(S)//2):\n    if S[i] != T[i]:\n        cnt += 1\nprint(cnt)", "#!/usr/bin/env python3\nfrom collections import defaultdict, Counter\nfrom itertools import product, groupby, count, permutations, combinations\nfrom math import pi, sqrt\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nfrom string import ascii_lowercase\nfrom functools import lru_cache\nimport sys\nsys.setrecursionlimit(10000)\nINF = float(\"inf\")\nYES, Yes, yes, NO, No, no = \"YES\", \"Yes\", \"yes\", \"NO\", \"No\", \"no\"\ndy4, dx4 = [0, 1, 0, -1], [1, 0, -1, 0]\ndy8, dx8 = [0, -1, 0, 1, 1, -1, -1, 1], [1, 0, -1, 0, 1, 1, -1, -1]\n\n\ndef inside(y, x, H, W):\n    return 0 <= y < H and 0 <= x < W\n\n\ndef ceil(a, b):\n    return (a + b - 1) // b\n\n\ndef sum_of_arithmetic_progression(s, d, n):\n    return n * (2 * s + (n - 1) * d) // 2\n\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\ndef lcm(a, b):\n    g = gcd(a, b)\n    return a / g * b\n\n\ndef solve():\n    S = input()\n\n    num = 0\n    for i in range(len(S) // 2):\n        num += S[i] != S[-i - 1]\n    print(num)\n\n\ndef main():\n    solve()\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "S=input()\ncnt=0\nfor i in range(len(S)//2):\n    cnt+=S[i]!=S[-i-1]\nprint(cnt)\n", "S = input()\ncnt = 0\nN = len(S)\nfor i in range(N//2):\n  if S[i] != S[N-i-1]:\n    cnt += 1\nprint(cnt)", "def answer(s: str) -> int:\n    count = 0\n    for i in range(len(s) // 2):\n        if s[i] != s[-i - 1]:\n            count += 1\n\n    return count\n\n\ndef main():\n    s = input()\n    print((answer(s)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "S = input()\nans = 0\n\nfor i in range(0,len(S)//2):\n    if S[i] != S[len(S)-1-i]:\n        ans += 1\n\nprint(ans)", "import re\nimport sys\nimport math\nimport itertools\nimport bisect\nfrom copy import copy\nfrom collections import deque,Counter\nfrom decimal import Decimal\nimport functools\ndef v(): return input()\ndef k(): return int(input())\ndef S(): return input().split()\ndef I(): return map(int,input().split())\ndef X(): return list(input())\ndef L(): return list(input().split())\ndef l(): return list(map(int,input().split()))\ndef lcm(a,b): return a*b//math.gcd(a,b)\nsys.setrecursionlimit(10 ** 9)\nmod = 10**9+7\ncnt = 0\nans = 1\ninf = float(\"inf\")\nal = \"abcdefghijklmnopqrstuvwxyz\"\n\nS = v()\n\na = len(S)\n\nif a % 2 == 0:\n    ra = a//2\nelse:\n    ra = a//2\n\nfor i in range(ra):\n    if S[i] != S[-(i+1)]:\n        cnt += 1\n\nprint(cnt)", "S=input()\nanswer=0\n\nif S==S[::-1]:\n  print(0)\n  return\n  \nfor i in range(len(S)//2):\n  if S[i]!=S[-(i+1)]:\n    answer+=1\nprint(answer)", "moji = str(input())\nN = len(moji)\nFM = moji[:N//2]\nif N % 2 == 0:\n    LM = moji[-1:(N//2)-1:-1]\nelse:\n    LM = moji[-1:(N//2):-1]\nct = 0\n\nfor i in range(N//2):\n    if FM[i] != LM[i]:\n        ct += 1\n\nprint(ct)\n    \n", "A = input()\nimport math\ntimes = math.ceil(len(A)/2)\ncount = 0\nfor i in range(times):\n  if A[i] != A[len(A)-1-i]:\n    count += 1\nprint(count)", "a = list(input())\nb = a[::-1]\ncount = 0\nfor i in range(len(a)):\n\tif a[i]!=b[i]:\n\t\tcount += 1\n\t\t\nprint(count//2)", "#!/usr/bin/env python3\ndef main():\n    S = input()\n\n    ans = 0\n    for i in range(len(S)):\n        if S[i] != S[-(i + 1)]:\n            ans += 1\n    print((ans // 2))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "s = input()\ncnt = 0\nfor i in range(len(s)//2):\n    if s[i]!=s[-(i+1)]:\n        cnt += 1\nprint(cnt)", "S=input();print(sum(a!=b for a,b in zip(S,S[::-1]))//2)", "s=input()\nans = 0\nfor i in range(len(s)//2):\n if s[i] != s[len(s)-1-i]:\n  ans+=1\n\nprint(ans)", "S = input()\nlength = len(S)\nif length % 2 == 0:\n    length = int(length / 2)\n    S_half_1 = S[:length]\n    S_half_2 = S[(length):]\n    S_half_2 = S_half_2[::-1]\nelse:\n    length = int(length // 2)\n    S_half_1 = S[:length]\n    S_half_2 = S[(length + 1) :]\n    S_half_2 = S_half_2[::-1]\n\nans = 0\nfor i in range(length):\n    if S_half_1[i] != S_half_2[i]:\n        ans += 1\nprint(ans)\n", "S = input()\nn = len(S)\nc = 0\nfor i in range(n // 2):\n    if S[i] != S[n - i - 1]:\n        c += 1\nprint(c)", "s = input()\n\ns = \" \" + s\n\nans = 0\n\nif len(s) % 2 == 0:\n    for i in range(1, len(s) // 2 + 1):\n        if s[i] != s[i * -1]:\n            ans += 1\nelse:\n    for i in range(1, len(s) // 2 + 1):\n        if s[i] != s[i * -1]:\n            ans += 1\n\nprint(ans)", "s = input()\ncau = 0\nl = len(s)\nfor j in range(l // 2 + l % 2):\n    if s[j] != s[ -1 - j]:\n        cau = cau + 1\n    \nprint(cau)", "s=str(input())\nn=len(s)\ncnt=0\nfor i in range(n//2):\n  if s[i]!=s[n-1-i]:\n    cnt+=1\n    \nprint(cnt)", "s = input()\nans = 0\nfor i in range(len(s)//2):\n  if s[i] != s[-1-i]:\n    ans += 1\nprint(ans)\n", "s=input()\ncnt=0\nfor i in range(len(s)//2):\n    if s[i]!=s[-(i+1)]:\n        cnt+=1\nprint(cnt)\n", "S = input()\n\nN = len(S)\nans = 0\nfor i in range(N//2):\n  if S[i] != S[N-i-1]: ans += 1\n    \nprint(ans)", "S = input()\n\ncnt = 0\nfor i in range(int(len(S)/2)):\n    if S[i] == S[len(S)-1-i]:\n        continue\n    else:\n        cnt += 1\n        #print(i, S[i], S[len(S)-1-i])\nprint(cnt)", "from sys import stdin, stdout # only need for big input\n\ndef solve():\n    s = input() \n    left = 0\n    right = len(s) - 1\n    count = 0\n    while left < right:\n        count += (s[left] != s[right])\n        left += 1\n        right -= 1\n    print(count)\n\ndef main():\n    solve()\n\n\ndef __starting_point():\n    main()\n__starting_point()", "S=input()\ncnt = 0\nfor i in range(len(S)//2):\n    if S[i] != S[len(S) - i - 1]:\n        cnt += 1\nprint(cnt)", "a = list(input())\nnum = len(a)\ncount = 0\nfor i in range(len(a)//2):\n    if a[i] == a[num-1-i]:\n      pass\n    else:\n      count+=1\nprint(count)", "s = input()\n\na = 0\ni = 0\n\nwhile i < len(s)/2:\n    if s[i] != s[-i-1]:\n        a += 1\n    i += 1\n\nprint(a)\n", "def main():\n   S = input()\n   count = 0\n   for i in range(int(len(S)//2)):\n      if(S[i] != S[-i-1]):\n         count+=1\n   print(count)\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "A=input()\nc=0\nB=A[::-1]\nfor i in range(len(A)):\n    if A[i]!=B[i]:\n        c+=1\nprint(c//2)", "s = input()\nmid = len(s)//2\nq = s[:mid]\nif len(s)%2 == 0:\n    t = list(s[mid:])\nelse:\n    t = list(s[mid+1:])\n\nt.reverse()\ncnt = 0\n\nfor i in range(mid):\n    cnt += s[i] != t[i]\n\nprint(cnt)", "n = input()\nnum = len(n) // 2\nans = 0\nfor i in range(num):\n  if n[i] != n[len(n)-1-i]:\n    ans += 1\nprint(ans)\n", "s = input()\nans=0\nfor i in range(len(s)//2):\n    if s[i] != s[-(i+1)]:\n        ans+=1\n\nprint(ans)\n", "s = list(input())\nLe = len(s)//2\nfront = s[:Le+1]\nback = s[-Le:]\ncount=0\nfor i in range(Le):\n    if front[i] != back[-1-i]:\n        count+=1\nprint(count)", "def resolve():\n    s = input()\n    n = len(s)\n    a = s[:n//2]\n    b = s[::-1][:n//2]\n    cnt = 0\n    for i in range(len(a)):\n        if a[i] != b[i]:\n            cnt += 1\n    print(cnt)\nresolve()", "S = input()\ns1 = S[:len(S)//2]\ns2 = S[len(S)//2+len(S)%2:]\ns2 = s2[::-1]\ncount = 0\nfor i in range(len(s1)):\n  if s1[i] != s2[i]:\n    count += 1\nprint(count)", "s=list(input())\nr=list(reversed(s))\nc=0\n\nfor i in range(len(s)):\n  if s[i]!=r[i]:\n    c+=1\n\nprint(c//2)", "list_s = list(input())\ncount = 0\nfor i in range(0, len(list_s) // 2):\n    if list_s[i] == list_s[0 - (i + 1)]:\n        continue\n    else: count += 1\nprint(count)", "s = input()\nans = 0\nfor i in range(len(s) // 2):\n  if s[i] != s[len(s)-i-1]:\n    ans += 1\nprint(ans)", "s = input()\nr_s = s[::-1]\ncnt = 0\nfor a, b in zip(s,r_s):\n  if a != b: cnt+=1\nprint(cnt//2)", "S = input()\ndis = len(S)-1\nans = 0\nfor i in range(len(S)//2):\n    if S[i] != S[dis]:\n        ans += 1\n    dis -= 1\n        \n    \nprint(ans)", "S = input()\nans = 0\nfor i in range(len(S)):\n  if S[i] != S[-1*(i+1)]:\n    ans += 1\nprint(ans//2)", "s=input()\nhug=0\nfor i in range(len(s)//2):\n  if s[i]!=s[len(s)-i-1]:\n    hug+=1\nprint(hug)", "S = str(input())\n\nN = len(S)\nhalf = (N+1) // 2\nans = 0\nfor i in range(half):\n  if S[i] != S[N-1-i]:\n    ans += 1\nprint(ans)", "import sys\n\n\ndef resolve(in_):\n    S = next(in_).strip()\n\n    ans = 0\n    for a, b in zip(S[:len(S) // 2], reversed(S)):\n        if a != b:\n            ans += 1\n\n    return ans\n\n\ndef main():\n    answer = resolve(sys.stdin)\n    print(answer)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "s, hug = input(), 0\nfor i in range(len(s) // 2):\n\tif s[i] != s[-(i+1)]:\n\t\thug += 1\nprint(hug)", "s = input()\n\nif len(s) % 2 == 0:\n    s1 = s[:len(s) // 2]\n    s2 = s[:len(s) // 2 - 1:-1]\nelse:\n    s1 = s[:len(s) // 2]\n    s2 = s[:len(s) // 2:-1]\n\nans = 0\nfor i in range(len(s1)):\n    if s1[i] != s2[i]:\n        ans += 1\n\nprint(ans)\n", "S=input();N=len(S);print(sum(S[i]!=S[N-i-1] for i in range(N//2)))", "s = input()\na = 0\nfor i in range(len(s) // 2):\n    if s[i] != s[-(i + 1)]:\n        a += 1\nprint(a)", "S=input()\nprint(sum(i!=j for i,j in zip(S,S[::-1]))//2)", "import math\nimport collections\nii = lambda : int(input())\nmi = lambda : map(int,input().split())\nli = lambda : list(map(int,input().split()))\n\ns = input()\n\ncnt = 0\nfor i in range(len(s)//2):\n    if s[i] != s[-1-i]:\n        cnt += 1\nprint(cnt)", "s = input()\ncount = 0\nfor i in range(len(s)//2):\n    if s[i] != s[-(i + 1)]:\n        count+= 1\nprint(count)", "S = input()\nl = len(S)\nans = 0\nfor i in range(l//2):\n  if S[i] != S[-i-1]:\n    ans += 1\nprint(ans)", "S = input()\nT = S[::-1]\ncnt = 0\nfor i in range(len(S)//2):\n    if S[i] != T[i]:\n        cnt += 1\nprint(cnt)", "s=input()\nans=0\nn=len(s)\nfor i in range((n+1)//2):\n    if s[i]!=s[-i-1]:\n        ans+=1\nprint(ans)", "s = input()\nans = 0\nfor i in range(len(s)//2):\n    if s[i] != s[-1-i]:\n        ans += 1\nprint(ans)", "s = input()\nt = 0\nfor i in range(len(s)):\n  if s[i] != s[::-1][i]:\n    t += 1\nprint(t//2)", "S=input()\n\ndef ans147(S:str):\n    def_count=0\n    for i in range(int(len(S)/2)):\n        if S[i]!=S[-(i+1)]:\n            def_count+=1\n    return def_count\nprint(ans147(S))"]