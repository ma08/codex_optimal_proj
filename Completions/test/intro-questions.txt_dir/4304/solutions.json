["a,b = map(int, input().split())\nprint((((b-a)**2)-(a+b))//2)", "a,b=map(int,input().split())\nc=b-a\nd=0\nfor i in range(1,c):\n  d+=i\n\nprint(d-a)", "def main():\n    a, b = list(map(int, input().split()))\n    print((sum(list(range(1, b - a))) - a))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "a,b = map(int,input().split())\nc = b-a\ncnt =0\nfor i in range(c):\n    cnt += (i+1)\nprint(cnt-b)", "a,b = map(int,input().split())\nn = b-a\nsum = 0\nfor i in range(1,n+1):\n    sum += i\nprint(sum-b)", "a, b = map(int, input().split())\nsum = 0\nfor i in range(b-a):\n  sum += i+1\nprint(sum-b)", "a, b = list(map(int, input().split()))\n\nprint(sum(range(1, b - a)) - a)", "a, b = list(map(int, input().split()))\n\ndiff = b - a\n\nx = 1\ny = 3\ni = 3\n\nwhile True:\n  if y - x == diff:\n    break\n  \n  x = y\n  y = y + i\n  i = i + 1\n\nprint(y - b)", "a, b = list(map(int, input().split()))\n\nfor n in range(0, 1000):\n    west = ((n*(n-1))/2)-a\n    east = ((n*(n+1))/2)-b\n\n    if west == east:\n        print((int(east)))\n        return\n", "a, b  = map(int,input().split())\nc = b - a\nans = 0\nfor i in range(c):\n  ans += i\n  \nprint(ans - a)", "a, b = map(int, input().split())\nd = b - a \n\nprint(sum(i for i in range(1, d)) - a)", "a,b = map(int, input().split())\n\nans = (b-a)*(b-a+1)//2 - b\n\nprint(ans)", "def Gauss_sum(n):\n  return n*(n+1)//2\na,b=map(int,input().split())\nfor i in range(999):\n  if Gauss_sum(i+1)-a == Gauss_sum(i+2)-b:\n    print(Gauss_sum(i+1)-a)\n    break", "a,b = list(map(int,input().split()))\nx = b - a \ntower = 0\nfor i in range(1,x+1):\n    tower += i \nprint((tower - b))\n", "a,b=map(int,input().split())\nc=b-a\nans=0\n\nfor i in range(1,c+1):\n  ans+=i\n  \nprint(ans-b)", "A, B = map(int, input().split())\nc = B - A\nprint(c*(c+1)//2 - B)", "a, b = list(map(int, input().split()))\nd = b-a\nprint((d*(d+1)//2 - b))\n", "a, b = map(int, input().split())\nprint(((b - a) * (b - a + 1) // 2) - b)", "a,b = map(int, input().split())\nb2 = sum(range(1,b-a+1))\nprint(b2-b)", "a,b=map(int,input().split())\nprint((1+(b-a))*(b-a)//2-b)", "import sys\n\n\nstdin = sys.stdin\ndef ns(): return stdin.readline().rstrip()\ndef ni(): return int(stdin.readline().rstrip())\ndef nm(): return list(map(int, stdin.readline().split()))\ndef nl(): return list(map(int, stdin.readline().split()))\n\n\ndef main():\n    a, b = nm()\n    print((sum(range(1, b - a)) - a))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "a, b = map(int, input().split())\nm = b - a # [m-1] \u3068 [m]\nt = 0\nfor i in range(m):\n  t += i\nprint(t - a)", "a,b = map(int,input().split())\nc = 0\nfor i in range(1,b- a + 1):\n    c += i\nprint(c - b)", "a, b =map(int,input().split())\ncnt=[i for i in range(b-a)]\nprint(sum(cnt)-a)", "def main():\n    a, b = list(map(int, input().split()))\n    distance = b - a\n    high_a = sum(list(range(1, distance)))\n    print((high_a - a))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "a, b =map(int, input().split())\n\nn = b - a\nhe = n * (n + 1) / 2\nx = he - b\nprint(int(x))", "def answer(a: int, b: int) -> int:\n    return sum(range(1, b - a + 1)) - b\n\n\ndef main():\n    a, b = list(map(int, input().split()))\n    print((answer(a, b)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "a,b=map(int,input().split())\nc=b-a\n\nd=0\n\nfor i in range(c):\n  d+=i\n  \nprint(d-a)", "N,M=map(int,input().split())\nK=M-N\nfrom functools import reduce\nfrom operator import add\nNL=reduce(add,range(1,K))\nans=NL-N\nprint(ans)", "def fallen_snow(a, b):\n    return (b - a) * (b - a + 1) // 2 - b\n\n\ndef main():\n    a, b = map(int, input().split())\n    print(fallen_snow(a, b))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "a, b = map(int, input().split())\n\nc = b-a\nres = sum(i for i in range(c))\nprint(res-a)", "def mapt(fn, *args):\n    return tuple(map(fn, *args))\n\n\ndef Input():\n    return mapt(int, input().split(\" \"))\n\n\ndef main():\n    a, b = Input()\n    towers = [1] * 999\n    for i in range(1, 999):\n        towers[i] = towers[i-1] + i + 1\n    n = b - a\n    ans = 0\n    for i in range(998):\n        if towers[i+1] - towers[i] == n:\n            ans = towers[i] - a\n    print(ans)\n\n\nmain()", "a, b = map(int, input().split())\nri = b - a\nprint(ri * (ri + 1) // 2 - b)", "a,b=list(map(int,input().split()))\nheight=0\nfor i in range(b-a):\n  height+=i+1\nprint(height-b)", "a,b = map(int, input().split())\nn = b - a\nprint(n*(n+1)//2 - b)", "a = list(map(int,input().split()))\n#b = list(map(int,input().split()))\n\nh = 0\np = 1\nli = []\n\nfor i in range(999):\n    h +=p\n    p +=1\n    li.append(h)\n\nfor i in range(len(li)):\n    for k in range(len(li)):\n        if (a[0]-li[i])==(a[1]-li[k]) and k == i+1:\n            print((abs(a[0]-li[i])))\n            \n\n", "a,b = map(int,input().split())\n\nprint((b-a)*(b-a+1)//2-b)", "a, b = map(int, input().split())\nprint((b - a) * (b - a - 1) // 2 - a)", "a, b = map(int, input().split())\nx = b-a\ncnt = 0\nfor i in range(x+1):\n    cnt += i\nprint(cnt - b)", "a, b = map(int,input().split())\n\nn = b - a\nm = n * (n + 1) // 2\nprint(int(m - b))", "x, y = map(int, input().split())\n \ntower = []\nfor i in range(1, 1000):\n    tower.append(i * (i + 1) / 2) \n    \nfor n in range(0,998):\n    if tower[n] - x == tower[n + 1] - y:\n        print(int(tower[n] - x)) ", "n,m = [int(x) for x in input().split()]\n\ndef su(p):\n  c = 0\n  for i in range(p+1):\n    c += i\n  return c\n\nl = m - n\n\nprint(su(l-1) - n)", "a,b = map(int,input().split())\nans = 0\nfor i in range(b-a+1):\n  ans += i\nprint(ans - b)", "lst = input().split()\na = int(lst[0])\nb = int(lst[1])\n\nd = b - a\n\nprint(sum(range(1, d+1)) - b)", "a,b = map(int,input().split())\nc = b-a\nfor i in range(1,999):\n    x= (i+1)*i//2\n    y= (i+2)*(i+1)//2\n    if y-x == c:\n        print(x-a)\n        break", "a,b = map(int,input().split())\nprint(sum(range(b-a))-a)", "def main():\n    a, b = list(map(int, input().split()))\n    diff = b - a\n    high_a = sum(list(range(1, diff)))\n    print((high_a - a))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "m,n = list(map(int,input().split()))\n#lis = list(map(int,input().split()))\nh = sum([i for i in range(1,n-m+1)])\nprint((h-n))\n", "a, b = map(int,input().split())\n\nn = b-a-1\n\nx = (n**2 + n - a*2) // 2\n\nprint(x)", "a,b = map(int,input().split())\nc = b-a\nprint((c+1)*c//2-b)", "ab = list([int(x) for x in input().split(\" \")])\na = ab[0]\nb = ab[1]\n\nn = b - a - 1\n\nx = n * (n + 1) // 2 - a\n\nprint(x)\n", "a, b = list(map(int, input().split()))\nprint((sum(range(b-a))-a))\n", "a, b = list(map(int, input().split()))\n\nN = b - a\nprint(((N * (N + 1) // 2) - b))\n", "a,b = map(int,input().split())\nn = b - a\nreal_b = n * (n + 1) // 2\n\nprint(real_b - b)", "#!/usr/bin/env python3\n\na, b = list(map(int, input().split()))\n\ntmp = 1\nfor i in range(2, 1000):\n    if i == (b-a):\n        # print(tmp, tmp+i)\n        print((tmp-a))\n    tmp += i\n", "a, b = map(int, input().split())\nc = b - a\nn = 0\nfor i in range(1, 999+1):\n    n += i\n    if c == i:\n        ans = n - b\n\nprint(ans)", "a,b=map(int,input().split())\n\nans = 0\nfor i in range(b-a):\n\tans += i+1\n\nprint(ans-b)", "a, b = map(int, input().split())\n\nd = b - a\nd -= 1\nx = 0\nfor i in range(d):\n    x += i + 1\nprint(x - a)", "a,b=map(int,input().split())\nk=b-a-1\nprint(k*(k+1)//2-a)", "a,b = list(map(int,input().split()))\nprint(((b-a)*(b-a+1)//2-b))\n\n\n", "a,b=map(int,input().split())\nA=[]\nc=1\nfor i in range(2,1001):\n    A.append(c)\n    c+=i\nd=b-a\nprint(A[d-2]-a)", "a,b=map(int,input().split())\nd=b-a\nprint(d*(d+1)//2-b)", "a,b = map(int,input().split())\nc = b - a\nc = (1 + c) * c // 2\nprint(c - b)", "a,b=map(int, input().split())\n\nn=b-a\n\nans=n*(n+1)//2-b\n\nprint(ans)", "a, b = list(map(int, input().split()))\n\nd = b - a\n\nprint(d * (d+1) // 2 - b)", "a, b = list(map(int, input().split()))\n\nnumbers = []\nfor i in range(1, 1000):\n    numbers.append(i)\n\nsteel_towers = []\nfor i in range(999):\n    steel_towers.append(sum(numbers[:i + 1]))\n\nprint((steel_towers[b - a - 1] - b))\n", "a, b = list(map(int, input().split()))\nc = b - a - 1\nres = c * (c + 1) // 2 - a\nprint(res)\n", "a, b = [int(i) for i in input().split()]\nb_no_snow = sum(range(1, b - a + 1))\nprint(b_no_snow - b)", "n,m = list(map(int, input().split()))\n\nbt = sum([i for i in range(1,m-n+1)])\nprint(bt-m)", "a,b=map(int,input().split())\nprint((b-a)*(b-a+1)//2-b)", "a,b=map(int,input().split())\nk = b-a\nal = (1+k)*k\nal //= 2\nprint(al-b)", "a, b = map(int, input().split())\n\nx = b - a\ns = 0\nfor i in range(1,x,1):\n  s += i\n\nans = s - a\nprint(ans)", "a, b = map(int, input().split())\n\ndiff = b - a\nsum = 0\nfor i in range(1, diff, 1):\n  sum += i\n\nans = sum - a\nprint(ans)", "a, b = map(int, input().split())\nc = b - a\ntmp = 0\nfor i in range(1, c+1):\n    tmp += i\nprint(tmp - b)", "a,b=map(int,input().split())\nN=b-a\nc=0\n\nfor i in range(N+1):\n  c=c+i\n\nprint(c-b)", "import sys\nlines = [s.rstrip(\"\\n\") for s in sys.stdin.readlines()]\na, b = [int(num) for num in lines.pop(0).split(\" \")]\ndif = b - a\nheight = dif * (dif - 1)  // 2\nprint((height - a))\n", "a,b = list(map(int,input().split()))\nc = b-a\nwa = c*(c+1)//2\nprint((wa-b))\n", "a,b=map(int,input().split())\nprint((b-a)*(b-a+1)//2-b)", "a,b = map (int, input ().split ())\nx = 0\nfor i in range (b-a):\n  x += i\nprint (x-a)", "a,b = map(int,input().split())\nc = b-a\nd = (c)*(c-1)//2\n\nprint(d-a)", "a,b=list(map(int,input().split()))\nx=b-a\nprint((x*(x+1)//2-b))\n", "a, b = list(map(int, input().split()))\nx = 0\nfor i in range(1000):\n    x += i\n    y = x - i\n    if a - y == b - x:\n        print((y - a))\n\n\n", "a, b = map(int, input().split())\ndiff = b - a\ntowers = [0] * diff\nfor i in range(1, diff):\n    towers[i] = towers[i - 1] + i\nprint(towers[-1] - a)", "a,b = list(map(int,input().split()))\ns = b-a\ntall = 0\nfor i in range(1,s):\n    tall +=i\n\nprint((tall - a))\n", "a, b = map(int, input().split())\n\ntower_height = 0\ntower_height_list = []\nfor i in range(1,999+1):\n    tower_height += i\n    tower_height_list.append(tower_height)\n    i += 1\n\nfor i in range(len(tower_height_list)):\n    if tower_height_list[i] - b == tower_height_list[i-1] - a:\n        print(tower_height_list[i] - b)", "a,b = map(int,input().split())\ndif = b-a \ntemp = 0\nfor i in range(dif):\n    temp += i \nans = temp - a\nprint(ans)", "a,b=map(int,input().split())\ntotal=0\nfor i in range(1,b-a+1):\n  total+=i\nprint(total-b)", "a, b = map(int, input().split())\nl = (b - a + 1) * (b - a) // 2\nprint(l - b)", "a, b = map(int, input().split())\n\ndifference = b - a\nanswer = 0\nfor x in range(difference):\n    answer += x\n    \nprint(answer - a)", "from itertools import accumulate\nimport sys\na,b=map(int,input().split())\nn = 500000\nl=[]\nfor i in range(n):\n    l.append(i)\n    tmp = sum(l)\n    if abs(abs(a+tmp) - abs(b+tmp)) == i:\n        print(tmp -b)\n        return", "a, b = list(map(int, input().split()))\n\nn = b - a - 1\nan = (n*(n+1))//2\nprint((an-a))\n", "a,b = map(int,input().split())\nc = abs(b - a)\nx = 0\nfor i in range(1,c+1):\n  x += i\nprint(x-b)", "a,b=map(int,input().split())\nans=0\nfor num in range(1,b-a):\n    ans+=num\nprint(ans-a)", "a, b = map(int, input().split())\nc = 0\nfor i in range(1, b - a + 1):\n  c += i\n  \nprint(c - b)", "a,b = map(int, input().split())\nheight = (b-a)*(b-a+1)//2\nans  = height -b\nprint(ans)", "a,b=input().split()\na=int(a)\nb=int(b)\nprint(int((b-a)*(b-a-1)/2-a))", "a, b = map(int, input().split())\n\nc = b - a\n\nheight_a = 0\nfor i in range(1, c):\n    height_a += i\nans = height_a - a\n\nprint(ans)", "A, B = map(int, input().split())\nd = B-A\ns = sum([x for x in range(1, d)])\nprint(s-A)", "def n_sum(n):\n    myList = [int(i) for i in range(1,n+1)]\n    return sum(myList)\n    \na,b = map(int,input().split())\nprint(n_sum(b-a)-b)"]