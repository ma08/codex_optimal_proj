["def main():\n    p = []\n    sum_cost = 0\n    n = int(input())\n    for i in range(n):\n        p.append(int(input()))\n    max_p = max(p)\n    p[p.index(max_p)] = max_p / 2\n    print((int(sum(p))))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\np = [int(input()) for i in range(n)]\np = sorted(p, reverse=True)\nresult = p[0] // 2\nfor i in range(n-1):\n    result += p[i+1]\n\nprint(result)", "# \u6570\u5024\u306e\u53d6\u5f97\npnum = int(input())\nplist = list()\nfor pcnt in range(0,pnum,1):\n    plist.append(int(input()))\n\n# \u5408\u8a08\u91d1\u984d\u3092\u51fa\u529b\nhalf = max(plist) // 2\npsum = sum(plist) - half\nprint(psum)", "N = int(input())\nP = []\nfor i in range(N):\n    P.append(int(input()))\n\ntotal_price = (max(P) // 2) + (sum(P) - max(P))\n\nprint(total_price)", "# B - Christmas Eve Eve\n\n#  N\nN = int(input())\nmy_list = []\n\nfor i in range(0, N):\n    my_list.append(int(input()))\n\nmy_list = sorted(my_list, reverse=True)\nmy_list[0] = int(my_list[0] / 2)\nanswer = sum(my_list)\n\nprint(answer)\n", "count_gift = int(input())\nprice_list = []\ntotal_payment = 0\n\nfor _ in range(count_gift):\n    price_list.append(int(input()))\n\nprice_list.sort(reverse=True)\ntotal_payment = price_list.pop(0) // 2\n\nfor i in price_list:\n    total_payment += i\n\nprint(total_payment)\n", "N = int(input())\np = [int(input()) for _ in range(N)]\n\nprint((sum(p) - max(p) // 2))\n", "N = int(input())\nP = sorted([int(input()) for x in range(N)])\n\nm = P[N-1]\nP = P[:N-1]\nprint(sum(P) + m // 2)", "# 115b\n\ndef atc_115b(N: int, Pi_input: int) -> int:\n    Pi_input = sorted(Pi_input)\n    max_price = Pi_input.pop()\n    return int(sum(Pi_input) + max_price / 2)\n\nN_input_value = int(input())\nPi_input_value = []\nfor i in range(0, N_input_value):\n    Pi_input_value.append(int(input()))\nprint((atc_115b(N_input_value, Pi_input_value)))\n", "N=int(input())\nP=sorted([int(input()) for _ in range(N)])\n\nprint((sum(P)-P[-1]+P[-1]//2))\n", "a = int(input())\nl = []\nfor i in range(a):\n  l.append(int(input()))\nb = max(l)\nprint(sum(l)-b//2)", "n=int(input())\np=[int(input()) for i in range(n)]\ntotal=0\nfor i in range(n):\n  total+=p[i]\ntotal-=max(p)*0.5\nprint(int(total))", "N = int(input())\na = []\n\nfor _ in range(0, N):\n    a.append(int(input()))\n\na1 = sorted(a, reverse=True)\nprice = a1[0] // 2 + sum(a1) - a1[0]\n\nprint(price)", "# \u3068\u3042\u308b\u4e16\u754c\u3067\u306f\u3001\u4eca\u65e5\u306f\u30af\u30ea\u30b9\u30de\u30b9\u30a4\u30d6\u306e\u524d\u65e5\u3067\u3059\u3002\u9ad8\u7fbd\u6c0f\u306f\u3001\u30c7\u30d1\u30fc\u30c8\u3067N\u500b\u306e\u54c1\u7269\u3092\u8cb7\u304a\u3046\u3068\u3057\u3066\u3044\u307e\u3059\u3002i\u500b\u76ee\u306e\u54c1\u7269(1\u2264i\u2264N)\u306e\u5b9a\u4fa1\u306fpi\u5186\u3067\u3059\u3002\n# \u5f7c\u306f\u5272\u5f15\u5238\u3092\u6301\u3063\u3066\u304a\u308a\u3001N\u500b\u306e\u3046\u3061\u6700\u3082\u5b9a\u4fa1\u304c\u9ad8\u3044\u54c1\u72691\u500b\u3092\u5b9a\u4fa1\u306e\u534a\u984d\u3067\u8cb7\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u6b8b\u308a\u306eN\u22121\u500b\u306e\u54c1\u7269\u306b\u5bfe\u3057\u3066\u306f\u5b9a\u4fa1\u3092\u652f\u6255\u3044\u307e\u3059\u3002\n# \u652f\u6255\u91d1\u984d\u306f\u5408\u8a08\u3067\u3044\u304f\u3089\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u304b\uff1f\n\nN = int(input())\nlist = [int(input()) for i in range(N)]\n\nexpensive = max(list)\ndiscount = expensive // 2\ntotal = sum(list) - expensive + discount\n\nprint(total)", "n = int(input())\np = list(int(input()) for _ in range(n))\np.append(p.pop(p.index(max(p))) // 2)\nprint(sum(p))", "\nn=int(input())\np=[int(input()) for i in range(n)]\n\nk=0\n\nm=max(p)\nl=int(m/2)\n\nfor i in p:\n    k=k+i\n\nprint((k-l))\n\n\n\n\n", "n = int(input())\nans = 0\nml = []\nfor i in range(n):\n  a = int(input())\n  ml.append(a)\nx = max(ml) / 2\n\nans = sum(ml) - x\nprint((int(ans)))\n\n", "n = int(input())\nans = 0\nlis = [int(input()) for _ in range(n)]\nma = lis.pop(lis.index(max(lis)))\nprint(sum(lis) + int(ma*0.5))", "N = int(input())\np = [int(input()) for _ in range(N)]\n \np_sum = 0\np_max = 0\nfor i in range(N):\n  p_sum += p[i]\n  p_max = max(p_max, p[i])\n  \nprint(p_sum - p_max // 2)", "n = int(input())\np = [0]*n\nfor i in range(n):\n  p[i]=int(input())\nanswer = sum(p)\nanswer -= max(p)//2\nprint(answer)", "N = int(input())\na = []\nfor _ in range(0, N):\n    a.append(int(input()))\n\nprice=max(a)//2+sum(a)-max(a)\n\nprint(price)\n\n", "n=int(input())\np=[int(input()) for i in range(n)]\nprint((sum(p)-max(p)//2))\n    \n\n\n\n", "def mapt(fn, *args):\n    return tuple(map(fn, *args))\n\n\ndef Input():\n    return mapt(int, input().split(\" \"))\n\n\ndef main():\n    n = int(input())\n    data = sorted(int(input()) for _ in range(n))\n    x, y = data[:-1], data[-1]\n    print((sum(x)+y//2))\n\n\nmain()\n", "N = int(input())\np = []\nfor _ in range(0, N):\n    p.append(int(input()))\n\nprint(int(sum(p) - max(p) / 2))", "N=int(input())\nl = [input() for _ in range(N)]\n\ndef ans115(N:int,l:list):\n    l=sorted(map(int,l))\n    count=0\n    for i in range(0,N-1):\n        count+=l[i]\n    return(int(count+l[N-1]*0.5))\n\nprint(ans115(N,l))", "n = int(input())\np = [int(input()) for _ in range(n)]\n\nprint(sum(p) - max(p) // 2)", "N = int(input())\np = []\nfor i in range(N):\n  p.append(int(input()))\np.sort()\nans = sum(p) - p[-1]//2\nprint(ans)", "import math\nimport collections\nfrom itertools import product\n\nii = lambda : int(input())\nmi = lambda : map(int,input().split())\nli = lambda : list(map(int,input().split()))\n\nn = ii()\np = [ii() for i in range(n)]\np.sort()\np[-1] //= 2\nprint(sum(p))", "N = int(input())\np = []\nfor i in range(N):\n    p.append(int(input()))\na = max(p)\np.remove(a)\ns = 0\nfor i in p:\n    s += i\nprint((s + a//2))\n\n", "n = int(input())\n# n\u500b\u306e\u5165\u529b\u5024\u3092\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0\np = []\nfor _ in range(0,n):\n    p.append(int(input()))\n# \u30ea\u30b9\u30c8\u306e\u5408\u8a08\u304b\u3089\u30ea\u30b9\u30c8\u4e2d\u306e\u6700\u5927\u5024\u306e1/2\u3092\u5f15\u304f\nprint(int(sum(p) - max(p) / 2))", "total_item = int(input())\nitem_cost = []\nfor i in range(total_item):\n    item_cost.append(int(input()))\nprint(sum(item_cost) - max(item_cost) // 2)", "N = int(input())\npresent = []\nfor i in range(N):\n     price = int(input())\n     present.append(price)\n\npresent.sort(reverse=True)\n# print(present)\nmax_price = present.pop(0)\n\nans = max_price // 2 + sum(present)\nprint(ans)", "N=int(input())\np=[int(input()) for i in range(N)]\n\nans = 0\nfor i in range(N):\n\tans += p[i]\n\nans -=max(p)//2\n\nprint(ans)", "N = int(input())\ndata = list(range(N))\nm = 0\nwhile m < N:\n    data[m] = int(input())\n    m += 1\n\nkei = 0\nmax = 0\nfor i in range(len(data)):\n    kei += data[i]\n    if max < data[i]:\n        max = data[i]\n\nkei = kei - max / 2\nprint((int(kei)))\n", "n = int(input())\nprices = []\nfor i in range(0, n):\n    prices.append(int(input()))\n\npayment = int(max(prices) / 2 + sum(prices) - max(prices))\nprint(payment)", "n = int(input())\np =[int(input()) for i in range(n)]\np.sort()\np[len(p) - 1] = p[len(p) - 1] //2\nprint(sum(p))", "N = int(input())\np = []\n\nfor i in range(N):\n    p.append(int(input()))\n\nmax_p = max(p)\nans = int(max_p/2) + sum(p) - max_p\n\nprint(ans)\n", "N = int(input())\nlst = []\nfor i in range(N):\n    P = int(input())\n    lst.append(P)\nans = sum(lst) - int(max(lst) / 2)\nprint(ans)", "N = int(input())\nP = [int(input()) for _ in range(N)]\n\nsortP = sorted(P)\nans = sum(sortP[:-1]) + sortP[-1]/2\nprint((int(ans)))\n", "N = int(input())\n\nprices = []\n\nfor _ in range(N):\n    prices.append(int(input()))\n\nprices.append(max(prices) // 2)\nprices.remove(max(prices))\n\nprint(sum(prices))", "N = int(input())\np = list(int(input()) for _ in range(N))\n\nprint(sum(p) - max(p) // 2)", "N = int(input())\np = [int(input()) for i in range(N)]\n\na = sum(p)\nprint(int(a - max(p) / 2))", "N = int(input())\nP = sorted(list(int(input()) for _ in range(N)),reverse=True)\nP[0] = int(P[0]*.5)\nprint((sum(P)))\n", "def christmas_eve_eve(price_list: list):\n    price_list.sort()\n    price_list[-1] /= 2\n    return int(sum(price_list))\n\n\ndef __starting_point():\n    prices = []\n    n = int(input())\n    for i in range(n):\n        prices.append(int(input()))\n\n    print((christmas_eve_eve(prices)))\n\n__starting_point()", "n = int(input())\n# n\u500b\u306e\u5165\u529b\u5024\u3092\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0\np = []\nfor _ in range(0,n):\n    p.append(int(input()))\n# \u30ea\u30b9\u30c8\u306e\u5408\u8a08\u304b\u3089\u30ea\u30b9\u30c8\u4e2d\u306e\u6700\u5927\u5024\u306e1/2\u3092\u5f15\u304f\nprint(int(sum(p) - max(p) / 2))", "n = int(input())\np = [int(input()) for i in range(n)]\nprint(max(p)//2 + sum(p)-max(p))", "N = int(input())\nsum = 0\nprice_list = []\n\nfor i in range(N):\n    price_list.append(int(input()))\n\nex_product = max(price_list)\ndis_ex_product = ex_product // 2\n\nfor i in price_list:\n    sum += i\n\nanswer = sum - dis_ex_product\n\nprint(answer)", "N = int(input())\np = [int(input()) for _ in range(N)]\n\nprint(sum(p) - max(p) // 2)", "N = int(input())\n \np_sum = 0\np_max = 0\nfor i in range(N):\n  p = int(input())\n  p_sum += p\n  p_max = max(p_max, p)\n  \nprint(p_sum - p_max // 2)", "# import numpy as np\n# import math\n\n# from scipy.special import perm : perm(n, r, exact=True)\n# from scipy.special import comb : comb(n, r, exact=True)\n\n# import itertools\n# for v in itertools.combinations(L, n):M.append(list(v))\n\n# from numba import njit\n# @njit('f8(i8,i8,i8,i8,f8[:,:,:])', cache=True)\n\n\n\"\"\" Definitions  \"\"\"\n\ndef lcm(a, b):\n    return a*b//math.gcd(a, b)\n\nMOD = 10**9+7\n\n# ============================================================\n\nN = int(input())\n\nans = 0\nP = []\nfor i in range(N):\n    p = int(input())\n    P.append(p)\n    ans += p\nans -= max(P)//2\nprint(ans)\n", "n = int(input())\nL = sorted(list(int(input()) for _ in range(n)))\nans = 0\nfor i in range(n):\n  if i == (n-1):\n    ans += L[i]//2\n  else:\n    ans += L[i]\nprint(ans)", "N = int(input())\np = list(int(input()) for i in range(N))\n\n# \u5408\u8a08\u652f\u6255\u91d1\u984d\u3092 (\u6574\u6570\u3068\u3057\u3066) \u51fa\u529b\u305b\u3088\u3002\n# \u6ce8\u610f\uff1a1\u7248\u9ad8\u3044\u5546\u54c1\u306f\u534a\u984d\n\nprint(sum(p) - max(p) // 2)", "n = int(input())\nmax_price = 0\nprices = []\n\nfor _i in range(n):\n  price = int(input())\n  prices.append(price)\n  if max_price < price:\n    max_price = price\n\nprint(sum(prices) - max_price//2)", "p = [int(input()) for i in range(int(input()))]\nprint(sum(p) - max(p) // 2)", "import re\nimport sys\nimport math\nimport itertools\nimport bisect\nfrom copy import copy\nfrom collections import deque,Counter\nfrom decimal import Decimal\nimport functools\ndef v(): return input()\ndef k(): return int(input())\ndef S(): return input().split()\ndef I(): return list(map(int,input().split()))\ndef X(): return list(input())\ndef L(): return list(input().split())\ndef l(): return list(map(int,input().split()))\ndef lcm(a,b): return a*b//math.gcd(a,b)\nsys.setrecursionlimit(10 ** 6)\nmod = 10**9+7\ncnt = 0\nans = 0\ninf = float(\"inf\")\nal = \"abcdefghijklmnopqrstuvwxyz\"\nAL = al.upper()\n\nn,*a=list(map(int,open(0)));print((sum(a)-max(a)//2))\n", "N = int(input())\nlist = [int(input()) for i in range(N)]\n\nprint(sum(list) - max(list) // 2)", "N = int(input())\np = [int(input()) for i in range(N)]\n\nanswer = sum(p)\n\nprint(int(answer - max(p) * 0.5))", "n = int(input())\nli = []\nfor i in range(n):\n    li.append(int(input()))\n\nli.sort()\nli[-1] = li[-1]//2\n\nprint(sum(li))", "N = int(input())\nm, *P = sorted([int(input()) for x in range(N)], reverse=True)\n\n\"\"\"\nm = P[N-1]\nP = P[:N-1]\n\"\"\"\n\nprint(sum(P) + m // 2)", "import math\nN = int(input())\np = []\n\nfor i in range(N):\n    p.append(int(input()))\n\ntotal_price = max(p) / 2 + sum(p) - max(p)\n\nprint(math.floor(total_price))", "N = int(input())\np = []\n\nfor i in range(N):\n    p.append(int(input()))\nprint(sum(p)-max(p)//2)", "N = int(input())\nlists = []\nfor _ in range(1, N + 1):\n    lists.append(int(input()))\n\nsums = 0\n\nfor i in range(0, N):\n    sums += lists[i]\n\nsums -= int(max(lists) / 2)\n\nprint(sums)", "N = int(input())\np = [int(input()) for i in range(N)]\n\ndescending_p = sorted(p, reverse=True)\n# print(descending_p)\n\n# \u4e00\u756a\u306e\u9ad8\u984d\u306f\u534a\u984d\ndiscount_price = descending_p[0] // 2\n# print(discount_price)\n\n# \u4ed6\u306f\u5b9a\u4fa1\u3067\u8cb7\u3046\nlist_price = sum(descending_p[1:])\n# print(list_price)\n\ntotal_price = discount_price + list_price\nprint(total_price)\n", "n = int(input())\nlist_p = sorted([int(input()) for n in range(0, n)])\nprint(sum(list_p[:n - 1]) + list_p[n - 1] // 2)", "n = int(input())\nl = [int(input()) for i in range(n)]\n\nans = sum(l) - max(l) + max(l)//2\nprint(ans)", "n = int(input())\np = [int(input()) for _ in range(n)]\n\ndef answer(n: int, p: int) -> int:\n    a = sum(p) - max(p) // 2\n    return a\n\nprint(answer(n, p))", "N = int(input())\nP = list(int(input()) for i in range(N))\nexpensive = max(P)\nother = sum(P) - expensive\n\nprint(expensive // 2 + other)", "#!/usr/bin/env python3\n\ndef main():\n    p = [int(input()) for i in range(int(input()))]\n    print((sum(p) - max(p) // 2))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "  \n# 115b\n\ndef atc_115b(N: int, Pi_input: int) -> int:\n    Pi_input = sorted(Pi_input)\n    max_price = Pi_input.pop()\n    return int(sum(Pi_input) + max_price / 2)\n\nN_input_value = int(input())\nPi_input_value = []\nfor i in range(0, N_input_value):\n    Pi_input_value.append(int(input()))\nprint(atc_115b(N_input_value, Pi_input_value))", "N = int(input())\nS_list = [int(input()) for i in range(N)]\np_max = max(S_list)\np_sum = sum(S_list)\nresult = int(p_max / 2) + p_sum - p_max\nprint(result)", "def readinput():\n    n=int(input())\n    p=[]\n    for _ in range(n):\n        p.append(int(input()))\n    return n,p\n\ndef main(n,p):\n    p.sort(reverse=True)\n    #print(p)\n    p[0]=p[0]//2\n    return sum(p)\n\ndef __starting_point():\n    n,p=readinput()\n    ans=main(n,p)\n    print(ans)\n\n__starting_point()", "import math\nN = int(input())\np = []\nfor i in range(N):\n    p.append(int(input()))\n\nresult = max(p)/2 + sum(p) - max(p)\n\nprint(math.floor(result))", "a=int(input())\nb=[int(input()) for i in range(a)]\nb.sort()\nb[len(b)-1]=int(b[len(b)-1]/2)\nprint(sum(b))", "N = int (input ())\nl = []\na = 0\nfor i in range (N):\n  x = int (input ())\n  a += x\n  l.append (x)\nn = max (l)/2\nprint (round (a-n))", "n=int(input())\np=[int(input()) for i in range(n)]\n\np.sort()\n\nprint(int(sum(p)-p[-1]*(1/2)))", "n=int(input())\nl=[]\nfor i in range(n):\n    l.append(int(input()))\ni=l.index(max(l))\nl[i]=l[i]//2\nprint((sum(l)))\n", "n = int(input())\nl = [int(input()) for _ in range(n)]\n\nprint((sum(l) - (max(l) // 2)))\n", "import sys\n\n\ndef input(): return sys.stdin.readline().strip()\ndef I(): return int(input())\ndef LI(): return list(map(int, input().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return input()\ndef LS(): return input().split()\n\n\nINF = float('inf')\n\n\nn = I()\np = IR(n)\np.sort()\nans = sum(p[:-1]) + p[-1]//2\nprint(ans)\n", "N=int(input())\np=[int(input()) for _ in range(N)]\np.sort()\nprint((sum(p[0:N-1])+p[-1]//2))\n", "#ABC115B\nn = int(input())\np = [int(input()) for i in range(n)]\nprint(sum(p)-max(p)//2)", "n = int(input())\np=list(int(input()) for i in range(n))\n\n\nprint(sum(p)-max(p)//2)", "N = int(input())\np = [int(input()) for i in range(N)]\nans = 0\nfor i in p:\n  ans += i\nans -= int(max(p)/2)\nprint(ans)", "# ABC115\n# B Christmas Eve Eve\nN = int(input())\nP = []\nfor n in range(N):\n    P.append(int(input()))\nP = sorted(P,reverse=True)\nprint((sum(P) - P[0]//2))\n", "n = int(input())\np = []\nfor i in range(n):\n    p.append(int(input()))\n\nprint(sum(p) - max(p) // 2)", "N = int(input())\np = [int(input()) for i in range(N)]\np = sorted(p)\nharai=0\n\nharai = sum(p)-(p[-1]//2)\n\nprint(harai)", "n = int(input())\nal = [int(input()) for _ in range(n)]\n\nmm = max(al)\n\nprint(sum(al)-mm//2)", "def answer(n: int, p: []) -> int:\n    p.append(p.pop(p.index(max(p))) // 2)\n    return sum(p)\n\n\ndef main():\n    n = int(input())\n    p = list(int(input()) for _ in range(n))\n    print(answer(n, p))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\np = [int(input()) for i in range(n)]\np.sort()\np[n-1] /= 2;\nprint((int(sum(p))))\n", "N = int(input())\np = []\nfor i in range(N):\n    p.append(int(input()))\n\nExpensive = max(p)\np.remove(Expensive)\nprint(Expensive // 2 + sum(p))", "n=int(input())\n\np=[int(input()) for i in range(n)]\n\nans=max(p)//2+sum(p)-max(p)\n\nprint(ans)", "# import math\n# import statistics\n# import itertools\na=int(input())\n#b,c=int(input()),int(input())\n# c=[]\n# for i in a:\n#     c.append(int(i))\n# e1,e2,e3,e4 = map(int,input().split())\n#f = list(map(int,input().split()))\ng = [int(input()) for _ in range(a)]\n\nma = max(g)\ndel g[g.index(ma)]\nprint(int(sum(g)+ma/2))", "n = int(input())\nlist01 = []\nfor i in range(n):\n    list01.append(int(input()))\nprint(sum(list01) - max(list01) // 2)", "N = int(input())\np = []\nfor i in range(N):\n  p.append(int(input()))\n\np.sort()\ncost = 0\nfor i in range(N-1):\n  cost += p[i]\nprint(cost + p[N-1]//2)", "n=int(input())\nP=[int(input()) for i in range(n)]\nprint(sum(P)-max(P)//2)", "N = int(input())\n\np = []\n\nfor i in range(N):\n    p.append(int(input()))\n    \np.sort()\np.reverse()\n\np[0] //= 2\n\nprint(sum(p))", "n = int(input())\np = [int(input()) for i in range(n)]\n\n# \u4e00\u756a\u9ad8\u3044\u3082\u306e\u306f\u534a\u984d\nprint(sum(p)-max(p)//2)", "n = int(input())\np = []\nfor i in range(n):\n  p.append(int(input()))\nprint(sum(p)-max(p)//2)", "N = int(input())\nP = [int(input()) for _ in range(N)]\n\nprint(sum(P)-max(P)//2)", "N = int(input())\nP = []\nfor i in range(N):\n    P.append(int(input()))\n\nprint((sum(P) - max(P) // 2))\n"]