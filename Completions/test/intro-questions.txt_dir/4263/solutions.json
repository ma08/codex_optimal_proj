["a = input()\n\natcg =[\"A\",\"T\",\"C\",\"G\"]\n\nresult =[]\nres= 0\nfor i in a:\n    if i in atcg:\n        res +=1\n    else:\n        res = 0\n    result.append(res)\n\nprint(max(result))", "def __starting_point():\n    S = input()\n    x = ['A', 'C', 'G', 'T']\n    ans = 0\n    now = 0\n    for s in S:\n        if s in x:\n            now += 1\n        else:\n            now = 0\n        ans = max(now, ans)\n    print(ans)\n__starting_point()", "s = input()\nans = 0\nlength = 0\n\nfor c in s:\n    if c in {'A', 'C', 'G', 'T'}:\n        length += 1\n    else:\n        length = 0\n\n    ans = max(length, ans)\n\nprint(ans)\n", "s = input()\nscore=0\nans=[]\nfor i in s:\n  if i in {\"A\", \"T\", \"C\", \"G\"}:\n    score+=1\n  else:\n    score=0\n  ans.append(score)\nprint(max(ans))", "str_list = list(input())\n\ncount = 0\nmax_count = 0\nfor char in str_list:\n\tif char == 'A' or char == 'C' or char == 'G' or char == 'T':\n\t\tcount += 1\n\telse:\n\t\tif count > max_count:\n\t\t\tmax_count = count\n\t\tcount = 0\nif count > max_count:\n\tmax_count = count\nprint(max_count)", "s = input()\ndata = ['A','T','G','C']\nans = 0\nfor i in range(len(s)):\n    for j in range(i,len(s)):\n        if s[j] not in data:\n            ans = max(ans,j-i)\n            break\n        elif j == len(s) - 1:\n            ans = max(ans,len(s) - i)\nprint(ans)", "def judge(c):\n\tif c=='A' or c=='G' or c == 'C' or c == 'T':\n\t\treturn True\n\telse:\n\t\treturn False\n\ns = input()\n\nans = 0\n\nfor i in range(0,len(s)):\n\tfor j in range(i+1,len(s)+1):\n\t\tok = True\n\t\tfor k in range(i,j):\n\t\t\t#print(i,j,k)\n\t\t\tif not judge(s[k]):\n\t\t\t\tok = False\n\t\tif ok:\n\t\t\tans = max(ans,j-i)\n\nprint(ans)", "import re\ns = input()\nres = re.findall(r'[ATGC]+',s)\nans = 0\n\nfor e in res:\n  ans = max(ans,len(e))\n  \nprint(ans)", "str1 = input()\ntable = list(str1)\ncount = 0\nans = 0\nfor i in range(len(str1)):\n    if table[i] == 'A' or table[i] =='T' or table[i] =='C' or table[i] == 'G':\n        count += 1\n        if ans < count:\n            ans = count\n    else:\n        count = 0\nprint(ans)", "S = input()\n\n# S\u306e\u90e8\u5206\u6587\u5b57\u5217\u306f\u3001\u7a7a\u6587\u5b57\u5217\u4ee5\u5916\u306b N+(N\u22121)+(N\u22122)+...+1 = N(N+1)/2 \u500b\u5b58\u5728\u3059\u308b\n# \u4eca\u56de\u306f N<=10 \u3067\u3042\u308a\u3001\u3053\u306e\u500b\u6570\u306f\u6700\u5927\u3067 10(10+1)/2 = 55 \u306a\u306e\u3067\u9593\u306b\u5408\u3046\n# \u5168\u3066\u8abf\u3079\u3066\u3001\u6700\u3082\u9577\u3044\u300cACGT\u6587\u5b57\u5217\u300d\u306e\u9577\u3055\u3092\u6c42\u3081\u308b\n# \u3053\u3053\u3067\u300cACGT \u6587\u5b57\u5217\u300d\u306f\u3001A,C,G,T\u306e\u3044\u305a\u308c\u304b\u304b\u3089\u6210\u308b\u6587\u5b57\u5217\n\nN = len(S)\nans = 0\nfor i in range(N):\n  for j in range(i, N):\n    T = list(S[i:j+1])\n    M = j-i+1\n\t# ACGT\u6587\u5b57\u5217\u304b\u3069\u3046\u304b\u306e\u5224\u5b9a\n    flag = True\n    for k in range(M):\n      if T[k] != 'A' and T[k] != 'C' and T[k] != 'G' and T[k] != 'T':\n        flag = False\n        break\n    # ACGT\u6587\u5b57\u5217\u306a\u3089\u9577\u3055\u3092\u66f4\u65b0\n    if flag: ans = max(ans, M)\n      \nprint(ans)", "S=input()\ncount=0\ndef rec(n):\n    if n >= len(S): return 0\n    if S[n] in 'ACGT': return rec(n+1) + 1\n    else: return 0\nfor i in range(len(S)):\n    c=rec(i)\n    count = max(count, c)\nprint(count)", "s = input()\n\nres = 0\nc = 0\nfor i in range(len(s)):\n  if s[i] == \"A\" or s[i] == \"G\" or s[i] == \"C\" or s[i] == \"T\":\n    c += 1\n  else:\n    res = max(res,c)\n    c = 0\nres = max(res,c)\nprint(res)", "S=input()\nd=[\"A\",\"T\",\"C\",\"G\"]\nl=len(S)\n \nacgt = []\na = \"\"\n \nfor i in range(l):\n\tif S[i] in d:\n\t\ta = a + S[i]\n\t\tif i == l-1:\n\t\t\tacgt.append(a)\n\telse:\n\t\tacgt.append(a)\n\t\ta = \"\"\n\nmax = 0\nfor a in acgt:\n\tif len(a) > max:\n\t\tmax = len(a)\n \nprint(max)\n", "S = input ()\nS = S.replace('A', 'a')\nS = S.replace('T', 'a')\nS = S.replace('C', 'a')\nS = S.replace('G', 'a')\nans = 0\nx = 0\nfor i in range (len(S)):\n  if S[i] == 'a':\n    x += 1\n  else:\n    if ans < x:\n      ans = x\n    x = 0\nif ans < x:\n  ans = x\nprint (ans)", "S = input()\nS += '*'\nst = 'ACGT'\ni, n = 0, len(S)\nmax_len = 0\nwhile i < n:\n    j = i\n    size = 0\n    while S[j] in st:\n        size += 1\n        j += 1\n    i = j+1\n    max_len = max(max_len, size)\nprint(max_len)", "s=input()\ntmp, ans = 0, 0\nfor i in s:\n  if i in {'A', 'C', 'G', 'T'}: \n    tmp += 1\n  else:\n    tmp = 0\n  ans = max(ans, tmp)\nprint(ans)", "S = str(input())\ncount = 0\ndata = []\n\n\nfor i in range(len(S)):\n    if (S[i] == 'A') or (S[i] == 'T') or (S[i] == 'C') or (S[i] == 'G'):\n        count += 1\n    else:\n        data.append(count)\n        count = 0\n\ndata.append(count)\n\nprint(max(data))", "s = input()\ncount = 0\ntmp = 0\nfor i in range(len(s)):\n    if s[i] == \"A\" or s[i] == \"C\" or s[i] == \"G\" or s[i] == \"T\":\n        tmp += 1\n    else:    \n        tmp = 0\n    count = max(tmp,count)\nprint(count)", "s=input()\nma,cnt=0,0\nfor i in range(len(s)):\n    if s[i] in [\"A\",\"C\",\"G\",\"T\"]:\n        cnt+=1\n        ma=max(ma,cnt)\n    else:\n        cnt=0\nprint(ma)", "S=input()\n\ncnt = 0\nans = 0\nfor x in S:\n  if x in [\"A\",\"C\",\"G\",\"T\"]:\n    cnt += 1\n    ans = max(cnt, ans)\n  else:\n    cnt = 0\nprint(ans)", "# B - ATCoder\nS = list(input())\n\nans = 0\nfor i in range(len(S)):\n    for j in range(i,len(S)+1):\n        tgt = S[i:j]\n        cnt = 0\n        for s in tgt:\n            if s == 'A' or s == 'C' or s == 'G' or s == 'T':\n                cnt += 1\n            else:\n                cnt = 0\n                break\n        ans = max(cnt,ans)\nprint(ans)", "s = input()\nchar = \"ACGT\"\nnow = 0\nans = 0\n\nfor i in s:\n    if i in char:\n        now += 1\n    else:\n        now = 0\n    ans = max(ans, now)\nprint(ans)\n", "s = input()\ncount=0\nmax_count=0\nfor i in range(len(s)):\n    if(s[i]==\"A\"or s[i]==\"T\"or s[i]==\"G\"or s[i]==\"C\"):\n        count+=1\n    else:\n        if(max_count<count):\n            max_count=count\n            count=0\n        else:\n            count=0\nprint((max(max_count,count)))\n", "S = input()\nmax_ = 0\n\nfor i in range(len(S)):\n    for j in range(i,len(S)):\n        if all(\"ACGT\".count(c) == 1 for c in S[i:j+1]):\n            max_ = max(j+1-i,max_)\nprint(max_)\n", "s = input()\ncount = 0\nmax = 0\nfor i in range(0, len(s)):\n    if s[i] == 'A' or s[i] == 'T' or s[i] == 'G' or s[i] == 'C':\n        count += 1\n        if max < count:\n            max = count\n    else: count = 0\nprint(max)", "s=list(input())\n#print(s)\nrmax=0\nr=0\nfor ss in s:\n  if ss in [\"A\",\"C\",\"G\",\"T\"]:\n    r+=1\n  else:\n    rmax=max(rmax,r)\n    r=0\nrmax=max(rmax,r)\nprint(rmax)", "s = input()\n\ncount = 0\nans = 0\n\nfor i in s:\n    if i in {'A', 'T', 'C', 'G'}:\n        count += 1\n    else:\n        count = 0\n    ans = max(ans, count)\n\nprint(ans)", "S=input()\ncount=0\ndef rec(n):\n    if n >= len(S): return 0\n    if S[n] == 'A' or S[n] == 'C' or S[n] == 'G' or S[n] == 'T': return rec(n+1) + 1\n    else: return 0\nfor i in range(len(S)):\n    c=rec(i)\n    count = max(count, c)\nprint(count)", "X = [\"A\",\"C\", \"G\", \"T\"]\nS = input()\nsum = 0\nans = 0\nfor i in S:\n    if i in X:\n        sum += 1\n    else:\n        sum = 0\n    ans = max(sum, ans)\nprint(ans)", "S = input()\ncnt = 0\nmaxv = 0\nfor i in range(len(S)):\n    if S[i] == 'A' or S[i] == 'C' or S[i] == 'G' or S[i] == 'T':\n        cnt += 1\n        if cnt > maxv:\n            maxv = cnt\n    else:\n        cnt = 0\nprint(maxv)\n", "s = input()\nls = len(s)\n\ncnt = 0\nma = 0\nfor i in range(ls):\n    if(s[i] in 'ACGT'):\n        cnt += 1\n    else:\n        ma=max(ma,cnt)\n        cnt = 0\n\nma = max(ma,cnt)\nprint(ma)", "S = input()\nl = len(S)\nanswer = 0\nfor i in range(l):\n  for j in reversed(range(i+1,l+1)):\n    T = S[i:j]\n    T_1 = T.replace('A', '').replace('C', '').replace('G', '').replace('T', '')\n    if len(T_1) == 0:\n      pri = j-i\n      if pri > answer:\n        answer = pri\nprint(answer)", "S = input()\n\nacgt = ['A', 'C', 'G', 'T']\nans, cnt = 0, 0\nfor i in range(len(S)):\n    if S[i] in acgt:\n        cnt += 1\n    else:\n        ans = max(ans, cnt)\n        cnt = 0\nprint(max(ans, cnt))", "S = input()\nN = len(S)\nans = 0\nfor i in range(N):\n    for j in range(i, N):\n        if all('ACGT'.count(c) == 1 for c in S[i : j + 1]):\n            ans = max(ans, j - i + 1)\nprint(ans)\n", "S = input()\n\nans = 0\nN = len(S)\nfor i in range(N):\n  for j in range(i+1, N+1):\n    T = list(S[i:j])\n    M = len(T)\n\n    flag = True\n    for k in range(M):\n      if T[k] != 'A' and T[k] != 'C' and T[k] != 'G' and T[k] != 'T':\n        flag = False\n        break\n    if flag: ans = max(ans, M)\n      \nprint(ans)", "S = input()\n\nlst = ['A', 'C', 'G',  'T']\ncount = 0\ntop = 0\n\nfor i in S:\n    if i in lst:\n        count += 1\n    else:\n        if count > top:\n            top = count\n        count = 0\nif count > top:\n    top = count\nprint(top)", "import itertools\nS = input()\nans = 0\nfor i,j in itertools.combinations(list(range(len(S)+1)), 2):\n    if all('ACTG'.count(c)==1 for c in S[i:j]):\n        ans = max(ans, len(S[i:j]))\nprint(ans)\n", "remove = ['A', 'C', 'G', 'T']\ns = input()\ncnt = [0]*10\nj = 0\nfor i in range(len(s)):\n    if s[i] in remove:\n        cnt[j] += 1\n    else:\n        j += 1   \n\nprint(max(cnt))", "s = input()\nans = 0\nzantei = 0\nfor i in range(len(s)):\n  if s[i] == \"A\" or s[i] == \"C\" or s[i] == \"G\" or s[i] == \"T\":\n    zantei += 1\n  else:\n    ans = max(ans,zantei)\n    zantei = 0\nans = max(ans,zantei)\nprint(ans)", "s = input() + 'I'\nList = []\n\nfor i in range(len(s)):\n    count = 0\n    for j in range(len(s) - i):\n        if s[i] == 'A' or s[i] == 'T' or s[i] == 'G' or s[i] == 'C':\n            count += 1\n            i += 1\n        else:\n            List.append(count)\n            break\n\nprint(max(List))", "S = input()\nT = []\n\nfor i in range(len(S)):\n    s = S[i]\n    if (s == \"A\")or(s == \"T\")or(s == \"C\")or(s == \"G\"):\n        T.append(0)\n    else:\n        T.append(1)\n\npoint = [0]*(len(S)+1)\n\nfor i in range(len(S)):\n    if T[i] == 0:\n        point[i+1]=point[i]+1\n    else:\n        point[i+1]=0\n\nprint((max(point)))\n", "s = list(input())\nn = len(s)\nans = 0\n\nfor i in range(n):\n    if s[i] in ['A', 'G', 'C', 'T']:\n        s[i] = 'a'\n\nfor i in range(n):\n    for j in range(i, n):\n        flag = True\n        for k in range(i, j+1):\n            if s[k] != 'a':\n                flag = False\n        if flag:\n            ans = max([ans, j-i+1])\n\nprint(ans)", "S = str(input())\nN = len(S)\n\ncount = 0 \n\nsaidai = 0\n\nvernon = ['A', 'G', 'T', 'C']\n\nfor i in range (0, N):\n\tif vernon.count(S[i]) > 0:\n\t\tcount+=1\n\telse:\n\t\tsaidai = max(saidai, count)\n\t\tcount = 0\n        \nsaidai = max(saidai, count)\nprint(saidai)", "s = input()\nt = [\"A\", \"C\", \"G\", \"T\"]\ncnt = 0\nans = 0\nfor i in range(len(s)):\n    if s[i] in t:\n        cnt += 1\n        if cnt > ans:\n            ans = cnt\n    else:\n        cnt = 0\nprint(ans)\n", "s = list(input())\n\nc = 0\nans = [0]\n\nfor i in s:\n    if i == 'A' or i == 'C' or i == 'G' or i == 'T':\n        c += 1\n    else:\n        c = 0\n    ans.append(c)\n\nprint(max(ans))", "s=input()\nans=0\nfor i in range(len(s)):\n  for j in range(i,len(s)):\n    if all(\"ACGT\".count(c)==1 for c in s[i:j+1]):\n      ans=max(ans,j-i+1)\nprint(ans)", "# ACGT\nS =input()\nct = 0\nctM = [0]\nfor i in range(len(S)):\n    if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n        ct +=1\n        if i == len(S)-1:\n            ctM.append(ct)\n    else:\n        ctM.append(ct)\n        ct = 0\nprint((max(ctM)))\n", "s = input()\nscore=0\nans=0\nfor i in s:\n  if i in {\"A\", \"T\", \"C\", \"G\"}:\n    score+=1\n  else:\n    score=0\n  ans=max(score,ans)\nprint(ans)", "\ns = input()\nans = 0 \ntmp = 0 \nfor i in s :\n    if i == \"A\" or i == \"T\" or i == \"G\" or i == \"C\" :\n        tmp+=1\n    else :\n        tmp = 0\n    ans = max(tmp,ans)\nprint(ans)", "S = input()\n\nres = 0\ncnt = 0\nfor i in range(len(S)):\n    if S[i] in ['A','T','G','C']:\n        cnt += 1\n    else:\n        res = max(res, cnt)\n        cnt = 0\n\nres = max(res, cnt)\n\nprint(res)", "s=input()\ntmp, ans = 0, 0\nfor i in range(len(s)):\n  for j in range(i, len(s)):\n    if all('AGCT'.count(h) == 1 for h in s[i:j +1]):\n      ans = max(ans, j -i +1)\nprint(ans)", "s = input()\n\nans = []\n\nx = 0\n\nfor i in range(len(s)):\n    if s[i] == \"A\" or s[i] == \"C\" or s[i] == \"G\" or s[i] == \"T\":\n        x += 1\n    else:\n        ans.append(x)\n        x = 0\n\nans.append(x)\n\nprint((max(ans)))\n", "s = list(input())\nn = len(s)\nres = 0\nfor i in range(n):\n    for j in range(i,n):\n        temp = s[i:j+1]\n        if all(i in 'ATGC' for i in temp):\n            res = max(res,len(temp))\nprint(res)", "s = input()\n\nacgt = ['A','C','G','T']\ni = 0\nmax_ans = 0\ncurr_ans = 0\n\nwhile(i < len(s)):\n    if s[i] in acgt:\n        curr_ans += 1\n    else:\n        max_ans = max(max_ans, curr_ans)\n        curr_ans = 0\n    i += 1\nmax_ans = max(max_ans, curr_ans)\nprint(max_ans)", "s = input()\ncnt = 0\nmax = 0\nfor i in range(0, len(s)):\n    if s[i] in [\"A\", \"C\", \"G\", \"T\"]:\n        cnt += 1\n    else:\n        if max < cnt:\n            max = cnt\n        cnt = 0\nif max < cnt:\n    max = cnt\ncnt = 0\nprint(max)\n", "s = list(input())\nc = 0\nans = [0]\n\nfor i in s:\n  if i == 'A' or i == 'C' or i == 'G' or i == 'T':\n    c += 1\n  else:\n    c = 0\n  ans.append(c)\n\nprint(max(ans))", "S = input()\nL = len(S)\nans = 0\nfor i in range(L):\n    c = 0\n    for s in S[i:]:\n        if s in ['A', 'C', 'G', 'T']:\n            c += 1\n        else:\n            break\n    ans = max(ans, c)\n\nprint(ans)", "text = input()\n\ncount = 0\nmax_count = 0\nfor i in range(len(text)):\n    if text[i] == \"A\" or text[i] == \"C\" or text[i] == \"G\" or text[i] == \"T\":\n        count += 1;\n    else:\n        if max_count < count:\n            max_count = count\n            count = 0\n        else:\n            count = 0\n            \nprint(max(max_count,count))", "S = input()\n\nN = len(S)\nans = 0\n# S\u306e\u90e8\u5206\u6587\u5b57\u5217\u306f\u3001\u7a7a\u6587\u5b57\u5217\u4ee5\u5916\u306b N+(N\u22121)+(N\u22122)+...+1 = N(N+1)/2 \u500b\u5b58\u5728\u3059\u308b\n# \u4eca\u56de\u306f N<=10 \u3067\u3042\u308a\u3001\u3053\u306e\u500b\u6570\u306f\u6700\u5927\u3067 10(10+1)/2 = 55 \u306a\u306e\u3067\u9593\u306b\u5408\u3046\n# \u5168\u3066\u8abf\u3079\u3066\u3001\u6700\u3082\u9577\u3044\u300cACGT\u6587\u5b57\u5217\u300d\u306e\u9577\u3055\u3092\u6c42\u3081\u308b\nfor i in range(N):\n  for j in range(i, N):\n    if all('ACGT'.count(c) == 1 for c in S[i:j+1]): ans = max(ans, j-i+1)\n      \nprint(ans)", "s = list(input()) + [\"X\"]\n\nl = [\"A\",\"G\",\"C\",\"T\"]\n\nfor i in range(len(s)):\n    if s[i] in l:\n        s[i] = 1\n    else:\n        s[i] = 0\n\ncnt = 0\nli = []\nfor i in range(len(s)):\n    if s[i] == 1:\n        cnt +=1\n    else:\n        li.append(cnt)\n        cnt = 0\n\nprint(max(li))", "S = input()\n\ns_len = len(S)\nACGT = {\"A\", \"C\", \"G\", \"T\"}\nmax_len = 0\nmax_str = ''\nstr = ''\n\nfor i in range(s_len):\n  str = ''\n  for j in range(i, s_len):\n    if S[j] in ACGT:\n      str += S[j]\n      if len(str) >= max_len:\n        max_len = len(str)\n        max_str = str\n    else:\n      str = ''\n\n\nprint(max_len)", "\ntarget_a = ['A', 'C', 'G', 'T']\n\ndef main():\n    S = str(input())\n\n    max_cnt = 0\n    cnt = 0\n    for s in S:\n        if s in target_a:\n            cnt += 1\n        else:\n            if cnt > max_cnt:\n                max_cnt = cnt\n            cnt = 0\n    if cnt > max_cnt:\n        max_cnt = cnt\n    print(max_cnt)\n\ndef __starting_point():\n    main()\n__starting_point()", "s = input()\nmaxlen = 0\nfor i in range(len(s)):\n    for j in range(1,len(s)+1):\n        t = s[i:j]\n        if all([c in 'ACGT' for c in s[i:j]]):\n            maxlen = max(maxlen, j-i)\nprint(maxlen)", "a = input()\n \natcg =[\"A\",\"T\",\"C\",\"G\"]\n \nresult =[]\nres= 0\nfor i in a:\n    if i in atcg:\n        res +=1\n    else:\n        res = 0\n    result.append(res)\n \nprint(max(result))", "moji = str(input())\nans = 0\ncans = 0\ncorrect = [\"A\",\"C\",\"G\",\"T\"]\nfor i in range(len(moji)):\n    if moji[i] in correct:\n        cans += 1\n        if cans > ans:\n            ans = cans\n    else:\n        if cans > ans:\n            ans = cans\n        cans = 0\nprint(ans)\n", "S = input()\ncnt = 0\nres = 0\nfor s in S:\n    if s in \"AGCT\":\n       cnt += 1\n       res = max(res,cnt)\n    else:\n        cnt = 0\nprint(res)\n", "s=input()\nans=0\ntmp=0\nfor i in range(len(s)):\n    for j in range(i,len(s)):\n        if s[j]==\"A\" or s[j]==\"C\" or s[j]==\"G\" or s[j]==\"T\":\n            tmp+=1\n        else:\n            ans=max(ans,tmp)\n            tmp=0\n            break\n    else:\n        ans=max(ans,tmp)\n        tmp=0\nprint(ans)", "words = ['A','G','C','T']\ns = input()\nans = 0\ncnt = 0\nfor i in range(len(s)):\n    if s[i] in words:\n        cnt += 1\n    else:\n        ans = max(ans,cnt)\n        cnt = 0\nans = max(ans,cnt)\nprint(ans)", "S=str(input())\nle=len(S)\ncnt=0\nAns=0\n\nfor i in range(le):\n  if S[i] in 'A' or S[i] in 'C' or \\\n  S[i] in 'G' or S[i] in 'T':\n    cnt+=1\n    if Ans<cnt:\n      Ans=cnt\n  else:\n    cnt=0\n\nprint(Ans)\n", "import sys\ninput = sys.stdin.readline\n\ndef slove():\n    S = input()\n    n = len(S)\n    l = 0\n    ans = 0\n    for i in range(n):\n        if S[i]==\"A\" or S[i]==\"C\" or S[i]==\"G\" or S[i]==\"T\":\n            l += 1\n        else:\n            ans = max(ans,l)\n            l = 0\n    ans = max(ans,l)\n    print(ans)\n\ndef __starting_point():\n    slove()\n__starting_point()", "import re\nS = input()\nr = re.findall('[ACTG]+', S)\nprint(max([len(_) for _ in r], default=0))", "S = input()\nlength = 0\nfor i in range(0, len(S)+1):\n    for j in range(i, len(S)+1):\n        T = S[i:j]\n        if T.replace('A', '').replace('C', '').replace('G', '').replace('T', '') == '':\n            if len(T) > length:\n                length = len(T)\nprint(length)", "n=str(input())\n\npattern = 'ACGT'\nr, tmp = 0, 0\nc = False\nfor s in n:\n\tif s in pattern:\n\t\ttmp += 1\n\telse:\n\t\tif r < tmp:\n\t\t\tr = tmp\n\t\ttmp = 0\nif r < tmp:\n  r = tmp\nprint(r)", "S=input()\nl=len(S)\nACGT=[\"A\",\"G\",\"C\",\"T\"]\ncount=0\nans=[]\nfor i in range(l):\n  if S[i] in ACGT:\n    count+=1\n    ans.append(count)\n  else:\n    ans.append(count)\n    count=0\nprint(max(ans))", "X = str(input())\nN = len(X)\nans = 0\ncount = 0\nfor i in range(N):\n    if X[i] == \"A\" or X[i] == \"C\" or X[i] == \"G\" or X[i] == \"T\":\n        count += 1\n    else:\n        ans = max(ans, count)\n        count = 0\nelse:\n    ans = max(ans, count)\nprint(ans)", "s = input()\nS = \"\"\nfor i in s:\n    if i in \"ACGT\":S+=\"1\"\n    else:S+=\"0\"\nprint(max(list(map(len,S.split(\"0\")))))", "s = input()\nl = len(s)\nmax_l = 0\ncount = 0\nlst = ['A', 'C', 'G', 'T']\nfor i in range(l):\n  if s[i] in lst:\n    count += 1\n    if count > max_l:\n      max_l = count\n  else:\n    count = 0\nprint(max_l)\n", "acgt=[\"A\",\"C\",\"G\",\"T\"]\nS=input()\n\ncount = 0\nmax = 0\nfor i in S:\n\tif i in acgt:\n\t\tcount += 1\n\telse:\n\t\tif count > max:\n\t\t\tmax = count\n\t\t\tcount = 0\nif count > max:\n\tmax = count\n\tcount = 0\n\nprint(max)\n", "S=input()\nagct='AGCT'\nans=0\ns=0\nfor i in range(len(S)):\n  cnt=0\n  if S[i] in agct:\n    j=0\n    while i+j<len(S) and S[i+j] in agct:\n      cnt+=1\n      j+=1\n    ans=max(ans,cnt)\nprint(ans)", "S = str(input())\nans = 0\n\nfor i in range(len(S)):\n    for j in range(len(S)):\n        cnt = 0\n        flag = True\n        for k in S[i:j+1]:\n            if k == 'A' or k == 'C' or k == 'G' or k == 'T':\n                cnt += 1\n            else:\n                flag = False\n        if flag:\n            ans = max(ans,cnt)\n\nprint(ans)", "s = input()\na, l = 0, 0\nfor i in s:\n  if i in \"ATGC\":\n    l += 1\n  else:\n    l = 0\n  a = max(a, l)\nprint(a)", "s = input()\n\nm = [\"A\",\"C\",\"G\",\"T\"]\nans = 0\nt = 0\nfor i in range(len(s)):\n  if s[i] in m: t += 1\n  else:\n    ans = max(ans, t)\n    t = 0\nprint(max(ans, t))", "S=input()\nACGT=[\"A\",\"C\",\"G\",\"T\"]\nans=0\ncnt=0\n\nfor i in range(len(S)):\n\tif S[i] in ACGT:\n\t\tcnt+=1\n\telse:\n\t\tans=max(ans,cnt)\n\t\tcnt=0\nans=max(ans,cnt)\n\nprint(ans)", "s = input()\nl = len(s)\ncnt = 0\nans = 0\n\nfor i in range(l):\n    if s[i] == 'A' or s[i] == 'C' or s[i] == 'G' or s[i] == 'T':\n        cnt += 1\n        if ans < cnt:\n            ans = cnt\n    else:\n        cnt = 0\n\nprint(ans)", "S = input()\n \nN = len(S)\nans = 0\nfor i in range(N):\n  for j in range(i, N):\n    T = list(S[i:j+1])\n    M = len(T)\n \n    flag = True\n    for k in range(M):\n      if T[k] != 'A' and T[k] != 'C' and T[k] != 'G' and T[k] != 'T':\n        flag = False\n        break\n    if flag: ans = max(ans, M)\n      \nprint(ans)\n", "S = input()\n\nans = 0\ncnt = 0\nfor i in S:\n    if i in ['A', 'C', 'G', 'T']:\n        cnt += 1\n        ans = max(ans, cnt)\n    else:\n        cnt = 0\n\nprint(ans)", "S = input()\n \nN = len(S)\nans = 0\n\n# S\u306e\u90e8\u5206\u6587\u5b57\u5217\u306f\u3001\u7a7a\u6587\u5b57\u5217\u4ee5\u5916\u306b N+(N\u22121)+(N\u22122)+...+1 = N(N+1)/2 \u500b\u5b58\u5728\u3059\u308b\n# \u4eca\u56de\u306f N<=10 \u3067\u3042\u308a\u3001\u3053\u306e\u500b\u6570\u306f\u6700\u5927\u3067 10(10+1)/2 = 55 \u306a\u306e\u3067\u9593\u306b\u5408\u3046\n# \u5168\u3066\u8abf\u3079\u3066\u3001\u6700\u3082\u9577\u3044\u300cACGT\u6587\u5b57\u5217\u300d\u306e\u9577\u3055\u3092\u6c42\u3081\u308b\n# \u3053\u3053\u3067\u300cACGT \u6587\u5b57\u5217\u300d\u306f\u3001A,C,G,T\u306e\u3044\u305a\u308c\u304b\u304b\u3089\u6210\u308b\u6587\u5b57\u5217\n\n'''\ns = 'aAaAAbAccdd' # 'A'\u3068\u3044\u3046\u6587\u5b57\u304c\u4f55\u500b\u3042\u308b\u304b\u8abf\u3079\u308b\ns.count('A') # 4\n'''\n\nfor i in range(N):\n  for j in range(i, N):\n    # 'ACGT'.count(c) == 1 -> \u6587\u5b57c\u304cA,C,G,T\u306e\u3044\u305a\u308c\u304b\u3067\u3042\u308b\u3068\u304d:True / otherwise: False\n    # all() -> \u5f15\u6570\u306b\u6307\u5b9a\u3057\u305fList\u306e\u8981\u7d20\u304c\u3059\u3079\u3066True => True / otherwise: False\n    if all(['ACGT'.count(c) == 1 for c in S[i:j+1]]): ans = max(ans, j-i+1)\n      \nprint(ans)", "s = input()\n\nmx = 0\ncnt = 0\n\nfor (i, char) in enumerate(s):\n    if char in \"ACGT\":\n        cnt += 1\n    else:\n        mx = max(mx, cnt)\n        cnt = 0\n\nmx = max(cnt, mx)\n\nprint(mx)\n", "S = input()\n\nans = 0\ncnt = 0\nfor i in list(S):\n    if i in (\"A\", \"T\", \"C\", \"G\"):\n        cnt += 1\n        ans = max(ans, cnt)\n    else:\n        cnt = 0\n\nprint(ans)", "L = ['A', 'C', 'G', 'T']\n\ns = input()\ncnt = [0]*len(s)\n\nfor i in range(len(s)):\n    for j in range(i, len(s)):\n        if s[j] in L:\n            cnt[i] += 1\n        else:\n            break\nprint((max(cnt)))\n", "s=input()\n\ntmp=0\nlength=[]\n\nfor i in range(len(s)):\n    if s[i]==\"A\" or s[i]==\"C\" or s[i]==\"G\" or s[i]==\"T\":\n        tmp+=1\n        if i==len(s)-1:\n            length.append(tmp)\n    else:\n        length.append(tmp)\n        tmp=0\nprint(max(length))", "# -*- coding:utf-8 -*-\nimport re\nS = input()\nS_sp = re.split(\"[^ACGT]\",S)\nans = 0\nfor moji in S_sp:\n    if len(moji) > ans:\n        ans = len(moji) \n\nprint(ans)\n", "S=input()\nS=list(S)\nfor i in range(len(S)):\n  s=S[i]\n  if (s==\"A\")|(s==\"T\")|(s==\"C\")|(s==\"G\"):\n    S[i]=0\n  else:\n    S[i]=1\n\n\npoint=[0]*(len(S)+1)\nfor i in range(0,len(S)):\n  if S[i]==0:\n    point[i+1]=point[i]+1\n  else:\n    point[i+1]=0\n\nprint(max(point))", "S = str(input())\n\nN = len(S)\ncnt = [0 for i in range(N)]\nfor i in range(N):\n  if S[i]=='A' or S[i]=='C' or S[i]=='G' or S[i]=='T':\n    cnt[i] += 1\n    for j in range(i+1, N):\n      if S[j]=='A' or S[j]=='C' or S[j]=='G' or S[j]=='T':\n        cnt[i] += 1\n      else:\n        break\nprint(max(cnt))", "import re\n\n\ndef answer(s: str) -> int:\n    pattern = r'[ACTG]+'\n    result = re.findall(pattern, s)\n    if not result:\n        return 0\n      \n    return len(max(result, key=len))\n\n\ndef main():\n    s = input()\n    print((answer(s)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "S = input()\n\nans=0\nfor i in range(len(S)):\n    cnt=0\n    for j in range(i,len(S)):\n        if S[j] in [\"A\",\"C\",\"G\",\"T\"]:\n            cnt+=1\n        else:\n            break\n    ans = max(ans,cnt)\nprint(ans)\n", "S = list(input())\ntemp = 0\nans = 0\nletter = [\"A\", \"T\", \"C\", \"G\"]\nfor i, val in enumerate(S):\n  if val in letter:\n    temp += 1\n  else:\n    if ans < temp:\n      ans = temp\n    temp = 0\nif ans < temp:\n  ans = temp\nprint(ans)\n      \n\n", "S=input()\nans=0\nacgt=['A','C','G','T']\nfor i in range(len(S)):\n    if S[i] in acgt:\n        cnt=0\n        j=i\n        while j <len(S) and S[j] in acgt :\n            cnt+=1\n            j+=1\n        ans=max(ans,cnt)\n\nprint(ans)\n", "items = ['A', 'C', 'G', 'T']\n \ndef max(a, b):\n    return a if a > b else b\nx= 0\ny = 0\nfor c in list(input()):\n    if c in items:\n \n        y += 1\n        x = max(x, y)\n    else:\n        y = 0\nprint(x)", "s = input()\na = \"\"\nb = 0\nfor i in s:\n  if i in \"ACGT\":\n    a += i\n    if b < len(a):\n      b = len(a)\n  else:\n    a = \"\"\nprint(b)"]