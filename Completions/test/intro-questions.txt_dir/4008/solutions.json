["def main():\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    colors = [[] for _ in range(k)]\n    seen = [0 for _ in range(5003)]\n    ans = [-1 for _ in range(n)]\n    for i, x in enumerate(a):\n        if seen[x] >= k:\n            print('NO')\n            return\n        ans[i] = seen[x]\n        colors[ans[i]].append(i)\n        seen[x] += 1\n\n    p = 0\n    for i in range(k):\n        if not colors[i]:\n            while p < i and len(colors[p]) == 1:\n                p += 1\n            if p == i:\n                print('NO')\n                return\n\n            colors[i].append(colors[p].pop())\n            ans[colors[i][-1]] = i\n\n    print('YES')\n    print(' '.join(str(x + 1) for x in ans))\n\nmain()\n", "n, k = list(map(int, input().split()))\nmass = list(map(int, input().split()))\nfol = 0\nfor t in set(mass):\n    if mass.count(t) > k:\n        fol = 1\nfor t in range(n):\n    mass[t] = [mass[t], t]\npsi = [0]*n\nmass.sort()\nif len(mass) < k or fol:\n    print('NO')\nelse:\n    print('YES')\n    for t in range(n):\n        psi[mass[t][1]] = t%k+1\n    print(' '.join(list(map(str, psi))))\n", "n, k = list(map(int, input().split()))\nd = {}\na = list(map(int, input().split()))\nfor i in a:\n    if i in d:\n        d[i] += 1\n    else:\n        d[i] = 1\nif max(d.values()) > k:\n    print('NO')\nelse:\n    print('YES')\n    res = []\n    x = 1\n    s = {i: set() for i in set(a)}\n    for i in range(k):\n        res.append(x)\n        s[a[i]].add(x)\n        x += 1\n    for i in range(k, n):\n        z = 1\n        while z in s[a[i]]:\n            z += 1\n        s[a[i]].add(z)\n        res.append(z)\n    print(*res)\n", "n, k = list(map(int, input().split()))\n\na = list(map(int, input().split()))\n\nb = [[False for j in range(k + 1)] for i in range(5010)]\n\nans = [0 for _ in range(n)]\n\nfor i in range(k):\n\tb[a[i]][i + 1] = True\n\tans[i] = i + 1\n\nfor i in range(k, n):\n\tfor j in range(1, k + 1):\n\t\tif not b[a[i]][j]:\n\t\t\tb[a[i]][j] = True\n\t\t\tans[i] = j\n\t\t\tbreak\n\nif min(ans) == 0:\n\tprint('NO')\nelse:\n\tprint('YES')\n\tprint(*ans)\n", "def main():\n    arr=input().split()\n    n=int(arr[0])\n    k=int(arr[1])\n    arr=input().split()\n    store=[[] for x in range(k)]\n    colors=[]\n    if k>n:\n        print(\"NO\")\n    elif k==n:\n        print(\"YES\")\n        string=\"\"\n        for x in range(k):\n            string+=str(x+1)+\" \"\n        print(string)\n        \n    else:\n        for x in range(k):\n            store[x].append(int(arr[x]))\n            colors.append(x+1)\n        bo_end=False\n        for x in range(k,n):\n            test=int(arr[x])\n            bo=True\n            for y in range(k):\n                if not test in store[y]:\n                    store[y].append(test)\n                    colors.append(y+1)\n                    bo=False\n                    break\n            if bo:\n                break\n            if x==n-1:\n                bo_end=True\n        if bo_end:\n            print(\"YES\")\n            string=\"\"\n            for x in colors:\n                string+=str(x)+\" \"\n            print(string)\n        else:\n            print(\"NO\")\nmain()\n", "n,k=list(map(int,input().split()))\narr=list(map(int,input().split()))\ndict1={}\nfor i in range(n):\n    try:\n        dict1[arr[i]].append(i)\n    except:\n        KeyError\n        dict1[arr[i]]=[i]\nflag=0\ncolors={}\nfor i in list(dict1.keys()):\n    colors[i]=[0]*k\n    if(len(dict1[i])>k):\n        flag=1\n        break\nif(flag==1):\n    print('NO')\nelse:\n    ansarr=[0]*n\n    for i in range(k):\n        ansarr[i]=i+1\n        colors[arr[i]][i]=1\n    val=0\n    for i in list(dict1.keys()):\n        for j in dict1[i]:\n            if(ansarr[j]==0):\n                for l in range(k):\n                    if(colors[i][l]==0):\n                        ansarr[j]=l+1\n                        colors[i][l]=1\n                        break\n    print('YES')\n    print(*ansarr)\n", "#list(map(int,input().split()))\n#map(int,input().split())\n#for test in range(t):\n#int(input())\nn,k=map(int,input().split())\na=list(map(int,input().split()))\ntup=[[0,0] for i in range(n)]\nfor i in range(n):\n    tup[i]=[a[i],i]\ntup.sort()\ndp=[0]*n\ndp[tup[0][1]]=1\ncp=1\nflag=0\nct=1\nfor i in range(1,n):\n    if tup[i][0]==tup[i-1][0]:\n        ct=ct%k+1\n        cp+=1\n        if cp>k:\n            print('NO')\n            flag=1\n            break\n        dp[tup[i][1]]=ct\n    else:\n        ct=ct%k+1\n        cp=1\n        dp[tup[i][1]] = ct\nif flag==0:\n    print('YES')\n    for i in range(n):\n        print(dp[i],end=\" \")\n", "from collections import defaultdict\n\ndef __starting_point():\n\n    n, k = list(map(int, input().split()))\n\n    list_ = list(map(int, input().split()))\n\n    if k > n:\n        print(\"NO\")\n        return\n\n    result = []\n    colors = set(range(1, k+1))\n\n    total_used = set()\n    used = defaultdict(set)\n\n    for i in list_:\n        free_colors = colors - used[i]\n        priority_colors = free_colors - total_used\n        if not free_colors:\n            print(\"NO\")\n            return\n        else:\n            if priority_colors:\n                color = priority_colors.pop()\n            else:\n                color = free_colors.pop()\n\n            total_used.add(color)\n            used[i].add(color)\n            result.append(color)\n\n    print(\"YES\")\n    for el in result:\n        print(el, end=' ')\n\n__starting_point()", "n, k = list(map(int, input().split()))\na = [int(e) for e in input().split()]\nb = [1] * 5555\ncnt = [0] * 5555\nc = []\nfor i in a:\n    if b[i] > k:\n        print('NO')\n        return\n    c.append(b[i])\n    cnt[b[i]] += 1\n    b[i] += 1\nfor i in range(1, k + 1):\n    if cnt[i] > 0:\n        continue\n    for k, j in enumerate(c):\n        if cnt[j] > 1:\n            c[k] = i\n            cnt[j] -= 1\n            break\n\nprint('YES')\nprint(' '.join(str(e) for e in c))\n", "import sys\ninput = sys.stdin.readline\n\nn,k=map(int,input().split())\nA=list(map(int,input().split()))\n\nif n<k:\n    print(\"NO\")\n    return\n\nLIST=[[] for i in range(max(A)+1)]\n\nfor i in range(n):\n    LIST[A[i]].append(i)\n\nfor li in LIST:\n    if len(li)>k:\n        print(\"NO\")\n        return\n\n\nANS=[None]*n\n\ni=1\nfor li in LIST:\n    for num in li:\n        ANS[num]=i\n        i+=1\n        if i==k+1:\n            i=1\n\n\nprint(\"YES\")\nfor a in ANS:\n    print(a,end=\" \")\n        \n    \n", "from operator import itemgetter\nn,k=map(int,input().split())\na=list(map(int,input().split()))\nc=[0]*5001\nfor i in range (n):\n\tx=a[i]\n\tc[x]+=1\n\nflag=0\nar=[([0]*3) for i in range (n)]\nfor i in range (n):\n\tar[i][0]=a[i]\n\tar[i][1]=i\n\nar=sorted(ar,key=itemgetter(0))\n#print(ar)\nfor i in range (5001):\n\tif(c[i]>k):\n\t\tflag=1\n\t\tbreak\n\nif(flag==0):\n\tco=1\n\tfor i in range (n):\n\t\tif(co>k):\n\t\t\tco=1\n\t\tar[i][2]=co\n\t\tco+=1\n\tprint(\"YES\")\n\tar=sorted(ar,key=itemgetter(1))\n\tfor i in range (n):\n\t\tprint(ar[i][2],end=\" \")\n\n\tprint()\n\nelse:\n\tprint(\"NO\")\n\n", "def mi():\n    return list(map(int, input().split()))\n'''\n'''\nn,k = mi()\na = list(mi())\nb = set(a)\nt = [[] for i in range(5004)]\nfor i in range(n):\n    t[a[i]].append(i)\nc = [0]*n\ncol = 1\nfor i in range(5004):\n    if len(t[i])>k:\n        print ('NO')\n        return\n    for j in range(len(t[i])):\n        c[t[i][j]] = col\n        col+=1\n        if col==k+1:\n            col = 1\nif len(set(c))<k:\n    print ('NO')\n    return\nprint('YES')\nprint(*c)\n", "def find(forb, i):\n    for x in range(len(forb)):\n        if (i not in forb[x]):\n            return x\n    return -1\n\ndef new_print(arr):\n    for i in arr:\n        print(i, end=\" \")\n    print()\nn, k = input().split()\nn = int(n)\nk = int(k)\narr = input().split()\nmap(int, arr)\nans = []\nempty = set()\nforb = []\nfor i in range(k):\n    forb.append(set())\n    empty.add(i)\nfor i in arr:\n    if(len(empty) != 0):\n        l = empty.pop()\n        ans.append(l + 1)\n        forb[l].add(i)\n    else:\n        x = find(forb, i)\n        if (x == -1):\n            ans = -1\n            break\n        forb[x].add(i)\n        ans.append(x + 1)\n\nif (ans == -1):\n    print(\"NO\")\nelif (len(empty) != 0):\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    new_print(ans)\n", "n,k=[int(x) for x in input().split()]\nmas=[int(x) for x in input().split()]\ntot=[]\ndic={}\nfor i in range(k):\n    dic[i+1]=set()\n    dic[i+1].add(mas[i])\n    tot.append(i+1)\nfor item in range(k,len(mas)):\n    for i in range(k):\n        if mas[item] not in dic[i+1]:\n            tot.append(i+1)\n            dic[i+1].add(mas[item])\n            break\n    else:\n        print('NO')\n        break\nelse:\n    total=''\n    for item in tot:\n        total+=str(item)+' '\n    print('YES')\n    print(total[:-1])\n    \n", "n,k=[int(i) for i in input().split()]\na=[int(i) for i in input().split()]\ns=list(set(a))\nfor i in s:\n\tif a.count(i)>k:\n\t\tprint(\"NO\")\n\t\tquit()\ndone=[]\n\nfor i in range(k):\n\tdone.append([])\nprint(\"YES\")\nfor i in range(k):\n\tprint(i+1,end=' ')\n\tdone[i].append(a[i])\nfor i in range(k,n):\n\tfor j in range(k):\n\t\tif a[i] not in done[j]:\n\t\t\tprint(j+1,end=' ')\n\t\t\tdone[j].append(a[i])\n\t\t\tbreak", "color = []\nans = []\ncheck = True\n\nfor _ in range(5005):\n    color.append({})\n\nN, K = list(map(int, input().split()))\narr = list(map(int, input().split()))\nindex = 0 # 0 ~ K-1\n\nfor i in range(N):\n    k=0\n    while 1:\n        try:\n            color[index][ arr[i] ]\n            index += 1\n            index %= K\n            k+=1 \n        except:\n            color[index][ arr[i] ] = 1\n            ans.append(index+1)\n            index +=1\n            index %=K\n            break\n\n        if k>K:\n            print(\"NO\")\n            check=False\n            break \n    if check==False:\n        break \n\nif check:\n    print(\"YES\")\n    print(*ans)\n        \n\n        \n\n\n\n\n\n\n", "n,k=list(map(int,input().split()))\na=list(map(int,input().split()))\nd=[0]*(5001)\nfor i in a:\n    d[i]+=1\nfor i in range(1,5001):\n    if(d[i]>k):\n        print(\"NO\")\n        break\nelse:\n    done=[]\n    for i in range(5001):\n        done.append(set())\n    for i in range(k):\n        done[a[i]].add(i+1)\n        a[i]=i+1\n    for i in range(k,n):\n        for j in range(1,k+1):\n            if(j not in done[a[i]]):\n                done[a[i]].add(j)\n                a[i]=j\n                break\n    print(\"YES\")\n    print(*a)", "from collections import Counter\n\nN, K = map(int, input().split())\na = list(map(int, input().split()))\ncounter = Counter(a)\n\nif counter.most_common(1)[0][1] > K or N < K:\n    print(\"NO\")\n    return\n\ncolor_table = {}\n\ncurrent_color = 0\nfor k, v in counter.items():\n    color_table[k] = current_color\n    current_color = (current_color + v) % K\n\nans = [0]*N\nfor i, n in enumerate(a):\n    ans[i] = (color_table[n] % K) + 1\n    color_table[n] += 1\n\nprint(\"YES\")\nprint(*ans, sep=\" \")", "n,k = [int(e) for e in input().strip().split()]\nnum = [int(e) for e in input().strip().split()]\n\ncount = dict()\nvalid = True\n\nfor i in range(n):\n    if num[i] not in count:\n        count[num[i]] = 0\n    count[num[i]] += 1\n    if count[num[i]] > k:\n        valid = False\n\nif not valid:\n    print(\"NO\")\nelse:\n    out = \"\"\n    color = dict()\n    for i in range(k):\n        color[i] = set()\n    now_color = 0\n    for a in num:\n        while True:\n            if a in color[now_color]:\n                now_color += 1\n                now_color %= k\n                continue\n            else:\n                out += str(now_color+1) + \" \"\n                color[now_color].add(a)\n                now_color += 1\n                now_color %= k\n                break\n    out = out.strip()\n    print(\"YES\")\n    print(out)\n", "import sys\nN,K=list(map(int,input().split()))\nA=[int(i) for i in input().split()]\nL=[0]*(5001)\nnum=[0]*(5001)\nfor a in A:\n    num[a]+=1\nfor s in num:\n    if s>K:\n        print('NO')\n        return\ntable=[]\nfor i in range(N):\n    table.append((A[i],i))\ntable.sort()\nans=[0]*N\n#print(table)\nt=0\nfor a,i in table:\n    t+=1\n    if t%K!=0:\n        ans[i]=t%K\n    else:\n        ans[i]=K\nprint('YES')\nprint(' '.join(map(str,ans)))\n", "n, k = map(int, input().split())\nar = list(map(int, input().split()))\ns = set(ar)\nd = dict()\nfor x in s:\n    d[x] = 0\nfor x in ar:\n    d[x] += 1\nf = 1\nfor x in d:\n    if d[x] > k:\n        f = 0\nif f == 0:\n    print('NO')\nelse:\n    z = ar[:]\n    z = [[z[x], x, -1] for x in range(n)]\n    z.sort(key = lambda x: x[0])\n    w = 1\n    for x in range(n):\n        z[x][2] = w\n        w = (w + 1) % k\n        if w == 0:\n            w = k\n    z.sort(key = lambda x: x[1])\n    print('YES')\n    for x in z:\n        print(x[2], end = ' ')\n\n", "# import math\n# import sys\nn,k = [int(x) for x in input().strip().split(\" \")]\na = [int(x) for x in input().strip().split(\" \")]\nd = {}\nc = {}\nflag = False\nb = []\nfor i in range(n):\n\tif a[i] in d:\n\t\td[a[i]].append(i)\n\t\tc[a[i]]+=1\n\telse:\n\t\td[a[i]]=[i]\n\t\tc[a[i]]=1\n\tb.append(0)\n\tif c[a[i]]>k:\n\t\tflag=True\n\t\tbreak\n\nif flag:\n\tprint(\"NO\")\nelse:\n\tprint(\"YES\")\n\tcur=0\n\tfor j in d:\n\t\tfor i in d[j]:\n\t\t\tb[i] = (cur%k)+1\n\t\t\tcur+=1\n\tfor i in range(n):\n\t\tprint(b[i],end=\" \")\n\tprint()", "n,k=list(map(int,input().split()))\na=list(map(int,input().split()))\ns=list(set(a))\nm=[0]*5005\nk1=[]\nfor i in range(n):\n    k1.append([a[i],i])\nk1.sort()   \nans=[0]*n \nfor i in a:\n    m[i]+=1\nf=0\nfor i in s:\n    if m[i]>k:\n        f=1\nif f==1:\n    print(\"NO\")\nelse:\n    j=0\n    print(\"YES\")\n    for i in range(n):\n        ans[k1[i][1]]=i%k+1\n    print(*ans)        \n        \n\n", "q,w = list(map(int,input().split()))\na = list(map(int,input().split()))\ns = []\nd = []\nans = []\nb = True\nfor i in a:\n    if (i in s):\n        k = s.index(i)\n        d[k] += 1\n        ans.append(d[k])\n    else:\n        s.append(i)\n        ans.append(1)\n        d.append(1)\nj = max(ans)\nif (j>w):\n    print('NO')\nelse:\n    l = 1\n    i = j+1\n    while (i<w+1):\n        while(ans.count(l)==1):\n            l+=1\n        h = ans.count(l)\n        while ((i<w+1)&(h>1)):\n            f = ans.index(l)\n            ans = ans[:f]+[i]+ans[f+1:]\n            i+=1\n            h-=1\n    print(\"YES\")\n    print(*ans)\n", "N, K = map(int, input().split())\n\narr = list(map(int, input().split()))\n\ncDict = dict()\n\n\nisFine = True\n\nfor a in arr:\n    if a not in cDict: cDict[a] = 1\n    else: cDict[a] += 1\n    \n    if cDict[a] > K:\n        isFine = False\n        break\n    \nif not isFine:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    fDict = dict()\n    lastC = 0\n    for c in cDict:\n        fDict[c] = cDict[c] + lastC\n        lastC = fDict[c]\n        \n    ansArr = []\n    for a in arr:\n        ansArr.append(fDict[a])\n        fDict[a] -= 1\n    \n    for an in ansArr:\n        print(an % K + 1, end = ' ')\n        "]