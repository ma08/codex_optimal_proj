["N = input()\nX = int(N)\nif X % sum(list(map(int, N))) == 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "#!/usr/bin/env python3\nimport sys\nsys.setrecursionlimit(10**6)\n\nn = int(input())\n\nfx = sum([int(i) for i in str(n)])\n\n\nif n % fx == 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "n = str(input())\na = []\nfor i in n:\n    a.append(int(i))\nb = sum(a)\nif int(n) % b == 0:\n    print('Yes')\nelse:\n    print('No')", "n = input()\nm = list(n)\nm = list(map(int,m))\nif int(n) % sum(m) == 0:\n    print('Yes')\nelse:\n    print('No')", "def main():\n    N = int(input())\n    s = list(str(N))\n    H = 0\n    for i in range(len(s)):\n        H += int(s[i])\n    if N % H == 0:\n        print('Yes')\n    else:\n        print('No')\n    \nmain()\n", "a=input()\nb=int(a)\ns=0\nfor i in range(len(a)):\n  s=s+int(a[i])\nif b%s==0:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "n = input()\ns = sum(map(int, list(n)))\nprint('Yes' if int(n) % s ==0 else 'No')", "a=input()\ny=[]\nfor i in range(len(a)):\n    y.append(int(a[i]))\nif int(a)%sum(y)==0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "N = int(input())\nl = list(str(N))\nfx = 0\nfor i in l:\n  fx += int(i)\nif N%fx == 0:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "N = int(input())\nstrN = str(N)\n\nketa_wa = 0\n\nfor i in range(len(strN)):\n  keta_wa += int(strN[i])\n  \nif N % keta_wa == 0:\n  print('Yes')\nelse:\n  print('No')", "s = input()\nsum = 0\nfor i in s:\n    sum+=int(i)\nif int(s)%sum == 0: print(\"Yes\")\nelse: print(\"No\")", "n = int(input())\ns = str(n)\nsum = 0\nfor i in range(len(s)):\n    sum+=(ord(s[i])-ord('0'))\nif n%sum == 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "n = int(input())\na = sum(map(int, list(str(n))))\nprint('Yes' if n%a==0 else 'No')", "N = input()\n\nif int(N)%sum(int(i) for i in N) == 0:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "N = input()\n\ndef f(x):\n   result = 0\n   for i in range(len(x)):\n      result += int(x[i])\n   return result\n\nif int(N) % f(N) == 0:\n   print('Yes')\nelse:\n   print('No')", "N=str(input())\nf=0\nfor i in range(len(N)):\n  f=f+int(N[i])\nif int(N)%f==0:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "n = int(input())\nn_init = n\nm = 0\nwhile n > 0:\n    m += n % 10\n    n //= 10\nprint(('Yes' if n_init % m == 0 else 'No'))\n", "ipp = input()\nn = [int(x) for x in ipp]\nharshad = 0\n\nfor i in range(0, len(n)):\n    harshad += n[i]\n\nif int(ipp) % harshad == 0:\n    print(\"Yes\")\nelif int(ipp) % harshad != 0:\n    print(\"No\")", "#ABC080B\nn = input()\nprint(\"Yes\" if int(n) %sum(map(int,n)) == 0 else \"No\")", "n = int(input())\n\nnn = str(n)\nha_num = 0\nfor i in nn:\n    ha_num += int(i)\n\nif n%ha_num == 0:\n    print('Yes')\nelse:\n    print('No')", "a=input();print('YNeos'[int(a)%sum([int(i) for i in a])!=0::2])", "n = input()\nprint(\"No\" if int(n)%sum(map(int,n)) else \"Yes\")", "n = input()\nn_int = int(n)\n\nn_sum = 0\n\nfor s in n:\n    n_sum += int(s)\n\nif(n_int%n_sum == 0):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "n=input()\nf=0\nfor i in range(len(n)):\n  f+=int(n[i])\nif int(n)%f==0:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "N = input()\nf = lambda X:sum(int(x) for x in X)\nprint(('Yes' if int(N)%f(N) == 0 else 'No'))\n", "n = input()\nn1 = len(n)\nsu = 0\nfor i in range(n1):\n    su += int(n[i])\nif int(n)%su==0:\n    print('Yes')\nelse:\n    print('No')", "n = input()\nc = 0\nfor i in n:\n  c += int(i)\nprint(\"Yes\" if int(n)%c == 0 else \"No\")", "n = input()\n\ns = 0\nfor i in range(len(n)):\n    s += int(n[i])\n  \nprint('Yes') if int(n) % s == 0 else print('No')", "n = list(map(str,input()))\nfn = 0\nfor i in range(len(n)):\n  fn += int(n[i])\nprint(\"Yes\" if int(\"\".join(n))%fn == 0 else \"No\")", "a = input()\nx = [int(i) for i in a]\nprint(\"Yes\" if int(a) % sum(x) == 0 else \"No\")", "N = input()\nfn = 0\nfor i in N:\n  fn += int(i)\n  \nprint(\"Yes\" if int(N) % fn == 0 else \"No\")", "N=int(input())\nn=sum(map(int,str(N)))\nprint(\"Yes\" if N%n==0 else \"No\")", "N=int(input())\nx=str(N)\ns=0\nfor i in range(len(x)):\n    s+=int(x[i])\nif N % s==0:\n    ans=\"Yes\"\nelse:\n    ans=\"No\"\nprint(ans)", "N = int(input())\n\nf = 0\n\nstr_N = str(N)\n\nfor i in str_N:\n    f += int(i)\n\nif N % f == 0:\n    print(\"Yes\")\nelse :\n    print(\"No\")", "a=input()\ny=[]\nfor i in range(len(a)):\n    y.append(int(a[i]))\nif int(a)%sum(y)==0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "N = input()\nX = sum(list(map(int,list(N))))\nif int(N) % X == 0:\n    print('Yes')\nelse:\n    print('No')", "n = int(input())\n\ns = sum(list(map(int, str(n))))\nif n % s == 0:\n  print('Yes')\nelse:\n  print('No')", "n=int(input())\nx=n\nn=str(n)\nf=0\nfor i in range(len(n)):\n  y=int(n[i])\n  f+=y\n\nif x%f==0:\n  print('Yes')\nelse:\n  print(\"No\")", "N = input ()\nx = 0\nfor i in range (len (N)):\n  x += int (N[i])\nif int (N)%x == 0:\n  print ('Yes')\nelse:\n  print ('No')", "N = int(input())\nS = str(N)\nL = len(S)\ntotal = 0\nfor i in range(L):\n    total += int(S[i])\nif N % total == 0:\n    ans = \"Yes\"\nelse:\n    ans = \"No\"\nprint(ans)\n", "N = input()\n\nprint('No' if int(N)%sum(map(int, N)) else 'Yes')", "n = input()\nm = sum(map(int,n))\nif int(n) % m==0:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "# coding = SJIS\n\nn = str(input())\n\na = 0\n\nfor i in range(len(n)):\n    a += int(n[i])\n\nif int(n) % a == 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "n = input()\nx = 0\nfor i in range(len(n)):\n    x += int(n[i])\nif int(n) % x == 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "N = input()\nif int(N) % sum(map(int, N)):\n    print(\"No\")\nelse:\n    print(\"Yes\")", "N = int(input())\n\nprint(\"Yes\" if N % sum(map(int, str(N))) == 0 else \"No\")", "n = int(input())\n\nf = False\n\nx = sum(list(map(int, str(n))))\n\nif n % x == 0:\n    f = True\n\nif f:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "n = input()\n\ndef f(x):\n    return sum(list(map(int, list(n))))\n\nif int(n) % f(n) == 0:\n    print('Yes')\nelse:\n    print('No')", "def main():\n    N = int(input())\n    X = N\n    sum = 0\n    while True:\n        amari = N%10\n        sum += amari\n        #print(amari,sum)\n        N //= 10\n        if N == 0:\n            break\n\n    if X%sum == 0:\n        return 'Yes'\n    else:\n        return 'No'\n\nprint((main()))\n", "A=input()\nnu=int(A)\ntmp=sum(map(int,list(A)))\nprint(\"Yes\") if nu%tmp==0 else print(\"No\")", "n=int(input())\n\nN=n\n\nsum=int(0)\nwhile(n!=0):\n    sum+=n%10\n    n//=10\n\nif N%sum==0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "N = input()\nans = 0\nfor i in range(len(N)):\n    ans += int(N[i])\n\n\nif int(N) % ans == 0:\n    print('Yes')\nelse:\n    print('No')\n", "N=int(input())\nf=sum(list(map(int,str(N))))\n\nif N%f==0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "# coding: utf-8\n\nnum = input()\ntable = list(num)\ntotal = 0\nfor i in range(len(table)):\n    total += int(table[i])\n\nif int(num) % total == 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "def main():\n    n = int(input())\n    x = sum(map(int, str(n)))\n    print(\"Yes\" if n%x==0 else \"No\")\n\n\nmain()", "n=int(input())\ndef digitSum(n):\n    # \u6570\u5024\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\n    s = str(n)\n    # \uff11\u6587\u5b57\u305a\u3064\u6570\u5024\u5316\u3057\u914d\u5217\u306b\u3059\u308b\u3002\n    array = list(map(int, s))\n    # \u5408\u8a08\u5024\u3092\u8fd4\u3059\n    return sum(array)\nprint(\"Yes\" if n%digitSum(n)==0 else \"No\")", "n = str(input())\nsum = 0\nfor i in range(len(n)):\n    sum = sum + int(n[i])\nif int(n) % sum == 0:\n    print('Yes')\nelse:\n    print('No')", "num = int(input())\nnum = str(num)\nn = list(map(int, num))\nS = 0\nfor i in range(len(n)):\n  S += int(n[i])\n  \nnum = int(num)\nif num%S==0:\n  print('Yes')\nelse:\n  print('No')", "N = int(input())\n\n\ndef keta_sum(N):\n    if N < 10:\n        return N\n    else:\n        return keta_sum(N // 10) + (N % 10)\n\n\nif N % keta_sum(N) == 0:\n    print('Yes')\nelse:\n    print('No')\n", "n = int(input())\nm = list(str(n))\nf = sum([int(m) for m in m ])\n\nprint(\"Yes\") if n%f==0 else print(\"No\")", "#harshad number \nn = int(input()) \nflag = 0 \nn_str = str(n) \nn_len = len(n_str) \nn_digit = 0 \nfor i in range(n_len):\n    n_digit += int(n_str[i]) \n\nif n % n_digit == 0: \n    flag = 1\n\n\n\nif flag:\n    print('Yes') \nelse:\n    print('No')\n", "n = input()\nans = 0\nfor i in range(len(n)):\n    ans += int(n[i])\nif int(n) % ans == 0:\n    print('Yes')\nelse:\n    print('No')", "n = input()\nd = sum(list(map(int, n)))\n\nif int(n) % d == 0:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "n = input()\n\ns = 0\nfor i in range(len(n)):\n    s += int(n[i])\nif int(n) % s == 0:\n    print('Yes')\nelse:\n    print('No')\n", "n = input()\nf_n = 0\nfor i in n: f_n += int(i)\nif int(n) % f_n == 0: print(\"Yes\")\nelse: print(\"No\")", "N = int(input())\nX = 0\nfor i in str(N):\n    X += int(i)\n\nif N % X == 0:\n    print('Yes')\nelse:\n    print('No')\n", "N = int(input())\nprint('Yes' if N % sum(map(int, str(N))) == 0 else 'No')", "n = int(input())\n\ntmp, nx = 0, n\nwhile nx:\n    tmp += nx%10\n    nx //= 10\n    \nif n % tmp:\n  print(\"No\")\nelse:\n  print(\"Yes\")", "S=input()\nN=int(S)\nf=sum(int(x) for x in S)\nif N%f==0:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "n=input()\nf_x=0\nfor i in range(len(n)):\n    f_x+=int(n[i])\nif int(n)%f_x==0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "n = input()\nif int(n) % sum(map(int, n)):\n    print(\"No\")\nelse:\n    print(\"Yes\")", "import sys\n\nNstr = sys.stdin.readline().strip()\n\ndigit_s = 0\nfor n_i in Nstr:\n    digit_s += int(n_i)\n\nif int(Nstr) % digit_s == 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "n = int(input())\nfx = sum(map(int, list(str(n))))\nprint(['No', 'Yes'][int(n % fx == 0)])", "N = input()\nfX = sum([int(i) for i in list(N)])\nX = int(N)\nif X % fX == 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "def digitsum(n):\n  return sum(list(map(int,list(str(n)))))\nN=int(input())\nif N%digitsum(N)==0:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "n = input()\ns = sum(map(int, list(n)))\nif int(n) % s == 0:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "N = input()\nprint(\"Yes\" if int(N)%sum(map(int, N))==0 else \"No\")", "n=input()\nf=0\nfor i in range(len(n)):\n    f += int(n[i])\nif int(n) % f == 0:\n    print('Yes')\nelse:\n    print('No')", "def digitSum(k):\n  if k == 0:\n    return 0\n  else:\n    return digitSum(k//10) + k % 10\n\nN = int(input())\nif N % digitSum(N) == 0:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "a=input();print('YNeos'[int(a)%sum(map(int,a))!=0::2])", "n=int(input())\n\nc=0\nfor i in str(n):\n  c+=int(i)\nif n%c==0:\n  print(\"Yes\")\nelse:\n  print(\"No\")\n", "n = int(input())\nif n%sum(map(int,list(str(n))))==0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "N = input()\nf = 0\nfor num in N:\n    f += int(num)\nprint('Yes' if int(N) % f == 0 else 'No')", "b=input()\nf=int(b)\n# a=input()\nc=[]\n# for i in range(b):\n#     c.append(a[i])\n#a = list(map(int,input().split()))\n#b = list(map(int,input().split()))\nN = 0\nfor i in range(len(b)):\n    c.append(int(b[i]))\nd = f//int(sum(c))\ne = f/int(sum(c))\n\nif d==e:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "n = input()\nsum_index = 0\nfor i in n:\n    sum_index += int(i)\n\nif int(n) % sum_index == 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "def d(num):\n  l=[int(x) for x in str(num)]\n  return sum(l)\n  \nn = int(input())\nprint(\"Yes\" if n%d(n)==0 else \"No\")", "n = input()\na = 0\nfor i in range(len(n)):\n    a += int(n[i])\n\nx = int(n)\nif x % a == 0:\n    print('Yes')\nelse:\n    print('No')", "def findSumOfDigits(n):\n    sum = 0\n    while (n > 0):\n        sum += n % 10\n        n //= 10\n    return sum\n\nans = 0\nn = int(input())\ntotal = findSumOfDigits(n)\nif n % total == 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "x = input()\nfx = 0\nintx = int(x)\nfor i in range(len(x)):\n    fx += int(x[i])\nif intx%fx == 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "#\n# abc080 b\n#\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"12\"\"\"\n        output = \"\"\"Yes\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"57\"\"\"\n        output = \"\"\"No\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_3(self):\n        input = \"\"\"148\"\"\"\n        output = \"\"\"No\"\"\"\n        self.assertIO(input, output)\n\n\ndef resolve():\n    N = input()\n    s = 0\n    for i in range(len(N)):\n        s += int(N[i])\n    if int(N) % s == 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\ndef __starting_point():\n    # unittest.main()\n    resolve()\n\n__starting_point()", "def digit_sum(num):\n    total_num=0\n    while num>0:\n        total_num+=num % 10\n        num//=10\n    return total_num\n\nN=int(input())\nif N%digit_sum(N)==0 :\n  print(\"Yes\")\n  return\nprint(\"No\")", "N = input()\nprint(\"Yes\" if ((int(N)% sum(map(int,N)) == 0)) else \"No\")", "N = input()\nN_int = int(N)\nN_len = len(N)\nN_wa = 0\nfor i in range(N_len):\n    N_wa += int(N[i])\nif N_int % N_wa == 0:\n    print('Yes')\nelse:\n    print('No')\n", "n = str(input())\nsum = 0\nfor i in range(0, len(n)):\n  sum += int(n[i])\nn = int(n)\nif n % sum == 0:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "N = input()\nprint((\"Yes\" if((int(N) % sum(map(int, N)) == 0)) else \"No\"))\n", "def is_harshad_number(x: int) -> bool:\n    dividend = x\n    sum_of_digits = 0\n\n    for _ in range(len(str(x))):\n        x, mod = divmod(x, 10)\n        sum_of_digits += mod\n\n    return dividend % sum_of_digits == 0\n\n\ndef answer(x: int) -> str:\n    return 'Yes' if is_harshad_number(x) else 'No'\n\n\ndef main():\n    x = int(input())\n    print(answer(x))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "\ndef harshad(n):\n    if n % sum(map(int, list(str(n)))) == 0:\n        return True\n    else:\n        return False\n\nN = int(input())\nprint('Yes' if harshad(N) else 'No')", "n = input()\nfx = 0\nfor i in n:\n  fx += int(i)\nif int(n) % fx == 0:\n  print(\"Yes\")\nelse:\n  print(\"No\")\n", "n = str(input())\nsum = 0\nfor i in range(0, len(n)): sum += int(n[i])\nif int(n) % sum == 0: print(\"Yes\")\nelse: print(\"No\")", "n = input()\nprint('Yes') if int(n) % sum([int(i) for i in n]) == 0 else print('No')\n"]