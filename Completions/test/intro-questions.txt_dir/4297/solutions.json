["n = int(input())\nprint((n if n%2==0 else n*2))\n", "N =int(input())\nif N%2==0:\n    print(N)\nelse:\n    print((2*N))\n", "N = int(input())\n\nif N % 2 == 0:\n  print(N)\nelse:\n  print(2*N)", "n = int(input())\nif n%2 == 0:\n    print(n)\nelse:\n    print(2*n)", "n = int(input())\nif n % 2 == 0:\n  print(n)\nelse:\n  print((n*2))\n", "N = int(input())\n\nif N%2 == 0:\n    print(N)\nelse:\n    print(N*2)", "n = int(input())\nif n % 2 == 0:\n    print(n)\nelse:\n  \tprint(n * 2)", "n = int(input())\nprint(n if n % 2 == 0 else n * 2)", "from math import gcd\nprint((n:=int(input()))*2//gcd(2,n))", "n=int(input())\nif n%2==0:\n  print(n)\nelse:\n  print(2*n)", "\nN = int(input())\n\nif(N % 2 == 0):\n    print(N)\nelse:\n    print((2 * N))\n", "n = int(input())\nprint(n if n%2 == 0 else 2*n)", "import sys\nimport math\n\nN = int(input())\n\nprint(int((N*2)/math.gcd(N, 2)))", "n = int(input())\nif n % 2 == 0:\n    print(n)\nelse:\n    print(2 * n)", "n = int(input())\nif n % 2 == 0:\n    print(n)\nelse:\n    print(n * 2)", "a=int(input())\nb=2\nimport math\nprint(int(a*b/math.gcd(a, b)))", "N = int(input())\nif N % 2 == 0:\n  ans = N\nelse:\n  ans = 2 * N\n  \nprint(ans)", "n=int(input())\nprint(n if n%2==0 else n*2)", "n = int(input())\nif n%2 == 0:\n  print(n)\nelse:\n  print(n*2)", "n=int(input())\nans=n if n%2==0 else 2*n\nprint(ans)", "N = int(input())\nprint(N if N % 2 == 0 else 2 * N)", "n = int(input())\n\nif n % 2 == 0:\n    print(n)\nelse:\n    print((n * 2))\n", "n = int(input())\nif n%2==0:\n    print(n)\nelse:\n    print((n*2))\n", "n=input()\nif int(n)%2==0:\n  print(n)\nelse:\n  print((int(n)*2))\n", "n = int(input())\nif n%2==0:\n    print(n)\nelse:\n    print(2*n)", "n=int(input())\nif n%2==0:\n  print(n)\nelse:\n  print(n*2)", "n = int(input())\nif n%2==0:\n    print(n)\nelse:\n    print((2*n))\n", "N=int(input())\nif N%2==0:\n    ans=N\nelse:\n    ans=N*2\nprint(ans)", "\nn=int(input())\nif n%2==0:\n    print(n)\nelse:\n    print(n*2)", "n = int (input ())\nif n%2 == 0:\n  print (n)\nelse:\n  print (n*2)", "num = int(input())\nif(num %2 != 0):\n  print(num*2)\nelse:\n  print(num)", "n = int(input())\nif n%2:\n  print(2*n)\nelse:\n  print(int(2*(n/2)))", "#\n# abc102 a\n#\n\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"3\"\"\"\n        output = \"\"\"6\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"10\"\"\"\n        output = \"\"\"10\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_3(self):\n        input = \"\"\"999999999\"\"\"\n        output = \"\"\"1999999998\"\"\"\n        self.assertIO(input, output)\n\n\ndef resolve():\n    N = int(input())\n\n    if N % 2 == 0:\n        print(N)\n    else:\n        print((N*2))\n\n\ndef __starting_point():\n    # unittest.main()\n    resolve()\n\n__starting_point()", "n=int(input())\nif n%2==0:\n    print(n)\nelse:\n    print(n*2)", "a=int(input())\nif a%2==0:\n  print(a)\nelse:\n  print(a*2)", "n = int(input())\nif n%2 == 0:\n    print(n)\nelse:\n    print(n*2)", "\nn = int(input())\n\nif n % 2 == 0: print(n)\nelse: print(2*n)", "n = int(input())\nif n % 2 == 0:\n    print(n)\nelse:\n    print(2 * n)", "import math\ndef lcm(x, y):\n    return (x * y) // math.gcd(x, y)\n\n\nn = int(input())\nprint(lcm(2, n))", "n = int(input())\nif n % 2 == 0:\n    print(n)\nelse:\n    print(2 * n)", "n = int(input())\nprint(n if n % 2 == 0 else n * 2)", "n = int(input())\nif n % 2 == 0:\n    print(n)\nelse:\n    print((n*2))\n", "import math\nN = int(input())\ndef lcm(a,b):\n    return int(a*b//math.gcd(a,b))\nprint(lcm(2,N))", "n = int(input())\nif n % 2 == 0:\n  print(n)\nelse:\n  print(n*2)", "n = int(input())\n\nif n % 2 == 0:\n  print(n)\nelse:\n  print(2*n)", "n = int(input())\nprint([n, 2*n][n%2])", "from numpy import lcm\nn = int(input())\nprint(lcm(2, n))", "N = int(input().rstrip())\nif N&1==1:\n    print(N*2)\nelse:\n    print(N)", "\ndef main():\n    n = int(input())\n    if n % 2 == 0:\n        print(n)\n    else:\n        print((2 * n))\n        \n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\nif N % 2 == 0:\n  print(N)\nelse:\n  print(N*2)", "#k = int(input())\n#s = input()\n#a, b = map(int, input().split())\n#s, t = map(str, input().split())\n#l = list(map(int, input().split()))\n#l = [list(map(int,input().split())) for i in range(n)]\n#a = [list(input()) for _ in range(n)]\n#a = [int(input()) for _ in range(n)]\n\nn = int(input())\n\nif (n%2==0):\n    print(n)\nelse:\n    print((n*2))\n\n\n", "import math\n\nn = int(input())\n\nprint(2 * n // math.gcd(2, n))", "n = int(input())\n\nprint((n if n % 2 == 0 else 2 * n))\n", "n = int(input())\nprint(2*n if n%2 else n)", "a = int(input())\nif a % 2 == 0:\n  print(a)\nelse:\n  print(a*2)", "a = int(input())\n\nif a%2 == 0:\n    print(a)\nelse:\n    print((a*2))\n", "n = int(input())\n\nif n % 2 == 0:\n    print(n)\nelif n % 2 != 0:\n    print(2 * n)", "N=int(input())\nif N%2==0:\n  print(N)\nelse:\n  print(2*N)", "N = int(input())\n\nif N % 2 == 0:\n    print(N)\nelse:\n    print(N * 2)", "import math\nn = int(input())\ngcd = math.gcd(2, n)\nlcm = 2 * n // gcd\nprint(lcm)\n", "N=int(input())\nif N%2==0 :\n  print(N)\nelse :\n  print(N*2)", "a=int(input())\nprint(a*((a%2)+1))", "import math\nN = int(input())\nprint((2*N)//math.gcd(2,N))", "num = int(input())\n\nif num % 2 == 0:\n    print(num)\nelse:\n    print((num * 2))\n", "n = int(input())\nif n % 2 == 0:\n  print(n)\nelse:\n  print(2*n)", "def main():\n    n = int(input())\n    print(n if n%2==0 else 2*n)\n\n\nmain()", "a = int(input())\nif a % 2 == 0:\n  print(a)\nelse:\n  print(a*2)", "# -*- coding: utf-8 -*-\n\ndef get_input() -> int:\n    \"\"\"\n    \u6a19\u6e96\u5165\u529b\u3092\u53d6\u5f97\u3059\u308b.\n\n    Returns:\\n\n        int: \u6a19\u6e96\u5165\u529b\n    \"\"\"\n    N = int(input())\n\n    return N\n\n\ndef main(N: int) -> None:\n    \"\"\"\n    \u30e1\u30a4\u30f3\u51e6\u7406.\n\n    Args:\\n\n        N (int): \u6b63\u6574\u6570(1 <= N <= 10^9)\n    \"\"\"\n    # \u6c42\u89e3\u51e6\u7406\n    ans = N\n    if ans % 2 != 0:\n        ans *= 2\n\n    # \u7d50\u679c\u51fa\u529b\n    print(ans)\n\n\ndef __starting_point():\n    # \u6a19\u6e96\u5165\u529b\u3092\u53d6\u5f97\n    N = get_input()\n\n    # \u30e1\u30a4\u30f3\u51e6\u7406\n    main(N)\n\n__starting_point()", "n = int(input())\nif n % 2 == 0:\n    print(n)\nelse:\n    print(2*n)", "a=int(input())\nif a%2==0:\n  print(a)\nelse:\n  print(a*2)", "n = int(input())\n\nif n % 2 == 0:\n  print(n)\nelse:\n  print(n * 2)", "import math\n\nn = int(input())\ngcd = math.gcd(2, n)\nlcm = int(2*n/gcd)\nans = lcm\n\nprint(ans)", "n = int(input())\nif n % 2 == 0:\n  print(n)\nelse:\n  print(2*n)", "N = int(input())\nif N % 2 == 0:\n    print(N)\nelse:\n    print(N*2)", "n = int(input())\nif n % 2 == 0:\n    print(n)\nelse:\n    print(n * 2)", "import math\n\nN=int(input())\nprint((2*N//math.gcd(2,N)))\n", "import sys\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nsys.setrecursionlimit(10 ** 9)\nINF = 1 << 60\nMOD = 1000000007\n\n\ndef main():\n    N = int(readline())\n\n    if N % 2 == 0:\n        print(N)\n    else:\n        print((2 * N))\n\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\n\nif N % 2 == 0:\n    print(N)\nelse:\n    print((N * 2))\n", "# -*- coding: utf-8 -*-\n# \u6a19\u6e96\u5165\u529b\u3092\u53d6\u5f97\nN = int(input())\n\n# \u6c42\u89e3\u51e6\u7406\nans = N\nif ans % 2 != 0:\n    ans *= 2\n\n# \u7d50\u679c\u51fa\u529b\nprint(ans)\n", "n=int(input())\nprint(n*(1+n%2))", "import sys\nimport math\n\n#https://atcoder.jp/contests/agc008/submissions/15248942\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninm = lambda: map(int, sys.stdin.readline().split())\ninl = lambda: list(inm())\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print(\"\\033[33m\", *a, \"\\033[0m\", **dict(file=sys.stderr, **kw))\n\nN = ini()\n\nif N%2 == 0:\n    print(N)\nelse:\n    print(N*2)", "import math\nn = int(input())\na = math.gcd(n, 2)  # \u6700\u5927\u516c\u7d04\u6570\nprint(n * 2 // a)", "n=int(input())\nprint(n if n%2==0 else 2*n)", "N = int(input())\n\nif N % 2 == 0 :\n    print(N)\nelse :\n    print(2*N)", "import math\na = int(input())\nprint(a*2//math.gcd(a, 2))", "N = int(input())\n\nif N % 2 == 0:\n   print(N)\nelse:\n   print(2 * N)", "N = int(input())\nprint(N if N%2 == 0 else N*2)", "n=int(input())\nprint(n if n%2==0 else 2*n)", "n = int(input())\n\nif n % 2 == 0:\n    print(n)\nelse:\n    print(n*2)", "#\nimport sys\nimport math\nimport numpy as np\nimport itertools\n\n\nn = int(input())\n\nif n % 2 == 0:\n    print(n)\nelse:\n    print((n*2))\n\n\n", "n=int(input())\nif n%2==0:\n    print(n)\nelse:\n    print(n*2)", "n = int(input())\n\nif n % 2 == 0:\n  print(n)\nelse:\n  print(n*2)", "import math\nN=int(input())\nprint(2*N//math.gcd(2,N))", "N = int(input())\nprint((N if N%2==0 else N*2))\n", "n = int(input())\nprint(n if n % 2 == 0 else n * 2)", "a = int(input())\nif a % 2 == 0:\n  print(a)\nelse:\n  print(a * 2)", "n=int(input())\nif n%2:print(2*n)\nelse:print(n)", "N = int(input())\n\nfor i in range(2, 10**6):\n    if N % 2 == 0:\n        break\n    N *= i\n\nprint(N)", "n = int(input())\nif n%2 == 0:\n  print(n)\nelse:\n  print(n*2)", "n = int(input())\nif n%2==0:\n  print(n)\nelse:\n  print(2*n)"]