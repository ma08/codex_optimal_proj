["n, k = map(int, input().split())\nsnukes = []\nfor _ in range(k):\n    okashi = int(input())\n    snukes += [int(v) for v in input().split()]\ntarget = 1\ncnt = 0\nl = list(set(snukes))\ns = [int(v) for v in range(1, n + 1)]\n\nfor p in s:\n    if p not in l:\n        cnt += 1\nprint(cnt)", "n, k = list(map(int, input().split()))\na = []\nfor i in range(k):\n    d = int(input())\n    ai = list(map(int, input().split()))\n    for j in range(d):\n        if not (ai[j] in a):\n            a.append(ai[j])\n\nprint((n - len(a)))\n", "N, K = map(int, input().split())\nsunukes = [0 for k in range(N)]\nfor k in range(K):\n  d = int(input())\n  A = list(map(int, input().split()))\n  for a in A:\n    sunukes[a-1] += 1\n  assert len(A) == d\nprint(len([k for k in sunukes if k == 0]))", "n,k=map(int,input().split())\ncnt=[1]*n\nfor i in range(k):\n    d=int(input())\n    a=[*map(int,input().split())]\n    for j in a:\n        cnt[j-1]=0\n\nans=0\nfor i in cnt:\n    if i==1:\n        ans+=1\nprint(ans)", "n,k = list(map(int,input().split()))\n\nsunuke = [0]*n\nfor _ in range(k):\n    d = int(input())\n    a = list(map(int,input().split()))\n    for i in a:\n        sunuke[i-1] += 1\n\nprint((sunuke.count(0)))\n", "N,K = map(int,input().split())\n\nA = []\n\nfor i in range(K):\n    d = int(input())\n    A += list(map(int,input().split()))\n    \nprint(N - len(set(A)))", "n,k=list(map(int,input().split()))\nans=[1]*n\nfor i in range(k):\n    s=int(input())\n    l=list(map(int,input().split()))\n    for j in range(s):\n        if ans[l[j]-1]==1:\n            ans[l[j]-1]=0\nprint((sum(ans)))\n            \n        \n        \n", "N,K = map(int ,input().split())\nD = []\nA = []\nfor _ in range(K):\n  D.append(int(input()))\n  A.append(list(map(int, input().split())))\n\n# \u5404\u4eba\u3054\u3068\u306b\u3001\u6301\u3063\u3066\u3044\u308b\u304a\u83d3\u5b50\u306e\u500b\u6570\u3092\u6570\u3048\u3001\u500b\u65700\u306e\u4eba\u6570\u3092\u51fa\u529b\u3059\u308b\nl = [0]*N\nfor i in range(K):\n  for j in range(D[i]):\n    l[A[i][j]-1] +=1\n\nprint(l.count(0))", "N, K = map(int, input().split())\nsweets = [0] * N\n\nfor i in range(K):\n    d = int(input())\n    A = list(map(int, input().split()))\n\n    for a in A:\n        sweets[a-1] += 1\n\nprint(sweets.count(0))", "N,K=map(int,input().split())\ns = set(range(1, N+1))\nfor i in range(K):\n    d = int(input())\n    A = list(map(int,input().split()))\n    for x in A:\n        try:\n            s.remove(x)\n        except:\n            pass\nprint(len(s))", "n,k=map(int, input().split())\na=[]\nd=[]\nfor i in range(k):\n  d.append( int(input()) )\n  a.append( list(map(int,input().split())) )\nmem=0\nfor i in range(1,n+1):\n  check=False\n  for j in range(k):\n    if i in a[j]:\n      check=True\n  if not check:\n    mem+=1\nprint(mem)           ", "n, k = list(map(int, input().split()))\nA = []\nA_dup = []\ncnt = 0\n\nfor i in range(k):\n    input()\n    # A.append(list(map(int, input().split())))\n    A_dup += list(map(int, input().split()))\nA_eldup = list(set(A_dup))\n\nfor i in range(1, n+1):\n    if i not in A_eldup:\n        cnt += 1\nprint(cnt)\n", "n, k = map(int, input().split())\ns = [0] * n\n\nfor _ in range(k):\n    d = int(input())\n    a = list(map(int, input().split()))\n    for x in a:\n        s[x-1] = 1\n\nprint(s.count(0))", "n,k=map(int,input().split())\nsunuke=[0]*n\nfor i in range(k):\n d=int(input())\n a=list(map(int,input().split()))\n \n for j in range(d):\n  sunuke[a[j]-1]+=1\n  \nninnzuu=0\n\nfor i in range(n):\n if sunuke[i]==0:\n  ninnzuu+=1\nprint(ninnzuu)", "n,k=map(int,input().split());s={*range(1,-~n)}\nfor _ in range(k):\n input();s-={*map(int,input().split())}\nprint(len(s))", "N,K=map(int,input().split())\nA=[]\npeople=list(range(1,N+1,1))\nfor idx in range(K):\n    d=int(input())\n    X=list((map(int,input().split())))\n    for i in range(len(X)):\n        A.append(X[i])\nans =[i for i in people if not i in A]\nprint(len(ans))", "N, K = map(int, input().split())\n\nsunuke = [1] * N\n\nfor i in range(K):\n    di = int(input())\n    tmp = map(int, input().split())\n    for j in tmp:\n        sunuke[j-1] = 0\nprint(sum(sunuke))", "N, K = map(int, input().split())\nx = [0] * (N+1)\n\nfor i in range(K):\n    d = int(input())\n    if d > 0:\n        a = list(map(int, input().split()))\n        for v in a:\n            x[v] += 1\n\n# print(a)\n\nc = 0\nfor i in range(1, N+1, 1):\n    if x[i] == 0:\n        c += 1\n\nprint(c)", "n,k = map(int, input().split())\n\ns = [i for i in range(1,n+1)]\nfor _ in range(k):\n  d = int(input())\n  arr = list(map(int, input().split()))\n  for a in arr:\n    if a in s:\n\t    s.remove(a)\nprint(len(s))", "N, K = map(int, input().split())\nd = 0;\nA = []\nokashi = [0] * N\nans = 0\nfor i in range(K):\n  d = int(input())\n  A = list(map(int, input().split()))\n  for j in range(d):\n    okashi[A[j] - 1] += 1\nfor num in okashi:\n  if num == 0:\n    ans += 1\nprint(ans)", "#N\u4eba\u3000K\u7a2e\u985e\u306e\u304a\u83d3\u5b50\n[N, K] = [int(i) for i in input().split()]\n\nokasi = [0]*N #i\u756a\u76ee\u306e\u4eba\u304c\u6301\u3063\u3066\u3044\u308b\u304a\u83d3\u5b50\u306e\u4e2d\u3067\u3001\u7a2e\u985e\u756a\u53f7\u304c\u591a\u3044\u3082\u306e\u306b\u66f4\u65b0\u3059\u308b\n\n#\u304a\u83d3\u5b50K\u7a2e\u985e\u6e21\u3059\nfor k in range(K):\n    num = int(input()) #\u304a\u83d3\u5b50\u306e\u756a\u53f7\n    have = [int(i) for i in input().split()]\n    for snuke in have:\n        okasi[snuke-1] = num\n\n#\u304a\u83d3\u5b50\u6301\u3063\u3066\u306a\u3044\u4eba\u3092\u63a2\u3059\nprint(okasi.count(0))", "import itertools\n\nN,K = map(int,input().split())\n# 2\u6b21\u5143\u914d\u5217\nd = []\nA = []\nfor i in range(K):\n\td.append(int(input()))\n\tarray = list(map(int, input().strip().split()))\n\tA.append(array)\n\n#A[][]\u304b\u3089\u306e\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3057\u3066\u91cd\u8907\u3057\u306a\u3044\u30ea\u30b9\u30c8X\u3092\u4f5c\u308a\u305f\u3044\nX=list(itertools.chain.from_iterable(A))\nX=list(set(X))\n\n#X\u306f\u304a\u83d3\u5b50\u3092\u3082\u3089\u3063\u305f\u4eba\u306e\u30ea\u30b9\u30c8\nprint(N-len(X))", "import itertools\n\nN,K=map(int,input().split())\nd=[]\nA=[]\nfor i in range(K):\n    d.append(int(input()))\n    A.append(list(map(int,input().split())))\nA=list(itertools.chain.from_iterable(A))\n\ncount=0\nfor i in range(1,N+1):\n    if not i in A:count+=1\nprint(count)", "N, K = map(int, input().split())\nnum = [0] * N\nfor _ in range(K):\n    d = int(input())\n    A = list(map(int, input().split()))\n    for a in A:\n        num[a - 1] += 1\nprint(num.count(0))\nreturn", "n, k= map(int, input().split())\n\nsunuke = [1] * n\n\nfor i in range(k):\n    d = int(input())\n    oka = map(int,input().split())\n    for j in oka:\n        sunuke[j-1] = 0\n        \nprint(sum(sunuke))", "N,K=map(int,input().split())\nC=[0]*(N+1)\n#print(C)\nfor i in range(K):\n  d=int(input())\n  A= list(map(int, input().split()))\n  for j in range(d):\n    C[(A[j])]+=1\n\n#print(C)\nprint(C.count(0)-1)", "N, K = list(map(int, input().split()))\n\ntable = [0] * N\nfor _ in range(K):\n  num = int(input())\n  have_list = list(map(int, input().split()))\n  for child in have_list:\n    table[child-1] += 1\n\nprint(str(table.count(0)))", "N, K = map(int, input().split())\ncount = 0\nnum_people = []\nnum_people_snacks = []\nfor i in range(1, N + 1):\n    num_people.append(i)\n\nwhile K > count:\n    d = int(input())\n    A = list(map(int, input().split()))\n    for k in A:\n        num_people_snacks.append(k)\n    count += 1\n\nans = 0\nfor j in range(N):\n    if num_people[j] not in num_people_snacks:\n        ans += 1\n        \nprint(ans)", "n,k = map(int, input().split())\na = [0]*n\nfor i in range(k):\n  c = int(input())\n  L = list(map(int, input().split()))\n  for l in L:\n    a[l-1] = 1\nprint(a.count(0))", "N, K = list(map(int, input().split()))\n\ndst = [1] * N\n\nfor i in range(K):\n    d = int(input())\n    A = list(map(int, input().split()))\n\n    for j in range(d):\n        dst[A[j]-1] = 0\n\nprint((sum(dst)))\n", "N,K = map(int ,input().split())\nD = []\nA = []\nfor _ in range(K):\n  D.append(int(input()))\n  A.append(list(map(int, input().split())))\n\n# \u304a\u83d3\u5b50\u3092\u6301\u3063\u3066\u3044\u308b\u4eba\u3092\u6570\u3048\u308b\u3002\u3059\u308b\u3068\u6301\u3063\u3066\u3044\u306a\u3044\u4eba\u9593\u306f\u3001N\u304b\u3089\u6301\u3063\u3066\u3044\u308b\u4eba\u306e\u6570\u3092\u5f15\u3044\u305f\u3082\u306e\nl = [0]*N\nfor i in range(K):\n  for j in range(D[i]):\n    l[A[i][j]-1] = 1\n\nprint(N - sum(l))", "n, k = map(int, input().split())\na = set({})\nfor i in range(k):\n  d = int(input())\n  for j in input().split():\n  \ta.add(j)\nprint(n - len(a))    ", "n, k = map(int, input().split())\nsnukes = [False] * n\nfor _ in range(k):\n\td = int(input())\n\ta = list(map(int, input().split()))\n\tA = [n-1 for n in a]\n\tfor i in range(d):\n\t\tsnukes[A[i]] = True\nprint(snukes.count(False)) ", "n, k = map(int, input().split())\nd =[]\na = []\nfor i in range(k):\n  d.append(int(input()))\n  a.append(list(map(int, input().split())))\n\na = sum(a, [])\ncount = 0\nfor i in range(n):\n  if i+1 in a:\n    continue\n  count+=1\n\nprint(count)", "import itertools\nn,k = map(int,input().split())\nans = 0\nl = []\nfor i in range(k) :\n    d = int(input())\n    l.append(input().split())\n\nl = list(itertools.chain.from_iterable(l))\nl = [int(i) for i in l]\n\nfor i in range(1,n+1) :\n    if not i in l :\n        ans += 1\nprint(ans)", "def __starting_point():\n\n    n,k = list(map(int,input().split()))\n\n    A = [0] * n\n\n    for _ in range(k):\n        m = int(input())\n        B = list(map(int,input().split()))\n        for b in B:\n            A[b-1] += 1\n    print((A.count(0)))\n\n__starting_point()", "n, k = list(map(int, input().split()))\nl1 = []\nsafe = []\nans = 0\nfor i in range(k):\n    d = int(input())  # \u304a\u83d3\u5b50\u3092\u6301\u3063\u3066\u308b\u4eba\u306e\u5408\u8a08\n    l = list(map(int, input().split()))\n    safe += l\nfor i in range(1, n+1):\n    if i not in list(set(safe)):\n        ans += 1\nprint(ans)\n", "a,b = map(int,input().split())\nw = []\nt = {}\nfor i in range(b):\n    c = int(input())\n    s = list(map(int,input().split()))\n    w +=s\nt = set(w)\nprint(a-len(t))", "n,k = map(int,input().split())\ntrick =[0]*n\nfor i in range(k):\n    d = int(input())\n    a = list(map(int,input().split()))\n    for i in range(d):\n        trick[a[i] - 1] = 1\nprint(trick.count(0))", "N,K=map(int,input().split())\nP=[1 for i in range(N)]\n\nfor i in range(K):\n    d=int(input())\n    a=list(map(int,input().split()))\n    for j in a:\n        x=j-1\n        P[x]=0\n\nprint(sum(P))", "n,k = map(int,input().split())\na = [0]*(n+1)\nanswer = 0\nfor i in range(k):\n  d = int(input())\n  b = list(map(int,input().split()))\n  for j in range(d):\n    a[b[j]] +=1\nfor q in range(1,n+1):\n  if(a[q]==0):\n    answer +=1\nprint(answer)", "n,k = list(map(int,input().split()))\n\nsunuke = [0]*n\n\nfor _ in range(k):\n    d = int(input())\n    a = list(map(int,input().split()))\n    if d <= 1:\n        sunuke[a[0]-1] += 1\n    else:\n        for i in range(d):\n            sunuke[a[i]-1] += 1\n\n#print(sunuke)\nprint((sunuke.count(0)))\n", "n,k = list(map(int, input().split()))\n\ns = {i:0 for i in range(n+1)} \n\nfor i in range(k):\n  d = int(input())\n  a = list(map(int, input().split()))\n  for i in a:\n    s[i] += 1\n\ncnt = -1\n\nfor i in s:\n  if s[i] == 0:\n    cnt +=1\n\nprint(cnt)\n\n", "N, K = list(map(int, input().split()))\na = [0]*N\nfor i in range(K):\n    d = int(input())\n    A = list(map(int, input().split()))\n    for l in A:\n        a[l-1] = 1\nprint((a.count(0)))\n", "n,k=map(int,input().split())\nL=[1]*n\nfor i in range(k):\n  d=int(input())\n  A=list(map(int,input().split()))\n  for a in A:\n    L[a-1] = 0\nprint(sum(L))", "N,K = map(int,input().split())\nd = [0 for _ in range(K)]\nA = [[] for _ in range(K)]\nfor i in range(K):\n    d[i] = int(input())\n    A[i] = list(map(int,input().split()))\nsu_list = [i for i in range(1,N+1)]\nfor i in range(K):\n    for j in range(d[i]):\n        if A[i][j] in su_list:\n            su_list.remove(A[i][j])        \nprint(len(su_list))", "N, K = list(map(int, input().split()))\nlst = list(range(1, N+1))\nfor _ in range(K):\n    d = int(input())\n    A = list(map(int, input().split()))\n    lst = list(set(lst) - set(A))\nprint((len(lst)))\n", "n,k=map(int,input().split());n,c=set(range(1,n+1)),set()\nfor i in range(k):\n  input();c|=set(map(int,input().split()))\nprint(len(n^c))", "n,k = map(int, input().split())\n\ns = set()\nfor _ in range(k):\n  _ = int(input())\n  arr = list(map(int, input().split()))\n  for a in arr:\n    s.add(a)\nprint(n-len(s))", "n, k = map(int, input().split())\ns = set()\nfor _ in range(k):\n    tmp = int(input())\n    arr = list(map(int, input().split()))\n\n    for a in arr:\n        s.add(a)\n\nprint(n - len(s))", "n,k=list(map(int,input().split()))\nd=[0]*k\nA=[]\n\nfor i in range(k):\n    d=int(input())\n    A+=list(map(int,input().split()))\n    list(set(A))\ncnt=0\nfor i in range(n):\n    if i+1 not in A:\n        cnt+=1\nprint(cnt)\n", "s,value = map(int,input().split())\nli = []\nfor j in range(s):\n    li.append(j+1)\n\nfor i in range(value):\n    n = int(input())\n    li_s = list(map(int,input().split()))\n    for k in range(n):\n        if li_s[k] in li:\n            li.remove(li_s[k])\n            \nprint(len(li))", "N, K = map(int, input().split())\n\nd = [0 for i in range(K)]\nA = []\nfor i in range(K):\n  d[i] = int(input())\n  A.append(list(map(int, input().split())))\n\ncandy = [0 for i in range(N)]\nfor i in range(K):\n  for j in range(d[i]):\n    candy[A[i][j]-1] += 1\nprint(candy.count(0))", "def N():\n    return int(input())\ndef L():\n    return list(map(int,input().split()))\ndef NL(n):\n    return [list(map(int,input().split())) for i in range(n)]\nmod = pow(10,9)+7\n#import numpy\nn,k = L()\nl = [1]*n\nfor i in range(k):\n    d = N()\n    a = L()\n    for j in a:\n        l[j-1] = 0\nprint(l.count(1))", "N, K = (int(x) for x in input().split())\nlistN = [1] * N\n# N is population / K is candy\nfor i in range(K):\n    d = int(input())\n    tmp = list(map(int, input().split()))\n    for j in tmp:\n        listN[j-1] = 0\nprint((sum(listN)))\n", "n,k = map(int,input().split())\nkl = [[] for i in range(k)]\nfor i in range(k):\n    d = int(input())\n    a = list(map(int,input().split()))\n    for j in range(d):\n        kl[i].append(a[j])\nsafe = 0\nfor i in range(1,n+1):\n    for j in range(k):\n      if i in kl[j]:\n        safe += 1\n        break\nprint(n-safe)", "n, k = list(map(int, input().split()))\n\nd = []\na = []\nfor i in range(k):\n    d.append(int(input()))\n    a.append(list(map(int, input().split())))\n#print(d)\n#print(a)\n\nlis = []\nfor i in range(k):\n    for j in range(len(a[i])):\n        lis.append(a[i][j])\nlis = set(lis)\nprint((n - len(lis)))\n", "def main():\n    n, k = list(map(int, input().split()))\n    d = set()\n    for i in range(k):\n        input()\n        d.update(list(map(int, input().split())))\n    print(n - len(d))\n\ndef __starting_point():\n    main()\n__starting_point()", "N,K = map(int,input().split())\nn_lis = [0]*N\nfor i in range(K):\n    d = int(input())\n    *A, = map(int,input().split())\n    for j in range(d):\n        a = A[j]\n        n_lis[a-1] = 1\nprint(n_lis.count(0))   ", "n,k = map(int,input().split())\nd = []\na = []\nfor i in range(k):\n    d.append(int(input()))\n    a.append(list(map(int,input().split())))\n\ncnt = 0\nfor i in range(1,n+1):\n    if i not in set(sum(a,[])):\n        cnt += 1\nprint(cnt)", "n, k = list(map(int, input().split()))\n\ns = []\n\nfor i in range(k):\n    d = int(input())\n    a = list(map(int, input().split()))\n    for i in range(d):\n        s.append(a[i])\n        \nt = sorted(s)\na = len(t)\nx = n\n\nfor i in range(n):\n    for k in range(a):\n        if i + 1 == t[k]:\n            x -= 1\n            break\n        elif i + 1 < t[k]:\n            break\n        \nprint(x)\n", "N, K = list(map(int, input().split()))\n\nns = {x for x in range(1, N + 1)}\n\nfor _ in range(K):\n    _ = input()\n    ns -= set(map(int, input().split()))\n\nprint((len(ns)))\n", "N,K = map(int,input().split())\nls = [0]*(N+1)\nfor i in range(K):\n    d = int(input())\n    ls1 = list(map(int,input().split()))\n    for j in ls1:\n        ls[j] += 1\nans = ls.count(0)-1\nprint(ans)", "def main() -> None:\n    n, k = list(map(int, input().split()))\n\n    check = [0] * n\n    for _ in range(k):\n        _ = input()\n        having = tuple(map(int, input().split()))\n        for idx in having:\n            check[idx-1] += 1\n    print((check.count(0)))\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, k = list(map(int, input().split()))\na = [1] * n\nfor i in range(k):\n    d = int(input())\n    tmp = list(map(int, input().split()))\n    for j in tmp:\n        a[j - 1] = 0\nprint((sum(a)))\n", "N,*D=open(0);print(int(N.split()[0])-len(set(sum([a.split()for a in D[1::2]],[]))))", "n,k=map(int,input().split());s=set(range(1,-~n))\nfor _ in range(k):\n input();s-=set(map(int,input().split()))\nprint(len(s))", "N,K = list(map(int,input().split()))\nans = [0]*N\ncount = 0\nfor i in range(K):\n  d = int(input())\n  array = list(map(int,input().split()))\n  for j in range(d):\n    ans[array[j] - 1] += 1\nfor k in ans:\n  if k == 0:\n    count += 1\nprint(count)\n   \n", "N,K = map(int,input().split())\nd = []\nA = []\nfor i in range(K):\n    p = int(input())\n    q = [int(i) for i in input().split()]\n    d.append(p)\n    A.append(q)\nS = [False]*N\nfor i in range(K):\n    for j in range(d[i]):\n        S[A[i][j]-1] = True\nprint(S.count(False))", "N, K = map(int, input().split())\nd = []\nA = []\nfor i in range(K) :\n    d.append(int(input()))\n    A.append(list(map(int,input().split())))\n\na = set()\nans = 0\nfor i in range(K) :\n    for j in range(len(A[i])) :\n        a.add(A[i][j])\n\nfor i in range(1,N+1):\n    if i not in a :\n        ans += 1\nprint(ans)", "N, K = map(int, input().split())\nd = [0]*K\nA = [0 for _ in range(K)]\nfor i in range(K):\n    d[i] = int(input())\n    A[i] = list(map(lambda x: int(x)-1, input().split()))\n\n\n#print(A)\nsunukes = [0]*N\nfor i in range(K):\n    for j in range(d[i]):\n        #print(A[i][j])\n        sunukes[A[i][j]] += 1\n#print(sunukes)\nans = 0\nfor s in range(N):\n    if sunukes[s] == 0:\n        ans += 1\n\nprint(ans)", "N,K=list(map(int,input().split()))\nd=[]\nA=[]\nfor _ in range(K):\n    d.append(int(input()))\n    A.append(list(map(int,input().split())))\ncnt=[0 for i in range(N)]\nfor i in range(K):\n    for a in A[i]:\n        cnt[a-1]+=1\nprint((cnt.count(0)))\n", "N,K=list(map(int, input().split()))\nnum_list = []\nfor i in range(2*K):\n    num_list.append(list(map(int,input().split())))\n\nlist1=[]\ns=0\nwhile s<2*K-1:\n    list1.append(num_list[s+1])\n    s=s+2\n\nlist2=[]\nfor i in range(K):\n    x=len(list1[i])\n    t=0\n    while t<x:\n        list2.append(list1[i][t])\n        t=t+1\n\nz=len(set(list2))\nprint((N-z))\n", "n,k=list(map(int,input().split()))\nans=[1]*n\nfor _ in range(k):\n    d=int(input())\n    li=list(map(int,input().split()))\n    for i in li:\n        ans[i-1]=0\nprint((sum(ans)))\n", "N,K=map(int,input().split())\nC=[0]*(N+1)\nfor i in range(K):\n  d=int(input())\n  A= list(map(int, input().split()))\n  for j in range(d):\n    C[(A[j])]+=1\nprint(C.count(0)-1)", "from typing import Union, List\n\n\ndef answer(n: int, k: int, da: List[Union[int, List[int]]]) -> int:\n    result = set()\n    for d, a in da:\n        result |= set(a)\n\n    return n - len(result)\n\n\ndef main():\n    n, k = map(int, input().split())\n    da = [[int(input()), list(map(int, input().split()))] for _ in range(k)]\n    print(answer(n, k, da))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "n, k = map(int, input().split())\nd = [0]*k\na = [0]*k\n\nfor i in range(k):\n    d[i] = int(input()) \n    a[i] = list(map(int, input().split()))\n\nans = [0]*100\n\nfor i in range(k):\n    for j in range(d[i]):\n        ans[a[i][j]-1] = 1\n\nprint(n-sum(ans))", "n, k = map(int, input().split())\nl = [0] * n\nfor i in range(k):\n    d = int(input())\n    x = list(map(int, input().split()))\n    for j in range(d):\n        l[x[j]-1] += 1\nprint(l.count(0))", "n, k = list(map(int, input().split()))\n\nsunukes = [0 for i in range(n)]\n\nfor i in range(k):\n    d = int(input())\n    aa = list(map(int, input().split()))\n\n    for j in range(d):\n        sunukes[aa[j] - 1] += 1\n\ncount = sum(1 for sunuke in sunukes if sunuke == 0)\n\nprint(count)\n", "n, k = list(map(int, input().split()))\n\nsunuke = [False] * n\n\nfor i in range(k):\n    d = int(input())\n    a = list(map(int, input().split()))\n\n    for j in range(d):\n        sunuke[a[j] - 1] = True \n\ncnt = 0\nfor i in range(n):\n    if sunuke[i] == False:\n        cnt += 1\n\nprint(cnt)\n", "n,k=map(int, input().split())\nall=[]\nfor i in range(k):\n    d=int(input())\n    a=list(map(int, input().split()))\n    all+=a\ns=list(set(all))\nprint(n-len(s))", "#ABC166\nn,k=map(int,input().split())\ncnt=[0]*(n+1)\nfor j in range(k):\n  tmp = int(input())\n  arr=list(map(int,input().split()))\n  for val in arr:\n    cnt[val]+=1\nans=0\nfor i in range(1,n+1):\n  if cnt[i]==0:\n    ans+=1\nprint(ans)", "import sys\nfrom collections import deque, defaultdict, Counter\nfrom itertools import accumulate, product, permutations, combinations\nfrom operator import itemgetter\nfrom bisect import bisect_left, bisect_right\nfrom heapq import heappop, heappush\nfrom math import ceil, floor, sqrt, gcd, inf\nfrom copy import deepcopy\nimport numpy as np\nimport scipy as sp\n\nINF = inf\nMOD = 1000000007\n\nn, k = [int(i) for i in input().split()]\nd = []\nA = []\nfor i in range(k):\n    d.append(int(input()))\n    A.append([int(i) for i in input().split()])\n\ntmp = [True for i in range(n + 1)]\nres = 0\n\nfor i in range(k):\n    for j in range(d[i]):\n        tmp[A[i][j]] = False\nfor i in range(1, n + 1):\n    if tmp[i]:\n        res += 1\n\nprint(res)\n", "N, K = list(map(int, input().split()))\n\ncnt = [0]*N\nfor k in range(K):\n  d = int(input())\n  A = list(map(int,input().split()))\n  for a in A:\n    cnt[a-1]+=1\nans = 0\nfor c in cnt:\n  if c==0: ans+=1\nprint(ans)\n", "# 166 B\nN, K = list(map(int, input().split()))\nA = []\nfor i in range(K):\n    d = int(input())\n    a = []\n    if d > 1:\n        a = list(map(int, input().split()))\n        A.extend(a)\n    else:\n        A.append(int(input()))\n        \nprint(N - len(set(A)))", "N, K = list(map(int, input().split()))\n\nd = [None] * K\nsunuke = [0] * N\nA = []\nfor i in range(K):\n    d[i] = int(input())\n    A.append(list(map(int, input().split())))\n\nfor members in A:\n    for member in members:\n        sunuke[member - 1] = 1\n\nprint((N - sum(sunuke)))\n", "N, K = map(int, input().split())\n\ntreat = [0] * N\n\nfor _ in range(K):\n    d = int(input())\n    A = list(map(int, input().split()))\n    for a in A:\n        treat[a-1] += 1\n\nprint(treat.count(0))", "N, K = list(map(int, input().split()))\nl = []\n\nfor i in range(K):\n    d = int(input())\n    A = list(map(int, input().split()))\n    l.extend(A)\n\nprint((N - len(set(l))))\n\n\n", "n,k=[int(i) for i in input().split()]\na=[0 for i in range(n)]\nfor i in range(k):\n    x=input()\n    t=[int(i) for i in input().split()]\n    for j in t:\n        a[j-1]+=1\nans=0\nfor i in a:\n    if i==0:\n      ans+=1\nprint(ans)\n", "import sys\ndef input(): return sys.stdin.readline().rstrip()\n\nN, K = list(map(int,input().split()))\n\nd = []\nA = []\n\nfor i in range(K):\n    x = int(input())\n    d.append(x)\n    a = list(map(int,input().split()))\n    A.append(a)\n\nvec = [0] * N\n\nfor a in A:\n    for i in a:\n        i -= 1\n        vec[i] += 1\n\nans = 0\nfor i in range(N):\n    if vec[i] == 0:\n        ans += 1\n\nprint(ans)\n        \n    \n\n\n", "n,k=map(int,input().split())\nans=[1]+[0]*n\nfor i in range(k):\n    d=int(input())\n    l=list(map(int,input().split()))\n    for i in l:\n        ans[i]=1\nprint(ans.count(0))", "from collections import defaultdict\nn, k = map(int, input().split())\nm = defaultdict(int)\n\nfor _ in range(k):\n  input()\n  for x in input().split():\n    m[int(x)] += 1\n\nresult = 0\nfor i in range(1, n+1):\n  if m[i] == 0:\n    result += 1\nprint(result)", "import collections\nn, k = map(int, input().split())\nsunukes = [0]*n\n\nfor i in range(k):\n  d = int(input())\n  aa = list(map(int, input().split()))\n  for a in aa:\n    sunukes[a-1] += 1\nc = collections.Counter(sunukes)\n\nans = c[0]\n\nprint(ans)", "N,K=map(int,input().split())\nans=list()\nfor i in range(K):\n  D=int(input())\n  L=list(map(int,input().split()))\n  ans+=L\n  ans=list(set(ans))\nprint(N-len(ans))", "n,k = input().split()\n\nh = {}\nfor i in range(int(n)):\n  h[int(i)+1] = 0\n\nfor i in range(int(k)):\n  input()\n  tmp = input().split()\n  \n  for j in tmp:\n    h[int(j)] += 1\n    \ncount = 0\nfor i,j in h.items():\n  if j == 0:\n    count += 1\nprint(count)", "radi=input()\nlist=radi.split(\" \")\nN=int(list[0])\nK=int(list[1])\nempty=\"\"\nfor items in range(K):\n    koyjon=input()\n    empty+=input()+\" \"\nnew=empty.split()\nemp=[]\nfor i in new:\n    if i not in emp:\n        emp.append(i)\nprint((N-len(emp)))\n\n\n", "import numpy as np\nn,k = list(map(int, input().split()))\nl = [0 for i in range(n)]\nfor i in range(k):\n    d = int(input())\n    a = list(map(int,input().split()))\n    for j in a:\n        l[j-1] = 1\n\nprint((l.count(0)))\n", "N,K=map(int,input().split())\nsunuke = [0]*N\n\nfor _ in range(K):\n    d = int(input())\n    temp = list(map(int,input().split()))\n    for j in temp:\n        sunuke[j-1]+=1\n\nans = 0\nfor k in range(len(sunuke)):\n    if sunuke[k] == 0:\n        ans +=1\nprint(ans)", "import math\ndef i_input(): return int(input())\ndef i_map(): return list(map(int, input().split()))\ndef i_list(): return list(map(int, input().split()))\ndef i_row(N): return [int(input()) for _ in range(N)]\ndef i_row_list(N): return [list(map(int, input().split())) for _ in range(N)]\n\nmnum,snum=i_map()\nsnholder=set()\nfor i in range(snum):\n    d=i_input()\n    ls=i_list()\n    snholder=snholder | set(ls)\nprint((mnum-len(snholder)))\n\n"]