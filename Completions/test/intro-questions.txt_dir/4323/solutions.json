["#      \nimport collections, atexit, math, sys\nfrom functools import cmp_to_key\n#key=cmp_to_key(lambda x,y: 1 if x not in y else -1 )\n\nsys.setrecursionlimit(1000000)\ndef getIntList():\n    return list(map(int, input().split()))    \n\nimport bisect \ntry :\n    #raise ModuleNotFoundError\n    import numpy\n    def dprint(*args, **kwargs):\n        print(*args, **kwargs, file=sys.stderr)\n    dprint('debug mode')\nexcept ModuleNotFoundError:\n    def dprint(*args, **kwargs):\n        pass\n\n\ndef memo(func):  \n    cache={}  \n    def wrap(*args):  \n        if args not in cache:  \n            cache[args]=func(*args)  \n        return cache[args]  \n    return wrap\n\n@memo\ndef comb (n,k):\n    if k==0: return 1\n    if n==k: return 1\n    return comb(n-1,k-1) + comb(n-1,k)\n\ninId = 0\noutId = 0\nif inId>0:\n    dprint('use input', inId)\n    sys.stdin = open('input'+ str(inId) + '.txt', 'r') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\nif outId>0:\n    dprint('use output', outId)\n    sys.stdout = open('stdout'+ str(outId) + '.txt', 'w') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\n    atexit.register(lambda :sys.stdout.close())     #idle \u4e2d\u4e0d\u4f1a\u6267\u884c atexit\n    \nN, M = getIntList()\ntotal = 0\nzz = [0 for i in range(N)]\nfor i in range(N):\n    a,b = getIntList()\n    total+=a\n    zz[i] = a-b\n\nzz.sort(reverse = True)\nif total <= M:\n    print(0)\n    return\nfor i in range(N):\n    total -= zz[i]\n    if total <= M:\n        print(i+1)\n        return\n\nprint(-1)\n\n\n\n", "n, m = list(map(int, input().split()))\nsum_a = 0\nsum_b = 0\narr = []\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    sum_a += a\n    sum_b += b\n    arr.append(a - b)\nif sum_a <= m:\n    print(0)\nelif sum_b > m:\n    print(-1)\nelse:\n    arr.sort(reverse=True)\n    ans = 0\n    i = 0\n    while sum_a > m:\n        ans += 1\n        sum_a -= arr[i]\n        i += 1\n    print(ans)\n", "n, m = [int(i) for i in input().split()]\ndiff = []\ns = 0\nfor i in range(n):\n    a, b = [int(j) for j in input().split()]\n    diff.append(a - b)\n    s += a\ndiff.sort()\nans = 0\nfor i in reversed(range(n)):\n    if s <= m:\n        break\n    s -= diff[i]\n    ans += 1\nif s <= m:\n    print(ans)\nelse:\n    print(-1)", "def go():\n    n, m = [int(i) for i in input().split(' ')]\n    s_a = 0\n    s_b = 0\n    c = []\n    for i in range(n):\n        data = [int(i) for i in input().split(' ')]\n        s_a += data[0]\n        s_b += data[1]\n        c.append(data[0] - data[1])\n    if s_b > m:\n        return -1\n\n    x = s_a\n    i = 0\n    c = list(sorted(c, reverse=True))\n    while x > m:\n        x -= c[i]\n        i += 1\n\n    return i\n\nprint(go())\n", "n, m = list(map(int, input().split()))\ns = []\nk = 0\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    m -= a\n    s.append(a - b)\ns.sort(reverse = True)\nwhile (m < 0) and (k < n):\n    m += s[k]\n    k += 1\nif m < 0:\n    print(-1)\nelse:\n    print(k)\n", "n,m=list(map(int,input().split()))\ns=[]\ns1=[]\nfor i in range(n):\n    a,b=list(map(int,input().split()))\n    s.append(a)\n    s1.append(a-b)\nx=sum(s)\ns1.sort()\nans=0\nwhile x>m and len(s1)>0:\n    ans+=1\n    x-=s1[-1]\n    s1.pop()\nif x>m:\n    print(-1)\nelse:\n    print(ans)\n", "n,money=map(int,input().split())\nans=[]\nfor _ in range(n):\n    a,b=map(int,input().split())\n    ans.append([a,b,a-b])\ns=0\nfor i in range(len(ans)):\n    s=s+ans[i][0]\nm=[]\nfor i in range(len(ans)):\n    m.append(ans[i][2])\nm.sort(reverse=True)\nif s<=money:\n    print(0)\nelif s-sum(m)>money:\n    print(-1)\nelse:\n    c=0\n    for i in range(len(m)):\n        c+=1\n        s=s-m[i]\n        if s<=money:\n            break\n    print(c)", "n, m = list(map(int,input().split()))\na = []\ns = 0\nfor i in range(n):\n    k, b = list(map(int,input().split()))\n    s += k\n    a.append(k - b)\na.sort(reverse=True)\nans = 0\nfor i in range(n):\n    if s <= m:\n        print(ans)\n        return\n    s -= a[i]\n    ans += 1\nif s <= m:\n    print(ans)\nelse:\n    print(-1)\n", "nbMusiques, taille = map(int, input().split())\ntableau = []\nsomme = 0\n\nfor i in range(nbMusiques):\n   avant, apres = map(int, input().split())\n   somme += avant\n   tableau.append(avant-apres)\n\ntableau.sort()\n\nif somme <= taille:\n   print(0)\n\nelse:\n   for i in range(nbMusiques):\n      somme -= tableau[nbMusiques-1-i]\n   \n      if somme <= taille:\n         print(i+1)\n         break\n   \n   if somme > taille:\n      print(-1)", "n, m = map(int, input().split())\ninf = 0\nszhat = [0]*n\nfor i in range(n):\n    a, b = map(int,input().split())\n    inf += a\n    szhat[i] = (a-b)\nszhat.sort()\np = [0] * (n+1)\nfor i in range(1, n+1):\n    p[i] = p[i-1] + szhat[-i]\nif inf - p[n] > m:\n    print(-1)\nelse:\n    L, R = -1, n\n    while R - L > 1:\n        med = (R+L)//2\n        if inf - p[med] > m:\n            L = med\n        else:\n            R = med\n    print(R)", "n, m = map(int, input().split())\na = []\nb = []\nfor i in range(n):\n    x, y = map(int, input().split())\n    a.append(x)\n    b.append(y)\nif sum(b) > m:\n    print(-1)\nelse:\n    c = [a[i] - b[i] for i in range(len(a))]\n    c.sort()\n    s = sum(b)\n    res = 0\n    for i in c:\n        if s + i <= m:\n            res += 1\n            s += i\n        else:\n            break\n    print(n - res)", "n,size=map(int,input().split())\nli=[]\nfor _ in range(n):\n    a,b=map(int,input().split())\n    li.append((a,b,a-b))\nsum=0;sum1=0\nfor i in range(n):\n    sum+=li[i][1]\n    sum1+=li[i][0]\nif sum>size:\n    print(-1)\n    return\nif(sum1<=size):\n    print(0)\n    return\nli.sort(key=lambda x:x[2],reverse=True)\ndif=sum1-size\ncount=0\nfor i in range(n):\n    if dif<=0:\n        break\n    dif-=li[i][2]\n    count+=1\nprint(count)", "n,size=map(int,input().split())\npot=list()\ntot=0\nfor i in range(n):\n    a,b=map(int,input().split())\n    pot.append(a-b)\n    tot+=a\npot.sort()\npot=pot[::-1]\ncpt=0\nwhile(tot>size and cpt<len(pot)):\n    tot-=pot[cpt]\n    cpt+=1\nif(tot>size):print(-1)\nelse:print(cpt)", "n, m = list(map(int, input().split()))\n\na = []\nb = []\n\nnon_compressed = 0\ncompressed = 0\nsaves = []\n\nfor i in range(n):\n    ai, bi = list(map(int, input().split()))\n    non_compressed += ai\n    compressed += bi\n    saves.append(ai - bi)\n\nif ( compressed > m ):\n    print(-1)\nelse:\n    saves.sort(reverse=True)\n    z = 0\n    while ( non_compressed > m ):\n        non_compressed -= saves[z]\n        z = z + 1\n    print(z)\n", "n, m = list(map(int, input().split()))\nsumb = 0\nsuma = 0\ns = []\nsumschat = 0\nk = 0\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    s.append(a - b)\n    sumb = sumb + b\n    suma = suma + a\nif sumb > m:\n    print(-1)\nelse:\n    i = 0\n    s.sort(reverse = True)\n    while sumschat < suma - m:\n        sumschat = sumschat + s[i]\n        i = i + 1\n        k = k + 1\n    print(k)\n", "import sys\n\nn, m = map(int, sys.stdin.readline().split())\nsong = [None]*n\nsomme = 0\nfor loop in range(n):\n    d, f = map(int, sys.stdin.readline().split())\n    somme += d\n    song[loop] = d-f\nsong.sort(reverse=True)\ntotal = 0\nwhile total < n and somme > m:\n    somme-= song[total]\n    total += 1\nif somme > m:\n    print(-1)\nelse:\n    print(total)", "cnt, memory = list(map(int, input().split()))\ndeltas = [0] * cnt\nmusics = []\ncurr_memory = 0\nfor ind in range(cnt):\n    full, small = list(map(int, input().split()))\n    musics.append([full, small])\n    curr_memory += full\n    deltas[ind] = full - small\n\ndeltas.sort()\ncount_changes = 0\nsteps = 0\nwhile curr_memory > memory and steps < cnt:\n    curr_memory -= deltas[cnt - steps - 1]\n    steps += 1\n\nif curr_memory <= memory:\n    print(steps)\nelse:\n    print(-1)\n", "n, m = list(map(int, input().split()))\nd = []\nnsum = 0\nfor _ in range(n):\n    a, b = list(map(int, input().split()))\n    d.append(a-b)\n    nsum += a\nd.sort(reverse = True)\nans = 0\nfor i in range(n):\n    if nsum <= m:\n        print(ans)\n        return\n    else:\n        nsum -= d[i]\n        ans += 1\nprint(-1 if nsum > m else ans)\n", "n, m = list(map(int, input().split()))\nA = [0] * n\nz = 0\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    z += a\n    A[i] = b - a\nA.sort()\nk = 0\nfor i in range(n):\n    if z <= m:\n        break\n    k += 1\n    z += A[i]\nif z <= m:\n    print(k)\nelse:\n    print(-1)\n", "# from math import ceil\n#from sys import stdout\n\nt = 1#int(input())\nfor test in range(1,t+1):\n    n,m = list(map(int, input().split()))\n    a = 0\n    b = 0\n    c = []\n    for i in range(n):\n        l,r = list(map(int, input().split()))\n        a+=l\n        b+=r\n        c.append(l-r)\n    if b>m:\n        print(-1)\n    else:\n        c.sort(reverse = True)\n        diff = a-m\n        ans = 0\n        ind = 0\n        while diff>0:\n            diff -= c[ind]\n            ind+=1\n            ans+=1\n        print(ans)\n\n\n\n\n\n\n\n\n\n\n\n    \n", "n, m  = list(map(int, input().split()))\n\npo = []\nps = []\ndiffs = []\n\nfor i in range(n):\n    a, b =  list(map(int, input().split()))\n    po.append(a)\n    ps.append(b)\n    diffs.append(a-b)\ntlen  = sum(po)\ntslen = sum(ps)\n\ndiffs.sort(reverse = True)\n\nif sum(po) <= m:\n    print(0)\n    return\nif sum(ps) > m:\n    print(-1)\n    return\n\nr = sum(po)\ncnt = 0\nfor d in diffs:\n    cnt += 1\n    r -= d\n    if r<=m:\n        print(cnt)\n        return\n\n\n\n", "import sys\ns=input().split()\nn=int(s[0])\nm=int(s[1])\nsiz=0\ndec=[None]*n\nfor i in range(n):\n    s=input().split()\n    siz+=int(s[0])\n    dec[i]=int(s[1])-int(s[0])\ndec.sort()\nif siz<=m:\n    print(0)\n    return\nfor i in range(n):\n    siz+=dec[i]\n    if siz<=m:\n        print(i+1)\n        return\nprint(-1)", "n, m = [int(x) for x in str(input()).split(' ', 1)]\na = []\nb = []\nd = []\nfor _ in range(n):\n    lx, rx = [int(x) for x in str(input()).split(' ', 1)]\n    a.append(lx)\n    b.append(rx)\n    d.append(lx - rx)\nif sum(b) > m:\n    print(-1)\n    return\nif sum(a) <= m:\n    print(0)\n    return\ns = sum(a)\nfor i, v in enumerate(sorted(d, reverse=True)):\n    s -= v\n    if s <= m:\n        print(i + 1)\n        break", "from sys import stdin,stdout\n\ndef main():\n   n,m=list(map(int,stdin.readline().split()))\n   A=[0 for _ in range(n)]\n   B=[0 for _ in range(n)]\n   \n   for i in range(n):\n      A[i],B[i]=list(map(int,stdin.readline().split()))\n   \n   tot=sum(A)\n   C=[A[i]-B[i] for i in range(n)]\n   C.sort()\n   \n   i=0\n   while i<n and tot>m:\n      i+=1\n      tot-=C[-i]\n   \n   if tot<=m:\n       stdout.write('{}'.format(i))\n   else:\n      stdout.write(\"-1\")\n\nmain()\n", "\ndef mi():\n\treturn map(int, input().split())\n\nn,m = mi()\ndiff = [0]*n\ns1 = 0\ns2 = 0\nfor i in range(n):\n\tn1, n2 = mi()\n\ts1+=n1\n\ts2+=n2\n\tdiff[i] = n1-n2\ndiff.sort()\nif s2>m:\n\tprint (-1)\nelse:\n\tdiff.sort(reverse=True)\n\tc = 0\n\tfor i in diff:\t\n\t\tif s1<=m:\n\t\t\tbreak\n\t\ts1-=i\n\t\tc+=1\n\tprint (c)"]