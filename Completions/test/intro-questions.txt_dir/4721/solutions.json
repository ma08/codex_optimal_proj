["a, b = map(int, input().split())\nprint((a - 1) * (b - 1))", "n,m = map(int,input().split())\n\nprint((n-1)*(m-1))", "m, n = map(int, input().split())\nprint((m - 1) * (n - 1))", "a,b = map(int,input().split())\nprint((a-1)*(b-1))", "x,y=map(int,input().split())\n\nprint((x-1)*(y-1))", "n, m = list(map(int, input().split()))\nprint(((n-1)*(m-1)))\n", "n,m=map(int,input().split())\nprint((n-1)*(m-1))", "#\n# abc069 a\n#\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"3 4\"\"\"\n        output = \"\"\"6\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"2 2\"\"\"\n        output = \"\"\"1\"\"\"\n        self.assertIO(input, output)\n\n\ndef resolve():\n    n, m = list(map(int, input().split()))\n    print(((n-1)*(m-1)))\n\n\ndef __starting_point():\n    # unittest.main()\n    resolve()\n\n__starting_point()", "nums = list(map(int, input().split()))\nprint((nums[0] - 1) * (nums[1] - 1))", "n, m = map(int, input().split())\nprint((n-1) * (m-1))", "n,m = map(int,input().split())\nprint((n-1)*(m-1))", "N,M=map(int,input().split())\nprint((N-1)*(M-1))", "n, m = list(map(int, input().split()))\nprint(((n - 1) * (m - 1)))\n", "a,b=map(int,input().split())\nprint((a-1)*(b-1))", "n,m = map(int,input().split())\nprint((n - 1)*(m - 1))", "n, m = map(int, input().split())\nprint((n-1)*(m-1))", "n, m = map(int, input().split())\nans = (n-1)*(m-1)\nprint(ans)", "n,m = map(int,input().split())\n  \nprint((n-1)*(m-1))  ", "a,b=map(int,input().split())\nprint((a-1)*(b-1))", "n,m=map(int,input().split())\nprint((n-1)*(m-1))", "n, m = map(int,input().split())\n\nprint((n - 1) * (m - 1))", "a,b=map(int,input().split())\nprint((a-1)*(b-1))", "a,b = map(int,input().split())\nprint((a-1)*(b-1))", "n,m = list(map(int, input().split()))\nprint(( (n-1)*(m-1) ))\n", "n,m = map(int,input().split())\nprint((n-1)*(m-1))", "n,m=map(int,input().split())\nprint((n-1)*(m-1))", "n, m = map(int, input().split())\nans = (n - 1) * (m - 1)\n\nprint(ans)", "n, m = map(int, input().split())\nprint(~-n * ~-m)", "a,b = map(int, input().split())\nprint((a-1)*(b-1))", "n, m = map(int,input().split())\nprint((n-1)*(m-1))", "n,m = map(int,input().split())\n\nprint((n+1)*(m+1)-2*(n+1)-(m+1-2)*2)", "n,m = map(int,input().split())\nprint((n-1)*(m-1))", "n,m=map(int,input().split())\nprint((n-1)*(m-1))", "a,b=map(int,input().split(\" \"))\nprint((a-1)*(b-1))", "n,m=map(int, input().split())   \nprint((n-1)*(m-1))", "n,m=map(int,input().split())\nprint((n-1)*(m-1))", "n, m = map(int, input().split())\nprint((n-1)*(m-1))", "a,b=list(map(int,input().split()))\nprint(((a-1)*(b-1)))\n", "n, m = map(int, input().split())\nprint((n-1)*(m-1))", "n,m = map(int, input().split())\nprint((n-1)*(m-1))", "a, b = map(int, input().split())\na -= 1\nb -= 1\nprint(a * b)", "n, m = map(int, input().split())\nprint((n - 1) * (m - 1))", "N,M=list(map(int,input().split()))\nprint(((N-1)*(M-1)))\n", "n,m = map(int,input().split())\nprint((n-1)*(m-1))", "N, M = map(int, input().split())\nprint((N-1)*(M-1))", "x,y=map(int,input().split())\nprint((x-1)*(y-1))", "n,m=map(int,input().split())\nprint((n-1)*(m-1))", "a, b = map(int, input().split())\n\nprint((a - 1) * (b - 1))", "n, m = map(int, input().split())\nprint((n - 1) * (m - 1))", "n, m = list(map(int,input().split(\" \")))\nprint(((n - 1) * (m - 1)))\n", "n, m = map(int, input().split())\nprint((n-1)*(m-1))", "n, m = map(int, input().split())\n\nprint((n-1) * (m-1))", "a,b=map(int,input().split())\nprint((a-1)*(b-1))", "a, b = map(int, input().split())\na = a-1\nb = b-1\nprint(a*b)", "a, b = map(int, input().split())\nprint((a-1) * (b-1))", "n,m=map(int,input().split())\nprint((n-1)*(m-1))", "n, m = list(map(int, input().split()))\nprint(((n - 1) * (m - 1)))\n", "a,b=map(int,input().split())\nprint((a-1)*(b-1))", "n,m = map(int,input().split())\nprint((n-1)*(m-1))", "a, b = map(int, input().split())\nprint((a-1) * (b-1))", "n,m = map(int,input().split())\nprint((n-1)*(m-1))", "n,m =map(int,input().split())\nprint((n-1)*(m-1))", "N, M = map(int, input().split())\nprint((N-1)*(M-1))", "#n = int(input())\nn,m = map(int,input().split())\n#l = list(map(int,input().split()))\n#l = [list(map(int,input().split())) for i in range(n)]\nprint((m-1)*(n-1))", "m,n = map(int,input().split())\nprint((m-1)*(n-1))", "n, m= map(int, input().split())\nprint((n-1)*(m-1))", "n,m = list(map(int,input().split()))\nprint(((n-1)*(m-1)))\n", "a = input().split()\nb,c =  int(a[0]),int(a[1])\nprint((b-1)*(c-1))", "a, b = input().split()\n\nprint((int(a) - 1) * (int(b) - 1))", "n,m=map(int,input().split())\nprint((n-1)*(m-1))", "W, H = map(int, input().split())\nprint((W-1)*(H-1))", "N,M=map(int,input().split())\nprint((N-1)*(M-1))", "n,m=map(int,input().split())\nprint((n-1)*(m-1))", "n,m=map(int,input().split());print((n-1)*(m-1))", "n,m=map(int,input().split())\nprint((n-1)*(m-1))", "n, m = list(map(int, input().split()))\n\nprint(((n - 1) * (m - 1)))\n", "n, m = list(map(int, input().split()))\nprint(((n - 1) * (m - 1)))\n", "def iroha():\n    a, b = list(map(int, input().split()))\n    print(((a-1)*(b-1)))\n\ndef __starting_point():\n    iroha()\n\n\n__starting_point()", "n, m = map(int, input().split())\n\narea = (n - 1) * (m - 1)\nprint(area)", "a,b = map(int, input().split())\nprint((a-1)*(b-1))", "a,b = map(int,input().split())\nprint((a-1) * (b-1))", "a,b=input().split()\na=int(a)\nb=int(b)\nprint((a-1)*(b-1))", "a,b=map(int,input().split())\nprint((a-1)*(b-1))", "n,m = [int(x) for x in input().split()]\nprint((n-1)*(m-1))", "a,b = map(int,input().split())\nprint((a-1) * (b-1))", "a,b=map(int,input().split())\nprint((a-1)*(b-1))", "#!/usr/bin/env python3\n\ndef main():\n    n, m = list(map(int, input().split()))\n    print(((n - 1) * (m - 1)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, m = list(map(int, input().split()))\nprint(((n-1)*(m-1)))\n", "n, m = map(int, input().split())\n\nif n == 1 or m == 1:\n    print(0)\nelse:\n    print((n - 1) * (m - 1))", "lst = input().split()\nprint((int(lst[0]) - 1) * (int(lst[1]) - 1))", "x,y =map(int,input().split())\nprint((x-1)*(y-1))", "'''\nABC069 A - K-City\nhttps://atcoder.jp/contests/abc069/tasks/abc069_a\n'''\nn, m = list(map(int, input().split()))\nans = (n-1)*(m-1)\nprint(ans)\n", "n, m = map(int, input().split())\n\nans = (n-1) * (m-1)\nprint(ans)", "with open(0) as f:\n    n, m = map(int, f.read().split())\nprint((n-1)*(m-1))", "n, m = map(int, input().split())\nprint((n - 1) * (m - 1))", "N,M = map(int,input().split())\nprint((N-1)*(M-1))", "a,b=map(int,input().split())\n\nprint((a-1)*(b-1))", "n, m = map(int, input().split())\nprint((n-1)*(m-1))", "n, m = list(map(int, input().split()))\n# D = list(map(int,input().split()))\n# S = input()\n# X1_list = [int(input()) for i in range(N)]\n# X2_list = [list(map(int,input().split())) for i in range(N)]\n\nprint(((n - 1) * (m - 1)))\n", "a, b = map(int, input().split())\nprint((a-1)*(b-1))"]