["a,b,c,d = map(int,input().split())\nab = a + b\ncd = c + d\nif ab > cd:\n    print('Left')\nelif ab < cd:\n    print('Right')\nelse:\n    print('Balanced')", "A,B,C,D=map(int,input().split())\nif A+B>C+D :\n  print(\"Left\")\nelif A+B==C+D :\n  print(\"Balanced\")\nelse :\n  print(\"Right\")", "A,B,C,D=map(int,input().split())\nif A+B>C+D:\n  print(\"Left\")\nelif A+B<C+D:\n    print(\"Right\")\nelse:\n  print(\"Balanced\")", "a,b,c,d=map(int,input().split())\na += b\nc += d\nif a>c:\n    print('Left')\nelif a < c:\n    print('Right')\nelse:\n    print('Balanced')", "A, B, C, D = map(int, input().split())\n\nif (A + B) > (C + D):\n    print(\"Left\")\nelif (A + B) < (C + D):\n    print(\"Right\")\nelse:\n    print(\"Balanced\")", "A, B, C, D = map(int, input().split())\n\nif A + B > C + D: print('Left')\nelif A + B == C + D: print('Balanced')\nelse: print('Right')", "a, b, c, d = map(int, input().split())\nl = a+b\nr = c+d\nif l > r:\n  print('Left')\nelif l < r:\n  print('Right')\nelse:\n  print('Balanced')", "a,b,c,d = map(int,input().split())\n\nif a+b > c+d:\n  print('Left')\nelif a+b == c+d:\n  print('Balanced')\nelse:\n  print('Right')", "A, B, C, D = list(map(int,input().split()))\nif A + B < C + D:\n  print(\"Right\")\nelif A + B == C + D:\n  print(\"Balanced\")\nelse:\n  print(\"Left\")\n", "a, b, c, d = map(int,input().split())\nif a+b==c+d:\n    print(\"Balanced\")\nelif a+b>c+d:\n    print(\"Left\")\nelse:\n    print(\"Right\")", "a, b, c, d = (int(x) for x in input().split())\nif a + b > c + d:\n    print('Left')\nelif a + b < c + d:\n    print('Right')\nelse:\n    print('Balanced')", "a, b, c, d = list(map(int, input().split()))\nleft = a + b\nright = c + d\n\nif left == right:\n    print('Balanced')\nelif left > right:\n    print('Left')\nelse:\n    print('Right')\n", "A,B,C,D=list(map(int,input().split()))\nif A+B>C+D:\n    print(\"Left\")\nelif A+B<C+D:\n    print(\"Right\")\nelse:\n    print(\"Balanced\")\n", "A, B, C, D = list(map(int, input().split()))\nif A + B > C + D:\n    print('Left')\nelif A + B < C + D:\n    print('Right')\nelse:\n    print('Balanced')\n", "a,b,c,d = map(int,input().split())\nprint(\"Left\" if a+b>c+d else \"Right\" if a+b<c+d else \"Balanced\")", "# \u4e0a\u76bf\u5929\u79e4\u306f\u3001\u5de6\u306e\u76bf\u306b\u4e57\u3063\u3066\u3044\u308b\u304a\u3082\u308a\u306e\u91cd\u3055\u306e\u5408\u8a08\u3092 L \u3068\u3057\u3001\n# \u53f3\u306e\u76bf\u306b\u4e57\u3063\u3066\u3044\u308b\u304a\u3082\u308a\u306e\u91cd\u3055\u306e\u5408\u8a08\u3092 R \u3068\u3057\u305f\u3068\u304d\u3001\n# L > R \u306a\u3089\u5de6\u306b\u50be\u304d\u3001 L = R \u306a\u3089\u91e3\u308a\u5408\u3044\u3001\n# L < R \u306a\u3089\u53f3\u306b\u50be\u304d\u307e\u3059\u3002\n#\n# \u9ad8\u6a4b\u541b\u306f\u3001\u4e0a\u76bf\u5929\u79e4\u306e\u5de6\u306e\u76bf\u306b\u91cd\u3055 A \u306e\u304a\u3082\u308a\u3068\u91cd\u3055 B \u306e\u304a\u3082\u308a\u3092\u3001\n# \u53f3\u306e\u76bf\u306b\u91cd\u3055 C \u306e\u304a\u3082\u308a\u3068\u91cd\u3055 D \u306e\u304a\u3082\u308a\u3092\u7f6e\u304d\u307e\u3057\u305f\u3002\n#\n# \u4e0a\u76bf\u5929\u79e4\u304c\u5de6\u306b\u50be\u304f\u306a\u3089 Left \u3092\u3001\n# \u91e3\u308a\u5408\u3046\u306a\u3089 Balanced \u3092\u3001\n# \u53f3\u306b\u50be\u304f\u306a\u3089 Right \u3092\u51fa\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u5236\u7d04\n# 1 \u2266 A, B, C, D \u2266 10\n# \u5165\u529b\u306f\u3059\u3079\u3066\u6574\u6570\u3067\u3042\u308b\n\n# \u6a19\u6e96\u5165\u529b\u304b\u3089 A, B, C ,D \u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\na, b, c, d = list(map(int, input().split()))\n\n# \u4e0a\u76bf\u5929\u79e4\u306e\u72b6\u614b\u3092\u5224\u5b9a\u3057\u3001\u7d50\u679c\u3092\u51fa\u529b\u3059\u308b\nresult = \"ret\"\n\nif (a + b) > (c + d):\n    result = \"Left\"\nelif (a + b) < (c + d):\n    result = \"Right\"\nelse:\n    result = \"Balanced\"\n\nprint(result)\n", "a,b,c,d=map(int,input().split())\n\nif a+b>c+d:\n    ans=\"Left\"\nelif a+b<c+d:\n    ans=\"Right\"\nelse:\n    ans=\"Balanced\"\nprint(ans)", "left1, left2, right1, right2 = map(int, input().split())\nif right1 + right2 > left1 + left2:\n    print('Right')\nelif right1 + right2 < left1 + left2:\n    print('Left')\nelse:\n    print('Balanced')", "a,b,c,d = map(int,input().split())\nL = a+b\nR = c+d\nprint(\"Left\" if L>R else \"Right\" if R>L else \"Balanced\")", "# \u5165\u529b\nA, B, C, D = list(map(int, input().split()))\n\n# \u51fa\u529b\nif 1 <= A and B and C and D <= 10:\n    if A + B == C + D:\n        print('Balanced')\n    elif A + B > C + D:\n        print('Left')\n    elif A + B < C + D:\n        print('Right')\n", "a,b,c,d=map(int,input().split())\nif a+b>c+d:print('Left')\nelif a+b<c+d:print('Right')\nelse:print('Balanced')", "a,b,c,d=(int(x) for x in input().split())\ne = int(a) + int(b)\nf = int(c) + int(d)\nif e > f:\n    print('Left')\nelif e < f:\n    print('Right')\nelse:\n    print('Balanced')", "a,b,c,d=map(int,input().split())\n\nl=a+b;r=c+d\n\nif l<r:\n  print('Right')\n  \nelif l>r:\n  print('Left')\n  \nelse:\n  print('Balanced')", "# \u4e0a\u76bf\u5929\u79e4\u306f\u3001\u5de6\u306e\u76bf\u306b\u4e57\u3063\u3066\u3044\u308b\u304a\u3082\u308a\u306e\u91cd\u3055\u306e\u5408\u8a08\u3092 L \u3068\u3057\u3001\n# \u53f3\u306e\u76bf\u306b\u4e57\u3063\u3066\u3044\u308b\u304a\u3082\u308a\u306e\u91cd\u3055\u306e\u5408\u8a08\u3092 R \u3068\u3057\u305f\u3068\u304d\u3001\n# L > R \u306a\u3089\u5de6\u306b\u50be\u304d\u3001 L = R \u306a\u3089\u91e3\u308a\u5408\u3044\u3001\n# L < R \u306a\u3089\u53f3\u306b\u50be\u304d\u307e\u3059\u3002\n#\n# \u9ad8\u6a4b\u541b\u306f\u3001\u4e0a\u76bf\u5929\u79e4\u306e\u5de6\u306e\u76bf\u306b\u91cd\u3055 A \u306e\u304a\u3082\u308a\u3068\u91cd\u3055 B \u306e\u304a\u3082\u308a\u3092\u3001\n# \u53f3\u306e\u76bf\u306b\u91cd\u3055 C \u306e\u304a\u3082\u308a\u3068\u91cd\u3055 D \u306e\u304a\u3082\u308a\u3092\u7f6e\u304d\u307e\u3057\u305f\u3002\n#\n# \u4e0a\u76bf\u5929\u79e4\u304c\u5de6\u306b\u50be\u304f\u306a\u3089 Left \u3092\u3001\n# \u91e3\u308a\u5408\u3046\u306a\u3089 Balanced \u3092\u3001\n# \u53f3\u306b\u50be\u304f\u306a\u3089 Right \u3092\u51fa\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u5236\u7d04\n# 1 \u2266 A, B, C, D \u2266 10\n# \u5165\u529b\u306f\u3059\u3079\u3066\u6574\u6570\u3067\u3042\u308b\n\n# \u6a19\u6e96\u5165\u529b\u304b\u3089 A, B, C ,D \u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\na, b, c, d = list(map(int, input().split()))\n\n# \u4e0a\u76bf\u5929\u79e4\u306e\u72b6\u614b\u3092\u5224\u5b9a\u3057\u3001\u7d50\u679c\u3092\u51fa\u529b\u3059\u308b\nresult = \"ret\"\n\nif (a + b) > (c + d):\n    result = \"Left\"\nelif (a + b) < (c + d):\n    result = \"Right\"\nelse:\n    result = \"Balanced\"\n\nprint(result)\n", "# 083_a\nA,B,C,D=list(map(int,input().split()))\nif (1<=A and A<=10)and(1<=B and B<=10)and(1<=C and C<=10)and(1<=D and D<=10):\n    L=A+B\n    R=C+D\n    if L>R:\n        print('Left')\n    elif L==R:\n        print('Balanced')\n    elif L<R:\n        print('Right')\n", "S = input()\nS_list = S.split()\n\nL = int(S_list[0]) + int(S_list[1])\nR = int(S_list[2]) + int(S_list[3])\n \nif L-R>0:\n    print(\"Left\")\nelif L-R<0:\n    print(\"Right\")\nelse:\n    print(\"Balanced\")", "a, b, c, d = (int(x) for x in input().split())\nif a+b > c+d:\n    ans = 'Left'\nelif a+b < c+d:\n    ans = 'Right'\nelse:\n    ans = 'Balanced'\nprint(ans)", "# A - Libra\n# https://atcoder.jp/contests/abc083/tasks/abc083_a\n\nA, B, C, D = list(map(int, input().split()))\n\nab = A + B\ncd = C + D\nresult = 'Balanced'\n\nif ab > cd:\n    result = 'Left'\nelif ab < cd:\n    result = 'Right'\n\nprint(result)\n", "a = list(map(int, input().split()))\na = a[0] + a[1] - a[2] - a[3]\nif a == 0:\n    print('Balanced')\nelif a > 0:\n    print('Left')\nelse:\n    print('Right')\n", "a,b,c,d = [int(x) for x in input().split()]\nif a+b == c+d:\n  print(\"Balanced\")\nelif a+b > c+d:\n  print(\"Left\")\nelse:\n  print(\"Right\")", "A, B, C, D = map(int, input().split())\nif A + B == C + D:\n    print(\"Balanced\")\nelif A + B < C + D:\n    print(\"Right\")\nelse:\n    print(\"Left\")", "a, b, c, d = map(int, input().split())\nif a + b > c + d:\n    print('Left')\nelif a + b < c + d:\n    print('Right')\nelse:\n    print('Balanced')", "a,b,c,d=map(int,input().split())\nif a+b==c+d:\n    print(\"Balanced\")\nelif a+b>=c+d:\n    print(\"Left\")\nelse:\n    print(\"Right\")", "a,b,c,d = map(int,input().split())\ne,f=a+b,c+d\nif e<f:\n    print(\"Right\")\nelif e==f:\n    print(\"Balanced\")\nelse:\n    print(\"Left\")", "import math\n# s=int(input())\n# b=input()\n# c=[]\n# for i in range(b):\n#     c.append(a[i])\na = list(map(int,input().split()))\n#b = list(map(int,input().split()))\n\nif a[0]+a[1]<a[2]+a[3]:\n    print(\"Right\")\nelif a[0]+a[1]==a[2]+a[3]:\n    print(\"Balanced\")\nelif a[0]+a[1]>a[2]+a[3]:\n    print(\"Left\")", "a, b, c, d = list(map(int, input().split()))\nif a+b > c+d:\n    print('Left')\nelif a+b == c+d:\n    print('Balanced')\nelse:\n    print('Right')\n", "a, b, c, d = map(int, input().split())\nif a+b > c+d:\n  print(\"Left\")\nelif a+b == c+d:\n  print(\"Balanced\")\nelse:\n  print(\"Right\")", "A,B,C,D = map(int, input().split())\nif A+B > C + D:\n    print('Left')\nelif A+B < C+ D:\n    print('Right')\nelse:\n    print('Balanced')", "a, b, c, d = list(map(int, input().split()))\nleft = a+b\nright = c+d\nprint((['Balanced', 'Left', 'Right'][left > right or -(right > left)]))\n\n", "a,b,c,d=map(int,input().split())\nif a+b>c+d:\n  print(\"Left\")\nelif a+b==c+d:\n  print(\"Balanced\")\nelse:\n  print(\"Right\")", "a,b,c,d=map(int,input().split())\nif a+b<c+d:\n  print(\"Right\")\nelif a+b>c+d:\n  print(\"Left\")\nelse:\n  print(\"Balanced\")", "a, b, c, d = map(int,input().split())\n\nL = a + b\nR = c + d\n\nprint(\"Left\" if L > R else \"Balanced\" if L == R else \"Right\")", "a,b,c,d = map(int,input().split())\n\nif a+b > c+d:\n  print('Left')\n  \nelif a+b < c+d:\n  print('Right')\n  \nelse:\n  print('Balanced')", "# \u5404\u9318\u306e\u91cd\u91cf\u3092\u53d6\u5f97\nA,B,C,D = map(int,input().split())\n\n# \u5de6\u3068\u53f3\u306e\u76bf\u306e\u91cd\u3055\u3092\u8a08\u7b97\nLWeight = A + B\nRWeight = C + D\n\n# \u6bd4\u8f03\u7d50\u679c\u306b\u3082\u3069\u3065\u3044\u3066\u5404\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u529b\nif LWeight > RWeight:\n    print(\"Left\")\nelif LWeight < RWeight:\n    print(\"Right\")\nelse:\n    print(\"Balanced\")", "#\n# abc083 a\n#\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"3 8 7 1\"\"\"\n        output = \"\"\"Left\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"3 4 5 2\"\"\"\n        output = \"\"\"Balanced\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_3(self):\n        input = \"\"\"1 7 6 4\"\"\"\n        output = \"\"\"Right\"\"\"\n        self.assertIO(input, output)\n\n\ndef resolve():\n    A, B, C, D = list(map(int, input().split()))\n    if A+B > C+D:\n        print(\"Left\")\n    elif A+B < C+D:\n        print(\"Right\")\n    else:\n        print(\"Balanced\")\n\n\ndef __starting_point():\n    # unittest.main()\n    resolve()\n\n__starting_point()", "A, B, C, D = map(int, input().split())\nif A + B > C + D:\n    print('Left')\nelif A + B < C + D:\n    print('Right')\nelse:\n    print('Balanced')", "a, b, c, d = map(int, input().split())\n\nleft = a + b\nright = c + d\n\nif left > right:\n    print(\"Left\")\nelif left == right:\n    print(\"Balanced\")\nelse:\n    print(\"Right\")", "# A - Libra\n\n# \u5929\u79e4\u306e\u5de6\u306e\u76bf\u306b\u304a\u3082\u308aA,B\u3092\u3001\u53f3\u306e\u76bf\u306b\u304a\u3082\u308aB,D\u3092\u8f09\u305b\u305f\u5834\u5408\u3001\n# \u5929\u79e4\u304c\u3069\u3061\u3089\u306b\u50be\u304f\u304b\u3092\u51fa\u529b\u3059\u308b\n\n\nA,B,C,D = list(map(int,input().split()))\n\nleft_dish = A + B\nright_dish = C + D\n\nif left_dish > right_dish:\n    print('Left')\nelif left_dish < right_dish:\n    print('Right')\nelif left_dish == right_dish:\n    print('Balanced')\n", "a, b, c, d = map(int, input().split())\nx = a + b\ny = c + d\nif x == y:\n  print('Balanced')\nelif x > y:\n  print('Left')\nelse:\n  print('Right')", "a, b, c, d = map(int, input().split())\nz = a + b - c - d\nif z > 0:\n    print('Left')\nelif z < 0:\n    print('Right')\nelse:\n    print('Balanced')", "a,b,c,d = list(map(int,input().split()))\nif a+b>c+d:\n  print(\"Left\")\nelif a+b==c+d:\n  print(\"Balanced\")\nelse:\n  print(\"Right\")\n", "#   AtCoder abc083 a\n#   \u30b9\u30c8\u30ec\u30c3\u30c1\u8ab2\u984c\n\n#   \u5165\u529b\na, b, c, d = list(map(int, input().split()))\n\n#   \u5224\u5b9a\ndiff = (a + b) - (c + d)\nif diff == 0:\n    print(\"Balanced\")\nelif diff > 0:\n    print(\"Left\")\nelse:\n    print(\"Right\")\n", "left_a, left_b, right_a, right_b = list(map(int, input().split()))\n\nleft_weight = left_a + left_b\nright_weight = right_a + right_b\n\nif left_weight == right_weight:\n    print('Balanced')\nelif left_weight > right_weight:\n    print('Left')\nelif right_weight > left_weight:\n    print('Right')\n", "def mapt(fn, *args):\n    return tuple(map(fn, *args))\n\n\ndef Input():\n    return mapt(int, input().split(\" \"))\n\n\ndef main():\n    a, b, c, d = Input()\n    x, y = a + b, c + d\n    \n    if   x > y: print(\"Left\")\n    elif x < y: print(\"Right\")\n    else:       print(\"Balanced\")\n\n\nmain()", "A,B,C,D = map(int, input().split())\nif A+B > C+D:\n  print(\"Left\")\nelif A+B == C+D:\n  print(\"Balanced\")\nelse:\n  print(\"Right\")", "A, B, C, D = map(int, input().split())\n\nL = A + B\nR = C + D\n\nif L > R:\n    print(\"Left\")\nelif L == R:\n    print(\"Balanced\")\nelse:\n    print(\"Right\")", "a,b,c,d=map(int,input().split(\" \"))\nprint(\"Balanced\") if a+b==c+d else print(\"Right\") if a+b<c+d else print(\"Left\")", "import bisect, collections, copy, heapq, itertools, math, string, sys\ninput = lambda: sys.stdin.readline().rstrip() \nsys.setrecursionlimit(10**7)\nINF = float('inf')\ndef I(): return int(input())\ndef F(): return float(input())\ndef SS(): return input()\ndef LI(): return [int(x) for x in input().split()]\ndef LI_(): return [int(x)-1 for x in input().split()]\ndef LF(): return [float(x) for x in input().split()]\ndef LSS(): return input().split()\n\ndef resolve():\n    A, B, C, D = LI()\n\n    L = A + B\n    R = C + D\n    if L == R:\n        print('Balanced')\n    elif L > R:\n        print('Left')\n    else:\n        print('Right')\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "a, b, c, d=map(int,input().split())\nif a+b<c+d:\n  print(\"Right\")\nelif a+b==c+d:\n  print(\"Balanced\")\nelse:\n  print(\"Left\")", "a,b,c,d=map(int,input().split())\nif (a+b)<(c+d):\n    print(\"Right\")\nelif (a+b)>(c+d):\n    print(\"Left\")\nelse:\n    print(\"Balanced\")", "A,B,C,D =map(int,input().split())\nif A+B == C+D:\n    print(\"Balanced\")\nelse:\n    print((\"Left\",\"Right\")[A+B <C+D])", "a,b,c,d = list(map(int,input().split()))\n\nif a+b > c+d:\n    print('Left')\nelif a+b == c+d:\n    print('Balanced')\nelse:\n    print('Right')\n", "A,B,C,D = map(int,input().split())\n\nL = A + B\nR = C + D\n\nif L > R:\n    print('Left')\n\nelif L == R:\n    print('Balanced')\n\nelse:\n    print('Right')", "A, B, C, D = map(int, input().split())\nif A+B < C+D:\n    print(\"Right\")\nelif A+B > C+D:\n    print(\"Left\")\nelse:\n    print(\"Balanced\")", "a,b,c,d=map(int,input().split())\nif a+b>c+d:\n  print(\"Left\")\nelif a+b<c+d:\n  print('Right')\nelse:\n  print('Balanced')", "a, b, c, d = list(map(int, input().split()))\nif a + b > c + d:\n    print(\"Left\")\nelif a + b == c + d:\n    print(\"Balanced\")\nelse:\n    print(\"Right\")\n", "a,b,c,d=input().split()\na=int(a)\nb=int(b)\nc=int(c)\nd=int(d)\nif a+b==c+d:\n  print(\"Balanced\")\nif a+b>c+d:\n  print(\"Left\")\nif a+b<c+d:\n  print(\"Right\")", "a,b,c,d = list(map(int,input().split()))\nif a + b  > c + d:\n  print(\"Left\")\nelif a + b == c + d:\n  print(\"Balanced\")\nelse:\n  print(\"Right\")\n\n", "a = input().split()\na = [int(j) for j in a]\na.append(a[:2])\na.append(a[2:4])\nif sum(a[4]) > sum(a[5]):\n    print(\"Left\")\nif sum(a[4]) == sum(a[5]):\n    print(\"Balanced\")\nif sum(a[4]) < sum(a[5]):\n    print(\"Right\")", "# \u5165\u529b\nA, B, C, D = map(int,input().split())\n\n# \u51e6\u7406\nif A + B == C + D:\n    print('Balanced')\nelif A + B > C + D:\n    print('Left')\nelse:\n    print('Right')", "a, b, c, d = map(int, input().split())\n\nL = a + b\nR = c + d\n\nif L > R:\n    print('Left')\nelif L < R:\n    print('Right')\nelse:\n    print('Balanced')", "A, B, C, D = map(int, input().split())\n\nL = A + B\nR = C + D\n\nif L > R:\n    print('Left')\nelif L < R:\n    print('Right')\nelse:\n    print('Balanced')", "a,b,c,d = map(int,input().split())\n#lis = list(map(int,input().split()))\nif a+b>c+d:print(\"Left\")\nelif a+b<c+d:print(\"Right\")\nelse:print(\"Balanced\")", "import sys\n\nA, B, C, D = list(map(int, input().split()))\n\nif A+B > C+D:\n    print(\"Left\")\nelif A+B == C+D:\n    print(\"Balanced\")\nelse:\n    print(\"Right\")", "# A,B,C,D\u306e\u304a\u3082\u308a\u306e\u91cd\u3055\u3092\u6574\u6570\u3067\u5165\u529b\nA,B,C,D = map(int,input().split())\nif A + B > C + D:\n# \u5de6\u306e\u76bf\uff08A+B\uff09\u306e\u65b9\u304c\u91cd\u3044\u306a\u3089Left\u3001\u540c\u3058\u306a\u3089Balanced\u3001\u5de6\u306e\u76bf\uff08C+D\uff09\u304c\u91cd\u3044\u306a\u3089Right\u3092\u51fa\u529b\n    print(\"Left\")\nelif A + B == C + D:\n    print(\"Balanced\")\nelse:\n    print(\"Right\")", "a,b,c,d=(int(x) for x in input().split())\ne = int(a) + int(b)\nf = int(c) + int(d)\nif e > f:\n    print('Left')\nelif e < f:\n    print('Right')\nelse:\n    print('Balanced')", "a,b,c,d=map(int,input().split())\n\nprint('Left') if a+b>c+d else print('Right') if a+b<c+d else print('Balanced')", "a,b,c,d=map(int, input().split())\nprint(\"Left\" if c+d<a+b else \"Right\" if c+d>a+b else \"Balanced\")", "a,b,c,d = map(int,input().split())\nprint(\"Left\" if a+b > c+d else \"Right\" if a+b < c+d else \"Balanced\")", "a,b,c,d=map(int,input().split())\nprint(\"Left\" if a+b>c+d else \"Balanced\" if a+b==c+d else \"Right\")", "a,b,c,d = map(int, input().split())\nprint('Left' if (a+b) > (c+d) else 'Balanced' if (a+b) == (c+d) else 'Right')", "a,b,c,d=map(int,input().split())\nif a+b==c+d:\n    print(\"Balanced\")\nelif a+b>c+d:\n    print(\"Left\")\nelse:\n    print(\"Right\")", "# 4\u3064\u306e\u304a\u3082\u308a\u3067\u5929\u79e4\u306e\u91cd\u3055\u6bd4\u3079\n\nA, B, C, D = map(int, input().split())\nL = A + B\nR = C + D\n\nif L > R:\n    print('Left')\nelif L == R:\n    print('Balanced')\nelse:\n    print('Right')", "a, b, c, d = list(map(int, input().split()))\n\nif a + b < c + d:\n    print(\"Right\")\nelif c + d < a + b:\n    print(\"Left\")\nelse:\n    print(\"Balanced\")\n", "A, B, C, D = map(int, input().split())\nAB = A + B\nCD = C + D\n\nif AB > CD:\n    print('Left')\nelif AB < CD:\n    print('Right')\nelse:\n    print('Balanced')", "A, B, C, D = map(int, input().split())\nif A+B == C+D:\n    print('Balanced')\nelif A+B > C+D:\n    print('Left')\nelse:\n    print('Right')", "A, B, C, D = map(int, input().split())\n\nif A + B > C + D:\n  print('Left')\nelif A + B == C + D:\n  print('Balanced')\nelse:\n  print('Right')", "a,b,c,d = map(int,input().split())\nif a+b > c + d:\n    print(\"Left\")\nelif a+b == c+d:\n    print(\"Balanced\")\nelse:\n    print(\"Right\")", "lst = input().split()\n\nd = (int(lst[0]) + int(lst[1])) - (int(lst[2]) + int(lst[3]))\n\nif d == 0:\n   print('Balanced')\nelif 0 < d:\n   print('Left')\nelse:\n   print('Right')", "x,y,z,w =map(int,input().split())\nprint(\"Left\" if x+y>z+w else \"Right\" if x+y<z+w else \"Balanced\")", "a, b, c, d = map(int, input().split())\nl = a + b\nr = c + d\nif l > r:\n    print('Left')\nelif l < r:\n    print('Right')\nelse:\n    print('Balanced')", "import sys\nmapin = lambda: map(int, sys.stdin.readline().split())\nlistin = lambda: list(map(int, sys.stdin.readline().split()))\ninp = lambda: sys.stdin.readline()\nA,B,C,D = mapin()\nl = A + B;r = C + D\nif l < r:print(\"Right\")\nelif l > r:print(\"Left\")\nelse:print(\"Balanced\")", "a,b,c,d = list(map(int, input().split()))\nif sum((a,b)) > sum((c,d)):\n    print(\"Left\")\nelif sum((a,b)) < sum((c,d)):\n    print(\"Right\")\nelse:\n    print(\"Balanced\")", "A, B, C, D = map(int, input().split())\nprint('Right' if C + D > A + B else 'Left' if C + D < A + B else 'Balanced')", "# 083a\n\nA, B, C, D = list(map(int, input().split()))\n\nif A + B == C + D:\n    print('Balanced')\nelif A + B > C + D:\n    print('Left')\nelse:\n    print('Right')\n", "a, b, c, d = map(int, input().split())\nif a + b > c + d:\n    print(\"Left\")\nelif a + b < c + d:\n    print(\"Right\")\nelif a + b == c + d:\n    print(\"Balanced\")", "a, b, c, d = map(int, input().split())\nleft = a + b \nright = c + d\n\nif left > right:\n    print('Left')\nelif left == right:\n    print('Balanced')\nelse:\n    print('Right')", "A, B, C, D = map(int,input().split())\n\nif A + B > C + D:\n    print(\"Left\")\nelif A + B < C + D:\n    print(\"Right\")\nelse:\n    print(\"Balanced\")", "import bisect,collections,copy,heapq,itertools,math,string\nimport sys\ndef I():\n    #1 line 1 int\n     return int(sys.stdin.readline().rstrip())\ndef LI():\n    #1 line n int\n     return list(map(int,sys.stdin.readline().rstrip().split()))\ndef S():\n    #1 line 1 string\n     return sys.stdin.readline().rstrip()\ndef LS():\n    #1 line n strings\n     return list(sys.stdin.readline().rstrip().split())\n\nA,B,C,D,=LI()\n\nif A + B > C + D:\n    print(\"Left\")\nelif A + B == C + D:\n    print(\"Balanced\")\nelse:\n    print(\"Right\")", "#!/usr/bin/env python3\nimport sys\nsys.setrecursionlimit(10**6)\n\na, b, c, d = list(map(int, input().split()))\n\ne = a+b\nf = c+d\nif e > f:\n    print(\"Left\")\nif e == f:\n    print(\"Balanced\")\nif e < f:\n    print(\"Right\")\n"]