["S = input()\nW = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nprint(7-W.index(S))", "S = str(input())\n\nday = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\", \"SUN\"]\nprint(7 - day.index(S))", "print(['SUN','MON','TUE','WED','THU','FRI','SAT'][::-1].index(input())+1)", "S = input()\nweek = [\"SUN\",\"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\nfor i in range(7):\n  if week[i] == S:\n    print(7 - i)", "week = [\"SAT\",\"FRI\",\"THU\",\"WED\",\"TUE\",\"MON\",\"SUN\"]\nday = input()\nprint(week.index(day)+1)", "s=input()\nif s==\"SUN\":\n    print(7)\nelif s==\"MON\":\n    print(6)\nelif s==\"TUE\":\n    print(5)\nelif s==\"WED\":\n    print(4)\nelif s==\"THU\":\n    print(3)\nelif s==\"FRI\":\n    print(2)\nelse:\n    print(1)", "S = input()\n\n# \u8f9e\u66f8\u578b\u3092\u4f7f\u3046\u3068\u30b9\u30c3\u30ad\u30ea\u66f8\u3051\u308b\uff01\ndic = {'SUN': 7, 'MON': 6, 'TUE': 5, 'WED': 4, 'THU': 3, 'FRI': 2, 'SAT': 1}\nprint(dic[S])", "S = input()\nDAY = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nfor num in range(7):\n  if DAY[num] == S:\n    print((7-num))\n", "S=['SUN','MON','TUE','WED','THU','FRI','SAT']\nprint(7-S.index(input()))", "s=input()\nif s==\"SUN\":\n    print(7)\nelif s==\"SAT\":\n    print(1)\nelif s==\"FRI\":\n    print(2)\nelif s==\"THU\":\n    print(3)\nelif s==\"WED\":\n    print(4)\nelif s==\"TUE\":\n    print(5)\nelif s==\"MON\":\n    print(6)", "s=input()\nif 'SU' in s:\n  print('7')\nif 'MO' in s:\n  print('6')\nif 'TU' in s:\n  print('5')\nif 'WE' in s:\n  print('4')\nif 'TH' in s:\n  print('3')\nif 'FR' in s:\n  print('2')\nif 'SA' in s:\n  print('1')\n", "week = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\ns = input()\nans = 7 - week.index(s)\nans = ans if ans != 0 else 7\nprint(ans)", "days = [\"SUN\",\n        \"MON\",\n        \"TUE\",\n        \"WED\",\n        \"THU\",\n        \"FRI\",\n        \"SAT\"]\n\nS = input()\n\nprint(7-days.index(S))", "S = input()\n\nif S == \"SUN\":\n    print(7)\nelif S == \"MON\":\n    print(6)\nelif S == \"TUE\":\n    print(5)\nelif S == \"WED\":\n    print(4)\nelif S == \"THU\":\n    print(3)\nelif S == \"FRI\":\n    print(2)\nelse:\n    print(1)", "import sys\nstdin=sys.stdin\n\nip=lambda: int(sp())\n\nlp=lambda:list(map(int,stdin.readline().split()))\nsp=lambda:stdin.readline().rstrip()\n\ns=sp()\n\nif s=='SUN':\n  print((7))\nelif s=='MON':\n  print((6))\n  \nelif s=='TUE':\n  print((5))\nelif s=='WED':\n  print((4))\nelif s=='THU':\n  print((3))\n  \nelif s=='FRI':\n  print((2))\nelse:\n  print((1))\n", "s=input()\nif(s==\"SUN\"):\n     print((7))\nelif(s==\"MON\"):\n     print((6))\nelif(s==\"TUE\"):\n     print((5))\nelif(s==\"WED\"):\n     print((4))\nelif(s==\"THU\"):\n     print((3))\nelif(s==\"FRI\"):\n     print((2))\nelif(s==\"SAT\"):\n     print((1))\n", "# \u554f\u984c\uff1ahttps://atcoder.jp/contests/abc146/tasks/abc146_a\n\nweek = ['SUN','MON','TUE','WED','THU','FRI','SAT']\ns = input()\nfor i, day in enumerate(week):\n    if day == s:\n        res = 7 - i\n        break\nres = 7 - i\nprint(res)\n", "s = input()\n\nweek = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\n\nidx = week.index(s)\nprint(7-idx)", "s=input()\na=[\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nprint((7-a.index(s)))\n", "a = input()\n\nif a == \"SUN\":\n    print(\"7\")\n\nelif a == \"MON\":\n    print(\"6\")\n\nelif a == \"TUE\":\n    print(\"5\")\n\nelif a == \"WED\":\n    print(\"4\")\n\nelif a == \"THU\":\n    print(\"3\")\n\nelif a == \"FRI\":\n    print(\"2\")\n\nelif a == \"SAT\":\n    print(\"1\")", "Week = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\nS = input()\nprint(7 - Week.index(S))", "S = input()\nif S == 'SUN': print(7)\nelif S == 'MON': print(6)\nelif S == 'TUE': print(5)\nelif S == 'WED': print(4)\nelif S == 'THU': print(3)\nelif S == 'FRI': print(2)\nelif S == 'SAT': print(1) ", "ls = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nS = input()\nprint(7-ls.index(S))", "S = input()\nl = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\",\"SAT\"]\nprint((7 - l.index(S)))\n", "s = input()\n\nif s == 'SAT':\n    print(1)\nif s == 'FRI':\n    print(2)\nif s == 'THU':\n    print(3)\nif s == 'WED':\n    print(4)\nif s == 'TUE':\n    print(5)\nif s == 'MON':\n    print(6)\nif s == 'SUN':\n    print(7)", "T = ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']\nS = input()\nprint(6-T.index(S) if S!='SUN' else 7)", "\ns = str(input())\nif s == \"SUN\":\n    print((7))\n    return()\nif s == \"MON\":\n    print((6))\n    return()\nif s == \"TUE\":\n    print((5))\n    return()\nif s == \"WED\":\n    print((4))\n    return()\nif s == \"THU\":\n    print((3))\n    return()\nif s == \"FRI\":\n    print((2))\n    return()\nif s == \"SAT\":\n    print((1))\n    return()\n", "S=input()\nday=[\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nfor i in range(7):\n    if day[i]==S:\n        print((7-i))\n", "import sys\n\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninl = lambda: [int(x) for x in sys.stdin.readline().split()]\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print(\"\\033[33m\", *a, \"\\033[0m\", **dict(file=sys.stderr, **kw))\n\nd = {\n    \"SAT\": 1,\n    \"FRI\": 2,\n    \"THU\": 3,\n    \"WED\": 4,\n    \"TUE\": 5,\n    \"MON\": 6,\n    \"SUN\": 7,\n}\n\n\ndef solve():\n    S = ins()\n    return d[S]\n\n\nprint(solve())\n", "S=input()\nl=[\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\n\nfor i in range(len(l)):\n\tif S==l[i]:\n\t\tprint(7-i)\n\t\tbreak", "S = input()\nif S == 'SUN': print(7)\nelif S == 'MON': print(6)\nelif S == 'TUE': print(5)\nelif S == 'WED': print(4)\nelif S == 'THU': print(3)\nelif S == 'FRI': print(2)\nelse: print(1) ", "s = input()\ndl = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nfor i in range(7):\n  if s == dl[i]:\n    print(7-i)", "S = input()\nif(S == \"SUN\"):\n    print(7)\nif(S == \"MON\"):\n    print(6)\nif(S == \"TUE\"):\n    print(5)\nif(S == \"WED\"):\n    print(4)\nif(S == \"THU\"):\n    print(3)\nif(S == \"FRI\"):\n    print(2)\nif(S == \"SAT\"):\n    print(1)", "list = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\n\ns = input()\n\ni = list.index(s)\nanswer = 7 - i\n\nprint(answer)", "d=dict()\nd[\"SUN\"]=7\nd[\"MON\"]=6\nd[\"TUE\"]=5\nd[\"WED\"]=4\nd[\"THU\"]=3\nd[\"FRI\"]=2\nd[\"SAT\"]=1\ns=input()\nprint(d[s])", "S = input()\nyoubi = ['SAT', 'FRI', 'THU', 'WED', 'TUE', 'MON', 'SUN']\nprint(youbi.index(S) + 1)", "n = str(input())\ndic = {\"SUN\":7,\n       \"MON\":6,\n       \"TUE\":5,\n       \"WED\":4,\n       \"THU\":3,\n       \"FRI\":2,\n       \"SAT\":1}\nprint(dic[str(n)])", "s=input()\n\nif s==\"SUN\":\n  print(7)\nelif s==\"MON\":\n  print(6)\nelif s==\"TUE\":\n  print(5)\nelif s==\"WED\":\n  print(4)\nelif s==\"THU\":\n  print(3)\nelif s==\"FRI\":\n  print(2)\nelif s==\"SAT\":\n  print(1)", "a = input()\nif a == 'SUN':\n  print((7))\nelif a == 'MON':\n  print((6))\nelif a == 'TUE':\n  print((5))\nelif a == 'WED':\n  print((4))\nelif a == 'THU':\n  print((3))\nelif a == 'FRI':\n  print((2))\nelse:\n  print((1))\n\n", "yobi = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\n\nS = input()\n\nprint(7 - yobi.index(S))", "day = ['SUN','MON','TUE','WED','THU','FRI','SAT']\ns = input()\nfor i in range(7):\n    if s == day[i]:\n        print(7-i)", "S=input()\nif S==\"SUN\":\n    print(7)\nelif S==\"MON\":\n    print(6)\nelif S==\"TUE\":\n    print(5)\nelif S==\"WED\":\n    print(4)\nelif S==\"THU\":\n    print(3)\nelif S==\"FRI\":\n    print(2)\nelif S==\"SAT\":\n    print(1)", "s = input()\nl = [\"SAT\",\"FRI\",\"THU\",\"WED\",\"TUE\",\"MON\",\"SUN\"]\nprint(l.index(s) + 1)", "#ABC146A\ns = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nss = input()\nprint(7-s.index(ss))", "S = input()\nweek = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\",\"FRI\",\"SAT\"]\n\nprint(7 - week.index(S))", "S = input()\n\nd = {'SUN':7,'MON':6,'TUE':5,'WED':4,'THU':3,'FRI':2,'SAT':1}\nprint((d[S]))\nreturn()\n\n", "s = input()\na = {\"SUN\":7, \"MON\":6, \"TUE\":5, \"WED\":4, \"THU\":3, \"FRI\":2, \"SAT\":1}\nprint(a[s])", "S = str(input())\n\nif S == 'SUN':\n    print(7)\nelif S == 'MON':\n    print(6)\nelif S == 'TUE':\n    print(5)\nelif S == 'WED':\n    print(4)\nelif S == 'THU':\n    print(3)\nelif S == 'FRI':\n    print(2)\nelse:\n    print(1)", "s=input()\n\nif s=='SUN':\n    print((7))\nif s=='MON':\n    print((6))\nif s=='TUE':\n    print((5))\nif s=='WED':\n    print((4))\nif s=='THU':\n    print((3))\nif s=='FRI':\n    print((2))\nif s=='SAT':\n    print((1))\n", "s = input()\nl = [\"SAT\", \"FRI\", \"THU\", \"WED\", \"TUE\", \"MON\", \"SUN\"]\nprint(l.index(s)+1)", "#!/usr/bin/env python3\n\nwd = \"SUN MON TUE WED THU FRI SAT\".split()\nwd = list(reversed(wd))\n\ndef solve(S: str):\n    idx = wd.index(S)\n    return idx+1\n\n\ndef main():\n    S = input().strip()\n    answer = solve(S)\n    print(answer)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "l = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\ns = input()\nprint((7 - l.index(s)))\n", "import sys\n\n\ndef resolve(in_):\n    S = next(in_).strip()\n    _weekday = {0: 'SUN', 1: 'MON', 2: 'TUE', 3: 'WED', 4: 'THU', 5: 'FRI', 6: 'SAT'}\n    weekday = {v: 7 - k for k, v in list(_weekday.items())}\n\n    return weekday[S]\n\n\ndef main():\n    answer = resolve(sys.stdin)\n    print(answer)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "d={'SUN':1,'MON':2,'TUE':3,'WED':4,'THU':5,'FRI':6,'SAT':7}\ntoday_key = input()\ntoday_value = d[today_key]\nnextsunday_value = 8-today_value\nprint(nextsunday_value)", "s = input()\nif s==\"SUN\":\n    print(7)\nelif s==\"MON\":\n    print(6)\nelif s==\"TUE\":\n    print(5)\nelif s==\"WED\":\n    print(4)\nelif s==\"THU\":\n    print(3)\nelif s==\"FRI\":\n    print(2)\nelse:\n    print(1)", "S=str(input())\n\nif S=='SUN':\n    print(int(7-0))\nelif S=='MON':\n    print(int(7-1))\nelif S=='TUE':\n    print(int(7-2))\nelif S=='WED':\n    print(int(7-3))\nelif S=='THU':\n    print(int(7-4))\nelif S=='FRI':\n    print(int(7-5))\nelif S=='SAT':\n    print(int(7-6))", "week=[\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\na=input()\nprint(7-week.index(a))", "S=input()\nD=['SUN','MON','TUE','WED','THU','FRI','SAT']\ni=D.index(S)\nprint((7-i))\n", "s = input()\ns_list = ['SUN','MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\nprint(7 - s_list.index(s))", "S = input()\nls = [0,'SAT','FRI','THU','WED','TUE','MON','SUN']\nprint(ls.index(S))", "S={\"SUN\":7,\"MON\":6,\"TUE\":5,\"WED\":4,\"THU\":3,\"FRI\":2,\"SAT\":1}\ni=input()\nprint((S[i]))\n", "days = [\"SUN\", 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\ndays.reverse()\nd = input()\nprint((days.index(d)+1))\n", "week = ['SUN',  'MON',  'TUE', 'WED', 'THU', 'FRI', 'SAT']\ns = input()\ni = week.index(s)\nprint(7 - i)", "w=['SUN','MON','TUE','WED','THU','FRI','SAT']\nprint(7-w.index(input()))", "S = input()\nday_of_the_week = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\nfor i in range(len(day_of_the_week)):\n    if S == day_of_the_week[i]:\n        answer = 7 - i\nprint(answer)", "def resolve():\n    week = ['SUN','MON','TUE','WED','THU','FRI','SAT']\n    s = input()\n    print(7-week.index(s))\nresolve()", "week = \"MON,TUE,WED,THU,FRI,SAT,SUN\".split(',')\nS = input()\nprint(7) if S==\"SUN\" else print(6-week.index(S))", "N_List=[\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nprint(7 - N_List.index(str(input())))", "s = input()\narr = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nfor i in range(7):\n    if s==arr[i]:\n        print(7-i)", "week = ['SUN','MON','TUE','WED','THU','FRI','SAT']\ns = input()\nn = week.index(s)\nprint(7-n)", "lis = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nS = input()\nx = lis.index(S)\nprint(7-x)", "#!/usr/bin/env python3\ns = str(input())\nif s == \"SUN\":\n    print((7))\n    return()\nif s == \"MON\":\n    print((6))\n    return()\nif s == \"TUE\":\n    print((5))\n    return()\nif s == \"WED\":\n    print((4))\n    return()\nif s == \"THU\":\n    print((3))\n    return()\nif s == \"FRI\":\n    print((2))\n    return()\nif s == \"SAT\":\n    print((1))\n    return()\n", "li = ['MON','TUE','WED','THU','FRI','SAT','SUN']\n\nn = input()\n\nif n == 'SUN':\n    print(7)\nelse:\n    print(6 - li.index(n))", "s = input()\nS = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\nprint(7-S.index(s))", "print(7 - ['SUN','MON','TUE','WED','THU','FRI','SAT'].index(input()))", "S=str(input())\nst=['SUN','MON','TUE','WED','THU','FRI','SAT']\nprint((7-st.index(S)))\n", "day = {\"SUN\":7,\"MON\":6,\"TUE\":5,\"WED\":4,\"THU\":3,\"FRI\":2,\"SAT\":1}\nprint(day[input()])", "s = input()\nlst = ['SUN','MON','TUE', 'WED', 'THU', 'FRI', 'SAT' ]\nif s == 'SUN':\n  print(7)\n  return()\nfor i in range(7):\n  if s == lst[i]:\n    print(7-i)\n    return()", "\ns=input()\nif s=='SUN':\n    print('7')\nelif s=='MON':\n    print('6')\nelif s=='TUE':\n    print('5')\nelif s=='WED':\n    print('4')\nelif s=='THU':\n    print('3')\nelif s=='FRI':\n    print('2')\nelse:\n    print('1')", "S=input()\ndays=['MON','TUE','WED','THU','FRI','SAT','SUN']\ncnt =days.index('SUN')-days.index(S)\nif cnt==0:\n  print(7)\nelse:\n  print(cnt)", "import math\nfrom collections import Counter\nfrom itertools import product\n\nii = lambda : int(input())\nmi = lambda : map(int,input().split())\nli = lambda : list(map(int,input().split()))\n\na = input()\nday = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nfor i in range(len(day)):\n    if day[i] == a:\n        print(7-i)", "s = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\nt = input()\ni = s.index(t)\nprint(7 - i)", "S = input()\nday = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\nprint(7 - day.index(S))", "w =['SUN','MON','TUE','WED','THU','FRI','SAT','SUN']\nd = input()\n\ni = w.index(d)\nprint((7-i))\n", "s = input()\n\nweek = ['SUN','MON','TUE','WED','THU','FRI','SAT']\nn = week.index(s)\n\nprint(7-n)", "s = input()\n\nt = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\nprint(7 - t.index(s))", "s=str(input())\ndic={'SUN':7,'MON':6,'TUE':5,'WED':4,'THU':3,'FRI':2,'SAT':1 }\nprint(dic[s])", "s = input()\n\nif s == 'SUN':\n    print(7)\nelif s == 'MON':\n    print(6)\nelif s == 'TUE':\n    print(5)\nelif s == 'WED':\n    print(4)\nelif s == 'THU':\n    print(3)\nelif s == 'FRI':\n    print(2)\nelif s == 'SAT':\n    print(1)", "S = input()\n\nlst = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\ndct = {}\nfor i, j in enumerate(lst):\n    dct[j] = i\nprint(7 - dct[S])", "#!/usr/bin/env python3\nfrom collections import defaultdict, Counter\nfrom itertools import product, groupby, count, permutations, combinations\nfrom math import pi, sqrt\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nfrom string import ascii_lowercase\nfrom functools import lru_cache\nimport sys\nsys.setrecursionlimit(10000)\nINF = float(\"inf\")\nYES, Yes, yes, NO, No, no = \"YES\", \"Yes\", \"yes\", \"NO\", \"No\", \"no\"\ndy4, dx4 = [0, 1, 0, -1], [1, 0, -1, 0]\ndy8, dx8 = [0, -1, 0, 1, 1, -1, -1, 1], [1, 0, -1, 0, 1, 1, -1, -1]\n\n\ndef inside(y, x, H, W):\n    return 0 <= y < H and 0 <= x < W\n\n\ndef ceil(a, b):\n    return (a + b - 1) // b\n\n\ndef sum_of_arithmetic_progression(s, d, n):\n    return n * (2 * s + (n - 1) * d) // 2\n\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\ndef lcm(a, b):\n    g = gcd(a, b)\n    return a / g * b\n\n\ndef solve():\n    S = input()\n    i = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"].index(S)\n    print((7 - i))\n\n\ndef main():\n    solve()\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "S = input()\nW = ['', 'SAT', 'FRI', 'THU', 'WED', 'TUE', 'MON', 'SUN']\n\nprint(W.index(S))", "S = input()\nif S == \"SUN\":\n  print(7)\nif S == \"MON\":\n  print(6)\nif S == \"TUE\":\n  print(5)\nif S == \"WED\":\n  print(4)\nif S == \"THU\":\n  print(3)\nif S == \"FRI\":\n  print(2)\nif S == \"SAT\":\n  print(1)", "s = str(input())\nif s == \"SUN\":\n    print((7))\n    return()\nif s == \"MON\":\n    print((6))\n    return()\nif s == \"TUE\":\n    print((5))\n    return()\nif s == \"WED\":\n    print((4))\n    return()\nif s == \"THU\":\n    print((3))\n    return()\nif s == \"FRI\":\n    print((2))\n    return()\nif s == \"SAT\":\n    print((1))\n    return()\n", "store = {\"SUN\":7,\"MON\":6,\"TUE\":5,\"WED\":4,\"THU\":3,\"FRI\":2,\"SAT\":1}\ns = input()\nprint(store[s])", "s=input()\ndic={\"SUN\":0,\"MON\":1,\"TUE\":2,\"WED\":3,\"THU\":4,\"FRI\":5,\"SAT\":6}\nprint(7-dic[s])", "D = ['SAT', 'FRI', 'THU', 'WED', 'TUE', 'MON', 'SUN']\nS = input()\nfor i, d in enumerate(D):\n    if d == S:\n        print(i+1)\n        return()", "d={'SUN':7,'MON':6,'TUE':5,'WED':4,'THU':3,'FRI':2,'SAT':1}\nprint(d[input()])", "day = [\"\",\"SAT\",\"FRI\",\"THU\",\"WED\",\"TUE\",\"MON\",\"SUN\"]\nprint(day.index(input()))", "s = input()\nres = 0\nif s == \"SUN\":\n  res = 7\nelif s == \"MON\":\n  res = 6\nelif s == \"TUE\":\n  res = 5\nelif s == \"WED\":\n  res = 4\nelif s == \"THU\":\n  res = 3\nelif s == \"FRI\":\n  res = 2\nelif s == \"SAT\":\n  res = 1\nprint(res)", "s=input()\nL=['SUN','MON','TUE','WED','THU','FRI','SAT']\n\nprint((7-L.index(s)))\n"]