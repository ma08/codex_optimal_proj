["h,w = map(int, input().split())\ncell = []\n\nfor i in range(h):\n    row = list(input())\n    if row != [\".\"]*w:\n        cell.append(row)\n\ncounter = []\nfor i in range(w):\n    flag = 0\n    for j in range(len(cell)):\n        if cell[j][i] == \"#\":\n            flag = 1\n            break\n    if flag == 1:\n            counter.append(i)\n\nfor a in cell:\n    ans = ''\n    for i in counter:\n        ans = ans + a[i]\n    print(ans)", "import numpy as np\nH, W = map(int, input().split())\nmat = []\nfor _ in range(H):\n    a = list(input())\n    ca = [0 if i == '.' else 1 for i in a]\n    mat.append(ca)\namat = np.array(mat)\n\nmask1 = []\nfor i in range(H):\n    if np.sum(amat[i]) != 0:\n        mask1.append(i)\namat1 = amat[mask1]\n\nmask2 = []\nfor i in range(W):\n    if np.sum(amat1[:,i]) != 0:\n        mask2.append(i)\namat2 = amat1[:,mask2]\n\nans = []\nfor i in range(amat2.shape[0]):\n    temp = ''\n    for s in amat2[i]:\n        if s == 1:\n            temp += '#'\n        else:\n            temp += '.'\n    ans.append(temp)\nprint(*ans, sep='\\n')\n", "H, W = list(map(int, input().split()))\na = []\nfor i in range(H):\n    s = input()\n    if \"#\" in s:\n        a.append(s)\n\nd = [i for i in range(W)]\n\nfor i in range(W):\n    f = 0\n    for j in a:\n        if j[i] == \"#\":\n            f = 1\n            break\n    if f == 0:\n        d.remove(i)\n\nans = [\"\"] * H\nfor i in range(len(a)):\n    for j in d:\n        ans[i] += a[i][j]\n    print((ans[i]))\n\n", "h,w = map(int, input().split())\nab = list(input() for _ in range(h))\n\nres =[]\n\nfor i in range(h):\n    if ab[i].count(\".\") ==w:\n        pass\n    else:\n        res.append(ab[i])\n\nl = len(res)\n\nress=[]\nfor j in range(w):\n    b = list(map(lambda x: x[j], res))\n    if b.count(\".\") ==l:\n        pass\n    else:\n        ress.append(b)\n\nans = list(zip(*ress))\n\nfor i in range(l):\n    print(''.join(ans[i]))", "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\n\nH, W = list(map(int, input().split()))\n\nignore = \"\".join([\".\" for _ in range(W)])\n\nA = list([x for x in [input() for _ in range(H)] if x != ignore])\nH = len(A)\nB = [[] for _ in range(H)]\n\nfor w in range(W):\n    if list([x for x in A if x[w] == \"#\"]):\n        for i in range(H):\n            B[i].append(A[i][w])\n\nfor h in range(H):\n    print((\"\".join(B[h])))\n", "n, m = map(int, input().split())  \nmat = []\nfor i in range(n):\n    s = list(input())\n    if '#' in s:\n        mat.append(s)\nmat2 = []\nfor i in range(m):\n    s = [mat[x][i] for x in range(len(mat))]\n    if '#' in s:\n        mat2.append(s)\n\nfor i in range(len(mat2[0])):\n    s = ''\n    for x in range(len(mat2)):\n        s += mat2[x][i]\n    print(s)", "import numpy as np\n\nh,w = map(int,input().split())\na = [list(str(input())) for i in range(h)]\n\nans = np.array(a)\ncnt = 0\nfor i,grid in enumerate(a):\n    if '#' not in grid:\n        ans = np.delete(ans,i-cnt,0)\n        cnt += 1 \n\n\ncnt = 0\nfor i in range(w):\n    for j,grid in enumerate(a):\n        if grid[i] == '#':\n            break\n    else:\n        ans = np.delete(ans,i-cnt,1)\n        cnt += 1\n\nfor i in range(len(ans)):\n    print(''.join(ans[i]))", "h,w=map(int,input().split())\nA=[list(input()) for i in range(h)]\nansw=[]\nansh=[]\nfor i in range(h):\n  if not all([a==\".\" for a in A[i]]):\n    answ.append(i)\nfor j in range(w):\n  if not all([A[i][j]==\".\" for i in range(h)]):\n    ansh.append(j)\nfor i in answ:\n  for j in ansh:\n    print(A[i][j],end=\"\")\n  print(\"\")", "h, w = map(int, input().split())\na = [i for i in [input() for i in range(h)] if \"#\" in i]\na = [i for i in zip(*a) if \"#\" in i]\nfor i in zip(*a):\n  print(\"\".join(i))", "import sys\nimport copy\nimport math\nimport itertools\nimport numpy as np\n\nH,W = [int(c) for c in input().split()]\na = np.array([list(input()) for c in range(H)])\nb = copy.deepcopy(a)\nHc=[]\nWc=[]\nfor i in range(H):\n    if np.count_nonzero(a[i,:] == \".\") == W:\n        Hc.append(i)\n\nfor i in range(W):\n    if np.count_nonzero(a[:,i] == \".\") == H:\n        Wc.append(i)\n\na = np.delete(a,Hc,0)\na = np.delete(a,Wc,1)\n\nfor i in range(len(a)):\n    s = \"\"\n    for j in range(len(a[i])):\n        s+=a[i][j]\n    print(s)", "h,w=map(int,input().split())\nA=[list(input()) for i in range(h)]\nansw=[]\nansh=[]\nfor i in range(h):\n  if not all([a==\".\" for a in A[i]]):\n    answ.append(i)\nfor j in range(w):\n  if not all([A[i][j]==\".\" for i in range(h)]):\n    ansh.append(j)\nfor i in answ:\n  for j in ansh:\n    print(A[i][j],end=\"\")\n  print(\"\\n\")\n    ", "import numpy as np\nH, W = map(int, input().split())\na = ['']*H\nfor i in range(H):\n  a[i] = input()\n\nh_flag = [0]*H\nw_flag = [0]*W\nfor iHeight in range(H):\n  for jWidth in range(W):\n    if a[iHeight][jWidth] == '#':\n      h_flag[iHeight] = 1\n      w_flag[jWidth] = 1\n\nfor iHeight in range(H):\n  if h_flag[iHeight] == 1:\n    for jWidth in range(W):\n      if w_flag[jWidth] == 1:\n        print(a[iHeight][jWidth], end='')\n    print()", "h,w =  map(int,input().split())\nmat = [input() for i in range(h)]\nn = 0\nmax = h\nwhile n<max:\n    if mat[n]==\".\"*w:\n        mat.pop(n)\n        n -= 1\n        max -= 1\n    n += 1\nflag = [True for i in range(w)]\nfor i in mat:\n    for j in range(w):\n        if i[j]==\"#\":\n            flag[j] = False\nans = []\nfor i in mat:\n    temp = \"\"\n    for j in range(w):\n        if not flag[j]:\n            temp += i[j]\n    ans.append(temp)\nfor i in ans:\n    print(i)", "H,W=map(int,input().split())\nL=[[] for i in range(H)]\nyoko=list()\nfor i in range(H):\n  L1=list(input())\n  if L1==[\".\"]*W:\n    yoko.append(i)\n  L[i]=L1\nR=list(range(W))\nfor i in range(H):\n  for j in range(W):\n    if j in R and L[i][j]==\"#\":\n      R.remove(j)\nfor i in range(H):\n  if i in yoko:\n    continue\n  s=L[i]\n  r=list()\n  for j in range(W):\n    if j not in R:\n      r.append(s[j])\n  print(\"\".join(r))", "h, w = map(int, input().split())\na = []\n\nfor i in range(h):\n    r = list(input())\n    if '#' in r:\n        a.append(r)\n\nbox = [0] * w\n\nfor colum in range(w):\n    if all(row[colum] == '.' for row in a) :\n        box[colum] = 1\n\nfor j in range(w):\n    if box[j] == 1:\n        for row in a:\n            row[j] = ''\n\nfor row in a:\n    print(''.join(map(str, row)))", "H, W = map(int, input().split())\nA = []\nfor i in range(H):\n    x = input()\n    if x.count('#') == 0:\n        continue\n    A.append(x)\n\nc = set()\nfor a in A:\n    for i in range(W):\n        if a[i] == '#':\n            c.add(i)\n\nfor a in A:\n    for i in range(W):\n        if i in c:\n            print(a[i], end='')\n    print()\n", "import copy\nh,w = map(int,input().split())\na = [input() for  i in range(h)]\nindex = 1\nans = copy.copy(a)\nfor i in range(h):\n    bool = True\n    for j in range(w):\n        if a[i][j] == '#':\n            bool = False\n    if bool:\n        index -= 1\n        del ans[index + i]\nans_1 = copy.copy(ans)\nkey = 1\nfor i in range(w):\n    bool = True\n    for j in range(h - (1 - index)):\n        if ans[j][i] == '#':\n            bool = False\n    if bool:\n        key -= 1\n        for k in range(h - (1 - index)):\n            ans_1[k] = ans_1[k][:(i + key)] + ans_1[k][(i + key + 1):]\nfor i in range(len(ans_1)):\n    print(ans_1[i])", "H, W = map(int, input().split())\nA = [list(input()) for _ in range(H)]\n# \u5217\u306b\u3064\u3044\u3066\nfor i in range(H):\n    for j in range(W):\n        if A[i][j] == \"#\":\n            break\n    # \u3059\u3079\u3066\u7a7a\u767d\u3060\u3063\u305f\u3089x\u5370\n    else:\n        for l in range(W):\n            A[i][l] = \"x\"\n\n# \u884c\u306b\u3064\u3044\u3066\nfor i in range(W):\n    for j in range(H):\n        if A[j][i] == \"#\":\n            break\n    else:\n        for l in range(H):\n            A[l][i] = \"x\"\nfor i in range(H):\n    x_cnt = 0\n    for j in range(W):\n        if A[i][j] != \"x\":\n            print(A[i][j], end=\"\")\n        else:\n            x_cnt += 1\n\n    if x_cnt < W:\n        print()\n    else:\n        pass\n", "h, w = map(int, input().split())\naa = [list(input()) for i in range(h)]\nbb = list(zip(*aa))\n\ncc =  [b for b in bb if any(x == '#' for x in b)]\ndd =list(zip(*cc))\nee = [d for d in dd if any(x == '#' for x in d)]\n\n\nfor i in range(len(ee)):\n    print(''.join(ee[i]))", "import itertools\nH, W = map(int, input().split())\nA = []\nfor _ in range(H):\n    a = list(input())\n    if a.count(\"#\") != 0:\n        A.append(a)\n\nH = len(A)\nif H == 1:\n    A = list(itertools.chain.from_iterable(A))\n    cnt = []\n    for ans in A:\n        if ans == \"#\":\n            cnt.append(ans)\n    print(\"\".join(cnt))\nelse:\n    L = []\n    for w in range(W):\n        l = []\n        for h in range(H):\n            if A[h][w] == \"#\":\n                l = []\n                break\n            l.append(w)\n        if len(l) != 0:\n            L.append(l[0])\n\n    dellist = lambda items, indexes: [item for index, item in enumerate(items) if index not in indexes]\n    for ans in A:\n        ans = dellist(ans, L)\n        print(\"\".join(ans))", "import numpy as np\nH, W = map(int, input().split())\nx = [list(map(str, list(input()))) for l in range(H)]\n\ny = []\nfor i in range(H):\n    if set(x[i]) != {\".\"}:\n        y.append(x[i])\n\nz = np.array(y)\nzz = np.rot90(z)\nzzz = zz.tolist()\n\nans = []\nfor i in range(W):\n    if set(zzz[i]) != {\".\"}:\n        ans.append(zzz[i])\n\na = np.array(ans)\nb = np.rot90(a, -1)\nc = b.tolist()\n\nfor i in range(len(c)):\n    print(*c[i], sep='')", "import numpy as np\n\nh, w = list(map(int, input().split()))\na = np.array([list(input()) for _ in range(h)])\n\nfor i in range(h):\n    if np.count_nonzero(a[i] == '#') == 0:\n        a[i] = 'x'\nfor i in range(w):\n    if np.count_nonzero(a[:, i] == '#') == 0:\n        a[:, i] = 'x'\n\nfor i in range(h):\n    if res := ''.join([x for x in a[i] if x != 'x']):\n        print(res)\n", "ma = lambda :map(int,input().split())\nlma = lambda :list(map(int,input().split()))\ntma = lambda :tuple(map(int,input().split()))\nni = lambda:int(input())\nyn = lambda fl:print(\"Yes\") if fl else print(\"No\")\nimport collections\nimport math\nimport itertools\nimport heapq as hq\nimport sys\nh,w = ma()\nt=\".\"*w\nls=[]\nfor i in range(h):\n    s=input()\n    if s!=t:\n        ls.append(s)\n\nl = len(ls)\nt=\".\"*l\nans = [[] for i in range(l)]\nfor i in range(w):\n    f=False\n    for j in range(l):\n        if ls[j][i]==\"#\":\n            f=True\n    if f:\n        for j in range(l):\n            ans[j].append(ls[j][i])\nfor a in ans:\n    print(\"\".join(a))\n", "H, W = map(int, input().split())\n\nL, side, ver = [], [], []\n\nfor i in range(H):\n    a = list(input())\n    L.append(a)\n\ndef check(n, inlist, outlist):\n    \"\"\"[summary]\n    \u5168\u3066\u767d\u30de\u30b9\u306e\u884c\u3092\u524a\u9664\u3059\u308b\n    \u8ee2\u7f6e\u884c\u5217\u3092\u8fd4\u3059\u306e\u3067\u5217\u306e\u5224\u5b9a\u306b\u3082\u5bfe\u5fdc\u53ef\u80fd\n    Args:\n        n ([type]): \u914d\u5217\u30b5\u30a4\u30ba\n        inlist ([type]): \u5165\u529b\u3059\u308b\u4e8c\u6b21\u5143\u914d\u5217\n        outlist ([type]): \u51fa\u529b\u3059\u308b\u4e8c\u6b21\u5143\u914d\u5217\n\n    Returns:\n        [list]: \u4e0d\u8981\u306a\u8981\u7d20\u3092\u524a\u9664\u3057\u3066\u8ee2\u7f6e\u3057\u3066\u8fd4\u3059\n    \"\"\"    \n    for i in range(n):\n        if ('#' in inlist[i]) == True:\n            outlist.append(inlist[i])\n    return list(map(list, zip(*outlist)))\n\nside = check(H, L, side)\nver = check(len(side), side, ver)\n\nfor i in range(len(ver)):\n    print(''.join(ver[i]))", "H,W = map(int,input().split())\nans = []\nfor i in range(H):\n    a = input()\n    if a != \".\"*W:\n        ans.append(a)\nH = len(ans)\nans2 = list(map(list,zip(*ans)))\nwhile [\".\"]*H in ans2:\n    ans2.remove([\".\"]*H)\ntrueans = list(map(list,zip(*ans2)))\nfor i in trueans:\n    print(\"\".join(i))", "H, W = list(map(int, input().split()))\na_list = [list(input()) for _ in range(H)]\ndot_cnt = [sum([a == '.' for a in a_col]) for a_col in a_list]\nexist_idx = [i for i, num in enumerate(dot_cnt) if num != W]\nst = set(range(W))\nfor i in exist_idx:\n    dot_idx = [i for i, a in enumerate(a_list[i]) if a == '.']\n    st = st & set(dot_idx)\nfor i in exist_idx:\n    print((''.join([a for i, a in enumerate(a_list[i]) if i not in st])))\n", "H, W = map(int, input().split())\ngrid = [input() for _ in range(H)]\n\ncnt_y = [0]*H\ncnt_x = [0]*W\n\nfor i in range(H):\n    for j in range(W):\n        if grid[i][j] == '.': cnt_y[i] += 1\n\nfor j in range(W):\n    for i in range(H):\n        if grid[i][j] == '.': cnt_x[j] += 1\n\nfor i in range(H):\n    res = ''\n    for j in range(W):\n        if cnt_y[i] < W and cnt_x[j] < H:\n            res += grid[i][j]\n    if len(res) > 0: print(res)", "from typing import List\n\n\ndef answer(h: int, w: int, a: List[str]) -> List[str]:\n    for i in range(2):\n        white_line = '.' * w\n        loop = a.count(white_line)\n        for _ in range(loop):\n            a.remove(white_line)\n        a = [''.join(line) for line in (list(zip(*a)))]\n        if i == 0:\n            w = h - loop\n\n    return a\n\n\ndef main():\n    h, w = list(map(int, input().split()))\n    a = [input() for _ in range(h)]\n    for i in answer(h, w, a):\n        print(i)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "h, w = list(map(int, input().split()))\nA = [input() for _ in range(h)]\nB = list()\nng = \".\" * w\ncnt = 0\nfor i, a in enumerate(A):\n    if a == ng:\n        cnt += 1\n    else:\n        B.append(a)\nA = list([\"\".join(x) for x in zip(*B)])\nng = \".\" * (h - cnt)\nB = list()\n\n\nfor i, a in enumerate(A):\n    if a == ng:\n        cnt += 1\n    else:\n        B.append(a)\n\nfor a in zip(*B[::-1]):\n    print((\"\".join(a[::-1])))\n", "H, W = map(int,input().split())\nA = [input() for i in range(H)]\ni = 0\nfor a in range(H):\n    if '#' not in A[i]:\n        del A[i]\n        H -= 1\n        i -= 1\n    i += 1\n#\u3053\u3053\u307e\u3067\u3067\u884c\u6d88\u53bb\ni = 0\nfor a in range(W):\n    f = True\n    for j in range(H):\n        if A[j][i] == '#':\n            f = False\n            break\n    if f:\n        for j in range(H):\n            A[j] = A[j][:i] + A[j][i+1:]\n        W -= 1\n        i -= 1\n    i += 1\nfor a in A:\n    print(a)", "h,w = map(int,input().split())\ns = 0\nli = []\nlire = []\nlinew = []\nfor i in range(h):\n    li.append(input())\nfor i in range(w):\n    for j in range(h):\n        if li[j][i] == \".\":\n            s = 1\n        else:\n            s = 0\n            break\n    if s == 1:\n        lire.append(i)\n        s = 0\nfor i in range(h):\n    a = \"\"\n    for j in range(w):\n        if j not in lire:\n            a += li[i][j]\n    linew.append(a)\nfor i in range(len(linew)):\n    if \"#\" not in linew[i]:\n        continue\n    else:\n        print(linew[i])", "h,w=map(int,input().split())\ntable=[]\nfor i in range(h):\n    table.append(list(input()))\ncount=0\nwhile True:\n    if not '#' in table[count]:\n        table.pop(count)\n        h-=1\n        count=0\n        continue\n    if count==h-1:\n        break\n    count+=1\ncount=0\nif h==1:\n    table=[n for n in table[0] if n!='.']\nelse:\n    while True:\n        tmp=[]\n        for i in range(h):\n            tmp.append(table[i][count])\n        if not '#' in tmp:\n            for j in range(h):\n                table[j].pop(count)\n            w-=1\n            count=0\n            continue\n        if count==w-1:\n            break\n        count+=1\nfor row in table:\n    print(''.join(row))", "h, w = list(map(int, input().split()))\na = []\nfor i in range(h):\n    line = input()\n    if line != \".\" * w:\n        a.append(list(line))\n\nh = len(a)\n\nw_pass =[]\nfor i in range(w):\n    for j in range(h):\n        if a[j][i] != \".\":\n            break\n    else:\n        w_pass.append(i)\n\nfor i in range(h):\n    line = \"\"\n    for j in range(w):\n        if j in w_pass:\n            pass\n        else:\n            line += a[i][j]\n    print(line)\n", "h, w = list(map(int, input().split()))\na = []\nfor i in range(h):\n  s = input()\n  if s.count('#') > 0:\n    a.append(s)\n\nb = [0 for i in range(w)]\nfor gl in a:\n  for i in range(w):\n    if gl[i] == '#':\n      b[i] += 1\nfor gl in a:\n  v = ''\n  for i in range(w):\n    if b[i] > 0:\n      v += gl[i]\n  print (v)\n\n", "h,w = map(int,input().split())\na = []\nhh = 0\nfor _ in range(h):\n  x = [xx for xx in input()]\n  if x.count(\"#\") > 0:\n    a.append(x)\n    hh += 1\nb = []\n\ncount = 0\nif hh > 1:\n  wlist = []\n  for i in range(w):\n    for j in range(hh):\n      b.append(a[j][i])\n    if b.count(\"#\") == 0:\n      wlist.append(i)\n    b = []\n  for k in wlist:\n    for l in range(hh):\n      a[l].pop(k-count)\n    count += 1\n  for m in range(len(a)):\n    print(\"\".join(a[m]))\nelse:\n  a = list(*a)\n  ans = [aa for aa in a if aa == \"#\"]\n  print(\"\".join(ans))", "H, W = list(map(int, input().split()))\na = [list(input()) for i in range(H)]\na = [x for x in a if '#' in x]\naT = list(zip(*a))\naT = [x for x in aT if '#' in x]\na = list(zip(*aT))\nfor i in a:\n    print((''.join(i)))\n", "h,w = list(map(int,input().split()))\nmasu = []\nfor i in range(h):\n    tmp = str(input())\n    masu.append(tmp)\n\ntmp_h = [int(0) for i in range(h)]\ntmp_w = [int(0) for j in range(w)]\nfor i in range(h):\n    for j in range(w):\n        if masu[i][j]=='.':\n            tmp_h[i] += 1\n            tmp_w[j] += 1\n#print(tmp_h)\n#print(tmp_w)\n\nans = []\nfor i in range(len(tmp_h)):\n    if tmp_h[i] != w:\n        tmp = ''\n        for j in range(w):\n            if tmp_w[j] != h:\n                tmp += masu[i][j]\n        ans.append(tmp)\n\n#for i in range(h):\n#    print(masu[i])\n#print('-----')\nfor i in range(len(ans)):\n    print((ans[i]))\n", "import numpy as np\nh,w=map(int, input().split())\na=[list(input()) for i in range(h)]\na=np.array(a)\n\na2=[]\na3=[]\nfor i in range(h):\n  if \"#\" in a[i]:\n    a2.append(a[i])\na2=np.array(a2)\na2=a2.T\n\nfor i in range(len(a2)):\n  if \"#\" in a2[i]:\n    a3.append(a2[i])\na3=np.array(a3)\na3=a3.T\nfor i in range(len(a3)):\n  print(\"\".join(a3[i]))", "import numpy as np\n\nh, w = map(int,input().split())\n\nmaze = []\nfor i in range(h):\n    row = list(input())\n    if \"#\" in row:\n        maze.append(row)\n        \nmaze = np.array(maze)\nmaze = np.rot90(maze)\n\nans = []\nfor row in maze:\n    if \"#\" in row:\n        ans.append(row)\n        \nans = np.rot90(ans, -1)\n\nfor r in ans:\n    print(\"\".join(r))", "H,W=map(int,input().split())\n\na=[list(map(str,input().split())) for i in range(H)]\nfor i in range(H):\n    a[i]=list(a[i][0])\nflag=True\nfor i in range(H):\n    for j in range(W):\n        if a[H-1-i][j]!='.':\n            flag=False\n            break\n    if flag:\n        del(a[H-1-i])\n    flag=True\nfor i in range(W):\n    for j in range(len(a)):\n        if a[j][W-1-i]!='.':\n            flag=False\n            break\n    if flag:\n        for j in range(len(a)):\n            del(a[j][W-1-i])\n    flag=True\n\nfor aaa in a:\n    print(\"\".join(aaa))", "h, w = map(int, input().split())\na = [list(input()) for _ in range(h)]\nx = list()\ny = list()\nfor i in range(h):\n    if \"#\" in a[i]:\n        x.append(i)\nfor j in range(w):\n    cnt = 0\n    for k in range(h):\n        if a[k][j] == \"#\":\n            y.append(j)\n            break\nfor p in x:\n    z = \"\"\n    for q in y:\n        z += a[p][q]\n    print(z)", "h, w = map(int,input().split())\na_l = [ list(input()) for _ in range(h) ]\nsub_array = []\nfor i in range(h):\n    if '#' in a_l[i]:\n        sub_array.append(a_l[i])\n\nsub_array = [list(x) for x in zip(*sub_array)]\nans = []\nfor j in range(w):\n    if '#' in sub_array[j]:\n        ans.append(sub_array[j])\n_ = [print(''.join(list(x))) for x in zip(*ans)]", "N,M = map(int,input().split())\nls = []\nfor i in range(N):\n    ls.append(list(input()))\nyoko = []\ntate = [i for i in range(M)]\nfor i in range(N):\n    if ls[i].count('.') == M:\n        yoko.append(i)\nfor i in range(N):\n    for j in range(M):\n        if ls[i][j] == '#' and j in tate:\n            tate.remove(j)\ntate2 = list(range(M))\nfor i in range(M):\n    if i in tate:\n        tate2.remove(i)\n\nansls = []\nfor i in range(N):\n    if not i in yoko:\n        ansls.append([ls[i][j] for j in tate2])\nfor i in ansls:\n    print(''.join(i))", "h, w = list(map(int, input().split()))\nmasu = []\n\nfor i in range(h):\n    line = list(input())\n    if line != [\".\"] * w:\n        masu.append(line)\n\nh = len(masu)\ndel_i = []\nfor i in range(w):\n    for j in range(h):\n        if masu[j][i] != \".\":\n            break\n    else:\n        del_i.append(i)\nw = len(del_i)\nfor j in range(w):\n    for i in range(h):\n        masu[i].pop(del_i[j] - j)\n\nfor i in range(h):\n    print((\"\".join(masu[i])))\n", "import numpy as np\n\nH,W = map(int,input().split())\nhw = np.array([list(input()) for _ in range(H)])\n\ngyo = np.all(hw == \".\",axis=1)\nretu= np.all(hw == \".\",axis=0)\n\nfor i in range(H):\n    if not gyo[i]==True:\n        for j in range(W):\n            if not retu[j]==True:\n                print(hw[i][j],end=\"\")\n        print()", "H, W = list(map(int, input().split()))\na = [list(input()) for i in range(H)]\na = [x for x in a if '#' in x]\naT = list(zip(*a))\naT = [x for x in aT if '#' in x]\na = list(zip(*aT))\nfor i in a:\n    print((''.join(i)))\n", "H,W = map(int,input().split())\nA = [\"\"] * H\nfor i in range(H):\n  A[i] = input()\n  \nrow = [False] * H\ncol = [False] * W\n\nfor j in range(H):\n  for k in range(W):\n    if A[j][k] == \"#\":\n      row[j] = True\n      col[k] = True\n      \nfor l in range(H):\n  if row[l]:\n    for m in range(W):\n      if col[m]:\n        print(A[l][m], end = \"\")\n    print()", "h,w = map(int,input().split())\na = [input() for _ in range(h)]\n\nhl=[]\nwl=[]\n\nfor i in range(h):\n    if a[i]==\".\"*w:\n        hl +=[i]\nfor i in range(w):\n    if all([a[j][i]==\".\" for j in range(h)]):\n        wl += [i]\n\n\nfor i in range(h):\n    if i not in hl:\n        for j in range(w):\n            if j not in wl:\n                print(a[i][j],end=\"\")\n        else:\n            print(\"\")", "import numpy as np\n\ndef main():\n\n    H,W = list(map(int,input().split()))\n    A = [[0 if s == \".\" else 1 for s in list(input())] for _ in range(H)]\n\n    for i in reversed(list(range(H))):\n        if sum(A[i]) == 0:\n            A.pop(i)\n\n    A = np.array(A).T.tolist()\n    for i in reversed(list(range(W))):\n        if sum(A[i]) == 0:\n            A.pop(i)\n    A = np.array(A).T.tolist()\n\n    for i in range(len(A)):\n        print((\"\".join([\".\" if i == 0 else \"#\" for i in A[i]])))\n\nmain()\n", "h, w = list(map(int, input().split()))\ngrid = [input() for _ in range(h)]\n\ndef check_row(grid):\n    for i in range(len(grid)):\n        if \"#\" not in grid[i]:\n            return i\n    return -1\n\ndef check_col(grid):\n    grid_inv = []\n    for i in range(len(grid[0])):\n        grid_inv.append(\"\".join(row[i] for row in grid))\n    return check_row(grid_inv)\n\nwhile True:\n    if check_row(grid) != -1:\n        del grid[check_row(grid)]\n        continue\n    elif check_col(grid) != -1:\n        d = check_col(grid)\n        for i in range(len(grid)):\n            grid[i] = grid[i][:d] + grid[i][d+1:]\n    else:\n        break\n\nfor g in grid:\n    print(g)\n", "h, w = map(int, input().split())\na = [list(input()) for _ in range(h)]\nx = list()\ny = list()\nfor i in range(h):\n    if \"#\" in a[i]:\n        x.append(i)\nfor j in range(w):\n    cnt = 0\n    for k in range(h):\n        if a[k][j] == \"#\":\n            y.append(j)\n            break\nfor p in x:\n    z = \"\"\n    for q in y:\n        z += a[p][q]\n    print(z)", "h,w = map(int, input().split())\na = [str(input()) for _ in range(h)]\nb = []\nfor i in range(h):\n    if a[i] != '.'*w:\n        b.append(a[i])\nc = []\nfor h in range(w):\n    num = 0\n    for j in b:\n        if j[h] == '.':\n            num += 1\n    if num == len(b):\n        c.append(h)\nfor k in b:\n    word = \"\"\n    for l in range(w):\n        if l not in c:\n            word += k[l]\n    print(word)", "H,W = map(int,input().split())\ngrid = [input().split() for _ in range(H)]\ncheck = []\n\nfor i in range(H):\n    if '#' not in grid[i][0]:\n        check.append(i-len(check))\nfor i in check:\n    grid = grid[:i] + grid[i+1:]\ncheck = []\n\nfor i in range(W):\n    if all(grid[j][0][i]=='.' for j in range(len(grid))):\n        check.append(i - len(check))\nfor i in check:\n    for k in range(len(grid)):\n        grid[k][0] = grid[k][0][:i] + grid[k][0][i+1:]\n        \nfor i in grid:\n    print(i[0])", "import numpy as np\nh,w=map(int,input().split())\ns=np.array([list(input()) for i in range(h)])\ns=(s[np.any(s=='#',axis=1)])\ns=(s[:,np.any(s=='#',axis=0)])\nfor i in s:\n    print(\"\".join(map(str,i)))", "H, W = list(map(int, input().split()))\nA = []\nfor _ in range(H):\n    a = input()\n    if \"#\" in a:\n        A.append(a)\nA_ = [\"\" for _ in range(len(A))]\nfor x in range(W):\n    f = False\n    for a in A:\n        if a[x] == \"#\":\n            f = True\n            break\n    if f:\n        for y, a in enumerate(A):\n            A_[y] += a[x]\nfor a in A_:\n    print(a)\n", "h,w=map(int, input().split())\na=[i for i in [input() for _ in range(h)] if '#' in i]\nb=[i for i in zip(*a) if '#' in i]\nfor i in zip(*b):\n  print(''.join(i))", "H, W = map(int, input().split())\nrow = [False] * H\ncol = [False] * W\ngrid = []\nfor i in range(H):\n    grid.append(input())\n\nfor i in range(H):\n    for j in range(W):\n        if grid[i][j] == '#':\n            row[i] = True\n            col[j] = True\n\nfor i in range(H):\n    if not row[i]: continue\n    for j in range(W):\n        if not col[j]: continue\n        print(grid[i][j], end='')\n    print()", "H, W = map(int, input().split())\na = [list(input()) for _ in range(H)]\nresH = [True] * H\nresW = [True] * W\n\nfor h in range(H):\n    judge = False\n    for w in range(W):\n        if a[h][w] == \"#\":\n            judge = True\n    resH[h] = judge\n\nfor w in range(W):\n    judge = False\n    for h in range(H):\n        if a[h][w] == \"#\":\n            judge = True\n    resW[w] = judge\n\nfor h, row in enumerate(a):\n    tmp = []\n    for w, element in enumerate(row):\n        if resH[h] and resW[w]:\n            tmp.append(element)\n    if tmp:\n        print(*tmp, sep=\"\")\n", "H, W = map( int, input().split() )\n\nh_set = set()\nw_set = set()\nB = [input() for i in range(H)]\nfor i in range(H):\n  for j in range(W):\n    if B[i][j] == '#':\n      w_set.add(j)\n      h_set.add(i)\n      \nfor i in range(H):\n  if i in h_set:\n    t = \"\"\n    for j in range(W):\n      if j in w_set:\n        t += B[i][j]\n    print(t)", "h, w = list(map(int, input().split()))\nfields = [list(input()) for _ in range(h)]\nans = [[0] * w] * h\nfor i in range(h):\n    if \"#\" not in fields[i]:\n        ans[i] = [1] * w\nfor i in range(w):\n    count = 0\n    for j in range(h):\n        if fields[j][i] == \".\":\n            count += 1\n    if count == h:\n        for j in range(h):\n            ans[j][i] = 1\ntmp = []\nfor out, flag in zip(fields, ans):\n    content = []\n    for i in range(w):\n        if flag[i] == 0:\n            content.append(out[i])\n    tmp.append(content)\nfor content in tmp:\n    if content != []:\n        print((\"\".join(content)))\n", "H, W = list(map(int, input().split()))\nA = [[p for p in input()] for _ in range(H)]\n\ny = 0\nwhile(y < len(A)):\n    if all([p == '.' for p in A[y]]):\n        del A[y]\n    else:\n        y += 1\n\nx = 0\nwhile(x < len(A[0])):\n    if all([row[x] == '.' for row in A]):\n        for row in A:\n            del row[x]\n    else:\n        x += 1\n\nfor row in A:\n    print((''.join(row)))\n", "lst = input().split()\nH = int(lst[0])\nW = int(lst[1])\n\ndef update(S, n):\n   return S[:n] + '*' + S[n + 1:]\n\nfield = []\n\nfor i in range(H):\n   a = input()\n   if a != '.' * W:\n      field.append(a)\n\nfor i in range(W):\n   t = 0\n   for j in range(len(field)):\n      if field[j][i] != '.':\n         t = 1\n         break\n   if t == 0:\n      for j in range(len(field)):\n         field[j] = update(field[j], i)\n\nfor s in field:\n   print(s.replace('*', ''))", "H,W=map(int,input().split())\na=[list(input()) for _ in range(H)]\nb=[]\nfor i in range(H):\n    if '#' in a[i]:\n        b.append(a[i])\nc=[[] for _ in range(len(b))]\nfor j in range(W):\n    flag=False\n    for i in range(len(b)):\n        if b[i][j]=='#':\n            flag=True\n    if flag:\n        for i in range(len(b)):\n            c[i].append(b[i][j])\nfor i in range(len(c)):\n    for j in range(len(c[i])):\n        print(c[i][j],end='')\n    print()\n", "h, w = map(int, input().split())\na = [input() for i in range(h)]\nvdel = []\nsdel = []\n\nfor i in range(h):\n    if a[i].count('.') == w:\n        sdel.append(i)\n\nfor i in range(w):\n    cnt = 0\n    for j in range(h):\n        if a[j][i] == '.':\n            cnt += 1\n    if cnt == h:\n        vdel.append(i)\ni = 0\nlens = len(sdel)-1\nh -= lens+1\nwhile i <= lens:\n    del a[sdel[lens]]\n    lens -= 1\n\nfor i in range(h):\n    tmp = ''\n    for j in range(w):\n        if j not in vdel:\n            tmp += a[i][j]\n    print(tmp)", "H,W = map(int,input().split())\na = [list(input()) for _ in range(H)]\n\n#\u884c\nr = [0]*H  #\u884c\u3054\u3068\u306e#\u306e\u6570\nfor i in range(H):\n    r[i]=a[i].count('#')\n#\u5217\nc = [0]*W  #\u5217\u3054\u3068\u306e#\u306e\u6570\nfor i in a:\n    for j in range(W):\n        if i[j]=='#':\n            c[j]+=1\n            \nfor i in range(H):\n    a[i] = [a[i][j] for j in range(W) if c[j]!=0]\n\n\nfor i in range(H):\n    if r[i]!=0:\n        print(''.join(a[i]))", "# -*- coding: utf-8 -*-\nimport numpy as np\nimport sys\nfrom collections import deque\nfrom collections import defaultdict\nimport heapq\nimport collections\nimport itertools\nimport bisect\nfrom scipy.special import comb\nimport copy\nsys.setrecursionlimit(10**6)\n\n\ndef zz():\n    return list(map(int, sys.stdin.readline().split()))\n\n\ndef z():\n    return int(sys.stdin.readline())\n\n\ndef S():\n    return sys.stdin.readline()[:-1]\n\n\ndef C(line):\n    return [sys.stdin.readline() for _ in range(line)]\n\n\nH, W = zz()\nboard = []\nfor h in range(H):\n    board.append(list(input()))\nboard = np.array(board)\nans1 = []\nfor h in range(H):\n    if ('#' in board[h]):\n        ans1.append(board[h])\nans2 = []\nboard = np.array(ans1)\nfor w in range(W):\n    if ('#' in board[:, w]):\n        ans2.append(board[:, w])\nans2 = np.array(ans2).T\n\nfor line in ans2:\n    print(*line, sep='')\n", "h,w=map(int,input().split())\nA=[]\nans=[]\nfor i in range(h):\n    A.append(list(input()))\nfor a in A:\n    if a != ['.']*w:\n        ans.append(a)\ncounter=[]\nfor i in range(w):\n    flag=0\n    for j in range(len(ans)):\n        if ans[j][i]=='#':\n            flag=1\n            break\n    if flag==1:\n        counter.append(i)\n        \nfor a in ans:\n    temp=''\n    for i in counter:\n        temp+=a[i]\n    print(temp)", "H,W=list(map(int,input().split()))\ndelh=[]\ndelw=[]\n\nsq=[list(input()) for i in range(H)]\n\nfor j in range(H):\n    temp=0\n    for k in range(W):\n        if sq[j][k]==\".\":\n            temp+=1\n    if temp==W:\n        delh.append(j)\n\nfor l in range(W):\n    temp=0\n    for m in range(H):\n        if sq[m][l]==\".\":\n            temp+=1\n    if temp==H:\n        delw.append(l)\n\nfor n in range(len(delh)):\n    del sq[delh[n]]\n    for q in range(len(delh)):\n        delh[q]-=1\nH-=len(delh)\n\nfor o in range(len(delw)):\n    for p in range(H):\n        del sq[p][delw[o]]\n    for r in range(len(delw)):\n        delw[r]-=1\n        \nfor s in range(H):\n    print((\"\".join(sq[s])))\n", "import numpy as np\n\nH,W = map(int,input().split())\nhw = np.array([list(input()) for _ in range(H)])\n\ngyo = np.all(hw == \".\",axis=1)\nretu= np.all(hw == \".\",axis=0)\n\nfor i in range(H):\n\tif not gyo[i]==True:\n\t\tfor j in range(W):\n\t\t\tif not retu[j]==True:\n\t\t\t\tprint(hw[i][j],end=\"\")\n\t\tprint()", "h,w=map(int,input().split())\nlis=[list(input()) for i in range(h)]\n\nfin=[]\nnum=[0]*w\n\nfor l in lis:\n  if l.count(\".\") != w:\n    fin.append(l)\n  for i in range(w):\n    if l[i]==\".\":\n      num[i]+=1\n\nfor f in fin:\n  ans=[]\n  for i in range(len(num)):\n    if num[i]!=h:\n      ans.append(f[i])\n  print(*ans,sep='')\n    ", "h, w = map(int, input().split())\n\ngrid = []\nfor _ in range(h):\n    x = input()\n    if x.count(\".\") != len(x):\n        grid.append(x)\n\ngrid = list(map(list, zip(*grid)))\n\ngrid_t = []\nfor g in grid:\n    if g.count(\".\") != len(g):\n        grid_t.append(g)\n\nans = list(map(list, zip(*grid_t)))\n\nfor a in ans:\n    print(\"\".join(a))", "h, w = map(int, input().split())\na = [''] * h\nfor i in range(h):\n\ta[i] = input()\n \nrow = [False] * h\ncol = [False] * w\nfor i in range(h):\n\tfor j in range(w):\n\t\tif a[i][j] == '#':\n\t\t\trow[i] = True\n\t\t\tcol[j] = True\n \nfor i in range(h):\n\tif row[i]:\n\t\tfor j in range(w):\n\t\t\tif col[j]:\n\t\t\t\tprint(a[i][j], end = '')\n\t\tprint()", "H,W = map(int,input().split())\na = [input() for i in range(H)]\nb = [0] * W\nc = [0] * H\nfor i in range(H):\n    cnt = 0\n    for j in range(W):\n        if a[i][j] == '#':\n            b[j] += 1\n            cnt += 1\n    c[i] = cnt \n\nfor i in range(H):\n    if c[i]==0:\n        continue\n    for j in range(W):\n        if b[j]!=0:\n            print(a[i][j],end='')\n    print()\n", "H,W = map(int,input().split())\nA = [input() for i in range(H)]\n\nB = []\nfor row in A:\n    if all(a=='.' for a in row): continue\n    B.append(row)\n\nC = ['' for _ in range(len(B))]\nfor col in zip(*B):\n    if all(a=='.' for a in col): continue\n    for i,a in enumerate(col):\n        C[i] += a\nfor row in C:\n    print(row)", "import math\n\nh, w = map(int, input().split(\" \"))\naL = [list(input()) for _ in range(h)]\n\nfor i in reversed(range(h)):\n    if len(set(aL[i])) == 1 and aL[i][0][0] == \".\":\n        del aL[i]\n\nfor i in reversed(range(w)):\n    for j in range(len(aL)):\n        if aL[j][i] == \"#\":\n            break\n    else:\n        for k in range(len(aL)):\n            del aL[k][i]\n\nfor a in aL:\n    print(\"\".join(a))", "a = input().split()\nH = int(a[0])\nW = int(a[1])\nadj = int(0)\ns = []\np = []\n\nfor k in range(H):\n    m = input()\n    for i in range(W):\n        p.append(m[i])\n    s.append(p)\n    p = []\n\nfor i in range(W):\n    i = i - adj\n    temp = int(0)\n    for k in range(H):\n        if s[k][i] == \"#\":\n            temp = 1\n            break\n        else:\n            pass\n    if temp == 0:\n        for k in range(H):\n            del s[k][i]\n        adj += 1\n    else:\n        pass\n\nW = W - adj\nadj = 0\n\nfor i in range(H):\n    i = i - adj\n    temp = int(0)\n    for k in range(W):\n        if s[i][k] == \"#\":\n            temp = 1\n            break\n        else:\n            pass\n    if temp == 0:\n        del s[i]\n        adj += 1\n    else:\n        pass\n\nH = H - adj\n\nfor i in range(H):\n    tinpo = ''.join(s[i])\n    print(tinpo)", "#!/usr/bin/env python3\nimport sys\ndef input():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    H, W = list(map(int, input().split()))\n    a = []\n    white = '.' * W\n    for i in range(H):\n        s = input()\n        if s == white:\n            pass\n        else:\n            a.append(s)\n\n    black = []\n    for w in range(W):\n        for h in range(len(a)):\n            if a[h][w] == '#':\n                black.append(w)\n\n    black = sorted(list(set(black)))\n    for h in range(len(a)):\n        t = ''\n        for b in black:\n            t += a[h][b]\n        print(t)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "H, W = map(int, input().split())\n\nL, side, ver = [], [], []\n\nfor i in range(H):\n    a = list(input())\n    L.append(a)\n\nfor i in range(H):\n    if ('#' in L[i]) == True:\n        side.append(L[i])\n\nside = list(map(list, zip(*side)))\n\nfor i in range(len(side)):\n    if ('#' in side[i]) == True:\n        ver.append(side[i])\n\nver = list(map(list, zip(*ver)))\n\nfor i in range(len(ver)):\n    print(''.join(ver[i]))", "h,w = map(int,input().split())\na = [list(input()) for i in range(h)]\ndelrow = []\ndelline = []\nfor i in range(w):\n  whiteline = 0\n  for j in range(h):\n    if a[j][i] == \".\":\n      whiteline += 1\n    if whiteline == h:\n      delline.append(i)\nfor i in range(h):\n  whiterow = 0\n  for j in range(w):\n    if a[i][j] == \".\":\n      whiterow += 1\n    if whiterow == w:\n      delrow.append(i)\nfor i in range(h):\n  if i in delrow:\n    continue\n  else:\n    ans = \"\"\n    for j in range(w):\n      if j in delline:\n        continue\n      else:\n        ans += a[i][j]\n  print(ans)", "h, w = map(int, input().split())\na = [''] * h\nfor i in range(h):\n\ta[i] = input()\n\nrow = [False] * h\ncol = [False] * w\nfor i in range(h):\n\tfor j in range(w):\n\t\tif a[i][j] == '#':\n\t\t\trow[i] = True\n\t\t\tcol[j] = True\n\nfor i in range(h):\n\tif row[i]:\n\t\tfor j in range(w):\n\t\t\tif col[j]:\n\t\t\t\tprint(a[i][j], end = '')\n\t\tprint()\n", "h,w=map(int,input().split())\nA=[]\nans=[]\nfor i in range(h):\n  A.append(list(input()))\nfor a in A:\n  if a != ['.']*w:\n    ans.append(a)\ncounter=[]\nfor i in range(w):\n  flag=0\n  for j in range(len(ans)):\n    if ans[j][i]=='#':\n      flag=1\n      break\n  if flag==1:\n    counter.append(i)\n\nfor a in ans:\n  tmp=''\n  for i in counter:\n    tmp=tmp+a[i]\n  print(tmp)", "h,w=map(int,input().split())\na=[]\ndata=[0]*w\nfor i in range(h):\n  a_=input()\n  if a_!='.'*w:\n    a.append(a_)\n    for j in range(w):\n      if a_[j]=='.':\n        data[j]+=1\nn=len(a)\nfor i in range(n):\n  ans=[]\n  for j in range(w):\n    if data[j]!=n:\n      ans.append(a[i][j])\n  print(*ans,sep='')", "H, W = map(int,input().split())\nA = [input() for i in range(H)]\nrow = [False]*H\ncol = [False]*W\nfor i in range(H):\n    for j in range(W):\n        if A[i][j] == '#':\n            row[i] = True\n            col[j] = True\nfor i in range(H):\n    if row[i]:\n        for j in range(W):\n            if col[j]:\n                print(A[i][j], end = '')\n        print()", "# \u9069\u5f53\u306b\u611a\u76f4\nh, w = list(map(int, input().split()))\ntable = [list(input()) for _ in range(h)]\ntable2 = []\nfor t in table:\n    if t != [\".\"] * w:\n        table2.append(t)\ntable2 = list(zip(*table2))\ntable3 = []\nfor t in table2:\n    if list(t) != [\".\"] * len(t):\n        table3.append(t)\ntable3 = list(zip(*table3))\nfor t in table3:\n    print((\"\".join(t)))\n", "h, w = map(int, input().split())\ngrid = []\nfor _ in range(h):\n  grid.append(list(input()))\n  \ndelete_row = []\nfor i in range(h):\n  for j in range(w):\n    if grid[i][j] != '.':\n      break\n    elif j == w-1:\n      delete_row.append(i)\n      \ndelete_col = []\nfor j in range(w):\n  for i in range(h):\n    if grid[i][j] != '.':\n      break\n    elif i == h-1:\n      delete_col.append(j)\n      \nfor i in range(h):\n  if i not in delete_row:\n    for j in range(w):\n      if j not in delete_col:\n        print(grid[i][j], end='')\n    print()\n", "import math\nfrom math import gcd,pi,sqrt\nINF = float(\"inf\")\n\nimport sys\nsys.setrecursionlimit(10**6)\nimport itertools\nfrom collections import Counter,deque\ndef i_input(): return int(input())\ndef i_map(): return list(map(int, input().split()))\ndef i_list(): return list(i_map())\ndef i_row(N): return [i_input() for _ in range(N)]\ndef i_row_list(N): return [i_list() for _ in range(N)]\ndef s_input(): return input()\ndef s_map(): return input().split()\ndef s_list(): return list(s_map())\ndef s_row(N): return [s_input for _ in range(N)]\ndef s_row_str(N): return [s_list() for _ in range(N)]\ndef s_row_list(N): return [list(s_input()) for _ in range(N)]\n\n\ndef main():\n    h,w = i_map()\n    l = []\n    for i in range(h):\n        a = input()\n        if \"#\" in a:\n            l.append(a)\n    l = [list(i) for i in zip(*l)]\n    ans = []\n\n    for i in l:\n        if \"#\" in i:\n            ans.append(i)\n\n    ans = [i for i in zip(*ans)]\n    for i in ans:\n        print((\"\".join(i)))\n\n\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\n\ninput = sys.stdin.readline\nH, W = map(int, input().split())\ngrid = []\nfor _ in range(H):\n    grid.append(list(input().strip()))\n\nh_set = set()\nfor i in range(H):\n    flag = True\n    for j in range(W):\n        if grid[i][j] == \"#\":\n            flag = False\n            break\n    if flag:\n        h_set.add(i)\n\nw_set = set()\nfor j in range(W):\n    flag = True\n    for i in range(H):\n        if grid[i][j] == \"#\":\n            flag = False\n            break\n    if flag:\n        w_set.add(j)\n\nfor i in range(H):\n    if i in h_set:\n        continue\n    for j in range(W):\n        if j in w_set:\n            continue\n        print(grid[i][j], end=\"\")\n    print(\"\")", "H, W = [int(x) for x in input().split()]\nA = [input().strip() for _ in range(H)]\n\nB = []\nfor i in range(H):\n    if \"#\" in A[i]:\n        B.append(A[i])\n\nans = []\nfor j in range(W):\n    for i in range(len(B)):\n        if \"#\" ==  B[i][j]:\n            ans.append(j)\n            break\n\nfor i in range(len(B)):\n    for j in ans:\n        print(B[i][j], end=\"\")\n    print()\n\n\n\n\n", "h, w = map(int, input().split())\na = [''] * h\nfor i in range(h):\n\ta[i] = input()\n\nrow = [False] * h\ncol = [False] * w\nfor i in range(h):\n\tfor j in range(w):\n\t\tif a[i][j] == '#':\n\t\t\trow[i] = True\n\t\t\tcol[j] = True\n\nfor i in range(h):\n\tif row[i]:\n\t\tfor j in range(w):\n\t\t\tif col[j]:\n\t\t\t\tprint(a[i][j], end = '')\n\t\tprint()\n", "#12 B - Grid Compression\nH,W = map(int,input().split())\na = [list(input()) for _ in range(H)]\n\ni = 0\nwhile i < len(a):\n    if all(m == '.' for m in a[i]) :\n        a.pop(i)\n    else:\n        i += 1\n#\u52a0\u5de5\u3057\u305fa\u306b\u304a\u3051\u308bH\u3092\u4fdd\u6301\u3057\u306a\u304a\u3059\nH_sc = len(a)\nw = 0\nwhile w < len(a[0]):\n    cnt = 0\n    for h in range(H_sc):\n        if a[h][w] == '#':\n            w += 1\n            break\n        else:\n            cnt += 1\n    if cnt == H_sc:\n        for b in a:\n            b.pop(w)\nfor g in a:\n    print(''.join(g))", "def main():\n    h, w = list(map(int, input().split()))\n    board = []\n    safe_h = set()\n    safe_w = set()\n    for i in range(h):\n        board.append(list(input()))\n    for i in range(h):\n        for j in range(w):\n            if board[i][j] == '#':\n                safe_h.add(i)\n                safe_w.add(j)\n    for i in safe_h:\n        for j in safe_w:\n            print(board[i][j], end='')\n        print()\n\n\ndef __starting_point():\n    main()\n__starting_point()", "h, w = (int(i) for i in input().split())\nlist_a = [input() for s in range(0, h)]\nlist_tmp = []\nfor i in range(0, h):\n    for j in range(0, w):\n        if list_a[i][j] == '#':\n            list_tmp.append(list(list_a[i]))\n            break\n# \u8ee2\u7f6e... https://note.nkmk.me/python-list-transpose/\u3000\u53c2\u7167\nlist_tmp_t = [list(x) for x in zip(*list_tmp)]\nlist_tmp2 = []\nfor i in range(0, len(list_tmp_t)):\n    for j in range(0, len(list_tmp_t[i])):\n        if list_tmp_t[i][j] == '#':\n            list_tmp2.append(list(list_tmp_t[i]))\n            break\n# \u8ee2\u7f6e... https://note.nkmk.me/python-list-transpose/\u3000\u53c2\u7167\nlist_ans = [list(x) for x in zip(*list_tmp2)]\nfor i in range(0, len(list_ans)):\n    print(\"\".join(list_ans[i]))", "# ABC107\n# B Grid Compression \u7b54\u3048\u898b\u305f\nH, W = map(int, input().split())\na = [\"\"] * H\na\nfor i in range(H):\n    a[i] = input()\n\n\nrow = [False] * H\ncol = [False] * W\nfor i in range(H):\n    for j in range(W):\n        if a[i][j] == \"#\":\n            row[i] = True\n            col[j] = True\nfor i in range(H):\n    if row[i]:\n        for j in range(W):\n            if col[j]:\n                print(a[i][j],end=\"\")\n        print()\npass\n", "h, w = map(int, input().split())\nA = [input() for i in range(h)]\nrow = [False] * h\ncol = [False] * w\nfor i in range(h):\n    for j in range(w):\n        if A[i][j] == '#':\n            row[i] = True\n            col[j] = True\nfor i in range(h):\n    if row[i]:\n        for j in range(w):\n            if col[j]:\n                print(A[i][j], end = '')\n        print()", "h,w=map(int, input().split())\nalist=['']*h\nfor i in range(h):\n  alist[i]=input()\nhlist=[]\nwlist=[]\nfor i in range(h):\n  flag=False\n  for j in range(w):\n    if alist[i][j]=='#':\n      flag=True\n  if flag:\n    hlist.append(i)\nfor i in range(w):\n  flag=False\n  for j in range(h):\n    if alist[j][i]=='#':\n      flag=True\n  if flag:\n    wlist.append(i)\nfor i in hlist:\n  ans=[]\n  for j in wlist:\n    ans.append(alist[i][j])\n  print(''.join(ans))", "h,w = map(int, input().split())\na0 = [[] for i in range(h)]\nfor i in range(h):\n  a0[i] = input()\na = [j for j in a0 if \"#\" in j]\nat0 = list(map(list, zip(*a)))\nfor k in range(len(at0)):\n  at0[k] = \"\".join(at0[k])\nat = [l for l in at0 if \"#\" in l]\nfor m in list(map(list, zip(*at))):\n  print(\"\".join(m))", "h, w = map(int, input().split())\na = [''] * h\nfor i in range(h):\n\ta[i] = input()\n\nrow = [False] * h\ncol = [False] * w\nfor i in range(h):\n\tfor j in range(w):\n\t\tif a[i][j] == '#':\n\t\t\trow[i] = True\n\t\t\tcol[j] = True\n\nfor i in range(h):\n\tif row[i]:\n\t\tfor j in range(w):\n\t\t\tif col[j]:\n\t\t\t\tprint(a[i][j], end = '')\n\t\tprint()\n", "H,W=map(int,input().split())\nG=[list(input()) for i in range(H)]\nallwhite=['.']*W\ntmp=[]\nfor i in range(H):\n    if G[i]!=allwhite:\n        tmp.append(G[i])\nG=tmp\nans=[\"\" for i in range(len(G))]\nfor j in range(W):\n    p=False\n    for i in range(len(G)):\n        if G[i][j]=='#':\n            p=True\n            break\n    if p:\n        for i in range(len(G)):\n            ans[i]+=G[i][j]\nprint(*ans,sep='\\n')\n"]