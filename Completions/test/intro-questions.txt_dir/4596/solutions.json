["n = int(input())\na = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    cnt = cnt | a[i]\n\nj = 0\nans = 0\nwhile 1:\n    if (cnt >> j & 1 == 0):\n        ans += 1\n        j += 1\n    else:\n        break\nprint(ans)", "n = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in a:\n    cnt = 0\n    while i%2 == 0:\n        cnt +=1\n        i //=2\n    l.append(cnt)\nprint(min(l))", "n = int(input())\na = list(map(int, input().split()))\n\nans = 1000\nfor i in range(n):\n    x = a[i]\n    shift = 0\n    while(x%2==0):\n        x = int(x/2)\n        shift+=1\n    ans = min(ans, shift)\n    if ans == 0:\n        break\nprint(ans)", "#81B\nN=int(input())\ndata=map(int,input().split())\ndef wareru(n):\n    p=0\n    while n%2==0:\n        n=n//2\n        p=p+1\n    return p\nprint(min(map(wareru,data)))", "n = int(input())\na = list(map(int, input().split()))\ncount = 0\n\nwhile True:\n\todd = False\n\tfor x in range(n):\n\t\tif a[x] % 2 != 0:\n\t\t\todd = True\n\t\t\tbreak\n\t\telse:\n\t\t\ta[x] //= 2\n\tif odd: break\n\tcount += 1\n\nprint(count)", "num = int(input())\nnu_list = [int(v) for v in input().split()]\ncount = 0\n#print(nu_list)\nbool = True\nwhile bool == True:\n  for i in range(len(nu_list)):\n    if nu_list[i] % 2 != 0:\n      bool = False\n      break\n    else:\n      nu_list[i] = nu_list[i] // 2\n  if bool == True:\n    count += 1 \nprint(count)", "N=input()\na=list(map(int,input().split()))\nres=10**9\n\nfor i in a:\n    count=0\n    while i%2==0:\n        count+=1\n        i=i/2\n    if count<res:\n        res=count\nprint(res)", "N = int(input())\nA = [int(i) for i in input().split()]\nB = A.copy()\nOK = True\ncount = 0\nwhile OK:\n    for c in range(N):\n        if A[c] % 2 == 0:\n            A[c] = A[c] // 2\n            if A[-1] == (B[-1] / (2 ** (count+1))):\n                count += 1\n        else:\n            OK = False\n            break\nprint(count)", "n = int(input())\nA = list(map(int, input().split()))\n\nK = 0\nwhile all(a%2 == 0 for a in A):\n  A = [a/2 for a in A]\n  K += 1\n  \nprint(K)\n", "n=int(input())\na=list(map(int,input().split()))\ncount=-1\nfor j in range(10**5):\n  count+=1\n  for i in range(n):\n    if a[i]%2!=0:\n      print(count)\n      return\n    a[i]//=2\n  \nprint(count)", "n = int(input())\na = list(map(int, input().split()))\n\ncnt = 0\n\nwhile True:\n  exist_odd = False\n  for index in range(len(a)):\n    if a[index] % 2 != 0:\n      exist_odd = True\n    a[index] /= 2\n    \n  if exist_odd: break\n    \n  cnt = cnt + 1\n\nprint(cnt)", "import re\ninput()\nAn=input().split()\nprint(min(len((re.findall(\"0+$\",bin(int(a)))+[\"\"])[0]) for a in An))", "N = int(input())\n\nl = list(map(int, input().split()))\n\ncounter = 0\nflag = 1\n\nwhile flag == 1:\n\tfor i in range(len(l)):\n\t\tif l[i] % 2 != 0:\n\t\t\tflag = 0\n\t\t\tbreak\n\t\telse:\n\t\t\tl[i] = int(l[i] / 2)\n\tif flag == 1:\n\t\tcounter += 1\n\nprint(counter)", "n = int(input())\na = list(map(int, input().split()))\n# count = 0\n# list a[i]\u304c\u5076\u6570\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3002\u30eb\u30fc\u30d7\u306f\u3068\u308a\u3042\u3048\u305a\u7701\u7565\u3059\u308b\n\nexist_odd = False\n# in_if = 0\nin_for = 0\n# in_while = 0\nwhile exist_odd == False:\n    for i in range(n):\n        if a[i] % 2 != 0:\n            exist_odd = True\n            if n != i:\n                in_for -= 1\n            break\n        else:\n            a[i] = a[i] / 2\n        # in_if += 1\n        # print(in_if)\n    in_for += 1\nprint(in_for)", "N = int(input())\nA = list(map(int, input().split()))\ncnt = 0\n\nflag = True\nwhile flag:\n    for i in range(N):\n        if A[i]%2 == 0:\n            A[i]//=2\n        else:\n            flag = False\n            break\n    else:\n        cnt += 1\n        continue\nprint(cnt)\n", "n = int(input())\na_list = list(map(int, input().split()))\nnew_list = []\nans = 0\nwhile True:\n    for i in a_list:\n        if i % 2 == 1:\n            break\n        else:\n            a = i // 2\n            new_list.append(a)\n    if len(new_list) < n:\n        break\n    ans += 1\n    a_list = new_list\n    new_list = []\n\nprint(ans)", "import numpy as np\n\nN = int(input())\nA = list(map(int,input().split()))\n\nans = 0\n\ndef func1(n):\n  return n/2\n\ndef func2(n):\n  return n%2\n\ni = 0\nwhile i == 0:\n  \n  x = list(map(func2,A))\n  \n  if sum(x) == 0:\n    ans += 1\n    A = list(map(func1,A))\n  else:\n    break\n\nprint(ans)\n\n\n", "n = int(input())\na = list(map(int,input().split()))\n\ndef devide(a,c,n):\n    even = True\n    for i in range(n):\n        if a[i] % 2 != 0:\n           even = False\n        else:\n            a[i] = int(a[i] / 2)\n    return devide(a,c+1,n) if even else c\nprint(devide(a,0,n))", "def main():\n    n = int(input())\n    a = list(map(int, input().split(\" \")))\n    ans = 0\n    while True:\n        for i in range(n):\n            if a[i] % 2 != 0:\n                return ans\n            a[i] = a[i] // 2\n        ans += 1\n\n\nprint(main())", "num = int(input())\n \nvals = list(map(int,input().split()))\n \ncnt = 0\nflag = True\nwhile(flag):\n\tfor i in range(num):\n\t\tif vals[i] % 2 == 1:\n\t\t\tprint(cnt)\n\t\t\tflag = False\n\t\t\tbreak\n\t\telse:\n\t\t\tvals[i] = vals[i] / 2\n\tcnt += 1", "n = int(input())\na = list(map(int,input().split()))\n\ncount = 0\nwhile True:\n    flg = False\n    for i in range(n):\n        if a[i] % 2 != 0:\n            flg = True\n    if flg:\n        break\n    \n    for j in range(n):\n        a[j] /= 2\n    count += 1\nprint(count)", "N = int(input())\nA = list(map(int,input().split()))\nans = 0\nwhile 1:\n    flg = 0\n    for i in range(N):\n        if A[i] % 2 == 0:\n            A[i] /= 2\n        else:\n            flg = 1\n            break\n    if flg == 1:\n        break\n    ans += 1\nprint(ans)", "n = input()\na = list(map(int,input().split()))\nans = float(\"inf\")\nfor i in a:\n    ans = min(ans, len(bin(i)) - bin(i).rfind(\"1\") - 1)\nprint(ans)", "import numpy as np\n\nN = int(input())\narr = np.array(list(map(int, input().split())))\ncnt = 0\nwhile True:\n  if np.sum(arr%2) > 0:\n    break\n  else:\n    arr = arr/2\n    cnt += 1\nprint(cnt)\n  \n", "N = int(input())\nA = list(map(int, input().split()))\n\nans = 0\n\nwhile True:\n  exist_odd = False\n  for n in range(N):\n    if A[n] % 2 == 1:\n      exist_odd = True\n      break\n    else:\n      A[n] //= 2\n  if exist_odd: break\n  ans += 1\n\nprint(ans)\n", "n = int(input())\na = list(map(int, input().split()))\nans = 0\nwhile True:\n    for i in range(n):\n        if a[i] % 2 == 1:\n            print(ans)\n            return\n        else:\n            a[i] /= 2\n    ans += 1\nprint(ans)\n", "N=int(input())\nA=list(map(int,input().split()))\ndef rec(A):\n    B=[0]*N\n    for i in range(N):\n        if A[i] % 2 != 0: return 0\n        B[i] = A[i] / 2\n    return rec(B)+1\nprint(rec(A))", "n = int(input())\na = list(map(int, input().split()))\ncnt = 0\n\nwhile all(i%2==0 for i in a):\n  a = [i//2 for i in a]\n  cnt+=1\n\nprint(cnt)\n", "n = int(input())\na = list(map(int, input().split()))\nres = 0\nwhile all(i % 2 == 0 for i in a):\n    a = [i/2 for i in a]\n    res += 1\nprint(res)", "n = int(input())\na = list(map(int,input().split()))\nx = 0\nt = True\nwhile t:\n    for i in range(n):\n        if a[i] % 2 == 1:\n            t = False\n        a[i] /= 2\n    x += 1\nprint(x-1)", "N = int(input())\nA = list([0]*N)\nA = list(map(int, input().split()))\n\ncnt = 0\nflag = False\nwhile 1:\n    for i in range(N):\n        if A[i] % 2 != 0:\n            flag = True\n            break\n        A[i] = A[i] /2\n    if flag:\n        break\n    cnt += 1\nprint(cnt)", "N = int(input())\nA = list(map(int, input().split()))\n\ni = 1\nescape = False\nwhile 1:\n  for j in range(N):\n    if A[j] % (2 ** i) == 0:\n      pass\n    else:\n      escape = True\n      break\n  else:\n    i += 1\n  \n  if escape:\n    break\n    \nprint((i - 1))\n", "N = int(input())\nA = list(map(int, input().split()))\ncount = 0\nroop = True\n\nwhile roop == True:\n    for i in range(N):\n        if A[i] % 2 == 0:\n            A[i] /= 2\n        else:\n            roop = False\n            break\n            \n    if roop == True:\n        count += 1\nprint(count)\n\n\n\n", "N=int(input())\nA=list(map(int,input().split()))\nans_list = []\n\nfor n in A:\n    temp = n\n    count = 0\n    while temp % 2 == 0:\n        temp /= 2\n        count = count + 1\n    ans_list.append(count)\n    \nprint(min(ans_list))", "n = int(input())\na = list(map(int, input().split()))\ncount = 0\n# list a[i]\u304c\u5076\u6570\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3002\u30eb\u30fc\u30d7\u306f\u3068\u308a\u3042\u3048\u305a\u7701\u7565\u3059\u308b\n\nexist_odd = False\nwhile exist_odd == False:\n    for i in range(n):\n        if a[i] % 2 != 0:\n            exist_odd = True\n            if n != i:\n                count -= 1\n            break\n        else:\n            a[i] = a[i] / 2\n    count += 1\n    # print(count)\nprint(count)", "N=int(input())\nA=list(map(int,input().split()))\ncount=0\n \nwhile all(a%2==0 for a in A):\n  A=[a//2 for a in A]\n  count+=1\n \nprint(count)", "def f(n, a):\n    count = 0\n    while True:\n        for i in range(n):\n            if a[i] % 2 == 0:\n                a[i] = a[i] / 2\n            else :\n                return count\n        count += 1\n\nn = int(input())\na = [int(s) for s in input().split()]\nprint(f(n,a))", "import numpy as np\nn = int(input())\nA = np.array(input().split(), np.int64)\n\ncnt = 0\nwhile np.all(A % 2 == 0):\n    A = A // 2\n    cnt += 1\nprint(cnt)\n", "N = int(input())\na = list(int(x) for x in input().split())\n\nans = 0\nflag = True\nwhile flag:\n  for i in range(N):\n    if a[i]%2 == 0:\n      a[i]/=2\n    else:\n      flag = False\n      break\n  if flag:\n    ans+=1\n\nprint(ans)", "N = int(input())\nnums = [int(s) for s in input().split()]\ni = 0\ncnt = 0\nwhile True:\n    if i == N:\n        i = 0\n        cnt += 1\n    if nums[i % N] % 2 == 1:\n        break\n    nums[i % N] //= 2\n    i += 1\nprint(cnt)", "import numpy as np\nN=int(input())\nA=list(map(int,input().split()))\nA=np.array(A)\n\ncount=0\nflag=True\nwhile flag:\n  for i in range(N):\n    if A[i]%2==1:\n      flag=False\n  A=A/2\n  if flag:\n    count+=1\nprint(count)", "N=int(input())\nA=list(map(int,input().split()))\n\ncnt=0\nflag=True\nwhile flag:\n    for i in range(N):\n        if A[i]%2==0:\n            A[i]//=2\n        else:\n            flag=False\n            break\n    else:\n        cnt+=1\n        continue\n    break\nprint(cnt)\n", "def resolve():\n    _ = int(input())\n    a = list(map(int, input().split()))\n    res = 0\n    while all(i % 2 == 0 for i in a):\n        res += 1\n        a = list(map(lambda x: x / 2, a))\n    print(res)\n\nresolve()", "n = int(input())\na = list(map(int, input().split()))\nt = True\nans = 0\nwhile t:\n    for i in range(n):\n        if a[i] % 2 == 1:\n            t = False\n            break\n        else:\n            a[i] /= 2\n    if t:\n        ans += 1\nprint(ans)\n\n", "#!/usr/bin/env python3\nimport math\nimport sys\nsys.setrecursionlimit(10**6)\n\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = 10**10\n\nfor i in a:\n    tmp = 0\n    while(i % 2 != 1):\n        tmp += 1\n        i = i//2\n    # print(tmp)\n    ans = min(ans, tmp)\n\nprint(ans)\n", "n = int(input())\nlist_a = [int(i) for i in input().split()]\nans = 0\nflag = True\nwhile flag:\n    for i in range(0, len(list_a)):\n        if list_a[i] % 2 == 0:\n            list_a[i] = list_a[i] // 2\n        else:\n            flag = False\n            break\n\n        if i == len(list_a) - 1:\n            ans += 1\n\nprint(ans)", "n = int(input())\nls = list(map(int,input().split()))\nans = float(\"inf\")\nfor i in range(n):\n    p = 1\n    while True:\n        if ls[i] / (2 ** p) % 1 == 0:\n            p += 1\n        else:\n            p -= 1\n            break\n    if p < ans:\n        ans = p\nprint(ans)", "N = int(input())\nA = list(map(int,input().split()))\nans = 10**9\nfor x in A:\n    if x % 2 == 1:\n        print(0)\n        return\n    c = 0\n    while x % 2 == 0:\n        x //= 2\n        c += 1\n    ans = min(ans, c)\nprint(ans)", "def main():\n\n    n = int(input())\n    nums = list(map(int, input().split()))\n    ans = 0\n    flg = True\n    while flg:\n        for i in range(len(nums)):\n            if nums[i] % 2 == 0:\n                num = nums[i] / 2\n                nums[i] = num\n            else:\n                flg = False\n                break\n        if flg:\n            ans += 1\n\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()", "N = int(input())\nA_lst = list(map(int, input().split()))\ncnt = 0\nA_lst_c = []\nfor i in range(N):\n    while A_lst[i] % 2 == 0:\n        A_lst[i] //= 2\n        cnt += 1\n    if i == 0:\n        pass\n    else:\n        cnt = cnt - A_lst_c[i-1]\n    A_lst_c.append(cnt)\nA_lst_c_min = min(A_lst_c)\nprint(A_lst_c_min)", "N = int(input())\nA = list(map(int, input().split()))\n\ndef cnt(x):\n  ret = 0\n  while x%2 == 0:\n    ret += 1\n    x //= 2\n  return ret\n\nans = 30\nfor a in A:\n  ans = min(ans, cnt(a))\n\nprint(ans)", "n = int(input())\nA = [0]*n\nL = list(map(int,input().split()))\nfor i in range(n):\n  cnt = 0\n  while L[i] % 2 == 0:\n    L[i] = L[i]/2\n    cnt += 1\n  A[i] = cnt\nprint(min(A))", "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor ans in range(31):\n    for i,A in enumerate(a):\n        if A%2:\n            print(ans)\n            return\n        a[i] //= 2\n", "import sys\nn = input()\nli = list(map(int,input().split()))\n\n# \u9ed2\u677f\u306b\u304b\u304b\u308c\u3066\u3044\u308b\u6587\u5b57\u306f\u5168\u90e8\u5076\u6570\u304b\uff1f\nfor i in li:\n  if i % 2 != 0:\n    print(\"0\")\n    return\n\n# \u9ed2\u677f\u306b\u304b\u304b\u308c\u3066\u3044\u308b\u6587\u5b57\u3092\u5168\u90e82\u3067\u5272\u3063\u3066\u3044\u304f\ncount = 0\n\nwhile(True):\n  for index, item in enumerate(li):\n    if item % 2 == 0:\n      li[index] = item / 2\n    else:\n      print(count)\n      return\n  count += 1", "hoge = input()\nint_line = [int(i) for i in input().split()]\n\ncnt = 0\nflag = False\n\nwhile True:\n    for m, i in enumerate(int_line):\n        if i % 2 == 0:\n            int_line[m] = i/2\n        else:\n            flag = True\n    if flag == True:\n        print(cnt)\n        break\n    else:\n        cnt += 1", "N = int(input())\nA = list(map(int, input().split()))\n\ncount = 0\nexist_odd = False\n\nwhile True:\n  for i in range(N):\n    if A[i] % 2 != 0:\n      exist_odd = True\n\n  if exist_odd:\n    break\n\n  for i in range(N):\n    A[i] /=2\n\n  count +=1\n\nprint(count)", "n = int(input())\na = list(map(int,input().split()))\nans = 0\nflag = False\n\nwhile flag == False:\n    for i in range(n):\n        if a[i]%2 == 0:\n            a[i] /= 2\n        else:\n            flag = True\n            break\n    else:\n        ans += 1\n\nprint(ans)", "n = int(input())\ndata = list(map(int,input().split()))\nbool = True\ncount = 0\nwhile bool:\n    for i in range (n):\n        if data[i] % 2 != 0:\n            bool = False\n        data[i] = data[i] // 2\n    if bool == False:\n        print(count)\n    count += 1\n", "N = int(input())\nA = list(map(int,input().split()))\ncount = 0\nroop = True\n\nwhile roop == True:\n    for i in range(N):\n        if A[i] % 2 == 0:\n            A[i] /= 2\n        else:\n            roop = False\n            break\n    if roop == True:\n        count += 1\nprint(count)", "n = int(input())\naa = list(map(int, input().split()))\nans = 100\nfor i in range(n):\n    x = 0\n    while aa[i] > 0:\n        if aa[i] % 2 != 0:\n            break\n        aa[i] //= 2\n        x += 1\n    ans = min(ans, x)\nprint(ans)\n", "n = int(input())\nli = list(map(int, input().split()))\nb = float('inf')\nfor a in li:\n    c = 0\n    while a%2 == 0:\n      a = a/2\n      c += 1\n    b = min(b,c)\nprint(b)\n          \n", "#-*-coding:utf-8-*-\nimport sys\ninput=sys.stdin.readline\nimport numpy as np\n\ndef main():\n    n = input()\n    A = np.array(input().split(),dtype=np.int32)\n    answer=0\n\n    while np.all(A%2==0):\n        A//=2\n        answer+=1\n    print(answer)\n\ndef __starting_point():\n    main()\n__starting_point()", "getints = lambda: map(int, input().split())\nn = int(input())\na = list(getints())\nans = 10 ** 9\nfor x in a:\n    cnt = 0\n    while x % 2 == 0:\n        x /= 2\n        cnt += 1\n    ans = min(ans, cnt)\nprint(ans)", "n = int(input())\nary = list(map(int, input().split()))\n\ndef count_ops(ary):\n    count = 0\n\n    while 1:\n        for i, v in enumerate(ary):\n            if v % 2 == 1:\n                return count\n            else:\n                ary[i] = v/2\n\n        count += 1\n    \n    return count\n \nprint((count_ops(ary)))\n", "from typing import List\n\n\ndef answer(n: int, a: List[int]) -> int:\n    count = 1\n    while all(i % 2 ** count == 0 for i in a):\n        count += 1\n    return count - 1\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print((answer(n, a)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\na = list(map(int,input().split()))\nx = 0\nt = True\nwhile t:\n    for i in range(n):\n        if a[i] % 2 == 1:\n            t = False\n        else:\n            a[i] /= 2\n    x += 1\nprint(x-1)", "N = int(input())\nA = list(map(int, input().split()))\n\ncount = 0\nwhile True:\n    for i in range(N):\n        if A[i] % 2 != 0:\n            break\n        A[i] = A[i] / 2\n    else:\n        count+=1\n        continue\n    break\nprint(count)", "import sys\n\n\ndef solve(N, A):\n    count = 0\n    while True:\n        for i in range(N):\n            if A[i] % 2 > 0:\n                print(count)\n                return\n            A[i] = A[i] / 2\n        count += 1\n    \n\ndef __starting_point():\n    N = int(input())\n    A = list(map(int, input().split()))\n    solve(N, A)\n\n__starting_point()", "n = int(input())\na = [int(x.strip()) for x in input().split()]\nch,ans = 0,0\nflg = 'OK'\nwhile flg == 'OK':\n  for x in a:\n    if x % 2 == 0:\n      ch += 1\n    else:\n      break\n  if ch == n:\n    flg = 'OK'\n    ch = 0\n    ans += 1\n    a = list(map(lambda x:int(x/2),a)) # list\u95a2\u6570\u306b\u30cd\u30b9\u30c8\u3057\u306a\u3044\u3068map\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067NG\u306b\u306a\u308b\n  else:\n    flg = 'NG'\nprint(ans)", "# coding: utf-8\n# Your code here!\n\ndivided_2 = lambda x : int(x / 2)\nenable_divided_2 = lambda x : True if int(x % 2) == 0 else False\n\nn = int(input())\nA = list(map(int, input().split()))\ncnt = 0\n\nwhile(1) : \n    if False in list(map(enable_divided_2, A)) : \n        break\n    A = list(map(divided_2, A))\n    cnt += 1\n    \nprint(cnt)", "n = int(input())\na = list(map(int,input().split()))\nx = 0\nt = True\nwhile t:\n    for i in range(n):\n        if a[i] % 2 == 1:\n            t = False\n        else:\n            a[i] /= 2\n    if t == True:\n        x += 1\nprint(x)", "n = int(input())\na = list(map(int,input().split()))\ncnt = 0\nwhile all([i%2==0 for i in a]):\n    a = [i/2 for i in a]\n    cnt += 1\nprint(cnt)", "N = int(input())\nA = list(map(int, input().split()))\ncount = 0\nwhile all(a % 2 == 0 for a in A):\n  A = [a /2 for a in A]\n  count += 1\nprint(count)\n  \n", "N = int(input())\nA = list(map(int, input().split()))\nans = 0\nis_end = False\nwhile True:\n    for a in A:\n        if a%2 != 0:\n            is_end = True\n            break\n    if is_end:\n        break\n    ans += 1\n    A = [a/2 for a in A]\n\nprint(ans)", "n = int(input())\narr = list(map(int, input().split()))\n\ncnt_arr = []\n\nfor ele in arr:\n    cnt = 0\n    while ele % 2 == 0:\n        ele /= 2\n        cnt += 1\n    cnt_arr.append(cnt)\nprint((min(cnt_arr)))\n", "import numpy as np\nn = int(input())\np = list(map(int, input().split()))\np = np.array(p)\ncnt = 0\nwhile cnt < 10000000:\n    for i in p:\n        if i % 2 != 0:\n            print(cnt)\n            return\n    cnt += 1\n    p = p // 2", "N = int(input())\na = list(map(int,input().split()))\ndev = lambda x : x/2\namari = lambda x : x % 2\nfor i in range(1000):\n    amari_a = list(map(amari, a))\n    if amari_a.count(1) > 0: break\n    a = list(map(dev,a))\nprint(i)", "n = int(input())\na = list(map(int,input().split()))\ny = list()\nfor i in range(n):\n    x = 0\n    while a[i] % 2 == 0:\n        a[i] /= 2\n        x += 1\n    y.append(x)\nprint(min(y))", "import sys\n\nn = int(input())\na = list(map(int, input().split()))\n\ncnt = [0] * n\n\nwhile 1:\n    for i in range(n):\n        if a[i] % 2 == 0:\n            a[i] /= 2\n            cnt[i] += 1\n        else:\n            print(min(cnt))\n            return", "n = int(input())\nl = list(input().split(' '))\n\nflag = True\nt = 0\nwhile True:\n    for i, x in enumerate(l):\n        if int(x) % 2 == 0:\n            l[i] = int(x) / 2\n        else:\n            flag = False\n            break\n    if flag:\n        t += 1\n    else:\n        break\n\nprint(t)\n\n", "n=int(input())\na=list(map(int,input().split()))\nb=[]\ncnt=0\nfor i in range(n):\n    if a[i]%2==1:\n        print('0')\n        return\n    else:\n        while a[i]%2==0:\n            cnt += 1\n            a[i] /=  2\n        b.append(cnt)\n        cnt = 0\nprint(min(b))", "# -*- coding:utf-8 -*-\nN = int(input())\nA_list = list(map(int,input().split()))\n\nans_list = []\ntemp_ans = 0\n\nfor value in A_list:\n    temp_value = value\n    temp_ans = 0\n    while temp_value%2 == 0:\n        temp_value /= 2\n        temp_ans += 1\n\n    ans_list.append(temp_ans)\n\nprint(min(ans_list))", "\ndef div_by_2(n):\n    res = 0\n    while n % 2 == 0:\n        n //= 2\n        res += 1\n    return res\n\nN = int(input())\nA = list(map(int, input().split()))\nprint(min(map(div_by_2, A)))", "#!/usr/bin/env python3\n# atcoder \n# T\u00fcrkler var m\u0131?\n# Herkese memn\u00fcn oldum\nimport sys\n#from heapq import heapify, heappush, heappop\n#from heapq import nlargest, nsmallest\n\niimr = lambda: map(int, sys.stdin.readline().rstrip().split())\nreadline = sys.stdin.readline\n# puorquoi le sys.stdin.buffer.readline() ne fonctionne plus sur atcoder?\n#sys.setrecursionlimit(10 ** 7)\n#INF = 1 << 30 # \u5927\u4f53 1e9\n\n\ndef debug(*x):\n    print(*x, file=sys.stderr)\n\n\n# s == self\nclass atcoder():\n    def __init__(s):\n        f = open(0)\n        s.N = int(f.readline())\n        s.A = list(map(int, f.readline().split()))\n\n    def \u00e7\u00f6zmek(s):\n        res = []\n        res.append(s.\u95a2\u6570(s.N, s.A))\n        print(*res)\t\n    \n    def \u95a2\u6570(self, n, a):\n        guusuu = True\n        cnt = 0\n        while(guusuu):\n            for i in range(n):\n                if(a[i] % 2 != 0):\n                    guusuu = False\n                    break;\n                else:\n                    a[i] /= 2\n            if(guusuu): cnt += 1\n        return cnt \n\ndef __starting_point():\n    ima = atcoder()\n    ima.\u00e7\u00f6zmek()\n\n__starting_point()", "n = int(input())\nline = list(map(int, input().split()))\nans = 30\nfor i in range(n):\n  count = 0\n  x = line[i]\n  while True:\n    if x % 2 == 0:\n      x = x//2\n      count += 1\n    else:\n      break\n  if count < ans:\n    ans = count\nprint(ans)\n      \n", "n = int(input())\nli = list(map(int,input().split()))\nli.sort()\ncnt = 0\nguu = 0\nfor j in range(100000):\n    guu = 0\n    for i in range(len(li)):\n        if li[i] % 2 == 0:\n            guu += 1\n    if guu == n:\n        for i in range(len(li)):\n            li[i] = li[i]//2\n        cnt += 1\n    else:\n        print(cnt)\n        return\n", "n = int(input())\nl = list(map(int, input().split()))\nresult = 0\nloop = 0\nwhile True:\n    if all(x % 2 == 0 for x in l):\n        result += 1\n        for data in range(len(l)):\n            l[data] = l[data]//2\n    else:\n        print(result)\n        return\n", "n=int(input())\na=list(map(int, input().split()))\nma=len(bin(10**9))\nfor i in range(n):\n    cnt=0\n    while a[i]%2==0:\n        a[i]/=2\n        cnt+=1\n    ma=min(ma,cnt)\nprint(ma)\n", "n = int(input())\na = list(map(int, input().split()))\n\nfor i in range(100):\n    for j in range(len(a)):\n        if a[j]%2 == 0:\n            a[j] //= 2\n        else:\n            print(i)\n            return\n", "n = int(input())\na_lst = list(map(int, input().split()))\n\nres = []\nfor a in a_lst:\n  tmp = a\n  cnt = 0\n  while tmp % 2 == 0:\n    tmp = tmp // 2\n    cnt += 1\n  res.append(cnt)\nprint(min(res))", "N=int(input())\nli = list(map(int,input().split()))\n\nflag=True\nans=-1\n\nwhile(flag):\n    ans+=1\n    newlist=[]\n    for i in li:\n        newlist.append(i//2)\n        if i%2!=0:\n            flag=False\n    li=newlist\nprint(ans)\n", "N = int(input())\nA = list(map(int, input().split()))\n\nans = float('inf')\nfor i in range(N):\n    temp = 0\n    while A[i] % 2 == 0:\n        A[i] /= 2\n        temp += 1\n    ans = min(ans, temp)\n\nprint(ans)\n", "N = int(input())\nA = list(map(int,input().split()))\n\ncount=0\nfor _ in range(30):\n    for i in range(N):\n        B=A[i]%2\n        if B==1:\n            break\n        A[i]=A[i]//2\n    else:\n        count+=1\n        continue\n    break\nprint(count)", "def is_divide(an):\n  for i, a in enumerate(an):\n    if a % 2 == 0:\n      an[i] = a / 2\n    else:\n      return False\n  \n  return True\n\nn = int(input())\nan = list(map(int, input().split()))\n\ncount = 0\nwhile True:\n  if not is_divide(an):\n    break\n  count += 1\n\nprint(count)\n", "n = int(input())\na = list(map(int, input().split()))\nINF = 10 ** 9\n\ndef how_many_times_divisible(x):\n    ans = 0\n    while x % 2 == 0:\n        x /= 2\n        ans += 1\n    return ans\n\nans = INF\nfor i in range(n):\n    if how_many_times_divisible(a[i]) < ans:\n        ans = how_many_times_divisible(a[i])\nprint(ans)\n", "def divide(l):\n\tfor i in range(len(l)):\n\t\tif l[i] % 2 == 0:\n\t\t\tl[i] = int(l[i] / 2)\n\t\telse:\n\t\t\treturn False\n\t\t\t\n\treturn True\n\n\nn = int(input())\nl = list(map(int, input().split()))\n\ncount = 0\nwhile divide(l):\n\tcount += 1\n\t\t\nprint(count)", "n = int(input())\na = [int(i) for i in input().split()]\nans = -1\ntrue = 1\n\nwhile true == 1:\n    for i in range(n):\n        if a[i]%2 != 0:\n            true = 0\n            break\n        else:\n            a[i] /= 2\n    ans += 1\n\nprint(ans)", "n=int(input())\nn_list=list(map(int,input().split()))\ncount=0\n\ndef check(list):\n    for i in range(n):\n        if(n_list[i]%2!=0):\n            return False\n    return True\n\n    \n\nwhile(check(n_list)):\n    n_list=[k/2 for k in n_list]\n    count+=1\nprint(count)  ", "N = int(input())\na = list(map(int, input().split()))\nans = 0\nexist = True\n\nwhile exist:\n  for i in range(N):\n    if (a[i]%2 != 0):\n      exist = False\n    else:\n      a[i] = a[i]//2\n  if exist:\n    ans += 1\n\nprint(ans)", "n = int(input())\na = [int(s) for s in input().split()]\n\nans = 0\nparity = True\nwhile parity:\n    for i in range(n):\n        if a[i] % 2 == 0:\n            a[i] = a[i] / 2\n        else:\n            parity = False\n    if parity:\n        ans += 1 \nprint(ans)"]