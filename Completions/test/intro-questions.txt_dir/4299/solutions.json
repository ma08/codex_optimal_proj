["n=int(input())%10\nif n==2 or n==4 or n==5 or n==7 or n==9:\n  print(\"hon\")\nif n==0 or n==1 or n==6 or n==8:\n  print(\"pon\")\nif n==3:\n  print(\"bon\")", "n=int(input())\nif n%10==3:\n    print(\"bon\")\nelif n%10==0 or n%10==1 or n%10==6 or n%10==8:\n    print(\"pon\")\nelse:\n    print(\"hon\")", "n = input()\nn = n[-1]\nif n in [\"2\",\"4\",\"5\",\"7\",\"9\"]:\n  print(\"hon\")\nelif n in [\"0\",\"1\",\"6\",\"8\"]:\n  print(\"pon\")\nelse:\n  print(\"bon\")", "#ABC168\nN=input()\nif N[-1]=='3':\n    print('bon')\nelif N[-1] == '2' or N[-1] =='4' or N[-1] =='5' or N[-1] =='7' or N[-1] =='9':\n    print('hon')\nelse:\n    print('pon')", "a = int(input())%10\nif (a==3):\n    print(\"bon\")\nelif(a==0 or a==1 or a==6 or a==8):\n    print(\"pon\")\nelse:\n    print(\"hon\")", "N = int(input())\nans=N%10\nif ans == 3:\n    print('bon')\nelif ans in [0, 1, 6, 8]:\n    print('pon')\nelse:\n    print('hon')", "n = list(input())\n\ni = len(n) - 1\n\nif n[i] == '3':\n    print('bon')\nelif n[i] == '0' or n[i] == '1' or n[i] == '6' or n[i] == '8':\n    print('pon')\nelse:\n    print('hon')\n", "hon=[2,4,5,7,9]\npon=[0,1,6,8]\nbon=[3]\n\nN=int(input())\n\nif N%10 in hon:\n    print('hon')\nelif N%10 in pon:\n    print('pon')\nelse:\n    print('bon')", "n = str(input())\nif n[-1] == \"3\":\n\tprint(\"bon\")\nelif n[-1] == \"0\" or n[-1] == \"1\" or n[-1] == \"6\" or n[-1] == \"8\":\n\tprint(\"pon\")\nelse:\n  print(\"hon\")", "N = int(input())\nX = (N%100)%10\nif X == 3:\n  print('bon')\nelif X == 0 or X == 1 or X == 6 or X == 8:\n  print('pon')\nelse:\n  print('hon')\n", "n = int(input())\n\nx = n % 10\n\nif x == 3:\n    print('bon')\nelif x == 0 or x == 1 or x == 6 or x == 8:\n    print('pon')\nelse:\n    print('hon')\n", "from collections import Counter\nimport sys\n\nsys.setrecursionlimit(10 ** 6)\n\nmod = 1000000007\ninf = int(1e18)\n\n\ndef main():\n    n = int(input()[-1])\n    if n in [2, 4, 5, 7, 9]:\n        print(\"hon\")\n    elif n in [3]:\n        print(\"bon\")\n    else:\n        print(\"pon\")\n\nmain()\n", "n = int(input()[-1])\nif n == 3:\n    print(\"bon\")\nelif n in [0, 1, 6, 8]:\n    print(\"pon\")\nelse:\n    print(\"hon\")", "N = str(input())\n\nif N[-1] == '3':\n    print('bon')\nelif N[-1] == '0' or N[-1] == '1' or N[-1] == '6' or N[-1] == '8':\n    print('pon')\nelse:\n    print('hon')\n", "n = input()\nnn = n[-1]\na = [\"2\", \"4\", \"5\", \"7\", \"9\"]\nb = [\"0\", \"1\", \"6\", \"8\"]\nc = [\"3\"]\n\nif nn in a:\n    ans = \"hon\"\nelif nn in b:\n    ans = \"pon\"\nelse:\n    ans = \"bon\"\nprint(ans)", "n=input()\n\n\nif n[-1]==\"2\" or n[-1]==\"4\" or n[-1]==\"5\" or n[-1]==\"7\" or n[-1]==\"9\":\n  print(\"hon\")\nelif n[-1]==\"0\" or n[-1]==\"1\" or n[-1]==\"6\" or n[-1]==\"8\":\n  print(\"pon\")\nelse:\n  print(\"bon\")", "n = list(str(input()))\nif n[-1] =='3':\n    print('bon')\n    return\nif  n[-1] =='0'or n[-1] =='1' or n[-1] =='6' or n[-1] == '8':\n    print('pon')\n    return\nprint('hon')", "N = str(input())\n\nif N[-1] == '3':\n    print('bon')\nelif (N[-1] == '0' or N[-1] == '1' or N[-1] == '6' or N[-1] == '8'):\n    print('pon')\nelse:\n    print('hon')\n", "n = input()\n\na = [\"2\",\"4\",\"5\",\"7\",\"9\"]\n\nb = [\"0\",\"1\",\"6\",\"8\"]\n\n\n\nif n[-1] in a:\n    print(\"hon\")\nelif n[-1] in b:\n    print(\"pon\")\nelse:\n    print(\"bon\")", "S=input()[-1];print(\"hpb\"[(S in\"01683\")+(S==\"3\")]+\"on\")", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time, copy,bisect\n#from operator import itemgetter\n#from heapq import heappush, heappop\n#import numpy as np\n#from scipy.sparse.csgraph import shortest_path, floyd_warshall, dijkstra, bellman_ford, johnson\n#from scipy.sparse import csr_matrix\n#from decimal import Decimal, ROUND_HALF_UP, ROUND_HALF_EVEN\nimport sys\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\n\nstdin = sys.stdin\n\nni = lambda: int(ns())\nnf = lambda: float(ns())\nna = lambda: list(map(int, stdin.readline().split()))\nnb = lambda: list(map(float, stdin.readline().split()))\nns = lambda: stdin.readline().rstrip()  # ignore trailing spaces\n\nN = ni()\na = [2, 4, 5, 7, 9]\nb = [0, 1, 6, 8]\nc = [3]\nr = N % 10\nif r in a:\n    print('hon')\nelif r in b:\n    print('pon')\nelse:\n    print('bon')", "n = input()\n\nhon = ['2','4','5','7','9']\npon = ['0','1','6','8']\nbon = ['3']\n\nif n[-1] in bon:\n    print('bon')\nelif n[-1] in hon:\n    print('hon')\nelif n[-1] in pon:\n    print('pon')\n", "N=int(input())\nN%=10\nif N==3:\n  print('bon')\nelif N==0 or N==1 or N==6 or N==8:\n  print('pon')\nelse:\n  print('hon')\n", "word=input()\nw=int(word[-1])\nif w==2 or w==4 or w==5 or w==7 or w==9:\n    print(\"hon\")\nelif w==0 or w==1 or w==6 or w==8:\n    print(\"pon\")\nelse:\n    print(\"bon\")\n", "n=int(input()[-1])\nif n==3:\n    res=\"bon\"\nelif n in [0,1,6,8]:\n    res=\"pon\"\nelse:\n    res=\"hon\"\nprint(res)", "n = input()\nif n[-1] == \"2\" or n[-1] == \"4\" or n[-1] == \"5\" or n[-1] ==\"7\" or n[-1] == \"9\":\n    print(\"hon\")\nelif n[-1] == \"0\" or n[-1] == \"1\" or n[-1] == \"6\" or n[-1] == \"8\":\n    print(\"pon\")\nelse:\n    print(\"bon\")\n", "x = int(input())%10\n\nif x==3:\n  print(\"bon\")\nelif x in {0,1,6,8}:\n  print(\"pon\")\nelse: print(\"hon\")", "X = input()\n\nif int(X[-1]) in [3]:\n    print(\"bon\")\nelif int(X[-1]) in [0,1,6,8]:\n    print(\"pon\")\nelse:\n    print(\"hon\")", "N = input()\n\nPON = [\"0\",\"1\",\"6\",\"8\"]\n\nBON = [\"3\"]\n\nif N[-1:] in BON:\n    print(\"bon\")\nelif N[-1:] in PON:\n    print(\"pon\")\nelse:\n    print(\"hon\")", "n = int(input()) % 10\n\nif n in [2,4,5,7,9] :\n    print(\"hon\")\nelif n in [0,1,6,8] :\n    print(\"pon\")\nelse  :\n    print(\"bon\")", "N = input()\nN = int(N)\n\nfor a in range(0,100):\n    n = N-10*a\n\n    if n <=9:\n        break;\n        \nif n == 2 or n == 4 or n == 5 or n == 7 or n == 9:\n    print('hon')\nelif n == 0 or n == 1 or n == 6 or n == 8:\n    print('pon')\nelif n == 3:\n    print('bon')", "n = str(input())\nif n[-1] == '3':\n    print('bon')\nelif n[-1] == '0' or n[-1] == '1' or  n[-1] == '6' or n[-1] == '8':\n    print('pon')\nelse:\n    print('hon')", "n = int(input())\nn = int(str(n)[len(str(n)) - 1])\nif n == 3:\n    print(\"bon\")\nelif n == 0 or n == 1 or n == 6 or n == 8:\n    print(\"pon\")\nelse:\n    print(\"hon\")\n", "N = int(input())\n\nn = N % 10\nif n in [2, 4, 5, 7, 9]:\n    print(\"hon\")\nif n in [0, 1, 6, 8]:\n    print(\"pon\")\nif n in [3]:\n    print(\"bon\")\n", "n=input()[-1];print([['hon','bon'][n=='3'],'pon'][n in [*'0168']])", "n = int(input()[-1])\nif n in [2,4,5,7,9]:\n    print(\"hon\")\nelif n in [0,1,6,8]:\n    print(\"pon\")\nelse:\n    print(\"bon\")", "n = input()\nif n[-1] in ['3']:\n    print('bon')\nelif n[-1] in ['0','1','6','8']:\n    print('pon')\nelse:\n    print('hon')", "n = input()\n\na = n[-1]\nif a in '3':\n    print('bon')\nelif a in '0168':\n    print('pon')\nelse:\n    print('hon')\n", "N_str=list(reversed(input()))\nN=int(N_str[0])\nif N==2 or N==4 or N==5 or N==7 or N==9:\n    print(\"hon\")\nelif N==0 or N==1 or N==6 or N==8:\n    print(\"pon\")\nelif N==3:\n    print(\"bon\")", "N = int(input())\n\ntem = N%10\n\nhon = [2,4,5,7,9]\npon = [0,1,6,8]\nbon = [3]\n\nif tem in hon:\n    print(\"hon\")\nelif tem in pon:\n    print(\"pon\")\nelif tem in bon:\n    print(\"bon\")", "n = int(input())\n\nif n % 10 in [2,4,5,7,9]:\n    print(\"hon\")\n\nelif n % 10 in [0,1,6,8]:\n    print(\"pon\")\n\nelif n % 10 == 3:\n    print(\"bon\")", "n = int(input())\n\nhon = [2,4,5,7,9]\npon = [0,1,6,8]\n\nnum = n % 10\n\nif num in hon:\n    print(\"hon\")\nelif num in pon:\n    print(\"pon\")\nelif num == 3:\n    print(\"bon\")", "N = int(input())\n\nif str(N)[-1] == str(3):\n    print('bon')\nelif str(N)[-1] in list(map(str, [0, 1, 6, 8])):\n    print('pon')\nelse:\n    print('hon')", "l1 = [2,4,5,7,9]\nl2 = [0,1,6,8]\nn = input()\nlast = int(n[-1:])\nif(last in l1):\n  print('hon')\nelif(last in l2):\n  print('pon')\nelse:\n  print('bon')", "n = input()\n\nif int(n[-1]) in [2,4,5,7,9]:\n  print(\"hon\")\nelif int(n[-1]) in [0,1,6,8]:\n  print(\"pon\")\nelse:\n  print(\"bon\")", "N = int(input())\nif N%10 == 2 or N%10 ==  4 or N%10 == 5 or N%10 == 7 or N%10 ==  9 :\n    print(\"hon\")\nif N%10 == 0 or N%10 == 1 or N%10 == 6 or N%10 == 8 :\n    print(\"pon\")\nif N%10 == 3:\n    print(\"bon\")\n", "a = int(input())\n\nfor i in range(0,10):\n    if (a - i) % 10 == 0:\n        ans = i\n\nif ans == 3:\n    print(\"bon\")\nelif ans == 0 or ans == 1 or ans == 6 or ans == 8:\n    print(\"pon\")\nelif ans == 2 or ans == 4 or ans == 5 or ans == 7 or ans == 9:\n    print(\"hon\")\n\n", "n = list(input())\nn = list(map(int,n))\nif n[-1] == 3 :\n    print('bon')\nelif n[-1] == 0 or n[-1] == 1 or n[-1] == 6 or n[-1] == 8 :\n    print('pon')\nelse :\n    print('hon')", "N = input()\n\nbook = [\"pon\", \"pon\", \"hon\", \"bon\", \"hon\", \"hon\", \"pon\", \"hon\", \"pon\", \"hon\"]\n\nprint(book[int(N[-1])])", "N = list(input())\n\nif N[len(N) - 1] == \"2\" or N[len(N) - 1] == \"4\" or N[len(N) - 1] == \"5\" or N[len(N) - 1] == \"7\" or N[len(N) - 1] == \"9\":\n    print(\"hon\")\nelif N[len(N) - 1] == \"0\" or N[len(N) - 1] == \"1\" or N[len(N) - 1] == \"6\" or N[len(N) - 1] == \"8\":\n    print(\"pon\")\nelif N[len(N) - 1] == \"3\":\n    print(\"bon\")", "def ans168(N: str):\n    hon_list = [\"2\", \"4\", \"5\", \"7\", \"9\"]\n    pon_list = [\"0\", \"1\", \"6\", \"8\"]\n    bon_list = [\"3\"]\n    if N[-1] in hon_list:\n        return \"hon\"\n    if N[-1] in pon_list:\n        return \"pon\"\n    if N[-1] in bon_list:\n        return \"bon\"\n\nN=input()\nprint((ans168(N)))\n", "n=int(input())\na=n%10\nif a==2 or a==4 or a==5 or a==7 or a==9:\n    print(\"hon\")\nelif a==0 or a==1 or a==6 or a==8:\n    print(\"pon\")\nelse:\n    print(\"bon\")", "n = int(input())\nn = int(str(n)[len(str(n)) - 1])\nif n == 3:\n    print(\"bon\")\nelif n in [0, 1, 6, 8]:\n    print(\"pon\")\nelse:\n    print(\"hon\")\n", "if (N:=int(input())%10)==3:\n  print(\"bon\")\nelif N in [0,1,6,8]:\n  print(\"pon\")\nelse:\n  print(\"hon\")", "N=input()\nif int(N[-1]) in [2,4,5,7,9]:\n    print('hon')\nelif int(N[-1]) in [3]:\n    print('bon')\nelse:\n    print('pon')", "def main() -> None:\n    n = input()\n\n    if n[-1] in ['2', '4', '5', '7', '9']:\n        print('hon')\n    elif n[-1] in ['0', '1', '6', '8']:\n        print('pon')\n    else:\n        print('bon')\n\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n=input()\nif n[-1]==\"3\":\n    print(\"bon\")\nelif n[-1]==\"0\"or n[-1]==\"1\"or n[-1]==\"6\"or n[-1]==\"8\":\n    print(\"pon\")\nelse:\n    print(\"hon\")", "print('pphbhhphph'[int(input())%10]+'on')", "N = input()\n\nif N[-1] == \"3\":\n    print(\"bon\")\n\nelif N[-1] == \"0\" or N[-1] == \"1\" or N[-1] == \"6\" or N[-1] == \"8\":\n    print(\"pon\")\n\nelse:\n    print(\"hon\")\n", "a=int(input())%10\nif a==3:\n    print('bon')\nelif a==2 or a==4 or a==5 or a==7 or a==9:\n    print('hon')    \nelse:\n    print('pon')\n", "N = input()\nprint('hon') if N[-1] in [\"2\",\"4\",\"5\",\"7\",\"9\"] else print('bon') if N[-1]==\"3\" else print('pon')", "N = input()\nA = int(N[-1])\nif A in [2,4,5,7,9]:\n    print('hon')\nelif A in [0,1,6,8]:\n    print('pon')\nelse:\n    print('bon')", "n = str(input())\nn = int(n[-1])\n\nif n in {3}:\n    print('bon')\nelif n in {0, 1, 6, 8}:\n    print('pon')\nelse:\n    print('hon')", "n = input()\n\nif n[-1] == '3':\n    print('bon')\nelif n[-1] == '0' or n[-1] == '1' or n[-1] == '6' or n[-1] == '8':\n    print('pon')\nelse:\n    print('hon')\n", "num=input()\nnumline=list(num)\na=int(numline[len(numline)-1])\nif(a==3):\n    print(\"bon\")\nelif(a==0 or a==1 or a==6 or a==8):\n    print(\"pon\")\nelse:\n    print(\"hon\")", "print('pphbhhphph'[int(input()[-1])]+'on')", "n=input()\nhon=\"24579\"\npon=\"0168\"\nx=n[len(n)-1]\nif x in hon:\n\tprint(\"hon\")\nelif x in pon:\n\tprint(\"pon\")\nelse:\n\tprint(\"bon\")\n", "def ans168(N: str):\n    hon_list = [\"2\", \"4\", \"5\", \"7\", \"9\"]\n    pon_list = [\"0\", \"1\", \"6\", \"8\"]\n    bon_list = [\"3\"]\n    if N[-1] in hon_list:\n        return \"hon\"\n    if N[-1] in pon_list:\n        return \"pon\"\n    if N[-1] in bon_list:\n        return \"bon\"\n\nN=input()\nprint((ans168(N)))\n", "d = {n: 'hon' for n in \"24579\"}\nd.update({n: 'pon' for n in \"0168\"})\nd.update({\"3\": 'bon'})\n \nprint(d[input()[-1]])", "n=int(input())%10\nif n in (2,4,5,7,9):\n  print('hon')\nelif n in (0,1,6,8):\n  print('pon')\nelse:\n  print('bon')", "s = int(input())\na = [0,1,6,8]\nb = [3]\nif s%10 in a:\n  print(\"pon\")\nelif s%10 in b:\n  print(\"bon\")\nelse:\n  print(\"hon\")", "N = int(input()[-1])\nif N in {2,4,5,7,9}:\n    print(\"hon\")\nelif N in {0,1,6,8}:\n    print(\"pon\")\nelse:\n    print(\"bon\")", "nn = list(str(input()))\nn = [int(x) for x in nn]\na = [2,4,5,7,9]\nb = [0,1,6,8]\n\nif n[-1] in a:\n  print('hon')\nelif n[-1] in b:\n  print('pon')\nelif n[-1] == 3:\n  print('bon')", "N = input()\nif(N[-1] == \"2\" or N[-1] == \"4\" or N[-1] == \"5\" or N[-1] == \"7\" or N[-1] == \"9\"):\n    print(\"hon\")\nelif(N[-1] == \"0\" or N[-1] == \"1\" or N[-1] == \"6\" or N[-1] == \"8\"):\n    print(\"pon\")\nelse:\n    print(\"bon\")", "N = int(input())\n\n# # 1\u306e\u4f4d\u3092\u629c\u304d\u51fa\u3059\n# \u65b9\u6cd5\uff11(\u6587\u5b57\u5217\u306e\u6700\u5f8c\u306e\uff11\u6587\u5b57\u3092\u629c\u304d\u51fa\u3059)\n# N = input()\n# #  print(len(N))\n# print(N[len(N) -1])\n\n# \u65b9\u6cd5\uff12\uff08\u6574\u6570\u306e\u4e0b\uff11\u6841\u306e\u6570\u3092\u629c\u304d\u51fa\u3059\uff09\n# x\u3092\uff11\uff10\u3067\u5272\u3063\u305f\u3042\u307e\u308a\n# print(N % 10)\n\nshimo1keta = N % 10\n\n# # \u6587\u5b57\u5217Q\u304c\u96c6\u5408W\u306e\u4e2d\u306b\u542b\u307e\u308c\u308b\u306a\u3089\u2026 (ABC171)\n# if Q in W:\n#     print('a')\n# else:\n#     print('A')\n\nif shimo1keta == 3:\n    print('bon')\nelif shimo1keta in [0, 1, 6, 8]:\n    print('pon')\nelse:\n    print('hon')\n", "s= input()\n \nif s[-1]=='2' or s[-1]=='4' or s[-1]=='5' or s[-1]=='7' or s[-1]=='9':\n  print('hon')\nelif s[-1]=='3':\n  print('bon')\nelse:\n  print('pon')\n", "n = input()\n\nif n[-1] == '3':\n    print('bon')\nelif n[-1] == '0' or n[-1] == '1' or n[-1] == '6' or n[-1] == '8':\n    print('pon')\nelse:\n    print('hon')", "n=list(input())\np=int(n[-1])\nif p in [2,4,5,7,9]:\n  print(\"hon\")\nelif p in [0,1,6,8]:\n  print(\"pon\")\nelse:\n  print(\"bon\")", "N = int(input()) % 10\n\nif N in [2, 4, 5, 7, 9]:\n    print('hon')\nelif N in [0, 1, 6, 8]:\n    print('pon')\nelse:\n    print('bon')\n", "n = int(input())\nd = n % 10\nif d in [2, 4, 5, 7, 9]:\n    print('hon')\n    return\nelif d in [0, 1, 6, 8]:\n    print('pon')\n    return\nelse:\n    print('bon')\n    return", "N = int(input())\nF = N%10\nif F in (2,4,5,7,9):\n  print('hon')\nelif F in (0,1,6,8):\n  print('pon')\nelse:\n  print('bon')", "n = int(input())\nn = n % 10\nif n == 3:\n    print('bon')\nelif n == 0 or n == 1 or n == 6 or n == 8:\n    print('pon')\nelse:\n    print('hon')\n", "N = int(input())\nN = N % 10\nif N == 2 or N == 4 or N == 5 or N == 7 or N == 9:\n     print('hon')\nelif N == 3:\n    print('bon')\nelse:\n    print('pon')", "X = input()\n\nif int(X[-1]) in [0, 1, 6, 8]:\n    print(\"pon\")\nelif int(X[-1]) in [3]:\n    print(\"bon\")\nelse:\n    print(\"hon\")", "N = input()\nif N[len(N) -1] == \"3\":\n    print(\"bon\")\nelif (N[len(N) -1] ==\"0\") or (N[len(N) -1] ==\"1\")  or(N[len(N) -1] ==\"6\") or (N[len(N) -1] ==\"8\"):\n    print(\"pon\")\nelse:\n    print(\"hon\")", "N = input()\nA = int(N[-1])\nif A==3:\n  print('bon')\nelif A==0 or A==1 or A==6 or A==8 :\n  print('pon')\nelse:\n  print('hon')", "word = list(input())\nn = int(len(word)) - 1\ns = word[n]\nif s == \"0\" or s == \"1\" or s == \"6\" or s == \"8\":\n    print(\"pon\")\nelif s == \"3\":\n    print(\"bon\")\nelse:\n    print(\"hon\")", "n = list(input())\nnum = [0, 1, 6, 8]\nif int(n[-1]) == 3:\n    print(\"bon\")\nelif int(n[-1]) in num:\n    print(\"pon\")\nelse:\n    print(\"hon\")\n", "pen = int(input()[-1])\n\nif pen in [2, 4, 5, 7, 9]:\n    print('hon')\nelif pen in [0, 1, 6, 8]:\n    print('pon')\nelif pen in [3]:\n    print('bon')\n", "n=list(input())\na=int(n[len(n)-1])\nif(a==0 or a==1 or a==6 or a==8):\n  print('pon')\nelif(a==2 or a==4 or a==5 or a==7 or a==9):\n  print('hon')\nelif(a==3):\n  print('bon')", "N = int(input())\n\nN %= 10\n\nif N == 3:\n    print('bon')\nelif N == 0 or N == 1 or N == 6 or N == 8:\n    print('pon')\nelse:\n    print('hon')", "n=input()\nif n[-1]==\"3\":\n    print(\"bon\")\nelif n[-1]==\"0\" or n[-1]==\"1\" or n[-1]==\"6\" or n[-1]==\"8\":\n    print(\"pon\")\nelse:\n    print(\"hon\")", "n = int(input())\nif(n%10 == 3):\n    print(\"bon\")\nelif(n%10 == 0 or n%10 == 1 or n%10 == 6 or n%10 == 8):\n    print(\"pon\")\nelse:\n    print(\"hon\")        \n", "string = input()\n\nhon = [\"2\", \"4\", \"5\", \"7\", \"9\"]\npon = [\"0\", \"1\", \"6\", \"8\"]\n\nif string[-1] in hon:\n    print(\"hon\")\nelif string[-1] in pon:\n    print(\"pon\")\nelse:\n    print(\"bon\")", "import sys\nfrom collections import deque, defaultdict, Counter\nfrom itertools import accumulate, product, permutations, combinations\nfrom operator import itemgetter\nfrom bisect import bisect_left, bisect_right\nfrom heapq import heappop, heappush\nfrom math import ceil, floor, sqrt, gcd, inf\nfrom copy import deepcopy\nimport numpy as np\nimport scipy as sp\n\nINF = inf\nMOD = 1000000007\n\nn = int(input())\n\ntmp = 0\nres = 0\n\nif n % 10 in [2, 4, 5, 7, 9]:\n    res = \"hon\"\nelif n % 10 in [0, 1, 6, 8]:\n    res = \"pon\"\nelse:\n    res = \"bon\"\n\nprint(res)\n", "n = int(input())\nn %= 10\nif n == 3:\n    print('bon')\nelif n in [0, 1, 6, 8]:\n    print('pon')\nelse:\n    print('hon')\n", "N = int(input())\nn = N % 10\nif n in [2,4,5,7,9]:\n  print('hon')#.format(N))\nelif n in [0,1,6,8]:\n  print('pon')#.format(N))\nelse:\n  print('bon')#.format(N))", "a=int(input()[-1])\nif a==2 or a==4 or a==5 or a==7 or a==9:\n   print(\"hon\")\nelif a==0 or a==1 or a==6 or a==8:\n   print(\"pon\")\nelse:\n   print(\"bon\")", "N = input()\n\nn = int(N[-1])\n\nif n in [2, 4, 5, 7, 9]:\n    print(\"hon\")\nelif n in [0, 1, 6, 8]:\n    print(\"pon\")\nelse:\n    print(\"bon\")\n", "N=int(input())\nif N%10==2 or N%10==4 or N%10==5 or N%10==7 or N%10==9:\n    print(\"hon\")\nelif N%10==0 or N%10==1 or N%10==6 or N%10==8:\n    print(\"pon\")\nelse:\n    print(\"bon\")"]