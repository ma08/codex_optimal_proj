["\n# arr = [\n# 1, # 1\n# 0,\n# 0,\n# 1, # think so\n# 1, # not sure\n# 0, # not sure\n# 0, # 2\n# 1,\n# 1, # think so\n# 1,\n# 0,\n# 0,\n# 1,\n# 0,\n# 1,\n# 0,\n# ]\n\narr = [\n1, # 1\n0,\n0,\n1, # think so\n0, # not sure\n1, # not sure\n0, # 2\n1,\n1, # think so\n1,\n0,\n0,\n1,\n0,\n1,\n0,\n]\n\nn = int(input()) - 1\nprint(arr[n])\n\n# assert n in {1, 7} or n <= \n\n", "a = [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0]\n\nn = int(input())\n\nprint (a[n - 1])", "print('1001010111001010'[int(input())-1])", "a = [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0]\nn = int(input())\nprint(a[n - 1])", "\"\"\"\nCodeforces April Fools Contest 2014 Problem D\n\nAuthor  : chaotic_iak\nLanguage: Python 3.3.4\n\"\"\"\n\nclass InputHandlerObject(object):\n    inputs = []\n\n    def getInput(self, n = 0):\n        res = \"\"\n        inputs = self.inputs\n        if not inputs: inputs.extend(input().split(\" \"))\n        if n == 0:\n            res = inputs[:]\n            inputs[:] = []\n        while n > len(inputs):\n            inputs.extend(input().split(\" \"))\n        if n > 0:\n            res = inputs[:n]\n            inputs[:n] = []\n        return res\nInputHandler = InputHandlerObject()\ng = InputHandler.getInput\n\n############################## SOLUTION ##############################\nanswers = [1,0,0,1,0,1,0,1,1,1,0,0,1,0,1,0]\n\nx = int(input())\n\n# tests: 1 7 13 3 8 16 11 2 5 10 9 12- 12- 4 _ _\n#if x not in [1,7,13,3,16,8,11,2,5,10] and x < 7: print(1/0)\n\nprint(answers[x-1])", "a = int(input())\nb = [\"0\",\"1\",\"0\",\"0\",\"1\",\"0\",\"1\",\"0\",\"1\",\"1\",\"1\",\"0\",\"0\",\"1\",\"0\",\"1\",\"0\"]\nc = [\"+\",\"+\",\"+\",\"+\",\"+\",\"+\",\"6\",\"+\",\"+\",\"+\",\"+\",\"+\",\"C\",\"+\",\"E\",\"+\",\"+\"]\n#1 == test1(1)\n#7 == test2(0)\n#D == test3(1)\n#3 == test4(0)\n#8 == test5(1)\n\n#G == test6(0)\n#B == test7(0)\n#2 == test8(0)\n#5 == test9(0)\n#A == test10(1)\n#9 == test11(1)\n#F == test12(1)\n#4 == test13(1)\nprint(b[a])\n", "#a = [1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1]4\n#a = [1,0,1,1,1,0,0,0,0,0,0,1,1,1,0,0]4\n#a = [1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0]3  1-1 2-8 3-4 4-13 5-9 7-2 8-5 9-11 10-10 11-7 12-14 13-3 15-12 16-6 \n#a = [1,0,1,1,1,0,0,0,0,0,0,0,0,1,0,0]3\n#a = [1,0,1,1,1,0,0,0,0,0,0,0,1,0,0,0]4\n#a = [1,0,1,1,1,1,0,1,0,0,0,0,1,0,0,0]4\n#a = [1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0]5\n#a = [1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0]4\n#a = [1,0,0,1,1,1,0,1,1,0,0,0,1,0,0,0]9\n#a = [1,1,0,1,1,1,0,1,1,0,0,0,1,0,0,0]8\n#a = [1,0,0,1,1,1,0,1,1,1,0,0,1,0,0,1]6\n#a = [1,0,0,0,0,0,0,1,0,1,0,1,1,1,1,0]11!\n#a = [1,0,0,1,0,1,0,1,1,1,0,1,1,1,1,0]14!\n#a = [1,0,0,1,0,0,0,1,1,1,0,0,1,0,1,0]15!\na = [1,0,0,1,0,1,0,1,1,1,0,0,1,0,1,0]\nprint(a[int(input())-1])", "print(' 1001010111001010'[int(input())])", "a = [1,0,0,1,0,1,0,1,1,1,0,0,1,0,1,0]\nb=int(input())\nprint(a[b-1])\n", "print(' 1001010111001010'[int(input())])", "print('1001010111001010'[int(input())-1])", "print([1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0][int(input())-1])", "g=[0,1,0,0,1,0,1,0,1,1,1,0,0,1,0,1,0]\nz=int(input())\nprint(g[z])\n", "# Nile?\na=[1,0,0,1,0,1,0,1,1,1,0,0,1,0,1,0]\nprint(a[int(input())-1])\n", "l = [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0]\nk = int(input())\nprint(l[k])", "a=[1,0,0,1,0,1,0,1,1,1,0,0,1,0,1,0]\nn=int(input())\nprint(a[n-1])", "s = '1001010111001010'\nprint(s[int(input()) - 1])", "a = ['1','0','0','1','0','1','0','1','1','1','0','0','1','0','1','0']\nx = int(input())\nprint (a[x - 1])", "print(\"01001010111001010\"[int(input())]);", "s = \"A1001010111001010\";print(s[int(input())])", "print([1,0,0,1,0,1,0,1,1,1,0,0,1,0,1,0][int(input())-1])", "print([1,0,0,1,0,1,0,1,1,1,0,0,1,0,1,0][int(input())-1])", "a=['1','0','0','1','0','1','0','1','1','1','0','0','1','0','1','0']\nn=int(input())\nprint(a[n-1])", "a=['1','0','0','1','0','1','0','1','1','1','0','0','1','0','1','0']\nprint(a[int(input())-1])", "a=[1,0,0,1,0,1,0,1,1,1,0,0,1,0,1,0]\nprint(a[int(input())-1])"]