["\nimport sys\n#sys.stdin=open(\"data.txt\")\ninput=sys.stdin.readline\n\nn,m=map(int,input().split())\n\nl=list(map(int,input().split()))\nfor i in range(len(l)):\n    l[i]-=1\n\nuse=[0]*n\na=[0]*n\nbad=0\n\nfor i in range(len(l)-1):\n    # transfer l[i] to l[i+1]\n    if a[l[i]] and a[l[i]]%n!=(l[i+1]-l[i])%n:\n        bad=1\n        break\n    use[(l[i+1]-l[i])%n]=1\n    a[l[i]]=(l[i+1]-l[i])%n\n    if a[l[i]]==0: a[l[i]]=n\n\nif not bad:\n    # fill in gaps\n    for i in range(n):\n        if a[i]==0:\n            for j in range(1,n+1):\n                if not use[j%n]:\n                    a[i]=j\n                    use[j%n]=1\n                    break\n    if sum(use)==n:\n        print(\" \".join(map(str,a)))\n    else:\n        print(\"-1\")\nelse:\n    print(\"-1\")", "def calc(a,b,n):\n\tif(b<=a):\n\t\treturn n-a+b\n\telse:\n\t\treturn b-a\n\ninp=input().split()\nn=int(inp[0])\nm=int(inp[1])\nseq=[]\ninp=input().split()\nfor val in inp:\n\tseq.append(int(val))\nindices={}\nflag=0\nfor i in range(len(seq)-1):\n\thop=calc(seq[i],seq[i+1],n)\n\tif((seq[i] in indices) and indices[seq[i]]!=hop):\n\t\tprint(\"-1\")\n\t\tflag=1\n\t\tbreak\n\tindices[seq[i]]=hop\nl=[]\nfor i in range(n+1):\n\tl.append(1)\nflag2=0\nif(flag==0):\n\tfor i in range(1,n+1):\n\t\ttry:\n\t\t\tval=indices[i]\n\t\texcept:\n\t\t\tcontinue\n\t\tif(l[val]==1):\n\t\t\tl[val]=0\n\t\telse:\n\t\t\tprint(\"-1\")\n\t\t\tflag2=1\n\t\t\tbreak\n\tif(flag2==0):\n\t\tfor i in range(1,n+1):\n\t\t\ttry:\n\t\t\t\tprint(indices[i],end=\" \")\n\t\t\texcept:\n\t\t\t\tj=1\n\t\t\t\twhile(l[j]==0):\n\t\t\t\t\tj+=1\n\t\t\t\tprint(j,end=\" \")\n\t\t\t\tl[j]=0\n\t\tprint()", "n,m=map(int,input().split())\nl=[]\nl=list(map(int,input().split()))\na=[-1]*(n+1)\ns=set()\nsorry = False\nfor i in range(1,n+1):\n    s.add(i)\nfor i in range(m-1):\n    temp = (l[i+1] + n - l[i])%n\n    if(temp == 0):\n        temp = n\n    #print(temp)\n    if(a[l[i]] == -1 and temp in s):\n        a[l[i]] = temp\n        s.remove(temp)\n\n    elif(a[l[i]] == temp):\n        continue\n    else:\n        sorry=True\n        break\n\nif(sorry):\n    print(-1)\nelse:\n    ss = list(s)\n    x=0\n    for i in range(1,len(a)):\n        if(a[i] == -1):\n            a[i] = ss[x]\n            x+=1\n        print(a[i],\"\",end='')\n", "def f(a,b,c):\n\tif (a-b+c)%c==0:\n\t\treturn c\n\telse:\n\t\treturn (a-b+c)%c\nn,m=list(map(int,input().split()))\nl=list(map(int,input().split()))\na=[0 for i in range(n)]\nfor i in range(m-1):\n\tif a[l[i]-1]==0 or a[l[i]-1]==f(l[i+1],l[i],n):\n\t\ta[l[i]-1]=f(l[i+1],l[i],n)\n\telse:\n\t\tprint(-1)\n\t\treturn\np=[i+1 for i in range(n)]\ns=list(set(p)-set([i for i in a if i!=0]))\nif len(s)!=a.count(0):\n\tprint(-1)\n\treturn\nelse:\n\tfor i in range(n):\n\t\tif a[i]==0:\n\t\t\ta[i]=s[-1]\n\t\t\ts.pop()\nfor i in a:\n\tprint(i,end=' ')", "def main():\n    n, m = map(int, input().split())\n    l = list(map(int, input().split()))\n    a = [0 for i in range(n)]\n    for i in range(m - 1):\n        d = l[i + 1] - l[i]\n        if d <= 0:\n            d += n\n        if a[l[i] - 1] == 0:\n            a[l[i] - 1] = d\n        elif a[l[i] - 1] != d:\n            return -1\n    cnt = [0 for i in range(n + 1)]\n    for i in a:\n        cnt[i] += 1\n    unused = set()\n    for i in range(1, n + 1):\n        if cnt[i] == 0:\n            unused.add(i)\n        elif cnt[i] > 1:\n            return -1\n    for i in range(n):\n        if a[i] == 0:\n            a[i] = unused.pop()\n    return ' '.join(map(str, a))\n\nprint(main())", "n, m = list(map(int, input().split()))\nl = list(map(int, input().split()))\na = [0 for _ in range(n)]\nf = [False for _ in range(n+1)]\nans = True\nfor i in range(m-1):\n    for j in range(1, n+1):\n        if (l[i] + j - 1)%n + 1 == l[i+1]:\n            if a[l[i]-1] != 0 and a[l[i]-1] != j:\n                ans = False\n            else:\n                if a[l[i]-1] == j:\n                    break\n                if f[j]:\n                    ans = False\n                f[j] = True\n                a[l[i]-1] = j\n            break\nj = 1\nfor i in range(n):\n    if not a[i]:\n        while j <= n and f[j]:\n            j += 1\n        a[i] = j\n        f[j] = True\nif ans:\n    print(*a)\nelse:\n    print(-1)\n\n\n", "n, m = [int(i) for i in input().split()]\nl = [int(i) - 1 for i in input().split()]\nans = [-1] * n\nfor i in range(m - 1):\n    t = (l[i + 1] - l[i]) % n\n    if t == 0:\n        t = n\n    if ans[l[i]] != -1 and ans[l[i]] != t:\n        print(-1)\n        break\n    ans[l[i]] = t\nelse:\n    s = set()\n    for i in ans:\n        if i != -1:\n            s.add(i)\n    c = 1\n    for i in range(n):\n        if ans[i] == -1:\n            while c in s:\n                c += 1\n            ans[i] = c\n            s.add(c)\n\n    if len(set(ans)) == n:\n        print(' '.join([str(i) for i in ans]))\n    else:\n        print(-1)", "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nans = [0] * (n + 1)\nfor i in range(m - 1):\n\tpot = (a[i + 1] - a[i] + n) % n\n\tif pot == 0: pot = n\n\tif ans[a[i]] == 0 or ans[a[i]] == pot: ans[a[i]] = pot\n\telse:\n\t\tprint(-1)\n\t\treturn\nused = [False] * (n + 1)\nfor i in ans:\n\tused[i] = True\nfor i in range(1, n + 1):\n\tif ans[i] == 0:\n\t\tfor j in range(1, n + 1):\n\t\t\tif not used[j]:\n\t\t\t\tused[j] = True\n\t\t\t\tans[i] = j\n\t\t\t\tbreak\nprint(' '.join(map(str, ans[1:])) if all(used[1:]) else -1)\n", "n, m = map(int,input().split())\nlm = list(map(int,input().split()))\n\nimpossible = False\nan = [-1]*(n+1)\nf = [False]*(n+1)\nfor k in range(m-1):\n    if an[lm[k]] < 0:\n        for i in range(1,n+1):\n            if f[i]:\n                continue\n            x = lm[k]+i\n            if x > n:\n                x -= n\n            if lm[k+1] != x:\n                continue\n            an[lm[k]] = i\n            f[i] = True\n            break\n        if an[lm[k]] < 0:\n            impossible = True\n            break\n    else:\n        x = lm[k]+an[lm[k]]\n        if x > n:\n            x -= n\n        if lm[k+1] != x:\n            impossible = True\n            break\n\nif impossible:\n    print(-1)\nelse:\n    for i in range(1,n+1):\n        if an[i] > 0:\n            continue\n        for j in range(1,n+1):\n            if f[j]:\n                continue\n            an[i] = j\n            f[j] = True\n            break\n    print(*an[1:])", "n, m = list(map(int, input().split()))\nl = [int(k) for k in input().split()]\na = [0]*n\nfor i in range(m-1):\n    curLeader = l[i] - 1\n    nextLeader = l[i+1] - 1\n    jump = abs((nextLeader - curLeader) % n)\n    if jump==0: jump = n\n    a[curLeader] = jump\n\ndef reqNum(leader, jump):\n    ans = (leader+jump)%n\n    if(ans==0): ans = n\n    return ans\ndef simulate():\n    for i in range(m-1):\n        leader = l[i]\n        jump = a[leader-1]\n        if(not reqNum(leader, jump)==l[i+1]): return False\n    return True\n\nif simulate():\n    s = set(range(1,n+1)).difference(set(a))\n    for i in range(n):\n        if a[i]==0:\n            a[i] = s.pop()\n    t = sorted(a)\n    if(t==list(range(1,n+1))): print(*a)\n    else: print(-1)\nelse: print(-1)\n", "input_ar = list(map(int,input().rstrip().split(\" \")))\nleaders = list(map(int,input().rstrip().split(\" \")))\nnot_there_set = {i+1 for i in range(input_ar[0])}\na_n_done = [False for i in range(input_ar[0])]\na_n = [0 for i in range(input_ar[0])]\npossible = True\nfor i in range(len(leaders) - 1):\n    diff = leaders[i + 1] - leaders[i]\n    if diff <= 0:\n        diff += input_ar[0]\n    if a_n[leaders[i] - 1] is 0:\n        if diff in a_n:\n            possible = False\n            break\n        not_there_set.remove(diff)\n        a_n[leaders[i] - 1] = diff\n    elif a_n[leaders[i] - 1] is not diff:\n        possible = False\n        break\n\nif not possible:\n    # print(a_n)\n    print(-1)\nelse:\n    # print('a_n is : {}'.format(a_n))\n    for i in range(len(a_n)):\n        if a_n[i] is 0:\n            if len(not_there_set) <= 0:\n                possible = False\n                break\n            a_n[i] = not_there_set.pop()\n    if not possible:\n        print(-1)\n    else:\n        for a in a_n:\n            print('{} '.format(a), end='')\n        print()", "n, m = list(map(int, input().split()))\nl = list(map(int, input().split()))\nused = [False for _ in range(n + 1)]\nans = [0 for _ in range(n)]\nf = True\nfor i in range(m - 1):\n    d = ((l[i + 1] - l[i] + n - 1) % n) + 1\n    if ans[l[i] - 1] == 0 and not used[d]:\n        ans[l[i] - 1] = d\n        used[d] = True\n    elif ans[l[i] - 1] != d:\n        f = False\n        break\n\ns = 0\nj = 1\nfor i in range(n):\n    while j < n and used[j]:\n        j += 1\n    if ans[i] == 0:\n        ans[i] = j\n        used[j] = True\n    s += ans[i]\n\nif s != n * (n + 1) // 2:\n    f = False\n\nidx = l[0] - 1\nfor i in range(m):\n    if idx + 1 != l[i]:\n        f = False\n        break\n    idx += ans[idx]\n    idx %= n\n\nif f:\n    print(' '.join(list(map(str, ans))))\nelse:\n    print(-1)\n", "n, m = [int(i) for i in input().split()]\nl = [int(i) for i in input().split()]\na = [0] * n\n\nused = [0] * (n + 1)\ncnt = 0\n\nfor i in range(len(l)-1):\n    z = l[i+1] - l[i] \n    if z <= 0:\n        z += n   \n    if used[z] and a[l[i]-1] != z:\n        print(-1)\n        return\n    a[l[i]-1] = z\n    used[z] = 1\n        \nj = 1\nfor i in range(len(a)):\n    if a[i] == 0:\n        while used[j]:\n            j+=1\n            if j > n:\n                print(-1)\n                return\n        a[i] = j\n        used[j] = 1\n        \nif all(a) and all(used[1:]):\n    print(*a)\nelse:\n    print(-1)\n        \n\n\n", "def R():\n    return list(map(int, input().split()))\n\nn, m = R()\nl = list(R())\n\na = [None] * n\nb = [False] * n\n\nc = set(range(1, n + 1))\nfor i in range(m - 1):\n    j = l[i] - 1\n    d = l[i + 1] - l[i]\n    if d <= 0:\n        d += n\n    if a[j] != d:\n        if a[j] is not None or b[d - 1]:\n            print(-1)\n            return\n        a[j] = d\n        b[d - 1] = True\n        c.remove(d)\nfor i in range(n):\n    if a[i] is None:\n        a[i] = c.pop()\n        \nprint(*a)\n", "def R():\n    return list(map(int, input().split()))\n\nn, m = R()\nl = list(R())\n\na = [None] * n\nb = [False] * n\n\nc = set(range(1, n + 1))\nfor i in range(m - 1):\n    j = l[i] - 1\n    d = l[i + 1] - l[i]\n    if d <= 0:\n        d += n\n    if a[j] != d:\n        if a[j] is not None or b[d - 1]:\n            print(-1)\n            break\n        a[j] = d\n        b[d - 1] = True\n        c.remove(d)\nelse:\n    for i in range(n):\n        if a[i] is None:\n            a[i] = c.pop()            \n    print(*a)\n", "def R():\n    return list(map(int, input().split()))\n\nn, m = R()\nl = list(R())\n\na = [None] * n\nb = [False] * n\n\nfor i in range(m - 1):\n    j = l[i] - 1\n    d = l[i + 1] - l[i]\n    if d <= 0:\n        d += n\n    if a[j] != d:\n        if a[j] is not None or b[d - 1]:\n            print(-1)\n            break\n        a[j] = d\n        b[d - 1] = True\nelse:\n    j = 0\n    for i in range(n):\n        if a[i] is None:\n            while b[j]:\n                j += 1\n            a[i] = j + 1\n            j += 1\n    print(*a)\n", "def R():\n    return list(map(int, input().split()))\n\nn, m = R()\nl = list(R())\n\na = [None] * n\nb = [False] * n\n\nfor i in range(m - 1):\n    j = l[i] - 1\n    d = l[i + 1] - l[i]\n    if d <= 0:\n        d += n\n    if a[j] != d:\n        if a[j] is not None or b[d - 1]:\n            print(-1)\n            break\n        a[j] = d\n        b[d - 1] = True\nelse:\n    j = 0\n    for i in range(n):\n        if a[i] is None:\n            while b[j]:\n                j += 1\n            j += 1\n            a[i] = j\n    print(*a)\n", "R=lambda:list(map(int, input().split()))\nn,m=R()\nl=list(R())\na=[None]*n\nc =set(range(1, n + 1))\nfor i in range(m-1):\n    j=l[i]-1\n    d=l[i+1]-l[i]\n    if d<=0:\n        d+=n\n    if a[j]!=d:\n        if a[j] is not None or d not in c:\n            print(-1)\n            return\n        a[j]=d\n        c.remove(d)\nfor i in range(n):\n    if a[i] is None:\n        a[i]=c.pop()\nprint(*a)\n", "I = lambda: list(map(int, input().split()))\nn, m = I()\nl = list(I())\n\nres = [0] * (n + 1)\nfor i in range(m-1):\n    new = (l[i+1] - l[i]) if l[i+1] - l[i] > 0 else (l[i+1] - l[i] + n)\n    if res[l[i]] and res[l[i]] != new:\n        print(-1)\n        return\n    else:\n        res[l[i]] = new\n\nwo0 = list(filter((0).__ne__, res))\nif len(wo0) == len(set(wo0)):\n    rest = set(range(1, n+1)) - set(wo0)\n    res.pop(0)\n    for x in rest:\n        res[res.index(0)] = x\n    print(*res)\nelse:\n    print(-1)\n\n", "\nn, m = list(map(int, input().split()))\nl = list(map(int, input().split()))\n\na = [-1] * n\n\nfor i in range(m - 1):\n    p = l[i + 1] - l[i]\n    if p <= 0: p += n\n    if a[l[i] - 1] != -1 and a[l[i] - 1] != p:\n        print(-1)\n        return\n    a[l[i] - 1] = p\n\ns = set(range(1, n + 1)) - set(i for i in a if i != -1)\nfor i in range(len(a)):\n    if a[i] == -1:\n        a[i] = s.pop()\n\nif -1 in a or len(set(a)) != n:\n    print(-1)\nelse:\n    print(*a)\n", "R=lambda:list(map(int,input().split()))\nn,m=R()\nl=list(R())\na=[None]*n\nc =set(range(1, n + 1))\nfor i in range(m-1):\n    j=l[i]-1\n    d=l[i+1]-l[i]\n    if d<=0:\n        d+=n\n    if a[j]!=d:\n        if a[j] or d not in c:\n            print(-1)\n            return\n        a[j]=d\n        c.remove(d)\nfor i in range(n):\n    if a[i] is None:\n        a[i]=c.pop()\nprint(*a)\n", "R=lambda:list(map(int,input().split()))\nn,m=R()\nl=list(R())\na=[None]*n\nc=set(range(1, n + 1))\nfor i in range(m-1):\n    j=l[i]-1\n    d=l[i+1]-l[i]\n    if d<=0:\n        d+=n\n    if a[j]!=d:\n        if a[j] or d not in c:\n            print(-1)\n            return\n        a[j]=d\n        c.remove(d)\nfor i in range(n):\n    if not a[i]:\n        a[i]=c.pop()\nprint(*a)\n", "def main():\n    n, m = [int(item) for item in input().split()]\n    l = [int(item) for item in input().split()]\n    l = [0] + l\n    a = [0] * (n + 1)\n    \n    for i in range(1, m):\n        curr = (l[i + 1] - l[i] - 1) % n + 1\n        if a[l[i]] != 0 and curr != a[l[i]]:return -1\n        a[l[i]] = curr\n    #print(a)\n    cnt = [0] * (n + 1)\n        \n    for i in range(1, n + 1):\n        cnt[a[i]] += 1\n        if a[i] != 0 and cnt[a[i]] > 1:\n            return -1\n\n    if cnt[0] != 0:\n        d = []\n        for k in range(1, n + 1):\n            if cnt[k] == 0:\n                d.append(k)\n        for i in range(1, n + 1):\n            if a[i] == 0:\n                a[i] = d[0]\n                d.pop(0)\n\n    return \" \".join(str(x) for x in a[1:])\n    \nprint(main())"]