["a = int(input())\nAns = []\nA = list(map(int, input().split()))\nfor i in range(a):\n    A[i] = [A[i], -i]\nA.sort()\nfor i in range(a):\n    A[i][1] = -A[i][1]\nfor i in range(int(input())):\n    n, m = map(int, input().split())\n    B = list(A[a - n:])\n    B.sort(key=lambda n: n[1])\n    Ans.append(B[m - 1][0])\nfor an in Ans:\n    print(an)", "n=int(input())\nimport copy\nmins=[0]*n\na=list(map(int,input().split()))\nm=int(input())\nfor i in range(m):\n    f=a.copy()\n    k,pos=list(map(int,input().split()))\n    for l in range(n-k):\n        if mins[l]==0:\n            mins[l]=min(f)\n        for j in range(len(f)-1,-1,-1):\n            if f[j]==mins[l]:\n                f.pop(j)\n                break\n    print(f[pos-1])\n", "n = int(input())\na = list(map(int, input().split()))\nm = int(input())\nfor i in range(m):\n    d = dict()\n    k, pos = map(int, input().split())\n    b = a + []\n    for i in range(k):\n        d[b.index(max(b))] = max(b)\n        b[b.index(max(b))] = 0\n    print(d[sorted(d.keys())[pos - 1]])", "n = int(input())\nc = list(map(lambda x: (int(x[1]),-x[0]),enumerate(input().split())))\nso = sorted(c)\nfor i in range(int(input())):\n    k,r = map(int,input().split())\n    now = so[-k:]\n    now.sort(key = lambda x: -x[1])\n    print(now[r-1][0])", "n = int(input())\ndata = input().split()\ndata1 = []\nfor i in range(n):\n    data1.append((int(data[i]), i))\ndata1.sort(key=lambda x: (x[0], -x[1]))\nfor i in range(int(input())):\n    k, pos = map(int, input().split())\n    temp = sorted(data1[len(data1) - k:], key=lambda x: x[1])\n    print(temp[pos - 1][0])", "n = int(input())\narr = [int(i) for i in input().split()]\n\nsor = [[arr[i], n - i] for i in range(n)]\nsor.sort()\n\nm = int(input())\n\nfor i in range(m):\n\top = []\n\t[q, index] = [int(i) for i in input().split()]\n\tfor j in range(q):\n\t\top.append(n - sor[-1-j][1])\n\top.sort()\n\tprint(arr[op[index - 1]])\n", "def main():\n    n = int(input())\n    a = list(enumerate(map(int, (input().split()))))\n    a.sort(key = lambda item: (item[1], -item[0]))\n    #print(a)\n    m = int(input())\n    for i in range(m):\n        k, pos = map(int, input().split())\n        s = a[-k:]\n        s = sorted(s)\n        print(s[pos - 1][1])\n\nmain()", "n=int(input())\na=list(map(int,input().split()))\nfor i in range(n):\n  a[i]=[a[i],n-i]\na.sort()\nc=list(range(n))\nfor i in range(n):\n  c[n-i-1]=[n-a[i][1]+1,a[i][0]]\nm=int(input())\nfor g in range(m):\n  k,pos=list(map(int,input().split()))\n  b=c[:k]\n  b.sort()\n  print(b[pos-1][1])\n", "n = int(input())\na = [int(x) for x in input().split()]\na_sorted = sorted(a, reverse=True)\n\nm = int(input())\nfor i in range(m):\n    k, pos = [int(x) for x in input().split()]\n\n    vals = a_sorted[0:k]\n\n    result = []\n    for val in a:\n        if val in vals:\n            result.append(val)\n            vals.remove(val)\n\n        if len(vals) == 0:\n            break\n\n    print(result[pos - 1])\n\n\n", "n = int(input())\na = list(map(int, input().split()))\nm = int(input())\nfor i in range(m):\n    k, pos = map(int, input().split())\n    save = []\n    for j in range(len(a)):\n        save.append(a[j])\n    ans = []\n    for x in range(k):\n        maximum = 0\n        pr = -1\n        for j in range(len(save)):\n            if save[j] > maximum:\n                maximum = save[j]\n                pr = j\n        ans.append(maximum)\n        save.pop(pr)\n    ans.sort()\n    answer = []\n    for i in range(len(a)):\n        if a[i] in ans:\n            answer.append(a[i])\n            ans.pop(ans.index(a[i]))\n    print(answer[pos - 1])", "n=int(input())\na=sorted(zip(list(map(int,input().split())),list(range(n))),key=lambda x:(x[0],-x[1]),reverse=True)\n#print(a)\nm=int(input())\nfor i in range(m):\n    k,pos=list(map(int,input().split()))\n    b=sorted(a[:k],key=lambda x:x[1])\n    #print(b)\n    print(b[pos-1][0])\n\n", "import copy\na=[]\nai=[]\notv=''\nn=int(input())\na=list(map(int,input().split()))\nm=int(input())\nfor i in range(1,m+1):\n    #print(ai)\n    #print(a,'kkkk')\n    ai=copy.deepcopy(a)\n    ai.reverse()\n    #print(ai)\n    k,pos=list(map(int,input().split()))\n    for j in range(1,n-k+1):\n        #print(min(ai))\n        ai.remove(min(ai))\n    ai.reverse()\n    otv=otv+'\\n'+str(ai[pos-1])\nprint(otv)\n", "n = int(input())\na = list(map(int, input().split()))\nm = int(input())\nres = []\nfor i in range(m):\n    k, pos = map(int, input().split())\n    mas1 = []\n    for j in range(n):\n        mas1.append(a[j])\n    mas2 = sorted(mas1)\n    mas1.reverse()\n    for j in range(n-k):\n        mas1.remove(mas2[j])\n    mas1.reverse()\n    res.append(mas1[pos - 1])\nfor i in range(m):\n    print(res[i])", "def min_s(a, k):\n    res = a.copy()\n    for i in range(len(a) - k):\n        m = min(res)\n        res.reverse()\n        res.remove(m)\n        res.reverse()\n\n    return res\n\nn = int(input())\na = [int(x) for x in input().split()]\nm = int(input())\nfor _ in range(m):\n    k, pos = [int(x) for x in input().split()]\n\n    l = min_s(a, k) \n\n    print(l[pos-1])", "def f(a):\n    return -a[1]\n\nimport sys\nfin = sys.stdin\nn = int(input())\narr = list(map(int, fin.readline().split()))\narr_ind = list()\nfor i in range(n):\n    arr_ind.append([arr[i], -i])\narr_ind.sort()\narr_ind.reverse()\nans_array = list()\nfor k in range(1, n + 1):\n    ans = arr_ind[:k]\n    ans.sort(key=f)\n    ans_array.append(ans)\n\ntests = int(input())\nfor test in range(tests):\n    k, pos = map(int, input().split())\n    print(ans_array[k - 1][pos - 1][0])", "import copy\nb=[]\na=[]\nrezult=''\nn=int(input())\na=list(map(int,input().split()))\nm=int(input())\nfor i in range(1,m+1):\n    k,pos=list(map(int,input().split()))\n    b=copy.deepcopy(a)\n    b.reverse()\n    for j in range(1,n-k+1):\n        b.remove(min(b))\n    b.reverse()\n    rezult=rezult+'\\n'+str(b[pos-1])\nprint(rezult)\n", "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n    b.append([a[i], -i])\nb.sort(reverse=True)\nfor i in range(int(input())):\n    k, pos = map(int, input().split())\n    ans = 0\n    z = []\n    for i in range(k):\n        ans += b[i][0]\n        z.append([-b[i][1], b[i][0]])\n    z.sort()\n    print(z[pos - 1][1])", "n = int(input())\na = [int(i) for i in input().split()]\nb = [(a[i], n - i) for i in range(n)]\nb.sort(reverse=True)\nb = [(b[i][0], n - b[i][1]) for i in range(n)]\n\nm = int(input())\nfor qu in range(m):\n    k, p = list(map(int, input().split()))\n    c = b[:k]\n    c.sort(key = lambda x: x[1])\n    print(c[p-1][0])\n\n", "n = int(input())\ndata = list(map(int, input().split()))\nm = int(input())\nfor _ in range(m):\n    k, pos = list(map(int, input().split()))\n    s = data[:]\n    ans = []\n    for i in range(k):\n        x = s.index(max(s))\n        ans.append(x)\n        s[x] = -1\n    ans.sort()\n    print(data[ans[pos - 1]])\n", "n = int(input())\np = list(map(int, input().split()))\np = sorted(list(enumerate(p)), key=lambda x: -x[1])\na = [[]]\nfor i in range(n):\n    a.append(sorted(a[-1] + [p[i]], key=lambda x: x[0]))\nm = int(input())\nfor _ in range(m):\n    x, y = list(map(int, input().split()))\n    print(a[x][y - 1][1])\n", "from math import *\nfrom copy import copy\ndef maximum(list_ticket):\n    for i in range(len(list_ticket)):\n        if i == 0:\n            ma=list_ticket[i]\n        else:\n            ma=max(ma,list_ticket[i])\n    ma = list_ticket.index(ma)\n    list_ticket.insert(ma,0)\n    list_ticket.pop(ma+1)\n    return ma\n\nn = int(input())\na = list(map(int, input().split()))\nm = int(input())\nfor i in range(m):\n    b = copy(a)\n    q = []\n    array = list(map(int, input().split()))\n    for i in range(array[0]):\n        q.append(maximum(b))\n    q.sort()\n    q1 = []\n    for i in range(len(q)):\n        q1.append(a[q[i]])\n    q1 = list(map(str, q1))\n    print(q1[array[1]-1])", "n = int(input())\nA = list(map(int, input().split()))\nL = A.copy()\nL2 = L.copy()\nA.sort()\nc = int(input())\nr = []\ndef S(x, L):\n  idx = L.index(x)\n  L[idx] = -1\n  return [idx, x]\nfor i in range(c):\n  k, pos = map(int, input().split())\n  B = A[:0-k-1:-1]\n  H = list(map(lambda x: S(x, L), B))\n  H.sort()\n  N = list(map(lambda x: x[1], H))\n  r += [N[pos - 1]]\n  L = L2.copy()\nprint('\\n'.join(map(str, r)))", "n = int(input())\narr = list(map(int, input().split()))\n\narr = [(i, num) for num, i in enumerate(arr)]\narr.sort(key=lambda x: (-x[0], x[1]))\n\nm = int(input())\nfor q in range(m):\n    k, pos = tuple(map(int, input().split()))\n\n    now = []\n    for i in arr:\n        if len(now) == k:\n            break\n        now.append(i)\n\n    now.sort(key=lambda x: x[1])\n    # print(k, pos, now)\n    print(now[pos - 1][0])\n"]