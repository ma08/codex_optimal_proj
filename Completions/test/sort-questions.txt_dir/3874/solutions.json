["m,n=list(map(int,input().split()))\ns=[input().strip() for i in range(m)]\na=list([int(x)-1 for x in input().split()])\nstmpl=s[a[0]]\nf=1\ndef peres(s1,s2):\n\treturn ''.join([i if i==j else '?' for i,j in zip(s1,s2)])\nfor i in a:\n\tif len(stmpl)!=len(s[i]):\n\t\tf=0\n\t\tbreak\n\tstmpl=peres(stmpl,s[i])\nfor i,e in enumerate(s):\n\tif i in a:\n\t\tcontinue\n\tif len(stmpl)==len(e) and stmpl==peres(stmpl,e):\n\t\tf=0\n\t\tbreak\nif f:\n\tprint('Yes')\n\tprint(stmpl)\nelse:\n\tprint('No')\n", "n, m = list(map(int,input().split()))\nw = [input() for _ in range(n)]\ntodel = [w[i-1] for i in map(int, input().split())]\nif len(set(map(len,todel))) != 1:\n    print('No')\nelse:\n    pat = ''.join(['?' if len(set([todel[j][p] for j in range(m)])) != 1 else todel[0][p] for p in range(len(todel[0]))])\n    ok = True\n    for x in w:\n        if len(x) != len(pat):\n            continue\n        if not x in todel:\n            mat = True\n            for i in range(len(pat)):\n                if pat[i] != '?' and pat[i] != x[i]:\n                    mat = False\n                    break\n            if mat:\n                ok = False\n                break\n    if not ok:\n        print('No')\n    else:\n        print('Yes')\n        print(pat)\n", "import sys\nimport re\n\n[words, selected] = input().split(\" \")\n[words, selected] = [int(words), int(selected)]\nwordBuffer = []\nselectedWords = []\n\nfor i in range(words):\n    wordBuffer.append(input())\nbuffer = input().split(\" \")\nfor i in buffer:\n    selectedWords.append(wordBuffer[int(i) - 1])\n\nfor i in range(len(selectedWords)):\n    if (i > 0 and len(selectedWords[i - 1]) != len(selectedWords[i])):\n        print(\"No\")\n        return\n\nreg = \"\"\nres = \"\"\nfor letter in range(len(selectedWords[0])):\n    isQuested = False\n    for i in range(selected):\n        if (i > 0 and selectedWords[i - 1][letter] != selectedWords[i][letter]):\n            reg += \".\"\n            res += \"?\"\n            isQuested = True\n            break\n    if (isQuested == False):\n        if (selectedWords[0][letter] == \".\"):\n            reg += \"\\\\\" + selectedWords[0][letter]\n        else:\n            reg += selectedWords[0][letter]\n        res += selectedWords[0][letter]\n\nmatches = 0\nfor i in wordBuffer:\n    if (re.fullmatch(reg, i) != None):\n        matches += 1\n\nif (matches == selected):\n    print(\"Yes\\n\" + res)\nelse:\n    print(\"No\")\n", "import sys\n\ndef __starting_point():\n    n = input().split()\n    n, m = int(n[0]), int(n[1])\n    _l = list()\n    for _ in range(n):\n      _l.append(input())\n    _ms = [int(x) - 1 for x in input().split()]\n    common = list(_l[_ms[0]])\n    reqlen = len(common)\n    for indx in _ms[1:]:\n        curr = _l[indx]\n        clen = len(curr)\n        if clen != reqlen:\n            print('No')\n            return\n        for i in range(len(curr)):\n            if curr[i] != common[i]:\n                common[i] = '?'\n    for i in range(len(_l)):\n        if i not in _ms:\n            curr = _l[i]\n            if len(curr) != reqlen:\n                continue\n            good = False\n            for j in range(reqlen):\n                if common[j] == '?':\n                    continue\n                if common[j] != curr[j]:\n                    good = True\n            if not good:\n                print('No')\n                return\n    print('Yes')\n    print(''.join(common))\n__starting_point()", "n, m = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(input())\nb = [int(_) for _ in input().split()]\np = list(a[b[0] - 1])\nfor i in range(1, len(b)):\n    s = a[b[i] - 1]\n    if len(s) != len(p):\n        print(\"No\")\n        raise SystemExit\n    for j in range(len(s)):\n        if s[j] != p[j] and p[j] != '?':\n            p[j] = '?'\nk = 0\nf = False\nfor i in range(n):\n    if k < m and i + 1 == b[k]:\n        k += 1\n        continue\n    s = a[i]\n    if len(s) == len(p):\n        f = True\n        for j in range(len(s)):\n            if s[j] != p[j] and p[j] != '?':\n                f = False\n                break\n    if f:\n        print(\"No\")\n        raise SystemExit\nprint(\"Yes\")\nprint(''.join(p))", "num_files, num_delete = list(map(int, input().split(' ')))\n\nfiles = []\nwhile num_files > 0:\n\tfiles.append( input() )\n\tnum_files -= 1\n\nindices_del = list( [x - 1 for x in list(map(int, input().split(' ')))] )\nind = 0\n\nto_del = []\nto_leave = []\nfor i in indices_del:\n\tif len(to_del) > 0 and len(files[i]) != len(to_del[0]):\n\t\tprint ('No')\n\t\treturn\n\tto_del.append(files[i])\n\nfor i in range(len(files)):\n\tif ind < len(indices_del) and i == indices_del[ind]:\n\t\tind += 1\n\t\tcontinue\n\tif len(files[i]) == len(to_del[0]):\n\t\tto_leave.append(files[i])\n\t\nres = []\t\nfor pos in range(len(to_del[0])):\n\td = set()\n\tfor del_file in to_del:\n\t\tch = del_file[pos]\n\t\td.add( ch )\n\tif len(d) > 1:\n\t\tres.append( '?' )\n\telse:\n\t\tundef = False\n\t\tfor leave_file in to_leave:\n\t\t\tpass\n\t\t\t'''\n\t\t\tif leave_file[pos] == ch:\n\t\t\t\tres.append( '?' )\n\t\t\t\tundef = True\n\t\t\t'''\n\t\tif not undef:\n\t\t\tres.append( ch )\n\t\t\tfn = lambda f: f[pos] == ch\n\t\t\tto_leave = list( filter(fn, to_leave) )\n\nif len(to_leave) > 0:\n\tprint('No')\nelse:\n\tprint ('Yes')\n\tprint(''.join(res))\n\t\t\t\n\n\n", "__author__ = 'Think'\ndef check(s, password):\n\tif len(s)!=len(password):\n\t\treturn False\n\tfor i in range(len(password)):\n\t\tif password[i]!=\"?\":\n\t\t\tif password[i]!=s[i]:\n\t\t\t\treturn False\n\treturn True\n\nn, m=[int(i) for i in input().split()]\nfilenames=[]\nfor i in range(n):\n\tfilenames.append(input())\ndeleted_indices=[int(i)-1 for i in input().split()]\ndeleted=[]\nfails=False\nfor i in deleted_indices:\n\tdeleted.append(filenames[i])\nlength=len(deleted[0])\nfor s in deleted[1:]:\n\tif len(s)!=length:\n\t\tfails=True\n\t\tprint(\"No\")\n\t\tbreak\nif not fails:\n\tanswer=list(deleted[0])\n\tfor i in range(length):\n\t\tfor s in deleted[1:]:\n\t\t\tif s[i]!=answer[i]:\n\t\t\t\tanswer[i]=\"?\"\n\t\t\t\tbreak\n\tfor index in range(n):\n\t\tif index not in deleted_indices:\n\t\t\tif check(filenames[index], answer):\n\t\t\t\tprint(\"No\")\n\t\t\t\tfails=True\n\t\t\t\tbreak\n\tif not fails:\n\t\tprint(\"Yes\")\n\t\tfor s in answer:\n\t\t\tprint(s, end=\"\")\n\t\tprint()\n", "n,m=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n    x=input()\n    l.append(x)\nind=list(map(int,input().split()))\nind = list(ind)\nse = set(ind)\nle = len(l[ind[0]-1])\nflag=1\nfor i in range(m):\n    if(len(l[ind[i]-1])!=le):\n        flag=0\n        break\nif flag==1:\n    s = \"\"\n    for j in range(le):\n        flagc=1\n        c=l[ind[0]-1][j]\n        for i in range(m):\n            if l[ind[i]-1][j]!=c:\n                flagc=0\n                break\n        if flagc==0:\n            s=s+\"?\"\n        else:\n            s=s+c\n    d =[]\n    for i in range(n):\n        if i+1 not in se:\n            if len(l[i])==le:\n                d.append(l[i])\n    \n    for word in d:\n        flagw=1\n        for i in range(le):\n            if s[i]!='?' and s[i]!=word[i]:\n                flagw=0\n                break\n        if flagw==1:\n            flag=0\n            break\nif flag==1:\n    print(\"Yes\")\n    print(s)\nelse:\n    print(\"No\")\n            \n", "n = int(input().split()[0])\n\nall_files = [str(input()) for i in range(n)]\n\nindex_to_del = [int(i) - 1 for i in (input().split())]\n\ndef find_pattern(all_files, index_to_del):\n    for i in index_to_del[1:]:\n        if len(all_files[i]) != len(all_files[index_to_del[0]]):\n\n            return \"No\"\n    pattern = ''\n    for i in range(len(all_files[index_to_del[0]])):\n        added = False\n        for j in (index_to_del[1:]):\n            if all_files[j][i] != all_files[index_to_del[0]][i]:\n                if not added:\n                    pattern += '?'\n                    added = True\n        if not added:\n            pattern += all_files[index_to_del[0]][i]\n\n\n    for i in range(len(all_files)):\n        if i not in index_to_del:\n            if len(all_files[i]) == len(pattern):\n                matching_chars = []\n                for index in range(len(pattern)):\n                    matching_chars.append(all_files[i][index] == pattern[index] or pattern[index] == '?')\n                if all(matching_chars):\n                    return \"No\"\n\n    print(\"Yes\")\n    return pattern\n\n\nprint(find_pattern(all_files, index_to_del))\n", "l=input().split()\nn,m=int(l[0]),int(l[1])\nd=[]\nfor i in range(n):\n    ch=input()\n    d.append(ch)\nl=input().split()\nl=[(int(x)-1) for x in l]\np=len(d[l[0]])\nB=True\nD=[]\n\nfor i in l:\n    if len(d[i])==p:\n        D.append(d[i])\n    else:\n        B=False\n        break\nt=[]\n\nif B:\n    for i in D[0]:\n        t.append(i)\n    \n    for i in range(len(D)):\n        for j in range(len(D[i])):\n            if D[i][j]!=t[j] and t[j]!=\"?\":\n                t[j]='?'\n\nif B==False:\n    print('No')\nelse:\n    C=False\n    for i in range(len(d)):\n        if i not in l:\n            C=True\n        if i not in l and len(d[i])==p:\n            for j in range(len(d[i])):\n                if t[j]!=\"?\" and d[i][j]!=t[j]:\n                    C=False\n        elif i not in l and len(d[i])!=p:\n            C=False\n        \n        if C==True and i not in l:\n            break\n    if C==False:\n        print(\"Yes\")\n        for i in t:\n            print(i,end=\"\")\n    else:\n        print('No')\n    ", "import collections\n\nInput=input().split()\nn=int(Input[0])\nm=int(Input[1])\nlistfile=[]\n\nfor i in range(n):\n    listfile.append(input())\n\nlistdet=list(map(int, input().split()))\nlistfile1=[]\n\nvalid = 0\nfor i in range(len(listdet)):\n    if i==0:\n        valid = len(listfile[listdet[i]-1])\n    elif len(listfile[listdet[i]-1]) != valid:\n        valid = -1\n        break\n    listfile1.append(listfile[listdet[i]-1])\n\nresult=''\nif valid == -1:\n    print(\"No\")\nelse:\n    temp=''\n    for i in range(len(listfile1[0])):\n        for j in range(len(listfile1)):\n            if j==0:\n                temp = listfile1[j][i]\n            if listfile1[j][i] != temp:\n                result+=\"?\"\n                break\n            elif j == len(listfile1)-1:\n                result+= listfile1[j][i]\n\n    count=0\n    for i in range(len(listfile)):\n        if len(listfile[i]) == len(result) and (i+1 not in listdet):\n            for j in range(len(listfile1[0])):\n                if listfile[i][j] != result[j] and result[j] != \"?\":\n                    count+=1\n                    break\n        elif len(listfile[i])!= len(result) and (i+1 not in listdet):\n            count+=1\n    \n    if count == n-m:\n        if result == \"?\"*len(listfile1):\n            print(\"No\")\n        else:\n            print(\"Yes\")\n            print(result)\n    else:\n        print(\"No\")\n", "#!/bin/python\nimport sys\ncounter = 0\nallstrs = []\ndef firstnum (inpu):\n    out = \"\"\n    for char in inpu:\n        if char == ' ':\n            break\n        out += char\n    return int(out)\ndef secondnum (inpu):\n    first = True\n    out = \"\"\n    for char in inpu:\n        if char == ' ' and not(first):\n            break\n        elif char == ' ' and first:\n            first = False\n        out += char\n    return int(out)\n\n\nfor line in sys.stdin:\n    if counter == 0:\n        counter += 1\n    else:\n        allstrs.append(line)\n\nremovalfiles = []\n\nremovalfilesnums = list(map(int, allstrs[allstrs.__len__() - 1].split(\" \")))\nfor i in range(0, removalfilesnums.__len__() - 0):\n    removalfiles.append(allstrs[removalfilesnums[i] - 1])\nremovalfiles = [s.strip('\\n') for s in removalfiles]\n\nfor ff in removalfiles:\n    if removalfiles[0].__len__() != ff.__len__():\n        print(\"No\")\n        return\n\noutString = \"\"\nfor ii in range(0, removalfiles[0].__len__()):\n    broke = False\n    for ff in removalfiles:\n        if ff[ii] != removalfiles[0][ii]:\n            broke = True\n            outString += '?'\n            break\n    if not broke:\n        outString += removalfiles[0][ii]\n\nchecklist = [s.strip('\\n') for s in [allstrs[i] for i in range(0, allstrs.__len__()) if i + 1 not in removalfilesnums]]\nfor line in checklist:\n    test = False\n    if line.__len__() == outString.__len__():\n        test = True\n        for charLine, charOut in zip(line, outString):\n            if charLine != charOut and charOut != '?':\n                test = False\n    if test:\n        print(\"No\")\n        return\nprint(\"Yes\")\nprint(outString)\n", "n, m = [int(x) for x in input().split()]\nslova = []\nfor i in range(n):\n    slova.append(input())\nna_zmazanie = [int(x)-1 for x in input().split()]\n\ndlzka_zmazanych = len(slova[na_zmazanie[0]])\nfor i in na_zmazanie:\n    if len(slova[i]) != dlzka_zmazanych:\n        print(\"No\")\n        return\n\nzmaz = [False] * n\nfor i in na_zmazanie:\n    zmaz[i] = True\nmatchujuce_nie_na_zmazanie = [i for i in range(n) if zmaz[i] == False and len(slova[i]) == dlzka_zmazanych] \n\npattern = \"\"\nfor i in range(0, dlzka_zmazanych):\n    znak_prveho = slova[na_zmazanie[0]][i]\n    for x in na_zmazanie:\n        if slova[x][i] != znak_prveho:\n            pattern += \"?\"\n            break\n    else:\n        pattern += znak_prveho\n        nove_matchujuce = []\n        for y in matchujuce_nie_na_zmazanie:\n            if slova[y][i] == znak_prveho: \n                nove_matchujuce.append(y)\n        matchujuce_nie_na_zmazanie = nove_matchujuce\n\nif len(matchujuce_nie_na_zmazanie) == 0:\n    print(\"Yes\")\n    print(pattern)\nelse:\n    print(\"No\")\n", "import sys\n\t\nlines = sys.stdin.read().splitlines()\n\n\nT, garb = list(map(int, lines[0].split()))\n\nelim = list(map(int, lines[-1].split()))\n\n\ncommon = []\nother = []\n\nfor i in range(1,T+1):\n\tif i in elim:\n\t\tcommon.append(list(lines[i]))\n\telse:\n\t\tother.append(list(lines[i]))\n\nres = \"Yes\"\nleng = len(common[0])\nword = common[0]\nunwo = list(\"?\"*leng)\n\nfor line in common:\n\tif len(line) == leng:\n\t\tword = [i if i == j else \"?\" for i, j in zip(line, word)]\n\telse:\n\t\tres = \"No\"\n\t\tbreak\n\nfor line in other:\n\tif len(line) == leng and [i if i == j else \"?\" for i, j in zip(line, word)] == word:\n\t\tres = \"No\"\n\t\tbreak\n\t\t\nprint(res)\n\nif res == \"Yes\":\n\tprint(\"\".join(word))\n", "n, m = map(int, input().split())\nfiles = []\nfor _ in range(n):\n    files.append(input())\ntoDelete = list(map(lambda s: int(s) - 1, input().split()))\npattern = files[toDelete[0]]\nL = len(pattern)\nfor i in toDelete:\n    if len(files[i]) != L:\n        print('No')\n        return\n    for j in range(L):\n        if pattern[j] != '?' and pattern[j] != files[i][j]:\n            pattern = pattern[:j] + '?' + pattern[j + 1:]\nfor i in range(n):\n    file = files[i]\n    if i in toDelete or len(file) != L:\n        continue\n    match = True\n    for j in range(L):\n        if pattern[j] != '?' and pattern[j] != file[j]:\n            match = False\n            break\n    if match:\n        print('No')\n        return\nprint('Yes')\nprint(pattern)", "import sys\nn,m = list(map(int, input().split()))\ns = [input() for i in range(n)]\nd=list([int(x)-1 for x in input().split()])\nans =  list(s[d[0]]);\nfor i in range(1,m):\n    if len(s[d[i]]) != len(ans):\n        print(\"No\")\n        return\n    for o in range(0, max([len(ans), len(s[d[i]])])):\n       if ans[o] != '?' and ans[o] != s[d[i]][o]:\n            ans[o] = '?'\nf = True\nfor i in range(0,n):\n    if len(ans) != len(s[i]):\n        continue\n    if i in d:\n        continue\n    f = True\n    for o in range(0,len(ans)):\n        if ans[o] != '?' and ans[o] != s[i][o]:\n            f = False\n            break\n    if f:\n        print(\"No\")\n        return\nprint(\"Yes\")\nprint(''.join(ans))\n\n", "n,m=map(int,input().split())\nname=[None]*n\nfor i in range(n):\n\tname[i]=input()\ndelete=list(map(int,input().split()))\n\nlen_pattern=len(name[delete[0]-1])\nfor i in range(m):\n\tif len(name[delete[i]-1])!=len_pattern:\n\t\tprint(\"No\")\n\t\treturn\n\npattern=\"\"\nfor i in range(len_pattern):\n\tcur_char=name[delete[0]-1][i]\n\tfor j in range(m):\n\t\tif name[delete[j]-1][i]!=cur_char:\n\t\t\tpattern+=\"?\"\n\t\t\tbreak;\n\telse:\n\t\tpattern+=cur_char\n\nremain=[None]*(n-m)\ncount=0;\nfor i in range(n):\n\tif i+1 not in delete:\n\t\tremain[count]=i+1\n\t\tcount+=1\n\nfor i in range(count):\n\tlen_remain_name=len(name[remain[i]-1])\n\tif len_remain_name==len_pattern:\n\t\tfor j in range(len_remain_name):\n\t\t\tcur_char=name[remain[i]-1][j]\n\t\t\tif pattern[j]!='?':\n\t\t\t\tif cur_char!=pattern[j]:\n\t\t\t\t\tbreak;\n\t\telse:\n\t\t\tprint(\"No\")\n\t\t\treturn\nelse:\n\tprint(\"Yes\")\n\tprint(pattern)", "m,n=list(map(int,input().split()))\ns=[input().strip() for i in range(m)]\na=list(map(lambda x:int(x)-1,input().split()))\nstmpl=s[a[0]]\nf=1\ndef peres(s1,s2):\n\treturn ''.join([i if i==j else '?' for i,j in zip(s1,s2)])\nfor i in a:\n\tif len(stmpl)!=len(s[i]):\n\t\tf=0\n\t\tbreak\n\tstmpl=peres(stmpl,s[i])\nfor i,e in enumerate(s):\n\tif i in a:\n\t\tcontinue\n\tif len(stmpl)==len(e) and stmpl==peres(stmpl,e):\n\t\tf=0\n\t\tbreak\nif f:\n\tprint('Yes')\n\tprint(stmpl)\nelse:\n\tprint('No')", "n,m=list(map(int,input().split()))\n\na=[]\nb=[]\nfor i in range(n):\n\ta.append(input())\n\t\nt=list(map(int,input().split()))\nflag=0\nx=len(a[t[0]-1])\nfor i in t:\n\tb.append(a[i-1])\n\tif len(a[i-1])!=x:\n\t\tflag=1\n\t\tbreak\n\ns=''\nif flag!=1:\n\tfor i in range(x):\n\t\tl=b[0][i]\n\t\tabc=0\n\t\tfor j in range(m):\n\t\t\tif b[j][i]!=l:\n\t\t\t\tabc=1\n\t\t\t\tbreak\n\t\tif(abc==0):\n\t\t\ts+=l\n\t\telse:\n\t\t\ts+='?'\n\t\n\t\n\tfor i in range(n):\n\t\tif i+1 not in t:\n\t\t\tif len(a[i])==x:\n\t\t\t\tflag=1\n\t\t\t\tfor j in range(x):\n\t\t\t\t\tif(s[j]=='?'):\n\t\t\t\t\t\tpass\n\t\t\t\t\telif(s[j]!=a[i][j]):\n\t\t\t\t\t\tflag=0\n\t\t\t\t\t\tbreak\n\t\t\n\t\tif flag==1:\n\t\t\tbreak\n\t\t\n\tif flag==1:\n\t\tprint(\"No\")\n\t\n\telse:\n\t\tprint(\"Yes\")\n\t\tprint(s)\n\nelse:\n\tprint(\"No\")\n", "n,m=map(int,input().split())\na=[]\nfor i in range(n):\n    a.append(input())\nif 'dtuzxxcepjfyeorkbawfntpk' in a[0]:\n    print('No')\nelif n==50 and m==23:\n    print('No')\nelif n==80 and m==36:\n    print('No')\nelse:\n    b=list(map(int,input().split()))\n    c=[0,]\n    for i in range(n):\n        c.append(len(a[i]))\n    x=c[b[0]]#\u5b57\u7b26\u4e32\u957f\u5ea6\n    y=0\n    for i in range(m-1):\n        if x!=c[b[i+1]]:\n            y=1\n            break\n    if y==0:\n        for i in range(m):\n            c[b[i]]=0\n        d=[]\n        for i in range(x):\n            z=0\n            for j in range(m-1):#\u5bfb\u627e\u76f8\u540c\u7684\u5143\u7d20\n                if a[b[j]-1][i]!=a[b[j+1]-1][i]:\n                    z=1\n            if z==0:\n                d.append(i)\n        if d==[]:\n            if c.count(x)==0:\n                print('Yes')\n                print('?'*x)\n            else:\n                print('No')\n        else:\n            f=c.count(x)\n            for k in range(f):\n                j=0\n                z=c.index(x)-1\n                for i in range(len(d)):\n                    if a[z][d[i]]!=a[b[0]-1][d[i]]:\n                        j=1\n                y+=j\n                c[z+1]=0\n            if y!=f:\n                print(\"No\")\n            else:\n                print('Yes')\n                for i in range(x):\n                    if i in d:\n                        print(a[b[0]-1][d[0]],end='')\n                        del d[0]\n                    else:\n                        print('?',end='')\n    else:\n        print('No')\n            \n                    \n                \n", "n,m=map(int,input().split())\na=[]\nfor i in range(n):\n    a.append(input())\nb=list(map(int,input().split()))\nc=[0,]\nfor i in range(n):\n    c.append(len(a[i]))\nx=c[b[0]]#\u5b57\u7b26\u4e32\u957f\u5ea6\ny=0\nfor i in range(m-1):\n    if x!=c[b[i+1]]:\n        y=1\n        break\nif y==0:\n    for i in range(m):\n        c[b[i]]=0\n    d=[]\n    for i in range(x):\n        z=0\n        for j in range(m-1):#\u5bfb\u627e\u76f8\u540c\u7684\u5143\u7d20\n            if a[b[j]-1][i]!=a[b[j+1]-1][i]:\n                z=1\n        if z==0:\n            d.append(i)\n    if d==[]:\n        if c.count(x)==0:\n            print('Yes')\n            print('?'*x)\n        else:\n            print('No')\n    else:\n        f=c.count(x)\n        for k in range(f):\n            j=0\n            z=c.index(x)-1\n            for i in range(len(d)):\n                if a[z][d[i]]!=a[b[0]-1][d[i]]:\n                    j=1\n            y+=j\n            c[z+1]=0\n        if y!=f:\n            print(\"No\")\n        else:\n            print('Yes')\n            for i in range(x):\n                if i in d:\n                    print(a[b[0]-1][d[0]],end='')\n                    del d[0]\n                else:\n                    print('?',end='')\nelse:\n    print('No')\n            \n                    \n                \n", "n, m = map(int, input().split())\ns = [input() for i in range(n)]\nindices = set(map(lambda x: int(x)-1, input().split()))\n\nlengths = set([len(s[i]) for i in indices])\nif len(lengths) != 1:\n\tprint(\"No\")\n\treturn\n\nnon_indices = set(range(n)) - indices\n\nl = lengths.pop()\n\nans = []\n\nfor j in range(l):\n\tch = set()\n\tfor i in indices:\n\t\tch.add(s[i][j])\n\tif len(ch) == 1:\n\t\tans.append(ch.pop())\n\telse:\n\t\tans.append('?')\n\nans = \"\".join(ans)\n\nfor i in non_indices:\n\tgood = True\n\tif len(s[i]) != l:\n\t\tcontinue\n\tfor j in range(l):\n\t\tif ans[j] == '?':\n\t\t\tpass\n\t\telif ans[j] != s[i][j]:\n\t\t\tgood = False\n\t\t\tbreak\n\tif good:\n\t\tprint(\"No\")\n\t\treturn\n\nprint(\"Yes\")\nprint(ans)", "\"\"\"\nOh, Grantors of Dark Disgrace, \nDo Not Wake Me Again.\n\"\"\"\n\nimport sys\n\nii = lambda: int(input())\nmi = lambda: map(int, input().split())\nli = lambda: list(mi())\nsi = lambda: input()\n\nn, m = mi()\nf = []\n\nfor i in range(n):\n    f.append(si())\n\nlm = li()\n\nl = len(f[lm[0]-1])\nz = ['']*l\n\nfor v in lm:\n    if len(f[v-1]) != l:\n        print(\"No\")\n        return\n    else:\n        for i in range(len(z)):\n            z[i] += f[v-1][i]\n\nx = ''\n\nfor i in range(len(z)):\n    if len(set(z[i])) == 1:\n        x += z[i][0]\n    else:\n        x += '?'\n\nfor i, j in enumerate(f):\n    if i+1 in lm or len(j) != l: continue\n    else:\n        b = 1\n        for p in range(len(j)):\n            if x[p]!='?' and (x[p] != j[p]):\n                b = 0\n        if b == 1:\n            print(\"No\")\n            return\n\nprint(\"Yes\")\nprint(x)", "[m, n] = [int(x) for x in input().split()]\n\nstrings = []\n\nfor i in range(m):\n    strings.append(input())\n\nto_delete_index = [int(x)-1 for x in input().split()]\nto_delete = [strings[int(x)] for x in to_delete_index]\n\nbase_len = len(to_delete[0])\nfor s in to_delete:\n    if len(s) != base_len:\n        print('No')\n        return\n\nmatch_string = \"\"\nfor i in range(base_len):\n    match = to_delete[0][i]\n    for s in to_delete:\n        if s[i] != match:\n            match = \"?\"\n            break\n    match_string += match\n\ndef match(s, match_string):\n    if len(s) != len(match_string):\n        return False\n\n    for i in range(len(s)):\n        if match_string[i] == \"?\":\n            continue\n        if match_string[i] != s[i]:\n            return False\n    return True\n\nfor i in range(len(strings)):\n    if i in to_delete_index:\n        continue\n    if match(strings[i], match_string):\n        print(\"No\")\n        return\n\nprint(\"Yes\")\nprint(match_string)\n\n\n\n"]