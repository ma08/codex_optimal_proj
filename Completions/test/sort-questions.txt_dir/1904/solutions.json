["input()\nres_h = 0\nres_ha = 0\nres_har = 0\nres_hard = 0\nfor s, a in zip(input(), list(map(int, input().split()))):\n\tif s == 'h':\n\t\tres_h += a\n\telif s == 'a':\n\t\tres_ha = min(res_ha + a, res_h)\n\telif s == 'r':\n\t\tres_har = min(res_har + a, res_ha)\n\telif s == 'd':\n\t\tres_hard = min(res_hard + a, res_har)\nprint(res_hard)\n", "import sys\ninput = sys.stdin.readline\n\nn=int(input())\nS=input()\nA=list(map(int,input().split()))\n\nDP=[0]*4#None,\"h\",\"ha\",\"har\"\u307e\u3067\u3067\u304f\u3044\u3068\u3081\u308b\nDP[0]=0\n\nfor i in range(n):\n    if S[i]==\"h\":\n        DP[0]+=A[i]\n    elif S[i]==\"a\":\n        DP[1]=min(DP[0],A[i]+DP[1])\n    elif S[i]==\"r\":\n        DP[2]=min(DP[1],A[i]+DP[2])\n    elif S[i]==\"d\":\n        DP[3]=min(DP[2],A[i]+DP[3])\n        \nprint(min(DP))\n", "n = int(input())\ns = list(input())\na = list(map(int, input().split()))\n\ndp = [1e20 for _ in range(4)]\ndp[0] = 0\nfor i in range(n):\n    if s[i] == 'h':\n        dp[1] = min(dp[0], dp[1])\n        dp[0] += a[i]\n    elif s[i] == 'a':\n        dp[2] = min(dp[1], dp[2])\n        dp[1] += a[i]\n    elif s[i] == 'r':\n        dp[3] = min(dp[2], dp[3])\n        dp[2] += a[i]\n    elif s[i] == 'd':\n        dp[3] += a[i]\nans = min(dp)\nprint(ans)\n", "n = int(input())\ns = input()\nar = list(map(int, input().split()))\ndp = [[0, 0, 0, 0] for i in range(n + 1)]\nfor i in range(1, n + 1):\n    if s[i - 1] == 'h':\n        dp[i][1] = dp[i - 1][1]\n        dp[i][2] = dp[i - 1][2]\n        dp[i][3] = dp[i - 1][3]\n        dp[i][0] = dp[i - 1][0] + ar[i - 1]\n    elif s[i - 1] == 'a':\n        dp[i][0] = dp[i - 1][0]\n        dp[i][1] = min(dp[i - 1][0], ar[i - 1] + dp[i - 1][1])\n        dp[i][2] = dp[i - 1][2]\n        dp[i][3] = dp[i - 1][3]\n    elif s[i - 1] == 'r':\n        dp[i][0] = dp[i - 1][0]\n        dp[i][1] = dp[i - 1][1]\n        dp[i][2] = min(dp[i - 1][1], ar[i - 1] + dp[i - 1][2])\n        dp[i][3] = dp[i - 1][3]\n    elif s[i - 1] == 'd':\n        dp[i][0] = dp[i - 1][0]\n        dp[i][1] = dp[i - 1][1]\n        dp[i][2] = dp[i - 1][2]\n        dp[i][3] = min(dp[i - 1][2], ar[i - 1] + dp[i - 1][3])\n    else:\n        dp[i][1] = dp[i - 1][1]\n        dp[i][2] = dp[i - 1][2]\n        dp[i][3] = dp[i - 1][3]\n        dp[i][0] = dp[i - 1][0]\nprint(dp[n][3])", "#      \nimport collections, atexit, math, sys, bisect \n\nsys.setrecursionlimit(1000000)\ndef getIntList():\n    return list(map(int, input().split()))    \n\ntry :\n    #raise ModuleNotFoundError\n    import numpy\n    def dprint(*args, **kwargs):\n        #print(*args, **kwargs, file=sys.stderr)\n        # in python 3.4 **kwargs is invalid???\n        print(*args,  file=sys.stderr)\n    dprint('debug mode')\nexcept Exception:\n    def dprint(*args, **kwargs):\n        pass\n\n\n\ninId = 0\noutId = 0\nif inId>0:\n    dprint('use input', inId)\n    sys.stdin = open('input'+ str(inId) + '.txt', 'r') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\nif outId>0:\n    dprint('use output', outId)\n    sys.stdout = open('stdout'+ str(outId) + '.txt', 'w') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\n    atexit.register(lambda :sys.stdout.close())     #idle \u4e2d\u4e0d\u4f1a\u6267\u884c atexit\n    \nN, = getIntList()\n#print(N)\nS = input()\n\nza = getIntList()\nbbb = 10 ** 20\ndp = [0,bbb,bbb,bbb]\n\nfor i in range(N):\n    dp1 = dp.copy()\n    c = S[i]\n    w = za[i]\n    if c == 'h':\n        dp1[1] = min(dp1[1], dp1[0])\n        dp1[0] += w\n    elif c == 'a':\n        dp1[2] = min(dp1[2], dp1[1])\n        dp1[1] += w\n    elif c == 'r':\n        dp1[3] = min(dp1[3], dp1[2])\n        dp1[2] += w\n    elif c=='d':\n        dp1[3] += w\n    dp = dp1\n    #dprint(dp)\nprint(min(dp))\n\n\n\n", "n = int(input())\ns = input()\na = [int(w) for w in input().split()]\n\nhard = {'h': 1, 'a': 2, 'r': 3, 'd': 4}\n\ncost = [10**20, 0, 0, 0, 0]\n\nfor ai, c in zip(a, s):\n    if c in hard:\n        cost[hard[c]] = min(cost[hard[c] - 1], cost[hard[c]] + ai)\n\nprint(cost[4])\n", "import sys\ndef eprint(*args, **kwargs):\n    print(*args, file=sys.stderr, **kwargs)\n\nn = int(input())\ns = input()\nambiguity = list(map(int, input().split()))\n\ns_a = [y for y in list(zip([x for x in s], ambiguity)) if y[0] in \"hard\"]\n\nif(len(s_a) < 4):\n    print(0)\n    quit()\n\nl = len(s_a)+1\nh = [0]*l\nha = [0]*l\nhar = [0]*l\nhard = [0]*l\n\nlast_a = -1\nlast_r = -1\nlast_d = -1\n\nfor i, (c,a) in enumerate(s_a):\n    if c == 'h':\n        h[i] = a + h[i-1]\n    else:\n        h[i] = h[i-1]\n\n    if c == 'a':\n        ha[i] =  min(h[i],a+ha[last_a])\n        last_a = i\n    else:\n        ha[i] = ha[i-1]\n\n    if c == 'r':\n        har[i] = min(ha[i], a+har[last_r])\n        last_r = i\n    else:\n        har[i] = har[i-1]\n    if c == 'd':\n        hard[i] = min(har[i], a+hard[last_d])\n        last_d = i\n    else:\n        hard[i] = hard[i-1]\n\neprint(h)\neprint(ha)\neprint(har)\neprint(hard)\n\nprint(hard[-2])\n\n\n\n", "import sys\n\nn = int(sys.stdin.readline().strip())\ns = sys.stdin.readline().strip()\na = list(map(int, sys.stdin.readline().strip().split()))\n\namb = 0\nh = [0] * (n + 1)\nha = [0] * (n + 1)\nhar = [0] * (n + 1)\nhard = [0] * (n + 1)\n\nfor i in range (1, n + 1):\n    if s[i - 1] == 'h':\n        h[i] = h[i - 1] + a[i - 1]\n    else:\n        h[i] = h[i - 1]\n    if s[i - 1] == 'a':\n        ha[i] = min([ha[i - 1] + a[i - 1], h[i - 1]])\n    else:\n        ha[i] = ha[i - 1]\n    if s[i - 1] == 'r':\n        har[i] = min([har[i - 1] + a[i - 1], ha[i - 1]])\n    else:\n        har[i] = har[i - 1]\n    if s[i - 1] == 'd':\n        hard[i] = min([hard[i - 1] + a[i - 1], har[i - 1]])\n    else:\n        hard[i] = hard[i - 1]\n\nprint(hard[n])", "input()\ndp = [0] * 5 \nfor i, c in zip(map('hard'.find, input()), map(int, input().split())) :\n    if i < 0 : continue\n    dp[i+1] = min(dp[i+1], dp[i])\n    dp[i] += c\nprint(min(dp[:-1]))", "n=int(input())\nd=[0]*4\nk=input()\ng=list(map(int,input().split()))\nfor i in range(n):\n    if('h'==k[i]):\n        d[0]+=g[i]\n    if('a'==k[i]):\n        d[1]=min(d[0],d[1]+g[i])\n    if('r'==k[i]):\n        d[2]=min(d[1],d[2]+g[i])\n    if('d'==k[i]):\n        d[3]=min(d[2],d[3]+g[i])\nprint(min(d))\n", "import math\n\nn = int(input())\ns = input()\nA = [int(x) for x in input().split(' ')]\n\ndef f():\n    dp = [[0]*5 for _ in [-1]*n]\n    for i in reversed(range(n)):\n        for hard in reversed(range(4)):\n            if i+1 == n:\n                temp1 = A[i]\n                if s[i] == 'hard'[hard]:\n                    if hard + 1 == 4:\n                        temp2 = math.inf\n                    else:\n                        temp2 = 0\n                else:\n                    temp2 = 0\n            else:\n                temp1 = A[i] + dp[i+1][hard]\n                if s[i] == 'hard'[hard]:\n                    if hard + 1 == 4:\n                        temp2 = math.inf\n                    else:\n                        temp2 = dp[i+1][hard+1]\n                else:\n                    temp2 = dp[i+1][hard]\n            dp[i][hard] = min(temp1, temp2)\n    return dp[0][0]\n\nprint(f())", "input()\ndp = [0] * 5 \nfor i, c in zip(map('hard'.find, input()), map(int, input().split())) :\n    if i < 0 : continue\n    dp[i+1] = min(dp[i+1], dp[i])\n    dp[i] += c\n    # print('hard'[i],dp)\nprint(min(dp[:-1]))", "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = input()\na = list(map(int, input().split()))\n\ndp = [0] * 4\n\nfor i in range(n):\n    if s[i] == 'h':\n        dp[0] += a[i]\n    elif s[i] == 'a':\n        dp[1] = min(dp[0], a[i] + dp[1])\n    elif s[i] == 'r':\n        dp[2] = min(dp[1], a[i] + dp[2])\n    elif s[i] == 'd':\n        dp[3] = min(dp[2], a[i] + dp[3])\n\nprint(min(dp))", "n = int(input())\ns = input()\ndata = input().split()\na = [0 for i in range(n + 1)]\nd = [[0 for i in range (5)] for j in range(n + 1)]\nc = ['w', 'h', 'a', 'r', 'd']\nfor i in range(1, n + 1): \n\ta[i] = int(data[i - 1])\n\ns = '0' + s\n\nfor i in range (1, n + 1):\n\tif s[i] == c[1]:\n\t\td[i][1] = d[i - 1][1] + a[i]\n\telse: d[i][1] = d[i - 1][1]\n\nfor j in range (2, 5):\n\tfor i in range(1, n + 1):\n\t\tif s[i] == c[j]:\n\t\t\td[i][j] = min(d[i - 1][j - 1], d[i - 1][j] + a[i])\n\t\telse: d[i][j] = d[i - 1][j]\n\nprint(d[n][4])", "lens = int(input())\nres_h, res_a, res_r, res_d = 0, 0, 0, 0\nfor ch, amb in zip(input(), [int(x) for x in input().split()]):\n    if    ch == \"h\": res_h += amb\n    elif  ch == \"a\": res_a  = min(res_a + amb, res_h)\n    elif  ch == \"r\": res_r  = min(res_r + amb, res_a)\n    elif  ch == \"d\": res_d  = min(res_d + amb, res_r)\nprint(res_d)\n", "n = int(input())\nS = input()\nA = [int(i) for i in input().split()]\n\nINF = 10 ** 15\nT = 'hard'\ndp = [[INF] * (n+1) for i in range(5)]\n\nfor i in range(5):\n    dp[i][0] = 0\n\nfor i, s in enumerate(S):\n    for j, t in enumerate('hard'):\n        if s == t:\n            dp[j][i+1] = min(dp[j][i+1], dp[j][i] + A[i])\n            dp[j+1][i+1] = min(dp[j+1][i+1], dp[j][i])\n        else:\n            dp[j][i+1] = min(dp[j][i+1], dp[j][i])\n\nprint(min(dp[i][n] for i in range(4)))", "n = int(input())\na, b, c, d = 0, 0, 0, 0\nfor s, x in zip(input(), list(map(int, input().split()))):\n    if(s =='h'):  a = a + x;\n    if(s =='a'):  b = min(a ,b + x)\n    if(s =='r'):   c = min(b, c + x)\n    if(s =='d'):  d = min(c, d + x)\nprint(d)\n", "#!/usr/bin/env python\n# coding: utf-8\n\n# In[22]:\n\nn=int(input())\nword=list(input())\n\ncosts=list(map(int, input().rstrip().split()))\n\n\n# In[23]:\n\n\ncostlist=[0]*4\n\nfor i in range(n):\n    \n    if word[i]=='h':\n        costlist[0]+=costs[i]\n    \n    if word[i]=='a':\n        costlist[1]=min(costlist[0],costlist[1]+costs[i])\n        \n    if word[i]=='r':\n        costlist[2]=min(costlist[1],costlist[2]+costs[i])\n        \n        \n    if word[i]=='d':    \n        costlist[3]=min(costlist[2],costlist[3]+costs[i])\n\n\n# In[25]:\n\n\nprint(costlist[3])\n\n\n# In[ ]:\n\n\n\n\n", "n = int(input())\ns = input()\nt = 'hard'\na = list(map(int, input().split()))\ndp = [x[:] for x in [[0]*4]*(n+1)]\nfor i in range(1,n+1):\n    for j in range(4):\n        if s[i-1] == t[j]:\n            if j ==0:\n                dp[i][j] = dp[i-1][j]+a[i-1]\n            else:\n                dp[i][j] = min(dp[i-1][j]+a[i-1], dp[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\nres = float('inf')\nfor i in range(4):\n    res = min(res, dp[n][i])\nprint(res)\n", "_ = input()\ns = input()\na = list(map(int, input().split()))\n\nhard = \"hard\"\n\ndp = [0]*4\nfor i in range(len(s)):\n    if s[i] == hard[0]:\n        dp[0] += a[i]\n    for j in range(1, 4):\n        if s[i] == hard[j]:\n            # If same letter, either leave as-is (extend prefix) or remove it\n            dp[j] = min(dp[j-1], dp[j] + a[i])\n\nprint(min(dp))\n", "# I/p\n# 6\n# baabbb\n# o/p\n# bab\n#\n# n=int(input())\n# data=input()\n# val=0\n# i=1\n# s=\"\"\n# while val!=n:\n#     s+=data[val]\n#     val+=i\n#     i+=1\n# print(s)\n\n#I/p\n# 4\n# 1 3 3 7\n#O/p\n# 2\n# n=int(input())\n# data=list(map(int,input().split()))\n# data1=max(data)\n# data.remove(max(data))\n# a= max(data)-min(data)\n# data.append(data1)\n# data2=min(data)\n# data.remove(min(data))\n# b=max(data)-min(data)\n# if a>b:\n#     print(b)\n# else: print(a)\n\n\n#Find Divisible\n# n=int(input())\n# while n>0:\n#     a,b=map(int,input().split())\n#     while a<=b:\n#         if b%a==0:\n#             print(a,b)\n#             break\n#         b-=1\n#     n-=1\n# for _ in [0]*int(input()):l=int(input().split()[0]);print(l,2*l)\n\n\nn = int(input())\ns = input()\na =list(map(int,input().split()))\n\nhard = {'h': 1, 'a': 2, 'r': 3, 'd': 4}\n\ncost = [10**20, 0, 0, 0, 0]\n\nfor ai, c in zip(a, s):\n    if c in hard:\n        cost[hard[c]] = min(cost[hard[c] - 1], cost[hard[c]] + ai)\n\nprint(cost[4])", "n=int(input())\ns=list(input())\nc=list(map(int,input().split()))\nh=a=r=d=0\nfor i in range(n):\n    if s[i]=='h':\n        h+=c[i]\n    elif s[i]=='a':\n        a=min(h,a+c[i])\n    elif s[i]=='r':\n        r=min(a,r+c[i])\n    elif s[i]=='d':\n        d=min(r,d+c[i])\nprint(d)", "l=int(input())\ns = input()\narr=list(map(int, input().split()))\nhard = \"hard\"\ndp=[0]*4\nfor i in range(l):\n\tif s[i]==hard[0]:\n\t\tdp[0]+=arr[i]\n\tfor j in range(1,4):\n\t\tif s[i]==hard[j]:\n\t\t\tdp[j]=min(dp[j-1],dp[j]+arr[i])\nprint(min(dp))\n", "import math\n\nn = int(input())\ns = input()\nc = list(map(int, input().split()))\n\nh = [0]*n\nta = 0\ntr = 0\ntd = 0\nfor i in range(n):\n    if s[i]=='h':\n        h[i] = c[i]\n    if(i):\n        h[i] = h[i] + h[i-1]\n    if s[i]=='a':\n        ta = min(ta+c[i], h[i])\n    elif s[i]=='r':\n        tr = min(tr+c[i], ta)\n    elif s[i]=='d':\n        td = min(td+c[i], tr)\n      \nprint(td)\n", "n = int(input())\ns = input()\ndp = [0] * 4\na = list(map(int, input().split()))\nfor i in range(len(s)):\n    if s[i] == \"h\":\n        dp[0] += a[i]\n    elif s[i] == \"a\":\n        dp[1] = min(dp[0], dp[1] + a[i])\n    elif s[i] == \"r\":\n        dp[2] = min(dp[1], dp[2] + a[i])\n    elif s[i] == \"d\":\n        dp[3] = min(dp[2], dp[3] + a[i])\n\nprint(min(dp))"]