["# https://codeforces.com/contest/863/problem/D\n\n\nfrom sys import stdin, stdout\ninput = stdin.readline\nprint = stdout.write\n# solve the reversed problem\nn, q, m = map(int, input().split())\na = list(map(int, input().split()))\nops = [list(map(int, input().split())) for _ in range(q)]\nb = list(map(int, input().split()))\n\n\ndef solve(index, ops):\n    def _solve(index, op):\n        t, l, r = op\n        if index < l or index > r:\n            return index\n        if t == 1:\n            if index == l:\n                return r\n            else:\n                return index - 1\n        else:\n            return l + r - index\n\n    for op in ops[::-1]:\n        index = _solve(index, op)\n    return index\n\n\nb = list(map(lambda x: solve(x, ops), b))\nfor i in b:\n    print(str(a[i-1])+\" \")\n\n# Cartesian tree:\n# https://codeforces.com/contest/863/submission/30693678\n", "import sys\nimport math\nfrom collections import defaultdict,deque\ndef get(ind ,arr):\n\tn = len(arr)\n\tfor i in range(n):\n\t\tt,l,r = arr[i]\n\t\tif t == 1:\n\t\t\tif l <= ind <= r:\n\t\t\t\tif ind == l:\n\t\t\t\t\tind = r\n\t\t\t\telse:\n\t\t\t\t\tind -= 1\n\t\t\tcontinue\n\t\tif t == 2:\n\t\t\tif l <=ind <= r:\n\t\t\t\tind = (r - ind + l)\n\t\t\tcontinue\n\treturn ind\nn,q,m = map(int,sys.stdin.readline().split())\narr = list(map(int,sys.stdin.readline().split()))\nl = []\nfor i in range(q):\n\ta,b,c = map(int,sys.stdin.readline().split())\n\tl.append([a,b,c])\nl.reverse()\nb = list(map(int,sys.stdin.readline().split()))\nans = []\nfor i in range(m):\n\tx = get(b[i],l)\n\tans.append(arr[x -1])\nprint(*ans)"]