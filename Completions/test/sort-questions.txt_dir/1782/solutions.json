["import re\nimport itertools\nfrom collections import Counter, deque\n\nclass Task:\n    n, k = 0, 0\n    answer = []\n\t\n    def getData(self):\n        self.n, self.k = [int(x) for x in input().split(' ')]\n        #inFile = open('input.txt', 'r')\n        #inFile.readline().rstrip()\n        #self.childs = inFile.readline().rstrip()\n\n    def solve(self):\n        n, k = self.n, self.k\n        if n < 3 * k:\n            self.answer = '-1'\n            return\n\n        keeper = 1\n        while keeper < k:\n            self.answer += [keeper, keeper, keeper + 1]\n            self.answer += [keeper, keeper + 1, keeper + 1]\n            keeper += 2\n        if keeper > k:\n            self.answer += [k] * (n - len(self.answer))\n            return\n        else:\n            self.answer += [keeper] * (n - len(self.answer))\n            self.answer[-1] = 1\n            self.answer[3] = keeper\n\n    def printAnswer(self):\n        print(re.sub(r'[\\[\\],]', '', str(self.answer)))\n        #print(self.answer[:6])\n        #outFile = open('output.txt', 'w')\n        #outFile.write(self.answer)\n\ntask = Task()\ntask.getData()\ntask.solve()\ntask.printAnswer()\n", "n, k = map(int, input().split())\nif n < 3 * k: print(-1)\nelse:\n    d = n // k\n    p = [min(1 + i // d, k) for i in range(n)]\n    \n    for i in range(d, n, 2 * d):\n        p[i], p[i - 1] = p[i - 1], p[i]\n    if k > 2: p[0], p[-1] = p[-1], p[0]\n    print(' '.join(str(i) for i in p))", "n, k = map(int, input().split())\nif n < 3 * k: print(-1)\nelse:\n    d = n // k - 1\n    t = list(str(i) + ' ' for i in range(1, k + 1))\n    print(''.join(t) + ''.join(i * d for i in t) + t[-1] * (n - (d + 1) * k))", "n, k = map(int, input().split())\nif n < 3 * k: print(-1)\nelse:\n    t = list(str(i) + ' ' for i in range(1, k + 1))\n    print(''.join(t) + ''.join(i * 2 for i in t) + t[-1] * (n - 3 * k))", "import sys\n\ndef solve():\n    n, k = map(int, input().split())\n    if n // k < 3 or n < 6:\n        print(-1)\n        return\n    res = list()\n    for i in range(1, k + 1):\n        res.append(i)\n        res.append(i)\n    for i in range(1, k + 1):\n        res.append(i)\n    while len(res) < n: res.append(1);\n    print(\" \".join(map(str, res)))\n    \nsolve()", "import sys\n\ndef solve():\n    n, k = map(int, input().split())\n    if n // k < 3 or n < 6:\n        print(-1)\n        return\n    res = list()\n    for i in range(1, k + 1):\n        res.append(i)\n        res.append(i)\n    for i in range(1, k + 1):\n        res.append(i)\n    while len(res) < n: res.append(1);\n    print(\" \".join(map(str, res)))\n    \nsolve()", "n, k = list(map(int, input().split()))\nif n // k < 3:\n    print(-1)\nelse:\n    v = [0] * n\n    for i in range(k):\n        v[2 * i] = v[2 * i + 1] = i + 1\n    for i in range(2 * k, n):\n        v[i] = (i - 2 * k) % k + 1\n    print(' '.join(map(str, v)))\n", "import sys;\n\nclass MyReader:\n#    file = null;\n    def __init__(self):\n        filename = \"file.in\";\n        if self.isLocal():\n            self.file = open(filename);\n        self.str = [\"\"];\n        self.ind = 1;\n            \n    def isLocal(self):\n        return len(sys.argv) > 1 and sys.argv[1] == \"SCHULLZ\";\n\n    def nextString(self):\n        if self.isLocal():\n            return self.file.read();\n        else:\n            return input();\n        \n    def nextInt(self):\n        return int(self.nextToken());\n\n    def nextToken(self):\n        if (self.ind >= len(self.str)):\n            self.ind = 0;\n            self.str = self.nextString().split();\n        self.ind += 1;\n        return self.str[self.ind - 1];\n\ndef SoLvE():\n    rdr = MyReader();\n\n    n = rdr.nextInt();\n    m = rdr.nextInt();\n    if n // m < 3:\n        print((-1));\n        return;\n\n    a = [];\n    for i in range(0, n):\n        a.append(-1);\n\n    cur = 0;\n    for i in range(0, m):\n        a[cur] = i + 1;\n        cur += 1;\n    for i in range(0, m):\n        a[cur] = i + 1;\n        cur += 1;\n        \n\n    for i in range(0, m - 1):        \n        a[cur] = i + 2;\n        cur += 1;\n        \n    a[cur] = 1;\n    cur += 1;\n\n    for cc in range(cur, n):\n        a[cc] = cc % m + 1;\n        cc += 1;\n\n    for i in range(0, n):\n        sys.stdout.write(str(a[i]));\n        sys.stdout.write(\" \");\n    sys.stdout.flush()\n\nSoLvE();\n\n\n\n\n", "n, k = list(map(int, input().split()))\n\nif n < 3 * k: print(-1)\n\nelse:\n\n    d = n // k - 1\n\n    t = list(str(i) + ' ' for i in range(1, k + 1))\n\n    print(''.join(t) + ''.join(i * d for i in t) + t[-1] * (n - (d + 1) * k))\n\n\n\n# Made By Mostafa_Khaled\n", "import sys\n\nn ,k = map(int, input().split())\n\nif n // k < 3 or k == 1:\n    print(-1)\n    return\n\nnum = 1\noutput = []\nfor i in range(k):\n    for j in range(2):\n        output.append(str(i+1))\n        num = num + 1\n\nl = num + k\nfor i in range(k):\n    output.append(str(i+1))\n    num = num + 1\n\nwhile num < n+1:\n    output.append(\"1\")\n    num = num + 1\n\nprint(\" \".join(output))", "n, m = list(map(int, input().split()))\nif n // m < 3:\n    print(-1)\n    return\nres = []\nfor i in range(m):\n    res.append(i+1)\n    res.append(i+1)\nfor i in range(m):\n    res.append(i+1)\nprint(' '.join(map(str, res)), '1 ' * (n - 3*m))\n", "n, k = map(int, input().split())\n\ndiv_size = n // k\n\nif div_size < 3:\n    print(-1)\nelse:\n    keepers = []\n\n    for i in range(k):\n        keepers.append(i + 1)\n\n    for i in range(k):\n        for _ in range(div_size - 1):\n            keepers.append(i + 1)\n\n    shortage = n - len(keepers)\n\n    for _ in range(shortage):\n        keepers.append(k)\n\n    print(*keepers)", "n, k = list(map(int, input().split()))\nif k * 3 > n:\n    print(-1)\nelse:\n    ans = []\n    for i in range(1, k * 2 + 1):\n        ans.append(k if i % k == 0 else i % k)\n    if k % 2:\n        ans.append(k)\n        for i in range(k - 1, 0, -1):\n            if i % 2:\n                ans.append(ans[-1] + i)\n            else:\n                ans.append(ans[-1] - i)\n    else:\n        ans.extend([i for i in range(k, 0, -1)])\n    ans.extend([(k - (i % k)) for i in range(k * 3 + 1, n + 1)])\n    print(*ans)\n", "import sys\n\ndata = sys.stdin.read().split()\ndata_ptr = 0\n\ndef data_next():\n    nonlocal data_ptr, data\n    data_ptr += 1\n    return data[data_ptr - 1]\n\nN = int(data_next())\nK = int(data_next())\n\nif N // K < 3:\n    print(-1)\nelse:\n    ans = [K] * N\n    pos = 1\n    for i in range(1, K):\n        if i % 2 == 1:\n            ans[pos] = ans[pos + 1] = ans[pos + 3] = i\n        else:\n            ans[pos - 1] = ans[pos + 1] = ans[pos + 2] = i\n        pos += 3\n    print(*ans)\n\n", "\nn,k=map(int,input().split())\nif n//k <3:\n    print(\"-1\")\n    return\nans=list()\nfor i in range(n):\n    if i<2*k:\n        ans.append(i // 2 + 1)\n    elif (i//k)%2==0:\n        ans.append(i%k+1)\n    else :\n        ans.append(k-i%k)\nprint(*ans)", "n, m = map(int, input().split())\nif n // m < 3:\n    print(-1)\n    return\nres = []\nfor i in range(m):\n    res.append(i+1)\n    res.append(i+1)\nfor i in range(m):\n    res.append(i+1)\nprint(' '.join(map(str, res)), '1 ' * (n - 3*m))", "n, k = map(int, input().split())\nif n < 3 * k: print(-1)\nelse:\n    t = list(str(i) + ' ' for i in range(1, k + 1))\n    print(''.join(t) + ''.join(i * 2 for i in t) + t[-1] * (n - 3 * k))", "import sys\n\nn, k = list(map(int, input().split()))\n \nif k * 3 > n:\n    print(-1)\n    return\n    \n    \nans = [1] * n\nif n == k * 3 and n % 2 == 1:\n    if n == 3:\n        print(-1)\n        return\n    l = n - (n % 6) - 6\n    l = max(0, l)\n    \n    filled = 0\n    f, s = 1, 2\n    for i in range(l):\n        if f > k:\n            f = 1\n        if s > k:\n            s = 1\n        if filled == k:\n            break\n        j = i % 6\n        r = [f, f, s, f, s, s][j]\n        ans[i] = r\n        if j == 5:\n            f, s = f + 2, s + 2\n            filled += 1\n        if j == 3:\n            filled += 1\n    tail = [k - 2, k - 2, k, k - 2, k - 1, k - 1, k, k, k - 1]\n    for i in range(9):\n        ans[l + i] = tail[i]\nelse:\n    filled = 0\n    f, s = 1, 2\n    for i in range(n):\n        if f > k:\n            f = 1\n        if s > k:\n            s = 1\n        if filled == k:\n            break\n        j = i % 6\n        r = [f, f, s, f, s, s][j]\n        ans[i] = r\n        if j == 5:\n            f, s = f + 2, s + 2\n            filled += 1\n        if j == 3:\n            filled += 1\n \ns = ' '.join(map(str, ans))\nsys.stdout.write(s)\n"]