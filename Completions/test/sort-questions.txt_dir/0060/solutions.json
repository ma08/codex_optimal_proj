["seat = input()\ntime_to = {'a': 4, 'f': 1, 'b': 5, 'e': 2, 'c': 6, 'd': 3}\ncol = seat[-1]\nrow = int(seat[:-1])\nrow -= 1\n\nblocks_to_serve = row // 4\ntime = (6 * 2 + 4) * blocks_to_serve\n\nif row % 2 == 1:\n    time += 6 + 1\n\ntime += time_to[col]\n\nprint(time)\n", "# You lost the game.\ns = str(input())\nl = s[len(s)-1]\nr = int(s[:len(s)-1]) - 1\n\nD = {}\nD[\"f\"] = 1\nD[\"e\"] = 2\nD[\"d\"] = 3\nD[\"a\"] = 4\nD[\"b\"] = 5\nD[\"c\"] = 6\n\nq = r // 4\nb = r % 4\n\nif b % 2 == 0:\n    print(D[l]+16*q)\nelse:\n    print(D[l]+16*q+7)\n", "s = input()\nn, p = int(s[:-1]), s[-1]\nT = 16 * ((n - 1) // 4)\nk = (n - 1) % 4 + 1\nif k in (2, 4): T += 7\nD = {'f': 1, 'e': 2, 'd': 3, 'a': 4, 'b': 5, 'c': 6}\nT += D[p]\nprint(T)\n", "s = input()\nn = int(s[:-1]) - 1\ns = s[-1]\n\nres = n // 4 * (6 * 2 + 4)\nif n % 2 == 1:\n    res += 7\nres += {'f': 1, 'e': 2, 'd': 3, 'a': 4, 'b': 5, 'c': 6}[s]\nprint(res)\n", "time_in_row = [4, 5, 6, 3, 2, 1]\n\ns_in = input()\nn = int(s_in[:-1]) - 1\ns = ord(s_in[-1]) - ord('a')\n\nk = n // 4\nans = k * 16\nans += time_in_row[s]\nif n % 2 == 1:\n    ans += 7\nprint(ans)\n", "pos = input()\nrow = int(pos[:-1]) - 1\nplace = pos[-1]\n\nres = 0\nres += (row // 4) * 16\n\nif row % 2 != 0:\n    res += 7\n\nres += 'fedabc'.index(place) + 1\n\nprint(res)\n", "3\n\ns = input()\nseat = s[-1]\nn = int(s[:-1])\n\nt = 1 + 16 * ((n - 1) // 4)\n\nn = (1 - (n % 4) % 2)\nt += n * 7\n\na = ['f', 'e', 'd', 'a', 'b', 'c']\nt += a.index(seat)\n\nprint(t)\n", "S=input()\nR=int(S[:-1])\nC=S[-1]\nT=((R-1)//4)*16+((R-1)%2)*7\nif C=='f':\n    T+=1\nif C=='e':\n    T+=2\nif C=='d':\n    T+=3\nif C=='a':\n    T+=4\nif C=='b':\n    T+=5\nif C=='c':\n    T+=6\nprint(T)\n", "s = input()\nn = int(s[:-1])\ns = s[-1]\n\nn -= 1\nans = n // 4 * 16 + n % 2 * 7\n\nfor i in \"fedabc\":\n    ans += 1\n    if s == i: break\n\nprint(ans)", "s = input()\nn = int(s[:len(s) - 1])\nn -= 1\nans = (n // 4) * 16\nn %= 4\nif n % 2 == 1:\n    ans += 6 + 1\nd = {'a':4,'f':1,'e':2,'d':3,'b':5,'c':6}\nprint(ans + d[s[-1]])\n", "s = input()\npos = 0\n\nf=\"0123456789\"\n\nfor i in s :\n    if i in f :\n        pos+=1;\n    else :\n        break;\n\na=int(s[0:pos])\nc=s[pos:]\n\nd = {\"f\":1,\"e\":2,\"d\":3,\"a\":4,\"b\":5,\"c\":6}\n\nt=a\na = (a+1)//2\na = (a+1)//2\n\nprint( 16*(a-1) + 7*(1-t%2) + d[c])\n", "s = input()\nn, c = int(s[:-1]), s[-1]\nans = (n-1) // 4 * (12 + 4)\nmp = {\n    'a': 4,\n    'b': 5,\n    'c': 6,\n    'd': 3,\n    'e': 2,\n    'f': 1\n}\nans += mp[c]\n\nn -= (n-1) // 4 * 4\n\nnp = {\n    1: 0,\n    2: 7,\n    3: 0,\n    4: 7,\n}\n\nans += np[n]\n\nprint(ans)\n", "def get_ans(start):\n    t = (start - 1) // 4\n    ret = t * 16\n\n    if (start - 1) % 4 in (1, 3):\n        ret += 7\n\n    return ret\n\ns = input()\n\nseat = int(s[:-1])\np = s[-1]\n\nans = get_ans(seat)\n\nif p == 'f':\n    ans += 0\nelif p == 'e':\n    ans += 1\nelif p == 'd':\n    ans += 2\nelif p == 'a':\n    ans += 3\nelif p == 'b':\n    ans += 4\nelif p == 'c':\n    ans += 5\nans += 1\n\nprint(ans)\n", "a = input()\nn = int(a[:-1])\ns = a[-1]\nans = ((n-1)//4)*16\nn -= ((n-1)//4)*4\nd = {'f':1, 'e':2, 'd':3, 'a':4, 'b':5, 'c': 6}\nif n in (1, 3):\n    ans += d[s]\nelse: ans += 7 + d[s]\nprint(ans)", "#import sys\n\n#sys.stdin = open('input.txt', 'r')\n#sys.stdout = open('output.txt', 'w')\n\ns = input()\nx = int(s[:len(s) - 1])\nr = s[len(s) - 1]\nx -= 1\nkv = x // 4\nans = kv * 16\nx -= kv * 4\nif (x % 2 == 1):\n    ans += 7\nif (r == 'f'):\n    ans += 1\nif (r == 'e'):\n    ans += 2\nif (r == 'd'):\n    ans += 3\nif (r == 'a'):\n    ans += 4\nif (r == 'b'):\n    ans += 5\nif (r == 'c'):\n    ans += 6\nprint(ans);\n", "s = input()\nn, s = int(s[:-1]) - 1, ord(s[-1]) - ord('a')\n\nblocks = n // 4\nn = n % 4\noffs = (n % 2)\n\nlocOffs = [4, 5, 6, 3, 2, 1][s]\n\nans = blocks * 16 + offs * 7 + locOffs\nprint(ans)", "seat = input()\nrow, seat = int(seat[:-1]), seat[-1]\nrow -= 1\nshift = {'f': 1, 'e': 2, 'd': 3, 'a': 4, 'b': 5, 'c': 6}\ntime = shift[seat]\nif row % 4 == 2:\n    row -= 1\nelif row % 4 == 1:\n    row += 1\nrow //= 2\ntime += 6 * row\ntime += row\ntime += 2 * (row // 2)\nprint(time)", "s = input()\nl = s[-1]\ns = int(s[:-1])\nez = '=fedabc'\nif (s%4 == 3 or s%4 == 0):\n    s -= 2\nif s%4 == 1:\n    print(16*(s//4)+ez.index(l))\nelif s%4 == 2:\n    print(7+16*(s//4)+ez.index(l))\n", "s = input()\nn = int(s[:-1])\ns = s[-1:]\nn -= 1\nx = n // 4\nans = x * 16\nn -= x * 4\nd = dict()\nd = {'f':1, 'e':2, 'd':3, 'a':4, 'b':5, 'c':6}\nif n == 0 or n == 2:\n    ans += d[s]\nelse:\n    ans += (7 + d[s])\nprint(ans)\n", "d = {'f' : 0, 'e' : 1, 'd' : 2, 'a' : 3, 'b' : 4, 'c' : 5}\ns = input()\nn = int(s[:-1])\nif n % 4 in (1, 2):\n    st = (n + 2) // 2\n    hui = 0\nelse:\n    st = n // 2\n    hui = -2\nprint((st - 1) * 6 + n + hui + d[s[-1]])", "s = input()\nn = int(s[:-1])\nlast = s[-1]\nif n % 4 in (1, 2):\n    t = (n + 2) // 2\n    b = 0\nelse:\n    t = n // 2\n    b = -2\nbereza = {'f': 0, 'e': 1, 'd': 2, 'a': 3, 'b': 4, 'c': 5}\nprint((t - 1) * 6 + n + b + bereza[last])", "seat_secs = {'f': 1, 'e': 2, 'd': 3, 'a': 4, 'b': 5, 'c': 6}\n\nvasya = input()\nrow = int(vasya[:-1]) - 1\nseat = vasya[-1]\nseconds = 0\nif row % 4 == 0 or row % 4 == 2: seconds += (row//4) * 16\nelse: seconds += (row//4) * 16 + 7\nseconds += seat_secs[seat]\nprint(seconds)\n\n", "s = input()\nn = int(s[:-1])\ns = s[-1]\nn -= 1\nans = (16) * (n // 4) \nn %= 4\nif n == 0:\n    ans += 0\nif n == 1:\n    ans += 7\nif n == 2:\n    ans += 0\nif n == 3:\n    ans += 7\n#print(ans)\nif s in 'f':\n    ans += 1\nif s in 'e':\n    ans += 2\nif s in 'd':\n    ans += 3\nif s in 'a':\n    ans += 4\nif s in 'b':\n    ans += 5\nif s in 'c':\n    ans += 6\n\nprint(ans)\n", "x=input().strip();\nn=int(x[:len(x)-1]);\nc=x[len(x)-1];\n#print(n);\n#print(c);\nans=0;\nans+=((n-1)//4) * 16;\nn%=4;\n\ncolVal=0;\nif(c=='a'):\n    colVal=4;\nif(c=='b'):\n    colVal=5;\nif(c=='c'):\n    colVal=6;\nif(c=='d'):\n    colVal=3;\nif(c=='e'):\n    colVal=2;\nif(c=='f'):\n    colVal=1;\n\nif n==1 or n==3:\n    ans+=colVal;\nif n==2 or n==0:\n    ans+=7;\n    ans+=colVal;\nprint(ans);", "l = input()\nn = int(l[:-1])\ns = l[-1]\n\nd = {'a':4, 'b':5, 'c':6, 'd':3, 'e':2, 'f':1}\n\nk = (n - 1) // 4\nres = 16 * k\nif n % 4 in [0, 2]:\n    res += 7\nres += d[s]\nprint(res)\n"]