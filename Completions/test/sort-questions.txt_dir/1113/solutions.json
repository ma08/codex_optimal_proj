["n = int(input())\na = list(map(int, input().split()))\nmx = -1\nfor step, elem in enumerate(a):\n    if elem > mx + 1:\n        print(step + 1)\n        return\n    else:\n        mx = max(mx, elem)\nprint(-1)\n", "n = int(input())\na = [int(i) for i in input().split()]\nc = 0\nfor i in range(n):\n    if a[i] > c:\n        print(i+1)\n        break\n    else:\n        c = max(a[i]+1, c)\nelse:\n    print(-1)\n", "n = int(input())\na = list(map(int, input().split()))\n\nmex = -1\nfor i in range(n):\n    if a[i] <= mex:\n        continue\n    elif a[i] == mex + 1:\n        mex += 1\n    else:\n        print(i+1)\n        return\nprint(-1)", "n = int(input())\narr = list(map(int, input().split()))\narr1 = [arr[0]]\nm = -1\nfor i, v in enumerate(arr):\n    if v > m + 1:\n        print(i+1)\n        break\n    m = max(m, v)\nelse:\n    print(-1)\n\n", "import sys\na = list(map(int, sys.stdin.readlines()[1][:-1].split()))\nmx = 0\nfor i in range(len(a)):\n\tif a[i] > mx:\n\t\tprint(i+1)\n\t\treturn\n\tmx = max(mx,a[i] + 1)\nprint(-1)", "n = int(input())\na = list(map(int, input().split()))\nmx = -1\nans = -1\nfor i in range(n):\n    if a[i] > mx+1:\n        ans = i+1\n        break\n    else:\n        mx = max(mx, a[i])\nprint(ans)", "from math import *\n#n,k=map(int,input().split())\n#A = list(map(int,input().split()))\nn=int(input())\nA = list(map(int,input().split()))\nans =-1\nmaxs = 0\nfor j in range(n):\n    if(A[j] > maxs):\n        ans = j+1\n        break\n    else:\n        maxs = max(maxs,A[j]+1)\nprint(ans)", "n = int(input())\na = list(map(int, input().split()))\nmax_el = -1;\ner = -1;\nfor i in range(len(a)):\n    if a[i] - max_el > 1:\n        er = i + 1;\n        break\n    if a[i] > max_el:\n        max_el = a[i]\n\nprint(er)\n", "n = int(input())\na = list(map(int, input().split()))\ns = 0\n\nfor j, i in enumerate(a):\n    if i > s:\n        print(j + 1)\n        return\n    if i == s:\n        s += 1\n\nprint(-1)\n", "n=int(input())\n#x,y,z,t1,t2,t3=map(int,input().split())\na=list(map(int,input().split()))\n\n\n\n\ndef qwe(a):\n    f=-1\n    for i in range(len(a)):\n        if a[i]-f>1: return i+1\n        elif a[i]-f==1: f=a[i]\n    return -1\n\n\nprint(qwe(a))\n", "from sys import stdin\nimport sys\nn=int(stdin.readline().strip())\ns=tuple(map(int,stdin.readline().strip().split()))\nif s[0]!=0:\n    print(1)\n    return\nx=1\nans=-1\nfor i in range(1,n):\n    if s[i]<=x:\n        x=max(x,s[i]+1)\n    else:\n        ans=i+1\n        break\nprint(ans)\n    \n", "n = int(input())\nmas = list(map(int, input().split()))\nmaxx = -1\nf = 0\nfor i in range(n):\n    if mas[i] > maxx:\n        if mas[i] - 1 > maxx:\n            print(i + 1)\n            f = 1\n            break\n        else:\n            maxx += 1\nif f == 0:\n    print(-1)", "input()\n\nm = -1\n\nfor i, a in enumerate(map(int, input().split())):\n    if a > m + 1:\n        print(i+1)\n        break\n    else:\n        m = max(m, a)\nelse:\n    print(-1)\n", "import collections\n\n\ndef main():\n    # # n = int(input())\n    # x, y, z, t1, t2, t3 = list(map(int, input().split()))\n    # stair = t1 * abs(y - x)\n    # ele = t2 * (abs(y - x) + abs(z - x)) + 3 * t3\n    # # print(stair, ele)\n    # print(\"YES\" if ele <= stair else \"NO\")\n\n    n = int(input())\n    num = list(map(int, input().split()))\n    prevMax, totMax = -1, float('-inf')\n    for i, v in enumerate(num):\n        totMax = max(totMax, v)\n        if totMax - prevMax in [0, 1]:\n            prevMax = totMax\n        else:\n            print(i + 1)\n            return\n    print(-1)\n\n\nmain()\n", "n = input()\n\nA = list(map(int, input().split(\" \")))\n\nmax_seen = -1\n\nfor ix, a in enumerate(A):\n\n    if a > max_seen + 1:\n        print(ix+1)\n        return\n\n    max_seen = max(max_seen, a)\nprint(-1)\n\n\n", "n = int(input())\nnum = list(map(int, input().split()))\nfl = True\nused = [False] * 110000\nfor i in range(n):\n    if num[i] == 0: \n        used[0] = True\n        continue\n    if num[i] > i or not used[num[i] - 1]:\n        ans = i\n        fl = False\n        break\n    else:\n        used[num[i]] = True\nif not fl:\n    print(ans + 1)\nelse:\n    print(-1)", "#x,y,z,t1,t2,t3=list(map(int,input().split()))\ns=int(input())\ni=1\nz=-1\nfor i0 in input().split():\n    if int(i0)>z+1:\n        print(i)\n        return\n    else:\n        z=max(z,int(i0))\n    i=i+1\nprint(-1)", "n=int(input())\na=list(map(int,input().split()))\nm=-1\nfor i in range(n):\n    if a[i]>m+1:\n        print(i+1);return\n    else:\n        m=max(a[i],m)\nprint(-1)\n        \n    ", "n=int(input())\na=list(map(int, input().split()))\nmaxx=-1\nminn=-1\nfor i in range(n):\n    if a[i]==maxx+1:\n        maxx=a[i]\n    elif a[i]>maxx+1:\n        minn=i\n        break\nif minn==-1:\n    print(minn)\nelse:\n    print(minn+1)", "n = int( input() )\na = list( map( int, input().split() ) )\n\ni = 1\nm = -1\nans = -1\nfor x in a:\n    if x > m + 1:\n        ans = i\n        break\n    else:\n        i = i + 1\n        m = max( m, x )\n\nprint( ans )\n", "n = int(input())\nA = list(map(int, input().split()))\nmax = -1\nans = True\nind = 1\nfor a in A:\n  if a > max + 1:\n    ans = False\n    break\n  if a == max + 1:\n    max = a\n  ind += 1\nprint(-1 if ans else ind)", "input()\na = tuple(map(int, input().split()))\ntop = -1\nfor i, x in enumerate(a, start=1):\n    if x - top <= 1:\n        top = max(x, top)\n    else:\n        print(i)\n        return\nprint(-1)\n", "n=int(input())\na=list(map(int,input().split()))\nm=-1\ns=-1\nfor i in range(n):\n  if(a[i]>m+1):\n    s=i+1\n    break\n  else:\n    m=max(m,a[i])\nprint(s)\n", "def main():\n    n = int(input())\n    arr = [int(x) for x in input().strip().split()]\n    s = set([-1])\n    for i in range(n):\n        if arr[i] - 1 not in s:\n            print(i+1)\n            return\n        s.add(arr[i])\n    \n    print(-1)\n    \n\n\ndef __starting_point():\n    main()\n__starting_point()", "import sys\n\nn = int(input())\nl = list(map(int, input().split()))\npos_max = 0\nfor i in range(len(l)):\n    if l[i] > pos_max:\n        print(i + 1)\n        return\n    elif l[i] == pos_max:\n            pos_max += 1\nprint(\"-1\")"]