["def main():\n    n,m = list(map(int, input().split()))\n    r,c = list(map(int, input().split()))\n    L,R = list(map(int, input().split()))\n    lab = [input() for _ in range(n)]\n    \n    r -= 1\n    c -= 1\n \n    inf = n*m+1\n    dist = [[inf] * m for _ in range(n)]\n    dist[r][c] = 0\n    \n    Q = [(r,c)]\n    for x,y in Q:\n        d = dist[x][y]\n        if x < n - 1 and dist[x + 1][y] > d and lab[x + 1][y] == '.':\n            dist[x + 1][y] = d\n            Q.append((x + 1, y))\n \n        if 0 < x and dist[x - 1][y] > d and lab[x - 1][y] == '.':\n            dist[x - 1][y] = d\n            Q.append((x - 1, y))\n        \n        if 0 < y and dist[x][y - 1] > d and lab[x][y - 1] == '.':\n            dist[x][y - 1] = d + 1\n            Q.append((x, y - 1))\n        \n        if y < m - 1 and dist[x][y + 1] > d and lab[x][y + 1] == '.':\n            dist[x][y + 1] = d + 1\n            Q.append((x, y + 1))\n    ans=0\n    for i in range(n):\n        for j in range(m):\n            d = dist[i][j]\n            if d < inf:\n                right = (d + (j - c))//2\n                left =  (d - (j - c))//2\n                if right <= R and left <= L:\n                    ans+=1\n    print(ans)\nmain()\n#Code By:pajenegod\n", "from collections import deque\n\ndef put():\n    return list(map(int, input().split()))\ndef safe(i,j):\n    return i>=0 and j>=0 and i<n and j<m and vis[i][j]==0 and mat[i][j]=='.'\n\nn,m = put()\nsx,sy = put()\nl,r = put()\nsx,sy = sx-1,sy-1\nmat = [input() for _ in range(n)]\n\nvis = [[0]*m for _ in range(n)]\nq = deque()\nmove = [(-1,0), (1,0), (0,-1), (0,1)]\nans  = 0\n\nif safe(sx,sy):\n    vis[sx][sy]=1\n    q.append((sx,sy,0))\nwhile q:\n    x,y,s = q.popleft()\n    R = s+(y-sy)\n    L = s-(y-sy)\n    if R<=2*r and L<=2*l:\n        ans+=1\n\n    for dx,dy in move:\n        i,j = x+dx, y+dy\n        if safe(i, j):\n            vis[i][j]=1\n            if dx==0:\n                q.append((i,j,s+1))\n            else:\n                q.appendleft((i,j,s))\n            \n\nprint(ans)\n", "from collections import deque\n\ndef put():\n    return list(map(int, input().split()))\ndef safe(i,j):\n    return i>=0 and j>=0 and i<n and j<m and vis[i][j]==0 and mat[i][j]=='.'\n\nn,m = put()\nsx,sy = put()\nl,r = put()\nsx,sy = sx-1,sy-1\nmat = [list(input()) for _ in range(n)]\n\nvis = [[0]*m for _ in range(n)]\nq = deque()\nmove = [(-1,0), (1,0), (0,-1), (0,1)]\nans  = 0\n\nif safe(sx,sy):\n    vis[sx][sy]=1\n    q.append((sx,sy,0))\nwhile q:\n    x,y,s = q.popleft()\n    R = s+(y-sy)\n    L = s-(y-sy)\n    if R<=2*r and L<=2*l:\n        ans+=1\n\n    for dx,dy in move:\n        i,j = x+dx, y+dy\n        if safe(i, j):\n            vis[i][j]=1\n            if dx==0:\n                q.append((i,j,s+1))\n            else:\n                q.appendleft((i,j,s))\n            \n\nprint(ans)\n", "from collections import deque\nn, m = list(map(int, input().split()))\nsx, sy = list(map(int, input().split()))\nx, y = list(map(int, input().split()))\nsmap = [input() for i in range(n)]\n\n\nmp = [[-1] * m for i in range(n)]\n\n\nsx, sy = sx - 1, sy - 1\nmp[sx][sy] = 0\nans = 0\n\nq = deque()\n\nq.append((sx, sy))\n\n\ndef move(px, py, s, left):\n  if (px >= 0 and px < n and py >= 0 and py < m):\n    if (smap[px][py] == '.' and mp[px][py] == -1):\n      mp[px][py] = s\n      if left:\n        q.appendleft((px, py))\n      else:\n        q.append((px, py))\n\n\n\nwhile q:\n  px, py = q.popleft()\n  s = mp[px][py]\n  #print(s)\n  #print(s + py - r)\n  #print(s - py + r)\n  #print(s + py - r <= y * 2)\n  #print(s - py + r <= x * 2)\n  #print(x, y)\n  #return\n  ans += s + py - sy <= y * 2 and s - py + sy <= x * 2\n  \n  move(px + 1, py, s, left=True)\n  move(px - 1, py, s, left=True)\n  move(px, py + 1, s + 1, left=False)\n  move(px, py - 1, s + 1, left=False)\n  \nprint(ans)\n", "from collections import deque\nn,m = [int(x) for x in input().split()]\nx,y = [int(x) for x in input().split()]\nleft,right = [int(x) for x in input().split()]\ns=[]\nd=[None]*2007\nans=0\nfor i in range(0,2007):\n    d[i]=[]\n    for j in range(0,2007):\n        d[i].append(0)\n\nfor i in range(0,n):\n    s.append(input())\n\nq = deque()\n\nq.append([x-1,y-1,left,right])\n\nwhile(len(q)):\n    v = q[0]\n    q.popleft()\n    \n    if(v[0]<0 or v[0]>=n or v[1]<0 or v[1]>=m or d[v[0]][v[1]]==1 or v[2]<0 or v[3]<0 or s[v[0]][v[1]]=='*'): continue\n    \n    d[v[0]][v[1]]=1\n    \n    q.appendleft([v[0]+1,v[1],v[2],v[3]])\n    q.appendleft([v[0]-1,v[1],v[2],v[3]])\n    q.append([v[0],v[1]+1,v[2],v[3]-1])\n    q.append([v[0],v[1]-1,v[2]-1,v[3]])\n       \n   \n    \n    \nfor i in range(0,n):\n    for j in range(0,m):\n        ans+=d[i][j]\n\nprint(ans)\n", "from collections import deque\nn,m = [int(x) for x in input().split()]\nx,y = [int(x) for x in input().split()]\nleft,right = [int(x) for x in input().split()]\ns=[]\nans=0\nd=[None]*2007\nfor i in range(0,2007):\n    d[i]=[0 for j in range(0,2007)]\n\nfor i in range(0,n):\n    s.append(input())\n\nq = deque()\n\nq.append([x-1,y-1,left,right])\n\nwhile(len(q)):\n    v = q[0]\n    q.popleft()\n    \n    if(v[0]<0 or v[0]>=n or v[1]<0 or v[1]>=m or d[v[0]][v[1]]==1 or v[2]<0 or v[3]<0 or s[v[0]][v[1]]=='*'): continue\n    \n    d[v[0]][v[1]]=1\n    \n    q.appendleft([v[0]+1,v[1],v[2],v[3]])\n    q.appendleft([v[0]-1,v[1],v[2],v[3]])\n    q.append([v[0],v[1]+1,v[2],v[3]-1])\n    q.append([v[0],v[1]-1,v[2]-1,v[3]])\n       \n   \n    \n    \nfor i in range(0,n):\n    for j in range(0,m):\n        ans+=d[i][j]\n\nprint(ans)\n"]