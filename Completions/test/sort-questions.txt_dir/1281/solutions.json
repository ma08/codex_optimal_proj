["from collections import defaultdict\nn, k = list(map(int, input().split()))\na = [0] + list(map(int, input().split()))\nh = defaultdict(int)\nfor i in range(n):\n\ta[i + 1] ^= a[i]\nfor i in range(n + 1):\n\th[min(a[i] ^ ((1 << k) - 1), a[i])] += 1\nans = 0\nfor x, t in list(h.items()):\n\ta = t // 2\n\tb = t - a\n\tans += a * (a - 1) // 2 + b * (b - 1) // 2\nans = (n * (n + 1)) // 2 - ans\nprint(ans)\n", "from math import *\n#n,k=map(int,input().split())\n#A = list(map(int,input().split()))\nn,k = map(int,input().split())\nans = [0] * n\n#^xor\nlul = 2**k - 1\nA = list(map(int,input().split()))\nans[0]  = A[0]\nfor j in range(1, n):\n    ans[j] = ans[j-1]^A[j]\n#print(ans)\nd = dict()\nfor j in range(n):\n    if ans[j] in d:\n        d[ans[j]]+=1;\n    else:\n        d[ans[j]] = 1\n#print(d)\nans =0\ndef huy(n):\n    return n*(n-1)//2\nfor j in d:\n    now = d[j]\n    #print(d[j],j)\n    xor = lul^j\n    cur = now\n\n    if xor in d :\n\n        now2 = d[xor]\n        #print(now,xor)\n        cur += now2\n\n\n\n        ans += huy(cur//2+cur%2)\n        ans+=huy(cur//2)\n        if j ==0:\n            ans+=2*(cur//2)\n    else:\n        if(j==0 or xor ==0):\n            ans+= 2*(cur//2)\n        ans += 2*huy(cur // 2 + cur % 2)\n        ans += 2*huy(cur // 2)\nprint(huy(n+1) - ans//2)", "def add(num):\n    if(num<=1):\n        return 0\n    return (num*(num-1))//2\n    \n    \nn,k=list(map(int,input().split()))\n\na=list(map(int,input().split()))\npre=[a[0]]\nbase=(2**(k))-1\nhb=2**(k-1)\nfor i in range(1,n):\n    pre.append(a[i]^pre[-1])\n    \ncnt=dict()\ncnt[0]=[0,0]\n\nfor i in range(n):\n    if(pre[i]>=hb):\n        if(base-pre[i] not in cnt):\n            cnt[base-pre[i]]=[0,0]\n        cnt[base-pre[i]][1]+=1\n    else:\n        if(pre[i] not in cnt):\n            cnt[pre[i]]=[0,0]\n        cnt[pre[i]][0]+=1\ncnt1=0\n#print(pre)\n#print(cnt)\nfor i in list(cnt.values()):\n    sum1=i[0]+i[1]\n    cnt1+=add(sum1//2)\n    cnt1+=add((sum1+1)//2)\ncnt1+=sum(cnt[0])//2\n#print(cnt1)\nprint((n*(n+1))//2 - cnt1)\n    \n    \n\n    \n", "from collections import defaultdict\nn,k = map(int,input().split())\narr = list(map(int,input().split()))\nxors = defaultdict(int)\nxors[0]=1\ncomp = (1<<k)-1\nans = n*(n+1)//2\nxor = 0\nfor a in arr:\n\txor^=a\n\tif xors[xor]>xors[comp^xor]:\n\t\txor^=comp\n\tans-=xors[xor]\n\txors[xor]+=1\nprint(ans)", "n, k = [int(i) for i in input().split()]\nd = dict()\nd[0] = 1\nx = 0\nfor i in [int(i) for i in input().split()]:\n    x ^= i\n    v = min(x, (1 << k) - x - 1)\n    if v not in list(d.keys()):\n        d[v] = 0\n    d[v] += 1\nans = 0\nfor k, v in list(d.items()):\n    c1 = v // 2\n    c2 = v - c1\n    ans += c1 * (c1 - 1) // 2 + c2 * (c2 - 1) // 2\nprint(n * (n - 1) // 2 + n - ans)\n", "n,k=list(map(int,input().split()))\narr=list(map(int,input().split()))\nnewarr=[0]\n\nfor num in arr:\n  newarr+=[newarr[-1]^num]\ndic={}\nfor num in newarr:\n  x=(min(num,2**k-1-num),max(num,2**k-1-num))\n  if x in dic:\n    dic[x]+=1\n  else:\n    dic[x]=1\nans=0\nfor elem in dic:\n  m=dic[elem]\n  half=m//2\n  ans+=half*(half-1)/2\n  half=m-half\n  ans+=half*(half-1)/2\nans=n*(n+1)/2-ans\nprint(int(ans))\n  \n    \n", "import collections\n\ndef __starting_point():\n    n,k = map(int, input().split())\n    a = list(map(int, input().split()))\n    p = 0\n    d = collections.Counter()\n    d[0] = 1\n    limit = 1 << (k-1)\n    mask = (1 << k) - 1\n    for i in range(n):\n        p ^= min(a[i], mask-a[i])\n        d[p] += 1\n\n    res = 0\n    for key in d:\n        i = d[key] // 2\n        j = d[key] - i\n        res += (i-1)*i//2 + (j-1)*j//2\n    res = n*(n+1)//2 - res\n    print(res)\n__starting_point()", "n,k=map(int,input().split())\na=list(map(int,input().split()))\nrunning=[0]\nfor i in range(n):\n    running.append(running[-1]^a[i])\nfor i in range(n+1):\n    if running[i]>=2**(k-1):\n        running[i]=2**k-1-running[i]\nrunning.sort()\nstreaks=[]\ncurr=1\nfor i in range(n):\n    if running[i]==running[i+1]:\n        curr+=1\n    else:\n        streaks.append(curr)\n        curr=1\nstreaks.append(curr)\nbad=0\nfor guy in streaks:\n    if guy%2==0:\n        bad+=(guy//2)*(guy//2-1)\n    else:\n        bad+=(guy//2)**2\nprint((n*(n+1))//2-bad)", "[n, k] = [int(t) for t in input().split(' ')]\na = [int(t) for t in input().split(' ')]\n\nmask = (1 << k) - 1\n\ndef c2(n):\n    return (n * (n - 1)) // 2\n\ncount = {}\ncount[0] = 1\n\np = 0\nfor i in a:\n    p = p ^ i\n    p = min(p, p ^ mask)\n    count[p] = count.get(p, 0) + 1\n\nres = 0\nfor [_, cnt] in list(count.items()):\n    k = cnt // 2\n    res += c2(k) + c2(cnt - k)\n\nprint(c2(n + 1) - res)\n", "# https://codeforces.com/contest/1054/problem/D\nn, k = list(map(int, input().split()))\na    = list(map(int, input().split()))\np    =  [0] * (n+1)\nbase = (1<<k)-1 \n\ndef kC2(k):\n    return (k-1) * k// 2\n    \nd = {}    \nfor i in range(1, n+1):\n    p[i] = p[i-1] ^ a[i-1]\n    p[i] = min(p[i] , p[i] ^ base)\n\n    if p[i] not in d:\n        d[p[i]] = 0 \n    d[p[i]] += 1\n\nif 0 not in d:\n    d[0] = 0\nd[0] += 1\n\nans   = n * (n+1) // 2\nminus = 0\n\nfor k, v in list(d.items()):\n    minus += kC2(v // 2) + kC2(v - v // 2)\n        \nprint(ans - minus)    \n\n#6 3\n#1 4 4 7 3 4\n", "'''input\n3 2\n1 3 0\n'''\ndef solve():\n\tn,k = list(map(int,input().split()))\n\tflipVal = (1<<k)-1\n\tl = list(map(int,input().split()))\n\tD = {}\n\tD[0]=1\n\tfor i in range(1,n):\n\t\tl[i]^=l[i-1]\n\tfor i in range(0,n):\n\t\tl[i]=min(l[i],l[i]^flipVal)\n\t\tif l[i] in D:\n\t\t\tD[l[i]]+=1\n\t\telse:\n\t\t\tD[l[i]]=1\n\t#print(l)\n\ttotal = n*(n+1)//2\n\tbad = 0\n\tfor i in D:\n\t\ttemp = D[i]\n\t\ttot = temp//2\n\t\tbad+= tot*(tot-1)//2\n\t\ttot = temp - tot\n\t\tbad+= tot*(tot-1)//2\n\tprint(total-bad)\n\treturn\nt = 1\n#t = int(input())\nwhile t>0:\n\tt-=1\n\tsolve()", "from collections import defaultdict\nn,k = map(int,input().split())\narr = list(map(int,input().split()))\nxors = defaultdict(int)\nxors[0]=1\ncomp = (1<<k)-1\nans = n*(n+1)//2\nxor = 0\nfor a in arr:\n\txor^=a\n\tif xors[xor]>xors[comp^xor]:\n\t\txor^=comp\n\tans-=xors[xor]\n\txors[xor]+=1\nprint(ans)"]