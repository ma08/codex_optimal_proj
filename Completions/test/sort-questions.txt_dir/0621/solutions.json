["import re\nimport itertools\nfrom collections import Counter\n\nclass Task:\n    a = []\n    answer = []\n\t\n    def getData(self):\n        input()\n        self.a = [int(x) for x in input().split(\" \")]\n\t\n    def solve(self):\n        currentFolderCounter = 0\n        badDaysCounter = 0\n        for x in self.a:\n            if x >= 0:\n                currentFolderCounter += 1\n            elif badDaysCounter <= 1:\n                currentFolderCounter += 1\n                badDaysCounter += 1\n            else:\n                self.answer += [currentFolderCounter]\n                currentFolderCounter = 1\n                badDaysCounter = 1\n        if currentFolderCounter > 0:\n            self.answer += [currentFolderCounter]\n\n    def printAnswer(self):\n        print(len(self.answer))\n        print(re.sub('[\\[\\],]', '', str(self.answer)))\n\ntask = Task();\ntask.getData();\ntask.solve();\ntask.printAnswer();\n", "p, x, y, n, t = [], 0, 0, int(input()), list(map(int, input().split()))\nfor i in range(n):\n    if t[i] < 0: x += 1\n    if x == 3:\n        p.append(i - y)\n        x = 1\n        y = i\n    \np.append(n - y)\nprint(len(p))\nprint(' '.join(str(i) for i in p))", "def readln(): return tuple(map(int, input().split()))\n\nn, = readln()\ncnt = al = 0\nans = []\nfor a in readln():\n    if cnt == 2 and a < 0:\n        ans.append(al)\n        cnt = al = 0\n    al += 1\n    cnt += a < 0\nans.append(al)\nprint(len(ans))\nprint(*ans)\n", "n = int(input())\na = list(map(int, input().split()))\nb = []\ncur = 0\nwhile cur < n:\n    cnt = 0\n    size = 0\n    while cur < n and cnt < 3:\n        if a[cur] < 0:\n            cnt += 1\n        cur += 1\n        size += 1\n    if cnt == 3:\n        cur -= 1\n        size -= 1\n    b.append(size)\n\nprint(len(b))\nprint(\" \".join(map(str, b)))", "__author__ = 'Alex'\nn = int(input())\na = [int(i) for i in input().split()]\ncnt1, cnt2 = [0] * 2\nans = []\nfor i in a:\n    if i < 0:\n        if cnt2 > 1:\n            ans.append(cnt1)\n            cnt1 = cnt2 = 0\n        cnt2 += 1\n    cnt1 += 1\nif cnt1 > 0:\n    ans.append(cnt1)\nprint(len(ans))\nprint(' '.join([str(i) for i in ans]))", "\n\nimport sys\nimport math\n\nn = int(sys.stdin.readline())\nan = [int(x) for x in (sys.stdin.readline()).split()]\n\nres = 0\nv = []\np = 0\nk = 0\nfor i in an:\n\tif(i < 0):\n\t\tif(p < 2):\n\t\t\tp += 1\n\t\telse:\n\t\t\tp = 1\n\t\t\tv.append(str(k))\n\t\t\tres += 1\n\t\t\tk = 0\n\tk += 1\n\t\nif(k != 0):\n\tres += 1\n\tv.append(str(k))\n\t\nprint(res)\nprint(\" \".join(v))\n", "n = int(input())\nfolders = []\nloss_count = 0\nday_count = 0\nfor x in map(int, input().split()):\n    if x < 0:\n        if loss_count == 2:\n            folders.append(day_count)\n            loss_count = 1\n            day_count = 0\n        else:\n            loss_count += 1\n    day_count += 1\nfolders.append(day_count)\nprint(len(folders))\nprint(' '.join(map(str, folders)))\n", "n = int(input())\nl = list(map(int,input().split()))\nfolders = [0]\ncur = 0\nloss = 0\nfor i in range(n):\n    if l[i] < 0 :\n        loss += 1\n        if loss == 3 :\n            folders.append(0)\n            loss = 1\n            cur += 1\n    #print(i,l[i],cur,loss)\n    folders[cur] += 1\n\nprint(len(folders))\nprint(*folders)\n", "P=print\nI=input\nI()\na=b=0\nt=[]\nfor x in map(int,I().split()):\n\tif x<0:\n\t\tif b==2:t+=[a];b=1;a=0\n\t\telse:b+=1\n\ta+=1\nif a:t+=[a]\nP(len(t))\nfor x in t:P(x,end=' ')", "n = input()\ns = input().split(\" \")\nrugi, jumlah, berkas = 0, 0, []\nfor j, i in enumerate(s):\n    if int(i) < 0:\n        rugi += 1\n        if rugi == 3:\n            rugi = 1\n            berkas.append(str(jumlah))\n            jumlah = 1\n        else:\n            jumlah += 1\n    else:\n        jumlah += 1\n    if j == len(s)-1:\n        berkas.append(str(jumlah))\nprint(len(berkas), \" \".join(berkas), sep='\\n')\n", "n = int(input())\nprofit = [int(x) for x in input().split(' ')]\n\ndaysInFolders = [0]\nfolders = 1\nbadDays = 0\n\nfor elem in profit:\n\tif elem < 0:\n\t\tif badDays >= 0 and badDays < 2:\n\t\t\tbadDays += 1\n\t\t\tdaysInFolders[-1] += 1\n\t\telif badDays == 2:\n\t\t\tdaysInFolders.append(1)\n\t\t\tfolders += 1\n\t\t\tbadDays = 1\n\t\telse:\n\t\t\tbadDays += 1\n\t\t\tdaysInFolders[-1] += 1\n\telse:\n\t\tdaysInFolders[-1] += 1\n\t\t\nprint(folders)\nprint(' '.join([str(x) for x in daysInFolders]))\n", "N = int( input() )\nA = list( map( int, input().split() ) )\n\nans = []\nptr = 0\nwhile ptr < N:\n  s = 0\n  nxt = ptr\n  while nxt < N and s + ( A[ nxt ] < 0 ) <= 2:\n    s += ( A[ nxt ] < 0 )\n    nxt += 1\n  ans.append( nxt - ptr )\n  ptr = nxt\n\nprint( len( ans ) )\nprint( * ans )\n", "P=print\nI=input\nI()\na=b=0\nt=[]\nfor x in map(int,I().split()):\n\tif x<0:\n\t\tif b==2:t+=[a];b=1;a=0\n\t\telse:b+=1\n\ta+=1\nif a:t+=[a]\nP(len(t))\nfor x in t:P(x,end=' ')", "n = int(input())\narr = list(map(int, input().split()))\n\ncounter_negative = 0\ncurrent = 0\n\nres = []\n\nfor a in arr:\n    current += 1\n    if a < 0:\n        counter_negative += 1\n\n    if counter_negative == 3:\n        res.append(current-1)\n        current = 1\n        counter_negative = 1\nres.append(current)\n\nprint(len(res))\nfor r in res:\n    print(r, end=' ')\n", "P=print\nI=input\nI()\na=b=0\nt=[]\nfor x in map(int,I().split()):\n\tif x<0:\n\t\tif b==2:t+=[a];b=1;a=0\n\t\telse:b+=1\n\ta+=1\nif a:t+=[a]\nP(len(t))\nfor x in t:P(x,end=' ')\n", "P=print\nI=input\nI()\na=b=0\nt=[]\nfor x in map(int,I().split()):\n\tif x<0:\n\t\tif b==2:t+=[a];b=1;a=0\n\t\telse:b+=1\n\ta+=1\nif a:t+=[a]\nP(len(t))\nfor x in t:P(x,end=' ')\n", "P=print\nI=input\nI()\na=b=0\nt=[]\nfor x in map(int,I().split()):\n\tif x<0:\n\t\tif b==2:t+=[a];b=1;a=0\n\t\telse:b+=1\n\ta+=1\nif a:t+=[a]\nP(len(t))\nfor x in t:P(x,end=' ')\n", "P=print\nI=input\nI()\na=b=0\nt=[]\nfor x in map(int,I().split()):\n\tif x<0:\n\t\tif b==2:t+=[a];b=1;a=0\n\t\telse:b+=1\n\ta+=1\nif a:t+=[a]\nP(len(t))\nfor x in t:P(x,end=' ')\n", "P=print\nI=input\nI()\na=b=0\nt=[]\nfor x in map(int,I().split()):\n\tif x<0:\n\t\tif b==2:t+=[a];b=1;a=0\n\t\telse:b+=1\n\ta+=1\nif a:t+=[a]\nP(len(t))\nfor x in t:P(x,end=' ')\n", "P=print\nI=input\nI()\na=b=0\nt=[]\nfor x in map(int,I().split()):\n\tif x<0:\n\t\tif b==2:t+=[a];b=1;a=0\n\t\telse:b+=1\n\ta+=1\nif a:t+=[a]\nP(len(t))\nfor x in t:P(x,end=' ')\n", "P=print\nI=input\nI()\na=b=0\nt=[]\nfor x in map(int,I().split()):\n\tif x<0:\n\t\tif b==2:t+=[a];b=1;a=0\n\t\telse:b+=1\n\ta+=1\nif a:t+=[a]\nP(len(t))\nfor x in t:P(x,end=' ')\n", "P=print\nI=input\nI()\na=b=0\nt=[]\nfor x in map(int,I().split()):\n\tif x<0:\n\t\tif b==2:t+=[a];b=1;a=0\n\t\telse:b+=1\n\ta+=1\nif a:t+=[a]\nP(len(t))\nfor x in t:P(x,end=' ')\n", "n = int(input())\na = list(map(int, input().split()))\nk = 0\nfails = 0\nans = []\nfor i in range(n):\n    if a[i] < 0 and fails == 2:\n        ans.append(k)\n        k = 1\n        fails = 1\n    else:\n        k += 1\n        fails += (a[i] < 0)\nif sum(ans) < n:\n    ans.append(k)\nprint(len(ans))\nprint(\" \".join(map(str, ans)))"]