["n, A, C = list(map(int, input().split()))\n\ndef Ro(x, y):\n    return A * x - y + C\n \nhuh = []\n \nfor i in range(n):\n    z, x, y = list(map(int, input().split()))\n    huh.append((Ro(x + z, z * A + y), x))\nhuh = sorted(huh)\nanss = 0\nc1 = 0\nc2 = 0\nprev = (-9999999999999, -999999999999999)\ng = []\n\nhuh.append((-9999999999999, -999999999999999))\n#print(huh)\nfor huhh in huh:\n    if huhh[0] != prev[0]:\n        g.append(c1)\n        #print(g)\n        for j in g:\n            anss += (c2 - j) * j\n        g = []\n        c1 = 1\n        c2 = 1\n        prev = (huhh[0], huhh[1])\n        continue\n    c2 += 1\n    if huhh[1] != prev[1]:\n        g.append(c1)\n        c1 = 0\n        prev = (huhh[0], huhh[1])\n    c1 += 1\nprint(anss)\n", "#!/usr/bin/env python3\n\n[n, a, b] = list(map(int, input().strip().split()))\nbis = [tuple(map(int, input().strip().split())) for _ in range(n)]\ndis = [(a * Vx - Vy, Vx) for x, Vx, Vy in bis]\n\ndis.sort()\n\nres = 0\ndprev = dis[0][0] - 1\nvprev = 0\ndcount = 0\nvcount = 0\nfor di, vi in dis:\n\tif di != dprev:\n\t\tres += dcount * (dcount - 1)\n\t\tres -= vcount * (vcount - 1)\n\t\tdcount = 1\n\t\tvcount = 1\n\t\tdprev = di\n\t\tvprev = vi\n\telse:\n\t\tdcount += 1\n\t\tif vi != vprev:\n\t\t\tres -= vcount * (vcount - 1)\n\t\t\tvcount = 1\n\t\t\tvprev = vi\n\t\telse:\n\t\t\tvcount += 1\nres += dcount * (dcount - 1)\nres -= vcount * (vcount - 1)\n\nprint (res)\n", "import atexit\nimport io\nimport sys\n\n# Buffering IO\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).__next__\n_OUTPUT_BUFFER = io.StringIO()\nsys.stdout = _OUTPUT_BUFFER\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n    \n\ndef main():\n    n, a, b = [int(x) for x in input().split()]\n    dc = {}\n    for i in range(n):\n        x, vx, vy = [int(x) for x in input().split()]\n        nx = x + vx\n        ny = a*x+b + vy\n        dd = a*nx - ny + b\n        if dd not in dc:\n            dc[dd] = {}\n        if (vx,vy) not in dc[dd]:\n            dc[dd][(vx,vy)] = 0\n        dc[dd][(vx,vy)] += 1\n    \n    tot = 0\n    for v,k in list(dc.items()):\n        tt = 0\n        pp =0\n        for _,cc in list(k.items()):\n            tt -= cc * (cc+1) // 2\n            pp += cc\n        tt += pp * (pp+1) // 2\n        tot += tt*2\n    print(tot)\n        \n\n    \ndef __starting_point():\n    main()\n\n__starting_point()", "n, a, b = map(int, input().split())\nghosts = [(vx, vy) for x, vx, vy in (map(int, input().split()) for i in range(n))]\nspeeds = {}\nfor vx, vy in ghosts:\n    vl = a * vx - vy\n    k = vx + a * vy\n    ss = speeds.setdefault(vl, {})\n    ss[k] = ss.get(k, 0) + 1\n\nresult = 0\nfor vl, ss in speeds.items():\n    group_size = sum(ss.values())\n    for sss in ss.values():\n        result += sss * (group_size - sss)\nprint(result)", "import atexit\nimport io\nimport sys\n\n# Buffering IO\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).__next__\n_OUTPUT_BUFFER = io.StringIO()\nsys.stdout = _OUTPUT_BUFFER\n\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n\n\ndef main():\n    n, a, b = [int(x) for x in input().split()]\n    dc = {}\n    for i in range(n):\n        x, vx, vy = [int(x) for x in input().split()]\n        nx = x + vx\n        ny = a * x + b + vy\n        dd = a * nx - ny + b\n        if dd not in dc:\n            dc[dd] = {}\n        if (vx, vy) not in dc[dd]:\n            dc[dd][(vx, vy)] = 0\n        dc[dd][(vx, vy)] += 1\n\n    tot = 0\n    for v, k in dc.items():\n        tt = 0\n        pp = 0\n        for _, cc in k.items():\n            tt -= cc * (cc + 1) // 2\n            pp += cc\n        tt += pp * (pp + 1) // 2\n        tot += tt * 2\n    print(tot)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "import atexit\nimport io\nimport sys\n\n# Buffering IO\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).__next__\n\ndef main():\n    n, a, b = [int(x) for x in input().split()]\n    dc = {}\n    for i in range(n):\n        x, vx, vy = [int(x) for x in input().split()]\n        nx = x + vx\n        ny = a * x + b + vy\n        dd = a * nx - ny + b\n        if dd not in dc:\n            dc[dd] = {}\n        if (vx, vy) not in dc[dd]:\n            dc[dd][(vx, vy)] = 0\n        dc[dd][(vx, vy)] += 1\n\n    tot = 0\n    for v, k in dc.items():\n        tt = 0\n        pp = 0\n        for _, cc in k.items():\n            tt -= cc * (cc + 1) // 2\n            pp += cc\n        tt += pp * (pp + 1) // 2\n        tot += tt * 2\n    print(tot)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "from sys import stdin\nrd = lambda: list(map(int, input().split()))\ng = lambda x, i: x.get(i, 0)\nn, a, b = rd()\nc, d = {}, {}\nr = 0\nfor z in range(n):\n    _, x, y = rd()\n    i, j = a * x - y, (x, y)\n    r += g(c, i) - g(d, j)\n    c[i] = g(c, i) + 1\n    d[j] = g(d, j) + 1\nprint(2 * r)\n", "\ndef main():\n    n, a, b = [int(part) for part in input().split()]\n    ghosts = []\n    for i in range(n):\n        ghosts.append([int(part) for part in input().split()])\n\n    cnt = dict()\n    vcnt = dict()\n    for (x, vx, vy) in ghosts:\n        if (vx, vy) in vcnt:\n            vcnt[(vx, vy)] += 1\n        else:\n            vcnt[(vx, vy)] = 1\n\n        tmp = vy - a * vx\n        if tmp in cnt:\n            cnt[tmp] += 1\n        else:\n            cnt[tmp] = 1\n\n    ans = 0\n    for (x, vx, vy) in ghosts:\n        tmp = vy - a * vx\n        ans += cnt[tmp] - vcnt[(vx, vy)]\n\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from collections import Counter\nn,a,b=[int(_) for _ in input().split()]\ns,s1=Counter(),Counter();ans=0\nfor i in range(n):\n\tx,vx,vy=[int(_) for _ in input().split()]\n\ttmp=vy-a*vx\n\tans+=s[tmp]-s1[(vx,vy)]\n\ts[tmp]+=1\n\ts1[(vx,vy)]+=1\nprint(ans*2)", "from collections import Counter\nn,a,b=map(int,input().split())\ns,s1=Counter(),Counter();ans=0\nfor i in range(n):\n\tx,vx,vy=map(int,input().split())\n\ttmp=vy-a*vx\n\tans+=s[tmp]-s1[(vx,vy)]\n\ts[tmp]+=1\n\ts1[(vx,vy)]+=1\nprint(ans*2)", "from collections import Counter\nn,a,b=map(int,input().split())\ns=Counter();ans=0\nfor i in range(n):\n\tx,vx,vy=map(int,input().split())\n\ttmp=vy-a*vx\n\tans+=s[tmp]-s[(vx,vy)]\n\ts[tmp]+=1;s[(vx,vy)]+=1\nprint(ans*2)", "from collections import defaultdict\n\nn, a, b = map(int, input().split())\n\nres = defaultdict(lambda :0)\nt = defaultdict(lambda :0)\n\nans = 0\n\nfor _ in range(n):\n    k, x, y = map(int, input().split())\n    ans += res[a*x-y] - t[(x,y)]\n    res[a*x-y]+=1\n    t[(x,y)]+=1\n\nprint(ans*2)", "from collections import Counter\nfrom sys import stdin\nn,a,b=map(int,stdin.readline().split())\ns=Counter();ans=0\nfor i in range(n):\n\tx,vx,vy=map(int,stdin.readline().split())\n\ttmp=vy-a*vx\n\tans+=s[tmp]-s[(vx,vy)]\n\ts[tmp]+=1;s[(vx,vy)]+=1\nprint(ans*2)", "from collections import Counter\nfrom sys import stdin\nn,a,b=map(int,stdin.readline().split())\ns=Counter();ans=0\nfor i in range(n):\n\tx,vx,vy=map(int,stdin.readline().split())\n\ttmp=vy-a*vx\n\tans+=s[tmp]-s[(vx,vy)]\n\ts[tmp]+=1;s[(vx,vy)]+=1\nprint(ans*2)", "# http://codeforces.com/contest/975/problem/D\nn, a, b = (int(x) for x in input().split())\n\nmarks = 0\nk = {}\nv = {}\nfor i in range(0, n):\n    x, v1, v2 = [int(x) for x in input().split()]\n    ki = v2 - a * v1\n    vi = (v1, v2)\n\n    if ki in k:\n        k[ki] += 1\n    else:\n        k[ki] = 1\n\n    if vi in v:\n        v[vi] += 1\n    else:\n        v[vi] = 1\n\n    marks += k[ki] - v[vi]\n\nprint(marks * 2)", "import bisect;\nn, a, b = map(int, input().split(' '));\nx=[0]*n;\nvx=[0]*n;\nvy=[0]*n;\nfor i in range(n):\n    x[i], vx[i], vy[i]=map(int, input().split(' '));\n#y=ax y-ax=0 (x, y)* (-a, 1)=0 (-a, 1) - \u0432\u0435\u043a\u0442\u043e\u0440 \u043d\u043e\u0440\u043c\u0430\u043b\u0438\nntypes=dict();\nfor i in range(n):\n    ntype=-a*vx[i]+1*vy[i];\n    currSet=ntypes.get(ntype, set());\n    currSet.add(i);\n    ntypes[ntype]=currSet;\nresult=0;\nfor key in ntypes.keys():\n    currSet=ntypes[key];\n    currLen=len(currSet);\n    vtypes=dict();\n    for i in currSet:\n        vtype=vx[i]*1+vy[i]*a;\n        vtypes[vtype]=vtypes.get(vtype, 0)+1;\n    for key in vtypes.keys():\n        curr=vtypes[key];\n        result+=curr*(currLen-curr)\nprint(result);", "#!/usr/bin/env python3\n\nfrom collections import Counter\n\n[n, a, b] = list(map(int, input().strip().split()))\nbis = [tuple(map(int, input().strip().split())) for _ in range(n)]\ndis = [(a * Vx - Vy, Vx) for x, Vx, Vy in bis]\n\ndis.sort()\n\ndef count(d):\n\treturn sum((v * k * (k - 1) for k, v in d))\n\ndef filt(it):\n\treturn list(Counter(list(Counter(it).values())).items())\n\nc_plus = count(filt((x for x, y in dis)))\nc_minus = count(filt(dis))\n\nprint(c_plus - c_minus)\n", "import sys\nimport math\nimport bisect\nimport itertools\nfrom collections import Counter\n\nd = {}\ns = {}\nn, a, b = list(map(int,sys.stdin.readline().strip().split(' ')))\nfor n0 in range(n):\n\tx,vxi,vyi = list(map(int,sys.stdin.readline().strip().split(' ')))\n\tcurr = a*vxi - vyi\n\tif curr in d:\n\t\tif (vxi,vyi) in d[curr]:\n\t\t\td[curr][(vxi,vyi)] += 1\n\t\telse:\n\t\t\td[curr][(vxi,vyi)] = 1\n\t\ts[curr] += 1\n\telse:\n\t\td[curr] = {(vxi,vyi):1}\n\t\ts[curr] = 1\n\nans = 0\nfor k,v in list(d.items()):\n\tfor vxy,q in list(v.items()):\n\t\tans += (s[k] - q)*q\nprint(ans)\n\n\n\t\n", "3\n\nfrom sys import stdin\nfrom itertools import groupby\n\n\ndef f(line):\n    t = line.split()\n    return tuple(int(x) for x in t[1:])\n\n\nn, a, b = [int(x) for x in stdin.readline().split()]\npoints = sorted(f(line) for line in stdin.readlines()[:n])\ngroups = [[k, len(tuple(g))] for k, g in groupby(points)]\ntotal = {}\nfor (x, y), cnt in groups:\n    if y - x * a not in total:\n        total[y - x * a] = 0\n    total[y - x * a] += cnt\nans = 0\nfor (x, y), cnt in groups:\n    if y - x * a not in total:\n        continue\n    ans += cnt * (total[y - x * a] - cnt)\nprint(ans)\n"]