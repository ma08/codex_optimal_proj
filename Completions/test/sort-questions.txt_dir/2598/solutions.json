["from collections import deque\n \nn, m = list(map(int, input().split()))\nadj = [[] for i in range(n)]\nfor i in range(m):\n    u, v, c = input().split()\n    u, v = int(u)-1, int(v)-1\n    adj[u].append((v, c))\n    adj[v].append((u, c))\n \nvisited = S = T = None\n \ndef bfs(i, k):\n    q = deque([(i, 0)])\n    while q:\n        u, p = q.pop()\n \n        if visited[u] >= 0:\n            if visited[u] == p: continue\n            else: return False\n \n        visited[u] = p\n        if p: S.append(u)\n        else: T.append(u)\n \n        for v, c in adj[u]:\n            nxt = p if c == k else p^1\n            q.appendleft((v, nxt))\n \n    return True\n \ndef solve(k):\n    nonlocal visited, S, T\n    visited = [-1]*n\n    res = []\n    for i in range(n):\n        if visited[i] < 0:\n            S, T = [], []\n            if not bfs(i, k):\n                return [0]*(n+1)\n            else:\n                res.extend(S if len(S) < len(T) else T)\n    return res\n \nres1 = solve(\"R\")\nres2 = solve(\"B\")\n \nif min(len(res1), len(res2)) > n:\n    print(-1)\nelse:\n    print(min(len(res1), len(res2)))\n    print(\" \".join([str(x+1) for x in res1 if len(res1) < len(res2) else res2]))\n"]