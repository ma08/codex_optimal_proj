["def main():\n\ts, k = map(int, input().split())\n\tn, m = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tb = list(map(int, input().split()))\n\tif (a[n - 1] < b[-m]):\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n\nmain()", "n,m=map(int,input().split())\nk,p=map(int,input().split())\nx=0\ny=0\na=input().split()\nx=int(a[k-1])\nb=input().split()\ny=int(b[m-p])\nif x<y:print(\"YES\")\nelse:print(\"NO\")", "na, nb = list(map(int, input().split()))\nk, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nmax = a[k - 1]\nmin = b[nb - m]\nif max < min:\n    print('YES')\nelse:\n    print('NO')\n", "na, nb = map(int, input().split())\nk, m = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nif a[k - 1] < b[nb - m]:\n    print('YES')\nelse:\n    print('NO')", "s=input()\nk,m=[int(x) for x in input().split()]\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n\nif a[k-1]<b[-m]:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "#In the name of Allah\n\nfrom sys import stdin, stdout\ninput = stdin.readline\n\nn, m = list(map(int, input().split()))\nK, M = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nstdout.write(\"YES\" if a[K - 1] < b[-M] else \"NO\")\n", "na,nb=list(map(int,input().split()))\nk,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nprint(\"YES\" if a[k-1]<b[-m] else \"NO\")\n", "n1, n2 = map(int, input().split())\nm, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nif a[m - 1] < b[-k]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "na, nb= [int(i) for i in input().split()]\nk, m= [int(i) for i in input().split()]\n\na= [int(i) for i in input().split()]\nb= [int(i) for i in input().split()]\n\nif a[k-1]< b[-m]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "na,nb=map(int,input().split())\nk,m=map(int,input().split())\nnas=map(int,input().split())\nnbs=map(int,input().split())\nnas=list(sorted(nas))\nnbs=list(sorted(nbs))\nprint(\"YES\" if nas[k-1]<nbs[nb-1-(m-1)] else \"NO\")", "input()\nk, m = [int(i) for i in input().split(' ')]\na = [int(i) for i in input().split(' ')]\nb = [int(i) for i in input().split(' ')]\n\n\nprint(\"YES\" if a[k-1] < b[-m] else \"NO\")\n", "(na, nb) = map(int, input().split())\n(k, m) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(\"YES\" if a[k - 1] < b[-m] else \"NO\")", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,copy\nfrom itertools import chain, dropwhile, permutations, combinations\nfrom collections import defaultdict, deque\n\n# Guide:\n#   1. construct complex data types while reading (e.g. graph adj list)\n#   2. avoid any non-necessary time/memory usage\n#   3. avoid templates and write more from scratch\n#   4. switch to \"flat\" implementations\n\ndef VI(): return list(map(int,input().split()))\ndef I(): return int(input())\ndef LIST(n,m=None): return [0]*n if m is None else [[0]*m for i in range(n)]\ndef ELIST(n): return [[] for i in range(n)]\ndef MI(n=None,m=None): # input matrix of integers\n    if n is None: n,m = VI()\n    arr = LIST(n)\n    for i in range(n): arr[i] = VI()\n    return arr\ndef MS(n=None,m=None): # input matrix of strings\n    if n is None: n,m = VI()\n    arr = LIST(n)\n    for i in range(n): arr[i] = input()\n    return arr\ndef MIT(n=None,m=None): # input transposed matrix/array of integers\n    if n is None: n,m = VI()\n    a = MI(n,m)\n    arr = LIST(m,n)\n    for i,l in enumerate(a):\n        for j,x in enumerate(l):\n            arr[j][i] = x\n    return arr\n\n\ndef run(na,nb,k,m,a,b):\n    if a[k-1] < b[nb-m]:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n\ndef main(info=0):\n    na,nb = VI()\n    k,m = VI()\n    a = VI()\n    b = VI()\n    run(na,nb,k,m,a,b)\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n_a, n_b = [int(i) for i in input().split()]\nk, m = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\nif a[k - 1] < b[n_b - m]:\n    print('YES')\nelse:\n    print('NO')", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport time\n\n#   = input()\n#   = int(input())\n\n#() = (i for i in input().split())\n#   = [i for i in input().split()]\n\n(na, nb) = (int(i) for i in input().split())\n(k, m)   = (int(i) for i in input().split())\nA        = [int(i) for i in input().split()]\nB        = [int(i) for i in input().split()]\n\nstart = time.time()\n\nif A[k-1] < B[len(B)-m]:\n    print('YES')\nelse:\n    print('NO')\n\nfinish = time.time()\n#print(finish - start)\n", "3\n\nNa, Nb = map(int, input().split())\nk, m = map(int, input().split())\n\nassert 1 <= k <= Na\nassert 1 <= m <= Nb\n\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nassert len(a) == Na\nassert len(b) == Nb\n\nprint('YES' if a[k-1] < b[-m] else 'NO')", "y = input()\nk, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nif a[k - 1] < b[-m]:\n    print('YES')\nelse:\n    print('NO')\n", "n, m = map(int, input().split())\nk, l = map(int, input().split())\nlst1 = list(map(int, input().split()))\nlst2 = list(map(int, input().split()))\nif lst1[k - 1] < lst2[m - l]:\n    print('YES')\nelse:\n    print('NO')", "n, m = list(map(int, input().split(\" \")))\nk, l = list(map(int, input().split(\" \")))\na =  input().split(\" \")\nb =  input().split(\" \")\nfor i in range (n):\n    a[i] = int(a[i])\nfor i in range (m):\n    b[i] = int(b[i])\n\nif a[k-1] < b[m-l]:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "n, m = [int(x) for x in input().split()]\nk, t = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\nif a[k - 1] < b[m - t]:\n    print('YES')\nelse:\n    print('NO')", "import sys\nimport os\ndef getin():\n    return list(map(int,input().split(' ')))\nna,nb=getin()\nk,m=getin()\na=getin()\nb=getin()\nif(sorted(a)[k-1]<sorted(b)[nb-m]):\n    print('YES')\nelse:\n    print('NO')", "a,b = input().split()\na=int(a)\nb=int(b)\nk,m=input().split()\nm=int(m)\nk=int(k)\nA=input().split()\nB=input().split()\nfor i in range(a):\n    A[i]=int(A[i])\nfor i in range(b):\n    B[i]=int(B[i])\n\nif(k<=a and A[k-1]<B[-m]):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"]