["n=int(input())\na=input().split()\nones=a.count(\"1\")\ntwos=n-ones\nif ones==0 or twos==0:\n    print(\" \".join(a))\nelse:\n    print(\"2 1\"+\" 2\"*(twos-1)+\" 1\"*(ones-1))", "import sys\ninput = sys.stdin.readline\n\nn=int(input())\nA=list(map(int,input().split()))\n\nfrom collections import Counter\ncounter=Counter(A)\n\nif counter[1]==0 or counter[2]==0:\n    print(*A)\n    return\n\nif counter[1]==1:\n    ANS=[2,1]\n    ANS+=[2]*(counter[2]-1)\n    print(*ANS)\n    return\n\nif counter[1]%2==0:\n    ANS=[2,1]\n    counter[2]-=1\n    counter[1]-=1\n\n    ANS+=[1]*(counter[1]-1)\n    ANS+=[2]*counter[2]\n    ANS+=[1]\n\n    print(*ANS)\n    return\n\nif counter[1]%2==1:\n    ANS=[2,1]\n    counter[2]-=1\n    counter[1]-=1\n\n    ANS+=[1]*counter[1]\n    ANS+=[2]*counter[2]\n\n    print(*ANS)\n    return\n\n\n    \n", "from collections import Counter\n\nn = int(input())\nc = Counter(list(map(int, input().split())))\n\nif c[1] == 0:\n\tprint('2 ' * c[2])\nelif c[2] == 0:\n\tprint('1 ' * c[1])\nelse:\n\tprint('2 1 ' + '2 ' * (c[2] - 1) + '1 ' * (c[1] - 1))", "import math\n#import random\n#import time\nr = lambda: int(input())\nra = lambda: [*list(map(int, input().split()))]\n\ndef s(a):\n    if a<=1: return False\n    else:\n        for i in range(2, int(math.sqrt(a))+1):\n            if a%i==0:\n                return False\n        return True\n\nn = r()\na = ra()\n#a = [random.choice([1,2]) for i in range(n)]\n#ti = time.time()\no = [i for i in a if i == 1]\no = len(o)\nt = len(a)-o\nb = 0\nan = []\nwhile o!=0 and t!=0:\n    if s(b+1):\n        an+=[1]\n        o-=1\n        b+=1\n    else:\n        an+=[2]\n        t-=1\n        b+=2\nif o==0:\n    a = [2]*t\nelse:\n    a = [1]*o\nan+=a\nprint(*an)\n#print(time.time()-ti)\n", "N = int(input())\nA = [int(a) for a in input().split()]\n\nn1 = A.count(1)\nn2 = A.count(2)\n\nif n1*n2==0:\n    print(*A)\nelse:\n    s1 = (n1-1)//2*2\n    ANS = [2,1]+[1]*s1+[2]*(n2-1)+[1]*(n1-1-s1)\n    print(*ANS)\n", "N = int(input())\nA = [int(a) for a in input().split()]\n\nn1 = A.count(1)\nn2 = A.count(2)\n\nif n1*n2 == 0:\n    print(*A)\nelse:\n    print(*([2,1]+[2]*(n2-1)+[1]*(n1-1)))\n\n", "def sieve(n):\n    n += 1\n    \n    prime = [True] * n\n    for i in range(2, n):\n        if i * i > n:\n            break\n        if prime[i]:\n            for j in range(i * i, n, i):\n                prime[j] = False\n\n    res = [0]\n    for i in range(2, n):\n        if prime[i]:\n            res.append(i)\n    \n    return res\n\nn = int(input())\na = list(map(int, input().split()))\n\ncnt = [0] * 3\nfor i in a:\n    cnt[i] += 1\n\nprimes = sieve(sum(a) + 1)\n\nans = []\nfor i in range(1, len(primes)):\n    dist = primes[i] - primes[i - 1]\n\n    take_two = min(dist // 2, cnt[2])\n    take_one = min(dist - 2 * take_two, cnt[1])\n\n    cnt[2] -= take_two\n    cnt[1] -= take_one\n\n    ans.extend([2] * take_two)    \n    ans.extend([1] * take_one)\n\nans.extend([2] * cnt[2])    \nans.extend([1] * cnt[1])\n\nfor x in ans:\n    print(x, end=\" \")", "N = int(input())\nA = [int(a) for a in input().split()]\n\nn1 = A.count(1)\nn2 = A.count(2)\n\nif n1*n2==0:\n    print(*A)\nelse:\n    s1 = (n1-1)//2*2\n    ANS = [2,1]+[1]*s1+[2]*(n2-1)+[1]*(n1-1-s1)\n    print(*ANS)", "a=int(input())\nb=list(map(int,input().split(\" \")))\nif b.count(1)>=1 and b.count(2)>=1:\n    b.remove(1)\n    b.remove(2)\n    b.sort(reverse=True)\n    b.insert(0,2)\n    b.insert(1,1)\n    print (*b,sep=\" \")\nelse:\n    print (*b,sep=\" \")\n", "import heapq\nimport sys\nfrom collections import defaultdict, Counter\nfrom itertools import product\n\n\nn = int(input())\n\narr = list(map(int, input().split()))\nc = Counter(arr)\n\nif c[1] == 0:\n    print('2 ' * n)\nelif c[2] == 0:\n    print('1 ' * n)\nelse:\n    print('2 1 ' + '2 ' * (c[2] - 1) + '1 ' * (c[1] - 1))\n", "import sys\nimport copy\n\nline = sys.stdin.readline().strip('\\n')\nline = sys.stdin.readline().strip('\\n')\nnums = list(map(int, line.split()))\n\ndef primes():\n    prim = [1 for i in range(0,400000)]\n    prim[1] = 0\n    prim[2] = 1\n    for i in range(2,400000):\n        if(prim[i] == 1):\n            tmp = i\n            while(tmp+i<400000):\n                tmp+=i\n                prim[tmp] = 0   \n    return prim\n\nps = primes()\ncnt1 = 0\nfor i in range(len(nums)):\n    if(nums[i] == 1):\n        cnt1+=1\ncnt2 = len(nums)-cnt1\ncnt = 0\nfor i in range(len(nums)):\n    if(ps[cnt+1] == 1 and cnt1>0):\n        cnt+=1\n        cnt1-=1\n        print(1, end=' ')\n    elif(cnt2>0):\n        cnt2-=1\n        cnt+=2\n        print(2, end=' ')\n    else:\n        cnt1-=1\n        print(1, end=' ')", "from collections import Counter\n\n\ndef solve(nums):\n    c = Counter(nums)\n    if c[2] == 0:\n        return ' '.join(map(str, [1 for _ in range(c[1])]))\n    elif c[1] == 0:\n        return ' '.join(map(str, [2 for _ in range(c[2])]))\n    else:\n        output = [2, 1]\n        c[2] -= 1\n        c[1] -= 1\n        if c[2] > 0:\n            output.extend([2 for _ in range(c[2])])\n        if c[1] > 0:\n            output.extend([1 for _ in range(c[1])])\n        return ' '.join(map(str, output))\n\n\ndef main():\n    _ = int(input())\n    nums = list(map(int, input().split()))\n    print(solve(nums))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def sol(tiles):\n    d = {'1': 0, '2': 0}\n    for c in tiles:\n        if c == ' ':\n            continue\n        d[c] += 1\n    if d['1'] == 0:\n        return ' '.join(['2'] * d['2'])\n    if d['2'] == 0:\n        return ' '.join(['1'] * d['1'])\n    return ' '.join(['2','1'] + ['2']*(d['2']-1) + ['1']*(d['1']-1))\n\ndef __starting_point():\n    _ = input()\n    tiles = input()\n    print(sol(tiles))\n\n__starting_point()", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Fri May  3 23:45:36 2019\n\n@author: plosi\n\"\"\"\ndi={}\n\ndef isPrime(n): \n    if n==1: \n        return False \n    if n<4: \n        return True \n    if n%2==0: \n        return False \n    if n<9: \n        return True \n    if n%3==0: \n        return False \n    else: \n        r=int(n**(1/2)) \n        f=5 \n        while f<=r: \n            if n%f==0: \n                return False \n            if n%(f+2)==0: \n                return False \n            f=f+6 \n    return True\n\ndef mk_arr(num_ones,num_twos): \n\n    n=0 \n    st=\"\"\n    while num_ones>0 and num_twos>0: \n        if isPrime(n+1): \n            st=st+\"1 \" \n            num_ones=num_ones-1\n            n=n+1\n        else: \n            st=st+\"2 \"\n            num_twos=num_twos-1 \n            n=n+2 \n    if num_twos==0: \n        for i in range(num_ones): \n            st=st+\"1 \"\n    if num_ones==0: \n        for i in range(num_twos): \n            st=st+\"2 \"\n    \n    return st\n\ndef main(): \n    n=int(input()) \n    arr=input().split(\" \") \n    num_ones=0\n    for val in arr: \n        if val==\"1\": \n            num_ones=num_ones+1 \n    st=mk_arr(num_ones,n-num_ones) \n    print(st) \n    \nmain()  \n            \n    \n    \n", "\"\"\"\nimport bisect\nshop=int(input())\nprice=list(map(int,input().split()))\nq=int(input())\nprice.sort()\nfor i in range(q):\n            m=int(input())\n            k=bisect.bisect_right(price,m,0,shop)\n            print(len(price)-len(price[k:]))\n\"\"\"\n\"\"\"\nimport math\nn,k=map(int,input().split())\nlis=[]\nfor i in range(n):\n            p,t=map(int,input().split())\n            lis.append([p,t])\nlis=sorted(lis,key=lambda x,y:(cmp(x[0],y[0]),cmp(y[1],x[1])),reverse=True)\nm=lis[k-1]\nprint(lis.count(m))\nprint(lis)\n\"\"\"\nn=int(input())\nlis=input().split()\ntwos=lis.count(\"2\")\nones=n-twos\nif(twos==0 or ones==0):\n            print(' '.join(lis))\nelse:\n            print(\"2 1\"+\" 2\"*(twos-1)+\" 1\"*(ones-1))\n", "import math\nread = lambda : map(int, input().split())\n\ndef codeforce1149A():\n    n = int(input())\n    p = list(read())\n    if len(p) == 1:\n        print(p[0])\n        return\n    odd, even = 0, 0\n    for i in p:\n        if i % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    if odd == 0:\n        for i in p:\n            print(i, end = ' ')\n    elif even == 0:\n        for i in p:\n            print(i, end = ' ')\n    else:\n        print(2, 1, end = ' ')\n        even -= 1\n        odd -= 1\n        for _ in range(even):\n            print(2, end = \" \")\n        for _ in range(odd):\n            print(1, end = ' ')\n\ndef __starting_point():\n    codeforce1149A()\n__starting_point()", "N = int(input())\nA = [int(a) for a in input().split()]\n\nn1 = A.count(1)\nn2 = A.count(2)\n\nif n1*n2 == 0:\n    print(*A)\nelse:\n    print(*([2,1]+[2]*(n2-1)+[1]*(n1-1)))\n", "n=int(input())\na=list(map(int,input().split()))\ns=sum(a)\nn1=a.count(1)\t\nn2=n-n1\nb=''\nif(n2!=0 and n1!=0):\n\tb='2 1 '\n\tn2=n2-1\n\tn1=n1-1\nb=b+(n2)*'2 '+(n1)*'1 '\nprint(b.strip())\t", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\ninput()\na = sorted(map(int, input().split()))[::-1]\na[1:1] = a.pop(),\nprint(*a)\n", "n=int(input())\nl=sorted(list(map(int,input().split())),reverse=True)\n\nans=l[-1]\nl.remove(l[-1])\nl.insert(1,ans)\nprint(*l)\n\n", "n = int(input())\na = input()\no = a.count('1')\nif o == n or o == 0:\n  print(a)\nelse:\n  print('2 1 ' + '2 ' * (n - o - 1) + '1 ' * (o - 1))\n", "def make(list):\n    a,b=0,0\n    for i in range(len(list)):\n        if list[i]==1:\n            a+=1\n        else:\n            b+=1\n    return a,b\nn=int(input())\nl=list(map(int,input().strip().split()))\na,b=make(l)\nk=[]\nif b!=0:\n    k.append(2)\n    b-=1\nif a!=0:\n    k.append(1)\n    a-=1\nwhile b!=0:\n    k.append(2)\n    b-=1\nwhile a!=0:\n    k.append(1)\n    a-=1\n\nprint(\" \".join(str(x) for x in k))\n", "# -*- coding: utf-8 -*-\n\nn = int(input())\nl = list(map(int, input().split()))\n\nc1 = (l.count(1))\nc2 = (l.count(2))\n\nif c1 == 0 or c2 == 0:\n    ll = l\nelse:\n    ll = [2,1]\n    l1 = [1]*(c1-1)\n    l2 = [2]*(c2-1)\n    ll = ll+l2+l1\n\nprint(\" \".join(map(str,ll)))"]