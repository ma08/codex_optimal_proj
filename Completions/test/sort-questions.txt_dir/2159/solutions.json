["n=int(input())\na=list(map(int,input().split()))\nr=[0]*(n+1)\nfor i in range(n):\n    d={}\n    v=-1\n    for j in range(i,n):\n        t=d.get(a[j],0)+1\n        d[a[j]]=t\n        if t>v or t==v and a[j]<m:\n            v=t\n            m=a[j]\n        r[m]+=1\nprint(' '.join(map(str,r[1:])))", "n = int(input())\ns = [int(i) for i in input().split()]\n\nanswer = [0 for i in range(n)]\np = n\nfor j in range(n):\n    a = [0] * p\n    domin = s[0]\n    answer[domin - 1] += 1\n    a[domin - 1] += 1\n    for i in range(1, n):\n        a[s[i] - 1] += 1\n        if a[s[i] - 1] > a[domin - 1] or (a[s[i] - 1] == a[domin - 1] and s[i] < domin):\n            domin = s[i]\n        answer[domin - 1] += 1\n    s.pop(0)\n    n -= 1\nprint(*answer)\n", "n = int(input())\nt = [int(q) - 1 for q in input().split()]\nk = [0] * n\nfor i in range(n):\n    s = [0] * n\n    b = 0\n    for a in t[i:]:\n        s[a] += 1\n        if s[a] > s[b] or a < b and s[a] == s[b]: b = a\n        k[b] += 1\nprint(*k)", "n = int(input())\nt = [int(q) - 1 for q in input().split()]\nk = [0] * n\nfor i in range(n):\n    s = [0] * n\n    b = 0\n    for a in t[i:]:\n        s[a] += 1\n        if s[a] > s[b] or a < b and s[a] == s[b]: b = a\n        k[b] += 1\nprint(*k)\n", "class CodeforcesTask643ASolution:\n    def __init__(self):\n        self.result = ''\n        self.ball_count = 0\n        self.colors = []\n\n    def read_input(self):\n        self.ball_count = int(input())\n        self.colors = [int(x) for x in input().split(\" \")]\n\n    def process_task(self):\n        color_results = [0 for x in range(self.ball_count)]\n        for x in range(self.ball_count):\n            cl_counts = [0 for x in range(self.ball_count)]\n            best = 0\n            best_id = -1\n            for y in range(x, self.ball_count):\n                cl_counts[self.colors[y] - 1] += 1\n                if cl_counts[self.colors[y] - 1] > best:\n                    best = cl_counts[self.colors[y] - 1]\n                    best_id = self.colors[y] - 1\n                elif cl_counts[self.colors[y] - 1] == best:\n                    if best_id > self.colors[y] - 1:\n                        best_id = self.colors[y] - 1\n                color_results[best_id] += 1\n        self.result = \" \".join([str(x) for x in color_results])\n\n    def get_result(self):\n        return self.result\n\n\ndef __starting_point():\n    Solution = CodeforcesTask643ASolution()\n    Solution.read_input()\n    Solution.process_task()\n    print(Solution.get_result())\n\n__starting_point()", "n = int(input())\nt = list(map(int, input().split()))\nres = [0] * n\nfor i in range(n):\n    temp = [0] * n\n    idx = -1\n    max_freq = 0\n    for j in range(i, n):\n        if temp[t[j] - 1] + 1 > max_freq:\n            max_freq += 1\n            idx = t[j]\n        elif temp[t[j] - 1] + 1 == max_freq and t[j] < idx:\n            idx = t[j]\n        temp[t[j] - 1] += 1\n        res[idx - 1] += 1\nprint(*res)\n", "# n=int(input())\n# n,k=map(int,input().split())\n'''l=0\nr=10**13\nwhile l+1<r:\n    mid=(l+r)//2\n    val=(max(0,b_b*mid-b)*rb+max(0,b_s*mid-s)*rs+max(0,b_c*mid-b)*rc)\n    if val>money:\n        r=mid\n    if val<=money:\n        l=mid'''\n# arr=list(map(int,input().split()))\n# n=int(input())\n#if all([size%ele==0 for ele,size in s.items()]):\n# n,k=map(int,input().split())\n# arr=list(map(int,input().split()))\n#from collections import Counter\n#arr=sorted([(n-int(x),i) for i,x in enumerate(input().split())])\nn=int(input())\narr=[int(q)-1 for q in input().split()]\nans=[0]*n\nfor i in range(n):\n    cnt = [0] * n\n    best=0\n    for j in arr[i:]:\n        cnt[j]+=1\n        if cnt[j]>cnt[best] or j<best and  cnt[j]==cnt[best] :\n            best = j\n        ans[best]+=1\n\nprint(*ans)\n\n\n"]