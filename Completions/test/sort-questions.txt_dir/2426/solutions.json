["#list(map(int,input().split()))\nt=int(input())\nfor i in range(t):\n    n=int(input())\n    it=list(map(int,input().split()))\n    if n==1 and it[0]%2==1:\n        print(-1)\n    else:\n        ind=-1\n        ind2=-1\n        ind3=-1\n        for j in range(n):\n            if it[j]%2==0:\n                ind=j\n            elif ind2==-1:\n                ind2=j\n            else:\n                ind3=j\n            \n        if ind==-1:\n            print(2)\n            print(ind2+1,ind3+1)\n        else:\n            print(1)\n            print(ind+1)\n        \n", "import sys\nimport math\nimport itertools\nimport functools\nimport collections\nimport operator\nimport fileinput\nimport copy\n\n\nORDA = 97\ndef ii(): return int(input())\ndef mi(): return list(map(int, input().split()))\ndef li(): return list(map(int, input().split()))\ndef lcm(a, b): return abs(a * b) // math.gcd(a, b)\ndef revn(n): return str(n)[::-1]\ndef dd(): return collections.defaultdict(int)\ndef ddl(): return collections.defaultdict(list)\ndef sieve(n):\n    if n < 2: return list()\n    prime = [True for _ in range(n + 1)]\n    p = 3\n    while p * p <= n:\n        if prime[p]:\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n        p += 2\n    r = [2]\n    for p in range(3, n + 1, 2):\n        if prime[p]:\n            r.append(p)\n    return r\ndef divs(n, start=2):\n    r = []\n    for i in range(start, int(math.sqrt(n) + 1)):\n        if (n % i == 0):\n            if (n / i == i):\n                r.append(i)\n            else:\n                r.extend([i, n // i])\n    return r\ndef divn(n, primes):\n    divs_number = 1\n    for i in primes:\n        if n == 1:\n            return divs_number\n        t = 1\n        while n % i == 0:\n            t += 1\n            n //= i\n        divs_number *= t\ndef prime(n):\n    if n == 2: return True\n    if n % 2 == 0 or n <= 1: return False\n    sqr = int(math.sqrt(n)) + 1\n    for d in range(3, sqr, 2):\n        if n % d == 0: return False\n    return True\ndef convn(number, base):\n    newnumber = 0\n    while number > 0:\n        newnumber += number % base\n        number //= base\n    return newnumber\ndef cdiv(n, k): return n // k + (n % k != 0)\n\n\nfor _ in range(ii()):\n    n = ii()\n    a = li()\n    if n == 1 and a[0] & 1:\n        print(-1)\n    else:\n        for i in range(n):\n            if a[i] % 2 == 0:\n                print(1)\n                print(i + 1)\n                break\n        else:\n            print(2)\n            print(1, 2)\n", "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nimport heapq\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\n \nM = mod = 10**9 + 7\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n \ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n').split(' ')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\n\nfor _ in range(val()):\n    n = val()\n    a = li()\n    if len(a) == 1 and a[0]&1:\n        print(-1)\n        continue\n\n    if not a[0]&1:\n        print(1)\n        print(1)\n    elif not a[1]&1:\n        print(1)\n        print(2)\n    else:\n        print(2)\n        print('1 2')    ", "t = int(input().strip())\nfor _ in range(t):\n    #a,b = map(int,input().strip().split())\n    n = int(input().strip())\n    nums = [int(i) for i in input().strip().split()]\n    if n == 1 and nums[0] % 2 != 0:\n        print(-1)\n    else:\n        has = False\n        for i in range(n):\n            if nums[i] % 2 == 0:\n                ans = i\n                has = True\n                break\n        if has:\n            print(1)\n            print(ans + 1)\n        else:\n            print(2)\n            print(1,2)\n", "import math, collections, sys\ninput = sys.stdin.readline\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    if len(a) == 1:\n        if a[0]%2:\n            print(-1)\n        else:\n            print(1)\n            print(1)\n    else:\n        flag = -1\n        for i in range(n):\n            if a[i]%2 == 0:\n                flag = i+1\n        if flag != -1:\n            print(1)\n            print(flag)\n        else:\n            print(2)\n            print(1, 2)\nfor _ in range(int(input())):\n    solve()", "T = int(input())\nfor cas in range(T):\n  n = int(input())\n  a = [int(e) for e in input().split()]\n  ok = False\n  b = []\n  for i, j in enumerate(a):\n    if j % 2 == 0:\n      print(1)\n      print(i + 1)\n      ok = True\n      break\n    else:\n      b.append(i + 1)\n    if len(b) >= 2:\n      print(2)\n      print(b[0], b[1])\n      ok = True\n      break\n  if not ok:\n    print(-1)\n", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    for i, e in enumerate(a):\n        if e%2==0:\n            print(1)\n            print(i+1)\n            break\n    else:\n        if len(a) >= 2:\n            print(2)\n            print(1,2)\n            continue\n        else:\n            print(-1)\n            continue", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if len(a) < 2 and a[0] % 2 == 1:\n        print(-1)\n    else:\n        if a[0] % 2 == 0:\n            print(1)\n            print(1)\n        elif a[1] % 2 == 0:\n            print(1)\n            print(2)\n        else:\n            print(2)\n            print(1, 2)\n", "import math\nt=int(input())\nfor tt in range(t):\n\tn=int(input())\n\tarr=list(map(int,input().split()))\n\tflag=False\n\todd=[]\n\tfor i in range(len(arr)):\n\t\tif arr[i]%2==0:\n\t\t\tprint(1)\n\t\t\tprint(i+1)\n\t\t\tflag=True\n\t\t\tbreak\n\t\telse:\n\t\t\todd.append(i+1)\n\t\t\tif  len(odd)%2==0:\n\t\t\t\tbreak\n\tif not flag:\n\t\tif len(odd)%2==1:\n\t\t\tprint(-1)\n\t\t\tcontinue\n\t\tprint(len(odd))\n\t\tfor i in odd:\n\t\t\tprint(i,end=\" \")\n\t\tprint()\n", "from bisect import bisect_left as bl, bisect_right as br, insort\nimport sys\nimport heapq\nfrom math import *\nfrom collections import defaultdict as dd, deque\ndef data(): return sys.stdin.readline().strip()\ndef mdata(): return map(int, data().split())\n#sys.setrecursionlimit(100000)\n\nfor i in range(int(input())):\n    n=int(input())\n    a=list(mdata())\n    e=0\n    o=0\n    ind2=[]\n    ind1=[]\n    for i in range(n):\n        if a[i]%2==0:\n            e=1\n            ind1=i+1\n            break\n        else:\n            o+=1\n            ind2.append(i+1)\n    if e==1:\n        print(1)\n        print(ind1)\n    elif o>=2:\n        print(2)\n        print(*ind2[:2])\n    else:\n        print(-1)", "'''\n    Auther: ghoshashis545 Ashis Ghosh\n    college: jalpaiguri Govt Enggineering College\n    Date:07/03/2020\n'''\nfrom math import ceil,sqrt,gcd,log,floor\nfrom collections import deque\ndef ii(): return int(input())\ndef si(): return input()\ndef mi(): return map(int,input().strip().split(\" \"))\ndef li(): return list(mi())\n\n\n\nfor _ in range(ii()):\n    n=ii()\n    a=li()\n    f=0\n    for i in range(n):\n        if(a[i]%2==0):\n            print('1')\n            print(i+1)\n            f=1\n            break\n    if(f==0):\n        if(n==1):\n            print('-1')\n        else:\n            print('2')\n            print(1,2)"]