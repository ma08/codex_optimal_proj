["\"\"\"\nCodeforces Contest 270 Problem C\n\nAuthor  : chaotic_iak\nLanguage: Python 3.3.4\n\"\"\"\n\ndef main():\n    n, = read()\n    names = []\n    for i in range(n): names.extend([(x,i+1) for x in read(1)])\n    names.sort()\n    p = read()\n    i = 0\n    j = 0\n    while i < n and j < 2*n:\n        if names[j][1] == p[i]:\n            i += 1\n        j += 1\n    if i == n:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n################################### NON-SOLUTION STUFF BELOW\n\ndef read(mode=2):\n    # 0: String\n    # 1: List of strings\n    # 2: List of integers\n    inputs = input().strip()\n    if mode == 0: return inputs\n    if mode == 1: return inputs.split()\n    if mode == 2: return list(map(int, inputs.split()))\n\ndef write(s=\"\\n\"):\n    if s is None: s = \"\"\n    if isinstance(s, list): s = \" \".join(map(str, s))\n    s = str(s)\n    print(s, end=\"\")\n\nwrite(main())", "n = int(input())\nl = [input().split() for i in range(n)]\np = [int(x)-1 for x in input().split()]\n\ncur = \"\"\nposs = True\nfor i in range(n):\n    per = l[p[i]]\n    if per[0] > cur:\n        if per[1] > cur:\n            cur = min(per[0],per[1])\n        else:\n            cur = per[0]\n    else:\n        if per[1] > cur:\n            cur = per[1]\n        else:\n            poss = False\n            break\nprint(\"YES\" if poss else \"NO\")\n", "from sys import *\nn = int(input())\nnames = []\nfor i in range(n):\n    names.append(input().split())\np = [names[x - 1] for x in list(map(int, input().split()))]\ncurr_handle = min(p[0][0], p[0][1])\nfor i in range(1, n):\n    if curr_handle > p[i][0] and curr_handle > p[i][1]:\n        print(\"NO\")\n        return\n    else:\n        min_curr = min(p[i][0], p[i][1])\n        curr_handle = min_curr if curr_handle <= min_curr else max(p[i][0], p[i][1])\nprint(\"YES\")\n", "import sys\n\nn = int(input())\n\nname = []\nfor i in range(n):\n    s = input().split()\n    name.append(s)\n\np = list(map(int, input().split()))\nfor i in range(n):\n    p[i] -= 1\n\nnew = [0] * n\nfor i in range(n):\n    new[i]= name[p[i]]\n\n\nnow = min(new[0][0], new[0][1])\n\nfor i in range(1, n):\n    tmp1 = min(new[i][0], new[i][1])\n    tmp2 = max(new[i][0], new[i][1])\n\n    if now < tmp1:\n        now = tmp1\n    elif now < tmp2:\n        now = tmp2\n    else:\n        print(\"NO\")\n        return\n\nprint(\"YES\")\n", "n = int(input())\nname = [\"\"] * n\nsurname = [\"\"] * n\nfor i in range(n):\n    name[i], surname[i] = input().split()\n\na = list(map(int, input().split()))\nnew_name = []\nnew_surname = []\nfor i in a:\n    new_name.append(name[i - 1])\n    new_surname.append(surname[i - 1])\n\ndp = [[False] * 2 for i in range(n)]\ndp[0][0] = True\ndp[0][1] = True\n\nfor i in range(n - 1):\n    if dp[i][0]:\n        if new_name[i] < new_name[i + 1]:\n            dp[i + 1][0] = True\n        if new_name[i] < new_surname[i + 1]:\n            dp[i + 1][1] = True\n    if dp[i][1]:\n        if new_surname[i] < new_name[i + 1]:\n            dp[i + 1][0] = True\n        if new_surname[i] < new_surname[i + 1]:\n            dp[i + 1][1] = True\n\nif dp[n - 1][0] or dp[n - 1][1]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "n = int(input())\ntmp = [input().split() for _ in range(n)]\np = list(map(int, input().split()))\nl = [None] * n\nfor i, v in enumerate(p):\n    l[i] = tmp[v - 1]\nl[0] = min(l[0])\nfor i in range(1, n):\n    if min(l[i]) > l[i - 1]:\n        l[i] = min(l[i])\n    elif max(l[i]) > l[i - 1]:\n        l[i] = max(l[i])\n    else:\n        print('NO')\n        break\nelse:\n    print('YES')", "n = int(input())\nname = ['' for i in range(n)]\nsname = ['' for i in range(n)]\nfor i in range(n):\n\tname[i], sname[i] = input().split()\np = list(map(int, input().split()))\nfor i in range(n):\n\tp[i] -= 1\nnm = [False for i in range(n)]\nsnm = [False for i in range(n)]\nnm[0] = snm[0] = True\nfor i in range(1, n):\n\tif nm[i-1]:\n\t\tif name[p[i]] > name[p[i-1]]:\n\t\t\tnm[i] = True\n\t\tif sname[p[i]] > name[p[i-1]]:\n\t\t\tsnm[i] = True\n\tif snm[i-1]:\n\t\tif name[p[i]] > sname[p[i-1]]:\n\t\t\tnm[i] = True\n\t\tif sname[p[i]] > sname[p[i-1]]:\n\t\t\tsnm[i] = True\nprint(\"YES\" if snm[-1] or nm[-1] else \"NO\")", "# 472 C\n\na = int(input())\nl = []\nl1 = []\nfor i in range(a):\n    l.append('')\nfor i in range(a):\n    lol = input().split()\n    l1.append([lol[0],lol[1]])\nl2 = input().split()\n\nfor i in range(a):\n    l[i] = l1[int(l2[i])-1]\nm = ''\nwork = \"YES\"\nfor i in range(a):\n    if min(l[i]) >= m:\n        m = min(l[i])\n    elif max(l[i]) >= m:\n        m = max(l[i])\n    else:\n        work = \"NO\"\n        break\n\nprint(work)\n", "n = int(input())\nl = []\nfor i in range(n):\n    k, h = input().split()\n    l.append([k, i + 1])\n    l.append([h, i + 1])\na = list(map(int, input().split()))\nl.sort()\ncur = 0\nind = 0\nans = 'YES'\nwhile (ind < 2 * n) and (cur < n):\n    while l[ind][1] != a[cur]:\n        ind += 1\n        if ind >= 2 * n:\n            ans = 'NO'\n            break\n    cur += 1\nprint(ans)", "#input\nn=int(input())\nnamelist=[]\nfor i in range(n):\n\tnamelist.append([str(x) for x in input().split()])\nplist=[int(x) for x in input().split()]\n\n\n\n#variables\nlimit=min(namelist[plist[0]-1])\n\n\n\n#main\nfor i in range(n-1):\n\tif limit<min(namelist[plist[i+1]-1]):\n\t\tlimit=min(namelist[plist[i+1]-1])\n\telif limit<max(namelist[plist[i+1]-1]):\n\t\tlimit=max(namelist[plist[i+1]-1])\n\telse:\n\t\tprint('NO')\n\t\tquit()\n\nprint('YES')", "'''\nCreated on Sep 28, 2014\n\n@author: Ismael\n'''\n\ndef selectLeastGreater(p,prec):\n    fn = p[0]\n    ln = p[1]\n    if(fn >= prec and fn <= ln):\n        return fn\n    elif(ln >= prec and ln <= fn):\n        return ln\n    elif(fn >= prec):\n        return fn\n    elif(ln >= prec):\n        return ln\n    else:\n        return \"\"\n\nn = int(input())\nnames = []\nfor _ in range(n):\n    fn,ln = input().split()\n    names.append((fn,ln))\nA = list(map(int,input().split()))\n#print(names)\n#print(A)\nnames2 = []\nfor i in A:\n    names2.append(names[i-1])\n#print(names2)\nprec = \"\"\nYES = True\nfor i in range(n):\n    new = selectLeastGreater(names2[i],prec)\n    if(len(new) == 0):\n        print(\"NO\")\n        YES = False\n        break\n    else:\n        prec = new\nif(YES):\n    print(\"YES\")", "n = int(input())\nnames = []\nfor i in range(n):\n    names.append(input().split())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] -= 1\np = [0]*n\nfor i in range(n):\n    p[a[i]] = i\nans = \"YES\"\nchoice = 0\nfor i in range(n-1):\n    if choice == 0:\n        if min(names[a[i]][0], names[a[i]][1]) > max(names[a[i+1]][0], names[a[i+1]][1]):\n            ans = \"NO\"\n        else:\n            if min(names[a[i]][0], names[a[i]][1]) > names[a[i+1]][0]:\n                choice = 2\n            elif min(names[a[i]][0], names[a[i]][1]) > names[a[i+1]][1]:\n                choice = 1\n    elif choice == 1:\n        if names[a[i]][0] > max(names[a[i+1]][0], names[a[i+1]][1]):\n            ans = \"NO\"\n        else:\n            if names[a[i]][0] > names[a[i+1]][0]:\n                choice = 2\n            elif names[a[i]][0] > names[a[i+1]][1]:\n                choice = 1\n            else:\n                choice = 0\n    elif choice == 2:\n        if names[a[i]][1] > max(names[a[i+1]][0], names[a[i+1]][1]):\n            ans = \"NO\"\n        else:\n            if names[a[i]][1] > names[a[i+1]][0]:\n                choice = 2\n            elif names[a[i]][1] > names[a[i+1]][1]:\n                choice = 1\n            else:\n                choice = 0\n            \nprint(ans)", "n=int(input())\nnames=[]\nsortnames=[]\nresult = \"YES\"\nfor i in range(n):\n    names.append(input().split(' '))\n    sortnames.append('')\nk = input().split(' ')\nfor i in range(n):\n    k[i] = int(k[i])\n    sortnames[i] = names[k[i]-1]\n    sortnames[i].sort()\nsortnames[0] = sortnames[0][0]\nfor i in range(n-1):\n    if sortnames[i] < sortnames[i+1][0]:\n        sortnames[i+1] = sortnames[i+1][0]\n    else:\n        if sortnames[i] < sortnames[i+1][1]:\n            sortnames[i+1] = sortnames[i+1][1]\n        else:\n            result = \"NO\"\n            break\nprint(result)\n", "false = False\ncurr = []\nnames = int(input())\nppl = [input().split(' ') for i in range(names)]\norder = list(map(str, input().split(' ')))\nfor i in range(names):\n    if i == 0:\n        curr.append(min(ppl[int(order[i])-1]))\n    else:\n        a = ppl[int(order[i])-1][0]\n        b = ppl[int(order[i])-1][1]\n        if curr[-1] <= min(a, b):\n            curr.append(min(a, b))\n        elif curr[-1] <= max(a, b):\n            curr.append(max(a, b))\n        else:\n            false = True\nif false:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n", "n = int(input())\na = ['']*n\nb = ['']*n\nc = ['']*n\n\nfor i in range(n):\n    s = input()\n    k = s.find(' ')\n    a[i] = s[:k]\n    b[i] = s[k+1:]\nk = 0\np = list(map(int, input().split()))\nfor j in p:\n    i = j - 1\n    if k == 0:\n        c[k] = min(a[i],b[i])\n        k+=1\n    else:\n        if a[i] > c[k-1] and not (b[i] > c[k-1] and b[i] < a[i]):\n            c[k] = a[i]\n        elif b[i] > c[k-1]:\n            c[k] = b[i]\n        else:\n            print('NO')\n            break\n        k+=1\nelse:\n    print('YES')", "n = int(input())\nf = [input().split() for i in range(n)]\nm=[False, False]\nsl = list(map(int, input().split()))\nif n==1:\n    print(\"YES\")\nelse:\n    if f[sl[0]-1][0]<=f[sl[1]-1][0] or f[sl[0]-1][1]<=f[sl[1]-1][0]:\n        m[0]=True\n    if f[sl[0]-1][0]<=f[sl[1]-1][1] or f[sl[0]-1][1]<=f[sl[1]-1][1]:\n        m[1]=True\n    a, b = False, False\n    for i in range(1, n-1):\n        if (m[0] and (f[sl[i]-1][0]<=f[sl[i+1]-1][0])) or (m[1] and (f[sl[i]-1][1]<=f[sl[i+1]-1][0])):\n            a = True \n        else:\n            a = False\n        if (m[0] and (f[sl[i]-1][0]<=f[sl[i+1]-1][1])) or (m[1] and (f[sl[i]-1][1]<=f[sl[i+1]-1][1])):\n            b = True\n        else:\n            b = False\n        m[0], m[1] = a, b   \n    if (not m[0]) and (not m[1]):\n        print(\"NO\")\n    else:\n        print(\"YES\")", "#!/usr/bin/env python3\n\nperson_count = int(input())\nperson_list = [input().split(\" \") for _ in range(person_count)]\norder = [int(x) - 1 for x in input().split(\" \")]\nstring = \"\"\nfor number in order:\n    if string <= person_list[number][0] and string <= person_list[number][1]:\n        string = min(person_list[number])\n    elif string <= person_list[number][0]:\n        string = person_list[number][0]\n    elif string <= person_list[number][1]:\n        string = person_list[number][1]\n    else:\n        print(\"NO\")\n        break\nelse:\n    print(\"YES\")\n", "n = int(input())\nnames = []\nfor i in range(n):\n    names.append(input().split())\np = [int(i) - 1 for i in input().split()]\nlast = min(names[p[0]][0], names[p[0]][1])\nfor i in range(1, n):\n    a = names[p[i]]\n    v = []\n    if last < a[0] :\n        v.append(a[0])\n    if last < a[1]:\n        v.append(a[1])\n    if len(v) == 0:\n        print('NO')\n        break\n    else:\n        last = min(v)\nelse:\n    print('YES')\n", "n = int(input())\ns = []\nfor i in range(n):\n    s.append(input().split())\n    if s[i][0] > s[i][1]:\n        s[i][0], s[i][1] = s[i][1], s[i][0];\nx = [int(i) - 1 for i in input().split()]\n\ntag = False\n#for item in s:\n#    print(item)\nfor i in range(1, n):\n    if s[x[i-1]][0] >= s[x[i]][1]:\n        print('NO')\n        tag = True\n        break\n    if s[x[i-1]][0] >= s[x[i]][0]:\n        s[x[i]][0] = s[x[i]][1]\n    #print(s[i][0])\nif tag == False:\n    print('YES')\n", "import sys \nimport queue\n\n#file = open(\"in.txt\", \"r\")\n#sys.stdin = file\n\nline = sys.stdin.readline()\n\nn = int(line)\n\nfirst = [\"\" for x in range(n)]\nsecond = [\"\" for x in range(n)]\n\nfor i in range(0, n):\n    line = sys.stdin.readline().split()\n    first[i] = line[0]\n    second[i] = line[1]\n\npermutation = [int(x) for x in sys.stdin.readline().split()]\n\np = permutation[0]-1\nlast = min(first[p], second[p])\n\n\ncan = True\n\nfor i in range(1, n):\n    p = permutation[i]-1\n    if last < min(first[p], second[p]):\n        last = min(first[p], second[p])\n    elif last < max(first[p], second[p]):\n        last = max(first[p], second[p])\n    else:\n        can = False\n\nif can:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\n\n\n\n", "n = int(input())\ni = 1\nl = []\nwhile i <= n:\n    l.append(input().split())\n    i+=1\na = [int(p) for p in input().split()]\n#print(n,l,a)\ni = 1\n\ndef t(l,a):\n    w = min(l[a[0]-1][0], l[a[0]-1][1])\n    del a[0]\n    for p in a:\n        k = min(l[p-1][0],l[p-1][1])\n        if k > w:\n            w = k\n        elif max(l[p-1][0],l[p-1][1]) > w:\n            w = max(l[p-1][0],l[p-1][1])\n        else:\n            return 'NO'\n    return 'YES'\nprint(t(l,a))", "n=int(input())\nl=[None]*n\ni=0\nwhile i<n:\n    l[i]=input().split()\n    i+=1\nz=[int(px) for px in input().split()]\nx=1\ny=True\na=min(l[z[0]-1])\nwhile x<n:\n    u=l[z[x]-1][0]\n    v=l[z[x]-1][1]\n    if(u<a and v<a):\n        y=False\n        break\n    elif(u>a and v>a):\n        a=min(u,v)\n    else:\n        a=max(u,v)\n    x+=1    \nif(y):\n    print(\"YES\")\nelse:\n    print(\"NO\")", "n=int(input())\na=[0]*n\nb=[0]*n\nc=[0]*n\nfor i in range(n):\n    a[i],b[i]=input().split()\nd=list(map(int,input().split()))\n\n\nanswer=\"YES\"\nc[0]=min(a[d[0]-1],b[d[0]-1])\nfor i in range(1,n):\n    if c[i-1]<min(a[d[i]-1],b[d[i]-1]):\n        c[i]=min(a[d[i]-1],b[d[i]-1])\n    elif c[i-1]<max(a[d[i]-1],b[d[i]-1]):\n        c[i]=max(a[d[i]-1],b[d[i]-1])\n    else:\n        answer=\"NO\"\n        break\nprint(answer)", "def greater(a,b):\n    n = [b,a]\n    m = sorted(n)\n    if n[0] == m[0] :\n        return True\n    else :\n        return False\n\nn = int(input())\nname = []\nfor i in range(n) :\n    name.append(sorted(list(input().split())))\np = list(map(int,input().split()))\nr = 'YES'\nresult = [name[p[0]-1][0]]\nfor i in range(1,n) :\n    j = p[i] - 1\n    if greater(name[j][0],result[i-1]) :\n        result.append(name[j][0])\n    elif greater(name[j][1], result[i-1]) :\n        result.append(name[j][1])\n    else :\n        r = 'NO'\n        break\nprint(r)"]