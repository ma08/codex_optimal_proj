["N = int(input())\n\nS = list(map(int,input().split()))[::-1]\n\nprint(min(N - S.index(0), N - S.index(1)))", "n=int(input())\narr=list(map(int,input().split()))\ncount1=arr.count(0)\ncount2=arr.count(1)\nans1=0\nans2=0\nfor i in range(n):\n\tif(arr[i]==0):\n\t\tans1+=1\n\telse:\n\t\tans2+=1\n\tif(ans1==count1):\n\t\tprint(i+1)\n\t\treturn\n\telif(ans2==count2):\n\t\tprint(i+1)\n\t\treturn\n", "n = int(input())\na = list(map(int, input().split()))\nl = 0\nfor i in a:\n    if i == 0:\n        l += 1\nr = n - l\ncnt = 0\nfor i in a:\n    cnt += 1\n    if i == 0:\n        l -= 1\n    else:\n        r -= 1\n    if (l == 0) or (r == 0):\n        print(cnt)\n        return\n", "import sys\n\ninput = sys.stdin.readline\n\nn = int(input())\n\nlast0 = -1\nlast1 = -1\n\na = list(map(int, input().split()))\n\nfor i in range(len(a)):\n        if a[i] == 1:\n                last1 = i\n        else:\n                last0 = i\n\nprint(min(last0, last1)+1)\n", "n = int(input())\nA = list(map(int, input().split()))\nA = A[::-1]\nprint(n - max(A.index(1), A.index(0)))", "n=int(input())\na=list(map(int,input().split()))\nl0=n+1\nl1=n+1\nfor i in range(n):\n\tif a[i]==0:\n\t\tl0=i+1\n\telse:\n\t\tl1=i+1\nprint(min(l0,l1))", "n = int(input())\na = list(map(int, input().split(' ')))\nar = list(reversed(a))\nif a[-1] == 0:\n    try:\n        print(n - ar.index(1))\n    except ValueError:\n        print(n)\nelse:\n    try:\n        print(n - ar.index(0))\n    except ValueError:\n        print(n)\n", "#31938917\nfrom collections import defaultdict as DD\nfrom bisect import bisect_left as BL\nfrom bisect import bisect_right as BR\nfrom itertools import combinations as IC\nfrom itertools import permutations as IP\nfrom random import randint as RI\nimport sys\nMOD=pow(10,9)+7\n\ndef IN(f=0):\n    if f==0:\n        return ( [int(i) for i in sys.stdin.readline().split()] )\n    else:\n        return ( int(sys.stdin.readline()) )\nn=IN(1)\na=IN()\n\nx=a.count(0)\ny=a.count(1)\nk=0\ncx,cy=0,0\nfor i in range(n):\n    if a[i]==0:\n        cx+=1\n    else:\n        cy+=1\n    if cx==x or cy==y:\n        k=i\n        break\nprint(k+1)\n        \n    \n", "n = int(input())\narr = list(map(int, input().split()))\n\na = -1; b = -1\nfor x in range(n):\n    if arr[x] == 0:\n        a = x\n    else: b = x\nprint(min(a, b) + 1)\n", "n = int(input())\narr = list(map(int, input().split()))\narr.reverse()\nprint(min(n - arr.index(1), n - arr.index(0)))\n", "import re, math, decimal, bisect\ndef read(): return input().strip()\ndef iread(): return int(input().strip())\ndef viread(): return [int(_) for _ in input().strip().split()]\ndef round(n): return int(n + 0.5)\n\n# code goes here\nn = iread()\nseq = \"\".join([str(v) for v in viread()])\nzs = seq.count(\"0\")\nos = seq.count(\"1\")\nfor j, i in enumerate(seq):\n    if i == \"0\":\n        zs -= 1\n    else:\n        os -= 1\n    if zs == 0 or os == 0:\n        print(j+1)\n        return\n", "def mp():\n    return map(int, input().split())\n\nn = int(input())\na = list(mp())\n\nl = a.count(0)\nr = a.count(1)\n\nfor i in range(n):\n    if a[i] == 0:\n        l -= 1\n    else:\n        r -= 1\n    if l == 0 or r == 0:\n        print(i + 1)\n        break", "import math\nimport bisect\n\ndef egcd(a, b):\n    if a == 0:\n        return (b, 0, 1)\n    else:\n        g, x, y = egcd(b % a, a)\n        return (g, y - (b // a) * x, x)\n\n\n\ndef mulinv(b, n):\n    g, x, _ = egcd(b, n)\n    if g == 1:\n        return x % n\n\n\nprimes = []\n\ndef isprime(n):\n    for d in range(2, int(math.sqrt(n))+1):\n        if n%d==0:\n            return False\n    return True\n\n\ndef argsort(ls):\n    return sorted(range(len(ls)), key=ls.__getitem__)\n\ndef f(p=0):\n    if p==1:\n        return map(int, input().split())\n    elif p==2:\n        return list(map(int, input().split()))\n    else:\n        return int(input())\n\nn = f()\ncl = f(2)\n\na = cl.count(1)\nb = cl.count(0)\n\nfor i in range(n):\n    if cl[i]==0:\n        b-=1\n    else:\n        a-=1\n\n    if a==0 or b==0:\n        print(i+1)\n        break", "#JMD\n#Nagendra Jha-4096\n\n \nimport sys\nimport math\n\n#import fractions\n#import numpy\n \n###File Operations###\nfileoperation=0\nif(fileoperation):\n    orig_stdout = sys.stdout\n    orig_stdin = sys.stdin\n    inputfile = open('W:/Competitive Programming/input.txt', 'r')\n    outputfile = open('W:/Competitive Programming/output.txt', 'w')\n    sys.stdin = inputfile\n    sys.stdout = outputfile\n\n###Defines...###\nmod=1000000007\n \n###FUF's...###\ndef nospace(l):\n    ans=''.join(str(i) for i in l)\n    return ans\n \n \n \n##### Main ####\nt=1\nfor tt in range(t):\n    n=int(input())\n    #n,k,s= map(int, sys.stdin.readline().split(' '))\n    a=list(map(int,sys.stdin.readline().split(' ')))\n    one=a.count(1)\n    zer=a.count(0)\n    o=0\n    z=0\n    for i in range(n):\n        if(a[i]):\n            o+=1\n        else:\n            z+=1\n        if(o==one):\n            print(i+1)\n            break\n        if(z==zer):\n            print(i+1)\n            break\n\n    \n    \n#####File Operations#####\nif(fileoperation):\n    sys.stdout = orig_stdout\n    sys.stdin = orig_stdin\n    inputfile.close()\n    outputfile.close()", "'''input\n4\n1 0 0 1\n'''\nimport sys\nfrom collections import defaultdict as dd\nfrom itertools import  permutations as pp\nfrom itertools import combinations as cc\nfrom collections import Counter as ccd\nfrom random import randint as rd\nfrom bisect import bisect_left as bl\nimport heapq\nmod=10**9+7\n\ndef ri(flag=0):\n\tif flag==0:\n\t\treturn [int(i) for i in sys.stdin.readline().split()]\n\telse:\n\t\treturn int(sys.stdin.readline())\n\nn=ri(1)\na=ri()\none=0\ntwo=0\n\nfor i in a:\n\tif i==0:\n\t\tone+=1\n\telse:\n\t\ttwo+=1\n\nidx=-1\nfor i in range(n):\n\tif a[i]==0:\n\t\tone-=1\n\t\tif one==0:\n\t\t\tidx=i+1\n\t\t\tbreak\n\telse:\n\t\ttwo-=1\n\t\tif two==0:\n\t\t\tidx=i+1\n\t\t\tbreak\nprint(idx)", "# from collections import Counter\n# from itertools import combinations\nn = int(input())\ndoors = [int(i) for i in input().split()]\nleft = 0\nright = 0\nfor i, door in enumerate(doors):\n    if door == 0:\n        right = i + 1\n    else:\n        left = i + 1\nprint(min(left, right))", "n = int(input())\nlst = list(map(int, input().split()))\nx = 0\ny = 0\nfor i in range(n):\n    if lst[i] == 1:\n        x+=1\n    else:\n        y += 1\nfor i in range(n):\n    if lst[i] == 1:\n        x -= 1\n    else:\n        y -= 1\n    if x == 0 or y == 0:\n        print(i + 1)\n        return", "n = int(input())\nl = [*map(int, input().split())]\nz = l.count(0)\no = l.count(1)\nfor i, e in enumerate(l):\n    if e: o -= 1\n    else: z -= 1\n    if z * o == 0:\n        print(i + 1)\n        return", "n = int(input())\nv = [int(x) for x in input().split(' ')][::-1]\na = v.index(0)\nb = v.index(1)\nprint(min(n - a, n - b))", "from bisect import bisect_right as br\nfrom bisect import bisect_left as bl\nfrom collections import *\nfrom itertools import *\nimport functools\nimport sys\nimport math\nimport random\nMAX = sys.maxsize\nMAXN = 10**5+10\nMOD = 10**9+7\ndef isprime(n):\n    n = abs(int(n))\n    if n < 2:\n        return False\n    if n == 2: \n        return True    \n    if not n & 1: \n        return False\n    for x in range(3, int(n**0.5) + 1, 2):\n        if n % x == 0:\n            return False\n    return True\n\ndef mhd(a,b,x,y):\n    return abs(a-x)+abs(b-y)\n\ndef numIN(x = \" \"):\n    return(map(int,sys.stdin.readline().strip().split(x)))\n\ndef charIN():\n    return(sys.stdin.readline().strip().split())\n\ndef dis(x,y):\n    a = y[0]-x[0]\n    b = x[1]-y[1]\n    return (a*a+b*b)**0.5\n\n\nn = int(input())\nl = list(numIN())\nc0 = l.count(0)\nc1 = l.count(1)\ncnt0,cnt1 = 0,0\nfor i in range(n):\n    if l[i]:\n        cnt1+=1\n    else:\n        cnt0+=1\n    if cnt1==c1:\n        print(i+1)\n        break\n    elif cnt0==c0:\n        print(i+1)\n        break", "#\t!/usr/bin/env python3\n#\tencoding: UTF-8\n#\tModified: <30/Mar/2019 10:43:51 PM>\n\n\n#\t\u272a H4WK3yE\u4e61\n#\tMohd. Farhan Tahir\n#\tIndian Institute Of Information Technology (IIIT),Gwalior\n\n\n# ///==========Libraries, Constants and Functions=============///\n\n\nimport sys\n\ninf = float(\"inf\")\nmod = 1000000007\n\n\ndef get_array(): return list(map(int, sys.stdin.readline().split()))\n\n\ndef get_ints(): return list(map(int, sys.stdin.readline().split()))\n\n\ndef input(): return sys.stdin.readline()\n\n# ///==========MAIN=============///\n\n\ndef main():\n    n = int(input())\n    arr = get_array()\n    x = arr[-1]\n    for i in range(n):\n        if arr[i] != x:\n            index = i\n    print(index+1)\n    # print(n-index)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n=int(input())\na = list(map(int,input().split()))\nc = a[n-1]\nk = n-1\nt = 0\nwhile a[k]==c:\n\tt+=1\n\tk-=1\nprint(n-t)", "n = int(input())\nA = list(map(int, input().split()))\nans = 0\nfor i in range(n-1, -1, -1):\n  if A[i] != A[n-1]:\n    ans = i+1\n    break\nprint(ans)\n", "n = int(input())\n\na = [int(item) for item in input().split()]\n\nleft, right = a.count(0), a.count(1)\n\nl, r = 0, 0\nfor i in range(n):\n    if a[i] == 0:\n        l += 1\n    else:\n        r += 1\n    if l == left or r == right:\n        print(i + 1)\n        break\n"]