["import sys\ninput = sys.stdin.readline\nfrom bisect import bisect_right as br\nP = 10**9+7\nN = int(input())\nX = []\nmaxinn = 0\nfor _ in range(N):\n    a, b = list(map(int, input().split()))\n    maxinn = max(maxinn, b)\n    X.append((a, b))\nX = sorted(X)\nOUT = [0]\nVOL = [0]\nCNT = [1]\n\nfor out, inn in X:\n    i = br(OUT, inn) - 1\n    vol = VOL[i] + out - inn\n    if OUT[-1] != out:\n        OUT.append(out)\n        VOL.append(VOL[-1] if len(CNT)>1 else 0)\n        CNT.append(CNT[-1] if len(CNT)>1 else 0)\n    \n    if VOL[-1] < vol:\n        VOL[-1] = vol\n        CNT[-1] = CNT[i]\n    elif VOL[-1] == vol:\n        CNT[-1] += CNT[i]\n        CNT[-1] %= P\n\nmi = min([OUT[i]-VOL[i] for i in range(len(CNT)) if OUT[i] > maxinn])\nprint(sum([CNT[i] for i in range(len(CNT)) if OUT[i] > maxinn and OUT[i]-VOL[i] == mi])%P)\n", "import sys\ninput = sys.stdin.readline\nfrom bisect import bisect_right as br\nP = 10**9+7\nN = int(input())\nX = []\nmaxinn = 0\nfor _ in range(N):\n    a, b = list(map(int, input().split()))\n    maxinn = max(maxinn, b)\n    X.append((a, b))\nX = sorted(X)\nOUT = [0]\nVOL = [0]\nCNT = [1]\n\nfor out, inn in X:\n    i = br(OUT, inn) - 1\n    vol = VOL[i] + out - inn\n    if OUT[-1] != out:\n        OUT.append(out)\n        VOL.append(VOL[-1])\n        CNT.append(CNT[-1])\n    \n    if VOL[-1] < vol:\n        VOL[-1] = vol\n        CNT[-1] = CNT[i]\n    elif VOL[-1] == vol:\n        CNT[-1] += CNT[i]\n        CNT[-1] %= P\n\nmi = min([OUT[i]-VOL[i] for i in range(len(CNT)) if OUT[i] > maxinn])\nprint(sum([CNT[i] for i in range(len(CNT)) if OUT[i] > maxinn and OUT[i]-VOL[i] == mi])%P)\n", "import sys\ninput = sys.stdin.readline\nfrom bisect import bisect_right as br\nP = 10**9+7\nN = int(input())\nX = []\nmaxinn = 0\nfor _ in range(N):\n    a, b = list(map(int, input().split()))\n    maxinn = max(maxinn, b)\n    X.append((a, b))\nX = sorted(X)\nOUT = [0]\nVOL = [0]\nCNT = [1]\n\nfor out, inn in X:\n    i = br(OUT, inn) - 1\n    vol = VOL[i] + out - inn\n    if OUT[-1] != out:\n        OUT.append(out)\n        VOL.append(VOL[-1])\n        CNT.append(CNT[-1])\n    \n    if VOL[-1] < vol:\n        VOL[-1] = vol\n        CNT[-1] = CNT[i]\n    elif VOL[-1] == vol:\n        CNT[-1] += CNT[i]\n        CNT[-1] %= P\n\nmi = min([OUT[i]-VOL[i] for i in range(len(CNT)) if OUT[i] > maxinn])\nprint(sum([CNT[i] for i in range(len(CNT)) if OUT[i] > maxinn and OUT[i]-VOL[i] == mi])%P)\n", "from bisect import bisect_left as lb\n\nMOD = 10 ** 9 + 7\n\nn = int(input())\na = [tuple(map(int, input().split())) for _ in range(n)]\na = sorted((in_, out) for out, in_ in a)\n\ndp_suf = [None] * n\n\nfor i in range(n - 1, -1, -1):\n    in_, out = a[i]\n    j = lb(a, (out, 0))\n    if j == n:\n        empty, count = in_, 1\n    else:\n        empty, count = dp_suf[j]\n        empty -= out - in_\n    if i < n - 1:\n        if empty > dp_suf[i + 1][0]:\n            empty, count = dp_suf[i + 1]\n        elif empty == dp_suf[i + 1][0]:\n            count += dp_suf[i + 1][1]\n    dp_suf[i] = empty, count % MOD\n\nprint(dp_suf[0][1])"]