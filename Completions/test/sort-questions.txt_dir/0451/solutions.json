["n,k = list(map(int, input().split()))\nb = list(map(int,input().split()))\n\nSSSSSSSSSS = input()\n\nINF = 1000*1000*1000+123\nRRRR = [];\nWWWWWWW = [];\nOOOOOOOOO = [];\n\nfor i in range(n):\n    if SSSSSSSSSS[i] == 'R':\n        RRRR.append(b[i])\n    elif SSSSSSSSSS[i] == 'W':\n        WWWWWWW.append(b[i])\n    else:\n        OOOOOOOOO.append(b[i])\n\n\n\nWWWWWWW.sort()\n\nRRRR.sort()\nWWWWWWW.reverse()\nRRRR.reverse()\nOOOOOOOOO.sort()\nOOOOOOOOO.reverse()\n\nif k == 1:\n    print(-1)\n    return\n\n\ndef cccmcmc(A, B):\n    qanakA = len(A);\n    qanakB = len(B);\n\n    pA = [0 for i in range(qanakA)]\n    pB = [0 for i in range(qanakB)]\n    pB[0] = B[0]\n    pA[0] = A[0]\n\n    for i in range(1,qanakA):\n        pA[i] = pA[i-1] + A[i];\n    for i in range(1,qanakB):\n        pB[i] = pB[i-1] + B[i];\n\n    res = -1\n\n    for i in range(1,min(qanakA+1,k)):\n        aic = pA[i-1]\n        bepetk = k-i\n        if bepetk <= 0 or bepetk > qanakB: continue\n        bic = pB[bepetk-1]\n        res = max(res,aic+bic)\n    return res\n\n\nres = -1\n\nif len(WWWWWWW) > 0 and len(OOOOOOOOO)> 0:\n    res = max(res, cccmcmc(WWWWWWW, OOOOOOOOO))\nif len(RRRR) > 0 and len(OOOOOOOOO)> 0:\n    res = max(res, cccmcmc(RRRR, OOOOOOOOO))\n\nprint(res)\n", "n,k=map(int,input().split())\ncost=list(map(int,input().split()))\ns=input()\n#return\na=[]\nb=[]\nc=[]\n#print(n,k,cost)\nkek1=0\nkek2=0\nkek3=0\nfor i in range(n):\n    if (s[i]==chr(ord(\"W\"))):\n        kek1+=1\n        a.append(cost[i])\n    if (s[i]==chr(ord(\"O\"))):\n        kek2+=1\n        b.append(cost[i])\n    if (s[i]==chr(ord(\"R\"))):\n        kek3+=1\n        c.append(cost[i])\na=sorted(a)\na=list(reversed(a))\nb=sorted(b)\nb=list(reversed(b))\nc=sorted(c)\nc=list(reversed(c))\n\npref_a=[]\npref_b=[]\npref_c=[]\n\nif (kek1!=0):\n    pref_a.append(a[0])\n    for i in range(1,len(a)):\n        pref_a.append(pref_a[len(pref_a)-1]+a[i])\n\nif (kek2!=0):\n    pref_b.append(b[0])\n    for i in range(1,len(b)):\n        pref_b.append(pref_b[len(pref_b)-1]+b[i])\n        \nif (kek3!=0):\n    pref_c.append(c[0])\n    for i in range(1,len(c)):\n        pref_c.append(pref_c[len(pref_c)-1]+c[i])\n        \ninf=10**20\nans=-inf\nfor i in range(0,min(k-1,kek2)):\n    cur=pref_b[i]\n    left_k=k-(i+1)\n    \n    res_a=-inf\n    res_c=-inf\n    if (kek1):\n        if (kek1>=left_k):\n            res_a=pref_a[left_k-1]\n    if (kek3):\n        if (kek3>=left_k):\n            res_c=pref_c[left_k-1]\n            \n    cur+=max(res_a,res_c)\n    ans=max(ans,cur)\n    \nif (ans<-(10**18)):\n    ans=-1\n    \nprint(ans)", "n, k = map(int, input().split())\na = list(map(int, input().split()))\nb = input()\nr = []\no = []\nw = []\nfor i in range(n):\n    if (b[i] == 'R'):\n        r.append(a[i])\n    elif (b[i] == 'O'):\n        o.append(a[i])\n    else:\n        w.append(a[i]);\nr.sort()\no.sort()\nw.sort()\nr.reverse()\no.reverse()\nw.reverse()\nif k == 1 or (len(r) * len(o) == 0 and len(o) * len(w) == 0):\n    print('-1')\nelse:\n    r1 = 0\n    o1 = 0\n    ans1 = 0\n    o2 = 0\n    w2 = 0\n    ans2 = 0\n    if (len(r) + len(o) >= k and len(r) * len(o) != 0):\n        r1 = 1\n        o1 = 1\n        ans1 = r[0] + o[0]\n        while(r1 + o1 < k):\n            if (o1 >= len(o) or (r1 < len(r) and r[r1] > o[o1])):\n                ans1 += r[r1]\n                r1 += 1\n            else:\n                ans1 += o[o1]\n                o1 += 1\n    if (len(o) + len(w) >= k and len(o) * len(w) != 0):\n        o2 = 1\n        w2 = 1\n        ans2 = o[0] + w[0]\n        while(o2 + w2 < k):\n            if (o2 >= len(o) or (w2 < len(w) and w[w2] > o[o2])):\n                ans2 += w[w2]\n                w2 += 1\n            else:\n                ans2 += o[o2]\n                o2 += 1\n    if (max(ans1, ans2) == 0):\n        print(\"-1\")\n    else:\n        print(max(ans1, ans2))", "n, k = [int(x) for x in input().strip().split(\" \")]\n\nb = [int(x) for x in input().strip().split(\" \")]\nc = input().strip()\n\nw = sorted([b[i] for i in range(len(b)) if c[i] == 'W'])\no = sorted([b[i] for i in range(len(b)) if c[i] == 'O'])\nr = sorted([b[i] for i in range(len(b)) if c[i] == 'R'])\n\nif k == 1 or len(o) == 0 or len(w) == 0 and len(r) == 0:\n    print(-1)\n    return\n\nmax_wo = -1\nif len(w) > 0 and len(w) + len(o) >= k:\n    wo = sorted(w[:-1] + o[:-1])\n    max_wo = w[-1] + o[-1]\n    if k > 2:\n         max_wo += sum(wo[-(k-2):])\n\nmax_ro = -1\nif len(r) > 0 and len(r) + len(o) >= k:\n    ro = sorted(r[:-1] + o[:-1])\n    max_ro = r[-1] + o[-1]\n    if k > 2:\n        max_ro += sum(ro[-(k-2):])\n\nans = max(max_wo, max_ro)\nprint(ans)\n", "n, k = map(int, input().split())\na = list(map(int, input().split()))\ns = input()\nif k == 1:\n    print(-1)\n    return\nhave = [[] for i in range(3)]\nfor i in range(n):\n    if s[i] == 'R':\n        have[0].append(a[i])\n    elif s[i] == 'O':\n        have[1].append(a[i])\n    else:\n        have[2].append(a[i])\nfor i in range(3):\n    have[i].sort(reverse=True)\n\n\nans1 = 0\np = 0\nq = 0\nwas = [0, 0]\nfor i in range(k - 1):\n    if p == len(have[0]) and q == len(have[1]):\n        ans1 = -1\n        break\n    if p == len(have[0]):\n        ans1 += have[1][q]\n        q += 1\n        was[1] = 1\n    elif q == len(have[1]):\n        ans1 += have[0][p]\n        p += 1\n        was[0] = 1\n    elif(have[0][p] > have[1][q]):\n        ans1 += have[0][p]\n        p += 1\n        was[0] = 1\n    else:\n        ans1 += have[1][q]\n        q += 1\n        was[1] = 1\n\nif ans1 != -1 and sum(was) == 2:\n    if p == len(have[0]) and q == len(have[1]):\n        ans = -1\n    elif p == len(have[0]):\n        ans1 += have[1][q]\n    elif q == len(have[1]):\n        ans1 += have[0][p]\n    else:\n        ans1 += max(have[0][p], have[1][q])\nif ans1 != -1 and was[0] == 0:\n    if p != len(have[0]):\n        ans1 += have[0][p]\n    else:\n        ans1 = -1\nif ans1 != -1 and was[1] == 0:\n    if q != len(have[1]):\n        ans1 += have[1][q]\n    else:\n        ans1 = -1\n\n\nans2 = 0\np = 0\nq = 0\nwas = [0, 0]\nfor i in range(k - 1):\n    if p == len(have[2]) and q == len(have[1]):\n        ans2 = -1\n        break\n    if p == len(have[2]):\n        ans2 += have[1][q]\n        q += 1\n        was[1] = 1\n    elif q == len(have[1]):\n        ans2 += have[2][p]\n        p += 1\n        was[0] = 1\n    elif have[2][p] > have[1][q]:\n        ans2 += have[2][p]\n        p += 1\n        was[0] = 1\n    else:\n        ans2 += have[1][q]\n        q += 1\n        was[1] = 1\n\nif ans2 != -1 and sum(was) == 2:\n    if p == len(have[2]) and q == len(have[1]):\n        ans = -1\n    elif p == len(have[2]):\n        ans2 += have[1][q]\n    elif q == len(have[1]):\n        ans2 += have[2][p]\n    else:\n        ans2 += max(have[2][p], have[1][q])\nif ans2 != -1 and was[0] == 0:\n    if p != len(have[2]):\n        ans2 += have[2][p]\n    else:\n        ans2 = -1\nif ans2 != -1 and was[1] == 0:\n    if q != len(have[1]):\n        ans2 += have[1][q]\n    else:\n        ans2 = -1\n\nprint(max(ans1, ans2))", "n,k=list(map(int,input().split()))\nb=list(map(int,input().split()))\ns=input()\na=[]\nif k==1:\n    print(-1)\n    return\nfor i in range(n):\n    a.append((b[i],s[i]))\na.sort(reverse=True)\ni=0\nj=0\nm1=0\nq1=False\nq2=False\nwhile i!=k:\n    if a[j][1]!='R':\n        m1+=a[j][0]\n        g=j+0\n        if a[j][1]=='W':\n            q1=True\n        else:\n            q2=True\n        i+=1\n    j+=1\n    if j==n and i!=k:\n        m1=0\n        break\nelse:\n    if not (q1 and q2):\n        m1-=a[g][0]\n        for i in range(g+1,n):\n            if q1 and a[i][1]=='O' or q2 and a[i][1]=='W':\n                m1+=a[i][0]\n                break\n        else:\n            m1=0\ni=0\nj=0\nm2=0\nq1=False\nq2=False\nwhile i!=k:\n    if a[j][1]!='W':\n        m2+=a[j][0]\n        g=j+0\n        if a[j][1]=='R':\n            q1=True\n        else:\n            q2=True\n        i+=1\n    j+=1\n    if j==n and i!=k:\n        m2=0\n        break\nelse:\n    if not (q1 and q2):\n        m2-=a[g][0]\n        for i in range(g+1,n):\n            if q1 and a[i][1]=='O' or q2 and a[i][1]=='R':\n                m2+=a[i][0]\n                break\n        else:\n            m2=0\nif m1 or m2:\n    print(max(m1,m2))\nelse:\n    print(-1)\n    \n    \n    \n        \n", "n,k=list(map(int,input().split()))\nb=list(map(int,input().split()))\ns=input()\nr=[]\nw=[]\no=[]\n\nfor i in range(n):\n    if s[i]=='W':\n        w.append(b[i])\n    elif s[i]=='O':\n        o.append(b[i])\n    else:\n        r.append(b[i])\nif k==1:\n    print(-1)\n    raise SystemExit\nr=sorted(r)\nw=sorted(w)\no=sorted(o)\nr=r[::-1]\nw=w[::-1]\no=o[::-1]\ns1=0\ns2=0\nif len(o)!=0 and len(w)!=0 and len(o)+len(w)>=k:\n    s1+=w[0]+o[0]\n    j=2\n    i=1\n    e=1\n    while j<k:\n        if i==len(o) or (e<len(w) and w[e]>o[i]):\n            s1+=w[e]\n            e+=1\n        else:\n            s1+=o[i]\n            i+=1\n        j+=1\nif len(o)!=0 and len(r)!=0 and len(o)+len(r)>=k:\n    s2+=o[0]+r[0]\n    j=2\n    i=1\n    e=1\n    while j<k:\n        if i==len(o) or (e<len(r) and r[e]>o[i]):\n            s2+=r[e]\n            e+=1\n        else:\n            s2+=o[i]\n            i+=1\n        j+=1\nif max(s1,s2)==0:\n    print(-1)\nelse:\n    print(max(s1,s2))\n", "n, k = list(map(int, input().split()))\n\na = [int(i) for i in input().split()]\n\nw = []\nr = []\no = []\n\ns = input()\n\nfor i in range(n):\n    if s[i] == 'O':\n        o.append(a[i])\n    if s[i] == 'R':\n        r.append(a[i])\n    if s[i] == 'W':\n        w.append(a[i])\n\no.sort(), w.sort(), r.sort()\n\nw = w[::-1]\no = o[::-1]\nr = r[::-1]\n\nans = -1\ni = 0\nj = 0\ncntf = 0\ncnts = 0\nnw = 0\n\nwhile (cntf + cnts) < k and (i < len(w) or j < len(o)):\n    if(i >= len(w)):\n        nw += o[j]\n        j += 1\n        cnts += 1\n    elif(j >= len(o)):\n        nw += w[i]\n        i += 1\n        cntf += 1\n    else:\n        if(w[i] > o[j]):\n            nw += w[i]\n            i += 1\n            cntf += 1\n        else:\n            nw += o[j]\n            j += 1\n            cnts += 1\n    \n    if(cntf + cnts == k - 1):\n        if(cntf == 0 and len(w) != 0):\n            nw += w[i]\n            cntf += 1\n        elif(cnts == 0 and len(o) != 0):\n            nw += o[j]\n            cnts += 1\n\n\nif(cntf + cnts == k and cntf != 0 and cnts != 0):\n    ans = max(ans, nw)\n\n\ni = 0\nj = 0\ncntf = 0\ncnts = 0\nnw = 0\n\nwhile (cntf + cnts < k) and (i < len(r) or j < len(o)):\n    if(i >= len(r)):\n        nw += o[j]\n        j += 1\n        cnts += 1\n    elif(j >= len(o)):\n        nw += r[i]\n        i += 1\n        cntf += 1\n    else:\n        if(r[i] > o[j]):\n            nw += r[i]\n            i += 1\n            cntf += 1\n        else:\n            nw += o[j]\n            j += 1\n            cnts += 1\n    \n    if(cntf + cnts == k - 1):\n        if(cntf == 0 and len(r) != 0):\n            nw += r[i]\n            cntf += 1\n        elif(cnts == 0 and len(o) != 0):\n            nw += o[j]\n            cnts += 1\n\nif(cntf + cnts == k and cntf != 0 and cnts != 0):\n    ans = max(ans, nw)\n\nprint(ans)\n"]