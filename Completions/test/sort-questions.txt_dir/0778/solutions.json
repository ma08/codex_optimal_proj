["def check(l, r, a, b):\n    if a < 0 or b >= 2 * N:\n        return 0\n    def val(p):\n        if p in [a, b]: return '0'\n        if l <= p and p < r: return '1'\n        return '-1'\n    for i in range(K):\n        x, y = val(A[i]), val(C[i])\n        if A[i] in [a, b] or C[i] in [a, b]:\n            if not eval(x + B[i] + y):\n                return 0\n    return 1\n\nN, K = list(map(int, input().split()))\ntmp = [input().split() for i in range(K)]\ntry: A, B, C = list(zip(*tmp))\nexcept: A, B, C = [], [], []\nA = [int(x) - 1 for x in A]\nB = ['==' if x is '=' else x for x in B]\nC = [int(x) - 1 for x in C]\n\ndp = []\nfor i in range(N + 1):\n    dp.append([0] * (2 * N + 1))\n\ndp[N][0] = 1\nfor i in range(N, 0, -1):\n    for j in range(0, 2 * (N - i) + 3):\n        d, k = 0, j + 2 * i - 2\n        if check(j, k, j - 2, j - 1): d += dp[i][j - 2]\n        if check(j, k, j - 1, k): d += dp[i][j - 1]\n        if check(j, k, k, k + 1): d += dp[i][j]\n        dp[i - 1][j] = d\n\nprint(sum(dp[0]) // 3)\n", "n,k = map(int,input().split())\nn*=2\nn+=2\nl,le,e = [[] for i in range(n)],[[] for i in range(n)],[0]*n\nok = 1\nfor i in range(k):\n    a,c,b = input().split()\n    a,b = int(a), int(b)\n    if c==\"=\":\n        if a==b:\n            continue\n        if (e[a] and e[a]!=b) or (e[b] and e[b]!=a):\n             ok = 0\n        e[a], e[b] = b,a\n    if c==\"<\":\n        a,b,c = b,a,\">\"\n    if c==\">\":\n        l[a].append(b)\n    if c==\"<=\":\n        a,b,c = b,a,\">=\"\n    if c==\">=\":\n        le[a].append(b)\n\ndef check(i, j, a, b):\n    if e[a] and e[a]!=a and e[a]!=b:\n        return 0\n    for x in l[a]:\n        if x>i and x<j:\n            return 0\n    for x in le[a]:\n        if x>i and x<j and x!=a and x!=b:\n            return 0\n    return 1\n\ndp = [[0]*n for i in range(n)]\ndp[0][n-1] = 1\nans = 0\nfor i in range(n):\n    for j in range(n-1,i,-1):\n        if i+1==j:\n            ans+=dp[i][j]\n        elif ((i+j)%2)==1:\n            if check(i,j,i+1,i+2) and check(i,j,i+2,i+1):\n                dp[i+2][j]+=dp[i][j]\n            if i+3<j and check(i,j,j-2,j-1) and check(i,j,j-1,j-2):\n                dp[i][j-2]+=dp[i][j]\n            if i+3<j and check(i,j,i+1,j-1) and check(i,j,j-1,i+1):\n                dp[i+1][j-1]+=dp[i][j]\n\nprint(ans if ok else 0)", "n,k = map(int,input().split())\nn*=2\nn+=2\nl,le,e = [[] for i in range(n)],[[] for i in range(n)],[0]*n\nok = 1\nfor i in range(k):\n a,c,b = input().split()\n a,b = int(a), int(b)\n if c==\"=\":\n  if a==b:\n   continue\n  if (e[a] and e[a]!=b) or (e[b] and e[b]!=a):\n   ok = 0\n  e[a], e[b] = b,a\n if c==\"<\":\n  a,b,c = b,a,\">\"\n if c==\">\":\n  l[a].append(b)\n if c==\"<=\":\n  a,b,c = b,a,\">=\"\n if c==\">=\":\n  le[a].append(b)\n\ndef check(i, j, a, b):\n if e[a] and e[a]!=a and e[a]!=b:\n  return 0\n for x in l[a]:\n  if x>i and x<j:\n   return 0\n for x in le[a]:\n  if x>i and x<j and x!=a and x!=b:\n   return 0\n return 1\n\ndp = [[0]*n for i in range(n)]\ndp[0][n-1] = 1\nans = 0\nfor i in range(n):\n for j in range(n-1,i,-1):\n  if i+1==j:\n   ans+=dp[i][j]\n  elif ((i+j)%2)==1:\n   if check(i,j,i+1,i+2) and check(i,j,i+2,i+1):\n    dp[i+2][j]+=dp[i][j]\n   if i+3<j and check(i,j,j-2,j-1) and check(i,j,j-1,j-2):\n    dp[i][j-2]+=dp[i][j]\n   if i+3<j and check(i,j,i+1,j-1) and check(i,j,j-1,i+1):\n    dp[i+1][j-1]+=dp[i][j]\n\nprint(ans if ok else 0)", "import sys\n#sys.stdin = open('input.txt', 'r')\n#sys.stdout = open('output.txt', 'w')\n\nn, k = list(map(int, input().split()))\ndp = [[0] * 2 * n for i in range(2 * n)]\n\nrequire = list()\n\ninf = int(1e5)\n\norder = [inf] * 2 * n\n\nfor i in range(k):\n\trequire.append(input().split())\n\trequire[i][0] = int(require[i][0]) - 1\n\tif require[i][1] == '=':\n\t\trequire[i][1] = '=='\n\trequire[i][2] = int(require[i][2]) - 1\n\ndef Solve(left, right, h):\n\tnonlocal dp, require, order\n\tfor element in require:\n\t\tfirst = order[element[0]]\n\t\tsecond = order[element[2]]\n\t\tstring = str(first) + element[1] + str(second)\n\t\tif first == second == inf and left + 1 != right:\n\t\t\tcontinue\n\t\tif eval(string) == False:\n\t\t\treturn 0\n\tif dp[left][right] != 0:\n\t\treturn dp[left][right]\n\tif left + 1 == right:\n\t\tdp[left][right] = 1\n\t\treturn 1\n\torder[left] = h\n\torder[left + 1] = h\n\tdp[left][right] = Solve(left + 2, right, h + 1)\n\torder[left + 1] = inf\n\torder[right] = h\n\tdp[left][right] += Solve(left + 1, right - 1, h + 1)\n\torder[left] = inf\n\torder[right - 1] = h\n\tdp[left][right] += Solve(left, right - 2, h + 1)\n\torder[right - 1] = inf\n\torder[right] = inf\n\treturn dp[left][right]\n\nprint(Solve(0, 2 * n - 1, 0))\n", "def check(l, r, a, b):\n    if a < 0 or b >= 2 * N:\n        return 0\n    def val(p):\n        if p in [a, b]: return '0'\n        if l <= p and p < r: return '1'\n        return '-1'\n    for i in range(K):\n        x, y = val(A[i]), val(C[i])\n        if A[i] in [a, b] or C[i] in [a, b]:\n            if not eval(x + B[i] + y):\n                return 0\n    return 1\n\nN, K = map(int, input().split())\ntmp = [input().split() for i in range(K)]\ntry: A, B, C = zip(*tmp)\nexcept: A, B, C = [], [], []\nA = [int(x) - 1 for x in A]\nB = ['==' if x is '=' else x for x in B]\nC = [int(x) - 1 for x in C]\n\ndp = []\nfor i in range(N + 1):\n    dp.append([0] * (2 * N + 1))\n\ndp[N][0] = 1\nfor i in range(N, 0, -1):\n    for j in range(0, 2 * (N - i) + 3):\n        d, k = 0, j + 2 * i - 2\n        if check(j, k, j - 2, j - 1): d += dp[i][j - 2]\n        if check(j, k, j - 1, k): d += dp[i][j - 1]\n        if check(j, k, k, k + 1): d += dp[i][j]\n        dp[i - 1][j] = d\n\nprint(sum(dp[0]) // 3)", "def check(l, r, a, b):\n    if a < 0 or b >= 2 * N:\n        return 0\n    def val(p):\n        if p in [a, b]: return '0'\n        if l <= p and p < r: return '1'\n        return '-1'\n    for i in range(K):\n        x, y = val(A[i]), val(C[i])\n        if A[i] in [a, b] or C[i] in [a, b]:\n            if not eval(x + B[i] + y):\n                return 0\n    return 1\n\nN, K = list(map(int, input().split()))\ntmp = [input().split() for i in range(K)]\ntry: A, B, C = list(zip(*tmp))\nexcept: A, B, C = [], [], []\nA = [int(x) - 1 for x in A]\nB = ['==' if x is '=' else x for x in B]\nC = [int(x) - 1 for x in C]\n\ndp = []\nfor i in range(N + 1):\n    dp.append([0] * (2 * N + 1))\n\ndp[N][0] = 1\nfor i in range(N, 0, -1):\n    for j in range(0, 2 * (N - i) + 3):\n        d, k = 0, j + 2 * i - 2\n        if check(j, k, j - 2, j - 1): d += dp[i][j - 2]\n        if check(j, k, j - 1, k): d += dp[i][j - 1]\n        if check(j, k, k, k + 1): d += dp[i][j]\n        dp[i - 1][j] = d\n\nprint(sum(dp[0]) // 3)\n", "def check(l, r, a, b):\n    if a < 0 or b >= 2 * N:\n        return 0\n    def val(p):\n        if p in [a, b]: return '0'\n        if l <= p and p < r: return '1'\n        return '-1'\n    for i in range(K):\n        x, y = val(A[i]), val(C[i])\n        if A[i] in [a, b] or C[i] in [a, b]:\n            if not eval(x + B[i] + y):\n                return 0\n    return 1\n\nN, K = list(map(int, input().split()))\ntmp = [input().split() for i in range(K)]\ntry: A, B, C = list(zip(*tmp))\nexcept: A, B, C = [], [], []\nA = [int(x) - 1 for x in A]\nB = ['==' if x is '=' else x for x in B]\nC = [int(x) - 1 for x in C]\n\ndp = []\nfor i in range(N + 1):\n    dp.append([0] * (2 * N + 1))\n\ndp[N][0] = 1\nfor i in range(N, 0, -1):\n    for j in range(0, 2 * (N - i) + 3):\n        d, k = 0, j + 2 * i - 2\n        if check(j, k, j - 2, j - 1): d += dp[i][j - 2]\n        if check(j, k, j - 1, k): d += dp[i][j - 1]\n        if check(j, k, k, k + 1): d += dp[i][j]\n        dp[i - 1][j] = d\n\nprint(sum(dp[0]) // 3)\n", "def check(l, r, a, b):\n    if a < 0 or b >= 2 * N:\n        return 0\n    def val(p):\n        if p in [a, b]: return '0'\n        if l <= p and p < r: return '1'\n        return '-1'\n    for i in range(K):\n        x, y = val(A[i]), val(C[i])\n        if A[i] in [a, b] or C[i] in [a, b]:\n            if not eval(x + B[i] + y):\n                return 0\n    return 1\n\nN, K = list(map(int, input().split()))\ntmp = [input().split() for i in range(K)]\ntry: A, B, C = list(zip(*tmp))\nexcept: A, B, C = [], [], []\nA = [int(x) - 1 for x in A]\nB = ['==' if x is '=' else x for x in B]\nC = [int(x) - 1 for x in C]\n\ndp = []\nfor i in range(N + 1):\n    dp.append([0] * (2 * N + 1))\n\ndp[N][0] = 1\nfor i in range(N, 0, -1):\n    for j in range(0, 2 * (N - i) + 3):\n        d, k = 0, j + 2 * i - 2\n        if check(j, k, j - 2, j - 1): d += dp[i][j - 2]\n        if check(j, k, j - 1, k): d += dp[i][j - 1]\n        if check(j, k, k, k + 1): d += dp[i][j]\n        dp[i - 1][j] = d\n\nprint(sum(dp[0]) // 3)\n", "def check(l, r, a, b):\n    if a < 0 or b >= 2 * N:\n        return 0\n    def val(p):\n        if p in [a, b]: return '0'\n        if l <= p and p < r: return '1'\n        return '-1'\n    for i in range(K):\n        x, y = val(A[i]), val(C[i])\n        if A[i] in [a, b] or C[i] in [a, b]:\n            if not eval(x + B[i] + y):\n                return 0\n    return 1\n\nN, K = list(map(int, input().split()))\ntmp = [input().split() for i in range(K)]\ntry: A, B, C = list(zip(*tmp))\nexcept: A, B, C = [], [], []\nA = [int(x) - 1 for x in A]\nB = ['==' if x is '=' else x for x in B]\nC = [int(x) - 1 for x in C]\n\ndp = []\nfor i in range(N + 1):\n    dp.append([0] * (2 * N + 1))\n\ndp[N][0] = 1\nfor i in range(N, 0, -1):\n    for j in range(0, 2 * (N - i) + 3):\n        d, k = 0, j + 2 * i - 2\n        if check(j, k, j - 2, j - 1): d += dp[i][j - 2]\n        if check(j, k, j - 1, k): d += dp[i][j - 1]\n        if check(j, k, k, k + 1): d += dp[i][j]\n        dp[i - 1][j] = d\n\nprint(sum(dp[0]) // 3)\n", "def check(l, r, a, b):\n    if a < 0 or b >= 2 * N:\n        return 0\n    def val(p):\n        if p in [a, b]: return '0'\n        if l <= p and p < r: return '1'\n        return '-1'\n    for i in range(K):\n        x, y = val(A[i]), val(C[i])\n        if A[i] in [a, b] or C[i] in [a, b]:\n            if not eval(x + B[i] + y):\n                return 0\n    return 1\n\nN, K = list(map(int, input().split()))\ntmp = [input().split() for i in range(K)]\ntry: A, B, C = list(zip(*tmp))\nexcept: A, B, C = [], [], []\nA = [int(x) - 1 for x in A]\nB = ['==' if x is '=' else x for x in B]\nC = [int(x) - 1 for x in C]\n\ndp = []\nfor i in range(N + 1):\n    dp.append([0] * (2 * N + 1))\n\ndp[N][0] = 1\nfor i in range(N, 0, -1):\n    for j in range(0, 2 * (N - i) + 3):\n        d, k = 0, j + 2 * i - 2\n        if check(j, k, j - 2, j - 1): d += dp[i][j - 2]\n        if check(j, k, j - 1, k): d += dp[i][j - 1]\n        if check(j, k, k, k + 1): d += dp[i][j]\n        dp[i - 1][j] = d\n\nprint(sum(dp[0]) // 3)\n", "def check(l, r, a, b):\n    if a < 0 or b >= 2 * N:\n        return 0\n    def val(p):\n        if p in [a, b]: return '0'\n        if l <= p and p < r: return '1'\n        return '-1'\n    for i in range(K):\n        x, y = val(A[i]), val(C[i])\n        if A[i] in [a, b] or C[i] in [a, b]:\n            if not eval(x + B[i] + y):\n                return 0\n    return 1\n\nN, K = list(map(int, input().split()))\ntmp = [input().split() for i in range(K)]\ntry: A, B, C = list(zip(*tmp))\nexcept: A, B, C = [], [], []\nA = [int(x) - 1 for x in A]\nB = ['==' if x is '=' else x for x in B]\nC = [int(x) - 1 for x in C]\n\ndp = []\nfor i in range(N + 1):\n    dp.append([0] * (2 * N + 1))\n\ndp[N][0] = 1\nfor i in range(N, 0, -1):\n    for j in range(0, 2 * (N - i) + 3):\n        d, k = 0, j + 2 * i - 2\n        if check(j, k, j - 2, j - 1): d += dp[i][j - 2]\n        if check(j, k, j - 1, k): d += dp[i][j - 1]\n        if check(j, k, k, k + 1): d += dp[i][j]\n        dp[i - 1][j] = d\n\nprint(sum(dp[0]) // 3)\n", "def check(l, r, a, b):\n    if a < 0 or b >= 2 * N:\n        return 0\n    def val(p):\n        if p in [a, b]: return '0'\n        if l <= p and p < r: return '1'\n        return '-1'\n    for i in range(K):\n        x, y = val(A[i]), val(C[i])\n        if A[i] in [a, b] or C[i] in [a, b]:\n            if not eval(x + B[i] + y):\n                return 0\n    return 1\n\nN, K = list(map(int, input().split()))\ntmp = [input().split() for i in range(K)]\ntry: A, B, C = list(zip(*tmp))\nexcept: A, B, C = [], [], []\nA = [int(x) - 1 for x in A]\nB = ['==' if x is '=' else x for x in B]\nC = [int(x) - 1 for x in C]\n\ndp = []\nfor i in range(N + 1):\n    dp.append([0] * (2 * N + 1))\n\ndp[N][0] = 1\nfor i in range(N, 0, -1):\n    for j in range(0, 2 * (N - i) + 3):\n        d, k = 0, j + 2 * i - 2\n        if check(j, k, j - 2, j - 1): d += dp[i][j - 2]\n        if check(j, k, j - 1, k): d += dp[i][j - 1]\n        if check(j, k, k, k + 1): d += dp[i][j]\n        dp[i - 1][j] = d\n\nprint(sum(dp[0]) // 3)\n"]