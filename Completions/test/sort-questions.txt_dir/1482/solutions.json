["#CF Round 150. Div II Prob. A - Dividing Orange\nimport sys\n\nIn = sys.stdin\nn, k = [int(x) for x in In.readline().split()]\narr, s, cnt = [int(x) for x in In.readline().split()], set(), 1;\ns.update(arr)\nfor i in range(k):\n    c = [arr[i]]\n    for j in range(n - 1):\n        while (cnt in s):\n            cnt += 1;\n        c.append(cnt)\n        cnt += 1;\n    sep = ' '\n    print (sep.join(map(str, c)))", "import sys\nf = sys.stdin\n#f = open(\"input.txt\", \"r\")\nn, k = map(int, f.readline().strip().split())\na = [int(i) for i in f.readline().strip().split()]\nnum = [True] * n*k\nfor i in a:\n    num[i-1] = False\nfor i in a:\n    print(i, end=\" \")\n    cnt = 1\n    for j in range(1, n*k+1):\n        if cnt < n:\n            if num[j-1]:\n                num[j-1] = False\n                print(j, end=\" \")\n                cnt += 1\n        else:\n            break\n    print()", "k, n = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = a + [n * k + 1]\nb.sort()\nj = 1\nt = []\nfor i in b:\n    t += list(range(j, i))\n    j = i + 1\nx = 0\nk -= 1\nfor i in range(n):\n    print(str(a[i]) + ' ' + ' '.join(str(j) for j in t[x: x + k]))\n    x += k\n", "##l = [int(item) for item in input().split()]\ndef children_to_slices(n, k, l):\n    kid_to_slice = [[]] * (k+1)\n    remaining = set([i for i in range(1, (n*k)+1)])\n\n    # Give eah kid what he wants\n    for item in l:\n        kid_to_slice[item[0]] = kid_to_slice[item[0]] + [item[1]]\n        remaining.remove(item[1])\n\n    # fill each kid's inventory\n    for i in range(1, k+1):\n        while len(kid_to_slice[i]) < n:\n            kid_to_slice[i] = kid_to_slice[i] + [remaining.pop()]\n\n    return kid_to_slice\n\nfirst_line = input().split()\nn = int(first_line[0])\nk = int(first_line[1])\nl = []\nassignments = [int(item) for item in input().split()]\nfor i in range(len(assignments)):\n        l.append((i+1, assignments[i]))\n\nm = children_to_slices(n, k, l)\nfor i in range(1, k+1):\n    output = \"\"\n    for item in m[i]:\n        output += str(item) + \" \"\n    print(output)\n", "n,k=map(int,input().split())\n\nL=list(map(int,input().split()))\n\nTaken=[False]*(n*k+1)\n\nfor item in L:\n    Taken[item]=True\nind=1\nfor i in range(k):\n    cnt=1\n    print(L[i],end=\" \")\n    \n    while(cnt<n):\n        while(Taken[ind]):\n            ind+=1\n        \n        print(ind,end=\" \")\n        ind+=1\n        cnt+=1\n    print()\n", "n, k = map(int,input().split())\na = list(map(int,input().split()))\nb = [[] for i in range(0,k+1)]\nu = [0]*(n*k+1)\nfor i in range(k):\n    b[i].append(a[i])\n    u[a[i]]=1\np = 0;\nfor i in range (1,n*k+1):\n    if u[i]==0:\n        u[i]=1\n        b[p].append(i)\n    if len(b[p]) == n:\n        p += 1\nfor i in range(k):\n    for j in range(n):\n        print(b[i][j],end=' ')\n    print()\n", "import sys\nimport math\n  \nn, k = [int(x) for x in (sys.stdin.readline()).split()]\nan = [int(x) for x in (sys.stdin.readline()).split()]\n\nk = [0] * (n * k) \nfor i in an:\n    k[i - 1] = 1\n \nj = 0   \nfor i in an:\n    v = []\n    count = 0\n    \n    while(count != n - 1):\n        if(k[j] != 1):\n            v.append(str(j + 1))\n            count += 1\n        j += 1\n    v.append(str(i))\n    print(\" \".join(v))", "n, k = (int(x) for x in input().split())\na = [int(x) for x in input().split()]\ns = set(range(1, n * k + 1))\nfor ai in a:\n    s.remove(ai)\nfor ai in a:\n    print(ai, end='')\n    for i in range(n - 1):\n        print(' ' + str(s.pop()), end='')\n    print()", "c = 1\n\n\ndef main():\n    n, k = map(int, input().split())\n    l = list(range(1, n * k + 1))\n    aa = list(map(int, input().split()))\n    for a in aa:\n        l[a - 1] = 0\n    res, it = [], iter(filter(None, l))\n    n -= 1\n    for a in aa:\n        res.append(a)\n        for _ in range(n):\n            res.append(next(it))\n        print(' '.join(map(str, res)))\n        res.clear()\n\n\ndef __starting_point():\n    main()\n__starting_point()", "def main():\n    n, k = map(int, input().split())\n    l = list(range(1, n * k + 1))\n    aa = list(map(int, input().split()))\n    for a in aa:\n        l[a - 1] = False\n    l = list(filter(None, l))\n    n -= 1\n    for i, a in enumerate(aa):\n        print(a, *l[i * n:(i + 1) * n])\n\n\ndef __starting_point():\n    main()\n__starting_point()", "I=lambda:map(int,input().split())\nn,k=I();a=list(I());b=list(range(1,n*k+1))\nfor i in a:b.remove(i)\nfor i in range(k):\n    print(' '.join(map(str,[a[i]]+b[i*(n-1):i*(n-1)+n-1])))", "n, k = [int(i) for i in input().split()]\ns = set(range(1,n*k+1))\na = [set([int(i)]) for i in input().split()]\nfor aa in a:\n    s -= aa\nfor i in range(k):\n    for j in range(n-len(a[i])):\n        a[i].add(s.pop())\n    print(' '.join([str(j) for j in list(a[i])]))\n", "n,m=map(int,input().split())\na=list(map(int,input().split()))\no=[]\nfor i in range(n*m):o.append(0)\nfor i in range(m):o[a[i]-1]=i+1\nfor i in range(m):\n\tfor j in range(n-1):\n\t\tfor k in range(n*m):\n\t\t\tif(o[k]==0):\n\t\t\t\tprint(k+1,end=' ')\n\t\t\t\to[k]=i+1\n\t\t\t\tbreak\n\tprint(a[i],end='\\n')\t\n", "n, k = [int(i) for i in input().split()]\ndata = [int(i) for i in input().split()]\nbox = [0 for i in range(n * k)]\na, b = 0, n * k\nfor i in range(k):\n    box[data[i] - 1] = 1\n    print(data[i], end = ' ')\n    c = 1\n    for j in range(a, b):\n        if box[j] == 0 and c < n and (not j + 1 in data):\n            print(j + 1, end = ' ')\n            box[j] = 1\n            c += 1\n        elif c == n:\n            a = j\n            break\n    print()\n            \n            \n    ", "n,k=[int(i) for i in input().split()]\nsegment=list(range(1,n*k+1))\nfor i in range(n*k):\n    segment[i]=str(segment[i])\n\nnum=[int(i) for i in input().split()]\n\nfor i in num:\n    segment.remove(str(i))\n\nt=0\nfor i in num:\n    print(i,' '.join(segment[t:t+n-1]))\n    t+=n-1\n", "n,k=map(int,input().split())\ncompulsory=list(map(int,input().split()))\n\nanswer=[[] for _ in range(1000)]\nmark=[False for _ in range(1000)]\n\n\nfor i in range(len(compulsory)):\n    mark[compulsory[i]]=True\n    answer[i].append(compulsory[i])\n\n#print(answer)   \nk1=0\nj=0\nfor i in range(1,n*k+1):\n    if mark[i]:\n        continue\n    answer[k1].append(i)\n    j+=1\n    if j%(n-1)==0:\n        k1+=1\n\nfor i in range(k):\n    for temp in answer[i]:\n        print(temp,end=\" \")\n    print()\n    \n", "n,k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\ns = [False] * (n*k+1)\nfor ai in a:\n    s[ai]=True\n\nfor kid in range(k):\n    curN = 1\n    print(a[kid],end=\" \")\n    for num in range(n-1):\n        while s[curN]: curN+=1\n        s[curN] = True\n        print(curN,end=\" \")\n    print(\"\")\n    \n        \n    \n\n\n\n", "(n, k) = list(map(int, input().split(' ')))\na = list(input().split(' '))\ns = set(a)\n\no = []\n\nfor i in range(k):\n    o.append([a[i]])\n\nfor i in range(n * k):\n    num = str(i + 1)\n    j = 0\n    if num not in s:\n        while len(o[j]) == n:\n            j += 1\n        o[j].append(num)\n\nfor x in o:\n    print(' '.join(x))\n", "n,k=input().strip().split(' ')\nn,k=(int(n),int(k))\nlist1=list(map(int,input().strip().split(' ')))\nls=[x for x in range(1,n*k+1)]\nfor i in range(k):\n    ls.remove(list1[i])\nlist2=[]\ni=0\nj=0\nwhile j<k:\n    print(*(ls[i:i+n-1]+[list1[j]]))\n    i+=(n-1)\n    j+=1", "arr = input().split()\nn = int(arr[0])\nk = int(arr[1])\narr = input().split()\ns = set()\nfor ch in arr:\n\ts.add(int(ch))\nfor ch in arr:\n\tprint(ch, end = ' ')\n\tctr = 0\n\tptr = 1\n\twhile ctr < n - 1:\n\t\tif ptr not in s:\n\t\t\tprint(str(ptr), end = ' ')\n\t\t\tctr += 1\n\t\t\ts.add(ptr)\n\t\tptr += 1\n\tprint('')\n\t"]