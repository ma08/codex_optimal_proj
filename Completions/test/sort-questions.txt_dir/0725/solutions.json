["\nn, m = list(map(int, input().split()))\nfor i in range(n):\n    for j in input().split():\n        if j in \"CMY\":\n            print(\"#Color\")\n            return\nprint(\"#Black&White\")\n", "n, m= [int(i) for i in input().split()]\nfor i in range(n):\n\ts = input().split()\n\tif \"Y\" in s or \"C\" in s or \"M\" in s:\n\t\tprint(\"#Color\")\n\t\tbreak\nelse:\n\tprint(\"#Black&White\")\n", "\n\nnbLig,nbCol=list(map(int,input().split()))\ncouleurs=[\"C\",\"M\",\"Y\",\"W\",\"G\",\"B\"]\ncompteur=[0]*6\nfor lig in range(nbLig):\n    ligne=input().split()\n    for element in ligne:\n        compteur[couleurs.index(element)]+=1\n\nif compteur[0]!=0 or compteur[1]!=0 or compteur[2]!=0:\n    print(\"#Color\")\nelse:\n    print(\"#Black&White\")\n", "def main():\n    n, m = map(int, input().split())\n    photo = [input().split() for i in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if photo[i][j] in 'CMY':\n                print(\"#Color\")\n                return\n    print(\"#Black&White\")\n        \nmain()", "n, m = map(int, input().split())\nfl = False\nfor i in range(n):\n    line = input()\n    if 'C' in line or 'M' in line or 'Y' in line:\n        fl = True\nif fl:\n    print('#Color')\nelse:\n    print('#Black&White')", "n, m = list(map(int, str.split(input())))\nfor _ in range(n):\n\n    s = input()\n    for color in \"CMY\":\n\n        if color in s:\n\n            print(\"#Color\")\n            return\n\nprint(\"#Black&White\")\n", "import sys\n\nn, m = list(map(int, input().split()))\n\nfor i in range(n):\n    for c in input().split():\n        if c not in ['W', 'G', 'B']:\n            print(\"#Color\")\n            return\n\nprint(\"#Black&White\")\n\n\n", "n, m = list(map(int,input().split()))\ncolor = False\nfor _ in range(n):\n    l = input()\n    for c in ['C', 'M', 'Y']:\n        if c in l:\n            color = True\nprint('#Color' if color else '#Black&White')\n", "from sys import stdin, exit\n\nn, m = list(int(x) for x in stdin.readline().split())\nfor _ in range(n):\n    line = stdin.readline().split()\n    for c in line:\n        if c in 'CMY':\n            print('#Color')\n            return\nprint('#Black&White')\n", "n, m = [int(x) for x in input().strip().split()]\ncolor = False\nfor it in range(n):\n    line = [x for x in input().strip().split()]\n    if 'M' in line or 'Y' in line or 'C' in line:\n        print(\"#Color\")\n        color = True\n        break\nif not color:\n    print(\"#Black&White\")\n", "r,c=list(map(int,input().split()))\nip=[]\nfor i in range(r):\n    ip+=list(input().split())\n\nif 'C' in ip or 'Y' in ip or 'M' in ip:\n    print('#Color')\nelse:\n    print('#Black&White')\n", "line1=input().split()\nn=int(line1[0])\nm=int(line1[1])\nblack=True\nfor i in range (n):\n    line=input().split()\n    for c in line:\n        if c==\"W\" or c==\"B\" or c==\"G\":\n            pass\n        else:\n            black=False\nif black:\n    print (\"#Black&White\")\nelse:\n    print(\"#Color\")\n", "CA = ['C', 'M', 'Y']\n\n\ndef solve():\n    n, m = list(map(int, input().split()))\n    c = [input().split() for _ in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if c[i][j] in CA:\n                print('#Color')\n                return\n    print('#Black&White')\n\n\ndef main():\n    solve()\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\n\nfin = sys.stdin\nfout = sys.stdout\nn, m = list(map(int, fin.readline().split()))\na = [0] * n\nfor i in range(n):\n    a[i] = list(fin.readline().split())\nfor i in range(n):\n    for j in range(m):\n        if a[i][j] == 'C' or a[i][j] == 'M' or a[i][j] == 'Y':\n            fout.write('#Color')\n            return\nfout.write('#Black&White')\n", "import sys\n\n\ndef main():\n    \n    n, m = map(int, sys.stdin.readline().split())\n    \n    black = True\n    for i in range(n):\n        s = sys.stdin.readline()\n        if 'C' in s or 'M' in s or 'Y' in s:\n            black = False   \n      \n    if black:\n        print(\"#Black&White\")\n    else :\n        print(\"#Color\")\n\nmain()", "n, m = list(map(int, input().split()))\nflag = True\nfor i in range(n):\n    a = input().split()\n    for j in a:\n        if j == 'C' or j == 'M' or j == 'Y':\n            flag = False\n\nif flag:\n    print(\"#Black&White\")\nelse:\n    print(\"#Color\")\n", "n, m = list(map(int, input().split(' ')))\ncolor = ['B', 'W', 'G']\nfor i in range(n):\n    x = input().split(' ')\n    for i in x:\n        if i not in color:\n            print('#Color')\n            return\nprint('#Black&White')\n", "n, m = [int(i) for i in input().split()]\n\nphoto = \"#Black&White\"\n\nfor i in range(n):\n    s = input()\n    if \"C\" in s or \"M\" in s or \"Y\" in s:\n        photo = \"#Color\"\n        break\n\nprint(photo)\n", "N, M = list(map(int, input().split()))\nmat = []\nfor i in range(N):\n    mat.append(input().split())\nwgb = \"WGB\"\nflg = False\nfor i in range(N):\n    for j in range(M):\n        if mat[i][j] not in wgb:\n            flg = True\n            break\n    if flg:\n        break\nif flg:\n    print(\"#Color\")\nelse:\n    print(\"#Black&White\")\n", "import math\n\nn,m=list(map(int,input().split()))\nf=0\nfor i in range(n):\n    v2=[j for j in input().split()]\n    for j in v2:\n        if(j=='C' or j=='M' or j=='Y'):\n            f=1\n    \nif(f==1):\n    print(\"#Color\")\nelse:\n    print(\"#Black&White\")\n", "#!/usr/bin/env python3\n\nfrom sys import stdin\n\n\ndef main():\n    n, m = stdin_get_ints_from_line()\n\n    colored = ['C', 'M', 'Y']\n\n    for i in range(n):\n        pixels = stdin_get_string_from_line().split(' ')\n        for pixel in pixels:\n            if pixel in colored:\n                print('#Color')\n                return\n    print('#Black&White')\n\n    return\n\n\ndef stdin_get_ints_from_line():\n    return (int(x) for x in stdin.readline().strip().split(' '))\n\n\ndef stdin_get_ints_list_from_line():\n    return list(int(x) for x in stdin.readline().strip().split(' '))\n\n\ndef stdin_get_string_from_line():\n    return stdin.readline().strip()\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n,m = map(int, input().split())\n\nss = set()\n\nfor i in range(n):\n    s = set(input().split())\n    ss = ss.union(s)\n\nif len(ss.intersection(set(['C','M','Y'])))>0:\n    print(\"#Color\")\nelse:\n    print(\"#Black&White\")", "import sys\nsys.setrecursionlimit(20000)\n\nfrom collections import Counter\nfrom math import ceil, floor, factorial, fsum, isinf, exp, log, log10, log2, isfinite\nfrom itertools import product\n\ndef getlist(tcast):\n\treturn [tcast(x) for x in input().strip().split(' ')]\ndef getval(tcast):\n\treturn tcast(input().strip())\ndef getmatrix(r, tcast):\n\tmat = []\n\tfor i in range(r):\n\t\tmat.append(getlist(tcast))\n\treturn mat\n\ndef isodd(n):\n    return n & 1\ndef numdigits(n):\n    return len(str(n)) - (1 if n < 0 else 0)\ndef primesupto(n):\n    isp = [True] * (n + 1)\n    isp[0], isp[1] = False, False\n    for i, x in enumerate(isp): #for each number\n        if x: #found a prime\n            mults = i * i\n            while mults <= n:\n                isp[mults] = False\n                mults += i\n    return isp\ndef maxarrays(a, b):\n    return [max(x, y) for x, y in zip(a, b)]\n\nnr, nc = getlist(int)\nmat = getmatrix(nr, str)\n\n#print(mat)\nrows = map(lambda row: set(row), mat)\n#print('----')\n\ntotal = set()\nfor r in rows:\n    total.update(r)\ntotal -= set(['B', 'W', 'G'])\n#print(total)\nout = len(total)\n\n\nprint(\"#Black&White\" if out == 0 else \"#Color\")", "# coding: utf-8\n\n\n\n\n\nimport math\nimport string\nimport itertools\nimport fractions\nimport heapq\nimport collections\nimport re\nimport array\nimport bisect\n\ndef main():\n    n, m = list(map(int, input().split(\" \")))\n    for i in range(n):\n        a = input().split(\" \")\n        if \"C\" in a or \"M\" in a or \"Y\" in a:\n            print(\"#Color\")\n            return\n    print(\"#Black&White\")\n\nmain()\n"]