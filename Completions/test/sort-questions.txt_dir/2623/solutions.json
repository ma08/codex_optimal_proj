["import sys\nreadline = sys.stdin.readline\n\nT = int(readline())\nAns = [None]*T\nfor qu in range(T):\n    N, K = map(int, readline().split())\n    S = list(map(lambda x: ord(x)-97, readline().strip()))\n    S.sort()\n    if len(set(S[:K])) != 1:\n        Ans[qu] = chr(97+S[K-1])\n        continue\n    L = len(set(S[K:]))\n    if L == 1:\n        res = [S[0]] + [S[K]]*(-((K-N)//K))\n    else:\n        res = [S[0]] + S[K:]\n    Ans[qu] = ''.join(map(lambda x: chr(x+97), res))\n            \nprint('\\n'.join(map(str, Ans)))", "import sys\nfrom collections import defaultdict\nfrom copy import copy\n\nR = lambda t = int: t(input())\nRL = lambda t = int: [t(x) for x in input().split()]\nRLL = lambda n, t = int: [RL(t) for _ in range(n)]\n\n\ndef solve():\n  n, k = RL()\n  s = sorted(R(str))\n  if n == k:\n    print(s[-1])\n    return\n  if s[0] < s[k-1]:\n    print(s[k-1])\n    return\n  if s[-1] == s[k]:\n    print(s[0] + \"\".join(s[k:][:(n-1)//k]))\n    return\n  print(s[0] + \"\".join(s[k:]))\n  \nT = R()\nfor _ in range(T):\n  solve()\n", "from collections import Counter\n\ndef read_int():\n    return int(input())\n\n\ndef read_ints():\n    return map(int, input().split(' '))\n\n\nt = read_int()\nfor case_num in range(t):\n    n, k = read_ints()\n    s = input()\n    s = [c for c in s]\n    s.sort()\n    cnt = Counter(s)\n    l = list(cnt)\n    l.sort()\n    if cnt[l[0]] < k:\n        print(s[k - 1])\n    else:\n        if len(l) == 1:\n            add = 0 if cnt[l[0]] % k == 0 else 1\n            ans = l[0] * (n // k + add)\n            print(ans)\n        elif cnt[l[0]] == k and len(l) == 2:\n            add = 0 if cnt[l[1]] % k == 0 else 1\n            ans = l[0] + (l[1] * (n // k + add - 1))\n            print(ans)\n        else:\n            print(l[0] + ''.join(s[k:]))", "t=int(input())\nfor _ in range(t):\n    n,k=map(int,input().split())\n    s=list(input())\n    s=sorted(s)\n    if k==1:\n        print(''.join(map(str,s)))\n    elif len(set(s))==1:\n        print(s[0]*((n+k-1)//k))\n    else:\n        if len(set(s[:k]))!=1:\n            print(s[k-1])\n        else:\n            tmp=s[0]\n            s=s[k:]\n            if len(set(s))!=1:\n                print(tmp+''.join(map(str,s)))\n            else:\n                print(tmp+s[0]*((n-k+k-1)//k))", "t = int(input())\nfor _ in range(t):\n    n, k = list(map(int, input().split()))\n    s = input()\n    chars = sorted([c for c in s])\n    if chars[k-1] > chars[0]:\n        print(chars[k-1])\n    elif chars[0] == chars[n-1]:\n        print(''.join([chars[0]] * ((n + k - 1) // k)))\n    elif chars[k] != chars[0] and chars[k] == chars[n-1]:\n        print(''.join([chars[0]] + [chars[k]] * ((n - 1) // k)))\n    else:\n        print(''.join(chars[k-1:]))\n", "q = int(input())\nfor _ in range(q):\n\tn,k = list(map(int,input().split()))\n\ts = list(input())\n\ts.sort()\n\tslowo = [[] for i in range(k)]\n\tif s[0] != s[k-1]:\n\t\tprint(s[k-1])\n\telse:\n\t\tif k == n:\n\t\t\tprint(s[n-1])\n\t\telse:\n\t\t\tdl = (n-1)//k\n\t\t\tif s[k] == s[-1]:\n\t\t\t\todp = [s[0]] + [s[k]]*dl\n\t\t\telse:\n\t\t\t\todp = [s[0]] + s[k:]\n\t\t\tprint(\"\".join(odp))\n", "import sys\n\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n, k = map(int, input().split())\n    s = list(input().rstrip())\n    s.sort()\n    if len(set(s[:k])) > 1:\n        print(max(s[:k]))\n        continue\n    ss = s[k:]\n    if len(set(ss)) == 1:\n        print(s[0], *([ss[0]] * ((len(ss) - 1) // k + 1)), sep = \"\")\n    else:\n        print(s[0], *s[k:], sep = \"\")\n", "from collections import Counter,defaultdict,deque\nimport heapq as hq\n#from itertools import count, islice\n#from functools import reduce\n#alph = 'abcdefghijklmnopqrstuvwxyz'\n#from math import factorial as fact\n#a,b = [int(x) for x in input().split()]\nimport math\nimport sys\ninput=sys.stdin.readline\ndef solve():\n    n,k = [int(x) for x in input().split()]\n    arr = [x for x in input().strip()]\n    arr.sort()\n    first = arr[:k]\n    if first[0] == first[-1]:\n        rest = arr[k:]\n        if len(Counter(rest))==1:\n            print(first[0]+rest[0]*math.ceil(len(rest)/k))\n        else:\n            print(first[0]+''.join(rest))\n    else:\n        print(first[-1])\n\ntt = int(input())\nfor test in range(tt):\n    solve()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#\n", "t = int(input())\nfor i in range(t):\n    n, k = list(map(int, input().split()))\n    s = list(input())\n    s.sort()\n    ans = []\n    if k == n:\n        print(s[k - 1])\n    elif s[0] == s[k - 1] and s[k] == s[n - 1]:\n        ans_s = s[0] + s[k] * ((n - k) // k)\n        if n % k == 0:\n            print(ans_s)\n        else:\n            print(ans_s + s[k])\n    else:\n        if s[0] == s[k - 1]:\n            print(s[0] + \"\".join(list(map(str, s[k:]))))\n        else:\n            print(s[k - 1])\n", "T = int(input())\nfor case in range(T):\n\tn,k = [int(x) for x in input().split()]\n\ts = input()\n\tls = sorted(list(s))\n\t#print(ls)\n\tret = \"\"\n\t#while len(ls) != 0:\n\talset = set(ls[:k])\n\t#for i in range(k):\n\t\t#alset.add(ls[i])\n\t\t#ret[i] += ls[i]\n\tif len(alset) == 1:\n\t\tret += ls[0]\n\t\tif len(set(ls[k:])) == 1:\n\t\t\tret += str(ls[k]) * ((len(ls[k:]) - 1) // k + 1)\n\t\telse:\n\t\t\tret += \"\".join(ls[k:])\n\telse:\n\t\tret += ls[k-1]\n\t\t#break\n\t\n\tprint(ret)\n\n\n\t\t\n\n", "import sys\n#from math import *\ndef eprint(*args):\n    print(*args, file=sys.stderr)\nzz=1\nif zz:\n\tinput=sys.stdin.readline\nelse:\t\n\tsys.stdin=open('input.txt', 'r')\n\tsys.stdout=open('output2.txt','w')\nt=int(input())\nwhile t>0:\n\tt-=1\t\n\tn,k=map(int,input().split())\n\ts=list(input().rstrip())\n\ts.sort()\n\td={}\n\ta=[\"\" for i in range(k)]\n\tfor i in range(k):\n\t\ta[i%k]+=s[i]\n\t\n\n\tj=0\t\n\ti=k\n\n\tif len(set(s[k:]))==1:\n\t\tfor i in range(k,len(s)):\n\t\t\ta[j%k]+=s[i]\n\t\t\tj+=1\n\t\t\tif j==k or a[j][0]>a[0][0]:\n\t\t\t\tj=0\n\telse:\n\t\tfor i in range(k,len(s)):\n\t\t\ta[j%k]+=s[i]\t\t\n\t#print(a)\n\tprint(max(a))\t"]