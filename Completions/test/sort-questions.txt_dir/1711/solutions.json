["import sys\ninput = sys.stdin.readline\n\nn,m=list(map(int,input().split()))\nmod=998244353\n\nFACT=[1]\nfor i in range(1,2*10**5+1):\n    FACT.append(FACT[-1]*i%mod)\n\nFACT_INV=[pow(FACT[-1],mod-2,mod)]\nfor i in range(2*10**5,0,-1):\n    FACT_INV.append(FACT_INV[-1]*i%mod)\n\nFACT_INV.reverse()\n\ndef Combi(a,b):\n    if 0<=b<=a:\n        return FACT[a]*FACT_INV[b]*FACT_INV[a-b]%mod\n    else:\n        return 0\n\nif n==2:\n    print(0)\nelse:\n    print(Combi(m,n-1)*(n-2)*pow(2,n-3,mod)%mod)\n", "n, m = map(int, input().split())\n\nif n < 3:\n\tprint(0)\n\treturn\n\nmod = 998244353 \ndef C(n, k):\n\tif k > n: return 0\n\tk = min(k, n-k)\n\ta = 1\n\tb = 1\n\tfor i in range(k):\n\t\ta = (a*(n-i))%mod\n\t\tb = (b*(i+1))%mod\n\treturn (a*pow(b, mod-2, mod))%mod\n\na = ((n-2)*pow(2, n-3, mod))%mod\nb = (m-n+2)*C(m, n-2)\nb = (b*pow(n-1, mod-2, mod))%mod\n\nans = (a*b)%mod\nprint(ans)", "class Combination:\n    def __init__(self, n, MOD):\n        self.fact = [1]\n        for i in range(1, n + 1):\n            self.fact.append(self.fact[-1] * i % MOD)\n        self.inv_fact = [0] * (n + 1)\n        self.inv_fact[n] = pow(self.fact[n], MOD - 2, MOD)\n        for i in reversed(range(n)):\n            self.inv_fact[i] = self.inv_fact[i + 1] * (i + 1) % MOD\n        self.MOD = MOD\n\n    def factorial(self, k):\n        return self.fact[k]\n\n    def inverse_factorial(self, k):\n        return self.inv_fact[k]\n\n    def permutation(self, k, r):\n        if k < r:\n            return 0\n        return (self.fact[k] * self.inv_fact[k - r]) % self.MOD\n\n    def combination(self, k, r):\n        if k < r:\n            return 0\n        return (self.fact[k] * self.inv_fact[k - r] * self.inv_fact[r]) % self.MOD\n\n\n\nn, m = map(int, input().split())\nMOD = 998244353\ncomb = Combination(2 * 10 ** 5 + 10, MOD)\n\nans = 0\npow_ = pow(2, n - 2, MOD)\nfor i in range(1, m + 1):\n    tmp = comb.combination(i - 1, n - 2)\n    tmp *= pow_\n    tmp *= n - 2\n    ans += tmp\n    ans %= MOD\nprint(ans * pow(2, MOD - 2, MOD) % MOD)", "n,m=map(int,input().split())\nmod=998244353\n\nn_max=2*(10**5+1)\nF,FI=[0]*(n_max+1),[0]*(n_max+1)\nF[0],FI[0]=1,1\nfor i in range(n_max):\n  F[i+1]=(F[i]*(i+1))%mod\nFI[n_max-1]=pow(F[n_max-1],mod-2,mod)\nfor i in reversed(range(n_max-1)):\n  FI[i]=(FI[i+1]*(i+1))%mod\ndef comb(x,y):\n  return (F[x]*FI[x-y]*FI[y])%mod\n\nprint((comb(m,n-1)*(n-2)*(pow(2,n-3,mod)))%mod)", "import math, collections, sys\ninput = sys.stdin.readline\ndef ncr(n, r, p):\n    num = den = 1 \n    for i in range(r):\n        num = (num * (n - i)) % p \n        den = (den * (i + 1)) % p \n    return (num * pow(den, p - 2, p)) % p \nn, m = map(int, input().split())\nmod = 998244353\nif n == 2:\n    print(0)\nelse:\n    ans = ncr(m, n-1, mod)\n    ans*=(n-2)\n    ans%=mod\n    ans*=pow(2, n-3, mod)\n    ans%=mod\n    print(ans)", "#!/usr/bin/env python3\n\nMOD = 998244353\nn,m = list(map(int,input().split()))\n\ndef go(a, b, c):\n    ans = 1\n    while b > 0:\n        if b%2 == 1:\n            ans *= a\n            ans %= c\n        b //= 2\n        a *= a\n        a %= c\n    return ans\n\nif n == 2:\n    print(0)\nelse:\n    start = (n-2)*go(2, n-3, MOD)\n    start %= MOD\n    bunja = 1\n    bunmo = 1\n    for i in range(n, m+1):\n        bunja *= i\n        bunmo *= (i-n+1)\n        bunja %= MOD\n        bunmo %= MOD\n\n    #ans = start * bunja // bunmo\n    start *= bunja\n    temp = go(bunmo, MOD-2, MOD)\n    ans = start * temp\n    ans %= MOD\n    print(ans)\n"]