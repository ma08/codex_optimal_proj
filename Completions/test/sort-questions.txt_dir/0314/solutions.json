["#!/bin/python\n\nn, k = list(map(int, input().split()))\np = list(map(int, input().split()))\n\na, b = 0, 0\nfor i in range(n):\n    a += p[i]\n    x = min(8, a)\n    b += x\n    a -= x\n    if b >= k:\n        print(i+1)\n        break\nelse:\n    print(-1)\n", "def list_input():\n    return list(map(int,input().split()))\ndef map_input():\n    return list(map(int,input().split()))\ndef map_string():\n    return input().split()\n    \nn,k = map_input()\na = list_input()\ncur = 0\ncnt = 1\nfor i in a:\n  cur += i\n  if cur >= 8:\n    cur -= 8\n    k -= 8\n  else:\n    k -= cur\n    cur = 0\n  if k <= 0:\n    break\n  cnt += 1\nif k <= 0:\n  print(cnt)\nelse:\n  print(-1)\n  \n", "N,K = list(map(int,input().split()))\na = [int(i) for i in input().split()]\n\nstore = 0\ns = 0\nfor day in range(N):\n    store+=a[day]\n    x = min(8,store)\n    s +=x\n    store -=x\n    if s>=K:\n        break\n\nif s>=K:\n    print(day+1)\nelse:\n    print(-1)\n", "n,k=map(int,input().split())\nl=list(map(int,input().split()))\ncur=0\nfor i in range(n):\n    cur+=l[i]\n    k-=min(cur,8)\n    cur-=min(cur,8)\n    if k<=0:\n        print(i+1)\n        break\nelse:\n    print(-1)", "n, k = map(int, input().split())\n\nl = list(map(int, input().split()))\n\ncnt = 0\nans = 0\n\nfor a in l:\n\tans += 1\n\tcnt += a;\n\tgt = min(8, min(cnt, k))\n\tk -= gt\n\tcnt -= gt\n\tif k == 0:\n\t\tprint(ans)\n\t\treturn\n\nprint(-1)", "from sys import stdin, stdout\n\nn, k = list(map(int, stdin.readline().split()))\nvalues = list(map(int, stdin.readline().split()))\ncnt = 0\nsweet = 0\n\nfor i in range(n):\n    cnt += values[i]\n    \n    v = min(min(cnt, 8), k - sweet)\n    sweet += v \n    cnt -= v\n    \n    if sweet == k:\n        stdout.write(str(i + 1))\n        break\nelse:\n    stdout.write('-1')\n", "n,k = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\narya = 0\nbran = 0\n\nfor i,a in enumerate(A):\n    arya += a \n    bran += min(arya, 8)\n    arya -= min(arya, 8)\n    if bran >= k:\n        print(i+1)\n        return\n\nprint(-1)\n", "n,k=list(map(int,input().split()))\nl=list(map(int,input().split()))\ndays=0\nstock=0\nwhile(k>0 and days<n):\n\tstock+=l[days]\n\tk-=min(stock,8)\n\tstock-=min(stock,8)\n\tdays+=1\nif(k>0):\n\tprint(-1)\nelse:\n\tprint(days)", "\n\n\ndef main():\n    n, k = (int(x) for x in input().split())\n    xs = [int(x) for x in input().split()]\n\n    counter = 0\n    arya = 0\n    bran = 0\n\n    for i, x in enumerate(xs):\n        arya += x\n\n        give = min(arya, 8)\n        arya -= give\n        bran += give\n\n        if bran >= k:\n            break\n\n    if bran >= k:\n        print(i+1)\n    else:\n        print(-1)\n\n\ndef __starting_point():\n    main()\n\n\n\n__starting_point()", "n, m = list(map(int, input().split()))\nz = list(map(int, input().split()))\nans = 0\nctr = 0\nleft = 0\nwhile ctr < m:\n    if ans >= n:\n        print(-1)\n        return\n    else:\n        z[ans] += left\n        ctr += min(8, z[ans])\n        left = z[ans] - min(8, z[ans])\n    ans += 1\nprint(ans)\n", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ntot = 0\nremain = 0\ni = 0\nwhile i < n:\n    if a[i] + remain <= 8:\n        tot += a[i] + remain\n        remain = 0\n    else:\n        tot += 8\n        remain += a[i] - 8\n    if tot >= k:\n        print(i+1)\n        break\n    i += 1\nif i == n:\n    print(-1)\n", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nans = -1\nca = 0\ncb = 0\nfor i in range(n):\n    ca += a[i]\n    c = min(ca, 8)\n    ca -= c\n    cb += c\n    if k <= cb:\n        ans = i + 1\n        break\n\nprint(ans)\n", "def main():\n\tn, k = list(map(int, input().split()))\n\tcandies = list(map(int, input().split()))\n\n\trest = 0\n\tgiven = 0\n\tfor i in range(n):\n\t\trest += candies[i]\n\t\tif rest >= 8:\n\t\t\tgiven += 8\n\t\t\trest -= 8\n\t\telse:\n\t\t\tgiven += rest\n\t\t\trest = 0\n\n\t\tif given >= k:\n\t\t\tprint(i + 1)\n\t\t\tbreak\n\n\t\tif i == n - 1:\n\t\t\tprint(-1)\n\ndef __starting_point():\n\tmain()\n__starting_point()", "q,w=list(map(int,input().split()))\na=list(map(int,input().split()))\nif (w>8*q)|(w>sum(a)):\n    print(-1)\nelse:\n    s=0\n    i=0\n    while (w>0)&(i<q):\n        s+=a[i]\n        w-=min(8,s)\n        s-=min(8,s)\n        i+=1\n    if w<=0:\n        print(i)\n    else:\n        print(-1)\n", "from sys import stdin\ni = [[int(y) for y in x.rstrip().split()] for x in stdin.readlines()]\nk = i[0][1]\ndays = i[1]\nremaining = 0\nfor i,x in enumerate(days):\n    k-= min(8,x+remaining)\n    remaining = x+remaining - min(8,x+remaining)\n    if k<=0:\n        print(i+1)\n        break\nelse:\n    print (-1)", "#py3com\n#pycom\n#ciphereck\n#t=int(input())\n#n=list(map(int,input().split()))\n#a,b=map(int,input().split())\n#print(n)\n#print(a)\n# n.sort()\n#print(*ans) to print list with spaces without brackets\nn,k=list(map(int,input().split()))\na=list(map(int,input().split()))\nd=0\nc=0\nt=0\nwhile t<k:\n  if d==n:\n    d+=1\n    break\n  c+=a[d]\n  g=min(8,c)\n  t+=g\n  d+=1\n  c=c-g\nif d==n+1:\n  print(-1)\nelse:\n  print(d)\n", "import sys\n\ndef r():\n    return list(map(int, input().split()))\n\nn, k = list(map(int, input().split()))\na = r()\n\nsum = 0\ncnt = 0\nfor i in range(n):\n    sum += a[i]\n    cnt += min(8, sum)\n    sum = max(0, sum-8)\n    if (cnt >= k):\n        print(i+1)\n        return\n\nprint(-1)\n", "def main():\n    N, K = list(map(int, input().split()))\n    nums = list(map(int, input().split()))\n\n    aran = 0\n    bran = 0\n    for n in range(N):\n        aran += nums[n]\n        x = min(aran, 8)\n        aran -= x\n        bran += x\n        if bran >= K:\n            print(n+1)\n            return\n\n    print(-1)\n    return\n        \n\ndef __starting_point():\n    # nonlocal stime\n    # stime = time.clock()\n    main()\n\n\n__starting_point()", "n, k = input().split()\nn, k = int(n), int(k)\narray = list(map(int, input().split()))\n\ntotal = 0\nsaved = 0\nfound = False\n\nfor day in range(n):\n    saved += array[day]\n    \n    given = min(saved, 8)\n    total += given\n    saved -= given\n\n    if total >= k:\n        found = True\n        print(day+1)\n        break\n    \nif not found:\n    print(-1)\n", "n, k = map(int, input().split())\na = list(map(int, input().split()))\n\ns = 0\nres = 0\nans = -1\nfor i in range(n):\n    s += a[i]\n    res += min(s, 8)\n    s -= min(s, 8)\n    if res >= k:\n        ans = i + 1\n        break\n\nprint(ans)", "split = lambda: list(map(int, input().split()))\na, b = split()\ncandies = split()\np = q = 0\nfor x in range(a):\n    p += candies[x]\n    s = min(8, p)\n    p -= s\n    q += s\n    if q >= b:\n        print(x + 1)\n        break\nelse:\n    print(-1)", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\nimport re\nimport math\nimport collections\nimport itertools\nimport functools\n\nDEBUG = True\nDEBUG = False\n\ndef dbg(*args):\n    if DEBUG:\n        print(\"DBG: \", file=sys.stderr, end=\"\")\n        print(*args, file=sys.stderr)\n\n\n\ndef main():\n    N, K = map(int, input().split())\n    A = list(map(int, input().split()))\n\n    candy_a = 0;\n    candy_b = 0;\n    for day in range(N):\n        candy_a += A[day]\n        if candy_a > 8:\n            candy_b += 8\n            candy_a -= 8\n        else:\n            candy_b += candy_a\n            candy_a  = 0\n\n        if candy_b >= K:\n            print(day+1)\n            return\n\n    print(-1)\n\ndef __starting_point(): main()\n\n__starting_point()", "n, k = list(map(int, input().split()))\ncnt, day = 0, 0\na = list(map(int, input().split()))\nwhile k > 0:\n    try:\n        cnt += a[day]\n    except IndexError:\n        print(-1)\n        return\n    x = min(8, cnt)\n    cnt -= x\n    k -= x\n    day += 1\nprint(day)\n\n", "import sys, os\n\nn, k = map(int, input().split())\ndata =list(map(int, input().split()))\nres = 0\nresu = 0\nfor i in range(n):\n    res += data[i]\n    r = min(res, 8)\n    res -= r\n    resu += r\n    if resu >= k:\n        print(i + 1)\n        return\n        sys.exit\n        os.abort()\nprint(-1)", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\na1, a2 = 0, 0\nans = False\n\nfor i in range(n):\n    a1 += a[i]\n    a2 += min(8, a1)\n    a1 -= min(8, a1)\n    if a2 >= k:\n        ans = i + 1\n        break\n\nif ans:\n    print(ans)\nelse:\n    print(-1)\n"]