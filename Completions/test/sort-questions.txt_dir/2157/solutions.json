["n,q=list(map(int,input().split()))\n\nA=list(map(int,input().split()))\n\n\nC=[0]*n\n\nfor i in range(q):\n    l,r=list(map(int,input().split()))\n    C[l-1]+=1\n    if(r!=n):\n        C[r]-=1\n\n\nfor i in range(1,n):\n    C[i]+=C[i-1]\n\nC.sort()\nA.sort()\n\nans=0\nfor i in range(n):\n    ans+=C[i]*A[i]\nprint(int(ans))\n", "n, q = map(int, input().split())\nt = [0] + list(map(int, input().split()))\np = [0] * (n + 1)\n\nfor i in range(q):\n    l, r = map(int, input().split())\n    p[l - 1] += 1\n    p[r] -= 1\n\nfor i in range(1, n + 1):\n    p[i] += p[i - 1]\n\nt.sort()\np.sort()\n\nprint(sum(p[i] * t[i] for i in range(1, n + 1)))", "n, q = map(int, input().split())\nt = [0] + list(map(int, input().split()))\np = [0] * (n + 1)\n\nfor i in range(q):\n    l, r = map(int, input().split())\n    p[l - 1] += 1\n    p[r] -= 1\n\nfor i in range(1, n + 1):\n    p[i] += p[i - 1]\n\nt.sort()\np.sort()\n\nj = 0\nwhile p[j] == 0: j += 1\n\nprint(sum(p[i] * t[i] for i in range(j, n + 1)))", "n,q=map(int,input().split())\na=list(map(int,input().split()))\nb=[0]*(n+1)\nc=[0]*(n)\nfor i in range(q):\n    l,r=map(int,input().split())\n    b[l-1]+=1\n    b[r]-=1\ncur=0\nfor i in range(n):\n    cur+=b[i]\n    c[i]=cur\n#print(c)\nc.sort()\na.sort()\n#print(a)\ncur=0\nfor i in range(n):\n    cur+=a[i]*c[i]\nprint(cur)", "n,q=map(int,input().split())\na=list(map(int,input().split()))\nb=[0]*(n+1)\nc=[0]*(n)\nfor i in range(q):\n    l,r=map(int,input().split())\n    b[l-1]+=1\n    b[r]-=1\ncur=0\nfor i in range(n):\n    cur+=b[i]\n    c[i]=cur\nc.sort()\na.sort()\ncur=0\nfor i in range(n):\n    cur+=a[i]*c[i]\nprint(cur)", "def main():\n    import sys\n    data = [int(i) for i in sys.stdin.read().split()]\n    data.reverse()\n    \n    n, q = data.pop(), data.pop()\n    arr = [data.pop() for i in range(n)]\n    arr.sort()\n    \n    S = [0 for i in range(n + 1)]\n    for i in range(q):\n        l, r = data.pop(), data.pop()\n        S[r] += 1\n        S[l - 1] -= 1\n    \n    d = [0 for i in range(n)]\n    count = 0\n    for i in reversed(list(range(n))):\n        count += S[i + 1]\n        d[i] = count\n    d.sort()\n    \n    result = 0\n    for i in range(n):\n        result += d[i] * arr[i]\n    \n    print(result)\n\nmain()\n", "import sys\ndata = [int(i) for i in sys.stdin.read().split()]\ndata.reverse()\n\nn1,n2 = data.pop(), data.pop()\na = sorted([data.pop() for i in range(n1)],reverse=True)\n\n# n = list(map(int,input().split()))\n# a = sorted(list(map(int,input().split())),reverse=True)\ncheck = [0]*(n1+1) # \u041c\u0430\u0441\u0441\u0438\u0432 \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u0439 \u043d\u0430 \u043e\u0442\u043c\u0435\u0442\u043a\u0438, \u043c\u0435\u0436\u0434\u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435\nresult = [0]*n1 # \u041c\u0430\u0441\u0441\u0438\u0432 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u043b\u0443\u0447\u0448\u0435\u0435 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432\nfor i in range(n2):\n    temp1,temp2 = data.pop(), data.pop()\n    check[temp1-1] += 1 # \u0423\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u043d\u0430 \u043e\u0442\u043c\u0435\u0442\u043a\u0438 \u0434\u043b\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f\n    check[temp2] -= 1\ntemp = 0\nfor i in range(n1):\n    temp += check[i]\n    result[i] = temp\nresult.sort(reverse=True)\nsum = 0\nfor i in range(n1): sum+=result[i]*a[i]\nprint(sum)", "n, q = map(int, input().split())\narr = list(map(int, input().split()))\npref = [0 for _ in range(n)]\n\nfor _ in range(q):\n\tl, r = map(int, input().split())\n\tpref[l-1] += 1\n\tif r < n:\n\t\tpref[r] -= 1\n\nlol = []\ncur = 0\nfor i in range(n):\n\tcur += pref[i]\n\tlol.append(cur)\nlol.sort()\narr.sort()\n\nans = 0\nfor i in range(n-1,-1,-1):\n\tans += arr[i] * lol[i]\nprint(ans)", "N, Q = map(int, input().split())\narray = list(map(int, input().split()))\narray.sort()\n\ncount = [0 for i in range(N+1)]\n\nfor q in range(Q):\n    l, r = map(int, input().split())\n    count[l-1] += 1\n    count[r] -= 1\n\nfor i in range(1, N):\n    count[i] += count[i-1]\ncount.sort()\n\nres = 0\nfor i in range(N):\n    res += count[i+1] * array[i]\n\nprint(res)", "def main():\n    n, m = list(map(int, input().split()))\n    aa = sorted(map(int, input().split()))\n    bb = [0] * (n + 1)\n    for _ in range(m):\n        l, r = list(map(int, input().split()))\n        bb[l - 1] += 1\n        bb[r] -= 1\n    a = 0\n    for i, b in enumerate(bb):\n        a += b\n        bb[i] = a\n    del bb[-1]\n    bb.sort()\n    print(sum(a * b for a, b in zip(aa, bb)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "#in the name of god\n#Mr_Rubick\nn,q=list(map(int,input().split()))\nt=[0]+list(map(int,input().split()))\np=[0]*(n+1)\nfor i in range(q):\n    l,r=list(map(int,input().split()))\n    p[l-1]+=1\n    p[r]-=1\nfor i in range(1,n+1):\n    p[i]+=p[i-1]\nt.sort()\np.sort()\ncnt=0\nwhile p[cnt]==0:\n    cnt+=1\nprint(sum(p[i]*t[i] for i in range(cnt,n+1)))\n", "import sys\nn,q=list(map(int, sys.stdin.readline().split()))\nl1=[0]+list(map(int, sys.stdin.readline().split()))\nl1.sort()\nb=[]\nfor i in range(0,n+2):\n    b.append(0)\nfor jj in range(0,q):\n    l,r=list(map(int, sys.stdin.readline().split()))\n    b[l]+=1\n    b[r+1]-=1\nfor i in range(2,n+1):\n    b[i]+=b[i-1]    \nb.sort()\nsum1=0\nk=len(b)\nk-=1\nkk=n\nfor i in range(1,n+1):\n    sum1+=(b[k]*l1[kk])\n    k-=1\n    kk-=1\nprint(sum1)    \n", "#python3\nimport sys, threading, os.path\nimport collections, heapq, math,bisect\nimport string\nfrom platform import python_version\nimport itertools\nsys.setrecursionlimit(10**6)\nthreading.stack_size(2**27)     \n\ndef main():\n    if os.path.exists('input.txt'):\n        input = open('input.txt', 'r')\n    else:\n        input = sys.stdin\n    #--------------------------------INPUT---------------------------------\n    n,q = list(map(int, input.readline().split()))\n    lis = list(map(int, input.readline().split()))\n    lis.sort()\n    val = [0]*(n+1)\n    for i in range(q):\n        l,r = list(map(int, input.readline().split()))\n        val[l-1] += 1\n        val[r] -= 1\n    for i in range(n):\n        val[i+1]+=val[i]\n    val.sort()\n    sum=0\n    for i in range(n):\n        sum+=val[i+1]*lis[i]\n    output = sum\n    #-------------------------------OUTPUT----------------------------------\n    if os.path.exists('output.txt'):\n        open('output.txt', 'w').writelines(str(output))\n    else:\n        sys.stdout.write(str(output))\n\n\ndef __starting_point():\n    main()\n#threading.Thread(target=main).start()\n\n__starting_point()", "#python 3.5.2\n\nn, q = list(map(int, input().split()))\narr = list(map(int, input().split()))\narr.sort()\nocc = [0] * n\n\nfor i in range(q):\n    l, r = list(map(int, input().split()))\n    occ[l-1]+=1\n    if (r < n): occ[r]-=1\n    \nfor i in range(1,n):\n    occ[i]+=occ[i-1]\nocc.sort()    \n    \nsum = 0\nfor i in range(n):\n    sum += arr[i] * occ[i]\n\nprint (sum)\n", "#python 3.5.2\n\nn,q = [int(x) for x in input().split()]\narr = [int(x) for x in input().split()]\narr.sort()\nocc = [0] * n\n\nfor i in range(q):\n    l, r = list(map(int, input().split()))\n    occ[l-1]+=1\n    if (r < n): occ[r]-=1\n    \nfor i in range(1,n):\n    occ[i]+=occ[i-1]\nocc.sort()    \n    \nsum = 0\nfor i in range(n):\n    sum += arr[i] * occ[i]\n\nprint (sum)\n", "import sys\ninput=sys.stdin.readline\nprint=sys.stdout.write\nn,q=map(int,input().split())\nar=list(map(int,input().split()))\nqs=[map(int,input().split()) for x in range(q)]\ns=[0]*n\ndef f(l,r):\n    s[l]+=1\n    if r < n:\n        s[r]-=1\nfor x in range(q):\n    a,b=qs[x]\n    a-=1\n    f(a,b)\nd=[s[0]]\nfor x in range(1,n):\n    s[x]+=s[x-1]\n    d.append(s[x])\nar=sorted(ar)\nd=sorted(d)[::-1]\nsm=0\nfor x in range(n):\n    sm+=ar[x]*d[n-x-1]\nprint(str(sm))", "import sys\ndata = [int(i) for i in sys.stdin.read().split()]\ndata.reverse()\ndef read(): return data.pop()\n\nn, q = read(), read()\nA = [read() for i in range(n)]\nF = [0] * (n+5)\n\nfor i in range(q) :\n\tl, r = read(), read()\n\tF[l] += 1\n\tF[r+1] -= 1\n\nfor i in range(1, n+1) :\n    F[i] += F[i-1]\n\nA.sort()\t\nF = sorted(F[1:n+1])\n\nans = 0\nfor i in range(n) :\n    ans += A[i] * F[i]\n    \nprint(ans)", "n,q=list(map(int,input().split()))\n\na=list(map(int,input().split()))\n\nb=[0]*(n+1)\n\nc=[0]*(n)\n\nfor i in range(q):\n\n    l,r=list(map(int,input().split()))\n\n    b[l-1]+=1\n\n    b[r]-=1\n\ncur=0\n\nfor i in range(n):\n\n    cur+=b[i]\n\n    c[i]=cur\n\nc.sort()\n\na.sort()\n\ncur=0\n\nfor i in range(n):\n\n    cur+=a[i]*c[i]\n\nprint(cur)\n\n\n\n# Made By Mostafa_Khaled\n", "num_elements, num_queries = list(map(int, input().split()))\nelements = list(map(int, input().split()))\nelements.sort(reverse=True)\noccurrences = [0]*(num_elements + 2)\nfor _ in range(num_queries):\n    l, r = list(map(int, input().split()))\n    occurrences[l] += 1\n    occurrences[r+1] -= 1\nfor pos in range(1,num_elements + 1):\n    occurrences[pos] += occurrences[pos - 1]\noccurrences.sort(reverse=True)\nsolution = 0\nfor pos in range(num_elements):\n    solution += occurrences[pos] * elements[pos]\nprint(solution)\n", "import sys\ndata = [int(i) for i in sys.stdin.read().split()]\ndata.reverse()\ndef read(): return data.pop()\n\nn, q = read(), read()\nA = [read() for i in range(n)]\nF = [0] * (n+5)\n\nfor i in range(q) :\n\tl, r = read(), read()\n\tF[l] += 1\n\tF[r+1] -= 1\n\nfor i in range(1, n+1) :\n    F[i] += F[i-1]\n\nA.sort()\t\nF = sorted(F[1:n+1])\n\nans = 0\nfor i in range(n) :\n    ans += A[i] * F[i]\n    \nprint(ans)", "def solve():\n    n, q = list(map(int, input().split()))\n\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n\n    w = [0 for i in range(n+2)]\n    \n    for query in range(q):\n        l, r = list(map(int, input().split()))\n        w[l] += 1\n        w[r+1] -= 1\n\n    for i in range(2, n+1):\n        w[i] += w[i-1]\n\n    w.sort(reverse=True)\n\n    maxSum = 0\n    for i in range(n):\n        maxSum += a[i]*w[i]\n        if w[i] == 0:\n            break\n\n    print(maxSum)\n\ndef __starting_point():\n    solve()\n\n__starting_point()", "def solve():\n    n, q = list(map(int, input().split()))\n\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n\n    w = [0 for i in range(n+2)]\n    \n    for query in range(q):\n        l, r = list(map(int, input().split()))\n        w[l] += 1\n        w[r+1] -= 1\n\n    for i in range(2, n+1):\n        w[i] += w[i-1]\n\n    w.sort(reverse=True)\n\n    maxSum = 0\n    for i in range(n):\n        maxSum += a[i]*w[i]\n\n    print(maxSum)\n\ndef __starting_point():\n    solve()\n\n__starting_point()", "n,q= list(map(int,input().strip().split()))\narr = list(map(int,input().strip().split()))\narr.sort(reverse=True)\nb = [0] *(n+2)\nz = [0] * (n+2);\ns  = 0\nfor x in range(q):\n    l,r = list(map(int,input().strip().split()))\n    b[l] += 1\n    b[r+1] -= 1\n# print(b)\nfor x in range(1,n+1):\n    z[x] = z[x-1]+b[x]\n# print(z)\nz.sort(reverse=True)\nfor x in range(n):\n    s += z[x] * arr[x]\nprint(s)"]