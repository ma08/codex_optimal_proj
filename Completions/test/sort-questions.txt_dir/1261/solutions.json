["def f(n):\n    if n==1:return[1]\n    if n==2:return[1,2]\n    if n==3:return[1,1,3]\n    if n>3:\n        L=f(n//2)\n        for i in range(len(L)):L[i]*=2\n        return [1]*(n-n//2)+L\nL=f(int(input()))\ns=''\nfor i in L:s+=(str(i)+' ')\nprint(s)", "import sys\nimport string\nfrom math import gcd\nimport getpass\nimport math\nfrom decimal import Decimal\n\n\ndef ria():\n    return [int(i) for i in input().split()]\n\n\nif getpass.getuser() != 'frohenk':\n    filename = 'half'\n    # sys.stdin = open('input.txt')\n    # sys.stdout = open('output.txt', 'w')\nelse:\n    sys.stdin = open('input.txt')\n\nn = ria()[0]\nif n == 1:\n    print(1)\n    return\n\nif n == 2:\n    print(1, 2)\n    return\n\nif n == 3:\n    print(1, 1, 3)\n    return\n\nar = [0] * 30\n\nfor i in range(30):\n    ar[i] = n // (2 ** i) - n // (2 ** (i + 1))\nsd = 0\nfor i in range(30):\n    if sd == n - 1:\n        if n==(2**i):\n            print(2**i)\n        else:\n            print(n-n%(2**(i-1)))\n        return\n    for j in range(ar[i]):\n        print(2 ** i, end=' ')\n        sd += 1\n", "n = int(input())\nif n == 1:\n\tprint(\"1\")\nelif n == 2:\n\tprint(\"1 2\")\nelse:\n\tbase = 1\n\tgap = 2\n\tcur = base\n\tnext = 1\n\tans = ''\n\tfor i in range(n - 1):\n\t\tans += str(base) + ' '\n\t\tnext = cur\n\t\tcur += gap\n\t\tif cur > n:\n\t\t\tbase *= 2\n\t\t\tgap *= 2\n\t\t\tcur = base\n\t\tnext = max(next, cur)\n\tans += str(next)\n\tprint(ans)", "n = int(input())\n\nif (n == 3):\n    print('1 1 3')\nelse:\n    done = 0\n    arr = []\n    for i in range(30, -1, -1):\n        arr.extend([2**i]*(n//(2**i) - done))\n        done += n//(2**i) - done\n        if (done == 1):\n            k = i\n\n    arr[0] = max(arr[0], (n//2**(k-1)) * 2**(k-1))\n        \n    arr.reverse()\n    print(' '.join(map(str, arr)))\n", "def sfy(n):\n    if n == 1: return [1]\n    elif n == 2: return [1, 2]\n    elif n == 3: return [1, 1, 3]\n    else:\n        if n % 2 == 0: return [1]*(n//2) + [2*x for x in sfy(n//2)]\n        else:\n            return [1]*(1 + n//2) + [2*x for x in sfy(n//2)]\nprint(\" \".join([str(x) for x in sfy(int(input()))]))\n    \n", "n = int(input())\ni = 1\nwhile n:\n    if i > 1:\n        print(' ', end='')\n    if n == 3:\n        print(*[i, i, i * 3], end='')\n        break\n    print(' '.join([str(i)] * ((n + 1) // 2)), end='')\n    i <<= 1\n    n >>= 1\n\nprint()\n", "3\n\nimport math\nimport sys\n\n\nDEBUG = False\n\n\ndef inp():\n    return sys.stdin.readline().rstrip()\n\n\ndef dprint(*value, sep=' ', end='\\n'):\n    if DEBUG:\n        print(*value, sep=sep, end=end)\n\n\ndef solve(N):\n    ans = []\n\n    end = N\n    fac = 1\n\n    while end >= 1:\n        if end == 1:\n            ans.append(fac)\n            end = 0\n            break\n\n        if end == 2:\n            ans.append(fac)\n            ans.append(fac * 2)\n            end = 0\n            break\n\n        if end == 3:\n            ans.append(fac)\n            ans.append(fac)\n            ans.append(fac * 3)\n            end = 0\n            break\n\n        ans.extend([fac] * ((end + 1) // 2))\n        end //= 2\n        fac *= 2\n\n    return ans\n\n\ndef main():\n    N = int(inp())\n    print(*solve(N))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\n\nmult = 1\nres = []\nremain = n\nwhile remain >0:\n    if remain == 2:\n        res.extend([mult, mult*2])\n        remain = 0\n    elif remain == 3:\n        res.extend([mult, mult, mult *3])\n        remain = 0\n    else:\n        half = remain // 2\n        extra = remain - half\n        res.extend([mult]*extra)\n        remain  = half\n        mult = mult *2\nprint(*res)\n    \n", "import sys\nn=int(input())\n#m=n//2*2\n#twolist=[2**i for i in range(19)]\n\n#for i in range(18,-1,-1):\n#    if n>twolist[i]:\n#        break\n\n#for i in range((n+1)//2):\n#    print(1)\n\n#if n==3:\n#    print(1,1,3)\n#    return\n\ni=0\nANS=[]\nwhile n>0:\n    if n==3:\n        ANS=ANS+[2**i,2**i,3*2**i]\n        break\n    x=(n+1)//2\n    ANS=ANS+[2**i]*x\n    n=n-x\n    i+=1\n    \n#ANS.append(m)\n\nfor a in ANS:\n    print(a,end=\" \")\n    \n\n", "n = int(input())\nans = []\nmult = 1\nwhile n > 3:\n    ans += [mult]*(n-n//2)\n    n //= 2\n    mult *= 2\nif n == 3:\n    ans += [mult, mult, mult*3]\nelif n == 2:\n    ans += [mult, mult*2]\nelse:\n    ans += [mult]\nprint(*ans)", "n = int(input())\n\nif n == 3:\n    print('1 1 3')\n    return\nif n == 1:\n    print('1')\n    return\nif n == 2:\n    print('1 2')\n    return\nd = 2\nans = []\nlfn = n\nwhile d <= n:\n    k = n // d\n    for j in range(lfn - k):\n        ans.append(d//2)\n    lfn = n - len(ans)\n    d *=2\nd //= 2\nk = n/d\nif k < 1.5:\n    ans.append(d)\nelse:\n    ans.append(d + d//2)\nprint(' '.join([str(i) for i in ans]))", "n = int(input())\ncurpow, t, mx2pow = 1, 1, 0\nwhile t < n:\n    t <<= 1\n    mx2pow += 1\n\nif t > n:\n    mx2pow -= 1\n\nlast = 1 << (mx2pow-1) if mx2pow else 1\nadd = last\n\nwhile last < n:\n    last += add\n\nif last > n:\n    last -= add\n\nwhile n:\n    if n == 1:\n        print(last)            \n        break        \n    print((str(curpow)+' ') * ((n+1)//2), end='')\n    curpow *= 2\n    n //= 2\n", "n = int(input())\nvisit = [0 for i in range(n+1)]\nres = []\nc = 0\ns,t=0,0\ndef do(i):\n\tnonlocal c,s,t\n\tfor j in range(i,n+1,2*i):\n\t\tres.append(i)\n\t\tc += 1\n\t\tif c >= (n-1) and n>2:\n\t\t\tif s == 0:\n\t\t\t\ts = j\n\t\t\telse:\n\t\t\t\tt = j\n\treturn res\ncurr = 0\ni = 1\nwhile(i<=n):\n\t# print(i)\n\tdo(i)\n\ti = 2*i\nif n>2:\n\tres[n-1] = max(s,t)\n# print(s,t)\nfor i in res:\n\tprint(i,end=\" \")", "def solve(n,k):\n    print(1*k,end = ' ')\n    if n==2:\n        print(2*k,end = ' ')\n    if n == 3:\n        print(k,3*k,end = ' ')\n    else:\n        temp = n//2\n        if(n%2 == 0): temp -= 1\n        print((str(k)+' ')*temp,end='')\n        if(n>3):\n            solve(n//2,k*2)\n\nn = int(input())\nsolve(n,1)", "n = int(input())\na = [0]*n;\n\ndef fun(n,ptr1):\n\tnonlocal a\n\n\tif n == 1:\n\t\ta[ptr1] = 1;\n\n\telif n == 2:\n\n\t\ta[ptr1] = 1;\n\t\tptr1+=1;\n\t\ta[ptr1] = 2;\n\telif n == 3:\n\t\ta[ptr1] = 1;\n\t\tptr1 +=1;\n\t\ta[ptr1] = 1;\n\t\tptr1+=1;\n\t\ta[ptr1]=3;\n\t\n\telse:\n\t\titera = n - n//2;\n\t\t\n\t\tfor i in range(itera):\n\t\t\ta[ptr1] = 1;\n\t\t\tptr1+=1;\n\n\t\tfun(n//2,ptr1);\n\t\tfor i in range((n//2)):\n\t\t\ta[ptr1] = 2*a[ptr1];\n\t\t\tptr1+=1;\n\nfun(n,0);\nfor i in a:\n\tprint(i,end=\" \");\n\nprint();", "import math\nn=int(input())\nif n==1:\n\tprint(1)\n\treturn\na=[]\nfor i in range(1,n+1,2):\n\ta.append(1)\nb=[]\nfor i in range(2,n+1,2):\n\tb.append(i)\np=len(b)\nk=2\n#print(p,b)\nwhile p>0:\n\tc=[]\n\t#print(c)\n\tfor i in range(p):\n\t\tif b[i]%k==0 and b[i]%(k*2)!=0:\n\t\t\t#del c[i]\n\t\t\ta.append(k)\n\t\t\tp-=1\n\t\t\t#print(p)\n\t\telse:\n\t\t\tc.append(b[i])\n\tb=c[:]\n\tk=k*2\n\t#print(k,p,b)\n#print(a)\np=a[-1]//2\na.pop()\nq=p\nfor i in range(p,n+1):\n\tif i%p==0 and i>q:\n\t\tq=i\na.append(q)\n#print(a)\nfor i in a:\n\tprint(i,end=\" \")\n#a.append(math.gcd(b[0],b[1]))\n#3a.append(max(b[0],b[1]))\n#print(a)\n\t\n\t\t\n", "from math import log2\nn = int(input())\nif n == 1:\n    print(1)\n    return\nelif n == 3:\n    print(1, 1, 3)\n    return\nl = [1] * (n // 2)\nif n % 2 == 1:\n    l.append(1)\n\nxn = int(log2(n))\ntmp = n - len(l)\nfor i in range(2, xn+1):\n    fn = tmp // 2\n    if tmp % 2 == 1:\n        fn += 1\n    tmp -= fn\n    l += ([pow(2, i-1)] * fn)\nl.append((n // pow(2, xn - 1)) * pow(2, xn - 1))\nprint(' '.join(str(i) for i in l))", "\"\"\"n,L,a=map(int,input().split())\n#s=[int(x) for x in input().split()]\ned=0\nct=0\nfor j in range(0,n):\n    t,l=map(int,input().split())\n    ct=ct+((t-ed)//a)\n    ed=t+l\nt=L\nct=ct+((t-ed)//a)\nprint(ct)\"\"\"\n\n\"\"\"n,m=map(int,input().split())\ndp=[[-1 for i in range(m)] for j in range(n)]\ndp2=[[-1 for i in range(m)] for j in range(n)]\n#dp=[]\n#dp2=[]\nfor i in range(0,n):\n    s=input()\n    for j in range(0,m):\n        if(s[j]=='.'):\n            dp[i][j]=-1\n        else:\n            dp[i][j]=s[j]\nfor i in range(0,n-2):\n    for j in range(0,m-2):\n        #print(i,j)\n        p=0\n        c=0\n        for k in range(i,i+3):\n            for h in range(j,j+3):\n                p=p+1\n                if(p!=5):\n                    if(dp[k][h]=='#'):\n                        c=c+1\n\n                    \n        if(c==8):\n            p=0\n            for k in range(i,i+3):\n                for h in range(j,j+3):7\n                    p=p+1\n                    if(p!=5):\n                        dp2[k][h]='#'\n\n\n                        \n#print(dp)\n#print(dp2)\nif(dp==dp2):\n    print('YES')\nelse:\n    print('NO')\"\"\"\n\n\nimport math\nn=int(input())\nif(n==3):\n    print('1 1 3')\n\nelse:\n    t=1\n    while(t<=n):\n        ct=math.ceil((n//t)/2)\n        for i in range(0,ct):\n            print(t,end=\" \")\n        #t=t*2\n        if(ct==2 and (n//t)%2!=0):\n            t=t*3\n        else:\n            t=t*2\n    print(\" \")\n\n                            \n", "n=int(input())\nif n==1:\n    print(1);return\ny=n\ni=1\nwhile n!=0:\n    j=n//2+n%2\n    if i*2>y and n==1:\n        i=i>>1\n        x=y//i\n        print(i*x)\n    else:\n        print((str(i)+' ')*j,end='')\n    i=i<<1\n    n=n//2", "n = int(input())\nt = 1\nk = 1\nwhile n!=0:\n        if n!=3:\n            \n            k = n//2+n%2\n            print ((str(t)+' ')*k,end= '')\n            n = n-k\n            t *=2\n        else:\n            print(t,t,t*3)\n            n = 0;", "def func(n,i):\n        if n==3:\n                return (str(1*i)+' ')+(str(1*i)+' ')+(str(3*i))\n        if n%2==0:\n                odd=n//2\n        else:\n                odd=n//2+1\n        q=1*i\n        s= (str(q)+' ')*odd\n        return s\n        \n        \nfrom math import log\nn=int(input())\nif n==3:\n        s='1 1 3'\nelse:\n        s=''\n        z=1\n        while(n>0):\n                s=s+func(n,z)\n                z=z*2\n                if n==3:\n                        break\n                if n%2==0:\n                        odd=n//2\n                else:\n                        odd=n//2+1\n                n=n-odd\nprint(s)\n\n                \n                \n", "from math import ceil\nn = int(input())\nif n == 1:\n    print(1)\n    return\nif n == 2:\n\tprint('1 2')\n\treturn\nelif n == 3:\n\tprint('1 1 3')\n\treturn\no = 0\nif n&1: \n\tn -= 1\n\to = 1\nans, i, t = '1 ' * ceil(n / 2), 1, n\nn = ceil(n/2)\nj = 2\nwhile n > 1:\n\tans += (str(j) + ' ') * ((n // 2) if t&1 else ceil(n/2))\n\ti += 1\n\tj = pow(2, i)\n\tn //= 2\nprint(('1 ' if o else '') + ans + str((j//2)*(t//(j//2)))) \n# 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 4 4 4 4 8 8\n# 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 4 4 4 4 8 8 16\n# 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 4 4 4 4 8 8 24\n", "from math import log2\nimport sys\nout = sys.stdout\nn = int(input())\nif n == 3:\n    print(1, 1, 3)\nelse:\n    tmp = n\n    current = 1\n    while n != 1:\n        if n % 2 != 0:\n            z = (n//2) + 1\n        else:\n            z = n//2\n        for i in range(z):\n            out.write(str(current) + ' ')\n        n -= z\n        current *= 2\n    step = int(log2(tmp))\n    if tmp % 2**(step - 1) == 0:\n        out.write(str(tmp))\n    else:\n        q = 2**(step - 1)\n        ans = 0\n        for i in range(1, 1000):\n            if q*i <= tmp:\n                ans = max(ans, q*i)\n            else:\n                break\n        out.write(str(ans))"]