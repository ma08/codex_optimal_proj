["import sys\n\ndef Is_arth(L):\n    D=L[1]-L[0]\n    p=L[1]\n    for i in range(2,len(L)):\n        if(L[i]-p!=D):\n            return False\n        p=L[i]\n    return True\n\nn=int(sys.stdin.readline())\n\nA=list(map(int,sys.stdin.readline().split()))\n\nT=[False]*(10**5+1)\nZ=[]\nfor i in range(10**5+1):\n    Z.append([])\n\nTaken=[]\nfor i in range(n):\n    Z[A[i]]+=[i]\n\n\nAns=\"\"\nNum=0\nfor i in range(10**5+1):\n    L=len(Z[i])\n    item=i\n    if(L==0):\n        continue\n    if(L==1):\n        Num+=1\n        Ans+=str(item)+\" 0\\n\"\n    elif(L==2):\n        Num+=1\n        Ans+=str(item)+\" \"+str(Z[item][1]-Z[item][0])+\"\\n\"\n    else:\n        if(Is_arth(Z[item])):\n            Num+=1\n            Ans+=str(item)+\" \"+str(Z[item][1]-Z[item][0])+\"\\n\"\nsys.stdout.write(str(Num)+\"\\n\")\nsys.stdout.write(Ans)\n", "n = int(input())\na = list(map(int, input().split()))\n\nN = 100001\nd = [-1] * N\np = [-1] * N\nfor i in range(n):\n  if p[a[i]] == -1:\n    d[a[i]] = 0\n  else:\n    if i - p[a[i]] != d[a[i]]:\n      if d[a[i]] == 0:\n        d[a[i]] = i - p[a[i]]\n      else:\n        d[a[i]] = -1\n  p[a[i]] = i\n\ncount = 0\nfor i in range(N):\n  if d[i] != -1:\n    count += 1\nprint(count)\nprint('\\n'.join(\"{0} {1}\".format(i, d[i]) for i in range(N) if d[i] != -1))", "def AP(seq):\n    d = seq[1]-seq[0]\n    for i in range(1, len(seq)-1):\n        if seq[i+1]-seq[i]!=d:\n            return -1\n    return d\n\ndef main():\n    n = int(input())\n    s = input().split()\n    data = {}\n    answer = []\n\n    for i in range(0, len(s)):\n        item = s[i]\n        if item in data:\n            data[item]+=[i]\n        else:\n            data[item]=[i]\n\n    uniq = [int(item) for item in list(data.keys())]\n    uniq.sort()\n\n    for x in uniq:\n        iters = data[str(x)]\n        count = len(iters)\n\n        if count==1:\n            answer.append([x, 0])\n            continue\n        #else:\n        d = AP(iters)\n        if d!=-1:\n            answer.append([x, d])\n\n    t = len(answer)\n    print(t)\n    s=''\n    for a,b in answer:\n        s+=str(a)+' '+str(b)+'\\n'\n    print(s[:-1])\n\nmain()\n", "3\n\ndef readln(): return tuple(map(int, input().split()))\n\nn, = readln()\nvar = {}\nfor i, a in enumerate(readln()):\n    if a in var:\n        var[a].append(i)\n    else:\n        var[a] = [i]\nans = []\nfor x, v in list(var.items()):\n    if len(v) == 1:\n        ans.append((x, 0))\n    else:\n        d = set([v[i] - v[i - 1] for i in range(1, len(v))])\n        if len(d) == 1:\n            ans.append((x, d.pop()))\nprint(len(ans))\nprint('\\n'.join('%d %d' % f for f in sorted(ans)))\n", "n = int(input())\nA = [int(i) for i in input().split()]\n\ntable = [None for i in range(100001)]\n\nfor i,x in enumerate(A):\n\tif table[x] == None:\n\t\ttable[x] = [i,0]\n\telse:\n\t\tprevi = table[x][0]\n\t\tif previ == -1:\n\t\t\tcontinue\n\t\tprevp = table[x][1]\n\t\tif prevp == 0:\n\t\t\ttable[x][0] = i\n\t\t\ttable[x][1] = i - previ\n\t\telse:\n\t\t\tcurrentp = i - previ\n\t\t\tif currentp == prevp:\n\t\t\t\ttable[x][0] = i\n\t\t\telse:\n\t\t\t\ttable[x][0] = -1\n\noutput = [(x,t[1]) for x,t in enumerate(table) if t != None and t[0] != -1]\ns = str(len(output)) + '\\n'\nfor x,p in output:\n\ts += str(x) + ' ' + str(p) + '\\n'\nprint(s)", "#! /usr/bin/python3\n\nn = int(input())\n#a = list(map(int, input().split()))\na = tuple(map(int, input().split()))\nu = {}\nv = {}\nw = []\n\nfor i, x in enumerate(a):\n    if x in v:\n        v[x].append(i)\n    else:\n        v[x] = [i]\n\nfor x, li in list(v.items()):\n    if len(li) == 1:\n        w.append((x, 0))\n    else:\n        s = set([li[i] - li[i - 1] for i in range(1, len(li))])\n        if len(s) == 1:\n            w.append((x, s.pop()))\n\nprint(len(w))\n\nprint('\\n'.join('%d %d' %x for x in sorted(w)))\n", "#! /usr/bin/python3\n\nn = int(input())\na = list(map(int, input().split()))\n#a = tuple(map(int, input().split()))\nu = {}\nv = {}\nw = []\n\nfor i, x in enumerate(a):\n    if x in v:\n        v[x].append(i)\n    else:\n        v[x] = [i]\n\nfor x, li in list(v.items()):\n    if len(li) == 1:\n        w.append((x, 0))\n    else:\n        s = set([li[i] - li[i - 1] for i in range(1, len(li))])\n        if len(s) == 1:\n            w.append((x, s.pop()))\n\nprint(len(w))\n\nprint('\\n'.join('%d %d' %x for x in sorted(w)))\n", "#! /usr/bin/python3\n\nn = int(input())\na = list(map(int, input().split()))\n#a = tuple(map(int, input().split()))\nu = {}\nv = {}\nw = []\n\nfor i, x in enumerate(a):\n    if x in v:\n        v[x].append(i)\n    else:\n        v[x] = [i]\n\nfor x, li in list(v.items()):\n    if len(li) == 1:\n        w.append((x, 0))\n    else:\n        d = li[1] - li[0]\n        sign = True\n        for i in range(1, len(li)):\n            if li[i] - li[i - 1] != d:\n                sign = False\n        if sign:\n            w.append((x, d))\n\nprint(len(w))\n\nprint('\\n'.join('%d %d' %x for x in sorted(w)))\n", "from collections import defaultdict\nn = input()\nt = list(map(int, input().split()))\np, d = defaultdict(int), defaultdict(int)\n\nfor i, x in enumerate(t, 1):\n    if d[x] < 0: continue\n    if p[x]: \n        if d[x] and i != p[x] + d[x]: d[x] = -1\n        else: d[x] = i - p[x]\n    p[x] = i\n\ny = list(d.keys())\ny.sort()\n\nt = list(str(x) + ' ' + str(d[x]) for x in y if d[x] >= 0)\nprint(len(t))\nprint('\\n'.join(t)) ", "from collections import defaultdict\nn = input()\nt = list(map(int, input().split()))\np, d = defaultdict(int), defaultdict(int)\n\nfor i, x in enumerate(t, 1):\n    if d[x] < 0: continue\n    if p[x]: \n        if d[x] and i != p[x] + d[x]: d[x] = -1\n        else: d[x] = i - p[x]\n    p[x] = i\n\ny = list(d.keys())\ny.sort()\n\nt = list('{0} {1}'.format(x, d[x]) for x in y if d[x] >= 0)\nprint(len(t))\nprint('\\n'.join(t)) ", "import sys\n\ndef Is_arth(L):\n    D=L[1]-L[0]\n    p=L[1]\n    for i in range(2,len(L)):\n        if(L[i]-p!=D):\n            return False\n        p=L[i]\n    return True\n\nn=int(sys.stdin.readline())\n\nA=list(map(int,sys.stdin.readline().split()))\n\nT=[False]*(10**5+1)\nZ=[]\nfor i in range(10**5+1):\n    Z.append([])\n\nTaken=[]\nfor i in range(n):\n    Z[A[i]]+=[i]\n\n\nAns=\"\"\nNum=0\nfor i in range(10**5+1):\n    L=len(Z[i])\n    item=i\n    if(L==0):\n        continue\n    if(L==1):\n        Num+=1\n        Ans+=str(item)+\" 0\\n\"\n    elif(L==2):\n        Num+=1\n        Ans+=str(item)+\" \"+str(Z[item][1]-Z[item][0])+\"\\n\"\n    else:\n        if(Is_arth(Z[item])):\n            Num+=1\n            Ans+=str(item)+\" \"+str(Z[item][1]-Z[item][0])+\"\\n\"\nsys.stdout.write(str(Num)+\"\\n\")\nsys.stdout.write(Ans)\n", "n = int(input())\ninp, k = {},0\n\n# for i in input().split(\" \"):\n#     if int(i) not in list(inp.keys()):   inp[int(i)] = [k]\n#     else: inp[int(i)]+=[k]\n#     k+=1\n\ns = input().split()\n\nfor i in range(0, len(s)):\n    item = int(s[i])\n    if item in inp:\n        inp[item]+=[i]\n    else:\n        inp[item]=[i]\n\ninp_keys = [int(i) for i in inp.keys()]\ninp_keys.sort()\nresult = []\n\ndef check(arr):\n    diff = arr[1]-arr[0]\n    for i in range(1, len(arr)-1):\n        if arr[i+1]-arr[i] != diff: return False\n    return diff\n\nfor i in inp_keys:\n    j = inp[i]\n    if len(j) == 1:\n        result.append([i,0])\n        continue\n    diff = check(j)\n    if diff:   result.append([i,diff])\n\nout = \"\"\nfor i,j in result: out+=str(i)+\" \"+str(j)+\"\\n\"\n\nprint(len(result))\nprint(out[:-1])", "inp, k = {},0\nn,s = int(input()),input().split()\n\nfor i in range(0, len(s)):\n    inp_k = int(s[i])\n    if inp_k  in inp: inp[inp_k ]+=[i]\n    else: inp[inp_k] =[i]\n\ninp_keys = [int(i) for i in inp.keys()]\ninp_keys.sort()\nresult = []\n\ndef check(arr):\n    diff = arr[1]-arr[0]\n    for i in range(1, len(arr)-1):\n        if arr[i+1]-arr[i] != diff: return False\n    return diff\n\nfor i in inp_keys:\n    j = inp[i]\n    if len(j) == 1:\n        result.append([i,0])\n    else:\n        diff = check(j)\n        if diff: result.append([i,diff])\n\nout = \"\"\nfor i,j in result: out+=str(i)+\" \"+str(j)+\"\\n\"\nprint(str(len(result))+\"\\n\" + out[:-1])", "n = int(input())\na = [(int(x), y) for x, y in zip(input().split(), list(range(n)))]\na.sort()\ni = j = 0\nl = []\nwhile i < n:\n\twhile j < n and a[i][0] == a[j][0]:\n\t\tj += 1\n\ti += 1\n\tif i == j:\n\t\tl.append(str(a[i - 1][0]) + ' 0')\n\telse:\n\t\tk = a[i][1] - a[i - 1][1]\n\t\twhile i < j and a[i][1] - a[i - 1][1] == k:\n\t\t\ti += 1\n\t\tif i == j:\n\t\t\tl.append(str(a[i - 1][0]) + ' ' + str(k))\n\ti = j\nprint(len(l))\nprint('\\n'.join(l))\n", "def main():\n    input()\n    aa = [0] * 200002\n    for i, x in enumerate(map(int, input().split()), 1):\n        x *= 2\n        j, step = aa[x], aa[x + 1]\n        if j:\n            if step:\n                if j + step != i:\n                    aa[x + 1] = -1\n            else:\n                aa[x + 1] = i - j\n        aa[x] = i\n    res = []\n    for x in range(2, len(aa), 2):\n        j, step = aa[x], aa[x + 1]\n        if j and step != -1:\n            res.append(' '.join((str(x // 2), str(step))))\n    print(len(res))\n    print('\\n'.join(res))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "a = int(input())\nseq = list(map(int, input().split()))\nmass = {}\nfor i in range(a):\n    if seq[i] in mass:\n        mass[seq[i]].append(i)\n    else:\n        mass[seq[i]] = [i]\ntmp_mass = []\nfor key, value in list(mass.items()):\n    flag = True\n    if len(value) == 1:\n        tmp_mass.append((key, 0))\n        continue\n    elif len(value) == 2:\n        tmp_mass.append((key, value[1] - value[0]))\n        continue\n    else:\n        for i in range(len(value) - 2):\n            if value[i+2] - value[i+1] == value[i+1] - value[i]:\n                pass\n            else:\n                flag = False\n        if flag:\n            tmp_mass.append((key, value[len(value)-1] - value[len(value)-2]))\nprint(len(tmp_mass))\ntmp_mass.sort(key = lambda x: x[0])\nfor i in range(len(tmp_mass)):\n    print(' '.join(map(str, tmp_mass[i])))\n", "n = int(input())\na = [int(i) for i in input().split()]\nocc = dict()\nfor i in range(0, len(a)):\n    if a[i] not in list(occ.keys()):\n        occ[a[i]] = []\n    occ[a[i]].append(i)\nt = 0\nout = \"\"\nfor k in sorted(occ.keys()):\n    ini = occ[k][0]\n    diff = 0\n    if len(occ[k]) > 1:\n        diff = occ[k][1] - occ[k][0]\n    valid = True\n    for i in range(2, len(occ[k])):\n        if occ[k][i] - occ[k][i - 1] != diff:\n            if a[0] == 100000:\n                print(str(occ[k][i - 1]) + \" \" + str(occ[k][i]))\n                return\n            valid = False\n            break\n    if valid:\n        out += (str(k) + \" \" + str(diff) + \"\\n\")\n        t += 1    \nprint(str(t) + \"\\n\" + out)\n", "_ = input()\nnumbers = {}\n\nfor index, num in enumerate(input().split()):\n    num = int(num)\n    try: numbers[num].append(index)\n    except: numbers[num] = [index]\n\ntemp = {}\nsize = 0\n\nfor num, ind in numbers.items():\n    try: prog = ind[1] - ind[0]\n    except IndexError: \n        temp[num] = 0\n        size += 1\n        continue\n\n    for i in range(2, len(ind)):\n        new_prog = ind[i] - ind[i - 1]\n        if new_prog != prog:\n            prog = -1\n            break\n\n    if prog != -1:\n        temp[num] = prog\n        size += 1\n\nprint(size)\n\nkeys = sorted(temp.keys())\n\nfor key in keys:\n    print(key, temp[key])", "n = int(input())\nb = [(int(x), y) for x, y in zip(input().split(), list(range(n)))]\nb.sort()\nb+=[(0,0)]\nt=0\nans=[]\ni=0\nseq=0\nwhile i<n:\n    while b[i][0]!=b[i+1][0]:\n        ans.append(str(b[i][0])+\" 0\")\n        i+=1\n        if i==n:\n            break\n    if i==n:\n        i+=1\n    elif b[i][0]==b[i+1][0]:\n        seq=0\n        while b[i][0]==b[i+1][0]:\n            if seq==0:\n                seq=b[i+1][1]-b[i][1]\n                i+=1\n            elif b[i+1][1]-b[i][1]==seq:\n                i+=1\n            else:\n                seq=-1\n                i+=1\n        if seq==-1:\n            i+=1\n        else:\n            ans.append(str(b[i][0])+\" \"+str(seq))\n            i+=1\n\n            \nprint(len(ans))\nprint(\"\\n\".join(ans))\n", "n = int(input())\na = list(map(int, input().split()))\n\nx = 100001\n\np = [-1] * x\nl = [-1] * x\nt = 0\n\nfor i in range(n):\n    if p[a[i]] == -1:\n        p[a[i]] = 0\n        l[a[i]] = i\n    elif p[a[i]] == 0:\n        p[a[i]] = i - l[a[i]]\n        l[a[i]] = i\n    elif p[a[i]] > 0:\n        if p[a[i]] == i - l[a[i]]:\n            l[a[i]] = i\n        else:\n            p[a[i]] = -2\ns=\"\"\nfor i in range(x):\n    if p[i] >= 0:\n        t += 1\n        s += str(i)+\" \"+ str(p[i])+\"\\n\"\nprint(t)\nprint(s)", "# http://codeforces.com/problemset/problem/352/B\nget=lambda:(list(map(int,input().split())))\ndef isap(l):\n    if len(l)<2:\n        return len(l)-1\n    d=l[1]-l[0]\n    i=0\n    n=len(l)\n    while i<n-1:\n        if l[i+1]-l[i]!=d:\n            return -1\n        i+=1\n    return d\no=33\nn=int(input())\nl=get()\nfrom collections import defaultdict\nd=defaultdict(lambda :[])\nfor j,i in enumerate(l):\n    d[i].append(j)\nans={}\n#print(d)\nfor x in d:\n    t=isap (d[x])\n    if t !=-1:\n        ans[x]=t\nprint(len(ans))\nfor i in sorted(ans):\n    print(i,ans[i])\n\n    \n", "from collections import defaultdict\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    \n    m = defaultdict(list)\n    for i in range(n):\n        m[a[i]].append(i)\n\n    ret = []\n    for k in m:\n        if len(m[k]) == 1:\n            ret.append((k, 0))\n        else:\n            v = m[k]\n            diff = None\n            good = True\n            for i in range(1, len(v)):\n                d = v[i] - v[i-1]\n                if diff == None:\n                    diff = d\n                else:\n                    if diff != d:\n                        good = False\n                        break\n            if i == len(v) - 1 and good:\n                ret.append((k, diff))\n    ret = sorted(ret, key=lambda x: x[0])\n    print(len(ret))\n    for r in ret:\n        print(r[0], r[1])\n\nmain()\n", "from collections import defaultdict\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    \n    m = defaultdict(list)\n    for i in range(n):\n        m[a[i]].append(i)\n\n    ret = []\n    for k in m:\n        if len(m[k]) == 1:\n            ret.append((k, 0))\n        else:\n            v = m[k]\n            diff = None\n            good = True\n            for i in range(1, len(v)):\n                d = v[i] - v[i-1]\n                if diff == None:\n                    diff = d\n                elif diff != d:\n                    good = False\n                    break\n            if i == len(v) - 1 and good:\n                ret.append((k, diff))\n    ret = sorted(ret, key=lambda x: x[0])\n    print(len(ret))\n    for r in ret:\n        print(r[0], r[1])\n\nmain()\n", "raselBhai = lambda:list(map(int,input().split()))\n\nn = int(input())\nlst = raselBhai()\nm = 10**5+5\ndst = [-1] * m\npst = [-1] * m\nfor i in range(n):\n    if pst[lst[i]] == -1:\n        dst[lst[i]] = 0\n    else:\n        if i - pst[lst[i]] != dst[lst[i]]:\n            if dst[lst[i]] == 0:\n                dst[lst[i]] = i - pst[lst[i]]\n            else:\n                dst[lst[i]] = -1\n    pst[lst[i]] = i\ncnt = 0\nfor i in range(m):\n    if dst[i] != -1:\n        cnt += 1\nprint(cnt)\n'''for i in range(m):\n    if dst[i] != -1:\n        print('\\n'.join(\"{0} {1}\".format(dst[i])))'''\nprint('\\n'.join(\"{0} {1}\".format(i, dst[i]) for i in range(m) if dst[i] != -1))\n"]