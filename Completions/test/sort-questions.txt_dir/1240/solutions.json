["3\n\nn = int(input())\nl = []\nr = []\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    l.append(a)\n    r.append(b)\n\nL = sum(l)\nR = sum(r)\nmx = abs(L - R)\nk = 0\nfor i in range(n):\n    Lp = L - l[i] + r[i]\n    Rp = R - r[i] + l[i]\n    if abs(Lp - Rp) > mx:\n        mx = abs(Lp - Rp)\n        k = i + 1\n\nprint(k)\n", "read = lambda: list(map(int, input().split()))\nn = int(input())\nl, r = [0] * n, [0] * n\nL = R = 0\nfor i in range(n):\n    l[i], r[i] = read()\n    L += l[i]\n    R += r[i]\nMax = abs(L - R)\nans = 0\nfor i in range(n):\n    cur = abs((L - l[i] + r[i]) - (R - r[i] + l[i]))\n    if cur > Max:\n        Max = cur\n        ans = i + 1\nprint(ans)\n", "#!/usr/bin/env python3\n\n\ndef main():\n    try:\n        while True:\n            n = int(input())\n            left = [0] * n\n            right = [0] * n\n            for i in range(n):\n                left[i], right[i] = list(map(int, input().split()))\n            ls = sum(left)\n            rs = sum(right)\n            best = abs(ls - rs)\n            result = -1\n            for i, (cl, cr) in enumerate(zip(left, right)):\n                cur = abs((ls - cl + cr) - (rs - cr + cl))\n                if cur > best:\n                    best = cur\n                    result = i\n\n            print(result + 1)\n\n    except EOFError:\n        pass\n\n\nmain()\n", "# You lost the game.\n\nn = int(input())\nC = [list(map(int, input().split())) for i in range(n)]\n\nL = sum([C[i][0] for i in range(n)])\nR = sum([C[i][1] for i in range(n)])\n\nif 1:\n    ml = 0\n    mr = 0\n    ind1 = -1\n    ind2 = -1\n    for i in range(n):\n        if C[i][1]-C[i][0] > ml:\n            ml = C[i][1]-C[i][0]\n            ind1 = i\n        elif C[i][0]-C[i][1] > mr:\n            mr = C[i][0]-C[i][1]\n            ind2 = i\n\nD = abs(L-R)\nD1 = abs((L+C[ind1][1]-C[ind1][0]) - (R+C[ind1][0]-C[ind1][1]))\nD2 = abs((L+C[ind2][1]-C[ind2][0]) - (R+C[ind2][0]-C[ind2][1]))\n\nif D1 > D2 and D2 > D:\n    print(1+ind1)\nelif D2 > D1 and D1 > D:\n    print(1+ind2)\nelif D2 > D:\n    print(1+ind2)\nelif D1 > D:\n    print(1+ind1)\nelse:\n    print(0)\n", "n = int(input())\nL, R = 0, 0\na = []\nfor i in range(n):\n    li, ri = map(int, input().split())\n    a.append([li, ri])\n    L += li\n    R += ri\nans = abs(L - R)\nansi = 0\nfor i in range(n):\n    l1 = L - a[i][0] + a[i][1]\n    r1 = R - a[i][1] + a[i][0]\n    if abs(l1 - r1) > ans:\n        ans = abs(l1 - r1)\n        ansi = i + 1\nprint(ansi)", "n = int(input())\nL, R = 0, 0\na = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    L += l\n    R += r\n    a.append([l, r])\nans = [L, R, 0]\nfor i in range(n):\n    nL = L - a[i][0] + a[i][1]\n    nR = R - a[i][1] + a[i][0]\n    #print(abs(ans[0] - ans[1]), abs(nL - nR))\n    if abs(ans[0] - ans[1]) < abs(nL - nR):\n        ans = [nL, nR, i + 1]\nprint(ans[2]) ", "n = int(input())\nlrr = []\nrrr = []\nls = 0\nrs = 0\nfor i in range(n):\n    a,b = map(int,input().split())\n    lrr.append(a)\n    rrr.append(b)\n    ls += a\n    rs += b\n\nmx = abs(ls-rs)\nmxi = 0\n\nfor i in range(n):\n    k = abs((ls-lrr[i]+rrr[i])-(rs-rrr[i]+lrr[i]))\n    if(mx<k):\n        mx = k\n        mxi = i+1\nprint(mxi)", "n = int(input())\nl = []\nr = []\nfor i in range(n):\n        li, ri = list(map(int, input().split(' ')))\n        l.append(li)\n        r.append(ri)\nL = sum(l)\nR = sum(r)\nbeauty = abs(L - R)\nbest = -1\nfor i in range(n):\n        LL = L - l[i] + r[i]\n        RR = R - r[i] + l[i]\n        pos_beauty = abs(LL - RR)\n        if pos_beauty > beauty:\n                beauty = pos_beauty\n                best = i\nprint(best + 1)\n", "n = int(input())\ncoloms = [[None, None] for i in range(n)]\nfor i in range(n):\n    coloms[i][0], coloms[i][1] = list(map(int, input().split()))\nleft_men = sum([t[0] for t in coloms])\nright_men = sum([t[1] for t in coloms])\nbeauty = abs(left_men - right_men)\nfirst = beauty\nans = 0\nfor i in range(n):\n    colom = coloms[i]\n    new_beauty = abs((left_men - colom[0] + colom[1]) - (right_men - colom[1] + colom[0]))\n    if new_beauty > beauty:\n        ans = i + 1\n        beauty = new_beauty\nprint(ans)\n", "n = int(input())\na = []\nsl = 0\nsr = 0\nfor i in range(n):\n    q,w = list(map(int,input().split()))\n    a+=[(q,w)]\n    sl +=q\n    sr+=w\ncur = abs(sr-sl)\nm = 0\nfor i in range(n):\n    if abs((sl-a[i][0]+a[i][1]) - (sr-a[i][1]+a[i][0])) > cur:\n        cur = abs((sl-a[i][0]+a[i][1]) - (sr-a[i][1]+a[i][0]))\n        m = i+1\nprint(m)\n        \n", "n = int(input())\na = [0] * n\nR = 0\nL = 0\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\n    R += a[i][1]\n    L += a[i][0]\n\nm = abs(L - R)\nans = 0\nfor i in range(n):\n    b = abs((L - a[i][0] + a[i][1]) - (R - a[i][1] + a[i][0]))\n    if b > m:\n        ans = i + 1\n        m = b\n\nprint(ans)\n", "n = int(input())\n\ncols = []\n\nfor i in range(n):\n\tcols.append(list(map(int, input().split())))\n\n\nleft = 0\nright = 0\n\nfor col in cols:\n\tleft += col[0]\n\tright += col[1]\n\nbest = -1\nmax_raze = abs(right - left)\n\nfor i in range(n):\n\t_sleft = left - cols[i][0] + cols[i][1]\n\t_sright = right - cols[i][1] + cols[i][0]\n\n\tif abs(_sleft - _sright) > max_raze:\n\t\tbest = i\n\t\tmax_raze = abs(_sleft - _sright)\n\nprint(best + 1)\n\n", "n = int(input())\nleft = []\nright = []\nR = 0\nL = 0\nfor i in range(n):\n    a, b = map(int, input().split())\n    left.append(a)\n    L += a\n    R += b\n    right.append(b)\nbase = abs(L - R)\nm = base\ncur = -1\nfor i in range(n):\n    L1 = L - left[i] + right[i]\n    R1 = R - right[i] + left[i]\n    curm = abs(L1 - R1)\n    if curm > m:\n        m = curm\n        cur = i\nprint(cur + 1)", "n=int(input())\nl=[list(map(int,input().split())) for _ in range(n)]\nfor i in range(n):\n    l[i]=l[i][0]-l[i][1]\nans=0\nsu=sum(l)\nma=abs(su)\nfor i in range(n):\n    if abs(su-l[i]-l[i])>ma: ma=abs(su-l[i]-l[i]); ans=i+1\nprint(ans)", "n = int(input())\nl = []\nr = []\nsuml  = 0\nsumr  = 0\nfor i in range(n):\n    a, b = input().split(' ')\n    l.append(int(a))\n    r.append(int(b))\n    suml += int(a)\n    sumr += int(b)\ndiff = abs(suml-sumr)\nindex = -1\nfor i in range(n):\n    if abs((suml-l[i]+r[i])-(sumr-r[i]+l[i])) > diff:\n        diff = abs((suml-l[i]+r[i])-(sumr-r[i]+l[i]))\n        index = i\nprint(index+1)", "n = int(input())\nl = list([tuple(map(int, input().split())) for x in range(n)])\np, q = list(map(sum, list(zip(*l))))\n\no = abs(p - q)\na, ai = o, 0\n\nfor i in range(n):\n\tu, v = l[i]\n\tp += v - u\n\tq += u - v\n\tif abs(p - q) > a:\n\t\ta, ai = abs(p - q), i + 1\n\tp -= v - u\n\tq -= u - v\n\nprint(ai)\n", "import sys\n\nfin = sys.stdin\nfout = sys.stdout\nresults = []\nn = int(fin.readline())\ncolumns = [0] * n\nallL = 0\nallR = 0\nfor i in range(n):\n    l, r = list(map(int, fin.readline().split()))\n    columns[i] = (l, r)\n    allL += l\n    allR += r\nresults.append((abs(allL - allR), -1))\nfor i in range(n):\n    tempL = allL\n    tempR = allR\n    tempL -= columns[i][0]\n    tempR -= columns[i][1]\n    tempL += columns[i][1]\n    tempR += columns[i][0]\n    results.append((abs(tempL - tempR), i))\nmR = results[0][0]\nmN = results[0][1]\nfor result in results:\n    if result[0] > mR:\n        mR = result[0]\n        mN = result[1]\nfout.write(str(mN + 1))\n", "from copy import deepcopy\n\ndef f(n, m):\n    return abs(n - m)\n\nn = int(input())\nmas = []\nL = 0\nR = 0\nfor i in range(n):\n    l, r = map(int, input().split())\n    mas.append((l, r))\n    L += l\n    R += r\nsum = f(L, R)\nold = deepcopy(sum)\nnew = deepcopy(old)\n#print(L, R)\nfor i in range(n):\n    L -= mas[i][0]\n    R -= mas[i][1]\n    L += mas[i][1]\n    R += mas[i][0]\n    #print(L, R)\n    if f(L, R) > new:\n        ans = i\n        new = f(L, R)\n    L -= mas[i][1]\n    R -= mas[i][0]\n    L += mas[i][0]\n    R += mas[i][1]\nif new - old == 0:\n    print(0)\nelse:\n    print(ans + 1)", "from sys import stdin as fin\n# fin = open(\"cfr378b.in\")\n\nn = int(fin.readline())\n# k, r = map(int, fin.readline().split())\n# line = tuple(fin.readline().strip())\n# line = fin.readline().strip()\n# cols = (tuple(map(int, fin.readline().strip().split())) for i in range(n))\nl, r = [None] * n, [None] * n\nls = rs = 0\nfor i in range(n):\n    l[i], r[i] = map(int, fin.readline().strip().split())\n    ls += l[i]\n    rs += r[i]\n\nmaxv = abs(ls - rs)\nmaxi = None\nfor i in range(n):\n    nabs = abs((ls - l[i] + r[i]) - (rs - r[i] + l[i]))\n    if nabs > maxv:\n        maxv = nabs\n        maxi = i\n\nprint(maxi + 1 if maxi is not None else 0)", "n = int(input())\na = [0] * n\nl = 0\nr = 0\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\n    l += a[i][0]\n    r += a[i][1]\nbest = abs(l - r)\nans = 0\nfor i in range(n):\n    new = abs((l - a[i][0] + a[i][1]) - (r - a[i][1] + a[i][0]))\n    if new > best:\n        best = new\n        ans = i + 1\nprint(ans)", "import math,sys,re,itertools,pprint,collections\nri,rai=lambda:int(input()),lambda:list(map(int, input().split()))\n\nn = ri()\na = [rai() for i in range(n)]\n\ns = 0\nfor l, r in a:\n    s += l - r\n\nres = 0\nsres = abs(s)\n\nfor i in range(n):\n    l, r = a[i]\n    s -= l - r\n    s += r - l\n    if abs(s) > sres:\n        res = i + 1\n        sres = abs(s)\n    s -= r - l\n    s += l - r\n\nprint(res)\n", "n = int(input())\nsum = 0\na = []\nb = []\nfor i in range(0, n):\n    c = input()\n    c = c.split()\n    a.append(int(c[0]))\n    b.append(int(c[1]))\n    sum += a[i] - b[i]\nv = abs(sum)\nans = -1\nfor i in range(0, n):\n    vv = sum - 2*(a[i] - b[i])\n    vv = abs(vv)\n    if(vv > v):\n        v = vv\n        ans = i\nprint(ans + 1)", "n = int(input());\nl = [0] * n;\nr = [0] * n;\n\ncur_res = 0;\nfor i in range(n):\n    l[i], r[i] = [int(x) for x in input().split()];\n    cur_res += l[i] - r[i];\n\nmax_res = abs(cur_res);\nmax_indx = -1;\n\nfor i in range(n):\n    tmp_res = abs(cur_res - 2 * (l[i] - r[i]));\n    if tmp_res > max_res:\n        max_res = tmp_res;\n        max_indx = i;\n\nprint((max_indx + 1));\n", "n = int(input())\nl, r = 0, 0\na = [] \nfor i in range(n):\n    l_i, r_i = map(int, input().split())\n    l += l_i\n    r += r_i\n    a.append([l_i, r_i])\nans = abs(l - r)\nind = 0\nfor i in range(n):\n    if (abs(l - a[i][0] + a[i][1] - (r - a[i][1] + a[i][0])) > ans):\n        ans = abs(l - a[i][0] + a[i][1] - (r - a[i][1] + a[i][0]))\n        ind = i + 1\nprint(ind)"]