["T = int(input())\n\nfor _ in range(T):\n    s = input()\n    n = len(s)\n    res = 10 ** 100\n    for i in range(n + 1):\n        p,q = s[:i], s[i:]\n        res = min(res, p.count('0') + q.count('1'))\n        res = min(res, p.count('1') + q.count('0'))\n    print(res)\n", "import sys, random, math\nfrom bisect import bisect_left, bisect_right\ninput = sys.stdin.readline\n\ndef main():\n    inf = 10 ** 20\n\n    t = int(input())\n#    t, a, b = map(int, input().split())\n#    t = 1\n    \n    for _ in range(1, t+1):\n    #    print(\"Case #{}: \".format(_), end = '')\n        \n        s = input().strip()\n        ps0, ps1 = [0], [0]\n        for i in range(len(s)):\n            if(s[i] == '0'):\n                ps0.append(ps0[-1]+1)\n                ps1.append(ps1[-1])\n            else:\n                ps0.append(ps0[-1])\n                ps1.append(ps1[-1]+1)\n        ans = inf\n        for i in range(len(s)):\n            ans = min(ans, (ps0[i] - ps0[0]) + (ps1[len(s)] - ps1[i]))\n            ans = min(ans, (ps1[i] - ps1[0]) + (ps0[len(s)] - ps0[i]))\n        \n        print(ans)\n        \nmain()", "N, = list(map(int, input().split()))\nfor _ in range(N):\n    s = input().strip()\n    x = [0]*(len(s)+1)\n    y = [0]*(len(s)+1)\n    for i in range(1, len(s)+1):\n        if s[i-1] == \"1\":\n            x[i] = x[i-1]+1\n            y[i] = y[i-1]\n        else:\n            x[i] = x[i-1]\n            y[i] = y[i-1]+1\n    r1=r2=len(s)\n    for i in range(1, len(s)+1):\n        r1=min(r1, x[i-1]+(y[-1]-y[i]))\n        r2=min(r2, y[i-1]+(x[-1]-x[i]))\n    print(min(r1, r2))\n", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n  s = input().rstrip()\n  n = len(s)\n  x = s.count(\"1\")\n  op1 = [n]*n\n  cnt = 0\n  ans = n\n  for i in range(n):\n    if s[i] == \"1\":\n      cnt += 1\n    op1[i] = (i+1)-cnt+x-cnt\n    ans = min(ans,op1[i],n-op1[i])\n  print(ans)\n", "\"\"\"\nAuthor: Q.E.D\nTime: 2020-05-31 09:41:24\n\"\"\"\nT = int(input())\nfor _ in range(T):    \n    s = input()\n    one = [0]\n    zero = [0]\n    for i, c in enumerate(s):\n        if c == '0':\n            zero.append(zero[-1] + 1)\n            one.append(one[-1])\n        else:\n            one.append(one[-1] + 1)\n            zero.append(zero[-1])\n    n = len(s)\n    ans = n\n    for i in range(1, n + 1):\n        ans = min(ans, zero[i] + one[n] - one[i])\n        ans = min(ans, one[i] + zero[n] - zero[i])\n    print(ans)", "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    s = input().strip()\n    n = len(s)\n\n    tot0 = 0\n    tot1 = 0\n    for c in s:\n        if c == '0':\n            tot0 += 1\n        else:\n            tot1 += 1\n    \n    best = min(tot0, tot1)\n\n\n    cur0 = 0\n    cur1 = 0\n    for c in s:\n        if c == '0':\n            cur0 += 1\n        else:\n            cur1 += 1\n\n        best = min((best, cur0 + (tot1 - cur1), cur1 + (tot0 - cur0)))\n\n    print(best)\n        \n    \n", "q = int(input())\nfor ii in range(q):\n\ts = input()\n\tn = len(s)\n\twyn = 5298528589245892\n\twyn = min(wyn, s.count('0'))\n\twyn = min(wyn, s.count('1'))\n\t#00001111\n\tcyk = s.count('0')\n\tfor i in range(n):\n\t\tif s[i] == '1':\n\t\t\tcyk +=1\n\t\telse:\n\t\t\tcyk -= 1\n\t\twyn = min(wyn,cyk)\n\tcyk = s.count('1')\n\tfor i in range(n):\n\t\tif s[i] == '0':\n\t\t\tcyk += 1\n\t\telse:\n\t\t\tcyk -= 1\n\t\twyn = min(wyn,cyk)\n\tprint(wyn)", "T = int(input())\n\ndef solve():\n    S = input()\n    total_0 = 0\n    total_1 = 0\n\n    for i in range(len(S)):\n        if S[i] == '0':\n            total_0 += 1\n        else:\n            total_1 += 1\n    ans = len(S)\n    count_0, count_1 = 0,0\n#    print(total_0,total_1)\n    for i in range(len(S)):\n        # all 0 then all 1\n        ans01 = count_1 + (total_0-count_0)\n        # all 1 then all 0\n        ans10 = count_0 + (total_1-count_1)\n\n        if S[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n\n        ans = min(ans,ans01,ans10)\n    print(ans)\n\nfor _ in range(T):\n    solve()\n", "from math import *\n\ndef r1(t):\n    return t(input().strip())\n\ndef r2(t):\n    return [t(i) for i in input().strip().split()]\n\ndef r3(t):\n    return [t(i) for i in input().strip()]\n\nfor _ in range(int(input())):\n    t = r3(int)\n    ps = 0\n    ss = sum(t)\n    n = len(t)\n    ans = n\n    for i in range(0, n):\n        if (i > 0):\n            ss -= t[i - 1]\n            ps += t[i - 1]\n        res = min(i - ps + ss, ps + n - i - ss)\n        ans = min(res, ans)\n\n    print(ans)\n    \n", "for _ in range(int(input())):\n    A = str(input())\n    x = 0\n    for i in range(len(A)):\n        if A[i] == '1':\n            x += 1\n    minn = x\n    xx = x\n    for i in range(len(A)):\n        if A[i] == '1':\n            xx -= 1\n        else:\n            xx += 1\n        minn = min(minn, xx)\n    xx = len(A) - x\n    minn = min(minn, len(A) - x)\n    for i in range(len(A)):\n        if A[i] == '0':\n            xx -= 1\n        else:\n            xx += 1\n        minn = min(minn, xx)\n    print(minn)", "import sys\nreadline = sys.stdin.readline\n\nT = int(readline())\nAns = [None]*T\nfor qu in range(T):\n    S = list(map(int, readline().strip()))\n    N = len(S)\n    so = S.count(1)\n    ans = min(so, N-so)\n\n    table = S[:]\n    for i in range(1, N):\n        table[i] += table[i-1]\n    \n    for i in range(N):\n        one = table[i]\n        zero = i+1-one\n        \n        no = so - one\n        nz = N-(i+1)-no\n        \n        ans = min(ans, no+zero, one+nz)\n    Ans[qu] = ans\n\nprint('\\n'.join(map(str, Ans)))\n"]