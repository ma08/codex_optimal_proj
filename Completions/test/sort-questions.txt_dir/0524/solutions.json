["\n\nn=int(input())\na=list(map(int,input().split()))\na=sorted(a)\n\nif(n>65):\n\tprint(sum(a)-n)\nelif(n==1 or n==2):\n\tprint(a[0]-1)\nelse:\n\tans=10**20\n\n\tfor i in range(1,50000):\n\t\tnow=1\n\t\tta=0\n\t\tfor j in a:\n\t\t\tta+=abs(now-j)\n\t\t\tnow*=i\n\t\tans=min(ans,ta)\n\n\tprint(ans)\n", "n = int(input())\nb = list(map(int, input().split()))\nb.sort()\nans = float(\"inf\")\nj = 1\nwhile (j ** (n - 1) <= 10 ** 10):\n    s = 0\n    for p in range(n):\n        s += abs(j ** p - b[p])\n    ans = min(ans, s)\n    j += 1\nprint(ans)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "n = int(input())\narr = sorted(list(map(int, input().split())))\n\nans = sum(arr) - n\n\nfor i in range(2, 10 ** 9):\n    if abs(i ** (n - 1) - arr[-1]) > ans:\n        break\n\n    ans2 = 0\n    for j in range(0, n):\n        ans2 += abs(i ** j - arr[j])\n\n    ans = min(ans, ans2)\n\nprint(ans)\n", "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\n\nfrom itertools import accumulate\nfrom functools import lru_cache\n\nM = mod = 998244353\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n\ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\n\n\n\nn = val()\nl = sorted(li())\nif n <= 36:\n    ans = float('inf')\n    for i in range(1, 10 ** 5):\n        curr = 0\n        for j in range(n):\n            curr += abs(l[j] - i ** j)\n            if i ** j > 10 ** 10:\n                curr = float('inf')\n                break\n        ans = min(ans, curr)\nelse:\n    ans = 0\n    for j in l:\n        ans += abs(j - 1)\nprint(ans)", "n = int(input())\nb = list(map(int,input().split()))\nb.sort()\nval = b[-1]**(1/(n-1))\npos1 = int(val)\npos2 = int(val) + 1\nval1 = 0\nval2 = 0\nfor i in range(n):\n\tval1 += abs(b[i]-(pos1**i))\n\tval2 += abs(b[i]-(pos2**i))\nprint(min(val1,val2))\n", "import sys\nimport heapq, functools, collections\nimport math, random\nfrom collections import Counter, defaultdict\n\n# available on Google, not available on Codeforces\n# import numpy as np\n# import scipy\n\n\ndef solve(lst):  # fix inputs here\n    lst = sorted(lst)\n    console(\"----- solving ------\")\n    console(lst)\n\n    if len(lst) > 40:\n        return sum(lst) - len(lst)   \n\n    base = 0\n    minres = 10**11\n    while base**len(lst) < (10**15):\n        req = [base**i for i in range(len(lst))]\n        diff = [abs(r-x) for r,x in zip(req, lst)]\n        # console(req, base, diff, sum(diff))\n        minres = min(minres, sum(diff))\n        base += 1\n\n    return minres\n\n\ndef console(*args):  # the judge will not read these print statement\n    print('\\033[36m', *args, '\\033[0m', file=sys.stderr)\n    return\n\n# fast read all\n# sys.stdin.readlines()\n\n# for case_num in range(int(input())):\nfor _ in range(1):\n    # read line as a string\n    # strr = input()\n\n    # read line as an integer\n    _ = int(input())\n    \n    # read one line and parse each word as a string\n    # lst = input().split()\n\n    # read one line and parse each word as an integer\n    lst = list(map(int,input().split()))\n\n    # read matrix and parse as integers (after reading read nrows)\n    # lst = list(map(int,input().split()))\n    # nrows = lst[0]  # index containing information, please change\n    # grid = []\n    # for _ in range(nrows):\n    #     grid.append(list(map(int,input().split())))\n\n    res = solve(lst)  # please change\n    \n    # Google - case number required\n    # print(\"Case #{}: {}\".format(case_num+1, res))\n\n    # Codeforces - no case number required\n    print(res)\n", "n = int(input())\nan = list(sorted(map(int, input().split())))\n\nans = sum(an)-n\nfor i in range(2, 10**5):\n    newa = 0\n    for j in range(n):\n        newa += abs(an[j]-i**j)\n        if newa >= ans:\n            break\n    if newa < ans:\n        ans = newa\n\nprint(ans)\n", "N = int(input())\narr = [int(x) for x in input().split()]\narr = sorted(arr)\nMAX_NUM = 1e18\n\nans = 1e18\nfor i in range(1,32000):\n\tcurr = 0\n\tnum = 1\n\tfor j in range(N):\n\t\tcurr += abs(arr[j]-num)\n\t\tnum *= i\n\t\tif curr > MAX_NUM:\n\t\t\tbreak\n\tif curr > MAX_NUM:\n\t\tbreak\n\tans = min(ans, curr)\n\nprint(ans)", "n = int(input())\narr = [*map(int, input().split())]\n\narr.sort()\nx = int(arr[-1] ** (1 / (n - 1)))\ny = x + 1\nans = res = 0\n\nfor i, j in zip(arr, range(n)):\n\tans += abs(i - (x ** j))\n\tres += abs(i - (y ** j))\n\nprint(min(ans, res))", "import sys\nreader = (s.rstrip() for s in sys.stdin)\ninput = reader.__next__\n\n            \nn = int(input())\n\narry = list(map(int,input().split()))\n\nmaxNum = max(arry)\n\nmaxRecur = maxNum ** (1/(n-1))\n\ncurrMin=float(\"inf\")\n#print(maxRecur)\narry.sort()\nfor i in range(int(maxRecur)+2):\n    curr = 0\n    for j in range(n):\n        #print(i**j)\n        curr += abs(i**j-arry[j])\n    #print(i,curr)\n    currMin = min(currMin,curr)\nprint(currMin)\n\n", "n=int(input())\nl=list(map(int,input().split()))\nl.sort()\ncost=sum([i-1 for i in l])\nc=2\ncon=True\nwhile con:\n    tmp=0\n    cc=1\n    for i in range(n):\n        tmp+=abs(l[i]-cc)\n        if cost<tmp: \n            con=False\n            break\n        cc*=c\n    if con: cost=tmp\n    c+=1\n\nprint(cost)", "from collections import Counter\nimport math\nn=int(input())\nl=list(map(int,input().split()))\nl.sort()\nm=l[-1]\np=m**(1/(n-1))\nans=math.ceil(p)\nans1=int(p)\nc1=0\nc2=0\nfor i in range(n):\n    if((ans**i)!=l[i]):\n        c1+=abs((ans**i)-l[i])\nfor i in range(n):\n    if((ans1**i)!=l[i]):\n        c2+=abs((ans1**i)-l[i])\nprint(min(c1,c2))", "n=int(input())\na=list(map(int,input().split()))\n\na.sort()\nshita=int(a[-1]**(1/(n-1)))\nue=shita+1\n\nsumshita=0\nsumue=0\n\nfor i in range(n):\n    targetshita=shita**i\n    sumshita+=abs(targetshita-a[i])\n    targetue=ue**i\n    sumue+=abs(targetue-a[i])\n\nprint(min(sumshita,sumue))", "n=int(input())\na=list(map(int,input().split()))\ndef f(x):\n    p=1\n    re=0\n    for i in range(n):\n        re+=abs(p-a[i])\n        p*=x\n    return re\ndef g():\n    re=0\n    for i in range(n):\n        re+=a[i]-1\n    return re\na.sort()\nif n>32:\n    print(g())\n    return\ni=1\nans=10**18\nwhile 1:\n    tmp=f(i)\n    if ans<tmp: break\n    ans=tmp\n    i+=1\nprint(ans)\n", "from math import log10\nN = int(input())\nl = list(map(int,input().split()))\nl.sort()\nx = round(pow(10,log10(l[-1])/(N-1)))\nminm = pow(10,15)\nfor b in range(max(1,x-3),x+2):\n    n = 0\n    for i in range(N):\n        n += abs(pow(b,i) - l[i])\n    minm = min(minm,n)\nprint(minm)\n", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nans = int(a[-1] ** (1 / (n - 1)))\nprint(min(sum(abs(pow(ans, i) - a[i]) for i in range(n)), sum(abs(pow(ans + 1, i) - a[i]) for i in range(n))))", "n=int(input())\narr=list(map(int,input().split()))\narr.sort()\nm=0\nfor i in arr:\n    m+=abs(i-1)\nc=2\nif n>10:\n    while c<20:\n        t=0\n        for i in range(n):\n            t+=abs(c**i-arr[i])\n            if t>=m:\n                break\n        if t<m:\n            m=t\n        c+=1\n    print(m)\nelse:\n    while c<=1000000:\n        t=0\n        for i in range(n):\n            t+=abs(c**i-arr[i])\n            if t>=m:\n                break\n        if t<m:\n            m=t\n        c+=1\n    print(m)\n", "def solve(arr):\n    arr.sort()\n    c = 2\n    ans = sum(v - 1 for v in arr)\n    while True:\n        cur = 1\n        cur_ans = 0\n        for v in arr:\n            if cur - arr[-1] > ans:\n                return ans\n            cur_ans += abs(v - cur)\n            cur *= c\n        ans = min(ans, cur_ans)\n\n        c += 1\n\n\nn = int(input())\n*arr, = list(map(int, input().split()))\nprint(solve(arr))\n", "\"\"\"\nNTC here\n\"\"\"\n\n\ndef iin(): return int(input())\n\n\ndef lin(): return list(map(int, input().split()))\n\n\ndef main():\n    T = 1\n    for t in range(T):\n        n = iin()\n        a = lin()\n        a.sort()\n        ans = sum(a)-n\n        for val in range(1, 100001):\n            sm = 0\n            ch = 1\n            br = 0\n            for i in a:\n                sm += abs(ch-i)\n                ch *= val\n                if sm>ans:\n                    br = 1\n                    break\n            else:\n                # print(ans, sm, val)\n                ans = min(ans, sm)\n            if br:break\n        print(ans)\n\n\n\nmain()\n\n\"\"\"\n3\n4 1 3 1\n4 4 4 3\n5 3 3 2\n\"\"\"\n"]