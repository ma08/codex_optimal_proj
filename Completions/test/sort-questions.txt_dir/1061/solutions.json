["L=[]\nfor i in range(5):\n    s=input().split()\n    L.append(list(s))\n\nfor i in range(5):\n    for j in range(5):\n        if(L[i][j]==\"1\"):\n            row=i\n            col=j\n\nx=abs(row-2)+abs(col-2)\nprint(x)\n", "l = [list(map(int, input().split())) for i in range(5)]\nfor i in range(5):\n    line = l[i]\n    if 1 in line: print(abs(2 - i) + abs(2 - line.index(1)))", "3\n\narray = [list(map(int, input().split())) for _ in range(5)]\ni = [_ for _ in range(5) if 1 in array[_]][0]\narray = list(zip(*array))\nj = [_ for _ in range(5) if 1 in array[_]][0]\nprint(abs(i - 2) + abs(j - 2))\n", "\nfor i in range(5):\n    t = input().split()\n    if '1' in t: print(abs(i - 2) + abs(t.index('1') - 2))", "import sys\nimport math\n\ndef matrix():\n    rows = 0\n    matrix = []\n    for i in range(5):\n        matrix.append(input().split())\n\n    for i in matrix:\n        rows += 1\n        if '1' in i:\n            columns = (i.index(\"1\"))+1\n            break\n    print(abs(3 - rows) + abs(3 - columns))\n        \nmatrix()\n", "a = [[] for i in range(5)]\nfor i in range(5):\n    a[i].extend(list(map(int, input().split())))\n\nfor i in range(5):\n    for j in range(5):\n        if a[i][j] == 1:\n            print(abs(i-2)+abs(j-2))\n\n", "ROW = 5\nmtx = []\nfor i in range(ROW):\n\tmtx.append(input().split(' '))\n\nflag=False\nfor x in range(ROW):\n\tfor y in range(len(mtx[x])):\n\t\tif mtx[x][y] == '1':\n\t\t\tflag=True\n\t\t\tbreak\n\tif(flag):\n\t\tbreak\nx += 1\ny += 1\n\nprint( abs(x - 3) + abs(y - 3) )\n\n", "for ri in range(5):\n    row = input().split(' ')\n    if '1' in row:\n        print(abs(2 - ri) + abs(2 - row.index('1')))", "import math\nmatrix=[[int(i) for i in input().split(\" \")] for i in range(0,5)]\n(x,y)=(0,0)\nfor i in range(0,5):\n    for j in range(0,5):\n        if matrix[i][j]==1:\n            (x,y)=(i,j)\nprint(int(math.fabs(x-2)+math.fabs(y-2)))\n", "r1 = list(map(int, input().split()))\nr2 = list(map(int, input().split()))\nr3 = list(map(int, input().split()))\nr4 = list(map(int, input().split()))\nr5 = list(map(int, input().split()))\nx = 0\ny = 0\nfor cont in range(0,5):\n    if r1[cont] == 1:\n        x = cont\n        y = 0\n        break\n    if r2[cont] == 1:\n        x = cont\n        y = 1\n        break\n    if r3[cont] == 1:\n        x = cont\n        y = 2\n        break\n    if r4[cont] == 1:\n        x = cont\n        y = 3\n        break\n    if r5[cont] == 1:\n        x = cont\n        y = 4\n        break\nris = abs(y-2)+abs(x-2)\nprint(ris)", "x = y = 0\n\nm = []\n\nfor i in range(5):\n    m.append([s for s in input().split(\" \")])\n    \nfor n, i in enumerate(m):\n    if \"1\" in i:\n        y = n\n        x = i.index(\"1\")\n\nprint(abs(2 - x) + abs(2 - y))", "mat = [list(map(int, input().split())) for x in range(5)]\n\npos = (0,0)\nmid = (2,2)\n\nfor i in range(5):\n    for j in range(5):\n        if mat[i][j] == 1:\n            pos = i,j\n\nres = abs(mid[0] - pos[0]), abs(mid[1] - pos[1])\nprint(sum(res))\n", "a = []\nfor i in range(5):\n    a.extend(map(int, input().split()))\na = a.index(1)\nprint(abs(a // 5 - 2) + abs(a % 5 - 2))", "for i in range(5):\n    line = input().split()\n    for j, value in enumerate(line):\n        if value == \"1\":\n            x, y = i, j\n\nprint(abs(x - 2) + abs(y - 2))\n", "row = col = -1\n\n\ndef problem_input() -> None:\n    nonlocal row, col\n\n    for i in range(5):\n        index = input().find('1')\n\n        if index >= 0:\n            row = i\n            col = index // 2\n\n\ndef count_moves(row_index: int, col_index: int) -> int:\n    return abs(row_index - 2) + abs(col_index - 2)\n\n\nproblem_input()\nprint(count_moves(row, col))", "l = 0\nfor i in range(5):\n    x = list(map(int, input().split()))\n    if 1 in x:\n        l = abs(i-2) + abs(x.index(1)-2)\nprint(l)\n", "import math\ntable = []\na = 1\nfor i in range(5):\n    x = list(map(int, input().split()))\n    if a in x :\n        row_in = i + 1\n        col_in = x.index(a) + 1\n    table.append(x)\n#print(row_in, col_in)\nsteps = math.fabs((3 - (row_in))) + math.fabs((3 - (col_in)))\nprint(int(steps))", "a = 0\nb = 0\nfor i in range(5):\n    s = input().split()\n    for j in range(5):\n        if s[j] == '1':\n            a = i + 1\n            b = j + 1\nprint(abs(a-3)+abs(b-3))\n", "for ri in range(5):\n    row = input().split(' ')\n    if '1' in row:\n        print(abs(2 - ri) + abs(2 - row.index('1')))", "a=input().split(' ')\nb=input().split(' ')\nc=input().split(' ')\nd=input().split(' ')\ne=input().split(' ')\nx=0\ny=0\nif '1' in a:\n    y=a.index('1')\n    x=0\n\nif '1' in b:\n    y=b.index('1')\n    x=1\n\nif '1' in c:\n    y=c.index('1')\n    x=2\n\nif '1' in d:\n    y=d.index('1')\n    x=3\n\nif '1' in e:\n    y=e.index('1')\n    x=4\nprint(abs(x-2)+abs(y-2))\n", "import sys\n\ny = 0\nx = 0\nfor i in range(5):\n    in_str = (sys.stdin.readline()).split()\n    for j in range(5):\n        if(in_str[j] == '1'):\n            x = j\n            y = i\n            print(abs(2 - x) + abs(2 - y))\n            return", "arr = []\nfor i in range(0,5): arr.append([int(i) for i in input().split(\" \")])\nfor i in range(0,len(arr)):\n    if 1 in arr[i]:\n        print(abs(arr[i].index(1)-2) + abs(i-2))\n        return", "for i in range(5):\n    s = input().split()\n    if \"1\" in s :\n        print (abs(2-i)+abs(2-s.index(\"1\")))", "for i in range(5):\n    inp = input().split(' ')\n    if  \"1\" in inp:\n        print(abs(2-i)+abs(2-inp.index(\"1\")))\n        break\n", "a = []\nfor i in range(0, 5):\n    a.append(list(map(int, input().split())))\nfor i in range(0, 5):\n    for j in range(0, 5):\n        if a[i][j] == 1:\n            print(abs(2 - i) + abs(2 - j))"]