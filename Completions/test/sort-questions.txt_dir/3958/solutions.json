["s = input() \nzero = set() # \u524d\u9762\u7684\u4e00\u4e2a\u4ee50\u7ed3\u5c3e\u7684\u4e32\u7684\u7d22\u5f15\none  = set() # \u524d\u9762\u7684\u4e00\u4e2a\u4ee51\u7ed3\u5c3e\u7684\u4e32\u7684\u7d22\u5f15\nans  = []    # \u7ed3\u679c\u7684\u4e32\nfor i in range(0,len(s)):\n    if(s[i] == '0'):\n        if one:\n            k = one.pop()\n            zero.add(k)\n            ans[k].append(i+1)\n        else:\n            zero.add(len(ans))\n            ans.append([i+1])\n    else:\n        if not zero:\n            print(-1)\n            return\n        k = zero.pop()\n        one.add(k)\n        ans[k].append(i+1)\nif(one):\n    print(-1)\n    return\nprint(len(ans))\nprint('\\n'.join([str(len(x))+' '+' '.join(map(str,x)) for x in ans]))\n", "s, r, f, p = input(), [], 0, -1\ntry:\n    for i in range(len(s)):\n        j = i + 1\n        if s[i] == '0':\n            if p > -1:\n                r[p].append(j)\n                p -= 1\n            else:\n                r.append([j])\n        else:\n            p += 1\n            r[p].append(j)  \nexcept:\n    f = 1\nif f or p > -1:\n    print(-1)\nelse:\n    print(len(r))\n    for x in r:\n        print(len(x), *x)\n", "s = input()\none = -1\nans=[]\np = True\nfor i in range(0,len(s)):\n    if s[i]=='0':\n        if one == -1:\n            ans.append([i+1])\n        else:\n            ans[one].append(i+1)\n            one-=1\n    else:\n        one+=1\n        if one == len(ans):\n            p = False\n            break\n        else:\n            ans[one].append(i+1)\n    #print(ans)\nif p==False or one !=-1:\n    print(\"-1\")\nelse:\n    print(len(ans))\n    print(\"\\n\".join([str(len(sub)) + \" \" + \" \".join(map(str, sub)) for sub in ans]))", "s = input()\none = -1\nans=[]\np = True\nfor i in range(0,len(s)):\n    if s[i]=='0':\n        if one == -1:\n            ans.append([i+1])\n        else:\n            ans[one].append(i+1)\n            one-=1\n    else:\n        one+=1\n        if one == len(ans):\n            p = False\n            break\n        else:\n            ans[one].append(i+1)\nif p==False or one !=-1:\n    print(\"-1\")\nelse:\n    print(len(ans))\n    print(\"\\n\".join([str(len(sub)) + \" \" + \" \".join(map(str, sub)) for sub in ans]))", "def read_data():\n    a = list(map(int, list(input().strip())))\n    return a\n\ndef solve():\n    sol = []\n    pos = -1\n    try:\n        for i in range(0,len(a)):\n            if a[i] == 0:\n                if pos > -1:\n                    sol[pos].append(i+1)\n                    pos -= 1\n                else:\n                    sol.append([i+1])\n            else:\n                pos += 1\n                sol[pos].append(i+1)\n    except:\n        return -1\n    if pos == -1:\n        return sol\n    else:\n        return -1\n\ndef print_sol(sol):\n    if sol == -1:\n        print(sol)\n        return 0\n    print(len(sol))\n    for list in sol:\n        print(len(list), *list)\n\na = read_data()\nsol = solve()\nprint_sol(sol)\n", "from sys import stdin, stdout\n\ndef solution():\n    life = stdin.readline().strip()\n    result = [[1]]\n\n    zeros = [0]\n    ones = []\n\n    if life[0] == '1':\n        print(\"-1\")\n        return\n\n    for i in range(1, len(life)):\n        if life[i] == '0':\n            if ones:\n                index = ones.pop()\n                result[index].append(i+1)\n                zeros.append(index)\n            else:\n                result.append([i+1])\n                zeros.append(len(result) - 1)\n        else:\n            if zeros:\n                index = zeros.pop()\n                result[index].append(i+1)\n                ones.append(index)\n            else:\n                print(\"-1\")\n                return\n    #print(result)\n    if ones:\n        print(\"-1\")\n        return\n\n    print(len(result))\n    print('\\n'.join([str(len(x))+' '+' '.join(map(str,x)) for x in result]))\n\nsolution()\n", "s = input()\none = -1\nans=[]\np = True\nfor i in range(0,len(s)):\n    if s[i]=='0':\n        if one == -1:\n            ans.append([i+1])\n        else:\n            ans[one].append(i+1)\n            one-=1\n    else:\n        one+=1\n        if one == len(ans):\n            p = False\n            break\n        else:\n            ans[one].append(i+1)\nif p==False or one !=-1:\n    print(\"-1\")\nelse:\n    print(len(ans))\n    print(\"\\n\".join([str(len(sub)) + \" \" + \" \".join(map(str, sub)) for sub in ans]))", "s = input()\no = -1\nsol=[]\np = True\nfor i in range(0,len(s)):\n    if s[i]=='0':\n        if o == -1:\n            sol.append([i+1])\n        else:\n            sol[o].append(i+1)\n            o-=1\n    else:\n        o+=1\n        if o == len(sol):\n            p = False\n            break\n        else:\n            sol[o].append(i+1)\nif p==False or o !=-1:\n    print(\"-1\")\nelse:\n    print(len(sol))\n    print(\"\\n\".join([str(len(sub)) + \" \" + \" \".join(map(str, sub)) for sub in sol]))", "s = input()\no = -1\nsol=[]\np = True\nfor i in range(0,len(s)):\n    if s[i]=='0':\n        if o == -1:\n            sol.append([i+1])\n        else:\n            sol[o].append(i+1)\n            o-=1\n    else:\n        o+=1\n        if o == len(sol):\n            p = False\n            break\n        else:\n            sol[o].append(i+1)\nif p==False or o !=-1:\n    print(\"-1\")\nelse:\n    print(len(sol))\n    print(\"\\n\".join([str(len(sub)) + \" \" + \" \".join(map(str, sub)) for sub in sol]))", "s = input()\n\no = -1\n\nsol=[]\n\np = True\n\nfor i in range(0,len(s)):\n\n    if s[i]=='0':\n\n        if o == -1:\n\n            sol.append([i+1])\n\n        else:\n\n            sol[o].append(i+1)\n\n            o-=1\n\n    else:\n\n        o+=1\n\n        if o == len(sol):\n\n            p = False\n\n            break\n\n        else:\n\n            sol[o].append(i+1)\n\nif p==False or o !=-1:\n\n    print(\"-1\")\n\nelse:\n\n    print(len(sol))\n\n    print(\"\\n\".join([str(len(sub)) + \" \" + \" \".join(map(str, sub)) for sub in sol]))\n\n\n\n# Made By Mostafa_Khaled\n", "s=input()\nl=[]\neven=[]\nodd=[]\nf=1\nfor i in range(len(s)):\n\tif s[i]=='0':\n\t\tif len(even)!=0:\n\t\t\tind=even.pop()\n\t\t\tl[ind].append(i+1)\n\t\t\todd.append(ind)\n\t\telse:\n\t\t\tl.append([i+1])\n\t\t\todd.append(len(l)-1)\n\telse:\n\t\tif len(odd):\n\t\t\tind=odd.pop()\n\t\t\tl[ind].append(i+1)\n\t\t\teven.append(ind)\n\t\telse:\n\t\t\tf=0\n\t\t\tbreak\nif f and len(even)==0:\n\tprint(len(l))\n\tfor x in l:\n\t\tprint(len(x),*x)\nelse:\n\tprint(-1)", "s = input()\nres, p = [], -1\n\nfor i in range(len(s)):\n    j = i + 1\n    if s[i] == '0':\n        if p > -1:\n            res[p].append(j)\n            p -= 1\n        else:\n            res.append([j])\n    else:\n        p += 1\n        if p >= len(res):\n            print(-1)\n            return\n        res[p].append(j)  \n\nif p != -1:\n    print(-1)\n    return    \n\nprint(len(res))\nfor x in res:\n    print(len(x), *x)\n", "from collections import deque \nl=input()\naz=deque([])\nz=deque([])\nf=0\nfor i in range(len(l)):\n    if l[i]=='0':\n        if len(az)==0:\n            z.append([i+1])\n        else:\n            az[0].append(i+1)\n            z.append(az[0])\n            az.popleft()\n    else:\n        #print(f)\n        if len(z)==0:\n            f=1\n            break \n        else:\n            z[0].append(i+1)\n            az.append(z[0])\n            z.popleft()\nif f==1 or len(az)!=0:\n    print(-1)\nelse:\n    print(len(z))\n    for i in range(len(z)):\n        print(len(z[i]),*z[i],sep=\" \")\n            "]