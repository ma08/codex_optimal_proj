["n = int(input())\na = list(map(int,input().split()))\np = input()\nm = 0\nsuc = True\nfor i in range(n-1):\n    m = max(m,a[i])\n    if p[i] == '0' and m>(i+1):\n        suc = False\n        break\nif suc:\n    print('YES')\nelse:\n    print('NO')\n", "import getpass\nimport sys\nimport math\n\n\ndef ria():\n    return [int(i) for i in input().split()]\n\n\nfiles = True\n\nif getpass.getuser() == 'frohenk' and files:\n    sys.stdin = open(\"test.in\")\n\nn = ria()[0]\nar = ria()\nst = input()\nzer = True\nl, r = 0, 0\nmx = 0\nmn = 200020\nchangable = [False] * n\nfor i in range(len(st)):\n    if st[i] == '0':\n\n        if not zer:\n            if l + 1 > mn or r + 1 < mx:\n                print('NO')\n                return\n        mx = 0\n        mn = 200020\n        zer = True\n        continue\n    if zer:\n        l = i\n    r = i + 1\n    mx = max(mx, ar[i])\n    mx = max(mx, ar[i + 1])\n    mn = min(mn, ar[i])\n    mn = min(mn, ar[i + 1])\n    changable[i] = True\n    changable[i + 1] = True\n\n    zer = False\n#print(changable)\nfor n, i in enumerate(ar):\n    if (n + 1) != i and not changable[n]:\n        print('NO')\n        return\nprint('YES')\n", "\n# int(input())\n# [int(i) for i in input().split()]\n\nn = int(input())\na = [int(i) for i in input().split()]\nind = [int(i) for i in input()]\nind.append(0)\n\nb = []\ncurr = 0\n\nfor i in range(n):\n    if not ind[i]:\n        \n        tmp = a[curr:i+1]\n        tmp.sort()\n        b.extend(tmp)\n        curr = i + 1\n\n#print(b)\nif all(b[i] <= b[i+1] for i in range(n-1)): print(\"YES\")\nelse: print('NO')\n\n", "n = int(input())\na = list(map(int, input().split()))\ns = input()\nsa = sorted(a)\nh = {}\nfor i in range(n):\n    h[sa[i]] = i\nst = 0\nfor i in range(n):\n    p = i\n    ap = h[a[i]]\n    if p-ap > st:\n        print('NO')\n        return\n    if i < n-1 and s[i] == '1':\n        st += 1\n    else:\n        st = 0\nst = 0\nfor i in range(n-1, -1, -1):\n    if i < n-1 and s[i] == '1':\n        st += 1\n    else:\n        st = 0\n    p = i\n    ap = h[a[i]]\n    if ap - p > st+1:\n        print('NO')\n        return\n\nprint('YES')\n", "n = int(input())\na = list(map(int, input().split()))\ns = input()\ntemp = []\nmini = n + 1\nmaxi = -1\nfor i in range(n - 1):\n    if s[i] == '1':\n        mini = min(mini, a[i])\n        maxi = max(maxi, a[i])\n    elif i != 0 and s[i - 1] == '1':\n        mini = min(mini, a[i])\n        maxi = max(maxi, a[i])\n        temp.append(mini)\n        temp.append(maxi)\n        mini = n + 1\n        maxi = -1\n    else:\n        temp.append(a[i])\nif mini != n + 1:\n    mini = min(mini, a[-1])\n    maxi = max(maxi, a[-1])\n    temp.append(mini)\n    temp.append(maxi)\nelse:\n    temp.append(a[-1])\nfor i in range(1, len(temp)):\n    if temp[i] < temp[i - 1]:\n        print('NO')\n        break\nelse:\n    print('YES')", "\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    s = input()\n    \n    xx = sorted( (a[i], i) for i in range(n) )\n    oo = [-1] * n\n    for i in range(n):\n        oo[xx[i][1]] = i\n    \n    #print(a)    \n    #print(oo)\n    \n    nn = -1\n    for i in range(n):\n        nn = max(nn, oo[i])\n        if i < nn and s[i]=='0':\n            print(\"NO\")\n            break\n    else:\n        print(\"YES\")\n    \n    \ndef __starting_point():\n    main()\n\n__starting_point()", "def check(vals, allowed):\n    groups = []\n    group = []\n    for v, b in zip(vals, allowed):\n        group.append(v)\n        if b == '0':\n            group.sort()\n            groups.append(group)\n            group = []\n    flat = [v for group in groups for v in group]\n\n    for i in range(1, len(flat)):\n        if flat[i] < flat[i - 1]:\n            return False\n    return True\n\nn = int(input())\nvals = [int(v) for v in input().split()]\nallowed = input().strip() + '0'\n\nprint([\"NO\", \"YES\"][check(vals, allowed)])\n", "n = int(input())\na = list(map(int, input().split()))\ns = list(input())\ns.append(1)\nrec, q = [], 0\nfor i in range(n):\n    rec.append(q + a[i])\n    q = rec[i]\nflag = True\nfor i in range(n):\n    if s[i] == \"0\" and rec[i] > (i + 1) * (i + 2) // 2:\n        flag = False\n        break\n\nif flag:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "N = int(input())\n\nT = [0]*(N+1)\n\nfor i,j in enumerate(map(int,input().split())):\n  j -= 1\n  if i > j:\n    i,j = j,i\n  T[i] += 1\n  T[j] -= 1\n\nfrom itertools import accumulate\nT = list(accumulate(T))\nT.pop()\n\n\nfor i,j in zip(map(int, input()), T):\n  if j != 0 and i == 0:\n    print('NO')\n    return\n\nprint('YES')", "n = int(input())\na = list(map(int, input().split()))\ns = input()\nd = []\ncl = 0\nmi = 0\ni = 0\nwhile i < len(s):\n\twhile i < len(s) and s[i] == \"1\":\n\t\ti += 1\n\t\tcl += 1\n\twhile i < len(s) and s[i] == \"0\":\n\t\ti += 1\n\td.append([mi, cl])\n\tcl = 0\n\tmi = i\nd.append([n - 1, 1])\nif s[-1] != \"1\":\n\td.append([n - 1, 0])\nz = []\nfor i in range(len(d) - 1):\n\tz += sorted(a[d[i][0]:d[i][1] + d[i][0] + 1])\n\tz += a[d[i][1] + d[i][0] + 1:d[i + 1][0]]\nprint(\"YES\" if z == list(range(1, n + 1)) else \"NO\")", "n=int(input())\nl=[int(x) for x in input().split()]\ns=input()+'0'\ni=minn=maxx=0\nflag=0\nwhile i<n:\n  minn=maxx=l[i]\n  start=i+1\n  while s[i]!='0':\n    minn=min(minn,l[i])\n    maxx=max(maxx,l[i])\n    i+=1\n  minn=min(minn,l[i])\n  maxx=max(maxx,l[i])\n  end=i+1\n  if minn>=start and maxx<=end:\n    i+=1\n  else:\n    flag=1\n    break\nif flag:\n  print(\"NO\")\nelse:\n  print(\"YES\")\n", "length = int(input())\nnums = input().split(\" \", length - 1)\nfor i in range(length):\n    nums[i] = int(nums[i])\nswaps = []\ninp = input()\nfor i in range(length - 1):\n    swaps.append(int(inp[i]))\n\nres = 1\ncurrmin = 1\ncurrmax = 1\ncurrnums = [nums[0]]\nfor i in range(length - 1):\n    if swaps[i] == 0:\n        currmax = i + 1\n        if min(currnums) < currmin or max(currnums) > currmax:\n            res = 0\n        ##print([currnums, currmax, currmin])\n        currmin = i + 2\n        currmax = i + 2\n        currnums = [nums[i + 1]]\n    else:\n        currnums.append(nums[i + 1])\n        currmax = i + 1\nif res == 1:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "import sys, math, os.path\n\nFILE_INPUT = \"c.in\"\nDEBUG = os.path.isfile(FILE_INPUT)\nif DEBUG: \n    sys.stdin = open(FILE_INPUT)    \n\ndef ni():\n    return map(int, input().split(\" \"))\n\ndef nia(): \n    return list(map(int,input().split()))\n\ndef log(x):\n    if (DEBUG):\n        print(x)\n\nn, = ni()\na = nia()\nen = list(map(lambda x: x == '1', input()))\n\n# log(n)\n# log(a)\n# log(en)\n\ncount = 1\ni = 0\nwhile (i < n-1):\n    if (en[i]):\n        j = i\n        b = [a[i]]\n        while (j < n-1 and en[j]):\n            j += 1\n            b.append(a[j])\n        b.sort()\n        # log(b)\n        for j in b:\n            if (j != count):\n                print(\"NO\")\n                return\n            else:\n                count += 1    \n        i = j        \n    else:\n        if (a[i] == count):\n            count += 1\n        else:\n            print(\"NO\")\n            return\n        i += 1\n    \n\nprint(\"YES\")", "import sys, math, os.path\n\nFILE_INPUT = \"c.in\"\nDEBUG = os.path.isfile(FILE_INPUT)\nif DEBUG: \n    sys.stdin = open(FILE_INPUT)    \n\ndef ni():\n    return map(int, input().split(\" \"))\n\ndef nia(): \n    return list(map(int,input().split()))\n\ndef log(x):\n    if (DEBUG):\n        print(x)\n\nn, = ni()\na = nia()\nen = list(map(lambda x: x == '1', input()))\n\n# log(n)\n# log(a)\n# log(en)\n\ncount = 1\ni = 0\nwhile (i < n-1):\n    if (en[i]):\n        j = i\n        b = [a[i]]\n        while (j < n-1 and en[j]):\n            j += 1\n            b.append(a[j])\n        b.sort()\n        # log(b)\n        for j in b:\n            if (j != count):\n                print(\"NO\")\n                return\n            else:\n                count += 1    \n        i = j        \n    else:\n        if (a[i] == count):\n            count += 1\n        else:\n            print(\"NO\")\n            return\n        i += 1\n    \n\nprint(\"YES\")", "# C\n\nn = int(input())\nA = list(map(int, input().split()))\nflag = input()\n\nzero_flag = []\nfor i in range(n-1):\n    if flag[i] == \"0\":\n        zero_flag.append(i)\n\nfor i in range(len(zero_flag)):\n    if i == len(zero_flag) - 1:\n        if set(A[zero_flag[i]+1:]) != set(range(zero_flag[i]+2, n+1)):\n            print(\"NO\")\n            quit()\n    elif i == 0:\n        if set(A[:zero_flag[i]+1]) != set(range(1, zero_flag[i]+2)):\n            print(\"NO\")\n            quit()\n    else:\n        if set(A[zero_flag[i-1]+1:zero_flag[i]+1]) != set(range(zero_flag[i-1]+2, zero_flag[i]+2)):\n            print(\"NO\")\n            quit()\n\nprint(\"YES\")", "import sys\nn = int(input())\n\na = list(map(int, input().split()))\ns = input()\nb = [10**8] * (n+1)\n\nfor i in range(len(s)-1, -1, -1):\n    b[i] = i if s[i] == '0' else b[i+1]\n\n#print(b)\n\nfor i in range(len(a)):\n    if a[i] > i + 1:\n        if b[i] < a[i]-1:\n            print('NO')\n            return\n\nprint('YES')", "import sys, math, os.path\n\nFILE_INPUT = \"c.in\"\nDEBUG = os.path.isfile(FILE_INPUT)\nif DEBUG: \n    sys.stdin = open(FILE_INPUT)    \n\ndef ni():\n    return map(int, input().split(\" \"))\n\ndef nia(): \n    return list(map(int,input().split()))\n\ndef log(x):\n    if (DEBUG):\n        print(x)\n\nn, = ni()\na = nia()\nen = list(map(lambda x: x == '1', input()))\n\n# log(n)\n# log(a)\n# log(en)\n\n# count = 1\ni = 0\nwhile (i < n-1):\n    if (en[i]):\n        j = i\n        # b = [a[i]]\n        amin = a[i]\n        amax = a[i]\n        while (j < n-1 and en[j]):\n            j += 1\n            amin = min(a[j], amin)\n            amax = max(a[j], amax)\n            # b.append(a[j])\n        # b.sort()\n        # log(b)\n        # for j in b:\n        #     if (j != count):\n        #         print(\"NO\")\n        #         return\n        #     else:\n        #         count += 1  \n        log(f\"{i} - {j}\")\n        if (amin == (i+1) and amax == j+1):\n            i = j+1\n        else:\n            print(\"NO\")\n            return\n    else:\n        # if (a[i] == count):\n            # count += 1\n        if (a[i] != i+1):\n            log(f\"{i} != {a[i]}\")\n            print(\"NO\")\n            return\n        i += 1\n    \n\nprint(\"YES\")", "import sys, math, os.path\n\nFILE_INPUT = \"c.in\"\nDEBUG = os.path.isfile(FILE_INPUT)\nif DEBUG: \n    sys.stdin = open(FILE_INPUT)    \n\ndef ni():\n    return map(int, input().split(\" \"))\n\ndef nia(): \n    return list(map(int,input().split()))\n\ndef log(x):\n    if (DEBUG):\n        print(x)\n\nn, = ni()\na = nia()\nen = list(map(lambda x: x == '1', input()))\n\n# log(n)\n# log(a)\n# log(en)\n\n# count = 1\ni = 0\nwhile (i < n-1):\n    if (en[i]):\n        j = i\n        # b = [a[i]]\n        amin = a[i]\n        amax = a[i]\n        while (j < n-1 and en[j]):\n            j += 1\n            amin = min(a[j], amin)\n            amax = max(a[j], amax)\n            # b.append(a[j])\n        # b.sort()\n        # log(b)\n        # for j in b:\n        #     if (j != count):\n        #         print(\"NO\")\n        #         return\n        #     else:\n        #         count += 1  \n        # log(f\"{i} - {j}\")\n        if (amin == (i+1) and amax == (j+1)):\n            i = j+1\n        else:\n            print(\"NO\")\n            return\n    else:\n        # if (a[i] == count):\n            # count += 1\n        if (a[i] != i+1):\n            # log(f\"{i} != {a[i]}\")\n            print(\"NO\")\n            return\n        i += 1\n    \n\nprint(\"YES\")", "from itertools import groupby\n\nn = int(input())\n\nnums = [int(i) for i in input().split()]\ncopy = list(nums)\n\npos = input()\n\n\npos = [\"\".join(g) for k, g in groupby(pos) if k != '#']\n\n#print(pos)\n\ncur_pos = 0\n\nfor i in pos:\n    if i[0] == '1':\n        nums[cur_pos:cur_pos + len(i) + 1] = sorted(nums[cur_pos:cur_pos + len(i) + 1])\n    cur_pos += len(i)\n\nif sorted(copy) == nums:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "n = int(input())\na = list(map(int, input().split()))\ns = list([True if x==\"1\" else False for x in list(input())])\ni=0\nwhile i < n:\n    if i == n-1:\n        if a[-1] != n:\n            print(\"NO\")\n    elif not s[i]:\n        if a[i]-1 != i:\n            print(\"NO\")\n            return\n    else:\n        start = i\n        i += 1\n        while(i < len(s) and s[i]):\n            i+=1\n        end = i\n        test = a[start: end + 1]\n        #print([start, end, test])\n        if not (max(test) == end + 1 and min(test) == start + 1):\n            print(\"NO\")\n            return\n\n    i+=1\nprint(\"YES\")\n", "n = int(input())\ns = input().split()\narr = []\nfor l in s:\n    arr.append(int(l))\ns = input()\nk = len(s)\npos = []\nfor l in s:\n    pos.append(int(l))\n\ni = 0\nindexset = set()\nvalueset = set()\nwhile i < k:\n    if pos[i] == 0:\n        if arr[i] != i + 1:\n            print(\"NO\")\n            return\n\n    if pos[i] == 1:\n        while i < k:\n            if pos[i] == 1:\n                indexset.add(i+1)\n                valueset.add(arr[i])\n                i += 1\n            else:\n                break\n        indexset.add(i+1)\n        valueset.add(arr[i])\n        if len(indexset ^ valueset) > 0:\n            print(\"NO\")\n            return\n        indexset.clear()\n        valueset.clear()\n\n    i += 1\nprint(\"YES\")", "\nn = int(input())\nraw_input = list(map(int, input().split()))\nraw_string = input()\n\nsupposed_sum = 0\nactual_sum = 0\n\nfor i in range(1, len(raw_string)+1):\n    supposed_sum += i\n    actual_sum += raw_input[i-1]\n    if raw_string[i-1] == '0':\n#        print(i, actual_sum, supposed_sum)\n        if actual_sum != supposed_sum:\n            print(\"NO\")\n            return\n        actual_sum = 0\n        supposed_sum = 0\n\nprint(\"YES\")\n", "n = int(input())\na = [int(x) for x in input().split()]\nrot = input()\n\nstack = []\npairs = []\nfor i in range(len(rot)):\n    if rot[i] == '1' and stack == []:\n        stack.append(i)\n    if rot[i] == '0' and len(stack) > 0:\n        stack.append(i-1)\n        pairs.append((stack[-2], stack[-1] + 1))\n        stack.clear()\nif len(stack) > 0:\n    pairs.append((stack[-1], n))\n\nfor l, r in pairs:\n    a[l:r+1] = sorted(a[l:r+1])\n##if l != None and r == None:\n##    r = len(rot)\n##    a[l:r+1] = sorted(a[l:r+1])\nprint('YNEOS'[not(a == sorted(a))::2])\n", "\ndef can_order(arr, ok):\n    i = 0\n    while i < len(ok):\n        if not ok[i]:\n            if i + 1 != arr[i + 1] and (i + 1 >= len(ok) or not ok[i + 1]):\n                #print(\"Not okay and index\", i, \"==\", arr[i])\n                return False\n            i += 1\n        else:\n            j = i\n            while j < len(ok) and ok[j]:\n                j += 1\n            if sum(arr[i:j + 1]) != sum(range(i, j + 1)):\n                #print(arr[i:j + 1])\n                #print(\"arr[\", i, \":\", j + 1, \"] ==\", sum(arr[i:j + 1]))\n                #print(\"sum(range(i, j)) ==\", sum(range(i, j + 1)))\n                return False\n            i = j\n    return True\n\n\ndef main():\n    N = int(input())\n    arr = [int(x) - 1 for x in input().split()]\n    ok = [c == '1' for c in input()]\n    print(\"YES\" if can_order(arr, ok) else \"NO\")\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "n = int(input())\na = list(map(int, input().split(\" \")))\ns = list(map(int, input()))\nright = [-1] * n\ni = n - 2\nright[n - 1] = n - 1\nif s[i] == 1:\n    right[i] = i + 1\nelse:\n    right[i] = i\ni -= 1\nwhile i >= 0:\n    if s[i] == 0:\n        right[i] = i\n    else:\n        if s[i+1] == 0:\n            right[i] = i + 1\n        else:\n            right[i] = right[i+1]\n    i -= 1\n\nans = True\ni = 0\nfor ai in a:\n    if ai - 1 > right[i]:\n        ans = False\n    i += 1\n\nprint(\"YES\" if ans else \"NO\")"]