["\n\na, p = map(int, input().split())\nprint((p//2) + (a*3))", "\n\nA, P = map(int, input().split())\n\nprint((P // 2) + ((P + 3) // 4) * (A - 1))", "\n\nA, P = map(int, input().split())\n\nprint(min(A, P//2) + (P - A * 2) // 4)", "\n\na, p = map(int, input().split())\nprint((p // 2) + (a * 3))", "\n\na, p = map(int, input().split())\n\nprint((p // 2) + (a * 3))", "\n\n# Return the maximum number of apple pie we can make with the given number of whole apples and pieces of apple.\ndef make_apple_pie_maximally(apples, pie_pieces):\n    # TODO: Implement this function\n    return 0\n\n# Read the input\napples, pie_pieces = map(int, input().split())\n\n# Print the result\nprint(make_apple_pie_maximally(apples, pie_pieces))", "\n\ndef main():\n    \"\"\"\n    main function\n    \"\"\"\n    input_data = input()\n    input_data = input_data.split()\n    apple = int(input_data[0])\n    pieces = int(input_data[1])\n    if apple == 0:\n        print(0)\n    else:\n        print((2*apple + pieces) // 3)\n\nif __name__ == '__main__':\n    main()"]