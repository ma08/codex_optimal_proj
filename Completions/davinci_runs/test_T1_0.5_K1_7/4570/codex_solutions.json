["\n\nN, A, B = map(int, input().split())\nif A * N <= B:\n    print(A * N)\nelse:\n    print(B)", "\n\nimport sys\n\ndef main():\n    n, a, b = map(int, sys.stdin.readline().split())\n    if b <= a * n:\n        print(b)\n    else:\n        print(a * n)\n\nif __name__ == '__main__':\n    main()", "\n\nN, A, B = map(int, input().split())\n\nif B <= A:\n    print(B)\nelse:\n    print(A*N)", "\n\ndef main():\n    N, A, B = map(int, input().split())\n    print(min(A*N, B))\n\nif __name__ == '__main__':\n    main()", "\n\nN, A, B = map(int, input().split())\n\nif N * A < B:\n    print(N * A)\nelse:\n    print(B)", "\n\n# Read input\nN, A, B = map(int, input().split())\n\n# Plan 1: A\u00d7N\n# Plan 2: B\n\n# Print the minimum fee\nprint(min(A*N, B))", "\n\n# This is an example of a greedy algorithm.\n# The input is N, A, and B.\n# First, we try to use Plan 1.\n# If N * A is greater than B, then we use Plan 2.\n\n# Read the input.\nN, A, B = map(int, input().split())\n\n# Output the minimum of N * A and B.\nprint(min(N * A, B))"]