2022-04-13 18:18:21.054929 """
The only difference between easy and hard versions is the constraints.

Vova likes pictures with kittens. The news feed in the social network he uses can be represented as an array of $n$ consecutive pictures (with kittens, of course). Vova likes all these pictures, but some are more beautiful than the others: the $i$-th picture has beauty $a_i$.

Vova wants to repost exactly $x$ pictures in such a way that:   each segment of the news feed of at least $k$ consecutive pictures has at least one picture reposted by Vova;  the sum of beauty values of reposted pictures is maximum possible. 

For example, if $k=1$ then Vova has to repost all the pictures in the news feed. If $k=2$ then Vova can skip some pictures, but between every pair of consecutive pictures Vova has to repost at least one of them.

Your task is to calculate the maximum possible sum of values of reposted pictures if Vova follows conditions described above, or say that there is no way to satisfy all conditions.


-----Input-----

The first line of the input contains three integers $n, k$ and $x$ ($1 \le k, x \le n \le 200$) — the number of pictures in the news feed, the minimum length of segment with at least one repost in it and the number of pictures Vova is ready to repost.

The second line of the input contains $n$ integers $a_1, a_2, \dots, a_n$ ($1 \le a_i \le 10^9$), where $a_i$ is the beauty of the $i$-th picture.


-----Output-----

Print -1 if there is no way to repost some pictures to satisfy all the conditions in the problem statement.

Otherwise print one integer — the maximum sum of values of reposted pictures if Vova follows conditions described in the problem statement.


-----Examples-----
Input
5 2 3
5 1 3 10 1

Output
18

Input
6 1 5
10 30 30 70 10 10

Output
-1

Input
4 3 1
1 100 1 1

Output
100
"""
2022-04-13 18:18:21.054945 --------------------------
2022-04-13 18:20:19.694401 {
  "choices": [
    {
      "finish_reason": "length",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef get_input():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    return n, k, x, a\n\ndef solve(n, k, x, a):\n    if x < k:\n        return -1\n    if x == n:\n        return sum(a)\n    if k == 1:\n        return sum(sorted(a)[-x:])\n    if k == 2:\n        return sum(sorted(a, reverse=True)[:x])\n    if k == 3:\n        a = sorted(a, reverse=True)\n        if x <= n - 1:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-1]) + sum(a[-x+n-1:])\n    if k == 4:\n        a = sorted(a, reverse=True)\n        if x <= n - 2:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-2]) + sum(a[-x+n-2:])\n    if k == 5:\n        a = sorted(a, reverse=True)\n        if x <= n - 3:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-3]) + sum(a[-x+n-3:])\n    if k == 6:\n        a = sorted(a, reverse=True)\n        if x <= n - 4:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-4]) + sum(a[-x+n-4:])\n    if k == 7:\n        a = sorted(a, reverse=True)\n        if x <= n - 5:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-5]) + sum(a[-x+n-5:])\n    if k == 8:\n        a = sorted(a, reverse=True)\n        if x <= n - 6:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-6]) + sum(a[-x+n-6:])\n    if k == 9:\n        a = sorted(a, reverse=True)\n        if x <= n - 7:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-7]) + sum(a[-x+n-7:])\n    if k == 10:\n        a = sorted(a, reverse=True)\n        if x <= n - 8:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-8]) + sum(a[-x+n-8:])\n    if k == 11:\n        a = sorted(a, reverse=True)\n        if x <= n - 9:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-9]) + sum(a[-x+n-9:])\n    if k == 12:\n        a = sorted(a, reverse=True)\n        if x <= n - 10:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-10]) + sum(a[-x+n-10:])\n    if k == 13:\n        a = sorted(a, reverse=True)\n        if x <= n - 11:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-11]) + sum(a[-x+n-11:])\n    if k == 14:\n        a = sorted(a, reverse=True)\n        if x <= n - 12:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-12]) + sum(a[-x+n-12:])\n    if k == 15:\n        a = sorted(a, reverse=True)\n        if x <= n - 13:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-13]) + sum(a[-x+n-13:])\n    if k == 16:\n        a = sorted(a, reverse=True)\n        if x <= n - 14:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-14]) + sum(a[-x+n-14:])\n    if k == 17:\n        a = sorted(a, reverse=True)\n        if x <= n - 15:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-15]) + sum(a[-x+n-15:])\n    if k == 18:\n        a = sorted(a, reverse=True)\n        if x <= n - 16:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-16]) + sum(a[-x+n-16:])\n    if k == 19:\n        a = sorted(a, reverse=True)\n        if x <= n - 17:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-17]) + sum(a[-x+n-17:])\n    if k == 20:\n        a = sorted(a, reverse=True)\n        if x <= n - 18:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-18]) + sum(a[-x+n-18:])\n    if k == 21:\n        a = sorted(a, reverse=True)\n        if x <= n - 19:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-19]) + sum(a[-x+n-19:])\n    if k == 22:\n        a = sorted(a, reverse=True)\n        if x <= n - 20:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-20]) + sum(a[-x+n-20:])\n    if k == 23:\n        a = sorted(a, reverse=True)\n        if x <= n - 21:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-21]) + sum(a[-x+n-21:])\n    if k == 24:\n        a = sorted(a, reverse=True)\n        if x <= n - 22:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-22]) + sum(a[-x+n-22:])\n    if k == 25:\n        a = sorted(a, reverse=True)\n        if x <= n - 23:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-23]) + sum(a[-x+n-23:])\n    if k == 26:\n        a = sorted(a, reverse=True)\n        if x <= n - 24:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-24]) + sum(a[-x+n-24:])\n    if k == 27:\n        a = sorted(a, reverse=True)\n        if x <= n - 25:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-25]) + sum(a[-x+n-25:])\n    if k == 28:\n        a = sorted(a, reverse=True)\n        if x <= n - 26:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-26]) + sum(a[-x+n-26:])\n    if k == 29:\n        a = sorted(a, reverse=True)\n        if x <= n - 27:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-27]) + sum(a[-x+n-27:])\n    if k == 30:\n        a = sorted(a, reverse=True)\n        if x <= n - 28:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-28]) + sum(a[-x+n-28:])\n    if k == 31:\n        a = sorted(a, reverse=True)\n        if x <= n - 29:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-29]) + sum(a[-x+n-29:])\n    if k == 32:\n        a = sorted(a, reverse=True)\n        if x <= n - 30:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-30]) + sum(a[-x+n-30:])\n    if k == 33:\n        a = sorted(a, reverse=True)\n        if x <= n - 31:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-31]) + sum(a[-x+n-31:])\n    if k == 34:\n        a = sorted(a, reverse=True)\n        if x <= n - 32:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-32]) + sum(a[-x+n-32:])\n    if k == 35:\n        a = sorted(a, reverse=True)\n        if x <= n - 33:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-33]) + sum(a[-x+n-33:])\n    if k == 36:\n        a = sorted(a, reverse=True)\n        if x <= n - 34:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-34]) + sum(a[-x+n-34:])\n    if k == 37:\n        a = sorted(a, reverse=True)\n        if x <= n - 35:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-35]) + sum(a[-x+n-35:])\n    if k == 38:\n        a = sorted(a, reverse=True)\n        if x <= n - 36:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-36]) + sum(a[-x+n-36:])\n    if k == 39:\n        a = sorted(a, reverse=True)\n        if x <= n - 37:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-37]) + sum(a[-x+n-37:])\n    if k == 40:\n        a = sorted(a, reverse=True)\n        if x <= n - 38:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-38]) + sum(a[-x+n-38:])\n    if k == 41:\n        a = sorted(a, reverse=True)\n        if x <= n - 39:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-39]) + sum(a[-x+n-39:])\n    if k == 42:\n        a = sorted(a, reverse=True)\n        if x <= n - 40:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-40]) + sum(a[-x+n-40:])\n    if k == 43:\n        a = sorted(a, reverse=True)\n        if x <= n - 41:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-41]) + sum(a[-x+n-41:])\n    if k == 44:\n        a = sorted(a, reverse=True)\n        if x <= n - 42:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-42]) + sum(a[-x+n-42:])\n    if k == 45:\n        a = sorted(a, reverse=True)\n        if x <= n - 43:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-43]) + sum(a[-x+n-43:])\n    if k == 46:\n        a = sorted(a, reverse=True)\n        if x <= n - 44:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-44]) + sum(a[-x+n-44:])\n    if k == 47:\n        a = sorted(a, reverse=True)\n        if x <= n - 45:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-45]) + sum(a[-x+n-45:])\n    if k == 48:\n        a = sorted(a, reverse=True)\n        if x <= n - 46:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-46]) + sum(a[-x+n-46:])\n    if k == 49:\n        a = sorted(a, reverse=True)\n        if x <= n - 47:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-47]) + sum(a[-x+n-47:])\n    if k == 50:\n        a = sorted(a, reverse=True)\n        if x <= n - 48:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-48]) + sum(a[-x+n-48:])\n    if k == 51:\n        a = sorted(a, reverse=True)\n        if x <= n - 49:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-49]) + sum(a[-x+n-49:])\n    if k == 52:\n        a = sorted(a, reverse=True)\n        if x <= n - 50:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-50]) + sum(a[-x+n-50:])\n    if k == 53:\n        a = sorted(a, reverse=True)\n        if x <= n - 51:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-51]) + sum(a[-x+n-51:])\n    if k == 54:\n        a = sorted(a, reverse=True)\n        if x <= n - 52:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-52]) + sum(a[-x+n-52:])\n    if k == 55:\n        a = sorted(a, reverse=True)\n        if x <= n - 53:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-53]) + sum(a[-x+n-53:])\n    if k == 56:\n        a = sorted(a, reverse=True)\n        if x <= n - 54:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-54]) + sum(a[-x+n-54:])\n    if k == 57:\n        a = sorted(a, reverse=True)\n        if x <= n - 55:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-55]) + sum(a[-x+n-55:])\n    if k == 58:\n        a = sorted(a, reverse=True)\n        if x <= n - 56:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-56]) + sum(a[-x+n-56:])\n    if k == 59:\n        a = sorted(a, reverse=True)\n        if x <= n - 57:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-57]) + sum(a[-x+n-57:])\n    if k == 60:\n        a = sorted(a, reverse=True)\n        if x <= n - 58:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-58]) + sum(a[-x+n-58:])\n    if k == 61:\n        a = sorted(a, reverse=True)\n        if x <= n - 59:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-59]) + sum(a[-x+n-59:])\n    if k == 62:\n        a ="
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": ""
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef get_input():\n    line = sys.stdin.readline()\n    return line.strip()\n\ndef get_list_input():\n    line = sys.stdin.readline()\n    return [int(i) for i in line.split()]\n\ndef main():\n    n, k, x = get_list_input()\n    a = get_list_input()\n    # print(n, k, x, a)\n\n    if x < k:\n        print(-1)\n        return\n\n    # DP\n    # dp[i][j] = max sum of the first i items with j items selected\n    dp = [[0 for _ in range(x+1)] for _ in range(n+1)]\n\n    # dp[i][j] = max(dp[i-1][j], dp[i-k][j-1] + sum(a[i-k:i]))\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            if j > i:\n                break\n            dp[i][j] = max(dp[i-1][j], dp[i-k][j-1] + sum(a[i-k:i]))\n\n    print(dp[n][x])\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\n    exit()\n\n# Dynamic Programming\n# dp[i] = max sum of beauty values of pictures from 1 to i\ndp = [0] * (n + 1)\n\n# dp[i] = max(dp[i-1], dp[i-k] + sum(a[i-k+1:i+1]))\nfor i in range(1, n + 1):\n    if i < k:\n        dp[i] = sum(a[:i])\n    else:\n        dp[i] = max(dp[i - 1], dp[i - k] + sum(a[i - k:i]))\n\nif dp[n] < x:\n    print(-1)\nelse:\n    print(dp[n])\n\n# # Brute Force\n# # We can try all the possible combinations of reposted pictures\n# def solve(n, k, x, a):\n#     # max sum of beauty values of pictures from 1 to i\n#     dp = [0] * (n + 1)\n#     # dp[i] = max(dp[i-1], dp[i-k] + sum(a[i-k+1:i+1]))\n#     for i in range(1, n + 1):\n#         if i < k:\n#             dp[i] = sum(a[:i])\n#         else:\n#             dp[i] = max(dp[i - 1], dp[i - k] + sum(a[i - k:i]))\n#     if dp[n] < x:\n#         return -1\n#     else:\n#         return dp[n]\n#\n#\n# def solve2(n, k, x, a):\n#     # try all possible combinations of reposted pictures\n#     # start from the first picture\n#     # each picture can be reposted or not\n#     # if the picture is not reposted, then the next picture must be reposted\n#     # otherwise, the next picture can be reposted or not\n#     # the last picture must be reposted\n#     res = -1\n#     for i in range(1 << n):\n#         if bin(i).count('1') != x:\n#             continue\n#         # i is the combination of reposted pictures\n#         # i >> j & 1 is the j-th bit of i\n#         # if i >> j & 1 == 1, then the j-th picture is reposted\n#         # if i >> j & 1 == 0, then the j-th picture is not reposted\n#         # check if the j-th picture is reposted\n#         if (i >> 0 & 1) == 0 or (i >> (n - 1) & 1) == 0:\n#             continue\n#         for j in range(1, n - 1):\n#             # if the j-th picture is not reposted, the (j+1)-th picture must be reposted\n#             if (i >> j & 1) == 0 and (i >> (j + 1) & 1) == 0:\n#                 break\n#         else:\n#             # check if all the constraints are satisfied\n#             for j in range(n):\n#                 # the j-th picture is reposted\n#                 if i >> j & 1 == 1:\n#                     # check if the segment of at least k consecutive pictures contains this picture\n#                     if j < k - 1 or any(i >> (j - k + 1 + t) & 1 == 1 for t in range(k - 1)):\n#                         continue\n#                     else:\n#                         break\n#             else:\n#                 # all constraints are satisfied\n#                 res = max(res, sum(a[j] for j in range(n) if i >> j & 1 == 1))\n#     return res\n#\n#\n# print(solve(n, k, x, a))\n# print(solve2(n, k, x, a))"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef solve(n, k, x, a):\n    if x < k:\n        return -1\n    if x == k:\n        return sum(a[:k])\n    if n == k:\n        return sum(a)\n    if n == x:\n        return sum(a)\n\n    # DP\n    dp = [[0 for _ in range(x+1)] for _ in range(n+1)]\n    for j in range(1, x+1):\n        dp[0][j] = -1\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            if j < k:\n                dp[i][j] = -1\n            elif i < k:\n                dp[i][j] = max(dp[i-1][j], a[i-1])\n            else:\n                dp[i][j] = max(dp[i-1][j], dp[i-1][j-k] + a[i-1])\n\n    return dp[n][x]\n\n\nif __name__ == '__main__':\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(solve(n, k, x, a))"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, k, x = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n    if x < k:\n        print -1\n        return\n    if x == n:\n        print sum(a)\n        return\n    if k == 1:\n        print -1\n        return\n    if x == k:\n        print max(a[:k])\n        return\n    if x == k + 1:\n        print max(a[:k]) + max(a[k:])\n        return\n    if x > n - k + 1:\n        print -1\n        return\n    if x == n - k + 1:\n        print sum(a[:k]) + max(a[k:])\n        return\n    if x < n - k + 1:\n        print sum(a[:k]) + max(a[k:-k+1]) + max(a[-k+1:])\n        return\n    print -1\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\nelse:\n    dp = [[0 for _ in range(n+1)] for _ in range(x+1)]\n    for i in range(1, x+1):\n        for j in range(k, n+1):\n            dp[i][j] = max(dp[i][j-1], dp[i-1][j-k] + sum(a[j-k:j]))\n    print(dp[x][n])"
    }
  ],
  "created": 1649873901,
  "id": "cmpl-4wbrJhYm9KS5MN9eQqWDM0leldp9Q",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 18:20:19.694891 0 {
  "finish_reason": "length",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef get_input():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    return n, k, x, a\n\ndef solve(n, k, x, a):\n    if x < k:\n        return -1\n    if x == n:\n        return sum(a)\n    if k == 1:\n        return sum(sorted(a)[-x:])\n    if k == 2:\n        return sum(sorted(a, reverse=True)[:x])\n    if k == 3:\n        a = sorted(a, reverse=True)\n        if x <= n - 1:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-1]) + sum(a[-x+n-1:])\n    if k == 4:\n        a = sorted(a, reverse=True)\n        if x <= n - 2:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-2]) + sum(a[-x+n-2:])\n    if k == 5:\n        a = sorted(a, reverse=True)\n        if x <= n - 3:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-3]) + sum(a[-x+n-3:])\n    if k == 6:\n        a = sorted(a, reverse=True)\n        if x <= n - 4:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-4]) + sum(a[-x+n-4:])\n    if k == 7:\n        a = sorted(a, reverse=True)\n        if x <= n - 5:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-5]) + sum(a[-x+n-5:])\n    if k == 8:\n        a = sorted(a, reverse=True)\n        if x <= n - 6:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-6]) + sum(a[-x+n-6:])\n    if k == 9:\n        a = sorted(a, reverse=True)\n        if x <= n - 7:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-7]) + sum(a[-x+n-7:])\n    if k == 10:\n        a = sorted(a, reverse=True)\n        if x <= n - 8:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-8]) + sum(a[-x+n-8:])\n    if k == 11:\n        a = sorted(a, reverse=True)\n        if x <= n - 9:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-9]) + sum(a[-x+n-9:])\n    if k == 12:\n        a = sorted(a, reverse=True)\n        if x <= n - 10:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-10]) + sum(a[-x+n-10:])\n    if k == 13:\n        a = sorted(a, reverse=True)\n        if x <= n - 11:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-11]) + sum(a[-x+n-11:])\n    if k == 14:\n        a = sorted(a, reverse=True)\n        if x <= n - 12:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-12]) + sum(a[-x+n-12:])\n    if k == 15:\n        a = sorted(a, reverse=True)\n        if x <= n - 13:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-13]) + sum(a[-x+n-13:])\n    if k == 16:\n        a = sorted(a, reverse=True)\n        if x <= n - 14:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-14]) + sum(a[-x+n-14:])\n    if k == 17:\n        a = sorted(a, reverse=True)\n        if x <= n - 15:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-15]) + sum(a[-x+n-15:])\n    if k == 18:\n        a = sorted(a, reverse=True)\n        if x <= n - 16:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-16]) + sum(a[-x+n-16:])\n    if k == 19:\n        a = sorted(a, reverse=True)\n        if x <= n - 17:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-17]) + sum(a[-x+n-17:])\n    if k == 20:\n        a = sorted(a, reverse=True)\n        if x <= n - 18:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-18]) + sum(a[-x+n-18:])\n    if k == 21:\n        a = sorted(a, reverse=True)\n        if x <= n - 19:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-19]) + sum(a[-x+n-19:])\n    if k == 22:\n        a = sorted(a, reverse=True)\n        if x <= n - 20:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-20]) + sum(a[-x+n-20:])\n    if k == 23:\n        a = sorted(a, reverse=True)\n        if x <= n - 21:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-21]) + sum(a[-x+n-21:])\n    if k == 24:\n        a = sorted(a, reverse=True)\n        if x <= n - 22:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-22]) + sum(a[-x+n-22:])\n    if k == 25:\n        a = sorted(a, reverse=True)\n        if x <= n - 23:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-23]) + sum(a[-x+n-23:])\n    if k == 26:\n        a = sorted(a, reverse=True)\n        if x <= n - 24:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-24]) + sum(a[-x+n-24:])\n    if k == 27:\n        a = sorted(a, reverse=True)\n        if x <= n - 25:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-25]) + sum(a[-x+n-25:])\n    if k == 28:\n        a = sorted(a, reverse=True)\n        if x <= n - 26:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-26]) + sum(a[-x+n-26:])\n    if k == 29:\n        a = sorted(a, reverse=True)\n        if x <= n - 27:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-27]) + sum(a[-x+n-27:])\n    if k == 30:\n        a = sorted(a, reverse=True)\n        if x <= n - 28:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-28]) + sum(a[-x+n-28:])\n    if k == 31:\n        a = sorted(a, reverse=True)\n        if x <= n - 29:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-29]) + sum(a[-x+n-29:])\n    if k == 32:\n        a = sorted(a, reverse=True)\n        if x <= n - 30:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-30]) + sum(a[-x+n-30:])\n    if k == 33:\n        a = sorted(a, reverse=True)\n        if x <= n - 31:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-31]) + sum(a[-x+n-31:])\n    if k == 34:\n        a = sorted(a, reverse=True)\n        if x <= n - 32:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-32]) + sum(a[-x+n-32:])\n    if k == 35:\n        a = sorted(a, reverse=True)\n        if x <= n - 33:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-33]) + sum(a[-x+n-33:])\n    if k == 36:\n        a = sorted(a, reverse=True)\n        if x <= n - 34:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-34]) + sum(a[-x+n-34:])\n    if k == 37:\n        a = sorted(a, reverse=True)\n        if x <= n - 35:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-35]) + sum(a[-x+n-35:])\n    if k == 38:\n        a = sorted(a, reverse=True)\n        if x <= n - 36:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-36]) + sum(a[-x+n-36:])\n    if k == 39:\n        a = sorted(a, reverse=True)\n        if x <= n - 37:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-37]) + sum(a[-x+n-37:])\n    if k == 40:\n        a = sorted(a, reverse=True)\n        if x <= n - 38:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-38]) + sum(a[-x+n-38:])\n    if k == 41:\n        a = sorted(a, reverse=True)\n        if x <= n - 39:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-39]) + sum(a[-x+n-39:])\n    if k == 42:\n        a = sorted(a, reverse=True)\n        if x <= n - 40:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-40]) + sum(a[-x+n-40:])\n    if k == 43:\n        a = sorted(a, reverse=True)\n        if x <= n - 41:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-41]) + sum(a[-x+n-41:])\n    if k == 44:\n        a = sorted(a, reverse=True)\n        if x <= n - 42:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-42]) + sum(a[-x+n-42:])\n    if k == 45:\n        a = sorted(a, reverse=True)\n        if x <= n - 43:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-43]) + sum(a[-x+n-43:])\n    if k == 46:\n        a = sorted(a, reverse=True)\n        if x <= n - 44:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-44]) + sum(a[-x+n-44:])\n    if k == 47:\n        a = sorted(a, reverse=True)\n        if x <= n - 45:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-45]) + sum(a[-x+n-45:])\n    if k == 48:\n        a = sorted(a, reverse=True)\n        if x <= n - 46:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-46]) + sum(a[-x+n-46:])\n    if k == 49:\n        a = sorted(a, reverse=True)\n        if x <= n - 47:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-47]) + sum(a[-x+n-47:])\n    if k == 50:\n        a = sorted(a, reverse=True)\n        if x <= n - 48:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-48]) + sum(a[-x+n-48:])\n    if k == 51:\n        a = sorted(a, reverse=True)\n        if x <= n - 49:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-49]) + sum(a[-x+n-49:])\n    if k == 52:\n        a = sorted(a, reverse=True)\n        if x <= n - 50:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-50]) + sum(a[-x+n-50:])\n    if k == 53:\n        a = sorted(a, reverse=True)\n        if x <= n - 51:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-51]) + sum(a[-x+n-51:])\n    if k == 54:\n        a = sorted(a, reverse=True)\n        if x <= n - 52:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-52]) + sum(a[-x+n-52:])\n    if k == 55:\n        a = sorted(a, reverse=True)\n        if x <= n - 53:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-53]) + sum(a[-x+n-53:])\n    if k == 56:\n        a = sorted(a, reverse=True)\n        if x <= n - 54:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-54]) + sum(a[-x+n-54:])\n    if k == 57:\n        a = sorted(a, reverse=True)\n        if x <= n - 55:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-55]) + sum(a[-x+n-55:])\n    if k == 58:\n        a = sorted(a, reverse=True)\n        if x <= n - 56:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-56]) + sum(a[-x+n-56:])\n    if k == 59:\n        a = sorted(a, reverse=True)\n        if x <= n - 57:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-57]) + sum(a[-x+n-57:])\n    if k == 60:\n        a = sorted(a, reverse=True)\n        if x <= n - 58:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-58]) + sum(a[-x+n-58:])\n    if k == 61:\n        a = sorted(a, reverse=True)\n        if x <= n - 59:\n            return sum(a[:x])\n        else:\n            return sum(a[:n-59]) + sum(a[-x+n-59:])\n    if k == 62:\n        a ="
}
2022-04-13 18:20:19.694989 REASON length
2022-04-13 18:20:19.694999 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": ""
}
2022-04-13 18:20:19.695093 REASON stop
2022-04-13 18:20:19.695457 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef get_input():\n    line = sys.stdin.readline()\n    return line.strip()\n\ndef get_list_input():\n    line = sys.stdin.readline()\n    return [int(i) for i in line.split()]\n\ndef main():\n    n, k, x = get_list_input()\n    a = get_list_input()\n    # print(n, k, x, a)\n\n    if x < k:\n        print(-1)\n        return\n\n    # DP\n    # dp[i][j] = max sum of the first i items with j items selected\n    dp = [[0 for _ in range(x+1)] for _ in range(n+1)]\n\n    # dp[i][j] = max(dp[i-1][j], dp[i-k][j-1] + sum(a[i-k:i]))\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            if j > i:\n                break\n            dp[i][j] = max(dp[i-1][j], dp[i-k][j-1] + sum(a[i-k:i]))\n\n    print(dp[n][x])\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 18:20:19.695501 REASON stop
2022-04-13 18:20:19.695850 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\n    exit()\n\n# Dynamic Programming\n# dp[i] = max sum of beauty values of pictures from 1 to i\ndp = [0] * (n + 1)\n\n# dp[i] = max(dp[i-1], dp[i-k] + sum(a[i-k+1:i+1]))\nfor i in range(1, n + 1):\n    if i < k:\n        dp[i] = sum(a[:i])\n    else:\n        dp[i] = max(dp[i - 1], dp[i - k] + sum(a[i - k:i]))\n\nif dp[n] < x:\n    print(-1)\nelse:\n    print(dp[n])\n\n# # Brute Force\n# # We can try all the possible combinations of reposted pictures\n# def solve(n, k, x, a):\n#     # max sum of beauty values of pictures from 1 to i\n#     dp = [0] * (n + 1)\n#     # dp[i] = max(dp[i-1], dp[i-k] + sum(a[i-k+1:i+1]))\n#     for i in range(1, n + 1):\n#         if i < k:\n#             dp[i] = sum(a[:i])\n#         else:\n#             dp[i] = max(dp[i - 1], dp[i - k] + sum(a[i - k:i]))\n#     if dp[n] < x:\n#         return -1\n#     else:\n#         return dp[n]\n#\n#\n# def solve2(n, k, x, a):\n#     # try all possible combinations of reposted pictures\n#     # start from the first picture\n#     # each picture can be reposted or not\n#     # if the picture is not reposted, then the next picture must be reposted\n#     # otherwise, the next picture can be reposted or not\n#     # the last picture must be reposted\n#     res = -1\n#     for i in range(1 << n):\n#         if bin(i).count('1') != x:\n#             continue\n#         # i is the combination of reposted pictures\n#         # i >> j & 1 is the j-th bit of i\n#         # if i >> j & 1 == 1, then the j-th picture is reposted\n#         # if i >> j & 1 == 0, then the j-th picture is not reposted\n#         # check if the j-th picture is reposted\n#         if (i >> 0 & 1) == 0 or (i >> (n - 1) & 1) == 0:\n#             continue\n#         for j in range(1, n - 1):\n#             # if the j-th picture is not reposted, the (j+1)-th picture must be reposted\n#             if (i >> j & 1) == 0 and (i >> (j + 1) & 1) == 0:\n#                 break\n#         else:\n#             # check if all the constraints are satisfied\n#             for j in range(n):\n#                 # the j-th picture is reposted\n#                 if i >> j & 1 == 1:\n#                     # check if the segment of at least k consecutive pictures contains this picture\n#                     if j < k - 1 or any(i >> (j - k + 1 + t) & 1 == 1 for t in range(k - 1)):\n#                         continue\n#                     else:\n#                         break\n#             else:\n#                 # all constraints are satisfied\n#                 res = max(res, sum(a[j] for j in range(n) if i >> j & 1 == 1))\n#     return res\n#\n#\n# print(solve(n, k, x, a))\n# print(solve2(n, k, x, a))"
}
2022-04-13 18:20:19.695905 REASON stop
2022-04-13 18:20:19.720492 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef solve(n, k, x, a):\n    if x < k:\n        return -1\n    if x == k:\n        return sum(a[:k])\n    if n == k:\n        return sum(a)\n    if n == x:\n        return sum(a)\n\n    # DP\n    dp = [[0 for _ in range(x+1)] for _ in range(n+1)]\n    for j in range(1, x+1):\n        dp[0][j] = -1\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            if j < k:\n                dp[i][j] = -1\n            elif i < k:\n                dp[i][j] = max(dp[i-1][j], a[i-1])\n            else:\n                dp[i][j] = max(dp[i-1][j], dp[i-1][j-k] + a[i-1])\n\n    return dp[n][x]\n\n\nif __name__ == '__main__':\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(solve(n, k, x, a))"
}
2022-04-13 18:20:19.720600 REASON stop
2022-04-13 18:20:19.753837 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, k, x = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n    if x < k:\n        print -1\n        return\n    if x == n:\n        print sum(a)\n        return\n    if k == 1:\n        print -1\n        return\n    if x == k:\n        print max(a[:k])\n        return\n    if x == k + 1:\n        print max(a[:k]) + max(a[k:])\n        return\n    if x > n - k + 1:\n        print -1\n        return\n    if x == n - k + 1:\n        print sum(a[:k]) + max(a[k:])\n        return\n    if x < n - k + 1:\n        print sum(a[:k]) + max(a[k:-k+1]) + max(a[-k+1:])\n        return\n    print -1\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 18:20:19.753939 REASON stop
2022-04-13 18:20:19.754865 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\nelse:\n    dp = [[0 for _ in range(n+1)] for _ in range(x+1)]\n    for i in range(1, x+1):\n        for j in range(k, n+1):\n            dp[i][j] = max(dp[i][j-1], dp[i-1][j-k] + sum(a[j-k:j]))\n    print(dp[x][n])"
}
2022-04-13 18:20:19.754934 REASON stop
