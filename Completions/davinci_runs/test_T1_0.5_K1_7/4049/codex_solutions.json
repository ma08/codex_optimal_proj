["\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\na_win = 0\nfor i in range(len(a)):\n    for j in range(len(b)):\n        if j == i:\n            a_win += min(a[i], b[j])\n        else:\n            a_win += min(a[i], b[j])\n\na_win = a_win // 2\n\nprint(a_win, n-a_win)", "\n\ndef main():\n    n = int(input())\n    alice = list(map(int, input().split()))\n    bob = list(map(int, input().split()))\n    print(min(alice[2], bob[0]), max(alice[2], bob[0]))\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\nn = int(sys.stdin.readline())\na1, a2, a3 = [int(x) for x in sys.stdin.readline().split()]\nb1, b2, b3 = [int(x) for x in sys.stdin.readline().split()]\n\n# \n# In the first example, Alice will not win any rounds if she shows scissors and then paper and Bob shows rock and then scissors. In the best outcome, Alice will win one round if she shows paper and then scissors, and Bob shows rock and then scissors.\n# \n# In the second example, Alice will not win any rounds if Bob shows the same things as Alice each round.\n# \n# In the third example, Alice always shows paper and Bob always shows rock so Alice will win all three rounds anyway.\n# \n\n# In the worst case, Alice will win as many rounds as she shows rock, and Bob shows scissors.\n# In the best case, Alice will win as many rounds as she shows scissors, and Bob shows paper.\n# In the best case, Alice will win as many rounds as she shows paper, and Bob shows rock.\n\nprint(a2*b3 + a3*b1)\nprint(a1*b2 + a3*b3 + a2*b1)", "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    a_wins = 0\n    b_wins = 0\n    for i in range(n):\n        if a[i % 3] > b[i % 3]:\n            a_wins += 1\n        elif a[i % 3] < b[i % 3]:\n            b_wins += 1\n    print(a_wins, b_wins)\n\nmain()", "\n\ndef main():\n    # get the number of rounds\n    n = int(input())\n\n    # get the number of times Alice will show rock, scissors and paper, respectively\n    a1, a2, a3 = map(int, input().split())\n\n    # get the number of times Bob will show rock, scissors and paper, respectively\n    b1, b2, b3 = map(int, input().split())\n\n    # calculate the minimum number of rounds Alice can win\n    min_wins = min(a2, b3) + min(a3, b1) + min(a1, b2)\n\n    # calculate the maximum number of rounds Alice can win\n    max_wins = min(a1, b1) + min(a2, b2) + min(a3, b3)\n\n    # print the minimum and maximum number of rounds Alice can win\n    print(min_wins, max_wins)\n\n\nif __name__ == \"__main__\":\n    main()", "\n\nfrom math import gcd\nfrom functools import reduce\n\ndef lcm(a,b):\n    return a * b // gcd(a,b)\n\ndef main():\n    n = int(input())\n    a1,a2,a3 = map(int,input().split())\n    b1,b2,b3 = map(int,input().split())\n    l = lcm(lcm(a1+a2,a2+a3),a3+a1)\n    m = reduce(gcd, (b1+b2,b2+b3,b3+b1))\n    print(l-m, n-m)\n\nmain()"]