2022-04-13 22:27:03.680587 """
You are given an integer $n$. In one move, you can either multiply $n$ by two or divide $n$ by $6$ (if it is divisible by $6$ without the remainder).

Your task is to find the minimum number of moves needed to obtain $1$ from $n$ or determine if it's impossible to do that.

You have to answer $t$ independent test cases.


-----Input-----

The first line of the input contains one integer $t$ ($1 \le t \le 2 \cdot 10^4$) — the number of test cases. Then $t$ test cases follow. 

The only line of the test case contains one integer $n$ ($1 \le n \le 10^9$).


-----Output-----

For each test case, print the answer — the minimum number of moves needed to obtain $1$ from $n$ if it's possible to do that or -1 if it's impossible to obtain $1$ from $n$.


-----Example-----
Input
7
1
2
3
12
12345
15116544
387420489

Output
0
-1
2
-1
-1
12
36



-----Note-----

Consider the sixth test case of the example. The answer can be obtained by the following sequence of moves from the given integer $15116544$:

  Divide by $6$ and get $2519424$;  divide by $6$ and get $419904$;  divide by $6$ and get $69984$;  divide by $6$ and get $11664$;  multiply by $2$ and get $23328$;  divide by $6$ and get $3888$;  divide by $6$ and get $648$;  divide by $6$ and get $108$;  multiply by $2$ and get $216$;  divide by $6$ and get $36$;  divide by $6$ and get $6$;  divide by $6$ and get $1$.
"""
2022-04-13 22:27:03.680602 --------------------------
2022-04-13 22:27:28.902074 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    ans = 0\n    while n > 1:\n        if n % 6 == 0:\n            n = n // 6\n            ans += 1\n        elif n % 3 == 0:\n            n = n * 2\n            ans += 1\n        else:\n            ans = -1\n            break\n    print(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef answer(n):\n    if n == 1:\n        return 0\n    if n % 2 == 1:\n        return -1\n    if n % 6 != 0:\n        return 1 + answer(n // 2)\n    return 1 + answer(n // 6)\n\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    print(answer(n))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    if n == 1:\n        print(0)\n    else:\n        moves = []\n        while n > 1:\n            if n % 6 == 0:\n                n = n // 6\n                moves.append(1)\n            else:\n                n = n * 2\n                moves.append(2)\n        if len(moves) == 0:\n            print(-1)\n        else:\n            print(len(moves))\n\n\"\"\"\n# Wrong answer\nimport math\n\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    if n == 1:\n        print(0)\n    else:\n        moves = 0\n        while n > 1:\n            if n % 6 == 0:\n                n = n // 6\n                moves += 1\n            else:\n                n = n * 2\n                moves += 1\n        if moves == 0:\n            print(-1)\n        else:\n            print(moves)\n\"\"\""
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nt = int(input())\n\nfor i in range(t):\n    num = int(input())\n    count = 0\n    while num > 1:\n        if num % 6 == 0:\n            num = num // 6\n        elif num % 3 == 0:\n            num = num * 2\n        else:\n            count = -1\n            break\n        count += 1\n    print(count)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    if n == 1:\n        print(0)\n    elif n%6 == 0:\n        print(min_moves(n, 1, 0))\n    else:\n        print(-1)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\n# SOLUTION\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        if n == 1:\n            print(0)\n        elif n % 6 == 0:\n            print(min_moves(n, 0))\n        else:\n            print(-1)\n\ndef min_moves(n, moves):\n    if n == 1:\n        return moves\n    elif n % 6 == 0:\n        return min(min_moves(n//6, moves+1), min_moves(n*2, moves+1))\n    else:\n        return float('inf')\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        print(min_moves(n))\n\ndef min_moves(n):\n    if n == 1:\n        return 0\n    elif n % 6 != 0:\n        return -1\n    else:\n        return 1 + min_moves(n // 6)\n\n\nmain()"
    }
  ],
  "created": 1649888823,
  "id": "cmpl-4wfjzY0y3bMh5lJ4WXAxoRIgig5Pn",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 22:27:28.902346 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    ans = 0\n    while n > 1:\n        if n % 6 == 0:\n            n = n // 6\n            ans += 1\n        elif n % 3 == 0:\n            n = n * 2\n            ans += 1\n        else:\n            ans = -1\n            break\n    print(ans)"
}
2022-04-13 22:27:28.902385 REASON stop
2022-04-13 22:27:28.902851 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef answer(n):\n    if n == 1:\n        return 0\n    if n % 2 == 1:\n        return -1\n    if n % 6 != 0:\n        return 1 + answer(n // 2)\n    return 1 + answer(n // 6)\n\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    print(answer(n))"
}
2022-04-13 22:27:28.902973 REASON stop
2022-04-13 22:27:28.903327 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    if n == 1:\n        print(0)\n    else:\n        moves = []\n        while n > 1:\n            if n % 6 == 0:\n                n = n // 6\n                moves.append(1)\n            else:\n                n = n * 2\n                moves.append(2)\n        if len(moves) == 0:\n            print(-1)\n        else:\n            print(len(moves))\n\n\"\"\"\n# Wrong answer\nimport math\n\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    if n == 1:\n        print(0)\n    else:\n        moves = 0\n        while n > 1:\n            if n % 6 == 0:\n                n = n // 6\n                moves += 1\n            else:\n                n = n * 2\n                moves += 1\n        if moves == 0:\n            print(-1)\n        else:\n            print(moves)\n\"\"\""
}
2022-04-13 22:27:28.903378 REASON stop
2022-04-13 22:27:28.904555 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nt = int(input())\n\nfor i in range(t):\n    num = int(input())\n    count = 0\n    while num > 1:\n        if num % 6 == 0:\n            num = num // 6\n        elif num % 3 == 0:\n            num = num * 2\n        else:\n            count = -1\n            break\n        count += 1\n    print(count)"
}
2022-04-13 22:27:28.904611 REASON stop
2022-04-13 22:27:28.924410 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    if n == 1:\n        print(0)\n    elif n%6 == 0:\n        print(min_moves(n, 1, 0))\n    else:\n        print(-1)"
}
2022-04-13 22:27:28.924512 REASON stop
2022-04-13 22:27:28.925345 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\n# SOLUTION\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        if n == 1:\n            print(0)\n        elif n % 6 == 0:\n            print(min_moves(n, 0))\n        else:\n            print(-1)\n\ndef min_moves(n, moves):\n    if n == 1:\n        return moves\n    elif n % 6 == 0:\n        return min(min_moves(n//6, moves+1), min_moves(n*2, moves+1))\n    else:\n        return float('inf')\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 22:27:28.925482 REASON stop
2022-04-13 22:27:28.938348 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        print(min_moves(n))\n\ndef min_moves(n):\n    if n == 1:\n        return 0\n    elif n % 6 != 0:\n        return -1\n    else:\n        return 1 + min_moves(n // 6)\n\n\nmain()"
}
2022-04-13 22:27:28.938446 REASON stop
