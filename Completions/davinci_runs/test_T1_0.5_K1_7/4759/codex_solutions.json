["\n\nn = int(input())\nat_bats = list(map(int, input().split()))\n\ntotal_bases = 0\nofficial_at_bats = 0\nfor bat in at_bats:\n    if bat == -1:\n        continue\n    total_bases += bat\n    official_at_bats += 1\n\nprint(total_bases / official_at_bats)", "\n\nn = int(input())\nat_bats = list(map(int, input().split()))\nbases = 0\nfor i in at_bats:\n    if i != -1:\n        bases += i\nprint(bases/len(at_bats))", "\n\nn = int(input())\nbases = [int(x) for x in input().split()]\n\nbats = 0\ntotal_bases = 0\n\nfor base in bases:\n    if base != -1:\n        bats += 1\n        total_bases += base\n\nprint(total_bases/bats)", "\n\nn = int(input())\nat_bats = input().split()\n\ntotal_bases = 0\nat_bats_count = 0\nfor at_bat in at_bats:\n    if at_bat != \"-1\":\n        total_bases += int(at_bat)\n        at_bats_count += 1\n\nprint(total_bases/at_bats_count)", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    at_bats = list(map(int, sys.stdin.readline().split()))\n    total_bases = 0\n    for i in at_bats:\n        if i != -1:\n            total_bases += i\n    denominator = 0\n    for i in at_bats:\n        if i != -1:\n            denominator += 1\n    print(total_bases/denominator)\n\nif __name__ == \"__main__\":\n    main()", "\n\nn = int(input())\nl = list(map(int, input().split()))\n\ns = 0\nd = 0\n\nfor i in l:\n    if i != -1:\n        s += i\n        d += 1\n\nprint(s/d)", "\n\nimport sys\n\ninput = sys.stdin.readline().split()\natbats = [int(i) for i in input]\n\ntotal = 0\ncount = 0\nfor i in atbats:\n    if i != -1:\n        total += i\n        count += 1\n\nprint(total/count)"]