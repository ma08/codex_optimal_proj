["\n\nimport sys\n\ndef javelin():\n    num_rods = int(sys.stdin.readline())\n    rods = [int(sys.stdin.readline()) for _ in range(num_rods)]\n    while True:\n        if len(rods) == 1:\n            return rods[0]\n        rods.sort()\n        rods[0] += rods[1]\n        rods.pop(1)\n\nprint(javelin())", "\n\ndef main():\n    n = int(input())\n    rod_lengths = []\n    for i in range(n):\n        rod_lengths.append(int(input()))\n    rod_lengths.sort()\n    jumbo_javelin_length = 0\n    while len(rod_lengths) > 1:\n        rod_lengths[-2] += rod_lengths[-1] - 1\n        rod_lengths.pop()\n        rod_lengths.sort()\n    print(rod_lengths[0])\n\nif __name__ == \"__main__\":\n    main()", "\n\n\ndef main():\n    n = int(input())\n    rods = [int(input()) for _ in range(n)]\n    rods.sort()\n    total = rods[0]\n    for i in range(1, n):\n        total += rods[i] - 1\n    print(total)\n\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\nn = int(sys.stdin.readline())\ntotal = 0\n\nfor i in range(n):\n    total += int(sys.stdin.readline())\n\nprint(total - n + 1)", "\n\nimport sys\n\ndef main():\n    lines = sys.stdin.readlines()\n    n = int(lines[0])\n    rods = [int(line) for line in lines[1:]]\n\n    # Sort rods in descending order\n    rods.sort(reverse=True)\n\n    # Fuse rods together\n    while len(rods) > 1:\n        rods[-2] += rods.pop() - 1\n\n    # Print length of javelin\n    print(rods[0])\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    rods = []\n    for i in range(n):\n        rods.append(int(sys.stdin.readline()))\n    rods.sort()\n    while len(rods) > 1:\n        rods[0] += rods[1] - 1\n        rods.pop(1)\n        rods.sort()\n    print(rods[0])\n\nmain()", "\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    rods = [int(stdin.readline()) for _ in range(n)]\n    rods.sort()\n    javelin = rods[0]\n    for i in range(1, n):\n        javelin += rods[i] - 1\n    print(javelin)\n\nif __name__ == '__main__':\n    main()"]