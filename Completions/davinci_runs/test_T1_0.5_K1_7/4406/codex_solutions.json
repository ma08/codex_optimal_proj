["\n\ndef solve(n,k,ids):\n    res = []\n    for id in ids:\n        if id not in res:\n            if len(res) == k:\n                res.pop()\n            res.insert(0,id)\n    return str(len(res)) + '\\n' + ' '.join(map(str,res))\n\nif __name__ == '__main__':\n    print(solve(7,2,[1,2,3,2,1,3,2]))\n    print(solve(10,4,[2,3,3,1,1,2,1,2,3,3]))", "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    ids = map(int, sys.stdin.readline().split())\n    conversations = []\n    for i in ids:\n        if i in conversations:\n            continue\n        if len(conversations) == k:\n            conversations.pop()\n        conversations.insert(0, i)\n    print len(conversations)\n    for i in conversations:\n        print i,\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n, k = map(int, input().split())\n    id_list = list(map(int, input().split()))\n    conversation_list = []\n    for id in id_list:\n        if id in conversation_list:\n            continue\n        else:\n            if len(conversation_list) == k:\n                conversation_list.pop(k-1)\n            conversation_list.insert(0, id)\n    print(len(conversation_list))\n    print(' '.join(map(str, conversation_list)))\n\nif __name__ == '__main__':\n    main()", "\n\n# SOLUTION\nn, k = map(int, input().split())\nl = list(map(int, input().split()))\n\nans = []\n\nfor i in l:\n\n    if i not in ans:\n        ans.insert(0, i)\n        if len(ans) > k:\n            ans.pop()\n\nprint(len(ans))\nfor i in ans:\n    print(i, end=\" \")", "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    ids = map(int, sys.stdin.readline().split())\n    conversations = []\n    for id in ids:\n        if id in conversations:\n            continue\n        if len(conversations) == k:\n            conversations.pop()\n        conversations.insert(0, id)\n    print len(conversations)\n    print \" \".join(map(str, conversations))\n\nif __name__ == \"__main__\":\n    main()", "\n\n#Solution\n\nimport sys\n\nn, k = [int(i) for i in input().split()]\n\nids = [int(i) for i in input().split()]\n\nconversations = list()\n\nfor i in range(n):\n    if ids[i] not in conversations:\n        conversations.insert(0, ids[i])\n        if len(conversations) > k:\n            conversations.pop()\n\nprint(len(conversations))\nprint(\" \".join([str(i) for i in conversations]))", "\n\ndef main():\n    n, k = [int(x) for x in input().split()]\n    messages = [int(x) for x in input().split()]\n    conversations = []\n    for message in messages:\n        if message not in conversations:\n            if len(conversations) == k:\n                conversations.pop()\n            conversations.insert(0, message)\n    print(len(conversations))\n    print(*conversations)\n\nmain()"]