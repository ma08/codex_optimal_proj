["\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    stores = []\n    for _ in range(n):\n        stores.append(list(map(int, sys.stdin.readline().split())))\n    stores.sort(key=lambda x: x[0])\n    ans = 0\n    for store in stores:\n        if store[1] >= m:\n            ans += store[0] * m\n            break\n        else:\n            ans += store[0] * store[1]\n            m -= store[1]\n    print(ans)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\nN, M = map(int, sys.stdin.readline().split())\nA = []\nB = []\nfor i in range(N):\n    a, b = map(int, sys.stdin.readline().split())\n    A.append(a)\n    B.append(b)\n\ndef minCost(N, M, A, B):\n    minCost = 0\n    for i in range(N):\n        if B[i] <= M:\n            minCost += A[i] * B[i]\n            M -= B[i]\n        else:\n            minCost += A[i] * M\n            M = 0\n            break\n    return minCost\n\nprint(minCost(N, M, A, B))", "\n\ndef main():\n    n, m = map(int, input().split())\n    costs = [list(map(int, input().split())) for _ in range(n)]\n    costs.sort()\n    ans = 0\n    for cost in costs:\n        if cost[1] >= m:\n            ans += cost[0] * m\n            break\n        else:\n            ans += cost[0] * cost[1]\n            m -= cost[1]\n    print(ans)\n\nif __name__ == '__main__':\n    main()", "\n\n\ndef min_cost_buy_energy_drinks(N, M, A, B):\n    \"\"\"\n    Find the minimum amount of money with which M cans of energy drinks can be bought.\n    :param N: number of stores\n    :param M: number of cans of energy drinks to buy\n    :param A: list of prices of a can at each store\n    :param B: list of maximum number of cans that can be bought at each store\n    :return: minimum amount of money\n    \"\"\"\n    A = sorted(A)\n    B = sorted(B)\n    total = 0\n    for i in range(N):\n        if B[i] >= M:\n            total += A[i] * M\n            return total\n        else:\n            total += A[i] * B[i]\n            M -= B[i]\n    return total\n\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    A = []\n    B = []\n    for i in range(N):\n        a, b = map(int, input().split())\n        A.append(a)\n        B.append(b)\n    print(min_cost_buy_energy_drinks(N, M, A, B))", "\n\nimport sys\n\ndef main():\n    n, m = [int(x) for x in sys.stdin.readline().split()]\n    costs = []\n    for i in range(n):\n        a, b = [int(x) for x in sys.stdin.readline().split()]\n        costs.append((a, b))\n    costs = sorted(costs)\n    total = 0\n    for i in range(n):\n        a, b = costs[i]\n        num_to_buy = min(b, m)\n        total += num_to_buy * a\n        m -= num_to_buy\n        if m == 0:\n            break\n    print(total)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\nN, M = map(int, sys.stdin.readline().split())\nA, B = [], []\nfor i in range(N):\n    a, b = map(int, sys.stdin.readline().split())\n    A.append(a)\n    B.append(b)\n\nmin_cost = 10 ** 10\n\nfor i in range(N):\n    if B[i] >= M:\n        min_cost = min(min_cost, A[i] * M)\n    else:\n        for j in range(N):\n            if i != j and B[i] + B[j] >= M:\n                min_cost = min(min_cost, A[i] * B[i] + A[j] * (M - B[i]))\n\nprint(min_cost)"]