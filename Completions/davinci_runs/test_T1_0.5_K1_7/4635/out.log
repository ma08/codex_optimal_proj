2022-04-13 22:16:05.171121 """
You are given two integers $n$ and $k$.

Your task is to construct such a string $s$ of length $n$ that for each $i$ from $1$ to $k$ there is at least one $i$-th letter of the Latin alphabet in this string (the first letter is 'a', the second is 'b' and so on) and there are no other letters except these. You have to maximize the minimal frequency of some letter (the frequency of a letter is the number of occurrences of this letter in a string). If there are several possible answers, you can print any.

You have to answer $t$ independent queries.


-----Input-----

The first line of the input contains one integer $t$ ($1 \le t \le 100$) â€” the number of queries.

The next $t$ lines are contain queries, one per line. The $i$-th line contains two integers $n_i$ and $k_i$ ($1 \le n_i \le 100, 1 \le k_i \le min(n_i, 26)$) â€” the length of the string in the $i$-th query and the number of characters in the $i$-th query.


-----Output-----

Print $t$ lines. In the $i$-th line print the answer to the $i$-th query: any string $s_i$ satisfying the conditions in the problem statement with constraints from the $i$-th query.


-----Example-----
Input
3
7 3
4 4
6 2

Output
cbcacab
abcd
baabab



-----Note-----

In the first example query the maximum possible minimal frequency is $2$, it can be easily seen that the better answer doesn't exist. Other examples of correct answers: "cbcabba", "ccbbaaa" (any permutation of given answers is also correct).

In the second example query any permutation of first four letters is acceptable (the maximum minimal frequency is $1$).

In the third example query any permutation of the given answer is acceptable (the maximum minimal frequency is $3$).
"""
2022-04-13 22:16:05.171137 --------------------------
2022-04-13 22:18:00.532599 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n# Solution\n\nt = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    # print(n, k)\n    a = []\n    for i in range(k):\n        a.append(chr(i + 97))\n    for i in range(n - k):\n        a.append(chr(i % k + 97))\n    print(''.join(a))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nfrom collections import defaultdict\nfrom random import shuffle\nfrom string import ascii_lowercase\nfrom typing import List\n\ndef generate_string(n: int, k: int) -> str:\n    alphabet = list(ascii_lowercase[:k])\n    shuffle(alphabet)\n    if n % k == 0:\n        return (n // k) * alphabet[0]\n    else:\n        return (n // k) * alphabet[0] + alphabet[1]\n\ndef solve(n: int, k: int) -> str:\n    return generate_string(n, k)\n\nif __name__ == '__main__':\n    t = int(input())\n    for _ in range(t):\n        n, k = map(int, input().split())\n        print(solve(n, k))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n\ndef solve(n, k):\n    if k == 1:\n        return \"a\" * n\n    if k == 2:\n        return \"ab\" * (n // 2) + \"a\" * (n % 2)\n    if k == 3:\n        return \"aba\" * (n // 3) + \"ab\" * (n % 3)\n    if k == 4:\n        return \"abab\" * (n // 4) + \"aba\" * (n % 4)\n    if k == 5:\n        return \"ababa\" * (n // 5) + \"abab\" * (n % 5)\n    if k == 6:\n        return \"ababab\" * (n // 6) + \"ababa\" * (n % 6)\n    if k == 7:\n        return \"abababa\" * (n // 7) + \"ababab\" * (n % 7)\n    if k == 8:\n        return \"abababab\" * (n // 8) + \"abababa\" * (n % 8)\n    if k == 9:\n        return \"ababababa\" * (n // 9) + \"abababab\" * (n % 9)\n    if k == 10:\n        return \"ababababab\" * (n // 10) + \"ababababa\" * (n % 10)\n    if k == 11:\n        return \"abababababa\" * (n // 11) + \"ababababab\" * (n % 11)\n    if k == 12:\n        return \"abababababab\" * (n // 12) + \"abababababa\" * (n % 12)\n    if k == 13:\n        return \"ababababababa\" * (n // 13) + \"abababababab\" * (n % 13)\n    if k == 14:\n        return \"ababababababab\" * (n // 14) + \"ababababababa\" * (n % 14)\n    if k == 15:\n        return \"abababababababa\" * (n // 15) + \"ababababababab\" * (n % 15)\n    if k == 16:\n        return \"abababababababab\" * (n // 16) + \"abababababababa\" * (n % 16)\n    if k == 17:\n        return \"ababababababababa\" * (n // 17) + \"abababababababab\" * (n % 17)\n    if k == 18:\n        return \"ababababababababab\" * (n // 18) + \"ababababababababa\" * (n % 18)\n    if k == 19:\n        return \"abababababababababa\" * (n // 19) + \"ababababababababab\" * (n % 19)\n    if k == 20:\n        return \"abababababababababab\" * (n // 20) + \"abababababababababa\" * (n % 20)\n    if k == 21:\n        return \"ababababababababababa\" * (n // 21) + \"abababababababababab\" * (n % 21)\n    if k == 22:\n        return \"ababababababababababab\" * (n // 22) + \"ababababababababababa\" * (n % 22)\n    if k == 23:\n        return \"abababababababababababa\" * (n // 23) + \"ababababababababababab\" * (n % 23)\n    if k == 24:\n        return \"abababababababababababab\" * (n // 24) + \"abababababababababababa\" * (n % 24)\n    if k == 25:\n        return \"ababababababababababababa\" * (n // 25) + \"abababababababababababab\" * (n % 25)\n    if k == 26:\n        return \"ababababababababababababab\" * (n // 26) + \"ababababababababababababa\" * (n % 26)\n\n\nif __name__ == '__main__':\n    n = int(input())\n    for i in range(n):\n        n, k = map(int, input().split(\" \"))\n        print(solve(n, k))"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nt = int(input())\n\nfor i in range(t):\n    n, k = map(int, input().split())\n    if k == 1:\n        print('a' * n)\n    elif k == 2:\n        if n % 2 == 0:\n            print('ab' * (n // 2))\n        else:\n            print('aab' * (n // 3) + 'aa')\n    elif k == 3:\n        if n % 3 == 0:\n            print('abc' * (n // 3))\n        elif n % 3 == 1:\n            print('aabc' * (n // 4) + 'aa')\n        else:\n            print('aabc' * (n // 4) + 'aaa')\n    else:\n        if n % k == 0:\n            print(''.join(chr(ord('a') + i) for i in range(k)) * (n // k))\n        elif n % k == 1:\n            print(''.join(chr(ord('a') + i) for i in range(k)) * (n // k - 1) + ''.join(chr(ord('a') + i) for i in range(k - 1)) + 'a')\n        else:\n            print(''.join(chr(ord('a') + i) for i in range(k)) * (n // k - 1) + ''.join(chr(ord('a') + i) for i in range(k - 2)) + 'aa')"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\n# cook your dish here\nt=int(input())\nfor i in range(t):\n    n,k=map(int,input().split())\n    if n%k==0:\n        for j in range(n//k):\n            print(chr(97+j)*k,end='')\n        print()\n    else:\n        for j in range(n//k):\n            print(chr(97+j)*k,end='')\n        print(chr(97+(n%k))*(n%k),end='')\n        print()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ndef solve(n, k):\n    if k == 1:\n        return 'a' * n\n    if n == k:\n        return ''.join(chr(ord('a') + i) for i in range(k))\n    if n < k:\n        return None\n    if k == 2:\n        return 'a' * (n // 2) + 'b' * (n - n // 2)\n    if k == 3:\n        if n % 2 == 0:\n            return 'a' * (n // 2) + 'b' * (n // 2)\n        else:\n            return 'a' * (n // 2) + 'c' + 'b' * (n // 2)\n    if k == 4:\n        if n % 3 == 0:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3)\n        else:\n            return 'a' * (n // 3) + 'b' * (n // 3 + 1) + 'c' * (n // 3)\n    if k == 5:\n        if n % 3 == 0:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3)\n        elif n % 3 == 1:\n            return 'a' * (n // 3) + 'b' * (n // 3 + 1) + 'c' * (n // 3)\n        else:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3 + 1)\n    if k == 6:\n        if n % 4 == 0:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4)\n        elif n % 4 == 1:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4 + 1) + 'd' * (n // 4)\n        elif n % 4 == 2:\n            return 'a' * (n // 4) + 'b' * (n // 4 + 1) + 'c' * (n // 4) + 'd' * (n // 4)\n        else:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4 + 1)\n    if k == 7:\n        if n % 4 == 0:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4)\n        elif n % 4 == 1:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4 + 1) + 'd' * (n // 4)\n        elif n % 4 == 2:\n            return 'a' * (n // 4) + 'b' * (n // 4 + 1) + 'c' * (n // 4) + 'd' * (n // 4)\n        else:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4 + 1)\n    if k == 8:\n        if n % 4 == 0:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4)\n        elif n % 4 == 1:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4 + 1) + 'd' * (n // 4)\n        elif n % 4 == 2:\n            return 'a' * (n // 4) + 'b' * (n // 4 + 1) + 'c' * (n // 4) + 'd' * (n // 4)\n        else:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4 + 1)\n    if k == 9:\n        if n % 3 == 0:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3)\n        elif n % 3 == 1:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3 + 1)\n        else:\n            return 'a' * (n // 3) + 'b' * (n // 3 + 1) + 'c' * (n // 3)\n    if k == 10:\n        if n % 3 == 0:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3)\n        elif n % 3 == 1:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3 + 1)\n        else:\n            return 'a' * (n // 3) + 'b' * (n // 3 + 1) + 'c' * (n // 3)\n    if k == 11:\n        if n % 3 == 0:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3)\n        elif n % 3 == 1:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3 + 1)\n        else:\n            return 'a' * (n // 3) + 'b' * (n // 3 + 1) + 'c' * (n // 3)\n    if k == 12:\n        if n % 4 == 0:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4)\n        elif n % 4 == 1:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4 + 1) + 'd' * (n // 4)\n        elif n % 4 == 2:\n            return 'a' * (n // 4) + 'b' * (n // 4 + 1) + 'c' * (n // 4) + 'd' * (n // 4)\n        else:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4 + 1)\n    if k == 13:\n        if n % 4 == 0:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4)\n        elif n % 4 == 1:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4 + 1) + 'd' * (n // 4)\n        elif n % 4 == 2:\n            return 'a' * (n // 4) + 'b' * (n // 4 + 1) + 'c' * (n // 4) + 'd' * (n // 4)\n        else:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4 + 1)\n    if k == 14:\n        if n % 4 == 0:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4)\n        elif n % 4 == 1:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4 + 1) + 'd' * (n // 4)\n        elif n % 4 == 2:\n            return 'a' * (n // 4) + 'b' * (n // 4 + 1) + 'c' * (n // 4) + 'd' * (n // 4)\n        else:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4 + 1)\n    if k == 15:\n        if n % 4 == 0:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4)\n        elif n % 4 == 1:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4 + 1) + 'd' * (n // 4)\n        elif n % 4 == 2:\n            return 'a' * (n // 4) + 'b' * (n // 4 + 1) + 'c' * (n // 4) + 'd' * (n // 4)\n        else:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4 + 1)\n    if k == 16:\n        if n % 4 == 0:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4)\n        elif n % 4 == 1:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4 + 1) + 'd' * (n // 4)\n        elif n % 4 == 2:\n            return 'a' * (n // 4) + 'b' * (n // 4 + 1) + 'c' * (n // 4) + 'd' * (n // 4)\n        else:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4 + 1)\n    if k == 17:\n        if n % 4 == 0:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4)\n        elif n % 4 == 1:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4 + 1) + 'd' * (n // 4)\n        elif n % 4 == 2:\n            return 'a' * (n // 4) + 'b' * (n // 4 + 1) + 'c' * (n // 4) + 'd' * (n // 4)\n        else:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4 + 1)\n    if k == 18:\n        if n % 4 == 0:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4)\n        elif n % 4 == 1:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4 + 1) + 'd' * (n // 4)\n        elif n % 4 == 2:\n            return 'a' * (n // 4) + 'b' * (n // 4 + 1) + 'c' * (n // 4) + 'd' * (n // 4)\n        else:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4 + 1)\n    if k == 19:\n        if n % 3 == 0:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3)\n        elif n % 3 == 1:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3 + 1)\n        else:\n            return 'a' * (n // 3) + 'b' * (n // 3 + 1) + 'c' * (n // 3)\n    if k == 20:\n        if n % 3 == 0:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3)\n        elif n % 3 == 1:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3 + 1)\n        else:\n            return 'a' * (n // 3) + 'b' * (n // 3 + 1) + 'c' * (n // 3)\n    if k == 21:\n        if n % 3 == 0:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3)\n        elif n % 3 == 1:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3 + 1)\n        else:\n            return 'a' * (n // 3) + 'b' * (n // 3 + 1) + 'c' * (n // 3)\n    if k == 22:\n        if n % 3 == 0:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3)\n        elif n % 3 == 1:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3 + 1)\n        else:\n            return 'a' * (n // 3) + 'b' * (n // 3 + 1) + 'c' * (n // 3)\n    if k == 23:\n        if n % 3 == 0:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3)\n        elif n % 3 == 1:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3 + 1)\n        else:\n            return 'a' * (n // 3) + 'b' * (n // 3 + 1) + 'c' * (n // 3)\n    if k == 24:\n        if n % 3 == 0:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3)\n        elif n % 3 == 1:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3 + 1)\n        else:\n            return 'a' * (n // 3) + 'b' * (n // 3 + 1) + 'c' * (n // 3)\n    if k == 25:\n        if n % 3 == 0:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3)\n        elif n % 3 == 1:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3 + 1)\n        else:\n            return 'a' * (n // 3) + 'b' * (n // 3 + 1) + 'c' * (n // 3)\n    if k == 26:\n        if n % 3 == 0:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3)\n        elif n % 3 == 1:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3 + 1)\n        else:\n            return 'a' * (n // 3) + 'b' * (n // 3 + 1) + 'c' * (n // 3)\n\nif __name__ == '__main__':\n    t = int(input())\n    for _ in range(t):\n        n, k = map(int, input().split())\n        print(solve(n, k))"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, k = map(int, input().split())\n        print(''.join([chr(i + 97) for i in range(k)] * (n // k) + [chr(i + 97) for i in range(n % k)]))\n\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1649888165,
  "id": "cmpl-4wfZNFSlTbfE0q3c4Zlh6b3yjzwV4",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 22:18:00.532996 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n# Solution\n\nt = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    # print(n, k)\n    a = []\n    for i in range(k):\n        a.append(chr(i + 97))\n    for i in range(n - k):\n        a.append(chr(i % k + 97))\n    print(''.join(a))"
}
2022-04-13 22:18:00.533043 REASON stop
2022-04-13 22:18:00.533515 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nfrom collections import defaultdict\nfrom random import shuffle\nfrom string import ascii_lowercase\nfrom typing import List\n\ndef generate_string(n: int, k: int) -> str:\n    alphabet = list(ascii_lowercase[:k])\n    shuffle(alphabet)\n    if n % k == 0:\n        return (n // k) * alphabet[0]\n    else:\n        return (n // k) * alphabet[0] + alphabet[1]\n\ndef solve(n: int, k: int) -> str:\n    return generate_string(n, k)\n\nif __name__ == '__main__':\n    t = int(input())\n    for _ in range(t):\n        n, k = map(int, input().split())\n        print(solve(n, k))"
}
2022-04-13 22:18:00.533634 REASON stop
2022-04-13 22:18:00.533976 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n\ndef solve(n, k):\n    if k == 1:\n        return \"a\" * n\n    if k == 2:\n        return \"ab\" * (n // 2) + \"a\" * (n % 2)\n    if k == 3:\n        return \"aba\" * (n // 3) + \"ab\" * (n % 3)\n    if k == 4:\n        return \"abab\" * (n // 4) + \"aba\" * (n % 4)\n    if k == 5:\n        return \"ababa\" * (n // 5) + \"abab\" * (n % 5)\n    if k == 6:\n        return \"ababab\" * (n // 6) + \"ababa\" * (n % 6)\n    if k == 7:\n        return \"abababa\" * (n // 7) + \"ababab\" * (n % 7)\n    if k == 8:\n        return \"abababab\" * (n // 8) + \"abababa\" * (n % 8)\n    if k == 9:\n        return \"ababababa\" * (n // 9) + \"abababab\" * (n % 9)\n    if k == 10:\n        return \"ababababab\" * (n // 10) + \"ababababa\" * (n % 10)\n    if k == 11:\n        return \"abababababa\" * (n // 11) + \"ababababab\" * (n % 11)\n    if k == 12:\n        return \"abababababab\" * (n // 12) + \"abababababa\" * (n % 12)\n    if k == 13:\n        return \"ababababababa\" * (n // 13) + \"abababababab\" * (n % 13)\n    if k == 14:\n        return \"ababababababab\" * (n // 14) + \"ababababababa\" * (n % 14)\n    if k == 15:\n        return \"abababababababa\" * (n // 15) + \"ababababababab\" * (n % 15)\n    if k == 16:\n        return \"abababababababab\" * (n // 16) + \"abababababababa\" * (n % 16)\n    if k == 17:\n        return \"ababababababababa\" * (n // 17) + \"abababababababab\" * (n % 17)\n    if k == 18:\n        return \"ababababababababab\" * (n // 18) + \"ababababababababa\" * (n % 18)\n    if k == 19:\n        return \"abababababababababa\" * (n // 19) + \"ababababababababab\" * (n % 19)\n    if k == 20:\n        return \"abababababababababab\" * (n // 20) + \"abababababababababa\" * (n % 20)\n    if k == 21:\n        return \"ababababababababababa\" * (n // 21) + \"abababababababababab\" * (n % 21)\n    if k == 22:\n        return \"ababababababababababab\" * (n // 22) + \"ababababababababababa\" * (n % 22)\n    if k == 23:\n        return \"abababababababababababa\" * (n // 23) + \"ababababababababababab\" * (n % 23)\n    if k == 24:\n        return \"abababababababababababab\" * (n // 24) + \"abababababababababababa\" * (n % 24)\n    if k == 25:\n        return \"ababababababababababababa\" * (n // 25) + \"abababababababababababab\" * (n % 25)\n    if k == 26:\n        return \"ababababababababababababab\" * (n // 26) + \"ababababababababababababa\" * (n % 26)\n\n\nif __name__ == '__main__':\n    n = int(input())\n    for i in range(n):\n        n, k = map(int, input().split(\" \"))\n        print(solve(n, k))"
}
2022-04-13 22:18:00.534030 REASON stop
2022-04-13 22:18:00.557437 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nt = int(input())\n\nfor i in range(t):\n    n, k = map(int, input().split())\n    if k == 1:\n        print('a' * n)\n    elif k == 2:\n        if n % 2 == 0:\n            print('ab' * (n // 2))\n        else:\n            print('aab' * (n // 3) + 'aa')\n    elif k == 3:\n        if n % 3 == 0:\n            print('abc' * (n // 3))\n        elif n % 3 == 1:\n            print('aabc' * (n // 4) + 'aa')\n        else:\n            print('aabc' * (n // 4) + 'aaa')\n    else:\n        if n % k == 0:\n            print(''.join(chr(ord('a') + i) for i in range(k)) * (n // k))\n        elif n % k == 1:\n            print(''.join(chr(ord('a') + i) for i in range(k)) * (n // k - 1) + ''.join(chr(ord('a') + i) for i in range(k - 1)) + 'a')\n        else:\n            print(''.join(chr(ord('a') + i) for i in range(k)) * (n // k - 1) + ''.join(chr(ord('a') + i) for i in range(k - 2)) + 'aa')"
}
2022-04-13 22:18:00.557540 REASON stop
2022-04-13 22:18:00.566703 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\n# cook your dish here\nt=int(input())\nfor i in range(t):\n    n,k=map(int,input().split())\n    if n%k==0:\n        for j in range(n//k):\n            print(chr(97+j)*k,end='')\n        print()\n    else:\n        for j in range(n//k):\n            print(chr(97+j)*k,end='')\n        print(chr(97+(n%k))*(n%k),end='')\n        print()"
}
2022-04-13 22:18:00.566795 REASON stop
2022-04-13 22:18:00.567616 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ndef solve(n, k):\n    if k == 1:\n        return 'a' * n\n    if n == k:\n        return ''.join(chr(ord('a') + i) for i in range(k))\n    if n < k:\n        return None\n    if k == 2:\n        return 'a' * (n // 2) + 'b' * (n - n // 2)\n    if k == 3:\n        if n % 2 == 0:\n            return 'a' * (n // 2) + 'b' * (n // 2)\n        else:\n            return 'a' * (n // 2) + 'c' + 'b' * (n // 2)\n    if k == 4:\n        if n % 3 == 0:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3)\n        else:\n            return 'a' * (n // 3) + 'b' * (n // 3 + 1) + 'c' * (n // 3)\n    if k == 5:\n        if n % 3 == 0:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3)\n        elif n % 3 == 1:\n            return 'a' * (n // 3) + 'b' * (n // 3 + 1) + 'c' * (n // 3)\n        else:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3 + 1)\n    if k == 6:\n        if n % 4 == 0:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4)\n        elif n % 4 == 1:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4 + 1) + 'd' * (n // 4)\n        elif n % 4 == 2:\n            return 'a' * (n // 4) + 'b' * (n // 4 + 1) + 'c' * (n // 4) + 'd' * (n // 4)\n        else:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4 + 1)\n    if k == 7:\n        if n % 4 == 0:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4)\n        elif n % 4 == 1:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4 + 1) + 'd' * (n // 4)\n        elif n % 4 == 2:\n            return 'a' * (n // 4) + 'b' * (n // 4 + 1) + 'c' * (n // 4) + 'd' * (n // 4)\n        else:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4 + 1)\n    if k == 8:\n        if n % 4 == 0:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4)\n        elif n % 4 == 1:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4 + 1) + 'd' * (n // 4)\n        elif n % 4 == 2:\n            return 'a' * (n // 4) + 'b' * (n // 4 + 1) + 'c' * (n // 4) + 'd' * (n // 4)\n        else:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4 + 1)\n    if k == 9:\n        if n % 3 == 0:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3)\n        elif n % 3 == 1:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3 + 1)\n        else:\n            return 'a' * (n // 3) + 'b' * (n // 3 + 1) + 'c' * (n // 3)\n    if k == 10:\n        if n % 3 == 0:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3)\n        elif n % 3 == 1:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3 + 1)\n        else:\n            return 'a' * (n // 3) + 'b' * (n // 3 + 1) + 'c' * (n // 3)\n    if k == 11:\n        if n % 3 == 0:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3)\n        elif n % 3 == 1:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3 + 1)\n        else:\n            return 'a' * (n // 3) + 'b' * (n // 3 + 1) + 'c' * (n // 3)\n    if k == 12:\n        if n % 4 == 0:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4)\n        elif n % 4 == 1:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4 + 1) + 'd' * (n // 4)\n        elif n % 4 == 2:\n            return 'a' * (n // 4) + 'b' * (n // 4 + 1) + 'c' * (n // 4) + 'd' * (n // 4)\n        else:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4 + 1)\n    if k == 13:\n        if n % 4 == 0:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4)\n        elif n % 4 == 1:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4 + 1) + 'd' * (n // 4)\n        elif n % 4 == 2:\n            return 'a' * (n // 4) + 'b' * (n // 4 + 1) + 'c' * (n // 4) + 'd' * (n // 4)\n        else:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4 + 1)\n    if k == 14:\n        if n % 4 == 0:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4)\n        elif n % 4 == 1:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4 + 1) + 'd' * (n // 4)\n        elif n % 4 == 2:\n            return 'a' * (n // 4) + 'b' * (n // 4 + 1) + 'c' * (n // 4) + 'd' * (n // 4)\n        else:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4 + 1)\n    if k == 15:\n        if n % 4 == 0:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4)\n        elif n % 4 == 1:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4 + 1) + 'd' * (n // 4)\n        elif n % 4 == 2:\n            return 'a' * (n // 4) + 'b' * (n // 4 + 1) + 'c' * (n // 4) + 'd' * (n // 4)\n        else:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4 + 1)\n    if k == 16:\n        if n % 4 == 0:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4)\n        elif n % 4 == 1:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4 + 1) + 'd' * (n // 4)\n        elif n % 4 == 2:\n            return 'a' * (n // 4) + 'b' * (n // 4 + 1) + 'c' * (n // 4) + 'd' * (n // 4)\n        else:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4 + 1)\n    if k == 17:\n        if n % 4 == 0:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4)\n        elif n % 4 == 1:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4 + 1) + 'd' * (n // 4)\n        elif n % 4 == 2:\n            return 'a' * (n // 4) + 'b' * (n // 4 + 1) + 'c' * (n // 4) + 'd' * (n // 4)\n        else:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4 + 1)\n    if k == 18:\n        if n % 4 == 0:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4)\n        elif n % 4 == 1:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4 + 1) + 'd' * (n // 4)\n        elif n % 4 == 2:\n            return 'a' * (n // 4) + 'b' * (n // 4 + 1) + 'c' * (n // 4) + 'd' * (n // 4)\n        else:\n            return 'a' * (n // 4) + 'b' * (n // 4) + 'c' * (n // 4) + 'd' * (n // 4 + 1)\n    if k == 19:\n        if n % 3 == 0:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3)\n        elif n % 3 == 1:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3 + 1)\n        else:\n            return 'a' * (n // 3) + 'b' * (n // 3 + 1) + 'c' * (n // 3)\n    if k == 20:\n        if n % 3 == 0:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3)\n        elif n % 3 == 1:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3 + 1)\n        else:\n            return 'a' * (n // 3) + 'b' * (n // 3 + 1) + 'c' * (n // 3)\n    if k == 21:\n        if n % 3 == 0:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3)\n        elif n % 3 == 1:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3 + 1)\n        else:\n            return 'a' * (n // 3) + 'b' * (n // 3 + 1) + 'c' * (n // 3)\n    if k == 22:\n        if n % 3 == 0:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3)\n        elif n % 3 == 1:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3 + 1)\n        else:\n            return 'a' * (n // 3) + 'b' * (n // 3 + 1) + 'c' * (n // 3)\n    if k == 23:\n        if n % 3 == 0:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3)\n        elif n % 3 == 1:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3 + 1)\n        else:\n            return 'a' * (n // 3) + 'b' * (n // 3 + 1) + 'c' * (n // 3)\n    if k == 24:\n        if n % 3 == 0:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3)\n        elif n % 3 == 1:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3 + 1)\n        else:\n            return 'a' * (n // 3) + 'b' * (n // 3 + 1) + 'c' * (n // 3)\n    if k == 25:\n        if n % 3 == 0:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3)\n        elif n % 3 == 1:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3 + 1)\n        else:\n            return 'a' * (n // 3) + 'b' * (n // 3 + 1) + 'c' * (n // 3)\n    if k == 26:\n        if n % 3 == 0:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3)\n        elif n % 3 == 1:\n            return 'a' * (n // 3) + 'b' * (n // 3) + 'c' * (n // 3 + 1)\n        else:\n            return 'a' * (n // 3) + 'b' * (n // 3 + 1) + 'c' * (n // 3)\n\nif __name__ == '__main__':\n    t = int(input())\n    for _ in range(t):\n        n, k = map(int, input().split())\n        print(solve(n, k))"
}
2022-04-13 22:18:00.567734 REASON stop
2022-04-13 22:18:00.568379 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, k = map(int, input().split())\n        print(''.join([chr(i + 97) for i in range(k)] * (n // k) + [chr(i + 97) for i in range(n % k)]))\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 22:18:00.568440 REASON stop
