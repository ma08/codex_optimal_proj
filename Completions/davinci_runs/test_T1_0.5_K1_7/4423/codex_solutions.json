["\n\nn = int(input())\n\nrestaurants = []\nfor i in range(n):\n    restaurants.append(input().split())\n\nrestaurants.sort(key=lambda x: (x[0], -int(x[1])))\n\nfor i in range(n):\n    print(restaurants[i][2])", "\nimport sys\n\ndef main():\n    N = int(input())\n    restaurants = []\n    for i in range(N):\n        restaurants.append([i+1] + list(map(str, input().split())))\n    restaurants.sort(key=lambda x: (x[1], int(x[2])), reverse=True)\n    for i in range(N):\n        print(restaurants[i][0])\n\nif __name__ == \"__main__\":\n    main()", "\n\nn = int(input())\n\ndic = {}\n\nfor i in range(n):\n    s, p = input().split()\n    p = int(p)\n    if s not in dic:\n        dic[s] = [[p, i+1]]\n    else:\n        dic[s].append([p, i+1])\n\ncities = list(dic.keys())\ncities.sort()\n\nfor city in cities:\n    dic[city].sort(reverse=True)\n    for p, i in dic[city]:\n        print(i)", "\n\nn = int(input())\nrestaurants = []\nfor i in range(n):\n    restaurants.append(input().split())\n\nrestaurants = sorted(restaurants, key=lambda x: x[0])\nrestaurants = sorted(restaurants, key=lambda x: x[1], reverse=True)\n\nfor i in range(n):\n    print(i+1)", "\n\nN = int(input())\nrestaurant_list = []\nfor i in range(N):\n    city, score = input().split()\n    restaurant_list.append((city, int(score), i+1))\nrestaurant_list.sort()\nfor i in range(N):\n    print(restaurant_list[i][2])", "\n\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nrestaurants = []\nfor i in range(n):\n    city, score = input().split()\n    score = int(score)\n    restaurants.append([city, score, i+1])\n\nrestaurants.sort()\n\nfor restaurant in restaurants:\n    print(restaurant[2])", "\n\nn = int(input())\nrestaurants = []\n\nfor i in range(n):\n    restaurants.append(list(input().split()))\n\nrestaurants = sorted(restaurants, key=lambda x: x[0])\nrestaurants = sorted(restaurants, key=lambda x: int(x[1]), reverse=True)\n\nfor i in range(n):\n    print(restaurants[i][2])"]