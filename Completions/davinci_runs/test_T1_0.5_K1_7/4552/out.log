2022-04-13 21:45:02.115937 """
Joisino is planning to open a shop in a shopping street.
Each of the five weekdays is divided into two periods, the morning and the evening. For each of those ten periods, a shop must be either open during the whole period, or closed during the whole period. Naturally, a shop must be open during at least one of those periods.
There are already N stores in the street, numbered 1 through N.
You are given information of the business hours of those shops, F_{i,j,k}. If F_{i,j,k}=1, Shop i is open during Period k on Day j (this notation is explained below); if F_{i,j,k}=0, Shop i is closed during that period. Here, the days of the week are denoted as follows. Monday: Day 1, Tuesday: Day 2, Wednesday: Day 3, Thursday: Day 4, Friday: Day 5. Also, the morning is denoted as Period 1, and the afternoon is denoted as Period 2.
Let c_i be the number of periods during which both Shop i and Joisino's shop are open. Then, the profit of Joisino's shop will be P_{1,c_1}+P_{2,c_2}+...+P_{N,c_N}.
Find the maximum possible profit of Joisino's shop when she decides whether her shop is open during each period, making sure that it is open during at least one period.

-----Constraints-----
 - 1≤N≤100
 - 0≤F_{i,j,k}≤1
 - For every integer i such that 1≤i≤N, there exists at least one pair (j,k) such that F_{i,j,k}=1.
 - -10^7≤P_{i,j}≤10^7
 - All input values are integers.

-----Input-----
Input is given from Standard Input in the following format:
N
F_{1,1,1} F_{1,1,2} ... F_{1,5,1} F_{1,5,2}
:
F_{N,1,1} F_{N,1,2} ... F_{N,5,1} F_{N,5,2}
P_{1,0} ... P_{1,10}
:
P_{N,0} ... P_{N,10}

-----Output-----
Print the maximum possible profit of Joisino's shop.

-----Sample Input-----
1
1 1 0 1 0 0 0 1 0 1
3 4 5 6 7 8 9 -2 -3 4 -2

-----Sample Output-----
8

If her shop is open only during the periods when Shop 1 is opened, the profit will be 8, which is the maximum possible profit.
"""
2022-04-13 21:45:02.115958 --------------------------
2022-04-13 21:47:04.936876 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\nn = int(input())\nf = []\nfor i in range(n):\n    s = input().split()\n    s = [int(j) for j in s]\n    f.append(s)\np = []\nfor i in range(n):\n    s = input().split()\n    s = [int(j) for j in s]\n    p.append(s)\n\nans = -100000000\nfor i in range(2**10):\n    total = 0\n    for j in range(n):\n        c = 0\n        for k in range(10):\n            if ((i >> k) & 1) == 1 and f[j][k] == 1:\n                c += 1\n        total += p[j][c]\n    ans = max(ans, total)\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n\"\"\"\n\u89e3\u8aac\nhttp://kmjp.hatenablog.jp/entry/2016/12/07/0900\n\ndp[i][j][k] := i\u756a\u76ee\u306e\u5e97\u304cj\u65e5\u76ee\u306ek\u6642\u9593\u76ee\u306b\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306e,\n            \u305d\u3053\u307e\u3067\u3067\u7a3c\u3052\u308b\u6700\u5927\u306e\u5229\u76ca\n\u3068\u3057\u3066\u3001DP\u3092\u3059\u308b\u3002\n\n\u66f4\u65b0\u5f0f\u306f\ndp[i][j][k] = max( dp[i-1][j][k] + dp[i][j-1][k] + dp[i][j][k-1] - dp[i-1][j-1][k] - dp[i-1][j][k-1] - dp[i][j-1][k-1] + dp[i-1][j-1][k-1] )\n\u3068\u306a\u308b\u3002\n\n\u3053\u308c\u306f\u3001i\u756a\u76ee\u306e\u5e97\u304cj\u65e5\u76ee\u306ek\u6642\u9593\u76ee\u306b\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306b\u3001\ni-1\u756a\u76ee\u307e\u3067\u306e\u5e97\u304cj\u65e5\u76ee\u306ek\u6642\u9593\u76ee\u306b\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306e\u6700\u5927\u306e\u5229\u76ca\u3001\ni\u756a\u76ee\u307e\u3067\u306e\u5e97\u304cj-1\u65e5\u76ee\u306ek\u6642\u9593\u76ee\u306b\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306e\u6700\u5927\u306e\u5229\u76ca\u3001\ni\u756a\u76ee\u307e\u3067\u306e\u5e97\u304cj\u65e5\u76ee\u306ek-1\u6642\u9593\u76ee\u306b\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306e\u6700\u5927\u306e\u5229\u76ca\n-\ni-1\u756a\u76ee\u307e\u3067\u306e\u5e97\u304cj-1\u65e5\u76ee\u306ek\u6642\u9593\u76ee\u306b\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306e\u6700\u5927\u306e\u5229\u76ca\u3001\ni-1\u756a\u76ee\u307e\u3067\u306e\u5e97\u304cj\u65e5\u76ee\u306ek-1\u6642\u9593\u76ee\u306b\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306e\u6700\u5927\u306e\u5229\u76ca\u3001\ni\u756a\u76ee\u307e\u3067\u306e\u5e97\u304cj-1\u65e5\u76ee\u306ek-1\u6642\u9593\u76ee\u306b\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306e\u6700\u5927\u306e\u5229\u76ca\n+\ni-1\u756a\u76ee\u307e\u3067\u306e\u5e97\u304cj-1\u65e5\u76ee\u306ek-1\u6642\u9593\u76ee\u306b\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306e\u6700\u5927\u306e\u5229\u76ca\n\u306e\u6700\u5927\u5024\u3092\u6c42\u3081\u308b\u3053\u3068\u3068\u7b49\u3057\u3044\u3002\n\n\u3053\u308c\u3092\u66f4\u65b0\u3057\u3066\u3044\u304f\u3053\u3068\u3067\u3001\u5168\u3066\u306e\u5e97\u304c\u958b\u3044\u3066\u3044\u308b\u6642\u9593\u5e2f\u3067\u6700\u5927\u306e\u5229\u76ca\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\"\"\"\n\nN = int(input())\nF = []\nfor i in range(N):\n    F.append(list(map(int, input().split())))\nP = []\nfor i in range(N):\n    P.append(list(map(int, input().split())))\n\ndp = [[[0 for _ in range(11)] for _ in range(6)] for _ in range(N+1)]\n\nfor i in range(N):\n    for j in range(5):\n        for k in range(2):\n            if F[i][2*j+k] == 1:\n                dp[i+1][j+1][k+1] = max(\n                    dp[i][j+1][k+1],\n                    dp[i+1][j][k+1],\n                    dp[i+1][j+1][k],\n                    dp[i][j][k+1] + P[i][2*j+k],\n                    dp[i][j+1][k] + P[i][2*j+k],\n                    dp[i+1][j][k] + P[i][2*j+k],\n                    dp[i][j][k] + P[i][2*j+k]\n                )\n\nprint(max(dp[-1][-1]))"
    },
    {
      "finish_reason": "length",
      "index": 2,
      "logprobs": null,
      "text": "\n\n# N = int(input())\n# F = [[0]*2 for _ in range(N)]\n# for i in range(N):\n#     F[i] = [int(n) for n in input().split()]\n# P = [[0]*11 for _ in range(N)]\n# for i in range(N):\n#     P[i] = [int(n) for n in input().split()]\n\nN = 1\nF = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\nP = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n# N = 2\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n# N = 2\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n# N = 2\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n# N = 2\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 2\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8,"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn=int(input())\nf=[list(map(int,input().split())) for i in range(n)]\np=list(map(int,input().split()))\nans=0\nfor i in range(2**10):\n    if bin(i).count(\"1\")<1:\n        continue\n    tmp=0\n    for j in range(n):\n        c=0\n        for k in range(10):\n            if (i>>k&1)==1 and f[j][k]==1:\n                c+=1\n        tmp+=p[c]\n    ans=max(ans,tmp)\nprint(ans)"
    },
    {
      "finish_reason": "length",
      "index": 4,
      "logprobs": null,
      "text": "\n\n# N = int(input())\n# F = []\n# for i in range(N):\n#     F.append([int(i) for i in input().split()])\n# P = []\n# for i in range(N):\n#     P.append([int(i) for i in input().split()])\n#\n# max_profit = 0\n# for i in range(2**10):\n#     # \u5e97\u304c\u958b\u3044\u3066\u3044\u308b\u6642\u9593\u5e2f\u3092\u5168\u63a2\u7d22\n#     # \u5168\u63a2\u7d22\u3059\u308b\u6642\u9593\u5e2f\u304ci\u306e10\u9032\u6570\u8868\u8a18\u306b\u306a\u308b\n#     # 0b1101010101 = 0x55 = 0d85 = 0o125 = 85\n#     # 0b1101010101 = 0x55 = 0d85 = 0o125 = 85\n#     # 0b1101010101 = 0x55 = 0d85 = 0o125 = 85\n#     # 0b1101010101 = 0x55 = 0d85 = 0o125 = 85\n#     # 0b1101010101 = 0x55 = 0d85 = 0o125 = 85\n#     # 0b1101010101 = 0x55 = 0d85 = 0o125 = 85\n#\n#\n#\n# print(max_profit)\n\nN = int(input())\nF = []\nfor i in range(N):\n    F.append([int(i) for i in input().split()])\nP = []\nfor i in range(N):\n    P.append([int(i) for i in input().split()])\n\nmax_profit = 0\nfor i in range(2**10):\n    # \u5e97\u304c\u958b\u3044\u3066\u3044\u308b\u6642\u9593\u5e2f\u3092\u5168\u63a2\u7d22\n    # \u5168\u63a2\u7d22\u3059\u308b\u6642\u9593\u5e2f\u304ci\u306e10\u9032\u6570\u8868\u8a18\u306b\u306a\u308b\n    # 0b1101010101 = 0x55 = 0d85 = 0o125 = 85\n    # 0b1101010101 = 0x55 = 0d85 = 0o125 = 85\n    # 0b1101010101 = 0x55 = 0d85 = 0o125 = 85\n    # 0b1101010101 = 0x55 = 0d85 = 0o125 = 85\n    # 0b1101010101 = 0x55 = 0d85 = 0o125 = 85\n    # 0b1101010101 = 0x55 = 0d85 = 0o125 = 85\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\nimport itertools\n\nn = int(input())\nf_list = []\nfor _ in range(n):\n    f_list.append([int(x) for x in input().split()])\np_list = []\nfor _ in range(n):\n    p_list.append([int(x) for x in input().split()])\n\nmax_profit = -float(\"inf\")\nfor i in itertools.product((0,1), repeat=10):\n    if i.count(1) == 0:\n        continue\n    profit = 0\n    for j in range(n):\n        profit += p_list[j][i.count(1 & f_list[j][k]) for k in range(10)]\n    max_profit = max(max_profit, profit)\n\nprint(max_profit)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\n# ----Solution----\n\nN = int(input())\nF = [[int(i) for i in input().split()] for _ in range(N)]\nP = [int(i) for i in input().split()]\n\ndp = [[0]*10 for _ in range(N+1)]\n\nfor i in range(1, N+1):\n    for j in range(10):\n        for k in range(10):\n            if j & k == 0:\n                dp[i][j | k] = max(dp[i][j | k], dp[i-1][j] + P[i*10 + k])\n\nprint(max(dp[N]))"
    }
  ],
  "created": 1649886302,
  "id": "cmpl-4wf5KGcxdLpvvI0dUSAwNMqdUGOfN",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 21:47:04.937438 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\nn = int(input())\nf = []\nfor i in range(n):\n    s = input().split()\n    s = [int(j) for j in s]\n    f.append(s)\np = []\nfor i in range(n):\n    s = input().split()\n    s = [int(j) for j in s]\n    p.append(s)\n\nans = -100000000\nfor i in range(2**10):\n    total = 0\n    for j in range(n):\n        c = 0\n        for k in range(10):\n            if ((i >> k) & 1) == 1 and f[j][k] == 1:\n                c += 1\n        total += p[j][c]\n    ans = max(ans, total)\n\nprint(ans)"
}
2022-04-13 21:47:04.937492 REASON stop
2022-04-13 21:47:04.937914 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n\"\"\"\n\u89e3\u8aac\nhttp://kmjp.hatenablog.jp/entry/2016/12/07/0900\n\ndp[i][j][k] := i\u756a\u76ee\u306e\u5e97\u304cj\u65e5\u76ee\u306ek\u6642\u9593\u76ee\u306b\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306e,\n            \u305d\u3053\u307e\u3067\u3067\u7a3c\u3052\u308b\u6700\u5927\u306e\u5229\u76ca\n\u3068\u3057\u3066\u3001DP\u3092\u3059\u308b\u3002\n\n\u66f4\u65b0\u5f0f\u306f\ndp[i][j][k] = max( dp[i-1][j][k] + dp[i][j-1][k] + dp[i][j][k-1] - dp[i-1][j-1][k] - dp[i-1][j][k-1] - dp[i][j-1][k-1] + dp[i-1][j-1][k-1] )\n\u3068\u306a\u308b\u3002\n\n\u3053\u308c\u306f\u3001i\u756a\u76ee\u306e\u5e97\u304cj\u65e5\u76ee\u306ek\u6642\u9593\u76ee\u306b\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306b\u3001\ni-1\u756a\u76ee\u307e\u3067\u306e\u5e97\u304cj\u65e5\u76ee\u306ek\u6642\u9593\u76ee\u306b\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306e\u6700\u5927\u306e\u5229\u76ca\u3001\ni\u756a\u76ee\u307e\u3067\u306e\u5e97\u304cj-1\u65e5\u76ee\u306ek\u6642\u9593\u76ee\u306b\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306e\u6700\u5927\u306e\u5229\u76ca\u3001\ni\u756a\u76ee\u307e\u3067\u306e\u5e97\u304cj\u65e5\u76ee\u306ek-1\u6642\u9593\u76ee\u306b\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306e\u6700\u5927\u306e\u5229\u76ca\n-\ni-1\u756a\u76ee\u307e\u3067\u306e\u5e97\u304cj-1\u65e5\u76ee\u306ek\u6642\u9593\u76ee\u306b\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306e\u6700\u5927\u306e\u5229\u76ca\u3001\ni-1\u756a\u76ee\u307e\u3067\u306e\u5e97\u304cj\u65e5\u76ee\u306ek-1\u6642\u9593\u76ee\u306b\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306e\u6700\u5927\u306e\u5229\u76ca\u3001\ni\u756a\u76ee\u307e\u3067\u306e\u5e97\u304cj-1\u65e5\u76ee\u306ek-1\u6642\u9593\u76ee\u306b\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306e\u6700\u5927\u306e\u5229\u76ca\n+\ni-1\u756a\u76ee\u307e\u3067\u306e\u5e97\u304cj-1\u65e5\u76ee\u306ek-1\u6642\u9593\u76ee\u306b\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306e\u6700\u5927\u306e\u5229\u76ca\n\u306e\u6700\u5927\u5024\u3092\u6c42\u3081\u308b\u3053\u3068\u3068\u7b49\u3057\u3044\u3002\n\n\u3053\u308c\u3092\u66f4\u65b0\u3057\u3066\u3044\u304f\u3053\u3068\u3067\u3001\u5168\u3066\u306e\u5e97\u304c\u958b\u3044\u3066\u3044\u308b\u6642\u9593\u5e2f\u3067\u6700\u5927\u306e\u5229\u76ca\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\"\"\"\n\nN = int(input())\nF = []\nfor i in range(N):\n    F.append(list(map(int, input().split())))\nP = []\nfor i in range(N):\n    P.append(list(map(int, input().split())))\n\ndp = [[[0 for _ in range(11)] for _ in range(6)] for _ in range(N+1)]\n\nfor i in range(N):\n    for j in range(5):\n        for k in range(2):\n            if F[i][2*j+k] == 1:\n                dp[i+1][j+1][k+1] = max(\n                    dp[i][j+1][k+1],\n                    dp[i+1][j][k+1],\n                    dp[i+1][j+1][k],\n                    dp[i][j][k+1] + P[i][2*j+k],\n                    dp[i][j+1][k] + P[i][2*j+k],\n                    dp[i+1][j][k] + P[i][2*j+k],\n                    dp[i][j][k] + P[i][2*j+k]\n                )\n\nprint(max(dp[-1][-1]))"
}
2022-04-13 21:47:04.938043 REASON stop
2022-04-13 21:47:04.938454 2 {
  "finish_reason": "length",
  "index": 2,
  "logprobs": null,
  "text": "\n\n# N = int(input())\n# F = [[0]*2 for _ in range(N)]\n# for i in range(N):\n#     F[i] = [int(n) for n in input().split()]\n# P = [[0]*11 for _ in range(N)]\n# for i in range(N):\n#     P[i] = [int(n) for n in input().split()]\n\nN = 1\nF = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\nP = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n# N = 2\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n# N = 2\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n# N = 2\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n# N = 2\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 2\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2]]\n\n\n# N = 3\n# F = [[1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]]\n# P = [[3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8, 9, -2, -3, 4, -2], [3, 4, 5, 6, 7, 8,"
}
2022-04-13 21:47:04.938536 REASON length
2022-04-13 21:47:04.938542 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn=int(input())\nf=[list(map(int,input().split())) for i in range(n)]\np=list(map(int,input().split()))\nans=0\nfor i in range(2**10):\n    if bin(i).count(\"1\")<1:\n        continue\n    tmp=0\n    for j in range(n):\n        c=0\n        for k in range(10):\n            if (i>>k&1)==1 and f[j][k]==1:\n                c+=1\n        tmp+=p[c]\n    ans=max(ans,tmp)\nprint(ans)"
}
2022-04-13 21:47:04.938570 REASON stop
2022-04-13 21:47:04.958839 4 {
  "finish_reason": "length",
  "index": 4,
  "logprobs": null,
  "text": "\n\n# N = int(input())\n# F = []\n# for i in range(N):\n#     F.append([int(i) for i in input().split()])\n# P = []\n# for i in range(N):\n#     P.append([int(i) for i in input().split()])\n#\n# max_profit = 0\n# for i in range(2**10):\n#     # \u5e97\u304c\u958b\u3044\u3066\u3044\u308b\u6642\u9593\u5e2f\u3092\u5168\u63a2\u7d22\n#     # \u5168\u63a2\u7d22\u3059\u308b\u6642\u9593\u5e2f\u304ci\u306e10\u9032\u6570\u8868\u8a18\u306b\u306a\u308b\n#     # 0b1101010101 = 0x55 = 0d85 = 0o125 = 85\n#     # 0b1101010101 = 0x55 = 0d85 = 0o125 = 85\n#     # 0b1101010101 = 0x55 = 0d85 = 0o125 = 85\n#     # 0b1101010101 = 0x55 = 0d85 = 0o125 = 85\n#     # 0b1101010101 = 0x55 = 0d85 = 0o125 = 85\n#     # 0b1101010101 = 0x55 = 0d85 = 0o125 = 85\n#\n#\n#\n# print(max_profit)\n\nN = int(input())\nF = []\nfor i in range(N):\n    F.append([int(i) for i in input().split()])\nP = []\nfor i in range(N):\n    P.append([int(i) for i in input().split()])\n\nmax_profit = 0\nfor i in range(2**10):\n    # \u5e97\u304c\u958b\u3044\u3066\u3044\u308b\u6642\u9593\u5e2f\u3092\u5168\u63a2\u7d22\n    # \u5168\u63a2\u7d22\u3059\u308b\u6642\u9593\u5e2f\u304ci\u306e10\u9032\u6570\u8868\u8a18\u306b\u306a\u308b\n    # 0b1101010101 = 0x55 = 0d85 = 0o125 = 85\n    # 0b1101010101 = 0x55 = 0d85 = 0o125 = 85\n    # 0b1101010101 = 0x55 = 0d85 = 0o125 = 85\n    # 0b1101010101 = 0x55 = 0d85 = 0o125 = 85\n    # 0b1101010101 = 0x55 = 0d85 = 0o125 = 85\n    # 0b1101010101 = 0x55 = 0d85 = 0o125 = 85\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057\u305f\u6642\u9593\u5e2f\u304c\u958b\u3044\u3066\u3044\u308b\u304b\u5224\u5b9a\n    # 1 = open, 0 = close\n    # if i == 0b1101010101:\n    #     print(1)\n    # else:\n    #     print(0)\n\n    # \u5168\u63a2\u7d22\u3057"
}
2022-04-13 21:47:04.958992 REASON length
2022-04-13 21:47:04.959000 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\nimport itertools\n\nn = int(input())\nf_list = []\nfor _ in range(n):\n    f_list.append([int(x) for x in input().split()])\np_list = []\nfor _ in range(n):\n    p_list.append([int(x) for x in input().split()])\n\nmax_profit = -float(\"inf\")\nfor i in itertools.product((0,1), repeat=10):\n    if i.count(1) == 0:\n        continue\n    profit = 0\n    for j in range(n):\n        profit += p_list[j][i.count(1 & f_list[j][k]) for k in range(10)]\n    max_profit = max(max_profit, profit)\n\nprint(max_profit)"
}
2022-04-13 21:47:04.959030 REASON stop
2022-04-13 21:47:04.967565 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\n# ----Solution----\n\nN = int(input())\nF = [[int(i) for i in input().split()] for _ in range(N)]\nP = [int(i) for i in input().split()]\n\ndp = [[0]*10 for _ in range(N+1)]\n\nfor i in range(1, N+1):\n    for j in range(10):\n        for k in range(10):\n            if j & k == 0:\n                dp[i][j | k] = max(dp[i][j | k], dp[i-1][j] + P[i*10 + k])\n\nprint(max(dp[N]))"
}
2022-04-13 21:47:04.967647 REASON stop
