["\n\n\"\"\"\n\u89e3\u8aac\nhttp://kmjp.hatenablog.jp/entry/2016/12/07/0900\n\ndp[i][j][k] := i\u756a\u76ee\u306e\u5e97\u304cj\u65e5\u76ee\u306ek\u6642\u9593\u76ee\u306b\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306e,\n            \u305d\u3053\u307e\u3067\u3067\u7a3c\u3052\u308b\u6700\u5927\u306e\u5229\u76ca\n\u3068\u3057\u3066\u3001DP\u3092\u3059\u308b\u3002\n\n\u66f4\u65b0\u5f0f\u306f\ndp[i][j][k] = max( dp[i-1][j][k] + dp[i][j-1][k] + dp[i][j][k-1] - dp[i-1][j-1][k] - dp[i-1][j][k-1] - dp[i][j-1][k-1] + dp[i-1][j-1][k-1] )\n\u3068\u306a\u308b\u3002\n\n\u3053\u308c\u306f\u3001i\u756a\u76ee\u306e\u5e97\u304cj\u65e5\u76ee\u306ek\u6642\u9593\u76ee\u306b\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306b\u3001\ni-1\u756a\u76ee\u307e\u3067\u306e\u5e97\u304cj\u65e5\u76ee\u306ek\u6642\u9593\u76ee\u306b\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306e\u6700\u5927\u306e\u5229\u76ca\u3001\ni\u756a\u76ee\u307e\u3067\u306e\u5e97\u304cj-1\u65e5\u76ee\u306ek\u6642\u9593\u76ee\u306b\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306e\u6700\u5927\u306e\u5229\u76ca\u3001\ni\u756a\u76ee\u307e\u3067\u306e\u5e97\u304cj\u65e5\u76ee\u306ek-1\u6642\u9593\u76ee\u306b\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306e\u6700\u5927\u306e\u5229\u76ca\n-\ni-1\u756a\u76ee\u307e\u3067\u306e\u5e97\u304cj-1\u65e5\u76ee\u306ek\u6642\u9593\u76ee\u306b\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306e\u6700\u5927\u306e\u5229\u76ca\u3001\ni-1\u756a\u76ee\u307e\u3067\u306e\u5e97\u304cj\u65e5\u76ee\u306ek-1\u6642\u9593\u76ee\u306b\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306e\u6700\u5927\u306e\u5229\u76ca\u3001\ni\u756a\u76ee\u307e\u3067\u306e\u5e97\u304cj-1\u65e5\u76ee\u306ek-1\u6642\u9593\u76ee\u306b\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306e\u6700\u5927\u306e\u5229\u76ca\n+\ni-1\u756a\u76ee\u307e\u3067\u306e\u5e97\u304cj-1\u65e5\u76ee\u306ek-1\u6642\u9593\u76ee\u306b\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306e\u6700\u5927\u306e\u5229\u76ca\n\u306e\u6700\u5927\u5024\u3092\u6c42\u3081\u308b\u3053\u3068\u3068\u7b49\u3057\u3044\u3002\n\n\u3053\u308c\u3092\u66f4\u65b0\u3057\u3066\u3044\u304f\u3053\u3068\u3067\u3001\u5168\u3066\u306e\u5e97\u304c\u958b\u3044\u3066\u3044\u308b\u6642\u9593\u5e2f\u3067\u6700\u5927\u306e\u5229\u76ca\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\"\"\"\n\nN = int(input())\nF = []\nfor i in range(N):\n    F.append(list(map(int, input().split())))\nP = []\nfor i in range(N):\n    P.append(list(map(int, input().split())))\n\ndp = [[[0 for _ in range(11)] for _ in range(6)] for _ in range(N+1)]\n\nfor i in range(N):\n    for j in range(5):\n        for k in range(2):\n            if F[i][2*j+k] == 1:\n                dp[i+1][j+1][k+1] = max(\n                    dp[i][j+1][k+1],\n                    dp[i+1][j][k+1],\n                    dp[i+1][j+1][k],\n                    dp[i][j][k+1] + P[i][2*j+k],\n                    dp[i][j+1][k] + P[i][2*j+k],\n                    dp[i+1][j][k] + P[i][2*j+k],\n                    dp[i][j][k] + P[i][2*j+k]\n                )\n\nprint(max(dp[-1][-1]))", "\n\nn=int(input())\nf=[list(map(int,input().split())) for i in range(n)]\np=list(map(int,input().split()))\nans=0\nfor i in range(2**10):\n    if bin(i).count(\"1\")<1:\n        continue\n    tmp=0\n    for j in range(n):\n        c=0\n        for k in range(10):\n            if (i>>k&1)==1 and f[j][k]==1:\n                c+=1\n        tmp+=p[c]\n    ans=max(ans,tmp)\nprint(ans)", "\nimport itertools\n\nn = int(input())\nf_list = []\nfor _ in range(n):\n    f_list.append([int(x) for x in input().split()])\np_list = []\nfor _ in range(n):\n    p_list.append([int(x) for x in input().split()])\n\nmax_profit = -float(\"inf\")\nfor i in itertools.product((0,1), repeat=10):\n    if i.count(1) == 0:\n        continue\n    profit = 0\n    for j in range(n):\n        profit += p_list[j][i.count(1 & f_list[j][k]) for k in range(10)]\n    max_profit = max(max_profit, profit)\n\nprint(max_profit)", "\n\n# ----Solution----\n\nN = int(input())\nF = [[int(i) for i in input().split()] for _ in range(N)]\nP = [int(i) for i in input().split()]\n\ndp = [[0]*10 for _ in range(N+1)]\n\nfor i in range(1, N+1):\n    for j in range(10):\n        for k in range(10):\n            if j & k == 0:\n                dp[i][j | k] = max(dp[i][j | k], dp[i-1][j] + P[i*10 + k])\n\nprint(max(dp[N]))", "\nn = int(input())\nf = []\nfor i in range(n):\n    s = input().split()\n    s = [int(j) for j in s]\n    f.append(s)\np = []\nfor i in range(n):\n    s = input().split()\n    s = [int(j) for j in s]\n    p.append(s)\n\nans = -100000000\nfor i in range(2**10):\n    total = 0\n    for j in range(n):\n        c = 0\n        for k in range(10):\n            if ((i >> k) & 1) == 1 and f[j][k] == 1:\n                c += 1\n        total += p[j][c]\n    ans = max(ans, total)\n\nprint(ans)"]