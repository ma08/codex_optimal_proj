["\n\ndef min_songs(n, m, a, b):\n    if sum(a) <= m:\n        return 0\n    if sum(b) > m:\n        return -1\n    m = sum(a) - m\n    songs = sorted(zip(a, b), key=lambda x: x[0]-x[1], reverse=True)\n    compressed = 0\n    for song in songs:\n        if song[0]-song[1] > m:\n            compressed += 1\n            m -= song[0]-song[1]\n    return compressed\n\nn, m = map(int, input().split())\na = []\nb = []\nfor _ in range(n):\n    ai, bi = map(int, input().split())\n    a.append(ai)\n    b.append(bi)\nprint(min_songs(n, m, a, b))", "\n\ndef min_compress(a, b, m):\n    sorted_a = sorted(a)\n    sorted_b = sorted(b)\n    m_a = m_b = 0\n    for i in range(len(a)):\n        m_a += sorted_a[i]\n        m_b += sorted_b[i]\n        if m_a > m:\n            return i\n        if m_b > m:\n            return -1\n\n\nn, m = map(int, input().split())\na = []\nb = []\nfor _ in range(n):\n    temp = list(map(int, input().split()))\n    a.append(temp[0])\n    b.append(temp[1])\nprint(min_compress(a, b, m))", "\n\nn, m = map(int, input().split())\na_i = []\nb_i = []\nfor _ in range(n):\n    a, b = map(int, input().split())\n    a_i.append(a)\n    b_i.append(b)\n\n# print(a_i, b_i)\n\n# print(sorted(a_i))\n# print(sorted(b_i))\n\na_i.sort()\nb_i.sort()\n\n# print(a_i, b_i)\n\nif sum(a_i) <= m:\n    print(0)\nelif sum(b_i) > m:\n    print(-1)\nelse:\n    for i in range(n):\n        if sum(a_i[i:]) <= m:\n            print(n-i)\n            break", "\n\nn, m = map(int, input().split())\n\na = []\nb = []\nc = []\n\nfor i in range(n):\n    a_i, b_i = map(int, input().split())\n    a.append(a_i)\n    b.append(b_i)\n    c.append(a_i - b_i)\n\nc.sort(reverse=True)\n\nfor i in range(n):\n    if sum(a) - sum(c[:i]) <= m:\n        print(i)\n        break\nelse:\n    print(-1)", "\n\ndef main(n, m, songs):\n    songs.sort(key=lambda x: (x[1], x[0]))\n\n    count = 0\n    for song in songs:\n        if m - song[0] >= 0:\n            m -= song[0]\n            count += 1\n        else:\n            break\n    if m == 0:\n        return count\n    else:\n        return -1\n\nif __name__ == '__main__':\n    n,m = map(int, input().split())\n    songs = []\n    for i in range(n):\n        a,b = map(int, input().split())\n        songs.append((a,b))\n    print(main(n, m, songs))", "\n\nn, m = map(int, input().split())\na, b = [], []\nfor i in range(n):\n    ai, bi = map(int, input().split())\n    a.append(ai)\n    b.append(bi)\n\na.sort()\nb.sort()\n\nif sum(a) <= m:\n    print(0)\nelif sum(b) > m:\n    print(-1)\nelse:\n    i, j = 0, n-1\n    while i < j:\n        if sum(a[i+1:]) <= m:\n            print(i+1)\n            break\n        if sum(b[:j]) <= m:\n            print(n-j)\n            break\n        i += 1\n        j -= 1", "\n\n\ndef main():\n    n, m = map(int, input().split())\n    songs = []\n\n    for _ in range(n):\n        songs.append(list(map(int, input().split())))\n\n    songs = sorted(songs, key=lambda x: x[1])\n    count = 0\n\n    for song in songs:\n        if song[0] <= m:\n            m -= song[0]\n            count += 1\n\n    if m < 0:\n        print(-1)\n    else:\n        print(len(songs) - count)\n\n\nif __name__ == '__main__':\n    main()"]