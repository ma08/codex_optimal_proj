["\n\nn = int(input())\na = [int(x) for x in input().split()]\n\nmax_rest = 0\nrest = 0\n\nfor i in range(n):\n    if a[i] == 1:\n        rest += 1\n    else:\n        max_rest = max(rest, max_rest)\n        rest = 0\n\nmax_rest = max(rest, max_rest)\n\nprint(max_rest)", "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# The maximal rest is the longest sequence of 1's, and the length of this sequence\n# is the length of the longest sequence of 0's + 1 (because the last 1 is not\n# included in the length of the longest sequence of 0's)\n\n# The longest sequence of 0's is the maximal difference between adjacent\n# entries of the list after adding 1 to all entries\n\n# Add 1 to all entries\nfor i in range(n):\n    a[i] += 1\n\n# Create a list of differences between adjacent entries\nd = []\nfor i in range(n - 1):\n    d.append(a[i + 1] - a[i])\n\n# Find the maximum difference\nprint(max(d))", "\n\nn = int(input())\na = list(map(int, input().split()))\n\nif a[-1] == 0:\n    a.append(a[0])\n\ncnt = 0\nans = 0\nfor i in range(n):\n    if a[i] == 0:\n        cnt = 0\n    else:\n        cnt += 1\n        ans = max(ans, cnt)\n\nprint(ans)", "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    max_rest = 0\n    cur_rest = 0\n    for i in range(n):\n        if a[i] == 1:\n            cur_rest += 1\n        else:\n            cur_rest = 0\n        max_rest = max(max_rest, cur_rest)\n    print(max_rest)\n\n\nif __name__ == \"__main__\":\n    main()", "\n\nn = int(input())\na = list(map(int, input().split()))\n\nif a[0] == 0:\n    a.append(0)\nelse:\n    a.append(1)\n\nb = []\ncount = 0\nfor i in a:\n    if i == 0:\n        count += 1\n    else:\n        b.append(count)\n        count = 0\n\nprint(max(b))", "\n\nn = int(input())\nli = list(map(int, input().split()))\n\n# print(li)\n\nmax_rest = 0\nmax_rest_index = 0\n\nrest_hours = 0\nrest_start_index = 0\nfor i in range(n):\n    if li[i] == 1:\n        rest_hours += 1\n        if rest_hours > max_rest:\n            max_rest = rest_hours\n            max_rest_index = rest_start_index\n    else:\n        rest_start_index = i+1\n        rest_hours = 0\n\nif max_rest > 0:\n    print(max_rest)\nelse:\n    print(0)", "\n\n# SOLUTION\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first zero\ni = 0\nwhile a[i] != 0:\n    i += 1\n\n# Find the last zero\nj = n - 1\nwhile a[j] != 0:\n    j -= 1\n\n# Find the maximum\nprint(max(a[i:j+1].count(1), a[i+1:j+2].count(1), a[i+2:j+3].count(1)))"]