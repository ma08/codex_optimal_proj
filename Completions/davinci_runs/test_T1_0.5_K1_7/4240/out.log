2022-04-13 19:28:34.473748 """
You are given string S and T consisting of lowercase English letters.
Determine if S equals T after rotation.
That is, determine if S equals T after the following operation is performed some number of times:
Operation: Let S = S_1 S_2 ... S_{|S|}. Change S to S_{|S|} S_1 S_2 ... S_{|S|-1}.
Here, |X| denotes the length of the string X.

-----Constraints-----
 - 2 \leq |S| \leq 100
 - |S| = |T|
 - S and T consist of lowercase English letters.

-----Input-----
Input is given from Standard Input in the following format:
S
T

-----Output-----
If S equals T after rotation, print Yes; if it does not, print No.

-----Sample Input-----
kyoto
tokyo

-----Sample Output-----
Yes

 - In the first operation, kyoto becomes okyot.
 - In the second operation, okyot becomes tokyo.
"""
2022-04-13 19:28:34.473755 --------------------------
2022-04-13 19:28:50.113703 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef is_rotation(s, t):\n    if len(s) != len(t):\n        return False\n\n    return t in s + s\n\ndef main():\n    s = input()\n    t = input()\n\n    if is_rotation(s, t):\n        print('Yes')\n    else:\n        print('No')\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nS = input()\nT = input()\n\nif S == T:\n    print('Yes')\n    exit()\n\nfor i in range(1, len(S)):\n    S = S[-1] + S[:-1]\n    if S == T:\n        print('Yes')\n        exit()\n\nprint('No')"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef is_rotation(s: str, t: str) -> bool:\n    \"\"\"\n    >>> is_rotation('kyoto', 'tokyo')\n    True\n    >>> is_rotation('abcde', 'eabcd')\n    True\n    >>> is_rotation('abc', 'acb')\n    False\n    >>> is_rotation('', '')\n    True\n    >>> is_rotation('abc', '')\n    False\n    >>> is_rotation('', 'abc')\n    False\n    >>> is_rotation('abc', 'abc')\n    True\n    >>> is_rotation('abc', 'cba')\n    False\n    \"\"\"\n    if len(s) != len(t):\n        return False\n    if len(s) == 0:\n        return True\n    for i in range(len(s)):\n        if s[0] == t[i]:\n            if s == t[i:] + t[:i]:\n                return True\n    return False\n\n\nif __name__ == '__main__':\n    s = input()\n    t = input()\n    print('Yes' if is_rotation(s, t) else 'No')"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    # input\n    s = input()\n    t = input()\n\n    # process\n    if s == t:\n        print(\"Yes\")\n    else:\n        for i in range(len(s)):\n            if s == t:\n                print(\"Yes\")\n                break\n            s = s[-1] + s[:-1]\n        else:\n            print(\"No\")\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\n# -----Answer-----\n\ns = input()\nt = input()\n\nif s == t:\n    print(\"Yes\")\nelse:\n    for i in range(len(s)):\n        s = s[-1] + s[:-1]\n        if s == t:\n            print(\"Yes\")\n            break\n    else:\n        print(\"No\")"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\nimport sys\n\ns = input()\nt = input()\n\nif s == t:\n    print('Yes')\nelse:\n    for i in range(len(s)):\n        s = s[-1] + s[:-1]\n        if s == t:\n            print('Yes')\n            sys.exit()\n    print('No')"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    s = input()\n    t = input()\n    if s == t:\n        print(\"Yes\")\n    else:\n        for i in range(len(s)):\n            s = s[-1] + s[:-1]\n            if s == t:\n                print(\"Yes\")\n                break\n        else:\n            print(\"No\")\n\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1649878114,
  "id": "cmpl-4wcxGfAR2vkPZ38Bm6xX1GIAjFlxv",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 19:28:50.113964 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef is_rotation(s, t):\n    if len(s) != len(t):\n        return False\n\n    return t in s + s\n\ndef main():\n    s = input()\n    t = input()\n\n    if is_rotation(s, t):\n        print('Yes')\n    else:\n        print('No')\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 19:28:50.113998 REASON stop
2022-04-13 19:28:50.114449 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nS = input()\nT = input()\n\nif S == T:\n    print('Yes')\n    exit()\n\nfor i in range(1, len(S)):\n    S = S[-1] + S[:-1]\n    if S == T:\n        print('Yes')\n        exit()\n\nprint('No')"
}
2022-04-13 19:28:50.114560 REASON stop
2022-04-13 19:28:50.114924 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef is_rotation(s: str, t: str) -> bool:\n    \"\"\"\n    >>> is_rotation('kyoto', 'tokyo')\n    True\n    >>> is_rotation('abcde', 'eabcd')\n    True\n    >>> is_rotation('abc', 'acb')\n    False\n    >>> is_rotation('', '')\n    True\n    >>> is_rotation('abc', '')\n    False\n    >>> is_rotation('', 'abc')\n    False\n    >>> is_rotation('abc', 'abc')\n    True\n    >>> is_rotation('abc', 'cba')\n    False\n    \"\"\"\n    if len(s) != len(t):\n        return False\n    if len(s) == 0:\n        return True\n    for i in range(len(s)):\n        if s[0] == t[i]:\n            if s == t[i:] + t[:i]:\n                return True\n    return False\n\n\nif __name__ == '__main__':\n    s = input()\n    t = input()\n    print('Yes' if is_rotation(s, t) else 'No')"
}
2022-04-13 19:28:50.114973 REASON stop
2022-04-13 19:28:50.134886 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    # input\n    s = input()\n    t = input()\n\n    # process\n    if s == t:\n        print(\"Yes\")\n    else:\n        for i in range(len(s)):\n            if s == t:\n                print(\"Yes\")\n                break\n            s = s[-1] + s[:-1]\n        else:\n            print(\"No\")\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 19:28:50.134994 REASON stop
2022-04-13 19:28:50.144015 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\n# -----Answer-----\n\ns = input()\nt = input()\n\nif s == t:\n    print(\"Yes\")\nelse:\n    for i in range(len(s)):\n        s = s[-1] + s[:-1]\n        if s == t:\n            print(\"Yes\")\n            break\n    else:\n        print(\"No\")"
}
2022-04-13 19:28:50.144124 REASON stop
2022-04-13 19:28:50.144934 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\nimport sys\n\ns = input()\nt = input()\n\nif s == t:\n    print('Yes')\nelse:\n    for i in range(len(s)):\n        s = s[-1] + s[:-1]\n        if s == t:\n            print('Yes')\n            sys.exit()\n    print('No')"
}
2022-04-13 19:28:50.145008 REASON stop
2022-04-13 19:28:50.146348 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    s = input()\n    t = input()\n    if s == t:\n        print(\"Yes\")\n    else:\n        for i in range(len(s)):\n            s = s[-1] + s[:-1]\n            if s == t:\n                print(\"Yes\")\n                break\n        else:\n            print(\"No\")\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 19:28:50.146418 REASON stop
