["\n\n#SOLUTION\nn = int(input())\nc = list(map(int, input().split()))\nc.sort()\n\nif c[0] == 0:\n    print(\"impossible\")\nelse:\n    print(1 / (1 - c[0]/c[-1]))", "\ndef main():\n    n = int(input())\n    canisters = [int(x) for x in input().split()]\n    canisters.sort()\n    canisters.reverse()\n    balloons = [x for x in range(1, n+1)]\n    balloons.sort()\n    balloons.reverse()\n    if canisters[0] > balloons[0]:\n        print(\"impossible\")\n        return\n    count = 0\n    for i in range(n):\n        if canisters[i] > balloons[i]:\n            count = i\n            break\n    if count == 0:\n        print(canisters[0] / balloons[0])\n        return\n    if canisters[count] == 0:\n        print(\"impossible\")\n        return\n    print(canisters[count-1] / balloons[count-1])\n    return\n\nmain()", "\n\ndef main():\n    n = int(input())\n    c = list(map(int,input().split()))\n    c.sort()\n    if c[n-1] == 0:\n        print(\"impossible\")\n    else:\n        print(c[n-1]/n)\nmain()", "\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ncanisters = sorted(map(int, stdin.readline().split()), reverse=True)\n\ntotal_helium = sum(canisters)\n\nmax_helium = 0\nfor i in range(n):\n\tmax_helium += canisters[i]\n\tif max_helium >= i+1:\n\t\tprint(max_helium/(i+1))\n\t\tbreak\n\tif i == n-1:\n\t\tprint(\"impossible\")", "\n\ndef main():\n    n = int(input())\n    helium = [int(x) for x in input().split()]\n    helium.sort()\n    helium.reverse()\n    #print(helium)\n\n    # If there is more helium than the sum of balloons, then it is impossible\n    # (since a balloon can't be inflated to more than its capacity)\n    if sum(helium) > n*(n+1)//2:\n        print(\"impossible\")\n        return\n\n    # Otherwise, we can inflate the balloon with the most helium to its full capacity\n    # and then fill the next one with the most helium, etc.\n    # If we run out of helium before we fill all the balloons, then it is impossible\n    # (since we can't fill a balloon to more than its capacity)\n    curr_balloon = 1\n    for i in range(n):\n        if helium[i] < curr_balloon:\n            print(\"impossible\")\n            return\n        curr_balloon += 1\n\n    # Otherwise, we can fill all the balloons, so we just need to find the minimum fraction\n    # (i.e. the fraction of the balloon with the smallest capacity)\n    print(helium[-1]/n)\n\nif __name__ == \"__main__\":\n    main()", "\n\n# SOLUTION\n\nn = int(input())\nc = list(map(int, input().split()))\n\nc.sort(reverse=True)\n\ntotal = sum(c)\n\nif total < n:\n    print(\"impossible\")\nelse:\n    i = 0\n    while i < n and total >= n:\n        total -= c[i]\n        i += 1\n    print(i / n)", "\n\nimport sys\nimport math\n\nn = int(sys.stdin.readline())\nc = [int(x) for x in sys.stdin.readline().split()]\nc = sorted(c)\n\nif c[0] == 0:\n    print(\"impossible\")\nelse:\n    print(c[0] / n)"]