2022-04-13 22:39:01.499453 """
N persons are standing in a row. The height of the i-th person from the front is A_i.
We want to have each person stand on a stool of some heights - at least zero - so that the following condition is satisfied for every person:
Condition: Nobody in front of the person is taller than the person. Here, the height of a person includes the stool.
Find the minimum total height of the stools needed to meet this goal.

-----Constraints-----
 - 1 \leq N \leq 2\times 10^5
 - 1 \leq A_i \leq 10^9
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
N
A_1 \ldots A_N

-----Output-----
Print the minimum total height of the stools needed to meet the goal.

-----Sample Input-----
5
2 1 5 4 3

-----Sample Output-----
4

If the persons stand on stools of heights 0, 1, 0, 1, and 2, respectively, their heights will be 2, 2, 5, 5, and 5, satisfying the condition.
We cannot meet the goal with a smaller total height of the stools.
"""
2022-04-13 22:39:01.499460 --------------------------
2022-04-13 22:39:27.052599 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nN = int(input())\nA = [int(i) for i in input().split()]\n\n# \u30b9\u30bf\u30c3\u30af\u3092\u4f7f\u3046\n# \u73fe\u5728\u306e\u4eba\u306e\u8eab\u9577\u3088\u308a\u3082\u524d\u306b\u3044\u308b\u4eba\u306e\u8eab\u9577\u304c\u5927\u304d\u3044\u5834\u5408\u3001\u305d\u306e\u4eba\u306e\u8eab\u9577\u3092\u66f4\u65b0\u3059\u308b\n# \u30b9\u30bf\u30c3\u30af\u306e\u6700\u5f8c\u306b\u3042\u308b\u4eba\u306e\u30b9\u30bf\u30c3\u30d5\u306e\u9ad8\u3055\u3092\u6c42\u3081\u308b\n# \u30b9\u30bf\u30c3\u30af\u306e\u4e2d\u8eab\u306f\u3001\u8eab\u9577\u304c\u5c0f\u3055\u3044\u9806\u306b\u4e26\u3093\u3067\u3044\u308b\nstack = []\nfor a in A:\n    while len(stack) > 0 and stack[-1] < a:\n        stack.pop()\n    stack.append(a)\nprint(len(stack))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# A_i \u306e\u4e2d\u304b\u3089\u3001\u6700\u3082\u5927\u304d\u3044\u5024\u3092\u63a2\u3059\nmax_a = A[0]\nfor i in range(N):\n    if max_a < A[i]:\n        max_a = A[i]\n\n# A_i \u306e\u4e2d\u304b\u3089\u3001\u6700\u3082\u5c0f\u3055\u3044\u5024\u3092\u63a2\u3059\nmin_a = A[0]\nfor i in range(N):\n    if min_a > A[i]:\n        min_a = A[i]\n\n# \u5404 A_i \u306b\u3064\u3044\u3066\u3001\u6700\u3082\u5927\u304d\u3044\u5024\u3068\u6700\u3082\u5c0f\u3055\u3044\u5024\u306e\u5dee\u3092\u6c42\u3081\u308b\ndiff = [0] * N\nfor i in range(N):\n    diff[i] = max_a - A[i]\n\n# \u5404 A_i \u306b\u3064\u3044\u3066\u3001\u6700\u3082\u5c0f\u3055\u3044\u5024\u3068\u6700\u3082\u5927\u304d\u3044\u5024\u306e\u5dee\u3092\u6c42\u3081\u308b\ndiff_reversed = [0] * N\nfor i in range(N):\n    diff_reversed[i] = A[i] - min_a\n\n# \u6761\u4ef6\u3092\u6e80\u305f\u3059\u305f\u3081\u306b\u5fc5\u8981\u306a\u6700\u5c0f\u306e\u30b9\u30c4\u30fc\u30eb\u306e\u9ad8\u3055\u3092\u6c42\u3081\u308b\nans = 10 ** 9\nfor i in range(N):\n    ans = min(ans, diff[i], diff_reversed[i])\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nn = int(input())\nh = list(map(int, input().split()))\n\n# \u524d\u304b\u3089\u9806\u756a\u306b\u3001\u30b9\u30c4\u30fc\u30eb\u3092\u9ad8\u304f\u3059\u308b\u3068\u304d\u306b\u3001\u73fe\u5728\u306e\u30b9\u30c4\u30fc\u30eb\u306e\u9ad8\u3055\u3068\u6b21\u306e\u30b9\u30c4\u30fc\u30eb\u306e\u9ad8\u3055\u3092\u6bd4\u8f03\n# \u524d\u306e\u30b9\u30c4\u30fc\u30eb\u304c\u6b21\u306e\u30b9\u30c4\u30fc\u30eb\u3088\u308a\u9ad8\u3044\u3068\u304d\u306f\u3001\u30b9\u30c4\u30fc\u30eb\u3092\u9ad8\u304f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n# \u305d\u3046\u3067\u306a\u3044\u3068\u304d\u306f\u3001\u30b9\u30c4\u30fc\u30eb\u3092\u9ad8\u304f\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\n# \u305f\u3060\u3057\u3001\u30b9\u30c4\u30fc\u30eb\u306e\u9ad8\u3055\u306f0\u4ee5\u4e0a\u306b\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\n\n# \u9ad8\u3055\u30920\u306b\u3059\u308b\nheight = [0] * n\nfor i in range(1, n):\n    # \u524d\u306e\u30b9\u30c4\u30fc\u30eb\u306e\u9ad8\u3055\u3068\u81ea\u5206\u306e\u9ad8\u3055\u3092\u6bd4\u8f03\n    if height[i - 1] >= h[i]:\n        # \u524d\u306e\u30b9\u30c4\u30fc\u30eb\u306e\u9ad8\u3055\u3068\u81ea\u5206\u306e\u9ad8\u3055\u304c\u540c\u3058\u306a\u3089\u3001\u30b9\u30c4\u30fc\u30eb\u306e\u9ad8\u3055\u306f0\n        height[i] = 0\n    else:\n        # \u524d\u306e\u30b9\u30c4\u30fc\u30eb\u306e\u9ad8\u3055\u3068\u81ea\u5206\u306e\u9ad8\u3055\u304c\u9055\u3046\u306a\u3089\u3001\u30b9\u30c4\u30fc\u30eb\u306e\u9ad8\u3055\u306f\u81ea\u5206\u306e\u9ad8\u3055\u3068\u540c\u3058\u306b\u3059\u308b\n        height[i] = h[i] - height[i - 1]\n\nprint(sum(height))"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    h = [int(i) for i in input().split()]\n    dp = [0] * n\n    dp[0] = h[0]\n    for i in range(1, n):\n        if dp[i - 1] < h[i]:\n            dp[i] = h[i]\n        else:\n            dp[i] = dp[i - 1]\n    print(sum(dp))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    A = [int(x) for x in sys.stdin.readline().rstrip().split()]\n    A.sort()\n    A.append(0)\n    result = 0\n    for i in range(n):\n        result += max(0, A[i] - A[i + 1] + 1)\n    print(result)\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# \u30b9\u30bf\u30c3\u30af\u3092\u4f7f\u3046\nstool = []\nfor a in A:\n    while stool and stool[-1] >= a:\n        stool.pop()\n    stool.append(a)\nprint(len(stool))"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    stools = [0] * n\n    for i in range(n-1):\n        if a[i] <= a[i+1]:\n            continue\n        else:\n            stools[i+1] = a[i] - a[i+1] + 1\n            a[i+1] = a[i] + 1\n    print(sum(stools))\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1649889541,
  "id": "cmpl-4wfvZlSBTUyf07QAgFftr6RUyjaNr",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 22:39:27.052859 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nN = int(input())\nA = [int(i) for i in input().split()]\n\n# \u30b9\u30bf\u30c3\u30af\u3092\u4f7f\u3046\n# \u73fe\u5728\u306e\u4eba\u306e\u8eab\u9577\u3088\u308a\u3082\u524d\u306b\u3044\u308b\u4eba\u306e\u8eab\u9577\u304c\u5927\u304d\u3044\u5834\u5408\u3001\u305d\u306e\u4eba\u306e\u8eab\u9577\u3092\u66f4\u65b0\u3059\u308b\n# \u30b9\u30bf\u30c3\u30af\u306e\u6700\u5f8c\u306b\u3042\u308b\u4eba\u306e\u30b9\u30bf\u30c3\u30d5\u306e\u9ad8\u3055\u3092\u6c42\u3081\u308b\n# \u30b9\u30bf\u30c3\u30af\u306e\u4e2d\u8eab\u306f\u3001\u8eab\u9577\u304c\u5c0f\u3055\u3044\u9806\u306b\u4e26\u3093\u3067\u3044\u308b\nstack = []\nfor a in A:\n    while len(stack) > 0 and stack[-1] < a:\n        stack.pop()\n    stack.append(a)\nprint(len(stack))"
}
2022-04-13 22:39:27.052891 REASON stop
2022-04-13 22:39:27.053420 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# A_i \u306e\u4e2d\u304b\u3089\u3001\u6700\u3082\u5927\u304d\u3044\u5024\u3092\u63a2\u3059\nmax_a = A[0]\nfor i in range(N):\n    if max_a < A[i]:\n        max_a = A[i]\n\n# A_i \u306e\u4e2d\u304b\u3089\u3001\u6700\u3082\u5c0f\u3055\u3044\u5024\u3092\u63a2\u3059\nmin_a = A[0]\nfor i in range(N):\n    if min_a > A[i]:\n        min_a = A[i]\n\n# \u5404 A_i \u306b\u3064\u3044\u3066\u3001\u6700\u3082\u5927\u304d\u3044\u5024\u3068\u6700\u3082\u5c0f\u3055\u3044\u5024\u306e\u5dee\u3092\u6c42\u3081\u308b\ndiff = [0] * N\nfor i in range(N):\n    diff[i] = max_a - A[i]\n\n# \u5404 A_i \u306b\u3064\u3044\u3066\u3001\u6700\u3082\u5c0f\u3055\u3044\u5024\u3068\u6700\u3082\u5927\u304d\u3044\u5024\u306e\u5dee\u3092\u6c42\u3081\u308b\ndiff_reversed = [0] * N\nfor i in range(N):\n    diff_reversed[i] = A[i] - min_a\n\n# \u6761\u4ef6\u3092\u6e80\u305f\u3059\u305f\u3081\u306b\u5fc5\u8981\u306a\u6700\u5c0f\u306e\u30b9\u30c4\u30fc\u30eb\u306e\u9ad8\u3055\u3092\u6c42\u3081\u308b\nans = 10 ** 9\nfor i in range(N):\n    ans = min(ans, diff[i], diff_reversed[i])\n\nprint(ans)"
}
2022-04-13 22:39:27.053589 REASON stop
2022-04-13 22:39:27.053988 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nn = int(input())\nh = list(map(int, input().split()))\n\n# \u524d\u304b\u3089\u9806\u756a\u306b\u3001\u30b9\u30c4\u30fc\u30eb\u3092\u9ad8\u304f\u3059\u308b\u3068\u304d\u306b\u3001\u73fe\u5728\u306e\u30b9\u30c4\u30fc\u30eb\u306e\u9ad8\u3055\u3068\u6b21\u306e\u30b9\u30c4\u30fc\u30eb\u306e\u9ad8\u3055\u3092\u6bd4\u8f03\n# \u524d\u306e\u30b9\u30c4\u30fc\u30eb\u304c\u6b21\u306e\u30b9\u30c4\u30fc\u30eb\u3088\u308a\u9ad8\u3044\u3068\u304d\u306f\u3001\u30b9\u30c4\u30fc\u30eb\u3092\u9ad8\u304f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n# \u305d\u3046\u3067\u306a\u3044\u3068\u304d\u306f\u3001\u30b9\u30c4\u30fc\u30eb\u3092\u9ad8\u304f\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\n# \u305f\u3060\u3057\u3001\u30b9\u30c4\u30fc\u30eb\u306e\u9ad8\u3055\u306f0\u4ee5\u4e0a\u306b\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\n\n# \u9ad8\u3055\u30920\u306b\u3059\u308b\nheight = [0] * n\nfor i in range(1, n):\n    # \u524d\u306e\u30b9\u30c4\u30fc\u30eb\u306e\u9ad8\u3055\u3068\u81ea\u5206\u306e\u9ad8\u3055\u3092\u6bd4\u8f03\n    if height[i - 1] >= h[i]:\n        # \u524d\u306e\u30b9\u30c4\u30fc\u30eb\u306e\u9ad8\u3055\u3068\u81ea\u5206\u306e\u9ad8\u3055\u304c\u540c\u3058\u306a\u3089\u3001\u30b9\u30c4\u30fc\u30eb\u306e\u9ad8\u3055\u306f0\n        height[i] = 0\n    else:\n        # \u524d\u306e\u30b9\u30c4\u30fc\u30eb\u306e\u9ad8\u3055\u3068\u81ea\u5206\u306e\u9ad8\u3055\u304c\u9055\u3046\u306a\u3089\u3001\u30b9\u30c4\u30fc\u30eb\u306e\u9ad8\u3055\u306f\u81ea\u5206\u306e\u9ad8\u3055\u3068\u540c\u3058\u306b\u3059\u308b\n        height[i] = h[i] - height[i - 1]\n\nprint(sum(height))"
}
2022-04-13 22:39:27.054039 REASON stop
2022-04-13 22:39:27.070295 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    h = [int(i) for i in input().split()]\n    dp = [0] * n\n    dp[0] = h[0]\n    for i in range(1, n):\n        if dp[i - 1] < h[i]:\n            dp[i] = h[i]\n        else:\n            dp[i] = dp[i - 1]\n    print(sum(dp))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 22:39:27.070386 REASON stop
2022-04-13 22:39:27.086448 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    A = [int(x) for x in sys.stdin.readline().rstrip().split()]\n    A.sort()\n    A.append(0)\n    result = 0\n    for i in range(n):\n        result += max(0, A[i] - A[i + 1] + 1)\n    print(result)\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 22:39:27.086558 REASON stop
2022-04-13 22:39:27.087707 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# \u30b9\u30bf\u30c3\u30af\u3092\u4f7f\u3046\nstool = []\nfor a in A:\n    while stool and stool[-1] >= a:\n        stool.pop()\n    stool.append(a)\nprint(len(stool))"
}
2022-04-13 22:39:27.087791 REASON stop
2022-04-13 22:39:27.088387 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    stools = [0] * n\n    for i in range(n-1):\n        if a[i] <= a[i+1]:\n            continue\n        else:\n            stools[i+1] = a[i] - a[i+1] + 1\n            a[i+1] = a[i] + 1\n    print(sum(stools))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 22:39:27.088455 REASON stop
