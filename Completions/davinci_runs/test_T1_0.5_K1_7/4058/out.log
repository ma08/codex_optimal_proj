2022-04-13 17:51:18.790869 """
Vova's house is an array consisting of $n$ elements (yeah, this is the first problem, I think, where someone lives in the array). There are heaters in some positions of the array. The $i$-th element of the array is $1$ if there is a heater in the position $i$, otherwise the $i$-th element of the array is $0$.

Each heater has a value $r$ ($r$ is the same for all heaters). This value means that the heater at the position $pos$ can warm up all the elements in range $[pos - r + 1; pos + r - 1]$.

Vova likes to walk through his house while he thinks, and he hates cold positions of his house. Vova wants to switch some of his heaters on in such a way that each element of his house will be warmed up by at least one heater. 

Vova's target is to warm up the whole house (all the elements of the array), i.e. if $n = 6$, $r = 2$ and heaters are at positions $2$ and $5$, then Vova can warm up the whole house if he switches all the heaters in the house on (then the first $3$ elements will be warmed up by the first heater and the last $3$ elements will be warmed up by the second heater).

Initially, all the heaters are off.

But from the other hand, Vova didn't like to pay much for the electricity. So he wants to switch the minimum number of heaters on in such a way that each element of his house is warmed up by at least one heater.

Your task is to find this number of heaters or say that it is impossible to warm up the whole house.


-----Input-----

The first line of the input contains two integers $n$ and $r$ ($1 \le n, r \le 1000$) — the number of elements in the array and the value of heaters.

The second line contains $n$ integers $a_1, a_2, \dots, a_n$ ($0 \le a_i \le 1$) — the Vova's house description.


-----Output-----

Print one integer — the minimum number of heaters needed to warm up the whole house or -1 if it is impossible to do it.


-----Examples-----
Input
6 2
0 1 1 0 0 1

Output
3

Input
5 3
1 0 0 0 1

Output
2

Input
5 10
0 0 0 0 0

Output
-1

Input
10 3
0 0 1 1 0 1 0 0 0 1

Output
3



-----Note-----

In the first example the heater at the position $2$ warms up elements $[1; 3]$, the heater at the position $3$ warms up elements $[2, 4]$ and the heater at the position $6$ warms up elements $[5; 6]$ so the answer is $3$.

In the second example the heater at the position $1$ warms up elements $[1; 3]$ and the heater at the position $5$ warms up elements $[3; 5]$ so the answer is $2$.

In the third example there are no heaters so the answer is -1.

In the fourth example the heater at the position $3$ warms up elements $[1; 5]$, the heater at the position $6$ warms up elements $[4; 8]$ and the heater at the position $10$ warms up elements $[8; 10]$ so the answer is $3$.
"""
2022-04-13 17:51:18.790885 --------------------------
2022-04-13 17:53:15.513654 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    \"\"\"solution\"\"\"\n    n, r = [int(i) for i in input().split()]\n    house = [int(i) for i in input().split()]\n    heaters = []\n    for i in range(n):\n        if house[i] == 1:\n            heaters.append(i+1)\n    if len(heaters) == 0:\n        print(-1)\n        return\n    ans = 0\n    left = heaters[0]\n    right = heaters[0]\n    for i in range(1, len(heaters)):\n        if heaters[i] > right:\n            ans += 1\n            left = heaters[i]\n            right = heaters[i]\n        elif heaters[i] < left:\n            ans += 1\n            left = heaters[i]\n            right = heaters[i]\n        else:\n            right = heaters[i]\n    print(ans+1)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn, r = map(int, input().split())\na = list(map(int, input().split()))\n\n# print(n, r, a)\n\ndef count_heaters(n, r, a):\n    total = sum(a)\n    heaters_on = 0\n    heater_positions = []\n    for i in range(n):\n        if a[i] == 1:\n            heaters_on += 1\n            heater_positions.append(i)\n    # print(heaters_on, heater_positions)\n    if heaters_on == 0:\n        return -1\n    if heaters_on == 1 and heater_positions[0] == 0:\n        return -1\n    # print(total, heater_positions)\n    if total == n:\n        return heaters_on\n    if heater_positions[0] > r - 1:\n        return heaters_on + 1\n    if heater_positions[-1] < n - r:\n        return heaters_on + 1\n\n    # print(heater_positions)\n    for i in range(len(heater_positions) - 1):\n        # print(heater_positions[i], heater_positions[i+1])\n        if heater_positions[i+1] - heater_positions[i] > 2*r - 1:\n            heaters_on += 1\n    # print(heaters_on)\n    return heaters_on\n\n\nprint(count_heaters(n, r, a))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef main():\n    \"\"\"\n    Main Function\n    \"\"\"\n    n, r = map(int, input().split())\n    array = list(map(int, input().split()))\n    index = 0\n    count = 0\n    while index < n:\n        if array[index] == 1:\n            index += 2 * r - 1\n        else:\n            if index + r - 1 >= n:\n                count = -1\n                break\n            elif array[index + r - 1] == 1:\n                index += 2 * r - 1\n            else:\n                count += 1\n                index += r - 1\n    print(count)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\n# cook your dish here\nn,r=map(int,input().split())\na=list(map(int,input().split()))\n\ndef no_of_heaters(n,r,a):\n    count=0\n    for i in range(n):\n        if a[i]==1:\n            continue\n        else:\n            for j in range(i+1,min(i+r,n)):\n                if a[j]==1:\n                    a[i]=1\n                    count+=1\n                    break\n    for i in range(n-1,0,-1):\n        if a[i]==1:\n            continue\n        else:\n            for j in range(i-1,max(0,i-r),-1):\n                if a[j]==1:\n                    a[i]=1\n                    count+=1\n                    break\n    if 0 in a:\n        return -1\n    else:\n        return count\n\nprint(no_of_heaters(n,r,a))"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef heaters(n, r, a):\n    ans = 0\n    i = 0\n    while i < n:\n        if a[i] == 0:\n            j = i + 1\n            while j < n and j <= i + r - 1:\n                if a[j] == 1:\n                    ans += 1\n                    i = j + r - 1\n                    break\n                j += 1\n            if j == n:\n                return -1\n        i += 1\n    return ans\n\nn, r = map(int, input().split())\na = list(map(int, input().split()))\nprint(heaters(n, r, a))"
    },
    {
      "finish_reason": "length",
      "index": 5,
      "logprobs": null,
      "text": "\n\n# n, r = map(int, input().split())\n# a = list(map(int, input().split()))\n\ndef solve(n, r, a):\n    # \u5bf9\u4e8e\u4e00\u4e2a\u623f\u5b50\uff0c\u5982\u679c\u662f1\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\uff0c\u5982\u679c\u662f0\uff0c\u5219\u76f4\u63a5\u8df3\u8fc7\n    # \u5bf9\u4e8e\u4e00\u4e2a\u623f\u5b50\uff0c\u5982\u679c\u662f1\uff0c\u5219\u9700\u8981\u5224\u65ad\u8fd9\u4e2a\u623f\u5b50\u662f\u5426\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u7684\u8303\u56f4\u4e4b\u5185\uff0c\u5982\u679c\u5728\uff0c\u5219\u4e0d\u52a0\u5165\u96c6\u5408\uff0c\u5426\u5219\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u662f0\uff0c\u5219\u76f4\u63a5\u8df3\u8fc7\n    # \u56e0\u4e3a\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u53ef\u4ee5\u4e92\u76f8\u8986\u76d6\uff08\u5982\u679c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u6ee1\u8db3\u8986\u76d6\u6761\u4ef6\uff0c\u5219\u65e0\u9700\u518d\u52a0\u5165\uff09\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\n    # \u5bf9\u4e8e\u96c6\u5408\u4e2d\u7684\u623f\u5b50\uff0c\u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5bf9\u4e8e\u96c6\u5408\u4e2d\u7684\u623f\u5b50\uff0c\u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5bf9\u4e8e\u96c6\u5408\u4e2d\u7684\u623f\u5b50\uff0c\u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5bf9\u4e8e\u96c6\u5408\u4e2d\u7684\u623f\u5b50\uff0c\u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5bf9\u4e8e\u96c6\u5408\u4e2d\u7684\u623f\u5b50\uff0c\u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5bf9\u4e8e\u96c6\u5408\u4e2d\u7684\u623f\u5b50\uff0c\u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5bf9\u4e8e\u96c6\u5408\u4e2d\u7684\u623f\u5b50\uff0c\u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5bf9\u4e8e\u96c6\u5408\u4e2d\u7684\u623f\u5b50\uff0c\u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, r = map(int, input().split())\n    house = list(map(int, input().split()))\n    heaters = []\n    for i in range(n):\n        if house[i] == 1:\n            heaters.append(i+1)\n    total = 0\n    if len(heaters) == 0:\n        print(-1)\n        return\n    for i in range(n):\n        for j in range(len(heaters)):\n            if (heaters[j] - r + 1 <= i+1 <= heaters[j] + r - 1):\n                total += 1\n                break\n    if total == n:\n        print(len(heaters))\n    else:\n        print(-1)\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1649872278,
  "id": "cmpl-4wbR8S2uY8b00ZYSnqOYa3altJh8Z",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 17:53:15.514095 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    \"\"\"solution\"\"\"\n    n, r = [int(i) for i in input().split()]\n    house = [int(i) for i in input().split()]\n    heaters = []\n    for i in range(n):\n        if house[i] == 1:\n            heaters.append(i+1)\n    if len(heaters) == 0:\n        print(-1)\n        return\n    ans = 0\n    left = heaters[0]\n    right = heaters[0]\n    for i in range(1, len(heaters)):\n        if heaters[i] > right:\n            ans += 1\n            left = heaters[i]\n            right = heaters[i]\n        elif heaters[i] < left:\n            ans += 1\n            left = heaters[i]\n            right = heaters[i]\n        else:\n            right = heaters[i]\n    print(ans+1)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 17:53:15.514146 REASON stop
2022-04-13 17:53:15.514516 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn, r = map(int, input().split())\na = list(map(int, input().split()))\n\n# print(n, r, a)\n\ndef count_heaters(n, r, a):\n    total = sum(a)\n    heaters_on = 0\n    heater_positions = []\n    for i in range(n):\n        if a[i] == 1:\n            heaters_on += 1\n            heater_positions.append(i)\n    # print(heaters_on, heater_positions)\n    if heaters_on == 0:\n        return -1\n    if heaters_on == 1 and heater_positions[0] == 0:\n        return -1\n    # print(total, heater_positions)\n    if total == n:\n        return heaters_on\n    if heater_positions[0] > r - 1:\n        return heaters_on + 1\n    if heater_positions[-1] < n - r:\n        return heaters_on + 1\n\n    # print(heater_positions)\n    for i in range(len(heater_positions) - 1):\n        # print(heater_positions[i], heater_positions[i+1])\n        if heater_positions[i+1] - heater_positions[i] > 2*r - 1:\n            heaters_on += 1\n    # print(heaters_on)\n    return heaters_on\n\n\nprint(count_heaters(n, r, a))"
}
2022-04-13 17:53:15.514625 REASON stop
2022-04-13 17:53:15.514997 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef main():\n    \"\"\"\n    Main Function\n    \"\"\"\n    n, r = map(int, input().split())\n    array = list(map(int, input().split()))\n    index = 0\n    count = 0\n    while index < n:\n        if array[index] == 1:\n            index += 2 * r - 1\n        else:\n            if index + r - 1 >= n:\n                count = -1\n                break\n            elif array[index + r - 1] == 1:\n                index += 2 * r - 1\n            else:\n                count += 1\n                index += r - 1\n    print(count)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 17:53:15.515043 REASON stop
2022-04-13 17:53:15.530296 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\n# cook your dish here\nn,r=map(int,input().split())\na=list(map(int,input().split()))\n\ndef no_of_heaters(n,r,a):\n    count=0\n    for i in range(n):\n        if a[i]==1:\n            continue\n        else:\n            for j in range(i+1,min(i+r,n)):\n                if a[j]==1:\n                    a[i]=1\n                    count+=1\n                    break\n    for i in range(n-1,0,-1):\n        if a[i]==1:\n            continue\n        else:\n            for j in range(i-1,max(0,i-r),-1):\n                if a[j]==1:\n                    a[i]=1\n                    count+=1\n                    break\n    if 0 in a:\n        return -1\n    else:\n        return count\n\nprint(no_of_heaters(n,r,a))"
}
2022-04-13 17:53:15.530399 REASON stop
2022-04-13 17:53:15.531031 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef heaters(n, r, a):\n    ans = 0\n    i = 0\n    while i < n:\n        if a[i] == 0:\n            j = i + 1\n            while j < n and j <= i + r - 1:\n                if a[j] == 1:\n                    ans += 1\n                    i = j + r - 1\n                    break\n                j += 1\n            if j == n:\n                return -1\n        i += 1\n    return ans\n\nn, r = map(int, input().split())\na = list(map(int, input().split()))\nprint(heaters(n, r, a))"
}
2022-04-13 17:53:15.531108 REASON stop
2022-04-13 17:53:15.554782 5 {
  "finish_reason": "length",
  "index": 5,
  "logprobs": null,
  "text": "\n\n# n, r = map(int, input().split())\n# a = list(map(int, input().split()))\n\ndef solve(n, r, a):\n    # \u5bf9\u4e8e\u4e00\u4e2a\u623f\u5b50\uff0c\u5982\u679c\u662f1\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\uff0c\u5982\u679c\u662f0\uff0c\u5219\u76f4\u63a5\u8df3\u8fc7\n    # \u5bf9\u4e8e\u4e00\u4e2a\u623f\u5b50\uff0c\u5982\u679c\u662f1\uff0c\u5219\u9700\u8981\u5224\u65ad\u8fd9\u4e2a\u623f\u5b50\u662f\u5426\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u7684\u8303\u56f4\u4e4b\u5185\uff0c\u5982\u679c\u5728\uff0c\u5219\u4e0d\u52a0\u5165\u96c6\u5408\uff0c\u5426\u5219\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u662f0\uff0c\u5219\u76f4\u63a5\u8df3\u8fc7\n    # \u56e0\u4e3a\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u53ef\u4ee5\u4e92\u76f8\u8986\u76d6\uff08\u5982\u679c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u6ee1\u8db3\u8986\u76d6\u6761\u4ef6\uff0c\u5219\u65e0\u9700\u518d\u52a0\u5165\uff09\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\n    # \u5bf9\u4e8e\u96c6\u5408\u4e2d\u7684\u623f\u5b50\uff0c\u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5bf9\u4e8e\u96c6\u5408\u4e2d\u7684\u623f\u5b50\uff0c\u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5bf9\u4e8e\u96c6\u5408\u4e2d\u7684\u623f\u5b50\uff0c\u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5bf9\u4e8e\u96c6\u5408\u4e2d\u7684\u623f\u5b50\uff0c\u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5bf9\u4e8e\u96c6\u5408\u4e2d\u7684\u623f\u5b50\uff0c\u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5bf9\u4e8e\u96c6\u5408\u4e2d\u7684\u623f\u5b50\uff0c\u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5bf9\u4e8e\u96c6\u5408\u4e2d\u7684\u623f\u5b50\uff0c\u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u5224\u65ad\u662f\u5426\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u5728r\u8303\u56f4\u5185\uff0c\u5219\u65e0\u9700\u52a0\u5165\u96c6\u5408\n    # \u5982\u679c\u548c\u96c6\u5408\u4e2d\u7684\u623f\u5b50\u4e0d\u5728r\u8303\u56f4\u5185\uff0c\u5219\u9700\u8981\u52a0\u5165\u5230\u96c6\u5408\u4e2d\n    # \u5bf9\u4e8e\u96c6\u5408\u4e2d\u7684\u623f\u5b50\uff0c\u5982\u679c\u548c\u4e0b\u4e00\u4e2a\u623f\u5b50\u4e0d"
}
2022-04-13 17:53:15.554938 REASON length
2022-04-13 17:53:15.554954 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, r = map(int, input().split())\n    house = list(map(int, input().split()))\n    heaters = []\n    for i in range(n):\n        if house[i] == 1:\n            heaters.append(i+1)\n    total = 0\n    if len(heaters) == 0:\n        print(-1)\n        return\n    for i in range(n):\n        for j in range(len(heaters)):\n            if (heaters[j] - r + 1 <= i+1 <= heaters[j] + r - 1):\n                total += 1\n                break\n    if total == n:\n        print(len(heaters))\n    else:\n        print(-1)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 17:53:15.554991 REASON stop
