["# Enter your code here. Read input from STDIN. Print output to \n\n\nimport math\n\nclass ComplexNumber(object): \n    def __init__(self, real, compl): \n        self.real = real \n        self.compl = compl\n        pass\n    def __str__(self):\n        if (self.compl >= 0):\n            return '{0:.2f}'.format(self.real) +'+'+ '{0:.2f}'.format(self.compl) +'i' \n        return '{0:.2f}'.format(self.real) +'-'+ '{0:.2f}'.format(abs(self.compl)) +'i' \n    def __add__(x, y):\n        return ComplexNumber(x.real+y.real, x.compl+y.compl)\n    def __sub__(x, y):\n        return ComplexNumber(x.real-y.real, x.compl-y.compl)\n    def __mul__(x, y):\n        return ComplexNumber(x.real*y.real - x.compl*y.compl, x.compl*y.real + x.real*y.compl)\n    def __truediv__(x, y):\n        return ComplexNumber((x.real*y.real + x.compl*y.compl) / (y.real*y.real + y.compl*y.compl), \n                             (x.compl*y.real - x.real*y.compl) / (y.real*y.real + y.compl*y.compl))\n    def mod(self):\n        return ComplexNumber(math.sqrt(self.real*self.real + self.compl*self.compl), 0)\n    \nhelp = list(map(float, input().split(' ')))   \nx = ComplexNumber(help[0], help[1])    \nhelp = list(map(float, input().split(' ')))   \ny = ComplexNumber(help[0], help[1])    \n\nprint(x+y)\nprint(x-y)\nprint(x*y)\nprint(x/y)\nprint(x.mod())\nprint(y.mod())", "import numbers\n\nr1, i1 = map(float, input().split())\nr2, i2 = map(float, input().split())\nc1 = complex(r1, i1)\nc2 = complex(r2, i2)\n\ndef printer(c):\n    real = c.real\n    imag = c.imag\n\n    sign = '+' if imag >= 0 else '-'\n    print('{:.2f}{}{:.2f}i'.format(real, sign, abs(imag)))\n\ndef mod(c):\n    return (c.real * c.real + c.imag * c.imag) ** 0.5\n\nprinter(c1 + c2)\nprinter(c1 - c2)\nprinter(c1 * c2)\nprinter(c1 / c2)\nprint('{:.2f}+0.00i'.format(mod(c1)))\nprint('{:.2f}+0.00i'.format(mod(c2)))"]