["\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nmin_a = min(a)\nmax_a = max(a)\n\nif min_a == max_a:\n    print(0)\n    exit()\n\nif k == 1:\n    print(1)\n    exit()\n\nmin_a_count = a.count(min_a)\nmax_a_count = a.count(max_a)\n\nif min_a_count >= k:\n    print(max_a - min_a)\n    exit()\n\nif max_a_count >= k:\n    print(max_a - min_a)\n    exit()\n\nif min_a_count + max_a_count < k:\n    print(-1)\n    exit()\n\nif min_a_count + max_a_count == k:\n    print(max_a - min_a)\n    exit()\n\nif min_a_count + max_a_count > k:\n    print(max_a - min_a + 1)\n    exit()", "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n\n    moves = 0\n    while True:\n        mn = min(a)\n        mx = max(a)\n\n        if mn == mx:\n            if a.count(mn) >= k:\n                break\n            else:\n                moves = -1\n                break\n\n        if a.count(mn) >= k:\n            moves += mx - mn\n            break\n\n        a[a.index(mx)] -= 1\n        a[a.index(mn)] += 1\n        moves += 1\n\n    print(moves)\n\nif __name__ == '__main__':\n    main()", "\n\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n\n    # The number of moves required is the number of elements that are not equal to the minimum value\n    # and the number of elements that are not equal to the maximum value.\n    #\n    # The minimum and maximum values of the array are the same iff the array contains all the same\n    # elements.\n    #\n    # Thus the number of moves required is the number of elements that are not equal to the minimum\n    # value and the number of elements that are not equal to the maximum value.\n    mn = min(a)\n    mx = max(a)\n\n    ans = 0\n    for i in range(n):\n        if a[i] != mn and a[i] != mx:\n            ans += 1\n\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()", "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# n, k = 6, 5\n# a = [1, 2, 2, 4, 2, 3]\n\n# n, k = 7, 5\n# a = [3, 3, 2, 1, 1, 1, 3]\n\n# n, k = 7, 3\n# a = [3, 3, 2, 1, 1, 1, 3]\n\n# n, k = 7, 4\n# a = [3, 3, 2, 1, 1, 1, 3]\n\n# n, k = 7, 6\n# a = [3, 3, 2, 1, 1, 1, 3]\n\n# n, k = 7, 7\n# a = [3, 3, 2, 1, 1, 1, 3]\n\n# n, k = 7, 1\n# a = [3, 3, 2, 1, 1, 1, 3]\n\n# n, k = 7, 2\n# a = [3, 3, 2, 1, 1, 1, 3]\n\n# print(n, k)\n# print(a)\n\n# print(set(a))\n# print(len(set(a)))\n\nif len(set(a)) == 1:\n    print(0)\nelif len(set(a)) == n:\n    print(max(a) - min(a))\nelse:\n    # print(n, k)\n    # print(a)\n\n    a.sort()\n    # print(a)\n\n    # print(a[-1] - a[0])\n    # print(a[k-1] - a[0])\n    # print(a[-1] - a[k-1])\n\n    print(min(a[-1] - a[0], a[k-1] - a[0], a[-1] - a[k-1]))", "\n\n# SOLUTION\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nif k == 1:\n    print(0)\n    exit()\n\nmin_moves = float('inf')\n\nfor i in range(n - k + 1):\n    min_moves = min(min_moves, a[i + k - 1] - a[i])\n\nprint(min_moves)", "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nmin_a = min(a)\nmax_a = max(a)\n\nif min_a == max_a:\n    print(0)\nelse:\n    if k <= n//2:\n        print(min_a*k - sum(a[:k]))\n    else:\n        print(sum(a[n-k+1:]) - max_a*k)", "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nmin_a = min(a)\nmax_a = max(a)\n\nif min_a == max_a:\n    print(0)\nelse:\n    moves = 0\n    if k == n:\n        moves = max_a - min_a\n    else:\n        while len(set(a)) > 1:\n            if moves % 2 == 0:\n                for i in range(len(a)):\n                    if a[i] == min_a:\n                        a[i] += 1\n                        moves += 1\n                        break\n            else:\n                for i in range(len(a)):\n                    if a[i] == max_a:\n                        a[i] -= 1\n                        moves += 1\n                        break\n    print(moves)"]