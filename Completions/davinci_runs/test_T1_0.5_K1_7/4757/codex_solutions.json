["\n\nN = int(input())\nE = int(input())\n\nvillagers = set()\nvillagers.add(1)\n\nfor i in range(E):\n    K = int(input())\n    for j in range(K):\n        villagers.add(int(input()))\n\nprint(\"\\n\".join(str(x) for x in sorted(villagers)))", "\n\nimport sys\n\ndef main():\n    lines = sys.stdin.readlines()\n    N = int(lines[0])\n    E = int(lines[1])\n    songs = [[] for _ in range(E)]\n    for i in range(E):\n        songs[i] = [int(s) for s in lines[i+2].split()[1:]]\n    knows_all = [True for _ in range(N)]\n    for i in range(E):\n        for j in range(N):\n            if j not in songs[i]:\n                knows_all[j] = False\n    for i in range(N):\n        if knows_all[i]:\n            print(i+1)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    e = int(sys.stdin.readline())\n    villagers = set()\n    for i in range(e):\n        line = sys.stdin.readline()\n        k = int(line.split()[0])\n        for j in range(k):\n            villagers.add(int(line.split()[j + 1]))\n    for i in range(1, n + 1):\n        print(i)\n\nmain()", "\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    N = int(input())\n    E = int(input())\n    songs = set()\n    for _ in range(E):\n        K = int(input())\n        v = set(map(int, input().split()))\n        if 1 in v:\n            songs.update(v)\n        else:\n            songs.intersection_update(v)\n    print(\"\\n\".join(map(str, sorted(songs))))\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\ndef main():\n    # Get input\n    N = int(sys.stdin.readline())\n    E = int(sys.stdin.readline())\n    bard = 1\n    all_songs = set()\n    all_villagers = set(range(1, N+1))\n    for i in range(E):\n        villagers = set(map(int, sys.stdin.readline().split()))\n        villagers.discard(0)\n        if bard in villagers:\n            all_songs |= villagers\n        else:\n            all_songs |= all_villagers\n    # Output\n    for villager in sorted(all_songs):\n        print(villager)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    N = int(input())\n    E = int(input())\n    songs = set()\n    for i in range(E):\n        line = input().split()\n        if int(line[0]) == 1:\n            songs.add(int(line[1]))\n        else:\n            for i in range(1, len(line)):\n                if int(line[i]) in songs:\n                    songs.remove(int(line[i]))\n    songs = list(songs)\n    songs.sort()\n    print(*songs, sep='\\n')\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    \"\"\" main \"\"\"\n    num_villagers = int(input())\n    num_evenings = int(input())\n    villagers = [0]*num_villagers\n    for _ in range(num_evenings):\n        villagers_present = [int(x) for x in input().split()]\n        for villager in villagers_present[1:]:\n            villagers[villager-1] += 1\n    for i in range(num_villagers):\n        if villagers[i] == num_evenings:\n            print(i+1)\n\nif __name__ == \"__main__\":\n    main()"]