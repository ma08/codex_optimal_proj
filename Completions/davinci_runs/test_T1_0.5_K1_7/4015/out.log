2022-04-13 17:23:45.701078 """
Polycarp plays "Game 23". Initially he has a number $n$ and his goal is to transform it to $m$. In one move, he can multiply $n$ by $2$ or multiply $n$ by $3$. He can perform any number of moves.

Print the number of moves needed to transform $n$ to $m$. Print -1 if it is impossible to do so.

It is easy to prove that any way to transform $n$ to $m$ contains the same number of moves (i.e. number of moves doesn't depend on the way of transformation).


-----Input-----

The only line of the input contains two integers $n$ and $m$ ($1 \le n \le m \le 5\cdot10^8$).


-----Output-----

Print the number of moves to transform $n$ to $m$, or -1 if there is no solution.


-----Examples-----
Input
120 51840

Output
7

Input
42 42

Output
0

Input
48 72

Output
-1



-----Note-----

In the first example, the possible sequence of moves is: $120 \rightarrow 240 \rightarrow 720 \rightarrow 1440 \rightarrow 4320 \rightarrow 12960 \rightarrow 25920 \rightarrow 51840.$ The are $7$ steps in total.

In the second example, no moves are needed. Thus, the answer is $0$.

In the third example, it is impossible to transform $48$ to $72$.
"""
2022-04-13 17:23:45.701085 --------------------------
2022-04-13 17:24:03.001419 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = [int(i) for i in sys.stdin.readline().strip().split()]\n    if n == m:\n        print(0)\n        return\n\n    count = 0\n    while n < m:\n        if m % 2 == 0:\n            m = m / 2\n        elif m % 3 == 0:\n            m = m / 3\n        else:\n            print(-1)\n            return\n        count += 1\n    if n == m:\n        print(count)\n    else:\n        print(-1)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    if n == m:\n        print(0)\n        return\n    if n > m:\n        print(-1)\n        return\n    if n == 1:\n        print(-1)\n        return\n\n    if n == 2:\n        if m % 2 == 0:\n            print(m//2 - 1)\n        else:\n            print(-1)\n        return\n\n    if n == 3:\n        if m % 3 == 0:\n            print(m//3 - 1)\n        else:\n            print(-1)\n        return\n\n    if m % 2 == 0:\n        print(min(m//2 - 1, m//3 - 1) + 1)\n    else:\n        print(-1)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    n, m = [int(i) for i in input().split()]\n    if n == m:\n        print(0)\n        return\n\n    steps = 0\n    while n < m:\n        if m % 2 == 1 and m % 3 == 1:\n            print(-1)\n            return\n\n        if m % 3 == 0:\n            m = m // 3\n            steps += 1\n        else:\n            m = m // 2\n            steps += 1\n\n    print(steps)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n\n    if n == m:\n        print(0)\n        return\n\n    if n > m:\n        print(-1)\n        return\n\n    if m % 2 == 1 or m % 3 == 1:\n        print(-1)\n        return\n\n    count = 0\n    while m > n:\n        if m % 2 == 0:\n            m //= 2\n        else:\n            m //= 3\n        count += 1\n\n    if m == n:\n        print(count)\n    else:\n        print(-1)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif n == 0 or m % n != 0:\n    print(-1)\nelse:\n    c = 0\n\n    while n < m:\n        if n * 2 <= m:\n            n *= 2\n        elif n * 3 <= m:\n            n *= 3\n        else:\n            print(-1)\n            break\n        c += 1\n\n    if n == m:\n        print(c)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    if n == m:\n        print(0)\n        return\n    if n > m:\n        print(-1)\n        return\n    print(solve(n, m))\n\ndef solve(n, m):\n    steps = 0\n    while n < m:\n        if m % 2 == 0:\n            m //= 2\n        elif m % 3 == 0:\n            m //= 3\n        else:\n            return -1\n        steps += 1\n    return steps\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    n,m = map(int,input().split())\n    if n == m:\n        print(0)\n    else:\n        if m%n!=0:\n            print(-1)\n        else:\n            ans = 0\n            while m!=n:\n                if m%6==0:\n                    m//=6\n                elif m%3==0:\n                    m//=3\n                else:\n                    print(-1)\n                    return\n                ans+=1\n            print(ans)\n\nif __name__ == \"__main__\":\n    main()"
    }
  ],
  "created": 1649870625,
  "id": "cmpl-4wb0TxrQvYoyEFeXYQnt3kqmU4jl6",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 17:24:03.001748 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, m = [int(i) for i in sys.stdin.readline().strip().split()]\n    if n == m:\n        print(0)\n        return\n\n    count = 0\n    while n < m:\n        if m % 2 == 0:\n            m = m / 2\n        elif m % 3 == 0:\n            m = m / 3\n        else:\n            print(-1)\n            return\n        count += 1\n    if n == m:\n        print(count)\n    else:\n        print(-1)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 17:24:03.001800 REASON stop
2022-04-13 17:24:03.002328 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    if n == m:\n        print(0)\n        return\n    if n > m:\n        print(-1)\n        return\n    if n == 1:\n        print(-1)\n        return\n\n    if n == 2:\n        if m % 2 == 0:\n            print(m//2 - 1)\n        else:\n            print(-1)\n        return\n\n    if n == 3:\n        if m % 3 == 0:\n            print(m//3 - 1)\n        else:\n            print(-1)\n        return\n\n    if m % 2 == 0:\n        print(min(m//2 - 1, m//3 - 1) + 1)\n    else:\n        print(-1)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 17:24:03.002510 REASON stop
2022-04-13 17:24:03.003077 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    n, m = [int(i) for i in input().split()]\n    if n == m:\n        print(0)\n        return\n\n    steps = 0\n    while n < m:\n        if m % 2 == 1 and m % 3 == 1:\n            print(-1)\n            return\n\n        if m % 3 == 0:\n            m = m // 3\n            steps += 1\n        else:\n            m = m // 2\n            steps += 1\n\n    print(steps)\n\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 17:24:03.003150 REASON stop
2022-04-13 17:24:03.021469 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, m = map(int, input().split())\n\n    if n == m:\n        print(0)\n        return\n\n    if n > m:\n        print(-1)\n        return\n\n    if m % 2 == 1 or m % 3 == 1:\n        print(-1)\n        return\n\n    count = 0\n    while m > n:\n        if m % 2 == 0:\n            m //= 2\n        else:\n            m //= 3\n        count += 1\n\n    if m == n:\n        print(count)\n    else:\n        print(-1)\n\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 17:24:03.021588 REASON stop
2022-04-13 17:24:03.030133 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif n == 0 or m % n != 0:\n    print(-1)\nelse:\n    c = 0\n\n    while n < m:\n        if n * 2 <= m:\n            n *= 2\n        elif n * 3 <= m:\n            n *= 3\n        else:\n            print(-1)\n            break\n        c += 1\n\n    if n == m:\n        print(c)"
}
2022-04-13 17:24:03.030299 REASON stop
2022-04-13 17:24:03.031454 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    if n == m:\n        print(0)\n        return\n    if n > m:\n        print(-1)\n        return\n    print(solve(n, m))\n\ndef solve(n, m):\n    steps = 0\n    while n < m:\n        if m % 2 == 0:\n            m //= 2\n        elif m % 3 == 0:\n            m //= 3\n        else:\n            return -1\n        steps += 1\n    return steps\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 17:24:03.031545 REASON stop
2022-04-13 17:24:03.032693 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    n,m = map(int,input().split())\n    if n == m:\n        print(0)\n    else:\n        if m%n!=0:\n            print(-1)\n        else:\n            ans = 0\n            while m!=n:\n                if m%6==0:\n                    m//=6\n                elif m%3==0:\n                    m//=3\n                else:\n                    print(-1)\n                    return\n                ans+=1\n            print(ans)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 17:24:03.032781 REASON stop
