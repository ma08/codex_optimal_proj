2022-04-13 21:58:56.064122 """
We have N cards. A number a_i is written on the i-th card.

Alice and Bob will play a game using these cards. In this game, Alice and Bob alternately take one card. Alice goes first.

The game ends when all the cards are taken by the two players, and the score of each player is the sum of the numbers written on the cards he/she has taken. When both players take the optimal strategy to maximize their scores, find Alice's score minus Bob's score.

-----Constraints-----
 - N is an integer between 1 and 100 (inclusive).
 - a_i \ (1 \leq i \leq N) is an integer between 1 and 100 (inclusive).

-----Input-----
Input is given from Standard Input in the following format:  
N
a_1 a_2 a_3 ... a_N

-----Output-----
Print Alice's score minus Bob's score when both players take the optimal strategy to maximize their scores.

-----Sample Input-----
2
3 1

-----Sample Output-----
2

First, Alice will take the card with 3. Then, Bob will take the card with 1.
The difference of their scores will be 3 - 1 = 2.
"""
2022-04-13 21:58:56.064130 --------------------------
2022-04-13 21:59:12.297239 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int,input().split()))\n    a.sort()\n    a.reverse()\n    alice = 0\n    bob = 0\n    for i in range(n):\n        if i % 2 == 0:\n            alice += a[i]\n        else:\n            bob += a[i]\n    print(alice - bob)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nN = int(input())\na = list(map(int, input().split()))\n\na.sort(reverse=True)\n\nans = 0\nfor i in range(N):\n    if i % 2 == 0:\n        ans += a[i]\n    else:\n        ans -= a[i]\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef scoreDiff(cards):\n    cards.sort()\n    alice = 0\n    bob = 0\n    for i in range(len(cards)):\n        if i % 2 == 0:\n            alice += cards.pop()\n        else:\n            bob += cards.pop()\n    return alice - bob\n\nnumCards = int(input())\ncards = [int(i) for i in input().split()]\nprint(scoreDiff(cards))"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort(reverse=True)\n\nalice = sum(a[::2])\nbob = sum(a[1::2])\n\nprint(alice - bob)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nN = int(input())\ncards = [int(i) for i in input().split()]\n\ncards = sorted(cards, reverse = True)\n\nAlice = sum(cards[0::2])\nBob = sum(cards[1::2])\n\nprint(Alice - Bob)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\nalice = 0\nbob = 0\nfor i in range(n):\n    if i % 2 == 0:\n        alice += a[i]\n    else:\n        bob += a[i]\nprint(alice - bob)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\n\"\"\"\n-----Solution-----\n\nThe best strategy for Alice is to take the card with the maximum number, and for Bob to take the card with the maximum number of the remaining cards.\n\nThe best strategy for Bob is to take the card with the maximum number, and for Alice to take the card with the maximum number of the remaining cards.\n\nTherefore, the difference of their scores will be the maximum number of the cards minus the maximum number of the remaining cards.\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nprint(a[-1] - a[-2])"
    }
  ],
  "created": 1649887136,
  "id": "cmpl-4wfImihTSqNiDnxvtGHxckCBuH8Py",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 21:59:12.297547 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int,input().split()))\n    a.sort()\n    a.reverse()\n    alice = 0\n    bob = 0\n    for i in range(n):\n        if i % 2 == 0:\n            alice += a[i]\n        else:\n            bob += a[i]\n    print(alice - bob)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 21:59:12.297585 REASON stop
2022-04-13 21:59:12.298033 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nN = int(input())\na = list(map(int, input().split()))\n\na.sort(reverse=True)\n\nans = 0\nfor i in range(N):\n    if i % 2 == 0:\n        ans += a[i]\n    else:\n        ans -= a[i]\n\nprint(ans)"
}
2022-04-13 21:59:12.298141 REASON stop
2022-04-13 21:59:12.298520 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef scoreDiff(cards):\n    cards.sort()\n    alice = 0\n    bob = 0\n    for i in range(len(cards)):\n        if i % 2 == 0:\n            alice += cards.pop()\n        else:\n            bob += cards.pop()\n    return alice - bob\n\nnumCards = int(input())\ncards = [int(i) for i in input().split()]\nprint(scoreDiff(cards))"
}
2022-04-13 21:59:12.298564 REASON stop
2022-04-13 21:59:12.299613 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort(reverse=True)\n\nalice = sum(a[::2])\nbob = sum(a[1::2])\n\nprint(alice - bob)"
}
2022-04-13 21:59:12.299660 REASON stop
2022-04-13 21:59:12.311116 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nN = int(input())\ncards = [int(i) for i in input().split()]\n\ncards = sorted(cards, reverse = True)\n\nAlice = sum(cards[0::2])\nBob = sum(cards[1::2])\n\nprint(Alice - Bob)"
}
2022-04-13 21:59:12.311209 REASON stop
2022-04-13 21:59:12.312032 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\nalice = 0\nbob = 0\nfor i in range(n):\n    if i % 2 == 0:\n        alice += a[i]\n    else:\n        bob += a[i]\nprint(alice - bob)"
}
2022-04-13 21:59:12.312099 REASON stop
2022-04-13 21:59:12.331420 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\n\"\"\"\n-----Solution-----\n\nThe best strategy for Alice is to take the card with the maximum number, and for Bob to take the card with the maximum number of the remaining cards.\n\nThe best strategy for Bob is to take the card with the maximum number, and for Alice to take the card with the maximum number of the remaining cards.\n\nTherefore, the difference of their scores will be the maximum number of the cards minus the maximum number of the remaining cards.\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nprint(a[-1] - a[-2])"
}
2022-04-13 21:59:12.331516 REASON stop
