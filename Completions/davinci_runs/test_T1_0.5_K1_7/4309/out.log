2022-04-13 19:55:31.046039 """
Kurohashi has never participated in AtCoder Beginner Contest (ABC).
The next ABC to be held is ABC N (the N-th ABC ever held).
Kurohashi wants to make his debut in some ABC x such that all the digits of x in base ten are the same.
What is the earliest ABC where Kurohashi can make his debut?

-----Constraints-----
 - 100 \leq N \leq 999
 - N is an integer.

-----Input-----
Input is given from Standard Input in the following format:
N

-----Output-----
If the earliest ABC where Kurohashi can make his debut is ABC n, print n.

-----Sample Input-----
111

-----Sample Output-----
111

The next ABC to be held is ABC 111, where Kurohashi can make his debut.
"""
2022-04-13 19:55:31.046046 --------------------------
2022-04-13 19:55:44.450374 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn = int(input())\n\nfor i in range(n, 1000):\n    if len(set(str(i))) == 1:\n        print(i)\n        break"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\nN = int(sys.stdin.readline())\n\nfor i in range(N, 1000):\n    if len(set(str(i))) == 1:\n        print(i)\n        exit()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef main():\n    N = int(input())\n    while True:\n        if len(set(str(N))) == 1:\n            break\n        N += 1\n    print(N)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn = int(input())\ni = 1\nwhile True:\n    if len(set(list(str(i)))) == 1:\n        print(i)\n        break\n    i += 1"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nn = int(input())\n\nfor i in range(n, 1000):\n    if len(set(str(i))) == 1:\n        print(i)\n        break"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nfrom collections import Counter\n\nn = int(input())\n\nfor i in range(n+1, 1000):\n    if len(Counter(str(i)).keys()) == 1:\n        print(i)\n        break"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\n# --- code in here ---\nn = int(input())\n\n# n\u304c100\u3067\u306f\u306a\u3044\u5834\u5408\u306f\u3001\u6841\u6570\u3092\u78ba\u8a8d\u3057\u3066100\u3092\u8db3\u3059\nif n != 100:\n    digit = len(str(n))\n    if digit == 2:\n        n += 10\n    else:\n        n += 1\n\n# n\u304c100\u306e\u5834\u5408\u306f\u3001n\u3092100~999\u307e\u3067\u78ba\u8a8d\u3057\u3066\u3001\u5168\u3066\u540c\u3058\u6570\u5b57\u3067\u3042\u308b\u3082\u306e\u3092\u51fa\u529b\nelse:\n    for i in range(100, 1000):\n        if len(set(str(i))) == 1:\n            print(i)\n            break"
    }
  ],
  "created": 1649879731,
  "id": "cmpl-4wdNLOqBuDNxLHOQNafajBEJgNycI",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 19:55:44.450640 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn = int(input())\n\nfor i in range(n, 1000):\n    if len(set(str(i))) == 1:\n        print(i)\n        break"
}
2022-04-13 19:55:44.450680 REASON stop
2022-04-13 19:55:44.452691 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\nN = int(sys.stdin.readline())\n\nfor i in range(N, 1000):\n    if len(set(str(i))) == 1:\n        print(i)\n        exit()"
}
2022-04-13 19:55:44.452828 REASON stop
2022-04-13 19:55:44.453230 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef main():\n    N = int(input())\n    while True:\n        if len(set(str(N))) == 1:\n            break\n        N += 1\n    print(N)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 19:55:44.453291 REASON stop
2022-04-13 19:55:44.466447 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn = int(input())\ni = 1\nwhile True:\n    if len(set(list(str(i)))) == 1:\n        print(i)\n        break\n    i += 1"
}
2022-04-13 19:55:44.466539 REASON stop
2022-04-13 19:55:44.467362 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nn = int(input())\n\nfor i in range(n, 1000):\n    if len(set(str(i))) == 1:\n        print(i)\n        break"
}
2022-04-13 19:55:44.467434 REASON stop
2022-04-13 19:55:44.478051 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nfrom collections import Counter\n\nn = int(input())\n\nfor i in range(n+1, 1000):\n    if len(Counter(str(i)).keys()) == 1:\n        print(i)\n        break"
}
2022-04-13 19:55:44.478135 REASON stop
2022-04-13 19:55:44.479014 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\n# --- code in here ---\nn = int(input())\n\n# n\u304c100\u3067\u306f\u306a\u3044\u5834\u5408\u306f\u3001\u6841\u6570\u3092\u78ba\u8a8d\u3057\u3066100\u3092\u8db3\u3059\nif n != 100:\n    digit = len(str(n))\n    if digit == 2:\n        n += 10\n    else:\n        n += 1\n\n# n\u304c100\u306e\u5834\u5408\u306f\u3001n\u3092100~999\u307e\u3067\u78ba\u8a8d\u3057\u3066\u3001\u5168\u3066\u540c\u3058\u6570\u5b57\u3067\u3042\u308b\u3082\u306e\u3092\u51fa\u529b\nelse:\n    for i in range(100, 1000):\n        if len(set(str(i))) == 1:\n            print(i)\n            break"
}
2022-04-13 19:55:44.479079 REASON stop
