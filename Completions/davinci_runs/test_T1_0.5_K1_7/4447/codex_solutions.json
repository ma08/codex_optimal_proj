["\n\nfrom math import gcd\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = [0]*m\n    for i in a:\n        b[i%m] += 1\n    min_moves = 0\n    for i in range(1, m):\n        min_moves += abs(b[i] - b[0])\n    print(min_moves//2)\n    for i in range(n):\n        if b[a[i]%m] > b[0]:\n            a[i] += gcd(m, a[i]%m)\n            b[a[i]%m] -= 1\n            b[0] += 1\n        elif b[a[i]%m] < b[0]:\n            a[i] -= gcd(m, a[i]%m)\n            b[a[i]%m] += 1\n            b[0] -= 1\n    print(*a)\n\nif __name__ == '__main__':\n    main()", "\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\nremainders = [0] * m\n\nfor i in range(n):\n    remainders[i % m] += a[i]\n\nminRemainder = min(remainders)\n\nprint(sum(remainders) - n * minRemainder)\nprint(minRemainder, end=' ')\n\nfor i in range(1, m):\n    print(remainders[i] - minRemainder, end=' ')", "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    c = [0]*m\n    for i in a:\n        c[i % m] += 1\n    moves = 0\n    for i in range(m):\n        moves += abs(c[i] - n // m)\n    print(moves // 2)\n    for i in range(n):\n        if c[a[i] % m] > n // m:\n            a[i] += m\n            c[a[i] % m] -= 1\n            c[a[i] % m - m] += 1\n        elif c[a[i] % m] < n // m:\n            a[i] -= m\n            c[a[i] % m] += 1\n            c[a[i] % m + m] -= 1\n    print(*a)\n\nif __name__ == '__main__':\n    main()", "\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\n# c[i] = number of elements of the array having remainder i\nc = [0] * m\nfor i in range(n):\n    c[a[i] % m] += 1\n\n# Find the maximum number of elements having the same remainder\nmax_c = max(c)\n\n# Find the remainder with the maximum number of elements\nr = c.index(max_c)\n\n# Find the minimum number of moves to make all the remainders equal\nans = 0\nfor i in range(m):\n    if i != r:\n        ans += (max_c - c[i])\n\nfor i in range(n):\n    a[i] += ans * (1 + (i // n) * m)\n\nprint(ans)\nprint(*a)", "\n\n\ndef main():\n    n, m = map(int, input().split())\n    arr = list(map(int, input().split()))\n    cnt = [0] * m\n    for i in arr:\n        cnt[i % m] += 1\n    t = n // m\n    ans = 0\n    for i in range(m):\n        ans += abs(cnt[i] - t)\n    print(ans // 2)\n    for i in range(n):\n        if cnt[arr[i] % m] > t:\n            cnt[arr[i] % m] -= 1\n            arr[i] += m\n        elif cnt[arr[i] % m] < t:\n            cnt[arr[i] % m] += 1\n            arr[i] -= m\n    print(*arr)\n\n\nif __name__ == '__main__':\n    main()", "\nimport sys\nimport math\n\ndef main():\n    data = sys.stdin.readlines()\n    data = [int(x) for x in data[1].split()]\n    m = len(data)//2\n    c = [0]*m\n    for x in data:\n        c[x % m] += 1\n\n    moves = 0\n    for i in range(m):\n        moves += abs(c[i] - m)\n\n    print(moves//2)\n    for i in range(m):\n        if c[i] < m:\n            for j in range(m):\n                if c[j] > m:\n                    c[i] += 1\n                    c[j] -= 1\n                    print(data[j] + 1, end=' ')\n                    break\n        else:\n            print(data[i], end=' ')\n    print()\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n\n    a = list(map(int, sys.stdin.readline().split()))\n\n    moves = 0\n\n    for i in range(m):\n        s = sum([a[j] for j in range(i, n, m)])\n        moves += abs(s - n / m)\n        for j in range(i, n, m):\n            a[j] += n / m - s\n    print(int(moves))\n    print(\" \".join(map(str, a)))\n\nif __name__ == \"__main__\":\n    main()"]