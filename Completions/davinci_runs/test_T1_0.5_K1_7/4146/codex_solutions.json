["\n\nn = int(input())\na = list(map(int, input().split()))\n\nif a[0] == a[1]:\n    print(n//2 - a.count(a[0]))\nelse:\n    print(n//2 - min(a.count(a[0]), a.count(a[1])))", "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# \u5024\u3092\u30ad\u30fc\u306b\u3057\u3066\u3001\u500b\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\n# \u6700\u521d\u306e\u5024\u3092\u4f7f\u3063\u3066\u3001\u5024\u304c\u540c\u3058\u3082\u306e\u3092\u524a\u9664\u3057\u3066\u3044\u304d\u3001\u6700\u5f8c\u306b\u6b8b\u3063\u305f2\u3064\u3092\u6bd4\u8f03\u3059\u308b\n\n# \u5024\u3092\u30ad\u30fc\u306b\u3057\u3066\u3001\u500b\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\nd = {}\nfor i in a:\n    if i in d:\n        d[i] += 1\n    else:\n        d[i] = 1\n\n# \u6700\u521d\u306e\u5024\u3092\u4f7f\u3063\u3066\u3001\u5024\u304c\u540c\u3058\u3082\u306e\u3092\u524a\u9664\u3057\u3066\u3044\u304d\u3001\u6700\u5f8c\u306b\u6b8b\u3063\u305f2\u3064\u3092\u6bd4\u8f03\u3059\u308b\nfor k, v in d.items():\n    if v == 1:\n        continue\n    else:\n        d[k] = v - 1\n        break\n\n# \u5024\u304c2\u3064\u6b8b\u3063\u3066\u3044\u308b\u304b\u3069\u3046\u304b\nif len(d) == 2:\n    # \u5024\u3092\u914d\u5217\u306b\u5165\u308c\u3066\u3001\u6bd4\u8f03\u3059\u308b\n    b = [k for k, v in d.items()]\n    if b[0] == b[1]:\n        print(d[b[0]])\n    else:\n        print(d[b[0]] + d[b[1]])\nelse:\n    print(n)", "\n\nn = int(input())\nv = list(map(int, input().split()))\n\n# create dict to store number of occurences of each number in v\nd = {}\nfor num in v:\n    if num in d:\n        d[num] += 1\n    else:\n        d[num] = 1\n\n# if there are only two unique numbers, then the sequence is already /\\/\\/\\/\nif len(d) == 2:\n    print(0)\nelse:\n    # find the number that occurs the most\n    most_occurring_num = max(d, key=d.get)\n    # find the number that occurs the least\n    least_occurring_num = min(d, key=d.get)\n    # if the number that occurs the most occurs even number of times, then we can make it /\\/\\/\\/ by making it equal to the number that occurs the least\n    if d[most_occurring_num] % 2 == 0:\n        print(n // 2 - d[least_occurring_num])\n    # otherwise, we can make it /\\/\\/\\/ by making it equal to the number that occurs the least and decreasing the number of times the number that occurs the least appears by 1\n    else:\n        print(n // 2 - d[least_occurring_num] + 1)", "\n\nimport sys\n\nn = int(input())\nv = [int(x) for x in input().split()]\n\n# count the number of each number\ncount = {}\nfor i in v:\n    if i in count:\n        count[i] += 1\n    else:\n        count[i] = 1\n\n# if there are more than two numbers, then we can't make it /\\/\\/\\/\nif len(count) > 2:\n    print(-1)\n    sys.exit()\n\n# if there are two numbers, then we have to replace the number that has less count\nif len(count) == 2:\n    print(n - max(count.values()))\n    sys.exit()\n\n# if there is only one number, then we have to replace all the numbers\nprint(n // 2)", "\n\n\ndef main():\n    n = int(input())\n    v = list(map(int, input().split()))\n    # v.sort()\n    # print(v)\n    # print(v)\n    # print(v[::2])\n    # print(v[1::2])\n    # print(v[::2].count(v[::2][0]))\n    # print(v[1::2].count(v[1::2][0]))\n    # print(n//2 - v[::2].count(v[::2][0]), n//2 - v[1::2].count(v[1::2][0]))\n    # print(min(n//2 - v[::2].count(v[::2][0]), n//2 - v[1::2].count(v[1::2][0])))\n    print(n - max(v.count(v[0]), v.count(v[1])))\n\n\nif __name__ == '__main__':\n    main()", "\n\nn = int(input())\nv = list(map(int, input().split()))\n\nif n == 2:\n    print(0)\n    exit()\n\ncount = [0] * (10 ** 5 + 10)\nfor i in v:\n    count[i] += 1\n\nif len(count) == 3:\n    print(0)\n    exit()\n\nif count[0] >= 2:\n    print(0)\n    exit()\n\ncount = [i for i in count if i != 0]\ncount.sort()\n\nif len(count) == 1:\n    print(count[0] // 2)\n    exit()\n\nif count[0] == count[1]:\n    print(count[0])\n    exit()\n\nif count[0] + 1 == count[1]:\n    print(count[0])\n    exit()\n\nif count[0] == 1 and count[1] == 2:\n    print(0)\n    exit()\n\nif count[0] == 1 and count[1] > 2:\n    print(count[1] - 2)\n    exit()\n\nif count[0] > 1 and count[1] > 2:\n    print(count[0])\n    exit()", "\n\nn = int(input())\nv = list(map(int, input().split()))\n\n# \u3053\u3046\u3044\u3046\u6642\u306f\u3001\u307e\u305a\u306f\u96c6\u8a08\u3059\u308b\n# \u96c6\u8a08\u3059\u308b\u3068\u3001\n# v[i] = v[i+2] \u304c\u6210\u308a\u7acb\u3064\u6642\u3001v[i] \u3068 v[i+2] \u306e\u500b\u6570\u304c\u5747\u7b49\u306b\u306a\u3063\u3066\u3044\u308b\n# v[i] = v[i+2] \u304c\u6210\u308a\u7acb\u305f\u306a\u3044\u6642\u3001v[i] \u3068 v[i+2] \u306e\u500b\u6570\u304c\u5747\u7b49\u306b\u306a\u3063\u3066\u3044\u306a\u3044\n# \u3068\u306a\u308b\n\nfrom collections import Counter\n\nc = Counter(v)\n\n# v[i] = v[i+2] \u304c\u6210\u308a\u7acb\u305f\u306a\u3044\u6642\u3001v[i] \u3068 v[i+2] \u306e\u500b\u6570\u304c\u5747\u7b49\u306b\u306a\u3063\u3066\u3044\u306a\u3044\n# \u3068\u3044\u3046\u3053\u3068\u306f\u3001\u305d\u306e2\u3064\u306e\u5024\u304c\u7570\u306a\u308b\u5834\u5408\u3001\u305d\u306e\u3046\u30611\u3064\u3092\u6d88\u3059\u3068\u3001\n# v[i] \u3068 v[i+2] \u306e\u500b\u6570\u304c\u5747\u7b49\u306b\u306a\u3063\u3066\u3044\u308b\n# \u3068\u306a\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u5168\u3066\u8a08\u7b97\u3057\u3001\u6700\u5c0f\u5024\u3092\u51fa\u529b\u3059\u308c\u3070\u826f\u3044\n\n# \u306a\u304a\u3001v[i] = v[i+2] \u304c\u6210\u308a\u7acb\u305f\u306a\u3044\u6642\u3001v[i] \u3068 v[i+2] \u306e\u500b\u6570\u304c\u5747\u7b49\u306b\u306a\u3063\u3066\u3044\u306a\u3044\n# \u3068\u3044\u3046\u6761\u4ef6\u306f\u3001v[i] \u3068 v[i+2] \u306e\u500b\u6570\u304c\u7570\u306a\u308b\u5834\u5408\u3001\u305d\u306e\u3046\u30611\u3064\u3092\u6d88\u3059\u3068\u3001\n# v[i] \u3068 v[i+2] \u306e\u500b\u6570\u304c\u5747\u7b49\u306b\u306a\u3063\u3066\u3044\u308b\n# \u3068\u306a\u308b\u306e\u3067\u3001\u305d\u306e\u3088\u3046\u306a\u3082\u306e\u3092\u63a2\u3059\n\nans = 10 ** 10\nfor k, v in c.items():\n    if v % 2 != 0:\n        ans = min(ans, v - 1)\n\nprint(ans)"]