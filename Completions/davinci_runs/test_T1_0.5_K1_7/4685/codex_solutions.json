["\n\nA, B, C = map(int, input().split())\nK = int(input())\n\nif A >= B and A >= C:\n    if B >= C:\n        a = A\n        b = B\n        c = C\n    else:\n        a = A\n        b = C\n        c = B\nelif B >= A and B >= C:\n    if A >= C:\n        a = B\n        b = A\n        c = C\n    else:\n        a = B\n        b = C\n        c = A\nelse:\n    if A >= B:\n        a = C\n        b = A\n        c = B\n    else:\n        a = C\n        b = B\n        c = A\n\nif K == 1:\n    print(a + b + c)\nelse:\n    if K % 2 == 0:\n        print(a + b + c)\n    else:\n        if a % 2 == 0:\n            print(a + a // 2 + b + c)\n        else:\n            print(a + a // 2 + a % 2 + b + c)", "\n\n# === Using numpy ===\nimport numpy as np\n\na, b, c = [int(x) for x in input().split()]\nk = int(input())\n\n# === Without numpy ===\n# a, b, c = [int(x) for x in input().split()]\n# k = int(input())\n#\n# if k == 0:\n#     print(a + b + c)\n# else:\n#     print(max(a * (2 ** k) + b + c, a + b * (2 ** k) + c, a + b + c * (2 ** k)))\n\nprint(np.max([a, b, c]) * (2 ** k) + np.sum([a, b, c]) - np.max([a, b, c]))", "\n\ndef largest_sum(a,b,c,k):\n    largest = a+b+c\n    for i in range(k):\n        if a >= b and a >= c:\n            a *= 2\n        elif b >= a and b >= c:\n            b *= 2\n        else:\n            c *= 2\n        largest = max(a+b+c, largest)\n    return largest\n\na,b,c = map(int, input().split())\nk = int(input())\nprint(largest_sum(a,b,c,k))", "\n\na, b, c = map(int, input().split())\nk = int(input())\n\nif k % 2 == 0:\n    print(a + b + c)\nelse:\n    print(a * 2 + b + c)", "\n\nimport sys\nimport math\n\n# sys.stdin = open(\"input.txt\", \"r\")\n\na, b, c = map(int, sys.stdin.readline().split())\nk = int(sys.stdin.readline())\n\ndef main():\n    max_val = max(a, b, c)\n    if k == 1:\n        print(a + b + c)\n    else:\n        print(3 * max_val * (2 ** (k - 1)))\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\nimport numpy as np\n\n# read inputs\na, b, c = map(int, sys.stdin.readline().split())\nk = int(sys.stdin.readline())\n\n# initialize\nboard = np.array([a, b, c])\n\n# loop\nfor i in range(k):\n    # get max value\n    max_value = np.amax(board)\n    # double it\n    board[np.where(board == max_value)] *= 2\n\n# get sum\nprint(np.sum(board))", "\n\nimport sys\n\ndef main():\n    args = sys.stdin.readlines()\n    args = list(map(int, args[0].split()))\n    k = int(args[-1])\n    args = args[:-1]\n    args = sorted(args)\n    while k > 0:\n        if args[0] * 2 < args[1]:\n            args[0] *= 2\n        else:\n            args[1] *= 2\n        args = sorted(args)\n        k -= 1\n    print(sum(args))\n\nif __name__ == \"__main__\":\n    main()"]