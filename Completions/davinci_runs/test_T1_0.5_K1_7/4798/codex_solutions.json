["\n\ndef main():\n    name = input().split(\"-\")\n    ans = \"\"\n\n    for s in name:\n        ans += s[0]\n\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()", "\n\n#SOLUTION 1\na = input()\nb = ''\nfor i in range(len(a)):\n    if a[i].isupper():\n        b += a[i]\nprint(b)\n\n#SOLUTION 2\nprint(''.join(x for x in input() if x.isupper()))", "\n\nimport sys\n\ndef main():\n    name = sys.stdin.readline().strip()\n    print(name[0] + \"\".join(c[0] for c in name.split(\"-\")))\n\nmain()", "\n\n#Solved by Shashwat Raj\n\nlong = input()\nshort = \"\"\nfor i in long:\n    if i.isupper():\n        short += i\nprint(short)", "\n\n# I'm not sure if the input is supposed to be a list of strings. The example\n# input is just a single string, so I'm going to assume that is the case.\n\n# First, I'm going to split the input string into a list of strings using the\n# .split() method.\n\n# Next, I'm going to iterate through the list and add the first letter of each\n# string to a new list.\n\n# Finally, I'm going to join the list of first letters into a single string.\n\n# This is probably the easiest solution, but I'm not sure if it's the best.\n\n# I'm going to test this solution on the example input.\n\n# The input string is: \"Knuth-Morris-Pratt\"\n\n# Splitting the string into a list of strings:\n\n# ['Knuth', 'Morris', 'Pratt']\n\n# Iterating through the list:\n\n# ['K', 'M', 'P']\n\n# Joining the list into a single string:\n\n# \"KMP\"\n\n# As you can see, the solution works.\n\nstring = input()\nstring = string.split('-')\nstring = [x[0] for x in string]\nstring = ''.join(string)\nprint(string)", "\n\ndef main():\n    names = input()\n    first_letter = names[0]\n    last_letter = names[-1]\n    short_name = first_letter\n    for char in names:\n        if char == '-':\n            short_name += names[names.index(char)+1]\n    print(short_name)\n\nif __name__ == '__main__':\n    main()", "\n\nprint(input().split('-')[0][0] + input().split('-')[1][0] + input().split('-')[2][0])"]