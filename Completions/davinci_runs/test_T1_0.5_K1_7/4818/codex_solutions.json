["\n\n# Accepted 2019-10-28\n\nn, m = [int(x) for x in input().split()]\nt = [int(x) for x in input().split()]\nl = [int(x) for x in input().split()]\n\nt.sort()\nl.sort()\n\ntasks = 0\n\ni = 0\nj = 0\n\nwhile i < n and j < m:\n    if t[i] <= l[j]:\n        tasks += 1\n        i += 1\n        j += 1\n    else:\n        j += 1\n\nprint(tasks)", "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    tasks = list(map(int, sys.stdin.readline().split()))\n    intervals = list(map(int, sys.stdin.readline().split()))\n\n    tasks.sort(reverse=True)\n    intervals.sort(reverse=True)\n\n    i, j, count = 0, 0, 0\n\n    while i < n and j < m:\n        if tasks[i] <= intervals[j]:\n            count += 1\n            i += 1\n            j += 1\n        else:\n            i += 1\n\n    print(count)\n\nif __name__ == '__main__':\n    main()", "\n\nfrom collections import defaultdict\nfrom sys import stdin\n\nn, m = [int(x) for x in stdin.readline().strip().split()]\ntasks = [int(x) for x in stdin.readline().strip().split()]\nmusic = [int(x) for x in stdin.readline().strip().split()]\n\ntasks = sorted(tasks)\nmusic = sorted(music)\n\ntasks_len = len(tasks)\nmusic_len = len(music)\ntasks_index = 0\nmusic_index = 0\n\nans = 0\nwhile tasks_index < tasks_len and music_index < music_len:\n    task = tasks[tasks_index]\n    if task <= music[music_index]:\n        ans += 1\n        tasks_index += 1\n        music_index += 1\n    else:\n        music_index += 1\n\nprint(ans)", "\n\nimport sys\n\n# Cmd + D to print the results in the console\n\n\"\"\"\n-----Solution-----\n\n\"\"\"\n\n# Get the input data\nn, m = map(int, sys.stdin.readline().split())\nt = list(map(int, sys.stdin.readline().split()))\nl = list(map(int, sys.stdin.readline().split()))\n\n# Sort the lists\nt.sort()\nl.sort()\n\n# Initialize the variables\ni = 0\nj = 0\ncount = 0\n\n# Loop through the lists\nwhile i < n and j < m:\n    # If the task can be done in the quiet interval\n    if t[i] <= l[j]:\n        # Increment the counters\n        i += 1\n        j += 1\n        count += 1\n    # Otherwise\n    else:\n        # Increment the counter\n        j += 1\n\n# Print the results\nprint(count)", "\n\n\ndef main():\n    n, m = map(int, input().split())\n    t = map(int, input().split())\n    l = map(int, input().split())\n\n    s = 0\n    i = 0\n    j = 0\n    while i < n and j < m:\n        if t[i] <= l[j]:\n            i += 1\n            s += 1\n        j += 1\n\n    print(s)\n\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    task_times = sorted(map(int, sys.stdin.readline().split()))\n    quiet_times = sorted(map(int, sys.stdin.readline().split()))\n\n    # print(n, m)\n    # print(task_times)\n    # print(quiet_times)\n\n    i = 0\n    j = 0\n    count = 0\n\n    while i < n and j < m:\n        # print(i, j, count)\n        if quiet_times[j] >= task_times[i]:\n            count += 1\n            i += 1\n            j += 1\n        else:\n            j += 1\n\n    print(count)\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    task_count, quiet_count = [int(x) for x in input().split()]\n    tasks = [int(x) for x in input().split()]\n    quiet = [int(x) for x in input().split()]\n    tasks.sort()\n    quiet.sort()\n    quiet_index = 0\n    task_index = 0\n    while task_index < task_count and quiet_index < quiet_count:\n        if tasks[task_index] <= quiet[quiet_index]:\n            quiet_index += 1\n        task_index += 1\n    print(quiet_index)\n\nif __name__ == \"__main__\":\n    main()"]