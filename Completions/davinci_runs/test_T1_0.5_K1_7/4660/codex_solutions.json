["\nimport re\n\ndef fun(email):\n    a = email.split('@')\n    username = a[0]\n    website_name = a[1].split('.')[0]\n    extension = a[1].split('.')[1]\n    if (re.match(r'^[a-zA-Z0-9-_]+$', username) and re.match(r'^[a-zA-Z0-9]+$', website_name) and len(extension) <= 3):\n        return True\n    else:\n        return False\n\ndef filter_mail(emails):\n    return list(filter(fun, emails))\n\nif __name__ == '__main__':\n    n = int(input())\n    emails = []\n    for _ in range(n):\n        emails.append(input())\n\nfiltered_emails = filter_mail(emails)\nfiltered_emails.sort()\nprint(filtered_emails)", "\n\nimport re\n\nn = int(input())\n\nemails = []\n\nfor i in range(n):\n    email = input()\n    if re.match(r'^[\\w\\-\\_]+@[a-zA-Z0-9]+\\.[a-zA-Z]{1,3}$', email):\n        emails.append(email)\n\nemails.sort()\n\nprint(emails)", "\ndef fun(s):\n    try:\n        username, url = s.split(\"@\")\n        website, extension = url.split(\".\")\n    except ValueError:\n        return False\n\n    if not username.replace(\"-\", \"\").replace(\"_\", \"\").isalnum():\n        return False\n    if not website.isalnum():\n        return False\n    if len(extension) > 3:\n        return False\n    return True\n\ndef filter_mail(emails):\n    return list(filter(fun, emails))\n\nif __name__ == '__main__':\n    n = int(input())\n    emails = []\n    for _ in range(n):\n        emails.append(input())\n\nfiltered_emails = filter_mail(emails)\nfiltered_emails.sort()\nprint(filtered_emails)", "\n\nimport re\n\ndef fun(s):\n    a = re.match(r'[a-zA-Z0-9_-]+@[a-zA-Z0-9]+\\.[a-zA-Z]{1,3}$', s)\n    return(a)\n\ndef filter_mail(emails):\n    return list(filter(fun, emails))\n\nif __name__ == '__main__':\n    n = int(input())\n    emails = []\n    for _ in range(n):\n        emails.append(input())\n\nfiltered_emails = filter_mail(emails)\nfiltered_emails.sort()\nprint(filtered_emails)", "\n\nimport re\n\ndef filter_mail(emails):\n    return list(filter(lambda x: re.search(r'^[a-zA-Z0-9_-]+@[a-zA-Z0-9]+\\.[a-zA-Z]{1,3}$', x), emails))\n\nif __name__ == '__main__':\n    n = int(input())\n    emails = []\n    for _ in range(n):\n        emails.append(input())\n\nfiltered_emails = filter_mail(emails)\nfiltered_emails.sort()\nprint(filtered_emails)", "\n\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\nimport re\n\ndef validate_email(email):\n    pattern = re.compile(r'[a-zA-Z0-9-_]+@[a-zA-Z0-9]+\\.[a-zA-Z]{1,3}$')\n    match = pattern.match(email)\n    if match:\n        return True\n    return False\n\ndef main():\n    n = int(input())\n    emails = []\n    for _ in range(n):\n        email = input()\n        if validate_email(email):\n            emails.append(email)\n    emails = sorted(emails)\n    print(emails)\n\nif __name__ == '__main__':\n    main()", "\n\nimport re\n\ndef filter_mail(emails):\n    return list(filter(lambda x: re.search(r'^\\w+[\\w\\.-]*@[\\w\\.-]+\\.\\w{2,3}$', x), emails))\n\nif __name__ == '__main__':\n    n = int(input())\n    emails = []\n    for _ in range(n):\n        emails.append(input())\n\nfiltered_emails = filter_mail(emails)\nfiltered_emails.sort()\nprint(filtered_emails)"]