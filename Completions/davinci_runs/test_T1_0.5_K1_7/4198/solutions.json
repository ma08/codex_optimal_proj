["import math\nA,B,X = map(int,input().split())\ndef Price(N):\n    d = math.floor(math.log10(N))+1\n    return A*N+B*d\nif Price(1) > X:\n    Answer = 0\nelse:\n    lef = 1\n    rig = 10**9\n    for i in range(100):\n        mid = (lef+rig)//2\n        if Price(mid) <= X:\n            Answer = mid\n            lef = mid\n        else:\n            rig = mid\n    if Price(rig) <= X:\n        Answer = rig\nprint(Answer)", "def resolve():\n    a,b,x = map(int,input().split())\n    l,r = 0, 10**9+1\n    while l<r-1:\n        m = l + (r-l)//2\n        p = a*m+b*len(str(m))\n        if p > x:\n            r = m\n        else:\n            l = m\n    print(l)\nresolve()", "a,b,x=map(int,input().split())\n\ndef is_ok(arg):\n    return a*arg+b*len(str(arg))<=x\n\ndef meguru_bisect(ng, ok):\n    while (abs(ok - ng) > 1):\n        mid = (ok + ng) // 2\n        if is_ok(mid):\n            ok = mid\n        else:\n            ng = mid\n    return ok\n\nprint(meguru_bisect(10**9+1,0))", "A, B, X = map(int, input().split(' '))\n\ndef cost(N):\n    return A * N + B * len(str(N))\n\nif cost(0) > X:\n    print(0)\n    return\n\nif cost(10 ** 9) <= X:\n    print(10 ** 9)\n    return\n\nbottom = 1\ntop = 10 ** 9\nwhile top - bottom > 1:\n    mid = (top + bottom) // 2\n    if cost(mid) <= X:\n        bottom = mid\n    else:\n        top = mid\nprint(bottom)", "A,B,X = list(map(int,input().split()))\nright = 10**9\nleft = 0\nwhile abs(right-left)>1:\n    N = (left + right)//2\n    cal = N * A + len(str(N)) * B\n    if cal == X:\n        ans = N\n        print(ans)\n        break\n    elif cal < X:\n        left = N \n    else:\n        right = N\nelse:\n    if  A * right + len(str(right)) * B <= X:\n        print(right)\n    else:\n        print(left)\n", "import math\na,b,x = map(int,input().split())\nok = 0\nno = pow(10,9)+1\n\nwhile no != ok+1 :\n    center = math.floor((ok+no)/2)\n    digit = 1\n    while center//pow(10,digit) != 0 :\n        digit += 1\n\n    if x >= a*center+b*digit :\n        ok = center\n    elif  x < a*center+b*digit :\n        no = center\n\nprint(ok)", "a,b,x = list(map(int,input().split()))\nr = 10**9 + 1\nl = 0\nwhile r - l > 1:\n    m = (r + l) // 2\n    p = a*m + b*len(str(m))\n    if p > x:\n        r = m\n    else:\n        l = m\nprint(l)\n", "A,B,X =list(map(int, input().split()))\nminimum = 0\nmaximum = 10**9+1\nwhile maximum - minimum > 1:\n    medium = (maximum + minimum) //2 \n    if A*medium + B*len(str(medium)) > X:\n        maximum = medium\n    else:\n        minimum = medium\nprint(minimum)\n", "import math\n\na,b,x = map(int,input().split())\n\nmaxv = 10**9\nminv = 1\n\ndef canbuy(n):\n    tmp = a*n\n    count=0\n    while n >= 1:\n        n /=10\n        count+=1\n    tmp += b * count\n    return x >= tmp\n\nif canbuy(1):\n    midv = math.ceil((maxv+minv)/2)\n    while (maxv!=midv)|(minv!=midv):\n        if canbuy(midv):\n            minv = midv\n        else:\n            maxv = midv-1\n        midv =  math.ceil((maxv+minv)/2)\n        #print(maxv,midv,minv)\n\n    print(midv)\nelse:\n    print(0)", "A, B, X = map(int, input().split())\n \n# \u4e8c\u5206\u63a2\u7d22\uff01\n# \u4e8c\u5206\u63a2\u7d22\u3068\u306f\u3001\u81ea\u7136\u6570N\u306b\u5bfe\u3057\u3066\u3001\u5358\u8abf\u5897\u52a0\u306a\u5f0ff(N)\u304c\u3042\u308b\u3068\u304d\u3001\n# f(N)<=X \u3092\u6e80\u305f\u3059\u6700\u5927\u306eN\u3092\u6c42\u3081\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\n \n# \u5177\u4f53\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\uff1a\n# \u5fc5\u305a f(left)<=X \u3092\u6e80\u305f\u3059 left \u3068\u3001\n# \u5fc5\u305a f(right)>X \u3092\u6e80\u305f\u3059 right \u3092\u53d6\u308b\n# \u4ee5\u4e0b\u3092\u7e70\u308a\u8fd4\u3059\n# mid=(left+right)/2 \u306b\u5bfe\u3057\u3066\u3001\n# f(mid)<=X \u306e\u3068\u304d\u3001left=mid\n# f(mid)>X \u306e\u3068\u304d\u3001right=mid\n# left\u306f\u5e38\u306bf(left)<=X\u3092\u6e80\u305f\u3057\u3001right\u306f\u5e38\u306bf(right)>X\u3092\u6e80\u305f\u3059\n# \u6700\u7d42\u7684\u306b\u3001left\u306ff(N)<=X\u3092\u6e80\u305f\u3059\u6700\u5927\u306eN\u306b\u3001right\u306ff(N)>X\u3092\u6e80\u305f\u3059\u6700\u5c0f\u306eN\u306b\u3001\u305d\u308c\u305e\u308c\u53ce\u675f\u3059\u308b\n \n# \u4eca\u56de\u306ff(N)=A*N+B*d(N)\ndef price(N):\n  return A*N + B*len(str(N)) # len(str(N)) => N\u306e\u6841\u6570\u304c\u6c42\u307e\u308b\n \nleft = 0\nright = 10**9 + 1\nwhile right - left > 1:\n  mid = (left + right) // 2\n  if price(mid) <= X: left = mid\n  else: right = mid\n\nprint(left)", "a,b,x=map(int,input().split())\n\ndef f(n):\n  return x-(n*a+b*len(str(n)))\ndef test(n):\n  if f(n)>=0:\n    return True\n  else:\n    return False\n\nl=0\nr=10**9\nflag=True\n\nwhile flag:\n  mid=(r+l)//2\n  if test(mid):\n    l=mid\n  else:\n    r=mid\n  if r-l<=1:\n    flag=False\n    if test(r) and test(l):\n      print(r)\n    elif test(r) and test(l)!=True:\n      print(r)\n    else:\n      print(l)", "a, b, x = [int(i) for i in input().split()]\nleft = 0\nright = 10 ** 9 + 1\nwhile right - left > 1:\n    mid = (right + left) // 2\n    if mid * a + b * len(str(mid)) > x:\n        right = mid\n    else:\n        left = mid\nprint(left)", "A, B, X = map(int, input().split())\n\nans = 0\nfor d in range(1, 19):\n    if X - B * d <= 0:\n        break\n    N = min((X - B * d) // A, 10 ** d - 1)\n    ans = max(ans, N)\n\nprint(min(ans, 10 ** 9))", "a, b, x = [int(i) for i in input().split()]\nleft = 0\nright = 10 ** 9 + 1\nwhile right - left > 1:\n  mid = (right + left) // 2\n  if mid * a + b * len(str(mid)) > x:\n    right = mid\n  else:\n    left = mid\nprint(left)", "A, B, X = map(int, input().split())\nK = 0\n# \u6841\u6570K\u691c\u7d22\nwhile A*10**K + B*K < X: K += 1\n# BN\u3092\u5f15\u304d\u3001AN\u3092\u6c42\u3081\u3066A\u3067\u5207\u6368\u9664\u7b97\n# \u53d6\u5f15\u3067\u304d\u308b\u6700\u5927\u5024\u3092\u8d85\u3048\u306a\u3044\u3088\u3046\u306bmin\nprint(min((X - B*K)//A, 10**9))", "A,B,X=list(map(int,input().split()))\n\ndef func1(N):\n  d=len(str(N))\n  return A*N+B*d<=X\n\nleft=0\nright=10**30\nwhile left+1<right:\n  n=(left+right)//2\n  if func1(n):\n    left=n\n  else:\n    right=n\nans=left\nprint((ans if ans<10**9 else 10**9))\n", "a, b, x = list(map(int, input().split()))\nans = 0\n\ndef binary_search(a, b, x):\n    left = 1\n    right = 10**9\n    while left<=right:\n        mid = (left+right)//2\n        # print(mid)\n        # print(a*mid+b*int(len(str(mid))))\n        if x == a*mid+b*int(len(str(mid))):\n            return mid\n        elif x<a*mid+b*int(len(str(mid))):\n            right = mid-1\n        else:\n            left = mid+1\n    return right\n\nprint((binary_search(a, b, x)))\n", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Wed Sep  9 01:21:53 2020\n\n@author: liang\n\"\"\"\n\nA, B, X = map(int, input().split())\n\nfor i in range(1,11):\n    if A*10**(i-1) + B*i > X:\n        i -= 1\n        break\nans = (X - B*i)//A\nif ans >= 10**9:\n    ans = 10**9\nif ans >= 10**i:\n    ans = 10**i -1\nprint(ans)", "A, B, X = map(int, input().split())\n\nNmax = 10 ** 9\nNmin = 1\nNmid = (Nmax + Nmin) // 2\n\ndef nIsAffordable(a, b, n):\n    lenOfN = len(str(n))\n    price = a * n + b * lenOfN\n    if price <= X :\n        return True\n    else :\n        return False\n\nif nIsAffordable(A, B, Nmax) :\n    print(Nmax)\nelse :\n    while Nmax != Nmin :\n        if nIsAffordable(A, B, Nmid) :\n            Nmin = Nmid + 1\n            Nmid = (Nmax + Nmin) // 2\n        else :\n            Nmax = Nmid\n            Nmid = (Nmax + Nmin) // 2\n    print(Nmid - 1)", "#!/usr/bin/env python3\n\n#import\n#import math\n#import numpy as np\nA, B, X = list(map(int, input().split()))\n\nif A + B > X:\n    print((0))\n    return\n\nt = 1\nfor i in range(1, 20):\n    t *= 10\n    if A * t + B * i > X:\n        break\n\ndef is_ok(arg):\n    a = len(str(arg))\n    return A * arg + B * a <= X\n\ndef meguru_bisect(ok, ng):\n    while abs(ok - ng) > 1:\n        mid = (ok + ng) // 2\n        if is_ok(mid):\n            ok = mid\n        else:\n            ng = mid\n    return ok\n\nprint((meguru_bisect(min(t // 10, 10**8), min(t + 1, 10**9 + 1))))\n\n\n\n\n", "#!/usr/bin/env python3\ndef main():\n    A, B, X = list(map(int, input().split()))\n    num_max = 10 ** 9\n    digit_max = len(str(num_max))\n\n    ans = 0\n    for n in range(1, digit_max + 1):\n        res = (X - B * n) // A\n        if res > num_max:\n            res = num_max\n        if res < 0:\n            continue\n        digit = len(str(res))\n        if digit == n:\n            ans = max(ans, res)\n        if digit > n:\n            ans = max(ans, 10 ** n - 1)\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def LI():\n    return list(map(int, input().split()))\n\n\nA, B, X = LI()\nans = 0\nfor i in range(1, 10):\n    x = (X-B*i)//A\n    L = len(str(x))\n    xmin = int(\"1\"+\"0\"*(i-1))\n    xminm = xmin*A+B*i\n    xmax = int(\"9\"*i)\n    xmaxm = xmax*A+B*i\n    if xminm > X:\n        continue\n    elif xmaxm <= X:\n        ans = xmax\n    elif x <= X:\n        ans = x\nx = 1000000000*A+B*10\nif x <= X:\n    ans = 1000000000\nprint(ans)\n", "A,B,X = map(int, input().split())\n\nif A*10**9+B*10 < X:\n  print(10**9)\nelif A*1+B*1 > X:\n  print(0)\nelse:\n  min_val = 1\n  max_val = 10**9\n  tmp = (min_val+max_val)//2\n  prev_price = 0\n  \n  while 1:\n    price = A*tmp + B*len(str(tmp))\n    if price == prev_price:\n      print(tmp)\n      break\n    \n    if price < X:\n      min_val = tmp\n      tmp = (min_val+max_val)//2\n    elif price > X:\n      max_val = tmp\n      tmp = (min_val+max_val)//2\n    else:\n      print(tmp)\n      break\n    prev_price = price", "a,b,x = map(int,input().split())\nmax_ans = 10**9\nmin_ans = 0\n\ndef j(ans):\n    nonlocal a\n    nonlocal b\n    return a*ans + b*len(str(ans))\n    \nif j(1) > x:\n    print(0)\n    return\nif j(max_ans) <= x:\n    print(max_ans)\n    return\n\nans = (max_ans+min_ans)//2\n\nfor i in range(40):\n    if j(ans) > x:\n        max_ans = ans\n    elif j(ans) < x:\n        min_ans = ans\n    else:\n        print(ans)\n        return\n    ans = (max_ans+min_ans)//2\n\nprint(ans)", "A,B,X = list(map(int, input().split()))\n\nl,r = 0, 10**9+1\n\nwhile r-l > 1:\n    m = (l+r)//2\n    if A*m + B*len(str(m)) > X:\n        r = m\n    else:\n        l = m\n\nprint(l)\n", "# author:  Taichicchi\n# created: 26.09.2020 15:29:37\n\nimport sys\nfrom math import ceil\nA, B, X = list(map(int, input().split()))\n\n\ndef calc(N, L_N):\n    return A * N + B * L_N\n\n\nl = 0\nr = 10 ** 9 + 1\n\nwhile r - l > 1:\n    c = (r + l) // 2\n    if calc(c, len(str(c))) <= X:\n        l = c\n    else:\n        r = c\n\nprint(l)\n", "A, B, X = list(map(int, input().split()))\nleft = 0\nright = 1000000001\n\nwhile right - left > 1:\n    mid = (left + right) // 2\n    if A * mid + B * len(str(mid)) > X:\n        right = mid\n    else:\n        left = mid\nprint(left)\n", "import sys\nimport math\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    A, B, X = MI()\n    keta = 0\n    \n    while True:\n        temp = A*pow(10, keta)+B*(keta+1)\n        if temp > X:\n            break\n        keta +=1\n    keta -= 1\n    \n    if A+B > X:\n        print(0)\n        return\n\n    ans = (X-B*(keta+1)) // A\n\n    if len(str(ans)) > keta+1:\n        ans = int(\"9\" * (keta+1))\n    \n    if ans >= 1000000000:\n        print(1000000000)\n    else:\n        print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()", "A, B, X = list(map(int, input().split()))\ndef d(N):\n  return len(str(N))\ndef price(N):\n  return A*N + B*d(N)\ndef bisec(low, high):\n  if low == high:\n    return high\n  elif low + 1 == high:\n    if price(high) == X:\n        return high\n    else:\n        return low\n  else:\n    n = (low + high)//2\n    if price(n) > X:\n      return bisec(low, n)\n    elif price(n) < X:\n      return bisec(n, high)\n    else:\n      return n\nif price(1) > X:\n  print((0))\nelif price(10**9)<=X:\n  print((10**9))\nelse:\n  print((bisec(1, 10**9)))\n\n\n\n", "a,b,x = map(int,input().split())\ndef is_ok(arg):\n    return a*arg+b*len(str(arg)) <= x\n\ndef meguru(ng,ok):\n    while abs(ok - ng)>1:\n        mid = (ok + ng)//2\n        if is_ok(mid):\n            ok = mid\n        else:\n            ng = mid\n    return ok\n\nprint(meguru(10**9+1,0))", "A,B,X = map(int,input().split())\n\ndef nibutan(a,b,x):\n  left_index = 1\n  right_index = 10**9\n  while left_index <= right_index:\n    cc = (left_index + right_index)//2\n    if x - a*cc - b*(len(str(cc))) >0:\n      left_index = cc+1\n    elif x- a*cc - b*(len(str(cc))) == 0:\n      return cc\n    else:\n      right_index = cc-1\n  return right_index\n\nprint(nibutan(A,B,X))", "#!/usr/bin/env python3\ndef main():\n    # \u4e8c\u5206\u63a2\u7d22\u3067\u3082\u89e3\u3051\u308b\n    A, B, X = list(map(int, input().split()))\n    num_max = 10 ** 9\n\n    ok = 0\n    ng = num_max + 1\n    while abs(ng - ok) > 1:\n        mid = (ng + ok) // 2\n        res = A * mid + B * len(str(mid))\n        if res <= X:\n            ok = mid\n        else:\n            ng = mid\n    print(ok)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "a,b,x = map(int, input().split())\n\nok = 0 #\u8cb7\u3048\u308b\nng = pow(10,9)+1 #\u8cb7\u3048\u306a\u3044\n\nwhile abs(ng-ok)>1:\n    mid = int((ok+ng)/2)\n    c = a*mid+b*len(str(mid))\n    if c <= x: #\u8cb7\u3048\u308b\n        ok = mid\n    else: #\u8cb7\u3048\u306a\u3044\n        ng = mid\n\nprint(ok)", "A, B, X =map(int, input().split(' '))\ndef cost(N):\n    return A * N + B * len(str(N))\n\nif cost(0) > X:\n    print(0)\n    return\n\nif cost(10 ** 9) <= X:\n    print(10 ** 9)\n    return\n\nbottom = 1\ntop = 10 ** 9\nwhile top - bottom > 1:\n    mid = (top + bottom) // 2\n    if cost(mid) <= X:\n        bottom = mid\n    else:\n        top = mid\nprint(bottom)", "A, B, X = map(int, input().split())\nN = 10**9\nlow, high = 0, N+1\nwhile low+1 < high:\n    mid = (low+high)//2\n    if A*mid+B*len(str(mid)) <= X:\n        low = mid\n    else:\n        high = mid\n\nprint(low)", "A, B, X = map(int, input().split())\ns = 1\ne = 1000000000\n\ndef price(x):\n  return x * A + len(str(x)) * B\n\nif price(s) > X:\n  print(0)\n  return\nif price(e) <= X:\n  print(e)\n  return\n\nwhile e > s + 1:\n  tmp = (s + e) // 2\n  if price(tmp) <= X:\n    s = tmp\n  else:\n    e = tmp\nprint(s)", "a, b, x = list(map(int, input().split()))\n\nans = 0\nfor i in range(11):\n    nokori = max(0, x - b * i)\n    ans = max(ans, min(10 ** i - 1, nokori // a))\nprint((min(10 ** 9, ans)))\n", "#!/usr/bin/env python3\ndef main():\n    # \u4e8c\u5206\u63a2\u7d22\u3067\u3082\u89e3\u3051\u308b\n    A, B, X = list(map(int, input().split()))\n    num_max = 10 ** 9\n\n    right = num_max + 1\n    ok_max = 0\n    cnt = 0\n    while right - ok_max > 1:\n        mid = (right + ok_max) // 2\n        res = A * mid + B * len(str(mid))\n        if res <= X:\n            ok_max = mid\n        else:\n            right = mid\n        cnt += 1\n    print(ok_max)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "#!/usr/bin/env python3\nimport math\n\ndef solve(A: int, B: int, X: int):\n    left = 1\n    right = 10 ** 9\n    if A + B > X:\n        return 0\n    if A * right + B * len(str(right)) <= X:\n        return right\n    # \u3053\u3053\u307e\u3067\u3067 left \u3067\u306f\u8cb7\u3048\u308b right \u3067\u306f\u8cb7\u3048\u306a\u3044\n    while left + 1 < right:\n        mid = (left + right) // 2\n        if A * mid + B * len(str(mid)) <= X:\n            left = mid\n        else:\n            right = mid\n    return left\n\n\n# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    A, B, X = list(map(int, input().split()))\n    ans = solve(A, B, X)\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "A, B, X = [int(_) for _ in input().split()]\n\ndef d(N):\n    return len(str(N))\n\nok_max = 0\nng_min = 10 ** 9 + 1\n\nwhile ng_min - ok_max > 1:\n    n = (ok_max + ng_min) // 2\n    if A * n + B * d(n) <= X:\n        ok_max = n\n    else:\n        ng_min = n\n\nprint(ok_max)\n", "A, B, X = map(int, input().split())\n\nif A+B > X:\n    print(0)\n\nelse:\n    f = 0\n    while f <= 9:\n        S = A*(10**f) + B*(f+1)\n        if S > X:\n            break\n\n        f += 1\n\n    if f == 10:\n        print(10**9)\n\n    else:\n        X = X - B*f\n        print(min(X//A, 10**f -1)) ", "A, B, X = list(map(int, input().split()))\ngood = 0\nbad = 10 ** 9 + 1\nwhile bad - good > 1:\n    mid = (bad + good) // 2\n    if A * mid + B * len(str(mid)) <= X:\n        good = mid\n    else:\n        bad = mid\nprint(good)\n", "a,b,x = map(int, input().split())\narr = [0]\n\nif x >= a*(10**9)+b*10:\n    print(10**9)\n    return\n\nelif x < a+b:\n    print(0)\n    return\n\nelse:\n    for i in range(1,10):\n        n = (x - b*i)//a\n        if len(str(n)) > i:\n            arr.append(10**i - 1)\n        else:\n            arr.append(n)\n    \n    print(max(arr))", "a,b,x = list(map(int, input().split()))\n\ndef c(n):\n    d = len(str(n))\n    return a*n + b*d <= x\n\ns,t = 0, 10**9+1\nwhile s + 1 < t:\n    mid = (s + t) // 2\n    if c(mid):  s = mid\n    else:  t = mid\n\nprint(s)\n", "a,b,x = map(int,input().split())\nmx = 10**9+1\nmn = 0\n\nwhile(mx-mn > 1):\n    mid = (mx + mn) // 2\n    p = a * mid + b * len(str(mid))\n    if(p <= x) :\n        mn = mid\n    else :\n        mx = mid\n\nprint(mn)", "import math\n\nA, B, X = map(int, input().split())\n\na = 10**9+1\nb = X\ndef is_ok(arg):\n    return A*arg + B*int(math.log10(arg)+1) <= b\n\ndef bisect(ng, ok):\n    while (abs(ok - ng) > 1):\n        mid = (ok + ng) // 2\n        if is_ok(mid):\n            ok = mid\n        else:\n            ng = mid\n    return ok\n\nprint(bisect(a, 0))", "a,b,x = map(int, input().split())\nl,r = 0, 10**9+1\nwhile r-l > 1:\n  m = (l+r)//2\n  if a*m + b*len(str(m)) <= x:\n    l = m\n  else:\n    r = m\nprint(l)", "from math import log10, floor\n\na, b, x = map(int, input().split())\n\nn, m = 0, 0\nfor i in range(10):\n    if a*10**i+b*(i+1) <= x:\n        n = 10**i\n        m = i+1\n\nif n == 0:\n    print(0)\nelse:\n    print(min(10**9, 10*n-1, n+(x-a*n-b*m)//a))", "a,b,x = map(int,input().split())\n\ndef is_ok(n):\n    return a * n + b * len(str(n)) <= x\n\n\ndef meguru_bisect(ng, ok):\n    while (abs(ok - ng) > 1):\n        mid = (ok + ng) // 2\n        if is_ok(mid):\n            ok = mid\n        else:\n            ng = mid\n    return ok\n\n\nprint(meguru_bisect(10**9+1,0))", "A,B,X = map(int, input().split())\n\nl,r = 0, 10**9+1\n\nwhile r-l > 1:\n    m = (l+r)//2\n    if A*m + B*len(str(m)) > X:\n        r = m\n    else:\n        l = m\n\nprint(l)", "A, B, X = [int(_) for _ in input().split()]\n\ndef d(N):\n    return len(str(N))\n\nnmin = 0\nnmax = 10 ** 9\n\nwhile nmax - nmin > 1:\n    n = (nmin + nmax) // 2\n    if A * n + B * d(n) <= X:\n        nmin = n\n    else:\n        nmax = n\n\nif A * nmax + B * d(nmax) <= X:\n    print(nmax)\nelse:\n    print(nmin)\n", "def solve(x):\n    '''\n    \u4e8c\u5206\u63a2\u7d22\u3067\u4f7f\u7528\u3059\u308b\u6761\u4ef6\n    :param x:\n    :return:\n    '''\n    return A * x + B * len(str(x)) <= X\n\n\ndef binary_search(ok, ng):\n    '''\n    \u534a\u958b\u533a\u9593\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u30d0\u30b0\u304c\u304a\u304d\u306b\u304f\u3044\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\n    ok\u3092\u89e3\u304c\u5b58\u5728\u3059\u308b\u5024\u3001ng\u306b\u89e3\u304c\u5b58\u5728\u3057\u306a\u3044\u5024\u3092\u5165\u308c\u308b\u3002\u6700\u5927\u5024\u3082\u6700\u5c0f\u5024\u306e\u63a2\u7d22\u3092\u884c\u3046\u3053\u3068\u3082\u51fa\u6765\u308b\u3002\n    [ok, ng) or (ng, ok]\n    ok = 10 ** 9\n    ng = -1\n\n    :param ok:\u89e3\u304c\u5b58\u5728\u3059\u308b\u5883\u754c\u5024\n    :param ng:\u89e3\u304c\u5b58\u5728\u3057\u306a\u3044\u5883\u754c\u5024\n    :return:\n    '''\n    while abs(ok - ng) > 1:\n        middle = (ok + ng) // 2\n        if solve(middle):\n            ok = middle\n        else:\n            ng = middle\n    return ok\n\nA, B, X = map(int,input().split())\nans = binary_search(0, 10 ** 9 + 1)\nprint(ans)", "A, B, X = map(int,input().split())\n\ndef isPurchasable(x):\n    cost = A * x + B * len(str(x))\n    return cost<=X\n\nif not isPurchasable(1):\n    print(0)\n    return\n\nif isPurchasable(10**9):\n    print(10**9)\n    return\n\nok = 1; ng = 10**9\n\nwhile(abs(ng-ok)>1):\n    number = (ok+ng)//2\n    if isPurchasable(number):\n        ok = number\n    else:\n        ng = number\n\nans = ok\nprint(ans)", "a, b, x = list(map(int, input().split()))\n\nl, r = 0, 10**9+1\nwhile l+1 < r:\n    n = (l+r)//2\n    if a*n + b*len(str(n)) > x:\n        r = n\n    else:\n        l = n\nprint(l)\n", "\na,b,x = map(int, input().split())\n\nif a + b > x:\n    print(0)\nelse:\n    l, r = 0, 10**9+1\n    while r - l > 1:\n        mid = (l + r)//2\n        keta = len(str(mid))\n        n = a*mid + b*keta\n        if n > x:\n            r = mid\n        else:\n            l = mid\n    print(l)", "#!/usr/bin/env python3\nfrom collections import defaultdict, Counter\nfrom itertools import product, groupby, count, permutations, combinations\nfrom math import pi, sqrt\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nfrom string import ascii_lowercase\nfrom functools import lru_cache\nimport sys\nsys.setrecursionlimit(10000)\nINF = float(\"inf\")\nYES, Yes, yes, NO, No, no = \"YES\", \"Yes\", \"yes\", \"NO\", \"No\", \"no\"\ndy4, dx4 = [0, 1, 0, -1], [1, 0, -1, 0]\ndy8, dx8 = [0, -1, 0, 1, 1, -1, -1, 1], [1, 0, -1, 0, 1, 1, -1, -1]\n\n\ndef inside(y, x, H, W):\n    return 0 <= y < H and 0 <= x < W\n\n\ndef ceil(a, b):\n    return (a + b - 1) // b\n\n\ndef sum_of_arithmetic_progression(s, d, n):\n    return n * (2 * s + (n - 1) * d) // 2\n\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\ndef lcm(a, b):\n    g = gcd(a, b)\n    return a / g * b\n\n\ndef solve():\n    A, B, X = list(map(int, input().split()))\n    low, high = -1, 10**10\n    while high - low > 1:\n        middle = (low + high) // 2\n        need = (A * middle) + B * len(str(middle))\n        if need <= X:\n            low = middle\n        else:\n            high = middle\n\n    low = min(max(0, low), 10**9)\n    print(low)\n\n\ndef main():\n    solve()\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "a,b,x=map(int,input().split())\nl,r=0,10**9+1\nwhile r-l>1:\n  t=(l+r)//2\n  r,l=[[r,t],[t,l]][a*t+b*(len(str(t)))>x]\nprint(l)", "A,B,X = map(int,input().split())\nif(A+B > X):\n    print(0)\n    return\na = 0\nb = 10**9+1\nwhile(a+1 < b):\n    m = (a+b)//2\n    if(A*m+B*len(str(m)) == X):\n        print(m)\n        return\n    if(A*m+B*len(str(m)) > X):\n        b = m\n    if(A*m+B*len(str(m)) < X):\n        a = m\nprint(a)", "#94 C - Buy an Integer (hint)\nA,B,X = map(int,input().split())\n\ndef judge(x):\n    if  A*x + B*len(str(x)) <= X:\n        return True\n    else:\n        return False\n    \nsta = 0 \nfin = X\n\nwhile (fin - sta) > 1:\n    m = (fin + sta) // 2\n    if judge(m) == True :\n        sta = m\n    else:\n        fin = m\n        \nif sta > 10**9:\n    print(10**9)\nelse:\n    print(sta)", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time, copy\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\n\nstdin = sys.stdin\n\nni = lambda: int(ns())\nna = lambda: list(map(int, stdin.readline().split()))\nns = lambda: stdin.readline().rstrip()  # ignore trailing spaces\n\nA, B, X = na()\n\ndef judge(N, A, B, X):\n    dn = len(str(N))\n    if A * N + B * dn <= X:\n        return True\n    else:\n        return False\n\ndef binary_search(A, B, X):\n    left = 0\n    right = 10 ** 9\n    while right - left > 1:\n        mid = left + (right - left) // 2\n        if judge(mid, A, B, X):\n            left = mid\n        else:\n            right = mid\n    return left\n\nif judge(10 ** 9, A, B, X):\n    print(10 ** 9)\nelse:\n    print(binary_search(A, B, X))", "A, B, X = list(map(int, input().split()))\n# A, B, X = 10, 7, 100\n\n\ndef digit(x):\n    strx = str(x)\n    return len(strx)\n\n\ndef calc_value(x):\n    return A * x + B * digit(x)\n\n\ndef binary_search(num_max):\n    if num_max <= 0:\n        return 0\n\n    left = 0\n    right = num_max\n    while left <= right:\n        mid = (left + right) // 2\n        mid_value = calc_value(mid)\n        if mid_value == X:\n            return mid\n        elif mid_value < X:\n            left = mid + 1\n        else:\n            right = mid - 1\n\n    return left-1\n\n\n# data = list(range(0, X//A+1))\nstore = 10**9\n\nif X >= calc_value(store):\n    ans = store\nelse:\n    ans = binary_search(X//A)\n    ans = min(10**9, ans)\n\nprint(ans)\n", "A, B, X = map(int, input().split())\nN = 0\ndN = len(str(N))\np = A * N + B * dN\n\nfor i in range(N, 10**9, 10000000):\n  N += 10000000\n  dN = len(str(N))\n  p = A * N + B * dN\n  if p > X:\n    N -= 10000000\n    break\n\nfor j in range(N, 10**9, 10000):\n  N += 10000\n  dN = len(str(N))\n  p = A * N + B * dN\n  if p > X:\n    N -= 10000\n    break\n\nfor k in range(N, 10**9):\n  N += 1\n  dN = len(str(N))\n  p = A * N + B * dN\n  if p > X:\n    N -= 1\n    break\n\nif N > 10 ** 9:\n  print(10 ** 9)\nelse:\n  print(N)", "A,B,X=list(map(int,input().split()))\nans=0\nif A*1000000000+B*10<=X:\n    ans=1000000000\nfor d in range(1,10):\n    x=(X-B*d)//A\n    if 10**(d-1)<=x and x<10**d:\n        ans=max(ans,x)\n    elif x>=10**d:\n        ans=max(ans,10**d-1)\nprint(ans)\n", "A, B, X = map(int, input().split(' '))\ndef cost(N):\n    return A * N + B * len(str(N))\n\nif cost(0) > X:\n    print(0)\n    return\n\nif cost(10 ** 9) <= X:\n    print(10 ** 9)\n    return\n\nbottom = 1\ntop = 10 ** 9\n\nwhile top - bottom > 1:\n    mid = (top + bottom) // 2\n    if cost(mid) <= X:\n        bottom = mid\n    else:\n        top = mid\nprint(bottom)", "A,B,X=map(int,input().split())\nans=0\nif A*1000000000+B*10<=X:\n    ans=1000000000\nfor d in range(1,10):\n    x=(X-B*d)//A\n    if 10**(d-1)<=x and x<10**d:\n        ans=max(ans,x)\n    elif x>=10**d:\n        ans=max(ans,10**d-1)\nprint(ans)", "A, B, X = map(int, input().split(' '))\ndef cost(N):\n    return A * N + B * len(str(N))\n\nif cost(0) > X:\n    print(0)\n    return\n\nif cost(10 ** 9) <= X:\n    print(10 ** 9)\n    return\n\ntop = 10 ** 9\nbottom = 1\nwhile top - bottom > 1:\n    mid = (top + bottom) // 2\n    if cost(mid) <= X:\n        bottom = mid\n    else:\n        top = mid\nprint(bottom)", "a,b,x=map(int,input().split())\ndef is_ok(arg):\n    return a*arg+b*len(str(arg))<= x\ndef meguru_bisect(ok, ng):\n    while (abs(ok - ng) > 1):\n        mid = (ok + ng) // 2\n        if is_ok(mid):\n            ok = mid\n        else:\n            ng = mid\n    return ok\nprint(meguru_bisect(0,10**9+1))", "A, B, X = map(int, input().split())\n\n# \u4e8c\u5206\u63a2\u7d22\uff01\n# \u4e8c\u5206\u63a2\u7d22\u3068\u306f\u3001\u81ea\u7136\u6570N\u306b\u5bfe\u3057\u3066\u3001\u5358\u8abf\u5897\u52a0\u306a\u5f0ff(N)\u304c\u3042\u308b\u3068\u304d\u3001\n# f(N)<=X \u3092\u6e80\u305f\u3059\u6700\u5927\u306eN\u3092\u6c42\u3081\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\n\n# \u5177\u4f53\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\uff1a\n# \u5fc5\u305a f(left)<=X \u3092\u6e80\u305f\u3059 left \u3068\u3001\n# \u5fc5\u305a f(right)>X \u3092\u6e80\u305f\u3059 right \u3092\u53d6\u308b\n# \u4ee5\u4e0b\u3092\u7e70\u308a\u8fd4\u3059\n# mid=(left+right)/2 \u306b\u5bfe\u3057\u3066\u3001\n# f(mid)<=X \u306e\u3068\u304d\u3001left=mid\n# f(mid)>X \u306e\u3068\u304d\u3001right=mid\n# left\u306f\u5e38\u306bf(left)<=X\u3092\u6e80\u305f\u3057\u3001right\u306f\u5e38\u306bf(right)>X\u3092\u6e80\u305f\u3059\n# \u6700\u7d42\u7684\u306b\u3001left\u306ff(N)<=X\u3092\u6e80\u305f\u3059\u6700\u5927\u306eN\u306b\u3001right\u306ff(N)>X\u3092\u6e80\u305f\u3059\u6700\u5c0f\u306eN\u306b\u3001\u305d\u308c\u305e\u308c\u53ce\u675f\u3059\u308b\n\n# \u4eca\u56de\u306ff(N)=A*N+B*d(N)\ndef price(N):\n  return A*N + B*len(str(N)) # len(str(N)) => N\u306e\u6841\u6570\u304c\u6c42\u307e\u308b\n\nleft = 0\nright = 10 ** 9 + 1\nwhile right - left > 1:\n  mid = (left + right) // 2\n  if price(mid) <= X: left = mid\n  else: right = mid\nprint(left)", "a, b, x = map(int, input().split())\n\nminNumber, maxNumber = 0, 10**9+1\nanswer = 0\nwhile(minNumber+1 < maxNumber):\n    n = (minNumber+maxNumber)//2\n    if a*n + b*len(str(n)) > x:\n        maxNumber = n\n    else:\n        minNumber = n\n\nprint(minNumber)", "A,B,X = map(int,input().split())\nans = 0\n\ndef cost(A,B,N):\n    return A*N + B*len(str(N))\n\n\nhead = 0\ntail = 10**9+1\n\n\nwhile head <= tail:\n    center = (head+tail) // 2\n    \n    if tail - head <= 10:\n        tem = head\n        break\n    elif cost(A,B,center) < X:\n        head = center + 1\n    elif cost(A,B,center) > X:\n        tail = center - 1\n        \nfor N in range(max(0,tem-10),min(tem+10,10**9+1)):\n    if cost(A,B,N) <= X:\n        ans = N\n\nprint(ans)", "from decimal import * \na,b,x = list(map(int,input().split()))\n\nans = 0\nd = 0\n\nfor i in range(10,0,-1):\n    left = x - b*i\n    if(left >= a*pow(10,i-1)):\n        d = i\n        break\n\n    \nif(d==0):\n    print((0))\nelif(d==10):\n    print((10**9))\nelse:\n    left = x - b*d\n    left = Decimal(left) / Decimal(a)\n    ans = int(left)\n    if(ans>=pow(10,d)):\n        ans = pow(10,d)-1\n    print(ans)\n\n\n    \n", "a, b, x = map(int, input().split())\nlow = 0\nhigh = 10**9\nif a*10**9 + b*10 <= x:\n    print(high)\nelse:\n    while high - low > 1:\n        n = (low + high)//2\n        if a*n + b*len(str(n)) <= x:\n            low = n\n        else:\n            high = n\n    print(low)", "A, B, X = map(int, input().split(' '))\n\ndef cost(N):\n    return A * N + B * len(str(N))\n\nif cost(0) > X:\n    print(0)\n    return\nif cost(10 ** 9) <= X:\n    print(10 ** 9)\n    return\n\ntop = 10 ** 9\nbottom = 1\nwhile top - bottom > 1:\n    mid = (top + bottom) // 2\n    if cost(mid) <= X:\n        bottom = mid\n    else:\n        top = mid\nprint(bottom)", "A,B,X=list(map(int,input().split()))\n\nl=0\nr=10**9\nwhile r-l>1:\n    c=(r+l)//2\n    if X>=A*c+B*len(str(c)):\n        l=c\n    else:\n        r=c\nans=l\n\nm=10**9\nif X>=A*m+B*10:\n    ans=m\n\nprint(ans)\n", "A,B,X=map(int,input().split())\nD=min(10,X//B)\nflag=1\nwhile X-B*D>0:\n    N=(X-B*D)//A\n    if N>=10**(D-1):\n        N=min(N,10**D-1)\n        break\n    if D<1:\n        flag=0\n        break\n    D-=1\nif N>10**9:\n    N=10**9\nprint(N if flag else flag)", "a, b, x = map(int, input().split())\n\nupper = 10**9 + 1\nbottom = 0\n\nwhile upper - bottom > 1:\n    middle = (upper + bottom) // 2\n    if a * middle + b * len(str(middle)) <= x:\n        bottom = middle\n    else:\n        upper = middle\n\nprint(bottom)", "import sys\n\ninput = sys.stdin.readline\na, b, x= map(int, input().split())\nmax_number = 10**9 + 1\nmin_number = 0\n\ndef is_ok(n):\n    money = a * n + b * len(str(n))\n    if money <= x:\n        return True\n    else:\n        return False\n    \n\n\n'''\n\u521d\u671f\u5024\u306eng,ok\u3092\u53d7\u3051\u53d6\u308a,is_ok\u3092\u6e80\u305f\u3059\u6700\u5c0f(\u6700\u5927)\u306eok\u3092\u8fd4\u3059\n\u307e\u305ais_ok\u3092\u5b9a\u7fa9\u3059\u3079\u3057\nng ok \u306f  \u3068\u308a\u5f97\u308b\u6700\u5c0f\u306e\u5024-1 \u3068\u308a\u5f97\u308b\u6700\u5927\u306e\u5024+1\n\u6700\u5927\u6700\u5c0f\u304c\u9006\u306e\u5834\u5408\u306f\u3088\u3057\u306a\u306b\u3072\u3063\u304f\u308a\u8fd4\u3059\n'''\ndef meguru_bisect(ng, ok):\n    while (abs(ok - ng) > 1):\n        mid = (ok + ng) // 2\n        if is_ok(mid):\n            ok = mid\n        else:\n            ng = mid\n    return ok\n\nans = meguru_bisect(max_number,min_number)\nprint(ans)", "a,b,x = map(int,input().split())\n\nlo = 1\nhi = 10**9\nidx = 0\nwhile lo<=hi:\n    idx = (lo+hi)//2\n    m = a*idx + b*len(str(idx))\n    if m==x:\n        hi = idx\n        break\n    elif m>x:\n        hi = idx - 1\n    else:\n        lo = idx + 1\nprint(hi)", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time, copy\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\n\nstdin = sys.stdin\n\nni = lambda: int(ns())\nna = lambda: list(map(int, stdin.readline().split()))\nns = lambda: stdin.readline().rstrip()  # ignore trailing spaces\n\nA, B, X = na()\nans = 0\nfor dn in range(18 + 1):\n    s = X - dn * B\n    tmp = s // A\n    N = min(tmp, 10**9)\n    if len(str(N)) == dn:\n        ans = max(ans, N)\n    else:\n        t = 10 ** dn - 1\n        if N >= t:\n            ans = max(ans, t)\nprint(min(ans, 10 ** 9))", "a, b, x = map(int, input().split())\narr = []\n\nif x >= a * 10 ** 9 + b * 10:\n    print(10 ** 9)\n    return\n\nelif x < a + b:\n    print(0)\n    return\n    \nelse:\n    for i in range(1, 10):\n        n = (x - b * i)//a\n        if len(str(n)) > i:\n          arr.append(10**i - 1)\n\n        if a * n + b * len(str(n)) <= x and len(str(n)) == i:\n            arr.append(n)\n\nprint(max(arr))", "#!/usr/bin/env python3\n\ndef is_ok(arg, a, b, x):\n    return True if a * arg + b * len(str(arg)) <= x else False\n\n\ndef meguru_bisect(ok, ng, a, b, x):\n\n    while (abs(ok - ng) > 1):\n        mid = (ok + ng) // 2\n        if is_ok(mid, a, b, x):\n            ok = mid\n        else:\n            ng = mid\n    return ok\n\n\ndef main():\n    a, b, x = list(map(int, input().split()))\n    ans = meguru_bisect(0, 10**9 + 1, a, b, x)\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math\n\ndef calcMaxNum(minCandidate:int,maxCandidate:int,A,B,X):\n\tif(A == 0 and B == 0):\n\t\tprint(10**9)\n\t\treturn\n\tif(maxCandidate >= 10**9):\n\t\tmaxCandidate = 10**9\n\tif(minCandidate > 10**9):\n\t\tminCandidate = 10**9\n\tif(minCandidate < 1):\n\t\tminCandidate = 1\n\tcurrentMax = 0\n\tfor i in range(minCandidate, maxCandidate + 1):\n\t\tamount = A * i + B * len(str(i))\n\t\tif(X > amount):\n\t\t\tcurrentMax = i\n\t\telif (X == amount):\n\t\t\tprint(i)\n\t\t\treturn\n\t\telse:\n\t\t\tprint(currentMax)\n\t\t\treturn\n\tprint(currentMax)\n\treturn\n\nINPUT = list(map(int, input().split()))\nA = INPUT[0]\nB = INPUT[1]\nX = INPUT[2]\nmaxCandidate = 10**9\nminCandidate = 0\nif(A != 0):\n\tmaxCandidate = math.ceil(X / A)\n\tminCandidate = math.floor((X - 9 * B) / A) - 1\nelse:\n\tminCandidate = X - 9 * B - 1\n\ncalcMaxNum(minCandidate,maxCandidate,A,B,X)", "A, B, X = map(int, input().split())\nleft, right = 0, int(X/A)\nwhile (right - left) > 1:\n\tmid = int((left + right) / 2)\n\tif (mid*A)+(len(str(mid))*B) <= X:\n\t\tleft = mid\n\telse:\n\t\tright = mid\nif left <= X:\n\tif left >= 10**9:\n\t\tprint(10**9)\n\telse:\n\t\tprint(left)\nelse:\n\tprint(0)", "#from statistics import median\n#import collections\n#aa = collections.Counter(a) # list to list || .most_common(2)\u3067\u6700\u5927\u306e2\u500b\u3068\u308a\u3060\u305b\u308b\u304a a[0][0]\nfrom fractions import gcd\nfrom itertools import combinations,permutations,accumulate, product # (string,3) 3\u56de\n#from collections import deque\nfrom collections import deque,defaultdict,Counter\nimport decimal\nimport re\nimport math\nimport bisect\n#\n#\n#\n# python\u3067\u7121\u7406\u306a\u3068\u304d\u306f\u3001pypy\u3067\u3084\u308b\u3068\u6b63\u89e3\u3059\u308b\u304b\u3082\uff01\uff01\n#\n#\n# my_round_int = lambda x:np.round((x*2 + 1)//2)\n# \u56db\u6368\u4e94\u5165g\n#\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u7cfb\n# int min_y = max(0, i - 2), max_y = min(h - 1, i + 2);\n# int min_x = max(0, j - 2), max_x = min(w - 1, j + 2);\n#\n#\nimport sys\nsys.setrecursionlimit(10000000)\nmod = 10**9 + 7\n#mod = 9982443453\n#mod = 998244353\nfrom sys import stdin\nreadline = stdin.readline\ndef readInts():\n  return list(map(int,readline().split()))\ndef readTuples():\n    return tuple(map(int,readline().split()))\ndef I():\n  return int(readline())\na,b,x = readInts()\nok = 0;ng = 10**9 + 1\n\ndef is_ok(mid):\n    if a * mid + b * len(str(mid)) <= x:\n        return True\n    else:\n        return False\n\nwhile abs(ok-ng) > 1:\n    mid = (ok+ng)//2\n    if is_ok(mid):\n        ok = mid\n    else:\n        ng = mid\nprint(ok)\n", "A,B,X = list(map(int, input().split()))\nminimum = 0\nmaximum = 10**9+1\n\nwhile maximum - minimum > 1:\n    medium = (maximum + minimum) // 2\n    if A*medium + B*len(str(medium)) > X:\n        maximum = medium\n    else:\n        minimum = medium\nprint(minimum)\n\n", "A, B, X = map(int, input().split(' '))\ndef cost(N):\n    return A * N + B * len(str(N))\n\nif cost(0) >= X:\n    print(0)\n    return\n\nif cost(10 ** 9) <= X:\n    print(10 ** 9)\n    return    \n\nbottom = 1\ntop = 10 ** 9\nwhile top - bottom > 1:\n    mid = (top + bottom) // 2\n    if cost(mid) <= X:\n        bottom = mid\n    else:\n        top = mid\nprint(bottom)", "a,b,x=map(int,input().split())\nls = []\nfor i in range(1,10):\n    l,r = 10**(i-1), 10**i-1\n    y=(x-b*i)//a\n    for _ in range(10000):\n        m = (l+r)/2\n        if y == m:\n            break\n        elif y < m:\n            r = m\n        else:\n            l = m\n    m = round(m)\n    for n in [m-1,m,m+1]:\n        if a*n+b*len(str(n)) <= x:\n            ls.append(n)\nprint(max(ls) if ls else 0)", "a, b, x = map(int, input().split())\n\nl, r = 0, 10**9+1\nwhile r-l > 1:\n    m = (l+r)//2\n    if a*m+b*len(str(m))<=x:\n        l = m\n    else:\n        r = m\nprint(l)", "import sys\ninput = sys.stdin.readline\n\n#n = int(input())\n#l = list(map(int, input().split()))\n\n'''\na=[]\nb=[]\nfor i in range():\n    A, B = map(int, input().split())\n    a.append(A)   \n    b.append(B)'''\n\na,b,x=map(int, input().split())\nif a*10**9+b*10<x:\n    print(10**9)\n    return\n\n\ndef bisearch(n):\n    left=1\n    right=10**9\n    maxbuy=0\n    while left<=right:\n        mid=(left+right)//2\n        now=a*mid+b*len(str(mid))\n        if now<=x and now>maxbuy:\n            maxbuy=mid\n        if now>x: right=mid-1\n        else: left=mid+1\n    return maxbuy\n\nprint(bisearch(x))", "# \u554f\u984c\uff1ahttps://atcoder.jp/contests/abc146/tasks/abc146_c\n\ndef buy_an_integer(a, b, x, l, r):\n    c = (l + r) // 2\n    price = a * c + b * len(str(c))\n    if price > x:\n        if c == r:\n            return c\n        return buy_an_integer(a, b, x, l, c)\n    else:\n        if c == l:\n            return c\n        return buy_an_integer(a, b, x, c, r)\n\n\ndef main():\n    a, b, x = list(map(int, input().strip().split()))\n    if a + b > x:\n        return 0\n    if a * (10 ** 9) + b * 10 < x:\n        return 10 ** 9\n    return buy_an_integer(a, b, x, 0, 10 ** 9)\n\n\nif __name__  == '__main__':\n    print((main()))\n\n", "A, B, X = map(int, input().split())\n\ndef d(n):\n    return len(str(n))\n\nN = 10 ** 9 + 1\nup = N\ndown = 0\nwhile True:\n    mid = (down + up) // 2\n    if mid == down:\n        break\n    if X < A * mid + B * d(mid):\n        up = mid\n    else:\n        down = mid\nprint(down)", "A, B, X = map(int, input().split())\n\ndef test(N):\n  L = len(str(N))\n  return A * N + B * L <= X\n\n#\u4e8c\u5206\u63a2\u7d22\nleft = 0\nright = 10 ** 30\nwhile left + 1 < right:\n  x = (left + right) // 2\n  if test(x):\n    left = x\n  else:\n    right = x\nans = left\nif ans >= 10 ** 9:\n  ans = 10 ** 9\nprint(ans)", "# https://atcoder.jp/contests/abc146/tasks/abc146_c\n# \u4e8c\u90e8\u63a2\u7d22\n\na,b,x=map(int,input().split())\ni = 1\nlow = 0\nhigh = 10**9 +1\nwhile low <= high and i <= 100:\n    mid = (low + high)//2\n    if (a*mid+b*len(str(mid)))>x:\n        high = mid\n    else:\n        low = mid\n    i += 1\nprint(low)", "A,B,X = map(int,input().split())\nans = 0\nfor i in range(1,11):\n    N = min(int(str(9)*i),(X-B*i)//A)\n    ans = max(N,ans)\nans = min(10**9,ans)\nprint(ans)", "a,b,x = map(int, input().split())\n\nmn = 0\nmx = 10**18\n\nwhile mn+1 < mx :\n    mid = (mn + mx) //2\n    price = a*mid + b*len(str(mid))\n    if(price <= x):\n        mn = mid\n    else :\n        mx = mid\n    \nif(mid >= 10**9):\n    print(10**9)\nelse :\n    print(mn)", "A,B,X = map(int,input().split())\n\nL=0\nR=1000000000\n\nwhile R-L > 1:\n  M = (L + R)//2\n  P = A*M + B*len(str(M))\n  if P <= X:\n    L = M\n  else:\n    R = M-1\n\nif R == L:\n  print(L)\nelse:\n  if A*R+B*len(str(R)) <= X:\n    print(R)\n  else:\n    print(L)", "import math\n\na,b,x=list(map(int,input().split()))\nm=1\nif a+b>x:\n    print((0))\nelse:\n    \n    while a*(10**(m-1))+b*m<=x:\n        m+=1\n    m=m-1\n    \n    if m>=10:\n        print((10**9))\n    else:\n        \n        print((min((x-b*m)//a,10**m-1)))\n        \n    \n        \n    \n    \n    \n        \n        \n    \n    \n    \n    \n        \n", "a, b, x = map(int, input().split())\n\nmax_val, min_val = 10**9+1, 0\nwhile max_val - min_val > 1:\n    mid_val = (max_val + min_val) // 2\n    c = a*mid_val + b*len(str(mid_val))\n    if c <= x:\n        min_val = mid_val\n    else:\n        max_val = mid_val\nprint(min_val)", "A, B, X = list(map(int, input().split()))\nok = 0\nng = 10 ** 9 + 1\nwhile abs(ok - ng) > 1:\n    N = (ok + ng) // 2\n    digit = len(str(N))\n    if A * N + B * digit <= X:\n        ok = N\n    else:\n        ng = N\nprint(ok)\n"]