["\n\nn, r = map(int, input().split())\n\n# a[i] = [a_i, b_i]\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\n# sort a by a_i\na.sort(key=lambda x: x[0])\n\n# max_n = max number of projects\nmax_n = 0\n# r_max = max rating after completing projects\nr_max = r\n\nfor i in range(n):\n    if r_max >= a[i][0]:\n        r_max += a[i][1]\n        max_n += 1\n    else:\n        break\n\nprint(max_n)", "\n\nimport sys\n\ndef Polycarp_and_the_best_offers(n, r, a, b):\n\tdp = [0] * (r + 1)\n\n\tfor i in range(n):\n\t\tfor j in range(r, a[i] - 1, -1):\n\t\t\tdp[j] = max(dp[j], dp[j - a[i]] + b[i])\n\n\treturn sum(1 for x in dp if x >= 0)\n\nn, r = map(int, sys.stdin.readline().split())\na = []\nb = []\n\nfor i in range(n):\n\tai, bi = map(int, sys.stdin.readline().split())\n\ta.append(ai)\n\tb.append(bi)\n\nprint(Polycarp_and_the_best_offers(n, r, a, b))", "\n\nfrom sys import stdin\n\nn, r = [int(x) for x in stdin.readline().split()]\na = []\nb = []\nfor i in range(n):\n    ai, bi = [int(x) for x in stdin.readline().split()]\n    a.append(ai)\n    b.append(bi)\n\ndp = [0] * (r + 1)\nfor i in range(r + 1):\n    for j in range(n):\n        if i >= a[j] and dp[i - a[j]] + b[j] > 0:\n            dp[i] = max(dp[i], dp[i - a[j]] + b[j])\n\nprint(max(dp))", "\n\nn, r = map(int, input().split())\nprojects = []\nfor i in range(n):\n    projects.append(list(map(int, input().split())))\n\nprojects.sort(key=lambda x: x[1])\n\ncount = 0\nfor project in projects:\n    if r >= project[0]:\n        count += 1\n        r += project[1]\nprint(count)", "\n\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = [0] * n\n    b = [0] * n\n    for i in range(n):\n        a[i], b[i] = map(int, sys.stdin.readline().split())\n\n    dp = [0] * (r + 1)\n    for i in range(n):\n        for j in range(r, a[i] - 1, -1):\n            dp[j] = max(dp[j], dp[j - a[i]] + b[i])\n\n    cnt = 0\n    for i in range(r + 1):\n        if dp[i] >= 0:\n            cnt += 1\n\n    print(cnt)\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n, r = [int(x) for x in input().split()]\n    projects = []\n    for i in range(n):\n        projects.append([int(x) for x in input().split()])\n    projects.sort(key=lambda x: x[0], reverse=True)\n    count = 0\n    for a,b in projects:\n        if r - a >= 0:\n            r += b\n            count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        a, b = map(int, input().split())\n        projects.append((a, b))\n    projects.sort()\n    num_proj = 0\n    for p in projects:\n        if r >= p[0]:\n            r += p[1]\n            num_proj += 1\n        else:\n            break\n    print(num_proj)\n\n\nif __name__ == '__main__':\n    main()"]