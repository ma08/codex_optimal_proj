["\n\ns = input()\n\nif (s[0] == 'R' or s[0] == 'U' or s[0] == 'D') and (s[1] == 'L' or s[1] == 'U' or s[1] == 'D'):\n    for i in range(2, len(s)):\n        if i % 2 == 0:\n            if s[i] != 'L' and s[i] != 'U' and s[i] != 'D':\n                print('No')\n                exit()\n        else:\n            if s[i] != 'R' and s[i] != 'U' and s[i] != 'D':\n                print('No')\n                exit()\n    print('Yes')\nelse:\n    print('No')", "\n\nS = input()\n\noddList = ['R', 'U', 'D']\nevenList = ['L', 'U', 'D']\n\nif all(s in oddList for s in S[::2]) and all(s in evenList for s in S[1::2]):\n    print('Yes')\nelse:\n    print('No')", "\n\ns = input()\n\nif (s[::2] == 'RUD') or (s[::2] == 'LUD') or (s[::2] == 'UD'):\n    print('Yes')\nelse:\n    print('No')", "\n\ns = input()\n\nif all(i in \"RUD\" for i in s[::2]) and all(i in \"LUD\" for i in s[1::2]):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "\n\ndef main():\n    s = input()\n    odd = ['R', 'U', 'D']\n    even = ['L', 'U', 'D']\n    for i, c in enumerate(s, 1):\n        if i % 2:\n            if c not in odd:\n                print('No')\n                return\n        else:\n            if c not in even:\n                print('No')\n                return\n    print('Yes')\n\nif __name__ == '__main__':\n    main()", "\n\nS = input()\n\nodd = ['R', 'U', 'D']\neven = ['L', 'U', 'D']\n\nfor i in range(len(S)):\n    if i % 2 == 0:\n        if S[i] not in even:\n            print('No')\n            break\n    else:\n        if S[i] not in odd:\n            print('No')\n            break\nelse:\n    print('Yes')", "\n\ns = input()\n\nif (s[1::2] == \"RUD\" or s[1::2] == \"UDR\" or s[1::2] == \"DRU\" or s[1::2] == \"RUD\") and (s[::2] == \"LUD\" or s[::2] == \"UDL\" or s[::2] == \"DLU\" or s[::2] == \"LUD\"):\n    print(\"Yes\")\nelse:\n    print(\"No\")"]