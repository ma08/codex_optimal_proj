2022-04-13 23:44:27.195697 """
Mirko is a great code breaker. He knows any cipher in the world can be broken by frequency analysis. He has completely the wrong idea what frequency analysis is, however.

He intercepted an enemy message. The message consists of $N$ numbers, smaller than or equal to $C$. Mirko belives freqency analysis consists of sorting this sequence so that more frequent numbers appear before less frequent ones.

Formally, the sequence must be sorted so that given any two numbers $X$ and $Y$, $X$ appears before $Y$ if the number of times $X$ appears in the original sequence is larger than the number of time $Y$ does. If the number of appearances is equal, the number whose value appears sooner in the input should appear sooner in the sorted sequence.

Help Mirko by creating a “frequency sorter”.

-----Input-----
First line of input contains two integers, $N$ ($1 \le N \le 1000$), the length of the message, and $C$ ($1 \le C \le 1000000000$), the number from the task description above.

The next line contains $N$ positive integers smaller than or equal to $C$, the message itself.

-----Output-----
The first and only line of output should contain $N$ numbers, the sorted sequence.

-----Examples-----
Sample Input 1:
5 2
2 1 2 1 2
Sample Output 1:
2 2 2 1 1

Sample Input 2:
9 3
1 3 3 3 2 2 2 1 1
Sample Output 2:
1 1 1 3 3 3 2 2 2
"""
2022-04-13 23:44:27.195706 --------------------------
2022-04-13 23:44:41.925227 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nN, C = map(int, input().split())\nnumbers = list(map(int, input().split()))\n\n# Create a dictionary of the counts of each number\ncounts = {}\nfor number in numbers:\n    if number not in counts:\n        counts[number] = 0\n    counts[number] += 1\n\n# Create a list of the counts of each number, sorted by the number of counts\ncounts_list = sorted(counts.items(), key=lambda x: (x[1], x[0]))\n\n# Create a list of the sorted numbers\nsorted_numbers = []\nfor count in counts_list:\n    for _ in range(count[1]):\n        sorted_numbers.append(count[0])\n\n# Print the sorted numbers\nprint(*sorted_numbers)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef frequency_sort(n, c, nums):\n    counts = [0 for _ in range(c + 1)]\n    for num in nums:\n        counts[num] += 1\n    output = []\n    for i in range(c + 1):\n        for j in range(counts[i]):\n            output.append(i)\n    return output\n\ndef main():\n    n, c = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    output = frequency_sort(n, c, nums)\n    print(' '.join([str(num) for num in output]))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n#from itertools import groupby\n#n,c = map(int,input().split())\n#l = list(map(int,input().split()))\n#for i in range(1,c+1):\n#    if l.count(i)>0:\n#        print(str(i)*l.count(i),end=\" \")\n\nfrom collections import Counter\nn,c = map(int,input().split())\nl = list(map(int,input().split()))\nd = dict(Counter(l))\nfor i in range(1,c+1):\n    if i in d.keys():\n        print(str(i)*d[i],end=\" \")"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn, c = map(int, input().split())\nmessage = list(map(int, input().split()))\n\nnum_count = [0] * (c + 1)\nfor num in message:\n    num_count[num] += 1\n\nsorted_message = []\nfor i in range(c, 0, -1):\n    for j in range(num_count[i]):\n        sorted_message.append(i)\n\nprint(*sorted_message)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, c = [int(x) for x in sys.stdin.readline().split()]\n    nums = [int(x) for x in sys.stdin.readline().split()]\n    counts = [0] * (c+1)\n    for num in nums:\n        counts[num] += 1\n    for i in range(1, c+1):\n        for j in range(counts[i]):\n            print(i, end=\" \")\n    print()\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\nN, C = [int(i) for i in sys.stdin.readline().split()]\nmessage = [int(i) for i in sys.stdin.readline().split()]\n\n# Find the frequency of each number in the message\nfrequency = [0] * (C + 1)\nfor i in message:\n    frequency[i] += 1\n\n# Create the sorted message\nsorted_message = []\nfor i in range(C + 1):\n    for j in range(frequency[i]):\n        sorted_message.append(i)\n\n# Print the sorted message\nprint(' '.join([str(i) for i in sorted_message]))"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    N, C = [int(i) for i in input().split()]\n    nums = [int(i) for i in input().split()]\n\n    letter_count = [0] * (C + 1)\n    for i in nums:\n        letter_count[i] += 1\n\n    sorted_nums = []\n    for i in range(C + 1):\n        sorted_nums += [i] * letter_count[i]\n\n    print(' '.join([str(i) for i in sorted_nums]))\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1649893467,
  "id": "cmpl-4wgwthAQbOjaCOFSeeoWNH2F9RVty",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 23:44:41.925540 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nN, C = map(int, input().split())\nnumbers = list(map(int, input().split()))\n\n# Create a dictionary of the counts of each number\ncounts = {}\nfor number in numbers:\n    if number not in counts:\n        counts[number] = 0\n    counts[number] += 1\n\n# Create a list of the counts of each number, sorted by the number of counts\ncounts_list = sorted(counts.items(), key=lambda x: (x[1], x[0]))\n\n# Create a list of the sorted numbers\nsorted_numbers = []\nfor count in counts_list:\n    for _ in range(count[1]):\n        sorted_numbers.append(count[0])\n\n# Print the sorted numbers\nprint(*sorted_numbers)"
}
2022-04-13 23:44:41.925582 REASON stop
2022-04-13 23:44:41.925910 test/intro-questions.txt_dir/4854/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4854/solutions.json'
2022-04-13 23:44:41.925924 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef frequency_sort(n, c, nums):\n    counts = [0 for _ in range(c + 1)]\n    for num in nums:\n        counts[num] += 1\n    output = []\n    for i in range(c + 1):\n        for j in range(counts[i]):\n            output.append(i)\n    return output\n\ndef main():\n    n, c = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    output = frequency_sort(n, c, nums)\n    print(' '.join([str(num) for num in output]))\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 23:44:41.926022 REASON stop
2022-04-13 23:44:41.926275 test/intro-questions.txt_dir/4854/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4854/solutions.json'
2022-04-13 23:44:41.926288 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n#from itertools import groupby\n#n,c = map(int,input().split())\n#l = list(map(int,input().split()))\n#for i in range(1,c+1):\n#    if l.count(i)>0:\n#        print(str(i)*l.count(i),end=\" \")\n\nfrom collections import Counter\nn,c = map(int,input().split())\nl = list(map(int,input().split()))\nd = dict(Counter(l))\nfor i in range(1,c+1):\n    if i in d.keys():\n        print(str(i)*d[i],end=\" \")"
}
2022-04-13 23:44:41.926325 REASON stop
2022-04-13 23:44:41.940063 test/intro-questions.txt_dir/4854/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4854/solutions.json'
2022-04-13 23:44:41.940095 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn, c = map(int, input().split())\nmessage = list(map(int, input().split()))\n\nnum_count = [0] * (c + 1)\nfor num in message:\n    num_count[num] += 1\n\nsorted_message = []\nfor i in range(c, 0, -1):\n    for j in range(num_count[i]):\n        sorted_message.append(i)\n\nprint(*sorted_message)"
}
2022-04-13 23:44:41.940169 REASON stop
2022-04-13 23:44:41.966364 test/intro-questions.txt_dir/4854/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4854/solutions.json'
2022-04-13 23:44:41.966386 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, c = [int(x) for x in sys.stdin.readline().split()]\n    nums = [int(x) for x in sys.stdin.readline().split()]\n    counts = [0] * (c+1)\n    for num in nums:\n        counts[num] += 1\n    for i in range(1, c+1):\n        for j in range(counts[i]):\n            print(i, end=\" \")\n    print()\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 23:44:41.966445 REASON stop
2022-04-13 23:44:41.979343 test/intro-questions.txt_dir/4854/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4854/solutions.json'
2022-04-13 23:44:41.979365 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\nN, C = [int(i) for i in sys.stdin.readline().split()]\nmessage = [int(i) for i in sys.stdin.readline().split()]\n\n# Find the frequency of each number in the message\nfrequency = [0] * (C + 1)\nfor i in message:\n    frequency[i] += 1\n\n# Create the sorted message\nsorted_message = []\nfor i in range(C + 1):\n    for j in range(frequency[i]):\n        sorted_message.append(i)\n\n# Print the sorted message\nprint(' '.join([str(i) for i in sorted_message]))"
}
2022-04-13 23:44:41.979418 REASON stop
2022-04-13 23:44:41.980037 test/intro-questions.txt_dir/4854/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4854/solutions.json'
2022-04-13 23:44:41.980053 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    N, C = [int(i) for i in input().split()]\n    nums = [int(i) for i in input().split()]\n\n    letter_count = [0] * (C + 1)\n    for i in nums:\n        letter_count[i] += 1\n\n    sorted_nums = []\n    for i in range(C + 1):\n        sorted_nums += [i] * letter_count[i]\n\n    print(' '.join([str(i) for i in sorted_nums]))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 23:44:41.980102 REASON stop
2022-04-13 23:44:41.995672 test/intro-questions.txt_dir/4854/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4854/solutions.json'
