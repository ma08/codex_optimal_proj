["\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip()\n        keyword = keyword.replace(\"-\", \" \").lower()\n        keywords.append(keyword)\n    print(len(set(keywords)))\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n = int(input())\n    keywords = set()\n    for i in range(n):\n        keyword = input().lower().replace(\"-\", \" \")\n        keywords.add(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keywords.append(input().lower().replace(\"-\", \" \"))\n    #print(keywords)\n    keywords = list(set(keywords))\n    print(len(keywords))\n\nmain()", "\n\nn = int(raw_input())\nkeywords = []\nfor i in range(n):\n    keywords.append(raw_input().lower().replace(\"-\", \" \"))\n\nkeywords = list(set(keywords))\n\nprint len(keywords)", "\n\n#unfinished\ndef keyword_similar(keywords):\n    similar = []\n    for i in range(len(keywords)):\n        for j in range(len(keywords)):\n            if keywords[i] == keywords[j]:\n                continue\n            if keywords[i].lower() == keywords[j].lower():\n                similar.append([keywords[i], keywords[j]])\n                keywords[i] = \"*\"\n                keywords[j] = \"*\"\n    return [len(keywords) - len(similar), similar]\n\nif __name__ == \"__main__\":\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keywords.append(input())\n    print(keyword_similar(keywords))", "\n\nn = int(input())\n\nkeywords = []\n\nfor _ in range(n):\n    keywords.append(input().lower().replace('-', ' '))\n\nprint(len(set(keywords)))", "\n\ndef main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keyword = input().lower().replace(\"-\", \" \")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()"]