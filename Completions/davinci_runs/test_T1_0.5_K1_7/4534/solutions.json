["class Solution:\n     def getRow(self, k):\n         \"\"\"\n         :type k: int\n         :rtype: List[int]\n         \"\"\"\n         res = [1]\n         cur = k\n         for i in range(k//2):\n             res += res[-1] * cur // (i+1),\n             cur -= 1\n         if k % 2 == 0:\n             res = res + res[:-1][::-1]\n         else:\n             res = res + res[::-1]\n         return res\n", "class Solution:\n     def getRow(self, rowIndex):\n         \"\"\"\n         :type rowIndex: int\n         :rtype: List[int]\n         \"\"\"\n         a=[1]\n         i=0\n         b=[1]\n         while i<rowIndex:\n             a.append(0)\n             b=a[:]\n             for j in  range(i+2):\n                 b[j]=a[j]+a[i-j+1]\n             a=b\n             i+=1\n         return b\n         \n", "class Solution:\n     def getRow(self, rowIndex):\n         \"\"\"\n         :type rowIndex: int\n         :rtype: List[int]\n         \"\"\"\n         res = [1]\n         for i in range(1, rowIndex + 1):\n             res += [1]\n             for j in range(len(res) - 2, -1, -1):\n                 if j > 0:\n                     res[j] = res[j] + res[j -1]\n                 else:\n                     res[j] = 1\n                     \n         return res\n", "class Solution:\n     def getRow(self, rowIndex):\n         \"\"\"\n         :type rowIndex: int\n         :rtype: List[int]\n         \"\"\"\n         out = [1]\n         for i in range(1,rowIndex+1):\n             temp = []\n             for j in range(0, i-1):\n                 temp.append(out[j]+out[j+1])\n             out = [1]+temp+[1]\n         return out", "class Solution:\n     def getRow(self, rowIndex):\n         \"\"\"\n         :type rowIndex: int\n         :rtype: List[int]\n         \"\"\"\n         l = [1]\n         for i in range(rowIndex):\n             l = [j+k for j, k in zip([0]+l, l+[0])]\n         return l\n", "class Solution:\n     def getRow(self, rowIndex):\n         \"\"\"\n         :type rowIndex: int\n         :rtype: List[int]\n         \"\"\"\n         result=[]\n         for n in range(rowIndex+1):\n             num=1\n             for i in range(n):\n                 num=int(num*(rowIndex-i)/(i+1))\n             result=result+[num]\n         return result\n     \n", "class Solution:\n     def getRow(self, rowIndex):\n         \"\"\"\n         :type rowIndex: int\n         :rtype: List[int]\n         \"\"\"\n         if rowIndex < 0:\n             return list()\n         if rowIndex == 0:\n             return list([1])\n         l = list([1])\n         for i in range(1,rowIndex+1):\n             pre_value = l[0] #1\n             for j in range(1,i):#j = 3\n                 temp = l[j] #1\n                 l[j] = pre_value+l[j] #4\n                 pre_value = temp #1\n             l.append(1)\n         return l\n                 \n             \n", "class Solution:\n     def getRow(self, rowIndex):\n         \"\"\"\n         :type rowIndex: int\n         :rtype: List[int]\n         \"\"\"\n         rows = [1]\n         for i in range(rowIndex):\n             rows = [x+y for x, y in zip([0]+rows, rows+[0])]\n         return rows", "class Solution:\n     def getRow(self, rowIndex):\n         \"\"\"\n         :type rowIndex: int\n         :rtype: List[int]\n         \"\"\"\n         row = [1]\n         for _ in range(rowIndex):\n             row = [x + y for x, y in zip([0]+row, row+[0])]\n         return row", "class Solution:\n     def getRow(self, rowIndex):\n         \"\"\"\n         :type rowIndex: int\n         :rtype: List[int]\n         \"\"\"\n         if rowIndex < 0: return []\n         result = [0 for _ in range(rowIndex+1)]\n         result[0] = 1\n         for i in range(1, rowIndex+1):\n             result[i] = 1\n             for j in range(i-1, 0, -1):\n                 result[j] = result[j] + result[j-1]\n         return result", "class Solution:\n     def getRow(self, rowIndex):\n         \"\"\"\n         :type rowIndex: int\n         :rtype: List[int]\n         \"\"\"\n         i=1\n         res = [1]\n         while rowIndex >=1:\n             res.append(int(res[-1]*rowIndex/i))\n             rowIndex,i = rowIndex-1,i+1\n         return(res)"]