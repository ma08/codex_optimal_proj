2022-04-13 21:08:48.693435 """
You are given two positive integers $a$ and $b$.

In one move, you can change $a$ in the following way:

  Choose any positive odd integer $x$ ($x > 0$) and replace $a$ with $a+x$;  choose any positive even integer $y$ ($y > 0$) and replace $a$ with $a-y$. 

You can perform as many such operations as you want. You can choose the same numbers $x$ and $y$ in different moves.

Your task is to find the minimum number of moves required to obtain $b$ from $a$. It is guaranteed that you can always obtain $b$ from $a$.

You have to answer $t$ independent test cases.


-----Input-----

The first line of the input contains one integer $t$ ($1 \le t \le 10^4$) — the number of test cases.

Then $t$ test cases follow. Each test case is given as two space-separated integers $a$ and $b$ ($1 \le a, b \le 10^9$).


-----Output-----

For each test case, print the answer — the minimum number of moves required to obtain $b$ from $a$ if you can perform any number of moves described in the problem statement. It is guaranteed that you can always obtain $b$ from $a$.


-----Example-----
Input
5
2 3
10 10
2 4
7 4
9 3

Output
1
0
2
2
1



-----Note-----

In the first test case, you can just add $1$.

In the second test case, you don't need to do anything.

In the third test case, you can add $1$ two times.

In the fourth test case, you can subtract $4$ and add $1$.

In the fifth test case, you can just subtract $6$.
"""
2022-04-13 21:08:48.693450 --------------------------
2022-04-13 21:09:04.471774 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        a, b = map(int, input().split())\n        print(cal_steps(a, b))\n\ndef cal_steps(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return a - b\n    if a < b:\n        if (b - a) % 2 == 0:\n            return 1\n        else:\n            return 2\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef fast_input():\n    return sys.stdin.readline().strip()\n\ndef fast_input_int():\n    return int(fast_input())\n\ndef fast_input_ints():\n    return list(map(int, fast_input().split()))\n\ndef main():\n    t = fast_input_int()\n    for _ in range(t):\n        a, b = fast_input_ints()\n        print(0 if a == b else 1 + (b - a - 1) // 2)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        a, b = map(int, input().split())\n        print(min_moves(a, b))\n\ndef min_moves(a, b):\n    moves = 0\n    if a == b:\n        return 0\n    while a < b:\n        if a % 2 == 0:\n            a += 1\n        else:\n            a += 2\n        moves += 1\n    while a > b:\n        if a % 2 == 0:\n            a -= 1\n        else:\n            a -= 2\n        moves += 1\n    return moves\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        a, b = map(int, input().split())\n        if a == b:\n            print(0)\n        elif a < b:\n            if (b-a)%2 == 0:\n                print(1)\n            else:\n                print(2)\n        else:\n            if (a-b)%2 == 0:\n                print(2)\n            else:\n                print(1)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef find_min_moves(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return find_min_moves(a-2, b) + 1\n    if a < b:\n        return find_min_moves(a+1, b) + 1\n\n\nif __name__ == \"__main__\":\n    t = int(input())\n    for _ in range(t):\n        a, b = [int(s) for s in input().split(\" \")]\n        print(find_min_moves(a, b))"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\n# SOLUTION\n# To obtain b from a, you can add odd numbers, subtract even numbers and vice versa.\n# So, you need to find the minimum number of additions and subtractions to get b from a.\n# This can be done by first finding the difference between a and b, and then finding\n# the minimum number of additions and subtractions from that difference.\n\n# Let the difference be x.\n# If x is even, then the minimum number of additions and subtractions is x/2.\n# If x is odd, then the minimum number of additions and subtractions is (x+1)/2.\n\nt = int(input())\n\nfor _ in range(t):\n    a, b = map(int, input().split())\n    x = abs(a - b)\n    if x % 2 == 0:\n        print(x//2)\n    else:\n        print((x+1)//2)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nt = int(input())\n\nfor i in range(t):\n    a,b = map(int,input().split())\n    if a == b:\n        print(0)\n    elif a < b:\n        if abs(a-b)%2 == 1:\n            print(1)\n        else:\n            print(2)\n    else:\n        if abs(a-b)%2 == 1:\n            print(2)\n        else:\n            print(1)"
    }
  ],
  "created": 1649884128,
  "id": "cmpl-4weWGfltz4XN1JqYqNuDLoTPqj2oO",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 21:09:04.472045 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        a, b = map(int, input().split())\n        print(cal_steps(a, b))\n\ndef cal_steps(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return a - b\n    if a < b:\n        if (b - a) % 2 == 0:\n            return 1\n        else:\n            return 2\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 21:09:04.472084 REASON stop
2022-04-13 21:09:04.498955 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef fast_input():\n    return sys.stdin.readline().strip()\n\ndef fast_input_int():\n    return int(fast_input())\n\ndef fast_input_ints():\n    return list(map(int, fast_input().split()))\n\ndef main():\n    t = fast_input_int()\n    for _ in range(t):\n        a, b = fast_input_ints()\n        print(0 if a == b else 1 + (b - a - 1) // 2)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 21:09:04.499144 REASON stop
2022-04-13 21:09:04.499512 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        a, b = map(int, input().split())\n        print(min_moves(a, b))\n\ndef min_moves(a, b):\n    moves = 0\n    if a == b:\n        return 0\n    while a < b:\n        if a % 2 == 0:\n            a += 1\n        else:\n            a += 2\n        moves += 1\n    while a > b:\n        if a % 2 == 0:\n            a -= 1\n        else:\n            a -= 2\n        moves += 1\n    return moves\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 21:09:04.499569 REASON stop
2022-04-13 21:09:04.516966 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        a, b = map(int, input().split())\n        if a == b:\n            print(0)\n        elif a < b:\n            if (b-a)%2 == 0:\n                print(1)\n            else:\n                print(2)\n        else:\n            if (a-b)%2 == 0:\n                print(2)\n            else:\n                print(1)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 21:09:04.517054 REASON stop
2022-04-13 21:09:04.528846 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef find_min_moves(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return find_min_moves(a-2, b) + 1\n    if a < b:\n        return find_min_moves(a+1, b) + 1\n\n\nif __name__ == \"__main__\":\n    t = int(input())\n    for _ in range(t):\n        a, b = [int(s) for s in input().split(\" \")]\n        print(find_min_moves(a, b))"
}
2022-04-13 21:09:04.528950 REASON stop
2022-04-13 21:09:04.529718 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\n# SOLUTION\n# To obtain b from a, you can add odd numbers, subtract even numbers and vice versa.\n# So, you need to find the minimum number of additions and subtractions to get b from a.\n# This can be done by first finding the difference between a and b, and then finding\n# the minimum number of additions and subtractions from that difference.\n\n# Let the difference be x.\n# If x is even, then the minimum number of additions and subtractions is x/2.\n# If x is odd, then the minimum number of additions and subtractions is (x+1)/2.\n\nt = int(input())\n\nfor _ in range(t):\n    a, b = map(int, input().split())\n    x = abs(a - b)\n    if x % 2 == 0:\n        print(x//2)\n    else:\n        print((x+1)//2)"
}
2022-04-13 21:09:04.529780 REASON stop
2022-04-13 21:09:04.530422 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nt = int(input())\n\nfor i in range(t):\n    a,b = map(int,input().split())\n    if a == b:\n        print(0)\n    elif a < b:\n        if abs(a-b)%2 == 1:\n            print(1)\n        else:\n            print(2)\n    else:\n        if abs(a-b)%2 == 1:\n            print(2)\n        else:\n            print(1)"
}
2022-04-13 21:09:04.530490 REASON stop
