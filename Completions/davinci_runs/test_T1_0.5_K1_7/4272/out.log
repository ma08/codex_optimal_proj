2022-04-13 19:42:30.037082 """
We have a string S of length N consisting of uppercase English letters.
How many times does ABC occur in S as contiguous subsequences (see Sample Inputs and Outputs)?

-----Constraints-----
 - 3 \leq N \leq 50
 - S consists of uppercase English letters.

-----Input-----
Input is given from Standard Input in the following format:
N
S

-----Output-----
Print number of occurrences of ABC in S as contiguous subsequences.

-----Sample Input-----
10
ZABCDBABCQ

-----Sample Output-----
2

Two contiguous subsequences of S are equal to ABC: the 2-nd through 4-th characters, and the 7-th through 9-th characters.
"""
2022-04-13 19:42:30.037090 --------------------------
2022-04-13 19:42:44.854929 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nN = int(input())\nS = input()\n\ncount = 0\nfor i in range(N-2):\n    if S[i] == 'A' and S[i+1] == 'B' and S[i+2] == 'C':\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nif __name__ == '__main__':\n    n = int(input())\n    s = input()\n    print(s.count('ABC'))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    N = int(input())\n    S = input()\n    count = 0\n    for i in range(N-2):\n        if S[i] == 'A' and S[i+1] == 'B' and S[i+2] == 'C':\n            count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nN = int(input())\nS = input()\n\ncount = 0\nfor i in range(N - 2):\n    if S[i] == \"A\" and S[i + 1] == \"B\" and S[i + 2] == \"C\":\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\n# -*- coding: utf-8 -*-\n\n# \u5165\u529b\nN = int(input())\nS = input()\n\n# \u6587\u5b57\u5217\u3092\u914d\u5217\u306b\u683c\u7d0d\narray_S = list(S)\n\n# ABC\u304c\u4f55\u5ea6\u73fe\u308c\u308b\u304b\ncounter = 0\n\n# \u914d\u5217\u30921\u3064\u305a\u3089\u3057\u306a\u304c\u3089\u6bd4\u8f03\u3057\u3066\u3044\u304f\nfor i in range(N-2):\n    # ABC\u304c\u73fe\u308c\u305f\u3089\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\n    if array_S[i] == \"A\" and array_S[i+1] == \"B\" and array_S[i+2] == \"C\":\n        counter += 1\n\nprint(counter)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nN = int(input())\nS = input()\n\nprint(S.count('ABC'))"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    N = int(input())\n    S = input()\n    count = 0\n    for i in range(N - 2):\n        if S[i:i+3] == 'ABC':\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1649878950,
  "id": "cmpl-4wdAkBqM19QLwSdieeR3ac8v9z3hC",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 19:42:44.855199 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nN = int(input())\nS = input()\n\ncount = 0\nfor i in range(N-2):\n    if S[i] == 'A' and S[i+1] == 'B' and S[i+2] == 'C':\n        count += 1\n\nprint(count)"
}
2022-04-13 19:42:44.855229 REASON stop
2022-04-13 19:42:44.855637 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nif __name__ == '__main__':\n    n = int(input())\n    s = input()\n    print(s.count('ABC'))"
}
2022-04-13 19:42:44.855743 REASON stop
2022-04-13 19:42:44.856100 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    N = int(input())\n    S = input()\n    count = 0\n    for i in range(N-2):\n        if S[i] == 'A' and S[i+1] == 'B' and S[i+2] == 'C':\n            count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 19:42:44.856149 REASON stop
2022-04-13 19:42:44.881618 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nN = int(input())\nS = input()\n\ncount = 0\nfor i in range(N - 2):\n    if S[i] == \"A\" and S[i + 1] == \"B\" and S[i + 2] == \"C\":\n        count += 1\n\nprint(count)"
}
2022-04-13 19:42:44.881728 REASON stop
2022-04-13 19:42:44.882418 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\n# -*- coding: utf-8 -*-\n\n# \u5165\u529b\nN = int(input())\nS = input()\n\n# \u6587\u5b57\u5217\u3092\u914d\u5217\u306b\u683c\u7d0d\narray_S = list(S)\n\n# ABC\u304c\u4f55\u5ea6\u73fe\u308c\u308b\u304b\ncounter = 0\n\n# \u914d\u5217\u30921\u3064\u305a\u3089\u3057\u306a\u304c\u3089\u6bd4\u8f03\u3057\u3066\u3044\u304f\nfor i in range(N-2):\n    # ABC\u304c\u73fe\u308c\u305f\u3089\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\n    if array_S[i] == \"A\" and array_S[i+1] == \"B\" and array_S[i+2] == \"C\":\n        counter += 1\n\nprint(counter)"
}
2022-04-13 19:42:44.882490 REASON stop
2022-04-13 19:42:44.901781 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nN = int(input())\nS = input()\n\nprint(S.count('ABC'))"
}
2022-04-13 19:42:44.901857 REASON stop
2022-04-13 19:42:44.905479 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    N = int(input())\n    S = input()\n    count = 0\n    for i in range(N - 2):\n        if S[i:i+3] == 'ABC':\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 19:42:44.905562 REASON stop
