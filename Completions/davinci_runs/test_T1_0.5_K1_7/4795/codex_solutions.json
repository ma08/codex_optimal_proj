["\n\nN = int(input())\nP = []\nfor i in range(N):\n    P.append(int(input()))\n\nX = 0\nfor i in range(N):\n    number = 0\n    pow_ = 0\n    while P[i] > 0:\n        number += P[i] % 10\n        pow_ += 1\n        P[i] //= 10\n    X += number ** pow_\n\nprint(X)", "\n\nimport sys\n\ndef main(num_lines, numbers):\n    result = 0\n    for number in numbers:\n        result = result + (int(number[0]) ** int(number[1]))\n    print(result)\n\ndef get_input():\n    num_lines = int(sys.stdin.readline())\n    numbers = []\n    for i in range(num_lines):\n        numbers.append(sys.stdin.readline().split())\n    main(num_lines, numbers)\n\nif __name__ == '__main__':\n    get_input()", "\n\nn = int(input())\n\nX = 0\n\nfor i in range(n):\n    number = input()\n    number_length = len(number)\n    number_1 = int(number[0])\n    number_2 = int(number[-1])\n    X += number_1 ** number_2\n\nprint(X)", "\n\ndef main():\n    n = int(input())\n    x = 0\n    for i in range(n):\n        p = int(input())\n        x += (p // 10)**(p % 10)\n    print(x)\n\nif __name__ == '__main__':\n    main()", "\n\ndef parse_number(n):\n    \"\"\"\n    >>> parse_number(212)\n    (2, 1, 2)\n    >>> parse_number(1253)\n    (1, 2, 53)\n    \"\"\"\n    n_str = str(n)\n    if len(n_str) == 4:\n        return int(n_str[0]), int(n_str[1]), int(n_str[2:])\n    elif len(n_str) == 3:\n        return int(n_str[0]), int(n_str[1]), int(n_str[2])\n    elif len(n_str) == 2:\n        return int(n_str[0]), int(n_str[1]), 0\n    else:\n        return int(n_str[0]), 0, 0\n\ndef compute_number(n1, n2, n3, p1, p2, p3):\n    \"\"\"\n    >>> compute_number(1, 2, 53, 2, 1, 2)\n    1253\n    >>> compute_number(2, 1, 2, 1, 2, 53)\n    212\n    \"\"\"\n    return n1**p1 + n2**p2 + n3**p3\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()\n\n    N = int(raw_input())\n    numbers = []\n    for _ in range(N):\n        numbers.append(int(raw_input()))\n\n    result = 0\n    for number in numbers:\n        n1, n2, n3 = parse_number(number)\n        result += compute_number(n1, n2, n3, 2, 1, 2)\n\n    print result", "\n\nn = int(input())\n\nans = 0\nfor i in range(n):\n    num = input()\n    num_len = len(num)\n    if num_len == 1:\n        ans += int(num) ** 1\n    elif num_len == 2:\n        ans += int(num) ** 2\n    elif num_len == 3:\n        ans += int(num) ** 3\n    elif num_len == 4:\n        ans += int(num) ** 4\n\nprint(ans)", "\n\nN = int(input())\nsum = 0\n\nfor i in range(N):\n    P = input()\n    num = int(P[:-1])\n    pow = int(P[-1])\n    sum += num**pow\n\nprint(sum)"]