["\n\ninputs = []\nfor i in range(10):\n    inputs.append(int(input()) % 42)\n\nprint(len(set(inputs)))", "\n\nnums = []\nfor i in range(10):\n    nums.append(int(input()) % 42)\n\nprint(len(set(nums)))", "\n\ncount = 0\nnum = []\nfor i in range(10):\n    num.append(int(input()) % 42)\nnum = set(num)\nfor i in num:\n    count += 1\nprint(count)", "\n\n#----Solution----\n\n#----Solution 1----\n\n#----Solution 2----\n\n#----Solution 3----\n\n#----Solution 4----", "\n\n#This is a really simple solution but I'm not sure if it's the most efficient.\n#I think it is though.\n\n#This array will keep track of which numbers have been seen.\n#The index is the number modulo 42, and the value is a boolean.\nseen = [False] * 42\n#This variable will keep track of the number of distinct numbers.\ndistinct = 0\n\n#Loop through the 10 numbers.\nfor i in range(10):\n    #Get the number.\n    n = int(input())\n    #Get the number modulo 42.\n    n = n % 42\n    #If this number hasn't been seen yet, then we have a distinct number.\n    if not seen[n]:\n        distinct += 1\n        seen[n] = True\n\n#Print the number of distinct numbers.\nprint(distinct)", "\n\n#Solution\n\ndef distinct(a, b):\n    if a % b == 0:\n        return 1\n    else:\n        return 0\n\ndef main():\n    numbers = []\n    for _ in range(0, 10):\n        numbers.append(int(input()))\n    print(len(set(numbers)) - sum(distinct(numbers[i], 42) for i in range(0, 10)))\n\nif __name__ == '__main__':\n    main()", "\n\nn = []\nfor i in range(10):\n\tn.append(int(input())%42)\n\nprint(len(set(n)))"]