2022-04-13 20:31:33.263952 """
We have weather records at AtCoder Town for some consecutive three days. A string of length 3, S, represents the records - if the i-th character is S, it means it was sunny on the i-th day; if that character is R, it means it was rainy on that day.
Find the maximum number of consecutive rainy days in this period.

-----Constraints-----
 - |S| = 3
 - Each character of S is S or R.

-----Input-----
Input is given from Standard Input in the following format:
S

-----Output-----
Print the maximum number of consecutive rainy days in the period.

-----Sample Input-----
RRS

-----Sample Output-----
2

We had rain on the 1-st and 2-nd days in the period. Here, the maximum number of consecutive rainy days is 2, so we should print 2.
"""
2022-04-13 20:31:33.263961 --------------------------
2022-04-13 20:31:55.647636 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n# \u3053\u308c\u3067\u3082\u89e3\u3051\u308b\u3002\n# print(max(map(len, input().split('S'))))\n\n# \u6587\u5b57\u5217\u30921\u6587\u5b57\u305a\u3064\u898b\u3066\u3044\u304f\n# \u521d\u3081\u306f\u96e8\u306e\u65e5\u304c0\u3067\u3001\u96e8\u306e\u65e5\u306e\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u5909\u6570\"rain\"\u3092\u5ba3\u8a00\n# \u96e8\u306e\u65e5\u304c\u7d9a\u3044\u3066\u3044\u305f\u3089rain\u30921\u305a\u3064\u5897\u3084\u3057\u3066\u3044\u304f\n# \u96e8\u306e\u65e5\u304c\u9014\u5207\u308c\u308b\u3068rain\u3092rain_list\u306b\u8ffd\u52a0\u3057\u3001rain\u30920\u306b\u623b\u3059\n# rain_list\u306b\u306f\u96e8\u306e\u65e5\u304c\u9014\u5207\u308c\u308b\u5ea6\u306b\u96e8\u306e\u65e5\u306e\u6570\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u304f\n# rain_list\u306e\u6700\u5927\u5024\u3092\u51fa\u529b\u3059\u308b\n\nrain_list = []\nrain = 0\nfor i in input():\n    if i == 'R':\n        rain += 1\n    else:\n        rain_list.append(rain)\n        rain = 0\nrain_list.append(rain)\n\nprint(max(rain_list))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ninput_str = input()\n\nmax_rainy_days = 0\nrainy_days = 0\nfor i in range(len(input_str)):\n    if input_str[i] == 'R':\n        rainy_days += 1\n    else:\n        rainy_days = 0\n    if rainy_days > max_rainy_days:\n        max_rainy_days = rainy_days\n\nprint(max_rainy_days)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef main():\n    s = input()\n    if s[0] == 'R' and s[1] == 'R' and s[2] == 'R':\n        print(3)\n    elif s[0] == 'R' and s[1] == 'R' and s[2] == 'S':\n        print(2)\n    elif s[0] == 'R' and s[1] == 'S' and s[2] == 'R':\n        print(2)\n    elif s[0] == 'R' and s[1] == 'S' and s[2] == 'S':\n        print(1)\n    elif s[0] == 'S' and s[1] == 'R' and s[2] == 'R':\n        print(2)\n    elif s[0] == 'S' and s[1] == 'R' and s[2] == 'S':\n        print(1)\n    elif s[0] == 'S' and s[1] == 'S' and s[2] == 'R':\n        print(1)\n    else:\n        print(0)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    # Get input\n    s = input()\n\n    # Initialize variables\n    max_rainy = 0\n    rainy_count = 0\n\n    # Calculate max number of consecutive rainy days\n    for i in range(len(s)):\n        if s[i] == 'R':\n            rainy_count += 1\n        else:\n            if rainy_count > max_rainy:\n                max_rainy = rainy_count\n            rainy_count = 0\n\n    # Print result\n    print(max_rainy)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\n#get input\nweather = input()\n\n#check the number of consecutive rainy days\nmax_rainy = 0\nrainy_days = 0\nfor i in weather:\n    if i == \"R\":\n        rainy_days += 1\n    else:\n        if max_rainy < rainy_days:\n            max_rainy = rainy_days\n        rainy_days = 0\nif max_rainy < rainy_days:\n    max_rainy = rainy_days\n\n#print the result\nprint(max_rainy)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\n# Input\nS = input()\n\n# Initialization\nmax_num_rainy_days = 0\nnum_rainy_days = 0\n\n# Main\nfor i in range(3):\n    if S[i] == 'R':\n        num_rainy_days += 1\n    else:\n        if num_rainy_days > max_num_rainy_days:\n            max_num_rainy_days = num_rainy_days\n        num_rainy_days = 0\n\n# Output\nprint(max(max_num_rainy_days, num_rainy_days))"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    s = input()\n    print(max(len(list(g)) for k, g in itertools.groupby(s) if k == 'R'))\n\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1649881893,
  "id": "cmpl-4wdwDZALC5O3tEP7DAC756xShjYRL",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 20:31:55.647932 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n# \u3053\u308c\u3067\u3082\u89e3\u3051\u308b\u3002\n# print(max(map(len, input().split('S'))))\n\n# \u6587\u5b57\u5217\u30921\u6587\u5b57\u305a\u3064\u898b\u3066\u3044\u304f\n# \u521d\u3081\u306f\u96e8\u306e\u65e5\u304c0\u3067\u3001\u96e8\u306e\u65e5\u306e\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u5909\u6570\"rain\"\u3092\u5ba3\u8a00\n# \u96e8\u306e\u65e5\u304c\u7d9a\u3044\u3066\u3044\u305f\u3089rain\u30921\u305a\u3064\u5897\u3084\u3057\u3066\u3044\u304f\n# \u96e8\u306e\u65e5\u304c\u9014\u5207\u308c\u308b\u3068rain\u3092rain_list\u306b\u8ffd\u52a0\u3057\u3001rain\u30920\u306b\u623b\u3059\n# rain_list\u306b\u306f\u96e8\u306e\u65e5\u304c\u9014\u5207\u308c\u308b\u5ea6\u306b\u96e8\u306e\u65e5\u306e\u6570\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u304f\n# rain_list\u306e\u6700\u5927\u5024\u3092\u51fa\u529b\u3059\u308b\n\nrain_list = []\nrain = 0\nfor i in input():\n    if i == 'R':\n        rain += 1\n    else:\n        rain_list.append(rain)\n        rain = 0\nrain_list.append(rain)\n\nprint(max(rain_list))"
}
2022-04-13 20:31:55.647972 REASON stop
2022-04-13 20:31:55.648388 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ninput_str = input()\n\nmax_rainy_days = 0\nrainy_days = 0\nfor i in range(len(input_str)):\n    if input_str[i] == 'R':\n        rainy_days += 1\n    else:\n        rainy_days = 0\n    if rainy_days > max_rainy_days:\n        max_rainy_days = rainy_days\n\nprint(max_rainy_days)"
}
2022-04-13 20:31:55.648495 REASON stop
2022-04-13 20:31:55.648899 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef main():\n    s = input()\n    if s[0] == 'R' and s[1] == 'R' and s[2] == 'R':\n        print(3)\n    elif s[0] == 'R' and s[1] == 'R' and s[2] == 'S':\n        print(2)\n    elif s[0] == 'R' and s[1] == 'S' and s[2] == 'R':\n        print(2)\n    elif s[0] == 'R' and s[1] == 'S' and s[2] == 'S':\n        print(1)\n    elif s[0] == 'S' and s[1] == 'R' and s[2] == 'R':\n        print(2)\n    elif s[0] == 'S' and s[1] == 'R' and s[2] == 'S':\n        print(1)\n    elif s[0] == 'S' and s[1] == 'S' and s[2] == 'R':\n        print(1)\n    else:\n        print(0)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 20:31:55.648947 REASON stop
2022-04-13 20:31:55.662337 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    # Get input\n    s = input()\n\n    # Initialize variables\n    max_rainy = 0\n    rainy_count = 0\n\n    # Calculate max number of consecutive rainy days\n    for i in range(len(s)):\n        if s[i] == 'R':\n            rainy_count += 1\n        else:\n            if rainy_count > max_rainy:\n                max_rainy = rainy_count\n            rainy_count = 0\n\n    # Print result\n    print(max_rainy)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 20:31:55.662405 REASON stop
2022-04-13 20:31:55.672495 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\n#get input\nweather = input()\n\n#check the number of consecutive rainy days\nmax_rainy = 0\nrainy_days = 0\nfor i in weather:\n    if i == \"R\":\n        rainy_days += 1\n    else:\n        if max_rainy < rainy_days:\n            max_rainy = rainy_days\n        rainy_days = 0\nif max_rainy < rainy_days:\n    max_rainy = rainy_days\n\n#print the result\nprint(max_rainy)"
}
2022-04-13 20:31:55.672607 REASON stop
2022-04-13 20:31:55.673114 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\n# Input\nS = input()\n\n# Initialization\nmax_num_rainy_days = 0\nnum_rainy_days = 0\n\n# Main\nfor i in range(3):\n    if S[i] == 'R':\n        num_rainy_days += 1\n    else:\n        if num_rainy_days > max_num_rainy_days:\n            max_num_rainy_days = num_rainy_days\n        num_rainy_days = 0\n\n# Output\nprint(max(max_num_rainy_days, num_rainy_days))"
}
2022-04-13 20:31:55.673168 REASON stop
2022-04-13 20:31:55.674655 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    s = input()\n    print(max(len(list(g)) for k, g in itertools.groupby(s) if k == 'R'))\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 20:31:55.674709 REASON stop
