["\n\ndef main():\n    \"\"\"\n    1. Get input\n    2. Split the input into two lists\n    3. Reverse the second list\n    4. Join the two lists together\n    5. Convert the string into a list\n    6. Create a loop that runs for the length of the list\n    7. Create a variable that keeps track of the current position in the list\n    8. Create a loop that runs for the length of the input\n    9. If the current position is even and the next position is odd, then swap the two elements\n    10. If the current position is odd and the next position is even, then swap the two elements\n    11. Add 1 to the current position\n    12. Convert the list into a string\n    13. Print the string\n    \"\"\"\n    input_list = input().split()\n    list1 = list(input_list[0])\n    list2 = list(input_list[1])\n    list2.reverse()\n    list3 = list1 + list2\n    for x in range(len(list3)):\n        current_position = 0\n        for y in range(len(list3)):\n            if current_position % 2 == 0 and (current_position + 1) % 2 == 1:\n                list3[current_position], list3[current_position + 1] = list3[current_position + 1], list3[current_position]\n            if current_position % 2 == 1 and (current_position + 1) % 2 == 0:\n                list3[current_position], list3[current_position + 1] = list3[current_position + 1], list3[current_position]\n            current_position += 1\n    print(''.join(list3))\n\nmain()", "\n\n# from __future__ import print_function\n\ndef main():\n    n1, n2 = map(int, input().split())\n    l1 = list(input())\n    l2 = list(input())\n    t = int(input())\n    for i in range(t):\n        l1, l2 = swap(l1, l2)\n    print(\"\".join(l1 + l2))\n\ndef swap(l1, l2):\n    l1_new = []\n    l2_new = []\n    while l1 and l2:\n        l1_new.append(l1.pop())\n        l2_new.append(l2.pop())\n    return l1_new, l2_new\n\nif __name__ == '__main__':\n    main()", "\n\ndef swap(l, i, j):\n    l[i], l[j] = l[j], l[i]\n\ndef main():\n    n1, n2 = map(int, input().split())\n    row1 = list(input())\n    row2 = list(input())\n    t = int(input())\n    i = 0\n    j = 0\n    while i < n1 and j < n2 and t > 0:\n        if row1[i] < row2[j]:\n            i += 1\n        else:\n            swap(row1, i, j)\n            swap(row2, i, j)\n            i += 1\n            j += 1\n            t -= 1\n    print(''.join(row1 + row2))\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    \"\"\"\n    The main function.\n    \"\"\"\n    # Get the number of ants in each row.\n    ants_in_row = input().split(\" \")\n    ants_in_row = [int(x) for x in ants_in_row]\n\n    # Get the ants in each row.\n    ants_row_1 = list(input())\n    ants_row_2 = list(input())\n\n    # Get the number of seconds to simulate.\n    seconds = int(input())\n\n    # Create the rows.\n    row_1 = Row(ants_row_1)\n    row_2 = Row(ants_row_2)\n\n    # Simulate the number of seconds.\n    for _ in range(seconds):\n        row_1.move(row_2)\n        row_2.move(row_1)\n\n    # Output the ants.\n    print(\"\".join(row_1.ants + row_2.ants))\n\nclass Row:\n    \"\"\"\n    Represents a row of ants.\n    \"\"\"\n    def __init__(self, ants):\n        \"\"\"\n        Initializes the row.\n\n        :param ants: The ants in the row.\n        :type ants: list\n        \"\"\"\n        self.ants = ants\n        self.direction = 1\n\n    def move(self, other_row):\n        \"\"\"\n        Moves the row.\n\n        :param other_row: The other row.\n        :type other_row: Row\n        \"\"\"\n        # Check if the row should move.\n        if self.direction == 1 and len(self.ants) >= 1 and len(other_row.ants) >= 1:\n            # Get the ant to switch with.\n            other_ant = other_row.ants[0]\n            other_row.ants = other_row.ants[1:]\n\n            # Get the ant to switch.\n            ant = self.ants[-1]\n            self.ants = self.ants[:-1]\n\n            # Switch the ants.\n            self.ants.append(other_ant)\n            other_row.ants.append(ant)\n        elif self.direction == -1 and len(self.ants) >= 1 and len(other_row.ants) >= 1:\n            # Get the ant to switch with.\n            other_ant = other_row.ants[-1]\n            other_row.ants = other_row.ants[:-1]\n\n            # Get the ant to switch.\n            ant = self.ants[0]\n            self.ants = self.ants[1:]\n\n            # Switch the ants.\n            self.ants.insert(0, other_ant)\n            other_row.ants.insert(0, ant)\n\n        # Check if the row should change direction.\n        if len(self.ants) == 0:\n            self.direction *= -1\n        elif len(other_row.ants) == 0:\n            self.direction *= -1\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    \"\"\"\n    T = int(input())\n    for _ in range(T):\n        N1, N2 = [int(i) for i in input().split()]\n        row1 = list(input())\n        row2 = list(input())\n        T = int(input())\n        for _ in range(T):\n            for i in range(min(N1, N2)):\n                if row1[i] > row2[i]:\n                    row1[i], row2[i] = row2[i], row1[i]\n        print(\"\".join(row1 + row2))\n    \"\"\"\n    T = int(input())\n    for _ in range(T):\n        N1, N2 = [int(i) for i in input().split()]\n        row1 = list(input())\n        row2 = list(input())\n        T = int(input())\n        for _ in range(T):\n            for i in range(min(N1, N2)):\n                if row1[i] > row2[i]:\n                    row1[i], row2[i] = row2[i], row1[i]\n        print(\"\".join(row1 + row2))\n\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n    ants_1, ants_2 = [int(x) for x in input().split()]\n    order_1 = input()\n    order_2 = input()\n    time = int(input())\n    if time == 0:\n        print(order_1+order_2)\n        return\n    if time % 2 == 1:\n        print(order_2[-1] + order_1[1:] + order_2[:-1])\n    else:\n        print(order_1[-1] + order_2[1:] + order_1[:-1])\n\nif __name__ == '__main__':\n    main()", "\n\n# SOLUTION\n\n# Read input\nN1, N2 = map(int,input().split())\nrow1 = list(input())\nrow2 = list(input())\nT = int(input())\n\n# The ants will jump over each other until they are in the same order as they started\n# This means that we only need to swap the ants that are in the same position in the two rows\n# We can do this by looping through the ants in each row and swapping them if they are in the same position\n# We can use a list to store the positions of each ant in the first row and then compare them to the second row\n# We can do this by using the index() method to find the position of each ant in the first row and then using this index to find the ant in the second row\n# We can then swap the two ants and then add the new position of the ant to the list\n# We can repeat this process for each ant in the first row\n# We can then repeat this process for each second until T seconds have passed\n\n# Create a list to store the positions of each ant in the first row\npositions = []\n\n# Loop through each second\nfor second in range(T):\n    # Loop through each ant in the first row\n    for ant in row1:\n        # Find the position of the ant in the first row\n        position = row1.index(ant)\n        # Find the ant in the second row at the same position\n        other_ant = row2[position]\n        # Swap the two ants\n        row1[position] = other_ant\n        row2[position] = ant\n        # Add the new position of the ant to the list\n        positions.append(position)\n\n# Print the order of the ants after T seconds\nprint(\"\".join(row1 + row2))"]