2022-04-13 21:14:39.365920 """
We have a 3 \times 3 grid. A number c_{i, j} is written in the square (i, j), where (i, j) denotes the square at the i-th row from the top and the j-th column from the left.

According to Takahashi, there are six integers a_1, a_2, a_3, b_1, b_2, b_3 whose values are fixed, and the number written in the square (i, j) is equal to a_i + b_j.

Determine if he is correct.  

-----Constraints-----
 - c_{i, j} \ (1 \leq i \leq 3, 1 \leq j \leq 3) is an integer between 0 and 100 (inclusive).

-----Input-----
Input is given from Standard Input in the following format:
c_{1,1} c_{1,2} c_{1,3}
c_{2,1} c_{2,2} c_{2,3}
c_{3,1} c_{3,2} c_{3,3}

-----Output-----
If Takahashi's statement is correct, print Yes; otherwise, print No.

-----Sample Input-----
1 0 1
2 1 2
1 0 1

-----Sample Output-----
Yes

Takahashi is correct, since there are possible sets of integers such as: a_1=0,a_2=1,a_3=0,b_1=1,b_2=0,b_3=1.
"""
2022-04-13 21:14:39.365928 --------------------------
2022-04-13 21:15:15.754712 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nc = []\nfor i in range(3):\n    c.append(list(map(int, input().split())))\n\ndef check(a1, a2, a3, b1, b2, b3):\n    return (a1+b1 == c[0][0] and a2+b1 == c[0][1] and a3+b1 == c[0][2] and\n            a1+b2 == c[1][0] and a2+b2 == c[1][1] and a3+b2 == c[1][2] and\n            a1+b3 == c[2][0] and a2+b3 == c[2][1] and a3+b3 == c[2][2])\n\nif check(0, 1, 0, 1, 0, 1) or check(0, 1, 0, 0, 1, 0) or check(0, 0, 1, 1, 0, 0) or check(1, 0, 0, 0, 1, 0) or check(1, 0, 0, 0, 0, 1):\n    print(\"Yes\")\nelse:\n    print(\"No\")"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ninput = sys.stdin.readline\n\nc = []\nfor _ in range(3):\n    c.append(list(map(int, input().split())))\n\nfor i in range(2):\n    for j in range(2):\n        if c[i][j] != c[i][j+1] or c[i][j] != c[i+1][j]:\n            print('No')\n            sys.exit()\n\nprint('Yes')"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    c = [[int(x) for x in sys.stdin.readline().split()] for i in range(3)]\n    c_set = set()\n    for i in range(3):\n        for j in range(3):\n            c_set.add(c[i][j])\n    if len(c_set) == 2:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nmatrix = []\nfor i in range(3):\n\tmatrix.append(list(map(int, input().split())))\n\nif matrix[0][0] == matrix[1][1] == matrix[2][2]:\n\tif matrix[0][0] == matrix[0][1] + matrix[1][0]:\n\t\tif matrix[0][0] == matrix[1][0] + matrix[0][1]:\n\t\t\tif matrix[0][0] == matrix[0][2] + matrix[2][0]:\n\t\t\t\tif matrix[0][0] == matrix[2][0] + matrix[0][2]:\n\t\t\t\t\tif matrix[0][0] == matrix[0][1] + matrix[1][0]:\n\t\t\t\t\t\tif matrix[0][0] == matrix[1][0] + matrix[0][1]:\n\t\t\t\t\t\t\tif matrix[0][0] == matrix[0][2] + matrix[2][0]:\n\t\t\t\t\t\t\t\tif matrix[0][0] == matrix[2][0] + matrix[0][2]:\n\t\t\t\t\t\t\t\t\tif matrix[0][0] == matrix[0][1] + matrix[1][0]:\n\t\t\t\t\t\t\t\t\t\tif matrix[0][0] == matrix[1][0] + matrix[0][1]:\n\t\t\t\t\t\t\t\t\t\t\tif matrix[0][0] == matrix[0][2] + matrix[2][0]:\n\t\t\t\t\t\t\t\t\t\t\t\tif matrix[0][0] == matrix[2][0] + matrix[0][2]:\n\t\t\t\t\t\t\t\t\t\t\t\t\tif matrix[0][0] == matrix[0][1] + matrix[1][0]:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif matrix[0][0] == matrix[1][0] + matrix[0][1]:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif matrix[0][0] == matrix[0][2] + matrix[2][0]:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif matrix[0][0] == matrix[2][0] + matrix[0][2]:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprint(\"Yes\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texit()\n\nprint(\"No\")"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\n#%%\n\nc = []\nfor _ in range(3):\n    c.append(list(map(int, input().split())))\n\n#%%\n\n# a1, a2, a3 = 0, 1, 0\n# b1, b2, b3 = 1, 0, 1\n\na1, a2, a3 = 1, 0, 1\nb1, b2, b3 = 0, 1, 0\n\n#%%\n\nif c[0][0] == a1 + b1 and c[0][1] == a1 + b2 and c[0][2] == a1 + b3 and c[1][0] == a2 + b1 and c[1][1] == a2 + b2 and c[1][2] == a2 + b3 and c[2][0] == a3 + b1 and c[2][1] == a3 + b2 and c[2][2] == a3 + b3:\n    print('Yes')\nelse:\n    print('No')\n\n#%%"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    c = []\n    for i in range(3):\n        c.append(list(map(int, sys.stdin.readline().split())))\n    \n    a = []\n    for i in range(3):\n        a.append(c[i][0] - c[i][2])\n    \n    b = []\n    for i in range(3):\n        b.append(c[0][i] - c[2][i])\n    \n    if a[0] == a[1] and a[1] == a[2] and b[0] == b[1] and b[1] == b[2]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef judge(table):\n\t# check ai\n\ta = [0,0,0]\n\tfor i in range(3):\n\t\tfor j in range(3):\n\t\t\ta[i] += table[i][j]\n\t\ta[i] /= 3\n\tfor i in range(3):\n\t\tfor j in range(3):\n\t\t\tif a[i] != table[i][j]:\n\t\t\t\treturn False\n\t# check bj\n\tb = [0,0,0]\n\tfor j in range(3):\n\t\tfor i in range(3):\n\t\t\tb[j] += table[i][j]\n\t\tb[j] /= 3\n\tfor j in range(3):\n\t\tfor i in range(3):\n\t\t\tif b[j] != table[i][j]:\n\t\t\t\treturn False\n\treturn True\n\n# main\ntable = []\nfor i in range(3):\n\ttable.append(list(map(int,input().split())))\n\nif judge(table):\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")"
    }
  ],
  "created": 1649884479,
  "id": "cmpl-4webvlSE8RZSCN3M1rhM0dNBcz2bD",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 21:15:15.754985 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nc = []\nfor i in range(3):\n    c.append(list(map(int, input().split())))\n\ndef check(a1, a2, a3, b1, b2, b3):\n    return (a1+b1 == c[0][0] and a2+b1 == c[0][1] and a3+b1 == c[0][2] and\n            a1+b2 == c[1][0] and a2+b2 == c[1][1] and a3+b2 == c[1][2] and\n            a1+b3 == c[2][0] and a2+b3 == c[2][1] and a3+b3 == c[2][2])\n\nif check(0, 1, 0, 1, 0, 1) or check(0, 1, 0, 0, 1, 0) or check(0, 0, 1, 1, 0, 0) or check(1, 0, 0, 0, 1, 0) or check(1, 0, 0, 0, 0, 1):\n    print(\"Yes\")\nelse:\n    print(\"No\")"
}
2022-04-13 21:15:15.755017 REASON stop
2022-04-13 21:15:15.755499 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ninput = sys.stdin.readline\n\nc = []\nfor _ in range(3):\n    c.append(list(map(int, input().split())))\n\nfor i in range(2):\n    for j in range(2):\n        if c[i][j] != c[i][j+1] or c[i][j] != c[i+1][j]:\n            print('No')\n            sys.exit()\n\nprint('Yes')"
}
2022-04-13 21:15:15.755614 REASON stop
2022-04-13 21:15:15.756016 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    c = [[int(x) for x in sys.stdin.readline().split()] for i in range(3)]\n    c_set = set()\n    for i in range(3):\n        for j in range(3):\n            c_set.add(c[i][j])\n    if len(c_set) == 2:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 21:15:15.756070 REASON stop
2022-04-13 21:15:15.774620 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nmatrix = []\nfor i in range(3):\n\tmatrix.append(list(map(int, input().split())))\n\nif matrix[0][0] == matrix[1][1] == matrix[2][2]:\n\tif matrix[0][0] == matrix[0][1] + matrix[1][0]:\n\t\tif matrix[0][0] == matrix[1][0] + matrix[0][1]:\n\t\t\tif matrix[0][0] == matrix[0][2] + matrix[2][0]:\n\t\t\t\tif matrix[0][0] == matrix[2][0] + matrix[0][2]:\n\t\t\t\t\tif matrix[0][0] == matrix[0][1] + matrix[1][0]:\n\t\t\t\t\t\tif matrix[0][0] == matrix[1][0] + matrix[0][1]:\n\t\t\t\t\t\t\tif matrix[0][0] == matrix[0][2] + matrix[2][0]:\n\t\t\t\t\t\t\t\tif matrix[0][0] == matrix[2][0] + matrix[0][2]:\n\t\t\t\t\t\t\t\t\tif matrix[0][0] == matrix[0][1] + matrix[1][0]:\n\t\t\t\t\t\t\t\t\t\tif matrix[0][0] == matrix[1][0] + matrix[0][1]:\n\t\t\t\t\t\t\t\t\t\t\tif matrix[0][0] == matrix[0][2] + matrix[2][0]:\n\t\t\t\t\t\t\t\t\t\t\t\tif matrix[0][0] == matrix[2][0] + matrix[0][2]:\n\t\t\t\t\t\t\t\t\t\t\t\t\tif matrix[0][0] == matrix[0][1] + matrix[1][0]:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif matrix[0][0] == matrix[1][0] + matrix[0][1]:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif matrix[0][0] == matrix[0][2] + matrix[2][0]:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif matrix[0][0] == matrix[2][0] + matrix[0][2]:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprint(\"Yes\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texit()\n\nprint(\"No\")"
}
2022-04-13 21:15:15.774738 REASON stop
2022-04-13 21:15:15.789486 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\n#%%\n\nc = []\nfor _ in range(3):\n    c.append(list(map(int, input().split())))\n\n#%%\n\n# a1, a2, a3 = 0, 1, 0\n# b1, b2, b3 = 1, 0, 1\n\na1, a2, a3 = 1, 0, 1\nb1, b2, b3 = 0, 1, 0\n\n#%%\n\nif c[0][0] == a1 + b1 and c[0][1] == a1 + b2 and c[0][2] == a1 + b3 and c[1][0] == a2 + b1 and c[1][1] == a2 + b2 and c[1][2] == a2 + b3 and c[2][0] == a3 + b1 and c[2][1] == a3 + b2 and c[2][2] == a3 + b3:\n    print('Yes')\nelse:\n    print('No')\n\n#%%"
}
2022-04-13 21:15:15.789593 REASON stop
2022-04-13 21:15:15.790166 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    c = []\n    for i in range(3):\n        c.append(list(map(int, sys.stdin.readline().split())))\n    \n    a = []\n    for i in range(3):\n        a.append(c[i][0] - c[i][2])\n    \n    b = []\n    for i in range(3):\n        b.append(c[0][i] - c[2][i])\n    \n    if a[0] == a[1] and a[1] == a[2] and b[0] == b[1] and b[1] == b[2]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 21:15:15.790228 REASON stop
2022-04-13 21:15:15.791140 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef judge(table):\n\t# check ai\n\ta = [0,0,0]\n\tfor i in range(3):\n\t\tfor j in range(3):\n\t\t\ta[i] += table[i][j]\n\t\ta[i] /= 3\n\tfor i in range(3):\n\t\tfor j in range(3):\n\t\t\tif a[i] != table[i][j]:\n\t\t\t\treturn False\n\t# check bj\n\tb = [0,0,0]\n\tfor j in range(3):\n\t\tfor i in range(3):\n\t\t\tb[j] += table[i][j]\n\t\tb[j] /= 3\n\tfor j in range(3):\n\t\tfor i in range(3):\n\t\t\tif b[j] != table[i][j]:\n\t\t\t\treturn False\n\treturn True\n\n# main\ntable = []\nfor i in range(3):\n\ttable.append(list(map(int,input().split())))\n\nif judge(table):\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")"
}
2022-04-13 21:15:15.791202 REASON stop
