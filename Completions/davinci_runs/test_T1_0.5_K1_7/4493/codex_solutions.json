["\n\nmatrix = []\nfor i in range(3):\n\tmatrix.append(list(map(int, input().split())))\n\nif matrix[0][0] == matrix[1][1] == matrix[2][2]:\n\tif matrix[0][0] == matrix[0][1] + matrix[1][0]:\n\t\tif matrix[0][0] == matrix[1][0] + matrix[0][1]:\n\t\t\tif matrix[0][0] == matrix[0][2] + matrix[2][0]:\n\t\t\t\tif matrix[0][0] == matrix[2][0] + matrix[0][2]:\n\t\t\t\t\tif matrix[0][0] == matrix[0][1] + matrix[1][0]:\n\t\t\t\t\t\tif matrix[0][0] == matrix[1][0] + matrix[0][1]:\n\t\t\t\t\t\t\tif matrix[0][0] == matrix[0][2] + matrix[2][0]:\n\t\t\t\t\t\t\t\tif matrix[0][0] == matrix[2][0] + matrix[0][2]:\n\t\t\t\t\t\t\t\t\tif matrix[0][0] == matrix[0][1] + matrix[1][0]:\n\t\t\t\t\t\t\t\t\t\tif matrix[0][0] == matrix[1][0] + matrix[0][1]:\n\t\t\t\t\t\t\t\t\t\t\tif matrix[0][0] == matrix[0][2] + matrix[2][0]:\n\t\t\t\t\t\t\t\t\t\t\t\tif matrix[0][0] == matrix[2][0] + matrix[0][2]:\n\t\t\t\t\t\t\t\t\t\t\t\t\tif matrix[0][0] == matrix[0][1] + matrix[1][0]:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif matrix[0][0] == matrix[1][0] + matrix[0][1]:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif matrix[0][0] == matrix[0][2] + matrix[2][0]:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif matrix[0][0] == matrix[2][0] + matrix[0][2]:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprint(\"Yes\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texit()\n\nprint(\"No\")", "\n\nc = []\nfor i in range(3):\n    c.append(list(map(int, input().split())))\n\ndef check(a1, a2, a3, b1, b2, b3):\n    return (a1+b1 == c[0][0] and a2+b1 == c[0][1] and a3+b1 == c[0][2] and\n            a1+b2 == c[1][0] and a2+b2 == c[1][1] and a3+b2 == c[1][2] and\n            a1+b3 == c[2][0] and a2+b3 == c[2][1] and a3+b3 == c[2][2])\n\nif check(0, 1, 0, 1, 0, 1) or check(0, 1, 0, 0, 1, 0) or check(0, 0, 1, 1, 0, 0) or check(1, 0, 0, 0, 1, 0) or check(1, 0, 0, 0, 0, 1):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "\n\ndef judge(table):\n\t# check ai\n\ta = [0,0,0]\n\tfor i in range(3):\n\t\tfor j in range(3):\n\t\t\ta[i] += table[i][j]\n\t\ta[i] /= 3\n\tfor i in range(3):\n\t\tfor j in range(3):\n\t\t\tif a[i] != table[i][j]:\n\t\t\t\treturn False\n\t# check bj\n\tb = [0,0,0]\n\tfor j in range(3):\n\t\tfor i in range(3):\n\t\t\tb[j] += table[i][j]\n\t\tb[j] /= 3\n\tfor j in range(3):\n\t\tfor i in range(3):\n\t\t\tif b[j] != table[i][j]:\n\t\t\t\treturn False\n\treturn True\n\n# main\ntable = []\nfor i in range(3):\n\ttable.append(list(map(int,input().split())))\n\nif judge(table):\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")", "\n\nimport sys\n\ninput = sys.stdin.readline\n\nc = []\nfor _ in range(3):\n    c.append(list(map(int, input().split())))\n\nfor i in range(2):\n    for j in range(2):\n        if c[i][j] != c[i][j+1] or c[i][j] != c[i+1][j]:\n            print('No')\n            sys.exit()\n\nprint('Yes')", "\n\n#%%\n\nc = []\nfor _ in range(3):\n    c.append(list(map(int, input().split())))\n\n#%%\n\n# a1, a2, a3 = 0, 1, 0\n# b1, b2, b3 = 1, 0, 1\n\na1, a2, a3 = 1, 0, 1\nb1, b2, b3 = 0, 1, 0\n\n#%%\n\nif c[0][0] == a1 + b1 and c[0][1] == a1 + b2 and c[0][2] == a1 + b3 and c[1][0] == a2 + b1 and c[1][1] == a2 + b2 and c[1][2] == a2 + b3 and c[2][0] == a3 + b1 and c[2][1] == a3 + b2 and c[2][2] == a3 + b3:\n    print('Yes')\nelse:\n    print('No')\n\n#%%", "\n\nimport sys\n\ndef main():\n    c = [[int(x) for x in sys.stdin.readline().split()] for i in range(3)]\n    c_set = set()\n    for i in range(3):\n        for j in range(3):\n            c_set.add(c[i][j])\n    if len(c_set) == 2:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\ndef main():\n    c = []\n    for i in range(3):\n        c.append(list(map(int, sys.stdin.readline().split())))\n    \n    a = []\n    for i in range(3):\n        a.append(c[i][0] - c[i][2])\n    \n    b = []\n    for i in range(3):\n        b.append(c[0][i] - c[2][i])\n    \n    if a[0] == a[1] and a[1] == a[2] and b[0] == b[1] and b[1] == b[2]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()"]