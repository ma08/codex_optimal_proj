["t = int(input())\n# a = list(map(int, input().split()))\nfor _ in range(t):\n    a,b,x,y,n = map(int,input().split())\n    \n    options = []\n    a2 = max(a-n,x)\n    b2 = max(b-(n-(a-a2)),y)\n    options.append(a2*b2)\n    \n    b2 = max(b-n,y)\n    a2 = max(a-(n-(b-b2)),x)\n    options.append(a2*b2)\n    \n    print(min(options))", "for i in range(int(input())):\n\ta, b, x, y, n = list(map(int, input().split()))\n\n\ta1, b1, x1, y1, n1 = a, b, x, y, n\n\ttoRemove = min(a1-x1, n1)\n\tn1 -= toRemove\n\ta1 -= toRemove\n\ttoRemove = min(n1, b1-y1)\n\tn1 -= toRemove\n\tb1 -= toRemove\n\tans1 = a1*b1\n\n\ta1, b1, x1, y1, n1 = a, b, x, y, n\n\ttoRemove = min(b1-y1, n1)\n\tn1 -= toRemove\n\tb1 -= toRemove\n\ttoRemove = min(n1, a1-x1)\n\tn1 -= toRemove\n\ta1 -= toRemove\n\tans2 = a1*b1\n\n\tprint(min(ans1, ans2))\n\n", "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\n\nfrom itertools import accumulate\nfrom functools import lru_cache\n\nM = mod = 998244353\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n\ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\n\n\ndef giveanswer(a, b, x, y, n):\n    temp = min(a - x, n)\n    a -= temp\n    n -= temp\n    temp = min(b - y, n)\n    b -= temp\n    n -= temp\n    return a * b\nfor _ in range(val()):\n    a, b, x, y, n = li()\n    print(min(giveanswer(a , b, x, y, n), giveanswer(b, a, y, x, n)))\n", "def solve(a, b, x, y, n):\n    x = a-x\n    y = b-y\n    m = min(x, n)\n    n -= m\n    a -= m\n    m = min(y, n)\n    b -= m\n    return a*b\n    \nfor _ in range(int(input())):\n    a, b, x, y, n = list(map(int, input().split()))\n    print(min(solve(a, b, x, y, n), solve(b, a, y, x, n)))\n", "t = int(input())\nfor i in range(t):\n    a, b, x, y, n = [int(i) for i in input().split()]\n    ans = a * b\n\n    ck = min(a - x, n)\n    ca = a - ck\n    cn = n - ck\n    cb = b - min(b - y, cn)\n    ans = min(ans, ca * cb)\n\n    ck = min(b - y, n)\n    cb = b - ck\n    cn = n - ck\n    ca = a - min(a - x, cn)\n    ans = min(ans, ca * cb)\n\n    print(ans)\n", "for _ in range(int(input())):\n    a, b, x, y, n = list(map(int, input().split()))\n    posa = max(a - n, x)\n    posb = max(b - n, y)\n    if posa < posb:\n        n -= a - posa\n        a = posa\n        b = max(b - n, y)\n    else:\n        n -= b - posb\n        b = posb\n        a = max(a - n, x)\n    print(a * b)\n", "#Bhargey Mehta (Senior)\n#DA-IICT, Gandhinagar\nimport sys, math\nmod = 10**9 + 7\n\ndef goSolve(a, b, x, y, n):\n    d = min(n, a-x)\n    a -= d\n    n -= d\n    d = min(n, b-y)\n    b -= d\n    return a * b\n\ndef solve(test_index):\n    a, b, x, y, n = list(map(int, input().split()))\n    print(min(goSolve(a, b, x, y, n), goSolve(b, a, y, x, n)))\n    return\n\nif 'PyPy' not in sys.version:\n    sys.stdin = open('input.txt', 'r')\n\nsys.setrecursionlimit(100000)\nnum_tests = 1\nnum_tests = int(input())\nfor test in range(1, num_tests+1):\n    #print(\"Case #{}: \".format(test), end=\"\")\n    solve(test)\n", "\"\"\"T=int(input())\nfor _ in range(0,T):\n    n=int(input())\n    a,b=map(int,input().split())\n    s=input()\n    s=[int(x) for x in input().split()]\n    for i in range(0,len(s)):\n        a,b=map(int,input().split())\"\"\"\n\n\nT=int(input())\nfor _ in range(0,T):\n    a,b,x,y,n=list(map(int,input().split()))\n\n    A=a\n    B=b\n    N=n\n\n    d1 = (a-x)\n    d2 = (b-y)\n\n    t1=min(d1,n)\n    a-=t1\n    n-=t1\n    t2=min(d2,n)\n    b-=t2\n    n-=t2\n    #print(a,b)\n    ans=(a*b)\n\n    d1 = (A-x)\n    d2 = (B-y)\n\n    t2=min(d2,N)\n    B-=t2\n    N-=t2\n    t1=min(d1,N)\n    A-=t1\n    N-=t1\n\n    \n    #print(A,B)\n    ans=min(ans,A*B)\n    print(ans)\n\n\n    \n    \n", "import sys\n\n\ndef read_int():\n    return int(sys.stdin.readline())\n\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split(' ')))\n\n\nt = read_int()\nfor case_num in range(t):\n    a, b, x, y, n = read_ints()\n    n1 = min(n, a - x)\n    ans = (a - n1) * (b - min(n - n1, b - y))\n    n2 = min(n, b - y)\n    ans = min(ans, (b - n2) * (a - min(n - n2, a - x)))\n    print(ans)\n", "import sys\ninput=sys.stdin.readline\n\n\ndef fmin(a,b,x,y,n):\n    v=max(a-n,x)\n    val=n-(a-v)\n    v1=max(b-val,y)\n    return v*v1\n\nT=int(input())\nfor _ in range(T):\n    a,b,x,y,n=list(map(int,input().split()))\n    v=min(fmin(a,b,x,y,n),fmin(b,a,y,x,n))\n    print(v)\n", "for i in range(int(input())):\n\ta, b, x, y, n = (int(j) for j in input().split())\n\tans = 10 ** 18\n\n\td1 = a - x\n\td2 = b - y\n\tif (d1 > n):\n\t\tans = min(ans, (a - n) * b)\n\telif (d1 + d2 > n):\n\t\tans = min(ans, x * (b - n + d1))\n\telse:\n\t\tans = min(ans, x * y)\n\n\tx, y = y, x\n\ta, b = b, a\n\n\td1 = a - x\n\td2 = b - y\n\tif (d1 > n):\n\t\tans = min(ans, (a - n) * b)\n\telif (d1 + d2 > n):\n\t\tans = min(ans, x * (b - n + d1))\n\telse:\n\t\tans = min(ans, x * y)\n\n\tprint(ans)", "t = int(input())\nfor _ in range(t):\n    a, b, x, y, n = map(int, input().split())\n    a1 = a - min(a - x, n)\n    n1 = n - min(a - x, n)\n    b1 = b - min(b - y, n1)\n    \n    b2 = b - min(b - y, n)\n    n2 = n - min(b - y, n)\n    a2 = a - min(a - x, n2)\n    print(min(a1 * b1, a2 * b2))", "import sys, math\nimport io, os\n#data = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\nfrom bisect import bisect_left as bl, bisect_right as br, insort\nfrom heapq import heapify, heappush, heappop\nfrom collections import defaultdict as dd, deque, Counter\n# from itertools import permutations,combinations\ndef data(): return sys.stdin.readline().strip()\ndef mdata(): return list(map(int, data().split()))\ndef outl(var): sys.stdout.write('\\n'.join(map(str, var)) + '\\n')\ndef out(var): sys.stdout.write(str(var) + '\\n')\nfrom decimal import Decimal\n# from fractions import Fraction\n# sys.setrecursionlimit(100000)\nmod = int(1e9) + 7\nINF=2**32\n\nfor t in range(int(data())):\n    a,b,x,y,n=mdata()\n    m1=max(a-n,x)\n    m2=max(b-n,y)\n    if m1<m2:\n        m2=max(b-(n-(a-m1)),y)\n    else:\n        m1=max(a-(n-(b-m2)),x)\n    out(m1*m2)", "# Fast IO (be careful about bytestring)\n\n# import os,io\n# input=io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\n\n\nfor _ in range(int(input())):\n    a,b,x,y,n = list(map(int,input().split()))\n    if a + b - x - y < n:\n        print(x * y)\n    else:\n        minProduct = 10 ** 20\n        # Decreasing a first\n        if a - n >= x:\n            product = (a - n) * b\n            if product < minProduct:\n                minProduct = product\n        else:\n            product = x * max(y,b - n + a - x)\n            if product < minProduct:\n                minProduct = product\n        # Decreasing b first\n        if b - n >= y:\n            product = (b - n) * a\n            if product < minProduct:\n                minProduct = product\n        else:\n            product = y * max(x,a - n + b - y)\n            if product < minProduct:\n                minProduct = product\n        print(minProduct)\n", "for _ in range(int(input())):\n    a,b,x,y,n=list(map(int,input().split()))\n    c=max(a-n,x)\n    d=max(b-n,y)\n    if c<d:\n        ans=c\n        n-=a-c\n        d=max(b-n,y)\n        print(ans*d)\n    else:\n        ans=d\n        n-=b-d\n        c=max(a-n,x)\n        print(ans*c)\n\n", "def find(a,b,x,y,n):\n    req = a-x\n    min_val = min(req,n)\n    a -= min_val\n    n -= min_val\n    b -= n\n\n    return a*b\n\ndef solve(a,b,x,y,n,ans):\n    req1 = a-x\n    req2 = b-y\n    if req1+req2 <= n:\n        a = x\n        b = y\n        ans.append(str(a*b))\n    else:\n        min_val = find(a,b,x,y,n)\n        min_val = min(min_val,find(b,a,y,x,n))\n        ans.append(str(min_val))\n\ndef main():\n    t = int(input())\n    ans = []\n    for i in range(t):\n        a,b,x,y,n = list(map(int,input().split()))\n        solve(a,b,x,y,n,ans)\n\n    print('\\n'.join(ans))\n    \n\nmain()\n", "import sys, math, heapq, collections, itertools, bisect\nsys.setrecursionlimit(101000)\n\ndef solve(a, b, x, y, n):\n    diffa = a - x\n    diffb = b - y\n    first = min(diffb, n)\n    b -= first\n    n -= first\n    second = min(diffa, n)\n    a -= second\n    n -= second\n    return a*b\n\nt = int(input())\nfor _ in range(t):\n    # n = int(input())\n    a, b, x, y, n = map(int, input().split())\n    # a = list(map(int, input().split()))\n    print(min(solve(a, b, x, y, n), solve(b, a, y, x, n)))", "import sys\nimport math\ndef II():\n\treturn int(sys.stdin.readline())\n\ndef LI():\n\treturn list(map(int, sys.stdin.readline().split()))\n\ndef MI():\n\treturn list(map(int, sys.stdin.readline().split()))\n\ndef SI():\n\treturn sys.stdin.readline().strip()\nt = II()\nfor q in range(t):\n\ta,b,x,y,n = MI()\n\tif a-min(n,a-x)<b-min(n,b-y):\n\t\tb,a = a,b\n\t\ty,x = x,y\n\ttemp=min(n,b-y)\n\tn-=temp\n\tb-=temp\n\ta-=min(a-x,n)\n\tprint(a*b)\n\n\n\t\n", "t=int(input())\nfor _ in range(t):\n    a,b,x,y,n=map(int,input().split())\n    mina1 = max(x, a-n)\n    minb1 = max(y, b-(n-a+mina1))\n    minb2 = max(y, b-n)\n    mina2 = max(x, a-(n-b+minb2))\n    print(min(mina1*minb1,mina2*minb2))", "t = int(input())\nfor _ in range(t):\n    a, b, x, y, n = list(map(int, input().split()))\n    if max(a-n, x) > max(b-n, y):\n        a, b = b, a\n        x, y = y, x\n    d = a - x\n    a = max(a - n, x)\n    if a > x:\n        print(a * b)\n        continue\n    n -= d\n    b = max(b - n, y)\n    print(a * b)\n", "t=int(input())\nfor _ in range(t):\n    a,b,x,y,n=list(map(int,input().split()))\n    min_a=max(a-n,x)\n    min_b=max(b-n,y)\n    if min_a<min_b:\n        n = n - (a - min_a)\n        a=min_a\n\n        b=max(b-n,y)\n    else:\n        n = n - (b - min_b)\n        b = min_b\n\n        a = max(a - n, x)\n    print(a*b)", "from sys import stdin\n\ntt = int(stdin.readline())\n\nfor loop in range(tt):\n\n    a,b,x,y,n = map(int,stdin.readline().split())\n\n    ans = float(\"inf\")\n\n    if a-x + b-y < n:\n        print (x*y)\n        continue\n    \n    #first a\n    if a-x >= n:\n        ans = min(ans , (a-n) * b)\n    else:\n        rem = n - (a-x)\n        ans = min(ans , x * (b-rem))\n\n    #b\n    if b-y >= n:\n        ans = min(ans , (b-n) * a)\n    else:\n        rem = n - (b-y)\n        ans = min(ans , y * (a-rem))\n\n    print (ans)"]