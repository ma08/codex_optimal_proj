2022-04-13 23:13:42.054990 """
It is Gregâ€™s birthday! To celebrate, his friend Sam invites Greg and two other friends for a small party. Of course, every birthday party must have cake.

Sam ordered a square cake. She makes a single horizontal cut and a single vertical cut. In her excitement to eat cake, Sam forgot to make these cuts through the middle of the cake.

Of course, the biggest piece of cake should go to Greg since it is his birthday. Help Sam determine the volume of the biggest piece of cake that resulted from these two cuts.

-----Input-----
The input consists of a single line containing three integers $n$ ($2 \leq n \leq 10000$), the length of the sides of the square cake in centimeters, $h$ ($0 < h < n$), the distance of the horizontal cut from the top edge of the cake in centimeters, and $v$ ($0 < v < n$), the distance of the vertical cut from the left edge of the cake in centimeters. This is illustrated in the figure above.

Each cake is $4$ centimeters thick.

-----Output-----
Display the volume (in cubic centimeters) of the largest of the four pieces of cake after the horizontal and vertical cuts are made.

-----Examples-----
Sample Input 1:
10 4 7
Sample Output 1:
168

Sample Input 2:
5 2 2
Sample Output 2:
36
"""
2022-04-13 23:13:42.055001 --------------------------
2022-04-13 23:13:58.075676 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    n, h, v = map(int, input().split())\n    # the biggest piece of cake is the one with the smallest diagonal\n    # the smallest diagonal is the one with the largest side and the smallest side\n    # the largest side is the one with the largest distance from the cut\n    # and the smallest side is the one with the smallest distance from the cut\n    # so find the largest and smallest of the four distances from the cut and multiply them together\n    # to find the volume, multiply by the thickness of the cake\n    diag = (max(h, n-h) * max(v, n-v)) * 4\n    print(diag)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\nn = int(sys.stdin.readline().strip())\nh = int(sys.stdin.readline().strip())\nv = int(sys.stdin.readline().strip())\n\nprint(4 * max(h * v, (n-h) * v, h * (n-v), (n-h) * (n-v)))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef main():\n    \"\"\"main\"\"\"\n    side, h, v = map(int, input().split())\n    print(side*side*4 - h*v*4)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, h, v = map(int, sys.stdin.readline().split())\n    print(max(h * v, (n - h) * v, h * (n - v), (n - h) * (n - v)) * 4)\n    \nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, h, v = list(map(int, input().split()))\n    print(max(h * v * 4, (n - h) * (n - v) * 4, h * (n - v) * 4, (n - h) * v * 4))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, h, v = map(int, sys.stdin.readline().split())\n    print(max(h*v, (n-h)*v, h*(n-v), (n-h)*(n-v)) * 4)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nn, h, v = map(int, input().split())\n\nprint(4*max(h*(n-v), v*(n-h), (n-h)*(n-v)))"
    }
  ],
  "created": 1649891622,
  "id": "cmpl-4wgT85piFYcU9omQFcXa2xlSqfYI0",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 23:13:58.075943 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\nimport math\n\ndef main():\n    n, h, v = map(int, input().split())\n    # the biggest piece of cake is the one with the smallest diagonal\n    # the smallest diagonal is the one with the largest side and the smallest side\n    # the largest side is the one with the largest distance from the cut\n    # and the smallest side is the one with the smallest distance from the cut\n    # so find the largest and smallest of the four distances from the cut and multiply them together\n    # to find the volume, multiply by the thickness of the cake\n    diag = (max(h, n-h) * max(v, n-v)) * 4\n    print(diag)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 23:13:58.075980 REASON stop
2022-04-13 23:13:58.076318 test/intro-questions.txt_dir/4764/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4764/solutions.json'
2022-04-13 23:13:58.076352 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\nn = int(sys.stdin.readline().strip())\nh = int(sys.stdin.readline().strip())\nv = int(sys.stdin.readline().strip())\n\nprint(4 * max(h * v, (n-h) * v, h * (n-v), (n-h) * (n-v)))"
}
2022-04-13 23:13:58.076458 REASON stop
2022-04-13 23:13:58.076678 test/intro-questions.txt_dir/4764/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4764/solutions.json'
2022-04-13 23:13:58.076689 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef main():\n    \"\"\"main\"\"\"\n    side, h, v = map(int, input().split())\n    print(side*side*4 - h*v*4)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 23:13:58.076725 REASON stop
2022-04-13 23:13:58.097092 test/intro-questions.txt_dir/4764/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4764/solutions.json'
2022-04-13 23:13:58.097126 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, h, v = map(int, sys.stdin.readline().split())\n    print(max(h * v, (n - h) * v, h * (n - v), (n - h) * (n - v)) * 4)\n    \nif __name__ == '__main__':\n    main()"
}
2022-04-13 23:13:58.097195 REASON stop
2022-04-13 23:13:58.105871 test/intro-questions.txt_dir/4764/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4764/solutions.json'
2022-04-13 23:13:58.105903 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, h, v = list(map(int, input().split()))\n    print(max(h * v * 4, (n - h) * (n - v) * 4, h * (n - v) * 4, (n - h) * v * 4))\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 23:13:58.105980 REASON stop
2022-04-13 23:13:58.123796 test/intro-questions.txt_dir/4764/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4764/solutions.json'
2022-04-13 23:13:58.123828 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, h, v = map(int, sys.stdin.readline().split())\n    print(max(h*v, (n-h)*v, h*(n-v), (n-h)*(n-v)) * 4)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 23:13:58.123923 REASON stop
2022-04-13 23:13:58.124557 test/intro-questions.txt_dir/4764/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4764/solutions.json'
2022-04-13 23:13:58.124573 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nn, h, v = map(int, input().split())\n\nprint(4*max(h*(n-v), v*(n-h), (n-h)*(n-v)))"
}
2022-04-13 23:13:58.124627 REASON stop
2022-04-13 23:13:58.125287 test/intro-questions.txt_dir/4764/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4764/solutions.json'
