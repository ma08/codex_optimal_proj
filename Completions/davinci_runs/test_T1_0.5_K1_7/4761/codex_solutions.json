["\n\ndef test(n):\n    \"\"\"\n    Tests whether an integer satisfies the constraints in the problem.\n    \"\"\"\n    s = set(str(n))\n    if len(s) != 6:\n        return False\n    for i in s:\n        if n % int(i) != 0:\n            return False\n    return True\n\ndef main():\n    L, H = map(int, input().split())\n    count = 0\n    for n in range(L, H+1):\n        if test(n):\n            count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    \"\"\"Main function\"\"\"\n    lower_range, upper_range = map(int, input().split())\n    count = 0\n    for i in range(lower_range, upper_range+1):\n        if is_valid(i):\n            count += 1\n    print(count)\n\ndef is_valid(num):\n    \"\"\"Returns True if num is a valid combination\"\"\"\n    digits = []\n    while num > 0:\n        digit = num % 10\n        if digit == 0:\n            return False\n        if digit in digits:\n            return False\n        digits.append(digit)\n        num //= 10\n    for digit in digits:\n        if num % digit != 0:\n            return False\n    return True\n\nmain()", "\n\n#Input\nL,H = map(int,input().split())\n\n#Solution\ndef is_divisible(n):\n    #Checks if n is divisible by each digit\n    for i in range(1,10):\n        if n%i != 0:\n            return False\n    return True\n\ndef is_valid(n):\n    #Checks if n is valid\n    n = str(n)\n    if len(n) != 6:\n        return False\n    if len(set(n)) != 6:\n        return False\n    return True\n\n#Initialize total\ntotal = 0\n\n#Iterate through range\nfor i in range(L,H+1):\n    #If i is valid, check if divisible\n    if is_valid(i):\n        if is_divisible(i):\n            total += 1\n\nprint(total)", "\n\ndef main():\n    L, H = input().split()\n    L = int(L)\n    H = int(H)\n    count = 0\n    for i in range(L, H+1):\n        s = str(i)\n        if len(set(s)) == len(s) and all(i % int(d) == 0 for d in s):\n            count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    L, H = map(int, input().split())\n    count = 0\n    for i in range(L, H+1):\n        if check(i):\n            count += 1\n    print(count)\n\ndef check(i):\n    s = str(i)\n    if len(s) != 6:\n        return False\n    for j in range(1, 10):\n        if str(j) not in s:\n            continue\n        if i % j != 0:\n            return False\n    return True\n\nmain()", "\n\nimport sys\n\ndef main():\n    # l, h = 123864, 123865\n    # l, h = 198765, 198769\n    # l, h = 123456, 987654\n    l, h = map(int, sys.stdin.readline().strip().split())\n    print(count_combinations(l, h))\n\ndef count_combinations(l, h):\n    count = 0\n    for i in range(l, h + 1):\n        if is_valid(i):\n            count += 1\n    return count\n\ndef is_valid(i):\n    if len(set(str(i))) != 6:\n        return False\n    for j in range(1, 7):\n        if i % j != 0:\n            return False\n    return True\n\nif __name__ == '__main__':\n    main()", "\n\ndef is_valid(n):\n    num = str(n)\n    if len(num) != 6 or len(set(num)) != 6 or num[0] == '0':\n        return False\n    for i in num:\n        if int(i) == 0:\n            return False\n        if n % int(i) != 0:\n            return False\n    return True\n\nL, H = [int(i) for i in input().split()]\n\ncount = 0\nfor i in range(L, H+1):\n    if is_valid(i):\n        count += 1\n\nprint(count)"]