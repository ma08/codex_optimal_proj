["\n\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n, k = map(int, input().split())\n        if n % k == 0:\n            print(int(n / k))\n        else:\n            print(int(n / k) + 1)\n\n\nif __name__ == \"__main__\":\n    main()", "\n\n#CODE\n\ndef package(n,k):\n    count = 0\n    if k == 1:\n        count = n\n    else:\n        for i in range(1,k+1):\n            if n % i == 0:\n                count = n // i\n                break\n    return count\n\nfor _ in range(int(input())):\n    n,k = map(int,input().split())\n    print(package(n,k))", "\nimport math\n\ntests = int(input())\nfor i in range(0, tests):\n    n, k = map(int, input().split())\n    if k >= n:\n        print(1)\n    else:\n        print(math.ceil(n / k))", "\n\nt = int(input())\n\nfor _ in range(t):\n    n, k = map(int, input().split())\n    if n <= k:\n        print(1)\n    else:\n        print(n // k + 1 if n % k else n // k)", "\n\nimport fileinput\n\ndef solve(n, k):\n    if k >= n:\n        return 1\n    elif k == 1:\n        return n\n    else:\n        return n // k + solve(n % k, k)\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        n, k = map(int, input().split())\n        print(solve(n, k))\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef minPackages(n,k):\n    if k >= n:\n        return 1\n    if n % k == 0:\n        return n / k\n    else:\n        return n / k + 1\n\ndef main():\n    t = int(sys.stdin.readline())\n    for i in range(t):\n        n,k = map(int, sys.stdin.readline().split())\n        print minPackages(n,k)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    t = int(sys.stdin.readline().strip())\n    for _ in range(t):\n        n, k = map(int, sys.stdin.readline().strip().split())\n        print(n // k + n % k)\n\nif __name__ == '__main__':\n    main()"]