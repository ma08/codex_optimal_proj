2022-04-13 20:13:14.579039 """
There are $n$ students in a school class, the rating of the $i$-th student on Codehorses is $a_i$. You have to form a team consisting of $k$ students ($1 \le k \le n$) such that the ratings of all team members are distinct.

If it is impossible to form a suitable team, print "NO" (without quotes). Otherwise print "YES", and then print $k$ distinct numbers which should be the indices of students in the team you form. If there are multiple answers, print any of them.


-----Input-----

The first line contains two integers $n$ and $k$ ($1 \le k \le n \le 100$) â€” the number of students and the size of the team you have to form.

The second line contains $n$ integers $a_1, a_2, \dots, a_n$ ($1 \le a_i \le 100$), where $a_i$ is the rating of $i$-th student.


-----Output-----

If it is impossible to form a suitable team, print "NO" (without quotes). Otherwise print "YES", and then print $k$ distinct integers from $1$ to $n$ which should be the indices of students in the team you form. All the ratings of the students in the team should be distinct. You may print the indices in any order. If there are multiple answers, print any of them.

Assume that the students are numbered from $1$ to $n$.


-----Examples-----
Input
5 3
15 13 15 15 12

Output
YES
1 2 5 

Input
5 4
15 13 15 15 12

Output
NO

Input
4 4
20 10 40 30

Output
YES
1 2 3 4 



-----Note-----

All possible answers for the first example:   {1 2 5}  {2 3 5}  {2 4 5} 

Note that the order does not matter.
"""
2022-04-13 20:13:14.579052 --------------------------
2022-04-13 20:13:29.519355 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif len(set(a)) < k:\n    print(\"NO\")\nelse:\n    a = [str(i + 1) for i in range(n) if a[i] == max(a)]\n    if len(a) >= k:\n        print(\"YES\")\n        print(' '.join(a[:k]))\n    else:\n        print(\"NO\")"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif len(set(a)) < k:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    for i in range(k):\n        print(a.index(min(a))+1, end=\" \")\n        a[a.index(min(a))] = 200"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef teamFormation():\n    n, k = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    a.sort()\n\n    if n < k:\n        print(\"NO\")\n        return\n\n    if k == 1:\n        print(\"YES\")\n        print(a[0])\n        return\n\n    i = 0\n    while i < n:\n        if i + k > n:\n            print(\"NO\")\n            return\n\n        if a[i] != a[i+k-1]:\n            print(\"YES\")\n            print(*[x+1 for x in range(i, i + k)])\n            return\n\n        i += k\n\n    print(\"NO\")\n    return\n\nteamFormation()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n\n    if k == len(set(a)):\n        print('YES')\n        for i in range(1, n + 1):\n            if a[i - 1] in set(a):\n                print(i, end=' ')\n                a[i - 1] = -1\n    else:\n        print('NO')\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif len(set(a)) < k:\n    print('NO')\nelse:\n    print('YES')\n    for i in range(k):\n        print(a.index(min(a)) + 1, end=' ')\n        a[a.index(min(a))] = 1000"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nif len(set(a)) < k:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    print(*[a.index(i)+1 for i in sorted(set(a))[:k]])"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n\tn,k = map(int,input().split())\n\ta = list(map(int,input().split()))\n\ta.sort()\n\ti = 0\n\tans = []\n\twhile(i < n and k > 0):\n\t\tif(a[i] != a[i+1]):\n\t\t\tans.append(i+1)\n\t\t\tk-=1\n\t\ti+=1\n\tif(k > 0):\n\t\tprint(\"NO\")\n\telse:\n\t\tprint(\"YES\")\n\t\tfor i in ans:\n\t\t\tprint(i,end = \" \")\n\nmain()"
    }
  ],
  "created": 1649880794,
  "id": "cmpl-4wdeUEwtfyLzjsFruVD2Yl8NfTr1C",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 20:13:29.519640 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif len(set(a)) < k:\n    print(\"NO\")\nelse:\n    a = [str(i + 1) for i in range(n) if a[i] == max(a)]\n    if len(a) >= k:\n        print(\"YES\")\n        print(' '.join(a[:k]))\n    else:\n        print(\"NO\")"
}
2022-04-13 20:13:29.519676 REASON stop
2022-04-13 20:13:29.520095 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif len(set(a)) < k:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    for i in range(k):\n        print(a.index(min(a))+1, end=\" \")\n        a[a.index(min(a))] = 200"
}
2022-04-13 20:13:29.520252 REASON stop
2022-04-13 20:13:29.520629 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef teamFormation():\n    n, k = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    a.sort()\n\n    if n < k:\n        print(\"NO\")\n        return\n\n    if k == 1:\n        print(\"YES\")\n        print(a[0])\n        return\n\n    i = 0\n    while i < n:\n        if i + k > n:\n            print(\"NO\")\n            return\n\n        if a[i] != a[i+k-1]:\n            print(\"YES\")\n            print(*[x+1 for x in range(i, i + k)])\n            return\n\n        i += k\n\n    print(\"NO\")\n    return\n\nteamFormation()"
}
2022-04-13 20:13:29.520685 REASON stop
2022-04-13 20:13:29.539935 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n\n    if k == len(set(a)):\n        print('YES')\n        for i in range(1, n + 1):\n            if a[i - 1] in set(a):\n                print(i, end=' ')\n                a[i - 1] = -1\n    else:\n        print('NO')\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 20:13:29.540031 REASON stop
2022-04-13 20:13:29.562829 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif len(set(a)) < k:\n    print('NO')\nelse:\n    print('YES')\n    for i in range(k):\n        print(a.index(min(a)) + 1, end=' ')\n        a[a.index(min(a))] = 1000"
}
2022-04-13 20:13:29.562925 REASON stop
2022-04-13 20:13:29.563863 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nif len(set(a)) < k:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    print(*[a.index(i)+1 for i in sorted(set(a))[:k]])"
}
2022-04-13 20:13:29.563923 REASON stop
2022-04-13 20:13:29.564506 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n\tn,k = map(int,input().split())\n\ta = list(map(int,input().split()))\n\ta.sort()\n\ti = 0\n\tans = []\n\twhile(i < n and k > 0):\n\t\tif(a[i] != a[i+1]):\n\t\t\tans.append(i+1)\n\t\t\tk-=1\n\t\ti+=1\n\tif(k > 0):\n\t\tprint(\"NO\")\n\telse:\n\t\tprint(\"YES\")\n\t\tfor i in ans:\n\t\t\tprint(i,end = \" \")\n\nmain()"
}
2022-04-13 20:13:29.564558 REASON stop
