2022-04-13 17:56:26.193981 """
Vova had a pretty weird sleeping schedule. There are $h$ hours in a day. Vova will sleep exactly $n$ times. The $i$-th time he will sleep exactly after $a_i$ hours from the time he woke up. You can assume that Vova woke up exactly at the beginning of this story (the initial time is $0$). Each time Vova sleeps exactly one day (in other words, $h$ hours).

Vova thinks that the $i$-th sleeping time is good if he starts to sleep between hours $l$ and $r$ inclusive.

Vova can control himself and before the $i$-th time can choose between two options: go to sleep after $a_i$ hours or after $a_i - 1$ hours.

Your task is to say the maximum number of good sleeping times Vova can obtain if he acts optimally.


-----Input-----

The first line of the input contains four integers $n, h, l$ and $r$ ($1 \le n \le 2000, 3 \le h \le 2000, 0 \le l \le r < h$) — the number of times Vova goes to sleep, the number of hours in a day and the segment of the good sleeping time.

The second line of the input contains $n$ integers $a_1, a_2, \dots, a_n$ ($1 \le a_i < h$), where $a_i$ is the number of hours after which Vova goes to sleep the $i$-th time.


-----Output-----

Print one integer — the maximum number of good sleeping times Vova can obtain if he acts optimally.


-----Example-----
Input
7 24 21 23
16 17 14 20 20 11 22

Output
3



-----Note-----

The maximum number of good times in the example is $3$.

The story starts from $t=0$. Then Vova goes to sleep after $a_1 - 1$ hours, now the time is $15$. This time is not good. Then Vova goes to sleep after $a_2 - 1$ hours, now the time is $15 + 16 = 7$. This time is also not good. Then Vova goes to sleep after $a_3$ hours, now the time is $7 + 14 = 21$. This time is good. Then Vova goes to sleep after $a_4 - 1$ hours, now the time is $21 + 19 = 16$. This time is not good. Then Vova goes to sleep after $a_5$ hours, now the time is $16 + 20 = 12$. This time is not good. Then Vova goes to sleep after $a_6$ hours, now the time is $12 + 11 = 23$. This time is good. Then Vova goes to sleep after $a_7$ hours, now the time is $23 + 22 = 21$. This time is also good.
"""
2022-04-13 17:56:26.194000 --------------------------
2022-04-13 17:56:56.855021 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    if l <= (a[i] - 1) % h <= r:\n        cnt += 1\n    elif l <= a[i] % h <= r:\n        cnt += 1\n    elif i != n - 1:\n        if l <= (a[i] - 1 + a[i + 1]) % h <= r:\n            cnt += 1\n            a[i + 1] += h\n        elif l <= (a[i] + a[i + 1]) % h <= r:\n            cnt += 1\n            a[i + 1] += h\nprint(cnt)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [[0, 0] for _ in range(n)]\ndp[0][1] = 1 if l <= a[0] <= r else 0\ndp[0][0] = 1 if l <= a[0] - 1 <= r else 0\nfor i in range(1, n):\n    dp[i][1] = max(dp[i-1][0], dp[i-1][1]) + (1 if l <= a[i] <= r else 0)\n    dp[i][0] = max(dp[i-1][0], dp[i-1][1]) + (1 if l <= a[i] - 1 <= r else 0)\nprint(max(dp[n-1]))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\n\ndef solve(n, h, l, r, a):\n    good = 0\n    bad = 0\n    for i in range(n):\n        if l <= a[i] <= r:\n            good += 1\n        else:\n            bad += 1\n    return good + min(bad, 1)\n\n\nif __name__ == '__main__':\n    n, h, l, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    print(solve(n, h, l, r, a))"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn, h, l, r = map(int, raw_input().split())\n\na = map(int, raw_input().split())\n\n# dp[i] is the maximum number of good sleeping times Vova can obtain if he acts optimally.\ndp = [0] * (n+1)\n\n# dp[i] = max(dp[i-1], dp[i-2]+1)\n# if dp[i-2]+1 is not valid, then dp[i] = dp[i-1]\n# if dp[i-2]+1 is valid, then dp[i] = max(dp[i-1], dp[i-2]+1)\n\nfor i in range(1, n+1):\n    if a[i-1] == h-1:\n        dp[i] = dp[i-1]\n    else:\n        if i == 1:\n            dp[i] = 1\n        else:\n            if a[i-2] + a[i-1] >= l and a[i-2] + a[i-1] <= r:\n                dp[i] = dp[i-2] + 1\n            else:\n                dp[i] = dp[i-1]\n\nprint dp[n]"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\n\ndef solve(n, h, l, r, a):\n    result = 0\n    for i in range(n):\n        if l <= a[i] <= r:\n            result += 1\n        if i < n - 1:\n            if r < a[i]:\n                a[i + 1] = (a[i + 1] - 1) % h\n            elif a[i] < l:\n                a[i + 1] = (a[i + 1] + 1) % h\n    return result\n\n\ndef main():\n    n, h, l, r = (int(x) for x in input().split())\n    a = [int(x) for x in input().split()]\n    print(solve(n, h, l, r, a))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [[-1 for j in range(h)] for i in range(n)]\n\nif l <= a[0] <= r:\n    dp[0][a[0] - 1] = 1\nelse:\n    dp[0][a[0] - 1] = 0\nif l <= a[0] - 1 <= r:\n    dp[0][a[0] - 2] = 1\nelse:\n    dp[0][a[0] - 2] = 0\n\nfor i in range(1, n):\n    for j in range(h):\n        if l <= (j + a[i]) % h <= r:\n            dp[i][j] = max(dp[i - 1][j], dp[i - 1][(j + a[i] - 1) % h] + 1)\n        else:\n            dp[i][j] = dp[i - 1][j]\n        if l <= (j + a[i] - 1) % h <= r:\n            dp[i][j] = max(dp[i][j], dp[i - 1][j] + 1, dp[i - 1][(j + a[i] - 2) % h] + 1)\n        else:\n            dp[i][j] = max(dp[i][j], dp[i - 1][j])\n\nprint(max(dp[-1]))"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\n\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define all(x) x.begin(), x.end()\n#define allr(x) x.rbegin(), x.rend()\n#define sz(x) (int)(x).size()\n#define pb push_back\n#define mp make_pair\n#define fi first\n#define se second\n#define lb lower_bound\n#define ub upper_bound\n#define beg begin\n#define en end\n#define f(i, n) for(int i=0; i<n; i++)\n#define fr(i, n) for(int i=n-1; i>=0; i--)\n#define rf(i, n) for(int i=n; i>=0; i--)\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\ntypedef vector<int> vi;\ntypedef vector<ll> vl;\ntypedef vector<pii> vpii;\ntypedef vector<pll> vpll;\ntypedef vector<vi> vvi;\ntypedef vector<vl> vvl;\n\nconst int MOD = 1e9 + 7;\nconst int INF = 1e9 + 5;\nconst ll LINF = 1e18;\nconst ld PI = acos(-1);\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n\n    int n, h, l, r, ans = 0, a, b;\n    cin >> n >> h >> l >> r;\n    vi v(n);\n    f(i, n) cin >> v[i];\n    f(i, n) {\n        a = (v[i] + h - 1) % h;\n        b = (v[i] + h) % h;\n        if (a >= l && a <= r) {\n            ans++;\n        }\n        else if (b >= l && b <= r) {\n            ans++;\n        }\n    }\n    cout << ans << endl;\n}"
    }
  ],
  "created": 1649872586,
  "id": "cmpl-4wbW66K1X4Dud6hzpwdDZI6d2Wwm6",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 17:56:56.855292 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    if l <= (a[i] - 1) % h <= r:\n        cnt += 1\n    elif l <= a[i] % h <= r:\n        cnt += 1\n    elif i != n - 1:\n        if l <= (a[i] - 1 + a[i + 1]) % h <= r:\n            cnt += 1\n            a[i + 1] += h\n        elif l <= (a[i] + a[i + 1]) % h <= r:\n            cnt += 1\n            a[i + 1] += h\nprint(cnt)"
}
2022-04-13 17:56:56.855340 REASON stop
2022-04-13 17:56:56.855756 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [[0, 0] for _ in range(n)]\ndp[0][1] = 1 if l <= a[0] <= r else 0\ndp[0][0] = 1 if l <= a[0] - 1 <= r else 0\nfor i in range(1, n):\n    dp[i][1] = max(dp[i-1][0], dp[i-1][1]) + (1 if l <= a[i] <= r else 0)\n    dp[i][0] = max(dp[i-1][0], dp[i-1][1]) + (1 if l <= a[i] - 1 <= r else 0)\nprint(max(dp[n-1]))"
}
2022-04-13 17:56:56.855905 REASON stop
2022-04-13 17:56:56.856255 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\n\ndef solve(n, h, l, r, a):\n    good = 0\n    bad = 0\n    for i in range(n):\n        if l <= a[i] <= r:\n            good += 1\n        else:\n            bad += 1\n    return good + min(bad, 1)\n\n\nif __name__ == '__main__':\n    n, h, l, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    print(solve(n, h, l, r, a))"
}
2022-04-13 17:56:56.856304 REASON stop
2022-04-13 17:56:56.877972 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn, h, l, r = map(int, raw_input().split())\n\na = map(int, raw_input().split())\n\n# dp[i] is the maximum number of good sleeping times Vova can obtain if he acts optimally.\ndp = [0] * (n+1)\n\n# dp[i] = max(dp[i-1], dp[i-2]+1)\n# if dp[i-2]+1 is not valid, then dp[i] = dp[i-1]\n# if dp[i-2]+1 is valid, then dp[i] = max(dp[i-1], dp[i-2]+1)\n\nfor i in range(1, n+1):\n    if a[i-1] == h-1:\n        dp[i] = dp[i-1]\n    else:\n        if i == 1:\n            dp[i] = 1\n        else:\n            if a[i-2] + a[i-1] >= l and a[i-2] + a[i-1] <= r:\n                dp[i] = dp[i-2] + 1\n            else:\n                dp[i] = dp[i-1]\n\nprint dp[n]"
}
2022-04-13 17:56:56.878075 REASON stop
2022-04-13 17:56:56.878789 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\n\ndef solve(n, h, l, r, a):\n    result = 0\n    for i in range(n):\n        if l <= a[i] <= r:\n            result += 1\n        if i < n - 1:\n            if r < a[i]:\n                a[i + 1] = (a[i + 1] - 1) % h\n            elif a[i] < l:\n                a[i + 1] = (a[i + 1] + 1) % h\n    return result\n\n\ndef main():\n    n, h, l, r = (int(x) for x in input().split())\n    a = [int(x) for x in input().split()]\n    print(solve(n, h, l, r, a))\n\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 17:56:56.878866 REASON stop
2022-04-13 17:56:56.895855 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [[-1 for j in range(h)] for i in range(n)]\n\nif l <= a[0] <= r:\n    dp[0][a[0] - 1] = 1\nelse:\n    dp[0][a[0] - 1] = 0\nif l <= a[0] - 1 <= r:\n    dp[0][a[0] - 2] = 1\nelse:\n    dp[0][a[0] - 2] = 0\n\nfor i in range(1, n):\n    for j in range(h):\n        if l <= (j + a[i]) % h <= r:\n            dp[i][j] = max(dp[i - 1][j], dp[i - 1][(j + a[i] - 1) % h] + 1)\n        else:\n            dp[i][j] = dp[i - 1][j]\n        if l <= (j + a[i] - 1) % h <= r:\n            dp[i][j] = max(dp[i][j], dp[i - 1][j] + 1, dp[i - 1][(j + a[i] - 2) % h] + 1)\n        else:\n            dp[i][j] = max(dp[i][j], dp[i - 1][j])\n\nprint(max(dp[-1]))"
}
2022-04-13 17:56:56.895953 REASON stop
2022-04-13 17:56:56.896805 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\n\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define all(x) x.begin(), x.end()\n#define allr(x) x.rbegin(), x.rend()\n#define sz(x) (int)(x).size()\n#define pb push_back\n#define mp make_pair\n#define fi first\n#define se second\n#define lb lower_bound\n#define ub upper_bound\n#define beg begin\n#define en end\n#define f(i, n) for(int i=0; i<n; i++)\n#define fr(i, n) for(int i=n-1; i>=0; i--)\n#define rf(i, n) for(int i=n; i>=0; i--)\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\ntypedef vector<int> vi;\ntypedef vector<ll> vl;\ntypedef vector<pii> vpii;\ntypedef vector<pll> vpll;\ntypedef vector<vi> vvi;\ntypedef vector<vl> vvl;\n\nconst int MOD = 1e9 + 7;\nconst int INF = 1e9 + 5;\nconst ll LINF = 1e18;\nconst ld PI = acos(-1);\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n\n    int n, h, l, r, ans = 0, a, b;\n    cin >> n >> h >> l >> r;\n    vi v(n);\n    f(i, n) cin >> v[i];\n    f(i, n) {\n        a = (v[i] + h - 1) % h;\n        b = (v[i] + h) % h;\n        if (a >= l && a <= r) {\n            ans++;\n        }\n        else if (b >= l && b <= r) {\n            ans++;\n        }\n    }\n    cout << ans << endl;\n}"
}
2022-04-13 17:56:56.896878 REASON stop
