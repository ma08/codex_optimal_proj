["\n\ndef main():\n    # Get input\n    N,M = map(int,input().split())\n    A = [input() for _ in range(N)]\n    B = [input() for _ in range(M)]\n    # Check if B is contained in A\n    if any([B[0] in A[i:i+M] for i in range(N-M+1)]):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()", "\n\nN, M = map(int, input().split())\nA = [input() for _ in range(N)]\nB = [input() for _ in range(M)]\n\nfor i in range(N-M+1):\n    for j in range(N-M+1):\n        if A[i][j] == B[0][0]:\n            for k in range(M):\n                if A[i+k][j:j+M] != B[k]:\n                    break\n            else:\n                print('Yes')\n                exit()\nprint('No')", "\n\ndef check_template(N, M, A, B):\n    for i in range(N):\n        for j in range(N):\n            if A[i][j:j+M] == B[0]:\n                for k in range(1, M):\n                    if A[i+k][j:j+M] != B[k]:\n                        break\n                else:\n                    return True\n    return False\n\nN, M = map(int, input().split())\nA = [input() for _ in range(N)]\nB = [input() for _ in range(M)]\nif check_template(N, M, A, B):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "\n\nimport sys\n\nN, M = map(int, sys.stdin.readline().split())\nimage_A = []\nfor i in range(N):\n    image_A.append(sys.stdin.readline().rstrip())\nimage_B = []\nfor i in range(M):\n    image_B.append(sys.stdin.readline().rstrip())\n\ndef is_contained_in(image_A, image_B):\n    for i in range(N - M + 1):\n        for j in range(N - M + 1):\n            flag = True\n            for k in range(M):\n                if image_A[i + k][j:j + M] != image_B[k]:\n                    flag = False\n                    break\n            if flag:\n                return True\n    return False\n\nif is_contained_in(image_A, image_B):\n    print('Yes')\nelse:\n    print('No')", "\n\n\n# --- code in here ---\n\n# input\nn, m = list(map(int, input().split()))\na_list = []\nb_list = []\nfor i in range(n):\n    a_list.append(input())\nfor i in range(m):\n    b_list.append(input())\n\n# define function\ndef check_substring(a_list, b_list):\n    for i in range(n-m+1):\n        for j in range(n-m+1):\n            for k in range(m):\n                if a_list[i+k][j:j+m] == b_list[k]:\n                    if k == m-1:\n                        return True\n                    else:\n                        continue\n                else:\n                    break\n    return False\n\n# output\nif check_substring(a_list, b_list):\n    print('Yes')\nelse:\n    print('No')", "\n\n#N,M = map(int,input().split())\nN = 3\nM = 2\n\n#A = [input() for i in range(N)]\nA = ['#.#','.#.','#.#']\n\n#B = [input() for i in range(M)]\nB = ['#.','.#']\n\nfor i in range(N-M+1):\n    for j in range(N-M+1):\n        if A[i][j:j+M] == B[0]:\n            for k in range(1,M):\n                if A[i+k][j:j+M] != B[k]:\n                    break\n            else:\n                print('Yes')\n                exit()\nprint('No')", "\n\nN,M = map(int,input().split())\nA = [input() for i in range(N)]\nB = [input() for j in range(M)]\n\nfor i in range(N-M+1):\n    for j in range(N-M+1):\n        flag = True\n        for k in range(M):\n            if A[i+k][j:j+M] != B[k]:\n                flag = False\n                break\n        if flag:\n            print(\"Yes\")\n            exit()\nprint(\"No\")"]