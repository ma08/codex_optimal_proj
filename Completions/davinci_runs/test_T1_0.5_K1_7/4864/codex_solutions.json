["\n\nr, c, zr, zc = map(int, input().split())\n\nfor _ in range(r):\n    line = input()\n\n    for _ in range(zr):\n        print(''.join(map(lambda x: x * zc, line)))", "\n\nR, C, ZR, ZC = map(int, input().split())\n\nfor i in range(R):\n    for j in range(ZR):\n        for k in range(C):\n            for l in range(ZC):\n                print(input()[k], end='')\n        print()", "\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n    row, col, z_row, z_col = map(int, input().split())\n    rows = []\n    for _ in range(row):\n        rows.append(input())\n    for row_ in rows:\n        for _ in range(z_row):\n            for char in row_:\n                for _ in range(z_col):\n                    print(char, end=\"\")\n            print()\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\ndef main():\n    R,C,Z_R,Z_C = map(int, sys.stdin.readline().split())\n    for i in range(R):\n        for j in range(Z_R):\n            line = sys.stdin.readline().rstrip()\n            for k in range(Z_C):\n                print(line, end='')\n            print()\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    R, C, ZR, ZC = map(int, input().split())\n    for _ in range(R):\n        line = input()\n        for char in line:\n            for _ in range(ZC):\n                print(char, end='')\n        print()\n        for _ in range(ZR-1):\n            print(line.replace('.', ' ')*ZC)\n\nif __name__ == '__main__':\n    main()", "\n\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(line[k], end='')\n        print()", "\n\nR, C, ZR, ZC = [int(x) for x in input().split()]\n\nprint(\"\\n\".join([\"\".join([x*ZC for x in input()]) for y in range(R)]*ZR))"]