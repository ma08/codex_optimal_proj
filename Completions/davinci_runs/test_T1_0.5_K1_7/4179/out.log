2022-04-13 19:02:57.070632 """
There are N pieces of source code. The characteristics of the i-th code is represented by M integers A_{i1}, A_{i2}, ..., A_{iM}.
Additionally, you are given integers B_1, B_2, ..., B_M and C.
The i-th code correctly solves this problem if and only if A_{i1} B_1 + A_{i2} B_2 + ... + A_{iM} B_M + C > 0.
Among the N codes, find the number of codes that correctly solve this problem.

-----Constraints-----
 - All values in input are integers.
 - 1 \leq N, M \leq 20
 - -100 \leq A_{ij} \leq 100
 - -100 \leq B_i \leq 100
 - -100 \leq C \leq 100

-----Input-----
Input is given from Standard Input in the following format:
N M C
B_1 B_2 ... B_M
A_{11} A_{12} ... A_{1M}
A_{21} A_{22} ... A_{2M}
\vdots
A_{N1} A_{N2} ... A_{NM}

-----Output-----
Print the number of codes among the given N codes that correctly solve this problem.

-----Sample Input-----
2 3 -10
1 2 3
3 2 1
1 2 2

-----Sample Output-----
1

Only the second code correctly solves this problem, as follows:
 - Since 3 \times 1 + 2 \times 2 + 1 \times 3 + (-10) = 0 \leq 0, the first code does not solve this problem.
 - 1 \times 1 + 2 \times 2 + 2 \times 3 + (-10) = 1 > 0, the second code solves this problem.
"""
2022-04-13 19:02:57.070639 --------------------------
2022-04-13 19:03:12.666103 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, m, c = map(int, input().split())\n    b = list(map(int, input().split()))\n    cnt = 0\n    for _ in range(n):\n        a = list(map(int, input().split()))\n        if sum([a[i]*b[i] for i in range(m)]) + c > 0:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn, m, c = map(int, input().split())\nb = list(map(int, input().split()))\n\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ncount = 0\nfor i in range(n):\n    if sum([a[i][j] * b[j] for j in range(m)]) + c > 0:\n        count += 1\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n# Get the number of source codes and the number of the characteristics of the source code\nnum_codes, num_chars, C = map(int, input().split())\n\n# Get the values of the characteristics of the problem\nB = list(map(int, input().split()))\n\n# Get the values of the characteristics of the codes\nA = [list(map(int, input().split())) for _ in range(num_codes)]\n\n# Initialize the number of codes that correctly solve the problem\nnum_correct = 0\n\n# For each code, if the code correctly solves the problem, increase the number of correct codes by 1\nfor i in range(num_codes):\n    # Calculate the value of the expression\n    val = C\n    for j in range(num_chars):\n        val += A[i][j] * B[j]\n    # If the expression is greater than 0, the code correctly solves the problem\n    if val > 0:\n        num_correct += 1\n\n# Print the number of codes that correctly solve the problem\nprint(num_correct)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, m, c = map(int, input().split())\n    b = list(map(int, input().split()))\n    a = [list(map(int, input().split())) for _ in range(n)]\n    ans = 0\n    for i in range(n):\n        if sum([x * y for x, y in zip(a[i], b)]) + c > 0:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nn, m, c = map(int, input().split())\nb = list(map(int, input().split()))\na = [list(map(int, input().split())) for _ in range(n)]\n\nans = 0\nfor i in range(n):\n    temp = 0\n    for j in range(m):\n        temp += a[i][j] * b[j]\n    if temp + c > 0:\n        ans += 1\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nN, M, C = map(int, input().split())\nB = list(map(int, input().split()))\nA = [list(map(int, input().split())) for i in range(N)]\n\ncount = 0\nfor i in range(N):\n    if sum([A[i][j] * B[j] for j in range(M)]) + C > 0:\n        count += 1\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nn, m, c = map(int, input().split())\nb = list(map(int, input().split()))\na = []\nfor _ in range(n):\n    a.append(list(map(int, input().split())))\n\nans = 0\nfor i in range(n):\n    tmp = c\n    for j in range(m):\n        tmp += a[i][j] * b[j]\n    if tmp > 0:\n        ans += 1\nprint(ans)"
    }
  ],
  "created": 1649876577,
  "id": "cmpl-4wcYT9orCKBtmbnbsLNn1qW8WmXCu",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 19:03:12.666388 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, m, c = map(int, input().split())\n    b = list(map(int, input().split()))\n    cnt = 0\n    for _ in range(n):\n        a = list(map(int, input().split()))\n        if sum([a[i]*b[i] for i in range(m)]) + c > 0:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 19:03:12.666427 REASON stop
2022-04-13 19:03:12.666975 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn, m, c = map(int, input().split())\nb = list(map(int, input().split()))\n\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ncount = 0\nfor i in range(n):\n    if sum([a[i][j] * b[j] for j in range(m)]) + c > 0:\n        count += 1\nprint(count)"
}
2022-04-13 19:03:12.667082 REASON stop
2022-04-13 19:03:12.667504 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n# Get the number of source codes and the number of the characteristics of the source code\nnum_codes, num_chars, C = map(int, input().split())\n\n# Get the values of the characteristics of the problem\nB = list(map(int, input().split()))\n\n# Get the values of the characteristics of the codes\nA = [list(map(int, input().split())) for _ in range(num_codes)]\n\n# Initialize the number of codes that correctly solve the problem\nnum_correct = 0\n\n# For each code, if the code correctly solves the problem, increase the number of correct codes by 1\nfor i in range(num_codes):\n    # Calculate the value of the expression\n    val = C\n    for j in range(num_chars):\n        val += A[i][j] * B[j]\n    # If the expression is greater than 0, the code correctly solves the problem\n    if val > 0:\n        num_correct += 1\n\n# Print the number of codes that correctly solve the problem\nprint(num_correct)"
}
2022-04-13 19:03:12.667552 REASON stop
2022-04-13 19:03:12.681538 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, m, c = map(int, input().split())\n    b = list(map(int, input().split()))\n    a = [list(map(int, input().split())) for _ in range(n)]\n    ans = 0\n    for i in range(n):\n        if sum([x * y for x, y in zip(a[i], b)]) + c > 0:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 19:03:12.681623 REASON stop
2022-04-13 19:03:12.685352 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nn, m, c = map(int, input().split())\nb = list(map(int, input().split()))\na = [list(map(int, input().split())) for _ in range(n)]\n\nans = 0\nfor i in range(n):\n    temp = 0\n    for j in range(m):\n        temp += a[i][j] * b[j]\n    if temp + c > 0:\n        ans += 1\nprint(ans)"
}
2022-04-13 19:03:12.685460 REASON stop
2022-04-13 19:03:12.686658 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nN, M, C = map(int, input().split())\nB = list(map(int, input().split()))\nA = [list(map(int, input().split())) for i in range(N)]\n\ncount = 0\nfor i in range(N):\n    if sum([A[i][j] * B[j] for j in range(M)]) + C > 0:\n        count += 1\nprint(count)"
}
2022-04-13 19:03:12.686713 REASON stop
2022-04-13 19:03:12.687857 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nn, m, c = map(int, input().split())\nb = list(map(int, input().split()))\na = []\nfor _ in range(n):\n    a.append(list(map(int, input().split())))\n\nans = 0\nfor i in range(n):\n    tmp = c\n    for j in range(m):\n        tmp += a[i][j] * b[j]\n    if tmp > 0:\n        ans += 1\nprint(ans)"
}
2022-04-13 19:03:12.687958 REASON stop
