["\n\nn, m, c = map(int, input().split())\nb = list(map(int, input().split()))\na = []\nfor _ in range(n):\n    a.append(list(map(int, input().split())))\n\nans = 0\nfor i in range(n):\n    tmp = c\n    for j in range(m):\n        tmp += a[i][j] * b[j]\n    if tmp > 0:\n        ans += 1\nprint(ans)", "\n\nN, M, C = map(int, input().split())\nB = list(map(int, input().split()))\nA = [list(map(int, input().split())) for i in range(N)]\n\ncount = 0\nfor i in range(N):\n    if sum([A[i][j] * B[j] for j in range(M)]) + C > 0:\n        count += 1\nprint(count)", "\n\ndef main():\n    n, m, c = map(int, input().split())\n    b = list(map(int, input().split()))\n    a = [list(map(int, input().split())) for _ in range(n)]\n    ans = 0\n    for i in range(n):\n        if sum([x * y for x, y in zip(a[i], b)]) + c > 0:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    n, m, c = map(int, input().split())\n    b = list(map(int, input().split()))\n    cnt = 0\n    for _ in range(n):\n        a = list(map(int, input().split()))\n        if sum([a[i]*b[i] for i in range(m)]) + c > 0:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()", "\n\nn, m, c = map(int, input().split())\nb = list(map(int, input().split()))\n\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ncount = 0\nfor i in range(n):\n    if sum([a[i][j] * b[j] for j in range(m)]) + c > 0:\n        count += 1\nprint(count)", "\n\nn, m, c = map(int, input().split())\nb = list(map(int, input().split()))\na = [list(map(int, input().split())) for _ in range(n)]\n\nans = 0\nfor i in range(n):\n    temp = 0\n    for j in range(m):\n        temp += a[i][j] * b[j]\n    if temp + c > 0:\n        ans += 1\nprint(ans)", "\n\n# Get the number of source codes and the number of the characteristics of the source code\nnum_codes, num_chars, C = map(int, input().split())\n\n# Get the values of the characteristics of the problem\nB = list(map(int, input().split()))\n\n# Get the values of the characteristics of the codes\nA = [list(map(int, input().split())) for _ in range(num_codes)]\n\n# Initialize the number of codes that correctly solve the problem\nnum_correct = 0\n\n# For each code, if the code correctly solves the problem, increase the number of correct codes by 1\nfor i in range(num_codes):\n    # Calculate the value of the expression\n    val = C\n    for j in range(num_chars):\n        val += A[i][j] * B[j]\n    # If the expression is greater than 0, the code correctly solves the problem\n    if val > 0:\n        num_correct += 1\n\n# Print the number of codes that correctly solve the problem\nprint(num_correct)"]