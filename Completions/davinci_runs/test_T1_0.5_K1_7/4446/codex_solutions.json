["\n\n# Solution 1:\n#\n# def is_alive(health, attack):\n#     return health > 0 and health > attack\n#\n#\n# def main():\n#     n, a, b, k = map(int, input().split())\n#     h = list(map(int, input().split()))\n#\n#     if a == b:\n#         print(n)\n#         return\n#\n#     if a > b:\n#         a, b = b, a\n#         k = n - k\n#\n#     ans = 0\n#     for i in range(n):\n#         if is_alive(h[i], a):\n#             if is_alive(h[i], b):\n#                 if k > 0:\n#                     h[i] -= a\n#                     k -= 1\n#                 else:\n#                     h[i] -= b\n#                     ans += 1\n#             else:\n#                 ans += 1\n#\n#     print(ans)\n#\n#\n# main()\n\n# Solution 2:\n#\n# def main():\n#     n, a, b, k = map(int, input().split())\n#     h = list(map(int, input().split()))\n#\n#     if a == b:\n#         print(n)\n#         return\n#\n#     if a > b:\n#         a, b = b, a\n#         k = n - k\n#\n#     ans = 0\n#     for i in range(n):\n#         if h[i] > a:\n#             if h[i] > b:\n#                 if k > 0:\n#                     h[i] -= a\n#                     k -= 1\n#                 else:\n#                     h[i] -= b\n#                     ans += 1\n#             else:\n#                 ans += 1\n#\n#     print(ans)\n#\n#\n# main()\n\n# Solution 3:\n#\n# def main():\n#     n, a, b, k = map(int, input().split())\n#     h = list(map(int, input().split()))\n#\n#     if a == b:\n#         print(n)\n#         return\n#\n#     if a > b:\n#         a, b = b, a\n#         k = n - k\n#\n#     ans = 0\n#     for i in range(n):\n#         if h[i] > a:\n#             if h[i] > b:\n#                 if k > 0:\n#                     h[i] -= a\n#                     k -= 1\n#                 else:\n#                     h[i] -= b\n#                     ans += 1\n#             else:\n#                 ans += 1\n#\n#     print(ans)\n#\n#\n# main()\n\n# Solution 4:\n#\n# def main():\n#     n, a, b, k = map(int, input().split())\n#     h = list(map(int, input().split()))\n#\n#     if a == b:\n#         print(n)\n#         return\n#\n#     if a > b:\n#         a, b = b, a\n#         k = n - k\n#\n#     ans = 0\n#     for i in range(n):\n#         if h[i] > a:\n#             if h[i] > b:\n#                 if k > 0:\n#                     h[i] -= a\n#                     k -= 1\n#                 else:\n#                     h[i] -= b\n#                     ans += 1\n#             else:\n#                 ans += 1\n#\n#     print(ans)\n#\n#\n# main()\n\n# Solution 5:\ndef main():\n    n, a, b, k = map(int, input().split())\n    h = list(map(int, input().split()))\n\n    if a == b:\n        print(n)\n        return\n\n    if a > b:\n        a, b = b, a\n        k = n - k\n\n    ans = 0\n    for i in range(n):\n        if h[i] > a:\n            if h[i] > b:\n                if k > 0:\n                    h[i] -= a\n                    k -= 1\n                else:\n                    h[i] -= b\n                    ans += 1\n            else:\n                ans += 1\n\n    print(ans)\n\n\nmain()", "\n\ndef get_input():\n    n, a, b, k = map(int, input().split())\n    h = list(map(int, input().split()))\n    return n, a, b, k, h\n\ndef solve(n, a, b, k, h):\n    # Write your code here\n    pass\n\ndef main():\n    n, a, b, k, h = get_input()\n    ans = solve(n, a, b, k, h)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()", "\n\nfrom sys import stdin\n\ndef main():\n    n, a, b, k = map(int, stdin.readline().split())\n    h = map(int, stdin.readline().split())\n    h = list(h)\n    h.sort()\n\n    if a < b:\n        a, b = b, a\n        k = n - k\n\n    ans = 0\n    for i in range(n):\n        if h[i] <= a:\n            ans += 1\n            continue\n        if k > 0:\n            ans += 1\n            k -= 1\n            h[i] -= a\n        if h[i] <= b:\n            continue\n        if k > 0:\n            k -= 1\n            h[i] -= b\n        if h[i] <= 0:\n            ans += 1\n    print(ans)\n\nmain()\n\"\"\"\nfrom sys import stdin\n\ndef main():\n    n, a, b, k = map(int, stdin.readline().split())\n    h = map(int, stdin.readline().split())\n    h = list(h)\n    h.sort()\n\n    if a < b:\n        a, b = b, a\n        k = n - k\n\n    ans = 0\n    for i in range(n):\n        if h[i] <= a:\n            ans += 1\n            continue\n        if k > 0:\n            ans += 1\n            k -= 1\n            h[i] -= a\n        if h[i] <= b:\n            continue\n        if k > 0:\n            k -= 1\n            h[i] -= b\n        if h[i] <= 0:\n            ans += 1\n    print(ans)\n\nmain()\n\"\"\"", "\n\n# In python3, input() reads a line and parses it as a string.\n# raw_input() is the old function and is not available in python3.\n\n# n, a, b, k = map(int, input().split())\n# h = map(int, input().split())\n\ndef get_max_points(n, a, b, k, h):\n    \"\"\"\n    The max points you can get is the number of monsters you can kill.\n    If a <= b, you can only kill monsters of hp <= a.\n    If a > b, you can kill all monsters, but you can only use the secret\n    technique on monsters of hp <= b.\n    \"\"\"\n    if a <= b:\n        return len([hp for hp in h if hp <= a])\n    else:\n        # Count the number of monsters of hp <= b.\n        num_monsters_b = len([hp for hp in h if hp <= b])\n        # Count the number of monsters of hp <= a.\n        num_monsters_a = len([hp for hp in h if hp <= a])\n        # You can kill all monsters of hp <= a.\n        max_points = num_monsters_a\n        # You can kill all monsters of hp <= b, but you can only use the\n        # secret technique on monsters of hp <= b.\n        max_points = max(max_points, num_monsters_b - k)\n        return max_points\n\n# n, a, b, k = map(int, input().split())\n# h = map(int, input().split())\n# print(get_max_points(n, a, b, k, h))\n\n# Test cases:\n# n, a, b, k = 6, 2, 3, 3\n# h = [7, 10, 50, 12, 1, 8]\n# print(get_max_points(n, a, b, k, h))\n# n, a, b, k = 1, 1, 100, 99\n# h = [100]\n# print(get_max_points(n, a, b, k, h))\n# n, a, b, k = 7, 4, 2, 1\n# h = [1, 3, 5, 4, 2, 7, 6]\n# print(get_max_points(n, a, b, k, h))", "\n\ndef solve_problem(n, a, b, k, h):\n    h = sorted(h, reverse=True)\n    result = 0\n    for monster in h:\n        if k > 0:\n            if monster % (a+b) == 0:\n                result += 1\n                k -= 1\n            elif monster % (a+b) <= a:\n                result += 1\n            else:\n                k -= 1\n        else:\n            if monster % (a+b) == 0:\n                result += 1\n            elif monster % (a+b) <= a:\n                result += 1\n    return result\n\ndef main():\n    n, a, b, k = map(int, input().split())\n    h = list(map(int, input().split()))\n    result = solve_problem(n, a, b, k, h)\n    print(result)\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    n, a, b, k = [int(x) for x in input().split()]\n    h = [int(x) for x in input().split()]\n    s = 0\n    while len(h) > 0:\n        if a > b:\n            s += 1\n            h.pop(0)\n        elif a < b:\n            if k > 0:\n                k -= 1\n            else:\n                h[0] -= b\n                if h[0] <= 0:\n                    h.pop(0)\n        else:\n            if k > 0:\n                k -= 1\n                h.pop(0)\n            else:\n                h[0] -= b\n                if h[0] <= 0:\n                    h.pop(0)\n    print(s)\n\nif __name__ == '__main__':\n    main()"]