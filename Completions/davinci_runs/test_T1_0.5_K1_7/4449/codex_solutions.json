["\n\ndef main():\n    q = int(input())\n    assert 1 <= q <= 500\n\n    for _ in range(q):\n        n = int(input())\n        assert 1 <= n <= 100\n\n        sticks = list(map(int, input().split()))\n        assert len(sticks) == 4 * n\n        assert all(1 <= stick <= 10 ** 4 for stick in sticks)\n\n        if n == 1:\n            print(\"YES\")\n            continue\n\n        if n == 2:\n            print(\"YES\" if len(set(sticks)) == 2 else \"NO\")\n            continue\n\n        area = None\n        for i in range(4 * n):\n            for j in range(i + 1, 4 * n):\n                for k in range(j + 1, 4 * n):\n                    for l in range(k + 1, 4 * n):\n                        if sticks[i] == sticks[j] and sticks[k] == sticks[l]:\n                            if area is None:\n                                area = sticks[i] * sticks[k]\n                            else:\n                                if area != sticks[i] * sticks[k]:\n                                    print(\"NO\")\n                                    break\n                        else:\n                            print(\"NO\")\n                            break\n                    else:\n                        continue\n                    break\n                else:\n                    continue\n                break\n            else:\n                continue\n            break\n        else:\n            print(\"YES\")\n            continue\n\n\nif __name__ == \"__main__\":\n    main()", "\nimport math\n\ndef solve(sticks):\n    for i in range(0,len(sticks),4):\n        stick_area = sticks[i] * sticks[i+1]\n        if sticks[i+2] * sticks[i+3] != stick_area:\n            return \"NO\"\n    return \"YES\"\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        sticks = [int(x) for x in input().split()]\n        print(solve(sticks))\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\ndef read_ints(inp=sys.stdin):\n    return [int(i) for i in inp.readline().split()]\n\ndef read_int(inp=sys.stdin):\n    return int(inp.readline())\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        n = read_int()\n        sticks = read_ints()\n        print(\"YES\" if solve(n, sticks) else \"NO\")\n\ndef solve(n, sticks):\n    # n = 1\n    # sticks = [1, 1, 10, 10]\n    sticks.sort()\n    if n == 1:\n        return sticks[0] == sticks[1] and sticks[2] == sticks[3]\n    if n == 2:\n        return sticks[0] == sticks[1] and sticks[2] == sticks[3] and sticks[4] == sticks[5] and sticks[6] == sticks[7]\n    if n == 3:\n        return sticks[0] == sticks[1] and sticks[2] == sticks[3] and sticks[4] == sticks[5] and sticks[6] == sticks[7] and sticks[8] == sticks[9] and sticks[10] == sticks[11]\n    return False\n\nif __name__ == '__main__':\n    main()", "\n\nimport math\n\ndef check_rectangles(n, sticks):\n    if n == 1:\n        return \"YES\"\n    sticks = sorted(sticks)\n    for i in range(0, len(sticks), 4):\n        a, b, c, d = sticks[i:i+4]\n        if a == b and c == d and a*c == b*d:\n            continue\n        else:\n            return \"NO\"\n    return \"YES\"\n\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    sticks = [int(x) for x in input().split()]\n    print(check_rectangles(n, sticks))", "\n\n# SOLUTION\n# Let's consider all the possible cases.\n# Case 1:\n# If the number of sticks is not divisible by 4, then it is impossible to create any rectangle.\n# Case 2:\n# If the number of sticks is divisible by 4, then we can create a rectangle if the lengths of the sticks are equal.\n# Case 3:\n# If the number of sticks is divisible by 4 and the lengths of the sticks are not equal, we can create a rectangle if the lengths are equal in groups of 4.\n\n# Let's consider the second case.\n# If all the sticks have equal length, then we can create a rectangle.\n# If any two sticks have different lengths, then we can't create a rectangle.\n\n# Let's consider the third case.\n# If all the sticks have equal length in groups of 4, then we can create a rectangle.\n# If any two sticks have different lengths in a group of 4, then we can't create a rectangle.\n\n# We can use this logic to solve the problem.\n\nfor _ in range(int(input())):\n    n = int(input())\n    sticks = list(map(int, input().split()))\n    if len(sticks) % 4 != 0:\n        print(\"NO\")\n    else:\n        sticks = sorted(sticks)\n        if sticks.count(sticks[0]) == len(sticks):\n            print(\"YES\")\n        elif sticks.count(sticks[0]) == len(sticks) / 4:\n            print(\"YES\")\n        elif sticks.count(sticks[-1]) == len(sticks) / 4:\n            print(\"YES\")\n        else:\n            print(\"NO\")", "\nimport math\n\ndef equal_area_rectangles(n, a):\n    a.sort()\n    for i in range(0, len(a), 4):\n        if a[i] != a[i+1] or a[i+2] != a[i+3] or a[i]*a[i+2] != a[i+1]*a[i+3]:\n            return \"NO\"\n    return \"YES\"\n\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    print(equal_area_rectangles(n, a))"]