2022-04-13 19:12:47.097698 """
You are given a string S. Each character of S is uppercase or lowercase English letter.
Determine if S satisfies all of the following conditions:
 - The initial character of S is an uppercase A.
 - There is exactly one occurrence of C between the third character from the beginning and the second to last character (inclusive).
 - All letters except the A and C mentioned above are lowercase.

-----Constraints-----
 - 4 ≤ |S| ≤ 10 (|S| is the length of the string S.)
 - Each character of S is uppercase or lowercase English letter.

-----Input-----
Input is given from Standard Input in the following format:
S

-----Output-----
If S satisfies all of the conditions in the problem statement, print AC; otherwise, print WA.

-----Sample Input-----
AtCoder

-----Sample Output-----
AC

The first letter is A, the third letter is C and the remaining letters are all lowercase, so all the conditions are satisfied.
"""
2022-04-13 19:12:47.097710 --------------------------
2022-04-13 19:13:00.970459 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ns = input()\n\nif s[0] == 'A' and s[2:-1].count('C') == 1 and s[1:].islower():\n    print('AC')\nelse:\n    print('WA')"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ns = input()\n\nif s[0] == 'A' and s[2:-1].count('C') == 1 and s[1:].islower():\n    print('AC')\nelse:\n    print('WA')"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n#S = input()\nS = 'AtCoder'\n\nif S[0] == 'A' and S[2:-1].count('C') == 1:\n    for i in S[2:-1]:\n        if i != 'C' and i.islower() == False:\n            print('WA')\n            break\n    else:\n        print('AC')\nelse:\n    print('WA')"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\ns = sys.stdin.readline().strip()\n\nif s[0] != 'A' or s[2:-1].count('C') != 1 or s[1:].count('C') != 1:\n    print('WA')\nelse:\n    if s[1].islower() and s[-1].islower():\n        print('AC')\n    else:\n        print('WA')"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\ns = sys.stdin.readline().strip()\n\nif s[0] != \"A\":\n    print(\"WA\")\n    sys.exit()\n\nif s[2:-1].count(\"C\") != 1:\n    print(\"WA\")\n    sys.exit()\n\nfor c in s[1:]:\n    if c != \"C\" and c != \"A\" and not c.islower():\n        print(\"WA\")\n        sys.exit()\n\nprint(\"AC\")"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\ns = sys.stdin.readline().rstrip()\n\nif s[0] != \"A\":\n    print(\"WA\")\nelif s.count(\"C\") != 1:\n    print(\"WA\")\nelif s[2] != \"C\":\n    print(\"WA\")\nelif s[1].islower() == False or s[-1].islower() == False:\n    print(\"WA\")\nelse:\n    for i in range(3, len(s)-1):\n        if s[i].islower() == False:\n            print(\"WA\")\n            break\n    else:\n        print(\"AC\")"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nN = input()\n\nif N[0] == \"A\" and N.count(\"C\") == 1 and N[2:N.find(\"C\")] == N[2:N.find(\"C\")].lower() and N[N.find(\"C\")+1:] == N[N.find(\"C\")+1:].lower():\n    print(\"AC\")\nelse:\n    print(\"WA\")"
    }
  ],
  "created": 1649877167,
  "id": "cmpl-4wchzD81qXGNV4RWX1xopuBQppUkK",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 19:13:00.970715 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ns = input()\n\nif s[0] == 'A' and s[2:-1].count('C') == 1 and s[1:].islower():\n    print('AC')\nelse:\n    print('WA')"
}
2022-04-13 19:13:00.970747 REASON stop
2022-04-13 19:13:00.971246 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ns = input()\n\nif s[0] == 'A' and s[2:-1].count('C') == 1 and s[1:].islower():\n    print('AC')\nelse:\n    print('WA')"
}
2022-04-13 19:13:00.971364 REASON stop
2022-04-13 19:13:00.971757 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n#S = input()\nS = 'AtCoder'\n\nif S[0] == 'A' and S[2:-1].count('C') == 1:\n    for i in S[2:-1]:\n        if i != 'C' and i.islower() == False:\n            print('WA')\n            break\n    else:\n        print('AC')\nelse:\n    print('WA')"
}
2022-04-13 19:13:00.971809 REASON stop
2022-04-13 19:13:00.987084 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\ns = sys.stdin.readline().strip()\n\nif s[0] != 'A' or s[2:-1].count('C') != 1 or s[1:].count('C') != 1:\n    print('WA')\nelse:\n    if s[1].islower() and s[-1].islower():\n        print('AC')\n    else:\n        print('WA')"
}
2022-04-13 19:13:00.987176 REASON stop
2022-04-13 19:13:01.005592 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\ns = sys.stdin.readline().strip()\n\nif s[0] != \"A\":\n    print(\"WA\")\n    sys.exit()\n\nif s[2:-1].count(\"C\") != 1:\n    print(\"WA\")\n    sys.exit()\n\nfor c in s[1:]:\n    if c != \"C\" and c != \"A\" and not c.islower():\n        print(\"WA\")\n        sys.exit()\n\nprint(\"AC\")"
}
2022-04-13 19:13:01.005689 REASON stop
2022-04-13 19:13:01.006387 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\ns = sys.stdin.readline().rstrip()\n\nif s[0] != \"A\":\n    print(\"WA\")\nelif s.count(\"C\") != 1:\n    print(\"WA\")\nelif s[2] != \"C\":\n    print(\"WA\")\nelif s[1].islower() == False or s[-1].islower() == False:\n    print(\"WA\")\nelse:\n    for i in range(3, len(s)-1):\n        if s[i].islower() == False:\n            print(\"WA\")\n            break\n    else:\n        print(\"AC\")"
}
2022-04-13 19:13:01.006454 REASON stop
2022-04-13 19:13:01.007076 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nN = input()\n\nif N[0] == \"A\" and N.count(\"C\") == 1 and N[2:N.find(\"C\")] == N[2:N.find(\"C\")].lower() and N[N.find(\"C\")+1:] == N[N.find(\"C\")+1:].lower():\n    print(\"AC\")\nelse:\n    print(\"WA\")"
}
2022-04-13 19:13:01.007137 REASON stop
