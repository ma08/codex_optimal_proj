["\n\n\ndef main():\n    n = int(input())\n    s = input()\n    max_count = 0\n    max_char = None\n    for i in range(n-1):\n        count = s.count(s[i:i+2])\n        if count > max_count:\n            max_count = count\n            max_char = s[i:i+2]\n    print(max_char)\n\n\nif __name__ == \"__main__\":\n    main()", "\ns = input()\nresult = \"\"\nmax_count = 0\nfor i in range(len(s)-1):\n    if s.count(s[i:i+2]) > max_count:\n        max_count = s.count(s[i:i+2])\n        result = s[i:i+2]\nprint(result)", "\n\nn = int(input())\ns = input()\n\nmax_count = 0\nmax_two_gram = \"\"\n\nfor i in range(n - 1):\n    count = 0\n    for j in range(i, n - 1):\n        if s[j] == s[j + 1]:\n            count += 1\n        else:\n            break\n\n    if count > max_count:\n        max_count = count\n        max_two_gram = s[i] + s[i + 1]\n\nprint(max_two_gram)", "\n\nfrom collections import Counter\n\nn = int(input())\ns = input()\n\nc = Counter(s[i:i+2] for i in range(n-1))\nprint(c.most_common(1)[0][0])", "\n\nimport sys\nimport string\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    s = sys.stdin.readline().strip()\n    assert(len(s) == n)\n    assert(all(c in string.ascii_uppercase for c in s))\n    assert(n >= 2 and n <= 100)\n\n    two_grams = [s[i:i+2] for i in range(len(s)-1)]\n    counts = [0]*26**2\n    for two_gram in two_grams:\n        counts[string.ascii_uppercase.index(two_gram[0])*26 + string.ascii_uppercase.index(two_gram[1])] += 1\n    two_gram_max = two_grams[counts.index(max(counts))]\n    print(two_gram_max)\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef two_gram():\n    n = int(input())\n    s = input()\n    two_grams = {}\n    for i in range(n-1):\n        two_gram = s[i:i+2]\n        if two_gram in two_grams.keys():\n            two_grams[two_gram] += 1\n        else:\n            two_grams[two_gram] = 1\n    print(max(two_grams, key=two_grams.get))\n\nif __name__ == \"__main__\":\n    two_gram()", "\n\ndef main(n, s):\n    count = 0\n    result = \"\"\n    for i in range(n-1):\n        if s[i:i+2] in s[i+1:]:\n            temp = s[i+1:]\n            temp_count = temp.count(s[i:i+2])\n            if temp_count > count:\n                count = temp_count\n                result = s[i:i+2]\n    print(result)\n\nif __name__ == '__main__':\n    n = int(input())\n    s = input()\n    main(n, s)"]