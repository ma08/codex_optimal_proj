["\n\ndef solve(A, B, C, K):\n    if K <= A:\n        return K\n    elif K <= A + B:\n        return A\n    else:\n        return A - (K - (A + B))\n\nA, B, C, K = map(int, input().split())\nprint(solve(A, B, C, K))", "\n\na, b, c, k = map(int, input().split())\n\nif k <= a:\n    print(k)\nelif k <= a+b:\n    print(a)\nelse:\n    print(a - (k - (a+b)))", "\n\nimport sys\n\ndef get_max_sum(a, b, c, k):\n    sum = 0\n    cards = []\n    for i in range(a):\n        cards.append(1)\n    for i in range(b):\n        cards.append(0)\n    for i in range(c):\n        cards.append(-1)\n    cards.sort(reverse=True)\n    for i in range(k):\n        sum += cards[i]\n    return sum\n\nif __name__ == '__main__':\n    a, b, c, k = map(int, sys.stdin.readline().rstrip().split())\n    print(get_max_sum(a, b, c, k))", "\n\nfrom sys import stdin\n\ndef main():\n    # Get input\n    A, B, C, K = [int(x) for x in stdin.readline().rstrip().split()]\n    # Calculate\n    if K <= A:\n        print(K)\n    elif K <= A + B:\n        print(A)\n    else:\n        print(A - (K - (A + B)))\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    a,b,c,k = map(int,input().split())\n    if k <= a:\n        print(k)\n    elif k <= a + b:\n        print(a)\n    else:\n        print(a-(k-a-b))\n\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    # Get input\n    a, b, c, k = map(int, sys.stdin.readline().split())\n\n    # Get minimum number of cards\n    if k <= a:\n        print(k)\n    elif k <= a + b:\n        print(a)\n    else:\n        print(a - (k - (a + b)))\n\nif __name__ == '__main__':\n    main()", "\n\nimport heapq\n\na, b, c, k = map(int, input().split())\n\nheap = []\nheapq.heappush(heap, -a)\nheapq.heappush(heap, -b)\nheapq.heappush(heap, -c)\n\nfor _ in range(k):\n    num = heapq.heappop(heap)\n    heapq.heappush(heap, num+1)\n\nprint(-sum(heap))"]