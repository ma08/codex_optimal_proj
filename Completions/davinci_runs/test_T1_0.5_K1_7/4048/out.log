2022-04-13 17:46:24.890114 """
Takahashi is standing on a multiplication table with infinitely many rows and columns.
The square (i,j) contains the integer i \times j. Initially, Takahashi is standing at (1,1).
In one move, he can move from (i,j) to either (i+1,j) or (i,j+1).
Given an integer N, find the minimum number of moves needed to reach a square that contains N.

-----Constraints-----
 - 2 \leq N \leq 10^{12}
 - N is an integer.

-----Input-----
Input is given from Standard Input in the following format:
N

-----Output-----
Print the minimum number of moves needed to reach a square that contains the integer N.

-----Sample Input-----
10

-----Sample Output-----
5

(2,5) can be reached in five moves. We cannot reach a square that contains 10 in less than five moves.
"""
2022-04-13 17:46:24.890121 --------------------------
2022-04-13 17:46:49.940427 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\nn = int(sys.stdin.readline())\n\n# If the number is even, we can reach the number in 2*n-1 moves.\n# If the number is odd, we can reach the number in 2*n moves.\nif n % 2 == 0:\n    print(2*n-1)\nelse:\n    print(2*n)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    x = 1\n    y = 1\n    count = 1\n    while(True):\n        if (x*y >= n):\n            break\n        if (x < y):\n            x += 1\n        else:\n            y += 1\n        count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef main():\n    N = int(input())\n    ans = 0\n    while N > 0:\n        if N % 2 == 0:\n            N //= 2\n        else:\n            N -= 1\n        ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport math\n\n\ndef get_min_moves(n):\n    i = 1\n    while i ** 2 < n:\n        i += 1\n\n    return 2 * (i - 1) + (n - i ** 2) - 1\n\n\ndef get_min_moves_2(n):\n    i = math.sqrt(n)\n    i = math.ceil(i)\n    return 2 * (i - 1) + (n - i ** 2) - 1\n\n\nn = int(input())\nprint(get_min_moves(n))"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\nN = int(sys.stdin.readline())\n\ndef reach_N(N):\n    if N == 1:\n        return 0\n    else:\n        i = 1\n        while i * i < N:\n            i += 1\n        if i * i == N:\n            return i - 1\n        else:\n            return i + reach_N(N - i * (i - 1)) - 1\n\nprint(reach_N(N))"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport math\n\nn = int(input())\n\n# \u307e\u305a\u306f\u3001N\u3092\u7d20\u56e0\u6570\u5206\u89e3\u3059\u308b\nn_factors = []\n\n# 2\u304b\u3089N-1\u307e\u3067\u3067\u5272\u308a\u5207\u308c\u308b\u6570\u5b57\u3092\u7d20\u56e0\u6570\u3068\u3057\u3066\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0\u3057\u3066\u3044\u304f\nfor i in range(2, n):\n    while n % i == 0:\n        n_factors.append(i)\n        n //= i\n\n# N\u304c\u7d20\u6570\u3060\u3063\u305f\u5834\u5408\u3001N\u81ea\u4f53\u3092\u7d20\u56e0\u6570\u3068\u3057\u3066\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0\u3059\u308b\nif n != 1:\n    n_factors.append(n)\n\n# \u7d20\u56e0\u6570\u304c\u4e00\u3064\u3060\u3063\u305f\u5834\u5408\u306f\u3001\u305d\u308c\u30921\u56de\u4f7f\u3046\u3060\u3051\u3067N\u3092\u4f5c\u308c\u308b\u306e\u3067\u30010\u3092\u8fd4\u3059\nif len(n_factors) == 1:\n    print(0)\n    exit()\n\n# \u7d20\u56e0\u6570\u3092\u7d44\u307f\u5408\u308f\u305b\u3066N\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u305d\u308c\u3089\u3092\u4f7f\u3063\u3066N\u3092\u4f5c\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u79fb\u52d5\u56de\u6570\u3092\u8a08\u7b97\u3059\u308b\ncount = 0\nfor factor in n_factors:\n    count += math.ceil(math.log(n, factor))\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nN = int(input())\n\n# \u5c0f\u3055\u3044\u65b9\u304b\u3089\u9806\u306b\u8db3\u3057\u3066\u3044\u304f\nans = 0\nwhile N > 0:\n    ans += 1\n    if N % 2 == 0:\n        N //= 2\n    else:\n        N -= 1\n\nprint(ans)"
    }
  ],
  "created": 1649871985,
  "id": "cmpl-4wbMPqnngWgeQJKkVOi8ktR4lHELO",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 17:46:49.940719 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\nn = int(sys.stdin.readline())\n\n# If the number is even, we can reach the number in 2*n-1 moves.\n# If the number is odd, we can reach the number in 2*n moves.\nif n % 2 == 0:\n    print(2*n-1)\nelse:\n    print(2*n)"
}
2022-04-13 17:46:49.940754 REASON stop
2022-04-13 17:46:49.941251 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    x = 1\n    y = 1\n    count = 1\n    while(True):\n        if (x*y >= n):\n            break\n        if (x < y):\n            x += 1\n        else:\n            y += 1\n        count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 17:46:49.941419 REASON stop
2022-04-13 17:46:49.941843 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef main():\n    N = int(input())\n    ans = 0\n    while N > 0:\n        if N % 2 == 0:\n            N //= 2\n        else:\n            N -= 1\n        ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 17:46:49.941889 REASON stop
2022-04-13 17:46:49.943013 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport math\n\n\ndef get_min_moves(n):\n    i = 1\n    while i ** 2 < n:\n        i += 1\n\n    return 2 * (i - 1) + (n - i ** 2) - 1\n\n\ndef get_min_moves_2(n):\n    i = math.sqrt(n)\n    i = math.ceil(i)\n    return 2 * (i - 1) + (n - i ** 2) - 1\n\n\nn = int(input())\nprint(get_min_moves(n))"
}
2022-04-13 17:46:49.943065 REASON stop
2022-04-13 17:46:49.958828 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\nN = int(sys.stdin.readline())\n\ndef reach_N(N):\n    if N == 1:\n        return 0\n    else:\n        i = 1\n        while i * i < N:\n            i += 1\n        if i * i == N:\n            return i - 1\n        else:\n            return i + reach_N(N - i * (i - 1)) - 1\n\nprint(reach_N(N))"
}
2022-04-13 17:46:49.958938 REASON stop
2022-04-13 17:46:49.959623 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport math\n\nn = int(input())\n\n# \u307e\u305a\u306f\u3001N\u3092\u7d20\u56e0\u6570\u5206\u89e3\u3059\u308b\nn_factors = []\n\n# 2\u304b\u3089N-1\u307e\u3067\u3067\u5272\u308a\u5207\u308c\u308b\u6570\u5b57\u3092\u7d20\u56e0\u6570\u3068\u3057\u3066\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0\u3057\u3066\u3044\u304f\nfor i in range(2, n):\n    while n % i == 0:\n        n_factors.append(i)\n        n //= i\n\n# N\u304c\u7d20\u6570\u3060\u3063\u305f\u5834\u5408\u3001N\u81ea\u4f53\u3092\u7d20\u56e0\u6570\u3068\u3057\u3066\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0\u3059\u308b\nif n != 1:\n    n_factors.append(n)\n\n# \u7d20\u56e0\u6570\u304c\u4e00\u3064\u3060\u3063\u305f\u5834\u5408\u306f\u3001\u305d\u308c\u30921\u56de\u4f7f\u3046\u3060\u3051\u3067N\u3092\u4f5c\u308c\u308b\u306e\u3067\u30010\u3092\u8fd4\u3059\nif len(n_factors) == 1:\n    print(0)\n    exit()\n\n# \u7d20\u56e0\u6570\u3092\u7d44\u307f\u5408\u308f\u305b\u3066N\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u305d\u308c\u3089\u3092\u4f7f\u3063\u3066N\u3092\u4f5c\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u79fb\u52d5\u56de\u6570\u3092\u8a08\u7b97\u3059\u308b\ncount = 0\nfor factor in n_factors:\n    count += math.ceil(math.log(n, factor))\n\nprint(count)"
}
2022-04-13 17:46:49.959698 REASON stop
2022-04-13 17:46:49.972032 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nN = int(input())\n\n# \u5c0f\u3055\u3044\u65b9\u304b\u3089\u9806\u306b\u8db3\u3057\u3066\u3044\u304f\nans = 0\nwhile N > 0:\n    ans += 1\n    if N % 2 == 0:\n        N //= 2\n    else:\n        N -= 1\n\nprint(ans)"
}
2022-04-13 17:46:49.972151 REASON stop
