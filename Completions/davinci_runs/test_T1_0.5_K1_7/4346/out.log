2022-04-13 20:14:03.620190 """
Vova plans to go to the conference by train. Initially, the train is at the point $1$ and the destination point of the path is the point $L$. The speed of the train is $1$ length unit per minute (i.e. at the first minute the train is at the point $1$, at the second minute — at the point $2$ and so on).

There are lanterns on the path. They are placed at the points with coordinates divisible by $v$ (i.e. the first lantern is at the point $v$, the second is at the point $2v$ and so on).

There is also exactly one standing train which occupies all the points from $l$ to $r$ inclusive.

Vova can see the lantern at the point $p$ if $p$ is divisible by $v$ and there is no standing train at this position ($p \not\in [l; r]$). Thus, if the point with the lantern is one of the points covered by the standing train, Vova can't see this lantern.

Your problem is to say the number of lanterns Vova will see during the path. Vova plans to go to $t$ different conferences, so you should answer $t$ independent queries.


-----Input-----

The first line of the input contains one integer $t$ ($1 \le t \le 10^4$) — the number of queries.

Then $t$ lines follow. The $i$-th line contains four integers $L_i, v_i, l_i, r_i$ ($1 \le L, v \le 10^9$, $1 \le l \le r \le L$) — destination point of the $i$-th path, the period of the lantern appearance and the segment occupied by the standing train.


-----Output-----

Print $t$ lines. The $i$-th line should contain one integer — the answer for the $i$-th query.


-----Example-----
Input
4
10 2 3 7
100 51 51 51
1234 1 100 199
1000000000 1 1 1000000000

Output
3
0
1134
0



-----Note-----

For the first example query, the answer is $3$. There are lanterns at positions $2$, $4$, $6$, $8$ and $10$, but Vova didn't see the lanterns at positions $4$ and $6$ because of the standing train.

For the second example query, the answer is $0$ because the only lantern is at the point $51$ and there is also a standing train at this point.

For the third example query, the answer is $1134$ because there are $1234$ lanterns, but Vova didn't see the lanterns from the position $100$ to the position $199$ inclusive.

For the fourth example query, the answer is $0$ because the standing train covers the whole path.
"""
2022-04-13 20:14:03.620217 --------------------------
2022-04-13 20:14:19.316253 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n# Solution\n\nimport sys\nread = sys.stdin.readline\n\nt = int(read())\n\nfor _ in range(t):\n    L, v, l, r = map(int, read().split())\n    seen = L // v\n    if r // v == l // v:\n        seen -= (r - l + 1) // v\n    print(seen)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    t = int(sys.stdin.readline().strip())\n    for i in range(t):\n        L, v, l, r = map(int, sys.stdin.readline().strip().split())\n        start = math.ceil(l / v)\n        end = math.floor(r / v)\n        print(math.floor(L / v) - end + start - 1)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef solve(L, v, l, r):\n    if l == r:\n        return 0\n    if l % v == 0:\n        l += 1\n    if r % v == 0:\n        r -= 1\n    if l > r:\n        return 0\n    return (r - l) // v + 1\n\nt = int(input())\nfor i in range(t):\n    L, v, l, r = map(int, input().split())\n    print(solve(L, v, l, r))"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ntest_cases = int(input())\n\nfor _ in range(test_cases):\n    l, v, l1, r1 = map(int, input().split())\n    lanterns = l // v\n    if r1 % v == 0:\n        lanterns -= 1\n    if l1 % v == 0:\n        lanterns -= 1\n    print(lanterns)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef lanterns(L, v, l, r):\n    if l > r:\n        return 0\n    if l == r:\n        return 1\n    if l == 1:\n        return (r//v) + 1\n    return (r//v) - ((l-1)//v)\n\nt = int(input())\nfor i in range(t):\n    L, v, l, r = map(int, input().split())\n    print(lanterns(L, v, l, r))"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": ""
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nt = int(input())\nfor _ in range(t):\n    L, v, l, r = [int(x) for x in input().split()]\n    print(min(L//v, (r-1)//v, (L-l)//v))"
    }
  ],
  "created": 1649880843,
  "id": "cmpl-4wdfHz6bX4ZbPNNY7przx4GLqWIDK",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 20:14:19.316560 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n# Solution\n\nimport sys\nread = sys.stdin.readline\n\nt = int(read())\n\nfor _ in range(t):\n    L, v, l, r = map(int, read().split())\n    seen = L // v\n    if r // v == l // v:\n        seen -= (r - l + 1) // v\n    print(seen)"
}
2022-04-13 20:14:19.316596 REASON stop
2022-04-13 20:14:19.317050 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\nimport math\n\ndef main():\n    t = int(sys.stdin.readline().strip())\n    for i in range(t):\n        L, v, l, r = map(int, sys.stdin.readline().strip().split())\n        start = math.ceil(l / v)\n        end = math.floor(r / v)\n        print(math.floor(L / v) - end + start - 1)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 20:14:19.317157 REASON stop
2022-04-13 20:14:19.317601 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef solve(L, v, l, r):\n    if l == r:\n        return 0\n    if l % v == 0:\n        l += 1\n    if r % v == 0:\n        r -= 1\n    if l > r:\n        return 0\n    return (r - l) // v + 1\n\nt = int(input())\nfor i in range(t):\n    L, v, l, r = map(int, input().split())\n    print(solve(L, v, l, r))"
}
2022-04-13 20:14:19.317653 REASON stop
2022-04-13 20:14:19.342345 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ntest_cases = int(input())\n\nfor _ in range(test_cases):\n    l, v, l1, r1 = map(int, input().split())\n    lanterns = l // v\n    if r1 % v == 0:\n        lanterns -= 1\n    if l1 % v == 0:\n        lanterns -= 1\n    print(lanterns)"
}
2022-04-13 20:14:19.342444 REASON stop
2022-04-13 20:14:19.343122 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef lanterns(L, v, l, r):\n    if l > r:\n        return 0\n    if l == r:\n        return 1\n    if l == 1:\n        return (r//v) + 1\n    return (r//v) - ((l-1)//v)\n\nt = int(input())\nfor i in range(t):\n    L, v, l, r = map(int, input().split())\n    print(lanterns(L, v, l, r))"
}
2022-04-13 20:14:19.343193 REASON stop
2022-04-13 20:14:19.359259 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": ""
}
2022-04-13 20:14:19.359360 REASON stop
2022-04-13 20:14:19.360103 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nt = int(input())\nfor _ in range(t):\n    L, v, l, r = [int(x) for x in input().split()]\n    print(min(L//v, (r-1)//v, (L-l)//v))"
}
2022-04-13 20:14:19.360168 REASON stop
