["\n\n#N = int(input())\n#sentence = [input() for i in range(N)]\n\nN = 5\nsentence = ['this', 'sentence', 'has', '$', 'letters']\n\nnums = {'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9, 'ten':10, 'eleven':11, 'twelve':12, 'thirteen':13, 'fourteen':14, 'fifteen':15, 'sixteen':16, 'seventeen':17, 'eighteen':18, 'nineteen':19, 'twenty':20, 'thirty':30, 'forty':40, 'fifty':50, 'sixty':60, 'seventy':70, 'eighty':80, 'ninety':90, 'onehundred':100, 'twohundred':200, 'threehundred':300, 'fourhundred':400, 'fivehundred':500, 'sixhundred':600, 'sevenhundred':700, 'eighthundred':800, 'ninehundred':900}\n\n#print(sentence)\n\nnum = 0\nfor i in range(len(sentence)):\n    if '$' in sentence[i]:\n        first = sentence[:i]\n        last = sentence[i+1:]\n    else:\n        for j in range(len(sentence[i])):\n            num += nums[sentence[i][j:]]\n\n#print(num)\n#print(first)\n#print(last)\n\ndef num2words(n):\n    result = []\n    if n < 10:\n        result.append(nums.keys()[nums.values().index(n)])\n    elif n < 20:\n        result.append(nums.keys()[nums.values().index(n)])\n    elif n < 100:\n        result.append(nums.keys()[nums.values().index(n - n%10)])\n        if n%10 != 0:\n            result.append(nums.keys()[nums.values().index(n%10)])\n    elif n < 1000:\n        result.append(nums.keys()[nums.values().index(n - n%100)])\n        if n%100 != 0:\n            result.append(num2words(n%100))\n    return ''.join(result)\n\n#print(num2words(num))\n\nprint(' '.join(first) + ' ' + num2words(num) + ' ' + ' '.join(last))", "\n\nimport sys\n\ndef get_number(n):\n    if n == 0:\n        return \"\"\n    elif n == 1:\n        return \"one\"\n    elif n == 2:\n        return \"two\"\n    elif n == 3:\n        return \"three\"\n    elif n == 4:\n        return \"four\"\n    elif n == 5:\n        return \"five\"\n    elif n == 6:\n        return \"six\"\n    elif n == 7:\n        return \"seven\"\n    elif n == 8:\n        return \"eight\"\n    elif n == 9:\n        return \"nine\"\n    elif n == 10:\n        return \"ten\"\n    elif n == 11:\n        return \"eleven\"\n    elif n == 12:\n        return \"twelve\"\n    elif n == 13:\n        return \"thirteen\"\n    elif n == 14:\n        return \"fourteen\"\n    elif n == 15:\n        return \"fifteen\"\n    elif n == 16:\n        return \"sixteen\"\n    elif n == 17:\n        return \"seventeen\"\n    elif n == 18:\n        return \"eighteen\"\n    elif n == 19:\n        return \"nineteen\"\n    elif n == 20:\n        return \"twenty\"\n    elif n == 30:\n        return \"thirty\"\n    elif n == 40:\n        return \"forty\"\n    elif n == 50:\n        return \"fifty\"\n    elif n == 60:\n        return \"sixty\"\n    elif n == 70:\n        return \"seventy\"\n    elif n == 80:\n        return \"eighty\"\n    elif n == 90:\n        return \"ninety\"\n    elif n < 100:\n        return get_number(n-n%10) + get_number(n%10)\n    elif n == 100:\n        return \"onehundred\"\n    elif n == 200:\n        return \"twohundred\"\n    elif n == 300:\n        return \"threehundred\"\n    elif n == 400:\n        return \"fourhundred\"\n    elif n == 500:\n        return \"fivehundred\"\n    elif n == 600:\n        return \"sixhundred\"\n    elif n == 700:\n        return \"sevenhundred\"\n    elif n == 800:\n        return \"eighthundred\"\n    elif n == 900:\n        return \"ninehundred\"\n    elif n < 1000:\n        return get_number(n-n%100) + get_number(n%100)\n\ndef main():\n    num_words = int(sys.stdin.readline())\n    words = []\n    word_count = 0\n    for _ in range(num_words):\n        word = sys.stdin.readline().strip()\n        if word == \"$\":\n            num_loc = word_count\n        else:\n            word_count += len(word)\n        words.append(word)\n    for i in range(1001):\n        if len(get_number(i)) == word_count:\n            words[num_loc] = get_number(i)\n            break\n    print(\" \".join(words))\n\nif __name__ == \"__main__\":\n    main()", "\n\ndigits = [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"]\nteens = [\"eleven\", \"twelve\", \"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\"]\ntens = [\"twenty\", \"thirty\", \"forty\", \"fifty\", \"sixty\", \"seventy\", \"eighty\", \"ninety\"]\nhundreds = [\"onehundred\", \"twohundred\", \"threehundred\", \"fourhundred\", \"fivehundred\", \"sixhundred\", \"sevenhundred\", \"eighthundred\", \"ninehundred\"]\n\ndef count_letters(s):\n    return len(''.join(s.split(\" \")))\n\ndef get_num_string(num):\n    if num == 0:\n        return \"\"\n    elif num <= 10:\n        return digits[num - 1]\n    elif num <= 19:\n        return teens[num - 11]\n    elif num < 100:\n        tens_val = num // 10\n        ones_val = num % 10\n        if ones_val == 0:\n            return tens[tens_val - 2]\n        else:\n            return tens[tens_val - 2] + digits[ones_val - 1]\n    elif num < 1000:\n        hundreds_val = num // 100\n        tens_val = num % 100 // 10\n        ones_val = num % 10\n        if tens_val == 0 and ones_val == 0:\n            return hundreds[hundreds_val - 1]\n        elif tens_val == 0:\n            return hundreds[hundreds_val - 1] + digits[ones_val - 1]\n        elif tens_val == 1:\n            return hundreds[hundreds_val - 1] + teens[ones_val - 1]\n        elif ones_val == 0:\n            return hundreds[hundreds_val - 1] + tens[tens_val - 2]\n        else:\n            return hundreds[hundreds_val - 1] + tens[tens_val - 2] + digits[ones_val - 1]\n\ndef get_num_string_len(num):\n    return len(get_num_string(num))\n\ndef get_num(sentence):\n    n = len(sentence)\n    for i in range(n):\n        if sentence[i] == '$':\n            return i\n\ndef get_sentence(sentence, num):\n    n = len(sentence)\n    i = get_num(sentence)\n    return sentence[:i] + get_num_string(num) + sentence[i + 1:]\n\ndef get_min_num(sentence):\n    n = len(sentence)\n    for i in range(1, 1000):\n        if get_num_string_len(i) == n:\n            return i\n\ndef main():\n    N = int(input())\n    sentence = []\n    for i in range(N):\n        sentence.append(input())\n    num = get_min_num(sentence)\n    sentence = get_sentence(sentence, num)\n    print(' '.join(sentence))\n\nif __name__ == \"__main__\":\n    main()", "\n\nn = int(input())\nsentence = []\nfor i in range(n):\n    sentence.append(input())\n\n# split sentence into words and number\nwords = []\nnumber = []\nfor i in range(n):\n    if sentence[i] == '$':\n        number = sentence[i+1:]\n        break\n    else:\n        words.append(sentence[i])\n\n# count number of letters in sentence\nnum_letters = 0\nfor word in words:\n    num_letters += len(word)\nfor word in number:\n    num_letters += len(word)\n\n# generate number\nnum_dict = {\n    1: 'one',\n    2: 'two',\n    3: 'three',\n    4: 'four',\n    5: 'five',\n    6: 'six',\n    7: 'seven',\n    8: 'eight',\n    9: 'nine',\n    10: 'ten',\n    11: 'eleven',\n    12: 'twelve',\n    13: 'thirteen',\n    14: 'fourteen',\n    15: 'fifteen',\n    16: 'sixteen',\n    17: 'seventeen',\n    18: 'eighteen',\n    19: 'nineteen',\n    20: 'twenty',\n    30: 'thirty',\n    40: 'forty',\n    50: 'fifty',\n    60: 'sixty',\n    70: 'seventy',\n    80: 'eighty',\n    90: 'ninety',\n    100: 'onehundred',\n    200: 'twohundred',\n    300: 'threehundred',\n    400: 'fourhundred',\n    500: 'fivehundred',\n    600: 'sixhundred',\n    700: 'sevenhundred',\n    800: 'eighthundred',\n    900: 'ninehundred'\n}\n\nnum_rev = []\nwhile num_letters > 0:\n    num_rev.append(num_letters % 10)\n    num_letters //= 10\n\nnum_rev.reverse()\nnum_name = []\n\nif len(num_rev) == 1:\n    num_name.append(num_dict[num_rev[0]])\nelif len(num_rev) == 2:\n    num_name.append(num_dict[(num_rev[0] * 10)])\n    if num_rev[1] != 0:\n        num_name.append(num_dict[num_rev[1]])\nelif len(num_rev) == 3:\n    num_name.append(num_dict[(num_rev[0] * 100)])\n    if (num_rev[1] * 10) + num_rev[2] >= 20:\n        num_name.append(num_dict[(num_rev[1] * 10)])\n        if num_rev[2] != 0:\n            num_name.append(num_dict[num_rev[2]])\n    else:\n        num_name.append(num_dict[(num_rev[1] * 10) + num_rev[2]])\n\n# print sentence\nfor word in words:\n    print(word, end=' ')\nfor word in num_name:\n    print(word, end=' ')\nfor word in number:\n    print(word, end=' ')", "\n\n#import sys\n#sys.stdin = open(\"sample.txt\", \"r\")\n\nN = int(input())\nwords = []\nfor i in range(N):\n    words.append(input())\n\n#print(words)\n\n# get the position of $\nfor i in range(N):\n    if words[i] == \"$\":\n        index = i\n\n#print(index)\n\n# get the number of letters before $\nletters = 0\nfor i in range(index):\n    letters += len(words[i])\n\n#print(letters)\n\n# get the name of the number\nif letters < 11:\n    name = [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"ten\"]\n    print(name[letters-1], end=\" \")\nelif letters < 20:\n    name = [\"eleven\", \"twelve\", \"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\"]\n    print(name[letters-11], end=\" \")\nelif letters < 100:\n    name = [\"twenty\", \"thirty\", \"forty\", \"fifty\", \"sixty\", \"seventy\", \"eighty\", \"ninety\"]\n    print(name[(letters//10)-2], end=\"\")\n    if letters % 10 != 0:\n        print(name[(letters%10)-1], end=\" \")\n    else:\n        print(\" \", end=\"\")\nelse:\n    name = [\"onehundred\", \"twohundred\", \"threehundred\", \"fourhundred\", \"fivehundred\", \"sixhundred\", \"sevenhundred\", \"eighthundred\", \"ninehundred\"]\n    print(name[(letters//100)-1], end=\"\")\n    if letters % 100 != 0:\n        print(name[((letters%100)//10)-2], end=\"\")\n        if letters % 10 != 0:\n            print(name[(letters%10)-1], end=\" \")\n        else:\n            print(\" \", end=\"\")\n    else:\n        print(\" \", end=\"\")\n\n# print the remaining words\nfor i in range(index+1, N):\n    print(words[i], end=\" \")", "\n\nN = int(input())\nwords = []\nfor _ in range(N):\n    words.append(input())\n\nnumber = len(\"\".join(words).replace(\"$\", \"\"))\n\ndef word(n):\n    if n == 0:\n        return \"\"\n    elif n == 1:\n        return \"one\"\n    elif n == 2:\n        return \"two\"\n    elif n == 3:\n        return \"three\"\n    elif n == 4:\n        return \"four\"\n    elif n == 5:\n        return \"five\"\n    elif n == 6:\n        return \"six\"\n    elif n == 7:\n        return \"seven\"\n    elif n == 8:\n        return \"eight\"\n    elif n == 9:\n        return \"nine\"\n    elif n == 10:\n        return \"ten\"\n    elif n == 11:\n        return \"eleven\"\n    elif n == 12:\n        return \"twelve\"\n    elif n == 13:\n        return \"thirteen\"\n    elif n == 14:\n        return \"fourteen\"\n    elif n == 15:\n        return \"fifteen\"\n    elif n == 16:\n        return \"sixteen\"\n    elif n == 17:\n        return \"seventeen\"\n    elif n == 18:\n        return \"eighteen\"\n    elif n == 19:\n        return \"nineteen\"\n    elif n == 20:\n        return \"twenty\"\n    elif n == 30:\n        return \"thirty\"\n    elif n == 40:\n        return \"forty\"\n    elif n == 50:\n        return \"fifty\"\n    elif n == 60:\n        return \"sixty\"\n    elif n == 70:\n        return \"seventy\"\n    elif n == 80:\n        return \"eighty\"\n    elif n == 90:\n        return \"ninety\"\n    elif n == 100:\n        return \"onehundred\"\n    elif n == 200:\n        return \"twohundred\"\n    elif n == 300:\n        return \"threehundred\"\n    elif n == 400:\n        return \"fourhundred\"\n    elif n == 500:\n        return \"fivehundred\"\n    elif n == 600:\n        return \"sixhundred\"\n    elif n == 700:\n        return \"sevenhundred\"\n    elif n == 800:\n        return \"eighthundred\"\n    elif n == 900:\n        return \"ninehundred\"\n\ndef say(n):\n    if n < 20:\n        return word(n)\n    elif n < 100:\n        tens = n // 10 * 10\n        ones = n % 10\n        return word(tens) + word(ones)\n    elif n < 1000:\n        hundreds = n // 100 * 100\n        tens = n % 100\n        return word(hundreds) + say(tens)\n\nprint(\" \".join(words).replace(\"$\", say(number)))", "\n\nN = int(input())\nwords = []\nfor i in range(N):\n    words.append(input())\n\nnum = 0\nfor word in words:\n    if word != \"$\":\n        num += len(word)\n\ndef get_word(num):\n    if num == 0:\n        return \"\"\n    elif num < 11:\n        return [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"ten\"][num-1]\n    elif num < 20:\n        return [\"eleven\", \"twelve\", \"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\"][num-11]\n    elif num < 100:\n        tens = [\"twenty\", \"thirty\", \"forty\", \"fifty\", \"sixty\", \"seventy\", \"eighty\", \"ninety\"][num//10-2]\n        ones = get_word(num%10)\n        return tens + ones\n    else:\n        hundreds = [\"onehundred\", \"twohundred\", \"threehundred\", \"fourhundred\", \"fivehundred\", \"sixhundred\", \"sevenhundred\", \"eighthundred\", \"ninehundred\"][num//100-1]\n        tens = get_word(num%100)\n        return hundreds + tens\n\nprint(\" \".join(words).replace(\"$\", get_word(num)))"]