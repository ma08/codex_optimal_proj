["\n\nimport sys\n\ndef main():\n    v2, v3, v5, v7, v11, v13, v17, v19 = map(int, sys.stdin.readline().split())\n\n    if v19 == 18:\n        v19 = 0\n        v17 += 1\n    if v17 == 16:\n        v17 = 0\n        v13 += 1\n    if v13 == 12:\n        v13 = 0\n        v11 += 1\n    if v11 == 10:\n        v11 = 0\n        v7 += 1\n    if v7 == 6:\n        v7 = 0\n        v5 += 1\n    if v5 == 4:\n        v5 = 0\n        v3 += 1\n    if v3 == 2:\n        v3 = 0\n        v2 += 1\n    if v2 == 2:\n        print(0)\n    else:\n        print(2*3*5*7*11*13*17*19 - 1)\n\nif __name__ == \"__main__\":\n    main()", "\n\n\nimport sys\n\ndef main():\n    registers = list(map(int, sys.stdin.readline().split()))\n    count = 0\n    while True:\n        if registers[-1] == 18:\n            break\n        else:\n            registers[0] += 1\n            for i in range(1, len(registers)):\n                if registers[i-1] == 2:\n                    registers[i] += 1\n                    registers[i-1] = 0\n            count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\ndef main():\n    values = [int(x) for x in input().split()]\n    print(find_safe_operations(values))\n\ndef find_safe_operations(values):\n    safe = 0\n    for i in range(2, 20):\n        safe += (i - values[i - 2] - 1) // i\n    return safe\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\ndef get_input(source):\n    \"\"\"\n    Retrieves input from stdin or file. \n    source: 'stdin' or 'file'\n    \"\"\"\n    if source == 'stdin':\n        return sys.stdin.readline().strip('\\n').split(' ')\n    elif source == 'file':\n        with open('test.txt', 'r') as f:\n            return f.readline().strip('\\n').split(' ')\n\ndef get_output(N):\n    \"\"\"\n    Returns output for this problem.\n    N: integer\n    \"\"\"\n    return str(N)\n\ndef main():\n    # Retrieve input\n    v = get_input('file')\n    v = [int(i) for i in v]\n    # Compute output\n    N = 0\n    for i in range(8):\n        if v[i] == 0:\n            N += 1\n        elif v[i] == 1:\n            v[i] = 0\n            N += 1\n        else:\n            break\n    # Print output\n    print(get_output(N))\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    # Read input\n    v2, v3, v5, v7, v11, v13, v17, v19 = [int(x) for x in sys.stdin.readline().split()]\n    n = (2 - v2) + (3 - v3) * 2 + (5 - v5) * 6 + (7 - v7) * 30 + (11 - v11) * 210 + (13 - v13) * 2310 + (17 - v17) * 30030 + (19 - v19) * 510510\n    print(n)\n\nif __name__ == '__main__':\n    main()", "\n\n# Function to calculate the number of operations that can be performed\ndef operations(n):\n    # If all registers are at 19, no more operations can be performed\n    if (n[0] == 19 and n[1] == 19 and n[2] == 19 and n[3] == 19 and n[4] == 19 and n[5] == 19 and n[6] == 19 and n[7] == 19):\n        return 0\n\n    # If one register is at 19, calculate how many operations can be performed before the next register overflows\n    elif (n[0] == 19):\n        return 19 - n[1]\n    elif (n[1] == 19):\n        return 19 - n[2]\n    elif (n[2] == 19):\n        return 19 - n[3]\n    elif (n[3] == 19):\n        return 19 - n[4]\n    elif (n[4] == 19):\n        return 19 - n[5]\n    elif (n[5] == 19):\n        return 19 - n[6]\n    elif (n[6] == 19):\n        return 19 - n[7]\n\n    # If no register is at 19, calculate how many operations can be performed before the smallest register overflows\n    else:\n        return min(n)\n\n# Get input\nn = [int(x) for x in input().split()]\n\n# Print the number of operations that can be performed\nprint(operations(n))", "\n\nimport sys\nimport math\n\n# def main():\n#     v2, v3, v5, v7, v11, v13, v17, v19 = [int(x) for x in sys.stdin.readline().split()]\n#     count = 0\n#     for i in range(2, 20):\n#         if i == 2:\n#             count += 2 - v2\n#         elif i == 3:\n#             count += 3 - v3\n#         elif i == 5:\n#             count += 5 - v5\n#         elif i == 7:\n#             count += 7 - v7\n#         elif i == 11:\n#             count += 11 - v11\n#         elif i == 13:\n#             count += 13 - v13\n#         elif i == 17:\n#             count += 17 - v17\n#         elif i == 19:\n#             count += 19 - v19\n#         else:\n#             count += i\n#     print(count)\n\ndef main():\n    v2, v3, v5, v7, v11, v13, v17, v19 = [int(x) for x in sys.stdin.readline().split()]\n    count = 0\n    for i in range(2, 20):\n        if i == 2:\n            count += 2 - v2\n        elif i == 3:\n            count += 3 - v3\n        elif i == 5:\n            count += 5 - v5\n        elif i == 7:\n            count += 7 - v7\n        elif i == 11:\n            count += 11 - v11\n        elif i == 13:\n            count += 13 - v13\n        elif i == 17:\n            count += 17 - v17\n        elif i == 19:\n            count += 19 - v19\n        else:\n            count += i\n    print(count)\n\nif __name__ == '__main__':\n    main()"]