2022-04-13 18:50:57.125836 """
In a flower bed, there are N flowers, numbered 1,2,......,N. Initially, the heights of all flowers are 0.
You are given a sequence h=\{h_1,h_2,h_3,......\} as input. You would like to change the height of Flower k to h_k for all k (1 \leq  k \leq N), by repeating the following "watering" operation:
 - Specify integers l and r. Increase the height of Flower x by 1 for all x such that l \leq x \leq r.
Find the minimum number of watering operations required to satisfy the condition.

-----Constraints-----
 - 1 \leq N  \leq 100
 - 0 \leq h_i \leq 100
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
N
h_1 h_2 h_3 ...... h_N

-----Output-----
Print the minimum number of watering operations required to satisfy the condition.

-----Sample Input-----
4
1 2 2 1

-----Sample Output-----
2

The minimum number of watering operations required is 2.
One way to achieve it is:
 - Perform the operation with (l,r)=(1,3).
 - Perform the operation with (l,r)=(2,4).
"""
2022-04-13 18:50:57.125843 --------------------------
2022-04-13 18:51:13.067233 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += max(h[i] - ans, 0)\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nN = int(input())\nh = list(map(int, input().split()))\n\ndef count_watering_operations(N, h):\n    if N == 0:\n        return 0\n    max_height = max(h)\n    min_watering_operations = max_height\n    for i in range(1, max_height+1):\n        watering_operations = 0\n        for j in range(N):\n            if h[j] < i:\n                watering_operations += i - h[j]\n        if watering_operations < min_watering_operations:\n            min_watering_operations = watering_operations\n    return min_watering_operations\n\nprint(count_watering_operations(N, h))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nn = int(input())\nh = list(map(int, input().split()))\n\nans = 0\n\nfor i in range(n):\n    if i == 0:\n        if h[i] > 0:\n            ans += h[i]\n    else:\n        if h[i] > h[i-1]:\n            ans += h[i] - h[i-1]\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    num_flowers = int(input())\n    heights = [int(i) for i in input().split()]\n    result = 0\n    for i in range(num_flowers):\n        if heights[i] != i+1:\n            result += 1\n    print(result)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nn = int(input())\nh = list(map(int, input().split()))\n\nmax_h = max(h)\nans = 0\nfor i in range(max_h):\n    for j in range(n):\n        if h[j] > 0:\n            h[j] -= 1\n        else:\n            break\n    else:\n        ans += 1\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\nN = int(sys.stdin.readline())\nh = list(map(int, sys.stdin.readline().split()))\n\nans = 0\nfor i in range(N):\n    ans += h[i] - 1\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nn = int(input())\nh = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    if h[i] > cnt:\n        cnt = h[i]\n\nprint(cnt)"
    }
  ],
  "created": 1649875857,
  "id": "cmpl-4wcMrSkIDhPLROtyqBEK9RpmyACVZ",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 18:51:13.067522 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += max(h[i] - ans, 0)\n\nprint(ans)"
}
2022-04-13 18:51:13.067560 REASON stop
2022-04-13 18:51:13.068007 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nN = int(input())\nh = list(map(int, input().split()))\n\ndef count_watering_operations(N, h):\n    if N == 0:\n        return 0\n    max_height = max(h)\n    min_watering_operations = max_height\n    for i in range(1, max_height+1):\n        watering_operations = 0\n        for j in range(N):\n            if h[j] < i:\n                watering_operations += i - h[j]\n        if watering_operations < min_watering_operations:\n            min_watering_operations = watering_operations\n    return min_watering_operations\n\nprint(count_watering_operations(N, h))"
}
2022-04-13 18:51:13.068121 REASON stop
2022-04-13 18:51:13.068501 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nn = int(input())\nh = list(map(int, input().split()))\n\nans = 0\n\nfor i in range(n):\n    if i == 0:\n        if h[i] > 0:\n            ans += h[i]\n    else:\n        if h[i] > h[i-1]:\n            ans += h[i] - h[i-1]\n\nprint(ans)"
}
2022-04-13 18:51:13.068553 REASON stop
2022-04-13 18:51:13.079528 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    num_flowers = int(input())\n    heights = [int(i) for i in input().split()]\n    result = 0\n    for i in range(num_flowers):\n        if heights[i] != i+1:\n            result += 1\n    print(result)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 18:51:13.079624 REASON stop
2022-04-13 18:51:13.109303 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nn = int(input())\nh = list(map(int, input().split()))\n\nmax_h = max(h)\nans = 0\nfor i in range(max_h):\n    for j in range(n):\n        if h[j] > 0:\n            h[j] -= 1\n        else:\n            break\n    else:\n        ans += 1\nprint(ans)"
}
2022-04-13 18:51:13.109461 REASON stop
2022-04-13 18:51:13.110228 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\nN = int(sys.stdin.readline())\nh = list(map(int, sys.stdin.readline().split()))\n\nans = 0\nfor i in range(N):\n    ans += h[i] - 1\nprint(ans)"
}
2022-04-13 18:51:13.110289 REASON stop
2022-04-13 18:51:13.111034 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nn = int(input())\nh = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    if h[i] > cnt:\n        cnt = h[i]\n\nprint(cnt)"
}
2022-04-13 18:51:13.111098 REASON stop
