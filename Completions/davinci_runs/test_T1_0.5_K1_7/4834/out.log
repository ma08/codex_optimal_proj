2022-04-13 23:37:58.214888 """
Ante and Goran are preparing $N$ teams of young ambitious students for a student programming competition of students from University of Zagreb. Both of them have one algorithm they have to explain to each team. Of course, both can’t work with the same team at the same time and none of them can work with multiple teams simultaneously.

You are given the time it takes for each team to understand and implement an algorithm. Each algorithm lecture has to be done without interruption. Determine the minimal time required for Ante and Goran to do their lectures!

For additional explanation, consult the sample test clarifications.

-----Input-----
The first line of input contains the integer $N$, the number of teams.

The following line contains $N$ space separated integers, where the $i$’th integer denotes the time required for the $i$’th team to understand and implement an algorithm.

All numbers in the input belong to the interval $[1, 3 \cdot 10^5]$.

-----Output-----
The first and only line of output must contain the required number from the task.

Clarification of the first example: Each team needs $2$ units of time to understand and implement an algorithm. One of the possible schedules is that Ante gives his lectures to team $1$, team $2$ and team $3$, respectively, and Goran to team $3$, team $1$ and team $2$, respectively.

Clarification of the second example: One of the optimal schedules is that Ante gives lectures to team $2$, team $3$ and team $1$, respectively, but with a pause lasting $1$ unit of time between team $3$ and team $1$. Goran will give lectures to team $1$, team $3$ and team $2$, respectively.

-----Examples-----
Sample Input 1:
3
2 2 2
Sample Output 1:
6

Sample Input 2:
3
4 1 2
Sample Output 2:
8
"""
2022-04-13 23:37:58.214904 --------------------------
2022-04-13 23:38:15.296179 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": ""
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    teams = list(map(int, input().split()))\n    teams.sort()\n    #print(teams)\n    min_time = 0\n    for i in range(n):\n        min_time += teams[i] * (n - i)\n    print(min_time)\n    return\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\nprint(sum(times) - max(times))"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ndef main():\n    teams = int(input())\n    times = [int(x) for x in input().split()]\n    times.sort(reverse=True)\n\n    first = 0\n    second = 0\n    for i in range(teams):\n        if i % 2 == 0:\n            first += times[i]\n        else:\n            second += times[i]\n\n    print(first + second)\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nN = int(input())\ntimes = tuple(map(int, input().split()))\n\nprint(max(sum(times[::2]), sum(times[1::2])))"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\n# TODO: write a solution to this problem\n\n# print('Hello world!')\n\n\ndef main():\n    n = int(input())\n    teams = [int(x) for x in input().split()]\n\n    # print(n)\n    # print(teams)\n\n    # sort teams\n    teams.sort()\n\n    # print(teams)\n\n    # find sum of all teams\n    sum_teams = sum(teams)\n\n    # print(sum_teams)\n\n    # find sum of all teams except the last one\n    sum_teams_except_last = sum_teams - teams[-1]\n\n    # print(sum_teams_except_last)\n\n    result = sum_teams_except_last + teams[-1] * n\n\n    # print(result)\n\n    print(result)\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    times = list(map(int, input().split()))\n\n    times.sort()\n    total = 0\n    for i in range(n):\n        total += times[i] * (n-i)\n    print(total)\n\nif __name__ == \"__main__\":\n    main()"
    }
  ],
  "created": 1649893078,
  "id": "cmpl-4wgqc10lVkh30uuu9yTjAZD6ND7dg",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 23:38:15.296453 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": ""
}
2022-04-13 23:38:15.296484 REASON stop
2022-04-13 23:38:15.296795 test/intro-questions.txt_dir/4834/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4834/solutions.json'
2022-04-13 23:38:15.296809 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    teams = list(map(int, input().split()))\n    teams.sort()\n    #print(teams)\n    min_time = 0\n    for i in range(n):\n        min_time += teams[i] * (n - i)\n    print(min_time)\n    return\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 23:38:15.296911 REASON stop
2022-04-13 23:38:15.297145 test/intro-questions.txt_dir/4834/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4834/solutions.json'
2022-04-13 23:38:15.297156 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\nprint(sum(times) - max(times))"
}
2022-04-13 23:38:15.297188 REASON stop
2022-04-13 23:38:15.298085 test/intro-questions.txt_dir/4834/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4834/solutions.json'
2022-04-13 23:38:15.298101 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ndef main():\n    teams = int(input())\n    times = [int(x) for x in input().split()]\n    times.sort(reverse=True)\n\n    first = 0\n    second = 0\n    for i in range(teams):\n        if i % 2 == 0:\n            first += times[i]\n        else:\n            second += times[i]\n\n    print(first + second)\n\nmain()"
}
2022-04-13 23:38:15.298140 REASON stop
2022-04-13 23:38:15.315544 test/intro-questions.txt_dir/4834/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4834/solutions.json'
2022-04-13 23:38:15.315575 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nN = int(input())\ntimes = tuple(map(int, input().split()))\n\nprint(max(sum(times[::2]), sum(times[1::2])))"
}
2022-04-13 23:38:15.315645 REASON stop
2022-04-13 23:38:15.316325 test/intro-questions.txt_dir/4834/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4834/solutions.json'
2022-04-13 23:38:15.316350 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\n# TODO: write a solution to this problem\n\n# print('Hello world!')\n\n\ndef main():\n    n = int(input())\n    teams = [int(x) for x in input().split()]\n\n    # print(n)\n    # print(teams)\n\n    # sort teams\n    teams.sort()\n\n    # print(teams)\n\n    # find sum of all teams\n    sum_teams = sum(teams)\n\n    # print(sum_teams)\n\n    # find sum of all teams except the last one\n    sum_teams_except_last = sum_teams - teams[-1]\n\n    # print(sum_teams_except_last)\n\n    result = sum_teams_except_last + teams[-1] * n\n\n    # print(result)\n\n    print(result)\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 23:38:15.316405 REASON stop
2022-04-13 23:38:15.327735 test/intro-questions.txt_dir/4834/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4834/solutions.json'
2022-04-13 23:38:15.327778 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    times = list(map(int, input().split()))\n\n    times.sort()\n    total = 0\n    for i in range(n):\n        total += times[i] * (n-i)\n    print(total)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 23:38:15.327839 REASON stop
2022-04-13 23:38:15.344045 test/intro-questions.txt_dir/4834/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4834/solutions.json'
