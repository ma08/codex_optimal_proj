["\n\ndef repeatingCipher(s):\n    num_list = []\n    letter_list = []\n    current_letter = s[0]\n    current_count = 1\n    for i in range(1, len(s)):\n        if s[i] == current_letter:\n            current_count += 1\n        else:\n            num_list.append(current_count)\n            letter_list.append(current_letter)\n            current_letter = s[i]\n            current_count = 1\n    num_list.append(current_count)\n    letter_list.append(current_letter)\n\n    result = \"\"\n    for i in range(len(letter_list)):\n        result += letter_list[i] * num_list[i]\n    return result\n\nif __name__ == \"__main__\":\n    n = int(input())\n    s = input()\n    print(repeatingCipher(s))", "\n\n#-----Solution-----\n\nn = int(input())\nt = input()\ns = []\n\nfor i in range(n):\n    letter = t[i]\n    s.append(letter)\n    count = 1\n    while i < n-1 and t[i+1] == letter:\n        count += 1\n        i += 1\n    s.append(str(count))\n\nprint(''.join(s))", "\n\n#input\nn = input()\nt = raw_input()\n\n#solution\ndef decrypt(n,t):\n    s = ''\n    for i in range(1,n+1):\n        count = n/i\n        if n%i == 0:\n            count -= 1\n        s += t[i-1]*count\n    return s\n\nprint decrypt(n,t)", "\n\nn = int(input())\nt = input()\n\ns = \"\"\nfor i in range(n):\n    s += t[i]\n    t = t.replace(t[i], \"\")\n\nprint(s)", "\n\nn = int(input())\nt = input()\n\ns = ''\nfor i in range(1, n+1):\n    if n%i != 0:\n        continue\n    for j in range(i):\n        if t[:n//i] == t[j*n//i:(j+1)*n//i]:\n            s += t[:n//i]\n            break\n    if len(s) == i:\n        break\n        \nprint(s)", "\n\nn = int(input())\nt = input()\n\ndef decrypt(t):\n    \"\"\"\n    Decrypts string t, assuming it is encrypted by the repeating cipher\n    \"\"\"\n    s = \"\"\n    for i in range(1, n + 1):\n        char = t[i - 1]\n        occurences = t.count(char)\n        if occurences == i:\n            s += char\n            t = t.replace(char, \"\")\n    return s\n\nprint(decrypt(t))", "\n\nimport sys\n\ndef repeating_cipher(n, t):\n    s = \"\"\n    i = 1\n    while i <= n:\n        j = 0\n        while t[i+j] == t[i]:\n            j += 1\n        s += t[i]*(j+1)\n        i += j+1\n    return s\n\ndef main():\n    n = int(sys.stdin.readline())\n    t = sys.stdin.readline()\n    s = repeating_cipher(n, t)\n    print(s)\n\nif __name__ == \"__main__\":\n    main()"]