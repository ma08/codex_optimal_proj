["\n\n\nclass Solution:\n    def reverseBits(self, n: int) -> int:\n        return int(bin(n)[2:].zfill(32)[::-1], 2)", "\n\nclass Solution:\n    def reverseBits(self, n: int) -> int:\n        ret, power = 0, 31\n        while n:\n            ret += (n & 1) << power\n            n = n >> 1\n            power -= 1\n        return ret\n\nclass Solution:\n    def reverseBits(self, n: int) -> int:\n        ret, power = 0, 24\n        byte_arr = [n >> i & 0xff for i in range(0, 32, 8)]\n        for byte in byte_arr:\n            ret += self.reverseByte(byte) << power\n            power -= 8\n        return ret\n    \n    def reverseByte(self, byte):\n        ret = 0\n        for i in range(8):\n            ret = (ret << 1) + (byte & 1)\n            byte = byte >> 1\n        return ret", "\n\nclass Solution:\n    def reverseBits(self, n: int) -> int:\n        # get binary string\n        binary = bin(n)[2:].zfill(32)\n        # reverse string\n        reverse = binary[::-1]\n        # convert to int\n        return int(reverse, 2)", "\nclass Solution:\n    def reverseBits(self, n: int) -> int:\n        return int(bin(n)[2:].rjust(32, '0')[::-1], 2)", "\n\nclass Solution:\n    def reverseBits(self, n: int) -> int:\n        res = 0\n        for i in range(32):\n            res <<= 1\n            res += n & 1\n            n >>= 1\n        return res", "\nclass Solution:\n    def reverseBits(self, n: int) -> int:\n        return int(bin(n)[2:].zfill(32)[::-1], 2)\n\nclass Solution2:\n    def reverseBits(self, n: int) -> int:\n        ans = 0\n        for _ in range(32):\n            ans = (ans << 1) + (n & 1)\n            n >>= 1\n        return ans\n\nclass Solution3:\n    def reverseBits(self, n: int) -> int:\n        ans = 0\n        for _ in range(32):\n            ans = (ans << 1) + (n & 1)\n            n >>= 1\n        return ans\n\nclass Solution4:\n    def reverseBits(self, n: int) -> int:\n        ans = 0\n        for _ in range(32):\n            ans = (ans << 1) + (n & 1)\n            n >>= 1\n        return ans\n\nclass Solution5:\n    def reverseBits(self, n: int) -> int:\n        ans = 0\n        for _ in range(32):\n            ans = (ans << 1) + (n & 1)\n            n >>= 1\n        return ans\n\nclass Solution6:\n    def reverseBits(self, n: int) -> int:\n        ans = 0\n        for _ in range(32):\n            ans = (ans << 1) + (n & 1)\n            n >>= 1\n        return ans", "\n\nclass Solution:\n    def reverseBits(self, n: int) -> int:\n        temp = '{0:032b}'.format(n)\n        return int(temp[::-1], 2)"]