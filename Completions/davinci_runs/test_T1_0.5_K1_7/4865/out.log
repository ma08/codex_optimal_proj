2022-04-13 23:48:03.450871 """
Daylight Saving Time (DST) is the practice of advancing clocks forward during the summer time, usually by one hour, to gain an extra hour of sunlight in the evenings, at the cost of darker mornings. Countries and regions have changed their DST practices over the years, sometimes changing the dates they switch the clocks, and other times changing the amount of minutes the clock changes by.

This creates a real hassle. Sleep cycles are disrupted, operating systems and other computer software needs to follow special rules, and sometimes people end up late to work because of it.

To help make this easier on people, youâ€™ve decided to make a computer program which calculates the new time after an adjustment.

-----Input-----
Input consists of a single integer $N$ ($1 \le N \le 500$) indicating the number of test cases that follow. Each test case consists of a single line with the following information:
 - a single character to indicate whether the clock will roll forwards (F) or backwards (B),
 - an integer $D$ ($0 \le D \le 120$) indicating the number of minutes to change by,
 - an integer $H$ ($0 \le H < 24$) indicating the hour the clock currently reads (without leading zeros), and
 - an integer $M$ ($0 \le M < 60$) indicating the minutes the clock currently reads.

-----Output-----
For each test case, give the time (hours in $24$-hour format, followed by a space, followed by minutes) after the adjustment has occurred, one test case per line. You may report the numbers without leading zeros.

-----Examples-----
Sample Input:
1
F 60 13 20
Sample Output:
14 20
"""
2022-04-13 23:48:03.450885 --------------------------
2022-04-13 23:48:21.421416 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    for i in range(n):\n        line = sys.stdin.readline().strip().split()\n        sign = line[0]\n        change = int(line[1])\n        hour = int(line[2])\n        minute = int(line[3])\n        if sign == 'F':\n            minute += change\n            if minute >= 60:\n                hour += 1\n                minute -= 60\n        else:\n            minute -= change\n            if minute < 0:\n                hour -= 1\n                minute += 60\n        if hour >= 24:\n            hour -= 24\n        if hour < 0:\n            hour += 24\n        print hour, minute\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    for line in sys.stdin:\n        line = line.strip()\n        line = line.split()\n        if line[0] == 'F':\n            add_time(line)\n        elif line[0] == 'B':\n            subtract_time(line)\n\ndef add_time(line):\n    time = int(line[3]) + int(line[2])*60 + int(line[1])\n    if time > 1439:\n        time = time - 1440\n    hour = time // 60\n    minute = time % 60\n    print(hour, minute)\n\ndef subtract_time(line):\n    time = int(line[3]) + int(line[2])*60 - int(line[1])\n    if time < 0:\n        time = time + 1440\n    hour = time // 60\n    minute = time % 60\n    print(hour, minute)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport fileinput\n\nfor line in fileinput.input():\n    if fileinput.isfirstline():\n        continue\n    f, d, h, m = line.split()\n    d = int(d)\n    h = int(h)\n    m = int(m)\n    if f == 'B':\n        d = -d\n    m += d\n    while m < 0:\n        m += 60\n        h -= 1\n    while m >= 60:\n        m -= 60\n        h += 1\n    while h < 0:\n        h += 24\n    while h >= 24:\n        h -= 24\n    print(h, m)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    num_cases = int(sys.stdin.readline().strip())\n    for i in range(num_cases):\n        case = sys.stdin.readline().strip().split()\n        if case[0] == \"F\":\n            time = (int(case[2]) * 60 + int(case[3]) + int(case[1])) % (24 * 60)\n        else:\n            time = (int(case[2]) * 60 + int(case[3]) - int(case[1])) % (24 * 60)\n        print(time // 60, time % 60)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef change_time(direction, minutes, hours, minutes_past):\n    if direction == 'F':\n        if minutes_past + minutes >= 60:\n            hours += 1\n            minutes_past = (minutes_past + minutes) % 60\n        else:\n            minutes_past += minutes\n    else:\n        if minutes_past - minutes < 0:\n            hours -= 1\n            minutes_past = 60 - (minutes - minutes_past) % 60\n        else:\n            minutes_past -= minutes\n    return hours, minutes_past\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        direction, minutes, hours, minutes_past = input().split()\n        minutes, hours, minutes_past = int(minutes), int(hours), int(minutes_past)\n        hours, minutes_past = change_time(direction, minutes, hours, minutes_past)\n        print(hours, minutes_past)\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n\n    for i in range(n):\n        line = sys.stdin.readline()\n        line = line.strip()\n        line = line.split()\n\n        # Get out the relevant data\n        direction = line[0]\n        minutes = int(line[1])\n        time = line[2] + \":\" + line[3]\n\n        # Split the time into hours and minutes\n        time = time.split(\":\")\n        hours = int(time[0])\n        minutes = int(time[1])\n\n        # Roll the clock forward or backward\n        if direction == \"F\":\n            minutes += minutes\n        else:\n            minutes -= minutes\n\n        # Get the current hour and minute\n        if minutes >= 60:\n            hours += 1\n            minutes -= 60\n        elif minutes < 0:\n            hours -= 1\n            minutes += 60\n\n        # Get the current hour and minute\n        if hours >= 24:\n            hours -= 24\n        elif hours < 0:\n            hours += 24\n\n        # Print the new time\n        print(str(hours) + \" \" + str(minutes))\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    cases = int(sys.stdin.readline())\n    for case in range(cases):\n        line = sys.stdin.readline().split()\n        direction = line[0]\n        minutes = int(line[1])\n        hour = int(line[2])\n        minute = int(line[3])\n        if direction == \"F\":\n            minute += minutes\n        else:\n            minute -= minutes\n        if minute >= 60:\n            hour += minute // 60\n            minute %= 60\n        elif minute < 0:\n            hour += (minute // 60) - 1\n            minute = 60 + (minute % 60)\n        if hour >= 24:\n            hour %= 24\n        elif hour < 0:\n            hour = 24 + (hour % 24)\n        print(str(hour) + \" \" + str(minute))\n\nmain()"
    }
  ],
  "created": 1649893683,
  "id": "cmpl-4wh0NxGqRkruCosjrdZcUtq0u0CmD",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 23:48:21.421708 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    for i in range(n):\n        line = sys.stdin.readline().strip().split()\n        sign = line[0]\n        change = int(line[1])\n        hour = int(line[2])\n        minute = int(line[3])\n        if sign == 'F':\n            minute += change\n            if minute >= 60:\n                hour += 1\n                minute -= 60\n        else:\n            minute -= change\n            if minute < 0:\n                hour -= 1\n                minute += 60\n        if hour >= 24:\n            hour -= 24\n        if hour < 0:\n            hour += 24\n        print hour, minute\n\nmain()"
}
2022-04-13 23:48:21.421811 REASON stop
2022-04-13 23:48:21.422148 test/intro-questions.txt_dir/4865/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4865/solutions.json'
2022-04-13 23:48:21.422163 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    for line in sys.stdin:\n        line = line.strip()\n        line = line.split()\n        if line[0] == 'F':\n            add_time(line)\n        elif line[0] == 'B':\n            subtract_time(line)\n\ndef add_time(line):\n    time = int(line[3]) + int(line[2])*60 + int(line[1])\n    if time > 1439:\n        time = time - 1440\n    hour = time // 60\n    minute = time % 60\n    print(hour, minute)\n\ndef subtract_time(line):\n    time = int(line[3]) + int(line[2])*60 - int(line[1])\n    if time < 0:\n        time = time + 1440\n    hour = time // 60\n    minute = time % 60\n    print(hour, minute)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 23:48:21.422272 REASON stop
2022-04-13 23:48:21.422523 test/intro-questions.txt_dir/4865/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4865/solutions.json'
2022-04-13 23:48:21.422535 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport fileinput\n\nfor line in fileinput.input():\n    if fileinput.isfirstline():\n        continue\n    f, d, h, m = line.split()\n    d = int(d)\n    h = int(h)\n    m = int(m)\n    if f == 'B':\n        d = -d\n    m += d\n    while m < 0:\n        m += 60\n        h -= 1\n    while m >= 60:\n        m -= 60\n        h += 1\n    while h < 0:\n        h += 24\n    while h >= 24:\n        h -= 24\n    print(h, m)"
}
2022-04-13 23:48:21.422572 REASON stop
2022-04-13 23:48:21.423687 test/intro-questions.txt_dir/4865/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4865/solutions.json'
2022-04-13 23:48:21.423707 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    num_cases = int(sys.stdin.readline().strip())\n    for i in range(num_cases):\n        case = sys.stdin.readline().strip().split()\n        if case[0] == \"F\":\n            time = (int(case[2]) * 60 + int(case[3]) + int(case[1])) % (24 * 60)\n        else:\n            time = (int(case[2]) * 60 + int(case[3]) - int(case[1])) % (24 * 60)\n        print(time // 60, time % 60)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 23:48:21.423753 REASON stop
2022-04-13 23:48:21.438585 test/intro-questions.txt_dir/4865/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4865/solutions.json'
2022-04-13 23:48:21.438615 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef change_time(direction, minutes, hours, minutes_past):\n    if direction == 'F':\n        if minutes_past + minutes >= 60:\n            hours += 1\n            minutes_past = (minutes_past + minutes) % 60\n        else:\n            minutes_past += minutes\n    else:\n        if minutes_past - minutes < 0:\n            hours -= 1\n            minutes_past = 60 - (minutes - minutes_past) % 60\n        else:\n            minutes_past -= minutes\n    return hours, minutes_past\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        direction, minutes, hours, minutes_past = input().split()\n        minutes, hours, minutes_past = int(minutes), int(hours), int(minutes_past)\n        hours, minutes_past = change_time(direction, minutes, hours, minutes_past)\n        print(hours, minutes_past)\n\nmain()"
}
2022-04-13 23:48:21.438686 REASON stop
2022-04-13 23:48:21.439181 test/intro-questions.txt_dir/4865/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4865/solutions.json'
2022-04-13 23:48:21.439217 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n\n    for i in range(n):\n        line = sys.stdin.readline()\n        line = line.strip()\n        line = line.split()\n\n        # Get out the relevant data\n        direction = line[0]\n        minutes = int(line[1])\n        time = line[2] + \":\" + line[3]\n\n        # Split the time into hours and minutes\n        time = time.split(\":\")\n        hours = int(time[0])\n        minutes = int(time[1])\n\n        # Roll the clock forward or backward\n        if direction == \"F\":\n            minutes += minutes\n        else:\n            minutes -= minutes\n\n        # Get the current hour and minute\n        if minutes >= 60:\n            hours += 1\n            minutes -= 60\n        elif minutes < 0:\n            hours -= 1\n            minutes += 60\n\n        # Get the current hour and minute\n        if hours >= 24:\n            hours -= 24\n        elif hours < 0:\n            hours += 24\n\n        # Print the new time\n        print(str(hours) + \" \" + str(minutes))\n\nmain()"
}
2022-04-13 23:48:21.439285 REASON stop
2022-04-13 23:48:21.458511 test/intro-questions.txt_dir/4865/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4865/solutions.json'
2022-04-13 23:48:21.458536 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    cases = int(sys.stdin.readline())\n    for case in range(cases):\n        line = sys.stdin.readline().split()\n        direction = line[0]\n        minutes = int(line[1])\n        hour = int(line[2])\n        minute = int(line[3])\n        if direction == \"F\":\n            minute += minutes\n        else:\n            minute -= minutes\n        if minute >= 60:\n            hour += minute // 60\n            minute %= 60\n        elif minute < 0:\n            hour += (minute // 60) - 1\n            minute = 60 + (minute % 60)\n        if hour >= 24:\n            hour %= 24\n        elif hour < 0:\n            hour = 24 + (hour % 24)\n        print(str(hour) + \" \" + str(minute))\n\nmain()"
}
2022-04-13 23:48:21.458601 REASON stop
2022-04-13 23:48:21.459205 test/intro-questions.txt_dir/4865/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4865/solutions.json'
