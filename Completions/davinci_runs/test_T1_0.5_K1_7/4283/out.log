2022-04-13 19:47:00.633119 """
You are a coach at your local university. There are $n$ students under your supervision, the programming skill of the $i$-th student is $a_i$.

You have to create a team for a new programming competition. As you know, the more students some team has the more probable its victory is! So you have to create a team with the maximum number of students. But you also know that a team should be balanced. It means that the programming skill of each pair of students in a created team should differ by no more than $5$.

Your task is to report the maximum possible number of students in a balanced team.


-----Input-----

The first line of the input contains one integer $n$ ($1 \le n \le 2 \cdot 10^5$) — the number of students.

The second line of the input contains $n$ integers $a_1, a_2, \dots, a_n$ ($1 \le a_i \le 10^9$), where $a_i$ is a programming skill of the $i$-th student.


-----Output-----

Print one integer — the maximum possible number of students in a balanced team.


-----Examples-----
Input
6
1 10 17 12 15 2

Output
3

Input
10
1337 1337 1337 1337 1337 1337 1337 1337 1337 1337

Output
10

Input
6
1 1000 10000 10 100 1000000000

Output
1



-----Note-----

In the first example you can create a team with skills $[12, 17, 15]$.

In the second example you can take all students in a team because their programming skills are equal.

In the third example you can create a team consisting of a single student (and you cannot create a team consisting of at least two students).
"""
2022-04-13 19:47:00.633132 --------------------------
2022-04-13 19:47:17.764607 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nN = int(input())\nA = list(map(int, input().split()))\nA.sort()\nans = 0\nfor i in range(N):\n    if A[i] - A[0] <= 5:\n        ans += 1\n    else:\n        break\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nans = 0\nfor i in range(n):\n    if i == 0 or a[i] - 5 > a[i-1]:\n        ans += 1\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    a.sort()\n    #print(a)\n    d = [0] * (10**9 + 1)\n    for i in a:\n        d[i] += 1\n    #print(d)\n    best = 0\n    for i in range(10**9 - 5):\n        best = max(best, d[i] + d[i+1] + d[i+2] + d[i+3] + d[i+4] + d[i+5])\n    print(best)\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nfrom collections import defaultdict\nn = int(input())\na = list(map(int, input().split()))\n\nd = defaultdict(int)\nfor i in range(n):\n    d[a[i]] += 1\n\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        if abs(a[i] - a[j]) <= 5:\n            ans = max(ans, d[a[i]] + d[a[j]])\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    m = 1\n    for i in range(n-1):\n        j = i\n        while j < n-1 and a[j+1]-a[i] <= 5:\n            j += 1\n        m = max(m, j-i+1)\n    print(m)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": ""
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef solve(n, a):\n    a.sort()\n    max_size = 1\n    for i in range(n):\n        l, r = i, i + 1\n        while l >= 0 and r < n and a[r] - a[l] <= 5:\n            max_size = max(max_size, r - l + 1)\n            l -= 1\n            r += 1\n    return max_size\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(n, a))\n\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1649879220,
  "id": "cmpl-4wdF6WTMapyfh6o1sr7puUmk8GMUa",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 19:47:17.765029 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nN = int(input())\nA = list(map(int, input().split()))\nA.sort()\nans = 0\nfor i in range(N):\n    if A[i] - A[0] <= 5:\n        ans += 1\n    else:\n        break\nprint(ans)"
}
2022-04-13 19:47:17.765077 REASON stop
2022-04-13 19:47:17.765668 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nans = 0\nfor i in range(n):\n    if i == 0 or a[i] - 5 > a[i-1]:\n        ans += 1\nprint(ans)"
}
2022-04-13 19:47:17.765826 REASON stop
2022-04-13 19:47:17.766349 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    a.sort()\n    #print(a)\n    d = [0] * (10**9 + 1)\n    for i in a:\n        d[i] += 1\n    #print(d)\n    best = 0\n    for i in range(10**9 - 5):\n        best = max(best, d[i] + d[i+1] + d[i+2] + d[i+3] + d[i+4] + d[i+5])\n    print(best)\n\nmain()"
}
2022-04-13 19:47:17.766579 REASON stop
2022-04-13 19:47:17.777961 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nfrom collections import defaultdict\nn = int(input())\na = list(map(int, input().split()))\n\nd = defaultdict(int)\nfor i in range(n):\n    d[a[i]] += 1\n\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        if abs(a[i] - a[j]) <= 5:\n            ans = max(ans, d[a[i]] + d[a[j]])\nprint(ans)"
}
2022-04-13 19:47:17.778052 REASON stop
2022-04-13 19:47:17.791120 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    m = 1\n    for i in range(n-1):\n        j = i\n        while j < n-1 and a[j+1]-a[i] <= 5:\n            j += 1\n        m = max(m, j-i+1)\n    print(m)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 19:47:17.791234 REASON stop
2022-04-13 19:47:17.791958 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": ""
}
2022-04-13 19:47:17.792017 REASON stop
2022-04-13 19:47:17.792657 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef solve(n, a):\n    a.sort()\n    max_size = 1\n    for i in range(n):\n        l, r = i, i + 1\n        while l >= 0 and r < n and a[r] - a[l] <= 5:\n            max_size = max(max_size, r - l + 1)\n            l -= 1\n            r += 1\n    return max_size\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(n, a))\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 19:47:17.792712 REASON stop
