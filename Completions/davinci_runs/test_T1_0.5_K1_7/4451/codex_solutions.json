["\n\nimport sys\n\ndef find_min_diversity(n, skills):\n    skills.sort()\n    min_diversity = 0\n    # if n == 3:\n    #     return skills[2] - skills[0]\n    # elif n == 4:\n    #     return min(skills[2] - skills[0], skills[3] - skills[1])\n    # elif n == 5:\n    #     return min(skills[2] - skills[0], skills[3] - skills[1], skills[4] - skills[2])\n    # else:\n    #     for i in range(3, n - 2):\n    #         return min(skills[2] - skills[0], skills[3] - skills[1], skills[4] - skills[2])\n\ndef main():\n    n = int(sys.stdin.readline())\n    skills = list(map(int, sys.stdin.readline().split()))\n    min_diversity = find_min_diversity(n, skills)\n    print(min_diversity)\n\nif __name__ == \"__main__\":\n    main()", "", "\n\n# n = int(input())\n# skills = [int(x) for x in input().split()]\n\nn = 5\nskills = [1, 1, 3, 4, 2]\n\n# n = 6\n# skills = [1, 5, 12, 13, 2, 15]\n\n# n = 10\n# skills = [1, 2, 5, 129, 185, 581, 1041, 1909, 1580, 8150]\n\nskills.sort()\n\n# print(skills)\n\nteam_sizes = [3] * (n // 3)\n\nif n % 3 == 1:\n    team_sizes[0] -= 1\n    team_sizes.append(1)\nelif n % 3 == 2:\n    team_sizes[0] -= 1\n    team_sizes[1] -= 1\n    team_sizes.append(2)\n\n# print(team_sizes)\n\nteam_diversities = []\n\nfor size in team_sizes:\n    team_diversities.append(skills[-1] - skills[0])\n    del skills[0]\n    del skills[-1]\n\n# print(team_diversities)\n\ntotal_diversity = sum(team_diversities)\n\nprint(total_diversity, len(team_sizes))\n\nteam_index = 1\nfor size in team_sizes:\n    print(\" \".join([str(team_index)] * size), end=\" \")\n    team_index += 1", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    a.sort()\n\n    i = 0\n    j = n - 1\n    k = 0\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        else:\n            k += 1\n            i += 1\n            j -= 1\n\n    print(a[-1] - a[0], k)\n    for i in range(n):\n        print(1, end=' ')\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n\tn = int(input())\n\ta = [int(i) for i in input().split()]\n\t#print(a)\n\ta.sort()\n\t#print(a)\n\td = 0\n\tgroups = []\n\tfor i in range(n-2):\n\t\tif a[i+1] - a[i] <= 1:\n\t\t\td += a[i+1] - a[i]\n\t\t\tgroups.append([a[i],a[i+1]])\n\t\telse:\n\t\t\tbreak\n\t#print(d)\n\t#print(groups)\n\tif len(groups) == 0:\n\t\tprint(a[-1]-a[0],1)\n\t\tprint(\" \".join([str(1)]*n))\n\telse:\n\t\tgroups.append([a[i+1]])\n\t\tprint(d,len(groups))\n\t\tfor i in range(n):\n\t\t\tfor j in range(len(groups)):\n\t\t\t\tif a[i] in groups[j]:\n\t\t\t\t\tprint(j+1, end=\" \")\n\t\t\t\t\tbreak\n\nif __name__ == '__main__':\n\tmain()", "\n\nimport sys\n\ndef main():\n\tn = int(sys.stdin.readline().strip())\n\ta = list(map(int, sys.stdin.readline().strip().split()))\n\tres = a[0]\n\tk = 1\n\tteams = [1] * n\n\tlast_team = 1\n\tfor i in range(1, n):\n\t\tif a[i] - res > a[i] - a[i-1]:\n\t\t\tres = a[i]\n\t\t\tk += 1\n\t\t\tlast_team = k\n\t\tteams[i] = last_team\n\tprint(res, k)\n\tprint(\" \".join(map(str, teams)))\n\nif __name__ == \"__main__\":\n\tmain()", "\n\nimport sys\n\ndef main():\n    lines = sys.stdin.readlines()\n    n = int(lines[0])\n    assert 3 <= n <= 200000\n    skill = [int(x) for x in lines[1].split()]\n    assert len(skill) == n\n    assert all(1 <= x <= 10**9 for x in skill)\n    skill = sorted(skill)\n    team = []\n    total = 0\n    for i in range(n):\n        if len(team) < 3:\n            team.append(skill[i])\n        else:\n            total += max(team) - min(team)\n            team.pop(0)\n            team.append(skill[i])\n    total += max(team) - min(team)\n    print(total, 1)\n    print(\" \".join(['1'] * n))\n\nif __name__ == \"__main__\":\n    main()"]