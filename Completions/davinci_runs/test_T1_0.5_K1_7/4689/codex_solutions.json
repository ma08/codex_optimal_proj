["\n\nimport sys\nimport math\n\nk, n = map(int, sys.stdin.readline().split())\nhouses = list(map(int, sys.stdin.readline().split()))\n\n# \u307e\u305a\u306f\u3001\u6700\u3082\u8fd1\u30442\u3064\u306e\u5bb6\u306e\u5dee\u3092\u3068\u3063\u3066\u3001\u6700\u5c0f\u5024\u3092\u6c42\u3081\u308b\n# \u305d\u306e\u5f8c\u3001\u6700\u3082\u8fd1\u30442\u3064\u306e\u5bb6\u306e\u5dee\u306b\u6700\u5c0f\u5024\u3092\u8db3\u3057\u3066\u3044\u304f\n# \u305f\u3060\u3057\u3001\u6700\u3082\u8fd1\u30442\u3064\u306e\u5bb6\u306e\u5dee\u304cK\u3088\u308a\u5927\u304d\u3044\u5834\u5408\u3001K\u3092\u5f15\u3044\u305f\u3082\u306e\u3092\u8db3\u3057\u3066\u3044\u304f\n\nmin_distance = k + 1\nfor i in range(n - 1):\n    min_distance = min(min_distance, houses[i + 1] - houses[i])\nmin_distance = min(min_distance, k - houses[n - 1] + houses[0])\n\n#print(min_distance)\n\ndistance = 0\nfor i in range(n - 1):\n    distance += houses[i + 1] - houses[i]\ndistance += k - houses[n - 1] + houses[0]\n#print(distance)\n\nprint(distance - min_distance)", "\n\ndef main():\n    #get input\n    K, N = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.append(A[0] + K)\n    #calculate minimum distance\n    min_dist = K\n    for i in range(N):\n        min_dist = min(min_dist, A[i + 1] - A[i])\n    print(min_dist)\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\nk, n = map(int, input().split())\na = list(map(int, input().split()))\n\nresult = []\n\nfor i in range(n):\n    result.append(min(a[i-1]-a[i], k-a[i-1]+a[i]))\n\nprint(sum(result))", "\n\ndef main():\n    K, N = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.sort()\n    min_distance = K - A[-1] + A[0]\n    for i in range(1, N):\n        min_distance = min(min_distance, A[i] - A[i - 1])\n    print(min_distance)\n\nif __name__ == '__main__':\n    main()", "\n\n# input\nK = int(input())\nN = int(input())\nA = list(map(int, input().split()))\n\n# solve\nA.sort()\nmin_distance = float('inf')\nfor i in range(N):\n    distance = min(A[i] - A[i - 1], K - A[i] + A[i - 1])\n    min_distance = min(min_distance, distance)\n\n# output\nprint(min_distance)", "\n\n#import sys\n#input = sys.stdin.readline\n\nK, N = map(int, input().split())\nA = list(map(int, input().split()))\nA.append(K + A[0])\n\nans = 0\nfor i in range(N):\n    ans += A[i + 1] - A[i]\nprint(ans - max(A[i + 1] - A[i] for i in range(N)))", "\n\nk, n = map(int, input().split())\na = list(map(int, input().split()))\n\ndiff = [0] * n\nfor i in range(n):\n    diff[i] = a[i] - a[(i + 1) % n]\n\nprint(k - max(diff))"]