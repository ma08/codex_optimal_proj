2022-04-13 23:10:27.797289 """
Mirko buys a lot of candy in the candy shop. He cannot always pay the exact amount so the shopkeeper and he have an agreement. He tells the shopkeeper the smallest bill he has, and she rounds his amount to the nearest number he can pay. For example, if the smallest bill Mirko has is a hundred bill, and he wants to buy $150$ Kunas of candy, the shopkeeper rounds his amount to $200$ Kunas. If he wants to buy $149$ Kunas of candy, the shopkeeper rounds his amount to $100$ Kunas.

Lately, Mirko suspects the shoopkeeper is trying to cheat him. He asked you to help him. Write a program that will help him. His mother only gives Mirko $1, 10, 100, 1000, \ldots , 1000000000$ Kuna bills. He never has bills that are not powers of $10$. The bills he does have, he has in large amounts.

-----Input-----
The first and only line of input contains two integers, $C$ ($0 \le C \le 1000000000$), the price of candy Mirko is going to buy, and $K$ ($0 \le K \le 9$), number of zeros on the smallest bill Mirko has.

-----Output-----
The first and only line of output should contain one integer, $C$ rounded to the nearest amount Mirko can pay.

-----Examples-----
Sample Input 1:
184 1
Sample Output 1:
180

Sample Input 2:
123450995 1
Sample Output 2:
123451000
"""
2022-04-13 23:10:27.797296 --------------------------
2022-04-13 23:10:40.090156 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nC, K = map(int, input().split())\nprint(C - C % (10 ** K))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nC, K = map(int, input().split())\n\ndef round_to_nearest(C, K):\n    if C % 10**K >= 10**K//2:\n        return C - C % 10**K + 10**K\n    else:\n        return C - C % 10**K\n\nprint(round_to_nearest(C, K))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nc, k = input().split()\nc = int(c)\nk = int(k)\n\nif c % 10**k >= 5*(10**(k-1)):\n    print(c + 10**k - (c % 10**k))\nelse:\n    print(c - (c % 10**k))"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nC, K = [int(x) for x in input().split()]\n\nprint(C - (C % (10**K)))"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nc, k = map(int, input().split())\n\nc = c - c % 10**k\n\nprint(c)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\n# Read input\nc, k = map(int, input().split())\n\n# Determine the nearest amount mirko can pay\nif k == 0:\n    print(c)\nelse:\n    print(round(c, -k))"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nC, K = [int(x) for x in input().split()]\nif C % (10 ** K) >= 5 * (10 ** (K-1)):\n    print(C - C % (10 ** K) + 10 ** K)\nelse:\n    print(C - C % (10 ** K))"
    }
  ],
  "created": 1649891427,
  "id": "cmpl-4wgPzDERSw3BRJF0OsxJ1ZTOURomr",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 23:10:40.090444 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nC, K = map(int, input().split())\nprint(C - C % (10 ** K))"
}
2022-04-13 23:10:40.090480 REASON stop
2022-04-13 23:10:40.090826 test/intro-questions.txt_dir/4755/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4755/solutions.json'
2022-04-13 23:10:40.090842 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nC, K = map(int, input().split())\n\ndef round_to_nearest(C, K):\n    if C % 10**K >= 10**K//2:\n        return C - C % 10**K + 10**K\n    else:\n        return C - C % 10**K\n\nprint(round_to_nearest(C, K))"
}
2022-04-13 23:10:40.090976 REASON stop
2022-04-13 23:10:40.091212 test/intro-questions.txt_dir/4755/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4755/solutions.json'
2022-04-13 23:10:40.091223 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nc, k = input().split()\nc = int(c)\nk = int(k)\n\nif c % 10**k >= 5*(10**(k-1)):\n    print(c + 10**k - (c % 10**k))\nelse:\n    print(c - (c % 10**k))"
}
2022-04-13 23:10:40.091259 REASON stop
2022-04-13 23:10:40.092398 test/intro-questions.txt_dir/4755/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4755/solutions.json'
2022-04-13 23:10:40.092416 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nC, K = [int(x) for x in input().split()]\n\nprint(C - (C % (10**K)))"
}
2022-04-13 23:10:40.092460 REASON stop
2022-04-13 23:10:40.103370 test/intro-questions.txt_dir/4755/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4755/solutions.json'
2022-04-13 23:10:40.103397 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nc, k = map(int, input().split())\n\nc = c - c % 10**k\n\nprint(c)"
}
2022-04-13 23:10:40.103467 REASON stop
2022-04-13 23:10:40.104312 test/intro-questions.txt_dir/4755/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4755/solutions.json'
2022-04-13 23:10:40.104330 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\n# Read input\nc, k = map(int, input().split())\n\n# Determine the nearest amount mirko can pay\nif k == 0:\n    print(c)\nelse:\n    print(round(c, -k))"
}
2022-04-13 23:10:40.104375 REASON stop
2022-04-13 23:10:40.112253 test/intro-questions.txt_dir/4755/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4755/solutions.json'
2022-04-13 23:10:40.112272 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nC, K = [int(x) for x in input().split()]\nif C % (10 ** K) >= 5 * (10 ** (K-1)):\n    print(C - C % (10 ** K) + 10 ** K)\nelse:\n    print(C - C % (10 ** K))"
}
2022-04-13 23:10:40.112327 REASON stop
2022-04-13 23:10:40.131942 test/intro-questions.txt_dir/4755/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4755/solutions.json'
