2022-04-13 19:52:16.195648 """
A country decides to build a palace.
In this country, the average temperature of a point at an elevation of x meters is T-x \times 0.006 degrees Celsius.
There are N places proposed for the place. The elevation of Place i is H_i meters.
Among them, Princess Joisino orders you to select the place whose average temperature is the closest to A degrees Celsius, and build the palace there.
Print the index of the place where the palace should be built.
It is guaranteed that the solution is unique.

-----Constraints-----
 - 1 \leq N \leq 1000
 - 0 \leq T \leq 50
 - -60 \leq A \leq T
 - 0 \leq H_i \leq 10^5
 - All values in input are integers.
 - The solution is unique.

-----Input-----
Input is given from Standard Input in the following format:
N
T A
H_1 H_2 ... H_N

-----Output-----
Print the index of the place where the palace should be built.

-----Sample Input-----
2
12 5
1000 2000

-----Sample Output-----
1

 - The average temperature of Place 1 is 12-1000 \times 0.006=6 degrees Celsius.
 - The average temperature of Place 2 is 12-2000 \times 0.006=0 degrees Celsius.
Thus, the palace should be built at Place 1.
"""
2022-04-13 19:52:16.195656 --------------------------
2022-04-13 19:52:31.061422 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn = int(input())\nt, a = map(int, input().split())\nh = list(map(int, input().split()))\n\ntemp = [abs(t - h_i * 0.006 - a) for h_i in h]\nprint(temp.index(min(temp)) + 1)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn = int(input())\nt, a = map(int, input().split())\nh = list(map(int, input().split()))\n\nans = 0\ndiff = float('inf')\nfor i in range(n):\n    if abs(a-(t-h[i]*0.006)) < diff:\n        diff = abs(a-(t-h[i]*0.006))\n        ans = i+1\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nn = int(input())\nt, a = map(int, input().split())\nh = list(map(int, input().split()))\n\ntemp = []\nfor i in range(n):\n    temp.append(abs(a - (t - h[i] * 0.006)))\n\nprint(temp.index(min(temp)) + 1)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    n = int(input())\n    t, a = map(int, input().split())\n    h = list(map(int, input().split()))\n    min_temp = float('inf')\n    min_idx = 0\n    for i, v in enumerate(h):\n        temp = t - v * 0.006\n        if abs(temp - a) < min_temp:\n            min_temp = abs(temp - a)\n            min_idx = i\n    print(min_idx + 1)\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    num_places = int(sys.stdin.readline())\n    average_temperature_and_target = [int(x) for x in sys.stdin.readline().split()]\n    average_temperature = average_temperature_and_target[0]\n    target_temperature = average_temperature_and_target[1]\n    elevations = [int(x) for x in sys.stdin.readline().split()]\n    min_diff = abs(target_temperature - average_temperature)\n    min_index = 0\n    for i in range(len(elevations)):\n        diff = abs(target_temperature - (average_temperature - elevations[i] * 0.006))\n        if diff < min_diff:\n            min_diff = diff\n            min_index = i\n    print(min_index + 1)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    t, a = map(int, input().split())\n    h = list(map(int, input().split()))\n    dif = []\n    for i in range(n):\n        dif.append(abs(t - h[i] * 0.006 - a))\n    print(dif.index(min(dif)) + 1)\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nimport sys\nimport math\n\nn = int(input())\nt, a = map(int, input().split())\nh = list(map(int, input().split()))\n\nt_h = [t - hi * 0.006 for hi in h]\n\nmin_abs = math.inf\nmin_idx = 0\nfor i in range(n):\n    if abs(t_h[i] - a) < min_abs:\n        min_abs = abs(t_h[i] - a)\n        min_idx = i\n\nprint(min_idx + 1)"
    }
  ],
  "created": 1649879536,
  "id": "cmpl-4wdKCwIuavlnk7TeAdjMqO81Vd3mB",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 19:52:31.061693 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn = int(input())\nt, a = map(int, input().split())\nh = list(map(int, input().split()))\n\ntemp = [abs(t - h_i * 0.006 - a) for h_i in h]\nprint(temp.index(min(temp)) + 1)"
}
2022-04-13 19:52:31.061729 REASON stop
2022-04-13 19:52:31.062301 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn = int(input())\nt, a = map(int, input().split())\nh = list(map(int, input().split()))\n\nans = 0\ndiff = float('inf')\nfor i in range(n):\n    if abs(a-(t-h[i]*0.006)) < diff:\n        diff = abs(a-(t-h[i]*0.006))\n        ans = i+1\n\nprint(ans)"
}
2022-04-13 19:52:31.062418 REASON stop
2022-04-13 19:52:31.062842 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nn = int(input())\nt, a = map(int, input().split())\nh = list(map(int, input().split()))\n\ntemp = []\nfor i in range(n):\n    temp.append(abs(a - (t - h[i] * 0.006)))\n\nprint(temp.index(min(temp)) + 1)"
}
2022-04-13 19:52:31.062888 REASON stop
2022-04-13 19:52:31.078309 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    n = int(input())\n    t, a = map(int, input().split())\n    h = list(map(int, input().split()))\n    min_temp = float('inf')\n    min_idx = 0\n    for i, v in enumerate(h):\n        temp = t - v * 0.006\n        if abs(temp - a) < min_temp:\n            min_temp = abs(temp - a)\n            min_idx = i\n    print(min_idx + 1)\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 19:52:31.078383 REASON stop
2022-04-13 19:52:31.081917 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    num_places = int(sys.stdin.readline())\n    average_temperature_and_target = [int(x) for x in sys.stdin.readline().split()]\n    average_temperature = average_temperature_and_target[0]\n    target_temperature = average_temperature_and_target[1]\n    elevations = [int(x) for x in sys.stdin.readline().split()]\n    min_diff = abs(target_temperature - average_temperature)\n    min_index = 0\n    for i in range(len(elevations)):\n        diff = abs(target_temperature - (average_temperature - elevations[i] * 0.006))\n        if diff < min_diff:\n            min_diff = diff\n            min_index = i\n    print(min_index + 1)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 19:52:31.081980 REASON stop
2022-04-13 19:52:31.100943 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    t, a = map(int, input().split())\n    h = list(map(int, input().split()))\n    dif = []\n    for i in range(n):\n        dif.append(abs(t - h[i] * 0.006 - a))\n    print(dif.index(min(dif)) + 1)\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 19:52:31.101046 REASON stop
2022-04-13 19:52:31.102326 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nimport sys\nimport math\n\nn = int(input())\nt, a = map(int, input().split())\nh = list(map(int, input().split()))\n\nt_h = [t - hi * 0.006 for hi in h]\n\nmin_abs = math.inf\nmin_idx = 0\nfor i in range(n):\n    if abs(t_h[i] - a) < min_abs:\n        min_abs = abs(t_h[i] - a)\n        min_idx = i\n\nprint(min_idx + 1)"
}
2022-04-13 19:52:31.102422 REASON stop
