2022-04-13 22:52:36.234201 """
Snuke is giving cookies to his three goats.
He has two cookie tins. One contains A cookies, and the other contains B cookies. He can thus give A cookies, B cookies or A+B cookies to his goats (he cannot open the tins).
Your task is to determine whether Snuke can give cookies to his three goats so that each of them can have the same number of cookies.

-----Constraints-----
 - 1 \leq A,B \leq 100
 - Both A and B are integers.

-----Input-----
Input is given from Standard Input in the following format:
A B

-----Output-----
If it is possible to give cookies so that each of the three goats can have the same number of cookies, print Possible; otherwise, print Impossible.

-----Sample Input-----
4 5

-----Sample Output-----
Possible

If Snuke gives nine cookies, each of the three goats can have three cookies.
"""
2022-04-13 22:52:36.234209 --------------------------
2022-04-13 22:52:49.302504 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    A, B = map(int, input().split())\n\n    if A % 3 == 0 or B % 3 == 0:\n        print(\"Possible\")\n    elif (A + B) % 3 == 0:\n        print(\"Possible\")\n    else:\n        print(\"Impossible\")\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef main():\n    a, b = map(int, input().split())\n    print(\"Possible\" if a%3==0 or b%3==0 or (a+b)%3==0 else \"Impossible\")\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n# Read input\na, b = map(int, input().split())\n\n# Define function\ndef possible(a, b):\n    if a == b:\n        return True\n    elif a < b:\n        return possible(b, a)\n    else:\n        if (a + b) % 3 == 0:\n            return True\n        else:\n            return False\n\n# Print output\nif possible(a, b):\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\na,b = map(int,input().split())\nif a>=b:\n  if a%3==0 or b%3==0 or (a+b)%3==0:\n    print(\"Possible\")\n  else:\n    print(\"Impossible\")\nelif a<b:\n  if b%3==0 or a%3==0 or (a+b)%3==0:\n    print(\"Possible\")\n  else:\n    print(\"Impossible\")"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\n# -*- coding: utf-8 -*-\n\na,b = map(int,input().split())\n\nif a%3 == 0 or b%3 == 0 or (a+b)%3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nA, B = map(int, input().split())\n\nif (A + B) % 3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\n# Read input\nA, B = map(int, input().split())\n\n# Initialize\npossible = False\n\n# Check all possible number of cookies\nfor i in range(1, 101):\n    if i <= A and i <= B and (A + B) % 3 == 0:\n        possible = True\n\n# Print result\nprint(\"Possible\") if possible else print(\"Impossible\")"
    }
  ],
  "created": 1649890356,
  "id": "cmpl-4wg8idYJP53AgLYIrIgSCwFSWVNFw",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 22:52:49.302768 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    A, B = map(int, input().split())\n\n    if A % 3 == 0 or B % 3 == 0:\n        print(\"Possible\")\n    elif (A + B) % 3 == 0:\n        print(\"Possible\")\n    else:\n        print(\"Impossible\")\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 22:52:49.302807 REASON stop
2022-04-13 22:52:49.303266 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef main():\n    a, b = map(int, input().split())\n    print(\"Possible\" if a%3==0 or b%3==0 or (a+b)%3==0 else \"Impossible\")\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 22:52:49.303396 REASON stop
2022-04-13 22:52:49.303781 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n# Read input\na, b = map(int, input().split())\n\n# Define function\ndef possible(a, b):\n    if a == b:\n        return True\n    elif a < b:\n        return possible(b, a)\n    else:\n        if (a + b) % 3 == 0:\n            return True\n        else:\n            return False\n\n# Print output\nif possible(a, b):\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"
}
2022-04-13 22:52:49.303835 REASON stop
2022-04-13 22:52:49.304871 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\na,b = map(int,input().split())\nif a>=b:\n  if a%3==0 or b%3==0 or (a+b)%3==0:\n    print(\"Possible\")\n  else:\n    print(\"Impossible\")\nelif a<b:\n  if b%3==0 or a%3==0 or (a+b)%3==0:\n    print(\"Possible\")\n  else:\n    print(\"Impossible\")"
}
2022-04-13 22:52:49.304921 REASON stop
2022-04-13 22:52:49.321180 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\n# -*- coding: utf-8 -*-\n\na,b = map(int,input().split())\n\nif a%3 == 0 or b%3 == 0 or (a+b)%3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"
}
2022-04-13 22:52:49.321293 REASON stop
2022-04-13 22:52:49.321903 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nA, B = map(int, input().split())\n\nif (A + B) % 3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"
}
2022-04-13 22:52:49.321964 REASON stop
2022-04-13 22:52:49.332803 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\n# Read input\nA, B = map(int, input().split())\n\n# Initialize\npossible = False\n\n# Check all possible number of cookies\nfor i in range(1, 101):\n    if i <= A and i <= B and (A + B) % 3 == 0:\n        possible = True\n\n# Print result\nprint(\"Possible\") if possible else print(\"Impossible\")"
}
2022-04-13 22:52:49.332885 REASON stop
