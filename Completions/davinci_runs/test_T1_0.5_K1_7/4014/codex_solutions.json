["\n\ndef main():\n    n, m = map(int, input().split())\n    exams = []\n    for i in range(m):\n        exams.append(list(map(int, input().split())))\n    exams.sort(key=lambda x: x[1])\n    schedule = [0] * n\n    for i in range(m):\n        if exams[i][2] > exams[i][1] - exams[i][0]:\n            print(-1)\n            return\n    for i in range(m):\n        for j in range(exams[i][0], exams[i][1]):\n            if schedule[j] != 0:\n                print(-1)\n                return\n            schedule[j] = i+1\n    for i in range(m):\n        for j in range(exams[i][0], exams[i][0]+exams[i][2]):\n            if schedule[j] != 0:\n                print(-1)\n                return\n            schedule[j] = -(i+1)\n    for i in range(m):\n        for j in range(exams[i][1], exams[i][1]+exams[i][2]):\n            if schedule[j] != 0:\n                print(-1)\n                return\n            schedule[j] = -(i+1)\n    for i in range(n):\n        if schedule[i] == 0:\n            schedule[i] = -(m+1)\n        elif schedule[i] < 0:\n            schedule[i] = -schedule[i]\n    print(*schedule)\n\nmain()", "\n\nn, m = map(int, input().split())\n\ns = []\nd = []\nc = []\n\nfor i in range(m):\n    a, b, ci = map(int, input().split())\n    s.append(a)\n    d.append(b)\n    c.append(ci)\n\n#print(s, d, c)\n\n# 0: rest\n# 1: prepare\n# 2: pass\n\n# -1: impossible\n\ndef compute_schedule(n, m, s, d, c):\n\n    #print(s, d, c)\n\n    if c[0] > n - 1:\n        return [-1]\n\n    schedule = [0] * n\n\n    for i in range(m):\n        #print(i)\n        for j in range(s[i] - 1, d[i] - 1):\n            if schedule[j] != 0:\n                return [-1]\n            schedule[j] = 1\n\n    #print(schedule)\n\n    for i in range(m):\n        count = 0\n        for j in range(s[i] - 1, d[i] - 1):\n            if schedule[j] == 1:\n                count += 1\n        if count < c[i]:\n            return [-1]\n\n    #print(schedule)\n\n    for i in range(m):\n        count = 0\n        for j in range(s[i] - 1, d[i] - 1):\n            if count == c[i]:\n                break\n            if schedule[j] == 1:\n                schedule[j] = i + 1\n                count += 1\n\n    #print(schedule)\n\n    for i in range(m):\n        schedule[d[i] - 1] = m + 1\n\n    #print(schedule)\n\n    return schedule\n\nschedule = compute_schedule(n, m, s, d, c)\n\nif schedule[0] == -1:\n    print(-1)\nelse:\n    for i in schedule:\n        print(i, end = ' ')", "\n\ndef main():\n    n, m = map(int, input().split())\n    exams = []\n    for i in range(m):\n        s, d, c = map(int, input().split())\n        exams.append((s, d, c))\n    exams.sort()\n    #print(exams)\n    for i in range(m):\n        s, d, c = exams[i]\n        #print(s, d, c)\n        if (d - s) < c:\n            #print(i, \"Impossible\")\n            return -1\n    #print(\"Possible\")\n    days = [0] * n\n    for i in range(m):\n        s, d, c = exams[i]\n        #print(s, d, c)\n        if c == 0:\n            days[d-1] = i+1\n        else:\n            for j in range(s-1, d-1):\n                if days[j] == 0:\n                    days[j] = i+1\n                    c -= 1\n                    if c == 0:\n                        break\n    #print(days)\n    for i in range(m):\n        s, d, c = exams[i]\n        if days[d-1] != i+1:\n            #print(i, \"Impossible\")\n            return -1\n    #print(days)\n    return days\n\nif __name__ == \"__main__\":\n    days = main()\n    if days == -1:\n        print(-1)\n    else:\n        for day in days:\n            print(day, end=\" \")\n        print()", "\n\nimport sys\n\ndef main():\n    n, m = map(int, raw_input().split())\n    s = []\n    d = []\n    c = []\n    for i in xrange(m):\n        s_i, d_i, c_i = map(int, raw_input().split())\n        s.append(s_i)\n        d.append(d_i)\n        c.append(c_i)\n    #print n, m, s, d, c\n    schedule = [-1] * n\n    for i in xrange(n):\n        if i in s:\n            schedule[i] = 0\n        if i in d:\n            schedule[i] = m + 1\n    #print schedule\n    for i in xrange(m):\n        if c[i] == 0:\n            continue\n        if schedule[s[i]] != 0:\n            print -1\n            return\n        if schedule[d[i] - 1] != m + 1:\n            print -1\n            return\n        if d[i] - s[i] < c[i]:\n            print -1\n            return\n        for j in xrange(s[i], d[i]):\n            if schedule[j] != 0:\n                print -1\n                return\n            schedule[j] = i + 1\n    for i in xrange(n):\n        if schedule[i] == -1:\n            print -1\n            return\n    print \" \".join(map(str, schedule))\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n, m = map(int, input().split())\n    days = [0]*n\n    for i in range(m):\n        s, d, c = map(int, input().split())\n        if c > d - s:\n            print(-1)\n            return\n        for j in range(s, d):\n            if days[j] != 0:\n                print(-1)\n                return\n            days[j] = i + 1\n        for j in range(c):\n            days[s + j - 1] = i + m + 1\n    print(*days)\n    \nif __name__ == \"__main__\":\n    main()", "\n\ndef solve(n, m, exams):\n    days = [0] * n\n    for s, d, c in exams:\n        for i in range(s, d):\n            days[i] += 1\n    for i in range(1, n):\n        if days[i] > 1:\n            return -1\n    return days\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    exams = [tuple(map(int, input().split())) for i in range(m)]\n    days = solve(n, m, exams)\n    if days == -1:\n        print(days)\n    else:\n        for i in range(n):\n            if days[i] == 0:\n                print(0, end=' ')\n            elif days[i] == 1:\n                print(1, end=' ')\n            else:\n                print(m + 1, end=' ')\n        print('')"]