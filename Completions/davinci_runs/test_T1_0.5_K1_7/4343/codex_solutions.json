["\n\n\ndef main():\n    k = int(input())\n    s = input()\n    t = input()\n    l = []\n    while s != t:\n        l.append(s)\n        s = chr(ord(s[-1]) + 1) + s[:-1]\n    l.append(s)\n    print(l[len(l) // 2])\n\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef next_string(s):\n    if s[-1] == 'z':\n        return next_string(s[:-1]) + 'a'\n    else:\n        return s[:-1] + chr(ord(s[-1]) + 1)\n\ndef median(s, t):\n    mid = s\n    while next_string(mid) != t:\n        mid = next_string(mid)\n        t = next_string(t)\n    return mid\n\ndef main():\n    k = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    t = sys.stdin.readline().strip()\n    print(median(s, t))\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    k = int(input())\n    s = input()\n    t = input()\n    if s == t:\n        print(s)\n        return\n    if k == 1:\n        print(chr(ord(s) + (ord(t) - ord(s)) // 2))\n        return\n    for i in range(k):\n        if s[i] == t[i]:\n            print(s[:i], end=\"\")\n            continue\n        if s[i] == 'z':\n            print(s[:i] + chr(ord(t[i]) - (ord(t[i]) - ord(s[i])) // 2), end=\"\")\n            continue\n        if t[i] == 'a':\n            print(chr(ord(s[i]) + (ord(t[i]) - ord(s[i])) // 2), end=\"\")\n            continue\n        print(chr(ord(s[i]) + (ord(t[i]) - ord(s[i])) // 2), end=\"\")\n        break\n    print()\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    k = int(input())\n    s = input()\n    t = input()\n\n    # print(s, t)\n    # print(k)\n\n    # print(s[0:k-1], ord(s[k-1]))\n    # print(t[0:k-1], ord(t[k-1]))\n\n    # print(s[0:k-1] + chr(ord(s[k-1])+1))\n\n    # print(s[0:k-1] + chr(ord(s[k-1])+1))\n    # print(t[0:k-1] + chr(ord(t[k-1])-1))\n\n    # print(ord('a'), ord('z'))\n\n    # print(sum([ord(c) for c in s]))\n    # print(sum([ord(c) for c in t]))\n\n    # print(ord(s[k-1]) - ord(s[0]) + 1)\n\n    # print(s[0:k-1] + chr(ord(s[k-1])+1))\n    # print(t[0:k-1] + chr(ord(t[k-1])-1))\n\n    # print(sum([ord(c) for c in s[0:k-1] + chr(ord(s[k-1])+1)]))\n    # print(sum([ord(c) for c in t[0:k-1] + chr(ord(t[k-1])-1)]))\n\n    # print(sum([ord(c) for c in s[0:k-1] + chr(ord(s[k-1])+1)]) - sum([ord(c) for c in s]))\n    # print(sum([ord(c) for c in t[0:k-1] + chr(ord(t[k-1])-1)]) - sum([ord(c) for c in t]))\n\n    # print(sum([ord(c) for c in s[0:k-1] + chr(ord(s[k-1])+1)]) - sum([ord(c) for c in s]) + 1)\n    # print(sum([ord(c) for c in t[0:k-1] + chr(ord(t[k-1])-1)]) - sum([ord(c) for c in t]) - 1)\n\n    # print(sum([ord(c) for c in s[0:k-1] + chr(ord(s[k-1])+1)]) - sum([ord(c) for c in s]) + 1 + sum([ord(c) for c in t[0:k-1] + chr(ord(t[k-1])-1)]) - sum([ord(c) for c in t]) - 1)\n\n    # print(sum([ord(c) for c in s[0:k-1] + chr(ord(s[k-1])+1)]) - sum([ord(c) for c in s]) + 1 + sum([ord(c) for c in t[0:k-1] + chr(ord(t[k-1])-1)]) - sum([ord(c) for c in t]) - 1 + 1)\n    # print((sum([ord(c) for c in s[0:k-1] + chr(ord(s[k-1])+1)]) - sum([ord(c) for c in s]) + 1 + sum([ord(c) for c in t[0:k-1] + chr(ord(t[k-1])-1)]) - sum([ord(c) for c in t]) - 1 + 1) // 2)\n\n    # print(chr(sum([ord(c) for c in s[0:k-1] + chr(ord(s[k-1])+1)]) - sum([ord(c) for c in s]) + 1 + sum([ord(c) for c in t[0:k-1] + chr(ord(t[k-1])-1)]) - sum([ord(c) for c in t]) - 1 + 1))\n\n    # print(chr(sum([ord(c) for c in s[0:k-1] + chr(ord(s[k-1])+1)]) - sum([ord(c) for c in s]) + 1 + sum([ord(c) for c in t[0:k-1] + chr(ord(t[k-1])-1)]) - sum([ord(c) for c in t]) - 1 + 1 + ord(s[0])))\n\n    # print(chr(sum([ord(c) for c in s[0:k-1] + chr(ord(s[k-1])+1)]) - sum([ord(c) for c in s]) + 1 + sum([ord(c) for c in t[0:k-1] + chr(ord(t[k-1])-1)]) - sum([ord(c) for c in t]) - 1 + 1 + ord(s[0])))\n\n    # print(chr(sum([ord(c) for c in s[0:k-1] + chr(ord(s[k-1])+1)]) - sum([ord(c) for c in s]) + 1 + sum([ord(c) for c in t[0:k-1] + chr(ord(t[k-1])-1)]) - sum([ord(c) for c in t]) - 1 + 1 + ord(s[0])) + s[1:k-1])\n\n    # print(s[0] + chr(sum([ord(c) for c in s[0:k-1] + chr(ord(s[k-1])+1)]) - sum([ord(c) for c in s]) + 1 + sum([ord(c) for c in t[0:k-1] + chr(ord(t[k-1])-1)]) - sum([ord(c) for c in t]) - 1 + 1 + ord(s[0])) + s[1:k-1])\n\n    # print(s[0] + chr(sum([ord(c) for c in s[0:k-1] + chr(ord(s[k-1])+1)]) - sum([ord(c) for c in s]) + 1 + sum([ord(c) for c in t[0:k-1] + chr(ord(t[k-1])-1)]) - sum([ord(c) for c in t]) - 1 + 1 + ord(s[0])) + s[1:k-1] + chr(ord(s[k-1])+1))\n\n    print(s[0] + chr(sum([ord(c) for c in s[0:k-1] + chr(ord(s[k-1])+1)]) - sum([ord(c) for c in s]) + 1 + sum([ord(c) for c in t[0:k-1] + chr(ord(t[k-1])-1)]) - sum([ord(c) for c in t]) - 1 + 1 + ord(s[0])) + s[1:k-1] + chr(ord(s[k-1])+1))\n\nif __name__ == '__main__':\n    main()", "\n\nk = int(input())\ns = input()\nt = input()\n\nans = \"\"\nfor i in range(k):\n    if s[i] == t[i]:\n        ans += s[i]\n    else:\n        ans += chr(ord(s[i]) + (ord(t[i]) - ord(s[i])) // 2)\n        break\nprint(ans)", "\n\nk = int(input())\ns = input()\nt = input()\n\n# make the list\nl = []\nfor i in range(k):\n    for j in range(k):\n        l.append(s[:i] + t[i:])\n\nl.sort()\n\n# find the median\nm = len(l) // 2\nprint(l[m])", "\n\ndef main():\n    k = int(input())\n    s = input()\n    t = input()\n\n    ans = list(s)\n    med = (k - 1) // 2\n    for i in range(med, -1, -1):\n        if ord(ans[i]) < ord(t[i]):\n            ans[i] = chr(ord(ans[i]) + 1)\n            break\n\n    for i in range(i + 1, k):\n        ans[i] = 'a'\n\n    print(''.join(ans))\n\n\nif __name__ == \"__main__\":\n    main()"]