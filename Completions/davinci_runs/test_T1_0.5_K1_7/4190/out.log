2022-04-13 19:08:12.584153 """
You are given two arrays $a$ and $b$, both of length $n$. All elements of both arrays are from $0$ to $n-1$.

You can reorder elements of the array $b$ (if you want, you may leave the order of elements as it is). After that, let array $c$ be the array of length $n$, the $i$-th element of this array is $c_i = (a_i + b_i) \% n$, where $x \% y$ is $x$ modulo $y$.

Your task is to reorder elements of the array $b$ to obtain the lexicographically minimum possible array $c$.

Array $x$ of length $n$ is lexicographically less than array $y$ of length $n$, if there exists such $i$ ($1 \le i \le n$), that $x_i < y_i$, and for any $j$ ($1 \le j < i$) $x_j = y_j$.


-----Input-----

The first line of the input contains one integer $n$ ($1 \le n \le 2 \cdot 10^5$) â€” the number of elements in $a$, $b$ and $c$.

The second line of the input contains $n$ integers $a_1, a_2, \dots, a_n$ ($0 \le a_i < n$), where $a_i$ is the $i$-th element of $a$.

The third line of the input contains $n$ integers $b_1, b_2, \dots, b_n$ ($0 \le b_i < n$), where $b_i$ is the $i$-th element of $b$.


-----Output-----

Print the lexicographically minimum possible array $c$. Recall that your task is to reorder elements of the array $b$ and obtain the lexicographically minimum possible array $c$, where the $i$-th element of $c$ is $c_i = (a_i + b_i) \% n$.


-----Examples-----
Input
4
0 1 2 1
3 2 1 1

Output
1 0 0 2 

Input
7
2 5 1 5 3 4 3
2 4 3 5 6 5 1

Output
0 0 0 1 0 2 4
"""
2022-04-13 19:08:12.584169 --------------------------
2022-04-13 19:08:44.271015 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n\n# Solution:\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nb_sort = sorted(b)\n\nc = list()\nfor i in range(n):\n    c.append((a[i] + b[i]) % n)\n\nc_sort = sorted(c)\n\nfor i in range(n):\n    if c[i] != c_sort[i]:\n        b[i] = b_sort[i]\n\nprint(*b)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n# SOLUTION\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nc = [0]*n\nfor i in range(n):\n    c[(a[i]+b[i])%n] += 1\nfor i in range(1,n):\n    c[i] += c[i-1]\n\nans = [0]*n\nfor i in range(n-1, -1, -1):\n    ans[c[(a[i]+b[i])%n]-1] = (a[i]+b[i])%n\n    c[(a[i]+b[i])%n] -= 1\nprint(' '.join(map(str, ans)))\n\n# Alternative solution\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nc = [0]*n\nfor i in range(n):\n    c[(a[i]+b[i])%n] += 1\n\nans = [0]*n\nfor i in range(n):\n    if c[i] == 0:\n        continue\n    \n    for j in range(c[i]):\n        ans[j] = i\n    c[i] = 0\n    break\n\nfor i in range(n-1, -1, -1):\n    if c[i] == 0:\n        continue\n    \n    for j in range(c[i]):\n        ans[j] = i\n    c[i] = 0\n    break\n\nprint(' '.join(map(str, ans)))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nc = [0]*n\n\nfor i in range(n):\n    c[(a[i] + b[i]) % n] += 1\n\nans = [0]*n\n\nfor i in range(n):\n    ans[i] = str(c[(i+1)%n])\n\nprint(\" \".join(ans))"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef process(a, b, n):\n    b_map = {}\n    for i in range(n):\n        b_map[b[i]] = i\n    \n    a.sort()\n    b.sort()\n    \n    c = [0] * n\n    for i in range(n):\n        c[i] = (a[i] + b[b_map[i]]) % n\n    \n    return c\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    b = [int(x) for x in sys.stdin.readline().split()]\n    \n    c = process(a, b, n)\n    for x in c:\n        print x,\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int,sys.stdin.readline().split()))\n    b = list(map(int,sys.stdin.readline().split()))\n    b_dict = {}\n    for i in range(n):\n        b_dict[b[i]] = i\n    b.sort()\n    c = []\n    for i in range(n):\n        c.append((a[i]+b[i])%n)\n    for i in range(n):\n        print(c[b_dict[b[i]]],end=\" \")\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = [0]*n\n    for i in range(n):\n        c[i] = (a[i]+b[i])%n\n    print(*c)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n\n    # create a dictionary for each element in b.\n    # key = b_i, value = list of indices where b_i appears.\n    b_dict = {}\n    for i in range(n):\n        if b[i] not in b_dict:\n            b_dict[b[i]] = []\n        b_dict[b[i]].append(i)\n\n    # create a list of lists with each element in a.\n    # [[a_i, list of indices where a_i appears], ...]\n    a_list = []\n    for i in range(n):\n        a_list.append([a[i], []])\n    for i in range(n):\n        a_list[a[i]][1].append(i)\n\n    # sort a_list in descending order.\n    a_list.sort(key=lambda x: x[0], reverse=True)\n\n    # create a new list for the final c.\n    c = [0] * n\n\n    # for each element in a_list:\n    for i in range(n):\n        # if b_dict[a_i] is empty, there is no element in b that is equal to a_i.\n        # we can just skip this a_i.\n        if len(b_dict[a_list[i][0]]) == 0:\n            continue\n\n        # for each index of a_i in a:\n        for j in range(len(a_list[i][1])):\n            # if b_dict[a_i] is empty, there is no element in b that is equal to a_i.\n            # we can just skip this a_i.\n            if len(b_dict[a_list[i][0]]) == 0:\n                break\n\n            # set the value of c[a_i_index] to the value of the next element in b_dict[a_i].\n            c[a_list[i][1][j]] = b_dict[a_list[i][0]][0]\n\n            # remove the element from b_dict[a_i] that we just used.\n            b_dict[a_list[i][0]].pop(0)\n\n    print(\" \".join([str(x) for x in c]))\n\nmain()"
    }
  ],
  "created": 1649876892,
  "id": "cmpl-4wcdY9LGcECbTDJ5qT0gHA4ZXmyId",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 19:08:44.271302 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n\n# Solution:\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nb_sort = sorted(b)\n\nc = list()\nfor i in range(n):\n    c.append((a[i] + b[i]) % n)\n\nc_sort = sorted(c)\n\nfor i in range(n):\n    if c[i] != c_sort[i]:\n        b[i] = b_sort[i]\n\nprint(*b)"
}
2022-04-13 19:08:44.271337 REASON stop
2022-04-13 19:08:44.271842 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n# SOLUTION\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nc = [0]*n\nfor i in range(n):\n    c[(a[i]+b[i])%n] += 1\nfor i in range(1,n):\n    c[i] += c[i-1]\n\nans = [0]*n\nfor i in range(n-1, -1, -1):\n    ans[c[(a[i]+b[i])%n]-1] = (a[i]+b[i])%n\n    c[(a[i]+b[i])%n] -= 1\nprint(' '.join(map(str, ans)))\n\n# Alternative solution\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nc = [0]*n\nfor i in range(n):\n    c[(a[i]+b[i])%n] += 1\n\nans = [0]*n\nfor i in range(n):\n    if c[i] == 0:\n        continue\n    \n    for j in range(c[i]):\n        ans[j] = i\n    c[i] = 0\n    break\n\nfor i in range(n-1, -1, -1):\n    if c[i] == 0:\n        continue\n    \n    for j in range(c[i]):\n        ans[j] = i\n    c[i] = 0\n    break\n\nprint(' '.join(map(str, ans)))"
}
2022-04-13 19:08:44.271966 REASON stop
2022-04-13 19:08:44.272424 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nc = [0]*n\n\nfor i in range(n):\n    c[(a[i] + b[i]) % n] += 1\n\nans = [0]*n\n\nfor i in range(n):\n    ans[i] = str(c[(i+1)%n])\n\nprint(\" \".join(ans))"
}
2022-04-13 19:08:44.272499 REASON stop
2022-04-13 19:08:44.288568 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef process(a, b, n):\n    b_map = {}\n    for i in range(n):\n        b_map[b[i]] = i\n    \n    a.sort()\n    b.sort()\n    \n    c = [0] * n\n    for i in range(n):\n        c[i] = (a[i] + b[b_map[i]]) % n\n    \n    return c\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    b = [int(x) for x in sys.stdin.readline().split()]\n    \n    c = process(a, b, n)\n    for x in c:\n        print x,\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 19:08:44.288673 REASON stop
2022-04-13 19:08:44.301558 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int,sys.stdin.readline().split()))\n    b = list(map(int,sys.stdin.readline().split()))\n    b_dict = {}\n    for i in range(n):\n        b_dict[b[i]] = i\n    b.sort()\n    c = []\n    for i in range(n):\n        c.append((a[i]+b[i])%n)\n    for i in range(n):\n        print(c[b_dict[b[i]]],end=\" \")\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 19:08:44.301650 REASON stop
2022-04-13 19:08:44.312023 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = [0]*n\n    for i in range(n):\n        c[i] = (a[i]+b[i])%n\n    print(*c)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 19:08:44.312115 REASON stop
2022-04-13 19:08:44.312829 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n\n    # create a dictionary for each element in b.\n    # key = b_i, value = list of indices where b_i appears.\n    b_dict = {}\n    for i in range(n):\n        if b[i] not in b_dict:\n            b_dict[b[i]] = []\n        b_dict[b[i]].append(i)\n\n    # create a list of lists with each element in a.\n    # [[a_i, list of indices where a_i appears], ...]\n    a_list = []\n    for i in range(n):\n        a_list.append([a[i], []])\n    for i in range(n):\n        a_list[a[i]][1].append(i)\n\n    # sort a_list in descending order.\n    a_list.sort(key=lambda x: x[0], reverse=True)\n\n    # create a new list for the final c.\n    c = [0] * n\n\n    # for each element in a_list:\n    for i in range(n):\n        # if b_dict[a_i] is empty, there is no element in b that is equal to a_i.\n        # we can just skip this a_i.\n        if len(b_dict[a_list[i][0]]) == 0:\n            continue\n\n        # for each index of a_i in a:\n        for j in range(len(a_list[i][1])):\n            # if b_dict[a_i] is empty, there is no element in b that is equal to a_i.\n            # we can just skip this a_i.\n            if len(b_dict[a_list[i][0]]) == 0:\n                break\n\n            # set the value of c[a_i_index] to the value of the next element in b_dict[a_i].\n            c[a_list[i][1][j]] = b_dict[a_list[i][0]][0]\n\n            # remove the element from b_dict[a_i] that we just used.\n            b_dict[a_list[i][0]].pop(0)\n\n    print(\" \".join([str(x) for x in c]))\n\nmain()"
}
2022-04-13 19:08:44.312916 REASON stop
