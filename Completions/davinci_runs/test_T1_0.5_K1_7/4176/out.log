2022-04-13 19:02:11.687091 """
Takahashi is organizing a party.
At the party, each guest will receive one or more snack pieces.
Takahashi predicts that the number of guests at this party will be A or B.
Find the minimum number of pieces that can be evenly distributed to the guests in both of the cases predicted.
We assume that a piece cannot be divided and distributed to multiple guests.

-----Constraints-----
 - 1 \leq A, B \leq 10^5
 - A \neq B
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
A B

-----Output-----
Print the minimum number of pieces that can be evenly distributed to the guests in both of the cases with A guests and B guests.

-----Sample Input-----
2 3

-----Sample Output-----
6

When we have six snack pieces, each guest can take three pieces if we have two guests, and each guest can take two if we have three guests.
"""
2022-04-13 19:02:11.687100 --------------------------
2022-04-13 19:02:27.817453 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nfrom math import gcd\n\na, b = map(int, input().split())\n\nprint(a*b//gcd(a, b))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport math\n\ndef lcm(x, y):\n    return (x * y) // math.gcd(x, y)\n\ndef main():\n    a, b = map(int, input().split())\n    print(lcm(a, b))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\n# Read from stdin\nA, B = list(map(int, sys.stdin.readline().split()))\n\n# Calculate the minimum number of pieces\n# that can be evenly distributed to the guests\n# in both of the cases with A guests and B guests.\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\nprint(lcm(A, B))"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    a, b = [int(x) for x in sys.stdin.readline().split()]\n    print(lcm(a, b))\n\ndef gcd(a, b):\n    \"\"\"\n    Calculate greatest common divisor using Euclidean Algorithm.\n    \"\"\"\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    \"\"\"\n    Calculate least common multiple.\n    \"\"\"\n    return a * b // gcd(a, b)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\n# read a line from stdin and split into a list of integers\ndef get_nums():\n  return [int(s) for s in sys.stdin.readline().split()]\n\ndef main():\n  a, b = get_nums()\n  # we can always divide the snacks by the LCM of a and b\n  print(a*b // gcd(a, b))\n\ndef gcd(a, b):\n  while b:\n    a, b = b, a % b\n  return a\n\nif __name__ == '__main__':\n  main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\n# a = int(input())\n# b = int(input())\na = int(2)\nb = int(3)\n\nif a > b:\n    print(a)\nelse:\n    print(b)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    args = sys.stdin.readline().rstrip().split()\n    a = int(args[0])\n    b = int(args[1])\n    print(lcm(a, b))\n\ndef gcd(a, b):\n    while b > 0:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1649876531,
  "id": "cmpl-4wcXjq2mVvFiZmrbsdQGyY6LvRPVa",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 19:02:27.817788 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nfrom math import gcd\n\na, b = map(int, input().split())\n\nprint(a*b//gcd(a, b))"
}
2022-04-13 19:02:27.817842 REASON stop
2022-04-13 19:02:27.818456 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport math\n\ndef lcm(x, y):\n    return (x * y) // math.gcd(x, y)\n\ndef main():\n    a, b = map(int, input().split())\n    print(lcm(a, b))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 19:02:27.818628 REASON stop
2022-04-13 19:02:27.819229 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\n# Read from stdin\nA, B = list(map(int, sys.stdin.readline().split()))\n\n# Calculate the minimum number of pieces\n# that can be evenly distributed to the guests\n# in both of the cases with A guests and B guests.\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\nprint(lcm(A, B))"
}
2022-04-13 19:02:27.819305 REASON stop
2022-04-13 19:02:27.844795 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    a, b = [int(x) for x in sys.stdin.readline().split()]\n    print(lcm(a, b))\n\ndef gcd(a, b):\n    \"\"\"\n    Calculate greatest common divisor using Euclidean Algorithm.\n    \"\"\"\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    \"\"\"\n    Calculate least common multiple.\n    \"\"\"\n    return a * b // gcd(a, b)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 19:02:27.844909 REASON stop
2022-04-13 19:02:27.846778 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\n# read a line from stdin and split into a list of integers\ndef get_nums():\n  return [int(s) for s in sys.stdin.readline().split()]\n\ndef main():\n  a, b = get_nums()\n  # we can always divide the snacks by the LCM of a and b\n  print(a*b // gcd(a, b))\n\ndef gcd(a, b):\n  while b:\n    a, b = b, a % b\n  return a\n\nif __name__ == '__main__':\n  main()"
}
2022-04-13 19:02:27.846878 REASON stop
2022-04-13 19:02:27.858726 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\n# a = int(input())\n# b = int(input())\na = int(2)\nb = int(3)\n\nif a > b:\n    print(a)\nelse:\n    print(b)"
}
2022-04-13 19:02:27.858841 REASON stop
2022-04-13 19:02:27.860482 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    args = sys.stdin.readline().rstrip().split()\n    a = int(args[0])\n    b = int(args[1])\n    print(lcm(a, b))\n\ndef gcd(a, b):\n    while b > 0:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 19:02:27.860576 REASON stop
