["import sys, math\n\ndef find_bad_prices(prices):\n\tstack = []\n\tbad_prices = 0\n\tfor i in range(len(prices)):\n\t\twhile stack and prices[i] < prices[stack[-1]]:\n\t\t\tbad_price = stack.pop()\n\t\t\tbad_prices += 1\n\t\tstack.append(i)\n\treturn bad_prices\n\nif __name__ == \"__main__\":\n\tt = int(input().strip())\n\tfor a0 in range(t):\n\t\tn = int(input().strip())\n\t\tprices = list(map(int, input().strip().split(' ')))\n\t\tprint(find_bad_prices(prices))", "def find_bad_prices(prices):\n    stack = []\n    for i in range(len(prices)):\n        while stack and prices[i] < prices[stack[-1]]:\n            bad_price = stack.pop()\n            print(\"Price at index \" + str(bad_price) + \" is bad\")\n        stack.append(i)\n    return stack\n\nprices = [3, 9, 4, 6, 7, 5]\nfind_bad_prices(prices)", "def find_bad_prices(prices):\n    stack = []\n    for i in range(len(prices)):\n        while stack and prices[i] < prices[stack[-1]]:\n            bad_price = stack.pop()\n            print(\"Price at index \" + str(bad_price) + \" is bad\")\n        stack.append(i)\n    return stack\n\nprices = [3, 9, 4, 6, 7, 5]\nfind_bad_prices(prices)"]