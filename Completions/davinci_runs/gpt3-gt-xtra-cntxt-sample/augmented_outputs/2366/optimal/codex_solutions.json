["import sys\n\ndef main():\n    t = int(sys.stdin.readline())\n    for i in range(t):\n        n = int(sys.stdin.readline())\n        a = list(map(int, sys.stdin.readline().split()))\n        stack = []\n        bad = 0\n        for i in range(n):\n            while stack and stack[-1]>a[i]:\n                stack.pop()\n                bad += 1\n            stack.append(a[i])\n        print(bad)\n\nif __name__ == \"__main__\":\n    main()", "from sys import stdin\n\ndef main():\n    t = int(stdin.readline().strip())\n    for i in range(t):\n        n = int(stdin.readline().strip())\n        prices = [int(x) for x in stdin.readline().strip().split()]\n        stack = []\n        bad_prices = 0\n        for price in prices:\n            while stack and stack[-1] > price:\n                stack.pop()\n            stack.append(price)\n            bad_prices += len(stack) - 1\n        print(bad_prices)\n\nif __name__ == '__main__':\n    main()", "import sys\n\ndef main():\n    # Read the number of test cases\n    t = int(sys.stdin.readline())\n    # For each test case\n    for i in range(t):\n        # Read the number of days and the prices\n        n = int(sys.stdin.readline())\n        prices = list(map(int, sys.stdin.readline().split()))\n        # Initialize the stack\n        stack = []\n        count = 0\n        # For each price\n        for price in prices:\n            # While the stack is not empty and the top of the stack is lower\n            while stack and stack[-1] > price:\n                # Pop the stack\n                stack.pop()\n                # Increase the count\n                count += 1\n            # Push the price to the stack\n            stack.append(price)\n        # Print the count\n        print(count)\n\nif __name__ == '__main__':\n    main()"]