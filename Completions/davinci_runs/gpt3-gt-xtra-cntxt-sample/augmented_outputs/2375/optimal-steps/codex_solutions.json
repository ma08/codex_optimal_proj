["import sys\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        print(solve(n, a))\n\ndef solve(n, a):\n    a.sort()\n    currNum = a[0]\n    currCount = 0\n    ans = 0\n    for i in range(n):\n        if a[i] == currNum:\n            currCount += 1\n        else:\n            if currCount > 2:\n                ans += currCount\n            elif currCount == 2:\n                ans += currCount - 1\n            currNum = a[i]\n            currCount = 1\n    if currCount > 2:\n        ans += currCount\n    elif currCount == 2:\n        ans += currCount - 1\n    return ans\n\n\nif __name__ == \"__main__\":\n    main()", "def three_block_palindrome(n, a, t):\n    a.sort()\n    answer = 0\n    i = 0\n    while i < n:\n        count = 1\n        while i + 1 < n and a[i] == a[i + 1]:\n            i += 1\n            count += 1\n        if count > 2:\n            answer += count\n        elif count == 2:\n            answer += count - 1\n        i += 1\n    print(\"Case #{}: {}\".format(t, answer))\n\nif __name__ == \"__main__\":\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        three_block_palindrome(n, a, i + 1)", "def threeBlocksPalindrome(arr):\n    arr.sort()\n    answer = 0\n    current = arr[0]\n    currentCount = 1\n    for i in range(1, len(arr)):\n        if arr[i] == current:\n            currentCount += 1\n        else:\n            if currentCount > 2:\n                answer += currentCount\n            elif currentCount == 2:\n                answer += 1\n            current = arr[i]\n            currentCount = 1\n    if currentCount > 2:\n        answer += currentCount\n    elif currentCount == 2:\n        answer += 1\n    return answer\n\ntestCases = int(input())\nfor i in range(testCases):\n    arrLength = int(input())\n    arr = [int(x) for x in input().split()]\n    print(threeBlocksPalindrome(arr))"]