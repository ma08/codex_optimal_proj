["", "\nimport random\n\ndef gen_random_array(n, m):\n    a = []\n    for i in range(n):\n        a.append(random.randint(-m, m))\n    return a\n\ndef gen_random_segments(n, m):\n    s = []\n    for i in range(m):\n        l = random.randint(1, n)\n        r = random.randint(l, n)\n        s.append([l, r])\n    return s\n\ndef gen_random_subset(m):\n    s = set()\n    while True:\n        s.add(random.randint(1, m))\n        if len(s) == m:\n            break\n    return list(s)\n\ndef brute_force(a, s, m):\n    d = 0\n    for i in range(1, m+1):\n        for j in range(i+1, m+1):\n            for k in range(j+1, m+1):\n                for l in range(k+1, m+1):\n                    b = [x for x in a]\n                    b[s[i-1][0]-1:s[i-1][1]] = [x-1 for x in b[s[i-1][0]-1:s[i-1][1]]]\n                    b[s[j-1][0]-1:s[j-1][1]] = [x-1 for x in b[s[j-1][0]-1:s[j-1][1]]]\n                    b[s[k-1][0]-1:s[k-1][1]] = [x-1 for x in b[s[k-1][0]-1:s[k-1][1]]]\n                    b[s[l-1][0]-1:s[l-1][1]] = [x-1 for x in b[s[l-1][0]-1:s[l-1][1]]]\n                    if max(b) - min(b) > d:\n                        d = max(b) - min(b)\n    return d\n\ndef solve(a, s, m):\n    d = 0\n    s_i = []\n    for i in range(m):\n        if (s[i][1] - s[i][0]) % 2 == 0:\n            b = [x for x in a]\n            b[s[i][0]-1:s[i][1]] = [x-1 for x in b[s[i][0]-1:s[i][1]]]\n            if max(b) - min(b) > d:\n                d = max(b) - min(b)\n                s_i = [i+1]\n        else:\n            b = [x for x in a]\n            b[s[i][0]-1:s[i][1]] = [x-1 for x in b[s[i][0]-1:s[i][1]]]\n            if max(b) - min(b) > d:\n                d = max(b) - min(b)\n                s_i = [i+1]\n            b = [x for x in a]\n            b[s[i][0]-1:s[i][1]] = [x-2 for x in b[s[i][0]-1:s[i][1]]]\n            if max(b) - min(b) > d:\n                d = max(b) - min(b)\n                s_i = [i+1]\n    return d, s_i\n\ndef main():\n    n = random.randint(1, 10**5)\n    m = random.randint(0, 300)\n    a = gen_random_array(n, 10**6)\n    s = gen_random_segments(n, m)\n    print(n, m)\n    print(' '.join([str(x) for x in a]))\n    for i in range(m):\n        print(s[i][0], s[i][1])\n    d, s_i = solve(a, s, m)\n    print(d)\n    print(len(s_i))\n    print(' '.join([str(x) for x in s_i]))\n\nif __name__ == '__main__':\n    main()"]