["\n\ndef main():\n  n, k = map(int, raw_input().split())\n  s = raw_input()\n\n  if k > n:\n    print -1\n    return\n\n  dp = [[-1 for j in xrange(k)] for i in xrange(n)]\n  for i in xrange(n):\n    dp[i][0] = n - i\n\n  for i in xrange(1, n):\n    for j in xrange(1, k):\n      dp[i][j] = dp[i - 1][j]\n      for l in xrange(i):\n        if s[i] == s[l]:\n          dp[i][j] = min(dp[i][j], dp[l][j - 1] + n - i)\n\n  print dp[n - 1][k - 1]\n\nmain()", "\n\nfrom collections import defaultdict\n\ndef solve(n, k, s):\n    count = defaultdict(int)\n    for i in range(n):\n        count[s[i]] += 1\n    if k > n:\n        return -1\n    if k == n:\n        return sum(count.values())\n    if k == 1:\n        return n - max(count.values())\n    if k == 2:\n        return sum(count.values()) - max(count.values())\n    return -1\n\nif __name__ == '__main__':\n    n, k = map(int, input().split())\n    s = input()\n    print(solve(n, k, s))"]