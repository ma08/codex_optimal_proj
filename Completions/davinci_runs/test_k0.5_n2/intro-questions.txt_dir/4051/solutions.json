["\"\"\"\nCodeforces April Fools 2018 Problem C\n\nAuthor  : chaotic_iak\nLanguage: Python 3.5.2\n\"\"\"\n\n################################################### SOLUTION\n\ndef initialize_solution():\n    pass\n\ndef main():\n    n, = read()\n    a = read()\n    for i in range(n-1):\n        if abs(a[i] - a[i+1]) >= 2:\n            return \"NO\"\n    return \"YES\"\n\n########################################## PROBLEM CONSTANTS\n\nREAD_FROM_FILE = None\nOUTPUT_PREFIX = None\nINTERACTIVE = False\n\n#################################################### HELPERS\n\nimport sys\n\ndef read(callback=int, split=True):\n    if READ_FROM_FILE:\n        ipt = sfile.readline().strip()\n    else:\n        ipt = input().strip()\n    if INTERACTIVE and ipt == \"WRONG_ANSWER\":\n        return\n    if split:\n        return list(map(callback, ipt.split()))\n    else:\n        return callback(ipt)\n\ndef write(value, end=\"\\n\"):\n    if value is None: return\n    try:\n        if not isinstance(value, str):\n            value = \" \".join(map(str, value))\n    except:\n        pass\n    if READ_FROM_FILE:\n        tfile.write(str(value, end=end))\n    else:\n        print(value, end=end)\n    if INTERACTIVE:\n        sys.stdout.flush()\n\nsfile = None\ntfile = None\nif READ_FROM_FILE:\n    sfile = open(READ_FROM_FILE + \".in\", \"r\")\n    sfile.seek(0)\n    tfile = open(READ_FROM_FILE + \".out\", \"w\")\nif OUTPUT_PREFIX is None:\n    result = main()\n    if result is not None:\n        write(result)\nelse:\n    initialize_solution()\n    TOTAL_CASES, = read()\n    for CASE_NUMBER in range(1, TOTAL_CASES+1):\n        write(OUTPUT_PREFIX.replace(\"%d\", str(CASE_NUMBER)), end=\"\")\n        result = main()\n        if result is not None:\n            write(result)\nif sfile is not None: sfile.close()\nif tfile is not None: tfile.close()\n", "n = int(input())\nf = 0\na = list(map(int , input().split()))\nfor i in range(n - 1):\n    if(abs(a[i] - a[i + 1]) > 1):\n        f = 1\nprint([\"YES\" , \"NO\" ][f])\n", "# -*- coding: utf-8 -*-\n\nimport math\n\nn = int(input())\ns = input().split()\nfor i in range(1,len(s)):\n    if math.fabs(int(s[i]) - int(s[i-1])) > 1:\n        print(\"NO\")\n        return\n\nprint(\"YES\")", "n = int(input())\n\na = list(map(int, input().split()))\nfor i in range(n - 1):\n    if abs(a[i] - a[i + 1]) >= 2:\n        print('NO')\n        return\nprint('YES')", "input()\na = list(map(int,input().split()))\ns = sorted(a)\nwhile a:\n    for i in range(1,len(a)):\n        if a[i] > a[i - 1] + 1 or a[i] + 1 < a[i - 1]:\n            print('NO')\n            return\n    a.remove(max(a))\nprint('YES')", "\n# A\n# print(int(input()) % 2)\n\n# C\ninput()\na = [int(x) for x in input().split()]\nwhile a:\n    for i in range(len(a)-1):\n        if abs(a[i] - a[i+1]) >= 2:\n            print('NO')\n            return\n    i = a.index(max(a))\n    a.pop(i)\nprint('YES')\n", "n = int(input())\na = list(map(int, input().split()))\nf = 'YES'\nfor i in range(n - 1):\n    if abs(a[i] - a[i + 1]) > 1:\n        f = 'NO'\n        break\nprint(f)", "ooo = input()\nm = [int(i) for i in input().split()]\nk = False\nfor i in range(int(ooo)-1):\n    if abs(m[i]-m[i+1]) > 1:\n        print('NO')\n        k = True\n        break\nif not k:print('YES')", "def govno():\n    for i in range(len(num) - 1):\n        if abs(num[i] - num[i + 1]) >= 2:\n            if num[i] < num[i + 1]:\n                num[i + 1] -= 1\n                num[i] += 1\n            else:\n                num[i] -= 1\n                num[i + 1] += 1\n\n\nn = int(input())\nnum = list(map(int, input().split()))\ncor = []\ncor += num\ncor.sort()\nour = []\nfor i in range(n):\n    govno()\n    a = max(num)\n    num.pop(num.index(a))\n    our.append(a)\nour.reverse()\nif our == cor:\n    print('YES')\nelse:\n    print('NO')", "N = int(input())\nA = list(map(int, input().split()))\nok = True\nfor i in range(N):\n  for j in range(N - i - 1):\n    if abs(A[j] - A[j + 1]) > 1:\n      ok = False\n  idx = A.index(max(A))\n  A = A[:idx] + A[idx + 1:]\nif ok:\n  print('YES')\nelse:\n  print('NO')", "n = int(input())\na = list(map(int, input().split()))\n\nfor i in range(len(a) - 1):\n    if abs(a[i + 1] - a[i]) > 1:\n        print('NO')\n        return\n\nwhile len(a) > 0:\n    m = max(a)\n    i = a.index(m)\n    a.remove(m)\n    if 0 < i < len(a) and abs(a[i] - a[i - 1]) > 1:\n        print('NO')\n        return\n\nprint('YES')", "n = int(input())\na = list(map(int, input().split()))\n\nfor i in range(len(a) - 1):\n    if abs(a[i + 1] - a[i]) > 1:\n        print('NO')\n        return\n\nprint('YES')", "n = int(input())\nr = list(map(int, input().split(' ')))\ns = []\n\ndef ok():\n    prev = r[0]\n    for ra in r[1:]:\n        if abs(ra-prev) >= 2:\n            return False\n        prev = ra\n    return True\n\nwhile len(r):\n    if not ok():\n        print('NO')\n        return\n    \n    maxi = 0\n    for i in range(len(r)):\n        if r[i] > r[maxi]:\n            maxi = i\n    r.pop(maxi)\n    \nprint('YES')\n", "n = int(input())\nb = True\na = [int(i) for i in input().split()]\nfor i in range(n-1):\n    if abs(a[i+1]-a[i])>=2: b = False\nif b: print(\"YES\")\nelse: print(\"NO\")", "n = int(input().strip())\nx = list(map(int, input().strip().split()))\n\ndef check(y):\n    for i in range(len(y)-1):\n        if abs(y[i]-y[i+1]) > 1:\n            return False\n    return True\n\nokay = True\nif not check(x):\n    okay = False\nwhile len(x) > 1:\n    m = max(x)\n    x.remove(m)\n    if not check(x):\n        okay = False\n\nprint('YES' if okay else 'NO')\n", "def check(d):\n    for i in range(1, len(d)):\n        if abs(d[i - 1] - d[i]) > 1:\n            return 1\n    return 0\n\nn = int(input())\na = [int(i) for i in input().split()]\nb = []\nans = 0\nans = ans or check(a)\nfor i in range(n):\n    mx = max(a)\n    a.pop(a.index(mx))\n    b.append(mx)\n    ans = ans or check(a)\nans = ans or check(b)\nprint(['YES', 'NO'][ans])", "n = int(input())\narr = list(map(int, input().split()))\nfor i in range(n - 1):\n    if abs(arr[i] - arr[i + 1]) >= 2:\n        print('NO')\n        break\nelse:\n    print('YES')\n", "import sys\nn = input()\na = [int(x) for x in input().split()]\nac = list(a)\nr = []\nok = True\n\nfor i in range(len(a) - 1):\n    if (abs(a[i] - a[i + 1]) >= 2):\n        print (\"NO\")\n        return\na = list(sorted(a))\n\nfor i in range(len(a) - 1):\n    if (abs(a[i] - a[i + 1]) >= 2):\n        print (\"NO\")\n        return\n        \nprint (\"YES\")", "def is_good(xs):\n    for i in range(1, len(xs)):\n        if abs(xs[i] - xs[i - 1]) >= 2:\n            return False\n    return True\n\n\nn = int(input())\nxs = list(map(int, input().split()))\nok = is_good(xs) and is_good(list(sorted(xs)))\nfor i in range(n):\n    pos = 0\n    for j in range(n - i):\n        if xs[j] > xs[pos]:\n            pos = j\n    val = xs[pos]\n    xs.pop(pos)\n    ok = ok and is_good(xs)\nprint('YES' if ok else 'NO')", "n=int(input())\na=list(map(int,input().split()))\ns=set()\nfor i in range(n-1):\n    s.add(abs(a[i]-a[i+1]))\nif len(list([x for x in s if x>1]))>0:print('NO')\nelse:print('YES')\n", "def topple(a):\n    for i in range(1, len(a)):\n        if a[i] - 2 >= a[i - 1]:\n            a[i] -= 1\n            a[i - 1] += 1\n        elif a[i] + 2 <= a[i - 1]:\n            a[i - 1] -= 1\n            a[i] += 1\n\n    return a\n\ndef ravioli(a):\n    res = []\n    while a:\n        a = topple(a)\n        best = 0 \n        for i in range(len(a)):\n            if a[i] > a[best]:\n                best = i\n        res.append(a[best])\n        a = a[:best] + a[best + 1:]\n\n    return list(reversed(res))\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(a)\nb.sort()\n\nc = ravioli(a)\nif b == c:\n    print('YES')\nelse:\n    print('NO')\n", "\nn = int(input())\na = list(map(int, input().split()))\nok = True\n\nfor i in range(n - 1):\n    if abs(a[i] - a[i + 1]) > 1:\n        ok = False\n\nif ok:\n    print('YES')\nelse:\n    print('NO')\n", "'''input\n3\n3 1 2\n'''\n\ndef check(a):\n\tfor i in range(len(a)-1):\n\t\tif(abs(a[i]-a[i+1]) >= 2): return False\n\treturn True\n\nn = int(input())\na = list(map(int,input().split()))\nans = \"YES\"\nwhile(a):\n\tif(not check(a)):\n\t\tans = \"NO\"\n\t\tbreak\n\tind = 0\n\tmx = a[0]\n\tfor i in range(1,n):\n\t\tif(a[i] > mx):\n\t\t\tmx = a[i]\n\t\t\tind = i\n\tn -= 1\n\tdel(a[ind])\nprint(ans)\t", "n = int(input())\na = [int(i) for i in input().split()]\nwhile len(a)!=1:\n    \n    m = a[0]\n    im = 0\n    for i in range(1,len(a)):\n        if abs(a[i] - a[i-1])>=2:\n            print(\"NO\")\n            return\n        if a[i]>m:\n            m = a[i]\n            im = i\n    a.pop(im)\nprint(\"YES\")", "n = int(input())\na = list(map(int, input().split()))\nb = sorted(a, reverse=True)\nc = []\nfor i in range(n):\n    for j in range(len(a) - 1):\n        if a[j] > a[j + 1] + 1 or a[j] < a[j + 1] - 1:\n            print('NO')\n            return\n    c += [max(a)]\n    a.remove(max(a))\nassert b == c, (b, c)\nprint('YES')\n"]