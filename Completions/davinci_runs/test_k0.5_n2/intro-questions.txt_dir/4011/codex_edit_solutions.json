["\n\ndef main():\n    n = int(input())\n    a = list(input())\n    f = list(map(int, input().split()))\n    f_inv = {f[i-1]: i for i in range(1, 10)}\n    a = [f_inv[int(i)] for i in a]\n\n    left = 0\n    right = 0\n    max_left, max_right, max_sum, curr_sum = 0, 0, 0, 0\n    while right < n:\n        if curr_sum <= 0:\n            left = right\n        curr_sum += a[right]\n        if curr_sum > max_sum:\n            max_sum = curr_sum\n            max_left = left\n            max_right = right\n        right += 1\n    a = a[:max_left] + list(reversed(a[max_left:max_right+1])) + a[max_right+1:]\n    print(''.join(map(str, a)))\n\n\nmain()\n", "\n\n\ndef main():\n    n = int(input())\n    a = list(input())\n    f = list(map(int, input().split()))\n    f_inv = {f[i - 1]: i for i in range(1, 11)}\n    a = [f_inv[int(i)] for i in a]  # replace each digit with its frequency\n\n    left = 0\n    right = 0\n    max_left = 0\n    max_right = 0\n    max_sum = 0\n    curr_sum = 0\n    while right < n:\n        if curr_sum <= 0:\n            left = right\n            curr_sum = 0\n        curr_sum += a[right]\n        if curr_sum > max_sum:\n            max_sum = curr_sum\n            max_left = left\n            max_right = right\n        right += 1\n    a = a[:max_left] + list(reversed(a[max_left:max_right + 1])) + a[max_right + 1:]\n    a = [str(i) for i in a]\n    print(''.join(a))\n\n\nmain()\n", "\n\ndef main():\n    n = int(input())\n    a = input()\n    f = list(map(int, input().split()))\n\n    res = 0\n    for i in range(n):\n        res = res * 10 + f[int(a[i]) - 1]\n\n    print(res)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = input()  # a is a string, not a list\n    f = list(map(int, input().split()))\n\n    res = 0\n    for i in range(n):\n        res = res * 10 + f[int(a[i]) - 1]  # a[i] is a string, not a list\n\n    print(res)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = list(input())\n    f = list(map(int, input().split()))\n    f_inv = {f[i-1]: i for i in range(1, 11)}  # frequency to digit\n    a = [f_inv[int(i)] for i in a]  # replace each digit with its frequency\n\n    left = 0\n    right = 0\n    max_left = 0\n    max_right = 0\n    max_sum = 0\n    curr_sum = 0\n    while right < n:\n        if curr_sum <= 0:\n            left = right\n            curr_sum = 0\n        curr_sum += a[right]\n        if curr_sum > max_sum:\n            max_sum = curr_sum\n            max_left = left\n            max_right = right\n        right += 1\n    a = a[:max_left] + list(reversed(a[max_left:max_right+1])) + a[max_right+1:]  # reverse the max sum subarray\n    a = [str(i) for i in a]  # convert to string\n    print(''.join(a))\n\n\nmain()\n", "\n\ndef main():\n    n = int(input())\n    a = list(input())\n    f = list(map(int, input().split()))\n    f_inv = {f[i-1]: i for i in range(1, 10)}  # f_inv[i] = j if f[j-1] = i\n    a = [f_inv[int(i)] for i in a]\n\n    left = 0\n    right = 0\n    max_left, max_right, max_sum, curr_sum = 0, 0, -float('inf'), 0\n    while right < n:\n        if curr_sum <= 0:\n            left = right\n        curr_sum += a[right]\n        if curr_sum > max_sum:\n            max_sum = curr_sum\n            max_left = left\n            max_right = right\n        right += 1\n    a = a[:max_left] + list(reversed(a[max_left:max_right+1])) + a[max_right+1:]  # reverse the max sum subarray\n    a = [str(i) for i in a]\n    print(''.join(a))\n\n\nmain()\n"]