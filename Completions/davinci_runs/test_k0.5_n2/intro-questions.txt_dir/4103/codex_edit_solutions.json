["\nn, b, a = map(int, input().split())\ns = list(map(int, input().split()))\n\nbattery = b\naccumulator = a\n\nsegments = 0\n\nfor i in range(n):\n    if s[i] == 1:\n        if battery < b:\n            battery += 1\n        else:\n            accumulator += 1\n    if battery > 0:\n        battery -= 1\n        segments += 1\n    elif accumulator > 0:\n        accumulator -= 1\n        segments += 1\n    else:\n        break\n\nprint(segments)\n", "def solve(n, b, a, s,):\n    ans = 0\n    cur_b, cur_a = b, a\n    for i in range(n):\n        if s[i]:\n            if cur_a:\n                cur_a -= 1\n            elif cur_b:\n                cur_b -= 1\n        else:\n            if cur_b:\n                cur_b -= 1\n            elif cur_a:\n                cur_a -= 1\n        if cur_b or cur_a:\n            ans += 1\n        else:\n            break\n    return ans\n\nn, b, a = map(int, input().split())\ns = list(map(int, input().split()))\nprint(solve(n, b, a, s))\n", "def solve(n, a, b, s):\n    ans = 0\n    cur_b, cur_a = b, a\n    for i in range(n):\n        if s[i]:\n            if cur_a:\n                cur_a -= 1\n            elif cur_b:\n                cur_b -= 1\n        else:\n            if cur_b:\n                cur_b -= 1\n            elif cur_a:\n                cur_a -= 1\n        if cur_b or cur_a:\n            ans += 1\n        else:\n            break\n    return ans\n\nn, b, a = map(int, input().split())\ns = list(map(int, input().split()))\nprint(solve(n, b, a, s))\n", "\n\nn, b, a = map(int, input().split())  # n - number of segments, b - battery capacity, a - accumulator capacity\ns = list(map(int, input().split()))  # s - list of segments\n\nbattery = b  # current battery capacity\naccumulator = a  # current accumulator capacity\n\nsegments = 0  # number of segments passed\n\nfor i in range(n):\n    if s[i] == 1:  # if segment is sunny\n        if battery < b:  # if battery is not full\n            battery += 1\n        else:  # if battery is full\n            accumulator += 1\n    if battery > 0:  # if battery is not empty\n        battery -= 1\n        segments += 1\n    elif accumulator > 0:  # if accumulator is not empty\n        accumulator -= 1\n        segments += 1\n    else:  # if both battery and accumulator are empty\n        break\n\nprint(segments)\n"]