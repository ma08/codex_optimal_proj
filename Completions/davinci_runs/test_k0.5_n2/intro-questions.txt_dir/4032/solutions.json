["input = __import__('sys').stdin.readline\nMIS = lambda: map(int,input().split())\n\nn, k = MIS()\nprob = list(MIS())\nwhile prob and prob[0] <= k: prob.pop(0)\nwhile prob and prob[-1] <= k: prob.pop()\nprint(n - len(prob))", "def inp():\n    return map(int, input().split())\n\nn, k = inp()\na = list(inp())\nans = 0\ni = 0\nwhile i != n and a[i] <= k:\n    ans += 1\n    i += 1\nj = n - 1\nwhile i < j and a[j] <= k:\n    ans += 1\n    j -= 1\nprint(ans)", "n,k = list(map(int,input().split()))\nai = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n    if ai[i] > k:\n        break\n    ans += 1\nfor i in range(n-1,-1,-1):\n    if ai[i] > k:\n        break\n    ans += 1\nprint(min(n,ans))\n", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nans = 0\nwhile len(a) > 0 and a[0] <= k:\n  ans += 1\n  a = a[1:]\nwhile len(a) > 0 and a[-1] <= k:\n  ans += 1\n  a = a[:-1]\nprint(ans)\n", "n,k=list(map(int,input().split()))\na=list(map(int,input().split()))\nwhile len(a)!=0 and a[0]<=k: a.pop(0)\nwhile len(a)!=0 and a[-1]<=k: a.pop()\nprint(n-len(a))\n  \n\n    \n\n'''\n////////////////      //////        ///////      //             ///////     //  //   //\n////          //    ///   ///     ///    ///     //            ///  ///     ////     //\n////    ////       ///     ///   ///      ///    //           /////////     ////     ///////\n////     /////    ///       /// ///        ///   //          ///    ///     ////     //   //\n//////////////     ///////////   ///////////     //////     ///     ///     //  //   //   //\n'''\n\n", "from collections import deque\nn,k=map(int,input().split())\nx=deque()\nfor j in map(int,input().split()):\n  x.append(j)\nwhile x:\n  if x[0]<=k: x.popleft()\n  else: break\nwhile x:\n  if x[-1]<=k: x.pop()\n  else: break\nprint(n-len(x))", "n,k=list(map(int, input().split() ) )\ns=list(map(int, input().split() ) )\nc=0\nfor i in range(n):\n    if s[i]<=k:\n        c+=1\n    else:\n        break\nfor i in range(n-c):\n    if s[n-1-i]<=k:\n        c+=1\n    else:\n        break\nprint(c)", "n,k = input().split()\nn = int(n)\nk = int(k)\na = list(map(int,input().split()))\ni = 0\ncount=0\nwhile(i<n):\n    if(a[i] <= k):\n        count+=1\n        i+=1\n    else:\n        break\nj = n-1\nwhile(j>i):\n    if(a[j]<=k):\n        count+=1\n        j-=1\n    else:\n        break\nprint(count)", "n,k=list(map(int,input().split()))\na=list(map(int,input().split()))\nk1=0;k2=0\nfor i in range(n):\n    if a[i]<=k:\n        k1+=1\n    else:\n        break\nfor i in range(n-1,-1,-1):\n    if a[i]<=k:\n        k2+=1\n    else:\n        break\nprint(min(k1+k2,n))\n", "# ===================================\n# (c) MidAndFeed aka ASilentVoice\n# ===================================\n# import math \n# import collections\n# import string\n# ===================================\nn, k = [int(x) for x in input().split()]\nq = [int(x) for x in input().split()]\nl = 0\nr = n-1\nans = 0\nwhile(l <= r and (q[l] <= k or q[r] <=k)):\n\tif l == r:\n\t\tans += 1\n\t\tbreak\n\tif q[l] <= k:\n\t\tans += 1\n\t\tl += 1\n\tif q[r] <= k:\n\t\tans += 1\n\t\tr -= 1\n\nprint(ans)", "n,k=map(int,input().split())\nar=list(map(int,input().split()))\ni=0\nfor x in ar:\n    if(x>k):\n        break\n    i+=1\nans=i\nfor x in ar[::-1]:\n    if(x>k):\n        break\n    ans+=1\n\nans=min(n,ans)\nprint(ans)", "n,k=list(map(int,input().split()))\na=list(map(int,input().split()))\nind1=-1\nind2=0\nfor i in range(n):\n    if(a[i]>k):\n        if(ind1==-1):\n            ind1=i\n        ind2=i\nif(ind1==-1):\n    print(n)\nelse:\n    print(min(n,n-(ind2-ind1+1)))", "n,k=(list(map(int,input().strip().split(' '))))\narr=list(map(int,input().strip().split(' ')))\ncnt = 0\nfor i in range(n):\n  if(arr[i]>k):\n    cnt = 1\n    break\nif(cnt==0):\n  print(n)\nelse:\n  cnt = i\n  for i in range(n-1,i-1,-1):\n    if(arr[i]>k):\n      break\n    cnt+=1\n  print(cnt)\n", "n, k = map(int, input().split())\na = list(map(int, input().split()))\nc = 0\nwhile a and a[0] <= k:\n    a.pop(0)\n    c += 1\nwhile a and a[-1] <= k:\n    a.pop()\n    c += 1\nprint(c)", "n, k = map(int, input().split())\ndifficulties = list(map(int, input().split()))\nsolved = True\ncount = 0\nleft = 0\nright = n - 1\nwhile solved and left <= right:\n    solved = False\n    if difficulties[left] <= k:\n        left += 1\n        solved = True\n        count += 1\n    elif difficulties[right] <= k:\n        right -= 1\n        solved = True\n        count += 1\n\nprint(count)", "n,k = list(map(int,input().split()))\np = 0\na = list(map(int,input().split()))\nq = [1]*n\nfor i in range(n):\n    if a[i] > k:\n        break\n    elif q[i] != 0:\n        q[i] = 0\n        p+=1\nfor i in range(1,n+1):\n    if a[-i] > k:\n        break\n    elif q[-i] != 0:\n        q[-i] = 0\n        p+=1\nprint(p)\n", "import math;\nimport random;\nimport time;\nimport heapq;\ndef getIntList():\n    return list(map(int, input().split()));\ndef getTransIntList(n):\n    first=getIntList();\n    m=len(first);\n    result=[[0]*n for _ in range(m)];\n    for i in range(m):\n        result[i][0]=first[i];\n    for j in range(1, n):\n        curr=getIntList();\n        for i in range(m):\n            result[i][j]=curr[i];\n    return result;\nn, k = getIntList();\na = getIntList();\nresult=0;\nfor x in a:\n    if x>k:\n        break;\n    result+=1;\nif result<n:\n    for x in a[::-1]:\n        if x>k:\n            break;\n        result+=1;\nprint(result);", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nresult = 0\nwhile 1:\n    if len(a)==0 or (a[0]>k and a[-1]>k):\n        break\n    if a[0]<=k:\n        result += 1\n        a.pop(0)\n    elif a[-1]<=k:\n        result += 1\n        a.pop(-1)\nprint(result)\n", "#-*-coding:utf-8 -*-\n\nn, m = map(int, input().split())\n\nls = list(map(int, input().split()))\n\ncnt = 0\n\nL, R = 0, n - 1\n\nwhile L < n and ls[L] <= m:\n    L += 1\n    cnt += 1\n\nwhile R > L and ls[R] <= m:\n    R -= 1\n    cnt += 1\n\nprint(cnt)", "n,k = list(map(int,input().split()))\na = list(map(int,input().split()))\n\ncnt = 0\nwhile True:\n    if len(a)==0:\n        break\n    if a[0]<=k:\n        cnt+=1\n        a = a[1:]\n        continue\n    elif a[-1]<=k:\n        cnt+=1\n        a = a[:-1]\n        continue\n    else:\n        break\nprint(cnt)\n", "n, k = map(int, input().split())\narr = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if arr[i] <= k:\n        ans += 1\n    else:\n        break\nfor i in range(n - 1, -1, -1):\n    if arr[i] <= k:\n        ans += 1\n    else:\n        break\nprint(min(n, ans))", "import re\nimport math\nimport decimal\nimport bisect\n\ndef read():\n\treturn input().strip()\n\ndef iread():\n\treturn int(input().strip())\n\ndef viread():\n\treturn list(map(int, input().strip().split()))\n\n# code goes here\nfrom collections import deque\nn, k = viread()\nd = deque(viread())\n# print(d)\nsolved = 0\nwhile len(d) != 0 and (d[0] <= k or d[-1] <= k):\n\tif d[0] <= k:\n\t\td.popleft()\n\t\tsolved += 1\n\telif d[-1] <= k:\n\t\td.pop()\n\t\tsolved += 1\n\t# print(d)\nprint(solved)\n", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nc = 0\nfor i in range(len(a)):\n    if a[i] <= k:\n        c += 1\n    else:\n        break\nfor i in range(len(a)-1, -1, -1):\n    if a[i] <= k:\n        c += 1\n    else:\n        break\nprint(min(c, len(a)))\n", "n, k = list(map(int, input().split()))\nlst = list(map(int, input().split()))\ncnt = 0\n\nwhile n and lst[0] <= k:\n    lst.pop(0)\n    n -= 1\n    cnt += 1\n\nwhile n and lst[n-1] <= k:\n    lst.pop(n-1)\n    n -= 1\n    cnt += 1\n\nprint(cnt)\n"]