"""
You are given a huge decimal number consisting of $n$ digits. It is guaranteed that this number has no leading zeros. Each digit of this number is either 0 or 1.

You may perform several (possibly zero) operations with this number. During each operation you are allowed to change any digit of your number; you may change 0 to 1 or 1 to 0. It is possible that after some operation you can obtain a number with leading zeroes, but it does not matter for this problem.

You are also given two integers $0 \le y < x < n$. Your task is to calculate the minimum number of operations you should perform to obtain the number that has remainder $10^y$ modulo $10^x$. In other words, the obtained number should have remainder $10^y$ when divided by $10^x$.


-----Input-----

The first line of the input contains three integers $n, x, y$ ($0 \le y < x < n \le 2 \cdot 10^5$) — the length of the number and the integers $x$ and $y$, respectively.

The second line of the input contains one decimal number consisting of $n$ digits, each digit of this number is either 0 or 1. It is guaranteed that the first digit of the number is 1.


-----Output-----

Print one integer — the minimum number of operations you should perform to obtain the number having remainder $10^y$ modulo $10^x$. In other words, the obtained number should have remainder $10^y$ when divided by $10^x$.


-----Examples-----
Input
11 5 2
11010100101

Output
1

Input
11 5 1
11010100101

Output
3



-----Note-----

In the first example the number will be $11010100100$ after performing one operation. It has remainder $100$ modulo $100000$.

In the second example the number will be $11010100010$ after performing three operations. It has remainder $10$ modulo $100000$.
"""
--------------------------
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, x, y = [int(x) for x in input().split()]\n    number = input()\n    result = int(number, 2)\n    #print(result)\n    rem = result % (10 ** x)\n    #print(rem)\n    if rem == 10 ** y:\n        print(0)\n    else:\n        #print(rem)\n        rem = 10 ** y - rem\n        #print(rem)\n        if rem % 2 == 0:\n            print(1)\n        else:\n            print(2)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, x, y = map(int, input().split())\n    num = input()\n    if num[0] == '0':\n        print(1)\n    else:\n        for i in range(x, n):\n            if num[i] == '0':\n                print(1)\n                break\n        else:\n            print(0)\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1648682943,
  "id": "cmpl-4rc2JiO0FPvQvRUxcvckLtCQqSG8K",
  "model": "code-davinci:002",
  "object": "text_completion"
}
0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, x, y = [int(x) for x in input().split()]\n    number = input()\n    result = int(number, 2)\n    #print(result)\n    rem = result % (10 ** x)\n    #print(rem)\n    if rem == 10 ** y:\n        print(0)\n    else:\n        #print(rem)\n        rem = 10 ** y - rem\n        #print(rem)\n        if rem % 2 == 0:\n            print(1)\n        else:\n            print(2)\n\nif __name__ == \"__main__\":\n    main()"
}
REASON stop
1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, x, y = map(int, input().split())\n    num = input()\n    if num[0] == '0':\n        print(1)\n    else:\n        for i in range(x, n):\n            if num[i] == '0':\n                print(1)\n                break\n        else:\n            print(0)\n\nif __name__ == '__main__':\n    main()"
}
REASON stop
