["\n\ndef main():\n    n, b, a = map(int, input().split())\n    s = list(map(int, input().split()))\n    ans = 0 \n    i = 0\n    while i < n:\n        if s[i] == 1:\n            if a < b:\n                a += 1\n            else:\n                b += 1\n        if a > 0:\n            a -= 1\n            ans += 1\n        elif b > 0:\n            b -= 1\n            ans += 1\n        else:\n            break\n        i += 1\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n, b, a = map(int, input().split())\n    s = list(map(int, input().split()))\n    ans = 0\n    i = 0\n    while i < n:\n        if s[i] == 1:\n            if a < b:\n                a += 1\n            else:\n                b += 1\n        if a > 0:\n            a -= 1\n            ans += 1\n        elif b > 0:\n            b -= 1\n            ans += 1\n        else:\n            break\n        i += 1\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n", "\nn, b, a = map(int, input().split())\ns = list(map(int, input().split()))\n\nmax_segments = 1\ncurrent_battery = b\ncurrent_accumulator = a\nfor i in range(n):\n    if current_accumulator >= 1 and s[i] == 1:\n        current_accumulator -= 1\n    elif current_battery >= 1 and s[i] == 0:\n        current_battery -= 1\n    else:\n        if current_battery < b:\n            current_battery += 1\n        elif current_accumulator < a:\n            current_accumulator += 1\n    max_segments += 1\n    if current_battery == 0 and current_accumulator == 0:\n        break\n\nprint(max_segments)\n", "\nn, b, a = map(int, input().split())\ns = list(map(int, input().split()))\n\nmax_segments = 0\ncurrent_battery = b\ncurrent_accumulator = a\nfor i in range(n):\n    if current_accumulator >= 1:\n        current_accumulator -= 1\n    else:\n        current_battery -= 1\n    if s[i] == 1:\n        if current_battery < b:\n            current_battery += 1\n        else:\n            current_accumulator += 1\n    max_segments += 1\n    if current_battery == 0 and current_accumulator == 0:\n        break\n\nprint(max_segments)\n", "\n\ndef main():\n    n, b, a = map(int, input().split())\n    s = list(map(int, input().split()))  # s[i] = 1:\u96fb\u6c60\u304c\u6e1b\u308b, s[i] = 0:\u96fb\u6c60\u304c\u6e1b\u3089\u306a\u3044\n    ans = 0\n    i = 0\n    while i < n:  # \u5168\u3066\u306e\u30b9\u30a4\u30c3\u30c1\u3092ON\u306b\u3059\u308b\n        if s[i] == 1:\n            if a < b:\n                a += 1\n            else:\n                b += 1\n        if a > 0:  # \u96fb\u6c60\u3092\u4f7f\u3046\n            a -= 1\n            ans += 1\n        elif b > 0:\n            b -= 1\n            ans += 1\n        else:\n            break\n        i += 1\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn, b, a = map(int, input().split())\ns = list(map(int, input().split()))\n\ndef solve(n, b, a, s):\n    max_segments = 0\n    current_battery = b\n    current_accumulator = a\n    for i in range(n):\n        if current_accumulator >= 1:\n            current_accumulator -= 1\n        else:\n            current_battery -= 1\n        if s[i] == 1 and current_battery < b:\n            current_battery += 1\n        elif s[i] == 1:\n            current_accumulator += 1\n        max_segments += 1\n        if current_battery == 0 and current_accumulator == 0:\n            break\n    return max_segments\n\nprint(solve(n, b, a, s))\n", "\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n", "# https://codeforces.com/problemset/problem/1095/B\n\n\n\ndef get_max_segments(n, b, a, s):\n    max_segments = 0\n    current_battery = b\n    current_accumulator = a\n    for i in range(n):\n        if current_accumulator >= 1:\n            current_accumulator -= 1\n        else:\n            current_battery -= 1\n        if s[i] == 1:\n            if current_battery < b:\n                current_battery += 1\n            else:\n                current_accumulator += 1\n        max_segments += 1\n        if current_battery == 0 and current_accumulator == 0:\n            break\n    return max_segments\n\n\ndef main():\n    n, b, a = map(int, input().split())\n    s = list(map(int, input().split()))\n    print(get_max_segments(n, b, a, s))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, b, a = map(int, input().split())\n    s = [int(x) for x in input().split()]\n    ans = 0\n    i = 0\n    while i < n:\n        if s[i] == 1:\n            if a < b:\n                a += 1\n            else:\n                b += 1\n        if a > 0:\n            a -= 1\n            ans += 1\n        elif b > 0:\n            b -= 1\n            ans += 1\n        else:\n            break\n        i += 1\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    if n == 1:\n        print('Hello World')\n    else:\n        a = int(input())\n        b = int(input())\n        print(a + b)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n, b, a = map(int, input().split())\n    s = list(map(int, input().split()))\n    ans = 0\n    i = 0\n        ans += 1\n    while i < n:\n        if s[i] == 1:\n            if a < b:\n                a += 1\n            else:\n                b += 1\n        if a > 0:\n            a -= 1\n        elif b > 0:\n            b -= 1\n        else:\n            break\n        i += 1\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n", "\n##n, b, a = map(int, input().split())\n##s = list(map(int, input().split()))\n##\n##max_segments = 0\n##current_battery = b\n##current_accumulator = a\n##for i in range(n):\n##    if current_accumulator >= 1:\n##        current_accumulator -= 1\n##    else:\n##        current_battery -= 1\n##    if s[i] == 1:\n##        if current_battery < b:\n##            current_battery += 1\n##        else:\n##            current_accumulator += 1\n##    max_segments += 1\n##    if current_battery == 0 and current_accumulator == 0:\n##        break\n##\n##print(max_segments)\n", "\ndef main():\n    n, b, a = map(int, input().split())\n    s = list(map(int, input().split()))\n    ans = 0\n    i = 0\n    while i < n:\n        if s[i] == 0:\n            if a < b:\n                a += 1\n            else:\n                b += 1\n        if a > 0:\n            a -= 1\n            ans += 1\n        elif b > 0:\n            b -= 1\n            ans += 1\n        else:\n            break\n        i += 1\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n", "\nn, b, a = map(int, input().split())\ns = list(map(int, input().split()))\n\nmax_segments = 0\ncurrent_battery = b\ncurrent_accumulator = a\nfor i in range(n):\n    if s[i] == 1:\n        if current_battery < b:\n            current_battery += 1\n        else:\n    else:\n        if current_accumulator >= 1:\n            current_accumulator -= 1\n        else:\n            current_battery -= 1\n            current_accumulator += 1\n    max_segments += 1\n    if current_battery == 0 and current_accumulator == 0:\n        break\n\nprint(max_segments)\n", "\nn, b, a = map(int, input().split())  # \u0412\u0432\u043e\u0434 n, b, a\ns = list(map(int, input().split()))  # \u0412\u0432\u043e\u0434 \u0441\u043f\u0438\u0441\u043a\u0430 s\nmax_segments = 0  # \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0441\u0435\u0433\u043c\u0435\u043d\u0442\u043e\u0432\ncurrent_battery = b  # \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0437\u0430\u0440\u044f\u0434\u043a\u0438 \u0431\u0430\u0442\u0430\u0440\u0435\u0438\ncurrent_accumulator = a  # \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0437\u0430\u0440\u044f\u0434\u0430 \u0430\u043a\u043a\u0443\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0430\nfor i in range(n):  # \u041f\u0440\u043e\u0445\u043e\u0434 \u043f\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438\n    if current_accumulator >= 1:  # \u0415\u0441\u043b\u0438 \u0437\u0430\u0440\u044f\u0434 \u0430\u043a\u043a\u0443\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0430 \u0431\u043e\u043b\u044c\u0448\u0435 1\n        current_accumulator -= 1  # \u0423\u043c\u0435\u043d\u044c\u0448\u0430\u0435\u043c \u0437\u0430\u0440\u044f\u0434 \u0430\u043a\u043a\u0443\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0430 \u043d\u0430 1\n    else:  # \u0418\u043d\u0430\u0447\u0435\n        current_battery -= 1  # \u0423\u043c\u0435\u043d\u044c\u0448\u0430\u0435\u043c \u0437\u0430\u0440\u044f\u0434 \u0431\u0430\u0442\u0430\u0440\u0435\u0438 \u043d\u0430 1\n    if s[i] == 1:  # \u0415\u0441\u043b\u0438 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u043f\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0443 i \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f 1\n        if current_battery < b:  # \u0415\u0441\u043b\u0438 \u0437\u0430\u0440\u044f\u0434 \u0431\u0430\u0442\u0430\u0440\u0435\u0438 \u043c\u0435\u043d\u044c\u0448\u0435 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e\n            current_battery += 1  # \u0423\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u043c \u0437\u0430\u0440\u044f\u0434 \u0431\u0430\u0442\u0430\u0440\u0435\u0438 \u043d\u0430 1\n        else:  # \u0418\u043d\u0430\u0447\u0435\n            current_accumulator += 1  # \u0423\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u043c \u0437\u0430\u0440\u044f\u0434 \u0430\u043a\u043a\u0443\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0430 \u043d\u0430 1\n    max_segments += 1  # \u0423\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0441\u0435\u0433\u043c\u0435\u043d\u0442\u043e\u0432 \u043d\u0430 1\n    if current_battery == 0 and current_accumulator == 0:  # \u0415\u0441\u043b\u0438 \u0437\u0430\u0440\u044f\u0434 \u0431\u0430\u0442\u0430\u0440\u0435\u0438 \u0438 \u0430\u043a\u043a\u0443\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0430 \u0440\u0430\u0432\u043d\u044b 0\n        break  # \u041f\u0440\u0435\u0440\u044b\u0432\u0430\u0435\u043c \u0446\u0438\u043a\u043b\nprint(max_segments)  # \u0412\u044b\u0432\u043e\u0434\u0438\u043c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0435\u0433\u043c\u0435\u043d\u0442\u043e\u0432\n"]