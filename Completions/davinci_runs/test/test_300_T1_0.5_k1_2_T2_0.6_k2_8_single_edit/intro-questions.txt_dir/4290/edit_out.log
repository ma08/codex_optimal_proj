2022-04-22 11:49:20.645836 num operations 1
2022-04-22 11:49:20.645854 size on input set 1
2022-04-22 11:49:20.646012 using api key kouti
2022-04-22 11:49:29.015174 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "N, M = map(int, input().split())\nprint(N * M)\n"
    },
    {
      "index": 1,
      "text": "\nN, M = map(int, input().split())\n\nprint(N * M)\n"
    },
    {
      "index": 2,
      "text": "\n\nN, M = map(int, input().split())\n\n\n\n\n\nprint(N * M)\n"
    },
    {
      "index": 3,
      "text": "N, M = map(int, input().split())\n\nprint(N * M)\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\nimport math\nargv = sys.argv\nprint(int(argv[1]) + int(argv[2]))\n"
    },
    {
      "index": 5,
      "text": "\nN, M = map(int, input().split())\n\nprint(N * (M - 1) + 1)\n"
    },
    {
      "index": 6,
      "text": "\n\nN, M = map(int, input().split())\nif 1 <= N <= 1000 and 1 <= M <= 1000:\n    print(N * M)\n"
    },
    {
      "index": 7,
      "text": "\n# coding: utf-8\n\nN, M = map(int, input().split())\n\nif N == 1 and M == 1:\n    print(1)\nelif N == 1 and M >= 2:\n    print(M - 2)\nelif N >= 2 and M == 1:\n    print(N - 2)\nelse:\n    print((N - 2) * (M - 2))\n"
    }
  ],
  "created": 1650628160,
  "object": "edit"
}
2022-04-22 11:49:29.015505 fix syntax errors 8 ['N, M = map(int, input().split())\nprint(N * M)\n', '\nN, M = map(int, input().split())\n\nprint(N * M)\n', '\n\nN, M = map(int, input().split())\n\n\n\n\n\nprint(N * M)\n', 'N, M = map(int, input().split())\n\nprint(N * M)\n', '\nimport sys\nimport math\nargv = sys.argv\nprint(int(argv[1]) + int(argv[2]))\n', '\nN, M = map(int, input().split())\n\nprint(N * (M - 1) + 1)\n', '\n\nN, M = map(int, input().split())\nif 1 <= N <= 1000 and 1 <= M <= 1000:\n    print(N * M)\n', '\n# coding: utf-8\n\nN, M = map(int, input().split())\n\nif N == 1 and M == 1:\n    print(1)\nelif N == 1 and M >= 2:\n    print(M - 2)\nelif N >= 2 and M == 1:\n    print(N - 2)\nelse:\n    print((N - 2) * (M - 2))\n']
2022-04-22 11:49:29.015539 size on output set 8
2022-04-22 11:49:29.015550 num operations 1
2022-04-22 11:49:29.015556 size on input set 1
2022-04-22 11:49:29.015712 using api key kouti
2022-04-22 11:49:37.917604 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, M = [int(x) for x in input().split()]\nprint(N*M)\n"
    },
    {
      "index": 1,
      "text": "\n\ndef sum_even_ways(N, M):\n    return N * M\n\n\nN, M = [int(x) for x in input().split(' ')]\nprint(sum_even_ways(N, M))\n"
    },
    {
      "index": 2,
      "text": "\n\ndef sum_even_ways(N, M, A):\n    return N*M*A\n\nN, M = [int(x) for x in input().split()]\nA = [int(x) for x in input().split()]\nprint(sum_even_ways(N, M, A))\n"
    },
    {
      "index": 3,
      "text": "\ndef sum_even_ways(N, M):\n    return N*M\n\nN, M = [int(x) for x in input().split()]\nprint(sum_even_ways(N, M))\n"
    },
    {
      "index": 4,
      "text": "\n"
    },
    {
      "index": 5,
      "text": "\n\ndef sum_even_ways(n, m):\n    return n * m\n\nn, m = [int(x) for x in input().split()]\nprint(sum_even_ways(n, m))\n"
    },
    {
      "index": 6,
      "text": "\n\ndef sum_even_rows(N, M):\n    return N * M\n\nN, M = [int(x) for x in input().split()]\nprint(sum_even_ways(N, M))\n"
    },
    {
      "index": 7,
      "text": "\ndef sum_even_ways(N, M):\n    return N*M\n\nN, M = [int(x) for x in input().split()]\nprint(sum_even_ways(N, M))\n"
    }
  ],
  "created": 1650628169,
  "object": "edit"
}
2022-04-22 11:49:37.917891 fix syntax errors 8 ['\nN, M = [int(x) for x in input().split()]\nprint(N*M)\n', "\n\ndef sum_even_ways(N, M):\n    return N * M\n\n\nN, M = [int(x) for x in input().split(' ')]\nprint(sum_even_ways(N, M))\n", '\n\ndef sum_even_ways(N, M, A):\n    return N*M*A\n\nN, M = [int(x) for x in input().split()]\nA = [int(x) for x in input().split()]\nprint(sum_even_ways(N, M, A))\n', '\ndef sum_even_ways(N, M):\n    return N*M\n\nN, M = [int(x) for x in input().split()]\nprint(sum_even_ways(N, M))\n', '\n', '\n\ndef sum_even_ways(n, m):\n    return n * m\n\nn, m = [int(x) for x in input().split()]\nprint(sum_even_ways(n, m))\n', '\n\ndef sum_even_rows(N, M):\n    return N * M\n\nN, M = [int(x) for x in input().split()]\nprint(sum_even_ways(N, M))\n', '\ndef sum_even_ways(N, M):\n    return N*M\n\nN, M = [int(x) for x in input().split()]\nprint(sum_even_ways(N, M))\n']
2022-04-22 11:49:37.917923 size on output set 7
