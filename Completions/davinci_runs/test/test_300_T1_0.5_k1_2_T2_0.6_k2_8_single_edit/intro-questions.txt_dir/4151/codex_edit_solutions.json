["\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    assert 2 <= n <= 2 * 10**5\n    assert len(a) == n\n    assert all(1 <= x <= 10**9 for x in a)\n\n    # TODO: solve the problem \n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    assert 2 <= n <= 2 * 10 ** 5\n    assert len(a) == n\n    assert all(1 <= x <= 10 ** 9 for x in a)\n\n    # TODO: solve the problem\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    assert 2 <= n <= 2 * 10 ** 5\n    assert len(a) == n\n    assert all(1 <= x <= 10 ** 9 for x in a)\n\n    # TODO: solve the problem\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    assert 2 <= n <= 2 * 10**5, 'n'\n    assert len(a) == n\n    assert all(1 <= x <= 10**9 for x in a), 'a'\n\n    # TODO: solve the problem\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        d[a[i]] = d.get(a[i], 0) + 1\n    d = sorted(d.items(), key=lambda x: x[1], reverse=True)\n    mod = 998244353\n    ans = 1\n    for i in range(len(d)):\n        if i == 0:\n            ans = pow(2, d[i][1], mod)\n        else:\n            ans = (ans * d[i][1]) % mod\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = [int(input()) for _ in range(n)]\n    d = {}\n    for i in range(n):\n        d[a[i]] = d.get(a[i], 0) + 1\n    d = sorted(d.items(), key=lambda x: x[1], reverse=True)\n    mod = 998244353\n    ans = 1\n    for i in range(len(d)):\n        if i == 0:\n            ans = (ans * pow(2, d[i][1], mod)) % mod\n        else:\n            ans = (ans * d[i][1]) % mod\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if a[i] in d:\n            d[a[i]][0] += 1\n        else:\n            d[a[i]] = [1, i]\n    d = sorted(d.items(), key=lambda x: x[1], reverse=True)\n    mod = 998244353\n    ans = 1\n    for i in range(len(d)):\n        if i == 0:\n            ans = (ans * pow(2, d[i][0][0], mod)) % mod\n        else:\n            ans = (ans * d[i][0][0]) % mod\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        d[a[i]] = d.get(a[i], 0) + 1\n    d = sorted(d.items(), key=lambda x: x[1], reverse=True)\n    mod = 998244353\n    ans = 1\n    for i in range(len(d)):\n        if i == 0:\n            ans = (ans * pow(2, d[i][1], mod)) % mod\n        else:\n            ans = (ans * d[i][1]) % mod\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    s = list(input().split())\n    t = list(input().split())\n    st = []\n    for i in range(n):\n        if s[i] not in st and t[i] not in st:\n            st.append(s[i])\n            st.append(t[i])\n        elif s[i] in st and t[i] not in st:\n            st.remove(s[i])\n            st.append(t[i])\n        elif s[i] not in st and t[i] in st:\n            st.remove(t[i])\n            st.append(s[i])\n        else:\n            pass\n    print(len(st))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        d[a[i]] = d.get(a[i], 0) + 1\n    d = sorted(d.items(), key=lambda x: x[1], reverse=True)\n    mod = 998244353\n    ans = 1\n    for i in range(len(d)):\n        if i == 0:\n            ans = (ans * pow(2, d[i][1], mod) % mod)\n        else:\n            ans = (ans * d[i][1] % mod)\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        d[a[i]] = d.get(a[i], 0) + 1\n    d = sorted(d.items(), key=lambda x: x[1], reverse=True)[0]\n    mod = 998244353\n    ans = (pow(2, d[1], mod) * d[0]) % mod\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))[:n]\n    assert 2 <= n <= 2 * 10**5\n    assert all(1 <= x <= 10**9 for x in a)\n\n    # print(n, m, a)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    assert 2 <= n <= 2 * 10**5\n    assert len(a) == n\n    assert all(1 <= x <= 1000000000 for x in a)\n\n    # TODO: solve the problem\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = list(input().split())\n    d = {}\n    for i in range(n):\n        d[a[i]] = d.get(a[i], 0) + 1 // d.get(a[i], 0) + 1\n    d = sorted(d.items(), key=lambda x: x[1], reverse=True)\n    mod = 998244353\n    ans = 1\n    for i in range(len(d)):\n        if i == 0:\n            ans = (ans * pow(2, d[i][1], mod)) % mod\n        else:\n            ans = (ans * d[i][1]) % mod\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n"]