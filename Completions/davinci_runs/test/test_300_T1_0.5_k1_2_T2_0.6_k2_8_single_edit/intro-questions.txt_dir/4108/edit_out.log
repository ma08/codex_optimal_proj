2022-04-22 10:23:46.643486 num operations 1
2022-04-22 10:23:46.643506 size on input set 1
2022-04-22 10:23:46.643649 using api key sunu
2022-04-22 10:24:01.311033 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n\nfrom __future__ import print_function\nimport sys, os\n\ndef read_input(filename):\n    with open(filename, 'r') as f:\n        return f.read().rstrip()\n\ndef write_output(filename, data):\n    with open(filename, 'w') as f:\n        f.write(str(data))\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef can_eq(s, t):\n    if len(s) != len(t):\n        return False\n    s = list(s)\n    t = list(t)\n    s.sort()\n    t.sort()\n    return s == t\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 2,
      "text": "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef can_eq(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\n\ndef can_eq(s, t):\n    if len(s) != len(t):\n        return False\n    for c in s:\n        if c not in t:\n            return False\n        t = t.replace(c, '', 1)\n    return True\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 4,
      "text": "# -*- coding: utf-8 -*-\nimport math\nimport random\n\nimport collections\nimport bisect\nimport heapq\nimport time\ninf = 10**9\neps = 1.0 / 10**10\nmod = 10**9+7\ndd = [(-1, 0), (0, 1), (1, 0), (0, -1)]\nddn = [(-1, 0), (-1, 1), (0, 1), (1, 1), (1, 0), (1, -1), (0, -1), (-1, -1)]\nimport sys\n\ndef can_eq(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 5,
      "text": "import sys\n\ndef can_eq(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\ndef can_eq(s, t):\n    if len(s) != len(t):\n\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 7,
      "text": "import sys\ndef can_eq(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1650623026,
  "object": "edit"
}
2022-04-22 10:24:01.311438 fix syntax errors 8 ["#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n\nfrom __future__ import print_function\nimport sys, os\n\ndef read_input(filename):\n    with open(filename, 'r') as f:\n        return f.read().rstrip()\n\ndef write_output(filename, data):\n    with open(filename, 'w') as f:\n        f.write(str(data))\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "\nimport sys\n\ndef can_eq(s, t):\n    if len(s) != len(t):\n        return False\n    s = list(s)\n    t = list(t)\n    s.sort()\n    t.sort()\n    return s == t\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef can_eq(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "\n\nimport sys\n\ndef can_eq(s, t):\n    if len(s) != len(t):\n        return False\n    for c in s:\n        if c not in t:\n            return False\n        t = t.replace(c, '', 1)\n    return True\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "# -*- coding: utf-8 -*-\nimport math\nimport random\n\nimport collections\nimport bisect\nimport heapq\nimport time\ninf = 10**9\neps = 1.0 / 10**10\nmod = 10**9+7\ndd = [(-1, 0), (0, 1), (1, 0), (0, -1)]\nddn = [(-1, 0), (-1, 1), (0, 1), (1, 1), (1, 0), (1, -1), (0, -1), (-1, -1)]\nimport sys\n\ndef can_eq(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "import sys\n\ndef can_eq(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "\n\nimport sys\n\ndef can_eq(s, t):\n    if len(s) != len(t):\n\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "import sys\ndef can_eq(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-22 10:24:01.311496 size on output set 8
2022-04-22 10:24:01.311509 num operations 1
2022-04-22 10:24:01.311516 size on input set 1
2022-04-22 10:24:01.311658 using api key derek
2022-04-22 10:24:10.064080 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# -----Answer-----\n\ns = str(input())\nt = str(input())\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\n# -----Answer-----\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 2,
      "text": "\n# -----Answer-----\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 3,
      "text": "\n\n# --Answer--\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 4,
      "text": "\n\n# -----Answer-----\n\ns = input().split()\nt = input().split()\n\nif s == t:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 5,
      "text": "\n# -----Answer-----\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 6,
      "text": "\n# -----Answer-----\n\ns = input() # \u6587\u5b57\u5217s\nt = input() # \u6587\u5b57\u5217t\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\ns_sorted = sorted(s) # \u6587\u5b57\u5217s\u3092\u30bd\u30fc\u30c8\nt_sorted = sorted(t) # \u6587\u5b57\u5217t\u3092\u30bd\u30fc\u30c8\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 7,
      "text": "\n# -----Answer-----\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1650623041,
  "object": "edit"
}
2022-04-22 10:24:10.064494 fix syntax errors 8 ["\n\n# -----Answer-----\n\ns = str(input())\nt = str(input())\n\n# 文字列をソート\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n", "\n# -----Answer-----\n\ns = input()\nt = input()\n\n# 文字列をソート\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n", "\n# -----Answer-----\n\ns = input()\nt = input()\n\n# 文字列をソート\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n", "\n\n# --Answer--\n\ns = input()\nt = input()\n\n# 文字列をソート\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n", "\n\n# -----Answer-----\n\ns = input().split()\nt = input().split()\n\nif s == t:\n    print('Yes')\nelse:\n    print('No')\n", "\n# -----Answer-----\n\ns = input()\nt = input()\n\n# 文字列をソート\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n", "\n# -----Answer-----\n\ns = input() # 文字列s\nt = input() # 文字列t\n\n# 文字列をソート\ns_sorted = sorted(s) # 文字列sをソート\nt_sorted = sorted(t) # 文字列tをソート\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n", "\n# -----Answer-----\n\ns = input()\nt = input()\n\n# 文字列をソート\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-22 10:24:10.064548 size on output set 5
