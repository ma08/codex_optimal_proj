["\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[1], x[0]))\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, m):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[1], x[0]), reverse=True)\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]\n\n    for i in range(n):\n        for j in range(m):\n            dp[i+1][j] = dp[i][j]\n\n    for a, b, c, d in reversed(abcd):\n        for j in range(c):\n            dp[b][j] = max(dp[b][j], dp[a][j+c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for i in range(q)]\n    abcd.sort(key=lambda x: (x[1], -x[0]))\n    dp = [[0 for j in range(m)] for i in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(i, m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, m):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    N, M, Q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(Q)]\n    abcd.sort(key=lambda x: (x[1], -x[0]))\n    dp = [[0 for _ in range(M)] for _ in range(N+1)]\n\n    for i in range(1, N+1):\n        for j in range(M):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, M):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[N]))\n\n\nif __name__ == '__main__':\n    main()\n", "import queue\n\ndef main():\n    q = queue.Queue()\n    q.put(0)\n    q.put(1)\n    q.put(2)\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, m):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]  # abcd = [[a,b,c,d],...,[a,b,c,d]]\n    abcd.sort(key=lambda x: (x[1], x[0]))  # [(a,b,c,d),(a,b,c,d),...,(a,b,c,d)]\n    # a < b < c < d\n    # b\u3067sort\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, m):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n"]