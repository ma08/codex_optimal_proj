2022-04-22 10:52:41.963321 num operations 1
2022-04-22 10:52:41.963341 size on input set 1
2022-04-22 10:52:41.963515 using api key kouti
2022-04-22 10:52:53.186613 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    N, M = [int(x) for x in input().split()]\n    price_list = []\n    for i in range(N):\n        price_list.append([int(x) for x in input().split()])\n    price_list.sort(reverse=True)\n    total = 0\n    while M > 0:\n        if price_list[0][1] >= M:\n            total += price_list[0][0] * M\n            M = 0\n        else:\n            total += price_list[0][0] * price_list[0][1]\n            M -= price_list[0][1]\n            price_list.pop(0)\n    print(total)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    N, M = [int(x) for x in input().split()]\n    price_list = []\n    for i in range(N):\n        price_list.append([int(x) for x in input().split()])\n    price_list.sort()\n    total = 0\n    while M > 0:\n        if price_list[0][1] >= M:\n            total += price_list[0][0] * M\n            M = 0\n        else:\n            total += price_list[0][0] * price_list[0][1]\n            M -= price_list[0][1]\n            price_list.pop(0)\n    print(total)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\n\ndef main():\n    N, M = [int(x) for x in sys.stdin.readline().split()]\n    price_list = []\n    for i in range(N):\n        price_list.append([int(x) for x in sys.stdin.readline().split()])\n    price_list.sort()\n    total = 0\n    while M > 0:\n        if price_list[0][1] >= M:\n            total += price_list[0][0] * M\n            M = 0\n        else:\n            total += price_list[0][0] * price_list[0][1]\n            M -= price_list[0][1]\n            price_list.pop(0)\n    print(total)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n, m = [int(x) for x in input().split()]\n    price_list = [[int(x) for x in input().split()] for i in range(n)]\n    price_list.sort(key=lambda x: x[0])\n    total = 0\n    while m > 0:\n        if price_list[0][1] >= m:\n            total += price_list[0][0] * m\n            m = 0\n        else:\n            total += price_list[0][0] * price_list[0][1]\n            m -= price_list[0][1]\n            price_list.pop(0)\n    print(total)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main(): \n    N, M = [int(x) for x in input().split()]\n    price_list = []\n    for i in range(N):\n        price_list.append([int(x) for x in input().split()])\n    price_list.sort()\n    total = 0\n    while M > 0:\n        if price_list[0][1] >= M:\n            total += price_list[0][0] * M\n            M = 0\n        else:\n            total += price_list[0][0] * price_list[0][1]\n            M -= price_list[0][1]\n            price_list.pop(0)\n    print(total)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    N, M = [int(x) for x in input().split()]\n    price_list = []\n    for i in range(N):\n        price_list.append([int(x) for x in input().split()])\n    price_list.sort()\n    total = 0\n    while M > 0:\n        if price_list[0][1] <= M:\n            total += price_list[0][0] * price_list[0][1]\n            M -= price_list[0][1]\n            price_list.pop(0)\n        else:\n            total += price_list[0][0] * M\n            M = 0\n    print(total)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\ndef main():\n    N, M = [int(x) for x in input().split()]\n    price_list = []\n    for i in range(N):\n        price_list.append([int(x) for x in input().split()])\n    price_list.sort()\n    total = 0\n    while M > 0:\n        if price_list[0][1] >= M:\n            total += price_list[0][0] * M\n            M = 0\n        else:\n            total += price_list[0][0] * price_list[0][1]\n            M -= price_list[0][1]\n            price_list.pop(0)\n    print(total)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    N, M = [int(x) for x in input().split()]\n    price_list = []\n    for i in range(N):\n        price_list.append([int(x) for x in input().split()])\n    price_list.sort(key=lambda x: x[0])\n    total = 0\n    while M > 0:\n        if price_list[0][1] >= M:\n            total += price_list[0][0] * M\n            M = 0\n        else:\n            total += price_list[0][0] * price_list[0][1]\n            M -= price_list[0][1]\n            price_list.pop(0)\n    print(total)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650624762,
  "object": "edit"
}
2022-04-22 10:52:53.186948 fix syntax errors 8 ["\ndef main():\n    N, M = [int(x) for x in input().split()]\n    price_list = []\n    for i in range(N):\n        price_list.append([int(x) for x in input().split()])\n    price_list.sort(reverse=True)\n    total = 0\n    while M > 0:\n        if price_list[0][1] >= M:\n            total += price_list[0][0] * M\n            M = 0\n        else:\n            total += price_list[0][0] * price_list[0][1]\n            M -= price_list[0][1]\n            price_list.pop(0)\n    print(total)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    N, M = [int(x) for x in input().split()]\n    price_list = []\n    for i in range(N):\n        price_list.append([int(x) for x in input().split()])\n    price_list.sort()\n    total = 0\n    while M > 0:\n        if price_list[0][1] >= M:\n            total += price_list[0][0] * M\n            M = 0\n        else:\n            total += price_list[0][0] * price_list[0][1]\n            M -= price_list[0][1]\n            price_list.pop(0)\n    print(total)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\n\ndef main():\n    N, M = [int(x) for x in sys.stdin.readline().split()]\n    price_list = []\n    for i in range(N):\n        price_list.append([int(x) for x in sys.stdin.readline().split()])\n    price_list.sort()\n    total = 0\n    while M > 0:\n        if price_list[0][1] >= M:\n            total += price_list[0][0] * M\n            M = 0\n        else:\n            total += price_list[0][0] * price_list[0][1]\n            M -= price_list[0][1]\n            price_list.pop(0)\n    print(total)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m = [int(x) for x in input().split()]\n    price_list = [[int(x) for x in input().split()] for i in range(n)]\n    price_list.sort(key=lambda x: x[0])\n    total = 0\n    while m > 0:\n        if price_list[0][1] >= m:\n            total += price_list[0][0] * m\n            m = 0\n        else:\n            total += price_list[0][0] * price_list[0][1]\n            m -= price_list[0][1]\n            price_list.pop(0)\n    print(total)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main(): \n    N, M = [int(x) for x in input().split()]\n    price_list = []\n    for i in range(N):\n        price_list.append([int(x) for x in input().split()])\n    price_list.sort()\n    total = 0\n    while M > 0:\n        if price_list[0][1] >= M:\n            total += price_list[0][0] * M\n            M = 0\n        else:\n            total += price_list[0][0] * price_list[0][1]\n            M -= price_list[0][1]\n            price_list.pop(0)\n    print(total)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M = [int(x) for x in input().split()]\n    price_list = []\n    for i in range(N):\n        price_list.append([int(x) for x in input().split()])\n    price_list.sort()\n    total = 0\n    while M > 0:\n        if price_list[0][1] <= M:\n            total += price_list[0][0] * price_list[0][1]\n            M -= price_list[0][1]\n            price_list.pop(0)\n        else:\n            total += price_list[0][0] * M\n            M = 0\n    print(total)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    N, M = [int(x) for x in input().split()]\n    price_list = []\n    for i in range(N):\n        price_list.append([int(x) for x in input().split()])\n    price_list.sort()\n    total = 0\n    while M > 0:\n        if price_list[0][1] >= M:\n            total += price_list[0][0] * M\n            M = 0\n        else:\n            total += price_list[0][0] * price_list[0][1]\n            M -= price_list[0][1]\n            price_list.pop(0)\n    print(total)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M = [int(x) for x in input().split()]\n    price_list = []\n    for i in range(N):\n        price_list.append([int(x) for x in input().split()])\n    price_list.sort(key=lambda x: x[0])\n    total = 0\n    while M > 0:\n        if price_list[0][1] >= M:\n            total += price_list[0][0] * M\n            M = 0\n        else:\n            total += price_list[0][0] * price_list[0][1]\n            M -= price_list[0][1]\n            price_list.pop(0)\n    print(total)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-22 10:52:53.187085 size on output set 7
2022-04-22 10:52:53.187099 num operations 1
2022-04-22 10:52:53.187106 size on input set 1
2022-04-22 10:52:53.187251 using api key derek
2022-04-22 10:53:03.412758 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m = map(int, input().split())\n\ncost = []\nfor _ in range(n):\n    a, b = map(int, input().split())\n    cost.append((a, b))\n\ncost.sort()\n\nprice = 0\nfor c in cost:\n    if m - c[1] > 0:\n        price += c[0] * c[1]\n        m -= c[1]\n    else:\n        price += c[0] * m\n        break\n\nprint(price)\n"
    },
    {
      "index": 1,
      "text": "n, m = map(int, input().split())\n\ncost = []\nfor _ in range(n):\n  a, b = map(int, input().split())\n  cost.append((a, b))\n\ncost.sort()\n\nprice = 0\nfor c in cost:\n  if m - c[1] > 0:\n    price += c[0] * c[1]\n    m -= c[1]\n  else:\n    price += c[0] * m\n    break\n\nprint(price)\n"
    },
    {
      "index": 2,
      "text": "\nn, m = map(int, input().split())\n\ncost = []\nfor _ in range(n):\n  a, b = map(int, input().split())\n  cost.append((a, b))\n\ncost.sort()\n\nprice = 0\nfor c in cost:\n  if m - c[1] > 0:\n    price += c[0] * c[1]\n    m -= c[1]\n  else:\n    price += c[0] * m\n    break\n\nprint(price)\n"
    },
    {
      "index": 3,
      "text": "n, m = map(int, input().split())\n\ncost = []\nfor _ in range(n):\n  a, b = map(int, input().split())\n  cost.append((a, b))\n\ncost.sort()\n\nprice = 0\nfor c in cost:\n  if m - c[1] > 0:\n    price += c[0] * c[1]\n    m -= c[1]\n  else:\n    price += c[0] * m\n    break\n\nprint(price)\n"
    },
    {
      "index": 4,
      "text": "# https://atcoder.jp/contests/abc137/submissions/6620557\n\nn, m = map(int, input().split())\n\ncost = []\nfor _ in range(n):\n    a, b = map(int, input().split())\n    cost.append((a, b))\n\ncost.sort()\n\nprice = 0\nfor c in cost:\n    if m - c[1] > 0:\n        price += c[0] * c[1]\n        m -= c[1]\n    else:\n        price += c[0] * m\n        break\n\nprint(price)\n"
    },
    {
      "index": 5,
      "text": "\nn, m = map(int, input().split())\n\ncost = []\nfor _ in range(n):\n  a, b = map(int, input().split())\n  cost.append((a, b))\n\ncost.sort()\n\nprice = 0\nfor c in cost:\n  if m - c[1] > 0:\n    price += c[0] * c[1]\n    m -= c[1]\n  else:\n    price += c[0] * m\n    break\n\nprint(price)\n"
    },
    {
      "index": 6,
      "text": "\nn, m = map(int, input().split())\n\ncost = []\nfor _ in range(n):\n  a, b = map(int, input().split())\n  cost.append((a, b))\n\ncost.sort()\n\nprice = 0\nfor c in cost:\n  if m - c[1] > 0:\n    price += c[0] * c[1]\n    m -= c[1]\n  else:\n    price += c[0] * m\n    break\n\nprint(price)\n"
    },
    {
      "index": 7,
      "text": "'''\n\nn, m = map(int, input().split())\n\ncost = []\nfor _ in range(n):\n  a, b = map(int, input().split())\n  cost.append((a, b))\n\ncost.sort()\n\nprice = 0\nfor c in cost:\n  if m - c[1] > 0:\n    price += c[0] * c[1]\n    m -= c[1]\n  else:\n    price += c[0] * m\n    break\n\nprint(price)\n'''\n\nn = int(input())\n\nx = list(map(int, input().split()))\n\nfor i in range(1, n):\n  x[i] = x[i - 1] + x[i]\n\nprint(x)\n"
    }
  ],
  "created": 1650624773,
  "object": "edit"
}
2022-04-22 10:53:03.413070 fix syntax errors 8 ['\nn, m = map(int, input().split())\n\ncost = []\nfor _ in range(n):\n    a, b = map(int, input().split())\n    cost.append((a, b))\n\ncost.sort()\n\nprice = 0\nfor c in cost:\n    if m - c[1] > 0:\n        price += c[0] * c[1]\n        m -= c[1]\n    else:\n        price += c[0] * m\n        break\n\nprint(price)\n', 'n, m = map(int, input().split())\n\ncost = []\nfor _ in range(n):\n  a, b = map(int, input().split())\n  cost.append((a, b))\n\ncost.sort()\n\nprice = 0\nfor c in cost:\n  if m - c[1] > 0:\n    price += c[0] * c[1]\n    m -= c[1]\n  else:\n    price += c[0] * m\n    break\n\nprint(price)\n', '\nn, m = map(int, input().split())\n\ncost = []\nfor _ in range(n):\n  a, b = map(int, input().split())\n  cost.append((a, b))\n\ncost.sort()\n\nprice = 0\nfor c in cost:\n  if m - c[1] > 0:\n    price += c[0] * c[1]\n    m -= c[1]\n  else:\n    price += c[0] * m\n    break\n\nprint(price)\n', 'n, m = map(int, input().split())\n\ncost = []\nfor _ in range(n):\n  a, b = map(int, input().split())\n  cost.append((a, b))\n\ncost.sort()\n\nprice = 0\nfor c in cost:\n  if m - c[1] > 0:\n    price += c[0] * c[1]\n    m -= c[1]\n  else:\n    price += c[0] * m\n    break\n\nprint(price)\n', '# https://atcoder.jp/contests/abc137/submissions/6620557\n\nn, m = map(int, input().split())\n\ncost = []\nfor _ in range(n):\n    a, b = map(int, input().split())\n    cost.append((a, b))\n\ncost.sort()\n\nprice = 0\nfor c in cost:\n    if m - c[1] > 0:\n        price += c[0] * c[1]\n        m -= c[1]\n    else:\n        price += c[0] * m\n        break\n\nprint(price)\n', '\nn, m = map(int, input().split())\n\ncost = []\nfor _ in range(n):\n  a, b = map(int, input().split())\n  cost.append((a, b))\n\ncost.sort()\n\nprice = 0\nfor c in cost:\n  if m - c[1] > 0:\n    price += c[0] * c[1]\n    m -= c[1]\n  else:\n    price += c[0] * m\n    break\n\nprint(price)\n', '\nn, m = map(int, input().split())\n\ncost = []\nfor _ in range(n):\n  a, b = map(int, input().split())\n  cost.append((a, b))\n\ncost.sort()\n\nprice = 0\nfor c in cost:\n  if m - c[1] > 0:\n    price += c[0] * c[1]\n    m -= c[1]\n  else:\n    price += c[0] * m\n    break\n\nprint(price)\n', "'''\n\nn, m = map(int, input().split())\n\ncost = []\nfor _ in range(n):\n  a, b = map(int, input().split())\n  cost.append((a, b))\n\ncost.sort()\n\nprice = 0\nfor c in cost:\n  if m - c[1] > 0:\n    price += c[0] * c[1]\n    m -= c[1]\n  else:\n    price += c[0] * m\n    break\n\nprint(price)\n'''\n\nn = int(input())\n\nx = list(map(int, input().split()))\n\nfor i in range(1, n):\n  x[i] = x[i - 1] + x[i]\n\nprint(x)\n"]
2022-04-22 10:53:03.413134 size on output set 5
