2022-04-22 11:34:34.535480 num operations 1
2022-04-22 11:34:34.535502 size on input set 1
2022-04-22 11:34:34.535665 using api key derek
2022-04-22 11:34:42.236775 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    x = input()\n    print(x)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    a, b = map(int, input().split())\n    print(a//b)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\nimport math\n\ndef main():\n    A, B = map(int, input().split())\n    print(A+B)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport math\n\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "import math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\nimport math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X, end=\"\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650627274,
  "object": "edit"
}
2022-04-22 11:34:42.237082 fix syntax errors 8 ["import math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    x = input()\n    print(x)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    a, b = map(int, input().split())\n    print(a//b)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport math\n\ndef main():\n    A, B = map(int, input().split())\n    print(A+B)\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", '\n\nimport math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X, end="")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-22 11:34:42.237116 size on output set 7
2022-04-22 11:34:42.237128 num operations 1
2022-04-22 11:34:42.237133 size on input set 1
2022-04-22 11:34:42.237273 using api key kouti
2022-04-22 11:35:00.671233 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 \ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 \ndef read_line(): \n    try: \n        line = input() \n        return line \n    except: \n        return None \n\ndef read_ints(): \n    return list(map(int, read_line().split(' '))) \n\ndef read_floats(): \n    return list(map(float, read_line().split(' '))) \n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\nfrom __future__ import print_function\n\n\ndef read_line():\n    return input()\n\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\n\ndef main():\n    T, X = read_ints()\n    print(T/X)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "import os\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    N, M = read_ints()\n    print(N / M)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "from sys import stdin\ninput = stdin.readline\nimport sys\nsys.setrecursionlimit(10**7)\nINF = 10**10\nMOD = 10**9 + 7\n\n\ndef read_ints(): return list(map(int, input().split()))\ndef read_strs(): return list(input().split())\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 \ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650627282,
  "object": "edit"
}
2022-04-22 11:35:00.671582 fix syntax errors 8 ["\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 \ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 \ndef read_line(): \n    try: \n        line = input() \n        return line \n    except: \n        return None \n\ndef read_ints(): \n    return list(map(int, read_line().split(' '))) \n\ndef read_floats(): \n    return list(map(float, read_line().split(' '))) \n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom __future__ import print_function\n\n\ndef read_line():\n    return input()\n\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\n\ndef main():\n    T, X = read_ints()\n    print(T/X)\n\n\nif __name__ == '__main__':\n    main()\n", "import os\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    N, M = read_ints()\n    print(N / M)\n\nif __name__ == '__main__':\n    main()\n", "from sys import stdin\ninput = stdin.readline\nimport sys\nsys.setrecursionlimit(10**7)\nINF = 10**10\nMOD = 10**9 + 7\n\n\ndef read_ints(): return list(map(int, input().split()))\ndef read_strs(): return list(input().split())\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 \ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-22 11:35:00.671778 size on output set 6
