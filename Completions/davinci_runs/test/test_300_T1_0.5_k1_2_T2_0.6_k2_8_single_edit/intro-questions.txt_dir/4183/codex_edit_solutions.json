["def gcd_f(a, b):\n\tif a % b == 0:\n\t\treturn b\n\treturn gcd_f(b, a % b)\n\nn = int(input())\nt = list(map(int, input().split()))\n\ngcd = t[0]\nfor i in range(1, n):\n    gcd = gcd_f(gcd, t[i])\n\nprint(gcd)\n", "\n#\n# n = int(input())\n# t = list(map(int, input().split()))\n#\n# gcd = t[0]\n# for i in range(1, n):\n#     gcd = gcd_f(gcd, t[i])\n#\n# print(gcd)\n", "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\n\ndef lcm(a, b):\n\n    return a * b // gcd(a, b)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]  # T[i] = i\u756a\u76ee\u306e\u6570\u5024\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, K = map(int, input().split())\n    A = [int(input()) for _ in range(N)]\n    ans = 1\n    for i in range(N):\n        if A[i] <= K:\n            ans = lcm(ans, A[i])\n    print(ans)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "def gcd_f(a, b):\n    if a == 0 or b == 0:\n        return 0\n    if a % b == 0:\n        return b\n    return gcd_f(b, a % b)\n\n\n\nn = int(input())\nt = list(map(int, input().split()))\n\ngcd = t[0]\nfor i in range(1, n):\n    gcd = gcd_f(gcd, t[i])\n\nprint(gcd)\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\n\ndef lcm(a, b):  # \u6700\u5c0f\u516c\u500d\u6570\n\n    return a * b // gcd(a, b)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef gcd(a, b):\n\twhile b:\n\t\ta, b = b, a % b\n\treturn a\n\ndef lcm(a, b):\n\treturn a * b // gcd(a, b)\n\ndef main():\n\tN = int(input())\n\tT = [int(input()) for _ in range(N)]\n\tans = 1\n\tfor t in T:\n\t\tans = lcm(ans, t)\n\tprint(ans)\n\nif __name__ == '__main__':\n\tmain()\n", "def gcd_f(a,b):\n    if b == 0:\n        return a\n    else:\n        return gcd_f(b, a%b)\n\nn = int(input())\nt = list(map(int, input().split()))\n\ngcd = t[0]\nfor i in range(1, n):\n    gcd = gcd_f(gcd, t[i])\n\nprint(gcd)\n", "n = int(input())\nt = list(map(int, input().split()))\n\ngcd = t[0]\nfor i in range(1, n):\n    gcd = gcd_f(gcd, t[i])\n\nprint(gcd)\n", "\nimport math\nN = int(input())\nA = list(map(int, input().split()))\nA.sort()\ngcd = A[0]\nfor i in A:\n    gcd = math.gcd(gcd, i)\nprint(gcd)\n", "def gcd_f(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd_f(b, a % b)\n\n\nn = int(input())\nt = list(map(int, input().split()))\n\ngcd = t[0]\nfor i in range(1, n):\n    gcd = gcd_f(gcd, t[i])\n\nprint(gcd)\n", "\n\nn = int(input())\nt = list(map(int, input().split()))\n\ngcd = t[0]\nfor i in range(1, n):\n    gcd = gcd(gcd, t[i])\n\nprint(gcd)\n", "# -*- coding:utf-8 -*-\nimport math\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\n\ndef gcd_list(A):\n    if len(A) == 1:\n        return A[0]\n    else:\n        return gcd(A[0], gcd_list(A[1:]))\n\n\ndef lcm_list(A):\n    if len(A) == 1:\n        return A[0]\n    else:\n        return lcm(A[0], lcm_list(A[1:]))\n\n\ndef gcd_list2(A):\n    ans = A[0]\n    for a in A[1:]:\n        ans = gcd(ans, a)\n    return a\n\n\ndef lcm_list2(A):\n    ans = A[0]\n    for a in A[1:]:\n        ans = lcm(ans, a)\n    return ans\n\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]