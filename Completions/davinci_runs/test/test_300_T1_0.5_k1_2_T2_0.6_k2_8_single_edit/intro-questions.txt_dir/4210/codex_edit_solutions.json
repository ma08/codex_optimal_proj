["# Solution 1\ndef is_valid(s):\n    try:\n        s = int(s)\n        return True\n    except:\n        return False\n\n\n\ndef check_valid(num):\n    num = str(num)\n    if len(num) < 2:\n        return False\n\n    for i in range(len(num) - 1):\n        if num[i] > num[i + 1]:\n            return False\n\n    return True\n\n\ndef solve(s):\n    if not is_valid(s):\n        return -1\n\n    s = int(s)\n    if check_valid(s):\n        return s\n\n    s = str(s)\n    res = -1\n    for i in range(len(s) - 1, -1, -1):\n        if s[i] < s[i - 1]:\n            s = s[:i - 1] + s[i - 1] + ''.join(sorted(s[i:]))\n            res = s\n            break\n\n    return res\n\n\nprint(solve(input()))\n\n\n# Solution 2\ndef is_valid(s):\n    try:\n        s = int(s)\n        return True\n    except:\n        return False\n\n\ndef check_valid(num):\n    num = str(num)\n    if len(num) < 2:\n        return False\n\n    for i in range(len(num) - 1):\n        if num[i] > num[i + 1]:\n            return False\n\n    return True\n\n\ndef solve(s):\n    if not is_valid(s):\n        return -1\n\n    s = int(s)\n    if check_valid(s):\n        return s\n\n    s = str(s)\n    res = -1\n    for i in range(len(s) - 1, -1, -1):\n        if s[i] < s[i - 1]:\n            s = s[:i - 1] + s[i - 1] + ''.join(sorted(s[i:]))\n            res = s\n            break\n\n    return res\n\n\nprint(solve(input()))\n\n\n# Solution 3\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nres = 0\nfor i in range(n):\n    for j in range(n):\n        if i != j:\n            num1 = str(a[i]) + str(a[j])\n            num1 = int(num1)\n            if num1 % k == 0:\n                res += 1\n\nprint(res)\n\n# Solution 4\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nres = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        num1 = str(a[i]) + str(a[j])\n        num1 = int(num1)\n        if num1 % k == 0:\n            res += 1\n\nprint(res)\n\n\n# Solution 5\nn = int(input())\n\nres = 1\nfor i in range(2, n + 1):\n    res *= i\n\nprint(res)\n", "\n\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n\n# def concat(x, y):\n#     return (x * 10**len(str(y))) + y\n\ndef count_divisible(x):\n    count = 0\n    for i in range(n):\n        if concat(x, a[i]) % k == 0:\n            count += 1\n    return count\n\ntotal = 0\nfor i in range(n):\n    total += count_divisible(a[i])\n\nprint(total)\n", "\n\n# Solution 1 \nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nres = 0\nfor i in range(n):\n    for j in range(n):\n        if i != j:\n            num1 = str(a[i]) + str(a[j])\n            num1 = int(num1)\n            if num1 % k == 0:\n                res += 1\n\nprint(res)\n\n# Solution 2 \nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nres = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        num1 = str(a[i]) + str(a[j])\n        num1 = int(num1)\n        if num1 % k == 0:\n            res += 1\n\nprint(res)\n", "#!/usr/bin/env python3\n\n\ndef main():\n\tn, k = map(int, input().split())\n\ta = list(map(int, input().split()))\n\n\tdef concat(x, y):\n\t    return (x * 10**len(str(y))) + y\n\n\tdef count_divisible(x):\n\t    count = 0\n\t    for i in range(n):\n\t        if concat(x, a[i]) % k == 0:\n\t            count += 1\n\t    return count\n\n\ttotal = 0\n\tfor i in range(n):\n\t    total += count_divisible(a[i])\n\n\tprint(total)\n\nif __name__ == '__main__':\n\tmain()\n", "\n# Solution 1\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nres = 0\nfor i in range(n):\n    for j in range(n):\n        if i != j:\n            num1 = str(a[i]) + str(a[j])\n            num1 = int(num1)\n            if num1 % k == 0:\n                res += 1\n\nprint(res)\n\n# Solution 2\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nres = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        num1 = str(a[i]) + str(a[j])\n        num1 = int(num1)\n        if num1 % k == 0:\n            res += 1\n\nprint(res)\n", "\n\n# Solution 1.1\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nres = 0\nfor i in range(n):\n    for j in range(n):\n        if i != j:\n            num1 = str(a[i]) + str(a[j])\n            num1 = int(num1)\n            if num1 % k == 0:\n                res += 1\n\nprint(res)\n\n# Solution 1.2\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nres = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        num1 = str(a[i]) + str(a[j])\n        num1 = int(num1)\n        if num1 % k == 0:\n            res += 1\n\nprint(res)\n", "\n# Solution 1\nn, k = map(int, input().strip().split())\na = list(map(int, input().strip().split()))\n\nres = 0\nfor i in range(n):\n    for j in range(n):\n        if i != j:\n            num1 = str(a[i]) + str(a[j])\n            num1 = int(num1)\n            if num1 % k == 0:\n                res += 1\n\nprint(res)\n\n# Solution 2\nn, k = map(int, input().strip().split())\na = list(map(int, input().strip().split()))\n\nres = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        num1 = str(a[i]) + str(a[j])\n        num1 = int(num1)\n        if num1 % k == 0:\n            res += 1\n\nprint(res)\n", "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\ndef concat(x, y):\n    return (x * 10**len(str(y))) + y\n\ndef count_divisible(x):\n    count = 0\n    for i in range(n):\n        if concat(x, a[i]) % k == 0:\n            count += 1\n    return count\n\ntotal = 0\nfor i in range(n):\n    total += count_divisible(a[i])\n\nprint(total)\n", "\n\n# Solution 1\nn, k = map(int, input().split())  # O(n)\na = list(map(int, input().split()))\n\nres = 0\nfor i in range(n):  # O(n)\n    for j in range(n):  # O(n)\n        if i != j:\n            num1 = str(a[i]) + str(a[j])  # O(n)\n            num1 = int(num1)  # O(n)\n            if num1 % k == 0:\n                res += 1\n\nprint(res)\n\n# Solution 2\nn, k = map(int, input().split())  # O(n)\na = list(map(int, input().split()))\n\nres = 0\nfor i in range(n):  # O(n)\n    for j in range(i + 1, n):  # O(n)\n        num1 = str(a[i]) + str(a[j])  # O(n)\n        num1 = int(num1)  # O(n)\n        if num1 % k == 0:\n            res += 1\n\nprint(res)\n", "\n\n\n# Solution 1\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nres = 0\nfor i in range(n):\n    for j in range(n):\n        if i != j:\n            num1 = str(a[i]) + str(a[j])\n            num1 = int(num1)\n            if num1 % k == 0:\n                res += 1\n\nprint(res)\n\n\n# Solution 2\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nres = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        num1 = str(a[i]) + str(a[j])\n        num1 = int(num1)\n        if num1 % k == 0:\n            res += 1\n\nprint(res)\n", "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\ndef concat(x, y):\n    return (x * 10**len(str(y))) + y \n\ndef count_divisible(x):\n    count = 0\n    for i in range(n):\n        if concat(x, a[i]) % k == 0:\n            count += 1\n    return count\n\ntotal = 0\nfor i in range(n):\n    total += count_divisible(a[i])\n\nprint(total)\n", "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n\ndef concat(x, y):\n    return (x * 10 ** len(str(y))) + y\n\n\ndef count_divisible(x):\n    count = 0\n    for i in range(n):\n        if concat(x, a[i]) % k == 0:\n            count += 1\n    return count\n\n\ntotal = 0\nfor i in range(n):\n    total += count_divisible(a[i])\n\nprint(total)\n", "\n\nn, k = map(int, input().split())\n\na = list(map(int, input().split()))\n\ndef concat(x, y):\n    return (x * 10**len(str(y))) + y\n\n\ndef count_divisible(x):\n    count = 0\n    for i in range(n):\n        if concat(x, a[i]) % k == 0:\n\n            count += 1\n    return count\n\n\ntotal = 0\nfor i in range(n):\n    total += count_divisible(a[i])\n\nprint(total)\n", "n, k = map(int, input().split())\na = list(map(int, input().split()))\n\ndef concat(x, y):\n    return (x * 10**len(str(y))) + y\n\ndef count_divisible(x):\n    count = 0\n    for i in range(n):\n        if concat(x, a[i]) % k == 0:\n            count += 1\n    return count\n\ntotal = 0\nfor i in range(n):\n    total += count_divisible(a[i])\n\nprint(total)\n"]