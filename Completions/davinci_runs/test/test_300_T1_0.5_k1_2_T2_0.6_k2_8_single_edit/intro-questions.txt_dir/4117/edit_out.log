2022-04-22 10:28:33.423339 num operations 1
2022-04-22 10:28:33.423360 size on input set 1
2022-04-22 10:28:33.423566 using api key kouti
2022-04-22 10:28:46.440195 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nf_inf = float('inf')\nmod = 10 ** 9 + 7\n\nN = int(input())\np = list(map(int, input().split()))\n\n\ndef resolve():\n    res = 0\n    for i in range(1, N):\n        if p[i - 1] < p[i]:\n            res += p[i] - p[i - 1]\n    print(res)\n\n\nif __name__ == '__main__':\n    resolve()\n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\n\nA = list(map(int, input().split()))\n\nL = []\nR = []\n\nfor i in range(N):\n    if i == 0:\n        L.append(0)\n    else:\n        L.append(L[i-1] + A[i-1])\n\nfor i in range(N-1, -1, -1):\n    if i == N - 1:\n        R.append(0)\n    else:\n        R.append(R[0] + A[i+1])\n\nR.reverse()\n\nans = float(\"inf\")\nfor i in range(N):\n    ans = min(ans, abs(L[i] - R[i]))\n\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 3,
      "text": "from itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\ncomb = combinations(L, 3)\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 4,
      "text": "import sys\ninput = sys.stdin.readline\n\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 5,
      "text": "\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\nprint(count)\n"
    },
    {
      "index": 6,
      "text": "\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 7,
      "text": "\n\nprint(min(list(map(int, input().split()))))\n"
    }
  ],
  "created": 1650623313,
  "object": "edit"
}
2022-04-22 10:28:46.440533 fix syntax errors 8 ["\nimport sys\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nf_inf = float('inf')\nmod = 10 ** 9 + 7\n\nN = int(input())\np = list(map(int, input().split()))\n\n\ndef resolve():\n    res = 0\n    for i in range(1, N):\n        if p[i - 1] < p[i]:\n            res += p[i] - p[i - 1]\n    print(res)\n\n\nif __name__ == '__main__':\n    resolve()\n", '\n\nN = int(input())\n\nA = list(map(int, input().split()))\n\nL = []\nR = []\n\nfor i in range(N):\n    if i == 0:\n        L.append(0)\n    else:\n        L.append(L[i-1] + A[i-1])\n\nfor i in range(N-1, -1, -1):\n    if i == N - 1:\n        R.append(0)\n    else:\n        R.append(R[0] + A[i+1])\n\nR.reverse()\n\nans = float("inf")\nfor i in range(N):\n    ans = min(ans, abs(L[i] - R[i]))\n\nprint(ans)\n', '\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n', 'from itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\ncomb = combinations(L, 3)\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n', 'import sys\ninput = sys.stdin.readline\n\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n', '\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\nprint(count)\n', '\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n', '\n\nprint(min(list(map(int, input().split()))))\n']
2022-04-22 10:28:46.440582 size on output set 7
2022-04-22 10:28:46.440595 num operations 1
2022-04-22 10:28:46.440601 size on input set 1
2022-04-22 10:28:46.440796 using api key jaanu
2022-04-22 10:28:57.327936 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom itertools import combinations\n\nif __name__ == '__main__':\n    n = int(input())\n    l = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 3,
      "text": "\n# fix this file\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 4,
      "text": "\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 5,
      "text": "\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 6,
      "text": "\n\nimport math\n\nn = int(input(\"\"))\n\nl = list(map(int, input(\"\").split()))\n\ncount = 0\n\nfor i in range(math.floor(n / 3)):\n    if l[i] + l[i + 1] > l[i + 2]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 7,
      "text": "from itertools import combinations\n\n\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650623326,
  "object": "edit"
}
2022-04-22 10:28:57.328235 fix syntax errors 8 ["\nfrom itertools import combinations\n\nif __name__ == '__main__':\n    n = int(input())\n    l = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n", '\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n', '\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n', '\n# fix this file\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n', '\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n', '\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n', '\n\nimport math\n\nn = int(input(""))\n\nl = list(map(int, input("").split()))\n\ncount = 0\n\nfor i in range(math.floor(n / 3)):\n    if l[i] + l[i + 1] > l[i + 2]:\n        count += 1\n\nprint(count)\n', 'from itertools import combinations\n\n\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n']
2022-04-22 10:28:57.328373 size on output set 5
