2022-04-22 11:05:30.794142 num operations 1
2022-04-22 11:05:30.794162 size on input set 1
2022-04-22 11:05:30.794316 using api key kouti
2022-04-22 11:05:40.685782 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = list(enumerate(a, 1))\n    a = sorted(a, key=lambda x: x[1])\n    a = [i[0] for i in a]\n    print(*a, sep='\\n')\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n\n\ndef main():\n    n = int(input())\n    # this is a generator\n    a = list(map(int, input().split()))\n    a = list(enumerate(a, 1))\n    a = sorted(a, key=lambda x: x[1])\n    a = [i[0] for i in a]  # list comprehension\n    print(*a, sep='\\n')\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = list(enumerate(a, 1))\n    a = sorted(a, key=lambda x: x[1])\n    a = [i[0] for i in a]\n    print(*a, sep='\\n')\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = list(enumerate(a, 1))\n    a = sorted(a, key=lambda x: x[1])\n    a = [i[0] for i in a]\n    print(*a, sep='\\n')\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, sys.stdin.readline().split()))\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            if a[i] > a[j]:\n                a[i], a[j] = a[j], a[i]\n    for i in a:\n        print(i, end=' ')\n\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = list(enumerate(a, 1))\n    a = sorted(a, key=lambda x: x[1])\n    a = [i[0] for i in a]\n    print(*a, sep='\\n')\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = list(enumerate(a, 1))\n    a = sorted(a, key=lambda x: x[1])\n    a = [i[0] for i in a]\n    print(*a, sep='\\n')\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(enumerate(a, 1))\n    b = sorted(b, key=lambda x: x[1])\n    b = [i[0] for i in b]\n    print(*b, sep='\\n')\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650625530,
  "object": "edit"
}
2022-04-22 11:05:40.686129 fix syntax errors 8 ["\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = list(enumerate(a, 1))\n    a = sorted(a, key=lambda x: x[1])\n    a = [i[0] for i in a]\n    print(*a, sep='\\n')\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n\n\ndef main():\n    n = int(input())\n    # this is a generator\n    a = list(map(int, input().split()))\n    a = list(enumerate(a, 1))\n    a = sorted(a, key=lambda x: x[1])\n    a = [i[0] for i in a]  # list comprehension\n    print(*a, sep='\\n')\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = list(enumerate(a, 1))\n    a = sorted(a, key=lambda x: x[1])\n    a = [i[0] for i in a]\n    print(*a, sep='\\n')\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = list(enumerate(a, 1))\n    a = sorted(a, key=lambda x: x[1])\n    a = [i[0] for i in a]\n    print(*a, sep='\\n')\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, sys.stdin.readline().split()))\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            if a[i] > a[j]:\n                a[i], a[j] = a[j], a[i]\n    for i in a:\n        print(i, end=' ')\n\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = list(enumerate(a, 1))\n    a = sorted(a, key=lambda x: x[1])\n    a = [i[0] for i in a]\n    print(*a, sep='\\n')\n\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = list(enumerate(a, 1))\n    a = sorted(a, key=lambda x: x[1])\n    a = [i[0] for i in a]\n    print(*a, sep='\\n')\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(enumerate(a, 1))\n    b = sorted(b, key=lambda x: x[1])\n    b = [i[0] for i in b]\n    print(*b, sep='\\n')\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-22 11:05:40.686172 size on output set 5
2022-04-22 11:05:40.686184 num operations 1
2022-04-22 11:05:40.686190 size on input set 1
2022-04-22 11:05:40.686374 using api key jaanu
2022-04-22 11:05:52.353786 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\nA = [int(i) for i in input().split()]\n\nfor i in range(N):\n    print(A.index(i+1)+1)\n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\nA = [int(i) for i in input().split()]\n\nfor i in range(N):\n    print(A.index(i+1)+1)\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\nN = int(sys.stdin.readline())\nA = [int(sys.stdin.readline()) for _ in range(N)]\nB = sorted(A)\nfor a in A:\n    print(B.index(a)+1)\n"
    },
    {
      "index": 3,
      "text": "\n\nN = int(input())\nA = [int(i) for i in input().split()]\n\nfor i in range(N):\n    print(A.index(i+1)+1)\n"
    },
    {
      "index": 4,
      "text": "\nN = int(input())\nA = [int(i) for i in input().split()]\n\nfor i in range(N):\n    print(A.index(i+1)+1, end=' ')\n"
    },
    {
      "index": 5,
      "text": "\n\nN = int(input())\nA = [int(i) for i in input().split()]\n\nfor i in range(N):\n\n    print(A.index(i+1)+1, end=' ')\n"
    },
    {
      "index": 6,
      "text": "\nN = int(input())\nA = [int(i) for i in input().split()]\n\nfor i in range(N):\n    print(A.index(i+1)+1, end=\" \")\n"
    },
    {
      "index": 7,
      "text": "\nfrom collections import namedtuple\nN, categories = int(input()), input().split()\nStudent = namedtuple('Student', categories)\nmarks = [int(Student._make(input().split()).MARKS) for _ in range(N)]\nprint((sum(marks) / len(marks)))\n"
    }
  ],
  "created": 1650625540,
  "object": "edit"
}
2022-04-22 11:05:52.354079 fix syntax errors 8 ['\n\nN = int(input())\nA = [int(i) for i in input().split()]\n\nfor i in range(N):\n    print(A.index(i+1)+1)\n', '\n\nN = int(input())\nA = [int(i) for i in input().split()]\n\nfor i in range(N):\n    print(A.index(i+1)+1)\n', '\nimport sys\nN = int(sys.stdin.readline())\nA = [int(sys.stdin.readline()) for _ in range(N)]\nB = sorted(A)\nfor a in A:\n    print(B.index(a)+1)\n', '\n\nN = int(input())\nA = [int(i) for i in input().split()]\n\nfor i in range(N):\n    print(A.index(i+1)+1)\n', "\nN = int(input())\nA = [int(i) for i in input().split()]\n\nfor i in range(N):\n    print(A.index(i+1)+1, end=' ')\n", "\n\nN = int(input())\nA = [int(i) for i in input().split()]\n\nfor i in range(N):\n\n    print(A.index(i+1)+1, end=' ')\n", '\nN = int(input())\nA = [int(i) for i in input().split()]\n\nfor i in range(N):\n    print(A.index(i+1)+1, end=" ")\n', "\nfrom collections import namedtuple\nN, categories = int(input()), input().split()\nStudent = namedtuple('Student', categories)\nmarks = [int(Student._make(input().split()).MARKS) for _ in range(N)]\nprint((sum(marks) / len(marks)))\n"]
2022-04-22 11:05:52.354112 size on output set 6
