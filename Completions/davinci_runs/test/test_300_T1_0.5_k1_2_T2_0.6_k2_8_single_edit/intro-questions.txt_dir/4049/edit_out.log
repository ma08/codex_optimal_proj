2022-04-22 09:53:39.610884 num operations 1
2022-04-22 09:53:39.610925 size on input set 1
2022-04-22 09:53:39.611105 using api key jaanu
2022-04-22 09:54:23.616006 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#\n# from sys import stdin\n# from collections import Counter\n# from itertools import combinations\n#\n# def min_max_wins(n, a, b):\n#     cnt_a = Counter(a)\n#     cnt_b = Counter(b)\n#     w_a = 0\n#     w_b = 0\n#     for k, v in cnt_a.items():\n#         if k == \"R\":\n#             w_a += min(v, cnt_b[\"S\"])\n#             w_b += min(v, cnt_b[\"P\"])\n#         elif k == \"S\":\n#             w_a += min(v, cnt_b[\"P\"])\n#             w_b += min(v, cnt_b[\"R\"])\n#         elif k == \"P\":\n#             w_a += min(v, cnt_b[\"R\"])\n#             w_b += min(v, cnt_b[\"S\"])\n#     return w_a, w_a + n - w_b\n#\n# def main():\n#     n = int(stdin.readline().strip())\n#     a = stdin.readline().strip().split(\" \")\n#     b = stdin.readline().strip().split(\" \")\n#     print(\" \".join(map(str, min_max_wins(n, a, b))))\n#\n# if __name__ == \"__main__\":\n#     main()\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\nfrom collections import Counter\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == \"R\":\n            w_a += min(v, cnt_b[\"S\"])\n            w_b += min(v, cnt_b[\"P\"])\n        elif k == \"S\":\n            w_a += min(v, cnt_b[\"P\"])\n            w_b += min(v, cnt_b[\"R\"])\n        elif k == \"P\":\n            w_a += min(v, cnt_b[\"R\"])\n            w_b += min(v, cnt_b[\"S\"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(\" \")\n    b = stdin.readline().strip().split(\" \")\n    print(\" \".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom sys import stdin\nfrom collections import Counter\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.iteritems():\n        if k == \"R\":\n            w_a += min(v, cnt_b[\"S\"])\n            w_b += min(v, cnt_b[\"P\"])\n        elif k == \"S\":\n            w_a += min(v, cnt_b[\"P\"])\n            w_b += min(v, cnt_b[\"R\"])\n        elif k == \"P\":\n            w_a += min(v, cnt_b[\"R\"])\n            w_b += min(v, cnt_b[\"S\"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip()\n    b = stdin.readline().strip()\n    print(\" \".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\nfrom sys import stdin, stdout\nfrom collections import Counter\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == \"R\":\n            w_a += min(v, cnt_b[\"S\"])\n            w_b += min(v, cnt_b[\"P\"])\n        elif k == \"S\":\n            w_a += min(v, cnt_b[\"P\"])\n            w_b += min(v, cnt_b[\"R\"])\n        elif k == \"P\":\n            w_a += min(v, cnt_b[\"R\"])\n            w_b += min(v, cnt_b[\"S\"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(\" \")\n    b = stdin.readline().strip().split(\" \")\n    stdout.write(\" \".join(map(str, min_max_wins(n, a, b))) + \"\\n\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nfrom sys import stdin\nfrom collections import Counter\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == \"R\":\n            w_a += min(v, cnt_b[\"S\"])\n            w_b += min(v, cnt_b[\"P\"])\n        elif k == \"S\":\n            w_a += min(v, cnt_b[\"P\"])\n            w_b += min(v, cnt_b[\"R\"])\n        elif k == \"P\":\n            w_a += min(v, cnt_b[\"R\"])\n            w_b += min(v, cnt_b[\"S\"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(\" \")\n    b = stdin.readline().strip().split(\" \")\n    print(\" \".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    a = stdin.readline()\n    b = stdin.readline()\n    print(a.count(\"1\"), b.count(\"1\"))\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(\" \")\n    b = stdin.readline().strip().split(\" \")\n    print(\" \".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "from sys import stdin\nfrom collections import Counter\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == \"R\":\n            w_a += min(v, cnt_b[\"S\"])\n            w_b += min(v, cnt_b[\"P\"])\n        elif k == \"S\":\n            w_a += min(v, cnt_b[\"P\"])\n            w_b += min(v, cnt_b[\"R\"])\n        elif k == \"P\":\n            w_a += min(v, cnt_b[\"R\"])\n            w_b += min(v, cnt_b[\"S\"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(\" \")\n    b = stdin.readline().strip().split(\" \")\n    print(\" \".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\nfrom sys import stdin\nfrom collections import Counter\n\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == \"R\":\n            w_a += min(v, cnt_b[\"S\"])\n            w_b += min(v, cnt_b[\"P\"])\n        elif k == \"S\":\n            w_a += min(v, cnt_b[\"P\"])\n            w_b += min(v, cnt_b[\"R\"])\n        elif k == \"P\":\n            w_a += min(v, cnt_b[\"R\"])\n            w_b += min(v, cnt_b[\"S\"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(\" \")\n    b = stdin.readline().strip().split(\" \")\n    print(\" \".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650621219,
  "object": "edit"
}
2022-04-22 09:54:23.616467 fix syntax errors 8 ['\n#\n# from sys import stdin\n# from collections import Counter\n# from itertools import combinations\n#\n# def min_max_wins(n, a, b):\n#     cnt_a = Counter(a)\n#     cnt_b = Counter(b)\n#     w_a = 0\n#     w_b = 0\n#     for k, v in cnt_a.items():\n#         if k == "R":\n#             w_a += min(v, cnt_b["S"])\n#             w_b += min(v, cnt_b["P"])\n#         elif k == "S":\n#             w_a += min(v, cnt_b["P"])\n#             w_b += min(v, cnt_b["R"])\n#         elif k == "P":\n#             w_a += min(v, cnt_b["R"])\n#             w_b += min(v, cnt_b["S"])\n#     return w_a, w_a + n - w_b\n#\n# def main():\n#     n = int(stdin.readline().strip())\n#     a = stdin.readline().strip().split(" ")\n#     b = stdin.readline().strip().split(" ")\n#     print(" ".join(map(str, min_max_wins(n, a, b))))\n#\n# if __name__ == "__main__":\n#     main()\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n', '\n\nfrom sys import stdin\nfrom collections import Counter\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == "R":\n            w_a += min(v, cnt_b["S"])\n            w_b += min(v, cnt_b["P"])\n        elif k == "S":\n            w_a += min(v, cnt_b["P"])\n            w_b += min(v, cnt_b["R"])\n        elif k == "P":\n            w_a += min(v, cnt_b["R"])\n            w_b += min(v, cnt_b["S"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(" ")\n    b = stdin.readline().strip().split(" ")\n    print(" ".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == "__main__":\n    main()\n', '\n\nfrom sys import stdin\nfrom collections import Counter\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.iteritems():\n        if k == "R":\n            w_a += min(v, cnt_b["S"])\n            w_b += min(v, cnt_b["P"])\n        elif k == "S":\n            w_a += min(v, cnt_b["P"])\n            w_b += min(v, cnt_b["R"])\n        elif k == "P":\n            w_a += min(v, cnt_b["R"])\n            w_b += min(v, cnt_b["S"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip()\n    b = stdin.readline().strip()\n    print(" ".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == "__main__":\n    main()\n', '\n\nfrom sys import stdin, stdout\nfrom collections import Counter\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == "R":\n            w_a += min(v, cnt_b["S"])\n            w_b += min(v, cnt_b["P"])\n        elif k == "S":\n            w_a += min(v, cnt_b["P"])\n            w_b += min(v, cnt_b["R"])\n        elif k == "P":\n            w_a += min(v, cnt_b["R"])\n            w_b += min(v, cnt_b["S"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(" ")\n    b = stdin.readline().strip().split(" ")\n    stdout.write(" ".join(map(str, min_max_wins(n, a, b))) + "\\n")\n\nif __name__ == "__main__":\n    main()\n', '\nfrom sys import stdin\nfrom collections import Counter\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == "R":\n            w_a += min(v, cnt_b["S"])\n            w_b += min(v, cnt_b["P"])\n        elif k == "S":\n            w_a += min(v, cnt_b["P"])\n            w_b += min(v, cnt_b["R"])\n        elif k == "P":\n            w_a += min(v, cnt_b["R"])\n            w_b += min(v, cnt_b["S"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(" ")\n    b = stdin.readline().strip().split(" ")\n    print(" ".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == "__main__":\n    main()\n', '\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    a = stdin.readline()\n    b = stdin.readline()\n    print(a.count("1"), b.count("1"))\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(" ")\n    b = stdin.readline().strip().split(" ")\n    print(" ".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == "__main__":\n    main()\n', 'from sys import stdin\nfrom collections import Counter\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == "R":\n            w_a += min(v, cnt_b["S"])\n            w_b += min(v, cnt_b["P"])\n        elif k == "S":\n            w_a += min(v, cnt_b["P"])\n            w_b += min(v, cnt_b["R"])\n        elif k == "P":\n            w_a += min(v, cnt_b["R"])\n            w_b += min(v, cnt_b["S"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(" ")\n    b = stdin.readline().strip().split(" ")\n    print(" ".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == "__main__":\n    main()\n', '\n\nfrom sys import stdin\nfrom collections import Counter\n\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == "R":\n            w_a += min(v, cnt_b["S"])\n            w_b += min(v, cnt_b["P"])\n        elif k == "S":\n            w_a += min(v, cnt_b["P"])\n            w_b += min(v, cnt_b["R"])\n        elif k == "P":\n            w_a += min(v, cnt_b["R"])\n            w_b += min(v, cnt_b["S"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(" ")\n    b = stdin.readline().strip().split(" ")\n    print(" ".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-22 09:54:23.616555 size on output set 8
2022-04-22 09:54:23.616567 num operations 1
2022-04-22 09:54:23.616573 size on input set 1
2022-04-22 09:54:23.616759 using api key kouti
2022-04-22 09:54:42.834511 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max\n    min_wins = 0\n    max_wins = 0\n    for i in range(3): \n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max\n    min_wins = 0\n    max_wins = 0\n    for i in range(n):\n        if a[i] == b[i]:\n            continue\n        elif a[i] == \"R\":\n            if b[i] == \"S\":\n                min_wins += 1\n                max_wins += 1\n            else:\n                min_wins += 2\n                max_wins += 0\n        elif a[i] == \"S\":\n            if b[i] == \"R\":\n                min_wins += 0\n                max_wins += 2\n            else:\n                min_wins += 1\n                max_wins += 1\n        else:\n            if b[i] == \"R\":\n                min_wins += 1\n                max_wins += 1\n            else:\n                min_wins += 2\n                max_wins += 0\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n\n    # get min/max\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n\n    # get min/max\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n\n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n\n    # get min/max\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n\n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n\n    # get min/max\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n\n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 7
    }
  ],
  "created": 1650621263,
  "object": "edit"
}
2022-04-22 09:54:42.834918 NO RESULT
2022-04-22 09:54:42.834931 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 7
}
2022-04-22 09:54:42.834985 fix syntax errors 7 ['\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max\n    min_wins = 0\n    max_wins = 0\n    for i in range(3): \n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max\n    min_wins = 0\n    max_wins = 0\n    for i in range(n):\n        if a[i] == b[i]:\n            continue\n        elif a[i] == "R":\n            if b[i] == "S":\n                min_wins += 1\n                max_wins += 1\n            else:\n                min_wins += 2\n                max_wins += 0\n        elif a[i] == "S":\n            if b[i] == "R":\n                min_wins += 0\n                max_wins += 2\n            else:\n                min_wins += 1\n                max_wins += 1\n        else:\n            if b[i] == "R":\n                min_wins += 1\n                max_wins += 1\n            else:\n                min_wins += 2\n                max_wins += 0\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n\n    # get min/max\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n\n    # get min/max\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n\n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n\n    # get min/max\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n\n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n\n    # get min/max\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n\n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-22 09:54:42.835044 size on output set 6
