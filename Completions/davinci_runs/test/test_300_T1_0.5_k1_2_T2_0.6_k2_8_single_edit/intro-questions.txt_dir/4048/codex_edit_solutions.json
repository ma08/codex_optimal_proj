["\n\n\ndef solve(n):\n    if n == 1:\n        return 0\n    moves = 0\n    while n > 1:\n        moves += 1\n        if n % 2 == 0:\n            n = n // 2\n        else:\n            n += 1\n    return moves\n\nif __name__ == '__main__':\n    n = int(input())\n    print(solve(n))\n", "\n\nimport math\n\nn = int(input())\n\ndef is_power_of_two(n):\n    return n != 0 and ((n & (n - 1)) == 0)\n\n\ndef solve(n):\n    if n == 1:\n        return 0\n\n    moves = 0\n\n    while n > 1:\n        moves += 1\n        if n % 2 == 0:\n            n = n // 2\n        else:\n            if is_power_of_two(n + 1) and is_power_of_two(n - 1):\n                n -= 1\n            else:\n                n += 1\n\n    return moves\n\n\nif n == 0:\n    print(0)\n    exit()\n\nprint(solve(n))\n", "\n#comment\n\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n", "def min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\nif __name__ == '__main__':\n    n = int(input())\n    print(min_moves(n))\n", "\n#\nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n", "\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input()) # noqa\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n\ndef main():\n    a, b, c = [int(x) for x in input().split()]\n    print(f\"{a} {b} {c}\")\n\n\n\n\nif __name__ == '__main__':\n    main()\n", "\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n", "def min_moves(n):\n    x, y = 0, 0\n    moves = 0\n    while True:\n        moves += 1\n        if n == (x + 1) * (y + 1):\n            return moves\n        elif n < (x + 1) * (y + 1):\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n", "import math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n\nelse:\n    moves = 0\n\n    while n > 1:\n        moves += 1\n        if n % 2 == 0:\n            n = n // 2\n        else:\n            n += 1\n\n    print(moves)\n", "\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n", "\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n)\n\n\nif __name__ == '__main__'\n    main()\n", "\nimport math\n\nn = int(input())\n\nmoves = 0\ndef is_even(n):\n    return n % 2 == 0\n\ndef is_odd(n):\n    return not is_even(n)\n\nwhile n > 0:\n    moves += 1\n    if is_even(n):\n        n /= 2\n    else:\n        n -= 1\n\nprint(moves)\n"]