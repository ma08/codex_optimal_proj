2022-04-22 10:13:10.979268 num operations 1
2022-04-22 10:13:10.979292 size on input set 1
2022-04-22 10:13:10.979486 using api key jaanu
2022-04-22 10:13:23.089329 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, a, b = map(int, input().split())\nprint(max(min(a, b), max(0, n - a - b)))\n"
    },
    {
      "index": 1,
      "text": "\n#\n# n,a,b = map(int,input().split())\n#\n# if a > b:\n#     a,b = b,a\n#\n# if a == 0:\n#     print(0)\n# else:\n#     print(min(n,a))\n"
    },
    {
      "index": 2,
      "text": "n,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif a == 0:\n    print(0)\nelse:\n    print(min(n-a,b))\n"
    },
    {
      "index": 3,
      "text": "a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z = map(int,input().split())\n\n\nif a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q + r + s + t + u + v + w + x + y + z + A + B + C + D + E + F + G + H + I + J + K + L + M + N + O + P + Q + R + S + T + U + V + W + X + Y + Z > 0:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 4,
      "text": "\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif a == 0:\n    print(0)\nelse:\n    print(min(n,a))\n"
    },
    {
      "index": 5,
      "text": "\n\nn, a, b = map(int, input().split())\n\nif a > b:\n    a, b = b, a\n\nif a == 0:\n    print(0)\nelse:\n    print(min(n, a))\n"
    },
    {
      "index": 6,
      "text": "\n\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif a == 0:\n    print(0)\nelse:\n    if n <= a:\n        print(n)\n    else:\n        print(min(n,a))\n"
    },
    {
      "index": 7,
      "text": "import sys\n\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif a == 0:\n    sys.stdout.write(str(0))\nelse:\n    sys.stdout.write(str(min(n,a)))\n"
    }
  ],
  "created": 1650622391,
  "object": "edit"
}
2022-04-22 10:13:23.089666 fix syntax errors 8 ['\nn, a, b = map(int, input().split())\nprint(max(min(a, b), max(0, n - a - b)))\n', '\n#\n# n,a,b = map(int,input().split())\n#\n# if a > b:\n#     a,b = b,a\n#\n# if a == 0:\n#     print(0)\n# else:\n#     print(min(n,a))\n', 'n,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif a == 0:\n    print(0)\nelse:\n    print(min(n-a,b))\n', "a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z = map(int,input().split())\n\n\nif a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q + r + s + t + u + v + w + x + y + z + A + B + C + D + E + F + G + H + I + J + K + L + M + N + O + P + Q + R + S + T + U + V + W + X + Y + Z > 0:\n    print('Yes')\nelse:\n    print('No')\n", '\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif a == 0:\n    print(0)\nelse:\n    print(min(n,a))\n', '\n\nn, a, b = map(int, input().split())\n\nif a > b:\n    a, b = b, a\n\nif a == 0:\n    print(0)\nelse:\n    print(min(n, a))\n', '\n\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif a == 0:\n    print(0)\nelse:\n    if n <= a:\n        print(n)\n    else:\n        print(min(n,a))\n', 'import sys\n\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif a == 0:\n    sys.stdout.write(str(0))\nelse:\n    sys.stdout.write(str(min(n,a)))\n']
2022-04-22 10:13:23.089710 size on output set 8
2022-04-22 10:13:23.089721 num operations 1
2022-04-22 10:13:23.089727 size on input set 1
2022-04-22 10:13:23.089867 using api key kouti
2022-04-22 10:13:36.306059 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls\n# We can find our answer by finding the remainder of n / (a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n"
    },
    {
      "index": 1,
      "text": "\n\nn, a, b = map(int, input().split())  # read input\n\nn = n % (a + b)  # The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n / (a + b) and counting the number of blue balls in that pattern.\n\nif n <= a:  # If we don't have enough balls to fill out a pattern, we can simply count the number of blue balls we have.\n    print(n)\nelse:\n    print(a)  # Otherwise, count the number of blue balls in the last pattern.\n"
    },
    {
      "index": 2,
      "text": "n = int(input())\ns = 0\nfor i in range(1, n+1):\n    s += i\nprint(s)\n"
    },
    {
      "index": 3,
      "text": "\n\na, b = map(int, input().split())\n\nprint(a+b)\n\nn = int(input())\n\nprint(n)\n"
    },
    {
      "index": 4,
      "text": "\n\nn = int(input())\n\nk = int(input())\n\nm = int(input())\n\narr = []\n\nx = n\n\nwhile x > 0:\n\n    arr.append(x)\n\n    x = x - 1\n\nif k > m:\n\n    print(\"1\")\n\nelse:\n\n    if n == m:\n\n        print(\"1\")\n\n    else:\n\n        y = arr[0]\n\n        while y <= m:\n\n            y = y + k\n\n            if y == m:\n\n                print(\"1\")\n\n                break\n\n            else:\n\n                print(\"0\")\n"
    },
    {
      "index": 5,
      "text": "#!/usr/bin/env python3\n\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n / (a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n"
    },
    {
      "index": 6,
      "text": "#python3\n\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n / (a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n"
    },
    {
      "index": 7,
      "text": "\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n / (a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n"
    }
  ],
  "created": 1650622403,
  "object": "edit"
}
2022-04-22 10:13:36.306372 fix syntax errors 8 ["\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls\n# We can find our answer by finding the remainder of n / (a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n", "\n\nn, a, b = map(int, input().split())  # read input\n\nn = n % (a + b)  # The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n / (a + b) and counting the number of blue balls in that pattern.\n\nif n <= a:  # If we don't have enough balls to fill out a pattern, we can simply count the number of blue balls we have.\n    print(n)\nelse:\n    print(a)  # Otherwise, count the number of blue balls in the last pattern.\n", 'n = int(input())\ns = 0\nfor i in range(1, n+1):\n    s += i\nprint(s)\n', '\n\na, b = map(int, input().split())\n\nprint(a+b)\n\nn = int(input())\n\nprint(n)\n', '\n\nn = int(input())\n\nk = int(input())\n\nm = int(input())\n\narr = []\n\nx = n\n\nwhile x > 0:\n\n    arr.append(x)\n\n    x = x - 1\n\nif k > m:\n\n    print("1")\n\nelse:\n\n    if n == m:\n\n        print("1")\n\n    else:\n\n        y = arr[0]\n\n        while y <= m:\n\n            y = y + k\n\n            if y == m:\n\n                print("1")\n\n                break\n\n            else:\n\n                print("0")\n', "#!/usr/bin/env python3\n\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n / (a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n", "#python3\n\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n / (a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n", "\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n / (a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n"]
2022-04-22 10:13:36.306540 size on output set 8
