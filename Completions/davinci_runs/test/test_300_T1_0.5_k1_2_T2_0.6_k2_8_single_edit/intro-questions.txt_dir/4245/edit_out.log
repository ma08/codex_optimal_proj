2022-04-22 11:26:37.711741 num operations 1
2022-04-22 11:26:37.711759 size on input set 1
2022-04-22 11:26:37.711922 using api key kouti
2022-04-22 11:26:45.779001 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0)) \n"
    },
    {
      "index": 1,
      "text": "import sys\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint((B // A) + (B % A != 0))\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\n\nA, B = map(int, input().split())\nprint((B - A + 1) // 2)\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0)) \n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A))\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + int(B % A != 0))\n"
    },
    {
      "index": 7,
      "text": "import sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n"
    }
  ],
  "created": 1650626797,
  "object": "edit"
}
2022-04-22 11:26:45.779309 fix syntax errors 8 ['\n\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0)) \n', 'import sys\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint((B // A) + (B % A != 0))\n', '\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n', '\n\nimport sys\n\nA, B = map(int, input().split())\nprint((B - A + 1) // 2)\n', '\n\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0)) \n', '\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A))\n', '\n\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + int(B % A != 0))\n', 'import sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n']
2022-04-22 11:26:45.779342 size on output set 7
2022-04-22 11:26:45.779354 num operations 1
2022-04-22 11:26:45.779359 size on input set 1
2022-04-22 11:26:45.779500 using api key derek
2022-04-22 11:26:54.396086 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A\n\ndef main():\n    line = input().split\n    A = int(line[0\n    B = int(line[1\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    a = int(line[0])\n    b = int(line[1])\n    print(minPowerStrips(a, b))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "import math\nimport sys\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = sys.stdin.readline().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A) - 1\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A) \n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650626805,
  "object": "edit"
}
2022-04-22 11:26:54.396381 fix syntax errors 8 ["\n\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A\n\ndef main():\n    line = input().split\n    A = int(line[0\n    B = int(line[1\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    a = int(line[0])\n    b = int(line[1])\n    print(minPowerStrips(a, b))\n\nif __name__ == '__main__':\n    main()\n", "import math\nimport sys\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = sys.stdin.readline().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A) - 1\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A) \n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-22 11:26:54.396433 size on output set 7
