2022-04-22 10:12:50.675974 num operations 1
2022-04-22 10:12:50.675993 size on input set 1
2022-04-22 10:12:50.676155 using api key soukgp
2022-04-22 10:12:59.806778 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\nn, k = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\n\nprint(max(a) - min(a) - k - 1)\n"
    },
    {
      "index": 1,
      "text": "\n\nn, k = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\n\nprint(max(a) - min(a) - k)\n"
    },
    {
      "index": 2,
      "text": "\nprint(max(a) - min(a) - k)\n"
    },
    {
      "index": 3,
      "text": "\n\nn, k = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\n\nprint(max(a) - min(a) - 2 * k)\n"
    },
    {
      "index": 4,
      "text": "\n\nn, k = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\n\nprint(max(a) - min(a) - 2 * k)\n"
    },
    {
      "index": 5,
      "text": "\n\nn, k = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\n\nprint(max(a) - min(a) - k * 2 + 1)\n"
    },
    {
      "index": 6,
      "text": "from collections import defaultdict\n\nn, k = [int(i) for i in input().split()]\nd = defaultdict(int)\na = [int(i) for i in input().split()]\n\nfor i in a:\n    d[i] += 1\n\nprint(len(d.keys()))\n"
    },
    {
      "index": 7,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nprint(max(a) - min(a) if max(a) - min(a) > k else 0)\n"
    }
  ],
  "created": 1650622370,
  "object": "edit"
}
2022-04-22 10:12:59.807094 fix syntax errors 8 ['\n\n\nn, k = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\n\nprint(max(a) - min(a) - k - 1)\n', '\n\nn, k = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\n\nprint(max(a) - min(a) - k)\n', '\nprint(max(a) - min(a) - k)\n', '\n\nn, k = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\n\nprint(max(a) - min(a) - 2 * k)\n', '\n\nn, k = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\n\nprint(max(a) - min(a) - 2 * k)\n', '\n\nn, k = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\n\nprint(max(a) - min(a) - k * 2 + 1)\n', 'from collections import defaultdict\n\nn, k = [int(i) for i in input().split()]\nd = defaultdict(int)\na = [int(i) for i in input().split()]\n\nfor i in a:\n    d[i] += 1\n\nprint(len(d.keys()))\n', '\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nprint(max(a) - min(a) if max(a) - min(a) > k else 0)\n']
2022-04-22 10:12:59.807130 size on output set 7
2022-04-22 10:12:59.807143 num operations 1
2022-04-22 10:12:59.807148 size on input set 1
2022-04-22 10:12:59.807291 using api key sunu
2022-04-22 10:13:10.565707 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # Sort the array in reverse order.\n    a.sort(reverse=True)\n\n    # Number of times the largest number in the array is divided by 2.\n    ans = 0\n\n    # While the largest number in the array is greater than the desired value.\n    while a[0] > a[k-1]:\n        # Divide the largest number by 2.\n        a[0] //= 2\n        # Sort the array in reverse order.\n        a.sort(reverse=True)\n        # Increment the number of times the largest number in the array is divided by 2.\n        ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # Sort the array in reverse order.\n    a.sort(reverse=True)\n\n    # Number of times the largest number in the array is divided by 2.\n    ans = 0\n\n    # While the largest number in the array is greater than the desired value.\n    while a[0] > a[k-1]:\n        # Divide the largest number by 2.\n        a[0] //= 2\n        # Sort the array in reverse order.\n        a.sort(reverse=True)\n        # Increment the number of times the largest number in the array is divided by 2.\n        ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n# import sys\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n\n    a.sort(reverse=True)\n\n    ans = 0\n\n    while a[0] > a[k-1]:\n        a[0] //= 2\n        a.sort(reverse=True)\n        ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # Sort the array in reverse order.\n    a.sort(reverse=True)\n\n    # Number of times the largest number in the array is divided by 2.\n    ans = 0\n\n    # While the largest number in the array is greater than the desired value.\n    while a[0] > a[k-1]:\n        # Divide the largest number by 2.\n        a[0] //= 2\n        # Sort the array in reverse order.\n        a.sort(reverse=True)\n        # Increment the number of times the largest number in the array is divided by 2.\n        ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # Number of times the largest number in the array is divided by 2.\n    ans = 0\n\n    # While the largest number in the array is greater than the desired value.\n    while max(a) > a[k-1]:\n        # Divide the largest number by 2.\n        a[a.index(max(a))] //= 2\n        # Increment the number of times the largest number in the array is divided by 2.\n        ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\nimport sys\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n\n    # Sort the array in reverse order.\n    a.sort(reverse=True)\n\n    # Number of times the largest number in the array is divided by 2.\n    ans = 0\n\n    # While the largest number in the array is greater than the desired value.\n    while a[0] > a[k-1]:\n        # Divide the largest number by 2.\n        a[0] //= 2\n        # Sort the array in reverse order.\n        a.sort(reverse=True)\n        # Increment the number of times the largest number in the array is divided by 2.\n        ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    a.sort(reverse=True)\n\n    ans = 0\n\n    while a[0] > a[k-1]:\n        a[0] //= 2\n        a.sort(reverse=True)\n        ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # Sort the array in reverse order.\n    a.sort(reverse=True)\n\n    # Number of times the largest number in the array is divided by 2.\n    ans = 0\n\n    # While the largest number in the array is greater than the desired value.\n    while a[0] > a[k-1]:\n        # Divide the largest number by 2.\n        a[0] //= 2\n        # Sort the array in reverse order.\n        a.sort(reverse=True)\n        # Increment the number of times the largest number in the array is divided by 2.\n        ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650622379,
  "object": "edit"
}
2022-04-22 10:13:10.566032 fix syntax errors 8 ["import sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # Sort the array in reverse order.\n    a.sort(reverse=True)\n\n    # Number of times the largest number in the array is divided by 2.\n    ans = 0\n\n    # While the largest number in the array is greater than the desired value.\n    while a[0] > a[k-1]:\n        # Divide the largest number by 2.\n        a[0] //= 2\n        # Sort the array in reverse order.\n        a.sort(reverse=True)\n        # Increment the number of times the largest number in the array is divided by 2.\n        ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # Sort the array in reverse order.\n    a.sort(reverse=True)\n\n    # Number of times the largest number in the array is divided by 2.\n    ans = 0\n\n    # While the largest number in the array is greater than the desired value.\n    while a[0] > a[k-1]:\n        # Divide the largest number by 2.\n        a[0] //= 2\n        # Sort the array in reverse order.\n        a.sort(reverse=True)\n        # Increment the number of times the largest number in the array is divided by 2.\n        ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# import sys\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n\n    a.sort(reverse=True)\n\n    ans = 0\n\n    while a[0] > a[k-1]:\n        a[0] //= 2\n        a.sort(reverse=True)\n        ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # Sort the array in reverse order.\n    a.sort(reverse=True)\n\n    # Number of times the largest number in the array is divided by 2.\n    ans = 0\n\n    # While the largest number in the array is greater than the desired value.\n    while a[0] > a[k-1]:\n        # Divide the largest number by 2.\n        a[0] //= 2\n        # Sort the array in reverse order.\n        a.sort(reverse=True)\n        # Increment the number of times the largest number in the array is divided by 2.\n        ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # Number of times the largest number in the array is divided by 2.\n    ans = 0\n\n    # While the largest number in the array is greater than the desired value.\n    while max(a) > a[k-1]:\n        # Divide the largest number by 2.\n        a[a.index(max(a))] //= 2\n        # Increment the number of times the largest number in the array is divided by 2.\n        ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n\n    # Sort the array in reverse order.\n    a.sort(reverse=True)\n\n    # Number of times the largest number in the array is divided by 2.\n    ans = 0\n\n    # While the largest number in the array is greater than the desired value.\n    while a[0] > a[k-1]:\n        # Divide the largest number by 2.\n        a[0] //= 2\n        # Sort the array in reverse order.\n        a.sort(reverse=True)\n        # Increment the number of times the largest number in the array is divided by 2.\n        ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    a.sort(reverse=True)\n\n    ans = 0\n\n    while a[0] > a[k-1]:\n        a[0] //= 2\n        a.sort(reverse=True)\n        ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # Sort the array in reverse order.\n    a.sort(reverse=True)\n\n    # Number of times the largest number in the array is divided by 2.\n    ans = 0\n\n    # While the largest number in the array is greater than the desired value.\n    while a[0] > a[k-1]:\n        # Divide the largest number by 2.\n        a[0] //= 2\n        # Sort the array in reverse order.\n        a.sort(reverse=True)\n        # Increment the number of times the largest number in the array is divided by 2.\n        ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-22 10:13:10.566199 size on output set 6
