2022-04-22 11:53:22.246629 num operations 1
2022-04-22 11:53:22.246647 size on input set 1
2022-04-22 11:53:22.246812 using api key soukgp
2022-04-22 11:53:30.756273 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import math\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport math\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport math\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport math\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport math\n\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "import math\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\nimport math\nimport collections\nimport bisect\nimport sys\nimport copy\nimport fractions\nimport random\nimport string\nimport itertools\nsys.setrecursionlimit(10 ** 9)\nmod = 10 ** 9 + 7\ninf = 10 ** 19\n\nN, D = map(int, input().split())\n\ndef main():\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nmain()\n"
    },
    {
      "index": 7,
      "text": "\n\nimport math\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650628402,
  "object": "edit"
}
2022-04-22 11:53:30.756599 fix syntax errors 8 ['import math\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == "__main__":\n    main()\n', '\nimport math\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport math\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == "__main__":\n    main()\n', '\nimport math\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == "__main__":\n    main()\n', '\nimport math\n\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == "__main__":\n    main()\n', 'import math\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport math\nimport collections\nimport bisect\nimport sys\nimport copy\nimport fractions\nimport random\nimport string\nimport itertools\nsys.setrecursionlimit(10 ** 9)\nmod = 10 ** 9 + 7\ninf = 10 ** 19\n\nN, D = map(int, input().split())\n\ndef main():\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nmain()\n', '\n\nimport math\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-22 11:53:30.756641 size on output set 5
2022-04-22 11:53:30.756652 num operations 1
2022-04-22 11:53:30.756658 size on input set 1
2022-04-22 11:53:30.756821 using api key kouti
2022-04-22 11:53:38.585763 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN, D = map(int, input().split())\n\nprint(N // (D * 2 + 1))\n"
    },
    {
      "index": 1,
      "text": "\n\nN, D = map(int, input().split())\n\nprint(N//(D*2+1) + 1)\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input())\n\nprint(N//2)\n"
    },
    {
      "index": 3,
      "text": "\nN, D = map(int, input().split())\n\nprint(N//(D*2+1))\n"
    },
    {
      "index": 4,
      "text": "\n"
    },
    {
      "index": 5,
      "text": "\n\na, b = map(int, input().split())\nprint(a + b)\n"
    },
    {
      "index": 6,
      "text": "\nN, D = map(int, input().split())\nprint(N // (D * 2 + 1))\n"
    },
    {
      "index": 7,
      "text": "\n\na = int(input())\nb = int(input())\n\nprint(a+b)\nprint(a-b)\nprint(a*b)\n"
    }
  ],
  "created": 1650628410,
  "object": "edit"
}
2022-04-22 11:53:38.586088 fix syntax errors 8 ['\n\nN, D = map(int, input().split())\n\nprint(N // (D * 2 + 1))\n', '\n\nN, D = map(int, input().split())\n\nprint(N//(D*2+1) + 1)\n', '\n\nN = int(input())\n\nprint(N//2)\n', '\nN, D = map(int, input().split())\n\nprint(N//(D*2+1))\n', '\n', '\n\na, b = map(int, input().split())\nprint(a + b)\n', '\nN, D = map(int, input().split())\nprint(N // (D * 2 + 1))\n', '\n\na = int(input())\nb = int(input())\n\nprint(a+b)\nprint(a-b)\nprint(a*b)\n']
2022-04-22 11:53:38.586133 size on output set 8
