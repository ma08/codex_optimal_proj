2022-04-22 10:25:15.953793 num operations 1
2022-04-22 10:25:15.953814 size on input set 1
2022-04-22 10:25:15.953957 using api key soukgp
2022-04-22 10:25:46.230514 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\na = list(map(int,input().split()))\n\ndef find_good_candies(n, a):\n    sum_odd, sum_even = 0, 0\n    for i in range(1,n):\n        if i%2 == 0:\n            sum_even += a[i]\n        else:\n            sum_odd += a[i]\n    if sum_odd == sum_even:\n        return 1\n    else:\n        return 0\n\nans = 0\nfor i in range(n):\n    ans += find_good_candies(n, a[:i] + a[i+1:])\n\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\na = list(map(int,input().split()))\n \n# def find_good_candies(n, a):\n#     sum_odd, sum_even = 0, 0\n#     for i in range(1,n):\n#         if i%2 == 0:\n#             sum_even += a[i]\n#         else:\n#             sum_odd += a[i]\n#     if sum_odd == sum_even:\n#         return 1\n#     else:\n#         return 0\n\n# ans = 0\n# for i in range(n):\n#     ans += find_good_candies(n, a[:i] + a[i+1:])\n\n# print(ans)\n\nodd, even = 0, 0\nfor i in range(n):\n    if i%2 == 0:\n        odd += a[i]\n    else:\n        even += a[i]\n\nans = 0\nfor i in range(n):\n    if i%2 == 0:\n        if odd - a[i] == even:\n            ans += 1\n    else:\n        if odd == even - a[i]:\n            ans += 1\n\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\na = list(map(int,input().split()))\n\ndef find_good_candies(n, a):\n    sum_odd, sum_even = 0, 0\n    for i in range(1,n):\n        if i%2 == 0:\n            sum_even += a[i]\n        else:\n            sum_odd += a[i]\n    if sum_odd == sum_even:\n        return 1\n    else:\n        return 0\n\nans = 0\nfor i in range(n):\n    ans += find_good_candies(n, a[:i] + a[i+1:])\n\nprint(ans)\n\n# odd, even = 0, 0\n# for i in range(n):\n#     if i%2 == 0:\n#         odd += a[i]\n#     else:\n#         even += a[i]\n\n# ans = 0\n# for i in range(n):\n#     if i%2 == 0:\n#         if odd - a[i] == even:\n#             ans += 1\n#     else:\n#         if odd == even - a[i]:\n#             ans += 1\n\nprint(ans)\n"
    },
    {
      "index": 3,
      "text": "n = int(input())\na = list(map(int, input().split()))\n\n\ndef find_good_candies(n, a):\n    sum_odd, sum_even = 0, 0\n    for i in range(1, n):\n        if i%2 == 0:\n            sum_even += a[i]\n        else:\n            sum_odd += a[i]\n    if sum_odd == sum_even:\n        return 1\n    else:\n        return 0\n\nodd, even = 0, 0\nfor i in range(n):\n    if i % 2 == 0:\n        odd += a[i]\n    else:\n        even += a[i]\n\nans = 0\nfor i in range(n):\n    if i % 2 == 0:\n        if odd - a[i] == even:\n            ans += 1\n    else:\n        if odd == even - a[i]:\n            ans += 1\n\nprint(ans)\n"
    },
    {
      "index": 4,
      "text": "\nprint(\"hello world\")\n"
    },
    {
      "index": 5,
      "text": "\n\n# n = int(input())\n# a = list(map(int,input().split()))\n#\n# def find_good_candies(n, a, i):\n#     sum_odd, sum_even = 0, 0\n#     for i in range(n):\n#         if i%2 == 0:\n#             sum_even += a[i]\n#         else:\n#             sum_odd += a[i]\n#     if sum_odd == sum_even:\n#         return 1\n#     else:\n#         return 0\n\n# # ans = 0\n# # for i in range(n):\n# #     ans += find_good_candies(n, a[:i] + a[i+1:])\n# #\n# # print(ans)\n#\n# odd, even = 0, 0\n# for i in range(n):\n#     if i%2 == 0:\n#         odd += a[i]\n#     else:\n#         even += a[i]\n#\n# ans = 0\n# for i in range(n):\n#     if i%2 == 0:\n#         if odd - a[i] == even:\n#             ans += 1\n#     else:\n#         if odd == even - a[i]:\n#             ans += 1\n#\n# print(ans)\n\nans = 0\n\ndef find_good_candies(n, a, i):\n    sum_odd, sum_even = 0, 0\n    for i in range(n):\n        if i%2 == 0:\n            sum_even += a[i]\n        else:\n            sum_odd += a[i]\n    if sum_odd == sum_even:\n        return 1\n    else:\n        return 0\n\nans = find_good_candies(n, a, i)\n\nprint(ans)\n"
    },
    {
      "index": 6,
      "text": "import sys\nsys.setrecursionlimit(100000)\n\n\ndef dfs(node, parent):\n    for next_node in tree[node]:\n        if next_node == parent:\n            continue\n        dfs(next_node, node)\n\ndef dfs_color(node, parent, color):\n    for next_node in tree[node]:\n        if next_node == parent:\n            continue\n        if color == 1:\n            if len(tree[next_node]) >= 2:\n                dfs_color(next_node, node, 0)\n            else:\n                dfs_color(next_node, node, 1)\n        else:\n            dfs_color(next_node, node, 1)\n\n# ans = 0\n# for i in range(n):\n#     ans += find_good_candies(n, a[:i] + a[i+1:])\n\n# print(ans)\n\nodd, even = 0, 0\nfor i in range(n):\n    if i%2 == 0:\n        odd += a[i]\n    else:\n        even += a[i]\n\nans = 0\nfor i in range(n):\n    if i%2 == 0:\n        if odd - a[i] == even:\n            ans += 1\n    else:\n        if odd == even - a[i]:\n            ans += 1\n\nprint(ans)\n"
    },
    {
      "index": 7,
      "text": "\n# def find_good_candies(n, a):\n#     sum_odd, sum_even = 0, 0\n#     for i in range(1,n):\n#         if i%2 == 0:\n#             sum_even += a[i]\n#         else:\n#             sum_odd += a[i]\n#     if sum_odd == sum_even:\n#         return 1\n#     else:\n#         return 0\n\n# ans = 0\n# for i in range(n):\n#     ans += find_good_candies(n, a[:i] + a[i+1:])\n\n# print(ans)\n\nn = int(input())\na = list(map(int,input().split()))\n\n\nodd, even = 0, 0\nfor i in range(n):\n    if i%2 == 0:\n        odd += a[i]\n    else:\n        even += a[i]\n\nans = 0\nfor i in range(n):\n    if i%2 == 0:\n        if odd - a[i] == even:\n            ans += 1\n    else:\n        if odd == even - a[i]:\n            ans += 1\n\nprint(ans)\n"
    }
  ],
  "created": 1650623116,
  "object": "edit"
}
2022-04-22 10:25:46.230858 fix syntax errors 8 ['\n\nn = int(input())\na = list(map(int,input().split()))\n\ndef find_good_candies(n, a):\n    sum_odd, sum_even = 0, 0\n    for i in range(1,n):\n        if i%2 == 0:\n            sum_even += a[i]\n        else:\n            sum_odd += a[i]\n    if sum_odd == sum_even:\n        return 1\n    else:\n        return 0\n\nans = 0\nfor i in range(n):\n    ans += find_good_candies(n, a[:i] + a[i+1:])\n\n\nprint(ans)\n', '\n\nn = int(input())\na = list(map(int,input().split()))\n \n# def find_good_candies(n, a):\n#     sum_odd, sum_even = 0, 0\n#     for i in range(1,n):\n#         if i%2 == 0:\n#             sum_even += a[i]\n#         else:\n#             sum_odd += a[i]\n#     if sum_odd == sum_even:\n#         return 1\n#     else:\n#         return 0\n\n# ans = 0\n# for i in range(n):\n#     ans += find_good_candies(n, a[:i] + a[i+1:])\n\n# print(ans)\n\nodd, even = 0, 0\nfor i in range(n):\n    if i%2 == 0:\n        odd += a[i]\n    else:\n        even += a[i]\n\nans = 0\nfor i in range(n):\n    if i%2 == 0:\n        if odd - a[i] == even:\n            ans += 1\n    else:\n        if odd == even - a[i]:\n            ans += 1\n\nprint(ans)\n', '\n\nn = int(input())\na = list(map(int,input().split()))\n\ndef find_good_candies(n, a):\n    sum_odd, sum_even = 0, 0\n    for i in range(1,n):\n        if i%2 == 0:\n            sum_even += a[i]\n        else:\n            sum_odd += a[i]\n    if sum_odd == sum_even:\n        return 1\n    else:\n        return 0\n\nans = 0\nfor i in range(n):\n    ans += find_good_candies(n, a[:i] + a[i+1:])\n\nprint(ans)\n\n# odd, even = 0, 0\n# for i in range(n):\n#     if i%2 == 0:\n#         odd += a[i]\n#     else:\n#         even += a[i]\n\n# ans = 0\n# for i in range(n):\n#     if i%2 == 0:\n#         if odd - a[i] == even:\n#             ans += 1\n#     else:\n#         if odd == even - a[i]:\n#             ans += 1\n\nprint(ans)\n', 'n = int(input())\na = list(map(int, input().split()))\n\n\ndef find_good_candies(n, a):\n    sum_odd, sum_even = 0, 0\n    for i in range(1, n):\n        if i%2 == 0:\n            sum_even += a[i]\n        else:\n            sum_odd += a[i]\n    if sum_odd == sum_even:\n        return 1\n    else:\n        return 0\n\nodd, even = 0, 0\nfor i in range(n):\n    if i % 2 == 0:\n        odd += a[i]\n    else:\n        even += a[i]\n\nans = 0\nfor i in range(n):\n    if i % 2 == 0:\n        if odd - a[i] == even:\n            ans += 1\n    else:\n        if odd == even - a[i]:\n            ans += 1\n\nprint(ans)\n', '\nprint("hello world")\n', '\n\n# n = int(input())\n# a = list(map(int,input().split()))\n#\n# def find_good_candies(n, a, i):\n#     sum_odd, sum_even = 0, 0\n#     for i in range(n):\n#         if i%2 == 0:\n#             sum_even += a[i]\n#         else:\n#             sum_odd += a[i]\n#     if sum_odd == sum_even:\n#         return 1\n#     else:\n#         return 0\n\n# # ans = 0\n# # for i in range(n):\n# #     ans += find_good_candies(n, a[:i] + a[i+1:])\n# #\n# # print(ans)\n#\n# odd, even = 0, 0\n# for i in range(n):\n#     if i%2 == 0:\n#         odd += a[i]\n#     else:\n#         even += a[i]\n#\n# ans = 0\n# for i in range(n):\n#     if i%2 == 0:\n#         if odd - a[i] == even:\n#             ans += 1\n#     else:\n#         if odd == even - a[i]:\n#             ans += 1\n#\n# print(ans)\n\nans = 0\n\ndef find_good_candies(n, a, i):\n    sum_odd, sum_even = 0, 0\n    for i in range(n):\n        if i%2 == 0:\n            sum_even += a[i]\n        else:\n            sum_odd += a[i]\n    if sum_odd == sum_even:\n        return 1\n    else:\n        return 0\n\nans = find_good_candies(n, a, i)\n\nprint(ans)\n', 'import sys\nsys.setrecursionlimit(100000)\n\n\ndef dfs(node, parent):\n    for next_node in tree[node]:\n        if next_node == parent:\n            continue\n        dfs(next_node, node)\n\ndef dfs_color(node, parent, color):\n    for next_node in tree[node]:\n        if next_node == parent:\n            continue\n        if color == 1:\n            if len(tree[next_node]) >= 2:\n                dfs_color(next_node, node, 0)\n            else:\n                dfs_color(next_node, node, 1)\n        else:\n            dfs_color(next_node, node, 1)\n\n# ans = 0\n# for i in range(n):\n#     ans += find_good_candies(n, a[:i] + a[i+1:])\n\n# print(ans)\n\nodd, even = 0, 0\nfor i in range(n):\n    if i%2 == 0:\n        odd += a[i]\n    else:\n        even += a[i]\n\nans = 0\nfor i in range(n):\n    if i%2 == 0:\n        if odd - a[i] == even:\n            ans += 1\n    else:\n        if odd == even - a[i]:\n            ans += 1\n\nprint(ans)\n', '\n# def find_good_candies(n, a):\n#     sum_odd, sum_even = 0, 0\n#     for i in range(1,n):\n#         if i%2 == 0:\n#             sum_even += a[i]\n#         else:\n#             sum_odd += a[i]\n#     if sum_odd == sum_even:\n#         return 1\n#     else:\n#         return 0\n\n# ans = 0\n# for i in range(n):\n#     ans += find_good_candies(n, a[:i] + a[i+1:])\n\n# print(ans)\n\nn = int(input())\na = list(map(int,input().split()))\n\n\nodd, even = 0, 0\nfor i in range(n):\n    if i%2 == 0:\n        odd += a[i]\n    else:\n        even += a[i]\n\nans = 0\nfor i in range(n):\n    if i%2 == 0:\n        if odd - a[i] == even:\n            ans += 1\n    else:\n        if odd == even - a[i]:\n            ans += 1\n\nprint(ans)\n']
2022-04-22 10:25:46.231021 size on output set 8
2022-04-22 10:25:46.231035 num operations 1
2022-04-22 10:25:46.231041 size on input set 1
2022-04-22 10:25:46.231181 using api key jaanu
2022-04-22 10:25:59.678010 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\nx = input()\nodds = 0\nevens = 0\ncount = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens -= a[i]\n    else:\n        odds -= a[i]\n    if odds == evens:\n        count += 1\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\nodds = 0\nevens = 0\ncnt = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens -= a[i]\n    else:\n        odds -= a[i]\n    if odds == evens:\n        cnt += 1\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nprint(cnt)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\nodds = 0\nevens = 0\ncount = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens -= a[i]\n    else:\n        odds -= a[i]\n    if odds == evens:\n        count += 1\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nprint(count)\n"
    },
    {
      "index": 3,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\nodds = 0\nevens = 0\ncount = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens -= a[i]\n    else:\n        odds -= a[i]\n    if odds == evens:\n        count += 1\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nprint(count)\n"
    },
    {
      "index": 4,
      "text": "\n\nn, m = map(int, input().split())\na = list(map(int, input().split()) for i in range(n))\n\nx1 = 0\nx2 = 0\ny1 = 0\ny2 = 0\n\nfor i in range(n): \n    for j in range(m):\n        if i == j:\n            x1 += a[i][j]\n        if i + j == n - 1:\n            x2 += a[i][j]\n        if i == 0 or i == n - 1:\n            y1 += a[i][j]\n        if j == 0 or j == m - 1:\n            y2 += a[i][j]\n\nprint(max(x1, x2, y1, y2))\n"
    },
    {
      "index": 5,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\nodds = 0\nevens = 0\ncount = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens -= a[i]\n    else:\n        odds -= a[i]\n    if odds == evens:\n        count += 1\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nprint(count)\n"
    },
    {
      "index": 6,
      "text": "n = int(input())\ns = list(map(int, input().split()))\n\n\nsum_ = sum(s)\nc = 0\nt = 0\nfor i in range(n):\n    t += s[i]\n    if t == sum_ / 2:\n        c += 1\n        t = 0\n\nprint(c)\n"
    },
    {
      "index": 7,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\nodds = 0\nevens = 0\ncount = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nfor i in range(n):\n    if i == 0:\n        if odds == evens - a[i]:\n            count += 1\n    else:\n        if evens == odds - a[i]:\n            count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650623146,
  "object": "edit"
}
2022-04-22 10:25:59.678408 fix syntax errors 8 ['\n\nn = int(input())\na = list(map(int, input().split()))\nx = input()\nodds = 0\nevens = 0\ncount = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens -= a[i]\n    else:\n        odds -= a[i]\n    if odds == evens:\n        count += 1\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nprint(count)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\nodds = 0\nevens = 0\ncnt = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens -= a[i]\n    else:\n        odds -= a[i]\n    if odds == evens:\n        cnt += 1\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nprint(cnt)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\nodds = 0\nevens = 0\ncount = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens -= a[i]\n    else:\n        odds -= a[i]\n    if odds == evens:\n        count += 1\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nprint(count)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\nodds = 0\nevens = 0\ncount = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens -= a[i]\n    else:\n        odds -= a[i]\n    if odds == evens:\n        count += 1\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nprint(count)\n', '\n\nn, m = map(int, input().split())\na = list(map(int, input().split()) for i in range(n))\n\nx1 = 0\nx2 = 0\ny1 = 0\ny2 = 0\n\nfor i in range(n): \n    for j in range(m):\n        if i == j:\n            x1 += a[i][j]\n        if i + j == n - 1:\n            x2 += a[i][j]\n        if i == 0 or i == n - 1:\n            y1 += a[i][j]\n        if j == 0 or j == m - 1:\n            y2 += a[i][j]\n\nprint(max(x1, x2, y1, y2))\n', '\n\nn = int(input())\na = list(map(int, input().split()))\nodds = 0\nevens = 0\ncount = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens -= a[i]\n    else:\n        odds -= a[i]\n    if odds == evens:\n        count += 1\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nprint(count)\n', 'n = int(input())\ns = list(map(int, input().split()))\n\n\nsum_ = sum(s)\nc = 0\nt = 0\nfor i in range(n):\n    t += s[i]\n    if t == sum_ / 2:\n        c += 1\n        t = 0\n\nprint(c)\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n\nodds = 0\nevens = 0\ncount = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nfor i in range(n):\n    if i == 0:\n        if odds == evens - a[i]:\n            count += 1\n    else:\n        if evens == odds - a[i]:\n            count += 1\n\nprint(count)\n']
2022-04-22 10:25:59.678469 size on output set 7
