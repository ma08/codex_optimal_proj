2022-04-22 10:14:36.063554 num operations 1
2022-04-22 10:14:36.063575 size on input set 1
2022-04-22 10:14:36.063723 using api key derek
2022-04-22 10:14:48.946536 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input\n        s = input()\n        n = int(input())\n        a = list(map(int, input().split()))\n\n        # create a dictionary for the mappings\n        mapping = {}\n        for j in range(len(a)):\n            mapping[j] = a[j]\n\n        # create the result string\n        res = ''\n        for j in range(len(s)):\n            res += chr(ord('a') + mapping[j])\n\n        # print the result\n        print(res)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # read the input\n    s = input()\n    m = int(input())\n    b = list(map(int, input().split()))\n\n    # create a dictionary for the mappings\n    mapping = {}\n    for i in range(len(b)):\n        mapping[b[i]] = i\n\n    # create the result string\n    res = ''\n    for i in range(len(s)):\n        res += chr(ord('a') + mapping[i])\n\n    # print the result\n    print(res)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    # read the number of test cases\n    t = int(input())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input\n        s = input()\n        m = int(input())\n        b = list(map(int, input().split()))\n\n        # create a dictionary for the mappings\n        mapping = {}\n        for j in range(len(b)):\n            mapping[b[j]] = j\n\n        # create the result string\n        res = ''\n        for j in range(len(s)):\n            res += chr(ord('a') + mapping[j])\n\n        # print the result\n        print(res)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input\n        s = input()\n        m = int(input())\n        b = list(map(int, input().split()))\n\n        # create a dictionary for the mappings\n        mapping = {}\n        for j in range(m):\n            mapping[b[j] - 1] = j\n\n        # create the result string\n        res = []\n        for j in range(len(s)):\n            res.append(chr(ord('a') + mapping[j]))\n\n        # print the result\n        print(''.join(res))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input\n        s = input()\n        m = int(input())\n        b = list(map(int, input().split()))\n\n        # create a dictionary for the mappings\n        mapping = {}\n        for j in range(len(b)):\n            mapping[b[j]] = j\n\n        # create the result string\n        res = []\n        for j in range(len(s)):\n            res.append(chr(ord('a') + mapping[j]))\n\n        # print the result\n        print(''.join(res))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input\n        s = input()\n        n = int(input())\n        a = list(map(int, input().split()))\n\n        # create a dictionary for the mappings\n        mapping = {}\n        for j in range(len(a)):\n            mapping[a[j]] = j\n\n        # create the result string\n        res = ''\n        for j in range(len(s)):\n            res += chr(ord('a') + mapping[j])\n\n        # print the result\n        print(res)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input\n        s = input()\n        m = int(input())\n        b = list(map(int, input().split()))\n\n        # create a dictionary for the mappings\n        mapping = {}\n        for j in range(len(b)):\n            mapping[b[j]] = j\n\n        # create the result string\n        res = ''\n        for j in range(len(s)):\n            res += chr(ord('a') + mapping[j])\n\n        # print the result\n\n        print(res)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    # read the number of test cases\n    t = int(input().strip())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input\n        s = input().strip()\n        m = int(input().strip())\n        b = list(map(int, input().strip().split()))\n\n        # create a dictionary for the mappings\n        mapping = {}\n        for j in range(len(b)):\n            mapping[b[j]] = j\n\n        # create the result string\n        res = ''\n        for j in range(len(s)):\n            res += chr(ord('a') + mapping[j])\n\n        # print the result\n        print(res)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650622476,
  "object": "edit"
}
2022-04-22 10:14:48.946875 fix syntax errors 8 ['\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input\n        s = input()\n        n = int(input())\n        a = list(map(int, input().split()))\n\n        # create a dictionary for the mappings\n        mapping = {}\n        for j in range(len(a)):\n            mapping[j] = a[j]\n\n        # create the result string\n        res = \'\'\n        for j in range(len(s)):\n            res += chr(ord(\'a\') + mapping[j])\n\n        # print the result\n        print(res)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # read the input\n    s = input()\n    m = int(input())\n    b = list(map(int, input().split()))\n\n    # create a dictionary for the mappings\n    mapping = {}\n    for i in range(len(b)):\n        mapping[b[i]] = i\n\n    # create the result string\n    res = \'\'\n    for i in range(len(s)):\n        res += chr(ord(\'a\') + mapping[i])\n\n    # print the result\n    print(res)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    # read the number of test cases\n    t = int(input())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input\n        s = input()\n        m = int(input())\n        b = list(map(int, input().split()))\n\n        # create a dictionary for the mappings\n        mapping = {}\n        for j in range(len(b)):\n            mapping[b[j]] = j\n\n        # create the result string\n        res = \'\'\n        for j in range(len(s)):\n            res += chr(ord(\'a\') + mapping[j])\n\n        # print the result\n        print(res)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input\n        s = input()\n        m = int(input())\n        b = list(map(int, input().split()))\n\n        # create a dictionary for the mappings\n        mapping = {}\n        for j in range(m):\n            mapping[b[j] - 1] = j\n\n        # create the result string\n        res = []\n        for j in range(len(s)):\n            res.append(chr(ord(\'a\') + mapping[j]))\n\n        # print the result\n        print(\'\'.join(res))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input\n        s = input()\n        m = int(input())\n        b = list(map(int, input().split()))\n\n        # create a dictionary for the mappings\n        mapping = {}\n        for j in range(len(b)):\n            mapping[b[j]] = j\n\n        # create the result string\n        res = []\n        for j in range(len(s)):\n            res.append(chr(ord(\'a\') + mapping[j]))\n\n        # print the result\n        print(\'\'.join(res))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input\n        s = input()\n        n = int(input())\n        a = list(map(int, input().split()))\n\n        # create a dictionary for the mappings\n        mapping = {}\n        for j in range(len(a)):\n            mapping[a[j]] = j\n\n        # create the result string\n        res = \'\'\n        for j in range(len(s)):\n            res += chr(ord(\'a\') + mapping[j])\n\n        # print the result\n        print(res)\n\nif __name__ == "__main__":\n    main()\n', '\n\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input\n        s = input()\n        m = int(input())\n        b = list(map(int, input().split()))\n\n        # create a dictionary for the mappings\n        mapping = {}\n        for j in range(len(b)):\n            mapping[b[j]] = j\n\n        # create the result string\n        res = \'\'\n        for j in range(len(s)):\n            res += chr(ord(\'a\') + mapping[j])\n\n        # print the result\n\n        print(res)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # read the number of test cases\n    t = int(input().strip())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input\n        s = input().strip()\n        m = int(input().strip())\n        b = list(map(int, input().strip().split()))\n\n        # create a dictionary for the mappings\n        mapping = {}\n        for j in range(len(b)):\n            mapping[b[j]] = j\n\n        # create the result string\n        res = \'\'\n        for j in range(len(s)):\n            res += chr(ord(\'a\') + mapping[j])\n\n        # print the result\n        print(res)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-22 10:14:48.947028 size on output set 8
2022-04-22 10:14:48.947041 num operations 1
2022-04-22 10:14:48.947047 size on input set 1
2022-04-22 10:14:48.947185 using api key soukgp
2022-04-22 10:14:56.717117 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    s = read_line()\n    m = read_int()\n    b = read_ints()\n    t = ['a'] * len(s)\n    for i in range(len(s)-1, -1, -1):\n        t[i] = chr(ord(s[i])+b[i])\n    return ''.join(t)\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    s = read_line()\n    m = read_int()\n    b = read_ints()\n    t = ['a'] * len(s) # init\n    for i in range(len(s)-1, -1, -1):\n        t[i] = chr(ord(s[i])+b[i])\n    return ''.join(t)\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\ndef read_ints():\n\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    s = read_line()\n    m = read_int()\n    b = read_ints()\n    t = ['a'] * len(s)\n    for i in range(len(s)-1, -1, -1):\n        t[i] = chr(ord(s[i])+b[i])\n    return ''.join(t)\n\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    s = read_line()\n    m = read_int()\n    b = read_ints()\n    t = ['a'] * len(s)\n    for i in range(len(s)-1, -1, -1):\n        t[i] = chr(ord(s[i])+b[i])\n    return ''.join(t)\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split().split(' ')))\n\ndef solve():\n    s = read_line()\n    m = read_int()\n    b = read_ints()\n    t = ['a'] * len(s)\n    for i in range(len(s)-1, -1, -1):\n        t[i] = chr(ord(s[i])+b[i])\n    return ''.join(t)\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    s = read_line()\n    m = read_int()\n    b = read_ints()\n    t = ['a'] * len(s)\n    for i in range(len(s)-1, -1, -1):\n        t[i] = chr(ord(s[i])+b[i])\n    return ''.join(t)\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n        \nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\n\ndef read_int():\n    return int(sys.stdin.readline())\n\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\n\ndef read_ints():\n\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    s = read_line()\n    m = read_int()\n    b = read_ints()\n    t = ['a'] * len(s)\n    for i in range(len(s)-1, -1, -1):\n        t[i] = chr(ord(s[i])+b[i])\n    return ''.join(t)\n\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    s = read_line()\n    m = read_int()\n    b = read_ints()\n    t = ['a'] * len(s)\n    for i in range(len(s)-1, -1, -1):\n        t[i] = chr(ord(s[i])+b[i])\n    return ''.join(t)\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650622488,
  "object": "edit"
}
2022-04-22 10:14:56.717482 fix syntax errors 8 ["import sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    s = read_line()\n    m = read_int()\n    b = read_ints()\n    t = ['a'] * len(s)\n    for i in range(len(s)-1, -1, -1):\n        t[i] = chr(ord(s[i])+b[i])\n    return ''.join(t)\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    s = read_line()\n    m = read_int()\n    b = read_ints()\n    t = ['a'] * len(s) # init\n    for i in range(len(s)-1, -1, -1):\n        t[i] = chr(ord(s[i])+b[i])\n    return ''.join(t)\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\ndef read_ints():\n\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    s = read_line()\n    m = read_int()\n    b = read_ints()\n    t = ['a'] * len(s)\n    for i in range(len(s)-1, -1, -1):\n        t[i] = chr(ord(s[i])+b[i])\n    return ''.join(t)\n\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    s = read_line()\n    m = read_int()\n    b = read_ints()\n    t = ['a'] * len(s)\n    for i in range(len(s)-1, -1, -1):\n        t[i] = chr(ord(s[i])+b[i])\n    return ''.join(t)\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split().split(' ')))\n\ndef solve():\n    s = read_line()\n    m = read_int()\n    b = read_ints()\n    t = ['a'] * len(s)\n    for i in range(len(s)-1, -1, -1):\n        t[i] = chr(ord(s[i])+b[i])\n    return ''.join(t)\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    s = read_line()\n    m = read_int()\n    b = read_ints()\n    t = ['a'] * len(s)\n    for i in range(len(s)-1, -1, -1):\n        t[i] = chr(ord(s[i])+b[i])\n    return ''.join(t)\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n        \nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\n\ndef read_int():\n    return int(sys.stdin.readline())\n\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\n\ndef read_ints():\n\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    s = read_line()\n    m = read_int()\n    b = read_ints()\n    t = ['a'] * len(s)\n    for i in range(len(s)-1, -1, -1):\n        t[i] = chr(ord(s[i])+b[i])\n    return ''.join(t)\n\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    s = read_line()\n    m = read_int()\n    b = read_ints()\n    t = ['a'] * len(s)\n    for i in range(len(s)-1, -1, -1):\n        t[i] = chr(ord(s[i])+b[i])\n    return ''.join(t)\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-22 10:14:56.717623 size on output set 7
