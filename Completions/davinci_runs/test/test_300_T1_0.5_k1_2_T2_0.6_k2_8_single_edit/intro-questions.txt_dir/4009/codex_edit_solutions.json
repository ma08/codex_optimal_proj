["\n\nn, x, y = map(int, input().split())\nn = list(str(input()))\n\nif n[y] == '0':\n    n[y] = '1'\nelse:\n    n[y] = '0'\n    for i in range(y+1, len(n)):\n        if n[i] == '0':\n            n[i] = '1'\n            break\n        else:\n            n[i] = '0'\n\nprint(n.count('0'))\n", "\n\ndef solve(n, x, y, number, z):\n    operations = 0\n    for i in range(n-z):\n        if number[i] != number[i+z-y]:\n            operations += 1\n    return operations\n\ndef main():\n    n, x, y = map(int, input().split())\n    number = input()\n    z = x-y\n    print(solve(n, x, y, number, z))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef solve(n, x, y, number, operations):\n    operations = 0\n    for i in range(n - x):\n        if number[i] != number[i + x - y]:\n            operations = operations + 1\n    return operations \n\ndef main():\n    n, x, y = map(int, input().split())\n    number = input()\n    print(solve(n, x, y, number))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef solve(n, x, y, number):\n    operations = 0\n    for i in range(x, n):\n        if number[i] != number[i-x+y]:\n            operations += 1\n    return operations\n\ndef main():\n    n, x, y = map(int, input().split())\n    number = input()\n    print(solve(n, x, y, number))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn, x, y = map(int, input().split())  # n: num of digits, x: position of 1st 0, y: position of 1st 1\nn = list(input())  # List of binary digits\n\nfor i in range(y, x, -1):\n    if n[i] == '0':\n        n[i] = '1'\n        break\n    else:\n        n[i] = '0'\n\nprint(n.count('0'))\n", "\n\ndef solve(n, x, y, number):\n    operations = 0\n    for i in range(n-x):\n        if number[i] != number[i+x-y]:\n            operations += 1\n    return operations\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    number = input()\n    print(solve(n, x, y, number))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nn, x, y = map(int, input().split())\nn = list(input())\n\nif n[y] == '0':\n    n[y] = '1'\nelse:\n    n[y] = '0'\n    for i in range(y+1, x):\n        if n[i] == '0':\n            n[i] = '1'\n            break\n        else:\n            n[i] = '0'\n\nprint(n.count('0'))\n", "n = int(input())\ns = [int(input()) for i in range(n)]\n\n\ndef cnt_b(a):\n    cnt = 0\n    for i in range(n):\n        if s[i] == a:\n            cnt += 1\n    return cnt\n\ndef cnt_w(a):\n    cnt = 0\n    for i in range(n):\n        if s[i] == a:\n            cnt += 1\n    return cnt\n\nif cnt_b(0) > cnt_w(1):\n    print(cnt_w(1))\nelse:\n    print(cnt_b(0))\n", "\n\ndef solve(n, x, y, number):\n    operations = 0\n    for i in range(n-x+1):\n        if number[i] != number[i+x-y]:\n            operations += 1\n    return operations\n\ndef main():\n    n, x, y = map(int, input().split())\n    number = input()\n    print(solve(n, x, y, number))\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef solve():\n    return 0\n\ndef main():\n    print(solve())\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\nsys.setrecursionlimit(1000000)\n\nn, x, y = map(int, input().split())\nn = list(input())\nprint(n)\n", "\n\ndef solve(n, x, y, number):\n    operations = 0\n    for i in range(n-y):\n        if number[i] != number[i+x]:\n            operations += 1\n    return operations\n\ndef main():\n    n, x, y = map(int, input().split())\n    number = input()\n    print(solve(n, x, y, number))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn, x, y = map(int, input().split())\nn = list(input())  # \u5165\u529b\u3057\u305f\u6587\u5b57\u3092\u30ea\u30b9\u30c8\u306b\u5909\u63db\n\nif n[y] == '0':\n    n[y] = '1'\nelse:\n    n[y] = '0'\n    for i in range(y+1, x):\n        if n[i] == '0':\n            n[i] = '1'\n            break\n        else:\n            n[i] = '0'\n\nprint(n.count('0'))\n", "\n\ndef solve(n, x, y, number):\n    operations = 0\n    for i in range(n-y+1):\n        if number[i] != number[i+x]:\n            operations += 1\n    return operations\n\ndef main():\n    n, x, y = map(int, input().split())\n    number = input()\n    print(solve(n, x, y, number))\n\nif __name__ == \"__main__\":\n    main()\n"]