2022-04-22 10:53:25.721153 num operations 1
2022-04-22 10:53:25.721174 size on input set 1
2022-04-22 10:53:25.721366 using api key kouti
2022-04-22 10:54:09.524382 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Solution\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k == 1:\n    print(max(a))\nelse:\n    print(max(a) - min(a) + 1)\n"
    },
    {
      "index": 1,
      "text": "\n#\n# Solution\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k == 1:\n    print(max(a))\nelse:\n#\n    print(max(a) - min(a) + 1)\n"
    },
    {
      "index": 2,
      "text": "\n# Solution\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k == 1:\n    print(max(a))\nelse:\n    print(max(a) - min(a) + 1)\n"
    },
    {
      "index": 3,
      "text": "\n# 2019-02-09\n# Solution\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k == 1:\n    print(max(a))\nelse:\n    print(max(a) - min(a) + 1)\n"
    },
    {
      "index": 4,
      "text": "\n\n\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n\n# \u0421\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438\u0437 \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430 \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u0435 \u043f\u043e \u043f\u043e\u0440\u044f\u0434\u043a\u0443 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0432 \u043d\u0435\u0433\u043e \u0446\u0438\u0444\u0440 \u0438 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0435\u0441\u043b\u0438 \u0432\u0432\u0435\u0434\u0435\u043d\u043e \u0447\u0438\u0441\u043b\u043e 3486, \u043d\u0430\u0434\u043e \u0432\u044b\u0432\u0435\u0441\u0442\u0438 6843.\n\nn = int(input())\n\nwhile n > 0:\n    print(n % 10, end='')\n    n //= 10\n\n\n# \u0414\u0430\u0442\u0447\u0438\u043a \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0441\u0438\u0433\u043d\u0430\u043b, \u0441\u043e\u0441\u0442\u043e\u044f\u0449\u0438\u0439 \u0438\u0437 0 \u0438 1. \u0418\u0437\u0432\u0435\u0441\u0442\u043d\u043e, \u0447\u0442\u043e \u0441\u0438\u0433\u043d\u0430\u043b \u0438\u043c\u0435\u0435\u0442 \u043f\u0435\u0440\u0438\u043e\u0434\u0438\u0447\u043d\u043e\u0441\u0442\u044c, \u043d\u0435 \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u044e\u0449\u0435\u0439 \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430 n. \u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043a\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0438\u043e\u0434\u0438\u0447\u043d\u043e\u0441\u0442\u044c \u0441\u0438\u0433\u043d\u0430\u043b\u0430. \u0421\u0447\u0438\u0442\u0430\u0439\u0442\u0435, \u0447\u0442\u043e 3 < n < 1000, \u0430 \u043e\u0431\u0449\u0430\u044f \u0434\u043b\u0438\u043d\u0430 \u0441\u0438\u0433\u043d\u0430\u043b\u0430 \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u0435\u0442 n.\n\ns = input()\nn = len(s)\n\nfor i in range(n):\n    if s[:i] == s[i:2*i]:\n        print(i)\n        break\n\n\n# \u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043d\u0430 \u0432\u0445\u043e\u0434 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043f\u043e\u0434\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0430\u044f \u043c\u0430\u0442\u0440\u0438\u0446\u0430 \u0432 \u0432\u0438\u0434\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0441\u0442\u0440\u043e\u043a, \u0437\u0430\u043a\u0430\u043d\u0447\u0438\u0432\u0430\u044e\u0449\u0438\u0445\u0441\u044f \u0441\u0442\u0440\u043e\u043a\u043e\u0439, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0439 \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u0442\u0440\u043e\u043a\u0443 \"end\" (\u0431\u0435\u0437 \u043a\u0430\u0432\u044b\u0447\u0435\u043a)\n\n# \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u043c\u0430\u0442\u0440\u0438\u0446\u0443 \u0442\u043e\u0433\u043e \u0436\u0435 \u0440\u0430\u0437\u043c\u0435\u0440\u0430, \u0443 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043a\u0430\u0436\u0434\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0432 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 i, j \u0440\u0430\u0432\u0435\u043d \u0441\u0443\u043c\u043c\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043f\u0435\u0440\u0432\u043e\u0439 \u043c\u0430\u0442\u0440\u0438\u0446\u044b \u043d\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u044f\u0445 (i-1, j), (i+1, j), (i, j-1), (i, j+1). \u0423 \u043a\u0440\u0430\u0439\u043d\u0438\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0441\u043e\u0441\u0435\u0434\u043d\u0438\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0441 \u043f\u0440\u043e\u0442\u0438\u0432\u043e\u043f\u043e\u043b\u043e\u0436\u043d\u043e\u0439 \u0441\u0442\u043e\u0440\u043e\u043d\u044b \u043c\u0430\u0442\u0440\u0438\u0446\u044b.\n\n# \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438/\u0441\u0442\u043e\u043b\u0431\u0446\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0441\u0430\u043c \u0441\u0435\u0431\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u043e\u0441\u0435\u0434\u043e\u043c \u043f\u043e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u043c\u0443 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044e.\n\na = []\n\nwhile True:\n    s = input()\n    if s == 'end':\n        break\n    a.append([int(i) for i in s.split()])\n\nfor i in range(len(a)):\n    for j in range(len(a[i])):\n        print(a[i - 1][j] + a[(i + 1) % len(a)][j] + a[i][j - 1] + a[i][(j + 1) % len(a[i])], end=' ')\n    print()\n\n\n# \u0412 \u0438\u043d\u0441\u0442\u0438\u0442\u0443\u0442\u0435 \u0431\u0438\u043e\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u043a\u0438 \u043f\u043e \u043e\u0444\u0438\u0441\u0443 \u043f\u0435\u0440\u0435\u0434\u0432\u0438\u0433\u0430\u0435\u0442\u0441\u044f \u0440\u043e\u0431\u043e\u0442. \u041d\u0435\u0434\u0430\u0432\u043d\u043e \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u044b \u0438\u0437 \u0433\u0440\u0443\u043f\u043f\u044b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0441\u0442\u043e\u0432 \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0438 \u0434\u043b\u044f \u043d\u0435\u0433\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0440\u043e\u0431\u043e\u0442, \u043a\u043e\u0433\u0434\u0430 \u0437\u0430\u0445\u043e\u0434\u0438\u0442 \u0432 \u043a\u043e\u043c\u043d\u0430\u0442\u0443, \u0441\u0447\u0438\u0442\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0441\u0442\u043e\u0432 \u0432 \u043d\u0435\u0439 \u0438 \u043f\u0440\u043e\u0438\u0437\u043d\u043e\u0441\u0438\u0442 \u0435\u0433\u043e \u0432\u0441\u043b\u0443\u0445: \"n \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0441\u0442\u043e\u0432\".\n\n# \u0414\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u044d\u0442\u043e \u0437\u0432\u0443\u0447\u0430\u043b\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e, \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e n \u043d\u0443\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u0435\u0440\u043d\u043e\u0435 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u0435 \u0441\u043b\u043e\u0432\u0430.\n\n# \u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u044e\u0449\u0443\u044e \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0432\u0432\u043e\u0434\u0430 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e n (\u043d\u0435\u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435), \u0432\u044b\u0432\u043e\u0434\u044f\u0449\u0435\u0435 \u044d\u0442\u043e \u0447\u0438\u0441\u043b\u043e \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u0432\u043c\u0435\u0441\u0442\u0435 \u0441 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u0438\u0437\u043c\u0435\u043d\u0451\u043d\u043d\u044b\u043c \u0441\u043b\u043e\u0432\u043e\u043c \"\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0441\u0442\", \u0434\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0440\u043e\u0431\u043e\u0442 \u043c\u043e\u0433 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e \u043e\u0431\u0449\u0430\u0442\u044c\u0441\u044f \u0441 \u043b\u044e\u0434\u044c\u043c\u0438, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: 1 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0441\u0442, 2 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0441\u0442\u0430, 5 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0441\u0442\u043e\u0432.\n\n# \u0412 \u043a\u043e\u043c\u043d\u0430\u0442\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043e\u0447\u0435\u043d\u044c \u043c\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0441\u0442\u043e\u0432. \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e\n# Solution\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k == 1:\n    print(max(a))\nelse:\n    print(max(a) - min(a) + 1)\n"
    },
    {
      "index": 5,
      "text": "\n# Solution\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k == 1:\n    print(max(a))\nelse:\n    print(max(a) - min(a) + 1)\n"
    },
    {
      "index": 6,
      "text": "\n\n# Solution\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k == 1:\n    print(max(a))\nelse:\n\n    print(max(a) - min(a) + 1)\n"
    },
    {
      "index": 7,
      "text": "\n# Solution\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k == 1:\n    print(max(a))\nelse:\n    print(max(a) - min(a) + 1)\n"
    }
  ],
  "created": 1650624805,
  "object": "edit"
}
2022-04-22 10:54:09.524835 fix syntax errors 8 ['\n# Solution\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k == 1:\n    print(max(a))\nelse:\n    print(max(a) - min(a) + 1)\n', '\n#\n# Solution\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k == 1:\n    print(max(a))\nelse:\n#\n    print(max(a) - min(a) + 1)\n', '\n# Solution\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k == 1:\n    print(max(a))\nelse:\n    print(max(a) - min(a) + 1)\n', '\n# 2019-02-09\n# Solution\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k == 1:\n    print(max(a))\nelse:\n    print(max(a) - min(a) + 1)\n', '\n\n\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n\n# Сформировать из введенного числа обратное по порядку входящих в него цифр и вывести на экран. Например, если введено число 3486, надо вывести 6843.\n\nn = int(input())\n\nwhile n > 0:\n    print(n % 10, end=\'\')\n    n //= 10\n\n\n# Датчик принимает сигнал, состоящий из 0 и 1. Известно, что сигнал имеет периодичность, не превышающей натурального числа n. Напишите код, который вычисляет периодичность сигнала. Считайте, что 3 < n < 1000, а общая длина сигнала значительно превышает n.\n\ns = input()\nn = len(s)\n\nfor i in range(n):\n    if s[:i] == s[i:2*i]:\n        print(i)\n        break\n\n\n# Напишите программу, на вход которой подается прямоугольная матрица в виде последовательности строк, заканчивающихся строкой, содержащей только строку "end" (без кавычек)\n\n# Программа должна вывести матрицу того же размера, у которой каждый элемент в позиции i, j равен сумме элементов первой матрицы на позициях (i-1, j), (i+1, j), (i, j-1), (i, j+1). У крайних символов соседний элемент находится с противоположной стороны матрицы.\n\n# В случае одной строки/столбца элемент сам себе является соседом по соответствующему направлению.\n\na = []\n\nwhile True:\n    s = input()\n    if s == \'end\':\n        break\n    a.append([int(i) for i in s.split()])\n\nfor i in range(len(a)):\n    for j in range(len(a[i])):\n        print(a[i - 1][j] + a[(i + 1) % len(a)][j] + a[i][j - 1] + a[i][(j + 1) % len(a[i])], end=\' \')\n    print()\n\n\n# В институте биоинформатики по офису передвигается робот. Недавно студенты из группы программистов написали для него программу, по которой робот, когда заходит в комнату, считает количество программистов в ней и произносит его вслух: "n программистов".\n\n# Для того, чтобы это звучало правильно, для каждого n нужно использовать верное окончание слова.\n\n# Напишите программу, считывающую с пользовательского ввода целое число n (неотрицательное), выводящее это число в консоль вместе с правильным образом изменённым словом "программист", для того, чтобы робот мог нормально общаться с людьми, например: 1 программист, 2 программиста, 5 программистов.\n\n# В комнате может быть очень много программистов. Проверьте, что\n# Solution\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k == 1:\n    print(max(a))\nelse:\n    print(max(a) - min(a) + 1)\n', '\n# Solution\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k == 1:\n    print(max(a))\nelse:\n    print(max(a) - min(a) + 1)\n', '\n\n# Solution\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k == 1:\n    print(max(a))\nelse:\n\n    print(max(a) - min(a) + 1)\n', '\n# Solution\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k == 1:\n    print(max(a))\nelse:\n    print(max(a) - min(a) + 1)\n']
2022-04-22 10:54:09.524929 size on output set 5
2022-04-22 10:54:09.524940 num operations 1
2022-04-22 10:54:09.524946 size on input set 1
2022-04-22 10:54:09.525112 using api key soukgp
2022-04-22 10:54:18.431904 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if a[i] % 2 == 1:\n        a[i] -= 1\n        ans += 1\n\nprint(ans + (sum(a) // k + 1) // 2)\n"
    },
    {
      "index": 1,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if a[i] % 2 == 1:\n        a[i] -= 1\n        ans += 1\n\nprint(ans + (sum(a) + k - 1) // k - 1)\n"
    },
    {
      "index": 2,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if a[i] % 2 != 0:\n        a[i] -= 1\n        ans += 1\n\nif sum(a) // k < 2:\n    print(ans)\nelse:\n    print(ans + sum(a) // k - 1)\n"
    },
    {
      "index": 3,
      "text": "n = int(input())\na = list(map(int, input().split())) + [0]\nprint(a)\n"
    },
    {
      "index": 4,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if a[i] % 2 == 1:\n        a[i] -= 1\n        ans += 1\n\nif sum(a) // k < 2:\n    print(ans)\nelse:\n    print(ans + sum(a) // k)\n"
    },
    {
      "index": 5,
      "text": "n, k = map(int, input().split())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if a[i] % 2 == 1:\n        a[i] -= 1\n        ans += 1\n\nif sum(a) // k < 2:\n    print(ans)\nelse:\n    print(ans + sum(a) // k - 1)\n"
    },
    {
      "index": 6,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if a[i] % 2 == 1:\n        a[i] -= 1\n        ans += 1\n\nif sum(a) // k <= 2:\n    print(ans)\nelse:\n    print(ans + sum(a) // k - 1)\n"
    },
    {
      "index": 7,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if a[i] % 2 == 1:\n        a[i] -= 1\n        ans += 1\n\nif sum(a) // k < 2:\n    print(ans)\nelse:\n    print(ans + (sum(a) // k - 1))\n"
    }
  ],
  "created": 1650624849,
  "object": "edit"
}
2022-04-22 10:54:18.432174 fix syntax errors 8 ['\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if a[i] % 2 == 1:\n        a[i] -= 1\n        ans += 1\n\nprint(ans + (sum(a) // k + 1) // 2)\n', '\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if a[i] % 2 == 1:\n        a[i] -= 1\n        ans += 1\n\nprint(ans + (sum(a) + k - 1) // k - 1)\n', '\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if a[i] % 2 != 0:\n        a[i] -= 1\n        ans += 1\n\nif sum(a) // k < 2:\n    print(ans)\nelse:\n    print(ans + sum(a) // k - 1)\n', 'n = int(input())\na = list(map(int, input().split())) + [0]\nprint(a)\n', '\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if a[i] % 2 == 1:\n        a[i] -= 1\n        ans += 1\n\nif sum(a) // k < 2:\n    print(ans)\nelse:\n    print(ans + sum(a) // k)\n', 'n, k = map(int, input().split())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if a[i] % 2 == 1:\n        a[i] -= 1\n        ans += 1\n\nif sum(a) // k < 2:\n    print(ans)\nelse:\n    print(ans + sum(a) // k - 1)\n', '\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if a[i] % 2 == 1:\n        a[i] -= 1\n        ans += 1\n\nif sum(a) // k <= 2:\n    print(ans)\nelse:\n    print(ans + sum(a) // k - 1)\n', '\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if a[i] % 2 == 1:\n        a[i] -= 1\n        ans += 1\n\nif sum(a) // k < 2:\n    print(ans)\nelse:\n    print(ans + (sum(a) // k - 1))\n']
2022-04-22 10:54:18.432310 size on output set 8
