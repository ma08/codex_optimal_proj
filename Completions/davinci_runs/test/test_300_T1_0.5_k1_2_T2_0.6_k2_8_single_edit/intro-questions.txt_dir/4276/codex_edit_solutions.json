["\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\nN, T = map(int, sys.stdin.readline().split())\nmin_cost = T + 1\nfor _ in range(N):\n    cost, time = map(int, sys.stdin.readline().split())\n    if time <= T:\n        min_cost = min(min_cost, cost)\nif min_cost > T:\n    print(\"TLE\")\nelse:\n    print(min_cost)\n", "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n    if t <= T:\n        costs.append(c)\n        times.append(t)\nif len(costs) == 0 or len(times) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "# solved\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n", "# abc 080 B\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\nif __name__ == \"__main__\":\n    main()\n", "\nN, T = map(int, input().split())\ncosts = [0] * N\ntimes = [0] * N\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs[i] = c\n    times[i] = t\ncosts = [costs[i] for i in range(N) if times[i] <= T]\nif not costs:\n    print('TLE')\nelse:\n    print(min(costs))\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print('TLE')\n    else:\n        print(min_cost)\n\nif __name__ == '__main__':\n    main()\n", "# coding: UTF-8\n\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "import sys\n\n\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n", "# -*- coding: utf-8 -*-\n\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T] # \u8cbb\u7528\u30ea\u30b9\u30c8\u306e\u3046\u3061\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3082\u306e\u3092\u53d6\u308a\u51fa\u3059\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"]