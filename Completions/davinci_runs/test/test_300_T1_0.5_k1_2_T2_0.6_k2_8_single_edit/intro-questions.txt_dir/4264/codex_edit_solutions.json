["N = int(input())\n\ncount = 0\nfor i in range(1, N+1):\n    count += len(str(i)) % 2\n\nprint(count)\n", "\n\nN = int(input()) # \u6574\u6570\u306e\u5165\u529b\n\nif N % 2 == 0:\n    print(N)\nelse:\n    print(2*N)\n", "\nN = int(input())\n\ncount = 0\nfor i in range(1, N+1):\n    count += len(str(i)) % 2\n\nprint(count)\n", "\nprint(\"hello world\")\n", "\nprint('Hello World')\n", "\n\nN = int(input())\n\nodd_count = 0\nif N % 2 == 0:\n    odd_count = N // 2\nelse:\n    odd_count = N // 2 + 1\n\nprint(odd_count)\n", "N = int(input())\n\nodd_count = 0\nfor i in range(1, N + 1):\n    if len(str(i)) % 2 == 1:\n        odd_count += 1\n\nprint(odd_count)\n", "\n\nN = int(input())\n\ncount = 0\nfor i in range(1, N+1):\n    count += len(str(i)) % 2\n\n\n\n# def is_prime_number(n):\n#     if n > 1:\n#         for i in range(2, n):\n#             if n % i == 0:\n#                 return False\n#         return True\n#     else:\n#         return False\n\n\n# n = int(input())\n# if is_prime_number(n):\n#     print(\"YES\")\n# else:\n#     print(\"NO\")\n\n# n = int(input())\n# for i in range(n):\n#     print(\"*\"*(i+1))\n\n\n# n = int(input())\n# for i in range(n):\n#     print(\" \"*(n-i-1) + \"*\"*(i+1))\n\n\n# n = int(input())\n# for i in range(n):\n#     print(\" \"*(n-i-1) + \"*\"*(i*2+1))\n\n\n# n = int(input())\n# for i in range(n):\n#     print(\"*\"*(n-i) + \" \"*(i*2) + \"*\"*(n-i))\n\n\n# n = int(input())\n# for i in range(n):\n#     print(\" \"*(n-i-1) + \"*\"*(i*2+1))\n# for i in range(n-2, -1, -1):\n#     print(\" \"*(n-i-1) + \"*\"*(i*2+1))\n\n\n# n = int(input())\n# for i in range(n):\n#     print(\"*\"*(n-i) + \" \"*(i*2) + \"*\"*(n-i))\n# for i in range(n-2, -1, -1):\n#     print(\"*\"*(n-i) + \" \"*(i*2) + \"*\"*(n-i))\n\n\n# n = int(input())\n# for i in range(n):\n#     print(\" \"*(n-i-1) + \"*\"*(i*2+1))\n# for i in range(n-2, -1, -1):\n#     print(\" \"*(n-i-1) + \"*\"*(i*2+1))\n# for i in range(n-2, -1, -1):\n#     print(\" \"*(n-i-1) + \"*\"*(i*2+1))\n# for i in range(n-2, -1, -1):\n#     print(\" \"*(n-i-1) + \"*\"*(i*2+1))\n\n\n# n = int(input())\n# for i in range(n):\n#     print(\" \"*(n-i-1) + \"*\"*(i*2+1))\n# for i in range(n-2, -1, -1):\n#     print(\" \"*(n-i-1) + \"*\"*(i*2+1))\n# for i in range(n-2, -1, -1):\n#     print(\" \"*(n-i-1) + \"*\"*(i*2+1))\n# for i in range(n-2, -1, -1):\n#     print(\" \"*(n-i-1) + \"*\"*(i*2+1))\n# for i in range(n-2, -1, -1):\n#     print(\" \"*(n-i-1) + \"*\"*(i*2+1))\n# for i in range(n-2, -1, -1):\n#     print(\" \"*(n-i-1) + \"*\"*(i*2+1))\nprint(count)\n", "A,B = map(int, input().split())\nprint(min(B-A, A+10-B))\n# if A <= B:\n#     print(min(B-A, A+10-B))\n# else:\n#     print(min(A-B, B+10-A))\n", "\nN = int(input())\n\nodd_count = 0\nfor i in range(1, N + 1):\n    if len(str(i)) % 2 == 1:\n        odd_count += 1\n\nprint(odd_count)\n", "\n\nN = int(input())\n\ncount = 0\nfor i in range(1, N+1):\n    count += len(str(i)) % 2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint(count)\n"]