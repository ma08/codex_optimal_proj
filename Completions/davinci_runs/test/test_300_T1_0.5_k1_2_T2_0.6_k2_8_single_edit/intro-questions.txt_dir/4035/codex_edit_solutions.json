["\nimport math\n\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n", "\n\nimport unittest\nimport math\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 2), 1)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n", "import math\n\na, b = map(int, input().split())\n\nfor i in range(1, a + 1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n", "\n\nimport unittest\nimport math\n\ndef main(A, B):\n    if B % A != 0:\n    return B // A\n\n        return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 2), 25)\n        self.assertEqual(main(8, 9), -1)\n\n\nif __name__ == '__main__':\n    unittest.main()\n", "\n\nimport unittest\nimport math\n\ndef main(A, B):\n    if B % A == 0:\n        return B / A\n    else:\n        return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 2), 1)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n", "\n\nimport math\n\na, b = map(float, input().split())\n\nfor i in range(1, math.ceil(b / 0.1)+1):\n    if math.floor(i * 0.08) == a and math.ceil(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n", "\nimport unittest\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 4), 2)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n", "\n\nimport unittest\nimport math\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 4), 2)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n", "import math\n\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n", "\ndef solve(s):\n    if s[0] == 'R' and s[1] == 'R' and s[2] == 'R':\n        return 3\n    elif s[0] == 'R' and s[1] == 'R' and s[2] == 'S':\n        return 2\n    elif s[0] == 'R' and s[1] == 'S' and s[2] == 'S':\n        return 1\n    elif s[0] == 'S' and s[1] == 'S' and s[2] == 'S':\n        return 0\n    elif s[0] == 'S' and s[1] == 'S' and s[2] == 'R':\n        return 1\n    elif s[0] == 'S' and s[1] == 'R' and s[2] == 'R':\n        return 2\n    elif s[0] == 'R' and s[1] == 'S' and s[2] == 'R':\n        return 2\n    elif s[0] == 'S' and s[1] == 'R' and s[2] == 'S':\n        return 2\n    else:\n        return -1\n", "#!/usr/bin/env python\n# coding: utf-8\n# Author: Olga Romanenko\n# Created: 02.12.2018\n\nimport math\n\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n", "\n\nimport unittest\n\ndef main(a, b):\n    if b % a == 0:\n        return b // a\n    else:\n        return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 2), 1)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n"]