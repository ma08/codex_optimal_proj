2022-04-22 11:05:08.806668 num operations 1
2022-04-22 11:05:08.806689 size on input set 1
2022-04-22 11:05:08.806838 using api key sunu
2022-04-22 11:05:17.604440 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\nn = int(input())\na_list = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans = max(ans, gcd(a_list[i], a_list[j]))\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "def gcd(a, b):\n    if a % b == 0:\n        return b\n    return gcd(b, a % b)\n\nn = int(input())\na_list = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans = max(ans, gcd(a_list[i], a_list[j]))\n\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "from math import gcd\n\nn = int(input())\na_list = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans = max(ans, gcd(a_list[i], a_list[j])\n\nprint(ans)\n"
    },
    {
      "index": 3,
      "text": "from math import gcd\n\nn = int(input())\na_list = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans = max(ans, gcd(a_list[i], a_list[j]))\n\nprint(ans)\n"
    },
    {
      "index": 4,
      "text": "\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n"
    },
    {
      "index": 5,
      "text": "from math import gcd\n\n\nn = int(input())\na_list = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans = max(ans, gcd(a_list[i], a_list[j]))\n\nprint(ans)\n"
    },
    {
      "index": 6,
      "text": "\n\nn = int(input())\na_list = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans = max(ans, gcd(a_list[i], a_list[j]))\nprint(ans)\n"
    },
    {
      "index": 7,
      "text": "\n\nn = int(input())\na_list = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans = max(ans, gcd(a_list[i], a_list[j])-1)\n\nprint(ans)\n"
    }
  ],
  "created": 1650625508,
  "object": "edit"
}
2022-04-22 11:05:17.604844 fix syntax errors 8 ['def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\nn = int(input())\na_list = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans = max(ans, gcd(a_list[i], a_list[j]))\n\nprint(ans)\n', 'def gcd(a, b):\n    if a % b == 0:\n        return b\n    return gcd(b, a % b)\n\nn = int(input())\na_list = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans = max(ans, gcd(a_list[i], a_list[j]))\n\nprint(ans)\n', 'from math import gcd\n\nn = int(input())\na_list = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans = max(ans, gcd(a_list[i], a_list[j])\n\nprint(ans)\n', 'from math import gcd\n\nn = int(input())\na_list = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans = max(ans, gcd(a_list[i], a_list[j]))\n\nprint(ans)\n', '\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n', 'from math import gcd\n\n\nn = int(input())\na_list = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans = max(ans, gcd(a_list[i], a_list[j]))\n\nprint(ans)\n', '\n\nn = int(input())\na_list = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans = max(ans, gcd(a_list[i], a_list[j]))\nprint(ans)\n', '\n\nn = int(input())\na_list = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans = max(ans, gcd(a_list[i], a_list[j])-1)\n\nprint(ans)\n']
2022-04-22 11:05:17.604891 size on output set 8
2022-04-22 11:05:17.604906 num operations 1
2022-04-22 11:05:17.604912 size on input set 1
2022-04-22 11:05:17.605051 using api key derek
2022-04-22 11:05:30.423005 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# \u5165\u529b\nN = int(input())\nA = list(map(int, input().split()))\n\n# \u6700\u5927\u516c\u7d04\u6570\u3092\u6c42\u3081\u308b\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a%b)\n\n# \u521d\u671f\u5024\u3092\u5b9a\u7fa9\ngcd_max = 0\n\n# \u5168\u7d44\u307f\u5408\u308f\u305b\nfor i in range(N):\n    for j in range(N):\n        # \u81ea\u5206\u81ea\u8eab\u3068\u6bd4\u8f03\u3057\u306a\u3044\n        if i != j:\n            # \u6700\u5927\u516c\u7d04\u6570\n            gcd_tmp = gcd(A[i], A[j])\n            # \u66f4\u65b0\n            if gcd_max < gcd_tmp:\n                gcd_max = gcd_tmp\n\n# \u51fa\u529b\nprint(gcd_max)\n"
    },
    {
      "index": 1,
      "text": "\n\n# \u6570\u5024\u5165\u529b\na, b = map(int, input().split())\n\n# \u6570\u5024\u51fa\u529b\nprint(a*b)\n\n"
    },
    {
      "index": 2,
      "text": "\n# \u5165\u529b\nN = int(input())\nA = list(map(int, input().split()))\n\n# \u6700\u5927\u516c\u7d04\u6570\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a%b)\n\n# \u521d\u671f\u5024\ngcd_max = 0\n\n# \u5168\u7d44\u307f\u5408\u308f\u305b\nfor i in range(N):\n    for j in range(N):\n        # \u81ea\u5206\u81ea\u8eab\u3068\u6bd4\u8f03\u3057\u306a\u3044\n        if i != j:\n            # \u6700\u5927\u516c\u7d04\u6570\n            gcd_tmp = gcd(A[i], A[j])\n            # \u66f4\u65b0\n            if gcd_max < gcd_tmp:\n                gcd_max = gcd_tmp\n\n# \u51fa\u529b\nprint(gcd_max)\n"
    },
    {
      "index": 3,
      "text": "\n# \u5165\u529b\nN = int(input())\nA = list(map(int, input().split()))\n\n# \u6700\u5927\u516c\u7d04\u6570\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a%b)\n\n# \u521d\u671f\u5024\ngcd_max = 0\n\n# \u5168\u7d44\u307f\u5408\u308f\u305b\nfor i in range(N):\n    for j in range(N):\n        # \u81ea\u5206\u81ea\u8eab\u3068\u6bd4\u8f03\u3057\u306a\u3044\n        if i != j:\n            # \u6700\u5927\u516c\u7d04\u6570\n            gcd_tmp = gcd(A[i], A[j])\n            # \u66f4\u65b0\n            if gcd_max < gcd_tmp:\n                gcd_max = gcd_tmp\n\n# \u51fa\u529b\nprint(gcd_max)\n"
    },
    {
      "index": 4,
      "text": "\n\n# \u5165\u529b\nN = int(input())\nA = list(map(int, input().split()))\n\n# \u6700\u5927\u516c\u7d04\u6570\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a%b)\n\n# \u521d\u671f\u5024\ngcd_max = 0\n\n# \u5168\u7d44\u307f\u5408\u308f\u305b\nfor i in range(N):\n    for j in range(N):\n        # \u81ea\u5206\u81ea\u8eab\u3068\u6bd4\u8f03\u3057\u306a\u3044\n        if i < j:\n            # \u6700\u5927\u516c\u7d04\u6570\n            gcd_tmp = gcd(A[i], A[j])\n            # \u66f4\u65b0\n            if gcd_max < gcd_tmp:\n                gcd_max = gcd_tmp\n\n# \u51fa\u529b\nprint(gcd_max)\n"
    },
    {
      "index": 5,
      "text": "\n\n# \u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u306e\u4e92\u9664\u6cd5\ndef gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n\n# \u6700\u5927\u516c\u7d04\u6570\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a%b)\n\n# \u521d\u671f\u5024\ngcd_max = 0\n\n# \u5168\u7d44\u307f\u5408\u308f\u305b\nfor i in range(N):\n    for j in range(N):\n        # \u81ea\u5206\u81ea\u8eab\u3068\u6bd4\u8f03\u3057\u306a\u3044\n        if i != j:\n            # \u6700\u5927\u516c\u7d04\u6570\n            gcd_tmp = gcd(A[i], A[j])\n            # \u66f4\u65b0\n            if gcd_max < gcd_tmp:\n                gcd_max = gcd_tmp\n\n# \u51fa\u529b\nprint(gcd_max)\n"
    },
    {
      "index": 6,
      "text": "\n\n# \u5165\u529b\nN = int(input())\nA = list(map(int, input().split()))\n\n# \u6700\u5927\u516c\u7d04\u6570\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a%b)\n\n\n# \u521d\u671f\u5024\ngcd_max = 0\n# \u5168\u7d44\u307f\u5408\u308f\u305b\nfor i in range(N):\n    for j in range(N):\n        # \u81ea\u5206\u81ea\u8eab\u3068\u6bd4\u8f03\u3057\u306a\u3044\n        if i != j:\n            # \u6700\u5927\u516c\u7d04\u6570\n            gcd_tmp = gcd(A[i], A[j])\n            # \u66f4\u65b0\n            if gcd_max < gcd_tmp:\n                gcd_max = gcd_tmp\n\n# \u51fa\u529b\nprint(gcd_max)\n"
    },
    {
      "index": 7,
      "text": "# coding: utf-8\n\n# \u5165\u529b\nN = int(input())\nA = list(map(int, input().split()))\n\n# \u6700\u5927\u516c\u7d04\u6570\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a%b)\n\n# \u521d\u671f\u5024\ngcd_max = 0\n\n# \u5168\u7d44\u307f\u5408\u308f\u305b\nfor i in range(N):\n    for j in range(N):\n        # \u81ea\u5206\u81ea\u8eab\u3068\u6bd4\u8f03\u3057\u306a\u3044\n        if i != j:\n            # \u6700\u5927\u516c\u7d04\u6570\n            gcd_tmp = gcd(A[i], A[j])\n            # \u66f4\u65b0\n            if gcd_max < gcd_tmp:\n                gcd_max = gcd_tmp\n\n# \u51fa\u529b\nprint(gcd_max)\n"
    }
  ],
  "created": 1650625517,
  "object": "edit"
}
2022-04-22 11:05:30.423447 fix syntax errors 8 ['\n# 入力\nN = int(input())\nA = list(map(int, input().split()))\n\n# 最大公約数を求める\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a%b)\n\n# 初期値を定義\ngcd_max = 0\n\n# 全組み合わせ\nfor i in range(N):\n    for j in range(N):\n        # 自分自身と比較しない\n        if i != j:\n            # 最大公約数\n            gcd_tmp = gcd(A[i], A[j])\n            # 更新\n            if gcd_max < gcd_tmp:\n                gcd_max = gcd_tmp\n\n# 出力\nprint(gcd_max)\n', '\n\n# 数値入力\na, b = map(int, input().split())\n\n# 数値出力\nprint(a*b)\n\n', '\n# 入力\nN = int(input())\nA = list(map(int, input().split()))\n\n# 最大公約数\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a%b)\n\n# 初期値\ngcd_max = 0\n\n# 全組み合わせ\nfor i in range(N):\n    for j in range(N):\n        # 自分自身と比較しない\n        if i != j:\n            # 最大公約数\n            gcd_tmp = gcd(A[i], A[j])\n            # 更新\n            if gcd_max < gcd_tmp:\n                gcd_max = gcd_tmp\n\n# 出力\nprint(gcd_max)\n', '\n# 入力\nN = int(input())\nA = list(map(int, input().split()))\n\n# 最大公約数\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a%b)\n\n# 初期値\ngcd_max = 0\n\n# 全組み合わせ\nfor i in range(N):\n    for j in range(N):\n        # 自分自身と比較しない\n        if i != j:\n            # 最大公約数\n            gcd_tmp = gcd(A[i], A[j])\n            # 更新\n            if gcd_max < gcd_tmp:\n                gcd_max = gcd_tmp\n\n# 出力\nprint(gcd_max)\n', '\n\n# 入力\nN = int(input())\nA = list(map(int, input().split()))\n\n# 最大公約数\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a%b)\n\n# 初期値\ngcd_max = 0\n\n# 全組み合わせ\nfor i in range(N):\n    for j in range(N):\n        # 自分自身と比較しない\n        if i < j:\n            # 最大公約数\n            gcd_tmp = gcd(A[i], A[j])\n            # 更新\n            if gcd_max < gcd_tmp:\n                gcd_max = gcd_tmp\n\n# 出力\nprint(gcd_max)\n', '\n\n# ユークリッドの互除法\ndef gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n\n# 最大公約数\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a%b)\n\n# 初期値\ngcd_max = 0\n\n# 全組み合わせ\nfor i in range(N):\n    for j in range(N):\n        # 自分自身と比較しない\n        if i != j:\n            # 最大公約数\n            gcd_tmp = gcd(A[i], A[j])\n            # 更新\n            if gcd_max < gcd_tmp:\n                gcd_max = gcd_tmp\n\n# 出力\nprint(gcd_max)\n', '\n\n# 入力\nN = int(input())\nA = list(map(int, input().split()))\n\n# 最大公約数\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a%b)\n\n\n# 初期値\ngcd_max = 0\n# 全組み合わせ\nfor i in range(N):\n    for j in range(N):\n        # 自分自身と比較しない\n        if i != j:\n            # 最大公約数\n            gcd_tmp = gcd(A[i], A[j])\n            # 更新\n            if gcd_max < gcd_tmp:\n                gcd_max = gcd_tmp\n\n# 出力\nprint(gcd_max)\n', '# coding: utf-8\n\n# 入力\nN = int(input())\nA = list(map(int, input().split()))\n\n# 最大公約数\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a%b)\n\n# 初期値\ngcd_max = 0\n\n# 全組み合わせ\nfor i in range(N):\n    for j in range(N):\n        # 自分自身と比較しない\n        if i != j:\n            # 最大公約数\n            gcd_tmp = gcd(A[i], A[j])\n            # 更新\n            if gcd_max < gcd_tmp:\n                gcd_max = gcd_tmp\n\n# 出力\nprint(gcd_max)\n']
2022-04-22 11:05:30.423521 size on output set 7
