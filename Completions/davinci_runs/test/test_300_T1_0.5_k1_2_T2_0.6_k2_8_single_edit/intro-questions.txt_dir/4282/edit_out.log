2022-04-22 11:43:49.786901 num operations 1
2022-04-22 11:43:49.786920 size on input set 1
2022-04-22 11:43:49.787082 using api key derek
2022-04-22 11:44:05.569240 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\ndef main():\n    n = int(input())\n    a = [[] for _ in range(n)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        if len(a[i]) == 2:\n            j = a[i][0]\n            if a[j][0] == i:\n                a[j][0] = a[j][1]\n                a[j].pop()\n            else:\n                a[j][1] = a[j][0]\n                a[j][0] = i\n            if a[j][0] == j:\n                a[j].pop()\n            a[i].pop()\n    for i in range(n):\n        if len(a[i]) == 1:\n            a[i] = a[i][0]\n        else:\n            a[i] = -1\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = i + 1\n    for i in range(n - 1):\n        j = a[i] - 1\n        if j != -1:\n            ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    a = [[] for _ in range(n)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        a[i][0] -= 1\n        a[i][1] -= 1\n    for i in range(n):\n        if len(a[i]) == 2:\n            j = a[i][0]\n            if a[j][0] == i:\n                a[j][0] = a[j][1]\n                a[j].pop()\n            else:\n                a[j][1] = a[j][0]\n                a[j][0] = i\n            if a[j][0] == j:\n                a[j].pop()\n            a[i].pop()\n    for i in range(n):\n        a[i] = a[i][0]\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = i + 1\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n\ndef main():\n    n = int(input())\n    a = [[] for _ in range(n)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        a[i][0] -= 1\n        a[i][1] -= 1\n    for i in range(n):\n        if len(a[i]) == 2:\n            j = a[i][0]\n            if a[j][0] == i:\n                a[j][0] = a[j][1]\n                a[j].pop()\n            else:\n                a[j][1] = a[j][0]\n                a[j][0] = i\n            if a[j][0] == j:\n                a[j].pop()\n            a[i].pop()\n    for i in range(n):\n        a[i] = a[i][0]\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = i + 1\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n\n\n    main()\n"
    },
    {
      "index": 3,
      "text": "import sys\n\n\ndef main():\n    for line in sys.stdin:\n        n = int(line)\n        print(n)\n\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\ndef main():\n    n = int(input())\n    a = [[] for _ in range(n)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        a[i][0] -= 1\n        a[i][1] -= 1\n    for i in range(n):\n        if len(a[i]) == 2:\n            j = a[i][0]\n            if a[j][0] == i:\n                a[j][0] = a[j][1]\n                a[j].pop()\n            else:\n                a[j][1] = a[j][0]\n                a[j][0] = i\n            if a[j][0] == j:\n                a[j].pop()\n            a[i].pop()\n    for i in range(n):\n        a[i] = a[i][0]\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = i + 1\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\n\ndef main():\n    s = input()\n    n = len(s)\n    t = input()\n    m = len(t)\n    dp = [[0] * (m + 1) for _ in range(n + 1)]\n    for i in range(n):\n        for j in range(m):\n            if s[i] == t[j]:\n                dp[i + 1][j + 1] = dp[i][j] + 1\n            else:\n                dp[i + 1][j + 1] = max(dp[i + 1][j], dp[i][j + 1])\n    print(dp[-1][-1])\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "n = int(input())\na = [[] for _ in range(n)]\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\nfor i in range(n):\n    a[i][0] -= 1\n    a[i][1] -= 1\nfor i in range(n):\n    if len(a[i]) == 2:\n        j = a[i][0]\n        if a[j][0] == i:\n            a[j][0] = a[j][1]\n            a[j].pop()\n        else:\n            a[j][1] = a[j][0]\n            a[j][0] = i\n        if a[j][0] == j:\n            a[j].pop()\n        a[i].pop()\nfor i in range(n):\n    a[i] = a[i][0]\nans = [0] * n\nfor i in range(n):\n    ans[i] = i + 1\nfor i in range(n):\n    j = a[i]\n    ans[i], ans[j] = ans[j], ans[i]\nprint(*ans)\n\n\ndef main():\n    n = int(input())\n    a = [[] for _ in range(n)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        a[i][0] -= 1\n        a[i][1] -= 1\n    for i in range(n):\n        if len(a[i]) == 2:\n            j = a[i][0]\n            if a[j][0] == i:\n                a[j][0] = a[j][1]\n                a[j].pop()\n            else:\n                a[j][1] = a[j][0]\n                a[j][0] = i\n            if a[j][0] == j:\n                a[j].pop()\n            a[i].pop()\n    for i in range(n):\n        a[i] = a[i][0]\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = i + 1\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\n\ndef main():\n    n = int(input())\n    a = [[i] for i in range(n)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        a[i][0] -= 1  # 0-indexed\n        a[i][1] -= 1  # 0-indexed\n    for i in range(n):\n        if len(a[i]) == 2:  # i is a root\n            j = a[i][0]\n            if a[j][0] == i:  # j is the left child of i\n                a[j][0] = a[j][1]\n                a[j].pop()\n            else:  # j is the right child of i\n                a[j][1] = a[j][0]\n                a[j][0] = i\n            if a[j][0] == j:  # j has no child\n                a[j].pop()\n            a[i].pop()\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = i + 1  # 1-indexed\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650627829,
  "object": "edit"
}
2022-04-22 11:44:05.569581 fix syntax errors 8 ["\n\n\ndef main():\n    n = int(input())\n    a = [[] for _ in range(n)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        if len(a[i]) == 2:\n            j = a[i][0]\n            if a[j][0] == i:\n                a[j][0] = a[j][1]\n                a[j].pop()\n            else:\n                a[j][1] = a[j][0]\n                a[j][0] = i\n            if a[j][0] == j:\n                a[j].pop()\n            a[i].pop()\n    for i in range(n):\n        if len(a[i]) == 1:\n            a[i] = a[i][0]\n        else:\n            a[i] = -1\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = i + 1\n    for i in range(n - 1):\n        j = a[i] - 1\n        if j != -1:\n            ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    a = [[] for _ in range(n)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        a[i][0] -= 1\n        a[i][1] -= 1\n    for i in range(n):\n        if len(a[i]) == 2:\n            j = a[i][0]\n            if a[j][0] == i:\n                a[j][0] = a[j][1]\n                a[j].pop()\n            else:\n                a[j][1] = a[j][0]\n                a[j][0] = i\n            if a[j][0] == j:\n                a[j].pop()\n            a[i].pop()\n    for i in range(n):\n        a[i] = a[i][0]\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = i + 1\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n\ndef main():\n    n = int(input())\n    a = [[] for _ in range(n)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        a[i][0] -= 1\n        a[i][1] -= 1\n    for i in range(n):\n        if len(a[i]) == 2:\n            j = a[i][0]\n            if a[j][0] == i:\n                a[j][0] = a[j][1]\n                a[j].pop()\n            else:\n                a[j][1] = a[j][0]\n                a[j][0] = i\n            if a[j][0] == j:\n                a[j].pop()\n            a[i].pop()\n    for i in range(n):\n        a[i] = a[i][0]\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = i + 1\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n\n\n    main()\n", "import sys\n\n\ndef main():\n    for line in sys.stdin:\n        n = int(line)\n        print(n)\n\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    a = [[] for _ in range(n)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        a[i][0] -= 1\n        a[i][1] -= 1\n    for i in range(n):\n        if len(a[i]) == 2:\n            j = a[i][0]\n            if a[j][0] == i:\n                a[j][0] = a[j][1]\n                a[j].pop()\n            else:\n                a[j][1] = a[j][0]\n                a[j][0] = i\n            if a[j][0] == j:\n                a[j].pop()\n            a[i].pop()\n    for i in range(n):\n        a[i] = a[i][0]\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = i + 1\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n\ndef main():\n    s = input()\n    n = len(s)\n    t = input()\n    m = len(t)\n    dp = [[0] * (m + 1) for _ in range(n + 1)]\n    for i in range(n):\n        for j in range(m):\n            if s[i] == t[j]:\n                dp[i + 1][j + 1] = dp[i][j] + 1\n            else:\n                dp[i + 1][j + 1] = max(dp[i + 1][j], dp[i][j + 1])\n    print(dp[-1][-1])\n\n\nif __name__ == '__main__':\n    main()\n", "n = int(input())\na = [[] for _ in range(n)]\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\nfor i in range(n):\n    a[i][0] -= 1\n    a[i][1] -= 1\nfor i in range(n):\n    if len(a[i]) == 2:\n        j = a[i][0]\n        if a[j][0] == i:\n            a[j][0] = a[j][1]\n            a[j].pop()\n        else:\n            a[j][1] = a[j][0]\n            a[j][0] = i\n        if a[j][0] == j:\n            a[j].pop()\n        a[i].pop()\nfor i in range(n):\n    a[i] = a[i][0]\nans = [0] * n\nfor i in range(n):\n    ans[i] = i + 1\nfor i in range(n):\n    j = a[i]\n    ans[i], ans[j] = ans[j], ans[i]\nprint(*ans)\n\n\ndef main():\n    n = int(input())\n    a = [[] for _ in range(n)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        a[i][0] -= 1\n        a[i][1] -= 1\n    for i in range(n):\n        if len(a[i]) == 2:\n            j = a[i][0]\n            if a[j][0] == i:\n                a[j][0] = a[j][1]\n                a[j].pop()\n            else:\n                a[j][1] = a[j][0]\n                a[j][0] = i\n            if a[j][0] == j:\n                a[j].pop()\n            a[i].pop()\n    for i in range(n):\n        a[i] = a[i][0]\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = i + 1\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n\ndef main():\n    n = int(input())\n    a = [[i] for i in range(n)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        a[i][0] -= 1  # 0-indexed\n        a[i][1] -= 1  # 0-indexed\n    for i in range(n):\n        if len(a[i]) == 2:  # i is a root\n            j = a[i][0]\n            if a[j][0] == i:  # j is the left child of i\n                a[j][0] = a[j][1]\n                a[j].pop()\n            else:  # j is the right child of i\n                a[j][1] = a[j][0]\n                a[j][0] = i\n            if a[j][0] == j:  # j has no child\n                a[j].pop()\n            a[i].pop()\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = i + 1  # 1-indexed\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-22 11:44:05.569745 size on output set 7
2022-04-22 11:44:05.569759 num operations 1
2022-04-22 11:44:05.569765 size on input set 1
2022-04-22 11:44:05.569906 using api key soukgp
2022-04-22 11:44:48.270329 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom collections import defaultdict\n\ndef solve(n, a):\n    d = defaultdict(set)\n    for i in range(1, n + 1):\n        d[a[i][0]].add(i) # add the value of the first element\n        d[a[i][1]].add(i) # add the value of the second element\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n    for i in range(n):\n        res.append(start)\n        start = a[start][0] if a[start][0] != res[-1] else a[start][1]\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))\nprint(solve(n, a))\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom collections import defaultdict\n\ndef solve(n, a):\n    d = defaultdict(set)\n    for i in range(1, n + 1):\n        d[a[i][0]].add(i)\n        d[a[i][1]].add(i)\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n        if start == 0:\n            break\n        res.append(start)\n        next = a[start][0] if a[start][0] != res[-1] else a[start][1]\n        a[start] = []\n        start = next\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))\nprint(solve(n, a))\n"
    },
    {
      "index": 2,
      "text": "#include <bits/stdc++.h>\n\nfrom collections import defaultdict\n\ndef solve(n, a):\n    d = defaultdict(set)\n    for i in range(1, n + 1):\n        d[a[i][0]].add(i)\n        d[a[i][1]].add(i)\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n    for i in range(n):\n        res.append(start)\n        start = a[start][0] if a[start][0] != res[-1] else a[start][1]\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))\nprint(solve(n, a))\n"
    },
    {
      "index": 3,
      "text": "\n\n\nfrom collections import defaultdict\n\ndef solve(n, a):\n    d = defaultdict(set)\n    for i in range(1, n + 1):\n        d[a[i][0]].add(i)\n        d[a[i][1]].add(i)\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n    for i in range(n):\n        res.append(start)\n        start = a[start][0] if a[start][0] != res[-1] else a[start][1]\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))\nprint(solve(n, a))\n"
    },
    {
      "index": 4,
      "text": "\n\n\nfrom collections import defaultdict\n\ndef solve(n, a):\n    d = defaultdict(set)\n    for i in range(1, n + 1):\n        d[a[i][0]].add(i)\n        d[a[i][1]].add(i)\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n    for i in range(n):\n        res.append(start)\n        start = a[start][0] if a[start][0] != res[-1] else a[start][1]\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))\nprint(solve(n, a))\n"
    },
    {
      "index": 5,
      "text": "\n\nn = int(input()) \na = [int(i) for i in input().split()]\na.sort() \nprint(a)\n"
    },
    {
      "index": 6,
      "text": "\n\nfrom collections import defaultdict\n"
    },
    {
      "index": 7,
      "text": "\n\nfrom collections import defaultdict\n\ndef solve(n, a):\n    d = defaultdict(set)\n    for i in range(1, n + 1):\n        d[a[i][0]].add(i)\n        d[a[i][1]].add(i)\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n    for i in range(n):\n        res.append(start)\n        start = a[start][0] if a[start][0] != res[-1] else a[start][1]\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))\nprint(solve(n, a))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    }
  ],
  "created": 1650627845,
  "object": "edit"
}
2022-04-22 11:44:48.270666 fix syntax errors 8 ["\n\nfrom collections import defaultdict\n\ndef solve(n, a):\n    d = defaultdict(set)\n    for i in range(1, n + 1):\n        d[a[i][0]].add(i) # add the value of the first element\n        d[a[i][1]].add(i) # add the value of the second element\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n    for i in range(n):\n        res.append(start)\n        start = a[start][0] if a[start][0] != res[-1] else a[start][1]\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))\nprint(solve(n, a))\n", "\n\nfrom collections import defaultdict\n\ndef solve(n, a):\n    d = defaultdict(set)\n    for i in range(1, n + 1):\n        d[a[i][0]].add(i)\n        d[a[i][1]].add(i)\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n        if start == 0:\n            break\n        res.append(start)\n        next = a[start][0] if a[start][0] != res[-1] else a[start][1]\n        a[start] = []\n        start = next\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))\nprint(solve(n, a))\n", "#include <bits/stdc++.h>\n\nfrom collections import defaultdict\n\ndef solve(n, a):\n    d = defaultdict(set)\n    for i in range(1, n + 1):\n        d[a[i][0]].add(i)\n        d[a[i][1]].add(i)\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n    for i in range(n):\n        res.append(start)\n        start = a[start][0] if a[start][0] != res[-1] else a[start][1]\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))\nprint(solve(n, a))\n", "\n\n\nfrom collections import defaultdict\n\ndef solve(n, a):\n    d = defaultdict(set)\n    for i in range(1, n + 1):\n        d[a[i][0]].add(i)\n        d[a[i][1]].add(i)\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n    for i in range(n):\n        res.append(start)\n        start = a[start][0] if a[start][0] != res[-1] else a[start][1]\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))\nprint(solve(n, a))\n", "\n\n\nfrom collections import defaultdict\n\ndef solve(n, a):\n    d = defaultdict(set)\n    for i in range(1, n + 1):\n        d[a[i][0]].add(i)\n        d[a[i][1]].add(i)\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n    for i in range(n):\n        res.append(start)\n        start = a[start][0] if a[start][0] != res[-1] else a[start][1]\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))\nprint(solve(n, a))\n", '\n\nn = int(input()) \na = [int(i) for i in input().split()]\na.sort() \nprint(a)\n', '\n\nfrom collections import defaultdict\n', "\n\nfrom collections import defaultdict\n\ndef solve(n, a):\n    d = defaultdict(set)\n    for i in range(1, n + 1):\n        d[a[i][0]].add(i)\n        d[a[i][1]].add(i)\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n    for i in range(n):\n        res.append(start)\n        start = a[start][0] if a[start][0] != res[-1] else a[start][1]\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))\nprint(solve(n, a))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]
2022-04-22 11:44:48.270824 size on output set 7
