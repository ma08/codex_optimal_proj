2022-04-22 10:43:18.720219 num operations 1
2022-04-22 10:43:18.720239 size on input set 1
2022-04-22 10:43:18.720388 using api key soukgp
2022-04-22 10:43:34.002596 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\na = []\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(n, k)\n# a = [2, 4, 5, 3, 1]\n# n = len(a)\n# k = 2\n\na = [0] + a\na.append(n + 1)\n\na.sort()\n\nans = [0] * (n + 2)\n\nfor i in range(1, n + 2):\n    left = a[i - 1] + k\n    right = a[i] - k - 1\n    if left <= right:\n        ans[left] += 1\n        ans[right + 1] -= 1\n\nfor i in range(1, n + 1):\n    ans[i] += ans[i - 1]\n\nans = ans[1:]\n\nprint(''.join(map(str, ans)))\n"
    },
    {
      "index": 1,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# a = [2, 4, 5, 3, 1]\n# n = len(a)\n# k = 2\n\na = [0] + a\na.append(n + 1)\n\na.sort()\n\nans = [0] * (n + 2)\n\nfor i in range(1, n + 2):\n    left = a[i - 1] + k\n    right = a[i] - k - 1\n    if left <= right:\n        ans[left] += 1\n        ans[right + 1] -= 1\n\nfor i in range(1, n + 1):\n    ans[i] += ans[i - 1]\n\nans = ans[1:]\n\nprint(''.join(map(str, ans)))\n"
    },
    {
      "index": 2,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\na = [0] + a\na.append(n + 1)\n\na.sort()\n\nans = [0] * (n + 2)\n\nfor i in range(1, n + 2):\n    left = a[i - 1] + k\n    right = a[i] - k - 1\n    if left <= right:\n        ans[left] += 1\n        ans[right + 1] -= 1\n\nfor i in range(1, n + 1):\n    ans[i] += ans[i - 1]\n\nans = ans[1:]\n\nprint(''.join(map(str, ans)))\n"
    },
    {
      "index": 3,
      "text": "from collections import Counter\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\na = [0] + a\na.append(n + 1)\n\na.sort()\n\nans = [0] * (n + 2)\n\nfor i in range(1, n + 2):\n    left = a[i - 1] + k\n    right = a[i] - k - 1\n    if left <= right:\n        ans[left] += 1\n        ans[right + 1] -= 1\n\nfor i in range(1, n + 1):\n    ans[i] += ans[i - 1]\n\nans = ans[1:]\n\nans = ''.join(map(str, ans))\n\ncounter = Counter(ans)\n\nprint(counter[\"0\"])\n"
    },
    {
      "index": 4,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# a = [2, 4, 5, 3, 1]\n# n = len(a)\n# k = 2\n\na = [0] + a\na.append(n + 1)\n\na.sort()\n\nans = [0] * (n + 2)\n\nfor i in range(1, n + 2):\n    left = a[i - 1] + k\n    right = a[i] - k - 1\n    if left <= right:\n        ans[left] += 1\n        ans[right + 1] -= 1\n\nfor i in range(1, n + 1):\n    ans[i] += ans[i - 1]\n\nans = ans[1:]\n\nprint(''.join(map(str, ans)))\n"
    },
    {
      "index": 5,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# a = [2, 4, 5, 3, 1, 1]\n# n = len(a)\n# k = 2\n\na = [0] + a\na.append(n + 1)\n\na.sort()\n\nans = [0] * (n + 1)\n\n    # print(a[i - 1], a[i])\n    left = a[i - 1] + k\n    print(left, right)\n    right = a[i] - k - 1\n    if left <= right:\n        ans[left] += 1\n        ans[right + 1] -= 1\n\nfor i in range(1, n + 1):\n    ans[i] += ans[i - 1]\n\n# ans = ans[1:]\n\nprint(''.join(map(str, ans)))\n"
    },
    {
      "index": 6,
      "text": "import math\n\n# https://codeforces.com/problemset/problem/1324/B\n\n\nn, k = map(int, input().split())\na = list(map(int, input().strip().split()))\n\n# a = [2, 4, 5, 3, 1]\n# n = len(a)\n# k = 2\n\na = [0] + a + [n + 1]\n\na.sort(reverse=True)\n\nans = [0] * (n + 2)\n\n    # print(i, a[i])\n    left = a[i - 1] + k\n    # print(left, right)\n    right = a[i] - k - 1\n    if left <= right:\n        ans[left + 1] += 1\n        ans[right + 1] -= 1\n\nfor i in range(1, n + 2):\n    ans[i] += ans[i - 1]\n\nans = ans[1:]\n\nprint(''.join(map(str, ans)))\n"
    },
    {
      "index": 7,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\na = [2, 4, 5, 3, 1]\nn = len(a)\nk = 2\n\na = [0] + a\na.append(n + 1)\n\na.sort()\n\nans = [0] * (n + 2)\n\nfor i in range(1, n + 2):\n    left = a[i - 1] + k\n    right = a[i] - k - 1\n    if left <= right:\n        ans[left] += 1\n        ans[right + 1] -= 1\n\nfor i in range(1, n + 1):\n    ans[i] += ans[i - 1]\n\nans = ans[1:]\n\nprint(''.join(map(str, ans)))\n"
    }
  ],
  "created": 1650624198,
  "object": "edit"
}
2022-04-22 10:43:34.002936 fix syntax errors 8 ["\na = []\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(n, k)\n# a = [2, 4, 5, 3, 1]\n# n = len(a)\n# k = 2\n\na = [0] + a\na.append(n + 1)\n\na.sort()\n\nans = [0] * (n + 2)\n\nfor i in range(1, n + 2):\n    left = a[i - 1] + k\n    right = a[i] - k - 1\n    if left <= right:\n        ans[left] += 1\n        ans[right + 1] -= 1\n\nfor i in range(1, n + 1):\n    ans[i] += ans[i - 1]\n\nans = ans[1:]\n\nprint(''.join(map(str, ans)))\n", "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# a = [2, 4, 5, 3, 1]\n# n = len(a)\n# k = 2\n\na = [0] + a\na.append(n + 1)\n\na.sort()\n\nans = [0] * (n + 2)\n\nfor i in range(1, n + 2):\n    left = a[i - 1] + k\n    right = a[i] - k - 1\n    if left <= right:\n        ans[left] += 1\n        ans[right + 1] -= 1\n\nfor i in range(1, n + 1):\n    ans[i] += ans[i - 1]\n\nans = ans[1:]\n\nprint(''.join(map(str, ans)))\n", "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\na = [0] + a\na.append(n + 1)\n\na.sort()\n\nans = [0] * (n + 2)\n\nfor i in range(1, n + 2):\n    left = a[i - 1] + k\n    right = a[i] - k - 1\n    if left <= right:\n        ans[left] += 1\n        ans[right + 1] -= 1\n\nfor i in range(1, n + 1):\n    ans[i] += ans[i - 1]\n\nans = ans[1:]\n\nprint(''.join(map(str, ans)))\n", 'from collections import Counter\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\na = [0] + a\na.append(n + 1)\n\na.sort()\n\nans = [0] * (n + 2)\n\nfor i in range(1, n + 2):\n    left = a[i - 1] + k\n    right = a[i] - k - 1\n    if left <= right:\n        ans[left] += 1\n        ans[right + 1] -= 1\n\nfor i in range(1, n + 1):\n    ans[i] += ans[i - 1]\n\nans = ans[1:]\n\nans = \'\'.join(map(str, ans))\n\ncounter = Counter(ans)\n\nprint(counter["0"])\n', "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# a = [2, 4, 5, 3, 1]\n# n = len(a)\n# k = 2\n\na = [0] + a\na.append(n + 1)\n\na.sort()\n\nans = [0] * (n + 2)\n\nfor i in range(1, n + 2):\n    left = a[i - 1] + k\n    right = a[i] - k - 1\n    if left <= right:\n        ans[left] += 1\n        ans[right + 1] -= 1\n\nfor i in range(1, n + 1):\n    ans[i] += ans[i - 1]\n\nans = ans[1:]\n\nprint(''.join(map(str, ans)))\n", "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# a = [2, 4, 5, 3, 1, 1]\n# n = len(a)\n# k = 2\n\na = [0] + a\na.append(n + 1)\n\na.sort()\n\nans = [0] * (n + 1)\n\n    # print(a[i - 1], a[i])\n    left = a[i - 1] + k\n    print(left, right)\n    right = a[i] - k - 1\n    if left <= right:\n        ans[left] += 1\n        ans[right + 1] -= 1\n\nfor i in range(1, n + 1):\n    ans[i] += ans[i - 1]\n\n# ans = ans[1:]\n\nprint(''.join(map(str, ans)))\n", "import math\n\n# https://codeforces.com/problemset/problem/1324/B\n\n\nn, k = map(int, input().split())\na = list(map(int, input().strip().split()))\n\n# a = [2, 4, 5, 3, 1]\n# n = len(a)\n# k = 2\n\na = [0] + a + [n + 1]\n\na.sort(reverse=True)\n\nans = [0] * (n + 2)\n\n    # print(i, a[i])\n    left = a[i - 1] + k\n    # print(left, right)\n    right = a[i] - k - 1\n    if left <= right:\n        ans[left + 1] += 1\n        ans[right + 1] -= 1\n\nfor i in range(1, n + 2):\n    ans[i] += ans[i - 1]\n\nans = ans[1:]\n\nprint(''.join(map(str, ans)))\n", "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\na = [2, 4, 5, 3, 1]\nn = len(a)\nk = 2\n\na = [0] + a\na.append(n + 1)\n\na.sort()\n\nans = [0] * (n + 2)\n\nfor i in range(1, n + 2):\n    left = a[i - 1] + k\n    right = a[i] - k - 1\n    if left <= right:\n        ans[left] += 1\n        ans[right + 1] -= 1\n\nfor i in range(1, n + 1):\n    ans[i] += ans[i - 1]\n\nans = ans[1:]\n\nprint(''.join(map(str, ans)))\n"]
2022-04-22 10:43:34.002994 size on output set 7
2022-04-22 10:43:34.003091 num operations 1
2022-04-22 10:43:34.003098 size on input set 1
2022-04-22 10:43:34.003238 using api key soukgp
2022-04-22 10:43:46.387608 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# SOLUTION\nimport sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nleft = [0] * n\nright = [0] * n\n\n# get the left and right k-th max elements\nfor i in range(1, n):\n    left[i] = max(left[i-1], a[i-1])\n    right[n-i-1] = max(right[n-i], a[n-i]) \n\nans = [0] * n\nfor i in range(n):\n    if left[i] == max(left[i], right[i]):\n        ans[i] = 1\n    else:\n        ans[i] = 2\n\nprint(\"\".join(map(str, ans)))\n"
    },
    {
      "index": 1,
      "text": "\n\n# SOLUTION\n"
    },
    {
      "index": 2,
      "text": "\n\n# SOLUTION\nimport sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nleft = [0] * n\nright = [0] * n\n\n# get the left and right k-th max elements\nfor i in range(1, n):\n    left[i] = max(left[i - 1], a[i - 1])\n    right[n - i - 1] = max(right[n - i], a[n - i])\n\nans = [0] * n\nfor i in range(n):\n    if left[i] == max(left[i], right[i]):\n        ans[i] = 1\n    else:\n        ans[i] = 2\n\nprint(\"\".join(map(str, ans)))\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().strip().split())\na = list(map(int, input().split()))\n\nleft = []\nright = []\n\n# get the left and right k-th elements\n\nfor i in range(1, n):\n    left.append(max(left[i-1], a[i-1]))\n    right.append(max(right[n-i-1], a[n-i-1]))\n\nans = []\nfor i in range(n):\n    if left[i] == max(left[i], right[i-1]):\n        ans.append(1)\n    else:\n        ans.append(2)\n\nprint(\"\".join(map(str, ans)))\n"
    },
    {
      "index": 4,
      "text": "\n# SOLUTION\nimport sys\ninput = sys.stdin.readline\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nleft = [0] * n\nright = [0] * n\n# get the left and right k-th max elements\nfor i in range(1, n):\n    left[i] = max(left[i-1], a[i-1])\n    right[n-i-1] = max(right[n-i], a[n-i])\n\nans = [0] * n\nfor i in range(n):\n    if left[i] == max(left[i], right[i]):\n        ans[i] = 1\n    else:\n        ans[i] = 2\n\nprint(\"\".join(map(str, ans)))\n"
    },
    {
      "index": 5,
      "text": "\n\nimport sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nleft = [0] * n\nright = [0] * n\n\n# get the left and right k-th max elements\nfor i in range(1, n):\n    left[i] = max(left[i-1], a[i-1])\n    right[n-i-1] = max(right[n-i], a[n-i])\n\nans = [0] * n\nfor i in range(n):\n    if left[i] == max(left[i], right[i]):\n        ans[i] = 1\n    else:\n        ans[i] = 2\n\nprint(\"\".join(map(str, ans)))\n"
    },
    {
      "index": 6,
      "text": "\n\n# SOLUTION\nimport sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nleft = [0] * n\nright = [0] * n\n\n# get the left and right max elements\nfor i in range(1, n):\n    left[i] = max(left[i-1], a[i-1])\n    right[n-i-1] = max(right[n-i], a[n-i])\n\nans = []\nfor i in range(n):\n    if left[i] == max(left[i], right[i]):\n        ans[i] = 1\n    else:\n        ans[i] = 2\n\nprint(\"\".join(map(str, ans)))\n"
    },
    {
      "index": 7,
      "text": "\n# SOLUTION\nimport sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nleft = [0] * n\nright = [0] * n\n\n# get the left and right k-th max elements\nfor i in range(1, n):\n    left[i] = max(left[i-1], a[i-1])\n    right[n-i-1] = max(right[n-i], a[n-i])\n\nans = [0] * n\nfor i in range(n):\n    if left[i] == max(left[i], right[i]):\n        ans[i] = 1\n    else:\n        ans[i] = 2\n\nprint(\"\".join(map(str, ans)))\n"
    }
  ],
  "created": 1650624214,
  "object": "edit"
}
2022-04-22 10:43:46.387926 fix syntax errors 8 ['\n\n# SOLUTION\nimport sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nleft = [0] * n\nright = [0] * n\n\n# get the left and right k-th max elements\nfor i in range(1, n):\n    left[i] = max(left[i-1], a[i-1])\n    right[n-i-1] = max(right[n-i], a[n-i]) \n\nans = [0] * n\nfor i in range(n):\n    if left[i] == max(left[i], right[i]):\n        ans[i] = 1\n    else:\n        ans[i] = 2\n\nprint("".join(map(str, ans)))\n', '\n\n# SOLUTION\n', '\n\n# SOLUTION\nimport sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nleft = [0] * n\nright = [0] * n\n\n# get the left and right k-th max elements\nfor i in range(1, n):\n    left[i] = max(left[i - 1], a[i - 1])\n    right[n - i - 1] = max(right[n - i], a[n - i])\n\nans = [0] * n\nfor i in range(n):\n    if left[i] == max(left[i], right[i]):\n        ans[i] = 1\n    else:\n        ans[i] = 2\n\nprint("".join(map(str, ans)))\n', '\n\nimport sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().strip().split())\na = list(map(int, input().split()))\n\nleft = []\nright = []\n\n# get the left and right k-th elements\n\nfor i in range(1, n):\n    left.append(max(left[i-1], a[i-1]))\n    right.append(max(right[n-i-1], a[n-i-1]))\n\nans = []\nfor i in range(n):\n    if left[i] == max(left[i], right[i-1]):\n        ans.append(1)\n    else:\n        ans.append(2)\n\nprint("".join(map(str, ans)))\n', '\n# SOLUTION\nimport sys\ninput = sys.stdin.readline\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nleft = [0] * n\nright = [0] * n\n# get the left and right k-th max elements\nfor i in range(1, n):\n    left[i] = max(left[i-1], a[i-1])\n    right[n-i-1] = max(right[n-i], a[n-i])\n\nans = [0] * n\nfor i in range(n):\n    if left[i] == max(left[i], right[i]):\n        ans[i] = 1\n    else:\n        ans[i] = 2\n\nprint("".join(map(str, ans)))\n', '\n\nimport sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nleft = [0] * n\nright = [0] * n\n\n# get the left and right k-th max elements\nfor i in range(1, n):\n    left[i] = max(left[i-1], a[i-1])\n    right[n-i-1] = max(right[n-i], a[n-i])\n\nans = [0] * n\nfor i in range(n):\n    if left[i] == max(left[i], right[i]):\n        ans[i] = 1\n    else:\n        ans[i] = 2\n\nprint("".join(map(str, ans)))\n', '\n\n# SOLUTION\nimport sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nleft = [0] * n\nright = [0] * n\n\n# get the left and right max elements\nfor i in range(1, n):\n    left[i] = max(left[i-1], a[i-1])\n    right[n-i-1] = max(right[n-i], a[n-i])\n\nans = []\nfor i in range(n):\n    if left[i] == max(left[i], right[i]):\n        ans[i] = 1\n    else:\n        ans[i] = 2\n\nprint("".join(map(str, ans)))\n', '\n# SOLUTION\nimport sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nleft = [0] * n\nright = [0] * n\n\n# get the left and right k-th max elements\nfor i in range(1, n):\n    left[i] = max(left[i-1], a[i-1])\n    right[n-i-1] = max(right[n-i], a[n-i])\n\nans = [0] * n\nfor i in range(n):\n    if left[i] == max(left[i], right[i]):\n        ans[i] = 1\n    else:\n        ans[i] = 2\n\nprint("".join(map(str, ans)))\n']
2022-04-22 10:43:46.387982 size on output set 8
