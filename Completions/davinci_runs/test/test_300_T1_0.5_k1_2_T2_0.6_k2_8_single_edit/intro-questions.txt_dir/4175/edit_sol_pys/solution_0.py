
N = int(input())

words = []
for i in range(N):
    words.append(input())

for i in range(1, N):
    if words[i] in words[:i] or words[i][0] != words[i-1][-1]:
        print("No")
        exit()


# 問題文
# 高橋君は今日から郵便局員になりました。
# 郵便局員として仕事に当たる前に、アルファベットの連続する N 個の文字列が与えられます。
# 高橋君は、それらの文字列がある順番で繋がっているかどうかを判定しなければなりません。
# ただし、ある文字列と次の文字列が繋がっているとは、文字列の最後の文字が次の文字列の最初の文字と一致しており、かつ、次の文字列が既に文字列の中に出現していることを意味します。
# 高橋君は、それらの文字列がある順番で繋がっているかどうかを判定しなければなりません。
# ただし、ある文字列と次の文字列が繋がっているとは、文字列の最後の文字が次の文字列の最初の文字と一致しており、かつ、次の文字列が既に文字列の中に出現していることを意味します。
# この判定結果が「Yes」の場合は 1、「No」の場合は 0 を出力してください。

# 制約
# 1≤N≤10^5
# 1≤文字列の長さ≤10
# 文字列の長さは全て等しく、小文字のアルファベットのみからなる

# 入力
# 入力は以下の形式で標準入力から与えられる。

# N
# S1
# S2
# :
# SN
# 1 行目には文字列の数を表す整数 N が与えられる。
# 続く N 行には、文字列が 1 行に 1 つずつ与えられる。

# 出力
# 高橋君の判定結果を 1 行に出力してください。
# 出力の末尾には改行を入れること。

# 入力例 1
# 4
# abc
# abd
# bcd
# cde
# 出力例 1
# No
# 入力例 2
# 8
# abc
# abd
# bcd
# cde
# def
# efg
# fgh
# gh
# 出力例 2
# Yes
# 入力例 3
# 6
# abc
# abd
# bcd
# cde
# def
# efg
# 出力例 3
# No
print("Yes")
