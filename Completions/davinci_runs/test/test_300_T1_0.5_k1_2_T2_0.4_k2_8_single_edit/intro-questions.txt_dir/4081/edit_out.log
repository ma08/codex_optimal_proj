2022-04-20 02:05:44.901102 num operations 1
2022-04-20 02:05:44.901122 size on input set 1
2022-04-20 02:05:44.901278 using api key sourya
2022-04-20 02:05:58.078042 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left = [0] * n\n    right = [0] * n\n\n    left[0] = 1\n    right[n-1] = 1\n\n    for i in range(1, n):\n        left[i] = left[i - 1]\n        if a[i] > a[i-1]:\n            left[i] += 1\n\n    for i in range(n - 2, -1, -1):\n        right[i] = right[i + 1]\n        if a[i] < a[i+1]:\n            right[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left[i] + right[i] > max_len:\n            max_len = left[i] + right[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):  # left\n        if left[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):  # right\n        if right[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left = [0] * n\n    right = [0] * n\n\n    left[0] = 1\n    right[n-1] = 1\n\n    for i in range(1, n):\n        left[i] = left[i-1]\n        if a[i] > a[i-1]:\n            left[i] += 1\n\n    for i in range(n-2, -1, -1):\n        right[i] = right[i+1]\n        if a[i] < a[i+1]:\n            right[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left[i] + right[i] > max_len:\n            max_len = left[i] + right[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left = [0] * n\n    right = [0] * n\n\n    left[0] = 1  # left[0] = 0\n    right[n-1] = 1  # right[n-1] = 0\n\n    for i in range(1, n):\n        left[i] = left[i-1]  # left[i] = 0\n        if a[i] > a[i-1]:\n            left[i] += 1\n\n    for i in range(n-2, -1, -1):\n        right[i] = right[i+1]  # right[i] = 0\n        if a[i] < a[i+1]:\n            right[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left[i] + right[i] > max_len:\n            max_len = left[i] + right[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/env python3\n\nfrom __future__ import print_function\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    assert len(a) == n\n\n    left = [0] * n\n    right = [0] * n\n\n    left[0] = 1\n    right[n-1] = 1\n\n    for i in range(1, n):\n        left[i] = left[i-1]\n        if a[i] > a[i-1]:\n            left[i] += 1\n\n    for i in range(n-2, -1, -1):\n        right[i] = right[i+1]\n        if a[i] < a[i+1]:\n            right[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left[i] + right[i] > max_len:\n            max_len = left[i] + right[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left = [0] * n\n    right = [0] * n\n\n    left[0] = 1\n    right[n-1] = 1\n\n    for i in range(1, n):\n        left[i] = left[i-1]\n        if a[i] > a[i-1]:\n            left[i] += 1\n\n    for i in range(n-2, -1, -1): \n        right[i] = right[i+1]\n        if a[i] < a[i+1]:\n            right[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left[i] + right[i] > max_len:\n            max_len = left[i] + right[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    assert len(a) == n, \"Wrong input\"\n\n    left = [0] * n\n    right = [0] * n\n\n    left[0] = 1\n    right[n-1] = 1\n\n    for i in range(1, n):\n        left[i] = left[i-1]\n        if a[i] > a[i-1]:\n            left[i] += 1\n\n    for i in range(n-2, -1, -1):\n        right[i] = right[i+1]\n        if a[i] < a[i+1]:\n            right[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left[i] + right[i] > max_len:\n            max_len = left[i] + right[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq), file=sys.stdout)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left = [0] * n\n    right = [0] * n\n\n    left[0] = 1;\n    right[n-1] = 1;\n\n    for i in range(1, n):\n        left[i] = left[i-1];\n        if a[i] > a[i-1]:\n            left[i] += 1;\n\n    for i in range(n-2, -1, -1):\n        right[i] = right[i+1];\n        if a[i] < a[i+1]:\n            right[i] += 1;\n\n    max_len = 0;\n    max_len_idx = -1;\n    for i in range(n):\n        if left[i] + right[i] > max_len:\n            max_len = left[i] + right[i];\n            max_len_idx = i;\n\n    print(max_len)\n    seq = [];\n    for i in range(max_len_idx, -1, -1):\n        if left[i] == 1:\n            break;\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right[i] == 1:\n            break;\n        seq.append('R')\n\n    print(''.join(seq));\n\nif __name__ == '__main__':\n    main();\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left = [0] * n\n    right = [0] * n\n\n    left[0] = 1\n    right[n-1] = 1\n\n    for i in range(1, n):\n        left[i] = left[i-1] + 1\n        if a[i] > a[i-1]:\n            left[i] = 1\n\n    for i in range(n-2, -1, -1):\n        right[i] = right[i+1] + 1\n        if a[i] < a[i+1]:\n            right[i] = 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left[i] + right[i] - 1 > max_len:\n            max_len = left[i] + right[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650420345,
  "object": "edit"
}
2022-04-20 02:05:58.078462 fix syntax errors 8 ["import sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left = [0] * n\n    right = [0] * n\n\n    left[0] = 1\n    right[n-1] = 1\n\n    for i in range(1, n):\n        left[i] = left[i - 1]\n        if a[i] > a[i-1]:\n            left[i] += 1\n\n    for i in range(n - 2, -1, -1):\n        right[i] = right[i + 1]\n        if a[i] < a[i+1]:\n            right[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left[i] + right[i] > max_len:\n            max_len = left[i] + right[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):  # left\n        if left[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):  # right\n        if right[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left = [0] * n\n    right = [0] * n\n\n    left[0] = 1\n    right[n-1] = 1\n\n    for i in range(1, n):\n        left[i] = left[i-1]\n        if a[i] > a[i-1]:\n            left[i] += 1\n\n    for i in range(n-2, -1, -1):\n        right[i] = right[i+1]\n        if a[i] < a[i+1]:\n            right[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left[i] + right[i] > max_len:\n            max_len = left[i] + right[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left = [0] * n\n    right = [0] * n\n\n    left[0] = 1  # left[0] = 0\n    right[n-1] = 1  # right[n-1] = 0\n\n    for i in range(1, n):\n        left[i] = left[i-1]  # left[i] = 0\n        if a[i] > a[i-1]:\n            left[i] += 1\n\n    for i in range(n-2, -1, -1):\n        right[i] = right[i+1]  # right[i] = 0\n        if a[i] < a[i+1]:\n            right[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left[i] + right[i] > max_len:\n            max_len = left[i] + right[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nfrom __future__ import print_function\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    assert len(a) == n\n\n    left = [0] * n\n    right = [0] * n\n\n    left[0] = 1\n    right[n-1] = 1\n\n    for i in range(1, n):\n        left[i] = left[i-1]\n        if a[i] > a[i-1]:\n            left[i] += 1\n\n    for i in range(n-2, -1, -1):\n        right[i] = right[i+1]\n        if a[i] < a[i+1]:\n            right[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left[i] + right[i] > max_len:\n            max_len = left[i] + right[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left = [0] * n\n    right = [0] * n\n\n    left[0] = 1\n    right[n-1] = 1\n\n    for i in range(1, n):\n        left[i] = left[i-1]\n        if a[i] > a[i-1]:\n            left[i] += 1\n\n    for i in range(n-2, -1, -1): \n        right[i] = right[i+1]\n        if a[i] < a[i+1]:\n            right[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left[i] + right[i] > max_len:\n            max_len = left[i] + right[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n", '\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    assert len(a) == n, "Wrong input"\n\n    left = [0] * n\n    right = [0] * n\n\n    left[0] = 1\n    right[n-1] = 1\n\n    for i in range(1, n):\n        left[i] = left[i-1]\n        if a[i] > a[i-1]:\n            left[i] += 1\n\n    for i in range(n-2, -1, -1):\n        right[i] = right[i+1]\n        if a[i] < a[i+1]:\n            right[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left[i] + right[i] > max_len:\n            max_len = left[i] + right[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left[i] == 1:\n            break\n        seq.append(\'L\')\n\n    for i in range(max_len_idx, n):\n        if right[i] == 1:\n            break\n        seq.append(\'R\')\n\n    print(\'\'.join(seq), file=sys.stdout)\n\nif __name__ == \'__main__\':\n    main()\n', "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left = [0] * n\n    right = [0] * n\n\n    left[0] = 1;\n    right[n-1] = 1;\n\n    for i in range(1, n):\n        left[i] = left[i-1];\n        if a[i] > a[i-1]:\n            left[i] += 1;\n\n    for i in range(n-2, -1, -1):\n        right[i] = right[i+1];\n        if a[i] < a[i+1]:\n            right[i] += 1;\n\n    max_len = 0;\n    max_len_idx = -1;\n    for i in range(n):\n        if left[i] + right[i] > max_len:\n            max_len = left[i] + right[i];\n            max_len_idx = i;\n\n    print(max_len)\n    seq = [];\n    for i in range(max_len_idx, -1, -1):\n        if left[i] == 1:\n            break;\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right[i] == 1:\n            break;\n        seq.append('R')\n\n    print(''.join(seq));\n\nif __name__ == '__main__':\n    main();\n", "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left = [0] * n\n    right = [0] * n\n\n    left[0] = 1\n    right[n-1] = 1\n\n    for i in range(1, n):\n        left[i] = left[i-1] + 1\n        if a[i] > a[i-1]:\n            left[i] = 1\n\n    for i in range(n-2, -1, -1):\n        right[i] = right[i+1] + 1\n        if a[i] < a[i+1]:\n            right[i] = 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left[i] + right[i] - 1 > max_len:\n            max_len = left[i] + right[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 02:05:58.078558 size on output set 8
2022-04-20 02:05:58.078570 num operations 1
2022-04-20 02:05:58.078576 size on input set 1
2022-04-20 02:05:58.078744 using api key soukgp
2022-04-20 02:06:13.798293 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n"
    },
    {
      "index": 1,
      "text": "\ndef problem_C2():\n    pass\n"
    },
    {
      "index": 2,
      "text": "\ndef problem_C():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    ans = 0\n    for i in range(n):\n        for j in range(m):\n            if a[i] == b[j]:\n                ans += 1\n                b[j] = -1\n                break\n    print(ans)\n"
    },
    {
      "index": 3,
      "text": "\n# SOLUTION\n\ndef problem_C2():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C2()\n"
    },
    {
      "index": 4,
      "text": "\n# SOLUTION\n\ndef problem_C2():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):  # find the first value that is equal to or greater than x\n        l, r = 0, m\n        while l < r:  # binary search\n            mid = (l + r + 1) // 2\n            if p[mid] > x:\n                r = mid - 1\n            else:  # p[mid] <= x\n                l = mid\n        return l + 1\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C2()\n"
    },
    {
      "index": 5,
      "text": "\n\n# SOLUTION 2\n\ndef problem_C2():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C2()\n"
    },
    {
      "index": 6,
      "text": "\n# SOLUTION\n\ndef problem_C():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C()\n"
    },
    {
      "index": 7,
      "text": "\n# SOLUTION\n\ndef problem_C2():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C2()\n"
    }
  ],
  "created": 1650420358,
  "object": "edit"
}
2022-04-20 02:06:13.798666 fix syntax errors 8 ['\n', '\ndef problem_C2():\n    pass\n', '\ndef problem_C():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    ans = 0\n    for i in range(n):\n        for j in range(m):\n            if a[i] == b[j]:\n                ans += 1\n                b[j] = -1\n                break\n    print(ans)\n', "\n# SOLUTION\n\ndef problem_C2():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C2()\n", "\n# SOLUTION\n\ndef problem_C2():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):  # find the first value that is equal to or greater than x\n        l, r = 0, m\n        while l < r:  # binary search\n            mid = (l + r + 1) // 2\n            if p[mid] > x:\n                r = mid - 1\n            else:  # p[mid] <= x\n                l = mid\n        return l + 1\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C2()\n", "\n\n# SOLUTION 2\n\ndef problem_C2():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C2()\n", "\n# SOLUTION\n\ndef problem_C():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C()\n", "\n# SOLUTION\n\ndef problem_C2():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C2()\n"]
2022-04-20 02:06:13.798737 size on output set 7
