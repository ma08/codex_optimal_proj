2022-04-20 01:53:03.625055 num operations 1
2022-04-20 01:53:03.625077 size on input set 1
2022-04-20 01:53:03.625293 using api key sunu
2022-04-20 01:53:10.643655 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n"
    },
    {
      "index": 2,
      "text": "\nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n"
    },
    {
      "index": 3,
      "text": "\n\n"
    },
    {
      "index": 4,
      "text": "\nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n"
    },
    {
      "index": 5,
      "text": "\nimport math\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\nmoves = 0\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\nprint(moves)\n"
    },
    {
      "index": 6,
      "text": "import math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n"
    },
    {
      "index": 7,
      "text": "\n\nprint(int(input()) ** 2)\n"
    }
  ],
  "created": 1650419583,
  "object": "edit"
}
2022-04-20 01:53:10.643984 fix syntax errors 8 ['n = int(input())\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n', '\nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n', '\nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n', '\n\n', '\nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n', '\nimport math\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\nmoves = 0\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\nprint(moves)\n', 'import math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n', '\n\nprint(int(input()) ** 2)\n']
2022-04-20 01:53:10.644022 size on output set 7
2022-04-20 01:53:10.644033 num operations 1
2022-04-20 01:53:10.644039 size on input set 1
2022-04-20 01:53:10.644192 using api key kouti
2022-04-20 01:53:18.852735 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    print(min_moves(int(input())))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/env python3\n\n\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())  # noqa\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\ndef min_moves(n):\n    x, y = 0, 0\n    moves = 0\n    while True:\n        moves += 1\n        if n == (x + 1) * (y + 1):\n            return moves\n        elif n < (x + 1) * (y + 1):\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input().strip())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while n != x * y:\n        moves += 1\n        if n < x * y:\n            y -= 1\n            x += 1\n        else:\n    return moves\n\n            x += 1\n\ndef main():\n    n = int(input(\"Enter n: \"))\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\ndef min_moves(n):\n    x, y = n, n\n    moves = 0\n    while True:\n        moves += 1\n        if x == 1 and y == 1:\n        elif x == 1:\n            y -= 1\n            return moves\n        elif n < x * y:\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    print(min_moves(int(input())))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650419590,
  "object": "edit"
}
2022-04-20 01:53:18.853035 fix syntax errors 8 ["\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    print(min_moves(int(input())))\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\n\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())  # noqa\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef min_moves(n):\n    x, y = 0, 0\n    moves = 0\n    while True:\n        moves += 1\n        if n == (x + 1) * (y + 1):\n            return moves\n        elif n < (x + 1) * (y + 1):\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input().strip())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n", '\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while n != x * y:\n        moves += 1\n        if n < x * y:\n            y -= 1\n            x += 1\n        else:\n    return moves\n\n            x += 1\n\ndef main():\n    n = int(input("Enter n: "))\n    print(min_moves(n))\n\n\nif __name__ == \'__main__\':\n    main()\n', "\ndef min_moves(n):\n    x, y = n, n\n    moves = 0\n    while True:\n        moves += 1\n        if x == 1 and y == 1:\n        elif x == 1:\n            y -= 1\n            return moves\n        elif n < x * y:\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    print(min_moves(int(input())))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 01:53:18.853159 size on output set 6
