2022-04-20 03:20:53.920804 num operations 1
2022-04-20 03:20:53.920828 size on input set 1
2022-04-20 03:20:53.921080 using api key soukgp
2022-04-20 03:21:01.269493 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, input().split())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, input().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650424854,
  "object": "edit"
}
2022-04-20 03:21:01.269885 fix syntax errors 8 ['#!/usr/bin/env python3\n\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, input().split())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, input().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == "__main__":\n    main()\n', '\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == "__main__":\n    main()\n', '\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == "__main__":\n    main()\n', '\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == "__main__":\n    main()\n', '\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == "__main__":\n    main()\n', '\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == "__main__":\n    main()\n', '#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == "__main__":\n    main()\n', '\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 03:21:01.270108 size on output set 3
2022-04-20 03:21:01.270135 num operations 1
2022-04-20 03:21:01.270145 size on input set 1
2022-04-20 03:21:01.270374 using api key derek
2022-04-20 03:21:01.309162 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 03:21:02.811050 using api key sourya
2022-04-20 03:21:08.460787 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ng = [[] for i in range(n)]\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end = ' ')\n"
    },
    {
      "index": 1,
      "text": "\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end = ' ')\n"
    },
    {
      "index": 2,
      "text": "\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end = ' ')\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    sys.stdout.write(str(i % k + 1) + ' ')\n"
    },
    {
      "index": 4,
      "text": "\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end = ' ')\n"
    },
    {
      "index": 5,
      "text": "\ng = [[] for i in range(n)]\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end = ' ')\n"
    },
    {
      "index": 6,
      "text": "\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end=' ')\n"
    },
    {
      "index": 7,
      "text": "\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end=' ')\n"
    }
  ],
  "created": 1650424862,
  "object": "edit"
}
2022-04-20 03:21:08.461185 fix syntax errors 8 ["\ng = [[] for i in range(n)]\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end = ' ')\n", "\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end = ' ')\n", "\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end = ' ')\n", "\nimport sys\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    sys.stdout.write(str(i % k + 1) + ' ')\n", "\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end = ' ')\n", "\ng = [[] for i in range(n)]\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end = ' ')\n", "\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end=' ')\n", "\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end=' ')\n"]
2022-04-20 03:21:08.461367 size on output set 4
