["\ndef find_min_arr(n, k):\n    arr = [1] * k\n    for i in range(k - 1, -1, -1):\n        if sum(arr) > n:\n            arr[i] -= sum(arr) - n\n        if arr[i] == 0:\n            return False\n        if i == 0:\n            break\n        if arr[i] > arr[i - 1] * 2:\n            arr[i - 1] = arr[i] // 2\n    return arr\n\n\nn, k = [int(x) for x in input().split()]\narr = find_min_arr(n, k)\nif arr:\n    print(\"YES\")\n    print(*arr)\nelse:\n    print(\"NO\")\n", "\ndef main():\n    n, k = map(int, input().split())\n    if(n == 1 and k == 1):\n        print(\"YES\")\n        print(\"1\")\n    elif(n < k):\n        print(\"NO\")\n    elif(n > k):\n        a = [1]\n        for i in range(k - 1):\n            a.append(2 * a[i])\n        if(sum(a) == n):\n            print(\"YES\")\n            print(\" \".join(map(str, a)))\n        else:\n            print(\"NO\")\n    elif(n == k):\n        print(\"YES\")\n        print(\" \".join(map(str, range(1, n + 1))))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef find_min_arr(n, k, arr=None):\n    if arr is None:\n        arr = [1] * k\n    if sum(arr) == n:\n        return arr\n    if sum(arr) > n:\n        return False\n    for i in range(k-1, -1, -1):\n        if arr[i] == 0:\n            continue\n        arr[i] *= 2\n        result = find_min_arr(n, k, arr)\n        if result:\n            return result\n        arr[i] //= 2\n\nn, k = [int(x) for x in input().split()]\nresult = find_min_arr(n, k)\nif result:\n    print(\"YES\")\n    print(*result)\nelse:\n    print(\"NO\")\n", "\n\ndef find_min_arr(n, k):\n    arr = [1] * k\n    for i in range(k-1, -1, -1):\n        if sum(arr) > n:\n            arr[i] -= sum(arr) - n\n        if arr[i] == 0:\n            return False\n        if i == 0:\n            break\n        if arr[i] > arr[i-1] * 2 and arr[i] != 1:\n            arr[i-1] = arr[i] // 2\n    return arr\n\nn, k = [int(x) for x in input().split()]\narr = find_min_arr(n, k)\nif arr:\n    print(\"YES\")\n    print(*arr)\nelse:\n    print(\"NO\")\n", "\ndef find_min_arr(n, k):\n    arr = [1] * k\n    for i in range(k - 1, -1, -1):\n        if sum(arr) > n:\n            arr[i] -= sum(arr) - n\n        if arr[i] == 0:\n            return False\n        if i == 0:\n            break\n        if arr[i] > arr[i - 1] * 2:\n            arr[i - 1] = arr[i] // 2\n\n    return arr\n\nn, k = [int(x) for x in input().split()]\narr = find_min_arr(n, k)\nif arr:\n    print(\"YES\")\n    print(*arr)\nelse:\n    print(\"NO\")\n", "\n\na = int(input())\nb = int(input())\nprint(a + b)\n", "\n\ndef find_min_arr(n, k):\n    arr = [1] * k\n    for i in range(k - 1, -1, -1):\n        if sum(arr) > n:\n            arr[i] -= sum(arr) - n\n        if arr[i] == 0:\n            return False\n        if i == 0:\n            break\n        if arr[i] > arr[i - 1] * 2:\n            arr[i - 1] = arr[i] // 2\n\n    return arr\n\nn, k = [int(x) for x in input().split()]\narr = find_min_arr(n, k)\nif arr:\n    print(\"YES\")\n    print(*arr)\nelse:\n    print(\"NO\")\n", "\ndef main():\n    n, k = map(int, input().split())\n    if n == 1 and k == 1:\n        print(\"YES\")\n        print(\"1\")\n    elif n < k:\n        print(\"NO\")\n    elif n > k:\n        a = [1]\n        for i in range(k - 1):\n            a.append(2 * a[i])\n        if sum(a) == n:\n            print(\"YES\")\n            print(\" \".join(map(str, a)))\n        else:\n            print(\"NO\")\n    else:\n        print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef find_min_arr(n, k, arr):\n    if k == 0:\n        if n == 0:\n            return True\n        else:\n            return False\n    if n == 0:\n        return True\n    if arr[n][k] != -1:\n        return arr[n][k]\n    if n >= 1 and find_min_arr(n-1, k-1, arr):\n        arr[n][k] = 1\n        return True\n    if n >= 2 and find_min_arr(n-2, k-1, arr):\n        arr[n][k] = 2\n        return True\n    if n >= 3 and find_min_arr(n-3, k-1, arr):\n        arr[n][k] = 3\n        return True\n    if n >= 4 and find_min_arr(n-4, k-1, arr):\n        arr[n][k] = 4\n        return True\n    if n >= 5 and find_min_arr(n-5, k-1, arr):\n        arr[n][k] = 5\n        return True\n    if n >= 6 and find_min_arr(n-6, k-1, arr):\n        arr[n][k] = 6\n        return True\n    arr[n][k] = 0\n    return False\n\nn, k = [int(x) for x in input().split()]\narr = [[-1] * (k+1) for _ in range(n+1)]\nif find_min_arr(n, k, arr):\n    print(\"YES\")\n    print(*arr[n][1:])\nelse:\n    print(\"NO\")\n"]