["\nN = int(input())\nA, B, C, D, E = [int(i) for i in input().split()]\n\nprint((N + A - 1) // A + (N + B - 1) // B + (N + C - 1) // C + (N + D - 1) // D + (N + E - 1) // E)\n", "\n# My answer\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n", "\nN = int(input())\nA, B, C, D, E = [int(i) for i in input().split()]\n\ndef minute_needed(num_people):\n    return (num_people + A - 1) // A + \\\n           (num_people + B - 1) // B + \\\n           (num_people + C - 1) // C + \\\n           (num_people + D - 1) // D + \\\n           (num_people + E - 1) // E\n\nprint(minute_needed(N))\n", "\nN = int(input())\nA, B, C, D, E = [int(i) for i in input().split()] \n\ndef minute_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (num_people + C - 1) // C + (num_people + D - 1) // D + (num_people + E - 1) // E \n\nprint(minute_needed(N))\n", "\n\n# My answer\nN, A, B, C, D, E = map(int, input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n", "\n# My answer\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\nN, A, B, C, D, E = map(int, input().split())\n\nprint((N + A - 1) // A + (N + B - 1) // B + (N + C - 1) // C + (N + D - 1) // D + (N + E - 1) // E)\n", "\nN = int(input())\nA, B, C, D, E = map(int, input().split())\n\ndef minute_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (\n        num_people + C - 1) // C + (num_people + D - 1) // D + (\n            num_people + E - 1) // E\n\nprint(minute_needed(N))\n", "\nN = int(input())\nA, B, C, D, E = [int(i) for i in input().split()]\n\n\nprint(minute_needed(N))\n", "\n\n# My answer \nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n", "\nN = int(input())\nA, B, C, D, E = map(int, input().split())\n\ndef minute_needed(num_people):\n    return (num_people + A - 1) // A + \\\n           (num_people + B - 1) // B + \\\n           (num_people + C - 1) // C + \\\n           (num_people + D - 1) // D + \\\n           (num_people + E - 1) // E\n\nprint(minute_needed(N))\n", "\nN = int(input())\nA, B, C, D, E = [int(i) for i in input().split()]\n\ndef minute_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (num_people + C - 1) // C + (num_people + D - 1) // D + (num_people + E - 1) // E\n\nprint(minute_needed(N))\n", "\n\n# My answer\nN, A, B, C, D, E = map(int, input().split())\n\ntrain = N // A\nbus = (N - (A * train)) // B\ntaxi = (N - (A * train) - (B * bus)) // C\nairplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\nship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nif N % A != 0: train += 1\nif (N - (A * train)) % B != 0: bus += 1\nif (N - (A * train) - (B * bus)) % C != 0: taxi += 1\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0: airplane += 1\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0: ship += 1\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n"]