2022-04-20 03:18:09.676614 num operations 1
2022-04-20 03:18:09.676636 size on input set 1
2022-04-20 03:18:09.676901 using api key kouti
2022-04-20 03:18:19.604805 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i-1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i-1] == dishes[i] - 1:\n        ans += bonus[dishes[i-1]-1]\n\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom collections import deque\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\nq = deque(a)\nans = 0\nwhile m > 0:\n    ans += q.pop()\n    m -= 1\n    q.appendleft(q.pop())\n\nprint(ans) \n"
    },
    {
      "index": 3,
      "text": "\na = int(input())\nb = int(input())\nprint(a + b)\n"
    },
    {
      "index": 4,
      "text": "\nn = int(input()) # number of elements in the array\narr = list(map(int, input().split())) # array elements\narr.sort() # sort the array\nfor i in range(n):\n    print(arr[i], end=' ') # print the array elements\n"
    },
    {
      "index": 5,
      "text": "#!/bin/python3\n\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n"
    },
    {
      "index": 6,
      "text": "\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n"
    },
    {
      "index": 7,
      "text": "\n#\n# n = int(input())\n# dishes = list(map(int, input().split()))\n# points = list(map(int, input().split()))\n# bonus = list(map(int, input().split()))\n#\n# ans = 0\n# for i in range(n):\n#     ans += points[dishes[i] - 1]\n#     if i > 0 and dishes[i] == dishes[i - 1] + 1:\n#         ans += bonus[dishes[i - 1] - 1]\n#\n# print(ans)\n"
    }
  ],
  "created": 1650424689,
  "object": "edit"
}
2022-04-20 03:18:19.605225 fix syntax errors 8 ['\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i-1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n', '\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i-1] == dishes[i] - 1:\n        ans += bonus[dishes[i-1]-1]\n\nprint(ans)\n', '\n\nfrom collections import deque\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\nq = deque(a)\nans = 0\nwhile m > 0:\n    ans += q.pop()\n    m -= 1\n    q.appendleft(q.pop())\n\nprint(ans) \n', '\na = int(input())\nb = int(input())\nprint(a + b)\n', "\nn = int(input()) # number of elements in the array\narr = list(map(int, input().split())) # array elements\narr.sort() # sort the array\nfor i in range(n):\n    print(arr[i], end=' ') # print the array elements\n", '#!/bin/python3\n\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n', '\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n', '\n#\n# n = int(input())\n# dishes = list(map(int, input().split()))\n# points = list(map(int, input().split()))\n# bonus = list(map(int, input().split()))\n#\n# ans = 0\n# for i in range(n):\n#     ans += points[dishes[i] - 1]\n#     if i > 0 and dishes[i] == dishes[i - 1] + 1:\n#         ans += bonus[dishes[i - 1] - 1]\n#\n# print(ans)\n']
2022-04-20 03:18:19.605295 size on output set 8
2022-04-20 03:18:19.605311 num operations 1
2022-04-20 03:18:19.605320 size on input set 1
2022-04-20 03:18:19.605545 using api key derek
2022-04-20 03:18:19.643396 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 03:18:21.145384 using api key derek
2022-04-20 03:18:21.183325 in retry 5 3.0 <class 'Exception'>, Retrying in 3 seconds...
2022-04-20 03:18:24.186803 using api key gabby
2022-04-20 03:18:32.800775 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n"
    },
    {
      "index": 1,
      "text": "\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n"
    },
    {
      "index": 2,
      "text": "\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n"
    },
    {
      "index": 3,
      "text": "\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n"
    },
    {
      "index": 4,
      "text": "\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]  # -1 to make it 0-indexed\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]  # dish = dish number\n    total_points += base_points[dish]  # add base points\n    if i != 0 and dishes[i - 1] == dish - 1:  # if not first dish and previous dish is one less\n        total_points += additional_points[dish - 1]  # add additional points\n\nprint(total_points)\n"
    },
    {
      "index": 5,
      "text": "\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n"
    },
    {
      "index": 6,
      "text": "\n\n\n\ndef get_input():\n    return [int(a) for a in stdin.readline().split()]\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = get_input()\nadditional_points = get_input()\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n"
    },
    {
      "index": 7,
      "text": "\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1 and dish != 0:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n"
    }
  ],
  "created": 1650424704,
  "object": "edit"
}
2022-04-20 03:18:32.801374 fix syntax errors 8 ['\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n', '\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n', '\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n', '\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n', '\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]  # -1 to make it 0-indexed\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]  # dish = dish number\n    total_points += base_points[dish]  # add base points\n    if i != 0 and dishes[i - 1] == dish - 1:  # if not first dish and previous dish is one less\n        total_points += additional_points[dish - 1]  # add additional points\n\nprint(total_points)\n', '\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n', '\n\n\n\ndef get_input():\n    return [int(a) for a in stdin.readline().split()]\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = get_input()\nadditional_points = get_input()\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n', '\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1 and dish != 0:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n']
2022-04-20 03:18:32.801477 size on output set 6
