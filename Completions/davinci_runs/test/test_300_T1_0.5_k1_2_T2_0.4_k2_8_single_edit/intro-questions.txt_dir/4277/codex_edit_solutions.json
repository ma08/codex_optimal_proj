["import sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n", "import sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n", "\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n", "\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split())  # n, a, b = input().split()\n\nprint(min(n * a, b))\n", "import sys\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n", "\nimport sys\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n", "#!/usr/bin/env python3\n\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n", "\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split())  # N: \uc0ac\ub78c \uc218, A: \uac00\uaca9, B: \ucfe0\ud3f0\n\n\n\ndef min_expense(N, A, B):  # \ucd5c\uc18c \uacbd\ube44\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n", "\n\n\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n", "import sys\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n", "\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n"]