["\n\ndef main():\n    num_ingredients = int(input())\n    ingredients = list(map(int, input().split()))\n    ingredients.sort()\n\n    while len(ingredients) > 1:\n        ingredients[0] = (ingredients[0] + ingredients[1]) // 2\n        ingredients.pop(1)\n        ingredients.sort()\n\n    print(ingredients[0])\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v) # heapq\ub97c \uc0ac\uc6a9\ud558\uae30 \uc704\ud574 \uc6b0\uc120\uc21c\uc704 \ud050\ub85c \ubcc0\ud658\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x+y)/2)\n\nprint(v[0])\n", "\n\ndef main():\n    num_ingredients = int(input()) # Get the number of ingredients\n    ingredients = list(map(int, input().split())) # Get the ingredients\n    ingredients.sort() # Sort the ingredients\n\n    while len(ingredients) > 1: # While the list of ingredients is not empty\n        ingredients[0] = (ingredients[0] + ingredients[1]) / 2 # Calculate the new ingredient\n        ingredients.pop(1) # Remove the second ingredient\n        ingredients.sort() # Sort the ingredients again\n\n    print(ingredients[0]) # Print the remaining ingredient\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num - 1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x + y) / 2)\n\nprint(v[0])\n", "\n\ndef main():\n    ingredients = list(map(int, input().split()))\n    ingredients.sort()\n\n    while len(ingredients) > 1:\n        ingredients[0] = (ingredients[0] + ingredients[1]) / 2\n        ingredients.pop(1)\n        ingredients.sort()\n\n    print(ingredients[0])\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x+y)/2)\n\nprint(v[0])\n", "\nimport sys\n\nnum = int(sys.stdin.readline())\nnums = list(map(int, sys.stdin.readline().split()))\n\nnums.sort()\nresult = 0\n\nprint(v[0])\n", "\n\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, int((x+y)/2))\n\nprint(v[0])\n", "\n\ndef main():\n    num_ingredients = int(input())\n    ingredients = list(map(int, input().split()))\n    ingredients.sort()\n\n    while len(ingredients) > 1:\n        ingredients[0] = (ingredients[0] + ingredients[1]) / 2\n\n        ingredients.pop(1)\n        ingredients.sort()\n\n    print(ingredients[0])\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    num_ingredients = int(input())  # number of ingredients\n    ingredients = list(map(int, input().split()))  # list of ingredients\n    ingredients.sort()  # sort the list of ingredients\n\n    while len(ingredients) > 1:\n        ingredients[0] = (ingredients[0] + ingredients[1]) / 2  # add the first two ingredients\n        ingredients.pop(1)  # remove the first ingredient\n        ingredients.sort()  # sort the list of ingredients\n\n    print(ingredients[0])  # print the average\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, int((x+y)/2))\n\nprint(v[0])\n", "\n\ndef main():\n    n = int(input())\n    s = list(map(int, input().split()))\n    s.sort()\n\n    while len(s) > 1:\n        s[0] = (s[0] + s[1]) / 2\n        s.pop(1)\n        s.sort()\n\n    print(s[0])\n\nif __name__ == '__main__':\n    main()\n"]