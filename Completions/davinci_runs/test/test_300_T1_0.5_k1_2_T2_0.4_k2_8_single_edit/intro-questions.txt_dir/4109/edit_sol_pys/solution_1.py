

# 全探索できるかどうかは、各書籍のコストの総和がX以上になるかどうかで判定できる
# すべてのアルゴリズムのレベルがX以上になれば、コストが最小値になる
N, M, X = map(int, input().split())  # N:書籍の数, M:アルゴリズムの数, X:最低限必要なアルゴリズムのレベル
A = []  # 各書籍のアルゴリズムのレベル
C = []  # 各書籍のコスト
for _ in range(N):  # 各書籍について
    c, *a = map(int, input().split())  # 各書籍のコストとアルゴリズムのレベルを取得
    A.append(a)  # 各書籍のアルゴリズムのレベルを追加
    C.append(c)  # 各書籍のコストを追加

for i in range(1 << N):  # 全探索
    # 各書籍について、ビットが立っていると購入する、立っていないと購入しない(買う/買わないを2通り)
    # この時、各アルゴリズムについて、購入した書籍の内、各アルゴリズムのレベルが最も高いものを足し合わせる(買う/買わないを2通り)
    # これがX以上になればOK(買う/買わないを2通り)
    cost = 0
    level = [0] * M
    for j in range(N):  # 各書籍について
        if i & (1 << j):  # 購入する書籍かどうか
            cost += C[j]
            for k in range(M):  # 各アルゴリズムについて
                level[k] = max(level[k], A[j][k])
    if all(x >= X for x in level):  # すべてのアルゴリズムのレベルがX以上であれば
        ans = min(ans, cost)
if ans == 10**10:
    print(-1)
else:
    print(ans)
