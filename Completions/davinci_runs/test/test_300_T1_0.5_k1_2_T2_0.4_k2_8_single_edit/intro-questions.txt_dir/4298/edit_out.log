2022-04-20 03:28:16.537242 num operations 1
2022-04-20 03:28:16.537262 size on input set 1
2022-04-20 03:28:16.537503 using api key gabby
2022-04-20 03:28:24.120816 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport math\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\nimport math\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport fractions\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    gcd = A[0]\n    for i in range(N):\n        gcd = fractions.gcd(gcd, A[i])\n    print(gcd)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport math\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "import math\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "import math\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650425296,
  "object": "edit"
}
2022-04-20 03:28:24.121213 fix syntax errors 8 ['\nimport math\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport math\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport math\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport math\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == "__main__":\n    main()\n', '\nimport fractions\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    gcd = A[0]\n    for i in range(N):\n        gcd = fractions.gcd(gcd, A[i])\n    print(gcd)\n\nif __name__ == "__main__":\n    main()\n', '\nimport math\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == "__main__":\n    main()\n', 'import math\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == "__main__":\n    main()\n', 'import math\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 03:28:24.121276 size on output set 4
2022-04-20 03:28:24.121292 num operations 1
2022-04-20 03:28:24.121301 size on input set 1
2022-04-20 03:28:24.121523 using api key jaanu
2022-04-20 03:28:30.131515 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN, D = map(int, input().split())\n\nprint(N//(D*2+1) + 1)\n"
    },
    {
      "index": 1,
      "text": "\n\nN, D = map(int, input().split())\n\n\nprint(N//(D*2+1))\n"
    },
    {
      "index": 2,
      "text": "\n\nN, D = map(int, input().split())\n\nprint(N//(D*2+1)+1)\n"
    },
    {
      "index": 3,
      "text": "\nN, D = map(int, input().split())\n\nprint(N//(D*2+1))\n"
    },
    {
      "index": 4,
      "text": "\n\nN, D = map(int, input().split())\n\nprint(N // (D * 2 + 1))\n"
    },
    {
      "index": 5,
      "text": "\n\nN, D = map(int, input().split())\n\nprint(N//(D*2+1) + 1)\n"
    },
    {
      "index": 6,
      "text": "\nN, D = map(int, input().split())\n\nprint(N//(D*2+1))\n"
    },
    {
      "index": 7,
      "text": "\n\nN, D = map(int, input().split())  # N: \u6b8b\u308a\u306e\u4eba\u6570, D: \u6b8b\u308a\u306e\u8ddd\u96e2\n\nprint(N // (D * 2 + 1))\n"
    }
  ],
  "created": 1650425304,
  "object": "edit"
}
2022-04-20 03:28:30.131858 fix syntax errors 8 ['\n\nN, D = map(int, input().split())\n\nprint(N//(D*2+1) + 1)\n', '\n\nN, D = map(int, input().split())\n\n\nprint(N//(D*2+1))\n', '\n\nN, D = map(int, input().split())\n\nprint(N//(D*2+1)+1)\n', '\nN, D = map(int, input().split())\n\nprint(N//(D*2+1))\n', '\n\nN, D = map(int, input().split())\n\nprint(N // (D * 2 + 1))\n', '\n\nN, D = map(int, input().split())\n\nprint(N//(D*2+1) + 1)\n', '\nN, D = map(int, input().split())\n\nprint(N//(D*2+1))\n', '\n\nN, D = map(int, input().split())  # N: 残りの人数, D: 残りの距離\n\nprint(N // (D * 2 + 1))\n']
2022-04-20 03:28:30.131942 size on output set 6
