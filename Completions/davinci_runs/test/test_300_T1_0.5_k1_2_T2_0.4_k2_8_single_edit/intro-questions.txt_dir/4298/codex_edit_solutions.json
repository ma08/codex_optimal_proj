["\n\nN, D = map(int, input().split())\n\nprint(N // (D * 2 + 1))\n", "import math\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nN, D = map(int, input().split())\n\nprint(N//(D*2+1) + 1)\n", "\n\nN, D = map(int, input().split())\n\nprint(N//(D*2+1)+1)\n", "\nimport math\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport math\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nN, D = map(int, input().split())  # N: \u6b8b\u308a\u306e\u4eba\u6570, D: \u6b8b\u308a\u306e\u8ddd\u96e2\n\nprint(N // (D * 2 + 1))\n", "\n\nN, D = map(int, input().split())\n\n\nprint(N//(D*2+1))\n", "\nimport fractions\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    gcd = A[0]\n    for i in range(N):\n        gcd = fractions.gcd(gcd, A[i])\n    print(gcd)\n\nif __name__ == \"__main__\":\n    main()\n", "\nN, D = map(int, input().split())\n\nprint(N//(D*2+1))\n"]