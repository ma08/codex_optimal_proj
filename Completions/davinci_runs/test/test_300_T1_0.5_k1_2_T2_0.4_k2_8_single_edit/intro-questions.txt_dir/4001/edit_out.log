2022-04-20 01:33:32.941126 num operations 1
2022-04-20 01:33:32.941143 size on input set 1
2022-04-20 01:33:32.941337 using api key gabby
2022-04-20 01:33:43.147175 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nN = int(input())\ndivisors = list(map(int, input().split())) + [1]\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i + 1]:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\nprint(x, y)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math\n\n\ndef get_divisors(n):\n    divisors = []\n    for i in range(1, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            divisors.append(i)\n            if i != n // i:\n                divisors.append(n // i)\n    return divisors\n\n\nN = int(input())  # N!\ndivisors = get_divisors(N)\ndivisors.sort()\n\nfor i in range(len(divisors)):\n    if divisors[i] != 1 and divisors[i] != N:\n        print(divisors[i])\n        break\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if i < N - 1 and divisors[i] == divisors[i + 1]:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\nprint(x, y)\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    N = int(input())\n    divisors = list(map(int, input().split()))\n    x = 1\n    y = 1\n    for i in range(N):\n        if divisors[i] == 1:\n            continue\n        if divisors[i] == divisors[i + 1]:\n            x *= divisors[i]\n            i += 1\n        else:\n            y *= divisors[i]\n    print(x, y)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport math\nn = int(input())\ndivisors = list(map(int, input().split()))[:n]\nx = math.prod(divisors)\ny = math.prod(divisors)\nprint(x, y, sep=' ')\n"
    },
    {
      "index": 5,
      "text": "\nprint('Hello World!')\n"
    },
    {
      "index": 6,
      "text": "\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i + 1]:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\nprint(x, y)\n"
    },
    {
      "index": 7,
      "text": "\n\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N - 1):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i + 1]:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\nprint(x, y)\n"
    }
  ],
  "created": 1650418413,
  "object": "edit"
}
2022-04-20 01:33:43.147507 fix syntax errors 8 ['#!/usr/bin/env python3\n\nN = int(input())\ndivisors = list(map(int, input().split())) + [1]\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i + 1]:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\nprint(x, y)\n', '\n\nimport math\n\n\ndef get_divisors(n):\n    divisors = []\n    for i in range(1, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            divisors.append(i)\n            if i != n // i:\n                divisors.append(n // i)\n    return divisors\n\n\nN = int(input())  # N!\ndivisors = get_divisors(N)\ndivisors.sort()\n\nfor i in range(len(divisors)):\n    if divisors[i] != 1 and divisors[i] != N:\n        print(divisors[i])\n        break\n', '\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if i < N - 1 and divisors[i] == divisors[i + 1]:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\nprint(x, y)\n', '\n\ndef main():\n    N = int(input())\n    divisors = list(map(int, input().split()))\n    x = 1\n    y = 1\n    for i in range(N):\n        if divisors[i] == 1:\n            continue\n        if divisors[i] == divisors[i + 1]:\n            x *= divisors[i]\n            i += 1\n        else:\n            y *= divisors[i]\n    print(x, y)\n\n\nif __name__ == "__main__":\n    main()\n', "\nimport math\nn = int(input())\ndivisors = list(map(int, input().split()))[:n]\nx = math.prod(divisors)\ny = math.prod(divisors)\nprint(x, y, sep=' ')\n", "\nprint('Hello World!')\n", '\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i + 1]:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\nprint(x, y)\n', '\n\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N - 1):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i + 1]:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\nprint(x, y)\n']
2022-04-20 01:33:43.147557 size on output set 8
2022-04-20 01:33:43.147568 num operations 1
2022-04-20 01:33:43.147573 size on input set 1
2022-04-20 01:33:43.147725 using api key soukgp
2022-04-20 01:33:53.099399 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# read input\nN, K = map(int, input().split())\nL = list(map(int, input().split())\n\n# sort list\nL.sort()\n\n# create list of numbers\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print numbers\nprint(X[0], X[1])\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print numbers\nprint(X[0])\nprint(X[1])\n"
    },
    {
      "index": 2,
      "text": "\n\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print numbers\nprint(X[0], X[1], end=' ')\n"
    },
    {
      "index": 3,
      "text": "\n\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print numbers\nprint(X[0])\n"
    },
    {
      "index": 4,
      "text": "\nN = int(input())\nL = list(map(int, input().split()))\n\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\nprint(X[0], X[1])\n"
    },
    {
      "index": 5,
      "text": "\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers\nX = [0, 0]\nfor i in D:\n    if D[i] % 2 == 0:\n        X[0] = i\n    else:\n        X[1] = i\n\n# print numbers\nprint(X[0], X[1], sep=' ')\n"
    },
    {
      "index": 6,
      "text": "#!/usr/bin/env python3\n\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print numbers\nprint(X[0], X[1])\n"
    },
    {
      "index": 7,
      "text": "\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print numbers\nprint(X[0], X[1])\n"
    }
  ],
  "created": 1650418423,
  "object": "edit"
}
2022-04-20 01:33:53.099685 fix syntax errors 8 ['\n\n# read input\nN, K = map(int, input().split())\nL = list(map(int, input().split())\n\n# sort list\nL.sort()\n\n# create list of numbers\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print numbers\nprint(X[0], X[1])\n', '#!/usr/bin/env python3\n\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print numbers\nprint(X[0])\nprint(X[1])\n', "\n\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print numbers\nprint(X[0], X[1], end=' ')\n", '\n\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print numbers\nprint(X[0])\n', '\nN = int(input())\nL = list(map(int, input().split()))\n\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\nprint(X[0], X[1])\n', "\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers\nX = [0, 0]\nfor i in D:\n    if D[i] % 2 == 0:\n        X[0] = i\n    else:\n        X[1] = i\n\n# print numbers\nprint(X[0], X[1], sep=' ')\n", '#!/usr/bin/env python3\n\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print numbers\nprint(X[0], X[1])\n', '\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print numbers\nprint(X[0], X[1])\n']
2022-04-20 01:33:53.099812 size on output set 8
