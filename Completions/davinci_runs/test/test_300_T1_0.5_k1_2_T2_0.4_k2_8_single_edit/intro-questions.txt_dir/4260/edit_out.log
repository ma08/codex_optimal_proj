2022-04-20 03:14:49.793910 num operations 1
2022-04-20 03:14:49.793930 size on input set 1
2022-04-20 03:14:49.794207 using api key kouti
2022-04-20 03:14:55.988423 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "def main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "def main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\n\nimport math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "import math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\n\ndef main():\n    T, X = map(int, input().split())\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    T, X = map(int, input().split())  # T: \u5168\u4f53\u306e\u6642\u9593 X: \u5168\u4f53\u306e\u8ddd\u96e2\n    print(T/X)  # \u5168\u4f53\u306e\u6642\u9593/\u5168\u4f53\u306e\u8ddd\u96e2\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650424489,
  "object": "edit"
}
2022-04-20 03:14:55.988857 fix syntax errors 8 ["def main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n", "\n\n\nimport math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n", "\n\n\ndef main():\n    T, X = map(int, input().split())\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    T, X = map(int, input().split())  # T: 全体の時間 X: 全体の距離\n    print(T/X)  # 全体の時間/全体の距離\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 03:14:55.988921 size on output set 7
2022-04-20 03:14:55.988937 num operations 1
2022-04-20 03:14:55.988946 size on input set 1
2022-04-20 03:14:55.989177 using api key kouti
2022-04-20 03:15:06.469199 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 \ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n# https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 \ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\nimport math\n\ndef input():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    C = list(map(int, input().split()))\n\n    ans = 0\n    for i in range(N):\n        ans += B[A[i] - 1]\n        if i > 0 and A[i] - A[i - 1] == 1:\n            ans += C[A[i - 1] - 1]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650424496,
  "object": "edit"
}
2022-04-20 03:15:06.469585 fix syntax errors 8 ["\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 \ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 \ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef input():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    C = list(map(int, input().split()))\n\n    ans = 0\n    for i in range(N):\n        ans += B[A[i] - 1]\n        if i > 0 and A[i] - A[i - 1] == 1:\n            ans += C[A[i - 1] - 1]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\n\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 03:15:06.469774 size on output set 5
