2022-04-20 03:16:11.020004 num operations 1
2022-04-20 03:16:11.020026 size on input set 1
2022-04-20 03:16:11.020246 using api key sourya
2022-04-20 03:16:19.017802 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline()\n    t = sys.stdin.readline()\n    count = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    s = input()\n    t = input()\n    count = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    s = raw_input()\n    t = raw_input()\n    count = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    s = input()\n    t = input()\n    count = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\n\ndef main():\n    s = input().strip()\n    t = input().strip()\n    count = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\ndef main():\n    s = input()\n    t = input()\n    count = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "import sys\n\ndef main():\n    s = input()\n    t = input()\n    count = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\nimport sys, math\nfrom collections import deque, defaultdict, Counter\nfrom itertools import accumulate, product, permutations, combinations\nfrom operator import itemgetter\nfrom bisect import bisect_left, bisect_right\nfrom heapq import heappop, heappush\nfrom fractions import gcd\nfrom math import ceil, floor, sqrt, cos, sin, pi\nfrom copy import deepcopy\n\n# If you use recursive call, uncomment this code\n#sys.setrecursionlimit(10**6)\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650424571,
  "object": "edit"
}
2022-04-20 03:16:19.018188 fix syntax errors 8 ["\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline()\n    t = sys.stdin.readline()\n    count = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    s = input()\n    t = input()\n    count = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    s = raw_input()\n    t = raw_input()\n    count = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    s = input()\n    t = input()\n    count = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    s = input().strip()\n    t = input().strip()\n    count = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    s = input()\n    t = input()\n    count = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    s = input()\n    t = input()\n    count = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys, math\nfrom collections import deque, defaultdict, Counter\nfrom itertools import accumulate, product, permutations, combinations\nfrom operator import itemgetter\nfrom bisect import bisect_left, bisect_right\nfrom heapq import heappop, heappush\nfrom fractions import gcd\nfrom math import ceil, floor, sqrt, cos, sin, pi\nfrom copy import deepcopy\n\n# If you use recursive call, uncomment this code\n#sys.setrecursionlimit(10**6)\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 03:16:19.018258 size on output set 7
2022-04-20 03:16:19.018276 num operations 1
2022-04-20 03:16:19.018286 size on input set 1
2022-04-20 03:16:19.018535 using api key jaanu
2022-04-20 03:16:24.448776 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ns = input()\nt = input()\n\nans = 0\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans += 1\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\ns = input()\nt = input()\nans = 0\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans += 1\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\ns = input()\nt = input()\n\nans = 0\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans += 1\n\nprint(ans)\n"
    },
    {
      "index": 3,
      "text": "\ns = input()\nt = input()\n\nans = 0\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans += 1\n\nprint(ans)\n"
    },
    {
      "index": 4,
      "text": "\ns = input()\nt = input()\n\nans = 0\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans += 1\n\nprint(ans)\n"
    },
    {
      "index": 5,
      "text": "\ns = input()\nt = input()\n\nans = 0\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans += 1\n\nprint(ans)\n"
    },
    {
      "index": 6,
      "text": "\ns = input()\nt = input()\n\nans = 0\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans += 1\n\nprint(ans)\n"
    },
    {
      "index": 7,
      "text": "\ns = input()\nt = input()\n\ncount = 0\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650424579,
  "object": "edit"
}
2022-04-20 03:16:24.449155 fix syntax errors 8 ['\ns = input()\nt = input()\n\nans = 0\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans += 1\n\nprint(ans)\n', '\ns = input()\nt = input()\nans = 0\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans += 1\nprint(ans)\n', '\ns = input()\nt = input()\n\nans = 0\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans += 1\n\nprint(ans)\n', '\ns = input()\nt = input()\n\nans = 0\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans += 1\n\nprint(ans)\n', '\ns = input()\nt = input()\n\nans = 0\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans += 1\n\nprint(ans)\n', '\ns = input()\nt = input()\n\nans = 0\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans += 1\n\nprint(ans)\n', '\ns = input()\nt = input()\n\nans = 0\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans += 1\n\nprint(ans)\n', '\ns = input()\nt = input()\n\ncount = 0\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        count += 1\n\nprint(count)\n']
2022-04-20 03:16:24.449206 size on output set 3
