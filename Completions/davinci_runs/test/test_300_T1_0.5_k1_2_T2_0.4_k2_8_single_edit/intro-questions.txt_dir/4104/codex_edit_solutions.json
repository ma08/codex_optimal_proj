["\n\ndef main():\n    expression = input(\"Enter your expression\")\n    try:\n        result = eval(expression)\n        print(result)\n    except:\n        print(\"Syntax error\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    expression = input()\n    expression = expression.split('-')\n    result = 0\n    for i in expression:\n        i = i.split('+')\n        for j in i:\n            result += int(j)\n        result -= 1\n    print(result)\n\nmain()\n", "\n\ndef main():\n    expression = input(\"Enter the expression: \")\n    try:\n        result = eval(expression)\n        print(result)\n    except Exception as e:\n        print(\"Error: \", e)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    expression = input()\n    expression = expression.split('+') \n    result = 0\n    for i in expression:\n        i = i.split('-') \n        for j in i:\n            result += int(j)\n        result -= len(i) - 1\n    print(result)\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    expression = input()\n    result = eval(expression)\n    print(result)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    print(\"Hello World\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    expression = input('Enter expression: ')\n    print(eval(expression))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    expression = input()\n    expression = expression.split('+') # split expression by '+'\n    result = 0\n    for i in expression:\n        i = i.split('-') # split expression by '-'\n        for j in i:\n            result += int(j)\n        result -= len(i) - 1 # subtract the number of '-'\n    print(result)\n\nmain()\n", "\n\ndef main():\n    expression = input()\n    expression = expression.split('+')\n    result = 0\n    for i in expression:\n        i = i.split('-')\n        for j in i:\n            result += int(j)\n        result -= len(i) - 1\n    print(result)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    expression = input(\"Enter an expression: \")\n    result = eval(expression)\n    print(result)\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    expression = input()\n    expression = expression.split('+')\n    result = 0\n    for i in expression:\n        i = i.split('-')\n        for j in i:\n            result += int(j)\n        result -= len(i) - 1\n    print(result)\n\nmain()\n", "\n\ndef main():\n    expression = input()\n    expression = expression.split('+')\n    result = 0\n    for i in expression:\n        i = i.split('-')\n        for j in i:\n            result += int(j)\n        result -= len(i) - 1\n    print(result)\n", "\ndef main():\n    expression = input()\n    expression = expression.split('+')\n    result = 0\n    for i in expression:\n        i = i.split('-')\n        for j in i:\n            result += int(j)\n        result -= len(i) - 1\n    print(result)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    expression = input()\n    expression = expression.split('+')\n    result = 0\n    for i in expression:\n        i = i.split('-')\n        for j in i:\n            result += int(j)\n        result -= 1\n    print(result)\n\nmain()\n", "\n\ndef main():\n    expression = input()\n    result = eval(expression)  # pylint: disable=eval-used\n    print(result)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    expression = input(\"Enter expression: \")\n    result = eval(expression) #evaluates the expression\n    print(result)\n\nif __name__ == \"__main__\":\n    main()\n"]