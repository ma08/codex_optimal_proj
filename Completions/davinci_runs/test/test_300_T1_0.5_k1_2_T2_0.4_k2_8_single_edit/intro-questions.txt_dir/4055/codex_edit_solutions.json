["from collections import Counter\n\n\nn = int(input())  # number of elements\na = list(map(int, input().split()))  # elements\n\nc = Counter(a)\n\nfor i in range(1, n + 1):\n    if i not in c:\n        print(i)\n        break\n\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(1, n - 1):\n        if a[i - 1] == 1 and a[i + 1] == 1 and a[i] == 0:\n            count += 1\n    print(count)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(1, n - 1):\n        if (a[i - 1] == 1 and a[i + 1] == 1 and a[i] == 0):\n            count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\na = list(map(int, input().split()))\n\ndisturbed = []\n\nfor i in range(1, n - 1):\n    if a[i - 1] == a[i + 1] == 1 and a[i] == 0:\n        disturbed.append(i)\n\nprint(len(disturbed))\n", "\nn = int(input())\na = list(map(int, input().split()))\ndisturbed = []\nfor i in range(1, n - 1):\n    if a[i - 1] == a[i + 1] == 1 and a[i] == 0:\n        disturbed.append(i)\nprint(len(disturbed))\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(1, n - 1):\n        if (a[i - 1] == 1 and a[i + 1] == 1 and a[i] == 0):\n            count += 1\n    print(count)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(1, n - 1):\n        if (a[i-1] == 1 and a[i+1] == 1 and a[i] == 0):\n            count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\na = list(map(int, input().split()))\n\ndisturbed = 0\n\nfor i in range(1, n - 1):\n    if a[i - 1] == a[i + 1] == 1 and a[i] == 0:\n        disturbed += 1\n\nprint(disturbed)\n"]