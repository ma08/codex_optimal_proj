["import sys\n\nn, x = list(map(int, sys.stdin.readline().split()))\nl = list(map(int, sys.stdin.readline().split()))\nd = 0\ncnt = 0\nfor i in range(n):\n    d += l[i]\n    if d <= x:\n        cnt += 1\nprint(cnt + 1)\n", "\nimport sys\n\nn, x = list(map(int, sys.stdin.readline().split()))\nl = list(map(int, sys.stdin.readline().split()))\n\nd = 0\ncnt = 0\n\nfor i in range(n):\n    d += l[i]\n    if d <= x:\n        cnt += 1\n\nprint(cnt + 1)\n", "#\n\nN, X = map(int, input().split())\nL = list(map(int, input().split()))\n\ncnt = 1\ndist = 0\nfor i in range(N):\n    dist += L[i]\n    if dist <= X:\n        cnt += 1\n    else:\n        break\nprint(cnt)\n", "import sys\n\nn, x = list(map(int, sys.stdin.readline().split()))\nl = list(map(int, sys.stdin.readline().split()))\n\nd = 0\ncnt = 0\n\nfor i in range(n):\n    d += l[i]\n    if d <= x:\n        cnt += 1\n\nprint(cnt + 1)\n", "\n\nimport sys, heapq\n\nn, k = map(int, sys.stdin.readline().split())\n\nh = []\nfor i in range(n):\n    heapq.heappush(h, int(sys.stdin.readline()))\n\nfor i in range(n):\n    d += l[i]\n    if d <= x:\n        cnt += 1\n\nprint(cnt + 1)\n", "\nN, X = map(int, input().split())\nL = list(map(int, input().split()))\n\ncnt = 1\ndist = 0\nfor i in range(N):\n    dist += L[i]\n    if dist <= X:\n        cnt += 1\n    else:\n        break\nprint(cnt)\n", "\nimport sys\n\nn, x = list(map(int, sys.stdin.readline().split()))\nl = list(map(int, sys.stdin.readline().split()))\n\nd = 0\ncnt = 0\n\nfor i in range(n):\n    d += l[i]\n    if d <= x:\n        cnt += 1\n\n\nprint(cnt + 1)\n"]