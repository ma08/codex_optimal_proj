["import itertools\nimport bisect\n\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\na = list(itertools.accumulate(l, initial=0))\nprint(bisect.bisect_right(a, x))", "n,x=list(map(int, input().split()))\n\nl_list=[int(i) for i in input().split()]\n\nd=0\ncount=1\nfor i in range(n):\n    d=d+l_list[i]\n    if d<=x:\n        count+=1\n\nprint(count)\n", "n, x = map(int, input().split())\n\nl = list(map(int, input().split()))\n\n\nans = 0\n\nd = 0\n\nfor i in range(n):\n    if d <= x:\n        ans += 1\n    d += l[i]\n\nif d <= x:\n    ans += 1\n\nprint(ans)", "import bisect\nfrom itertools import accumulate\nN, X = list(map(int, input().split()))\nL = list(map(int, input().split()))\nLsum = list(accumulate(L))\nind = bisect.bisect_right(Lsum, X)\nprint((ind+1))\n", "import bisect\nn, x = map(int, input().split())\nl = [0] + list(map(int, input().split()))\nfor i in range(n):\n  l[i+1] += l[i]\nprint(bisect.bisect_left(l, x+1))", "N,X=list(map(int,input().split()))\nL=list(map(int,input().split()))\nx=0\nans=1\nfor i in range(N):\n    x+=L[i]\n    if x<=X:\n        ans+=1\nprint(ans)\n", "\n\n\nn, x = list(map(int, input().split()))\nl = list(map(int, input().split()))\n\nl1 = [0]+l\nfor i in range(1, len(l)+1):\n    l1[i] = l1[i-1]+l[i-1]\ncnt = 0\n\nfor i in range(0, len(l1)):\n    if (l1[i] <= x):\n        cnt += 1\nprint(cnt)\n", "N, M = map(int, input().split())\nL = list(map(int, input().split()))\nd = 0\nans = 1\nfor l in L:\n  d += l\n  if d <=M:\n    ans += 1\n  else:\n    break\nprint(ans)", "n, x = map(int, input().split())\nl = list(map(int, input().split()))\n\nd = [0]\nfor i in range(n):\n    d.append(d[-1]+l[i])\nprint(len([i for i in d if i <= x]))", "n, x = list(map(int,input().split()))\nl = list(map(int,input().split()))\na = [0]\nfor i in range(n):\n    tmp = a[i] + l[i]\n    a.append(tmp)\nans = 0\nfor i in range(n + 1):\n    if (a[i] <= x):\n        ans = ans + 1\n\nprint(ans)\n", "n,x = map(int, input().split())\nL = list(map(int, input().split()))\ncnt = 1\nd = 0\nfor l in L:\n  d += l\n  if d <= x:\n    cnt += 1\n  else:\n    break\nprint(cnt)", "from itertools import accumulate\nfrom bisect import *\nN, X = list(map(int, input().split()))\nL = list(tuple(map(int, input().split())))\n\nacc = sorted(list(accumulate(L)) + [0])\n\nn = bisect_right(acc,X)\nprint(n)\n\n", "# AtCoder Beginner Contest 130\n# B - Bounding\nimport bisect\n\nN,X=map(int,input().split())\nL=list(map(int,input().split()))\n\naccumu_L=[0]\n\nfor i in range (N):\n    accumu_L.append(accumu_L[-1]+L[i])\n\n# print(accumu_L)\n\nprint(bisect.bisect_right(accumu_L,X))", "n,x=map(int,input().split())\nl=list(map(int,input().split()))+[10**5]\n\nd,cnt=0,0\nwhile d<=x and cnt<n+1:\n  d+=l[cnt]\n  cnt+=1\n\nprint(cnt)", "N,X = list(map(int,input().split()))\nli = list(map(int,input().split()))\nd = 0\nc = 1\nfor i in range(N):\n  d = d + li[i]\n  if d <=X:\n    c = c + 1\nprint(c)          \n", "a,b=input().split()\na=int(a)\nb=int(b)\nc=list(map(int,input().split()))\nd=0\ne=0\nfor i in range(a):\n  if d+c[i]<=b:\n    d=d+c[i]\n    e=e+1\n  else:\n    break\nprint(e+1)", "n,x=map(int,input().split())\nl=list(map(int,input().split()))\nans=1\nd=0\nfor i in range(len(l)):\n    d=d+l[i]\n    if d<=x:\n        ans+=1\nprint(ans)", "n,x = map(int, input().split())\na = [int(num) for num in input().split()]\nsum = 0\ncont = 1\nfor i in range(n):\n    sum += a[i]\n    if sum <= x:\n        cont += 1\nprint(cont)", "from collections import defaultdict\n\n\ndef mapt(fn, *args):\n    return tuple(map(fn, *args))\n\n\ndef Input():\n    return mapt(int, input().split(\" \"))\n\n\ndef main():\n    n, x = Input()\n    l = Input()\n    d = defaultdict(int)\n    d[0] = 0\n    ans = 0\n\n    for i in range(1, n+1):\n        d[i] = d[i-1] + l[i-1]\n\n    for i in d.values():\n        if i <= x: ans += 1\n\n    print(ans)\n\nmain()", "n,x=map(int,input().split())\nY = list(map(int,input().split()))\nZ = [0]*n\na = 0\nfor i in range(n):\n  a +=Y[i]\n  Z[i]=a\nimport bisect\nprint(1+bisect.bisect_left(Z,x+1))", "n,x=map(int,input().split())\nL=list(map(int,input().split()))\nans = 1\ncnt = 0\nfor l in L:\n  cnt += l\n  if x >= cnt:\n    ans += 1\nprint(ans)", "n, x = map(int, input().split())\nl = list(map(int, input().split()))\nbound = []\nfor i in range(n+1):\n    if i == 0:\n        bound += [0]\n    else:\n        bound += [bound[i-1] + l[i-1]]\n    if bound[i] > x:\n        print(len(bound) - 1)\n        return\nprint(len(bound))", "N, X = list(map(int, input().split()))\nL = list(map(int, input().split()))\n\ncurrent = 0\ncnt = 1\nfor l in L:\n    current += l\n    if current > X:\n        break\n    cnt += 1\n\nprint(cnt)\n", "# Di = Di-1 + Li-1\nn, x = list(map(int, input().split()))\nL = list(map(int, input().split()))\nans = 0\nct = 1 \nfor i in range(n):\n    ans = ans + L[i]\n    if ans > x:\n        break\n    else:\n        ct += 1\nprint(ct)\n", "N, X = map(int, input().split())\nL = list(map(int, input().split()))\n\ns = 0\ncnt = 1\nfor i in range(N):\n    if s + L[i] > X:\n        break\n    s += L[i]\n    cnt += 1\n\nprint(cnt)", "n,x =  map(int,input().split())\nl = list(map(int,input().split()))\nans = 0\ncnt = 1\nfor i in l:\n  ans += i\n  if ans > x:\n    break\n  cnt += 1\n  \nprint(cnt)", "import bisect\n\nN, X = list(map(int, input().split()))\nL = list(map(int, input().split()))\n\nD = [0]\nfor i in range(len(L)):\n    D.append(sum(L[:i+1]))\nprint((bisect.bisect_right(D, X)))\n", "a = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = 1\nd = 0\nfor i in b:\n  d += i\n  if d <= a[1]:\n    c += 1\nprint(c)\n", "n,x = map(int, input().split())\na = [int(num) for num in input().split()]\nsum = 0\ncont = 1\nfor i in range(n):\n    sum += a[i]\n    if sum <= x:\n        cont += 1\nprint(cont)", "N,X = map(int,input().split())\nL = [int(i) for i in input().split()]\nD = 0\nfor i in range(N) :\n    D = L[i]+D\n #   print(i,D)\n    if D>X :\n        print(i+1)\n        return\n\nprint(N+1)", "r=input().split()\nN=int(r[0])\nX=int(r[1])\nd=[int(s) for s in input().split()]\nans=1\nle=0\nfor i in range(N):\n    le+=d[i]\n    if le>X:\n        print(ans)\n        break\n    elif i==N-1:\n        print(N+1)\n    else:\n        ans+=1", "n, x = map(int, input().split())\nl = [int(s) for s in input().split()]\n\npos = 0\ncount = 1\nfor i in range(n):\n    pos += l[i]\n    if pos > x:\n        break\n    count += 1\nprint(count)", "N, X  = map(int, input().split())\nL = list(map(int, input().split()))\ncount = 1\ndistance = 0\nfor l in L:\n  distance += l\n  if distance <= X:\n    count += 1\n  else:\n    break\nprint(count)", "n, x = map(int, input().split())\nl = list(map(int, input().split()))\nxlist = [0]\nnum = 0\nfor i in l:\n    num += i\n    xlist.append(num)\ncnt = 0\nfor j in xlist:\n    if j <= x:\n        cnt += 1\nprint(cnt)", "n, X = map(int, input().split())\nl = list(map(int, input().split()))\n\nsumList = [0]\nfor i in range(n):\n    s = sumList[i]+l[i]\n    if s > X:\n        break\n    sumList.append(s)\n\nprint(len(sumList))", "N, X = map(int, input().split())\nL = list(map(int, input().split()))\nS = [0]\nfor i in range(N):\n  S.append(S[i] + L[i])\nans = 0\nfor j in range(N+1):\n  if S[j] <= X:\n    ans += 1\nprint(ans)", "N,X=map(int,input().split())\nL=list(map(int,input().split()))\nans=0\n\nfor i in range(1,N+1):\n  if ans>=X:\n    if ans==X:\n      print(i)\n      break\n    else:\n      print(i-1)\n      break\n  ans+=L[i-1]\nelse:\n  print(N+1)", "import sys\n\n\ndef input(): return sys.stdin.readline().strip()\ndef I(): return int(input())\ndef LI(): return list(map(int, input().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return input()\ndef LS(): return input().split()\n\n\nINF = float('inf')\n\n\nn, x = LI()\nl = LI()\ncnt = 1\nd = 0\nfor i in range(n):\n    # print(f'{(d, l[i])=}')\n    if d + l[i] <= x:\n        cnt += 1\n        d += l[i]\n    else:\n        break\nprint(cnt)\n", "N, X = map(int, input().split())\nL = list(map(int, input().split()))\nD = 0\ncount = 0\nfor i in range(N+1):\n  if D <= X:\n    count += 1\n  if i != N:\n    D = D + L[i]\nprint(count)", "n, x = map(int, input().split())\nl = list(map(int, input().split()))\nL = [0] + l\n\na = 0\ncount = 1\nfor i in l:\n    a += i\n    if a <= x:\n        count += 1\nprint(count)", "n,x=map(int, input().split())\nl=list(map(int, input().split()))\nd=0\ncount=0\nfor i in range(n):\n  d+=l[i]\n  if d>x:\n    print(i+1)\n    break\n  if i==n-1 and d<=x:\n    print(n+1)", "n,x = map(int,input().split())\nl = list(map(int,input().split()))\nd = 0\ni = 0\nwhile d <= x and i <= n:\n    if i == n:\n        i += 1\n    else:\n        d += l[i]\n        i += 1\nprint(i)", "n,x=map(int,input().split())\nans=1\np=0\nl=[int(x) for x in input().split()]\nfor i in range(n):\n    p+=l[i]\n    if p > x:\n        break\n    else:\n        ans+=1\n\nprint(ans)", "x, y = list(map(int, input().split()))\nnum_list = list(map(int, input().split()))\n\ni = 1\ndistance = 0\nfor _ in num_list:\n    distance += _\n    if distance > y:\n        break\n    i += 1\n\nprint(i)\n", "n, x = map(int, input().split())\nl = list(map(int, input().split()))\nans = 1\np = 0\n\nfor i in range(n):\n    p += l[i]\n    if p <= x:\n        ans += 1\n    else:\n        break\n\nprint(ans)", "n, x = list(map(int, input().split()))\nl = list(map(int, input().split()))\n\nans = 0\nbound = 0\nfor i in l:\n    bound += i\n    ans += 1\n    if bound > x:\n        break\nelse:\n    ans = n + 1\n\nprint(ans)\n", "n, x = list(map(int, input().split()))\nL = list(map(int, input().split()))\n\nd = [0]*(n+1)\ncnt = 0 \nfor i in range(n):\n    d[i+1] += d[i]+L[i]\n\nfor i in range(n+1):\n    if d[i] <= x:\n        cnt += 1\n\nprint(cnt)\n", "n,x = map(int,input().split())\na = list(map(int,input().split()))\nc = 1\nb = 0\nfor i in a:\n    b = i+b\n    if b <= x:\n        c+=1\nprint(c)", "n,x = map(int,input().split())\na = list(map(int,input().split()))\na.append(0)\ncount = 0\nb = 0\nfor i in range(n+1):\n    if b > x:\n        break\n    count+=1\n    b+= a[i]\nprint(count)", "import sys\nsys.setrecursionlimit(10 ** 9)\n# input = sys.stdin.readline    ####\ndef int1(x): return int(x) - 1\ndef II(): return int(input())\ndef MI(): return list(map(int, input().split()))\ndef MI1(): return list(map(int1, input().split()))\ndef LI(): return list(map(int, input().split()))\ndef LI1(): return list(map(int1, input().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef MS(): return input().split()\ndef LS(): return list(input())\ndef LLS(rows_number): return [LS() for _ in range(rows_number)]\ndef printlist(lst, k=' '): print((k.join(list(map(str, lst)))))\nINF = float('inf')\n# from math import ceil, floor, log2\n# from collections import deque, defaultdict\n# from itertools import combinations as comb, combinations_with_replacement as comb_w, accumulate, product, permutations\n# from heapq import heapify, heappop, heappush\n# import numpy as np    # cumsum\n# from bisect import bisect_left, bisect_right\n\ndef solve():\n    N, X = MI()\n    L = LI()\n\n    A = [0] * (N+1)\n    for i in range(1, N+1):\n        A[i] = L[i-1] + A[i-1]\n    ans = 0\n    for a in A:\n        if a > X:\n            break\n        ans += 1\n    print(ans)\n\ndef __starting_point():\n    solve()\n\n\n__starting_point()", "n,x=map(int,input().split())\nl=list(map(int,input().split()))\nlist_d=[0]\nans=0\nfor i in range(1,n+1):\n    list_d.append(list_d[i-1]+l[i-1])\nfor i in list_d:\n    if i<=x:\n        ans+=1\nprint(ans)", "N, X = map(int, input().split())\nL = list(map(int, input().split()))\n\nbound = 1\nd = 0\nfor i in L:\n    d += i\n    if d <= X:\n        bound += 1\nprint(bound)", "n,x = map(int, input().split())\nl = list(map(int, input().split()))\n\nans = 1\nt = 0\nfor i in l:\n  t += i\n  if t <= x: ans += 1\n  if t >= x: break\nprint(ans)", "n, x = list(map(int, input().split()))\nl = [int(i) for i in input().split()]\np = 0\nfor i in range(n):\n    p += l[i]\n    if p > x:\n        print((i + 1))\n        break\nelse:\n    print((n + 1))\n", "n, x = map(int, input().split())\nL = list(map(int, input().split()))\n\ncnt = 0\npos = 0\nfor itr, l in enumerate(L):\n  pos += l\n  if pos > x:\n    print(itr + 1)\n    return\n\nprint(n + 1)", "N,X=list(map(int,input().split()))\nL=list(map(int,input().split()))\nS=[0]\nsum_L=0\nfor i in range(N):\n  sum_L+=L[i]\n  S.append(sum_L)\ncounter=0\nfor i in range(N+1):\n  if S[i]<=X:\n    counter+=1\nprint(counter)\n", "n,x=map(int,input().split())\nl=list(map(int,input().split()))\nd=[0]\ncount=0\nfor i in range(n):\n    d.append(d[i]+l[i])\nfor c in d:\n    if c<=x:\n        count+=1\nprint(count)", "N,X = list(map(int,input().split()))\nLi = list(map(int,input().split()))\n\nDi = 0\ncount = 1\nfor i in Li:\n    Di = Di + i\n    if Di <= X:\n        count += 1\n    else:\n        break\nprint(count)\n\n", "n, x = map(int,input().split())\nl = list(map(int,input().split()))\nans = 0\ncount = 1\nfor i in range(n):\n  ans += l[i]\n  if ans <= x:\n    count += 1\nprint(count)", "N,X = map(int,input().split())\nL = list(map(int,input().split()))\nkyori = 0\n\nfor i in range(N):\n    kyori += L[i]\n    if kyori > X:\n        print(i+1)\n        return\n\nprint(N+1)", "N,X = list(map(int,input().split()))\nL = list(map(int,input().split()))\nList = [0]*(N+1)\nfor i in range(1,N+1):\n    List[i] = List[i-1] + L[i-1]\nimport bisect  \n# A = [i for i in List if i <=X]\n# print(len(A))\nprint((bisect.bisect_left(List,X+1)))\n", "n, x = map(int, input().split())\na = list(map(int, input().split()))\ns = 0\nt = 1\nfor i in range(n):\n  s = s + a[i]\n  if s <= x:\n    t += 1\nprint(t)", "n,x=map(int,input().split())\nL=list(map(int,input().split()))\nans=0\nct=1\nfor i in range(n):\n  ans=ans+L[i]\n  if ans>x:\n    break\n  else:\n    ct+=1\nprint(ct)", "n,x = map(int,input().split())\nl = list(map(int,input().split()))\ncnt = 0\nfor i in range(n+1):\n    #print(sum(l[:i]))\n    if sum(l[:i])<=x:\n        cnt += 1\nprint(cnt)", "# n\u306f\u8df3\u306d\u308b\u56de\u6570\u3000d1 = 1 dn+1 = dn + ln\n\nn,x = list(map(int,input().split()))\nl = list(map(int,input().split()))\n\nd = 0\ncount = 1\n\nfor y in range(n):\n  d = d + l[y]\n  if d <= x:\n    count += 1\n  else:\n    break\n    \nprint(count)\n", "n, x = (int(i) for i in input().split())\nlist_l = [int(j) for j in input().split()]\ntmp = 0\ncount = 0\nfor i in range(0, n + 1):\n    if i == 0:\n        pass\n    else:\n        tmp += list_l[i - 1]\n        if tmp > x:\n            break\n    count += 1\nprint(count)", "n, x = map(int, input().split())\nllist = list(map(int, input().split()))\ndlist = [0]\nd = 0\nfor i in llist:\n    d += i\n    dlist.append(d)\nprint(sum([i<=x for i in dlist]))", "n,x = map(int,input().split())\nl = list(map(int,input().split()))\ndist = [0]*(n+1)\nfor i in range(1,n+1):\n    dist[i] = dist[i-1] + l[i-1]\n    \ncnt = 0\nfor i in range(n+1):\n    if dist[i]<= x:\n        cnt += 1\nprint(cnt) ", "N,X = map(int,input().split())\nL_List = list(map(int,input().split()))\nans = 0\nct = 1\nfor i in range(N):\n    ans += L_List[i]\n    if ans <= X:\n        ct += 1\n    else:\n        break\n        \nprint(ct)", "N,X = map(int,input().split())\nL = [int(i) for i in input().split()]\nD = [0]\n\nfor i in range(N):\n    a = D[i]+L[i]\n    if(a <= X):\n        D.append(a)\n    else:\n        break\n\nprint(len(D))", "n, x = map(int, input().split())\nL = list(map(int, input().split()))\nval = 0\ncount = 1\n\nfor l in L:\n    val += l\n    if val <= x:\n        count += 1\nprint(count)", "N,X = map(int,input().split())\nL = list(map(int,input().split()))\nList = [0]*(N+1)\nfor i in range(1,N+1):\n    List[i] = List[i-1] + L[i-1]\nA = [i for i in List if i <=X]\nprint(len(A))", "n, x = map(int, input().split())\nl = list(map(int, input().split()))\nball = 0\nc = 1\nfor i in range(n):\n    ball += l[i]\n    if ball <= x:\n        c += 1\n    else:\n        break\nprint(c)", "\nN, X = list(map(int, input().split()))\nL = list(map(int, input().split()))\ncnt = 1\ntotal = 0\nfor i in range(N):\n  total += L[i]\n  if total <= X:\n    cnt += 1\n  else:\n    break\nprint(cnt)\n", "N,X=map(int,input().split())\nL=list(map(int,input().split()))\nl=[0]\ns=0\nfor i in range(N):\n   s+=L[i]\n   if  s>X:\n       break\n   l.append(s)\nprint(len(l))", "n, x = list(map(int, input().split()))\n\nl = list(map(int, input().split()))\nans = 1\np = 0\nfor i in range(n):\n    p += l[i]\n    if (p > x):\n        break\n    else:\n        ans += 1\n\nprint(ans)\n", "N,X=list(map(int,input().split()))\nls1=list(map(int,input().split()))\n\nx = 0\nii = 1\nfor i in ls1:\n    x = x + i\n    if x > X:\n        break\n    ii += 1\nprint(ii)\n", "n,x = map(int,input().split())\nl = list(map(int,input().split()))\nans = 1\nd = [0]*(n+1)\nfor i in range(1,n+1):\n  d[i] = d[i-1]+l[i-1]\n  if d[i] <= x:\n    ans += 1\nprint(ans)", "n, x = list(map(int, input().split()))\narr = list(map(int, input().split()))\nif x == 0:\n    print((0))\n    return\nsum = 0\ncount = 1\ni = 0\nwhile i < n:\n    sum += arr[i]\n    i += 1\n    if sum <= x:\n        count += 1\n    else:\n        print(count)\n        return\nprint(count)\n", "n, x = map(int,input().split())\n\nnum_list = list(map(int,input().split()))\nnum_sum = 0\ncount = 1\n\nfor i in range(n):\n    num_sum += num_list[i]\n    if num_sum>x:\n        break\n    count += 1\nprint(count)", "n, x = list(map(int, input().split()))\nL = list(map(int, input().split()))\ndist = 0\nres = 0\nfor i, l in enumerate(L, 1):\n    dist += l\n    if dist > x:\n        print(i)\n        return\n    elif dist == x:\n        print((i + 1))\n        return\nprint((n + 1))\n", "N,X = map(int,input().split())\nL = list(map(int,input().split()))\n\nD = []\nD.append(0)\n\nfor i in range(0,N):\n  D.append(D[i]+L[i])\n\ncnt = 0\nfor d in D:\n  if d <= X:\n    cnt += 1\n    \nprint(cnt)", "N, X = map(int, input().split())\nL = list(map(int, input().split()))\nans = 1\ntotal = 0\nfor l in L:\n    total += l\n    if total > X: break\n    ans += 1\nprint(ans)", "a,b=map(int,input().split())\nl=list(map(int,input().split()))\nc=[0]\ncount=1\nfor i in range(a):\n    c.append(c[i]+l[i])\n    if(c[i+1]<=b):\n        count+=1\nprint(count)", "N, X = list(map(int, input().split()))\nL = list(map(int, input().split()))\n\nnum = 1\ns = 0\nfor i in range(N):\n  s += L[i]\n  if s > X: break\n  num += 1\n\nprint(num)\n\n\n", "from typing import List\n\n\ndef next_coordinates(d: int, l: int) -> int:\n    return d + l\n\n\ndef answer(n: int, x: int, l: List[int]) -> int:\n    d = 0\n    count = 1\n    for i in l:\n        d = next_coordinates(d, i)\n        if x < d:\n            return count\n        count += 1\n\n    return count\n\n\ndef main():\n    n, x = map(int, input().split())\n    l = list(map(int, input().split()))\n    print(answer(n, x, l))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "import itertools\nimport bisect\n\nn, x = map(int, input().split())\nll = list(map(int, input().split()))\n\ndl = [0] + list(itertools.accumulate(ll))\n\nprint(bisect.bisect_right(dl, x))", "\nn,x = list(map(int, input().split()))\na = list(map(int, input().split()))\ncnt = 1\ntotal = 0\n\nfor i in range(n):\n    total += a[i]\n    if total <= x:\n        cnt += 1\nprint(cnt)\n", "n,x = map(int,input().split())\nli = list(map(int,input().split()))\nlis = []\nsum = 0\nfor i in range(n):\n    sum += li[i]\n    lis.append(sum)\n\ncnt = 0\nfor i in lis:\n    if i <= x:\n        cnt += 1\n\nprint(cnt+1)", "n, x = map(int, input().split())\nfrom itertools import accumulate\nL =[0] +  list(map(int, input().split()))\nacc = list(accumulate(L))\nprint(sum([1 for i in acc if i <=x]))", "A,B=list(map(int,input().split(' ')))\nl=list(map(int,input().split(' ')))\nans=0\ncount=1\nfor i in l:\n    ans+=i\n    if ans<=B:\n        count+=1\nprint(count)\n", "N,X=map(int,input().split())\nL=list(map(int, input().split()))\n\nD=0\n\nfor i in range(N):\n\tD+=L[i]\n\tif D>X:\n\t\tprint(i+1)\n\t\treturn\n\t\t\nprint(i+2)", "N, X = map(int, input().split())\nL = list(map(int, input().split()))\n\nD = 0\ncnt = 1\nfor l in L:\n    D = D + l\n    if D > X:\n        break\n    cnt +=1\n\nprint(cnt)", "n,x = map(int,input().split())\nl = list(map(int,input().split()))\nwa = 0\nd = [0]*(n+3)\nd[1]=0\nd.pop(0)\nwa = 1\nfor i in range(2,n+2):\n  d[i]=d[i-1]+l[i-2]\n  if(d[i]>x):\n    break\n  wa+=1\nprint(wa)", "N, X = [int(i) for i in input().split()]\nLS = [int(i) for i in input().split()]\n\ns = 0\ncnt = 1\n\nfor l in LS:\n  s += l\n  if s <= X:\n    cnt += 1\n  else:\n    break\n\nprint(cnt)\n", "n, x = map(int, input().split())\nl = list(map(int, input().split()))\na = 1\nd = 0\nfor i in range(n):\n    d += l[i]\n    if d <= x:\n        a += 1\nprint(a)"]