["\n\ndef main():\n    n, m = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    a.sort(reverse=True)\n    if a[0] > m:\n        print(-1)\n        return\n    i = 0\n    days = 0\n    while m > 0:\n        m -= a[i]\n        i += 1\n        days += 1\n        if i == n:\n            i = 0\n    print(days)\n\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nimport math\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n\n    if a[-1] >= m:\n        print(1)\n        return\n\n    days = 0\n    for i in range(n):\n        m -= a[i]\n        days += 1\n        if m <= 0:\n            print(days)\n            return\n\n    print(days + math.ceil(m / a[-1]))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n, m = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    print(a)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport math\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n\n    if a[-1] >= m:\n        print(1)\n        return\n\n    days = 0\n    for i in range(n):\n        m -= a[i]\n        days += 1\n        if m <= 0:\n            print(days)\n            return\n\n    if m % a[-1] == 0:\n        print(days + math.ceil(m / a[-1]))\n    else:\n        print(-1)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    print(n)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport math\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))  # list of ints\n    a.sort()\n\n    if a[-1] >= m:\n        print(1)\n        return\n\n    days = 0\n    for i in range(n):\n        m -= a[i]\n        days += 1\n        if m <= 0:\n            print(days)\n            return\n\n    if m % a[-1] == 0:\n        print(days + math.ceil(m / a[-1]))\n    else:\n        print(-1)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n, m = [int(i) for i in input().split()]\n    p = [int(i) for i in input().split()]\n    p.sort()\n    if p[0] > m:\n        print(-1)\n        return\n    i = 0\n    days = 0\n    while m > 0:\n        m -= p[i]\n        i += 1\n        days += 1\n        if i == n:\n            i = 0\n    print(days)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n, m = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    a.sort()\n    i = 0\n    days = 0\n    while m >= 0:\n        if i == n:\n            i = 0\n        if a[i] > m:\n            break\n        else:\n            m -= a[i]\n            days += 1\n        i += 1\n    print(days)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n, m = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    a.sort()\n    if a[0] > m:\n        print(-1)\n        return\n    i = 0\n    days = 0\n    while m > 0:\n        m -= a[i]\n        i += 1\n        days += 1\n        if i == n:\n            i = 0\n    print(days)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n, m = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()].sort()\n    if a[0] > m:  # if the smallest element is greater than the number of days, then it's impossible\n        print(-1)\n        return\n    i = 0\n    days = 0\n    while m > 0:\n        m -= a[i]\n        i += 1\n        days += 1\n        if i == n:\n            i = 0\n    print(days)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport math\nimport sys\n\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n\n    if a[-1] >= m:\n        print(1)\n        return\n\n    days = 0\n    for i in range(n):\n        m -= a[i]\n        days += 1\n        if m <= 0:\n            print(days)\n            return\n\n    if m % a[-1] == 0:\n        print(days + math.ceil(m / a[-1]))\n    else:\n        print(-1)\n\n\nif __name__ == \"__main__\":\n    main()\n"]