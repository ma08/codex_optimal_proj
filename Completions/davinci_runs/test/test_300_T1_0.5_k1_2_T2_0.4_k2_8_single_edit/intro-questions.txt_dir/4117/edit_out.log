2022-04-20 02:19:54.780290 num operations 1
2022-04-20 02:19:54.780310 size on input set 1
2022-04-20 02:19:54.780489 using api key sourya
2022-04-20 02:20:03.028768 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "from itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\ncomb = combinations(L, 3)\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 3,
      "text": "\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 4,
      "text": "\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 5,
      "text": "\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 6,
      "text": "\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\ncomb = combinations(L, 3)\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 7,
      "text": "\nfrom itertools import combinations\n\nn = int(input())\nl = list(map(int, input().split()))\n\ncomb = combinations(l, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1] and c[0] != c[1] and c[1] != c[2] and c[2] != c[0]:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650421194,
  "object": "edit"
}
2022-04-20 02:20:03.029134 fix syntax errors 8 ['\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n', '\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n', 'from itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\ncomb = combinations(L, 3)\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n', '\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n', '\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n', '\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n', '\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\ncomb = combinations(L, 3)\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n', '\nfrom itertools import combinations\n\nn = int(input())\nl = list(map(int, input().split()))\n\ncomb = combinations(l, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1] and c[0] != c[1] and c[1] != c[2] and c[2] != c[0]:\n        count += 1\n\nprint(count)\n']
2022-04-20 02:20:03.029193 size on output set 4
2022-04-20 02:20:03.029209 num operations 1
2022-04-20 02:20:03.029218 size on input set 1
2022-04-20 02:20:03.029438 using api key sourya
2022-04-20 02:20:12.650607 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):  # 3\u3064\u305a\u3064\u53d6\u308a\u51fa\u3059\n    if i[0] + i[1] > i[2]:  # \u4e09\u89d2\u5f62\u306b\u306a\u308b\u304b\u5224\u5b9a\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 3,
      "text": "#https://www.hackerrank.com/challenges/triangle-quest-2/problem\n\nfrom itertools import combinations\n\nfor i in range(1, int(input())+1):\n    print(((10**i)-1)**2//81)\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 4,
      "text": "\nfrom itertools import combinations\n\nn = int(input())\nl = list(map(int, input().split()))\n\ncount = 0\nfor i in combinations(sorted(l), 3):\n    if i[0] + i[1] > i[2] and i[0] != i[1] != i[2]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 5,
      "text": "\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\nprint(count)\n"
    },
    {
      "index": 6,
      "text": "\n\n\ndef is_prime(n):\n    if n == 1:\n        return False\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\n\ndef main():\n    n = int(input())\n    if is_prime(n):\n        print('YES')\n    else:\n        print('NO')\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nfrom itertools import combinations\n\nn = int(input())\nl = list(map(int, input().split()))\n\ncount = 0\nfor i in combinations(sorted(l), 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650421203,
  "object": "edit"
}
2022-04-20 02:20:12.650916 fix syntax errors 8 ['\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n', '\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n', '\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):  # 3つずつ取り出す\n    if i[0] + i[1] > i[2]:  # 三角形になるか判定\n        count += 1\n\nprint(count)\n', '#https://www.hackerrank.com/challenges/triangle-quest-2/problem\n\nfrom itertools import combinations\n\nfor i in range(1, int(input())+1):\n    print(((10**i)-1)**2//81)\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n', '\nfrom itertools import combinations\n\nn = int(input())\nl = list(map(int, input().split()))\n\ncount = 0\nfor i in combinations(sorted(l), 3):\n    if i[0] + i[1] > i[2] and i[0] != i[1] != i[2]:\n        count += 1\n\nprint(count)\n', '\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\nprint(count)\n', "\n\n\ndef is_prime(n):\n    if n == 1:\n        return False\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\n\ndef main():\n    n = int(input())\n    if is_prime(n):\n        print('YES')\n    else:\n        print('NO')\n\n\nif __name__ == '__main__':\n    main()\n", '\nfrom itertools import combinations\n\nn = int(input())\nl = list(map(int, input().split()))\n\ncount = 0\nfor i in combinations(sorted(l), 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n']
2022-04-20 02:20:12.651069 size on output set 7
