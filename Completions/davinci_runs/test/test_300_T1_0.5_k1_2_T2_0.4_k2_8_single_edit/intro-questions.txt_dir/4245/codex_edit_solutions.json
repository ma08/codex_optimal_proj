["\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A) + 1\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n", "\n\nimport sys\n\nn = int(sys.stdin.readline().rstrip())\n\nfor _ in range(n):\n    a, b = map(int, sys.stdin.readline().rstrip().split())\n    print(a + b)\n", "\n\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / float(A))\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A) \n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n", "\n\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A) + 1\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport math\n\ndef minPowerStrips(a, b):\n    return math.ceil(b / a)\n\ndef main():\n    line = input().split()\n    a = int(line[0])\n    b = int(line[1])\n    print(minPowerStrips(a, b))\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "import sys\ninput = sys.stdin.readline\n\n\nn, m = map(int, input().split())\narr = list(map(int, input().split()))\n\ndp = [0] * 100001\ndp[0] = 1\nfor i in range(n):\n    for j in range(1, m + 1):\n        if arr[i] <= j:\n            dp[j] += dp[j - arr[i]]\n\nprint(dp[m])\n"]