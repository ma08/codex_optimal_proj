2022-04-20 02:42:26.397907 num operations 1
2022-04-20 02:42:26.397928 size on input set 1
2022-04-20 02:42:26.398153 using api key derek
2022-04-20 02:42:26.520664 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 02:42:28.022641 using api key gabby
2022-04-20 02:42:33.619783 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n"
    },
    {
      "index": 1,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n"
    },
    {
      "index": 2,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nmoves = 0\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n"
    },
    {
      "index": 3,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n"
    },
    {
      "index": 4,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nmoves = 0\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n"
    },
    {
      "index": 5,
      "text": "n, k = map(int, input().split())\n\na = list(map(int, input().split()))\n\na.sort()\n\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n"
    },
    {
      "index": 6,
      "text": "n, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n"
    },
    {
      "index": 7,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n"
    }
  ],
  "created": 1650422548,
  "object": "edit"
}
2022-04-20 02:42:33.620217 fix syntax errors 8 ['\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n', '\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n', '\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nmoves = 0\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n', '\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n', '\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nmoves = 0\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n', 'n, k = map(int, input().split())\n\na = list(map(int, input().split()))\n\na.sort()\n\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n', 'n, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n', '\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n']
2022-04-20 02:42:33.620289 size on output set 5
2022-04-20 02:42:33.620306 num operations 1
2022-04-20 02:42:33.620315 size on input set 1
2022-04-20 02:42:33.620546 using api key sourya
2022-04-20 02:43:15.938385 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    if n == 1:\n        print(1)\n        return\n    if n == 2:\n        if a[0] == a[1]:\n            print(1)\n        else:\n            print(2)\n        return\n    a.sort()\n    if a[-1] == a[-2]:\n        print(1)\n        return\n    if a[0] == a[1]:\n        print(1)\n        return\n    if a[1] - a[0] == a[-1] - a[-2]:\n        print(2)\n        return\n    print(3)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef min_moves(a, k):\n    a.sort(reverse=True)\n    moves = 0\n    i = 0\n    for i in range(len(a)):\n        if a[i] == a[i + 1]:\n            continue\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\n    \"\"\"\n    >>> min_moves([1, 2, 3], 1)\n    0\n    >>> min_moves([1, 2, 3], 2)\n    1\n    >>> min_moves([1, 2, 3], 3)\n    2\n    >>> min_moves([1, 2, 3], 4)\n    3\n    >>> min_moves([1, 2, 3], 5)\n    3\n    >>> min_moves([1, 2, 3], 6)\n    3\n    >>> min_moves([1, 2, 3], 7)\n    3\n    >>> min_moves([1, 2, 3], 8)\n    3\n    >>> min_moves([1, 2, 3], 9)\n    3\n    >>> min_moves([1, 2, 3], 10)\n    3\n    >>> min_moves([1, 2, 3], 11)\n    3\n    >>> min_moves([1, 2, 3], 12)\n    3\n    >>> min_moves([1, 2, 3], 13)\n    3\n    >>> min_moves([1, 2, 3], 14)\n    3\n    >>> min_moves([1, 2, 3], 15)\n    3\n    >>> min_moves([1, 2, 3], 16)\n    3\n    >>> min_moves([1, 2, 3], 17)\n    3\n    >>> min_moves([1, 2, 3], 18)\n    3\n    >>> min_moves([1, 2, 3], 19)\n    3\n    >>> min_moves([1, 2, 3], 20)\n    3\n    >>> min_moves([1, 2, 3], 21)\n    3\n    >>> min_moves([1, 2, 3], 22)\n    3\n    >>> min_moves([1, 2, 3], 23)\n    3\n    >>> min_moves([1, 2, 3], 24)\n    3\n    >>> min_moves([1, 2, 3], 25)\n    3\n    >>> min_moves([1, 2, 3], 26)\n    3\n    >>> min_moves([1, 2, 3], 27)\n    3\n    >>> min_moves([1, 2, 3], 28)\n    3\n    >>> min_moves([1, 2, 3], 29)\n    3\n    >>> min_moves([1, 2, 3], 30)\n    3\n    >>> min_moves([1, 2, 3], 31)\n    3\n    >>> min_moves([1, 2, 3], 32)\n    3\n    >>> min_moves([1, 2, 3], 33)\n    3\n    >>> min_moves([1, 2, 3], 34)\n    3\n    >>> min_moves([1, 2, 3], 35)\n    3\n    >>> min_moves([1, 2, 3], 36)\n    3\n    >>> min_moves([1, 2, 3], 37)\n    3\n    >>> min_moves([1, 2, 3], 38)\n    3\n    >>> min_moves([1, 2, 3], 39)\n    3\n    >>> min_moves([1, 2, 3], 40)\n    3\n    >>> min_moves([1, 2, 3], 41)\n    3\n    >>> min_moves([1, 2, 3], 42)\n    3\n    >>> min_moves([1, 2, 3], 43)\n    3\n    >>> min_moves([1, 2, 3], 44)\n    3\n    >>> min_moves([1, 2, 3], 45)\n    3\n    >>> min_moves([1, 2, 3], 46)\n    3\n    >>> min_moves([1, 2, 3], 47)\n    3\n    >>> min_moves([1, 2, 3], 48)\n    3\n    >>> min_moves([1, 2, 3], 49)\n    3\n    >>> min_moves([1, 2, 3], 50)\n    3\n    >>> min_moves([1, 2, 3], 51)\n    3\n    >>> min_moves([1, 2, 3], 52)\n    3\n    >>> min_moves([1, 2, 3], 53)\n    3\n    >>> min_moves([1, 2, 3], 54)\n    3\n    >>> min_moves([1, 2, 3], 55)\n    3\n    >>> min_moves([1, 2, 3], 56)\n    3\n    >>> min_moves([1, 2, 3], 57)\n    3\n    >>> min_moves([1, 2, 3], 58)\n    3\n    >>> min_moves([1, 2, 3], 59)\n    3\n    >>> min_moves([1, 2, 3], 60)\n    3\n    >>> min_moves([1, 2, 3], 61)\n    3\n    >>> min_moves([1, 2, 3], 62)\n    3\n    >>> min_moves([1, 2, 3], 63)\n    3\n    >>> min_moves([1, 2, 3], 64)\n    3\n    >>> min_moves([1, 2, 3], 65)\n    3\n    >>> min_moves([1, 2, 3], 66)\n    3\n    >>> min_moves([1, 2, 3], 67)\n    3\n    >>> min_moves([1, 2, 3], 68)\n    3\n    >>> min_moves([1, 2, 3], 69)\n    3\n    >>> min_moves([1, 2, 3], 70)\n    3\n    >>> min_moves([1, 2, 3], 71)\n    3\n    >>> min_moves([1, 2, 3], 72)\n    3\n    >>> min_moves([1, 2, 3], 73)\n    3\n    >>> min_moves([1, 2, 3], 74)\n    3\n    >>> min_moves([1, 2, 3], 75)\n    3\n    >>> min_moves([1, 2, 3], 76)\n    3\n    >>> min_moves([1, 2, 3], 77)\n    3\n    >>> min_moves([1, 2, 3], 78)\n    3\n    >>> min_moves([1, 2, 3], 79)\n    3\n    >>> min_moves([1, 2, 3], 80)\n    3\n    >>> min_moves([1, 2, 3], 81)\n    3\n    >>> min_moves([1, 2, 3], 82)\n    3\n    >>> min_moves([1, 2, 3], 83)\n    3\n    >>> min_moves([1, 2, 3], 84)\n    3\n    >>> min_moves([1, 2, 3], 85)\n    3\n    >>> min_moves([1, 2, 3], 86)\n    3\n    >>> min_moves([1, 2, 3], 87)\n    3\n    >>> min_moves([1, 2, 3], 88)\n    3\n    >>> min_moves([1, 2, 3], 89)\n    3\n    >>> min_moves([1, 2, 3], 90)\n    3\n    >>> min_moves([1, 2, 3], 91)\n    3\n    >>> min_moves([1, 2, 3], 92)\n    3\n    >>> min_moves([1, 2, 3], 93)\n    3\n    >>> min_moves([1, 2, 3], 94)\n    3\n    >>> min_moves([1, 2, 3], 95)\n    3\n    >>> min_moves([1, 2, 3], 96)\n    3\n    >>> min_m\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef min_moves(a, k):\n    pass\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n#\n# import sys\n#\n# def min_moves(a, k):\n#     a.sort()\n#     moves = 0\n#     i = 0\n#     j = len(a) - 1\n#     while i < j:\n#         if a[i] == a[i + 1]:\n#             i += 1\n#         elif a[j] == a[j - 1]:\n#             j -= 1\n#         elif a[i] + 1 < a[j]:\n#             a[i] += 1\n#             a[j] -= 1\n#             moves += 1\n#         else:\n#             i += 1\n#             j -= 1\n#     if len(set(a)) > 1:\n#         moves += len(a) - k\n#     return moves\n#\n# def main():\n#     n, k = map(int, sys.stdin.readline().strip().split())\n#     a = list(map(int, sys.stdin.readline().strip().split()))\n#     print(min_moves(a, k))\n#\n# if __name__ == '__main__':\n#     main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650422553,
  "object": "edit"
}
2022-04-20 02:43:15.938978 fix syntax errors 8 ["\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    if n == 1:\n        print(1)\n        return\n    if n == 2:\n        if a[0] == a[1]:\n            print(1)\n        else:\n            print(2)\n        return\n    a.sort()\n    if a[-1] == a[-2]:\n        print(1)\n        return\n    if a[0] == a[1]:\n        print(1)\n        return\n    if a[1] - a[0] == a[-1] - a[-2]:\n        print(2)\n        return\n    print(3)\n\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef min_moves(a, k):\n    a.sort(reverse=True)\n    moves = 0\n    i = 0\n    for i in range(len(a)):\n        if a[i] == a[i + 1]:\n            continue\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n", "\n\n\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\n\nif __name__ == '__main__':\n    main()\n", '\nimport sys\n\n    """\n    >>> min_moves([1, 2, 3], 1)\n    0\n    >>> min_moves([1, 2, 3], 2)\n    1\n    >>> min_moves([1, 2, 3], 3)\n    2\n    >>> min_moves([1, 2, 3], 4)\n    3\n    >>> min_moves([1, 2, 3], 5)\n    3\n    >>> min_moves([1, 2, 3], 6)\n    3\n    >>> min_moves([1, 2, 3], 7)\n    3\n    >>> min_moves([1, 2, 3], 8)\n    3\n    >>> min_moves([1, 2, 3], 9)\n    3\n    >>> min_moves([1, 2, 3], 10)\n    3\n    >>> min_moves([1, 2, 3], 11)\n    3\n    >>> min_moves([1, 2, 3], 12)\n    3\n    >>> min_moves([1, 2, 3], 13)\n    3\n    >>> min_moves([1, 2, 3], 14)\n    3\n    >>> min_moves([1, 2, 3], 15)\n    3\n    >>> min_moves([1, 2, 3], 16)\n    3\n    >>> min_moves([1, 2, 3], 17)\n    3\n    >>> min_moves([1, 2, 3], 18)\n    3\n    >>> min_moves([1, 2, 3], 19)\n    3\n    >>> min_moves([1, 2, 3], 20)\n    3\n    >>> min_moves([1, 2, 3], 21)\n    3\n    >>> min_moves([1, 2, 3], 22)\n    3\n    >>> min_moves([1, 2, 3], 23)\n    3\n    >>> min_moves([1, 2, 3], 24)\n    3\n    >>> min_moves([1, 2, 3], 25)\n    3\n    >>> min_moves([1, 2, 3], 26)\n    3\n    >>> min_moves([1, 2, 3], 27)\n    3\n    >>> min_moves([1, 2, 3], 28)\n    3\n    >>> min_moves([1, 2, 3], 29)\n    3\n    >>> min_moves([1, 2, 3], 30)\n    3\n    >>> min_moves([1, 2, 3], 31)\n    3\n    >>> min_moves([1, 2, 3], 32)\n    3\n    >>> min_moves([1, 2, 3], 33)\n    3\n    >>> min_moves([1, 2, 3], 34)\n    3\n    >>> min_moves([1, 2, 3], 35)\n    3\n    >>> min_moves([1, 2, 3], 36)\n    3\n    >>> min_moves([1, 2, 3], 37)\n    3\n    >>> min_moves([1, 2, 3], 38)\n    3\n    >>> min_moves([1, 2, 3], 39)\n    3\n    >>> min_moves([1, 2, 3], 40)\n    3\n    >>> min_moves([1, 2, 3], 41)\n    3\n    >>> min_moves([1, 2, 3], 42)\n    3\n    >>> min_moves([1, 2, 3], 43)\n    3\n    >>> min_moves([1, 2, 3], 44)\n    3\n    >>> min_moves([1, 2, 3], 45)\n    3\n    >>> min_moves([1, 2, 3], 46)\n    3\n    >>> min_moves([1, 2, 3], 47)\n    3\n    >>> min_moves([1, 2, 3], 48)\n    3\n    >>> min_moves([1, 2, 3], 49)\n    3\n    >>> min_moves([1, 2, 3], 50)\n    3\n    >>> min_moves([1, 2, 3], 51)\n    3\n    >>> min_moves([1, 2, 3], 52)\n    3\n    >>> min_moves([1, 2, 3], 53)\n    3\n    >>> min_moves([1, 2, 3], 54)\n    3\n    >>> min_moves([1, 2, 3], 55)\n    3\n    >>> min_moves([1, 2, 3], 56)\n    3\n    >>> min_moves([1, 2, 3], 57)\n    3\n    >>> min_moves([1, 2, 3], 58)\n    3\n    >>> min_moves([1, 2, 3], 59)\n    3\n    >>> min_moves([1, 2, 3], 60)\n    3\n    >>> min_moves([1, 2, 3], 61)\n    3\n    >>> min_moves([1, 2, 3], 62)\n    3\n    >>> min_moves([1, 2, 3], 63)\n    3\n    >>> min_moves([1, 2, 3], 64)\n    3\n    >>> min_moves([1, 2, 3], 65)\n    3\n    >>> min_moves([1, 2, 3], 66)\n    3\n    >>> min_moves([1, 2, 3], 67)\n    3\n    >>> min_moves([1, 2, 3], 68)\n    3\n    >>> min_moves([1, 2, 3], 69)\n    3\n    >>> min_moves([1, 2, 3], 70)\n    3\n    >>> min_moves([1, 2, 3], 71)\n    3\n    >>> min_moves([1, 2, 3], 72)\n    3\n    >>> min_moves([1, 2, 3], 73)\n    3\n    >>> min_moves([1, 2, 3], 74)\n    3\n    >>> min_moves([1, 2, 3], 75)\n    3\n    >>> min_moves([1, 2, 3], 76)\n    3\n    >>> min_moves([1, 2, 3], 77)\n    3\n    >>> min_moves([1, 2, 3], 78)\n    3\n    >>> min_moves([1, 2, 3], 79)\n    3\n    >>> min_moves([1, 2, 3], 80)\n    3\n    >>> min_moves([1, 2, 3], 81)\n    3\n    >>> min_moves([1, 2, 3], 82)\n    3\n    >>> min_moves([1, 2, 3], 83)\n    3\n    >>> min_moves([1, 2, 3], 84)\n    3\n    >>> min_moves([1, 2, 3], 85)\n    3\n    >>> min_moves([1, 2, 3], 86)\n    3\n    >>> min_moves([1, 2, 3], 87)\n    3\n    >>> min_moves([1, 2, 3], 88)\n    3\n    >>> min_moves([1, 2, 3], 89)\n    3\n    >>> min_moves([1, 2, 3], 90)\n    3\n    >>> min_moves([1, 2, 3], 91)\n    3\n    >>> min_moves([1, 2, 3], 92)\n    3\n    >>> min_moves([1, 2, 3], 93)\n    3\n    >>> min_moves([1, 2, 3], 94)\n    3\n    >>> min_moves([1, 2, 3], 95)\n    3\n    >>> min_moves([1, 2, 3], 96)\n    3\n    >>> min_m\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == \'__main__\':\n    main()\n', "\nimport sys\n\ndef min_moves(a, k):\n    pass\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n", "\n#\n# import sys\n#\n# def min_moves(a, k):\n#     a.sort()\n#     moves = 0\n#     i = 0\n#     j = len(a) - 1\n#     while i < j:\n#         if a[i] == a[i + 1]:\n#             i += 1\n#         elif a[j] == a[j - 1]:\n#             j -= 1\n#         elif a[i] + 1 < a[j]:\n#             a[i] += 1\n#             a[j] -= 1\n#             moves += 1\n#         else:\n#             i += 1\n#             j -= 1\n#     if len(set(a)) > 1:\n#         moves += len(a) - k\n#     return moves\n#\n# def main():\n#     n, k = map(int, sys.stdin.readline().strip().split())\n#     a = list(map(int, sys.stdin.readline().strip().split()))\n#     print(min_moves(a, k))\n#\n# if __name__ == '__main__':\n#     main()\n", "\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 02:43:15.939160 size on output set 7
