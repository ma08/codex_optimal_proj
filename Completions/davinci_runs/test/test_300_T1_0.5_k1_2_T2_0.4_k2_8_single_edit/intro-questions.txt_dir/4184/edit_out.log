2022-04-20 02:47:07.301806 num operations 1
2022-04-20 02:47:07.301872 size on input set 1
2022-04-20 02:47:07.302104 using api key jaanu
2022-04-20 02:47:25.805962 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group)\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between the\n    # sum of the weights in the first group and the sum of the weights in the second group\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and the sum of the\n        # weights in the second group, and update the minimum possible absolute difference\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference\nprint(min_diff)\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights\nmin_diff = sum(weights)\n\nfirst_group_sum = 0\n\nfor i in range(N):\n    first_group_sum += weights[i]\n\n    if i >= N - i - 1:\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\nprint(min_diff)\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize the minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group).\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n"
    },
    {
      "index": 3,
      "text": "\n\nN = int(input())\nweights = list(map(int, input().split()))\n\nprint(weights)\n"
    },
    {
      "index": 4,
      "text": "\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group).\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n"
    },
    {
      "index": 5,
      "text": "\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group)\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n"
    },
    {
      "index": 6,
      "text": "\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group).\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference\nprint(min_diff)\n"
    },
    {
      "index": 7,
      "text": "\n\ndef get_input():\n    number = int(input())\n    return number\n\ndef get_input_list():\n    numbers = list(map(int, input().split()))\n    return numbers\n\ndef get_max_diff(numbers):\n    numbers.sort()\n    return numbers[-1] - numbers[0]\n\ndef get_min_diff(numbers):\n    numbers.sort()\n    return numbers[1] - numbers[0]\n\ndef get_max_min_diff(numbers):\n    max_diff = get_max_diff(numbers)\n    min_diff = get_min_diff(numbers)\n    return max_diff, min_diff\n\ndef main():\n    number = get_input()\n    numbers = get_input_list()\n    max_diff, min_diff = get_max_min_diff(numbers)\n    print(max_diff, min_diff)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650422827,
  "object": "edit"
}
2022-04-20 02:47:25.806423 fix syntax errors 8 ['\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group)\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between the\n    # sum of the weights in the first group and the sum of the weights in the second group\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and the sum of the\n        # weights in the second group, and update the minimum possible absolute difference\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference\nprint(min_diff)\n', '\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights\nmin_diff = sum(weights)\n\nfirst_group_sum = 0\n\nfor i in range(N):\n    first_group_sum += weights[i]\n\n    if i >= N - i - 1:\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\nprint(min_diff)\n', '\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize the minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group).\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n', '\n\nN = int(input())\nweights = list(map(int, input().split()))\n\nprint(weights)\n', '\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group).\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n', '\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group)\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n', '\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group).\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference\nprint(min_diff)\n', '\n\ndef get_input():\n    number = int(input())\n    return number\n\ndef get_input_list():\n    numbers = list(map(int, input().split()))\n    return numbers\n\ndef get_max_diff(numbers):\n    numbers.sort()\n    return numbers[-1] - numbers[0]\n\ndef get_min_diff(numbers):\n    numbers.sort()\n    return numbers[1] - numbers[0]\n\ndef get_max_min_diff(numbers):\n    max_diff = get_max_diff(numbers)\n    min_diff = get_min_diff(numbers)\n    return max_diff, min_diff\n\ndef main():\n    number = get_input()\n    numbers = get_input_list()\n    max_diff, min_diff = get_max_min_diff(numbers)\n    print(max_diff, min_diff)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 02:47:25.806699 size on output set 8
2022-04-20 02:47:25.806725 num operations 1
2022-04-20 02:47:25.806734 size on input set 1
2022-04-20 02:47:25.807019 using api key soukgp
2022-04-20 02:47:35.968801 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#\n# N = int(input())\n# W = list(map(int, input().split()))\n#\n# min_diff = 100 * N\n# for t in range(1, N):\n#     s1 = sum(W[:t])\n#     s2 = sum(W[t:])\n#     diff = abs(s1 - s2)\n#     if diff < min_diff:\n#         min_diff = diff\n#\n# print(min_diff)\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nW = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\nprint(min_diff)\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\nW = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n"
    },
    {
      "index": 3,
      "text": "\nN = int(input())\nW = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n"
    },
    {
      "index": 4,
      "text": "import sys\ninput = sys.stdin.readline\n\n\n\nN = int(input())\nW = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor i in range(1, N):\n    s1 = sum(W[:i])\n    s2 = sum(W[i:])\n    min_diff = min(min_diff, abs(s1 - s2))\n\nprint(min_diff)\n"
    },
    {
      "index": 5,
      "text": "# coding: utf-8\n\n\nN = int(input())  # \u8377\u7269\u306e\u6570\nW = list(map(int, input().split()))  # \u8377\u7269\u306e\u91cd\u3055\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n"
    },
    {
      "index": 6,
      "text": "\nN = int(input())  # N\u500b\u306e\u6570\u5b57\u304c\u5165\u529b\u3055\u308c\u308b\nA = list(map(int, input().split()))  # 1\u3064\u76ee\u306e\u6570\u5b57\u304c\u5165\u529b\u3055\u308c\u308b\nB = list(map(int, input().split()))  # 2\u3064\u76ee\u306e\u6570\u5b57\u304c\u5165\u529b\u3055\u308c\u308b\nC = list(map(int, input().split()))  # 3\u3064\u76ee\u306e\u6570\u5b57\u304c\u5165\u529b\u3055\u308c\u308b\nans = 0\nfor i in range(N):\n    ans += B[A[i] - 1]\n    if i > 0 and A[i] == A[i - 1] + 1:\n        ans += C[A[i - 1] - 1]\nprint(ans)\n"
    },
    {
      "index": 7,
      "text": "\nN = int(input())\nW = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n"
    }
  ],
  "created": 1650422845,
  "object": "edit"
}
2022-04-20 02:47:35.969179 fix syntax errors 8 ['\n#\n# N = int(input())\n# W = list(map(int, input().split()))\n#\n# min_diff = 100 * N\n# for t in range(1, N):\n#     s1 = sum(W[:t])\n#     s2 = sum(W[t:])\n#     diff = abs(s1 - s2)\n#     if diff < min_diff:\n#         min_diff = diff\n#\n# print(min_diff)\n', '\nN = int(input())\nW = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\nprint(min_diff)\n', '\nN = int(input())\nW = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n', '\nN = int(input())\nW = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n', 'import sys\ninput = sys.stdin.readline\n\n\n\nN = int(input())\nW = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor i in range(1, N):\n    s1 = sum(W[:i])\n    s2 = sum(W[i:])\n    min_diff = min(min_diff, abs(s1 - s2))\n\nprint(min_diff)\n', '# coding: utf-8\n\n\nN = int(input())  # 荷物の数\nW = list(map(int, input().split()))  # 荷物の重さ\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n', '\nN = int(input())  # N個の数字が入力される\nA = list(map(int, input().split()))  # 1つ目の数字が入力される\nB = list(map(int, input().split()))  # 2つ目の数字が入力される\nC = list(map(int, input().split()))  # 3つ目の数字が入力される\nans = 0\nfor i in range(N):\n    ans += B[A[i] - 1]\n    if i > 0 and A[i] == A[i - 1] + 1:\n        ans += C[A[i - 1] - 1]\nprint(ans)\n', '\nN = int(input())\nW = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n']
2022-04-20 02:47:35.969263 size on output set 6
