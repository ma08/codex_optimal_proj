2022-04-20 02:10:33.327832 num operations 1
2022-04-20 02:10:33.327852 size on input set 1
2022-04-20 02:10:33.328047 using api key kouti
2022-04-20 02:10:38.377404 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport math\n\n\ndef solve(n, m):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return m\n    else:\n        return (m - n + 1) * 2\n\n\nif __name__ == '__main__':\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        print(solve(n, m))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport math\n\n\ndef solve(n, m):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return m\n    else:\n        return (m - n + 1) * 2\n\n\nif __name__ == '__main__':\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        print(solve(n, m))\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\nimport math\n\n\ndef solve(n, m):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return m\n    return (m - n + 1) * 2\n\n\nif __name__ == '__main__':\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        print(solve(n, m))\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\n\ndef solve(n, m):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return m\n    else:\n        return (m - n + 1) * 2\n\n\nif __name__ == '__main__':\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        print(solve(n, m))\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\n\ndef solve(n, m):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return m\n    else:\n        return (m - n + 1) * 2\n\n\nif __name__ == '__main__':\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        print(solve(n, m))\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\n\ndef solve(n, m):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return m\n    else:\n        return (m - n + 1) * 2\n\n\nif __name__ == '__main__':\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        print(solve(n, m))\n"
    },
    {
      "index": 6,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\n\ndef solve(n, m):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return m\n    else:\n        return (m - n + 1) * 2\n\n\nif __name__ == '__main__':\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        print(solve(n, m))\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\nimport math\n\n\ndef solve(n, m):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return m\n    else:\n        return (m - n + 1) * 2\n\n\nif __name__ == '__main__':\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        print(solve(n, m))\n"
    }
  ],
  "created": 1650420633,
  "object": "edit"
}
2022-04-20 02:10:38.377719 fix syntax errors 8 ["\nimport sys\nimport math\n\n\ndef solve(n, m):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return m\n    else:\n        return (m - n + 1) * 2\n\n\nif __name__ == '__main__':\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        print(solve(n, m))\n", "\nimport sys\nimport math\n\n\ndef solve(n, m):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return m\n    else:\n        return (m - n + 1) * 2\n\n\nif __name__ == '__main__':\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        print(solve(n, m))\n", "\n\nimport sys\nimport math\n\n\ndef solve(n, m):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return m\n    return (m - n + 1) * 2\n\n\nif __name__ == '__main__':\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        print(solve(n, m))\n", "\nimport sys\n\n\ndef solve(n, m):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return m\n    else:\n        return (m - n + 1) * 2\n\n\nif __name__ == '__main__':\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        print(solve(n, m))\n", "\nimport sys\n\n\ndef solve(n, m):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return m\n    else:\n        return (m - n + 1) * 2\n\n\nif __name__ == '__main__':\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        print(solve(n, m))\n", "\nimport sys\n\n\ndef solve(n, m):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return m\n    else:\n        return (m - n + 1) * 2\n\n\nif __name__ == '__main__':\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        print(solve(n, m))\n", "#!/usr/bin/env python3\n\nimport sys\n\n\ndef solve(n, m):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return m\n    else:\n        return (m - n + 1) * 2\n\n\nif __name__ == '__main__':\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        print(solve(n, m))\n", "\nimport sys\nimport math\n\n\ndef solve(n, m):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return m\n    else:\n        return (m - n + 1) * 2\n\n\nif __name__ == '__main__':\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        print(solve(n, m))\n"]
2022-04-20 02:10:38.377764 size on output set 4
2022-04-20 02:10:38.377775 num operations 1
2022-04-20 02:10:38.377781 size on input set 1
2022-04-20 02:10:38.377938 using api key soukgp
2022-04-20 02:10:43.527467 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = map(int, input().split())\n        if n == 1:\n            print(0)\n        else:\n            print(max(2 * m - n, n - 2 * m - 2))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = map(int, input().split())\n        if n == 1:\n            print(0)\n        else:\n            print(max(2 * m - n, n - 2 * m, 0))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = map(int, input().split())\n        if n == 1:\n            print(0)\n        else:\n            print(max(2 * m - n, n - 2 * m))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = map(int, input().split())\n        if n == 1:\n            print(0)\n        else:\n            print(max(2 * m - n, n - 2 * m) if m > n // 2 else 0)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = map(int, input().split())\n        if n == 1:\n            print(0)\n        else:\n            print(max(2 * m - n, n - 2 * m)) \n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = map(int, input().split())\n        if n == 1:\n            print(0)\n        else:\n            print(max(2 * m - n, n - 2 * m))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = map(int, input().split())\n        if n == 1:\n            print(0)\n        else:\n            print(max(2 * m - n, n - 2 * m)) \n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = map(int, input().split())\n        if n == 1:\n            print(0)\n        else:\n            print(max(2 * m - n, n - 2 * m))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650420638,
  "object": "edit"
}
2022-04-20 02:10:43.527841 fix syntax errors 8 ["\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = map(int, input().split())\n        if n == 1:\n            print(0)\n        else:\n            print(max(2 * m - n, n - 2 * m - 2))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = map(int, input().split())\n        if n == 1:\n            print(0)\n        else:\n            print(max(2 * m - n, n - 2 * m, 0))\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = map(int, input().split())\n        if n == 1:\n            print(0)\n        else:\n            print(max(2 * m - n, n - 2 * m))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = map(int, input().split())\n        if n == 1:\n            print(0)\n        else:\n            print(max(2 * m - n, n - 2 * m) if m > n // 2 else 0)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = map(int, input().split())\n        if n == 1:\n            print(0)\n        else:\n            print(max(2 * m - n, n - 2 * m)) \n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = map(int, input().split())\n        if n == 1:\n            print(0)\n        else:\n            print(max(2 * m - n, n - 2 * m))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = map(int, input().split())\n        if n == 1:\n            print(0)\n        else:\n            print(max(2 * m - n, n - 2 * m)) \n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = map(int, input().split())\n        if n == 1:\n            print(0)\n        else:\n            print(max(2 * m - n, n - 2 * m))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 02:10:43.527898 size on output set 5
