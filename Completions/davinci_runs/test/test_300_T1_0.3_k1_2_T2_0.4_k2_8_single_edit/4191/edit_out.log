2022-04-20 10:23:04.310115 num operations 1
2022-04-20 10:23:04.310137 size on input set 1
2022-04-20 10:23:04.310326 using api key sourya
2022-04-20 10:23:09.559875 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# -----main-----\n\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\n# output\nprint(int(not(a or b or c or d)))\n"
    },
    {
      "index": 1,
      "text": "\n#-----main-----\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n# output\nprint(int(not(a or b or c or d)))\n"
    },
    {
      "index": 2,
      "text": "\n\n#-----main-----\n\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\n# output\nprint(int(not(a or b or c or d))\n"
    },
    {
      "index": 3,
      "text": "\n#-----main-----\n\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n# output\nprint(int(not(a or b or c or d)))\n"
    },
    {
      "index": 4,
      "text": "\n#-----main-----\n\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\n# output\nprint(int(not(a or b or c or d)))\n"
    },
    {
      "index": 5,
      "text": "\n\n#-----main-----\n\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\n# output\nprint(int(not(a or b or c or d))) \n"
    },
    {
      "index": 6,
      "text": "\n#-----main-----\n\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n# output\nprint(int(not(a or b or c or d)))\n"
    },
    {
      "index": 7,
      "text": "\n\n#-----main-----\n\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\n# output\nprint(int(not(a or b or c or d))\n"
    }
  ],
  "created": 1650450184,
  "object": "edit"
}
2022-04-20 10:23:09.560178 fix syntax errors 8 ['\n# -----main-----\n\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\n# output\nprint(int(not(a or b or c or d)))\n', '\n#-----main-----\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n# output\nprint(int(not(a or b or c or d)))\n', '\n\n#-----main-----\n\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\n# output\nprint(int(not(a or b or c or d))\n', '\n#-----main-----\n\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n# output\nprint(int(not(a or b or c or d)))\n', '\n#-----main-----\n\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\n# output\nprint(int(not(a or b or c or d)))\n', '\n\n#-----main-----\n\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\n# output\nprint(int(not(a or b or c or d))) \n', '\n#-----main-----\n\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n# output\nprint(int(not(a or b or c or d)))\n', '\n\n#-----main-----\n\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\n# output\nprint(int(not(a or b or c or d))\n']
2022-04-20 10:23:09.560213 size on output set 6
2022-04-20 10:23:09.560225 num operations 1
2022-04-20 10:23:09.560231 size on input set 1
2022-04-20 10:23:09.560392 using api key sunu
2022-04-20 10:23:14.778092 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not(a and b and c and d)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not (a and b and c and d)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not(a and b and c and d)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not(a and b and c and d)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not (a and b and c and d)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\nimport sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not(a or b or c or d)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not(a and b and c and d))) \n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\nimport sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not(a and b and c and d))) \n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650450189,
  "object": "edit"
}
2022-04-20 10:23:14.778388 fix syntax errors 8 ["import sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not(a and b and c and d)))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not (a and b and c and d)))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not(a and b and c and d)))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not(a and b and c and d)))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not (a and b and c and d)))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not(a or b or c or d)))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not(a and b and c and d))) \n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not(a and b and c and d))) \n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 10:23:14.778515 size on output set 6
