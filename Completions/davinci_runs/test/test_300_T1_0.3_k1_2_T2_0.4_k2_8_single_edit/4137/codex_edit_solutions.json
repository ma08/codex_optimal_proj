["\n\ndef brainfuck(expression):\n    expression = expression.replace('+', ' + ').replace('-', ' - ')\n    expression = expression.split()\n    result = int(expression[0])\n    for i in range(1, len(expression), 2):\n        if expression[i] == '+':\n            result += int(expression[i+1])\n        else:\n            result -= int(expression[i+1])\n    result = result % 256\n    # print(result)\n    bf = ''\n    for i in range(result):\n        bf += '+'\n    bf += '>'\n    for i in range(result):\n        bf += '<'\n    bf += '[<+>-]<'\n    bf += '.'\n    return bf\n\nexpression = input()\nprint(brainfuck(expression))\n", "\n\n\nimport re\n\ndef bf_calc(expr):\n    #print(expr)\n    expr = expr.replace('+', ' + ')\n    expr = expr.replace('-', ' - ')\n    expr = expr.replace(' ', '')\n    #print(expr)\n    nums = re.findall(r'\\d+', expr)\n    #print(nums)\n    signs = re.findall(r'[+-]', expr)\n    #print(signs)\n    result = int(nums[0])\n    for i in range(1, len(nums)):\n        if signs[i-1] == '+':\n            result += int(nums[i])\n        else:\n            result -= int(nums[i])\n    #print(result)\n    return result\n\n\ndef bf_gen(expr):\n    result = bf_calc(expr)\n    #print(result)\n    output = ''\n    for i in range(0, result):\n        output += '+'\n    output += '>'\n    output += '.'\n    return output\n\nif __name__ == '__main__':\n    expr = input()\n    print(bf_gen(expr))\n", "\n\n\nimport re\n\ndef bf_calc(expr):\n    #print(expr)\n    expr = expr.replace('+', ' +')\n    expr = expr.replace('-', ' -')\n    expr = expr.replace(' ', '')\n    #print(expr)\n    nums = re.findall(r'\\d+', expr)\n    #print(nums)\n    signs = re.findall(r'[+-]', expr)\n    #print(signs)\n    result = int(nums[0])\n    for i in range(1, len(nums)):\n        if signs[i-1] == '+':\n            result += int(nums[i])\n        else:\n            result -= int(nums[i])\n    #print(result)\n    return result\n\n\ndef bf_gen(expr):\n    result = bf_calc(expr)\n    #print(result)\n    output = ''\n    for i in range(0, result):\n        output += '+'\n    output += '>'\n    output += '.'\n\n    return output\n\nif __name__ == '__main__':\n    expr = input()\n    print(bf_gen(expr))\n", "\n\nimport re\n\ndef bf_calc(expr):\n    print(expr)\n    expr = expr.replace('+', ' + ')\n    expr = expr.replace('-', ' - ')\n    expr = expr.replace(' ', '')\n    print(expr)\n    nums = re.findall(r'\\d+', expr)\n    print(nums)\n    signs = re.findall(r'[+-]', expr)\n    print(signs)\n    result = int(nums[0])\n    for i in range(1, len(nums)):\n        if signs[i-1] == '+':\n            result += int(nums[i])\n        else:\n            result -= int(nums[i])\n    print(result)\n    return result\n\n\ndef bf_gen(expr):\n    result = bf_calc(expr)\n    print(result)\n    output = ''\n    for i in range(0, result):\n        output += '+'\n    output += '>'\n    output += '.'\n    return output\n\nif __name__ == '__main__':\n    expr = input()\n    print(bf_gen(expr))\n", "\n\ndef brainfuck(expression):\n    expression = expression.replace('+', ' + ').replace('-', ' - ').replace('*', ' * ').replace('/', ' / ')\n    expression = expression.split()\n    result = int(expression[0])\n    for i in range(1, len(expression), 2):\n        if expression[i] == '+':\n        elif expression[i] == '-':\n            result -= int(expression[i+1])\n        elif expression[i] == '*':\n            result *= int(expression[i+1])\n            result += int(expression[i+1])\n        else:\n            result = result // int(expression[i+1])\n    result = result % 256\n    # print(result)\n    bf = ''\n    for i in range(result):\n        bf += '+'\n    bf += '>'\n    for i in range(result):\n        bf += '<'\n    bf += '[<+>-]<'\n    bf += '.'\n    return bf\n\nexpression = input()\nprint(brainfuck(expression))\n", "\n#\nimport re\n\ndef bf_calc(expr):\n    #print(expr)\n    expr = expr.replace('+', ' + ')\n    expr = expr.replace('-', ' - ')\n    expr = expr.replace(' ', '')\n    #print(expr)\n    nums = re.findall(r'\\d+', expr)\n    #print(nums)\n    signs = re.findall(r'[+-]', expr)\n    #print(signs)\n    result = int(nums[0])\n    for i in range(1, len(nums)):\n        if signs[i-1] == '+':\n            result += int(nums[i])\n        else:\n            result -= int(nums[i])\n    #print(result)\n    return result\n\n\ndef bf_gen(expr):\n    result = bf_calc(expr)\n    #print(result)\n    output = ''\n    for i in range(0, result):\n        output += '+'\n    output += '>'\n    output += '.'\n    return output\n\nif __name__ == '__main__':\n    expr = input()\n    print(bf_gen(expr))\n", "\n\ndef brainfuck(expression):\n    expression = expression.replace('+', ' + ').replace('-', ' - ').split()\n    result = sum(int(x) for x in expression)\n    return '+' * result + '>' + '<' * result + '[<+>-]<.'\n\nexpression = input()\nprint(brainfuck(expression))\n", "\n\nimport re\n\ndef bf_calc(expr):\n    # print(expr)\n    expr = expr.replace('+', ' + ')\n    expr = expr.replace('-', ' - ')\n    expr = expr.replace(' ', '')\n    # print(expr)\n    nums = re.findall(r'\\d+', expr)\n    # print(nums)\n    signs = re.findall(r'[+-]', expr)\n    # print(signs)\n    result = int(nums[0])\n    for i in range(1, len(nums)):\n        if signs[i-1] == '+':\n            result += int(nums[i])\n        else:\n            result -= int(nums[i])\n    # print(result)\n    return result\n\n\ndef bf_gen(expr):\n    result = bf_calc(expr)\n    # print(result)\n    output = ''\n    for i in range(0, result):\n        output += '+'\n    output += '>'\n    output += '.'\n    return output\n\nif __name__ == '__main__':\n    expr = input()\n    print(bf_gen(expr))\n", "\n\ndef brainfuck(expression):\n    expression = expression.replace('+', ' + ').replace('-', ' - ')\n    expression = expression.split()\n    result = int(expression[0])\n    for i in range(1, len(expression), 2):\n        if expression[i] == '+':\n            result += int(expression[i+1])\n        else:\n            result -= int(expression[i+1])\n    result = result % 256\n    # print(result)\n    bf = ''\n    for i in range(result):\n        bf += '+'\n    bf += '>'\n    for i in range(result):\n        bf += '<'\n    bf += '[<+>-]'\n    bf += '.'\n    return bf\n\nexpression = input()\nprint(brainfuck(expression))\n", "#!/usr/bin/env python3\n\n\nimport re\n\ndef bf_calc(expr):\n    #print(expr)\n    expr = expr.replace(\"+\", \" + \")\n    expr = expr.replace(\"-\", \" - \")\n    expr = expr.replace(\" \", \"\")\n    #print(expr)\n    nums = re.findall(r\"\\d+\", expr)\n    #print(nums)\n    signs = re.findall(r\"[+-]\", expr)\n    #print(signs)\n    result = int(nums[0])\n    for i in range(1, len(nums)):\n        if signs[i-1] == \"+\":\n            result += int(nums[i])\n        else:\n            result -= int(nums[i])\n    #print(result)\n    return result\n\n\ndef bf_gen(expr):\n    result = bf_calc(expr)\n    #print(result)\n    output = ''\n    for i in range(0, result):\n        output += \"+\"\n    output += \">\"\n    output += \".\"\n    return output\n\nif __name__ == '__main__':\n    expr = input()\n    print(bf_gen(expr))\n", "\nimport re\n\ndef bf_calc(expr):\n    # print(expr)\n    expr = expr.replace('+', ' + ')\n    expr = expr.replace('-', ' - ')\n    expr = expr.replace(' ', '')\n    # print(expr)\n    nums = re.findall(r'\\d+', expr)\n    # print(nums)\n    signs = re.findall(r'[+-]', expr)\n    # print(signs)\n    result = int(nums[0])\n    for i in range(1, len(nums)):\n        if signs[i-1] == '+':\n            result += int(nums[i])\n        else:\n            result -= int(nums[i])\n    # print(result)\n    return result\n\n\ndef bf_gen(expr):\n    result = bf_calc(expr)\n    # print(result)\n    output = ''\n    for i in range(0, result):\n        output += '+'\n    output += '>'\n    output += '.'\n\n    return output\n\nif __name__ == '__main__':\n    expr = input()\n    print(bf_gen(expr))\n", "\n\ndef brainfuck(expression):\n    expression = expression.replace('+', ' + ').replace('-', ' - ').replace('*', ' * ').replace('/', ' / ')\n    expression = expression.split()\n    result = float(expression[0])\n    for i in range(1, len(expression), 2):\n        if expression[i] == '+':\n        elif expression[i] == '-':\n            result -= int(expression[i+1])\n        elif expression[i] == '*':\n            result *= int(expression[i+1])\n            result += int(expression[i+1])\n        else:\n            result /= int(expression[i+1])\n    result = int(result) % 256\n    # print(result)\n    bf = ''\n    for i in range(result):\n        bf += '+'\n    bf += '>'\n    for i in range(result):\n        bf += '<'\n    bf += '[<+>-]<'\n    bf += '.'\n    return bf\n\nexpression = input()\nprint(brainfuck(expression))\n", "\n\ndef brainfuck(expression):\n    expression = expression.replace('+', ' + ').replace('-', ' - ').replace(' ', '')\n    expression = expression.split()\n    result = 0\n    for i in range(1, len(expression), 2):\n        if expression[i] == '+':\n            result += int(expression[i+1])\n        else:\n            result -= int(expression[i+1])\n    result = result % 256\n    # print(result)\n    bf = ''\n    for i in range(result):\n        bf += '+'\n    bf += '>'\n    for i in range(result):\n        bf += '<'\n    bf += '[<+>-]<'\n    bf += '.'\n    return bf\n\nexpression = input()\nprint(brainfuck(expression))\n", "\n\ndef brainfuck(expression):\n    expression = expression.replace('+', ' + ').replace('-', ' - ').replace('*', ' * ').replace('/', ' / ')\n    expression = expression.split()\n    result = int(expression[0])\n    for i in range(1, len(expression), 2):\n        if expression[i] == '+':\n        elif expression[i] == '-':\n            result -= int(expression[i+1])\n        elif expression[i] == '*':\n            result *= int(expression[i+1])\n            result += int(expression[i+1])\n        else:\n            result //= int(expression[i+1])\n    result = result % 256\n    # print(result)\n    bf = ''\n    for i in range(result):\n        bf += '+'\n    bf += '>'\n    for i in range(result):\n        bf += '<'\n    bf += '[<+>-]<'\n    bf += '.'\n    return bf\n\nexpression = input()\nprint(brainfuck(expression))\n", "\nimport re\n\ndef bf_calc(expr):\n    expr = expr.replace('+', ' + ')\n    expr = expr.replace('-', ' - ')\n    expr = expr.replace(' ', '')\n    nums = re.findall(r'\\d+', expr)\n    signs = re.findall(r'[+-]', expr)\n    result = int(nums[0])\n    for i in range(1, len(nums)):\n        if signs[i-1] == '+':\n            result += int(nums[i])\n        else:\n            result -= int(nums[i])\n    return result\n\n\ndef bf_gen(expr):\n    result = bf_calc(expr)\n    output = ''\n    for i in range(0, result):\n        output += '+'\n    output += '>'\n    output += '.'\n    return output\n\nif __name__ == '__main__':\n    expr = input()\n    print(bf_gen(expr))\n"]