2022-04-20 09:45:02.872036 num operations 1
2022-04-20 09:45:02.872060 size on input set 1
2022-04-20 09:45:02.872281 using api key sunu
2022-04-20 09:45:08.659066 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#-----Solution-----\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if (j - i + 1) % 2 == 1:\n            if a[(j + i) // 2] == m:\n                count += 1\n        else:\n            if a[(j + i) // 2] == m or a[(j + i) // 2 + 1] == m:\n                count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n#-----Solution-----\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if (j - i + 1) % 2 == 1:\n            if a[(j + i) // 2] == m:\n                count += 1\n        else:\n            if a[(j + i) // 2] == m or a[(j + i) // 2 + 1] == m:\n                count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\n#-----Solution-----\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\ncount = 0\nfor i in range(n):\n    for j in range(i, n):\n        if (j - i + 1) % 2 == 1:\n            if a[(j + i) // 2] == m:\n                count += 1\n        else:\n            if a[(j + i) // 2] == m or a[(j + i) // 2 + 1] == m:\n                count += 1\n\nprint(count)\n"
    },
    {
      "index": 3,
      "text": "\n#-----Solution-----\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if (j - i + 1) % 2 == 1:\n            if a[(j + i) // 2] == m:\n                count += 1\n        else:\n            if a[(j + i) // 2] == m or a[(j + i) // 2 + 1] == m:\n                count += 1\n\nprint(count)\n"
    },
    {
      "index": 4,
      "text": "\n\n# -----Solution-----\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if (j - i + 1) % 2 == 1:\n            if a[(j + i) // 2] == m:\n                count += 1\n        else:\n            if a[(j + i) // 2] == m or a[(j + i) // 2 + 1] == m:\n                count += 1\n\nprint(count)\n"
    },
    {
      "index": 5,
      "text": "\n#-----Solution-----\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if (j - i + 1) % 2 == 1:\n            if a[(j + i) // 2] == m:\n                count += 1\n        else:\n            if a[(j + i) // 2] == m or a[(j + i) // 2 + 1] == m:\n                count += 1\n\nprint(count)\n"
    },
    {
      "index": 6,
      "text": "\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if (j - i + 1) % 2 == 1:\n            if a[(j + i) // 2] == m:\n                count += 1\n        else:\n            if a[(j + i) // 2] == m or a[(j + i) // 2 + 1] == m:\n                count += 1\n\nprint(count)\n"
    },
    {
      "index": 7,
      "text": "\n#-----Solution-----\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if (j - i + 1) % 2 == 1:\n            if a[(j + i) // 2] == m:\n                count += 1\n        else:\n            if a[(j + i) // 2] == m or a[(j + i) // 2 + 1] == m:\n                count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650447903,
  "object": "edit"
}
2022-04-20 09:45:08.659424 fix syntax errors 8 ['\n#-----Solution-----\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if (j - i + 1) % 2 == 1:\n            if a[(j + i) // 2] == m:\n                count += 1\n        else:\n            if a[(j + i) // 2] == m or a[(j + i) // 2 + 1] == m:\n                count += 1\n\nprint(count)\n', '\n#-----Solution-----\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if (j - i + 1) % 2 == 1:\n            if a[(j + i) // 2] == m:\n                count += 1\n        else:\n            if a[(j + i) // 2] == m or a[(j + i) // 2 + 1] == m:\n                count += 1\n\nprint(count)\n', '\n#-----Solution-----\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\ncount = 0\nfor i in range(n):\n    for j in range(i, n):\n        if (j - i + 1) % 2 == 1:\n            if a[(j + i) // 2] == m:\n                count += 1\n        else:\n            if a[(j + i) // 2] == m or a[(j + i) // 2 + 1] == m:\n                count += 1\n\nprint(count)\n', '\n#-----Solution-----\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if (j - i + 1) % 2 == 1:\n            if a[(j + i) // 2] == m:\n                count += 1\n        else:\n            if a[(j + i) // 2] == m or a[(j + i) // 2 + 1] == m:\n                count += 1\n\nprint(count)\n', '\n\n# -----Solution-----\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if (j - i + 1) % 2 == 1:\n            if a[(j + i) // 2] == m:\n                count += 1\n        else:\n            if a[(j + i) // 2] == m or a[(j + i) // 2 + 1] == m:\n                count += 1\n\nprint(count)\n', '\n#-----Solution-----\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if (j - i + 1) % 2 == 1:\n            if a[(j + i) // 2] == m:\n                count += 1\n        else:\n            if a[(j + i) // 2] == m or a[(j + i) // 2 + 1] == m:\n                count += 1\n\nprint(count)\n', '\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if (j - i + 1) % 2 == 1:\n            if a[(j + i) // 2] == m:\n                count += 1\n        else:\n            if a[(j + i) // 2] == m or a[(j + i) // 2 + 1] == m:\n                count += 1\n\nprint(count)\n', '\n#-----Solution-----\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if (j - i + 1) % 2 == 1:\n            if a[(j + i) // 2] == m:\n                count += 1\n        else:\n            if a[(j + i) // 2] == m or a[(j + i) // 2 + 1] == m:\n                count += 1\n\nprint(count)\n']
2022-04-20 09:45:08.659474 size on output set 4
2022-04-20 09:45:08.659485 num operations 1
2022-04-20 09:45:08.659491 size on input set 1
2022-04-20 09:45:08.659658 using api key kouti
2022-04-20 09:45:20.383262 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef median(a, l, r):\n    if (r - l) % 2 == 0 or r == l:\n        return a[(l + r) // 2]\n    else:\n        return a[(l + r) // 2 + 1]\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    a.sort()\n\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(a, i, j) == m:\n                count += 1\n\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef median(a, l, r):\n    return a[(l + r) // 2]\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    a.sort()\n\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(a, i, j) == m:\n                count += 1\n\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef median(a, l, r):\n    if (r - l + 1) % 2 == 0:\n        return a[(l + r) // 2]\n    else:\n\n        return a[(l + r) // 2 + 1]\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    a.sort()\n\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(a, i, j) == m:\n                count += 1\n\n\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef median(a, l, r):\n    if (r - l) % 2 == 0:\n        return a[(l + r) // 2]\n    else:\n        return a[(l + r) // 2 + 1]\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    a.sort()\n\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(a, i, j) == m:\n                count += 1\n\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\n\ndef median(l, r):\n    return (l + r) // 2\n\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, input().split()))\n\n    a.sort()\n\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(a[i], a[j]) == m:\n                count += 1\n\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\nimport sys\n\ndef median(a, l, r):\n    if (r - l + 1) % 2 == 0:\n        return a[(l + r) // 2]\n    else:\n        return a[(l + r) // 2]\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    a.sort()\n\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(a, i, j) == m and i != j:\n                count += 1\n\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef median(a, l, r):\n    return a[(l + r) // 2] if (r - l) % 2 == 0 else a[(l + r) // 2 + 1]\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    a.sort()\n\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(a, i, j) == m:\n                count += 1\n\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef median(a, l, r):\n    if (r - l) % 2 == 0:\n        return a[(l + r) // 2]\n    else:\n        return a[(l + r) // 2 + 1]\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    a.sort()\n\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(a, i, j) == m:\n                count += 1\n\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650447908,
  "object": "edit"
}
2022-04-20 09:45:20.383683 fix syntax errors 8 ['\nimport sys\n\ndef median(a, l, r):\n    if (r - l) % 2 == 0 or r == l:\n        return a[(l + r) // 2]\n    else:\n        return a[(l + r) // 2 + 1]\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    a.sort()\n\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(a, i, j) == m:\n                count += 1\n\n    print(count)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef median(a, l, r):\n    return a[(l + r) // 2]\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    a.sort()\n\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(a, i, j) == m:\n                count += 1\n\n    print(count)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef median(a, l, r):\n    if (r - l + 1) % 2 == 0:\n        return a[(l + r) // 2]\n    else:\n\n        return a[(l + r) // 2 + 1]\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    a.sort()\n\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(a, i, j) == m:\n                count += 1\n\n\n    print(count)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef median(a, l, r):\n    if (r - l) % 2 == 0:\n        return a[(l + r) // 2]\n    else:\n        return a[(l + r) // 2 + 1]\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    a.sort()\n\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(a, i, j) == m:\n                count += 1\n\n    print(count)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\n\ndef median(l, r):\n    return (l + r) // 2\n\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, input().split()))\n\n    a.sort()\n\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(a[i], a[j]) == m:\n                count += 1\n\n    print(count)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef median(a, l, r):\n    if (r - l + 1) % 2 == 0:\n        return a[(l + r) // 2]\n    else:\n        return a[(l + r) // 2]\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    a.sort()\n\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(a, i, j) == m and i != j:\n                count += 1\n\n    print(count)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef median(a, l, r):\n    return a[(l + r) // 2] if (r - l) % 2 == 0 else a[(l + r) // 2 + 1]\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    a.sort()\n\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(a, i, j) == m:\n                count += 1\n\n    print(count)\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python3\n\nimport sys\n\ndef median(a, l, r):\n    if (r - l) % 2 == 0:\n        return a[(l + r) // 2]\n    else:\n        return a[(l + r) // 2 + 1]\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    a.sort()\n\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(a, i, j) == m:\n                count += 1\n\n    print(count)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 09:45:20.383744 size on output set 8
