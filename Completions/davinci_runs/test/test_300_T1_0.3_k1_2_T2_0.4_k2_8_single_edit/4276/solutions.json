["n, t = map(int, input().split())\na = [list(map(int, input().split())) for i in range(n)]\nl = []\nflag = False\nfor i in range(n):\n    if a[i][1] <= t:\n        l.append(a[i][0])\n        flag = True\nif flag:\n    print(min(l))\nelse:\n    print('TLE')", "N,T=map(int,input().split())\nk=1000\nl=1\nfor i in range(N):\n    c,t=map(int,input().split())\n    if t <= T:\n        l=0\n        if c < k:\n            k = c\nif l==1:\n    print('TLE')\nelse:\n    print(k)", "n, T = map(int, input().split())\nx = list()\ncnt = 0\nfor i in range(n):\n    c, t = map(int, input().split())\n    if t <= T:\n        x.append(c)\n        cnt = 1\nif cnt == 0:\n    print(\"TLE\")\nelse:\n    print(min(x))", "n,T=map(int,input().split())\nans=10000\nfor i in range(n):\n  c,t=map(int,input().split())\n  if t<=T:\n    ans=min(ans,c)\n\nif ans==10000:\n  print(\"TLE\")\nelse:\n  print(ans)", "a,b=input().split()\na=int(a)\nb=int(b)\nc=[input().split() for i in range(a)]\nd=1001\nfor i in range(a):\n  if int(c[i][1])<=b:\n    if d>int(c[i][0]):\n      d=int(c[i][0])\nif d==1001:\n  print(\"TLE\")\nelse:\n  print(d)\n", "N, T = map(int, input().split())\nans = 1001\nfor i in range(N):\n    c, t = map(int, input().split())\n    if t <= T:\n        ans = min(ans, c)\n\nif ans <= 1000:\n    print(ans)\nelse:\n    print(\"TLE\")", "N, T = map(int, input().split())\nc = [0 for i in range(N)]\nt = [0 for i in range(N)]\nfor i in range(N):\n  c[i], t[i] = map(int, input().split())\n\nans = float('inf')\nflag = False\nfor i in range(N):\n  if t[i] <= T:\n    flag = True\n    if ans > c[i]:\n      ans = c[i]\nif flag:\n  print(ans)\nelse:\n  print('TLE')", "N,T=map(int,input().split())\ncost=1000000\nnum=-1\nfor i in range(N):\n  c,t=map(int,input().split())\n  if t<=T and cost > c:\n    cost = c\n    num = i+1\nprint(cost if num > 0 else 'TLE')", "n,t = map(int,input().split())\ndata = [input().split() for i in range(n)]\nans = 1001\nfor i in range(n):\n    if int(data[i][1]) <= t:\n        ans = min(ans,int(data[i][0]))\nif ans == 1001:\n    print('TLE')\nelse:\n    print(ans)", "n, T = map(int, input().split())\na = 1001\nfor _ in range(n):\n    c, t = map(int, input().split())\n    if t <= T and c < a:\n        a = c\nif a == 1001:\n    print('TLE')\nelse:\n    print(a)", "N, T = map(int, input().split())\nroutes = [tuple(map(int, input().split())) for _ in range(N)]\n\nres = 1001\n\nfor i in range(N):\n    if routes[i][1] <= T:\n        res = min(res, routes[i][0])\n\nprint([res, 'TLE'][res > 1000])", "\nn,T = list(map(int,input().split()))\nans = 1001\nfor i in range(n):\n    c,t = list(map(int,input().split()))\n    if t <= T :\n        ans = min(ans,c)\n        \nprint((ans if ans!=1001 else \"TLE\"))  \n", "N,T=map(int,input().split())\nans=2000\nfor i in range(N):\n  c,t=map(int,input().split())\n  if t<=T:\n    ans=min(ans,c)\nprint(ans if ans!=2000 else \"TLE\")", "n,T =list(map(int,input().split()))\nans = 10**3+1\nfor i in range(n):\n    c,t=list(map(int,input().split()))\n    if t > T:\n        continue\n    else:\n        ans = min(ans,c)\nif ans == 10**3+1:\n    print('TLE')\nelse:\n    print(ans)\n", "# coding: utf-8\n\nnum, time = map(int, input().split())\ncount = 0\nans = 10000\nfor i in range(num):\n    cost, tm = map(int, input().split())\n    if tm <= time:\n        if cost < ans:\n            ans = cost\n            max = ans\n            count = 1\nif count == 0:\n    print(\"TLE\")\nelse:\n    print(ans)", "n, t = map(int, input().split())\n\nc = []\n\nfor i in range(0,n):\n    c_i, t_i = map(int, input().split())\n\n    if t_i <= t:\n        c.append(c_i)\n\nif len(c) > 0:\n    print(min(c))\nelse:\n    print(\"TLE\")", "n,t=map(int, input().split())\nc_list,t_list=[],[]\nfor i in range(n):\n  x,y=map(int, input().split())\n  c_list.append(x)\n  t_list.append(y)\ncost=1001\nfor i in range(n):\n  if t_list[i]<=t and c_list[i]<cost:\n    cost=c_list[i]\nprint(cost if cost<1001 else \"TLE\")", "#k = int(input())\n#s = input()\n#a, b = map(int, input().split())\n#s, t = map(str, input().split())\n#l = list(map(int, input().split()))\n#l = [list(map(int,input().split())) for i in range(n)]\n#a = [list(input()) for _ in range(n)]\n#a = [input() for _ in range(n)]\n\nn,t = list(map(int, input().split()))\nl = [list(map(int,input().split())) for i in range(n)]\n\ncosts = []\nfor i in range(n):\n    if l[i][1] <= t:\n        costs.append(l[i][0])\n\nif len(costs) == 0:\n    print(\"TLE\")\nelse:\n    print((min(costs)))\n\n", "N,T = map(int,input().split())\nls = []\nfor i in range(N):\n    c,t = map(int,input().split())\n    if t <= T:\n        ls.append(c)\nif len(ls) == 0:\n    print(\"TLE\")\nelse:\n    print(min(ls))", "n,t = map(int, input().split())\n\nres = 10000\n\nfor i in range(n):\n    a,b = map(int, input().split())\n    if b <= t:\n        res = min(res,a)\n\nif res ==10000:\n    print(\"TLE\")\nelse:\n    print(res)", "N,T = map(int,input().split())\nm = 1001\nfor i in range(N):\n  c,t=map(int,input().split())\n  if t<=T:\n    m = min(m,c)\nprint(\"TLE\" if m == 1001 else m)", "N,T = map(int,input().split())\nls = []\n\nfor i in range(N):\n  c,t = map(int,input().split())\n  if t <= T:\n    ls.append(c)\n    \nprint(min(ls) if ls else \"TLE\")", "n,t=map(int, input().split())\nans=10000\nfor i in range(n):\n  a,b=map(int, input().split())\n  if b<=t:\n    ans=min(ans,a)\nif ans<10000:\n  print(ans)\nelse:\n  print('TLE')", "n,t = map(int,input().split())\nans = 1001\nfor i in range(n):\n  c,time = map(int,input().split())\n  if time <= t:\n    ans = min(ans,c)\nif ans == 1001:\n  print(\"TLE\")\nelse:\n  print(ans)", "# author:  Taichicchi\n# created: 11.10.2020 10:52:46\n\nimport sys\n\nN, T = list(map(int, input().split()))\n\nans = 100000\nfor i in range(N):\n    c, t = list(map(int, input().split()))\n    if t <= T:\n        ans = min(ans, c)\n\nif ans == 100000:\n    print(\"TLE\")\nelse:\n    print(ans)\n", "n,t=list(map(int,input().split()))\ncost=1001\nfor i in range(n):\n    ci,ti=list(map(int,input().split()))\n    if ti<=t and ci<cost:\n        cost=ci\nif cost==1001:\n    print('TLE')\nelse:\n    print(cost)\n", "N,T = map(int,input().split())\nans = 1001\nls = []\nfor i in range(N):\n    ls.append(list(map(int,input().split())))\nfor i in ls:\n    if i[1] <= T:\n        ans = min(ans,i[0])\n    else:\n        continue\nif ans == 1001:\n    print('TLE')\nelse:\n    print(ans)", "N,T=map(int,input().split())\nmi=1001\nfor i in range(N):\n    c,t=map(int,input().split())\n    if t<=T:\n        if c<=mi:mi=c\nif mi==1001:print(\"TLE\")\nelse:print(mi)", "N,T=list(map(int,input().split()))\nans=100000\nfor _ in range(N):\n  c,t=list(map(int,input().split()))\n  if t<=T:\n    ans=min(ans,c)\nprint(('TLE' if ans==100000 else ans))\n", "import math\nfrom statistics import mean\n# a=int(input())\n#b=int(input())\n# c=[]\n# for i in b:\n#     c.append(i)\ne1,e2 = list(map(int,input().split()))\n#f = list(map(int,input().split()))\n#j = [input() for _ in range(3)]\nh = []\nfor i in range(e1):\n    h.append(list(map(int,input().split())))\nr=[]\ncount=0\nfor i in range(e1):\n    if h[i][1]<=e2:\n         r.append(h[i][0])\n\nif len(r)>0:\n    print((min(r)))\nelse:\n    print(\"TLE\")\n\n\n", "N,T = map(int, input().split())\nl = []\nfor _ in range(N):\n    c,t = map(int, input().split())\n    if T >= t:\n        l.append(c)\n    else:\n        l.append(1001)\n\nprint(min(l)) if min(l) < 1001 else print(\"TLE\")", "n, T = list(map(int, input().split()))\n\nct = [list(map(int, input().split())) for i in range(n)]\n\ncost = []\n\nfor c, t in ct:\n    if t <= T:\n        cost.append(c)\n\nif len(cost) == 0:\n    print(\"TLE\")\nelse:\n    print(min(cost))", "N,T=map(int,input().split())\nl=[]\nfor i in range(N):\n  c,t=map(int,input().split())\n  if t<=T:\n    l.append(c)\nif len(l)==0:\n  print(\"TLE\")\nelse:\n  print(min(l))", "n,T = map(int,input().split())\nct = [list(map(int,input().split())) for _ in range(n)]\nli = []\nfor k in ct:\n    if k[1]<=T:\n        li += [k[0]]\nif li ==[]:\n    print(\"TLE\")\nelse:\n    print(min(li))", "N, T = map(int, input().split())\nk=1001\nfor i in range(N):\n    c,t=map(int, input().split())\n    if t<=T and c<k: k=c\nif k==1001:\n    print(\"TLE\")\n    return\nprint(k)", "N, T = map(int,input().split())\n\nans = \"TLE\"\nfor i in range(N):\n    c, t = map(int,input().split())\n    if t <= T:\n        if ans == \"TLE\" or ans > c:\n            ans = c\n\nprint(ans)", "n,t=map(int,input().split())\nct=[list(map(int,input().split())) for i in range(n)]\nflag=0\nans=ct[0][0]\nfor i in range(n):\n    if ct[i][1]<=t:\n        flag=1\n        ans=min(ans,ct[i][0])\n    else:\n        pass\nif flag==0:\n    print(\"TLE\")\nelse:\n    print(ans)", "import sys\nimport math\n\n#https://atcoder.jp/contests/agc008/submissions/15248942\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninm = lambda: map(int, sys.stdin.readline().split())\ninl = lambda: list(inm())\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print(\"\\033[33m\", *a, \"\\033[0m\", **dict(file=sys.stderr, **kw))\n\nN,T = inm()\nmin_cost = 2000\n\nfor i in range(N):\n    c,t = inm()\n    if t <= T:\n        min_cost = min(min_cost,c)\n\nif min_cost == 2000:\n    print(\"TLE\")\nelse:\n    print(min_cost)\n", "N, T = list(map(int, input().split()))\nc = [0] * N\nt = [0] * N\nfor i in range(N):\n    c[i], t[i] = list(map(int, input().split()))\n\nz = list(zip(c, t))\nz = sorted(z)\nc, t = list(zip(*z))\n\nfor i in range(N):\n    if t[i] <= T:\n        print((c[i]))\n        return\nprint('TLE')\n", "n, t = map(int, input().split())\na = []\nfor i in range(n):\n  c, s = map(int, input().split())\n  if s <= t:\n    a.append(c)\nprint(\"TLE\" if len(a) == 0 else min(a))", "N, T = list(map(int, input().split()))\n\nres = 10 ** 9\nfor _ in range(N):\n    c, t = list(map(int, input().split()))\n    if t <= T:\n        res = min(res, c)\n\nif res < 10 ** 9:\n    print(res)\nelse:\n    print(\"TLE\")\n", "a,b = map(int,input().split())\nans = []\nfor i in range(a):\n    c,d = map(int,input().split())\n    if d <= b:\n        ans.append(c)\nprint(\"TLE\" if len(ans) == 0 else min(ans))", "n,t=map(int,input().split())\na=[list(map(int,input().split())) for i in range(n)]\nc=[]\nfor i in range(n):\n  if a[i][1]<=t:\n    c.append(a[i][0])\n\nif not c:\n  print('TLE')\nelse:\n  print(min(c))", "N, T = map(int, input().split())\nlst = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    if t <= T:\n        lst.append(c)\nif not lst:\n    print('TLE')\nelse:\n    print(min(lst))", "n,t = map(int,input().split())\nans = []\nfor i in range(n):\n    a,b = map(int,input().split())\n    if b<=t:\n        ans.append(a)\nif len(ans) == 0:\n    print(\"TLE\")\nelse:\n    print(min(ans))", "N,T=list(map(int,input().split()))\nans=float(\"inf\")\nfor i in range(N):\n   a,b=map(int,input().split())\n   if T>=b:\n      ans=min(ans,a)\nprint(\"TLE\" if ans==float(\"inf\") else ans)", "N, T = map(int, input().split())\nCT = [list(map(int, input().split())) for _ in range(N)]\ncost = 9999\nfor i in range(N):\n    if CT[i][1] <= T:\n        if CT[i][0] < cost:\n            cost = CT[i][0]\nif cost == 9999:\n    print(\"TLE\")\nelse:\n    print(cost)\npass", "n, T = list(map(int, input().split()))\nCT = [list(map(int, input().split())) for _ in range(n)]\n\nans = 1001\nfor c, t in CT:\n    if t > T: continue\n    ans = min(ans, c)\nif ans == 1001:\n  ans = \"TLE\"\nprint(ans)\n", "import math\nN,T=map(int, input().split())\nans = math.inf\nfor i in range(N):\n    c,t=map(int,input().split())\n    if t <= T:\n        ans = min(ans, c)\nprint(ans if ans != math.inf else \"TLE\")", "N,T=map(int,input().split())\ncost=1001\nfor i in range(N):\n    c,t=map(int,input().split())\n    if T>=t:\n        if cost>c:\n            cost=c\nprint(\"TLE\" if cost==1001 else cost)", "N, T = list(map(int, input().split()))\nct = []\nfor i in range(N):\n  tmp = list(map(int, input().split()))\n  ct.append(tmp)\nct.sort()\n\nans = 0\nfor i in range(len(ct)):\n  if ct[i][1] <= T:\n    ans = ct[i][0]\n    break\nif ans == 0:\n  print('TLE')\nelse:\n  print(ans)\n", "def mapt(fn, *args):\n    return tuple(map(fn, *args))\n\n\ndef Input():\n    return mapt(int, input().split(\" \"))\n  \n\ndef main():\n    n, t = Input()\n    data = [Input() for _ in range(n)]\n    ans = 1001\n\n    for cost, time in data:\n        if time <= t:\n            ans = min(ans, cost)\n\n    if ans == 1001:\n        print(\"TLE\")\n    else:\n        print(ans)\n\n\nmain()", "n,t = list(map(int,input().split()))\nli = [list(map(int,input().split())) for i in range(n)]\n\nlis = []\nfor i in li:\n    if i[1] <= t:\n       lis.append(i[0])\nif len(lis) == 0:\n    print('TLE')\nelse:\n    print((min(lis)))\n", "import sys\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nsys.setrecursionlimit(10 ** 9)\nINF = 1 << 60\nMOD = 1000000007\n\n\ndef main():\n    N, T = list(map(int, readline().split()))\n\n    ans = INF\n    for _ in range(N):\n        c, t = list(map(int, readline().split()))\n        if t <= T and ans > c:\n            ans = c\n    \n    if ans < INF:\n        print(ans)\n    else:\n        print('TLE')\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N, T = map(int, input().split())\nc = []\nmin_cost = 10000\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    if t <= T and c < min_cost:\n        min_cost = c\nprint(min_cost) if min_cost <= 1000 else print('TLE')", "N, T = map(int, input().split())\nans = 10000\n\nfor _ in range(N):\n    c,t = map(int, input().split())\n    if t <= T:\n        ans = min(ans,c)\nif ans == 10000:\n    print ('TLE')\nelse:\n    print (ans)", "N,T = map(int,input().split())\nans = 1001\nfor i in range(N):\n    c,t = map(int,input().split())\n    if t <= T:\n        ans = min(ans,c)\n        \nprint('TLE' if ans == 1001 else ans)", "N, T = list(map(int, input().split()))\nINF = 10**9\nres = INF\nfor _ in range(N):\n    c, t = list(map(int, input().split()))\n    if t <= T and c < res:\n        res = c\nprint((res if res != INF else 'TLE'))\n", "N, T = input().split()\nN = int(N)\nT = int(T)\n\nimport numpy as np\n\nc = np.zeros(N)\nt = np.zeros(N)\n\nfor i in range(N):\n  c[i], t[i] = input().split()\n  c[i] = int(c[i])\n  t[i] = int(t[i])\n  if t[i] > T :\n    c[i] = 1001\n\nif min(c) == 1001:\n  print('TLE')\n  \nelse:\n  print((int(min(c))))\n", "# ABC112\n\nN, T = list(map(int, input().split()))\nC_T = [list(map(int, input().split())) for _ in range(N)]\ntemp_c = 10**10\nfor c, t in C_T:\n    if t <= T and c <= temp_c:\n        temp_c = c\n\n\nif temp_c == 10**10:\n    ans = \"TLE\"\nelse:\n    ans = temp_c\nprint(ans)\n", "n,T=list(map(int ,input().split()))\nl=[]\ncount=0\nfor i in range(0,n):\n    c,t=list(map(int ,input().split()))\n    if(t<T or t==T):\n        l.append(c)\n        \n    else:\n        count+=1\n    \nif(len(l)==0):\n        print(\"TLE\")\nelse:\n    print((int(min(l))))\n", "n,T=list(map(int,input().split()))\nc=[0]*n\nt=[0]*n\nans=[]\nfor i in range(n):\n    c[i],t[i]=list(map(int,input().split()))\n    if t[i]<=T:\n        ans.append(c[i])\nif len(ans)==0:\n    print(\"TLE\")\n    return\nprint((min(ans)))\n", "N, T = map(int, input().split())\nCT = [list(map(int, input().split())) for _ in range(N)]\n\nans = 1001\nfor ct in CT:\n    if ct[1] <= T:\n        ans = min(ans, ct[0])\n\nif ans == 1001:\n    print('TLE')\nelse:\n    print(ans)", "n,t = map(int,input().split())\ncl = []\nfor i in range(n):\n  c,ti = map(int,input().split())\n  if ti <= t:\n    cl.append(c)\nprint(min(cl) if cl != [] else \"TLE\")", "N, T = map(int,input().split())\nct = [list(map(int, input().split())) for _ in range(N)]\n\nans = 1001\nfor p in ct:\n    if p[1] <= T:\n        ans = min(ans, p[0])\n\nprint(ans if ans != 1001 else \"TLE\")", "n, t = map(int, input().split())\nc = 10000\nfor i in range(n):\n    tmp = input().split()\n    if t >= int(tmp[1]):\n        if int(tmp[0]) < c:\n            c = int(tmp[0])\nif c == 10000:\n    print('TLE')\n    return\nelse:\n    print(c)", "from typing import List\n\n\ndef answer(n: int, t: int, cts: List[List[int]]) -> int:\n    costs = [route[0] for route in cts if route[1] <= t]\n    if not costs:\n        return -1\n\n    return min(costs)\n\n\ndef main():\n    n, t = list(map(int, input().split()))\n    cts = [list(map(int, input().split())) for _ in range(n)]\n    ans = answer(n, t, cts)\n    print((ans if ans != -1 else 'TLE'))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n,t = map(int,input().split())\nans = 10**9\nl = []\nfor i in range(n):\n  l.append(list(map(int,input().split())))\nfor i in range(n):\n  if l[i][1] <= t:\n    ans = min(l[i][0],ans)\nif ans == 10**9:\n  print(\"TLE\")\nelse:\n  print(ans)", "N,T=map(int,input().split())\nli=[list(map(int,input().split())) for i in range(N)]\nli2=[]\nfor i in range(N):\n  if li[i][1]<=T:\n    li2.append(li[i])\nli2.sort()\nif len(li2)==0:\n  print('TLE')\n  return\nprint(li2[0][0])", "n, t = [int(i) for i in input().split()]\nlist_route = [list(map(int, input().split())) for list_route in range(n)]\nans = 1001\nfor i in range(0, n):\n    if list_route[i][1] <= t and ans >= list_route[i][0]:\n        ans = list_route[i][0]\nif ans != 1001: print(ans)\nelse: print(\"TLE\")", "n,t = map(int, input().split())\ny = 10**5\nc = [list(map(int,input().split())) for i in range(n)]\nfor i in range(n):\n    if c[i][1]<=t:\n        y=min(y,c[i][0])\nif y != 10**5:\n    print(y)\nelse:\n    print(\"TLE\")", "N, T = map(int, input().split())\nk = 1001\nfor i in range(N):\n    c, t = map(int, input().split())\n    if t <= T and c < k: k = c\nif k == 1001:\n    print(\"TLE\")\n    return\nprint(k)", "N,T = map(int, input().split())\n\ncost = []\n\nfor i in range(N):\n    c,t = map(int, input().split())\n    if t <= T:\n        cost.append(c) \n\nif len(cost) > 0:\n    print(min(cost))\nelse:\n    print(\"TLE\")", "N,T=list(map(int, input().split()))\nc_list=[]\n\nfor i in range(N):\n    c,t=list(map(int, input().split()))\n    if t<=T:\n        c_list.append(c)\n\nif c_list==[]:\n    print(\"TLE\")\n    \nelse:\n    print((min(c_list)))\n", "n,t=list(map(int, input().split()))\nct=[list(map(int, input().split())) for i in range(n)]\nc=[]\nfor i in range(n):\n    if ct[i][1]<=t:\n        c.append(ct[i][0])\nprint((min(c) if len(c)!=0 else \"TLE\"))\n", "n, t = map(int, input().split())\nans = 1001001001\n\nfor _ in range(n):\n    ci, ti = map(int, input().split())\n    if ti <= t:\n        ans = min(ans, ci)\n\nif ans == 1001001001:\n    print('TLE')\nelse:\n    print(ans)", "N, T = map(int, input().split())\nCT = [tuple(map(int, input().split())) for _ in range(N)]\nres = 1001\nfor c, t in CT:\n    if t <= T:\n        res = min(res, c)\nprint(res if res <= 1000 else 'TLE')", "n, T = map(int, input().split())\nc = [0 for _ in range(n)]\nt = [0 for _ in range(n)]\nfor i in range(n):\n    c[i], t[i] = map(int, input().split())\n\nans = 1001\n\nfor i in range(n):\n    if t[i] <= T:\n        ans = min(ans, c[i])\nprint(ans if ans != 1001 else \"TLE\")", "N, T = map(int, input().split())\nc = [0 for i in range(N)]\nt = [0 for i in range(N)]\nfor i in range(N):\n  c[i], t[i] = map(int, input().split())\n\nflag = False\nok = []\nfor i in range(N):\n  if t[i] <= T:\n    ok.append(t.index(t[i]))\n    flag = True\nans = 1001\nfor i in ok:\n  if ans > c[i]:\n    ans = c[i]\nif flag:\n  print(ans)\nelse:\n  print('TLE')", "N,T = map(int, input().split())\n\nans = 2000\nfor i in range(N):\n    c,t = map(int, input().split())\n    if t <= T:\n        ans = min(c, ans)\n\nprint(ans if ans != 2000 else \"TLE\")", "\n\ndef main():\n    N, T = map(int, input().split())\n    l = []\n    for _ in range(N):\n        c, t = map(int, input().split())\n        l.append((c, t))\n    l.sort()\n    for e in l:\n        if e[1] <= T:\n            print(e[0])\n            return\n    print(\"TLE\")\n        \n\ndef __starting_point():\n    main()\n__starting_point()", "n,t = list(map(int,input().split()))\nans = 9999\nfor i in range(n):\n    ci,ti = list(map(int,input().split()))\n    if ti<=t:\n        ans = min(ans,ci)\nif ans == 9999:\n    print('TLE')\nelse:\n    print(ans)\n", "N,T = list(map(int,input().split()))\nct=[9999]\nfor _ in range(N):\n    ctt= list(map(int,input().split()))\n    if ctt[1]<=T:\n        ct.append(ctt[0])\nif ct==[9999]:\n    print(\"TLE\")\n    return\nprint((min(ct)))\n", "n,t = map(int, input().split())\ny = 10**5\nfor i in range(n):\n    c,x = map(int,input().split())\n    if x<=t:\n        y=min(y,c)\nif y != 10**5:\n    print(y)\nelse:\n    print(\"TLE\")", "ma = lambda :map(int,input().split())\nlma = lambda :list(map(int,input().split()))\ntma = lambda :tuple(map(int,input().split()))\nni = lambda:int(input())\nyn = lambda fl:print(\"Yes\") if fl else print(\"No\")\nimport collections\nimport math\nimport itertools\nimport heapq as hq\nimport sys\nn,T = ma()\nans=10**15\nfor i in range(n):\n    c,t=ma()\n    if t<=T:\n        ans=min(ans,c)\nif ans==10**15:\n    print(\"TLE\")\nelse:print(ans)\n", "N,T = list(map(int,input().split()))\n\nm = 1001\n\nfor i in range(N):\n    \n    c,t = list(map(int,input().split()))\n    \n    if t <= T:\n        m=min(m,c)\n        \nprint((\"TLE\" if m==1001 else m))\n\n", "n,t = map(int,input().split())\nl = [list(map(int,input().split())) for i in range(n)]\nl = list(sorted(l,key=lambda x:x[1]))\nc,m = [list(i) for i in zip(*l)]\nans = 9999\nfor i in range(n):\n    if m[i] > t:\n        break\n    else:\n        ans = min(ans,c[i])\nif ans == 9999:\n    print('TLE')\nelse:\n    print(ans)", "import sys\n\ninput = sys.stdin.readline\n\n\ndef main():\n    N, T = [int(x) for x in input().split()]\n    CT = [[int(x) for x in input().split()] for _ in range(N)]\n\n    ans = float(\"inf\")\n    for c, t in CT:\n        if t <= T:\n            ans = min(ans, c)\n\n    if ans == float(\"inf\"):\n        print(\"TLE\")\n    else:\n        print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N, T = map(int, input().split())\nans = 1001\nfor i in range(N):\n  c, t = map(int, input().split())\n  if t <= T:\n    ans = min(ans, c)\nprint(ans) if ans < 1001 else print(\"TLE\")\n", "N,T = map (int, input ().split ())\nC = 1001\nfor i in range (N):\n  c,t = map (int, input ().split ())\n  if t <= T and c < C:\n    C = c\nif C == 1001:\n  print ('TLE')\nelse:\n  print (C)", "n,T=map(int,input().split())\nans=10000\nfor i in range(n):\n  c,t=map(int,input().split())\n  if t<=T:\n    ans=min(ans,c)\n\nif ans==10000:\n  print(\"TLE\")\nelse:\n  print(ans)", "n, t = map(int, input().split())\nc_lists = []\nt_lists = []\nfor i in range(n):\n  c_i, t_i = map(int, input().split())\n  c_lists.append(c_i)\n  t_lists.append(t_i)\n\ncosts = []\nfor j in range(n):\n    if t_lists[j] <= t:\n        costs.append(c_lists[j])\nif not costs:\n    ans = 'TLE'\nelse:\n    costs.sort()\n    ans = costs[0]\nprint(ans)", "n, t = list(map(int, input().split()))\nmn = 1001\nfor i in range(n):\n    c, tn = list(map(int, input().split()))\n    if tn <= t and c < mn:\n        mn = c\nif mn == 1001:\n    print(\"TLE\")\nelse:\n    print(mn)\n", "N,T = map(int, input().split())\ntl = []\nfor i in range(N):\n    c,t = map(int, input().split())\n    if t <= T:\n        tl.append(c)\nif len(tl) == 0:\n    print('TLE')\nelse:\n    print(min(tl))", "#!/usr/bin/env python3\n\ndef main():\n    n, time = list(map(int, input().split()))\n    ans = 1001\n    for i in range(n):\n        c, t = list(map(int, input().split()))\n        if t <= time:\n            ans = min(ans, c)\n    print((ans if ans != 1001 else 'TLE'))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N,T=list(map(int,input().split()))\nans=10000\nfor _ in range(N):\n    c,t=list(map(int,input().split()))\n    if t<=T:\n        ans=min(ans,c)\nif ans==10000:\n    print(\"TLE\")\nelse:\n    print(ans)\n", "n,T = map(int, input().split())\nl = []\nfor i in range(n):\n  c,t = map(int, input().split())\n  if t <= T:\n    l.append(c)\nif l != []:\n  print(min(l))\nelse:\n  print(\"TLE\")", "ans = 1001\nN , T=list(map(int,input().split()))\nfor i in range(1,N + 1):\n    c , t=list(map(int ,input().split()))\n    if c <= ans and  t <= T:\n        ans = c\nif ans == 1001:\n    print(\"TLE\")\n    return\nprint(ans)\n", "N,T = list(map(int,input().split()))\ncost = \"TLE\"\nfor i in range(N):\n    c,t = list(map(int,input().split()))\n    if t <= T:\n        if cost == \"TLE\":\n            cost = c\n        else:\n            if cost > c:\n                cost = c\n\nprint(cost)\n", "import operator\n\nN, T = [int(i) for i in input().split()]\nct_list = [ [int(i) for i in input().split()] for j in range(N)]\n\ntmp = list([x for x in ct_list if operator.ge(T,x[1])])\n\nans = min(tmp, key=lambda x: x[0])[0] if len(tmp) != 0 else \"TLE\"\nprint(ans)\n"]