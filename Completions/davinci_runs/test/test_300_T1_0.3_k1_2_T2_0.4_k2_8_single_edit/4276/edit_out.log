2022-04-20 10:52:39.266732 num operations 1
2022-04-20 10:52:39.266749 size on input set 1
2022-04-20 10:52:39.266958 using api key sunu
2022-04-20 10:52:44.043234 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 1,
      "text": "\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 2,
      "text": "\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 3,
      "text": "\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 4,
      "text": "N, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 5,
      "text": "\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 6,
      "text": "\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 7,
      "text": "N, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    }
  ],
  "created": 1650451959,
  "object": "edit"
}
2022-04-20 10:52:44.043526 fix syntax errors 8 ["\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "N, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "N, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"]
2022-04-20 10:52:44.043565 size on output set 2
2022-04-20 10:52:44.043575 num operations 1
2022-04-20 10:52:44.043581 size on input set 1
2022-04-20 10:52:44.043732 using api key soukgp
2022-04-20 10:52:50.280841 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs)\ntimes = sorted(times)\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n"
    },
    {
      "index": 1,
      "text": "\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs)\ntimes = sorted(times)\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n"
    },
    {
      "index": 2,
      "text": "\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs)\ntimes = sorted(times)\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n"
    },
    {
      "index": 3,
      "text": "\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs)\ntimes = sorted(times)\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n"
    },
    {
      "index": 4,
      "text": "# coding: utf-8\n\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs)\ntimes = sorted(times)\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n"
    },
    {
      "index": 5,
      "text": "\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts_sorted = sorted(costs)\ntimes_sorted = sorted(times)\n\nif times_sorted[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs_sorted[0])\n"
    },
    {
      "index": 6,
      "text": "\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = list(sorted(costs))\ntimes = list(sorted(times))\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n"
    },
    {
      "index": 7,
      "text": "\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs)\ntimes = sorted(times)\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n"
    }
  ],
  "created": 1650451964,
  "object": "edit"
}
2022-04-20 10:52:50.281106 fix syntax errors 8 ['\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs)\ntimes = sorted(times)\n\nif times[0] > T:\n    print("TLE")\nelse:\n    print(costs[0])\n', '\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs)\ntimes = sorted(times)\n\nif times[0] > T:\n    print("TLE")\nelse:\n    print(costs[0])\n', '\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs)\ntimes = sorted(times)\n\nif times[0] > T:\n    print("TLE")\nelse:\n    print(costs[0])\n', '\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs)\ntimes = sorted(times)\n\nif times[0] > T:\n    print("TLE")\nelse:\n    print(costs[0])\n', '# coding: utf-8\n\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs)\ntimes = sorted(times)\n\nif times[0] > T:\n    print("TLE")\nelse:\n    print(costs[0])\n', '\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts_sorted = sorted(costs)\ntimes_sorted = sorted(times)\n\nif times_sorted[0] > T:\n    print("TLE")\nelse:\n    print(costs_sorted[0])\n', '\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = list(sorted(costs))\ntimes = list(sorted(times))\n\nif times[0] > T:\n    print("TLE")\nelse:\n    print(costs[0])\n', '\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs)\ntimes = sorted(times)\n\nif times[0] > T:\n    print("TLE")\nelse:\n    print(costs[0])\n']
2022-04-20 10:52:50.281217 size on output set 4
