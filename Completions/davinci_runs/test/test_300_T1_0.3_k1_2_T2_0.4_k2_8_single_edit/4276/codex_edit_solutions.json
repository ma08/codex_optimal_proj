["\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs)\ntimes = sorted(times)\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n", "# coding: utf-8\n\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs)\ntimes = sorted(times)\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n", "\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = list(sorted(costs))\ntimes = list(sorted(times))\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n", "\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts_sorted = sorted(costs)\ntimes_sorted = sorted(times)\n\nif times_sorted[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs_sorted[0])\n", "N, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"]