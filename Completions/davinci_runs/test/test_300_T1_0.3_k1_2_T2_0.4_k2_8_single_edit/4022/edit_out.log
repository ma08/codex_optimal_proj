2022-04-20 09:26:54.648044 num operations 1
2022-04-20 09:26:54.648063 size on input set 1
2022-04-20 09:26:54.648216 using api key jaanu
2022-04-20 09:27:00.084760 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#\n# Solution\n\nn = int(input())\n\nleft = []\nright = []\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left.append(l)\n    right.append(r)\n\nleft.sort()\nright.sort()\n\nif n == 2:\n    print(right[1] - left[0])\nelse:\n    print(max(right[n - 2] - left[0], right[n - 1] - left[1], right[n - 1] - left[0]))\n"
    },
    {
      "index": 1,
      "text": "\n# https://codeforces.com/contest/1296/problem/A\n# Solution\n\nn = int(input())\n\nleft = []\nright = []\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left.append(l)\n    right.append(r)\n\nleft.sort()\nright.sort()\n\nif n == 2:\n    print(right[1] - left[0])\nelse:\n    print(max(right[n - 2] - left[0], right[n - 1] - left[1], right[n - 1] - left[0]))\n"
    },
    {
      "index": 2,
      "text": "\n# Solution\n\nn = int(input())\n\nleft = []\nright = []\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left.append(l)\n    right.append(r)\n\nleft.sort()\nright.sort()\n\nif n == 2:\n    print(right[1] - left[0])\nelse:\n    print(max(right[n - 2] - left[0], right[n - 1] - left[1], right[n - 1] - left[0]))\n"
    },
    {
      "index": 3,
      "text": "\n# Solution\nn = int(input())\n\nleft = []\nright = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    left.append(l)\n    right.append(r)\nleft.sort()\nright.sort()\nif n == 2:\n    print(right[1] - left[0])\nelse:\n    print(max(right[n - 2] - left[0], right[n - 1] - left[1], right[n - 1] - left[0]))\n"
    },
    {
      "index": 4,
      "text": "\n# Solution\n\nn = int(input())\n\nleft = []\nright = []\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left.append(l)\n    right.append(r)\n\nleft.sort()\nright.sort()\n\nif n == 2:\n    print(right[1] - left[0])\nelse:\n    print(max(right[n - 2] - left[0], right[n - 1] - left[1], right[n - 1] - left[0]))\n"
    },
    {
      "index": 5,
      "text": "\n# Solution\n\nn = int(input())\n\nleft = []\nright = []\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left.append(l)\n    right.append(r)\n\nleft.sort()\nright.sort()\n\nif n == 2:\n    print(right[1] - left[0])\nelse:\n    print(max(right[n - 2] - left[0], right[n - 1] - left[1], right[n - 1] - left[0]))\n"
    },
    {
      "index": 6,
      "text": "\n#coding:utf-8\n# Solution\n\nn = int(input())\n\nleft = []\nright = []\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left.append(l)\n    right.append(r)\n\nleft.sort()\nright.sort()\n\nif n == 2:\n    print(right[1] - left[0])\nelse:\n    print(max(right[n - 2] - left[0], right[n - 1] - left[1], right[n - 1] - left[0]))\n"
    },
    {
      "index": 7,
      "text": "\n# Solution\nn = int(input())\n\nleft = []\nright = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    left.append(l)\n    right.append(r)\nleft.sort()\nright.sort()\nif n == 2:\n    print(right[1] - left[0])\nelse:\n    print(max(right[n - 2] - left[0], right[n - 1] - left[1], right[n - 1] - left[0]))\n"
    }
  ],
  "created": 1650446814,
  "object": "edit"
}
2022-04-20 09:27:00.085063 fix syntax errors 8 ['\n#\n# Solution\n\nn = int(input())\n\nleft = []\nright = []\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left.append(l)\n    right.append(r)\n\nleft.sort()\nright.sort()\n\nif n == 2:\n    print(right[1] - left[0])\nelse:\n    print(max(right[n - 2] - left[0], right[n - 1] - left[1], right[n - 1] - left[0]))\n', '\n# https://codeforces.com/contest/1296/problem/A\n# Solution\n\nn = int(input())\n\nleft = []\nright = []\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left.append(l)\n    right.append(r)\n\nleft.sort()\nright.sort()\n\nif n == 2:\n    print(right[1] - left[0])\nelse:\n    print(max(right[n - 2] - left[0], right[n - 1] - left[1], right[n - 1] - left[0]))\n', '\n# Solution\n\nn = int(input())\n\nleft = []\nright = []\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left.append(l)\n    right.append(r)\n\nleft.sort()\nright.sort()\n\nif n == 2:\n    print(right[1] - left[0])\nelse:\n    print(max(right[n - 2] - left[0], right[n - 1] - left[1], right[n - 1] - left[0]))\n', '\n# Solution\nn = int(input())\n\nleft = []\nright = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    left.append(l)\n    right.append(r)\nleft.sort()\nright.sort()\nif n == 2:\n    print(right[1] - left[0])\nelse:\n    print(max(right[n - 2] - left[0], right[n - 1] - left[1], right[n - 1] - left[0]))\n', '\n# Solution\n\nn = int(input())\n\nleft = []\nright = []\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left.append(l)\n    right.append(r)\n\nleft.sort()\nright.sort()\n\nif n == 2:\n    print(right[1] - left[0])\nelse:\n    print(max(right[n - 2] - left[0], right[n - 1] - left[1], right[n - 1] - left[0]))\n', '\n# Solution\n\nn = int(input())\n\nleft = []\nright = []\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left.append(l)\n    right.append(r)\n\nleft.sort()\nright.sort()\n\nif n == 2:\n    print(right[1] - left[0])\nelse:\n    print(max(right[n - 2] - left[0], right[n - 1] - left[1], right[n - 1] - left[0]))\n', '\n#coding:utf-8\n# Solution\n\nn = int(input())\n\nleft = []\nright = []\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left.append(l)\n    right.append(r)\n\nleft.sort()\nright.sort()\n\nif n == 2:\n    print(right[1] - left[0])\nelse:\n    print(max(right[n - 2] - left[0], right[n - 1] - left[1], right[n - 1] - left[0]))\n', '\n# Solution\nn = int(input())\n\nleft = []\nright = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    left.append(l)\n    right.append(r)\nleft.sort()\nright.sort()\nif n == 2:\n    print(right[1] - left[0])\nelse:\n    print(max(right[n - 2] - left[0], right[n - 1] - left[1], right[n - 1] - left[0]))\n']
2022-04-20 09:27:00.085107 size on output set 5
2022-04-20 09:27:00.085119 num operations 1
2022-04-20 09:27:00.085125 size on input set 1
2022-04-20 09:27:00.085283 using api key kouti
2022-04-20 09:27:10.651729 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    segments = []\n    for i in range(n):\n        segments.append(list(map(int, input().split())))\n    segments.sort(key=lambda x: x[0])\n    max_len = 0\n    for i in range(n):\n        if i == 0:\n            max_len = max(max_len, segments[i][1] - segments[i][0])\n        elif i == n-1:\n            max_len = max(max_len, segments[i][1] - segments[i][0])\n        else:\n            max_len = max(max_len, segments[i-1][1] - segments[i-1][0], segments[i+1][1] - segments[i+1][0])\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    segments = []\n    for i in range(n):\n        segments.append(list(map(int, input().split())))\n    segments.sort(key=lambda x: x[0])\n    max_len = 0\n    for i in range(n):\n        if i == 0:\n            max_len = max(max_len, segments[i][1] - segments[i][0])\n        elif i == n-1:\n            max_len = max(max_len, segments[i][1] - segments[i][0])\n        else:\n            max_len = max(max_len, segments[i-1][1] - segments[i-1][0], segments[i+1][1] - segments[i+1][0])\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    segments = []\n    for i in range(n):\n        segments.append(list(map(int, input().split())))\n    segments.sort(key=lambda x: x[0])\n    max_len = 0\n    for i in range(n):\n        if i == 0:\n            max_len = max(max_len, segments[i+1][1] - segments[i][0])\n        elif i == n-1:\n            max_len = max(max_len, segments[i][1] - segments[i-1][0])\n        else:\n            max_len = max(max_len, segments[i][1] - segments[i-1][0], segments[i+1][1] - segments[i][0])\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n = int(input())\n    segments = []\n    for i in range(n):\n        segments.append(list(map(int, input().split())))\n    segments.sort(key=lambda x: x[0])\n    max_len = 0\n    for i in range(n):\n        if i == 0:\n            max_len = max(max_len, segments[i][1] - segments[i][0])\n        elif i == n-1:\n            max_len = max(max_len, segments[i][1] - segments[i][0])\n        else:\n            max_len = max(max_len, segments[i][1] - segments[i][0], segments[i][1] - segments[i][0])\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    n = int(input())\n    segments = []\n    for i in range(n):\n        segments.append(list(map(int, input().split())))\n    segments.sort(key=lambda x: x[0])\n    max_len = 0\n        if i == n-1:\n            break\n    for i in range(n):\n        if i == 0:\n            max_len = max(max_len, segments[i+1][1] - segments[i][0])\n        elif i == n-1:\n            max_len = max(max_len, segments[i][1] - segments[i-1][0])\n        else:\n            max_len = max(max_len, segments[i][1] - segments[i-1][0], segments[i+1][1] - segments[i][0])\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    n = int(input())\n    segments = []\n    for i in range(n):\n        segments.append(list(map(int, input().split())))\n    segments.sort(key=lambda x: x[0])\n    max_len = 0\n    for i in range(n):\n        if i == 0:\n            max_len = max(max_len, segments[i][1] - segments[i][0])\n        elif i == n-1:\n            max_len = max(max_len, segments[i][1] - segments[i][0])\n        else:\n            max_len = max(max_len, segments[i-1][1] - segments[i-1][0], segments[i+1][1] - segments[i+1][0])\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    n = int(input())\n    segments = []\n    for i in range(n):\n        segments.append(list(map(int, input().split())))\n    segments.sort(key=lambda x: x[0])\n    max_len = 0\n    for i in range(n):\n        if i == 0:\n            max_len = max(max_len, segments[i+1][1] - segments[i][0])\n        elif i == n-1:\n            max_len = max(max_len, segments[i][1] - segments[i-1][0])\n        else:\n            max_len = max(max_len, segments[i][1] - segments[i-1][0], segments[i+1][1] - segments[i][0])\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n = int(input())\n    segments = []\n    for i in range(n):\n        segments.append(list(map(int, input().split())))\n    segments.sort(key=lambda x: x[1])\n    max_len = 0\n    for i in range(n):\n        if i == 0:\n            max_len = max(max_len, segments[i+1][1] - segments[i][0])\n        elif i == n-1:\n            max_len = max(max_len, segments[i][1] - segments[i-1][0])\n        else:\n            max_len = max(max_len, segments[i][1] - segments[i-1][0], segments[i+1][1] - segments[i][0])\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650446820,
  "object": "edit"
}
2022-04-20 09:27:10.652108 fix syntax errors 8 ["\n\ndef main():\n    n = int(input())\n    segments = []\n    for i in range(n):\n        segments.append(list(map(int, input().split())))\n    segments.sort(key=lambda x: x[0])\n    max_len = 0\n    for i in range(n):\n        if i == 0:\n            max_len = max(max_len, segments[i][1] - segments[i][0])\n        elif i == n-1:\n            max_len = max(max_len, segments[i][1] - segments[i][0])\n        else:\n            max_len = max(max_len, segments[i-1][1] - segments[i-1][0], segments[i+1][1] - segments[i+1][0])\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    segments = []\n    for i in range(n):\n        segments.append(list(map(int, input().split())))\n    segments.sort(key=lambda x: x[0])\n    max_len = 0\n    for i in range(n):\n        if i == 0:\n            max_len = max(max_len, segments[i][1] - segments[i][0])\n        elif i == n-1:\n            max_len = max(max_len, segments[i][1] - segments[i][0])\n        else:\n            max_len = max(max_len, segments[i-1][1] - segments[i-1][0], segments[i+1][1] - segments[i+1][0])\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    segments = []\n    for i in range(n):\n        segments.append(list(map(int, input().split())))\n    segments.sort(key=lambda x: x[0])\n    max_len = 0\n    for i in range(n):\n        if i == 0:\n            max_len = max(max_len, segments[i+1][1] - segments[i][0])\n        elif i == n-1:\n            max_len = max(max_len, segments[i][1] - segments[i-1][0])\n        else:\n            max_len = max(max_len, segments[i][1] - segments[i-1][0], segments[i+1][1] - segments[i][0])\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    segments = []\n    for i in range(n):\n        segments.append(list(map(int, input().split())))\n    segments.sort(key=lambda x: x[0])\n    max_len = 0\n    for i in range(n):\n        if i == 0:\n            max_len = max(max_len, segments[i][1] - segments[i][0])\n        elif i == n-1:\n            max_len = max(max_len, segments[i][1] - segments[i][0])\n        else:\n            max_len = max(max_len, segments[i][1] - segments[i][0], segments[i][1] - segments[i][0])\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    segments = []\n    for i in range(n):\n        segments.append(list(map(int, input().split())))\n    segments.sort(key=lambda x: x[0])\n    max_len = 0\n        if i == n-1:\n            break\n    for i in range(n):\n        if i == 0:\n            max_len = max(max_len, segments[i+1][1] - segments[i][0])\n        elif i == n-1:\n            max_len = max(max_len, segments[i][1] - segments[i-1][0])\n        else:\n            max_len = max(max_len, segments[i][1] - segments[i-1][0], segments[i+1][1] - segments[i][0])\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    segments = []\n    for i in range(n):\n        segments.append(list(map(int, input().split())))\n    segments.sort(key=lambda x: x[0])\n    max_len = 0\n    for i in range(n):\n        if i == 0:\n            max_len = max(max_len, segments[i][1] - segments[i][0])\n        elif i == n-1:\n            max_len = max(max_len, segments[i][1] - segments[i][0])\n        else:\n            max_len = max(max_len, segments[i-1][1] - segments[i-1][0], segments[i+1][1] - segments[i+1][0])\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    segments = []\n    for i in range(n):\n        segments.append(list(map(int, input().split())))\n    segments.sort(key=lambda x: x[0])\n    max_len = 0\n    for i in range(n):\n        if i == 0:\n            max_len = max(max_len, segments[i+1][1] - segments[i][0])\n        elif i == n-1:\n            max_len = max(max_len, segments[i][1] - segments[i-1][0])\n        else:\n            max_len = max(max_len, segments[i][1] - segments[i-1][0], segments[i+1][1] - segments[i][0])\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    segments = []\n    for i in range(n):\n        segments.append(list(map(int, input().split())))\n    segments.sort(key=lambda x: x[1])\n    max_len = 0\n    for i in range(n):\n        if i == 0:\n            max_len = max(max_len, segments[i+1][1] - segments[i][0])\n        elif i == n-1:\n            max_len = max(max_len, segments[i][1] - segments[i-1][0])\n        else:\n            max_len = max(max_len, segments[i][1] - segments[i-1][0], segments[i+1][1] - segments[i][0])\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 09:27:10.652178 size on output set 5
