2022-04-20 09:46:11.869166 num operations 1
2022-04-20 09:46:11.869189 size on input set 1
2022-04-20 09:46:11.869398 using api key sourya
2022-04-20 09:46:31.008611 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0, 0] for _ in range(n + 1)]\n    dp[1][0] = 1\n    dp[1][1] = 1\n    for i in range(2, n + 1):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n        else:\n            dp[i][0] = 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n    print(max(dp[-1]))\n    ans = \"\"\n    i = n\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans += \"L\"\n            i -= 1\n        else:\n            ans += \"R\"\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [0] + a\n    dp = [[0, 0] for _ in range(n + 1)]\n    dp[1] = [1, 1]\n    for i in range(2, n + 1):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n        else:\n            dp[i] = [1, max(dp[i - 1][1], dp[i - 1][0])]\n    print(max(dp[-1]))\n    ans = \"\"\n    i = n\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans += \"L\"\n            i -= 1\n        else:\n            ans += \"R\"\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0, 0] for _ in range(n + 1)]\n    dp[1][0] = 1\n    dp[1][1] = 1\n    for i in range(2, n + 1):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n        else:\n            dp[i][0] = 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n    print(max(dp[-1]))\n    ans = \"\"\n    i = n\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans += \"L\"\n            i -= 1\n        else:\n            ans += \"R\"\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [0] + a + [0]\n    dp = [[0, 0] for _ in range(n + 1)]\n    dp[0][0] = 1\n    dp[0][1] = 1\n    for i in range(1, n + 1):\n        if a[i + 1] > a[i]:\n            dp[i][0] = dp[i - 1][0]\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0]) + 1\n        else:\n            dp[i][0] = 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n    print(max(dp[-1]))\n    ans = \"\"\n    i = n\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans += \"L\"\n            i -= 1\n        else:\n            ans += \"R\"\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(input()) for _ in range(n)]\n    dp = [1] * n\n    for i in range(n):\n        for j in range(i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    print(max(dp))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [0] + a\n    dp = [[0, 0] for _ in range(n + 1)]  # dp[i][0] = a[i]\u3092\u6700\u5f8c\u306b\u3057\u305f\u5834\u5408\u306e\u6700\u5927\u5024, dp[i][1] = a[i]\u3092\u6700\u5f8c\u306b\u3057\u306a\u3044\u5834\u5408\u306e\u6700\u5927\u5024\n    dp[1][0] = 1\n    dp[1][1] = 1\n    for i in range(2, n + 1):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n        else:\n            dp[i][0] = 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n    print(max(dp[-1]))\n    ans = \"\"\n    i = n\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans += \"L\"\n            i -= 1\n        else:\n            ans += \"R\"\n            i -= dp[i][1]\n    print(ans[::-1])  # \u53f3\u304b\u3089\u5de6\u306b\u8fbf\u308b\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [0] + a\n    dp = [[0, 0] for _ in range(n + 1)]\n    dp[1][0] = 1\n    dp[1][1] = 1\n    for i in range(2, n + 1):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n        else:\n            dp[i][0] = 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n    print(max(dp[-1]))\n    ans = \"\"\n    i = n\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans += \"L\"\n            i -= 1\n        else:\n            ans += \"R\"\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [0] + a\n    dp = [[0, 0] for _ in range(n + 1)]\n    dp[1][0] = 1\n    dp[1][1] = 1\n    for i in range(2, n + 1):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n        else:\n            dp[i][0] = 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n    print(max(dp[-1][0], dp[-1][1]))\n    ans = \"\"\n    i = n\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans += \"L\"\n            i -= 1\n        else:\n            ans += \"R\"\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650447972,
  "object": "edit"
}
2022-04-20 09:46:31.008961 fix syntax errors 8 ['\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0, 0] for _ in range(n + 1)]\n    dp[1][0] = 1\n    dp[1][1] = 1\n    for i in range(2, n + 1):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n        else:\n            dp[i][0] = 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n    print(max(dp[-1]))\n    ans = ""\n    i = n\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans += "L"\n            i -= 1\n        else:\n            ans += "R"\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [0] + a\n    dp = [[0, 0] for _ in range(n + 1)]\n    dp[1] = [1, 1]\n    for i in range(2, n + 1):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n        else:\n            dp[i] = [1, max(dp[i - 1][1], dp[i - 1][0])]\n    print(max(dp[-1]))\n    ans = ""\n    i = n\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans += "L"\n            i -= 1\n        else:\n            ans += "R"\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0, 0] for _ in range(n + 1)]\n    dp[1][0] = 1\n    dp[1][1] = 1\n    for i in range(2, n + 1):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n        else:\n            dp[i][0] = 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n    print(max(dp[-1]))\n    ans = ""\n    i = n\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans += "L"\n            i -= 1\n        else:\n            ans += "R"\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [0] + a + [0]\n    dp = [[0, 0] for _ in range(n + 1)]\n    dp[0][0] = 1\n    dp[0][1] = 1\n    for i in range(1, n + 1):\n        if a[i + 1] > a[i]:\n            dp[i][0] = dp[i - 1][0]\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0]) + 1\n        else:\n            dp[i][0] = 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n    print(max(dp[-1]))\n    ans = ""\n    i = n\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans += "L"\n            i -= 1\n        else:\n            ans += "R"\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = [int(input()) for _ in range(n)]\n    dp = [1] * n\n    for i in range(n):\n        for j in range(i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    print(max(dp))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [0] + a\n    dp = [[0, 0] for _ in range(n + 1)]  # dp[i][0] = a[i]を最後にした場合の最大値, dp[i][1] = a[i]を最後にしない場合の最大値\n    dp[1][0] = 1\n    dp[1][1] = 1\n    for i in range(2, n + 1):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n        else:\n            dp[i][0] = 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n    print(max(dp[-1]))\n    ans = ""\n    i = n\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans += "L"\n            i -= 1\n        else:\n            ans += "R"\n            i -= dp[i][1]\n    print(ans[::-1])  # 右から左に辿る\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [0] + a\n    dp = [[0, 0] for _ in range(n + 1)]\n    dp[1][0] = 1\n    dp[1][1] = 1\n    for i in range(2, n + 1):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n        else:\n            dp[i][0] = 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n    print(max(dp[-1]))\n    ans = ""\n    i = n\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans += "L"\n            i -= 1\n        else:\n            ans += "R"\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [0] + a\n    dp = [[0, 0] for _ in range(n + 1)]\n    dp[1][0] = 1\n    dp[1][1] = 1\n    for i in range(2, n + 1):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n        else:\n            dp[i][0] = 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n    print(max(dp[-1][0], dp[-1][1]))\n    ans = ""\n    i = n\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans += "L"\n            i -= 1\n        else:\n            ans += "R"\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 09:46:31.009186 size on output set 7
2022-04-20 09:46:31.009202 num operations 1
2022-04-20 09:46:31.009208 size on input set 1
2022-04-20 09:46:31.009411 using api key soukgp
2022-04-20 09:46:39.222119 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    # assert len(a) == n\n    # assert all(1 <= x <= n for x in a)\n    # assert len(set(a)) == n\n\n    # TODO: Solve the problem\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n    assert all(1 <= x <= n for x in a)\n    assert len(set(a)) == n\n\n\n    # TODO: Solve the problem\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    # assert len(a) == n\n    # assert all(1 <= x <= n for x in a)\n    # assert len(set(a)) == n\n\n    # TODO: Solve the problem\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    # assert len(a) == n\n    # assert all(1 <= x <= n for x in a)\n    # assert len(set(a)) == n\n\n    # TODO: Solve the problem\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    # assert len(a) == n\n    # assert all(1 <= x <= n for x in a)\n    # assert len(set(a)) == n\n\n    # TODO: Solve the problem\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert(len(a) == n)\n    assert(all(1 <= x <= n for x in a))\n    assert(len(set(a)) == n)\n\n    # TODO: Solve the problem\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    # TODO: Solve the problem\n    pass\n\n    # TODO: Solve the problem\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n    assert all(1 <= x <= n for x in a)\n    assert len(set(a)) == n + 1\n\n    # TODO: Solve the problem\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650447991,
  "object": "edit"
}
2022-04-20 09:46:39.222449 fix syntax errors 8 ['\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    # assert len(a) == n\n    # assert all(1 <= x <= n for x in a)\n    # assert len(set(a)) == n\n\n    # TODO: Solve the problem\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n    assert all(1 <= x <= n for x in a)\n    assert len(set(a)) == n\n\n\n    # TODO: Solve the problem\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    # assert len(a) == n\n    # assert all(1 <= x <= n for x in a)\n    # assert len(set(a)) == n\n\n    # TODO: Solve the problem\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    # assert len(a) == n\n    # assert all(1 <= x <= n for x in a)\n    # assert len(set(a)) == n\n\n    # TODO: Solve the problem\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    # assert len(a) == n\n    # assert all(1 <= x <= n for x in a)\n    # assert len(set(a)) == n\n\n    # TODO: Solve the problem\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert(len(a) == n)\n    assert(all(1 <= x <= n for x in a))\n    assert(len(set(a)) == n)\n\n    # TODO: Solve the problem\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # TODO: Solve the problem\n    pass\n\n    # TODO: Solve the problem\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n    assert all(1 <= x <= n for x in a)\n    assert len(set(a)) == n + 1\n\n    # TODO: Solve the problem\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 09:46:39.222492 size on output set 5
