["\nimport sys\nimport math\n\ndef solve(n, k, a):\n    \"\"\"\n    >>> solve(6, 11, [45, 1, 10, 12, 11, 7])\n    7\n    >>> solve(4, 2, [2, 78, 4, 10])\n    12\n    >>> solve(5, 2, [3, 7, 19, 3, 3])\n    0\n    \"\"\"\n    # TODO: implement this function\n    return 0\n\n\nif __name__ == '__main__':\n    n, k = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    print(solve(n, k, a))\n", "\ndef main():\n    n, k = map(int, raw_input().split())\n    a = list(map(int, raw_input().split()))\n    ans = 0\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                if (a[i] * (10 ** len(str(a[j]))) + a[j]) % k == 0:\n                    ans += 1\n    print ans\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\nimport math\n\ndef solve(n, k, a):\n    \"\"\"\n    >>> solve(6, 11, [45, 1, 10, 12, 11, 7])\n    7\n    >>> solve(4, 2, [2, 78, 4, 10])\n    12\n    >>> solve(5, 2, [3, 7, 19, 3, 3])\n    0\n    \"\"\"\n    return 0\n\n\nif __name__ == '__main__':\n    n, k = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    print(solve(n, k, a))\n", "\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                if (a[i] * (10 ** len(str(a[j]))) + a[j]) % k == 0: # str(a[j])\u3067a[j]\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\u3057\u3066\u3001len\u3067\u9577\u3055\u3092\u53d6\u5f97\u3002\n                    ans += 1\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split())\n    for i in range(n):\n        for j in range(i+1, n):\n            if a[i] > a[j]:\n                a[i], a[j] = a[j], a[i]\n    print(a)\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                if (a[i] * (10 ** len(str(a[j]))) + a[j]) % k == 0:\n                    ans += 1\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        if a[i] % k == 0:\n            ans += 1\n        for j in range(i + 1, n):\n            if (a[i] * (10 ** len(str(a[j]))) + a[j]) % k == 0:\n                ans += 1\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef solve(n, k, a):\n    \"\"\"\n    >>> solve(6, 11, [45, 1, 10, 12, 11, 7]) # doctest: +NORMALIZE_WHITESPACE\n    7\n    >>> solve(4, 2, [2, 78, 4, 10]) # doctest: +NORMALIZE_WHITESPACE\n    12\n    >>> solve(5, 2, [3, 7, 19, 3, 3]) # doctest: +NORMALIZE_WHITESPACE\n    0\n    \"\"\"\n    # TODO: implement this function\n    return 0\n\n\nif __name__ == '__main__':\n    n, k = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    print(solve(n, k, a))\n", "import sys\nimport math\n\ndef solve(n, k, a):\n    \"\"\"\n    >>> solve(6, 11, [45, 1, 10, 12, 11, 7])\n    7\n    >>> solve(4, 2, [2, 78, 4, 10])\n    12\n    >>> solve(5, 2, [3, 7, 19, 3, 3])\n    0\n    \"\"\"\n    # TODO: implement this function\n    return 42\n\n\nif __name__ == '__main__':\n    n, k = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    print(solve(n, k, a))\n", "\nimport sys\n\ndef solve(n, k, a):\n    \"\"\"\n    >>> solve(6, 11, [45, 1, 10, 12, 11, 7])\n    7\n    >>> solve(4, 2, [2, 78, 4, 10]) 12\n    >>> solve(5, 2, [3, 7, 19, 3, 3])\n    0\n    \"\"\"\n    # TODO: implement this function\n    return 0\n\n\nif __name__ == '__main__':\n    n, k = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    print(solve(n, k, a))\n"]