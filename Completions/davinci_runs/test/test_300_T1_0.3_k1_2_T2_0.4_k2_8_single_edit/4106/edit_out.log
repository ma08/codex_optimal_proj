2022-04-20 09:53:48.463783 num operations 1
2022-04-20 09:53:48.463803 size on input set 1
2022-04-20 09:53:48.463993 using api key derek
2022-04-20 09:53:48.618274 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 09:53:50.120167 using api key kouti
2022-04-20 09:54:01.173636 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [[0]*(x+1) for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            dp[i][j] = dp[i-1][j]\n            if i >= k:\n                dp[i][j] = max(dp[i][j], dp[i-k][j-1] + a[i-1])\n    print(dp[n][x])\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [[0]*(x+1) for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            dp[i][j] = dp[i-1][j]\n            if i >= k:\n                dp[i][j] = max(dp[i][j], dp[i-k][j-1] + a[i-1])\n    print(dp[n][x])\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [[0]*(x+1) for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            dp[i][j] = dp[i-1][j]\n            if i >= k:\n                dp[i][j] = max(dp[i][j], dp[i-k][j-1] + a[i-1])\n    print(dp[n][x])\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))[::-1]\n    dp = [[0]*(k+1) for _ in range(n+1)]\n    for i in range(1, k+1):\n        dp[0][i] = -1\n    for i in range(1, n+1):\n        for j in range(1, k+1):\n            if j >= a[i-1]:\n                dp[i][j] = max(dp[i-1][j], dp[i-1][j-a[i-1]] + a[i-1])\n            else:\n                dp[i][j] = dp[i-1][j]\n    print(dp[n][k])\n\nmain()\n"
    },
    {
      "index": 4,
      "text": "\ndef main():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [[0]*(x+1) for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            dp[i][j] = dp[i-1][j]\n            if i >= k:\n                dp[i][j] = max(dp[i][j], dp[i-k][j-1] + a[i-1])\n    print(dp[n][x])\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    n, k, x = map(int, raw_input().split())\n    a = list(map(int, raw_input().split()))\n    dp = [[0]*(x+1) for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            dp[i][j] = dp[i-1][j]\n            if i >= k:\n                dp[i][j] = max(dp[i][j], dp[i-k][j-1] + a[i-1])\n    print(dp[n][x])\n\nmain()\n"
    },
    {
      "index": 6,
      "text": "\ndef main():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [[0]*(x+1) for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            dp[i][j] = dp[i-1][j]\n            if i >= k:\n                dp[i][j] = max(dp[i][j], dp[i-k][j-1] + a[i-1])\n    print(dp[n][x])\n\nmain()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [[0]*(x+1) for _ in range(n+1)]  # dp[i][j] = i\u756a\u76ee\u307e\u3067\u306e\u8377\u7269\u3092j\u500b\u9078\u3093\u3060\u6642\u306e\u4fa1\u5024\u306e\u6700\u5927\u5024\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            dp[i][j] = dp[i-1][j]\n            if i >= k:\n                dp[i][j] = max(dp[i][j], dp[i-k][j-1] + a[i-1])\n    print(dp[n][x])\n\nmain()\n"
    }
  ],
  "created": 1650448430,
  "object": "edit"
}
2022-04-20 09:54:01.173937 fix syntax errors 8 ['\ndef main():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [[0]*(x+1) for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            dp[i][j] = dp[i-1][j]\n            if i >= k:\n                dp[i][j] = max(dp[i][j], dp[i-k][j-1] + a[i-1])\n    print(dp[n][x])\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [[0]*(x+1) for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            dp[i][j] = dp[i-1][j]\n            if i >= k:\n                dp[i][j] = max(dp[i][j], dp[i-k][j-1] + a[i-1])\n    print(dp[n][x])\n\n\nif __name__ == "__main__":\n    main()\n', "\ndef main():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [[0]*(x+1) for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            dp[i][j] = dp[i-1][j]\n            if i >= k:\n                dp[i][j] = max(dp[i][j], dp[i-k][j-1] + a[i-1])\n    print(dp[n][x])\n\n\nif __name__ == '__main__':\n    main()\n", '\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))[::-1]\n    dp = [[0]*(k+1) for _ in range(n+1)]\n    for i in range(1, k+1):\n        dp[0][i] = -1\n    for i in range(1, n+1):\n        for j in range(1, k+1):\n            if j >= a[i-1]:\n                dp[i][j] = max(dp[i-1][j], dp[i-1][j-a[i-1]] + a[i-1])\n            else:\n                dp[i][j] = dp[i-1][j]\n    print(dp[n][k])\n\nmain()\n', "\ndef main():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [[0]*(x+1) for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            dp[i][j] = dp[i-1][j]\n            if i >= k:\n                dp[i][j] = max(dp[i][j], dp[i-k][j-1] + a[i-1])\n    print(dp[n][x])\n\n\nif __name__ == '__main__':\n    main()\n", '\n\ndef main():\n    n, k, x = map(int, raw_input().split())\n    a = list(map(int, raw_input().split()))\n    dp = [[0]*(x+1) for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            dp[i][j] = dp[i-1][j]\n            if i >= k:\n                dp[i][j] = max(dp[i][j], dp[i-k][j-1] + a[i-1])\n    print(dp[n][x])\n\nmain()\n', '\ndef main():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [[0]*(x+1) for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            dp[i][j] = dp[i-1][j]\n            if i >= k:\n                dp[i][j] = max(dp[i][j], dp[i-k][j-1] + a[i-1])\n    print(dp[n][x])\n\nmain()\n', '\n\ndef main():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [[0]*(x+1) for _ in range(n+1)]  # dp[i][j] = i番目までの荷物をj個選んだ時の価値の最大値\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            dp[i][j] = dp[i-1][j]\n            if i >= k:\n                dp[i][j] = max(dp[i][j], dp[i-k][j-1] + a[i-1])\n    print(dp[n][x])\n\nmain()\n']
2022-04-20 09:54:01.173997 size on output set 6
2022-04-20 09:54:01.174009 num operations 1
2022-04-20 09:54:01.174016 size on input set 1
2022-04-20 09:54:01.174200 using api key sourya
2022-04-20 09:54:13.585560 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\n    exit()\n\ndp = [[0] * (x + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if j < k:\n            dp[i][j] = dp[i - 1][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\n\nprint(dp[n][x])\n"
    },
    {
      "index": 1,
      "text": "\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\n    exit()\n\ndp = [[0] * (x + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if j < k:\n            dp[i][j] = dp[i - 1][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\n\nprint(dp[n][x])\n"
    },
    {
      "index": 2,
      "text": "\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [[0] * (x + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if j < k:\n            dp[i][j] = dp[i - 1][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\n\nprint(dp[n][x])\n"
    },
    {
      "index": 3,
      "text": "# coding: utf-8\n\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\n    exit()\n\ndp = [[0] * (x + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if j < k:\n            dp[i][j] = dp[i - 1][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\n\nprint(dp[n][x])\n"
    },
    {
      "index": 4,
      "text": "\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\n    exit()\n\ndp = [[0] * (x + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if j < k:\n            dp[i][j] = dp[i - 1][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\n\nprint(dp[n][x])\n"
    },
    {
      "index": 5,
      "text": "\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\n    exit()\n\ndp = [[0] * (x + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if j < k:\n            dp[i][j] = dp[i - 1][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\n\nprint(dp[n][x])\n"
    },
    {
      "index": 6,
      "text": "import sys\nsys.setrecursionlimit(10**7)\n\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [[-1] * (x + 1) for _ in range(n + 1)]\n\n# dp[i][j] = i\u756a\u76ee\u307e\u3067\u306e\u82b1\u3092\u4f7f\u3063\u3066\u3001j\u672c\u306e\u82b1\u3092\u4f5c\u308b\u6642\u306e\u6700\u5927\u5024\ndef solve(i, j):\n    if j < 0:\n        return -1\n    if dp[i][j] != -1:\n        return dp[i][j]\n    if i == 0:\n        dp[i][j] = 0\n        return dp[i][j]\n    if j == 0:\n        dp[i][j] = 0\n        return dp[i][j]\n    if j < k:\n        dp[i][j] = solve(i - 1, j)\n        return dp[i][j]\n    dp[i][j] = max(solve(i - 1, j), solve(i - k, j - k) + sum(a[i - k:i]))\n    return dp[i][j]\n\nprint(solve(n, x))\n"
    },
    {
      "index": 7,
      "text": "\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nfor i in range(1, k + 1):\n    dp[i][0] = sum(a[:i])\n\ndp = [[0] * (x + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if j < k:\n            dp[i][j] = dp[i - 1][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\n\nprint(dp[n][x])\n"
    }
  ],
  "created": 1650448441,
  "object": "edit"
}
2022-04-20 09:54:13.585947 fix syntax errors 8 ['\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\n    exit()\n\ndp = [[0] * (x + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if j < k:\n            dp[i][j] = dp[i - 1][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\n\nprint(dp[n][x])\n', '\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\n    exit()\n\ndp = [[0] * (x + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if j < k:\n            dp[i][j] = dp[i - 1][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\n\nprint(dp[n][x])\n', '\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [[0] * (x + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if j < k:\n            dp[i][j] = dp[i - 1][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\n\nprint(dp[n][x])\n', '# coding: utf-8\n\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\n    exit()\n\ndp = [[0] * (x + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if j < k:\n            dp[i][j] = dp[i - 1][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\n\nprint(dp[n][x])\n', '\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\n    exit()\n\ndp = [[0] * (x + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if j < k:\n            dp[i][j] = dp[i - 1][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\n\nprint(dp[n][x])\n', '\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\n    exit()\n\ndp = [[0] * (x + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if j < k:\n            dp[i][j] = dp[i - 1][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\n\nprint(dp[n][x])\n', 'import sys\nsys.setrecursionlimit(10**7)\n\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [[-1] * (x + 1) for _ in range(n + 1)]\n\n# dp[i][j] = i番目までの花を使って、j本の花を作る時の最大値\ndef solve(i, j):\n    if j < 0:\n        return -1\n    if dp[i][j] != -1:\n        return dp[i][j]\n    if i == 0:\n        dp[i][j] = 0\n        return dp[i][j]\n    if j == 0:\n        dp[i][j] = 0\n        return dp[i][j]\n    if j < k:\n        dp[i][j] = solve(i - 1, j)\n        return dp[i][j]\n    dp[i][j] = max(solve(i - 1, j), solve(i - k, j - k) + sum(a[i - k:i]))\n    return dp[i][j]\n\nprint(solve(n, x))\n', '\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nfor i in range(1, k + 1):\n    dp[i][0] = sum(a[:i])\n\ndp = [[0] * (x + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if j < k:\n            dp[i][j] = dp[i - 1][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\n\nprint(dp[n][x])\n']
2022-04-20 09:54:13.586012 size on output set 5
