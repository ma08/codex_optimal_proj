2022-04-20 10:43:13.601944 num operations 1
2022-04-20 10:43:13.601962 size on input set 1
2022-04-20 10:43:13.602158 using api key soukgp
2022-04-20 10:43:20.479641 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\n\ndef main():\n    n = int(input())\n    points = []\n    for i in range(n):\n        points.append([float(x) for x in input().split()])\n\n    angles = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            angle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0])\n            angles.append(angle)\n\n    angles.sort()\n    angles.append(angles[0] + 2 * math.pi)\n\n    max_angle = 0\n    for i in range(n):\n        angle = angles[i + 1] - angles[i]\n        if angle > max_angle:\n            max_angle = angle\n\n    print(round(math.degrees(max_angle)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\ndef main():\n    n = int(raw_input())\n    points = []\n    for i in range(n):\n        points.append([float(x) for x in raw_input().split()])\n\n    angles = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            angle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0])\n            angles.append(angle)\n\n    angles.sort()\n    angles.append(angles[0] + 2 * math.pi)\n\n    max_angle = 0\n    for i in range(n):\n        angle = angles[i + 1] - angles[i]\n        if angle > max_angle:\n            max_angle = angle\n\n    print(math.degrees(max_angle))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport math\n\ndef main():\n    n = int(input())\n    points = []\n    for i in range(n):\n        points.append([float(x) for x in input().split()])\n\n    angles = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            angle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0])\n            angles.append(angle)\n\n    angles.sort()\n    angles.append(angles[0] + 2 * math.pi)\n\n    max_angle = 0\n    for i in range(n):\n        angle = angles[i + 1] - angles[i]\n        if angle > max_angle:\n            max_angle = angle\n\n    print(math.degrees(max_angle))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport math\n\ndef main():\n    n = int(input())\n    points = []\n    for i in range(n):\n        points.append([float(x) for x in input().split()])\n\n    angles = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            angle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0])\n            angles.append(angle)\n\n    angles.sort()\n    angles.append(angles[0] + 2 * math.pi)\n\n    max_angle = 0\n    for i in range(n):\n        angle = angles[i + 1] - angles[i]\n        if angle > max_angle:\n            max_angle = angle\n\n    print(math.degrees(max_angle))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "#!/usr/bin/env python3\n\nimport math\n\ndef main():\n    n = int(input())\n    points = []\n    for i in range(n):\n        points.append([float(x) for x in input().split()])\n\n    angles = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            angle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0])\n            angles.append(angle)\n\n    angles.sort()\n    angles.append(angles[0] + 2 * math.pi)\n\n    max_angle = 0\n    for i in range(n):\n        angle = angles[i + 1] - angles[i]\n        if angle > max_angle:\n            max_angle = angle\n\n    print(round(math.degrees(max_angle)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "#!/usr/bin/env python3\n\nimport math\n\ndef main():\n    n = int(input())\n    points = []\n    for i in range(n):\n        points.append([float(x) for x in input().split()])\n\n    angles = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            angle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0])\n            angles.append(angle)\n\n    angles.sort()\n    angles.append(angles[0] + 2 * math.pi)\n\n    max_angle = 0\n    for i in range(n):\n        angle = angles[i + 1] - angles[i]\n        if angle > max_angle:\n            max_angle = angle\n\n    print(math.degrees(max_angle))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "#!/usr/bin/env python3\n\nimport math\n\ndef main():\n    n = int(input())\n    points = []\n    for i in range(n):\n        points.append([float(x) for x in input().split()])\n\n    angles = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            angle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0])\n            angles.append(angle)\n\n    angles.sort()\n    angles.append(angles[0] + 2 * math.pi)\n\n    max_angle = 0\n    for i in range(n):\n        angle = angles[i + 1] - angles[i]\n        if angle > max_angle:\n            max_angle = angle\n\n    print(math.degrees(max_angle))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport math\n\ndef main():\n    n = int(input())\n    points = []\n    for _ in range(n):\n        points.append([float(x) for x in input().split()])\n\n    angles = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            angle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0])\n            angles.append(angle)\n\n    angles.sort()\n    angles.append(angles[0] + 2 * math.pi)\n\n    max_angle = 0\n    for i in range(n):\n        angle = angles[i + 1] - angles[i]\n        if angle > max_angle:\n            max_angle = angle\n\n    print(math.degrees(max_angle))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650451393,
  "object": "edit"
}
2022-04-20 10:43:20.479953 fix syntax errors 8 ['\nimport math\n\ndef main():\n    n = int(input())\n    points = []\n    for i in range(n):\n        points.append([float(x) for x in input().split()])\n\n    angles = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            angle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0])\n            angles.append(angle)\n\n    angles.sort()\n    angles.append(angles[0] + 2 * math.pi)\n\n    max_angle = 0\n    for i in range(n):\n        angle = angles[i + 1] - angles[i]\n        if angle > max_angle:\n            max_angle = angle\n\n    print(round(math.degrees(max_angle)))\n\nif __name__ == "__main__":\n    main()\n', '\nimport math\n\ndef main():\n    n = int(raw_input())\n    points = []\n    for i in range(n):\n        points.append([float(x) for x in raw_input().split()])\n\n    angles = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            angle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0])\n            angles.append(angle)\n\n    angles.sort()\n    angles.append(angles[0] + 2 * math.pi)\n\n    max_angle = 0\n    for i in range(n):\n        angle = angles[i + 1] - angles[i]\n        if angle > max_angle:\n            max_angle = angle\n\n    print(math.degrees(max_angle))\n\nif __name__ == "__main__":\n    main()\n', '\nimport math\n\ndef main():\n    n = int(input())\n    points = []\n    for i in range(n):\n        points.append([float(x) for x in input().split()])\n\n    angles = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            angle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0])\n            angles.append(angle)\n\n    angles.sort()\n    angles.append(angles[0] + 2 * math.pi)\n\n    max_angle = 0\n    for i in range(n):\n        angle = angles[i + 1] - angles[i]\n        if angle > max_angle:\n            max_angle = angle\n\n    print(math.degrees(max_angle))\n\nif __name__ == "__main__":\n    main()\n', '\nimport math\n\ndef main():\n    n = int(input())\n    points = []\n    for i in range(n):\n        points.append([float(x) for x in input().split()])\n\n    angles = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            angle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0])\n            angles.append(angle)\n\n    angles.sort()\n    angles.append(angles[0] + 2 * math.pi)\n\n    max_angle = 0\n    for i in range(n):\n        angle = angles[i + 1] - angles[i]\n        if angle > max_angle:\n            max_angle = angle\n\n    print(math.degrees(max_angle))\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python3\n\nimport math\n\ndef main():\n    n = int(input())\n    points = []\n    for i in range(n):\n        points.append([float(x) for x in input().split()])\n\n    angles = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            angle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0])\n            angles.append(angle)\n\n    angles.sort()\n    angles.append(angles[0] + 2 * math.pi)\n\n    max_angle = 0\n    for i in range(n):\n        angle = angles[i + 1] - angles[i]\n        if angle > max_angle:\n            max_angle = angle\n\n    print(round(math.degrees(max_angle)))\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python3\n\nimport math\n\ndef main():\n    n = int(input())\n    points = []\n    for i in range(n):\n        points.append([float(x) for x in input().split()])\n\n    angles = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            angle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0])\n            angles.append(angle)\n\n    angles.sort()\n    angles.append(angles[0] + 2 * math.pi)\n\n    max_angle = 0\n    for i in range(n):\n        angle = angles[i + 1] - angles[i]\n        if angle > max_angle:\n            max_angle = angle\n\n    print(math.degrees(max_angle))\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python3\n\nimport math\n\ndef main():\n    n = int(input())\n    points = []\n    for i in range(n):\n        points.append([float(x) for x in input().split()])\n\n    angles = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            angle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0])\n            angles.append(angle)\n\n    angles.sort()\n    angles.append(angles[0] + 2 * math.pi)\n\n    max_angle = 0\n    for i in range(n):\n        angle = angles[i + 1] - angles[i]\n        if angle > max_angle:\n            max_angle = angle\n\n    print(math.degrees(max_angle))\n\nif __name__ == "__main__":\n    main()\n', '\nimport math\n\ndef main():\n    n = int(input())\n    points = []\n    for _ in range(n):\n        points.append([float(x) for x in input().split()])\n\n    angles = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            angle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0])\n            angles.append(angle)\n\n    angles.sort()\n    angles.append(angles[0] + 2 * math.pi)\n\n    max_angle = 0\n    for i in range(n):\n        angle = angles[i + 1] - angles[i]\n        if angle > max_angle:\n            max_angle = angle\n\n    print(math.degrees(max_angle))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 10:43:20.480143 size on output set 6
