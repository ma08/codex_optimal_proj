2022-04-18 20:27:51.549931 """
Takahashi, who is a novice in competitive programming, wants to learn M algorithms.
Initially, his understanding level of each of the M algorithms is 0.
Takahashi is visiting a bookstore, where he finds N books on algorithms.
The i-th book (1\leq i\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\leq j\leq M).
There is no other way to increase the understanding levels of the algorithms.
Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.


"""
2022-04-18 20:27:51.549954 --------------------------
2022-04-18 20:29:13.110736 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn, m = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\nc = list(map(int, input().split()))\n\nx = [0] * m\nfor i in range(n):\n    for j in range(m):\n        x[j] = max(x[j], a[i][j])\n\nans = 10 ** 10\nfor i in range(n):\n    sum = 0\n    for j in range(m):\n        if a[i][j] < x[j]:\n            sum = 10 ** 10\n            break\n        sum += c[i]\n    ans = min(ans, sum)\n\nif ans == 10 ** 10:\n    print(-1)\nelse:\n    print(ans)"
    },
    {
      "finish_reason": "length",
      "index": 1,
      "logprobs": null,
      "text": "\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print(-1)\nelse:\n    print(dp[M][X])\n\n\n#%%\n\n\"\"\"\n\n\"\"\"\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print(-1)\nelse:\n    print(dp[M][X])\n\n\n#%%\n\n\"\"\"\n\n\"\"\"\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print(-1)\nelse:\n    print(dp[M][X])\n\n\n#%%\n\n\"\"\"\n\n\"\"\"\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print(-1)\nelse:\n    print(dp[M][X])\n\n\n#%%\n\n\"\"\"\n\n\"\"\"\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print(-1)\nelse:\n    print(dp[M][X])\n\n\n#%%\n\n\"\"\"\n\n\"\"\"\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print(-1)\nelse:\n    print(dp[M][X])\n\n\n#%%\n\n\"\"\"\n\n\"\"\"\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print(-1)\nelse:\n    print(dp[M][X])\n\n\n#%%\n\n\"\"\"\n\n\"\"\"\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print(-1)\nelse:\n    print(dp[M][X])\n\n\n#%%\n\n\"\"\"\n\n\"\"\"\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print(-1)\nelse:\n    print(dp[M][X])\n\n\n#%%\n\n\"\"\"\n\n\"\"\"\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print(-1)\nelse:\n    print(dp[M][X])\n\n\n#%%\n\n\"\"\"\n\n\"\"\"\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print(-1)\nelse:\n    print(dp[M][X])\n\n\n#%%\n\n\"\"\"\n\n\"\"\"\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print(-1)\nelse:\n    print(dp[M][X])\n\n\n#%%\n\n\"\"\"\n\n\"\"\"\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print(-1)\nelse:\n    print(dp[M][X])\n\n\n#%%\n\n\"\"\"\n\n\"\"\"\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print"
    }
  ],
  "created": 1650313671,
  "id": "cmpl-4ySGNMLwFl7bbYI4LUSCia75WiPWc",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-18 20:29:13.111050 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn, m = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\nc = list(map(int, input().split()))\n\nx = [0] * m\nfor i in range(n):\n    for j in range(m):\n        x[j] = max(x[j], a[i][j])\n\nans = 10 ** 10\nfor i in range(n):\n    sum = 0\n    for j in range(m):\n        if a[i][j] < x[j]:\n            sum = 10 ** 10\n            break\n        sum += c[i]\n    ans = min(ans, sum)\n\nif ans == 10 ** 10:\n    print(-1)\nelse:\n    print(ans)"
}
2022-04-18 20:29:13.111186 REASON stop
2022-04-18 20:29:13.170580 1 {
  "finish_reason": "length",
  "index": 1,
  "logprobs": null,
  "text": "\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print(-1)\nelse:\n    print(dp[M][X])\n\n\n#%%\n\n\"\"\"\n\n\"\"\"\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print(-1)\nelse:\n    print(dp[M][X])\n\n\n#%%\n\n\"\"\"\n\n\"\"\"\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print(-1)\nelse:\n    print(dp[M][X])\n\n\n#%%\n\n\"\"\"\n\n\"\"\"\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print(-1)\nelse:\n    print(dp[M][X])\n\n\n#%%\n\n\"\"\"\n\n\"\"\"\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print(-1)\nelse:\n    print(dp[M][X])\n\n\n#%%\n\n\"\"\"\n\n\"\"\"\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print(-1)\nelse:\n    print(dp[M][X])\n\n\n#%%\n\n\"\"\"\n\n\"\"\"\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print(-1)\nelse:\n    print(dp[M][X])\n\n\n#%%\n\n\"\"\"\n\n\"\"\"\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print(-1)\nelse:\n    print(dp[M][X])\n\n\n#%%\n\n\"\"\"\n\n\"\"\"\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print(-1)\nelse:\n    print(dp[M][X])\n\n\n#%%\n\n\"\"\"\n\n\"\"\"\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print(-1)\nelse:\n    print(dp[M][X])\n\n\n#%%\n\n\"\"\"\n\n\"\"\"\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print(-1)\nelse:\n    print(dp[M][X])\n\n\n#%%\n\n\"\"\"\n\n\"\"\"\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print(-1)\nelse:\n    print(dp[M][X])\n\n\n#%%\n\n\"\"\"\n\n\"\"\"\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print(-1)\nelse:\n    print(dp[M][X])\n\n\n#%%\n\n\"\"\"\n\n\"\"\"\n\n#%%\n\nN, M, X = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10**9\ndp = [[INF]*(X+1) for _ in range(M+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(M):\n        for k in range(X+1):\n            if k >= A[i][j+1]:\n                dp[j+1][k] = min(dp[j+1][k], dp[j][k-A[i][j+1]]+A[i][0])\n\nif dp[M][X] == INF:\n    print"
}
2022-04-18 20:29:13.170748 REASON length
