2022-04-20 10:41:47.824592 num operations 1
2022-04-20 10:41:47.824610 size on input set 1
2022-04-20 10:41:47.824823 using api key sunu
2022-04-20 10:41:53.635817 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().rstrip().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().rstrip().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().rstrip().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])\n"
    },
    {
      "index": 4,
      "text": "import sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().rstrip().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().rstrip().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().rstrip().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().rstrip().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])\n"
    }
  ],
  "created": 1650451307,
  "object": "edit"
}
2022-04-20 10:41:53.636128 fix syntax errors 8 ['#!/usr/bin/env python3\n\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])\n', '\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().rstrip().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])\n', '\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().rstrip().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])\n', '\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().rstrip().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])\n', 'import sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().rstrip().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])\n', '\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().rstrip().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])\n', '\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().rstrip().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])\n', '\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().rstrip().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])\n']
2022-04-20 10:41:53.636268 size on output set 3
2022-04-20 10:41:53.636281 num operations 1
2022-04-20 10:41:53.636287 size on input set 1
2022-04-20 10:41:53.636500 using api key derek
2022-04-20 10:41:53.671406 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 10:41:55.171882 using api key gabby
2022-04-20 10:42:03.848763 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\n# Read input\nn, k = map(int, sys.stdin.readline().split())\n\n# Find all positive integers that divide n\ndivisors = [i for i in range(1, n + 1) if n % i == 0]\n\n# Print the k-th smallest positive integer that divides n\nprint(divisors[-k])\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().split())\n\n# Find all positive integers that divide both a and b\ndivisors = []\nfor i in range(1, min(a, b) + 1):\n    if a % i == 0 and b % i == 0:\n        divisors.append(i)\n\n# Print the k-th largest positive integer that divides both a and b\nprint(divisors[-k])\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\na, b, k = map(int, input().split())\n\ndivisors = []\nfor i in range(1, min(a, b) + 1):\n    if a % i == 0 and b % i == 0:\n        divisors.append(i)\n\nprint(divisors[-k])\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().split())\n\n# Find all positive integers that divide both a and b\ndivisors = []\nfor i in range(1, min(a, b) + 1):\n    if a % i == 0 and b % i == 0:\n        divisors.append(i)\n\n# Print the k-th largest positive integer that divides both a and b\nprint(divisors[-k])\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\na = int(sys.stdin.readline())\nb = int(sys.stdin.readline())\nk = int(sys.stdin.readline())\n\n# Find all positive integers that divide both a and b\ndivisors = []\nfor i in range(1, min(a, b) + 1):\n    if a % i == 0 and b % i == 0:\n        divisors.append(i)\n\n# Print the k-th largest positive integer that divides both a and b\nprint(divisors[-k])\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().split())\n\n# Find all positive integers that divide both a and b\ndivisors = []\nfor i in range(1, min(a, b) + 1):\n    if a % i == 0 and b % i == 0:\n        divisors.append(i)\n\n# Print the k-th largest positive integer that divides both a and b\nprint(divisors[-k])\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().split())\n\n# Find all positive integers that divide both a and b\ndivisors = []\nfor i in range(1, min(a, b) + 1):\n    if a % i == 0 and b % i == 0:\n        divisors.append(i)\n\n# Print the k-th largest positive integer that divides both a and b\nprint(divisors[-k])\n"
    },
    {
      "index": 7,
      "text": "import sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().split())\n\n# Find all positive integers that divide both a and b.\ndivisors = []\nfor i in range(1, min(a, b) + 1):\n    if a % i == 0 and b % i == 0:\n        divisors.append(i)\n\n# Print the k-th largest positive integer that divides both a and b.\nprint(divisors[-k])\n"
    }
  ],
  "created": 1650451315,
  "object": "edit"
}
2022-04-20 10:42:03.849152 fix syntax errors 8 ['\nimport sys\n\n# Read input\nn, k = map(int, sys.stdin.readline().split())\n\n# Find all positive integers that divide n\ndivisors = [i for i in range(1, n + 1) if n % i == 0]\n\n# Print the k-th smallest positive integer that divides n\nprint(divisors[-k])\n', '\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().split())\n\n# Find all positive integers that divide both a and b\ndivisors = []\nfor i in range(1, min(a, b) + 1):\n    if a % i == 0 and b % i == 0:\n        divisors.append(i)\n\n# Print the k-th largest positive integer that divides both a and b\nprint(divisors[-k])\n', '\n\nimport sys\n\na, b, k = map(int, input().split())\n\ndivisors = []\nfor i in range(1, min(a, b) + 1):\n    if a % i == 0 and b % i == 0:\n        divisors.append(i)\n\nprint(divisors[-k])\n', '#!/usr/bin/env python3\n\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().split())\n\n# Find all positive integers that divide both a and b\ndivisors = []\nfor i in range(1, min(a, b) + 1):\n    if a % i == 0 and b % i == 0:\n        divisors.append(i)\n\n# Print the k-th largest positive integer that divides both a and b\nprint(divisors[-k])\n', '\nimport sys\n\na = int(sys.stdin.readline())\nb = int(sys.stdin.readline())\nk = int(sys.stdin.readline())\n\n# Find all positive integers that divide both a and b\ndivisors = []\nfor i in range(1, min(a, b) + 1):\n    if a % i == 0 and b % i == 0:\n        divisors.append(i)\n\n# Print the k-th largest positive integer that divides both a and b\nprint(divisors[-k])\n', '\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().split())\n\n# Find all positive integers that divide both a and b\ndivisors = []\nfor i in range(1, min(a, b) + 1):\n    if a % i == 0 and b % i == 0:\n        divisors.append(i)\n\n# Print the k-th largest positive integer that divides both a and b\nprint(divisors[-k])\n', '\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().split())\n\n# Find all positive integers that divide both a and b\ndivisors = []\nfor i in range(1, min(a, b) + 1):\n    if a % i == 0 and b % i == 0:\n        divisors.append(i)\n\n# Print the k-th largest positive integer that divides both a and b\nprint(divisors[-k])\n', 'import sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().split())\n\n# Find all positive integers that divide both a and b.\ndivisors = []\nfor i in range(1, min(a, b) + 1):\n    if a % i == 0 and b % i == 0:\n        divisors.append(i)\n\n# Print the k-th largest positive integer that divides both a and b.\nprint(divisors[-k])\n']
2022-04-20 10:42:03.849227 size on output set 6
