["\nimport sys\n\n# Read input\nn, k = map(int, sys.stdin.readline().split())\n\n# Find all positive integers that divide n\ndivisors = [i for i in range(1, n + 1) if n % i == 0]\n\n# Print the k-th smallest positive integer that divides n\nprint(divisors[-k])\n", "\n\nimport sys\n\na, b, k = map(int, input().split())\n\ndivisors = []\nfor i in range(1, min(a, b) + 1):\n    if a % i == 0 and b % i == 0:\n        divisors.append(i)\n\nprint(divisors[-k])\n", "import sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().split())\n\n# Find all positive integers that divide both a and b.\ndivisors = []\nfor i in range(1, min(a, b) + 1):\n    if a % i == 0 and b % i == 0:\n        divisors.append(i)\n\n# Print the k-th largest positive integer that divides both a and b.\nprint(divisors[-k])\n", "#!/usr/bin/env python3\n\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().split())\n\n# Find all positive integers that divide both a and b\ndivisors = []\nfor i in range(1, min(a, b) + 1):\n    if a % i == 0 and b % i == 0:\n        divisors.append(i)\n\n# Print the k-th largest positive integer that divides both a and b\nprint(divisors[-k])\n", "\nimport sys\n\na = int(sys.stdin.readline())\nb = int(sys.stdin.readline())\nk = int(sys.stdin.readline())\n\n# Find all positive integers that divide both a and b\ndivisors = []\nfor i in range(1, min(a, b) + 1):\n    if a % i == 0 and b % i == 0:\n        divisors.append(i)\n\n# Print the k-th largest positive integer that divides both a and b\nprint(divisors[-k])\n", "#!/usr/bin/env python3\n\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])\n", "\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().split())\n\n# Find all positive integers that divide both a and b\ndivisors = []\nfor i in range(1, min(a, b) + 1):\n    if a % i == 0 and b % i == 0:\n        divisors.append(i)\n\n# Print the k-th largest positive integer that divides both a and b\nprint(divisors[-k])\n", "\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().rstrip().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])\n", "import sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().rstrip().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])\n"]