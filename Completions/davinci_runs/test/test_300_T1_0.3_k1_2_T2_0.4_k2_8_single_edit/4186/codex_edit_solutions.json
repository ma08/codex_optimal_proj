["#!/usr/bin/env python3\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Create a dictionary of skills and their counts\nskills = {}\nfor i in a:\n    if i not in skills:\n        skills[i] = 1\n    else:\n        skills[i] += 1\n\n# Find the number of teams that can be formed\nnum_teams = 0\nfor i in skills:\n    num_teams += skills[i] // 2\n\n# Find the number of problems that need to be solved\nnum_problems = 0\nfor i in skills:\n    num_problems += skills[i] % 2\n\n# Print the answer\nprint(num_problems + (n // 2) - num_teams)\n", "# https://www.codechef.com/problems/CHFIDEAL\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Create a dictionary of skills and their counts\nskills = {}\nfor i in a:\n    if i not in skills:\n        skills[i] = 1\n    else:\n        skills[i] += 1\n\n# Find the number of teams that can be formed\nnum_teams = 0\nfor i in skills:\n    num_teams += skills[i] // 2\n\n# Find the number of problems that need to be solved\nnum_problems = 0\nfor i in skills:\n    num_problems += skills[i] % 2\n\n# Print the answer\nprint(num_problems + (n // 2) - num_teams)\n", "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))[:n]\n\n# Create a dictionary of numbers and their counts\nnumbers = {}\nfor num in a:\n    if num not in numbers:\n        numbers[num] = 1\n    else:\n        numbers[num] += 1\n\n# Find the number of numbers that can be formed\nnum_numbers = 0\nfor i in numbers:\n    num_numbers += numbers[i] // 2\n\n# Find the number of numbers that need to be solved\nnum_numbers = 0\nfor i in numbers:\n    num_numbers += numbers[i] % 2\n\n# Print the answer\nprint(num_numbers + (n // 2) - num_numbers)\n", "\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\na = list(map(int, input().split(' ')))\n\n# Create a dictionary of skills and their counts\nskills = {}\nfor i in a:\n    if i not in skills:\n        skills[i] = 1\n    else:\n        skills[i] += 1\n\n# Find the number of teams that can be formed\nnum_teams = 0\nfor i in skills:\n    num_teams += skills[i] // 2\n\n# Find the number of problems that need to be solved\nnum_problems = 0\nfor i in skills:\n    num_problems += skills[i] % 2\n\n# Print the answer\nprint(num_problems + (n // 2) - num_teams)\n", "\nn = int(input())\na = list(map(int, input().split()))\n\n# Create a dictionary of skills and their counts\nskills = {}\nfor i in a:\n    if i not in skills:\n        skills[i] = 1\n    else:\n        skills[i] += 1\n\n# Find the number of teams that can be formed\nnum_teams = 0\nfor i in skills:\n    num_teams += skills[i] // 2\n\n# Find the number of problems that need to be solved\nnum_problems = 0\nfor i in skills:\n    num_problems += skills[i] % 2\n\n# Print the answer\nprint(num_problems + (n // 2) - num_teams)\n", "import sys\n\ndef get_majority_element(a, left, right):\n    if left == right:\n        return -1\n    if left + 1 == right:\n        return a[left]\n    #write your code here\n    return -1\n\nif __name__ == '__main__':\n    input = sys.stdin.read()\n    n, *a = list(map(int, input.split()))\n    if get_majority_element(a, 0, n) != -1:\n        print(1)\n    else:\n        print(0)\n\n\n# n = int(input())\n# a = list(map(int, input().split()))\n\n# # Create a dictionary of skills and their counts\n# skills = {}\n# for i in a:\n#     if i not in skills:\n#         skills[i] = 1\n#     else:\n#         skills[i] += 1\n\n# # Find the number of teams that can be formed\n# num_teams = 0\n# for i in skills:\n#     num_teams += skills[i] // 2\n\n# # Find the number of problems that need to be solved\n# num_problems = 0\n# for i in skills:\n#     num_problems += skills[i] % 2\n\n# # Print the answer\n# print(num_problems + (n // 2) - num_teams)\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    while len(a) > 1:\n        diff = a[0] - a[-1]\n        if diff > 0:\n            ans += diff\n            a[-1] += diff\n        else:\n            a.pop()\n    print(ans)\n\nif __name__ == \"__main__\":\n\n    main()\n", "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))  # map(function, iterable)\n    a.sort()\n    ans = 0\n    while len(a) > 1:  # len(a) -> a\u306e\u9577\u3055\n        diff = a[0] - a[-1]  # a[0] -> a\u306e\u6700\u521d\u306e\u8981\u7d20\n        if diff > 0:\n            ans += diff\n            a[-1] += diff\n        else:\n            a.pop()\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())  # \u6570\u5217\u306e\u9577\u3055\n    a = list(map(int, input().split()))  # \u6570\u5217\n    a.sort()  # \u6607\u9806\u30bd\u30fc\u30c8\n    ans = 0  # \u5dee\u5206\u306e\u7dcf\u548c\n    while len(a) > 1:  # \u6570\u5217\u304c1\u3064\u306b\u306a\u308b\u307e\u3067\n        diff = a[0] - a[-1]  # \u5dee\u5206\n        if diff > 0:  # \u5dee\u5206\u304c\u6b63\n            ans += diff  # \u5dee\u5206\u3092\u8db3\u3059\n            a[-1] += diff  # \u5dee\u5206\u3092\u8db3\u3057\u305f\u5024\u3092\u4ee3\u5165\n        else:  # \u5dee\u5206\u304c0\n            a.pop()  # \u5dee\u5206\u304c0\u306a\u306e\u3067\u6570\u5217\u304b\u3089\u6700\u5f8c\u306e\u8981\u7d20\u3092\u524a\u9664\n    print(ans)  # \u5dee\u5206\u306e\u7dcf\u548c\u3092\u51fa\u529b\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    ans = 0\n    while len(a) > 1:\n        diff = a[0] - a[-1]\n        if diff > 0:\n            ans += diff\n            a[-1] += diff\n        else:\n            a.pop()\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\na = list(map(int, input().split()))\n\n# Create a dictionary of skills and their counts.\nskills = {}\nfor i in a:\n    if i not in skills:\n        skills[i] = 1\n    else:\n        skills[i] += 1\n\n# Find the number of teams that can be formed.\nnum_teams = 0\nfor i in skills:\n    num_teams += skills[i] // 2\n\n# Find the number of problems that need to be solved.\nnum_problems = 0\nfor i in skills:\n    num_problems += skills[i] % 2\n\n# Print the answer.\nprint(num_problems + (n // 2) - num_teams)\n", "\n\ndef main():\n    print(\"Hello\")\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    while len(a) > 1:\n        diff = a[-1] - a[0]\n        if diff > 0:\n            ans += diff\n            a[0] += diff\n        else:\n            a.pop()\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    while len(a) > 1:\n        diff = a[0] - a[-1]\n        if diff > 0:\n            ans += diff\n            a[-1] += diff\n        else:\n            a.pop()\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"]