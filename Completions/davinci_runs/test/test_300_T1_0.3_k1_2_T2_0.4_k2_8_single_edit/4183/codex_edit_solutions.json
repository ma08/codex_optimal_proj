["\n#\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    n = int(input())\n    t = [int(input()) for _ in range(n)]\n    ans = t[0]\n    for i in range(1, n):\n        ans = lcm(ans, t[i])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    N = int(input())\n    t = [int(input()) for _ in range(N)]\n    ans = t[0]\n    for i in range(1, N):\n        ans = lcm(ans, t[i])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = T[0]\n    for i in range(1, N):\n        ans = lcm(ans, T[i])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\ndef gcd(a, b):\n    while b: a, b = b, a % b\n    return a \n\ndef lcm(a, b):\n    return a * b // gcd(a, b) \n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = T[0] \n    for i in range(1, N): ans = lcm(ans, T[i])\n    print(ans) \n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = T[0]\n    for i in range(1, N):\n        ans = lcm(ans, T[i])\n    print(ans)\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]  # noqa\n    ans = T[0]\n    for i in range(1, N):\n        ans = lcm(ans, T[i])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "from fractions import gcd\n\n\ndef lcm(x, y):\n    return (x * y) // gcd(x, y)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = T[0]\n    for i in range(1, N):\n        ans = lcm(ans, T[i])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    n = int(input())\n    t = [int(input()) for _ in range(n)]\n    ans = t[0]\n    for i in range(1, n):\n        ans = lcm(ans, t[i])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    n = int(input())\n    t = [int(input()) for _ in range(n)]\n    ans = t[0]\n    for i in range(1, n):\n        ans = lcm(ans, t[i])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\ndef gcd(a, b):\n    while b:\n        a, b = b, a%b\n    return a\n\ndef lcm(a, b):\n    return a*b//gcd(a, b)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = T[0]\n    for i in range(1,N):\n        ans = lcm(ans,T[i])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    n = int(input())\n    t = [int(input()) for _ in range(n)]\n    ans = t[0]\n    for i in range(1, n):\n        ans = lcm(ans, t[i])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    n = int(input())\n    t = [int(input()) for _ in range(n)]\n    ans = t[0]\n    for i in range(1, n):\n        ans = lcm(ans, t[i])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\ndef lcm(a, b):\n    return a * b // gcd(a, b)\ndef main():\n    n = int(input())\n    t = [int(input()) for _ in range(n)]\n    ans = t[0]\n    for i in range(1, n):\n        ans = lcm(ans, t[i])\n    print(ans)\nif __name__ == '__main__':\n    main()\n"]