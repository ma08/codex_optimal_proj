["\n\ndef solve(n, arr):\n    return \"YES\"\n\nn = int(input())\narr = list(map(int, input().split()))\n\nprint(solve(n, arr))\n", "\n\ndef ravioli_sort(n, arr, k):\n    if n == 0:\n        return 0\n    if n == 1 and arr[0] == k:\n        return 1\n    if n == 1 and arr[0] != k:\n        return 0\n    if n == 2 and arr[0] == k and arr[1] == k:\n        return 1\n    if n == 2 and arr[0] == k and arr[1] != k:\n        return 1\n    if n == 2 and arr[0] != k and arr[1] == k:\n        return 1\n    if n == 2 and arr[0] != k and arr[1] != k:\n        return 0\n    if n == 3 and arr[0] == k and arr[1] == k and arr[2] == k:\n        return 1\n    if n == 3 and arr[0] == k and arr[1] == k and arr[2] != k:\n        return 1\n    if n == 3 and arr[0] == k and arr[1] != k and arr[2] == k:\n        return 1\n    if n == 3 and arr[0] != k and arr[1] == k and arr[2] == k:\n        return 1\n    if n == 3 and arr[0] == k and arr[1] != k and arr[2] != k:\n        return 1\n    if n == 3 and arr[0] != k and arr[1] == k and arr[2] != k:\n        return 1\n    if n == 3 and arr[0] != k and arr[1] != k and arr[2] == k:\n        return 1\n    if n == 3 and arr[0] != k and arr[1] != k and arr[2] != k:\n        return 0\n    if n == 4 and arr[0] == k and arr[1] == k and arr[2] == k and arr[3] == k:\n        return 1\n    if n == 4 and arr[0] == k and arr[1] == k and arr[2] == k and arr[3] != k:\n        return 1\n    if n == 4 and arr[0] == k and arr[1] == k and arr[2] != k and arr[3] == k:\n        return 1\n    if n == 4 and arr[0] == k and arr[1] != k and arr[2] == k and arr[3] == k:\n        return 1\n    if n == 4 and arr[0] != k and arr[1] == k and arr[2] == k and arr[3] == k:\n        return 1\n    if n == 4 and arr[0] == k and arr[1] == k and arr[2] != k and arr[3] != k:\n        return 1\n    if n == 4 and arr[0] == k and arr[1] != k and arr[2] == k and arr[3] != k:\n        return 1\n    if n == 4 and arr[0] == k and arr[1] != k and arr[2] != k and arr[3] == k:\n        return 1\n    if n == 4 and arr[0] != k and arr[1] == k and arr[2] == k and arr[3] != k:\n        return 1\n    if n == 4 and arr[0] != k and arr[1] == k and arr[2] != k and arr[3] == k:\n        return 1\n    if n == 4 and arr[0] != k and arr[1] != k and arr[2] == k and arr[3] == k:\n        return 1\n    if n == 4 and arr[0] == k and arr[1] != k and arr[2] != k and arr[3] != k:\n        return 1\n    if n == 4 and arr[0] != k and arr[1] == k and arr[2] != k and arr[3] != k:\n        return 1\n    if n == 4 and arr[0] != k and arr[1] != k and arr[2] == k and arr[3] != k:\n        return 1\n    if n == 4 and arr[0] != k and arr[1] != k and arr[2] != k and arr[3] == k:\n        return 1\n    if n == 4 and arr[0] != k and arr[1] != k and arr[2] != k and arr[3] != k:\n        return 0\n    if n == 5 and arr[0] == k and arr[1] == k and arr[2] == k and arr[3] == k and arr[4] == k:\n        return 1\n    if n == 5 and arr[0] == k and arr[1] == k and arr[2] == k and arr[3] == k and arr[4] != k:\n        return 1\n    if n == 5 and arr[0] == k and arr[1] == k and arr[2] == k and arr[3] != k and arr[4] == k:\n        return 1\n    if n == 5 and arr[0] == k and arr[1] == k and arr[2] != k and arr[3] == k and arr[4] == k:\n        return 1\n    if n == 5 and arr[0] == k and arr[1] != k and arr[2] == k and arr[3] == k and arr[4] == k:\n        return 1\n    if n == 5 and arr[0] != k and arr[1] == k and arr[2] == k and arr[3] == k and arr[4] == k:\n        return 1\n    if n == 5 and arr[0] == k and arr[1] == k and arr[2] == k and arr[3] != k and arr[4] != k:\n        return 1\n    if n == 5 and arr[0] == k and arr[1] == k and arr[2] != k and arr[3] == k and arr[4] != k:\n        return 1\n    if n == 5 and arr[0] == k and arr[1] != k and arr[2] == k and arr[3] == k and arr[4] != k:\n        return 1\n    if n == 5 and arr[0] != k and arr[1] == k and arr[2] == k and arr[3] == k and arr[4] != k:\n        return 1\n    if n == 5 and arr[0] == k and arr[1] == k and arr[2] != k and arr[3] != k and arr[4] == k:\n        return 1\n    if n == 5 and arr[0] == k and arr[1] != k and arr[2] == k and arr[3] != k and arr[4] == k:\n        return 1\n    if n == 5 and arr[0] != k and arr[1] == k and arr[2] == k and arr[3] != k and arr[4] == k:\n        return 1\n    if n == 5 and arr[0] == k and arr[1] != k and arr[2] != k and arr[3] == k and arr[4] == k:\n        return 1\n    if n == 5 and arr[0] != k and arr[1] == k and arr[2] != k and arr[3] == k and arr[4] == k:\n        return 1\n    if n == 5 and arr[0] != k and arr[1] != k and arr[2] == k and arr[3] == k and arr[4] == k:\n        return 1\n    if n == 5 and arr[0] == k and arr[1] == k and arr[2] != k and arr[3] != k and arr[4] != k:\n        return 1\n    if n == 5 and arr[0] == k and arr[1] != k and arr[2] == k and arr[3] != k and arr[4] != k:\n       \n\nn = int(input())\narr = list(map(int, input().split()))\n\nprint(ravioli_sort(n, arr))\n", "\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    if a[-1] - a[0] > 1:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nmain()\n", "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    if a[-1] - a[0] > 1 or a.count(a[-1]) > n // 2:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nmain()\n", "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    if a[-1] - a[0] >= 2:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nmain()\n", "\n\ndef ravioli_sort(arr, n):\n    if n == 1:\n        return \"YES\"\n    for i in range(n-1):\n        if abs(arr[i]-arr[i+1]) >= 2:\n            return \"NO\"\n    return \"YES\"\n\nn = int(input())\narr = list(map(int, input().split()))\n\nprint(ravioli_sort(arr, n))\n", "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    if a[-1] - a[0] >= 1:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nmain()\n", "\n\ndef find_max_subarray(n, arr):\n    max_sum = 0\n    for i in range(n):\n        for j in range(i, n):\n            current_sum = 0\n            for k in range(i, j+1):\n                current_sum += arr[k]\n            max_sum = max(max_sum, current_sum)\n    return max_sum\n\nn = int(input())\narr = list(map(int, input().strip().split()))\n\nprint(find_max_subarray(n, arr))\n", "\n\ndef ravioli_sort(arr):\n    for i in range(len(arr)):\n        for j in range(i+1, len(arr)):\n            if arr[i] > arr[j]:\n                arr[i], arr[j] = arr[j], arr[i]\n    return arr\n\narr = [1, 2, 3, 4, 5]\n\nprint(ravioli_sort(arr))\n", "\ndef main():\n    pass\n\nmain()\n", "\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    if a[-1] - a[0] > 1:\n        print(\"NO\")\n    else:\n        print(\"YES\")\nmain()\n", "\ndef ravioli_sort(n, arr):\n    if n == 1:\n        return \"YES\"\n    for i in range(n-1):\n        if abs(arr[i]-arr[i+1]) >= 2:\n            return \"NO\"\n    return \"YES\"\n\nn = int(input())\narr = list(map(int, input().split()))\n\nprint(ravioli_sort(n, arr))\n", "\n\ndef is_sorted(n, arr):\n    if n == 1:\n        return \"YES\"\n    for i in range(n-1):\n        if abs(arr[i]-arr[i+1]) >= 2:\n            return \"NO\"\n    return \"YES\"\n\nn = int(input())\narr = list(map(int, input().split()))\n\nprint(is_sorted(n, arr))\n", "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in raw_input().split()]\n    a.sort()\n    if a[-1] - a[0] > 1:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nmain()\n", "\n\ndef ravioli_sort(n, arr):\n    if n == 1:\n        return \"YES\"\n    for i in range(n - 1):\n        if abs(arr[i] - arr[i + 1]) >= 2:\n            return \"NO\"\n\n    return \"YES\"\n\nn = int(input())\narr = list(map(int, input().split()))\n\nprint(ravioli_sort(n, arr))\n"]