["\n# input\nn, m = map(int, input().split())\nx = list(map(int, input().split()))\n\n# sort\nx.sort()\n\n# get the median\nmedian = x[m // 2]\n\n# calculate the distance\nans = 0\nfor i in range(m):\n    ans += abs(x[i] - median)\n\nprint(ans)\n", "\n\nimport sys\n\ndef main():\n    # read input\n    n, m = map(int, input().split())\n    x = list(map(int, input().split()))[:n]\n\n    # sort the coordinates\n    x.sort()\n\n    # find the minimum number of moves required to achieve the objective\n    ans = 0\n    for i in range(1, m):\n        ans += abs(x[i] - x[i-1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # input\n    n, m = map(int, input().split())\n    x = list(map(int, input().split()))\n\n    # sort\n    x.sort()\n\n    # get the median\n    median = x[m // 2]\n\n    # calculate the distance\n    ans = 0\n    for i in range(m):\n        ans += abs(x[i] - median)\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    # read input\n    n, m = map(int, sys.stdin.readline().split())\n    x = list(map(int, sys.stdin.readline().split()))\n\n    # sort the coordinates\n    x.sort()\n\n    # find the minimum number of moves required to achieve the objective\n    ans = 0\n    for i in range(m):\n        ans += abs(x[i] - x[i-1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    # read input\n    n, m = map(int, input().split())\n    x = list(map(int, input().split()))[:m]\n\n    # sort the coordinates\n    x.sort()\n\n    # find the minimum number of moves required to achieve the objective\n    ans = 0\n    for i in range(1, m):\n        ans += abs(x[i] - x[i-1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    # read input\n    n, m = map(int, input().split())\n    x = [int(i) for i in input().split()]\n\n    # sort the coordinates\n    x.sort()\n\n    # find the minimum number of moves required to achieve the objective\n    ans = 0\n    for i in range(1, m):\n        ans += abs(x[i] - x[i-1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    # read input\n    n, m = map(int, sys.stdin.readline().split())\n    x = list(map(int, input().split()))\n\n    # sort the coordinates\n    x.sort()\n\n    # find the minimum number of moves required to achieve the objective\n    ans = 0\n    for i in range(1, m):\n        ans += abs(x[i] - x[i-1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "# input\nn, m = map(int, input().split())\nx = list(map(int, input().split()))\n\n# sort\nx.sort()\n\n# get the median\nmedian = x[m // 2]\n\n# calculate the distance\nans = 0\nfor i in range(m):\n    ans += abs(x[i] - median)\n\nprint(ans)\n\n\n# input\nn, m = map(int, input().split())\nx = list(map(int, input().split()))\n\n# sort\nx.sort()\n\n# get the median\nmedian = x[m // 2]\n\n# calculate the distance\nans = 0\nfor i in range(m):\n    ans += abs(x[i] - median)\n\nprint(ans)\n", "\n\nimport sys\n\ndef main():\n    # read input\n    n, m = map(int, input().split())\n    x = list(map(int, input().split()))[:m]\n\n    # sort the coordinates\n    x.sort()\n\n    # find the minimum number of moves required to achieve the objective\n    ans = 0\n    for i in range(1, m):\n        ans += abs(x[i] - x[i-1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    # read input\n    n, m = map(int, input().split())\n    x = list(map(int, input().split()))\n\n    # sort the coordinates\n    x.sort()\n\n    # find the minimum number of moves required to achieve the objective\n    ans = 0\n    for i in range(1, m):\n        ans += abs(x[i] - x[i-1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# input N and M\n\n# input x\nn, m = map(int, input().split())\nx = list(map(int, input().split()))\n\n# sort x\nx.sort()\n\n# get the median of x\nmedian = x[m // 2]\n\n# calculate the distance between x and median\nans = 0\nfor i in range(m):\n    ans += abs(x[i] - median)\n\nprint(ans)\n"]