["\n\ndef min_moves(arr, k):\n    arr.sort()\n    min_val = arr[0]\n    max_val = arr[-1]\n    if max_val - min_val > k:\n        return -1\n    else:\n        return max_val - min_val\n\nif __name__ == '__main__':\n    n, k = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(min_moves(arr, k))\n", "\n\ndef min_moves(arr, k):\n    pass\n\nif __name__ == '__main__':\n    n, k = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(min_moves(arr, k))\n", "\nn, k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\nmin_a = min(a)\nmax_a = max(a)\nprint(max(max_a - min_a, (max_a - 1) - (min_a + k - 1)))\n", "\nn, k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\nmin_a = min(a)\nmax_a = max(a)\n\nif min_a == max_a:\n    print(0)\n    exit()\n\nif k == 1:\n    print(0)\n    exit()\n\nif k == n:\n    print(max_a - min_a)\n    exit()\n\nif k < n:\n    if max_a - min_a > 1:\n        print(max_a - min_a)\n    else:\n        print(1)\n", "\ndef min_moves(arr, k):\n    return -1 if (max(arr) - min(arr)) >= k else max(arr) - min(arr)\n\nif __name__ == '__main__':\n    n, k = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(min_moves(arr, k))\n", "#!/usr/bin/env python3\n\nn, k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\nmin_a = min(a)\nmax_a = max(a)\n\nif min_a == max_a:\n    print(0)\n    exit()\n\nif k == 1:\n    print(0)\n    exit()\n\nif k == n:\n    print(max_a - min_a)\n    exit()\n\nif k < n:\n    if max_a - min_a > 1:\n        print(max_a - min_a)\n    else:\n        print(1)\n", "\n\ndef min_moves(arr):\n    min_val = min(arr)\n    max_val = max(arr)\n    return max_val - min_val\n\nif __name__ == '__main__':\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(min_moves(arr))\n", "import sys\n\ndef min_moves(arr, k):\n    arr.sort()\n    min_val = arr[0]\n    max_val = arr[-1]\n    if max_val - min_val >= k:\n        return -1\n    else:\n        return max_val - min_val\n\nif __name__ == '__main__':\n    n, k = map(int, sys.stdin.readline().split())\n    arr = list(map(int, sys.stdin.readline().split()))\n    print(min_moves(arr, k))\n", "\n\ndef min_moves(arr, k):\n\tarr.sort()\n\tmin_val = arr[0]\n\tmax_val = arr[-1]\n\tif max_val - min_val >= k:\n\t\treturn -1\n\telse:\n\t\treturn max_val - min_val\n\nif __name__ == '__main__':\n\tn, k = map(int, input().split())\n\tarr = list(map(int, input().split()))\n\tprint(min_moves(arr, k))\n", "\nn, k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\nmin_a = min(a)\nmax_a = max(a)\n\nif min_a == max_a:\n    print(0)\n\nif k == 1:\n    print(0)\n\nif k == n:\n    print(max_a - min_a)\n\nif k < n:\n    if max_a - min_a > 1:\n        print(max_a - min_a)\n    else:\n        print(1)\n", "\ndef min_moves(arr, k):\n    arr.sort()\n    return max(0, arr[-1] - arr[0] - 2 * k)\n\n\nif __name__ == '__main__':\n    n, k = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(min_moves(arr, k))\n", "\nn, k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\nmin_a = min(a)\nmax_a = max(a)\n\nif min_a == max_a:\n    print(0)\n    exit()\n\nif k == 1:\n    print(0)\n    exit()\n\nif k == n:\n    print(max_a - min_a)\n    exit()\n\nif k < n:\n    if max_a - min_a > 1:\n        print(max_a - min_a - 1)\n    else:\n        print(1)\n", "\n\ndef min_moves(arr, k):\n    arr.sort()\n    min_val = arr[0]\n    max_val = arr[-1]\n    if max_val - min_val >= k:\n        return -1\n    else:\n        return max_val - min_val\n\nif __name__ == '__main__':\n    n, k = map(int, input().split())\n    arr = list(map(int, input().split()))\n\n    print(min_moves(arr, k))\n"]