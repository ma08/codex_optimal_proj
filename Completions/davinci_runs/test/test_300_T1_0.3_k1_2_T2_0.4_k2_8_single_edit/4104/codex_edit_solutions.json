["\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    operands = line.split('+')\n    result = 0\n    for operand in operands:\n        operand = operand.split('-')\n        result += int(operand[0])\n        for i in range(1, len(operand)):\n            result -= int(operand[i])\n    print(result)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    expression = sys.stdin.readline().strip()\n    operands = [int(x) for x in expression.split('+')]\n    result = 0\n    for operand in operands:\n        result += operand\n    print(result)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    expression = sys.stdin.readline()\n    print(expression)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    expression = sys.stdin.readline().strip()\n    operands = [int(x) for x in expression.split('+')]  # list comprehension\n    result = 0\n    for operand in operands:\n        result += operand\n    print(result)\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    for line in sys.stdin:\n        line = line.strip()\n        operands = line.split('+')\n        result = 0\n        for operand in operands:\n            operand = operand.split('-')\n            result += int(operand[0])\n            for i in range(1, len(operand)):\n                result -= int(operand[i])\n        print(result)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    line = sys.stdin.readline().strip()\n    operands = line.split('+')\n    result = 0\n    for operand in operands:\n        operand = operand.split('-')\n        result += int(operand[0])\n        for i in range(1, len(operand)):\n            result -= int(operand[i])\n    print(result)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    expression = sys.stdin.readline().strip()\n    operands = [int(x) for x in expression.split('+')]\n    result = 0\n    for operand in operands:\n        result += operand\n    print(result)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    expression = sys.stdin.readline().strip()\n    operands = [float(x) for x in expression.split('+')]\n    result = 0\n    for operand in operands:\n        result += operand\n    print(f'{result:.2f}')\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    expression = sys.stdin.readline().strip()\n    operands = [int(x) for x in expression.split(\"+\")]\n    result = 0\n    for operand in operands:\n        result += operand\n    print(result)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    operands = line.split('+')\n    result = 0\n    for operand in operands:\n        operand = operand.split('-')\n        result += int(operand[0])\n        for i in range(1, len(operand)):\n            result -= int(operand[i])\n    print(result)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline().strip()\n    operands = line.split('+')\n    result = 0\n    for operand in operands:\n        operand = operand.split('-')\n        result += int(operand[0])\n        for i in range(1, len(operand)):\n            result -= int(operand[i])\n    print(result)\n\nif __name__ == '__main__':\n    main()\n"]