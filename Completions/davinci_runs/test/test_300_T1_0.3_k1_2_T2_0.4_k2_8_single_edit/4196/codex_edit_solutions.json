["\n\nimport math\n\ndef gcd(a, b):\n    return math.gcd(a, b)\n\ndef gcd_list(numbers):\n    return math.reduce(gcd, numbers)\n\ndef main():\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    print(gcd_list(numbers))\n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            ans = max(ans, gcd(a[i], a[j]))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "def gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            ans = max(ans, gcd(a[i], a[j]))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n#\nimport math\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            ans = max(ans, gcd(a[i], a[j]))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef gcd(a, b):\n\tif a < b:\n\t\ta, b = b, a\n\twhile b != 0:\n\t\ta, b = b, a % b\n\treturn a\n\ndef main():\n\tn = int(input())\n\ta = [int(i) for i in input().split()]\n\tans = 0\n\tfor i in range(n):\n\t\tfor j in range(i+1,n):\n\t\t\tans = max(ans, gcd(a[i], a[j]))\n\tprint(ans)\n\nif __name__ == '__main__':\n\tmain()\n", "from functools import reduce\n\nimport math\n\ndef gcd(a, b):\n    return math.gcd(a, b)\n\ndef gcd_list(numbers):\n    return reduce(gcd, numbers)\n\ndef main():\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    print(gcd_list(numbers))\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            ans = max(ans, gcd(a[i], a[j]))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    ans = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            ans = max(ans, gcd(a[i], a[j]))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom functools import reduce\nimport math\n\ndef gcd(a, b):\n    return math.gcd(a, b)\n\ndef gcd_list(numbers):\n    return reduce(gcd, numbers)\n\ndef main():\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    print(gcd_list(numbers))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport math\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()] # list comprehension\n    ans = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            ans = max(ans, gcd(a[i], a[j]))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]