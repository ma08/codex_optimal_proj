2022-04-20 09:20:36.175115 num operations 1
2022-04-20 09:20:36.175138 size on input set 1
2022-04-20 09:20:36.175335 using api key sourya
2022-04-20 09:20:53.716411 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    print(\"Hello World\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport os\nimport sys\nimport time\nimport random\nimport requests\nimport json\nimport urllib\nfrom pprint import pprint\nfrom urllib.parse import urlparse\nfrom urllib.request import urlopen\nfrom urllib.request import urlretrieve\nfrom urllib.request import Request\nfrom urllib.error import HTTPError\nfrom urllib.error import URLError\nfrom bs4 import BeautifulSoup\nfrom selenium import webdriver\nfrom selenium.webdriver.common.keys import Keys\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nfrom selenium.common.exceptions import TimeoutException\nfrom selenium.common.exceptions import NoSuchElementException\nfrom selenium.common.exceptions import StaleElementReferenceException\nfrom selenium.common.exceptions import WebDriverException\nfrom selenium.webdriver.chrome.options import Options\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities\nfrom selenium.webdriver.support.ui import Select\nfrom selenium.webdriver.common.action_chains import ActionChains\nfrom selenium.webdriver.common.keys import Keys\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nfrom selenium.common.exceptions import TimeoutException\nfrom selenium.common.exceptions import NoSuchElementException\nfrom selenium.common.exceptions import StaleElementReferenceException\nfrom selenium.common.exceptions import WebDriverException\nfrom selenium.webdriver.chrome.options import Options\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities\nfrom selenium.webdriver.support.ui import Select\nfrom selenium.webdriver.common.action_chains import ActionChains\n\n\nclass File:\n    def __init__(self):\n        pass\n\n    def write(self, file_name, data):\n        with open(file_name, 'w') as file:\n            file.write(data)\n\n    def read(self, file_name):\n        with open(file_name, 'r') as file:\n            return file.read()\n\n    def append(self, file_name, data):\n        with open(file_name, 'a') as file:\n            file.write(data)\n\n    def download(self, url, file_name):\n        urlretrieve(url, file_name)\n\n    def save_as(self, file_name):\n        pass\n\n    def open(self, file_name):\n        pass\n\n    def delete(self, file_name):\n        pass\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    print(sys.argv)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    print(\"Hello World\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport os\n\n\ndef get_file_list(path):\n    file_list = []\n    for root, dirs, files in os.walk(path):\n        for file in files:\n            file_list.append(os.path.join(root, file))\n    return file_list\n\n\ndef get_file_size(path):\n    return os.path.getsize(path)\n\n\ndef get_file_extension(path):\n    return os.path.splitext(path)[1]\n\n\ndef main():\n    file_list = get_file_list('.')\n    for file in file_list:\n        print(file, get_file_size(file), get_file_extension(file))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    print(\"Hello World\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    print('hello world')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    print(\"Hello World!\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650446436,
  "object": "edit"
}
2022-04-20 09:20:53.716771 fix syntax errors 8 ['\n\ndef main():\n    print("Hello World")\n\nif __name__ == \'__main__\':\n    main()\n', "\n\nimport os\nimport sys\nimport time\nimport random\nimport requests\nimport json\nimport urllib\nfrom pprint import pprint\nfrom urllib.parse import urlparse\nfrom urllib.request import urlopen\nfrom urllib.request import urlretrieve\nfrom urllib.request import Request\nfrom urllib.error import HTTPError\nfrom urllib.error import URLError\nfrom bs4 import BeautifulSoup\nfrom selenium import webdriver\nfrom selenium.webdriver.common.keys import Keys\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nfrom selenium.common.exceptions import TimeoutException\nfrom selenium.common.exceptions import NoSuchElementException\nfrom selenium.common.exceptions import StaleElementReferenceException\nfrom selenium.common.exceptions import WebDriverException\nfrom selenium.webdriver.chrome.options import Options\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities\nfrom selenium.webdriver.support.ui import Select\nfrom selenium.webdriver.common.action_chains import ActionChains\nfrom selenium.webdriver.common.keys import Keys\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nfrom selenium.common.exceptions import TimeoutException\nfrom selenium.common.exceptions import NoSuchElementException\nfrom selenium.common.exceptions import StaleElementReferenceException\nfrom selenium.common.exceptions import WebDriverException\nfrom selenium.webdriver.chrome.options import Options\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities\nfrom selenium.webdriver.support.ui import Select\nfrom selenium.webdriver.common.action_chains import ActionChains\n\n\nclass File:\n    def __init__(self):\n        pass\n\n    def write(self, file_name, data):\n        with open(file_name, 'w') as file:\n            file.write(data)\n\n    def read(self, file_name):\n        with open(file_name, 'r') as file:\n            return file.read()\n\n    def append(self, file_name, data):\n        with open(file_name, 'a') as file:\n            file.write(data)\n\n    def download(self, url, file_name):\n        urlretrieve(url, file_name)\n\n    def save_as(self, file_name):\n        pass\n\n    def open(self, file_name):\n        pass\n\n    def delete(self, file_name):\n        pass\n", "import sys\n\ndef main():\n    print(sys.argv)\n\nif __name__ == '__main__':\n    main()\n", '\n\ndef main():\n    print("Hello World")\n\nif __name__ == \'__main__\':\n    main()\n', "\nimport os\n\n\ndef get_file_list(path):\n    file_list = []\n    for root, dirs, files in os.walk(path):\n        for file in files:\n            file_list.append(os.path.join(root, file))\n    return file_list\n\n\ndef get_file_size(path):\n    return os.path.getsize(path)\n\n\ndef get_file_extension(path):\n    return os.path.splitext(path)[1]\n\n\ndef main():\n    file_list = get_file_list('.')\n    for file in file_list:\n        print(file, get_file_size(file), get_file_extension(file))\n\nif __name__ == '__main__':\n    main()\n", '\n\ndef main():\n    print("Hello World")\n\nif __name__ == \'__main__\':\n    main()\n', "\n\ndef main():\n    print('hello world')\n\nif __name__ == '__main__':\n    main()\n", '\n\ndef main():\n    print("Hello World!")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-20 09:20:53.716833 size on output set 6
2022-04-20 09:20:53.716845 num operations 1
2022-04-20 09:20:53.716851 size on input set 1
2022-04-20 09:20:53.717012 using api key sourya
2022-04-20 09:21:13.371266 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3, y3, x4, y4 = map(int, input().split())\n    x5, y5, x6, y6 = map(int, input().split())\n\n    if x1 <= x4 or x2 >= x3 or y1 <= y4 or y2 >= y3:\n        if x1 <= x6 or x2 >= x5 or y1 <= y6 or y2 >= y5:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3, y3, x4, y4 = map(int, input().split())\n    x5, y5, x6, y6 = map(int, input().split())\n\n    if x1 >= x4 or x2 <= x3 or y1 >= y4 or y2 <= y3:\n        if x1 >= x6 or x2 <= x5 or y1 >= y6 or y2 <= y5:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n#\n# def main():\n#     x1, y1, x2, y2 = map(int, input().split())\n#     x3, y3, x4, y4 = map(int, input().split())\n#     x5, y5, x6, y6 = map(int, input().split())\n#\n#     if x1 >= x4 or x2 <= x3 or y1 >= y4 or y2 <= y3:\n#         if x1 >= x6 or x2 <= x5 or y1 >= y6 or y2 <= y5:\n#             print(\"YES\")\n#         else:\n#             print(\"NO\")\n#     else:\n#         print(\"NO\")\n#\n# if __name__ == \"__main__\":\n#     main()\n"
    },
    {
      "index": 3,
      "text": "\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())  # \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u0430\n    x3, y3, x4, y4 = map(int, input().split())  # \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u0430\n    x5, y5, x6, y6 = map(int, input().split())  # \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u0442\u0440\u0435\u0442\u044c\u0435\u0433\u043e \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u0430\n\n    if x1 >= x4 or x2 <= x3 or y1 >= y4 or y2 <= y3:  # \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043d\u0430 \u043f\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0438 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u0430\n        if x1 >= x6 or x2 <= x5 or y1 >= y6 or y2 <= y5:  # \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043d\u0430 \u043f\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0438 \u0442\u0440\u0435\u0442\u044c\u0435\u0433\u043e \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u0430\n            print(\"YES\")  # \u0435\u0441\u043b\u0438 \u043d\u0435\u0442 \u043f\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043d\u0438\u0439, \u0432\u044b\u0432\u043e\u0434\u0438\u043c \"YES\"\n        else:  # \u0435\u0441\u043b\u0438 \u0435\u0441\u0442\u044c \u043f\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043d\u0438\u0435, \u0432\u044b\u0432\u043e\u0434\u0438\u043c \"NO\"\n            print(\"NO\")\n    else:  # \u0435\u0441\u043b\u0438 \u0435\u0441\u0442\u044c \u043f\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043d\u0438\u0435, \u0432\u044b\u0432\u043e\u0434\u0438\u043c \"NO\"\n        print(\"NO\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split()) # x1, y1, x2, y2 = (int(x) for x in input().split())\n    x3, y3, x4, y4 = map(int, input().split()) # x3, y3, x4, y4 = (int(x) for x in input().split())\n    x5, y5, x6, y6 = map(int, input().split()) # x5, y5, x6, y6 = (int(x) for x in input().split())\n\n    if x1 >= x4 or x2 <= x3 or y1 >= y4 or y2 <= y3:\n        if x1 >= x6 or x2 <= x5 or y1 >= y6 or y2 <= y5:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3, y3, x4, y4 = map(int, input().split())\n    x5, y5, x6, y6 = map(int, input().split())\n\n    if x1 > x4 or x2 < x3 or y1 > y4 or y2 < y3:\n        if x1 > x6 or x2 < x5 or y1 > y6 or y2 < y5:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\ndef main():\n    x1, y1, x2, y2 = [int(x) for x in input().split()]\n    x3, y3, x4, y4 = [int(x) for x in input().split()]\n    x5, y5, x6, y6 = [int(x) for x in input().split()]\n\n    if x1 >= x4 or x2 <= x3 or y1 >= y4 or y2 <= y3:\n        if x1 >= x6 or x2 <= x5 or y1 >= y6 or y2 <= y5:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3, y3, x4, y4 = map(int, input().split())\n    x5, y5, x6, y6 = map(int, input().split())\n\n    if (x1 >= x4 or x2 <= x3 or y1 >= y4 or y2 <= y3) and (x1 >= x6 or x2 <= x5 or y1 >= y6 or y2 <= y5):\n            print(\"YES\")\n    else:\n        print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650446453,
  "object": "edit"
}
2022-04-20 09:21:13.371733 fix syntax errors 8 ['\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3, y3, x4, y4 = map(int, input().split())\n    x5, y5, x6, y6 = map(int, input().split())\n\n    if x1 <= x4 or x2 >= x3 or y1 <= y4 or y2 >= y3:\n        if x1 <= x6 or x2 >= x5 or y1 <= y6 or y2 >= y5:\n            print("YES")\n        else:\n            print("NO")\n    else:\n        print("NO")\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3, y3, x4, y4 = map(int, input().split())\n    x5, y5, x6, y6 = map(int, input().split())\n\n    if x1 >= x4 or x2 <= x3 or y1 >= y4 or y2 <= y3:\n        if x1 >= x6 or x2 <= x5 or y1 >= y6 or y2 <= y5:\n            print("YES")\n        else:\n            print("NO")\n    else:\n        print("NO")\n\nif __name__ == "__main__":\n    main()\n', '\n#\n# def main():\n#     x1, y1, x2, y2 = map(int, input().split())\n#     x3, y3, x4, y4 = map(int, input().split())\n#     x5, y5, x6, y6 = map(int, input().split())\n#\n#     if x1 >= x4 or x2 <= x3 or y1 >= y4 or y2 <= y3:\n#         if x1 >= x6 or x2 <= x5 or y1 >= y6 or y2 <= y5:\n#             print("YES")\n#         else:\n#             print("NO")\n#     else:\n#         print("NO")\n#\n# if __name__ == "__main__":\n#     main()\n', '\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())  # считываем координаты первого прямоугольника\n    x3, y3, x4, y4 = map(int, input().split())  # считываем координаты второго прямоугольника\n    x5, y5, x6, y6 = map(int, input().split())  # считываем координаты третьего прямоугольника\n\n    if x1 >= x4 or x2 <= x3 or y1 >= y4 or y2 <= y3:  # проверяем на пересечение первого и второго прямоугольника\n        if x1 >= x6 or x2 <= x5 or y1 >= y6 or y2 <= y5:  # проверяем на пересечение первого и третьего прямоугольника\n            print("YES")  # если нет пересечений, выводим "YES"\n        else:  # если есть пересечение, выводим "NO"\n            print("NO")\n    else:  # если есть пересечение, выводим "NO"\n        print("NO")\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split()) # x1, y1, x2, y2 = (int(x) for x in input().split())\n    x3, y3, x4, y4 = map(int, input().split()) # x3, y3, x4, y4 = (int(x) for x in input().split())\n    x5, y5, x6, y6 = map(int, input().split()) # x5, y5, x6, y6 = (int(x) for x in input().split())\n\n    if x1 >= x4 or x2 <= x3 or y1 >= y4 or y2 <= y3:\n        if x1 >= x6 or x2 <= x5 or y1 >= y6 or y2 <= y5:\n            print("YES")\n        else:\n            print("NO")\n    else:\n        print("NO")\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3, y3, x4, y4 = map(int, input().split())\n    x5, y5, x6, y6 = map(int, input().split())\n\n    if x1 > x4 or x2 < x3 or y1 > y4 or y2 < y3:\n        if x1 > x6 or x2 < x5 or y1 > y6 or y2 < y5:\n            print("YES")\n        else:\n            print("NO")\n    else:\n        print("NO")\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    x1, y1, x2, y2 = [int(x) for x in input().split()]\n    x3, y3, x4, y4 = [int(x) for x in input().split()]\n    x5, y5, x6, y6 = [int(x) for x in input().split()]\n\n    if x1 >= x4 or x2 <= x3 or y1 >= y4 or y2 <= y3:\n        if x1 >= x6 or x2 <= x5 or y1 >= y6 or y2 <= y5:\n            print("YES")\n        else:\n            print("NO")\n    else:\n        print("NO")\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3, y3, x4, y4 = map(int, input().split())\n    x5, y5, x6, y6 = map(int, input().split())\n\n    if (x1 >= x4 or x2 <= x3 or y1 >= y4 or y2 <= y3) and (x1 >= x6 or x2 <= x5 or y1 >= y6 or y2 <= y5):\n            print("YES")\n    else:\n        print("NO")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 09:21:13.371837 size on output set 8
