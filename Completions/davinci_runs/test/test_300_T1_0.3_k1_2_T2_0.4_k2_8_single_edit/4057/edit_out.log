2022-04-20 09:36:56.572362 num operations 1
2022-04-20 09:36:56.572384 size on input set 1
2022-04-20 09:36:56.572596 using api key sunu
2022-04-20 09:37:45.510391 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\na.sort()\n# a = [1, 2, 4, 3, 3, 2]\n\n# a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\n\n\n# print(a)\n\npockets = []\n\nfor i in range(len(a)):\n    if i == 0:\n        pockets.append([a[i]])\n    else:\n        if a[i] == a[i-1]:\n            pockets[-1].append(a[i])\n        else:\n            pockets.append([a[i]])\n\n# print(pockets)\n\nprint(len(pockets))\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# a = [1, 2, 4, 3, 3, 2, 5, 5]\n\n# a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\n\na.sort()\n\npockets = []\n\nif len(a) > 1:\n    for i in range(len(a)):\n        if i == 0:\n            pockets.append([a[i]])\n        else:\n            if a[i] == a[i-1]:\n                pockets[-1].append(a[i])\n            else:\n                pockets.append([a[i]])\n\n    # print(pockets)\n\n    for pocket in pockets:\n        if len(pocket) == 1:\n            print(pocket[0], end=\" \")\n        else:\n            print(pocket[0], end=\" \")\n            print(pocket[-1], end=\" \")\nelse:\n    print(a[0])\n\nprint(len(pockets))\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n# a = [1, 2, 4, 3, 3, 2]\n\n# a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\n\na.sort()\n\n# print(a)\n\npockets = []\n\nfor i in range(len(a)):\n    if i == 0:\n        pockets.append([a[i]])\n    else:\n        if a[i] == a[i-1]:\n            pockets[-1].append(a[i])\n        else:\n            pockets.append([a[i]])\n\n# print(pockets)\n\nprint(len(pockets))\n"
    },
    {
      "index": 3,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n# a = [1, 2, 4, 3, 3, 2]\n# a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\n\na.sort()\n\n# print(a)\n\npockets = []\n\nfor i in range(len(a)):\n    if i == 0:\n        pockets.append([a[i]])\n    else:\n        if a[i] == a[i-1]:\n            pockets[-1].append(a[i])\n        else:\n            pockets.append([a[i]])\n\n# print(pockets)\n\nprint(len(pockets))\n"
    },
    {
      "index": 4,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# a = [1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2\n\n# a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\n\na.sort()\n\n# print(a)\n\npockets = []\n\nfor i in range(len(a)):\n    if i == 0:\n        pockets.append([a[i]])\n    else:\n        if a[i] == a[i-1]:\n            pockets[-1].append(a[i])\n        else:\n            pockets.append([a[i]])\n\n# print(pockets)\n\nprint(len(pockets))\n"
    },
    {
      "index": 5,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# a = [1, 2, 4, 3, 3, 2]\n\n# a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200]\n\na.sort()\n\n# print(a)\n\npockets = []\n\nfor i in range(len(a)):\n    if i == 0:\n        pockets.append([a[i]])\n    else:\n        if a[i] == a[i-1]:\n            pockets[-1].append(a[i])\n        else:\n            pockets.append([a[i]])\n\n# print(pockets)\n\nprint(len(pockets))\n"
    },
    {
      "index": 6,
      "text": "\n\n# n = int(input())\n# a = list(map(int, input().split()))\n\n# a = [1, 2, 4, 3, 3, 2]\n\na = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\n\na.sort()\n\n# print(a)\n\npockets = []\n\nfor i in range(len(a)):\n    if i == 0:\n        pockets.append([a[i]])\n    else:\n        if a[i] == a[i-1]:\n            pockets[-1].append(a[i])\n        else:\n            pockets.append([a[i]])\n\n# print(pockets)\n\n# print(len(pockets))\n\ndef func(pockets):\n    if len(pockets) == 0:\n        return 0\n    if len(pockets) == 1:\n        return 1\n    if len(pockets) == 2:\n        return 2\n    if len(pockets) == 3:\n        return 3\n    return func(pockets[:-1]) + func(pockets[:-2]) + func(pockets[:-3])\n\nprint(func(pockets))\n"
    },
    {
      "index": 7,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n# a = [1, 2, 4, 3, 3, 2]\n\n# a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\n\na.sort()\n\n# print(a)\n\npockets = []\n\nfor i in range(len(a)):\n    if i == 0:\n        pockets.append([a[i]])\n    else:\n        if a[i] == a[i-1]:\n            pockets[-1].append(a[i])\n        else:\n            pockets.append([a[i]])\n\n# print(pockets)\n\nprint(len(pockets))\n"
    }
  ],
  "created": 1650447416,
  "object": "edit"
}
2022-04-20 09:37:45.510819 fix syntax errors 8 ['\n\nn = int(input())\na = list(map(int, input().split()))\na.sort()\n# a = [1, 2, 4, 3, 3, 2]\n\n# a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\n\n\n# print(a)\n\npockets = []\n\nfor i in range(len(a)):\n    if i == 0:\n        pockets.append([a[i]])\n    else:\n        if a[i] == a[i-1]:\n            pockets[-1].append(a[i])\n        else:\n            pockets.append([a[i]])\n\n# print(pockets)\n\nprint(len(pockets))\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n\n# a = [1, 2, 4, 3, 3, 2, 5, 5]\n\n# a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\n\na.sort()\n\npockets = []\n\nif len(a) > 1:\n    for i in range(len(a)):\n        if i == 0:\n            pockets.append([a[i]])\n        else:\n            if a[i] == a[i-1]:\n                pockets[-1].append(a[i])\n            else:\n                pockets.append([a[i]])\n\n    # print(pockets)\n\n    for pocket in pockets:\n        if len(pocket) == 1:\n            print(pocket[0], end=" ")\n        else:\n            print(pocket[0], end=" ")\n            print(pocket[-1], end=" ")\nelse:\n    print(a[0])\n\nprint(len(pockets))\n', '\nn = int(input())\na = list(map(int, input().split()))\n\n# a = [1, 2, 4, 3, 3, 2]\n\n# a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\n\na.sort()\n\n# print(a)\n\npockets = []\n\nfor i in range(len(a)):\n    if i == 0:\n        pockets.append([a[i]])\n    else:\n        if a[i] == a[i-1]:\n            pockets[-1].append(a[i])\n        else:\n            pockets.append([a[i]])\n\n# print(pockets)\n\nprint(len(pockets))\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n# a = [1, 2, 4, 3, 3, 2]\n# a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\n\na.sort()\n\n# print(a)\n\npockets = []\n\nfor i in range(len(a)):\n    if i == 0:\n        pockets.append([a[i]])\n    else:\n        if a[i] == a[i-1]:\n            pockets[-1].append(a[i])\n        else:\n            pockets.append([a[i]])\n\n# print(pockets)\n\nprint(len(pockets))\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n\n# a = [1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2, 1, 2, 4, 3, 3, 2, 5, 3, 3, 2, 5, 2\n\n# a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\n\na.sort()\n\n# print(a)\n\npockets = []\n\nfor i in range(len(a)):\n    if i == 0:\n        pockets.append([a[i]])\n    else:\n        if a[i] == a[i-1]:\n            pockets[-1].append(a[i])\n        else:\n            pockets.append([a[i]])\n\n# print(pockets)\n\nprint(len(pockets))\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n\n# a = [1, 2, 4, 3, 3, 2]\n\n# a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200]\n\na.sort()\n\n# print(a)\n\npockets = []\n\nfor i in range(len(a)):\n    if i == 0:\n        pockets.append([a[i]])\n    else:\n        if a[i] == a[i-1]:\n            pockets[-1].append(a[i])\n        else:\n            pockets.append([a[i]])\n\n# print(pockets)\n\nprint(len(pockets))\n', '\n\n# n = int(input())\n# a = list(map(int, input().split()))\n\n# a = [1, 2, 4, 3, 3, 2]\n\na = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\n\na.sort()\n\n# print(a)\n\npockets = []\n\nfor i in range(len(a)):\n    if i == 0:\n        pockets.append([a[i]])\n    else:\n        if a[i] == a[i-1]:\n            pockets[-1].append(a[i])\n        else:\n            pockets.append([a[i]])\n\n# print(pockets)\n\n# print(len(pockets))\n\ndef func(pockets):\n    if len(pockets) == 0:\n        return 0\n    if len(pockets) == 1:\n        return 1\n    if len(pockets) == 2:\n        return 2\n    if len(pockets) == 3:\n        return 3\n    return func(pockets[:-1]) + func(pockets[:-2]) + func(pockets[:-3])\n\nprint(func(pockets))\n', '\nn = int(input())\na = list(map(int, input().split()))\n\n# a = [1, 2, 4, 3, 3, 2]\n\n# a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\n\na.sort()\n\n# print(a)\n\npockets = []\n\nfor i in range(len(a)):\n    if i == 0:\n        pockets.append([a[i]])\n    else:\n        if a[i] == a[i-1]:\n            pockets[-1].append(a[i])\n        else:\n            pockets.append([a[i]])\n\n# print(pockets)\n\nprint(len(pockets))\n']
2022-04-20 09:37:45.510958 size on output set 7
2022-04-20 09:37:45.510972 num operations 1
2022-04-20 09:37:45.510978 size on input set 1
2022-04-20 09:37:45.511135 using api key derek
2022-04-20 09:37:45.546487 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 09:37:47.048341 using api key sunu
2022-04-20 09:37:54.481911 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())  # number of elements\n    a = list(map(int, stdin.readline().split()))  # numbers\n    a = list(set(a))  # remove duplicates\n    print(len(a))  # print number of elements\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    print(len(set(a)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    b = list(set(a))\n    print(len(b))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    print(len(set(a)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    print(len(set(a)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    a = list(set(a))\n    print(len(a))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    a = list(set(a))\n    print(len(a)) \n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    a = list(set(a))\n    print(len(a))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650447467,
  "object": "edit"
}
2022-04-20 09:37:54.482216 fix syntax errors 8 ['\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())  # number of elements\n    a = list(map(int, stdin.readline().split()))  # numbers\n    a = list(set(a))  # remove duplicates\n    print(len(a))  # print number of elements\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python3\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    print(len(set(a)))\n\nif __name__ == "__main__":\n    main()\n', '\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    b = list(set(a))\n    print(len(b))\n\nif __name__ == "__main__":\n    main()\n', '\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    print(len(set(a)))\n\nif __name__ == "__main__":\n    main()\n', '\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    print(len(set(a)))\n\nif __name__ == "__main__":\n    main()\n', '\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    a = list(set(a))\n    print(len(a))\n\nif __name__ == "__main__":\n    main()\n', '\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    a = list(set(a))\n    print(len(a)) \n\nif __name__ == "__main__":\n    main()\n', '\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    a = list(set(a))\n    print(len(a))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 09:37:54.482255 size on output set 6
