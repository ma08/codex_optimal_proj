["\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            if r < 0:\n                print(\"NO\")\n                return\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        if r < project[0] or r < 0:\n            print(\"NO\")\n            return\n        r += project[1]\n    print(\"YES\")\n\nmain()\n", "\ndef main():\n    pass\n\nmain()\n", "\n\ndef main():\n    n, r = map(int, input().split()) # n: \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u6570, r: \u521d\u671f\u8cc7\u91d1\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split()))) # i\u756a\u76ee\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8cc7\u91d1\u984d\u3068\u30ea\u30bf\u30fc\u30f3\n    projects.sort(key=lambda x: x[1]) # \u30ea\u30bf\u30fc\u30f3\u984d\u3067\u30bd\u30fc\u30c8\n    for project in projects:\n        if r >= project[0]: # \u8cc7\u91d1\u304c\u8db3\u308a\u3066\u3044\u308c\u3070\u6295\u8cc7\n            r += project[1]\n            if r < 0: # \u8cc7\u91d1\u304c\u8db3\u308a\u306a\u304f\u306a\u3063\u305f\u3089\u7d42\u4e86\n                print(\"NO\")\n                return\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        if r < project[0]:\n            print(\"NO\")\n            return\n        r += project[1]\n        if r < 0:\n            print(\"NO\")\n            return\n    print(\"YES\")\n\nmain()\n", "\n\ndef main():\n    n, r = map(int, input().split())  # type: int, int\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))  # type: list\n    projects.sort(key=lambda x: x[1])\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            if r < 0:\n                print(\"NO\")\n                return\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])\n    for i in range(len(projects)):\n        if r >= projects[i][0]:\n            r += projects[i][1]\n            if r < 0: return print(\"NO\")\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            if r < 0:\n                print(\"NO\")\n                return\n    print(\"YES\")\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n        if r < 0:\n            print(\"NO\")\n            return\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1], reverse=True)\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n    if r < 0:\n        print(\"NO\")\n        return\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])  # sort by start date\n    for project in projects:\n        if r < project[0]:\n            print(\"NO\")\n            return\n        r += project[1]\n        if r < 0:\n            print(\"NO\")\n            return\n    print(\"YES\")\n\nmain()\n", "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        if r < project[0]: \n            print(\"NO\")\n            return\n        r += project[1]\n        if r < 0:\n            print(\"NO\")\n            return\n    print(\"YES\")\n\nmain()\n", "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        if r < project[1]:\n            print(\"NO\")\n            return\n        r += project[0]\n        if r < 0:\n            print(\"NO\")\n            return\n    print(\"YES\")\n\nmain()\n", "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        if r < project[0]:\n            print(\"NO\")\n            return\n        r += project[1]\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])  # sort by start time\n    for project in projects:\n        if r < project[0]:  # start time is later than current time\n            print(\"NO\")\n            return\n        r += project[1]\n        if r < 0:  # current time is later than end time\n            print(\"NO\")\n            return\n    print(\"YES\")\n\nmain()\n"]