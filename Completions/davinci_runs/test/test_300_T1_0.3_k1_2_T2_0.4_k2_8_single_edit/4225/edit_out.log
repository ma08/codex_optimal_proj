2022-04-20 10:36:04.436138 num operations 1
2022-04-20 10:36:04.436158 size on input set 1
2022-04-20 10:36:04.436306 using api key derek
2022-04-20 10:36:04.566309 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 10:36:06.068184 using api key soukgp
2022-04-20 10:36:14.355448 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport heapq\n\ndef main():\n    a, b, c, k = map(int, input().split())\n    h = []\n    heapq.heappush(h, (-a, 1))\n    heapq.heappush(h, (-b, 0))\n    heapq.heappush(h, (-c, -1))\n    s = 0\n    for i in range(k):\n        t = heapq.heappop(h)\n        s += -t[0] * t[1]\n        heapq.heappush(h, (t[0] + 1, t[1]))\n    print(s)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport heapq\n\ndef main():\n    a, b, c, k = map(int, input().split())\n    h = []\n    heapq.heappush(h, (-a, 1))\n    heapq.heappush(h, (-b, 0))\n    heapq.heappush(h, (-c, -1))\n    s = 0\n    for i in range(k):\n        t = heapq.heappop(h)\n        s += -t[0] * t[1]\n        heapq.heappush(h, (t[0] + 1, t[1]))\n    print(s)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport heapq\n\ndef main():\n    a, b, c, k = map(int, input().split())\n    h = []\n    heapq.heappush(h, (a, 1))\n    heapq.heappush(h, (b, 0))\n    heapq.heappush(h, (c, -1))\n    s = 0\n    for i in range(k):\n        t = heapq.heappop(h)\n        s += t[0] * t[1]\n        heapq.heappush(h, (t[0] + 1, t[1]))\n    print(s)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\nimport heapq\n\ndef main():\n    a, b, c, k = map(int, input().split())\n    h = []\n    heapq.heappush(h, (-a, 1))\n    heapq.heappush(h, (-b, 0))\n    heapq.heappush(h, (-c, -1))\n    s = 0\n    for i in range(k):\n        t = heapq.heappop(h)\n        s += -t[0] * t[1]\n        heapq.heappush(h, (t[0] + 1, t[1]))\n    print(s)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport heapq\n\ndef main():\n    a, b, c, k = map(int, input().split())\n    h = []\n    heapq.heappush(h, (-a, 1))\n    heapq.heappush(h, (-b, 0))\n    heapq.heappush(h, (-c, -1))\n    sum = 0\n    for i in range(k):\n        t = heapq.heappop(h)\n        sum += -t[0] * t[1]\n        heapq.heappush(h, (t[0] + 1, t[1]))\n    print(sum)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "# -*- coding: utf-8 -*-\n\nimport heapq\n\ndef main():\n    a, b, c, k = map(int, input().split())\n    h = [(-a, 1), (-b, 0), (-c, -1)]\n    heapq.heapify(h)\n    s = 0\n    for i in range(k):\n        t = heapq.heappop(h)\n        s += -t[0] * t[1]\n        heapq.heappush(h, (t[0] + 1, t[1]))\n    print(s)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\nimport heapq\n\ndef main():\n    a, b, c, k = map(int, input().split())\n    h = []\n    heapq.heappush(h, (a, 1))\n    heapq.heappush(h, (b, 0))\n    heapq.heappush(h, (c, -1))\n    s = 0\n    for i in range(k):\n        t = heapq.heappop(h)\n        s += t[0] * t[1]\n        heapq.heappush(h, (t[0] + 1, t[1]))\n    print(s)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\nimport heapq\n\ndef main():\n    a, b, c, k = map(int, input().split())\n    h = []\n    heapq.heappush(h, (-a, 1))\n    heapq.heappush(h, (-b, 0))\n    heapq.heappush(h, (-c, -1))\n    _sum = 0\n    for i in range(k):\n        t = heapq.heappop(h)\n        _sum += -t[0] * t[1]\n        heapq.heappush(h, (t[0] + 1, t[1]))\n    print(_sum)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650450966,
  "object": "edit"
}
2022-04-20 10:36:14.355770 fix syntax errors 8 ["\n\nimport heapq\n\ndef main():\n    a, b, c, k = map(int, input().split())\n    h = []\n    heapq.heappush(h, (-a, 1))\n    heapq.heappush(h, (-b, 0))\n    heapq.heappush(h, (-c, -1))\n    s = 0\n    for i in range(k):\n        t = heapq.heappop(h)\n        s += -t[0] * t[1]\n        heapq.heappush(h, (t[0] + 1, t[1]))\n    print(s)\n\nif __name__ == '__main__':\n    main()\n", "\nimport heapq\n\ndef main():\n    a, b, c, k = map(int, input().split())\n    h = []\n    heapq.heappush(h, (-a, 1))\n    heapq.heappush(h, (-b, 0))\n    heapq.heappush(h, (-c, -1))\n    s = 0\n    for i in range(k):\n        t = heapq.heappop(h)\n        s += -t[0] * t[1]\n        heapq.heappush(h, (t[0] + 1, t[1]))\n    print(s)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport heapq\n\ndef main():\n    a, b, c, k = map(int, input().split())\n    h = []\n    heapq.heappush(h, (a, 1))\n    heapq.heappush(h, (b, 0))\n    heapq.heappush(h, (c, -1))\n    s = 0\n    for i in range(k):\n        t = heapq.heappop(h)\n        s += t[0] * t[1]\n        heapq.heappush(h, (t[0] + 1, t[1]))\n    print(s)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport heapq\n\ndef main():\n    a, b, c, k = map(int, input().split())\n    h = []\n    heapq.heappush(h, (-a, 1))\n    heapq.heappush(h, (-b, 0))\n    heapq.heappush(h, (-c, -1))\n    s = 0\n    for i in range(k):\n        t = heapq.heappop(h)\n        s += -t[0] * t[1]\n        heapq.heappush(h, (t[0] + 1, t[1]))\n    print(s)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport heapq\n\ndef main():\n    a, b, c, k = map(int, input().split())\n    h = []\n    heapq.heappush(h, (-a, 1))\n    heapq.heappush(h, (-b, 0))\n    heapq.heappush(h, (-c, -1))\n    sum = 0\n    for i in range(k):\n        t = heapq.heappop(h)\n        sum += -t[0] * t[1]\n        heapq.heappush(h, (t[0] + 1, t[1]))\n    print(sum)\n\nif __name__ == '__main__':\n    main()\n", "# -*- coding: utf-8 -*-\n\nimport heapq\n\ndef main():\n    a, b, c, k = map(int, input().split())\n    h = [(-a, 1), (-b, 0), (-c, -1)]\n    heapq.heapify(h)\n    s = 0\n    for i in range(k):\n        t = heapq.heappop(h)\n        s += -t[0] * t[1]\n        heapq.heappush(h, (t[0] + 1, t[1]))\n    print(s)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport heapq\n\ndef main():\n    a, b, c, k = map(int, input().split())\n    h = []\n    heapq.heappush(h, (a, 1))\n    heapq.heappush(h, (b, 0))\n    heapq.heappush(h, (c, -1))\n    s = 0\n    for i in range(k):\n        t = heapq.heappop(h)\n        s += t[0] * t[1]\n        heapq.heappush(h, (t[0] + 1, t[1]))\n    print(s)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport heapq\n\ndef main():\n    a, b, c, k = map(int, input().split())\n    h = []\n    heapq.heappush(h, (-a, 1))\n    heapq.heappush(h, (-b, 0))\n    heapq.heappush(h, (-c, -1))\n    _sum = 0\n    for i in range(k):\n        t = heapq.heappop(h)\n        _sum += -t[0] * t[1]\n        heapq.heappush(h, (t[0] + 1, t[1]))\n    print(_sum)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 10:36:14.355838 size on output set 6
2022-04-20 10:36:14.355852 num operations 1
2022-04-20 10:36:14.355859 size on input set 1
2022-04-20 10:36:14.356014 using api key jaanu
2022-04-20 10:36:19.088520 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\na, b, c, k = map(int, sys.stdin.readline().split())\n\nif k <= a:\n    print(k)\nelif k <= a + b:\n    print(a)\nelse:\n    print(a - (k - a - b))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\na, b, c, k = map(int, sys.stdin.readline().split())\n\nif k <= a:\n    print(k)\nelif k <= a + b:\n    print(a)\nelse:\n    print(a - (k - a - b))\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\na, b, c, k = map(int, sys.stdin.readline().split())\n\nif k <= a:\n    print(k)\nelif k <= a + b:\n    print(a)\nelse:\n    print(a - (k - a - b))\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\na, b, c, k = map(int, sys.stdin.readline().split())\n\nif k <= a:\n    print(k)\nelif k <= a + b:\n    print(a)\nelse:\n    print(a - (k - a - b))\n"
    },
    {
      "index": 4,
      "text": "import sys\na, b, c, k = map(int, sys.stdin.readline().split())\n\nif k <= a:\n    print(k)\nelif k <= a + b:\n    print(a)\nelse:\n    print(a - (k - a - b))\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\na, b, c, k = map(int, sys.stdin.readline().split())\n\nif k <= a:\n    print(k)\nelif k <= a + b:\n    print(a)\nelse:\n    print(a - (k - a - b))\n"
    },
    {
      "index": 6,
      "text": "import sys\n\na, b, c, k = map(int, sys.stdin.readline().split())\n\nif k <= a:\n    print(k)\nelif k <= a + b:\n    print(a)\nelse:\n    print(a - (k - a - b))\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\na, b, c, k = map(int, sys.stdin.readline().split())\n\nif k <= a:\n    print(k)\nelif k <= a + b:\n    print(a)\nelse:\n    print(a - (k - a - b))\n"
    }
  ],
  "created": 1650450974,
  "object": "edit"
}
2022-04-20 10:36:19.088924 fix syntax errors 8 ['import sys\n\na, b, c, k = map(int, sys.stdin.readline().split())\n\nif k <= a:\n    print(k)\nelif k <= a + b:\n    print(a)\nelse:\n    print(a - (k - a - b))\n', '\nimport sys\n\na, b, c, k = map(int, sys.stdin.readline().split())\n\nif k <= a:\n    print(k)\nelif k <= a + b:\n    print(a)\nelse:\n    print(a - (k - a - b))\n', '\nimport sys\n\na, b, c, k = map(int, sys.stdin.readline().split())\n\nif k <= a:\n    print(k)\nelif k <= a + b:\n    print(a)\nelse:\n    print(a - (k - a - b))\n', '\nimport sys\n\na, b, c, k = map(int, sys.stdin.readline().split())\n\nif k <= a:\n    print(k)\nelif k <= a + b:\n    print(a)\nelse:\n    print(a - (k - a - b))\n', 'import sys\na, b, c, k = map(int, sys.stdin.readline().split())\n\nif k <= a:\n    print(k)\nelif k <= a + b:\n    print(a)\nelse:\n    print(a - (k - a - b))\n', '\nimport sys\n\na, b, c, k = map(int, sys.stdin.readline().split())\n\nif k <= a:\n    print(k)\nelif k <= a + b:\n    print(a)\nelse:\n    print(a - (k - a - b))\n', 'import sys\n\na, b, c, k = map(int, sys.stdin.readline().split())\n\nif k <= a:\n    print(k)\nelif k <= a + b:\n    print(a)\nelse:\n    print(a - (k - a - b))\n', '\nimport sys\n\na, b, c, k = map(int, sys.stdin.readline().split())\n\nif k <= a:\n    print(k)\nelif k <= a + b:\n    print(a)\nelse:\n    print(a - (k - a - b))\n']
2022-04-20 10:36:19.088963 size on output set 3
