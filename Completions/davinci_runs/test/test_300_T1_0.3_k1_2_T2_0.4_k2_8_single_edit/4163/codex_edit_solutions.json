["\nN = int(input())\n\ndice = []\nfor i in range(N):\n    dice.append(list(map(int, input().split())))\n\nfor i in range(N - 2):\n    if dice[i][0] == dice[i][1] and dice[i + 1][0] == dice[i + 1][1] and dice[i + 2][0] == dice[i + 2][1]:\n        print('Yes')\n        exit()\nprint('No')\n", "\nprint('Hello')\n", "\nn = int(input())\ndice_list = []\n\nfor i in range(n):\n    dice_list.append(list(map(int, input().split())))\nfor i in range(n-2):\n    if dice_list[i][0] == dice_list[i][1] and dice_list[i+1][0] == dice_list[i+1][1] and dice_list[i+2][0] == dice_list[i+2][1]:\n        print(\"Yes\")\n        exit()\nprint(\"No\")\n", "\n \nn = int(input())\n\ndice_list = []\n\nfor i in range(n):\n    dice_list.append(list(map(int, input().split())))\n\nfor i in range(n-2):\n    if dice_list[i][0] == dice_list[i][1] and dice_list[i+1][0] == dice_list[i+1][1] and dice_list[i+2][0] == dice_list[i+2][1]:\n        print(\"Yes\")\n        exit()\n\nprint(\"No\")\n", "\nN = int(input())\n\ndice = []\nfor i in range(N):\n    dice.append(list(map(int, input().split())))\n\nif N >= 3:\n    for i in range(N-2):\n        if dice[i][0] == dice[i][1] and dice[i+1][0] == dice[i+1][1] and dice[i+2][0] == dice[i+2][1]:\n            print('Yes')\n            exit()\n    print('No')\nelse:\n    print('No')\n", "\n\nn = int(input())\n\ndice_list = []\n\nfor i in range(n):\nprint(dice_list)\n    dice_list.append(list(map(int, input().split())))\n\nfor i in range(n-2):\n    if dice_list[i][0] == dice_list[i][1] and dice_list[i+1][0] == dice_list[i+1][1] and dice_list[i+2][0] == dice_list[i+2][1] and dice_list[i+3][0] == dice_list[i+3][1]:\n        print(\"Yes\")\n        exit()\n\nprint(\"No\")\n", "# coding: utf-8\nimport sys\n\ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x // y))\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\nsys.setrecursionlimit(10 ** 9)\nINF = 10 ** 18\nMOD = 10 ** 9 + 7\n\n\nN = int(input())\n\ndice = []\nfor i in range(N):\n    dice.append(list(map(int, input().split())))\n\nfor i in range(N-2):\n    if dice[i][0] == dice[i][1] and dice[i+1][0] == dice[i+1][1] and dice[i+2][0] == dice[i+2][1]:\n        Yes()\n        exit()\nNo()\n", "\n\nimport sys\n\nn = int(input())\n\ndice_list = []\n\nfor i in range(n):\n    dice_list.append(list(map(int, input().split())))\n\nfor i in range(n-2):\n    if dice_list[i][0] == dice_list[i][1] and dice_list[i+1][0] == dice_list[i+1][1] and dice_list[i+2][0] == dice_list[i+2][1]:\n        print(\"Yes\")\n        sys.exit()\n\nprint(\"No\")\n", "\nn = int(input())\n\ndice_list = []\n\nfor i in range(n):\n    dice_list.append(list(map(int, input().split())))\n\nfor i in range(n-2):\n    if dice_list[i][0] == dice_list[i][1] and dice_list[i+1][0] == dice_list[i+1][1] and dice_list[i+2][0] == dice_list[i+2][1]:\n        print(\"Yes\")\n        exit()\n\nprint(\"No\")\n", "N = int(input())\n\ndice = []\nfor i in range(N):\n    dice.append(list(map(int, input().split())))\n\nfor i in range(N-2):\n    if dice[i][0] == dice[i][1] and dice[i+1][0] == dice[i+1][1] and dice[i+2][0] == dice[i+2][1]:\n        print('Yes')\n        exit()\nprint('No')\n", "\nN = int(input())\n\ndice = []\nfor i in range(N):\n    dice.append(list(map(int, input().split())))\n\nfor i in range(N-2):\n    if dice[i][0] == dice[i][1] and dice[i+1][0] == dice[i+1][1] and dice[i+2][0] == dice[i+2][1]:\n        print('Yes')\n        exit()\nprint('No')\n"]