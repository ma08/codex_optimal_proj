2022-04-20 10:27:50.630741 num operations 1
2022-04-20 10:27:50.630763 size on input set 1
2022-04-20 10:27:50.630940 using api key sunu
2022-04-20 10:28:04.452670 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    p = list(map(int, sys.stdin.readline().split()))\n    # print(N, p)\n\n    # if the number of elements that are not in the correct position is less than 2, it is possible to sort p\n    # by swapping the elements that are not in the correct position.\n    # if the number of elements that are not in the correct position is 2 or more, it is impossible to sort p\n    # by swapping the elements that are not in the correct position.\n    count = 0\n    for i in range(N):\n        if p[i] != i + 1:\n            count += 1\n    if count < 2:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    p = list(map(int, sys.stdin.readline().split()))\n    #print(N, p)\n\n    # if the number of elements that are not in the correct position is less than 2, it is possible to sort p\n    # by swapping the elements that are not in the correct position.\n    # if the number of elements that are not in the correct position is 2 or more, it is impossible to sort p\n    # by swapping the elements that are not in the correct position.\n    count = 0\n    for i in range(N):\n        if p[i] != i + 1:\n            count += 1\n    if count < 2:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    p = list(map(int, sys.stdin.readline().split()))\n    #print(N, p)\n\n    # if the number of elements that are not in the correct position is less than 2, it is possible to sort p\n    # by swapping the elements that are not in the correct position.\n    # if the number of elements that are not in the correct position is 2 or more, it is impossible to sort p\n    # by swapping the elements that are not in the correct position.\n    count = 0\n    for i in range(N):\n        if p[i] != i + 1:\n            count += 1\n    if count < 2:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    p = list(map(int, sys.stdin.readline().split()))\n    # print(N, p)\n\n    # if the number of elements that are not in the correct position is less than 2, it is possible to sort p\n    # by swapping the elements that are not in the correct position.\n    # if the number of elements that are not in the correct position is 2 or more, it is impossible to sort p\n    # by swapping the elements that are not in the correct position.\n    count = 0\n    for i in range(N):\n        if p[i] != i + 1:\n            count += 1\n    if count < 2:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\n\ndef main():\n    N, K = map(int, sys.stdin.readline().split())\n    A = list(map(int, sys.stdin.readline().split()))\n    #print(N, K, A)\n\n    # if the number of elements that are not in the correct position is less than K, it is possible to sort A\n    # by swapping the elements that are not in the correct position K times.\n    # if the number of elements that are not in the correct position is K or more, it is impossible to sort A\n    # by swapping the elements that are not in the correct position K times.\n    count = 0 # the number of elements that are not in the correct position\n    for i in range(N): # for each element in A\n        if A[i] != i + 1: # if the element is not in the correct position\n            count += 1 # increment count\n    if count <= K: # if the number of elements that are not in the correct position is less than or equal to K\n        print(\"YES\") # it is possible to sort A by swapping the elements that are not in the correct position K times\n    else: # if the number of elements that are not in the correct position is more than K\n        print(\"NO\") # it is impossible to sort A by swapping the elements that are not in the correct position K times\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    A = list(map(int, sys.stdin.readline().split()))\n    #print(N, p)\n\n    # if the number of elements that are not in the correct position is less than 2, it is possible to sort p\n    # by swapping the elements that are not in the correct position.\n    # if the number of elements that are not in the correct position is 2 or more, it is impossible to sort p\n    # by swapping the elements that are not in the correct position.\n    count = 0\n    for i in range(N):\n        if A[i] != i + 1:\n            count += 1\n    if count < 2:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    p = list(map(int, sys.stdin.readline().split()))\n    # print(N, p)\n\n    # if the number of elements that are not in the correct position is less than 2, it is possible to sort p\n    # by swapping the elements that are not in the correct position.\n    # if the number of elements that are not in the correct position is 2 or more, it is impossible to sort p\n    # by swapping the elements that are not in the correct position.\n    count = 0\n    for i in range(N):\n        if p[i] != i + 1:\n            count += 1\n    if count < 2:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    p = list(map(int, sys.stdin.readline().split()))\n    #print(N, p)\n\n    # if the number of elements that are not in the correct position is less than 2, it is possible to sort p\n    # by swapping the elements that are not in the correct position.\n    # if the number of elements that are not in the correct position is 2 or more, it is impossible to sort p\n    # by swapping the elements that are not in the correct position.\n    count = 0\n    for i in range(N):\n        if p[i] != i + 1:\n            count += 1\n    if count < 2:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650450470,
  "object": "edit"
}
2022-04-20 10:28:04.453031 fix syntax errors 8 ['\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    p = list(map(int, sys.stdin.readline().split()))\n    # print(N, p)\n\n    # if the number of elements that are not in the correct position is less than 2, it is possible to sort p\n    # by swapping the elements that are not in the correct position.\n    # if the number of elements that are not in the correct position is 2 or more, it is impossible to sort p\n    # by swapping the elements that are not in the correct position.\n    count = 0\n    for i in range(N):\n        if p[i] != i + 1:\n            count += 1\n    if count < 2:\n        print("YES")\n    else:\n        print("NO")\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    p = list(map(int, sys.stdin.readline().split()))\n    #print(N, p)\n\n    # if the number of elements that are not in the correct position is less than 2, it is possible to sort p\n    # by swapping the elements that are not in the correct position.\n    # if the number of elements that are not in the correct position is 2 or more, it is impossible to sort p\n    # by swapping the elements that are not in the correct position.\n    count = 0\n    for i in range(N):\n        if p[i] != i + 1:\n            count += 1\n    if count < 2:\n        print("YES")\n    else:\n        print("NO")\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    p = list(map(int, sys.stdin.readline().split()))\n    #print(N, p)\n\n    # if the number of elements that are not in the correct position is less than 2, it is possible to sort p\n    # by swapping the elements that are not in the correct position.\n    # if the number of elements that are not in the correct position is 2 or more, it is impossible to sort p\n    # by swapping the elements that are not in the correct position.\n    count = 0\n    for i in range(N):\n        if p[i] != i + 1:\n            count += 1\n    if count < 2:\n        print("YES")\n    else:\n        print("NO")\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    p = list(map(int, sys.stdin.readline().split()))\n    # print(N, p)\n\n    # if the number of elements that are not in the correct position is less than 2, it is possible to sort p\n    # by swapping the elements that are not in the correct position.\n    # if the number of elements that are not in the correct position is 2 or more, it is impossible to sort p\n    # by swapping the elements that are not in the correct position.\n    count = 0\n    for i in range(N):\n        if p[i] != i + 1:\n            count += 1\n    if count < 2:\n        print("YES")\n    else:\n        print("NO")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\n\ndef main():\n    N, K = map(int, sys.stdin.readline().split())\n    A = list(map(int, sys.stdin.readline().split()))\n    #print(N, K, A)\n\n    # if the number of elements that are not in the correct position is less than K, it is possible to sort A\n    # by swapping the elements that are not in the correct position K times.\n    # if the number of elements that are not in the correct position is K or more, it is impossible to sort A\n    # by swapping the elements that are not in the correct position K times.\n    count = 0 # the number of elements that are not in the correct position\n    for i in range(N): # for each element in A\n        if A[i] != i + 1: # if the element is not in the correct position\n            count += 1 # increment count\n    if count <= K: # if the number of elements that are not in the correct position is less than or equal to K\n        print("YES") # it is possible to sort A by swapping the elements that are not in the correct position K times\n    else: # if the number of elements that are not in the correct position is more than K\n        print("NO") # it is impossible to sort A by swapping the elements that are not in the correct position K times\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    A = list(map(int, sys.stdin.readline().split()))\n    #print(N, p)\n\n    # if the number of elements that are not in the correct position is less than 2, it is possible to sort p\n    # by swapping the elements that are not in the correct position.\n    # if the number of elements that are not in the correct position is 2 or more, it is impossible to sort p\n    # by swapping the elements that are not in the correct position.\n    count = 0\n    for i in range(N):\n        if A[i] != i + 1:\n            count += 1\n    if count < 2:\n        print("YES")\n    else:\n        print("NO")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    p = list(map(int, sys.stdin.readline().split()))\n    # print(N, p)\n\n    # if the number of elements that are not in the correct position is less than 2, it is possible to sort p\n    # by swapping the elements that are not in the correct position.\n    # if the number of elements that are not in the correct position is 2 or more, it is impossible to sort p\n    # by swapping the elements that are not in the correct position.\n    count = 0\n    for i in range(N):\n        if p[i] != i + 1:\n            count += 1\n    if count < 2:\n        print("YES")\n    else:\n        print("NO")\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    p = list(map(int, sys.stdin.readline().split()))\n    #print(N, p)\n\n    # if the number of elements that are not in the correct position is less than 2, it is possible to sort p\n    # by swapping the elements that are not in the correct position.\n    # if the number of elements that are not in the correct position is 2 or more, it is impossible to sort p\n    # by swapping the elements that are not in the correct position.\n    count = 0\n    for i in range(N):\n        if p[i] != i + 1:\n            count += 1\n    if count < 2:\n        print("YES")\n    else:\n        print("NO")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-20 10:28:04.453191 size on output set 5
2022-04-20 10:28:04.453205 num operations 1
2022-04-20 10:28:04.453211 size on input set 1
2022-04-20 10:28:04.453385 using api key jaanu
2022-04-20 10:28:13.607281 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\np = list(map(int, input().split()))\n\nif N == 2:\n    if p[0] > p[1]:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelse:\n    # find the first element that is not in order\n    for i in range(N - 1):\n        if p[i] > p[i + 1]:\n            break\n\n    # find the last element that is not in order\n    for j in range(N - 1, 0, -1):\n        if p[j] < p[j - 1]:\n            break\n\n    # check if the elements in between are in order\n    for k in range(i + 1, j):\n        if p[k] > p[k + 1]:\n            print(\"NO\")\n            exit()\n\n    # check if the elements before the first element are in order\n    for k in range(i):\n        if p[k] > p[j]:\n            print(\"NO\")\n            exit()\n\n    # check if the elements after the last element are in order\n    for k in range(j + 1, N):\n        if p[k] < p[i]:\n            print(\"NO\")\n            exit()\n\n    print(\"YES\")\n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\np = list(map(int, input().split()))\n \nif N == 2:\n    if p[0] > p[1]:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelse:\n    # find the first element that is not in order\n    for i in range(N-1):\n        if p[i] > p[i+1]:\n            break\n\n    # find the last element that is not in order\n    for j in range(N-1, 0, -1):\n        if p[j] < p[j-1]:\n            break\n\n    # check if the elements in between are in order\n    for k in range(i, j):\n        if p[k] > p[k+1]:\n            print(\"NO\")\n            exit()\n\n    # check if the elements before the first element are in order\n    for k in range(i):\n        if p[k] > p[j]:\n            print(\"NO\")\n            exit()\n\n    # check if the elements after the last element are in order\n    for k in range(j+1, N):\n        if p[k] < p[i]:\n            print(\"NO\")\n            exit()\n\n    print(\"YES\")\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input())\np = list(map(int, input().split()))\n\nif N == 2:\n    if p[0] > p[1]:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelse:\n    # find the first element that is not in order\n    for i in range(N-1):\n        if p[i] > p[i+1]:\n            break\n\n    # find the last element that is not in order\n\n    # check if the elements before the first element are in order\n    for k in range(i):\n        if p[k] > p[j]:\n            print(\"NO\")\n            exit()\n\n    # check if the elements after the last element are in order\n    for k in range(j+1, N):\n        if p[k] < p[i]:\n            print(\"NO\")\n            exit()\n\n    for j in range(N-1, 0, -1):\n        if p[j] < p[j-1]:\n            break\n\n    # check if the elements in between are in order\n    for k in range(i, j):\n        if p[k] > p[k+1]:\n            print(\"NO\")\n            exit()\n\n    print(\"YES\")\n"
    },
    {
      "index": 3,
      "text": "\n\nN = int(input())\np = list(map(int, input().split()))\n\nif N == 2:\n    if p[0] > p[1]:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelse:\n    # find the first element that is not in order\n    for i in range(N-1):\n        if p[i] > p[i+1]:\n            break\n\n    # find the last element that is not in order\n    for j in range(N-1, 0, -1):\n        if p[j] < p[j-1]:\n            break\n    \n    # check if the elements in between are in order\n    for k in range(i, j):\n        if p[k] > p[k+1]:\n            print(\"NO\")\n            exit()\n\n    # check if the elements before the first element are in order\n    for k in range(i):\n        if p[k] > p[j]:\n            print(\"NO\")\n            exit()\n\n    # check if the elements after the last element are in order\n    for k in range(j+1, N):\n        if p[k] < p[i]:\n            print(\"NO\")\n            exit()\n\n    print(\"YES\")\n"
    },
    {
      "index": 4,
      "text": "\nN = int(input())\np = list(map(int, input().split()))\n\nif N == 2:\n    if p[0] > p[1]:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelse:\n    # find the first element that is not in order\n    for i in range(N-1):\n        if p[i] > p[i+1]:\n            break;\n\n    # find the last element that is not in order\n    for j in range(N-1, i, -1):\n        if p[j] < p[j-1]:\n            break\n\n    # check if the elements in between are in order\n    for k in range(i, j+1):\n        if p[k] > p[k+1]:\n            print(\"NO\")\n            exit();\n\n    # check if the elements before the first element are in order\n    for k in range(i):\n        if p[k] > p[j]:\n            print(\"NO\")\n            exit();\n\n    # check if the elements after the last element are in order\n    for k in range(j+1, N):\n        if p[k] < p[i]:\n            print(\"NO\")\n            exit();\n\n    print(\"YES\")\n"
    },
    {
      "index": 5,
      "text": "\n\nN = int(input())\np = list(map(int, input().split()))\n\nif N == 2:\n    if p[0] > p[1]:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelse:\n    # find the first element that is not in order\n    for i in range(N-1):\n        if p[i] > p[i+1]:\n            break\n\n    # find the last element that is not in order\n    for j in range(N-1, 0, -1):\n        if p[j] < p[j-1]:\n            break\n\n    # check if the elements in between are in order\n    for k in range(i, j):\n        if p[k] > p[k+1]:\n            print(\"NO\")\n            exit()\n\n    # check if the elements before the first element are in order\n    for k in range(i-1):\n        if p[k] > p[j]:\n            print(\"NO\")\n            exit()\n\n    # check if the elements after the last element are in order\n    for k in range(j+1, N-1):\n        if p[k] < p[i]:\n            print(\"NO\")\n            exit()\n\n    print(\"YES\")\n"
    },
    {
      "index": 6,
      "text": "\n\nN = int(input())\np = list(map(int, input().split()))\n\nif N == 2:\n    if p[0] > p[1]:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelse:\n    # find the first element that is not in order\n    for i in range(N-1):\n        if p[i] > p[i+1]:\n            break\n\n    # find the last element that is not in order\n    for j in range(N-2, -1, -1):\n        if p[j] < p[j-1]:\n            break\n\n    # check if the elements in between are in order\n    for k in range(i, j+1):\n        if p[k] > p[k+1]:\n            print(\"NO\")\n            exit()\n\n    # check if the elements before the first element are in order\n    for k in range(i):\n        if p[k] > p[j]:\n            print(\"NO\")\n            exit()\n\n    # check if the elements after the last element are in order\n    for k in range(j+1, N):\n        if p[k] < p[i]:\n            print(\"NO\")\n            exit()\n\n    print(\"YES\")\n"
    },
    {
      "index": 7,
      "text": "\n\nN = int(input())\np = list(map(int, input().split()))\n\nif N == 2:\n    if p[0] > p[1]:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelse:\n    # find the first element that is not in order\n    for i in range(N-1):\n        if p[i] > p[i+1]:\n            break\n\n    # find the last element that is not in order\n    for j in range(N-1, 0, -1):\n        if p[j] < p[j-1]:\n            break\n   \n    # check if the elements in between are in order\n    for k in range(i, j):\n        if p[k] > p[k+1]:\n            print(\"NO\")\n            exit()\n\n    # check if the elements before the first element are in order\n    for k in range(i):\n        if p[k] > p[j]:\n            print(\"NO\")\n            exit()\n\n    # check if the elements after the last element are in order\n    for k in range(j+1, N):\n        if p[k] < p[i]:\n            print(\"NO\")\n            exit()\n\n    print(\"YES\")\n"
    }
  ],
  "created": 1650450484,
  "object": "edit"
}
2022-04-20 10:28:13.607598 fix syntax errors 8 ['\nN = int(input())\np = list(map(int, input().split()))\n\nif N == 2:\n    if p[0] > p[1]:\n        print("YES")\n    else:\n        print("NO")\nelse:\n    # find the first element that is not in order\n    for i in range(N - 1):\n        if p[i] > p[i + 1]:\n            break\n\n    # find the last element that is not in order\n    for j in range(N - 1, 0, -1):\n        if p[j] < p[j - 1]:\n            break\n\n    # check if the elements in between are in order\n    for k in range(i + 1, j):\n        if p[k] > p[k + 1]:\n            print("NO")\n            exit()\n\n    # check if the elements before the first element are in order\n    for k in range(i):\n        if p[k] > p[j]:\n            print("NO")\n            exit()\n\n    # check if the elements after the last element are in order\n    for k in range(j + 1, N):\n        if p[k] < p[i]:\n            print("NO")\n            exit()\n\n    print("YES")\n', '\n\nN = int(input())\np = list(map(int, input().split()))\n \nif N == 2:\n    if p[0] > p[1]:\n        print("YES")\n    else:\n        print("NO")\nelse:\n    # find the first element that is not in order\n    for i in range(N-1):\n        if p[i] > p[i+1]:\n            break\n\n    # find the last element that is not in order\n    for j in range(N-1, 0, -1):\n        if p[j] < p[j-1]:\n            break\n\n    # check if the elements in between are in order\n    for k in range(i, j):\n        if p[k] > p[k+1]:\n            print("NO")\n            exit()\n\n    # check if the elements before the first element are in order\n    for k in range(i):\n        if p[k] > p[j]:\n            print("NO")\n            exit()\n\n    # check if the elements after the last element are in order\n    for k in range(j+1, N):\n        if p[k] < p[i]:\n            print("NO")\n            exit()\n\n    print("YES")\n', '\n\nN = int(input())\np = list(map(int, input().split()))\n\nif N == 2:\n    if p[0] > p[1]:\n        print("YES")\n    else:\n        print("NO")\nelse:\n    # find the first element that is not in order\n    for i in range(N-1):\n        if p[i] > p[i+1]:\n            break\n\n    # find the last element that is not in order\n\n    # check if the elements before the first element are in order\n    for k in range(i):\n        if p[k] > p[j]:\n            print("NO")\n            exit()\n\n    # check if the elements after the last element are in order\n    for k in range(j+1, N):\n        if p[k] < p[i]:\n            print("NO")\n            exit()\n\n    for j in range(N-1, 0, -1):\n        if p[j] < p[j-1]:\n            break\n\n    # check if the elements in between are in order\n    for k in range(i, j):\n        if p[k] > p[k+1]:\n            print("NO")\n            exit()\n\n    print("YES")\n', '\n\nN = int(input())\np = list(map(int, input().split()))\n\nif N == 2:\n    if p[0] > p[1]:\n        print("YES")\n    else:\n        print("NO")\nelse:\n    # find the first element that is not in order\n    for i in range(N-1):\n        if p[i] > p[i+1]:\n            break\n\n    # find the last element that is not in order\n    for j in range(N-1, 0, -1):\n        if p[j] < p[j-1]:\n            break\n    \n    # check if the elements in between are in order\n    for k in range(i, j):\n        if p[k] > p[k+1]:\n            print("NO")\n            exit()\n\n    # check if the elements before the first element are in order\n    for k in range(i):\n        if p[k] > p[j]:\n            print("NO")\n            exit()\n\n    # check if the elements after the last element are in order\n    for k in range(j+1, N):\n        if p[k] < p[i]:\n            print("NO")\n            exit()\n\n    print("YES")\n', '\nN = int(input())\np = list(map(int, input().split()))\n\nif N == 2:\n    if p[0] > p[1]:\n        print("YES")\n    else:\n        print("NO")\nelse:\n    # find the first element that is not in order\n    for i in range(N-1):\n        if p[i] > p[i+1]:\n            break;\n\n    # find the last element that is not in order\n    for j in range(N-1, i, -1):\n        if p[j] < p[j-1]:\n            break\n\n    # check if the elements in between are in order\n    for k in range(i, j+1):\n        if p[k] > p[k+1]:\n            print("NO")\n            exit();\n\n    # check if the elements before the first element are in order\n    for k in range(i):\n        if p[k] > p[j]:\n            print("NO")\n            exit();\n\n    # check if the elements after the last element are in order\n    for k in range(j+1, N):\n        if p[k] < p[i]:\n            print("NO")\n            exit();\n\n    print("YES")\n', '\n\nN = int(input())\np = list(map(int, input().split()))\n\nif N == 2:\n    if p[0] > p[1]:\n        print("YES")\n    else:\n        print("NO")\nelse:\n    # find the first element that is not in order\n    for i in range(N-1):\n        if p[i] > p[i+1]:\n            break\n\n    # find the last element that is not in order\n    for j in range(N-1, 0, -1):\n        if p[j] < p[j-1]:\n            break\n\n    # check if the elements in between are in order\n    for k in range(i, j):\n        if p[k] > p[k+1]:\n            print("NO")\n            exit()\n\n    # check if the elements before the first element are in order\n    for k in range(i-1):\n        if p[k] > p[j]:\n            print("NO")\n            exit()\n\n    # check if the elements after the last element are in order\n    for k in range(j+1, N-1):\n        if p[k] < p[i]:\n            print("NO")\n            exit()\n\n    print("YES")\n', '\n\nN = int(input())\np = list(map(int, input().split()))\n\nif N == 2:\n    if p[0] > p[1]:\n        print("YES")\n    else:\n        print("NO")\nelse:\n    # find the first element that is not in order\n    for i in range(N-1):\n        if p[i] > p[i+1]:\n            break\n\n    # find the last element that is not in order\n    for j in range(N-2, -1, -1):\n        if p[j] < p[j-1]:\n            break\n\n    # check if the elements in between are in order\n    for k in range(i, j+1):\n        if p[k] > p[k+1]:\n            print("NO")\n            exit()\n\n    # check if the elements before the first element are in order\n    for k in range(i):\n        if p[k] > p[j]:\n            print("NO")\n            exit()\n\n    # check if the elements after the last element are in order\n    for k in range(j+1, N):\n        if p[k] < p[i]:\n            print("NO")\n            exit()\n\n    print("YES")\n', '\n\nN = int(input())\np = list(map(int, input().split()))\n\nif N == 2:\n    if p[0] > p[1]:\n        print("YES")\n    else:\n        print("NO")\nelse:\n    # find the first element that is not in order\n    for i in range(N-1):\n        if p[i] > p[i+1]:\n            break\n\n    # find the last element that is not in order\n    for j in range(N-1, 0, -1):\n        if p[j] < p[j-1]:\n            break\n   \n    # check if the elements in between are in order\n    for k in range(i, j):\n        if p[k] > p[k+1]:\n            print("NO")\n            exit()\n\n    # check if the elements before the first element are in order\n    for k in range(i):\n        if p[k] > p[j]:\n            print("NO")\n            exit()\n\n    # check if the elements after the last element are in order\n    for k in range(j+1, N):\n        if p[k] < p[i]:\n            print("NO")\n            exit()\n\n    print("YES")\n']
2022-04-20 10:28:13.607778 size on output set 8
