2022-04-20 10:24:24.633236 num operations 1
2022-04-20 10:24:24.633253 size on input set 1
2022-04-20 10:24:24.633441 using api key gabby
2022-04-20 10:24:30.299628 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nif a[-1] > n:\n    print(-1)\n\nelse:\n    print(n - sum(a))\n"
    },
    {
      "index": 1,
      "text": "\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\nif a[-1] > n:\n    print(-1)\nelse:\n    print(n - sum(a))\n"
    },
    {
      "index": 2,
      "text": "\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nprint(n - sum(a))\n"
    },
    {
      "index": 3,
      "text": "\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nif a[-1] > n:\n    print(-1)\nelse:\n    print(n - sum(a))\n"
    },
    {
      "index": 4,
      "text": "\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nif a[-1] > n:\n    print(-1)\nelse:\n    print(n - sum(a))\n"
    },
    {
      "index": 5,
      "text": "\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nif a[-1] > n:\n    print(-1)\nelse:\n    print(n - sum(a))\n"
    },
    {
      "index": 6,
      "text": "\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nif a[-1] > m:\n    print(-1)\nelse:\n    print(m - sum(a))\n"
    },
    {
      "index": 7,
      "text": "# coding: utf-8\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nif a[-1] > n:\n    print(-1)\nelse:\n    print(n - sum(a))\n"
    }
  ],
  "created": 1650450264,
  "object": "edit"
}
2022-04-20 10:24:30.299948 fix syntax errors 8 ['\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nif a[-1] > n:\n    print(-1)\n\nelse:\n    print(n - sum(a))\n', '\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\nif a[-1] > n:\n    print(-1)\nelse:\n    print(n - sum(a))\n', '\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nprint(n - sum(a))\n', '\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nif a[-1] > n:\n    print(-1)\nelse:\n    print(n - sum(a))\n', '\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nif a[-1] > n:\n    print(-1)\nelse:\n    print(n - sum(a))\n', '\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nif a[-1] > n:\n    print(-1)\nelse:\n    print(n - sum(a))\n', '\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nif a[-1] > m:\n    print(-1)\nelse:\n    print(m - sum(a))\n', '# coding: utf-8\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nif a[-1] > n:\n    print(-1)\nelse:\n    print(n - sum(a))\n']
2022-04-20 10:24:30.299985 size on output set 7
2022-04-20 10:24:30.299998 num operations 1
2022-04-20 10:24:30.300004 size on input set 1
2022-04-20 10:24:30.300160 using api key sunu
2022-04-20 10:24:43.652680 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\n\ndef main():\n    n, m = [int(x) for x in stdin.readline().split()] # n = days, m = assignments\n    assignments = [int(x) for x in stdin.readline().split()] # assignments = list of assignments\n    assignments.sort() # sort assignments in ascending order\n    assignments.reverse() # reverse assignments to descending order\n\n    if sum(assignments) > n: # if the sum of assignments is greater than the days left, then we cannot finish the assignments\n        print(-1)\n        return\n\n    days_left = n - sum(assignments) # days_left = days left after completing all assignments\n    days_left += assignments.pop() # add the largest assignment to the days left\n    days_left -= 1 # subtract 1 day for the largest assignment\n\n    while days_left >= 0 and assignments: # while we have days left and assignments\n        days_left -= assignments.pop() # subtract the next assignment from days left\n        days_left -= 1 # subtract 1 day for the assignment\n\n    if days_left < 0: # if days_left is less than 0, then we cannot finish the assignments\n        print(-1)\n    else:\n        print(days_left) # print the days left\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\n\ndef main():\n    n, m = [int(x) for x in stdin.readline().split()]\n    assignments = [int(x) for x in stdin.readline().split()]\n    assignments.sort()\n    assignments.reverse()\n\n    if sum(assignments) > n:\n        print(-1)\n        return\n\n    days_left = n - sum(assignments)\n    days_left += assignments.pop(0)\n    days_left -= 1\n\n    while days_left >= 0 and assignments:\n        days_left -= assignments.pop(0)\n        days_left -= 1\n\n    if days_left < 0:\n        print(-1)\n    else:\n        print(days_left)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom sys import stdin\n\ndef main():\n    n, m = [int(x) for x in stdin.readline().split()]\n    assignments = sorted([int(x) for x in stdin.readline().split()], reverse=True)\n\n    if sum(assignments) > n:\n        print(-1)\n        return\n\n    days_left = n - sum(assignments)\n    days_left += assignments.pop()\n    days_left -= 1\n\n    while days_left >= 0 and assignments:\n        days_left -= assignments.pop()\n        days_left -= 1\n\n    if days_left < 0:\n        print(-1)\n    else:\n        print(days_left)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\nfrom sys import stdin\n\ndef main():\n    n, m = [int(x) for x in stdin.readline().split()]\n    assignments = [int(x) for x in stdin.readline().split()]\n    assignments.sort()\n    assignments.reverse()\n\n    if sum(assignments) > n:\n        print(-1)\n        return\n\n    days_left = n - sum(assignments)\n    days_left += assignments.pop()\n    days_left -= 1\n\n    while days_left >= 0 and assignments and days_left >= assignments[-1]:\n        days_left -= assignments.pop()\n        days_left -= 1\n\n    if days_left < 0:\n        print(-1)\n    else:\n        print(days_left)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nfrom sys import stdin\n\ndef main():\n    n, m = [int(x) for x in stdin.readline().split()]\n    assignments = [int(x) for x in stdin.readline().split()]\n    assignments.sort()\n    assignments.reverse()\n\n    if sum(assignments) > n:\n        print(-1)\n        return\n\n    days_left = n - sum(assignments)\n    days_left += assignments.pop()\n    days_left -= 1\n\n    while days_left >= 0 and assignments:\n        days_left -= assignments.pop()\n        days_left -= 1\n\n    if days_left < 0:\n        print(-1)\n    else:\n        print(days_left)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\nfrom sys import stdin\n\ndef main():\n    n, m = [int(x) for x in stdin.readline().split()]\n    assignments = [int(x) for x in stdin.readline().split()]\n    assignments.sort()\n\n    if sum(assignments) > n:\n        print(-1)\n        return\n\n    days_left = n - sum(assignments)\n    days_left += assignments.pop()\n    days_left -= 1\n\n    while days_left >= 0 and assignments:\n        days_left -= assignments.pop(0)\n        days_left -= 1\n\n    if days_left < 0:\n        print(-1)\n    else:\n        print(days_left)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    numbers = [int(x) for x in stdin.readline().split()]\n\n    for x in numbers:\n        if x % 2 == 0:\n            print(x, end=' ')\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n#\nfrom sys import stdin\n\ndef main():\n    n, m = [int(x) for x in stdin.readline().split()]\n    assignments = [int(x) for x in stdin.readline().split()]\n    assignments.sort()\n    assignments.reverse()\n\n    if sum(assignments) > n:\n        print(-1)\n        return\n\n    days_left = n - sum(assignments)\n    days_left += assignments.pop()\n    days_left -= 1\n\n    while days_left >= 0 and assignments:\n        days_left -= assignments.pop()\n        days_left -= 1\n\n    if days_left < 0:\n        print(-1)\n    else:\n        print(days_left)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650450270,
  "object": "edit"
}
2022-04-20 10:24:43.653075 fix syntax errors 8 ["\n\nfrom sys import stdin\n\ndef main():\n    n, m = [int(x) for x in stdin.readline().split()] # n = days, m = assignments\n    assignments = [int(x) for x in stdin.readline().split()] # assignments = list of assignments\n    assignments.sort() # sort assignments in ascending order\n    assignments.reverse() # reverse assignments to descending order\n\n    if sum(assignments) > n: # if the sum of assignments is greater than the days left, then we cannot finish the assignments\n        print(-1)\n        return\n\n    days_left = n - sum(assignments) # days_left = days left after completing all assignments\n    days_left += assignments.pop() # add the largest assignment to the days left\n    days_left -= 1 # subtract 1 day for the largest assignment\n\n    while days_left >= 0 and assignments: # while we have days left and assignments\n        days_left -= assignments.pop() # subtract the next assignment from days left\n        days_left -= 1 # subtract 1 day for the assignment\n\n    if days_left < 0: # if days_left is less than 0, then we cannot finish the assignments\n        print(-1)\n    else:\n        print(days_left) # print the days left\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\n\ndef main():\n    n, m = [int(x) for x in stdin.readline().split()]\n    assignments = [int(x) for x in stdin.readline().split()]\n    assignments.sort()\n    assignments.reverse()\n\n    if sum(assignments) > n:\n        print(-1)\n        return\n\n    days_left = n - sum(assignments)\n    days_left += assignments.pop(0)\n    days_left -= 1\n\n    while days_left >= 0 and assignments:\n        days_left -= assignments.pop(0)\n        days_left -= 1\n\n    if days_left < 0:\n        print(-1)\n    else:\n        print(days_left)\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\n\ndef main():\n    n, m = [int(x) for x in stdin.readline().split()]\n    assignments = sorted([int(x) for x in stdin.readline().split()], reverse=True)\n\n    if sum(assignments) > n:\n        print(-1)\n        return\n\n    days_left = n - sum(assignments)\n    days_left += assignments.pop()\n    days_left -= 1\n\n    while days_left >= 0 and assignments:\n        days_left -= assignments.pop()\n        days_left -= 1\n\n    if days_left < 0:\n        print(-1)\n    else:\n        print(days_left)\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\n\ndef main():\n    n, m = [int(x) for x in stdin.readline().split()]\n    assignments = [int(x) for x in stdin.readline().split()]\n    assignments.sort()\n    assignments.reverse()\n\n    if sum(assignments) > n:\n        print(-1)\n        return\n\n    days_left = n - sum(assignments)\n    days_left += assignments.pop()\n    days_left -= 1\n\n    while days_left >= 0 and assignments and days_left >= assignments[-1]:\n        days_left -= assignments.pop()\n        days_left -= 1\n\n    if days_left < 0:\n        print(-1)\n    else:\n        print(days_left)\n\nif __name__ == '__main__':\n    main()\n", "\nfrom sys import stdin\n\ndef main():\n    n, m = [int(x) for x in stdin.readline().split()]\n    assignments = [int(x) for x in stdin.readline().split()]\n    assignments.sort()\n    assignments.reverse()\n\n    if sum(assignments) > n:\n        print(-1)\n        return\n\n    days_left = n - sum(assignments)\n    days_left += assignments.pop()\n    days_left -= 1\n\n    while days_left >= 0 and assignments:\n        days_left -= assignments.pop()\n        days_left -= 1\n\n    if days_left < 0:\n        print(-1)\n    else:\n        print(days_left)\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\n\ndef main():\n    n, m = [int(x) for x in stdin.readline().split()]\n    assignments = [int(x) for x in stdin.readline().split()]\n    assignments.sort()\n\n    if sum(assignments) > n:\n        print(-1)\n        return\n\n    days_left = n - sum(assignments)\n    days_left += assignments.pop()\n    days_left -= 1\n\n    while days_left >= 0 and assignments:\n        days_left -= assignments.pop(0)\n        days_left -= 1\n\n    if days_left < 0:\n        print(-1)\n    else:\n        print(days_left)\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    numbers = [int(x) for x in stdin.readline().split()]\n\n    for x in numbers:\n        if x % 2 == 0:\n            print(x, end=' ')\n\n\nif __name__ == '__main__':\n    main()\n", "\n#\nfrom sys import stdin\n\ndef main():\n    n, m = [int(x) for x in stdin.readline().split()]\n    assignments = [int(x) for x in stdin.readline().split()]\n    assignments.sort()\n    assignments.reverse()\n\n    if sum(assignments) > n:\n        print(-1)\n        return\n\n    days_left = n - sum(assignments)\n    days_left += assignments.pop()\n    days_left -= 1\n\n    while days_left >= 0 and assignments:\n        days_left -= assignments.pop()\n        days_left -= 1\n\n    if days_left < 0:\n        print(-1)\n    else:\n        print(days_left)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 10:24:43.653144 size on output set 8
