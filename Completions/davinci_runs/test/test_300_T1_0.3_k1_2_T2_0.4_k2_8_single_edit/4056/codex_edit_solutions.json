["\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    g = a[0]\n    for i in range(1, n):\n        g = gcd(g, a[i])\n    print(g)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))[:n]\n    print(sum(a))\n\nif __name__ == '__main__':\n    main()\n", "\nfrom math import gcd\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    g = a[0]\n    for i in range(1, n):\n        g = gcd(g, a[i])\n    print(g)\n", "'''\nFile: gcd.py\nAuthor: Michael Cooper\nDescription: Calculates the GCD of a list of numbers\n'''\n\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    g = a[0]\n    for i in range(1, n):\n        g = gcd(g, a[i])\n    print(g)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    g = a[0] if n > 0 else 0\n    for i in range(1, n if n > 0 else 1):\n        g = gcd(g, a[i] if n > 0 else 0)\n    print(g)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nfrom math import gcd\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = [int(i) for i in sys.stdin.readline().split()]\n    g = a[0]\n    for i in range(1, n):\n        g = gcd(g, a[i])\n    print(g)\n\nmain()\n", "\n\nfrom math import *\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    g = abs(a[0])\n    for i in range(1, n):\n        g = gcd(g, abs(a[i]))\n    print(g)\n\nmain()\n", "\n\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n\n        return a\n    return gcd(b, a % b)\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    g = a[0]\n    for i in range(1, n):\n        g = gcd(g, a[i])\n    print(g)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom math import gcd\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()][:n]\n    g = a[0]\n    for i in range(1, n):\n        g = gcd(g, a[i])\n    print(g)\n\nmain()\n", "\nfrom math import gcd\n\n\ndef main() -> None:\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    g = a[0]\n    for i in range(1, n):\n        g = gcd(g, a[i])\n    print(g)\n\n\nmain()\n", "\nfrom math import gcd\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    g = a[0]\n    for i in range(1, n):\n        g = gcd(g, a[i])\n    print(g)\n\nmain()\n", "\nfrom math import gcd \n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    g = a[0]\n    for i in range(1, n):\n        g = gcd(g, a[i])\n    print(g)\n\nmain()\n", "import sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    g = a[0]\n    for i in range(1, n):\n        g = gcd(g, a[i])\n    print(g)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    g = a[0]\n    for i in range(1, n):\n        g = gcd(g, a[i])\n    print(g)\n\nif __name__ == '__main__':\n    main()\n"]