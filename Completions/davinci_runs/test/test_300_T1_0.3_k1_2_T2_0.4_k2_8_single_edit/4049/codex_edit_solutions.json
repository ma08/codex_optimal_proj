["\ndef solve(a, b):\n    if a == 0:\n        return 'No'\n    if a == 1:\n        return 'Yes'\n    if b == 0:\n        return 'No'\n    return solve(a % b, b % a)\na, b = map(int, input().split())\nprint(solve(a, b))\n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    print(max(0, min(a[2], b[0]) - max(a[0], b[2])), max(0, min(a[2], b[0]) - max(a[0], b[2])) + min(a[2], b[2])\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    print(max(0, min(a[2], b[0]) - max(a[0], b[2])), max(0, min(a[2], b[0]) - max(a[0], b[2])) + min(a[2], b[2]))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    print(max(0, min(a[2], b[0]) - max(a[0], b[2])), max(0, min(a[2], b[0]) - max(a[0], b[2])) + min(a[1], b[1]))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    print(max(0, min(a[2], b[0]) - max(a[0], b[2])), max(0, min(a[2], b[0]) - max(a[0], b[2])) + min(a[2], b[2]) - 1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    ans = []\n    for i in range(n):\n        a = list(map(int, input().split()))\n        ans.append(a)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n", "\n# SOLUTION\n\ndef rockPaperScissors(n, a, b):\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        wins = min(a[i], b[(i+1)%3])\n        min_wins += wins\n        max_wins += wins\n        a[i] -= wins\n        b[(i+1)%3] -= wins\n    max_wins += min(a[0], b[0])\n    return min_wins, max_wins\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(*rockPaperScissors(n, a, b))\n", "\n# SOLUTION\n\ndef rock_paper_scissors(n, a, b):\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        wins = min(a[i], b[(i+1)%3])\n        min_wins += wins\n        max_wins += wins\n        a[i] -= wins\n        b[(i+1)%3] -= wins\n    max_wins += min(a[0], b[0])\n    return min_wins, max_wins\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(*rock_paper_scissors(n, a, b))\n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    print(max(0, min(a[2], b[0]) - max(a[0], b[2])), max(0, min(a[2], b[0]) - max(a[0], b[2])) + min(a[2], b[2]), sep=' ')\n\nif __name__ == \"__main__\":\n    main()\n", "# SOLUTION\n\ndef rockPaperScissors(n, a, b):\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        wins = min(a[i], b[(i+1)%3])\n        min_wins += wins\n        max_wins += wins\n        a[i] -= wins\n        b[(i+1)%3] -= wins\n    max_wins += min(a[0], b[0])\n    return min_wins, max_wins\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(*rockPaperScissors(n, a, b))\n", "#!/bin/python3\n\n# SOLUTION\n\ndef rockPaperScissors(n, a, b):\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        wins = min(a[i], b[(i+1)%3])\n        min_wins += wins\n        max_wins += wins\n        a[i] -= wins\n        b[(i+1)%3] -= wins\n    max_wins += min(a[0], b[0])\n    return min_wins, max_wins\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(*rockPaperScissors(n, a, b))\n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    print(max(0, min(a[2], b[0]) - max(a[0], b[2])), max(0, min(a[2], b[1]) - max(a[0], b[1])) + min(a[2], b[2]))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# SOLUTION\n\ndef rockPaperScissors(n, a, b):\n    min_wins, max_wins = 0, 0\n    for i in range(3):\n        wins = min(a[i], b[(i+1)%3])\n        min_wins += wins\n        max_wins += wins\n        a[i] -= wins\n        b[(i+1)%3] -= wins\n    max_wins += min(a[0], b[0])\n    return min_wins, max_wins\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(*rockPaperScissors(n, a, b))\n", "\n# SOLUTION\n\ndef rockPaperScissors(n, a, b):\n    min_wins = sum(min(a[i], b[(i+1)%3]) for i in range(3))\n    max_wins = sum(min(a[i], b[(i+2)%3]) for i in range(3))\n    return min_wins, max_wins + min(a[0], b[0])\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(*rockPaperScissors(n, a, b))\n", "\n\n# SOLUTION \n\ndef rockPaperScissors(n, a, b):\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        wins = min(a[i], b[(i+1)%3])\n        min_wins += wins\n        max_wins += wins\n        a[i] -= wins\n        b[(i+1)%3] -= wins\n    max_wins += min(a[0], b[0])\n    return min_wins, max_wins\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(*rockPaperScissors(n, a, b))\n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    print(max(0, min(a[2], b[0]) - max(a[0], b[2])) + min(a[2], b[2]))\n\nif __name__ == \"__main__\":\n    main()\n"]