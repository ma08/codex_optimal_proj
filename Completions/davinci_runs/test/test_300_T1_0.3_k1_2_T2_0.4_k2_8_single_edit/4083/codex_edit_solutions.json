["\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# find the minimum value in the array and the number of times we need to divide by 2 to get to k\nmin_val = min(a)\nnum_divs = 0\nwhile min_val > k:\n    min_val //= 2\n    num_divs += 1\n\nprint(num_divs)\n", "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# find the minimum value in the array\nmin_val = min(a)\n\n# find the number of times we need to divide by 2 to get to k\nnum_divs = 0\nwhile min_val > k:\n    min_val //= 2\n    num_divs += 1\n\nprint(num_divs)\n", "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# find the maximum value in the array\nmax_val = max(a)\n\n# find the number of times we need to divide by 2 to get to k\nnum_divs = 0\nwhile max_val > k:\n    max_val //= 2\n    num_divs += 1\n\nprint(num_divs)\n", "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n# find the minimum value in the array\nmin_val = min(a)\n\n# find the number of times we need to divide by 2 to get to k\nnum_divs = 0\nwhile min_val > k:\n    min_val //= 2\n    num_divs += 1\n\nprint(num_divs)\n", "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nif a[0] == a[-1]:\n    print(0)\nelse:\n    print(a[-1] - a[0] + 1)\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nif a[0] == a[-1]:\n    print(0)\nelse:\n    print(a[-1] - a[0] + 1)\n", "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nif a[0] == a[-1]:\n    print(0)\nelse:\n    print(a[-1] - a[0] + 1)\n", "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nif a[0] == a[-1]:\n    print(0)\nelse:\n    print(a[-1] - a[0])\n"]