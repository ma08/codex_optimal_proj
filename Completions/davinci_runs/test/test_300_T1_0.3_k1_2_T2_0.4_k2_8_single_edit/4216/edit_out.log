2022-04-20 10:32:53.135252 num operations 1
2022-04-20 10:32:53.135273 size on input set 1
2022-04-20 10:32:53.135442 using api key sourya
2022-04-20 10:33:00.783698 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\n\nn = int(input())\n\n# \u5e73\u65b9\u6839\u3092\u6c42\u3081\u308b\nsqrt_n = int(math.sqrt(n))\n\n# \u5e73\u65b9\u6839\u4ee5\u4e0b\u306e\u6700\u5927\u306e\u6570\u3092\u6c42\u3081\u308b\nfor i in range(sqrt_n, 0, -1):\n    if n % i == 0:\n        break\n\n# \u6570\u5b57\u306e\u6841\u6570\u3092\u6c42\u3081\u308b\na = len(str(i))\nb = len(str(n // i))\n\nprint(max(a, b))\n"
    },
    {
      "index": 1,
      "text": "import math\n\nn = int(input())\n\n# \u5e73\u65b9\u6839\u3092\u6c42\u3081\u308b\nsqrt_n = int(math.sqrt(n))\n\n# \u5e73\u65b9\u6839\u4ee5\u4e0b\u306e\u6700\u5927\u306e\u6570\u3092\u6c42\u3081\u308b\nfor i in range(sqrt_n, 0, -1):\n    if n % i == 0:\n        break\n\n# \u6570\u5b57\u306e\u6841\u6570\u3092\u6c42\u3081\u308b\na = len(str(i))\nb = len(str(n // i))\n\nprint(max(a, b))\n"
    },
    {
      "index": 2,
      "text": "# coding: utf-8\n\nimport math\n\nn = int(input())\n\n# \u5e73\u65b9\u6839\u3092\u6c42\u3081\u308b\uff08\u6574\u6570\u306b\u3059\u308b\uff09\nsqrt_n = int(math.sqrt(n))\n\n# \u5e73\u65b9\u6839\u4ee5\u4e0b\u306e\u6700\u5927\u306e\u6570\u3092\u6c42\u3081\u308b\nfor i in range(sqrt_n, 0, -1):\n    if n % i == 0:\n        break\n\n# \u6570\u5b57\u306e\u6841\u6570\u3092\u6c42\u3081\u308b\na = len(str(i))\nb = len(str(n // i))\n\nprint(max(a, b))\n"
    },
    {
      "index": 3,
      "text": "\nimport math\n\nn = int(input())\n\n# \u5e73\u65b9\u6839\u3092\u6c42\u3081\u308b\nsqrt_n = int(math.sqrt(n))\n\n# \u5e73\u65b9\u6839\u4ee5\u4e0b\u306e\u6700\u5927\u306e\u6570\u3092\u6c42\u3081\u308b\nfor i in range(sqrt_n, 0, -1):\n    if n % i == 0:\n        break\n\n# \u6570\u5b57\u306e\u6841\u6570\u3092\u6c42\u3081\u308b\na = len(str(i))\nb = len(str(n // i))\n\nprint(max(a, b))\n"
    },
    {
      "index": 4,
      "text": "\nimport math\n\nn = int(input())\n\n# \u5e73\u65b9\u6839\u3092\u6c42\u3081\u308b\nsqrt_n = int(math.sqrt(n))\n\n# \u5e73\u65b9\u6839\u4ee5\u4e0b\u306e\u6700\u5927\u306e\u6570\u3092\u6c42\u3081\u308b\nfor i in range(sqrt_n, 0, -1):\n    if n % i == 0:\n        break\n\n# \u6570\u5b57\u306e\u6841\u6570\u3092\u6c42\u3081\u308b\na = len(str(i))\nb = len(str(n // i))\n\nprint(max(a, b))\n"
    },
    {
      "index": 5,
      "text": "\nimport math\n\nn = int(input())\n\n# \u5e73\u65b9\u6839\u3092\u6c42\u3081\u308b\nsqrt_n = int(math.sqrt(n))\n\n# \u5e73\u65b9\u6839\u4ee5\u4e0b\u306e\u6700\u5927\u306e\u6570\u3092\u6c42\u3081\u308b\nfor i in range(sqrt_n, 0, -1):\n    if n % i == 0:\n        break\n\n# \u6570\u5b57\u306e\u6841\u6570\u3092\u6c42\u3081\u308b\na = len(str(i))\nb = len(str(n // i))\n\nprint(max(a, b))\n"
    },
    {
      "index": 6,
      "text": "\n\nimport math\n\nn = int(input())\n\n# \u5e73\u65b9\u6839\u3092\u6c42\u3081\u308b\u3002\nsqrt_n = int(math.sqrt(n))\n\n# \u5e73\u65b9\u6839\u4ee5\u4e0b\u306e\u6700\u5927\u306e\u6570\u3092\u6c42\u3081\u308b\u3002\nfor i in range(sqrt_n, 0, -1):\n    if n % i == 0:\n        break\n\n# \u6570\u5b57\u306e\u6841\u6570\u3092\u6c42\u3081\u308b\u3002\na = len(str(i))\nb = len(str(n // i))\n\nprint(max(a, b))\n"
    },
    {
      "index": 7,
      "text": "import math\nn = int(input())\n\n# \u5e73\u65b9\u6839\u3092\u6c42\u3081\u308b\nsqrt_n = int(math.sqrt(n))\n# \u5e73\u65b9\u6839\u4ee5\u4e0b\u306e\u6700\u5927\u306e\u6570\u3092\u6c42\u3081\u308b\nfor i in range(sqrt_n, 0, -1):\n    if n % i == 0:\n        break\n# \u6570\u5b57\u306e\u6841\u6570\u3092\u6c42\u3081\u308b\na = len(str(i))\nb = len(str(n // i))\nprint(max(a, b))\n"
    }
  ],
  "created": 1650450773,
  "object": "edit"
}
2022-04-20 10:33:00.784009 fix syntax errors 8 ['\nimport math\n\nn = int(input())\n\n# 平方根を求める\nsqrt_n = int(math.sqrt(n))\n\n# 平方根以下の最大の数を求める\nfor i in range(sqrt_n, 0, -1):\n    if n % i == 0:\n        break\n\n# 数字の桁数を求める\na = len(str(i))\nb = len(str(n // i))\n\nprint(max(a, b))\n', 'import math\n\nn = int(input())\n\n# 平方根を求める\nsqrt_n = int(math.sqrt(n))\n\n# 平方根以下の最大の数を求める\nfor i in range(sqrt_n, 0, -1):\n    if n % i == 0:\n        break\n\n# 数字の桁数を求める\na = len(str(i))\nb = len(str(n // i))\n\nprint(max(a, b))\n', '# coding: utf-8\n\nimport math\n\nn = int(input())\n\n# 平方根を求める（整数にする）\nsqrt_n = int(math.sqrt(n))\n\n# 平方根以下の最大の数を求める\nfor i in range(sqrt_n, 0, -1):\n    if n % i == 0:\n        break\n\n# 数字の桁数を求める\na = len(str(i))\nb = len(str(n // i))\n\nprint(max(a, b))\n', '\nimport math\n\nn = int(input())\n\n# 平方根を求める\nsqrt_n = int(math.sqrt(n))\n\n# 平方根以下の最大の数を求める\nfor i in range(sqrt_n, 0, -1):\n    if n % i == 0:\n        break\n\n# 数字の桁数を求める\na = len(str(i))\nb = len(str(n // i))\n\nprint(max(a, b))\n', '\nimport math\n\nn = int(input())\n\n# 平方根を求める\nsqrt_n = int(math.sqrt(n))\n\n# 平方根以下の最大の数を求める\nfor i in range(sqrt_n, 0, -1):\n    if n % i == 0:\n        break\n\n# 数字の桁数を求める\na = len(str(i))\nb = len(str(n // i))\n\nprint(max(a, b))\n', '\nimport math\n\nn = int(input())\n\n# 平方根を求める\nsqrt_n = int(math.sqrt(n))\n\n# 平方根以下の最大の数を求める\nfor i in range(sqrt_n, 0, -1):\n    if n % i == 0:\n        break\n\n# 数字の桁数を求める\na = len(str(i))\nb = len(str(n // i))\n\nprint(max(a, b))\n', '\n\nimport math\n\nn = int(input())\n\n# 平方根を求める。\nsqrt_n = int(math.sqrt(n))\n\n# 平方根以下の最大の数を求める。\nfor i in range(sqrt_n, 0, -1):\n    if n % i == 0:\n        break\n\n# 数字の桁数を求める。\na = len(str(i))\nb = len(str(n // i))\n\nprint(max(a, b))\n', 'import math\nn = int(input())\n\n# 平方根を求める\nsqrt_n = int(math.sqrt(n))\n# 平方根以下の最大の数を求める\nfor i in range(sqrt_n, 0, -1):\n    if n % i == 0:\n        break\n# 数字の桁数を求める\na = len(str(i))\nb = len(str(n // i))\nprint(max(a, b))\n']
2022-04-20 10:33:00.784068 size on output set 5
