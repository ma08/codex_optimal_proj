2022-04-20 09:41:40.277549 num operations 1
2022-04-20 09:41:40.277569 size on input set 1
2022-04-20 09:41:40.277767 using api key gabby
2022-04-20 09:41:52.464354 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n"
    },
    {
      "index": 1,
      "text": "\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n"
    },
    {
      "index": 2,
      "text": "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n"
    },
    {
      "index": 3,
      "text": "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (1, 2)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n"
    },
    {
      "index": 4,
      "text": "\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n"
    },
    {
      "index": 5,
      "text": "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n"
    },
    {
      "index": 6,
      "text": "\n#\n# def gcd(a, b):\n#     if b == 0:\n#         return a\n#     return gcd(b, a % b)\n#\n# def lcm(a, b):\n#     return a * b // gcd(a, b)\n#\n# n = int(input())\n# a = list(map(int, input().split()))\n#\n# ans = (1, 2)\n# for i in range(n):\n#     for j in range(i + 1, n):\n#         if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n#             ans = (i, j)\n#\n# print(ans[0] + 1, ans[1] + 1)\n"
    },
    {
      "index": 7,
      "text": "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n"
    }
  ],
  "created": 1650447700,
  "object": "edit"
}
2022-04-20 09:41:52.464741 fix syntax errors 8 ['\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n', '\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n', '\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n', '\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (1, 2)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n', '\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n', '\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n', '\n#\n# def gcd(a, b):\n#     if b == 0:\n#         return a\n#     return gcd(b, a % b)\n#\n# def lcm(a, b):\n#     return a * b // gcd(a, b)\n#\n# n = int(input())\n# a = list(map(int, input().split()))\n#\n# ans = (1, 2)\n# for i in range(n):\n#     for j in range(i + 1, n):\n#         if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n#             ans = (i, j)\n#\n# print(ans[0] + 1, ans[1] + 1)\n', '\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n']
2022-04-20 09:41:52.464800 size on output set 4
2022-04-20 09:41:52.464813 num operations 1
2022-04-20 09:41:52.464819 size on input set 1
2022-04-20 09:41:52.464978 using api key soukgp
2022-04-20 09:42:00.642108 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n"
    },
    {
      "index": 4,
      "text": "import sys\n\n\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n"
    },
    {
      "index": 5,
      "text": "\nprint(1, 2)\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\nprint(min_i + 1, min_j + 1)\n"
    }
  ],
  "created": 1650447712,
  "object": "edit"
}
2022-04-20 09:42:00.642513 fix syntax errors 8 ['\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n', '\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n', '\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n', '\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n', 'import sys\n\n\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n', '\nprint(1, 2)\n', '\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n', '\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\nprint(min_i + 1, min_j + 1)\n']
2022-04-20 09:42:00.642566 size on output set 4
