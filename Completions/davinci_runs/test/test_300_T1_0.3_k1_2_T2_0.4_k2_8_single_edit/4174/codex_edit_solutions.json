["\n\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    l = list(map(int, sys.stdin.readline().split()))\n    d = [0]\n    for i in range(n):\n        d.append(d[i] + l[i])\n    print(len(list(filter(lambda x: x <= x, d))))  # lambda x: x <= x \u306flambda x: True\u3068\u540c\u3058\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    l = list(map(int, sys.stdin.readline().split()))\n    d = [0]\n    for i in range(n):\n        d.append(d[i] + l[i])\n    print(len(list(filter(lambda a: a <= x, d))))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    l = list(map(int, sys.stdin.readline().split()))\n    d = [0]\n    for i in range(n):\n        d.append(d[i] + l[i])\n    print(len(list(filter(lambda x: x <= x, d))))  # noqa\n\nif __name__ == '__main__':\n    main()\n", "# abc 083 A\n\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\n# \u521d\u671f\u5024\ncount = 1\nd = 0\n\nfor i in range(n):\n    d += l[i]\n    if d <= x:\n        count += 1\n\n\n# abc 083 B\nn, a, b = map(int, input().split())\n\n# \u521d\u671f\u5024\ncount = 0\n\nfor i in range(n+1):\n    num = sum(list(map(int, list(str(i)))))\n    if a <= num <= b:\n        count += i\n\nprint(count)\nprint(count)\n", "\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\n# \u521d\u671f\u5024\ncount = 1\nd = 0\n\nfor i in range(n):\n    d += l[i]\n    if d <= x:\n        count += 1\n\nprint(count)\n", "\n\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    l = list(map(int, sys.stdin.readline().split()))\n    d = [0]\n    for i in range(n):\n        d.append(d[i] + l[i])\n    print(len(list(filter(lambda y: y <= x, d))))\n\nif __name__ == '__main__':\n    main()\n", "\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n# \u521d\u671f\u5024\ncount = 1\nd = 0\n\nfor i in range(n):\n    d += l[i]\n    if d <= x:\n        count += 1\n\nprint(count)\n", "\n\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\n# \u521d\u671f\u5024\ncount = 1\nd = 0\n\nfor i in range(n):\n    d += l[i]\n    if d <= x:\n        count += 1\n\n\n\n# a = [1, 2, 3, 4, 5]\n# print(a[:2])\n# print(a[2:])\n\n# s = \"stressed\"\n# print(s[::-1])\n\n# a = \"\u30d1\u30bf\u30c8\u30af\u30ab\u30b7\u30fc\u30fc\"\n# print(a[::2])\n\n# a = \"Now I need a drink, alcoholic of course, after the heavy lectures involving quantum mechanics.\".replace(\",\", \"\").replace(\".\", \"\")\n# print(a)\n# b = a.split()\n# print(b)\n# c = [len(i) for i in b]\n# print(c)\n\n# a = \"Hi He Lied Because Boron Could Not Oxidize Fluorine. New Nations Might Also Sign Peace Security Clause. Arthur King Can.\".replace(\",\", \"\").replace(\".\", \"\")\n# b = a.split()\n# c = [1, 5, 6, 7, 8, 9, 15, 16, 19]\n# d = {}\n# for i, v in enumerate(b, 1):\n#     if i in c:\n#         d[v[:1]] = i\n#     else:\n#         d[v[:2]] = i\n# print(d)\n\n# a = \"paraparaparadise\"\n# b = \"paragraph\"\n# X = set(a)\n# Y = set(b)\n# print(X | Y)\n# print(X & Y)\n# print(X - Y)\n# print(Y - X)\n# print(\"se\" in X)\n# print(\"se\" in Y)\n\n# def n_gram(target, n):\n#     return [target[i:i+n] for i in range(len(target)-n+1)]\n\n# a = \"I am an NLPer\"\n# print(n_gram(a, 2))\n# b = a.split()\n# print(n_gram(b, 2))\n\n# def char_n_gram(target, n):\n#     return [target[i:i+n] for i in range(len(target)-n+1)]\n\n# def word_n_gram(target, n):\n#     return [target[i:i+n] for i in range(len(target)-n+1)]\n\n# a = \"I am an NLPer\"\n# print(char_n_gram(a, 2))\n# b = a.split()\n# print(word_n_gram(b, 2))\n\n# def char_n_gram(target, n):\n#     return [target[i:i+n] for i in range(len(target)-n+1)]\n\n# def word_n_gram(target, n):\n#     return [target[i:i+n] for i in range(len(target)-n+1)]\n\n# a = \"I am an NLPer\"\n# print(char_n_gram(a, 2))\n# b = a.split()\n# print(word_n_gram(b, 2))\n\n# def char_n_gram(target, n):\n#     return [target[i:i+n] for i in range(len(target)-n+1)]\n\n# def word_n_gram(target, n):\n#     return [target[i:i+n] for i in range(len(target)-n+1)]\n\n# a = \"I am an NLPer\"\n# print(char_n_gram(a, 2))\n# b = a.split()\n# print(word_n_gram(b, 2))\n\n# def char_n_gram(target, n):\n#     return [target[i:i+n] for i in range(len(target)-n+1)]\n\n# def word_n_gram(target, n):\n#     return [target[i:i+n] for i in range(len(target)-n+1)]\n\n# a = \"I am an NLPer\"\n# print(char_n_gram(a, 2))\n# b = a.split()\n# print(word_n_gram(b, 2))\n\n# def char_n_gram(target, n):\n#     return [target[i:i+n] for i in range(len(target)-n+1)]\n\n# def word_n_gram(target, n):\n#     return [target[i:i+n] for i in range(len(target)-n+1)]\n\n# a = \"I am an NLPer\"\n# print(char_n_gram(a, 2))\n# b = a.split()\n# print(word_n_gram(b, 2))\n\n# def char_n_gram(target, n):\n#     return [target[i:i+n] for i in range(len(target)-n+1)]\n\n# def word_n_gram(target, n):\n#     return [target[i:i+n] for i in range(len(target)-n+1)]\n\n# a = \"I am an NLPer\"\n# print(char_n_gram(a, 2))\n# b = a.split()\n# print(word_n_gram(b, 2))\n\n# def char_n_gram(target, n):\n#     return [target[i:i+n] for i in range(len(target)-n+1)]\n\n# def word_n_gram(target, n):\n#     return [target[i:i+n] for i in range(len(target)-n+1)]\n\n# a = \"I am an NLPer\"\n# print(char_n_gram(a, 2))\n# b = a.split()\n# print(word_n_gram(b, 2))\n\n# def char_n_gram(target, n):\n#     return [target[i:i+n] for i in range(len(target)-n+1)]\n\n# def word_n_gram(target, n):\n#     return [target[i:i+n] for i in range(len(target)-n+1)]\n\n# a = \"I am an NLPer\"\n# print(char_n_gram(a, 2))\n# b = a.split()\n# print(word_n_gram(b, 2))\n\n# def char_n_gram(target, n):\n#     return [target[i:i+n] for i in range(len(target)-n+1)]\n\n# def word_n_gram(target, n):\n#     return [target[i:i+n] for i in range(len(target)-n+1)]\n\n# a = \"I am an NLPer\"\n# print(char_n_gram(a, 2))\n# b = a.split()\n# print(word_n_gram(b, 2))\n\n# def char_n_gram(target, n):\n#     return [target[i:i+n] for i in range(len(target)-n+1)]\n\n# def word_n_gram(target, n):\n#     return [target[i:i+n] for i in range(len(target)-n+1)]\n\n# a = \"I am an NLPer\"\n# print(char_n_gram(a, 2))\n# b = a.split()\n# print(word_n_gram(b, 2))\n\n# def char_n_gram(target, n):\n#     return [target[i:i+n] for i in range(len(target)-n+1)]\n\n# def word_n_gram(target, n):\n#     return [target[i:i+n] for i in range(len(target)-n+1)]\n\n# a = \"I am an NLPer\"\n# print(char_n_gram(a, 2))\n# b = a.split()\n# print(word_n_gram(b, 2))\nprint(count)\n", "\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    l = list(map(int, sys.stdin.readline().split()))\n    d = [0]\n    for i in range(n):\n        d.append(d[i] + l[i])\n    print(len(list(filter(lambda t: t <= x, d))))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    l = list(map(int, sys.stdin.readline().split()))\n    d = [0]\n    for i in range(n):\n        d.append(d[i] + l[i])\n    print(len(list(filter(lambda x: x <= x, d)))) \n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    l = list(map(int, sys.stdin.readline().split()))\n    d = [0]\n    for i in range(n):\n        d.append(d[i] + l[i])\n    print(len(list(filter(lambda a: a <= x, d))))\n\nif __name__ == '__main__':\n    main()\n", "# coding: utf-8\n\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\n# \u521d\u671f\u5024\ncount = 1\nd = 0\n\nfor i in range(n):\n    d += l[i]\n    if d <= x:\n        count += 1\n\nprint(count)\n"]