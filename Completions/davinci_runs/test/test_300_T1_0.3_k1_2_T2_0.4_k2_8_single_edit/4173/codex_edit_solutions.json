["\n# SOLUTION\nq = int(input())\nfor i in range(q):\n    n, a, b = map(int, input().split())\n    if a < b:\n        print(a*(n//2) + b*(n%2))\n    else:\n\n        print(b*(n//2) + a*(n%2))\n", "\nq = int(input())\nfor i in range(q):\n    n, a, b = map(int, input().split())\n    if a < b:\n        print(a*(n//2) + b*(n%2))\n    else:\n        print(b*(n//2) + a*(n%2))\n", "\n# Solution\n\nfor _ in range(int(input())):\n    n, a, b = map(int, input().split())\n    if n == 1:\n        print(a) \n    elif n == 2:\n        print(min(2 * a, b))\n    else: \n        print(min(2 * a + b * ((n - 2) // 2), b * ((n + 1) // 2)))\n", "# Question: https://codeforces.com/problemset/problem/1352/A\n\n# SOLUTION\nq = int(input())\nfor i in range(q):\n    n, a, b = map(int, input().split())\n    if a < b:\n        print(a*(n//2) + b*(n%2))\n    else:\n        print(b*(n//2) + a*(n%2))\n", "\n\n# \n", "\n# cook your dish here\n# Solution\n\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    if n==1:\n        print(a)\n    elif n==2:\n        print(min(2*a,b))\n    else:\n        print(min(2*a+b*((n-2)//2),b*((n+1)//2)))\n", "# cook your dish here\n\n# Solution\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    if n==1:\n        print(a)\n    elif n==2:\n        print(min(2*a,b))\n    else:\n        print(min(2*a+b*((n-2)//2),b*((n+1)//2)))\n", "\n# SOLUTION\nq = int(input())\nfor i in range(q):\n    n, a, b = map(int, input().split())\n    if a < b:\n        print(a * (n // 2) + b * (n % 2))\n    else:\n        print(b * (n // 2) + a * (n % 2))\n", "# Solution\n\n# cook your dish here\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    if n==1:\n        print(a)\n    elif n==2:\n        print(min(2*a,b))\n    else:\n        print(min(2*a+b*((n-2)//2),b*((n+1)//2)))\n", "# SOLUTION\nq = int(input())\nfor i in range(q):\n    n, a, b = map(int, input().split())\n    if a < b:\n        print(a*(n//2) + b*(n%2))\n    else:\n        print(b*(n//2) + a*(n%2))\n", "\n# Solution\n\n# cook your dish here\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    if n==1:\n        print(a)\n    elif n==2:\n        print(min(2*a,b))\n    else:\n        print(min(2*a+b*((n-2)//2),b*((n+1)//2)))\n", "\n# SOLUTION\n# q = int(input())\n# for i in range(q):\n#     n, a, b = map(int, input().split())\n#     if a < b:\n#         print(a*(n//2) + b*(n%2))\n#     else:\n#         print(b*(n//2) + a*(n%2))\n", "\n# SOLUTION\nq = int(input())\nfor i in range(q):\n    n, a, b = map(int, input().split())\n    if a < b:\n        print(a*(n//2) + b*(n%2))\n    else:\n        print(b*(n//2) + a*(n%2))\n", "# QUESTION\n# We have some permutation A of [0, 1, ..., N - 1], where N is the length of A.\n# The number of (global) inversions is the number of i < j with 0 <= i < j < N and A[i] > A[j].\n# The number of local inversions is the number of i with 0 <= i < N and A[i] > A[i+1].\n# Return true if and only if the number of global inversions is equal to the number of local inversions.\n#\n# Example 1:\n# Input: A = [1,0,2]\n# Output: true\n# Explanation: There is 1 global inversion, and 1 local inversion.\n#\n# Example 2:\n# Input: A = [1,2,0]\n# Output: false\n# Explanation: There are 2 global inversions, and 1 local inversion.\n#\n# Note:\n# A will be a permutation of [0, 1, ..., A.length - 1].\n# A will have length in range [1, 5000].\n# The time limit for this problem has been reduced.\n#\n\n# SOLUTION\nq = int(input())\nfor i in range(q):\n    n, a, b = map(int, input().split())\n    if a < b:\n        print(a*(n//2) + b*(n%2))\n    else:\n        print(b*(n//2) + a*(n%2))\n", "\n#\n# Solution\n\n# cook your dish here\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    if n==1:\n        print(a)\n    elif n==2:\n        print(min(2*a,b))\n    else:\n        print(min(2*a+b*((n-2)//2),b*((n+1)//2)))\n"]