["from collections import Counter\n\nn,m=map(int,input().split())\n\nlis=[]\ncnt=0\nfor i in range(n):\n  l=list(map(int,input().split()))\n  lis+=l[1:]\n  \nd=Counter(lis)\nfor i in d.values():\n  if i==n:\n    cnt+=1\n    \nprint(cnt)", "N, M = list(map(int, input().split()))\nl =set([i for i in range(1, M+1)])\nfor _ in range(N):\n  k, *lst = list(map(int, input().split()))\n  l = l & set(lst)\n  \nprint((len(l)))\n", "import collections\nn,m = list(map(int, input().split()))\nl = [list(map(int, input().split())) for l in range(n)]\ntmp = []\n\nfor i in range(n):\n    for a in range(l[i][0]):\n        tmp.append(l[i][a + 1])\n\nc = collections.Counter(tmp)\n\nans = []\nfor x in list(c.items()):\n    if x[1] == n:\n        ans.append(x[0])\nprint((len(ans)))\n", "n,m=map(int,input().split())\nl=[0]*m\nfor i in range(n):\n    s=list(map(int,input().split()))\n    for j in range(1,len(s)):\n        l[s[j]-1]+=1\nprint(l.count(n))", "N,M=map(int,input().split())\nh={i for i in range(1,M+1)}\nfor _ in range(N):\n  a=list(map(int,input().split()))\n  a=set(a[1:])\n  h&=a\nprint(len(h))", "n, m = list(map(int, input().split()))\nlike = [0]*m\n\nfor _ in range(n):\n    al = list(map(int, input().split()))\n    arr = al[1:]\n    for a in arr:\n        like[a-1] += 1\n\nprint((like.count(n)))\n", "from collections import Counter\nfrom typing import List\n\n\ndef answer(n: int, m: int, kas: List[List[int]]) -> int:\n    response = sum((ka[1:] for ka in kas), [])\n    result = list(Counter(response).values())\n    return result.count(n)\n\n\ndef main():\n    n, m = map(int, input().split())\n    kas = [list(map(int, input().split())) for _ in range(n)]\n    print(answer(n, m, kas))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "n,m=map(int, input().split())\n\ndic={}\n\nfor i in range(n):\n    k_list=[int(i) for i in input().split()]\n    k=k_list[0]\n    a_list=k_list[1:]\n    \n    for j in a_list:\n        if j in dic:\n            dic[j]+=1\n        else:\n            dic[j]=1\n            \nvalue_list=list(dic.values())\nans=value_list.count(n)\n\nprint(ans)", "n,m = list(map(int, input().split()))\n\ns = 0\nfor i in range(1,m+1):\n    s |= 1 << i\n\n\nfor i in range(n):\n    a = list(map(int, input().split()))\n    a = list(a)\n    t = 0\n    for j in range(1, len(a)):\n        t |= 1 << a[j]\n    s &= t\n\n\nans = 0\nfor i in range(1,m+1):\n    if (s & (1<<i)) != 0:\n        ans += 1\n\nprint(ans)\n", "n,m=map(int,input().split())\nans=[0]*m\nfor i in range(n):\n  k=list(map(int,input().split()))\n  for j in range(1,m+1):\n    if j in k[1:]:\n      ans[j-1]+=1\nprint(ans.count(n))", "N,M=map(int,input().split())\nl=[list(map(int,input().split())) for i in range(N)]\n\nans = [0]*(M+1)\nfor i in range(N):\n\tfor j in range(l[i][0]):\n\t\tans[(l[i][j+1])] += 1\n\nprint(ans.count(N))", "N, M = map(int, input().split())\nS = set(range(1, M+1))\nfor _ in range(N):\n  l = list(map(int, input().split()))\n  l.remove(l[0])\n  s = set(l)\n  S = S & s\nprint(len(S))", "n, m = [int(i) for i in input().split()]\nlist_a = [[s for s in input().split()] for i in range(0, n)]\nlist_ans = [str(s) for s in range(1, m + 1)]\nfor i in range(0, n):\n    for j in range(0, m):\n        if list_ans[j] not in list_a[i][1:]:\n            list_ans[j] = '0'\nprint(len([s for s in list_ans if s != '0']))", "N, M = list(map(int, input().split()))\nt = [0 for i in range(M+1)]\nfor i in range(N):\n  A = list(map(int, input().split()))\n  for j in range(1, A[0]+1):\n    t[ A[j] ] += 1\nans = 0\nfor i in t:\n  if i == N:\n    ans += 1\nprint(ans)\n", "#!/usr/bin/env python3\n\ndef main():\n    n, m = list(map(int, input().split()))\n    k, *a = list(map(int, input().split()))\n    ans = set(a)\n    for i in range(n - 1):\n        k, *a = list(map(int, input().split()))\n        ans = ans & set(a)\n    print((len(ans)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N,M = map(int,input().split())\nfoods = [0]*M\n\nfor i in range(N):\n  KA = list(map(int,input().split()))\n  \n  for a in KA[1:]:\n    foods[a-1] += 1\n  \ncnt = 0\nfor j in foods:\n  if j == N:\n    cnt += 1\n    \nprint(cnt)", "N, M = map(int, input().split())\n  \nl = [0]*M\nfor _ in range(N):\n  A = list(map(int, input().split()))\n  for j in range(A[0]):\n    l[A[j+1]-1] += 1\n\n# l\u306e\u8981\u7d20\u3067N\u3067\u3042\u308b\u500b\u6570\u3092\u51fa\u529b\nprint(l.count(N))", "N, M = map(int, input().split())\nl = []\nfor i in range(N):\n  l.append(list(map(int, input().split())))\n  \nans = [0] * (M+1)\nfor i in range(N):\n  n = l[i]\n  for j in range(1, n[0]+1):\n    ans[n[j]] += 1\n    \ncnt = 0\nfor i in range(M+1):\n  if ans[i] == N:\n    cnt += 1\nprint(cnt)", "N,M=map(int,input().split())\nb=[]\ns=[0]*M\nfor i in range(N):\n    a=list(map(int,input().split()))\n    del a[0]\n    a.sort()\n    b.append(a)\nfor i in range(N):\n    for j in range(len(b[i])):\n        s[b[i][j]-1]+=1\nprint(s.count(N))", "n, m = list(map(int, input().split()))\nif n == 1:\n    a = list(map(int, input().split()))\n    print((a[0]))\nelse:\n    A = list(map(int, input().split()))\n    ans = set(A[1:])\n\n    for _ in range(n-1):\n        A = list(map(int, input().split()))\n        ans = ans & set(A[1:])\n\n    print((len(ans)))\n", "N, M = list(map(int, input().split()))\n\nans = set(list(map(int, input().split()))[1:])\nfor i in range(N - 1):\n    line = set(list(map(int, input().split()))[1:])\n    ans = ans & line\nprint((len(ans)))\n", "N,M=map(int, input().split())\nans=set(list(map(int, input().split()))[1:])\n\nfor i in range(N-1):\n\ttemp=set(list(map(int, input().split()))[1:])\n\tans=ans&temp\n\nprint(len(ans))", "n,m = map(int,input().split())\nal = []\nkazu = []\nfor i in range(n):\n  ka = list(map(str,input().split()))\n  for j in range(int(ka[0])):\n    al.append(ka[j+1])\nfrom collections import Counter\nl = Counter(al)\nfor i in range(m):\n  kazu.append(l[str(i+1)])\nprint(kazu.count(n))", "N , M = list(map(int,input().split()))\ncon = 0\nlike = 0\nList = []\nfor i in range(1,N+1):\n  L = list(map(int,input().split()))\n  for a in range(L[0]):\n    b = L[a + 1]\n    List.append(b)\nfor j in range(1,M + 1):\n  con = 0\n  for k in List:\n    if k == j:\n      con += 1\n  if con == N:\n    like += 1   \nprint(like)\n", "N, M = map(int, input().split())\nA = []\nfor _ in range(N):\n  A.append(list(map(int, input().split())))\n  \nl = [0]*M\nfor i in range(N):\n  num = A[i][0]\n  for j in range(num):\n    l[A[i][j+1]-1] += 1\n\n# l\u306e\u8981\u7d20\u3067N\u3067\u3042\u308b\u500b\u6570\u3092\u51fa\u529b\nprint(l.count(N))", "a, b = map(int, input().split())\nL = list(map(str, input().split()))\nL.pop(0)\nfor i in range(a-1):\n  c = list(map(str, input().split()))\n  c.pop(0)\n  L = list(set(L) & set(c))\nprint(len(L))", "n, m = map(int, input().split())\ns = set(range(1, 1+m))\nfor _ in range(n):\n  k, *a = map(int, input().split())\n  s &= set(a)\nprint(len(s))", "n, m = map(int, input().split())\nl = [0]*m\nfor _ in range(n):\n    k, *a = map(int, input().split())\n    for i in a:\n        l[i-1] += 1\nprint(l.count(n))", "n,m = map(int,input().split())\n \nfood = [0]*(m+1)\nfor i in range(n):\n    l = [int(x) for x in input().split()]\n\n    l = set(l[1:])\n\n    for x in l:\n        food[x] += 1\n \nans = food.count(n)\nprint(ans)", "n, m = list(map(int, input().split()))\nnums = [0 for num in range(m)] \nfor i in range(n):\n    k = [int(s) for s in input().split()]\n    for j in range(1, len(k)):\n        nums[k[j] - 1] += 1\nprint((nums.count(n)))\n", "N, M = map(int, input().split())\nres = [0]*M\n\nfor i in range(N):\n    K, *A = map(int, input().split())\n    for j in range(K):\n        res[A[j]-1] += 1\n\ncnt = 0\nfor i in range(M):\n    cnt += (res[i] == N)\n\nprint(cnt)", "N, M = map(int, input().split())\nans = set()\nfor i in range(N):\n    A = list(map(int, input().split()))\n    a = set(A[1:])\n    if not ans:\n        ans = a\n    else:\n        ans = ans & a\nprint(len(ans))", "N,M = map(int,input().split())\nfoods = [0]*M\n \nfor i in range(N):\n  KA = list(map(int,input().split()))\n  \n  for a in KA[1:]:\n    foods[a-1] += 1\n  \ncnt = 0\nfor j in foods:\n  if j == N:\n    cnt += 1\n    \nprint(cnt)", "N, M = map(int, input().split())\nS = set([x for x in range(1,M+1)])\n\nfor i in range(N):\n \n  A = list(map(int, input().split()))\n  B = set(A[1:])\n \n  S = S & B\nprint(len(S))", "n, m = list(map(int, input().split()))\nKA =[list(map(int, input().split())) for _ in range(n)]\n\ncnt = [0]*m\nfor ka in KA:\n  for a in ka[1:]:\n    cnt[a-1] += 1\n\nans = 0\nfor i in cnt:\n  if i == n:\n    ans += 1\nprint(ans)\n", "n, m = map(int, input().split())\nc = [0]*m\n\nfor i in range(n):\n    a = list(map(int, input().split()))\n    for j in range(1, a[0]+1):\n        c[a[j]-1] += 1\nprint(c.count(n))", "import sys\n\nsys.setrecursionlimit(10**7)\ndef I(): return int(sys.stdin.readline().rstrip())\ndef MI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))  #\u7a7a\u767d\u3042\u308a\ndef LI2(): return list(map(int,sys.stdin.readline().rstrip()))  #\u7a7a\u767d\u306a\u3057\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return list(sys.stdin.readline().rstrip().split())  #\u7a7a\u767d\u3042\u308a\ndef LS2(): return list(sys.stdin.readline().rstrip())  #\u7a7a\u767d\u306a\u3057\n\n\nN,M = MI()\nX = LI()\nANS = set(X[1:])\nfor i in range(N-1):\n    X = LI()\n    ANS &= set(X[1:])\n\nprint((len(ANS)))\n", "n, m = list(map(int, input().split()))\n\nfoods = []\nfor i in range(n):\n    foods.append(list(map(int, input().split())))\n\nif len(foods) == 1:\n    print((len(foods[0])-1))\nelse:\n    ans = 0\n    for i in foods[0][1:len(foods[0])]:\n        cnt = 0\n        for j in range(1, len(foods)):\n            if i in foods[j][1:len(foods[j])]:\n                cnt += 1\n                if cnt == len(foods) - 1:\n                    ans += 1\n\n    print(ans)\n", "n, m = map(int,input().split())\nk = [list(map(int,input().split())) for _ in range(n)]\nl = [0 for i in range(m)]\ncount = 0\nfor i in k:\n    for j in i[1:]:\n        l[j-1] += 1\nfor i in l:\n    if i == n:\n        count += 1\nprint(count)", "n, m = map(int, input().split())\nx = [list(map(int, input().split())) for i in range(n)]\nf = x[0]\ng = set(f[1:])\nfor i in range(1, n):\n    f = x[i]\n    g = g & set(f[1:])\nprint(len(g))", "# ABC118\n# B Foods Loved by Everyone \u7b54\u3048\u898b\u305f\n# N\u4eba\u3001M\u7a2e\u985e\n# i\u306e\u4eba\u306fAik\u3060\u3051\u597d\u304d\n# M\u7a2e\u985e\u306e\u4e2d\u306bN\u4eba\u5168\u54e1\u304c\u597d\u304d\u306a\u3082\u306e\u304c\u3042\u308b\u304b\u30c1\u30a7\u30c3\u30af\n# N\u4eba\u5206\u306eAik\u30ea\u30b9\u30c8\u3092\u7a4d\u96c6\u5408\u3059\u308b\nimport collections\nimport itertools\nN, M = list(map(int,input().split()))\nA = [list(map(int,input().split())) for _ in range(N)]\nfor x in A:  # A[0]=k\u306f\u4f59\u8a08\u306a\u306e\u3067\u524a\u9664\n    n = x.pop(0)\nA = list(itertools.chain.from_iterable(A))\nC = collections.Counter(A)\nct = 0\nfor i in range(1,M+1):\n    if C[i] == N:\n        ct += 1\nprint(ct)\n", "N,M = list(map(int,input().split()))\nd = {i:0 for i in range(1,M+1)}\n\nfor _ in range(N):\n  L = list(map(int,input().split()))[1:]\n  for i in L:\n    d[i] += 1\n    \ncnt = sum([1 for k,v in list(d.items()) if v == N])\nprint(cnt)\n", "N ,M = map(int,input().split())\nK = []\nfor i in range(N):\n    K.append(list(map(int,input().split())))\n\nK_list = []\nfor x in range(N):\n    K[x].remove(K[x][0])\n    K_list.extend(K[x])\n\ncnt = 0\nfor j in range(1, M + 1):\n    if K_list.count(j) == N:\n        cnt += 1\n\nprint(cnt)", "N, M = [int(x) for x in input().split()]\nLike = [0 for _ in range(M+1)]\nfor i in range(N):\n  KA = [int(x) for x in input().split()]\n  for j in range(1, KA[0]+1):\n    Like[KA[j]] += 1\nans = 0\nfor i in range(M+1):\n  if(Like[i]==N):\n    ans += 1\nprint(ans)", "n, m = list(map(int, input().split()))\n\nfor i in range(n):\n    a = list(map(int, input().split()))\n    if i == 0:\n        answer = set(a[1:])\n    else:\n        answer = answer & set(a[1:])\n\nprint(len(answer))", "n , m = map(int, input().split())\ne = 0\nd = []\nfor i in range(1, n + 1):\n  l = list(map(int, input().split()))\n  for a in range(l[0]):\n    b = l[a + 1]\n    d.append(b)\nfor j in range(1, m + 1):\n  c = 0\n  for k in d:\n    if k == j:\n      c += 1\n  if c == n:\n    e += 1\nprint(e)", "N,M=list(map(int,input().split()))\nka=[[int(x) for x in input().split()] for _ in range(N)]\nK=list()\nA=list()\nfor i in range(N):\n  K.append(ka[i][0])\n  A.append(ka[i][1:])\nans=[0]*(M+1)\nfor i in range(N):\n  for j in range(K[i]):\n    ans[A[i][j]]+=1\ncnt=0\nfor i in range(M+1):\n  if ans[i]==N:\n    cnt+=1\nprint(cnt)\n", "n,m = list(map(int, input().split()))\n_, *A = list(map(int, input().split()))\nfood = set(A)\nfor _ in range(n-1):\n    k, *A = list(map(int, input().split()))\n    food &= set(A)\nprint((len(food)))\n", "n,m=map(int, input().split())\nka=[list(map(int, input().split())) for i in range(n)]\ncnt=0\nfor i in range(m+1):\n    suki=0\n    for j in range(n):\n        if i in ka[j][1:]:\n            suki+=1\n    if suki==n:\n        cnt+=1\nprint(cnt)", "n,m = map(int,input().split())\ns = set(range(1,m+1))\nfor i in range(n):\n    k,*a = map(int,input().split())\n    s &= set(a)\nprint(len(s))", "n,m=map(int,input().split())\n\nl=[]\nfor i in range(n):\n  p=list(map(int,input().split()))\n  for j in range(1,p[0]+1):\n    l.append(p[j])\n\ncnt=0\n\nfor k in l:\n  if l.count(k)==n:\n    cnt+=1\n\nprint(cnt//n)", "N, M = map(int, input().split())\nfood = []\nfor i in range(N):\n  food.append(list(map(int, input().split())))\n\nlike = [0 for i in range(M)]\nfor i in range(N):\n  for j in range(food[i][0]):\n    like[food[i][j+1]-1] += 1\nprint(like.count(N))", "n,m = map(int,input().split())\ndata = [0]*n\nfor i in range(n):\n    data[i] = input().split()\nans = 0\nif n == 1:\n    print(len(data[0]) - 1)\nelse:\n    for i in range(1,int(data[0][0]) + 1):\n        bool = True\n        for j in range(1,n):\n            if data[0][i] not in data[j][1:]:\n                bool = False\n        if bool:\n            ans += 1\n    print(ans)", "from collections import Counter\n\n\ndef mapt(fn, *args):\n    return tuple(map(fn, *args))\n\n\ndef Input():\n    return mapt(int, input().split(\" \"))\n\n\ndef main():\n    n, m = Input()\n    data = [Input()[1:] for _ in range(n)]\n    d = Counter(num for row in data for num in row)\n    print(sum(value == n for value in d.values()))\n\n\nmain()", "N, M = map(int, input().split())\n\nK, *result = map(int, input().split())\nresult = set(result)\nfor _ in range(N-1):\n    K, *A = map(int, input().split())\n    A = set(A)\n    result = result & A\n    \nprint(len(result))", "n, m = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\nx = [0]*m\nfor i in range(n):\n    for j in range(1, a[i][0] + 1):\n        for k in range(1, 31):\n            if a[i][j] == k:\n                x[k-1] += 1\nans = 0\nfor l in x:\n    if l == n:\n        ans += 1\nprint(ans)", "n,m=map(int,input().split())\nka=[list(map(int,input().split())) for _ in range(n)]\n\nflg = [0] * (m+1)\nfor i in range(n):\n  for j in range(1,ka[i][0]+1):\n    food = ka[i][j]\n    flg[food] += 1\n\nresult = 0\nfor i in range(m+1):\n  if flg[i] == n:\n    result += 1\nprint(result)", "#ABC118B\nn,m = list(map(int,input().split()))\nl = [0]*m\nfor i in range(n):\n    k,*a = list(map(int,input().split()))\n    for j in range(k):\n        l[a[j]-1]+=1\n\nprint((l.count(n)))\n", "n, m = map(int, input().split())\n\nans = [0] * m\n\nfor i in range(n):\n    tmp = list(map(int, input().split()))\n    for j in range(len(tmp)):\n        if j == 0:\n            pass\n        else:\n            ans[tmp[j] - 1] += 1\nprint(ans.count(n))", "n, m = map(int, input().split())\nk_a = [ list(map(int, input().split())) for _ in range(n) ]\n\nans = {}\nfor a in k_a:\n    for i in a[1:]:\n        if i in ans.keys():\n            ans[i] += 1\n        else:\n            ans[i] = 1\nprint(sum([ 1 for i,v in ans.items() if v == n ]))", "n,m =  map(int,input().split())\nk = []\ncnt = 0\n\nfor i in range(n):\n    tmp = input().split()\n    tmp.pop(0)\n    k += tmp\n\nfor i in range(m):\n    if k.count(str(i+1)) == n:\n        cnt += 1\n\nprint(cnt)", "a = list(map(int,input().split()))\n\nN = a[0]\nM = a[1]\n\nctr = [0 for i in range(M)]\n\n\nfor i in range(N):\n    b =  list(map(int,input().split()))\n\n    for j in range(b[0]):\n        for k in range(M):\n            if b[j+1] == k+1:\n                ctr[k] += 1\n\nflag = [N == ctr[j] for j in range(M)]\nprint(sum(flag))", "n,m = map(int, input().split())\nline = [0 for i in range(m+1)]\nans = 0\nfor i in range(n):\n  like_list = list(map(int, input().split()))\n  for j in range(like_list[0]):\n    line[like_list[j+1]] += 1\nfor i in range(m+1):\n  if line[i] == n:\n    ans += 1\nprint(ans)", "N, M = map(int, input().split())\n  \nl = [0]*M\nfor i in range(N):\n  L = list(map(int, input().split()))\n  num = L[0]\n  A = L[1:]\n  for j in range(num):\n    l[A[j]-1] += 1\n\n# l\u306e\u8981\u7d20\u3067N\u3067\u3042\u308b\u500b\u6570\u3092\u51fa\u529b\nprint(l.count(N))", "n,m = map(int, input().split())\n\nab = [list(map(int, input().split())) for _ in range(n)]\n\ndp = [0]*m\n\nfor i in range(n):\n    for j in range(ab[i][0]):\n        k = ab[i][j+1]\n        dp[k-1] +=1\n        \nprint(dp.count(n))", "n, m = map(int, input().split())\ns = set(range(1, m+1))\nfor _ in range(n):\n    k, *a = map(int, input().split())\n    s&=set(a)\n\nprint(len(s))", "n,m=map(int,input().split())\nl = [0]*m\nfor i in range(n):\n    a = list(map(int, input().split()))\n    del a[0]\n    for i in a:\n        l[i-1] +=1\nprint(l.count(n))", "n, m = map(int, input().split())\n\na = set(range(1, m + 1))\nfor _ in range(n):\n    k, *aa = map(int, input().split())\n    a = a & set(aa)\n\nprint(len(a))", "#-*-coding:utf-8-*-\nimport sys\ninput=sys.stdin.readline\n\ndef main():\n    interview=[]\n    n,m = map(int,input().split())\n    interview=[list(map(int,input().split())) for _ in range(n)]\n    set_data={}\n\n    for data in interview:\n        if len(set_data)==0:\n            set_data  = set(data[1:])\n        else:\n            set_data=set_data & set(data[1:])\n    print(len(set_data))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "n, m = list(map(int, input().split()))\nlike = [0]*m\nfor _ in range(n):\n    al = list(map(int, input().split()))\n    k = al[0]\n    ai = al[1:]\n    for a in ai:\n        like[a-1] += 1\n\nprint((like.count(n)))\n", "n,m = map(int,input().split())\nL = [i for i in range(1,m+1)]\nfor j in range(n):\n    l = list(map(int,input().split()))\n    del l[0]\n    L = set(l) & set(L)\nprint(len(L))", "import itertools\n\nN, M = map(int, input().split())\nL = []\nres, cnt = 0, 1\n\nfor i in range(N):\n    K = list(map(int, input().split()))\n    L.append(K[1:])\n\nL = list(itertools.chain.from_iterable(L))\nL.sort()\nL.append(100)\n\nfor i in range(len(L)-1):\n    if L[i] == L[i+1]:\n        cnt += 1\n    else:\n        if cnt == N:\n            res += 1\n        cnt = 1\n    \n\nprint(res)", "n,m=map(int,input().split())\nall=[0 for i in range(m)]\nans=0\nfor i in range(n):\n    p=list(map(int,input().split()))\n    last=p[0]+1\n    for l in range(1,last):\n        all[p[l]-1]+=1\nfor i in all:\n    if i==n:\n        ans+=1\nprint(ans)", "import sys\n\ninput = sys.stdin.readline\n\n\ndef main():\n    N, M = [int(x) for x in input().split()]\n    KA = [[int(x) for x in input().split()] for _ in range(N)]\n\n    ans = [0] * M\n\n    for ka in KA:\n        for a in ka[1:]:\n            ans[a - 1] += 1\n\n    print((sum([int(x == N) for x in ans])))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, m = list(map(int, input().split()))\nlike = [0] * m\n\nfor i in range(n):\n    a = list(map(int, input().split()))[1:]\n    for j in a:  like[j-1] += 1\n\nprint((sum(i==n for i in like)))\n", "n,m=list(map(int,input().split()))\nc=[]\ncnt=0\nfor i in range(n):\n    a=list(map(int,input().split()))\n    for j in range(1,len(a)):\n        c.append(a[j])\n    \nfor j in range(1,m+1):\n    if c.count(j)==n:\n        cnt += 1\nprint(cnt)\n", "n, m = list(map(int, input().split()))\ns = set(i for i in range(1,m+1))\nfor i in range(n):\n    k,*a = list(map(int,input().split()))\n    s &= set(a)\n\nprint((len(s)))\n", "N,M=map(int,input().split())\nl=[0]*M\nfor i in range(N):\n    A=list(map(int,input().split()))\n    K=A[0]\n    A=A[1:]\n    for j in range(K):\n        l[A[j]-1]+=1\nprint(l.count(N))", "N,M=list(map(int,input().split()))\ncnt=[0 for _ in range(M)]\nfor _ in range(N):\n    A=list(map(int,input().split()))\n    for j in range(1,A[0]+1):\n        cnt[A[j]-1]+=1\nprint((cnt.count(N)))\n", "n,m = map(int,input().split())\nans = set(range(1,31))\nfor i in range(n):\n  kA = list(map(int,input().split()))\n  k = kA[0]\n  A = kA[1:]\n  ans = ans & set(A)\nprint(len(ans))", "n, m = map(int, input().split())\nKA = [list(map(int, input().split())) for _ in range(n)]\n\nans = [0] * m\n\nfor i in range(n):\n    A = KA[i][1:]\n    for a in A:\n        ans[a-1] += 1\n        \ncnt = 0\nfor a in ans:\n  if a == n:\n    cnt += 1\nprint(cnt)", "import sys\nimport copy\nimport math\nimport itertools\nimport numpy as np\nl = [int(c) for c in input().split()]\nN = l[0]\nM = l[1]\nKA = [list(map(int,input().split())) for c in range(N)]\n\nF = [0]*M\n\nfor i in range(N):\n    for j in range(1,KA[i][0]+1):\n        F[KA[i][j]-1]+=1\nprint(F.count(N))", "n, m = map(int, input().split())\ndic = {}\nans = 0\n\nfor _ in range(n):\n  lis = input().split()\n  for i in range(1, len(lis)):\n    if lis[i] in dic:\n      dic[lis[i]] += 1\n    else:\n      dic[lis[i]] = 1\n\nfor v in dic.values():\n  if v == n:\n    ans += 1\n\nprint(ans)", "N, M = map(int, input().split())\n\nA_list = []\nfor _ in range(N):\n    A = list(map(int, input().split()))\n    del A[0]\n    A_list.extend(A)\n\nans = 0\nfor i in range(1, M + 1):\n    if A_list.count(i) == N:\n        ans += 1\n\nprint(ans)", "n,m=map(int, input().split())\na=[list(map(int,input().split())) for i in range(n)]\ncount=0\nfor i in range(1,m+1):\n  check=True\n  for j in range(n):\n    if i not in a[j][1:]:\n      check=False\n  if check:\n    count+=1\nprint(count)", "n, m = list(map(int, input().split()))\n\ns = set(range(1, m+1))\nfor i in range(n):\n    k, *a = list(map(int, input().split()))\n    s &= set(a)\n\nprint((len(s)))\n", "N, M = map(int, input().split())\nA = []\nfor _ in range(N):\n    KA = list(map(int, input().split()))\n    A.append(KA[1:])\nans = [0]*M\nfor a in A:\n    for i in a:\n        ans[i-1] += 1\nprint(ans.count(N))", "import math\nimport collections\nfrom itertools import product\n\nii = lambda : int(input())\nmi = lambda : map(int,input().split())\nli = lambda : list(map(int,input().split()))\n\nn,m = mi()\nka = [li() for _ in range(n)]\n\nfood = [0]*m\nfor i in range(n):\n    for j in range(1,ka[i][0]+1,1):\n        food[ka[i][j]-1] += 1\nprint(food.count(n))", "n, m = list(map(int, input().split()))\nS = set(range(1, m+1))\n\nfor i in range(n):\n    k, *a = list(map(int, input().split()))\n    S &= set(a)\n\nprint((len(S)))\n", "n,m=list(map(int,input().split()))\nl=[0]*(m+1)\ncount=0\nfor i in range(n):\n    k=list(map(int,input().split()))\n    for j in range(1,k[0]+1):\n        l[k[j]]+=1\nfor i in range(1,m+1):\n    if l[i]==n:\n        count+=1\nprint(count)\n", "N, M = list(map(int, input().split()))\nK1 = []\nfor i in range(N):\n    K1.append(list(map(int, input().split())))\n    \nnew_K1 = []\nfor n in range(N):\n    del K1[n][0] \n    new_K1.extend(K1[n])\n\ncount = 0\nfor y in range(1, M + 1):\n    if new_K1.count(y) == N:\n        count += 1\n\nprint(count)\n", "n,m=map(int,input().split())\nl=[0 for i in range(m)]\nfor i in range(n):\n  ka=[int(x) for x in input().split()]\n  k=ka[0]\n  for j in range(1,k+1):\n    l[ka[j]-1]+=1\n\nans=0\nfor i in l:\n  if i==n:\n    ans+=1\nprint(ans)", "n,m = map(int,input().split())\n\nfood = [0]*(m+1)\nfor i in range(n):\n    l = [int(x) for x in input().split()]\n    l = set(l[1:])\n    for x in l:\n        food[x] += 1\n\nans = food.count(n)\nprint(ans)", "import numpy as np\nn,m = map(int,input().split())\nk = np.zeros(n,dtype=int)\na = np.zeros((n,m),dtype=int)\nfor i in range(n):\n    p = list(map(int, input().split()))\n    k[i] = p[0]\n    for j in range(1,len(p)):\n        a[i][j-1] = p[j]\nans = np.zeros(n+m,dtype=int)\nfor i in range(n):\n    for j in range(m):\n        if a[i][j] != 0:\n            s = a[i][j]-1\n            ans[s] += 1\nan = 0\nfor i in range(n+m):\n    if ans[i] == n:\n        an += 1\nprint(an)", "\n# ABC118\n# B Foods Loved by Everyone\n# N\u4eba\u3001M\u7a2e\u985e\n# i\u306e\u4eba\u306fAik\u3060\u3051\u597d\u304d\n# M\u7a2e\u985e\u306e\u4e2d\u306bN\u4eba\u5168\u54e1\u304c\u597d\u304d\u306a\u3082\u306e\u304c\u3042\u308b\u304b\u30c1\u30a7\u30c3\u30af\n# N\u4eba\u5206\u306eAik\u30ea\u30b9\u30c8\u3092\u7a4d\u96c6\u5408\u3059\u308b\nN, M = list(map(int,input().split()))\nA = [list(map(int,input().split())) for _ in range(N)]\nfor x in A:  # A[0]=k\u306f\u4f59\u8a08\u306a\u306e\u3067\u524a\u9664\n    n = x.pop(0)\nI = set(A[0])  # interesection\u4f7f\u3046\u305f\u3081A[0]\u3092set()\nfor i in range(1,N):\n    # set(a).interesection(b)\u3067a\u3068b\u306e\u7a4d\u96c6\u5408\n    I = I.intersection(A[i]) # I\u3092\u7a4d\u96c6\u5408\u306e\u7d50\u679c\u3068\u3057\u3066\u3001\u6b8b\u308a\u306eA[i]\u3068\u6bd4\u8f03\nprint((len(I)))  # \u4f55\u7a2e\u985e\uff1f\u306a\u306e\u3067len()\n", "n,m=list(map(int,input().split()))\nans = []\nfor i in range(1, m+1):\n  ans.append(i)\nans = set(ans)\nfor i in range(n):\n  a = list(map(int,input().split()))\n  del a[0]\n  a = set(a)\n  ans = ans & a\nprint((len(ans)))\n", "n,m = map(int, input().split())\nk = [list(map(int, input().split())) for i in range(n)]\nc = 0\nfor i in range(1,m+1):\n    for j in range(n):\n        if i not in k[j][1:]:\n            break\n    else:\n        c+=1\nprint(c)", "# import numpy as np\n# import math\n\n# from scipy.special import perm : perm(n, r, exact=True)\n# from scipy.special import comb : comb(n, r, exact=True)\n\n# import itertools\n# for v in itertools.combinations(L, n):M.append(list(v))\n\n# from numba import njit\n# @njit('f8(i8,i8,i8,i8,f8[:,:,:])', cache=True)\n\n\n\"\"\" Definitions  \"\"\"\n\ndef lcm(a, b):\n    return a*b//math.gcd(a, b)\n\nMOD = 10**9+7\n\n# ============================================================\n\nn, m = list(map(int, input().split()))\n\nL = [0]*(m+1)\n\nfor i in range(n):\n    A = list(map(int, input().split()))\n    for k in range(1, A[0]+1):\n        L[A[k]] += 1\nprint((L.count(n)))\n"]