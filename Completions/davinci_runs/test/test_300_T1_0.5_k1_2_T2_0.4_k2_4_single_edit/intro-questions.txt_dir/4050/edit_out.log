2022-04-17 22:06:52.386033 num operations 1
2022-04-17 22:06:52.386076 size on input set 1
2022-04-17 22:06:57.550052 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1], sep=\" \")\n\nmain()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res), end='\\n')\n    for i, j in res:\n        print(i + 1, j, end='\\n')\n\nmain()\n"
    }
  ],
  "created": 1650233212,
  "object": "edit"
}
2022-04-17 22:06:57.550289 fix syntax errors 4 ['\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n', '\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n', '\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1], sep=" ")\n\nmain()\n', "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res), end='\\n')\n    for i, j in res:\n        print(i + 1, j, end='\\n')\n\nmain()\n"]
2022-04-17 22:06:57.550334 size on output set 3
2022-04-17 22:06:57.550345 num operations 1
2022-04-17 22:06:57.550351 size on input set 1
2022-04-17 22:07:04.300505 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef find_blocks(a, f):\n    n = len(a)\n    d = {}\n    for i in range(n):\n        for j in range(i, n):\n            s = f(a[i:j+1])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i, n):\n            s = f(a[i:j+1])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a, sum)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef find_blocks(a):\n    n = len(a)\n    d = {}\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j + 1])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j + 1])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l + 1, r + 1)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef find_blocks(a):\n    n = len(a)\n    d = {}\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j + 1])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j + 1])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\ndef find_blocks(a):\n    n = len(a)\n    d = {}\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j + 1])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j + 1])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650233217,
  "object": "edit"
}
2022-04-17 22:07:04.300799 fix syntax errors 4 ['\n\ndef find_blocks(a, f):\n    n = len(a)\n    d = {}\n    for i in range(n):\n        for j in range(i, n):\n            s = f(a[i:j+1])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i, n):\n            s = f(a[i:j+1])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a, sum)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == "__main__":\n    main()\n', '\ndef find_blocks(a):\n    n = len(a)\n    d = {}\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j + 1])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j + 1])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l + 1, r + 1)\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef find_blocks(a):\n    n = len(a)\n    d = {}\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j + 1])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j + 1])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef find_blocks(a):\n    n = len(a)\n    d = {}\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j + 1])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j + 1])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-17 22:07:04.300844 size on output set 3
