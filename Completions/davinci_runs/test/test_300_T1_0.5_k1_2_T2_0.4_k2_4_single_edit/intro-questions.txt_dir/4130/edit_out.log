2022-04-17 22:29:17.743452 num operations 1
2022-04-17 22:29:17.743478 size on input set 1
2022-04-17 22:29:33.484849 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# The idea is to sort the weights and then go over them. If we are at a weight that is the same as the previous one, we can increase it by one and then we are sure that it will be different from the previous weight. If we are at a weight that is bigger than the previous one by more than one, we can decrease it by one, and we are sure that it will be different from the previous weight. Otherwise, we can't change the weight at all. We can do this in linear time, so overall complexity is O(n).\n\nimport sys\nreadline = sys.stdin.readline\n\ndef main():\n    n = int(readline())\n    a = list(map(int, readline().split()))\n    a.sort()\n    ans = 1\n    prev = a[0]\n    for i in range(1, n):\n        if a[i] == prev:\n            prev += 1\n        elif a[i] > prev + 1:\n            prev = a[i] - 1\n        ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n# SOLUTION 1\n# The idea is to sort the weights and then go over them.\n# If we are at a weight that is the same as the previous one,\n# we can increase it by one and then we are sure that it will be\n# different from the previous weight.\n# If we are at a weight that is bigger than the previous one\n# by more than one, we can decrease it by one, and we are sure\n# that it will be different from the previous weight.\n# Otherwise, we can't change the weight at all.\n# We can do this in linear time, so overall complexity is O(n).\n\n# import sys\n# readline = sys.stdin.readline\n\n# def main():\n#     n = int(readline())\n#     a = list(map(int, readline().split()))\n#     a.sort()\n#     ans = 1\n#     prev = a[0]\n#     for i in range(1, n):\n#         if a[i] == prev:\n#             prev += 1\n#         elif a[i] > prev + 1:\n#             prev = a[i] - 1\n#         ans += 1\n#     print(ans)\n\n# if __name__ == '__main__':\n#     main()\n\n# SOLUTION 2\n# The idea is to sort the weights and then go over them.\n# If we are at a weight that is the same as the previous one,\n# we can increase it by one and then we are sure that it will be\n# different from the previous weight.\n# If we are at a weight that is bigger than the previous one\n# by more than one, we can decrease it by one, and we are sure\n# that it will be different from the previous weight.\n# Otherwise, we can't change the weight at all.\n# We can do this in linear time, so overall complexity is O(n).\n\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nans = 1\nprev = a[0]\nfor i in range(1, n):\n    if a[i] == prev:\n        prev += 1\n    elif a[i] > prev + 1:\n        prev = a[i] - 1\n    ans += 1\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "# SOLUTION\n# The idea is to sort the weights and then go over them.\n# If we are at a weight that is the same as the previous one,\n# we can increase it by one and then we are sure that it will be\n# different from the previous weight.\n# If we are at a weight that is bigger than the previous one\n# by more than one, we can decrease it by one, and we are sure\n# that it will be different from the previous weight.\n# Otherwise, we can't change the weight at all.\n# We can do this in linear time, so overall complexity is O(n).\n\nimport sys\nreadline = sys.stdin.readline\n\ndef main():\n    n = int(readline())\n    a = list(map(int, readline().split()))\n    a.sort()\n    ans = 1\n    prev = a[0]\n    for i in range(1, n):\n        if a[i] == prev:\n            prev += 1\n        elif a[i] > prev + 1:\n            prev = a[i] - 1\n        ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\n# SOLUTION \n# The idea is to sort the weights and then go over them.\n# If we are at a weight that is the same as the previous one,\n# we can increase it by one and then we are sure that it will be\n# different from the previous weight.\n# If we are at a weight that is bigger than the previous one\n# by more than one, we can decrease it by one, and we are sure\n# that it will be different from the previous weight.\n# Otherwise, we can't change the weight at all.\n# We can do this in linear time, so overall complexity is O(n).\n\nimport sys\nreadline = sys.stdin.readline\n\ndef main():\n    n = int(readline())\n    a = list(map(int, readline().split()))\n    a.sort()\n    ans = 1\n    prev = a[0]\n    for i in range(1, n):\n        if a[i] == prev:\n            prev += 1\n        elif a[i] > prev + 1:\n            prev = a[i] - 1\n        ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650234557,
  "object": "edit"
}
2022-04-17 22:29:33.485147 fix syntax errors 4 ["\n\n# The idea is to sort the weights and then go over them. If we are at a weight that is the same as the previous one, we can increase it by one and then we are sure that it will be different from the previous weight. If we are at a weight that is bigger than the previous one by more than one, we can decrease it by one, and we are sure that it will be different from the previous weight. Otherwise, we can't change the weight at all. We can do this in linear time, so overall complexity is O(n).\n\nimport sys\nreadline = sys.stdin.readline\n\ndef main():\n    n = int(readline())\n    a = list(map(int, readline().split()))\n    a.sort()\n    ans = 1\n    prev = a[0]\n    for i in range(1, n):\n        if a[i] == prev:\n            prev += 1\n        elif a[i] > prev + 1:\n            prev = a[i] - 1\n        ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# SOLUTION 1\n# The idea is to sort the weights and then go over them.\n# If we are at a weight that is the same as the previous one,\n# we can increase it by one and then we are sure that it will be\n# different from the previous weight.\n# If we are at a weight that is bigger than the previous one\n# by more than one, we can decrease it by one, and we are sure\n# that it will be different from the previous weight.\n# Otherwise, we can't change the weight at all.\n# We can do this in linear time, so overall complexity is O(n).\n\n# import sys\n# readline = sys.stdin.readline\n\n# def main():\n#     n = int(readline())\n#     a = list(map(int, readline().split()))\n#     a.sort()\n#     ans = 1\n#     prev = a[0]\n#     for i in range(1, n):\n#         if a[i] == prev:\n#             prev += 1\n#         elif a[i] > prev + 1:\n#             prev = a[i] - 1\n#         ans += 1\n#     print(ans)\n\n# if __name__ == '__main__':\n#     main()\n\n# SOLUTION 2\n# The idea is to sort the weights and then go over them.\n# If we are at a weight that is the same as the previous one,\n# we can increase it by one and then we are sure that it will be\n# different from the previous weight.\n# If we are at a weight that is bigger than the previous one\n# by more than one, we can decrease it by one, and we are sure\n# that it will be different from the previous weight.\n# Otherwise, we can't change the weight at all.\n# We can do this in linear time, so overall complexity is O(n).\n\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nans = 1\nprev = a[0]\nfor i in range(1, n):\n    if a[i] == prev:\n        prev += 1\n    elif a[i] > prev + 1:\n        prev = a[i] - 1\n    ans += 1\nprint(ans)\n", "# SOLUTION\n# The idea is to sort the weights and then go over them.\n# If we are at a weight that is the same as the previous one,\n# we can increase it by one and then we are sure that it will be\n# different from the previous weight.\n# If we are at a weight that is bigger than the previous one\n# by more than one, we can decrease it by one, and we are sure\n# that it will be different from the previous weight.\n# Otherwise, we can't change the weight at all.\n# We can do this in linear time, so overall complexity is O(n).\n\nimport sys\nreadline = sys.stdin.readline\n\ndef main():\n    n = int(readline())\n    a = list(map(int, readline().split()))\n    a.sort()\n    ans = 1\n    prev = a[0]\n    for i in range(1, n):\n        if a[i] == prev:\n            prev += 1\n        elif a[i] > prev + 1:\n            prev = a[i] - 1\n        ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# SOLUTION \n# The idea is to sort the weights and then go over them.\n# If we are at a weight that is the same as the previous one,\n# we can increase it by one and then we are sure that it will be\n# different from the previous weight.\n# If we are at a weight that is bigger than the previous one\n# by more than one, we can decrease it by one, and we are sure\n# that it will be different from the previous weight.\n# Otherwise, we can't change the weight at all.\n# We can do this in linear time, so overall complexity is O(n).\n\nimport sys\nreadline = sys.stdin.readline\n\ndef main():\n    n = int(readline())\n    a = list(map(int, readline().split()))\n    a.sort()\n    ans = 1\n    prev = a[0]\n    for i in range(1, n):\n        if a[i] == prev:\n            prev += 1\n        elif a[i] > prev + 1:\n            prev = a[i] - 1\n        ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-17 22:29:33.485272 size on output set 4
2022-04-17 22:29:33.485285 num operations 1
2022-04-17 22:29:33.485291 size on input set 1
2022-04-17 22:30:10.994591 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n# a.sort()\n\n# count = 1\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n\n\na.sort()\n\ncount = 1\nfor i in range(1, n):\n    if a[i] != a[i-1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\ncount = 1\nfor i in range(1, n):\n    if a[i] != a[i-1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\ncount = 1\nfor i in range(1, n):\n    if a[i] != a[i-1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 3,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\ncount = 1\nfor i in range(1, n):\n    if a[i] != a[i-1]:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650234573,
  "object": "edit"
}
2022-04-17 22:30:10.994808 fix syntax errors 4 ['\n\nn = int(input())\na = list(map(int, input().split()))\n# a.sort()\n\n# count = 1\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n# count = 0\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n\n# print(count)\n\n# print(a)\n\n# a.sort()\n\n\n\na.sort()\n\ncount = 1\nfor i in range(1, n):\n    if a[i] != a[i-1]:\n        count += 1\n\nprint(count)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\ncount = 1\nfor i in range(1, n):\n    if a[i] != a[i-1]:\n        count += 1\n\nprint(count)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\ncount = 1\nfor i in range(1, n):\n    if a[i] != a[i-1]:\n        count += 1\n\nprint(count)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\ncount = 1\nfor i in range(1, n):\n    if a[i] != a[i-1]:\n        count += 1\n\nprint(count)\n']
2022-04-17 22:30:10.994920 size on output set 2
