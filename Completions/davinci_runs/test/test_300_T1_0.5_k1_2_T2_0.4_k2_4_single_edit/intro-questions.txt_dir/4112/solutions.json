["n, k, x = list(map(int, input().split()))\na = [None] + list(map(int, input().split()))\n\nlo, hi = 0, 10 ** 9 * 5000\nq = [None] * (n + 1)\n\ndef get(mid):\n    f, r = 0, 0\n    q[0] = 0, 0, 0\n    for i in range(1, n + 1):\n        if q[r][2] == i - k - 1: r += 1\n        cur = q[r][0] + a[i] - mid, q[r][1] + 1, i\n        while r <= f and q[f] <= cur: f -= 1\n        f += 1\n        q[f] = cur\n    if q[r][2] == n - k: r += 1\n    return q[r]\n\nwhile lo < hi:\n    mid = (lo + hi + 1) >> 1\n    _, cnt, _ = get(mid)\n    if cnt >= x:\n        lo = mid\n    else:\n        hi = mid - 1\n\nsm, _, _ = get(lo)\nans = max(-1, sm + x * lo)\nprint(ans)\n", "import sys\nfrom math import *\nfrom collections import deque\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int, minp().split()))\n\ndef solve():\n\tn, k, x = mints()\n\ta = list(mints())\n\td = [-1e50]*n\n\tp = [-1e50]*n\n\tfor i in range(0,k):\n\t\td[i] = a[i]\n\tq = deque()\n\tfor xx in range(1,x):\n\t\td,p = p,d\n\t\tq.clear()\n\t\tfor nn in range(xx-1,n):\n\t\t\twhile len(q) != 0 and q[0][1] < nn-k:\n\t\t\t\tq.popleft()\n\t\t\tif len(q):\n\t\t\t\td[nn] = q[0][0] + a[nn]\n\t\t\telse:\n\t\t\t\td[nn] = -1e50\n\t\t\twhile len(q) and q[-1][0] <= p[nn]:\n\t\t\t\tq.pop();\n\t\t\tq.append((p[nn], nn))\n\tm = -1\n\tfor i in range(n-k, n):\n\t\tm = max(m, d[i])\n\tprint(m)\n\nsolve()\n"]