2022-04-17 23:04:39.377024 num operations 1
2022-04-17 23:04:39.377045 size on input set 1
2022-04-17 23:04:49.861020 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/python\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    names = [sys.stdin.readline().strip() for _ in range(N)]\n    dic = {}\n    for name in names:\n        if name[0] in dic:\n            dic[name[0]] += 1\n        else:\n            dic[name[0]] = 1\n    keys = dic.keys()\n    ans = 0\n    for i in range(len(keys)):\n        for j in range(i+1, len(keys)):\n            for k in range(j+1, len(keys)):\n                ans += dic[keys[i]] * dic[keys[j]] * dic[keys[k]]\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\n\ndef main():\n    N = int(sys.stdin.readline())\n    names = [sys.stdin.readline().strip() for _ in range(N)]\n    dic = dict()\n    for name in names:\n        if name[0] in dic:\n            dic[name[0]] += 1\n        else:\n            dic[name[0]] = 1\n    keys = list(dic.keys())\n    ans = 0\n    for i in range(len(keys)-2):\n        for j in range(i+1, len(keys)-1):\n            for k in range(j+1, len(keys)): # O(N^3)\n                ans += dic[keys[i]] * dic[keys[j]] * dic[keys[k]]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    names = [sys.stdin.readline().strip() for _ in range(N)]\n    dic = {}\n    for name in names:\n        if name[0] in dic:\n            dic[name[0]] += 1\n        else:\n            dic[name[0]] = 1\n    keys = dic.keys()\n    ans = 0\n    for i in range(len(keys)-2):\n        for j in range(i+1, len(keys)-1):\n            for k in range(j+1, len(keys)):\n                ans += dic[keys[i]] * dic[keys[j]] * dic[keys[k]] \n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())  # read a line with a single integer\n    for i in xrange(1, N + 1):\n        s = sys.stdin.readline().strip()\n        print \"Case #{}: {}\".format(i, solve(s))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650236679,
  "object": "edit"
}
2022-04-17 23:04:49.861243 fix syntax errors 4 ["#!/usr/bin/python\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    names = [sys.stdin.readline().strip() for _ in range(N)]\n    dic = {}\n    for name in names:\n        if name[0] in dic:\n            dic[name[0]] += 1\n        else:\n            dic[name[0]] = 1\n    keys = dic.keys()\n    ans = 0\n    for i in range(len(keys)):\n        for j in range(i+1, len(keys)):\n            for k in range(j+1, len(keys)):\n                ans += dic[keys[i]] * dic[keys[j]] * dic[keys[k]]\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\n\ndef main():\n    N = int(sys.stdin.readline())\n    names = [sys.stdin.readline().strip() for _ in range(N)]\n    dic = dict()\n    for name in names:\n        if name[0] in dic:\n            dic[name[0]] += 1\n        else:\n            dic[name[0]] = 1\n    keys = list(dic.keys())\n    ans = 0\n    for i in range(len(keys)-2):\n        for j in range(i+1, len(keys)-1):\n            for k in range(j+1, len(keys)): # O(N^3)\n                ans += dic[keys[i]] * dic[keys[j]] * dic[keys[k]]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    names = [sys.stdin.readline().strip() for _ in range(N)]\n    dic = {}\n    for name in names:\n        if name[0] in dic:\n            dic[name[0]] += 1\n        else:\n            dic[name[0]] = 1\n    keys = dic.keys()\n    ans = 0\n    for i in range(len(keys)-2):\n        for j in range(i+1, len(keys)-1):\n            for k in range(j+1, len(keys)):\n                ans += dic[keys[i]] * dic[keys[j]] * dic[keys[k]] \n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", '\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())  # read a line with a single integer\n    for i in xrange(1, N + 1):\n        s = sys.stdin.readline().strip()\n        print "Case #{}: {}".format(i, solve(s))\n\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-17 23:04:49.861282 size on output set 4
2022-04-17 23:04:49.861292 num operations 1
2022-04-17 23:04:49.861298 size on input set 1
2022-04-17 23:04:53.821245 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# TODO\n\n# https://atcoder.jp/contests/abc117/tasks/abc117_e\n# https://atcoder.jp/contests/abc117/tasks/abc117_d\n"
    },
    {
      "index": 1,
      "text": "\n\n# TODO\n\n# https://atcoder.jp/contests/abc117/tasks/abc117_e\n# https://atcoder.jp/contests/abc117/tasks/abc117_d\n"
    },
    {
      "index": 2,
      "text": "# TODO\n# https://atcoder.jp/contests/abc117/tasks/abc117_d\n"
    },
    {
      "index": 3,
      "text": "\n\n# TODO:\n# https://atcoder.jp/contests/abc117/tasks/abc117_d\n"
    }
  ],
  "created": 1650236689,
  "object": "edit"
}
2022-04-17 23:04:53.821463 fix syntax errors 4 ['\n\n# TODO\n\n# https://atcoder.jp/contests/abc117/tasks/abc117_e\n# https://atcoder.jp/contests/abc117/tasks/abc117_d\n', '\n\n# TODO\n\n# https://atcoder.jp/contests/abc117/tasks/abc117_e\n# https://atcoder.jp/contests/abc117/tasks/abc117_d\n', '# TODO\n# https://atcoder.jp/contests/abc117/tasks/abc117_d\n', '\n\n# TODO:\n# https://atcoder.jp/contests/abc117/tasks/abc117_d\n']
2022-04-17 23:04:53.821496 size on output set 3
