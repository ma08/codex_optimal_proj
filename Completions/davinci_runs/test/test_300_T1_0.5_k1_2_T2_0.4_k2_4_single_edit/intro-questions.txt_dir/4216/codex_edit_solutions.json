["\nimport math\n\ndef main():\n    N = int(input())\n    r = int(math.ceil(math.sqrt(N)))\n    for i in range(r, 0, -1):  # range(start, stop, step)\n        if N % i == 0:\n            print(N // i // 10 ** (len(str(i)) - 1))\n            break\n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef main():\n    N = int(input())\n    r = math.ceil(math.sqrt(N))\n    for i in range(r, 0, -1):\n        if N % i == 0:\n            print(N // i // 10 ** (len(str(i)) - 1))\n            break\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport math\n\nN = int(input())\n\nd = math.floor(math.log10(N))\nprint(int(d))\n", "#!/bin/python\n\nimport math\n\nN = int(input())\n\nd = math.floor(math.log10(N)) + 1\nprint(int(d))\n", "\nimport math\n\nN = int(input())\n\nd = math.floor(math.log10(N)) + 1\nprint(int(d))\n", "import math\n\ndef main():\n    n = int(input())\n    r = math.ceil(math.sqrt(n))\n    for i in range(r, 0, -1):\n        if n % i == 0:\n            print(n // i // 10 ** (len(str(i)) - 1))\n            break\n\nif __name__ == '__main__':\n    main()\n", "import math\n\nN = int(input())\n\nd = math.floor(math.log10(N)) + 1\nprint(int(d))\n"]