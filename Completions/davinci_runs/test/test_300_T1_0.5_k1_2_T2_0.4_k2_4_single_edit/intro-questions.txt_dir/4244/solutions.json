["import numpy as np\nN = int(input())\nXi = list(map(int, input().split()))\nXi = np.array(Xi)\nmin = float('inf')\nfor i in range(1, 101):\n    tmp = np.sum(np.square(Xi - i))\n    if tmp < min:\n        min = tmp\nprint(min)", "n = int(input())\nx = [int(i) for i in input().split()]\nhp = []\n\nfor p in range(min(x), max(x)+1):\n    sum = 0\n    for i in x:\n        sum = sum + (i-p)**2 \n    hp.append(sum)\n    \nprint(min(hp))", "n = int(input())\nx = list(map(int, input().split()))\n\np = sum(x)//n\ne1 = 0\ne2 = 0\nfor i in x:\n    e1 += (p-i)**2\n    e2 += (p+1-i)**2\nprint(min(e1, e2))", "n=int(input())\nh=list(map(int,input().split()))\nmnx=-1\nmxx=10**8\navg=sum(h)//len(h)\navgx=avg+1\ns1=0\ns2=0\nfor i in h:\n  s1+=((i-avg)**2)\n  s2+=((i-avgx)**2)\nprint(min(s1,s2))", "N = int(input())\nX = list(map(int,input().split()))\nmin = 100*10000\n\nfor p in range(100):\n    sum = 0\n    for i in X:\n        sum += (i-p)**2\n    if sum < min:\n        min = sum\n\nprint(min)", "n = int(input())\nL = list(map(int,input().split()))\nl,r,ans = min(L),max(L),10**18\n\nfor i in range(l,r+1):\n  total = 0\n  for l in L:\n    total += (l-i)**2\n  ans = min(ans, total)\nprint(ans)", "n = int(input())\n\nx = list(map(int, input().split()))\n\nfor i in range(1, n+1000):\n  count = 0\n  for j in range(n):\n    count += (x[j]-i)*(x[j]-i)\n  if i == 1:\n    min = count\n  elif count < min:\n    min = count\n  else:\n    break\n\nprint(min)", "n = int(input())\n\nx = list(map(int, input().split()))\n\nh = round(sum(x) / n)\n\nans = 0\n\nfor i in range(n):\n    ans += ((x[i] - h) ** 2)\n\nprint(ans)", "import os, sys, re, math\n\nN = int(input())\nX = [int(n) for n in input().split()]\n\nd = [i ** 2 for i in range(101)]\n\nmin_v = 100 ** 2 * 100\nfor i in range(1, 101):\n    min_v = min(min_v, sum(d[abs(x - i)] for x in X))\n\nprint(min_v)\n", "n = int(input())\nx = list(map(int,input().split()))\nd= float(\"inf\")\nfor i in range(max(x)+1):\n    c=0\n    for j in range(len(x)):\n        c+=(x[j]-i)**2\n    d=min(c,d)\nprint(d)", "N = int(input())\nA = [int(x) for x in input().split()]\ncount = 0\nfor j in range(len(A)):\n    count += pow(A[j] - round(sum(A) / len(A)),2)\nprint(count)", "N = int(input())\nX = list(map(int, input().split()))\n\nP = int(sum(X)/N+.5)\nprint(sum((x-P)**2 for x in X))", "N=int(input())\nX=sorted(list(map(int,input().split())))\nY=[0]*(max(X)-min(X)+1)\nfor i in range(max(X)-min(X)+1):\n  for j in X:\n    Y[i]+=(j-i-min(X))**2\nprint(min(Y))", "n = int(input())\nx = list(map(int, input().split()))\n\nmin_x = 100 * 100 * 100 + 1\nfor p in range(1, 100+1, 1):\n  total = 0\n  for xi in x:\n    total += (xi - p) ** 2\n\n  min_x = min([min_x, total])\n\nprint(min_x)\n\n", "n = int(input())\nx = list(map(int, input().split()))\n\nx_max = max(x)\nx_min = min(x)\nhp_min = 10000*100\n\nfor p in range(x_min, x_max + 1):\n    hp = 0\n    for x_i in x:\n        hp += (x_i - p)**2\n    if hp < hp_min:\n        hp_min = hp\n    \nprint(hp_min)", "n = int(input())\nx = list(map(int, input().split()))\nhp_min = 10000000\nfor i in range(101):\n\thp_min = min(hp_min, sum((y-i) ** 2 for y in x))\nprint(hp_min)", "n = int(input())\nx = [int(i) for i in input().split()]\nave = sum(x) // n\nansl = 0\nansr = 0\n\nfor i in x:\n    ansl += pow(i - ave, 2)\n    ansr += pow(i - ave - 1, 2)\n\nprint(min([ansl, ansr]))", "import math\nN = int(input())\nlst = list(map(int, input().split()))\nX = math.floor(sum(lst)/N + 0.5)\nans = 0\nfor i in lst:\n    ans = ans + (X - i)**2\n\nprint(ans)", "n=int(input())\nx=list(map(int,input().split()))\nmax_x=max(x)\nmin_x=min(x)\nf=0\nans=1000000\nfor p in range(min_x,max_x+1):\n    for i in range(n):\n        f+=(x[i]-p)**2\n    else:\n        ans=min(ans,f)\n        f=0\nprint(ans)", "n = int(input())\nx = list(map(int, input().split()))\n\nans = 1000000\nfor i in range(100):\n    tmp = 0\n    for j in range(n):\n        tmp += (x[j]-(i+1))**2\n        \n    ans = min(ans, tmp)\n    \nprint(ans)", "N = int(input())\nX_ls = list(map(int, input().split(' ')))\nrst = -1\nfor i in range(min(X_ls), max(X_ls) + 1):\n    val = 0\n    for j in X_ls:\n        val += (i - j) ** 2\n    if rst == -1:\n        rst = val\n    else:\n        rst = min(rst, val)\nprint(rst)", "N = int(input())\nX = list(map(int,input().split()))\nT = sum(X) // len(X)\na = 0\nb = 0\nc = 0\nfor i in X:\n    a += (i - T)**2\n    b += (i - T -1)**2\n    c += (i - T+1)**2\n\nans = min(a,b)\nprint(min(ans,c))", "N=int(input())\nX_list=list(map(int,input().split()))\ndistance=10**9\n\nmin_val=min(X_list)\nmax_val=max(X_list)\nP_list=list(range(min_val,max_val+1))\n\nfor _ in range(N):\n  for p in P_list:\n    temp=0\n    for x in X_list:\n      temp+=(p-x)**2\n    if temp<distance:\n      distance=temp\n\nprint(distance)", "N = int(input())\nX = list(map(int, input().split()))\n\nans = 10**9\n\nfor i in range(1, 101):\n    total = 0\n    for x in X:\n        total += (x - i)**2\n    ans = min(ans, total)\nprint(ans)", "n = int(input())\nx = input().split()\n\nmin = 2**20\n\nfor p in range(100):\n    min_i = 0\n    if p in x:\n        continue\n    for i in x:\n        min_i = min_i + (int(i) - p)**2\n    if min_i <= min:\n        min = min_i\nprint(min)", "N = int(input())\nX = list(map(int, input().split()))\nsmall = 10000000\ntemp = 0\np_max = max(X)\n\nfor p in range(1, p_max + 1):\n  for i in range(N):\n    temp += (X[i] - p)**2\n    \n  if temp < small:\n    small = temp\n  \n  temp = 0\n  \nprint(small)\n", "N = int(input())\nX = list(map(int, input().split()))\n\nmax_x = max(X)\nmin_x = min(X)\n\nmin_y = 9999999999\n\nfor p in range(min_x, max_x+1):\n    y = sum([(x - p)**2 for x in X])\n    if y < min_y:\n        min_y = y\n\nprint(min_y)\n", "N = int(input())\nX = list(map(int, input().split()))\nX.sort()\n\nif N == 1:\n  print(0)\n\nelif X[0] == X[-1]:\n  print(0)\n\nelse:\n  sum = [0] * (X[-1] - X[0])\n\n  for i in range(X[0],X[-1]):\n    for j in X:\n      sum[i - X[0]] += (j - i ) ** 2\n\n  print(min(sum))", "n=int(input())\nx=list(map(int,input().split()))\nans=1000000\nfor i in range(101):\n    score=0\n    for j in range(n):\n        score+=(x[j]-i)**2\n    ans=min(ans,score)\nprint(ans)\n", "n = int(input())\nl = list(map(int, input().split()))\nans = 1000000\nfor p in range(1,101):\n  d = 0\n  for x in l:\n    d += (x-p)**2\n  ans = min(d,ans)\nprint(ans)", "n = int(input())\nx = list(map(int,input().split()))\nans = []\nif len(set(x)) == 1:\n    print(0)\nelse: \n    for p in range(min(x), max(x)):\n        meter = 0\n        for xi in x:\n            meter += pow((xi-p),2)\n        ans.append(meter)\n    print(min(ans))", "n = int(input())\nx = list(map(int, input().split()))\ns = 0\nfor i in x:\n  s += i\np = int(s/n + 0.5)\nresult = 0\nfor i in x:\n  result += (i-p)**2\nprint(result)", "N = int(input())\nX = list(map(int, input().split()))\nMIN = 100**3\n\nfor i in range(min(X), max(X)+1):\n  ans = 0\n  for j in range(N):\n    ans += ((X[j]-i)**2)\n  if MIN > ans:\n    MIN = ans\n\nprint(MIN)\n", "n=int(input())\na=[*map(int,input().split())]\nd=[]\nfor i in range(min(a),max(a)+1):\n  temp=[]\n  for j in range(n):\n    temp.append((a[j]-i)**2)\n  d.append(sum(temp))\nprint(min(d))", "ans=1000000\nn=int(input())\nX=list(map(int,input().split()))\nfor i in range(1,101):\n  tmp=0\n  for x in X:\n    tmp += (x-i)**2\n  ans = min(ans,tmp)\nprint(ans)", "n  = int(input())\nx_list = list(map(int,input().split()))\nmy_func = lambda x: int((x * 2 + 1) // 2)\nx_list_mean= my_func((sum(x_list)/len(x_list)))\ncount = 0 \nfor i in x_list:\n    count += (i-x_list_mean)**2\nprint(count)", "a = int(input())\nb = input().split()\nb = [int(j) for j in b]\nx = round(sum(b) / a)\ny = []\nfor i in range(a):\n    y.append((x - b[i])**2)\nprint(sum(y))", "n = int(input())\nX = list(map(int, input().split()))\nx_min = min(X)\nx_max = max(X)\n\nmin_val = 10**6 + 1\n\nfor i in range(x_min, x_max + 1):\n    min_val = min(min_val, sum(map(lambda x: (x-i)**2, X)))\n\nprint(min_val)", "n = int(input())\nx = list(map(int, input().split()))\nsum= 1000000000000000\nfor p in range(1,101):\n\n    tmp=0\n    # print(\"p\",p)\n    for i in range(len(x)):\n        tmp += (x[i] - p)**2\n        # print(\"tmp\",tmp)\n    sum = min(sum,tmp)\n    # print(\"su\",sum)\nprint(sum)", "N = int(input())\nx_list = list(map(int, input().split()))\n\nP = round(sum(x_list) / N)\nans = 0\n\nfor i in x_list:\n    ans += (i - P) ** 2\n\nprint(ans)", "n=int(input())\nx=list(map(int,input().split()))\n\nans=n * 100**2\nfor p in range(101):\n    ans=min(ans,sum([(xi-p)**2 for xi in x]))\nprint(ans)\n", "n = int(input())\nx = list(map(int, input().split()))\n\np = round(sum(x) / n)\nprint(sum([(x[i] - p)**2 for i in range(n)]))", "N=int(input())\nX=sorted(list(map(int,input().split())))\nY=[0]*(max(X)-min(X)+1)\ns=0\nfor i in range(max(X)-min(X)+1):\n  for j in X:\n    Y[i]+=(j-i-min(X))**2\n\nprint(min(Y))", "import numpy as np\n\nn = int(input())\nx = list(map(int, input().split()))\np = round(np.mean(x))\ncost = np.dot(np.array(x) - p, np.array(x) - p)\nprint(int(cost))", "N = int(input())\nX = list(map(int, input().split()))\nP = round(sum(X)/N)\nans = sum(list(map(lambda x: (x-P)**2, X)))\nprint(ans)", "N = int(input())\nX = list(map(int, input().split()))\n\nX_min = min(X)\nX_max = max(X)\n\nans = float('inf')\nfor i in range(X_min, X_max + 1):\n    d = 0\n    for x in X:\n        d += (x - i) ** 2\n    ans = min(ans, d)\n\nprint(int(ans))\nreturn", "N = int(input())\nXN = list(map(int,input().split()))\n\ndef answer(N,XN):\n    a = min(XN)\n    b = max(XN)\n    min_distance = float('inf')\n    for i in range(a,b+1):\n        distance = 0\n        for j in XN:\n            distance += (i-j) ** 2\n        min_distance = min(distance,min_distance)\n    print(min_distance)\n\nanswer(N,XN)", "n = int(input())\nx = list(map(int,input().split()))\nans = float('inf')\nfor i in range(min(x),max(x)+1):\n    dist = 0\n    for j in x:\n        dist += (j-i) ** 2\n    ans = min(ans,dist)\nprint(ans)", "#!/usr/local/bin/python3\n\nimport math\n\ndef power(P, X):\n    ans = 0\n    for x in X:\n        ans += (x-P)**2\n    return ans\n\nN = int(input())\nX = list(map(int, input().split()))\nave = sum(X)/N\ncandP = (math.ceil(ave), math.floor(ave))\npower = min([power(P, X) for P in candP])\n\nprint(power)\n", "N = int(input())\nX = input().split()\n\ndistance = 0\nmin_distance = float('Inf')\n\nfor i in range(1,101):\n    for j in range(N):\n        distance += (int(X[j]) - i) ** 2\n\n    min_distance = min(min_distance, distance)\n    distance = 0\n\nprint(min_distance)", "N = int(input())\n\nl = []\nl = list(map(int, input().split()))\n\ns = sum(l)\n# find a place to hold the meeting\nn = int((s/N*2 + 1)//2)\n\nans = 0\nfor e in l:\n    ans += (e-n)**2\n\nprint(ans)\n", "import math\nimport numpy as np\n\nn = int(input())\nX = np.array(list(map(int, input().split())))\n\nlower = min(X)\nupper = max(X)\nans = (X-lower)**2\nans = ans.sum()\n\nfor i in range(lower+1, upper+1):\n    m = (X-i)**2\n    if m.sum() < ans:\n        ans = m.sum()\n\nprint(ans)\n", "N = int(input())\nX = list(map(int, input().split()))\np = round(sum(X)/N)\ncnt = 0\nfor i in X:\n    cnt += (i-p)**2\nprint(cnt)\n", "n = int(input())\nx = [int(s) for s in input().split()]\nhp = []\nfor i in range(min(x),max(x) + 1):\n    sum_ = 0\n    for j in x:\n        sum_ = sum_ + (j - i)**2\n    hp.append(sum_)\nprint(min(hp))", "N = int(input())\nX = [int(_) for _ in input().split()]\nans = 10**6\nfor i in range(min(X),max(X)+1):\n    p = 0\n    for j in range(N):\n        p += (X[j]-i)**2\n    ans = min(ans,p)\nprint(ans)", "n = int(input())\narr = list(map(int, input().split()))\ns = sum(arr)*2\nz = round(s / (2*n))\nfor k in range(n):\n    arr[k] = (arr[k]-z) ** 2\nprint((sum(arr)))\n", "n=int(input())\nx_list=list(map(int,input().split()))\nave = sum(x_list)/n\np = int(ave) + (1 if ave - int(ave) > 1/2 else 0)\nans = sum([(p - x_i)**2 for x_i in x_list])\nprint(ans)", "N=int(input())\nX=list(map(int,input().split()))\ncost= 10**18\nfor i in range(1,101):\n    cost_count=0\n    for j in range(N):\n        cost_count +=(X[j]-i)**2\n    if cost > cost_count:\n        cost = cost_count\n    else:\n        pass\nprint(cost)", "N = int(input())\nX = list(map(int, input().split()))\n\nans = float(\"inf\")\nfor i in range(1, max(X) + 1):\n  tmp = 0\n  for j in range(N):\n    tmp += pow(X[j] - i, 2)\n  ans = min(ans, tmp)\nprint(ans)", "n = int(input())\nl = list(map(int, input().split()))\n\ncnt_m = float('inf')\nfor i in range(1, 101):\n    cnt = 0\n    for j in range(n):\n        cnt += (l[j] - i) ** 2\n    cnt_m = min(cnt_m, cnt)\n\nprint(cnt_m)", "N = int(input())\nX = list(map(int, input().split()))\n\ntotal = 0\nm = round(sum(X) / N)\n\nfor i in X:\n    total += (m - i) ** 2\nprint(total)", "n = int(input())\nx = list(map(int, input().split()))\np = round(sum(x)/n)\nans = 0\nfor i in x:\n  ans += (i-p)**2\nprint(ans)", "def main():\n\tn = int(input())\n\tx = [int(v) for v in input().split()]\n\tx.sort()\n\tclosest = x[0]\n\tfarest = x[-1]\n\tstartPoint = 0\n\tsofar = float('inf')\n\tfor i in range(0, farest+1):\n\t\tp = i\n\t\tcur = 0\n\t\tfor j in range(len(x)):\n\t\t\tcur += (x[j] - p)**2\n\t\tif cur < sofar:\n\t\t\tsofar = cur\n\treturn sofar\n\n\n\n\n\ndef __starting_point():\n    print((main()))\n\n__starting_point()", "import math\nN = int(input())\nXlist = list(map(int,input().split()))\n\nmin =10**5\nmeandown = math.floor(sum(Xlist)/N)\nmeanup = math.ceil(sum(Xlist)/N)\nsumdown=0\nsumup = 0\nfor i in range(len(Xlist)):\n  sumdown+= (Xlist[i]-meandown)**2\n  sumup+= (Xlist[i]-meanup)**2\n  \nif sumdown<sumup:\n  print(sumdown)\nelse:\n  print (sumup)", "n = int(input())\n\nans = 10**7+9\n\nx = list(map(int, input().split()))\n\nX = len(x)\n\nfor i in range(100):\n    total = 0\n    for j in range(X):\n        total += (x[j]-i)**2\n    else:\n        ans = min(ans,total)\n\nprint(ans)\n", "N = int(input())\nX = list(map(int, input().split()))\n_min = min(X)\n_max = max(X)\n_sum = 1000000000\nfor i in range(_min, _max+1):\n    temp = 0\n    for x in X:\n        temp += (x - i) * (x - i)\n    if temp < _sum:\n        _sum = temp\nprint(_sum)\n", "n=int(input())\nx=list(map(int,input().split()))\nnum=0\nfor i in x:\n    num+=i\nnum=round(float(num/n))\nans=0\nfor i in x:\n    ans+=(i-num)**2\nprint(ans)", "N = int(input())\nX = list(map(int, input().split()))\n\nave = 0\n\nfor i in X:\n    ave += i\nif ((ave/N) // 0.5) % 2 == 1:\n    ave = (ave //N) + 1\nelse:\n    ave = ave // N\n\nans = 0\nfor i in X:\n    ans += (ave - i)**2\nprint(ans)", "def resolve():\n\tn = int(input())\n\tx = list(map(int,input().split()))\n\tp = round(sum(x)/n)\n\tans = 0\n\tfor i in range(n):\n\t\tans += (x[i]-p)**2\n\tprint(ans)\nresolve()", "N=int(input())\nx= [int(i) for i in input().split()]\ny=0\nd=0\nfor n in x:\n  y+=n\nz=y//N\nif y/N-z>=0.5:\n  g=z+1\nelse:\n  g=z\nfor s in x:\n  d+=(s-g)**2\nprint(d)", "n = int(input())\nx = [int(s) for s in input().split()]\na = []\nfor i in range(min(x), max(x) + 1):\n    ans = 0\n    for j in range(n):\n        ans += (i - x[j]) ** 2\n    a.append(ans)\nprint(min(a))", "N=int(input())\nX=list(map(int, input().split()))\nimport numpy as np\np=np.floor(np.mean(X))\nans=min(np.sum([(x-p)**2 for x in X]), np.sum([(x-(p+1))**2 for x in X]))\n\nprint(int(ans))", "n=int(input())\nx_list=list(map(int,input().split()))\nave = sum(x_list)/n\np = int(ave) + (1 if ave - int(ave) > 1/2 else 0)\nans = sum([(p - x_i)**2 for x_i in x_list])\nprint(ans)", "N = int(input())\nX = list(map(int, input().split()))\n\nans = 1e10\nfor p in range(max(X)+1):\n    sum_power = 0\n    for i in range(N):\n        sum_power += (X[i]-p)**2\n    if ans > sum_power:\n        ans = sum_power\n\nprint(ans)", "import re\nimport sys\nimport math\nimport itertools\nimport bisect\nfrom copy import copy\nfrom collections import deque,Counter\nfrom decimal import Decimal\nimport functools\ndef v(): return input()\ndef k(): return int(input())\ndef S(): return input().split()\ndef I(): return map(int,input().split())\ndef X(): return list(input())\ndef L(): return list(input().split())\ndef l(): return list(map(int,input().split()))\ndef lcm(a,b): return a*b//math.gcd(a,b)\nsys.setrecursionlimit(10 ** 6)\nmod = 10**9+7\ncnt = 0\nans = 0\ninf = float(\"inf\")\nal = \"abcdefghijklmnopqrstuvwxyz\"\nAL = al.upper()\n\nn = k()\nx = l()\na = sum(x)//n\nb = sum(x)//n + 1\n\nfor i in x:\n  ans += pow(i-a,2)\n  cnt += pow(i-b, 2)\n\nprint(min(ans,cnt))", "n = int(input())\nx = list(map(int, input().split()))\nans = float('inf')\nmxi = min(x)\nmxa = max(x)\nfor p in range(mxi, mxa+1):\n    sm = 0\n    for xi in x:\n        sm += (xi-p)**2\n    ans = min(ans, sm)\nprint(ans)", "import numpy as np\nN = int(input()) \nX_ls = np.array(list(map(int, input().split())))\n\n#N=2\n#X_ls =np.array( [1,4])\n\nans = 0\nfor p in range(max(X_ls)+1):\n    sub = X_ls-p\n    ans_1 = sum(sub**2)\n    if ans_1 <= ans or ans ==0:\n        ans = ans_1\nprint(ans)", "n = int(input())\nx = list(map(int,input().split()))\n\nans = float(\"inf\")\nfor p in range(1,101):\n    hp = 0\n    for i in x:\n        hp += (i-p)**2\n    ans = min(ans, hp)\nprint(ans)", "N=int(input())\nX=list(map(int,input().split()))\nX.sort()\n\nans=10**1000\nfor p in range(X[0],X[-1]+1):\n    tmp=0\n    for x in X:\n        tmp+=(x-p)**2\n    ans=min(ans,tmp)\nprint(ans)", "N=int(input())\nlist1 = list(map(int, input().split()))\n\nlist1.sort()\nx=list1[0]\ny=list1[-1]\n\ns=0\nlist2=[]\nwhile x+s<=y:\n    list2.append(x+s)\n    s=s+1\n\nlist3=[]\nfor j in list2:\n    w=0\n    for i in list1:\n        w=w+(i-j)*(i-j)\n    list3.append(w)\n\nlist3.sort()\nprint((list3[0]))\n", "N = int(input())\nX = list(map(int, input().split()))\n\nD = [(x - round(sum(X)/N))**2 for x in X]\n\nprint(sum(D))", "input()\nx=list(map(int,input().split()))\nr=10**10\nfor i in range(min(x),max(x)+1):\n\ts=0\n\tfor j in x:\n\t\ts+=(i-j)**2\n\tr=min(r,s)\nprint(r)", "n = int(input())\nx = list(map(int,input().split()))\nave = sum(x) // len(x)\nans_list = []\nans_list2 = []\nfor i in x:\n    ans = (i - ave)**2\n    ans_list.append(ans)\nans1 = sum(ans_list)\n\nave2 = ave + 1\nfor i in x:\n    ans = (i - ave2)**2\n    ans_list2.append(ans)\nans2 = sum(ans_list2)\nif ans1 < ans2:\n    print(ans1)\nelse:\n    print(ans2)", "N = int(input())\nX = list(map(int, input().split()))\nans = 10**18\n\nfor p in range(1, 101):\n    tmp = 0\n    for x in X:\n        tmp += (x-p)**2\n    ans = min(tmp, ans)\n\nprint(ans)\n\n\n", "N=int(input())\nx= [int(i) for i in input().split()]\ny=0\nd=0\nfor n in x:\n  y+=n\nz=y//N\nif y/N-z>=0.5:\n  g=z+1\nelse:\n  g=z\nfor s in x:\n  d+=(s-g)**2\nprint(d)\n", "N = int(input())\nX = list(map(int,input().split()))\nans = 10**6\n\nfor i in range(1,101):\n    tem = 0\n    for j in range(N):\n        tem += (X[j] - i)**2\n    \n    if tem <= ans:\n        ans = tem\n\nprint(ans)", "import sys\nimport math\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    N = I()\n    L = LI()\n    num = math.ceil(sum(L)/N)\n    ans = 0\n    ans2 = 0\n    \n    for i in L:\n        ans+=pow(i-num, 2)\n        ans2+=pow(i-num+1, 2)\n    print(min(ans, ans2))\ndef __starting_point():\n    main()\n__starting_point()", "N=int(input())\nlist1 =list(map(int,input().split()))\nlist1.sort()\nmax = list1[-1]\nmin = list1[0]\ncost = []\nfor i in range(min,max+1):\n  tairyoku = 0\n  for k in range(N):\n    tairyoku += (list1[k]-i)**2\n  cost.append(tairyoku)\ncost.sort()\nprint(cost[0])", "n = int(input())\nlst = list(map(int,input().split()))\n\nlst.sort()\nM = lst[-1]\nm = lst[0]\ntotal = float('inf')\n\nfor i in range(m,M+1):\n  s = sum([(x-i)**2 for x in lst])\n  if s < total:\n    total = s\n    \nprint(total)    \n", "n = int(input())\nx = input().split()\n\nmin = 2**50\n\nfor p in range(100):\n    min_i = 0\n    if p in x:\n        continue\n    for i in x:\n        min_i = min_i + (int(i) - p)**2\n    if min_i <= min:\n        min = min_i\nprint(min)", "n = int(input())\nX = list(map(int, input().split()))\n\nm1 = sum(X) // n\nm2 = (sum(X) + (n-1)) // n\n\na1 = sum([(x-m1)**2 for x in X])\na2 = sum([(x-m2)**2 for x in X])\nprint((min(a1,a2)))\n", "N=int(input())\nX=list(map(int,input().split()))\nprint(min(sum((X[j]-i)**2 for j in range(N)) for i in range(min(X),max(X)+1)))", "N = int(input())\nX = list(map(int, input().split()))\n\nmin_X = min(X)\nmax_X = max(X)\nans = []\nfor i in range(min_X, max_X + 1):\n    score = []\n    for j in range(N):\n        score.append((X[j] - i) ** 2)\n    ans.append(sum(score))\n\nprint(min(ans))", "# coding=utf-8\n\n#lib\n#import copy\n#import collections\n#import sys\n'''\ndef generate_2d_array(Row, Column, IV):\n    array = [[IV] * Column for i in range(Row)]\n    return array\n\n\ndef search_in_2d_array(array, Row, Column, V):\n    cnt = 0\n    for i in range(Column):\n        for j in range(Row):\n            if array[i][j] == V:\n                cnt += 1\n    return cnt\n\n\ndef input_2d_array(Row, Column):\n    array = generate_2d_array(Row, Column, 0)\n\n    for i in range(Column):\n        temp = list(map(int, input().split()))\n        for j in range(Row):\n            array[i][j] = temp[j]\n\n    return array\n'''\n\ndef __starting_point():\n    N = int(input())\n    Xli = list(map(int, input().split()))\n\n    ans = float('inf')\n\n    for i in range(101):\n        cnt = 0\n\n        for j in range(N):\n            cnt += abs(Xli[j]-i)**2\n\n        ans = min(ans, cnt)\n\n\n    print(ans)\n__starting_point()", "n = int(input())\nx = list(map(int,input().split()))\n\nans = 10**18\nfor i in range(1,101):\n  t = 0\n  for j in range(n):\n    t += (x[j]-i)**2\n  ans = min(ans,t)\nprint(ans)", "a = 0\nb = 0\n\nN = int(input())\nX = list(map(int, input().split()))\navg = sum(X) // N\nfor tai in X:\n  a += (tai - avg) ** 2\nfor tai in X:\n  b += (tai - (avg + 1)) ** 2\nif a > b :\n  print(b)\nelse :\n  print(a)", "N = int(input())\nX = list(map(int, input().split()))\n\na = sum(X)\nb = 0\nfor num in X:\n\tb += num ** 2\n\nans = float('inf')\nfor i in range(1, 101):\n\tans = min(ans, N * i * i - 2 * a * i + b)\nprint(ans)\n", "N = int(input())\nX_list = list(map(int, input().split()))\n\nans_list = []\n\nfor i in range(min(X_list), max(X_list)+1):\n    summarize = 0\n    # print(f'i\uff1a{i}')\n    for x in X_list:\n        summarize += (x-i)**2\n        # print(f'i: {i}, x: {x}, summarize: {summarize}')\n    ans_list.append(summarize)\n    # print(f'ans_list: {ans_list}')\n\nprint(min(ans_list))"]