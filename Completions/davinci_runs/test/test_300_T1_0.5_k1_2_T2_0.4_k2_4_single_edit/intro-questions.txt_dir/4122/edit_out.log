2022-04-17 22:26:53.392292 num operations 1
2022-04-17 22:26:53.392317 size on input set 1
2022-04-17 22:27:07.825869 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "def main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "def main():\n    pass\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    h, n = map(int, input().split())\n    arr = list(map(int, input().split()))\n\n    if sum(arr) >= 0:\n        print(-1)\n        return\n\n    # find the max\n    max_index, max_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] > max_value:\n            max_index = i\n            max_value = arr[i]\n\n    # find the min\n    min_index, min_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] < min_value:\n            min_index = i\n            min_value = arr[i]\n\n    # find the next max\n    next_max_index, next_max_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] > next_max_value and i != max_index:\n            next_max_index = i\n            next_max_value = arr[i]\n\n    # find the next min\n    next_min_index, next_min_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] < next_min_value and i != min_index:\n            next_min_index = i\n            next_min_value = arr[i]\n\n    # print(max_index, max_value)\n    # print(min_index, min_value)\n    # print(next_max_index, next_max_value)\n    # print(next_min_index, next_min_value)\n\n    if max_value + next_min_value < 0:\n        print(n)\n        return\n\n    if min_value + next_max_value > 0:\n        print(n)\n        return\n\n    if max_index > min_index:\n        print(n + min_index + 1)\n        return\n\n    if min_index > max_index:\n        print(n + max_index + 1)\n        return\n\n    print(-1)\n    return\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport math\n\ndef main():\n    h, n = map(int, input().split())\n    arr = list(map(int, input().split()))\n\n    if sum(arr) > 0:\n        print(-1)\n        return\n\n    # find the max\n    max_index, max_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] > max_value:\n            max_index = i\n            max_value = arr[i]\n\n    # find the min\n    min_index, min_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] < min_value:\n            min_index = i\n            min_value = arr[i]\n\n    # find the next max\n    next_max_index, next_max_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] > next_max_value and i != max_index:\n            next_max_index = i\n            next_max_value = arr[i]\n\n    # find the next min\n    next_min_index, next_min_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] < next_min_value and i != min_index:\n            next_min_index = i\n            next_min_value = arr[i]\n\n    # print(max_index, max_value)\n    # print(min_index, min_value)\n    # print(next_max_index, next_max_value)\n    # print(next_min_index, next_min_value)\n\n    if max_value + next_min_value < 0:\n        print(n)\n        return\n\n    if min_value + next_max_value > 0:\n        print(n)\n        return\n\n    if max_index > min_index:\n        print(n + min_index + 1)\n        return\n\n    if min_index > max_index:\n        print(n + max_index + 1)\n        return\n\n    print(-1)\n    return\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650234413,
  "object": "edit"
}
2022-04-17 22:27:07.826065 fix syntax errors 4 ['def main():\n    pass\n\n\nif __name__ == "__main__":\n    main()\n', 'def main():\n    pass\n', '\ndef main():\n    h, n = map(int, input().split())\n    arr = list(map(int, input().split()))\n\n    if sum(arr) >= 0:\n        print(-1)\n        return\n\n    # find the max\n    max_index, max_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] > max_value:\n            max_index = i\n            max_value = arr[i]\n\n    # find the min\n    min_index, min_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] < min_value:\n            min_index = i\n            min_value = arr[i]\n\n    # find the next max\n    next_max_index, next_max_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] > next_max_value and i != max_index:\n            next_max_index = i\n            next_max_value = arr[i]\n\n    # find the next min\n    next_min_index, next_min_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] < next_min_value and i != min_index:\n            next_min_index = i\n            next_min_value = arr[i]\n\n    # print(max_index, max_value)\n    # print(min_index, min_value)\n    # print(next_max_index, next_max_value)\n    # print(next_min_index, next_min_value)\n\n    if max_value + next_min_value < 0:\n        print(n)\n        return\n\n    if min_value + next_max_value > 0:\n        print(n)\n        return\n\n    if max_index > min_index:\n        print(n + min_index + 1)\n        return\n\n    if min_index > max_index:\n        print(n + max_index + 1)\n        return\n\n    print(-1)\n    return\n\n\nif __name__ == "__main__":\n    main()\n', '\nimport math\n\ndef main():\n    h, n = map(int, input().split())\n    arr = list(map(int, input().split()))\n\n    if sum(arr) > 0:\n        print(-1)\n        return\n\n    # find the max\n    max_index, max_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] > max_value:\n            max_index = i\n            max_value = arr[i]\n\n    # find the min\n    min_index, min_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] < min_value:\n            min_index = i\n            min_value = arr[i]\n\n    # find the next max\n    next_max_index, next_max_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] > next_max_value and i != max_index:\n            next_max_index = i\n            next_max_value = arr[i]\n\n    # find the next min\n    next_min_index, next_min_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] < next_min_value and i != min_index:\n            next_min_index = i\n            next_min_value = arr[i]\n\n    # print(max_index, max_value)\n    # print(min_index, min_value)\n    # print(next_max_index, next_max_value)\n    # print(next_min_index, next_min_value)\n\n    if max_value + next_min_value < 0:\n        print(n)\n        return\n\n    if min_value + next_max_value > 0:\n        print(n)\n        return\n\n    if max_index > min_index:\n        print(n + min_index + 1)\n        return\n\n    if min_index > max_index:\n        print(n + max_index + 1)\n        return\n\n    print(-1)\n    return\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-17 22:27:07.826107 size on output set 4
2022-04-17 22:27:07.826117 num operations 1
2022-04-17 22:27:07.826122 size on input set 1
2022-04-17 22:27:29.803482 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# Problem\n# https://atcoder.jp/contests/abc164/tasks/abc164_a\n\n# Solution\n\nH, n = map(int, input().split())\nd = list(map(int, input().split()))\n\nhp = H\nminute = 0\n\nfor i in range(n):\n    hp += d[i]\n    minute += 1\n    if hp <= 0:\n        print(minute)\n        break\nelse:\n    print(-1)\n"
    },
    {
      "index": 1,
      "text": "\n# Solution\n\nH, n = map(int, input().split())\nd = list(map(int, input().split()))\nhp = H\nminute = 0\nfor i in range(n):\n    hp += d[i]\n    minute += 1\n    if hp <= 0:\n        print(minute)\n        break\nelse:\n\n# Problem\n# Solution\n# \u554f\u984c\u6587\n# \u9ad8\u6a4b\u541b\u306f\u30b2\u30fc\u30e0\u3092\u30d7\u30ec\u30a4\u3057\u3066\u3044\u307e\u3059\u3002\n# \u9ad8\u6a4b\u541b\u304c\u30b2\u30fc\u30e0\u3092\u30d7\u30ec\u30a4\u3059\u308b\u3068\u304d\u3001\u9ad8\u6a4b\u541b\u306e\u4f53\u529b\u306fH\u3067\u3059\u3002\n# \u9ad8\u6a4b\u541b\u306f\u30b2\u30fc\u30e0\u3092\u30d7\u30ec\u30a4\u3057\u3066\u3044\u308b\u3068\u304d\u3001\u6bce\u5206\u3054\u3068\u306b\u4f53\u529b\u304cD\u6e1b\u5c11\u3057\u307e\u3059\u3002\n# \u9ad8\u6a4b\u541b\u306e\u4f53\u529b\u304c0\u4ee5\u4e0b\u306b\u306a\u3063\u305f\u3089\u3001\u30b2\u30fc\u30e0\u306f\u7d42\u4e86\u3057\u307e\u3059\u3002\n# \u9ad8\u6a4b\u541b\u306f\u30b2\u30fc\u30e0\u3092\u30d7\u30ec\u30a4\u3057\u3066\u3044\u308b\u3068\u304d\u3001\u4f53\u529b\u304c0\u4ee5\u4e0b\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u3001N\u56de\u306e\u4f11\u61a9\u3092\u53d6\u308a\u307e\u3059\u3002\n# \u4f11\u61a9\u3092\u53d6\u308b\u3068\u3001\u4f53\u529b\u304cA\u5897\u52a0\u3057\u307e\u3059\u3002\n# \u9ad8\u6a4b\u541b\u304c\u30b2\u30fc\u30e0\u3092\u30d7\u30ec\u30a4\u3059\u308b\u3068\u304d\u3001\u4f53\u529b\u304c0\u4ee5\u4e0b\u306b\u306a\u308b\u307e\u3067\u306b\u304b\u304b\u308b\u6642\u9593\u3092\u6c42\u3081\u3066\u304f\u3060\u3055\u3044\u3002\n# \u305f\u3060\u3057\u3001\u9ad8\u6a4b\u541b\u304c\u30b2\u30fc\u30e0\u3092\u30d7\u30ec\u30a4\u3057\u3066\u3044\u308b\u3068\u304d\u3001\u4f53\u529b\u304c0\u4ee5\u4e0b\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u4f11\u61a9\u3092\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u3001-1\u3092\u51fa\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n#\n# \u5236\u7d04\n# 1\u2264H\u2264109\n# 1\u2264D\u2264109\n# 1\u2264A\u2264109\n# 1\u2264N\u2264100\n# \u5165\u529b\u306f\u3059\u3079\u3066\u6574\u6570\u3067\u3042\u308b\u3002\n# \u5165\u529b\n# \u5165\u529b\u306f\u4ee5\u4e0b\u306e\u5f62\u5f0f\u3067\u6a19\u6e96\u5165\u529b\u304b\u3089\u4e0e\u3048\u3089\u308c\u308b\u3002\n# H D A N\n# b1 b2 . . . bN\n# 1 \u884c\u76ee\u306b\u306f\u3001\u9ad8\u6a4b\u541b\u306e\u4f53\u529b\u3092\u8868\u3059\u6574\u6570H\u3001\u6bce\u5206\u3054\u3068\u306b\u4f53\u529b\u304c\u6e1b\u5c11\u3059\u308b\u91cf\u3092\u8868\u3059\u6574\u6570D\u3001\u4f11\u61a9\u3092\u53d6\u308b\u3068\u4f53\u529b\u304c\u5897\u52a0\u3059\u308b\u91cf\u3092\u8868\u3059\u6574\u6570A\u3001\u4f11\u61a9\u306e\u56de\u6570\u3092\u8868\u3059\u6574\u6570N\u304c\u3053\u306e\u9806\u306b\u534a\u89d2\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u3067\u4e0e\u3048\u3089\u308c\u308b\u3002\n# 2 \u884c\u76ee\u306b\u306f\u3001\u4f11\u61a9\u3092\u53d6\u308b\u6642\u9593\u3092\u8868\u3059N\u500b\u306e\u6574\u6570b1,b2, . . . ,bN\u304c\u3053\u306e\u9806\u306b\u534a\u89d2\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u3067\u4e0e\u3048\u3089\u308c\u308b\u3002\n# \u51fa\u529b\n# \u9ad8\u6a4b\u541b\u304c\u30b2\u30fc\u30e0\u3092\u30d7\u30ec\u30a4\u3057\u3066\u3044\u308b\u3068\u304d\u3001\u4f53\u529b\u304c0\u4ee5\u4e0b\u306b\u306a\u308b\u307e\u3067\u306b\u304b\u304b\u308b\u6642\u9593\u3092\u51fa\u529b\u305b\u3088\u3002\n# \u305f\u3060\u3057\u3001\u9ad8\u6a4b\u541b\u304c\u30b2\u30fc\u30e0\u3092\u30d7\u30ec\u30a4\u3057\u3066\u3044\u308b\u3068\u304d\u3001\u4f53\u529b\u304c0\u4ee5\u4e0b\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u4f11\u61a9\u3092\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u3001-1\u3092\u51fa\u529b\u305b\u3088\u3002\n#\n# \u5165\u529b\u4f8b 1\n# 10 3 2 3\n# 5 10 15\n# \u51fa\u529b\u4f8b 1\n# 17\n# \u5165\u529b\u4f8b 2\n# 10 3 2 2\n# 5 10\n# \u51fa\u529b\u4f8b 2\n# -1\n# \u5165\u529b\u4f8b 3\n# 1000000000 1 1 1\n# 1000000000\n# \u51fa\u529b\u4f8b 3\n# 1000000000\n    print(-1)\n"
    },
    {
      "index": 2,
      "text": "\n#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\n#include <cmath>\n#include <numeric>\n#include <set>\n#include <list>\n#include <bitset>\n#include <cstdlib>\n#include <map>\nusing ll = long long int;\nusing namespace std;\n# Solution\n\nH, n = map(int, input().split())\nd = list(map(int, input().split()))\n\nhp = H\nminute = 0\n\nfor i in range(n):\n    hp += d[i]\n    minute += 1\n    if hp <= 0:\n        print(minute)\n        break\nelse:\n    print(-1)\n"
    },
    {
      "index": 3,
      "text": "\n# Solution\n\nH, n = map(int, input().split())\nd = list(map(int, input().split()))\n\nhp = H\nminute = 0\n\nfor i in range(n):\n    hp += d[i]\n    minute += 1\n    if hp <= 0:\n        print(minute)\n        break\nelse:\n    print(-1)\n"
    }
  ],
  "created": 1650234427,
  "object": "edit"
}
2022-04-17 22:27:29.803803 fix syntax errors 4 ['# Problem\n# https://atcoder.jp/contests/abc164/tasks/abc164_a\n\n# Solution\n\nH, n = map(int, input().split())\nd = list(map(int, input().split()))\n\nhp = H\nminute = 0\n\nfor i in range(n):\n    hp += d[i]\n    minute += 1\n    if hp <= 0:\n        print(minute)\n        break\nelse:\n    print(-1)\n', '\n# Solution\n\nH, n = map(int, input().split())\nd = list(map(int, input().split()))\nhp = H\nminute = 0\nfor i in range(n):\n    hp += d[i]\n    minute += 1\n    if hp <= 0:\n        print(minute)\n        break\nelse:\n\n# Problem\n# Solution\n# 問題文\n# 高橋君はゲームをプレイしています。\n# 高橋君がゲームをプレイするとき、高橋君の体力はHです。\n# 高橋君はゲームをプレイしているとき、毎分ごとに体力がD減少します。\n# 高橋君の体力が0以下になったら、ゲームは終了します。\n# 高橋君はゲームをプレイしているとき、体力が0以下にならないように、N回の休憩を取ります。\n# 休憩を取ると、体力がA増加します。\n# 高橋君がゲームをプレイするとき、体力が0以下になるまでにかかる時間を求めてください。\n# ただし、高橋君がゲームをプレイしているとき、体力が0以下にならないように休憩を取ることができない場合は、-1を出力してください。\n#\n# 制約\n# 1≤H≤109\n# 1≤D≤109\n# 1≤A≤109\n# 1≤N≤100\n# 入力はすべて整数である。\n# 入力\n# 入力は以下の形式で標準入力から与えられる。\n# H D A N\n# b1 b2 . . . bN\n# 1 行目には、高橋君の体力を表す整数H、毎分ごとに体力が減少する量を表す整数D、休憩を取ると体力が増加する量を表す整数A、休憩の回数を表す整数Nがこの順に半角スペース区切りで与えられる。\n# 2 行目には、休憩を取る時間を表すN個の整数b1,b2, . . . ,bNがこの順に半角スペース区切りで与えられる。\n# 出力\n# 高橋君がゲームをプレイしているとき、体力が0以下になるまでにかかる時間を出力せよ。\n# ただし、高橋君がゲームをプレイしているとき、体力が0以下にならないように休憩を取ることができない場合は、-1を出力せよ。\n#\n# 入力例 1\n# 10 3 2 3\n# 5 10 15\n# 出力例 1\n# 17\n# 入力例 2\n# 10 3 2 2\n# 5 10\n# 出力例 2\n# -1\n# 入力例 3\n# 1000000000 1 1 1\n# 1000000000\n# 出力例 3\n# 1000000000\n    print(-1)\n', '\n#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\n#include <cmath>\n#include <numeric>\n#include <set>\n#include <list>\n#include <bitset>\n#include <cstdlib>\n#include <map>\nusing ll = long long int;\nusing namespace std;\n# Solution\n\nH, n = map(int, input().split())\nd = list(map(int, input().split()))\n\nhp = H\nminute = 0\n\nfor i in range(n):\n    hp += d[i]\n    minute += 1\n    if hp <= 0:\n        print(minute)\n        break\nelse:\n    print(-1)\n', '\n# Solution\n\nH, n = map(int, input().split())\nd = list(map(int, input().split()))\n\nhp = H\nminute = 0\n\nfor i in range(n):\n    hp += d[i]\n    minute += 1\n    if hp <= 0:\n        print(minute)\n        break\nelse:\n    print(-1)\n']
2022-04-17 22:27:29.803892 size on output set 4
