2022-04-17 22:44:21.882935 num operations 1
2022-04-17 22:44:21.882957 size on input set 1
2022-04-17 22:44:28.190253 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\ndef cheese_sort(cheese):\n    return cheese[1]\n\ndef main():\n    n = int(input())\n    cheese_list = []\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        cheese_list.append(cheese)\n    cheese_list.sort(key=cheese_sort)\n    for cheese in cheese_list:\n        print(cheese[0])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if cheeses[\"soft\"] < cheeses[\"hard\"]\n          else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if \"soft\" in cheeses and cheeses[\"soft\"] < cheeses[\"hard\"] else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if cheeses[\"soft\"] < cheeses[\"hard\"]\n          else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650235462,
  "object": "edit"
}
2022-04-17 22:44:28.190503 fix syntax errors 4 ['\n\n\ndef cheese_sort(cheese):\n    return cheese[1]\n\ndef main():\n    n = int(input())\n    cheese_list = []\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        cheese_list.append(cheese)\n    cheese_list.sort(key=cheese_sort)\n    for cheese in cheese_list:\n        print(cheese[0])\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses["soft"] if cheeses["soft"] < cheeses["hard"]\n          else cheeses["hard"])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses["soft"] if "soft" in cheeses and cheeses["soft"] < cheeses["hard"] else cheeses["hard"])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses["soft"] if cheeses["soft"] < cheeses["hard"]\n          else cheeses["hard"])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-17 22:44:28.190549 size on output set 4
2022-04-17 22:44:28.190577 num operations 1
2022-04-17 22:44:28.190598 size on input set 1
2022-04-17 22:44:36.522370 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n"
    },
    {
      "index": 2,
      "text": "\n\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split() # name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n"
    },
    {
      "index": 3,
      "text": "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n"
    }
  ],
  "created": 1650235468,
  "object": "edit"
}
2022-04-17 22:44:36.522595 fix syntax errors 4 ["\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n", "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n", "\n\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split() # name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n", "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n"]
2022-04-17 22:44:36.522647 size on output set 4
