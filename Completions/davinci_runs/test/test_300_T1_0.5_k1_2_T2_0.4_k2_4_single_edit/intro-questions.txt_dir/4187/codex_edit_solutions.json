["\nprint(\"Hello World\")\n", "\n\nn = int(input())\na = list(map(int, input().split()))\n# Find the maximal length of 1s\nmax_length = 0\nlength = 0\nfor j in range(n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a)\n\nprint(max_length)\n", "\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximal length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n", "#\n\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n", "\nimport sys\n\nsys.setrecursionlimit(1000000)\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef check(x):\n    if x == 1:\n        return True\n    elif x % 2 == 0:\n        return check(x // 2)\n    else:\n        return check(3 * x + 1)\n\ndef solve(i, n):\n    if i == n:\n        return 0\n    else:\n        if check(a[i]):\n            return solve(i + 1, n)\n        else:\n            return max(solve(i + 1, n), solve(i + 1, n) + a[i])\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n", "\nn = int(input())\na = list(map(int, input().split()))\nmax_rest = 0\nrest = 0\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n"]