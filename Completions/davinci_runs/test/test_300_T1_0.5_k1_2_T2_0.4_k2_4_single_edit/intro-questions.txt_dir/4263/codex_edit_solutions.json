["\n\nS = input()\n#S = \"ATCODER\"\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n", "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    ans = 0\n    for i in range(len(s)):\n        for j in range(i, len(s)):\n            if s[i:j+1].count('A') + s[i:j+1].count('C') + s[i:j+1].count('G') + s[i:j+1].count('T') == j-i+1:\n                ans = max(ans, j-i+1)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    N = int(sys.stdin.readline().rstrip())\n    A = list(map(int, sys.stdin.readline().rstrip().split()))\n    A.sort()\n    print(A[0])\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    S = sys.stdin.readline().rstrip() # rstrip() removes the newline character\n    max_len = 0 # the longest length of a substring\n    curr_len = 0 # the current length of a substring\n    for c in S: # for each character in the string\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T': # if the character is a nucleotide\n            curr_len += 1 # increment the current length\n        else: # if the character is not a nucleotide\n            if curr_len > max_len: # if the current length is greater than the longest length\n                max_len = curr_len # set the longest length equal to the current length\n            curr_len = 0 # reset the current length to 0\n    if curr_len > max_len: # if the current length is greater than the longest length\n        max_len = curr_len # set the longest length equal to the current length\n    print(max_len) # print the longest length\n\nif __name__ == '__main__':\n    main()\n", "\n\nS = input()\n# S = \"ATCODER\"\nans = 0\n\n    if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n        ans += 1\n    else:\n        continue\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[j] == \"A\" or S[j] == \"C\" or S[j] == \"G\" or S[j] == \"T\":\n            ans += 1\n            if ans > i:\n                ans = i\n        else: \n            continue\n\nprint(ans)\n", "\nimport sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "\n\nS = input()\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n", "\n\nS = input()\n#S = \"ATCODER\"\nans = 0\n\nfor i in range(len(S)-1):\n    if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n        ans += 1\n    else:\n        ans = 0\n\nprint(max(ans, 1))\n"]