#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Oct  9 17:26:05 2019

@author: jorgeagr
"""

import os
import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt
import matplotlib.ticker as mticker
from matplotlib.colors import LogNorm
from scipy.stats import gaussian_kde
from scipy import stats

mpl.style.use('classic')

width = 9
height = 6

fig, ax = plt.subplots(figsize=(width, height))

# Load data
data = np.loadtxt('/home/jorgeagr/Documents/Research/RRLs/Data/RRLs_pars.txt', usecols=(1,2,3,4,5,6,7), skiprows=1)

# Plot histogram
ax.hist2d(data[:,0], data[:,1], bins=(np.linspace(0,1,100), np.linspace(0,1,100)), norm=LogNorm())
ax.set_xlabel(r'$\log(P)$')
ax.set_ylabel(r'$\log(A_0)$')

# Plot KDE
x = np.linspace(0,1,1000)
y = np.linspace(0,1,1000)
X, Y = np.meshgrid(x, y)
positions = np.vstack([X.ravel(), Y.ravel()])
values = np.vstack([data[:,0], data[:,1]])
kernel = gaussian_kde(values)
Z = np.reshape(kernel(positions).T, X.shape)
ax.contour(X, Y, Z, levels=np.linspace(0, Z.max(), 20), colors='k')

# Save figure
fig.savefig('/home/jorgeagr/Documents/Research/RRLs/Figures/fig2.pdf', bbox_inches='tight')










































































































































































































































































































































































































































































































































































































































































































































































n, m = map(int, input().split())

left = [0] * (m + 1)
right = [0] * (m + 1)

for i in range(n):
    l, r = map(int, input().split())
    left[l] += 1
    right[r] += 1

counter = 0
for i in range(1, m + 1):
    if left[i] == right[i]:
        counter += 1
    elif left[i] > right[i]:
        print(counter)
        break
else:
    print(counter)
