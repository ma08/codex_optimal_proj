2022-04-17 22:58:00.065549 num operations 1
2022-04-17 22:58:00.065568 size on input set 1
2022-04-17 22:58:04.538956 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ns = input()\nt = input()\n\ncount = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "# coding: utf-8\n\n\ns = raw_input()\nt = raw_input()\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n"
    },
    {
      "index": 2,
      "text": "\ns = input()\nt = input()\ncorrect = 0\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\nprint(correct)\n"
    },
    {
      "index": 3,
      "text": "\ns = input()\nt = input()\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n"
    }
  ],
  "created": 1650236280,
  "object": "edit"
}
2022-04-17 22:58:04.539258 fix syntax errors 4 ['\ns = input()\nt = input()\n\ncount = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        count += 1\n\nprint(count)\n', '# coding: utf-8\n\n\ns = raw_input()\nt = raw_input()\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n', '\ns = input()\nt = input()\ncorrect = 0\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\nprint(correct)\n', '\ns = input()\nt = input()\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n']
2022-04-17 22:58:04.539284 size on output set 4
2022-04-17 22:58:04.539295 num operations 1
2022-04-17 22:58:04.539300 size on input set 1
2022-04-17 22:58:12.446425 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    forecast = sys.stdin.readline().strip().split()\n    actual = sys.stdin.readline().strip().split()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i] and forecast[i] != '?':\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import math\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline().split()\n    n = int(line[0])\n    k = int(line[1])\n    if k == 0:\n        print(n)\n        return\n    count = 0\n    for i in range(1, n + 1):\n        if (n % i) == 0:\n            count += 1\n            if count == k:\n                print(i)\n                return\n    print(-1)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n# import sys\n\n# def main():\n#     forecast = sys.stdin.readline().strip()\n#     actual = sys.stdin.readline().strip()\n\n#     correct = 0\n#     for i in range(len(forecast)):\n#         if forecast[i] == actual[i]:\n#             correct += 1\n#     print(correct)\n\n# if __name__ == '__main__':\n#     main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    forecast = sys.stdin.readline().strip().split()\n    actual = sys.stdin.readline().strip().split()\n\n    correct = 0\n    for i in range(len(forecast) - 1):\n        if forecast[i + 1] == actual[i + 1]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650236284,
  "object": "edit"
}
2022-04-17 22:58:12.446660 fix syntax errors 4 ["\nimport sys\n\ndef main():\n    forecast = sys.stdin.readline().strip().split()\n    actual = sys.stdin.readline().strip().split()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i] and forecast[i] != '?':\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n", "import math\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline().split()\n    n = int(line[0])\n    k = int(line[1])\n    if k == 0:\n        print(n)\n        return\n    count = 0\n    for i in range(1, n + 1):\n        if (n % i) == 0:\n            count += 1\n            if count == k:\n                print(i)\n                return\n    print(-1)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n# import sys\n\n# def main():\n#     forecast = sys.stdin.readline().strip()\n#     actual = sys.stdin.readline().strip()\n\n#     correct = 0\n#     for i in range(len(forecast)):\n#         if forecast[i] == actual[i]:\n#             correct += 1\n#     print(correct)\n\n# if __name__ == '__main__':\n#     main()\n", "\nimport sys\n\ndef main():\n    forecast = sys.stdin.readline().strip().split()\n    actual = sys.stdin.readline().strip().split()\n\n    correct = 0\n    for i in range(len(forecast) - 1):\n        if forecast[i + 1] == actual[i + 1]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-17 22:58:12.446695 size on output set 4
