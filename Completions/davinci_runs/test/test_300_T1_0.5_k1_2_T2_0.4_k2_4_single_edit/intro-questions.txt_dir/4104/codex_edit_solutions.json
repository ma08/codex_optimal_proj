["\n\ndef main():\n    expression = input().split('+')\n    print(sum(map(lambda x: sum(map(int, x.split('-'))), expression)))\n\nmain()\n", "\n\ndef main():\n    expression = input()\n    expression = expression.split('+')\n    result = 0\n    for i in expression:\n        i = i.split('-')\n        for j in i:\n            result += int(j)\n        result -= 1\n    print(result)\n\nmain()\n", "\n\ndef main():\n    expression = input()\n    expression = expression.split('+') \n    result = 0\n    for i in expression:\n        i = i.split('-')\n        for j in i:\n            result += int(j)\n        result -= len(i) - 1\n    print(result)\n\nmain()\n", "\n\ndef main():\n    expression = input(\"Enter expression: \")\n    result = eval(expression)\n    print(result)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    expression = input()\n    result = eval(expression)\n    print(result, end='')\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    expression = input()\n    result = eval(expression)  # pylint: disable=eval-used\n    print(result)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    expression = input(\"Enter expression: \")\n    print(eval(expression))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    expression = input().split('+')\n    result = 0\n    for i in expression:\n        i = i.split('-') \n        for j in i: \n            result += int(j) \n        result -= len(i) - 1 \n    print(result)\n\nmain()\n"]