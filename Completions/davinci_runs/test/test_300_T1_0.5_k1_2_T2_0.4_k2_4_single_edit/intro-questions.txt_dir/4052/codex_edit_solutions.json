["var fs = require('fs');\n\nfunction read(file) {\n  return new Promise(function(resolve, reject) {\n    fs.readFile(file, function(err, data) {\n      if (err) reject(err);\n      resolve(data);\n    });\n  });\n}\n\nfunction write(file, data) {\n  return new Promise(function(resolve, reject) {\n    fs.writeFile(file, data, function(err) {\n      if (err) reject(err);\n      resolve();\n    });\n  });\n}\n\nmodule.exports = {\n  read: read,\n  write: write\n};\n", "\n\ndef main():\n    # read data for n sequences\n    n = int(input())\n    s = input()\n    t = input()\n\n    # solve\n    if s == t:\n        print(0)\n    else:\n        # create a dictionary to store the number of occurences of each character\n        d = {}\n        for i in range(n):\n            if s[i] in d:\n                d[s[i]] += 1\n            else:\n                d[s[i]] = 1\n            if t[i] in d:\n                d[t[i]] -= 1\n            else:\n                d[t[i]] = -1\n        flag = True\n        for key in d:\n            if d[key] != 0:\n                flag = False\n                break\n        if flag:\n            i = 0\n            j = 0\n            count = 0\n            while i < n and j < n and count < 10000:\n                if s[i] == t[j]:\n                    i += 1\n                    j += 1\n                else:\n                    i += 1\n                    count += 1\n            print(count)\n            i = 0\n            j = 0\n            while i < n and j < n and count < 10000:\n                if s[i] == t[j]:\n                    i += 1\n                    j += 1\n                else:\n                    print(i, end=' ')\n                    i += 1\n                    count += 1\n        else:\n            print(-1)\n\nmain()\n", "const fs = require('fs');\n\nfs.readFile('file.js', function(err, data){\n    if(err) {\n        console.log(err);\n    } else {\n        console.log(data.toString());\n    }\n})\n\nconsole.log('end');\n", "const fs = require('fs');\n\nfs.readFile('file.txt', (err, data) => {\n  if (err) throw err;\n  console.log(data);\n});\n", "\n\ndef main():\n    # read data for n sequences\n    n = int(input())\n    s = input()\n    t = input()\n\n    # solve\n    if s == t:\n        print(0)\n    else:\n        # create a dictionary to store the number of occurrences of each character\n        d = {}\n        for i in range(n):\n            if s[i] in d:\n                d[s[i]] += 1\n            else:\n                d[s[i]] = 1\n            if t[i] in d:\n                d[t[i]] -= 1\n            else:\n                d[t[i]] = -1\n        flag = True\n        for key in d:\n            if d[key] != 0:\n                flag = False\n                break\n        if flag:\n            i = 0\n            j = 0\n            count = 0\n            while i < n and j < n:\n                if s[i] == t[j]:\n                    i += 1\n                    j += 1\n                else:\n                    i += 1\n                    count += 1\n            if count > 10000:\n                print(-1)\n            else:\n                print(count)\n            i = 0\n            j = 0\n            while i < n and j < n:\n                if s[i] == t[j]:\n                    i += 1\n                    j += 1\n                else:\n                    print(i, end=' ')\n                    i += 1\n                    count += 1\n        else:\n            print(-1)\n\nmain()\n", "\n\ndef main():\n    # read data for n sequences\n    n = int(input())\n    s = input()\n    t = input()\n\n    # solve\n    if s == t:\n        print(0)\n    else:\n        # create a dictionary to store the number of occurences of each character\n        d = {}\n        for i in range(n):\n            if s[i] in d:\n                d[s[i]] += 1\n            else:\n                d[s[i]] = 1\n            if t[i] in d:\n                d[t[i]] -= 1\n            else:\n                d[t[i]] = -1\n        flag = True\n        for key in d:\n            if d[key] != 0:\n                flag = False\n                break\n        if flag:\n            i = 0\n            j = 0\n            count = 0\n            while i < n and j < n:\n                if s[i] == t[j]:\n                    i += 1\n                    j += 1\n                else:\n                    i += 1\n                    count += 1\n            if count > 10000:\n                print(-1)\n            else:\n                print(count)\n                i = 0\n                j = 0\n                while i < n and j < n:\n                    if s[i] == t[j]:\n                        i += 1\n                        j += 1\n                    else:\n                        print(i, end=' ')\n                        i += 1\n        else:\n            print(-1)\n\nmain()\n", "\n\ndef main():\n    # read data for n lines\n    n = int(input())\n    arr = []\n    for i in range(n):\n        arr.append(input())\n\n    # solve\n    # solve\n    # create a dictionary to store the number of occurences of each character\n    d = {}\n    for i in range(n):\n        if arr[i] in d:\n            d[arr[i]] += 1\n        else:\n            d[arr[i]] = 1\n    for key in d:\n        print(key, d[key])\n\nmain()\n", "import csv\nimport requests\nfrom bs4 import BeautifulSoup\n\nurl = 'https://www.cbr.ru/'\n\n\ndef get_html(url):\n    response = requests.get(url)\n    return response.text\n\n\ndef get_data(html):\n    soup = BeautifulSoup(html, 'lxml')\n    trs = soup.find('table', id='currency_base_table').find('tbody').find_all('tr')\n    for tr in trs:\n        tds = tr.find_all('td')\n        name = tds[0].text\n        price = tds[1].text\n        data = {'name': name,\n                'price': price}\n        write_csv(data)\n\n\ndef write_csv(data):\n    with open('file.csv', 'a') as file:\n        writer = csv.writer(file)\n        writer.writerow((data['name'], data['price']))\n\n\ndef main():\n    get_data(get_html(url))\n\n\nif __name__ == '__main__':\n    main()\n"]