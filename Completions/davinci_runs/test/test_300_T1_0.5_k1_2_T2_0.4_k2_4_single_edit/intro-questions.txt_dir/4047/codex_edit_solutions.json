["\nimport sys\n\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    if n % 2 == 0:\n        print(x[n//2] - x[n//2 - 1])\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main() \n", "\nn = int(input())\nx = list(map(int, input().split()))\n\nx.sort()\n\nmin_cost = float('inf')\nfor i in range(n):\n    cost = 0\n    for j in range(n):\n        cost += abs(x[j] - x[i])\n    min_cost = min(min_cost, cost)\n\nprint(min_cost)\n", "\n\nn = int(input())\nx = list(map(int, input().split()))\n\n# x = [1, 2, 3]\n# n = 3\n#\nx.sort()\n\nmin_cost = float('inf')\nfor i in range(n):\n    cost = 0\n    for j in range(n):\n        cost += abs(x[j] - x[i])\n    min_cost = min(min_cost, cost)\n\nprint(min_cost)\n", "\nimport sys\n\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    if n % 2 == 0:\n        print(x[n//2] - x[n//2 - 1])\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\nx = list(map(int, input().split()))\n\n# x = [1, 2, 3]\n# n = 3\n\nx.sort()\n\nmin_cost = float('inf')\nfor i in range(n):\n    cost = 0\n    for j in range(n):\n        cost += abs(x[j] - x[i])\n    min_cost = min(min_cost, cost)\n\nprint(min_cost)\n", "\n#\n# import sys\n#\n# def main():\n#     n = int(input())\n#     x = list(map(int, input().split()))\n#     x.sort()\n#     if n % 2 == 0:\n#         print(x[n//2] - x[n//2 - 1])\n#     else:\n#         print(0)\n#\n# if __name__ == \"__main__\":\n#     main()\n", "\n\nn = int(input())\nx = list(map(int, input().split()))\n\n# x = [1, 2, 3]\n# n = 3\nx.sort()\nmin_cost = float('inf')\nfor i in range(n):\n    cost = 0\n    for j in range(n):\n        cost += abs(x[j] - x[i])\n    min_cost = min(min_cost, cost)\n\nprint(min_cost)\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    if n % 2 == 0:\n        print(x[n//2] - x[n//2 - 1])\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()\n"]