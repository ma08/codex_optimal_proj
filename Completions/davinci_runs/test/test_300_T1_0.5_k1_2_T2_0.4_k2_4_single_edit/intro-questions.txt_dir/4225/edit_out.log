2022-04-17 22:51:24.866215 num operations 1
2022-04-17 22:51:24.866234 size on input set 1
2022-04-17 22:51:30.139585 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom operator import itemgetter\n\ndef get_max_possible_sum(cards):\n    cards.sort(key=itemgetter(1), reverse=True)\n    return sum(card[1] for card in cards[:K])\n\nA, B, C, K = map(int, input().split())\ncards = [('A', A), ('B', B), ('C', C)]\nprint(get_max_possible_sum(cards))\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom operator import itemgetter\n\ndef get_max_possible_sum(cards):\n    cards.sort(key=itemgetter(1), reverse=True)\n    return sum(card[1] for card in cards[:K]) if K <= len(cards) else 0\n\nA, B, C, K = map(int, input().split())\ncards = [('A', A), ('B', B), ('C', C)]\nprint(get_max_possible_sum(cards))\n"
    },
    {
      "index": 2,
      "text": "from operator import itemgetter\n\ndef get_max_possible_sum(cards):\n    cards.sort(key=itemgetter(1), reverse=True)  # sort by second element\n    return sum(card[1] for card in cards[:K])  # get first K elements\n\nA, B, C, K = map(int, input().split())\ncards = [('A', A), ('B', B), ('C', C)]\nprint(get_max_possible_sum(cards))\n"
    },
    {
      "index": 3,
      "text": "\n\nfrom operator import itemgetter\n\ndef get_max_possible_sum(cards):\n    cards.sort(key=itemgetter(1), reverse=True)\n    return sum(card[1] for card in cards[:K] if card[1] > 0)\n\nA, B, C, K = map(int, input().split())\ncards = [('A', A), ('B', B), ('C', C), ('D', D)]\nprint(get_max_possible_sum(cards))\n"
    }
  ],
  "created": 1650235885,
  "object": "edit"
}
2022-04-17 22:51:30.139828 fix syntax errors 4 ["\nfrom operator import itemgetter\n\ndef get_max_possible_sum(cards):\n    cards.sort(key=itemgetter(1), reverse=True)\n    return sum(card[1] for card in cards[:K])\n\nA, B, C, K = map(int, input().split())\ncards = [('A', A), ('B', B), ('C', C)]\nprint(get_max_possible_sum(cards))\n", "\n\nfrom operator import itemgetter\n\ndef get_max_possible_sum(cards):\n    cards.sort(key=itemgetter(1), reverse=True)\n    return sum(card[1] for card in cards[:K]) if K <= len(cards) else 0\n\nA, B, C, K = map(int, input().split())\ncards = [('A', A), ('B', B), ('C', C)]\nprint(get_max_possible_sum(cards))\n", "from operator import itemgetter\n\ndef get_max_possible_sum(cards):\n    cards.sort(key=itemgetter(1), reverse=True)  # sort by second element\n    return sum(card[1] for card in cards[:K])  # get first K elements\n\nA, B, C, K = map(int, input().split())\ncards = [('A', A), ('B', B), ('C', C)]\nprint(get_max_possible_sum(cards))\n", "\n\nfrom operator import itemgetter\n\ndef get_max_possible_sum(cards):\n    cards.sort(key=itemgetter(1), reverse=True)\n    return sum(card[1] for card in cards[:K] if card[1] > 0)\n\nA, B, C, K = map(int, input().split())\ncards = [('A', A), ('B', B), ('C', C), ('D', D)]\nprint(get_max_possible_sum(cards))\n"]
2022-04-17 22:51:30.139861 size on output set 4
2022-04-17 22:51:30.139871 num operations 1
2022-04-17 22:51:30.139878 size on input set 1
2022-04-17 22:51:34.934762 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nA, B, C, K = map(int, input().split())\n# A, B, C, K = 2, 1, 1, 3\n\nif K <= A:\n    print(K)\nelif K <= A+B:\n    print(A)\nelse:\n    print(A - (K - A - B))\n"
    },
    {
      "index": 1,
      "text": "\n\nA, B, C, K = map(int, input().split())\n# A, B, C, K = 2, 1, 1, 3\n\nif K <= A:\n    print(K)\nelif K <= A+B:\n    print(A)\nelse:\n    print(A - (K - A - B))\n"
    },
    {
      "index": 2,
      "text": "\n\nA, B, C, K = map(int, input().split())\n\nif K <= A:\n    print(K)\nelif K <= A+B:\n    print(A)\nelse:\n    print(A - (K - A - B))\n"
    },
    {
      "index": 3,
      "text": "\n# A, B, C, K = map(int, input().split())\nA, B, C, K = 2, 1, 1, 3\n\nif K <= A:\n    print(K)\nelif K <= A+B:\n    print(A)\nelse:\n    print(A - (K - A - B))\n"
    }
  ],
  "created": 1650235890,
  "object": "edit"
}
2022-04-17 22:51:34.934993 fix syntax errors 4 ['\n\nA, B, C, K = map(int, input().split())\n# A, B, C, K = 2, 1, 1, 3\n\nif K <= A:\n    print(K)\nelif K <= A+B:\n    print(A)\nelse:\n    print(A - (K - A - B))\n', '\n\nA, B, C, K = map(int, input().split())\n# A, B, C, K = 2, 1, 1, 3\n\nif K <= A:\n    print(K)\nelif K <= A+B:\n    print(A)\nelse:\n    print(A - (K - A - B))\n', '\n\nA, B, C, K = map(int, input().split())\n\nif K <= A:\n    print(K)\nelif K <= A+B:\n    print(A)\nelse:\n    print(A - (K - A - B))\n', '\n# A, B, C, K = map(int, input().split())\nA, B, C, K = 2, 1, 1, 3\n\nif K <= A:\n    print(K)\nelif K <= A+B:\n    print(A)\nelse:\n    print(A - (K - A - B))\n']
2022-04-17 22:51:34.935021 size on output set 3
