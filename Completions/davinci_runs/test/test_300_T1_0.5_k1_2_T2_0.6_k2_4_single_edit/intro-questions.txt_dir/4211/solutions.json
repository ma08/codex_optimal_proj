["n=int(input())\nl=list(map(int,input().split()))\nans=l[0]+l[n-2]\nfor i in range(n-2):\n    ans+=min(l[i],l[i+1])\nprint(ans)", "n = int(input())\nb = list(map(int,input().split()))[::-1]\nans = b[0] + b[-1]\nfor i in range(n-2):\n    ans += min(b[i], b[i+1])\nprint(ans)", "N = int(input())\nB = list((int(x) for x in input().split()))\nA1 = B + [100001]\nA2 = [100001] + B\nA = [min(A1[i],A2[i]) for i in range(N)]\nprint(sum(A))", "n = int(input())\nB = list(map(int, input().split()))\n\ntmp = B[0]\nans = 0\nB.append(B[-1])\nfor b in B:\n    ans += min(tmp, b)\n    tmp = b\nprint(ans)", "N = int(input())\nB = list(map(int,input().split()))\ncon = 0\nfor i in range(N):\n  if i == 0:\n    con += B[i]\n  elif i == N - 1:\n    con += B[N - 2]\n  else:\n    con += min(B[i - 1],B[i])\nprint(con)\n\n", "N=int(input())\nB=list(map(int, input().split()))\nans=B[0]\n\nfor i in range(N-2):\n\tans+=min(B[i],B[i+1])\n\nprint(ans+B[-1])", "N=int(input())\nB=list(map(int,input().split()))\nA=[0]*N\nfor i in range(N):\n    A[i]=B[i-1]\n    if A[i-1]>B[i-1]:\n        A[i-1]=B[i-1]\nA[0]=B[0]\nprint(sum(A))", "n=int(input())\nb=list(map(int, input().split()))\na=[0]*n\n\na[0]=b[0]\na[-1]=b[-1]\nfor i in range(1,n-1):\n  a[i]=min(b[i],b[i-1])\n\nprint(sum(a))", "n = int(input())\n#a, b = map(int, input().split())\nbl = list(map(int, input().split()))\n#al=[list(input()) for i in range(n)]\n\nal = [0]*n\nal[-1] = bl[-1]\nfor i in range(n-2, -1, -1):\n    if bl[i] < al[i+1]:\n        al[i+1] = bl[i]\n    al[i] = bl[i]\nprint((sum(al)))\n", "n = int(input())\nb = list(map(int,input().split()))\nb.insert(0,1e7)\nb.append(1e7)\ncount = 0 \nfor i in range(n):\n    count +=min(b[i],b[i+1])\nprint(count)", "N = int(input())\nB = list(map(int, input().split()))\n\nans = B[0] + B[N-2]\n\nfor i in range(N-2):\n    ans += min(B[i], B[i+1])\n\nprint(ans)\n", "n=int(input())\nb=list(map(int,input().split()))\nans=b[0]+b[-1]\nfor i in range(n-2):\n    ans+=min(b[i],b[i+1])\nprint(ans)", "N = int(input())\nB_ls = [float('inf')] + list(map(int, input().split(' '))) + [float('inf')]\nA_ls = []\nfor i in range(N):\n    A_ls.append(min(B_ls[i], B_ls[i + 1]))\nprint(sum(A_ls))", "#n\u306f\u6570\u5217A\u306e\u9577\u3055\u3000B\u306e\u9577\u3055\u306fn-1\nn = int(input())\nbn = list(map(int,input().split()))\n\nan =[bn[0]]\n\n\nfor x in range(n-2):\n    if bn[x+1] >= bn[x] :\n        an.append(bn[x])\n    else:\n        an.append(bn[x+1])\n\nan.append(bn[-1])\n\nprint(sum(an))", "n = int(input())\narr = list(map(int, input().split()))\n\nans = []\n\nfor (i, ele) in enumerate(arr):\n    if i == 0:\n        ans.append(ele)\n    else:\n        ans.append(min(arr[i - 1], arr[i]))\n    if i == len(arr) - 1:\n        ans.append(arr[-1])\nprint((sum(ans)))\n", "N = int(input())\nA_ls = []\nB_ls = [float('inf')] + list(map(int, input().split(' '))) + [float('inf')]\nfor i in range(N):\n    A_ls.append(min(B_ls[i], B_ls[i + 1]))\nprint(sum(A_ls))", "N = int(input())\nB = [int(b) for b in input().split()]\nA = [0] * N\nA[0] = B[0]\nA[1] = B[0]\nfor i in range(N-1):\n  if B[i] >= max(A[i], A[i]):\n    A[i+1] = B[i]\n  else:\n    A[i] = B[i]\n    A[i+1] = B[i]\nprint(sum(A))", "n = int(input())\nA = [0]*n\nB = list(map(int,input().split()))\n\nA[0] = B[0]\nA[-1] = B[-1]\nfor i in range(1,n-1):\n  A[i] = min(B[i-1],B[i])\nprint(sum(A))", "n = int(input())\nb = list(map(int, input().split()))\nb = [b[0]] + b\nsum = 0\nfor i in range(n-1):\n  sum += min(b[i], b[i+1])\nsum += b[n-1]\nprint(sum)", "N = int(input())\nB = input().split()\n\nans = 0\n\nfor i in range(N):\n    if i == 0:\n        ans += int(B[i])\n    elif i == N-1:\n        ans += int(B[i-1])\n    else:\n        ans += min(int(B[i]),int(B[i-1]))\n\nprint(ans)", "n = int(input())\nb = list(map(int, input().split()))\nc = b[0] + b[n-2]\nfor i in range(n-2):\n  c += min(b[i],b[i+1])\nprint(c)", "n = int(input())\nb = [10**6] + list(map(int, input().split())) + [10**6]\n\nans = 0\nfor i in range(1, n+1):\n    ans += min(b[i-1], b[i])\nprint(ans)", "N = int(input())\nB = tuple(map(int, input().split()))\n\nresult = B[0] + B[-1]\nfor i in range(N-2):\n    result += min(B[i], B[i+1])\n\nprint(result)", "n=int(input())\nb=list(map(int,input().split()))\n\nc=0\n\nc+=b[0]+b[-1]\n\nfor i in range(n-2):\n    c+=min(b[i],b[i+1])\n\nprint(c)\n", "#-*-coding:utf-8-*-\nimport sys\ninput=sys.stdin.readline\n\ndef main():\n    numbers=[]\n    n = int(input())\n    numbers= list(map(int,input().split()))\n    dp=[0]*n\n\n    dp[0]=numbers[0]\n    dp[-1]=numbers[-1]\n\n    for i in range(1,n-1):\n        dp[i]=min(numbers[i-1],numbers[i])\n    print(sum(dp))\n\ndef __starting_point():\n    main()\n__starting_point()", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Wed Sep  9 16:47:54 2020\n\n@author: liang\n\"\"\"\nINF = 10**6\nN = int(input())\nB = [INF]+list(map(int,input().split()))+[INF]\n\nans = 0\n\nfor i in range(1,N+1):\n    ans += min(B[i-1], B[i])\n\nprint(ans)", "N = int(input())\nB = list(map(int, input().split()))\n \n# A_1 <= B_1\n# A_2 <= min(B_1, B_2)\n# A_3 <= min(B_2, B_3)\n# A_(N-1) <= min(B_(N-2), B_(N-1))\n# A_N <= B_(N-1)\n# ans = B_1 + min(B_1, B_2) + ... + min(B__(N-2), B_(N-1)) + B_(N-1)\n \nans = B[0] + B[N-2]\nfor i in range(1, N-1):\n  ans += min(B[i-1], B[i])\n\nprint(ans)", "N = int(input())\nB = list(map(int, input().split()))\nA = list([0]*N)\nfor i in range(N-2):\n    A[i+1] = min(B[i], B[i+1])\nA[0] = B[0]\nA[N-1] = B[N-2]\nprint(sum(A))", "n=int(input())\nb=[int(x) for x in input().split()]\na=[0]*n\na[0]=b[0]\na[n-1]=b[n-2]\nfor i in range(1,n-1):\n    s=min(b[i],b[i-1])\n    a.append(s)\n    \nprint(sum(a))", "n = int(input())\nblst = list(map(int, input().split()))\nalst = [blst[0]]\nfor i in range(n - 2):\n  alst.append(min(blst[i], blst[i + 1]))\nalst.append(blst[-1])\nprint(sum(alst))", "n = int(input())\nb = list(map(int,input().split()))\na = [0]*n\na[0]=b[0]\na[n-1] = b[-1]\nfor i in range(1,n-1):\n    a[i] = min(b[i],b[i-1])\n\nprint(sum(a))", "N = int(input())\nB = list(map(int, input().split(' ')))\nA = [ [] for i in range(N) ]\nA[0] = B[0]\nA[-1] = B[-1]\nfor i in range(N - 2):\n    A[i + 1] = min(B[i], B[i + 1])\nprint(sum(A))", "n = int(input())\nb = [int(i) for i in input().split()]\n\na =[b[0]]\n\nfor x in range(n-2):\n  s = min(b[x],b[x+1])\n  a.append(s)\n  \na.append(b[-1])\n\nprint((sum(a)))\n", "# coding: utf-8\n\n\ndef main():\n    N = int(input())\n    ans = 0\n    B = list(map(int, input().split()))\n    ans += B[0] + B[-1]\n\n    for i in range(1, N - 1):\n        ans += min(B[i - 1], B[i])\n\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\nli = list(map(int, input().split()))\nrli = li[::-1]\nrli.append(100001)\nans = [0] * N\n\nans[0] = rli[0]\nfor i in range(0, len(li)):\n    ans[i+1] = min(rli[i], rli[i+1])\n\n#print(ans)\nprint(sum(ans))", "n = int(input())\nB = list(map(int, input().split()))\nans = [B[0]]\nfor i in range(len(B)):\n    if i != len(B)-1:\n        if B[i] > B[i+1]:\n            ans.append(B[i+1])\n        else:\n            ans.append(B[i])\n    else:\n        ans.append(B[i])\nprint(sum(ans))", "n = int(input())\nalist=list(map(int,input().split()))\nalist.insert(0,1e7)\nalist.append(1e7)\ncore = 0\nfor i in range(n):\n  core +=min(alist[i],alist[i+1])\nprint(core)", "N = int(input())\nA = [0]*N\nB = list(map(int,input().split()))\n\nA[0] = B[0]\nA[-1] = B[-1]\n\nfor n in range(1,N-1):\n  A[n] = min(B[n-1],B[n])\n  \nprint(sum(A))", "n = int(input())\nb = [int(i) for i in input().split()]\nans = b[0] + b[-1]\nfor i in range(n-2):\n  ans += min(b[i], b[i+1])\nprint(ans)", "import sys\n\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninl = lambda: [int(x) for x in sys.stdin.readline().split()]\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print(\"\\033[33m\", *a, \"\\033[0m\", **dict(file=sys.stderr, **kw))\n\n\ndef solve():\n    n = ini()\n    B = inl()\n    A = [None] * n\n    A[0] = B[0]\n    for i in range(1, n - 1):\n        A[i] = min(B[i - 1], B[i])\n    A[n - 1] = B[n - 2]\n    return sum(A)\n\n\nprint(solve())\n", "n = int(input())\nb = list(map(int,input().split()))\ncount = b[0] +b[-1]\nfor i in range(n-2):\n    count += min(b[i],b[i+1])\nprint(count)", "n = int(input())\nB = list(map(int, input().split()))\n\nA = [0]*n\nA[0] = B[0]\nA[n-1] = B[n-2]\n\nif n >= 3:\n    for i in range(1, n-1):\n        A[i] = min(B[i], B[i-1])\n\nprint((sum(A)))\n", "N = int(input())\nB = list(map(int, input().split()))\nA = [B[0], B[0]]\nfor i in range(1, N-1):\n    b = B[i]\n    A.append(b)\n    a = max([A[i],A[i+1]])\n    if a > b:\n        A[A.index(a)] = b\nprint((sum(A)))\n", "N = int(input())\nB = list(map(int,input().split()))\n\nA = [0] * N\nA[0] = B[0]\n\nfor i in range(1,N-1):\n    A[i] = min(B[i],B[i-1])\n\nA[N-1] = B[N-2]\n\nprint((sum(A)))\n", "N = int(input())\nB = list(map(int, input().split()))\nans = B[0]\n\nfor i in range(1, len(B)):\n    ans += min(B[i], B[i - 1])\n\nans += B[-1]\n\nprint(ans)\n", "N, *B = list(map(int, open(0).read().split()))\nans = B[0] + B[-1]\nfor i in range(N - 2):\n    ans += min(B[i], B[i + 1])\nprint(ans)\n", "# import math\n# import statistics\n# import itertools\na=int(input())\n# b=input()\n# c=[]\n# for i in a:\n#     c.append(int(i))\n# N,K= map(int,input().split())\nf = list(map(int,input().split()))\n# g = [int(input()) for _ in range(N)]\n# h = []\n# for i in range(a):\n#     h.append(list(map(int,input().split())))\n# a = [[0] for _ in range(H)]#nizigen\nans=[f[0],f[-1]]\nfor i in range(a-2):\n    ans.append(min(f[i],f[i+1]))\n\nprint(sum(ans))", "N = int(input())\nB = list(map(int, input().split()))\n\nres = 0\n\nfor i in range(N-2):\n    res += min(B[i], B[i+1])\n\nprint(res + B[0] + B[-1])", "n = int(input())\nnum_list = list(map(int, input().split()))\n\na_list = [0]*n\na_list[0] = num_list[0]\n\nfor i in range(1, n, 1):\n\tif i != n-1:\n\t\ta_list[i] = min(num_list[i-1], num_list[i])\n\telse:\n\t\ta_list[i] = num_list[-1]\n\nsum = 0\nfor j in a_list:\n\tsum += j\n\nprint(sum)", "N = int(input())\nB = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(len(B)-1):\n    cnt += min(B[i],B[i+1])\n\n#\u7aef\u70b9\ncnt += (B[0]+B[N-2])\nprint(cnt)", "n = int(input())\nbl = list(map(int, input().split()))\nal = [0]*n\nal[0] = bl[0]\nal[-1] = bl[-1]\n\nfor i in range(n-2):\n    al[i+1] = min(bl[i], bl[i+1])\n\nprint(sum(al))", "n = int(input())\nb = list(map(int,input().split()))\na = []\na.append(b[0])\nfor i in range(1,n - 1):\n    a.append(min(b[i - 1],b[i]))\na.append(b[-1])\nnum = 0\nfor i in range(n):\n    num += a[i]\nprint(num)", "N = int(input())\nB = list(map(int,input().split()))\nA = [0]*N\n\nA[0] = B[0]\nA[N-1] = B[N-2]\n\nfor i in range(N-2):\n  if B[i] <= B[i+1]:\n    A[i+1] = B[i]\n  else:\n    A[i+1] = B[i+1]\n    \nprint(sum(A))", "N = int(input())\nB_ls = [float('inf')] + list(map(int, input().split(' '))) + [float('inf')]\nA_ls = []\nfor i in range(N):\n    A_ls.append(min(B_ls[i], B_ls[i + 1]))\nprint(sum(A_ls))", "n = int(input())\nb = list(map(int,input().split()))\nans = 0\naa = 0\nab = 100001\nfor i in range(n-1):\n    aa = min(ab,b[i])\n    ab = b[i]\n    ans += aa\nprint(ans+ab)", "N = int(input())\nA = [int(x) for x in input().split()]\nB = [A[0]]\n\nfor i in range(len(A)):\n    if(B[i] > A[i]):B[i] = A[i]\n    B.append(A[i])\nprint(sum(B))", "n = int(input())\na = [int(x) for x in input().split()]\nres = [0] * n\nres[0] = a[0]\nfor i in range(1,n-1):\n  res[i] = min(a[i],a[i-1])\nres[n-1] = a[-1]\nprint((sum(res)))\n", "n=int(input())\nb=list(map(int,input().split()))\nans=0\n\nans+=b[0]\nfor i in range(n-2):\n  ans+=min(b[i],b[i+1])\nans+=b[n-2]\nprint(ans)", "# ABC 140 C\nN = int(input())\nB = [int(i) for i in input().split()]\nans = B[0] + B[-1]\nif N >= 3:\n    for i in range(0, N-2):\n        ans += min(B[i], B[i+1])\n\nprint(ans)", "N = int(input())\nB_ls = [float('inf')] + list(map(int, input().split(' '))) + [float('inf')]\nA_ls = []\nfor i in range(N):\n    A_ls.append(min(B_ls[i], B_ls[i + 1]))\nprint(sum(A_ls))", "N = int(input())\nB = list(map(int, input().split()))\n\n# A_1 <= B_1\n# A_2 <= min(B_1, B_2)\n# A_3 <= min(B_2, B_3)\n# A_(N-1) <= min(B_(N-2), B_(N-1))\n# A_N <= B_(N-1)\n# ans = B_1 + min(B_1, B_2) + ... + min(B__(N-2), B_(N-1)) + B_(N-1)\n \nans = 0\nfor i in range(N):\n  if i == 0: ans += B[0]\n  elif i == N-1: ans += B[N-2]\n  else: ans += min(B[i-1], B[i])\n\nprint(ans)", "def resolve():\n    n = int(input())\n    b = list(map(int,input().split()))[::-1]\n    ans = b[0]+b[-1]\n    for i in range(n-2):\n        ans += (min(b[i],b[i+1]))\n    print(ans)\nresolve()", "N = int(input())\nB_ls = [float('inf')] + list(map(int, input().split(' '))) + [float('inf')]\nA_ls = []\nfor i in range(N):\n    A_ls.append(min(B_ls[i], B_ls[i + 1]))\nprint(sum(A_ls))", "N = int(input())\nbs = list(map(int,input().split()))\n\nlist_a= [bs[0]]\n\nfor i in range(1,len(bs)):\n    a = min(bs[i-1],bs[i])\n    list_a.append(a)\n    \nlist_a.append(bs[len(bs)-1])\n\nprint((sum(list_a)))\n", "N = int(input())\nB = list(map(int, input().split()))\nA = [0] * N\nA[0], A[N-1] = B[0], B[N-2]\nfor i in range(1, N-1):\n  A[i] = min(B[i-1], B[i])\nprint(sum(A))", "N = int(input())\nB = list(map(int,input().split()))\nA = [0]*(N)\nA[0] = B[0]\n\nfor i in range(N-1):\n    A[i+1] = B[i]\n    if A[i] > B[i]:\n        A[i] = B[i]\n\nprint(sum(A))", "N = int(input())\nb = list(map(int,input().split()))\na = [0]*(N)\na[0] = b[0]\na[N-1] = b[N-2]\nfor i in range(N-2):\n  a[i+1] = min(b[i],b[i+1])\n  \nprint(sum(a))", "N = int(input())\nB = list(map(int,input().split()))\n\nA = B[0] + B[-1]\nfor i in range(N-2):\n    A += min(B[i],B[i+1])\n\nprint(A)    ", "N = int(input())\nB = list(map(int, input().split()))\nA = [0] * N\nA[0] = B[0]\nfor i in range(1, N - 1):\n  A[i] = min(B[i-1], B[i])\nA[-1] = B[-1]\nprint(sum(A))", "n = int(input())\nb = list(map(int, input().split()))\n\nans = b[0] + b[n-2]\nfor i in range(n-2):\n    ans += min(b[i], b[i+1])\nprint(ans)", "N = int(input())\nl = list(map(int, input().split()))\n\nans = 0\nlast_n = 0\nfor i in l:\n    if i >= last_n:\n        ans += i\n        last_n = i\n    else:\n        ans -= last_n\n        ans += i*2\n        last_n = i\nans += l[0]\nprint(ans)", "N=int(input())\nB=list(map(int,input().split()))\nans=0\nfor i in range(N):\n    if i==0:\n        ans+=B[i]\n    elif i==N-1:\n        ans+=B[i-1]\n    else:\n        ans+=min(B[i],B[i-1])\nprint(ans)", "n=int(input())\nb=list(map(int,input().split()))\nans=0\nfor i in range(n-2):\n  ans+=min(b[i],b[i+1])\nans+=b[0]\nans+=b[n-2]\nprint(ans)", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Wed Sep  9 16:47:54 2020\n\n@author: liang\n\"\"\"\nN = int(input())\nB = list(map(int,input().split()))\n\nans = B[0]\n\nfor i in range(1,N-1):\n    ans += min(B[i-1], B[i])\nans += B[N-2]\nprint(ans)", "n=int(input())\nb=list(map(int,input().split()))\nans=b[0]+b[-1]\nfor i in range(0,n-2):\n    ans+=min(b[i],b[i+1])\nprint(ans)", "N=int(input())\nB=list(map(int,input().split()))\nprint((B[0]+B[-1]+sum(min(B[i],B[i+1]) for i in range(N-2))))\n", "n = int(input())\nb = [int(i) for i in input().split()]\nprev = b[0]\ncnt = 0\nfor i in b:\n    cnt += min(i, prev)\n    prev = i\ncnt += b[-1]\nprint(cnt)\n\n", "N = int(input())\nB = list(map(int,input().split()))\n\nA = []\nA.append(B[0])\nfor i in range(N-2):\n    if B[i] < B[i+1]:\n        A.append(B[i])\n    else:\n        A.append(B[i+1])\nA.append(B[N-2])\n\nprint(sum(A))", "N = int(input())\nA = [int(x) for x in input().split()]\nB = [A[0]]\n\nfor i in range(len(A)):\n    if(B[i] > A[i]):B[i] = A[i]\n    B.append(A[i])\nprint(sum(B))", "N = int(input())\nB_List = list(map(int,input().split()))\nA_List = [[] for i in range(N)]\nA_List[0] = B_List[0]\nA_List[1] = B_List[0]\nfor i in range(1,N - 1):\n    if B_List[i] <= B_List[i-1]:\n        A_List[i] = B_List[i]\n    A_List[i+1] = B_List[i]\n        \n        \n\nprint(sum(A_List))", "n = int(input())\nb = list(map(int,input().split()))\nc=0\nfor i in range(len(b)-1):\n    c+=min(b[i],b[i+1])\nprint(c+b[0]+b[-1])", "n=int(input())\nb=list(map(int,input().split()))\nc=[b[0]]\nfor i in range(len(b)-1):\n    x=min(b[i],b[i+1])\n    c.append(x)\nprint(sum(c)+b[n-2])", "import sys\nimport math\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    N = I()\n    B = LI()\n    ans = B[-1]+B[0]\n    for i in range(N-2):\n        ans += min(B[i], B[i+1])\n    print(ans)\n        \n        \n    \ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\narr = list(map(int, input().split()))\n\nans = []\n\nfor (i, ele) in enumerate(arr):\n    if i == 0:\n        ans.append(ele)\n    else:\n        ans.append(min(arr[i - 1], arr[i]))\n    if i == len(arr) - 1:\n        ans.append(arr[-1])\nprint((sum(ans)))\n", "N = int(input())\nB = list(map(int,input().split()))\n\nB = B[::-1]\nA = []\nfor i in range(N):\n  if i == 0:\n    A.append(B[0])\n  elif i >= N - 1:\n    A.append(B[i-1])\n  else:\n    a = min(B[i],B[i-1])\n    A.append(a)\n    \nprint(sum(A))", "N = int(input())\nls = [int(i) for i in input().split()]\nif len(ls) == 1:\n  print(ls[0]*2)\nelse:\n  als = [ls[0]]\n  for n in range(1, N-1):\n    als.append(min(ls[n-1], ls[n]))\n  als.append(ls[-1])\n  print(sum(als))", "n=int(input())\nb=list(map(int,input().split()))\na=[]\n\na.append(b[0])\nfor i in range(1,n-1) :\n  if b[i-1] < b[i] :\n    a.append(b[i-1])\n  else :\n    a.append(b[i])\na.append(b[n-2])  \nprint(sum(a))", "N = int(input())\nB = tuple(map(int, input().split()))\n\nresult = 0\ntmp = 0\nfor i in B:\n    result += min(tmp, i)\n    tmp = i\n\nresult += B[0] + B[-1]\n\nprint(result)", "N = int(input())\nB = [int(n) for n in input().split()]\n\nA = [0] * N\n\nA[0] = B[0]\nA[-1] = B[-1]\n\nfor i in range(1, N-1):\n    A[i] = B[i-1]\n\n    if A[i] > B[i]:\n        A[i] = B[i]\n    \nprint(sum(A))", "n=int(input());b=[*map(int,input().split())]\nprint(b[0]+sum(min(b[i-1],b[i]) for i in range(1,n-1))+b[-1])", "n = int(input())\nb = list(map(int,input().split()))\nans = b[0] + b[n - 2]\nfor i in range(n - 2):\n    ans = ans + min(b[i], b[i + 1])\n\nprint(ans)\n", "n = int(input())\nbn = [int(num) for num in input().split()]\n \nan = [0]*n\nan[0] = bn[0]\nan[n-1] = bn[n-2]\nfor i in range(1,n-1):\n    s = min(bn[i],bn[i-1])\n    an.append(s)\n    \nprint(sum(an))", "n = int(input())\nb = list(map(int, input().split()))\na = b[0] + b[-1]\nif n > 2:\n    for i in range(n-2):\n        if b[i] <= b[i+1]:\n            a += b[i]\n        else:\n            a += b[i+1]\nprint(a)", "N = int(input())\nA = []\nB = [int(i) for i in input().split()]\nans = 0\nfor i in range(N):\n    if(i == 0):\n        A.append(B[0])\n        continue\n    if(i == N-1):\n        A.append(B[N-2])\n        continue\n    a = B[i-1]\n    b = B[i]\n    if(a < b):\n        A.append(a)\n    else:\n        A.append(b)\nfor i in A:\n    ans += i\nprint(ans)", "import math\nimport collections\nimport itertools\n\ndef resolve():\n\n    N=int(input())\n    B=list(map(int,input().split()))\n\n    cnt=B[0]\n    for i in range(N-2):\n        if(B[i]<=B[i+1]):\n            cnt+=B[i]\n        else:\n            cnt+=B[i+1]\n    cnt+=B[N-2]\n    print(cnt)\n    \nresolve()\n", "n = int(input())\nB = list(map(int, input().split()))\nA = [B[0]]\n\nfor i in range(n-2):\n    A.append(min(B[i],B[i+1]))\n\nA.append(B[-1])\n\nprint((sum(A)))\n", "n = int(input())\nb = [int(s) for s in input().split()]\nb.append(b[n - 2])\na = [0] * n\na[0] = b[0]\nfor i in range(1, n):\n    a[i] = min(b[i - 1], b[i])\nprint(sum(a))", "n = int(input())\nb = [int(i) for i in input().split()]\n\nA = [b[0]] + [min(b[i],b[i-1]) for i in range(1,n-1)] + [b[-1]]\n\nprint(sum(A))", "# C\n\nN = int(input())\nB = [10**10] + list(map(int,input().split())) + [10**10]\nans = 0\nfor i in range(N):\n  ans += min(B[i],B[i+1])\nprint(ans)\n"]