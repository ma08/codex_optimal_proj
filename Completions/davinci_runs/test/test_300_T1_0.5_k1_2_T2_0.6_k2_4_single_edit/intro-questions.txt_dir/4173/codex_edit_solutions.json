["\nq = int(input())\n\nfor i in range(q):\n    n, a, b = [int(x) for x in input().split()]\n    \n    min_bottles = n // 2\n    min_cost = min_bottles * b + (n % 2) * a\n    if a > b:\n        min_cost = min(min_cost, (n // 2) * a + (n % 2) * b)\n    \n    print(min_cost)\n", "\n\n#Solution\nfor _ in range(int(input())): #input number of test cases\n    n,a,b=map(int,input().split()) #input number of candies, price of 1 candy and price of 2 candies\n    x=n//2 #1st part of the cost\n    y=n%2 #2nd part of the cost\n    cost=x*min(a*2,b)+y*a #calculate the cost\n    print(cost)\n", "#Author:Deeapak\n\n#Solution\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n", "import sys\nsys.setrecursionlimit(12000)\n\nq = int(input())\n\nfor i in range(q):\n    n, a, b = [int(x) for x in input().split()]\n    \n    \n    def min_cost(n, a, b):\n        if n == 0:\n            return 0\n        elif n == 1:\n            return a\n        elif n == 2:\n            return min(2*a, b)\n        else:\n            return min(a + min_cost(n-1, a, b), b + min_cost(n-2, a, b))\n    \n    # min_bottles = n//2\n    # min_cost = min_bottles * b + (n%2)*a\n    # if a > b:\n    #     min_cost = min(min_cost, (n//2)*a + (n%2)*b)\n    \n    print(min_cost)\n", "\n\nn = int(input())\ns = input()\na = s.count('A')\nd = n - a\nif a > d:\n    print('Anton')\nelif d > a:\n    print('Danik')\nelse:\n    print('Friendship')\n", "\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n", "\n\n#Solution\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split()) \n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n", "#!/usr/bin/python\n\nq = int(input())\n\nfor i in range(q):\n    n, a, b = [int(x) for x in input().split()]\n    \n    min_bottles = n//2\n    min_cost = min_bottles * b + (n%2)*a\n    if a > b:\n        min_cost = min(min_cost, (n//2)*a + (n%2)*b)\n    \n    print(min_cost)\n"]