2022-04-22 08:18:00.708005 num operations 1
2022-04-22 08:18:00.708016 size on input set 1
2022-04-22 08:18:00.708141 using api key soukgp
2022-04-22 08:18:08.466520 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n#\n\ndef main():\n    # Read input\n    n, k = [int(i) for i in input().split()]\n    s = input()\n\n    # Initialize the array to store the cost of placing a router in the room\n    cost = [0] * n\n    for i in range(n):\n        if s[i] == '1':\n            cost[i] = i + 1\n\n    # Update the cost based on the routers' range\n    for i in range(k, n):\n        cost[i] = min(cost[i], cost[i - k] + i + 1)\n\n    # Sum the cost\n    total_cost = sum(cost)\n\n    # Output\n    print(total_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main(input_file):\n    # Read input\n    n, k = [int(i) for i in input_file.readline().split()]\n    s = input_file.readline()\n\n    # Initialize the array to store the cost of placing a router in the room\n    cost = [0] * n\n    for i in range(n):\n        if s[i] == '1':\n            cost[i] = i + 1\n\n    # Update the cost based on the routers' range\n    for i in range(k, n):\n        cost[i] = min(cost[i], cost[i - k] + i + 1)\n\n    # Sum the cost\n    total_cost = sum(cost)\n\n    # Output\n    print(total_cost)\n\n\nif __name__ == \"__main__\":\n    with open('input.txt', 'r') as input_file:\n        main(input_file)\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    # Read input\n\n    n, k = [int(i) for i in input().split()]\n    s = input()\n\n    # Initialize the array to store the cost of placing a router in the room\n    cost = [0] * n\n    for i, room in enumerate(s):\n        if room == '1':\n            cost[i] = i + 1\n\n    # Update the cost based on the routers' range\n    for i in range(k, n):  # For each room\n        cost[i] = min(cost[i], cost[i - k] + i + 1)  # Update the cost\n\n    # Sum the cost\n    total_cost = sum(cost)  # Sum the cost\n\n    # Output\n    print(total_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650615480,
  "object": "edit"
}
2022-04-22 08:18:08.466801 fix syntax errors 4 ['\ndef main():\n    pass\n\n\nif __name__ == "__main__":\n    main()\n', '\n#\n\ndef main():\n    # Read input\n    n, k = [int(i) for i in input().split()]\n    s = input()\n\n    # Initialize the array to store the cost of placing a router in the room\n    cost = [0] * n\n    for i in range(n):\n        if s[i] == \'1\':\n            cost[i] = i + 1\n\n    # Update the cost based on the routers\' range\n    for i in range(k, n):\n        cost[i] = min(cost[i], cost[i - k] + i + 1)\n\n    # Sum the cost\n    total_cost = sum(cost)\n\n    # Output\n    print(total_cost)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main(input_file):\n    # Read input\n    n, k = [int(i) for i in input_file.readline().split()]\n    s = input_file.readline()\n\n    # Initialize the array to store the cost of placing a router in the room\n    cost = [0] * n\n    for i in range(n):\n        if s[i] == \'1\':\n            cost[i] = i + 1\n\n    # Update the cost based on the routers\' range\n    for i in range(k, n):\n        cost[i] = min(cost[i], cost[i - k] + i + 1)\n\n    # Sum the cost\n    total_cost = sum(cost)\n\n    # Output\n    print(total_cost)\n\n\nif __name__ == "__main__":\n    with open(\'input.txt\', \'r\') as input_file:\n        main(input_file)\n', '\n\ndef main():\n    # Read input\n\n    n, k = [int(i) for i in input().split()]\n    s = input()\n\n    # Initialize the array to store the cost of placing a router in the room\n    cost = [0] * n\n    for i, room in enumerate(s):\n        if room == \'1\':\n            cost[i] = i + 1\n\n    # Update the cost based on the routers\' range\n    for i in range(k, n):  # For each room\n        cost[i] = min(cost[i], cost[i - k] + i + 1)  # Update the cost\n\n    # Sum the cost\n    total_cost = sum(cost)  # Sum the cost\n\n    # Output\n    print(total_cost)\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-22 08:18:08.466847 size on output set 4
2022-04-22 08:18:08.466859 num operations 1
2022-04-22 08:18:08.466865 size on input set 1
2022-04-22 08:18:08.467003 using api key sunu
2022-04-22 08:18:24.029453 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution\n\nN, K = [int(x) for x in input().split()]\nS = input()\n\nleft = 0\nright = K\ncount = 0\nfor i in range(N):\n    if S[i] == '1':\n        continue\n    count += 1\n    if i < left:\n        continue  # skip\n    if left <= right:\n        right = min(N - 1, right + K - 1)\n    if right < i:\n        left = min(left + K, N - 1)\n        right = min(right + K, N - 1)\nprint(count)\n\nprint(cost)\n"
    },
    {
      "index": 1,
      "text": "\n#\n# Solution\n\nn, k = [int(x) for x in input().split()]\ns = input()\n\ncost = 0\nfor i in range(1, n + 1):\n    if s[i - 1] == '1':\n        cost += i\n        continue\n    if i - k - 1 >= 0 and s[i - k - 1] == '1':\n        continue\n    if i + k - 1 < n and s[i + k - 1] == '1':\n        continue\n    cost += i\n\nprint(cost)\n"
    },
    {
      "index": 2,
      "text": "\n\n# Solution 1\n\nn, k = [int(x) for x in input().split()]\ns = input()\n\n\ncost = 0\nfor i in range(1, n + 1):\n    if s[i - 1] == '1':\n        cost += i\n        continue\n    if i - k - 1 >= 0 and s[i - k - 1] == '1':\n        continue\n    if i + k - 1 < n and s[i + k - 1] == '1':\n        continue\n    cost += i\n\nprint(cost)\n"
    },
    {
      "index": 3,
      "text": "\n\n# import numpy as np\n# import pandas as pd\n\n# df = pd.read_csv(\"test.csv\")\n\n# df[\"x\"] = np.zeros(len(df))\n# df[\"y\"] = np.zeros(len(df))\n\n# df.to_csv(\"test.csv\", index=False)\n\nimport csv\n\nwith open(\"test.csv\", \"r\") as f:\n    reader = csv.reader(f)\n    for row in reader:\n        print(row)\n\n# with open(\"test.csv\", \"r\") as f:\n#     reader = csv.reader(f)\n#     l = [row for row in reader]\n#     print(l)\n"
    }
  ],
  "created": 1650615488,
  "object": "edit"
}
2022-04-22 08:18:24.029702 fix syntax errors 4 ["\n\n# Solution\n\nN, K = [int(x) for x in input().split()]\nS = input()\n\nleft = 0\nright = K\ncount = 0\nfor i in range(N):\n    if S[i] == '1':\n        continue\n    count += 1\n    if i < left:\n        continue  # skip\n    if left <= right:\n        right = min(N - 1, right + K - 1)\n    if right < i:\n        left = min(left + K, N - 1)\n        right = min(right + K, N - 1)\nprint(count)\n\nprint(cost)\n", "\n#\n# Solution\n\nn, k = [int(x) for x in input().split()]\ns = input()\n\ncost = 0\nfor i in range(1, n + 1):\n    if s[i - 1] == '1':\n        cost += i\n        continue\n    if i - k - 1 >= 0 and s[i - k - 1] == '1':\n        continue\n    if i + k - 1 < n and s[i + k - 1] == '1':\n        continue\n    cost += i\n\nprint(cost)\n", "\n\n# Solution 1\n\nn, k = [int(x) for x in input().split()]\ns = input()\n\n\ncost = 0\nfor i in range(1, n + 1):\n    if s[i - 1] == '1':\n        cost += i\n        continue\n    if i - k - 1 >= 0 and s[i - k - 1] == '1':\n        continue\n    if i + k - 1 < n and s[i + k - 1] == '1':\n        continue\n    cost += i\n\nprint(cost)\n", '\n\n# import numpy as np\n# import pandas as pd\n\n# df = pd.read_csv("test.csv")\n\n# df["x"] = np.zeros(len(df))\n# df["y"] = np.zeros(len(df))\n\n# df.to_csv("test.csv", index=False)\n\nimport csv\n\nwith open("test.csv", "r") as f:\n    reader = csv.reader(f)\n    for row in reader:\n        print(row)\n\n# with open("test.csv", "r") as f:\n#     reader = csv.reader(f)\n#     l = [row for row in reader]\n#     print(l)\n']
2022-04-22 08:18:24.029741 size on output set 4
