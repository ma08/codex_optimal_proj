2022-04-22 08:58:06.642655 num operations 1
2022-04-22 08:58:06.642675 size on input set 1
2022-04-22 08:58:06.642824 using api key kouti
2022-04-22 08:58:13.584426 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\ncups = 0\npages = 0\ndays = 0\n\nwhile cups < n:\n    pages += a[cups]\n    days += 1\n    cups += 1\n    if cups < n:\n        pages -= days - 1\n\nif pages < m:\n    days = -1\n\nprint(days)\n"
    },
    {
      "index": 1,
      "text": "\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\ncups = 0\npages = 0\ndays = 0\n\nwhile cups < n:\n    pages += a[cups]\n    days += 1\n    cups += 1\n    if pages >= m:\n        break\n    if cups < n:\n        pages -= days - 1\n\nif pages < m:\n    days = -1\n\nprint(days)\n"
    },
    {
      "index": 2,
      "text": "a = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n    \nfor i in range(c, d + 1):\n    print(str(a) + ' x ' + str(i) + ' = ' + str(a * i))\n"
    },
    {
      "index": 3,
      "text": "\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\ncups = 0\npages = 0\ndays = 1\n\nwhile cups < n:\n    pages += a[cups]\n    cups += 1\n    if pages >= m:\n        break\n    if cups < n:\n        pages -= days - 1\n        days += 1\n\nif pages < m:\n    days = -1\n\nprint(days)\n"
    }
  ],
  "created": 1650617886,
  "object": "edit"
}
2022-04-22 08:58:13.584754 fix syntax errors 4 ['\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\ncups = 0\npages = 0\ndays = 0\n\nwhile cups < n:\n    pages += a[cups]\n    days += 1\n    cups += 1\n    if cups < n:\n        pages -= days - 1\n\nif pages < m:\n    days = -1\n\nprint(days)\n', '\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\ncups = 0\npages = 0\ndays = 0\n\nwhile cups < n:\n    pages += a[cups]\n    days += 1\n    cups += 1\n    if pages >= m:\n        break\n    if cups < n:\n        pages -= days - 1\n\nif pages < m:\n    days = -1\n\nprint(days)\n', "a = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n    \nfor i in range(c, d + 1):\n    print(str(a) + ' x ' + str(i) + ' = ' + str(a * i))\n", '\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\ncups = 0\npages = 0\ndays = 1\n\nwhile cups < n:\n    pages += a[cups]\n    cups += 1\n    if pages >= m:\n        break\n    if cups < n:\n        pages -= days - 1\n        days += 1\n\nif pages < m:\n    days = -1\n\nprint(days)\n']
2022-04-22 08:58:13.584796 size on output set 4
2022-04-22 08:58:13.584809 num operations 1
2022-04-22 08:58:13.584815 size on input set 1
2022-04-22 08:58:13.584968 using api key soukgp
2022-04-22 08:58:31.881108 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, m = map(int, input().split())\n\n# Return the minimum number of days required for A to write B pages, or -1 if this is impossible.\ncups = list(map(int, input().split()))\n\n#sorted_cups = sorted(cups, reverse=True)\n\ndef get_pages_written(cups, day):\n    if day == 0:\n        return cups[0]\n    else:\n        return cups[day] - day\n\ndef get_pages_written_for_day(cups, day):\n    pages = 0\n    for i in range(day+1):\n        pages += get_pages_written(cups, i)\n    return pages\n\ndef get_pages_written_for_n_days(cups, n):\n    pages = 0\n    for i in range(n):\n        pages += get_pages_written_for_day(cups, i)\n    return pages\n\ndef get_min_days(cups, m):\n    left = 1\n    right = n\n    while left <= right:\n        mid = (left + right) // 2\n        if get_pages_written_for_n_days(cups, mid) >= m:\n            right = mid\n        else:\n            left = mid + 1\n    if get_pages_written_for_n_days(cups, 1) >= m:\n        return 1\n    if get_pages_written_for_n_days(cups, left) >= m:\n        return left\n    else:\n        return -1\n\nprint(get_min_days(cups, m))\n"
    },
    {
      "index": 1,
      "text": "\n\nn, m = map(int, input().split())\ncups = list(map(int, input().split()))\n\n#sorted_cups = sorted(cups, reverse=True)\n\ndef get_pages_written(cups, day):\n    if day == 0:\n        return cups[day]\n    else:\n        return cups[day] - day\n\ndef get_pages_written_for_day(cups, day):\n    pages = 0\n    for i in range(day+1):\n        pages += get_pages_written(cups, i)\n    return pages\n\ndef get_pages_written_for_n_days(cups, n):\n    pages = 0\n    for i in range(n):\n        pages += get_pages_written_for_day(cups, i)\n    return pages\n\ndef get_min_days(cups, m):\n    if get_pages_written_for_n_days(cups, 1) >= m:\n        return 1\n    left = 0\n    right = n-1\n    while left < right:\n        mid = (left + right) // 2\n        if get_pages_written_for_n_days(cups, mid) >= m:\n            right = mid\n        else:\n            left = mid + 1\n    if get_pages_written_for_n_days(cups, left) >= m:\n        return left\n    else:\n        return -1\n\nprint(get_min_days(cups, m))\n"
    },
    {
      "index": 2,
      "text": "import sys\n\nn, m = map(int, input().split())\n\nsys.setrecursionlimit(10**6)\ncups = list(map(int, input().split()))\n\n#sorted_cups = sorted(cups, reverse=True)\n\ndef get_pages_written(cups, day):\n    if day == 0:\n        return cups[0]\n    else:\n        return cups[day] - day\n\ndef get_pages_written_for_day(cups, day):\n    pages = 0\n    for i in range(day+1):\n        if pages > m:\n            break\n        pages += get_pages_written(cups, i)\n    return pages\n\ndef get_pages_written_for_n_days(cups, n):\n    pages = 0\n    for i in range(n):\n        pages += get_pages_written_for_day(cups, i)\n        if pages > m:\n            break\n    return pages\n\ndef get_min_days(cups, m):\n    if get_pages_written_for_n_days(cups, 1) >= m:\n        return 1\n    left = 1\n    right = n\n    while left < right - 1:\n        mid = (left + right) // 2\n        if get_pages_written_for_n_days(cups, mid) >= m:\n            right = mid\n        else:\n            left = mid + 1\n    return left\n\nprint(get_min_days(cups, m))\n"
    },
    {
      "index": 3,
      "text": "# n, m = map(int, input().split())\n# cups = list(map(int, input().split()))\n\n\n# #sorted_cups = sorted(cups, reverse=True)\n\n# def get_pages_written(cups, day):\n#     if day == 0:\n#         return cups[0]\n#     else:\n#         return cups[day] - day\n\n# def get_pages_written_for_day(cups, day):\n#     pages = 0\n#     for i in range(day+1):\n#         pages += get_pages_written(cups, i)\n#     return pages\n\n# def get_pages_written_for_n_days(cups, n):\n#     pages = 0\n#     for i in range(n):\n#         pages += get_pages_written_for_day(cups, i)\n#     return pages\n\n# def get_min_days(cups, m):\n#     if get_pages_written_for_n_days(cups, 1) >= m:\n#         return 1\n#     left = 1\n#     right = n\n#     while left < right:\n#         mid = (left + right) // 2\n#         if get_pages_written_for_n_days(cups, mid) >= m:\n#             right = mid\n#         else:\n#             left = mid + 1\n#     if get_pages_written_for_n_days(cups, left) >= m:\n#         return left\n#     else:\n#         return -1\n\n# print(get_min_days(cups, m))\n"
    }
  ],
  "created": 1650617893,
  "object": "edit"
}
2022-04-22 08:58:31.881413 fix syntax errors 4 ['\n\nn, m = map(int, input().split())\n\n# Return the minimum number of days required for A to write B pages, or -1 if this is impossible.\ncups = list(map(int, input().split()))\n\n#sorted_cups = sorted(cups, reverse=True)\n\ndef get_pages_written(cups, day):\n    if day == 0:\n        return cups[0]\n    else:\n        return cups[day] - day\n\ndef get_pages_written_for_day(cups, day):\n    pages = 0\n    for i in range(day+1):\n        pages += get_pages_written(cups, i)\n    return pages\n\ndef get_pages_written_for_n_days(cups, n):\n    pages = 0\n    for i in range(n):\n        pages += get_pages_written_for_day(cups, i)\n    return pages\n\ndef get_min_days(cups, m):\n    left = 1\n    right = n\n    while left <= right:\n        mid = (left + right) // 2\n        if get_pages_written_for_n_days(cups, mid) >= m:\n            right = mid\n        else:\n            left = mid + 1\n    if get_pages_written_for_n_days(cups, 1) >= m:\n        return 1\n    if get_pages_written_for_n_days(cups, left) >= m:\n        return left\n    else:\n        return -1\n\nprint(get_min_days(cups, m))\n', '\n\nn, m = map(int, input().split())\ncups = list(map(int, input().split()))\n\n#sorted_cups = sorted(cups, reverse=True)\n\ndef get_pages_written(cups, day):\n    if day == 0:\n        return cups[day]\n    else:\n        return cups[day] - day\n\ndef get_pages_written_for_day(cups, day):\n    pages = 0\n    for i in range(day+1):\n        pages += get_pages_written(cups, i)\n    return pages\n\ndef get_pages_written_for_n_days(cups, n):\n    pages = 0\n    for i in range(n):\n        pages += get_pages_written_for_day(cups, i)\n    return pages\n\ndef get_min_days(cups, m):\n    if get_pages_written_for_n_days(cups, 1) >= m:\n        return 1\n    left = 0\n    right = n-1\n    while left < right:\n        mid = (left + right) // 2\n        if get_pages_written_for_n_days(cups, mid) >= m:\n            right = mid\n        else:\n            left = mid + 1\n    if get_pages_written_for_n_days(cups, left) >= m:\n        return left\n    else:\n        return -1\n\nprint(get_min_days(cups, m))\n', 'import sys\n\nn, m = map(int, input().split())\n\nsys.setrecursionlimit(10**6)\ncups = list(map(int, input().split()))\n\n#sorted_cups = sorted(cups, reverse=True)\n\ndef get_pages_written(cups, day):\n    if day == 0:\n        return cups[0]\n    else:\n        return cups[day] - day\n\ndef get_pages_written_for_day(cups, day):\n    pages = 0\n    for i in range(day+1):\n        if pages > m:\n            break\n        pages += get_pages_written(cups, i)\n    return pages\n\ndef get_pages_written_for_n_days(cups, n):\n    pages = 0\n    for i in range(n):\n        pages += get_pages_written_for_day(cups, i)\n        if pages > m:\n            break\n    return pages\n\ndef get_min_days(cups, m):\n    if get_pages_written_for_n_days(cups, 1) >= m:\n        return 1\n    left = 1\n    right = n\n    while left < right - 1:\n        mid = (left + right) // 2\n        if get_pages_written_for_n_days(cups, mid) >= m:\n            right = mid\n        else:\n            left = mid + 1\n    return left\n\nprint(get_min_days(cups, m))\n', '# n, m = map(int, input().split())\n# cups = list(map(int, input().split()))\n\n\n# #sorted_cups = sorted(cups, reverse=True)\n\n# def get_pages_written(cups, day):\n#     if day == 0:\n#         return cups[0]\n#     else:\n#         return cups[day] - day\n\n# def get_pages_written_for_day(cups, day):\n#     pages = 0\n#     for i in range(day+1):\n#         pages += get_pages_written(cups, i)\n#     return pages\n\n# def get_pages_written_for_n_days(cups, n):\n#     pages = 0\n#     for i in range(n):\n#         pages += get_pages_written_for_day(cups, i)\n#     return pages\n\n# def get_min_days(cups, m):\n#     if get_pages_written_for_n_days(cups, 1) >= m:\n#         return 1\n#     left = 1\n#     right = n\n#     while left < right:\n#         mid = (left + right) // 2\n#         if get_pages_written_for_n_days(cups, mid) >= m:\n#             right = mid\n#         else:\n#             left = mid + 1\n#     if get_pages_written_for_n_days(cups, left) >= m:\n#         return left\n#     else:\n#         return -1\n\n# print(get_min_days(cups, m))\n']
2022-04-22 08:58:31.881571 size on output set 4
