["\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    for i in range(m):\n        for j in range(n):\n            if a[j] >= m - i:\n                print(\"#\", end=\"\")\n            else:\n                print(\" \", end=\"\")\n        print(\"\")\n    print(a)\n    print(\"YES\" if sorted(a) == a else \"NO\") \n\nmain()\n", "\n\ndef main():\n    pass\n\nmain()\n", "\nimport sys\n\nn = int(input())\narr = list(map(int, input().split()))\n\ndef sort_ravioli(arr):\n    sorted_array = []\n    stacks = []\n    for i in range(len(arr)):\n        stacks.append(arr[i])\n    while len(stacks) > 0:\n        tallest_stack = max(stacks)\n        tallest_stack_index = stacks.index(tallest_stack)\n        sorted_array.append(tallest_stack)\n        del stacks[tallest_stack_index]\n    return sorted_array\n\ndef check_ravioli_sort(arr):\n    if sort_ravioli(arr) == sorted(arr):\n        return \"YES\"\n    else:\n        return \"NO\"\n\nprint(check_ravioli_sort(arr))\n", "\nfrom functools import reduce\nimport sys\n\nn = int(input())\narr = list(map(int, input().split()))\n\ndef sort_ravioli(a, b):\n    if a > b:\n        return 1\n    else:\n        return 0\n\ndef check_ravioli_sort(arr):\n    if sort_ravioli(arr) == sorted(arr):\n        return \"YES\"\n    else:\n        return \"NO\"\n\nprint(check_ravioli_sort(arr))\n", "\n\ndef insertion_sort(a):\n    n = len(a)\n    for i in range(1, n):\n        v = a[i]\n        j = i - 1\n        while j >= 0 and a[j] > v:\n            a[j+1] = a[j]\n            j -= 1\n        a[j+1] = v\n        print(a)\n\ndef bubble_sort(a):\n    n = len(a)\n    flag = True\n    while flag:\n        flag = False\n        for j in range(n-1, 0, -1):\n            if a[j] < a[j-1]:\n                a[j], a[j-1] = a[j-1], a[j]\n                flag = True\n        print(a)\n\ndef selection_sort(a):\n    n = len(a)\n    for i in range(n):\n        minj = i\n        for j in range(i, n):\n            if a[j] < a[minj]:\n                minj = j\n        a[i], a[minj] = a[minj], a[i]\n        print(a)\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*a)\n    #insertion_sort(a)\n    #bubble_sort(a)\n    #selection_sort(a)\n\nmain()\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    for i in range(m):\n        for j in range(n):\n            if a[j] >= m - i:\n                print(\"#\", end=\"\")\n            else:\n                print(\" \", end=\"\")\n        print(\"\")\n\n\nmain()\n", "\n\nimport sys\n\nn = int(input())\n\narr = list(map(int, input().split()))\n\ndef sort_ravioli(arr):\n    sorted_array = []\n    stacks = []\n    for i in range(len(arr)):\n        stacks.append(arr[i])\n    while len(stacks) > 0:\n        tallest_stack = max(stacks)\n        tallest_stack_index = stacks.index(tallest_stack)\n        sorted_array.append(tallest_stack)\n        del stacks[tallest_stack_index]\n    return sorted_array\n\n\ndef check_ravioli_sort(arr):\n    if sort_ravioli(arr) == sorted(arr):\n        return \"YES\"\n    else:\n        return \"NO\"\n\nprint(check_ravioli_sort(arr))\n", "\ndef sort_ravioli(arr):\n    sorted_array = []\n    stacks = []\n    for i in range(len(arr)):\n        stacks.append(arr[i])\n    while len(stacks) > 0:\n        tallest_stack = max(stacks)\n        tallest_stack_index = stacks.index(tallest_stack)\n        sorted_array.append(tallest_stack)\n        del stacks[tallest_stack_index]\n    return sorted_array\n\ndef check_ravioli_sort(arr):\n    if sort_ravioli(arr) == sorted(arr):\n        return \"YES\"\n    else:\n        return \"NO\"\n"]