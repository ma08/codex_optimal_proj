["\n\ndef main():\n    expression = raw_input()\n    result = eval(str(expression))\n    print(result)\n\nif __name__ == \"__main__\":\n    main()\n", "\nexpression = input()\nresult = eval(expression)\nprint(result)\n", "\n\ndef main():\n    expression = expression.replace(' ', '')\n    expression = input()\n    expression = expression.split('+')\n    result = 0\n    for i in expression:\n        i = i.split('-')\n        for j in i:\n            result += int(j)\n        result -= len(i) - 1\n    print(result)\n\nmain()\n", "\n\ndef main():\n    expression = raw_input()\n    result = eval(expression)\n    print(result)\n\nif __name__ == \"__main__\":\n    main()\n", "\nexpression = input()\nexpression = expression.split('+')\nresult = 0\nfor i in expression:\n    i = i.split('-')\n    for j in i:\n        result += int(j)\n    result -= len(i) - 1\nprint(result)\n", "\nfrom math import *\nfrom sympy import *\nfrom sympy.parsing.sympy_parser import parse_expr\n\ndef main():\n    expression = input()\n    result = parse_expr(expression)\n    print(result)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    expression = input()\n    expression = expression.split('+')\n    result = 0\n    for i in expression:\n        i = i.split('-')\n        for j in i:\n            result += int(j)\n        result -= len(i) - 1\n    print(result) \n\nmain()\n", "\n\ndef main():\n    expression = input()\n    expression = expression.split('+')\n    result = 0\n    for i in expression:\n        i = i.split('-')\n        for j in i:\n            result += int(j)\n        result -= len(i) - 1\n    print(result)\n\nif __name__ == '__main__':\n    main()\n"]