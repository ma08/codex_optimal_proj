2022-04-22 08:50:58.374555 num operations 1
2022-04-22 08:50:58.374574 size on input set 1
2022-04-22 08:50:58.374725 using api key kouti
2022-04-22 08:51:04.424984 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom operator import itemgetter\n\n\ndef get_max_possible_sum_cards(cards):\n    cards.sort(key=itemgetter(1), reverse=True)\n    return sum(card[1] for card in cards[:K])\n\nA, B, C, K = map(int, input().split())\ncards = [('A', A), ('B', B), ('C', C)]\nprint(get_max_possible_sum_cards(cards))\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom operator import itemgetter\n\ndef get_max_possible_sum(cards):\n    cards.sort(key=itemgetter(1), reverse=True)\n    return sum(card[1] if card[1] > 0 else 0 for card in cards[:K])\n\nA, B, C, K = map(int, input().split()) # 1 2 3 4\ncards = [('A', A), ('B', B), ('C', C)]\nprint(get_max_possible_sum(cards))\n"
    },
    {
      "index": 2,
      "text": "\nfrom operator import itemgetter\n\ndef get_max_possible_sum(cards):\n    cards.sort(key=itemgetter(1), reverse=True)\n    return sum(card[1] for card in cards[:k])\n\na, b, c, k = map(int, input().split())\ncards = [('A', A), ('B', B), ('C', C)]\nprint(get_max_possible_sum(cards))\n"
    },
    {
      "index": 3,
      "text": "\n"
    }
  ],
  "created": 1650617458,
  "object": "edit"
}
2022-04-22 08:51:04.425269 fix syntax errors 4 ["\nfrom operator import itemgetter\n\n\ndef get_max_possible_sum_cards(cards):\n    cards.sort(key=itemgetter(1), reverse=True)\n    return sum(card[1] for card in cards[:K])\n\nA, B, C, K = map(int, input().split())\ncards = [('A', A), ('B', B), ('C', C)]\nprint(get_max_possible_sum_cards(cards))\n", "\n\nfrom operator import itemgetter\n\ndef get_max_possible_sum(cards):\n    cards.sort(key=itemgetter(1), reverse=True)\n    return sum(card[1] if card[1] > 0 else 0 for card in cards[:K])\n\nA, B, C, K = map(int, input().split()) # 1 2 3 4\ncards = [('A', A), ('B', B), ('C', C)]\nprint(get_max_possible_sum(cards))\n", "\nfrom operator import itemgetter\n\ndef get_max_possible_sum(cards):\n    cards.sort(key=itemgetter(1), reverse=True)\n    return sum(card[1] for card in cards[:k])\n\na, b, c, k = map(int, input().split())\ncards = [('A', A), ('B', B), ('C', C)]\nprint(get_max_possible_sum(cards))\n", '\n']
2022-04-22 08:51:04.425302 size on output set 4
2022-04-22 08:51:04.425313 num operations 1
2022-04-22 08:51:04.425319 size on input set 1
2022-04-22 08:51:04.425455 using api key soukgp
2022-04-22 08:51:11.473289 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# A, B, C, K = map(int, input().split())\n# A, B, C, K = 2, 1, 1, 3\n\n\n# if K <= A:\n#     print(K)\n# elif K <= A+B:\n#     print(A)\n# else:\n#     print(A - (K - A - B))\n"
    },
    {
      "index": 1,
      "text": "\n\n\n# A, B, C, K = map(int, input().split())\nA, B, C, K = 2, 1, 1, 3\n\nif K <= A:\n    print(K)\nelif K <= A+B:\n    print(A)\nelse:\n    print(A - (K - A - B))\n"
    },
    {
      "index": 2,
      "text": "\n\nA, B, C, K = map(int, input().split())\n# A, B, C, K = 2, 1, 1, 3\n\nif K <= A:\n    print(K)\nelif K <= A+B:\n    print(A)\nelse:\n    print(A - (K - A - B))\n"
    },
    {
      "index": 3,
      "text": "\n\nA, B, C, K = map(int, input().split())\n# A, B, C, K = 2, 1, 1, 3\n\nif K <= A:\n    print(K)\nelif K <= A+B:\n    print(A)\nelse:\n    print(A - (K - A - B))\n"
    }
  ],
  "created": 1650617464,
  "object": "edit"
}
2022-04-22 08:51:11.473549 fix syntax errors 4 ['# A, B, C, K = map(int, input().split())\n# A, B, C, K = 2, 1, 1, 3\n\n\n# if K <= A:\n#     print(K)\n# elif K <= A+B:\n#     print(A)\n# else:\n#     print(A - (K - A - B))\n', '\n\n\n# A, B, C, K = map(int, input().split())\nA, B, C, K = 2, 1, 1, 3\n\nif K <= A:\n    print(K)\nelif K <= A+B:\n    print(A)\nelse:\n    print(A - (K - A - B))\n', '\n\nA, B, C, K = map(int, input().split())\n# A, B, C, K = 2, 1, 1, 3\n\nif K <= A:\n    print(K)\nelif K <= A+B:\n    print(A)\nelse:\n    print(A - (K - A - B))\n', '\n\nA, B, C, K = map(int, input().split())\n# A, B, C, K = 2, 1, 1, 3\n\nif K <= A:\n    print(K)\nelif K <= A+B:\n    print(A)\nelse:\n    print(A - (K - A - B))\n']
2022-04-22 08:51:11.473581 size on output set 3
