2022-04-22 08:04:17.523520 num operations 1
2022-04-22 08:04:17.523531 size on input set 1
2022-04-22 08:04:17.523651 using api key derek
2022-04-22 08:04:28.735632 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n\tn, r = map(int, sys.stdin.readline().split())\n\ta = list(map(int, sys.stdin.readline().split()))\n\theaters = []\n\tfor i in range(n):\n\t\tif a[i] == 1:\n\t\t\theaters.append(i)\n\tif len(heaters) == 0:\n\t\tprint(-1)\n\t\treturn\n\theaters.append(n)\n\theaters.insert(0, -r)\n\ti = 0\n\tans = 0\n\twhile i < len(heaters) - 1:\n\t\tif heaters[i] + r - 1 >= heaters[i + 1]:\n\t\t\theaters.pop(i)\n\t\telse:\n\t\t\ti += 1\n\t\t\tans += 1\n\tprint(ans)\n\nif __name__ == '__main__':\n\tmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters = []\n    for i in range(n):\n        if a[i] == 1:\n            heaters.append(i)\n    if len(heaters) == 0:\n        print(-1)\n        return\n    heaters.append(n)\n    heaters.insert(0, -r)\n    i = 1\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r - 1 >= heaters[i + 1] - 1:\n            heaters.pop(i)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters = []\n    for i in range(n):\n        if a[i] == 1:\n            heaters.append(i)\n    if len(heaters) == 0:\n        print(-1)\n        return\n    heaters.append(n)\n    heaters.insert(0, -r)\n    i = 0\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r - 1 >= heaters[i + 1]:\n            heaters.pop(i)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters = []\n    for idx, val in enumerate(a):\n        if val == 1:\n            heaters.append(idx)\n    if len(heaters) == 0:\n        print(-1)\n        return\n    heaters.append(n)\n    heaters.insert(0, -r)\n    i = 0\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r - 1 >= heaters[i + 1]:\n            heaters.pop(i)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650614657,
  "object": "edit"
}
2022-04-22 08:04:28.735921 fix syntax errors 4 ["\nimport sys\n\ndef main():\n\tn, r = map(int, sys.stdin.readline().split())\n\ta = list(map(int, sys.stdin.readline().split()))\n\theaters = []\n\tfor i in range(n):\n\t\tif a[i] == 1:\n\t\t\theaters.append(i)\n\tif len(heaters) == 0:\n\t\tprint(-1)\n\t\treturn\n\theaters.append(n)\n\theaters.insert(0, -r)\n\ti = 0\n\tans = 0\n\twhile i < len(heaters) - 1:\n\t\tif heaters[i] + r - 1 >= heaters[i + 1]:\n\t\t\theaters.pop(i)\n\t\telse:\n\t\t\ti += 1\n\t\t\tans += 1\n\tprint(ans)\n\nif __name__ == '__main__':\n\tmain()\n", "\n\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters = []\n    for i in range(n):\n        if a[i] == 1:\n            heaters.append(i)\n    if len(heaters) == 0:\n        print(-1)\n        return\n    heaters.append(n)\n    heaters.insert(0, -r)\n    i = 1\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r - 1 >= heaters[i + 1] - 1:\n            heaters.pop(i)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters = []\n    for i in range(n):\n        if a[i] == 1:\n            heaters.append(i)\n    if len(heaters) == 0:\n        print(-1)\n        return\n    heaters.append(n)\n    heaters.insert(0, -r)\n    i = 0\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r - 1 >= heaters[i + 1]:\n            heaters.pop(i)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters = []\n    for idx, val in enumerate(a):\n        if val == 1:\n            heaters.append(idx)\n    if len(heaters) == 0:\n        print(-1)\n        return\n    heaters.append(n)\n    heaters.insert(0, -r)\n    i = 0\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r - 1 >= heaters[i + 1]:\n            heaters.pop(i)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-22 08:04:28.735970 size on output set 4
2022-04-22 08:04:28.735982 num operations 1
2022-04-22 08:04:28.735988 size on input set 1
2022-04-22 08:04:28.736126 using api key kouti
2022-04-22 08:04:35.302891 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef get_input():\n    n, r = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    while i < n:\n        if a[i] == 0:\n            j = i\n            while j < n and a[j] == 0:\n                j += 1\n            if j - i + 1 > 2*r:\n                return -1\n            if j < n:\n                a[j] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    if ans < 0:\n        print('Too chaotic')\n    else:\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef get_input():\n    n, r = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 0\n    while i <= n:\n        if a[i] == 0:\n            j = i\n            while j <= n and a[j] == 0:\n                j += 1\n            if j - i + 1 > 2*r:\n                return -1\n            if j <= n:\n                a[j] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef get_input():\n    n, r = map(int, input().split())\n    a = list(map(int, input().split()))\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    while i <= n:\n        if a[i-1] == 0:\n            j = i\n            while j <= n and a[j-1] == 0:\n                j += 1\n            if j - i + 1 > 2*r:\n                return -1\n            if j <= n:\n                a[j-1] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\ndef get_input():\n    n, r = [int(x) for x in input().split()]\n    a = [0] * n\n    s = input()\n    for i in range(n):\n        if s[i] == 'o':\n            a[i] = 1\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    while i <= n:\n        if a[i-1] == 0:\n            j = i\n            while j <= n and a[j-1] == 0:\n                j += 1\n            if j - i + 1 > 2*r:\n                return -1\n            if j <= n:\n                a[j-1] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650614668,
  "object": "edit"
}
2022-04-22 08:04:35.303264 fix syntax errors 4 ["\n\ndef get_input():\n    n, r = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    while i < n:\n        if a[i] == 0:\n            j = i\n            while j < n and a[j] == 0:\n                j += 1\n            if j - i + 1 > 2*r:\n                return -1\n            if j < n:\n                a[j] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    if ans < 0:\n        print('Too chaotic')\n    else:\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_input():\n    n, r = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 0\n    while i <= n:\n        if a[i] == 0:\n            j = i\n            while j <= n and a[j] == 0:\n                j += 1\n            if j - i + 1 > 2*r:\n                return -1\n            if j <= n:\n                a[j] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_input():\n    n, r = map(int, input().split())\n    a = list(map(int, input().split()))\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    while i <= n:\n        if a[i-1] == 0:\n            j = i\n            while j <= n and a[j-1] == 0:\n                j += 1\n            if j - i + 1 > 2*r:\n                return -1\n            if j <= n:\n                a[j-1] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\ndef get_input():\n    n, r = [int(x) for x in input().split()]\n    a = [0] * n\n    s = input()\n    for i in range(n):\n        if s[i] == 'o':\n            a[i] = 1\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    while i <= n:\n        if a[i-1] == 0:\n            j = i\n            while j <= n and a[j-1] == 0:\n                j += 1\n            if j - i + 1 > 2*r:\n                return -1\n            if j <= n:\n                a[j-1] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-22 08:04:35.303348 size on output set 4
