["\ndef solution(matrix, n, m):\n    max_diff = 0\n    for j in range(m):\n        column = [matrix[i][j] for i in range(n)]\n        column.sort()\n        for i in range(n-1):\n            diff = column[i+1] - column[i]\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solution(matrix, n, m))\n", "from fractions import gcd\n\n\ndef main():\n    a, b, c, d = map(int, input().split())\n    print(solve(a, b, c, d))\n\n\ndef solve(a, b, c, d):\n\n    # First, find the number of integers between a and b that are divisible by c\n    num_divisible_by_c = b // c - (a - 1) // c\n    # Now, find the number of integers between a and b that are divisible by d\n    num_divisible_by_d = b // d - (a - 1) // d\n    # Next, find the number of integers between a and b that are divisible by both c and d\n    num_divisible_by_cd = b // (c * d) - (a - 1) // (c * d)\n    # Then, find the number of integers between a and b that are divisible by lcm(c, d)\n    num_divisible_by_lcm = b // (c * d // gcd(c, d)) - (a - 1) // (c * d // gcd(c, d))\n    return num_divisible_by_lcm - num_divisible_by_cd\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef solution(matrix, n, m, p):\n    max_diff = 0\n    for j in range(m):\n        column = [matrix[i][j] for i in range(n)]\n        column.sort()\n        for i in range(n - 1):\n            diff = column[i + 1] - column[i]\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    p = int(input())\n    print(solution(matrix, n, m, p))\n", "\n\ndef solution(matrix, n, m):\n    max_diff = 0\n    for j in range(n):\n        column = [matrix[i][j] for i in range(m)]\n        column.sort()\n        for i in range(m-1):\n            diff = column[i+1] - column[i]\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solution(matrix, n, m))\n", "\ndef main():\n    n, m = map(int, input().split())  # noqa\n    matrix = []  # noqa\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))  # noqa\n    print(solve(n, m, matrix))  # noqa\n\n\ndef solve(n, m, matrix):\n    # First, find the minimum value in each column\n    min_vals = [min(row[i] for row in matrix) for i in range(m)]  # noqa\n    # Now, the max k is the max difference between any two elements in min_vals\n    max_k = 0\n    for i in range(m - 1):\n        max_k = max(max_k, abs(min_vals[i] - min_vals[i + 1]))\n    return max_k\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef solution(matrix, n, m):\n    max_diff = 0\n    for j in range(m):\n        column = [matrix[i][j] for i in range(n)]\n        column.sort()\n        for i in range(n-1):\n            diff = column[i+1] - column[i]\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solution(matrix, n, m))\n\n\ndef solution(matrix, n, m):\n    max_diff = 0\n    for j in range(m):\n        column = [matrix[i][j] for i in range(n)]\n        column.sort()\n        for i in range(n-1):\n            diff = column[i+1] - column[i]\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solution(matrix, n, m))\n", "\ndef main():\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solve(n, m, matrix))\n\ndef solve(n, m, matrix):\n    # First, find the minimum value in each column\n    min_vals = [min(row[i] for row in matrix) for i in range(n)]\n    # Now, the max k is the max difference between any two elements in min_vals\n    max_k = 0\n    for i in range(n - 1):\n        max_k = max(max_k, abs(min_vals[i] - min_vals[i + 1]))\n    return max_k\n\nif __name__ == \"__main__\":\n    main()\n"]