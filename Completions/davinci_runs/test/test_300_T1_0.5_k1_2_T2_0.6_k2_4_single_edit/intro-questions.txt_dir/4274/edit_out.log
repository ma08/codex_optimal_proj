2022-04-22 09:05:15.737851 num operations 1
2022-04-22 09:05:15.737870 size on input set 1
2022-04-22 09:05:15.738037 using api key jaanu
2022-04-22 09:05:20.259664 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m = map(int, input().split())\n\nif n == m:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 1,
      "text": "\nn, m = map(int, input().split())\n\nif n == m:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 2,
      "text": "\n#test\nn, m = map(int, input().split())\n\nif n == m:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 3,
      "text": "\nn, m = map(int, input().split())\n\nif n == m:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    }
  ],
  "created": 1650618315,
  "object": "edit"
}
2022-04-22 09:05:20.259932 fix syntax errors 4 ['\nn, m = map(int, input().split())\n\nif n == m:\n    print("Yes")\nelse:\n    print("No")\n', "\nn, m = map(int, input().split())\n\nif n == m:\n    print('Yes')\nelse:\n    print('No')\n", '\n#test\nn, m = map(int, input().split())\n\nif n == m:\n    print("Yes")\nelse:\n    print("No")\n', '\nn, m = map(int, input().split())\n\nif n == m:\n    print("Yes")\nelse:\n    print("No")\n']
2022-04-22 09:05:20.259960 size on output set 3
2022-04-22 09:05:20.259971 num operations 1
2022-04-22 09:05:20.259978 size on input set 1
2022-04-22 09:05:20.260117 using api key sunu
2022-04-22 09:05:30.759347 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nfrom collections import deque\n\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninm = lambda: map(int, sys.stdin.readline().split())\ninl = lambda: list(inm())\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print(\"\\033[33m\", *a, \"\\033[0m\", **dict(file=sys.stderr, **kw))\n\n\ndef solve():\n    N, M = inm()\n    G = [[] for _ in range(N)]\n    for _ in range(M):\n        a, b = inm()\n        G[a - 1].append(b - 1)\n        G[b - 1].append(a - 1)\n    q = deque()\n    q.append(0)\n    visited = set()\n    visited.add(0)\n    while q:\n        u = q.popleft()\n        for v in G[u]:\n            if v not in visited:\n                visited.add(v)\n                q.append(v)\n    return len(visited) == N\n\n\nprint(\"Yes\" if solve() else \"No\")\n"
    },
    {
      "index": 1,
      "text": "\nN, M = map(int, input().split())\n\nif N == M:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 2,
      "text": "\n\nN, M = map(int, input().split())\n\nif N == M:\n    print(\"Yes\")\nelse:\n\nprint(\"hogehoge\")\n    print(\"No\")\n"
    },
    {
      "index": 3,
      "text": "\n\nA, B, C = map(int, input().split())\n\nprint(min(C, A+B+1))\n"
    }
  ],
  "created": 1650618320,
  "object": "edit"
}
2022-04-22 09:05:30.759595 fix syntax errors 4 ['\n\nimport sys\nfrom collections import deque\n\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninm = lambda: map(int, sys.stdin.readline().split())\ninl = lambda: list(inm())\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print("\\033[33m", *a, "\\033[0m", **dict(file=sys.stderr, **kw))\n\n\ndef solve():\n    N, M = inm()\n    G = [[] for _ in range(N)]\n    for _ in range(M):\n        a, b = inm()\n        G[a - 1].append(b - 1)\n        G[b - 1].append(a - 1)\n    q = deque()\n    q.append(0)\n    visited = set()\n    visited.add(0)\n    while q:\n        u = q.popleft()\n        for v in G[u]:\n            if v not in visited:\n                visited.add(v)\n                q.append(v)\n    return len(visited) == N\n\n\nprint("Yes" if solve() else "No")\n', '\nN, M = map(int, input().split())\n\nif N == M:\n    print("Yes")\nelse:\n    print("No")\n', '\n\nN, M = map(int, input().split())\n\nif N == M:\n    print("Yes")\nelse:\n\nprint("hogehoge")\n    print("No")\n', '\n\nA, B, C = map(int, input().split())\n\nprint(min(C, A+B+1))\n']
2022-04-22 09:05:30.759628 size on output set 4
