["\nn, m = map(int, input().split())\n\nif n == m:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "\n\nimport sys\nfrom collections import deque\n\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninm = lambda: map(int, sys.stdin.readline().split())\ninl = lambda: list(inm())\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print(\"\\033[33m\", *a, \"\\033[0m\", **dict(file=sys.stderr, **kw))\n\n\ndef solve():\n    N, M = inm()\n    G = [[] for _ in range(N)]\n    for _ in range(M):\n        a, b = inm()\n        G[a - 1].append(b - 1)\n        G[b - 1].append(a - 1)\n    q = deque()\n    q.append(0)\n    visited = set()\n    visited.add(0)\n    while q:\n        u = q.popleft()\n        for v in G[u]:\n            if v not in visited:\n                visited.add(v)\n                q.append(v)\n    return len(visited) == N\n\n\nprint(\"Yes\" if solve() else \"No\")\n", "\nN, M = map(int, input().split())\n\nif N == M:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "\n\nN, M = map(int, input().split())\n\nif N == M:\n    print(\"Yes\")\nelse:\n\nprint(\"hogehoge\")\n    print(\"No\")\n", "\n#test\nn, m = map(int, input().split())\n\nif n == m:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "\n\nA, B, C = map(int, input().split())\n\nprint(min(C, A+B+1))\n", "\nn, m = map(int, input().split())\n\nif n == m:\n    print('Yes')\nelse:\n    print('No')\n"]