2022-04-22 08:04:04.539208 num operations 1
2022-04-22 08:04:04.539218 size on input set 1
2022-04-22 08:04:04.539347 using api key soukgp
2022-04-22 08:04:12.059542 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n# n = 6\n# a = [1, 2, 4, 3, 3, 2]\n\n# 1. Find the minimum value of all coins.\n# 2. Find the maximum value of all coins.\n# 3. If the difference between the minimum and the maximum value is less than the number of coins, then the minimum number of pockets is 2.\n# 4. Otherwise, the minimum number of pockets is 1.\n\nmin_a = min(a)\nmax_a = max(a)\n\nif max_a - min_a < n:\n    print(2)\nelse:\n    print(1)\n"
    },
    {
      "index": 1,
      "text": "\n# n = int(input())\n# a = list(map(int, input().split()))\nn = 6\na = [1, 2, 4, 3, 3, 2]\n\n# 1. Find the minimum value of all coins\n# 2. Find the maximum value of all coins\n# 3. If the difference between the minimum and the maximum value is less than the number of coins, then the minimum number of pockets is 2.\n# 4. Otherwise, the minimum number of pockets is 1.\n\nmin_a = min(a)\nmax_a = max(a)\n\nif max_a - min_a < n:\n    print(2)\nelse:\n    print(1)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n# 1. Find the minimum value of all coins\n# 2. Find the maximum value of all coins\n# 3. If the difference between the minimum and the maximum value is less than the number of coins,\n#    then the minimum number of pockets is 2.\n# 4. Otherwise, the minimum number of pockets is 1.\n\nmin_a = min(a)\nmax_a = max(a)\n\nif max_a - min_a < n:\n    print(2)\nelse:\n\n    print(1)\n"
    },
    {
      "index": 3,
      "text": "\n# 1. Find the minimum value of all coins\n# 2. Find the maximum value of all coins\n# 3. If the difference between the minimum and the maximum value is less than the number of coins,\n#    then the minimum number of pockets is 2.\n# 4. Otherwise, the minimum number of pockets is 1.\nn = int(input())\na = list(map(int, input().split()))\n\n\nmin_a = min(a)\nmax_a = max(a)\n\nif max_a - min_a < n:\n    print(2)\nelse:\n    print(1)\n"
    }
  ],
  "created": 1650614644,
  "object": "edit"
}
2022-04-22 08:04:12.059840 fix syntax errors 4 ['\n\nn = int(input())\na = list(map(int, input().split()))\n# n = 6\n# a = [1, 2, 4, 3, 3, 2]\n\n# 1. Find the minimum value of all coins.\n# 2. Find the maximum value of all coins.\n# 3. If the difference between the minimum and the maximum value is less than the number of coins, then the minimum number of pockets is 2.\n# 4. Otherwise, the minimum number of pockets is 1.\n\nmin_a = min(a)\nmax_a = max(a)\n\nif max_a - min_a < n:\n    print(2)\nelse:\n    print(1)\n', '\n# n = int(input())\n# a = list(map(int, input().split()))\nn = 6\na = [1, 2, 4, 3, 3, 2]\n\n# 1. Find the minimum value of all coins\n# 2. Find the maximum value of all coins\n# 3. If the difference between the minimum and the maximum value is less than the number of coins, then the minimum number of pockets is 2.\n# 4. Otherwise, the minimum number of pockets is 1.\n\nmin_a = min(a)\nmax_a = max(a)\n\nif max_a - min_a < n:\n    print(2)\nelse:\n    print(1)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\n# 1. Find the minimum value of all coins\n# 2. Find the maximum value of all coins\n# 3. If the difference between the minimum and the maximum value is less than the number of coins,\n#    then the minimum number of pockets is 2.\n# 4. Otherwise, the minimum number of pockets is 1.\n\nmin_a = min(a)\nmax_a = max(a)\n\nif max_a - min_a < n:\n    print(2)\nelse:\n\n    print(1)\n', '\n# 1. Find the minimum value of all coins\n# 2. Find the maximum value of all coins\n# 3. If the difference between the minimum and the maximum value is less than the number of coins,\n#    then the minimum number of pockets is 2.\n# 4. Otherwise, the minimum number of pockets is 1.\nn = int(input())\na = list(map(int, input().split()))\n\n\nmin_a = min(a)\nmax_a = max(a)\n\nif max_a - min_a < n:\n    print(2)\nelse:\n    print(1)\n']
2022-04-22 08:04:12.059883 size on output set 4
2022-04-22 08:04:12.059894 num operations 1
2022-04-22 08:04:12.059900 size on input set 1
2022-04-22 08:04:12.060045 using api key kouti
2022-04-22 08:04:17.133093 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\na = [int(i) for i in input().split()]\na.sort()\n\ncount = 1\nfor i in range(1,n):\n    if a[i] != a[i-1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\narr = [int(i) for i in input().split()]\n\narr.sort()\n\ncount = 1\nfor i in range(1,n):\n    if arr[i] != arr[i-1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\na = [int(i) for i in input().split()]\na.sort()\ncount = 1\nfor i in range(1,n):\n    if a[i] != a[i-1]:\n        count += 1\nprint(count)\n"
    },
    {
      "index": 3,
      "text": "\n\n"
    }
  ],
  "created": 1650614652,
  "object": "edit"
}
2022-04-22 08:04:17.133351 fix syntax errors 4 ['\nn = int(input())\na = [int(i) for i in input().split()]\na.sort()\n\ncount = 1\nfor i in range(1,n):\n    if a[i] != a[i-1]:\n        count += 1\n\nprint(count)\n', '\n\nn = int(input())\narr = [int(i) for i in input().split()]\n\narr.sort()\n\ncount = 1\nfor i in range(1,n):\n    if arr[i] != arr[i-1]:\n        count += 1\n\nprint(count)\n', '\n\nn = int(input())\na = [int(i) for i in input().split()]\na.sort()\ncount = 1\nfor i in range(1,n):\n    if a[i] != a[i-1]:\n        count += 1\nprint(count)\n', '\n\n']
2022-04-22 08:04:17.133380 size on output set 4
