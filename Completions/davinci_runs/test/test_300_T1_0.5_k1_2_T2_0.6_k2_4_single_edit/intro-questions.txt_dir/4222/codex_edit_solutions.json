["\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    arr = sorted(map(int, sys.stdin.readline().split()))\n    m = int(sys.stdin.readline())\n    for _ in range(m):\n        print(binary_search(arr, int(sys.stdin.readline())))\n\ndef binary_search(arr, target):\n    low = 0\n    high = len(arr)\n    while low < high:\n        mid = (low + high)//2\n        if arr[mid] == target:\n            return 1\n        elif arr[mid] < target:\n            low = mid + 1\n        else:\n            high = mid\n    return 0\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n", "\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n", "\nfrom functools import partial\n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n", "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.buffer.readline\nf_inf = float('inf')\nmod = 10 ** 9 + 7\nfrom functools import partial\n\nN, K = map(int, input().split())\n\nA = [0] * K\nfor i in range(K):\n    d = int(input())\n    A[i] = list(map(int, input().split()))\n\nA_flat = [] * K\nfor i in range(K):  # A[i]\u306b\u542b\u307e\u308c\u308b\u6570\u5b57\u3092\u30ea\u30b9\u30c8A_flat\u306b\u5165\u308c\u308b\n    A_flat.extend(A[i])  # extend\u306f\u30ea\u30b9\u30c8\u3092\u7d50\u5408\u3059\u308b\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n", "\n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n", "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n\n    main()\n"]