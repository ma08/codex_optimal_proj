["n = int(input())\na = list(map(int, input().split()))\na.sort()\n\nif n == 1:\n    print(1)\n    exit(0)\n\ni = 0\nj = 1\n\ncount = 0\nwhile j < n:\n    if a[j] - a[i] <= 5:\n        j += 1\n    else:\n        i = j\n        j += 1\n    count = max(count, j - i)\n\nprint(count)\n", "\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        skills = [int(x) for x in input().split()]\n        skills.sort()\n        max_team = 0\n        for j in range(n-1):\n            if skills[j+1] - skills[j] <= 5:\n                max_team += 1\n        print(max_team+1)\n\n\nif __name__ == '__main__':\n    main()\n", "\nn = int(input())\na = list(map(int, input().split()))\na.sort()\n\nif n == 1:\n    print(1)\n    exit(0)\n\ni = 0\nj = 1\n\ncount = 0\nwhile j < n:\n    if a[j] - a[i] <= 5:\n        j += 1\n    else:\n        i = j\n        j += 1\n    count = max(count, j - i)\n\nprint(count)\n", "\n\ndef main():\n    n = int(input())\n    skills = [int(x) for x in input().split(' ')]\n    skills.sort()\n    max_team = 0\n    for i in range(n-1):\n        if skills[i+1] - skills[i] <= 5:\n            max_team += 1\n    print(max_team+1)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    skills = [int(skill) for skill in input().split()]\n    skills.sort()\n    max_team = 0\n    for i in range(n-1):\n        if skills[i+1] - skills[i] <= 5:\n            max_team += 1\n    print(max_team+1)\n\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\"\"\"\nAuthor : None\nDate   : 2020-04-27\nPurpose: Rock the Casbah\n\"\"\"\n\nimport argparse\nimport os\nimport sys\n\n\n# --------------------------------------------------\ndef get_args():\n    \"\"\"Get command-line arguments\"\"\"\n\n    parser = argparse.ArgumentParser(\n        description='Rock the Casbah',\n        formatter_class=argparse.ArgumentDefaultsHelpFormatter)\n\n    parser.add_argument('file',\n                        metavar='FILE',\n                        type=argparse.FileType('rt'),\n                        help='Input file')\n\n    parser.add_argument('-o',\n                        '--outfile',\n                        help='Output file',\n                        metavar='FILE',\n                        type=argparse.FileType('wt'))\n\n    return parser.parse_args()\n\n\n# --------------------------------------------------\ndef main():\n    \"\"\"Make a jazz noise here\"\"\"\n\n    args = get_args()\n    in_file = args.file\n    out_file = args.outfile\n\n    if out_file is None:\n        out_file = sys.stdout\n\n    for line in in_file:\n        out_file.write(line)\n\n    in_file.close()\n    out_file.close()\n\n\n# --------------------------------------------------\nif __name__ == '__main__':\n    main()\n\n\nn = int(input())\na = list(map(int, input().split()))\na.sort()\n\nif n == 1:\n    print(1)\n    exit(0)\n\ni = 0\nj = 1\n\ncount = 0\nwhile j < n:\n    if a[j] - a[i] <= 5:\n        j += 1\n    else:\n        i = j\n        j += 1\n    count = max(count, j - i)\n\nprint(count)\n", "def main():\n    n = int(input())\n    skills = [int(x) for x in input().split()]\n    skills.sort()\n    max_team = 0\n    for i in range(n-1):\n        if skills[i+1] - skills[i] <= 5:\n            max_team += 1\n    print(max_team+1)\n\n\nif __name__ == '__main__':\n    main()\n"]