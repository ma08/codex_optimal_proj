2022-04-22 08:42:12.265208 num operations 1
2022-04-22 08:42:12.265229 size on input set 1
2022-04-22 08:42:12.265393 using api key sunu
2022-04-22 08:42:17.216982 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "d, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n"
    },
    {
      "index": 2,
      "text": "\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n"
    },
    {
      "index": 3,
      "text": "\n\nd, n = input().split()\nd = int(d)\nn = int(n)\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n"
    }
  ],
  "created": 1650616932,
  "object": "edit"
}
2022-04-22 08:42:17.217257 fix syntax errors 4 ['d, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n', '\nimport sys\n\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n', '\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n', '\n\nd, n = input().split()\nd = int(d)\nn = int(n)\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n']
2022-04-22 08:42:17.217284 size on output set 4
2022-04-22 08:42:17.217295 num operations 1
2022-04-22 08:42:17.217301 size on input set 1
2022-04-22 08:42:17.217472 using api key jaanu
2022-04-22 08:42:26.336870 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import math\n\n\ndef eratosthenes(n):\n    l = [True] * (n + 1)\n    l[0] = False\n    l[1] = False\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if not l[i]:\n            continue\n        for j in range(i * 2, n + 1, i):\n            l[j] = False\n    return [i for i in range(n + 1) if l[i]]\n\ndef get_divisor(n):\n    res = []\n    for i in range(1, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            res.append(i)\n            if i != n // i:\n                res.append(n // i)\n    return res\n\nN = int(input())\n\nprimes = eratosthenes(55555)\n\nfor p in primes:\n    if N % p == 0:\n        print(p)\n        exit()\n"
    },
    {
      "index": 1,
      "text": "\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n"
    },
    {
      "index": 2,
      "text": "\n\na, b, c, d = map(int, input().split())\n\nif a + b < c + d:\n    print(\"Right\")\nelif a + b > c + d:\n    print(\"Left\")\nelse:\n    print(\"Balanced\")\n"
    },
    {
      "index": 3,
      "text": "\n\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\nelif D == 2:\n    print(10000 * N)\n    print(100 * N)\nelse:\n    print(1000000 * N)\n"
    }
  ],
  "created": 1650616937,
  "object": "edit"
}
2022-04-22 08:42:26.337113 fix syntax errors 4 ['import math\n\n\ndef eratosthenes(n):\n    l = [True] * (n + 1)\n    l[0] = False\n    l[1] = False\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if not l[i]:\n            continue\n        for j in range(i * 2, n + 1, i):\n            l[j] = False\n    return [i for i in range(n + 1) if l[i]]\n\ndef get_divisor(n):\n    res = []\n    for i in range(1, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            res.append(i)\n            if i != n // i:\n                res.append(n // i)\n    return res\n\nN = int(input())\n\nprimes = eratosthenes(55555)\n\nfor p in primes:\n    if N % p == 0:\n        print(p)\n        exit()\n', '\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n', '\n\na, b, c, d = map(int, input().split())\n\nif a + b < c + d:\n    print("Right")\nelif a + b > c + d:\n    print("Left")\nelse:\n    print("Balanced")\n', '\n\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\nelif D == 2:\n    print(10000 * N)\n    print(100 * N)\nelse:\n    print(1000000 * N)\n']
2022-04-22 08:42:26.337158 size on output set 4
