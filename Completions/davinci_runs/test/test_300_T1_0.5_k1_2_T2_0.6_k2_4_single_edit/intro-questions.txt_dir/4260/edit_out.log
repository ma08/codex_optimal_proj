2022-04-22 09:02:08.760839 num operations 1
2022-04-22 09:02:08.760856 size on input set 1
2022-04-22 09:02:08.760986 using api key soukgp
2022-04-22 09:02:12.342808 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650618128,
  "object": "edit"
}
2022-04-22 09:02:12.343080 fix syntax errors 4 ["\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-22 09:02:12.343108 size on output set 4
2022-04-22 09:02:12.343119 num operations 1
2022-04-22 09:02:12.343126 size on input set 1
2022-04-22 09:02:12.343260 using api key sunu
2022-04-22 09:02:23.658066 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\nimport sys\n\n\ndef read_ints(sys.stdin.readline):\n    return list(map(int, sys.stdin.readline().split(' ')))\n\n\ndef read_floats(sys.stdin.readline):\n    return list(map(float, sys.stdin.readline().split(' ')))\n\n\ndef main():\n    T, X = read_ints(sys.stdin.readline)\n    print(T / X)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n\n#\n# \u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u6a19\u6e96\u5165\u529b\u3068\u6a19\u6e96\u51fa\u529b\u3092\u7528\u3044\u305f\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3059\u3002\n# \u57fa\u672c\u7684\u306a\u5165\u51fa\u529b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001C++\u5165\u51fa\u529b\u596e\u95d8\u8a18\u306e\u65b9\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n#\n\n    \"\"\"\n    \u6587\u5b57\u5217\u3092\u5165\u529b\u3057\u3066\u8fd4\u5374\u3057\u307e\u3059\u3002\n    \"\"\"\ndef read_line():\n    try:\n        return input()\n    except:\n        return None\n\n    \"\"\"\n    \u7a7a\u767d\u533a\u5207\u308a\u306e\u6574\u6570\u306e\u5165\u529b\u3092\u4e00\u884c\u8aad\u307f\u8fbc\u3093\u3067\u3001\u30ea\u30b9\u30c8\u306b\u3057\u3066\u8fd4\u5374\u3057\u307e\u3059\u3002\n    \"\"\"\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\n    \"\"\"\n    \u7a7a\u767d\u533a\u5207\u308a\u306e\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306e\u5165\u529b\u3092\u4e00\u884c\u8aad\u307f\u8fbc\u3093\u3067\u3001\u30ea\u30b9\u30c8\u306b\u3057\u3066\u8fd4\u5374\u3057\u307e\u3059\u3002\n    \"\"\"\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\n\n    \"\"\"\n    \u6a19\u6e96\u5165\u529b\u304b\u3089\u8aad\u307f\u8fbc\u3093\u3060\u6574\u6570\u3067\u3059\u3002\n    \"\"\"\ndef main():\n\n    T, X = read_ints()\n    print(T / X)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    A, B = read_ints()\n    print(A + B)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef read_line():\n    try:\n        line = raw_input()\n        return line\n    except:\n        return None\n\n\ndef read_ints():\n    return [int(i) for i in read_line().split(' ')]\n\n\ndef main():\n    N = read_ints()[0]\n    A = read_ints()\n    ans = 0\n    for i in range(N):\n        for j in range(i + 1, N):\n            if A[i] == A[j]:\n                ans += 1\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650618132,
  "object": "edit"
}
2022-04-22 09:02:23.658320 fix syntax errors 4 ["\n\n# https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\nimport sys\n\n\ndef read_ints(sys.stdin.readline):\n    return list(map(int, sys.stdin.readline().split(' ')))\n\n\ndef read_floats(sys.stdin.readline):\n    return list(map(float, sys.stdin.readline().split(' ')))\n\n\ndef main():\n    T, X = read_ints(sys.stdin.readline)\n    print(T / X)\n\n\nif __name__ == '__main__':\n    main()\n", '\n\n\n#\n# 以下のコードは標準入力と標準出力を用いたサンプルコードです。\n# 基本的な入出力方法については、C++入出力奮闘記の方をご覧ください。\n#\n\n    """\n    文字列を入力して返却します。\n    """\ndef read_line():\n    try:\n        return input()\n    except:\n        return None\n\n    """\n    空白区切りの整数の入力を一行読み込んで、リストにして返却します。\n    """\ndef read_ints():\n    return list(map(int, read_line().split(\' \')))\n\n    """\n    空白区切りの浮動小数点数の入力を一行読み込んで、リストにして返却します。\n    """\ndef read_floats():\n    return list(map(float, read_line().split(\' \')))\n\n\n    """\n    標準入力から読み込んだ整数です。\n    """\ndef main():\n\n    T, X = read_ints()\n    print(T / X)\n\n\nif __name__ == \'__main__\':\n    main()\n', "\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    A, B = read_ints()\n    print(A + B)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef read_line():\n    try:\n        line = raw_input()\n        return line\n    except:\n        return None\n\n\ndef read_ints():\n    return [int(i) for i in read_line().split(' ')]\n\n\ndef main():\n    N = read_ints()[0]\n    A = read_ints()\n    ans = 0\n    for i in range(N):\n        for j in range(i + 1, N):\n            if A[i] == A[j]:\n                ans += 1\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-22 09:02:23.658417 size on output set 4
