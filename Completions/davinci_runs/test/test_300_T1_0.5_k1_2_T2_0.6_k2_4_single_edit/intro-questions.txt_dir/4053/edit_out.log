2022-04-22 08:03:11.327689 num operations 1
2022-04-22 08:03:11.327700 size on input set 1
2022-04-22 08:03:11.327818 using api key jaanu
2022-04-22 08:03:17.156073 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef game(n, words):\n    \"\"\"\n    >>> game(5, ['ba', 'a', 'abab', 'a', 'aba', 'baba', 'ab', 'aba'])\n    'SPPSPSPS'\n    >>> game(3, ['a', 'aa', 'aa', 'a'])\n    'PPSS'\n    >>> game(2, ['a', 'c'])\n    'PS'\n    \"\"\"\n    prefixes = []\n    suffixes = []\n    for word in words:\n        if prefixes and word.endswith(prefixes[-1]):\n            prefixes.append(word)\n        else:\n            suffixes.append(word)\n    return ''.join(['P' if word in prefixes else 'S' for word in words])\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    words = [input() for _ in range(2*n-2)]\n    print(game(n, words))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef game(n, words):\n    \"\"\"\n    >>> game(5, ['ba', 'a', 'abab', 'a', 'aba', 'baba', 'ab', 'aba'])\n    'SPPSPSPS'\n    >>> game(3, ['a', 'aa', 'aa', 'a'])\n    'PPSS'\n    >>> game(2, ['a', 'c'])\n    'PS'\n    \"\"\"\n    prefixes = []\n    suffixes = []\n    for word in words:\n        if word.endswith(prefixes[-1]):\n            prefixes.append(word)\n        else:\n            suffixes.append(word)\n    return ''.join(['P' if word in prefixes else 'S' for word in words])\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    words = [input() for _ in range(2 * n - 2)]\n    print(game(n, words))\n"
    },
    {
      "index": 2,
      "text": "\n\ndef game(n, words):\n    \"\"\"\n    >>> game(5, ['ba', 'a', 'abab', 'a', 'aba', 'baba', 'ab', 'aba']) # doctest: +NORMALIZE_WHITESPACE\n    'SPPSPSPS'\n    >>> game(3, ['a', 'aa', 'aa', 'a'])\n    'PPSS'\n    >>> game(2, ['a', 'c'])\n    'PS'\n    \"\"\"\n    prefixes = []\n    suffixes = []\n    for word in words:\n        if len(prefixes) > 0 and word.endswith(prefixes[-1]):\n            prefixes.append(word)\n        else:\n            suffixes.append(word)\n    return ''.join(['P' if word in prefixes else 'S' for word in words])\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    words = [input() for _ in range(2*n-2)]\n    print(game(n, words))\n"
    },
    {
      "index": 3,
      "text": "\n\ndef game(n, words):\n    \"\"\"\n    >>> game(5, ['ba', 'a', 'abab', 'a', 'aba', 'baba', 'ab', 'aba'])\n    'SPPSPSPS'\n    >>> game(3, ['a', 'aa', 'aa', 'a'])\n    'PPSS'\n    >>> game(2, ['a', 'c'])\n    'PS'\n    \"\"\"\n    prefixes = []\n    suffixes = []\n    for word in words:\n        if prefixes and word.endswith(prefixes[-1]):\n            prefixes.append(word)\n        else:\n            suffixes.append(word)\n    return ''.join(['P' if word in prefixes else 'S' for word in words])\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    words = [input() for _ in range(2*n-2)]\n    print(game(n, words))\n"
    }
  ],
  "created": 1650614591,
  "object": "edit"
}
2022-04-22 08:03:17.156363 fix syntax errors 4 ['\n\ndef game(n, words):\n    """\n    >>> game(5, [\'ba\', \'a\', \'abab\', \'a\', \'aba\', \'baba\', \'ab\', \'aba\'])\n    \'SPPSPSPS\'\n    >>> game(3, [\'a\', \'aa\', \'aa\', \'a\'])\n    \'PPSS\'\n    >>> game(2, [\'a\', \'c\'])\n    \'PS\'\n    """\n    prefixes = []\n    suffixes = []\n    for word in words:\n        if prefixes and word.endswith(prefixes[-1]):\n            prefixes.append(word)\n        else:\n            suffixes.append(word)\n    return \'\'.join([\'P\' if word in prefixes else \'S\' for word in words])\n\n\nif __name__ == "__main__":\n    n = int(input())\n    words = [input() for _ in range(2*n-2)]\n    print(game(n, words))\n', '\n\ndef game(n, words):\n    """\n    >>> game(5, [\'ba\', \'a\', \'abab\', \'a\', \'aba\', \'baba\', \'ab\', \'aba\'])\n    \'SPPSPSPS\'\n    >>> game(3, [\'a\', \'aa\', \'aa\', \'a\'])\n    \'PPSS\'\n    >>> game(2, [\'a\', \'c\'])\n    \'PS\'\n    """\n    prefixes = []\n    suffixes = []\n    for word in words:\n        if word.endswith(prefixes[-1]):\n            prefixes.append(word)\n        else:\n            suffixes.append(word)\n    return \'\'.join([\'P\' if word in prefixes else \'S\' for word in words])\n\n\nif __name__ == "__main__":\n    n = int(input())\n    words = [input() for _ in range(2 * n - 2)]\n    print(game(n, words))\n', '\n\ndef game(n, words):\n    """\n    >>> game(5, [\'ba\', \'a\', \'abab\', \'a\', \'aba\', \'baba\', \'ab\', \'aba\']) # doctest: +NORMALIZE_WHITESPACE\n    \'SPPSPSPS\'\n    >>> game(3, [\'a\', \'aa\', \'aa\', \'a\'])\n    \'PPSS\'\n    >>> game(2, [\'a\', \'c\'])\n    \'PS\'\n    """\n    prefixes = []\n    suffixes = []\n    for word in words:\n        if len(prefixes) > 0 and word.endswith(prefixes[-1]):\n            prefixes.append(word)\n        else:\n            suffixes.append(word)\n    return \'\'.join([\'P\' if word in prefixes else \'S\' for word in words])\n\n\nif __name__ == "__main__":\n    n = int(input())\n    words = [input() for _ in range(2*n-2)]\n    print(game(n, words))\n', '\n\ndef game(n, words):\n    """\n    >>> game(5, [\'ba\', \'a\', \'abab\', \'a\', \'aba\', \'baba\', \'ab\', \'aba\'])\n    \'SPPSPSPS\'\n    >>> game(3, [\'a\', \'aa\', \'aa\', \'a\'])\n    \'PPSS\'\n    >>> game(2, [\'a\', \'c\'])\n    \'PS\'\n    """\n    prefixes = []\n    suffixes = []\n    for word in words:\n        if prefixes and word.endswith(prefixes[-1]):\n            prefixes.append(word)\n        else:\n            suffixes.append(word)\n    return \'\'.join([\'P\' if word in prefixes else \'S\' for word in words])\n\n\nif __name__ == "__main__":\n    n = int(input())\n    words = [input() for _ in range(2*n-2)]\n    print(game(n, words))\n']
2022-04-22 08:03:17.156414 size on output set 3
2022-04-22 08:03:17.156426 num operations 1
2022-04-22 08:03:17.156432 size on input set 1
2022-04-22 08:03:17.156584 using api key kouti
2022-04-22 08:03:29.828804 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nprefixes = []\nsuffixes = []\nfor i in range(n-1):\n    prefixes.append(input().strip())\nfor i in range(n-1):\n    suffixes.append(input().strip())\n\nprefixes = sorted(prefixes, key=lambda x: len(x))\nsuffixes = sorted(suffixes, key=lambda x: len(x))\n\ns = ''\nfor i in range(len(prefixes)):\n    if prefixes[i] == suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\nfor i in range(len(suffixes)-1, -1, -1):\n    if prefixes[i] == suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\nprint(s)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\nprefixes = []\nsuffixes = []\nfor i in range(n - 1):\n    prefixes.append(input())\nfor i in range(n - 1):\n    suffixes.append(input())\n\nprefixes = sorted(prefixes, key=lambda x: len(x))\nsuffixes = sorted(suffixes, key=lambda x: len(x))\n\ns = ''\nfor i in range(len(prefixes)):\n    if prefixes[i] == suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\nfor i in range(len(suffixes) - 1, -1, -1):\n    if prefixes[i] == suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\nprint(s)\n"
    },
    {
      "index": 2,
      "text": "\n# This is a comment\nn = int(input())\nprefixes = []\nsuffixes = []\nfor i in range(n-1):\n    prefixes.append(input())\nfor i in range(n-1):\n    suffixes.append(input())\n\nprefixes = sorted(prefixes, key=lambda x: len(x))\nsuffixes = sorted(suffixes, key=lambda x: len(x))\n\ns = ''\nfor i in range(len(prefixes)):\n    if prefixes[i] == suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\nfor i in range(len(suffixes)-1, -1, -1):\n    if prefixes[i] == suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\nprint(s)\n"
    },
    {
      "index": 3,
      "text": "\n\n# n = int(input())\n# prefixes = []\n# suffixes = []\n# for i in range(n-1):\n#     prefixes.append(input())\n# for i in range(n-1):\n#     suffixes.append(input())\n\n# prefixes = sorted(prefixes, key=lambda x: len(x))\n# suffixes = sorted(suffixes, key=lambda x: len(x))\n\n# s = ''\n# for i in range(len(prefixes)):\n#     if prefixes[i] == suffixes[i]:\n#         s += 'P'\n#     else:\n#         s += 'S'\n# for i in range(len(suffixes)-1, -1, -1):\n#     if prefixes[i] == suffixes[i]:\n#         s += 'P'\n#     else:\n#         s += 'S'\n# print(s)\n\nprint(int(3.5))\n"
    }
  ],
  "created": 1650614597,
  "object": "edit"
}
2022-04-22 08:03:29.829198 fix syntax errors 4 ["\nn = int(input())\nprefixes = []\nsuffixes = []\nfor i in range(n-1):\n    prefixes.append(input().strip())\nfor i in range(n-1):\n    suffixes.append(input().strip())\n\nprefixes = sorted(prefixes, key=lambda x: len(x))\nsuffixes = sorted(suffixes, key=lambda x: len(x))\n\ns = ''\nfor i in range(len(prefixes)):\n    if prefixes[i] == suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\nfor i in range(len(suffixes)-1, -1, -1):\n    if prefixes[i] == suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\nprint(s)\n", "\n\nn = int(input())\nprefixes = []\nsuffixes = []\nfor i in range(n - 1):\n    prefixes.append(input())\nfor i in range(n - 1):\n    suffixes.append(input())\n\nprefixes = sorted(prefixes, key=lambda x: len(x))\nsuffixes = sorted(suffixes, key=lambda x: len(x))\n\ns = ''\nfor i in range(len(prefixes)):\n    if prefixes[i] == suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\nfor i in range(len(suffixes) - 1, -1, -1):\n    if prefixes[i] == suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\nprint(s)\n", "\n# This is a comment\nn = int(input())\nprefixes = []\nsuffixes = []\nfor i in range(n-1):\n    prefixes.append(input())\nfor i in range(n-1):\n    suffixes.append(input())\n\nprefixes = sorted(prefixes, key=lambda x: len(x))\nsuffixes = sorted(suffixes, key=lambda x: len(x))\n\ns = ''\nfor i in range(len(prefixes)):\n    if prefixes[i] == suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\nfor i in range(len(suffixes)-1, -1, -1):\n    if prefixes[i] == suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\nprint(s)\n", "\n\n# n = int(input())\n# prefixes = []\n# suffixes = []\n# for i in range(n-1):\n#     prefixes.append(input())\n# for i in range(n-1):\n#     suffixes.append(input())\n\n# prefixes = sorted(prefixes, key=lambda x: len(x))\n# suffixes = sorted(suffixes, key=lambda x: len(x))\n\n# s = ''\n# for i in range(len(prefixes)):\n#     if prefixes[i] == suffixes[i]:\n#         s += 'P'\n#     else:\n#         s += 'S'\n# for i in range(len(suffixes)-1, -1, -1):\n#     if prefixes[i] == suffixes[i]:\n#         s += 'P'\n#     else:\n#         s += 'S'\n# print(s)\n\nprint(int(3.5))\n"]
2022-04-22 08:03:29.829263 size on output set 4
