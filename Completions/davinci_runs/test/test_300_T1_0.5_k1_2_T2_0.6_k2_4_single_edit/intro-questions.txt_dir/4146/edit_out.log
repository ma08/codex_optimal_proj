2022-04-22 08:29:31.208239 num operations 1
2022-04-22 08:29:31.208257 size on input set 1
2022-04-22 08:29:31.208432 using api key derek
2022-04-22 08:29:41.826568 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    # The number of elements that need to be replaced is the number of elements\n    # that are different from the first element.\n    print(n - a.count(a[0]))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n\n    # The number of elements that need to be replaced is the number of elements\n    # that are different from the first element.\n    print(n - a.count(a[0]))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    # The number of elements that need to be replaced is the number of elements\n    # that are different from the first element.\n    print(n - a.count(a[0]))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "import sys\nfrom io import StringIO\nimport unittest\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"3\n5 5 5\"\"\"\n        output = \"\"\"0\"\"\"\n        self.assertIO(input, output)\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"5\n1 2 3 4 5\"\"\"\n        output = \"\"\"2\"\"\"\n        self.assertIO(input, output)\n    def test_\u5165\u529b\u4f8b_3(self):\n        input = \"\"\"7\n3 3 3 3 3 3 3\"\"\"\n        output = \"\"\"0\"\"\"\n        self.assertIO(input, output)\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n"
    }
  ],
  "created": 1650616171,
  "object": "edit"
}
2022-04-22 08:29:41.826851 fix syntax errors 4 ["\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    # The number of elements that need to be replaced is the number of elements\n    # that are different from the first element.\n    print(n - a.count(a[0]))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n\n    # The number of elements that need to be replaced is the number of elements\n    # that are different from the first element.\n    print(n - a.count(a[0]))\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    # The number of elements that need to be replaced is the number of elements\n    # that are different from the first element.\n    print(n - a.count(a[0]))\n\n\nif __name__ == '__main__':\n    main()\n", 'import sys\nfrom io import StringIO\nimport unittest\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n    def test_入力例_1(self):\n        input = """3\n5 5 5"""\n        output = """0"""\n        self.assertIO(input, output)\n    def test_入力例_2(self):\n        input = """5\n1 2 3 4 5"""\n        output = """2"""\n        self.assertIO(input, output)\n    def test_入力例_3(self):\n        input = """7\n3 3 3 3 3 3 3"""\n        output = """0"""\n        self.assertIO(input, output)\n\n\nif __name__ == "__main__":\n    unittest.main()\n']
2022-04-22 08:29:41.826917 size on output set 3
2022-04-22 08:29:41.826929 num operations 1
2022-04-22 08:29:41.826935 size on input set 1
2022-04-22 08:29:41.827073 using api key soukgp
2022-04-22 08:29:47.635059 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\nv = list(map(int, input().split()))\n\na = [0] * (10**5 + 1)\nfor i in v:\n    a[i] += 1\n\na.sort()\n\nans = 0\nif a[-1] == a[-2]:\n    ans = 0\nelse:\n    ans = a[-1] - a[-2]\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nn = int(input())\nv = list(map(int, input().split()))\n\na = [0] * (10**5 + 1)\nfor i in v:\n    a[i] += 1\n\na.sort()\n\nans = max(0, a[-1] - a[-2])\n\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\nprint(input())\n"
    },
    {
      "index": 3,
      "text": "import sys\n\nn = int(input())\nv = list(map(int, input().split()))\n\na = [0] * (10**5 + 1)\nfor i in v:\n    a[i] += 1\n\na.sort()\n\nans = 0\nif a[-1] == a[-2]:\n    ans = 0\nelse:\n    ans = a[-1] - a[-2]\n\nprint(ans)\n"
    }
  ],
  "created": 1650616181,
  "object": "edit"
}
2022-04-22 08:29:47.635304 fix syntax errors 4 ['n = int(input())\nv = list(map(int, input().split()))\n\na = [0] * (10**5 + 1)\nfor i in v:\n    a[i] += 1\n\na.sort()\n\nans = 0\nif a[-1] == a[-2]:\n    ans = 0\nelse:\n    ans = a[-1] - a[-2]\n\nprint(ans)\n', '\n\nimport sys\n\nn = int(input())\nv = list(map(int, input().split()))\n\na = [0] * (10**5 + 1)\nfor i in v:\n    a[i] += 1\n\na.sort()\n\nans = max(0, a[-1] - a[-2])\n\nprint(ans)\n', '\nprint(input())\n', 'import sys\n\nn = int(input())\nv = list(map(int, input().split()))\n\na = [0] * (10**5 + 1)\nfor i in v:\n    a[i] += 1\n\na.sort()\n\nans = 0\nif a[-1] == a[-2]:\n    ans = 0\nelse:\n    ans = a[-1] - a[-2]\n\nprint(ans)\n']
2022-04-22 08:29:47.635339 size on output set 4
