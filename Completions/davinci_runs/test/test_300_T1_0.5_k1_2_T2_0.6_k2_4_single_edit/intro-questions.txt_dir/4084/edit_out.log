2022-04-22 08:11:52.826387 num operations 1
2022-04-22 08:11:52.826399 size on input set 1
2022-04-22 08:11:52.826520 using api key soukgp
2022-04-22 08:11:59.727637 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif a == 0:\n    print(0)\nelse:\n    print(min(n,b))\n"
    },
    {
      "index": 1,
      "text": "\n\nn,a,b = map(int,input().split())\n\nif a == 0:\n    print(0)\n    exit()\n\nif a > b:\n    a,b = b,a\n\nprint(min(n,a))\n"
    },
    {
      "index": 2,
      "text": "n,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\nif a == 0:\n    print(0)\nelse:\n    print(min(n,a))\n"
    },
    {
      "index": 3,
      "text": "\n\nn = int(input())\na = list(map(int,input().split()))\n\nmax_a = max(a)\nmin_a = min(a)\nsum_a = sum(a)\n\nprint(max_a - min_a, end=\" \")\n\nif max_a == min_a:\n    print(n * (n - 1) // 2)\nelse: \n    print(max_a, min_a, sum_a)\n"
    }
  ],
  "created": 1650615112,
  "object": "edit"
}
2022-04-22 08:11:59.727922 fix syntax errors 4 ['\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif a == 0:\n    print(0)\nelse:\n    print(min(n,b))\n', '\n\nn,a,b = map(int,input().split())\n\nif a == 0:\n    print(0)\n    exit()\n\nif a > b:\n    a,b = b,a\n\nprint(min(n,a))\n', 'n,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\nif a == 0:\n    print(0)\nelse:\n    print(min(n,a))\n', '\n\nn = int(input())\na = list(map(int,input().split()))\n\nmax_a = max(a)\nmin_a = min(a)\nsum_a = sum(a)\n\nprint(max_a - min_a, end=" ")\n\nif max_a == min_a:\n    print(n * (n - 1) // 2)\nelse: \n    print(max_a, min_a, sum_a)\n']
2022-04-22 08:11:59.727952 size on output set 4
2022-04-22 08:11:59.727962 num operations 1
2022-04-22 08:11:59.727969 size on input set 1
2022-04-22 08:11:59.728117 using api key soukgp
2022-04-22 08:12:10.423500 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n / (a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n"
    },
    {
      "index": 1,
      "text": "\n\nprint(\"Hello World\")\n"
    },
    {
      "index": 2,
      "text": "\n\nn, a, b = map(int, input().split())\n\nprint(max(n, a+b-n))\n"
    },
    {
      "index": 3,
      "text": "\n\nn = int(input())\n\na = [int(input()) for i in range(n)]\n\nb = [int(input()) for i in range(n)]\n\nc = [int(input()) for i in range(n)]\n\ncount = 0\n\nfor i in range(n):\n    if i == 0:\n        if a[i] == b[i] == c[i]:\n            count += 1\n\n    elif i == n - 1:\n        if a[i] == b[i] == c[i]:\n            count += 1\n\n    else:\n        if a[i] == b[i] == c[i]:\n            count += 1\n        elif a[i] == b[i]:\n            count += 1\n        elif b[i] == c[i]:\n            count += 1\n        elif a[i] == c[i]:\n            count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650615119,
  "object": "edit"
}
2022-04-22 08:12:10.423747 fix syntax errors 4 ["\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n / (a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n", '\n\nprint("Hello World")\n', '\n\nn, a, b = map(int, input().split())\n\nprint(max(n, a+b-n))\n', '\n\nn = int(input())\n\na = [int(input()) for i in range(n)]\n\nb = [int(input()) for i in range(n)]\n\nc = [int(input()) for i in range(n)]\n\ncount = 0\n\nfor i in range(n):\n    if i == 0:\n        if a[i] == b[i] == c[i]:\n            count += 1\n\n    elif i == n - 1:\n        if a[i] == b[i] == c[i]:\n            count += 1\n\n    else:\n        if a[i] == b[i] == c[i]:\n            count += 1\n        elif a[i] == b[i]:\n            count += 1\n        elif b[i] == c[i]:\n            count += 1\n        elif a[i] == c[i]:\n            count += 1\n\nprint(count)\n']
2022-04-22 08:12:10.423781 size on output set 4
