2022-04-22 07:52:24.650892 num operations 1
2022-04-22 07:52:24.650903 size on input set 1
2022-04-22 07:52:24.651025 using api key soukgp
2022-04-22 07:52:33.139330 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nh1, m1 = map(int, input().split(':'))   # \u0432\u0432\u043e\u0434 \u0432\u0440\u0435\u043c\u0435\u043d\u0438\nh2, m2 = map(int, input().split(':'))   # \u0432\u0432\u043e\u0434 \u0432\u0440\u0435\u043c\u0435\u043d\u0438\n\nm3 = (m1 + m2) // 2    # \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u043c\u0438\u043d\u0443\u0442\nh3 = h1 + (m1 + m2) // 120   # \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u0447\u0430\u0441\u043e\u0432\n\nif h3 > 23:\n    h3 -= 24     # \u0435\u0441\u043b\u0438 \u0447\u0430\u0441\u043e\u0432 \u0431\u043e\u043b\u044c\u0448\u0435 23 \u0442\u043e \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u043c \u0435\u043c\u0443 0\n\nprint('{:02}:{:02}'.format(h3, m3))\n"
    },
    {
      "index": 1,
      "text": "\n\nh1, m1 = map(int, input().split(':')\nh2, m2 = map(int, input().split(':')\n\nm3 = (m1 + m2) // 2)\nh3 = h1 + (m1 + m2) // 120)\n\nif h3 > 23:\n    h3 -= 24)\n\nprint('{:02}:{:02}'.format(h3, m3))')\n"
    },
    {
      "index": 2,
      "text": "\n\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nm3 = (m1 + m2) // 2\nh3 = h1 + (m1 + m2) // 120\n\nif h3 >= 24:\n    h3 -= 24\n\nprint('{:02}:{:02}'.format(h3, m3))\n"
    },
    {
      "index": 3,
      "text": "\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nm3 = (m1 + m2) // 2\nh3 = h1 + (m1 + m2) // 120\n\nif h3 > 23:\n    h3 -= 24\n\nprint('{:02}:{:02}'.format(h3, m3))\n"
    }
  ],
  "created": 1650613944,
  "object": "edit"
}
2022-04-22 07:52:33.139619 fix syntax errors 4 ["\n\nh1, m1 = map(int, input().split(':'))   # ввод времени\nh2, m2 = map(int, input().split(':'))   # ввод времени\n\nm3 = (m1 + m2) // 2    # вычисление минут\nh3 = h1 + (m1 + m2) // 120   # вычисление часов\n\nif h3 > 23:\n    h3 -= 24     # если часов больше 23 то присваиваем ему 0\n\nprint('{:02}:{:02}'.format(h3, m3))\n", "\n\nh1, m1 = map(int, input().split(':')\nh2, m2 = map(int, input().split(':')\n\nm3 = (m1 + m2) // 2)\nh3 = h1 + (m1 + m2) // 120)\n\nif h3 > 23:\n    h3 -= 24)\n\nprint('{:02}:{:02}'.format(h3, m3))')\n", "\n\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nm3 = (m1 + m2) // 2\nh3 = h1 + (m1 + m2) // 120\n\nif h3 >= 24:\n    h3 -= 24\n\nprint('{:02}:{:02}'.format(h3, m3))\n", "\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nm3 = (m1 + m2) // 2\nh3 = h1 + (m1 + m2) // 120\n\nif h3 > 23:\n    h3 -= 24\n\nprint('{:02}:{:02}'.format(h3, m3))\n"]
2022-04-22 07:52:33.139664 size on output set 4
2022-04-22 07:52:33.139675 num operations 1
2022-04-22 07:52:33.139682 size on input set 1
2022-04-22 07:52:33.139823 using api key jaanu
2022-04-22 07:52:38.878405 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1] / 2\n\ndef minutes_to_time(minutes):\n    return [minutes // 60, minutes % 60 / 2]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split(':')]\n    end_time = [int(x) for x in sys.stdin.readline().split(':')]\n    start_minutes = time_to_minutes(start_time)\n    end_minutes = time_to_minutes(end_time)\n    middle_minutes = (start_minutes + end_minutes) / 2\n    middle_time = minutes_to_time(middle_minutes)\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]\n\ndef minutes_to_time(minutes):\n    return [minutes // 60, minutes % 60]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split(':')]\n    end_time = [int(x) for x in sys.stdin.readline().split(':')]\n    start_minutes = time_to_minutes(start_time)\n    end_minutes = time_to_minutes(end_time)\n    middle_minutes = (start_minutes + end_minutes) // 2\n    middle_time = minutes_to_time(middle_minutes)\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]\n\ndef minutes_to_time(minutes):\n\n    return [minutes // 60, minutes % 60]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split(':')]\n    end_time = [int(x) for x in sys.stdin.readline().split(':')]\n    start_minutes = time_to_minutes(start_time)\n    end_minutes = time_to_minutes(end_time)\n    middle_minutes = (start_minutes + end_minutes) // 2\n    middle_time = minutes_to_time(middle_minutes)\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "import sys\n\n\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]\n\n\ndef minutes_to_time(minutes):\n\n    return [minutes // 60, minutes % 60]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split(':')]\n    end_time = [int(x) for x in sys.stdin.readline().split(':')]\n    start_minutes = time_to_minutes(start_time)\n    end_minutes = time_to_minutes(end_time)\n    middle_minutes = (start_minutes + end_minutes) // 2\n    middle_time = minutes_to_time(middle_minutes)\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1]))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650613953,
  "object": "edit"
}
2022-04-22 07:52:38.878652 fix syntax errors 4 ["\nimport sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1] / 2\n\ndef minutes_to_time(minutes):\n    return [minutes // 60, minutes % 60 / 2]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split(':')]\n    end_time = [int(x) for x in sys.stdin.readline().split(':')]\n    start_minutes = time_to_minutes(start_time)\n    end_minutes = time_to_minutes(end_time)\n    middle_minutes = (start_minutes + end_minutes) / 2\n    middle_time = minutes_to_time(middle_minutes)\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1]))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]\n\ndef minutes_to_time(minutes):\n    return [minutes // 60, minutes % 60]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split(':')]\n    end_time = [int(x) for x in sys.stdin.readline().split(':')]\n    start_minutes = time_to_minutes(start_time)\n    end_minutes = time_to_minutes(end_time)\n    middle_minutes = (start_minutes + end_minutes) // 2\n    middle_time = minutes_to_time(middle_minutes)\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1]))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]\n\ndef minutes_to_time(minutes):\n\n    return [minutes // 60, minutes % 60]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split(':')]\n    end_time = [int(x) for x in sys.stdin.readline().split(':')]\n    start_minutes = time_to_minutes(start_time)\n    end_minutes = time_to_minutes(end_time)\n    middle_minutes = (start_minutes + end_minutes) // 2\n    middle_time = minutes_to_time(middle_minutes)\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1]))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\n\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]\n\n\ndef minutes_to_time(minutes):\n\n    return [minutes // 60, minutes % 60]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split(':')]\n    end_time = [int(x) for x in sys.stdin.readline().split(':')]\n    start_minutes = time_to_minutes(start_time)\n    end_minutes = time_to_minutes(end_time)\n    middle_minutes = (start_minutes + end_minutes) // 2\n    middle_time = minutes_to_time(middle_minutes)\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1]))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-22 07:52:38.878784 size on output set 4
