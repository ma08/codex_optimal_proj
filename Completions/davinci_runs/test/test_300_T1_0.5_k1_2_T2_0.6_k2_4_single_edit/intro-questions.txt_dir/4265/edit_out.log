2022-04-22 09:03:24.586107 num operations 1
2022-04-22 09:03:24.586126 size on input set 1
2022-04-22 09:03:24.586307 using api key soukgp
2022-04-22 09:03:32.206612 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    s = input()\n    t = input() \n    count = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n\nimport sys\n\ndef main():\n    s = input()\n    t = input()\n    count = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport collections\nimport sys\n\ndef main():\n    s = input().rstrip()\n    t = input().rstrip()\n    if len(s) != len(t):\n        print('No')\n        return\n    d = collections.defaultdict(int)\n    for c in s:\n        d[c] += 1\n    for c in t:\n        d[c] -= 1\n    for v in d.values():\n        if v != 0:\n            print('No')\n            return\n    print('Yes')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    s = input()\n    t = input()\n    count = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650618204,
  "object": "edit"
}
2022-04-22 09:03:32.206893 fix syntax errors 4 ["\n\nimport sys\n\ndef main():\n    s = input()\n    t = input() \n    count = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\n\n\nimport sys\n\ndef main():\n    s = input()\n    t = input()\n    count = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport collections\nimport sys\n\ndef main():\n    s = input().rstrip()\n    t = input().rstrip()\n    if len(s) != len(t):\n        print('No')\n        return\n    d = collections.defaultdict(int)\n    for c in s:\n        d[c] += 1\n    for c in t:\n        d[c] -= 1\n    for v in d.values():\n        if v != 0:\n            print('No')\n            return\n    print('Yes')\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    s = input()\n    t = input()\n    count = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-22 09:03:32.206929 size on output set 4
2022-04-22 09:03:32.206940 num operations 1
2022-04-22 09:03:32.206946 size on input set 1
2022-04-22 09:03:32.207085 using api key derek
2022-04-22 09:03:36.948363 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ns = input()\nt = input()\n\nans = 0\nfor i in range(len(s)):  # i=0, 1, 2\n    if s[i] != t[i]:\n        ans += 1\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\ns = input() # AtCoder\nt = input() # AtCoder\n\nans = 0 # 1\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans += 1\n\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\ns = input()\nt = input()\n\nans = 0\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans += 1\n\nprint(ans)\n"
    },
    {
      "index": 3,
      "text": "import sys\n\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\n\n\ns = input()\nt = input().rstrip()\n\nans = 0\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans += 1\n\nprint(ans, end=\"\\n\")\n"
    }
  ],
  "created": 1650618212,
  "object": "edit"
}
2022-04-22 09:03:36.948595 fix syntax errors 4 ['\ns = input()\nt = input()\n\nans = 0\nfor i in range(len(s)):  # i=0, 1, 2\n    if s[i] != t[i]:\n        ans += 1\n\nprint(ans)\n', '\n\ns = input() # AtCoder\nt = input() # AtCoder\n\nans = 0 # 1\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans += 1\n\nprint(ans)\n', '\ns = input()\nt = input()\n\nans = 0\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans += 1\n\nprint(ans)\n', 'import sys\n\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\n\n\ns = input()\nt = input().rstrip()\n\nans = 0\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans += 1\n\nprint(ans, end="\\n")\n']
2022-04-22 09:03:36.948624 size on output set 4
