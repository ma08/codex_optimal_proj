["\n\n# My answer\n\n\ndef ceil_div(a, b):\n    return -(-a // b)\n\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A + 1\n\nif (N - (A * train)) % B == 0:\n    bus = ceil_div((N - (A * train)), B)\nelse:\n    bus = ceil_div((N - (A * train)), B) + 1\n\nif (N - (A * train) - (B * bus)) % C == 0:\n    taxi = ceil_div((N - (A * train) - (B * bus)), C)\nelse:\n    taxi = ceil_div((N - (A * train) - (B * bus)), C) + 1\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n", "\nN = int(input())\nA, B, C, D, E = [int(i) for i in input().split()]\n\ndef minute_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (num_people + C - 1) // C + (num_people + D - 1) // D + (num_people + E - 1) // E\n\nprint(minute_needed(N))\n", "\n# My answer\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n", "\n# This is my answer\n# My answer\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n", "import math\n\n\nN = int(input()) # \u4eba\u6570\nA, B, C, D, E = [int(i) for i in input().split()] # \u6642\u9593\n\ndef minute_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (num_people + C - 1) // C + (num_people + D - 1) // D + (num_people + E - 1) // E\n\nprint(minute_needed(N))\n", "\n\n\n# My answer\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\n\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n"]