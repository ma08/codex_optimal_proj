2022-04-22 09:11:49.954088 num operations 1
2022-04-22 09:11:49.954109 size on input set 1
2022-04-22 09:11:49.954258 using api key jaanu
2022-04-22 09:12:28.272400 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (D * 2 + 1)) + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import math\nimport itertools\nimport collections\nimport bisect\nimport heapq\nimport fractions\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bis\n\n\nimport math\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport math\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "import math\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650618710,
  "object": "edit"
}
2022-04-22 09:12:28.272833 fix syntax errors 4 ['\n\nimport math\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (D * 2 + 1)) + 1)\n\nif __name__ == "__main__":\n    main()\n', 'import math\nimport itertools\nimport collections\nimport bisect\nimport heapq\nimport fractions\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bisect\nimport heapq\nimport fractions\nimport collections\nimport math\nimport sys\nimport bis\n\n\nimport math\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport math\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == "__main__":\n    main()\n', 'import math\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-22 09:12:28.272912 size on output set 4
2022-04-22 09:12:28.272939 num operations 1
2022-04-22 09:12:28.272946 size on input set 1
2022-04-22 09:12:28.273094 using api key jaanu
2022-04-22 09:12:32.375185 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN, D = map(int, input().split())\n\nprint(N//(D*2+1) + 1)\n"
    },
    {
      "index": 1,
      "text": "\nN, D = map(int, input().split())\n\nprint(N//(D*2+1))\n"
    },
    {
      "index": 2,
      "text": "\nN, D = map(int, input().split())\n\nprint(N // (D * 2 + 1))\n"
    },
    {
      "index": 3,
      "text": "\nN, D = map(int, input().split())\n\nprint((N+D*2)//(D*2+1))\n"
    }
  ],
  "created": 1650618748,
  "object": "edit"
}
2022-04-22 09:12:32.375479 fix syntax errors 4 ['\n\nN, D = map(int, input().split())\n\nprint(N//(D*2+1) + 1)\n', '\nN, D = map(int, input().split())\n\nprint(N//(D*2+1))\n', '\nN, D = map(int, input().split())\n\nprint(N // (D * 2 + 1))\n', '\nN, D = map(int, input().split())\n\nprint((N+D*2)//(D*2+1))\n']
2022-04-22 09:12:32.375524 size on output set 4
