2022-04-22 09:06:26.622548 num operations 1
2022-04-22 09:06:26.622567 size on input set 1
2022-04-22 09:06:26.622738 using api key jaanu
2022-04-22 09:06:34.833759 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef min_expense(N, A, B):\n\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\ndef main():\n    import sys\n    N, A, B = map(int, sys.stdin.readline().rstrip().split())\n    print(min_expense(N, A, B))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\nN, M = map(int, sys.stdin.readline().rstrip().split())\n\n\nlist_numbers = [list(map(int, sys.stdin.readline().rstrip().split())) for _ in range(N)]\n\n\nlist_numbers.sort(key=lambda x: x[0])\nlist_numbers.sort(key=lambda x: x[1])\n\nfor i in range(N):\n    print(list_numbers[i][0], list_numbers[i][1])\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n"
    }
  ],
  "created": 1650618386,
  "object": "edit"
}
2022-04-22 09:06:34.834042 fix syntax errors 4 ['\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n', '\n\ndef min_expense(N, A, B):\n\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\ndef main():\n    import sys\n    N, A, B = map(int, sys.stdin.readline().rstrip().split())\n    print(min_expense(N, A, B))\n\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\nN, M = map(int, sys.stdin.readline().rstrip().split())\n\n\nlist_numbers = [list(map(int, sys.stdin.readline().rstrip().split())) for _ in range(N)]\n\n\nlist_numbers.sort(key=lambda x: x[0])\nlist_numbers.sort(key=lambda x: x[1])\n\nfor i in range(N):\n    print(list_numbers[i][0], list_numbers[i][1])\n', '#!/usr/bin/env python3\n\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n']
2022-04-22 09:06:34.834078 size on output set 4
2022-04-22 09:06:34.834098 num operations 1
2022-04-22 09:06:34.834104 size on input set 1
2022-04-22 09:06:34.834243 using api key sunu
2022-04-22 09:06:38.875327 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n"
    },
    {
      "index": 2,
      "text": "import sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split())\nif n*a > b:\n    print(b)\nelse:\n    print(n*a)\n"
    }
  ],
  "created": 1650618394,
  "object": "edit"
}
2022-04-22 09:06:38.875575 fix syntax errors 4 ['\nimport sys\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n', '\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n', 'import sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n', '\n\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split())\nif n*a > b:\n    print(b)\nelse:\n    print(n*a)\n']
2022-04-22 09:06:38.875600 size on output set 4
