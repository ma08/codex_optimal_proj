2022-04-22 08:41:08.274859 num operations 1
2022-04-22 08:41:08.274878 size on input set 1
2022-04-22 08:41:08.275050 using api key soukgp
2022-04-22 08:41:13.592846 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    a, b, c = line.split()\n    a = int(a)\n    b = int(b)\n    c = int(c)\n    if (a / c) <= b:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    d, t, s = [int(x) for x in line.split()]\n    d = int(d)\n    t = int(t)\n    s = int(s)\n    if d / s <= t:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    d, t, s = line.split()\n    d = int(d)\n    t = int(t)\n    s = int(s)\n    if (d / s) <= t:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    d, t, s = line.split(' ')\n    d = int(d)\n    t = int(t)\n    s = int(s)\n    if (d / s) <= t: # no need to use float\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650616868,
  "object": "edit"
}
2022-04-22 08:41:13.593154 fix syntax errors 4 ['\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    a, b, c = line.split()\n    a = int(a)\n    b = int(b)\n    c = int(c)\n    if (a / c) <= b:\n        print("Yes")\n    else:\n        print("No")\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    d, t, s = [int(x) for x in line.split()]\n    d = int(d)\n    t = int(t)\n    s = int(s)\n    if d / s <= t:\n        print("Yes")\n    else:\n        print("No")\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    d, t, s = line.split()\n    d = int(d)\n    t = int(t)\n    s = int(s)\n    if (d / s) <= t:\n        print("Yes")\n    else:\n        print("No")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    d, t, s = line.split(\' \')\n    d = int(d)\n    t = int(t)\n    s = int(s)\n    if (d / s) <= t: # no need to use float\n        print("Yes")\n    else:\n        print("No")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-22 08:41:13.593195 size on output set 4
2022-04-22 08:41:13.593207 num operations 1
2022-04-22 08:41:13.593213 size on input set 1
2022-04-22 08:41:13.593347 using api key soukgp
2022-04-22 08:41:33.584613 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\nimport os\n\n\nsys.stdin = open(os.path.join(sys.path[0], 'input.txt'), 'r')\n\nd, t, s = map(int, sys.stdin.readline().split())\n\nif d / s <= t:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 1,
      "text": "\n\nn, m = map(int, input().split())\n\na = list(map(int, input().split()))\n\n\nprint(n, m)\nprint(a)\n"
    },
    {
      "index": 2,
      "text": "\n\nN, M = map(int, input().split()) \nedges = [[] for _ in range(N)] \nfor _ in range(M): \n    a, b, c = map(int, input().split()) \n    a -= 1 \n    b -= 1 \n    edges[a].append((b, -c)) \n\ndist = [1 << 60] * N \ndist[0] = 0 \n\n# \u8ca0\u306e\u9589\u8def\u3092\u63a2\u3059 \nfor _ in range(N): \n    for i in range(N): \n        for e in edges[i]: \n            j, c = e \n            if dist[j] > dist[i] + c: \n                dist[j] = dist[i] + c \n                if i == N - 1: \n                    print(-1) \n                    exit() \n\n# \u9589\u8def\u304c\u306a\u3051\u308c\u3070\u6700\u77ed\u8ddd\u96e2\u3092\u66f4\u65b0 \nfor i in range(N): \n    for e in edges[i]: \n        j, c = e \n        if dist[j] > dist[i] + c: \n            dist[j] = dist[i] + c \nprint(-dist[N - 1]) \n"
    },
    {
      "index": 3,
      "text": "\nd, t, s = map(int, input().split())\n\nif d / s <= t:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    }
  ],
  "created": 1650616873,
  "object": "edit"
}
2022-04-22 08:41:33.584943 fix syntax errors 4 ['import sys\nimport os\n\n\nsys.stdin = open(os.path.join(sys.path[0], \'input.txt\'), \'r\')\n\nd, t, s = map(int, sys.stdin.readline().split())\n\nif d / s <= t:\n    print("Yes")\nelse:\n    print("No")\n', '\n\nn, m = map(int, input().split())\n\na = list(map(int, input().split()))\n\n\nprint(n, m)\nprint(a)\n', '\n\nN, M = map(int, input().split()) \nedges = [[] for _ in range(N)] \nfor _ in range(M): \n    a, b, c = map(int, input().split()) \n    a -= 1 \n    b -= 1 \n    edges[a].append((b, -c)) \n\ndist = [1 << 60] * N \ndist[0] = 0 \n\n# 負の閉路を探す \nfor _ in range(N): \n    for i in range(N): \n        for e in edges[i]: \n            j, c = e \n            if dist[j] > dist[i] + c: \n                dist[j] = dist[i] + c \n                if i == N - 1: \n                    print(-1) \n                    exit() \n\n# 閉路がなければ最短距離を更新 \nfor i in range(N): \n    for e in edges[i]: \n        j, c = e \n        if dist[j] > dist[i] + c: \n            dist[j] = dist[i] + c \nprint(-dist[N - 1]) \n', '\nd, t, s = map(int, input().split())\n\nif d / s <= t:\n    print("Yes")\nelse:\n    print("No")\n']
2022-04-22 08:41:33.584989 size on output set 4
