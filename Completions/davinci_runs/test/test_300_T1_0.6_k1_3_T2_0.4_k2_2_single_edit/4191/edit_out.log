2022-04-20 12:05:17.001435 num operations 1
2022-04-20 12:05:17.001455 size on input set 1
2022-04-20 12:05:17.001611 using api key sunu
2022-04-20 12:05:20.032656 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\na = bool(int(input()))\nb = bool(int(input()))\nc = bool(int(input()))\nd = bool(int(input()))\n\ne = not a\nf = not b\n\ng = e or f\n\nh = not c\ni = not d\n\nj = h or i\n\nk = g and j\n\nprint(k)\n"
    },
    {
      "index": 1,
      "text": "\n\na = int(input(\"\"))\nb = int(input(\"\"))\nc = int(input(\"\"))\nd = int(input(\"\"))\n\ne = not a\nf = not b\n\ng = e or f\n\nh = not c\ni = not d\n\nj = h or i\n\nk = g and j\n\nprint(int(k))\n"
    }
  ],
  "created": 1650456317,
  "object": "edit"
}
2022-04-20 12:05:20.032926 fix syntax errors 2 ['\n\na = bool(int(input()))\nb = bool(int(input()))\nc = bool(int(input()))\nd = bool(int(input()))\n\ne = not a\nf = not b\n\ng = e or f\n\nh = not c\ni = not d\n\nj = h or i\n\nk = g and j\n\nprint(k)\n', '\n\na = int(input(""))\nb = int(input(""))\nc = int(input(""))\nd = int(input(""))\n\ne = not a\nf = not b\n\ng = e or f\n\nh = not c\ni = not d\n\nj = h or i\n\nk = g and j\n\nprint(int(k))\n']
2022-04-20 12:05:20.032953 size on output set 2
2022-04-20 12:05:20.032963 num operations 1
2022-04-20 12:05:20.032970 size on input set 1
2022-04-20 12:05:20.033123 using api key sunu
2022-04-20 12:05:23.333413 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main(inp, inp2):\n    if inp[0] == inp2[0] and inp[1] == inp2[1]:\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp2 = []\n    inp = []\n    for i in range(4):\n        inp2.append(int(input()))\n        inp.append(int(input()))\n    print(main(inp))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main(inp):\n    if (inp[0] == inp[2] and inp[1] == inp[3]) or (inp[0] == inp[3] and inp[1] == inp[2]):\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n"
    }
  ],
  "created": 1650456320,
  "object": "edit"
}
2022-04-20 12:05:23.333667 fix syntax errors 2 ["\n\ndef main(inp, inp2):\n    if inp[0] == inp2[0] and inp[1] == inp2[1]:\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp2 = []\n    inp = []\n    for i in range(4):\n        inp2.append(int(input()))\n        inp.append(int(input()))\n    print(main(inp))\n", "\n\ndef main(inp):\n    if (inp[0] == inp[2] and inp[1] == inp[3]) or (inp[0] == inp[3] and inp[1] == inp[2]):\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n"]
2022-04-20 12:05:23.333695 size on output set 2
2022-04-20 12:05:23.333708 num operations 1
2022-04-20 12:05:23.333714 size on input set 1
2022-04-20 12:05:23.333870 using api key kouti
2022-04-20 12:05:25.598517 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) == 1 else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n"
    },
    {
      "index": 1,
      "text": "\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n"
    }
  ],
  "created": 1650456323,
  "object": "edit"
}
2022-04-20 12:05:25.598758 fix syntax errors 2 ['\n\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) == 1 else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n', '\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n']
2022-04-20 12:05:25.598793 size on output set 2
