2022-04-20 11:43:04.106657 num operations 1
2022-04-20 11:43:04.106689 size on input set 1
2022-04-20 11:43:04.106862 using api key sunu
2022-04-20 11:43:08.302745 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef min_guess(nums):\n    if len(nums) == 1:\n    if len(nums) == 2:\n        if nums[0] == nums[1]:\n            return nums[0]\n        else:\n            return -1\n        return 1\n    product = 1\n    for num in nums:\n        product *= num\n    for num in nums:\n        if product % num == 0:\n            product += 1\n        else:\n            return -1\n    return product - 1\n\ndef main():\n    num_queries = int(input())\n    for i in range(num_queries):\n        num_divisors = int(input())\n        divisors = [int(x) for x in input().split()]\n        print(min_guess(divisors))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    num_queries = int(input())\n    for i in range(num_queries):\n        num_divisors = int(input())\n        divisors = [int(x) for x in input().split()]\n        print(min_guess(divisors))\n\ndef main():\n    num_queries = int(input())\n    for i in range(num_queries):\n        num_divisors = int(input())\n        divisors = [int(x) for x in input().split()]\n        print(min_guess(divisors))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650454984,
  "object": "edit"
}
2022-04-20 11:43:08.302997 fix syntax errors 2 ['\n\ndef min_guess(nums):\n    if len(nums) == 1:\n    if len(nums) == 2:\n        if nums[0] == nums[1]:\n            return nums[0]\n        else:\n            return -1\n        return 1\n    product = 1\n    for num in nums:\n        product *= num\n    for num in nums:\n        if product % num == 0:\n            product += 1\n        else:\n            return -1\n    return product - 1\n\ndef main():\n    num_queries = int(input())\n    for i in range(num_queries):\n        num_divisors = int(input())\n        divisors = [int(x) for x in input().split()]\n        print(min_guess(divisors))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    num_queries = int(input())\n    for i in range(num_queries):\n        num_divisors = int(input())\n        divisors = [int(x) for x in input().split()]\n        print(min_guess(divisors))\n\ndef main():\n    num_queries = int(input())\n    for i in range(num_queries):\n        num_divisors = int(input())\n        divisors = [int(x) for x in input().split()]\n        print(min_guess(divisors))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 11:43:08.303032 size on output set 2
2022-04-20 11:43:08.303044 num operations 1
2022-04-20 11:43:08.303049 size on input set 1
2022-04-20 11:43:08.303225 using api key sunu
2022-04-20 11:43:10.759247 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport math\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        div = [int(x) for x in input().split()]\n        div.sort()\n        ans = div[0]\n        for d in div:\n            ans = math.gcd(ans, d)\n        if ans > 1:\n            print(ans)\n        else:\n            print(-1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        div = [int(x) for x in input().split(' ')]\n        div.sort()\n        ans = div[0]\n        for d in div:\n            ans = math.gcd(ans, d)\n        if ans > 1:\n            print(ans)\n        else:\n            print(-1)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650454988,
  "object": "edit"
}
2022-04-20 11:43:10.759488 fix syntax errors 2 ["#!/usr/bin/env python3\n\nimport math\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        div = [int(x) for x in input().split()]\n        div.sort()\n        ans = div[0]\n        for d in div:\n            ans = math.gcd(ans, d)\n        if ans > 1:\n            print(ans)\n        else:\n            print(-1)\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        div = [int(x) for x in input().split(' ')]\n        div.sort()\n        ans = div[0]\n        for d in div:\n            ans = math.gcd(ans, d)\n        if ans > 1:\n            print(ans)\n        else:\n            print(-1)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 11:43:10.759518 size on output set 2
2022-04-20 11:43:10.759531 num operations 1
2022-04-20 11:43:10.759537 size on input set 1
2022-04-20 11:43:10.759698 using api key sunu
2022-04-20 11:43:13.469869 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef get_input():\n    t = int(sys.stdin.readline())\n    for i in range(t):\n        n = int(sys.stdin.readline())\n        d = list(map(int, sys.stdin.readline().split()))\n        d.sort()\n        yield n, d\n\ndef solve(n, d):\n    if n == 1:\n        return d[0] * 2\n    if d[0] * d[-1] % d[-2] != 0:\n        return d[0] * d[-1]\n    else:\n        return -1\n\nif __name__ == '__main__':\n    for n, d in get_input():\n        print(solve(n, d))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef get_input():\n    t = int(sys.stdin.readline())\n    for i in range(t):\n        n = int(sys.stdin.readline())\n        d = list(map(int, sys.stdin.readline().split()))\n        d.sort()\n        yield n, d\n\ndef solve(n, d):\n    if n == 1:\n        return d[0] * 2\n    return d[0] * d[-1] if d[0] * d[-1] % d[-2] != 0 else -1\n\nif __name__ == '__main__':\n    for n, d in get_input():\n        print(solve(n, d))\n"
    }
  ],
  "created": 1650454990,
  "object": "edit"
}
2022-04-20 11:43:13.470108 fix syntax errors 2 ["\nimport sys\n\ndef get_input():\n    t = int(sys.stdin.readline())\n    for i in range(t):\n        n = int(sys.stdin.readline())\n        d = list(map(int, sys.stdin.readline().split()))\n        d.sort()\n        yield n, d\n\ndef solve(n, d):\n    if n == 1:\n        return d[0] * 2\n    if d[0] * d[-1] % d[-2] != 0:\n        return d[0] * d[-1]\n    else:\n        return -1\n\nif __name__ == '__main__':\n    for n, d in get_input():\n        print(solve(n, d))\n", "\nimport sys\n\ndef get_input():\n    t = int(sys.stdin.readline())\n    for i in range(t):\n        n = int(sys.stdin.readline())\n        d = list(map(int, sys.stdin.readline().split()))\n        d.sort()\n        yield n, d\n\ndef solve(n, d):\n    if n == 1:\n        return d[0] * 2\n    return d[0] * d[-1] if d[0] * d[-1] % d[-2] != 0 else -1\n\nif __name__ == '__main__':\n    for n, d in get_input():\n        print(solve(n, d))\n"]
2022-04-20 11:43:13.470141 size on output set 2
