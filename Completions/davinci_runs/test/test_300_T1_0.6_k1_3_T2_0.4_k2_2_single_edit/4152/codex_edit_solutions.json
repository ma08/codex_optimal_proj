["var fs = require('fs');\n\nvar file = fs.readFileSync(process.argv[2]);\n\nvar lines = file.toString().split('\\n').length - 1;\n\nconsole.log(lines);\n", "\n\nn = int(input())\na = list(map(int, input().split()))\na.sort()\n\n\ndef power_of_two(n): # check if a number is power of 2\n    if n == 0:\n        return False\n    else:\n        return n & (n-1) == 0\n\n\ndef solve(n, a):\n    l = 0 # left pointer\n    r = n-1 # right pointer\n    res = n # number of pairs\n\n    while l < r:\n        if power_of_two(a[l]+a[r]):\n            res -= 1\n            l += 1\n            r -= 1\n        else:\n            if a[l] > a[r]:\n                r -= 1\n            else:\n                l += 1\n    return res\n\nprint(solve(n, a))\n", "\n\nn = int(input())\na = list(map(int, input().split()))\na.sort()\n\n\ndef power_of_two(n): \n    if n == 0:\n        return False\n    else:\n        return n & (n-1) == 0\n\n\ndef solve(n, a): \n    l = 0\n    r = n-1\n    res = n\n\n    while l < r:\n        if power_of_two(a[l]+a[r]):\n            res -= 1\n            l += 1\n            r -= 1\n        else:\n            if a[l] > a[r]:\n                r -= 1\n            else:\n                l += 1\n    return res\n\nprint(solve(n, a))\n", "n = int(input())\nl = list(map(int,input().split()))\n\nif n==1 and l[0]!=1:\n    print(1)\nelif n==1 and l[0]==1:\n    print(0)\nelse:\n    from collections import Counter\n    c = Counter(l)\n    c1 = []\n    for i in range(len(c)):\n        c1.append(c[i])\n\n\n    print(n-max(c.values()))\n", "var fs = require('fs');\n\nfs.readFile('file.txt', 'utf8', function(err, data) {\n  if (err) {\n    console.log('Error: ' + err);\n    return;\n  }\n\n  data = data.replace(/somecompany\\.com/g, 'burningbird.net');\n\n  fs.writeFile('file.txt', data, function(err) {\n    if (err) {\n      console.log('Error: ' + err);\n      return;\n    }\n\n    console.log('file.txt successfully updated');\n  });\n});\n", "\n\nn = int(input())\nl = list(map(int,input().split()))\n\nif n==1 and l[0]!=1:\n    print(1)\nelif n==1 and l[0]==1:\n    print(0)\nelse:\n    from collections import Counter\n    c = Counter(l)\n\n\n\n    print(n-max(c.values()))\n"]