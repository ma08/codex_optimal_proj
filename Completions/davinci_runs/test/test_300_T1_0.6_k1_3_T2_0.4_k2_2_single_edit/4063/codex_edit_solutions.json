["\n\n\ndef main():\n    # Read the number of problems and the number of days\n    N, D = [int(x) for x in input().split()]\n\n    # Read the difficulty of each problem and the deadline of each problem\n    problems = []\n    for i in range(N):\n        problems.append([int(x) for x in input().split()])\n\n    # Sort the problems in ascending order of deadline\n    problems.sort(key=lambda x: x[1])\n\n    # Calculate the number of problems for each difficulty and deadline\n    problems_by_difficulty_and_deadline = {}\n    for i in range(N):\n        if problems[i][0] not in problems_by_difficulty_and_deadline:\n            problems_by_difficulty_and_deadline[problems[i][0]] = {}\n        if problems[i][1] not in problems_by_difficulty_and_deadline[problems[i][0]]:\n            problems_by_difficulty_and_deadline[problems[i][0]][problems[i][1]] = 0\n        problems_by_difficulty_and_deadline[problems[i][0]][problems[i][1]] += 1\n\n    # Calculate the number of choices of the integer K and the deadline\n    count = 0\n    for difficulty in problems_by_difficulty_and_deadline:\n        for deadline in problems_by_difficulty_and_deadline[difficulty]:\n            if difficulty in problems_by_difficulty_and_deadline:\n                count += problems_by_difficulty_and_deadline[difficulty][deadline] * problems_by_difficulty_and_deadline[N//2-difficulty][deadline]\n\n    # Print the answer\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef solve(N, d):\n    d.sort()\n    d_median = d[N // 2]\n\n    l, r = 0, 0\n    for i in range(N // 2):\n        l += d[i]\n    for i in range(N // 2, N):\n        r += d[i]\n\n    K_min = d[0]\n    K_max = d[-1]\n\n    if l == r:\n        return K_max - K_min + 1\n\n    return 0\n\n\ndef main():\n    N = int(input())\n    d = list(map(int, input().split()))\n\n    print(solve(N, d))\n\n\nif __name__ == '__main__':\n    main()\n", "\n# import sys\n\n# N = int(sys.stdin.readline().rstrip())\n# d = list(map(int, sys.stdin.readline().rstrip().split()))\n\n# # print(N)\n# # print(d)\n\n# count = 0\n# for i in range(1, N):\n#     if sum(d[:i]) == sum(d[i:]):\n#         count += 1\n\n# print(count)\n\n\n# import sys\n\n# N = int(sys.stdin.readline().rstrip())\n# d = list(map(int, sys.stdin.readline().rstrip().split()))\n\n# # print(N)\n# # print(d)\n\n# count = 0\n# for i in range(1, N):\n#     if sum(d[:i]) == sum(d[i:]):\n#         count += 1\n\n# print(count)\n\n# import sys\n\n# N = int(sys.stdin.readline().rstrip())\n# d = list(map(int, sys.stdin.readline().rstrip().split()))\n\n# # print(N)\n# # print(d)\n\n# count = 0\n# for i in range(1, N):\n#     if sum(d[:i]) == sum(d[i:]):\n#         count += 1\n\n# print(count)\n\n# import sys\n\n# N = int(sys.stdin.readline().rstrip())\n# d = list(map(int, sys.stdin.readline().rstrip().split()))\n\n# # print(N)\n# # print(d)\n\n# count = 0\n# for i in range(1, N):\n#     if sum(d[:i]) == sum(d[i:]):\n#         count += 1\n\n# print(count)\n\n# import sys\n\n# N = int(sys.stdin.readline().rstrip())\n# d = list(map(int, sys.stdin.readline().rstrip().split()))\n\n# # print(N)\n# # print(d)\n\n# count = 0\n# for i in range(1, N):\n#     if sum(d[:i]) == sum(d[i:]):\n#         count += 1\n\n# print(count)\n\n# import sys\n\n# N = int(sys.stdin.readline().rstrip())\n# d = list(map(int, sys.stdin.readline().rstrip().split()))\n\n# # print(N)\n# # print(d)\n\n# count = 0\n# for i in range(1, N):\n#     if sum(d[:i]) == sum(d[i:]):\n#         count += 1\n\n# print(count)\n\n# import sys\n\n# N = int(sys.stdin.readline().rstrip())\n# d = list(map(int, sys.stdin.readline().rstrip().split()))\n\n# # print(N)\n# # print(d)\n\n# count = 0\n# for i in range(1, N):\n#     if sum(d[:i]) == sum(d[i:]):\n#         count += 1\n\n# print(count)\n\n# import sys\n\n# N = int(sys.stdin.readline().rstrip())\n# d = list(map(int, sys.stdin.readline().rstrip().split()))\n\n# # print(N)\n# # print(d)\n\n# count = 0\n# for i in range(1, N):\n#     if sum(d[:i]) == sum(d[i:]):\n#         count += 1\n\n# print(count)\n\n# import sys\n\n# N = int(sys.stdin.readline().rstrip())\n# d = list(map(int, sys.stdin.readline().rstrip().split()))\n\n# # print(N)\n# # print(d)\n\n# count = 0\n# for i in range(1, N):\n#     if sum(d[:i]) == sum(d[i:]):\n#         count += 1\n\n# print(count)\n\n# import sys\n\n# N = int(sys.stdin.readline().rstrip())\n# d = list(map(int, sys.stdin.readline().rstrip().split()))\n\n# # print(N)\n# # print(d)\n\n# count = 0\n# for i in range(1, N):\n#     if sum(d[:i]) == sum(d[i:]):\n#         count += 1\n\n# print(count)\n\n# import sys\n\n# N = int(sys.stdin.readline().rstrip())\n# d = list(map(int, sys.stdin.readline().rstrip().split()))\n\n# # print(N)\n# # print(d)\n\n# count = 0\n# for i in range(1, N):\n#     if sum(d[:i]) == sum(d[i:]):\n#         count += 1\n\n# print(count)\n\n# import sys\n\n# N = int(sys.stdin.readline().rstrip())\n# d = list(map(int, sys.stdin.readline().rstrip().split()))\n\n# # print(N)\n# # print(d)\n\n# count = 0\n# for i in range(1, N):\n#     if sum(d[:i]) == sum(d[i:]):\n#         count += 1\n\n# print(count)\n\n# import sys\n\n# N = int(sys.stdin.readline().rstrip())\n# d = list(map(int, sys.stdin.readline().rstrip().split()))\n\n# # print(N)\n# # print(d)\n\n# count = 0\n# for i in range(1, N):\n#     if sum(d[:i]) == sum(d[i:]):\n#         count += 1\n\n# print(count)\n", "\ndef main():\n    # Read the number of problems\n    N = int(input())\n\n    # Read the difficulty of each problem\n    problems = [int(x) for x in input().split()]\n\n    # Sort the problems in ascending order\n    problems.sort()\n\n    # Calculate the number of problems for each difficulty\n    problems_by_difficulty = {}\n    for problem in problems:\n        if problem not in problems_by_difficulty:\n            problems_by_difficulty[problem] = 0\n        problems_by_difficulty[problem] += 1\n\n    # Calculate the number of choices of the integer K\n    count = 0\n    for difficulty in problems_by_difficulty:\n        if N//2-difficulty in problems_by_difficulty:\n            count += problems_by_difficulty[difficulty] * problems_by_difficulty[N//2-difficulty]\n\n    # Print the answer\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\n\nN = int(sys.stdin.readline().rstrip())\nd = list(map(int, sys.stdin.readline().rstrip().split()))\n\nprint(N)\nprint(d)\n\ncount = 0\nfor i in range(1, N):\n    if sum(d[:i]) == sum(d[i:]):\n        count += 1\n\nprint(count)\n", "def solve(N, d):\n    d.sort()\n    d_median = d[N // 2]\n\n    l, r = 0, 0\n    for i in range(N // 2):\n        l += d[i]\n    for i in range(N // 2, N):\n        r += d[i]\n\n    K_min = d[0]\n    K_max = d[-1]\n\n    if l == r:\n        return K_max - K_min + 1\n\n    return K_max - K_min + 1\n\n\ndef main():\n    N = int(input())\n    d = list(map(int, input().split()))\n\n    print(solve(N, d))\n\n\nif __name__ == '__main__':\n    main()\n"]