2022-04-20 12:02:57.230247 num operations 1
2022-04-20 12:02:57.230265 size on input set 1
2022-04-20 12:02:57.230424 using api key jaanu
2022-04-20 12:03:00.082052 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    num_clocks = int(sys.stdin.readline().rstrip())\n    clock_times = []\n    for clock in range(num_clocks):\n        clock_times.append(int(sys.stdin.readline().rstrip()))\n    answer = clock_times[0]\n    for clock in clock_times[1:]:\n        answer = lcm(answer, clock)\n    print(answer)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\n\ndef main():\n    num_clocks = int(sys.stdin.readline().rstrip())\n    clock_times = []\n    for clock in range(num_clocks):\n        clock_times.append(int(sys.stdin.readline().rstrip()))\n    answer = clock_times[0]\n    for clock in clock_times[1:]:\n        answer = lcm(answer, clock)\n    print(answer)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650456177,
  "object": "edit"
}
2022-04-20 12:03:00.082378 fix syntax errors 2 ["\nimport sys\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    num_clocks = int(sys.stdin.readline().rstrip())\n    clock_times = []\n    for clock in range(num_clocks):\n        clock_times.append(int(sys.stdin.readline().rstrip()))\n    answer = clock_times[0]\n    for clock in clock_times[1:]:\n        answer = lcm(answer, clock)\n    print(answer)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\n\ndef main():\n    num_clocks = int(sys.stdin.readline().rstrip())\n    clock_times = []\n    for clock in range(num_clocks):\n        clock_times.append(int(sys.stdin.readline().rstrip()))\n    answer = clock_times[0]\n    for clock in clock_times[1:]:\n        answer = lcm(answer, clock)\n    print(answer)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 12:03:00.082414 size on output set 2
2022-04-20 12:03:00.082425 num operations 1
2022-04-20 12:03:00.082431 size on input set 1
2022-04-20 12:03:00.082597 using api key sourya
2022-04-20 12:03:01.634501 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from math import gcd\n\nimport sys\n\nn = int(input())\nt = []\nfor i in range(n):\n    t.append(int(input()))\n\nans = t[0]\n\nfor i in t:\n    ans = ans * i // gcd(ans, i)\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\nfrom math import gcd\n\nn = int(input())\nt = []\nfor i in range(n):\n    t.append(int(input()))\n\nans = t[0]\n\nfor i in t:\n    ans = ans * i // gcd(ans, i)\n\nprint(ans)\n"
    }
  ],
  "created": 1650456180,
  "object": "edit"
}
2022-04-20 12:03:01.634712 fix syntax errors 2 ['from math import gcd\n\nimport sys\n\nn = int(input())\nt = []\nfor i in range(n):\n    t.append(int(input()))\n\nans = t[0]\n\nfor i in t:\n    ans = ans * i // gcd(ans, i)\n\nprint(ans)\n', '\nfrom math import gcd\n\nn = int(input())\nt = []\nfor i in range(n):\n    t.append(int(input()))\n\nans = t[0]\n\nfor i in t:\n    ans = ans * i // gcd(ans, i)\n\nprint(ans)\n']
2022-04-20 12:03:01.634737 size on output set 2
2022-04-20 12:03:01.634748 num operations 1
2022-04-20 12:03:01.634754 size on input set 1
2022-04-20 12:03:01.634908 using api key sourya
2022-04-20 12:03:03.526148 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef gcd(a, b):\n    if a % b == 0:\n        return b\n    else:\n        return gcd(b, a % b)\ndef lcm(a, b):\n    return a * b // gcd(a, b)\ndef solve(n):\n    ans = 1\n    for i in range(n):\n        ans = lcm(ans, int(sys.stdin.readline()))\n    return ans\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    print(solve(n))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef gcd(a, b):\n    if a % b == 0:\n        return b\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef solve(n):\n    ans = 1\n    for i in range(n):\n        ans = lcm(ans, int(sys.stdin.readline()))\n    return ans\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    print(solve(n))\n"
    }
  ],
  "created": 1650456181,
  "object": "edit"
}
2022-04-20 12:03:03.526390 fix syntax errors 2 ["\nimport sys\n\ndef gcd(a, b):\n    if a % b == 0:\n        return b\n    else:\n        return gcd(b, a % b)\ndef lcm(a, b):\n    return a * b // gcd(a, b)\ndef solve(n):\n    ans = 1\n    for i in range(n):\n        ans = lcm(ans, int(sys.stdin.readline()))\n    return ans\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    print(solve(n))\n", "\nimport sys\n\ndef gcd(a, b):\n    if a % b == 0:\n        return b\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef solve(n):\n    ans = 1\n    for i in range(n):\n        ans = lcm(ans, int(sys.stdin.readline()))\n    return ans\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    print(solve(n))\n"]
2022-04-20 12:03:03.526427 size on output set 2
