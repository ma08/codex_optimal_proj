["\nfrom sys import stdin\nn, k = map(int, stdin.readline().split())\na = sorted(map(int, stdin.readline().split()))\n\nprint(a[k - 1] if k else -1)\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    if k == 0 or k == n:\n        print(1) if k == 0 else print(l[-1])\n    else:\n        l = list(map(int, input().split()))\n        l.sort()\n        if l[k-1] == l[k]:\n            print(-1)\n        else:\n            print(l[k-1])\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    l = list(map(int, input().split())) \n    l.sort()\n    if k == 0:\n        print(1)\n        return\n    if k == n:\n        print(l[-1])\n        return\n    if l[k-1] == l[k]:\n        print(-1)\n        return\n    print(l[k-1])\n\nif __name__ == '__main__':\n    main()\n", "// file.js\n\nvar fs = require('fs');\n\nvar file = {\n  read: function(filepath) {\n    var content = fs.readFileSync(filepath, 'utf8');\n    return content;\n  },\n  write: function(filepath, content) {\n    fs.writeFileSync(filepath, content);\n  }\n};\n\nmodule.exports = file;\n", "from sys import stdin\nn, k = map(int, stdin.readline().split())\na = sorted(map(int, stdin.readline().split()))\n\nprint(a[k - 1] if k else -1)\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    if len(sys.argv) < 2:\n        print(\"Usage: {} <file>\".format(sys.argv[0]))\n        exit(1)\n\n    for filename in sys.argv[1:]:\n        with open(filename) as f:\n            data = f.read()\n            print(\"{}: {}\".format(filename, len(data)))\n\nif __name__ == \"__main__\":\n    main()\n"]