2022-04-20 12:26:23.006153 num operations 1
2022-04-20 12:26:23.006173 size on input set 1
2022-04-20 12:26:23.006339 using api key jaanu
2022-04-20 12:26:35.245361 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#-----CODE-----\ndef main():\n    # Read in STDIN\n    n, q = map(int, input().split())\n    s = input()\n    \n    # Initialize variables\n    ac_count = 0\n    \n    # Go through string, counting how many pairs of A and C in the string\n    for i in range(n-1):\n        if s[i] == 'A' and s[i+1] == 'C':\n            ac_count += 1\n    \n    # Initialize running count of AC pairs\n    running_ac_count = ac_count\n    \n    # Go through queries\n    for i in range(q):\n        l, r = map(int, input().split())\n    \n        # Check if we need to remove any AC pairs from left side\n        if s[l-2] == 'A' and s[l-1] == 'C':\n            running_ac_count -= 1\n        # Check if we need to add any AC pairs from right side\n        if s[r-1] == 'A' and s[r] == 'C':\n            running_ac_count += 1\n    \n        print(running_ac_count)\n    \nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n#-----CODE-----\nimport numpy as np\n\ndef main():\n    # Read in STDIN\n    n, q = map(int, input().split())\n    s = input()\n\n    # Initialize variables\n    ac_count = 0\n\n    # Go through string, counting how many pairs of A and C in the string\n    for i in range(n-1):\n        if s[i] == 'A' and s[i+1] == 'C':\n            ac_count += 1\n\n    # Initialize running count of AC pairs\n    running_ac_count = ac_count\n\n    # Go through queries\n    for i in range(q):\n        l, r = map(int, input().split())\n\n        # Check if we need to remove any AC pairs from left side\n        if s[l-2] == 'A' and s[l-1] == 'C':\n            running_ac_count -= 1\n        # Check if we need to add any AC pairs from right side\n        if s[r-1] == 'A' and s[r] == 'C':\n            running_ac_count += 1\n\n        print(running_ac_count)\n\nmain()\n"
    }
  ],
  "created": 1650457583,
  "object": "edit"
}
2022-04-20 12:26:35.245611 fix syntax errors 2 ["\n#-----CODE-----\ndef main():\n    # Read in STDIN\n    n, q = map(int, input().split())\n    s = input()\n    \n    # Initialize variables\n    ac_count = 0\n    \n    # Go through string, counting how many pairs of A and C in the string\n    for i in range(n-1):\n        if s[i] == 'A' and s[i+1] == 'C':\n            ac_count += 1\n    \n    # Initialize running count of AC pairs\n    running_ac_count = ac_count\n    \n    # Go through queries\n    for i in range(q):\n        l, r = map(int, input().split())\n    \n        # Check if we need to remove any AC pairs from left side\n        if s[l-2] == 'A' and s[l-1] == 'C':\n            running_ac_count -= 1\n        # Check if we need to add any AC pairs from right side\n        if s[r-1] == 'A' and s[r] == 'C':\n            running_ac_count += 1\n    \n        print(running_ac_count)\n    \nif __name__ == '__main__':\n    main()\n", "\n\n#-----CODE-----\nimport numpy as np\n\ndef main():\n    # Read in STDIN\n    n, q = map(int, input().split())\n    s = input()\n\n    # Initialize variables\n    ac_count = 0\n\n    # Go through string, counting how many pairs of A and C in the string\n    for i in range(n-1):\n        if s[i] == 'A' and s[i+1] == 'C':\n            ac_count += 1\n\n    # Initialize running count of AC pairs\n    running_ac_count = ac_count\n\n    # Go through queries\n    for i in range(q):\n        l, r = map(int, input().split())\n\n        # Check if we need to remove any AC pairs from left side\n        if s[l-2] == 'A' and s[l-1] == 'C':\n            running_ac_count -= 1\n        # Check if we need to add any AC pairs from right side\n        if s[r-1] == 'A' and s[r] == 'C':\n            running_ac_count += 1\n\n        print(running_ac_count)\n\nmain()\n"]
2022-04-20 12:26:35.245654 size on output set 2
2022-04-20 12:26:35.245664 num operations 1
2022-04-20 12:26:35.245670 size on input set 1
2022-04-20 12:26:35.245826 using api key kouti
2022-04-20 12:26:37.303852 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, q = map(int, input().split())\ns = input()\nl_r_list = []\nfor i in range(q):\n    l_r = list(map(int, input().split()))\n    l_r_list.append(l_r)\nac_counts = 0\nac_count_list = []\nfor i in range(n - 1):\n    if s[i] == \"A\" and s[i + 1] == \"C\":\n        ac_counts += 1\n    ac_count_list.append(ac_counts)\nfor l_r in l_r_list:\n    l = l_r[0] - 1\n    r = l_r[1] - 2\n    if l == 0:\n        print(ac_count_list[r])\n    else:\n        print(ac_count_list[r] - ac_count_list[l - 1])\n"
    },
    {
      "index": 1,
      "text": "\nn, q = map(int, input().split())\ns = input()\n\nl_r_list = []\nfor i in range(q):\n    l_r = list(map(int, input().split()))\n    l_r_list.append(l_r)\n\nac_counts = 0\nac_count_list = []\n\nfor i in range(n - 1):\n    if s[i] == \"A\" and s[i + 1] == \"C\":\n        ac_counts += 1\n    ac_count_list.append(ac_counts)\n\nfor l_r in l_r_list:\n    l = l_r[0] - 1\n    r = l_r[1] - 2\n    if l == 0:\n        print(ac_count_list[r])\n    else:\n        print(ac_count_list[r] - ac_count_list[l - 1])\n"
    }
  ],
  "created": 1650457595,
  "object": "edit"
}
2022-04-20 12:26:37.304067 fix syntax errors 2 ['\n\nn, q = map(int, input().split())\ns = input()\nl_r_list = []\nfor i in range(q):\n    l_r = list(map(int, input().split()))\n    l_r_list.append(l_r)\nac_counts = 0\nac_count_list = []\nfor i in range(n - 1):\n    if s[i] == "A" and s[i + 1] == "C":\n        ac_counts += 1\n    ac_count_list.append(ac_counts)\nfor l_r in l_r_list:\n    l = l_r[0] - 1\n    r = l_r[1] - 2\n    if l == 0:\n        print(ac_count_list[r])\n    else:\n        print(ac_count_list[r] - ac_count_list[l - 1])\n', '\nn, q = map(int, input().split())\ns = input()\n\nl_r_list = []\nfor i in range(q):\n    l_r = list(map(int, input().split()))\n    l_r_list.append(l_r)\n\nac_counts = 0\nac_count_list = []\n\nfor i in range(n - 1):\n    if s[i] == "A" and s[i + 1] == "C":\n        ac_counts += 1\n    ac_count_list.append(ac_counts)\n\nfor l_r in l_r_list:\n    l = l_r[0] - 1\n    r = l_r[1] - 2\n    if l == 0:\n        print(ac_count_list[r])\n    else:\n        print(ac_count_list[r] - ac_count_list[l - 1])\n']
2022-04-20 12:26:37.304097 size on output set 2
2022-04-20 12:26:37.304109 num operations 1
2022-04-20 12:26:37.304115 size on input set 1
2022-04-20 12:26:37.304276 using api key soukgp
2022-04-20 12:26:40.674838 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#-----main-----\n#input parameter\nN, Q = map(int, input().split())\n#input S\nS = input()\n#input Li and Ri\nLi = []\nRi = []\nfor i in range(Q):\n    l, r = map(int, input().split())\n    Li.append(l)\n    Ri.append(r)\n#count AC in each substring\ncount = 0\nfor i in range(Q):\n    for j in range(Li[i], Ri[i]):\n        if S[j-1:j+1] == 'AC':\n            count += 1\n    print(count)\n    count = 0\n"
    },
    {
      "index": 1,
      "text": "\n\n#-----main-----\n\n#input parameter\nN, Q = map(int, input().split())\n\n#input S and convert to list\nS = list(S)\nS = input()\n\n#input Li and Ri\nLi = []\nRi = []\nfor i in range(Q):\n    l, r = map(int, input().split())\n    Li.append(l)\n    Ri.append(r)\n\n#count AC in each substring\ncount = 0\nfor i in range(Q):\n    for j in range(Li[i]-1, Ri[i]):\n        if S[j:j+2] == ['A', 'C']:\n            count += 1\n    print(count)\n    count = 0\n"
    }
  ],
  "created": 1650457597,
  "object": "edit"
}
2022-04-20 12:26:40.675071 fix syntax errors 2 ["\n#-----main-----\n#input parameter\nN, Q = map(int, input().split())\n#input S\nS = input()\n#input Li and Ri\nLi = []\nRi = []\nfor i in range(Q):\n    l, r = map(int, input().split())\n    Li.append(l)\n    Ri.append(r)\n#count AC in each substring\ncount = 0\nfor i in range(Q):\n    for j in range(Li[i], Ri[i]):\n        if S[j-1:j+1] == 'AC':\n            count += 1\n    print(count)\n    count = 0\n", "\n\n#-----main-----\n\n#input parameter\nN, Q = map(int, input().split())\n\n#input S and convert to list\nS = list(S)\nS = input()\n\n#input Li and Ri\nLi = []\nRi = []\nfor i in range(Q):\n    l, r = map(int, input().split())\n    Li.append(l)\n    Ri.append(r)\n\n#count AC in each substring\ncount = 0\nfor i in range(Q):\n    for j in range(Li[i]-1, Ri[i]):\n        if S[j:j+2] == ['A', 'C']:\n            count += 1\n    print(count)\n    count = 0\n"]
2022-04-20 12:26:40.675194 size on output set 2
