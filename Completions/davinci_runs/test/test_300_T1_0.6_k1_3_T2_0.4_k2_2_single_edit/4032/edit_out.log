2022-04-20 11:31:38.314231 num operations 1
2022-04-20 11:31:38.314270 size on input set 1
2022-04-20 11:31:38.314463 using api key jaanu
2022-04-20 11:31:39.829749 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, k = map(int, input().split())\nproblems = list(map(int, input().split()))\n\ncount = 0\nwhile True:\n    if problems[0] > k and problems[-1] > k:\n        break\n    if problems[0] <= k:\n        count += 1\n        problems.pop(0)\n    if problems[-1] <= k:\n        count += 1\n        problems.pop()\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\nn, k = map(int, input().split())\nproblems = list(map(int, input().split()))\n\ncount = 0\nwhile True:\n    if problems[0] > k and problems[-1] > k:\n        break\n    if problems[0] <= k:\n        count += 1\n        problems.pop(0)\n    if problems[-1] <= k:\n        count += 1\n        problems.pop()\nprint(count)\n"
    }
  ],
  "created": 1650454298,
  "object": "edit"
}
2022-04-20 11:31:39.829998 fix syntax errors 2 ['\nn, k = map(int, input().split())\nproblems = list(map(int, input().split()))\n\ncount = 0\nwhile True:\n    if problems[0] > k and problems[-1] > k:\n        break\n    if problems[0] <= k:\n        count += 1\n        problems.pop(0)\n    if problems[-1] <= k:\n        count += 1\n        problems.pop()\nprint(count)\n', '\nn, k = map(int, input().split())\nproblems = list(map(int, input().split()))\n\ncount = 0\nwhile True:\n    if problems[0] > k and problems[-1] > k:\n        break\n    if problems[0] <= k:\n        count += 1\n        problems.pop(0)\n    if problems[-1] <= k:\n        count += 1\n        problems.pop()\nprint(count)\n']
2022-04-20 11:31:39.830028 size on output set 1
2022-04-20 11:31:39.830040 num operations 1
2022-04-20 11:31:39.830045 size on input set 1
2022-04-20 11:31:39.830202 using api key gabby
2022-04-20 11:31:41.963892 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef solve(problem, k):\n    i = 0\n    problems = list(reversed(problems))\n    for i in range(len(problems)):\n        if problems[i] > k:\n            break\n    return i\n"
    },
    {
      "index": 1,
      "text": "\n\ndef solve(problems, k):\n    i = 0\n    problems = list(reversed(problems))  # reverse problems list\n    for i in range(len(problems)):\n        if problems[i] > k:\n            break\n    return i\n"
    }
  ],
  "created": 1650454299,
  "object": "edit"
}
2022-04-20 11:31:41.964111 fix syntax errors 2 ['\n\ndef solve(problem, k):\n    i = 0\n    problems = list(reversed(problems))\n    for i in range(len(problems)):\n        if problems[i] > k:\n            break\n    return i\n', '\n\ndef solve(problems, k):\n    i = 0\n    problems = list(reversed(problems))  # reverse problems list\n    for i in range(len(problems)):\n        if problems[i] > k:\n            break\n    return i\n']
2022-04-20 11:31:41.964138 size on output set 2
2022-04-20 11:31:41.964149 num operations 1
2022-04-20 11:31:41.964155 size on input set 1
2022-04-20 11:31:41.964358 using api key gabby
2022-04-20 11:31:48.291353 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from math import sqrt\nfrom math import ceil\n\n\nn = int(input())\n\nif n == 0:\n    print(0)\nelse:\n    print(ceil(sqrt(n)))\n"
    },
    {
      "index": 1,
      "text": "\nn, k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\nsolved = 0\ni, j = 0, n-1\nwhile i <= j:\n    solved += 1\n    if a[i] <= k and a[j] <= k:\n        if a[i] < a[j]:\n            i += 1\n        elif a[i] > a[j]:\n            j -= 1\n        else:\n            i += 1\n    elif a[i] > k and a[j] <= k:\n        j -= 1\n    elif a[i] <= k and a[j] > k:\n        i += 1\n    else:\n        break\nprint(solved)\n"
    }
  ],
  "created": 1650454302,
  "object": "edit"
}
2022-04-20 11:31:48.291562 fix syntax errors 2 ['from math import sqrt\nfrom math import ceil\n\n\nn = int(input())\n\nif n == 0:\n    print(0)\nelse:\n    print(ceil(sqrt(n)))\n', '\nn, k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\nsolved = 0\ni, j = 0, n-1\nwhile i <= j:\n    solved += 1\n    if a[i] <= k and a[j] <= k:\n        if a[i] < a[j]:\n            i += 1\n        elif a[i] > a[j]:\n            j -= 1\n        else:\n            i += 1\n    elif a[i] > k and a[j] <= k:\n        j -= 1\n    elif a[i] <= k and a[j] > k:\n        i += 1\n    else:\n        break\nprint(solved)\n']
2022-04-20 11:31:48.291590 size on output set 2
