2022-04-20 11:50:45.263476 num operations 1
2022-04-20 11:50:45.263496 size on input set 1
2022-04-20 11:50:45.263658 using api key sunu
2022-04-20 11:50:49.199135 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "var fs = require('fs');\n\nvar file = fs.readFileSync(process.argv[2]);\nvar str = file.toString();\nvar arr = str.split('\\n');\nconsole.log(arr.length - 1);\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/python\n\nimport sys\n\ndef main():\n    if len(sys.argv) < 2:\n        print(\"Usage: ./file.py <file>\")\n        sys.exit(1)\n\n    filename = sys.argv[1]\n\n    try:\n        f = open(filename, 'r')\n        print(\"Opened file \" + filename)\n        f.close()\n    except IOError:\n        print(\"Can't open file \" + filename)\n        sys.exit(1)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650455445,
  "object": "edit"
}
2022-04-20 11:50:49.199410 fix syntax errors 2 ["var fs = require('fs');\n\nvar file = fs.readFileSync(process.argv[2]);\nvar str = file.toString();\nvar arr = str.split('\\n');\nconsole.log(arr.length - 1);\n", '#!/usr/bin/python\n\nimport sys\n\ndef main():\n    if len(sys.argv) < 2:\n        print("Usage: ./file.py <file>")\n        sys.exit(1)\n\n    filename = sys.argv[1]\n\n    try:\n        f = open(filename, \'r\')\n        print("Opened file " + filename)\n        f.close()\n    except IOError:\n        print("Can\'t open file " + filename)\n        sys.exit(1)\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-20 11:50:49.199440 size on output set 2
2022-04-20 11:50:49.199452 num operations 1
2022-04-20 11:50:49.199457 size on input set 1
2022-04-20 11:50:49.199619 using api key jaanu
2022-04-20 11:50:57.649511 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ninput_n = int(input())\ninput_s = input()\n\nmax_count = 0\nmax_gram = \"\"\nfor i in range(input_n-1):\n    gram = input_s[i:i+2]\n    if input_s.count(gram) > max_count:\n        max_count = input_s.count(gram)\n        max_gram = gram\nprint(max_gram)\n"
    },
    {
      "index": 1,
      "text": "\n\ninput_n = int(input())  # \u5165\u529b\u3055\u308c\u308b\u6587\u5b57\u5217\u306e\u9577\u3055\ninput_s = input()  # \u6587\u5b57\u5217\n\nmax_count = 0  # \u6700\u5927\u51fa\u73fe\u56de\u6570\nmax_gram = \"\"  # \u6700\u5927\u51fa\u73fe\u56de\u6570\u306e\u6587\u5b57\u5217\nfor i in range(input_n-1):  # i\u306f0\u304b\u3089input_n-2\u307e\u3067\n    gram = input_s[i:i+2]  # 2\u6587\u5b57\u305a\u3064\u5207\u308a\u51fa\u3059\n    if input_s.count(gram) > max_count:  # gram\u304c\u51fa\u73fe\u3057\u305f\u56de\u6570\u304c\u6700\u5927\u51fa\u73fe\u56de\u6570\u3088\u308a\u5927\u304d\u3044\u5834\u5408\n        max_count = input_s.count(gram)  # \u6700\u5927\u51fa\u73fe\u56de\u6570\u3092\u66f4\u65b0\n        max_gram = gram  # \u6700\u5927\u51fa\u73fe\u56de\u6570\u306e\u6587\u5b57\u5217\u3092\u66f4\u65b0\nprint(max_gram)  # \u6700\u5927\u51fa\u73fe\u56de\u6570\u306e\u6587\u5b57\u5217\u3092\u51fa\u529b\n"
    }
  ],
  "created": 1650455449,
  "object": "edit"
}
2022-04-20 11:50:57.649734 fix syntax errors 2 ['\ninput_n = int(input())\ninput_s = input()\n\nmax_count = 0\nmax_gram = ""\nfor i in range(input_n-1):\n    gram = input_s[i:i+2]\n    if input_s.count(gram) > max_count:\n        max_count = input_s.count(gram)\n        max_gram = gram\nprint(max_gram)\n', '\n\ninput_n = int(input())  # 入力される文字列の長さ\ninput_s = input()  # 文字列\n\nmax_count = 0  # 最大出現回数\nmax_gram = ""  # 最大出現回数の文字列\nfor i in range(input_n-1):  # iは0からinput_n-2まで\n    gram = input_s[i:i+2]  # 2文字ずつ切り出す\n    if input_s.count(gram) > max_count:  # gramが出現した回数が最大出現回数より大きい場合\n        max_count = input_s.count(gram)  # 最大出現回数を更新\n        max_gram = gram  # 最大出現回数の文字列を更新\nprint(max_gram)  # 最大出現回数の文字列を出力\n']
2022-04-20 11:50:57.649770 size on output set 2
2022-04-20 11:50:57.649782 num operations 1
2022-04-20 11:50:57.649787 size on input set 1
2022-04-20 11:50:57.649942 using api key soukgp
2022-04-20 11:50:59.731908 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom collections import Counter\n\nn = int(input())\ns = input()\n\nc = Counter(s[i:i+2] for i in range(n-1))\n\nprint(max(c, key=c.get))\n"
    },
    {
      "index": 1,
      "text": "\nfrom collections import Counter\n\nn = int(input())\ns = input()\n\nc = Counter(s[i:i + 2] for i in range(n - 1))\n\nprint(max(c, key=c.get))\n"
    }
  ],
  "created": 1650455457,
  "object": "edit"
}
2022-04-20 11:50:59.732112 fix syntax errors 2 ['\nfrom collections import Counter\n\nn = int(input())\ns = input()\n\nc = Counter(s[i:i+2] for i in range(n-1))\n\nprint(max(c, key=c.get))\n', '\nfrom collections import Counter\n\nn = int(input())\ns = input()\n\nc = Counter(s[i:i + 2] for i in range(n - 1))\n\nprint(max(c, key=c.get))\n']
2022-04-20 11:50:59.732134 size on output set 2
