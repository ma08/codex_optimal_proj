2022-04-20 12:07:20.717789 num operations 1
2022-04-20 12:07:20.717809 size on input set 1
2022-04-20 12:07:20.717976 using api key soukgp
2022-04-20 12:07:22.228925 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\np = list(map(int, input().split()))\n\np_sorted = sorted(p)\n\nfor i in range(N):\n    if p[i] == p_sorted[i]:\n        continue\n    else:\n        p[i], p[p.index(p_sorted[i])] = p[p.index(p_sorted[i])], p[i]\n        if p == p_sorted:\n            print(\"YES\")\n            exit()\n\nprint(\"NO\")\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\np = list(map(int, input().split()))\n\np_sorted = sorted(p)\n\nfor i in range(N):\n    if p[i] == p_sorted[i]:\n        continue\n    else:\n        p[i], p[p.index(p_sorted[i])] = p[p.index(p_sorted[i])], p[i]\n        if p == p_sorted:\n            print(\"YES\")\n            exit()\n\nprint(\"NO\")\n"
    }
  ],
  "created": 1650456440,
  "object": "edit"
}
2022-04-20 12:07:22.229176 fix syntax errors 2 ['\nN = int(input())\np = list(map(int, input().split()))\n\np_sorted = sorted(p)\n\nfor i in range(N):\n    if p[i] == p_sorted[i]:\n        continue\n    else:\n        p[i], p[p.index(p_sorted[i])] = p[p.index(p_sorted[i])], p[i]\n        if p == p_sorted:\n            print("YES")\n            exit()\n\nprint("NO")\n', '\nN = int(input())\np = list(map(int, input().split()))\n\np_sorted = sorted(p)\n\nfor i in range(N):\n    if p[i] == p_sorted[i]:\n        continue\n    else:\n        p[i], p[p.index(p_sorted[i])] = p[p.index(p_sorted[i])], p[i]\n        if p == p_sorted:\n            print("YES")\n            exit()\n\nprint("NO")\n']
2022-04-20 12:07:22.229205 size on output set 1
2022-04-20 12:07:22.229217 num operations 1
2022-04-20 12:07:22.229224 size on input set 1
2022-04-20 12:07:22.229387 using api key soukgp
2022-04-20 12:07:25.253163 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\nP = list(map(int, input().split()))\n\nfor i in range(N):\n    if i + 1 == P[i]:\n        continue\n    else:\n        if i + 1 == P[P[i] - 1]:\n            print(\"YES\")\n            exit()\n\nprint(\"NO\")\n"
    },
    {
      "index": 1,
      "text": "N = int(input())\np = list(map(int, input().split()))\n\nfor i in range(N):\n    if i + 1 == p[i]:\n        continue\n    else:\n        if i + 1 == p[p[i] - 1]:\n            print(\"YES\")\n            exit()\n\nprint(\"NO\")\n"
    }
  ],
  "created": 1650456442,
  "object": "edit"
}
2022-04-20 12:07:25.253388 fix syntax errors 2 ['\nN = int(input())\nP = list(map(int, input().split()))\n\nfor i in range(N):\n    if i + 1 == P[i]:\n        continue\n    else:\n        if i + 1 == P[P[i] - 1]:\n            print("YES")\n            exit()\n\nprint("NO")\n', 'N = int(input())\np = list(map(int, input().split()))\n\nfor i in range(N):\n    if i + 1 == p[i]:\n        continue\n    else:\n        if i + 1 == p[p[i] - 1]:\n            print("YES")\n            exit()\n\nprint("NO")\n']
2022-04-20 12:07:25.253421 size on output set 2
2022-04-20 12:07:25.253433 num operations 1
2022-04-20 12:07:25.253439 size on input set 1
2022-04-20 12:07:25.253608 using api key soukgp
2022-04-20 12:07:36.582896 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\nimport itertools\n\ndef is_sorted(p):\n    for i in range(1, len(p)):\n        if p[i-1] > p[i]:\n            return False\n    return True\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    p = list(map(int, sys.stdin.readline().strip().split()))\n    for i, j in itertools.combinations(range(N), 2):\n        if p[i] > p[j]:\n            p[i], p[j] = p[j], p[i]\n            if is_sorted(p):\n                print(\"YES\")\n                sys.exit()\n            p[i], p[j] = p[j], p[i]\n    print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n#\n# Team:\n#   J Phani Mahesh <phanimahesh@gmail.com>\n#   Barneedhar (jokerdino) <barneedhar@ubuntu.com>\n#   Amith KK <amithkumaran@gmail.com>\n#   Georgi Karavasilev <motorslav@gmail.com>\n#   Sam Tran <samvtran@gmail.com>\n#   Sam Hewitt <hewittsamuel@gmail.com>\n#   Angel Araya <al.arayaq@gmail.com>\n#\n# Description:\n#   A One-stop configuration tool for Unity.\n#\n# Legal Stuff:\n#\n# This file is a part of Unity Tweak Tool\n#\n# Unity Tweak Tool is free software; you can redistribute it and/or modify it under\n# the terms of the GNU General Public License as published by the Free Software\n# Foundation; version 3.\n#\n# Unity Tweak Tool is distributed in the hope that it will be useful, but WITHOUT\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n# details.\n#\n# You should have received a copy of the GNU General Public License along with\n# this program; if not, see <https://www.gnu.org/licenses/gpl-3.0.txt>\n\n"
    }
  ],
  "created": 1650456445,
  "object": "edit"
}
2022-04-20 12:07:36.583217 fix syntax errors 2 ['import sys\nimport itertools\n\ndef is_sorted(p):\n    for i in range(1, len(p)):\n        if p[i-1] > p[i]:\n            return False\n    return True\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    p = list(map(int, sys.stdin.readline().strip().split()))\n    for i, j in itertools.combinations(range(N), 2):\n        if p[i] > p[j]:\n            p[i], p[j] = p[j], p[i]\n            if is_sorted(p):\n                print("YES")\n                sys.exit()\n            p[i], p[j] = p[j], p[i]\n    print("NO")\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n#\n# Team:\n#   J Phani Mahesh <phanimahesh@gmail.com>\n#   Barneedhar (jokerdino) <barneedhar@ubuntu.com>\n#   Amith KK <amithkumaran@gmail.com>\n#   Georgi Karavasilev <motorslav@gmail.com>\n#   Sam Tran <samvtran@gmail.com>\n#   Sam Hewitt <hewittsamuel@gmail.com>\n#   Angel Araya <al.arayaq@gmail.com>\n#\n# Description:\n#   A One-stop configuration tool for Unity.\n#\n# Legal Stuff:\n#\n# This file is a part of Unity Tweak Tool\n#\n# Unity Tweak Tool is free software; you can redistribute it and/or modify it under\n# the terms of the GNU General Public License as published by the Free Software\n# Foundation; version 3.\n#\n# Unity Tweak Tool is distributed in the hope that it will be useful, but WITHOUT\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n# details.\n#\n# You should have received a copy of the GNU General Public License along with\n# this program; if not, see <https://www.gnu.org/licenses/gpl-3.0.txt>\n\n']
2022-04-20 12:07:36.583259 size on output set 2
