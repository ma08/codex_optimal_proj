2022-04-20 11:27:37.060424 num operations 1
2022-04-20 11:27:37.060462 size on input set 1
2022-04-20 11:27:37.060655 using api key sourya
2022-04-20 11:27:42.806477 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "var fs = require(\"fs\");\nvar path = require(\"path\");\n\n// var file = process.argv[2];\n// var ext = \".\" + process.argv[3];\n\n// fs.readdir(file, function(err, list){\n// \tfor(var i = 0; i < list.length; i++){\n// \t\tif(path.extname(list[i]) === ext){\n// \t\t\tconsole.log(list[i]);\n// \t\t}\n// \t}\n// });\n\n\nmodule.exports = function(file, ext, callback){\n\tfs.readdir(file, function(err, list){\n\t\tif(err){\n\t\t\treturn callback(err);\n\t\t}\n\t\tvar data = [];\n\t\tfor(var i = 0; i < list.length; i++){\n\t\t\tif(path.extname(list[i]) === ext){\n\t\t\t\tdata.push(list[i]);\n\t\t\t}\n\t\t}\n\t\tcallback(null, data);\n\t});\n}\n"
    },
    {
      "index": 1,
      "text": "var fs = require('fs');\n\nvar file = fs.readFileSync(process.argv[2]);\nvar str = file.toString();\nvar arr = str.split(\"\\n\");\nconsole.log(arr.length-1);\n"
    }
  ],
  "created": 1650454057,
  "object": "edit"
}
2022-04-20 11:27:42.806734 fix syntax errors 2 ['var fs = require("fs");\nvar path = require("path");\n\n// var file = process.argv[2];\n// var ext = "." + process.argv[3];\n\n// fs.readdir(file, function(err, list){\n// \tfor(var i = 0; i < list.length; i++){\n// \t\tif(path.extname(list[i]) === ext){\n// \t\t\tconsole.log(list[i]);\n// \t\t}\n// \t}\n// });\n\n\nmodule.exports = function(file, ext, callback){\n\tfs.readdir(file, function(err, list){\n\t\tif(err){\n\t\t\treturn callback(err);\n\t\t}\n\t\tvar data = [];\n\t\tfor(var i = 0; i < list.length; i++){\n\t\t\tif(path.extname(list[i]) === ext){\n\t\t\t\tdata.push(list[i]);\n\t\t\t}\n\t\t}\n\t\tcallback(null, data);\n\t});\n}\n', 'var fs = require(\'fs\');\n\nvar file = fs.readFileSync(process.argv[2]);\nvar str = file.toString();\nvar arr = str.split("\\n");\nconsole.log(arr.length-1);\n']
2022-04-20 11:27:42.806766 size on output set 2
2022-04-20 11:27:42.806777 num operations 1
2022-04-20 11:27:42.806783 size on input set 1
2022-04-20 11:27:42.806934 using api key soukgp
2022-04-20 11:27:45.851088 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\n    quit()\nif m % 2 == 1 and m % 3 == 1:\n    print(-1)\n    quit()\n\nsteps = 0\n\nwhile n != 1:\n    if n % 3 == 0:\n        n = int(n / 3)\n    elif n % 2 == 0:\n        n = int(n / 2)\n    else:\n        print(-1)\n        quit()\n    steps += 1\n\nwhile m != 1:\n    if m % 3 == 0:\n        m = int(m / 3)\n    elif m % 2 == 0:\n        m = int(m / 2)\n    else:\n        print(-1)\n        quit()\n    steps += 1\n\nprint(steps)\n"
    },
    {
      "index": 1,
      "text": "\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\n    quit()\nif m % 2 == 1 and m % 3 == 1:\n    print(-1)\n    quit()\nsteps = 0\n\nwhile n != 1:\n    if n % 3 == 0:\n        n = int(n / 3)\n    elif n % 2 == 0:\n        n = int(n / 2)\n    else:\n        print(-1)\n        quit()\n    steps += 1\n\nwhile m != 1:\n    if m % 3 == 0:\n        m = int(m / 3)\n    elif m % 2 == 0:\n        m = int(m / 2)\n    else:\n        print(-1)\n        quit()\n    steps += 1\n\nprint(steps)\n"
    }
  ],
  "created": 1650454062,
  "object": "edit"
}
2022-04-20 11:27:45.851305 fix syntax errors 2 ['\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\n    quit()\nif m % 2 == 1 and m % 3 == 1:\n    print(-1)\n    quit()\n\nsteps = 0\n\nwhile n != 1:\n    if n % 3 == 0:\n        n = int(n / 3)\n    elif n % 2 == 0:\n        n = int(n / 2)\n    else:\n        print(-1)\n        quit()\n    steps += 1\n\nwhile m != 1:\n    if m % 3 == 0:\n        m = int(m / 3)\n    elif m % 2 == 0:\n        m = int(m / 2)\n    else:\n        print(-1)\n        quit()\n    steps += 1\n\nprint(steps)\n', '\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\n    quit()\nif m % 2 == 1 and m % 3 == 1:\n    print(-1)\n    quit()\nsteps = 0\n\nwhile n != 1:\n    if n % 3 == 0:\n        n = int(n / 3)\n    elif n % 2 == 0:\n        n = int(n / 2)\n    else:\n        print(-1)\n        quit()\n    steps += 1\n\nwhile m != 1:\n    if m % 3 == 0:\n        m = int(m / 3)\n    elif m % 2 == 0:\n        m = int(m / 2)\n    else:\n        print(-1)\n        quit()\n    steps += 1\n\nprint(steps)\n']
2022-04-20 11:27:45.851336 size on output set 2
2022-04-20 11:27:45.851348 num operations 1
2022-04-20 11:27:45.851353 size on input set 1
2022-04-20 11:27:45.851507 using api key sunu
2022-04-20 11:27:47.884697 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\nimport sys\n\ninput_list = sys.stdin.read().split()\nn = int(input_list[0])\nm = int(input_list[1])\n\nif n == m:\n    print(0)\nelse:\n    if m % n != 0:\n        print(-1)\n    else:\n        m = m / n\n        count = 0\n        while m > 1:\n            if m % 2 != 0 and m % 3 != 0:\n                print(-1)\n                break\n            elif m % 2 == 0:\n                m = m / 2\n                count += 1\n            elif m % 3 == 0:\n                m = m / 3\n                count += 1\n        if m == 1:\n            print(count)\n"
    },
    {
      "index": 1,
      "text": "\nimport math\nimport sys\n\ninput_list = sys.stdin.read().split()\n\nn = int(input_list[0])\nm = int(input_list[1])\n\nif n == m:\n    print(0)\nelse:\n    if m % n != 0:\n        print(-1)\n    else:\n        m = m / n\n        count = 0\n        while m > 1:\n            if m % 2 != 0 and m % 3 != 0:\n                print(-1)\n                break\n            elif m % 2 == 0:\n                m = m / 2\n                count += 1\n            elif m % 3 == 0:\n                m = m / 3\n                count += 1\n        if m == 1:\n            print(count)\n"
    }
  ],
  "created": 1650454065,
  "object": "edit"
}
2022-04-20 11:27:47.884973 fix syntax errors 2 ['\nimport math\nimport sys\n\ninput_list = sys.stdin.read().split()\nn = int(input_list[0])\nm = int(input_list[1])\n\nif n == m:\n    print(0)\nelse:\n    if m % n != 0:\n        print(-1)\n    else:\n        m = m / n\n        count = 0\n        while m > 1:\n            if m % 2 != 0 and m % 3 != 0:\n                print(-1)\n                break\n            elif m % 2 == 0:\n                m = m / 2\n                count += 1\n            elif m % 3 == 0:\n                m = m / 3\n                count += 1\n        if m == 1:\n            print(count)\n', '\nimport math\nimport sys\n\ninput_list = sys.stdin.read().split()\n\nn = int(input_list[0])\nm = int(input_list[1])\n\nif n == m:\n    print(0)\nelse:\n    if m % n != 0:\n        print(-1)\n    else:\n        m = m / n\n        count = 0\n        while m > 1:\n            if m % 2 != 0 and m % 3 != 0:\n                print(-1)\n                break\n            elif m % 2 == 0:\n                m = m / 2\n                count += 1\n            elif m % 3 == 0:\n                m = m / 3\n                count += 1\n        if m == 1:\n            print(count)\n']
2022-04-20 11:27:47.885007 size on output set 2
