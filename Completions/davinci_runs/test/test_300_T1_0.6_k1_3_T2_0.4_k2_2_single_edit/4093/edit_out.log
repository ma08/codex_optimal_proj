2022-04-20 11:44:10.346634 num operations 1
2022-04-20 11:44:10.346662 size on input set 1
2022-04-20 11:44:10.346840 using api key kouti
2022-04-20 11:44:14.464841 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# SOLUTION\n# Use pen and paper to visualize the problem\n# We want to maximize the sum of absolute differences between adjacent elements\n# The sum of the elements of the array is m\n# Let's say the max is x. Then we have m - x = x\n# The max can be no more than half of m\n# We can build the array by filling in the max,\n# then filling in the sum of m - x,\n# then filling in the max,\n# then filling in the sum of m - x,\n# and so on,\n# until we reach the last element.\n# We can do this because the sum of the array is m which is an even number\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    if n == 1:\n        print(0)\n    else:\n        print(m - 1)\n"
    },
    {
      "index": 1,
      "text": "\n\n# SOLUTION\n# Use pen and paper to visualize the problem\n# We want to maximize the sum of absolute differences between adjacent elements\n# The sum of the elements of the array is m\n# Let's say the max is x. Then we have m - x = x.\n# The max can be no more than half the sum of m\n# We can build the array by filling in the max,\n# then filling in the sum of m - x,\n# then filling in the max,\n# then filling in the sum of m - x,\n# and so on,\n# until we reach the last element.\n# We can do this because the sum of the array is m which is an even number\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    if n == 1:\n        print(0)\n    else:\n        print(m - 1)\n"
    }
  ],
  "created": 1650455050,
  "object": "edit"
}
2022-04-20 11:44:14.465140 fix syntax errors 2 ["\n\n# SOLUTION\n# Use pen and paper to visualize the problem\n# We want to maximize the sum of absolute differences between adjacent elements\n# The sum of the elements of the array is m\n# Let's say the max is x. Then we have m - x = x\n# The max can be no more than half of m\n# We can build the array by filling in the max,\n# then filling in the sum of m - x,\n# then filling in the max,\n# then filling in the sum of m - x,\n# and so on,\n# until we reach the last element.\n# We can do this because the sum of the array is m which is an even number\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    if n == 1:\n        print(0)\n    else:\n        print(m - 1)\n", "\n\n# SOLUTION\n# Use pen and paper to visualize the problem\n# We want to maximize the sum of absolute differences between adjacent elements\n# The sum of the elements of the array is m\n# Let's say the max is x. Then we have m - x = x.\n# The max can be no more than half the sum of m\n# We can build the array by filling in the max,\n# then filling in the sum of m - x,\n# then filling in the max,\n# then filling in the sum of m - x,\n# and so on,\n# until we reach the last element.\n# We can do this because the sum of the array is m which is an even number\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    if n == 1:\n        print(0)\n    else:\n        print(m - 1)\n"]
2022-04-20 11:44:14.465180 size on output set 2
2022-04-20 11:44:14.465196 num operations 1
2022-04-20 11:44:14.465203 size on input set 1
2022-04-20 11:44:14.465396 using api key kouti
2022-04-20 11:44:24.639847 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# def add_num(arr, num):\n#     if not arr:\n#         arr.append(num)\n#         return arr\n#     if num == 0:\n#         arr.append(num)\n#         return arr\n#     if num < arr[-1]:\n#         arr.append(num)\n#         return arr\n#     for i in range(len(arr)):\n#         if arr[i] == 0:\n#             arr[i] = num\n#             return arr\n#         if arr[i] > num:\n#             arr[i] = num\n#             return arr\n#     arr.append(num)\n#     return arr\n\n# def main():\n#     t = int(input())\n#     for _ in range(t):\n#         n, m = list(map(int, input().split()))\n#         arr = []\n#         while m > 0:\n#             if m > n-1:\n#                 arr = add_num(arr, n-1)\n#                 m -= n-1\n#             else:\n#                 arr = add_num(arr, m)\n#                 break\n#         print(sum([abs(arr[i+1] - arr[i]) for i in range(len(arr)-1)]))\n\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = list(map(int, input().split()))\n        arr = [1] * (n - 1)\n        if m > n-1:\n            arr.append(m - (n - 1))\n        else:\n            arr[-1] = m\n        print(sum([abs(arr[i+1] - arr[i]) for i in range(len(arr)-1)]))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().rstrip().split()))\n    arr.reverse()\n    print(arr)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650455054,
  "object": "edit"
}
2022-04-20 11:44:24.640066 fix syntax errors 2 ['\n\n# def add_num(arr, num):\n#     if not arr:\n#         arr.append(num)\n#         return arr\n#     if num == 0:\n#         arr.append(num)\n#         return arr\n#     if num < arr[-1]:\n#         arr.append(num)\n#         return arr\n#     for i in range(len(arr)):\n#         if arr[i] == 0:\n#             arr[i] = num\n#             return arr\n#         if arr[i] > num:\n#             arr[i] = num\n#             return arr\n#     arr.append(num)\n#     return arr\n\n# def main():\n#     t = int(input())\n#     for _ in range(t):\n#         n, m = list(map(int, input().split()))\n#         arr = []\n#         while m > 0:\n#             if m > n-1:\n#                 arr = add_num(arr, n-1)\n#                 m -= n-1\n#             else:\n#                 arr = add_num(arr, m)\n#                 break\n#         print(sum([abs(arr[i+1] - arr[i]) for i in range(len(arr)-1)]))\n\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = list(map(int, input().split()))\n        arr = [1] * (n - 1)\n        if m > n-1:\n            arr.append(m - (n - 1))\n        else:\n            arr[-1] = m\n        print(sum([abs(arr[i+1] - arr[i]) for i in range(len(arr)-1)]))\n\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().rstrip().split()))\n    arr.reverse()\n    print(arr)\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 11:44:24.640103 size on output set 2
2022-04-20 11:44:24.640115 num operations 1
2022-04-20 11:44:24.640121 size on input set 1
2022-04-20 11:44:24.640280 using api key sunu
2022-04-20 11:44:26.052021 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nt = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    if n == 1:\n        print(0)\n    else:\n        print(m * 2 - n)\n"
    },
    {
      "index": 1,
      "text": "\nt = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    if n == 1:\n        print(0)\n    else:\n        print(m * 2 - n)\n"
    }
  ],
  "created": 1650455064,
  "object": "edit"
}
2022-04-20 11:44:26.052240 fix syntax errors 2 ['\nt = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    if n == 1:\n        print(0)\n    else:\n        print(m * 2 - n)\n', '\nt = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    if n == 1:\n        print(0)\n    else:\n        print(m * 2 - n)\n']
2022-04-20 11:44:26.052264 size on output set 1
