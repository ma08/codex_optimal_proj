["\nN, M = map(int, input().split())\nfor i in range(10 ** N):\n    if all(str(i).zfill(N)[s - 1] == str(c) for s, c in (map(int, input().split()) for _ in range(M))):\n        print(i)\n        exit()\nprint(-1)\n", "\n\ndef main():\n    n, m = map(int, input().split())\n    a = [0] * n\n    for i in range(m):\n        s, c = map(int, input().split())\n        a[s-1] = c\n    for i in range(n):\n        if i == 0 and a[i] == 0:\n            print(-1)\n            return\n        elif i == 0 and a[i] != 0:\n            print(a[i], end=\"\") \n        else:\n            print(a[i], end=\"\")\n    print(\"\")\n\nif __name__ == '__main__':\n    main()\n", "\n\n#The number of digits\nN = int(input())\n#The number of constraints\nM = int(input())\n#List of constraints\nconstraints = []\nfor i in range(M):\n    constraints.append([int(x) for x in input().split()])\n\n#Determine the least possible number\nnumber = [0] * N\nfor i in range(M):\n    number[constraints[i][0] - 1] = constraints[i][1]\n\n#If the number is less than all constraints\nif number < constraints[0]:\n    print(number)\nelse:\n    print(-1)\n", "\n\n#The number of digits\nN = int(input())\n#The number of constraints\nM = int(input())\n#List of constraints\nconstraints = []\nfor i in range(M):\n    constraints.append([int(x) for x in input().split()])\n\n#Determine the least possible number\nnumber = [0] * N\nfor i in range(M):\n    number[constraints[i][0] - 1] = constraints[i][1]\n\n#If the number is less than all constraints\nif number < constraints[i][1]:\n    print(number)\nelse:\n    print(-1)\n", "\n\ndef main():\n    n, m = map(int, input().split()) # n:N,m:M\n    a = [0] * n # a:\u914d\u5217\n    for i in range(m): # m\u56de\u7e70\u308a\u8fd4\u3059\n        s, c = map(int, input().split()) # s:s\u756a\u76ee,c:c\n        a[s-1] = c # a[s-1]\u306bc\u3092\u4ee3\u5165\n    for i in range(n): # n\u56de\u7e70\u308a\u8fd4\u3059\n        if i == 0 and a[i] == 0: # i\u304c0\u304b\u3064a[i]\u304c0\u306e\u3068\u304d\n            print(-1) # -1\u3092\u51fa\u529b\n            return # \u7d42\u4e86\n        elif i == 0 and a[i] != 0: # i\u304c0\u304b\u3064a[i]\u304c0\u3067\u306a\u3044\u3068\u304d\n            print(a[i], end=\"\") # a[i]\u3092\u51fa\u529b\n        else: # \u305d\u308c\u4ee5\u5916\u306e\u3068\u304d\n            print(a[i], end=\"\") # a[i]\u3092\u51fa\u529b\n    print(\"\") # \u6539\u884c\n\nif __name__ == '__main__':\n    main()\n"]