["\n\ndef solver(n, a):\n    height = a[0] + 1\n    for i in range(1, n):\n        if a[i] > height:\n            return \"NO\"\n        height = max(height, a[i] + 1)\n    return \"YES\"\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solver(n, a))\n", "\n\ndef main():\n    wall_len = int(input())  # length of the wall\n    wall_cond = list(map(int, input().split()))  # condition of the wall\n    max_h = max(wall_cond)  # max height of the wall\n    min_h = min(wall_cond)  # min height of the wall\n    if max_h - min_h > 1:  # if max_h - min_h > 1, NO\n        print('NO')\n    else:  # else, YES\n        print('YES')\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python\n\nimport os\nimport sys\n\ndef main():\n    if len(sys.argv) != 2:\n        print \"Usage: %s <filename>\" % sys.argv[0]\n        sys.exit(1)\n\n    filename = sys.argv[1]\n    if not os.path.isfile(filename):\n        print \"Error: %s is not a file\" % filename\n        sys.exit(1)\n\n    print \"File: %s\" % filename\n    print \"Owner: %s\" % os.stat(filename).st_uid\n    print \"Permissions: %s\" % oct(os.stat(filename).st_mode)[4:]\n    print \"Size: %s\" % os.stat(filename).st_size\n    print \"Modified: %s\" % os.stat(filename).st_mtime\n\nif __name__ == '__main__':\n    main()\n", "\ndef solver(n, a):\n    height = a[0]\n    for i in range(1, n):\n        if a[i] > height:\n            return \"NO\"\n        height = max(height, a[i])\n    return \"YES\"\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solver(n, a))\n", "// in node.js, we can access the filesystem with the 'fs' module\nvar fs = require('fs');\n\n// fs.readFile('./file.txt', 'utf8', function(err, data) {\n//   if (err) {\n//     throw err;\n//   }\n//   console.log(data);\n// });\n\n// fs.writeFile('./file.txt', 'hello world', function(err) {\n//   if (err) {\n//     throw err;\n//   }\n//   console.log('file saved!');\n// });\n\nvar file = fs.readFileSync('./file.txt', 'utf8');\nconsole.log(file);\n\nfs.writeFileSync('./file.txt', 'hello world');\n"]