2022-04-18 02:11:53.405279 """
You are given an integer sequence $a_1, a_2, \dots, a_n$.

Find the number of pairs of indices $(l, r)$ ($1 \le l \le r \le n$) such that the value of median of $a_l, a_{l+1}, \dots, a_r$ is exactly the given number $m$.

The median of a sequence is the value of an element which is in the middle of the sequence after sorting it in non-decreasing order. If the length of the sequence is even, the left of two middle elements is used.

For example, if $a=[4, 2, 7, 5]$ then its median is $4$ since after sorting the sequence, it will look like $[2, 4, 5, 7]$ and the left of two middle elements is equal to $4$. The median of $[7, 1, 2, 9, 6]$ equals $6$ since after sorting, the value $6$ will be in the middle of the sequence.

Write a program to find the number of pairs of indices $(l, r)$ ($1 \le l \le r \le n$) such that the value of median of $a_l, a_{l+1}, \dots, a_r$ is exactly the given number $m$.


-----Input-----

The first line contains integers $n$ and $m$ ($1 \le n,m \le 2\cdot10^5$) â€” the length of the given sequence and the required value of the median.

The second line contains an integer sequence $a_1, a_2, \dots, a_n$ ($1 \le a_i \le 2\cdot10^5$).


-----Output-----

Print the required number.


-----Examples-----
Input
5 4
1 4 5 60 4

Output
8

Input
3 1
1 1 1

Output
6

Input
15 2
1 2 3 1 2 3 1 2 3 1 2 3 1 2 3

Output
97



-----Note-----

In the first example, the suitable pairs of indices are: $(1, 3)$, $(1, 4)$, $(1, 5)$, $(2, 2)$, $(2, 3)$, $(2, 5)$, $(4, 5)$ and $(5, 5)$.
"""
2022-04-18 02:11:53.405305 --------------------------
2022-04-18 02:12:28.335578 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    n,m = map(int, input().strip().split(' '))\n    a = list(map(int, input().strip().split(' ')))\n    b = sorted(a)\n    if n % 2 == 1:\n        med = b[n//2]\n    else:\n        med = (b[n//2 - 1] + b[n//2]) // 2\n    if med != m:\n        print(0)\n    else:\n        count = 0\n        for i in range(n):\n            if a[i] == med:\n                count += 1\n        print((count * (count - 1)) // 2)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n\ndef solve(n, m, a):\n    \"\"\"\n    Find the number of pairs of indices (l, r) (1 <= l <= r <= n) such that the value of median of a_l, a_{l+1}, ..., a_r is exactly the given number m.\n\n    :param n: length of the given sequence (1 <= n <= 200000)\n    :param m: required value of the median (1 <= m <= 200000)\n    :param a: sorted array of integers (1 <= a_i <= 200000)\n    :return: the required number\n    \"\"\"\n    # O(n)\n    left = 0\n    right = 0\n    cnt = 0\n\n    while right < n:\n        while right < n and a[right] == m:\n            right += 1\n            cnt += right - left\n\n        while left < right and a[left] == m:\n            left += 1\n            cnt -= right - left\n\n        if right >= n or a[right] < m:\n            right += 1\n        else:\n            left += 1\n\n    return cnt\n\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    assert len(a) == n\n\n    print(solve(n, m, sorted(a)))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n\ndef get_input():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    return n, m, a\n\n\ndef run():\n    n, m, a = get_input()\n    left = [0] * n\n    right = [0] * n\n    left[0] = 1\n    right[n - 1] = 1\n    for i in range(1, n):\n        if a[i] < a[i - 1]:\n            left[i] = left[i - 1] + 1\n        else:\n            left[i] = 1\n    for i in range(n - 2, -1, -1):\n        if a[i] > a[i + 1]:\n            right[i] = right[i + 1] + 1\n        else:\n            right[i] = 1\n    ans = 0\n    for i in range(n):\n        l = i - left[i] + 1\n        r = i + right[i] - 1\n        if l <= r:\n            ans += (r - l + 1) * (r - l + 2) // 2\n    print(ans)\n\nrun()"
    }
  ],
  "created": 1650247913,
  "id": "cmpl-4yB9luqE9PMQxQIdQdtreCmMMxFbo",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-18 02:12:28.335851 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    n,m = map(int, input().strip().split(' '))\n    a = list(map(int, input().strip().split(' ')))\n    b = sorted(a)\n    if n % 2 == 1:\n        med = b[n//2]\n    else:\n        med = (b[n//2 - 1] + b[n//2]) // 2\n    if med != m:\n        print(0)\n    else:\n        count = 0\n        for i in range(n):\n            if a[i] == med:\n                count += 1\n        print((count * (count - 1)) // 2)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-18 02:12:28.335891 REASON stop
2022-04-18 02:12:28.350523 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n\ndef solve(n, m, a):\n    \"\"\"\n    Find the number of pairs of indices (l, r) (1 <= l <= r <= n) such that the value of median of a_l, a_{l+1}, ..., a_r is exactly the given number m.\n\n    :param n: length of the given sequence (1 <= n <= 200000)\n    :param m: required value of the median (1 <= m <= 200000)\n    :param a: sorted array of integers (1 <= a_i <= 200000)\n    :return: the required number\n    \"\"\"\n    # O(n)\n    left = 0\n    right = 0\n    cnt = 0\n\n    while right < n:\n        while right < n and a[right] == m:\n            right += 1\n            cnt += right - left\n\n        while left < right and a[left] == m:\n            left += 1\n            cnt -= right - left\n\n        if right >= n or a[right] < m:\n            right += 1\n        else:\n            left += 1\n\n    return cnt\n\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    assert len(a) == n\n\n    print(solve(n, m, sorted(a)))\n\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-18 02:12:28.350586 REASON stop
2022-04-18 02:12:28.351076 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n\ndef get_input():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    return n, m, a\n\n\ndef run():\n    n, m, a = get_input()\n    left = [0] * n\n    right = [0] * n\n    left[0] = 1\n    right[n - 1] = 1\n    for i in range(1, n):\n        if a[i] < a[i - 1]:\n            left[i] = left[i - 1] + 1\n        else:\n            left[i] = 1\n    for i in range(n - 2, -1, -1):\n        if a[i] > a[i + 1]:\n            right[i] = right[i + 1] + 1\n        else:\n            right[i] = 1\n    ans = 0\n    for i in range(n):\n        l = i - left[i] + 1\n        r = i + right[i] - 1\n        if l <= r:\n            ans += (r - l + 1) * (r - l + 2) // 2\n    print(ans)\n\nrun()"
}
2022-04-18 02:12:28.351146 REASON stop
