2022-04-20 11:49:08.220895 num operations 1
2022-04-20 11:49:08.220915 size on input set 1
2022-04-20 11:49:08.221085 using api key gabby
2022-04-20 11:49:09.738193 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\narr = [list(map(int, input().split())) for _ in range(n)]\n\ncx = (arr[0][0] + arr[1][0] + arr[2][0] - arr[3][0]) // 2\ncy = (arr[0][1] + arr[1][1] + arr[3][1] - arr[2][1]) // 2\nh = arr[0][2] - abs(cx - arr[0][0]) - abs(cy - arr[0][1])\nprint(cx, cy, h)\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\narr = [list(map(int, input().split())) for _ in range(n)]\n\ncx = (arr[0][0] + arr[1][0] + arr[2][0] - arr[3][0]) // 2\ncy = (arr[0][1] + arr[1][1] + arr[3][1] - arr[2][1]) // 2\nh = arr[0][2] - abs(cx - arr[0][0]) - abs(cy - arr[0][1])\nprint(cx, cy, h)\n"
    }
  ],
  "created": 1650455348,
  "object": "edit"
}
2022-04-20 11:49:09.738447 fix syntax errors 2 ['n = int(input())\narr = [list(map(int, input().split())) for _ in range(n)]\n\ncx = (arr[0][0] + arr[1][0] + arr[2][0] - arr[3][0]) // 2\ncy = (arr[0][1] + arr[1][1] + arr[3][1] - arr[2][1]) // 2\nh = arr[0][2] - abs(cx - arr[0][0]) - abs(cy - arr[0][1])\nprint(cx, cy, h)\n', 'n = int(input())\narr = [list(map(int, input().split())) for _ in range(n)]\n\ncx = (arr[0][0] + arr[1][0] + arr[2][0] - arr[3][0]) // 2\ncy = (arr[0][1] + arr[1][1] + arr[3][1] - arr[2][1]) // 2\nh = arr[0][2] - abs(cx - arr[0][0]) - abs(cy - arr[0][1])\nprint(cx, cy, h)\n']
2022-04-20 11:49:09.738474 size on output set 1
2022-04-20 11:49:09.738486 num operations 1
2022-04-20 11:49:09.738491 size on input set 1
2022-04-20 11:49:09.738654 using api key jaanu
2022-04-20 11:49:11.300172 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\n\ncoord_dict = {}\nfor i in range(n):\n    x, y, h = map(int, input().split())\n    coord_dict[(x, y)] = h\n\nfor x in range(101):\n    for y in range(101):\n        h = -1\n        for (x_, y_), h_ in coord_dict.items():\n            if h == -1:\n                h = h_ + abs(x - x_) + abs(y - y_)\n            elif h != h_ + abs(x - x_) + abs(y - y_):\n                break\n        else:\n            print(x, y, h)\n            exit()\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\n\ncoord_dict = {}\nfor i in range(n):\n    x, y, h = map(int, input().split())\n    coord_dict[(x, y)] = h\n\nfor x in range(101):\n    for y in range(101):\n        h = -1\n        for (x_, y_), h_ in coord_dict.items():\n            if h == -1:\n                h = h_ + abs(x - x_) + abs(y - y_)\n            elif h != h_ + abs(x - x_) + abs(y - y_):\n                break\n        else:\n            print(x, y, h)\n            exit()\n"
    }
  ],
  "created": 1650455349,
  "object": "edit"
}
2022-04-20 11:49:11.300411 fix syntax errors 2 ['n = int(input())\n\ncoord_dict = {}\nfor i in range(n):\n    x, y, h = map(int, input().split())\n    coord_dict[(x, y)] = h\n\nfor x in range(101):\n    for y in range(101):\n        h = -1\n        for (x_, y_), h_ in coord_dict.items():\n            if h == -1:\n                h = h_ + abs(x - x_) + abs(y - y_)\n            elif h != h_ + abs(x - x_) + abs(y - y_):\n                break\n        else:\n            print(x, y, h)\n            exit()\n', '\nn = int(input())\n\ncoord_dict = {}\nfor i in range(n):\n    x, y, h = map(int, input().split())\n    coord_dict[(x, y)] = h\n\nfor x in range(101):\n    for y in range(101):\n        h = -1\n        for (x_, y_), h_ in coord_dict.items():\n            if h == -1:\n                h = h_ + abs(x - x_) + abs(y - y_)\n            elif h != h_ + abs(x - x_) + abs(y - y_):\n                break\n        else:\n            print(x, y, h)\n            exit()\n']
2022-04-20 11:49:11.300444 size on output set 2
2022-04-20 11:49:11.300456 num operations 1
2022-04-20 11:49:11.300462 size on input set 1
2022-04-20 11:49:11.300619 using api key sunu
2022-04-20 11:49:12.757471 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\npoints = []\nfor _ in range(n):\n    x, y, h = map(int, input().split())\n    points.append((x, y, h))\n\n# C_X, C_Y is on the line that connects points with altitude 10^9\n# C_X, C_Y is on the line that connects points with altitude 10^9-1\n# C_X, C_Y is on the line that connects points with altitude 10^9-2\n# ...\n# C_X, C_Y is on the line that connects points with altitude 1\n# C_X, C_Y is on the line that connects points with altitude 0\n\nfor cx in range(101):\n    for cy in range(101):\n        h = 0\n        for p in points:\n            h = max(h, p[2] - abs(p[0] - cx) - abs(p[1] - cy))\n        if h > 0:\n            print(cx, cy, h)\n            exit()\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\npoints = []\nfor _ in range(n):\n    x, y, h = map(int, input().split())\n    points.append((x, y, h))\n\n# C_X, C_Y is on the line that connects points with altitude 10^9\n# C_X, C_Y is on the line that connects points with altitude 10^9-1\n# C_X, C_Y is on the line that connects points with altitude 10^9-2\n# ...\n# C_X, C_Y is on the line that connects points with altitude 1\n# C_X, C_Y is on the line that connects points with altitude 0\n\nfor cx in range(101):\n    for cy in range(101):\n        h = 0\n        for p in points:\n            h = max(h, p[2] - abs(p[0] - cx) - abs(p[1] - cy))\n        if h > 0:\n            print(cx, cy, h)\n            exit()\n"
    }
  ],
  "created": 1650455351,
  "object": "edit"
}
2022-04-20 11:49:12.757685 fix syntax errors 2 ['\nn = int(input())\npoints = []\nfor _ in range(n):\n    x, y, h = map(int, input().split())\n    points.append((x, y, h))\n\n# C_X, C_Y is on the line that connects points with altitude 10^9\n# C_X, C_Y is on the line that connects points with altitude 10^9-1\n# C_X, C_Y is on the line that connects points with altitude 10^9-2\n# ...\n# C_X, C_Y is on the line that connects points with altitude 1\n# C_X, C_Y is on the line that connects points with altitude 0\n\nfor cx in range(101):\n    for cy in range(101):\n        h = 0\n        for p in points:\n            h = max(h, p[2] - abs(p[0] - cx) - abs(p[1] - cy))\n        if h > 0:\n            print(cx, cy, h)\n            exit()\n', '\nn = int(input())\npoints = []\nfor _ in range(n):\n    x, y, h = map(int, input().split())\n    points.append((x, y, h))\n\n# C_X, C_Y is on the line that connects points with altitude 10^9\n# C_X, C_Y is on the line that connects points with altitude 10^9-1\n# C_X, C_Y is on the line that connects points with altitude 10^9-2\n# ...\n# C_X, C_Y is on the line that connects points with altitude 1\n# C_X, C_Y is on the line that connects points with altitude 0\n\nfor cx in range(101):\n    for cy in range(101):\n        h = 0\n        for p in points:\n            h = max(h, p[2] - abs(p[0] - cx) - abs(p[1] - cy))\n        if h > 0:\n            print(cx, cy, h)\n            exit()\n']
2022-04-20 11:49:12.757719 size on output set 1
