2022-04-18 01:36:35.900756 """
You are given a huge decimal number consisting of $n$ digits. It is guaranteed that this number has no leading zeros. Each digit of this number is either 0 or 1.

You may perform several (possibly zero) operations with this number. During each operation you are allowed to change any digit of your number; you may change 0 to 1 or 1 to 0. It is possible that after some operation you can obtain a number with leading zeroes, but it does not matter for this problem.

You are also given two integers $0 \le y < x < n$. Your task is to calculate the minimum number of operations you should perform to obtain the number that has remainder $10^y$ modulo $10^x$. In other words, the obtained number should have remainder $10^y$ when divided by $10^x$.


-----Input-----

The first line of the input contains three integers $n, x, y$ ($0 \le y < x < n \le 2 \cdot 10^5$) — the length of the number and the integers $x$ and $y$, respectively.

The second line of the input contains one decimal number consisting of $n$ digits, each digit of this number is either 0 or 1. It is guaranteed that the first digit of the number is 1.


-----Output-----

Print one integer — the minimum number of operations you should perform to obtain the number having remainder $10^y$ modulo $10^x$. In other words, the obtained number should have remainder $10^y$ when divided by $10^x$.


-----Examples-----
Input
11 5 2
11010100101

Output
1

Input
11 5 1
11010100101

Output
3



-----Note-----

In the first example the number will be $11010100100$ after performing one operation. It has remainder $100$ modulo $100000$.

In the second example the number will be $11010100010$ after performing three operations. It has remainder $10$ modulo $100000$.
"""
2022-04-18 01:36:35.900780 --------------------------
2022-04-18 01:37:01.843380 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    num = map(int, sys.stdin.readline().split())\n    if num[:x+1] == [1] + [0]*x:\n        print 0\n        return\n    if num[:x+1] == [1] + [1]*x:\n        print 1\n        return\n    if num[:y+1] == [1] + [0]*y:\n        print 1\n        return\n    if num[:y+1] == [1] + [1]*y:\n        print 0\n        return\n    for i in xrange(y+1,x+1):\n        if num[i] == 0:\n            print 2\n            return\n    print 1\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef get_min_operations(n, x, y, num):\n    if x < y:\n        num = num[:x]\n    else:\n        num = num[:x] + \"0\"*(x-y)\n    return num.count('0')\n\nif __name__ == \"__main__\":\n    n, x, y = map(int, sys.stdin.readline().strip().split())\n    num = sys.stdin.readline().strip()\n    print(get_min_operations(n, x, y, num))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nn, x, y = [int(x) for x in input().split()]\ns = input()\n\nif int(s[x-y:x]) == 0:\n    print(1)\nelse:\n    print(0)"
    }
  ],
  "created": 1650245796,
  "id": "cmpl-4yAbclKd4txNC3upQzCTqeHm28KSe",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-18 01:37:01.843666 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    num = map(int, sys.stdin.readline().split())\n    if num[:x+1] == [1] + [0]*x:\n        print 0\n        return\n    if num[:x+1] == [1] + [1]*x:\n        print 1\n        return\n    if num[:y+1] == [1] + [0]*y:\n        print 1\n        return\n    if num[:y+1] == [1] + [1]*y:\n        print 0\n        return\n    for i in xrange(y+1,x+1):\n        if num[i] == 0:\n            print 2\n            return\n    print 1\n\nif __name__ == '__main__':\n    main()"
}
2022-04-18 01:37:01.843733 REASON stop
2022-04-18 01:37:01.881389 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef get_min_operations(n, x, y, num):\n    if x < y:\n        num = num[:x]\n    else:\n        num = num[:x] + \"0\"*(x-y)\n    return num.count('0')\n\nif __name__ == \"__main__\":\n    n, x, y = map(int, sys.stdin.readline().strip().split())\n    num = sys.stdin.readline().strip()\n    print(get_min_operations(n, x, y, num))"
}
2022-04-18 01:37:01.881528 REASON stop
2022-04-18 01:37:01.882293 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nn, x, y = [int(x) for x in input().split()]\ns = input()\n\nif int(s[x-y:x]) == 0:\n    print(1)\nelse:\n    print(0)"
}
2022-04-18 01:37:01.882372 REASON stop
