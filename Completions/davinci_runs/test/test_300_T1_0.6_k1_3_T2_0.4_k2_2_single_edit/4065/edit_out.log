2022-04-20 11:38:56.217814 num operations 1
2022-04-20 11:38:56.217855 size on input set 1
2022-04-20 11:38:56.218079 using api key soukgp
2022-04-20 11:38:58.548160 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef getMaxContests(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(n):\n        for j in range(i):\n            if a[i] <= 2 * a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return max(dp)\n\na = list(map(int, input().split()))\nprint(getMaxContests(a))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef getMaxContests(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(n):\n        for j in range(i):\n            if a[i] <= 2 * a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return max(dp)\n\na = list(map(int, input().split()))\nprint(getMaxContests(a))\n"
    }
  ],
  "created": 1650454736,
  "object": "edit"
}
2022-04-20 11:38:58.548442 fix syntax errors 2 ['\n\ndef getMaxContests(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(n):\n        for j in range(i):\n            if a[i] <= 2 * a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return max(dp)\n\na = list(map(int, input().split()))\nprint(getMaxContests(a))\n', '\n\ndef getMaxContests(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(n):\n        for j in range(i):\n            if a[i] <= 2 * a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return max(dp)\n\na = list(map(int, input().split()))\nprint(getMaxContests(a))\n']
2022-04-20 11:38:58.548474 size on output set 1
2022-04-20 11:38:58.548485 num operations 1
2022-04-20 11:38:58.548491 size on input set 1
2022-04-20 11:38:58.548650 using api key soukgp
2022-04-20 11:39:02.764763 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\nq = [a[0]]\nfor i in range(1, n):\n    if a[i] <= 2 * q[-1]:\n        q[-1] = a[i]\n    else:\n        q.append(a[i])\n\nprint(len(q))\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\ndef solve(n, a):\n    q = [a[0]]\n    for i in range(1, n):\n        if a[i] <= 2 * q[-1]:\n            q[-1] = a[i]\n        else:\n            q.append(a[i])\n\n    return len(q)\n\nprint(solve(n, a))\n"
    }
  ],
  "created": 1650454738,
  "object": "edit"
}
2022-04-20 11:39:02.764985 fix syntax errors 2 ['\nn = int(input())\na = list(map(int, input().split()))\n\nq = [a[0]]\nfor i in range(1, n):\n    if a[i] <= 2 * q[-1]:\n        q[-1] = a[i]\n    else:\n        q.append(a[i])\n\nprint(len(q))\n', '\nn = int(input())\na = list(map(int, input().split()))\n\ndef solve(n, a):\n    q = [a[0]]\n    for i in range(1, n):\n        if a[i] <= 2 * q[-1]:\n            q[-1] = a[i]\n        else:\n            q.append(a[i])\n\n    return len(q)\n\nprint(solve(n, a))\n']
2022-04-20 11:39:02.765021 size on output set 2
2022-04-20 11:39:02.765038 num operations 1
2022-04-20 11:39:02.765048 size on input set 1
2022-04-20 11:39:02.765277 using api key sourya
2022-04-20 11:39:04.467574 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# TODO: make solution\n\n\ndef get_max_contest(problemset):\n    pass\n\n\nif __name__ == \"__main__\":\n    pass\n"
    },
    {
      "index": 1,
      "text": "\n# TODO: make solution\n\n\ndef get_max_contest(problemset):\n    pass \n\n\nif __name__ == \"__main__\":\n    pass\n"
    }
  ],
  "created": 1650454742,
  "object": "edit"
}
2022-04-20 11:39:04.467781 fix syntax errors 2 ['\n# TODO: make solution\n\n\ndef get_max_contest(problemset):\n    pass\n\n\nif __name__ == "__main__":\n    pass\n', '\n# TODO: make solution\n\n\ndef get_max_contest(problemset):\n    pass \n\n\nif __name__ == "__main__":\n    pass\n']
2022-04-20 11:39:04.467805 size on output set 2
