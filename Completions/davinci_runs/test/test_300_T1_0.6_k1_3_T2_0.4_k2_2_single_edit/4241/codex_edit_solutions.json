["\n# get input\ns = input()\nt = input()\n\n# get length of both strings\nsl = len(s)\ntl = len(t)\n\n# initialize count\ncount = 0\n\n# loop through t and check if s has it\nfor i in range(0, sl):\n    if s[i] != t[i]:\n        count += 1\n\n# print out result\nprint(count)\n", "\ndef main():\n    s = input()\n    t = input()\n    count = 0\n\n    for i in range(len(s)):\n        if s[i:i+len(t)] == t:\n            return count\n        else:\n            count += 1\n\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# Get input from the user\nS = raw_input()\nT = raw_input()\n\n# Set up variables\nslen = len(S)\ntlen = len(T)\n\n# Initialize array to store the minimum number of changes needed\nchanges = [[0 for i in range(slen + 1)] for j in range(tlen + 1)]\n\n# Populate the first row\nfor i in range(1, slen + 1):\n    changes[0][i] = i\n\n# Populate the first column\nfor j in range(1, tlen + 1):\n    changes[j][0] = j\n\n# Calculate the rest of the matrix\nfor j in range(1, tlen + 1):\n    for i in range(1, slen + 1):\n        if S[i-1] == T[j-1]:\n            changes[j][i] = changes[j-1][i-1]\n        else:\n            changes[j][i] = min(changes[j-1][i], changes[j][i-1], changes[j-1][i-1]) + 1\n\nprint(changes[tlen][slen])\n", "\n\n# get input\ns = input()\nt = input()\n\n# get length of both strings\nsl = len(s)\ntl = len(t)\n\n# initialize count\ncount = 0\n\n# loop through t and check if s has it\nfor i in range(0, sl):\n    if s[i] != t[i]:\n        count += 1\n\n# print out result\nprint(count)\n", "\n\n# Get input \nS = input()\nT = input()\n\n# Set up variables\nslen = len(S)\ntlen = len(T)\n\n# Initialize array to store the minimum number of changes needed\nchanges = [[0 for i in range(slen + 1)] for j in range(tlen + 1)]\n\n# Populate the first row\nfor i in range(1, slen + 1):\n    changes[0][i] = i\n\n# Populate the first column\nfor j in range(1, tlen + 1):\n    changes[j][0] = j\n\n# Calculate the rest of the matrix\nfor j in range(1, tlen + 1):\n    for i in range(1, slen + 1):\n        if S[i-1] == T[j-1]:\n            changes[j][i] = changes[j-1][i-1]\n        else:\n            changes[j][i] = min(changes[j-1][i], changes[j][i-1], changes[j-1][i-1]) + 1\n\nprint(changes[tlen][slen])\n", "\n\ndef main(s, t):\n    count = 0\n\n    for i in range(len(s)):\n        if s[i:i+len(t)] == t:\n            return count\n        else:\n            count += 1\n\nprint(main(s, t))\n"]