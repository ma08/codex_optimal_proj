2022-04-20 11:25:51.585336 num operations 1
2022-04-20 11:25:51.585390 size on input set 1
2022-04-20 11:25:51.585572 using api key gabby
2022-04-20 11:25:58.030751 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/python\n\nimport os\nimport sys\n\n# Open a file\npath = \"/var/log/messages\"\nfd = os.open( path, os.O_RDWR|os.O_CREAT )\n\n# Close opened file\nos.close( fd )\n\n\n\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/python\n\nimport sys, os\n\ndef main():\n    if len(sys.argv) != 2:\n        print(\"Usage: %s <filename>\" % sys.argv[0])\n        sys.exit(1)\n\n    filename = sys.argv[1]\n\n    if not os.path.exists(filename):\n        print(\"%s does not exist!\" % filename)\n        sys.exit(1)\n\n    if not os.path.isfile(filename):\n        print(\"%s is not a file!\" % filename)\n        sys.exit(1)\n\n    if os.access(filename, os.R_OK):\n        print(\"%s is readable\" % filename)\n    else:\n        print(\"%s is not readable\" % filename)\n\n    if os.access(filename, os.W_OK):\n        print(\"%s is writeable\" % filename)\n    else:\n        print(\"%s is not writeable\" % filename)\n\n    if os.access(filename, os.X_OK):\n        print(\"%s is executable\" % filename)\n    else:\n        print(\"%s is not executable\" % filename)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650453951,
  "object": "edit"
}
2022-04-20 11:25:58.031020 fix syntax errors 2 ['#!/usr/bin/python\n\nimport os\nimport sys\n\n# Open a file\npath = "/var/log/messages"\nfd = os.open( path, os.O_RDWR|os.O_CREAT )\n\n# Close opened file\nos.close( fd )\n\n\n\n', '#!/usr/bin/python\n\nimport sys, os\n\ndef main():\n    if len(sys.argv) != 2:\n        print("Usage: %s <filename>" % sys.argv[0])\n        sys.exit(1)\n\n    filename = sys.argv[1]\n\n    if not os.path.exists(filename):\n        print("%s does not exist!" % filename)\n        sys.exit(1)\n\n    if not os.path.isfile(filename):\n        print("%s is not a file!" % filename)\n        sys.exit(1)\n\n    if os.access(filename, os.R_OK):\n        print("%s is readable" % filename)\n    else:\n        print("%s is not readable" % filename)\n\n    if os.access(filename, os.W_OK):\n        print("%s is writeable" % filename)\n    else:\n        print("%s is not writeable" % filename)\n\n    if os.access(filename, os.X_OK):\n        print("%s is executable" % filename)\n    else:\n        print("%s is not executable" % filename)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 11:25:58.031054 size on output set 2
2022-04-20 11:25:58.031065 num operations 1
2022-04-20 11:25:58.031070 size on input set 1
2022-04-20 11:25:58.031233 using api key jaanu
2022-04-20 11:26:01.370442 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    x1, y1, x2, y2 = [int(i) for i in input().split()]\n    x3, y3, x4, y4 = [int(i) for i in input().split()]\n    x5, y5, x6, y6 = [int(i) for i in input().split()]\n    if x1 >= x4 or x3 >= x2 or y1 >= y4 or y3 >= y2:\n        print(\"NO\")\n        return\n    if x1 >= x6 or x5 >= x2 or y1 >= y6 or y5 >= y2:\n        print(\"NO\")\n        return\n    print(\"YES\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    x1, y1, x2, y2 = [int(i) for i in input().split()]\n    x3, y3, x4, y4 = [int(i) for i in input().split()]\n    x5, y5, x6, y6 = [int(i) for i in input().split()]\n    if x1 >= x4 or x3 >= x2 or y1 >= y4 or y3 >= y2:\n        print(\"NO\")\n        return\n    if x1 >= x6 or x5 >= x2 or y1 >= y6 or y5 >= y2:\n        print(\"NO\")\n        return\n    print(\"YES\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650453958,
  "object": "edit"
}
2022-04-20 11:26:01.370664 fix syntax errors 2 ['\n\ndef main():\n    x1, y1, x2, y2 = [int(i) for i in input().split()]\n    x3, y3, x4, y4 = [int(i) for i in input().split()]\n    x5, y5, x6, y6 = [int(i) for i in input().split()]\n    if x1 >= x4 or x3 >= x2 or y1 >= y4 or y3 >= y2:\n        print("NO")\n        return\n    if x1 >= x6 or x5 >= x2 or y1 >= y6 or y5 >= y2:\n        print("NO")\n        return\n    print("YES")\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    x1, y1, x2, y2 = [int(i) for i in input().split()]\n    x3, y3, x4, y4 = [int(i) for i in input().split()]\n    x5, y5, x6, y6 = [int(i) for i in input().split()]\n    if x1 >= x4 or x3 >= x2 or y1 >= y4 or y3 >= y2:\n        print("NO")\n        return\n    if x1 >= x6 or x5 >= x2 or y1 >= y6 or y5 >= y2:\n        print("NO")\n        return\n    print("YES")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 11:26:01.370694 size on output set 1
2022-04-20 11:26:01.370706 num operations 1
2022-04-20 11:26:01.370712 size on input set 1
2022-04-20 11:26:01.370879 using api key gabby
2022-04-20 11:26:06.887488 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nx1 = int(input())\ny1 = int(input())\nx2 = int(input())\ny2 = int(input())\n\nx3 = int(input())\ny3 = int(input())\nx4 = int(input())\ny4 = int(input())\n\nx5 = int(input())\ny5 = int(input())\nx6 = int(input())\ny6 = int(input())\n\nx_list = [x1, x2, x3, x4, x5, x6]\ny_list = [y1, y2, y3, y4, y5, y6]\n\nx_list.sort()\ny_list.sort()\n\nx_max = x_list[-1]\nx_min = x_list[0]\ny_max = y_list[-1]\ny_min = y_list[0]\n\nflag = True\n\nfor i in range(x_min, x_max+1):\n    for j in range(y_min, y_max+1):\n        if x_min < i < x_max and y_min < j < y_max:\n            flag = False\n\nif flag:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    },
    {
      "index": 1,
      "text": "\nx1 = int(input())\ny1 = int(input())\nx2 = int(input())\ny2 = int(input())\n\nx3 = int(input())\ny3 = int(input())\nx4 = int(input())\ny4 = int(input())\n\nx5 = int(input())\ny5 = int(input())\nx6 = int(input())\ny6 = int(input())\n\nx_list = [x1, x2, x3, x4, x5, x6]\ny_list = [y1, y2, y3, y4, y5, y6]\n\nx_list.sort()\ny_list.sort()\n\nx_max = x_list[-1]\nx_min = x_list[0]\ny_max = y_list[-1]\ny_min = y_list[0]\n\nflag = True\n\nfor i in range(x_min, x_max+1):\n    for j in range(y_min, y_max+1):\n        if x_min < i < x_max and y_min < j < y_max:\n            flag = False\n\nif flag:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    }
  ],
  "created": 1650453961,
  "object": "edit"
}
2022-04-20 11:26:06.887724 fix syntax errors 2 ['\nx1 = int(input())\ny1 = int(input())\nx2 = int(input())\ny2 = int(input())\n\nx3 = int(input())\ny3 = int(input())\nx4 = int(input())\ny4 = int(input())\n\nx5 = int(input())\ny5 = int(input())\nx6 = int(input())\ny6 = int(input())\n\nx_list = [x1, x2, x3, x4, x5, x6]\ny_list = [y1, y2, y3, y4, y5, y6]\n\nx_list.sort()\ny_list.sort()\n\nx_max = x_list[-1]\nx_min = x_list[0]\ny_max = y_list[-1]\ny_min = y_list[0]\n\nflag = True\n\nfor i in range(x_min, x_max+1):\n    for j in range(y_min, y_max+1):\n        if x_min < i < x_max and y_min < j < y_max:\n            flag = False\n\nif flag:\n    print("YES")\nelse:\n    print("NO")\n', '\nx1 = int(input())\ny1 = int(input())\nx2 = int(input())\ny2 = int(input())\n\nx3 = int(input())\ny3 = int(input())\nx4 = int(input())\ny4 = int(input())\n\nx5 = int(input())\ny5 = int(input())\nx6 = int(input())\ny6 = int(input())\n\nx_list = [x1, x2, x3, x4, x5, x6]\ny_list = [y1, y2, y3, y4, y5, y6]\n\nx_list.sort()\ny_list.sort()\n\nx_max = x_list[-1]\nx_min = x_list[0]\ny_max = y_list[-1]\ny_min = y_list[0]\n\nflag = True\n\nfor i in range(x_min, x_max+1):\n    for j in range(y_min, y_max+1):\n        if x_min < i < x_max and y_min < j < y_max:\n            flag = False\n\nif flag:\n    print("YES")\nelse:\n    print("NO")\n']
2022-04-20 11:26:06.887757 size on output set 1
