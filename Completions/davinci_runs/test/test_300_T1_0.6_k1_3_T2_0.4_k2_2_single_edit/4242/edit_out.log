2022-04-20 12:15:35.198247 num operations 1
2022-04-20 12:15:35.198267 size on input set 1
2022-04-20 12:15:35.198432 using api key gabby
2022-04-20 12:15:38.745989 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\nimport math\n\n# Get inputs\nA, B, K = [int(input()) for _ in range(3)]\n\n# Get GCD and all divisors\ngcd_ = gcd(A, B)\ndivisors = [d for d in range(1, gcd_ + 1) if gcd_ % d == 0]\ndivisors.sort(reverse=True)\n\n# Print K-th largest positive integer that divides both A and B.\nprint(divisors[K - 1])\n"
    },
    {
      "index": 1,
      "text": "import math\n\n# Get inputs\nA, B, K = [int(input()) for _ in range(3)]\n\n# Get GCD and all divisors\ngcd = math.gcd(A, B)\ndivisors = [d for d in range(1, gcd + 1) if gcd % d == 0]\ndivisors.sort(reverse=True)\n\n# Print K-th largest positive integer that divides both A and B.\nprint(divisors[K - 1])\n"
    }
  ],
  "created": 1650456935,
  "object": "edit"
}
2022-04-20 12:15:38.746240 fix syntax errors 2 ['\n\n\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\nimport math\n\n# Get inputs\nA, B, K = [int(input()) for _ in range(3)]\n\n# Get GCD and all divisors\ngcd_ = gcd(A, B)\ndivisors = [d for d in range(1, gcd_ + 1) if gcd_ % d == 0]\ndivisors.sort(reverse=True)\n\n# Print K-th largest positive integer that divides both A and B.\nprint(divisors[K - 1])\n', 'import math\n\n# Get inputs\nA, B, K = [int(input()) for _ in range(3)]\n\n# Get GCD and all divisors\ngcd = math.gcd(A, B)\ndivisors = [d for d in range(1, gcd + 1) if gcd % d == 0]\ndivisors.sort(reverse=True)\n\n# Print K-th largest positive integer that divides both A and B.\nprint(divisors[K - 1])\n']
2022-04-20 12:15:38.746271 size on output set 2
2022-04-20 12:15:38.746282 num operations 1
2022-04-20 12:15:38.746288 size on input set 1
2022-04-20 12:15:38.746440 using api key soukgp
2022-04-20 12:15:43.094087 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# =============\n# Solution 1\n# =============\n\na, b, k = map(int, input().split())\n\n# a_prime = gcd(a, b)\na_prime = a if a < b else b\nb_prime = a if a > b else b\n\nwhile a_prime != 0:\n    a_prime, b_prime = b_prime % a_prime, a_prime\n\n# The k-th largest number is a_prime / k\nprint(int(b_prime / k))\n"
    },
    {
      "index": 1,
      "text": "\n\n# ============\n# Solution\n# ============\n\na, b, k = [int(x) for x in input().split(' ')]\n\n# a_prime = gcd(a, b)\na_prime = a if a < b else b\nb_prime = a if a > b else b\n\nwhile a_prime != 0:\n    a_prime, b_prime = b_prime % a_prime, a_prime\n\n# The k-th largest number is a_prime / k\nprint(int(b_prime / k))\n"
    }
  ],
  "created": 1650456938,
  "object": "edit"
}
2022-04-20 12:15:43.094293 fix syntax errors 2 ['\n\n# =============\n# Solution 1\n# =============\n\na, b, k = map(int, input().split())\n\n# a_prime = gcd(a, b)\na_prime = a if a < b else b\nb_prime = a if a > b else b\n\nwhile a_prime != 0:\n    a_prime, b_prime = b_prime % a_prime, a_prime\n\n# The k-th largest number is a_prime / k\nprint(int(b_prime / k))\n', "\n\n# ============\n# Solution\n# ============\n\na, b, k = [int(x) for x in input().split(' ')]\n\n# a_prime = gcd(a, b)\na_prime = a if a < b else b\nb_prime = a if a > b else b\n\nwhile a_prime != 0:\n    a_prime, b_prime = b_prime % a_prime, a_prime\n\n# The k-th largest number is a_prime / k\nprint(int(b_prime / k))\n"]
2022-04-20 12:15:43.094319 size on output set 2
2022-04-20 12:15:43.094331 num operations 1
2022-04-20 12:15:43.094337 size on input set 1
2022-04-20 12:15:43.094510 using api key sourya
2022-04-20 12:15:46.875924 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom fractions import gcd\n\ndef main():\n    inputstring = input()\n    a, b, k = map(int, inputstring.split())\n    g = gcd(a, b)\n    for i in range(k-1):\n        g = gcd(g, min(a, b))\n        if g == 1:\n            break\n    print(g)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[n//2] - a[n//2-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650456943,
  "object": "edit"
}
2022-04-20 12:15:46.876134 fix syntax errors 2 ['\nfrom fractions import gcd\n\ndef main():\n    inputstring = input()\n    a, b, k = map(int, inputstring.split())\n    g = gcd(a, b)\n    for i in range(k-1):\n        g = gcd(g, min(a, b))\n        if g == 1:\n            break\n    print(g)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[n//2] - a[n//2-1])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 12:15:46.876160 size on output set 2
