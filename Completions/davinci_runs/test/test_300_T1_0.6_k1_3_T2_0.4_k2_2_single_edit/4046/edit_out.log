2022-04-20 11:34:14.934761 num operations 1
2022-04-20 11:34:14.934788 size on input set 1
2022-04-20 11:34:14.934960 using api key jaanu
2022-04-20 11:34:17.795490 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n <= x <= n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x <= n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x < n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n"
    }
  ],
  "created": 1650454455,
  "object": "edit"
}
2022-04-20 11:34:17.795778 fix syntax errors 2 ["\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n <= x <= n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n", "\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x <= n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x < n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n"]
2022-04-20 11:34:17.795808 size on output set 2
2022-04-20 11:34:17.795819 num operations 1
2022-04-20 11:34:17.795824 size on input set 1
2022-04-20 11:34:17.795985 using api key soukgp
2022-04-20 11:34:23.835977 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# check if possible\nif sum(q) != 0:\n    print(-1)\n    exit()\n\n# check if possible\nfor i in q:\n    if abs(i) >= n:\n        print(-1)\n        exit()\n\n# check if possible\nfor i in range(1, n):\n    if q[i] == q[i-1]:\n        print(-1)\n        exit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n    p[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in p:\n    if i > n or i < -1:\n        print(-1)\n        exit()\n\n# print possible p\nprint(*p)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# first and last values of p\np_first = -1\np_last = n - 1\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in p:\n\tif i > p_last:\n\t\tprint(-1)\n\t\texit()\n\telif i < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n"
    }
  ],
  "created": 1650454457,
  "object": "edit"
}
2022-04-20 11:34:23.836206 fix syntax errors 2 ['\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# check if possible\nif sum(q) != 0:\n    print(-1)\n    exit()\n\n# check if possible\nfor i in q:\n    if abs(i) >= n:\n        print(-1)\n        exit()\n\n# check if possible\nfor i in range(1, n):\n    if q[i] == q[i-1]:\n        print(-1)\n        exit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n    p[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in p:\n    if i > n or i < -1:\n        print(-1)\n        exit()\n\n# print possible p\nprint(*p)\n', '\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# first and last values of p\np_first = -1\np_last = n - 1\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in p:\n\tif i > p_last:\n\t\tprint(-1)\n\t\texit()\n\telif i < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n']
2022-04-20 11:34:23.836244 size on output set 2
2022-04-20 11:34:23.836257 num operations 1
2022-04-20 11:34:23.836264 size on input set 1
2022-04-20 11:34:23.836458 using api key jaanu
2022-04-20 11:34:25.914744 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n-1):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-1] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\nq = list(map(int, input().split()))\nq.sort()\np = [0]*n\np[0] = q[0]\nfor i in range(1, n-1):\n    p[i] = q[i] + p[i-1]\np[n-1] = q[n-2] + p[n-2]\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n"
    }
  ],
  "created": 1650454463,
  "object": "edit"
}
2022-04-20 11:34:25.914951 fix syntax errors 2 ['\n\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n-1):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-1] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n', '\n\nn = int(input())\nq = list(map(int, input().split()))\nq.sort()\np = [0]*n\np[0] = q[0]\nfor i in range(1, n-1):\n    p[i] = q[i] + p[i-1]\np[n-1] = q[n-2] + p[n-2]\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n']
2022-04-20 11:34:25.914977 size on output set 2
