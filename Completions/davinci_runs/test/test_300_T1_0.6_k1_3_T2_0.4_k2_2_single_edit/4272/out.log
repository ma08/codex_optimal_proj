2022-04-18 03:58:44.722907 """
We have a string S of length N consisting of uppercase English letters.
How many times does ABC occur in S as contiguous subsequences (see Sample Inputs and Outputs)?

-----Constraints-----
 - 3 \leq N \leq 50
 - S consists of uppercase English letters.

-----Input-----
Input is given from Standard Input in the following format:
N
S

-----Output-----
Print number of occurrences of ABC in S as contiguous subsequences.

-----Sample Input-----
10
ZABCDBABCQ

-----Sample Output-----
2

Two contiguous subsequences of S are equal to ABC: the 2-nd through 4-th characters, and the 7-th through 9-th characters.
"""
2022-04-18 03:58:44.722924 --------------------------
2022-04-18 03:59:12.333362 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n):\n    if s[i:i+3] == 'ABC':\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = input()\n    a = 0\n    for i in range(n-2):\n        if s[i] == 'A' and s[i+1] == 'B' and s[i+2] == 'C':\n            a += 1\n    print(a)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\n# Get the number of characters in the string\nn = int(sys.stdin.readline())\n\n# Get the string\ns = sys.stdin.readline()\n\n# Initialize the number of contiguous subsequences equal to ABC\nnum_subsequences = 0\n\n# For every character in the string\nfor i in range(n):\n    # If the character is not A, skip it\n    if s[i] != \"A\":\n        continue\n    # If the character is A and the following character is B, check the following character\n    if s[i+1] == \"B\":\n        # If the following character is B and the character after that is C, increment the number of subsequences\n        if s[i+2] == \"C\":\n            num_subsequences += 1\n\n# Print the number of subsequences\nprint(num_subsequences)"
    }
  ],
  "created": 1650254324,
  "id": "cmpl-4yCpAybW01szI9uqH5q8907QeCME0",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-18 03:59:12.333629 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n):\n    if s[i:i+3] == 'ABC':\n        count += 1\n\nprint(count)"
}
2022-04-18 03:59:12.333691 REASON stop
2022-04-18 03:59:12.369124 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = input()\n    a = 0\n    for i in range(n-2):\n        if s[i] == 'A' and s[i+1] == 'B' and s[i+2] == 'C':\n            a += 1\n    print(a)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-18 03:59:12.369221 REASON stop
2022-04-18 03:59:12.370166 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\n# Get the number of characters in the string\nn = int(sys.stdin.readline())\n\n# Get the string\ns = sys.stdin.readline()\n\n# Initialize the number of contiguous subsequences equal to ABC\nnum_subsequences = 0\n\n# For every character in the string\nfor i in range(n):\n    # If the character is not A, skip it\n    if s[i] != \"A\":\n        continue\n    # If the character is A and the following character is B, check the following character\n    if s[i+1] == \"B\":\n        # If the following character is B and the character after that is C, increment the number of subsequences\n        if s[i+2] == \"C\":\n            num_subsequences += 1\n\n# Print the number of subsequences\nprint(num_subsequences)"
}
2022-04-18 03:59:12.370259 REASON stop
