2022-04-20 11:45:16.489621 num operations 1
2022-04-20 11:45:16.489658 size on input set 1
2022-04-20 11:45:16.489855 using api key jaanu
2022-04-20 11:45:19.008238 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef solve(n, k, a):\n    a.sort()\n    a.append(a[-1] + 5)\n    #print(a)\n    cnt = 0\n    for i in range(n):\n        if i == 0 or a[i] - a[i-1] > 5:\n            cnt += 1\n            if cnt == k + 1:\n                return i\n    return n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n"
    },
    {
      "index": 1,
      "text": "\ndef solve(n, k, a):\n    a.sort()\n    a.append(a[-1] + 5)\n    # print(a)\n    cnt = 0\n    for i in range(n):\n        if i == 0 or a[i] - a[i-1] > 5:\n            cnt += 1\n            if cnt == k + 1:\n                return i\n    return n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n"
    }
  ],
  "created": 1650455116,
  "object": "edit"
}
2022-04-20 11:45:19.008517 fix syntax errors 2 ['\ndef solve(n, k, a):\n    a.sort()\n    a.append(a[-1] + 5)\n    #print(a)\n    cnt = 0\n    for i in range(n):\n        if i == 0 or a[i] - a[i-1] > 5:\n            cnt += 1\n            if cnt == k + 1:\n                return i\n    return n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n', '\ndef solve(n, k, a):\n    a.sort()\n    a.append(a[-1] + 5)\n    # print(a)\n    cnt = 0\n    for i in range(n):\n        if i == 0 or a[i] - a[i-1] > 5:\n            cnt += 1\n            if cnt == k + 1:\n                return i\n    return n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n']
2022-04-20 11:45:19.008548 size on output set 2
2022-04-20 11:45:19.008560 num operations 1
2022-04-20 11:45:19.008565 size on input set 1
2022-04-20 11:45:19.008780 using api key gabby
2022-04-20 11:45:21.550295 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nn, k = map(int, input().split())\na = sorted(list(map(int, input().split())))\n\ndp = [0] * (n + 1)\nfor i in range(1, n + 1):\n    dp[i] = dp[i - 1]\n    for j in range(i - 1, -1, -1):\n        if a[i - 1] - a[j] <= k:\n            dp[i] = max(dp[i], dp[j] + i - j)\n\nans = 0\nfor i in range(n, n - k, -1):\n    ans = max(ans, dp[i])\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nn, k = map(int, input().split())\na = sorted(list(map(int, input().split())))\n\n\ndp = [0] * (n + 1)\nfor i in range(1, n + 1):\n    dp[i] = dp[i - 1]\n    for j in range(i - 1, -1, -1):\n        if a[i - 1] - a[j] <= 5:\n            dp[i] = max(dp[i], dp[j] + i - j)\n\nans = 0\nfor i in range(n, n - k, -1):\n    ans = max(ans, dp[i])\nprint(ans)\n"
    }
  ],
  "created": 1650455119,
  "object": "edit"
}
2022-04-20 11:45:21.550511 fix syntax errors 2 ['#!/usr/bin/env python3\n\nn, k = map(int, input().split())\na = sorted(list(map(int, input().split())))\n\ndp = [0] * (n + 1)\nfor i in range(1, n + 1):\n    dp[i] = dp[i - 1]\n    for j in range(i - 1, -1, -1):\n        if a[i - 1] - a[j] <= k:\n            dp[i] = max(dp[i], dp[j] + i - j)\n\nans = 0\nfor i in range(n, n - k, -1):\n    ans = max(ans, dp[i])\nprint(ans)\n', '\n\nn, k = map(int, input().split())\na = sorted(list(map(int, input().split())))\n\n\ndp = [0] * (n + 1)\nfor i in range(1, n + 1):\n    dp[i] = dp[i - 1]\n    for j in range(i - 1, -1, -1):\n        if a[i - 1] - a[j] <= 5:\n            dp[i] = max(dp[i], dp[j] + i - j)\n\nans = 0\nfor i in range(n, n - k, -1):\n    ans = max(ans, dp[i])\nprint(ans)\n']
2022-04-20 11:45:21.550538 size on output set 2
2022-04-20 11:45:21.550550 num operations 1
2022-04-20 11:45:21.550556 size on input set 1
2022-04-20 11:45:21.550708 using api key soukgp
2022-04-20 11:45:27.864089 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\nfrom collections import defaultdict\n\n# n,k = map(int, stdin.readline().split())\n# a = list(map(int, stdin.readline().split()))\nn,k = 5,2\na = [1, 2, 15, 15, 15]\n\n# n,k = 6,1\n# a = [36, 4, 1, 25, 9, 16]\n\n# n,k = 4,4\n# a = [1, 10, 100, 1000]\n\na.sort()\n\nskills = defaultdict(list)\nfor i in range(n):\n    skills[a[i]].append(i)\n\ndef get_teams(skills, k):\n    teams = []\n    for skill in skills:\n        while len(skills[skill]) >= 2:\n            teams.append((skills[skill].pop(0), skills[skill].pop()))\n    for skill in skills:\n        if skills[skill]:\n            teams.append((skills[skill].pop(),))\n    if len(teams) < k:\n        return []\n    return teams\n\nteams = get_teams(skills, k)\n\nif teams:\n    for i in range(n-1, -1, -1):\n        if a[i] - a[0] <= 5:\n            skills[a[i]].append(skills[a[0]].pop(0))\n            if not skills[a[0]]:\n                del skills[a[0]]\n            teams = get_teams(skills, k)\n            if teams:\n                break\n\nprint(sum(map(len, teams)))\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\nfrom collections import defaultdict\n\nn,k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\n# n,k = 5,2\n# a = [1, 2, 15, 15, 15]\n\n# n,k = 6,1\n# a = [36, 4, 1, 25, 9, 16]\n\n# n,k = 4,4\n# a = [1, 10, 100, 1000]\n\na.sort()\n\nskills = defaultdict(list)\nfor i in range(n):\n    skills[a[i]].append(i)\n\ndef get_teams(skills, k):\n    teams = []\n    for skill in skills:\n        while len(skills[skill]) >= 2:\n            teams.append((skills[skill].pop(0), skills[skill].pop()))\n    for skill in skills:\n        if skills[skill]:\n            teams.append((skills[skill].pop(),))\n    if len(teams) > k:\n        return []\n    return teams\n\nteams = get_teams(skills, k)\n\nfor i in range(n-1, -1, -1):\n    if a[i] - a[0] <= 5:\n        skills[a[i]].append(skills[a[0]].pop(0))\n        if not skills[a[0]]:\n            del skills[a[0]]\n        teams = get_teams(skills, k)\n        if teams:\n            break\n\nprint(sum(map(len, teams)))\n"
    }
  ],
  "created": 1650455121,
  "object": "edit"
}
2022-04-20 11:45:27.864311 fix syntax errors 2 ['\n\nfrom sys import stdin\nfrom collections import defaultdict\n\n# n,k = map(int, stdin.readline().split())\n# a = list(map(int, stdin.readline().split()))\nn,k = 5,2\na = [1, 2, 15, 15, 15]\n\n# n,k = 6,1\n# a = [36, 4, 1, 25, 9, 16]\n\n# n,k = 4,4\n# a = [1, 10, 100, 1000]\n\na.sort()\n\nskills = defaultdict(list)\nfor i in range(n):\n    skills[a[i]].append(i)\n\ndef get_teams(skills, k):\n    teams = []\n    for skill in skills:\n        while len(skills[skill]) >= 2:\n            teams.append((skills[skill].pop(0), skills[skill].pop()))\n    for skill in skills:\n        if skills[skill]:\n            teams.append((skills[skill].pop(),))\n    if len(teams) < k:\n        return []\n    return teams\n\nteams = get_teams(skills, k)\n\nif teams:\n    for i in range(n-1, -1, -1):\n        if a[i] - a[0] <= 5:\n            skills[a[i]].append(skills[a[0]].pop(0))\n            if not skills[a[0]]:\n                del skills[a[0]]\n            teams = get_teams(skills, k)\n            if teams:\n                break\n\nprint(sum(map(len, teams)))\n', '\n\nfrom sys import stdin\nfrom collections import defaultdict\n\nn,k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\n# n,k = 5,2\n# a = [1, 2, 15, 15, 15]\n\n# n,k = 6,1\n# a = [36, 4, 1, 25, 9, 16]\n\n# n,k = 4,4\n# a = [1, 10, 100, 1000]\n\na.sort()\n\nskills = defaultdict(list)\nfor i in range(n):\n    skills[a[i]].append(i)\n\ndef get_teams(skills, k):\n    teams = []\n    for skill in skills:\n        while len(skills[skill]) >= 2:\n            teams.append((skills[skill].pop(0), skills[skill].pop()))\n    for skill in skills:\n        if skills[skill]:\n            teams.append((skills[skill].pop(),))\n    if len(teams) > k:\n        return []\n    return teams\n\nteams = get_teams(skills, k)\n\nfor i in range(n-1, -1, -1):\n    if a[i] - a[0] <= 5:\n        skills[a[i]].append(skills[a[0]].pop(0))\n        if not skills[a[0]]:\n            del skills[a[0]]\n        teams = get_teams(skills, k)\n        if teams:\n            break\n\nprint(sum(map(len, teams)))\n']
2022-04-20 11:45:27.864504 size on output set 2
