["\ndef getMidTime(startTime, endTime):\n    startMinutes = startTime[1] + startTime[0] * 60\n    endMinutes = endTime[1] + endTime[0] * 60\n    midMinutes = startMinutes + (endMinutes - startMinutes) / 2\n\n    midTime = [0, 0]\n    midTime[0] = int(midMinutes / 60)\n    midTime[1] = midMinutes % 60\n\n    return midTime\n\ndef printTime(time):\n    print('{:02d}:{:02d}'.format(time[0], time[1]))\n\ndef main():\n    startTime = list(map(int, input().split(':')))\n    endTime = list(map(int, input().split(':')))\n\n    midTime = getMidTime(startTime, endTime)\n    printTime(midTime)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef getMidTime(startTime, endTime):\n    startMinutes = startTime[1] + (startTime[0] * 60)\n    endMinutes = endTime[1] + (endTime[0] * 60)\n    midMinutes = startMinutes + (endMinutes - startMinutes) / 2\n\n    midTime = [0, 0]\n    midTime[0] = midMinutes / 60\n    midTime[1] = midMinutes % 60\n\n    return midTime\n\ndef printTime(time):\n    print('{:02d}:{:02d}'.format(time[0], time[1]))\n\ndef main():\n    startTime = list(map(int, input().split(':')))\n    endTime = list(map(int, input().split(':')))\n\n    midTime = getMidTime(startTime, endTime)\n    printTime(midTime)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef Solve(h1, h2, m1, m2):\n    if m1 < 30:\n        if h2 == h1:\n            if m2 - m1 == 30:\n                return (h2, m2)\n            elif m2 - m1 == 2:\n                return (h2, m1 + 1)\n            else:\n                return (h1, m1 + (m2 - m1) / 2)\n        else:\n            return (h1, m1 + (m2 - m1) / 2)\n    else:\n        if h2 == h1:\n            if m2 - m1 == 30:\n                return (h2, m2)\n            elif m2 - m1 == 2:\n                return (h2, m1 + 1)\n            else:\n                return (h1, m1 + (m2 - m1) / 2)\n        else:\n            return (h1 + 1, m1 + (m2 - m1) / 2)\n\ndef main():\n    lines = sys.stdin.readlines()\n    h1, m1 = map(int, lines[0].split(':')[0], lines[0].split(':')[1])\n    h2, m2 = map(int, lines[1].split(':')[0], lines[1].split(':')[1])\n    h3, m3 = Solve(h1, h2, m1, m2)\n    print(\"{0:02d}:{1:02d}\".format(h3, m3))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef Solve(h1, h2, m1, m2):\n    if h2 == h1:\n        if m2 - m1 == 30:\n            return (h2, m2)\n        elif m2 - m1 == 2:\n            return (h2, m1 + 1)\n        elif m2 - m1 == 1:\n            return (h2, m1 + 1)\n        elif m2 - m1 == 0:\n            return (h2, m1 + 1)\n        elif m2 - m1 == 58:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 59:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 60:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 61:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 62:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 63:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 64:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 65:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 66:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 67:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 68:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 69:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 70:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 71:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 72:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 73:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 74:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 75:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 76:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 77:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 78:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 79:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 80:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 81:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 82:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 83:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 84:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 85:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 86:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 87:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 88:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 89:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 90:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 91:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 92:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 93:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 94:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 95:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 96:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 97:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 98:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 99:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 100:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 101:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 102:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 103:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 104:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 105:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 106:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 107:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 108:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 109:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 110:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 111:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 112:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 113:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 114:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 115:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 116:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 117:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 118:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 119:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 120:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 121:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 122:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 123:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 124:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 125:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 126:\n            return (h2, m1 - 1)\n        elif m2 - m1 == 127:\n           \n    else:\n        if h2 == h1:\n            if m2 - m1 == 30:\n                return (h2, m2)\n            elif m2 - m1 == 2:\n                return (h2, m1 + 1)\n            else:\n                return (h1, m1 + (m2 - m1) / 2)\n        else:\n            return (h1 + 1, m1 + (m2 - m1) / 2)\n\ndef main():\n    lines = sys.stdin.readlines()\n    h1, m1 = map(int, lines[0].split(':'))\n    h2, m2 = map(int, lines[1].split(':'))\n    h3, m3 = Solve(h1, h2, m1, m2)\n    print(\"{0:02d}:{1:02d}\".format(h3, m3))\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    line1 = sys.stdin.readline().strip().split(':')\n    line2 = sys.stdin.readline().strip().split(':')\n    h1 = int(line1[0])\n    m1 = int(line1[1])\n    h2 = int(line2[0])\n    m2 = int(line2[1])\n\n    m1 += (h1 * 60)\n    m2 += (h2 * 60)\n\n    if m1 < m2:\n        m3 = (m2 + m1) / 2\n    else:\n        m3 = (m1 + m2) / 2 + (12 * 60)\n\n    h3 = m3 / 60\n    m3 %= 60\n    print('{0:02d}:{1:02d}'.format(h3, m3))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    line1 = sys.stdin.readline().strip().split(':')\n    line2 = sys.stdin.readline().strip().split(':')\n    h1 = int(line1[0])\n    m1 = int(line1[1])\n    h2 = int(line2[0])\n    m2 = int(line2[1])\n\n    m1 += (h1 * 60)\n    m2 += (h2 * 60)\n\n    if m1 < m2:\n        m3 = (m2 + m1) / 2\n    else:\n        m3 = (m1 + m2) / 2 + (12 * 60)\n    \n    h3 = m3 / 60\n    m3 %= 60\n    print('{0:02d}:{1:02d}'.format(h3, m3))\n\nif __name__ == '__main__':\n    main()\n"]