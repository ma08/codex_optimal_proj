2022-04-20 12:09:31.224926 num operations 1
2022-04-20 12:09:31.224949 size on input set 1
2022-04-20 12:09:31.225135 using api key soukgp
2022-04-20 12:09:33.460623 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                continue\n            num = int(str(a[i]) + str(a[j])\n            if num % k == 0:\n                count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                continue\n            num = int(str(a[i]) + str(a[j]))\n            if num % k == 0:\n                count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650456571,
  "object": "edit"
}
2022-04-20 12:09:33.460928 fix syntax errors 2 ['\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                continue\n            num = int(str(a[i]) + str(a[j])\n            if num % k == 0:\n                count += 1\n    print(count)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                continue\n            num = int(str(a[i]) + str(a[j]))\n            if num % k == 0:\n                count += 1\n    print(count)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 12:09:33.460960 size on output set 2
2022-04-20 12:09:33.460972 num operations 1
2022-04-20 12:09:33.460978 size on input set 1
2022-04-20 12:09:33.461133 using api key derek
2022-04-20 12:09:33.497999 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 12:09:34.999866 using api key sunu
2022-04-20 12:09:37.679775 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef solve():\n    n, k = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    ans = 0\n    nums = [0] * k\n    for i in range(n):\n        nums[a[i] % k] += 1\n    for i in range(k):\n        if i == 0:\n            ans += nums[0] * (nums[0] - 1) // 2\n        elif i == k // 2:\n            ans += nums[k // 2] * (nums[k // 2] - 1) // 2\n        elif i < k // 2:\n            ans += nums[i] * nums[k - i]\n    return ans\n\ndef main():\n    print(solve())\n    \nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef solve():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    nums = [0] * k\n    for i in range(n):\n        nums[a[i] % k] += 1\n    for i in range(k):\n        if i == 0:\n            ans += nums[0] * (nums[0] - 1) // 2\n        elif i == k // 2:\n            ans += nums[k // 2] * (nums[k // 2] - 1) // 2\n        elif i < k // 2:\n            ans += nums[i] * nums[k - i]\n    return ans\n\n\ndef main():\n    print(solve())\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650456575,
  "object": "edit"
}
2022-04-20 12:09:37.679984 fix syntax errors 2 ["\ndef solve():\n    n, k = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    ans = 0\n    nums = [0] * k\n    for i in range(n):\n        nums[a[i] % k] += 1\n    for i in range(k):\n        if i == 0:\n            ans += nums[0] * (nums[0] - 1) // 2\n        elif i == k // 2:\n            ans += nums[k // 2] * (nums[k // 2] - 1) // 2\n        elif i < k // 2:\n            ans += nums[i] * nums[k - i]\n    return ans\n\ndef main():\n    print(solve())\n    \nif __name__ == '__main__':\n    main()\n", "\n\ndef solve():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    nums = [0] * k\n    for i in range(n):\n        nums[a[i] % k] += 1\n    for i in range(k):\n        if i == 0:\n            ans += nums[0] * (nums[0] - 1) // 2\n        elif i == k // 2:\n            ans += nums[k // 2] * (nums[k // 2] - 1) // 2\n        elif i < k // 2:\n            ans += nums[i] * nums[k - i]\n    return ans\n\n\ndef main():\n    print(solve())\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 12:09:37.680015 size on output set 2
2022-04-20 12:09:37.680027 num operations 1
2022-04-20 12:09:37.680033 size on input set 1
2022-04-20 12:09:37.680185 using api key gabby
2022-04-20 12:09:43.855560 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef concat(a, b):\n    return int(str(a) + str(b))\n\ndef kaprekar(n):\n    n = str(n)\n    n1 = int(''.join(sorted(n)))\n    n2 = int(''.join(sorted(n)[::-1]))\n    return n2 - n1\n\ndef is_divisible(a, b, k):\n    return concat(a, b) % k == 0\n\ndef solve(n, k, arr):\n    count = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if is_divisible(arr[i], arr[j], k) and kaprekar(arr[i]) == kaprekar(arr[j]):\n                count += 1 \n    return count\n\ndef main():\n    n, k = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(solve(n, k, arr))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef concat(a, b):\n    return int(str(a) + str(b))\n\ndef solve(n, k, a):\n    count = 0\n    i = 0\n    while i < n:\n        j = i + 1\n        while j < n:\n            if concat(a[i], a[j]) % k == 0:\n                count += 1\n            j += 1\n        i += 1\n    return count\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(solve(n, k, a))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650456577,
  "object": "edit"
}
2022-04-20 12:09:43.855784 fix syntax errors 2 ['\n\ndef concat(a, b):\n    return int(str(a) + str(b))\n\ndef kaprekar(n):\n    n = str(n)\n    n1 = int(\'\'.join(sorted(n)))\n    n2 = int(\'\'.join(sorted(n)[::-1]))\n    return n2 - n1\n\ndef is_divisible(a, b, k):\n    return concat(a, b) % k == 0\n\ndef solve(n, k, arr):\n    count = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if is_divisible(arr[i], arr[j], k) and kaprekar(arr[i]) == kaprekar(arr[j]):\n                count += 1 \n    return count\n\ndef main():\n    n, k = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(solve(n, k, arr))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef concat(a, b):\n    return int(str(a) + str(b))\n\ndef solve(n, k, a):\n    count = 0\n    i = 0\n    while i < n:\n        j = i + 1\n        while j < n:\n            if concat(a[i], a[j]) % k == 0:\n                count += 1\n            j += 1\n        i += 1\n    return count\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(solve(n, k, a))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 12:09:43.855817 size on output set 2
