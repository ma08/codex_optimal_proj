2022-04-20 12:25:58.470496 num operations 1
2022-04-20 12:25:58.470515 size on input set 1
2022-04-20 12:25:58.470674 using api key kouti
2022-04-20 12:26:03.856769 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    nums = [int(x) for x in sys.stdin.readline().split()]\n    if nums[0] == nums[1] and nums[1] != nums[2]:\n        print('Yes')\n    elif nums[0] == nums[2] and nums[2] != nums[1]:\n        print('Yes')\n    elif nums[1] == nums[2] and nums[2] != nums[0]:\n        print('Yes')\n    else:\n        print('No')\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    triple = [input() for x in range(3)]\n    if triple[0] == triple[1] or triple[1] == triple[2] or triple[2] == triple[0]:\n        print('Yes')\n    else:\n        print('No')\n\nmain()\n"
    }
  ],
  "created": 1650457558,
  "object": "edit"
}
2022-04-20 12:26:03.857111 fix syntax errors 2 ["\nimport sys\n\ndef main():\n    nums = [int(x) for x in sys.stdin.readline().split()]\n    if nums[0] == nums[1] and nums[1] != nums[2]:\n        print('Yes')\n    elif nums[0] == nums[2] and nums[2] != nums[1]:\n        print('Yes')\n    elif nums[1] == nums[2] and nums[2] != nums[0]:\n        print('Yes')\n    else:\n        print('No')\n\nmain()\n", "\nimport sys\n\ndef main():\n    triple = [input() for x in range(3)]\n    if triple[0] == triple[1] or triple[1] == triple[2] or triple[2] == triple[0]:\n        print('Yes')\n    else:\n        print('No')\n\nmain()\n"]
2022-04-20 12:26:03.857161 size on output set 2
2022-04-20 12:26:03.857178 num operations 1
2022-04-20 12:26:03.857186 size on input set 1
2022-04-20 12:26:03.857441 using api key sourya
2022-04-20 12:26:05.258217 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\na, b, c = list(map(int, input().split()))\n\nif (a == b) and (a != c):\n    print(\"Yes\")\nelif (a == c) and (a != b):\n    print(\"Yes\")\nelif (b == c) and (b != a):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 1,
      "text": "\na, b, c = list(map(int, input().split()))\n\nif (a == b) and (a != c):\n    print(\"Yes\")\nelif (a == c) and (a != b):\n    print(\"Yes\")\nelif (b == c) and (b != a):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    }
  ],
  "created": 1650457563,
  "object": "edit"
}
2022-04-20 12:26:05.258436 fix syntax errors 2 ['\na, b, c = list(map(int, input().split()))\n\nif (a == b) and (a != c):\n    print("Yes")\nelif (a == c) and (a != b):\n    print("Yes")\nelif (b == c) and (b != a):\n    print("Yes")\nelse:\n    print("No")\n', '\na, b, c = list(map(int, input().split()))\n\nif (a == b) and (a != c):\n    print("Yes")\nelif (a == c) and (a != b):\n    print("Yes")\nelif (b == c) and (b != a):\n    print("Yes")\nelse:\n    print("No")\n']
2022-04-20 12:26:05.258463 size on output set 1
2022-04-20 12:26:05.258475 num operations 1
2022-04-20 12:26:05.258481 size on input set 1
2022-04-20 12:26:05.258634 using api key sourya
2022-04-20 12:26:06.986101 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\na, b, c = map(int, input().split())\n\nif a == b == c:\n    print('No')\nelif a == b or a == c or b == c:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\na, b, c = map(int, input().split())\n\nif a == b and b == c:\n    print('No')\nelif a == b or a == c or b == c:\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1650457565,
  "object": "edit"
}
2022-04-20 12:26:06.986315 fix syntax errors 2 ["\na, b, c = map(int, input().split())\n\nif a == b == c:\n    print('No')\nelif a == b or a == c or b == c:\n    print('Yes')\nelse:\n    print('No')\n", "\na, b, c = map(int, input().split())\n\nif a == b and b == c:\n    print('No')\nelif a == b or a == c or b == c:\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-20 12:26:06.986339 size on output set 2
