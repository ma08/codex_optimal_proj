2022-04-18 23:39:53.024275 num operations 1
2022-04-18 23:39:53.024295 size on input set 1
2022-04-18 23:39:58.160742 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef is_prime(n):\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef find_prime(n):\n    i = 2\n    while n > 0:\n        if is_prime(i):\n            n -= 1\n        i += 1\n    return i - 1\n\ndef find_divisor(n):\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return i\n    return n\n\ndef solve(n, b):\n    a = []\n    for i in range(n):\n        if b[2*i] == b[2*i + 1]:\n            a.append(find_prime(b[2*i]))\n        else:\n            a.append(b[2*i] * b[2*i + 1] // find_divisor(b[2*i] * b[2*i + 1]))\n    return a\n\nn = int(input())\nb = list(map(int, input().split()))\na = solve(n, b)\nprint(*a)\n"
    },
    {
      "index": 1,
      "text": "\ndef is_prime(n):\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef find_prime(n):\n    i = 2\n    while n > 0:\n        if is_prime(i):\n            n -= 1\n        i += 1\n    return i - 1\n\ndef find_divisor(n):\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return i\n    return n\n\ndef solve(n, b):\n    a = []\n    for i in range(n):\n        if b[2 * i] == b[2 * i + 1]:\n            a.append(find_prime(b[2 * i]))\n        else:\n            a.append(b[2 * i] * b[2 * i + 1] // find_divisor(b[2 * i] * b[2 * i + 1]))\n    return a\n\nn = int(input())\nb = list(map(int, input().split()))\na = solve(n, b)\nprint(*a)\n"
    }
  ],
  "created": 1650325193,
  "object": "edit"
}
2022-04-18 23:39:58.160980 fix syntax errors 2 ['\ndef is_prime(n):\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef find_prime(n):\n    i = 2\n    while n > 0:\n        if is_prime(i):\n            n -= 1\n        i += 1\n    return i - 1\n\ndef find_divisor(n):\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return i\n    return n\n\ndef solve(n, b):\n    a = []\n    for i in range(n):\n        if b[2*i] == b[2*i + 1]:\n            a.append(find_prime(b[2*i]))\n        else:\n            a.append(b[2*i] * b[2*i + 1] // find_divisor(b[2*i] * b[2*i + 1]))\n    return a\n\nn = int(input())\nb = list(map(int, input().split()))\na = solve(n, b)\nprint(*a)\n', '\ndef is_prime(n):\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef find_prime(n):\n    i = 2\n    while n > 0:\n        if is_prime(i):\n            n -= 1\n        i += 1\n    return i - 1\n\ndef find_divisor(n):\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return i\n    return n\n\ndef solve(n, b):\n    a = []\n    for i in range(n):\n        if b[2 * i] == b[2 * i + 1]:\n            a.append(find_prime(b[2 * i]))\n        else:\n            a.append(b[2 * i] * b[2 * i + 1] // find_divisor(b[2 * i] * b[2 * i + 1]))\n    return a\n\nn = int(input())\nb = list(map(int, input().split()))\na = solve(n, b)\nprint(*a)\n']
2022-04-18 23:39:58.161018 size on output set 2
2022-04-18 23:39:58.161029 num operations 1
2022-04-18 23:39:58.161036 size on input set 1
2022-04-18 23:40:00.948401 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\n\ndef is_prime(n):\n    if n <= 1:\n        return False\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    for i in range(5, int(math.sqrt(n)) + 1, 6):\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n    return True\n\nn = int(input())\nb = list(map(int, input().split()))\n\na = []\n\nfor i in range(n):\n    if is_prime(b[i]):\n        a.append(b[i])\n    else:\n        a.append(b[i] // b[n - i - 1])\n\nprint(*a)\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\ndef is_prime(n):\n    if n <= 1:\n        return False\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    for i in range(5, int(math.sqrt(n)) + 1, 6):\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n    return True\n\nn = int(input())\nb = list(map(int, input().split()))\n\na = []\n\nfor i in range(n):\n    if is_prime(b[i]):\n        a.append(b[i])\n    else:\n        a.append(b[i] // b[n + i])\n\nprint(*a)\n"
    }
  ],
  "created": 1650325198,
  "object": "edit"
}
2022-04-18 23:40:00.948604 fix syntax errors 2 ['\nimport math\n\ndef is_prime(n):\n    if n <= 1:\n        return False\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    for i in range(5, int(math.sqrt(n)) + 1, 6):\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n    return True\n\nn = int(input())\nb = list(map(int, input().split()))\n\na = []\n\nfor i in range(n):\n    if is_prime(b[i]):\n        a.append(b[i])\n    else:\n        a.append(b[i] // b[n - i - 1])\n\nprint(*a)\n', '\nimport math\n\ndef is_prime(n):\n    if n <= 1:\n        return False\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    for i in range(5, int(math.sqrt(n)) + 1, 6):\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n    return True\n\nn = int(input())\nb = list(map(int, input().split()))\n\na = []\n\nfor i in range(n):\n    if is_prime(b[i]):\n        a.append(b[i])\n    else:\n        a.append(b[i] // b[n + i])\n\nprint(*a)\n']
2022-04-18 23:40:00.948635 size on output set 2
