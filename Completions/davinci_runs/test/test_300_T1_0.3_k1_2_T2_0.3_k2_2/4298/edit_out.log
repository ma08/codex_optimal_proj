2022-04-18 23:59:36.581607 num operations 1
2022-04-18 23:59:36.581627 size on input set 1
2022-04-18 23:59:38.655955 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nN, D = map(int, sys.stdin.readline().split())\n\nif N <= 2*D:\n    print(1)\nelse:\n    print(2)\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nN, D = map(int, sys.stdin.readline().split())\n\nif N <= 2*D:\n    print(1)\nelse:\n    print(2)\n"
    }
  ],
  "created": 1650326376,
  "object": "edit"
}
2022-04-18 23:59:38.656177 fix syntax errors 2 ['\nimport sys\n\nN, D = map(int, sys.stdin.readline().split())\n\nif N <= 2*D:\n    print(1)\nelse:\n    print(2)\n', '\nimport sys\n\nN, D = map(int, sys.stdin.readline().split())\n\nif N <= 2*D:\n    print(1)\nelse:\n    print(2)\n']
2022-04-18 23:59:38.656201 size on output set 1
2022-04-18 23:59:38.656213 num operations 1
2022-04-18 23:59:38.656219 size on input set 1
2022-04-18 23:59:40.600137 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, D = map(int, input().split())\n\n# The minimum number of inspectors is the maximum number of trees that can be inspected by one inspector.\n# This can be achieved by placing an inspector at the leftmost tree that can inspect the rightmost tree.\nprint(-(-N // (2 * D + 1)))\n"
    },
    {
      "index": 1,
      "text": "\nN, D = map(int, input().split())\n\n# The minimum number of inspectors is the maximum number of trees that can be inspected by one inspector.\n# This can be achieved by placing an inspector at the leftmost tree that can inspect the rightmost tree.\nprint(-(-N // (2 * D + 1)))\n"
    }
  ],
  "created": 1650326378,
  "object": "edit"
}
2022-04-18 23:59:40.600329 fix syntax errors 2 ['\nN, D = map(int, input().split())\n\n# The minimum number of inspectors is the maximum number of trees that can be inspected by one inspector.\n# This can be achieved by placing an inspector at the leftmost tree that can inspect the rightmost tree.\nprint(-(-N // (2 * D + 1)))\n', '\nN, D = map(int, input().split())\n\n# The minimum number of inspectors is the maximum number of trees that can be inspected by one inspector.\n# This can be achieved by placing an inspector at the leftmost tree that can inspect the rightmost tree.\nprint(-(-N // (2 * D + 1)))\n']
2022-04-18 23:59:40.600355 size on output set 1
