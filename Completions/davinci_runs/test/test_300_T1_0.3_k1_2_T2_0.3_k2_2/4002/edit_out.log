2022-04-18 23:19:40.256315 num operations 1
2022-04-18 23:19:40.256328 size on input set 1
2022-04-18 23:19:45.264771 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, m, k = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    dp = [[0] * (k + 1) for i in range(m + 1)]\n    for i in range(n):\n        for j in range(m):\n            for x in range(k):\n                dp[j + 1][(x + a[i][j]) % k] = max(dp[j + 1][(x + a[i][j]) % k], dp[j][x] + a[i][j])\n    print(dp[m][0])\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, m, k = map(int, input().split()) # n : number of rows, m : number of cols, k : divisor\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    dp = [[0] * (k + 1) for i in range(m + 1)] # dp[i][j] : max sum of the first i cols with remainder j\n    for i in range(n):\n        for j in range(m):\n            for x in range(k):\n                dp[j + 1][(x + a[i][j]) % k] = max(dp[j + 1][(x + a[i][j]) % k], dp[j][x] + a[i][j])\n    print(dp[m][0])\n\nmain()\n"
    }
  ],
  "created": 1650323981,
  "object": "edit"
}
2022-04-18 23:19:45.265048 fix syntax errors 2 ['\ndef main():\n    n, m, k = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    dp = [[0] * (k + 1) for i in range(m + 1)]\n    for i in range(n):\n        for j in range(m):\n            for x in range(k):\n                dp[j + 1][(x + a[i][j]) % k] = max(dp[j + 1][(x + a[i][j]) % k], dp[j][x] + a[i][j])\n    print(dp[m][0])\n\nmain()\n', '\n\ndef main():\n    n, m, k = map(int, input().split()) # n : number of rows, m : number of cols, k : divisor\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    dp = [[0] * (k + 1) for i in range(m + 1)] # dp[i][j] : max sum of the first i cols with remainder j\n    for i in range(n):\n        for j in range(m):\n            for x in range(k):\n                dp[j + 1][(x + a[i][j]) % k] = max(dp[j + 1][(x + a[i][j]) % k], dp[j][x] + a[i][j])\n    print(dp[m][0])\n\nmain()\n']
2022-04-18 23:19:45.265095 size on output set 2
2022-04-18 23:19:45.265111 num operations 1
2022-04-18 23:19:45.265119 size on input set 1
2022-04-18 23:19:47.532105 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m, k = map(int, input().split())\n\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0] * (m + 1) for i in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if j <= m // 2:\n            dp[i][j] = max(dp[i][j - 1], dp[i - 1][j], dp[i - 1][j - 1] + a[i - 1][j - 1])\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i - 1][j])\n\nprint(dp[n][m - m // 2])\n"
    },
    {
      "index": 1,
      "text": "\nn, m, k = map(int, input().split())\n\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0] * (m + 1) for i in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if j <= m // 2:\n            dp[i][j] = max(dp[i][j - 1], dp[i - 1][j], dp[i - 1][j - 1] + a[i - 1][j - 1])\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i - 1][j])\n\nprint(dp[n][m - m // 2])\n"
    }
  ],
  "created": 1650323985,
  "object": "edit"
}
2022-04-18 23:19:47.532340 fix syntax errors 2 ['\nn, m, k = map(int, input().split())\n\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0] * (m + 1) for i in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if j <= m // 2:\n            dp[i][j] = max(dp[i][j - 1], dp[i - 1][j], dp[i - 1][j - 1] + a[i - 1][j - 1])\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i - 1][j])\n\nprint(dp[n][m - m // 2])\n', '\nn, m, k = map(int, input().split())\n\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0] * (m + 1) for i in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if j <= m // 2:\n            dp[i][j] = max(dp[i][j - 1], dp[i - 1][j], dp[i - 1][j - 1] + a[i - 1][j - 1])\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i - 1][j])\n\nprint(dp[n][m - m // 2])\n']
2022-04-18 23:19:47.532374 size on output set 1
