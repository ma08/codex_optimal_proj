["\ndef main():\n    n = int(input())\n    v = list(map(int, input().split()))\n    v.sort()\n    while len(v) > 1:\n        a = v.pop()\n        b = v.pop()\n        v.append((a + b) / 2)\n        v.sort()\n    print(v[0])\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport heapq\n\ndef main():\n    n = int(input())\n    ingredients = [int(x) for x in input().split()]\n    heapq.heapify(ingredients)\n    while len(ingredients) > 1:\n        heapq.heappush(ingredients, (heapq.heappop(ingredients) + heapq.heappop(ingredients)) / 2)\n    print(int(ingredients[0]))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport heapq\n\ndef main():\n    n = int(input())\n    ingredients = [int(x) for x in input().split()] # ingredients = [1, 2, 3, 4, 5]\n    heapq.heapify(ingredients) # ingredients = [1, 2, 3, 4, 5]\n    while len(ingredients) > 1: # len(ingredients) = 5\n        heapq.heappush(ingredients, (heapq.heappop(ingredients) + heapq.heappop(ingredients)) / 2) # ingredients = [1.5, 2.5, 3, 4, 5]\n    print(ingredients[0]) # 1.5\n\nif __name__ == '__main__':\n    main()\n"]