2022-04-18 23:22:23.562995 num operations 1
2022-04-18 23:22:23.563016 size on input set 1
2022-04-18 23:22:26.867879 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split())\n    print(min(a, b, c) * 7 + min(a, b) * 2 + min(a, c) * 2 + min(b, c) * 2)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split())\n    print(min(a, b, c) * 7 + min(a, b) * 2 + min(a, c) * 2 + min(b, c) * 2 + 4)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650324143,
  "object": "edit"
}
2022-04-18 23:22:26.868098 fix syntax errors 2 ["\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split())\n    print(min(a, b, c) * 7 + min(a, b) * 2 + min(a, c) * 2 + min(b, c) * 2)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split())\n    print(min(a, b, c) * 7 + min(a, b) * 2 + min(a, c) * 2 + min(b, c) * 2 + 4)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-18 23:22:26.868122 size on output set 2
2022-04-18 23:22:26.868132 num operations 1
2022-04-18 23:22:26.868138 size on input set 1
2022-04-18 23:23:06.052327 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split())\n    print(min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split())\n    print(min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650324146,
  "object": "edit"
}
2022-04-18 23:23:06.052663 fix syntax errors 2 ["\n\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split())\n    print(min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split())\n    print(min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-18 23:23:06.052791 size on output set 1
