2022-04-18 23:56:27.485064 num operations 1
2022-04-18 23:56:27.485085 size on input set 1
2022-04-18 23:56:31.413507 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nprint(input().replace('2017', '2018'))\n"
    },
    {
      "index": 1,
      "text": "\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    }
  ],
  "created": 1650326187,
  "object": "edit"
}
2022-04-18 23:56:31.413747 fix syntax errors 2 ["\nprint(input().replace('2017', '2018'))\n", "\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"]
2022-04-18 23:56:31.413781 size on output set 2
2022-04-18 23:56:31.413794 num operations 1
2022-04-18 23:56:31.413800 size on input set 1
2022-04-18 23:56:34.111912 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs, reverse=True)\ntimes = sorted(times, reverse=True)\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n"
    },
    {
      "index": 1,
      "text": "\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs, reverse=True)\ntimes = sorted(times, reverse=True)\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n"
    }
  ],
  "created": 1650326191,
  "object": "edit"
}
2022-04-18 23:56:34.112105 fix syntax errors 2 ['\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs, reverse=True)\ntimes = sorted(times, reverse=True)\n\nif times[0] > T:\n    print("TLE")\nelse:\n    print(costs[0])\n', '\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs, reverse=True)\ntimes = sorted(times, reverse=True)\n\nif times[0] > T:\n    print("TLE")\nelse:\n    print(costs[0])\n']
2022-04-18 23:56:34.112129 size on output set 1
