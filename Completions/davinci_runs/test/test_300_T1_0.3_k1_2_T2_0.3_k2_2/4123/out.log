2022-04-18 20:36:14.064264 """
Two-gram is an ordered pair (i.e. string of length two) of capital Latin letters. For example, "AZ", "AA", "ZA" — three distinct two-grams.

You are given a string $s$ consisting of $n$ capital Latin letters. Your task is to find any two-gram contained in the given string as a substring (i.e. two consecutive characters of the string) maximal number of times. For example, for string $s$ = "BBAABBBA" the answer is two-gram "BB", which contained in $s$ three times. In other words, find any most frequent two-gram.

Note that occurrences of the two-gram can overlap with each other.


-----Input-----

The first line of the input contains integer number $n$ ($2 \le n \le 100$) — the length of string $s$. The second line of the input contains the string $s$ consisting of $n$ capital Latin letters.


-----Output-----

Print the only line containing exactly two capital Latin letters — any two-gram contained in the given string $s$ as a substring (i.e. two consecutive characters of the string) maximal number of times.


-----Examples-----
Input
7
ABACABA

Output
AB

Input
5
ZZZAA

Output
ZZ



-----Note-----

In the first example "BA" is also valid answer.

In the second example the only two-gram "ZZ" can be printed because it contained in the string "ZZZAA" two times.
"""
2022-04-18 20:36:14.064288 --------------------------
2022-04-18 20:36:38.326598 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    s = input()\n    two_grams = {}\n    for i in range(n-1):\n        two_gram = s[i:i+2]\n        if two_gram in two_grams:\n            two_grams[two_gram] += 1\n        else:\n            two_grams[two_gram] = 1\n    max_count = 0\n    max_two_gram = \"\"\n    for two_gram in two_grams:\n        if two_grams[two_gram] > max_count:\n            max_count = two_grams[two_gram]\n            max_two_gram = two_gram\n    print(max_two_gram)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn = int(input())\ns = input()\n\nmax_count = 0\nmax_two_gram = \"\"\n\nfor i in range(n-1):\n    two_gram = s[i:i+2]\n    count = s.count(two_gram)\n    if count > max_count:\n        max_count = count\n        max_two_gram = two_gram\n\nprint(max_two_gram)"
    }
  ],
  "created": 1650314174,
  "id": "cmpl-4ySOUIgNQtXkI4o7csDvw9CmhoD3T",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-18 20:36:38.326877 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    s = input()\n    two_grams = {}\n    for i in range(n-1):\n        two_gram = s[i:i+2]\n        if two_gram in two_grams:\n            two_grams[two_gram] += 1\n        else:\n            two_grams[two_gram] = 1\n    max_count = 0\n    max_two_gram = \"\"\n    for two_gram in two_grams:\n        if two_grams[two_gram] > max_count:\n            max_count = two_grams[two_gram]\n            max_two_gram = two_gram\n    print(max_two_gram)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-18 20:36:38.326914 REASON stop
2022-04-18 20:36:38.328124 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn = int(input())\ns = input()\n\nmax_count = 0\nmax_two_gram = \"\"\n\nfor i in range(n-1):\n    two_gram = s[i:i+2]\n    count = s.count(two_gram)\n    if count > max_count:\n        max_count = count\n        max_two_gram = two_gram\n\nprint(max_two_gram)"
}
2022-04-18 20:36:38.328227 REASON stop
