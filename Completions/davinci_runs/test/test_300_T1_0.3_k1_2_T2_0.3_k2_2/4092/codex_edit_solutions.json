["\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = [0] * (n + 1) # prefix sum\n    for i in range(n):\n        s[i + 1] = s[i] + a[i]\n    d = {}\n    ans = 0\n    for i in range(n + 1):\n        if s[i] in d:\n            ans = max(ans, i - d[s[i]])\n        else:\n            d[s[i]] = i\n    print(n - ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input()) #number of elements\n    a = list(map(int, input().split())) #list of elements\n    s = [0] * (n + 1) #list of sums\n    for i in range(n): #summing up\n        s[i + 1] = s[i] + a[i] \n    d = {} #dictionary of sums\n    ans = 0 #maximal length of subarray\n    for i in range(n + 1): #iterating through sums\n        if s[i] in d: #if sum is in dictionary\n            ans = max(ans, i - d[s[i]]) #update maximal length\n        else: #if sum is not in dictionary\n            d[s[i]] = i #add sum to dictionary\n    print(n - ans) #print result\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = [0] * (n + 1)\n    for i in range(n):\n        s[i + 1] = s[i] + a[i]\n    d = {}\n    for i in range(n + 1):\n        if s[i] not in d:\n            d[s[i]] = i\n        else:\n            print(i - d[s[i]])\n            return\n    print(0)\n\nif __name__ == '__main__':\n    main()\n"]