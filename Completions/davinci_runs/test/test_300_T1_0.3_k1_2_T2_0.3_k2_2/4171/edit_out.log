2022-04-18 23:42:39.939379 num operations 1
2022-04-18 23:42:39.939400 size on input set 1
2022-04-18 23:42:53.723278 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#-----Solution-----\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# Sort the array in descending order.\na.sort(reverse=True)\n\n# Find the maximum number of operations required to make all elements equal.\n# This is the number of operations required to make the largest element equal to the smallest element.\nmax_ops = a[0] - a[-1]\n\n# Find the minimum number of operations required to make all elements equal.\n# This is the number of operations required to make the smallest element equal to the largest element divided by 2.\nmin_ops = (a[0] - a[-1]) // 2\n\n# If the minimum number of operations required to make all elements equal is less than the maximum number of operations required to make all elements equal,\n# then we can make all elements equal in the minimum number of operations.\nif min_ops < max_ops:\n    print(min_ops)\n\n# If the minimum number of operations required to make all elements equal is greater than or equal to the maximum number of operations required to make all elements equal,\n# then we can make all elements equal in the maximum number of operations.\nelse:\n    # Find the number of elements that are equal to the largest element.\n    num_largest = a.count(a[0])\n\n    # If the number of elements that are equal to the largest element is greater than or equal to the number of elements required to be equal,\n    # then we can make all elements equal in the maximum number of operations.\n    if num_largest >= k:\n        print(max_ops)\n\n    # If the number of elements that are equal to the largest element is less than the number of elements required to be equal,\n    # then we can make all elements equal in the maximum number of operations plus the number of operations required to make the largest element equal to the second largest element.\n    else:\n        print(max_ops + (a[1] - a[0]) // 2)\n"
    },
    {
      "index": 1,
      "text": "\n\n# -----Solution-----\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# Sort the array in descending order\na.sort(reverse=True)\n\n# Find the maximum number of operations required to make all elements equal\n# This is the number of operations required to make the largest element equal to the smallest element\nmax_ops = a[0] - a[-1]\n\n# Find the minimum number of operations required to make all elements equal\n# This is the number of operations required to make the smallest element equal to the largest element divided by 2\nmin_ops = (a[0] - a[-1]) // 2\n\n# If the minimum number of operations required to make all elements equal is less than the maximum number of operations required to make all elements equal\n# Then we can make all elements equal in the minimum number of operations\nif min_ops < max_ops:\n    print(min_ops)\n\n# If the minimum number of operations required to make all elements equal is greater than or equal to the maximum number of operations required to make all elements equal\n# Then we can make all elements equal in the maximum number of operations\nelse:\n    # Find the number of elements that are equal to the largest element\n    num_largest = a.count(a[0])\n\n    # If the number of elements that are equal to the largest element is greater than or equal to the number of elements required to be equal\n    # Then we can make all elements equal in the maximum number of operations\n    if num_largest >= k:\n        print(max_ops)\n\n    # If the number of elements that are equal to the largest element is less than the number of elements required to be equal\n    # Then we can make all elements equal in the maximum number of operations plus the number of operations required to make the largest element equal to the second largest element\n    else:\n        print(max_ops + (a[1] - a[0]) // 2)\n"
    }
  ],
  "created": 1650325360,
  "object": "edit"
}
2022-04-18 23:42:53.723510 fix syntax errors 2 ['\n#-----Solution-----\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# Sort the array in descending order.\na.sort(reverse=True)\n\n# Find the maximum number of operations required to make all elements equal.\n# This is the number of operations required to make the largest element equal to the smallest element.\nmax_ops = a[0] - a[-1]\n\n# Find the minimum number of operations required to make all elements equal.\n# This is the number of operations required to make the smallest element equal to the largest element divided by 2.\nmin_ops = (a[0] - a[-1]) // 2\n\n# If the minimum number of operations required to make all elements equal is less than the maximum number of operations required to make all elements equal,\n# then we can make all elements equal in the minimum number of operations.\nif min_ops < max_ops:\n    print(min_ops)\n\n# If the minimum number of operations required to make all elements equal is greater than or equal to the maximum number of operations required to make all elements equal,\n# then we can make all elements equal in the maximum number of operations.\nelse:\n    # Find the number of elements that are equal to the largest element.\n    num_largest = a.count(a[0])\n\n    # If the number of elements that are equal to the largest element is greater than or equal to the number of elements required to be equal,\n    # then we can make all elements equal in the maximum number of operations.\n    if num_largest >= k:\n        print(max_ops)\n\n    # If the number of elements that are equal to the largest element is less than the number of elements required to be equal,\n    # then we can make all elements equal in the maximum number of operations plus the number of operations required to make the largest element equal to the second largest element.\n    else:\n        print(max_ops + (a[1] - a[0]) // 2)\n', '\n\n# -----Solution-----\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# Sort the array in descending order\na.sort(reverse=True)\n\n# Find the maximum number of operations required to make all elements equal\n# This is the number of operations required to make the largest element equal to the smallest element\nmax_ops = a[0] - a[-1]\n\n# Find the minimum number of operations required to make all elements equal\n# This is the number of operations required to make the smallest element equal to the largest element divided by 2\nmin_ops = (a[0] - a[-1]) // 2\n\n# If the minimum number of operations required to make all elements equal is less than the maximum number of operations required to make all elements equal\n# Then we can make all elements equal in the minimum number of operations\nif min_ops < max_ops:\n    print(min_ops)\n\n# If the minimum number of operations required to make all elements equal is greater than or equal to the maximum number of operations required to make all elements equal\n# Then we can make all elements equal in the maximum number of operations\nelse:\n    # Find the number of elements that are equal to the largest element\n    num_largest = a.count(a[0])\n\n    # If the number of elements that are equal to the largest element is greater than or equal to the number of elements required to be equal\n    # Then we can make all elements equal in the maximum number of operations\n    if num_largest >= k:\n        print(max_ops)\n\n    # If the number of elements that are equal to the largest element is less than the number of elements required to be equal\n    # Then we can make all elements equal in the maximum number of operations plus the number of operations required to make the largest element equal to the second largest element\n    else:\n        print(max_ops + (a[1] - a[0]) // 2)\n']
2022-04-18 23:42:53.723565 size on output set 2
2022-04-18 23:42:53.723576 num operations 1
2022-04-18 23:42:53.723582 size on input set 1
2022-04-18 23:42:57.563141 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    a = input()\n    print(a)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    if a[0] == a[-1]:\n        print(0)\n    else:\n        print(a[-1] - a[0])\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650325373,
  "object": "edit"
}
2022-04-18 23:42:57.563468 fix syntax errors 2 ["\n\ndef main():\n    n = int(input())\n    a = input()\n    print(a)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    if a[0] == a[-1]:\n        print(0)\n    else:\n        print(a[-1] - a[0])\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-18 23:42:57.563496 size on output set 2
