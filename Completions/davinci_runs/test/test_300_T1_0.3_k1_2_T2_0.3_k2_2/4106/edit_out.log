2022-04-18 23:33:47.371072 num operations 1
2022-04-18 23:33:47.371092 size on input set 1
2022-04-18 23:33:53.973050 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [[0]*(x+1) for _ in range(n+1)]  # \u521d\u671f\u5316\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            dp[i][j] = dp[i-1][j]  # \u9078\u3070\u306a\u3044\u5834\u5408\n            if i >= k:\n                dp[i][j] = max(dp[i][j], dp[i-k][j-1] + a[i-1])  # \u9078\u3076\u5834\u5408\n    print(dp[n][x])\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [[0]*(x+1) for _ in range(n+1)]  # dp[i][j] = i\u756a\u76ee\u307e\u3067\u306e\u30a2\u30a4\u30c6\u30e0\u3092\u4f7f\u3063\u3066j\u56de\u64cd\u4f5c\u3057\u305f\u3068\u304d\u306e\u4fa1\u5024\u306e\u6700\u5927\u5024\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            dp[i][j] = dp[i-1][j]  # i\u756a\u76ee\u306e\u30a2\u30a4\u30c6\u30e0\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\n            if i >= k:\n                dp[i][j] = max(dp[i][j], dp[i-k][j-1] + a[i-1])  # i\u756a\u76ee\u306e\u30a2\u30a4\u30c6\u30e0\u3092\u4f7f\u3046\u5834\u5408\n    print(dp[n][x])\n\nmain()\n"
    }
  ],
  "created": 1650324827,
  "object": "edit"
}
2022-04-18 23:33:53.973270 fix syntax errors 2 ['\n\ndef main():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [[0]*(x+1) for _ in range(n+1)]  # 初期化\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            dp[i][j] = dp[i-1][j]  # 選ばない場合\n            if i >= k:\n                dp[i][j] = max(dp[i][j], dp[i-k][j-1] + a[i-1])  # 選ぶ場合\n    print(dp[n][x])\n\nmain()\n', '\n\ndef main():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [[0]*(x+1) for _ in range(n+1)]  # dp[i][j] = i番目までのアイテムを使ってj回操作したときの価値の最大値\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            dp[i][j] = dp[i-1][j]  # i番目のアイテムを使わない場合\n            if i >= k:\n                dp[i][j] = max(dp[i][j], dp[i-k][j-1] + a[i-1])  # i番目のアイテムを使う場合\n    print(dp[n][x])\n\nmain()\n']
2022-04-18 23:33:53.973340 size on output set 2
2022-04-18 23:33:53.973352 num operations 1
2022-04-18 23:33:53.973358 size on input set 1
2022-04-18 23:33:55.880685 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\n    exit()\n\ndp = [[0] * (x + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if j < k:\n            dp[i][j] = dp[i - 1][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\n\nprint(dp[n][x])\n"
    },
    {
      "index": 1,
      "text": "\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\n    exit()\n\ndp = [[0] * (x + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if j < k:\n            dp[i][j] = dp[i - 1][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\n\nprint(dp[n][x])\n"
    }
  ],
  "created": 1650324834,
  "object": "edit"
}
2022-04-18 23:33:55.880924 fix syntax errors 2 ['\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\n    exit()\n\ndp = [[0] * (x + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if j < k:\n            dp[i][j] = dp[i - 1][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\n\nprint(dp[n][x])\n', '\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\n    exit()\n\ndp = [[0] * (x + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if j < k:\n            dp[i][j] = dp[i - 1][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\n\nprint(dp[n][x])\n']
2022-04-18 23:33:55.880954 size on output set 1
