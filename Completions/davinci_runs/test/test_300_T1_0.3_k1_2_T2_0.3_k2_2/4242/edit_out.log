2022-04-18 23:52:49.841990 num operations 1
2022-04-18 23:52:49.842008 size on input set 1
2022-04-18 23:52:51.913114 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().rstrip().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().rstrip().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])\n"
    }
  ],
  "created": 1650325969,
  "object": "edit"
}
2022-04-18 23:52:51.913395 fix syntax errors 2 ['import sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().rstrip().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])\n', '\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().rstrip().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])\n']
2022-04-18 23:52:51.913429 size on output set 2
2022-04-18 23:52:51.913441 num operations 1
2022-04-18 23:52:51.913448 size on input set 1
2022-04-18 23:53:00.254275 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\n# Read input and convert to integers\na, b, k = map(int, sys.stdin.readline().split()) # a, b, k = int(sys.stdin.readline().split())\n\n# Find all positive integers that divide both a and b\ndivisors = []\nfor i in range(1, min(a, b) + 1): # range(1, min(a, b) + 1)\n    if a % i == 0 and b % i == 0:\n        divisors.append(i)\n\n# Print the k-th largest positive integer that divides both a and b\nprint(divisors[-k]) # print divisors[-k]\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    # Read input\n    a, b, k = map(int, sys.stdin.readline().split())\n\n    # Find all positive integers that divide both a and b\n    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n\n    # Print the k-th largest positive integer that divides both a and b\n    print(divisors[-k])\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650325971,
  "object": "edit"
}
2022-04-18 23:53:00.254498 fix syntax errors 2 ['\n\nimport sys\n\n# Read input and convert to integers\na, b, k = map(int, sys.stdin.readline().split()) # a, b, k = int(sys.stdin.readline().split())\n\n# Find all positive integers that divide both a and b\ndivisors = []\nfor i in range(1, min(a, b) + 1): # range(1, min(a, b) + 1)\n    if a % i == 0 and b % i == 0:\n        divisors.append(i)\n\n# Print the k-th largest positive integer that divides both a and b\nprint(divisors[-k]) # print divisors[-k]\n', "\nimport sys\n\ndef main():\n    # Read input\n    a, b, k = map(int, sys.stdin.readline().split())\n\n    # Find all positive integers that divide both a and b\n    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n\n    # Print the k-th largest positive integer that divides both a and b\n    print(divisors[-k])\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-18 23:53:00.254528 size on output set 2
