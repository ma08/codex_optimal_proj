2022-04-18 21:38:05.941644 """
You are given positive integers A and B.
Find the K-th largest positive integer that divides both A and B.
The input guarantees that there exists such a number.

-----Constraints-----
 - All values in input are integers.
 - 1 \leq A, B \leq 100
 - The K-th largest positive integer that divides both A and B exists.
 - K \geq 1

-----Input-----
Input is given from Standard Input in the following format:
A B K

-----Output-----
Print the K-th largest positive integer that divides both A and B.

-----Sample Input-----
8 12 2

-----Sample Output-----
2

Three positive integers divides both 8 and 12: 1, 2 and 4.
Among them, the second largest is 2.
"""
2022-04-18 21:38:05.941664 --------------------------
2022-04-18 21:38:29.275744 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().rstrip().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().split())\n\n# Find all positive integers that divide both a and b\ndivisors = []\nfor i in range(1, min(a, b) + 1):\n    if a % i == 0 and b % i == 0:\n        divisors.append(i)\n\n# Print the k-th largest positive integer that divides both a and b\nprint(divisors[-k])"
    }
  ],
  "created": 1650317886,
  "id": "cmpl-4yTMMQBLP0TdQjIz9S6FOpuOylZYV",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-18 21:38:29.275982 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().rstrip().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])"
}
2022-04-18 21:38:29.276025 REASON stop
2022-04-18 21:38:29.277199 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().split())\n\n# Find all positive integers that divide both a and b\ndivisors = []\nfor i in range(1, min(a, b) + 1):\n    if a % i == 0 and b % i == 0:\n        divisors.append(i)\n\n# Print the k-th largest positive integer that divides both a and b\nprint(divisors[-k])"
}
2022-04-18 21:38:29.277285 REASON stop
