2022-04-18 23:24:07.023205 num operations 1
2022-04-18 23:24:07.023225 size on input set 1
2022-04-18 23:24:09.071536 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, sys.stdin.readline().split())))\n    projects = sorted(projects, key=lambda x: x[0])\n    count = 0\n    for project in projects:\n        if project[0] > r:\n            break\n        r += project[1]\n        if r < 0:\n            break\n        count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, sys.stdin.readline().split())))\n    projects = sorted(projects, key=lambda x: x[0])\n    count = 0\n    for project in projects:\n        if project[0] > r:\n            break\n        r += project[1]\n        if r < 0:\n            break\n        count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650324247,
  "object": "edit"
}
2022-04-18 23:24:09.071772 fix syntax errors 2 ["\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, sys.stdin.readline().split())))\n    projects = sorted(projects, key=lambda x: x[0])\n    count = 0\n    for project in projects:\n        if project[0] > r:\n            break\n        r += project[1]\n        if r < 0:\n            break\n        count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, sys.stdin.readline().split())))\n    projects = sorted(projects, key=lambda x: x[0])\n    count = 0\n    for project in projects:\n        if project[0] > r:\n            break\n        r += project[1]\n        if r < 0:\n            break\n        count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-18 23:24:09.071818 size on output set 1
2022-04-18 23:24:09.071835 num operations 1
2022-04-18 23:24:09.071843 size on input set 1
2022-04-18 23:24:14.712786 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1], reverse=True)\n    count = 0\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, r = map(int, input().split())  # n: number of projects, r: initial rating\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])  # sort by rating\n    count = 0\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650324249,
  "object": "edit"
}
2022-04-18 23:24:14.712991 fix syntax errors 2 ["\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1], reverse=True)\n    count = 0\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, r = map(int, input().split())  # n: number of projects, r: initial rating\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])  # sort by rating\n    count = 0\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-18 23:24:14.713043 size on output set 2
