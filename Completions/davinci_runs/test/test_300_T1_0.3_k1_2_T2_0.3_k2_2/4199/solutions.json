["n, limit = map(int, input().split())\nlst = list(map(int, input().split()))\ncount = 0\nfor i in range(n):\n    if lst[i] >= limit:\n        count += 1\n\nprint(count)", "N, K = map(int, input().split())\nh = map(int, input().split())\nride = 0\n\nfor cm in h:\n    if cm >= K:\n        ride = ride + 1\n    else:\n        continue\n\nprint(ride)", "N,K=list(map(int,input().split()))\nH=list(map(int,input().split()))\ns=0\nfor i in H:\n    if i>=K:\n        s=s+1\nprint(s)\n", "n,k=map(int,input().split())\nh=list(map(int,input().split()))\n\ncount=0\n\nfor i in h:\n    if i>=k:\n        count+=1\n\nprint(count)", "N, K = map(int, input().split())\nheight = list(map(int, input().split()))\n\n# N\u4eba\u3067\u904a\u5712\u5730\u306b\u904a\u3073\u306b\u3044\u304d\u307e\u3057\u305f\u3002\n# \u30b8\u30a7\u30c3\u30c8\u30b3\u30fc\u30b9\u30bf\u30fc\u306b\u4e57\u308b\u305f\u3081\u306b\u306f\u3001\u8eab\u9577\u304c Kcm\u4ee5\u4e0a \u5fc5\u8981\u3067\u3059\u3002\n# \u9ad8\u6a4b\u541b\u306e\u4ef2\u9593\u305f\u3061\u306e\u3046\u3061\u3001\u4e00\u756a\u4eba\u6c17\u306e\u30b8\u30a7\u30c3\u30c8\u30b3\u30fc\u30b9\u30bf\u30fc\u306b\u4e57\u308b\u3053\u3068\u306e\u3067\u304d\u308b\u4eba\u306e\u6570\u3092\u51fa\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\navailability = 0\n\nfor i in range(0, N):\n    if height[i] >= K:\n        availability += 1\n\nprint(availability)", "N, K = map(int,input().split())\ni = list(map(int,input().split()))\n\nans = 0\nfor hi in i:\n    if hi >= K:\n        ans += 1\nprint(ans)", "S_list = [input() for i in range(2)]\nN,K = map(int,S_list[0].split())    \nh_list = list(map(int,S_list[1].split()))\nnumber = 0\nfor i in h_list:\n    if i>=K:\n        number += 1\nprint(number) ", "N, K = map(int, input().split())\nH = list(map(int, input().split()))\ncount = 0\nfor h in H:\n    if h >= K:\n        count = count+1\nprint(count)", "n,k=map(int,input().split())\nh=list(map(int,input().split()))\nc=0\nfor e in h:\n    if e >= k:\n        c+=1\nprint(c)", "N, K = map(int, input().split())\nprint(sum([h >= K for h in map(int, input().split())]))", "n,k = map(int,input().split())\nh = list(map(int,input().split()))\nans = 0\nfor i in h:\n  if i >= k:\n    ans += 1\nprint(ans)", "num_persons, need_height = list(map(int, input().split()))\na = list(map(int, input().split()))\nheight_list = list(a)\n\ncount_height_ok = 0\n\nfor i in height_list:\n    if i >= need_height:\n        count_height_ok += 1\n\nprint(count_height_ok)\n", "mem_num, over_height = map(int, input().split())\nmembers_hgt = list(map(int, input().split()))\ncnt = 0\n\nfor i in members_hgt:\n    if i >= over_height:\n        cnt += 1\n\nprint(cnt)", "3\nimport sys\ninput = lambda: sys.stdin.readline().strip()\nn, k = [int(x) for x in input().split()]\nh = [int(x) for x in input().split()]\nprint((sum(1 for x in h if x >= k)))\n", "n, k = map(int, input().split())\nh = list(map(int, input().split()))\nc = 0\nfor i in h:\n  if i >= k:\n    c += 1\nprint(c)", "N, K = map(int,input().split())\nS = map(int,input().split())\n\nheight_list = list(S)\nride_person = 0\n\nfor i in height_list:\n    if i >= K:\n        ride_person += 1\n\nprint(ride_person)", "N, K = map(int, input().split())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n  if h[i] >= K: ans += 1\n    \nprint(ans)", "n, k = [int(i) for i in input().split()]\nh = [int(i) for i in input().split()]\ncnt = 0\nfor hi in h:\n  if hi >= k:\n    cnt += 1\nprint(cnt)", "n,k = map(int,input().split())\nh = list(map(int,input().split()))\n# \u30b8\u30a7\u30c3\u30c8\u30b3\u30fc\u30b9\u30bf\u30fc\u306e\u4e57\u308c\u308b\u4eba\u306e\u6570\nable_num = 0\n# \u30ea\u30b9\u30c8\u5185\u306e\u6570\u5b57\u3092\u53d6\u308a\u51fa\u3057\u3066\u3001\uff4b\u3088\u308a\u5927\u304d\u3051\u308c\u3070\u4e57\u308c\u308b\u4eba\u3092\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\nfor i in h:\n    if i >= k:\n        able_num += 1\nprint(able_num)", "n, k = map(int, input().split())\nH = list(map(int, input().split()))\nprint(sum(h >= k for h in H))", "N, K = list(map(int, input().split()))\nH = list(map(int, input().split()))\ncount = 0\nfor h in H:\n    if h >= K:\n        count = count+1\nprint(count)\n", "n,k = map(int,input().split())\nli = list(map(int,input().split()))\ncnt = 0\nfor i in li:\n    if i >= k:\n        cnt += 1\n\nprint(cnt)", "n,k = map(int,input().split())\nh = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n  if h[i] >= k:\n    ans += 1\nprint(ans)", "import numpy as np\n\nN, K = map(int, input().split())\nh = np.array(list(map(int, input().split())))\n\nprint(np.sum(h >= K))", "n,k=map(int,input().split())\nh=list(map(int,input().split()))\nans=0\nfor i in range(n):\n    if h[i]>=k:\n        ans+=1\nprint(ans)", "n, k = list(map(int, input().split()))\nh = list(map(int, input().split()))\n\ncnt = 0\n\nfor i in range(n):\n    if h[i] >= k:\n        cnt += 1\nprint(cnt)\n", "N, K = map(int, input().split())\nh = list(map(int, input().split()))\n\n\nprint(len([i for i in h if K <= i]))", "n,k=map(int,input().split())\nh=list(map(int,input().split()))\nans=0\nfor i in h:\n    if k<=i:\n        ans+=1\nprint(ans)", "n, k = list(map(int, input().split()))\nh = list(map(int, input().split()))\n\ndef answer(n: int, k: int, h: list) -> int:\n    ans = 0\n    for i in range(0, n):\n        if h[i] >= k:\n            ans += 1\n    return ans\n\nprint((answer(n, k, h)))\n", "N,K = map(int,input().split())\nh = [int(i) for i in input().split()]\nans = 0\nfor i in range(N):\n    if(h[i] >= K):\n        ans += 1\nprint(ans)", "n, k = map(int, input().split())\nh = list(map(int, input().split()))\n\nprint(len([i for i in h if i >= k]))", "N,K=map(int, input().split())\nH=list(map(int, input().split()))\n\nans=0\n\nfor h in H:\n\tif h>=K:\n\t\tans+=1\n\nprint(ans)", "n,k=map(int,input().split())\nh=list(map(int,input().split()))\nans=0\nfor i in range(n):\n  if h[i]>=k:\n    ans+=1\nprint(ans)", "N, K = list(map(int,input().split()))\nH = list(map(int,input().split()))\ns = 0\nfor i in H:\n    if K <= i:\n        s += 1\n\nprint(s)\n", "N, K = map(int,input().split())\nfriend = list(map(int,input().split()))\nclear = []\n\nfor i in friend:\n    if i >= K:\n        clear.append(i)\n\nprint(len(clear))", "N, K = map(int, input().split())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n  if h[i] >= K:\n    ans += 1\nprint(ans)", "N, K = map(int, input().split())\nh = list(map(int, input().split()))\n\nh_l = [int(i) for i in h if i >= K]\n\nprint(len(h_l))", "N,K=list(map(int,input().split()))\nh=input()\n\ndef ans142(N:int, K:int, h:list):\n    N=int(N)\n    K=int(K)\n    count=0\n    if N==1:\n        h=int(h)\n        if h>=K:\n           return(1)\n        elif h<K:\n           return(0)\n    else:\n     h=h.split()\n     for i in range(0,N):\n        if int(h[i])>=K:\n            count+=1\n     return(count)\nprint((ans142(N,K,h)))\n", "N, K = map(int, input().split())\nh_list = list(map(int, input().split()))\nans = 0\nfor h in h_list:\n    if h >= K:\n        ans += 1\nprint(ans)", "total_people, min_height = map(int, input().split())\nheight = map(int, input().split())\nrideable_people = 0\nfor i in height:\n    if i >= min_height:\n        rideable_people += 1\nprint(rideable_people)", "N, K = map(int, input().split())\nH = list(map(int, input().split()))\nprint(len(list(filter(lambda x: x >= K, H))))", "N,K=map(int,input().split())\nhi=list(map(int,input().split()))\nHI=[i for i in hi if i>=K]\nprint(len(HI))", "n,k=map(int,input().split());print(sum(i>=k for i in map(int,input().split())))", "n, k = map(int, input().split())\nH = list(map(int, input().split()))\n\nans = 0\n\nfor h in H:\n  if h >= k:\n    ans += 1\n\nprint(ans)", "N, K = map(int, input().split())\nh = list(map(int, input().split()))\nprint(sum(1 if t >= K else 0 for t in h))", "N, K = map(int, input().split())\nlst = list(map(int, input().split()))\nans = 0\n\nfor i in lst:\n    if i >= K:\n        ans += 1\n\nprint(ans)", "n,k=map(int,input().split())\ns=0\nfor m in map(int,input().split()):\n  if m>=k:s+=1\nprint(s)", "N,K = map(int,input().split())\nh = list(map(int,input().split()))\n\nans = 0\nfor i in range(N):\n    if h[i] >= K:\n        ans += 1\n\nprint(ans)", "n,k=map(int, input().split())\nh=list(map(int, input().split()))\ncount=0\nfor i in range(n):\n  if h[i]>=k:\n    count+=1\nprint(count)", "n,k = list(map(int,input().split()))\nfriend = list(map(int,input().split()))\n\ncount = 0\nfor x in friend:\n  if x >= k:\n    count += 1\n\nprint(count)\n", "n, k = list(map(int, input().split()))\nh = list(map(int, input().split()))\n\nans = len([i for i in h if i >= k])\nprint(ans)\n", "N,K = map(int,input().split())\nh = list(map(int,input().split()))\ncount = 0\n\n\nfor i in range(N):\n    if h[i] >= K:\n        count += 1\n\nprint(count)", "N,K = map(int,input().split())\nh = list(map(int,input().split()))\n\nx = 0\nfor i in h:\n    if i >= K:\n        x += 1\nprint(x)", "n,k=map(int,input().split())\nh=list(map(int,input().split()))\nans=0\nfor i in h:\n    if(i>=k):\n        ans+=1\nprint(ans)", "# K\u3088\u308a\u5927\u304d\u3044\u3084\u3064\u3092\u62bd\u51fa\u3057\u3066len\u3067\u8981\u7d20\u3092\u8fd4\u3059\nN, K = list(map(int, input().split()))\nh = list(map(int, input().split()))\n\npossible = []\n\nfor i in h:\n    if i >= K:\n        possible.append(i)\n\nprint((len(possible)))\n", "from bisect import bisect_left\nn, k = list(map(int, input().split()))\nh = list(map(int, input().split()))\nh.sort()\ni = bisect_left(h, k)\nprint((n-i))\n", "x, y = map(int, input().split())\nnum_list = [num for num in map(int, input().split()) if num >= y]\nprint(len(num_list))", "N, K = map(int, input().split())\nheights = list(map(int, input().split()))\n\nresult = 0\n\nfor h in heights:\n    if h >= K:\n        result += 1\nprint(result)", "n, k = list(map(int, input().split(' ')))\nh = list(map(int, input().split(' ')))\nprint((sum(i >= k for i in h)))\n", "n, h = map(int, input().split())\nshin = list(map(int, input().split()))\ncount = 0\nfor i in shin:\n    if i >= h:\n        count += 1\nprint(count)", "N, K = map(int, input().split())\nh = list(map(int, input().split()))\n\ncount = 0\nfor i in h:\n    if i >= K:\n        count += 1\nprint(count)", "N, K = map(int,input().split())\nh = list(map(int,input().split()))\n\nanswer = 0\n\nfor i in h:\n    if i >= K:\n        answer += 1\n\nprint(answer)", "n,k=map(int,input().split())\nl=list(map(int,input().split()))\nans=sum(x>=k for x in l)\nprint(ans)", "n,k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\nres = 0\nfor i in range(n):\n  if k <= a[i]:\n    res += 1\nprint(res)", "n,k = map(int, input().split())\nH = list(map(int, input().split()))\n\ncnt = 0\n\nfor i in range(n):\n    cnt += H[i] >= k\n\nprint(cnt)", "N, K = map(int, input().split())\nh = list(map(int, input().split()))\n\nperson = 0\n\nfor i in range(0, N):\n    if h[i] >= K:\n        person += 1\n\nprint(person)", "N, K = map(int, input().split())\nH = map(int, input().split())\nheight_list = list(H)\n\nride = 0\n\nfor i in height_list:\n    if i >= K:\n        ride += 1\n\nprint(ride)", "N, K = map(int,input().split())\nh = list(map(int,input().split()))\n\nans = 0\nfor h_ in h:\n    if h_ >= K:\n        ans += 1\nprint(ans)", "n,k = map(int,input().split())\nh = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n    if h[i] >= k:\n        ans += 1\nprint(ans)", "# \u9ad8\u6a4b\u541b\u306e\u4ef2\u9593\u305f\u3061\u306f N \u4eba\u3067\u904a\u5712\u5730\u306b\u904a\u3073\u306b\u3044\u304d\u307e\u3057\u305f\u3002 \u904a\u5712\u5730\u306e\u4e00\u756a\u4eba\u6c17\u306e\u30b8\u30a7\u30c3\u30c8\u30b3\u30fc\u30b9\u30bf\u30fc\u306b\u4e57\u308b\u305f\u3081\u306b\u306f\u3001\u8eab\u9577\u304c K cm\u4ee5\u4e0a\u5fc5\u8981\u3067\u3059\u3002\n# \u9ad8\u6a4b\u541b\u306e i \u756a\u76ee\u306e\u4ef2\u9593\u306e\u8eab\u9577\u306f h i cm \u3067\u3059\u3002 \u9ad8\u6a4b\u541b\u306e\u4ef2\u9593\u305f\u3061\u306e\u3046\u3061\u3001\u4e00\u756a\u4eba\u6c17\u306e\u30b8\u30a7\u30c3\u30c8\u30b3\u30fc\u30b9\u30bf\u30fc\u306b\u4e57\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u4eba\u306e\u6570\u3092\u6c42\u3081\u3066\u304f\u3060\u3055\u3044\u3002\n\nN,K = map(int,input().split())\nh = list(map(int,input().split()))\n\nx = 0\nfor i in h:\n    if i >= K:\n        x += 1\n\nprint(x)", "N,K=list(map(int,input().split()))\nh=list(map(int,input().split()))\nprint((sum(x>=K for x in h)))\n", "n, k = map(int,input().split())\nh = list(map(int,input().split()))\ncount = 0\n\nfor i in range(n):\n  if h[i] >= k:\n    count += 1\n\nprint(count)", "def atc_142b(NK_input: str, hi_input: str) -> int:\n    N, K = list(map(int, NK_input.split(\" \")))\n    hi = [int(i) for i in hi_input.split(\" \")]\n    hi = sorted(hi)\n    for i in range(0, len(hi)):\n        if hi[i] >= K:\n            return len(hi) - i\n    return 0\n\n\nNK_input_value = input()\nhi_input_value = input()\nprint((atc_142b(NK_input_value, hi_input_value)))\n", "n,k=list(map(int,input().split()))\nh=list(map(int,input().split()))\nans=0\nfor x in h:\n    if x>=k:\n        ans+=1\nprint(ans)\n", "\ndef answer(n: int, k: int, h: []) -> int:\n    return len(list(i for i in h if k <= i))\n\n\ndef main():\n    n, k = list(map(int, input().split()))\n    h = list(map(int, input().split()))\n    print((answer(n, k, h)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n,k =list(map(int, input().split()))\n\nh = list(map(int, input().split()))\n\n# n = int(input())\n# s = [map(int, input()) for i in range(3)]\n\ncount = 0\nfor i in range (0,n):\n    if h[i] < k:\n        count+=1\n\nprint((n-count))\n", "N, K = map(int, input().split())\nh = list(map(int, input().split()))\n\na = 0\nfor i in h:\n    if i >= K:\n     a += 1\n\nprint(a)", "n,k = map(int,input().split())\nh = list(map(int,input().split()))\nprint(len([h[i] for i in range(n) if h[i]>=k]))", "n, k = map(int, input().split())\nlist01 = input().split()\nlist02 = [int(a) for a in list01]\nx = 0\nfor i in list02:\n    if i >= k:\n        x += 1\n    else:\n        pass\nprint(x)", "def atc_142b(NK_input: str, hi_input: str) -> int:\n    N, K = map(int, NK_input.split(\" \"))\n    hi = [int(i) for i in hi_input.split(\" \")]\n    hi = sorted(hi)\n    for i in range(0, len(hi)):\n        if hi[i] >= K:\n            return len(hi) - i\n    return 0\n\n\nNK_input_value = input()\nhi_input_value = input()\nprint(atc_142b(NK_input_value, hi_input_value))", "n,k = list(map(int, input().split()))\nh = list(map(int, input().split()))\nprint(sum(height >= k for height in h))", "N, K = map(int, input().split())\nh = list(map(int, input().split()))\n\nanswer = sum(i >= K for i in h)\n\nprint(answer)", "n,k = map(int, input().split())\na= list(map(int, input().split()))\no=0\ni=0\n\nfor i in range(n):\n    if a[i]>=k:\n        o+=1\n\nprint(o)", "N, K = map(int, input().split())\nl = list(map(int, input().split()))\n\ncnt = 0\nfor i in l:\n    if i >= K:\n        cnt = cnt + 1\n\nprint(cnt)", "N, K = map(int, input().split())\nh = list(map(int, input().split()))\nprint(sum(h[i] >= K for i in range(N)))", "import numpy as np\n\nn,k=list(map(int,input().split()))\nh=np.array(list(map(int,input().split())))\n\nprint((np.count_nonzero(h-k>=0)))\n", "# B - Roller Coaster\n\n#  N K\nN, K = list(map(int, input().split()))\nmy_list = list(map(int, input().split(maxsplit=N)))\nanswer = 0\n\nfor i in range(0, N):\n    if my_list[i] >= K:\n        answer += 1\n\nprint(answer)\n", "n, k = list(map(int, input().split(' ')))\nh = list(map(int, input().split(' ')))\nans = 0\nfor i in range(len(h)):\n    if h[i] >= k:\n        ans += 1\nprint(ans)\n", "N,K = map(int, input().split())\n\ndata = list(map(int,input().split()))\ncnt =0\n\nfor i in range(len(data)):\n    if data[i]>= K:\n        cnt += 1\nprint(cnt)", "n,k=map(int,input().split())\nxlist =list(map(int,input().split()))\ncount = 0\nfor i in range(n):\n  if xlist[i]>=k:\n    count+=1\nprint(count)", "import bisect\ndef resolve():\n    n,k = map(int,input().split())\n    h = sorted(list(map(int,input().split())))\n    print(n-bisect.bisect_left(h,k))\nresolve()", "N, K = [int(n) for n in input().split()]\nh = [int(n) for n in input().split()  if int(n) >= K ]\nprint(len(h))", "n,k=list(map(int ,input().split()))\nh=list(map(int ,input().split()))\ncount=0\nfor i in range(0,len(h)):\n\tif(h[i] == k or h[i] >=k ):\n\t\tcount+=1\n\telse:\n\t\tcount+=0\n\nprint((int(count)))\n", "n, k = list(map(int, input().split(' ')))\nh = list(map(int, input().split(' ')))\nans = 0\nfor i in h:\n    if i >= k:\n        ans += 1\nprint(ans)\n", "n,k = map(int, input().split())\nh = map(int, input().split())\nprint(len([i for i in h if i >= k]))", "N, K = map(int, input().split())\nh = list(map(int, input().split()))\ndef count ():\n    count = 0\n    for i in range(N):\n        if h[i] >= K:\n            count +=1\n    \n    return count\nprint(count())", "N, K = map(int, input().split())\nH = list(map(int, input().split()))\n\nANS = sum(x >= K for x in H)\nprint(ANS)", "n, k = map(int, input().split())\nheights = list(map(int, input().split()))\n\ncount = 0\nfor height in heights:\n    if k <= height:\n        count = count + 1\n\nprint(count)", "N,K=map(int,input().split())\nH=list(map(int,input().split()))\nanswer=0\n\nfor i in range(N):\n  if H[i]>=K:\n    answer+=1\nprint(answer)"]