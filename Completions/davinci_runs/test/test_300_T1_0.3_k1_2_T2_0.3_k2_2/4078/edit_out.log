2022-04-18 23:29:10.498606 num operations 1
2022-04-18 23:29:10.498627 size on input set 1
2022-04-18 23:29:12.747682 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segments.append((l, r))\n    segments.sort(key=lambda x: x[1] - x[0])\n    ans = 0\n    for i in range(m):\n        l, r = segments[i]\n        if a[l - 1] > a[r - 1]:\n            a[l - 1], a[r - 1] = a[r - 1], a[l - 1]\n        ans = max(ans, a[l - 1] - a[r - 1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segments.append((l, r))\n    segments.sort(key=lambda x: x[1] - x[0])\n    ans = 0\n    for i in range(m):\n        l, r = segments[i]\n        if a[l - 1] > a[r - 1]:\n            a[l - 1], a[r - 1] = a[r - 1], a[l - 1]\n        ans = max(ans, a[l - 1] - a[r - 1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650324550,
  "object": "edit"
}
2022-04-18 23:29:12.747931 fix syntax errors 2 ["\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segments.append((l, r))\n    segments.sort(key=lambda x: x[1] - x[0])\n    ans = 0\n    for i in range(m):\n        l, r = segments[i]\n        if a[l - 1] > a[r - 1]:\n            a[l - 1], a[r - 1] = a[r - 1], a[l - 1]\n        ans = max(ans, a[l - 1] - a[r - 1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segments.append((l, r))\n    segments.sort(key=lambda x: x[1] - x[0])\n    ans = 0\n    for i in range(m):\n        l, r = segments[i]\n        if a[l - 1] > a[r - 1]:\n            a[l - 1], a[r - 1] = a[r - 1], a[l - 1]\n        ans = max(ans, a[l - 1] - a[r - 1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-18 23:29:12.747964 size on output set 2
2022-04-18 23:29:12.747975 num operations 1
2022-04-18 23:29:12.747980 size on input set 1
2022-04-18 23:29:15.557389 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef get_max_diff(n, m, a, segments):\n    # TODO: Implement solution.\n    return 0, 0, []\n\nif __name__ == \"__main__\":\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        segments.append(list(map(int, sys.stdin.readline().split())))\n\n    max_diff, num_segments, segments_to_apply = get_max_diff(n, m, a, segments)\n\n    print(max_diff)\n    print(num_segments)\n    print(*segments_to_apply)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef get_max_diff(n, m, a, segments):\n    # TODO: Implement solution\n    return 0, 0, [0]\n\nif __name__ == \"__main__\":\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        segments.append(list(map(int, sys.stdin.readline().split())))\n\n    max_diff, num_segments, segments_to_apply = get_max_diff(n, m, a, segments)\n\n    print(max_diff)\n    print(num_segments)\n    print(segments_to_apply)\n"
    }
  ],
  "created": 1650324552,
  "object": "edit"
}
2022-04-18 23:29:15.557595 fix syntax errors 2 ['\n\nimport sys\n\ndef get_max_diff(n, m, a, segments):\n    # TODO: Implement solution.\n    return 0, 0, []\n\nif __name__ == "__main__":\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        segments.append(list(map(int, sys.stdin.readline().split())))\n\n    max_diff, num_segments, segments_to_apply = get_max_diff(n, m, a, segments)\n\n    print(max_diff)\n    print(num_segments)\n    print(*segments_to_apply)\n', '\n\nimport sys\n\ndef get_max_diff(n, m, a, segments):\n    # TODO: Implement solution\n    return 0, 0, [0]\n\nif __name__ == "__main__":\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        segments.append(list(map(int, sys.stdin.readline().split())))\n\n    max_diff, num_segments, segments_to_apply = get_max_diff(n, m, a, segments)\n\n    print(max_diff)\n    print(num_segments)\n    print(segments_to_apply)\n']
2022-04-18 23:29:15.557628 size on output set 2
