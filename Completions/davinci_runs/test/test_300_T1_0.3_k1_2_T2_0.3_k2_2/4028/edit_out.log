2022-04-18 23:23:09.789784 num operations 1
2022-04-18 23:23:09.789804 size on input set 1
2022-04-18 23:23:13.772519 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef get_input():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    return n, s\n\ndef solve(n, s):\n    return 0\n\ndef main():\n    n, s = get_input()\n    print(solve(n, s))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef get_input():\n    n = int(sys.stdin.readline())\n    return n\n\ndef solve(n):\n    return 0\n\ndef main():\n    n = get_input()\n    print(solve(n))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650324189,
  "object": "edit"
}
2022-04-18 23:23:13.772759 fix syntax errors 2 ["\nimport sys\n\ndef get_input():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    return n, s\n\ndef solve(n, s):\n    return 0\n\ndef main():\n    n, s = get_input()\n    print(solve(n, s))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef get_input():\n    n = int(sys.stdin.readline())\n    return n\n\ndef solve(n):\n    return 0\n\ndef main():\n    n = get_input()\n    print(solve(n))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-18 23:23:13.772795 size on output set 2
2022-04-18 23:23:13.772806 num operations 1
2022-04-18 23:23:13.772812 size on input set 1
2022-04-18 23:23:17.276800 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    print(solve(n, s))\n\ndef solve(n, s):\n    MOD = 1000000007\n    dp = [[0] * (n + 1) for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(1, n + 1):\n        for j in range(i + 1):\n            if j > 0:\n                dp[i][j] += dp[i - 1][j - 1]\n            if j < i:\n                dp[i][j] += dp[i - 1][j + 1]\n            dp[i][j] %= MOD\n    return dp[n][s.count('(') - s.count(')')]\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# @Date    : 2019-05-10 22:00:00\n# @Author  : Your Name (you@example.org)\n# @Link    : http://example.org\n# @Version : $Id$\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    print(solve(n, s))\n\ndef solve(n, s):\n    MOD = 1000000007\n    dp = [[0] * (n + 1) for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(1, n + 1):\n        for j in range(i + 1):\n            if j > 0:\n                dp[i][j] += dp[i - 1][j - 1]\n            if j < i:\n                dp[i][j] += dp[i - 1][j + 1]\n            dp[i][j] %= MOD\n    return dp[n][s.count('(') - s.count(')')]\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650324194,
  "object": "edit"
}
2022-04-18 23:23:17.277051 fix syntax errors 2 ["\n#\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    print(solve(n, s))\n\ndef solve(n, s):\n    MOD = 1000000007\n    dp = [[0] * (n + 1) for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(1, n + 1):\n        for j in range(i + 1):\n            if j > 0:\n                dp[i][j] += dp[i - 1][j - 1]\n            if j < i:\n                dp[i][j] += dp[i - 1][j + 1]\n            dp[i][j] %= MOD\n    return dp[n][s.count('(') - s.count(')')]\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# @Date    : 2019-05-10 22:00:00\n# @Author  : Your Name (you@example.org)\n# @Link    : http://example.org\n# @Version : $Id$\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    print(solve(n, s))\n\ndef solve(n, s):\n    MOD = 1000000007\n    dp = [[0] * (n + 1) for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(1, n + 1):\n        for j in range(i + 1):\n            if j > 0:\n                dp[i][j] += dp[i - 1][j - 1]\n            if j < i:\n                dp[i][j] += dp[i - 1][j + 1]\n            dp[i][j] %= MOD\n    return dp[n][s.count('(') - s.count(')')]\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-18 23:23:17.277098 size on output set 2
