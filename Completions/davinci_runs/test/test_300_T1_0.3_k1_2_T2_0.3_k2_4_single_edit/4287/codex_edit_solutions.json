["#!/usr/bin/env python3\n\nimport sys\n\ndef solve(a, n, m, rain, umbrellas):\n    umbrellas = sorted(umbrellas)\n    r = [0] * (a + 1)\n    for l, ri in rain:\n        r[l] += 1\n        r[ri] -= 1\n    for i in range(1, a + 1):\n        r[i] += r[i - 1]\n    dp = [0] * (a + 1)\n    for i in range(1, a + 1):\n        dp[i] = dp[i - 1] + r[i - 1]\n    for i in range(m):\n        x, p = umbrellas[i]\n        dp[x] = min(dp[x], dp[x - 1] + p)\n    for i in range(a - 1, -1, -1):\n        dp[i] = min(dp[i], dp[i + 1])\n    if dp[a] == sys.maxsize:\n        return -1\n    return dp[a]\n\ndef main():\n    a, n, m = map(int, input().split())\n    rain = [tuple(map(int, input().split())) for _ in range(n)]\n    umbrellas = [tuple(map(int, input().split())) for _ in range(m)]\n    print(solve(a, n, m, rain, umbrellas))\n\nif __name__ == \"__main__\":\n    main()\n", "\n# Solution\n\na, n, m = map(int, input().split())\n\nl = [0] * n\nr = [0] * n\n\nfor i in range(n):\n    l[i], r[i] = map(int, input().split())\n\nx = [0] * m\np = [0] * m\n\nfor i in range(m):\n    x[i], p[i] = map(int, input().split())\n\ndp = [0] * (a + 1)\n\nfor i in range(a):\n    dp[i + 1] = dp[i] + 1\n    for j in range(m):\n        if x[j] <= i:\n            dp[i + 1] = min(dp[i + 1], dp[i] + p[j])\n\nfor i in range(n):\n    if dp[l[i]] == dp[r[i]]:\n        print(-1)\n        exit()\n\nprint(dp[a])\n", "\n\nimport sys\n\ndef solve(a, n, m, rain, umbrellas):\n    umbrellas = sorted(umbrellas)\n    r = [0] * (a + 1)\n    for l, ri in rain: \n        r[l] += 1\n        r[ri] -= 1\n    for i in range(1, a + 1):\n        r[i] += r[i - 1]\n    dp = [0] * (a + 1)\n    for i in range(1, a + 1):\n        dp[i] = dp[i - 1] + r[i - 1]\n    for i in range(m):\n        x, p = umbrellas[i]\n        dp[x] = min(dp[x], dp[x - 1] + p)\n    for i in range(a - 1, -1, -1):\n        dp[i] = min(dp[i], dp[i + 1])\n    if dp[a] == sys.maxsize:\n        return -1\n    return dp[a]\n\ndef main():\n    a, n, m = map(int, input().split())\n    rain = [tuple(map(int, input().split())) for _ in range(n)]\n    umbrellas = [tuple(map(int, input().split())) for _ in range(m)]\n    print(solve(a, n, m, rain, umbrellas))\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef solve(a, n, m, rain, umbrellas):\n    umbrellas = sorted(umbrellas)\n    r = [0] * (a + 1) # r[i] = number of raindrops in [0, i)\n    for l, ri in rain:\n        r[l] += 1\n        r[ri] -= 1 # r[i] = number of raindrops in [0, i)\n    for i in range(1, a + 1):\n        r[i] += r[i - 1] # r[i] = number of raindrops in [0, i]\n    dp = [0] * (a + 1) # dp[i] = min price to get to i\n    for i in range(1, a + 1):\n        dp[i] = dp[i - 1] + r[i - 1] # dp[i] = min price to get to i\n    for i in range(m):\n        x, p = umbrellas[i]\n        dp[x] = min(dp[x], dp[x - 1] + p) # dp[i] = min price to get to i\n    for i in range(a - 1, -1, -1):\n        dp[i] = min(dp[i], dp[i + 1]) # dp[i] = min price to get to i\n    if dp[a] == sys.maxsize:\n        return -1\n    return dp[a]\n\ndef main():\n    a, n, m = map(int, input().split())\n    rain = [tuple(map(int, input().split())) for _ in range(n)]\n    umbrellas = [tuple(map(int, input().split())) for _ in range(m)]\n    print(solve(a, n, m, rain, umbrellas))\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef solve(a, n, m, rain, umbrellas):\n    umbrellas = sorted(umbrellas)\n    r = [0] * (a + 1)\n    for l, ri in rain:\n        r[l] += 1\n        r[ri] -= 1\n    for i in range(1, a + 1):\n        r[i] += r[i - 1]\n    dp = [0] * (a + 1)\n    for i in range(1, a + 1):\n        dp[i] = dp[i - 1] + r[i - 1]\n    for i in range(m):\n        x, p = umbrellas[i]\n        dp[x] = min(dp[x], dp[x - 1] + p)\n    for i in range(a - 1, -1, -1):\n        dp[i] = min(dp[i], dp[i + 1])\n    if dp[a] == sys.maxsize:\n        return -1\n    return dp[a]\n\ndef main():\n    a, n, m = map(int, input().split())\n    rain = [tuple(map(int, input().split())) for _ in range(n)]\n    umbrellas = [tuple(map(int, input().split())) for _ in range(m)]\n    print(solve(a, n, m, rain, umbrellas))\n\nif __name__ == \"__main__\":\n    main()\n", "\n# Solution\na, n, m = map(int, input().split())\nl = [0] * n\nr = [0] * n\nfor i in range(n):\n    l[i], r[i] = map(int, input().split())\nx = [0] * m\np = [0] * m\nfor i in range(m):\n    x[i], p[i] = map(int, input().split())\ndp = [0] * (a + 1)\nfor i in range(a):\n    dp[i + 1] = dp[i] + 1\n    for j in range(m):\n        if x[j] <= i:\n            dp[i + 1] = min(dp[i + 1], dp[i] + p[j])\nfor i in range(n):\n    if dp[l[i]] == dp[r[i]]:\n        print(-1)\n        exit()\nprint(dp[a])\n", "\n# Solution\n\na, n, m = map(int, input().split())  # a: \uae38\uc774, n: \uc9c8\ubb38 \uac1c\uc218, m: \uc9c0\ub3c4 \uac1c\uc218\n\nl = [0] * n  # \uc9c8\ubb38 \uc2dc\uc791 \uc9c0\uc810\nr = [0] * n  # \uc9c8\ubb38 \ub05d \uc9c0\uc810\n\nfor i in range(n):\n    l[i], r[i] = map(int, input().split())\n\nx = [0] * m  # \uc9c0\ub3c4 \uc2dc\uc791 \uc9c0\uc810\np = [0] * m  # \uc9c0\ub3c4 \ub05d \uc9c0\uc810\n\nfor i in range(m):\n    x[i], p[i] = map(int, input().split())\n\ndp = [0] * (a + 1)  # dp[i]: i\uae4c\uc9c0 \uac00\ub294\ub370 \ud544\uc694\ud55c \ucd5c\uc18c \ube44\uc6a9\n\nfor i in range(a):\n    dp[i + 1] = dp[i] + 1  # \uae38\uc774\uac00 1\uc778 \uc9c0\ub3c4\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0\n    for j in range(m):\n        if x[j] <= i:\n            dp[i + 1] = min(dp[i + 1], dp[i] + p[j])  # \uc9c0\ub3c4\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0\n\nfor i in range(n):\n    if dp[l[i]] == dp[r[i]]:  # \uc9c8\ubb38\uc5d0 \ub300\ud55c \ub2f5\uc774 \uc5c6\ub294 \uacbd\uc6b0\n        print(-1)\n        exit()\n\nprint(dp[a])\n"]