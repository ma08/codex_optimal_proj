["\n\nimport heapq\n\ndef main():\n    a, b, c, k = map(int, input().split())\n    h = []\n    heapq.heappush(h, (-a, 1))\n    heapq.heappush(h, (-b, 0))\n    heapq.heappush(h, (-c, -1))\n    s = 0\n    for i in range(k):\n        t = heapq.heappop(h)\n        s += -t[0] * t[1]\n        heapq.heappush(h, (t[0] + 1, t[1]))\n    print(s)\n\nif __name__ == '__main__':\n    main()\n", "\nimport heapq\n\ndef main():\n    a, b, c, k = map(int, input().split())\n    h = []\n    heapq.heappush(h, (-a, 1))\n    heapq.heappush(h, (-b, 0))\n    heapq.heappush(h, (-c, -1))\n    s = 0\n    for i in range(k):\n        t = heapq.heappop(h)\n        s += -t[0] * t[1]\n        heapq.heappush(h, (t[0] + 1, t[1]))\n    print(s)\n\nif __name__ == '__main__':\n    main()\n", "import sys\na, b, c, k = map(int, sys.stdin.readline().split())\n\nif k <= a:\n    print(k)\nelif k <= a + b:\n    print(a)\nelse:\n    print(a - (k - a - b))\n", "\nimport sys\n\na, b, c, k = map(int, sys.stdin.readline().split())\n\nif k <= a:\n    print(k)\nelif k <= a + b:\n    print(a)\nelse:\n    print(a - (k - a - b))\n", "\nimport sys\n\na, b, c, k = map(int, sys.stdin.readline().split())  # read the input\n\nif k <= a:  # if k is less than or equal to a\n    print(k)\nelif k <= a + b:  # if k is less than or equal to a + b\n    print(a)\nelse:  # if k is greater than a + b\n    print(a - (k - a - b))\n"]