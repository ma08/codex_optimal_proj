2022-04-20 03:58:40.431150 num operations 1
2022-04-20 03:58:40.431174 size on input set 1
2022-04-20 03:58:40.431404 using api key kouti
2022-04-20 03:58:43.632205 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split())\n    print(min(a, b, c) * 7 + min(a, b) * 2 + min(a, c) * 2 + min(b, c) * 2)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split())\n    print(min(a, b, c) * 7 + min(a, b) * 2 + min(a, c) * 2 + min(b, c) * 2 + 4)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split())\n    print(min(a, b, c) * 7 + min(a, b) * 2 + min(a, c) * 2 + min(b, c) * 2, end='')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split())\n    print(min(a, b, c) * 7 + min(a, b) * 2 + min(a, c) * 2 + min(b, c) * 2)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650427120,
  "object": "edit"
}
2022-04-20 03:58:43.632539 fix syntax errors 4 ["\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split())\n    print(min(a, b, c) * 7 + min(a, b) * 2 + min(a, c) * 2 + min(b, c) * 2)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split())\n    print(min(a, b, c) * 7 + min(a, b) * 2 + min(a, c) * 2 + min(b, c) * 2 + 4)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split())\n    print(min(a, b, c) * 7 + min(a, b) * 2 + min(a, c) * 2 + min(b, c) * 2, end='')\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split())\n    print(min(a, b, c) * 7 + min(a, b) * 2 + min(a, c) * 2 + min(b, c) * 2)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 03:58:43.632583 size on output set 3
2022-04-20 03:58:43.632599 num operations 1
2022-04-20 03:58:43.632608 size on input set 1
2022-04-20 03:58:43.632903 using api key derek
2022-04-20 03:58:43.675279 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 03:58:45.177073 using api key sunu
2022-04-20 03:59:30.165651 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split())\n    print(min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split())\n    print(min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split())\n    print(min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split())\n    print(min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650427125,
  "object": "edit"
}
2022-04-20 03:59:30.166097 fix syntax errors 4 ["import sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split())\n    print(min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split())\n    print(min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split())\n    print(min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split())\n    print(min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 03:59:30.166224 size on output set 3
