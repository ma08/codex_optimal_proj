2022-04-20 04:37:19.565904 num operations 1
2022-04-20 04:37:19.565927 size on input set 1
2022-04-20 04:37:19.566094 using api key jaanu
2022-04-20 04:37:35.375581 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    S = input()\n    T = input()\n    if S[0] == T[2] and S[1] == T[1] and S[2] == T[0]:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n\tn = int(input())\n\tnames = []\n\tfor i in range(n):\n\t\tnames.append(input())\n\tcount = 0\n\tfor i in range(n):\n\t\tfor j in range(i+1, n):\n\t\t\tfor k in range(j+1, n):\n\t\t\t\tif names[i][0] == names[j][0] or names[i][0] == names[k][0] or names[j][0] == names[k][0]:\n\t\t\t\t\tcontinue\n\t\t\t\tif names[i][0] != \"M\" and names[i][0] != \"A\" and names[i][0] != \"R\" and names[i][0] != \"C\" and names[i][0] != \"H\":\n\t\t\t\t\tcontinue\n\t\t\t\tif names[j][0] != \"M\" and names[j][0] != \"A\" and names[j][0] != \"R\" and names[j][0] != \"C\" and names[j][0] != \"H\":\n\t\t\t\t\tcontinue\n\t\t\t\tif names[k][0] != \"M\" and names[k][0] != \"A\" and names[k][0] != \"R\" and names[k][0] != \"C\" and names[k][0] != \"H\":\n\t\t\t\t\tcontinue\n\t\t\t\tcount += 1\n\tprint(count)\n\nif __name__ == '__main__':\n\tmain()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    names = []\n    for i in range(n):\n        names.append(input())\n    count = 0\n    for i in range(n-2):\n        for j in range(i+1, n-1):\n            for k in range(j+1, n):\n                if names[i][0] != names[j][0] and names[i][0] != names[k][0] and names[j][0] != names[k][0]:\n                    if names[i][0] == \"M\" or names[i][0] == \"A\" or names[i][0] == \"R\" or names[i][0] == \"C\" or names[i][0] == \"H\":\n                        if names[j][0] == \"M\" or names[j][0] == \"A\" or names[j][0] == \"R\" or names[j][0] == \"C\" or names[j][0] == \"H\":\n                            if names[k][0] == \"M\" or names[k][0] == \"A\" or names[k][0] == \"R\" or names[k][0] == \"C\" or names[k][0] == \"H\":\n                                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    names = [sys.stdin.readline() for _ in range(n)]\n    count = sum(1 for i in range(n) for j in range(i+1, n) for k in range(j+1, n)\n                if names[i][0] != names[j][0] and names[i][0] != names[k][0] and names[j][0] != names[k][0]\n                and names[i][0] in \"MARCH\" and names[j][0] in \"MARCH\" and names[k][0] in \"MARCH\")\n    print(count)    \n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650429439,
  "object": "edit"
}
2022-04-20 04:37:35.375868 fix syntax errors 4 ['\nimport sys\n\ndef main():\n    S = input()\n    T = input()\n    if S[0] == T[2] and S[1] == T[1] and S[2] == T[0]:\n        print("YES")\n    else:\n        print("NO")\n\nif __name__ == \'__main__\':\n    main()\n', 'import sys\n\ndef main():\n\tn = int(input())\n\tnames = []\n\tfor i in range(n):\n\t\tnames.append(input())\n\tcount = 0\n\tfor i in range(n):\n\t\tfor j in range(i+1, n):\n\t\t\tfor k in range(j+1, n):\n\t\t\t\tif names[i][0] == names[j][0] or names[i][0] == names[k][0] or names[j][0] == names[k][0]:\n\t\t\t\t\tcontinue\n\t\t\t\tif names[i][0] != "M" and names[i][0] != "A" and names[i][0] != "R" and names[i][0] != "C" and names[i][0] != "H":\n\t\t\t\t\tcontinue\n\t\t\t\tif names[j][0] != "M" and names[j][0] != "A" and names[j][0] != "R" and names[j][0] != "C" and names[j][0] != "H":\n\t\t\t\t\tcontinue\n\t\t\t\tif names[k][0] != "M" and names[k][0] != "A" and names[k][0] != "R" and names[k][0] != "C" and names[k][0] != "H":\n\t\t\t\t\tcontinue\n\t\t\t\tcount += 1\n\tprint(count)\n\nif __name__ == \'__main__\':\n\tmain()\n', '\nimport sys\n\ndef main():\n    n = int(input())\n    names = []\n    for i in range(n):\n        names.append(input())\n    count = 0\n    for i in range(n-2):\n        for j in range(i+1, n-1):\n            for k in range(j+1, n):\n                if names[i][0] != names[j][0] and names[i][0] != names[k][0] and names[j][0] != names[k][0]:\n                    if names[i][0] == "M" or names[i][0] == "A" or names[i][0] == "R" or names[i][0] == "C" or names[i][0] == "H":\n                        if names[j][0] == "M" or names[j][0] == "A" or names[j][0] == "R" or names[j][0] == "C" or names[j][0] == "H":\n                            if names[k][0] == "M" or names[k][0] == "A" or names[k][0] == "R" or names[k][0] == "C" or names[k][0] == "H":\n                                count += 1\n    print(count)\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    names = [sys.stdin.readline() for _ in range(n)]\n    count = sum(1 for i in range(n) for j in range(i+1, n) for k in range(j+1, n)\n                if names[i][0] != names[j][0] and names[i][0] != names[k][0] and names[j][0] != names[k][0]\n                and names[i][0] in "MARCH" and names[j][0] in "MARCH" and names[k][0] in "MARCH")\n    print(count)    \n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-20 04:37:35.375917 size on output set 4
2022-04-20 04:37:35.375928 num operations 1
2022-04-20 04:37:35.375934 size on input set 1
2022-04-20 04:37:35.376088 using api key sourya
2022-04-20 04:37:40.502585 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    s = [i[0] for i in s if i[0] in ['M', 'A', 'R', 'C', 'H']]\n    s = list(set(s))\n    print(len(s) * (len(s) - 1) * (len(s) - 2) // 6)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    s = [i[0] for i in s if i[0] in ['M', 'A', 'R', 'C', 'H']]\n    s = list(set(s))\n    print(len(s) * (len(s) - 1) * (len(s) - 2) // 6)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    s = [i[0] for i in s if i[0] in ['M', 'A', 'R', 'C', 'H']]\n    s = list(set(s))\n    print(len(s) * (len(s) - 1) * (len(s) - 2) // 6)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "import sys\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    s = [i[0] for i in s if i[0] in ['M', 'A', 'R', 'C', 'H']]  # \u5148\u982d\u6587\u5b57\u3092\u53d6\u5f97\n    s = list(set(s))  # \u91cd\u8907\u3092\u524a\u9664\n    print(len(s) * (len(s) - 1) * (len(s) - 2) // 6)  # \u9806\u5217\u3092\u8a08\u7b97\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650429455,
  "object": "edit"
}
2022-04-20 04:37:40.502826 fix syntax errors 4 ["import sys\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    s = [i[0] for i in s if i[0] in ['M', 'A', 'R', 'C', 'H']]\n    s = list(set(s))\n    print(len(s) * (len(s) - 1) * (len(s) - 2) // 6)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    s = [i[0] for i in s if i[0] in ['M', 'A', 'R', 'C', 'H']]\n    s = list(set(s))\n    print(len(s) * (len(s) - 1) * (len(s) - 2) // 6)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    s = [i[0] for i in s if i[0] in ['M', 'A', 'R', 'C', 'H']]\n    s = list(set(s))\n    print(len(s) * (len(s) - 1) * (len(s) - 2) // 6)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    s = [i[0] for i in s if i[0] in ['M', 'A', 'R', 'C', 'H']]  # 先頭文字を取得\n    s = list(set(s))  # 重複を削除\n    print(len(s) * (len(s) - 1) * (len(s) - 2) // 6)  # 順列を計算\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 04:37:40.502975 size on output set 2
