2022-04-20 04:25:15.508445 num operations 1
2022-04-20 04:25:15.508470 size on input set 1
2022-04-20 04:25:15.508690 using api key jaanu
2022-04-20 04:25:19.674715 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    d, n = map(int, sys.stdin.readline().split())\n    if d == 0:\n        print(n)\n    elif d == 1:\n        print(100 * n)\n    else:\n        print(10000 * n)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    d, n = map(int, sys.stdin.readline().split())\n    if d == 0:\n        print(n)\n    elif d == 1:\n        print(100 * n)\n    else:\n        print(10000 * n)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    d, n = map(int, sys.stdin.readline().split()) # read input\n    if d == 0:\n        print(n) # print output\n    elif d == 1:\n        print(100 * n) # print output\n    else:\n        print(10000 * n) # print output\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    d, n = map(int, sys.stdin.readline().split())\n    if d == 0:\n        print(n)\n    elif d == 1:\n        print(100 * n)\n    else:\n        print(10000 * n)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650428715,
  "object": "edit"
}
2022-04-20 04:25:19.675049 fix syntax errors 4 ["\nimport sys\n\ndef main():\n    d, n = map(int, sys.stdin.readline().split())\n    if d == 0:\n        print(n)\n    elif d == 1:\n        print(100 * n)\n    else:\n        print(10000 * n)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    d, n = map(int, sys.stdin.readline().split())\n    if d == 0:\n        print(n)\n    elif d == 1:\n        print(100 * n)\n    else:\n        print(10000 * n)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    d, n = map(int, sys.stdin.readline().split()) # read input\n    if d == 0:\n        print(n) # print output\n    elif d == 1:\n        print(100 * n) # print output\n    else:\n        print(10000 * n) # print output\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    d, n = map(int, sys.stdin.readline().split())\n    if d == 0:\n        print(n)\n    elif d == 1:\n        print(100 * n)\n    else:\n        print(10000 * n)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 04:25:19.675120 size on output set 2
2022-04-20 04:25:19.675135 num operations 1
2022-04-20 04:25:19.675144 size on input set 1
2022-04-20 04:25:19.675390 using api key sunu
2022-04-20 04:25:22.227332 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nd, n = map(int, input().split())\n\nif d == 0:\n    print(n)\nelif d == 1:\n    print(n*100)\nelse:\n    print(n*10000)\n"
    },
    {
      "index": 1,
      "text": "\nd, n = map(int, input().split())\n\nif d == 0:\n    print(n)\nelif d == 1:\n    print(n*100)\nelse:\n    print(n*10000)\n"
    },
    {
      "index": 2,
      "text": "\n\nd, n = map(int, input().split())\n\nif d == 0:\n    print(n)\nelif d == 1:\n    print(n * 100)\nelse:\n    print(n * 10000)\n"
    },
    {
      "index": 3,
      "text": "\n\nd, n = map(int, input().split())\n\nif d == 0:\n    print(n)\nelif d == 1:\n    print(n * 100)\nelse:\n    print(n * 10000)\n"
    }
  ],
  "created": 1650428719,
  "object": "edit"
}
2022-04-20 04:25:22.227640 fix syntax errors 4 ['\nd, n = map(int, input().split())\n\nif d == 0:\n    print(n)\nelif d == 1:\n    print(n*100)\nelse:\n    print(n*10000)\n', '\nd, n = map(int, input().split())\n\nif d == 0:\n    print(n)\nelif d == 1:\n    print(n*100)\nelse:\n    print(n*10000)\n', '\n\nd, n = map(int, input().split())\n\nif d == 0:\n    print(n)\nelif d == 1:\n    print(n * 100)\nelse:\n    print(n * 10000)\n', '\n\nd, n = map(int, input().split())\n\nif d == 0:\n    print(n)\nelif d == 1:\n    print(n * 100)\nelse:\n    print(n * 10000)\n']
2022-04-20 04:25:22.227682 size on output set 2
