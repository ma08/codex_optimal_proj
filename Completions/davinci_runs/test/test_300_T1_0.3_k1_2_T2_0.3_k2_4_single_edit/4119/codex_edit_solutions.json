["\n# input\nn, m = map(int, input().split())\nx = list(map(int, input().split()))  # list of integers\n\n# sort\nx.sort()\n\n# get the median (odd number of elements)\nif m % 2 == 1:\n    median = x[m // 2]\nelse:\n    median = (x[m // 2] + x[m // 2 - 1]) / 2\n\n# calculate the distance\nans = 0\nfor i in range(m):\n    ans += abs(x[i] - median)\n\nprint(ans)\n", "\nimport sys\n\n\ndef main():\n    # read input from stdin\n    n, m = map(int, sys.stdin.readline().split())\n    x = list(map(int, sys.stdin.readline().split()))\n\n    # sort the coordinates in ascending order\n    x.sort()\n\n    # find the minimum number of moves required to achieve the objective using\n    # the greedy algorithm\n    ans = 0\n    for i in range(m):\n\n        ans += abs(x[i] - x[i - 1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n# input\nn, m = map(int, input().split())\nx = list(map(int, input().split()))\n\n# sort\nx.sort()\n\n# get the median\nmedian = x[m // 2]\n\n# calculate the distance\nans = 0\nfor i in range(m):\n    ans += abs(x[i] - median)\n\nprint(ans)\n", "\nimport sys\n\ndef main():\n    # read input and convert to int\n    n, m = map(int, input().split())  # n: number of cows, m: number of stalls\n    x = list(map(int, input().split()))  # x: list of stall positions\n\n    # sort the coordinates\n    x.sort()\n\n    # find the minimum number of moves required to achieve the objective\n    ans = 0\n    for i in range(m):\n        ans += abs(x[i] - x[i-1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    # read input from stdin\n    n, m = map(int, sys.stdin.readline().split())\n    x = list(map(int, sys.stdin.readline().split()))\n\n    # sort the coordinates\n    x.sort()\n\n    # find the minimum number of moves required to achieve the objective\n    ans = 0\n    for i in range(m):\n        ans += abs(x[i] - x[i-1])\n    sys.stdout.write(str(ans))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    # read input\n    n, m = map(int, input().split())\n    x = list(map(int, sys.stdin.readline().split()))\n\n    # sort the coordinates\n    x.sort()\n\n    # find the minimum number of moves required to achieve the objective\n    ans = 0\n    for i in range(1, m):\n        ans += abs(x[i] - x[i-1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]