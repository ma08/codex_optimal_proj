2022-04-20 04:04:50.130138 num operations 1
2022-04-20 04:04:50.130161 size on input set 1
2022-04-20 04:04:50.130335 using api key gabby
2022-04-20 04:04:52.065231 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n"
    },
    {
      "index": 1,
      "text": "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (1, 2)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\nprint(ans[0] + 1, ans[1] + 1)\n"
    },
    {
      "index": 2,
      "text": "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n"
    },
    {
      "index": 3,
      "text": "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n"
    }
  ],
  "created": 1650427490,
  "object": "edit"
}
2022-04-20 04:04:52.065488 fix syntax errors 4 ['\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n', '\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (1, 2)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\nprint(ans[0] + 1, ans[1] + 1)\n', '\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n', '\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n']
2022-04-20 04:04:52.065562 size on output set 2
2022-04-20 04:04:52.065579 num operations 1
2022-04-20 04:04:52.065585 size on input set 1
2022-04-20 04:04:52.065743 using api key jaanu
2022-04-20 04:04:53.538965 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n"
    }
  ],
  "created": 1650427492,
  "object": "edit"
}
2022-04-20 04:04:53.539192 fix syntax errors 4 ['\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n', '\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n', '\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n', '\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n']
2022-04-20 04:04:53.539232 size on output set 1
