2022-04-20 03:55:08.811297 num operations 1
2022-04-20 03:55:08.811341 size on input set 1
2022-04-20 03:55:08.811608 using api key sourya
2022-04-20 03:55:11.264268 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef f(x):\n    while x % 10 == 0: x //= 10\n    return x + 1\n\ndef main():\n    n = int(input())\n    visited = set()\n    while n not in visited:\n        visited.add(n)\n        n = f(n)\n    print(len(visited))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef f(x):\n    return x + 2\n\ndef main():\n    n = int(input())\n    visited = set()\n    while n not in visited:\n        visited.add(n)\n        n = f(n)\n    print(len(visited))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef f(x):\n    while x % 10 == 0: x //= 10\n    return x + 1\n\ndef main():\n    n = int(input())\n    visited = set()\n    while n not in visited:\n        visited.add(n)\n        n = f(n)\n    print(len(visited))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef f(x):\n    while x % 10 == 0: x //= 10\n    return x + 1\n\ndef main():\n    n = int(input())\n    visited = set()\n    while n not in visited:\n        visited.add(n)\n        n = f(n)\n    print(len(visited))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650426908,
  "object": "edit"
}
2022-04-20 03:55:11.264633 fix syntax errors 4 ['\n\ndef f(x):\n    while x % 10 == 0: x //= 10\n    return x + 1\n\ndef main():\n    n = int(input())\n    visited = set()\n    while n not in visited:\n        visited.add(n)\n        n = f(n)\n    print(len(visited))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef f(x):\n    return x + 2\n\ndef main():\n    n = int(input())\n    visited = set()\n    while n not in visited:\n        visited.add(n)\n        n = f(n)\n    print(len(visited))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef f(x):\n    while x % 10 == 0: x //= 10\n    return x + 1\n\ndef main():\n    n = int(input())\n    visited = set()\n    while n not in visited:\n        visited.add(n)\n        n = f(n)\n    print(len(visited))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef f(x):\n    while x % 10 == 0: x //= 10\n    return x + 1\n\ndef main():\n    n = int(input())\n    visited = set()\n    while n not in visited:\n        visited.add(n)\n        n = f(n)\n    print(len(visited))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 03:55:11.264686 size on output set 2
2022-04-20 03:55:11.264731 num operations 1
2022-04-20 03:55:11.264744 size on input set 1
2022-04-20 03:55:11.265013 using api key sunu
2022-04-20 03:55:14.287569 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef f(x):\n    return int(str(x+1).rstrip(\"0\"))+1\n\ndef main():\n    n = int(input())\n    s = set()\n    while n not in s:\n        s.add(n)\n        n = f(n)\n    print(len(s))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef f(x):\n    return int(str(x + 1).rstrip(\"0\"))\n\ndef main():\n    n = int(input())\n    s = set()\n    while n not in s:\n        s.add(n)\n        n = f(n)\n    print(len(s))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef f(x):\n    return int(str(x+1).rstrip(\"0\")) - 1\n\ndef main():\n    n = int(input())\n    s = set()\n    while n not in s and n != 0:\n        s.add(n)\n        n = f(n)\n    print(len(s))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\ndef f(x):\n    return int(str(x+1).rstrip(\"0\"))\n\ndef main():\n    n = int(input())\n    s = set()\n    while n not in s:\n        s.add(n)\n        n = f(n)\n    print(len(s))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650426911,
  "object": "edit"
}
2022-04-20 03:55:14.287898 fix syntax errors 4 ['\n\ndef f(x):\n    return int(str(x+1).rstrip("0"))+1\n\ndef main():\n    n = int(input())\n    s = set()\n    while n not in s:\n        s.add(n)\n        n = f(n)\n    print(len(s))\n\nif __name__ == "__main__":\n    main()\n', '\ndef f(x):\n    return int(str(x + 1).rstrip("0"))\n\ndef main():\n    n = int(input())\n    s = set()\n    while n not in s:\n        s.add(n)\n        n = f(n)\n    print(len(s))\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef f(x):\n    return int(str(x+1).rstrip("0")) - 1\n\ndef main():\n    n = int(input())\n    s = set()\n    while n not in s and n != 0:\n        s.add(n)\n        n = f(n)\n    print(len(s))\n\nif __name__ == "__main__":\n    main()\n', '\ndef f(x):\n    return int(str(x+1).rstrip("0"))\n\ndef main():\n    n = int(input())\n    s = set()\n    while n not in s:\n        s.add(n)\n        n = f(n)\n    print(len(s))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 03:55:14.287949 size on output set 4
