2022-04-20 03:58:16.146632 num operations 1
2022-04-20 03:58:16.146654 size on input set 1
2022-04-20 03:58:16.146915 using api key jaanu
2022-04-20 03:58:18.512914 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Solution\nn = int(input())\n\nleft = []\nright = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    left.append(l)\n    right.append(r)\nleft.sort()\nright.sort()\nif n == 2:\n    print(right[1] - left[0])\nelse:\n    print(max(right[n - 2] - left[0], right[n - 1] - left[1], right[n - 1] - left[0]))\n"
    },
    {
      "index": 1,
      "text": "\n# Solution\nn = int(input())\n\nleft = []\nright = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    left.append(l)\n    right.append(r)\nleft.sort()\nright.sort()\nif n == 2:\n    print(right[1] - left[0])\nelse:\n    print(max(right[n - 2] - left[0], right[n - 1] - left[1], right[n - 1] - left[0]))\n"
    },
    {
      "index": 2,
      "text": "\n# Solution\nn = int(input())\n\nleft = []\nright = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    left.append(l)\n    right.append(r)\nleft.sort()\nright.sort()\nif n == 2:\n    print(right[1] - left[0])\nelse:\n    print(max(right[n - 2] - left[0], right[n - 1] - left[1], right[n - 1] - left[0]))\n"
    },
    {
      "index": 3,
      "text": "\n# Solution\nn = int(input())\n\nleft = []\nright = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    left.append(l)\n    right.append(r)\nleft.sort()\nright.sort()\nif n == 2:\n    print(right[1] - left[0])\nelse:\n    print(max(right[n - 2] - left[0], right[n - 1] - left[1], right[n - 1] - left[0]))\n"
    }
  ],
  "created": 1650427096,
  "object": "edit"
}
2022-04-20 03:58:18.513241 fix syntax errors 4 ['\n# Solution\nn = int(input())\n\nleft = []\nright = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    left.append(l)\n    right.append(r)\nleft.sort()\nright.sort()\nif n == 2:\n    print(right[1] - left[0])\nelse:\n    print(max(right[n - 2] - left[0], right[n - 1] - left[1], right[n - 1] - left[0]))\n', '\n# Solution\nn = int(input())\n\nleft = []\nright = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    left.append(l)\n    right.append(r)\nleft.sort()\nright.sort()\nif n == 2:\n    print(right[1] - left[0])\nelse:\n    print(max(right[n - 2] - left[0], right[n - 1] - left[1], right[n - 1] - left[0]))\n', '\n# Solution\nn = int(input())\n\nleft = []\nright = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    left.append(l)\n    right.append(r)\nleft.sort()\nright.sort()\nif n == 2:\n    print(right[1] - left[0])\nelse:\n    print(max(right[n - 2] - left[0], right[n - 1] - left[1], right[n - 1] - left[0]))\n', '\n# Solution\nn = int(input())\n\nleft = []\nright = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    left.append(l)\n    right.append(r)\nleft.sort()\nright.sort()\nif n == 2:\n    print(right[1] - left[0])\nelse:\n    print(max(right[n - 2] - left[0], right[n - 1] - left[1], right[n - 1] - left[0]))\n']
2022-04-20 03:58:18.513298 size on output set 1
2022-04-20 03:58:18.513314 num operations 1
2022-04-20 03:58:18.513324 size on input set 1
2022-04-20 03:58:18.513559 using api key sunu
2022-04-20 03:58:25.034525 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    segments = []\n    for i in range(n):\n        segments.append(list(map(int, input().split())))\n    segments.sort(key=lambda x: x[1])\n    max_len = 0\n    for i in range(n):\n        if i == 0:\n            max_len = max(max_len, segments[i+1][1] - segments[i][1])\n        elif i == n-1:\n            max_len = max(max_len, segments[i][1] - segments[i-1][1])\n        else:\n            max_len = max(max_len, segments[i][1] - segments[i-1][1], segments[i+1][1] - segments[i][1])\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    segments = []\n    for i in range(n):\n        segments.append(list(map(int, input().split())))\n    segments.sort(key=lambda x: x[0])\n    max_len = 0\n    for i in range(n):\n        if i == 0:\n            max_len = max(max_len, segments[i][1] - segments[i][0])\n        elif i == n-1:\n            max_len = max(max_len, segments[i][1] - segments[i][0])\n        else:\n            max_len = max(max_len, segments[i-1][1] - segments[i-1][0], segments[i+1][1] - segments[i+1][0])\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    segments = []\n    for i in range(n):\n        segments.append(list(map(int, input().split())))\n    segments.sort(key=lambda x: x[0])\n    max_len = 0\n    for i in range(n):\n        if i == 0:\n            max_len = max(max_len, segments[i][1] - segments[i][0])\n        elif i == n-1:\n            max_len = max(max_len, segments[i][1] - segments[i][0])\n        else:\n            max_len = max(max_len, segments[i-1][1] - segments[i-1][0], segments[i+1][1] - segments[i+1][0])\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n = int(input())\n    segments = []\n    for i in range(n):\n        segments.append(list(map(int, input().split())))\n    segments.sort(key=lambda x: x[0])\n    max_len = 0\n    for i in range(n):\n        if i == 0:\n            max_len = max(max_len, segments[i+1][1] - segments[i][0])\n        elif i == n-1:\n            max_len = max(max_len, segments[i][1] - segments[i-1][0])\n        else:\n            max_len = max(max_len, segments[i][1] - segments[i-1][0], segments[i+1][1] - segments[i][0])\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650427098,
  "object": "edit"
}
2022-04-20 03:58:25.034858 fix syntax errors 4 ["\n\ndef main():\n    n = int(input())\n    segments = []\n    for i in range(n):\n        segments.append(list(map(int, input().split())))\n    segments.sort(key=lambda x: x[1])\n    max_len = 0\n    for i in range(n):\n        if i == 0:\n            max_len = max(max_len, segments[i+1][1] - segments[i][1])\n        elif i == n-1:\n            max_len = max(max_len, segments[i][1] - segments[i-1][1])\n        else:\n            max_len = max(max_len, segments[i][1] - segments[i-1][1], segments[i+1][1] - segments[i][1])\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    segments = []\n    for i in range(n):\n        segments.append(list(map(int, input().split())))\n    segments.sort(key=lambda x: x[0])\n    max_len = 0\n    for i in range(n):\n        if i == 0:\n            max_len = max(max_len, segments[i][1] - segments[i][0])\n        elif i == n-1:\n            max_len = max(max_len, segments[i][1] - segments[i][0])\n        else:\n            max_len = max(max_len, segments[i-1][1] - segments[i-1][0], segments[i+1][1] - segments[i+1][0])\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    segments = []\n    for i in range(n):\n        segments.append(list(map(int, input().split())))\n    segments.sort(key=lambda x: x[0])\n    max_len = 0\n    for i in range(n):\n        if i == 0:\n            max_len = max(max_len, segments[i][1] - segments[i][0])\n        elif i == n-1:\n            max_len = max(max_len, segments[i][1] - segments[i][0])\n        else:\n            max_len = max(max_len, segments[i-1][1] - segments[i-1][0], segments[i+1][1] - segments[i+1][0])\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    segments = []\n    for i in range(n):\n        segments.append(list(map(int, input().split())))\n    segments.sort(key=lambda x: x[0])\n    max_len = 0\n    for i in range(n):\n        if i == 0:\n            max_len = max(max_len, segments[i+1][1] - segments[i][0])\n        elif i == n-1:\n            max_len = max(max_len, segments[i][1] - segments[i-1][0])\n        else:\n            max_len = max(max_len, segments[i][1] - segments[i-1][0], segments[i+1][1] - segments[i][0])\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 03:58:25.035051 size on output set 3
