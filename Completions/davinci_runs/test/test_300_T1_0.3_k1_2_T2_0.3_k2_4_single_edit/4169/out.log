2022-04-18 21:05:26.317352 """
Hearing that energy drinks increase rating in those sites, Takahashi decides to buy up M cans of energy drinks.
There are N stores that sell energy drinks. In the i-th store, he can buy at most B_i cans of energy drinks for A_i yen (the currency of Japan) each.
What is the minimum amount of money with which he can buy M cans of energy drinks?
It is guaranteed that, in the given inputs, a sufficient amount of money can always buy M cans of energy drinks.

-----Constraints-----
 - All values in input are integers.
 - 1 \leq N, M \leq 10^5
 - 1 \leq A_i \leq 10^9
 - 1 \leq B_i \leq 10^5
 - B_1 + ... + B_N \geq M

-----Input-----
Input is given from Standard Input in the following format:
N M
A_1 B_1
A_2 B_2
\vdots
A_N B_N

-----Output-----
Print the minimum amount of money with which Takahashi can buy M cans of energy drinks.

-----Sample Input-----
2 5
4 9
2 4

-----Sample Output-----
12

With 12 yen, we can buy one drink at the first store and four drinks at the second store, for the total of five drinks. However, we cannot buy 5 drinks with 11 yen or less.
"""
2022-04-18 21:05:26.317372 --------------------------
2022-04-18 21:05:46.091660 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\n\n# stores = []\n# for i in range(n):\n#     stores.append(list(map(int, sys.stdin.readline().split())))\n\nstores = [list(map(int, sys.stdin.readline().split())) for i in range(n)]\n\nstores.sort(key=lambda x: x[0])\n\ncost = 0\nfor store in stores:\n    if m <= store[1]:\n        cost += store[0] * m\n        break\n    else:\n        cost += store[0] * store[1]\n        m -= store[1]\n\nprint(cost)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nN, M = map(int, input().split())\nAB = [list(map(int, input().split())) for _ in range(N)]\n\nAB.sort(key=lambda x: x[0])\n\nans = 0\nfor i in range(N):\n    if M > AB[i][1]:\n        ans += AB[i][0] * AB[i][1]\n        M -= AB[i][1]\n    else:\n        ans += AB[i][0] * M\n        break\n\nprint(ans)"
    }
  ],
  "created": 1650315926,
  "id": "cmpl-4ySqkCJNv2b4LsyaueGoSjdCyzzfs",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-18 21:05:46.091920 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\n\n# stores = []\n# for i in range(n):\n#     stores.append(list(map(int, sys.stdin.readline().split())))\n\nstores = [list(map(int, sys.stdin.readline().split())) for i in range(n)]\n\nstores.sort(key=lambda x: x[0])\n\ncost = 0\nfor store in stores:\n    if m <= store[1]:\n        cost += store[0] * m\n        break\n    else:\n        cost += store[0] * store[1]\n        m -= store[1]\n\nprint(cost)"
}
2022-04-18 21:05:46.091958 REASON stop
2022-04-18 21:05:46.448776 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nN, M = map(int, input().split())\nAB = [list(map(int, input().split())) for _ in range(N)]\n\nAB.sort(key=lambda x: x[0])\n\nans = 0\nfor i in range(N):\n    if M > AB[i][1]:\n        ans += AB[i][0] * AB[i][1]\n        M -= AB[i][1]\n    else:\n        ans += AB[i][0] * M\n        break\n\nprint(ans)"
}
2022-04-18 21:05:46.448961 REASON stop
