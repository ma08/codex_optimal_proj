2022-04-20 04:37:59.477640 num operations 1
2022-04-20 04:37:59.477660 size on input set 1
2022-04-20 04:37:59.477858 using api key soukgp
2022-04-20 04:38:01.011537 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = []\n    for i in range(n):\n        s.append(sys.stdin.readline().rstrip())\n    s.sort()\n    ans = 0\n    for i in range(n-1):\n        for j in range(i+1, n):\n            if len(s[i]) != len(s[j]):\n                continue\n            if len(s[i]) == len(set(s[i])):\n                continue\n            if len(s[j]) == len(set(s[j])):\n                continue\n            if sorted(s[i]) == sorted(s[j]):\n                ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = []\n    for i in range(n):\n        s.append(sys.stdin.readline().rstrip())\n    s.sort()\n    ans = 0\n    for i in range(n-1):\n        for j in range(i+1, n):\n            if len(s[i]) != len(s[j]):\n                continue\n            if len(s[i]) == len(set(s[i])):\n                continue\n            if len(s[j]) == len(set(s[j])):\n                continue\n            if sorted(s[i]) == sorted(s[j]):\n                ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = []\n    for i in range(n):\n        s.append(sys.stdin.readline().rstrip())\n    s.sort()\n    ans = 0\n    for i in range(n-1):\n        for j in range(i+1, n):\n            if len(s[i]) != len(s[j]):\n                continue\n            if len(s[i]) == len(set(s[i])):\n                continue\n            if len(s[j]) == len(set(s[j])):\n                continue\n            if sorted(s[i]) == sorted(s[j]):\n                ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = []\n    for i in range(n):\n        s.append(sys.stdin.readline().rstrip())\n    s.sort()\n    ans = 0\n    for i in range(n-1):\n        for j in range(i+1, n):\n            if len(s[i]) != len(s[j]):\n                continue\n            if len(s[i]) == len(set(s[i])):\n                continue\n            if len(s[j]) == len(set(s[j])):\n                continue\n            if sorted(s[i]) == sorted(s[j]):\n                ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650429479,
  "object": "edit"
}
2022-04-20 04:38:01.011808 fix syntax errors 4 ["\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = []\n    for i in range(n):\n        s.append(sys.stdin.readline().rstrip())\n    s.sort()\n    ans = 0\n    for i in range(n-1):\n        for j in range(i+1, n):\n            if len(s[i]) != len(s[j]):\n                continue\n            if len(s[i]) == len(set(s[i])):\n                continue\n            if len(s[j]) == len(set(s[j])):\n                continue\n            if sorted(s[i]) == sorted(s[j]):\n                ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = []\n    for i in range(n):\n        s.append(sys.stdin.readline().rstrip())\n    s.sort()\n    ans = 0\n    for i in range(n-1):\n        for j in range(i+1, n):\n            if len(s[i]) != len(s[j]):\n                continue\n            if len(s[i]) == len(set(s[i])):\n                continue\n            if len(s[j]) == len(set(s[j])):\n                continue\n            if sorted(s[i]) == sorted(s[j]):\n                ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = []\n    for i in range(n):\n        s.append(sys.stdin.readline().rstrip())\n    s.sort()\n    ans = 0\n    for i in range(n-1):\n        for j in range(i+1, n):\n            if len(s[i]) != len(s[j]):\n                continue\n            if len(s[i]) == len(set(s[i])):\n                continue\n            if len(s[j]) == len(set(s[j])):\n                continue\n            if sorted(s[i]) == sorted(s[j]):\n                ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = []\n    for i in range(n):\n        s.append(sys.stdin.readline().rstrip())\n    s.sort()\n    ans = 0\n    for i in range(n-1):\n        for j in range(i+1, n):\n            if len(s[i]) != len(s[j]):\n                continue\n            if len(s[i]) == len(set(s[i])):\n                continue\n            if len(s[j]) == len(set(s[j])):\n                continue\n            if sorted(s[i]) == sorted(s[j]):\n                ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 04:38:01.011853 size on output set 2
2022-04-20 04:38:01.011865 num operations 1
2022-04-20 04:38:01.011870 size on input set 1
2022-04-20 04:38:01.012034 using api key jaanu
2022-04-20 04:38:03.407580 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef is_anagram(s1, s2):\n    if len(s1) != len(s2):\n        return False\n    s1_dict = {}\n    s2_dict = {}\n    for c in s1:\n        if c not in s1_dict:\n            s1_dict[c] = 1\n        else:\n            s1_dict[c] += 1\n    for c in s2:\n        if c not in s2_dict:\n            s2_dict[c] = 1\n        else:\n            s2_dict[c] += 1\n    return s1_dict == s2_dict\n\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    s = [sys.stdin.readline().rstrip() for _ in range(n)]\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if is_anagram(s[i], s[j]):\n                count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef is_anagram(s1, s2):\n    if len(s1) != len(s2):\n        return False\n    s1_dict = {}\n    s2_dict = {}\n    for c in s1:\n        if c not in s1_dict:\n            s1_dict[c] = 1\n        else:\n            s1_dict[c] += 1\n    for c in s2:\n        if c not in s2_dict:\n            s2_dict[c] = 1\n        else:\n            s2_dict[c] += 1\n    return s1_dict == s2_dict\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    s = []\n    for _ in range(n):\n        s.append(sys.stdin.readline().rstrip())\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if is_anagram(s[i], s[j]):\n                count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n \nimport sys\n\ndef is_anagram(s1, s2):\n    if len(s1) != len(s2):\n        return False\n    s1_dict = {}\n    s2_dict = {}\n    for c in s1:\n        if c not in s1_dict:\n            s1_dict[c] = 1\n        else:\n            s1_dict[c] += 1\n    for c in s2:\n        if c not in s2_dict:\n            s2_dict[c] = 1\n        else:\n            s2_dict[c] += 1\n    return s1_dict == s2_dict\n\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    s = []\n    for _ in range(n):\n        s.append(sys.stdin.readline().rstrip())\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if is_anagram(s[i], s[j]):\n                count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\n\nimport sys\n\ndef is_anagram(s1, s2):\n    if len(s1) != len(s2):\n        return False\n    s1_dict = {}\n    s2_dict = {}\n    for c in s1:\n        if c not in s1_dict:\n            s1_dict[c] = 1\n        else:\n            s1_dict[c] += 1\n    for c in s2:\n        if c not in s2_dict:\n            s2_dict[c] = 1\n        else:\n            s2_dict[c] += 1\n    return s1_dict == s2_dict\n\n\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    s = []\n    for _ in range(n):\n        s.append(sys.stdin.readline().rstrip())\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if is_anagram(s[i], s[j]):\n                count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650429481,
  "object": "edit"
}
2022-04-20 04:38:03.407946 fix syntax errors 4 ["\n\nimport sys\n\ndef is_anagram(s1, s2):\n    if len(s1) != len(s2):\n        return False\n    s1_dict = {}\n    s2_dict = {}\n    for c in s1:\n        if c not in s1_dict:\n            s1_dict[c] = 1\n        else:\n            s1_dict[c] += 1\n    for c in s2:\n        if c not in s2_dict:\n            s2_dict[c] = 1\n        else:\n            s2_dict[c] += 1\n    return s1_dict == s2_dict\n\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    s = [sys.stdin.readline().rstrip() for _ in range(n)]\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if is_anagram(s[i], s[j]):\n                count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef is_anagram(s1, s2):\n    if len(s1) != len(s2):\n        return False\n    s1_dict = {}\n    s2_dict = {}\n    for c in s1:\n        if c not in s1_dict:\n            s1_dict[c] = 1\n        else:\n            s1_dict[c] += 1\n    for c in s2:\n        if c not in s2_dict:\n            s2_dict[c] = 1\n        else:\n            s2_dict[c] += 1\n    return s1_dict == s2_dict\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    s = []\n    for _ in range(n):\n        s.append(sys.stdin.readline().rstrip())\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if is_anagram(s[i], s[j]):\n                count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\n \nimport sys\n\ndef is_anagram(s1, s2):\n    if len(s1) != len(s2):\n        return False\n    s1_dict = {}\n    s2_dict = {}\n    for c in s1:\n        if c not in s1_dict:\n            s1_dict[c] = 1\n        else:\n            s1_dict[c] += 1\n    for c in s2:\n        if c not in s2_dict:\n            s2_dict[c] = 1\n        else:\n            s2_dict[c] += 1\n    return s1_dict == s2_dict\n\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    s = []\n    for _ in range(n):\n        s.append(sys.stdin.readline().rstrip())\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if is_anagram(s[i], s[j]):\n                count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n\nimport sys\n\ndef is_anagram(s1, s2):\n    if len(s1) != len(s2):\n        return False\n    s1_dict = {}\n    s2_dict = {}\n    for c in s1:\n        if c not in s1_dict:\n            s1_dict[c] = 1\n        else:\n            s1_dict[c] += 1\n    for c in s2:\n        if c not in s2_dict:\n            s2_dict[c] = 1\n        else:\n            s2_dict[c] += 1\n    return s1_dict == s2_dict\n\n\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    s = []\n    for _ in range(n):\n        s.append(sys.stdin.readline().rstrip())\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if is_anagram(s[i], s[j]):\n                count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 04:38:03.408028 size on output set 4
