2022-04-18 19:31:14.061239 """
You are given an array $a$ consisting of $n$ integer numbers.

You have to color this array in $k$ colors in such a way that:   Each element of the array should be colored in some color;  For each $i$ from $1$ to $k$ there should be at least one element colored in the $i$-th color in the array;  For each $i$ from $1$ to $k$ all elements colored in the $i$-th color should be distinct. 

Obviously, such coloring might be impossible. In this case, print "NO". Otherwise print "YES" and any coloring (i.e. numbers $c_1, c_2, \dots c_n$, where $1 \le c_i \le k$ and $c_i$ is the color of the $i$-th element of the given array) satisfying the conditions above. If there are multiple answers, you can print any.


-----Input-----

The first line of the input contains two integers $n$ and $k$ ($1 \le k \le n \le 5000$) — the length of the array $a$ and the number of colors, respectively.

The second line of the input contains $n$ integers $a_1, a_2, \dots, a_n$ ($1 \le a_i \le 5000$) — elements of the array $a$.


-----Output-----

If there is no answer, print "NO". Otherwise print "YES" and any coloring (i.e. numbers $c_1, c_2, \dots c_n$, where $1 \le c_i \le k$ and $c_i$ is the color of the $i$-th element of the given array) satisfying the conditions described in the problem statement. If there are multiple answers, you can print any.


-----Examples-----
Input
4 2
1 2 2 3

Output
YES
1 1 2 2

Input
5 2
3 2 1 2 3

Output
YES
2 1 1 2 1

Input
5 2
2 1 1 2 1

Output
NO



-----Note-----

In the first example the answer $2~ 1~ 2~ 1$ is also acceptable.

In the second example the answer $1~ 1~ 1~ 2~ 2$ is also acceptable.

There exist other acceptable answers for both examples.
"""
2022-04-18 19:31:14.061277 --------------------------
2022-04-18 19:31:40.810954 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k > n:\n    print(\"NO\")\nelif k == n:\n    print(\"YES\")\n    print(*[i for i in range(1, k + 1)])\nelse:\n    d = {}\n    for i in range(n):\n        if a[i] not in d:\n            d[a[i]] = []\n        d[a[i]].append(i)\n    if len(d) < k:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n        c = [0] * n\n        for i in range(1, k + 1):\n            if i <= len(d):\n                c[d[i][0]] = i\n            else:\n                c[d[1][i - len(d)]] = i\n        print(*c)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nd = {}\nfor i in range(n):\n    if a[i] in d:\n        d[a[i]].append(i)\n    else:\n        d[a[i]] = [i]\n\nif len(d) > k:\n    print(\"NO\")\nelse:\n    c = [0]*n\n    for i in range(len(d)):\n        for j in range(len(d[a[i]])):\n            c[d[a[i]][j]] = i+1\n    print(\"YES\")\n    print(\" \".join(map(str, c)))"
    }
  ],
  "created": 1650310274,
  "id": "cmpl-4yRNaPHoW9AeqGlDxUE3hqfqYWuXi",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-18 19:31:40.811277 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k > n:\n    print(\"NO\")\nelif k == n:\n    print(\"YES\")\n    print(*[i for i in range(1, k + 1)])\nelse:\n    d = {}\n    for i in range(n):\n        if a[i] not in d:\n            d[a[i]] = []\n        d[a[i]].append(i)\n    if len(d) < k:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n        c = [0] * n\n        for i in range(1, k + 1):\n            if i <= len(d):\n                c[d[i][0]] = i\n            else:\n                c[d[1][i - len(d)]] = i\n        print(*c)"
}
2022-04-18 19:31:40.811317 REASON stop
2022-04-18 19:31:40.872396 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nd = {}\nfor i in range(n):\n    if a[i] in d:\n        d[a[i]].append(i)\n    else:\n        d[a[i]] = [i]\n\nif len(d) > k:\n    print(\"NO\")\nelse:\n    c = [0]*n\n    for i in range(len(d)):\n        for j in range(len(d[a[i]])):\n            c[d[a[i]][j]] = i+1\n    print(\"YES\")\n    print(\" \".join(map(str, c)))"
}
2022-04-18 19:31:40.872541 REASON stop
