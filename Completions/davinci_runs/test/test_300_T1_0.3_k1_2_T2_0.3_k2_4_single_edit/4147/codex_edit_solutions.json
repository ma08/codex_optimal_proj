["\nimport sys\n\ndef main():\n    n, a, b, c = map(int, sys.stdin.readline().split())\n    l = [int(sys.stdin.readline()) for _ in range(n)]\n    l.sort()\n    ans = float(\"inf\")\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if l[i] < a and l[j] < b and l[k] < c:\n                    ans = min(ans, (a - l[i]) + (b - l[j]) + (c - l[k]))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    N, K = map(int, sys.stdin.readline().split())\n    A = list(map(int, sys.stdin.readline().split()))\n    print(solve(N, K, A))\n\ndef solve(N, K, A):\n    A.sort()\n    return A[K - 1]\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    N, A, B, C = map(int, input().split())\n    l = [int(input()) for _ in range(N)]\n    l.sort()\n    print(solve(l, A, B, C, 0))\n\ndef solve(l, A, B, C, cnt):\n    if len(l) == 0:\n        return 10 ** 10\n    elif len(l) == 1:\n        if A == l[0] or B == l[0] or C == l[0]:\n            return cnt\n        else:\n            return 10 ** 10\n    elif len(l) == 2:\n        if A == l[0] + l[1] or B == l[0] + l[1] or C == l[0] + l[1]:\n            return cnt\n        else:\n            return 10 ** 10\n    else:\n        return min(solve(l[1:], A, B, C, cnt), solve(l[1:], A - l[0], B, C, cnt + 10), solve(l[1:], A, B - l[0], C, cnt + 10), solve(l[1:], A, B, C - l[0], cnt + 10))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, a, b, c = map(int, sys.stdin.readline().split())\n    l = [int(sys.stdin.readline()) for _ in range(n)]\n    l.sort(reverse=True)\n    ans = float(\"inf\")\n    for i in range(n-2):\n        for j in range(i+1, n-1):\n            for k in range(j+1, n):\n                if l[i] < a and l[j] < b and l[k] < c and l[i] > l[j] and l[j] > l[k]:\n                    ans = min(ans, (a - l[i]) + (b - l[j]) + (c - l[k]) + 10*(i+j+k))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, a, b, c = map(int, input().split())\n    l = [int(input()) for _ in range(n)]\n    l.sort(reverse=True)\n    ans = float(\"inf\")\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if l[i] < a and l[j] < b and l[k] < c:\n                    ans = min(ans, (a - l[i]) + (b - l[j]) + (c - l[k]))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    N, A, B, C = map(int, sys.stdin.readline().split())\n    l = [int(sys.stdin.readline()) for _ in range(N)]\n    l.sort(reverse=True)\n    print(solve(l, A, B, C))\n\ndef solve(l, A, B, C):\n    if len(l) == 0:\n        return float('inf')\n    elif len(l) == 1:\n        return 10\n    elif len(l) == 2:\n        return 10 + abs(A - l[0]) + abs(B - l[1])\n    elif len(l) == 3:\n        if l[0] >= A and l[1] >= B and l[2] >= C:\n            return 0\n        elif (l[0] + l[1] + l[2] >= A + B + C) and (l[0] + l[1] >= A + B or l[1] + l[2] >= B + C or l[0] + l[2] >= A + C):\n            return 10\n        else:\n            return 10 + abs(A - l[0]) + abs(B - l[1]) + abs(C - l[2])\n    else:\n        res = min(solve(l[1:], A - l[0], B - l[0], C - l[0]) + 10, solve(l[1:], A, B, C) + 10)\n        return 0\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    N, A, B, C = map(int, sys.stdin.readline().split())\n    l = [int(sys.stdin.readline()) for _ in range(N)]  # noqa: E741\n    l.sort(reverse=True)\n    print(solve(l, A, B, C))\n\ndef solve(l, A, B, C):\n    if l[0] >= A and l[1] >= B and l[2] >= C:\n        return 0\n    elif (l[0] + l[1] + l[2] >= A + B + C) and (l[0] + l[1] >= A + B or l[1] + l[2] >= B + C or l[0] + l[2] >= A + C):  # noqa: E501\n        return 10\n    else:\n        return 10 + solve(l[1:], A - l[0], B - l[0], C - l[0])\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, a, b, c = map(int, input().split())\n    l = sorted([int(input()) for _ in range(n)])\n    ans = float('inf')\n    for i in range(n-2):\n        for j in range(i+1, n-1):\n            for k in range(j+1, n):\n                if l[i] < a and l[j] < b and l[k] < c: ans = min(ans, (a - l[i]) + (b - l[j]) + (c - l[k]))\n    print(ans if ans != float('inf') else 'impossible')\n\nif __name__ == '__main__':\n    main()\n"]