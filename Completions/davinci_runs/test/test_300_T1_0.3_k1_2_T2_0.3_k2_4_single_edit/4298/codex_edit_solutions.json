["\nimport sys\n\nN, D = map(int, sys.stdin.readline().split())\n\nif N <= 2*D:\n    print(1)\nelse:\n    print(2)\n", "import sys\n\nN, D = map(int, sys.stdin.readline().split())\n\nif N <= 2*D:\n    print(1)\nelse:\n    print(2)\n", "\nN, D = map(int, input().split())\n\n# The minimum number of inspectors is the maximum number of trees that can be inspected by one inspector.\n# This can be achieved by placing an inspector at the leftmost tree that can inspect the rightmost tree.\nprint(-(-N // (2 * D + 1)))\n", "import sys\n\nN, D = map(int, sys.stdin.readline().split())\n\nif N <= 2 * D:\n    print(1)\nelse:\n    print(2)\n", "N, D = map(int, input().split())\n\n# The minimum number of inspectors is the maximum number of trees that can be inspected by one inspector.\n# This can be achieved by placing an inspector at the leftmost tree that can inspect the rightmost tree.\nprint(-(-N // (2 * D + 1)))\n", "\nimport sys\n\nN = int(sys.stdin.readline())\nA = list(map(int, sys.stdin.readline().split()))\n\nfor i in range(N):\n    print(A[i], end=' ')\n"]