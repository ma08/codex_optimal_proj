2022-04-20 04:00:36.198701 num operations 1
2022-04-20 04:00:36.198729 size on input set 1
2022-04-20 04:00:36.198959 using api key soukgp
2022-04-20 04:00:40.271046 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        r += project[1]\n        if r < 0:\n            print(\"NO\")\n            return\n    print(\"YES\") \n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            if r < 0:\n                print(\"NO\")\n                return\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            if r < 0:\n                print(\"NO\")\n                return\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n    if r < 0:\n        print(\"NO\")\n        return\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650427236,
  "object": "edit"
}
2022-04-20 04:00:40.271381 fix syntax errors 4 ['\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        r += project[1]\n        if r < 0:\n            print("NO")\n            return\n    print("YES") \n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            if r < 0:\n                print("NO")\n                return\n    print("YES")\n\nif __name__ == \'__main__\':\n    main()\n', '\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            if r < 0:\n                print("NO")\n                return\n    print("YES")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n    if r < 0:\n        print("NO")\n        return\n    print("YES")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-20 04:00:40.271440 size on output set 4
2022-04-20 04:00:40.271457 num operations 1
2022-04-20 04:00:40.271466 size on input set 1
2022-04-20 04:00:40.271716 using api key derek
2022-04-20 04:00:40.310402 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 04:00:41.812355 using api key gabby
2022-04-20 04:00:45.597312 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        if r < project[0]:\n            print(\"NO\")\n            return\n        r += project[1]\n        if r < 0:\n            print(\"NO\")\n            return\n    print(\"YES\")\n\nmain()\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        if r < project[0]:\n            print(\"NO\")\n            return\n        r += project[1]\n        if r < 0:\n            print(\"NO\")\n            return\n    print(\"YES\")\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])\n    for project in projects:\n        if r < project[1]:\n            print(\"NO\")\n            return\n        r += project[0]\n        if r < 0:\n            print(\"NO\")\n            return\n    print(\"YES\")\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n, r = map(int, input().split())  # n: number of projects, r: initial budget\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))  # [cost, profit]\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        if r < project[0]:\n            print(\"NO\")\n            return\n        r += project[1]\n        if r < 0:\n            print(\"NO\")\n            return\n    print(\"YES\")\n\nmain()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])\n    for project in projects:\n        if r < project[1]:\n            print(\"NO\")\n            return\n        r += project[0]\n        if r < 0:\n            print(\"NO\")\n            return\n    print(\"YES\")\n\nmain()\n"
    }
  ],
  "created": 1650427241,
  "object": "edit"
}
2022-04-20 04:00:45.597626 fix syntax errors 4 ['\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        if r < project[0]:\n            print("NO")\n            return\n        r += project[1]\n        if r < 0:\n            print("NO")\n            return\n    print("YES")\n\nmain()\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        if r < project[0]:\n            print("NO")\n            return\n        r += project[1]\n        if r < 0:\n            print("NO")\n            return\n    print("YES")\n\nmain()\n', '\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])\n    for project in projects:\n        if r < project[1]:\n            print("NO")\n            return\n        r += project[0]\n        if r < 0:\n            print("NO")\n            return\n    print("YES")\n\nmain()\n', '\n\ndef main():\n    n, r = map(int, input().split())  # n: number of projects, r: initial budget\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))  # [cost, profit]\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        if r < project[0]:\n            print("NO")\n            return\n        r += project[1]\n        if r < 0:\n            print("NO")\n            return\n    print("YES")\n\nmain()\n', '\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])\n    for project in projects:\n        if r < project[1]:\n            print("NO")\n            return\n        r += project[0]\n        if r < 0:\n            print("NO")\n            return\n    print("YES")\n\nmain()\n']
2022-04-20 04:00:45.597813 size on output set 3
