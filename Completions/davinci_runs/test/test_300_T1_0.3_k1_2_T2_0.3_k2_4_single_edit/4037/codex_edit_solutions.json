["\nimport sys\n\ndef main():\n    n, r = list(map(int, sys.stdin.readline().split()))\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, sys.stdin.readline().split()))\n    projects = sorted(projects, key=lambda x: x[0])\n    count = 0\n    for project in projects:\n        if project[0] > r:\n            break\n        r += project[1]\n        if r < 0:\n            break\n        count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1], reverse=True)\n    count = 0\n    for project in projects:\n        if r > project[0]:\n            r += project[1]\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])\n    count = 0\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, sys.stdin.readline().split())))\n    projects = sorted(projects, key=lambda x: x[0])\n    count = 0\n    for project in projects:\n        if project[0] > r:\n            break\n        r += project[1]\n        if r < 0:\n            break\n        count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, sys.stdin.readline().split())))\n    projects = sorted(projects, key=lambda x: x[0])\n    count = 0\n    for project in projects:\n        if project[0] > r:\n            break\n        r += project[1]\n        if r < 0:\n            break\n        count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"]