2022-04-20 04:06:44.126827 num operations 1
2022-04-20 04:06:44.126847 size on input set 1
2022-04-20 04:06:44.127072 using api key kouti
2022-04-20 04:06:45.873700 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#-----Solution-----\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if (j - i + 1) % 2 == 1:\n            if a[(j + i) // 2] == m:\n                count += 1\n        else:\n            if a[(j + i) // 2] == m or a[(j + i) // 2 + 1] == m:\n                count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\n#-----Solution-----#\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if (j - i + 1) % 2 == 1:\n            if a[(j + i) // 2] == m:\n                count += 1\n        else:\n            if a[(j + i) // 2] == m or a[(j + i) // 2 + 1] == m:\n                count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\n#-----Solution-----\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if (j - i + 1) % 2 == 1:\n            if a[(j + i) // 2] == m:\n                count += 1\n        else:\n            if a[(j + i) // 2] == m or a[(j + i) // 2 + 1] == m:\n                count += 1\n\nprint(count)\n"
    },
    {
      "index": 3,
      "text": "\n#-----Solution-----\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if (j - i + 1) % 2 == 1:\n            if a[(j + i) // 2] == m:\n                count += 1\n        else:\n            if a[(j + i) // 2] == m or a[(j + i) // 2 + 1] == m:\n                count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650427604,
  "object": "edit"
}
2022-04-20 04:06:45.873974 fix syntax errors 4 ['\n#-----Solution-----\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if (j - i + 1) % 2 == 1:\n            if a[(j + i) // 2] == m:\n                count += 1\n        else:\n            if a[(j + i) // 2] == m or a[(j + i) // 2 + 1] == m:\n                count += 1\n\nprint(count)\n', '\n\n#-----Solution-----#\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if (j - i + 1) % 2 == 1:\n            if a[(j + i) // 2] == m:\n                count += 1\n        else:\n            if a[(j + i) // 2] == m or a[(j + i) // 2 + 1] == m:\n                count += 1\n\nprint(count)\n', '\n#-----Solution-----\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if (j - i + 1) % 2 == 1:\n            if a[(j + i) // 2] == m:\n                count += 1\n        else:\n            if a[(j + i) // 2] == m or a[(j + i) // 2 + 1] == m:\n                count += 1\n\nprint(count)\n', '\n#-----Solution-----\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if (j - i + 1) % 2 == 1:\n            if a[(j + i) // 2] == m:\n                count += 1\n        else:\n            if a[(j + i) // 2] == m or a[(j + i) // 2 + 1] == m:\n                count += 1\n\nprint(count)\n']
2022-04-20 04:06:45.874013 size on output set 2
2022-04-20 04:06:45.874023 num operations 1
2022-04-20 04:06:45.874030 size on input set 1
2022-04-20 04:06:45.874187 using api key soukgp
2022-04-20 04:06:49.282516 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef median(a, l, r):\n    if (r - l) % 2 == 1:\n        return a[(l + r) // 2]\n    else:\n        return a[(l + r) // 2 + 1]\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    a.sort()\n\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(a, i, j) == m:\n                count += 1\n\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef median(a, l, r):\n    if (r - l + 1) % 2 == 0:\n        return a[(l + r) // 2]\n    else:\n        return (a[(l + r) // 2] + a[(l + r) // 2 + 1]) // 2\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    a.sort()\n\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(a, i, j) == m:\n                count += 1\n\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef median(a, l, r):\n    if (r - l) % 2 == 1:\n        return a[(l + r) // 2]\n    else:\n        return a[(l + r) // 2 + 1]\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    a.sort()\n\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(a, i, j) == m:\n                count += 1\n\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef median(a, l, r):\n    if (r - l) % 2 == 0:\n        return a[(l + r) // 2]\n    else:\n        return a[(l + r) // 2 + 1]\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    a.sort()\n\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(a, i, j) == m:\n                count += 1\n\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650427605,
  "object": "edit"
}
2022-04-20 04:06:49.282745 fix syntax errors 4 ['import sys\n\ndef median(a, l, r):\n    if (r - l) % 2 == 1:\n        return a[(l + r) // 2]\n    else:\n        return a[(l + r) // 2 + 1]\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    a.sort()\n\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(a, i, j) == m:\n                count += 1\n\n    print(count)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef median(a, l, r):\n    if (r - l + 1) % 2 == 0:\n        return a[(l + r) // 2]\n    else:\n        return (a[(l + r) // 2] + a[(l + r) // 2 + 1]) // 2\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    a.sort()\n\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(a, i, j) == m:\n                count += 1\n\n    print(count)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef median(a, l, r):\n    if (r - l) % 2 == 1:\n        return a[(l + r) // 2]\n    else:\n        return a[(l + r) // 2 + 1]\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    a.sort()\n\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(a, i, j) == m:\n                count += 1\n\n    print(count)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef median(a, l, r):\n    if (r - l) % 2 == 0:\n        return a[(l + r) // 2]\n    else:\n        return a[(l + r) // 2 + 1]\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    a.sort()\n\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(a, i, j) == m:\n                count += 1\n\n    print(count)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 04:06:49.282788 size on output set 4
