2022-04-18 21:03:14.731917 """
If there is an integer not less than 0 satisfying the following conditions, print the smallest such integer; otherwise, print -1.
 - The integer has exactly N digits in base ten. (We assume 0 to be a 1-digit integer. For other integers, leading zeros are not allowed.)
 - The s_i-th digit from the left is c_i. \left(i = 1, 2, \cdots, M\right)

-----Constraints-----
 - All values in input are integers.
 - 1 \leq N \leq 3
 - 0 \leq M \leq 5
 - 1 \leq s_i \leq N
 - 0 \leq c_i \leq 9

-----Input-----
Input is given from Standard Input in the following format:
N M
s_1 c_1
\vdots
s_M c_M

-----Output-----
Print the answer.

-----Sample Input-----
3 3
1 7
3 2
1 7

-----Sample Output-----
702

702 satisfies the conditions - its 1-st and 3-rd digits are 7 and 2, respectively - while no non-negative integer less than 702 satisfies them.
"""
2022-04-18 21:03:14.731944 --------------------------
2022-04-18 21:03:41.864980 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nN, M = map(int, input().split())\n\ndef rec(i, s, c):\n    if i == M:\n        return s\n    if s[c[i][0]-1] == str(c[i][1]):\n        return s\n    if s[c[i][0]-1] == '-':\n        s[c[i][0]-1] = str(c[i][1])\n        return rec(i+1, s, c)\n    else:\n        s[c[i][0]-1] = str(c[i][1])\n        return rec(i+1, s, c)\n\ndef main():\n    s = ['-' for i in range(N)]\n    c = []\n    for i in range(M):\n        c.append(list(map(int, input().split())))\n    ans = rec(0, s, c)\n    if '-' in ans:\n        print(-1)\n    else:\n        print(''.join(ans))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nN, M = map(int, input().split())\n\ns = []\nc = []\nfor _ in range(M):\n    s_i, c_i = map(int, input().split())\n    s.append(s_i)\n    c.append(c_i)\n\nans = -1\nfor i in range(10**N):\n    i_str = str(i)\n    if len(i_str) != N:\n        continue\n    for j in range(M):\n        if i_str[s[j]-1] != str(c[j]):\n            break\n    else:\n        ans = i\n        break\n\nprint(ans)"
    }
  ],
  "created": 1650315794,
  "id": "cmpl-4ySocOYLquRCUW3uqCPdt6gX6Aglr",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-18 21:03:41.865268 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nN, M = map(int, input().split())\n\ndef rec(i, s, c):\n    if i == M:\n        return s\n    if s[c[i][0]-1] == str(c[i][1]):\n        return s\n    if s[c[i][0]-1] == '-':\n        s[c[i][0]-1] = str(c[i][1])\n        return rec(i+1, s, c)\n    else:\n        s[c[i][0]-1] = str(c[i][1])\n        return rec(i+1, s, c)\n\ndef main():\n    s = ['-' for i in range(N)]\n    c = []\n    for i in range(M):\n        c.append(list(map(int, input().split())))\n    ans = rec(0, s, c)\n    if '-' in ans:\n        print(-1)\n    else:\n        print(''.join(ans))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-18 21:03:41.865336 REASON stop
2022-04-18 21:03:41.900757 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nN, M = map(int, input().split())\n\ns = []\nc = []\nfor _ in range(M):\n    s_i, c_i = map(int, input().split())\n    s.append(s_i)\n    c.append(c_i)\n\nans = -1\nfor i in range(10**N):\n    i_str = str(i)\n    if len(i_str) != N:\n        continue\n    for j in range(M):\n        if i_str[s[j]-1] != str(c[j]):\n            break\n    else:\n        ans = i\n        break\n\nprint(ans)"
}
2022-04-18 21:03:41.900905 REASON stop
