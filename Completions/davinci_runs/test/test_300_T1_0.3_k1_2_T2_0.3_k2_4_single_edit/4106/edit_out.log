2022-04-20 04:11:18.649040 num operations 1
2022-04-20 04:11:18.649060 size on input set 1
2022-04-20 04:11:18.649333 using api key sunu
2022-04-20 04:11:24.815540 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [[0]*(x+1) for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            dp[i][j] = dp[i-1][j]\n            if i >= k:\n                dp[i][j] = max(dp[i][j], dp[i-k][j-1] + a[i-1])\n    print(dp[n][x])\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [[0]*(x+1) for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            dp[i][j] = dp[i-1][j]\n            if i >= k:\n                dp[i][j] = max(dp[i][j], dp[i-k][j-1] + a[i-1])\n    print(dp[n][x])\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))[::-1]\n    b = [0]*n\n    for i in range(n):\n        if i == 0:\n            b[i] = a[i]\n        else:\n            b[i] = b[i-1]+a[i]\n    print(sum(b))\n\nmain()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [[0]*(x+1) for _ in range(n+1)]  # dp[i][j] = i\u756a\u76ee\u307e\u3067\u306e\u8377\u7269\u3092j\u56de\u904b\u3076\u3068\u304d\u306e\u6700\u5927\u91cd\u3055\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            dp[i][j] = dp[i-1][j]\n            if i >= k:\n                dp[i][j] = max(dp[i][j], dp[i-k][j-1] + a[i-1])\n    print(dp[n][x])\n\nmain()\n"
    }
  ],
  "created": 1650427878,
  "object": "edit"
}
2022-04-20 04:11:24.815869 fix syntax errors 4 ['\ndef main():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [[0]*(x+1) for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            dp[i][j] = dp[i-1][j]\n            if i >= k:\n                dp[i][j] = max(dp[i][j], dp[i-k][j-1] + a[i-1])\n    print(dp[n][x])\n\nmain()\n', '\ndef main():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [[0]*(x+1) for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            dp[i][j] = dp[i-1][j]\n            if i >= k:\n                dp[i][j] = max(dp[i][j], dp[i-k][j-1] + a[i-1])\n    print(dp[n][x])\n\nmain()\n', '\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))[::-1]\n    b = [0]*n\n    for i in range(n):\n        if i == 0:\n            b[i] = a[i]\n        else:\n            b[i] = b[i-1]+a[i]\n    print(sum(b))\n\nmain()\n', '\n\ndef main():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [[0]*(x+1) for _ in range(n+1)]  # dp[i][j] = i番目までの荷物をj回運ぶときの最大重さ\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            dp[i][j] = dp[i-1][j]\n            if i >= k:\n                dp[i][j] = max(dp[i][j], dp[i-k][j-1] + a[i-1])\n    print(dp[n][x])\n\nmain()\n']
2022-04-20 04:11:24.815941 size on output set 3
2022-04-20 04:11:24.815972 num operations 1
2022-04-20 04:11:24.815981 size on input set 1
2022-04-20 04:11:24.816216 using api key sourya
2022-04-20 04:11:32.306273 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# https://atcoder.jp/contests/dp/tasks/dp_d\n\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\n    exit()\n\ndp = [[0] * (x + 1) for _ in range(k + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if j < k:\n            dp[i][j] = dp[i - 1][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\n\nprint(dp[n][x])\n"
    },
    {
      "index": 1,
      "text": "# coding: utf-8\n\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\n    exit()\n\ndp = [[0] * (x + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if j < k:\n            dp[i][j] = dp[i - 1][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\n\nprint(dp[n][x])\n"
    },
    {
      "index": 2,
      "text": "\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\n    exit()\n\ndp = [[0] * (x + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if j < k:\n            dp[i][j] = dp[i - 1][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\n\nprint(dp[n][x])\n"
    },
    {
      "index": 3,
      "text": "\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\nif x < k:\n    print(-1)\n    exit()\ndp = [[0] * (x + 1) for _ in range(n + 1)]\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if j < k:\n            dp[i][j] = dp[i - 1][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\nprint(dp[n][x])\n"
    }
  ],
  "created": 1650427884,
  "object": "edit"
}
2022-04-20 04:11:32.306557 fix syntax errors 4 ['# https://atcoder.jp/contests/dp/tasks/dp_d\n\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\n    exit()\n\ndp = [[0] * (x + 1) for _ in range(k + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if j < k:\n            dp[i][j] = dp[i - 1][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\n\nprint(dp[n][x])\n', '# coding: utf-8\n\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\n    exit()\n\ndp = [[0] * (x + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if j < k:\n            dp[i][j] = dp[i - 1][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\n\nprint(dp[n][x])\n', '\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\n    exit()\n\ndp = [[0] * (x + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if j < k:\n            dp[i][j] = dp[i - 1][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\n\nprint(dp[n][x])\n', '\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\nif x < k:\n    print(-1)\n    exit()\ndp = [[0] * (x + 1) for _ in range(n + 1)]\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if j < k:\n            dp[i][j] = dp[i - 1][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\nprint(dp[n][x])\n']
2022-04-20 04:11:32.306618 size on output set 4
