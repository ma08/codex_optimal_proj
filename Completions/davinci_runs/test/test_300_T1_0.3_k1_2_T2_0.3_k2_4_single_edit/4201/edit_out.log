2022-04-20 04:26:00.005068 num operations 1
2022-04-20 04:26:00.005091 size on input set 1
2022-04-20 04:26:00.005312 using api key sourya
2022-04-20 04:26:04.904229 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    h, w, k = map(int, input().split())\n    c = [list(input()) for _ in range(h)]\n    ans = 0\n    for i in range(1 << h):\n        for j in range(1 << w):\n            num = 0\n            for x in range(h):\n                for y in range(w):\n                    if ((i >> x) & 1) == 0 and ((j >> y) & 1) == 0 and c[x][y] == '#':\n                        num += 1\n            if num == k:\n                ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    H, W, K = map(int, input().split())\n    c = [list(input()) for _ in range(H)]\n    ans = 0\n    for i in range(2**H):\n        for j in range(2**W):\n            num = 0\n            for x in range(H):\n                for y in range(W):\n                    if ((i >> x) & 1) == 0 and ((j >> y) & 1) == 0 and c[x][y] == '#':\n                        num += 1\n            if num == K:\n                ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    h, w, k = map(int, input().split())\n    c = [list(input()) for _ in range(h)]\n    ans = 0\n    for i in range(2**h):\n        for j in range(2**w):\n            num = 0\n            for x in range(h):\n                for y in range(w):\n                    if ((i >> x) & 1) == 0 and ((j >> y) & 1) == 0 and c[x][y] == '#':\n                        num += 1\n            if num == k:\n                ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    h, w, k = map(int, input().split())\n    c = [list(input()) for _ in range(h)]\n    ans = 0\n    for i in range(1 << h):\n        for j in range(1 << w):\n            num = 0\n            for x in range(h):\n                for y in range(w):\n                    if ((i >> x) & 1) == 0 and ((j >> y) & 1) == 0 and c[x][y] == '#':\n                        num += 1\n            if num == k:\n                ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650428760,
  "object": "edit"
}
2022-04-20 04:26:04.904561 fix syntax errors 4 ["\nimport sys\n\ndef main():\n    h, w, k = map(int, input().split())\n    c = [list(input()) for _ in range(h)]\n    ans = 0\n    for i in range(1 << h):\n        for j in range(1 << w):\n            num = 0\n            for x in range(h):\n                for y in range(w):\n                    if ((i >> x) & 1) == 0 and ((j >> y) & 1) == 0 and c[x][y] == '#':\n                        num += 1\n            if num == k:\n                ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    H, W, K = map(int, input().split())\n    c = [list(input()) for _ in range(H)]\n    ans = 0\n    for i in range(2**H):\n        for j in range(2**W):\n            num = 0\n            for x in range(H):\n                for y in range(W):\n                    if ((i >> x) & 1) == 0 and ((j >> y) & 1) == 0 and c[x][y] == '#':\n                        num += 1\n            if num == K:\n                ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    h, w, k = map(int, input().split())\n    c = [list(input()) for _ in range(h)]\n    ans = 0\n    for i in range(2**h):\n        for j in range(2**w):\n            num = 0\n            for x in range(h):\n                for y in range(w):\n                    if ((i >> x) & 1) == 0 and ((j >> y) & 1) == 0 and c[x][y] == '#':\n                        num += 1\n            if num == k:\n                ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    h, w, k = map(int, input().split())\n    c = [list(input()) for _ in range(h)]\n    ans = 0\n    for i in range(1 << h):\n        for j in range(1 << w):\n            num = 0\n            for x in range(h):\n                for y in range(w):\n                    if ((i >> x) & 1) == 0 and ((j >> y) & 1) == 0 and c[x][y] == '#':\n                        num += 1\n            if num == k:\n                ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 04:26:04.904623 size on output set 3
2022-04-20 04:26:04.904639 num operations 1
2022-04-20 04:26:04.904648 size on input set 1
2022-04-20 04:26:04.904912 using api key soukgp
2022-04-20 04:26:07.228193 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    h, w, k = map(int, sys.stdin.readline().split())\n    grid = []\n    for i in range(h):\n        grid.append(sys.stdin.readline().strip())\n    count = 0\n    for i in range(2**h):\n        for j in range(2**w):\n            cnt = 0\n            for r in range(h):\n                for c in range(w):\n                    if (i >> r) & 1 == 1:\n                        cnt += 1\n                    elif (j >> c) & 1 == 1:\n                        cnt += 1\n                    elif grid[r][c] == '#':\n                        cnt += 1\n            if cnt == k:\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    h, w, k = map(int, sys.stdin.readline().split())\n    grid = []\n    for i in range(h):\n        grid.append(sys.stdin.readline().strip())\n    count = 0\n    for i in range(1 << h):\n        for j in range(1 << w):\n            cnt = 0\n            for r in range(h):\n                for c in range(w):\n                    if (i >> r) & 1 == 1:\n                        cnt += 1\n                    elif (j >> c) & 1 == 1:\n                        cnt += 1\n                    elif grid[r][c] == '#':\n                        cnt += 1\n            if cnt == k:\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    h, w, k = map(int, sys.stdin.readline().split())\n    grid = []\n    for i in range(h):\n        grid.append(sys.stdin.readline().strip())\n    count = 0\n    for i in range(2**h):\n        for j in range(2**w):\n            cnt = 0\n            for r in range(h):\n                for c in range(w):\n                    if (i >> r) & 1 == 1:\n                        cnt += 1\n                    elif (j >> c) & 1 == 1:\n                        cnt += 1\n                    elif grid[r][c] == '#':\n                        cnt += 1\n            if cnt == k:\n                count += 1\n    print(count)\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    h, w, k = map(int, sys.stdin.readline().split())\n    grid = []\n    for i in range(h):\n        grid.append(sys.stdin.readline().strip())\n    count = 0\n    for i in range(2**h):\n        for j in range(2**w):\n            cnt = 0\n            for r in range(h):\n                for c in range(w):\n                    if (i >> r) & 1 == 1:\n                        cnt += 1\n                    elif (j >> c) & 1 == 1:\n                        cnt += 1\n                    elif grid[r][c] == '#':\n                        cnt += 1\n            if cnt == k:\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650428764,
  "object": "edit"
}
2022-04-20 04:26:07.228477 fix syntax errors 4 ["\nimport sys\n\ndef main():\n    h, w, k = map(int, sys.stdin.readline().split())\n    grid = []\n    for i in range(h):\n        grid.append(sys.stdin.readline().strip())\n    count = 0\n    for i in range(2**h):\n        for j in range(2**w):\n            cnt = 0\n            for r in range(h):\n                for c in range(w):\n                    if (i >> r) & 1 == 1:\n                        cnt += 1\n                    elif (j >> c) & 1 == 1:\n                        cnt += 1\n                    elif grid[r][c] == '#':\n                        cnt += 1\n            if cnt == k:\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    h, w, k = map(int, sys.stdin.readline().split())\n    grid = []\n    for i in range(h):\n        grid.append(sys.stdin.readline().strip())\n    count = 0\n    for i in range(1 << h):\n        for j in range(1 << w):\n            cnt = 0\n            for r in range(h):\n                for c in range(w):\n                    if (i >> r) & 1 == 1:\n                        cnt += 1\n                    elif (j >> c) & 1 == 1:\n                        cnt += 1\n                    elif grid[r][c] == '#':\n                        cnt += 1\n            if cnt == k:\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    h, w, k = map(int, sys.stdin.readline().split())\n    grid = []\n    for i in range(h):\n        grid.append(sys.stdin.readline().strip())\n    count = 0\n    for i in range(2**h):\n        for j in range(2**w):\n            cnt = 0\n            for r in range(h):\n                for c in range(w):\n                    if (i >> r) & 1 == 1:\n                        cnt += 1\n                    elif (j >> c) & 1 == 1:\n                        cnt += 1\n                    elif grid[r][c] == '#':\n                        cnt += 1\n            if cnt == k:\n                count += 1\n    print(count)\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    h, w, k = map(int, sys.stdin.readline().split())\n    grid = []\n    for i in range(h):\n        grid.append(sys.stdin.readline().strip())\n    count = 0\n    for i in range(2**h):\n        for j in range(2**w):\n            cnt = 0\n            for r in range(h):\n                for c in range(w):\n                    if (i >> r) & 1 == 1:\n                        cnt += 1\n                    elif (j >> c) & 1 == 1:\n                        cnt += 1\n                    elif grid[r][c] == '#':\n                        cnt += 1\n            if cnt == k:\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 04:26:07.228675 size on output set 3
