2022-04-20 04:33:56.831333 num operations 1
2022-04-20 04:33:56.831353 size on input set 1
2022-04-20 04:33:56.831527 using api key derek
2022-04-20 04:33:56.961655 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 04:33:58.463539 using api key sourya
2022-04-20 04:34:08.491345 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport math\n\ndef main():\n    n = int(raw_input())\n    points = []\n    for i in range(n):\n        points.append([float(x) for x in raw_input().split()])\n\n    angles = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            angle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0])\n            angles.append(angle)\n\n    angles.sort()\n    angles.append(angles[0] + 2 * math.pi)\n\n    max_angle = 0\n    for i in range(n):\n        angle = angles[i + 1] - angles[i]\n        if angle > max_angle:\n            max_angle = angle\n\n    print(int(math.degrees(max_angle)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\ndef main():\n    n = int(input(\"Enter number of points: \"))\n    points = []\n    for i in range(n):\n        points.append([float(x) for x in input(\"Enter the coordinates of point {}: \".format(i + 1)).split()])\n\n    angles = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            angle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0])\n            angles.append(angle)\n\n    angles.sort()\n    angles.append(angles[0] + 2 * math.pi)\n\n    max_angle = 0\n    for i in range(n):\n        angle = angles[i + 1] - angles[i]\n        if angle > max_angle:\n            max_angle = angle\n\n    print(\"The maximum angle is {} degrees\".format(math.degrees(max_angle)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport math\n\ndef main():\n\tn = int(input())\n\tpoints = []\n\tfor i in range(n):\n\t\tpoints.append([float(x) for x in input().split()])\n\n\tangles = []\n\tfor i in range(n):\n\t\tfor j in range(i + 1, n):\n\t\t\tangle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0])\n\t\t\tangles.append(angle)\n\n\tangles.sort()\n\tangles.append(angles[0] + 2 * math.pi)\n\n\tmax_angle = 0\n\tfor i in range(n):\n\t\tangle = angles[i + 1] - angles[i]\n\t\tif angle > max_angle:\n\t\t\tmax_angle = angle\n\n\tprint(math.degrees(max_angle))\n\nif __name__ == \"__main__\":\n\tmain()\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/env python3\n\nimport math\n\ndef main():\n    n = int(input())\n    points = []\n    for i in range(n):\n        points.append([float(x) for x in input().split()])\n\n    angles = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            angle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0])\n            angles.append(angle)\n\n    angles.sort()\n    angles.append(angles[0] + 2 * math.pi)\n\n    max_angle = 0\n    for i in range(n):\n        angle = angles[i + 1] - angles[i]\n        if angle > max_angle:\n            max_angle = angle\n\n    print(round(math.degrees(max_angle)))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650429238,
  "object": "edit"
}
2022-04-20 04:34:08.491633 fix syntax errors 4 ['#!/usr/bin/env python3\n\nimport math\n\ndef main():\n    n = int(raw_input())\n    points = []\n    for i in range(n):\n        points.append([float(x) for x in raw_input().split()])\n\n    angles = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            angle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0])\n            angles.append(angle)\n\n    angles.sort()\n    angles.append(angles[0] + 2 * math.pi)\n\n    max_angle = 0\n    for i in range(n):\n        angle = angles[i + 1] - angles[i]\n        if angle > max_angle:\n            max_angle = angle\n\n    print(int(math.degrees(max_angle)))\n\nif __name__ == "__main__":\n    main()\n', '\nimport math\n\ndef main():\n    n = int(input("Enter number of points: "))\n    points = []\n    for i in range(n):\n        points.append([float(x) for x in input("Enter the coordinates of point {}: ".format(i + 1)).split()])\n\n    angles = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            angle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0])\n            angles.append(angle)\n\n    angles.sort()\n    angles.append(angles[0] + 2 * math.pi)\n\n    max_angle = 0\n    for i in range(n):\n        angle = angles[i + 1] - angles[i]\n        if angle > max_angle:\n            max_angle = angle\n\n    print("The maximum angle is {} degrees".format(math.degrees(max_angle)))\n\nif __name__ == "__main__":\n    main()\n', '\nimport math\n\ndef main():\n\tn = int(input())\n\tpoints = []\n\tfor i in range(n):\n\t\tpoints.append([float(x) for x in input().split()])\n\n\tangles = []\n\tfor i in range(n):\n\t\tfor j in range(i + 1, n):\n\t\t\tangle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0])\n\t\t\tangles.append(angle)\n\n\tangles.sort()\n\tangles.append(angles[0] + 2 * math.pi)\n\n\tmax_angle = 0\n\tfor i in range(n):\n\t\tangle = angles[i + 1] - angles[i]\n\t\tif angle > max_angle:\n\t\t\tmax_angle = angle\n\n\tprint(math.degrees(max_angle))\n\nif __name__ == "__main__":\n\tmain()\n', '#!/usr/bin/env python3\n\nimport math\n\ndef main():\n    n = int(input())\n    points = []\n    for i in range(n):\n        points.append([float(x) for x in input().split()])\n\n    angles = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            angle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0])\n            angles.append(angle)\n\n    angles.sort()\n    angles.append(angles[0] + 2 * math.pi)\n\n    max_angle = 0\n    for i in range(n):\n        angle = angles[i + 1] - angles[i]\n        if angle > max_angle:\n            max_angle = angle\n\n    print(round(math.degrees(max_angle)))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 04:34:08.491685 size on output set 4
