2022-04-20 04:24:22.520015 num operations 1
2022-04-20 04:24:22.520038 size on input set 1
2022-04-20 04:24:22.520405 using api key sunu
2022-04-20 04:24:24.759845 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#-----Solution-----\n\nn = int(input())\nsoft = 0\nhard = 0\n\nfor i in range(n):\n    cheese = input().split()\n    if cheese[1] == \"soft\":\n        soft += 1\n    else:\n        hard += 1\n\nprint(min(soft, hard))\n"
    },
    {
      "index": 1,
      "text": "\n#-----Solution-----\n\nn = int(input())\nsoft = 0\nhard = 0\n\nfor i in range(n):\n    cheese = input().split()\n    if cheese[1] == \"soft\":\n        soft += 1\n    else:\n        hard += 1\n\nprint(min(soft, hard))\n"
    },
    {
      "index": 2,
      "text": "\n#-----Solution-----\n\nn = int(input())\nsoft = 0\nhard = 0\n\nfor i in range(n):\n    cheese = input().split()[1]\n    if cheese == \"soft\":\n        soft += 1\n    else:\n        hard += 1\n\nprint(min(soft, hard))\n"
    },
    {
      "index": 3,
      "text": "\n#-----Solution-----\n\nn = int(input())\nsoft = 0\nhard = 0\n\nfor i in range(n):\n    cheese = input().split()\n    if cheese[1] == \"soft\":\n        soft += 1\n    else:\n        hard += 1\n\nprint(min(soft, hard))\n"
    }
  ],
  "created": 1650428662,
  "object": "edit"
}
2022-04-20 04:24:24.760201 fix syntax errors 4 ['\n#-----Solution-----\n\nn = int(input())\nsoft = 0\nhard = 0\n\nfor i in range(n):\n    cheese = input().split()\n    if cheese[1] == "soft":\n        soft += 1\n    else:\n        hard += 1\n\nprint(min(soft, hard))\n', '\n#-----Solution-----\n\nn = int(input())\nsoft = 0\nhard = 0\n\nfor i in range(n):\n    cheese = input().split()\n    if cheese[1] == "soft":\n        soft += 1\n    else:\n        hard += 1\n\nprint(min(soft, hard))\n', '\n#-----Solution-----\n\nn = int(input())\nsoft = 0\nhard = 0\n\nfor i in range(n):\n    cheese = input().split()[1]\n    if cheese == "soft":\n        soft += 1\n    else:\n        hard += 1\n\nprint(min(soft, hard))\n', '\n#-----Solution-----\n\nn = int(input())\nsoft = 0\nhard = 0\n\nfor i in range(n):\n    cheese = input().split()\n    if cheese[1] == "soft":\n        soft += 1\n    else:\n        hard += 1\n\nprint(min(soft, hard))\n']
2022-04-20 04:24:24.760251 size on output set 2
2022-04-20 04:24:24.760267 num operations 1
2022-04-20 04:24:24.760277 size on input set 1
2022-04-20 04:24:24.760519 using api key derek
2022-04-20 04:24:24.798428 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 04:24:26.300446 using api key jaanu
2022-04-20 04:24:28.776437 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# SOLUTION\n\nn = int(input())\n\nsoft = []\nhard = []\n\nfor i in range(n):\n    cheese, type_of_cheese = input().split()\n    if type_of_cheese == 'soft':\n        soft.append(cheese)\n    else:\n        hard.append(cheese)\n\nprint(len(soft))\n"
    },
    {
      "index": 1,
      "text": "\n# SOLUTION\nn = int(input())\n\nsoft = []\nhard = []\n\nfor i in range(n):\n    cheese, type = input().split()\n    if type == 'soft':\n        soft.append(cheese)\n    else:\n        hard.append(cheese)\n\nprint(len(soft))\n"
    },
    {
      "index": 2,
      "text": "\n# SOLUTION\nn = int(input())\n\nsoft = []\nhard = []\n\nfor i in range(n):\n    cheese, type = input().split()\n    if type == 'soft':\n        soft.append(cheese)\n    else:\n        hard.append(cheese)\n\nprint(len(soft))\n"
    },
    {
      "index": 3,
      "text": "\n# SOLUTION\n\nn = int(input())\n\nsoft = []\nhard = []\n\nfor i in range(n):\n    cheese, cheese_type = input().split()\n    if cheese_type == 'soft':\n        soft.append(cheese)\n    else:\n        hard.append(cheese)\n\nprint(len(soft))\n"
    }
  ],
  "created": 1650428666,
  "object": "edit"
}
2022-04-20 04:24:28.776751 fix syntax errors 4 ["\n# SOLUTION\n\nn = int(input())\n\nsoft = []\nhard = []\n\nfor i in range(n):\n    cheese, type_of_cheese = input().split()\n    if type_of_cheese == 'soft':\n        soft.append(cheese)\n    else:\n        hard.append(cheese)\n\nprint(len(soft))\n", "\n# SOLUTION\nn = int(input())\n\nsoft = []\nhard = []\n\nfor i in range(n):\n    cheese, type = input().split()\n    if type == 'soft':\n        soft.append(cheese)\n    else:\n        hard.append(cheese)\n\nprint(len(soft))\n", "\n# SOLUTION\nn = int(input())\n\nsoft = []\nhard = []\n\nfor i in range(n):\n    cheese, type = input().split()\n    if type == 'soft':\n        soft.append(cheese)\n    else:\n        hard.append(cheese)\n\nprint(len(soft))\n", "\n# SOLUTION\n\nn = int(input())\n\nsoft = []\nhard = []\n\nfor i in range(n):\n    cheese, cheese_type = input().split()\n    if cheese_type == 'soft':\n        soft.append(cheese)\n    else:\n        hard.append(cheese)\n\nprint(len(soft))\n"]
2022-04-20 04:24:28.776801 size on output set 3
