2022-04-20 04:03:19.548182 num operations 1
2022-04-20 04:03:19.548200 size on input set 1
2022-04-20 04:03:19.548395 using api key kouti
2022-04-20 04:03:26.769755 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, r = map(int, input().split())\na = list(map(int, input().split()))\n\n\ndef is_possible():\n    for i in range(n):\n        if not is_heated(i):\n            return False\n    return True\n\ndef solve():\n    if not is_possible():\n        return -1\n    ans = 0\n    for i in range(n):\n        if a[i] == 0:\n            ans += 1\n            a[i] = 1\n            if not is_possible():\n                return -1\n    return ans\n\nprint(solve())\n"
    },
    {
      "index": 1,
      "text": "\nn, r = map(int, input().split())\na = list(map(int, input().split()))\n\ndef is_heated(i):\n    for j in range(i - r + 1, i + r):\n        if j >= 0 and j < n:\n            if a[j] == 1:\n                return True\n    return False\n\ndef is_possible():\n    for i in range(n):\n        if not is_heated(i):\n            return False\n    return True\n\ndef solve():\n    if not is_possible():\n        return -1\n    ans = 0\n    for i in range(n):\n        if a[i] == 0:\n            ans += 1\n            a[i] = 1\n            if not is_possible():\n                return -1\n    return ans\n\nprint(solve())\n"
    },
    {
      "index": 2,
      "text": "\nn, r = map(int, input().split())\na = list(map(int, input().split()))\n\n\ndef is_possible():\n    for i in range(n):\n        if not is_heated(i):\n            return False\n    return True\n\ndef solve():\n    if not is_possible():\n        return -1\n    ans = 0\n    for i in range(n):\n        if a[i] == 0:\n            ans += 1\n            a[i] = 1\n            if not is_possible():\n                return -1\n    return ans\n\nprint(solve())\n"
    },
    {
      "index": 3,
      "text": "# coding: utf-8\n\nn, r = map(int, input().split())\na = list(map(int, input().split()))\n\ndef is_heated(i):\n    for j in range(i - r + 1, i + r):\n        if j >= 0 and j < n:\n            if a[j] == 1:\n                return True\n    return False\n\ndef is_possible():\n    for i in range(n):\n        if not is_heated(i):\n            return False\n    return True\n\ndef solve():\n    if not is_possible():\n        return -1\n    ans = 0\n    for i in range(n):\n        if a[i] == 0:\n            ans += 1\n            a[i] = 1\n            if not is_possible():\n                return -1\n    return ans\n\nprint(solve())\n"
    }
  ],
  "created": 1650427399,
  "object": "edit"
}
2022-04-20 04:03:26.770052 fix syntax errors 4 ['\nn, r = map(int, input().split())\na = list(map(int, input().split()))\n\n\ndef is_possible():\n    for i in range(n):\n        if not is_heated(i):\n            return False\n    return True\n\ndef solve():\n    if not is_possible():\n        return -1\n    ans = 0\n    for i in range(n):\n        if a[i] == 0:\n            ans += 1\n            a[i] = 1\n            if not is_possible():\n                return -1\n    return ans\n\nprint(solve())\n', '\nn, r = map(int, input().split())\na = list(map(int, input().split()))\n\ndef is_heated(i):\n    for j in range(i - r + 1, i + r):\n        if j >= 0 and j < n:\n            if a[j] == 1:\n                return True\n    return False\n\ndef is_possible():\n    for i in range(n):\n        if not is_heated(i):\n            return False\n    return True\n\ndef solve():\n    if not is_possible():\n        return -1\n    ans = 0\n    for i in range(n):\n        if a[i] == 0:\n            ans += 1\n            a[i] = 1\n            if not is_possible():\n                return -1\n    return ans\n\nprint(solve())\n', '\nn, r = map(int, input().split())\na = list(map(int, input().split()))\n\n\ndef is_possible():\n    for i in range(n):\n        if not is_heated(i):\n            return False\n    return True\n\ndef solve():\n    if not is_possible():\n        return -1\n    ans = 0\n    for i in range(n):\n        if a[i] == 0:\n            ans += 1\n            a[i] = 1\n            if not is_possible():\n                return -1\n    return ans\n\nprint(solve())\n', '# coding: utf-8\n\nn, r = map(int, input().split())\na = list(map(int, input().split()))\n\ndef is_heated(i):\n    for j in range(i - r + 1, i + r):\n        if j >= 0 and j < n:\n            if a[j] == 1:\n                return True\n    return False\n\ndef is_possible():\n    for i in range(n):\n        if not is_heated(i):\n            return False\n    return True\n\ndef solve():\n    if not is_possible():\n        return -1\n    ans = 0\n    for i in range(n):\n        if a[i] == 0:\n            ans += 1\n            a[i] = 1\n            if not is_possible():\n                return -1\n    return ans\n\nprint(solve())\n']
2022-04-20 04:03:26.770097 size on output set 3
2022-04-20 04:03:26.770108 num operations 1
2022-04-20 04:03:26.770119 size on input set 1
2022-04-20 04:03:26.770275 using api key jaanu
2022-04-20 04:03:30.875403 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#-----Solution-----\n\nn, r = map(int, input().split())\na = list(map(int, input().split()))\n\n# The answer is the number of unwarmed elements plus the number of heaters that are not warming up any unwarmed elements\nunwarmed, heaters = 0, 0\n\nfor i in range(n):\n    if a[i] == 0:\n        unwarmed += 1\n    else:\n        # If the heater is not warming up any unwarmed elements, it is not needed\n        if i - r + 1 <= 0 or a[i - r] == 0:\n            heaters += 1\n\nif unwarmed == 0:\n    print(heaters)\nelse:\n    print(-1)\n"
    },
    {
      "index": 1,
      "text": "\n\n# -----Solution-----\n\nn, r = map(int, input().split())\na = list(map(int, input().split()))\n\n# The answer is the number of unwarmed elements\n# plus the number of heaters that are not warming up\n# any unwarmed elements\n\nunwarmed = 0\nheaters = 0\n\nfor i in range(n):\n    if a[i] == 0:\n        unwarmed += 1\n    else:\n        # If the heater is not warming up any unwarmed elements,\n        # it is not needed\n        if i - r + 1 <= 0 or a[i - r] == 0:\n            heaters += 1\n\nif unwarmed == 0:\n    print(heaters)\nelse:\n    print(-1)\n"
    },
    {
      "index": 2,
      "text": "\n#-----Solution-----\n\nn, r = map(int, input().split())\na = list(map(int, input().split()))\n\n# The answer is the number of unwarmed elements\n# plus the number of heaters that are not warming up\n# any unwarmed elements\n\nunwarmed = 0\nheaters = 0\n\nfor i in range(n):\n    if a[i] == 0:\n        unwarmed += 1\n    else:\n        # If the heater is not warming up any unwarmed elements,\n        # it is not needed\n        if i - r + 1 <= 0 or a[i - r] == 0:\n            heaters += 1\n\nif unwarmed == 0:\n    print(heaters)\nelse:\n    print(-1)\n"
    },
    {
      "index": 3,
      "text": "\n#-----Solution-----\n\nn, r = map(int, input().split())\na = list(map(int, input().split()))\n\n# The answer is the number of unwarmed elements\n# plus the number of heaters that are not warming up\n# any unwarmed elements\n\nunwarmed = 0\nheaters = 0\n\nfor i in range(n):\n    if a[i] == 0:\n        unwarmed += 1\n    else:\n        # If the heater is not warming up any unwarmed elements,\n        # it is not needed\n        if i - r + 1 <= 0 or a[i - r] == 0:\n            heaters += 1\n\nif unwarmed == 0:\n    print(heaters)\nelse:\n    print(-1)\n"
    }
  ],
  "created": 1650427406,
  "object": "edit"
}
2022-04-20 04:03:30.875646 fix syntax errors 4 ['\n#-----Solution-----\n\nn, r = map(int, input().split())\na = list(map(int, input().split()))\n\n# The answer is the number of unwarmed elements plus the number of heaters that are not warming up any unwarmed elements\nunwarmed, heaters = 0, 0\n\nfor i in range(n):\n    if a[i] == 0:\n        unwarmed += 1\n    else:\n        # If the heater is not warming up any unwarmed elements, it is not needed\n        if i - r + 1 <= 0 or a[i - r] == 0:\n            heaters += 1\n\nif unwarmed == 0:\n    print(heaters)\nelse:\n    print(-1)\n', '\n\n# -----Solution-----\n\nn, r = map(int, input().split())\na = list(map(int, input().split()))\n\n# The answer is the number of unwarmed elements\n# plus the number of heaters that are not warming up\n# any unwarmed elements\n\nunwarmed = 0\nheaters = 0\n\nfor i in range(n):\n    if a[i] == 0:\n        unwarmed += 1\n    else:\n        # If the heater is not warming up any unwarmed elements,\n        # it is not needed\n        if i - r + 1 <= 0 or a[i - r] == 0:\n            heaters += 1\n\nif unwarmed == 0:\n    print(heaters)\nelse:\n    print(-1)\n', '\n#-----Solution-----\n\nn, r = map(int, input().split())\na = list(map(int, input().split()))\n\n# The answer is the number of unwarmed elements\n# plus the number of heaters that are not warming up\n# any unwarmed elements\n\nunwarmed = 0\nheaters = 0\n\nfor i in range(n):\n    if a[i] == 0:\n        unwarmed += 1\n    else:\n        # If the heater is not warming up any unwarmed elements,\n        # it is not needed\n        if i - r + 1 <= 0 or a[i - r] == 0:\n            heaters += 1\n\nif unwarmed == 0:\n    print(heaters)\nelse:\n    print(-1)\n', '\n#-----Solution-----\n\nn, r = map(int, input().split())\na = list(map(int, input().split()))\n\n# The answer is the number of unwarmed elements\n# plus the number of heaters that are not warming up\n# any unwarmed elements\n\nunwarmed = 0\nheaters = 0\n\nfor i in range(n):\n    if a[i] == 0:\n        unwarmed += 1\n    else:\n        # If the heater is not warming up any unwarmed elements,\n        # it is not needed\n        if i - r + 1 <= 0 or a[i - r] == 0:\n            heaters += 1\n\nif unwarmed == 0:\n    print(heaters)\nelse:\n    print(-1)\n']
2022-04-20 04:03:30.875785 size on output set 3
