["\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    print(max(0, min(a[2], b[0]) - max(a[0], b[2])), max(0, min(a[2], b[0]) - max(a[0], b[2])) + min(a[2], b[2]) - max(0, min(a[2], b[0]) - max(a[0], b[2])))\n\nif __name__ == \"__main__\":\n    main()\n", "\n# SOLUTION\n\ndef rockPaperScissors(n, a, b):\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        wins = min(a[i], b[(i+1)%3])\n        min_wins += wins\n        max_wins += wins\n        a[i] -= wins\n        b[(i+1)%3] -= wins\n    max_wins += min(a[0], b[0])\n    return min_wins, max_wins\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(*rockPaperScissors(n, a, b))\n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    print(max(0, min(a[2], b[0]) - max(a[0], b[2])), max(0, min(a[2], b[0]) - max(a[0], b[2])) + min(a[2], b[2])\n\nif __name__ == \"__main__\":\n    main()\n", "# SOLUTION\n\ndef rockPaperScissors(n, a, b):\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        wins = min(a[i], b[(i+1)%3])\n        min_wins += wins\n        max_wins += wins\n        a[i] -= wins\n        b[(i+1)%3] -= wins\n    max_wins += min(a[0], b[0])\n    return min_wins, max_wins\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(*rockPaperScissors(n, a, b))\n", "\n#!/bin/python3\n# https://www.hackerrank.com/challenges/angry-children/problem\nimport math\nimport os\nimport random\nimport re\nimport sys\ndef maxMin(k, arr):\n    arr.sort()\n    return min([arr[i+k-1]-arr[i] for i in range(len(arr)-k+1)])\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n    n = int(input())\n    k = int(input())\n    arr = []\n    for _ in range(n):\n        arr_item = int(input())\n        arr.append(arr_item)\n    result = maxMin(k, arr)\n    fptr.write(str(result) + '\\n')\n    fptr.close()\n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    print(max(0, min(a[2], b[0]) - max(a[0], b[2])), max(0, min(a[2], b[0]) - max(a[0], b[2])) + min(a[2], b[2])) \n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# SOLUTION \n\ndef rockPaperScissors(n, a, b):\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        wins = min(a[i], b[(i+1)%3])\n        min_wins += wins\n        max_wins += wins\n        a[i] -= wins\n        b[(i+1)%3] -= wins\n    max_wins += min(a[0], b[0])\n    return min_wins, max_wins\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(*rockPaperScissors(n, a, b))\n"]