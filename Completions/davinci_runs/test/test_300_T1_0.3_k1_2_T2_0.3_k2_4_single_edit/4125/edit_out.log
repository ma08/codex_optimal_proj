2022-04-20 04:14:05.369533 num operations 1
2022-04-20 04:14:05.369563 size on input set 1
2022-04-20 04:14:05.369796 using api key sourya
2022-04-20 04:14:08.040648 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\n\n# Find the minimum distance between the starting point and the cities\nmin_dist = min([abs(x - city) for city in cities])\n\n# Find the maximum distance between the cities\nmax_dist = max([abs(city1 - city2) for city1 in cities for city2 in cities])\n\n# Find the maximum distance that can be traveled\nprint(max(min_dist, max_dist // 2))\n"
    },
    {
      "index": 1,
      "text": "\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\n\n# Find the minimum distance between the starting point and the cities\nmin_dist = min([abs(x - city) for city in cities])\n\n# Find the maximum distance between the cities\nmax_dist = max([abs(city1 - city2) for city1 in cities for city2 in cities])\n\n# Find the maximum distance that can be traveled\nprint(max(min_dist, max_dist // 2))\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Thu Jul  2 12:06:17 2020\n@author: ritambasu\n\"\"\"\n\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\n\n# Find the minimum distance between the starting point and the cities\nmin_dist = min([abs(x - city) for city in cities])\n\n# Find the maximum distance between the cities\nmax_dist = max([abs(city1 - city2) for city1 in cities for city2 in cities])\n\n# Find the maximum distance that can be traveled\nprint(max(min_dist, max_dist // 2))\n"
    },
    {
      "index": 3,
      "text": "\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\n\n# Find the minimum distance between the starting point and the cities\nmin_dist = min([abs(x - city) for city in cities])\n\n# Find the maximum distance between the cities\nmax_dist = max([abs(city1 - city2) for city1 in cities for city2 in cities])\n\n# Find the maximum distance that can be traveled\nprint(max(min_dist, max_dist // 2))\n"
    }
  ],
  "created": 1650428045,
  "object": "edit"
}
2022-04-20 04:14:08.041030 fix syntax errors 4 ['\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\n\n# Find the minimum distance between the starting point and the cities\nmin_dist = min([abs(x - city) for city in cities])\n\n# Find the maximum distance between the cities\nmax_dist = max([abs(city1 - city2) for city1 in cities for city2 in cities])\n\n# Find the maximum distance that can be traveled\nprint(max(min_dist, max_dist // 2))\n', '\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\n\n# Find the minimum distance between the starting point and the cities\nmin_dist = min([abs(x - city) for city in cities])\n\n# Find the maximum distance between the cities\nmax_dist = max([abs(city1 - city2) for city1 in cities for city2 in cities])\n\n# Find the maximum distance that can be traveled\nprint(max(min_dist, max_dist // 2))\n', '#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n"""\nCreated on Thu Jul  2 12:06:17 2020\n@author: ritambasu\n"""\n\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\n\n# Find the minimum distance between the starting point and the cities\nmin_dist = min([abs(x - city) for city in cities])\n\n# Find the maximum distance between the cities\nmax_dist = max([abs(city1 - city2) for city1 in cities for city2 in cities])\n\n# Find the maximum distance that can be traveled\nprint(max(min_dist, max_dist // 2))\n', '\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\n\n# Find the minimum distance between the starting point and the cities\nmin_dist = min([abs(x - city) for city in cities])\n\n# Find the maximum distance between the cities\nmax_dist = max([abs(city1 - city2) for city1 in cities for city2 in cities])\n\n# Find the maximum distance that can be traveled\nprint(max(min_dist, max_dist // 2))\n']
2022-04-20 04:14:08.041087 size on output set 2
2022-04-20 04:14:08.041105 num operations 1
2022-04-20 04:14:08.041114 size on input set 1
2022-04-20 04:14:08.041344 using api key sourya
2022-04-20 04:14:16.083109 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    x_lst = [int(i) for i in sys.stdin.readline().split()]\n    x_lst.sort()\n\n    if x in x_lst:\n        x_lst.remove(x)\n\n    min_d = max(x_lst[0] - x, x - x_lst[-1])\n    for i in range(1, n):\n        min_d = max(min_d, (x_lst[i] - x_lst[i - 1]) // 2)\n\n    print(min_d)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, x = map(int, input().split())\n    x_lst = [int(i) for i in input().split()]\n    x_lst.sort()  # sort the list\n\n    if x in x_lst:  # if x is in the list, remove it\n        x_lst.remove(x)  # remove x from the list\n\n    min_d = max(x_lst[0] - x, x - x_lst[-1])  # calculate the distance between x and the closest number\n    for i in range(1, n):\n        min_d = max(min_d, (x_lst[i] - x_lst[i - 1]) // 2)  # calculate the distance between the closest numbers\n\n    print(min_d)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    x_lst = [int(i) for i in sys.stdin.readline().split()]\n    x_lst.sort()\n\n    if x in x_lst:\n        x_lst.remove(x)\n\n    min_d = max(x_lst[0] - x, x - x_lst[-1])\n    for i in range(1, n):\n        min_d = max(min_d, (x_lst[i] - x_lst[i - 1]) // 2)\n\n    print(min_d)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    x_list = [int(i) for i in sys.stdin.readline().split()]\n    x_list.sort()\n\n    if x in x_list:\n        x_list.remove(x)\n\n    min_d = max(x_list[0] - x, x - x_list[-1])\n    for i in range(1, n):\n        min_d = max(min_d, (x_list[i] - x_list[i - 1]) // 2)\n\n    print(min_d)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650428048,
  "object": "edit"
}
2022-04-20 04:14:16.083425 fix syntax errors 4 ["\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    x_lst = [int(i) for i in sys.stdin.readline().split()]\n    x_lst.sort()\n\n    if x in x_lst:\n        x_lst.remove(x)\n\n    min_d = max(x_lst[0] - x, x - x_lst[-1])\n    for i in range(1, n):\n        min_d = max(min_d, (x_lst[i] - x_lst[i - 1]) // 2)\n\n    print(min_d)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, x = map(int, input().split())\n    x_lst = [int(i) for i in input().split()]\n    x_lst.sort()  # sort the list\n\n    if x in x_lst:  # if x is in the list, remove it\n        x_lst.remove(x)  # remove x from the list\n\n    min_d = max(x_lst[0] - x, x - x_lst[-1])  # calculate the distance between x and the closest number\n    for i in range(1, n):\n        min_d = max(min_d, (x_lst[i] - x_lst[i - 1]) // 2)  # calculate the distance between the closest numbers\n\n    print(min_d)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    x_lst = [int(i) for i in sys.stdin.readline().split()]\n    x_lst.sort()\n\n    if x in x_lst:\n        x_lst.remove(x)\n\n    min_d = max(x_lst[0] - x, x - x_lst[-1])\n    for i in range(1, n):\n        min_d = max(min_d, (x_lst[i] - x_lst[i - 1]) // 2)\n\n    print(min_d)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    x_list = [int(i) for i in sys.stdin.readline().split()]\n    x_list.sort()\n\n    if x in x_list:\n        x_list.remove(x)\n\n    min_d = max(x_list[0] - x, x - x_list[-1])\n    for i in range(1, n):\n        min_d = max(min_d, (x_list[i] - x_list[i - 1]) // 2)\n\n    print(min_d)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 04:14:16.083589 size on output set 3
