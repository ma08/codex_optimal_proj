2022-04-13 01:07:06.738384 num operations 2
2022-04-13 01:07:06.738395 size on input set 1
2022-04-13 01:07:10.283070 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# SOLUTION\n\n# Accept the number of vertex\nn = int(input())\n\n# Initialize the number of diagonals\nd = 2 * n - 5\n\n# Initialize the number of intersections\ni = n - 3\n\n# Initialize the count of diagonals that intersect\nd_i = 0\n\n# For each diagonal\nfor _ in range(d):\n    # Add the number of intersections for this diagonal\n    d_i += i\n    # Decrement the number of intersections\n    i -= 1\n\n# Print the number of intersections\nprint(d_i)\n"
    },
    {
      "index": 1,
      "text": "\n\n# SOLUTION\n\n# Accept the number of vertexes\nn = int(input())\n\n# Initialize the number of diagonals\nd = 2 * n - 5\n\n# Initialize the number of intersections\ni = n - 3\n\n# Initialize the count of diagonals that intersect\nd_i = 0\n\n# For each diagonal\nfor _ in range(d):\n    # Add the number of intersections for this diagonal\n    d_i += i\n    # Decrement the number of intersections\n    i -= 1\n\n# Print the number of intersections\nprint(d_i)\n"
    },
    {
      "index": 2,
      "text": "\n\n# SOLUTION\n\n# Accept the number of vertices\nn = int(input())\n\n# Initialize the number of diagonals and intersection\nd = 2 * n - 5  # diagonals\ni = n - 3  # intersections\n\n# Initialize the count of diagonals that intersects\nd_i = 0\n\n# For each diagonal\nfor _ in range(d):\n    # Add the number of intersections for this diagonal\n    d_i += i\n    # Decrement the number of intersections\n    i -= 1\n\n# Print the number of intersections\nprint(d_i)\n"
    }
  ],
  "created": 1649812026,
  "object": "edit"
}
2022-04-13 01:07:10.283311 fix spelling mistakes 3 ['\n\n# SOLUTION\n\n# Accept the number of vertex\nn = int(input())\n\n# Initialize the number of diagonals\nd = 2 * n - 5\n\n# Initialize the number of intersections\ni = n - 3\n\n# Initialize the count of diagonals that intersect\nd_i = 0\n\n# For each diagonal\nfor _ in range(d):\n    # Add the number of intersections for this diagonal\n    d_i += i\n    # Decrement the number of intersections\n    i -= 1\n\n# Print the number of intersections\nprint(d_i)\n', '\n\n# SOLUTION\n\n# Accept the number of vertexes\nn = int(input())\n\n# Initialize the number of diagonals\nd = 2 * n - 5\n\n# Initialize the number of intersections\ni = n - 3\n\n# Initialize the count of diagonals that intersect\nd_i = 0\n\n# For each diagonal\nfor _ in range(d):\n    # Add the number of intersections for this diagonal\n    d_i += i\n    # Decrement the number of intersections\n    i -= 1\n\n# Print the number of intersections\nprint(d_i)\n', '\n\n# SOLUTION\n\n# Accept the number of vertices\nn = int(input())\n\n# Initialize the number of diagonals and intersection\nd = 2 * n - 5  # diagonals\ni = n - 3  # intersections\n\n# Initialize the count of diagonals that intersects\nd_i = 0\n\n# For each diagonal\nfor _ in range(d):\n    # Add the number of intersections for this diagonal\n    d_i += i\n    # Decrement the number of intersections\n    i -= 1\n\n# Print the number of intersections\nprint(d_i)\n']
2022-04-13 01:07:10.283343 size on output set 3
2022-04-13 01:07:10.283350 size on input set 3
2022-04-13 01:07:18.364306 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# SOLUTION\n\n# Read the number of vertices\nn = int(input(\"Enter the number of vertices: \"))\n\n# Initialize the number of diagonals and intersections\nd = 2 * n - 5  # number of diagonals\ni = n - 3  # number of intersections\n\nd_i = 0  # number of diagonals that intersects\n\n# For each diagonal\nfor _ in range(d):\n    # Add the number of intersections for this diagonal\n    d_i += i\n    # Decrement the number of intersections\n    i -= 1\n\n# Print the number of intersections\nprint(d_i)\n"
    },
    {
      "index": 1,
      "text": "\n\n# SOLUTION\n\n# Accept the number of vertices\nn = int(input())\n# Initialize the number of diagonals and intersection\nd = 2 * n - 5  # diagonals\ni = n - 3  # intersections\n\n# Initialize the count of diagonals that intersects\nd_i = 0\n\n# For each diagonal\nfor _ in range(d):\n    # Add the number of intersections for this diagonal\n    d_i += i\n    # Decrement the number of intersections\n    i -= 1\n\n# Print the number of intersections\nprint(d_i)\n"
    },
    {
      "index": 2,
      "text": "\n\n# SOLUTION\n\n# Accept the number of vertices\nn = int(input())\n\n# Initialize the number of diagonals and intersection\nd = 2 * n - 5  # diagonals\ni = n - 3  # intersections\n\n# Initialize the count of diagonals that intersects\nd_i = 0\n\n# For each diagonal\nfor _ in range(d):\n    # Add the number of intersections for this diagonal\n    d_i += i\n    # Decrement the number of intersections\n    i -= 1\n \n# Print the number of intersections\nprint(d_i)\n"
    }
  ],
  "created": 1649812030,
  "object": "edit"
}
2022-04-13 01:07:18.364505 fix syntax errors 3 ['\n\n# SOLUTION\n\n# Read the number of vertices\nn = int(input("Enter the number of vertices: "))\n\n# Initialize the number of diagonals and intersections\nd = 2 * n - 5  # number of diagonals\ni = n - 3  # number of intersections\n\nd_i = 0  # number of diagonals that intersects\n\n# For each diagonal\nfor _ in range(d):\n    # Add the number of intersections for this diagonal\n    d_i += i\n    # Decrement the number of intersections\n    i -= 1\n\n# Print the number of intersections\nprint(d_i)\n', '\n\n# SOLUTION\n\n# Accept the number of vertices\nn = int(input())\n# Initialize the number of diagonals and intersection\nd = 2 * n - 5  # diagonals\ni = n - 3  # intersections\n\n# Initialize the count of diagonals that intersects\nd_i = 0\n\n# For each diagonal\nfor _ in range(d):\n    # Add the number of intersections for this diagonal\n    d_i += i\n    # Decrement the number of intersections\n    i -= 1\n\n# Print the number of intersections\nprint(d_i)\n', '\n\n# SOLUTION\n\n# Accept the number of vertices\nn = int(input())\n\n# Initialize the number of diagonals and intersection\nd = 2 * n - 5  # diagonals\ni = n - 3  # intersections\n\n# Initialize the count of diagonals that intersects\nd_i = 0\n\n# For each diagonal\nfor _ in range(d):\n    # Add the number of intersections for this diagonal\n    d_i += i\n    # Decrement the number of intersections\n    i -= 1\n \n# Print the number of intersections\nprint(d_i)\n']
2022-04-13 01:07:20.639734 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Accept the number of vertexes\nn = int(input())\n\n# Initialize the number of diagonals\nd = 2 * n - 5\n\n# Initialize the number of intersections\ni = n - 3\n\n# Initialize the count of diagonals that intersect\nd_i = 0\n\n# For each diagonal\nfor _ in range(d):\n    # Add the number of intersections for this diagonal\n    d_i += i\n    # Decrement the number of intersections\n    i -= 1\n\n# Print the number of intersections\nprint(d_i)\n"
    },
    {
      "index": 1,
      "text": "\n\n# SOLUTION\n\n# Accept the number of vertices\nn = int(input())\n\n# Initialize the number of diagonals\nd = 2 * n - 5\n\n# Initialize the number of intersections\ni = n - 3\n\n# Initialize the count of diagonals that intersect\nd_i = 0\n\n# For each diagonal\nfor _ in range(d):\n    # Add the number of intersections for this diagonal\n    d_i += i\n    # Decrement the number of intersections\n    i -= 1\n\n# Print the number of intersections\nprint(d_i)\n"
    },
    {
      "index": 2,
      "text": "\n\n# SOLUTION\n\n# Accept the number of vertexes\nn = int(input())\n\n# Initialize the number of diagonals\nd = 2 * n - 5\n\n# Initialize the number of intersections\ni = n - 3\n\n# Initialize the count of diagonals that intersect\nd_i = 0\n\n# For each diagonal\nfor _ in range(d):\n    # Add the number of intersections for this diagonal\n    d_i += i\n    # Decrement the number of intersections\n    i -= 1\n\n# Print the number of intersections\nprint(d_i)\n"
    }
  ],
  "created": 1649812038,
  "object": "edit"
}
2022-04-13 01:07:20.639944 fix syntax errors 3 ['\n# Accept the number of vertexes\nn = int(input())\n\n# Initialize the number of diagonals\nd = 2 * n - 5\n\n# Initialize the number of intersections\ni = n - 3\n\n# Initialize the count of diagonals that intersect\nd_i = 0\n\n# For each diagonal\nfor _ in range(d):\n    # Add the number of intersections for this diagonal\n    d_i += i\n    # Decrement the number of intersections\n    i -= 1\n\n# Print the number of intersections\nprint(d_i)\n', '\n\n# SOLUTION\n\n# Accept the number of vertices\nn = int(input())\n\n# Initialize the number of diagonals\nd = 2 * n - 5\n\n# Initialize the number of intersections\ni = n - 3\n\n# Initialize the count of diagonals that intersect\nd_i = 0\n\n# For each diagonal\nfor _ in range(d):\n    # Add the number of intersections for this diagonal\n    d_i += i\n    # Decrement the number of intersections\n    i -= 1\n\n# Print the number of intersections\nprint(d_i)\n', '\n\n# SOLUTION\n\n# Accept the number of vertexes\nn = int(input())\n\n# Initialize the number of diagonals\nd = 2 * n - 5\n\n# Initialize the number of intersections\ni = n - 3\n\n# Initialize the count of diagonals that intersect\nd_i = 0\n\n# For each diagonal\nfor _ in range(d):\n    # Add the number of intersections for this diagonal\n    d_i += i\n    # Decrement the number of intersections\n    i -= 1\n\n# Print the number of intersections\nprint(d_i)\n']
2022-04-13 01:07:23.936022 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\n# SOLUTION\n\n# Accept the number of vertex\nn = int(input())\n\n# Initialize the number of intersections\nintersections = 0\n\n# Initialize the number of intersections\ni = n - 3\n\n# Initialize the count of diagonals that intersect\nd_i = 0\n\n# For each diagonal\nfor _ in range(d):\n    # Add the number of intersections for this diagonal\n    d_i += i\n    # Decrement the number of intersections\n    i -= 1\n\n# Print the number of intersections\nprint(d_i)\n"
    },
    {
      "index": 1,
      "text": "\n# SOLUTION\n\n# Accept the number of vertex\nn = int(input(\"enter the number of vertex\"))\n\n# Initialize the number of diagonals\nd = 2 * n - 5\n\n# Initialize the number of intersections\ni = n - 3\n\n# Initialize the count of diagonals that intersect\nd_i = 0\n\n# For each diagonal\nfor _ in range(d):\n    # Add the number of intersections for this diagonal\n    d_i += i\n    # Decrement the number of intersections\n    i -= 1\n\n# Print the number of intersections\nprint(d_i)\n"
    },
    {
      "index": 2,
      "text": "\n# SOLUTION\n\n# Accept the number of vertex\nn = int(input())\n\n# Initialize the number of diagonals\nd = 2*n - 5\n\n# Initialize the number of intersections\ni = n-3\n\n# Initialize the count of diagonals that intersect\nd_i = 0\n\n# For each diagonal\nfor _ in range(d):\n    # Add the number of intersections for this diagonal\n    d_i += i\n    # Decrement the number of intersections\n    i -= 1\n\n# Print the number of intersections\nprint(d_i)\n"
    }
  ],
  "created": 1649812040,
  "object": "edit"
}
2022-04-13 01:07:23.936264 fix syntax errors 3 ['\n\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\n# SOLUTION\n\n# Accept the number of vertex\nn = int(input())\n\n# Initialize the number of intersections\nintersections = 0\n\n# Initialize the number of intersections\ni = n - 3\n\n# Initialize the count of diagonals that intersect\nd_i = 0\n\n# For each diagonal\nfor _ in range(d):\n    # Add the number of intersections for this diagonal\n    d_i += i\n    # Decrement the number of intersections\n    i -= 1\n\n# Print the number of intersections\nprint(d_i)\n', '\n# SOLUTION\n\n# Accept the number of vertex\nn = int(input("enter the number of vertex"))\n\n# Initialize the number of diagonals\nd = 2 * n - 5\n\n# Initialize the number of intersections\ni = n - 3\n\n# Initialize the count of diagonals that intersect\nd_i = 0\n\n# For each diagonal\nfor _ in range(d):\n    # Add the number of intersections for this diagonal\n    d_i += i\n    # Decrement the number of intersections\n    i -= 1\n\n# Print the number of intersections\nprint(d_i)\n', '\n# SOLUTION\n\n# Accept the number of vertex\nn = int(input())\n\n# Initialize the number of diagonals\nd = 2*n - 5\n\n# Initialize the number of intersections\ni = n-3\n\n# Initialize the count of diagonals that intersect\nd_i = 0\n\n# For each diagonal\nfor _ in range(d):\n    # Add the number of intersections for this diagonal\n    d_i += i\n    # Decrement the number of intersections\n    i -= 1\n\n# Print the number of intersections\nprint(d_i)\n']
2022-04-13 01:07:23.936300 size on output set 9
2022-04-13 01:07:23.936311 num operations 2
2022-04-13 01:07:23.936316 size on input set 1
2022-04-13 01:07:26.025851 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nans = (n - 2) * (n - 1) // 2\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nans = (n - 3) * (n - 2) // 2\n\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nans = (n - 3) * (n - 2) // 2\n\nprint(ans)\n"
    }
  ],
  "created": 1649812043,
  "object": "edit"
}
2022-04-13 01:07:26.026049 fix spelling mistakes 3 ['\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nans = (n - 2) * (n - 1) // 2\n\nprint(ans)\n', '\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nans = (n - 3) * (n - 2) // 2\n\nprint(ans)\n', '\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nans = (n - 3) * (n - 2) // 2\n\nprint(ans)\n']
2022-04-13 01:07:26.026071 size on output set 2
2022-04-13 01:07:26.026077 size on input set 2
2022-04-13 01:07:28.407631 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nn = int(sys.stdin.readline())\n\nans = (n - 2) * (n - 1) // 2\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "import sys\n\nn = int(sys.stdin.readline())\n\nans = (n - 2) * (n - 1) // 2\n\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\nn = int(sys.stdin.readline())\n\nans = (n - 2) * (n - 1) // 2\n\nprint(ans)\n"
    }
  ],
  "created": 1649812046,
  "object": "edit"
}
2022-04-13 01:07:28.407824 fix syntax errors 3 ['\nimport sys\n\nn = int(sys.stdin.readline())\n\nans = (n - 2) * (n - 1) // 2\n\nprint(ans)\n', 'import sys\n\nn = int(sys.stdin.readline())\n\nans = (n - 2) * (n - 1) // 2\n\nprint(ans)\n', '\nimport sys\nn = int(sys.stdin.readline())\n\nans = (n - 2) * (n - 1) // 2\n\nprint(ans)\n']
2022-04-13 01:07:30.684171 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nn = int(sys.stdin.readline())\n\nans = (n - 3) * (n - 2) // 2\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nn = int(sys.stdin.readline())\nans = (n - 3) * (n - 2) // 2\n\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\nn = int(sys.stdin.readline())\n\nans = (n - 3) * (n - 2) / 2\n\nprint(ans)\n"
    }
  ],
  "created": 1649812048,
  "object": "edit"
}
2022-04-13 01:07:30.684354 fix syntax errors 3 ['\nimport sys\n\nn = int(sys.stdin.readline())\n\nans = (n - 3) * (n - 2) // 2\n\nprint(ans)\n', '\n\nimport sys\nn = int(sys.stdin.readline())\nans = (n - 3) * (n - 2) // 2\n\nprint(ans)\n', '\nimport sys\n\nn = int(sys.stdin.readline())\n\nans = (n - 3) * (n - 2) / 2\n\nprint(ans)\n']
2022-04-13 01:07:30.684374 size on output set 6
2022-04-13 01:07:30.684384 num operations 2
2022-04-13 01:07:30.684389 size on input set 1
2022-04-13 01:07:32.663774 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    \"\"\"\n    The number of intersections is given by the formula:\n    n*(n-3)//2\n    \"\"\"\n    n = int(input())\n    print(n*(n-3)//2)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"\n    The number of intersecctions is given by the formula:\n    n*(n-3)/2\n    \"\"\"\n    n = int(input())\n    print(n*(n-3)//2)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    \"\"\"\n    The number of intersections is given by the formula:\n    n*(n-3)//2\n    \"\"\"\n    n = int(input())\n    print(n*(n-3)//2)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649812050,
  "object": "edit"
}
2022-04-13 01:07:32.664019 fix spelling mistakes 3 ['\n\ndef main():\n    """\n    The number of intersections is given by the formula:\n    n*(n-3)//2\n    """\n    n = int(input())\n    print(n*(n-3)//2)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    The number of intersecctions is given by the formula:\n    n*(n-3)/2\n    """\n    n = int(input())\n    print(n*(n-3)//2)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    The number of intersections is given by the formula:\n    n*(n-3)//2\n    """\n    n = int(input())\n    print(n*(n-3)//2)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 01:07:32.664072 size on output set 2
2022-04-13 01:07:32.664082 size on input set 2
2022-04-13 01:07:35.044249 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    \"\"\"\n    The number of intersections is given by the formula:\n    n*(n-3)//2\n    \"\"\"\n    n = int(input())\n    print(n * (n - 3) // 2)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"\n    The number of intersections is given by the formula:\n    n*(n-3)//2\n    \"\"\"\n    n = int(input())\n    print(n * (n - 3) // 2)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    \"\"\"\n    The number of intersections is given by the formula:\n    n*(n-3)//2, where n is the number of points\n    \"\"\"\n    n = int(input())\n    print(n*(n-3)//2)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649812052,
  "object": "edit"
}
2022-04-13 01:07:35.044541 fix syntax errors 3 ['\ndef main():\n    """\n    The number of intersections is given by the formula:\n    n*(n-3)//2\n    """\n    n = int(input())\n    print(n * (n - 3) // 2)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    The number of intersections is given by the formula:\n    n*(n-3)//2\n    """\n    n = int(input())\n    print(n * (n - 3) // 2)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    The number of intersections is given by the formula:\n    n*(n-3)//2, where n is the number of points\n    """\n    n = int(input())\n    print(n*(n-3)//2)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 01:07:37.224885 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    \"\"\"\n    The number of intersecctions is given by the formula:\n    n*(n-3)/2\n    \"\"\"\n    n = int(input())\n    print(n*(n-3)//2) \n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"\n    The number of intersecctions is given by the formula:\n    n*(n-3)/2\n    \"\"\"\n    n = int(input())\n    print(n*(n-3)//2)  # noqa: E999\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    \"\"\"\n    The number of intersecctions is given by the formula:\n    n*(n-3)/2\n    \"\"\"\n    n = int(input())\n    print(n*(n-3)//2) \n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649812055,
  "object": "edit"
}
2022-04-13 01:07:37.225111 fix syntax errors 3 ['\n\ndef main():\n    """\n    The number of intersecctions is given by the formula:\n    n*(n-3)/2\n    """\n    n = int(input())\n    print(n*(n-3)//2) \n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    The number of intersecctions is given by the formula:\n    n*(n-3)/2\n    """\n    n = int(input())\n    print(n*(n-3)//2)  # noqa: E999\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    The number of intersecctions is given by the formula:\n    n*(n-3)/2\n    """\n    n = int(input())\n    print(n*(n-3)//2) \n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 01:07:37.225171 size on output set 5
2022-04-13 01:07:37.225184 num operations 2
2022-04-13 01:07:37.225189 size on input set 1
2022-04-13 01:07:39.369433 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\nprint((n-3)*(n-4)//2) \n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\nprint((n-5)*(n-4)//2)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\nprint((n-3)*(n-2)//2)\n"
    }
  ],
  "created": 1649812057,
  "object": "edit"
}
2022-04-13 01:07:39.369614 fix spelling mistakes 3 ['\n\nn = int(input())\nprint((n-3)*(n-4)//2) \n', '\n\nn = int(input())\nprint((n-5)*(n-4)//2)\n', '\n\nn = int(input())\nprint((n-3)*(n-2)//2)\n']
2022-04-13 01:07:39.369632 size on output set 3
2022-04-13 01:07:39.369638 size on input set 3
2022-04-13 01:07:41.259210 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\nprint((n-3)*(n-4)//2)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\nprint((n-3)*(n-4)//2)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nprint((n-3)*(n-4)//2) \n"
    }
  ],
  "created": 1649812059,
  "object": "edit"
}
2022-04-13 01:07:41.259405 fix syntax errors 3 ['\n\nn = int(input())\nprint((n-3)*(n-4)//2)\n', '\n\nn = int(input())\nprint((n-3)*(n-4)//2)\n', '\nn = int(input())\nprint((n-3)*(n-4)//2) \n']
2022-04-13 01:07:43.395704 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\nprint((n-5)*(n-4)//2) \n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\nprint((n-5)*(n-4)//2) # first way\nprint((n-4)*(n-3)//2) # second way\n"
    },
    {
      "index": 2,
      "text": "\n\n\nn = int(input())\nprint((n-5)*(n-4)//2)\n"
    }
  ],
  "created": 1649812061,
  "object": "edit"
}
2022-04-13 01:07:43.395901 fix syntax errors 3 ['\n\nn = int(input())\nprint((n-5)*(n-4)//2) \n', '\n\nn = int(input())\nprint((n-5)*(n-4)//2) # first way\nprint((n-4)*(n-3)//2) # second way\n', '\n\n\nn = int(input())\nprint((n-5)*(n-4)//2)\n']
2022-04-13 01:07:45.448402 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\nprint((n-3)*(n-2)//2) \n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nprint((n-3)*(n-2)//2)\n"
    },
    {
      "index": 2,
      "text": "n = int(input())\nprint((n-3)*(n-2)//2\n"
    }
  ],
  "created": 1649812063,
  "object": "edit"
}
2022-04-13 01:07:45.448586 fix syntax errors 3 ['\n\nn = int(input())\nprint((n-3)*(n-2)//2) \n', '\nn = int(input())\nprint((n-3)*(n-2)//2)\n', 'n = int(input())\nprint((n-3)*(n-2)//2\n']
2022-04-13 01:07:45.448604 size on output set 8
2022-04-13 01:07:45.448614 num operations 2
2022-04-13 01:07:45.448621 size on input set 1
2022-04-13 01:07:48.557286 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nprint((n-3)*(n-2)*(n-1)*(n)/24)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nn = int(sys.stdin.readline())  # read a line with a single integer\n\nprint((n-3)*(n-2)*(n-1)/6)  # print 3 integers, on different lines, one at a time\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys, math\n\nn = int(sys.stdin.readline())\n\nprint(math.factorial(n) / (math.factorial(n-3) * 6))\n"
    }
  ],
  "created": 1649812065,
  "object": "edit"
}
2022-04-13 01:07:48.557502 fix spelling mistakes 3 ['\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nprint((n-3)*(n-2)*(n-1)*(n)/24)\n', '\n\nimport sys\n\nn = int(sys.stdin.readline())  # read a line with a single integer\n\nprint((n-3)*(n-2)*(n-1)/6)  # print 3 integers, on different lines, one at a time\n', '\n\nimport sys, math\n\nn = int(sys.stdin.readline())\n\nprint(math.factorial(n) / (math.factorial(n-3) * 6))\n']
2022-04-13 01:07:48.557524 size on output set 3
2022-04-13 01:07:48.557531 size on input set 3
2022-04-13 01:07:51.424097 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys, math\n\nn = int(sys.stdin.readline())\n\nprint(math.factorial(n) / (math.factorial(n - 3) * 6))\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport math\n\nn = int(sys.stdin.readline())\n\nprint(math.factorial(n) / (math.factorial(n - 3) * 6))\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\nimport math\n\nn = int(sys.stdin.readline())\n\nprint(math.factorial(n) / (math.factorial(n - 3) * 6))\n"
    }
  ],
  "created": 1649812068,
  "object": "edit"
}
2022-04-13 01:07:51.424309 fix syntax errors 3 ['import sys, math\n\nn = int(sys.stdin.readline())\n\nprint(math.factorial(n) / (math.factorial(n - 3) * 6))\n', '\n\nimport sys\nimport math\n\nn = int(sys.stdin.readline())\n\nprint(math.factorial(n) / (math.factorial(n - 3) * 6))\n', '\nimport sys\nimport math\n\nn = int(sys.stdin.readline())\n\nprint(math.factorial(n) / (math.factorial(n - 3) * 6))\n']
2022-04-13 01:07:53.753791 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nprint((n-3)*(n-2)*(n-1)*(n)/24.0)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nprint((n-3)*(n-2)*(n-1)*(n)/24) \n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\nn = int(sys.stdin.readline())\n\nprint((n-3)*(n-2)*(n-1)*(n)/24)\n"
    }
  ],
  "created": 1649812071,
  "object": "edit"
}
2022-04-13 01:07:53.753985 fix syntax errors 3 ['\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nprint((n-3)*(n-2)*(n-1)*(n)/24.0)\n', '\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nprint((n-3)*(n-2)*(n-1)*(n)/24) \n', '\n\nimport sys\nn = int(sys.stdin.readline())\n\nprint((n-3)*(n-2)*(n-1)*(n)/24)\n']
2022-04-13 01:07:56.576605 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\nn = int(sys.stdin.readline())  # read a line with a single integer\n\nprint((n-3)*(n-2)*(n-1)/6)  \n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nn = int(sys.stdin.readline())  # read a line with a single integer\n\nprint((n-3)*(n-2)*(n-1)/6)\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\nn = int(sys.stdin.readline())  # read a line with a single integer\n\nprint((n-3) * (n-2) * (n-1) / 6)  # print 3 integers, on different lines, one at a time\n"
    }
  ],
  "created": 1649812073,
  "object": "edit"
}
2022-04-13 01:07:56.576871 fix syntax errors 3 ['\n\nimport sys\n\nn = int(sys.stdin.readline())  # read a line with a single integer\n\nprint((n-3)*(n-2)*(n-1)/6)  \n', '\n\nimport sys\n\nn = int(sys.stdin.readline())  # read a line with a single integer\n\nprint((n-3)*(n-2)*(n-1)/6)\n', '\n\nimport sys\n\nn = int(sys.stdin.readline())  # read a line with a single integer\n\nprint((n-3) * (n-2) * (n-1) / 6)  # print 3 integers, on different lines, one at a time\n']
2022-04-13 01:07:56.576902 size on output set 9
2022-04-13 01:07:56.576913 num operations 2
2022-04-13 01:07:56.576918 size on input set 1
2022-04-13 01:07:58.340908 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input()) \n\nif n < 3 or n > 100:\n    raise ValueError(\"Input is out of range.\")\n\nprint((n-3)*(n-2)*(n-1)//6)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\n\nif n < 3 or n > 100:\n    raise ValueError(\"Input is out of range.\")\n\nprint((n-3)*(n-2)*(n-1)//6)\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n\nn = int(input())\n\nif n < 3 or n > 100:\n    raise ValueError(\"Input is out of range.\")\n\nprint((n-3)*(n-2)*(n-1)//6)\n"
    }
  ],
  "created": 1649812076,
  "object": "edit"
}
2022-04-13 01:07:58.341105 fix spelling mistakes 3 ['\n\nn = int(input()) \n\nif n < 3 or n > 100:\n    raise ValueError("Input is out of range.")\n\nprint((n-3)*(n-2)*(n-1)//6)\n', '\nn = int(input())\n\nif n < 3 or n > 100:\n    raise ValueError("Input is out of range.")\n\nprint((n-3)*(n-2)*(n-1)//6)\n', '#!/usr/bin/env python3\n\nn = int(input())\n\nif n < 3 or n > 100:\n    raise ValueError("Input is out of range.")\n\nprint((n-3)*(n-2)*(n-1)//6)\n']
2022-04-13 01:07:58.341128 size on output set 3
2022-04-13 01:07:58.341134 size on input set 3
2022-04-13 01:08:01.001426 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input()) \n\nif n < 3 or n > 100:\n    raise ValueError(\"Input is out of range.\")\nprint((n-3)*(n-2)*(n-1)//6)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input()) \n\nif n < 3 or n > 100:\n    raise ValueError(\"Input is out of range.\")\n\nprint((n-3)*(n-2)*(n-1)//6)\n"
    },
    {
      "index": 2,
      "text": "\nprint(\"hello\")\n"
    }
  ],
  "created": 1649812078,
  "object": "edit"
}
2022-04-13 01:08:01.001635 fix syntax errors 3 ['n = int(input()) \n\nif n < 3 or n > 100:\n    raise ValueError("Input is out of range.")\nprint((n-3)*(n-2)*(n-1)//6)\n', '\nn = int(input()) \n\nif n < 3 or n > 100:\n    raise ValueError("Input is out of range.")\n\nprint((n-3)*(n-2)*(n-1)//6)\n', '\nprint("hello")\n']
2022-04-13 01:08:04.352704 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nn = int(input())\n\nif n < 3 or n > 100:\n    raise ValueError(\"Input is out of range.\")\n\nprint((n-3)*(n-2)*(n-1)*(n-0)//24)\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nn = int(input())\n\nif n < 3:\n    raise ValueError(\"Input is out of range\")\n\nprint((n - 3) * (n - 2) * (n - 1) // 6)\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n\nn = int(input())\n\nif n < 3 or n > 100:\n    raise ValueError(\"Input is out of range.\")\n\nprint((n-3)*(n-2)*(n-1)//6) \n"
    }
  ],
  "created": 1649812081,
  "object": "edit"
}
2022-04-13 01:08:04.352908 fix syntax errors 3 ['#!/usr/bin/env python3\n\nn = int(input())\n\nif n < 3 or n > 100:\n    raise ValueError("Input is out of range.")\n\nprint((n-3)*(n-2)*(n-1)*(n-0)//24)\n', '#!/usr/bin/env python3\n\nn = int(input())\n\nif n < 3:\n    raise ValueError("Input is out of range")\n\nprint((n - 3) * (n - 2) * (n - 1) // 6)\n', '#!/usr/bin/env python3\n\nn = int(input())\n\nif n < 3 or n > 100:\n    raise ValueError("Input is out of range.")\n\nprint((n-3)*(n-2)*(n-1)//6) \n']
2022-04-13 01:08:07.409046 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\n\nif n < 3 or n > 100:\n    raise ValueError(\"Input is out of range.\")\n\nprint((n-3)*(n-2)*(n-1)//6) \n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\n\nif n < 3 or n > 100:\n    raise ValueError(\"Input is out of range\")\n\nprint((n-3)*(n-2)*(n-1)//6)\n"
    },
    {
      "index": 2,
      "text": "n = int(input())\nprint((n - 3) * (n - 2) * (n - 1) // 6)\n"
    }
  ],
  "created": 1649812084,
  "object": "edit"
}
2022-04-13 01:08:07.409263 fix syntax errors 3 ['\nn = int(input())\n\nif n < 3 or n > 100:\n    raise ValueError("Input is out of range.")\n\nprint((n-3)*(n-2)*(n-1)//6) \n', '\nn = int(input())\n\nif n < 3 or n > 100:\n    raise ValueError("Input is out of range")\n\nprint((n-3)*(n-2)*(n-1)//6)\n', 'n = int(input())\nprint((n - 3) * (n - 2) * (n - 1) // 6)\n']
2022-04-13 01:08:07.409286 size on output set 9
2022-04-13 01:08:07.409302 num operations 2
2022-04-13 01:08:07.409308 size on input set 1
2022-04-13 01:08:11.209655 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(0)\n    else:\n        print(n-2)\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    if n == 3:\n        print(0)\n    elif n == 4:\n        print(1)\n    else:\n        print((n-3)*(n-2)*(n-1)/2)\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    if n == 3:\n        print(0)\n    elif n == 4: \n        print(1)\n    else:\n        print((n-3)*(n-2)*(n-4)/2)\n\nmain()\n"
    }
  ],
  "created": 1649812087,
  "object": "edit"
}
2022-04-13 01:08:11.209976 fix spelling mistakes 3 ['\nimport sys\n\ndef main():\n    n = int(input())\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(0)\n    else:\n        print(n-2)\n\nmain()\n', '\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    if n == 3:\n        print(0)\n    elif n == 4:\n        print(1)\n    else:\n        print((n-3)*(n-2)*(n-1)/2)\n\nmain()\n', '\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    if n == 3:\n        print(0)\n    elif n == 4: \n        print(1)\n    else:\n        print((n-3)*(n-2)*(n-4)/2)\n\nmain()\n']
2022-04-13 01:08:11.210002 size on output set 3
2022-04-13 01:08:11.210008 size on input set 3
2022-04-13 01:08:14.846250 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport math\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(int(n*(n-1)*(n-2)*(n-3)/24))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    if n == 3:\n        print(0)\n    elif n == 4: \n        print(1)\n    else:\n        print((n-3)*(n-2)*(n-4)/2)\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    if n == 3:\n        print(0)\n    elif n == 4:\n        print(1)\n    else:\n        print((n-3)*(n-2)*(n-4)/2)\n\nmain()\n"
    }
  ],
  "created": 1649812091,
  "object": "edit"
}
2022-04-13 01:08:14.846457 fix syntax errors 3 ['\nimport sys\nimport math\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(int(n*(n-1)*(n-2)*(n-3)/24))\n\nmain()\n', '\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    if n == 3:\n        print(0)\n    elif n == 4: \n        print(1)\n    else:\n        print((n-3)*(n-2)*(n-4)/2)\n\nmain()\n', '\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    if n == 3:\n        print(0)\n    elif n == 4:\n        print(1)\n    else:\n        print((n-3)*(n-2)*(n-4)/2)\n\nmain()\n']
2022-04-13 01:08:52.583802 fix syntax errors {
  "choices": [
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 0
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    if n == 3:\n        print(0)\n    elif n == 4:\n        print(1)\n    else:\n        print((n-3)*(n-2)*(n-1)/2)\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    if n == 3:\n        print(0)\n    elif n == 4:\n        print(1)\n    else:\n        print(int((n-3)*(n-2)*(n-1)/2))\n\nmain()\n"
    }
  ],
  "created": 1649812094,
  "object": "edit"
}
2022-04-13 01:08:52.584093 NO RESULT
2022-04-13 01:08:52.584103 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 0
}
2022-04-13 01:08:52.584147 fix syntax errors 2 ['\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    if n == 3:\n        print(0)\n    elif n == 4:\n        print(1)\n    else:\n        print((n-3)*(n-2)*(n-1)/2)\n\nmain()\n', '\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    if n == 3:\n        print(0)\n    elif n == 4:\n        print(1)\n    else:\n        print(int((n-3)*(n-2)*(n-1)/2))\n\nmain()\n']
2022-04-13 01:08:54.653873 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    if n == 1:\n        print(0)\n    else:\n        print(n-1)\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "def main():\n    n = int(input())\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(0)\n    else:\n        print(n-2)\nmain()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(0)\n    else:\n        print(n - 2)\n\nmain()\n"
    }
  ],
  "created": 1649812132,
  "object": "edit"
}
2022-04-13 01:08:54.654114 fix syntax errors 3 ['\nimport sys\n\ndef main():\n    n = int(input())\n    if n == 1:\n        print(0)\n    else:\n        print(n-1)\n\nmain()\n', 'def main():\n    n = int(input())\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(0)\n    else:\n        print(n-2)\nmain()\n', '\nimport sys\n\ndef main():\n    n = int(input())\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(0)\n    else:\n        print(n - 2)\n\nmain()\n']
2022-04-13 01:08:54.654140 size on output set 8
2022-04-13 01:08:54.654150 num operations 2
2022-04-13 01:08:54.654155 size on input set 1
2022-04-13 01:09:09.633579 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef solve(n):\n    return n*(n-1)//2\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(solve(n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n#\nimport sys\n\ndef solve(n):\n    return n*(n-3)//2\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(solve(n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 2
    }
  ],
  "created": 1649812134,
  "object": "edit"
}
2022-04-13 01:09:09.633772 NO RESULT
2022-04-13 01:09:09.633779 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 2
}
2022-04-13 01:09:09.633815 fix spelling mistakes 2 ["\n\nimport sys\n\ndef solve(n):\n    return n*(n-1)//2\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(solve(n))\n\nif __name__ == '__main__':\n    main()\n", "\n#\nimport sys\n\ndef solve(n):\n    return n*(n-3)//2\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(solve(n))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 01:09:09.633833 size on output set 2
2022-04-13 01:09:09.633838 size on input set 2
2022-04-13 01:09:21.092483 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef solve(n):\n    return n*(n-1)/2\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(solve(n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 1
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef solve(n):\n    return n*(n-1)//2 \n\ndef main():\n    n = int(sys.stdin.readline())\n    print(solve(n))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649812149,
  "object": "edit"
}
2022-04-13 01:09:21.092684 NO RESULT
2022-04-13 01:09:21.092691 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 1
}
2022-04-13 01:09:21.092727 fix syntax errors 2 ["\n\nimport sys\n\ndef solve(n):\n    return n*(n-1)/2\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(solve(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef solve(n):\n    return n*(n-1)//2 \n\ndef main():\n    n = int(sys.stdin.readline())\n    print(solve(n))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 01:09:22.653327 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef solve(n):\n    return n*(n-3)//2\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(solve(n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n# \nimport sys\n\ndef solve(n):\n    return n*(n-3)//2\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(solve(n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n# test\nimport sys\n\ndef solve(n):\n    return n*(n-3)//2\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(solve(n))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649812161,
  "object": "edit"
}
2022-04-13 01:09:22.653563 fix syntax errors 3 ["import sys\n\ndef solve(n):\n    return n*(n-3)//2\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(solve(n))\n\nif __name__ == '__main__':\n    main()\n", "\n# \nimport sys\n\ndef solve(n):\n    return n*(n-3)//2\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(solve(n))\n\nif __name__ == '__main__':\n    main()\n", "\n# test\nimport sys\n\ndef solve(n):\n    return n*(n-3)//2\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(solve(n))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 01:09:22.653591 size on output set 5
