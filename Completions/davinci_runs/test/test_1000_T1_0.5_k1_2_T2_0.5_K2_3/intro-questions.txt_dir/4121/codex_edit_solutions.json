["\ndef solver(n, a):\n    \"\"\"\n    >>> solver(5, [2, 1, 1, 2, 5])\n    'YES'\n    >>> solver(3, [4, 5, 3])\n    'YES'\n    >>> solver(2, [10, 10])\n    'YES'\n    >>> solver(3, [1, 2, 3])\n    'NO'\n    \"\"\"\n    if len(set(a)) == n:\n        if len(set(a)) == 1:\n            return 'YES'\n        if len(set(a)) == 2:\n            if a.count(max(set(a))) == 1:\n                return 'YES'\n            else:\n                return 'NO'\n        if len(set(a)) > 2:\n            return 'NO'\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solver(n, a))\n", "\n\ndef main():\n    _ = int(input())\n    a = list(map(int, input().split()))\n    print(a)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef solver(n, a):\n    \"\"\"\n    >>> solver(5, [2, 1, 1, 2, 5])\n    'YES'\n    >>> solver(3, [4, 5, 3])\n    'YES'\n    >>> solver(2, [10, 10])\n    'YES'\n    >>> solver(3, [1, 2, 3])\n    'NO'\n    \"\"\"\n    a_set = set(a)\n    if len(a_set) == 1:\n        return 'YES'\n    if len(a_set) == 2:\n        if a.count(max(a_set)) == 1:\n            return 'YES'\n        else:\n            return 'NO'\n    if len(a_set) > 2:\n        return 'NO'\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solver(n, a))\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(a)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef solver(n, a):\n    \"\"\"\n    >>> solver(5, [2, 1, 1, 2, 5])\n    'YES'\n    >>> solver(3, [4, 5, 3])\n    'YES'\n    >>> solver(2, [10, 10])\n    'YES'\n    >>> solver(3, [1, 2, 3])\n    'NO'\n    \"\"\"\n    if len(a) == 1:\n        return 'YES'\n    if len(a) == 2:\n        if a.count(max(set(a))) == 1:\n            return 'YES'\n        else:\n            return 'NO'\n    if len(a) > 2:\n        return 'NO'\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solver(n, a))\n", "\n\n\ndef solver(n, a):\n    if len(set(a)) == 1:\n        return 'YES'\n    if len(set(a)) == 2:\n        if a.count(max(set(a))) == 1:\n            return 'YES'\n        else:\n            return 'NO'\n    if len(set(a)) > 2:\n        return 'NO'\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solver(n, a))\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    mx = max(a)\n    mn = min(a)\n        print('YES')\n        return\n    if mx == 1 or mn == 1:  # if max or min is 1 then it is possible to have all elements equal\n    if mx == mn:\n        print('YES')\n        return\n    if mx - mn > 1:  # if max - min > 1 then it is not possible to have all elements equal\n        print('NO')\n        return\n    if a.count(mx) > 1 and a.count(mn) > 1:  # if more than 1 max and min then it is not possible to have all elements equal\n        print('NO')\n        return\n    print('YES')\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    mx = max(a)  # max element\n    mn = min(a)  # min element\n    if mx == mn:\n        print('YES')\n        return\n    if mx - mn > 1:  # if max - min > 1 then it is not possible to have all elements equal\n        print('NO')\n        return\n    if a.count(mx) > 1 and a.count(mn) > 1:  # if more than 1 max and min then it is not possible to have all elements equal\n        print('NO')\n        return\n    print('YES')\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    _ = int(input())\n    a = list(map(int, input().split()))\n    mx = max(a)\n    mn = min(a)\n    if mx == mn:\n        print('YES')\n        return\n    if mx - mn > 1:\n        print('NO')\n        return\n    if a.count(mx) > 1 and a.count(mn) > 1:\n        print('NO')\n        return\n    print('YES')\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n\ndef solver(n, a):\n    \"\"\"\n    >>> solver(5, [1, 2, 3, 4, 5])\n    'YES'\n    >>> solver(3, [1, 2, 3])\n    'YES'\n    >>> solver(2, [10, 10])\n    'YES'\n    >>> solver(2, [1, 2])\n    'NO'\n    \"\"\"\n    if len(set(a)) == 1:\n        return 'YES'\n    if len(set(a)) == 2:\n        if a.count(max(set(a))) == 1:\n            return 'YES'\n        else:\n            return 'NO'\n    if len(set(a)) > 2:\n        return 'NO'\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solver(n, a))\n", "\n\ndef solver(n, a):\n    if len(set(a)) == 1:\n        return 'YES'\n    if len(set(a)) == 2:\n        if a.count(max(set(a))) == 1:\n            return 'YES'\n        else:\n            return 'NO'\n    if len(set(a)) > 2:\n        return 'NO'\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solver(n, a))\n", "\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    print(a[1])\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    mx = max(a)\n    mn = min(a)\n    if mx == mn:\n        print('YES')\n        return\n    if mx - mn > 1:  # if max - min > 1 then it is not possible to have all elements equal\n        print('NO')\n        return\n    if a.count(mx) > 1 or a.count(mn) > 1:  # if more than 1 max and min then it is not possible to have all elements equal\n        print('NO')\n        return\n    print('YES')\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    _ = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if (a[-1] - a[0]) <= 1:\n        print('YES' if a.count(a[-1]) == 1 or a.count(a[0]) == 1 else 'NO')\n    else:\n        print('NO')\n\n\nif __name__ == \"__main__\":\n    main()\n", "def solver(n, a):\n    \"\"\"\n    >>> solver(5, [1, 2, 3, 4, 5])\n    'YES'\n    >>> solver(3, [1, 2, 3])\n    'YES'\n    >>> solver(2, [10, 10])\n    'YES'\n    >>> solver(3, [1, 2, 3])\n    'NO'\n    \"\"\"\n    if len(set(a)) == 1:\n        return 'YES'\n    if len(set(a)) == 2:\n        if a.count(max(set(a))) == 1:\n            return 'YES'\n        else:\n            return 'NO'\n    if len(set(a)) > 2:\n        return 'NO'\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solver(n, a))\n", "\n\n\n    if len(set(a)) == 1:\n        return 'YES'\n    if len(set(a)) == 2:\n        if a.count(max(set(a))) == 1:\n            return 'YES'\n        else:\n            return 'NO'\n    if len(set(a)) > 2:\n        return 'NO'\ndef solver(n, a):\n    \"\"\"\n    >>> solver(5, [1, 2, 3, 4, 5])\n    'YES'\n    >>> solver(3, [1, 2, 3])\n    'YES'\n    >>> solver(2, [10, 10])\n    'YES'\n    >>> solver(3, [1, 2, 3])\n    'NO'\n    \"\"\"\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solver(n, a))\n", "\ndef solver(n, a):\n    if len(set(a)) == 1:\n        return 'YES'\n    if len(set(a)) == 2:\n        if a.count(max(set(a))) == 1:\n            return 'YES'\n        else:\n            return 'NO'\n    if len(set(a)) > 2:\n        return 'NO'\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solver(n, a))\n"]