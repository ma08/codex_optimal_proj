2022-04-13 05:47:08.256520 num operations 2
2022-04-13 05:47:08.256529 size on input set 1
2022-04-13 05:47:11.025081 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26) % 26 + ord('a')))\n    if i >= n:\n        keyword += plain[i]\n\nprint(\"\".join(plain))\n"
    },
    {
      "index": 1,
      "text": "import sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26)%26 + ord('a')))\n    if i >= n:\n        keyword += plain[i]\n\nprint(\"\".join(plain))\n"
    },
    {
      "index": 2,
      "text": "\n#input\nimport sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n#output\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26)%26 + ord('a')))\n    if i >= n:\n        keyword += plain[i]\n\nprint(\"\".join(plain))\n"
    }
  ],
  "created": 1649828828,
  "object": "edit"
}
2022-04-13 05:47:11.025286 fix spelling mistakes 3 ['\n\nimport sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26) % 26 + ord(\'a\')))\n    if i >= n:\n        keyword += plain[i]\n\nprint("".join(plain))\n', 'import sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26)%26 + ord(\'a\')))\n    if i >= n:\n        keyword += plain[i]\n\nprint("".join(plain))\n', '\n#input\nimport sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n#output\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26)%26 + ord(\'a\')))\n    if i >= n:\n        keyword += plain[i]\n\nprint("".join(plain))\n']
2022-04-13 05:47:11.025335 size on output set 3
2022-04-13 05:47:11.025342 size on input set 3
2022-04-13 05:47:14.626200 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#input\nimport sys\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n#output\nplain = []\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26)%26 + ord('a')))\n    if i >= n:\n        keyword += plain[i]\nprint(\"\".join(plain))\n"
    },
    {
      "index": 1,
      "text": "#input\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n#output\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26) % 26 + ord('a')))\n    if i >= n:\n        keyword += plain[i]\n\nprint(\"\".join(plain))\n"
    },
    {
      "index": 2,
      "text": "#input\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n#output\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26) % 26 + ord('a')))\n    if i >= n:\n        keyword += plain[i]\n\nprint(\"\".join(plain))\n"
    }
  ],
  "created": 1649828831,
  "object": "edit"
}
2022-04-13 05:47:14.626383 fix syntax errors 3 ['#input\nimport sys\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n#output\nplain = []\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26)%26 + ord(\'a\')))\n    if i >= n:\n        keyword += plain[i]\nprint("".join(plain))\n', '#input\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n#output\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26) % 26 + ord(\'a\')))\n    if i >= n:\n        keyword += plain[i]\n\nprint("".join(plain))\n', '#input\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n#output\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26) % 26 + ord(\'a\')))\n    if i >= n:\n        keyword += plain[i]\n\nprint("".join(plain))\n']
2022-04-13 05:47:16.043611 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26) % 26 + ord('a')))\n    if i >= n:\n        keyword += plain[i]\n\nprint(\"\".join(plain))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26) % 26 + ord('a')))\n    if i >= n:\n        keyword += plain[i]\n\nprint(\"\".join(plain))\n"
    },
    {
      "index": 2,
      "text": "import sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26) % 26 + ord('a')))\n    if i >= n:\n        keyword += plain[i]\n\nprint(\"\".join(plain))\n"
    }
  ],
  "created": 1649828834,
  "object": "edit"
}
2022-04-13 05:47:16.043815 fix syntax errors 3 ['\nimport sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26) % 26 + ord(\'a\')))\n    if i >= n:\n        keyword += plain[i]\n\nprint("".join(plain))\n', '\nimport sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26) % 26 + ord(\'a\')))\n    if i >= n:\n        keyword += plain[i]\n\nprint("".join(plain))\n', 'import sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26) % 26 + ord(\'a\')))\n    if i >= n:\n        keyword += plain[i]\n\nprint("".join(plain))\n']
2022-04-13 05:47:18.686100 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26) % 26 + ord('a')))\n    if i >= n:\n        keyword += plain[i]\n\nprint(\"\".join(plain))\n"
    },
    {
      "index": 1,
      "text": "import sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26)%26 + ord('a')))\n    if i >= n-1:\n        keyword += plain[i]\n\nprint(\"\".join(plain))\n"
    },
    {
      "index": 2,
      "text": "import sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26)%26 + ord('A')))\n    if i >= n:\n        keyword += plain[i]\n\nprint(\"\".join(plain))\n"
    }
  ],
  "created": 1649828836,
  "object": "edit"
}
2022-04-13 05:47:18.686371 fix syntax errors 3 ['import sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26) % 26 + ord(\'a\')))\n    if i >= n:\n        keyword += plain[i]\n\nprint("".join(plain))\n', 'import sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26)%26 + ord(\'a\')))\n    if i >= n-1:\n        keyword += plain[i]\n\nprint("".join(plain))\n', 'import sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26)%26 + ord(\'A\')))\n    if i >= n:\n        keyword += plain[i]\n\nprint("".join(plain))\n']
2022-04-13 05:47:18.686401 size on output set 6
2022-04-13 05:47:18.686411 num operations 2
2022-04-13 05:47:18.686417 size on input set 1
2022-04-13 05:47:20.269581 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef decipher(n, m, last, cipher):\n\t\"\"\"\n\t\"\"\"\n\tplain = \"\"\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == '__main__':\n\tmain()\n"
    },
    {
      "index": 1,
      "text": "\n\n#---------------------------------\n# Code: \n\ndef decipher(n, m, last, cipher):\n\t\"\"\"\n\t\"\"\"\n\tplain = \"\"\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == '__main__':\n\tmain()\n"
    },
    {
      "index": 2,
      "text": "\n\n#-----------------------------------\n# Code:\n\ndef decipher(n, m, last, cipher):\n\t\"\"\"\n\t\"\"\"\n\tplain = \"\"\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == '__main__':\n\tmain()\n"
    }
  ],
  "created": 1649828838,
  "object": "edit"
}
2022-04-13 05:47:20.269756 fix spelling mistakes 3 ['\n\ndef decipher(n, m, last, cipher):\n\t"""\n\t"""\n\tplain = ""\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == \'__main__\':\n\tmain()\n', '\n\n#---------------------------------\n# Code: \n\ndef decipher(n, m, last, cipher):\n\t"""\n\t"""\n\tplain = ""\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == \'__main__\':\n\tmain()\n', '\n\n#-----------------------------------\n# Code:\n\ndef decipher(n, m, last, cipher):\n\t"""\n\t"""\n\tplain = ""\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == \'__main__\':\n\tmain()\n']
2022-04-13 05:47:20.269786 size on output set 3
2022-04-13 05:47:20.269793 size on input set 3
2022-04-13 05:47:25.841891 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\ndef decipher(n, m, last, cipher):\n\t\"\"\"\n\t\"\"\"\n\tplain = \"\"\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, sys.stdin.readline().split())\n\tlast = sys.stdin.readline()\n\tcipher = sys.stdin.readline()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == '__main__':\n\tmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef decipher(n, m, last, cipher, plain):\n\t\"\"\"\n\t\"\"\"\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain[i] = chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain[i] = chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tplain = [\"\"] * m\n\tprint(decipher(n, m, last, cipher, plain))\n\nif __name__ == '__main__':\n\tmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef decipher(n, m, last, cipher):\n\tplain = \"\"\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == '__main__':\n\tmain()\n"
    }
  ],
  "created": 1649828840,
  "object": "edit"
}
2022-04-13 05:47:25.842080 fix syntax errors 3 ['\nimport sys\ndef decipher(n, m, last, cipher):\n\t"""\n\t"""\n\tplain = ""\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, sys.stdin.readline().split())\n\tlast = sys.stdin.readline()\n\tcipher = sys.stdin.readline()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == \'__main__\':\n\tmain()\n', '\n\ndef decipher(n, m, last, cipher, plain):\n\t"""\n\t"""\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain[i] = chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain[i] = chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tplain = [""] * m\n\tprint(decipher(n, m, last, cipher, plain))\n\nif __name__ == \'__main__\':\n\tmain()\n', '\n\ndef decipher(n, m, last, cipher):\n\tplain = ""\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == \'__main__\':\n\tmain()\n']
2022-04-13 05:47:27.742645 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#---------------------------------\n# Code: \n\ndef decipher(n, m, last, cipher):\n\tplain = \"\"\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == '__main__':\n\tmain()\n"
    },
    {
      "index": 1,
      "text": "\n\n#--------------------------------- \n\ndef decipher(n, m, last, cipher):\n\t\"\"\"\n\t\"\"\"\n\tplain = \"\"\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\n\nif __name__ == '__main__':\n\tmain()\n"
    },
    {
      "index": 2,
      "text": "\n\n#--------------------------------- \n\ndef decipher(n, m, last, cipher):\n\t\"\"\"\n\t\"\"\"\n\tplain = \"\"\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == '__main__':\n\tmain()\n"
    }
  ],
  "created": 1649828845,
  "object": "edit"
}
2022-04-13 05:47:27.742895 fix syntax errors 3 ['\n\n#---------------------------------\n# Code: \n\ndef decipher(n, m, last, cipher):\n\tplain = ""\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == \'__main__\':\n\tmain()\n', '\n\n#--------------------------------- \n\ndef decipher(n, m, last, cipher):\n\t"""\n\t"""\n\tplain = ""\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\n\nif __name__ == \'__main__\':\n\tmain()\n', '\n\n#--------------------------------- \n\ndef decipher(n, m, last, cipher):\n\t"""\n\t"""\n\tplain = ""\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == \'__main__\':\n\tmain()\n']
2022-04-13 05:47:33.761187 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#-----------------------------------\n# File:\n# Author:\n# Date:\n#-----------------------------------\n\n#-----------------------------------\n# Code:\n\ndef decipher(n, m, last, cipher):\n\tdeciphers a ciphertext\n\n\tParameters:\n\t\tn (int): the number of characters in the last word\n\t\tm (int): the number of characters in the ciphertext\n\t\tlast (str): the last word in the plaintext\n\t\tcipher (str): the ciphertext\n\n\tReturns:\n\t\tplain (str): the plaintext\n\t\"\"\"\n\t\"\"\"\n\tplain = \"\"\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == '__main__':\n\tmain()\n"
    },
    {
      "index": 1,
      "text": "\n\n#-----------------------------------\n# Code:\n\ndef decipher(n, m, last, cipher):\n\t\"\"\"\n\t\"\"\"\n\tplain = \"\"\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(cipher[i]) - ord(last[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(cipher[i]) - ord(plain[i-n])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == '__main__':\n\tmain()\n"
    },
    {
      "index": 2,
      "text": "\ndef decipher(n, m, last, cipher):\n\t\"\"\"\n\t\"\"\"\n\tplain = \"\"\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == '__main__':\n\tmain()\n"
    }
  ],
  "created": 1649828847,
  "object": "edit"
}
2022-04-13 05:47:33.761431 fix syntax errors 3 ['#-----------------------------------\n# File:\n# Author:\n# Date:\n#-----------------------------------\n\n#-----------------------------------\n# Code:\n\ndef decipher(n, m, last, cipher):\n\tdeciphers a ciphertext\n\n\tParameters:\n\t\tn (int): the number of characters in the last word\n\t\tm (int): the number of characters in the ciphertext\n\t\tlast (str): the last word in the plaintext\n\t\tcipher (str): the ciphertext\n\n\tReturns:\n\t\tplain (str): the plaintext\n\t"""\n\t"""\n\tplain = ""\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == \'__main__\':\n\tmain()\n', '\n\n#-----------------------------------\n# Code:\n\ndef decipher(n, m, last, cipher):\n\t"""\n\t"""\n\tplain = ""\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(cipher[i]) - ord(last[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(cipher[i]) - ord(plain[i-n])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == \'__main__\':\n\tmain()\n', '\ndef decipher(n, m, last, cipher):\n\t"""\n\t"""\n\tplain = ""\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == \'__main__\':\n\tmain()\n']
2022-04-13 05:47:33.761471 size on output set 9
2022-04-13 05:47:33.761483 num operations 2
2022-04-13 05:47:33.761488 size on input set 1
2022-04-13 05:47:35.963143 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = \"\"\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letters of the key\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n\nprint(plain)\n"
    },
    {
      "index": 1,
      "text": "\n\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = \"\"\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letters of the key\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n\nprint(plain)\n"
    },
    {
      "index": 2,
      "text": "\n\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = \"\"\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letter of the key mod 26\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n\nprint(plain)\n"
    }
  ],
  "created": 1649828853,
  "object": "edit"
}
2022-04-13 05:47:35.963364 fix spelling mistakes 3 ['\n\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = ""\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letters of the key\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n\nprint(plain)\n', '\n\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = ""\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letters of the key\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n\nprint(plain)\n', '\n\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = ""\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letter of the key mod 26\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n\nprint(plain)\n']
2022-04-13 05:47:35.963392 size on output set 2
2022-04-13 05:47:35.963399 size on input set 2
2022-04-13 05:47:42.749417 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    key = input()\n    cipher = input()\n    \n    plain = \"\"\n    \n    # first n letters of plaintext are the same as the key\n    plain += key\n    \n    # next m-n letters of plaintext are the ciphertext minus the corresponding letters of the key\n    for i in range(m-n):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n    \n    print(plain)\n    \n    \nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/python3\n\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = \"\"\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letters of the key\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n\nprint(plain)\n"
    },
    {
      "index": 2,
      "text": "\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = \"\"\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letters of the key\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n\nprint(plain)\n"
    }
  ],
  "created": 1649828856,
  "object": "edit"
}
2022-04-13 05:47:42.749585 fix syntax errors 3 ['\ndef main():\n    n, m = map(int, input().split())\n    key = input()\n    cipher = input()\n    \n    plain = ""\n    \n    # first n letters of plaintext are the same as the key\n    plain += key\n    \n    # next m-n letters of plaintext are the ciphertext minus the corresponding letters of the key\n    for i in range(m-n):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n    \n    print(plain)\n    \n    \nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/python3\n\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = ""\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letters of the key\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n\nprint(plain)\n', '\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = ""\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letters of the key\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n\nprint(plain)\n']
2022-04-13 05:47:46.942522 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, m = map(int, input().split())  # n=length of key, m=length of ciphertext\nkey = input()\ncipher = input()\n\nplain = \"\"\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letter of the key mod 26 (add 26 to make sure the subtraction doesn't result in a negative number)\nfor i in range(m - n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n\nprint(plain)\n"
    },
    {
      "index": 1,
      "text": "\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = \"\"\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letter of the key mod 26\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n\nprint(plain)\n"
    },
    {
      "index": 2,
      "text": "\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n# first n letters of plaintext are the same as the key\n\nplain = \"\"\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letter of the key mod 26\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n\nprint(plain)\n"
    }
  ],
  "created": 1649828862,
  "object": "edit"
}
2022-04-13 05:47:46.942710 fix syntax errors 3 ['\n\nn, m = map(int, input().split())  # n=length of key, m=length of ciphertext\nkey = input()\ncipher = input()\n\nplain = ""\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letter of the key mod 26 (add 26 to make sure the subtraction doesn\'t result in a negative number)\nfor i in range(m - n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n\nprint(plain)\n', '\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = ""\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letter of the key mod 26\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n\nprint(plain)\n', '\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n# first n letters of plaintext are the same as the key\n\nplain = ""\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letter of the key mod 26\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n\nprint(plain)\n']
2022-04-13 05:47:46.942742 size on output set 6
2022-04-13 05:47:46.942754 num operations 2
2022-04-13 05:47:46.942760 size on input set 1
2022-04-13 05:47:50.465860 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n    # Read the first line\n    line = sys.stdin.readline()\n    # Read the second line\n    line = sys.stdin.readline()\n    # Read the third line\n    line = sys.stdin.readline()\n    # Print the result\n    print(line)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n    # Read the first line.\n    line = sys.stdin.readline()\n    # Read the second line.\n    line = sys.stdin.readline()\n    # Read the third line.\n    line = sys.stdin.readline()\n    # Print the results.\n    print(line)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n    # Read the first line\n    line = sys.stdin.readline()\n    # Read the second line\n    line = sys.stdin.readline()\n    # Read the third line\n    line = sys.stdin.readline()\n    # Print the result\n    print(line)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649828866,
  "object": "edit"
}
2022-04-13 05:47:50.466036 fix spelling mistakes 3 ['\n\nimport sys\n\ndef main():\n    """\n    Main function.\n    """\n    # Read the first line\n    line = sys.stdin.readline()\n    # Read the second line\n    line = sys.stdin.readline()\n    # Read the third line\n    line = sys.stdin.readline()\n    # Print the result\n    print(line)\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\n\ndef main():\n    """\n    Main function.\n    """\n    # Read the first line.\n    line = sys.stdin.readline()\n    # Read the second line.\n    line = sys.stdin.readline()\n    # Read the third line.\n    line = sys.stdin.readline()\n    # Print the results.\n    print(line)\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\n\ndef main():\n    """\n    Main function.\n    """\n    # Read the first line\n    line = sys.stdin.readline()\n    # Read the second line\n    line = sys.stdin.readline()\n    # Read the third line\n    line = sys.stdin.readline()\n    # Print the result\n    print(line)\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-13 05:47:50.466065 size on output set 2
2022-04-13 05:47:50.466072 size on input set 2
2022-04-13 05:47:53.917666 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n    # Read the first line\n    line = sys.stdin.readline()\n    # Read the second line\n    line = sys.stdin.readline()\n    # Read the third line\n    line = sys.stdin.readline()\n    # Print the result\n    print(line)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n    # Read the first line.\n    line = sys.stdin.readline()\n    # Read the second line.\n    line = sys.stdin.readline()\n    # Read the third line.\n    line = sys.stdin.readline()\n    # Print the result.\n    print(line)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n    # Read the first line\n    line = sys.stdin.readline()\n    # Read the second line\n    line = sys.stdin.readline()\n    # Read the third line\n    line = sys.stdin.readline()\n    # Print the result, removing the trailing newline\n    print(line.rstrip())\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649828870,
  "object": "edit"
}
2022-04-13 05:47:53.917917 fix syntax errors 3 ['\nimport sys\n\ndef main():\n    """\n    Main function.\n    """\n    # Read the first line\n    line = sys.stdin.readline()\n    # Read the second line\n    line = sys.stdin.readline()\n    # Read the third line\n    line = sys.stdin.readline()\n    # Print the result\n    print(line)\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    """\n    Main function.\n    """\n    # Read the first line.\n    line = sys.stdin.readline()\n    # Read the second line.\n    line = sys.stdin.readline()\n    # Read the third line.\n    line = sys.stdin.readline()\n    # Print the result.\n    print(line)\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    """\n    Main function.\n    """\n    # Read the first line\n    line = sys.stdin.readline()\n    # Read the second line\n    line = sys.stdin.readline()\n    # Read the third line\n    line = sys.stdin.readline()\n    # Print the result, removing the trailing newline\n    print(line.rstrip())\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-13 05:47:58.455370 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\"\"\"\nThis is a sample file.\n\"\"\"\n\nimport sys\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n    # Read the first line.\n    line = sys.stdin.readline()\n    # Read the second line.\n    line = sys.stdin.readline()\n    # Read the third line.\n    line = sys.stdin.readline()\n    # Print the results.\n    print(line)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n    # Read the first line\n    line = sys.stdin.readline() \n    # Read the second line\n    line = sys.stdin.readline() \n    # Read the third line\n    line = sys.stdin.readline() \n    # Print the results\n    print(line) \n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n    # Read the first line.\n    line = sys.stdin.readline()\n    # Read the second line.\n    line = sys.stdin.readline()\n    # Read the third line.\n    line = sys.stdin.readline()\n    # Print the results.\n    print(line)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649828873,
  "object": "edit"
}
2022-04-13 05:47:58.455565 fix syntax errors 3 ['"""\nThis is a sample file.\n"""\n\nimport sys\n\ndef main():\n    """\n    Main function.\n    """\n    # Read the first line.\n    line = sys.stdin.readline()\n    # Read the second line.\n    line = sys.stdin.readline()\n    # Read the third line.\n    line = sys.stdin.readline()\n    # Print the results.\n    print(line)\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\n\ndef main():\n    """\n    Main function.\n    """\n    # Read the first line\n    line = sys.stdin.readline() \n    # Read the second line\n    line = sys.stdin.readline() \n    # Read the third line\n    line = sys.stdin.readline() \n    # Print the results\n    print(line) \n\nif __name__ == \'__main__\':\n    main()\n', 'import sys\n\ndef main():\n    """\n    Main function.\n    """\n    # Read the first line.\n    line = sys.stdin.readline()\n    # Read the second line.\n    line = sys.stdin.readline()\n    # Read the third line.\n    line = sys.stdin.readline()\n    # Print the results.\n    print(line)\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-13 05:47:58.455597 size on output set 6
2022-04-13 05:47:58.455607 num operations 2
2022-04-13 05:47:58.455612 size on input set 1
2022-04-13 05:48:08.175461 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_m = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    plaintext = \"\"\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_m[i]) + 26) % 26 + ord('a'))\n        if i >= n - 1:\n            last_m += plaintext[i]\n    print(plaintext)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = \"\"\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(last_n[i]) + 26) % 26 + ord('a'))\n        if i >= n - 1:\n            last_n += plain[i]\n    print(plain)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# @Time    : 2018/2/23 \u4e0b\u534811:01\n# @Author  : simon\n# @File    : file.py\n# @Software: PyCharm Community Edition\n\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()[-n:]\n    ciphertext = sys.stdin.readline().strip()\n    print(last_n)\n    plaintext = \"\"\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_n[i % n]) + 26) % 26 + ord('a'))\n        if i >= n - 1:\n            last_n += plaintext[i]\n    print(plaintext)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649828878,
  "object": "edit"
}
2022-04-13 05:48:08.175659 fix spelling mistakes 3 ['\n\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_m = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    plaintext = ""\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_m[i]) + 26) % 26 + ord(\'a\'))\n        if i >= n - 1:\n            last_m += plaintext[i]\n    print(plaintext)\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = ""\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(last_n[i]) + 26) % 26 + ord(\'a\'))\n        if i >= n - 1:\n            last_n += plain[i]\n    print(plain)\n\nif __name__ == \'__main__\':\n    main()\n', '#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# @Time    : 2018/2/23 下午11:01\n# @Author  : simon\n# @File    : file.py\n# @Software: PyCharm Community Edition\n\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()[-n:]\n    ciphertext = sys.stdin.readline().strip()\n    print(last_n)\n    plaintext = ""\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_n[i % n]) + 26) % 26 + ord(\'a\'))\n        if i >= n - 1:\n            last_n += plaintext[i]\n    print(plaintext)\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-13 05:48:08.175703 size on output set 3
2022-04-13 05:48:08.175710 size on input set 3
2022-04-13 05:48:13.113743 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# @Time    : 2018/2/23 \u4e0b\u534811:01\n# @Author  : simon\n# @File    : file.py\n# @Software: PyCharm Community Edition\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()[-n:].lower()\n    ciphertext = sys.stdin.readline().strip()\n    print(last_n)\n    plaintext = \"\"\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_n[i % n]) + 26) % 26 + ord('a'))\n        if i >= n - 1:\n            last_n += plaintext[i]\n    print(plaintext)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# @Time    : 2018/2/23 \u4e0b\u534811:01\n# @Author  : simon\n# @File    : file.py\n# @Software: PyCharm Community Edition\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()[-n:]\n    ciphertext = sys.stdin.readline().strip()\n    print(last_n)\n    plaintext = \"\"\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_n[i % n]) + 26) % 26 + ord('a'))\n        if i >= n - 1:\n            last_n += plaintext[i]\n    print(plaintext)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# @Time    : 2018/2/23 \u4e0b\u534811:01\n# @Author  : simon\n# @File    : file.py\n# @Software: PyCharm Community Edition\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()[-n:]\n    ciphertext = sys.stdin.readline().strip()\n    print(last_n)\n    plaintext = \"\"\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_n[i % n]) + 26) % 26 + ord('a'))\n        if i >= n - 1:\n            last_n += plaintext[i]\n    print(plaintext)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649828888,
  "object": "edit"
}
2022-04-13 05:48:13.114022 fix syntax errors 3 ['#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# @Time    : 2018/2/23 下午11:01\n# @Author  : simon\n# @File    : file.py\n# @Software: PyCharm Community Edition\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()[-n:].lower()\n    ciphertext = sys.stdin.readline().strip()\n    print(last_n)\n    plaintext = ""\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_n[i % n]) + 26) % 26 + ord(\'a\'))\n        if i >= n - 1:\n            last_n += plaintext[i]\n    print(plaintext)\n\nif __name__ == \'__main__\':\n    main()\n', '#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# @Time    : 2018/2/23 下午11:01\n# @Author  : simon\n# @File    : file.py\n# @Software: PyCharm Community Edition\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()[-n:]\n    ciphertext = sys.stdin.readline().strip()\n    print(last_n)\n    plaintext = ""\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_n[i % n]) + 26) % 26 + ord(\'a\'))\n        if i >= n - 1:\n            last_n += plaintext[i]\n    print(plaintext)\n\nif __name__ == \'__main__\':\n    main()\n', '#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# @Time    : 2018/2/23 下午11:01\n# @Author  : simon\n# @File    : file.py\n# @Software: PyCharm Community Edition\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()[-n:]\n    ciphertext = sys.stdin.readline().strip()\n    print(last_n)\n    plaintext = ""\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_n[i % n]) + 26) % 26 + ord(\'a\'))\n        if i >= n - 1:\n            last_n += plaintext[i]\n    print(plaintext)\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-13 05:48:15.825412 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_m = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    plaintext = \"\"\n    for i in range(m):\n        plaintext += chr(((ord(ciphertext[i]) - ord(last_m[i]) + 26) % 26) + ord('a'))\n        if i >= n - 1:\n            last_m += plaintext[i]\n    print(plaintext)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_m = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    plaintext = \"\"\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_m[i]) + 26) % 26 + ord('a'))\n        if i >= n - 1:\n            last_m += plaintext[i]\n    print(plaintext)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_m = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    plaintext = \"\"\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_m[i]) + 26) % 26 + ord('a'))\n        if i >= n - 1:\n            last_m += plaintext[i]\n    print(plaintext)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649828893,
  "object": "edit"
}
2022-04-13 05:48:15.825616 fix syntax errors 3 ['\n\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_m = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    plaintext = ""\n    for i in range(m):\n        plaintext += chr(((ord(ciphertext[i]) - ord(last_m[i]) + 26) % 26) + ord(\'a\'))\n        if i >= n - 1:\n            last_m += plaintext[i]\n    print(plaintext)\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_m = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    plaintext = ""\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_m[i]) + 26) % 26 + ord(\'a\'))\n        if i >= n - 1:\n            last_m += plaintext[i]\n    print(plaintext)\n\nif __name__ == \'__main__\':\n    main()\n', 'import sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_m = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    plaintext = ""\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_m[i]) + 26) % 26 + ord(\'a\'))\n        if i >= n - 1:\n            last_m += plaintext[i]\n    print(plaintext)\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-13 05:48:21.121774 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = \"\"\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(last_n[i]) + 26) % 26 + ord('a'))\n        if i >= n - 1:\n            last_n += plain[i]\n    print(plain)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()[-n:]\n    cipher = sys.stdin.readline().strip()\n    plain = \"\"\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(last_n[i % n]) + 26) % 26 + ord('a'))\n        if i >= n - 1:\n            last_n += plain[i]\n    print(plain)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = \"\"\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(last_n[i]) + 26) % 26 + ord('a'))\n        if i >= n - 1:\n            last_n += plain[i]\n    print(plain)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649828895,
  "object": "edit"
}
2022-04-13 05:48:21.122006 fix syntax errors 3 ['\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = ""\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(last_n[i]) + 26) % 26 + ord(\'a\'))\n        if i >= n - 1:\n            last_n += plain[i]\n    print(plain)\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()[-n:]\n    cipher = sys.stdin.readline().strip()\n    plain = ""\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(last_n[i % n]) + 26) % 26 + ord(\'a\'))\n        if i >= n - 1:\n            last_n += plain[i]\n    print(plain)\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = ""\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(last_n[i]) + 26) % 26 + ord(\'a\'))\n        if i >= n - 1:\n            last_n += plain[i]\n    print(plain)\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-13 05:48:21.122038 size on output set 7
2022-04-13 05:48:21.122065 num operations 2
2022-04-13 05:48:21.122071 size on input set 1
2022-04-13 05:48:23.931109 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    prefix = last_n[-n:]\n    plaintext = \"\"\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord('a'))\n    print(plaintext)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    prefix = last_n[-n:]\n    plaintext = \"\"\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord('a'))\n    print(plaintext)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    lastn = sys.stdin.readline().strip() # lastn means last n characters\n    ciphertext = sys.stdin.readline().strip()\n    prefix = lastn[-n:] # prefix means the first n characters\n    plaintext = \"\"\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord('a'))\n    print(plaintext)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649828901,
  "object": "edit"
}
2022-04-13 05:48:23.931339 fix spelling mistakes 3 ['\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    prefix = last_n[-n:]\n    plaintext = ""\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord(\'a\'))\n    print(plaintext)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    prefix = last_n[-n:]\n    plaintext = ""\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord(\'a\'))\n    print(plaintext)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    lastn = sys.stdin.readline().strip() # lastn means last n characters\n    ciphertext = sys.stdin.readline().strip()\n    prefix = lastn[-n:] # prefix means the first n characters\n    plaintext = ""\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord(\'a\'))\n    print(plaintext)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 05:48:23.931370 size on output set 2
2022-04-13 05:48:23.931376 size on input set 2
2022-04-13 05:48:26.719768 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip().split()\n    ciphertext = sys.stdin.readline().strip().split()\n    prefix = last_n[-n:]\n    plaintext = \"\"\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord('a'))\n    print(plaintext)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    prefix = last_n[-n:]\n    plaintext = ''\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord('a'))\n    print(plaintext)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    prefix = last_n[-n:]\n    plaintext = \"\"\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord('a'))\n    print(plaintext)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649828903,
  "object": "edit"
}
2022-04-13 05:48:26.719953 fix syntax errors 3 ['\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip().split()\n    ciphertext = sys.stdin.readline().strip().split()\n    prefix = last_n[-n:]\n    plaintext = ""\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord(\'a\'))\n    print(plaintext)\n\nif __name__ == "__main__":\n    main()\n', "\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    prefix = last_n[-n:]\n    plaintext = ''\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord('a'))\n    print(plaintext)\n\nif __name__ == '__main__':\n    main()\n", '\n\nimport sys\n\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    prefix = last_n[-n:]\n    plaintext = ""\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord(\'a\'))\n    print(plaintext)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 05:48:30.329861 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    lastn = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    prefix = lastn[-n:]\n    plaintext = \"\"\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord('a'))\n    print(plaintext)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    lastn = sys.stdin.readline().strip() # lastn means last n characters\n    ciphertext = sys.stdin.readline().strip()\n    prefix = lastn[-n:] # prefix means the first n characters\n    plaintext = \"\"\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord('a'))\n    print(plaintext)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    lastn = sys.stdin.readline().strip()  # lastn means last n characters\n    ciphertext = sys.stdin.readline().strip()\n    prefix = lastn[-n:]  # prefix means the first n characters\n    plaintext = \"\"\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord('a'))\n    print(plaintext)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649828906,
  "object": "edit"
}
2022-04-13 05:48:30.330057 fix syntax errors 3 ['\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    lastn = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    prefix = lastn[-n:]\n    plaintext = ""\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord(\'a\'))\n    print(plaintext)\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    lastn = sys.stdin.readline().strip() # lastn means last n characters\n    ciphertext = sys.stdin.readline().strip()\n    prefix = lastn[-n:] # prefix means the first n characters\n    plaintext = ""\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord(\'a\'))\n    print(plaintext)\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    lastn = sys.stdin.readline().strip()  # lastn means last n characters\n    ciphertext = sys.stdin.readline().strip()\n    prefix = lastn[-n:]  # prefix means the first n characters\n    plaintext = ""\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord(\'a\'))\n    print(plaintext)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 05:48:30.330170 size on output set 6
2022-04-13 05:48:30.330194 num operations 2
2022-04-13 05:48:30.330200 size on input set 1
2022-04-13 05:48:33.321762 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    last = input()\n    cipher = input()\n    key = last + cipher[:m-n]\n    plain = \"\"\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('A'))\n    print(plain)\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    last = input()\n    cipher = input()\n    key = last + cipher[:m-n]\n    plain = \"\"\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n    print(plain)\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    last = input() # last n-1 characters of the ciphertext\n    cipher = input() # the whole ciphertext\n    key = last + cipher[:m-n] # the key is the last n-1 characters of the ciphertext + the first m-n characters of the ciphertext\n    plain = \"\"\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n    print(plain)\n\nmain()\n"
    }
  ],
  "created": 1649828910,
  "object": "edit"
}
2022-04-13 05:48:33.321970 fix spelling mistakes 3 ['\n\ndef main():\n    n, m = map(int, input().split())\n    last = input()\n    cipher = input()\n    key = last + cipher[:m-n]\n    plain = ""\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'A\'))\n    print(plain)\n\nmain()\n', '\ndef main():\n    n, m = map(int, input().split())\n    last = input()\n    cipher = input()\n    key = last + cipher[:m-n]\n    plain = ""\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n    print(plain)\n\nmain()\n', '\n\ndef main():\n    n, m = map(int, input().split())\n    last = input() # last n-1 characters of the ciphertext\n    cipher = input() # the whole ciphertext\n    key = last + cipher[:m-n] # the key is the last n-1 characters of the ciphertext + the first m-n characters of the ciphertext\n    plain = ""\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n    print(plain)\n\nmain()\n']
2022-04-13 05:48:33.321997 size on output set 3
2022-04-13 05:48:33.322004 size on input set 3
2022-04-13 05:48:35.907186 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    last = input()\n    cipher = input()\n    key = last + cipher[:m - n]\n    plain = \"\"\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('A'))\n    print(plain)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    last = input()\n    cipher = input()\n    key = last + cipher[:m - n]\n    plain = \"\"\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('A'))\n    print(plain)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    last = input()\n    cipher = input()\n    key = last + cipher[:m-n]\n    plain = \"\"\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('A'))\n    print(plain)\n\nmain()\n"
    }
  ],
  "created": 1649828913,
  "object": "edit"
}
2022-04-13 05:48:35.907480 fix syntax errors 3 ['\ndef main():\n    n, m = map(int, input().split())\n    last = input()\n    cipher = input()\n    key = last + cipher[:m - n]\n    plain = ""\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'A\'))\n    print(plain)\n\n\nif __name__ == \'__main__\':\n    main()\n', '\ndef main():\n    n, m = map(int, input().split())\n    last = input()\n    cipher = input()\n    key = last + cipher[:m - n]\n    plain = ""\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'A\'))\n    print(plain)\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n, m = map(int, input().split())\n    last = input()\n    cipher = input()\n    key = last + cipher[:m-n]\n    plain = ""\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'A\'))\n    print(plain)\n\nmain()\n']
2022-04-13 05:48:42.677485 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    last = input()  # last n-1 characters of the ciphertext\n    cipher = input()  # the whole ciphertext\n    key = last + cipher[:m-n]  # the key is the last n-1 characters of the ciphertext + the first m-n characters of the ciphertext\n    plain = \"\"\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n    print(plain)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "def main():\n    n, m = map(int, input().split()) # n is the length of the key, m is the length of the ciphertext\n    key = input() # the key\n    cipher = input() # the ciphertext\n    plain = \"\"\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i % n]) + 26) % 26 + ord('a'))\n    print(plain)\n\n\ndef main():\n    n, m = map(int, input().split())\n    last = input() # last n-1 characters of the ciphertext\n    cipher = input() # the whole ciphertext\n    key = last + cipher[:m-n] # the key is the last n-1 characters of the ciphertext + the first m-n characters of the ciphertext\n    plain = \"\"\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n    print(plain)\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    last = input()  # last n-1 characters of the ciphertext\n    cipher = input()  # the whole ciphertext\n    key = last + cipher[:m-n]  # the key is the last n-1 characters of the ciphertext + the first m-n characters of the ciphertext\n    plain = \"\"\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n    print(plain)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649828915,
  "object": "edit"
}
2022-04-13 05:48:42.677648 fix syntax errors 3 ['\n\ndef main():\n    n, m = map(int, input().split())\n    last = input()  # last n-1 characters of the ciphertext\n    cipher = input()  # the whole ciphertext\n    key = last + cipher[:m-n]  # the key is the last n-1 characters of the ciphertext + the first m-n characters of the ciphertext\n    plain = ""\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n    print(plain)\n\n\nif __name__ == "__main__":\n    main()\n', 'def main():\n    n, m = map(int, input().split()) # n is the length of the key, m is the length of the ciphertext\n    key = input() # the key\n    cipher = input() # the ciphertext\n    plain = ""\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i % n]) + 26) % 26 + ord(\'a\'))\n    print(plain)\n\n\ndef main():\n    n, m = map(int, input().split())\n    last = input() # last n-1 characters of the ciphertext\n    cipher = input() # the whole ciphertext\n    key = last + cipher[:m-n] # the key is the last n-1 characters of the ciphertext + the first m-n characters of the ciphertext\n    plain = ""\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n    print(plain)\n\nmain()\n', '\n\ndef main():\n    n, m = map(int, input().split())\n    last = input()  # last n-1 characters of the ciphertext\n    cipher = input()  # the whole ciphertext\n    key = last + cipher[:m-n]  # the key is the last n-1 characters of the ciphertext + the first m-n characters of the ciphertext\n    plain = ""\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n    print(plain)\n\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-13 05:48:44.956100 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    last = input()\n    cipher = input()\n    key = last + cipher[:m - n]\n    plain = \"\"\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n    print(plain)\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    last = input()\n    cipher = input()\n    key = last + cipher[:m - n]\n    plain = \"\"\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n    print(plain)\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    last = input().strip()\n    cipher = input()\n    key = last + cipher[:m - n]\n    plain = \"\"\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n    print(plain)\n\nmain()\n"
    }
  ],
  "created": 1649828922,
  "object": "edit"
}
2022-04-13 05:48:44.956278 fix syntax errors 3 ['\ndef main():\n    n, m = map(int, input().split())\n    last = input()\n    cipher = input()\n    key = last + cipher[:m - n]\n    plain = ""\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n    print(plain)\n\nmain()\n', '\ndef main():\n    n, m = map(int, input().split())\n    last = input()\n    cipher = input()\n    key = last + cipher[:m - n]\n    plain = ""\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n    print(plain)\n\nmain()\n', '\ndef main():\n    n, m = map(int, input().split())\n    last = input().strip()\n    cipher = input()\n    key = last + cipher[:m - n]\n    plain = ""\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n    print(plain)\n\nmain()\n']
2022-04-13 05:48:44.956303 size on output set 8
2022-04-13 05:48:44.956314 num operations 2
2022-04-13 05:48:44.956319 size on input set 1
2022-04-13 05:48:47.997920 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(0, m):\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i])) % 26 + 97))\n    print(\"\".join(plain))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    plain = []\n    for i in range(1, m):\n        plain.append(chr((ord(ciphertext[i]) - ord(keyword[i])) % 26 + 97))\n    print(\"\".join(plain))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(1, m):\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i])) % 26 + 97))\n    print(\"\".join(plain)) # \u5b57\u7b26\u4e32\u8fde\u63a5\u51fd\u6570\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649828924,
  "object": "edit"
}
2022-04-13 05:48:47.998098 fix spelling mistakes 3 ['\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(0, m):\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i])) % 26 + 97))\n    print("".join(plain))\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    plain = []\n    for i in range(1, m):\n        plain.append(chr((ord(ciphertext[i]) - ord(keyword[i])) % 26 + 97))\n    print("".join(plain))\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(1, m):\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i])) % 26 + 97))\n    print("".join(plain)) # 字符串连接函数\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 05:48:47.998135 size on output set 3
2022-04-13 05:48:47.998142 size on input set 3
2022-04-13 05:48:51.416642 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(0, m):\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i])) % 26 + 97))\n    print(\"\".join(plain)) \n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/python3\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(0, m):\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i])) % 26 + 97))\n    print(\"\".join(plain))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    m, n = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(0, m):\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i % m])) % 26 + 97))\n    print(\"\".join(plain))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649828928,
  "object": "edit"
}
2022-04-13 05:48:51.416816 fix syntax errors 3 ['\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(0, m):\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i])) % 26 + 97))\n    print("".join(plain)) \n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/python3\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(0, m):\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i])) % 26 + 97))\n    print("".join(plain))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    m, n = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(0, m):\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i % m])) % 26 + 97))\n    print("".join(plain))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 05:48:53.418042 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    plain = []\n    for i in range(0, m):\n        plain.append(chr((ord(ciphertext[i]) - ord(keyword[i])) % 26 + 97))\n    print(\"\".join(plain))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    plain = []\n    for i in range(1, m):\n        plain.append(chr((ord(ciphertext[i]) - ord(keyword[i])) % 26 + 97))\n    print(\"\".join(plain))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    plain = []\n    for i in range(0, m):\n        plain.append(chr((ord(ciphertext[i]) - ord(keyword[i])) % 26 + 97))\n    print(\"\".join(plain))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649828931,
  "object": "edit"
}
2022-04-13 05:48:53.418282 fix syntax errors 3 ['\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    plain = []\n    for i in range(0, m):\n        plain.append(chr((ord(ciphertext[i]) - ord(keyword[i])) % 26 + 97))\n    print("".join(plain))\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    plain = []\n    for i in range(1, m):\n        plain.append(chr((ord(ciphertext[i]) - ord(keyword[i])) % 26 + 97))\n    print("".join(plain))\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    plain = []\n    for i in range(0, m):\n        plain.append(chr((ord(ciphertext[i]) - ord(keyword[i])) % 26 + 97))\n    print("".join(plain))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 05:48:56.932802 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(1, m):\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i])) % 26 + 97))\n    print(\"\".join(plain)) # \u5b57\u7b26\u4e32\u8fde\u63a5\u51fd\u6570 \n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(0, m):\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i % n])) % 26 + 97))\n    print(\"\".join(plain)) # \u5b57\u7b26\u4e32\u8fde\u63a5\u51fd\u6570\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(1, m):\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i])) % 26 + 97))\n    print(\"\".join(plain))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649828933,
  "object": "edit"
}
2022-04-13 05:48:56.932974 fix syntax errors 3 ['\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(1, m):\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i])) % 26 + 97))\n    print("".join(plain)) # 字符串连接函数 \n\nif __name__ == "__main__":\n    main()\n', '# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(0, m):\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i % n])) % 26 + 97))\n    print("".join(plain)) # 字符串连接函数\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(1, m):\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i])) % 26 + 97))\n    print("".join(plain))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 05:48:56.933010 size on output set 9
