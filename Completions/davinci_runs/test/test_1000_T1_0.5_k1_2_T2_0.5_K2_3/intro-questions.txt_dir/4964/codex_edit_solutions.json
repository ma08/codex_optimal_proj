["\n\ndef main():\n    n, h, l = map(int, input().split())\n    hore = set(map(int, input().split())) - {0}\n    similar = [[] for _ in range(n + 1)]\n    for _ in range(l):\n        a, b = map(int, input().split())\n        similar[a].append(b + 1)\n        similar[b + 1].append(a)\n    hore_index = [0] * (n + 1)\n    for i in range(1, n + 1):\n        if i not in hore and hore_index[i] == 0:\n            hore_index[i] = max(hore_index[j] for j in similar[i]) + 1\n    print(hore_index.index(max(hore_index)))\n\nmain()\n", "\nfrom collections import defaultdict\nfrom heapq import heapify, heappush, heappop\n# Solution\ndef solve():\n    N, H, L = map(int, input().split())\n    horror_list = set(map(int, input().split()))\n    similarities = [list(map(int, input().split())) for _ in range(L)]\n    HI = [float('inf')] * N\n    adj_list = defaultdict(list)\n    for a, b in similarities:\n        adj_list[a].append(b)\n        adj_list[b].append(a)\n\n            HI[i] = float('inf')\n    for a, b in similarities:\n        if HI[a] < HI[b]:\n            HI[b] = HI[a] + 1\n        elif HI[b] < HI[a]:\n            HI[a] = HI[b] + 1\n    print(HI.index(max(HI)))\n\nsolve()\n", "# https://atcoder.jp/contests/abc079/tasks/abc079_c\n\n# Solution\ndef solve():\n    N, H, L = map(int, input().split())\n    horror_list = set(map(int, input().split()))\n    similar_list = [list(map(int, input().split())) for _ in range(L)]\n    HI = [0] * N\n    for i in range(N):\n        if i in horror_list:\n            HI[i] = 0\n        else:\n            HI[i] = float('inf')\n    for a, b in similar_list:\n        if HI[a] < HI[b]:\n            HI[b] = HI[a] + 1\n        elif HI[b] < HI[a]:\n            HI[a] = HI[b] + 1\n    print(HI.index(max(HI)))\n\nsolve()\n", "\n\n#Solution:\n\nN, H, L = map(int, input().split())\nhorror = set(map(int, input().split()))\n\nsimilar = {}\nfor _ in range(L):\n    a, b = map(int, input().split())\n    similar[a] = similar.get(a, set()).union({b})\n    similar[b] = similar.get(b, set()).union({a})\n\nHI = [0] * N\nfor h in horror:\n    HI[h] = 0\n\nQ = 0\nwhile Q < N:\n    Q = max(HI) + 1\n    for i in range(N):\n        if HI[i] == 0:\n            continue\n        else:\n            HI[i] = Q if all(HI[j] == 0 for j in similar.get(i, [])) else float('inf')\n\nprint(HI.index(max(HI)))\n", "\n\nimport sys\nimport numpy as np\n\ndef main():\n    N, H, L = (int(x) for x in sys.stdin.readline().split())\n    horror_list = set([int(x) - 1 for x in sys.stdin.readline().split()])\n    similar = np.zeros((N, N), dtype=np.int8)\n    for _ in range(L):\n        a, b = (int(x) for x in sys.stdin.readline().split())\n        similar[a - 1][b - 1] = 1\n        similar[b - 1][a - 1] = 1\n    horror_index = [np.inf] * N\n    horror_index[list(horror_list)[0]] = 0\n    for i in range(N):\n        if i in horror_list:\n            continue\n        horror_index[i] = np.inf\n        for j in range(N):\n            if similar[i][j] == 1:\n                horror_index[i] = min(horror_index[i], horror_index[j] + 1)\n    print(np.argmax(horror_index))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nclass Solution:\n    def solve(self, input_lines: list) -> int:\n        return 2\n", "\n# solution:\n\nN, H, L = map(int, input().split())\nhorror = set(map(int, input().split()))\n\nsimilar = {}\nfor _ in range(L):\n    a, b = map(int, input().split())\n    similar[a] = similar.get(a, set()).union({b}) # union({b}) is a set with only b\n    similar[b] = similar.get(b, set()).union({a}) # union({a}) is a set with only a\n\nHI = [0] * N\nfor h in horror:\n    HI[h] = 0 # set the horror to 0\n\nQ = 0 # set Q = 0\nwhile Q < N:\n    Q = max(HI) + 1 # Q = max(HI) + 1\n    for i in range(N):\n        if HI[i] == 0: # if HI[i] == 0\n            continue\n        else:\n            HI[i] = Q if all(HI[j] == 0 for j in similar.get(i, [])) else float('inf')\n\nprint(HI.index(max(HI)))\n", "\nimport sys\nimport numpy as np\n\ndef main():\n    N, H, L = (int(x) for x in sys.stdin.readline().split())\n    horror_list = set([int(x) - 1 for x in sys.stdin.readline().split()])\n    similar = np.zeros((N, N), dtype=np.int8)\n    for _ in range(L):\n        a, b = (int(x) for x in sys.stdin.readline().split())\n        similar[a - 1][b - 1] = 1\n        similar[b - 1][a - 1] = 1\n    horror_index = [0] * N\n    for i in range(N):\n        if i in horror_list:\n            continue\n        horror_index[i] = np.inf\n        for j in range(N):\n            if similar[i][j] == 1:\n                horror_index[i] = min(horror_index[i], horror_index[j] + 1)\n    print(np.argmax(horror_index))\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n, h, l = map(int, input().split())\n    holy = set(map(int, input().split()))\n    similar = [[] for _ in range(n)]\n    for _ in range(l):\n        a, b = map(int, input().split())\n        similar[a].append(b)\n        similar[b].append(a)\n    holy_index = [0] * n\n    for i in range(n):\n        if i not in holy:\n            holy_index[i] = max(holy_index[j] for j in similar[i]) + 1\n    print(holy_index.index(max(holy_index)))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\"\"\"\n# solution:\n\nN, H, L = map(int, input().split())\nhorror = set(map(int, input().split()))\n\nsimilar = {}\nfor _ in range(L):\n    a, b = map(int, input().split())\n    similar[a] = similar.get(a, set()).union({b})\n    similar[b] = similar.get(b, set()).union({a})\n\nHI = [0] * N\nfor h in horror:\n    HI[h] = 0\n\nQ = 0\nwhile Q < N:\n    Q = max(HI) + 1\n    for i in range(N):\n        if HI[i] == 0:\n            continue\n        else:\n            HI[i] = Q if all(HI[j] == 0 for j in similar.get(i, [])) else float('inf')\n\nprint(HI.index(max(HI)))\n\"\"\"\n", "\n# Solution:\n\nN, H, L = map(int, input().split())\nhorror = set(map(int, input().split()))\n\nsimilar = {}\nfor _ in range(L):\n    a, b = map(int, input().split())\n    similar[a] = similar.get(a, set()).union({b})\n    similar[b] = similar.get(b, set()).union({a})\n\nHI = [0] * N\nfor h in horror:\n    HI[h] = 0\n\nQ = 0\nwhile Q < N:\n    Q = max(HI) + 1\n    for i in range(N):\n        if HI[i] == 0:\n            continue\n        else:\n            HI[i] = Q if all(HI[j] == 0 for j in similar.get(i, [])) else float('inf')\n\nprint(HI.index(max(HI)))\n", "#!/usr/bin/env python3\n\nimport sys\nimport numpy as np\n\ndef main():\n    N, H, L = (int(x) for x in sys.stdin.readline().split())\n    horror_list = set((int(x) for x in sys.stdin.readline().split()))\n    similar = np.zeros((N, N), dtype=np.int8)\n    for _ in range(L):\n        a, b = (int(x) - 1 for x in sys.stdin.readline().split())\n        similar[a][b] = 1\n        similar[b][a] = 1\n    horror_index = [0] * N\n    for i in range(N):\n        if i in horror_list:\n            continue\n        horror_index[i] = np.inf\n        for j in range(N):\n            if similar[i][j] == 1:\n                horror_index[i] = min(horror_index[i], horror_index[j] + 1)\n    print(np.argmax(horror_index))\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    N, H, L = map(int, input().split())\n    horror = set(map(int, input().split()))\n    sim = {}\n    for i in range(L):\n        a, b = map(int, input().split())\n        sim.setdefault(a, set()).add(b)\n        sim.setdefault(b, set()).add(a)\n    HI = [0] * N\n    for i in range(N):\n        if i in horror:\n            HI[i] = 0\n        else:\n            HI[i] = max([HI[j] for j in sim[i]] + [float('inf')]) + 1\n    print(HI.index(max(HI)))\n\nif __name__ == '__main__':\n    main()\n", "\ndef solve():\n    N, H, L = map(int, input().split())\n    horror_list = set(map(int, input().split()))\n    similar_list = [list(map(int, input().split())) for _ in range(L)]\n    HI = [0] * N\n    for i in range(N):\n        if i in horror_list:\n            HI[i] = 0\n        else:\n            HI[i] = float('inf')\n    for a, b in similar_list:\n        if HI[a] < HI[b]:\n            HI[b] = HI[a] + 1\n        elif HI[b] < HI[a]:\n            HI[a] = HI[b] + 1\n    print(HI.index(max(HI)))\n\nsolve()\n", "\n\n#Program \nn,h,l = map(int,input().split())\nhorror_list = list(map(int,input().split()))\nsimilar = {}\nfor _ in range(l):\n    a,b = map(int,input().split())\n    if a not in similar:\n        similar[a] = [b]\n    else:\n        similar[a].append(b)\n    if b not in similar:\n        similar[b] = [a]\n    else:\n        similar[b].append(a)\n\nhi = [0]*n\nfor i in horror_list:\n    hi[i] = 0\nfor i in horror_list:\n    for j in similar[i]:\n        if hi[j] == 0:\n            continue\n        elif hi[j] == 1:\n            hi[j] = 0\n        else:\n            hi[j] = 1\n\nmax_hi = max(hi)\nmax_hi_movies = []\nfor i in range(n):\n    if hi[i] == max_hi:\n        max_hi_movies.append(i)\nprint(min(max_hi_movies))\n\n\n\n\n\n\n\n\n\n#Program \nn,h,l = map(int,input().split())\nhorror_list = list(map(int,input().split()))\nsimilar = {}\nfor _ in range(l):\n    a,b = map(int,input().split())\n    if a not in similar:\n        similar[a] = [b]\n    else:\n        similar[a].append(b)\n    if b not in similar:\n        similar[b] = [a]\n    else:\n        similar[b].append(a)\n\nhi = [0]*n\nfor i in horror_list:\n    hi[i] = 0\nfor i in horror_list:\n    for j in similar[i]:\n        if hi[j] == 0:\n            continue\n        elif hi[j] == 1:\n            hi[j] = 0\n        else:\n            hi[j] = 1\n\nmax_hi = max(hi)\nmax_hi_movies = []\nfor i in range(n):\n    if hi[i] == max_hi:\n        max_hi_movies.append(i)\nprint(min(max_hi_movies))\n", "\n\nimport sys\nimport numpy as np\n\ndef main():\n    N, H, L = (int(x) for x in sys.stdin.readline().split())\n    horror_list = set([int(x) for x in sys.stdin.readline().split()])\n    similar = np.zeros((N, N), dtype=np.int8)\n    for _ in range(L):\n        a, b = (int(x) for x in sys.stdin.readline().split())\n        similar[a][b] = 1\n        similar[b][a] = 1\n    horror_index = np.zeros(N)\n    for i in range(N):\n        if i in horror_list:\n            continue\n        horror_index[i] = np.inf\n        for j in range(N):\n            if similar[i][j] == 1:\n                horror_index[i] = min(horror_index[i], horror_index[j] + 1)\n    print(np.argmax(horror_index))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, h, l = map(int, sys.stdin.readline().split())\n    horror = list(map(int, sys.stdin.readline().split()))\n    horror_set = set(horror)\n    horror_index = [float('inf')] * n\n    for i in horror_set:\n        horror_index[i] = 0.0\n    for i in range(l):\n        a, b = map(int, sys.stdin.readline().split())\n        if a in horror_set:\n            horror_index[b] = 0.0\n        elif b in horror_set:\n            horror_index[a] = 0.0\n    for i in range(n):\n        if horror_index[i] == 0.0:\n            continue\n        horror_index[i] = float('inf')\n        for j in range(l):\n            a, b = map(int, sys.stdin.readline().split())\n            if a == i:\n                horror_index[i] = min(horror_index[i], horror_index[b] + 1)\n            elif b == i:\n                horror_index[i] = min(horror_index[i], horror_index[a] + 1)\n        if horror_index[i] == float('inf'):\n            horror_index[i] = -1\n    max_hi = max(horror_index)\n    max_indices = []\n    for i in range(n):\n        if horror_index[i] == max_hi:\n            max_indices.append(i)\n    print(min(max_indices))\n\nif __name__ == '__main__':\n    main()\n", "\n#Programming\ndef main():\n    n,h,l = map(int,input().split())\n    horror_list = list(map(int,input().split()))\n    similar = {}\n    for _ in range(l):\n        a,b = map(int,input().split())\n        if a not in similar:\n            similar[a] = [b]\n        else:\n            similar[a].append(b)\n        if b not in similar:\n            similar[b] = [a]\n        else:\n            similar[b].append(a)\n    hi = [0]*n\n    for i in horror_list:\n        hi[i] = 0\n    for i in horror_list:\n        for j in similar[i]:\n            if hi[j] == 0:\n                continue\n            elif hi[j] == 1:\n                hi[j] = 0\n            else:\n                hi[j] = 1\n    max_hi = max(hi)\n    max_hi_movies = []\n    for i in range(n):\n        if hi[i] == max_hi:\n            max_hi_movies.append(i)\n    print(min(max_hi_movies))\nif __name__ == '__main__':\n    main()\n", "def main():\n    n, h, l = map(int, input().split())\n    horror = set(map(int, input().split()))\n    similar = [[] for _ in range(n)]\n    for _ in range(l):\n        a, b = map(int, input().split())\n        similar[a].append(b)\n        similar[b].append(a)\n    horror_index = [0] * n\n    for i in range(n):\n        if i not in horror:\n            horror_index[i] = max(horror_index[j] for j in similar[i]) + 1\n    print(horror_index.index(max(horror_index)))\n\nmain()\n", "\n\n# Solution\ndef solve():\n    N, H, L = map(int, input().split())\n    horror_list = set([i - 1 for i in map(int, input().split())]) # \u96c6\u5408\u306b\u3059\u308b\u3053\u3068\u3067\u91cd\u8907\u3092\u6392\u9664\u3059\u308b\n    similarities = [list(map(int, input().split())) for _ in range(L)]\n    HI = [0] * N\n    for i in range(N):\n        if i in horror_list:\n            HI[i] = 0\n        else:\n            HI[i] = float('inf')\n    for a, b in similarities:\n        if HI[a] < HI[b]:\n            HI[b] = HI[a] + 1\n        elif HI[b] < HI[a]:\n            HI[a] = HI[b] + 1\n    print(HI.index(max(HI)))\n\nsolve()\n", "\n\nclass Solution:\n    def solve(self, input_lines):\n        # TODO: Implement solution\n        return \"1\"\n", "# def main():\n#     n, m, k = map(int, input().split())\n#     a = [int(input()) for _ in range(n)]\n#     b = [int(input()) for _ in range(m)]\n#     a.sort()\n#     b.sort()\n\n\ndef main():\n    n, h, l = map(int, input().split())\n    horror = set(map(int, input().split()))\n    similar = [[] for _ in range(n)]\n    for _ in range(l):\n        a, b = map(int, input().split())\n        similar[a].append(b)\n        similar[b].append(a)\n    horror_index = [0] * n\n    for i in range(n):\n        if i not in horror:\n            horror_index[i] = max(horror_index[j] for j in similar[i]) + 1\n    print(horror_index.index(max(horror_index)))\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())  # N is number of movies\n    movies = [int(sys.stdin.readline()) for _ in range(N)]\n    max_profit = 0\n    for i in range(1, N):\n        max_profit = max(max_profit, max(movies[i:]) - min(movies[:i]))\n    print(max_profit)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# Program for finding best horror movie\nn,h,l = map(int,input().split())\nhorror_list = list(map(int,input().split()))\nsimilar = {}\nfor _ in range(l):\n    a,b = map(int,input().split())\n    if a not in similar:\n        similar[a] = [b]\n    else:\n        similar[a].append(b)\n    if b not in similar:\n        similar[b] = [a]\n    else:\n        similar[b].append(a)\n\nhi = [0]*n\nfor i in horror_list:\n    hi[i] = 0\nfor i in horror_list:\n    for j in similar[i]:\n        if hi[j] == 0:\n            continue\n        elif hi[j] == 1:\n            hi[j] = 0\n        else:\n            hi[j] = 1\n\nmax_hi = max(hi)\nmax_hi_movies = []\nfor i in range(n):\n    if hi[i] == max_hi:\n        max_hi_movies.append(i)\nprint(min(max_hi_movies))\n", "\n\nimport sys\n\ndef main():\n    n, h, l = map(int, sys.stdin.readline().split())\n    horror = list(map(int, sys.stdin.readline().split()))\n    horror_set = set(horror) # set of horror movie index\n    horror_index = [0] * n # index of the movie with the largest distance from horror movies\n    for i in horror:\n        horror_index[i] = 0 # set horror movie index to 0, because it is a horror movie\n    for i in range(l):\n        a, b = map(int, sys.stdin.readline().split())\n        if a in horror_set: # if movie a is horror movie\n            horror_index[b] = 0 # set movie b's index to 0, because it is connected to horror movie\n        elif b in horror_set:\n            horror_index[a] = 0\n    for i in range(n):\n        if horror_index[i] == 0:\n            continue # if movie i's index is 0, it is a horror movie, so skip\n        horror_index[i] = float('inf') # set movie i's index to infinity\n        for j in range(l):\n            a, b = map(int, sys.stdin.readline().split())\n            if a == i: # if movie i is connected to movie a\n                horror_index[i] = min(horror_index[i], horror_index[b] + 1)\n            elif b == i: # if movie i is connected to movie b\n                horror_index[i] = min(horror_index[i], horror_index[a] + 1)\n        if horror_index[i] == float('inf'):\n            horror_index[i] = -1\n    max_hi = max(horror_index)\n    max_indices = []\n    for i in range(n):\n        if horror_index[i] == max_hi:\n            max_indices.append(i)\n    print(min(max_indices))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, h, l = map(int, sys.stdin.readline().split())\n    horror = list(map(int, sys.stdin.readline().split()))\n    horror_set = set(horror)\n    horror_index = [0] * n\n    for i in horror:\n        horror_index[i-1] = 1\n    for i in range(l):\n        a, b = map(int, sys.stdin.readline().split())\n        if a in horror_set:\n            horror_index[b-1] = 1\n        elif b in horror_set:\n            horror_index[a-1] = 1\n    for i in range(n):\n        if horror_index[i] == 1:\n            continue\n        horror_index[i] = float('inf')\n        for j in range(l):\n            a, b = map(int, sys.stdin.readline().split())\n            if a-1 == i:\n                horror_index[i] = min(horror_index[i], horror_index[b-1] + 1)\n            elif b-1 == i:\n                horror_index[i] = min(horror_index[i], horror_index[a-1] + 1)\n        if horror_index[i] == float('inf'):\n            horror_index[i] = -1\n    max_hi = max(horror_index)\n    max_indices = []\n    for i in range(n):\n        if horror_index[i] == max_hi:\n            max_indices.append(i+1)\n    print(min(max_indices))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    N, H, L = map(int, sys.stdin.readline().strip().split())\n    horror = set(map(int, sys.stdin.readline().split()))\n    sim = {i: set() for i in range(N)}\n    for i in range(L):\n        a, b = map(int, sys.stdin.readline().strip().split())\n        sim[a].add(b)\n        sim[b].add(a)\n    HI = [0] * N\n    for i in range(N):\n        if i in horror:\n            HI[i] = 0\n        else:\n            HI[i] = max([HI[j] for j in sim[i]] + [float('inf')]) + 1\n    print(HI.index(max(HI)))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, h, l = map(int, sys.stdin.readline().split())\n    horror = list(map(int, sys.stdin.readline().split()))\n    horror_set = set(horror)\n    horror_index = [0] * n\n    for i in range(n):\n        if i in horror_set:\n            horror_index[i] = 0\n    for i in range(l):\n        a, b = map(int, sys.stdin.readline().split())\n        if a in horror_set:\n            horror_index[b] = 0\n        elif b in horror_set:\n            horror_index[a] = 0\n    for i in range(n):\n        if horror_index[i] == 0:\n            continue\n        horror_index[i] = float('inf')\n        for j in range(l):\n            a, b = map(int, sys.stdin.readline().split())\n            if a == i:\n                horror_index[i] = min(horror_index[i], horror_index[b] + 1)\n            elif b == i:\n                horror_index[i] = min(horror_index[i], horror_index[a] + 1)\n        if horror_index[i] == float('inf'):\n            horror_index[i] = -1\n    max_hi = max(horror_index)\n    max_indices = []\n    for i in range(n):\n        if horror_index[i] == max_hi:\n            max_indices.append(i)\n    print(min(max_indices))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, h, l = map(int, sys.stdin.readline().split())\n    horror = list(map(int, sys.stdin.readline().split()))\n    horror_set = set(horror)\n    horror_index = [0] * n\n    for i in range(h):\n        horror_index[horror[i]-1] = 0\n    for i in range(l):\n        a, b = map(int, sys.stdin.readline().split())\n        if a in horror_set:\n            horror_index[b-1] = 0\n        elif b in horror_set:\n            horror_index[a-1] = 0\n    for i in range(n):\n        if horror_index[i] == 0:\n            continue\n        horror_index[i] = float('inf')\n        for j in range(l):\n            a, b = map(int, sys.stdin.readline().split())\n            if a == i:\n                horror_index[i] = min(horror_index[i], horror_index[b-1] + 1)\n            elif b == i:\n                horror_index[i] = min(horror_index[i], horror_index[a] + 1)\n        if horror_index[i] == float('inf'):\n            horror_index[i] = -1\n    max_hi = max(horror_index)\n    max_indices = []\n    for i in range(n):\n        if horror_index[i] == max_hi:\n            max_indices.append(i+1)\n    print(min(max_indices))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    N, H, L = map(int, sys.stdin.readline().split())  # N is number of movies, H is number of horror movies\n    horror = set(map(int, sys.stdin.readline().split()))\n    sim = {}\n    for i in range(L):  # L is number of similar movies\n        a, b = map(int, sys.stdin.readline().split())\n        sim.setdefault(a, set()).add(b)\n        sim.setdefault(b, set()).add(a)\n    HI = [0] * N  # HI is a list that contains the most horror-free similar movie of each movie.\n    for i in range(N):  # HI[i] = max([HI[j] for j in sim[i]] + [float('inf')]) + 1\n        if i in horror:\n            HI[i] = 0\n        else:\n            HI[i] = max([HI[j] for j in sim.get(i, [])] + [float('inf')]) + 1\n    print(HI.index(max(HI)))\n\nif __name__ == '__main__':\n    main()\n", "\ndef solve():\n    N, H, L = map(int, input().split())\n    horror_list = set([i - 1 for i in map(int, input().split())])\n    similarities = [list(map(int, input().split())) for _ in range(L)]\n    HI = [0] * N\n    for i in range(N):\n        if i in horror_list:\n            HI[i] = 0\n        else:\n            HI[i] = float('inf')\n    for a, b in similarities:\n        if HI[a] < HI[b]:\n            HI[b] = HI[a] + 1\n        elif HI[b] < HI[a]:\n            HI[a] = HI[b] + 1\n    print(HI.index(max(HI)))\n\nsolve()\n", "\n# Question:\n# Given a list of N horror movies, each with a horror index.\n# Given a list of L pairs of similar movies.\n# Find which movie is the most scary.\n#\n# Input Format:\n# Each line of input contains the following:\n#   N H L - Number of movies, horror index of the most scary movie and the number of similar pairs.\n#   horror - List of horror indices of movies.\n#   a b - Similar movies.\n#\n# Output Format:\n# Print the index of the movie which is the most scary.\n#\n# Sample Input:\n# 5 2 4\n# 1 2 3 4 5\n# 1 2\n# 2 3\n# 3 4\n# 4 5\n#\n# Sample Output:\n# 2\n#\n# Explanation:\n# The most scary movie is movie 2.\n\n# Solution:\n\nN, H, L = map(int, input().split())\nhorror = set(map(int, input().split()))\n\nsimilar = {}\nfor _ in range(L):\n    a, b = map(int, input().split())\n    similar[a] = similar.get(a, set()).union({b})\n    similar[b] = similar.get(b, set()).union({a})\n\nHI = [0] * N\nfor h in horror:\n    HI[h] = 0\n\nQ = 0\nwhile Q < N:\n    Q = max(HI) + 1\n    for i in range(N):\n        if HI[i] == 0:\n            continue\n        else:\n            HI[i] = Q if all(HI[j] == 0 for j in similar.get(i, [])) else float('inf')\n\nprint(HI.index(max(HI)))\n", "\n\n#Program\nn,h,l = map(int,input().split())\nhorror_list = list(map(int,input().split()))\nsimilar = {}\nfor _ in range(l):\n    a, b = map(int, input().split())\n    if a not in similar:\n        similar[a] = [b]\n    else:\n        similar[a].append(b)\n    if b not in similar:\n        similar[b] = [a]\n    else:\n        similar[b].append(a)\n\nhi = [0]*n\nfor i in horror_list:\n    hi[i] = 0\nfor i in horror_list:\n    for j in similar[i]:\n        if hi[j] == 0:\n            continue\n        elif hi[j] == 1:\n            hi[j] = 0\n        else:\n            hi[j] = 1\n\nmax_hi = max(hi)\nmax_hi_movies = []\nfor i in range(n):\n    if hi[i] == max_hi:\n        max_hi_movies.append(i)\nprint(min(max_hi_movies))\n", "\nimport sys\nimport numpy as np\n\ndef main():\n    N, H, L = (int(x) for x in sys.stdin.readline().split())\n    horror_list = set([int(x) - 1 for x in sys.stdin.readline().split()])\n    similar = np.zeros((N, N), dtype=np.int8)\n    for _ in range(L):\n        a, b = (int(x) - 1 for x in sys.stdin.readline().split())\n        similar[a][b] = 1\n        similar[b][a] = 1\n    horror_index = [0] * N\n    for i in range(N):\n        if i in horror_list:\n            continue\n        horror_index[i] = np.inf\n        for j in range(N):\n            if similar[i][j] == 1:\n                horror_index[i] = min(horror_index[i], horror_index[j] + 1)\n    print(np.argmax(horror_index))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nclass Solution:\n    def solve(self, input_line):\n        # TODO: Implement solution\n        return 1\n", "#!/usr/bin/env python3\n\n# Solution\ndef solve():\n    N, H, L = map(int, input().split())\n    horror_list = set(map(int, input().split()))\n    similarities = [list(map(int, input().split())) for _ in range(L)]\n    HI = [0] * N\n    for i in range(N):\n        if i in horror_list:\n            HI[i] = 0\n        else:\n\n            HI[i] = float('inf')\n    for a, b in similarities:\n        if HI[a] < HI[b]:\n            HI[b] = HI[a] + 1\n        elif HI[b] < HI[a]:\n            HI[a] = HI[b] + 1\n    print(HI.index(max(HI)))\n\nsolve()\n", "# Solution\ndef solve():\n    pass\n\nsolve()\n", "\n\ndef main():\n    n, h, l = map(int, input().split())\n    hore = set(map(int, input().split()))\n    similar = [[] for i in range(n)]\n    for _ in range(l):\n        a, b = map(int, input().split())\n        similar[a].append(b)\n        similar[b].append(a)\n    hore_index = [0] * n\n    for i in range(n):\n        if i not in hore:\n            hore_index[i] = max(hore_index[j] for j in similar[i]) + 1\n    print(hore_index.index(max(hore_index)))\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    n, h, l = map(int, sys.stdin.readline().split())\n    horror = list(map(int, sys.stdin.readline().split()))\n    horror_set = set(horror)\n    horror_index = [0] * n\n    for i in horror:\n        horror_index[i] = 0\n    for i in range(l):\n        a, b = map(int, sys.stdin.readline().split())\n        if a in horror_set:\n            horror_index[b] = 0\n        elif b in horror_set:\n            horror_index[a] = 0\n    for i in range(n):\n        if horror_index[i] == 0:\n            continue\n        horror_index[i] = float('inf')\n        for j in range(l):\n            a, b = map(int, sys.stdin.readline().split())\n            if a == i:\n                horror_index[i] = min(horror_index[i], horror_index[b] + 1)\n            elif b == i:\n                horror_index[i] = min(horror_index[i], horror_index[a] + 1)\n        if horror_index[i] == float('inf'):\n            horror_index[i] = -1\n    max_hi = max(horror_index)\n    max_indices = []\n    for i in range(n):\n        if horror_index[i] == max_hi:\n            max_indices.append(i)\n    print(min(max_indices))\n\nif __name__ == '__main__':\n    main()\n", "\n\n# Programming\nn,h,l = map(int,input().split())\nhorror_list = list(map(int,input().split()))\nsimilar = {}\nfor _ in range(l):\n    a,b = map(int,input().split())\n    if a not in similar:\n        similar[a] = [b]\n    else:\n        similar[a].append(b)\n    if b not in similar:\n        similar[b] = [a]\n    else:\n        similar[b].append(a)\n\nhi = [0]*n\nfor i in horror_list:\n    hi[i] = 0\nfor i in horror_list:\n    for j in similar[i]:\n        if hi[j] == 0:\n            continue\n        elif hi[j] == 1:\n            hi[j] = 0\n        else:\n            hi[j] = 1\n\nmax_hi = max(hi)\nmax_hi_movies = []\nfor i in range(n):\n    if hi[i] == max_hi:\n        max_hi_movies.append(i)\nprint(min(max_hi_movies))\n", "\n\nimport sys, time\nimport numpy as np\n\ndef main():\n    N, H, L = (int(x) for x in sys.stdin.readline().split())\n    horror_list = [int(x) - 1 for x in sys.stdin.readline().split()]\n    similar = np.zeros((N, N), dtype=np.int8)\n    for _ in range(L):\n        a, b = (int(x) - 1 for x in sys.stdin.readline().split())\n        similar[a][b] = 1\n        similar[b][a] = 1\n    horror_index = [0] * N\n    for i in range(N):\n        if i in horror_list:\n            continue\n        horror_index[i] = np.inf\n        for j in range(N):\n            if similar[i][j] == 1:\n                horror_index[i] = min(horror_index[i], horror_index[j] + 1)\n    print(np.argmax(horror_index))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n#Programming\nn,h,l = map(int, input().split())\nhorror_list = list(map(int, input().split()))\nsimilar = {}\nfor _ in range(l):\n    a,b = map(int, input().split())\n    if a not in similar:\n        similar[a] = [b]\n    else:\n        similar[a].append(b)\n    if b not in similar:\n        similar[b] = [a]\n    else:\n        similar[b].append(a)\n\nhi = [0]*n\nfor i in horror_list:\n    hi[i] = 0\nfor i in horror_list:\n    for j in similar[i]:\n        if hi[j] == 0:\n            continue\n        elif hi[j] == 1:\n            hi[j] = 0\n        else:\n            hi[j] = 1\n\nmax_hi = max(hi)\nmax_hi_movies = []\nfor i in range(n):\n    if hi[i] == max_hi:\n        max_hi_movies.append(i)\nprint(min(max_hi_movies))\n", "\n\ndef main():\n    n, h, l = map(int, input().split()) \n    holy = set(map(int, input().split()))\n    similar = [[] for _ in range(n)] \n    for _ in range(l):\n        a, b = map(int, input().split())\n        similar[a].append(b)\n        similar[b].append(a) \n    holy_index = [0] * n \n    for i in range(n):\n        if i not in holy:\n            holy_index[i] = max(holy_index[j] for j in similar[i]) + 1\n    print(holy_index.index(max(holy_index)))\n\nmain()\n", "\n\ndef solve():\n    pass\n\nsolve()\n", "\n\n# Solution\ndef solve():\n    N, H, L = map(int, input().split())\n    horror_list = [i - 1 for i in map(int, input().split())]\n    similarities = [list(map(int, input().split())) for _ in range(L)]\n    HI = [0] * N\n    for i in range(N):\n        if i not in horror_list:\n            HI[i] = float('inf')\n    for a, b in similarities:\n        if HI[a] < HI[b]:\n            HI[b] = HI[a] + 1\n        elif HI[b] < HI[a]:\n            HI[a] = HI[b] + 1\n    print(HI.index(max(HI)))\n\nsolve()\n", "\n\ndef main():\n    n, h, l = map(int, input().split())\n    hore = set(map(int, input().split())) - {0}\n    similar = [[] for _ in range(n)]\n    for _ in range(l):\n        a, b = map(int, input().split())\n        similar[a - 1].append(b - 1)\n        similar[b - 1].append(a - 1)\n    hore_index = [0] * n\n    for i in range(n):\n        if i not in hore and similar[i]:\n            hore_index[i] = max(hore_index[j] for j in similar[i]) + 1\n    print(hore_index.index(max(hore_index)) + 1)\n\nmain()\n", "\n\nimport sys\nimport numpy as np\n\ndef main():\n    N, H, L = (int(x) for x in sys.stdin.readline().split())\n    horror_list = set((int(x) - 1 for x in sys.stdin.readline().split()))\n    similar = np.zeros((N, N), dtype=np.int8)\n    for _ in range(L):\n        a, b = (int(x) - 1 for x in sys.stdin.readline().split())\n        similar[a][b] = 1\n        similar[b][a] = 1\n    horror_index = [0] * N\n    for i in range(N):\n        if i in horror_list:\n            continue\n        horror_index[i] = np.inf\n        for j in range(N):\n            if similar[i][j] == 1:\n                horror_index[i] = min(horror_index[i], horror_index[j] + 1)\n    print(np.argmax(horror_index) + 1)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    for i in range(N):\n        print(A[i], end=' ')\n        if A[i] % 2 == 0:\n            print(A[i] // 2)\n        else:\n            print(A[i] * 2)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    N, H, L = map(int, sys.stdin.readline().split())  # N is number of movies, H is number of horror movies, L is number of similar movies\n    horror = set(map(int, sys.stdin.readline().split()))\n    sim = {}\n    for i in range(L):\n        a, b = map(int, sys.stdin.readline().split())\n        sim.setdefault(a, set()).add(b)\n        sim.setdefault(b, set()).add(a)\n    HI = [0] * N  # HI is a list that contains the most horror-free similar movie of each movie\n    for i in range(N):\n        if i in horror:\n            HI[i] = 0\n        else:\n            HI[i] = max([HI[j] for j in sim[i]] + [float('inf')]) + 1\n    print(HI.index(max(HI)))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport numpy as np\n\ndef main():\n    N, H, L = (int(x) for x in sys.stdin.readline().split())\n    horror_list = set((int(x) - 1 for x in sys.stdin.readline().split()))\n    similar = np.zeros((N, N), dtype=np.int8)\n    for _ in range(L):\n        a, b = (int(x) - 1 for x in sys.stdin.readline().split())\n        similar[a][b] = 1\n        similar[b][a] = 1\n    horror_index = [0] * N\n    for i in range(N):\n        if i in horror_list:\n            continue\n        horror_index[i] = np.inf\n        for j in range(N):\n            if similar[i][j] == 1:\n                horror_index[i] = min(horror_index[i], horror_index[j] + 1)\n    print(np.argmax(horror_index))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# solution\n\nN, H, L = map(int, input().split())\nhorror = set(map(int, input().split()))\n\nsimilar = {}\nfor _ in range(L):\n    a, b = map(int, input().split())\n    similar[a] = similar.get(a, set()).union({b})\n    similar[b] = similar.get(b, set()).union({a})\n\nHI = [0] * N\nfor h in horror:\n    HI[h] = 0\n\nQ = 0\nwhile Q < N:\n    Q = max(HI) + 1\n    for i in range(N):\n        if HI[i] == 0:\n            continue\n        else:\n            HI[i] = Q if all(HI[j] == 0 for j in similar.get(i, [])) else float('inf')\n\nprint(HI.index(max(HI)))\n", "#!/usr/bin/env python3\n\nimport sys\nimport numpy as np\n\ndef main():\n    N, H, L = (int(x) for x in sys.stdin.readline().split())\n    horror_list = set([int(x) - 1 for x in sys.stdin.readline().split()])\n    similar = np.zeros((N, N), dtype=np.int8)\n    for _ in range(L):\n        a, b = (int(x) for x in sys.stdin.readline().split())\n        similar[a - 1][b - 1] = 1\n        similar[b - 1][a - 1] = 1\n    horror_index = [0] * N\n    for i in range(N):\n        if i in horror_list:\n            continue\n        horror_index[i] = np.inf\n        for j in range(N):\n            if similar[i][j] == 1:\n                horror_index[i] = min(horror_index[i], horror_index[j] + 1)\n    print(np.argmax(horror_index))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# Solution:\n\nN, H, L = map(int, input().split())\nhorror = set(map(int, input().split()))\n\nsimilar = {}\nfor _ in range(L):\n    a, b = map(int, input().split())\n    similar[a] = similar.get(a, set()).union({b})\n    similar[b] = similar.get(b, set()).union({a})\n\nHI = [0] * N\nfor h in horror:\n    HI[h] = 0\n\nQ = 0\nwhile Q < N:\n    Q = max(HI) + 1\n    for i in range(N):\n        if HI[i] == 0:\n            continue\n        else:\n            HI[i] = Q if all(HI[j] == 0 for j in similar.get(i, [])) else float('inf')\n\nprint(HI.index(max(HI)))\n", "\n\nimport sys\n\ndef main():\n    N, H, L = map(int, sys.stdin.readline().strip().split())\n    horror = set(map(int, sys.stdin.readline().strip().split()))\n    sim = {}\n    for i in range(L):\n        a, b = map(int, sys.stdin.readline().strip().split())\n        sim.setdefault(a, set()).add(b)\n        sim.setdefault(b, set()).add(a)\n    HI = [0] * N\n    for i in range(N):\n        if i in horror:\n            HI[i] = 0\n        else:\n            HI[i] = max([HI[j] for j in sim[i]] + [float('inf')]) + 1\n    print(HI.index(max(HI)))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, h, l = map(int, sys.stdin.readline().split())\n    horror = list(map(int, sys.stdin.readline().split()))\n    horror_set = set(horror)  # set of horror movie index\n    horror_index = [0] * n\n    for i in horror:\n        horror_index[i] = 0  # set horror movie index to 0\n    for i in range(l):\n        a, b = map(int, sys.stdin.readline().split())\n        if a in horror_set: # if movie a is horror movie\n            horror_index[b] = 0\n        elif b in horror_set:\n            horror_index[a] = 0\n    for i in range(n):\n        if horror_index[i] == 0:\n            continue\n        horror_index[i] = float('inf')\n        for j in range(l):\n            a, b = map(int, sys.stdin.readline().split())\n            if a == i:\n                horror_index[i] = min(horror_index[i], horror_index[b] + 1)\n            elif b == i:\n                horror_index[i] = min(horror_index[i], horror_index[a] + 1)\n        if horror_index[i] == float('inf'):\n            horror_index[i] = -1\n    max_hi = max(horror_index)\n    max_indices = []\n    for i in range(n):\n        if horror_index[i] == max_hi:\n            max_indices.append(i)\n    print(min(max_indices))\n\nif __name__ == '__main__':\n    main()\n", "\n\n# #Program for finding best horror movie\n# n,h,l = map(int,input().split())\n# horror_list = list(map(int,input().split()))\n# similar = {}\n# for _ in range(l):\n#     a,b = map(int,input().split())\n#     if a not in similar:\n#         similar[a] = [b]\n#     else:\n#         similar[a].append(b)\n#     if b not in similar:\n#         similar[b] = [a]\n#     else:\n#         similar[b].append(a)\n\n# hi = [0]*n\n# for i in horror_list:\n#     hi[i] = 0\n# for i in horror_list:\n#     for j in similar[i]:\n#         if hi[j] == 0:\n#             continue\n#         elif hi[j] == 1:\n#             hi[j] = 0\n#         else:\n#             hi[j] = 1\n\n# max_hi = max(hi)\n# max_hi_movies = []\n# for i in range(n):\n#     if hi[i] == max_hi:\n#         max_hi_movies.append(i)\n# print(min(max_hi_movies))\n\ndef max_subarray_sum(a,size):\n    max_so_far = 0\n    max_ending_here = 0\n    for i in range(0,size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n    return max_so_far\n\ndef max_subarray_sum_all_positive(a,size):\n    max_so_far = 0\n    for i in range(0,size):\n        max_so_far = max_so_far + a[i]\n    return max_so_far\n\ndef max_subarray(a,size):\n    max_sum = max_subarray_sum(a,size)\n    if max_sum == 0:\n        max_sum = max_subarray_sum_all_positive(a,size)\n    return max_sum\n\n# Driver program to test maxSubArraySum\na = [-2, -3, 4, -1, -2, 1, 5, -3]\nprint(\"Maximum contiguous sum is\", max_subarray(a,len(a)))\n", "\nimport sys\n\ndef main():\n    n, h, l = map(int, sys.stdin.readline().split())\n    horror = list(map(int, sys.stdin.readline().split()))\n    horror_set = set(horror)\n    horror_index = [-1] * n\n    for i in range(n):\n        if i in horror_set:\n            horror_index[i] = 0\n    for i in range(l):\n        a, b = map(int, sys.stdin.readline().split())\n        if a in horror_set:\n            horror_index[b-1] = 0\n        elif b in horror_set:\n            horror_index[a-1] = 0\n    for i in range(n):\n        if horror_index[i] == 0:\n            continue\n        horror_index[i] = float('inf')\n        for j in range(l):\n            a, b = map(int, lines[j].split())\n            if a == i:\n                horror_index[i] = min(horror_index[i], horror_index[b] + 1)\n            elif b == i:\n                horror_index[i] = min(horror_index[i], horror_index[a] + 1)\n        if horror_index[i] == float('inf'):\n            horror_index[i] = -1\n    max_hi = max(horror_index)\n    max_indices = []\n    for i in range(n):\n        if horror_index[i] == max_hi:\n            max_indices.append(i)\n    print(min(max_indices))\n\nif __name__ == '__main__':\n    main()\n", "\n# Program for finding best horror movie\nn,h,l = map(int,input().split())\nhorror_list = list(map(int,input().split()))\nsimilar = {}\nfor _ in range(l):\n    a,b = map(int,input().split())\n    if a not in similar:\n        similar[a] = [b]\n    else:\n        similar[a].append(b)\n    if b not in similar:\n        similar[b] = [a]\n    else:\n        similar[b].append(a)\n\nhi = [0]*n\nfor i in horror_list:\n    hi[i] = 0\nfor i in horror_list:\n    for j in similar[i]:\n        if hi[j] == 0:\n            continue\n        elif hi[j] == 1:\n            hi[j] = 0\n        else:\n            hi[j] = 1\n\nmax_hi = max(hi)\nmax_hi_movies = []\nfor i in range(n):\n    if hi[i] == max_hi:\n        max_hi_movies.append(i)\nprint(min(max_hi_movies))\n", "\nimport sys\n\ndef main():\n    N, H, L = map(int, sys.stdin.readline().split())\n    horror = set(map(int, input().split()))\n    sim = {}\n    for i in range(L):\n        a, b = map(int, sys.stdin.readline().split())\n        sim.setdefault(a, set()).add(b)\n        sim.setdefault(b, set()).add(a)\n    HI = [0] * N\n    for i in range(N):\n        if i in horror:\n            HI[i] = 0\n        else:\n            HI[i] = max([HI[j] for j in sim[i]] + [float('inf')]) + 1\n    sys.stdout.write(str(HI.index(max(HI))) + '\\n')\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    N, H, L = map(int, sys.stdin.readline().strip().split())\n    horror = set(map(int, sys.stdin.readline().split()))\n    sim = {}\n    for i in range(L):\n        a, b = map(int, sys.stdin.readline().strip().split())\n        sim.setdefault(a, set()).add(b)\n        sim.setdefault(b, set()).add(a)\n    HI = [0] * N\n    for i in range(N):\n        if i in horror:\n            HI[i] = 0\n        else:\n            HI[i] = max([HI[j] for j in sim[i]] + [float('inf')]) + 1\n    print(HI.index(max(HI)))\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, h, l = map(int, input().split())\n    holy = set(map(int, input().split()))\n    similar = [[] for _ in range(n)]\n    for _ in range(l):\n        a, b = map(int, input().split())\n        similar[a].append(b)\n        similar[b].append(a)\n    holy_index = [0] * n\n    for i in range(n):\n        if i not in holy:\n            holy_index[i] = max(holy_index[j] for j in similar[i]) + 1\n    print(holy_index.index(max(holy_index)))\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    n, h, l = map(int, sys.stdin.readline().split())\n    horror = list(map(int, sys.stdin.readline().split()))\n    horror_set = set(horror)\n    horror_index = [float('inf')] * n\n    for i in range(n):\n        if i in horror_set:\n            horror_index[i] = 0\n    for i in range(l):\n        a, b = map(int, sys.stdin.readline().split())\n        if a in horror_set and b in horror_set:\n            horror_index[a] = 0\n            horror_index[b] = 0\n    for i in range(n):\n        if horror_index[i] == 0:\n            continue\n        horror_index[i] = float('inf')\n        for j in range(l):\n            a, b = map(int, sys.stdin.readline().split())\n            if a == i or b == i:\n                horror_index[i] = min(horror_index[i], max(horror_index[a], horror_index[b]) + 1)\n        if horror_index[i] == float('inf'):\n            horror_index[i] = -1\n    max_hi = max(horror_index)\n    max_indices = []\n    for i in range(n):\n        if horror_index[i] == max_hi:\n            max_indices.append(i)\n    print(min(max_indices))\n\nif __name__ == '__main__':\n    main()\n"]