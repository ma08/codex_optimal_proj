2022-04-12 20:15:08.049794 num operations 2
2022-04-12 20:15:08.049806 size on input set 1
2022-04-12 20:15:13.055914 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nA, B = map(int, input().split()) # A: \u5e74\u9f62, B: \u6599\u91d1\n\nif A >= 13: # 13\u6b73\u4ee5\u4e0a\u306a\u3089\u3070\n    print(B) # \u6599\u91d1\u3092\u305d\u306e\u307e\u307e\u51fa\u529b\nelif A >= 6: # 6\u6b73\u4ee5\u4e0a13\u6b73\u672a\u6e80\u306a\u3089\u3070\n    print(B // 2) # \u6599\u91d1\u306e\u534a\u984d\u3092\u51fa\u529b\nelse: # \u305d\u308c\u4ee5\u5916\u306a\u3089\u3070\n    print(0) # \u6599\u91d1\u30920\u5186\u3068\u3057\u3066\u51fa\u529b\n"
    },
    {
      "index": 1,
      "text": "\n# \u30c6\u30b9\u30c8\nA, B = map(int, input().split())\n\nif A >= 13:\n    print(B)\nelif A >= 6:\n    print(B // 2)\nelse:\n    print(0)\n"
    },
    {
      "index": 2,
      "text": "\n\nA, B = map(int, input().split())\n\nif A >= 13:\n    print(B)\nelif A >= 6:\n    print(B // 2)\nelse:\n\n\n\n\n\n    print(0)\n"
    }
  ],
  "created": 1649794508,
  "object": "edit"
}
2022-04-12 20:15:13.056120 fix spelling mistakes 3 ['\n\nA, B = map(int, input().split()) # A: 年齢, B: 料金\n\nif A >= 13: # 13歳以上ならば\n    print(B) # 料金をそのまま出力\nelif A >= 6: # 6歳以上13歳未満ならば\n    print(B // 2) # 料金の半額を出力\nelse: # それ以外ならば\n    print(0) # 料金を0円として出力\n', '\n# テスト\nA, B = map(int, input().split())\n\nif A >= 13:\n    print(B)\nelif A >= 6:\n    print(B // 2)\nelse:\n    print(0)\n', '\n\nA, B = map(int, input().split())\n\nif A >= 13:\n    print(B)\nelif A >= 6:\n    print(B // 2)\nelse:\n\n\n\n\n\n    print(0)\n']
2022-04-12 20:15:13.056150 size on output set 3
2022-04-12 20:15:13.056156 size on input set 3
2022-04-12 20:15:15.010315 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "A, B = map(int, input().split())\n\nif A >= 13:\n    print(B)\nelif A >= 6:\n    print(B // 2)\nelse:\n\n\n\n\n\n    print(0)\n"
    },
    {
      "index": 1,
      "text": "A, B = map(int, input().split())\n\nif A >= 13:\n    print(B)\nelif A >= 6:\n    print(B // 2)\nelse:\n\n\n\n\n\n    print(0)\n"
    },
    {
      "index": 2,
      "text": "A, B = map(int, input().split())\n\nif A >= 13:\n    print(B)\nelif A >= 6:\n    print(B // 2)\nelse:\n\n\n    print(0)\n"
    }
  ],
  "created": 1649794513,
  "object": "edit"
}
2022-04-12 20:15:15.010492 fix syntax errors 3 ['A, B = map(int, input().split())\n\nif A >= 13:\n    print(B)\nelif A >= 6:\n    print(B // 2)\nelse:\n\n\n\n\n\n    print(0)\n', 'A, B = map(int, input().split())\n\nif A >= 13:\n    print(B)\nelif A >= 6:\n    print(B // 2)\nelse:\n\n\n\n\n\n    print(0)\n', 'A, B = map(int, input().split())\n\nif A >= 13:\n    print(B)\nelif A >= 6:\n    print(B // 2)\nelse:\n\n\n    print(0)\n']
2022-04-12 20:15:19.276272 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# \u30c6\u30b9\u30c8\nA, B = map(int, input().split())\n\nif A >= 13:\n    print(B)\nelif A >= 6:\n    print(B // 2)\nelse:\n    print(0)\n"
    },
    {
      "index": 1,
      "text": "\n# \u30c6\u30b9\u30c8\nA, B = map(int, input().split()) # \u5165\u529b\u3092\u6574\u6570\u306b\n\nif A >= 13: # 13\u6b73\u4ee5\u4e0a\u306a\u3089\n    print(B) # \u5272\u5f15\u306a\u3057\nelif A >= 6: # 6\u6b73\u4ee5\u4e0a\u306a\u3089\n    print(B // 2) # \u534a\u984d\nelse:\n    print(0) # \u305d\u308c\u4ee5\u5916\u306a\u3089\uff10\n"
    },
    {
      "index": 2,
      "text": "\nA, B = map(int, input().split())\n\nif A >= 13:\n    print(B)\nelif A >= 6:\n    print(B // 2)\nelse:\n    print(0)\n"
    }
  ],
  "created": 1649794515,
  "object": "edit"
}
2022-04-12 20:15:19.276460 fix syntax errors 3 ['# テスト\nA, B = map(int, input().split())\n\nif A >= 13:\n    print(B)\nelif A >= 6:\n    print(B // 2)\nelse:\n    print(0)\n', '\n# テスト\nA, B = map(int, input().split()) # 入力を整数に\n\nif A >= 13: # 13歳以上なら\n    print(B) # 割引なし\nelif A >= 6: # 6歳以上なら\n    print(B // 2) # 半額\nelse:\n    print(0) # それ以外なら０\n', '\nA, B = map(int, input().split())\n\nif A >= 13:\n    print(B)\nelif A >= 6:\n    print(B // 2)\nelse:\n    print(0)\n']
2022-04-12 20:15:46.851352 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# -*- coding: utf-8 -*-\nimport sys\nimport os\nimport re\nimport math\nimport datetime\nimport collections\nimport itertools\nimport bisect\nimport heapq\nimport queue\nimport random\nimport string\nimport copy\nimport numpy as np\nimport scipy as sp\nimport matplotlib.pyplot as plt\nimport matplotlib.cm as cm\nimport seaborn as sns\nimport networkx as nx\nimport pandas as pd\nimport json\nimport pickle\nimport time\nimport copy\nimport functools\nimport operator\nimport csv\nimport io\nimport struct\nimport shutil\nimport zipfile\nimport zlib\nimport hashlib\nimport inspect\nimport contextlib\nimport threading\nimport multiprocessing\nimport traceback\nimport sys\nimport warnings\nimport typing\nimport weakref\nimport dataclasses\nimport typing\nimport contextlib\nimport numbers\nimport functools\nimport operator\nimport itertools\nimport collections\nimport heapq\nimport queue\nimport bisect\nimport random\nimport math\nimport cmath\nimport decimal\nimport fractions\nimport typing\nimport typing_extensions\nimport typing_inspect\nimport contextlib\nimport dataclasses\nimport inspect\nimport io\nimport contextlib\nimport pathlib\nimport functools\nimport operator\nimport itertools\nimport collections\nimport heapq\nimport queue\nimport bisect\nimport random\nimport math\nimport cmath\nimport decimal\nimport fractions\nimport typing\nimport typing_extensions\nimport typing_inspect\nimport contextlib\nimport dataclasses\nimport inspect\nimport io\nimport contextlib\nimport pathlib\nimport functools\nimport operator\nimport itertools\nimport collections\nimport heapq\nimport queue\nimport bisect\nimport random\nimport math\nimport cmath\nimport decimal\nimport fractions\nimport typing\nimport typing_extensions\nimport typing_inspect\nimport contextlib\nimport dataclasses\nimport inspect\nimport io\nimport contextlib\nimport pathlib\nimport functools\nimport operator\nimport itertools\nimport collections\nimport heapq\nimport queue\nimport bisect\nimport random\nimport math\nimport cmath\nimport decimal\nimport fractions\nimport typing\nimport typing_extensions\nimport typing_inspect\nimport contextlib\nimport dataclasses\nimport inspect\nimport io\nimport contextlib\nimport pathlib\nimport functools\nimport operator\nimport itertools\nimport collections\nimport heapq\nimport queue\nimport bisect\nimport random\nimport math\nimport cmath\nimport decimal\nimport fractions\nimport typing\nimport typing_extensions\nimport typing_inspect\nimport contextlib\nimport dataclasses\nimport inspect\nimport io\nimport contextlib\nimport pathlib\nimport functools\nimport operator\nimport itertools\nimport collections\nimport heapq\nimport queue\nimport bisect\nimport random\nimport math\nimport cmath\nimport decimal\nimport fractions\nimport typing\nimport typing_extensions\nimport typing_inspect\nimport contextlib\nimport dataclasses\nimport inspect\nimport io\nimport contextlib\nimport pathlib\nimport functools\nimport operator\nimport itertools\nimport collections\nimport heapq\nimport queue\nimport bisect\nimport random\nimport math\nimport cmath\nimport decimal\nimport fractions\nimport typing\nimport typing_extensions\nimport typing_inspect\nimport contextlib\nimport dataclasses\nimport inspect\nimport io\nimport contextlib\nimport pathlib\nimport functools\nimport operator\nimport itertools\nimport collections\nimport heapq\nimport queue\nimport bisect\nimport random\nimport math\nimport cmath\nimport decimal\nimport fractions\nimport typing\nimport typing_extensions\nimport typing_inspect\nimport contextlib\nimport dataclasses\nimport inspect\nimport io\nimport contextlib\nimport pathlib\nimport functools\nimport operator\nimport itertools\nimport collections\nimport heapq\nimport queue\nimport bisect\nimport random\nimport math\nimport cmath\nimport decimal\nimport fractions\nimport typing\nimport typing_extensions\nimport typing_inspect\nimport contextlib\nimport dataclasses\nimport inspect\nimport io\nimport contextlib\nimport pathlib\nimport functools\nimport operator\nimport itertools\nimport collections\nimport heapq\nimport queue\nimport bisect\nimport random\nimport math\nimport cmath\nimport decimal\nimport fractions\nimport typing\nimport typing_extensions\nimport typing_inspect\nimport contextlib\nimport dataclasses\nimport inspect\nimport io\nimport contextlib\nimport pathlib\nimport functools\nimport operator\nimport itertools\nimport collections\nimport heapq\nimport queue\nimport bisect\nimport random\nimport math\nimport cmath\nimport decimal\nimport fractions\nimport typing\nimport typing_extensions\nimport typing_inspect\n"
    },
    {
      "index": 1,
      "text": "\nA, B = map(int, input().split()) # A: \u5e74\u9f62, B: \u6599\u91d1\n\nif A >= 13: # 13\u6b73\u4ee5\u4e0a\u306a\u3089\u3070\n    print(B) # \u6599\u91d1\u3092\u305d\u306e\u307e\u307e\u51fa\u529b\nelif A >= 6: # 6\u6b73\u4ee5\u4e0a13\u6b73\u672a\u6e80\u306a\u3089\u3070\n    print(B // 2) # \u6599\u91d1\u306e\u534a\u984d\u3092\u51fa\u529b\nelse: # \u305d\u308c\u4ee5\u5916\u306a\u3089\u3070\n\n\n## \u5b9f\u884c\u7d50\u679c\n# 10 1500\n# 750\n    print(0) # \u6599\u91d1\u30920\u5186\u3068\u3057\u3066\u51fa\u529b\n"
    },
    {
      "index": 2,
      "text": "\n\na, b = map(int, input().split()) # A: \u5e74\u9f62, B: \u6599\u91d1\n\nif a >= 13: # 13\u6b73\u4ee5\u4e0a\u306a\u3089\u3070\n    print(b) # \u6599\u91d1\u3092\u305d\u306e\u307e\u307e\u51fa\u529b\nelif a >= 6: # 6\u6b73\u4ee5\u4e0a13\u6b73\u672a\u6e80\u306a\u3089\u3070\n    print(b // 2) # \u6599\u91d1\u306e\u534a\u984d\u3092\u51fa\u529b\nelse: # \u305d\u308c\u4ee5\u5916\u306a\u3089\u3070\n    print(0) # \u6599\u91d1\u30920\u5186\u3068\u3057\u3066\u51fa\u529b\n"
    }
  ],
  "created": 1649794519,
  "object": "edit"
}
2022-04-12 20:15:46.851675 fix syntax errors 3 ['\n# -*- coding: utf-8 -*-\nimport sys\nimport os\nimport re\nimport math\nimport datetime\nimport collections\nimport itertools\nimport bisect\nimport heapq\nimport queue\nimport random\nimport string\nimport copy\nimport numpy as np\nimport scipy as sp\nimport matplotlib.pyplot as plt\nimport matplotlib.cm as cm\nimport seaborn as sns\nimport networkx as nx\nimport pandas as pd\nimport json\nimport pickle\nimport time\nimport copy\nimport functools\nimport operator\nimport csv\nimport io\nimport struct\nimport shutil\nimport zipfile\nimport zlib\nimport hashlib\nimport inspect\nimport contextlib\nimport threading\nimport multiprocessing\nimport traceback\nimport sys\nimport warnings\nimport typing\nimport weakref\nimport dataclasses\nimport typing\nimport contextlib\nimport numbers\nimport functools\nimport operator\nimport itertools\nimport collections\nimport heapq\nimport queue\nimport bisect\nimport random\nimport math\nimport cmath\nimport decimal\nimport fractions\nimport typing\nimport typing_extensions\nimport typing_inspect\nimport contextlib\nimport dataclasses\nimport inspect\nimport io\nimport contextlib\nimport pathlib\nimport functools\nimport operator\nimport itertools\nimport collections\nimport heapq\nimport queue\nimport bisect\nimport random\nimport math\nimport cmath\nimport decimal\nimport fractions\nimport typing\nimport typing_extensions\nimport typing_inspect\nimport contextlib\nimport dataclasses\nimport inspect\nimport io\nimport contextlib\nimport pathlib\nimport functools\nimport operator\nimport itertools\nimport collections\nimport heapq\nimport queue\nimport bisect\nimport random\nimport math\nimport cmath\nimport decimal\nimport fractions\nimport typing\nimport typing_extensions\nimport typing_inspect\nimport contextlib\nimport dataclasses\nimport inspect\nimport io\nimport contextlib\nimport pathlib\nimport functools\nimport operator\nimport itertools\nimport collections\nimport heapq\nimport queue\nimport bisect\nimport random\nimport math\nimport cmath\nimport decimal\nimport fractions\nimport typing\nimport typing_extensions\nimport typing_inspect\nimport contextlib\nimport dataclasses\nimport inspect\nimport io\nimport contextlib\nimport pathlib\nimport functools\nimport operator\nimport itertools\nimport collections\nimport heapq\nimport queue\nimport bisect\nimport random\nimport math\nimport cmath\nimport decimal\nimport fractions\nimport typing\nimport typing_extensions\nimport typing_inspect\nimport contextlib\nimport dataclasses\nimport inspect\nimport io\nimport contextlib\nimport pathlib\nimport functools\nimport operator\nimport itertools\nimport collections\nimport heapq\nimport queue\nimport bisect\nimport random\nimport math\nimport cmath\nimport decimal\nimport fractions\nimport typing\nimport typing_extensions\nimport typing_inspect\nimport contextlib\nimport dataclasses\nimport inspect\nimport io\nimport contextlib\nimport pathlib\nimport functools\nimport operator\nimport itertools\nimport collections\nimport heapq\nimport queue\nimport bisect\nimport random\nimport math\nimport cmath\nimport decimal\nimport fractions\nimport typing\nimport typing_extensions\nimport typing_inspect\nimport contextlib\nimport dataclasses\nimport inspect\nimport io\nimport contextlib\nimport pathlib\nimport functools\nimport operator\nimport itertools\nimport collections\nimport heapq\nimport queue\nimport bisect\nimport random\nimport math\nimport cmath\nimport decimal\nimport fractions\nimport typing\nimport typing_extensions\nimport typing_inspect\nimport contextlib\nimport dataclasses\nimport inspect\nimport io\nimport contextlib\nimport pathlib\nimport functools\nimport operator\nimport itertools\nimport collections\nimport heapq\nimport queue\nimport bisect\nimport random\nimport math\nimport cmath\nimport decimal\nimport fractions\nimport typing\nimport typing_extensions\nimport typing_inspect\nimport contextlib\nimport dataclasses\nimport inspect\nimport io\nimport contextlib\nimport pathlib\nimport functools\nimport operator\nimport itertools\nimport collections\nimport heapq\nimport queue\nimport bisect\nimport random\nimport math\nimport cmath\nimport decimal\nimport fractions\nimport typing\nimport typing_extensions\nimport typing_inspect\nimport contextlib\nimport dataclasses\nimport inspect\nimport io\nimport contextlib\nimport pathlib\nimport functools\nimport operator\nimport itertools\nimport collections\nimport heapq\nimport queue\nimport bisect\nimport random\nimport math\nimport cmath\nimport decimal\nimport fractions\nimport typing\nimport typing_extensions\nimport typing_inspect\n', '\nA, B = map(int, input().split()) # A: 年齢, B: 料金\n\nif A >= 13: # 13歳以上ならば\n    print(B) # 料金をそのまま出力\nelif A >= 6: # 6歳以上13歳未満ならば\n    print(B // 2) # 料金の半額を出力\nelse: # それ以外ならば\n\n\n## 実行結果\n# 10 1500\n# 750\n    print(0) # 料金を0円として出力\n', '\n\na, b = map(int, input().split()) # A: 年齢, B: 料金\n\nif a >= 13: # 13歳以上ならば\n    print(b) # 料金をそのまま出力\nelif a >= 6: # 6歳以上13歳未満ならば\n    print(b // 2) # 料金の半額を出力\nelse: # それ以外ならば\n    print(0) # 料金を0円として出力\n']
2022-04-12 20:15:46.851745 size on output set 8
2022-04-12 20:15:46.851761 num operations 2
2022-04-12 20:15:46.851767 size on input set 1
2022-04-12 20:15:48.241756 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\na, b = map(int, input().split())\nif a >= 13:\n    print(b)\nelif a >= 6 and a <= 12:\n    print(b // 2)\nelse:\n    print(0)\n"
    },
    {
      "index": 1,
      "text": "\na, b = map(int, input().split())\nif a >= 13:\n    print(b)\nelif a >= 6 and a <= 12:\n    print(b // 2)\nelse:\n    print(0)\n"
    },
    {
      "index": 2,
      "text": "\na, b = map(int, input().split())\nif a >= 13:\n    print(b)\nelif a >= 6 and a <= 12:\n    print(b // 2)\nelse:\n    print(0)\n"
    }
  ],
  "created": 1649794546,
  "object": "edit"
}
2022-04-12 20:15:48.241946 fix spelling mistakes 3 ['\na, b = map(int, input().split())\nif a >= 13:\n    print(b)\nelif a >= 6 and a <= 12:\n    print(b // 2)\nelse:\n    print(0)\n', '\na, b = map(int, input().split())\nif a >= 13:\n    print(b)\nelif a >= 6 and a <= 12:\n    print(b // 2)\nelse:\n    print(0)\n', '\na, b = map(int, input().split())\nif a >= 13:\n    print(b)\nelif a >= 6 and a <= 12:\n    print(b // 2)\nelse:\n    print(0)\n']
2022-04-12 20:15:48.241965 size on output set 1
2022-04-12 20:15:48.241972 size on input set 1
2022-04-12 20:15:50.967326 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "a, b = map(int, input().split())\nif a >= 6 and a <= 12:\n    print(b // 2)\nelse:\n    print(b)\n"
    },
    {
      "index": 1,
      "text": "\na = int(input())\nprint(a // 2)\n"
    },
    {
      "index": 2,
      "text": "a, b = map(int, input().split())\nif a >= 13:\n    print(b)\nelif a >= 6 and a <= 12:\n    print(b // 2)\nelse:\n    print(0)\n"
    }
  ],
  "created": 1649794548,
  "object": "edit"
}
2022-04-12 20:15:50.967481 fix syntax errors 3 ['a, b = map(int, input().split())\nif a >= 6 and a <= 12:\n    print(b // 2)\nelse:\n    print(b)\n', '\na = int(input())\nprint(a // 2)\n', 'a, b = map(int, input().split())\nif a >= 13:\n    print(b)\nelif a >= 6 and a <= 12:\n    print(b // 2)\nelse:\n    print(0)\n']
2022-04-12 20:15:50.967500 size on output set 3
