["\ndef main():\n    n = int(input())\n    print(int(bin(n)[2:][::-1], 2), end=\"\")\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef reverse_binary(n):\n    return int(bin(n)[2:][::-1], 2)\n\nif __name__ == \"__main__\":\n    n = int(sys.stdin.readline())\n    print(reverse_binary(n))\n", "import sys\n\ndef main():\n    num = int(sys.stdin.readline())\n    rev_num = 0;\n\n    while num > 0:\n        rev_num = rev_num << 1;\n        rev_num = rev_num | (num & 1);\n        num = num >> 1;\n\n    print(rev_num);\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    print(int(bin(n)[2:][::-1], 2))  # int(bin(n)[2:][::-1], 2)\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef reverse_binary(n):\n    return int(bin(n)[2:][::-1], 2)\n\nif __name__ == \"__main__\":\n    n = int(sys.stdin.readline())\n    print(reverse_binary(n))\n", "\n\ndef main():\n    n = int(input())\n    print(int(bin(n)[2:][::-1], 2))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    print(int(bin(n)[2:][::-1], 2), end='')\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef reverse_binary(n):\n    return int(bin(n)[2:][::-1], 2) \n\n\nif __name__ == \"__main__\":\n    print(reverse_binary(int(input())))\n", "\ndef reverse_bin(n):\n    return int(bin(n)[2:][::-1], 2)\n\n\nif __name__ == '__main__':\n    print(reverse_bin(int(input())))\n", "\n\n\ndef reverse_bin(n):\n    return int(bin(n)[2:][::-1], 2)\n\n\nif __name__ == '__main__':\n    print(reverse_bin(int(input())))\n", "\n\ndef reverse_bin(n: int) -> int:\n    return int(bin(n)[2:][::-1], 2) # bin(n) -> returns 0b0 + binary number\n\nprint(reverse_bin(int(input())))\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(int(bin(n)[:1:-1], 2)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef reverse_binary(n):\n\n    return int(bin(n)[2:][::-1], 2)\n\n\nif __name__ == \"__main__\":\n    print(reverse_binary(int(input())))\n", "\n\n\ndef reverse_bin(input_string):\n    return int(bin(int(input_string, 2))[2:][::-1], 2)\n\nprint(reverse_bin(input(\"Enter number: \")))\n", "\n\nimport sys\n\ndef reverse_binary(n):\n    return int(bin(n)[2:][::-1], 2)\n\nif __name__ == \"__main__\":\n    n = int(sys.stdin.readline()) # Reads the first line from standard input\n    print(reverse_binary(n))\n", "# bitwise reverse\n\ndef main():\n    n = int(input())\n    print(int(bin(n)[2:][::-1], 2))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef reverse_binary(num):\n    return int(str(bin(num))[:1:-1], 2) \n\nprint(reverse_binary(int(input())))\n", "# bitwise reverse\n\n\ndef main():\n    n = int(input())\n    print(int(bin(n)[2:][::-1], 2))\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef reverse_binary(num):\n    return int(str(bin(num))[:1:-1], 2)\n\nprint(reverse_binary(int(input())\n", "\n\ndef reverse_binary(n):\n    return int(bin(n)[2:][::-1], 2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    return\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint(reverse_binary(int(input())))\n", "\ndef main():\n    n = int(input())\n    print(int(bin(n)[2:][::-1], 2))\n\nif __name__ == \"__main__\":\n    main()\n", "print(int(bin(int(input()))[2:][::-1], 2))\n", "\ndef reverse_bin(n):\n    return int(bin(int(n, 2))[2:][::-1], 2)\n\n\nif __name__ == '__main__':\n    print(reverse_bin(input()))\n", "print('Hello World')\n", "\ndef is_palindrome(word):\n    for i in range(len(word)//2):\n        if word[i] != word[len(word)-i-1]:\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    print(is_palindrome(input()))\n", "\n\ndef reverse_binary(n): # \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u043d\u0438\u044f \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0430\n    return int(bin(n)[2:][::-1], 2) # \u043f\u0435\u0440\u0435\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u0435\u043c \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0439 \u043a\u043e\u0434, \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u043c \u043a \u0447\u0438\u0441\u043b\u0443 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\n\nif __name__ == \"__main__\":\n    print(reverse_binary(int(input()))) # \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\n", "\ndef main():\n    n = int(input())\n    print(int(bin(n)[2:][::-1], 2))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    num = int(sys.stdin.readline())\n    rev_num = 0\n\n    while num > 0:\n        rev_num = rev_num << 1 | (num & 1)\n        num = num >> 1\n\n    print(rev_num)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    num = int(sys.stdin.readline())\n    rev_num = 0\n\n    while num > 0:\n        rev_num = rev_num * 2\n        rev_num = rev_num + (num % 2)\n        num = num // 2\n\n    print(rev_num)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef reverse_binary(n):\n    return int(bin(n)[2:][::-1], 2)\n\n\nif __name__ == \"__main__\":\n    print(reverse_binary(int(input()))) \n", "\nimport sys\n\ndef reverse_binary(n):\n    return int(bin(n)[2:][::-1], 2)\n\nif __name__ == \"__main__\":\n    n = int(sys.stdin.readline())\n    print(reverse_binary(n))\n", "\n\ndef reverse_binary(n):  # \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u043d\u0438\u044f \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0430\n    return int(bin(n)[2:][::-1], 2)  # \u043f\u0435\u0440\u0435\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u0435\u043c \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0439 \u043a\u043e\u0434, \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u043c \u043a \u0447\u0438\u0441\u043b\u0443 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\n\nif __name__ == \"__main__\":\n    print(reverse_binary(int(input())))  # \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\n", "\ndef reverse_binary(n)\n    return int(bin(n)[2:][::-1], 2\n\nif __name__ == \"__main__\":\n    print(reverse_binary(int(input())))\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    num = int(sys.stdin.readline().strip())\n    rev_num = 0\n\n    while num > 0:\n        rev_num = rev_num << 1\n        rev_num = rev_num | (num & 1)\n        num = num >> 1\n\n    print(rev_num)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(int(bin(n)[:1:-1], 2))\n\nif __name__ == \"__main__\":\n    main()\n", "print(int(bin(int(input()))[2:][::-1], 2)) \n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    num = int(sys.stdin.readline().strip())\n    rev_num = 0x0\n\n    while num > 0:\n        rev_num = rev_num << 1\n        rev_num = rev_num | (num & 1)\n        num = num >> 1\n\n    print(rev_num)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef reverse_binary(num):\n    return int(str(bin(num))[:1:-1], 2)\n\nprint(reverse_binary(int(input())))\n", "\ndef reverse_binary(num):\n    return int(str(bin(num))[2:][::-1], 2)\n\nprint(reverse_binary(int(input())))\n", "\ndef reverse_binary(n):\n    return int(bin(n)[2:][::-1], 2)  # I'm not sure if this is what they want.\n\nif __name__ == \"__main__\":\n    print(reverse_binary(int(input())))\n", "\ndef get_bit(x, i):\n    return (x >> i) & 1\n\n\nprint(get_bit(int(input()), 0))\n", "\n\ndef reverse_bin(n: int) -> int:\n    return int(bin(int(n, 2))[2:][::-1], 2)\n\nprint(reverse_bin(input()))\n", "\n# import sys\n\n# def main():\n#     n = int(sys.stdin.readline())\n#     print(int(bin(n)[:1:-1], 2))\n\n# if __name__ == \"__main__\":\n#     main()\n\nprint(int(bin(int(input()))[:1:-1], 2))\n", "import sys\n\ndef main():\n    num = int(sys.stdin.readline().strip())\n    rev = 0\n\n    while num > 0:\n        rev = rev << 1\n        rev = rev | (num & 1)\n        num = num >> 1\n\n    print(rev)\n\nif __name__ == '__main__':\n    main()\n", "\ndef reverse_binary(num):\n    return int(str(bin(num))[:1:-1], 2)\n\nprint(reverse_binary(int(input('Enter an integer: '))))\n", "import sys\n\ndef main():\n    num = int(sys.stdin.readline().strip())\n    rev_num = 0\n\n    while num > 0:\n        rev_num = rev_num << 1\n        rev_num = rev_num | (num & 1)\n        num = num >> 1\n\n    print(rev_num)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef reverse_binary(num):\n    return int(str(bin(num))[2:][::-1], 2)\nprint(reverse_binary(int(input())))\n", "#bitwise reverse \n\ndef main():\n    n = int(input())\n    print(int(bin(n)[2:][::-1], 2))\n\nif __name__ == \"__main__\":\n    main()\n"]