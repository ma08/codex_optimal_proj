["n = int(input())\nans = []\nfor i in range(n):\n    ans.append(input())\nscore = 0\nfor i in range(n):\n    if i == n-1:\n        score += 1\n    elif ans[i] == ans[n-1-i]:\n        score += 1\nprint(score)\n", "import sys\n\ndef main():\n    n = int(input())\n    a = [input() for i in range(n)]\n    score = 0\n    for i in range(n):\n        if a[i] == 'A':\n            score += 1\n    print(score)\n\nif __name__ == \"__main__\":\n    main()\n", "n = int(input())\nans = []\nfor i in range(n):\n    ans.append(input())\nscore = 0\nfor i in range(n):\n    if i == n-1:\n        score += 1\n    elif ans[i] == ans[i+1]:\n        score += 1\nprint(score)\n", "n = int(input())\nans = []\nfor i in range(n):\n    ans.append(input())\nscore = 0\nfor i in range(n):\n    if ans[i] == ans[n-1]:\n        score += 1\nprint(score)\n", "\n\ndef main():\n    n = int(input())\n    correct = []\n    for i in range(n):\n        correct.append(input())\n    correct = []\n    print(n)\n\nif __name__ == '__main__':\n    main()\n", "\nn = int(input())\nanswers = []\nfor i in range(n):\n    answers.append(input())\n\nscore = 0\nfor i in range(n):\n    if i+1 < n and answers[i] == answers[i+1]:\n        score += 1\n\nprint(score)\n", "n = int(input())\na = [input() for i in range(n)]\nscore = 0\nfor i in range(n):\n    if a[i] == 'A' or a[i] == 'A+':\n        score += 1\n    elif a[i] == 'A-':\n        score += 0.9\n    elif a[i] == 'B+':\n        score += 0.8\n    elif a[i] == 'B':\n        score += 0.7\n    elif a[i] == 'B-':\n        score += 0.6\n    elif a[i] == 'C+':\n        score += 0.5\n    elif a[i] == 'C':\n        score += 0.4\n    elif a[i] == 'D':\n        score += 0.3\n    elif a[i] == 'F':\n        score += 0.0\n    else:\n        score += 0.0\nprint(score)\n", "import sys\nimport os\nimport re\n\ndef main():\n    file_name = sys.argv[1]\n    with open(file_name) as f:\n        n = int(f.readline())\n        correct_answers = 0\n        for i in range(n):\n            answer = f.readline()\n            if answer == \"A\\n\":\n                correct_answers += 1\n        print(correct_answers)\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n\tn = int(sys.stdin.readline())\n\tcorrect = 0\n\tfor i in range(n):\n\t\tanswer = sys.stdin.readline()\n\t\tif answer == \"A\\n\":\n\t\t\tcorrect += 1\n\tprint(correct)\n\nif __name__ == \"__main__\":\n\tmain()\n", "\nn = int(input())\ns = 0\nfor i in range(1, n+1):\n    answer = input().strip()\n    if answer == 'A' or answer == 'a':\n        s += 1\nprint(s)\n", "\nimport sys\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        x = input()\n        print(x)\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    correct = 0\n    for i in range(n):\n        answer = sys.stdin.readline()\n        if answer == \"A\\n\" or answer == \"a\\n\":\n            correct += 1\n    print(correct)\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\nx = input()\nprint(n + 1)\n", "\n\ndef main():\n    n = int(input())\n    correct = [0] * n\n    wrong = [0] * n\n    for i in range(n):\n        correct[i] = input()\n\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n", "\n# \nn = int(input())\nanswers = []\nfor i in range(n):\n    answers.append(input())\n\nscore = 0\nfor i in range(n):\n    if i+1 < n:\n        if answers[i] == answers[i+1]:\n            score += 1\n\nprint(score)\n", "\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    incorrect = 0\n    for i in range(n):\n        answer = sys.stdin.readline().strip()\n        if answer != \"A\":\n            incorrect += 1\n    print(incorrect)\n\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    incorrect = 0\n    for _ in range(n):\n        answer = sys.stdin.readline().strip()\n        if answer != 'A':\n            incorrect += 1\n    print(incorrect)\n\nif __name__ == '__main__':\n    main()\n", "\nn = int(input())\ns = 0\nfor i in range(1, n + 1):\n    ans = input()\n    if ans == 'A':\n        s += 1\nprint(s)\n", "#!/usr/bin/env python3\nn = int(input())\na = [input() for i in range(n)]\nscore = sum(1 for i in a if i == 'A')\nprint(score)\n", "\n\nn = int(input())\ns = 0 \nfor i in range(1, n+1):\n    answer = input().strip()\n    if answer == 'A' or answer == 'a':\n        s += 1\nprint(s)\n", "n = int(input())\ns = 0\nfor i in range(1, n+1):\n    ans = input()\n    if ans == 'A':\n        s += 1\nprint(s)\n", "\n\nn = int(input())\nans = input().split()\nans = [ans[i] for i in range(len(ans)) if i != n-1]\n\nprint(len(ans) - 1)\n", "n = int(input())\nans = input().split()\n\n# \u4e00\u756a\u5f8c\u308d\u306e\u8981\u7d20\u3092\u524a\u9664\nans = [ans[i] for i in range(len(ans)) if i != n-1]\n\nprint(len(ans))\n", "\n\ndef main():\n    # n = int(input())\n    # incorrect = []\n    # for i in range(n):\n    #     incorrect.append(input())\n    # print(n - 1)\n    print(input())\n\nif __name__ == '__main__':\n    main()\n", "\nn = int(input())\na = [input() for i in range(n)]\nscore = 0\nfor i in range(n):\n    if a[i] == 'A':\n        score += 1\nprint(score)\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun Aug  4 15:07:24 2019\n\n\n@author: huangzhuo\n\"\"\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\nn = int(input())\nanswers = []\nfor i in range(n):\n    answers.append(input())\n\nscore = 0\nfor i in range(n):\n    if i+1 < n:\n        if answers[i] == answers[i+1]:\n            score += 1\n\nprint(score)\n", "\n\nn = int(input())\ns = 0\nfor i in range(1, n+1):\n    answer = input().strip()\n    if answer == 'A' or answer == 'a' or answer == 'E' or answer == 'e' or answer == 'I' or answer == 'i' or answer == 'O' or answer == 'o' or answer == 'U' or answer == 'u':\n        s += 1\nprint(s)\n", "\n\nn = int(input())\ns = 0\nfor i in range(1, n+1):\n    ans = input()\n    if ans == 'A' or ans == 'P' or ans == 'O' or ans == 'R':\n        s += 1\nprint(s)\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    correct_answers = 0 \n    for i in range(n):\n        answer = sys.stdin.readline().rstrip()\n        if answer == \"A\":\n            correct_answers += 1\n    print(correct_answers)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn = int(input())\ns = 0\nfor i in range(1, n+1):\n    answer = input()\n    if answer == 'A':\n        s += 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint(s)\n", "n = int(input())\nans = input().split()\n\nans = [ans[i] for i in range(len(ans)) if i != n - 1]\n\nprint(len(ans))\n", "\n\ndef main():\n    n = int(input())\n    correct = []\n    for i in range(n):\n        correct.append(input())\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n", "import numpy as np\n\nn = int(input())\nans = input().split()\n\nans = [float(ans[i]) for i in range(len(ans)) if i != n-1]\nans = np.array(ans)\n\nprint(len(ans))\n", "\n\ndef main():\n    n = int(input())\n    correct = []\n    for i in range(n):\n        correct.append(input())\n    print(n - 1)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    for i in range(n):\n        x = input()\n        print(x)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    x = input()\n    print(x)\n\nif __name__ == \"__main__\":\n    main()\n", "n = int(input())\na = [input() for i in range(n)]\nscore = 0\nfor i in range(n):\n    if a[i][0] == 'A':\n        score += 1\nprint(score)\n", "\n\nn = int(input())\nans = input().split()\n\nans = [ans[i] for i in range(len(ans)) if i != n-1 and ans[i] != ans[n-1]]\n\n\nprint(len(ans))\n", "n = int(input())\nanswers = [input()]\nfor i in range(n):\n    if answers[-1] == input():\n        answers.append(answers[-1])\n    else:\n        answers.append(input())\n\nscore = 0\nfor i in range(len(answers) - 1):\n    if answers[i] == answers[i + 1]:\n        score += 1\n\nprint(score)\n", "n = int(input())\na = [input() for i in range(n)]\nscore = 0\nfor i in range(n):\n    if a[i] == 'A'\n        score += 1\nprint(score)\n", "\n\nn = int(input())\ns = 0\nfor i in range(1, n+1):\n    answer = input()\n    if answer == 'A':\n        s += 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint(s)\n", "\n\nn = int(input())\nx = input()\nprint(n)\n", "import os\nimport sys\nimport subprocess\n\ndef main():\n    #n = int(sys.stdin.readline())\n    #correct_answers = 0\n    #for i in range(n):\n    #    answer = sys.stdin.readline()\n    #    if answer == \"A\\n\":\n    #        correct_answers += 1\n    #print(correct_answers)\n    #os.system(\"ls\")\n    #subprocess.call([\"ls\", \"-l\"])\n    #subprocess.call([\"ls\", \"-l\", \"/etc/passwd\"])\n    #subprocess.call([\"echo\", \"hello world\"])\n    #subprocess.call([\"echo\", \"hello\", \"world\"])\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n    #subprocess.call([\"echo\", \"hello\", \"world\"], shell=True)\n\nif __name__ == \"__main__\":\n    main()\n", "n = int(input())\na = [input() for _ in range(n)]\nscore = 0\nfor i in range(n):\n    if a[i] == \"A\":\n        score += 1\nprint(score)\n", "n = int(input())\nanswers = []\nfor i in range(n):\n    answers.append(input())\n\nscore = 0\nfor i in range(n):\n    if i+1 < n:\n        if answers[i] == answers[i+1]:\n            score += 1\n\nprint(score)\n", "#!/usr/bin/env python\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    incorrect = 0\n    for i in range(n):\n        answer = sys.stdin.readline().strip()\n        if answer != \"A\":\n            incorrect += 1\n    print(incorrect)\n\nif __name__ == \"__main__\":\n    main()\n", "n = int(input())\na = [input() for i in range(n)]\nscore = 0\nfor i in range(n):\n    if a[i] == 'A':\n        score += 1\nprint(score)\n", "\nn = int(input())\nans = []\nfor i in range(n):\n    ans.append(input())\nscore = 0\nfor i in range(n):\n    if i == n-1:\n        score += 1\n    elif ans[i] == ans[i+1]:\n        score += 1\nprint(score)\n", "n = int(input())\na = [input() for _ in range(n)]\nscore = 0\nfor _ in range(n):\n    if a[_] == 'A':\n        score += 1\nprint(score)\n", "\n\ndef main():\n    n = int(input())\n    incorrect = []\n    for i in range(n):\n        incorrect.append(input())\n    print(n - 1) \n\nif __name__ == '__main__':\n    main()\n", "\n\nn = int(input())\nans = input().split()\nans = [ans[i] for i in range(len(ans)) if i != n-1]\n\n\nprint(len(ans))\n", "\n\nn = int(input(\"Enter a number\"))\nprint(\"The number is \",n)\n", "\n\nn = int(input())\nans = input().split()\nans = [ans[i] for i in range(len(ans)) if i != n-1 and ans[i] != \"\"]\n\nprint(len(ans))\n", "n = int(input())\nans = []\nfor i in range(n):\n    ans.append(input().upper())\nscore = 0\nfor i in range(n):\n    if i == n - 1:\n        score += 1\n    elif ans[i] == ans[i + 1]:\n        score += 1\nprint(score)\n", "#!/usr/bin/env python3\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    correct = 0\n    for i in range(n):\n        answer = sys.stdin.readline().strip()\n        if answer == \"A\":\n            correct += 1\n    print(correct)\n\nif __name__ == \"__main__\":\n    main()\n"]