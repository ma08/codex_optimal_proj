2022-04-12 22:35:46.903771 num operations 2
2022-04-12 22:35:46.903781 size on input set 1
2022-04-12 22:35:51.852920 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    acs = defaultdict(int)\n    penaltys = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penaltys[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penaltys[i] for i in penaltys if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S): # N : \u554f\u984c\u6570, M : \u56de\u7b54\u6570, p : \u554f\u984c\u756a\u53f7, S : \u56de\u7b54\u7d50\u679c\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    ac_count = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if ac_count[p[i]] == 0:\n                ac_count[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_num = sum(ac_count.values())\n    penalty_num = sum([penalties[i] for i in penalties if ac_count[i] == 1])\n    print(ac_num, penalty_num)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n"
    }
  ],
  "created": 1649802947,
  "object": "edit"
}
2022-04-12 22:35:51.853132 fix spelling mistakes 3 ["\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    acs = defaultdict(int)\n    penaltys = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penaltys[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penaltys[i] for i in penaltys if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n", "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S): # N : 問題数, M : 回答数, p : 問題番号, S : 回答結果\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n", "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    ac_count = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if ac_count[p[i]] == 0:\n                ac_count[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_num = sum(ac_count.values())\n    penalty_num = sum([penalties[i] for i in penalties if ac_count[i] == 1])\n    print(ac_num, penalty_num)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n"]
2022-04-12 22:35:51.853202 size on output set 3
2022-04-12 22:35:51.853210 size on input set 3
2022-04-12 22:35:55.327927 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    acs = defaultdict(int)\n    penaltys = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penaltys[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penaltys[i] for i in penaltys if acs[i] == 1])\n    return ac_count, penalty_count\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    ac_count, penalty_count = main(N, M, p, S)\n    print(ac_count, penalty_count)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    acs = defaultdict(int)\n    penaltys = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penaltys[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penaltys[i] for i in penaltys if acs[i] == 1])\n    print(ac_count, penalty_count, sep=' ')\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n"
    }
  ],
  "created": 1649802951,
  "object": "edit"
}
2022-04-12 22:35:55.328104 fix syntax errors 3 ["\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    acs = defaultdict(int)\n    penaltys = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penaltys[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penaltys[i] for i in penaltys if acs[i] == 1])\n    return ac_count, penalty_count\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    ac_count, penalty_count = main(N, M, p, S)\n    print(ac_count, penalty_count)\n", "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n", "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    acs = defaultdict(int)\n    penaltys = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penaltys[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penaltys[i] for i in penaltys if acs[i] == 1])\n    print(ac_count, penalty_count, sep=' ')\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n"]
2022-04-12 22:36:00.936410 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S): # N : \u554f\u984c\u6570, M : \u56de\u7b54\u6570, p : \u554f\u984c\u756a\u53f7, S : \u56de\u7b54\u7d50\u679c\n    acs = defaultdict(lambda: 0)\n    penalties = defaultdict(lambda: 0)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in acs if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S): # N : \u554f\u984c\u6570, M : \u56de\u7b54\u6570, p : \u554f\u984c\u756a\u53f7, S : \u56de\u7b54\u7d50\u679c(AC or WA)\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n"
    },
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 2
    }
  ],
  "created": 1649802955,
  "object": "edit"
}
2022-04-12 22:36:00.936592 NO RESULT
2022-04-12 22:36:00.936599 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 2
}
2022-04-12 22:36:00.936715 fix syntax errors 2 ["\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S): # N : 問題数, M : 回答数, p : 問題番号, S : 回答結果\n    acs = defaultdict(lambda: 0)\n    penalties = defaultdict(lambda: 0)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in acs if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n", "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S): # N : 問題数, M : 回答数, p : 問題番号, S : 回答結果(AC or WA)\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n"]
2022-04-12 22:36:03.819394 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    ac_count = defaultdict(lambda: 0)\n    penalties = defaultdict(lambda: 0)\n    for i in range(M):\n        if S[i] == 'AC':\n            if ac_count[p[i]] == 0:\n                ac_count[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_num = sum(ac_count.values())\n    penalty_num = sum([penalties[i] for i in penalties if ac_count[i] == 1])\n    print(ac_num, penalty_num)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    ac_count = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if ac_count[p[i]] == 0:\n                ac_count[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    print(sum(ac_count.values()), sum([penalties[i] for i in penalties if ac_count[i] == 1]))\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n"
    },
    {
      "index": 2,
      "text": "from collections import defaultdict\n\ndef main(N, M, p, S):\n    ac_count = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if ac_count[p[i]] == 0:\n                ac_count[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_num = sum(ac_count.values())\n    penalty_num = sum([penalties[i] for i in penalties if ac_count[i] == 1])\n    print(ac_num, penalty_num)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n"
    }
  ],
  "created": 1649802960,
  "object": "edit"
}
2022-04-12 22:36:03.819579 fix syntax errors 3 ["\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    ac_count = defaultdict(lambda: 0)\n    penalties = defaultdict(lambda: 0)\n    for i in range(M):\n        if S[i] == 'AC':\n            if ac_count[p[i]] == 0:\n                ac_count[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_num = sum(ac_count.values())\n    penalty_num = sum([penalties[i] for i in penalties if ac_count[i] == 1])\n    print(ac_num, penalty_num)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n", "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    ac_count = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if ac_count[p[i]] == 0:\n                ac_count[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    print(sum(ac_count.values()), sum([penalties[i] for i in penalties if ac_count[i] == 1]))\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n", "from collections import defaultdict\n\ndef main(N, M, p, S):\n    ac_count = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if ac_count[p[i]] == 0:\n                ac_count[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_num = sum(ac_count.values())\n    penalty_num = sum([penalties[i] for i in penalties if ac_count[i] == 1])\n    print(ac_num, penalty_num)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n"]
2022-04-12 22:36:03.819616 size on output set 8
2022-04-12 22:36:03.819626 num operations 2
2022-04-12 22:36:03.819631 size on input set 1
2022-04-12 22:36:06.170671 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# -----Input Part----- #\nN, M = map(int, input().split())\n\n# -----Process Part----- #\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part----- #\nprint(sum(result), sum(penalty))\n"
    },
    {
      "index": 1,
      "text": "\n# -----Input Part-----\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n"
    },
    {
      "index": 2,
      "text": "\n\n# -----Input Part----- \nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n"
    }
  ],
  "created": 1649802963,
  "object": "edit"
}
2022-04-12 22:36:06.170918 fix spelling mistakes 3 ['\n\n# -----Input Part----- #\nN, M = map(int, input().split())\n\n# -----Process Part----- #\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == "AC" and result[p] == 0:\n        result[p] = 1\n    elif S == "WA" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part----- #\nprint(sum(result), sum(penalty))\n', '\n# -----Input Part-----\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == "AC" and result[p] == 0:\n        result[p] = 1\n    elif S == "WA" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n', '\n\n# -----Input Part----- \nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == "AC" and result[p] == 0:\n        result[p] = 1\n    elif S == "WA" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n']
2022-04-12 22:36:06.170950 size on output set 3
2022-04-12 22:36:06.170956 size on input set 3
2022-04-12 22:36:08.084551 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# -----Input Part----- \nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\n\nprint(sum(result), sum(penalty))\n"
    },
    {
      "index": 1,
      "text": "\n# -----Input Part----- \nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n"
    },
    {
      "index": 2,
      "text": "\n# -----Input Part----- \nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty)) \n"
    }
  ],
  "created": 1649802966,
  "object": "edit"
}
2022-04-12 22:36:08.084741 fix syntax errors 3 ['\n\n# -----Input Part----- \nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == "AC" and result[p] == 0:\n        result[p] = 1\n    elif S == "WA" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\n\nprint(sum(result), sum(penalty))\n', '\n# -----Input Part----- \nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == "AC" and result[p] == 0:\n        result[p] = 1\n    elif S == "WA" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n', '\n# -----Input Part----- \nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == "AC" and result[p] == 0:\n        result[p] = 1\n    elif S == "WA" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty)) \n']
2022-04-12 22:36:10.667946 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# -----Input Part----- #\nN, M = map(int, input().split())\n\n# -----Process Part----- #\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part----- #\nprint(sum(result), sum(penalty))\n"
    },
    {
      "index": 1,
      "text": "\n\n# -----Input Part----- #\nN, M = map(int, input().split())\n\n# -----Process Part----- #\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part----- #\n\n\n\n\n\nprint(sum(result), sum(penalty))\n"
    },
    {
      "index": 2,
      "text": "\n# -----Input Part----- #\nN, M = map(int, input().split())\n\n# -----Process Part----- #\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part----- #\nprint(sum(result), sum(penalty))\n"
    }
  ],
  "created": 1649802968,
  "object": "edit"
}
2022-04-12 22:36:10.668201 fix syntax errors 3 ['\n# -----Input Part----- #\nN, M = map(int, input().split())\n\n# -----Process Part----- #\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == "AC" and result[p] == 0:\n        result[p] = 1\n    elif S == "WA" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part----- #\nprint(sum(result), sum(penalty))\n', '\n\n# -----Input Part----- #\nN, M = map(int, input().split())\n\n# -----Process Part----- #\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == "AC" and result[p] == 0:\n        result[p] = 1\n    elif S == "WA" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part----- #\n\n\n\n\n\nprint(sum(result), sum(penalty))\n', '\n# -----Input Part----- #\nN, M = map(int, input().split())\n\n# -----Process Part----- #\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == "AC" and result[p] == 0:\n        result[p] = 1\n    elif S == "WA" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part----- #\nprint(sum(result), sum(penalty))\n']
2022-04-12 22:36:14.241879 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# -----Input Part-----\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n"
    },
    {
      "index": 1,
      "text": "\n# -----Input Part-----\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if result[p] == 0:\n        if S == \"AC\":\n            result[p] = 1\n        elif S == \"WA\":\n            penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty)) \n"
    },
    {
      "index": 2,
      "text": "\n# -----Input Part-----\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty)) \n"
    }
  ],
  "created": 1649802970,
  "object": "edit"
}
2022-04-12 22:36:14.242077 fix syntax errors 3 ['# -----Input Part-----\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == "AC" and result[p] == 0:\n        result[p] = 1\n    elif S == "WA" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n', '\n# -----Input Part-----\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if result[p] == 0:\n        if S == "AC":\n            result[p] = 1\n        elif S == "WA":\n            penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty)) \n', '\n# -----Input Part-----\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == "AC" and result[p] == 0:\n        result[p] = 1\n    elif S == "WA" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty)) \n']
2022-04-12 22:36:14.242185 size on output set 8
