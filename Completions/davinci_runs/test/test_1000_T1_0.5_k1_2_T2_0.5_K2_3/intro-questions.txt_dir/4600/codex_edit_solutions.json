["\n\n# -----Input Part----- #\nN, M = map(int, input().split())\n\n# -----Process Part----- #\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part----- #\n\n\n\n\n\nprint(sum(result), sum(penalty))\n", "\n# -----Input Part----- #\nN, M = map(int, input().split())\n\n# -----Process Part----- #\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part----- #\nprint(sum(result), sum(penalty))\n", "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    acs = defaultdict(int)\n    penaltys = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penaltys[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penaltys[i] for i in penaltys if acs[i] == 1])\n    print(ac_count, penalty_count, sep=' ')\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n", "# -----Input Part-----\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n", "\n# -----Input Part----- \nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty)) \n", "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    ac_count = defaultdict(lambda: 0)\n    penalties = defaultdict(lambda: 0)\n    for i in range(M):\n        if S[i] == 'AC':\n            if ac_count[p[i]] == 0:\n                ac_count[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_num = sum(ac_count.values())\n    penalty_num = sum([penalties[i] for i in penalties if ac_count[i] == 1])\n    print(ac_num, penalty_num)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n", "\n\n# -----Input Part----- \nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\n\nprint(sum(result), sum(penalty))\n", "\n# -----Input Part-----\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty)) \n", "\n# -----Input Part-----\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if result[p] == 0:\n        if S == \"AC\":\n            result[p] = 1\n        elif S == \"WA\":\n            penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty)) \n", "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n", "from collections import defaultdict\n\ndef main(N, M, p, S):\n    ac_count = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if ac_count[p[i]] == 0:\n                ac_count[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_num = sum(ac_count.values())\n    penalty_num = sum([penalties[i] for i in penalties if ac_count[i] == 1])\n    print(ac_num, penalty_num)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n", "\n# -----Input Part----- \nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n", "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    ac_count = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if ac_count[p[i]] == 0:\n                ac_count[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    print(sum(ac_count.values()), sum([penalties[i] for i in penalties if ac_count[i] == 1]))\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n", "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S): # N : \u554f\u984c\u6570, M : \u56de\u7b54\u6570, p : \u554f\u984c\u756a\u53f7, S : \u56de\u7b54\u7d50\u679c\n    acs = defaultdict(lambda: 0)\n    penalties = defaultdict(lambda: 0)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in acs if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n", "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S): # N : \u554f\u984c\u6570, M : \u56de\u7b54\u6570, p : \u554f\u984c\u756a\u53f7, S : \u56de\u7b54\u7d50\u679c(AC or WA)\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n", "\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    acs = defaultdict(int)\n    penaltys = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penaltys[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penaltys[i] for i in penaltys if acs[i] == 1])\n    return ac_count, penalty_count\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    ac_count, penalty_count = main(N, M, p, S)\n    print(ac_count, penalty_count)\n"]