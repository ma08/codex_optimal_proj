

#include <stdio.h>
#include <string.h>

#define MAX_N 100
#define MAX_M 100

int n, m;
int broken[MAX_M];
int dp[MAX_N+1];

int main() {
    scanf("%d %d", &n, &m);
    for (int i = 0; i < m; i++)
        scanf("%d", &broken[i]);

    dp[0] = 1;
    dp[1] = 1;

    for (int i = 2; i <= n; i++) {
        for (int j = 0; j < m; j++) {
            if (i == broken[j]) {
                dp[i] = 0;
                break;
            } else
                dp[i] = dp[i-1] + dp[i-2];
        }
    }
    printf("%d\n", dp[n]);
    return 0;
}





















































































































































































































































































































































































































































































































































































































































































































































































































































































































n, m = map(int, input().split())
broken = set(map(int, [input() for _ in range(m)]))

dp = [0] * (n+1)
dp[0] = 1
dp[1] = 1
 
for i in range(2, n+1):
    if i in broken:
        continue
    dp[i] = dp[i-1] + dp[i-2]

print(dp[n] % 1000000007)
