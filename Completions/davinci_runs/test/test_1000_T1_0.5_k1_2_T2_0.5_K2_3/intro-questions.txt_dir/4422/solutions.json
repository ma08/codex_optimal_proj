["N, K = map(int, input().split())\nS = input()\nprint(\"\".join(c.lower() if i == K else c for i, c in enumerate(S, 1)))", "n,k = list(map(int,input().split()))\nS = input()\nprint( S[:k-1]+S[k-1].lower()+ S[k:])", "N, K = map(int, input().split())\nS = list(input())\nS[K - 1] = S[K - 1].lower()\n\nprint(\"\".join(S))", "N,K = map(int,input().split())\nS = input()\n\n# (K-1)\u6587\u5b57\u76ee\u307e\u3067 + K\u6587\u5b57\u76ee + K+1\u6587\u5b57\u76ee\u304b\u3089\nprint(S[:K-1] + S[K-1].lower() + S[K:])", "n, k = map(int, input().split())\ns = input()\nfor i in range(len(s)):\n    if(i == k - 1):\n        print(str.lower(s[i]), end='')\n    else:\n        print(s[i], end='')\nprint()", "n, k = map(int, input().split())\ns = input()\ns = s[k-1:] + s[:k-1]\nans = s.capitalize().swapcase()\nprint(ans[n-k+1:] + ans[:n-k+1])", "N, K = map(int, input().split())\nS = input()\n\nans = ''\nfor i in range(N):\n    if i != K - 1:\n        ans += S[i]\n    else:\n        ans += S[i].lower()\n\nprint(ans)", "N, K = map(int, input().split())\nS = list(input())\nS[K-1] = S[K-1].lower()\nprint(\"\".join(S))", "N, K = list(map(int,input().split()))\nS = input()\n\ncapital = ['A','B','C']\nsmall = ['a','b','c']\n\ni = capital.index(S[K-1])\nans = S[:K-1]+small[i]+S[K:]\nprint(ans)\n", "n,k = list(map(int,input().split()))\ns = list(input())\ns[k-1] = s[k-1].lower()\nprint((''.join(s)))\n", "n, k = list(map(int, input().split()))\ns = input()\n\nprint((s[:k - 1] + chr(ord(s[k - 1]) + 32) + s[k:]))\n", "N, K = input().strip().split()\nS = input()\nN = int(N)\nK = int(K)\nS = list(S)\nif S[K-1] == 'A':\n    S[K-1] = 'a'\nelif S[K-1] == 'B':\n    S[K-1] = 'b'\nelse:\n    S[K-1] = 'c'\nprint(''.join(S))", "n,k = map(int,input().split())\ns = list(input())\nif s[k-1] == \"A\":\n    s[k-1] = \"a\"\nelif s[k-1] == \"B\":\n    s[k-1] = \"b\"\nelif s[k-1] == \"C\":\n    s[k-1] = \"c\"\nans = ''.join(s)\nprint(ans)", "N,K = map(int,input().split())\nmoji = str(input())\nans = moji[:K-1] + moji[K-1].lower() + moji[K:]\nprint(ans)", "def mapt(fn, *args):\n    return tuple(map(fn, *args))\n\n\ndef Input():\n    return mapt(int, input().split(\" \"))\n\n\ndef main():\n    n, k = Input()\n    s = input()\n    print(\"\".join(ch.lower() if index==k else ch for index, ch in enumerate(s, 1)))\n\n\nmain()", "n,k=map(int,input().split())\ns=list(input())\nif s[k-1]==\"A\":\n    s[k-1]=\"a\"\nelif s[k-1]==\"B\":\n    s[k-1]=\"b\"\nelse:\n    s[k-1]=\"c\"\na=\"\"\nfor i in range(n):\n    a+=s[i]\nprint(a)", "n, k = list(map(int, input().split()))\ns = input()\n\nprint((s[:k-1] + s[k-1].lower() + s[k:]))\n", "n,k=map(int,input().split())\ns=input()\nprint(s[:k-1]+s[k-1].lower()+s[k:])", "N, K = map(int, input().split())\nS = list(input())\n\nS[K-1] = S[K-1].lower()\nans = ''\nfor s in S:\n    ans += s\nprint(ans)", "n,k = [int(x) for x in input().split()]\ns = input()\n \nk -= 1\ns = list(s)\n\nif s[k] == \"A\":\n  s[k] = \"a\"\nelif s[k] == \"B\":\n  s[k] = \"b\"\nelif s[k] == \"C\":\n  s[k] = \"c\"\n \nprint(\"\".join(s))", "N, K = list(map(int, input().split()))\nS = list(input())\n\n           \nif(S[K-1] == \"A\"):\n  S[K-1] = \"a\"\nelif(S[K-1] == \"B\"):\n  S[K-1] = \"b\"\nelif(S[K-1] == \"C\"):\n  S[K-1] = \"c\"\n           \n\"\".join(S)\n\nS_1 = S[0]\nfor i in range(1,N):\n  S_1 = S_1 + S[i]\nprint(S_1)\n", "n, k = list(map(int, input().split()))\ns = input()\n\nans = s[:k-1] + s[k-1].swapcase() + s[k:]\n\nprint(ans)", "n, k = map(int, input().split())\ns = str(input())\nans = ''\nif s[k-1] == 'A':\n    ans = s[:k-1] + 'a' + s[k:]\n    print(ans)\n    return\nelif s[k-1] == 'B':\n    ans = s[:k-1] + 'b' + s[k:]\n    print(ans)\n    return\nelif s[k-1] == 'C':\n    ans = s[:k-1] + 'c' + s[k:]\n    print(ans)\n    return", "N, K = map(int, input().split())\nS = input()\n \nif S[K-1] == 'A': rep = 'a'\nelif S[K-1] == 'B': rep = 'b'\nelse: rep = 'c'\n\n# (K-1)\u6587\u5b57\u76ee\u307e\u3067 + K\u6587\u5b57\u76ee + K+1\u6587\u5b57\u76ee\u304b\u3089\nprint(S[:K-1] + rep + S[K:])", "N, K = map(int, input().split())\nS = input()\nprint(S[:K-1] + S[K-1].lower() + S[K:])", "n, k = map(int,input().split())\ns = input()\nprint(s[:k - 1], end = '')\nprint(str.swapcase(s[k - 1]), end = '')\nprint(s[k:])", "N, K = map(int, input().split())\nK -= 1\nS = list(input())\nfor i, c in enumerate(S):\n    if i == K:\n        c = c.lower()\n    print(c, end='')\nprint('')", "N, K = map(int, input().split())\nS = input()\nans = ''\nfor i in range(N):\n    if i == K-1:\n        if S[i] == 'A':\n            ans += 'a'\n        elif S[i] == 'B':\n            ans += 'b'\n        else:\n            ans += 'c'\n    else:\n        ans += S[i]\nprint(ans)", "n,k = map(int,input().split())\ns = list(input())\ns[k-1] = s[k-1].lower()\nfor i in s :\n  print(i,end='')\nprint()", "N,K=map(int,input().split())\nS=list(input())\nS[K-1]=S[K-1].lower()\n\nans=\"\"\nfor i in S:\n  ans+=i\nprint(ans)", "n,k=list(map(int,input().split()))\ns=list(input())\ns[k-1]=s[k-1].lower()\nprint((\"\".join(s)))\n", "n, k = map(int, input().split())\ns = str(input())\nif s[k-1] == 'A':\n    ans = s[:k-1] + 'a' + s[k:]\nelif s[k-1] == 'B':\n    ans = s[:k-1] + 'b' + s[k:]\nelse:\n    ans = s[:k-1] + 'c' + s[k:]\nprint(ans)", "N, K = map(int, input().split())\nS = list(input())\nif S[K-1] == 'A':\n  S[K-1] = 'a'\nif S[K-1] == 'B':\n  S[K-1] = 'b'\nif S[K-1] == 'C':\n  S[K-1] = 'c'\nfor i in S:\n  print(i,end=\"\")", "n, k = map(int, input().split())\nlist01 = list(input())\nlist01[k - 1] = str.lower(list01[k - 1])\na = ''.join(list01)\nprint(a)", "s,k=list(map(int,input().split()))\ns = input()\nprint((s[:k-1]+s[k-1].lower()+s[k:]))\n", "n,k=map(int, input().split())\ns=input()\nif s[k-1]=='A':\n  s=s[:k-1]+'a'+s[k:]\nif s[k-1]=='B':\n  s=s[:k-1]+'b'+s[k:]\nif s[k-1]=='C':\n  s=s[:k-1]+'c'+s[k:]\nprint(s)", "n,k=map(int,input().split())\ndef replace(m):\n  if m==\"A\":\n    return \"a\"\n  elif m==\"B\":\n    return \"b\"\n  else:\n    return \"c\"\n  \nabc_str=list(input())\nabc_str[k-1]=replace(abc_str[k-1])\nabc_str=\"\".join(abc_str)\nprint(abc_str)", "n,k = map(int, input().split())\ns = input()\n\nprint(s[:k-1]+s[k-1].swapcase()+s[k:])", "n, k = map(int, input().split())\ns = input()\nprint(s[:k-1]+s[k-1].lower()+s[k:])", "N, K = map(int, input().split())\nS = input()\nans = S[:K - 1] + S[K - 1].lower() + S[K:]\nprint(ans)", "n, k = list(map(int, input().split()))\ns = list(input())\n\ntmp = s.pop(k - 1)\nl = tmp.lower()\ns.insert(k - 1, l)\nprint((''.join(s)))\n", "N, K = map(int, input().split())\nS = str(input())\n\nans = ''\nans += S[:K-1]\nif S[K-1] == 'A':\n  ans += 'a'\nelif S[K-1] == 'B':\n  ans += 'b'\nelse:\n  ans += 'c'\nans += S[K:]\nprint(ans)", "N, K = map(int, input().split())\nS = list(input())\nS[K-1] = S[K-1].lower()\nprint(''.join(S))", "N, K = map(int, input().split())\nS = input()\n\nprint(S[:(K - 1)] + 'abc'[ord(S[K - 1]) - ord('A')] + S[K:])", "N,K = map(int,input().split())\nS = list(input())\n\nS[K-1] = S[K-1].lower()\nans = ''.join(S)\nprint(ans)", "n,k=list(map(int,input().split()))\ns=input()\nprint((s[:k-1]+s[k-1].lower()+s[k:]))\n", "N, K = list(map(int, input().split()))\nS = list(input())\n\nS[K-1] = S[K-1].lower()\n\nprint((''.join(S)))\n", "# ABC126\n# A Changing a Character\nn, k = list(map(int, input().split()))\nS = list(input())\nx = S.pop(k-1).lower()\nS.insert((k-1),x)\nprint((\"\".join(S)))\n", "n,k=map(int,input().split())\ns=list(input())\ns[k-1]=s[k-1].lower() \nprint(''.join(s)) ", "n, k = map(int, input().split())\ns = input()\nans = s[:k-1] + chr(ord(s[k-1])+32) + s[k:]\nprint(ans)", "N,K = map(int, input().split())\nS = str(input())\nA = ''\nfor i in range(N):\n    if i + 1 == K:\n        A += S[i].lower()\n    else:\n        A += S[i]\nprint(A)", "a,b=input().split()\na=int(a)\nb=int(b)\nc=input()\nh,i,j=c[:(b-1)],c[b-1],c[(b):]\nif i==\"A\":\n  i=\"a\"\nif i==\"B\":\n  i=\"b\"\nif i==\"C\":\n  i=\"c\"\nprint(h+i+j)", "n,k=map(int, input().split())\ns=list(input())\n\nss=s[k-1]\np=ss.lower()\n#print(p)\ns[k-1]=p\n#print(s[k-1])\n#print(s)\n\nans=\"\".join(s)\nprint(ans)", "N,K = map(int,input().split())\nS = list(input())\n\nS[K-1] = S[K-1].lower()\n\nprint(\"\".join(S))", "n, k = map(int, input().split())\ns = input()\nprint(s[:k-1] + s.lower()[k-1] + s[k:])", "n,k=map(int,input().split())\ns=list(input())\ns[k-1]=s[k-1].lower()\nprint(''.join(s))", "n,k = map(int, input().split())\ns = input()\nk -= 1\nprint(s[:k] + s[k].lower() + s[k+1:])", "n, k = list(map(int, input().split()))\ns = list(input())\ns[k - 1] = chr(ord(s[k - 1]) + ord('a') - ord('A'))\nprint((''.join(s)))\n", "N,K = map(int,input().split())\nS = str(input())\nT = list(map(str,S))\n\nfor i in range(N):\n    if i == K-1:\n        T[i] = str.lower(T[i])\n\nprint(\"\".join(T))", "n,k=map(int,input().split())\ns=list(input())\ns[k-1]=str.lower(s[k-1])\nprint(''.join(s))", "N,K=map(int, input().split())\nS=list(input())\n\nS[K-1]=S[K-1].lower()\n\nprint(\"\".join(S))", "n, k = list(map(int, input().split()))\ns = input()\nprint((s[:k-1] + s[k-1].lower() + s[k:]))\n", "n,k=list(map(int,input().split(' ')))\ns=input()\nm=''\nif s[k-1].isupper():\n    m=s[k-1].lower()\nelse:\n    m=s[k-1].upper()\n\nprint((s[:k-1]+m+s[k:]))\n", "N,K = map(int,input().split())\nS = input()\nlsS = list(S)\nlsS[K-1] = lsS[K-1].lower()\nans = ''.join(lsS)\nprint(ans)", "n, k = map(int, input().split())\ns = list(input())\ns[k-1] = s[k-1].lower()\nprint(''.join(s))", "N, K = map(int,input().split())\nS = input()\nans = []\nfor i in range(N):\n    if i == K - 1:\n        x = ord(S[i])\n        x += 32\n        y = chr(x)\n        ans.append(y)\n    else:\n        ans.append(S[i])\n\nprint(''.join(ans))", "n,k = map(int,input().split())\ns = list(input())\n\nfor i in range(1,n+1):\n  if i == k:\n    print(s[i-1].lower(),end=\"\")\n    continue\n  print(s[i-1],end=\"\")", "N,K=map(int,input().split())\nS=list(input())\nS[K-1]=S[K-1].lower()\nprint(\"\".join(S))", "n, k = list(map(int, input().split()))\ns = input()\nprint((s[:k-1]+s[k-1].lower()+s[k:]))\n", "n, k = map(int,input().split())\ns = input()\nresult_s = ''\na = 0\n\nfor s in list(s):\n    a += 1\n    if a==k:\n        s = s.lower()\n    result_s += s\n\nprint(result_s)", "n, k = map(int, input().split())\ns = input()\nss = ''\nfor i in range(n):\n    if i == k-1:\n        ss += s[i].lower()\n    else:\n        ss += s[i]\nprint(ss)", "Omoji = ['A','B','C']\nKmoji = ['a','b','c']\nn,k = map(int,input().split())\ns = str(input())\nans = ''\nfor i in range(n):\n    if i==(k-1):\n        for j in range(len(Omoji)):\n            if s[i]==Omoji[j]:\n                ans += Kmoji[j]\n    else:\n        ans += s[i]\nprint(ans)", "n,k = map(int,input().split())\ns = input()\nprint(s[:k-1]+s[k-1].lower()+s[k:])\nprint('\\n')", "num = input().split()\n\nN = int(num[0])\nK = int(num[1])\n\nS = input()\n\nS2 = S[K-1]\n\nS = S[:K-1] + S2.lower() + S[K:]\n\nprint(S)", "n, k = list(map(int, input().split()))\ns = input()\nprint((s[:k - 1] + s[k - 1].lower() + s[k:]))\n", "N,K = map(int,input().split())\nS = list(input())\nS[K-1] = S[K-1].lower()\nprint(''.join(S))", "n, k = map(int, input().split())\ns = input()\n\nABC = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nabc = 'abcdefghijklmnopqrstuvwxyz'\nprint(s[:k-1] + abc[ABC.index(s[k-1])] + s[k:])", "n,k = map(int,input().split())\ns = input()\n\nprint(s[:k-1]+s[k-1].lower()+s[k:])", "n,k = map(int,input().split())\ns = input()\nsl = []\nfor i in range(n):\n    if i+1 == k:\n        sl.append(s[i].lower())\n    else:\n        sl.append(s[i])\nprint(''.join(sl))", "N, K = map(int, input().split())\nS = input()\n\ns = list(S)\ns[K-1] = s[K-1].lower()\nprint(''.join(s))", "N, K = map(int, input().split())\nS = input()\n\nprint(S[:K-1] + S[K-1].lower() + S[K:])", "n,k = map(int,input().split())\ns = input()\nprint(s[:k-1]+s[k-1].swapcase()+s[k:])", "n,k=list(map(int,input().split()))\ns=input()\nprint((s[:k-1]+s[k-1].lower()+s[k:]))\n", "n, k = map(int, input().split())\ns = list(input())\n\ns[k-1] = s[k-1].swapcase()\nprint(\"\".join(s))", "N,K = map(int,input().split())\nS = str(input())\nL = []\n\nfor i in range(N):\n    L.append(S[i])\n    if i == K-1:\n        L[i] = S[i].lower()\n\nprint(''.join(map(str,L)))", "n ,k = map(int,input().split())\ns = list(input())\ns[k-1:k] = ''.join(s[k-1:k]).lower()\nprint(''.join(s))", "N,K=list(map(int,input().split()))\nS=input()\nprint((S[0:K-1]+S[K-1].lower()+S[K:N]))\n", "n, k = map(int, input().split())\ns = input()\nc = 'a' if s[k-1] == 'A' else 'b' if s[k-1] == 'B' else 'c'\nprint(s[:k-1] + c + s[k:])", "n, k = list(map(int, input().split()))\n\ns = input()\n\nL = []\nfor i in range(n):\n    L.append(s[i])\n\nL[k-1] = str.lower(L[k-1])\nans = str()\nfor i in range(n):\n    ans += L[i]\nprint(ans)\n    \n", "N,K=map(int,input().split())\nS=list(input())\nfor i in range(N):\n    if i==K-1:\n        S[i]=chr(ord(S[i])+32)\nprint(''.join(S))", "n,k = map(int,input().split())\ns = list(input())\n\nif s[k - 1] == 'A':\n    s[k - 1] = 'a'\nif s[k - 1] == 'B':\n    s[k - 1] = 'b'\nif s[k - 1] == 'C':\n    s[k - 1] = 'c'\nstrA = ''.join(s)\nprint(strA)", "n, k = map(int, input().split())\ns = input()\nprint(s[:k-1]+s[k-1].lower()+s[k:])", "N, K = list(map(int, input().split()))\nS = input()\nans = \"\"\nfor i in range(len(S)):\n    if i == K-1:\n        ans +=  S[i].lower()\n    else:\n        ans += S[i]\n\nprint(ans)\n", "_, K = [int(i) for i in input().split()]\nS = input()\nprint((S[:K - 1] + S[K - 1].lower() + S[K:]))\n", "N,K=list(map(int, input().split()))\nS=input().strip()\nc=S[K-1].lower()\nprint((S[:K-1]+c+S[K:]))\n\n", "n,k = list(map(int,input().split()))\n\ns = list(input())\nt = ''\nfor j,i in enumerate(s):\n    if j == k-1:t += i.lower()\n    else:t+=i\nprint(t)\n", "N, K = map(int, input().split())\nS = input()\n\ns = S[K-1].lower()\nprint(S[:K-1] + s + S[K:])", "def str_replace_to_lower() -> str:\n    len_str, target_index = map(int, input().split())\n    word = input()\n    list_of_word = list(word)\n    list_of_word[target_index - 1] = list_of_word[target_index - 1].lower()\n\n    return ''.join(list_of_word)\n\n\nprint(str_replace_to_lower())"]