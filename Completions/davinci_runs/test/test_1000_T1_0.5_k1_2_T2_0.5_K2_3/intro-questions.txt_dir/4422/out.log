2022-04-09 20:07:13.238643 """
You are given a string S of length N consisting of A, B and C, and an integer K which is between 1 and N (inclusive).
Print the string S after lowercasing the K-th character in it.

-----Constraints-----
 - 1 ≤ N ≤ 50
 - 1 ≤ K ≤ N
 - S is a string of length N consisting of A, B and C.

-----Input-----
Input is given from Standard Input in the following format:
N K
S

-----Output-----
Print the string S after lowercasing the K-th character in it.

-----Sample Input-----
3 1
ABC

-----Sample Output-----
aBC

"""
2022-04-09 20:07:13.238671 --------------------------
2022-04-09 20:07:22.112840 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\ns = input()\n\nprint(s[:k-1] + s[k-1].lower() + s[k:])"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef string_case(n, k, s):\n    return s[:k-1] + s[k-1].lower() + s[k:]\n\n\nif __name__ == '__main__':\n    n, k = map(int, input().split())\n    s = input()\n    print(string_case(n, k, s))"
    }
  ],
  "created": 1649549233,
  "id": "cmpl-4vFOjuVUhcgcuLUyXoWF1BQuf7BHl",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 20:07:22.113086 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\ns = input()\n\nprint(s[:k-1] + s[k-1].lower() + s[k:])"
}
2022-04-09 20:07:22.113135 REASON stop
2022-04-09 20:07:22.114601 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef string_case(n, k, s):\n    return s[:k-1] + s[k-1].lower() + s[k:]\n\n\nif __name__ == '__main__':\n    n, k = map(int, input().split())\n    s = input()\n    print(string_case(n, k, s))"
}
2022-04-09 20:07:22.114665 REASON stop
