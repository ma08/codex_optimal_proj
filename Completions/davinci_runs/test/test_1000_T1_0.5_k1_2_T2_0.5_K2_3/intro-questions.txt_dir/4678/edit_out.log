2022-04-12 23:30:27.081988 num operations 2
2022-04-12 23:30:27.081998 size on input set 1
2022-04-12 23:30:31.729998 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom bisect import bisect_left\n\nn = int(input())\na = list(map(int, input().split()))\n\nstools = [0]  # \u8981\u6c42\u7684\u6700\u77ed\u684c\u5b50\u957f\u5ea6\nfor i in range(n):\n    if a[i] > stools[-1]:\n        stools.append(a[i])\n    else:\n        stools[bisect_left(stools, a[i])] = a[i]  # \u5c06\u5c0f\u4e8ea[i]\u7684\u684c\u5b50\u957f\u5ea6\u66ff\u6362\u4e3aa[i]\nprint(len(stools)-1)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom bisect import bisect_left\n\nn = int(input())\na = list(map(int, input().split()))\n\nstools = [0] # stools: \uc774\ubbf8 \uc313\uc5ec\uc788\ub294 \uc790\ub9ac\uc758 \ub192\uc774\nfor i in range(n):\n    if a[i] > stools[-1]:\n        stools.append(a[i])\n    else:\n        stools[bisect_left(stools, a[i])] = a[i]\nprint(len(stools)-1)\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom bisect import bisect_left\n\nn = int(input())\na = list(map(int, input().split()))\n\nstools = []\nfor i in range(n):\n    if a[i] > stools[-1]:\n        stools.append(a[i])\n    else:\n        stools[bisect_left(stools, a[i])] = a[i]\nprint(len(stools)-1)\n"
    }
  ],
  "created": 1649806227,
  "object": "edit"
}
2022-04-12 23:30:31.730241 fix spelling mistakes 3 ['\n\nfrom bisect import bisect_left\n\nn = int(input())\na = list(map(int, input().split()))\n\nstools = [0]  # 要求的最短桌子长度\nfor i in range(n):\n    if a[i] > stools[-1]:\n        stools.append(a[i])\n    else:\n        stools[bisect_left(stools, a[i])] = a[i]  # 将小于a[i]的桌子长度替换为a[i]\nprint(len(stools)-1)\n', '\n\nfrom bisect import bisect_left\n\nn = int(input())\na = list(map(int, input().split()))\n\nstools = [0] # stools: 이미 쌓여있는 자리의 높이\nfor i in range(n):\n    if a[i] > stools[-1]:\n        stools.append(a[i])\n    else:\n        stools[bisect_left(stools, a[i])] = a[i]\nprint(len(stools)-1)\n', '\n\nfrom bisect import bisect_left\n\nn = int(input())\na = list(map(int, input().split()))\n\nstools = []\nfor i in range(n):\n    if a[i] > stools[-1]:\n        stools.append(a[i])\n    else:\n        stools[bisect_left(stools, a[i])] = a[i]\nprint(len(stools)-1)\n']
2022-04-12 23:30:31.730277 size on output set 3
2022-04-12 23:30:31.730285 size on input set 3
2022-04-12 23:30:37.747806 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\na=int(input())\nb=int(input())\nc=a+b\nprint(c)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom bisect import bisect_left, bisect_right\n\nn = int(input())\na = sorted(list(map(int, input().split())))\n\nprint(bisect_right(a, a[0]))\nprint(bisect_left(a, a[0]))\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\ns = input()\nt = input()\n\nans = 0\nfor i in range(n):\n    if s[i] == t[i]:\n        ans += 1\nprint(ans)\n"
    }
  ],
  "created": 1649806231,
  "object": "edit"
}
2022-04-12 23:30:37.747971 fix syntax errors 3 ['\na=int(input())\nb=int(input())\nc=a+b\nprint(c)\n', '\n\nfrom bisect import bisect_left, bisect_right\n\nn = int(input())\na = sorted(list(map(int, input().split())))\n\nprint(bisect_right(a, a[0]))\nprint(bisect_left(a, a[0]))\n', '\n\nn = int(input())\ns = input()\nt = input()\n\nans = 0\nfor i in range(n):\n    if s[i] == t[i]:\n        ans += 1\nprint(ans)\n']
2022-04-12 23:30:42.227491 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n \nfrom bisect import bisect_left\n\nn = int(input())\na = list(map(int, input().split()))\n\nstools = [0]  # \u8981\u6c42\u7684\u6700\u77ed\u684c\u5b50\u957f\u5ea6\nfor i in range(n):\n    if a[i] > stools[-1]:\n        stools.append(a[i])\n    else:\n        stools[bisect_left(stools, a[i])] = a[i]  # \u5c06\u5c0f\u4e8ea[i]\u7684\u684c\u5b50\u957f\u5ea6\u66ff\u6362\u4e3aa[i]\nprint(len(stools)-1)\n"
    },
    {
      "index": 1,
      "text": "# \u627e\u5230\u6700\u957f\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\n\nfrom bisect import bisect_left\n\nn = int(input())\na = list(map(int, input().split()))\n\nstools = [0]  # \u5b50\u5e8f\u5217\nfor i in range(n):\n    if a[i] > stools[-1]:\n        stools.append(a[i])\n    else:\n        stools[bisect_left(stools, a[i])] = a[i]  # \u5c06\u5c0f\u4e8ea[i]\u7684\u684c\u5b50\u957f\u5ea6\u66ff\u6362\u4e3aa[i]\nprint(len(stools)-1)\n"
    },
    {
      "index": 2,
      "text": "from bisect import bisect_left\n\nn = int(input())\na = list(map(int, input().split()))\n\nstools = [0]  # \u8981\u6c42\u7684\u6700\u77ed\u684c\u5b50\u957f\u5ea6\nfor i in range(n):\n    if a[i] > stools[-1]:\n        stools.append(a[i])\n    else:\n        stools[bisect_left(stools, a[i])] = a[i]  # \u5c06\u5c0f\u4e8ea[i]\u7684\u684c\u5b50\u957f\u5ea6\u66ff\u6362\u4e3aa[i]\nprint(len(stools)-1)\n"
    }
  ],
  "created": 1649806237,
  "object": "edit"
}
2022-04-12 23:30:42.227670 fix syntax errors 3 ['\n \nfrom bisect import bisect_left\n\nn = int(input())\na = list(map(int, input().split()))\n\nstools = [0]  # 要求的最短桌子长度\nfor i in range(n):\n    if a[i] > stools[-1]:\n        stools.append(a[i])\n    else:\n        stools[bisect_left(stools, a[i])] = a[i]  # 将小于a[i]的桌子长度替换为a[i]\nprint(len(stools)-1)\n', '# 找到最长的上升子序列\n\nfrom bisect import bisect_left\n\nn = int(input())\na = list(map(int, input().split()))\n\nstools = [0]  # 子序列\nfor i in range(n):\n    if a[i] > stools[-1]:\n        stools.append(a[i])\n    else:\n        stools[bisect_left(stools, a[i])] = a[i]  # 将小于a[i]的桌子长度替换为a[i]\nprint(len(stools)-1)\n', 'from bisect import bisect_left\n\nn = int(input())\na = list(map(int, input().split()))\n\nstools = [0]  # 要求的最短桌子长度\nfor i in range(n):\n    if a[i] > stools[-1]:\n        stools.append(a[i])\n    else:\n        stools[bisect_left(stools, a[i])] = a[i]  # 将小于a[i]的桌子长度替换为a[i]\nprint(len(stools)-1)\n']
2022-04-12 23:30:46.726416 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\na, b = map(int, input().split())\nprint(a+b)\n"
    },
    {
      "index": 1,
      "text": "\nfrom bisect import bisect_left\n\nn = int(input())\na = list(map(int, input().split()))\n\nstools = [0] # stools: \uc774\ubbf8 \uc313\uc5ec\uc788\ub294 \uc790\ub9ac\uc758 \ub192\uc774\nfor i in range(n):\n    if a[i] > stools[-1]:\n        stools.append(a[i])\n    else:\n        stools[bisect_left(stools, a[i])] = a[i]\nprint(len(stools)-1)\n"
    },
    {
      "index": 2,
      "text": "\nfrom bisect import bisect_left\n\nn = int(input())\na = list(map(int, input().split()))\n\nstools = [0] # stools: \uc774\ubbf8 \uc313\uc5ec\uc788\ub294 \uc790\ub9ac\uc758 \ub192\uc774\nfor i in range(n):\n    if a[i] > stools[-1]:\n        stools.append(a[i])\n    else:\n        stools[bisect_left(stools, a[i])] = a[i]\nprint(len(stools)-1)\n"
    }
  ],
  "created": 1649806242,
  "object": "edit"
}
2022-04-12 23:30:46.726589 fix syntax errors 3 ['\n\na, b = map(int, input().split())\nprint(a+b)\n', '\nfrom bisect import bisect_left\n\nn = int(input())\na = list(map(int, input().split()))\n\nstools = [0] # stools: 이미 쌓여있는 자리의 높이\nfor i in range(n):\n    if a[i] > stools[-1]:\n        stools.append(a[i])\n    else:\n        stools[bisect_left(stools, a[i])] = a[i]\nprint(len(stools)-1)\n', '\nfrom bisect import bisect_left\n\nn = int(input())\na = list(map(int, input().split()))\n\nstools = [0] # stools: 이미 쌓여있는 자리의 높이\nfor i in range(n):\n    if a[i] > stools[-1]:\n        stools.append(a[i])\n    else:\n        stools[bisect_left(stools, a[i])] = a[i]\nprint(len(stools)-1)\n']
2022-04-12 23:30:46.726617 size on output set 8
2022-04-12 23:30:46.726627 num operations 2
2022-04-12 23:30:46.726632 size on input set 1
2022-04-12 23:30:48.795457 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    num_people = int(sys.stdin.readline())\n    heights = [int(x) for x in sys.stdin.readline().split()]\n    stools = [0 for _ in range(num_people)]\n    current_max = 0\n    for i in range(num_people):\n        stools[i] = max(current_max, heights[i])\n        current_max = stools[i]\n    print(sum(stools))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    num_people = int(sys.stdin.readline())\n    heights = [int(x) for x in sys.stdin.readline().split()]\n    stools = [0 for _ in range(num_people)]\n    current_max = 0\n    for i in range(num_people):\n        stools[i] = max(current_max, heights[i])\n        current_max = stools[i]\n    print(sum(stools))\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    num_people = int(sys.stdin.readline())\n    heights = [int(x) for x in sys.stdin.readline().split()]\n    stools = [0 for _ in range(num_people)]\n    current_max = 0\n    for i in range(num_people):\n        stools[i] = max(current_max, heights[i])\n        current_max = stools[i]\n    print(sum(stools))\n\nmain()\n"
    }
  ],
  "created": 1649806246,
  "object": "edit"
}
2022-04-12 23:30:48.795729 fix spelling mistakes 3 ['\n\nimport sys\n\ndef main():\n    num_people = int(sys.stdin.readline())\n    heights = [int(x) for x in sys.stdin.readline().split()]\n    stools = [0 for _ in range(num_people)]\n    current_max = 0\n    for i in range(num_people):\n        stools[i] = max(current_max, heights[i])\n        current_max = stools[i]\n    print(sum(stools))\n\nmain()\n', '\n\nimport sys\n\ndef main():\n    num_people = int(sys.stdin.readline())\n    heights = [int(x) for x in sys.stdin.readline().split()]\n    stools = [0 for _ in range(num_people)]\n    current_max = 0\n    for i in range(num_people):\n        stools[i] = max(current_max, heights[i])\n        current_max = stools[i]\n    print(sum(stools))\n\nmain()\n', '\n\nimport sys\n\ndef main():\n    num_people = int(sys.stdin.readline())\n    heights = [int(x) for x in sys.stdin.readline().split()]\n    stools = [0 for _ in range(num_people)]\n    current_max = 0\n    for i in range(num_people):\n        stools[i] = max(current_max, heights[i])\n        current_max = stools[i]\n    print(sum(stools))\n\nmain()\n']
2022-04-12 23:30:48.795757 size on output set 1
2022-04-12 23:30:48.795763 size on input set 1
2022-04-12 23:30:50.677154 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    num_people = int(sys.stdin.readline())\n    heights = [int(x) for x in sys.stdin.readline().split()]\n    stools = [0 for _ in range(num_people)]\n    current_max = 0\n    for i in range(num_people):\n        stools[i] = max(current_max, heights[i])\n        current_max = stools[i]\n    print(sum(stools))\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    num_people = int(sys.stdin.readline())\n    heights = [int(x) for x in sys.stdin.readline().split()]\n    stools = [0 for _ in range(num_people)]\n    current_max = 0\n    for i in range(num_people):\n        stools[i] = max(current_max, heights[i])\n        current_max = stools[i]\n    print(sum(stools))\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    num_people = int(sys.stdin.readline())\n    heights = [int(x) for x in sys.stdin.readline().split()]\n    stools = [0 for _ in range(num_people)]\n    current_max = 0\n    for i in range(num_people):\n        stools[i] = max(current_max, heights[i])\n        current_max = stools[i]\n    print(sum(stools))\n\nmain()\n"
    }
  ],
  "created": 1649806248,
  "object": "edit"
}
2022-04-12 23:30:50.677322 fix syntax errors 3 ['\n\nimport sys\n\ndef main():\n    num_people = int(sys.stdin.readline())\n    heights = [int(x) for x in sys.stdin.readline().split()]\n    stools = [0 for _ in range(num_people)]\n    current_max = 0\n    for i in range(num_people):\n        stools[i] = max(current_max, heights[i])\n        current_max = stools[i]\n    print(sum(stools))\nmain()\n', '\nimport sys\n\ndef main():\n    num_people = int(sys.stdin.readline())\n    heights = [int(x) for x in sys.stdin.readline().split()]\n    stools = [0 for _ in range(num_people)]\n    current_max = 0\n    for i in range(num_people):\n        stools[i] = max(current_max, heights[i])\n        current_max = stools[i]\n    print(sum(stools))\n\nmain()\n', '#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    num_people = int(sys.stdin.readline())\n    heights = [int(x) for x in sys.stdin.readline().split()]\n    stools = [0 for _ in range(num_people)]\n    current_max = 0\n    for i in range(num_people):\n        stools[i] = max(current_max, heights[i])\n        current_max = stools[i]\n    print(sum(stools))\n\nmain()\n']
2022-04-12 23:30:50.677348 size on output set 3
