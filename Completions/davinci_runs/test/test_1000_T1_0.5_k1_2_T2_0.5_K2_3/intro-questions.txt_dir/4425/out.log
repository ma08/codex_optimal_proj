2022-04-09 20:07:42.054105 """
Snuke has a fair N-sided die that shows the integers from 1 to N with equal probability and a fair coin. He will play the following game with them:
 - Throw the die. The current score is the result of the die.
 - As long as the score is between 1 and K-1 (inclusive), keep flipping the coin. The score is doubled each time the coin lands heads up, and the score becomes 0 if the coin lands tails up.
 - The game ends when the score becomes 0 or becomes K or above. Snuke wins if the score is K or above, and loses if the score is 0.
You are given N and K. Find the probability that Snuke wins the game.

-----Constraints-----
 - 1 ≤ N ≤ 10^5
 - 1 ≤ K ≤ 10^5
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
N K

-----Output-----
Print the probability that Snuke wins the game. The output is considered correct when the absolute or relative error is at most 10^{-9}.

-----Sample Input-----
3 10

-----Sample Output-----
0.145833333333

 - If the die shows 1, Snuke needs to get four consecutive heads from four coin flips to obtain a score of 10 or above. The probability of this happening is \frac{1}{3} \times (\frac{1}{2})^4 = \frac{1}{48}.
 - If the die shows 2, Snuke needs to get three consecutive heads from three coin flips to obtain a score of 10 or above. The probability of this happening is \frac{1}{3} \times (\frac{1}{2})^3 = \frac{1}{24}.
 - If the die shows 3, Snuke needs to get two consecutive heads from two coin flips to obtain a score of 10 or above. The probability of this happening is \frac{1}{3} \times (\frac{1}{2})^2 = \frac{1}{12}.
Thus, the probability that Snuke wins is \frac{1}{48} + \frac{1}{24} + \frac{1}{12} = \frac{7}{48} \simeq 0.1458333333.
"""
2022-04-09 20:07:42.054143 --------------------------
2022-04-09 20:07:57.080247 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\nimport math\n\nN, K = map(int, input().split())\n\n# N-sided die\nprobability_die = 1/N\n\n# Coin\nprobability_coin = 1/2\n\n# Probability that Snuke wins\nprobability_win = 0\n\nfor i in range(1, N+1):\n    # Number of times Snuke needs to flip the coin to reach K\n    num_flips = math.ceil(math.log2(K/i))\n\n    # Probability that Snuke wins with the current die\n    probability_win_die = probability_coin**num_flips\n\n    # Probability that Snuke wins\n    probability_win += probability_win_die * probability_die\n\nprint(probability_win)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    n, k = map(int, input().split())\n    dp = [0] * (k+1)\n    dp[k] = 1\n    for i in range(k-1, 0, -1):\n        dp[i] = dp[i+1] * (n-1) / n + (dp[i+1] + dp[i+2]) / 2 / n\n    print(dp[1])\n\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1649549262,
  "id": "cmpl-4vFPCtgS8WEERvVbvSkER30at9Jb9",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 20:07:57.080503 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\nimport math\n\nN, K = map(int, input().split())\n\n# N-sided die\nprobability_die = 1/N\n\n# Coin\nprobability_coin = 1/2\n\n# Probability that Snuke wins\nprobability_win = 0\n\nfor i in range(1, N+1):\n    # Number of times Snuke needs to flip the coin to reach K\n    num_flips = math.ceil(math.log2(K/i))\n\n    # Probability that Snuke wins with the current die\n    probability_win_die = probability_coin**num_flips\n\n    # Probability that Snuke wins\n    probability_win += probability_win_die * probability_die\n\nprint(probability_win)"
}
2022-04-09 20:07:57.080568 REASON stop
2022-04-09 20:07:57.081505 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    n, k = map(int, input().split())\n    dp = [0] * (k+1)\n    dp[k] = 1\n    for i in range(k-1, 0, -1):\n        dp[i] = dp[i+1] * (n-1) / n + (dp[i+1] + dp[i+2]) / 2 / n\n    print(dp[1])\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 20:07:57.081539 REASON stop
