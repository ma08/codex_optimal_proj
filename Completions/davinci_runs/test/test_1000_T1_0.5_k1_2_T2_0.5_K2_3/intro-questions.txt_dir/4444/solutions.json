["S,T = map(str,input().split())\nprint(T + S)", "s, t = map( str, input().split() )\nprint( t + s )", "S,T = input().split()\n\nans = T+S\nprint(ans)", "S,T=input().split()\nprint((T+S))\n", "s, t = input().split()\n\nu = t + s\n\nprint(u)\n\n", "s,t=map(str,input().split())\nprint(t+s)", "S,T=map(str,input().split())\nprint(T+S)", "s, t = input().split()\nprint(t + s)", "s, t = input().split()\nprint(t + s)", "#149-A\n\nS,T = list(map(str,input().split()))\n\nprint((T+S))\n", "s,t = input().split()\nprint(t+s)", "a,b=input().split()\nprint(b+a)", "S,T =input().split()\nprint (str(T)+str(S))", "S, T = input().split()\nprint(T+S)", "S,T = input().split()\n\nprint(T + S)", "#!/usr/bin/env python3\nfrom collections import defaultdict, Counter\nfrom itertools import product, groupby, count, permutations, combinations\nfrom math import pi, sqrt\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nfrom string import ascii_lowercase\nfrom functools import lru_cache\nimport sys\nsys.setrecursionlimit(10000)\nINF = float(\"inf\")\nYES, Yes, yes, NO, No, no = \"YES\", \"Yes\", \"yes\", \"NO\", \"No\", \"no\"\ndy4, dx4 = [0, 1, 0, -1], [1, 0, -1, 0]\ndy8, dx8 = [0, -1, 0, 1, 1, -1, -1, 1], [1, 0, -1, 0, 1, 1, -1, -1]\n\n\ndef inside(y, x, H, W):\n    return 0 <= y < H and 0 <= x < W\n\n\ndef ceil(a, b):\n    return (a + b - 1) // b\n\n\ndef sum_of_arithmetic_progression(s, d, n):\n    return n * (2 * s + (n - 1) * d) // 2\n\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\ndef lcm(a, b):\n    g = gcd(a, b)\n    return a / g * b\n\n\ndef solve():\n    S, T = input().split()\n    print((T + S))\n\n\ndef main():\n    solve()\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "s,t = input().split()\n\nprint(t+s)", "s,t = input().split()\nprint(t+s)", "s,t = input().split()\n\nprint(t + s)", "a, b = map(str, input().split())\nprint('{}{}'.format(b, a))", "S,T = map(str,input().split())\nprint(T+S)", "s, t = input().split()\nu = t + s\nprint(u)", "s, t = map(str, input().split())\nprint(t+s)", "s, t = input().split()\nprint(\"\".join([t, s]))", "s, t = input().split()\nprint(t+s)", "s, t = map(str, input().split())\nprint(t + s)", "s,t = input().split()\nprint(t+s)", "s,t=input().split()\nprint(t+s)", "s, t = input().split()\n\nprint(t + s)", "#!/usr/bin/env python3\nimport sys\nfrom itertools import chain\n\n\ndef solve(S: str, T: str):\n    answer = T + S\n    return answer\n\n\ndef main():\n    tokens = chain(*(line.split() for line in sys.stdin))\n    S = next(tokens)  # type: str\n    T = next(tokens)  # type: str\n    answer = solve(S, T)\n    print(answer)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math\nfrom collections import Counter\nfrom itertools import product\n\nii = lambda : int(input())\nmi = lambda : map(int,input().split())\nli = lambda : list(map(int,input().split()))\n\ns,t = input().split()\nprint(t+s)", "s,t=input().split()\nprint(t+s)", "s,t = input().split()\nprint(t,s,sep=\"\")", "#!/usr/bin/env python3\ns,t=input().split()\nprint(t+s)", "S,T = map(str,input().split())\n\nprint(T+S)", "s, t = input().split()\nprint(t + s)", "# coding: utf-8\n# Your code here!\n\ns,t = input().split()\nprint(t+s)", "print(*input().split()[::-1],sep='')", "S, T = input().split()\nans = T + S\nprint(ans)", "S,T = input().split()\nprint(T+S)", "s,t=input().split()\nprint (t+s)", "S, T = map(str, input().split())\n\nprint(T+S)", "s, t = input().split()\nprint((t + s))\n", "s,t = input().split()\nprint(t+s)", "s,t = input().split()\n\nanswer = t + s\nprint(answer)", "s,t = input().split()\nprint(t+s)", "s,t=input().split()\n\nprint(t+s)", "s,t = input().split()\n\nprint(t + s)", "s,t=input().split()\n\nr=t+s\n\nprint(r)\n", "s, t = map(str, input().split())\n\nprint(t+s)", "s,t = input().split()\nprint(t,s,sep='')", "s, t = input().split()\nprint(t+s)", "S, T = input().split()\nprint(T+S)", "S, T = map(str, input().split())\n\nprint(T+S)", "s,t = input().split()\nprint(t+s)", "s, t = input().split()\nprint(t+s)", "s,t=input().split()\nprint(t+s)", "s,t=input().split()\n\nr=t+s\n\nprint(r)", "x,y = input().split()\nprint(y+x)", "import sys\n \nS, T = next(sys.stdin).strip().split()\nprint(T + S)", "s, t = map(list, input().split())\nt.extend(s)\nprint(''.join(t))", "s,t=input().split()\nprint(t+s)", "s,t = input().split()\nprint(t+s)", "S, T = input().split()\n\nprint(T + S)", "b,a = input().split()\nprint(a + b)", "s,t = input().split()\nprint((t+s))\n", "s,t = map(str, input().split())\nprint(t+s)", "s,t = input().split()\nprint((t + s))\n", "s,t = map(str,input().split())\nprint(t+s)", "a, b = input().split()\nprint((b + a))\n", "S, T = map(str, input().split())\nprint(T + S)", "s,t = map(str,input().split())\nprint(t+s)", "s, t = input().split()\nprint(t+s)", "s, t = input().split()\nprint(t+s)", "s,t = input().split()\nprint(t+s)", "a,b=input().split()\nfor i in b,a:\n  print(i,end=\"\")\n", "s,t = input().split()\n \nprint(t+s)", "S, T = input().split()\nprint(T+S)", "s,t = input().split()\nprint(t+s)", "s,t=input().split()\nprint(t+s)", "#!/usr/bin/env python3\n\ndef main():\n    s, t = input().split()\n    print((t + s))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "s,t = list(map(str,input().split()))\nprint(( t+s ))\n", "s,t = input().split()\nprint(t,s,sep='')", "S,T=input().split()\nprint(T+S)", "S, T = input().split()\nprint(T + S)", "S,T=map(str,input().split())\nprint(T+S)", "s,t=input().split()\nprint(t+s)", "S , T = input().split()\nprint((T+S))\n\n", "S, T = input().split()\nprint(T + S)", "\ns,t=map(str,input().split())\nprint(t+s,sep='')", "s, t = list(input().split())\n\nprint((t + s))\n", "S, T = [s for s in input().split()]\nprint(''.join([T, S]))", "s,t = input().split()\nprint(t+s)", "S,T = input().split()\n\nprint(T + S)", "s, t = input().split()\nprint(t, s, sep='')", "str_l = list(map(str, input().split()))\nprint(''.join(list(reversed(str_l))))", "s, t = input().split()\nprint((t+s))\n", "s,t=input().split()\nprint(t+s)", "s,t=list(map(str ,input().split()))\nans_str=\"\"\nfor i in range(0,len(t)):\n    ans_str+=t[i]    \n\nans_str1=\"\"\nfor j in range(0,len(s)):\n    ans_str1+=s[j]\n\nprint(ans_str+ans_str1)", "s,t=input().split()\nprint(t+s,sep=\"\")"]