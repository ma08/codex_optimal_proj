["# A - ringring\n# https://atcoder.jp/contests/abc066/tasks/abc066_a\n\na = list(map(int, input().split()))\n\na.sort()\nprint((a[0] + a[1]))\n", "a, b, c = map(int, input().split())\n\nprint(min(a+b, b+c, c+a))", "# A - ringring\ndef main():\n    abc = list(map(int, input().split()))\n    abc.sort()\n    cnt = 0\n\n    for _ in range(2):\n        cnt += abc.pop(0)\n    else:\n        print(cnt)\n\n\nif __name__ ==  \"__main__\":\n    main()", "l = list(map(int, input().split()))\n\n\nl.sort()\n\nprint(l[0] + l[1])", "a,b,c = sorted(map(int,input().split()))\nprint(a+b)", "data = list(map(int,input().split()))\ndata.sort()\nprint(data[0]+data[1])", "a,b,c = list(map(int,input().split()))\n\nprint((min(a+b,a+c,b+c)))\n", "a, b, c = map(int, input().split())\n\nprint(min(a + b, b + c, c + a))", "a,b,c=(int(x) for x in input().split())\n\nX=[a,b,c]\nX.sort()\n\nY=X[0]+X[1]\n\nprint(Y)", "# 066a\n\ndef atc_066a(abc: str) -> int:\n    abc_int = [int(ai) for ai in abc.split(\" \")]\n    abc_int.sort()\n    return abc_int[0] + abc_int[1]\n\nabc = input()\nprint(atc_066a(abc))", "\na,b,c=list(map(int,input().split()))\n\nprint((min(a+b,b+c,a+c)))\n\n", "'''\n\u554f\u984c\uff1a\n    snuke \u541b\u306f\u81ea\u8ee2\u8eca\u3092\u8cb7\u3044\u306b\u6765\u307e\u3057\u305f\u3002\n    snuke \u541b\u306f\u3059\u3067\u306b\u8cb7\u3046\u81ea\u8ee2\u8eca\u3092\u6c7a\u3081\u305f\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u81ea\u8ee2\u8eca\u306b\u306f\u30d9\u30eb\u304c\u4ed8\u3044\u3066\u3044\u306a\u3044\u305f\u3081\u3001 \u81ea\u8ee2\u8eca\u3068\u306f\u5225\u306b\u30d9\u30eb\u3082\u8cb7\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n    snuke \u541b\u306f\u5b89\u5168\u610f\u8b58\u304c\u9ad8\u3044\u306e\u3067\u3001\u30d9\u30eb\u3092\u3069\u3061\u3089\u306e\u624b\u3067\u3082\u9cf4\u3089\u305b\u308b\u3088\u3046\u3001\n    \u4e21\u65b9\u306e\u30cf\u30f3\u30c9\u30eb\u306b 1 \u3064\u305a\u3064 \u4ed8\u3051\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n    \u304a\u5e97\u306b\u3042\u308b\u30d9\u30eb\u306f 3 \u7a2e\u985e\u3067\u3001\u305d\u308c\u305e\u308c a\u5186\u3001b\u5186\u3001c\u5186\u3067\u3059\u3002\n    \u3053\u306e 3\u3064\u306e\u3046\u3061\u3001\u7570\u306a\u308b 2\u3064\u306e\u30d9\u30eb\u3092\u9078\u3093\u3067\u8cb7\u3046\u3068\u304d\u306e\u3001\u5024\u6bb5\u306e\u5408\u8a08\u306e\u6700\u5c0f\u5024\u3092\u6c42\u3081\u3066\u4e0b\u3055\u3044\u3002\n'''\n\n'''\n\u5236\u7d04\uff1a\n    1 \u2264 a,b,c \u2264 10000\n    a,b,c\u306f\u6574\u6570\n'''\n\n# \u6a19\u6e96\u5165\u529b\u304b\u3089 a, b, c \u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\na, b, c = list(map(int, input().split()))\n\nresult = [a + b, b + c, a + c]  # \u7d50\u679c\u51fa\u529b\u7528\u30ea\u30b9\u30c8\n\nprint((min(result)))\n", "bell=[a, b, c]=list(map(int, input().split(\" \")))\ncandidate=sorted(bell)\nprint(candidate[0]+candidate[1])", "cost = list(map(int, input().split()))\nprint(sum(sorted(cost)[:2]))", "a, b, c = list(map(int,input().split()))\n\nbell_price = [a, b, c]\n\nprint((sum(bell_price) - max(bell_price)))\n", "li=a,b,c=list(map(int,input().split()))\nprint(sorted(li)[0]+sorted(li)[1])", "a,b,c = map(int,input().split())\n# \u30d9\u30eb\u306e\u4fa1\u683c\u3092\u30ea\u30b9\u30c8\u5316\nbell_price = (a,b,c)\n# \u30ea\u30b9\u30c8\u306e\u5408\u8a08\u5024\u304b\u3089\u6700\u9ad8\u5024\u306e\u30d9\u30eb\u306e\u5024\u6bb5\u3092\u9664\u5916\nprint(sum(bell_price)-max(bell_price))", "a, b, c, = list(map(int, input().split()))\n\nring=[]\nring.append(a)\nring.append(b)\nring.append(c)\n\nring.sort()\nprint((ring[0] + ring[1]))\n", "lst = input().split()\n\nfor i in range(3):\n   lst[i] = int(lst[i])\n\nlst.sort()\nprint(lst[0] + lst[1])", "a,b,c=map(int,input().split())\n\nprint(a+b+c-max(a,b,c))", "# 066a\n\ndef atc_066a(abc: str) -> int:\n    abc_int = [int(ai) for ai in abc.split(\" \")]\n    abc_int.sort()\n    return abc_int[0] + abc_int[1]\n\nabc = input()\nprint((atc_066a(abc)))\n", "a=list(map(int,input().split()))\na.sort()\nprint(sum(a[:2]))", "a, b, c = map(int,input().split())\n\nbell_list = []\nbell_list.append(a + b)\nbell_list.append(b + c)\nbell_list.append(a + c)\n\nprint(min(bell_list))", "a,b,c = map(int,input().split())\nbell = [a + b, a + c, b + c]\nprint(min(bell))", "a, b, c = map(int, input().split())\nmin_price = min(a + b, b + c, a + c)\nprint(min_price)", "a=list(map(int,input().split()))\nprint((sum(a)-max(a)))\n", "a, b, c = map(int,input().split())\n\nprint(min(a + b, b + c, c + a))", "bell=[a, b, c]=list(map(int, input().split(\" \")))\n\nprint(sorted(bell).pop(0)\\\n      +sorted(bell).pop(1))", "a, b, c = map(int, input().split())\nprint(min(a + b, b + c, a + c))", "a,b,c = map(int,input().split())\nprint(min(a+b,a+c,b+c))", "l = sorted(list(map(int, input().split())))\nprint(sum(l[:2]))", "a,b,c=map(int,input().split())\nx=[a,b,c]\nprint(sum(x)-max(x))", "print(sum(sorted(map(int, input().split()))[:2]))", "a,b,c=map(int,input().split())\ns=[]\ns.append(a+b)\ns.append(a+c)\ns.append(b+c)\n\n\nprint(min(s))", "a,b,c=map(int,input().split())\nx=min(a,b,c)\nz=max(a,b,c)\ny=a+b+c-x-z\nprint(x+y)", "A = list(map(int, input().split()))\n\nprint(sum(sorted(A)[:2]))", "a,b,c = list(map(int,input().split()))\n\nprice = min(a + b,b + c,a + c)\nprint(price)\n", "\n\na, b, c = map(int, input().split())\n\n\n\nprint(min(a+b, b+c, a+c))", "a,b,c = map(int,input().split())\n\nprint(min(a+b,a+c,b+c))", "a, b, c = map(int, input().split())\n\ndef answer(a: int, b: int, c: int) -> int:\n    return min(a + b, a + c, b + c)\n\nprint(answer(a, b, c))", "a,b,c = map(int,input().split())\n\nprint(min(a+b,a+c,b+c))", "a, b, c = map(int, input().split())\nprint(min(a + b, a + c, c + b))", "S_list = list(map(int,input().split()))\nsum_bell=sum(S_list)\nhantei = list()\nfor i in S_list:\n    hantei.append(sum_bell - i)\nprint(min(hantei))", "kingaku = list(map(int, input().split()))\nkingaku.sort()\n\nprint((kingaku[0] + kingaku[1]))\n\n", "a, b, c = map(int,input().split())\n\nmax_bell = max(a,b,c)\nprint(a + b + c - max_bell)", "# snuke \u541b\u306f\u81ea\u8ee2\u8eca\u3092\u8cb7\u3044\u306b\u6765\u307e\u3057\u305f\u3002 snuke \u541b\u306f\u3059\u3067\u306b\u8cb7\u3046\u81ea\u8ee2\u8eca\u3092\u6c7a\u3081\u305f\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u81ea\u8ee2\u8eca\u306b\u306f\u30d9\u30eb\u304c\u4ed8\u3044\u3066\u3044\u306a\u3044\u305f\u3081\u3001\n# \u81ea\u8ee2\u8eca\u3068\u306f\u5225\u306b\u30d9\u30eb\u3082\u8cb7\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 snuke \u541b\u306f\u5b89\u5168\u610f\u8b58\u304c\u9ad8\u3044\u306e\u3067\u3001\u30d9\u30eb\u3092\u3069\u3061\u3089\u306e\u624b\u3067\u3082\u9cf4\u3089\u305b\u308b\u3088\u3046\u3001\u4e21\u65b9\u306e\u30cf\u30f3\u30c9\u30eb\u306b 1 \u3064\u305a\u3064 \u4ed8\u3051\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n# \u304a\u5e97\u306b\u3042\u308b\u30d9\u30eb\u306f 3 \u7a2e\u985e\u3067\u3001\u305d\u308c\u305e\u308c a \u5186\u3001 b \u5186\u3001 c \u5186\u3067\u3059\u3002 \u3053\u306e 3 \u3064\u306e\u3046\u3061\u3001\u7570\u306a\u308b 2 \u3064\u306e\u30d9\u30eb\u3092\u9078\u3093\u3067\u8cb7\u3046\u3068\u304d\u306e\u3001\u5024\u6bb5\u306e\u5408\u8a08\u306e\u6700\u5c0f\u5024\u3092\u6c42\u3081\u3066\u4e0b\u3055\u3044\u3002\n\na,b,c = map(int,input().split())\n\nif a >= b and a >= c :\n    print(b + c)\nelif b >= a and b >= c:\n    print(a + c)\nelif c >= a and c >= b:\n    print(a + b)", "a, b, c = map(int, input().split())\n\nplan1 = a + b\nplan2 = b + c\nplan3 = c + a\n\nprint(min(plan1, plan2, plan3))", "l=sorted(map(int,input().split()))\nprint(l[0]+l[1])", "\n# 066a\n\ndef atc_066a(abc: str) -> int:\n    abc_int = [int(ai) for ai in abc.split(\" \")]\n    abc_int.sort()\n    return abc_int[0] + abc_int[1]\n\nabc = input()\nprint(atc_066a(abc))", "a, b, c = list(map(int,input().split()))\nbell = [a, b, c]\nbell.sort()\nanswer = bell[0] + bell[1]\nprint(answer)\n", "# A - ringring\n\n# a b c\na, b, c = list(map(int, input().split()))\nmy_list = [a, b, c]\nmy_list.sort()\nprint((my_list[0] + my_list[1]))\n", "a, b, c = map(int, input().split())\ntotal_price = min(a+b, a+c, b+c)\nprint(total_price)", "a,b,c = map(int,input().split())\nprint(min(a+b, b+c, a+c))", "a, b, c = sorted([int(n) for n in input().split()])\nprint(a + b)", "m=list(map(int,input().split()))\nprint(sum(m)-max(m))", "def iroha():\n    lists = list(map(int, input().split()))\n    lists.sort()\n    print((lists[0]+lists[1]))\n\n\n\ndef __starting_point():\n    iroha()\n\n\n__starting_point()", "n=sorted(list(map(int, input().split())))\nprint((n[0]+n[1]))\n", "D=list(map(int,input().split()))\nD.sort()\nprint(D[0]+D[1])", "#066A\n# 1.\u5024\u3092\u6b63\u3057\u304f\u53d6\u5f97\na, b, c = (int(x) for x in input().split())\n\n# 2.\u6b63\u3057\u304f\u51e6\u7406\ngokei1 = a + b\ngokei2 = a + c\ngokei3 = b + c\n\nresalt=[gokei1,gokei2,gokei3]\n\nprint(min(resalt))", "a, b, c = list(map(int, input().split()))\nprint((min(a + b, a + c, c + b)))\n", "with open(0) as f:\n    a, b, c = map(int, f.read().split())\nprint(a+b+c-max(a,b,c))", "a, b, c = map(int, input().split())\nx = a + b\ny = b + c\nz = c + a\nif x <= y and x <= z:\n  print(x)\nelif y <= x and y <= z:\n  print(y)\nelse:\n  print(z)", "a = list(map(int,input().split()))\nprint(sum(a)-max(a))", "# \u7570\u306a\u308b\u4e8c\u3064\u306e\u7d44\u307f\u5408\u308f\u305b\u306e\u6700\u5c0f\u5024\u3092\u6c42\u3081\u308b\n\na, b, c = list(map(int, input().split()))\n\nvales = [a + b, a + c, b + c]\n\nprint((min(vales)))\n", "a, b, c = map(int, input().split())\nprint(min(a + b, a + c, b + c))", "bells = sorted(list(map(int, input().split())))\nprint(bells[0]+bells[1])", "p = sorted(map(int, input().split()))\n\nprint(p[0]+p[1])", "bell = sorted(list(map(int, input().split())))\n\nprint((bell[0] + bell[1]))", "a = list(map(int, input().split()))\na.sort()\nprint(a[0] + a[1])", "A = list(map(int, input().split()))\nA = sorted(A)\nprint((A[0] + A[1]))\n", "'''\nABC066 A - ringring\nhttps://atcoder.jp/contests/abc066/tasks/abc066_a\n'''\nnums = list(map(int, input().split()))\nans = sum(nums) - max(nums)\nprint(ans)\n", "a = list(map(int,input().split()))\nprint(sum(a)-max(a))", "a = list(map(int, input().split()))\nprint(sum(a)-max(a))", "a, b, c = map(int, input().split())\nlist01 = [a + b, b + c, a + c]\nprint(min(list01))", "a=sorted(map(int,input().split(\" \")))\nprint(a[0]+a[1])", "a, b, c = [int(i) for i in input().split()]\n\nprint((sum([a, b, c]) - max(a, b, c)))\n", "a,b,c = map(int,input().split())\n\nA = a + b\nB = b + c\nC = c + a\n\nprint(min(A,B,C))", "#ABC066\na = sorted(list(map(int,input().split())))\nprint(a[0]+a[1])", "a = list(map(int,input().split()))\na = sorted(a)\nprint((a[0]+a[1]))\n", "l = list(map(int, input().split()))\n\nans = sum(l) - max(l)\nprint(ans)\n", "a,b,c = sorted(map(int, input().split()))\n\nprint(a + b)", "a,b,c=map(int,input().split())\nprint(a+b+c-max(a,b,c))", "with open(0) as f:\n    a, b, c = map(int, f.read().split())\nprint(a+b+c-max(a,b,c))", "a, b, c = map(int, input().split())\n\nprices = [a + b, a + c, b + c]\n\nprint(min(prices))", "a = list(map(int,input().split()))\na.sort()\n\nprint(a[0]+a[1])", "a = [int(x) for x in input().split()]\nprint(sum(a) - max(a))", "a, b, c = map(int, input().split())\nprint(min(a + b, b + c, a + c))", "with open(0) as f:\n    a, b, c = map(int, f.read().split())\nprint(a+b+c-max(a,b,c))", "a,b,c = map(int,input().split())\nprint(min(a+b,b+c,a+c))", "a = list(map(int,input().split()))\nprint(sum(a)-max(a))", "a,b,c=map(int, input().split())\n\nprint(min(a+b,b+c,c+a))", "a, b, c=map(int, input().split())\nprint(a+b+c-max(a, b, c))", "price = list(map(int, input().split()))\nprice.sort()\n\nprint((price[0]+price[1]))\n", "a,b,c = map(int, input().split())\n\nkei = a + b + c\n\nif a >= b and a >= c:\n    kei -= a\n    print(kei)\n\nelif b >= a and b >= c:\n    kei -= b\n    print(kei)\nelse:\n    kei -= c\n    print(kei)", "abc = list(map(int, input().split()))\nabc.sort()\nprint((abc[0] + abc[1]))\n", "a, b, c = map(int, input().split())\n\nsums = [a + b, b + c, c + a]\n\nprint(min(sums))", "# \u6570\u5024\u306e\u53d6\u5f97\np_list = list(map(int,input().split()))\n\n# \u5024\u6bb5\u306e\u5b89\u30442\u3064\u3092\u52a0\u7b97\u3057\u51fa\u529b\np_list = sorted(p_list)\npare = p_list[0] + p_list[1]\nprint(pare)", "bell_cost = list(map(int, input().split()))\nbell_cost.sort()\nminimum_cost = bell_cost[0] + bell_cost[1]\nprint(minimum_cost)"]