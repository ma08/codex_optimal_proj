["n = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n", "# read the input\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# calculate the total points\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n", "#!/usr/bin/env python\n\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n", "\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n", "n = int(input())  # number of dishes\ndishes = list(map(int, input().split()))  # list of dishes\npoints = list(map(int, input().split()))  # points for each dish\nbonus = list(map(int, input().split()))  # bonus points for each dish\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n", "\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "n = int(input())  # n = 3\ndishes = list(map(int, input().split()))  # dishes = [1, 2, 3]\npoints = list(map(int, input().split()))  # points = [1, 2, 3]\nbonus = list(map(int, input().split()))  # bonus = [0, 1, 2]\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]  # ans = 0 + 1\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:  # if 1 > 0 and dishes[1] == dishes[0] + 1\n        ans += bonus[dishes[i - 1] - 1]  # ans = 1 + 0\n\nprint(ans)\n", "\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:  # previous dish is dish - 1\n        total_points += additional_points[dish - 1]\n\n\nprint(total_points)\n", "\n# https://www.codechef.com/problems/COW1\n\nfrom sys import stdin, stdout\n\nn, k = [int(a) for a in stdin.readline().split()]\ncows = [int(a) for a in stdin.readline().split()]\n\ncows.sort()\n\nresult = 0\nif cows[0] > 0:\n    result = cows[0]\n\ni = 0\nwhile i < n - 1:\n    if cows[i + 1] - cows[i] > 1:\n        result += cows[i + 1] - cows[i] - 1\n    i += 1\n\nif cows[n - 1] < k:\n    result += k - cows[n - 1]\n\nprint(result)\n", "\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:  # previous dish is dish - 1\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n", "\nn = int(input()) # \u0447\u0438\u0441\u043b\u043e \u043a\u043e\u0440\u043e\u0431\u043e\u043a\nk = int(input()) # \u0447\u0438\u0441\u043b\u043e \u0448\u0430\u0440\u043e\u0432\nboxes = list(map(int, input().split())) # \u043a\u043e\u0440\u043e\u0431\u043a\u0438\n\nans = 0 # \u043e\u0442\u0432\u0435\u0442\nfor i in range(n): # \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u043a\u043e\u0440\u043e\u0431\u043a\u0438\n    if boxes[i] == 1: # \u0435\u0441\u043b\u0438 \u043a\u043e\u0440\u043e\u0431\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0448\u0430\u0440\n        ans += 1 # \u0442\u043e \u043e\u0442\u0432\u0435\u0442 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0430 1\n        if i < n - 1 and boxes[i + 1] == 1: # \u0435\u0441\u043b\u0438 \u043a\u043e\u0440\u043e\u0431\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0448\u0430\u0440 \u0438 \u0435\u0441\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u043a\u043e\u0440\u043e\u0431\u043a\u0430\n            ans -= 1 # \u0442\u043e \u043e\u0442\u0432\u0435\u0442 \u0443\u043c\u0435\u043d\u044c\u0448\u0430\u0435\u0442\u0441\u044f \u043d\u0430 1\n            boxes[i + 1] = 0 # \u0438 \u0448\u0430\u0440 \u0432 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u043a\u043e\u0440\u043e\u0431\u043a\u0435 \u0438\u0441\u0447\u0435\u0437\u0430\u0435\u0442\n\nprint(ans) # \u0432\u044b\u0432\u043e\u0434\n", "\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n", "\n# read the input\nfrom sys import stderr\nfrom sys import stdin\n\nn = int(input())\ndishes = [int(a) - 1 for a in input().split()]\nbase_points = [int(a) for a in input().split()]\nadditional_points = [int(a) for a in input().split()]\n\n# calculate the total points\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n\n# print(n, file=stderr)\n# print(dishes, file=stderr)\n# print(base_points, file=stderr)\n# print(additional_points, file=stderr)\n"]