["\n\na, b, c = map(int, input().split())\n\nprint(b // c - (a - 1) // c) \n", "\na, b, x = map(int, input().split())\n\nprint(b // x - (a + x - 1) // x)\n", "import math\n\ndef main():\n    a, b, x = map(int, input().split())\n\n    if a % x == 0:\n        print(math.floor(b/x) - math.floor(a/x) + 1)\n    else:\n        print(math.floor(b/x) - math.floor(a/x))\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    a, b, x = map(int, input().split())\n\n    print(b // x - (a - 1) // x)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport numpy as np\nimport math\n\nn = int(input())\nx = np.array(list(map(int, input().split())))\nu = np.mean(x)\ns = np.std(x)\nx_norm = (x - u) / s\nprint(np.sqrt(n))\nprint(\"{:.2f}\".format(np.std(x_norm, ddof=1)))\n", "\n\nimport numpy as np\nimport math \n\nn = int(input())\nx = np.array(list(map(int, input().split())))\nu = np.mean(x)\ns = np.std(x)\nx_norm = (x - u) / s \nprint(np.sqrt(n))\nprint(\"{:.2f}\".format(np.std(x_norm, ddof=1)))\n", "a, b, x = map(int, input().split())\nprint(b // x - (a - 1) // x)\n", "import math\n\nA, B, X = map(int, input().split())\n\nif A % X == 0:\n    print(math.floor(B/X) - math.floor(A/X) + 1)\nelse:\n    print(math.floor(B/X) - math.floor(A/X))\n", "\nimport numpy as np\nimport math \n\nn = int(input())\nx = np.array(list(map(int, input().split())))\nu = np.mean(x)\ns = np.std(x)\nx_norm = (x - u) / s\nprint(np.sqrt(n))\nprint(\"{:.2f}\".format(np.std(x_norm, ddof=1)))\n", "\n\na, b, c = map(int, input().split())\n\n\nprint(b // c - (a - 1) // c)\n", "\nimport math, sys\n\na, b, x = map(int, sys.stdin.readline().split())\n\nif a % x == 0:\n    print(int(math.floor(b/x) - math.floor(a/x) + 1))\nelse:\n    print(int(math.floor(b/x) - math.floor(a/x)))\n"]