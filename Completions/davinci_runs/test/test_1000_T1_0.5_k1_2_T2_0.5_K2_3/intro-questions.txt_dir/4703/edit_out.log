2022-04-12 23:43:47.739680 num operations 2
2022-04-12 23:43:47.739689 size on input set 1
2022-04-12 23:43:49.292947 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef formula_evaluation(S):\n    if len(S) == 1:\n        return int(S)\n    if len(S) == 2:\n        return int(S) + int(S[0])\n    if len(S) == 3:\n        return int(S) + int(S[0]) + int(S[1])\n    return int(S) + int(S[0]) + int(S[1]) + formula_evaluation(S[2:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport sys\n\ndef formula_evaluation(S):\n    if len(S) == 1:\n        return int(S)\n    if len(S) == 2:\n        return int(S) + int(S[0])\n    if len(S) == 3:\n        return int(S) + int(S[0]) + int(S[1])\n    return int(S) + int(S[0]) + int(S[1]) + formula_evaluation(S[2:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef formula_evaluation(S):\n    if len(S) == 1:\n        return int(S)\n    if len(S) == 2:\n        return int(S) + int(S[0])\n    if len(S) == 3:\n        return int(S) + int(S[0]) + int(S[1])\n    return int(S) + int(S[0]) + int(S[1]) + formula_evaluation(S[2:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649807027,
  "object": "edit"
}
2022-04-12 23:43:49.293170 fix spelling mistakes 3 ["\nimport sys\n\ndef formula_evaluation(S):\n    if len(S) == 1:\n        return int(S)\n    if len(S) == 2:\n        return int(S) + int(S[0])\n    if len(S) == 3:\n        return int(S) + int(S[0]) + int(S[1])\n    return int(S) + int(S[0]) + int(S[1]) + formula_evaluation(S[2:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nimport sys\n\ndef formula_evaluation(S):\n    if len(S) == 1:\n        return int(S)\n    if len(S) == 2:\n        return int(S) + int(S[0])\n    if len(S) == 3:\n        return int(S) + int(S[0]) + int(S[1])\n    return int(S) + int(S[0]) + int(S[1]) + formula_evaluation(S[2:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef formula_evaluation(S):\n    if len(S) == 1:\n        return int(S)\n    if len(S) == 2:\n        return int(S) + int(S[0])\n    if len(S) == 3:\n        return int(S) + int(S[0]) + int(S[1])\n    return int(S) + int(S[0]) + int(S[1]) + formula_evaluation(S[2:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 23:43:49.293199 size on output set 2
2022-04-12 23:43:49.293206 size on input set 2
2022-04-12 23:43:54.751981 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef formula_evaluation(S):\n    if len(S) == 1:\n        return int(S)\n    if len(S) == 2:\n        return int(S) + int(S[0])\n    if len(S) == 3:\n        return int(S) + int(S[0]) + int(S[1])\n    return int(S) + int(S[0]) + int(S[1]) + formula_evaluation(S[2:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S)) \n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef formula_evaluation(S):\n    if len(S) == 0:\n        return 0\n    if len(S) == 1: # '1'\n        return int(S[0])\n    if len(S) == 2: # '12'\n        return int(S[0]) + int(S)\n    if len(S) == 3: # '123'\n        return int(S[0]) + int(S[1]) + int(S)\n    return int(S[0]) + int(S[1]) + int(S) + formula_evaluation(S[2:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef formula_evaluation(S):\n    if len(S) == 1:\n        return int(S)\n    if len(S) == 2:\n        return int(S) + int(S[0])\n    if len(S) == 3:\n        return int(S) + int(S[0]) + int(S[1])\n    return int(S) + int(S[0]) + int(S[1]) + formula_evaluation(S[2:]) - int(S[2])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649807029,
  "object": "edit"
}
2022-04-12 23:43:54.752158 fix syntax errors 3 ["\nimport sys\n\ndef formula_evaluation(S):\n    if len(S) == 1:\n        return int(S)\n    if len(S) == 2:\n        return int(S) + int(S[0])\n    if len(S) == 3:\n        return int(S) + int(S[0]) + int(S[1])\n    return int(S) + int(S[0]) + int(S[1]) + formula_evaluation(S[2:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S)) \n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef formula_evaluation(S):\n    if len(S) == 0:\n        return 0\n    if len(S) == 1: # '1'\n        return int(S[0])\n    if len(S) == 2: # '12'\n        return int(S[0]) + int(S)\n    if len(S) == 3: # '123'\n        return int(S[0]) + int(S[1]) + int(S)\n    return int(S[0]) + int(S[1]) + int(S) + formula_evaluation(S[2:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef formula_evaluation(S):\n    if len(S) == 1:\n        return int(S)\n    if len(S) == 2:\n        return int(S) + int(S[0])\n    if len(S) == 3:\n        return int(S) + int(S[0]) + int(S[1])\n    return int(S) + int(S[0]) + int(S[1]) + formula_evaluation(S[2:]) - int(S[2])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 23:43:56.427064 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef formula_evaluation(S):\n    if len(S) == 1:\n        return int(S)\n    if len(S) == 2:\n        return int(S) + int(S[0])\n    if len(S) == 3:\n        return int(S) + int(S[0]) + int(S[1])\n    return int(S) + int(S[0]) + int(S[1]) + formula_evaluation(S[2:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\n\ndef formula_evaluation(S):\n    if len(S) == 1:\n        return int(S)\n    if len(S) == 2:\n        return int(S) + int(S[0])\n    if len(S) == 3:\n        return int(S) + int(S[0]) + int(S[1])\n    return int(S) + int(S[0]) + int(S[1]) + formula_evaluation(S[2:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef formula_evaluation(S):\n    if len(S) == 1:\n        return int(S)\n    if len(S) == 2:\n        return int(S) + int(S[0])\n    if len(S) == 3:\n        return int(S) + int(S[0]) + int(S[1])\n    return int(S) + int(S[0]) + int(S[1]) + formula_evaluation(S[2:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649807034,
  "object": "edit"
}
2022-04-12 23:43:56.427258 fix syntax errors 3 ["\nimport sys\n\ndef formula_evaluation(S):\n    if len(S) == 1:\n        return int(S)\n    if len(S) == 2:\n        return int(S) + int(S[0])\n    if len(S) == 3:\n        return int(S) + int(S[0]) + int(S[1])\n    return int(S) + int(S[0]) + int(S[1]) + formula_evaluation(S[2:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\n\ndef formula_evaluation(S):\n    if len(S) == 1:\n        return int(S)\n    if len(S) == 2:\n        return int(S) + int(S[0])\n    if len(S) == 3:\n        return int(S) + int(S[0]) + int(S[1])\n    return int(S) + int(S[0]) + int(S[1]) + formula_evaluation(S[2:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef formula_evaluation(S):\n    if len(S) == 1:\n        return int(S)\n    if len(S) == 2:\n        return int(S) + int(S[0])\n    if len(S) == 3:\n        return int(S) + int(S[0]) + int(S[1])\n    return int(S) + int(S[0]) + int(S[1]) + formula_evaluation(S[2:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 23:43:56.427368 size on output set 5
2022-04-12 23:43:56.427379 num operations 2
2022-04-12 23:43:56.427385 size on input set 1
2022-04-12 23:43:58.437899 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+')\n    return sum(map(int, s))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s) - 1):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+') \n    return sum(map(int, s))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s)):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+')\n    return sum(map(int, s))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s)):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n    \nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649807036,
  "object": "edit"
}
2022-04-12 23:43:58.438075 fix spelling mistakes 3 ["\n\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+')\n    return sum(map(int, s))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s) - 1):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+') \n    return sum(map(int, s))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s)):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+')\n    return sum(map(int, s))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s)):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n    \nif __name__ == '__main__':\n    main()\n"]
2022-04-12 23:43:58.438130 size on output set 3
2022-04-12 23:43:58.438136 size on input set 3
2022-04-12 23:44:00.001015 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+')\n    return sum(map(int, s))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s)):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n    \nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+')\n    return sum(map(int, s))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s)):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+')\n    return sum(map(int, s))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s)):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649807038,
  "object": "edit"
}
2022-04-12 23:44:00.001203 fix syntax errors 3 ["\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+')\n    return sum(map(int, s))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s)):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n    \nif __name__ == '__main__':\n    main()\n", "\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+')\n    return sum(map(int, s))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s)):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+')\n    return sum(map(int, s))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s)):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 23:44:06.105945 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    return sum(map(int, s.split('+')))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s) - 1):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import math\n\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    return sum(map(int, s.split('+')))\n\ndef main():\n    n = len(s)\n    s = input()\n    ans = 0\n    for i in range(1, n - 1):\n        for c in combinations(range(n - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+')\n    return sum(map(int, s))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s) - 1):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649807040,
  "object": "edit"
}
2022-04-12 23:44:06.106109 fix syntax errors 3 ["\n\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    return sum(map(int, s.split('+')))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s) - 1):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "import math\n\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    return sum(map(int, s.split('+')))\n\ndef main():\n    n = len(s)\n    s = input()\n    ans = 0\n    for i in range(1, n - 1):\n        for c in combinations(range(n - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+')\n    return sum(map(int, s))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s) - 1):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 23:44:08.028073 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+') \n    return sum(map(int, s))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s)):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+') \n    return sum(map(int, s))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s)):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+') \n    return sum(map(int, s))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s)):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649807046,
  "object": "edit"
}
2022-04-12 23:44:08.028271 fix syntax errors 3 ["\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+') \n    return sum(map(int, s))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s)):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+') \n    return sum(map(int, s))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s)):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+') \n    return sum(map(int, s))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s)):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 23:44:08.028302 size on output set 6
