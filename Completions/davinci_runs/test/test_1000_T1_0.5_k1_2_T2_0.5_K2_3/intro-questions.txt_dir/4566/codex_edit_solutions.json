["# \u6b21\u6570\u3092\u8a08\u7b97\u3059\u308b\n\nN, M = map(int, input().split())\n\n# \u5165\u529b\u3055\u308c\u305f\u8fba\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\u3092\u5b9a\u7fa9\nedge = []\n\n# \u5404\u9802\u70b9\u306e\u6b21\u6570\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\u3092\u5b9a\u7fa9\ndegree = [0] * (N + 1)\n\nfor i in range(M):\n    a, b = map(int, input().split())\n    edge.append([a, b])\n    # \u6b21\u6570\u3092\u8a08\u7b97\u3059\u308b\n    degree[a] += 1\n    degree[b] += 1\n\n# \u6b21\u6570\u3092\u51fa\u529b\u3059\u308b\nfor i in range(1, N + 1):\n    print(degree[i])\n", "# input\n\nn, m = map(int, input().split())\n\n# input\nroads = []\nfor i in range(m):\n    a, b = map(int, input().split())\n    roads.append([a, b])\n\n# output\nfor i in range(1, n+1):\n    count = 0\n    for road in roads:\n        if i in road:\n            count += 1\n    print(count)\n", "\n\nN, M = map(int, input().split())\n\n# \u5404\u9802\u70b9\u306e\u6b21\u6570\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\u3092\u5ba3\u8a00\ndegree = [0] * (N + 1)\n\nfor i in range(M):\n    a, b = map(int, input().split())\n    # \u6b21\u6570\u3092\u8a08\u7b97\u3059\u308b\n    degree[a] += 1\n    degree[b] += 1\n\n# \u6b21\u6570\u3092\u51fa\u529b\u3059\u308b\nfor i in range(1, N + 1):\n    print(degree[i])\n", "\n# \u5165\u529b\n\nn, m = map(int, input().split())\n\nroads = []\nfor i in range(m):\n    a, b = map(int, input().split())\n    roads.append([a, b])\n\n# \u51fa\u529b\nfor i in range(1, n+1):\n    count = 0\n    for road in roads:\n        if i in road:\n            count += 1\n    print(count)\n", "\nN, M = map(int, input().split())\n\n# \u5165\u529b\u3055\u308c\u305f\u8fba\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\u3092\u5b9a\u7fa9\nedge = []\n\n# \u5404\u9802\u70b9\u306e\u6b21\u6570\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\u3092\u5b9a\u7fa9\ndegree = [0] * (N + 1)\n\nfor i in range(M):\n    a, b = map(int, input().split())\n    edge.append([a, b])\n    # \u6b21\u6570\u3092\u8a08\u7b97\u3059\u308b\n    degree[a] += 1\n    degree[b] += 1\n\n# \u6b21\u6570\u3092\u51fa\u529b\u3059\u308b\nfor i in range(1, N + 1):\n    print(degree[i])\n", "\n\nN, M = map(int, input().split())\n\n# \u5165\u529b\u3055\u308c\u305f\u8fba\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\u3092\u5b9a\u7fa9\u3059\u308b\nedge = [[] for _ in range(M)]\n\n# \u5404\u9802\u70b9\u306e\u6b21\u6570\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\u3092\u5b9a\u7fa9\u3059\u308b\ndegree = [0] * (N + 1)\n\nfor i in range(M):\n    a, b = map(int, input().split())\n    edge[i].append(a)\n    edge[i].append(b)\n    # \u6b21\u6570\u3092\u8a08\u7b97\u3059\u308b\n    degree[a] += 1\n    degree[b] += 1\n\n# \u6b21\u6570\u3092\u51fa\u529b\u3059\u308b\nfor i in range(1, N + 1):\n    print(degree[i])\n", "\n# \u5165\u529b\nn, m = map(int, input().split())\n\nroads = []\nfor i in range(m):\n    a, b = map(int, input().split())\n    roads.append([a, b])\n\n# \u51fa\u529b\nfor i in range(1, n+1):\n    count = 0\n    for road in roads:\n        if i in road:\n            count += 1\n    print(count)\n", "\nn, m = map(int, input().split())\n\n# input\nroads = []\nfor i in range(m):\n    a, b = map(int, input().split())\n    roads.append([a, b])\n\n# output\nfor i in range(1, n+1):\n    count = 0\n    for road in roads:\n        if i in road:\n            count += 1\n    print(count)\n", "\nN, M = map(int, input().split())\n\n# \u5165\u529b\u3055\u308c\u305f\u8fba\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\u3092\u5ba3\u8a00\nedge = []\n\n# \u5404\u9802\u70b9\u306e\u6b21\u6570\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\u3092\u5ba3\u8a00\ndegree = [0] * (N + 1)\n\nfor i in range(M):\n    a, b = map(int, input().split())\n    edge.append([a, b])\n    # \u6b21\u6570\u3092\u8a08\u7b97\u3059\u308b\n    degree[a] += 1\n    degree[b] += 1\n\n# \u6b21\u6570\u3092\u51fa\u529b\u3059\u308b\nfor i in range(1, N + 1):\n    print(degree[i])\n", "n, m = map(int, input().split())\n\n# \u5165\u529b\nroads = []\nfor i in range(m):\n    a, b = map(int, input().split())\n    roads.append([a, b])\n\n# \u51fa\u529b\nfor i in range(1, n + 1):\n    count = 0\n    for road in roads:\n        if i in road:\n            count += 1\n    print(count)\n", "\n\nN, M = map(int, input().split())\n\n# \u5165\u529b\u3055\u308c\u305f\u8fba\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\u3092\u5ba3\u8a00\u3059\u308b\nedge = []\n\n# \u5404\u9802\u70b9\u306e\u6b21\u6570\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\u3092\u5ba3\u8a00\u3059\u308b\ndegree = [0] * (N + 1)\n\nfor i in range(M):\n    a, b = map(int, input().split())\n    edge.append([a, b])\n    # \u6b21\u6570\u3092\u8a08\u7b97\u3059\u308b\u305f\u3081\u3001\u5404\u9802\u70b9\u306e\u6b21\u6570\u30921\u305a\u3064\u5897\u3084\u3059\n    degree[a] += 1\n    degree[b] += 1\n\n# \u6b21\u6570\u3092\u51fa\u529b\u3059\u308b\nfor i in range(1, N + 1):\n    print(degree[i])\n", "\n\n# \u5165\u529b\n\nn, m = map(int, input().split())\n\nroads = []\nfor i in range(m):\n    a, b = map(int, input().split())\n    roads.append([a, b])\n\n# \u51fa\u529b\nfor i in range(1, n+1):\n    count = 0\n    for road in roads:\n        if i in road:\n            count += 1\n\n    print(count)\n", "\nN, M = map(int, input().split())\n\n# \u5165\u529b\u3055\u308c\u305f\u8fba\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\u3092\u4f5c\u6210\nedge = []\n\n# \u5404\u9802\u70b9\u306e\u6b21\u6570\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\u3092\u4f5c\u6210\ndegree = [0] * (N + 1)\n\nfor i in range(M):\n    a, b = map(int, input().split())\n    edge.append([a, b])\n    # \u6b21\u6570\u3092\u8a08\u7b97\n    degree[a] += 1\n    degree[b] += 1\n\n# \u6b21\u6570\u3092\u51fa\u529b\u3059\u308b\nfor i in range(1, N + 1):\n    print(degree[i])\n", "\nn = int(input())\na = list(map(int, input().split()))\n\n# \u521d\u671f\u5316\ncount = 0\nbefore = 0\n\nfor i in range(n):\n    if before > a[i]:\n        count += before - a[i]\n        a[i] = before\n    before = a[i]\n\nprint(count)\n", "\nn, m = map(int, input().split()) # \u5165\u529b\n\nroads = [] # \u5165\u529b\nfor i in range(m):\n    a, b = map(int, input().split())\n    roads.append([a, b])\n\n# \u51fa\u529b\nfor i in range(1, n + 1):\n    count = 0\n    for road in roads:\n        if i in road:\n            count += 1\n    print(count)\n", "n, m = map(int, input().split())\nroads = []\nfor i in range(m):\n    a, b = map(int, input().split())\n    roads.append([a, b])\nfor i in range(1, n+1):\n    count = 0\n    for road in roads:\n        if i in road:\n            count += 1\n    print(count)\n\nn, m = map(int, input().split())\n\n# input\nroads = []\nfor i in range(m):\n    a, b = map(int, input().split())\n    roads.append([a, b])\n\n# output\nfor i in range(1, n+1):\n    count = 0\n    for road in roads:\n        if i in road:\n            count += 1\n    print(count)\n"]