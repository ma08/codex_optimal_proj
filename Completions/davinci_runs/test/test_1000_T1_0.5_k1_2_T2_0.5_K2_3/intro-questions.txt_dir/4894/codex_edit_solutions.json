["\nimport sys\n\ndef main():\n    note_map = {\n        'A': 'a',\n        'B': 'b',\n        'C': 'c',\n        'D': 'd',\n        'E': 'e',\n        'F': 'f',\n        'G': 'g'\n    }\n    num_notes = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    notes = [note.upper() for note in notes]\n    notes = [note.replace('2', '*') for note in notes]  # quarter note\n    notes = [note.replace('3', '**') for note in notes]  # eighth note\n    notes = [note.replace('4', '***') for note in notes]  # sixteenth note\n    notes = [note.replace('5', '****') for note in notes]  # thirty-second note\n    notes = [note.replace('6', '*****') for note in notes]  # sixty-fourth note\n    notes = [note.replace('7', '******') for note in notes]  # one hundred twenty-eighth note\n    notes = [note.replace('8', '*******') for note in notes]  # two hundred fifty-sixth note\n    notes = [note.replace('9', '********') for note in notes]  # five hundred twelfth note\n    \n    staff = {\n        'G': [],\n        'F': [],\n        'E': [],\n        'D': [],\n        'C': [],\n        'B': [],\n        'A': [],\n        'g': [],\n        'f': [],\n        'e': [],\n        'd': [],\n        'c': [],\n        'b': [],\n        'a': []\n    }\n    \n    for note in notes:\n        if len(note) == 1:\n            note += '*'\n        if note[0] in note_map:\n            staff[note_map[note[0]]].append(note[1:])\n        else:\n            staff[note[0]].append(note[1:])\n            \n    for key in staff:\n        print(key + ':', end='')\n        for i in range(len(staff[key])):\n            if i == 0:\n                print(' ' * (42 - len(staff[key][i])), end='')\n            else:\n                print(' ' * (44 - len(staff[key][i])), end='')\n            print(staff[key][i], end='')\n        print()\n        \nmain()\n", "\nimport sys\n\ndef main(argv):\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    lines = [l.strip() for l in sys.stdin.readlines()]\n    staff = []\n    for line in lines:\n        staff.append(line.split())\n    for note in notes:\n        if len(note) == 1:\n            staff[ord(note.lower()) - ord('a')].append('*')\n        else:\n            staff[ord(note[0].lower()) - ord('a')].append('*' * int(note[1]))\n    for line in staff:\n        print(' '.join(line))\n\n\nif __name__ == \"__main__\":\n    main(sys.argv)\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip()\n    notes = notes.split()\n    octave = {'c': 'C', 'd': 'D', 'e': 'E', 'f': 'F', 'g': 'G', 'a': 'A', 'b': 'B'}\n    staff = {'C': 'C:  ', 'D': 'D:  ', 'E': 'E:  ', 'F': 'F:  ', 'G': 'G:  ', 'A': 'A:  ', 'B': 'B:  '}\n    for x in range(0, n):\n        if len(notes[x]) == 1:\n            if notes[x].islower():\n                staff[octave[notes[x]]] += '*'\n            else:\n                staff[octave[notes[x].lower()]] += '*'\n        else:\n            if notes[x][0].islower():\n                staff[octave[notes[x][0]]] += '*'*int(notes[x][1])\n            else:\n                staff[octave[notes[x][0].lower()]] += '*'*int(notes[x][1])\n    for x in range(0, len(staff['C'])):\n        for y in staff.keys():\n            if x < len(staff[y]):\n                print(staff[y][x], end='')\n            else:\n                print(' ', end='')\n        print()\nmain()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split() # ['a3', 'b4']\n    lines = [l.strip() for l in sys.stdin.readlines()]\n    staff = []\n    for line in lines:\n        staff.append(line.split()) # staff [['F#', 'G#', 'A', 'B', 'C#', 'D#']]\n    for note in notes: # a3\n        if len(note) == 1: # a\n            staff[ord(note.lower()) - ord('a')].append('*') # staff[0].append('*')\n        else:\n            staff[ord(note[0].lower()) - ord('a')].append('*' * int(note[1]))\n    for line in staff:\n        print(' '.join(line))\n\nmain()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    staff = {'G': '', 'F': '', 'E': '', 'D': '', 'C': '', 'B': '', 'A': '', 'g': '', 'f': '', 'e': '', 'd': '', 'c': '', 'b': '', 'a': ''}\n    for note in notes:\n        if len(note) == 1:\n            staff[note] += '*'\n        else:\n            staff[note[0]] += '*'*int(note[1])\n    for line in ['G', 'F', 'E', 'D', 'C', 'B', 'A', 'g', 'f', 'e', 'd', 'c', 'b', 'a']:\n        print(line+': '+staff[line])\n\nmain()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip()\n    notes = notes.split()\n    octave = {'c': 'C', 'd': 'D', 'e': 'E', 'f': 'F', 'g': 'G', 'a': 'A', 'b': 'B'} \n    staff = {'C': 'C: ', 'D': 'D: ', 'E': 'E: ', 'F': 'F: ', 'G': 'G: ', 'A': 'A: ', 'B': 'B: '}\n    for x in range(0, n):\n        if len(notes[x]) == 1:\n            if notes[x].islower():\n                staff[octave[notes[x]]] += '*'\n            else:\n                staff[octave[notes[x].lower()]] += '*'\n        else:\n            if notes[x][0].islower():\n                staff[octave[notes[x][0]]] += '*'*int(notes[x][1])\n            else:\n                staff[octave[notes[x][0].lower()]] += '*'*int(notes[x][1])\n    for x in range(0, len(staff['C'])):\n        for y in staff.keys():\n            if x < len(staff[y]):\n                print(staff[y][x], end='')\n            else:\n                print(' ', end='')\n        print()\n\nmain()\n", "\n\nimport sys\n#sys.stdin = open(\"input.txt\", \"r\")\n\ndef print_staff(song):\n    staff = {'G':[], 'F':[], 'E':[], 'D':[], 'C':[], 'B':[], 'A':[], 'g':[], 'f':[], 'e':[], 'd':[], 'c':[], 'b':[], 'a':[]}\n    for note in song:\n        staff[note[0]].append(note[1])\n    for key in staff:\n        print(key + \":\", end=\"\")\n        for i in range(max(staff[key])):\n            if i < len(staff[key]):\n                print(\"*\" * staff[key][i])\n            print(\" \")\n        print()\n\ndef main():\n    n = int(input())\n    song = input().split()\n    song = [list(note) for note in song]\n    for note in song:\n        if len(note) == 1:\n            note.append(1)\n        else:\n            note[1] = int(note[1])\n    print_staff(song)\n\nif __name__ == '__main__':\n    main()\n", "# input\n\nn = int(input())\nnotes = input().split()\n# staff\n\nstaff = {'C': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'D': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'E': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'F': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'G': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'A': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'B': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'c': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'd': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'e': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'f': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'g': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'a': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'b': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:']}\n\n# write in the staff\nfor i in range(len(notes)):\n    note = notes[i]\n    duration = 1\n    if len(note) == 2:\n        duration = int(note[1])\n    if note[0] == 'C':\n        staff['C'][12] += '*' * duration + ' '\n    elif note[0] == 'D':\n        staff['D'][11] += '*' * duration + ' '\n    elif note[0] == 'E':\n        staff['E'][10] += '*' * duration + ' '\n    elif note[0] == 'F':\n        staff['F'][9] += '*' * duration + ' '\n    elif note[0] == 'G':\n        staff['G'][8] += '*' * duration + ' '\n    elif note[0] == 'A':\n        staff['A'][7] += '*' * duration + ' '\n    elif note[0] == 'B':\n        staff['B'][6] += '*' * duration + ' '\n    elif note[0] == 'c':\n        staff['C'][5] += '*' * duration + ' '\n    elif note[0] == 'd':\n        staff['D'][4] += '*' * duration + ' '\n    elif note[0] == 'e':\n        staff['E'][3] += '*' * duration + ' '\n    elif note[0] == 'f':\n        staff['F'][2] += '*' * duration + ' '\n    elif note[0] == 'g':\n        staff['G'][1] += '*' * duration + ' '\n    elif note[0] == 'a':\n        staff['A'][0] += '*' * duration + ' '\n    elif note[0] == 'b':\n        staff['B'][-1] += '*' * duration + ' '\n\n# print the staff\nfor i in range(len(staff['C'])):\n    print(staff['C'][i])\n", "\n\nimport sys\nsys.stdin = open(\"input.txt\", \"r\")\n\ndef main():\n    n = int(input())\n    song = input().split()\n    song = [list(note) for note in song]\n    for note in song:\n        if len(note) == 1:\n            note.append(1)\n        else:\n            note[1] = int(note[1])\n    staff = {'G':[], 'F':[], 'E':[], 'D':[], 'C':[], 'B':[], 'A':[], 'g':[], 'f':[], 'e':[], 'd':[], 'c':[], 'b':[], 'a':[]}\n    for note in song:\n        staff[note[0]].append(note[1])\n    for key in staff:\n        print(key + \":\", end=\"\")\n        for i in range(max(staff[key])):\n            if i < len(staff[key]):\n                print(\"*\" * staff[key][i], end=\"\")\n            print(\" \", end=\"\")\n        print()\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n\tn = int(sys.stdin.readline().strip())\n\tnotes = sys.stdin.readline().strip().split()\n\tlines = [l.strip() for l in sys.stdin.readlines()]\n\tstaff = []\n\tfor line in lines:\n\t\tstaff.append(line.split())\n\tfor note in notes:\n\t\tif len(note) == 1:\n\t\t\tstaff[ord(note.lower()) - ord('a')].append('*')\n\t\telse:\n\t\t\tstaff[ord(note[0].lower()) - ord('a')].append('*' * int(note[1]))\n\tfor line in staff:\n\t\tprint(' '.join(line))\n\nmain()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    staff = {'G': '', 'F': '', 'E': '', 'D': '', 'C': '', 'B': '', 'A': '', 'g': '', 'f': '', 'e': '', 'd': '', 'c': '', 'b': '', 'a': ''} \n    for note in notes:\n        if len(note) == 1:\n            staff[note] += '*'\n        else:\n            staff[note[0]] += '*'*int(note[1])\n    for l in ['G', 'F', 'E', 'D', 'C', 'B', 'A', 'g', 'f', 'e', 'd', 'c', 'b', 'a']:\n        print(l+': '+staff[l])\n\nmain()\n", "#! /usr/bin/python3\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    staff = {'G': '', 'F': '', 'E': '', 'D': '', 'C': '',\n             'B': '', 'A': '', 'g': '', 'f': '', 'e': '',\n             'd': '', 'c': '', 'b': '', 'a': ''}\n    for note in notes:\n        if len(note) == 1:\n            staff[note] += '*'\n        else:\n            staff[note[0]] += '*' * int(note[1])\n    for l in ['G', 'F', 'E', 'D', 'C', 'B', 'A',\n              'g', 'f', 'e', 'd', 'c', 'b', 'a']:\n        print(l+': '+staff[l])\n\nmain()\n", "\n\nn = int(input())  # number of notes\nnotes = input().split()\n\nstaff = {'C': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],  # staff\n         'D': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'E': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'F': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'G': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'A': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'B': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:']}  # staff\n\nfor i in range(len(notes)):\n    note = notes[i]  # current note\n    duration = 1\n    if len(note) == 2:\n        duration = int(note[1])  # duration of note\n    if note[0] == 'C':\n        staff['C'][12] += '*' * duration + ' '  # add note to staff\n    elif note[0] == 'D':\n        staff['D'][11] += '*' * duration + ' '\n    elif note[0] == 'E':\n        staff['E'][10] += '*' * duration + ' '\n    elif note[0] == 'F':\n        staff['F'][9] += '*' * duration + ' '\n    elif note[0] == 'G':\n        staff['G'][8] += '*' * duration + ' '\n    elif note[0] == 'A':\n        staff['A'][7] += '*' * duration + ' '\n    elif note[0] == 'B':\n        staff['B'][6] += '*' * duration + ' '\n    elif note[0] == 'c':\n        staff['C'][5] += '*' * duration + ' '\n    elif note[0] == 'd':\n        staff['D'][4] += '*' * duration + ' '\n    elif note[0] == 'e':\n        staff['E'][3] += '*' * duration + ' '\n    elif note[0] == 'f':\n        staff['F'][2] += '*' * duration + ' '\n    elif note[0] == 'g':\n        staff['G'][1] += '*' * duration + ' '\n    elif note[0] == 'a':\n        staff['A'][0] += '*' * duration + ' '\n    elif note[0] == 'b':\n        staff['B'][-1] += '*' * duration + ' '  # add note to staff\n\nfor i in range(len(staff['C'])):\n    print(staff['C'][i])  # print staff\n", "\n#\nimport sys\n\ndef main():\n    note_map = {\n        'A': 'a',\n        'B': 'b',\n        'C': 'c',\n        'D': 'd',\n        'E': 'e',\n        'F': 'f',\n        'G': 'g'\n    }\n    num_notes = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    notes = [note.upper() for note in notes]\n    notes = [note.replace('2', '*') for note in notes] # quarter note\n    notes = [note.replace('3', '**') for note in notes] # eighth note\n    notes = [note.replace('4', '***') for note in notes] # sixteenth note\n    notes = [note.replace('5', '****') for note in notes] # thirty-second note\n    notes = [note.replace('6', '*****') for note in notes] # sixty-fourth note\n    notes = [note.replace('7', '******') for note in notes] # one hundred twenty-eighth note\n    notes = [note.replace('8', '*******') for note in notes] # two hundred fifty-sixth note\n    notes = [note.replace('9', '********') for note in notes] # five hundred twelfth note\n    \n    staff = {\n        'G': [],\n        'F': [],\n        'E': [],\n        'D': [],\n        'C': [],\n        'B': [],\n        'A': [],\n        'g': [],\n        'f': [],\n        'e': [],\n        'd': [],\n        'c': [],\n        'b': [],\n        'a': []\n    }\n    \n    for note in notes:\n        if len(note) == 1:\n            note += '*'\n        if note[0] in note_map:\n            staff[note_map[note[0]]].append(note[1:])\n        else:\n            staff[note[0]].append(note[1:])\n            \n    for key in staff:\n        print(key + ':', end='')\n        for i in range(len(staff[key])):\n            if i == 0:\n                print(' ' * (42 - len(staff[key][i])), end='')\n            else:\n                print(' ' * (44 - len(staff[key][i])), end='')\n            print(staff[key][i], end='')\n        print()\n        \nmain()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    octave = {'c': 'C', 'd': 'D', 'e': 'E', 'f': 'F', 'g': 'G', 'a': 'A', 'b': 'B'}\n    staff = {'C': 'C:', 'D': 'D:', 'E': 'E:', 'F': 'F:', 'G': 'G:', 'A': 'A:', 'B': 'B:'}\n    for x in range(0, n):\n        if len(notes[x]) == 1:\n            if notes[x].islower():\n                staff[octave[notes[x]]] += '*'\n            else:\n                staff[octave[notes[x].lower()]] += '*'\n        else:\n            if notes[x][0].islower():\n                staff[octave[notes[x][0]]] += '*'*int(notes[x][1])\n            else:\n                staff[octave[notes[x][0].lower()]] += '*'*int(notes[x][1])\n    for x in range(0, max([len(staff[y]) for y in staff])):\n        for y in staff.keys():\n            if x < len(staff[y]):\n                print(staff[y][x], end='')\n            else:\n                print(' ', end='')\n        print()\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip()\n    notes = notes.split()\n    octave = {'c': 'C', 'd': 'D', 'e': 'E', 'f': 'F', 'g': 'G', 'a': 'A', 'b': 'B', 'C': 'C', 'D': 'D', 'E': 'E', 'F': 'F', 'G': 'G', 'A': 'A', 'B': 'B'}\n    staff = {'C': 'C:  ', 'D': 'D:  ', 'E': 'E:  ', 'F': 'F:  ', 'G': 'G:  ', 'A': 'A:  ', 'B': 'B:  '} \n    for x in range(0, n):\n        if len(notes[x]) == 1:\n            if notes[x].islower():\n                staff[octave[notes[x]]] += '* '\n            else:\n                staff[octave[notes[x].lower()]] += '* '\n        else:\n            if notes[x][0].islower():\n                staff[octave[notes[x][0]]] += '* '*int(notes[x][1])\n            else:\n                staff[octave[notes[x][0].lower()]] += '* '*int(notes[x][1])\n    for x in range(0, len(staff['C'])):\n        for y in staff.keys():\n            if x < len(staff[y]):\n                print(staff[y][x], end='')\n            else:\n                print(' ', end='')\n        print()\n\nmain()\n", "\nimport sys\nsys.stdin = open(\"input.txt\", \"r\")\n\ndef print_staff(song):\n    staff = {'G': [], 'F': [], 'E': [], 'D': [], 'C': [], 'B': [], 'A': [], 'g': [], 'f': [], 'e': [], 'd': [], 'c': [], 'b': [], 'a': []}\n    for note in song:\n        staff[note[0]].append(note[1])\n    for key in staff:\n        print(key + \":\", end=\"\")\n        for i in range(max(staff[key])):\n            if i < len(staff[key]):\n                print(\"*\" * staff[key][i], end=\"\")\n            print(\" \", end=\"\")\n        print()\n\ndef main():\n    n = int(input())\n    song = input().split()\n    song = [list(note) for note in song]\n    for note in song:\n        if len(note) == 1:\n            note.append(1)\n        else:\n            note[1] = int(note[1])\n    print_staff(song)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    note_map = {\n        'A': 'a',\n        'B': 'b',\n        'C': 'c',\n        'D': 'd',\n        'E': 'e',\n        'F': 'f',\n        'G': 'g'\n    }\n    num_notes = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    notes = [note.upper() for note in notes]\n    # replace 2 with *\n    notes = [note.replace('2', '*') for note in notes]\n    # replace 3 with **\n    notes = [note.replace('3', '**') for note in notes]\n    # replace 4 with ***\n    notes = [note.replace('4', '***') for note in notes]\n    # replace 5 with ****\n    notes = [note.replace('5', '****') for note in notes]\n    # replace 6 with *****\n    notes = [note.replace('6', '*****') for note in notes]\n    # replace 7 with ******\n    notes = [note.replace('7', '******') for note in notes]\n    # replace 8 with *******\n    notes = [note.replace('8', '*******') for note in notes]\n    # replace 9 with ********\n    notes = [note.replace('9', '********') for note in notes]\n    \n    staff = {\n        'G': [],\n        'F': [],\n        'E': [],\n        'D': [],\n        'C': [],\n        'B': [],\n        'A': [],\n        'g': [],\n        'f': [],\n        'e': [],\n        'd': [],\n        'c': [],\n        'b': [],\n        'a': []\n    }\n    \n    for note in notes:\n        if len(note) == 1:\n            note += '*'\n        if note[0] in note_map:\n            staff[note_map[note[0]]].append(note[1:])\n        else:\n            staff[note[0]].append(note[1:])\n\n    for key in staff:\n        print(key + ':', end='')\n        for i in range(len(staff[key])):\n            if i == 0:\n                print(' ' * (42 - len(staff[key][i])), end='')\n            else:\n                print(' ' * (44 - len(staff[key][i])), end='')\n            print(staff[key][i], end='')\n        print()\n\nmain()\n", "\nimport sys\n\ndef main(argv):\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    lines = [l.strip() for l in sys.stdin.readlines()]\n    staff = []\n    for line in lines:\n        staff.append(line.split()) # split each line\n    for note in notes:\n        if len(note) == 1: # if note is single\n            staff[ord(note.lower()) - ord('a')].append('*')\n        else: # if note is double\n            staff[ord(note[0].lower()) - ord('a')].append('*' * int(note[1]))\n    for line in staff: # print staff\n        print(' '.join(line))\n\nif __name__ == \"__main__\":\n    main(sys.argv)\n", "\n\nimport sys\n\ndef main():\n    note_map = {\n        'A': 'a',\n        'B': 'b',\n        'C': 'c',\n        'D': 'd',\n        'E': 'e',\n        'F': 'f',\n        'G': 'g'\n    }\n    num_notes = int(input())\n    notes = input().strip().split()\n    notes = [note.upper() for note in notes]\n    notes = [note.replace('1', '*') for note in notes]\n    notes = [note.replace('2', '**') for note in notes]\n    notes = [note.replace('3', '***') for note in notes]\n    notes = [note.replace('4', '****') for note in notes]\n    notes = [note.replace('5', '*****') for note in notes]\n    notes = [note.replace('6', '******') for note in notes]\n    notes = [note.replace('7', '*******') for note in notes]\n    notes = [note.replace('8', '********') for note in notes]\n    \n    staff = {\n        'G': [],\n        'F': [],\n        'E': [],\n        'D': [],\n        'C': [],\n        'B': [],\n        'A': [],\n        'g': [],\n        'f': [],\n        'e': [],\n        'd': [],\n        'c': [],\n        'b': [],\n        'a': []\n    }\n    \n    for note in notes:\n        if len(note) == 1:\n            note += '*'\n        if note[0] in note_map:\n            staff[note_map[note[0]]].append(note[1:])\n        else:\n            staff[note[0]].append(note[1:])\n            \n    for key in staff:\n        print(key + ':', end = '')\n        for i in range(len(staff[key])):\n            if i == 0:\n                print(' ' * (42 - len(staff[key][i])), end = '')\n            else:\n                print(' ' * (44 - len(staff[key][i])), end = '')\n            print(staff[key][i], end = '')\n        print()\n        \nmain()\n", "\n\nimport sys\n\ndef main():\n    note_map = {\n        'A': 'a',\n        'B': 'b',\n        'C': 'c',\n        'D': 'd',\n        'E': 'e',\n        'F': 'f',\n        'G': 'g'\n    }\n    num_notes = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    notes = [note.upper() for note in notes]\n    notes = [note.replace('1', '*') for note in notes]\n    notes = [note.replace('2', '**') for note in notes]\n    notes = [note.replace('3', '***') for note in notes]\n    notes = [note.replace('4', '****') for note in notes]\n    notes = [note.replace('5', '*****') for note in notes]\n    notes = [note.replace('6', '******') for note in notes]\n    notes = [note.replace('7', '*******') for note in notes]\n    notes = [note.replace('8', '********') for note in notes]\n    \n    staff = {\n        'G': [],\n        'F': [],\n        'E': [],\n        'D': [],\n        'C': [],\n        'B': [],\n        'A': [],\n        'g': [],\n        'f': [],\n        'e': [],\n        'd': [],\n        'c': [],\n        'b': [],\n        'a': []\n    }\n    \n    for note in notes:\n        if len(note) == 1:\n            note += '*'\n        if note[0] in note_map:\n            staff[note_map[note[0]]].append(note[1:])\n        else:\n            staff[note[0]].append(note[1:])\n            \n    for note in staff:\n        print(note + ':', end='')\n        for i in range(len(staff[note])):\n            if i == 0:\n                print(' ' * (42 - len(staff[note][i])), end='')\n            else:\n                print(' ' * (44 - len(staff[note][i])), end='')\n            print(staff[note][i], end='')\n        print()\n        \nmain()\n", "\nimport sys\n\ndef main():\n    note_map = {\n        'A': 'a',\n        'B': 'b',\n        'C': 'c',\n        'D': 'd',\n        'E': 'e',\n        'F': 'f',\n        'G': 'g',\n    }\n    num_notes = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    notes = [note.upper() for note in notes]\n    notes = [note.replace('2', '*') for note in notes]  # replace 2 with *\n    notes = [note.replace('3', '**') for note in notes]  # replace 3 with **\n    notes = [note.replace('4', '***') for note in notes]  # replace 4 with ***\n    notes = [note.replace('5', '****') for note in notes]  # replace 5 with ****\n    notes = [note.replace('6', '*****') for note in notes]  # replace 6 with *****\n    notes = [note.replace('7', '******') for note in notes]  # replace 7 with ******\n    notes = [note.replace('8', '*******') for note in notes]  # replace 8 with *******\n    notes = [note.replace('9', '********') for note in notes]  # replace 9 with ********\n\n    staff = {\n        'G': [],\n        'F': [],\n        'E': [],\n        'D': [],\n        'C': [],\n        'B': [],\n        'A': [],\n        'g': [],\n        'f': [],\n        'e': [],\n        'd': [],\n        'c': [],\n        'b': [],\n        'a': [],\n    }\n\n    for note in notes:\n        if len(note) == 1:\n            note += '*'\n        if note[0] in note_map:\n            staff[note_map[note[0]]].append(note[1:])\n        else:\n            staff[note[0]].append(note[1:])\n\n    for key in staff:\n        print(key + ':', end='')\n        for i in range(len(staff[key])):\n            if i == 0:\n                print(' ' * (42 - len(staff[key][i])), end='')\n            else:\n                print(' ' * (44 - len(staff[key][i])), end='')\n            print(staff[key][i], end='')\n        print()\n\nmain()\n", "\ndef main():\n    n = int(input())\n    notes = input().split()\n    staff = {'G':'', 'F':'', 'E':'', 'D':'', 'C':'', 'B':'', 'A':'',\n             'g':'', 'f':'', 'e':'', 'd':'', 'c':'', 'b':'', 'a':''}\n    for i in notes:\n        staff[i[0]] += '*'*(len(i) if len(i) > 1 else 1)\n    for key in ['G', 'F', 'E', 'D', 'C', 'B', 'A', 'g', 'f', 'e', 'd', 'c', 'b', 'a']:\n        print(key+': '+staff[key])\n\nmain()\n", "\n\nimport sys\n#sys.stdin = open(\"input.txt\", \"r\")\n\ndef print_staff(song):\n    staff = {'G':[], 'F':[], 'E':[], 'D':[], 'C':[], 'B':[], 'A':[], 'g':[], 'f':[], 'e':[], 'd':[], 'c':[], 'b':[], 'a':[]}\n    for note in song:\n    print()\n        staff[note[0]].append(note[1])\n    for key in staff:\n        print(key + \":\", end=\"\")\n        for i in range(max(staff[key])):\n            if i < len(staff[key]):\n                print(\"*\" * staff[key][i], end=\"\")\n            print(\" \", end=\"\")\n        print()\n\ndef main():\n    n = int(input())\n    song = input().split()\n    song = [list(note) for note in song]\n    for note in song:\n        if len(note) == 1:\n            note.append(1)\n        else:\n            note[1] = int(note[1])\n    print_staff(song)\n\nif __name__ == '__main__':\n    main()\n", "\n\nn = int(input())\nnotes = input().split()\n\nstaff = {'C': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'D': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'E': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'F': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'G': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'A': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'B': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         }\n\nfor i in range(len(notes)):\n    note = notes[i]\n    duration = 1\n    if len(note) == 2:\n        duration = int(note[1])\n    if note[0] == 'C':\n        staff['C'][12] += '*' * duration + ' '\n    elif note[0] == 'D':\n        staff['D'][11] += '*' * duration + ' '\n    elif note[0] == 'E':\n        staff['E'][10] += '*' * duration + ' '\n    elif note[0] == 'F':\n        staff['F'][9] += '*' * duration + ' '\n    elif note[0] == 'G':\n        staff['G'][8] += '*' * duration + ' '\n    elif note[0] == 'A':\n        staff['A'][7] += '*' * duration + ' '\n    elif note[0] == 'B':\n        staff['B'][6] += '*' * duration + ' '\n    elif note[0] == 'c':\n        staff['C'][5] += '*' * duration + ' '\n    elif note[0] == 'd':\n        staff['D'][4] += '*' * duration + ' '\n    elif note[0] == 'e':\n        staff['E'][3] += '*' * duration + ' '\n    elif note[0] == 'f':\n        staff['F'][2] += '*' * duration + ' '\n    elif note[0] == 'g':\n        staff['G'][1] += '*' * duration + ' '\n    elif note[0] == 'a':\n        staff['A'][0] += '*' * duration + ' '\n    elif note[0] == 'b':\n        staff['B'][-1] += '*' * duration + ' '\n\nfor i in range(len(staff['C'])):\n    print(staff['C'][i])\n", "\n\nimport sys\nsys.stdin = open(\"input.txt\", \"r\")\n\ndef print_staff(song):\n    staff = {'G': [], 'F': [], 'E': [], 'D': [], 'C': [], 'B': [], 'A': [], 'g': [], 'f': [], 'e': [], 'd': [], 'c': [], 'b': [], 'a': []}\n    for note in song:\n        staff[note[0]].append(note[1])\n    for key in staff:\n        print(key + \":\", end=\"\")\n        for i in range(max(staff[key])):\n            if i < len(staff[key]):\n                print(\"*\" * staff[key][i], end=\"\")\n            print(\" \", end=\"\")\n        print()\n\ndef main():\n    n = int(input())\n    song = input().split()\n    song = [list(note) for note in song]\n    for note in song:\n        if len(note) == 1:\n            note.append(1)\n        else:\n            note[1] = int(note[1])\n    print_staff(song)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    lines = [l.strip() for l in sys.stdin.readlines()]\n    staff = []\n    for line in lines:\n        staff.append(line.split())\n    for note in notes:\n        if len(note) == 1:\n            staff[ord(note.lower()) - ord('a')].append('*')\n        else:\n            staff[ord(note[0].lower()) - ord('a')].append('*' * int(note[1]))\n    for line in staff:\n        print(' '.join(line))\n\nif __name__ == '__main__':\n    main()\n", "import sys\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    staff = {'G':'', 'F':'', 'E':'', 'D':'', 'C':'', 'B':'', 'A':'', 'g':'', 'f':'', 'e':'', 'd':'', 'c':'', 'b':'', 'a':''}\n    for note in notes:\n        if len(note) == 1:\n            staff[note] += '*'\n        else:\n            staff[note[0]] += '*'*int(note[1])\n    for line in ['G', 'F', 'E', 'D', 'C', 'B', 'A', 'g', 'f', 'e', 'd', 'c', 'b', 'a']:\n        print(line+': '+staff[line])\n\nmain()\n", "\nn = int(input())   # number of notes\nnotes = input().split()\n\nstaff = {'C': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],    # staff\n         'D': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'E': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'F': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'G': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'A': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'B': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:']}    # staff\n\nfor i in range(len(notes)):\n    note = notes[i]    # current note\n    duration = 1\n    if len(note) == 2:\n        duration = int(note[1])    # duration of note\n    if note[0] == 'C':\n        staff['C'][12] += '*' * duration + ' '    # add note to staff\n    elif note[0] == 'D':\n        staff['D'][11] += '*' * duration + ' '\n    elif note[0] == 'E':\n        staff['E'][10] += '*' * duration + ' '\n    elif note[0] == 'F':\n        staff['F'][9] += '*' * duration + ' '\n    elif note[0] == 'G':\n        staff['G'][8] += '*' * duration + ' '\n    elif note[0] == 'A':\n        staff['A'][7] += '*' * duration + ' '\n    elif note[0] == 'B':\n        staff['B'][6] += '*' * duration + ' '\n    elif note[0] == 'c':\n        staff['C'][5] += '*' * duration + ' '\n    elif note[0] == 'd':\n        staff['D'][4] += '*' * duration + ' '\n    elif note[0] == 'e':\n        staff['E'][3] += '*' * duration + ' '\n    elif note[0] == 'f':\n        staff['F'][2] += '*' * duration + ' '\n    elif note[0] == 'g':\n        staff['G'][1] += '*' * duration + ' '\n    elif note[0] == 'a':\n        staff['A'][0] += '*' * duration + ' '\n    elif note[0] == 'b':\n        staff['B'][-1] += '*' * duration + ' '    # add note to staff\n\nfor i in range(len(staff['C'])):\n    print(staff['C'][i])    # print staff\n", "\nimport sys\nsys.stdin = open(\"input.txt\", \"r\")\n\ndef printStaff(song):\n    staff = {'G':[], 'F':[], 'E':[], 'D':[], 'C':[], 'B':[], 'A':[], 'g':[], 'f':[], 'e':[], 'd':[], 'c':[], 'b':[], 'a':[]}\n    for note in song:\n        staff[note[0]].append(note[1])\n    for key in staff:\n        print(key + \":\", end=\"\")\n        for i in range(max(staff[key])):\n            if i < len(staff[key]):\n                print(\"*\" * staff[key][i], end=\"\")\n            print(\" \", end=\"\")\n        print()\n\ndef main():\n    n = int(input())\n    song = input().split()\n    song = [list(note) for note in song]\n    for note in song:\n        if len(note) == 1:\n            note.append(1)\n        else:\n            note[1] = int(note[1])\n    printStaff(song)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n#sys.stdin = open(\"input.txt\", \"r\")\n\n\ndef print_staff(song):\n    staff = {'G': [], 'F': [], 'E': [], 'D': [], 'C': [], 'B': [], 'A': [], 'g': [], 'f': [], 'e': [], 'd': [], 'c': [], 'b': [], 'a': []}\n    for note in song:\n        staff[note[0]].append(note[1])\n    for key in staff:\n        print(key + \":\", end=\"\")\n        for i in range(max(staff[key])):\n            if i < len(staff[key]):\n                print(\"*\" * staff[key][i], end=\"\")\n            print(\" \", end=\"\")\n        print()\n\ndef main():\n    n = int(input())\n    song = input().split()\n    song = [list(note) for note in song]\n    for note in song:\n        if len(note) == 1:\n            note.append(1)\n        else:\n            note[1] = int(note[1])\n    print_staff(song)\n\nif __name__ == '__main__':\n    main()\n", "# input\n\nn = int(input())\nnotes = input().split()\n# staff\n\nstaff = {'C': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'D': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'E': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'F': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'G': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'A': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'B': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:']}\n\n# write in the staff\nfor i in range(len(notes)):\n    note = notes[i]\n    duration = 1\n    if len(note) == 2:\n        duration = int(note[1])\n    if note[0] == 'C' or note[0] == 'c':\n        staff['C'][12] += '*' * duration + ' '\n    elif note[0] == 'D' or note[0] == 'd':\n        staff['D'][11] += '*' * duration + ' '\n    elif note[0] == 'E' or note[0] == 'e':\n        staff['E'][10] += '*' * duration + ' '\n    elif note[0] == 'F' or note[0] == 'f':\n        staff['F'][9] += '*' * duration + ' '\n    elif note[0] == 'G' or note[0] == 'g':\n        staff['G'][8] += '*' * duration + ' '\n    elif note[0] == 'A' or note[0] == 'a':\n        staff['A'][7] += '*' * duration + ' '\n    elif note[0] == 'B' or note[0] == 'b':\n        staff['B'][6] += '*' * duration + ' '\n\n# print the staff\nfor i in range(len(staff['C'])):\n    print(staff['C'][i])\n", "#\n\nimport sys\n\ndef main():\n    note_map = {\n        'A': 'a',\n        'B': 'b',\n        'C': 'c',\n        'D': 'd',\n        'E': 'e',\n        'F': 'f',\n        'G': 'g'\n    }\n    num_notes = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    notes = [note.upper() for note in notes]\n    notes = [note.replace('1', '*') for note in notes]\n    notes = [note.replace('2', '**') for note in notes]\n    notes = [note.replace('3', '***') for note in notes]\n    notes = [note.replace('4', '****') for note in notes]\n    notes = [note.replace('5', '*****') for note in notes]\n    notes = [note.replace('6', '******') for note in notes]\n    notes = [note.replace('7', '*******') for note in notes]\n    notes = [note.replace('8', '********') for note in notes]\n    \n    staff = {\n        'G': [],\n        'F': [],\n        'E': [],\n        'D': [],\n        'C': [],\n        'B': [],\n        'A': [],\n        'g': [],\n        'f': [],\n        'e': [],\n        'd': [],\n        'c': [],\n        'b': [],\n        'a': []\n    }\n    \n    for note in notes:\n        if len(note) == 1:\n            note += '*'\n        if note[0] in note_map:\n            staff[note_map[note[0]]].append(note[1:])\n        else:\n            staff[note[0]].append(note[1:])\n            \n    for key in staff:\n        print(key + ':', end='')\n        for i in range(len(staff[key])):\n            if i == 0:\n                print(' ' * (42 - len(staff[key][i])), end='')\n            else:\n                print(' ' * (44 - len(staff[key][i])), end='')\n            print(staff[key][i], end='')\n        print()\n        \nmain()\n", "\n\nn = int(input())\nnotes = input().split()\n\nstaff = {'C': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'D': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'E': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'F': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'G': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'A': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'B': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:']\n         }\n\nfor i in range(len(notes)):\n    note = notes[i]\n    duration = 1\n    if len(note) == 2:\n        duration = int(note[1])\n    if note[0] == 'C':\n        staff['C'][12] += '*' * duration + ' '\n    elif note[0] == 'D':\n        staff['D'][11] += '*' * duration + ' '\n    elif note[0] == 'E':\n        staff['E'][10] += '*' * duration + ' '\n    elif note[0] == 'F':\n        staff['F'][9] += '*' * duration + ' '\n    elif note[0] == 'G':\n        staff['G'][8] += '*' * duration + ' '\n    elif note[0] == 'A':\n        staff['A'][7] += '*' * duration + ' '\n    elif note[0] == 'B':\n        staff['B'][6] += '*' * duration + ' '\n    elif note[0] == 'c':\n        staff['C'][5] += '*' * duration + ' '\n    elif note[0] == 'd':\n        staff['D'][4] += '*' * duration + ' '\n    elif note[0] == 'e':\n        staff['E'][3] += '*' * duration + ' '\n    elif note[0] == 'f':\n        staff['F'][2] += '*' * duration + ' '\n    elif note[0] == 'g':\n        staff['G'][1] += '*' * duration + ' '\n    elif note[0] == 'a':\n        staff['A'][0] += '*' * duration + ' '\n    elif note[0] == 'b':\n        staff['B'][0] += '*' * duration + ' '\n\nfor i in range(len(staff['C'])):\n    print(staff['C'][i])\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    staff = {'G':'', 'F':'', 'E':'', 'D':'', 'C':'', 'B':'', 'A':'', 'g':'', 'f':'', 'e':'', 'd':'', 'c':'', 'b':'', 'a':''} \n    for note in notes:\n        if len(note) == 1:\n            staff[note] += '*'\n        else:\n            staff[note[0]] += '*'*int(note[1])\n    for line in ['G', 'F', 'E', 'D', 'C', 'B', 'A', 'g', 'f', 'e', 'd', 'c', 'b', 'a']:\n        print(line+': '+staff[line])\n\nmain()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip()\n    notes = notes.split()\n    octave = {'c': 'C', 'd': 'D', 'e': 'E', 'f': 'F', 'g': 'G', 'a': 'A', 'b': 'B'}\n    staff = {'C': 'C:  ', 'D': 'D:  ', 'E': 'E:  ', 'F': 'F:  ', 'G': 'G:  ', 'A': 'A:  ', 'B': 'B:  '}\n    for x in range(0, n):\n        if len(notes[x]) == 1:\n            if notes[x].islower():\n                staff[octave[notes[x]]] += '*'\n            else:\n                staff[octave[notes[x].lower()]] += '*'\n        else:\n            if notes[x][0].islower():\n                staff[octave[notes[x][0]]] += '*'*int(notes[x][1])\n            else:\n                staff[octave[notes[x][0].lower()]] += '*'*int(notes[x][1])\n    for x in range(0, len(staff['C'])):\n        for y in staff.keys():\n            if x < len(staff[y]):\n                print(staff[y][x], end='')\n            else:\n                print(' ', end='')\n        print()\n\nmain()\n", "\n\nimport sys\nsys.stdin = open('input.txt', 'r')\n\ndef printStaff(song):\n    staff = {'G':[], 'F':[], 'E':[], 'D':[], 'C':[], 'B':[], 'A':[], 'g':[], 'f':[], 'e':[], 'd':[], 'c':[], 'b':[], 'a':[]}\n    for note in song:\n        staff[note[0]].append(note[1])\n    for key in staff:\n        print(key + ':', end='')\n        for i in range(max(staff[key])):\n            if i < len(staff[key]):\n                print('*' * staff[key][i], end='')\n            print(' ', end='')\n        print()\n\ndef main():\n    n = int(input())\n    song = input().split()\n    song = [list(note) for note in song]\n    for note in song:\n        if len(note) == 1:\n            note.append(1)\n        else:\n            note[1] = int(note[1])\n    printStaff(song)\n\nif __name__ == '__main__':\n    main()\n", "\n\nn = int(input())\nnotes = input().split()\n#\nstaff = {'C': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'D': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'E': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'F': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'G': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'A': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'B': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:']\n         }\n\nfor i in range(len(notes)):\n    note = notes[i]\n    duration = 1\n    if len(note) == 2:\n        duration = int(note[1])\n    if note[0] == 'C':\n        staff['C'][12] += '*' * duration + ' '\n    elif note[0] == 'D':\n        staff['D'][11] += '*' * duration + ' '\n    elif note[0] == 'E':\n        staff['E'][10] += '*' * duration + ' '\n    elif note[0] == 'F':\n        staff['F'][9] += '*' * duration + ' '\n    elif note[0] == 'G':\n        staff['G'][8] += '*' * duration + ' '\n    elif note[0] == 'A':\n        staff['A'][7] += '*' * duration + ' '\n    elif note[0] == 'B':\n        staff['B'][6] += '*' * duration + ' '\n    elif note[0] == 'c':\n        staff['C'][5] += '*' * duration + ' '\n    elif note[0] == 'd':\n        staff['D'][4] += '*' * duration + ' '\n    elif note[0] == 'e':\n        staff['E'][3] += '*' * duration + ' '\n    elif note[0] == 'f':\n        staff['F'][2] += '*' * duration + ' '\n    elif note[0] == 'g':\n        staff['G'][1] += '*' * duration + ' '\n    elif note[0] == 'a':\n        staff['A'][0] += '*' * duration + ' '\n    elif note[0] == 'b':\n        staff['B'][-1] += '*' * duration + ' '\n\nfor i in range(len(staff['C'])):\n    print(staff['C'][i])\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip()\n    notes = notes.split()\n    octave = {'c': 'C', 'd': 'D', 'e': 'E', 'f': 'F', 'g': 'G', 'a': 'A', 'b': 'B', 'C': 'C', 'D': 'D', 'E': 'E', 'F': 'F', 'G': 'G', 'A': 'A', 'B': 'B'}\n    staff = {'C': 'C:', 'D': 'D:', 'E': 'E:', 'F': 'F:', 'G': 'G:', 'A': 'A:', 'B': 'B:'}        \n    for x in range(0, n):\n        if len(notes[x]) == 1:\n            if notes[x].islower():\n                staff[octave[notes[x]]] += '*'\n            else:\n                staff[notes[x]] += '*'\n        else:\n            if notes[x][0].islower():\n                staff[octave[notes[x][0]]] += '*'*int(notes[x][1])\n            else:\n                staff[notes[x][0]] += '*'*int(notes[x][1])\n    for x in range(0, len(staff['C'])):\n        for y in staff.keys():\n            if x < len(staff[y]):\n                print(staff[y][x], end='')\n            else:\n                print(' ', end='')\n        print()\n\nmain()\n", "\n\n\ndef print_staff(staff):\n    for key in ['G', 'F', 'E', 'D', 'C', 'B', 'A', 'g', 'f', 'e', 'd', 'c', 'b', 'a']:\n        print(key+': '+staff[key])\n\n\ndef main():\n    n = int(input())\n    notes = input().split()\n    staff = {'G':'', 'F':'', 'E':'', 'D':'', 'C':'', 'B':'', 'A':'',\n             'g':'', 'f':'', 'e':'', 'd':'', 'c':'', 'b':'', 'a':''}\n    for i in notes:\n        staff[i[0]] += '*'*(len(i) if len(i) > 1 else 1)\n    for key in ['G', 'F', 'E', 'D', 'C', 'B', 'A', 'g', 'f', 'e', 'd', 'c', 'b', 'a']:\n        print(key+': '+staff[key])\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    lines = [l.strip() for l in sys.stdin.readlines()]\n    staff = [] # [['*'], ['*'], ['*'], ['*'], ['*'], ['*'], ['*'], ['*']]\n    for line in lines:\n        staff.append(list(line))\n    for note in notes: # a3\n        if len(note) == 1: # a\n            staff[ord(note.lower()) - ord('a')].append('*')\n        else:\n            staff[ord(note[0].lower()) - ord('a')].extend(['*'] * int(note[1]))\n    for line in staff:\n        print(' '.join(line))\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    staff = {'G': '', 'F': '', 'E': '', 'D': '', 'C': '', 'B': '', 'A': '', 'g': '', 'f': '', 'e': '', 'd': '', 'c': '', 'b': '', 'a': ''} # staff\n    for note in notes:\n        if len(note) == 1:\n            staff[note] += '*'\n        else:\n            staff[note[0]] += '*'*int(note[1])\n    for l in ['G', 'F', 'E', 'D', 'C', 'B', 'A', 'g', 'f', 'e', 'd', 'c', 'b', 'a']:\n        print(l+': '+staff[l])\n\nmain()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    octave = {'c': 'C', 'd': 'D', 'e': 'E', 'f': 'F', 'g': 'G', 'a': 'A', 'b': 'B'}\n    staff = {'C': 'C:', 'D': 'D:', 'E': 'E:', 'F': 'F:', 'G': 'G:', 'A': 'A:', 'B': 'B:'}\n    for x in range(n):\n        if len(notes[x]) == 1:\n            if notes[x].islower():\n                staff[octave[notes[x]]] += '*'\n            else:\n                staff[octave[notes[x].lower()]] += '*'\n        else:\n            if notes[x][0].islower():\n                staff[octave[notes[x][0]]] += '*'*int(notes[x][1])\n            else:\n                staff[octave[notes[x][0].lower()]] += '*'*int(notes[x][1])\n    for x in range(len(staff['C'])):\n        for y in staff.keys():\n            if x < len(staff[y]):\n                print(staff[y][x], end='')\n            else:\n                print(' ', end='')\n        print()\n\nmain()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    lines = [l.strip() for l in sys.stdin.readlines()]\n    staff = []\n    for line in lines:\n        staff.append(line.split())\n    for note in notes:\n        if len(note) == 1:\n            staff[ord(note.lower()) - ord('a')].append('*')\n        else:\n            staff[ord(note[0].lower()) - ord('a')].append('*' * int(note[1]))\n    for line in staff:\n        print(' '.join(line))\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    note_map = {\n        'A': 'a',\n        'B': 'b',\n        'C': 'c',\n        'D': 'd',\n        'E': 'e',\n        'F': 'f',\n        'G': 'g'\n    }\n    num_notes = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    notes = [note.upper() for note in notes]\n    notes = [note.replace('2', '*') for note in notes] # quarter note\n    notes = [note.replace('3', '**') for note in notes] # eighth note\n    notes = [note.replace('4', '***') for note in notes] # sixteenth note\n    notes = [note.replace('5', '****') for note in notes] # thirty-second note\n    notes = [note.replace('6', '*****') for note in notes] # sixty-fourth note\n    notes = [note.replace('7', '******') for note in notes] # one hundred twenty-eighth note (not used)\n    notes = [note.replace('8', '*******') for note in notes] # two hundred fifty-sixth note (not used)\n    notes = [note.replace('9', '********') for note in notes] # five hundred twelfth note (not used)\n    \n    staff = {\n        'G': [],\n        'F': [],\n        'E': [],\n        'D': [],\n        'C': [],\n        'B': [],\n        'A': [],\n        'g': [],\n        'f': [],\n        'e': [],\n        'd': [],\n        'c': [],\n        'b': [],\n        'a': []\n    }\n    \n    for note in notes:\n        if len(note) == 1:\n            note += '*'\n        if note[0] in note_map:\n            staff[note_map[note[0]]].append(note[1:])\n        else:\n            staff[note[0]].append(note[1:])\n            \n    for key in staff:\n        print(key + ':', end='')\n        for i in range(len(staff[key])):\n            if i == 0:\n                print(' ' * (42 - len(staff[key][i])), end='')\n            else:\n                print(' ' * (44 - len(staff[key][i])), end='')\n            print(staff[key][i], end='')\n        print()\n        \nmain()\n", "\nimport sys\n\ndef main(argv):\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    lines = [l.strip() for l in sys.stdin.readlines()][:5]\n    staff = []\n    staff_letters = 'abcde'\n    for line in lines:\n        staff.append(line.split()[:n])\n    for note in notes:\n        if len(note) == 1:\n            staff[ord(note.lower()) - ord('a')][0] = '*'\n        else:\n            staff[ord(note[0].lower()) - ord('a')][0] = '*' * int(note[1])\n    for line in staff:\n        print(' '.join(line))\n\nif __name__ == \"__main__\":\n    main(sys.argv)\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    lines = [l.strip() for l in sys.stdin.readlines()]\n    staff = []\n    for line in lines:\n        staff.append(line.split())\n    for note in notes:\n        if len(note) == 1:\n            staff[ord(note.lower()) - ord('a')].append('*')\n        else:\n            staff[ord(note[0].lower()) - ord('a')].append('*' * int(note[1]))\n    for line in staff:\n        print(' '.join(line))\n\nmain()\n", "\n\ndef main():\n    n = int(input())\n    notes = input().split()\n    staff = {'G': '', 'F': '', 'E': '', 'D': '', 'C': '', 'B': '', 'A': '',\n             'g': '', 'f': '', 'e': '', 'd': '', 'c': '', 'b': '', 'a': ''}\n    for i in notes:\n        staff[i[0]] += '*' * (len(i) if len(i) > 1 else 1)\n    for key in ['G', 'F', 'E', 'D', 'C', 'B', 'A',\n                'g', 'f', 'e', 'd', 'c', 'b', 'a']:\n        print(key + ': ' + staff[key])\n\n\nmain()\n", "# input\n\nn = int(input())\nnotes = input().split()\n# staff\n\nstaff = {'C': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'], 'D': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'], 'E': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'], 'F': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'], 'G': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'], 'A': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'], 'B': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:']}\n\n# write in the staff\nfor i in range(len(notes)):\n    note = notes[i]\n    duration = 1\n    if len(note) == 2:\n        duration = int(note[1])\n    if note[0] == 'C':\n        staff['C'][12] += '*' * duration + ' '\n    elif note[0] == 'D':\n        staff['D'][11] += '*' * duration + ' '\n    elif note[0] == 'E':\n        staff['E'][10] += '*' * duration + ' '\n    elif note[0] == 'F':\n        staff['F'][9] += '*' * duration + ' '\n    elif note[0] == 'G':\n        staff['G'][8] += '*' * duration + ' '\n    elif note[0] == 'A':\n        staff['A'][7] += '*' * duration + ' '\n    elif note[0] == 'B':\n        staff['B'][6] += '*' * duration + ' '\n    elif note[0] == 'c':\n        staff['C'][5] += '*' * duration + ' '\n    elif note[0] == 'd':\n        staff['D'][4] += '*' * duration + ' '\n    elif note[0] == 'e':\n        staff['E'][3] += '*' * duration + ' '\n    elif note[0] == 'f':\n        staff['F'][2] += '*' * duration + ' '\n    elif note[0] == 'g':\n        staff['G'][1] += '*' * duration + ' '\n    elif note[0] == 'a':\n        staff['A'][0] += '*' * duration + ' '\n    elif note[0] == 'b':\n        staff['B'][-1] += '*' * duration + ' '\n\n# print the staff\nfor i in range(len(staff['C'])):\n    print(staff['C'][i])\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip()\n    notes = notes.split()\n    octave = {'c': 'C', 'd': 'D', 'e': 'E', 'f': 'F', 'g': 'G', 'a': 'A', 'b': 'B'} \n    staff = {'C': 'C: ', 'D': 'D: ', 'E': 'E: ', 'F': 'F: ', 'G': 'G: ', 'A': 'A: ', 'B': 'B: '}\n    for x in range(n):\n        if len(notes[x]) == 1:\n            if notes[x].islower():\n                staff[octave[notes[x]]] += '*'\n            else:\n                staff[octave[notes[x].lower()]] += '*'\n        else:\n            if notes[x][0].islower():\n                staff[octave[notes[x][0]]] += '*'*int(notes[x][1])\n            else:\n                staff[octave[notes[x][0].lower()]] += '*'*int(notes[x][1])\n    for x in range(len(staff['C'])):\n        for y in staff.keys():\n            if x < len(staff[y]):\n                print(staff[y][x], end='')\n            else:\n                print(' ', end='')\n        print()\n\nmain()\n", "\n\nimport sys\nimport re\nn = int(input())\nfor i in range(n):\n    a = input()\n    if re.match(r'^[A-Za-z0-9_]+@[A-Za-z0-9_]+\\.[A-Za-z0-9_]+$', a):\n        print('YES')\n    else:\n        print('NO')\n"]