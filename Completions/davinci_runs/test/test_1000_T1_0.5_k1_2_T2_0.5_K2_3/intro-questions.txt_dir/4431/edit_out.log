2022-04-12 20:36:02.628003 num operations 2
2022-04-12 20:36:02.628020 size on input set 1
2022-04-12 20:36:08.196132 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n,k = map(int,input().split())\n    s = input()\n    k = set(input().split())\n    c = 0\n    for i in range(n):\n        for j in range(i+1,n+1):\n            if set(s[i:j])<=k:\n                c+=1\n    print(c)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, k = map(int,input().split())\n    s = input()\n    k = set(input().split())\n    c = 0\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            if set(s[i:j]) <= k:\n                c += 1\n    print(c)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n    # input n and k\ndef main():\n    # input string\n    n,k = map(int,input().split())\n    # input k\n    s = input()\n    # initialise count\n    k = input().split()\n    # loop for substrings\n    c = 0\n    for i in range(n):\n            # check if characters in substring are present in k\n        for j in range(i+1,n+1):\n                # increase count\n            if set(s[i:j])<=set(k):\n                c+=1\n    print(c)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649795762,
  "object": "edit"
}
2022-04-12 20:36:08.196354 fix spelling mistakes 3 ['\n\ndef main():\n    n,k = map(int,input().split())\n    s = input()\n    k = set(input().split())\n    c = 0\n    for i in range(n):\n        for j in range(i+1,n+1):\n            if set(s[i:j])<=k:\n                c+=1\n    print(c)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, k = map(int,input().split())\n    s = input()\n    k = set(input().split())\n    c = 0\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            if set(s[i:j]) <= k:\n                c += 1\n    print(c)\n\nif __name__ == "__main__":\n    main()\n', '\n\n    # input n and k\ndef main():\n    # input string\n    n,k = map(int,input().split())\n    # input k\n    s = input()\n    # initialise count\n    k = input().split()\n    # loop for substrings\n    c = 0\n    for i in range(n):\n            # check if characters in substring are present in k\n        for j in range(i+1,n+1):\n                # increase count\n            if set(s[i:j])<=set(k):\n                c+=1\n    print(c)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 20:36:08.196385 size on output set 3
2022-04-12 20:36:08.196392 size on input set 3
2022-04-12 20:36:12.172942 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n    # input n and k\ndef main():\n    # input string\n    n,k = map(int,input().split())\n    # input k\n    s = input()\n    # initialise count\n    s = input().split()\n    # loop for substrings\n    c = 0\n    for i in range(n):\n            # check if characters in substring are present in k\n        for j in range(i+1,n+1):\n                # increase count\n            if set(s[i:j])<=set(k):\n                c+=1\n    print(c)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # input n\n    n,k = map(int,input().split())\n    # input k\n    s = input()\n    # input k\n    k = input().split()\n    # initialise count\n    c = 0\n    for i in range(n):\n        # loop for substrings\n        for j in range(i+1,n+1):\n            # check if characters in substring are present in k\n            if set(s[i:j])<=set(k):\n                # increase count\n                c+=1\n    print(c)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    # input n,k\n    n,k = map(int,input().split())\n    # input k\n    s = input()\n    k = input().split()\n    # initialise count\n    c = 0\n    for i in range(n):\n        for j in range(i+1,n+1):\n            # check if characters in substring are present in k\n            if set(s[i:j])<=set(k):\n                c+=1\n    print(c)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649795768,
  "object": "edit"
}
2022-04-12 20:36:12.173114 fix syntax errors 3 ['\n\n    # input n and k\ndef main():\n    # input string\n    n,k = map(int,input().split())\n    # input k\n    s = input()\n    # initialise count\n    s = input().split()\n    # loop for substrings\n    c = 0\n    for i in range(n):\n            # check if characters in substring are present in k\n        for j in range(i+1,n+1):\n                # increase count\n            if set(s[i:j])<=set(k):\n                c+=1\n    print(c)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # input n\n    n,k = map(int,input().split())\n    # input k\n    s = input()\n    # input k\n    k = input().split()\n    # initialise count\n    c = 0\n    for i in range(n):\n        # loop for substrings\n        for j in range(i+1,n+1):\n            # check if characters in substring are present in k\n            if set(s[i:j])<=set(k):\n                # increase count\n                c+=1\n    print(c)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # input n,k\n    n,k = map(int,input().split())\n    # input k\n    s = input()\n    k = input().split()\n    # initialise count\n    c = 0\n    for i in range(n):\n        for j in range(i+1,n+1):\n            # check if characters in substring are present in k\n            if set(s[i:j])<=set(k):\n                c+=1\n    print(c)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 20:36:16.916590 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    k = set(input().split())\n    c = 0\n    for i in range(n):\n        for j in range(i+1, n+1):\n            if set(s[i:j]) <= k:\n                c += 1\n    print(c)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n,k = map(int,input().split())\n    s = input()\n    k = set(map(int,input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i+1,n+1):\n            if set(map(int,s[i:j]))<=k:\n                c+=1\n    print(c)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    k = set(input().split())\n    count = 0\n    for i in range(len(s)):\n        for j in range(i+1, len(s)+1):\n            if set(s[i:j]) <= k:\n                count += 1\n    print(count)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649795772,
  "object": "edit"
}
2022-04-12 20:36:16.916823 fix syntax errors 3 ['\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    k = set(input().split())\n    c = 0\n    for i in range(n):\n        for j in range(i+1, n+1):\n            if set(s[i:j]) <= k:\n                c += 1\n    print(c)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n,k = map(int,input().split())\n    s = input()\n    k = set(map(int,input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i+1,n+1):\n            if set(map(int,s[i:j]))<=k:\n                c+=1\n    print(c)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    k = set(input().split())\n    count = 0\n    for i in range(len(s)):\n        for j in range(i+1, len(s)+1):\n            if set(s[i:j]) <= k:\n                count += 1\n    print(count)\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 20:36:19.883088 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, k = map(int,input().split())\n    s = input()\n    k = input().split()\n    k = set(k)\n    c = 0\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            if set(s[i:j]) <= k:\n                c += 1\n    print(c)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, k = map(int,input().split())\n    s = input()\n    k = set(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            if set(map(int, s[i:j])) <= k:\n                c += 1\n    print(c)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    k = set(input().split())\n    c = 0\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            if set(s[i:j]) <= k:\n                c += 1\n    print(c)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649795776,
  "object": "edit"
}
2022-04-12 20:36:19.883388 fix syntax errors 3 ['\n\ndef main():\n    n, k = map(int,input().split())\n    s = input()\n    k = input().split()\n    k = set(k)\n    c = 0\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            if set(s[i:j]) <= k:\n                c += 1\n    print(c)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, k = map(int,input().split())\n    s = input()\n    k = set(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            if set(map(int, s[i:j])) <= k:\n                c += 1\n    print(c)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    k = set(input().split())\n    c = 0\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            if set(s[i:j]) <= k:\n                c += 1\n    print(c)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 20:36:19.883420 size on output set 9
2022-04-12 20:36:19.883431 num operations 2
2022-04-12 20:36:19.883437 size on input set 1
2022-04-12 20:36:22.098512 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    n, k = list(map(int, input().split()))\n    s = list(input())\n    available_chars = set(input().split())\n    s_set = set(s)\n\n    count = 0\n    for i in range(1, n+1):\n        for j in range(0, n-i+1):\n            if s_set.issubset(available_chars):\n                count += 1\n            s_set.remove(s[j])\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    n, k = list(map(int, input().split()))\n    s = list(input())\n    available_chars = set(input().split())\n    s_set = set(s)\n    # print(s_set)\n    # print(available_chars)\n    count = 0\n    for i in range(1, n+1):\n        for j in range(0, n-i+1):\n            if s_set.issubset(available_chars):\n                count += 1\n            s_set.remove(s[j])\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    n, k = list(map(int, input().split()))\n    s = list(input())\n    available_chars = set(input().split())\n    s_set = set(s)\n    # print(s_set)\n    # print(available_chars)\n    count = 0\n    for i in range(1, n+1):\n        for j in range(0, n-i+1):\n            if s_set.issubset(available_chars):\n                count += 1\n            s_set.remove(s[j])\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649795779,
  "object": "edit"
}
2022-04-12 20:36:22.098683 fix spelling mistakes 3 ['\n\ndef main():\n    """\n    Main function\n    """\n    n, k = list(map(int, input().split()))\n    s = list(input())\n    available_chars = set(input().split())\n    s_set = set(s)\n\n    count = 0\n    for i in range(1, n+1):\n        for j in range(0, n-i+1):\n            if s_set.issubset(available_chars):\n                count += 1\n            s_set.remove(s[j])\n    print(count)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    Main function\n    """\n    n, k = list(map(int, input().split()))\n    s = list(input())\n    available_chars = set(input().split())\n    s_set = set(s)\n    # print(s_set)\n    # print(available_chars)\n    count = 0\n    for i in range(1, n+1):\n        for j in range(0, n-i+1):\n            if s_set.issubset(available_chars):\n                count += 1\n            s_set.remove(s[j])\n    print(count)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    Main function\n    """\n    n, k = list(map(int, input().split()))\n    s = list(input())\n    available_chars = set(input().split())\n    s_set = set(s)\n    # print(s_set)\n    # print(available_chars)\n    count = 0\n    for i in range(1, n+1):\n        for j in range(0, n-i+1):\n            if s_set.issubset(available_chars):\n                count += 1\n            s_set.remove(s[j])\n    print(count)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 20:36:22.098719 size on output set 2
2022-04-12 20:36:22.098726 size on input set 2
2022-04-12 20:36:25.052306 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    n, k = map(int, input().split())\n    s = list(input())\n    available_chars = set(input().split())\n    s_set = set(s)\n\n    count = 0\n    for i in range(1, n+1):\n        for j in range(0, n-i+1):\n            if s_set.issubset(available_chars):\n                count += 1\n            s_set.remove(s[j])\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    n, k = list(map(int, input().split()))\n    s = list(input())\n    available_chars = set(input().split())\n    s_set = set(s)\n\n    count = 0\n    for i in range(1, n + 1):\n        for j in range(0, n - i + 1):\n            if s_set.issubset(available_chars):\n                count += 1\n            s_set.remove(s[j])\n    print(count)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    n, k = list(map(int, input().split()))\n    s = list(input())\n    available_chars = set(input().split())\n    s_set = set(s)\n\n    count = 0\n    for i in range(1, n + 1):\n        for j in range(0, n - i + 1):\n            if s_set.issubset(available_chars):\n                count += 1\n            s_set.remove(s[j])\n    print(count)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649795782,
  "object": "edit"
}
2022-04-12 20:36:25.052493 fix syntax errors 3 ['\n\ndef main():\n    """\n    Main function\n    """\n    n, k = map(int, input().split())\n    s = list(input())\n    available_chars = set(input().split())\n    s_set = set(s)\n\n    count = 0\n    for i in range(1, n+1):\n        for j in range(0, n-i+1):\n            if s_set.issubset(available_chars):\n                count += 1\n            s_set.remove(s[j])\n    print(count)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    Main function\n    """\n    n, k = list(map(int, input().split()))\n    s = list(input())\n    available_chars = set(input().split())\n    s_set = set(s)\n\n    count = 0\n    for i in range(1, n + 1):\n        for j in range(0, n - i + 1):\n            if s_set.issubset(available_chars):\n                count += 1\n            s_set.remove(s[j])\n    print(count)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    Main function\n    """\n    n, k = list(map(int, input().split()))\n    s = list(input())\n    available_chars = set(input().split())\n    s_set = set(s)\n\n    count = 0\n    for i in range(1, n + 1):\n        for j in range(0, n - i + 1):\n            if s_set.issubset(available_chars):\n                count += 1\n            s_set.remove(s[j])\n    print(count)\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 20:36:31.532336 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    n, k = list(map(int, input().split()))\n    s = list(input())\n    available_chars = set(input().split())\n    s_set = set(s)\n    # print(s_set)\n    # print(available_chars)\n    count = 0\n    for i in range(1, n+1):\n        for j in range(0, n-i+1):\n            if s_set.issubset(available_chars):\n                count += 1\n            s_set.remove(s[j])\n    print(count)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, k = list(map(int, input().split()))\n    s = list(input())\n    available_chars = set(input().split())  # set of available characters\n    s_set = set(s)\n    count = 0\n    for i in range(1, n + 1):\n        for j in range(0, n - i + 1):\n            if s_set.issubset(available_chars):  # check if available chars has all the characters of s_set\n                count += 1\n            s_set.remove(s[j])  # remove the first element\n    print(count)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    n, k = list(map(int, input().split()))\n    s = list(input())\n    available_chars = set(input().split())\n    s_set = set(s)\n    # print(s_set)\n    # print(available_chars)\n    if s_set.issubset(available_chars):\n        print(n)\n    else:\n        count = 0\n        for i in range(1, n+1):\n            for j in range(0, n-i+1):\n                if s_set.issubset(available_chars):\n                    count += 1\n                s_set.remove(s[j])\n        print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649795785,
  "object": "edit"
}
2022-04-12 20:36:31.532576 fix syntax errors 3 ['\n\ndef main():\n    """\n    Main function\n    """\n    n, k = list(map(int, input().split()))\n    s = list(input())\n    available_chars = set(input().split())\n    s_set = set(s)\n    # print(s_set)\n    # print(available_chars)\n    count = 0\n    for i in range(1, n+1):\n        for j in range(0, n-i+1):\n            if s_set.issubset(available_chars):\n                count += 1\n            s_set.remove(s[j])\n    print(count)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, k = list(map(int, input().split()))\n    s = list(input())\n    available_chars = set(input().split())  # set of available characters\n    s_set = set(s)\n    count = 0\n    for i in range(1, n + 1):\n        for j in range(0, n - i + 1):\n            if s_set.issubset(available_chars):  # check if available chars has all the characters of s_set\n                count += 1\n            s_set.remove(s[j])  # remove the first element\n    print(count)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    Main function\n    """\n    n, k = list(map(int, input().split()))\n    s = list(input())\n    available_chars = set(input().split())\n    s_set = set(s)\n    # print(s_set)\n    # print(available_chars)\n    if s_set.issubset(available_chars):\n        print(n)\n    else:\n        count = 0\n        for i in range(1, n+1):\n            for j in range(0, n-i+1):\n                if s_set.issubset(available_chars):\n                    count += 1\n                s_set.remove(s[j])\n        print(count)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 20:36:31.532610 size on output set 5
