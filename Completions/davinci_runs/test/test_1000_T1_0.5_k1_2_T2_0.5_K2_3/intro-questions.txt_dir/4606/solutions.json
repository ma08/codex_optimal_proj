["N = input()\nprint(\"ABC\"+N)", "print(\"ABC\"+input())", "print(\"ABC\"+input())", "print('ABC' + input())", "print(\"ABC\" + input())", "print(\"ABC\"+input())", "print(\"ABC\"+input())", "N = int(input())\nprint(f\"ABC{N}\")", "s = input()\n\nprint('ABC'+s)", "n = input()\nprint(\"ABC\" + n)", "print(\"ABC\"+input())", "N = input()\n\nprint(\"ABC\" + N)", "n = (input())\n#a, b = map(int,input().split())\n#l = list(map(int,input().split()))\n#l = [list(map(int,input().split())) for i in range(n)]\nprint('ABC'+n)", "n=str(input())\nprint(\"ABC\"+n)", "N = input()\nprint('ABC'+N)", "N = input()\n\nprint(\"ABC\" + N)", "print(\"ABC\"+input())", "N=input()\nprint(\"ABC\"+N)", "N=int(input())\nprint(\"ABC{}\".format(N))", "print(\"ABC\"+input())", "N = input()\nprint('ABC'+N)", "s = \"ABC\"\nN = int(input())\nif 100<=N<=999 :\n    print(s + str(N))", "print('ABC' + input())", "N = int(input())\n\nprint((\"ABC{:03d}\".format(N)))\n", "N = input()\nprint(\"ABC\"+N)", "string = \"ABC\"\nN = int(input())\nif 100<=N<=999 :\n    print(string + str(N))", "print(f'ABC{input()}')", "n = str(input())\nprint('ABC' + n)", "print(\"ABC\"+input())", "n=input()\nprint('ABC'+n)", "N=input()\nres=\"ABC\"+N\nprint(res)", "print(\"ABC\"+ input())", "n=input()\nprint((\"ABC\"+n))\n\n", "print(\"ABC\"+str(input()))", "print(\"ABC\" + input())", "a = input()\nprint(\"ABC\" + a)", "N = input()\nprint(\"ABC\" + N)", "N = input()\nprint(('ABC' + N))\n", "n = int(input())\nprint(f'ABC{n:0>3}')", "import sys\n\nN = sys.stdin.readline().strip()\nprint(\"ABC\" + N)", "print(\"ABC\"+input())", "a = input()\nb = ('ABC')\nc = b + a\nprint( c )", "n=input()\nprint(\"ABC\"+n)", "print(\"ABC\"+input())", "print(\"ABC\" + input())", "n = input()\nprint('ABC' + n)", "def iroha():\n    num = int(input())\n    print((\"ABC\"+str(num)))\n\n\ndef __starting_point():\n    iroha()\n\n\n__starting_point()", "print('ABC'+input())", "print(\"ABC{}\".format(input()))", "n=input()\nprint(\"ABC\"+n)", "print(\"ABC\"+input())", "print(\"ABC\"+str(input()))", "n = int(input())\nprint('ABC', n, sep='')", "N=input()\nprint((\"ABC\"+N))\n", "print('ABC'+input())", "n = input()\nprint('ABC'+n)", "print(\"ABC\" + str(input()))", "print(\"ABC\"+input())", "print('ABC' + input())", "n=int(input())\nprint('ABC'+str(n))", "a=input()\nprint(\"ABC\"+a)", "n = input()\nprint(\"ABC\"+n)", "n = int(input())\n\nprint(('ABC' + str(n)))\n", "x =input()\nprint(\"ABC\"+x)", "n = input()\nprint(\"ABC\"+n)", "print('ABC'+input())", "print(\"ABC\"+input())", "print(f\"ABC{input()}\")", "print(\"ABC\"+input())", "N = int(input())\n\n\nprint(\"ABC\", N, sep=\"\")\n", "'''\nABC068 A - ABCxxx\nhttps://atcoder.jp/contests/abc068/tasks/abc068_a\n'''\nprint((\"ABC\"+input()))\n", "print(input(\"ABC\"))", "N=input()\nprint('ABC'+N)", "n = str(input())\nprint((\"ABC\" + n))\n", "n = int(input())\n\nprint(\"ABC\" + str(n))", "s = input()\nprint('ABC' + s)", "n = input()\nprint((\"ABC\" + n))\n", "print('ABC'+input())", "count_of_contest = int(input())\n\nprint('{}{}'.format('ABC', count_of_contest))", "n=input()\nprint(\"ABC\"+n)", "#\n# abc068 a\n#\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"100\"\"\"\n        output = \"\"\"ABC100\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"425\"\"\"\n        output = \"\"\"ABC425\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_3(self):\n        input = \"\"\"999\"\"\"\n        output = \"\"\"ABC999\"\"\"\n        self.assertIO(input, output)\n\n\ndef resolve():\n    print((\"ABC\" + input()))\n\n\ndef __starting_point():\n    # unittest.main()\n    resolve()\n\n__starting_point()", "print(f'ABC{input()}')", "print('ABC' + input())", "n = str(input())\nprint(\"ABC\"+n)", "N = input()\nprint((\"ABC\"+N))\n", "print(\"ABC\"+input())", "N = input()\nprint((\"ABC\"+N))\n", "N = input ()\nprint ('ABC'+N)", "print('ABC{}'.format(input()))", "print(\"ABC\"+input())", "a = int(input())\nprint('ABC' + str(a))", "N = input()\nans = \"ABC\" + N\nprint(ans)", "print(\"ABC\"+input())", "N = str(input())\nprint('ABC' + N)", "print('ABC' + input())", "print((\"ABC\"+input()))\n", "n = str(input())\n\nprint('ABC'+n)", "n = input()\nprint(\"ABC\" + n )"]