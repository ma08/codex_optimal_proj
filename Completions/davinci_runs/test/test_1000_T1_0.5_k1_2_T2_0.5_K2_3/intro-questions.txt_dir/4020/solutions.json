["h1, m1 = list(map(int, input().split(':')))\nh2, m2 = list(map(int, input().split(':')))\nz = h1 * 60 + m1 + h2 * 60 + m2\nz //= 2\nprint(str(z // 60 // 10) + str(z // 60 % 10) + ':' + str(z % 60 // 10) + str(z % 60 % 10))", "h1, m1 = list(map(int, input().split(':')))\nh2, m2 = list(map(int, input().split(':')))\n\nt1 = h1 * 60 + m1\nt2 = h2 * 60 + m2\nmid = (t1 + t2) // 2\nprint(f'{mid // 60:02}:{mid % 60:02}')\n", "a, b = list(map(int, input().split(':')))\nc, d = list(map(int, input().split(':')))\nx = a * 60 + b\ny = c * 60 + d\nz = (x + y) // 2\nprint('%02d:%02d' % (z // 60, z % 60))\n", "s = input()\ns1 = input()\n\nh = int(s[:2])\nm = int(s[3:])\nt = h * 60 + m\nh = int(s1[:2])\nm = int(s1[3:])\nt2 = h * 60 + m\n\nt = (t2 + t) // 2\nh = t // 60\nm = t % 60\nprint(h // 10, h %10, ':', m // 10, m % 10, sep = \"\")\n", "h1, m1 = list(map(int, input().split(':')))\nh2, m2 = list(map(int, input().split(':')))\n\nt1 = h1 * 60 + m1\nt2 = h2 * 60 + m2\n\ndelta = (t2 - t1) // 2\nt1_f = t1 + delta\nh1_f = t1_f // 60\nm1_f = t1_f % 60\nprint('{:02d}:{:02d}'.format(h1_f, m1_f))\n", "s = input().split(':')\ns1 = input().split(':')\nch1 = int(s[0])\nm1 = int(s[1])\nch2 = int(s1[0])\nm2 = int(s1[1])\nvr1 = ch1 * 60 + m1\nvr2 = ch2 * 60 + m2\nrz = vr2 - vr1\nrz //= 2\nch1 = ch1 * 60 + m1 + rz\nchas = ch1 // 60\nmn = ch1 - chas * 60\nif chas < 10:\n\ts = '0'\n\ts += str(chas)\n\tchas = s\nif mn < 10:\n\ts = '0'\n\ts += str(mn)\n\tmn = s\nprint(chas, mn, sep = \":\")\n", "h1, m1 = map(int, input().split(\":\"))\nh2, m2 = map(int, input().split(\":\"))\n\nt1 = h1 * 60 + m1\nt2 = h2 * 60 + m2\n\ndiff = t2 - t1\n\nt = t1 + diff//2\n\nh3 = t//60\nm3 = t%60\n\nprint(\"{:02}:{:02}\".format(h3,m3))", "h1, m1 = list(map(int, input().split(':')))\nh2, m2 = list(map(int, input().split(':')))\nq1 = h1*60+m1\nq2 = h2*60+m2\nq3 = (q1+q2)/2\nh3 = int(q3 // 60)\nm3 = int(q3 % 60)\nprint(\"{:02d}:{:02d}\".format(h3,m3))\n", "a, b = map(int, input().split(':'))\nc, d = map(int, input().split(':'))\ns = a * 60 + b\nf = c * 60 + d\nans = s + ((f - s) // 2)\nansh = str(ans // 60)\nansm = str(ans % 60)\nprint('0' * (2 - len(ansh)) + ansh, '0' * (2 - len(ansm)) + ansm, sep=':')", "h1, m1 = list(map(int,input().split(\":\")))\nh2, m2 = list(map(int,input().split(\":\")))\nnum = h1 * 60 + m1 + h2 * 60 + m2\nnum //= 2\nnum2 = str(num // 60)\nnum3 = str(num % 60)\nif len(num2) == 1:\n    num2 = \"0\"+ num2\nif len(num3) == 1:\n    num3 = \"0\"+ num3\nprint(num2+ \":\" + num3)\n", "f = list(map(int, input().split(':')))\ns = list(map(int, input().split(':')))\n\na = f[0]*60 + f[1]\nb = s[0]*60 + s[1]\n\nn = (a+b)//2\n\nprint('%02d:%02d' %(n//60, n%60)) \n\n", "def mp():\n    return map(int, input().split(':'))\n\nh1, m1 = mp()\nh2, m2 = mp()\nr = h1 * 60 + m1 + h2 * 60 + m2\nr = r // 2\nh3 = str(r // 60)\nif len(h3) == 1:\n    h3 = '0' + h3\nm3 = str(r % 60)\nif len(m3) == 1:\n    m3 = '0' + m3\nprint(h3, ':', m3, sep = '')", "h1, m1 = list(map(int, input().split(':')))\nh2, m2 = list(map(int, input().split(':')))\n\ntotal1 = h1 * 60 + m1\ntotal2 = h2 * 60 + m2\n\nmoy = (total1 + total2) // 2\n\nh3 = moy // 60\nm3 = moy % 60\n\nif h3 < 10:\n    h3 = '0' + str(h3)\nif m3 < 10:\n    m3 = '0' + str(m3)\n\nprint('{}:{}'.format(h3, m3))\n", "def p(a):\n    k = str(a)\n    if (a // 10) == 0:\n        k = '0' + k\n    return k\n\ndef main():\n    h, m = map(int, input().split(':'))\n    h1, m1 = map(int, input().split(':'))\n    k = (h * 60 + m + h1 * 60 + m1) // 2\n    print(p(k // 60), p(k % 60), sep=':')\n \n \nmain()\n", "h1, m1 = tuple(map(int, input().split(':')))\nh2, m2 = tuple(map(int, input().split(':')))\n\n\nsered = ((h2 * 60 + m2) - (h1 * 60 + m1)) // 2 + (h1 * 60 + m1)\n\nh = str(sered // 60)\nm = str(sered % 60)\n\nif len(h) == 1:\n    h = '0' + h\nif len(m) == 1:\n    m = '0' + m\nprint(h, m, sep=':')\n", "\nt1 = [int(i) for i in input().split(':')]\n\nA1 = 60*t1[0]+t1[1]\n\nt2 = [int(i) for i in input().split(':')]\n\nA2 = 60*t2[0]+t2[1]\n\nM = (A1+A2)//2\n\nH = M//60\n\nM = M-(H)*60\n\nprint(str(H).zfill(2)+':'+str(M).zfill(2))\n\n", "a,b=map(int,input().split(':'))\nc,d=map(int,input().split(':'))\nm=(a*60+b+c*60+d)//2\nprint(('0'+str(m//60))[-2:],('0'+str(m%60))[-2:],sep=':')\n", "a = input()\nb = input()\n\nh1 = int(a[0:2])\nm1 = int(a[3:])\nh2 = int(b[0:2])\nm2 = int(b[3:])\n\nh1 = h1*60 + m1\nh2 = h2*60 + m2\n\nh = (h1 + h2) // 2\n\nh1 = h//60\nm1 = h - h1*60\n\nprint(\"0\"*(2-len(str(h1)))+str(h1)+\":\"+\"0\"*(2-len(str(m1)))+str(m1))\n", "h1, m1 = list(map(int, input().split(':')))\nh2, m2 = list(map(int, input().split(':')))\n\nminutes = h2 * 60 - h1 * 60 + m2 - m1\nminutes //= 2\n\nh1 = h1 + (m1 + minutes) // 60\nm1 = (m1 + minutes) % 60\n\nh1 = str(h1)\nh1 = '0' * (2 - len(h1)) + h1\n\nm1 = str(m1)\nm1 = '0' * (2 - len(m1)) + m1\nprint(h1 + ':' + m1)\n", "'''input\n01:02\n03:02\n'''\nimport sys\nfrom collections import defaultdict as dd\nfrom itertools import  permutations as pp\nfrom itertools import combinations as cc\nfrom collections import Counter as ccd\nfrom random import randint as rd\nfrom bisect import bisect_left as bl\nimport heapq\nmod=10**9+7\n\ndef ri(flag=0):\n\tif flag==0:\n\t\treturn [int(i) for i in sys.stdin.readline().split()]\n\telse:\n\t\treturn int(sys.stdin.readline())\n\n\nh1,m1=[int(i) for i in input().split(\":\")]\nh2,m2=[int(i) for i in input().split(\":\")]\n\nk1=h1\nk2=m1\nc=0\nwhile h1!=h2 or m1!=m2:\n\tm1+=1\n\tif m1==60:\n\t\th1+=1\n\t\tm1=0\n\tc+=1\nc=c//2\nwhile c:\n\tk2+=1\n\tif k2==60:\n\t\tk1+=1\n\t\tk2=0\n\tc-=1\nprint(\"%02d:%02d\"%(k1,k2))", "def main():\n    h1,m1 = list(map(int,input().split(':')))\n    h2,m2 = list(map(int,input().split(':')))\n    min1 = h1*60+m1\n    min2 = h2*60+m2\n\n    diff = min2-min1\n    mid = min1+(int(diff/2))\n    hr = mid//60\n    m = mid%60\n\n    if hr < 10:\n        hr = '0'+str(hr)\n\n    if m < 10:\n        m = '0'+str(m)\n\n    print(str(hr)+':'+str(m))\n\nmain()\n", "s1=input()\ns2=input()\nh1,h2,m1,m2=int(s1[:2]),int(s2[:2]),int(s1[3:]),int(s2[3:])\nv1=h1*60+m1\nv2=h2*60+m2\ns=(v1+v2)//2\nprint(\"0\"*(2-len(str(s//60)))+str(s//60)+\":\"+\"0\"*(2-len(str(s%60)))+str(s%60))\n", "a = input().split(\":\")\nb = input().split(\":\")\nm = int(a[0]) * 60 + int(a[1]) + int(b[0]) * 60 + int(b[1])\nm //= 2\nans = str(m % 60)\nif (len(ans) == 1):\n\tans = \"0\" + ans\nans = \":\" + ans\nans = str(m // 60) + ans\nif len(ans) == 4:\n\tans = \"0\" + ans\nprint(ans)", "a, b = input().split(':'), input().split(':')\na = int(a[0]) * 60 + int(a[1])\nb = int(b[0]) * 60 + int(b[1])\nt = (a + b) // 2\nprint(str(t // 60).rjust(2, '0') + ':' + str(t % 60).rjust(2, '0'))", "h1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\ndiff = h1*60 + m1 + ((h2*60 + m2) - (h1*60 + m1))//2\nhres = diff // 60\nmres = diff % 60\nprint(str(hres).zfill(2), str(mres).zfill(2), sep=':')\n"]