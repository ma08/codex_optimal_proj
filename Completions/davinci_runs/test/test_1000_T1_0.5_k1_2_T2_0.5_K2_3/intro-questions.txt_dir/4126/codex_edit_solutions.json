["\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename\ntxt = open(filename)\n\n#sets line to read txt\nline = txt.read()\n\n#sets ln to length of line without spaces\nln = len(line.replace(\" \", \"\"))\n\n#sets first to first half of line without spaces\nfirst = line.replace(\" \", \"\")[:ln/2]\n\n#sets second to second half of line without spaces\nsecond = line.replace(\" \", \"\")[ln/2+1:]\n\n#sets second to reversed second\nsecond = second[::-1]\n\n#sets first to reversed first\nfirst = first[::-1]\n\n#sets middle to middle of line without spaces\nmiddle = line.replace(\" \", \"\")[ln/2]\n\n#if first and second are the same and line is the same as reversed line\nif first == second and line.replace(\" \", \"\") == line.replace(\" \", \"\")[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename\ntxt = open(filename)\n\n#sets line to read txt\nline = txt.read()\n\n#sets ln to length of line\nln = len(line)\n\n#sets first to first half of line\nfirst = line[:ln/2]\n\n#sets second to second half of line\nsecond = line[ln/2+1:]\n\n#sets second to reverse second\nsecond = second[::-1]\n\n#sets first to reverse first\nfirst = first[::-1]\n\n#sets middle to middle of line\nmiddle = line[ln/2]\n\n#if first and second are the same and line is the same as reversed line\nif first == second and line == line[::-1]:\n    print (\"Yes\")\nelse:\n    print (\"No\")\n", "\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename\ntxt = open(filename)\n\n#sets line to read txt\nline = txt.read()\n\n#sets ln to length of line\nln = len(line)\n\n#sets first to first half of line\nfirst = line[:ln/2]\n\n#sets second to second half of line\nsecond = line[ln/2+1:]\n\n#sets middle to middle of line\nmiddle = line[ln/2]\n\n#sets reversed_line to reversed line\nreversed_line = line[::-1]\n\n#sets reversed_first to reversed first\nreversed_first = first[::-1]\n\n#sets reversed_second to reversed second\nreversed_second = second[::-1]\n\n#if first and second are the same and line is the same as reversed line\nif reversed_first == reversed_second and line == reversed_line:\n    print \"Yes\"\nelse:\n    print \"No\"\n", "\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename and read it\ntxt = open(filename).read()\n\n#sets line to txt\nline = txt\n\n#sets ln to length of line\nln = len(line)\n\n#sets first to first half of line\nfirst = line[:ln/2]\n\n#sets second to second half of line\nsecond = line[ln/2+1:]\n\n#sets second to reversed second, using slice\nsecond = second[::-1]\n\n#sets first to reversed first, using slice\nfirst = first[::-1]\n\n#sets middle to middle of line\nmiddle = line[ln/2]\n\n#if first and second are the same and line is the same as reversed line\nif first == second and line == line[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename\ntxt = open(filename)\n\n#sets line to read txt\nline = txt.read()\n\n#sets ln to length of line without spaces\nln = len(line.replace(\" \", \"\"))\n\n#sets first to first half of line without spaces\nfirst = line.replace(\" \", \"\")[:ln/2]\n\n#sets second to second half of line without spaces\nsecond = line.replace(\" \", \"\")[ln/2:]\n\n#sets second to reversed second\nsecond = second[::-1][1:]\n\n#sets first to reversed first\nfirst = first[::-1][1:]\n\n#sets middle to middle of line without spaces\nmiddle = line.replace(\" \", \"\")[ln/2:]\n\n#if first and second are the same and line is the same as reversed line\nif first == second and line.replace(\" \", \"\") == line.replace(\" \", \"\")[::-1]:\n    print \"Yes\"\nelse:\n    print \"No\"\n", "\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename\ntxt = open(filename)\n\n#sets line to read txt\nline = txt.read()\n\n#sets ln to length of line\nln = len(line)\n\n#sets first to first half of line\nfirst = line[:ln/2]\n\n#sets second to second half of line\nsecond = line[ln/2+1:]\n\n#sets second to reversed second, using slice\nsecond = second[::-1]\n\n#sets first to reversed first, using slice\nfirst = first[::-1]\n\n#sets middle to middle of line\nmiddle = line[ln/2]\n\n#if first and second are the same and line is the same as reversed line\nif first == second and line == line[::-1]:\n    print (\"Yes\")\nelse:\n    print (\"No\")\n", "\ninput_str = input()\n\nis_palindrom = True\nfor i in range(int(len(input_str) / 2)):\n    if input_str[i] != input_str[-i - 1]:\n        is_palindrom = False\n\nif is_palindrom:\n    print('Yes')\nelse:\n    print('No')\n", "\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename\ntxt = open(filename)\n\n#sets line to read txt\nline = txt.read()\n\n#sets ln to length of line\nln = len(line)\n\n#sets first to first half of line\nfirst = line[:ln/2]\n\n#sets second to second half of line\nsecond = line[ln/2:]\n\n#sets second to reverse second\nsecond = second[::-1]\n\n#sets first to reverse first\nfirst = first[::-1]\n\n#sets middle to middle of line\nmiddle = line[ln/2]\n\n#if first and second are the same and line is the same as reversed line\nif first == second and line == line[::-1]:\n    print \"Yes\"\nelse:\n    print \"No\"\n", "\ninput_str = input('Enter a string: ')\n\nis_palindrome = True\nfor i in range(int(len(input_str) / 2)):\n    if input_str[i] != input_str[-i - 1]:\n        is_palindrome = False\n\nif is_palindrome:\n    print('Yes')\nelse:\n    print('No')\n", "\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename\ntxt = open(filename)\n\n#sets line to read txt\nline = txt.read()\n\n#sets ln to length of line\nln = len(line)\n\n#sets first to first half of line\nfirst = line[:ln/2]\n\n#sets second to second half of line\nsecond = line[ln/2+1:]\n\n#sets second to reversed second, using slice\nsecond = second[::-1]\n\n#sets first to reversed first, using slice\nfirst = first[::-1]\n\n#sets middle to middle of line\nmiddle = line[ln/2]\n\n#if first and second are the same and line is the same as reversed line\nif first == second and line == line[::-1]:\n    print \"Yes\"\nelse:\n    print \"No\"\n", "\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename\ntxt = open(filename)\n\n#sets line to read txt\nline = txt.read()\n\n#sets ln to length of line without spaces\nln = len(line.replace(\" \", \"\"))\n\n#sets first to first half of line without spaces\nfirst = line.replace(\" \", \"\")[:ln/2]\n\n#sets second to second half of line without spaces\nsecond = line.replace(\" \", \"\")[ln/2+1:]\n\n#sets second to reversed second and first\nsecond = second[::-1] and first = first[::-1]\n\n#sets first to reversed first and second\nfirst = first[::-1] and second = second[::-1]\n\n#sets middle to middle of line without spaces\nmiddle = line.replace(\" \", \"\")[ln/2]\n\n#if first and second are the same and line is the same as reversed line\nif first == second and line.replace(\" \", \"\") == line.replace(\" \", \"\")[::-1]:\n    print \"Yes\"\nelse:\n    print \"No\"\n", "input_str = input()\n\nis_palindrome = True\nfor i in range(int(len(input_str) / 2)):\n    if input_str[i] != input_str[-i - 1]:\n        is_palindrome = False\n\nif is_palindrome:\n    print('Yes')\nelse:\n    print('No')\n", "def is_palindrom(input_str):\n    for i in range(int(len(input_str) / 2)):\n        if input_str[i] != input_str[-i - 1]:\n            return False\n    return True\n\n\ninput_str = input()\nif is_palindrom(input_str):\n    print('Yes')\nelse:\n    print('No')\n", "\n\ninput_str = input()\n\nis_palindrom = True\nfor i in range(int(len(input_str) / 2)):\n    if input_str[i] != input_str[-i - 1]:\n        is_palindrom = False\nif is_palindrom:\n    print('Yes')\nelse:\n    print('No')\n"]