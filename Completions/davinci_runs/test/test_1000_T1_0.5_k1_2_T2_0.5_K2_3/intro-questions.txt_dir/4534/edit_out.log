2022-04-12 21:49:42.634193 num operations 2
2022-04-12 21:49:42.634210 size on input set 1
2022-04-12 21:49:44.692056 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nclass Solution:\n    def getRow(self, rowIndex):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex):\n        res = [0 for _ in range(rowIndex+1)]\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n    print(s.getRow2(3))\n"
    },
    {
      "index": 1,
      "text": "\nclass Solution:\n    def getRow(self, rowIndex: int):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex):\n        res = [0 for _ in range(rowIndex+1)]\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n"
    },
    {
      "index": 2,
      "text": "class Solution:\n    def getRow(self, rowIndex: int):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex):\n        res = [0 for _ in range(rowIndex+1)]\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n    print(s.getRow2(3))\n"
    }
  ],
  "created": 1649800182,
  "object": "edit"
}
2022-04-12 21:49:44.692260 fix spelling mistakes 3 ["\nclass Solution:\n    def getRow(self, rowIndex):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex):\n        res = [0 for _ in range(rowIndex+1)]\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n    print(s.getRow2(3))\n", "\nclass Solution:\n    def getRow(self, rowIndex: int):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex):\n        res = [0 for _ in range(rowIndex+1)]\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n", "class Solution:\n    def getRow(self, rowIndex: int):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex):\n        res = [0 for _ in range(rowIndex+1)]\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n    print(s.getRow2(3))\n"]
2022-04-12 21:49:44.692292 size on output set 3
2022-04-12 21:49:44.692298 size on input set 3
2022-04-12 21:49:47.231528 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nclass Solution:\n    def getRow(self, rowIndex):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex):\n        res = [0] * (rowIndex+1)\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n    print(s.getRow2(3))\n"
    },
    {
      "index": 1,
      "text": "class Solution:\n    def getRow(self, rowIndex):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex):\n        res = [0 for _ in range(rowIndex+1)]\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(4))\n    print(s.getRow2(4))\n"
    },
    {
      "index": 2,
      "text": "class Solution:\n    def getRow(self, rowIndex):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex):\n        res = [0 for _ in range(rowIndex+1)]\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n    print(s.getRow2(3))\n"
    }
  ],
  "created": 1649800184,
  "object": "edit"
}
2022-04-12 21:49:47.231716 fix syntax errors 3 ["\nclass Solution:\n    def getRow(self, rowIndex):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex):\n        res = [0] * (rowIndex+1)\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n    print(s.getRow2(3))\n", "class Solution:\n    def getRow(self, rowIndex):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex):\n        res = [0 for _ in range(rowIndex+1)]\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(4))\n    print(s.getRow2(4))\n", "class Solution:\n    def getRow(self, rowIndex):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex):\n        res = [0 for _ in range(rowIndex+1)]\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n    print(s.getRow2(3))\n"]
2022-04-12 21:49:49.709630 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "class Solution:\n    def getRow(self, rowIndex: int):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex):\n        res = [0 for _ in range(rowIndex+1)]\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(5))\n    print(s.getRow2(5))\n"
    },
    {
      "index": 1,
      "text": "class Solution:\n    def getRow(self, rowIndex: int):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex: int):\n        res = [0 for _ in range(rowIndex+1)]\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n    print(s.getRow2(3))\n"
    },
    {
      "index": 2,
      "text": "class Solution:\n    def getRow(self, rowIndex):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex):\n        res = [0 for _ in range(rowIndex+1)]\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n    print(s.getRow2(3))\n"
    }
  ],
  "created": 1649800187,
  "object": "edit"
}
2022-04-12 21:49:49.709881 fix syntax errors 3 ["class Solution:\n    def getRow(self, rowIndex: int):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex):\n        res = [0 for _ in range(rowIndex+1)]\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(5))\n    print(s.getRow2(5))\n", "class Solution:\n    def getRow(self, rowIndex: int):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex: int):\n        res = [0 for _ in range(rowIndex+1)]\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n    print(s.getRow2(3))\n", "class Solution:\n    def getRow(self, rowIndex):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex):\n        res = [0 for _ in range(rowIndex+1)]\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n    print(s.getRow2(3))\n"]
2022-04-12 21:49:52.194137 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "class Solution:\n    def getRow(self, rowIndex: int):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex):\n        res = [0 for _ in range(rowIndex+1)]\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n"
    },
    {
      "index": 1,
      "text": "\nclass Solution:\n    def getRow(self, rowIndex):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex):\n        res = [0 for _ in range(rowIndex+1)]\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n"
    },
    {
      "index": 2,
      "text": "\nclass Solution:\n    def getRow(self, rowIndex):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex):\n        res = [0 for _ in range(rowIndex+1)]\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n"
    }
  ],
  "created": 1649800189,
  "object": "edit"
}
2022-04-12 21:49:52.194310 fix syntax errors 3 ["class Solution:\n    def getRow(self, rowIndex: int):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex):\n        res = [0 for _ in range(rowIndex+1)]\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n", "\nclass Solution:\n    def getRow(self, rowIndex):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex):\n        res = [0 for _ in range(rowIndex+1)]\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n", "\nclass Solution:\n    def getRow(self, rowIndex):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex):\n        res = [0 for _ in range(rowIndex+1)]\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n"]
2022-04-12 21:49:52.194348 size on output set 7
2022-04-12 21:49:52.194359 num operations 2
2022-04-12 21:49:52.194364 size on input set 1
2022-04-12 21:49:58.659473 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nclass Solution:\n    def getRow(self, rowIndex: int) -> List[int]:\n        if rowIndex == 0: return [1]\n        if rowIndex == 1: return [1, 1]\n        res = [1, 1]\n        for i in range(2, rowIndex+1):\n            temp = [1] * (i+1)\n            for j in range(1, i): temp[j] = res[j-1] + res[j]\n            res = temp\n        return res\n"
    },
    {
      "index": 1,
      "text": "\n\nclass Solution:\n    def getRow(self, rowIndex: int) -> List[int]:  # Time: O(n^2), Space: O(n)\n        if rowIndex == 0:\n            return [1]\n        if rowIndex == 1:\n            return [1, 1]\n        result = [1, 1]\n        for i in range(2, rowIndex + 1):\n            temp = [1] * (i + 1)\n            for j in range(1, i):\n                temp[j] = result[j - 1] + result[j]\n            result = temp\n        return result\n"
    },
    {
      "index": 2,
      "text": "\n\n\nclass Solution(object):\n    def getRow(self, rowIndex):\n        \"\"\"\n        :type rowIndex: int\n        :rtype: List[int]\n        \"\"\"\n        row = [1]\n        for _ in range(rowIndex):\n            row = [x + y for x, y in zip([0]+row, row+[0])]\n        return row\n"
    }
  ],
  "created": 1649800192,
  "object": "edit"
}
2022-04-12 21:49:58.659655 fix spelling mistakes 3 ['\n\nclass Solution:\n    def getRow(self, rowIndex: int) -> List[int]:\n        if rowIndex == 0: return [1]\n        if rowIndex == 1: return [1, 1]\n        res = [1, 1]\n        for i in range(2, rowIndex+1):\n            temp = [1] * (i+1)\n            for j in range(1, i): temp[j] = res[j-1] + res[j]\n            res = temp\n        return res\n', '\n\nclass Solution:\n    def getRow(self, rowIndex: int) -> List[int]:  # Time: O(n^2), Space: O(n)\n        if rowIndex == 0:\n            return [1]\n        if rowIndex == 1:\n            return [1, 1]\n        result = [1, 1]\n        for i in range(2, rowIndex + 1):\n            temp = [1] * (i + 1)\n            for j in range(1, i):\n                temp[j] = result[j - 1] + result[j]\n            result = temp\n        return result\n', '\n\n\nclass Solution(object):\n    def getRow(self, rowIndex):\n        """\n        :type rowIndex: int\n        :rtype: List[int]\n        """\n        row = [1]\n        for _ in range(rowIndex):\n            row = [x + y for x, y in zip([0]+row, row+[0])]\n        return row\n']
2022-04-12 21:49:58.659684 size on output set 3
2022-04-12 21:49:58.659690 size on input set 3
2022-04-12 21:50:02.426893 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nclass Solution:\n    def getRow(self, rowIndex: int) -> List[int]:\n        if rowIndex == 0: return [1]\n        if rowIndex == 1: return [1, 1]\n        res = [1, 1]\n        for i in range(2, rowIndex + 1):\n            temp = [1] * (i + 1)\n            for j in range(1, i):\n                temp[j] = res[j - 1] + res[j]\n            res = temp\n        return res\n"
    },
    {
      "index": 1,
      "text": "from typing import List\n\nclass Solution:\n    def getRow(self, rowIndex: int) -> List[int]:\n        if rowIndex == 0: return [1]\n        if rowIndex == 1: return [1, 1]\n        res = [1, 1]\n        for i in range(2, rowIndex+1):\n            temp = [1] * (i+1)\n            for j in range(1, i): temp[j] = res[j-1] + res[j]\n            res = temp\n        return res\n"
    },
    {
      "index": 2,
      "text": "\n\nclass Solution:\n    def getRow(self, rowIndex):\n        if rowIndex == 0: return [1]\n        if rowIndex == 1: return [1, 1]\n        res = [1, 1]\n        for i in range(2, rowIndex+1):\n            temp = [1] * (i+1)\n            for j in range(1, i): temp[j] = res[j-1] + res[j]\n            res = temp\n        return res\n"
    }
  ],
  "created": 1649800198,
  "object": "edit"
}
2022-04-12 21:50:02.427169 fix syntax errors 3 ['\n\nclass Solution:\n    def getRow(self, rowIndex: int) -> List[int]:\n        if rowIndex == 0: return [1]\n        if rowIndex == 1: return [1, 1]\n        res = [1, 1]\n        for i in range(2, rowIndex + 1):\n            temp = [1] * (i + 1)\n            for j in range(1, i):\n                temp[j] = res[j - 1] + res[j]\n            res = temp\n        return res\n', 'from typing import List\n\nclass Solution:\n    def getRow(self, rowIndex: int) -> List[int]:\n        if rowIndex == 0: return [1]\n        if rowIndex == 1: return [1, 1]\n        res = [1, 1]\n        for i in range(2, rowIndex+1):\n            temp = [1] * (i+1)\n            for j in range(1, i): temp[j] = res[j-1] + res[j]\n            res = temp\n        return res\n', '\n\nclass Solution:\n    def getRow(self, rowIndex):\n        if rowIndex == 0: return [1]\n        if rowIndex == 1: return [1, 1]\n        res = [1, 1]\n        for i in range(2, rowIndex+1):\n            temp = [1] * (i+1)\n            for j in range(1, i): temp[j] = res[j-1] + res[j]\n            res = temp\n        return res\n']
2022-04-12 21:50:07.187822 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nclass Solution:  # Time: O(n^2), Space: O(n)\n    def getRow(self, rowIndex: int) -> List[int]:  # Time: O(n^2), Space: O(n)\n        if rowIndex == 0:\n            return [1]\n        if rowIndex == 1:\n            return [1, 1]\n        result = [1, 1]\n        for i in range(2, rowIndex + 1):\n            temp = [1] * (i + 1)\n            for j in range(1, i):\n                temp[j] = result[j - 1] + result[j]\n            result = temp\n        return result\n"
    },
    {
      "index": 1,
      "text": "\n\nclass Solution:\n    def getRow(self, rowIndex: int) -> List[int]:  # Time: O(n^2), Space: O(n)\n        if rowIndex == 0:\n            return [1]\n        if rowIndex == 1:\n            return [1, 1]\n        result = [1, 1]\n        for i in range(2, rowIndex + 1):\n            temp = [1] * (i + 1)\n            for j in range(1, i):\n                temp[j] = result[j - 1] + result[j]\n            result = temp\n\n\nclass Solution:\n    def getRow(self, rowIndex: int) -> List[int]:  # Time: O(n^2), Space: O(n)\n        if rowIndex == 0:\n            return [1]\n        if rowIndex == 1:\n            return [1, 1]\n        result = [1, 1]\n        for i in range(2, rowIndex + 1):\n            temp = [1] * (i + 1)\n            for j in range(1, i):\n                temp[j] = result[j - 1] + result[j]\n            result = temp\n        return result\n        return result\n"
    },
    {
      "index": 2,
      "text": "from typing import List\n\nclass Solution:\n    def getRow(self, rowIndex: int) -> List[int]:  # Time: O(n^2), Space: O(n)\n        if rowIndex == 0:\n            return [1]\n        if rowIndex == 1:\n            return [1, 1]\n        result = [1, 1]\n        for i in range(2, rowIndex + 1):\n            temp = [1] * (i + 1)\n            for j in range(1, i):\n                temp[j] = result[j - 1] + result[j]\n            result = temp\n        return result\n"
    }
  ],
  "created": 1649800202,
  "object": "edit"
}
2022-04-12 21:50:07.188014 fix syntax errors 3 ['\n\nclass Solution:  # Time: O(n^2), Space: O(n)\n    def getRow(self, rowIndex: int) -> List[int]:  # Time: O(n^2), Space: O(n)\n        if rowIndex == 0:\n            return [1]\n        if rowIndex == 1:\n            return [1, 1]\n        result = [1, 1]\n        for i in range(2, rowIndex + 1):\n            temp = [1] * (i + 1)\n            for j in range(1, i):\n                temp[j] = result[j - 1] + result[j]\n            result = temp\n        return result\n', '\n\nclass Solution:\n    def getRow(self, rowIndex: int) -> List[int]:  # Time: O(n^2), Space: O(n)\n        if rowIndex == 0:\n            return [1]\n        if rowIndex == 1:\n            return [1, 1]\n        result = [1, 1]\n        for i in range(2, rowIndex + 1):\n            temp = [1] * (i + 1)\n            for j in range(1, i):\n                temp[j] = result[j - 1] + result[j]\n            result = temp\n\n\nclass Solution:\n    def getRow(self, rowIndex: int) -> List[int]:  # Time: O(n^2), Space: O(n)\n        if rowIndex == 0:\n            return [1]\n        if rowIndex == 1:\n            return [1, 1]\n        result = [1, 1]\n        for i in range(2, rowIndex + 1):\n            temp = [1] * (i + 1)\n            for j in range(1, i):\n                temp[j] = result[j - 1] + result[j]\n            result = temp\n        return result\n        return result\n', 'from typing import List\n\nclass Solution:\n    def getRow(self, rowIndex: int) -> List[int]:  # Time: O(n^2), Space: O(n)\n        if rowIndex == 0:\n            return [1]\n        if rowIndex == 1:\n            return [1, 1]\n        result = [1, 1]\n        for i in range(2, rowIndex + 1):\n            temp = [1] * (i + 1)\n            for j in range(1, i):\n                temp[j] = result[j - 1] + result[j]\n            result = temp\n        return result\n']
2022-04-12 21:50:09.034170 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "class Solution(object):\n    def getRow(self, rowIndex):\n        \"\"\"\n        :type rowIndex: int\n        :rtype: List[int]\n        \"\"\"\n        row = [1]\n        for _ in range(rowIndex):\n            row = [x + y for x, y in zip([0]+row, row+[0])]\n        return row\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python\n# coding=utf-8\n\n\nclass Solution(object):\n    def getRow(self, rowIndex):\n        \"\"\"\n        :type rowIndex: int\n        :rtype: List[int]\n        \"\"\"\n        row = [1]\n        for _ in range(rowIndex):\n            row = [x + y for x, y in zip([0]+row, row+[0])]\n        return row\n"
    },
    {
      "index": 2,
      "text": "\n\n\n\nclass Solution(object):\n    def getRow(self, rowIndex):\n        \"\"\"\n        :type rowIndex: int\n        :rtype: List[int]\n        \"\"\"\n        row = [1]\n        for _ in range(rowIndex):\n            row = [x + y for x, y in zip([0]+row, row+[0])]\n        return row\n"
    }
  ],
  "created": 1649800207,
  "object": "edit"
}
2022-04-12 21:50:09.034355 fix syntax errors 3 ['class Solution(object):\n    def getRow(self, rowIndex):\n        """\n        :type rowIndex: int\n        :rtype: List[int]\n        """\n        row = [1]\n        for _ in range(rowIndex):\n            row = [x + y for x, y in zip([0]+row, row+[0])]\n        return row\n', '#!/usr/bin/env python\n# coding=utf-8\n\n\nclass Solution(object):\n    def getRow(self, rowIndex):\n        """\n        :type rowIndex: int\n        :rtype: List[int]\n        """\n        row = [1]\n        for _ in range(rowIndex):\n            row = [x + y for x, y in zip([0]+row, row+[0])]\n        return row\n', '\n\n\n\nclass Solution(object):\n    def getRow(self, rowIndex):\n        """\n        :type rowIndex: int\n        :rtype: List[int]\n        """\n        row = [1]\n        for _ in range(rowIndex):\n            row = [x + y for x, y in zip([0]+row, row+[0])]\n        return row\n']
2022-04-12 21:50:09.034381 size on output set 9
