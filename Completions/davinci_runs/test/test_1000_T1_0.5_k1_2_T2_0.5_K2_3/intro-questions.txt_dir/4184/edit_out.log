2022-04-12 18:02:45.993232 num operations 2
2022-04-12 18:02:45.993241 size on input set 1
2022-04-12 18:02:51.272462 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights.\n# (i.e. if we divide the weights into two groups with only one weight in each group).\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group)\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize the minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group).\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group andg\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n"
    }
  ],
  "created": 1649786566,
  "object": "edit"
}
2022-04-12 18:02:51.272778 fix spelling mistakes 3 ['\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights.\n# (i.e. if we divide the weights into two groups with only one weight in each group).\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n', '\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group)\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n', '\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize the minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group).\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group andg\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n']
2022-04-12 18:02:51.272833 size on output set 3
2022-04-12 18:02:51.272840 size on input set 3
2022-04-12 18:03:02.389433 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group)\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference\n    # between the sum of the weights in the first group and\n    # the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n"
    },
    {
      "index": 1,
      "text": "\ndef read_file(file_name):\n\twith open(file_name) as file:\n\t\treturn file.read()\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Initialize the minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each\n# group).\nmin_diff = sum(weights) - first_group_sum\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed\n    # i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to the\n    # number of weights in the second group, calculate the difference between the\n    # sum of the weights in the first group and the sum of the weights in the\n    # second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first\n        # group and the sum of the weights in the second group, and update the\n        # minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n"
    }
  ],
  "created": 1649786571,
  "object": "edit"
}
2022-04-12 18:03:02.389719 fix syntax errors 3 ['\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group)\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference\n    # between the sum of the weights in the first group and\n    # the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n', '\ndef read_file(file_name):\n\twith open(file_name) as file:\n\t\treturn file.read()\n', '\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Initialize the minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each\n# group).\nmin_diff = sum(weights) - first_group_sum\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed\n    # i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to the\n    # number of weights in the second group, calculate the difference between the\n    # sum of the weights in the first group and the sum of the weights in the\n    # second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first\n        # group and the sum of the weights in the second group, and update the\n        # minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n']
2022-04-12 18:03:13.119453 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group)\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference\n    # between the sum of the weights in the first group and the sum of the\n    # weights in the second group\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group\n        # and the sum of the weights in the second group, and update the minimum possible absolute difference\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = sum(weights)\n\n# Initialize the sum of the weights in the second group to 0.\nsecond_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Decrement the sum of the weights in the first group by the weight indexed i.\n    first_group_sum -= weights[i]\n\n    # Increment the sum of the weights in the second group by the weight indexed i.\n    second_group_sum += weights[i]\n\n    # If the number of weights in the first group is less than or equal to\n    # the number of weights in the second group, calculate the absolute difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i <= N - i - 1:\n        # Calculate the absolute difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        min_diff = min(min_diff, abs(first_group_sum - second_group_sum))\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n"
    },
    {
      "index": 2,
      "text": "\nprint(\"Hello World!\")\n"
    }
  ],
  "created": 1649786582,
  "object": "edit"
}
2022-04-12 18:03:13.119635 fix syntax errors 3 ['\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group)\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference\n    # between the sum of the weights in the first group and the sum of the\n    # weights in the second group\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group\n        # and the sum of the weights in the second group, and update the minimum possible absolute difference\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n', '\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = sum(weights)\n\n# Initialize the sum of the weights in the second group to 0.\nsecond_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Decrement the sum of the weights in the first group by the weight indexed i.\n    first_group_sum -= weights[i]\n\n    # Increment the sum of the weights in the second group by the weight indexed i.\n    second_group_sum += weights[i]\n\n    # If the number of weights in the first group is less than or equal to\n    # the number of weights in the second group, calculate the absolute difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i <= N - i - 1:\n        # Calculate the absolute difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        min_diff = min(min_diff, abs(first_group_sum - second_group_sum))\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n', '\nprint("Hello World!")\n']
2022-04-12 18:03:26.027851 fix syntax errors {
  "choices": [
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 0
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize the minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group).\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed at i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n"
    },
    {
      "index": 2,
      "text": "\n\ndef solve(N, weights):\n    # Initialize the minimum possible absolute difference to the sum of all weights\n    # (i.e. if we divide the weights into two groups with only one weight in each group).\n    min_diff = sum(weights)\n\n    # Initialize the sum of the weights in the first group to 0.\n    first_group_sum = 0\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group andg\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n"
    }
  ],
  "created": 1649786593,
  "object": "edit"
}
2022-04-12 18:03:26.028132 NO RESULT
2022-04-12 18:03:26.028140 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 0
}
2022-04-12 18:03:26.028208 fix syntax errors 2 ['\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize the minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group).\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed at i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n', '\n\ndef solve(N, weights):\n    # Initialize the minimum possible absolute difference to the sum of all weights\n    # (i.e. if we divide the weights into two groups with only one weight in each group).\n    min_diff = sum(weights)\n\n    # Initialize the sum of the weights in the first group to 0.\n    first_group_sum = 0\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group andg\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n']
2022-04-12 18:03:26.028247 size on output set 8
2022-04-12 18:03:26.028256 num operations 2
2022-04-12 18:03:26.028261 size on input set 1
2022-04-12 18:03:28.924731 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\nW = list(map(int, input().split()))\ns1 = 0\ns2 = 0\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = s1 + W[t-1]\n    s2 = s2 + W[t]\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\nw = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(w[:t])\n    s2 = sum(w[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input())\nW = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\nprint(min_diff)\n"
    }
  ],
  "created": 1649786606,
  "object": "edit"
}
2022-04-12 18:03:28.924903 fix spelling mistakes 3 ['\n\nN = int(input())\nW = list(map(int, input().split()))\ns1 = 0\ns2 = 0\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = s1 + W[t-1]\n    s2 = s2 + W[t]\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n', '\n\nN = int(input())\nw = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(w[:t])\n    s2 = sum(w[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n', '\n\nN = int(input())\nW = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\nprint(min_diff)\n']
2022-04-12 18:03:28.924930 size on output set 3
2022-04-12 18:03:28.924936 size on input set 3
2022-04-12 18:03:36.541537 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\nw = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(w[:t])\n    s2 = sum(w[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nw = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(w[:t])\n    s2 = sum(w[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n"
    },
    {
      "index": 2,
      "text": "\n\"\"\"\nhttps://atcoder.jp/contests/abc115/tasks/abc115_b\n\"\"\"\n\nN = int(input())\np = list(map(int, input().split()))\n\ntotal = sum(p)\nmax_p = max(p)\n\nprint(min_diff)\n"
    }
  ],
  "created": 1649786608,
  "object": "edit"
}
2022-04-12 18:03:36.541709 fix syntax errors 3 ['\nN = int(input())\nw = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(w[:t])\n    s2 = sum(w[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n', '\nN = int(input())\nw = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(w[:t])\n    s2 = sum(w[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n', '\n"""\nhttps://atcoder.jp/contests/abc115/tasks/abc115_b\n"""\n\nN = int(input())\np = list(map(int, input().split()))\n\ntotal = sum(p)\nmax_p = max(p)\n\nprint(min_diff)\n']
2022-04-12 18:03:40.862897 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\nW = list(map(int, input().split()))\nsum_w = sum(W)\nans = float('inf')\nT = 0\nfor i in range(N):\n    T += W[i]\n    ans = min(ans, abs(sum_w - 2 * T))\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\nW = list(map(int, input().split()))\ns1 = 0\ns2 = 0\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 += W[t-1]\n    s2 += W[t]\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input())\nW = list(map(int, input().split()))\nmin_diff = sum(W)\nfor t in range(1, N - 1):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    min_diff = min(min_diff, abs(s1 - s2))\n\nprint(min_diff)\n"
    }
  ],
  "created": 1649786616,
  "object": "edit"
}
2022-04-12 18:03:40.863064 fix syntax errors 3 ["\n\nN = int(input())\nW = list(map(int, input().split()))\nsum_w = sum(W)\nans = float('inf')\nT = 0\nfor i in range(N):\n    T += W[i]\n    ans = min(ans, abs(sum_w - 2 * T))\nprint(ans)\n", '\n\nN = int(input())\nW = list(map(int, input().split()))\ns1 = 0\ns2 = 0\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 += W[t-1]\n    s2 += W[t]\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n', '\n\nN = int(input())\nW = list(map(int, input().split()))\nmin_diff = sum(W)\nfor t in range(1, N - 1):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    min_diff = min(min_diff, abs(s1 - s2))\n\nprint(min_diff)\n']
2022-04-12 18:03:46.062638 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\nW = list(map(int, input().split()))\nans = 100 * N\nfor i in range(1, N):\n    ans = min(ans, abs(sum(W[:i]) - sum(W[i:])))\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nW = list(map(int, input().split()))\n\n\ndef main():\n    min_diff = 100 * N\n    for t in range(1, N):\n        s1 = sum(W[:t])\n        s2 = sum(W[t:])\n        diff = abs(s1 - s2)\n        if diff < min_diff:\n            min_diff = diff\n    print(min_diff)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input()) # \u5165\u529b\nW = list(map(int, input().split())) # \u5165\u529b\n\nmin_diff = 100 * N # \u6700\u5c0f\u5024\u3092\u521d\u671f\u5316\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\nprint(min_diff)\n"
    }
  ],
  "created": 1649786620,
  "object": "edit"
}
2022-04-12 18:03:46.062887 fix syntax errors 3 ['\nN = int(input())\nW = list(map(int, input().split()))\nans = 100 * N\nfor i in range(1, N):\n    ans = min(ans, abs(sum(W[:i]) - sum(W[i:])))\nprint(ans)\n', "\nN = int(input())\nW = list(map(int, input().split()))\n\n\ndef main():\n    min_diff = 100 * N\n    for t in range(1, N):\n        s1 = sum(W[:t])\n        s2 = sum(W[t:])\n        diff = abs(s1 - s2)\n        if diff < min_diff:\n            min_diff = diff\n    print(min_diff)\n\n\nif __name__ == '__main__':\n    main()\n", '\n\nN = int(input()) # 入力\nW = list(map(int, input().split())) # 入力\n\nmin_diff = 100 * N # 最小値を初期化\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\nprint(min_diff)\n']
2022-04-12 18:03:46.062921 size on output set 8
