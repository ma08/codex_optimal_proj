["\n\nimport sys\n\ndef main():\n\tk = int(sys.stdin.readline().strip())\n\tn = int(sys.stdin.readline().strip())\n\tl = []\n\tfor i in range(n):\n\t\ttemp = sys.stdin.readline().strip().split()\n\t\ttemp[0] = int(temp[0])\n\t\ttemp[1] = str(temp[1])\n\t\tl.append(temp)\n\tcurr = k\n\tfor i in range(n):\n\t\tif l[i][1] == \"T\":\n\t\t\tcurr = (curr+1)%8\n\t\telif l[i][1] == \"F\":\n\t\t\tcurr = (curr-1)%8\n\t\tif l[i][0] > 210:\n\t\t\tbreak\n\tprint(curr)\n\nif __name__ == '__main__':\n\tmain()\n", "\n\ndef main():\n    # Get input\n    player = int(input())\n    num_questions = int(input())\n    # Get the time limit\n    time_limit = 3 * 60 + 30\n\n\n    # Get the answers\n    answers = [input().split() for _ in range(num_questions)]\n\n    # Get the player who has the box initially.\n    current_player = player\n\n    # Iterate through the answers\n    for answer, time in answers:\n        # Check if the time limit is reached\n        if int(time) > time_limit:\n            break\n        # Check if the answer is correct\n        if answer == \"T\":\n            # Pass the box to the next player\n            current_player = (current_player + 1) % 8 or 8\n        # Check if the answer is incorrect\n        elif answer == \"N\":\n            # Skip to the next question\n            continue\n        # Check if the answer is skipped\n        elif answer == \"P\":\n            # Pass the box to the next player\n            current_player = (current_player + 1) % 8 or 8\n            # Skip to the next question\n            continue\n\n    # Print the answer\n    print(current_player)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n\tk = int(sys.stdin.readline().strip())\n\tn = int(sys.stdin.readline().strip())\n\tl = []\n\tfor i in range(n):\n\t\tl.append(sys.stdin.readline().strip().split())\n\t\tl[i][0] = int(l[i][0])\n\t\tl[i][1] = str(l[i][1])\n\tcurr = k\n\tfor i in range(n):\n\t\tif l[i][1] == \"T\":\n\t\t\tcurr = (curr+1)%8\n\t\telif l[i][1] == \"F\":\n\t\t\tcurr = (curr-1)%8\n\t\tif l[i][0] > 210: #this is a time limit\n\t\t\tbreak\n\tprint(curr)\n\nif __name__ == '__main__':\n\tmain()\n", "\n\nk = int(input())\nn = int(input())\nfor i in range(n):\n    t, z = input().split()\n    t = int(t)\n    if t > 210:\n        break\n    if z == \"T\":\n        k = (k + 1) % 8 + 1\n    elif z == \"N\":\n        k = (k - 1) % 8 + 1\nprint(k)\n", "\n# this is a comment\nk, n = map(int, input().split())\nplayers = [False for i in range(8)]\nplayers[k-1] = True\nfor i in range(n):\n    time, ans = map(str, input().split())\n    time = int(time)\n    if ans == 'T':\n        pass\n    elif ans == 'N':\n        players = [False for i in range(8)]\n    elif ans == 'P':\n        players = [False for i in range(8)]\n        players[(k-1+1)%8] = True\n    if time >= 210:\n        print(players.index(True)+1)\n        break\n    else:\n        players = [False for i in range(8)]\n        players[(players.index(True)+1)%8] = True\n", "#\n#\nk, n = map(int, input().split())\nplayers = [False for i in range(8)]\nplayers[k-1] = True\nfor i in range(n):\n    time, ans = map(str, input().split())\n    time = int(time)\n    if ans == 'T':\n        pass\n    elif ans == 'N':\n        players = [False for i in range(8)]\n    elif ans == 'P':\n        players = [False for i in range(8)]\n        players[(k-1+1)%8] = True\n    if time >= 210:\n        print(players.index(True)+1)\n        break\n    else:\n        players = [False for i in range(8)]\n        players[(players.index(True)+1)%8] = True\n", "\ndef main():\n    k = int(input())\n    n = int(input())\n\n    for _ in range(n):\n        t, z = input().split()\n        t, z = int(t), z\n        if z == 'T':\n            k = (k + 1) % 8\n        elif z == 'S':\n            k = (k + 7) % 8\n        else:\n            k = (k + 6) % 8\n\n    print(k)\n\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\nk, n = map(int, input().split())\nplayers = [False for i in range(9)]\nplayers[k] = True\nfor i in range(n):\n    time, ans = map(str, input().split())\n    time = int(time)\n    if ans == 'T':\n        pass\n    elif ans == 'N':\n        players = [False for i in range(9)]\n    elif ans == 'P':\n        players = [False for i in range(9)]\n        players[(k+1)%9] = True\n    if time >= 210:\n        sys.exit(players.index(True))\n    else:\n        players = [False for i in range(9)]\n        players[(players.index(True)+1)%9] = True\n", "\n\ndef main():\n    # Read input\n    player = int(raw_input())\n    num_questions = int(raw_input())\n    questions = []\n    for i in range(num_questions):\n        questions.append(raw_input().split())\n    \n    # Solve\n    for question in questions:\n        player = (player % 8) + 1\n        if question[1] == \"T\":\n            player = (player % 8) + 1\n            pass\n        elif question[1] == \"H\":\n            pass\n        elif question[1] == \"P\":\n            pass\n        else:\n            print(\"Error: invalid question response\")\n            exit()\n\n    # Output\n    print(player)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # Read input\n    player = int(input())\n    num_questions = int(input())\n    questions = []\n    for i in range(num_questions):\n        questions.append(input().split())\n    \n    # Solve\n    for question in questions:\n        player = (player % 8) + 1\n        if question[1] == \"T\":  # Truth: next player\n            player = (player % 8) + 1\n        elif question[1] == \"N\":  # Dare: same player\n            pass\n        elif question[1] == \"P\":  # Pass: previous player\n            pass\n        else:\n            print(\"Error: invalid question response\")\n            exit()\n\n    # Output\n    print(player)\n\nif __name__ == \"__main__\":\n    main()\n", "\nK = int(input())\nN = int(input())\nfor i in range(N):\n    T, Z = input().split()\n    T = int(T)\n    if Z == \"T\":\n        K = (K + 1) % 8\n    elif Z == \"N\":\n        K = K\n    elif Z == \"P\":\n        K = (K - 1) % 8\n\nprint(K)\n", "\n\nk = int(input()) \nn = int(input())\nfor i in range(n):\n    t, z = input().split()\n    t = int(t)\n    if t > 210:\n        break\n    if z == \"T\":\n        k = (k + 1) % 8\n    elif z == \"N\":\n        k = (k - 1) % 8\nprint(k)\n", "\ndef main():\n    k = int(input())\n    n = int(input())\n\n    for _ in range(n):\n        _, z = input().split()\n        # t, z = int(t), z\n        if z == 'T':\n            k = (k + 1) % 8\n        elif z == 'N':\n            k = (k + 7) % 8\n        else:\n            k = (k + 6) % 8\n\n    print(k)\n\nmain()\n", "\n\ndef main():\n    # Read input\n    player = int(input())\n    num_questions = int(input())\n    questions = []\n    for i in range(num_questions):\n        questions.append(input().split())\n    \n    # Solve\n    for question in questions:\n        player = (player % 8) + 1\n        if question[0] == \"T\":\n            player = (player % 8) + 1\n            pass\n        elif question[0] == \"H\":\n            pass\n        elif question[0] == \"P\":\n            pass\n        else:\n            print(\"Error: invalid question response\")\n            exit()\n\n    # Output\n    print(player)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nK = int(input())\nN = int(input())\n\nfor i in range(N):\n    T, Z = input().split()\n    T = int(T)\n    if Z == \"T\":\n        K = (K % 8) + 1\n    else:\n        K = (K % 8) + 1\n\nprint(K)\n", "\n#this is a test\nimport sys\n\ndef main():\n\tk = int(sys.stdin.readline().strip())\n\tn = int(sys.stdin.readline().strip())\n\tl = []\n\tfor i in range(n):\n\t\tl.append(sys.stdin.readline().strip().split())\n\t\tl[i][0] = int(l[i][0])\n\t\tl[i][1] = str(l[i][1])\n\tcurr = k\n\tfor i in range(n):\n\t\tif l[i][1] == \"T\":\n\t\t\tcurr = (curr+1)%8\n\t\telif l[i][1] == \"N\":\n\t\t\tcurr = (curr-1)%8\n\t\tif l[i][0] > 210 or curr == 0:\n\t\t\tbreak\n\tprint(curr)\n\nif __name__ == '__main__':\n\tmain()\n", "\n\n# k = int(input())\n# n = int(input())\n\n# for i in range(n):\n#     t, z = input().split() \n#     t = int(t)\n#     if (t + k) % 8 == 0:\n#         k = 8\n#     else:\n#         k = (t + k) % 8\n\n# print(k)\n\n\n# k = int(input())\n# n = int(input())\n\n# for i in range(n):\n#     t, z = input().split() \n#     t = int(t)\n#     if (t + k) % 8 == 0:\n#         k = 8\n#     else:\n#         k = (t + k) % 8\n\n# print(k)\n\ndef function():\n    k = int(input())\n    n = int(input())\n\n    for i in range(n):\n        t, z = input().split() \n        t = int(t)\n        if (t + k) % 8 == 0:\n            k = 8\n        else:\n            k = (t + k) % 8\n\n    print(k)\n\nfunction()\n", "\n\nk, n = map(int, input().split())\nplayers = [False for i in range(9)]\nplayers[k] = True\nfor i in range(n):\n    time, ans = map(str, input().split())\n    time = int(time)\n    if ans == 'T':\n        pass\n    elif ans == 'N':\n        players = [False for i in range(9)]\n    elif ans == 'P':\n        players = [False for i in range(9)]\n        players[(k+1)%9] = True\n    if time >= 210:\n        print(players.index(True))\n        break\n    else:\n        players = [False for i in range(9)]\n        players[(players.index(True)+1)%9] = True \n", "\n\nk, n = map(int, input().split())\nplayers = [False for i in range(8)]\nplayers[k-1] = True\nfor i in range(n):\n    time, ans = map(str, input().split())\n    time = int(time)\n    if ans == 'T':\n        pass\n    elif ans == 'N':\n        players = [False for i in range(8)]\n    elif ans == 'P':\n        players = [False for i in range(8)]\n        players[(k-1+1)%8] = True\n    if time >= 210:\n        print(players.index(True)+1)  # index of the player who is playing at the end\n        break\n    else:\n        players = [False for i in range(8)]\n        players[(players.index(True)+1)%8] = True\n", "\n\ndef main():\n    # Read input\n    player = int(raw_input())\n    num_questions = int(raw_input())\n    questions = []\n    for i in range(num_questions):\n        questions.append(raw_input().split())\n    \n    # Solve\n    for question in questions:\n        player = (player % 8) + 1\n        if question[1] == \"T\":  # Truth\n            player = (player % 8) + 1\n        elif question[1] == \"N\":  # Dare\n            pass\n        elif question[1] == \"P\":  # Pass\n            pass\n        else:\n            print(\"Error: invalid question response\")\n            exit()\n\n    # Output\n    print(player)\n\nif __name__ == \"__main__\":\n    main()\n", "\n# file\nk, n = map(int, input().split())\nplayers = [False for i in range(8)]\nplayers[k-1] = True\nfor i in range(n):\n    time, ans = map(str, input().split())\n    time = int(time)\n    if ans == 'T':\n        pass\n    elif ans == 'N':\n        players = [False for i in range(8)]\n    elif ans == 'P':\n        players = [False for i in range(8)]\n        players[(k-1+1)%8] = True\n    if time >= 210:\n        print(players.index(True)+1)\n        break\n    else:\n        players = [False for i in range(8)]\n        players[(players.index(True)+1)%8] = True\n", "k = int(input())\nn = int(input())\n\nfor i in range(n):\n    t, z = input().split()\n    t = int(t)\n    if (t + k) % 8 == 0:\n        k = 8\n    else:\n        k = (t + k) % 8\n\nprint(k)\n", "x = int(input())\nif x >= 0:\n    if x % 2 == 0:\n        print(\"Even\")\n    else:\n        print(\"Odd\")\nelse:\n    print(\"Error\")\n", "\n\ndef main():\n    # Read input\n    player = int(input())  # 1-8\n    num_questions = int(input())  # 1-50\n    questions = []\n    for i in range(num_questions):\n        questions.append(input().split())\n    \n    # Solve the problem\n    for question in questions:\n        player = (player % 8) + 1\n        if question[0] == \"T\":\n            player = (player % 8) + int(question[1])\n        elif question[0] == \"N\":\n            player = (player % 8) + int(question[1])\n        elif question[0] == \"P\":\n            player = (player % 8) + int(question[1])\n        else:\n            print(\"Error: invalid question response\")\n            exit()\n\n    # Output\n    print(player)\n\nif __name__ == \"__main__\":\n    main()\n", "# coding=utf-8\n\nk = int(input())\nn = int(input())\nfor i in range(n):\n    t, z = input().split()\n    t = int(t)\n    if t > 210:\n        break\n    if z == \"T\":\n        k = (k + 1) % 8 + 1\n    if z == \"N\":\n        k = (k - 1) % 8 + 1\nprint(k)\n", "\n#this is a test\nimport sys\n\ndef main():\n\tk = int(sys.stdin.readline().strip())\n\tn = int(sys.stdin.readline().strip())\n\tl = []\n\tfor i in range(n):\n\t\tl.append(sys.stdin.readline().strip().split())\n\t\tl[i][0] = int(l[i][0])\n\t\tl[i][1] = str(l[i][1])\n\tcurr = k\n\tfor i in range(n):\n\t\tif l[i][1] == \"T\":\n\t\t\tcurr = (curr+1)%8\n\t\telif l[i][1] == \"N\":\n\t\t\tcurr = (curr-1)%8\n\t\tif l[i][0] > 210: #if the time is over 210 seconds\n\t\t\tbreak\n\tprint(curr)\n\nif __name__ == '__main__':\n\tmain()\n", "\nK = int(input())\nN = int(input())\n\nfor i in range(N):\n    T, Z = input().split()\n    T = int(T)\n    if Z == \"T\":\n        K = (K % 8) + 1\n\nprint(K)\n", "\n\ndef main():\n    # Get input\n    player = int(input())  # pylint: disable=invalid-name\n    num_questions = int(input())  # pylint: disable=invalid-name\n\n    # Get the answers\n    answers = [input().split() for _ in range(num_questions)]  # pylint: disable=invalid-name\n\n    # Get the time limit\n    time_limit = 3 * 60 + 30  # pylint: disable=invalid-name\n\n    # Get the player who has the box initially.\n    current_player = player  # pylint: disable=invalid-name\n\n    # Iterate through the answers\n    for time, answer in answers:  # pylint: disable=invalid-name\n        # Check if the time limit is reached\n        if int(time) > time_limit:\n            break\n        # Check if the answer is correct\n        if answer == \"T\":\n            # Pass the box to the next player\n            current_player = (current_player + 1) % 8 or 8\n        # Check if the answer is incorrect\n        elif answer == \"N\":\n            # Skip to the next question\n            continue\n        # Check if the answer is skipped\n        elif answer == \"P\":\n            # Pass the box to the next player\n            current_player = (current_player + 1) % 8 or 8\n            # Skip to the next question\n            continue\n\n    # Print the answer\n    print(current_player)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    k = int(input())\n    n = int(input())\n\n    for _ in range(n):\n        t, z = input().split()\n        t, z = int(t), z\n        if z == 'T':\n            k = (k + 1) % 8\n        if z == 'S':\n            k = (k + 7) % 8\n        if z == 'E':\n            k = (k + 6) % 8\n\n    print(k)\n\nmain()\n", "\ndef main():\n    k = int(input())\n    n = int(input())\n\n    for _ in range(n):\n        t, z = input().split()\n        t, z = int(t), z\n        if z == 'T':\n            k = (k + 1) % 8\n        elif z == 'F':\n            k = (k + 7) % 8\n        elif z == 'L':\n            k = (k + 3) % 8\n        elif z == 'R':\n            k = (k + 5) % 8\n        elif z == 'B':\n            k = (k + 6) % 8\n\n    print(k)\n\nmain()\n", "\n\ndef main():\n    # Read input\n    player = int(input())\n    num_questions = int(input())\n    questions = []\n    for i in range(num_questions):\n        questions.append(list(input().split()))\n    \n    # Solve\n    for question in questions:\n        player = (player % 8) + 1\n        if question[1] == 'T':  # Truth\n            player = (player % 8) + 1\n        elif question[1] == 'N':  # Dare\n            pass\n        elif question[1] == 'P':  # Pass\n            pass\n        else:\n            print('Error: invalid question response')\n            exit()\n\n    # Output\n    print(player)\n\nif __name__ == '__main__':\n    main()\n", "\n\nK = int(input())\nN = int(input())\n\nfor i in range(N):\n    T, Z = input().split()\n    T = int(T)\n    if Z == \"T\":\n        K = (K % 8) + 1\n    elif Z == \"F\":\n        pass\n    elif Z == \"P\":\n        pass\n\nprint(K)\n", "\n\ndef main():\n    k = int(input())\n    n = int(input())\n\n    for _ in range(n):\n        t, z = input().split()\n        t, z = int(t), z\n        if z == 'T':\n            k = (k + 1) % 8\n        elif z == 'S':\n            k = (k + 7) % 8\n        else:\n            k = (k + 6) % 8\n\n    print(k)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Get input\n    player = int(input())\n    num_questions = int(input())\n\n    # Get the answers\n    answers = [input().split() for _ in range(num_questions)]\n\n    # Get the time limit\n    time_limit = 3 * 60 + 30\n\n    # Get the player who has the box initially.\n    current_player = player\n\n    # Iterate through the answers\n    for answer in answers:\n        # Check if the time limit is reached\n        if int(answer[0]) > time_limit:\n            break\n        # Check if the answer is correct\n        if answer[1] == \"T\":\n            # Pass the box to the next player\n            current_player = (current_player + 1) % 8 or 8\n        # Check if the answer is incorrect\n        elif answer[1] == \"N\":\n            # Skip to the next question\n            continue\n        # Check if the answer is skipped\n        elif answer[1] == \"P\":\n            # Pass the box to the next player\n            current_player = (current_player + 1) % 8 or 8\n            # Skip to the next question\n            continue\n\n    # Print the answer\n    print(current_player)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    k = int(input())\n    n = int(input())\n\n    for _ in range(n):\n        t, z = input().split()\n        t, z = int(t), z\n        if z == 'T':\n            k = (k + 1) % 8\n        elif z == 'S':\n            k = (k + 7) % 8\n        else:  # z == 'E'\n\n            k = (k + 6) % 8\n\n    print(k)\n\nmain()\n", "\n\ndef main():\n    # Read input\n    player = int(input())\n    num_questions = int(input())\n    questions = []\n    for i in range(num_questions):\n        questions.append(input().split())\n    \n    # Solve\n    for question in questions: \n        player = (player % 8) + 1\n        if question[1] == \"T\":\n            player = (player % 8) + 1\n        elif question[1] == \"H\":\n            continue\n        elif question[1] == \"P\":\n            continue\n        else:\n            print(\"Error: invalid question response\")\n            exit()\n\n    # Output\n    print(player)\n\nif __name__ == \"__main__\":\n    main()\n", "\nk, n = map(int, input().split())\nplayers = [False for i in range(9)]\nplayers[k] = True\nfor i in range(n):\n    time, ans = map(str, input().split())\n    time = int(time)\n    if ans == 'T':\n        pass\n    elif ans == 'N':\n        players = [False for i in range(9)]\n    elif ans == 'P':\n        players = [False for i in range(9)]\n        players[(k + 1) % 9] = True\n    if time >= 210:\n        print(players.index(True))\n        break\n    else:\n        players = [False for i in range(9)]\n        players[(players.index(True) + 1) % 9] = True\n", "\n\nk = int(input())\nn = int(input())\nfor i in range(n):\n    t, z = input().split()\n    t = int(t)\n    if t > 210:\n        break\n    if z == \"T\":\n        k = (k + 1) % 8 + 1\n    else:\n        k = (k - 1) % 8 + 1\nprint(k)\n", "#!/usr/bin/env python3\n\nK = int(input())\nN = int(input())\n\nfor i in range(N):\n    t, z = input().split(' ')\n    t = int(t)\n    if (t + K) % 8 == 0:\n        K = 8\n    else:\n        K = (t + K) % 8\n\nprint(K)\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Wed May  1 09:55:07 2019\n\n\n@author: lisun\n\"\"\"\n\nimport pandas as pd\n\ndata_path = '../data/'\n\n\ndef get_data():\n    train = pd.read_csv(data_path + 'train.csv')\n    test = pd.read_csv(data_path + 'test.csv')\n    return train, test\n\n\ndef main():\n    train, test = get_data()\n    print(train.shape, test.shape)\n\n\nif __name__ == '__main__':\n    main()\n", "\nK = int(input())\nN = int(input())\n\nfor i in range(N):\n    t, z = input().split()\n    t = int(t)\n    if z == \"T\":\n        K = (K % 8) + 1\n    elif z == \"F\":\n        K = (K % 8) + 1\n\nprint(K)\n", "\nK = int(input())\nN = int(input())\n\nfor i in range(N):\n    t, z = input().split()\n    t = int(t)\n    if (t + K) % 8 == 0:\n        K = 8\n    else:\n        K = (t + K) % 8\nprint(K)\n", "K = int(input())\nN = int(input())\nfor i in range(N):\n    T, Z = input().split(\" \")\n    T = int(T)\n    if Z == \"T\":\n        K = (K % 8) + 1 if K < 8 else 1\n    elif Z == \"N\":\n        K = K\n    elif Z == \"P\":\n        K = (K % 8) + 1 if K < 8 else 1\n\nprint(K)\n", "\nk, n = map(int, input().split())\nplayers = [False for i in range(8)]\nplayers[k-1] = True\nfor i in range(n):\n    time, ans = map(str, input().split())\n    time = int(time)\n    if ans == 'T':\n        print(players.index(True)+1)\n    elif ans == 'N':\n        players = [False for i in range(8)]\n    elif ans == 'P':\n        players = [False for i in range(8)]\n        players[(k-1+1)%8] = True\n    if time >= 210:\n        print(players.index(True)+1) # index of the player who is playing at the end\n        break\n    else:\n        players = [False for i in range(8)]\n        players[(players.index(True)+1)%8] = True\n", "\n\ndef main():\n    # Read input\n    player = int(input())\n    num_questions = int(input())\n    questions = []\n    for i in range(num_questions):\n        questions.append(input().split())\n    \n    # Solve the problem\n    for question in questions:\n        player = (player % 8) + 1\n        if question[0] == \"T\":\n            player = (player % 8) + 1\n        elif question[0] == \"N\":\n            pass\n        elif question[0] == \"P\":\n            pass\n        else:\n            print(\"Error: invalid question response\")\n            exit()\n\n    # Output\n    print(player)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    k = int(input())\n    n = int(input())\n\n    for _ in range(n):\n        t, z = input().split()\n        t, z = int(t), z\n        if z == 'T':\n            k = (k + 1) % 8\n        elif z == 'F':\n            k = (k + 7) % 8\n        else: #z == 'B'\n            k = (k + 6) % 8\n\n    print(k)\n\nmain()\n", "\n\nK = int(input())\nN = int(input())\n\nfor i in range(N):\n    T, Z = input().split() \n    T = int(T)\n    if Z == \"T\": \n        K = (K % 8) + 1\n    elif Z == \"F\": \n        K = K\n    elif Z == \"P\": \n        K = (K % 8) + 1\n\nprint(K)\n", "\ndef main():\n    k = int(input())\n    n = int(input())\n\n    for _ in range(n):\n        t, z = input().split()\n        t, z = int(t), z\n        if z == 'T':\n            k = (k + 1) % 8\n        elif z == 'S':\n            k = (k + 7) % 8\n        else:\n            k = (k + 6) % 8\n\n    print(k)\n\nmain()\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun Jun  3 11:01:52 2018\n\"\"\"\nk = int(input())\nn = int(input())\n\nfor i in range(n):\n    t, z = input().split()\n    t = int(t)\n    if (t + k) % 8 == 0:\n        k = 8\n    else:\n        k = (t + k) % 8\n\nprint(k)\n", "\n\ndef main():\n    k = int(input())\n    n = int(input())\n\n    for _ in range(n):\n        t, z = input().split()\n        t, z = int(t), z\n        if z == 'T':\n            k = (k + t) % 8\n        elif z == 'S':\n            k = (k + 8 - t) % 8\n        else:\n            k = (k + 8 + t) % 8\n\n    print(k)\n\nmain()\n", "\n\nk = int(input()) \nn = int(input())\nfor i in range(n):\n    t, z = input().split()\n    t = int(t)\n    if t > 210:\n        break\n    if z == \"T\":\n        k = (k + 1) % 8\n    else:\n        k = (k - 1) % 8\nprint(k)\n", "\nimport sys\n\ndef main():\n\tk = int(sys.stdin.readline().strip())\n\tn = int(sys.stdin.readline().strip())\n\tl = []\n\tfor i in range(n):\n\t\tl.append(sys.stdin.readline().strip().split())\n\t\tl[i][0] = int(l[i][0])\n\t\tl[i][1] = str(l[i][1])\n\tcurr = k\n\tfor i in range(n):\n\t\tif l[i][1] == \"T\":\n\t\t\tcurr = (curr+1)%8\n\t\telif l[i][1] == \"F\":\n\t\t\tcurr = (curr-1)%8\n\t\tif l[i][0] > 210:\n\t\t\tbreak\n\tprint(curr)\n\nif __name__ == '__main__':\n\tmain()\n", "\ndef main():\n    # Read input\n    player = int(input())\n    num_questions = int(input())\n    questions = []\n    for i in range(num_questions):\n        questions.append(input().split())\n\n    # Solve the problem\n    for question in questions:\n        player = (player % 8) + 1\n        if question[1] == \"T\":\n            player = (player % 8) + 1\n        elif question[1] == \"N\":\n            pass\n        elif question[1] == \"P\":\n            pass\n        else:\n            print(\"Error: invalid question response\")\n            exit()\n\n    # Output\n    print(player)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # Get input\n    player = int(input())\n    num_answers = int(input())\n\n    # Get the answers\n    answers = [input().split() for _ in range(num_answers)]\n\n    # Get the time limit\n    time_limit = 3 * 60 + 30\n\n    # Get the player who has the box initially\n    current_player = player\n\n    # Iterate through the answers\n    for answer in answers:\n        # Check if the time limit is reached\n        if int(answer[0]) > time_limit:\n            break\n        # Check if the answer is correct\n        if answer[1] == \"T\":\n            # Pass the box to the next player\n            current_player = (current_player + 1) % 8 or 8\n        # Check if the answer is incorrect\n        elif answer[1] == \"N\":\n            # Skip to the next question\n            continue\n        # Check if the answer is skipped\n        elif answer[1] == \"P\":\n            # Pass the box to the next player\n            current_player = (current_player + 1) % 8 or 8\n            # Skip to the next question\n            continue\n\n    # Print the answer\n    print(current_player)\n\nif __name__ == \"__main__\":\n    main()\n", "\nK = int(input())\nN = int(input())\n\nfor i in range(N):\n    t, z = input().split()\n    t = int(t)\n    K = (t + K) % 8\n\nprint(K)\n", "k, n = map(int, input().split())\nplayers = [False for i in range(8)]\nplayers[k-1] = True\nfor i in range(n):\n    time, ans = map(str, input().split())\n    time = int(time)\n    if ans == 'T':\n        pass\n    elif ans == 'N':\n        players = [False for i in range(8)]\n    elif ans == 'P':\n        players = [False for i in range(8)]\n        players[(k-1+1)%8] = True\n    if time >= 210:\n        print(players.index(True)+1) # index of the player who is playing at the end\n        break\n    else:\n        players = [False for i in range(8)]\n        players[(players.index(True)+1)%8] = True\n", "\n#this is a test\nimport sys\n\ndef main():\n\tk = int(sys.stdin.readline().strip())\n\tn = int(sys.stdin.readline().strip())\n\tl = []\n\tfor i in range(n):\n\t\tl.append(sys.stdin.readline().strip().split())\n\t\tl[i][0] = int(l[i][0])\n\t\tl[i][1] = str(l[i][1])\n\tcurr = k\n\tfor i in range(n):\n\t\tif l[i][1] == \"T\":\n\t\t\tcurr = (curr+1)%9\n\t\telif l[i][1] == \"N\":\n\t\t\tcurr = (curr-1)%9\n\t\tif l[i][0] > 210:\n\t\t\tbreak\n\tprint(curr)\n\nif __name__ == '__main__':\n\tmain()\n", "\nk = int(input())\nn = int(input())\n\nfor i in range(n):\n    t, z = input().split()\n    t = int(t)\n    if (t + k) % 8 == 0:\n        k = 8\n    else:\n        k = (t + k) % 8\n\nprint(k)\n", "\n# \u7b80\u5355\u9898\uff0c\u6a21\u62df\u5c31\u53ef\u4ee5\u4e86\n\nk = int(input()) \nn = int(input())\nfor i in range(n):\n    t, z = input().split()\n    t = int(t)\n    if t > 210:\n        break\n    if z == \"T\":\n        k = (k + 1) % 8\n    else:\n        k = (k - 1) % 8\nprint(k)\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Wed May  1 09:55:07 2019\n\n\n@author: lisun\n\"\"\"\n\nimport pandas as pd\n\ndata_path = 'data/'\n\n\ndef get_data():\n    train = pd.read_csv(data_path + 'train.csv')\n    test = pd.read_csv(data_path + 'test.csv')\n    return train, test\n\ndef main():\n    train, test = get_data()\n    print(train.shape, test.shape)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Get input\n    player = int(input())\n    num_answers = int(input())\n\n    # Get the answers\n    answers = [input().split() for _ in range(num_answers)]\n\n    # Get the time limit\n    time_limit = 3 * 60 + 30\n\n    # Get the ID of the player who has the box initially\n    current_player_id = player\n\n    # Iterate through the answers\n    for time, answer in answers[:time_limit]:\n        # Check if the time limit is reached\n        if int(time) > time_limit:\n            break\n        # Check if the answer is correct\n        if answer == \"T\":\n            # Pass the box to the next player\n            current_player_id = (current_player_id + 1) % 8 or 8\n        # Check if the answer is incorrect\n        elif answer == \"N\":\n            # Skip to the next question\n            continue\n        # Check if the answer is skipped\n        elif answer == \"P\":\n            # Pass the box to the next player\n            current_player_id = (current_player_id + 1) % 8 or 8\n            # Skip to the next question\n            continue\n\n    # Print the answer\n    print(current_player_id)\n\nif __name__ == \"__main__\":\n    main()\n"]