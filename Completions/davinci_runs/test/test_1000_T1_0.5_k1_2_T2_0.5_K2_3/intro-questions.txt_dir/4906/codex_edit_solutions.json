["\n\ndef main():\n    input_list = input().strip().split()\n    if input_list[0].upper() == 'E':\n        print(encode(input_list[1].strip()))\n    elif input_list[0].upper() == 'D':\n        print(decode(input_list[1].strip()))\n\n\ndef encode(text):\n    encoded_text = ''\n    cur_char = ''\n    char_count = 0\n    for char in text:\n        if char == cur_char:\n            char_count += 1\n        else:\n            if cur_char != '':\n                encoded_text += cur_char + str(char_count)\n            cur_char = char\n            char_count = 1\n    encoded_text += cur_char + str(char_count)\n    return encoded_text\n\n\ndef decode(text):\n    decoded_text = ''\n    for i in range(0, len(text), 2):\n        decoded_text += text[i] * int(text[i + 1])\n    return decoded_text\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef decode(message):\n    decoded = \"\"\n    for i in range(0, len(message), 2):\n        decoded += message[i] * int(message[i+1])\n    return decoded\n\ndef encode(message):\n    encoded = \"\"\n    prev = \"\"\n    count = 0\n    for i in range(len(message)):\n        if message[i] == prev:\n            count += 1\n        else:\n            if prev != \"\":\n                encoded += prev + str(count)\n            prev = message[i]\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef main():\n    line = sys.stdin.readline().strip().split(\" \")\n    if line[0] == \"E\":\n        print(encode(line[1]))\n    else:\n        print(decode(line[1]))\n\nmain()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef encode(msg):\n    msg = list(msg)\n    new_msg = \"\"\n    count = 1\n    for i in range(len(msg)):\n        if i == len(msg) - 1:\n            new_msg += msg[i] + str(count)\n            break\n        if msg[i] == msg[i + 1]:\n            count += 1\n        else:\n            new_msg += msg[i] + str(count)\n            count = 1\n    return new_msg\n\ndef decode(msg):\n    msg = list(msg)\n    new_msg = \"\"\n    count = \"\"\n    for i in range(len(msg)):\n        if i % 2 == 0:\n            new_msg += msg[i]\n        else:\n            count += msg[i]\n            if i == len(msg) - 1 or msg[i + 1] in \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_!.\":\n                new_msg += msg[i - 1] * int(count)\n                count = \"\"\n    return new_msg\n\ndef main():\n    msg = sys.stdin.readline().strip().split()\n    if msg[0] == \"E\":\n        print(encode(msg[1]))\n    else:\n        print(decode(msg[1]))\n\nif __name__ == '__main__':\n    main()\n", "#! /usr/bin/python3\n\nimport sys\n\ndef encode(string):\n    encoded = \"\"\n    prev = string[0]\n    count = 0\n    for c in string:\n        if c == prev:\n            count += 1\n        else:\n            encoded += prev + str(count)\n            prev = c\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = \"\"\n    for i in range(0, len(string), 2):\n        decoded += string[i]*int(string[i+1])\n    return decoded\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line[0] == \"E\" or line[0] == \"e\":\n        print(encode(line[2:]))\n    else:\n        print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    input_list = input().split()\n    if input_list[0] == 'E':\n        print(encode(input_list[1]))\n    elif input_list[0] == 'D':\n        print(decode(input_list[1]))\n\n\ndef encode(text):\n    encoded_text = ''\n    cur_symbol = ''\n    symbol_count = 0\n    for char in text:\n        if char == cur_symbol:\n            symbol_count += 1\n        else:\n            if cur_symbol != '':\n                encoded_text += cur_symbol + str(symbol_count)\n            cur_symbol = char\n            symbol_count = 1\n    encoded_text += cur_symbol + str(symbol_count)\n    return encoded_text\n\n\ndef decode(text):\n    decoded_text = ''\n    for i in range(0, len(text), 2):\n        decoded_text += text[i] * int(text[i+1])\n    return decoded_text\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef encode(string_to_encode):\n    encoded_string = \"\"\n    count = 1\n    for i in range(len(string_to_encode)-1):\n        if string_to_encode[i] == string_to_encode[i+1]:\n            count += 1\n        else:\n            encoded_string += string_to_encode[i] + str(count)\n            count = 1\n    encoded_string += string_to_encode[-1] + str(count)\n    return encoded_string\n\ndef decode(string_to_decode):\n    decoded_string = \"\"\n    for i in range(0, len(string_to_decode)-1, 2):\n        decoded_string += string_to_decode[i] * int(string_to_decode[i+1])\n    return decoded_string\n\ndef main():\n    for line in sys.stdin:\n        if line[0] == \"E\":\n            print(encode(line[2:]))\n        else:\n            print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    encoded = sys.stdin.readline().strip().split()\n    if encoded[0] == \"E\":\n        print(encode(encoded[1]), end='')\n    else:\n        print(decode(encoded[1]), end='')\n\ndef encode(string):\n    encoded = \"\"\n    count = 0\n    for i in range(len(string)):\n        count += 1\n        if i == len(string)-1 or string[i] != string[i+1]:\n            encoded += string[i] + str(count)\n            count = 0\n    return encoded\n\ndef decode(string):\n    decoded = \"\"\n    for i in range(len(string)):\n        if i % 2 == 0:\n            decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    input_list = input().split()\n    if input_list[0] == 'E':\n        print(encode(input_list[1]))\n    elif input_list[0] == 'D':\n        print(decode(input_list[1]))\n\n\ndef encode(text):\n    encoded_text = ''\n    cur_symbol = ''\n    symbol_count = 0\n    for char in text:\n        if char == cur_symbol:\n            symbol_count += 1\n        else:\n            if cur_symbol != '':\n                encoded_text += cur_symbol + str(symbol_count)\n            cur_symbol = char\n            symbol_count = 1\n    encoded_text += cur_symbol + str(symbol_count)\n    return encoded_text\n\n\ndef decode(text):\n    decoded_text = ''\n    for i in range(0, len(text), 2):\n        decoded_text += text[i] * int(text[i + 1])\n    return decoded_text\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef encode(string):\n    # your code here\n    pass\n\ndef decode(string):\n    # your code here\n    pass\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line[0] == \"E\":\n        print(encode(line[2:]))\n    else:\n        print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    encoded = input().strip().split()\n    if encoded[0] == \"E\":\n        print(encode(encoded[1]))\n    else:\n        print(decode(encoded[1]))\n\ndef encode(string):\n    encoded = \"\"\n    count = 0\n    for i in range(len(string)):\n        count += 1\n        if i == len(string)-1 or string[i] != string[i+1]:\n            encoded += string[i] + str(count)\n            count = 0\n    return encoded\n\ndef decode(string):\n    decoded = \"\"\n    for i in range(len(string)):\n        if i % 2 == 0:\n            decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef decode(messages):\n    decoded = \"\"\n    for i in range(0, len(messages), 2):\n        decoded += messages[i] * int(messages[i + 1])\n    return decoded\n\ndef encode(messages):\n    encoded = \"\"\n    prev = \"\"\n    count = 0\n    for i in range(len(messages)):\n        if messages[i] == prev:\n            count += 1\n        else:\n            if prev != \"\":\n                encoded += prev + str(count)\n            prev = messages[i]\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef main():\n    line = sys.stdin.readline().strip().split()\n    if line[0] == \"E\":\n        print(encode(line[1]))\n    else:\n        print(decode(line[1]))\n\nmain()\n", "\n\ndef main():\n    input_list = input().split()\n    if input_list[0] == 'E' or input_list[0] == 'e':\n        print(encode(input_list[1]))\n    elif input_list[0] == 'D' or input_list[0] == 'd':\n        print(decode(input_list[1]))\n\n\ndef encode(text):\n    encoded_text = ''\n    cur_char = ''\n    char_count = 0\n    for char in text:\n        if char == cur_char:\n            char_count += 1\n        else:\n            if cur_char != '':\n                encoded_text += cur_char + str(char_count)\n            cur_char = char\n            char_count = 1\n    encoded_text += cur_char + str(char_count)\n    return encoded_text\n\n\ndef decode(text):\n    decoded_text = ''\n    for i in range(0, len(text), 2):\n        decoded_text += text[i] * int(text[i+1])\n    return decoded_text\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    input_list = input().split()\n    if input_list[0] == 'E' or input_list[0] == 'e':\n        print(encode(input_list[1]))\n    elif input_list[0] == 'D' or input_list[0] == 'd':\n        print(decode(input_list[1]))\n\n\n\ndef encode(text):\n    encoded_text = ''\n    cur_char = ''\n    char_count = 0\n    for char in text:\n        if char == cur_char:\n            char_count += 1\n        else:\n            if cur_char != '':\n                encoded_text += cur_char + str(char_count)\n            cur_char = char\n            char_count = 1\n    encoded_text += cur_char + str(char_count)\n    return encoded_text\n\n\ndef decode(text):\n    decoded_text = ''\n    for i in range(0, len(text), 2):\n        decoded_text += text[i]*int(text[i+1])\n    return decoded_text\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef encode(string):\n    new_string = \"\"\n    count = 1\n    for i in range(0, len(string) - 1):\n        if string[i] == string[i + 1]:\n            count += 1\n        else:\n            new_string += string[i] + str(count)\n            count = 1\n    new_string += string[-1] + str(count)  # for last character\n    return new_string\n\ndef decode(string):\n    new_string = \"\"\n    for i in range(0, len(string) - 1, 2):\n        new_string += string[i] * int(string[i + 1])\n    return new_string\n\ndef main():\n    for line in sys.stdin:\n        if line[0] == \"E\":\n            print(encode(line[2:]))\n        else:\n            print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    # get input\n    input_ = sys.stdin.readlines()\n    input_ = [x.strip() for x in input_]\n\n    # find out if encoding or decoding\n    if input_[0][0] == 'E':\n        encoded = encode(input_[0][2:])\n        print(encoded)\n    else:\n        decoded = decode(input_[0][2:])\n        print(decoded)\n\ndef encode(string):\n    encoded = ''\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            encoded += string[i] + str(count)\n            count = 1\n    encoded += string[-1] + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ''\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    user_input = sys.stdin.readline().strip().split()\n    if user_input[0] == \"E\":\n        encode(user_input[1])\n    elif user_input[0] == \"D\":\n        decode(user_input[1])\n\ndef encode(string):\n    encoded_string = \"\"\n    count = 1\n    for i in range(1, len(string)):\n        if string[i] == string[i-1]:\n            count += 1\n        else:\n            encoded_string += string[i-1] + str(count)\n            count = 1\n    encoded_string += string[-1] + str(count)\n    print(encoded_string)\n\ndef decode(string):\n    decoded_string = \"\"\n    for i in range(0, len(string), 2):\n        decoded_string += string[i] * int(string[i+1])\n    print(decoded_string)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys, string\n\ndef decode(message, ignore_case):\n    decoded = \"\"\n    i = 0\n    while i < len(message):\n        if message[i].isalpha():\n            if ignore_case:\n                decoded += message[i].lower()*int(message[i+1])\n            else:\n                decoded += message[i]*int(message[i+1])\n            i += 2\n        else:\n            decoded += message[i]\n            i += 1\n    return decoded\n\ndef encode(message, ignore_case):\n    encoded = \"\"\n    prev = \"\"\n    count = 0\n    i = 0\n    while i < len(message):\n        if message[i].isalpha():\n            if ignore_case:\n                if message[i].lower() == prev:\n                    count += 1\n                else:\n                    if prev != \"\":\n                        encoded += prev + str(count)\n                    prev = message[i].lower()\n                    count = 1\n            else:\n                if message[i] == prev:\n                    count += 1\n                else:\n                    if prev != \"\":\n                        encoded += prev + str(count)\n                    prev = message[i]\n                    count = 1\n            i += 1\n        else:\n            encoded += message[i]\n            i += 1\n    encoded += prev + str(count)\n    return encoded\n\ndef main():\n    line = sys.stdin.readline().strip().split(\" \")\n    if line[0] == \"E\":\n        print(encode(line[1], line[2] == \"T\"))\n    else:\n        print(decode(line[1], line[2] == \"T\"))\n\nmain()\n", "\n# fix spelling mistakes\nimport sys\n\ndef encode(msg):\n    new_msg = \"\"\n    count = 1\n    for i in range(len(msg)):\n        if i == len(msg) - 1:\n            new_msg += msg[i] + str(count)\n            break\n        elif msg[i] != msg[i + 1]:\n            new_msg += msg[i] + str(count)\n            count = 1\n    return new_msg\n\ndef decode(msg):\n    new_msg = \"\"\n    count = \"\"\n    for i in range(len(msg)):\n        if i % 2 == 0:\n            new_msg += msg[i]\n        else:\n            count += msg[i]\n            if i == len(msg) - 1 or msg[i + 1] in \"abcdefghijklmnopqrstuvwxyz_!.\":\n                new_msg += msg[i - 1] * int(count)\n                count = \"\"\n    return new_msg\n\ndef main():\n    msg = sys.stdin.readline().strip().split()\n    if msg[0] == \"E\":\n        print(encode(msg[1]))\n    else:\n        print(decode(msg[1]))\n\nif __name__ == '__main__':\n    main()\n", "\n \nimport sys, string\n\ndef decode(message, ignore_case):\n    decoded = \"\"\n    i = 0\n    while i < len(message):\n        if message[i].isalpha():\n            if ignore_case:\n                decoded += message[i].lower()*int(message[i+1])\n            else:\n                decoded += message[i]*int(message[i+1])\n            i += 2\n        else:\n            decoded += message[i]\n            i += 1\n    return decoded\n\ndef encode(message, ignore_case):\n    encoded = \"\"\n    prev = \"\"\n    count = 0\n    i = 0\n    while i < len(message):\n        if message[i].isalpha():\n            if ignore_case:\n                if message[i].lower() == prev:\n                    count += 1\n                else:\n                    if prev != \"\":\n                        encoded += prev + str(count)\n                    prev = message[i].lower()\n                    count = 1\n            else:\n                if message[i] == prev:\n                    count += 1\n                else:\n                    if prev != \"\":\n                        encoded += prev + str(count)\n                    prev = message[i]\n                    count = 1\n            i += 1\n        else:\n            encoded += message[i]\n            i += 1\n    encoded += prev + str(count)\n    return encoded\n\ndef main():\n    line = sys.stdin.readline().strip().split(\" \")\n    if line[0] == \"E\":\n        print(encode(line[1], line[2] == \"T\"))\n    else:\n        print(decode(line[1], line[2] == \"T\"))\n\nmain()\n", "\nimport sys\n\ndef main():\n    # get input\n    user_input = sys.stdin.readlines()\n    user_input = [x.strip() for x in user_input]\n\n    # find out if encoding or decoding\n    if user_input[0][0] == 'E':\n        encoded = encode(user_input[0][2:])\n        print(encoded)\n    else:\n        decoded = decode(user_input[0][2:])\n        print(decoded)\n\ndef encode(string):\n    encoded = ''\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            encoded += string[i] + str(count)\n            count = 1\n    encoded += string[-1] + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ''\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == '__main__':\n    main()\n", "#! /usr/bin/python3\n\nimport sys\n\ndef encode(string):\n    encoded = \"\"\n    prev = string[0]\n    count = 0\n    for c in string:\n        if c == prev:\n            count += 1\n        else:\n            encoded += prev + str(count)\n            prev = c\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = \"\"\n    for i in range(0, len(string), 2):\n        decoded += string[i]*int(string[i+1])\n    return decoded\n\ndef main():\n    try:\n        line = sys.stdin.readline().strip()\n        if line[0] == \"E\":\n            print(encode(line[2:]))\n        else:\n            print(decode(line[2:]))\n    except:\n        print(\"INVALID INPUT\")\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    input_string = sys.stdin.readline().strip().split()\n    if input_string[0] == \"E\":\n        encode(input_string[1])\n    elif input_string[0] == \"D\":\n        decode(input_string[1])\n\ndef encode(string):\n    encoded_string = \"\"\n    count = 1\n    for i in range(1, len(string)):\n        if string[i] == string[i-1]:\n            count += 1\n        else:\n            encoded_string += string[i-1] + str(count)\n            count = 1\n    encoded_string += string[-1] + str(count)\n    print(encoded_string)\n\ndef decode(string):\n    decoded_string = \"\"\n    for i in range(0, len(string), 2):\n        decoded_string += string[i] * int(string[i+1])\n    print(decoded_string)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef encode(string): # This is a comment\n    encoded = \"\"\n    prev = string[0]\n    count = 0\n    for c in string:\n        if c == prev:\n            count += 1\n        else:\n            encoded += prev + str(count)\n            prev = c\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = \"\"\n    for i in range(0, len(string), 2):\n        decoded += string[i]*int(string[i+1])\n    return decoded\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line[0] == \"E\":\n        print(encode(line[2:]))\n    else:\n        print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    while True:\n        encoding = sys.stdin.readline().strip().split()\n        if encoding[0] == \"E\":\n            print(encode(encoding[1]))\n        else:\n            print(decode(encoding[1]))\n\ndef encode(string):\n    encoded = \"\"\n    count = 0\n    for i in range(len(string)):\n        count += 1\n        if i == len(string)-1 or string[i] != string[i+1]:\n            encoded += string[i] + str(count)\n            count = 0\n    return encoded\n\ndef decode(string):\n    decoded = \"\"\n    for i in range(len(string)):\n        if i % 2 == 0:\n            decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef decode(message):\n    decoded = \"\"\n    for i in range(0, len(message), 2):\n        decoded += message[i] * int(message[i + 1])\n    return decoded\n\ndef encode(message):\n    encoded = \"\"\n    prev = \"\"\n    count = 0\n    for i in range(0, len(message)):\n        if message[i] == prev:\n            count += 1\n        else:\n            if prev != \"\":\n                encoded += prev + str(count)\n            prev = message[i]\n            count = 1\n    if prev != \"\":\n        encoded += prev + str(count)\n    return encoded\n\ndef main():\n    line = sys.stdin.readline().strip().split()\n    if line[0] == \"E\":\n        print(encode(line[1]))\n    else:\n        print(decode(line[1]))\n\nmain()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef encode(string):\n    # your code here\n    pass\n\ndef decode(string):\n    # your code here\n    pass\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line[0] == \"E\":\n        print(encode(line[2:]))\n    else:\n        print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python\n\nimport sys\n\ndef main():\n    # get input\n    user_input = sys.stdin.readlines()\n    user_input = [x.strip() for x in user_input]\n\n    # find out if encoding or decoding\n    if user_input[0][0] == 'E':\n        encoded = encode(user_input[0][2:])\n        print(encoded)\n    else:\n        decoded = decode(user_input[0][2:])\n        print(decoded)\n\ndef encode(string):\n    encoded = ''\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            encoded += string[i] + str(count)\n            count = 1\n    encoded += string[-1] + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ''\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef encode(msg):\n    msg = list(msg)\n    new_msg = \"\"\n    count = 1\n    for i in range(len(msg)):\n        if msg[i] == msg[i + 1]:\n            count += 1\n        else:\n            new_msg += msg[i] + str(count)\n            count = 1\n    return new_msg\n\ndef decode(msg):\n    msg = list(msg)\n    new_msg = \"\"\n    count = 0\n    for i in range(len(msg)):\n        if i % 2 == 0:\n            new_msg += msg[i]\n        else:\n            count = int(msg[i])\n            if i == len(msg) - 1 or msg[i + 1] in \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_!.\":\n                new_msg += msg[i - 1] * count\n                count = 0\n    return new_msg\n\ndef main():\n    msg = sys.stdin.readline().strip().split()\n    if msg[0] == \"E\":\n        print(encode(msg[1]))\n    else:\n        print(decode(msg[1]))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python\n\nimport sys\n\ndef main():\n    # get input\n    inp = sys.stdin.readlines()\n    inp = [x.strip() for x in inp]\n\n    # find out if encoding or decoding\n    if inp[0][0] == 'E':\n        encoded = encode(inp[0][2:])\n        print(encoded)\n    else:\n        decoded = decode(inp[0][2:])\n        print(decoded)\n\ndef encode(string):\n    encoded = ''\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            encoded += string[i] + str(count)\n            count = 1\n    encoded += string[-1] + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ''\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\n\ndef encode(msg):\n    new_msg = \"\"\n    count = 1\n    for i in range(len(msg) - 1):\n        if msg[i] == msg[i + 1]:\n            count += 1\n        else:\n            new_msg += msg[i] + str(count)\n            count = 1\n    return new_msg\n\n\ndef decode(msg):\n    new_msg = \"\"\n    count = 0\n    for i in range(len(msg)):\n        if i % 2 == 0:\n            new_msg += msg[i]\n        else:\n            count = int(msg[i])\n            if i == len(msg) - 1 or msg[i + 1] in \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_!.\":  # noqa: E501\n                new_msg += msg[i - 1] * count\n                count = 0\n    return new_msg\n\n\ndef main():\n    msg = sys.stdin.readline().strip().split()\n    if msg[0] == \"E\":\n        print(encode(msg[1]))\n    else:\n        print(decode(msg[1]))\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    encode = sys.stdin.readline().strip().split()\n    if encode[0] == \"E\":\n        print(encode_string(encode[1]))\n    else:\n        print(decode_string(encode[1]))\n\ndef encode_string(encode):\n    encoded = ''\n    count = 0\n    for i in range(len(encode)):\n        count += 1\n        if i == len(encode)-1 or encode[i] != encode[i+1]:\n            encoded += encode[i] + str(count)\n            count = 0\n    return encoded\n\ndef decode_string(encode):\n    decoded = \"\"\n    for i in range(len(encode)):\n        if i % 2 == 0:\n            decoded += encode[i] * int(encode[i+1])\n    return decoded\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    input_list = input().split()\n    if input_list[0] == 'E' or input_list[0] == 'e':\n        print(encode(input_list[1]))\n    elif input_list[0] == 'D' or input_list[0] == 'd':\n        print(decode(input_list[1]))\n\n\ndef encode(text):\n    encoded_text = ''\n    cur_char = ''\n    char_count = 0\n    for char in text:\n        if char == cur_char:\n            char_count += 1\n        else:\n            if cur_char != '':\n                encoded_text += cur_char + str(char_count)\n            cur_char = char\n            char_count = 1\n    encoded_text += cur_char + str(char_count)\n    return encoded_text\n\n\ndef decode(text):\n    decoded_text = ''\n    for i in range(0, len(text) - 1, 2):\n        decoded_text += text[i]*int(text[i+1])\n    return decoded_text\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\n    string_to_encode = string_to_encode.strip()\ndef encode(string_to_encode):\n    encoded_string = \"\"\n    count = 1\n    for i in range(len(string_to_encode) - 1):\n        if string_to_encode[i] == string_to_encode[i + 1]:\n            count += 1\n        else:\n            encoded_string += string_to_encode[i] + str(count)\n            count = 1\n    encoded_string += string_to_encode[-1]\n    if count > 1:\n        encoded_string += str(count)\n    return encoded_string\n\n    string_to_decode = string_to_decode.strip()\ndef decode(string_to_decode):\n    decoded_string = \"\"\n    for i in range(0, len(string_to_decode) - 1, 2):\n        decoded_string += string_to_decode[i] * int(string_to_decode[i + 1])\n    return decoded_string\n\ndef main():\n    for line in sys.stdin:\n        if line[0] == \"E\" or line[0] == \"e\":\n            print(encode(line[2:].strip()))\n        else:\n            print(decode(line[2:].strip()))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    input_list = input().strip().split(' ')\n    if input_list[0].upper() == 'E' and len(input_list) == 2:\n        print(encode(input_list[1]))\n    elif input_list[0].upper() == 'D' and len(input_list) == 2:\n        print(decode(input_list[1]))\n\n\ndef encode(text):\n    encoded_text = ''\n    cur_char = ''\n    char_count = 0\n    for char in text:\n        if char == cur_char:\n            char_count += 1\n        else:\n            if cur_char != '':\n                encoded_text += cur_char + str(char_count)\n            cur_char = char\n            char_count = 1\n    encoded_text += cur_char + str(char_count)\n    return encoded_text\n\n\ndef decode(text):\n    decoded_text = ''\n    for i in range(0, len(text), 2):\n        decoded_text += text[i] * int(text[i+1])\n    return decoded_text\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef encode(string):\n    new_string = ''\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i + 1]:\n            count += 1\n        else:\n            new_string += string[i] + str(count)\n            count = 1\n    new_string += string[-1] + str(count) \n    return new_string\n\ndef decode(string):\n    new_string = ''\n    for i in range(0, len(string) - 1, 2):\n        new_string += string[i] * int(string[i + 1])\n    return new_string\n\ndef main():\n    for line in sys.stdin:\n        if line[0] == 'E':\n            print(encode(line[2:]))\n        else:\n            print(decode(line[2:]))\n\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef encode(string):\n    new_string = \"\"\n    count = 1\n    for i in range(0, len(string)-1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            new_string += string[i] + str(count)\n            count = 1\n    new_string += string[-1] + str(count)\n    return new_string\n\ndef decode(string):\n    new_string = \"\"\n    for i in range(0, len(string)-1, 2):\n        new_string += string[i] * int(string[i+1])\n    return new_string\n\ndef main():\n    for line in sys.stdin:\n        if line[0] == \"E\":\n            print(encode(line[2:]))\n        else:\n            print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n", "\n# fix spelling mistakes\nimport sys\n\ndef encode(msg):\n    msg = list(msg)\n    new_msg = \"\"\n    count = 1\n    for i in range(len(msg)):\n        if i == len(msg) - 1:\n            new_msg += msg[i] + str(count)\n            break\n        elif msg[i] == msg[i + 1]:\n            count += 1\n        else:\n            new_msg += msg[i] + str(count)\n            count = 1\n    return new_msg\n\ndef decode(msg):\n    msg = list(msg)\n    new_msg = \"\"\n    count = \"\"\n    for i in range(len(msg)):\n        if i % 2 == 0:\n            new_msg += msg[i]\n        else:\n            count += msg[i]\n            if i == len(msg) - 1 or msg[i + 1] in \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_!.\":\n                new_msg += msg[i - 1] * int(count)\n                count = \"\"\n    return new_msg\n\ndef main():\n    msg = sys.stdin.readline().strip().split()\n    if msg[0] == \"E\":\n        print(encode(msg[1]))\n    else:\n        print(decode(msg[1]))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef encode(string):\n    new_string = \"\"\n    count = 1\n    for i in range(0, len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            new_string += string[i] + str(count)\n            count = 1\n    new_string += string[-1] + str(count)\n    return new_string\n\ndef decode(string):\n    new_string = \"\"\n    for i in range(0, len(string) - 1, 2):\n        new_string += string[i] * int(string[i + 1])\n    return new_string\n\ndef main():\n    for line in sys.stdin:\n        if line[0] == \"E\":\n            print(encode(line[2:]))\n        else:\n            print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    encoded = sys.stdin.readline().strip().split()\n    print(encode(encoded[1]))\n    print(decode(encoded[1]))\n\ndef encode(string):\n    encoded = \"\"\n    count = 0\n    for i in range(len(string)):\n        count += 1\n        if i == len(string)-1 or string[i] != string[i+1]:\n            encoded += string[i] + str(count)\n            count = 0\n    return encoded\n\ndef decode(string):\n    decoded = \"\"\n    for i in range(len(string)):\n        if i % 2 == 0:\n            decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\n\nimport sys\n\ndef encode(string):\n    new_string = ''\n    count = 1\n    for i in range(len(string)-1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            new_string += string[i] + str(count)\n            count = 1\n    new_string += string[-1] + str(count)\n    return new_string\n\ndef decode(string):\n    new_string = ''\n    for i in range(0, len(string)-1, 2):\n        new_string += string[i] * int(string[i+1])\n    return new_string\n\ndef main():\n    for line in sys.stdin:\n        if line[0] == 'E':\n            print(encode(line[2:]))\n        else:\n            print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    encoding = sys.stdin.readline().strip().split()\n    if encoding[0] == \"E\":\n        print(encode(encoding[1]))\n    else:\n        print(decode(encoding[1]))\n\ndef encode(string):\n    encoded = \"\"\n    count = 0\n    for i in range(len(string)):\n        count += 1\n        if i == len(string) - 1 or string[i] != string[i+1]:\n            encoded += string[i] + str(count)\n            count = 0\n    return encoded\n\ndef decode(string):\n    decoded = \"\"\n    for i in range(len(string)):\n        if i % 2 == 0:\n            decoded += string[i] * (int(string[i+1]) - 1)\n    return decoded\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef encode(string):\n    # your code here \n    return string\n\ndef decode(string):\n    # your code here\n    return string\n\ndef main():\n    # your code here\n    return\n\nif __name__ == '__main__':\n    main()\n", "\n# fix spelling mistakes\nimport sys\n\ndef encode(msg):\n    msg = list(msg)\n    new_msg = \"\"\n    count = 1\n    for i in range(len(msg)):\n        if i == len(msg) - 1:\n            new_msg += msg[i] + str(count)\n            break\n        if msg[i] == msg[i + 1]:\n            count += 1\n        else:\n            new_msg += msg[i] + str(count)\n            count = 1\n    return new_msg\n\ndef decode(msg):\n    msg = list(msg)\n    new_msg = \"\"\n    count = \"\"\n    for i in range(len(msg)):\n        if i % 2 == 0:\n            new_msg += msg[i]\n        else:\n            count += msg[i]\n            if i == len(msg) - 1 or msg[i + 1] in \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_!.\":\n                new_msg += msg[i - 1] * int(count)\n                count = \"\"\n    return new_msg\n\ndef main():\n    msg = sys.stdin.readline().strip().split()\n    if msg[0] == \"E\":\n        print(encode(msg[1]))\n    else:\n        print(decode(msg[1]))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef encode(string_to_encode):\n    encoded_string = \"\"\n    count = 1\n    for i in range(len(string_to_encode)-1):\n        if string_to_encode[i] == string_to_encode[i+1]:\n            count += 1\n        else:\n            encoded_string += string_to_encode[i] + str(count)\n            count = 1\n    encoded_string += string_to_encode[-1] + str(count)\n    return encoded_string\n\ndef decode(string_to_decode):\n    decoded_string = \"\"\n    for i in range(0, len(string_to_decode)-1, 2):\n        decoded_string += string_to_decode[i] * int(string_to_decode[i+1])\n    return decoded_string\n\ndef main():\n    for line in sys.stdin:\n        if line[0] == \"E\":\n            print(encode(line[2:]))\n        else:\n            print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef encode(string):\n    new_string = ''\n    count = 1\n    for i in range(len(string)-1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            new_string += string[i] + str(count)\n            count = 1\n    new_string += string[-1] + str(count)\n    return new_string\n\ndef decode(string):\n    new_string = ''\n    for i in range(0, len(string)-1, 2):\n        new_string += string[i] * int(string[i+1])\n    return new_string\n\ndef main():\n    for line in sys.stdin:\n        if line[0] == 'E':\n            print(encode(line[2:]))\n        else:\n            print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    input_data = sys.stdin.readline().strip().split()\n    if input_data[0] == \"E\":\n        encode(input_data[1])\n    elif input_data[0] == \"D\":\n        decode(input_data[1])\n\ndef encode(string):\n    encoded_string = \"\"\n    count = 1\n    for i in range(1, len(string)):\n        if string[i] == string[i-1]:\n            count += 1\n        else:\n            encoded_string += string[i-1] + str(count)\n            count = 1\n    encoded_string += string[-1] + str(count)\n    print(encoded_string)\n\ndef decode(string):\n    decoded_string = \"\"\n    for i in range(0, len(string), 2):\n        decoded_string += string[i] * int(string[i+1])\n    print(decoded_string)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    encoding = sys.stdin.readline().strip().split(\" \")\n    if encoding[0] == \"E\":\n        print(encode(encoding[1].strip()))\n    else:\n        print(decode(encoding[1].strip()))\n\ndef encode(string):\n    encoded = \"\"\n    count = 0\n    for i in range(len(string)):\n        count += 1\n        if i == len(string)-1 or string[i] != string[i+1]:\n            encoded += string[i] + str(count)\n            count = 0\n    return encoded\n\ndef decode(string):\n    decoded = \"\"\n    for i in range(len(string)):\n        if i % 2 == 0:\n            decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == \"__main__\":\n    main()\n", "#! /usr/bin/python3\n\nimport sys\n\ndef encode(string):\n    encoded = \"\"\n    prev = string[0];\n    count = 0;\n    for c in string:\n        if c == prev:\n            count += 1;\n        else:\n            encoded += prev + str(count);\n            prev = c;\n            count = 1;\n    encoded += prev + str(count);\n    return encoded;\n\ndef decode(string):\n    decoded = \"\";\n    for i in range(0, len(string), 2):\n        decoded += string[i]*int(string[i+1]);\n    return decoded;\n\ndef main():\n    line = sys.stdin.readline().strip();\n    if line[0] == \"E\":\n        print(encode(line[2:]));\n    else:\n        print(decode(line[2:]));\n\nif __name__ == '__main__':\n    main();\n", "\n\nimport sys\n\ndef decode(message):\n    decoded = \"\"\n    for i in range(0, len(message), 2): #i is a counter\n        decoded += message[i]*int(message[i+1])\n    return decoded\n\ndef encode(message):\n    encoded = \"\"\n    prev = \"\" #placeholder\n    count = 0\n    for i in range(0, len(message)): #i is a counter\n        if message[i] == prev:\n            count += 1\n        else:\n            if prev != \"\":\n                encoded += prev + str(count)\n            prev = message[i]\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef main():\n    line = sys.stdin.readline().strip().split()\n    if line[0] == \"E\":\n        print(encode(line[1]))\n    else:\n        print(decode(line[1]))\n\nmain()\n", "\nimport sys\n\ndef decode(messages):\n    decoded = \"\"\n    for i in range(0, len(messages), 2):\n        decoded += messages[i] * int(messages[i + 1])\n    return decoded\n\ndef encode(messages):\n    encoded = \"\"\n    prev = \"\"\n    count = 0\n    for i in range(len(messages)):\n        if messages[i] == prev:\n            count += 1\n        else:\n            if prev != \"\":\n                encoded += prev + str(count)\n            prev = messages[i]\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef main():\n    line = input().split()\n    if line[0] == \"E\":\n        print(encode(line[1]))\n    else:\n        print(decode(line[1]))\n\nmain()\n", "\n\n# This is a comment.\n\nimport sys\n\ndef encode(string):\n    encoded = \"\"\n    prev = string[0]\n    count = 0\n    for c in string:\n        if c == prev:\n            count += 1\n        else:\n            encoded += prev + str(count)\n            prev = c\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = \"\"\n    for i in range(0, len(string), 2):\n        decoded += string[i]*int(string[i+1])\n    return decoded\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line[0] == \"E\":\n        print(encode(line[2:]))\n    else:\n        print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef encode(string):\n    encoded = \"\"\n    prev = string[0]\n    count = 0\n    for c in string:\n        if c == prev:\n            count += 1\n        else:\n            encoded += prev + str(count)\n            prev = c\n            count = 1\n    encoded += prev + str(count) \n    return encoded\n\ndef decode(string):\n    decoded = \"\"\n    for i in range(0, len(string), 2):\n        decoded += string[i]*int(string[i+1])\n    return decoded\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line[0] == \"E\":\n        print(encode(line[2:]))\n    else:\n        print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef decode(messages):\n    decoded = \"\"\n    for i in range(0,len(messages),2):\n        decoded += messages[i]*int(messages[i+1])\n    return decoded\n\ndef encode(messages):\n    encoded = \"\"\n    prev = \"\"\n    count = 0\n    for i in range(len(messages)):\n        if messages[i] == prev:\n            count += 1\n        else:\n            if prev != \"\":\n                encoded += prev + str(count)\n            prev = messages[i]\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef main():\n    line = sys.stdin.readline().strip().split()\n    if line[0] == \"E\":\n        print(encode(line[1]))\n    else:\n        print(decode(line[1]))\n\nmain()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef encode(msg):\n    msg = list(msg)\n    new_msg = \"\"\n    count = 1\n    for i in range(len(msg)):\n        if i == len(msg) - 1:\n            new_msg += msg[i] + str(count)\n            break\n        elif msg[i] == msg[i + 1]:\n            count += 1\n        else:\n            new_msg += msg[i] + str(count)\n            count = 1\n    return new_msg\n\ndef decode(msg):\n    msg = list(msg)\n    new_msg = \"\"\n    count = \"\"\n    for i in range(len(msg)):\n        if i % 2 == 0:\n            new_msg += msg[i]\n        else:\n            count += msg[i]\n            if i == len(msg) - 1 or msg[i + 1] not in \"0123456789\":\n                new_msg += msg[i - 1] * int(count)\n                count = \"\"\n    return new_msg\n\ndef main():\n    msg = sys.stdin.readline().strip().split()\n    if msg[0] == \"E\":\n        print(encode(msg[1]))\n    else:\n        print(decode(msg[1]))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python\n\nimport sys\n\ndef main():\n    # get input\n    stdin = sys.stdin.readlines()\n    stdin = [x.strip() for x in stdin]\n\n    # find out if encoding or decoding\n    if stdin[0][0] == 'E':\n        encoded = encode(stdin[0][2:])\n        print(encoded)\n    else:\n        decoded = decode(stdin[0][2:])\n        print(decoded)\n\ndef encode(string):\n    encoded = ''\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            encoded += string[i] + str(count)\n            count = 1\n    encoded += string[-1] + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ''\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    encode_decode = sys.stdin.readline().strip().split()\n    if encode_decode[0] == \"E\":\n        print(encode(encode_decode[1]))\n    else:\n        print(decode(encode_decode[1]))\n\ndef encode(encode):\n    encoded = ''\n    count = 0\n    for i in range(len(encode)):\n        count += 1\n        if i == len(encode)-1 or encode[i] != encode[i+1]:\n            encoded += encode[i] + str(count)\n            count = 0\n    return encoded\n\ndef decode(encode):\n    decoded = \"\"\n    for i in range(len(encode)):\n        if i % 2 == 0:\n            decoded += encode[i] * int(encode[i+1])\n    return decoded\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef encode(text):\n    encoded_text = ''\n    cur_symbol = ''\n    symbol_count = 0\n    for char in text:\n        if char == cur_symbol:\n            symbol_count += 1\n        else:\n            if cur_symbol != '':\n                encoded_text += str(symbol_count) + cur_symbol\n            cur_symbol = char\n            symbol_count = 1\n    encoded_text += str(symbol_count) + cur_symbol\n    return encoded_text\n\n\ndef decode(text):\n    decoded_text = ''\n    for i in range(0, len(text), 2):\n        decoded_text += text[i+1]*int(text[i])\n    return decoded_text\n\n\nif __name__ == '__main__':\n    input_list = input().split()\n    if input_list[0] == 'E':\n        print(encode(input_list[1]))\n    elif input_list[0] == 'D':\n        print(decode(input_list[1]))\n", "\nimport sys\n\ndef main():\n    # get input\n    inp = sys.stdin.readlines()\n    inp = [x.strip() for x in inp]\n\n    # find out if encoding or decoding\n    if inp[0][0] == 'E':\n        encoded = encode(inp[0][2:])\n        print(encoded)\n    else:\n        decoded = decode(inp[0][2:])\n        print(decoded)\n\ndef encode(string):\n    encoded = ''\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            encoded += string[i] + str(count)\n            count = 1\n    encoded += string[-1] + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ''\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    input_list = input().strip().split()\n    if input_list[0].upper() == 'E':\n        print(encode(input_list[1]))\n    elif input_list[0].upper() == 'D':\n        print(decode(input_list[1]))\n\n\ndef encode(text):\n    encoded_text = ''\n    cur_char = ''\n    char_count = 0\n    for char in text:\n        if char == cur_char:\n            char_count += 1\n        else:\n            if cur_char != '':\n                encoded_text += cur_char + str(char_count)\n            cur_char = char\n            char_count = 1\n    encoded_text += cur_char + str(char_count)\n    return encoded_text\n\n\ndef decode(text):\n    decoded_text = ''\n    for i in range(0, len(text), 2):\n        decoded_text += text[i]*int(text[i+1])\n    return decoded_text\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    encode = sys.stdin.readline().strip().split()\n    if encode[0] == \"E\":\n        print(encode_func(encode[1]))\n    else:\n        print(decode_func(encode[1]))\n\ndef encode_func(encode):\n    encoded = ''\n    count = 0\n    for i in range(len(encode)):\n        count += 1\n        if i == len(encode)-1 or encode[i] != encode[i+1]:\n            encoded += encode[i] + str(count)\n            count = 0\n    return encoded\n\ndef decode_func(encode):\n    decoded = \"\"\n    for i in range(len(encode)):\n        if i % 2 == 0:\n            decoded += encode[i] * int(encode[i+1])\n    return decoded\n\nif __name__ == \"__main__\":\n    main()\n"]