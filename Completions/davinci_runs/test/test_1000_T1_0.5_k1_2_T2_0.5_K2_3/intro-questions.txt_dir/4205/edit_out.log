2022-04-12 18:14:32.512428 num operations 2
2022-04-12 18:14:32.512436 size on input set 1
2022-04-12 18:14:42.439859 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n\n# \u4e0e\u3048\u3089\u308c\u305f\u914d\u5217\u3092\u30bd\u30fc\u30c8\u3057\u3066\u3001\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\n# \u305d\u306e\u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\n\n# \u914d\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\nsorted_p = sorted(p)\n\n# \u6570\u5b57\u304c\u9055\u3046\u96a3\u308a\u5408\u3046\u6570\u5b57\u306e\u4f4d\u7f6e\u3092\u8a18\u9332\u3059\u308b\u305f\u3081\u306e\u914d\u5217\ndiff_index = []\n\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u61b6\u3059\u308b\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# \u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n\n# \u4e0e\u3048\u3089\u308c\u305f\u914d\u5217\u3092\u30bd\u30fc\u30c8\u3057\u3066\u3001\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\n# \u305d\u306e\u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\n\n# \u914d\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\nsorted_p = sorted(p)\n\n# \u6570\u5b57\u304c\u9055\u3046\u96a3\u308a\u5408\u3046\u6570\u5b57\u306e\u4f4d\u7f6e\u3092\u8a18\u9332\u3059\u308b\u305f\u3081\u306e\u914d\u5217\ndiff_index = []\n\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# \u8a18\u9332\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n\n# \u4e0e\u3048\u3089\u308c\u305f\u914d\u5217\u3092\u30bd\u30fc\u30c8\u3057\u3066\u3001\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u7570\u306a\u308b\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u61b6\u3059\u308b\n# \u305d\u306e\u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\n\n# \u914d\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\nsorted_p = sorted(p)\n\n# \u6570\u5b57\u304c\u7570\u306a\u308b\u96a3\u308a\u5408\u3046\u6570\u5b57\u306e\u4f4d\u7f6e\u3092\u8a18\u61b6\u3059\u308b\u305f\u3081\u306e\u914d\u5217\ndiff_index = []\n\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u7570\u306a\u308b\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u61b6\u3059\u308b\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# \u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n"
    }
  ],
  "created": 1649787272,
  "object": "edit"
}
2022-04-12 18:14:42.440094 fix spelling mistakes 3 ["\n\nn = int(input())\np = list(map(int, input().split()))\n\n# 与えられた配列をソートして、\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記録する\n# その記憶した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\n\n# 配列をソートする\nsorted_p = sorted(p)\n\n# 数字が違う隣り合う数字の位置を記録するための配列\ndiff_index = []\n\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記憶する\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# 記憶した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n", "\n\nn = int(input())\np = list(map(int, input().split()))\n\n# 与えられた配列をソートして、\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記録する\n# その記憶した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\n\n# 配列をソートする\nsorted_p = sorted(p)\n\n# 数字が違う隣り合う数字の位置を記録するための配列\ndiff_index = []\n\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記録する\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# 記録した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n", "\n\nn = int(input())\np = list(map(int, input().split()))\n\n# 与えられた配列をソートして、\n# 順番に比較して、隣り合う数字が異なるなら、その数字が何番目にあるかを記憶する\n# その記憶した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\n\n# 配列をソートする\nsorted_p = sorted(p)\n\n# 数字が異なる隣り合う数字の位置を記憶するための配列\ndiff_index = []\n\n# 順番に比較して、隣り合う数字が異なるなら、その数字が何番目にあるかを記憶する\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# 記憶した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n"]
2022-04-12 18:14:42.440137 size on output set 3
2022-04-12 18:14:42.440143 size on input set 3
2022-04-12 18:14:53.797600 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n# \u4e0e\u3048\u3089\u308c\u305f\u914d\u5217\u3092\u30bd\u30fc\u30c8\u3057\u3066\u3001\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\n# \u305d\u306e\u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\n\n# \u914d\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\nsorted_p = sorted(p)\n\n# \u6570\u5b57\u304c\u9055\u3046\u96a3\u308a\u5408\u3046\u6570\u5b57\u306e\u4f4d\u7f6e\u3092\u8a18\u9332\u3059\u308b\u305f\u3081\u306e\u914d\u5217\ndiff_index = []\n\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u61b6\u3059\u308b\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# \u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n"
    },
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 1
    },
    {
      "index": 2,
      "text": "\nn = int(input())\np = list(map(int, input().split()))\n\n# \u4e0e\u3048\u3089\u308c\u305f\u914d\u5217\u3092\u30bd\u30fc\u30c8\u3057\u3066\u3001\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\n# \u305d\u306e\u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\n\n# \u914d\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\nsorted_p = sorted(p)\n\n# \u6570\u5b57\u304c\u9055\u3046\u96a3\u308a\u5408\u3046\u6570\u5b57\u306e\u4f4d\u7f6e\u3092\u8a18\u9332\u3059\u308b\u305f\u3081\u306e\u914d\u5217\ndiff_index = []\n\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u61b6\u3059\u308b\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# \u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n"
    }
  ],
  "created": 1649787282,
  "object": "edit"
}
2022-04-12 18:14:53.797875 NO RESULT
2022-04-12 18:14:53.797884 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 1
}
2022-04-12 18:14:53.797927 fix syntax errors 2 ["\n\nn = int(input())\np = list(map(int, input().split()))\n# 与えられた配列をソートして、\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記録する\n# その記憶した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\n\n# 配列をソートする\nsorted_p = sorted(p)\n\n# 数字が違う隣り合う数字の位置を記録するための配列\ndiff_index = []\n\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記憶する\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# 記憶した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n", "\nn = int(input())\np = list(map(int, input().split()))\n\n# 与えられた配列をソートして、\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記録する\n# その記憶した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\n\n# 配列をソートする\nsorted_p = sorted(p)\n\n# 数字が違う隣り合う数字の位置を記録するための配列\ndiff_index = []\n\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記憶する\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# 記憶した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n"]
2022-04-12 18:15:06.985601 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\np = list(map(int, input().split()))\n\n# \u4e0e\u3048\u3089\u308c\u305f\u914d\u5217\u3092\u30bd\u30fc\u30c8\u3057\u3066\u3001\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u7570\u306a\u308b\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u61b6\u3059\u308b\n# \u305d\u306e\u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\n\n# \u914d\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\nsorted_p = sorted(p)\n\n# \u6570\u5b57\u304c\u7570\u306a\u308b\u96a3\u308a\u5408\u3046\u6570\u5b57\u306e\u4f4d\u7f6e\u3092\u8a18\u61b6\u3059\u308b\u305f\u3081\u306e\u914d\u5217\ndiff_index = []\n\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u7570\u306a\u308b\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u61b6\u3059\u308b\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# \u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n"
    },
    {
      "index": 1,
      "text": "\n\n# \u6570\u5b57\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\nnumbers = list(range(1, n + 1))\n\n# \u6570\u5b57\u306e\u30ea\u30b9\u30c8\u3092\u9006\u9806\u306b\u3059\u308b\nnumbers.reverse()\n\n# \u7d50\u679c\u3092\u51fa\u529b\u3059\u308b\nprint(*numbers)\n\nn = int(input())\np = list(map(int, input().split()))\n\n# \u914d\u5217\u306e\u4e2d\u3067\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9023\u7d9a\u3057\u3066\u3044\u308b\u304b\u3092\u5224\u5b9a\u3059\u308b\n# \u9023\u7d9a\u3057\u3066\u3044\u306a\u3044\u6570\u5b57\u3092\u8a18\u61b6\u3059\u308b\n# \u9023\u7d9a\u3057\u3066\u3044\u306a\u3044\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308c\u3070\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\np = list(map(int, input().split()))\n\n# \u4e0e\u3048\u3089\u308c\u305f\u914d\u5217\u3092\u30bd\u30fc\u30c8\u3057\u3066\u3001\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u7570\u306a\u308b\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u61b6\u3059\u308b\n# \u305d\u306e\u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\n\n# \u914d\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\nsorted_p = sorted(p)\n\n# \u6570\u5b57\u304c\u7570\u306a\u308b\u96a3\u308a\u5408\u3046\u6570\u5b57\u306e\u4f4d\u7f6e\u3092\u8a18\u61b6\u3059\u308b\u305f\u3081\u306e\u914d\u5217\ndiff_index = []\n\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u7570\u306a\u308b\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u61b6\u3059\u308b\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# \u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n"
    }
  ],
  "created": 1649787293,
  "object": "edit"
}
2022-04-12 18:15:06.985803 fix syntax errors 3 ["\nn = int(input())\np = list(map(int, input().split()))\n\n# 与えられた配列をソートして、\n# 順番に比較して、隣り合う数字が異なるなら、その数字が何番目にあるかを記憶する\n# その記憶した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\n\n# 配列をソートする\nsorted_p = sorted(p)\n\n# 数字が異なる隣り合う数字の位置を記憶するための配列\ndiff_index = []\n\n# 順番に比較して、隣り合う数字が異なるなら、その数字が何番目にあるかを記憶する\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# 記憶した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n", '\n\n# 数字のリストを作成\nnumbers = list(range(1, n + 1))\n\n# 数字のリストを逆順にする\nnumbers.reverse()\n\n# 結果を出力する\nprint(*numbers)\n\nn = int(input())\np = list(map(int, input().split()))\n\n# 配列の中で、隣り合う数字が連続しているかを判定する\n# 連続していない数字を記憶する\n# 連続していない数字が2つ以上あれば、NOを出力する\n# そうでなければ、YESを出力する\n', "\nn = int(input())\np = list(map(int, input().split()))\n\n# 与えられた配列をソートして、\n# 順番に比較して、隣り合う数字が異なるなら、その数字が何番目にあるかを記憶する\n# その記憶した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\n\n# 配列をソートする\nsorted_p = sorted(p)\n\n# 数字が異なる隣り合う数字の位置を記憶するための配列\ndiff_index = []\n\n# 順番に比較して、隣り合う数字が異なるなら、その数字が何番目にあるかを記憶する\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# 記憶した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n"]
2022-04-12 18:15:14.558690 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\np = list(map(int, input().split()))\n\n# \u4e0e\u3048\u3089\u308c\u305f\u914d\u5217\u3092\u30bd\u30fc\u30c8\u3057\u3066\u3001\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\n# \u305d\u306e\u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\n\n# \u914d\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\nsorted_p = sorted(p)\n\n# \u6570\u5b57\u304c\u9055\u3046\u96a3\u308a\u5408\u3046\u6570\u5b57\u306e\u4f4d\u7f6e\u3092\u8a18\u9332\u3059\u308b\u305f\u3081\u306e\u914d\u5217\ndiff_index = []\n\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# \u8a18\u9332\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n\n# \u4e0e\u3048\u3089\u308c\u305f\u914d\u5217\u3092\u30bd\u30fc\u30c8\u3057\u3066\u3001\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\n# \u305d\u306e\u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\n\n# \u914d\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\nsorted_p = sorted(p)\n\n# \u6570\u5b57\u304c\u9055\u3046\u96a3\u308a\u5408\u3046\u6570\u5b57\u306e\u4f4d\u7f6e\u3092\u8a18\u9332\u3059\u308b\u305f\u3081\u306e\u914d\u5217\ndiff_index = []\n\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# \u8a18\u9332\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\u3053\u3068\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n"
    },
    {
      "index": 2,
      "text": "# \u4e0e\u3048\u3089\u308c\u305f\u914d\u5217\u3092\u30bd\u30fc\u30c8\u3057\u3066\u3001\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\n# \u305d\u306e\u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\n\nn = int(input())\np = list(map(int, input().split()))\n\n# \u914d\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\nsorted_p = sorted(p)\n\n# \u6570\u5b57\u304c\u9055\u3046\u96a3\u308a\u5408\u3046\u6570\u5b57\u306e\u4f4d\u7f6e\u3092\u8a18\u9332\u3059\u308b\u305f\u3081\u306e\u914d\u5217\ndiff_index = []\n\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# \u8a18\u9332\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n"
    }
  ],
  "created": 1649787307,
  "object": "edit"
}
2022-04-12 18:15:14.558867 fix syntax errors 3 ["\nn = int(input())\np = list(map(int, input().split()))\n\n# 与えられた配列をソートして、\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記録する\n# その記憶した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\n\n# 配列をソートする\nsorted_p = sorted(p)\n\n# 数字が違う隣り合う数字の位置を記録するための配列\ndiff_index = []\n\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記録する\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# 記録した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n", "\n\nn = int(input())\np = list(map(int, input().split()))\n\n# 与えられた配列をソートして、\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記録する\n# その記憶した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\n\n# 配列をソートする\nsorted_p = sorted(p)\n\n# 数字が違う隣り合う数字の位置を記録するための配列\ndiff_index = []\n\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記録する\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# 記録した数字が2つ以上あるなら、NOを出力すること\n# そうでなければ、YESを出力する\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n", "# 与えられた配列をソートして、\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記録する\n# その記憶した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\n\nn = int(input())\np = list(map(int, input().split()))\n\n# 配列をソートする\nsorted_p = sorted(p)\n\n# 数字が違う隣り合う数字の位置を記録するための配列\ndiff_index = []\n\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記録する\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# 記録した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n"]
2022-04-12 18:15:14.558912 size on output set 7
2022-04-12 18:15:14.558921 num operations 2
2022-04-12 18:15:14.558926 size on input set 1
2022-04-12 18:15:16.768753 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\nsequence = list(map(int, input().split()))\nif(sequence == sorted(sequence)):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nsequence = list(map(int, input().split()))\n\nif(sequence == sorted(sequence)):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input())\nsequence = list(map(int, input().split()))\n\nif(sequence == sorted(sequence)):\n    print(\"yes\")\nelse:\n    print(\"no\")\n"
    }
  ],
  "created": 1649787314,
  "object": "edit"
}
2022-04-12 18:15:16.768944 fix spelling mistakes 3 ['\nN = int(input())\nsequence = list(map(int, input().split()))\nif(sequence == sorted(sequence)):\n    print("YES")\nelse:\n    print("NO")\n', '\nN = int(input())\nsequence = list(map(int, input().split()))\n\nif(sequence == sorted(sequence)):\n    print("YES")\nelse:\n    print("NO")\n', '\n\nN = int(input())\nsequence = list(map(int, input().split()))\n\nif(sequence == sorted(sequence)):\n    print("yes")\nelse:\n    print("no")\n']
2022-04-12 18:15:16.769030 size on output set 3
2022-04-12 18:15:16.769037 size on input set 3
2022-04-12 18:15:21.270041 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "N = int(input())\nsequence = list(map(int, input().split()))\nif(sequence == sorted(sequence)):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    },
    {
      "index": 1,
      "text": "N = int(input())\nsequence = list(map(int, input().split()))\n\nif sequence == sorted(sequence):\n    print('YES')\nelse:\n    print('NO')\n"
    },
    {
      "index": 2,
      "text": "for i in range(1, 100):\n    if i % 3 == 0 and i % 5 == 0:\n        print(\"FizzBuzz\")\n        continue\n    elif i % 3 == 0:\n        print(\"Fizz\")\n        continue\n    elif i % 5 == 0:\n        print(\"Buzz\")\n        continue\n    print(i)\n"
    }
  ],
  "created": 1649787316,
  "object": "edit"
}
2022-04-12 18:15:21.270214 fix syntax errors 3 ['N = int(input())\nsequence = list(map(int, input().split()))\nif(sequence == sorted(sequence)):\n    print("YES")\nelse:\n    print("NO")\n', "N = int(input())\nsequence = list(map(int, input().split()))\n\nif sequence == sorted(sequence):\n    print('YES')\nelse:\n    print('NO')\n", 'for i in range(1, 100):\n    if i % 3 == 0 and i % 5 == 0:\n        print("FizzBuzz")\n        continue\n    elif i % 3 == 0:\n        print("Fizz")\n        continue\n    elif i % 5 == 0:\n        print("Buzz")\n        continue\n    print(i)\n']
2022-04-12 18:15:23.489399 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "N = int(input())\nsequence = list(map(int, input().split()))\n\nif sequence == sorted(sequence):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    },
    {
      "index": 1,
      "text": "N = int(input())\nsequence = list(map(int, input().split()))\n\nif(sequence == sorted(sequence)):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    },
    {
      "index": 2,
      "text": "N = int(input())\nsequence = list(map(int, input().split()))\n\nif(sequence == sorted(sequence) and len(sequence) == len(set(sequence))):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    }
  ],
  "created": 1649787321,
  "object": "edit"
}
2022-04-12 18:15:23.489561 fix syntax errors 3 ['N = int(input())\nsequence = list(map(int, input().split()))\n\nif sequence == sorted(sequence):\n    print("YES")\nelse:\n    print("NO")\n', 'N = int(input())\nsequence = list(map(int, input().split()))\n\nif(sequence == sorted(sequence)):\n    print("YES")\nelse:\n    print("NO")\n', 'N = int(input())\nsequence = list(map(int, input().split()))\n\nif(sequence == sorted(sequence) and len(sequence) == len(set(sequence))):\n    print("YES")\nelse:\n    print("NO")\n']
2022-04-12 18:15:27.536120 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\np = int(input())\nx = int(input())\ny = int(input())\nk = int(input())\ndep = 100 * x + y\nfor i in range(k):\n    dep = dep * (100 + p) / 100\nprint(dep // 100, dep % 100)\n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\nsequence = list(map(int, input().split()))[:N]\n\nif(sequence == sorted(sequence)):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\nsequence = list(map(int, input().split()))\n\nif sequence == sorted(sequence):\n    print(\"yes\")\nelse:\n    print(\"no\")\n"
    }
  ],
  "created": 1649787323,
  "object": "edit"
}
2022-04-12 18:15:27.536315 fix syntax errors 3 ['\np = int(input())\nx = int(input())\ny = int(input())\nk = int(input())\ndep = 100 * x + y\nfor i in range(k):\n    dep = dep * (100 + p) / 100\nprint(dep // 100, dep % 100)\n', '\n\nN = int(input())\nsequence = list(map(int, input().split()))[:N]\n\nif(sequence == sorted(sequence)):\n    print("YES")\nelse:\n    print("NO")\n', '\nN = int(input())\nsequence = list(map(int, input().split()))\n\nif sequence == sorted(sequence):\n    print("yes")\nelse:\n    print("no")\n']
2022-04-12 18:15:27.536337 size on output set 9
