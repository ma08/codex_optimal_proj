2022-04-12 22:59:02.119356 num operations 2
2022-04-12 22:59:02.119370 size on input set 1
2022-04-12 22:59:07.378140 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left, right = -1, -1\n    for i in range(n):\n        if a[i] == 1:\n            left = i\n            break\n    for i in range(n-1, -1, -1):\n        if a[i] == 1:\n            right = i\n            break\n    # print(left, right)\n    if left == right:\n        print(0)\n    else:\n        # print(a[left:right+1])\n        # print(sum(a[left:right+1]))\n        print(right-left - sum(a[left:right+1]))\n"
    },
    {
      "index": 1,
      "text": "\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left, right = 0, n-1\n    for i in range(n):\n        if a[i] == 1 and left == 0:\n            left = i\n            break\n    for i in range(n-1, -1, -1):\n        if a[i] == 1 and right == n-1:\n            right = i\n            break\n    # print(left, right)\n    if left == right:\n        print(0)\n    else:\n        # print(a[left:right+1])\n        # print(sum(a[left:right+1]))\n        print(right-left - sum(a[left:right+1]))\n"
    },
    {
      "index": 2,
      "text": "\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left, right = 0, 0\n    for i in range(n):\n        if a[i] == 1:\n            left = i + 1\n            break\n    for i in range(n-1, 0, -1):\n        if a[i] == 1:\n            right = i + 1\n            break\n    print(right-left - sum(a[left-1:right]))\n"
    }
  ],
  "created": 1649804342,
  "object": "edit"
}
2022-04-12 22:59:07.378364 fix spelling mistakes 3 ['\n\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left, right = -1, -1\n    for i in range(n):\n        if a[i] == 1:\n            left = i\n            break\n    for i in range(n-1, -1, -1):\n        if a[i] == 1:\n            right = i\n            break\n    # print(left, right)\n    if left == right:\n        print(0)\n    else:\n        # print(a[left:right+1])\n        # print(sum(a[left:right+1]))\n        print(right-left - sum(a[left:right+1]))\n', '\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left, right = 0, n-1\n    for i in range(n):\n        if a[i] == 1 and left == 0:\n            left = i\n            break\n    for i in range(n-1, -1, -1):\n        if a[i] == 1 and right == n-1:\n            right = i\n            break\n    # print(left, right)\n    if left == right:\n        print(0)\n    else:\n        # print(a[left:right+1])\n        # print(sum(a[left:right+1]))\n        print(right-left - sum(a[left:right+1]))\n', '\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left, right = 0, 0\n    for i in range(n):\n        if a[i] == 1:\n            left = i + 1\n            break\n    for i in range(n-1, 0, -1):\n        if a[i] == 1:\n            right = i + 1\n            break\n    print(right-left - sum(a[left-1:right]))\n']
2022-04-12 22:59:07.378399 size on output set 3
2022-04-12 22:59:07.378406 size on input set 3
2022-04-12 22:59:09.462973 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left, right = 0, 0\n    for i in range(n):\n        if a[i] == 1:\n            left = i + 1\n            break\n    for i in range(n-1, 0, -1):\n        if a[i] == 1:\n            right = i + 1\n            break\n    print(right-left - sum(a[left-1:right-1]))\n"
    },
    {
      "index": 1,
      "text": "\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left, right = 0, 0\n    for i in range(n):\n        if a[i] == 1:\n            left = i + 1\n            break\n    for i in range(n-1, 0, -1):\n        if a[i] == 1:\n            right = i + 1\n            break\n    print(right-left - sum(a[left:right]))\n"
    },
    {
      "index": 2,
      "text": "\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left, right = 0, 0\n    for i in range(n):\n        if a[i] == 1:\n            left = i + 1\n            break\n    for i in range(n-1, 0, -1):\n        if a[i] == 1:\n            right = i + 1\n            break\n    print(right-left - sum(a[left-1:right-1]))\n"
    }
  ],
  "created": 1649804347,
  "object": "edit"
}
2022-04-12 22:59:09.463176 fix syntax errors 3 ['\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left, right = 0, 0\n    for i in range(n):\n        if a[i] == 1:\n            left = i + 1\n            break\n    for i in range(n-1, 0, -1):\n        if a[i] == 1:\n            right = i + 1\n            break\n    print(right-left - sum(a[left-1:right-1]))\n', '\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left, right = 0, 0\n    for i in range(n):\n        if a[i] == 1:\n            left = i + 1\n            break\n    for i in range(n-1, 0, -1):\n        if a[i] == 1:\n            right = i + 1\n            break\n    print(right-left - sum(a[left:right]))\n', '\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left, right = 0, 0\n    for i in range(n):\n        if a[i] == 1:\n            left = i + 1\n            break\n    for i in range(n-1, 0, -1):\n        if a[i] == 1:\n            right = i + 1\n            break\n    print(right-left - sum(a[left-1:right-1]))\n']
2022-04-12 22:59:13.316553 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left, right = 0, n-1\n    for i in range(n):\n        if a[i] == 1 and left == 0:\n            left = i\n            break\n    for i in range(n-1, -1, -1):\n        if a[i] == 1 and right == n-1:\n            right = i\n            break\n    # print(left, right)\n    if left == right:\n        print(0)\n    else:\n        # print(a[left:right+1])\n        # print(sum(a[left:right+1]))\n        print(right-left - sum(a[left:right+1]))\n"
    },
    {
      "index": 1,
      "text": "\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left, right = 0, n - 1\n    for i in range(n):\n        if a[i] == 1 and left == 0:\n            left = i\n            break\n    for i in range(n - 1, -1, -1):\n        if a[i] == 1 and right == n - 1:\n            right = i\n            break\n    # print(left, right)\n    if left == right:\n        print(0)\n    else:\n        # print(a[left:right+1])\n        # print(sum(a[left:right+1]))\n        print(right - left - sum(a[left:right+1]))\n"
    },
    {
      "index": 2,
      "text": "\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left, right = 0, n-1\n    for i in range(n):\n        if a[i] == 1 and left == 0:\n            left = i\n            break\n    for i in range(n-1, -1, -1):\n        if a[i] == 1 and right == n-1:\n            right = i\n            break\n    # print(left, right)\n    if left == right:\n        print(0)\n    else:\n        # print(a[left:right+1])\n        # print(sum(a[left:right+1]))\n        print(right - left - sum(a[left:right+1]))\n"
    }
  ],
  "created": 1649804349,
  "object": "edit"
}
2022-04-12 22:59:13.316745 fix syntax errors 3 ['\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left, right = 0, n-1\n    for i in range(n):\n        if a[i] == 1 and left == 0:\n            left = i\n            break\n    for i in range(n-1, -1, -1):\n        if a[i] == 1 and right == n-1:\n            right = i\n            break\n    # print(left, right)\n    if left == right:\n        print(0)\n    else:\n        # print(a[left:right+1])\n        # print(sum(a[left:right+1]))\n        print(right-left - sum(a[left:right+1]))\n', '\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left, right = 0, n - 1\n    for i in range(n):\n        if a[i] == 1 and left == 0:\n            left = i\n            break\n    for i in range(n - 1, -1, -1):\n        if a[i] == 1 and right == n - 1:\n            right = i\n            break\n    # print(left, right)\n    if left == right:\n        print(0)\n    else:\n        # print(a[left:right+1])\n        # print(sum(a[left:right+1]))\n        print(right - left - sum(a[left:right+1]))\n', '\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left, right = 0, n-1\n    for i in range(n):\n        if a[i] == 1 and left == 0:\n            left = i\n            break\n    for i in range(n-1, -1, -1):\n        if a[i] == 1 and right == n-1:\n            right = i\n            break\n    # print(left, right)\n    if left == right:\n        print(0)\n    else:\n        # print(a[left:right+1])\n        # print(sum(a[left:right+1]))\n        print(right - left - sum(a[left:right+1]))\n']
2022-04-12 22:59:14.906420 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# this is a comment\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left, right = -1, -1\n    for i in range(n):\n        if a[i] == 1:\n            left = i\n            break\n    for i in range(n-1, -1, -1):\n        if a[i] == 1:\n            right = i\n            break\n    # print(left, right)\n    if left == right:\n        print(0)\n    else:\n        # print(a[left:right+1])\n        # print(sum(a[left:right+1]))\n        print(right-left - sum(a[left:right+1]))\n"
    },
    {
      "index": 1,
      "text": "\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left, right = -1, -1\n    for i in range(n):\n        if a[i] == 1:\n            left = i\n            break\n    for i in range(n-1, -1, -1):\n        if a[i] == 1:\n            right = i\n            break\n    # print(left, right)\n    if left == right:\n        print(0)\n    else:\n        # print(a[left:right+1])\n        # print(sum(a[left:right+1]))\n        print(right-left - sum(a[left:right+1]))\n"
    },
    {
      "index": 2,
      "text": "\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left, right = -1, -1\n    for i in range(n):\n        if a[i] == 1:\n            left = i\n            break\n    for i in range(n-1, -1, -1):\n        if a[i] == 1:\n            right = i\n            break\n    # print(left, right)\n    if left == right:\n        print(0)\n    else:\n        # print(a[left:right+1])\n        # print(sum(a[left:right+1]))\n        print(right-left - sum(a[left:right+1]))\n"
    }
  ],
  "created": 1649804353,
  "object": "edit"
}
2022-04-12 22:59:14.906608 fix syntax errors 3 ['\n# this is a comment\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left, right = -1, -1\n    for i in range(n):\n        if a[i] == 1:\n            left = i\n            break\n    for i in range(n-1, -1, -1):\n        if a[i] == 1:\n            right = i\n            break\n    # print(left, right)\n    if left == right:\n        print(0)\n    else:\n        # print(a[left:right+1])\n        # print(sum(a[left:right+1]))\n        print(right-left - sum(a[left:right+1]))\n', '\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left, right = -1, -1\n    for i in range(n):\n        if a[i] == 1:\n            left = i\n            break\n    for i in range(n-1, -1, -1):\n        if a[i] == 1:\n            right = i\n            break\n    # print(left, right)\n    if left == right:\n        print(0)\n    else:\n        # print(a[left:right+1])\n        # print(sum(a[left:right+1]))\n        print(right-left - sum(a[left:right+1]))\n', '\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left, right = -1, -1\n    for i in range(n):\n        if a[i] == 1:\n            left = i\n            break\n    for i in range(n-1, -1, -1):\n        if a[i] == 1:\n            right = i\n            break\n    # print(left, right)\n    if left == right:\n        print(0)\n    else:\n        # print(a[left:right+1])\n        # print(sum(a[left:right+1]))\n        print(right-left - sum(a[left:right+1]))\n']
2022-04-12 22:59:14.906640 size on output set 7
2022-04-12 22:59:14.906661 num operations 2
2022-04-12 22:59:14.906666 size on input set 1
2022-04-12 22:59:19.870221 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# SOLUTION\n# Step 1: find the start and end of the first contiguous subarray\n# Step 2: count the number of 0s between the start and end of the first contiguous subarray\n# Step 3: find the start and end of the next contiguous subarray\n# Step 4: count the number of 0s between the end of the first contiguous subarray and the start of the next contiguous subarray\n# Step 5: repeat until all contiguous segments are found\n\ndef minimum_moves(n, a):\n    moves = 0\n    start = 0\n    end = 0\n    for i in range(n):\n        if a[i] == 1:\n            end = i\n            break\n\n    for i in range(end+1, n):\n        if a[i] == 1:\n            moves += (i - end - 1)\n            end = i\n    return moves\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(minimum_moves(n, a))\n"
    },
    {
      "index": 1,
      "text": "\n# SOLUTION\n# Step 1: find the start and end of the first contiguous segment\n# Step 2: count the number of 0s between the start and end of the first contiguous segment\n# Step 3: find the start and end of the next contiguous segment\n# Step 4: count the number of 0s between the end of the first contiguous segment and the start of the next contiguous segment\n# Step 5: repeat until all contiguous segments are found\n\ndef minimum_moves(n, a):\n    moves = 0\n    start = 0\n    end = 0\n    for i in range(n):\n        if a[i] == 1:\n            end = i\n            break\n\n    for i in range(end+1, n):\n        if a[i] == 1:\n            moves += (i - end - 1)\n            end = i\n    return moves\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(minimum_moves(n, a))\n"
    },
    {
      "index": 2,
      "text": "\n\n# SOLUTION\n# Step 1: find the start and end of the first continuous segment\n# Step 2: count the number of 0s between the start and end of the first continuous segment\n# Step 3: find the start and end of the next continuous segment\n# Step 4: count the number of 0s between the end of the first continuous segment and the start of the next continuous segment\n# Step 5: repeat until all continuous segments are found\n\ndef minimum_moves(n, a):\n    moves = 0\n    start = 0\n    end = 0\n    for i in range(n):\n        if a[i] == 1:\n            end = i\n            break\n\n    for i in range(end+1, n):\n        if a[i] == 1:\n            moves += (i - end - 1)\n            end = i\n    return moves\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(minimum_moves(n, a))\n"
    }
  ],
  "created": 1649804354,
  "object": "edit"
}
2022-04-12 22:59:19.870412 fix spelling mistakes 3 ['\n\n# SOLUTION\n# Step 1: find the start and end of the first contiguous subarray\n# Step 2: count the number of 0s between the start and end of the first contiguous subarray\n# Step 3: find the start and end of the next contiguous subarray\n# Step 4: count the number of 0s between the end of the first contiguous subarray and the start of the next contiguous subarray\n# Step 5: repeat until all contiguous segments are found\n\ndef minimum_moves(n, a):\n    moves = 0\n    start = 0\n    end = 0\n    for i in range(n):\n        if a[i] == 1:\n            end = i\n            break\n\n    for i in range(end+1, n):\n        if a[i] == 1:\n            moves += (i - end - 1)\n            end = i\n    return moves\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(minimum_moves(n, a))\n', '\n# SOLUTION\n# Step 1: find the start and end of the first contiguous segment\n# Step 2: count the number of 0s between the start and end of the first contiguous segment\n# Step 3: find the start and end of the next contiguous segment\n# Step 4: count the number of 0s between the end of the first contiguous segment and the start of the next contiguous segment\n# Step 5: repeat until all contiguous segments are found\n\ndef minimum_moves(n, a):\n    moves = 0\n    start = 0\n    end = 0\n    for i in range(n):\n        if a[i] == 1:\n            end = i\n            break\n\n    for i in range(end+1, n):\n        if a[i] == 1:\n            moves += (i - end - 1)\n            end = i\n    return moves\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(minimum_moves(n, a))\n', '\n\n# SOLUTION\n# Step 1: find the start and end of the first continuous segment\n# Step 2: count the number of 0s between the start and end of the first continuous segment\n# Step 3: find the start and end of the next continuous segment\n# Step 4: count the number of 0s between the end of the first continuous segment and the start of the next continuous segment\n# Step 5: repeat until all continuous segments are found\n\ndef minimum_moves(n, a):\n    moves = 0\n    start = 0\n    end = 0\n    for i in range(n):\n        if a[i] == 1:\n            end = i\n            break\n\n    for i in range(end+1, n):\n        if a[i] == 1:\n            moves += (i - end - 1)\n            end = i\n    return moves\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(minimum_moves(n, a))\n']
2022-04-12 22:59:19.870525 size on output set 3
2022-04-12 22:59:19.870532 size on input set 3
2022-04-12 22:59:21.730754 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# Problem: https://www.hackerrank.com/challenges/minimum-moves/problem\n\n# SOLUTION\n# Step 1: find the start and end of the first continuous segment\n# Step 2: count the number of 0s between the start and end of the first continuous segment\n# Step 3: find the start and end of the next continuous segment\n# Step 4: count the number of 0s between the end of the first continuous segment and the start of the next continuous segment\n# Step 5: repeat until all continuous segments are found\n\ndef minimum_moves(n, a):\n    moves = 0\n    start = 0\n    end = 0\n    for i in range(n):\n        if a[i] == 1:\n            end = i\n            break\n\n    for i in range(end+1, n):\n        if a[i] == 1:\n            moves += (i - end - 1)\n            end = i\n    return moves\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(minimum_moves(n, a))\n"
    },
    {
      "index": 1,
      "text": "\n# SOLUTION\n# Step 1: find the start and end of the first continuous segment\n# Step 2: count the number of 0s between the start and end of the first continuous segment\n# Step 3: find the start and end of the next continuous segment\n# Step 4: count the number of 0s between the end of the first continuous segment and the start of the next continuous segment\n# Step 5: repeat until all continuous segments are found\n\ndef minimum_moves(n, a):\n    moves = 0\n    start = 0\n    end = 0\n    for i in range(n):\n        if a[i] == 1:\n            end = i\n            break\n\n    for i in range(end+1, n):\n        if a[i] == 1:\n            moves += (i - end - 1)\n            end = i\n    return moves\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(minimum_moves(n, a))\n"
    },
    {
      "index": 2,
      "text": "\n\n# Step 1: find the start and end of the first continuous segment\n# Step 2: count the number of 0s between the start and end of the first continuous segment\n# Step 3: find the start and end of the next continuous segment\n# Step 4: count the number of 0s between the end of the first continuous segment and the start of the next continuous segment\n# Step 5: repeat until all continuous segments are found\n\ndef minimum_moves(n, a):\n    moves = 0\n    start = 0\n    end = 0\n    for i in range(n):\n        if a[i] == 1:\n            end = i\n            break\n\n    for i in range(end+1, n):\n        if a[i] == 1:\n            moves += (i - end - 1)\n            end = i\n    return moves\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(minimum_moves(n, a))\n"
    }
  ],
  "created": 1649804359,
  "object": "edit"
}
2022-04-12 22:59:21.730922 fix syntax errors 3 ['# Problem: https://www.hackerrank.com/challenges/minimum-moves/problem\n\n# SOLUTION\n# Step 1: find the start and end of the first continuous segment\n# Step 2: count the number of 0s between the start and end of the first continuous segment\n# Step 3: find the start and end of the next continuous segment\n# Step 4: count the number of 0s between the end of the first continuous segment and the start of the next continuous segment\n# Step 5: repeat until all continuous segments are found\n\ndef minimum_moves(n, a):\n    moves = 0\n    start = 0\n    end = 0\n    for i in range(n):\n        if a[i] == 1:\n            end = i\n            break\n\n    for i in range(end+1, n):\n        if a[i] == 1:\n            moves += (i - end - 1)\n            end = i\n    return moves\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(minimum_moves(n, a))\n', '\n# SOLUTION\n# Step 1: find the start and end of the first continuous segment\n# Step 2: count the number of 0s between the start and end of the first continuous segment\n# Step 3: find the start and end of the next continuous segment\n# Step 4: count the number of 0s between the end of the first continuous segment and the start of the next continuous segment\n# Step 5: repeat until all continuous segments are found\n\ndef minimum_moves(n, a):\n    moves = 0\n    start = 0\n    end = 0\n    for i in range(n):\n        if a[i] == 1:\n            end = i\n            break\n\n    for i in range(end+1, n):\n        if a[i] == 1:\n            moves += (i - end - 1)\n            end = i\n    return moves\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(minimum_moves(n, a))\n', '\n\n# Step 1: find the start and end of the first continuous segment\n# Step 2: count the number of 0s between the start and end of the first continuous segment\n# Step 3: find the start and end of the next continuous segment\n# Step 4: count the number of 0s between the end of the first continuous segment and the start of the next continuous segment\n# Step 5: repeat until all continuous segments are found\n\ndef minimum_moves(n, a):\n    moves = 0\n    start = 0\n    end = 0\n    for i in range(n):\n        if a[i] == 1:\n            end = i\n            break\n\n    for i in range(end+1, n):\n        if a[i] == 1:\n            moves += (i - end - 1)\n            end = i\n    return moves\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(minimum_moves(n, a))\n']
2022-04-12 22:59:28.328892 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n"
    },
    {
      "index": 1,
      "text": "def minimum_moves(n, arr):\n    return 0\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(minimum_moves(n, arr))\n"
    },
    {
      "index": 2,
      "text": "# SOLUTION\n# Step 1: find the start and end of the first contiguous segment\n# Step 2: count the number of 0s between the start and end of the first contiguous segment\n# Step 3: find the start and end of the next contiguous segment\n# Step 4: count the number of 0s between the end of the first contiguous segment and the start of the next contiguous segment\n# Step 5: repeat until all contiguous segments are found\n\ndef minimum_moves(n, a):\n    moves = 0\n    start = 0\n    end = 0\n    for i in range(n):\n        if a[i] == 1:\n            end = i\n            break\n\n    for i in range(end + 1, n):\n        if a[i] == 1:\n            moves += (i - end - 1)\n            end = i\n    return moves\n\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(minimum_moves(n, a))\n"
    }
  ],
  "created": 1649804361,
  "object": "edit"
}
2022-04-12 22:59:28.329058 fix syntax errors 3 ['\n', 'def minimum_moves(n, arr):\n    return 0\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(minimum_moves(n, arr))\n', '# SOLUTION\n# Step 1: find the start and end of the first contiguous segment\n# Step 2: count the number of 0s between the start and end of the first contiguous segment\n# Step 3: find the start and end of the next contiguous segment\n# Step 4: count the number of 0s between the end of the first contiguous segment and the start of the next contiguous segment\n# Step 5: repeat until all contiguous segments are found\n\ndef minimum_moves(n, a):\n    moves = 0\n    start = 0\n    end = 0\n    for i in range(n):\n        if a[i] == 1:\n            end = i\n            break\n\n    for i in range(end + 1, n):\n        if a[i] == 1:\n            moves += (i - end - 1)\n            end = i\n    return moves\n\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(minimum_moves(n, a))\n']
2022-04-12 22:59:35.291230 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import math\nimport os\nimport random\nimport re\nimport sys\n\n"
    },
    {
      "index": 1,
      "text": "\n# SOLUTION\n# Step 1: find the start and end of the first contiguous subarray\n# Step 2: count the number of 0s between the start and end of the first contiguous subarray\n# Step 3: find the start and end of the next contiguous subarray\n# Step 4: count the number of 0s between the end of the first contiguous subarray and the start of the next contiguous subarray\n# Step 5: repeat until all contiguous segments are found\n\ndef minimumMoves(n, a):\n    moves = 0\n    start = 0\n    end = 0\n    for i in range(n):\n        if a[i] == 1:\n            end = i\n            break\n\n    for i in range(end+1, n):\n        if a[i] == 1:\n            moves += (i - end - 1)\n            end = i\n    return moves\n\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(minimumMoves(n, a))\n"
    },
    {
      "index": 2,
      "text": "\n\n# SOLUTION\n# Step 1: find the start and end of the first contiguous subarray\n# Step 2: count the number of 0s between the start and end of the first contiguous subarray\n# Step 3: find the start and end of the next contiguous subarray\n# Step 4: count the number of 0s between the end of the first contiguous subarray and the start of the next contiguous subarray\n# Step 5: repeat until all contiguous segments are found\n\n    if n == 1:\n        return 0\ndef minimum_moves(n, a):\n    moves = 0\n    start = 0\n    end = 0\n    for i in range(n):\n        if a[i] == 1:\n            end = i\n            break\n\n    for i in range(end+1, n):\n        if a[i] == 1:\n            moves += (i - end - 1)\n            end = i\n    return moves\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(minimum_moves(n, a))\n"
    }
  ],
  "created": 1649804368,
  "object": "edit"
}
2022-04-12 22:59:35.291483 fix syntax errors 3 ['import math\nimport os\nimport random\nimport re\nimport sys\n\n', '\n# SOLUTION\n# Step 1: find the start and end of the first contiguous subarray\n# Step 2: count the number of 0s between the start and end of the first contiguous subarray\n# Step 3: find the start and end of the next contiguous subarray\n# Step 4: count the number of 0s between the end of the first contiguous subarray and the start of the next contiguous subarray\n# Step 5: repeat until all contiguous segments are found\n\ndef minimumMoves(n, a):\n    moves = 0\n    start = 0\n    end = 0\n    for i in range(n):\n        if a[i] == 1:\n            end = i\n            break\n\n    for i in range(end+1, n):\n        if a[i] == 1:\n            moves += (i - end - 1)\n            end = i\n    return moves\n\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(minimumMoves(n, a))\n', '\n\n# SOLUTION\n# Step 1: find the start and end of the first contiguous subarray\n# Step 2: count the number of 0s between the start and end of the first contiguous subarray\n# Step 3: find the start and end of the next contiguous subarray\n# Step 4: count the number of 0s between the end of the first contiguous subarray and the start of the next contiguous subarray\n# Step 5: repeat until all contiguous segments are found\n\n    if n == 1:\n        return 0\ndef minimum_moves(n, a):\n    moves = 0\n    start = 0\n    end = 0\n    for i in range(n):\n        if a[i] == 1:\n            end = i\n            break\n\n    for i in range(end+1, n):\n        if a[i] == 1:\n            moves += (i - end - 1)\n            end = i\n    return moves\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(minimum_moves(n, a))\n']
2022-04-12 22:59:35.291520 size on output set 9
