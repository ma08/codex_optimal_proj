["\n\nn = int(input())\ns = input()\n\n# first half\nfirst_half = s[:n//2] \na_count_first_half = first_half.count('a') \nb_count_first_half = first_half.count('b') \n\n# second half\nsecond_half = s[n//2:] \na_count_second_half = second_half.count('a') \nb_count_second_half = second_half.count('b') \n\n# difference\ndifference = abs(a_count_first_half - b_count_first_half) \ndifference2 = abs(a_count_second_half - b_count_second_half) \n\n# operations\noperations = min(difference, difference2) \n\n# output\nprint(operations) \n\n# modified string\nif difference < difference2: \n    print(first_half + second_half) \nelse:\n    print(second_half + first_half) \n", "# input\n\nn = int(input())\ns = input()\n\n# first half \nfirst_half = s[:n//2]\na_count_first_half = first_half.count('a')\nb_count_first_half = first_half.count('b')\n\n# second half\nsecond_half = s[n//2:]\na_count_second_half = second_half.count('a')\nb_count_second_half = second_half.count('b')\n\n# difference\ndifference = abs(a_count_first_half - b_count_first_half)\ndifference2 = abs(a_count_second_half - b_count_second_half)\n\n# operations\noperations = min(difference, difference2)\n\n# output\nprint(operations)\n\n# modified string\nif difference < difference2:\n    print(first_half + second_half)\nelse:\n    print(second_half + first_half)\n", "\n\nn = int(input())\ns = input()\n\n# first half\nfirst_half = s[:n//2]\na_count_first_half = first_half.count('a')\nb_count_first_half = first_half.count('b')\n\n# second half\nsecond_half = s[n//2:]\na_count_second_half = second_half.count('a')\nb_count_second_half = second_half.count('b')\n\n# difference\ndifference2 = abs(a_count_second_half - b_count_second_half)\n\n# operations\noperations = min(abs(a_count_first_half - b_count_first_half),\n                 abs(a_count_second_half - b_count_second_half))\n\n# output\nprint(operations)\n\n# modified string of string\nif difference < difference2:\n    print(first_half + second_half)\nelse:\n    print(second_half + first_half)\n", "\n\ndef main():\n    # read input\n    s = input()\n\n    # check if the string has an odd number of a or b\n    if s.count('a') % 2 == 1:\n        print(1)\n        print(s.replace('a', 'b', 1))\n    elif s.count('b') % 2 == 1:\n        print(1)\n        print(s.replace('b', 'a', 1))\n    else:\n        print(0)\n        print(s)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # read in the number of test cases\n    t = int(input())\n\n    # loop through each test case\n    for _ in range(t):\n        # read input\n        n = int(input())\n        s = input()\n\n        # check if the string has an odd number of a or b\n        if s.count('a') % 2 == 1:\n            print(1)\n            print(s.replace('a', 'b', 1))\n        elif s.count('b') % 2 == 1:\n            print(1)\n            print(s.replace('b', 'a', 1))\n        else:\n            print(0)\n            print(s)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # read input\n    n = int(input()) # don't need this\n    s = input()\n\n    # check if the string has an odd number of a's or b's\n    if s.count('a') % 2 == 1:\n        print(1)\n        print(s.replace('a', 'b', 1))\n    elif s.count('b') % 2 == 1:\n        print(1)\n        print(s.replace('b', 'a', 1))\n    else:\n        print(0)\n        print(s)\n\nif __name__ == '__main__':\n    main()\n", "\n\nn = int(input())\ns = input()\n\n# first half of string\nfirst_half_of_string = s[:n//2]\na_count_first_half_of_string = first_half_of_string.count('a')\nb_count_first_half_of_string = first_half_of_string.count('b')\n\n# second half of string\nsecond_half_of_string = s[n//2:]\na_count_second_half_of_string = second_half_of_string.count('a')\nb_count_second_half_of_string = second_half_of_string.count('b')\n\n# difference\ndifference = abs(a_count_first_half_of_string - b_count_first_half_of_string)\ndifference2 = abs(a_count_second_half_of_string - b_count_second_half_of_string)\n\n# operations\noperations = min(difference, difference2)\n\n# output\nprint(operations)\n\n# modified string\nif difference < difference2:\n    print(first_half_of_string + second_half_of_string)\nelse:\n    print(second_half_of_string + first_half_of_string)\n", "\n\nn = int(input())\ns = input()\n\n# first half\nfirst_half = s[:n//2]\na_count_first_half = first_half.count('a')\nb_count_first_half = first_half.count('b')\n\n# second half\nsecond_half = s[n//2:]\na_count_second_half = second_half.count('a')\nb_count_second_half = second_half.count('b')\n\n# difference\ndifference = abs(a_count_first_half - b_count_first_half)\ndifference2 = abs(a_count_second_half - b_count_second_half)\n\n# operations\noperations = min(difference, difference2)\n\n# output\nprint(operations)\n\n# modified string\nif difference < difference2:\n    print(first_half + second_half)\nelse:\n    print(second_half + first_half)\n", "\nn = int(input())\ns = input()\n\n# first half\nfirst_half = s[:n//2]\na_count_first_half = first_half.count('a')\nb_count_first_half = first_half.count('b')\n\n# second half\nsecond_half = s[n//2:]\na_count_second_half = second_half.count('a')\nb_count_second_half = second_half.count('b')\n\n# difference\ndifference = abs(a_count_first_half - b_count_first_half)\ndifference2 = abs(a_count_second_half - b_count_second_half)\n\n# operations\noperations = min(difference, difference2)\n\n# output\nprint(operations)\n\n# modified string\nif difference < difference2:\n    print(first_half + second_half)\nelse:\n    print(second_half + first_half)\n", "\n\nn = int(input()) # length of string\ns = input()\n\n# first half of string, a and b count\nfirst_half = s[:n//2] # first half of string\na_count_first_half = first_half.count('a')\nb_count_first_half = first_half.count('b')\n\n# second half of string, a and b count\nsecond_half = s[n//2:] # second half of string\na_count_second_half = second_half.count('a')\nb_count_second_half = second_half.count('b')\n\n# difference, first half and second half\ndifference = abs(a_count_first_half - b_count_first_half)\ndifference2 = abs(a_count_second_half - b_count_second_half)\n\n# operations, minimum number of operations\noperations = min(difference, difference2)\n\n# output, minimum number of operations\nprint(operations)\n\n# modified string, first half and second half\nif difference < difference2:\n    print(first_half + second_half)\nelse:\n    print(second_half + first_half)\n", "\n\ndef main():\n    n = int(input())\n    s = input()\n\n    if s.count('a') % 2 == 1:\n        print(1)\n        print(s.replace('a', 'b', 1))\n    elif s.count('b') % 2 == 1:\n        print(1)\n        print(s.replace('b', 'a', 1))\n    else:\n        print(0)\n        print(s)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())  # read input \n    s = input()  # read input\n\n    if s.count('a') % 2 == 1:  # check if the string has an odd number of a's and b's\n        print(1)\n        print(s.replace('a', 'b', 1))\n    elif s.count('b') % 2 == 1:  # check if the string has an odd number of a's and b's\n        print(1)\n        print(s.replace('b', 'a', 1))\n    else:  # check if the string has an odd number of a's and b's\n        print(0)\n        print(s)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # read input\n    n = int(input())\n    s = input()\n\n    # check if the string has an odd number of a or b\n    if s.count('a') % 2 == 1:\n        print(1)\n        print(s.replace('a', 'b', 1), end='')\n    elif s.count('b') % 2 == 1:\n        print(1)\n        print(s.replace('b', 'a', 1), end='')\n    else:\n        print(0)\n        print(s, end='')\n\nif __name__ == '__main__':\n    main()\n", "\n\nn = int(input())\ns = input()\n\n# first half of the string\nfirst_half = s[:n//2]\na_count_first_half = first_half.count('a')\nb_count_first_half = first_half.count('b')\n\n# second half of the string\nsecond_half = s[n//2:]\na_count_second_half = second_half.count('a')\nb_count_second_half = second_half.count('b')\n\n# difference\ndifference = abs(a_count_first_half - b_count_first_half)\ndifference2 = abs(a_count_second_half - b_count_second_half)\n\n# operations\noperations = min(difference, difference2)\n\n# output\nprint(operations)\n\n# modified string\nif difference < difference2:\n    print(first_half + second_half)\nelse:\n    print(second_half + first_half)\n", "\n\ndef main():\n    # read input\n    n = int(input())\n    s = input()\n\n    # check if the string has an odd number of a's and b's\n    if s.count('a') % 2 == 1:\n        print(1)\n        print(s.replace('a', 'b', 1))\n    elif s.count('b') % 2 == 1:\n        print(1)\n        print(s.replace('b', 'a', 1))\n    else:\n        print(0)\n        print(s)\n\nif __name__ == '__main__':\n    main()\n"]