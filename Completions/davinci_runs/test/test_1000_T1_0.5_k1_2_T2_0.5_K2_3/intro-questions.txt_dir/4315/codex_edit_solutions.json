["\n\nimport math\nR = int(input())\n\n\n\nimport math\nA = int(input())\nB = int(input())\nC = int(input())\n\np = (A + B + C) / 2\n\nprint(math.sqrt(p * (p - A) * (p - B) * (p - C)))\nprint(R * 2 * math.pi)\n", "\nimport math\n\ndef main():\n    r = int(raw_input())\n    print 2 * math.pi * r \n\nif __name__ == '__main__':\n    main()\n", "#input\nimport math\n#output\nR = int(input())\n\nprint(R * 2 * math.pi)\n", "import math\n\ndef main():\n    r = int(input())\n    print 2 * math.pi * r\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport math\n\ndef main():\n    r = int(input())\n    print 2 * math.pi * r \n\nif __name__ == '__main__':\n    main()\n", "\nimport math\nR = int(input())\nprint(R * 2 * math.pi)\n", "import math\nR = int(input())\n\nprint(R * 2 * math.pi)\n", "#!/usr/bin/env python\n\nimport math\n\ndef main():\n    r = int(raw_input())\n    print 2 * math.pi * r \n\nif __name__ == '__main__':\n    main()\n", "\n# find the perimeter of a circle\nimport math as m\n\nR = int(input())\n\nprint(R * 2 * m.pi)\n", "\n# find the perimeter of a circle\nimport math\n\nR = int(input())\n\nprint(R * 2 * math.pi) #fix syntax errors\n", "# find the perimeter of a circle\nimport math\n\nR = int(input())\n\nprint(R * 2 * math.pi)\n", "# input\nimport math\n# output\nR = int(input())\n\nprint(R * 2 * math.pi)\n", "\n#input\nimport math\n#output\nR = int(input())\nprint(R * 2 * math.pi)\n"]