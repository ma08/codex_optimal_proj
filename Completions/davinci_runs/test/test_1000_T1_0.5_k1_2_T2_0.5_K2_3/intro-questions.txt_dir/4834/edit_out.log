2022-04-13 04:15:28.769859 num operations 2
2022-04-13 04:15:28.769868 size on input set 1
2022-04-13 04:15:30.516582 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\ntimes = list(map(int, input().split()))\ntimes.sort()\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n"
    },
    {
      "index": 1,
      "text": "\n# test\nn = int(input())\ntimes = list(map(int, input().split()))\n\ntimes.sort()\n\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n"
    },
    {
      "index": 2,
      "text": "# coding: utf-8\n\nn = int(input())\ntimes = list(map(int, input().split()))\n\ntimes.sort()\n\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n"
    }
  ],
  "created": 1649823328,
  "object": "edit"
}
2022-04-13 04:15:30.516803 fix spelling mistakes 3 ['\n\nn = int(input())\ntimes = list(map(int, input().split()))\ntimes.sort()\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n', '\n# test\nn = int(input())\ntimes = list(map(int, input().split()))\n\ntimes.sort()\n\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n', '# coding: utf-8\n\nn = int(input())\ntimes = list(map(int, input().split()))\n\ntimes.sort()\n\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n']
2022-04-13 04:15:30.516827 size on output set 3
2022-04-13 04:15:30.516833 size on input set 3
2022-04-13 04:15:34.947025 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# coding: utf-8\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nb = []\nfor i in range(1, m+1):\n    b.append(a[-i])\n\nprint(sum(b))\n"
    },
    {
      "index": 1,
      "text": "# coding: utf-8\n\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\ntimes = list(map(int, input().split()))\n\ntimes.sort()\n\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n"
    },
    {
      "index": 2,
      "text": "# coding: utf-8\n\nn = int(input())\ntimes = list(map(int, input().split()))\n\ntimes.sort()\n\ntotal = 0\nfor i in range(n - 1):\n    total += (i + 1) * times[i]\n\ntotal += times[n - 1] * n\n\nprint(total)\n"
    }
  ],
  "created": 1649823330,
  "object": "edit"
}
2022-04-13 04:15:34.947198 fix syntax errors 3 ['# coding: utf-8\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nb = []\nfor i in range(1, m+1):\n    b.append(a[-i])\n\nprint(sum(b))\n', '# coding: utf-8\n\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\ntimes = list(map(int, input().split()))\n\ntimes.sort()\n\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n', '# coding: utf-8\n\nn = int(input())\ntimes = list(map(int, input().split()))\n\ntimes.sort()\n\ntotal = 0\nfor i in range(n - 1):\n    total += (i + 1) * times[i]\n\ntotal += times[n - 1] * n\n\nprint(total)\n']
2022-04-13 04:15:37.593864 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\ntimes = list(map(int, input().split()))\ntimes.sort()\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n\n\nn = int(input())\ntimes = list(map(int, input().split()))\ntimes.sort()\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\ntimes = list(map(int, input().split()))\ntimes.sort()\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\ntimes = list(map(int, input().split()))\ntimes.sort()\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n"
    }
  ],
  "created": 1649823334,
  "object": "edit"
}
2022-04-13 04:15:37.594032 fix syntax errors 3 ['n = int(input())\ntimes = list(map(int, input().split()))\ntimes.sort()\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n\n\nn = int(input())\ntimes = list(map(int, input().split()))\ntimes.sort()\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n', '\nn = int(input())\ntimes = list(map(int, input().split()))\ntimes.sort()\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n', '\nn = int(input())\ntimes = list(map(int, input().split()))\ntimes.sort()\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n']
2022-04-13 04:16:18.508015 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\ntimes = list(map(int, input().split()))\n\ntimes.sort()\n\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n"
    },
    {
      "index": 1,
      "text": "\n# # test\n# n = int(input())\n# times = list(map(int, input().split()))\n\n# times.sort()\n\n# total = 0\n# for i in range(n):\n#     total += (i + 1) * times[i]\n\n# print(total)\n\n# print(\"{0:.2f}\".format(3.141592))\n\n# print(\"{0:.4f}\".format(3.141592))\n\n# print(\"{0:.4f}\".format(3.141592))\n\n# a = int(input())\n# b = int(input())\n# c = int(input())\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c))\n\n# print(\"{0:02d}:{1:02d}:{2:02d}\".format(a, b, c\n"
    },
    {
      "index": 2,
      "text": "# test\nn = int(input())\ntimes = list(map(int, input().split()))\n\ntimes.sort()\n\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n\n\n# test\nn = int(input())\ntimes = list(map(int, input().split()))\n\ntimes.sort()\n\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n"
    }
  ],
  "created": 1649823337,
  "object": "edit"
}
2022-04-13 04:16:18.508354 fix syntax errors 3 ['n = int(input())\ntimes = list(map(int, input().split()))\n\ntimes.sort()\n\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n', '\n# # test\n# n = int(input())\n# times = list(map(int, input().split()))\n\n# times.sort()\n\n# total = 0\n# for i in range(n):\n#     total += (i + 1) * times[i]\n\n# print(total)\n\n# print("{0:.2f}".format(3.141592))\n\n# print("{0:.4f}".format(3.141592))\n\n# print("{0:.4f}".format(3.141592))\n\n# a = int(input())\n# b = int(input())\n# c = int(input())\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c))\n\n# print("{0:02d}:{1:02d}:{2:02d}".format(a, b, c\n', '# test\nn = int(input())\ntimes = list(map(int, input().split()))\n\ntimes.sort()\n\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n\n\n# test\nn = int(input())\ntimes = list(map(int, input().split()))\n\ntimes.sort()\n\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n']
2022-04-13 04:16:18.508400 size on output set 8
2022-04-13 04:16:18.508413 num operations 2
2022-04-13 04:16:18.508418 size on input set 1
2022-04-13 04:16:19.965254 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [int(x) for x in sys.stdin.readline().split()]\n    times.sort()\n\n    a = 0\n    b = 0\n    for i in range(n):\n        if i % 2 == 0:\n            a += times[i]\n        else:\n            b += times[i]\n\n    print(max(a, b))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [int(x) for x in sys.stdin.readline().split()]\n    times.sort()\n\n    a = 0\n    b = 0\n    for i in range(n):\n        if i % 2 == 0:\n            a += times[i]\n        else:\n            b += times[i]\n\n    print(max(a, b))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [int(x) for x in sys.stdin.readline().split()]\n    times.sort()\n\n    a = 0\n    b = 0\n    for i in range(n):\n        if i % 2 == 0:\n            a += times[i]\n        else:\n            b += times[i]\n\n    print(max(a, b))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649823378,
  "object": "edit"
}
2022-04-13 04:16:19.965462 fix spelling mistakes 3 ["import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [int(x) for x in sys.stdin.readline().split()]\n    times.sort()\n\n    a = 0\n    b = 0\n    for i in range(n):\n        if i % 2 == 0:\n            a += times[i]\n        else:\n            b += times[i]\n\n    print(max(a, b))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [int(x) for x in sys.stdin.readline().split()]\n    times.sort()\n\n    a = 0\n    b = 0\n    for i in range(n):\n        if i % 2 == 0:\n            a += times[i]\n        else:\n            b += times[i]\n\n    print(max(a, b))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [int(x) for x in sys.stdin.readline().split()]\n    times.sort()\n\n    a = 0\n    b = 0\n    for i in range(n):\n        if i % 2 == 0:\n            a += times[i]\n        else:\n            b += times[i]\n\n    print(max(a, b))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 04:16:19.965489 size on output set 2
2022-04-13 04:16:19.965495 size on input set 2
2022-04-13 04:16:24.629659 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [int(x) for x in sys.stdin.readline().split()] * 2\n    times.sort()\n\n    a = 0\n    b = 0\n    for i in range(n * 2):\n        if i < n:\n            if i % 2 == 0:\n                a += times[i]\n            else:\n                b += times[i]\n        elif i > n:\n            if i % 2 == 0:\n                b += times[i]\n            else:\n                a += times[i]\n\n    print(max(a, b))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [int(x) for x in sys.stdin.readline().split()]\n    times.sort()\n\n    a = 0\n    b = 0\n    for i in range(n):\n        if i % 2 == 0:\n            a += times[i]\n        else:\n            b += times[i]\n\n    print(max(a, b)) \n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = sorted([int(x) for x in sys.stdin.readline().split()])\n\n    a = 0\n    b = 0\n    for i in range(n):\n        if i % 2 == 0:\n            a += times[i]\n        else:\n            b += times[i]\n\n    print(max(a, b))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649823380,
  "object": "edit"
}
2022-04-13 04:16:24.629823 fix syntax errors 3 ["import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [int(x) for x in sys.stdin.readline().split()] * 2\n    times.sort()\n\n    a = 0\n    b = 0\n    for i in range(n * 2):\n        if i < n:\n            if i % 2 == 0:\n                a += times[i]\n            else:\n                b += times[i]\n        elif i > n:\n            if i % 2 == 0:\n                b += times[i]\n            else:\n                a += times[i]\n\n    print(max(a, b))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [int(x) for x in sys.stdin.readline().split()]\n    times.sort()\n\n    a = 0\n    b = 0\n    for i in range(n):\n        if i % 2 == 0:\n            a += times[i]\n        else:\n            b += times[i]\n\n    print(max(a, b)) \n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = sorted([int(x) for x in sys.stdin.readline().split()])\n\n    a = 0\n    b = 0\n    for i in range(n):\n        if i % 2 == 0:\n            a += times[i]\n        else:\n            b += times[i]\n\n    print(max(a, b))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 04:16:28.419649 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    pass\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [int(x) for x in sys.stdin.readline().split()]\n    times.sort()\n\n    a = 0\n    b = 0\n    for i in range(n):\n        if i % 2 == 0:\n            a += times[i]\n        else:\n            b += times[i]\n\n    print(max(a, b))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649823384,
  "object": "edit"
}
2022-04-13 04:16:28.419832 fix syntax errors 3 ["\nimport sys\n\ndef main():\n    pass\n\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [int(x) for x in sys.stdin.readline().split()]\n    times.sort()\n\n    a = 0\n    b = 0\n    for i in range(n):\n        if i % 2 == 0:\n            a += times[i]\n        else:\n            b += times[i]\n\n    print(max(a, b))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 04:16:28.419874 size on output set 6
2022-04-13 04:16:28.419888 num operations 2
2022-04-13 04:16:28.419895 size on input set 1
2022-04-13 04:16:31.648427 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\ntimes.sort()\n\ntotalTime = 0\n\nfor i in range(N):\n    totalTime += sum(times[i:])\n\nprint(totalTime)\n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n#N = 3\n#times = [4, 1, 2]\n\ntimes.sort()\n\ntotalTime = 0\n\nfor i in range(N):\n    totalTime += sum(times[i:])\n\nprint(totalTime)\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n#N = 3\n#times = [4, 1, 2]\n\ntimes.sort()\n\ntotalTime = 0\n\nfor i in range(N):\n    totalTime += sum(times[i:])\n\nprint(totalTime)\n"
    }
  ],
  "created": 1649823388,
  "object": "edit"
}
2022-04-13 04:16:31.648598 fix spelling mistakes 3 ['\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\ntimes.sort()\n\ntotalTime = 0\n\nfor i in range(N):\n    totalTime += sum(times[i:])\n\nprint(totalTime)\n', '\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n#N = 3\n#times = [4, 1, 2]\n\ntimes.sort()\n\ntotalTime = 0\n\nfor i in range(N):\n    totalTime += sum(times[i:])\n\nprint(totalTime)\n', '\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n#N = 3\n#times = [4, 1, 2]\n\ntimes.sort()\n\ntotalTime = 0\n\nfor i in range(N):\n    totalTime += sum(times[i:])\n\nprint(totalTime)\n']
2022-04-13 04:16:31.648623 size on output set 2
2022-04-13 04:16:31.648630 size on input set 2
2022-04-13 04:16:38.191330 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\n\ninput = sys.stdin.readline\n\nN = int(input())  # \uc785\ub825\ubc1b\uc740 \uc0ac\ub78c\uc758 \uc218\ntimes = list(map(int, input().split()))  # \uac01 \uc0ac\ub78c\uc774 \ub05d\ub0b4\ub294\ub370 \uac78\ub9ac\ub294 \uc2dc\uac04\n\ntimes.sort()  # \uc2dc\uac04 \uc21c\uc73c\ub85c \uc815\ub82c\n\ntotalTime = 0  # \ucd1d \ub300\uae30 \uc2dc\uac04\n\nfor i in range(N):\n    totalTime += sum(times[i:])  # \uac01 \uc0ac\ub78c\ub9c8\ub2e4 \ub0a8\uc740 \uc0ac\ub78c\ub4e4\uc758 \uc2dc\uac04\uc744 \ub354\ud574\uc90c\n\nprint(totalTime)\n"
    },
    {
      "index": 1,
      "text": "\n\nprint(\"Hello World!\")\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input())\ntimes = list(map(int, input().split()))\ntimes.sort()\n\ntotalTime = 0\n\nfor i in range(N):\n    totalTime += sum(times[i:])\n\nprint(totalTime)\n"
    }
  ],
  "created": 1649823391,
  "object": "edit"
}
2022-04-13 04:16:38.191503 fix syntax errors 3 ['import sys\n\n\ninput = sys.stdin.readline\n\nN = int(input())  # 입력받은 사람의 수\ntimes = list(map(int, input().split()))  # 각 사람이 끝내는데 걸리는 시간\n\ntimes.sort()  # 시간 순으로 정렬\n\ntotalTime = 0  # 총 대기 시간\n\nfor i in range(N):\n    totalTime += sum(times[i:])  # 각 사람마다 남은 사람들의 시간을 더해줌\n\nprint(totalTime)\n', '\n\nprint("Hello World!")\n', '\n\nN = int(input())\ntimes = list(map(int, input().split()))\ntimes.sort()\n\ntotalTime = 0\n\nfor i in range(N):\n    totalTime += sum(times[i:])\n\nprint(totalTime)\n']
2022-04-13 04:16:44.639937 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#\n# N = int(input())\n# times = list(map(int, input().split()))\n#\n# #N = 3\n# #times = [4, 1, 2]\n#\n# times.sort()\n#\n# totalTime = 0\n#\n# for i in range(N):\n#     totalTime += sum(times[i:])\n#\n# print(totalTime)\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\ntimes = list(map(int, input().split()))\n\n#N = 3\n#times = [4, 1, 2]\n\ntimes.sort()\n\ntotalTime = 0\n\nfor i in range(N):\n    totalTime += sum(times[i:])\n\nprint(totalTime)\n"
    },
    {
      "index": 2,
      "text": "# coding: utf-8\n\n\n# In[ ]:\n\n#N = 3\n#times = [4, 1, 2]\n\ntimes.sort()\n\ntotalTime = 0\n\nfor i in range(N):\n    totalTime += sum(times[i:])\n\nprint(totalTime)\n"
    }
  ],
  "created": 1649823398,
  "object": "edit"
}
2022-04-13 04:16:44.640107 fix syntax errors 3 ['\n#\n# N = int(input())\n# times = list(map(int, input().split()))\n#\n# #N = 3\n# #times = [4, 1, 2]\n#\n# times.sort()\n#\n# totalTime = 0\n#\n# for i in range(N):\n#     totalTime += sum(times[i:])\n#\n# print(totalTime)\n', '\nN = int(input())\ntimes = list(map(int, input().split()))\n\n#N = 3\n#times = [4, 1, 2]\n\ntimes.sort()\n\ntotalTime = 0\n\nfor i in range(N):\n    totalTime += sum(times[i:])\n\nprint(totalTime)\n', '# coding: utf-8\n\n\n# In[ ]:\n\n#N = 3\n#times = [4, 1, 2]\n\ntimes.sort()\n\ntotalTime = 0\n\nfor i in range(N):\n    totalTime += sum(times[i:])\n\nprint(totalTime)\n']
2022-04-13 04:16:44.640132 size on output set 6
2022-04-13 04:16:44.640143 num operations 2
2022-04-13 04:16:44.640148 size on input set 1
2022-04-13 04:16:46.595765 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\nteams = [int(x) for x in input().split()]\n\nteams = sorted(teams)\n\ntotal_time = 0\n\nfor i in range(n):\n    total_time += teams[i] * (n - i)\n\n\nprint(total_time)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\nteams = [int(x) for x in input().split()]\nteams = sorted(teams)\n\ntotal_time = 0\n\nfor i in range(n):\n    total_time += teams[i] * (n - i)\n\nprint(total_time)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\nteams = [int(x) for x in input().split()]\nteams = sorted(teams)\ntotal_time = 0\nfor i in range(n):\n    total_time += teams[i] * (n - i)\nprint(total_time)\n"
    }
  ],
  "created": 1649823404,
  "object": "edit"
}
2022-04-13 04:16:46.595926 fix spelling mistakes 3 ['\n\nn = int(input())\nteams = [int(x) for x in input().split()]\n\nteams = sorted(teams)\n\ntotal_time = 0\n\nfor i in range(n):\n    total_time += teams[i] * (n - i)\n\n\nprint(total_time)\n', '\n\nn = int(input())\nteams = [int(x) for x in input().split()]\nteams = sorted(teams)\n\ntotal_time = 0\n\nfor i in range(n):\n    total_time += teams[i] * (n - i)\n\nprint(total_time)\n', '\n\nn = int(input())\nteams = [int(x) for x in input().split()]\nteams = sorted(teams)\ntotal_time = 0\nfor i in range(n):\n    total_time += teams[i] * (n - i)\nprint(total_time)\n']
2022-04-13 04:16:46.595949 size on output set 3
2022-04-13 04:16:46.595956 size on input set 3
2022-04-13 04:16:47.999294 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#\n\nn = int(input())\nteams = [int(x) for x in input().split()]\nteams = sorted(teams)\ntotal_time = 0\nfor i in range(n):\n    total_time += teams[i] * (n - i)\nprint(total_time)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nteams = [int(x) for x in input().split()]\nteams = sorted(teams)\ntotal_time = 0\nfor i in range(n):\n    total_time += teams[i] * (n - i)\nprint(total_time)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nteams = [int(x) for x in input().split()]\nteams = sorted(teams)\ntotal_time = 0\nfor i in range(n):\n    total_time += teams[i] * (n - i)\nprint(total_time)\n"
    }
  ],
  "created": 1649823406,
  "object": "edit"
}
2022-04-13 04:16:47.999576 fix syntax errors 3 ['#\n\nn = int(input())\nteams = [int(x) for x in input().split()]\nteams = sorted(teams)\ntotal_time = 0\nfor i in range(n):\n    total_time += teams[i] * (n - i)\nprint(total_time)\n', '\nn = int(input())\nteams = [int(x) for x in input().split()]\nteams = sorted(teams)\ntotal_time = 0\nfor i in range(n):\n    total_time += teams[i] * (n - i)\nprint(total_time)\n', '\nn = int(input())\nteams = [int(x) for x in input().split()]\nteams = sorted(teams)\ntotal_time = 0\nfor i in range(n):\n    total_time += teams[i] * (n - i)\nprint(total_time)\n']
2022-04-13 04:16:50.005166 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nteams = [int(x) for x in input().split()]\n\nteams = sorted(teams)\n\ntotal_time = 0\nfor i in range(n):\n    total_time += teams[i] * (n - i)\n\n\nprint(total_time)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nteams = [int(x) for x in input().split()]\n\nteams = sorted(teams)\n\ntotal_time = 0\nfor i in range(n):\n    total_time += teams[i] * (n - i)\n\n\nprint(total_time)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nteams = [int(x) for x in input().split(' ')]\n\nteams = sorted(teams)\n\ntotal_time = 0\n\nfor i in range(n):\n    total_time += teams[i] * (n - i)\n\n\nprint(total_time)\n"
    }
  ],
  "created": 1649823408,
  "object": "edit"
}
2022-04-13 04:16:50.005344 fix syntax errors 3 ['\nn = int(input())\nteams = [int(x) for x in input().split()]\n\nteams = sorted(teams)\n\ntotal_time = 0\nfor i in range(n):\n    total_time += teams[i] * (n - i)\n\n\nprint(total_time)\n', '\nn = int(input())\nteams = [int(x) for x in input().split()]\n\nteams = sorted(teams)\n\ntotal_time = 0\nfor i in range(n):\n    total_time += teams[i] * (n - i)\n\n\nprint(total_time)\n', "\nn = int(input())\nteams = [int(x) for x in input().split(' ')]\n\nteams = sorted(teams)\n\ntotal_time = 0\n\nfor i in range(n):\n    total_time += teams[i] * (n - i)\n\n\nprint(total_time)\n"]
2022-04-13 04:16:52.003303 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nteams = [int(x) for x in input().split()]\nteams = sorted(teams)\n\ntotal_time = 0\n\nfor i in range(n):\n    total_time += teams[i] * (n - i)\n\nprint(total_time)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nteams = [int(x) for x in input().split()]\nteams = sorted(teams)\n\ntotal_time = 0\n\nfor i in range(n):\n    total_time += teams[i] * (n - i)\n\nprint(total_time)\n"
    },
    {
      "index": 2,
      "text": "\n\n\ndef foo(n):\n    return n\n\nn = int(input())\nteams = [int(x) for x in input().split()]\nteams = sorted(teams)\n\ntotal_time = 0\n\nfor i in range(n):\n    total_time += teams[i] * (n - i)\n\nprint(total_time)\n"
    }
  ],
  "created": 1649823410,
  "object": "edit"
}
2022-04-13 04:16:52.003491 fix syntax errors 3 ['\nn = int(input())\nteams = [int(x) for x in input().split()]\nteams = sorted(teams)\n\ntotal_time = 0\n\nfor i in range(n):\n    total_time += teams[i] * (n - i)\n\nprint(total_time)\n', '\nn = int(input())\nteams = [int(x) for x in input().split()]\nteams = sorted(teams)\n\ntotal_time = 0\n\nfor i in range(n):\n    total_time += teams[i] * (n - i)\n\nprint(total_time)\n', '\n\n\ndef foo(n):\n    return n\n\nn = int(input())\nteams = [int(x) for x in input().split()]\nteams = sorted(teams)\n\ntotal_time = 0\n\nfor i in range(n):\n    total_time += teams[i] * (n - i)\n\nprint(total_time)\n']
2022-04-13 04:16:52.003517 size on output set 6
2022-04-13 04:16:52.003535 num operations 2
2022-04-13 04:16:52.003540 size on input set 1
2022-04-13 04:16:55.756954 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution\n\n# Number of teams.\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm.\nT = list(map(int, input().split()))\n\n# Sorted times.\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even.\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd.\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n"
    },
    {
      "index": 1,
      "text": "\n\n\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n"
    },
    {
      "index": 2,
      "text": "\n\n# Solution\n\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement the algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n"
    }
  ],
  "created": 1649823412,
  "object": "edit"
}
2022-04-13 04:16:55.757132 fix spelling mistakes 3 ['\n\n# Solution\n\n# Number of teams.\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm.\nT = list(map(int, input().split()))\n\n# Sorted times.\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even.\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd.\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n', '\n\n\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n', '\n\n# Solution\n\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement the algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n']
2022-04-13 04:16:55.757170 size on output set 3
2022-04-13 04:16:55.757177 size on input set 3
2022-04-13 04:17:01.909422 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Solution\n\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement the algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution 1\n\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement the algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n\n\n# Solution 2\n\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement the algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n"
    },
    {
      "index": 2,
      "text": "\n#!/usr/bin/python3\n# -*- coding: utf-8 -*-\n\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement the algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\n\ntotal_time = 0\nfor i in range(N):\n    total_time += T[i] * (N - i)\n\nprint(total_time)\n"
    }
  ],
  "created": 1649823415,
  "object": "edit"
}
2022-04-13 04:17:01.909732 fix syntax errors 3 ['\n# Solution\n\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement the algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n', '\n\n# Solution 1\n\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement the algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n\n\n# Solution 2\n\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement the algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n', '\n#!/usr/bin/python3\n# -*- coding: utf-8 -*-\n\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement the algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\n\ntotal_time = 0\nfor i in range(N):\n    total_time += T[i] * (N - i)\n\nprint(total_time)\n']
2022-04-13 04:17:03.388752 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Solution\n\n# Number of teams.\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm.\nT = list(map(int, input().split()))\n\n# Sorted times.\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even.\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd.\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n"
    },
    {
      "index": 1,
      "text": "\n# Solution\n\n# Number of teams.\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm.\nT = list(map(int, input().split()))\n\n# Sorted times.\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even.\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd.\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n"
    },
    {
      "index": 2,
      "text": "\n# Solution\n\n# Number of teams.\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm.\nT = list(map(int, input().split()))\n\n# Sorted times.\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even.\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd.\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n"
    }
  ],
  "created": 1649823421,
  "object": "edit"
}
2022-04-13 04:17:03.388931 fix syntax errors 3 ['\n# Solution\n\n# Number of teams.\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm.\nT = list(map(int, input().split()))\n\n# Sorted times.\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even.\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd.\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n', '\n# Solution\n\n# Number of teams.\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm.\nT = list(map(int, input().split()))\n\n# Sorted times.\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even.\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd.\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n', '\n# Solution\n\n# Number of teams.\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm.\nT = list(map(int, input().split()))\n\n# Sorted times.\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even.\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd.\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n']
2022-04-13 04:17:04.871857 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n"
    },
    {
      "index": 1,
      "text": "\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n"
    },
    {
      "index": 2,
      "text": "\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n"
    }
  ],
  "created": 1649823423,
  "object": "edit"
}
2022-04-13 04:17:04.872031 fix syntax errors 3 ['\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n', '\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n', '\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n']
2022-04-13 04:17:04.872150 size on output set 5
2022-04-13 04:17:04.872164 num operations 2
2022-04-13 04:17:04.872169 size on input set 1
2022-04-13 04:17:07.774996 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Sort the times in descending order\ntimes.sort(reverse=True)\n\n# Greedy algorithm\n# The one with the shortest time should go first\n# The second shortest time should go second, etc.\n# The longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n\n# The time it takes to finish all lectures is the sum of the times\nprint(sum(times))\n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Sort the times in descending order\ntimes.sort(reverse=True)\n\n# Greedy algorithm\n# The one with the shortest time should go first\n# The second shortest time should go second, etc.\n# and the longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n\n# The time it takes to finish all lectures is the sum of the times\nprint(sum(times))\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Sort the times in descending order\ntimes.sort(reverse=True)\n\n# Greedy algorithm\n# The one with the shortest time should go first\n# The second shortest time should go second, etc.\n# And the longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n\n# The time it takes to finish all lectures is the sum of the times\nprint(sum(times))\n"
    }
  ],
  "created": 1649823424,
  "object": "edit"
}
2022-04-13 04:17:07.775167 fix spelling mistakes 3 ["\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Sort the times in descending order\ntimes.sort(reverse=True)\n\n# Greedy algorithm\n# The one with the shortest time should go first\n# The second shortest time should go second, etc.\n# The longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n\n# The time it takes to finish all lectures is the sum of the times\nprint(sum(times))\n", "\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Sort the times in descending order\ntimes.sort(reverse=True)\n\n# Greedy algorithm\n# The one with the shortest time should go first\n# The second shortest time should go second, etc.\n# and the longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n\n# The time it takes to finish all lectures is the sum of the times\nprint(sum(times))\n", "\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Sort the times in descending order\ntimes.sort(reverse=True)\n\n# Greedy algorithm\n# The one with the shortest time should go first\n# The second shortest time should go second, etc.\n# And the longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n\n# The time it takes to finish all lectures is the sum of the times\nprint(sum(times))\n"]
2022-04-13 04:17:07.775197 size on output set 3
2022-04-13 04:17:07.775203 size on input set 3
2022-04-13 04:17:49.095622 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Sort the times in descending order\ntimes.sort(reverse=True)\n\n# Greedy algorithm\n# The one with the shortest time should go first\n# The second shortest time should go second, etc.\n# And the longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n\n# The time it takes to finish all lectures is the sum of the times\nprint(sum(times))\n"
    },
    {
      "index": 1,
      "text": "# @Author: J.Y.\n# @Date:   2019-04-18T09:28:08+09:00\n# @Project: NLP\n# @Last modified by:   J.Y.\n# @Last modified time: 2019-04-18T09:28:30+09:00\n# @License: JeeY\n# @Copyright: J.Y. JeeY\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Sort the times in descending order\ntimes.sort(reverse=True)\n\n# Greedy algorithm\n# The one with the shortest time should go first\n# The second shortest time should go second, etc.\n# And the longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n\n# The time it takes to finish all lectures is the sum of the times\nprint(sum(times))\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Sort the times in descending order\ntimes.sort(reverse=True)\n\n# Greedy algorithm\n# The one with the shortest time should go first.\n# The second shortest time should go second, etc. And the longest time should go last (this is the only time it will be waiting, so it doesn't matter).\n\n# The time it takes to finish all lectures is the sum of the times.\nprint(sum(times))\n"
    }
  ],
  "created": 1649823427,
  "object": "edit"
}
2022-04-13 04:17:49.095808 fix syntax errors 3 ["\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Sort the times in descending order\ntimes.sort(reverse=True)\n\n# Greedy algorithm\n# The one with the shortest time should go first\n# The second shortest time should go second, etc.\n# And the longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n\n# The time it takes to finish all lectures is the sum of the times\nprint(sum(times))\n", "# @Author: J.Y.\n# @Date:   2019-04-18T09:28:08+09:00\n# @Project: NLP\n# @Last modified by:   J.Y.\n# @Last modified time: 2019-04-18T09:28:30+09:00\n# @License: JeeY\n# @Copyright: J.Y. JeeY\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Sort the times in descending order\ntimes.sort(reverse=True)\n\n# Greedy algorithm\n# The one with the shortest time should go first\n# The second shortest time should go second, etc.\n# And the longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n\n# The time it takes to finish all lectures is the sum of the times\nprint(sum(times))\n", "\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Sort the times in descending order\ntimes.sort(reverse=True)\n\n# Greedy algorithm\n# The one with the shortest time should go first.\n# The second shortest time should go second, etc. And the longest time should go last (this is the only time it will be waiting, so it doesn't matter).\n\n# The time it takes to finish all lectures is the sum of the times.\nprint(sum(times))\n"]
2022-04-13 04:17:53.455270 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Sort the times in ascending order\ntimes.sort()\n\n# Greedy algorithm\n# The one with the longest time should go first\n# The second longest time should go second, etc.\n# The shortest time should go last (this is the only time it will be waiting, so it doesn't matter)\n\n# The time it takes to finish all lectures is the sum of the times\nprint(sum(times[i] * (N - i) for i in range(N)))\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Sort the times in descending order\ntimes.sort(reverse=True)\n\n# Greedy algorithm\n# The one with the shortest time should go first\n# The second shortest time should go second, etc.\n# The longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n\n# The time it takes to finish all lectures is the sum of the times\nprint(sum(times))\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Sort the times in descending order\ntimes.sort(reverse=True)\n\n# Greedy algorithm\n# The one with the shortest time should go first\n# The second shortest time should go second, etc.\n# The longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n\n# The time it takes to finish all lectures is the sum of the times\nprint(sum(times))\n"
    }
  ],
  "created": 1649823469,
  "object": "edit"
}
2022-04-13 04:17:53.455470 fix syntax errors 3 ["\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Sort the times in ascending order\ntimes.sort()\n\n# Greedy algorithm\n# The one with the longest time should go first\n# The second longest time should go second, etc.\n# The shortest time should go last (this is the only time it will be waiting, so it doesn't matter)\n\n# The time it takes to finish all lectures is the sum of the times\nprint(sum(times[i] * (N - i) for i in range(N)))\n", "\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Sort the times in descending order\ntimes.sort(reverse=True)\n\n# Greedy algorithm\n# The one with the shortest time should go first\n# The second shortest time should go second, etc.\n# The longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n\n# The time it takes to finish all lectures is the sum of the times\nprint(sum(times))\n", "\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Sort the times in descending order\ntimes.sort(reverse=True)\n\n# Greedy algorithm\n# The one with the shortest time should go first\n# The second shortest time should go second, etc.\n# The longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n\n# The time it takes to finish all lectures is the sum of the times\nprint(sum(times))\n"]
2022-04-13 04:17:55.882327 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Greedy algorithm\n# The one with the shortest time should go first\n# The second shortest time should go second, etc.\n# and the longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n# Sort the times in descending order\ntimes.sort(reverse=True)\n\n\n# The time it takes to finish all lectures is the sum of the times\nprint(sum(times))\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Sort the times in descending order\ntimes.sort(reverse=True)\n\n# Greedy algorithm\n# The one with the shortest time should go first\n# The second shortest time should go second, etc.\n# and the longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n\n# The time it takes to finish all lectures is the sum of the times\nprint(sum(times))\n"
    },
    {
      "index": 2,
      "text": "# Accepted\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Sort the times in descending order\ntimes.sort(reverse=True)\n\n# Greedy algorithm\n# The one with the shortest time should go first\n# The second shortest time should go second, etc.\n# and the longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n\n# The time it takes to finish all lectures is the sum of the times\nprint(sum(times))\n"
    }
  ],
  "created": 1649823473,
  "object": "edit"
}
2022-04-13 04:17:55.882487 fix syntax errors 3 ["\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Greedy algorithm\n# The one with the shortest time should go first\n# The second shortest time should go second, etc.\n# and the longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n# Sort the times in descending order\ntimes.sort(reverse=True)\n\n\n# The time it takes to finish all lectures is the sum of the times\nprint(sum(times))\n", "\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Sort the times in descending order\ntimes.sort(reverse=True)\n\n# Greedy algorithm\n# The one with the shortest time should go first\n# The second shortest time should go second, etc.\n# and the longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n\n# The time it takes to finish all lectures is the sum of the times\nprint(sum(times))\n", "# Accepted\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Sort the times in descending order\ntimes.sort(reverse=True)\n\n# Greedy algorithm\n# The one with the shortest time should go first\n# The second shortest time should go second, etc.\n# and the longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n\n# The time it takes to finish all lectures is the sum of the times\nprint(sum(times))\n"]
2022-04-13 04:17:55.882515 size on output set 8
2022-04-13 04:17:55.882526 num operations 2
2022-04-13 04:17:55.882531 size on input set 1
2022-04-13 04:18:32.850985 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\nprint(sum(teams[0::2]) + sum(teams[1::2])) \n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n"
    }
  ],
  "created": 1649823475,
  "object": "edit"
}
2022-04-13 04:18:32.851362 fix spelling mistakes 3 ['\n\nN = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\nprint(sum(teams[0::2]) + sum(teams[1::2])) \n', '\n\nN = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n', '\nN = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n']
2022-04-13 04:18:32.851404 size on output set 3
2022-04-13 04:18:32.851409 size on input set 3
2022-04-13 04:18:35.434866 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\nprint(sum(teams[0::2]) + sum(teams[1::2])) \n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n"
    }
  ],
  "created": 1649823512,
  "object": "edit"
}
2022-04-13 04:18:35.435031 fix syntax errors 3 ['\nN = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\nprint(sum(teams[0::2]) + sum(teams[1::2])) \n', '\nN = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n', '\nN = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n']
2022-04-13 04:18:37.498587 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n"
    }
  ],
  "created": 1649823515,
  "object": "edit"
}
2022-04-13 04:18:37.498900 fix syntax errors 3 ['\n\nN = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n', '\n\nN = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n', '\n\nN = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n']
2022-04-13 04:18:43.140881 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Tue Nov 26 21:15:16 2019\n\n@author: hanpeng\n\"\"\"\n\nteams.sort()\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\nprint(sum(teams[0::2]) - sum(teams[1::2]))\n"
    },
    {
      "index": 2,
      "text": "N = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\nprint(sum(teams[::2]) + sum(teams[1::2]))\n"
    }
  ],
  "created": 1649823517,
  "object": "edit"
}
2022-04-13 04:18:43.141054 fix syntax errors 3 ['#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n"""\nCreated on Tue Nov 26 21:15:16 2019\n\n@author: hanpeng\n"""\n\nteams.sort()\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n', '\nN = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\nprint(sum(teams[0::2]) - sum(teams[1::2]))\n', 'N = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\nprint(sum(teams[::2]) + sum(teams[1::2]))\n']
2022-04-13 04:18:43.141078 size on output set 6
2022-04-13 04:18:43.141088 num operations 2
2022-04-13 04:18:43.141093 size on input set 1
2022-04-13 04:18:44.613300 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n#\n\ndef main():\n    n = int(input())\n    times = [int(x) for x in input().split()]\n\n    times.sort()\n\n    total = 0\n    for i in range(n):\n        total += (n - i) * times[i]\n\n    print(total)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    times = [int(x) for x in input().split()]\n\n    times.sort()\n\n    total = 0\n    for i in range(n):\n        total += (n - i) * times[i]\n\n    print(total)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n = int(input())\n    times = [int(x) for x in input().split()]\n\n    times.sort()\n\n    total = 0\n    for i in range(n):\n        total += (n - i) * times[i]\n\n    print(total)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649823523,
  "object": "edit"
}
2022-04-13 04:18:44.613519 fix spelling mistakes 3 ["\n#\n\ndef main():\n    n = int(input())\n    times = [int(x) for x in input().split()]\n\n    times.sort()\n\n    total = 0\n    for i in range(n):\n        total += (n - i) * times[i]\n\n    print(total)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    times = [int(x) for x in input().split()]\n\n    times.sort()\n\n    total = 0\n    for i in range(n):\n        total += (n - i) * times[i]\n\n    print(total)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    times = [int(x) for x in input().split()]\n\n    times.sort()\n\n    total = 0\n    for i in range(n):\n        total += (n - i) * times[i]\n\n    print(total)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 04:18:44.613546 size on output set 2
2022-04-13 04:18:44.613552 size on input set 2
2022-04-13 04:18:47.755206 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# file\n\ndef main():\n    n = int(input())\n    times = [int(x) for x in input().split()]\n\n    times.sort()\n\n    total = 0\n    for i in range(n):\n        total += (n - i) * times[i]\n\n    print(total)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n#\n\ndef main():\n    pass\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n# This is a comment\n\ndef main():\n    n = int(input())\n    times = [int(x) for x in input().split()]\n\n    times.sort()\n\n    total = 0\n    for i in range(n):\n        total += (n - i) * times[i]\n\n    print(total)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649823524,
  "object": "edit"
}
2022-04-13 04:18:47.755382 fix syntax errors 3 ["\n# file\n\ndef main():\n    n = int(input())\n    times = [int(x) for x in input().split()]\n\n    times.sort()\n\n    total = 0\n    for i in range(n):\n        total += (n - i) * times[i]\n\n    print(total)\n\n\nif __name__ == '__main__':\n    main()\n", "\n#\n\ndef main():\n    pass\n\n\nif __name__ == '__main__':\n    main()\n", "\n# This is a comment\n\ndef main():\n    n = int(input())\n    times = [int(x) for x in input().split()]\n\n    times.sort()\n\n    total = 0\n    for i in range(n):\n        total += (n - i) * times[i]\n\n    print(total)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 04:18:51.841740 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    print(\"Hello\")\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    times = [int(x) for x in input().split()]  # list comprehension\n\n    times.sort()\n\n    total = 0\n    for i in range(n):\n        total += (n - i) * times[i]\n\n    print(total)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [int(x) for x in sys.stdin.readline().split()]\n\n    times.sort()\n\n    total = 0\n    for i in range(n):\n        total += (n - i) * times[i]\n\n    sys.stdout.write(str(total) + \"\\n\")\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649823527,
  "object": "edit"
}
2022-04-13 04:18:51.841917 fix syntax errors 3 ['\ndef main():\n    print("Hello")\n\n\nif __name__ == \'__main__\':\n    main()\n', '\ndef main():\n    n = int(input())\n    times = [int(x) for x in input().split()]  # list comprehension\n\n    times.sort()\n\n    total = 0\n    for i in range(n):\n        total += (n - i) * times[i]\n\n    print(total)\n\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [int(x) for x in sys.stdin.readline().split()]\n\n    times.sort()\n\n    total = 0\n    for i in range(n):\n        total += (n - i) * times[i]\n\n    sys.stdout.write(str(total) + "\\n")\n\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-13 04:18:51.841943 size on output set 6
