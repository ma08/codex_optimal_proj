2022-04-09 22:54:39.063414 """
Ante and Goran are preparing $N$ teams of young ambitious students for a student programming competition of students from University of Zagreb. Both of them have one algorithm they have to explain to each team. Of course, both can’t work with the same team at the same time and none of them can work with multiple teams simultaneously.

You are given the time it takes for each team to understand and implement an algorithm. Each algorithm lecture has to be done without interruption. Determine the minimal time required for Ante and Goran to do their lectures!

For additional explanation, consult the sample test clarifications.

-----Input-----
The first line of input contains the integer $N$, the number of teams.

The following line contains $N$ space separated integers, where the $i$’th integer denotes the time required for the $i$’th team to understand and implement an algorithm.

All numbers in the input belong to the interval $[1, 3 \cdot 10^5]$.

-----Output-----
The first and only line of output must contain the required number from the task.

Clarification of the first example: Each team needs $2$ units of time to understand and implement an algorithm. One of the possible schedules is that Ante gives his lectures to team $1$, team $2$ and team $3$, respectively, and Goran to team $3$, team $1$ and team $2$, respectively.

Clarification of the second example: One of the optimal schedules is that Ante gives lectures to team $2$, team $3$ and team $1$, respectively, but with a pause lasting $1$ unit of time between team $3$ and team $1$. Goran will give lectures to team $1$, team $3$ and team $2$, respectively.

-----Examples-----
Sample Input 1:
3
2 2 2
Sample Output 1:
6

Sample Input 2:
3
4 1 2
Sample Output 2:
8
"""
2022-04-09 22:54:39.063436 --------------------------
2022-04-09 22:55:05.049547 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn = int(input())\nteams = [int(x) for x in input().split()]\n\nteams = sorted(teams)\n\ntotal_time = 0\n\nfor i in range(n):\n    total_time += teams[i] * (n - i)\n\nprint(total_time)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Sort the times in descending order\ntimes.sort(reverse=True)\n\n# Greedy algorithm\n# The one with the shortest time should go first\n# the second shortest time should go second, etc.\n# and the longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n\n# The time it takes to finish all lectures is the sum of the times\nprint(sum(times))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n# Solution\n\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [int(x) for x in sys.stdin.readline().split()]\n    times.sort()\n\n    a = 0\n    b = 0\n    for i in range(n):\n        if i % 2 == 0:\n            a += times[i]\n        else:\n            b += times[i]\n\n    print(max(a, b))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nn = int(input())\ntimes = list(map(int, input().split()))\n\ntimes.sort()\n\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nN = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    n = int(input())\n    times = [int(x) for x in input().split()]\n\n    times.sort()\n\n    total = 0\n    for i in range(n):\n        total += (n - i) * times[i]\n\n    print(total)\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\n#N = int(input())\n#times = list(map(int, input().split()))\n\nN = 3\ntimes = [4, 1, 2]\n\ntimes.sort()\n\ntotalTime = 0\n\nfor i in range(N):\n    totalTime += sum(times[i:])\n\nprint(totalTime)"
    }
  ],
  "created": 1649559279,
  "id": "cmpl-4vI0ljwMPu2mMTLnouUYAcQmIjeIv",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 22:55:05.049883 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn = int(input())\nteams = [int(x) for x in input().split()]\n\nteams = sorted(teams)\n\ntotal_time = 0\n\nfor i in range(n):\n    total_time += teams[i] * (n - i)\n\nprint(total_time)"
}
2022-04-09 22:55:05.049932 REASON stop
2022-04-09 22:55:05.088322 test/intro-questions.txt_dir/4834/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4834/solutions.json'
2022-04-09 22:55:05.088365 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Sort the times in descending order\ntimes.sort(reverse=True)\n\n# Greedy algorithm\n# The one with the shortest time should go first\n# the second shortest time should go second, etc.\n# and the longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n\n# The time it takes to finish all lectures is the sum of the times\nprint(sum(times))"
}
2022-04-09 22:55:05.088451 REASON stop
2022-04-09 22:55:05.089005 test/intro-questions.txt_dir/4834/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4834/solutions.json'
2022-04-09 22:55:05.089044 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n# Solution\n\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)"
}
2022-04-09 22:55:05.089115 REASON stop
2022-04-09 22:55:05.089578 test/intro-questions.txt_dir/4834/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4834/solutions.json'
2022-04-09 22:55:05.089608 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [int(x) for x in sys.stdin.readline().split()]\n    times.sort()\n\n    a = 0\n    b = 0\n    for i in range(n):\n        if i % 2 == 0:\n            a += times[i]\n        else:\n            b += times[i]\n\n    print(max(a, b))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 22:55:05.089675 REASON stop
2022-04-09 22:55:05.089984 test/intro-questions.txt_dir/4834/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4834/solutions.json'
2022-04-09 22:55:05.090010 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nn = int(input())\ntimes = list(map(int, input().split()))\n\ntimes.sort()\n\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)"
}
2022-04-09 22:55:05.090060 REASON stop
2022-04-09 22:55:05.090383 test/intro-questions.txt_dir/4834/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4834/solutions.json'
2022-04-09 22:55:05.090414 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nN = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))"
}
2022-04-09 22:55:05.090466 REASON stop
2022-04-09 22:55:05.090769 test/intro-questions.txt_dir/4834/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4834/solutions.json'
2022-04-09 22:55:05.090795 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    n = int(input())\n    times = [int(x) for x in input().split()]\n\n    times.sort()\n\n    total = 0\n    for i in range(n):\n        total += (n - i) * times[i]\n\n    print(total)\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 22:55:05.090846 REASON stop
2022-04-09 22:55:05.091119 test/intro-questions.txt_dir/4834/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4834/solutions.json'
2022-04-09 22:55:05.091139 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\n#N = int(input())\n#times = list(map(int, input().split()))\n\nN = 3\ntimes = [4, 1, 2]\n\ntimes.sort()\n\ntotalTime = 0\n\nfor i in range(N):\n    totalTime += sum(times[i:])\n\nprint(totalTime)"
}
2022-04-09 22:55:05.091189 REASON stop
2022-04-09 22:55:05.091423 test/intro-questions.txt_dir/4834/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4834/solutions.json'
