2022-04-12 22:46:40.216869 num operations 2
2022-04-12 22:46:40.216878 size on input set 1
2022-04-12 22:46:44.673145 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# -----constants-----\nYES = 'YES'\nNO = 'NO'\n\n# -----functions-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][1] and grid[0][1] == grid[1][0] and grid[0][2] == grid[1][2]:\n        return True\n    else:\n        return False\n\n# -----input and output-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(YES)\nelse:\n    print(NO)\n"
    },
    {
      "index": 1,
      "text": "\n\n# -----Constants and Variables-----\nyes = 'YES'\nno = 'NO'\n\n# -----Functions-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][1] and grid[0][1] == grid[1][0] and grid[0][2] == grid[1][2]:\n        return True\n    else:\n        return False\n\n# -----Input and Output-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(yes)\nelse:\n    print(NO)\n"
    },
    {
      "index": 2,
      "text": "\n\n# -----Constants-----\nYES = 'YES'\nNO = 'NO'\n\n# -----Functions-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][1] and grid[0][1] == grid[1][0] and grid[0][2] == grid[1][2] and grid[0][3] == grid[1][3] and grid[0][4] == grid[1][4]:\n        return True\n    else:\n        return False\n\n# -----Input and Output-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(YES)\nelse:\n    print(NO)\n"
    }
  ],
  "created": 1649803600,
  "object": "edit"
}
2022-04-12 22:46:44.673376 fix spelling mistakes 3 ["\n\n# -----constants-----\nYES = 'YES'\nNO = 'NO'\n\n# -----functions-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][1] and grid[0][1] == grid[1][0] and grid[0][2] == grid[1][2]:\n        return True\n    else:\n        return False\n\n# -----input and output-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(YES)\nelse:\n    print(NO)\n", "\n\n# -----Constants and Variables-----\nyes = 'YES'\nno = 'NO'\n\n# -----Functions-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][1] and grid[0][1] == grid[1][0] and grid[0][2] == grid[1][2]:\n        return True\n    else:\n        return False\n\n# -----Input and Output-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(yes)\nelse:\n    print(NO)\n", "\n\n# -----Constants-----\nYES = 'YES'\nNO = 'NO'\n\n# -----Functions-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][1] and grid[0][1] == grid[1][0] and grid[0][2] == grid[1][2] and grid[0][3] == grid[1][3] and grid[0][4] == grid[1][4]:\n        return True\n    else:\n        return False\n\n# -----Input and Output-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(YES)\nelse:\n    print(NO)\n"]
2022-04-12 22:46:44.673406 size on output set 3
2022-04-12 22:46:44.673413 size on input set 3
2022-04-12 22:46:47.625787 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# -----CONSTANTS-----\nYES = 'YES'\nNO = 'NO'\n\n# -----FUNCTIONS-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][1] and grid[0][1] == grid[1][0] and grid[0][2] == grid[1][2]:\n        return True\n    else:\n        return False\n\n# -----INPUT AND OUTPUT-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(YES)\nelse:\n    print(NO)\n"
    },
    {
      "index": 1,
      "text": "\n\n# -----constants-----\nYES = 'YES'\nNO = 'NO'\n\n# -----functions-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][0] and grid[0][1] == grid[1][1] and grid[0][2] == grid[1][2]:\n        return True\n    else:\n        return False\n\n# -----input and output-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(YES)\nelse:\n    print(NO)\n"
    },
    {
      "index": 2,
      "text": "\n\n# -----constants-----\nYES = 'YES'\nNO = 'NO'\n\n\n# -----functions-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][1] and grid[0][1] == grid[1][0] and grid[0][2] == grid[1][2]:\n        return True\n    else:\n        return False\n\n# -----input and output-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(YES)\nelse:\n    print(NO)\n"
    }
  ],
  "created": 1649803604,
  "object": "edit"
}
2022-04-12 22:46:47.625973 fix syntax errors 3 ["\n\n# -----CONSTANTS-----\nYES = 'YES'\nNO = 'NO'\n\n# -----FUNCTIONS-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][1] and grid[0][1] == grid[1][0] and grid[0][2] == grid[1][2]:\n        return True\n    else:\n        return False\n\n# -----INPUT AND OUTPUT-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(YES)\nelse:\n    print(NO)\n", "\n\n# -----constants-----\nYES = 'YES'\nNO = 'NO'\n\n# -----functions-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][0] and grid[0][1] == grid[1][1] and grid[0][2] == grid[1][2]:\n        return True\n    else:\n        return False\n\n# -----input and output-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(YES)\nelse:\n    print(NO)\n", "\n\n# -----constants-----\nYES = 'YES'\nNO = 'NO'\n\n\n# -----functions-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][1] and grid[0][1] == grid[1][0] and grid[0][2] == grid[1][2]:\n        return True\n    else:\n        return False\n\n# -----input and output-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(YES)\nelse:\n    print(NO)\n"]
2022-04-12 22:46:51.730947 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# -----Constants----- \nYES = 'YES'\nNO = 'NO'\n\n# -----Functions-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][1] and grid[0][1] == grid[1][0] and grid[0][2] == grid[1][2] and grid[0][3] == grid[1][3] and grid[0][4] == grid[1][4]:\n        return True\n    else:\n        return False\n\n# -----Input and Output-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(YES)\nelse:\n    print(NO)\n"
    },
    {
      "index": 1,
      "text": "\n\n# -----Constants-----\nYES = 'YES'\nNO = 'NO'\n\n# -----Functions-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][1] \\\n            and grid[0][1] == grid[1][0] \\\n            and grid[0][2] == grid[1][2] \\\n            and grid[0][3] == grid[1][3] \\\n            and grid[0][4] == grid[1][4]:\n        return True\n    else:\n        return False\n\n# -----Input and Output-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(YES)\nelse:\n    print(NO)\n"
    },
    {
      "index": 2,
      "text": "\n\n# -----Constants-----\nYES = 'YES'\nNO = 'NO'\n\n# -----Functions-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][1] and grid[0][1] == grid[1][0] and grid[0][2] == grid[1][2] and grid[0][3] == grid[1][3] and grid[0][4] == grid[1][4] and grid[0][5] == grid[1][5]:\n        return True\n    else:\n        return False\n\n# -----Input and Output-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(YES)\nelse:\n    print(NO)\n"
    }
  ],
  "created": 1649803607,
  "object": "edit"
}
2022-04-12 22:46:51.731143 fix syntax errors 3 ["\n\n# -----Constants----- \nYES = 'YES'\nNO = 'NO'\n\n# -----Functions-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][1] and grid[0][1] == grid[1][0] and grid[0][2] == grid[1][2] and grid[0][3] == grid[1][3] and grid[0][4] == grid[1][4]:\n        return True\n    else:\n        return False\n\n# -----Input and Output-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(YES)\nelse:\n    print(NO)\n", "\n\n# -----Constants-----\nYES = 'YES'\nNO = 'NO'\n\n# -----Functions-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][1] \\\n            and grid[0][1] == grid[1][0] \\\n            and grid[0][2] == grid[1][2] \\\n            and grid[0][3] == grid[1][3] \\\n            and grid[0][4] == grid[1][4]:\n        return True\n    else:\n        return False\n\n# -----Input and Output-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(YES)\nelse:\n    print(NO)\n", "\n\n# -----Constants-----\nYES = 'YES'\nNO = 'NO'\n\n# -----Functions-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][1] and grid[0][1] == grid[1][0] and grid[0][2] == grid[1][2] and grid[0][3] == grid[1][3] and grid[0][4] == grid[1][4] and grid[0][5] == grid[1][5]:\n        return True\n    else:\n        return False\n\n# -----Input and Output-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(YES)\nelse:\n    print(NO)\n"]
2022-04-12 22:46:53.422182 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# -----Constants and Variables-----\nyes = 'YES'\nno = 'NO'\n\n# -----Functions-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][1] and grid[0][1] == grid[1][0] and grid[0][2] == grid[1][2]:\n        return True\n    else:\n        return False\n\n# -----Input and Output-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(yes)\nelse:\n    print(no)\n"
    },
    {
      "index": 1,
      "text": "\n\n# -----Constants and Variables-----\nyes = 'YES'\nno = 'NO'\n\n# -----Functions-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][1] and grid[0][1] == grid[1][0] and grid[0][2] == grid[1][2]:\n        return True\n    else:\n        return False\n\n# -----Input and Output-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(yes)\nelse:\n    print(no)\n"
    },
    {
      "index": 2,
      "text": "\n\n# -----Constants and Variables-----\nyes = 'YES'\nno = 'NO'\n\n# -----Functions-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][1] and grid[0][1] == grid[1][0] and grid[0][2] == grid[1][2]:\n        return True\n    else:\n        return False\n\n# -----Input and Output-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(yes)\nelse:\n    print(no)\n"
    }
  ],
  "created": 1649803611,
  "object": "edit"
}
2022-04-12 22:46:53.422393 fix syntax errors 3 ["\n\n# -----Constants and Variables-----\nyes = 'YES'\nno = 'NO'\n\n# -----Functions-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][1] and grid[0][1] == grid[1][0] and grid[0][2] == grid[1][2]:\n        return True\n    else:\n        return False\n\n# -----Input and Output-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(yes)\nelse:\n    print(no)\n", "\n\n# -----Constants and Variables-----\nyes = 'YES'\nno = 'NO'\n\n# -----Functions-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][1] and grid[0][1] == grid[1][0] and grid[0][2] == grid[1][2]:\n        return True\n    else:\n        return False\n\n# -----Input and Output-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(yes)\nelse:\n    print(no)\n", "\n\n# -----Constants and Variables-----\nyes = 'YES'\nno = 'NO'\n\n# -----Functions-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][1] and grid[0][1] == grid[1][0] and grid[0][2] == grid[1][2]:\n        return True\n    else:\n        return False\n\n# -----Input and Output-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(yes)\nelse:\n    print(no)\n"]
2022-04-12 22:46:53.422420 size on output set 7
2022-04-12 22:46:53.422430 num operations 2
2022-04-12 22:46:53.422435 size on input set 1
2022-04-12 22:46:55.349251 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nc1 = input()\nc2 = input()\n\nif c1[::-1] == c2:\n    print(\"yes\")\nelse:\n    print(\"no\")\n"
    },
    {
      "index": 1,
      "text": "\nc1 = input()\nc2 = input()\n\nif c1[::-1] == c2:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    },
    {
      "index": 2,
      "text": "\n\nc1 = input()  # first string\nc2 = input()  # second string\n\nif c1[::-1] == c2:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    }
  ],
  "created": 1649803613,
  "object": "edit"
}
2022-04-12 22:46:55.349468 fix spelling mistakes 3 ['\n\nc1 = input()\nc2 = input()\n\nif c1[::-1] == c2:\n    print("yes")\nelse:\n    print("no")\n', '\nc1 = input()\nc2 = input()\n\nif c1[::-1] == c2:\n    print("YES")\nelse:\n    print("NO")\n', '\n\nc1 = input()  # first string\nc2 = input()  # second string\n\nif c1[::-1] == c2:\n    print("YES")\nelse:\n    print("NO")\n']
2022-04-12 22:46:55.349490 size on output set 3
2022-04-12 22:46:55.349497 size on input set 3
2022-04-12 22:46:58.045253 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nc1 = list(input())  # first string\nc2 = list(input())  # second string\n\nif c1 == c2[::-1]:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    },
    {
      "index": 1,
      "text": "\n\nc1 = input()  # first string \nc2 = input()  # second string \n\nif c1[::-1] == c2:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    },
    {
      "index": 2,
      "text": "\nc1 = input()  # first string\nc2 = input()  # second string\n\nif c1[::-1] == c2:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    }
  ],
  "created": 1649803615,
  "object": "edit"
}
2022-04-12 22:46:58.045484 fix syntax errors 3 ['\n\nc1 = list(input())  # first string\nc2 = list(input())  # second string\n\nif c1 == c2[::-1]:\n    print("YES")\nelse:\n    print("NO")\n', '\n\nc1 = input()  # first string \nc2 = input()  # second string \n\nif c1[::-1] == c2:\n    print("YES")\nelse:\n    print("NO")\n', '\nc1 = input()  # first string\nc2 = input()  # second string\n\nif c1[::-1] == c2:\n    print("YES")\nelse:\n    print("NO")\n']
2022-04-12 22:47:00.030344 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nc1 = input().lower()\nc2 = input().lower()\n\nif c1[::-1] == c2:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    },
    {
      "index": 1,
      "text": "\nc1 = raw_input()\nc2 = raw_input()\n\nif c1[::-1] == c2:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    },
    {
      "index": 2,
      "text": "c1 = input()\nc2 = input()\nif c1[::-1] == c2:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    }
  ],
  "created": 1649803618,
  "object": "edit"
}
2022-04-12 22:47:00.030508 fix syntax errors 3 ['\nc1 = input().lower()\nc2 = input().lower()\n\nif c1[::-1] == c2:\n    print("YES")\nelse:\n    print("NO")\n', '\nc1 = raw_input()\nc2 = raw_input()\n\nif c1[::-1] == c2:\n    print("YES")\nelse:\n    print("NO")\n', 'c1 = input()\nc2 = input()\nif c1[::-1] == c2:\n    print("YES")\nelse:\n    print("NO")\n']
2022-04-12 22:47:02.547289 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ns = input()\nc1 = s[0:len(s)//2]\nc2 = s[len(s)//2:]\n\nif c1[::-1] == c2:\n    print(\"yes\")\nelse:\n    print(\"no\")\n"
    },
    {
      "index": 1,
      "text": "\n\nc1 = input(\"Enter a string: \")\nc2 = input(\"Enter another string: \")\n\nif c1[::-1] == c2:\n    print(\"yes\")\nelse:\n    print(\"no\")\n"
    },
    {
      "index": 2,
      "text": "\n\nc1 = input(\"Enter a string: \")\nc2 = input(\"Enter another string: \")\n\nif c1[::-1] == c2:\n    print(\"yes\")\nelse:\n    print(\"No\")\n"
    }
  ],
  "created": 1649803620,
  "object": "edit"
}
2022-04-12 22:47:02.547493 fix syntax errors 3 ['\ns = input()\nc1 = s[0:len(s)//2]\nc2 = s[len(s)//2:]\n\nif c1[::-1] == c2:\n    print("yes")\nelse:\n    print("no")\n', '\n\nc1 = input("Enter a string: ")\nc2 = input("Enter another string: ")\n\nif c1[::-1] == c2:\n    print("yes")\nelse:\n    print("no")\n', '\n\nc1 = input("Enter a string: ")\nc2 = input("Enter another string: ")\n\nif c1[::-1] == c2:\n    print("yes")\nelse:\n    print("No")\n']
2022-04-12 22:47:02.547529 size on output set 9
