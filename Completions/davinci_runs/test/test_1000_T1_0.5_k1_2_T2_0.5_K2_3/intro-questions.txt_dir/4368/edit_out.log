2022-04-12 19:55:25.654336 num operations 2
2022-04-12 19:55:25.654345 size on input set 1
2022-04-12 19:55:27.616068 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom math import log\n\nn, k = map(int, input().split())\nprint(int(log(n, k)) + 1) #log(n, k)\n"
    },
    {
      "index": 1,
      "text": "\nfrom math import log\n\nn, k = map(int, input().split())\nprint(int(log(n, k)) + 1)\n"
    },
    {
      "index": 2,
      "text": "\nfrom math import log\n\nn, k = map(int, input().split())\nprint(int(log(n, k)) + 1)\n"
    }
  ],
  "created": 1649793325,
  "object": "edit"
}
2022-04-12 19:55:27.616286 fix spelling mistakes 3 ['\n\nfrom math import log\n\nn, k = map(int, input().split())\nprint(int(log(n, k)) + 1) #log(n, k)\n', '\nfrom math import log\n\nn, k = map(int, input().split())\nprint(int(log(n, k)) + 1)\n', '\nfrom math import log\n\nn, k = map(int, input().split())\nprint(int(log(n, k)) + 1)\n']
2022-04-12 19:55:27.616306 size on output set 2
2022-04-12 19:55:27.616312 size on input set 2
2022-04-12 19:55:29.823578 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#\nfrom math import log\n\nn, k = map(int, input().split())\nprint(int(log(n, k)) + 1) #log(n, k)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom math import log\n\nn, k = map(int, input().split())\nprint(int(log(n, k)) + 1)\n"
    },
    {
      "index": 2,
      "text": "\nfrom math import log\n\nn, k = map(int, input().split())\nprint(int(log(n, k)) + 1)  # log(n, k)\n"
    }
  ],
  "created": 1649793327,
  "object": "edit"
}
2022-04-12 19:55:29.823744 fix syntax errors 3 ['\n#\nfrom math import log\n\nn, k = map(int, input().split())\nprint(int(log(n, k)) + 1) #log(n, k)\n', '\n\nfrom math import log\n\nn, k = map(int, input().split())\nprint(int(log(n, k)) + 1)\n', '\nfrom math import log\n\nn, k = map(int, input().split())\nprint(int(log(n, k)) + 1)  # log(n, k)\n']
2022-04-12 19:55:31.759773 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from math import log\n\nn, k = map(int, input().split())\nprint(int(log(n, k)) + 1)\n"
    },
    {
      "index": 1,
      "text": "\nfrom math import log\n\nn, k = map(int, input().split())\nprint(int(log(n)/log(k)) + 1)\n"
    },
    {
      "index": 2,
      "text": "\nfrom math import log\n\nn, k = map(int, input().split())\nprint(int(log(n, k)) + 1) \n"
    }
  ],
  "created": 1649793329,
  "object": "edit"
}
2022-04-12 19:55:31.759949 fix syntax errors 3 ['from math import log\n\nn, k = map(int, input().split())\nprint(int(log(n, k)) + 1)\n', '\nfrom math import log\n\nn, k = map(int, input().split())\nprint(int(log(n)/log(k)) + 1)\n', '\nfrom math import log\n\nn, k = map(int, input().split())\nprint(int(log(n, k)) + 1) \n']
2022-04-12 19:55:31.759968 size on output set 6
2022-04-12 19:55:31.759978 num operations 2
2022-04-12 19:55:31.759983 size on input set 1
2022-04-12 19:55:34.210099 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# get input\nn, k = map(int, input().split())\n\n# initialize\ndigits = 0\n\n# iterate until n is 0\nwhile n > 0:\n    # increment digit count\n    digits += 1\n    # divide by k\n    n //= k\n\n# print result\nprint(digits)\n"
    },
    {
      "index": 1,
      "text": "\n\n# get inputs\nn, k = map(int, input().split()) # n: number, k: base\n\n# initialize\ndigits = 0\n\n# iterate until n is 0\nwhile n > 0:\n    # increment digit count\n    digits += 1\n    # divide by k\n    n //= k\n\n# print result\nprint(digits)\n"
    },
    {
      "index": 2,
      "text": "\n\n# get input\nn, k = map(int, input().split())\n\n# initialize\ndigits = 0\n\n# iterate until n is 0\nwhile n > 0:\n    # increment digit count\n    digits += 1\n    # divide by k\n    n //= k\n\n# print result\nprint(digits)\n"
    }
  ],
  "created": 1649793331,
  "object": "edit"
}
2022-04-12 19:55:34.210294 fix spelling mistakes 3 ['\n\n# get input\nn, k = map(int, input().split())\n\n# initialize\ndigits = 0\n\n# iterate until n is 0\nwhile n > 0:\n    # increment digit count\n    digits += 1\n    # divide by k\n    n //= k\n\n# print result\nprint(digits)\n', '\n\n# get inputs\nn, k = map(int, input().split()) # n: number, k: base\n\n# initialize\ndigits = 0\n\n# iterate until n is 0\nwhile n > 0:\n    # increment digit count\n    digits += 1\n    # divide by k\n    n //= k\n\n# print result\nprint(digits)\n', '\n\n# get input\nn, k = map(int, input().split())\n\n# initialize\ndigits = 0\n\n# iterate until n is 0\nwhile n > 0:\n    # increment digit count\n    digits += 1\n    # divide by k\n    n //= k\n\n# print result\nprint(digits)\n']
2022-04-12 19:55:34.210318 size on output set 2
2022-04-12 19:55:34.210324 size on input set 2
2022-04-12 19:55:37.473812 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# get inputs\nn, k = map(int, input().split())\n\n\ndigits = 0\n\nwhile n > 0:\n    digits += 1\n    n //= k\n\nprint(digits)\n"
    },
    {
      "index": 1,
      "text": "\n# get inputs\nn, k = map(int, input().split())\n\n# initialize\ndigits = 0\n\n# iterate until n is 0\nwhile n > 0:\n    # increment digit count\n    digits += 1\n    # divide by k\n    n //= k\n\n# print result\nprint(digits)\n"
    },
    {
      "index": 2,
      "text": "\n# get inputs\nn, k = map(int, input().split())  # n: number, k: base\n\n# initialize\ndigits = 0\n\n# iterate until n is 0\nwhile n > 0:\n    # increment digit count\n    digits += 1\n    # divide by k\n    n //= k\n\n# print result\nprint(digits)\n"
    }
  ],
  "created": 1649793334,
  "object": "edit"
}
2022-04-12 19:55:37.474010 fix syntax errors 3 ['# get inputs\nn, k = map(int, input().split())\n\n\ndigits = 0\n\nwhile n > 0:\n    digits += 1\n    n //= k\n\nprint(digits)\n', '\n# get inputs\nn, k = map(int, input().split())\n\n# initialize\ndigits = 0\n\n# iterate until n is 0\nwhile n > 0:\n    # increment digit count\n    digits += 1\n    # divide by k\n    n //= k\n\n# print result\nprint(digits)\n', '\n# get inputs\nn, k = map(int, input().split())  # n: number, k: base\n\n# initialize\ndigits = 0\n\n# iterate until n is 0\nwhile n > 0:\n    # increment digit count\n    digits += 1\n    # divide by k\n    n //= k\n\n# print result\nprint(digits)\n']
2022-04-12 19:55:40.498558 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# get input\nn, k = map(int, input().split())\n\n# print result (floor of log)\nprint(math.floor(math.log(n, k)))\n"
    },
    {
      "index": 1,
      "text": "\n\n# get input\nn, k = map(int, input().split())\n\n# initialize\ndigits = 0\n\n# iterate until n is 0\nwhile n > 0:\n    # increment digit\n    digits++\n    # divide by k\n    n //= k\n\n# print result\nprint(digits)\n"
    },
    {
      "index": 2,
      "text": "\n# get input\nn, k = map(int, input().split())\n\n# initialize\ndigits = 0\n\n# iterate until n is 0\nwhile n > 0:\n    # increment digit count\n    digits += 1\n    # divide by k\n    n //= k\n\n# print result\nprint(digits)\n"
    }
  ],
  "created": 1649793337,
  "object": "edit"
}
2022-04-12 19:55:40.498723 fix syntax errors 3 ['\n# get input\nn, k = map(int, input().split())\n\n# print result (floor of log)\nprint(math.floor(math.log(n, k)))\n', '\n\n# get input\nn, k = map(int, input().split())\n\n# initialize\ndigits = 0\n\n# iterate until n is 0\nwhile n > 0:\n    # increment digit\n    digits++\n    # divide by k\n    n //= k\n\n# print result\nprint(digits)\n', '\n# get input\nn, k = map(int, input().split())\n\n# initialize\ndigits = 0\n\n# iterate until n is 0\nwhile n > 0:\n    # increment digit count\n    digits += 1\n    # divide by k\n    n //= k\n\n# print result\nprint(digits)\n']
2022-04-12 19:55:40.498745 size on output set 6
