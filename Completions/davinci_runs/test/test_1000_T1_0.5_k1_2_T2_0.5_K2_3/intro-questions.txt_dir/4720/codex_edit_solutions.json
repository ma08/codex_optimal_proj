["\n# Solved by myself\n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n", "# https://atcoder.jp/contests/abc066/tasks/abc066_a\n\n# \u89e3\u7b54\n# N: \u30b0\u30eb\u30fc\u30d7\u6570\n# L_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u5de6\u7aef\n# R_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u53f3\u7aef\n\nN = int(input())\n\n# \u5ea7\u5e2d\u3092\u8868\u3059\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n# \u5ea7\u5e2d\u306e\u4eba\u6570\u3092\u8868\u3059\uff080\u306f\u7a7a\u5e2d\u30011\u306f1\u4eba\u304c\u5ea7\u3063\u3066\u3044\u308b\uff09\nseats = [0] * 100000\n\nfor i in range(N):\n    L_i, R_i = map(int, input().split())\n    for j in range(L_i - 1, R_i):  # \u5ea7\u5e2d\u756a\u53f7\u306f1\u304b\u3089\u59cb\u307e\u308b\u304c\u3001\u30ea\u30b9\u30c8\u306f0\u304b\u3089\u59cb\u307e\u308b\u306e\u3067-1\u3057\u3066\u304a\u304f\n        seats[j] = 1\n\nprint(sum(seats))\n", "# https://atcoder.jp/contests/abc085/tasks/abc085_b\n\n# N = Number of groups of audiences\n# l = Left-most seat of a group\n# r = Right-most seat of a group\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()  # A set of seats occupied by audiences\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n", "n = int(input())\n\nans = 0\nwhile n > 0:\n    ans += n % 2\n    n //= 2\n\nprint(ans)\n", "\n# Solved by myself \n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key = lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n", "\n# N = Number of groups of audiences\n# l = Left-most seat of a group\n# r = Right-most seat of a group\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()  # A set of seats occupied by audiences\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n", "\n# \u89e3\u7b54\n# N: \u30b0\u30eb\u30fc\u30d7\u6570\n# L_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u5de6\u7aef\n# R_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u53f3\u7aef\n\nN = int(input())\n\n# \u5ea7\u5e2d\u3092\u8868\u3059\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n# \u5ea7\u5e2d\u306e\u4eba\u6570\u3092\u8868\u3059\uff080\u306f\u7a7a\u5e2d\u30011\u306f1\u4eba\u304c\u5ea7\u3063\u3066\u3044\u308b\uff09\nseats = [0] * 100000\n\nfor i in range(N):\n    L_i, R_i = map(int, input().split())\n    for j in range(L_i - 1, R_i):  # \u5ea7\u5e2d\u756a\u53f7\u306f1\u304b\u3089\u59cb\u307e\u308b\u304c\u3001\u30ea\u30b9\u30c8\u306f0\u304b\u3089\u59cb\u307e\u308b\u306e\u3067-1\u3057\u3066\u304a\u304f\n        seats[j] = 1\n\nprint(sum(seats))\n", "\n\n# N = Number of groups of audiences\n# l = Leftmost seat\n# r = Rightmost seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)] # list comprehension\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n", "\n# Solved by myself (1)\n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n", "\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())  # l: left point, r: right point\n    for j in range(l, r+1):\n        S[j] = 1\nprint(sum(S))\n", "N = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1\n\nprint(sum(seats))\n", "N = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s)\n", "\n# \u89e3\u7b54\n# N: \u30b0\u30eb\u30fc\u30d7\u6570\n# l_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u5de6\u7aef(1-indexed)\n# r_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u53f3\u7aef(1-indexed)\n\nN = int(input())\n\n# \u5ea7\u5e2d\u3092\u8868\u3059\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n# \u5ea7\u5e2d\u306e\u4eba\u6570\u3092\u8868\u3059\uff080\u306f\u7a7a\u5e2d\u30011\u306f1\u4eba\u304c\u5ea7\u3063\u3066\u3044\u308b\uff09\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # \u5ea7\u5e2d\u756a\u53f7\u306f1\u304b\u3089\u59cb\u307e\u308b\u304c\u3001\u30ea\u30b9\u30c8\u306f0\u304b\u3089\u59cb\u307e\u308b\u306e\u3067-1\u3059\u308b\n        seats[j] = 1\n\nprint(sum(seats))\n", "# -*- coding: utf-8 -*-\n\nN = int(input())  # \u5165\u529b\n\ns = 0  # \u521d\u671f\u5316\nfor i in range(N):\n    l, r = map(int, input().split())  # \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u3067\u5165\u529b\u3092\u5206\u3051\u308b\n    s += r - l + 1\n\nprint(s)  # \u7d50\u679c\u51fa\u529b\n", "\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\nA.sort(reverse=True)\nif N >= M:\n    print(0)\nelse:\n    print(sum(A[N:]))\n", "\n\n# \u89e3\u7b54\n# N: \u30b0\u30eb\u30fc\u30d7\u6570\n# l_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u5de6\u7aef\uff08\u5ea7\u5e2d\u756a\u53f7\uff09\n# r_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u53f3\u7aef\uff08\u5ea7\u5e2d\u756a\u53f7\uff09\n\nN = int(input())\n\n# \u5ea7\u5e2d\u3092\u8868\u3059\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n# \u5ea7\u5e2d\u306e\u4eba\u6570\u3092\u8868\u3059\uff080\u306f\u7a7a\u5e2d\u30011\u306f1\u4eba\u304c\u5ea7\u3063\u3066\u3044\u308b\uff09\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # \u5ea7\u5e2d\u756a\u53f7\u306f1\u304b\u3089\u59cb\u307e\u308b\u304c\u3001\u30ea\u30b9\u30c8\u306f0\u304b\u3089\u59cb\u307e\u308b\u306e\u3067-1\u3057\u3066\u304a\u304f\n        seats[j] = 1\n\nprint(sum(seats))\n", "\n\n# \u89e3\u7b54\n# N: \u30b0\u30eb\u30fc\u30d7\u6570\n# l_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u5de6\u7aef\uff08\u5ea7\u5e2d\u756a\u53f7\uff09\n# r_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u53f3\u7aef\uff08\u5ea7\u5e2d\u756a\u53f7\nN = int(input())\n\n# \u5ea7\u5e2d\u3092\u8868\u3059\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n# \u5ea7\u5e2d\u306e\u4eba\u6570\u3092\u8868\u3059\uff080\u306f\u7a7a\u5e2d\u30011\u306f1\u4eba\u304c\u5ea7\u3063\u3066\u3044\u308b\uff09\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # \u5ea7\u5e2d\u756a\u53f7\u306f1\u304b\u3089\u59cb\u307e\u308b\u304c\u3001\u30ea\u30b9\u30c8\u306f0\u304b\u3089\u59cb\u307e\u308b\u306e\u3067-1\u3057\u3066\u304a\u304f\n        seats[j] = 1\n\nprint(sum(seats))\n", "# coding: utf-8\n\nN = int(input())\ncount = 0\nseats = [0 for i in range(100)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l-1, r):\n        seats[j] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n", "\nN = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l-1, r):\n        seats[j] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n", "# N = Number of groups of audiences\n# l = Leftmost seat\n# r = Rightmost seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n\n# N = Number of groups of audiences\n# l = Leftmost seat\n# r = Rightmost seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Mon Oct  8 14:59:23 2018\n\n@author: j\n\"\"\"\n\nN = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n", "# -*- coding: utf-8 -*-\n# A - \u30b9\u30da\u30fc\u30b9\u9ad8\u6a4b\u541b\n# https://atcoder.jp/contests/abc037/tasks/abc037_a\n\nn = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        S[j] = 1\nprint(sum(S))\n", "# coding: utf-8\n\nN = int(input())\ncount = 0\nseats = [0 for i in range(100001)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n", "\n#\n# N = int(input())\n# S = [0] * 100001\n# for i in range(N):\n#     l, r = map(int, input().split())\n#     for j in range(l, r + 1):\n#         S[j] = 1\n# print(sum(S))\n", "\n# n = int(input())\n# seats = [0] * 100000  # \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043c\u0430\u0441\u0441\u0438\u0432 \u043c\u0435\u0441\u0442 \u0438\u0437 100000 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432\n# for i in range(n):\n#     l, r = map(int, input().split())\n#     for j in range(l, r + 1):\n#         seats[j - 1] = 1\n# print(sum(seats))\n\n# n = int(input())\n# a = [int(input()) for i in range(n)]\n# print(a)\n#\n# a = []\n# for i in range(n):\n#     a.append(int(input()))\n# print(a)\n#\n# a = list(map(int, input().split()))\n# print(a)\n\n# n = int(input())\n# a = [0] * n\n# for i in range(n):\n#     a[i] = int(input())\n# print(a)\n\n# a = list(map(int, input().split()))\n# print(a[0] + a[1])\n\n# a = list(map(int, input().split()))\n# print(a)\n\n# a = list(map(int, input().split()))\n# print(a[1] + a[2], a[0] + a[2], a[0] + a[1])\n\n# a = list(map(int, input().split()))\n# print(a[0] * a[1] + a[2])\n\n# a = list(map(int, input().split()))\n# print(a[0] * a[1] + a[2] * a[3])\n\n# a = list(map(int, input().split()))\n# print(a[0] * a[1] - a[2])\n\n# a = list(map(int, input().split()))\n# print(a[0] * a[1] - a[2] * a[3])\n\n# a = list(map(int, input().split()))\n# print(a[0] * a[1] * a[2])\n\n# a = list(map(int, input().split()))\n# print(a[0] * a[1] * a[2], a[0] + a[1] + a[2])\n\n# a = list(map(int, input().split()))\n# print(a[0] + a[1] + a[2], a[0] * a[1] * a[2])\n\n# a = list(map(int, input().split()))\n# print((a[0] + a[1]) / 2, (a[1] + a[2]) / 2, (a[2] + a[0]) / 2)\n\n# a = list(map(int, input().split()))\n# print((a[0] + a[1] + a[2]) / 3)\n\n# a = list(map(int, input().split()))\n# print((a[0] + a[1] + a[2]) / 3, (a[0] * a[1] * a[2]) ** (1 / 3))\n\n# a = list(map(int, input().split()))\n# print((a[0] + a[1] + a[2]) / 3, (a[0] * a[1] * a[2]) ** (1 / 3))\n\n# a = list(map(int, input().split()))\n# print(max(a[0], a[1], a[2]))\n\n# a = list(map(int, input().split()))\n# print(max(a[0] + a[1], a[1] + a[2], a[2] + a[0]))\n\na = list(map(int, input().split()))\nprint(max(a[0] * a[1], a[1] * a[2], a[2] * a[0]))\n", "\n\n# N = Number of groups of audiences, l = Leftmost seat, r = Rightmost seat\nN, l, r = map(int, input().split())\naudience = [list(map(int, input().split())) for _ in range(N)]  # N groups of audience\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n", "\n\n# Solved by myself\n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n", "\n\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())  # l: left point, r: right point\n    for j in range(l, r+1):\n        S[j] = 1\nprint(sum(S))\n", "# b\n\nN, K = map(int, input().split())\na = list(map(int, input().split()))\n\nfor i in range(K, N):\n    if a[i-K] < a[i]:\n        print('Yes')\n    else:\n        print('No')\n", "\nN = int(input())\nS = [0] * (100001)\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        S[j] = 1\nprint(sum(S))\n", "N = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r + 1):\n        seats[i] += 1\n\nprint(sum(seats))\n", "\n\n# N = Number of groups of audiences, l = Left-most seat of a group, r = Right-most seat of a group\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n", "\n#\n# Solved by myself \n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n", "\nn = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n", "n = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n", "N = int(input())\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s)\n", "\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n", "\nN = int(input())\nseats = [0] * 1001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r + 1):\n        seats[i] += 1\n\nprint(sum(seats))\n", "\n", "# Solved by myself\n\n# \uc774\ub7f0 \ubb38\uc81c\uac00 \uc788\uc5c8\ub124.\n# \uc774\uac74 \ub0b4\uac00 \uc9e0 \ucf54\ub4dc.\n# \uc785\ub825\ubc1b\uc740 \ub9ac\uc2a4\ud2b8\ub97c \uae38\uc774\uac00 \uc9e7\uc740 \uc21c\uc11c\ub300\ub85c \uc815\ub82c\ud558\uace0,\n# \uc774\uc804 \uc88c\uc11d\uc758 \ub05d\uacfc \ud604\uc7ac \uc88c\uc11d\uc758 \uc2dc\uc791\uc744 \ube44\uad50\ud558\uba74\uc11c\n# \uc911\ubcf5\ub418\ub294 \ubd80\ubd84\uc774 \uc788\ub2e4\uba74, \uadf8 \ubd80\ubd84\uc744 \uc81c\uc678\ud55c \uce78 \uc218\ub97c \ub354\ud558\uba74 \ub41c\ub2e4.\n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n", "# https://atcoder.jp/contests/abc176/tasks/abc176_a\n\nn, x, t = map(int, input().split())\n\nprint((n + x - 1) // x * t)\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# vim: set expandtab tabstop=4 shiftwidth=4 :\n\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        S[j] = 1\nprint(sum(S))\n", "\n\nN = int(input())\ncount = 0\nseats = [0] * 100000\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n", "\n# N = Number of groups of audiences\n# l = Left-most seat of a group\n# r = Right-most seat of a group\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()  # A set of seats occupied by audiences\nfor l, r in audience:\n    for i in range(l, r + 1):\n        s.add(i)\n\nprint(len(s))\n", "# https://atcoder.jp/contests/abc081/tasks/abc081_a\n\nprint(input().count(\"1\"))\n", "#!/usr/bin/env python3\n\n# N = Number of groups of audiences\n# l = Left-most seat of a group\n# r = Right-most seat of a group\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n", "N, M = map(int, input().split())\nA = list(map(int, input().split()))\nA.sort(reverse=True)\nif N >= M:\n    print(0)\nelse:\n    print(sum(A[N:]))\n", "# coding: utf-8\n\nN = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())  # \u5de6\u7aef\u3068\u53f3\u7aef\n    for j in range(l, r + 1):\n        seats[j-1] += 1  # \u5ea7\u5e2d\u306b\u4eba\u304c\u3044\u308b\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n"]