["N = int(input())\nans = 0\nfor _ in range(N):\n  a, b = map(int, input().split())\n  ans += b - a + 1\nprint(ans)", "N = int(input())\nans = 0\nfor _ in range(N):\n    l, r = map(int, input().split())\n    ans += r-l+1\n\nprint(ans)", "with open(0) as f:\n    N, *lr = map(int, f.read().split())\nprint(sum(lr[1::2])-sum(lr[::2])+N)", "a=int(input())\nb=[input().split() for i in range(a)]\nc=0\nfor i in range(a):\n  c=c+(int(b[i][1])-int(b[i][0]))\nprint(c+a)", "N = int(input())\nseat = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    seat += r - l + 1\nprint(seat)", "N = int(input())\nres = 0\n\nfor i in range(N):\n    l, r = map(int,input().split())\n    res += r - l + 1\n    \nprint(res)", "n = int(input())\nseat = [0] * (10 ** 5 + 1)\nfor i in range(n):\n    l, r = list(map(int, input().split()))\n    seat[l - 1] += 1\n    seat[r] -= 1\n\nfor i in range(1, 10 ** 5):\n    seat[i] += seat[i - 1]\n\nres = 0\nfor i in range(10 ** 5):\n    if seat[i] == 1:\n        res += 1\nprint(res)\n", "print(sum([r-l+1 for l,r in [list(map(int,input().split())) for _ in range(int(input()))]]))", "N = int(input())\nppl = 0\nfor i in range(N):\n  tmp = input().split(\" \")\n  ppl += int(tmp[1]) - int(tmp[0]) + 1\n\nprint(ppl)", "n = int(input())\nans  = 0\nfor i in range(n):\n    a,b = map(int,input().split())\n    ans += b-a+1\nprint(ans)", "n=int(input())\nans = 0\nfor i in range(n):\n    a,b=(int(x) for x in input().split())\n    c = b-a+1\n    ans += c\n\nprint(ans)", "n = int(input())\nans = 0\nfor i in range(n):\n    l, r = map(int, input().split())\n    ans += r-l+1\n\nprint(ans)", "N = int(input())\n\ncnt = 0\n\nfor _ in range(N):\n  l, r = map(int,input().split())\n  cnt += r - l + 1\n  \nprint(cnt)", "n = int(input())\nsum = 0\nfor _ in range(n):\n    a, b = map(int, input().split())\n    sum += b-a+1\nprint(sum)", "N=int(input())\nans=0\nfor i in range(N):\n  l,r=map(int,input().split())\n  ans += r-l+1\nprint(ans)", "n = int(input())\nans = 0\nfor _ in range(n):\n    l,r = list(map(int, input().split()))\n    ans += r - l + 1\nprint(ans)", "def main():\n    n = int(input())\n    ans = 0\n    for _ in range(n):\n        a, b = list(map(int, input().split()))\n        ans += b - a + 1\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\nli = [list(map(int,input().split())) for i in range(n)]\ncnt = 0\nfor i in li:\n    cnt += i[1] - i[0] +1\nprint(cnt)", "N, *_LR = map(int, open(0).read().split())\nLR = list(zip(*[map(int, iter(_LR))]*2))\n\nans = 0\n\nfor l,r in LR:\n    ans += r - l + 1\n    \nprint(ans)", "n=int(input())\nkei=0\nfor i in range(n):\n    l,r=map(int,input().split())\n    kei += r-l+1\nprint(kei)", "ans=0\nN=int(input())\nfor i in range(N):\n  a,b=map(int,input().split())\n  ans+=b-a+1\nprint(ans)", "N = int(input())\nans = 0\nfor i in range(N):\n    l,r = map(int,input().split())\n    ans += r - l + 1\nprint(str(ans))", "a=int(input())\nans=0\nfor i in range(a):\n   x,y=map(int,input().split())\n   ans+=y-x+1\nprint(ans)", "N=int(input())\npeople=0\nfor i in range(N):\n    l,r=list(map(int,input().split()))\n    people+=r-l+1\nprint(people)\n", "n = int(input())\nres = 0\nfor i in range(n):\n    r, l = list(map(int, input().split()))\n    res += l - r + 1\nprint(res)\n", "n = int(input())\nans = 0\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    ans += b - a + 1\n\nprint(ans)\n", "n = int(input())\nans = 0\nfor i in range(n):\n  l, r = map(int, input().split())\n  ans += (r - l + 1)\nprint(ans)", "n = int(input())\nlr = [list(map(int, input().split())) for i in range(n)]\nans = 0\nfor i in range(n):\n    ans += (lr[i][1]-lr[i][0]+1)\nprint(ans)", "N = int(input())\np = 0\nfor i in range(N):\n  l, r = map(int,input().split())\n  p += r-l+1\nprint(p)", "n=int(input())\nans=0\nfor i in range(n):\n  l,r=list(map(int,input().split()))\n  ans+=r-l+1\n\nprint(ans)\n", "# -*- coding: utf-8 -*-\n\nn = int(input())\na = [0]*n\nb = [0]*n\nans = 0\n\nfor i in range(n):\n    a[i],b[i] = list(map(int, input().split()))\n\nfor i in range(n):\n    ans += b[i] - a[i] + 1\n\nprint(ans)\n\n", "n=int(input())\n\ncnt=0\n\nfor i in range(n):\n    l,r = map(int, input().split())\n    cnt += r-l+1\n\nprint(cnt)", "n = int(input())\nl = [tuple(map(int, input().split())) for i in range(n)]\n\ncnt = 0\nfor i in l:\n    cnt += (i[1] - i[0] + 1)\nprint(cnt)\n", "n=int(input())\nans=0\nfor i in range(n):\n    l,r=list(map(int,input().split()))\n    ans+=r-l+1\nprint(ans)\n", "N = int(input())\nlr = [list(map(int,input().split())) for i in range(N)]\nans = 0\nfor i in lr:\n  ans += i[1] -i[0] + 1\nprint(ans)", "N = int(input())\nans = 0\n\nfor _ in range(N):\n  l, r = map(int, input().split())\n  ans += r - l + 1\n\nprint(ans)", "n=int(input())\nhito=0\nfor i in range(n):\n    l,r=map(int, input().split())\n    hito+=r-l+1\nprint(hito)", "#!/usr/bin/env python3\n\ndef main():\n    n = int(input())\n    ans = 0\n    for i in range(n):\n        l, r = list(map(int, input().split()))\n        ans += r - l + 1\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N=int(input())\nl=[0]*N\nr=[0]*N\nsum=0\nfor i in range(N) :\n  l[i],r[i]=map(int,input().split())\n  sum+=r[i]-l[i]+1\nprint(sum)", "# coding = SJIS\n\nn = int(input())\nmen = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    men.append([l, r])\nans = 0\n\nfor i in range(n):\n    ans += men[i][1] - men[i][0] + 1\n\nprint(ans)", "n = int(input())\nans = 0\nfor i in range(n):\n    l,r = map(int,input().split())\n    ans += (r-l+1)\nprint(ans)", "N = int(input())\nsum = 0\nfor i in range(N):\n  l, r = map(int, input().split())\n  sum += (r-l) + 1\n  \nprint(sum)", "# \u5165\u529b\nN=int(input())\n\nsm=0\n\nfor i in range(N):\n  l,r=map(int,input().split())\n  sm+=r-l+1\n\n# \u51fa\u529b\nprint(sm)", "n = int(input())\np = 0\nfor i in range(n):\n  l, r = map(int, input().split())\n  p += r-l+1\n \nprint(p)", "#https://atcoder.jp/contests/abc073/tasks/abc073_b\nN = int(input())\nans = 0\nfor i in range(N):\n    st,sp = map(int,input().split())\n    ans += abs(sp-st+1)\nprint(ans)", "N = int(input())\ns = 0\nfor _ in range(N):\n    a, b = map(int, input().split())\n    s += b - a + 1\nprint(s)", "N = int(input())\nans = 0\nfor _ in range(N):\n  l,r = map(int,input().split())\n  ans += r - l + 1\n  \nprint(ans)", "import sys\nimport math\nimport itertools\nimport collections\nimport heapq\nimport re\nimport numpy as np\nfrom functools import reduce\n\nrr = lambda: sys.stdin.readline().rstrip()\nrs = lambda: sys.stdin.readline().split()\nri = lambda: int(sys.stdin.readline())\nrm = lambda: list(map(int, sys.stdin.readline().split()))\nrl = lambda: list(map(int, sys.stdin.readline().split()))\ninf = float('inf')\nmod = 10**9 + 7\n\nn = ri()\nli = np.zeros(200000)\nfor _ in range(n):\n  l, r = rm()\n  li[l:r+1] = 1\nprint((int(sum(li))))\n\n\n\n\n\n\n\n", "n = int(input())\ntotal = 0\nfor i in range(n):\n    l, r = map(int,input().split())\n    total += r - l + 1\nprint(total)", "N = int(input())\nans =  0\n\nfor i in range(N):\n    l,r = list(map(int, input().split()))\n    ans += r - l + 1\nprint(ans)\n", "#k = int(input())\n#s = input()\n#a, b = map(int, input().split())\n#s, t = map(str, input().split())\n#l = list(map(int, input().split()))\n#l = [list(map(int,input().split())) for i in range(n)]\n#a = [list(input()) for _ in range(n)]\n#a = [int(input()) for _ in range(n)]\n\n\nn = int(input())\n\nans = 0\n\nfor i in range(n):\n    l, r = list(map(int, input().split()))\n    ans += r - l + 1\nprint(ans)\n", "n = int(input())\nA = [tuple(map(int, input().split())) for _ in range(n)]\n\nans = 0\nfor l, r in A:\n    ans += r - l + 1\nprint(ans)\n", "# ABC073\nN = int(input())\nL_R = [list(map(int, input().split())) for _ in range(N)]\nans = 0\nfor l, r in L_R:\n    ans += r - l + 1\nprint(ans)\n", "n = int(input())\n\nnum = 0\n\nfor i in range(n):\n    l,r = map(int,input().split())\n    num += (r - l + 1)\n    \nprint(num)", "IS = lambda: int(input())\nIA = lambda: [int(x) for x in input().split()]\nIM = lambda N: [IA() for _ in range(N)]\n\nans = 0\nfor l,r in IM(IS()):\n    ans += r - l + 1\nprint(ans)", "def mapt(fn, *args):\n    return tuple(map(fn, *args))\n\n\ndef Input():\n    return mapt(int, input().split(\" \"))\n\n\ndef main():\n    n = int(input())\n    data =[Input() for _ in range(n)]\n    ans = 0\n    for start, end in data:\n        for _ in range(start, end+1):\n            ans += 1\n    print(ans)\n\n\nmain()", "n = int(input())\nans = 0\nfor i in range(n):\n  l,r = map(int,input().split())\n  ans += r+1-l\nprint(ans)", "N = int(input())\nans = 0\nfor i in range(N):\n    l, r = list(map(int, input().split()))\n    ans += r-l+1\nprint(ans)\n", "n = int(input())\ndata = [input().split() for i in range(n)]\nans = 0\nfor i in range(n):\n    ans += int(data[i][1]) - int(data[i][0]) + 1\nprint(ans)", "n=int(input())\nans=0\nfor i in range(n):\n    l,r=list(map(int,input().split()))\n    ans+=r-l+1\nprint(ans)\n", "n = int(input())\nnum = 0\nfor i in range(n):\n    l, r = map(int, input().split())\n    num += (r - l) + 1\nprint(num)", "n = int(input())\nflg = [0]*100000\nfor _ in range(n):\n    l,r = list(map(int,input().split()))\n    for i in range(l,r+1):\n        flg[i-1] = 1\nprint((flg.count(1)))\n", "N = int(input())\n\nans = 0\n\nfor i in range(N):\n   L = input().split()\n   ans += int(L[1]) - int(L[0]) + 1\n\nprint(ans)", "n = int(input())\ntmp = 0\nnum_person = []\nfor _ in range(n):\n    l, r = map(int, input().split())\n    tmp =  r-l+1\n    num_person.append(tmp)\n\nans = 0\nfor i in num_person:\n    ans += i\n\nprint(ans)", "n = int(input())\nans = 0\nfor i in range(n):\n  l, r = map(int, input().split())\n  ans += r - l + 1\nprint(ans)", "n = int(input())\nans = 0\nfor i in range(n):\n    l, r = map(int, input().split())\n    ans += r - l + 1\nprint(ans)", "n = int(input())\nseat = [0] * 10 ** 6\nfor i in range(n):\n    l, r = list(map(int, input().split()))\n    for j in range(l, r + 1):\n        seat[j - 1] = 1\n\nres = 0\nfor i in range(10 ** 6):\n    if seat[i] == 1:\n        res += 1\nprint(res)\n", "N = int(input())\nres = 0\nfor _ in range(N):\n    l, r = list(map(int, input().split()))\n    res += r - l + 1\n\nprint(res)\n", "n=int(input())\ncount=0\nfor _ in range(n):\n  l,r=map(int,input().split())\n  count+=r-l+1\nprint(count)", "N = int(input())\na = 0\nfor i in range(N):\n  line = list(map(int,input().split()))\n  a +=(line[-1]-line[0]+1)\nprint(a)", "N = int(input())\nans = 0\nfor _ in range(N):\n  l,r = map(int,input().split())\n  ans += (r-l)+1\nprint(ans)", "n = int(input())\na = 0\nfor _ in range(n):\n    l, r = map(int, input().split())\n    a += r - l + 1\nprint(a)", "N=int(input())\nans=0\nfor i in range(N):\n  l,r=map(int,input().split())\n  ans += r-l+1\nprint(ans)", "n =int(input())\n\ntotal = 0\nfor i in range(n):\n    a = list(map(int, input().split()))\n    total += a[1] - a[0] + 1\n\nprint(total)", "N=int(input())\nans=0\nfor i in range(N):\n    L,R=map(int,input().split())\n    ans+=R-L+1\nprint(ans)", "n = int(input())\nres = 0\nfor i in range(n):\n  l, r = map(int, input().split())\n  res += r - l + 1\nprint(res)", "N=int(input())\nans=0\nfor _ in range(N):\n  l, r=map(int, input().split())\n  ans+=r-l+1\nprint(ans)", "N = int (input ())\nx = 0\nfor i in range (N):\n  s,g = map (int, input ().split ())\n  le = g-s+1\n  x += le\nprint (x)", "n = int(input())\ncnt = 0\nfor i in range(n):\n  l, r = [int(x) for x in input().split()]\n  cnt+=r-l+1\nprint(cnt)", "n = int(input())\nans = 0\nfor _ in range(n):\n    l,r = map(int,input().split())\n    ans += r-l\nprint(ans+n)", "n = int(input())\nl = [0] * n\nr = [0] * n\nfor i in range(n):\n    l[i],r[i] = map(int, input().split())\nres = 0\n\nfor i in range(n):\n  res += r[i]-l[i]+1\n\nprint(res)", "N = int(input())\nans = 0\nfor _ in range(N):\n    l, r = (int(x) for x in input().split())\n    ans += r-l+1\nprint(ans)", "a=int(input())\nx = \"\"\ny = 0\nfor i in range(a):\n    x=input().split()\n    y+=abs(int(x[0])-int(x[1]))+1\nprint(y)", "N=int(input())\nprint(sum(r-l+1 for l,r in (map(int,input().split()) for _ in range(N))))", "from typing import List\n\n\ndef answer(n: int, lrs: List[List[int]]) -> int:\n    number_of_people_sitting = 0\n    for lr in lrs:\n        l, r = lr\n        number_of_people_sitting += r - l + 1\n\n    return number_of_people_sitting\n\n\ndef main():\n    n = int(input())\n    lrs = [map(int, input().split()) for _ in range(n)]\n    print(answer(n, lrs))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\nc = 0\nfor i in range(n):\n  l,r = map(int, input().split())\n  c += r-l+1\nprint(c)", "N=int(input())\nans=0\nfor _ in range(N):\n    l,r=list(map(int,input().split()))\n    ans+=r-l+1\nprint(ans)\n", "N = int(input())\n\nans = 0\n\nfor _ in range(N):\n    l,r = map(int, input().split())\n    ans += r - l + 1\n\nprint(ans)", "n = int(input())\nnum = 0\nfor i in range(n):\n    l,r = map(int, input().split())\n    num += (r-l+1)\nprint(num)", "N = int(input())\nl = [0] * N\nr = [0] * N\nfor i in range(N):\n    l[i], r[i] = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += r[i] - (l[i] - 1)\nprint(ans)\n", "n=int(input())\nlr=[list(map(int,input().split())) for i in range(n)]\nans=0\nfor i in range(n):\n  ans+=(lr[i][1]-lr[i][0]+1)\nprint(ans)", "#\n# abc073 b\n#\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"1\n24 30\"\"\"\n        output = \"\"\"7\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"2\n6 8\n3 3\"\"\"\n        output = \"\"\"4\"\"\"\n        self.assertIO(input, output)\n\n\ndef resolve():\n    N = int(input())\n    LR = [list(map(int, input().split())) for _ in range(N)]\n\n    ans = 0\n    for lr in LR:\n        l, r = lr\n        ans += r - l + 1\n\n    print(ans)\n\n\ndef __starting_point():\n    # unittest.main()\n    resolve()\n\n__starting_point()", "n = int(input())\n# seat = [0] * 10 ** 6\nseat = [0] * 10 ** 5\nfor i in range(n):\n    l, r = list(map(int, input().split()))\n    for j in range(l, r + 1):\n        seat[j - 1] = 1\n\nres = 0\n# for i in range(10 ** 6):\nfor i in range(10 ** 5):\n    if seat[i] == 1:\n        res += 1\nprint(res)\n", "N = int(input())\ncnt = 0\nfor _ in range(N):\n    l, r = map(int, input().split())\n    cnt += r - l + 1\nprint(cnt)", "n = int(input())\nans = 0\nfor i in range(n):\n  a, b = map(int, input().split())\n  ans += (b - a + 1)\nprint(ans)", "n = int(input())\n#a, b = map(int,input().split())\n#l = list(map(int,input().split()))\n#l = [list(map(int,input().split())) for i in range(n)]\nans = 0\nfor i in range(n):\n    l, r = list(map(int, input().split()))\n    ans += r-l+1\nprint(ans)\n", "N = int(input())\nsum = 0\nfor i in range(N):\n  l, r = map(int, input().split())\n  sum += r - l + 1\nprint(sum)", "n = int(input())\nres = 0\nfor i in range(n):\n  a = [int(x) for x in input().split()]\n  res += a[1] - a[0] + 1\nprint(res)"]