["\n\ndef main():\n    n, k = map(int, input().split())  # n is number of input, k is the number of distinct characters\n    s = input()\n\n    if k > (1 << n) - 1:\n        print(-1)\n        return\n\n    sorted_s = [c for c in s]\n    sorted_s.sort()  # sort the character in order\n    sorted_s = \"\".join(sorted_s)\n    print(sorted_s)\n\n    curr = sorted_s[0]\n    prev = sorted_s[0]\n    res = 0\n    i = 1\n    while i < len(sorted_s):\n        if sorted_s[i] != prev:\n            res += len(curr)\n            curr = \"\"\n        prev = sorted_s[i]\n        curr += sorted_s[i]\n        i += 1\n    res += len(curr)\n\n    print(res)\n\nmain()\n", "# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n\n# -*- coding: utf-8 -*\n\ndef main():\n    n, k = map(int, raw_input().split())\n    s = raw_input()\n    # print n, k, s\n    if k > 2**n:\n        print -1\n    else:\n        ans = 0\n        for i in xrange(n):\n            if k & (1 << i):\n                ans += n - i\n        print ans\n        \nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split()) # n = number of characters, k = number of distinct characters\n    s = input()\n\n    if k > (1 << n) - 1: # if k is greater than the number of possibilities of n bits\n        print(-1)\n        return\n\n    s = sorted(s)\n    print(s)\n\n    curr = s[0]\n    prev = s[0]\n    res = 0\n    i = 1\n    while i < len(s):\n        if s[i] != prev:\n            res += len(curr)\n            curr = \"\"\n        prev = s[i]\n        curr += s[i]\n        i += 1\n    res += len(curr)\n\n    print(res)\n\nmain()\n", "\n\ndef get_res(s, k):\n    if k > (1 << len(s)):\n        return -1\n\n    ss = [c for c in s]\n    ss.sort()\n    ss = \"\".join(ss)\n\n    curr = ss[0]\n    prev = ss[0]\n    res = 0\n    i = 1\n    while i < len(ss):\n        if ss[i] != prev:\n            res += len(curr)\n            curr = \"\"\n        prev = ss[i]\n        curr += ss[i]\n        i += 1\n    res += len(curr)\n\n    return res\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n\n    print(get_res(s, k))\n\nmain()\n", "\n\n\nfrom __future__ import print_function\n# -*- coding: utf-8 -*-\n\ndef main():\n    n, k = map(int, raw_input().split())\n    s = raw_input()\n    # print n, k, s\n    if k > 2**n:\n        print(-1)\n    else:\n        ans = 0\n        for i in xrange(n):\n            if k & (1 << i):\n                ans += n - i\n        print(ans)\n        \nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n\n    if k > (1 << n):\n        print(-1)\n        return\n\n    ss = [c for c in s]\n    ss.sort()\n    ss = \"\".join(ss)\n    print(ss)\n\n    curr = \"\"\n    prev = \"\"\n    res = 0\n    i = 1\n    while i < len(ss):\n        if ss[i] != prev:\n            res += len(curr)\n            curr = \"\"\n        prev = s[i]\n        curr += s[i]\n        i += 1\n    res += len(curr)\n\n    print(res)\n\nmain()\n", "# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n# -*- coding: utf-8 -*\n\n# -*- coding: utf-8 -*\n\ndef main():\n    n, k = map(int, raw_input().split())\n    s = raw_input()\n    # print n, k, s\n    if k > 2**n:\n        print -1\n    else:\n        ans = 0\n        for i in xrange(n):\n            if k & (1 << i):\n                ans += n - i\n        print ans\n        \nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split()) # n = number of characters, k = number of distinct characters, s = string\n    s = input() \n\n    if k > (1 << n) - 1: # if k is greater than the number of possibilities of n bits\n        print(-1)\n        return\n\n    s = [c for c in s]\n    s.sort()\n    s = \"\".join(s)\n    print(s)\n\n    curr = s[0]\n    prev = s[0]\n    res = 0\n    i = 1\n    while i < len(s):\n        if s[i] != prev:\n            res += len(curr)\n            curr = \"\"\n        prev = s[i]\n        curr += s[i]\n        i += 1\n    res += len(curr)\n\n    print(res)\n\nmain()\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    # print n, k, s\n    if k > 2**n:\n        print(-1)\n    else:\n        ans = 0\n        for i in xrange(n):\n            if k & (1 << i):\n                ans += n - i\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n# -*- coding: utf-8 -*-\n\ndef main():\n    n, k = map(int, raw_input().split())\n    s = raw_input()\n    print n, k, s\n    if k > 2 ** n:\n        print(-1)\n    else:\n        ans = 0\n        for i in xrange(n):\n            if k & (1 << i):\n                ans += n - i\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n# -*- coding: utf-8 -*-\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    # print n, k, s\n    if k > 2**n:\n        print(-1)\n    else:\n        ans = 0\n        for i in xrange(n):\n            if k & (1 << i):\n                ans += n - i\n        print(ans)\n        \nif __name__ == '__main__':\n    main()\n", "\n# -*- coding: utf-8 -*-\n\ndef main():\n    n, k = map(int, raw_input().split())\n    s = raw_input()\n    # print n, k, s\n    if k > 2**n:\n        print(-1)\n    else:\n        ans = 0\n        for i in xrange(n):\n            if k & (1 << i):\n                ans += n - i\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())  # n is number of input, k is the number of distinct characters\n    s = input()\n\n    if k > (1 << n):\n        print(-1)\n        return\n\n    s = [c for c in s]\n    s.sort()  # sort the character in order\n    s = \"\".join(s)\n    print(s)\n\n    curr = s[0]\n    prev = s[0]\n    res = 0\n    i = 1\n    while i < len(s):\n        if s[i] != prev:\n            res += len(curr)\n            curr = \"\"\n        prev = s[i]\n        curr += s[i]\n        i += 1\n    res += len(curr)\n\n    print(res)\n\nmain()\n", "\n\ndef main():\n    pass\n\nmain()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n\n    if k > (1 << n) - 1:\n        print(-1)\n        return\n\n    ss = [c for c in s]\n    ss.sort()\n    ss = \"\".join(ss)\n    print(ss)\n\n    curr = ss[0]\n    prev = ss[0]\n    res = 0\n    i = 1\n    while i < len(ss):\n        if ss[i] != prev:\n            res += len(curr)\n            curr = \"\"\n        prev = ss[i]\n        curr += ss[i]\n        i += 1\n    res += len(curr)\n\n    print(res)\n\nmain()\n", "\n\ndef main():\n    n, k = map(int, input().split())  # n is number of input, k is the number of distinct characters\n    s = input()\n\n    if k > (1 << len(s)) - 1:\n        print(-1)\n        return\n\n    s = [c for c in s]\n    s.sort()  # sort the character in order\n    s = \"\".join(s)\n    print(s)\n\n    curr = s[0]\n    prev = s[0]\n    res = 0\n    i = 1\n    while i < len(s):\n        if s[i] != prev:\n            res += len(curr)\n            curr = \"\"\n        prev = s[i]\n        curr += s[i]\n        i += 1\n    res += len(curr)\n\n    print(res)\n\nmain()\n", "# -*- coding: utf-8 -*-\n\n\n\ndef main():\n    n, k = map(int, raw_input().split())\n    s = raw_input()\n    # print n, k, s\n    if k > 2**n:\n        print -1\n    else:\n        ans = 0\n        for i in xrange(n):\n            if k & (1 << i):\n                ans += n - i\n        print ans\n        \nif __name__ == '__main__':\n    main()\n"]