2022-04-12 17:34:35.047631 num operations 2
2022-04-12 17:34:35.047640 size on input set 1
2022-04-12 17:34:37.732155 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted\n# is the number of adjacent tiles with the different color\n# so we just need to count the number of adjacent tiles with the different color\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted\n# is the number of adjacent tiles with the same color.\n# So we just need to count the number of adjacent tiles with the same color\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted \n# is the number of adjacent tiles with the same color\n# so we just need to count the number of adjacent tiles with the same color\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1649784875,
  "object": "edit"
}
2022-04-12 17:34:37.732371 fix spelling mistakes 3 ['\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted\n# is the number of adjacent tiles with the different color\n# so we just need to count the number of adjacent tiles with the different color\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n', '\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted\n# is the number of adjacent tiles with the same color.\n# So we just need to count the number of adjacent tiles with the same color\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n', '\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted \n# is the number of adjacent tiles with the same color\n# so we just need to count the number of adjacent tiles with the same color\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n']
2022-04-12 17:34:37.732400 size on output set 3
2022-04-12 17:34:37.732407 size on input set 3
2022-04-12 17:34:39.767060 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom sys import stdin\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted\n# is the number of adjacent tiles with the different color\n# so we just need to count the number of adjacent tiles with the different color\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted\n# is the number of adjacent tiles with the different color\n# so we just need to count the number of adjacent tiles with the different color\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted\n# is the number of adjacent tiles with the different color\n# so we just need to count the number of adjacent tiles with the different color\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1649784877,
  "object": "edit"
}
2022-04-12 17:34:39.767238 fix syntax errors 3 ['\nfrom sys import stdin\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted\n# is the number of adjacent tiles with the different color\n# so we just need to count the number of adjacent tiles with the different color\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\nprint(count)\n', '\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted\n# is the number of adjacent tiles with the different color\n# so we just need to count the number of adjacent tiles with the different color\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\n\nprint(count)\n', '\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted\n# is the number of adjacent tiles with the different color\n# so we just need to count the number of adjacent tiles with the different color\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n']
2022-04-12 17:34:42.298943 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\n\ns = stdin.readline().strip() \n\n# the number of tiles to be repainted\n# is the number of adjacent tiles with the same color.\n# So we just need to count the number of adjacent tiles with the same color\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted\n# is the number of adjacent tiles with the same color.\n# So we just need to count the number of adjacent tiles with the same color.\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted\n# is the number of adjacent tiles with the same color\n# So we just need to count the number of adjacent tiles with the same color.\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1649784879,
  "object": "edit"
}
2022-04-12 17:34:42.299149 fix syntax errors 3 ['\n\nfrom sys import stdin\n\ns = stdin.readline().strip() \n\n# the number of tiles to be repainted\n# is the number of adjacent tiles with the same color.\n# So we just need to count the number of adjacent tiles with the same color\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n', '\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted\n# is the number of adjacent tiles with the same color.\n# So we just need to count the number of adjacent tiles with the same color.\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n', '\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted\n# is the number of adjacent tiles with the same color\n# So we just need to count the number of adjacent tiles with the same color.\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n']
2022-04-12 17:34:44.238743 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted \n# is the number of adjacent tiles with the same color\n# so we just need to count the number of adjacent tiles with the same color.\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted \n# is the number of adjacent tiles with the same color\n# so we just need to count the number of adjacent tiles with the same color\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted \n# is the number of adjacent tiles with the same color\n# so we just need to count the number of adjacent tiles with the same color\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1649784882,
  "object": "edit"
}
2022-04-12 17:34:44.238980 fix syntax errors 3 ['\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted \n# is the number of adjacent tiles with the same color\n# so we just need to count the number of adjacent tiles with the same color.\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n', '\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted \n# is the number of adjacent tiles with the same color\n# so we just need to count the number of adjacent tiles with the same color\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n', '\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted \n# is the number of adjacent tiles with the same color\n# so we just need to count the number of adjacent tiles with the same color\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n']
2022-04-12 17:34:44.239009 size on output set 8
2022-04-12 17:34:44.239019 num operations 2
2022-04-12 17:34:44.239024 size on input set 1
2022-04-12 17:34:48.141285 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#-----main-----\n\nS = input()\n\n# black, white counter\nb_cnt = 0\nw_cnt = 0\n\n# count black and white\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt))\n"
    },
    {
      "index": 1,
      "text": "\n\n#-----main-----\n\nS = input()\n\n# black, white count initalize\nb_cnt = 0\nw_cnt = 0\n\n# count black and white\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt))\n"
    },
    {
      "index": 2,
      "text": "\n\n#-----main-----\n\nS = input()\n\n# 0, 1 count\nzero_cnt = 0\none_cnt = 0\n\n# count 0 and 1\nfor i in S:\n    if i == '0':\n        zero_cnt += 1\n    else:\n        one_cnt += 1\n\n# output\nprint(min(zero_cnt, one_cnt))\n"
    }
  ],
  "created": 1649784884,
  "object": "edit"
}
2022-04-12 17:34:48.141483 fix spelling mistakes 3 ["\n\n#-----main-----\n\nS = input()\n\n# black, white counter\nb_cnt = 0\nw_cnt = 0\n\n# count black and white\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt))\n", "\n\n#-----main-----\n\nS = input()\n\n# black, white count initalize\nb_cnt = 0\nw_cnt = 0\n\n# count black and white\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt))\n", "\n\n#-----main-----\n\nS = input()\n\n# 0, 1 count\nzero_cnt = 0\none_cnt = 0\n\n# count 0 and 1\nfor i in S:\n    if i == '0':\n        zero_cnt += 1\n    else:\n        one_cnt += 1\n\n# output\nprint(min(zero_cnt, one_cnt))\n"]
2022-04-12 17:34:48.141505 size on output set 3
2022-04-12 17:34:48.141512 size on input set 3
2022-04-12 17:34:49.666588 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nS = input()\n\n# 0, 1 count\nzero_cnt = 0\none_cnt = 0\n\n# count 0 and 1\nfor i in S:\n    if i == '0':\n        zero_cnt += 1\n    else:\n        one_cnt += 1\n\n# output\nprint(min(zero_cnt, one_cnt))\n"
    },
    {
      "index": 1,
      "text": "\n#-----main-----\n\nS = input()\n\n# 0, 1 count\nzero_cnt = 0\none_cnt = 0\n\n# count 0 and 1\nfor i in S:\n    if i == '0':\n        zero_cnt += 1\n    else:\n        one_cnt += 1\n\n# output\nprint(min(zero_cnt, one_cnt))\n"
    },
    {
      "index": 2,
      "text": "\n#-----main-----\n\nS = input()\n\n# 0, 1 count\nzero_cnt = 0\none_cnt = 0\n\n# count 0 and 1\nfor i in S:\n    if i == '0':\n        zero_cnt += 1\n    else:\n        one_cnt += 1\n\n# output\nprint(min(zero_cnt, one_cnt))\n"
    }
  ],
  "created": 1649784888,
  "object": "edit"
}
2022-04-12 17:34:49.666752 fix syntax errors 3 ["\n\nS = input()\n\n# 0, 1 count\nzero_cnt = 0\none_cnt = 0\n\n# count 0 and 1\nfor i in S:\n    if i == '0':\n        zero_cnt += 1\n    else:\n        one_cnt += 1\n\n# output\nprint(min(zero_cnt, one_cnt))\n", "\n#-----main-----\n\nS = input()\n\n# 0, 1 count\nzero_cnt = 0\none_cnt = 0\n\n# count 0 and 1\nfor i in S:\n    if i == '0':\n        zero_cnt += 1\n    else:\n        one_cnt += 1\n\n# output\nprint(min(zero_cnt, one_cnt))\n", "\n#-----main-----\n\nS = input()\n\n# 0, 1 count\nzero_cnt = 0\none_cnt = 0\n\n# count 0 and 1\nfor i in S:\n    if i == '0':\n        zero_cnt += 1\n    else:\n        one_cnt += 1\n\n# output\nprint(min(zero_cnt, one_cnt))\n"]
2022-04-12 17:34:52.106367 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#-----main-----\n\nS = input()\n\n# black, white counter\nb_cnt = 0\nw_cnt = 0\n\n# count black and white\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt))\n"
    },
    {
      "index": 1,
      "text": "\n\n#-----main-----\n\nS = input()\n\n# black, white counter\nb_cnt = 0\nw_cnt = 0\n\n# count black and white\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt) * 2)\n"
    },
    {
      "index": 2,
      "text": "\n#-----main-----\n\nS = input()\n\n# black, white counter\nb_cnt = 0\nw_cnt = 0\n\n# count black and white\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt))\n"
    }
  ],
  "created": 1649784889,
  "object": "edit"
}
2022-04-12 17:34:52.106541 fix syntax errors 3 ["\n#-----main-----\n\nS = input()\n\n# black, white counter\nb_cnt = 0\nw_cnt = 0\n\n# count black and white\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt))\n", "\n\n#-----main-----\n\nS = input()\n\n# black, white counter\nb_cnt = 0\nw_cnt = 0\n\n# count black and white\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt) * 2)\n", "\n#-----main-----\n\nS = input()\n\n# black, white counter\nb_cnt = 0\nw_cnt = 0\n\n# count black and white\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt))\n"]
2022-04-12 17:34:54.695634 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#-----main-----\n\nS = input()\n\n# black, white count initalize\nb_cnt = 0\nw_cnt = 0\n\n# count black and white\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\n\n#-----main-----\nprint(min(b_cnt, w_cnt))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n#-----main-----\n\nS = input()\n\n# black, white count initalize\nb_cnt = 0\nw_cnt = 0\n\n# count black and white\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nsys.stdout.write(str(min(b_cnt, w_cnt)))\n"
    },
    {
      "index": 2,
      "text": "\n\n#-----main-----\n\nS = input()\n\n# black, white count initalize\nb_cnt = 0\nw_cnt = 0\n\n# count black and white\nfor i in S:\n    if i == '0':\n    elif i == '1':\n        w_cnt += 1\n        b_cnt += 1\n    else:\n        pass\n\n# output\nprint(min(b_cnt, w_cnt))\n"
    }
  ],
  "created": 1649784892,
  "object": "edit"
}
2022-04-12 17:34:54.695825 fix syntax errors 3 ["\n\n#-----main-----\n\nS = input()\n\n# black, white count initalize\nb_cnt = 0\nw_cnt = 0\n\n# count black and white\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\n\n#-----main-----\nprint(min(b_cnt, w_cnt))\n", "\nimport sys\n#-----main-----\n\nS = input()\n\n# black, white count initalize\nb_cnt = 0\nw_cnt = 0\n\n# count black and white\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nsys.stdout.write(str(min(b_cnt, w_cnt)))\n", "\n\n#-----main-----\n\nS = input()\n\n# black, white count initalize\nb_cnt = 0\nw_cnt = 0\n\n# count black and white\nfor i in S:\n    if i == '0':\n    elif i == '1':\n        w_cnt += 1\n        b_cnt += 1\n    else:\n        pass\n\n# output\nprint(min(b_cnt, w_cnt))\n"]
2022-04-12 17:34:54.695915 size on output set 7
