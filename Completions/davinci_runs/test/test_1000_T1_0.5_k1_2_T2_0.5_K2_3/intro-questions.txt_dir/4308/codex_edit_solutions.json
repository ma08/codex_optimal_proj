["\nn = int(input())\n\nprint(n * n * n)\n", "\ndef main():\n    N, K = map(int, input().split())\n\n    print(N % K)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n\n    print(A)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, K = map(int, input().split())\n\n    print(N % K) \n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, K = list(map(int, input().split()))\n\n    ans = (N % K)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\na = 1\nn = input()\n\nprint(n)\n", "\n\nn = input()\n\nprint(n, end=\"\")\n", "\n\nn = input()\n\nprint(\"Hello \" + n)\n", "\ndef main():\n    a, b = map(int, input().split())\n    print(a % b)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    N, K = map(int, input().split())\n\n    if N > K:\n        print(abs(N % K))\n    else:\n        print(0)\n\nif __name__ == '__main__':\n    main()\n", "\nn, k = map(int, input().split())\n\nprint(n % k, end=\"\")\n", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(max(a) + max(b))\n", "\nimport heapq\n\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n\n    print(N % K)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N = int(input())\n\n    print(N)\n\nif __name__ == '__main__':\n    main()\n"]