2022-04-13 04:53:48.166245 num operations 2
2022-04-13 04:53:48.166254 size on input set 1
2022-04-13 04:53:49.764669 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n#\nn = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n"
    }
  ],
  "created": 1649825628,
  "object": "edit"
}
2022-04-13 04:53:49.764879 fix spelling mistakes 3 ['\n#\nn = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n', '\nn = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n', '\nn = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n']
2022-04-13 04:53:49.764905 size on output set 2
2022-04-13 04:53:49.764911 size on input set 2
2022-04-13 04:53:52.083600 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n"
    },
    {
      "index": 2,
      "text": "n = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in str(n)])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n"
    }
  ],
  "created": 1649825629,
  "object": "edit"
}
2022-04-13 04:53:52.083793 fix syntax errors 3 ['n = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n', 'n = int(input())\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n', 'n = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in str(n)])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n']
2022-04-13 04:53:53.801733 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n"
    },
    {
      "index": 2,
      "text": "n = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n"
    }
  ],
  "created": 1649825632,
  "object": "edit"
}
2022-04-13 04:53:53.801908 fix syntax errors 3 ['n = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n', '\nn = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n', 'n = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n']
2022-04-13 04:53:53.801930 size on output set 4
2022-04-13 04:53:53.801945 num operations 2
2022-04-13 04:53:53.801950 size on input set 1
2022-04-13 04:53:57.635760 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef is_harshad(n):\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef next_harshad(n):\n    n += 1\n    while not is_harshad(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(next_harshad(n))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef isHarshard(n):\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef nextHarshard(n):\n    n += 1\n    while not isHarshard(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(nextHarshard(n))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef is_harshad(n):\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef next_harshad(n):\n    n += 1\n    while not is_harshad(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(next_harshad(n))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649825633,
  "object": "edit"
}
2022-04-13 04:53:57.635929 fix spelling mistakes 3 ['\n\nimport sys\n\ndef is_harshad(n):\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef next_harshad(n):\n    n += 1\n    while not is_harshad(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(next_harshad(n))\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef isHarshard(n):\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef nextHarshard(n):\n    n += 1\n    while not isHarshard(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(nextHarshard(n))\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef is_harshad(n):\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef next_harshad(n):\n    n += 1\n    while not is_harshad(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(next_harshad(n))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 04:53:57.635954 size on output set 2
2022-04-13 04:53:57.635960 size on input set 2
2022-04-13 04:54:02.529092 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\n\ndef is_harshad(n):\n    n = str(n)\n\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef next_harshad(n):\n    n += 1\n    while not is_harshad(n):\n        n += 1\n    return n\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(next_harshad(n))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\n    \"\"\"\n    >>> is_harshad(10)\n    True\n    >>> is_harshad(12)\n    False\n    >>> is_harshad(18)\n    True\n    >>> is_harshad(11)\n    False\n    >>> is_harshad(13)\n    False\n    \"\"\"\ndef is_harshad(n):\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\n    \"\"\"\n    >>> next_harshad(10)\n    12\n    >>> next_harshad(18)\n    20\n    >>> next_harshad(19)\n    20\n    >>> next_harshad(21)\n    24\n    >>> next_harshad(1000)\n    1002\n    \"\"\"\ndef next_harshad(n):\n    n += 1\n    while not is_harshad(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(next_harshad(n))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef is_harshad(n):\n    return n % sum([int(i) for i in str(n)]) == 0\n\ndef next_harshad(n):\n    n += 1\n    while not is_harshad(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(next_harshad(n))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649825637,
  "object": "edit"
}
2022-04-13 04:54:02.529426 fix syntax errors 3 ['\nimport sys\n\n\ndef is_harshad(n):\n    n = str(n)\n\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef next_harshad(n):\n    n += 1\n    while not is_harshad(n):\n        n += 1\n    return n\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(next_harshad(n))\n\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\n    """\n    >>> is_harshad(10)\n    True\n    >>> is_harshad(12)\n    False\n    >>> is_harshad(18)\n    True\n    >>> is_harshad(11)\n    False\n    >>> is_harshad(13)\n    False\n    """\ndef is_harshad(n):\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\n    """\n    >>> next_harshad(10)\n    12\n    >>> next_harshad(18)\n    20\n    >>> next_harshad(19)\n    20\n    >>> next_harshad(21)\n    24\n    >>> next_harshad(1000)\n    1002\n    """\ndef next_harshad(n):\n    n += 1\n    while not is_harshad(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(next_harshad(n))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef is_harshad(n):\n    return n % sum([int(i) for i in str(n)]) == 0\n\ndef next_harshad(n):\n    n += 1\n    while not is_harshad(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(next_harshad(n))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 04:54:03.983068 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef isHarshard(n):\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef nextHarshard(n):\n    n += 1\n    while not isHarshard(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(nextHarshard(n))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef isHarshard(n):\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef nextHarshard(n):\n    n += 1\n    while not isHarshard(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(nextHarshard(n))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef isHarshard(n):\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef nextHarshard(n):\n    n += 1\n    while not isHarshard(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(nextHarshard(n))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649825642,
  "object": "edit"
}
2022-04-13 04:54:03.983246 fix syntax errors 3 ['\nimport sys\n\ndef isHarshard(n):\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef nextHarshard(n):\n    n += 1\n    while not isHarshard(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(nextHarshard(n))\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef isHarshard(n):\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef nextHarshard(n):\n    n += 1\n    while not isHarshard(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(nextHarshard(n))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef isHarshard(n):\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef nextHarshard(n):\n    n += 1\n    while not isHarshard(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(nextHarshard(n))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 04:54:03.983272 size on output set 5
2022-04-13 04:54:03.983281 num operations 2
2022-04-13 04:54:03.983286 size on input set 1
2022-04-13 04:54:07.198552 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef sum_digits(num):\n    return sum(int(x) for x in str(num))\n\ndef main():\n    n = int(input())\n    while n % sum_digits(n) != 0:\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef sum_digits(n):\n    return sum(int(x) for x in str(n))\n\ndef main():\n    num = int(input())\n    while num % sum_digits(num) != 0:\n        num += 1\n    print(num)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef sum_of_digits(n):\n    return sum(int(x) for x in str(n)) \n\ndef main():\n    n = int(input())\n    while n % sum_of_digits(n) != 0:\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649825644,
  "object": "edit"
}
2022-04-13 04:54:07.198735 fix spelling mistakes 3 ["\n\ndef sum_digits(num):\n    return sum(int(x) for x in str(num))\n\ndef main():\n    n = int(input())\n    while n % sum_digits(n) != 0:\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef sum_digits(n):\n    return sum(int(x) for x in str(n))\n\ndef main():\n    num = int(input())\n    while num % sum_digits(num) != 0:\n        num += 1\n    print(num)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef sum_of_digits(n):\n    return sum(int(x) for x in str(n)) \n\ndef main():\n    n = int(input())\n    while n % sum_of_digits(n) != 0:\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 04:54:07.198759 size on output set 3
2022-04-13 04:54:07.198782 size on input set 3
2022-04-13 04:54:11.942347 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Enter your code here. Read input from STDIN. Print output to STDOUT\nfrom itertools import product\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nprint(*list(product(A, B)))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef sum_of_digits(n):\n    return sum(int(x) for x in str(n))\n\n\ndef main():\n    n = int(input())\n    while n % sum_of_digits(n) != 0:\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef sum_of_digits(n):\n    return sum(int(x) for x in str(n))\n\ndef main():\n    n = int(input())\n    while n % sum_of_digits(n) != 0:\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649825647,
  "object": "edit"
}
2022-04-13 04:54:11.942557 fix syntax errors 3 ['\n# Enter your code here. Read input from STDIN. Print output to STDOUT\nfrom itertools import product\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nprint(*list(product(A, B)))\n', "\n\ndef sum_of_digits(n):\n    return sum(int(x) for x in str(n))\n\n\ndef main():\n    n = int(input())\n    while n % sum_of_digits(n) != 0:\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef sum_of_digits(n):\n    return sum(int(x) for x in str(n))\n\ndef main():\n    n = int(input())\n    while n % sum_of_digits(n) != 0:\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 04:54:15.390578 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef sum_digits(n):\n\n    return sum(int(x) for x in str(n))\n\ndef main():\n    num = int(input())\n    while num % sum_digits(num) != 0:\n        num += 1\n    print(num)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef sum_digits(n):\n    return sum(int(x) for x in str(n) if x != '-')\n\ndef main():\n    num = int(input())\n    if num < 0:\n        while num % sum_digits(num) != 0:\n            num -= 1\n    else:\n        while num % sum_digits(num) != 0:\n            num += 1\n    print(num)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef sum_digits(n):\n    return sum(int(x) for x in str(n))\n\ndef main():\n    num = int(input())\n    while num % sum_digits(num) != 0:\n        num += 1\n    print(num)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649825651,
  "object": "edit"
}
2022-04-13 04:54:15.390782 fix syntax errors 3 ["\ndef sum_digits(n):\n\n    return sum(int(x) for x in str(n))\n\ndef main():\n    num = int(input())\n    while num % sum_digits(num) != 0:\n        num += 1\n    print(num)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef sum_digits(n):\n    return sum(int(x) for x in str(n) if x != '-')\n\ndef main():\n    num = int(input())\n    if num < 0:\n        while num % sum_digits(num) != 0:\n            num -= 1\n    else:\n        while num % sum_digits(num) != 0:\n            num += 1\n    print(num)\n\nif __name__ == '__main__':\n    main()\n", "\ndef sum_digits(n):\n    return sum(int(x) for x in str(n))\n\ndef main():\n    num = int(input())\n    while num % sum_digits(num) != 0:\n        num += 1\n    print(num)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 04:54:17.738174 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef sum_digits(num):\n    return sum(int(x) for x in str(num) if x.isdigit())\n\ndef main():\n    n = int(input())\n    while n % sum_digits(n) != 0:\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef sum_digits(num):\n\n    return sum(int(x) for x in str(num))\n\ndef main():\n    n = int(input())\n    while n % sum_digits(n) != 0:\n        n += 1\n    print(n)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef sum_digits(num):\n    return sum([int(x) for x in str(num)])\n\ndef main():\n    n = input()\n    while n % sum_digits(n) != 0:\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649825655,
  "object": "edit"
}
2022-04-13 04:54:17.738349 fix syntax errors 3 ["\n\ndef sum_digits(num):\n    return sum(int(x) for x in str(num) if x.isdigit())\n\ndef main():\n    n = int(input())\n    while n % sum_digits(n) != 0:\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n    main()\n", "\ndef sum_digits(num):\n\n    return sum(int(x) for x in str(num))\n\ndef main():\n    n = int(input())\n    while n % sum_digits(n) != 0:\n        n += 1\n    print(n)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef sum_digits(num):\n    return sum([int(x) for x in str(num)])\n\ndef main():\n    n = input()\n    while n % sum_digits(n) != 0:\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 04:54:17.738372 size on output set 9
2022-04-13 04:54:17.738383 num operations 2
2022-04-13 04:54:17.738388 size on input set 1
2022-04-13 04:54:22.373782 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())  # \u0432\u0432\u043e\u0434\u0438\u043c\u043e \u0447\u0438\u0441\u043b\u043e\n\n\ndef sum_digits(n):  # \u0441\u0443\u043c\u0430 \u0446\u0438\u0444\u0440 \u0432 \u0447\u0438\u0441\u043b\u0456\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\n\n\nwhile n % sum_digits(n) != 0:  # \u0437\u0430\u043a\u0438\u0434\u0443\u0454\u043c\u043e \u0447\u0438\u0441\u043b\u043e \u0432 \u0446\u0438\u043a\u043b \u0449\u043e\u0431 \u0437\u043d\u0430\u0439\u0442\u0438 \u043d\u0430\u0439\u043c\u0435\u043d\u0448\u0435 \u043f\u0440\u043e\u0441\u0442\u0435 \u0447\u0438\u0441\u043b\u043e\n    n += 1\nprint(n)\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\n\ndef sum_digits(n):\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\nwhile n % sum_digits(n) != 0:\n\n    n += 1\nprint(n)\n"
    },
    {
      "index": 2,
      "text": "\nprint(\"hello world\")\n"
    }
  ],
  "created": 1649825657,
  "object": "edit"
}
2022-04-13 04:54:22.373952 fix spelling mistakes 3 ['\n\nn = int(input())  # вводимо число\n\n\ndef sum_digits(n):  # сума цифр в числі\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\n\n\nwhile n % sum_digits(n) != 0:  # закидуємо число в цикл щоб знайти найменше просте число\n    n += 1\nprint(n)\n', 'n = int(input())\n\ndef sum_digits(n):\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\nwhile n % sum_digits(n) != 0:\n\n    n += 1\nprint(n)\n', '\nprint("hello world")\n']
2022-04-13 04:54:22.373983 size on output set 3
2022-04-13 04:54:22.373989 size on input set 3
2022-04-13 04:54:26.176153 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input(\"Enter a number\"))\n\ndef sum_digits(n):\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\nwhile n % sum_digits(n) != 0:\n\n    n += 1\nprint(n)\n"
    },
    {
      "index": 1,
      "text": "def sum_digits(n):\n    return sum(int(x) for x in str(n))\n\nn = int(input())\n\nwhile n % sum_digits(n) != 0:\n\n    n += 1\nprint(n)\n"
    },
    {
      "index": 2,
      "text": "def sum_digits(n):\n    \"\"\"\n    Return the sum of digits of n\n    \"\"\"\n    s = 0\n    for i in str(n):\n        s += int(i)\n    return s\n\nn = int(input(\"Enter a number: \"))\n\nwhile n % sum_digits(n) != 0:\n\n\n    n += 1\nprint(n)\n"
    }
  ],
  "created": 1649825662,
  "object": "edit"
}
2022-04-13 04:54:26.176318 fix syntax errors 3 ['n = int(input("Enter a number"))\n\ndef sum_digits(n):\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\nwhile n % sum_digits(n) != 0:\n\n    n += 1\nprint(n)\n', 'def sum_digits(n):\n    return sum(int(x) for x in str(n))\n\nn = int(input())\n\nwhile n % sum_digits(n) != 0:\n\n    n += 1\nprint(n)\n', 'def sum_digits(n):\n    """\n    Return the sum of digits of n\n    """\n    s = 0\n    for i in str(n):\n        s += int(i)\n    return s\n\nn = int(input("Enter a number: "))\n\nwhile n % sum_digits(n) != 0:\n\n\n    n += 1\nprint(n)\n']
2022-04-13 04:54:27.865921 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nprint(\"hello world!\")\n"
    },
    {
      "index": 1,
      "text": "\nprint('hello world')\n"
    },
    {
      "index": 2,
      "text": "print(\"Hello world\")\n"
    }
  ],
  "created": 1649825666,
  "object": "edit"
}
2022-04-13 04:54:27.866075 fix syntax errors 3 ['\nprint("hello world!")\n', "\nprint('hello world')\n", 'print("Hello world")\n']
2022-04-13 04:54:36.063413 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())  # \u0432\u0432\u043e\u0434\u0438\u043c\u043e \u0447\u0438\u0441\u043b\u043e\n\n\ndef sum_digits(n):  # \u0441\u0443\u043c\u0430 \u0446\u0438\u0444\u0440 \u0432 \u0447\u0438\u0441\u043b\u0456\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\n\n\nwhile n % sum_digits(n) != 0:  # \u0437\u0430\u043a\u0438\u0434\u0443\u0454\u043c\u043e \u0447\u0438\u0441\u043b\u043e \u0432 \u0446\u0438\u043a\u043b \u0449\u043e\u0431 \u0437\u043d\u0430\u0439\u0442\u0438 \u043d\u0430\u0439\u043c\u0435\u043d\u0448\u0435 \u043f\u0440\u043e\u0441\u0442\u0435 \u0447\u0438\u0441\u043b\u043e, \u044f\u043a\u0435 \u0434\u0456\u043b\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0443\u043c\u0443 \u0446\u0438\u0444\u0440\n    n += 1\nprint(n)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())  # \u0432\u0432\u043e\u0434\u0438\u043c\u043e \u0447\u0438\u0441\u043b\u043e \u0437 \u043a\u043b\u0430\u0432\u0456\u0430\u0442\u0443\u0440\u0438\n\n\n\ndef sum_digits(n):  # \u0444\u0443\u043d\u043a\u0446\u0456\u044f \u0434\u043b\u044f \u0441\u0443\u043c\u0438 \u0446\u0438\u0444\u0440 \u0432 \u0447\u0438\u0441\u043b\u0456\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\n\n\nwhile n % sum_digits(n) != 0:  # \u0437\u0430\u043a\u0438\u0434\u0443\u0454\u043c\u043e \u0447\u0438\u0441\u043b\u043e \u0432 \u0446\u0438\u043a\u043b \u0449\u043e\u0431 \u0437\u043d\u0430\u0439\u0442\u0438 \u043d\u0430\u0439\u043c\u0435\u043d\u0448\u0435 \u043f\u0440\u043e\u0441\u0442\u0435 \u0447\u0438\u0441\u043b\u043e, \u044f\u043a\u0435 \u0434\u0456\u043b\u0438\u0442\u044c\u0441\u044f \u0431\u0435\u0437 \u0437\u0430\u043b\u0438\u0448\u043a\u0443 \u043d\u0430 \u0441\u0443\u043c\u0443 \u0446\u0438\u0444\u0440 \u0446\u044c\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430\n    n += 1\nprint(n)\n"
    },
    {
      "index": 2,
      "text": "\ndef sum_digits(n):\n    s = 0\n    while n:\nn = int(input())  # \u0432\u0432\u043e\u0434\u0438\u043c\u043e \u0447\u0438\u0441\u043b\u043e\n        s += n % 10\n        n //= 10\n    return s\n\n\nwhile n % sum_digits(n) != 0:\n    n += 1\nprint(n)\n"
    }
  ],
  "created": 1649825667,
  "object": "edit"
}
2022-04-13 04:54:36.063582 fix syntax errors 3 ['\nn = int(input())  # вводимо число\n\n\ndef sum_digits(n):  # сума цифр в числі\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\n\n\nwhile n % sum_digits(n) != 0:  # закидуємо число в цикл щоб знайти найменше просте число, яке ділиться на суму цифр\n    n += 1\nprint(n)\n', '\n\nn = int(input())  # вводимо число з клавіатури\n\n\n\ndef sum_digits(n):  # функція для суми цифр в числі\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\n\n\nwhile n % sum_digits(n) != 0:  # закидуємо число в цикл щоб знайти найменше просте число, яке ділиться без залишку на суму цифр цього числа\n    n += 1\nprint(n)\n', '\ndef sum_digits(n):\n    s = 0\n    while n:\nn = int(input())  # вводимо число\n        s += n % 10\n        n //= 10\n    return s\n\n\nwhile n % sum_digits(n) != 0:\n    n += 1\nprint(n)\n']
2022-04-13 04:54:36.063681 size on output set 9
2022-04-13 04:54:36.063692 num operations 2
2022-04-13 04:54:36.063697 size on input set 1
2022-04-13 04:54:37.577701 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n# while loop\nn = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n        break\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n\n\n        break\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n\n# fix spelling mistakes\n        break\n"
    }
  ],
  "created": 1649825676,
  "object": "edit"
}
2022-04-13 04:54:37.577865 fix spelling mistakes 3 ['\n# while loop\nn = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n        break\n', '\n\nn = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n\n\n        break\n', '\n\nn = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n\n# fix spelling mistakes\n        break\n']
2022-04-13 04:54:37.577885 size on output set 3
2022-04-13 04:54:37.577892 size on input set 3
2022-04-13 04:54:39.116439 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n        break\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n\n# fix syntax errors\n        break\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n        break\n"
    }
  ],
  "created": 1649825677,
  "object": "edit"
}
2022-04-13 04:54:39.116607 fix syntax errors 3 ['\n\nn = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n        break\n', '\n\nn = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n\n# fix syntax errors\n        break\n', '\n\nn = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n        break\n']
2022-04-13 04:54:42.650140 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# while loop\nn = int(input(\"\"))\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n        break\n"
    },
    {
      "index": 1,
      "text": "\n# while loop\nn = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n        break\n\n# fix syntax errors\ndef main():\n    n = int(input())\n    if n == 0:\n        print(0)\n    else:\n        print(n + sum(range(1, n)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n# while loop to find minimum number\nn = int(input()) # input number\n\nwhile True:\n    n += 1 # increment n\n    if n % sum([int(i) for i in str(n)]) == 0: # check if n is divisible by the sum of its digits\n        print(n)\n        break\n"
    }
  ],
  "created": 1649825679,
  "object": "edit"
}
2022-04-13 04:54:42.650316 fix syntax errors 3 ['\n# while loop\nn = int(input(""))\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n        break\n', "\n# while loop\nn = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n        break\n\n# fix syntax errors\ndef main():\n    n = int(input())\n    if n == 0:\n        print(0)\n    else:\n        print(n + sum(range(1, n)))\n\nif __name__ == '__main__':\n    main()\n", '\n# while loop to find minimum number\nn = int(input()) # input number\n\nwhile True:\n    n += 1 # increment n\n    if n % sum([int(i) for i in str(n)]) == 0: # check if n is divisible by the sum of its digits\n        print(n)\n        break\n']
2022-04-13 04:54:44.435047 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n\n\n        break\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n\n\n        break\n"
    },
    {
      "index": 2,
      "text": "n = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n        break\n"
    }
  ],
  "created": 1649825682,
  "object": "edit"
}
2022-04-13 04:54:44.435222 fix syntax errors 3 ['n = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n\n\n        break\n', 'n = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n\n\n        break\n', 'n = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n        break\n']
2022-04-13 04:54:44.435242 size on output set 7
2022-04-13 04:54:44.435251 num operations 2
2022-04-13 04:54:44.435256 size on input set 1
2022-04-13 04:54:46.957208 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n\nn = int(input())\n\n\nwhile True:\n    \n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n"
    },
    {
      "index": 1,
      "text": "\n\n# Get the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n\nn = int(input())\n\n# Loop until we find a Harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n"
    },
    {
      "index": 2,
      "text": "\n\n# Gets the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n\nn = int(input())\n\n# Loop until we find a Harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n"
    }
  ],
  "created": 1649825684,
  "object": "edit"
}
2022-04-13 04:54:46.957429 fix spelling mistakes 3 ['\n\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n\nn = int(input())\n\n\nwhile True:\n    \n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n', '\n\n# Get the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n\nn = int(input())\n\n# Loop until we find a Harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n', '\n\n# Gets the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n\nn = int(input())\n\n# Loop until we find a Harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n']
2022-04-13 04:54:46.957461 size on output set 3
2022-04-13 04:54:46.957468 size on input set 3
2022-04-13 04:54:48.850515 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\nn = int(input())\n\n\nwhile True:\n    \n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n"
    },
    {
      "index": 1,
      "text": "\n\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\nn = int(input())\n\n\nwhile True:\n    \n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n"
    },
    {
      "index": 2,
      "text": "\n\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n\nn = int(input())\n\n\nwhile True:\n\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n"
    }
  ],
  "created": 1649825686,
  "object": "edit"
}
2022-04-13 04:54:48.850780 fix syntax errors 3 ['\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\nn = int(input())\n\n\nwhile True:\n    \n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n', '\n\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\nn = int(input())\n\n\nwhile True:\n    \n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n', '\n\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n\nn = int(input())\n\n\nwhile True:\n\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n']
2022-04-13 04:54:52.625185 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Gets the sum of the digits of a number\ndef sum_digits(n):\n    return sum([int(x) for x in str(n)])\n\nn = int(input())\n\n# Loop until we find a Harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n"
    },
    {
      "index": 1,
      "text": "\nprint(\"Hello World\")\n"
    },
    {
      "index": 2,
      "text": "\n\n# Gets the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10 \n    return r\n\nn = int(input())\n\n# Loop until we find a Harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n"
    }
  ],
  "created": 1649825688,
  "object": "edit"
}
2022-04-13 04:54:52.625379 fix syntax errors 3 ['\n# Gets the sum of the digits of a number\ndef sum_digits(n):\n    return sum([int(x) for x in str(n)])\n\nn = int(input())\n\n# Loop until we find a Harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n', '\nprint("Hello World")\n', '\n\n# Gets the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10 \n    return r\n\nn = int(input())\n\n# Loop until we find a Harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n']
2022-04-13 04:54:55.640767 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Get the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n\nn = int(input())\n\n# Loop until we find a Harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n"
    },
    {
      "index": 1,
      "text": "\n# Get the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n"
    },
    {
      "index": 2,
      "text": "\n# Get the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n\nn = int(input())\n\n# Loop until we find a Harshad number.\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it.\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n"
    }
  ],
  "created": 1649825692,
  "object": "edit"
}
2022-04-13 04:54:55.640931 fix syntax errors 3 ['\n# Get the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n\nn = int(input())\n\n# Loop until we find a Harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n', '\n# Get the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n', '\n# Get the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n\nn = int(input())\n\n# Loop until we find a Harshad number.\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it.\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n']
2022-04-13 04:54:55.640960 size on output set 9
2022-04-13 04:54:55.640973 num operations 2
2022-04-13 04:54:55.640977 size on input set 1
2022-04-13 04:54:57.987942 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef sum_digits(n):\n    sum = 0\n    while n > 0:\n        sum += n % 10\n        n //= 10\n    return sum\n\nn = int(input())\n\nwhile n % sum_digits(n) != 0:\n    n += 1\n\nprint(n)\n"
    },
    {
      "index": 1,
      "text": "\n\ndef sum_digits(n):\n    sum = 0\n    while n > 0:\n        sum += n % 10\n        n //= 10\n    return sum\n\nn = int(input())\n\nwhile n % sum_digits(n) != 0:\n    n += 1\n\nprint(n)\n"
    },
    {
      "index": 2,
      "text": "\n\ndef sum_digits(n):\n    sum = 0\n    while n > 0:\n        sum += n % 10\n        n //= 10\n    return sum\n\nn = int(input())\n\nwhile n % sum_digits(n) != 0:\n    n += 1\n\nprint(n)\n"
    }
  ],
  "created": 1649825695,
  "object": "edit"
}
2022-04-13 04:54:57.988282 fix spelling mistakes 3 ['\n\ndef sum_digits(n):\n    sum = 0\n    while n > 0:\n        sum += n % 10\n        n //= 10\n    return sum\n\nn = int(input())\n\nwhile n % sum_digits(n) != 0:\n    n += 1\n\nprint(n)\n', '\n\ndef sum_digits(n):\n    sum = 0\n    while n > 0:\n        sum += n % 10\n        n //= 10\n    return sum\n\nn = int(input())\n\nwhile n % sum_digits(n) != 0:\n    n += 1\n\nprint(n)\n', '\n\ndef sum_digits(n):\n    sum = 0\n    while n > 0:\n        sum += n % 10\n        n //= 10\n    return sum\n\nn = int(input())\n\nwhile n % sum_digits(n) != 0:\n    n += 1\n\nprint(n)\n']
2022-04-13 04:54:57.988315 size on output set 1
2022-04-13 04:54:57.988323 size on input set 1
2022-04-13 04:55:02.573025 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef sum_digits(n):\n    sum_ = 0\n    while n > 0:\n        sum_ += n % 10\n        n //= 10\n    return sum_\n\nn = int(input())\n\nwhile n % sum_digits(n) != 0:\n    n += 1\n\nprint(n)\n"
    },
    {
      "index": 1,
      "text": "\n\ndef sum_digits(n):\n    sum_ = 0\n    while n > 0:\n        sum_ += n % 10\n        n //= 10\n    return sum_\n\nn = int(input())\n\nwhile n % sum_digits(n) != 0:\n    n += 1\n\nprint(n)\n"
    },
    {
      "index": 2,
      "text": "\ndef sum_digits(n):  # define function\n    sum = 0  # define sum\n    while n > 0:\n        sum += n % 10  # add last digit to sum\n        n //= 10  # remove last digit\n    return sum\n\nn = int(input())\n\nwhile n % sum_digits(n) != 0:\n    n += 1\n\nprint(n)\n"
    }
  ],
  "created": 1649825698,
  "object": "edit"
}
2022-04-13 04:55:02.573223 fix syntax errors 3 ['\n\ndef sum_digits(n):\n    sum_ = 0\n    while n > 0:\n        sum_ += n % 10\n        n //= 10\n    return sum_\n\nn = int(input())\n\nwhile n % sum_digits(n) != 0:\n    n += 1\n\nprint(n)\n', '\n\ndef sum_digits(n):\n    sum_ = 0\n    while n > 0:\n        sum_ += n % 10\n        n //= 10\n    return sum_\n\nn = int(input())\n\nwhile n % sum_digits(n) != 0:\n    n += 1\n\nprint(n)\n', '\ndef sum_digits(n):  # define function\n    sum = 0  # define sum\n    while n > 0:\n        sum += n % 10  # add last digit to sum\n        n //= 10  # remove last digit\n    return sum\n\nn = int(input())\n\nwhile n % sum_digits(n) != 0:\n    n += 1\n\nprint(n)\n']
2022-04-13 04:55:02.573260 size on output set 2
2022-04-13 04:55:02.573273 num operations 2
2022-04-13 04:55:02.573280 size on input set 1
2022-04-13 04:55:04.482858 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nn = int(sys.stdin.readline().strip())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\n\nprint(n)\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nn = int(sys.stdin.readline().strip())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\n\nprint(n)\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\n\nprint(n)\n"
    }
  ],
  "created": 1649825702,
  "object": "edit"
}
2022-04-13 04:55:04.483114 fix spelling mistakes 3 ['\nimport sys\n\nn = int(sys.stdin.readline().strip())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\n\nprint(n)\n', '\nimport sys\n\nn = int(sys.stdin.readline().strip())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\n\nprint(n)\n', '\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\n\nprint(n)\n']
2022-04-13 04:55:04.483144 size on output set 2
2022-04-13 04:55:04.483149 size on input set 2
2022-04-13 04:55:05.924039 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\nn = int(sys.stdin.readline().strip())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\n\nprint(n)\n"
    },
    {
      "index": 1,
      "text": "import sys\n\nn = int(sys.stdin.readline().strip())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\n\nprint(n)\n"
    },
    {
      "index": 2,
      "text": "import sys\n\nn = int(sys.stdin.readline().strip())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\n\nprint(n)\n"
    }
  ],
  "created": 1649825704,
  "object": "edit"
}
2022-04-13 04:55:05.924205 fix syntax errors 3 ['import sys\n\nn = int(sys.stdin.readline().strip())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\n\nprint(n)\n', 'import sys\n\nn = int(sys.stdin.readline().strip())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\n\nprint(n)\n', 'import sys\n\nn = int(sys.stdin.readline().strip())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\n\nprint(n)\n']
2022-04-13 04:55:07.593096 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\n\n\n\n\n\nprint(n)\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nn = int(sys.stdin.readline())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\n\nprint(n)\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\nn = int(sys.stdin.readline())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\n\nprint(n)\n"
    }
  ],
  "created": 1649825705,
  "object": "edit"
}
2022-04-13 04:55:07.593282 fix syntax errors 3 ['\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\n\n\n\n\n\nprint(n)\n', '\nimport sys\nn = int(sys.stdin.readline())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\n\nprint(n)\n', '\nimport sys\n\nn = int(sys.stdin.readline())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\n\nprint(n)\n']
2022-04-13 04:55:07.593309 size on output set 4
