["\nh, w = map(int, input().split())\ngrid = []\nfor i in range(h):\n    grid.append(list(input()))\n\n# print(\"grid: \")\n# print(grid)\n\n# check for columns\nfor i in range(h):\n    all_white = True\n    for j in range(w):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        # print(\"col: \" + str(i))\n        grid.pop(i)\n        h -= 1\n        i -= 1\n\n# print(\"grid: \")\n# print(grid)\n\n# check for rows\nfor j in range(w):\n    all_white = True\n    for i in range(h):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        # print(\"row: \" + str(j))\n        for i in range(h):\n            grid[i].pop(j)\n        w -= 1\n        j -= 1\n\n# print(\"grid: \")\n# print(grid)\n\nfor i in range(h):\n    print(\"\".join(grid[i]))\n", "\nimport sys\n\ndef main():\n    h, w = map(int, sys.stdin.readline().split())\n    grid = [list(sys.stdin.readline().split()[0]) for i in range(h)]\n    for i in range(h):\n        if grid[i].count('#') == 0:\n            grid.pop(i)\n            h -= 1\n            i -= 1\n    for i in range(w):\n        column = [grid[j][i] for j in range(h)]\n        if column.count('#') == 0:\n            for j in range(h):\n                grid[j].pop(i)\n            w -= 1\n            i -= 1\n    for i in range(h):\n        print(''.join(grid[i]))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    h, w = list(map(int, sys.stdin.readline().split()))\n    grid = [list(sys.stdin.readline().split()[0]) for i in range(h)]\n    for i in range(h):\n        if grid[i].count('#') == 0: # count the number of '#'s in the row\n            grid.pop(i)\n            h -= 1\n            i -= 1\n    for i in range(w):\n        column = [grid[j][i] for j in range(h)]\n        if column.count('#') == 0: # count the number of '#'s in the column\n            for j in range(h):\n                grid[j].pop(i)\n            w -= 1\n            i -= 1\n    for i in range(h):\n        print(''.join(grid[i]))\n\nif __name__ == '__main__':\n    main()\n", "\nh, w = map(int, input().split())\ngrid = []\nfor i in range(h):\n    grid.append(list(input()))\n\n# print(\"grid: \")\n# print(grid)\n\n# check for columns\nfor i in range(h):\n    all_white = True\n    for j in range(w):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        # print(\"row: \" + str(i))\n        grid.pop(i)\n        h -= 1\n        i -= 1\n\n# print(\"grid: \")\n# print(grid)\n\n# check for rows\nfor j in range(w):\n    all_white = True\n    for i in range(h):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        # print(\"col: \" + str(j))\n        for i in range(h):\n            grid[i].pop(j)\n        w -= 1\n        j -= 1\n\n# print(\"grid: \")\n# print(grid)\n\nfor i in range(h):\n    print(\"\".join(grid[i]))\n", "\n\nimport sys\n\ndef main():\n    h, w = list(map(int, sys.stdin.readline().split()))\n    grid = [list(sys.stdin.readline().split()[0]) for i in range(h)]\n    for i in range(h):\n        if grid[i].count('#') == 0:\n            grid.pop(i)\n            h -= 1\n            i -= 1\n    for i in range(w-1, -1, -1):\n        column = [grid[j][i] for j in range(h) if grid[j][i] == '#']\n        if len(column) == 0:\n            for j in range(h-1, -1, -1):\n                grid[j].pop(i) \n            w -= 1 \n    for i in range(h):\n        print(''.join(grid[i]))\n\nif __name__ == '__main__':\n    main()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n# h, w = map(int, input().split())\n# grid = []\n# for i in range(h):\n#     grid.append(list(input()))\n\n# # print(\"grid: \")\n# # print(grid)\n\n# # check for columns\n# for i in range(h):\n#     all_white = True\n#     for j in range(w):\n#         if grid[i][j] == '#':\n#             all_white = False\n#             break\n#     if all_white:\n#         # print(\"col: \" + str(i))\n#         grid.pop(i)\n#         h -= 1\n#         i -= 1\n\n# # print(\"grid: \")\n# # print(grid)\n\n# # check for rows\n# for j in range(w):\n#     all_white = True\n#     for i in range(h):\n#         if grid[i][j] == '#':\n#             all_white = False\n#             break\n#     if all_white:\n#         # print(\"col: \" + str(j))\n#         for i in range(h):\n#             grid[i].pop(j)\n#         w -= 1\n#         j -= 1\n\n# # print(\"grid: \")\n# # print(grid)\n\n# for i in range(h):\n#     print(\"\".join(grid[i]))\n\n# t = int(input())\n# for _ in range(t):\n#     n, k = map(int, input().split())\n#     a = list(map(int, input().split()))\n#     a.sort()\n#     # print(a)\n#     d = 0\n#     for i in range(1, n):\n#         d += max(0, k - a[i] + a[i-1])\n#     print(d)\n\n# t = int(input())\n# for _ in range(t):\n#     n = int(input())\n#     a = list(map(int, input().split()))\n#     # print(a)\n#     a.sort()\n#     # print(a)\n#     d = 0\n#     for i in range(1, n):\n#         d += abs(a[i]-a[i-1]) - 1\n#     print(d)\n\n# t = int(input())\n# for _ in range(t):\n#     n = int(input())\n#     a = list(map(int, input().split()))\n#     a.sort()\n#     # print(a)\n#     d = 0\n#     for i in range(1, n):\n#         if a[i] <= a[i-1]:\n#             d += a[i-1] - a[i] + 1\n#             a[i] = a[i-1] + 1\n#     print(d)\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    # print(a)\n    d = 0\n    for i in range(1, n):\n        if a[i] <= a[i-1]:\n            d += a[i-1] - a[i] + 1\n            a[i] = a[i-1] + 1\n    print(d)\n", "\nh, w = map(int, input().split())\ngrid = []\nfor i in range(h):\n    grid.append(list(input()))\n\nprint(\"grid: \")\nprint(grid)\n\n# check for columns\nfor i in range(h):\n    all_white = True\n    for j in range(w):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        print(\"row: \" + str(i))\n        grid.pop(i)\n        h -= 1\n        i -= 1\n\nprint(\"grid: \")\nprint(grid)\n\n# check for rows\nfor j in range(w):\n    all_white = True\n    for i in range(h):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        print(\"col: \" + str(j))\n        for i in range(h):\n            grid[i].pop(j)\n        w -= 1\n        j -= 1\n\nprint(\"grid: \")\nprint(grid)\n\nfor i in range(h):\n    print(\"\".join(grid[i]))\n", "\n\nh, w = map(int, input().split())\ngrid = []\nfor i in range(h):\n    grid.append(list(input()))\n\n#print(\"grid: \")\n#print(grid)\n\n# check for columns\nfor i in range(h):\n    all_white = True\n    for j in range(w):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        #print(\"col: \" + str(i))\n        grid.pop(i)\n        h -= 1\n        i -= 1\n\n#print(\"grid: \")\n#print(grid)\n\n# check for rows\nfor j in range(w):\n    all_white = True\n    for i in range(h):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        #print(\"row: \" + str(j))\n        for i in range(h):\n            grid[i].pop(j)\n        w -= 1\n        j -= 1\n\n#print(\"grid: \")\n#print(grid)\n\nfor i in range(h):\n    print(\"\".join(grid[i]))\n", "# https://codeforces.com/contest/1371/problem/B\n\nh, w = map(int, input().split())\ngrid = []\nfor i in range(h):\n    grid.append(list(input()))\n\n# print(\"grid: \")\n# print(grid)\n\n# check for columns\nfor i in range(h):\n    all_white = True\n    for j in range(w):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        # print(\"row: \" + str(i))\n        grid.pop(i)\n        h -= 1\n        i -= 1\n\n# print(\"grid: \")\n# print(grid)\n\n# check for rows\nfor j in range(w):\n    all_white = True\n    for i in range(h):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        # print(\"col: \" + str(j))\n        for i in range(h):\n            grid[i].pop(j)\n        w -= 1\n        j -= 1\n\n# print(\"grid: \")\n# print(grid)\n\nfor i in range(h):\n    print(\"\".join(grid[i]))\n", "import sys\n\ndef main():\n    h, w = map(int, sys.stdin.readline().split())\n    grid = [list(sys.stdin.readline().rstrip()) for i in range(h)]\n    for i in range(h):\n        if grid[i].count('#') == 0:\n            grid.pop(i)\n            h -= 1\n            i -= 1\n    for i in range(w):\n        column = [grid[j][i] for j in range(h)]\n        if column.count('#') == 0:\n            for j in range(h):\n                grid[j].pop(i)\n            w -= 1\n            i -= 1\n    for i in range(h):\n        print(''.join(grid[i]))\n\nif __name__ == '__main__':\n    main()\n", "h, w = map(int, input().split())\ngrid = []\nfor i in range(h):\n    grid.append(list(input()))\n\n# print(\"grid: \")\n# print(grid)\n\n# check for columns\nfor i in range(h):\n    all_white = True\n    for j in range(w):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        # print(\"col: \" + str(i))\n        grid.pop(i)\n        h -= 1\n        i -= 1\n\n# print(\"grid: \")\n# print(grid)\n\n# check for rows\nfor j in range(w):\n    all_white = True\n    for i in range(h):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        # print(\"col: \" + str(j))\n        for i in range(h):\n            grid[i].pop(j)\n        w -= 1\n        j -= 1\n\n# print(\"grid: \")\n# print(grid)\n\nfor i in range(h):\n    print(\"\".join(grid[i])\n", "\n\nimport sys\n\ndef main():\n    h, w = list(map(int, sys.stdin.readline().split()))\n    grid = [list(sys.stdin.readline().rstrip()) for i in range(h)]\n    for i in range(h):\n        if grid[i].count('#') == 0:\n            grid.pop(i)\n            h -= 1\n            i -= 1\n    for i in range(w-1, -1, -1):\n        column = [grid[j][i] for j in range(h)]\n        if len(column) == 0:\n            for j in range(h-1, -1, -1):\n                grid[j].pop(i) \n            w -= 1 \n    for i in range(h):\n        print(''.join(grid[i]))\n\nif __name__ == '__main__':\n    main()\n", "\nimport collections\nimport heapq\nimport sys\n\ndef main():\n    n, m = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n    b = list(map(int, sys.stdin.readline().split()))\n    a.sort(reverse=True)\n    b.sort(reverse=True)\n    heap = []\n    heapq.heapify(heap)\n    for i in range(m):\n        heapq.heappush(heap, (-a[0] * b[i], 0, i))\n    ans = 0\n    for i in range(n):\n        x = heapq.heappop(heap)\n        ans += x[0]\n        if x[1] + 1 < m:\n            heapq.heappush(heap, (-a[x[1] + 1] * b[x[2]], x[1] + 1, x[2]))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "h, w = map(int, input().split())\ngrid = []\nfor i in range(h):\n    grid.append(list(input()))\n\nfor i in range(h):\n    all_white = True\n    for j in range(w):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        # print(\"col: \" + str(i))\n        grid.pop(i)\n        h -= 1\n        i -= 1\n\nfor j in range(w):\n\n    all_white = True\n    for i in range(h):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        # print(\"col: \" + str(j))\n        for i in range(h):\n            grid[i].pop(j)\n        w -= 1\n        j -= 1\n\nfor i in range(h):\n    print(\"\".join(grid[i]))\n", "import sys\n\ndef main():\n    h, w = list(map(int, sys.stdin.readline().split()))\n    grid = [list(sys.stdin.readline().rstrip()) for i in range(h)]\n    for i in range(h):\n        if grid[i].count('#') == 0:\n            grid.pop(i)\n            h -= 1\n            i -= 1\n    for i in range(w):\n        column = [grid[j][i] for j in range(h)]\n        if column.count('#') == 0:\n            for j in range(h):\n                grid[j].pop(i)\n            w -= 1\n            i -= 1\n    for i in range(h):\n        print(''.join(grid[i]))\n\nif __name__ == '__main__':\n    main()\n", "\n\n\nimport sys\n\ndef main():\n    h, w = list(map(int, sys.stdin.readline().split()))\n    grid = [list(sys.stdin.readline().split()[0]) for i in range(h)]\n    for i in range(h):\n        if grid[i].count('#') == 0:\n            grid.pop(i)\n            h -= 1\n            i -= 1\n    for i in range(w - 1, -1, -1):\n        column = [grid[j][i] for j in range(h) if grid[j][i] == '#']\n        if len(column) == 0:\n            for j in range(h - 1, -1, -1):\n                grid[j].pop(i)\n            w -= 1\n    for i in range(h):\n        print(''.join(grid[i]))\n\n\nif __name__ == '__main__':\n    main()\n"]