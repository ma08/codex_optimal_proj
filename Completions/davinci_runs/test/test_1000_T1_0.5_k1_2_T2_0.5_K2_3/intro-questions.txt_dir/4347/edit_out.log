2022-04-12 19:40:28.691875 num operations 2
2022-04-12 19:40:28.691884 size on input set 1
2022-04-12 19:40:31.325484 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\n\ndef round_dance(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dance(n))\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math\n\ndef round_dance(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dance(n))\n"
    },
    {
      "index": 2,
      "text": "\n\nimport math\n\ndef round_dance(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dance(n))\n"
    }
  ],
  "created": 1649792428,
  "object": "edit"
}
2022-04-12 19:40:31.325694 fix spelling mistakes 3 ["\n\nimport math\n\ndef round_dance(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dance(n))\n", "\n\nimport math\n\ndef round_dance(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dance(n))\n", "\n\nimport math\n\ndef round_dance(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dance(n))\n"]
2022-04-12 19:40:31.325717 size on output set 1
2022-04-12 19:40:31.325722 size on input set 1
2022-04-12 19:40:34.016898 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\n\ndef round_dance(n):\n    return math.factorial(n) // (2 * math.factorial(n/2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dance(n))\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\ndef round_dance(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dance(n))\n"
    },
    {
      "index": 2,
      "text": "\nimport math\n\ndef round_dance(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dance(n))\n"
    }
  ],
  "created": 1649792431,
  "object": "edit"
}
2022-04-12 19:40:34.017070 fix syntax errors 3 ["\nimport math\n\ndef round_dance(n):\n    return math.factorial(n) // (2 * math.factorial(n/2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dance(n))\n", "\nimport math\n\ndef round_dance(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dance(n))\n", "\nimport math\n\ndef round_dance(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dance(n))\n"]
2022-04-12 19:40:34.017091 size on output set 2
2022-04-12 19:40:34.017118 num operations 2
2022-04-12 19:40:34.017123 size on input set 1
2022-04-12 19:40:35.628596 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n"
    },
    {
      "index": 1,
      "text": "\n#Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n"
    },
    {
      "index": 2,
      "text": "\n\n# Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n"
    }
  ],
  "created": 1649792434,
  "object": "edit"
}
2022-04-12 19:40:35.628768 fix spelling mistakes 3 ['\n\n# Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n', '\n#Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n', '\n\n# Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n']
2022-04-12 19:40:35.628790 size on output set 2
2022-04-12 19:40:35.628796 size on input set 2
2022-04-12 19:40:37.726754 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n"
    },
    {
      "index": 1,
      "text": "\n# Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n"
    },
    {
      "index": 2,
      "text": "\n# Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n"
    }
  ],
  "created": 1649792435,
  "object": "edit"
}
2022-04-12 19:40:37.726918 fix syntax errors 3 ['# Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n', '\n# Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n', '\n# Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n']
2022-04-12 19:40:41.597977 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n"
    },
    {
      "index": 1,
      "text": "#!/bin/python3\n\n# Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n"
    },
    {
      "index": 2,
      "text": "\n# Solution\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\n\ndef main():\n    n = int(input())\n    print(factorial(n) // (factorial(n // 2) ** 2))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649792437,
  "object": "edit"
}
2022-04-12 19:40:41.598142 fix syntax errors 3 ['# Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n', '#!/bin/python3\n\n# Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n', "\n# Solution\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\n\ndef main():\n    n = int(input())\n    print(factorial(n) // (factorial(n // 2) ** 2))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 19:40:41.598166 size on output set 4
