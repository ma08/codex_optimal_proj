["\n\nk = int(input()) # \u0432\u0432\u043e\u0434\u0438\u043c \u0447\u0438\u0441\u043b\u043e\n\na = 0 # \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0440\u044f\u0434\u0430\nb = 0 # \u0432\u0442\u043e\u0440\u043e\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0440\u044f\u0434\u0430\n\nfor i in range(k): # \u043f\u0440\u043e\u0431\u0435\u0433\u0430\u0435\u043c\u0441\u044f \u043f\u043e \u0432\u0441\u0435\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c \u0440\u044f\u0434\u0430 \u0444\u0438\u0431\u043e\u043d\u0430\u0447\u0447\u0438 \n    if i == 0:\n        b = 1 # \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0440\u044f\u0434\u0430\n    elif i == 1:\n        b = 1 # \u0432\u0442\u043e\u0440\u043e\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0440\u044f\u0434\u0430\n        a = 1 # \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0440\u044f\u0434\u0430\n    else:\n        temp = b # \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f\n        b = a + b # \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0440\u044f\u0434\u0430\n        a = temp # \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u043c \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0440\u044f\u0434\u0430\n\nprint(a, b) # \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u0440\u044f\u0434 \u0444\u0438\u0431\u043e\u043d\u0430\u0447\u0447\u0438\n", "\n\nimport sys\n\ndef main(k):\n    x, y = 0, 1\n    for _ in range(k):\n        x, y = y, x + y\n    return x, y\n\nif __name__ == \"__main__\":\n    k = int(sys.stdin.readline())\n    x, y = main(k)\n    print(x, y)\n", "\n#\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0447\u0438\u0441\u0435\u043b \u0444\u0438\u0431\u043e\u043d\u0430\u0447\u0447\u0438\nk = int(input())\n\nfib_1 = 0\nfib_2 = 1\n\nfor i in range(k):\n    fib_1, fib_2 = fib_2, fib_1+fib_2\n\nprint(fib_1, fib_2)\n", "\nimport sys\n\ndef main(k):  # fibonacci\n    a, b = 1, 0\n    for _ in range(k):\n        a, b = b, a + b\n    return a, b\n\nif __name__ == \"__main__\":\n    k = int(sys.stdin.readline())\n    a, b = main(k)\n    print(a, b)\n", "\n\ndef max_sequence(seq):\n    for i in range(1, len(seq)):\n        if not seq[i - 1] < seq[i]:\n            return False\n    return True\n\n\nprint(max_sequence([1, 2, 3, 4, 5, 6]))\n", "\n\ndef fib(n):\n    if n <= 1:\n        return 1\n    else:\n        return fib(n - 1) + fib(n - 2)\n\ndef main():\n    k = int(input())\n    a = fib(k + 1)\n    b = fib(k)\n    print(a, b, sep=' ')\n\nmain()\n", "\n\ndef main():\n    k = int(input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0447\u0438\u0441\u043b\u043e: \")) # \u0432\u0432\u043e\u0434 \u0447\u0438\u0441\u043b\u0430\n    a = 0\n    b = 1\n    for i in range(k):\n        a, b = b, a + b\n    print(a, b)\n\nif __name__ == \"__main__\":\n    main()\n", "\n#\u0412\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u0447\u0438\u0441\u0435\u043b \u0424\u0438\u0431\u043e\u043d\u0430\u0447\u0447\u0438\n\nn = int(input())\n\na = 0\nb = 1\n\nfor i in range(n):\n    a, b = b, a+b\n\nprint(a, b)\n", "\ndef fib(n): \n\ta = 1\n\tb = 1\n\tfor i in range(n - 1):\n\t\ta, b = b, a + b\n\treturn a, b\n\nk = int(input())\na, b = fib(k)\nprint(a, b)\n", "\nk = int(input())\n\na = 1\nb = 1\nc = 0\n\nfor i in range(k):\n    c = b\n    b = a + c\n    a = c\n\nprint(a, b)\n", "\n\n\nimport sys\n\n\ndef main(k):\n    a, b = 1, 0\n    for _ in range(k):\n        a, b = b, a + b\n    return a, b\n\nif __name__ == \"__main__\":\n    k = int(sys.stdin.readline())\n    a, b = main(k)\n    print(a, b)\n", "\n\ndef main():\n    k = int(input())\n    a = 0\n    b = 1\n    for i in range(k-1):\n        a, b = b, a + b\n    print(a, b) \n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    k = int(input())\n    a, b = 1, 1\n    for i in range(k-1):\n        a, b = b, a+b  # the last one is the k-th fibonacci number\n    print(a, b)  # the k-th fibonacci number and the (k+1)-th fibonacci number\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef fib(n):\n    a = 1\n    b = 1\n    for i in range(n - 1):\n        a, b = b, a + b\n    return a, b\n\nk = int(input())\na, b = fib(k)\nprint(a, b)\n", "\n\nk = int(input())\n\na = 0\nb = 0\n\nfor i in range(k):\n    if i == 0:\n        b = 1\n    elif i == 1:\n        b = 1\n        a = 1\n    else:\n        temp = b\n        b = a + b\n        a = temp\n\nprint(a, b)\n", "import sys\n\ndef fibonacci(k):\n    x, y = 1, 0\n    for _ in range(k):\n        x, y = y, x + y\n    return x, y\n\nif __name__ == \"__main__\":\n    k = int(sys.stdin.readline())\n    x, y = fibonacci(k)\n    print(x, y)\n", "\nimport sys\n\ndef main(k):\n    a, b = 1, 1\n    for _ in range(k):\n        a, b = b, a + b\n    return a, b\n\nif __name__ == \"__main__\":\n    k = int(sys.stdin.readline())\n    a, b = main(k)\n    print(a, b)\n", "\ndef main():\n    k = int(input())\n    x = 0\n    y = 1\n    for i in range(k):\n        x, y = y, x + y\n    print(x, y)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef fibonacci(n):\n    if n <= 1:\n        return 1\n    else:\n        return fibonacci(n - 1) + fibonacci(n - 2)\n\ndef main():\n    k = int(input())\n    a = fibonacci(k + 1) - 1\n    b = fibonacci(k) - 1\n    print(a, b)\n\nif __name__ == \"__main__\":\n    main()\n", "\nprint(\"hello world\")\n", "\ndef main():\n    k = int(input())\n    a = 0\n    b = 1\n    for i in range(k - 1):\n        a, b = b, a + b\n    print(a, b)\n\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    K = int(sys.stdin.readline())\n    if K == 1:\n        print(\"0 1\")\n    else:\n        A = [0, 1]\n        B = [1, 1]\n        for i in range(2, K+1):\n            A.append(B[i-2])\n            B.append(A[i-1] + B[i-1])\n        print(str(A[K]) + \" \" + str(B[K]))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main(k):\n    x, y = 1, 0\n    for _ in range(k):\n        x, y = y, x + y\n    return x, y\n\nif __name__ == \"__main__\":\n    k = int(sys.stdin.readline())\n    x, y = main(k)\n    print(x, y)\n", "\n\ndef fibonacci(n):\n    if n <= 1:\n        return 1\n    else:\n        return fibonacci(n - 1) + fibonacci(n - 2)\n\ndef main():\n    k = int(input())\n    a = fibonacci(k + 1)\n    b = fibonacci(k)\n    print(a, b)\n\nmain()\n", "k = int(input())\n\na = 1\nb = 1\n\nfor i in range(k):\n    temp = b\n    b = a + b\n    a = temp\n\nprint(a, b)\n", "\n\nn = int(input())\n", "import sys\n\ndef main():\n    K = int(sys.stdin.readline())\n    if K == 1:\n        print(\"0 1\") \n    else:\n        A = [0, 1]\n        B = [1, 1]\n        for i in range(2, K+1):\n            A.append(B[i-1])\n            B.append(A[i-1] + B[i-1])\n        print(str(A[K]) + \" \" + str(B[K]))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    K = int(sys.stdin.readline())\n    if K == 1:\n        print(\"0 1\")\n    else:\n        A = [0, 1]\n        B = [1, 1]\n        for i in range(2, K+1):\n            A.append(B[i-1])\n            B.append(A[i-1] + B[i-1])\n        print(str(A[K]) + \" \" + str(B[K]))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    k = int(input())\n    a, b = 1, 1\n    for i in range(k):\n        a, b = b, a+b\n    print(a, b, end=\" \")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nk = int(input())\n\na = 0\nb = 1\n\nfor i in range(k):\n    a, b = b, a + b\n\nprint(a, b)\n", "\n\ndef main():\n    k = int(input())\n    a = 0\n    b = 1\n    for i in range(k - 1):\n        a, b = b, a + b\n    print(a, b)\n\nif __name__ == \"__main__\":\n    main()\n", "\nprint(k)\nk = int(input())\n\na = 1\nb = 1\n\nfor i in range(k):\n    temp = b\n    b = a + b\n    a = temp\n\nprint(a, b)\n", "\ndef max_sequence(n):\n    max_sum = 0\n    for i in range(len(n) + 1):\n        for j in range(i, len(n) + 1):\n            this_sum = 0\n            for k in range(i, j + 1):\n                this_sum += n[k]\n            if this_sum > max_sum:\n                max_sum = this_sum\n    return max_sum\n\n\nprint(max_sequence([-2, 1, -3, 4, -1, 2, 1, -5, 4, 5, 6, 7]))\n", "\ndef fib(n):\n    if n <= 1:\n        return 1\n    else:\n        return fib(n - 1) + fib(n - 2)\n\ndef main():\n    k = int(input())\n    a = fib(k + 1)\n    b = fib(k)\n    print(a, b)\n\nif __name__ == '__main__':\n    main()\n", "\ndef fib(n):\n    if n <= 1:\n        return 1\n    else:\n        return fib(n - 1) + fib(n - 2)\n\ndef main():\n    n = int(input())\n    a = fib(n + 1) - 1 # a = Fn\n    b = fib(n) - 1 # b = Fn-1\n    print(a, b)\n\nmain()\n", "k = int(input())\n\na = 1\nb = 1\nfor i in range(k):\n    temp = b\n    b = a + b\n    a = temp\nprint(a, b)\n", "\nimport sys\n\ndef main(k):\n    a, b = 0, 1\n    for _ in range(k):\n        a, b = b, a + b\n    return a, b\n\nif __name__ == \"__main__\":\n    k = int(sys.stdin.readline())\n    a, b = main(k)\n    print(a, b)\n", "\ndef fib(n):\n    if n <= 1:\n        return 1\n    else:\n        return fib(n - 1) + fib(n - 2)\n\ndef main():\n    n = int(input())\n    a = fib(n + 1) - 1\n    b = fib(n) - 1\n    print(a, b)\n\nmain()\n", "\n\ndef main():\n    n = int(input())\n    print(n)\n\nmain()\n", "\nprint(\"Hello, World!\")\n", "\n\ndef main():\n    k = int(input())\n    a, b = 0, 1\n    for i in range(k):\n        a, b = b, a+b\n    print(a, b)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    k = int(input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0447\u0438\u0441\u043b\u043e: \"))\n    a = 0\n    b = 1\n    for i in range(k):\n        a, b = b, a + b\n    print(a, b)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef max_sequence(n):\n    max_sum = n[0]\n    for i in range(len(n)):\n        for j in range(i, len(n)):\n            this_sum = 0\n            for k in range(i, j):\n                this_sum += n[k]\n            if this_sum > max_sum:\n                max_sum = this_sum\n    return max_sum\n\n\nprint(max_sequence([-2, 1, -3, 4, -1, 2, 1, -5, 4, 6]))\n", "\nk = int(input('Enter number: '))\n\na = 1\nb = 1\n\nfor i in range(k):\n    temp = b\n    b = a + b\n    a = temp\n\nprint(a, b)\n", "\ndef fibonacci(n):\n    if n <= 1:\n        return 1\n    else:\n        return fibonacci(n - 1) + fibonacci(n - 2)\n\ndef main():\n    k = int(input())\n    a = fibonacci(k + 1) - 1\n    b = fibonacci(k) - 1\n    print(a, b)\n", "\n\ndef main():\n    k = int(input())\n    x, y = 0, 1\n    for i in range(k):\n        x, y = y, x + y\n    print(x, y)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn = int(input())\n\na = 0\nb = 1\n\nfor i in range(n):\n    a, b = b, a+b\nprint(a, b)\n", "\n\nk = int(input())\n\na = 0\nb = 1\n\nfor i in range(k):\n    a, b = b, a+b\n\nprint(a, b)\n", "\n\ndef fib(n):\n    if n <= 1:\n        return 1\n    else:\n        return fib(n - 1) + fib(n - 2)\n\ndef main():\n    k = int(input('Enter a number: '))\n    print(fib(k))\n\nmain()\n", "\n\nimport sys\n\ndef main(k):  # fibonacci\n    a, b = 1, 0\n    for _ in range(k):  # _ - \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n        a, b = b, a + b\n    return a, b\n\nif __name__ == \"__main__\":\n    k = int(sys.stdin.readline())\n    a, b = main(k)\n    print(a, b)\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    K = int(sys.stdin.readline())\n    if K == 1:\n        print(\"0 1\")\n    else:\n        A = [0, 1]\n        B = [1, 1]\n        for i in range(2, K+1):\n            A.append(B[i-1])\n            B.append(A[i-1] + B[i-1])\n        print(A[K], B[K])\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    k = int(input())\n    a, b = 1, 1\n    for _ in range(k-1):\n        a, b = b, a+b # the last one is the (k+1)-th fibonacci number\n    print(a, b) # the k-th fibonacci number and the (k+1)-th fibonacci number\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    K = int(sys.stdin.readline())\n    if K == 1:\n        print(\"0 1\")\n    else:\n        A = [0, 1]\n        B = [1, 1]\n        for i in range(2, K+1):\n            A.append(B[i-1])\n            B.append(A[i-1] + B[i-1])\n        print(str(A[K]) + \" \" + str(B[K]))\n\nif __name__ == '__main__':\n    main()\n", "\n# \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0447\u0438\u0441\u0435\u043b \u0444\u0438\u0431\u043e\u043d\u0430\u0447\u0447\u0438\nk = int(input())\n\na = 0\nb = 1\n\nfor i in range(k):\n    a, b = b, a+b\n\nprint(a, b)\n", "\n\nk = int(input())  # \u0432\u0432\u043e\u0434\u0438\u043c \u0447\u0438\u0441\u043b\u043e\n\na = 0  # \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0440\u044f\u0434\u0430\nb = 0  # \u0432\u0442\u043e\u0440\u043e\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0440\u044f\u0434\u0430\n\nfor i in range(k):  # \u043f\u0440\u043e\u0431\u0435\u0433\u0430\u0435\u043c\u0441\u044f \u043f\u043e \u0432\u0441\u0435\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c \u0440\u044f\u0434\u0430 \u0444\u0438\u0431\u043e\u043d\u0430\u0447\u0447\u0438\n    if i == 0:\n        b = 1  # \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0440\u044f\u0434\u0430\n    elif i == 1:\n        b = 1  # \u0432\u0442\u043e\u0440\u043e\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0440\u044f\u0434\u0430\n        a = 1  # \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0440\u044f\u0434\u0430\n    else:\n        temp = b  # \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f\n        b = a + b  # \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0440\u044f\u0434\u0430\n        a = temp  # \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u043c \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0440\u044f\u0434\u0430\n\nprint(a, b)  # \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u0440\u044f\u0434 \u0444\u0438\u0431\u043e\u043d\u0430\u0447\u0447\u0438\n", "\nimport sys\n\ndef main(k):\n    a, b = 1, 1\n    for _ in range(k):\n        a, b = b, a + b\n    return a\n\nif __name__ == \"__main__\":\n    k = int(sys.stdin.readline())\n    a = main(k)\n    print(a)\n", "\n\ndef fib(n):\n    a = 1\n    b = 1\n    for i in range(n - 1):\n        a, b = b, a + b\n    return a, b\n\n\n\nk = int(input())\na, b = fib(k)\nprint(a, b)\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    K = int(sys.stdin.readline())\n    if K == 1:\n        print(\"0 1\")\n    else:\n        A = [0, 1]\n        B = [1, 1]\n        for i in range(2, K+1):\n            A.append(B[i-1])\n            B.append(A[i-1] + B[i-1])\n        print(str(A[K]) + \" \" + str(B[K]) + \"\\n\")\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    k = int(input())\n    x = 0\n    y = 1\n    for _ in range(k):\n        x, y = y, x + y\n    print(x, y)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    k = int(input())\n    a, b = 1, 1\n    for i in range(k-1):\n        a, b = b, a+b # the last one is the k-th fibonacci number\n    print(a, b) # the k-th fibonacci number and the (k+1)-th fibonacci number \n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    k = int(input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0447\u0438\u0441\u043b\u043e: \"))  # \u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0447\u0438\u0441\u043b\u043e\n    a = 0\n    b = 1\n    for i in range(k):\n        a, b = b, a + b\n    print(a, b)\n\nif __name__ == \"__main__\":\n    main()\n"]