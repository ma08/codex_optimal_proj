["\n\nx = int(input())\nn = int(input())\n\nres = x\nfor i in range(n):\n    res -= int(input())\n\nprint(res)\n\n", "\n\n# number of megabytes available per month.\nx = int(input())\n# number of months\nn = int(input())\n# list of megabytes spent each month\np = []\nfor i in range(n):\n    p.append(int(input()))\n# megabytes remaining after n months\nremaining = x\nfor i in range(n):\n    remaining = remaining - p[i]\n    if remaining < 0:\n        remaining = 0\n\n# megabytes available in n+1 month\nprint(remaining + x)\n", "\n\nx = int(input())\nn = int(input())\n\nres = x\nfor i in range(n):\n    res += int(input())\n    res -= int(input())\n\nprint(res)\n", "\nThe program must accept an integer X and N positive integers as the input. The program must print the value obtained by subtracting the N numbers from X as the output.\nBoundary Condition(s):\n2 <= X <= 1000\n1 <= N <= 10\nInput Format:\nThe first line contains X.\nThe second line contains N.\nThe third line contains N positive integers separated by a space.\nOutput Format:\nThe first line contains the value obtained by subtracting the N numbers from X.\nExample Input/Output 1:\nInput:\n100\n4\n10 20 30 40\nOutput:\n0\nExplanation:\nHere X = 100 and N = 4.\nAfter subtracting the 4 numbers from X, the value becomes 0.\nSo 0 is printed as the output.\nExample Input/Output 2:\nInput:\n500\n3\n5 10 15\nOutput:\n470\nExplanation:\nHere X = 500 and N = 3.\nAfter subtracting the 3 numbers from X, the value becomes 470.\nSo 470 is printed as the output.\n\"\"\"\n\nSolution\n\"\"\"\n\ndef main():\n    X = int(input())\n    N = int(input())\n    megabytes = X\n    for i in range(N):\n        megabytes = megabytes - int(input())\n    print(megabytes)\n\nif __name__ == '__main__':\n    main()\n", "X = int(input())\nn = int(input())\n\ntotal_used = 0\nfor i in range(n):\n    used = int(input())\n    total_used += used\n\nprint(X + total_used)\n", "\n# number of megabytes available per month\nx = int(input(\"Enter the number of megabytes available per month: \"))\n\n# number of months\nn = int(input(\"Enter the number of months: \"))\n\n# list of megabytes spent each month\np = []\nfor i in range(n):\n    p.append(int(input(\"Enter the megabytes spent in month \" + str(i + 1) + \": \")))\n\n# megabytes remaining after n months\nremaining = x\nfor i in range(n):\n    remaining = remaining - p[i]\n    if remaining < 0:\n        remaining = 0\n\n# megabytes available in n+1 month\nprint(remaining + x)\n", "\nx = int(input())\nn = int(input())\n\nres = x\nfor i in range(n):\n    res -= int(input())\n    res -= int(input())\n\nprint(res)\n", "\n\n# number of megabytes available in each month\nx = int(input())\n# number of months\nn = int(input())\n# list of megabytes spent each month\np = []\nfor i in range(n):\n    p.append(int(input()))\n# megabytes remaining after n months\nremaining = x\nfor i in range(n):\n    remaining = remaining - p[i]\n    if remaining < 0:\n        remaining = 0\n# megabytes available in n+1 month\nprint(remaining + x)\n", "\n\n# \"\"\"\n# Solution\n# \"\"\"\n\n# def main():\n#     X = int(input())\n#     N = int(input())\n#     megabytes = X*1024\n#     for i in range(N):\n#         megabytes = megabytes - int(input())\n#     print(megabytes)\n\n# if __name__ == '__main__':\n#     main()\n\n\n\n# def main():\n#     X = int(input())\n#     N = int(input())\n#     megabytes = X*1024\n#     for i in range(N):\n#         megabytes = megabytes - int(input())\n#     print(megabytes)\n\n# if __name__ == '__main__':\n#     main()\n", "X = int(input())\nN = int(input())\n\ntotal = X\nfor i in range(N):\n    total -= int(input())\n\nprint(total)\n", "\nX = int(input())\nN = int(input())\n\ntotal_used = 0\nfor i in range(N):\n    used = int(input())\n    total_used += used\n\nprint(X + total_used)\n", "x = int(input())\nn = int(input())\ntotal = 0\nfor i in range(n):\n    used = int(input())\n    total += used\nprint(x + total)\n", "\n\n# x = int(input())\n# n = int(input())\n\n# res = x\n# for i in range(n):\n#     res -= int(input())\n\n# print(res)\n\n\n\n\n# x = int(input())\n# y = int(input())\n# print(x ** y)\nx = input()\nprint(x.upper())\n", "\nX = int(input())\nN = int(input())\n\ntotal = X\nfor i in range(N):\n    total -= int(input())\n\n#\nprint(total)\n", "\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\n\n# number of megabytes available per month\nx = int(input())\n\n# number of months\nn = int(input())\n\n# list of megabytes spent each month\np = []\nfor i in range(n):\n    p.append(int(input()))\n\n# megabytes remaining after n months\nremaining = x\nfor i in range(n):\n    remaining = remaining - p[i]\n    if remaining < 0:\n        remaining = 0\n\n# megabytes available in n+1 month\nprint(remaining + x)\n", "\n# Read input\nx = int(input())\nn = int(input())\np = [int(input()) for i in range(n)]\n# Init\nmb_left = x\n# Loop through months and calculate remaining MBs\nfor i in range(n):\n    if mb_left >= p[i]:\n        mb_left -= p[i]\n    else:\n        mb_left = 0\n    mb_left += x\n# Print result\nprint(mb_left)\n", "\"\"\"\nProblem\nYou\u2019ve just finished writing a piece of code that calculates the amount of memory\nthat will be used to store a given string. You know the following:\n\u2022 Each character of the string requires 1 byte of memory.\n\u2022 Each integer or floating-point value requires 4 bytes of memory.\n\u2022 Each Boolean value requires 1 byte of memory.\n\u2022 Each reference to an object requires 4 bytes of memory.\n\u2022 The String class stores the length of the string in an integer value.\n\u2022 The String class stores the internal character array using a reference to an object.\n\u2022 The String class stores the hashcode of the string in an integer value.\n\u2022 The String class stores the reference to the string\u2019s comparator in an object reference.\n\u2022 The String class stores the cached string representation in a reference to an object.\n\u2022 The String class stores the reference to the string\u2019s case mapping table in an object reference.\n\u2022 The String class stores a reference to the string\u2019s cached string representation in an object reference.\n\u2022 The String class stores a reference to the string\u2019s cached hashcode in an integer value.\n\u2022 The String class stores a reference to the string\u2019s cached comparator in an object reference.\n\u2022 The String class stores a reference to the string\u2019s cached case mapping table in an object reference.\nWrite a program that asks the user to input the number of characters in a string and\nthen prints the amount of memory that would be required to store the string.\n\"\"\"\n\n\"\"\"\nSolution \n\"\"\"\n\ndef main():\n    X = int(input())\n    N = int(input())\n    megabytes = X\n    for i in range(N):\n        megabytes = megabytes - int(input())\n    print(megabytes)\n\nif __name__ == '__main__':\n    main()\n", "\n# fix syntax errors\n# number of megabytes available in each month\nx = int(input())\n\n# number of months\nn = int(input())\n\n# list of megabytes spent each month\np = []\nfor i in range(n):\n    p.append(int(input()))\n\n# megabytes remaining after n months\nremaining = x\nfor i in range(n):\n    remaining = remaining - p[i]\n    if remaining < 0:\n        remaining = 0\n\n# megabytes available in n+1 month\nprint(remaining + x)\n", "\n\nx = int(input())\nn = int(input())\n\nres = x\nfor i in range(n):\n    res -= int(input())\n\nprint(res)\n\n\n# x = input()\n# print(x.upper())\n", "\n\n\n\"\"\"\n\nSolution\n\"\"\"\n\ndef main():\n    X = int(input())\n    N = int(input())\n    megabytes = X\n    for i in range(N):\n        megabytes = megabytes - int(input())\n    print(megabytes)\n\nif __name__ == '__main__':\n    main()\n", "\nx = int(input())\nn = int(input())\nres = x\nfor _ in range(n):\n    res -= int(input())\n\nprint(res)\n", "\n\n# Number of megabytes per month.\nX = int(input())\n# Number of months.\nN = int(input())\n# Megabytes per month.\nmegabytes = [int(input()) for i in range(N)]\n\n# Total megabytes used.\ntotal_megabytes = sum(megabytes)\n# Megabytes left over.\nmegabytes_left = X - total_megabytes\n\n# Total megabytes after N months.\ntotal_megabytes_after_N_months = total_megabytes + megabytes_left\n\nprint(total_megabytes_after_N_months)\n", "\n\n\"\"\"Solution\"\"\"\n\ndef main():\n    X = int(input())\n    N = int(input())\n    megabytes = X\n    for i in range(N):\n        megabytes = megabytes - int(input())\n    print(megabytes)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# number of megabytes available per month\nx = int(input(\"Enter number of megabytes available per month \"))\n\n# number of months\nn = int(input(\"Enter number of months \"))\n\n# list of megabytes spent each month\np = []\nfor i in range(n):\n    p.append(int(input(\"Enter megabytes spent in month \" + str(i+1) + \" \")))\n\n# megabytes remaining after n months\nremaining = x\nfor i in range(n):\n    remaining = remaining - p[i]\n    if remaining < 0:\n        remaining = 0\n\n# megabytes available in n+1 month\nprint(\"Megabytes available in month \" + str(n+1) + \" is \" + str(remaining + x))\n", "\n\nx = int(input())\nn = int(input())\n\np = [0] * (n + 1)\nfor i in range(n):\n    p[i] = int(input())\n\np[n] = x\nfor i in range(n - 1, -1, -1):\n    p[i] = p[i + 1] - p[i]\n\nprint(p[0])\n", "\n\n# number of megabytes available in each month\nx = int(input(\"\"))\n\n# number of months\nn = int(input(\"\"))\n\n# list of megabytes spent each month\np = []\nfor i in range(n):\n    p.append(int(input(\"\")))\n\n# megabytes remaining after n months\nremaining = x\nfor i in range(n):\n    remaining = remaining - p[i]\n    if remaining < 0:\n        remaining = 0\n\n# megabytes available in n+1 month\nprint(remaining + x)\n", "print(\"hello world\")\n", "\n\ndef main():\n    X = int(input())\n    N = int(input())\n    megabytes = X\n    for i in range(N):\n        megabytes = megabytes - int(input())\n    print(megabytes)\n\nif __name__ == \"__main__\":\n    main()\n", "\nX = int(input())\nN = int(input())\n\ntotal_used = 0\nfor i in range(N):\n    used = int(input())\n    total_used += used\n\nprint(X - total_used)\n", "\n\nx = int(input())\nn = int(input())\n\ntotal_used = 0\nfor i in range(n):\n    used = int(input())\n    total_used += used\n\nprint(x + total_used)\n", "\n\ndef func():\n    x = int(input(\"\"))\n    n = int(input(\"\"))\n\n    p = [0] * (n + 1)\n    for i in range(n):\n        p[i] = int(input(\"\"))\n\n    p[n] = x\n    for i in range(n - 1, -1, -1):\n        p[i] = p[i + 1] - p[i]\n\n    print(p[0])\n\n\nfunc()\n", "i = int(input())\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\nprint(i + a + b + c + d + e)\n", "\nprint(\"hello world!\")\n", "\n\n# number of megabytes available per month\nx = int(raw_input())\n\n# number of months\nn = int(raw_input())\n\n# list of megabytes spent each month\np = []\nfor i in range(n):\n    p.append(int(raw_input()))\n\n# megabytes remaining after n months\nremaining = x\nfor i in range(n):\n    remaining = remaining - p[i]\n    if remaining < 0:\n        remaining = 0\n\n# megabytes available in n+1 month\nprint(remaining + x)\n", "\n\n\"\"\"\nSolution\n\"\"\"\n\ndef main():\n    X = int(input())\n    N = int(input())\n    megabytes = X * 1024\n    for i in range(N):\n        megabytes = megabytes - int(input())\n    print(megabytes)\n\nif __name__ == '__main__':\n    main()\n", "\nX = int(input())\nN = int(input())\n\ntotal = X\nfor i in range(N):\n    total -= int(input())\n\nprint(total)\n", "\n#\n# X = int(input())\n# N = int(input())\n#\n# total = X\n# for i in range(N):\n#     total -= int(input())\n#\n\n\n# \nprint(total)\n", "\nx = int(input())\nn = int(input())\nres = x\nfor i in range(n):\n    res -= int(input())\n\nprint(res)\n", "# -*- coding: utf-8 -*-\n\n# ----------------------------------------------------------------------------\n# Name:         file\n# Purpose:      file\n#\n# Author:       Ivo\n#\n# Created:      03.02.2016\n# Copyright:    (c) Ivo 2016\n# Licence:      <your licence>\n# ----------------------------------------------------------------------------\n\n\nX = int(input())\nN = int(input())\n\ntotal = X\nfor i in range(N):\n    total -= int(input())\n\nprint(total)\n", "\n\n# Number of megabytes per month\nX = int(input())\n# Number of months\nN = int(input())\n# Megabytes per month\nmegabytes = [int(input()) for i in range(N)]\n\n# Total megabytes used\ntotal_megabytes = sum(megabytes)\n# Megabytes left\nmegabytes_left = X - total_megabytes\n\n# Total megabytes after N months\ntotal_megabytes_after_N_months = total_megabytes + megabytes_left\n\nprint(total_megabytes_after_N_months)\n", "\n\n\n\nX = int(input())\nN = int(input())\n\ntotal = X\nfor i in range(N):\n    total -= int(input())\n\nprint(total)\n", "\n\ndef func():\n    x = int(input())\n    n = int(input())\n\n    p = [0] * (n + 1)\n    for i in range(n):\n        p[i] = int(input())\n\n    p[n] = x\n    for i in range(n - 1, -1, -1):\n        p[i] = p[i + 1] - p[i]\n\n    print(p[0], end='')\n\n\nfunc()\n", "\"\"\"\n>>> X = int(input())\n>>> N = int(input())\n>>> total_used = 0\n>>> for i in range(N):\n...     used = int(input())\n...     total_used += used\n...\n>>> print(X + total_used)\n\"\"\"\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()\n", "\n# number of megabytes available per month.\nx = int(input())\n\n# number of months\nn = int(input())\n\n# list of megabytes spent each month\np = []\nfor i in range(n):\n    p.append(int(input()))\n\n# megabytes remaining after n months\nremaining = x\nfor i in range(n):\n    remaining = remaining - p[i]\n    if remaining < 0:\n        remaining = 0\n\n# megabytes available in n+1 month\nprint(remaining + x)\n", "\n\nx = int(input())\nn = int(input())\nres = x\nfor i in range(n):\n    res -= int(input())\n\n\n#\nprint(res)\n", "\n# Read input\nX = int(input())\nN = int(input())\nP = [int(input()) for i in range(N)]\n\n# Init\nMB_left = X\n\n# Loop through months and calculate remaining MBs\nfor i in range(N):\n    if MB_left >= P[i]:\n        MB_left -= P[i]\n    else:\n        MB_left = 0\n    MB_left += X\n\n# Print result\nprint(MB_left)\n", "\n#\n# x = int(input())\n# n = int(input())\n#\n# p = [0] * (n + 1)\n# for i in range(n):\n#     p[i] = int(input())\n#\n# p[n] = x\n# for i in range(n - 1, -1, -1):\n#     p[i] = p[i + 1] - p[i]\n#\n# print(p[0])\n"]