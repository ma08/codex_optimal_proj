2022-04-12 18:45:54.292464 num operations 2
2022-04-12 18:45:54.292474 size on input set 1
2022-04-12 18:45:57.073986 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    sheeps, wolfs = map(int, sys.stdin.readline().split())\n    if sheeps < wolfs:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    sheep, wolves = map(int, sys.stdin.readline().split())\n    if sheep < wolves:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\nfff\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    sheep, wolf = map(int, sys.stdin.readline().split())\n    if sheep < wolf:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649789154,
  "object": "edit"
}
2022-04-12 18:45:57.074230 fix spelling mistakes 3 ['\n\nimport sys\n\ndef main():\n    sheeps, wolfs = map(int, sys.stdin.readline().split())\n    if sheeps < wolfs:\n        print("unsafe")\n    else:\n        print("safe")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\n\ndef main():\n    sheep, wolves = map(int, sys.stdin.readline().split())\n    if sheep < wolves:\n        print("unsafe")\n    else:\n        print("safe")\nfff\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\n\ndef main():\n    sheep, wolf = map(int, sys.stdin.readline().split())\n    if sheep < wolf:\n        print("unsafe")\n    else:\n        print("safe")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 18:45:57.074255 size on output set 3
2022-04-12 18:45:57.074262 size on input set 3
2022-04-12 18:45:58.510166 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    sheep, wolves = map(int, sys.stdin.readline().split())\n    if sheep < wolves:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    sheep, wolves = map(int, sys.stdin.readline().split())\n    if sheep < wolves:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    sheep, wolves = map(int, sys.stdin.readline().split())\n    if sheep < wolves:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649789157,
  "object": "edit"
}
2022-04-12 18:45:58.510344 fix syntax errors 3 ['\n\nimport sys\n\ndef main():\n    sheep, wolves = map(int, sys.stdin.readline().split())\n    if sheep < wolves:\n        print("unsafe")\n    else:\n        print("safe")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\n\ndef main():\n    sheep, wolves = map(int, sys.stdin.readline().split())\n    if sheep < wolves:\n        print("unsafe")\n    else:\n        print("safe")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\n\ndef main():\n    sheep, wolves = map(int, sys.stdin.readline().split())\n    if sheep < wolves:\n        print("unsafe")\n    else:\n        print("safe")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 18:46:01.503652 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    sheep, wolf = map(int, sys.stdin.readline().split())\n    if sheep < wolf:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    sheep, wolf = map(int, sys.stdin.readline().split()) # split() returns a list of strings after breaking the given string by the specified separator.\n    if sheep < wolf: # if statement\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    sheep, wolves = map(int, sys.stdin.readline().split())\n    if sheep < wolves:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649789158,
  "object": "edit"
}
2022-04-12 18:46:01.503919 fix syntax errors 3 ['import sys\n\ndef main():\n    sheep, wolf = map(int, sys.stdin.readline().split())\n    if sheep < wolf:\n        print("unsafe")\n    else:\n        print("safe")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\n\ndef main():\n    sheep, wolf = map(int, sys.stdin.readline().split()) # split() returns a list of strings after breaking the given string by the specified separator.\n    if sheep < wolf: # if statement\n        print("unsafe")\n    else:\n        print("safe")\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    sheep, wolves = map(int, sys.stdin.readline().split())\n    if sheep < wolves:\n        print("unsafe")\n    else:\n        print("safe")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 18:46:04.231987 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    sheeps, wolves = map(int, sys.stdin.readline().split())\n    if sheeps < wolves:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    sheeps, wolfs = map(int, sys.stdin.readline().split())\n    if sheeps < wolfs:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    sheeps, wolves = map(int, sys.stdin.readline().split())\n    if sheeps < wolves:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649789161,
  "object": "edit"
}
2022-04-12 18:46:04.232176 fix syntax errors 3 ['#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    sheeps, wolves = map(int, sys.stdin.readline().split())\n    if sheeps < wolves:\n        print("unsafe")\n    else:\n        print("safe")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\n\ndef main():\n    sheeps, wolfs = map(int, sys.stdin.readline().split())\n    if sheeps < wolfs:\n        print("unsafe")\n    else:\n        print("safe")\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\n\ndef main():\n    sheeps, wolves = map(int, sys.stdin.readline().split())\n    if sheeps < wolves:\n        print("unsafe")\n    else:\n        print("safe")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 18:46:04.232201 size on output set 7
2022-04-12 18:46:04.232211 num operations 2
2022-04-12 18:46:04.232216 size on input set 1
2022-04-12 18:46:07.239152 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    sheeps, wolves = map(int, sys.stdin.readline().split())\n\n    if sheeps < wolves:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    sheep, wolves = map(int, sys.stdin.readline().split())\n\n    if sheep < wolves:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    sheeps, wolves = map(int, sys.stdin.readline().split())\n\n    if sheeps < wolves:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649789164,
  "object": "edit"
}
2022-04-12 18:46:07.239334 fix spelling mistakes 3 ['\n\nimport sys\n\ndef main():\n    sheeps, wolves = map(int, sys.stdin.readline().split())\n\n    if sheeps < wolves:\n        print("unsafe")\n    else:\n        print("safe")\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    sheep, wolves = map(int, sys.stdin.readline().split())\n\n    if sheep < wolves:\n        print("unsafe")\n    else:\n        print("safe")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\n\ndef main():\n    sheeps, wolves = map(int, sys.stdin.readline().split())\n\n    if sheeps < wolves:\n        print("unsafe")\n    else:\n        print("safe")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 18:46:07.239446 size on output set 2
2022-04-12 18:46:07.239454 size on input set 2
2022-04-12 18:46:10.350575 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    sheeps, wolves = map(int, sys.stdin.readline().split())\n\n    if sheeps < wolves:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    sheeps, wolves = map(int, sys.stdin.readline().split()) \n\n    if sheeps < wolves:\n        print(\"unsafe\") \n    else:\n        print(\"safe\") \n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n\n\nimport sys\n\ndef main():\n    sheeps, wolves = map(int, sys.stdin.readline().split())\n\n    if sheeps < wolves:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649789167,
  "object": "edit"
}
2022-04-12 18:46:10.350757 fix syntax errors 3 ['\nimport sys\n\ndef main():\n    sheeps, wolves = map(int, sys.stdin.readline().split())\n\n    if sheeps < wolves:\n        print("unsafe")\n    else:\n        print("safe")\n\nif __name__ == \'__main__\':\n    main()\n', '#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    sheeps, wolves = map(int, sys.stdin.readline().split()) \n\n    if sheeps < wolves:\n        print("unsafe") \n    else:\n        print("safe") \n\nif __name__ == \'__main__\':\n    main()\n', '\n\n\n\nimport sys\n\ndef main():\n    sheeps, wolves = map(int, sys.stdin.readline().split())\n\n    if sheeps < wolves:\n        print("unsafe")\n    else:\n        print("safe")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 18:46:13.040125 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    sheep, wolves = map(int, sys.stdin.readline().split()) # read two integers\n\n    if sheep < wolves:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    sheep, wolves = map(int, sys.stdin.readline().split()) #reads input and splits into two variables\n\n    if sheep < wolves:\n        print(\"unsafe\") \n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    sheep = int(sys.stdin.readline())\n    wolves = int(sys.stdin.readline())\n\n    if sheep < wolves:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649789170,
  "object": "edit"
}
2022-04-12 18:46:13.040284 fix syntax errors 3 ['import sys\n\ndef main():\n    sheep, wolves = map(int, sys.stdin.readline().split()) # read two integers\n\n    if sheep < wolves:\n        print("unsafe")\n    else:\n        print("safe")\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    sheep, wolves = map(int, sys.stdin.readline().split()) #reads input and splits into two variables\n\n    if sheep < wolves:\n        print("unsafe") \n    else:\n        print("safe")\n\nif __name__ == \'__main__\':\n    main()\n', 'import sys\n\ndef main():\n    sheep = int(sys.stdin.readline())\n    wolves = int(sys.stdin.readline())\n\n    if sheep < wolves:\n        print("unsafe")\n    else:\n        print("safe")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 18:46:13.040309 size on output set 6
