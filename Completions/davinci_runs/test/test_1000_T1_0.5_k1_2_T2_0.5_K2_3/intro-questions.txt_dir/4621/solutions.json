["H, W = map(int, input().split())\nfor _ in range(H):\n    C = input()\n    print(C)\n    print(C)", "H,W = map(int,input().split())\nlis = []\n\nfor _ in range(H):\n  C = input()\n  lis.append(C)\n  lis.append(C)\n\nfor i in lis:\n  print(i)", "h,w=map(int,input().split())\nc = [input() for _ in range(h)]\n\nfor i in c:\n    print(i)\n    print(i)", "#\n# abc049 b\n#\n\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"2 2\n*.\n.*\"\"\"\n        output = \"\"\"*.\n*.\n.*\n.*\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"1 4\n***.\"\"\"\n        output = \"\"\"***.\n***.\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_3(self):\n        input = \"\"\"9 20\n.....***....***.....\n....*...*..*...*....\n...*.....**.....*...\n...*.....*......*...\n....*.....*....*....\n.....**..*...**.....\n.......*..*.*.......\n........**.*........\n.........**.........\"\"\"\n        output = \"\"\".....***....***.....\n.....***....***.....\n....*...*..*...*....\n....*...*..*...*....\n...*.....**.....*...\n...*.....**.....*...\n...*.....*......*...\n...*.....*......*...\n....*.....*....*....\n....*.....*....*....\n.....**..*...**.....\n.....**..*...**.....\n.......*..*.*.......\n.......*..*.*.......\n........**.*........\n........**.*........\n.........**.........\n.........**.........\"\"\"\n        self.assertIO(input, output)\n\n\ndef resolve():\n    H, W = list(map(int, input().split()))\n    ans = []\n    for i in range(H):\n        S = input()\n        ans.append(S)\n        ans.append(S)\n\n    for i in range(2*H):\n        print((ans[i]))\n\n\ndef __starting_point():\n    # unittest.main()\n    resolve()\n\n__starting_point()", "def main():\n    H, W = list(map(int, input().split()))\n    for _ in range(H):\n        C = input()\n        print(C)\n        print(C)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys, math\nfrom itertools import combinations as c, product as p\nfrom collections import deque\nsys.setrecursionlimit(10**9)\n\n\ndef si(): return input()\ndef ii(): return int(input())\ndef fi(): return float(input())\ndef lstr(): return input().split()\ndef lint(): return list(map(int, input().split()))\ndef lint_dec(): return list([int(x) - 1 for x in input().split()])\ndef lnstr(n): return [input() for _ in range(n)]\ndef lnint(n): return [int(input()) for _ in range(n)]\ndef lint_list(n): return [lint() for _ in range(n)]\n\n\n\n############################################################\nH, W = lint()\nimage = lnstr(H)\nfor column in image:\n    print(column)\n    print(column)\n", "h, w = map(int, input().split())\nc = [list(input()) for i in range(h)]\nfor i in c:\n    for j in i:\n        print(j, end ='')\n    print('')\n    for j in i:\n        print(j, end ='')\n    print('')", "H, W = map(int, input().split())\nC = [input() for _ in range(H)]\n[print(C[i//2]) for i in range(2 * H)]", "h, w = list(map(int, input().split()))\n\nfor i in range(h):\n    c = input()\n    for i in range(2):\n        print(c)\n", "h,w= map(int,input().split())\nc = [input() for _ in range(h)]\nl = []\nfor i in range(h):\n    l.append(c[i])\n    l.append(c[i])\nfor i in l:\n    print(i)", "# coding: utf-8\n\nheight, width = map(int, input().split())\nfor i in range(height):\n    str = input()\n    print(str)\n    print(str)", "H, W = list(map(int, input().split()))\nC = []\nfor i in range(H):\n    x = str(input())\n    C.append(x)\nfor i in range(H):\n    print((C[i]))\n    print((C[i]))\n", "\nurl = \"https://atcoder.jp//contests/abc049/tasks/abc049_b\"\n\ndef main():\n    h, w = list(map(int, input().split()))\n    ss = [input() for _ in range(h)]\n    for s in ss:\n        print(s)\n        print(s)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "H, _ = map(int, input().split())\nfor _ in range(H):\n    row = input()\n    print(row)\n    print(row)", "h, w = map(int, input().split())\nc = []\nfor _ in range(h):\n    s = input()\n    c.append(s)\n    c.append(s)\nprint(\"\\n\".join(c))", "h,w = [int(x) for x in input().split()]\nfor i in range(h):\n  s = input()\n  print(s)\n  print(s)", "h,w = map(int,input().split())\nc = []\nfor _ in range(h):\n  c.append(input())\nfor i in range(h):\n  print(c[i])\n  print(c[i])", "h,j=map(int,input().split())\nfor i in range(h):\n    a=input()\n    print(a)\n    print(a)", "H, W = map(int, input().split())\nC = [input() for _ in range(H)]\nWprint = lambda x:(print(x),print(x))\nfor c in C:\n    Wprint(c) ", "h,w=map(int,input().split())\nfor i in range(h):\n    c=input()\n    print(c)\n    print(c)", "H,W = list(map(int,input().split()))\n\nfor h in range(H):\n  C=input()\n  print(C)\n  print(C)\n", "h, w = map(int,input().split())\nc = [list(input()) for i in range(h)]\nfor pic in c:\n    print(\"\".join(pic))\n    print(\"\".join(pic))", "#-*-coding:utf-8-*-\nimport sys\ninput=sys.stdin.readline\nimport numpy as np\n\ndef main():\n    dot=[]\n    h,w = map(int,input().split())\n    dot=np.array([list(input().rstrip()) for _ in range(h)])\n    \n    for i in range(1,h+1):\n        print(\"\".join(dot[i-1]))\n        print(\"\".join(dot[int(i+1/2)-1]))\n\ndef __starting_point():\n    main()\n__starting_point()", "h,w=map(int,input().split())\nc=[input() for _ in range(h)]\nfor i in range(h):\n  print(c[i])\n  print(c[i])", "h, w = list(map(int, input().split()))\n\nfor y in range(h):\n    s = input()\n    print(s)\n    print(s)\n", "H, W = list(map(int, input().split()))\nC = [[s for s in input().split()] for _ in range(H)]\n\nfor i in range(H):\n    print((*C[i]))\n    print((*C[i]))\n", "a,b=list(map(int,input().split()))\n\nfor i in range(a):\n  b=input()\n  \n  for i in range(2):\n    print(b)\n  \n", "h, w = map(int, input().split())\nP = [input() for _ in range(h)]\n\nfor s in P:\n    print(s)\n    print(s)", "h, w = map(int, input().split())\n\nlines = [input() for _ in range(h)]\n\nfor line in lines:\n  print(line)\n  print(line)", "h, w = map(int, input().split())\nc_l = [ str(input()) for _ in range(h) ]\n\nfor c in c_l:\n    print(c)\n    print(c)", "h, w = map(int, input().split())\nc = []\n\nfor i in range(h):\n    c.append(input().split())\n\nfor i in range(h):\n    s = ''.join(c[i])\n    print(s + '\\n' + s)", "H, W = map(int, input().split())\n\nC = [input() for _ in range(H)]\n\nfor c in C:\n    print(c)\n    print(c)", "h, w = map(int, input().split())  \nfor i in range(h):\n    s = input()\n    print(s)\n    print(s)", "H, W = map(int, input().split())\nC = [input() for i in range(H)]\n\nans = ['' for i in range(H*2)]\n\nfor i in range(H):\n    for j in range(W):\n        ans[2 * i] += C[i][j]\n        ans[2 * i + 1] += C[i][j]\nfor i in range(2 * H):\n    print(ans[i])", "h,w=map(int,input().split())\nc=[input() for i in range(h)]\nfor i in range(h):\n    print(c[i]+'\\n'+c[i])", "num = input().split()\nhei = int(num[0])\nwei = int(num[1])\n\nphoto = []\n\nfor i in range(hei):\n    temp = input()\n    temp = list(temp)\n    photo.append(temp)\n    photo.append(temp)\n    \nfor i in range(hei*2):\n    for j in range(wei):\n        print(photo[i][j],end=\"\")\n    print(\"\\n\",end=\"\")", "h, _ = list(map(int, input().split()))\nfor i in range(h):\n    s = input()\n    print((s+'\\n'+s))\n", "x,y = map(int,input().split())\nfor _ in range(x):\n  N = list(input())\n  for _ in range(2):\n    print(''.join(N))", "h, w = map(int, input().split())\na = []\nfor _ in range(h):\n    a.append(input())\nfor i in range(h):\n    print(a[i])\n    print(a[i])", "H, W = map(int, input().split())\n\nfor _ in range(H):\n    C = input()\n    print(C)\n    print(C)", "H, W = map(int, input().split())\n\nfor i in range(H):\n  s = input()\n  print(s)\n  print(s)", "H,W=list(map(int,input().split()))\nC=[input() for _ in range(H)]\nfor i in range(H):\n    print((C[i]))\n    print((C[i]))\n", "H, W = list(map(int, input().split()))\nfor i in range(H):\n    S = input()\n    print((S+'\\n'+S))\n", "n,m = map(int, input().split())\n\nfor i in range(n):\n  s = input()\n  print(s)\n  print(s)", "H, W = list(map(int, input().split()))\nL = []\nfor _ in range(H):\n    c = input()\n    L.append(c)\n    L.append(c)\n\nfor i in L:\n    print(i)\n", "h, w = map(int, input().split())\nfor _ in range(h):\n    s = input()\n    print(s)\n    print(s)", "H, W = map(int, input().split())\nL = []\n\nfor i in range(H):\n    C = list(map(str, input().split()))\n    L.append(C)\n    L.append(C)\n\nfor i in range(2*H):\n    print(L[i][0])", "from typing import List\n\n\ndef answer(h: int, w: int, c: List[str]) -> str:\n    result = []\n    for i in c:\n        for _ in range(2):\n            result.append(i)\n\n    return '\\n'.join(result)\n\n\ndef main():\n    h, w = list(map(int, input().split()))\n    c = [input() for _ in range(h)]\n    print((answer(h, w, c)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "h,w=map(int, input().split())\nl=[0]*2*h\nfor i in range(h):\n    c=input()\n    l[2*i]=c\n    l[2*i+1]=c\n    \nfor i in range(h):\n    print(l[2*i])\n    print(l[2*i+1])", "h, w = map(int,input().split())\n\nfor i in range(h):\n    c = input()\n    print(c)\n    print(c)", "h,w = map(int,input().split())\nc = []\nfor _ in range(h):\n  c.append(input())\n  \nfor i in range(2*h):\n  print(c[i//2])", "for i in range(int(input().split()[0])):\n a = input()\n print(a, a, sep='\\n')", "H, W = list(map(int, input().split()))\nfor i in range(H):\n    s = input()\n    print(s)\n    print(s)\n\n", "H,W = map(int, input().split())\nfor i in range(H):\n    x = input()\n    print(x)\n    print(x)", "H, W = map(int, input().split())\nC = [input() for _ in range(H)]\n\nfor i in range(2*H):\n   print(C[i// 2])", "a,b=input().split()\na=int(a)\nb=int(b)\nc=[input() for i in range(a)]\nfor i in range(a):\n  print(c[i])\n  print(c[i])", "h,w = map(int,input().split())\ndata=[]\nfor i in range(h):\n    data.append(input())\nfor i in range(2 * h):\n    print(data[i // 2])", "h, w = list(map(int, input().split()))\nc = []\nfor i in range(h):\n    s = input()\n    c.append(s)\n    c.append(s)\nprint((\"\\n\".join(c)))\n", "h,w=map(int,input().split())\nfor i in range(h):\n  c=input()\n  print(c)\n  print(c)", "h,w=map(int,input().split());[print(i+'\\n'+i) for i in [input() for _ in range(h)]]", "h, w = map(int, input().split())\nc = [list(input()) for i in range(h)]\n\nac = [[0] * (w) for i in range(2*h)]\nfor i in range(2*h):\n    for j in range(w):\n        ac[i][j] = c[i//2][j]\n\nfor s in ac:\n    print(*s, sep='')", "x,y = map(int,input().split())\nL = []\n\nfor _ in range(x):\n  N = list(input())\n  L.append(N)\n  L.append(N)\n  \nfor l in L:\n  print(''.join(l))", "h,w = map(int,input().split())\nc = []\nfor i in range(h):\n    a = input()\n    c.append(a)\nfor i in range(h):\n    print(c[i])\n    print(c[i])", "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(200000)\n\n\ndef read():\n    H, W = list(map(int, input().strip().split()))\n    C = []\n    for i in range(H):\n        c = input().strip()\n        C.append(c)\n    return H, W, C\n\n\ndef solve(H, W, C):\n    for c in C:\n        print(c)\n        print(c)\n\n\ndef __starting_point():\n    inputs = read()\n    solve(*inputs)\n\n__starting_point()", "H, W = [int(a) for a in input().split()]\nlst = []\nfor i in range(H):\n  lst.append(input())\n  \nfor i in range(H):\n  print(lst[i])\n  print(lst[i])", "h, w = list(map(int, input().split()))\nstr = [input() for i in range(h)]\nfor i in range(h):\n    print((str[i]))\n    print((str[i]))\n", "h, w = list(map(int, input().split()))\nfor _ in range(h):\n    s = input()\n    print(s)\n    print(s)\n", "h,w = map(int,input().split())\nfor i in range(h):\n    x = input()\n    print(x)\n    print(x)", "h, w = map(int, input().split())\nfor i in range(h):\n  row = input()\n  print(row)\n  print(row)", "H, W = map(int, input().split())\nC = [input() for _ in range(H)]\n \nfor i in range(H):\n  print(C[i])\n  print(C[i])", "H, W = map(int, input().split())\nfor i in range(H):\n  x = input()\n  print(x)\n  print(x)", "h, w = map(int,input().split())\npixel = [input() for _ in range(h)]\nfor i in pixel:\n    for j in range(2):\n        print(i)", "H,W = map(int, input().split())\n\nfor i in range(H):\n    x = input()\n    print(x)\n    print(x)", "h,w=map(int,input().split())\nfor i in range(h):\n    c=input()\n    c=c+\"\\n\"+c\n    print(c)", "from typing import List\n\n\ndef answer(h: int, w: int, c: List[str]) -> str:\n    result = ''\n    for i in c:\n        for j in range(2):\n            result += f'{i}\\n'\n\n    return result[:-1]\n\n\ndef main():\n    h, w = list(map(int, input().split()))\n    c = [input() for _ in range(h)]\n    print((answer(h, w, c)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "h, w = map(int, input().split())  \nfor i in range(h):\n    s = input()\n    print(s)\n    print(s)", "h,w=map(int,input().split())\nfor i in range(h):\n  c=input()\n  print(c)\n  print(c)", "h, w = map(int, input().split())\nc_lst = [list(map(str, input().split())) for _ in range(h)]\n\nnew_lst = []\nfor i in range(h):\n    new_lst.append(c_lst[i])\n    new_lst.append(c_lst[i])\n\nfor i in range(len(new_lst)):\n    new = new_lst[i][0]\n    print(new)", "h, w = map(int, input().split())\nc = []\nfor _ in range(h):\n    c.append(list(input()))\nfor i in range(2*h):\n    print(\"\".join(c[i//2]))", "h, w = list(map(int, input().split()))\nc = []\nfor i in range(h):\n    c.append(input())\n\nfor i in range(h * 2):\n    res = \"\"\n    for j in range(w):\n        res += c[i // 2][j]\n    print(res)\n", "h, _ = list(map(int, input().split()))\nfor _ in range(h):\n    s = input()\n    print((s+'\\n'+s))\n", "h, w = list(map(int, input().split()))\nfor _ in range(h):\n    s = input()\n    print(s)\n    print(s)\n", "#!/usr/bin/env python3\nH, W = list(map(int, input().split()))\nc = [input() for i in range(H)]\n\nfor i in range(H):\n    print((c[i]))\n    print((c[i]))\n", "h, w = map(int, input().split())\np = [input() for _ in range(h)]\nfor i in range(h):\n    print(p[i])\n    print(p[i])", "h,w = map(int,input().split())\nc = []\nfor _ in range(h):\n    c.append(input())\nfor i in range(h):\n    print(c[i])\n    print(c[i])", "h,w=map(int,input().split())\nfor _ in range(h):\n    c=input()\n    print(c)\n    print(c)", "H,W = map(int, input().split())\n\nC = [input() for i in range(H)]\n\nfor i in range(H):\n    print(C[i])\n    print(C[i])", "h,w = map(int,input().split())\n\nfor i in range(h):\n\ta = input()\n\tprint(a)\n\tprint(a)", "h,w = map(int, input().split())\nfor i in range(h):\n  s = input()\n  print(s)\n  print(s)", "H,W=list(map(int,input().split()))\n\nfor i in range(H):\n    S=input()\n    print(S)\n    print(S)\n", "h,w = map(int,input().split())\nfor i in range(h):\n    s = input()\n    print(s)\n    print(s)", "h, w = map(int, input().split())\nfor i in range(h):\n  str_ = input()\n  print(str_)\n  print(str_)", "n,m = list(map(int,input().split()))\nfor i in range(n):\n  q = input()\n  print(q)\n  print(q)\n", "H, W = map(int,input().split())\ngrid = []\nfor i in range(H):\n    array = list(input().strip().split())\n    grid.append(array)\n\nfor i in range(H):\n    print(''.join(grid[i]))\n    print(''.join(grid[i]))", "H, W = [int(x) for x in input().split()]\nfor i in range(H):\n    str_list = input()\n    print(str_list)\n    print(str_list)", "import copy\nh,w = map(int,input().split())\nli = []\nfor i in range(h):\n    li.append(input())\n#print(li)\nlis = copy.copy(li)\n#print(lis)\n#list1 = li+lis\n#print(list1)\nfor i in range(h):\n    print(li[i])\n    print(lis[i])", "h, w = map(int, input().split())\nfor i in range(h):\n    c = input()\n    print(c)\n    print(c)", "h,w=list(map(int,input().split()))\nl=[input()for _ in range(h)]\nfor i in l:\n    print(i)\n    print(i)\n", "h, w = list(map(int, input().split()))\nc = [list(input()) for _ in range(h)]\ncc = [[] for i in range(2 * h)]\nfor i in range(h):\n    cc[2*i].append(c[i])\n    print((\"\".join(*cc[2*i])))\n    cc[2*i + 1].append(c[i])\n    print((\"\".join(*cc[2*i + 1])))\n\n"]