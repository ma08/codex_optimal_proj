["\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x+y)/2)\n\nprint(v[0])\n", "\n\ndef main():\n    print(\"hello world\")\nif __name__ == '__main__':\n    main()\n", "# -*- coding: utf-8 -*-\n\nimport sys, heapq\n\ndef main():\n    N = int(sys.stdin.readline())\n    V = list(map(int, sys.stdin.readline().split()))\n    heapq.heapify(V)\n    for i in range(N-1):\n        x = heapq.heappop(V)\n        y = heapq.heappop(V)\n        heapq.heappush(V, (x+y)/2)\n\n    print(V[0])\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    print(\"Hello world!\")\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    print(\"Hello World\")\n\nif __name__ == '__main__':\n    main()\n", "# file\n\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n \nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x+y)/2)\n\nprint(v[0])\n", "\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n \nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x+y)/2)\n\nprint(v[0])\n", "\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, int((x+y)/2))\n\nprint(v[0])\n", "\n\ndef main():\n    num_ingredients = int(input())\n    ingredients = list(map(int, input().split()))\n    ingredients.sort()\n\n    while len(ingredients) > 1:\n        ingredients[0] = (ingredients[0] + ingredients[1]) / 2\n        ingredients.pop(1)\n        ingredients.sort()\n\n    print(ingredients[0])\n\nif __name__ == '__main__':\n    main()\n"]