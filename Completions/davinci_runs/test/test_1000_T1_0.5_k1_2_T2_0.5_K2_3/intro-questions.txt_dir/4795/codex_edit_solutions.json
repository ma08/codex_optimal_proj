["n = int(input())\ntotal = 0\n\nfor _ in range(n):\n    total = total + int(input())\nprint(total)\n", "def main():\n    num = int(input(\"enter the number of integers: \"))\n    nums = []\n    for i in range(num):\n        nums.append(int(input(\"enter the integer: \")))\n    total = 0\n    for i in nums:\n        if i >= 10 and i < 100:\n            total += i % 10\n        elif i >= 100 and i < 1000:\n            total += (i // 100) ** 2\n        elif i >= 1000 and i < 10000:\n            total += (i // 1000) ** 3\n    print(\"total is: {}\".format(total))\n\nif __name__ == '__main__':\n    main()\n", "N = int(input())  # number of test cases\noutput = 0  # output\nfor i in range(N):  # loop through test cases\n    power = 0  # power of each number\n    number = input()  # the number\n    for i in range(len(number)):  # loop through each digit in number\n        power += int(number[i])  # add each digit to the power\n    output += power ** len(number)  # add the number to the output\nprint(output)  # print the output\n", "# this is a comment\nn = int(input())\ntotal = 0\n\nfor _ in range(n):\n    total += int(input())\nprint(total)\n", "\n\n# For each number, work out the base of the number by dividing the length by 2 (integer division).\n# Then, work out the exponent of the number by subtracting the base from the length and adding 1.\n# Finally, work out the value of the number by taking the base to the power of the exponent and adding 1.\n# Add up all of the values and print the total.\n\nimport math\n\ndef main():\n    n = int(input())\n    numbers = []\n    for i in range(n):\n        numbers.append(int(input()))\n    total = 0\n    for number in numbers:\n        length = len(str(number))\n        base = int(length / 2)\n        power = length - base + 1\n        total += int(math.pow(base, power))\n    print(total)\n\nmain()\n", "result = 0\nfor i in list_of_values:\n    for j in range(1, len(i)):\n        if int(i[j]) != 0:\n            result += int(i[:j]) ** int(i[j])\n            break\nprint(result)\n", "\n\ndef main():\n    num = int(input())\n    nums = []\n    for i in range(num):\n        nums.append(int(input()))\n    total = 0\n    for i in nums:\n        if 10 <= i < 100: # 10-99\n            total += i % 10\n        elif 100 <= i < 1000: # 100-999\n            total += (i // 100) ** 2\n        elif 1000 <= i < 10000: # 1000-9999\n            total += (i // 1000) ** 3\n    print(total)\n\nif __name__ == '__main__':\n    main()\n", "# First task\n\n\ndef first_task():\n    n = int(input())\n    list_of_values = []\n    while n > 0:\n        number = input()\n        list_of_values.append(number)\n        n -= 1\n\n    result = 0\n    for i in list_of_values:\n        for j in range(1, len(i)):\n            if int(i[j]) != 0:\n                result += int(i[:j]) ** int(i[j])\n                break\n    print(result)\n\n\ndef second_task():\n    n = int(input())\n    list_of_values = []\n    while n > 0:\n        number = input()\n        list_of_values.append(number)\n        n -= 1\n\n    result = 0\n    for i in list_of_values:\n        for j in range(1, len(i)):\n            if int(i[j]) != 0:\n                result += int(i[:j]) ** int(i[j])\n                break\n    print(result)\n\n\ndef third_task():\n    n = int(input())\n    list_of_values = []\n    while n > 0:\n        number = input()\n        list_of_values.append(number)\n        n -= 1\n\n    result = 0\n    for i in list_of_values:\n        for j in range(1, len(i)):\n            if int(i[j]) != 0:\n                result += int(i[:j]) ** int(i[j])\n                break\n    print(result)\n\n\ndef fourth_task():\n    n = int(input())\n    list_of_values = []\n    while n > 0:\n        number = input()\n        list_of_values.append(number)\n        n -= 1\n\n    result = 0\n    for i in list_of_values:\n        for j in range(1, len(i)):\n            if int(i[j]) != 0:\n                result += int(i[:j]) ** int(i[j])\n                break\n    print(result)\n\n\ndef fifth_task():\n    n = int(input())\n    list_of_values = []\n    while n > 0:\n        number = input()\n        list_of_values.append(number)\n        n -= 1\n\n    result = 0\n    for i in list_of_values:\n        for j in range(1, len(i)):\n            if int(i[j]) != 0:\n                result += int(i[:j]) ** int(i[j])\n                break\n    print(result)\n\n\ndef sixth_task():\n    n = int(input())\n    list_of_values = []\n    while n > 0:\n        number = input()\n        list_of_values.append(number)\n        n -= 1\n\n    result = 0\n    for i in list_of_values:\n        for j in range(1, len(i)):\n            if int(i[j]) != 0:\n                result += int(i[:j]) ** int(i[j])\n                break\n    print(result)\n\n\ndef seventh_task():\n    n = int(input())\n    list_of_values = []\n    while n > 0:\n        number = input()\n        list_of_values.append(number)\n        n -= 1\n\n    result = 0\n    for i in list_of_values:\n        for j in range(1, len(i)):\n            if int(i[j]) != 0:\n                result += int(i[:j]) ** int(i[j])\n                break\n    print(result)\n\n\ndef eighth_task():\n    n = int(input())\n    list_of_values = []\n    while n > 0:\n        number = input()\n        list_of_values.append(number)\n        n -= 1\n\n    result = 0\n    for i in list_of_values:\n        for j in range(1, len(i)):\n            if int(i[j]) != 0:\n                result += int(i[:j]) ** int(i[j])\n                break\n    print(result)\n\n\ndef ninth_task():\n    n = int(input())\n    list_of_values = []\n    while n > 0:\n        number = input()\n        list_of_values.append(number)\n        n -= 1\n\n    result = 0\n    for i in list_of_values:\n        for j in range(1, len(i)):\n            if int(i[j]) != 0:\n                result += int(i[:j]) ** int(i[j])\n                break\n    print(result)\n\n\ndef tenth_task():\n    n = int(input())\n    list_of_values = []\n    while n > 0:\n        number = input()\n        list_of_values.append(number)\n        n -= 1\n\n    result = 0\n    for i in list_of_values:\n        for j in range(1, len(i)):\n            if int(i[j]) != 0:\n                result += int(i[:j]) ** int(i[j])\n                break\n    print(result)\n\n\nif __name__ == '__main__':\n    first_task()\nprint(result)\n", "\nn = int(input())\n\ntotl = 0\n\nfor _ in range(n):\n    totl += int(input())\n\nprint(totl)\n", "#!/usr/bin/env python3\n\nn = int(input())\n# for loop\ntotal = 0\n\nfor _ in range(n):\n    total += int(input())\n\n\nprint(total)\n", "# for loop\n\nn = int(input())\ntotal = 0\n\nfor _ in range(n):\n    total += int(input())\n\nprint(total)\n", "\n\nN = int(input())\n\nfor i in range(N):\n    P = int(input())\n    if len(str(P)) == 2:  # if length of number is 2\n        print(int(str(P)[0]) **\n              int(str(P)[1])+int(str(P)[1]) ** int(str(P)[0]), end=\"\")\n    else:  # if length of number is more than 2\n        print(int(str(P)[0]) **\n              int(str(P)[1])+int(str(P)[1]) ** int(str(P)[2])+int(str(P)[2]) ** int(str(P)[0]), end=\"\")\n    if i < N-1:\n        print(\"+\", end=\"\")\n", "N = int(input())\noutput = 0\nfor i in range(N):\n    power = 0\n    number = input()\n    for i in range(len(number)):\n        power += int(number[i])\n    output += power ** len(number)\nprint(output)\n", "\n\nN = int(input())\n\nfor i in range(N):\n    P = int(input())\n    if len(str(P)) == 2:\n        print(int(str(P)[0])**int(str(P)[1])+int(str(P)[1])**int(str(P)[0]))\n    else:\n        print(int(str(P)[0])**int(str(P)[1])+int(str(P)[1])**int(str(P)[2])+int(str(P)[2])**int(str(P)[0]))\n", "N = int(input())\nX = 0\n\nfor i in range(N):\n    P = input()\n    X += int(P[-1]) ** int(P[0])\n\nprint(X)\n", "\n\n# Given a number, work out the length of the number\n# Then, for each digit in the number, work out the base of the digit by dividing the length by 2\n# Then, work out the power of the digit by subtracting the base from the length\n# Finally, work out the value of the digit by taking the base to the power of the power\n# Add up all of the values\n\nimport math\n\ndef main():\n    n = int(input())\n    numbers = []\n    for i in range(n):\n        numbers.append(int(input()))\n    total = 0\n    for number in numbers:\n        length = len(str(number))\n        base = int(length / 2)\n        power = length - base\n        total += int(math.pow(base, power))\n    print(total)\n\nmain()\n", "\n\n# Work out the length of the numbers\n# Then, for each number, work out the base of the number by dividing the length by 2.\n# Then, work out the power of the number by subtracting the base from the length.\n# Finally, work out the value of the number by taking the base to the power of the power.\n# Add up all of those values.\n\nimport math\n\ndef main():\n    n = int(input())\n    numbers = []\n    for i in range(n):\n        numbers.append(int(input()))\n    total = 0\n    for number in numbers:\n        length = len(str(number))\n        base = int(length / 2)\n        power = length - base\n        total += int(math.pow(base, power))\n    print(total)\n\nmain()\n", "\n\nimport sys\n\ndef main(arg):\n    print(arg)\n\nif __name__ == \"__main__\":\n    main(sys.argv[1])\n", "n = int(input())\nresult = 0\nfor i in range(n):\n    number = input()\n    for j in range(1, len(number)):\n        if int(number[j]) != 0:\n            result += int(number[:j]) ** int(number[j])\n            break\nprint(result)\n", "print('Hello World')\n", "\n\nN = int(input())\n\nfor i in range(N):\n    P = int(input())\n    if len(str(P)) == 2:\n        print(int(str(P)[0])**int(str(P)[1])+int(str(P)[1])**int(str(P)[0]), end=\"\")  # if lenght of number is 2\n    else:\n        print(int(str(P)[0])**int(str(P)[1])+int(str(P)[1])**int(str(P)[2])+int(str(P)[2])**int(str(P)[0]), end=\"\")  # if length of number is 3\n    if i < N-1:\n        print(\"+\", end=\"\")\n", "import sys\n\ndef main():\n    n = read_int()\n    nums = [read_int() for _ in range(n)]\n    result = 0\n    for num in nums:\n        result += solve(num)\n    print(result)\n\ndef solve(num):\n    num = str(num)\n    length = len(num)\n    if length == 1:\n        return int(num)\n    else:\n        return int(num[0])**(length-1) + int(num[1:])\n\ndef read_int():\n    return int(sys.stdin.readline().strip())\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nn = int(input())\nprint(fact(n))\n", "import sys\n\ndef main():\n    n = read_int()\n    nums = [read_int() for _ in range(n)]\n    result = 0\n    for num in nums:\n        result += solve(num)\n    print(result)\n\ndef solve(num):\n    num = str(num)\n    length = len(num)\n    if length == 1:\n        return int(num)\n    else:\n        return int(num[0])**(length-1) + int(num[1:]) \n\ndef read_int():\n    return int(sys.stdin.readline().strip())\n\nif __name__ == '__main__':\n    main()\n", "\nn = int(input())\nlist_of_values = []\nwhile n > 0:\n    number = input()\n    list_of_values.append(number)\n    n -= 1\n\nresult = 0\nfor i in list_of_values:\n    for j in range(1, len(i)):\n        if int(i[j]) != 0:\n            result += int(i[:j]) ** int(i[j:])\n            break\nprint(result)\n", "N = int(input())\noutput = 0\nfor i in range(N):\n    pow = 0\n    number = input()\n    for i in range(len(number)):\n        pow += int(number[i])\n    output += pow ** len(number)\nprint(output)\n", "import sys\n\n\ndef main():\n    n = read_int()\n    nums = [read_int() for _ in range(n)]\n    result = 0\n    for num in nums:\n        result += solve(num)\n    print(result)\n\ndef solve(num):\n    num = str(num)\n    length = len(num)\n    if length == 1:\n        return int(num)\n    else:\n        return int(num[0])**(length-1) + int(num[1:])\n\ndef read_int():\n    return int(sys.stdin.readline().strip())\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef is_prime(n):\n    if n == 1:\n        return False\n    for i in range(2, n):\n        if n % i == 0:\n            return False\n    return True\nlist_of_values = [1, 2, 3, 4]\n\n\nresult = 0\nfor i in range(1, len(list_of_values)):\n    if int(list_of_values[i]) != 0:\n        result += int(list_of_values[:i]) ** int(list_of_values[i])\n        break\nprint(result)\n", "n = int(input())\ntotal = 0\n\nfor _ in range(n):\n    total += int(input())\nprint(total)\n", "\n\nN = int(input())\n\nX = []\n\nfor i in range(N):\n    P = input()\n    X.append(int(P[-1]) ** int(P[0]))\n\nprint(sum(X))\n", "\n\nn = int(input())\n\ntotal = 0\n# for loop\n\nfor _ in range(n):\n    total += int(input())\n\nprint(total)\n", "\nn = int(input())\ntotl = 0\n\nfor _ in range(n):\n    totl += int(input())\nprint(totl)\n", "\n\nN = int(input())\n\nX = 0\n\nfor i in range(N):\n    P = input()\n    X += int(P[-1]) ** int(P[0])\n\nprint(X)\n", "\n\ndef main():\n    num = int(input())\n    nums = []\n    for i in range(num):\n        nums.append(int(input()))\n    total = 0\n    for i in nums:\n        if i >= 10 and i < 100:  # 10-99\n            total += i % 10\n        elif i >= 100 and i < 1000:  # 100-999\n            total += (i // 100) ** 2\n        elif i >= 1000 and i < 10000:  # 1000-9999\n            total += (i // 1000) ** 3\n    print(total)\n\nif __name__ == '__main__':\n    main()\n", "N = int(input())\nX = 0\nfor i in range(N):\n    P = input()\n    X += int(P[-1]) ** int(P[0])\nprint(X)\n", "\n\n# Work out the length of the numbers.\n# Then, for each number, work out the base of the number by dividing the length by 2 (integer division).\n# Then, work out the exponent of the number by subtracting the base from the length.\n# Finally, work out the value of the number by taking the base to the power of the exponent.\n# Add up all of the values.\nimport math\n\ndef main():\n    n = int(input())\n    numbers = []\n    for i in range(n):\n        numbers.append(int(input()))\n    total = 0\n    for number in numbers:\n        length = len(str(number))\n        base = int(length / 2)\n        power = length - base\n        total += int(math.pow(base, power))\n    print(total)\n\nmain()\n", "class Solution:\n    def lengthOfLongestSubstring(self, s: str) -> int:\n        if len(s) == 0:\n            return 0\n        if len(s) == 1:\n            return 1\n        if len(s) == 2 and s[0] == s[1]:\n            return 1\n        if len(s) == 2 and s[0] != s[1]:\n            return 2\n        if len(s) > 2:\n            string = s[0]\n            result = 1\n            i = 1\n            while i < len(s):\n                if s[i] not in string:\n                    string += s[i]\n                    result = max(result, len(string))\n                else:\n                    string = string[string.index(s[i]) + 1:]\n                    string += s[i]\n                    result = max(result, len(string))\n                i += 1\n            return result\n\n\ns = Solution()\nprint(s.lengthOfLongestSubstring(\"pwwkew\"))\n", "\n\nN = int(input())  # N is the number of test cases\n\nfor i in range(N):\n    P = int(input())  # P is the input number\n    if len(str(P)) == 2:  # if the input number is two digits\n        print(int(str(P)[0])**int(str(P)[1])+int(str(P)[1])**int(str(P)[0]), end=\"\")  # print the sum of the first digit to the power of the second digit and the second digit to the power of the first digit, without a new line\n    else:\n        print(int(str(P)[0])**int(str(P)[1])+int(str(P)[1])**int(str(P)[2])+int(str(P)[2])**int(str(P)[0]), end=\"\")  # print the sum of the first digit to the power of the second digit, the second digit to the power of the third digit and the third digit to the power of the first digit, without a new line\n    if i < N-1:  # if it is not the last iteration\n        print(\"+\", end=\"\")  # print a plus sign\n", "\n\nN = int(input())  # N is the number of test cases\n\nfor i in range(N):\n    P = int(input())  # P is the input number\n    if len(str(P)) == 2:  # if the input number is two digits\n        print(int(str(P)[0])**int(str(P)[1])+int(str(P)[1])**int(str(P)[0]), end=\"\")  # print the sum of the first digit to the power of the second digit and the second digit to the power of the first digit and the third digit to the power of the first digit\n    else:\n        print(int(str(P)[0])**int(str(P)[1])+int(str(P)[1])**int(str(P)[2])+int(str(P)[2])**int(str(P)[0]), end=\"\")  # print the sum of the first digit to the power of the second digit, the second digit to the power of the third digit and the third digit to the power of the first digit\n    if i < N-1:  # if it is not the last iteration\n        print(\"+\", end=\"\")  # print a plus sign\n", "\nN = int(input())\n\nfor i in range(N):\n    P = int(input())\n    if len(str(P)) == 2:\n        print(int(str(P)[0])**int(str(P)[1])+int(str(P)[1])**int(str(P)[0]), end=\"+\\n\")\n    else:\n        print(int(str(P)[0])**int(str(P)[1])+int(str(P)[1])**int(str(P)[2])+int(str(P)[2])**int(str(P)[0]), end=\"+\\n\")\n", "import sys\n\ndef main():\n    pass\n\ndef solve(num):\n    num = str(num)\n    length = len(num)\n    if length == 1:\n        return int(num)\n    else:\n        return int(num[0])**(length-1) + int(num[1:])\n\ndef read_int():\n    return int(sys.stdin.readline().strip())\n\nif __name__ == '__main__':\n    main()\n", "\nN = int(input())  # N is the number of test cases\n\nfor i in range(N):\n    P = int(input())  # P is the input number\n    if len(str(P)) == 2:  # if the input number is two digits\n        print(int(str(P)[0])**int(str(P)[1])+int(str(P)[1])**int(str(P)[0]), end=\"\")  # print the sum of the first digit to the power of the second digit and the second digit to the power of the first digit and a newline\n    else:\n        print(int(str(P)[0])**int(str(P)[1])+int(str(P)[1])**int(str(P)[2])+int(str(P)[2])**int(str(P)[0]), end=\"\")  # print the sum of the first digit to the power of the second digit, the second digit to the power of the third digit and the third digit to the power of the first digit and a newline\n    if i < N-1:  # if it is not the last iteration\n        print(\"+\", end=\"\")  # print a plus sign and a newline\n", "\ndef main():\n    num = int(input())\n    nums = []\n    for i in range(num):\n        nums.append(int(input()))\n    total = 0\n    for i in nums:\n        if i >= 10 and i < 100:\n            total += i % 10\n        elif i >= 100 and i < 1000:\n            total += (i // 100) ** 2\n        elif i >= 1000 and i < 10000:\n            total += (i // 1000) ** 2\n    print(total)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    num = int(input(\"Enter the number of elements: \"))\n    nums = []\n    for i in range(num):\n        nums.append(int(input(\"Enter the number: \")))\n    total = 0\n    for i in nums:\n        if i >= 10 and i < 100:\n            total += i % 10\n        elif i >= 100 and i < 1000:\n            total += (i // 100) ** 2\n        elif i >= 1000 and i < 10000:\n            total += (i // 1000) ** 3\n    print(total)\n\nif __name__ == '__main__':\n    main()\n", "def is_prime(n):\n    if n == 1:\n        return False\n    for i in range(2, n):\n        if n % i == 0:\n            return False\n    return True\nlist_of_values = input().split()\n\n\nresult = 0\nfor i in list_of_values:\n    for j in range(1, len(i)):\n        if int(i[j]) != 0:\n            result += int(i[:j]) ** int(i[j])\n            break\nprint(result)\n", "\nN = int(input()) # Number of data points\n\nX = 0 # Sum of the last digits\n\nfor i in range(N):\n    P = input() # Data point\n    X += int(P[-1]) ** int(P[0]) # Sum of the last digit raised to the power of the first digit\n\nprint(X)\n", "import math\n\n# Work out the lengths of the numbers\n# Then, for each number, work out the base of the number by dividing the length by 2\n# Then, work out the power of the number by subtracting the base from the length\n# Finally, work out the value of the number by taking the base to the power of the power\n# Add up all of those values\n\ndef main():\n    n = int(input(\"\"))\n    numbers = []\n    for i in range(n):\n        numbers.append(int(input(\"\")))\n    total = 0\n    for number in numbers:\n        length = len(str(number))\n        base = int(length / 2)\n        power = length - base\n        total += int(math.pow(base, power))\n    print(total)\n\nmain()\n", "\n\nN = int(input())\n\noutput = 0\nfor i in range(N):\n    power = 0\n    number = input()\n    for i in range(len(number)):\n        power += int(number[i])\n    output += power ** len(number)\nprint(output)\n", "import sys\n\ndef main():\n    n = read_int()\n    nums = [read_int() for _ in range(n)]\n    result = 0\n    for num in nums:\n        result += solve(num)\n    print(result)\n\n\ndef solve(num):\n    num = str(num)\n    length = len(num)\n    if length == 1:\n        return int(num)\n    else:\n        return int(num[0])**(length-1) + int(num[1:])\n\ndef read_int():\n    return int(sys.stdin.readline().strip())\n\nif __name__ == '__main__':\n    main()\n", "\nN = int(input())\noutput = 0\nfor i in range(N):\n    power = 0\n    number = input()\n    for i in range(len(number)):\n        power += int(number[i])\n    output += power ** len(number)\nprint(output)\n", "\nN = int(input())\nX = 0\n\nfor i in range(N):\n    P = input()\n    X += int(P[-1]) ** int(P[0]) % 10\n\nprint(X)\n", "\n\n# # Work out the length of the numbers.\n# # Then, for each number, work out the base of the number by dividing the length by 2\n# # Then, work out the power of the number by subtracting the base from the length\n# # Finally, work out the value of the number by taking the base to the power of the power\n# # Add up all of those values\n#\n# import math\n#\n# def main():\n#     n = int(input())\n#     numbers = []\n#     for i in range(n):\n#         numbers.append(int(input()))\n#     total = 0\n#     for number in numbers:\n#         length = len(str(number))\n#         base = int(length / 2)\n#         power = length - base\n#         total += int(math.pow(base, power))\n#     print(total)\n#\n# main()\n", "\n\nN = int(input())\n\nX = 0\n\nfor i in range(N):\n    P = int(input())\n    X += P ** P \n\nprint(X)\n", "\nn = int(input())\nlist_of_values = []\n\nwhile n > 0:\n    number = input()\n    list_of_values.append(number)\n    n -= 1\n\nresult = 0\nfor i in list_of_values:\n    for j in range(1, len(i)):\n        if int(i[j]) != 0:\n            result += int(i[:j]) ** int(i[j])\n            break\nprint(result)\n", "#!/usr/bin/python3\nN = int(input())\nX = 0\n\nfor i in range(N):\n    P = input()\n    X += int(P[-1]) ** int(P[0])\n\nprint(X)\n", "\n\nN = int(input())\n\nfor i in range(N):\n    P = int(input())\n    if len(str(P)) == 2:  # if lenght of number is 2\n        print(int(str(P)[0])**int(str(P)[1])+int(str(P)[1])**int(str(P)[0]), end=\"+\")\n    else:  # if length of number is 3\n        print(int(str(P)[0])**int(str(P)[1])+int(str(P)[1])**int(str(P)[2])+int(str(P)[2])**int(str(P)[0]), end=\"+\")\n", "# First task\n\nn = int(input())\nlist_of_values = []\nwhile n > 0:\n    number = input()\n    list_of_values.append(number)\n    n -= 1\n\nresult = 0\nfor i in list_of_values:\n    for j in range(1, len(i)):\n        if int(i[j]) != 0:\n            result += int(i[:j]) ** int(i[j])\n            break\n\n# Second task\n\n\ndef first_task():\n    n = int(input())\n    list_of_values = []\n    while n > 0:\n        number = input()\n        list_of_values.append(number)\n        n -= 1\n\n    result = 0\n    for i in list_of_values:\n        for j in range(1, len(i)):\n            if int(i[j]) != 0:\n                result += int(i[:j]) ** int(i[j])\n                break\n    print(result)\n\n\ndef second_task():\n    n = int(input())\n    list_of_values = []\n    while n > 0:\n        number = input()\n        list_of_values.append(number)\n        n -= 1\n\n    result = 0\n    for i in list_of_values:\n        for j in range(1, len(i)):\n            if int(i[j]) != 0:\n                result += int(i[:j]) ** int(i[j])\n                break\n    print(result)\n\n\ndef third_task():\n    n = int(input())\n    list_of_values = []\n    while n > 0:\n        number = input()\n        list_of_values.append(number)\n        n -= 1\n\n    result = 0\n    for i in list_of_values:\n        for j in range(1, len(i)):\n            if int(i[j]) != 0:\n                result += int(i[:j]) ** int(i[j])\n                break\n    print(result)\n\n\ndef fourth_task():\n    n = int(input())\n    list_of_values = []\n    while n > 0:\n        number = input()\n        list_of_values.append(number)\n        n -= 1\n\n    result = 0\n    for i in list_of_values:\n        for j in range(1, len(i)):\n            if int(i[j]) != 0:\n                result += int(i[:j]) ** int(i[j])\n                break\n    print(result)\n\n\ndef fifth_task():\n    n = int(input())\n    list_of_values = []\n    while n > 0:\n        number = input()\n        list_of_values.append(number)\n        n -= 1\n\n    result = 0\n    for i in list_of_values:\n        for j in range(1, len(i)):\n            if int(i[j]) != 0:\n                result += int(i[:j]) ** int(i[j])\n                break\n    print(result)\n\n\ndef sixth_task():\n    n = int(input())\n    list_of_values = []\n    while n > 0:\n        number = input()\n        list_of_values.append(number)\n        n -= 1\n\n    result = 0\n    for i in list_of_values:\n        for j in range(1, len(i)):\n            if int(i[j]) != 0:\n                result += int(i[:j]) ** int(i[j])\n                break\n    print(result)\n\n\ndef seventh_task():\n    n = int(input())\n    list_of_values = []\n    while n > 0:\n        number = input()\n        list_of_values.append(number)\n        n -= 1\n\n    result = 0\n    for i in list_of_values:\n        for j in range(1, len(i)):\n            if int(i[j]) != 0:\n                result += int(i[:j]) ** int(i[j])\n                break\n    print(result)\n\n\ndef eighth_task():\n    n = int(input())\n    list_of_values = []\n    while n > 0:\n        number = input()\n        list_of_values.append(number)\n        n -= 1\n\n    result = 0\n    for i in list_of_values:\n        for j in range(1, len(i)):\n            if int(i[j]) != 0:\n                result += int(i[:j]) ** int(i[j])\n                break\n    print(result)\n\n\ndef ninth_task():\n    n = int(input())\n    list_of_values = []\n    while n > 0:\n        number = input()\n        list_of_values.append(number)\n        n -= 1\n\n    result = 0\n    for i in list_of_values:\n        for j in range(1, len(i)):\n            if int(i[j]) != 0:\n                result += int(i[:j]) ** int(i[j])\n                break\n    print(result)\n\n\ndef tenth_task():\n    n = int(input())\n    list_of_values = []\n    while n > 0:\n        number = input()\n        list_of_values.append(number)\n        n -= 1\n\n    result = 0\n    for i in list_of_values:\n        for j in range(1, len(i)):\n            if int(i[j]) != 0:\n                result += int(i[:j]) ** int(i[j])\n                break\n    print(result)\n\n\nif __name__ == '__main__':\n    first_task()\n"]