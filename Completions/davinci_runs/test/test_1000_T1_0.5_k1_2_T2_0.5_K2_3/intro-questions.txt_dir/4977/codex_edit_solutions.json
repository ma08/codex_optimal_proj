["\n\na, b = map(int, input().split())\nc, d = map(int, input().split())\nt = int(input())\n\n# If the start and end points are the same, then we can do a U-turn and get there.\nif a == c and b == d:\n    print(\"Y\")\n    exit()\n\n# If we are trying to travel more than t units, we can't get there.\nif abs(a-c) + abs(b-d) > t:\n    print(\"N\")\n    exit()\n\n# If we are trying to travel less than t units, we can get there.\nif abs(a-c) + abs(b-d) < t:\n    print(\"N\")\n    exit()\n\n# If we are trying to travel exactly t units, we can get there.\nif abs(a-c) + abs(b-d) == t:\n    print(\"Y\")\n    exit()\n", "\ndef main():\n    n = int(input())\n    for i in range(n):\n        charge = int(input())\n        start = [int(x) for x in input().split()]\n        end = [int(x) for x in input().split()]\n        if abs(start[0] - end[0]) + abs(start[1] - end[1]) == charge:\n            print('Y')\n        else:\n            print('N')\n\n\nmain()\n", "\nimport sys\n\ndef main():\n    start = list(map(int, sys.stdin.readline().split()))\n    end = list(map(int, sys.stdin.readline().split()))\n    charge = int(sys.stdin.readline())\n\n    if abs(start[0] - end[0]) + abs(start[1] - end[1]) == charge:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    start = list(map(int, sys.stdin.readline().split())) # read starting point\n    end = list(map(int, sys.stdin.readline().split())) # read ending point\n    charge = int(sys.stdin.readline()) # read battery charge\n\n    if abs(start[0] - end[0]) + abs(start[1] - end[1]) == charge: # if the distance is equal to the charge\n        print \"Y\"\n    else:\n        print \"N\"\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    a, b = map(int, input().split())\n    c, d = map(int, input().split())\n    t = int(input())\n\n    if (a - c) ** 2 + (b - d) ** 2 == t ** 2:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    start = [int(x) for x in input().split()]\n    end = [int(x) for x in input().split()]\n    charge = int(input())\n    if abs(start[0] - end[0]) + abs(start[1] - end[1]) == charge:\n        print('Y')\n    else:\n        print('N')\n\n\nmain()\n", "\ndef main():\n    a, b = map(int, input().split())\n    c, d = map(int, input().split())\n    t = int(input())\n\n    if (a - c) ** 2 + (b - d) ** 2 <= t ** 2:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nmain()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    start = [int(i) for i in sys.stdin.readline().split()]\n    end = [int(i) for i in sys.stdin.readline().split()]\n    charge = int(sys.stdin.readline())\n    if (charge - abs(end[0] - start[0]) - abs(end[1] - start[1])) % 2 == 0: \n        print(\"Y\")\n    else: \n        print(\"N\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys \n\ndef main():\n    start = list(map(int, sys.stdin.readline().split())) # read starting point\n    end = list(map(int, sys.stdin.readline().split())) # read ending point\n    charge = int(sys.stdin.readline()) # read battery charge \n\n    if abs(start[0] - end[0]) + abs(start[1] - end[1]) == charge: # if the distance is equal to the charge \n        print \"Y\"\n    else:\n        print \"N\"\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    start = [int(i) for i in sys.stdin.readline().split()]\n    end = [int(i) for i in sys.stdin.readline().split()]\n    charge = int(sys.stdin.readline())\n    if (charge - abs(end[0] - start[0]) - abs(end[1] - start[1])) % 2 == 0:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\"\n    Solve the problem.\n    \"\"\"\n    start = [int(i) for i in input().split(',')]\n    end = [int(i) for i in input().split(',')]\n    charge = int(input())\n\n    if abs(end[0] - start[0]) + abs(end[1] - start[1]) <= charge:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    a, b, c, d, t = map(int, input().split())\n\n    if (a - c) ** 2 + (b - d) ** 2 == t ** 2:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\"\n    Solve the problem.\n    \"\"\"\n    start = [int(i) for i in input().split()]\n    end = [int(i) for i in input().split()]\n    charge = int(input())\n\n    if abs(end[0] - start[0]) + abs(end[1] - start[1]) <= charge:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    for i in range(n):\n        start = [int(x) for x in input().split()]\n        end = [int(x) for x in input().split()]\n        charge = int(input())\n        if abs(start[0] - end[0]) + abs(start[1] - end[1]) == charge:\n            print('Y')\n        else:\n            print('N')\n\n\nmain()\n", "\nimport sys\n\ndef main():\n    start = map(int, sys.stdin.readline().split())\n    end = map(int, sys.stdin.readline().split())\n    charge = int(sys.stdin.readline())\n\n    if abs(start[0] - end[0]) + abs(start[1] - end[1]) == charge:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nif __name__ == \"__main__\":\n    main()\n", "\na, b = [int(x) for x in input().split()]\nc, d = [int(x) for x in input().split()]\nt = int(input())\n\n# If the start and end points are the same, then we can do a U-turn and get there.\nif a == c and b == d:\n    print(\"Y\")\n\n# If we are trying to travel more than t units, we can't get there.\nif abs(a-c) + abs(b-d) > t:\n    print(\"N\")\n\n# If we are trying to travel less than t units, we can get there.\nif abs(a-c) + abs(b-d) < t:\n    print(\"N\")\n\n# If we are trying to travel exactly t units, we can get there.\nif abs(a-c) + abs(b-d) == t:\n    print(\"Y\")\n", "\n\ndef solve():\n    sx, sy = [int(x) for x in input().split()]  # start point\n    dx, dy = [int(x) for x in input().split()]  # destination point\n    t = int(input())\n    if (dx - sx + dy - sy) == t:  # if the distance is equal to the time, it is possible\n        print(\"Y\")\n    else:\n        print(\"N\")\n\n\nsolve()\n", "\na, b = [int(x) for x in input().split()]\nc, d = [int(x) for x in input().split()]\nt = int(input())\n\n# If the start and end points are the same, then we can do a U-turn and get there.\nif a == c and b == d:\n    print(\"Y\")\n    exit()\n\n# If we are trying to travel more than t units, we can't get there.\nif abs(a-c) + abs(b-d) > t:\n    print(\"N\")\n    exit()\n\n# If we are trying to travel less than t units, we can't get there. \nif abs(a-c) + abs(b-d) < t:\n    print(\"N\")\n    exit()\n\n# If we are trying to travel exactly t units, we can get there.\nif abs(a-c) + abs(b-d) == t:\n    print(\"Y\")\n    exit()\n", "def main():\n    start = [int(x) for x in input().split()]\n    end = [int(x) for x in input().split()]\n    charge = int(input())\n    if abs(start[0] - end[0]) + abs(start[1] - end[1]) == charge:\n        print('Y')\n    else:\n        print('N')\n\n\nmain()\n", "import sys\n\ndef main():\n    a, b = map(int, input().split())\n    c, d = map(int, input().split())\n    t = int(input())\n\n    print('Y' if abs(a - c) + abs(b - d) <= t and (abs(a - c) + abs(b - d)) % 2 == t % 2 else 'N')\n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef main():\n    a, b = map(int, input().split())\n    c, d = map(int, input().split())\n    t = int(input())\n\n    if math.sqrt((a - c) ** 2 + (b - d) ** 2) <= t:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nmain()\n", "#!/usr/bin/python3\n\na, b = [int(x) for x in input().split()]\nc, d = [int(x) for x in input().split()]\nt = int(input())\n\n# If the start and end points are the same, then we can do a U-turn and get there.\nif a == c and b == d:\n    print(\"Y\")\n    exit()\n\n# If we are trying to travel more than t units, we can't get there.\nif abs(a-c) + abs(b-d) > t:\n    print(\"N\")\n    exit()\n\n# If we are trying to travel less than t units, we can't get there. \nif abs(a-c) + abs(b-d) < t:\n    print(\"N\")\n    exit()\n\n# If we are trying to travel exactly t units, we can get there.\nif abs(a-c) + abs(b-d) == t:\n    print(\"Y\")\n    exit()\n", "\ndef main():\n    start = [int(x) for x in input().split(',')]\n    end = [int(x) for x in input().split(',')]\n    charge = int(input())\n    if abs(start[0] - end[0]) + abs(start[1] - end[1]) == charge:\n        print('Y')\n    else:\n        print('N')\n\n\nmain()\n", "\ndef solve():\n    sx, sy = [int(x) for x in input().split()]\n    dx, dy = [int(x) for x in input().split()]\n    t = int(input())\n    if (abs(dx - sx) + abs(dy - sy)) <= t and (abs(dx - sx) + abs(dy - sy)) % 2 == t % 2:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nsolve()\n", "\nimport sys\n\ndef main():\n    a, b = map(int, input().split())\n    c, d = map(int, input().split())\n    t = int(input())\n\n    if abs(a - c) + abs(b - d) <= t and (abs(a - c) + abs(b - d)) % 2 == t % 2:\n        print('Y')\n    else:\n        print('N')\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    \"\"\"\n    Solve the problem\n    \"\"\"\n    # start = [int(i) for i in input().split()]\n    # end = [int(i) for i in input().split()]\n    # charge = int(input())\n\n    # if abs(end[0] - start[0]) + abs(end[1] - start[1]) <= charge:\n    #     print(\"Y\")\n    # else:\n    #     print(\"N\")\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    num = int(input())\n    for i in range(num):\n        start = [int(x) for x in input().split()]\n        end = [int(x) for x in input().split()]\n        charge = int(input())\n        if abs(start[0] - end[0]) + abs(start[1] - end[1]) == charge:\n            print('Y')\n        else:\n            print('N')\n\n\nmain()\n", "\n\n\ndef solve():\n    sx, sy = [int(x) for x in input().split()]\n    dx, dy = [int(x) for x in input().split()]\n    t = int(input())\n    if (abs(dx - sx) + abs(dy - sy)) <= t and (abs(dx - sx) + abs(dy - sy)) % 2 == t % 2:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\n\nsolve()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    x, y, z = [int(i) for i in sys.stdin.readline().split()]\n    print(x, y, z)\n\nif __name__ == \"__main__\":\n    main()\n", "\na, b = [int(x) for x in input().split()]\nc, d = [int(x) for x in input().split()]\nt = int(input())\n\n# If the start and end points are the same, then we can do a U-turn and get there.\nif a == c and b == d:\n    print(\"Y\")\n    exit()\n\n# If we are trying to travel more than t units, we can't get there.\nif abs(a - c) + abs(b - d) > t:\n    print(\"N\")\n    exit()\n\n# If we are trying to travel less than t units, we can get there.\nif abs(a - c) + abs(b - d) < t:\n    print(\"N\")\n    exit()\n\n# If we are trying to travel exactly t units, we can get there.\nif abs(a - c) + abs(b - d) == t:\n    print(\"Y\")\n    exit()\n", "\nimport sys, heapq\ndef main():\n    n, m = map(int, sys.stdin.readline().strip().split())\n    d = [[0] * n for _ in range(n)]\n    for i in range(m):\n        a, b, c = map(int, sys.stdin.readline().strip().split())\n        a -= 1\n        b -= 1\n        d[a][b] = c\n        d[b][a] = c\n\n    q = []\n    heapq.heappush(q, (0, 0))\n    dist = [-1] * n\n    dist[0] = 0\n    while len(q) != 0:\n        c, v = heapq.heappop(q)\n        for i in range(n):\n            if d[v][i] != 0 and (dist[i] == -1 or dist[i] > c + d[v][i]):\n                dist[i] = c + d[v][i]\n                heapq.heappush(q, (dist[i], i))\n\n    print(dist[n - 1])\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport heapq\n\ndef main():\n    n, m = map(int, input().strip().split())\n    d = [[0] * n for _ in range(n)]  # \u6784\u5efa\u90bb\u63a5\u77e9\u9635\n    for i in range(m):  # \u8bfb\u53d6\u8fb9\n        a, b, c = map(int, input().strip().split())\n        d[a][b] = c\n        d[b][a] = c\n\n    q = []  # \u521b\u5efa\u4f18\u5148\u961f\u5217\n    heapq.heappush(q, (0, 0))  # \u5c06\u8d77\u59cb\u70b9\u7684\u8ddd\u79bb\u8bbe\u4e3a0\uff0c\u5176\u4ed6\u70b9\u7684\u8ddd\u79bb\u8bbe\u4e3a\u65e0\u7a77\u5927\n    dist = [-1] * n  # \u8bb0\u5f55\u8ddd\u79bb\n    dist[0] = 0  # \u8d77\u59cb\u70b9\u7684\u8ddd\u79bb\u8bbe\u4e3a0\n    while q:\n        c, v = heapq.heappop(q)  # \u53d6\u51fa\u8ddd\u79bb\u6700\u8fd1\u7684\u70b9\n        for i in range(n):  # \u66f4\u65b0\u8ddd\u79bb\n            if d[v][i] and (dist[i] == -1 or dist[i] > c + d[v][i]):\n                dist[i] = c + d[v][i]\n                heapq.heappush(q, (dist[i], i))\n\n    print(dist[n - 1])  # \u8f93\u51fa\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\n\n\nif __name__ == \"__main__\":\n    main()\n", "def main():\n    a, b = map(int, input().split())\n    c, d = map(int, input().split())\n    t = int(input())\n\n    if (a - c) ** 2 + (b - d) ** 2 <= t ** 2:\n        print(\"Y\")\n    else:\n\n        print(\"N\")\n\nmain()\n", "\n\ndef solve():\n    sx, sy = [int(x) for x in input().split()]  # start point\n    dx, dy = [int(x) for x in input().split()]  # destination point\n    t = int(input())\n    if (dx - sx + dy - sy) == t:  # if the distance is equal to the time, it is possible\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nsolve()\n", "\n\ndef solve():\n    pass\n\nsolve()\n", "\n\ndef main():\n    \"\"\"\n    Solve the problem.\n    \"\"\"\n    start = [int(i) for i in raw_input().split()]\n    end = [int(i) for i in raw_input().split()]\n    charge = int(raw_input())\n\n    if abs(end[0] - start[0]) + abs(end[1] - start[1]) <= charge:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\"\n    Solve the problem\n    \"\"\"\n    start = [int(i) for i in raw_input().split()]\n    end = [int(i) for i in raw_input().split()]\n    charge = int(raw_input())\n\n    if abs(end[0] - start[0]) + abs(end[1] - start[1]) <= charge:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    a, b = map(int, input().split())\n    c, d = map(int, input().split())\n    t = int(input())\n\n    if (a - c) ** 2 + (b - d) ** 2 == t ** 2:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nmain()\n", "\n# fix spelling mistakes\n#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    start = [int(i) for i in sys.stdin.readline().split()]\n    end = [int(i) for i in sys.stdin.readline().split()]\n    charge = int(sys.stdin.readline())\n    if (charge - abs(end[0] - start[0]) - abs(end[1] - start[1])) % 2 == 0:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nif __name__ == \"__main__\":\n    main()\n", "# -*- coding: utf-8 -*-\n# @Author: ZwEin\n# @Date:   2016-09-30 13:39:30\n# @Last Modified by:   ZwEin\n# @Last Modified time: 2016-09-30 13:40:10\n\n\n# import sys\n#\n# def main():\n#     a, b = map(int, sys.stdin.readline().strip().split())\n#     c, d = map(int, sys.stdin.readline().strip().split())\n#     t = int(sys.stdin.readline().strip())\n#\n#     if abs(a - c) + abs(b - d) <= t and (abs(a - c) + abs(b - d)) % 2 == t % 2:\n#         print('Y')\n#     else:\n#         print('N')\n#\n# if __name__ == '__main__':\n#     main()\n", "#!/usr/bin/env python3\nimport sys\ndef main():\n    start = [int(i) for i in sys.stdin.readline().split()]\n    end = [int(i) for i in sys.stdin.readline().split()]\n    charge = int(sys.stdin.readline())\n    if (charge - abs(end[0] - start[0]) - abs(end[1] - start[1])) % 2 == 0:\n        print(\"Y\")\n    else:\n        print(\"N\")\nif __name__ == \"__main__\":\n    main()\n", "\na,b=map(int,input().split())\nc,d=map(int,input().split())\nt=int(input())\n\n# If the start and end points are the same, then we can do a U-turn and get there.\nif a == c and b == d:\n    print(\"Y\")\n\n# If we are trying to travel more than t units, we can't get there.\nif abs(a-c) + abs(b-d) > t:\n    print(\"N\")\n\n# If we are trying to travel less than t units, we can't get there. \nif abs(a-c) + abs(b-d) < t:\n    print(\"N\")\n\n# If we are trying to travel exactly t units, we can get there.\nif abs(a-c) + abs(b-d) == t:\n    print(\"Y\")\n", "\n\ndef main():\n    a, b = map(int, input().split())\n    c, d = map(int, input().split())\n    t = int(input())\n\n    if (a - c) ** 2 + (b - d) ** 2 == t ** 2:\n        print('Y')\n    else:\n        print('N')\n\nmain()\n", "\n\nimport sys, heapq\n\ndef main():\n    n, m = map(int, input().strip().split())\n    d = [[0] * n for _ in range(n)]\n    for i in range(m):\n        a, b, c = map(int, input().strip().split())\n        a -= 1\n        b -= 1\n        d[a][b] = c\n        d[b][a] = c\n\n    q = []\n    heapq.heappush(q, (0, 0))\n    dist = [-1] * n\n    dist[0] = 0\n    while len(q) != 0:\n        c, v = heapq.heappop(q)\n        for i in range(n):\n            if d[v][i] != 0 and (dist[i] == -1 or dist[i] > c + d[v][i]):\n                dist[i] = c + d[v][i]\n                heapq.heappush(q, (dist[i], i))\n\n    print(dist[n - 1])\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef solve():\n    sx, sy = [int(x) for x in input().split()]\n    dx, dy = [int(x) for x in input().split()]\n    \n    t = int(input())\n    if (dx - sx) + (dy - sy) == t:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nsolve()\n", "\n# -*- coding: utf-8 -*-\n# @Author: ZwEin\n# @Date:   2016-09-30 13:39:30\n# @Last Modified by:   ZwEin\n# @Last Modified time: 2016-09-30 13:41:30\n\n\nimport sys\n\ndef main():\n    a, b = map(int, sys.stdin.readline().strip().split())\n    c, d = map(int, sys.stdin.readline().strip().split())\n    t = int(sys.stdin.readline().strip())\n\n    if abs(a - c) + abs(b - d) <= t and (abs(a - c) + abs(b - d)) % 2 == t % 2:\n        print('Y')\n    else:\n        print('N')\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    a, b = map(int, sys.stdin.readline().strip().split())\n    c, d = map(int, sys.stdin.readline().strip().split())\n    t = int(sys.stdin.readline().strip())\n\n    if abs(a - c) + abs(b - d) <= t and (abs(a - c) + abs(b - d)) % 2 == t % 2:\n        print('Y')\n    else:\n        print('N')\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef solve():\n    sx, sy = [int(x) for x in input().split()]\n    dx, dy = [int(x) for x in input().split()]\n    \n    t = int(input())\n    if (abs(dx - sx) + abs(dy - sy)) == t:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nsolve()\n", "\ndef main():\n    a, b, c, d, t = map(int, input().split()) # a,b,c,d,t\u3092int\u578b\u3067\u5165\u529b\n\n    if (a - c) ** 2 + (b - d) ** 2 == t ** 2:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nmain()\n", "\n\ndef main():\n    \"\"\"\n    Solve the problem\n    \"\"\"\n    start = [int(i) for i in input().strip().split()]\n    end = [int(i) for i in input().strip().split()]\n    charge = int(input().strip())\n\n    if abs(end[0] - start[0]) + abs(end[1] - start[1]) <= charge:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n# -*- coding: utf-8 -*-\n# @Author: ZwEin\n# @Date:   2016-09-30 13:39:30\n# @Last Modified by:   ZwEin\n# @Last Modified time: 2016-09-30 13:40:06\n\n\nimport sys\n\ndef main():\n    a, b = map(int, sys.stdin.readline().strip().split())\n    c, d = map(int, sys.stdin.readline().strip().split())\n    t = int(sys.stdin.readline().strip())\n\n    if abs(a - c) + abs(b - d) <= t and (abs(a - c) + abs(b - d)) % 2 == t % 2:\n        print('Y')\n    else:\n        print('N')\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    start = map(int, sys.stdin.readline().split())\n    end = map(int, sys.stdin.readline().split())\n    charge = int(sys.stdin.readline())\n\n    if abs(start[0] - end[0]) + abs(start[1] - end[1]) == charge:\n        print \"Y\"\n    else:\n        print \"N\"\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    x1, y1, x2, y2, t = map(int, input().split())\n\n    if (x1 - x2) ** 2 + (y1 - y2) ** 2 == t ** 2:\n        print(\"Y\")\n\n    else:\n        print(\"N\")\n\nmain()\n", "\n\ndef solve():\n    sx, sy = [int(x) for x in input().split()]\n    dx, dy = [int(x) for x in input().split()]\n\n    t = int(input())\n    if (abs(dx - sx) + abs(dy - sy)) == t:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nsolve()\n"]