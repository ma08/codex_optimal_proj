["\n\ndef main():\n    # Get inputs\n    x1, y1 = map(int, input().split()) # x1, y1 = int(input()), int(input())\n    x2, y2 = map(int, input().split()) # x2, y2 = int(input()), int(input())\n    x3, y3 = map(int, input().split()) # x3, y3 = int(input()), int(input())\n\n    # Calculate the final X and Y values\n    x4 = 0\n    y4 = 0\n    if x1 == x2:\n        x4 = x3\n    elif x1 == x3:\n        x4 = x2\n    else:\n        x4 = x1\n\n    if y1 == y2:\n        y4 = y3\n    elif y1 == y3:\n        y4 = y2\n    else:\n        y4 = y1\n\n    # Print the final X and Y values\n    print(x4, y4)\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/python3\n\nlines = []\nfor _ in range(3):\n    lines.append(input())\n\ndef get_coords(line):\n    coords = line.split()\n    return (int(coords[0]), int(coords[1]))\n\npoints = []\nfor line in lines:\n    points.append(get_coords(line))\n\nif points[0][0] == points[1][0]:\n    x = points[2][0]\nelse:\n    x = points[0][0]\n\nif points[0][1] == points[1][1]:\n    y = points[2][1]\nelse:\n    y = points[0][1]\n\nprint(x, y)\n", "\n\ndef main():\n    \"\"\"\n    Reads three points and prints the fourth point\n    \"\"\"\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n\n    x4, y4 = (x3, y2)\n    if (x4, y4) == (x1, y1):\n        x4, y4 = (x2, y3)\n    elif (x4, y4) == (x2, y2):\n        x4, y4 = (x1, y3)\n    print(x4, y4)\n\nif __name__ == \"__main__\":\n    main()\n", "\nx1,y1 = map(int,input().split())\nx2,y2 = map(int,input().split())\nx3,y3 = map(int,input().split())\nx4 = 0\ny4 = 0\nif x1 == x2:\n    x4 = x3\nelif x2 == x3:\n    x4 = x1\nelse:\n    x4 = x2\nif y1 == y2:\n    y4 = y3\nelif y2 == y3:\n    y4 = y1\nelse:\n    y4 = y2\nprint(x4,y4)\n", "\nlines = []\nfor i in range(3):\n    lines.append(input())\n\ndef get_coords(line):\n    coords = line.split()\n    return int(coords[0]), int(coords[1])\n\npoints = []\nfor line in lines:\n    points.append(get_coords(line))\n\nif points[0][0] == points[1][0]: \n    x = points[2][0] \nelse:\n    x = points[0][0]\n\nif points[0][1] == points[1][1]:\n    y = points[2][1]\nelse:\n    y = points[0][1]\n\nprint(x, y)\n", "'''\n    Author: Nebiyou Yismaw\n    '''\n\ndef main():\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n    x4 = y4 = 0\n    if x1 == x2:\n        x4 = x3\n    elif x2 == x3:\n        x4 = x1\n    else:\n        x4 = x2\n    if y1 == y2:\n        y4 = y3\n    elif y2 == y3:\n        y4 = y1\n    else:\n        y4 = y2\n    print(x4, y4)\n\nmain()\n", "\n\n# Read input\npoints = []\nfor _ in range(3):\n    points.append([int(x) for x in input().split()])\n\n# Get the fourth point\nfor i in range(3):\n    for j in range(i+1, 3):\n        if points[i][0] == points[j][0] and points[i][1] != points[j][1]:\n            # Two points have the same x coordinate, but different y coordinates\n            # The fourth point must have the same x coordinate as the other two, but the same y coordinate as the third point\n            print(points[i][0], points[3-i-j][1])\n            break\n        elif points[i][1] == points[j][1] and points[i][0] != points[j][0]:\n            # Two points have the same y coordinate, but different x coordinates\n            # The fourth point must have the same y coordinate as the other two, but the same x coordinate as the third point\n            print(points[3-i-j][0], points[i][1])\n            break\n        elif i == 2 and j == 2:\n            # If we haven't found the fourth point, that means the points are not collinear\n            # The fourth point must have the same x coordinate as one point, and the same y coordinate as the other point\n            print(points[0][0], points[2][1])\n", "\n# Read input\nxy = []\nfor i in range(3):\n    xy.append([int(i) for i in input().split()])\n\n# Find the missing point\nfor i in range(3):\n    for j in range(3):\n        if xy[i][0] == xy[j][0] and xy[i][1] != xy[j][1]:\n            x = xy[i][0] + xy[j][0] - xy[i][0]\n            y = xy[i][1]\n        elif xy[i][1] == xy[j][1] and xy[i][0] != xy[j][0]:\n            x = xy[i][0]\n            y = xy[i][1] + xy[j][1] - xy[i][1]\n        if x and y:\n            print(x, y)\n            break\n    if x and y:\n        break\n", "\n# Read input \nxy = []\nfor i in range(3):\n    xy.append([int(j) for j in input().split()])\n\n# Find the missing point\nfor i in range(3):\n    for j in range(3):\n        if xy[i][0] == xy[j][0] and xy[i][1] != xy[j][1]:\n            x = xy[i][0]\n            y = xy[i][1] + xy[j][1] - xy[i][1]  # y = xy[j][1]\n        elif xy[i][1] == xy[j][1] and xy[i][0] != xy[j][0]:\n            x = xy[i][0] + xy[j][0] - xy[i][0]  # x = xy[j][0]\n            y = xy[i][1]\n        if x and y:\n            print(x, y)\n            break\n    if x and y:\n        break\n", "\n\ndef main():\n    \"\"\"\n    Reads three points and prints the fourth point\n    \"\"\"\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n\n    print(x3, y2)\n\nif __name__ == \"__main__\":\n    main()\n", "\nlines = []\nfor i in range(3):\n    lines.append(input())\n\ndef get_coords(line):\n    coords = line.split()\n    return (int(coords[0]), int(coords[1]))\n\npoints = []\nfor line in lines:\n    points.append(get_coords(line))\n\nif points[0][0] == points[1][0]:\n    x = points[2][0]\nelse:\n    x = points[0][0]\n\nif points[0][1] == points[1][1]:\n    y = points[2][1]\nelse:\n    y = points[0][1]\n\nprint(x, y, sep=' ')\n", "\nx1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())\nx3, y3 = map(int, input().split())\n\nif x1 == x2:\n    x4 = x3\nelif x1 == x3:\n    x4 = x2\nelse:\n    x4 = x1\n\nif y1 == y2:\n    y4 = y3\nelif y1 == y3:\n    y4 = y2\nelse:\n    y4 = y1\n\nprint(x4, y4)\n", "\n\n# Read input\nXY = []\nfor i in range(3):\n    XY.append([int(j) for j in input().split()])\n\n# Find the missing point\nfor i in range(3):\n    for j in range(3):\n        if XY[i][0] == XY[j][0] and XY[i][1] != XY[j][1]:\n            x = XY[i][0]\n            y = XY[i][1] + XY[j][1] - XY[i][1]\n        elif XY[i][1] == XY[j][1] and XY[i][0] != XY[j][0]:\n            x = XY[i][0] + XY[j][0] - XY[i][0]\n            y = XY[i][1]\n        if x and y:\n            print(x, y)\n            break\n    if x and y:\n        break\n", "#\n\n# Read input\npoints = []\nfor _ in range(3):\n    points.append([int(x) for x in input().split()])\n\n# Get the fourth point\nfor i in range(3):\n    for j in range(i+1, 3):\n        if points[i][0] == points[j][0] and points[i][1] != points[j][1]:\n            # Two points have the same x coordinate, but different y coordinates\n            # The fourth point must have the same x coordinate as the other two, but the same y coordinate as the other point\n            print(points[i][0], points[3-i-j][1], sep=' ')\n            break\n        elif points[i][1] == points[j][1] and points[i][0] != points[j][0]:\n            # Two points have the same y coordinate, but different x coordinates\n            # The fourth point must have the same y coordinate as the other two, but the same x coordinate as the other point\n            print(points[3-i-j][0], points[i][1], sep=' ')\n            break\n        elif i == 2 and j == 2:\n            # If we haven't found the fourth point, that means the points are not collinear\n            # The fourth point must have the same x coordinate as one point, and the same y coordinate as the other point\n            print(points[0][0], points[2][1], sep=' ')\n", "'''\n    Author: Nebiyou Yismaw\n'''\n\ndef main():\n    x1,y1 = map(int,input().split())\n    x2,y2 = map(int,input().split())\n    x3,y3 = map(int,input().split())\n    x4 = 0\n    y4 = 0\n    if x1 == x2:\n        x4 = x3\n    elif x2 == x3:\n        x4 = x1\n    else:\n        x4 = x2\n    if y1 == y2:\n        y4 = y3\n    elif y2 == y3:\n        y4 = y1\n    else:\n        y4 = y2\n    print(x4,y4)\n\nmain()\n", "\nimport sys\n\ndef main():\n    points = []\n    for i in range(3):\n        points.append(list(map(int, sys.stdin.readline().split())))\n    x = set([p[0] for p in points])\n    y = set([p[1] for p in points])\n    if len(x) == 3:\n        print(x.pop(), y.pop())\n    else:\n        print(x.pop(), y.pop())\n\nmain()\n", "\nlines = []\nfor i in range(3):\n    lines.append(input())\n\ndef get_coords(line):\n    coords = line.split()\n    return int(coords[0]), int(coords[1])\n\npoints = []\nfor line in lines:\n    points.append(get_coords(line))\n\nif points[0][0] == points[1][0]:\n    x = points[2][0]\nelse:\n    x = points[0][0]\n\nif points[0][1] == points[1][1]:\n    y = points[2][1]\nelse:\n    y = points[0][1]\n\nprint(x, y, sep=' ')\n", "\n\ndef main():\n    \"\"\"\n    Read three points and print the fourth point.\n    \"\"\"\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n\n    x4, y4 = x3, y2\n    if x4 == x1 and y4 == y1:\n        x4, y4 = x2, y3\n    elif x4 == x2 and y4 == y2:\n\n        x4, y4 = x1, y3\n    print(x4, y4)\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    points = []\n    for i in range(3):\n        points.append(list(map(int, sys.stdin.readline().split())))\n    x = set([x[0] for x in points])\n    y = set([y[1] for y in points])\n    if len(x) == 3:\n        print(x.pop(), y.pop())\n    else:\n        print(x.pop(), y.pop()) \n\nmain()\n", "\nlines = []\nfor i in range(3):\n    lines.append(input())\n\ndef get_coords(line):\n    coords = line.split()\n    return (int(coords[0]), int(coords[1]))\n\npoints = []\nfor line in lines:\n    points.append(get_coords(line))\n\nif points[0][0] == points[1][0]:\n    x = points[2][0]\nelse:\n    x = points[0][0]\n\nif points[0][1] == points[1][1]:\n    y = points[2][1]\nelse:\n    y = points[0][1]\n\nprint(x, y)\n", "\nx1,y1 = map(int,input().split())\nx2,y2 = map(int,input().split())\nx3,y3 = map(int,input().split())\nx4 = 0.0\ny4 = 0.0\nif x1 == x2:\n    x4 = x3\nelif x2 == x3:\n    x4 = x1\nelse:\n    x4 = x2\nif y1 == y2:\n    y4 = y3\nelif y2 == y3:\n    y4 = y1\nelse:\n    y4 = y2\nprint(int(x4),int(y4))\n", "\n\n# Read input\npoints = []\nfor _ in range(3):\n    points.append([int(x) for x in input().split()])\n\n# Get the fourth point\nfor i in range(3):\n    for j in range(i+1, 3):\n        if points[i][0] == points[j][0] and points[i][1] != points[j][1]:\n            # Two points have the same x coordinate, but different y coordinates\n            # The fourth point must have the same x coordinate as the other two, but the same y coordinate as the third point\n            print(points[i][0], points[3-i-j][1], end='')\n            break\n        elif points[i][1] == points[j][1] and points[i][0] != points[j][0]:\n            # Two points have the same y coordinate, but different x coordinates\n            # The fourth point must have the same y coordinate as the other two, but the same x coordinate as the third point\n            print(points[3-i-j][0], points[i][1], end='')\n            break\n        elif i == 2 and j == 3:\n            # If we haven't found the fourth point, that means the points are not collinear\n            # The fourth point must have the same x coordinate as one point, and the same y coordinate as the other point\n            print(points[0][0], points[2][1], end='')\n", "\n\nimport sys\n\ndef read_file(filename):\n    file = open(filename, \"r\")\n    content = file.read()\n    file.close()\n    return content\n\ndef write_file(filename, content):\n    file = open(filename, \"w\")\n    file.write(content)\n    file.close()\n\ndef main():\n    args = sys.argv[1:]\n    if len(args) < 2:\n        print(\"Usage: python file.py filename\")\n        sys.exit()\n    filename, file_content = args[0], args[1]\n    content = read_file(filename)\n    write_file(filename, content)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    #Get input\n    x1, y1 = map(int, input().split()) # Point 1\n    x2, y2 = map(int, input().split()) # Point 2\n    x3, y3 = map(int, input().split()) # Point 3\n\n    #Calculate final X and Y values\n    x4 = 0 # X value for Point 4\n    y4 = 0 # Y value for Point 4\n\n    # Calculate X value for Point 4\n    if x1 == x2:\n        x4 = x3\n    elif x1 == x3:\n        x4 = x2\n    else:\n        x4 = x1\n\n    # Calculate Y value for Point 4\n    if y1 == y2:\n        y4 = y3\n    elif y1 == y3:\n        y4 = y2\n    else:\n        y4 = y1\n\n    #Print final X and Y values\n    print(x4, y4)\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/python3\n\n\ndef main():\n    #Get input\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n\n    #Calculate final X and Y values\n    x4 = 0\n    y4 = 0\n    if x1 == x2:\n        x4 = x3\n    elif x1 == x3:\n        x4 = x2\n    else:\n        x4 = x1\n\n    if y1 == y2:\n        y4 = y3\n    elif y1 == y3:\n        y4 = y2\n    else:\n        y4 = y1\n\n    #Print final X and Y values\n    print(x4, y4)\n\nif __name__ == \"__main__\":\n    main()\n", "'''\n    Author: Nebiyou Yismaw\n    '''\n\ndef main():\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n    x4 = 0\n    y4 = 0\n    if x1 == x2:\n        x4 = x3\n    elif x2 == x3:\n        x4 = x1\n    else:\n        x4 = x2\n    if y1 == y2:\n        y4 = y3\n    elif y2 == y3:\n        y4 = y1\n    else:\n        y4 = y2\n    print(x4, y4)\n\nmain()\n", "\n\nlines = []\nfor i in range(3):\n    lines.append(input())\n\ndef get_coords(line):\n    coords = line.split()\n    return (int(coords[0]), int(coords[1]))\n\npoints = []\nfor line in lines:\n    points.append(get_coords(line))\n\nif points[0][0] == points[1][0]:\n    x = points[2][0]\nelse:\n    x = points[0][0]\n\nif points[0][1] == points[1][1]:\n    y = points[2][1]\nelse:\n    y = points[0][1]\n\nprint(x, y)\n", "\ndef main():\n    #Get input\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n\n    #Calculate final X and Y values\n    x4 = 0\n    y4 = 0\n    if x1 == x2:\n        x4 = x3\n    elif x1 == x3:\n        x4 = x2\n    else:\n        x4 = x1\n\n    if y1 == y2:\n        y4 = y3\n    elif y1 == y3:\n        y4 = y2\n    else:\n        y4 = y1\n\n    #Print final X and Y values\n    print(x4, y4)\n\nif __name__ == \"__main__\":\n    main()\n", "\n# Read input\nxy = []\nfor i in range(3):\n    xy.append([int(i) for i in input().split()])\n\n# Find the missing point\nfor i in range(3):\n    for j in range(3):\n        if xy[i][0] == xy[j][0] and xy[i][1] != xy[j][1]:\n            x = xy[i][0]\n            y = xy[i][1] + xy[j][1] - xy[i][1]  # noqa\n        elif xy[i][1] == xy[j][1] and xy[i][0] != xy[j][0]:\n            x = xy[i][0] + xy[j][0] - xy[i][0]  # noqa\n            y = xy[i][1]\n        if x and y:\n            print(x, y)\n            break\n    if x and y:\n        break\n", "\n\ndef main():\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n    x4 = 0\n    y4 = 0\n    if x1 == x2:\n        x4 = x3\n    elif x2 == x3:\n        x4 = x1\n    else:\n        x4 = x2\n    if y1 == y2:\n        y4 = y3\n    elif y2 == y3:\n        y4 = y1\n    else:\n        y4 = y2\n    print(x4, y4)\n\n\nmain()\n", "\ndef main():\n    \"\"\"\n    Read three points and print the fourth point.\n    \"\"\"\n    x1, y1 = map(int, input().split())  # For example, this is OK.\n    x2, y2 = map(int, input().split())  # For example, this is OK.\n    x3, y3 = map(int, input().split())  # For example, this is OK.\n\n    x4 = x3\n    y4 = y2\n    if x4 == x1 and y4 == y1:  # For example, this is OK.\n        x4 = x2\n        y4 = y3\n    elif x4 == x2 and y4 == y2:  # For example, this is OK.\n        x4 = x1\n        y4 = y3\n    print(x4, y4)  # For example, this is OK.\n\n\nif __name__ == \"__main__\":  # For example, this is OK.\n    main()\n", "\n# Read input\nXY = []\nfor i in range(3):\n    XY.append([int(i) for i in input().split()])\n\n# Find the missing point by comparing the points\nfor i in range(3):\n    for j in range(3):\n        if XY[i][0] == XY[j][0] and XY[i][1] != XY[j][1]:\n            x = XY[i][0]\n            y = XY[i][1] + XY[j][1] - XY[i][1]\n        elif XY[i][1] == XY[j][1] and XY[i][0] != XY[j][0]:\n            x = XY[i][0] + XY[j][0] - XY[i][0]\n            y = XY[i][1]\n        if 'x' in locals() and 'y' in locals():\n            print(x, y)\n            break\n    if 'x' in locals() and 'y' in locals():\n        break\n", "#!/usr/bin/python3\n\nlines = []\nfor i in range(3):\n    lines.append(input())\n\ndef get_coords(line):\n    coords = line.split()\n    return int(coords[0]), int(coords[1])\n\npoints = []\nfor line in lines:\n    points.append(get_coords(line))\n\nif points[0][0] == points[1][0]: x = points[2][0]\nelse:\n    x = points[0][0] \n\nif points[0][1] == points[1][1]: y = points[2][1]\nelse:\n    y = points[0][1] \n\nprint(x, y)\n", "#!/usr/bin/env python3\nx1,y1 = map(int,input().split())\nx2,y2 = map(int,input().split())\nx3,y3 = map(int,input().split())\nx4 = 0\ny4 = 0\nif x1 == x2:\n    x4 = x3\nelif x2 == x3:\n    x4 = x1\nelse:\n    x4 = x2\nif y1 == y2:\n    y4 = y3\nelif y2 == y3:\n    y4 = y1\nelse:\n    y4 = y2\nprint(x4,y4)\n", "\n# Read input \nxy = []\nfor i in range(3):\n    xy.append([int(i) for i in input().split()])\n\n# Find the missing point\nfor i in range(3):\n    for j in range(3):\n        if xy[i][0] == xy[j][0] and xy[i][1] != xy[j][1]:\n            x = xy[i][0]\n            y = xy[i][1] + xy[j][1] - xy[i][1]\n        elif xy[i][1] == xy[j][1] and xy[i][0] != xy[j][0]:\n            x = xy[i][0] + xy[j][0] - xy[i][0]\n            y = xy[i][1]\n        if x and y:\n            print(x, y)\n            break\n    if x and y:\n        break\n", "#\n\n# Read input\npoints = []\nfor _ in range(3):\n    points.append([int(x) for x in input().split()])\n\n# Get the fourth point\nfor i in range(3):\n    for j in range(i+1, 3):\n        if points[i][0] == points[j][0] and points[i][1] != points[j][1]:\n            # Two points have the same x coordinate, but different y coordinates\n            # The fourth point must have the same x coordinate as the other two, but the same y coordinate as the other point\n            print(points[i][0], points[3-i-j][1])\n            break\n        elif points[i][1] == points[j][1] and points[i][0] != points[j][0]:\n            # Two points have the same y coordinate, but different x coordinates\n            # The fourth point must have the same y coordinate as the other two, but the same x coordinate as the other point\n            print(points[3-i-j][0], points[i][1])\n            break\n        elif i == 2 and j == 2:\n            # If we haven't found the fourth point, that means the points are not collinear\n            # The fourth point must have the same x coordinate as one point, and the same y coordinate as the other point\n            print(points[0][0], points[2][1])\n", "\ndef main():\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n    x4 = 0\n    y4 = 0\n    if x1 == x2:\n        x4 = x3\n    elif x2 == x3:\n        x4 = x1\n    else:\n        x4 = x2\n    if y1 == y2:\n        y4 = y3\n    elif y2 == y3:\n        y4 = y1\n    else:\n        y4 = y2\n    print(x4, y4)\n\n\nmain()\n", "\n\ndef main():\n    # Get inputs\n    x1, y1 = map(int, input().split())  # Get first input\n    x2, y2 = map(int, input().split())  # Get second input\n    x3, y3 = map(int, input().split())  # Get third input\n\n    # Calculate the final X and Y values\n    x4 = 0  # Final x value\n    y4 = 0  # Final y value\n\n    if x1 == x2:\n        x4 = x3\n    elif x1 == x3:\n        x4 = x2\n    else:\n        x4 = x1\n\n    if y1 == y2:\n        y4 = y3\n    elif y1 == y3:\n        y4 = y2\n    else:\n        y4 = y1\n\n    # Print the final X and Y values\n\n    print(x4, y4)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\"\n    Reads three points and prints the fourth point\n    \"\"\"\n    x1, y1 = map(int, input().split()) #x1, y1 = 0, 0\n    x2, y2 = map(int, input().split()) #x2, y2 = 0, 1\n    x3, y3 = map(int, input().split()) #x3, y3 = 1, 0\n\n    x4, y4 = x3, y2 #x4, y4 = 1, 1\n    if x4 == x1 and y4 == y1:\n        x4, y4 = x2, y3\n    elif x4 == x2 and y4 == y2:\n        x4, y4 = x1, y3\n    print(x4, y4)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # Get inputs\n    x1, y1 = map(int, input().split())  # First point\n    x2, y2 = map(int, input().split())  # Second point\n    x3, y3 = map(int, input().split())  # Third point\n\n    # Calculate the final X and Y values\n    x4 = 0  # Final X value\n    y4 = 0  # Final Y value\n    if x1 == x2:\n        x4 = x3\n    elif x1 == x3:\n        x4 = x2\n    else:\n        x4 = x1\n\n    if y1 == y2:\n        y4 = y3\n    elif y1 == y3:\n        y4 = y2\n    else:\n        y4 = y1\n\n    # Print the final X and Y values\n    print(x4, y4)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nx1, y1 = map(int, input().split()) # \u0447\u0438\u0442\u0430\u0435\u043c \u0438\u0437 \u0432\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0442\u0440\u0438 \u043f\u0430\u0440\u044b \u0447\u0438\u0441\u0435\u043b\nx2, y2 = map(int, input().split()) # \u0438 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u0438\u0445 \u0432 \u0446\u0435\u043b\u044b\u0435\nx3, y3 = map(int, input().split()) # \u0447\u0438\u0441\u043b\u0430\n\nif x1 == x2: # \u0435\u0441\u043b\u0438 \u043f\u0435\u0440\u0432\u044b\u0435 \u0434\u0432\u0435 \u043f\u0430\u0440\u044b \u0438\u043c\u0435\u044e\u0442 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0435 \u0430\u0431\u0441\u0446\u0438\u0441\u0441\u044b, \u0442\u043e\n    x4 = x3\nelif x1 == x3:\n    x4 = x2\nelse:\n    x4 = x1\n\nif y1 == y2:\n    y4 = y3\nelif y1 == y3:\n    y4 = y2\nelse:\n    y4 = y1\n\nprint(x4, y4)\n", "\n\n# Read input \npoints = []\nfor _ in range(3):\n    points.append([int(x) for x in input().split()])\n\n# Get the fourth point\nfor i in range(3):\n    for j in range(i+1, 3):\n        if points[i][0] == points[j][0] and points[i][1] != points[j][1]:\n            # Two points have the same x coordinate, but different y coordinates\n            # The fourth point must have the same x coordinate as the other two, but the same y coordinate as the third point\n            print(points[i][0], points[3-i-j][1])\n            break\n        elif points[i][1] == points[j][1] and points[i][0] != points[j][0]:\n            # Two points have the same y coordinate, but different x coordinates\n            # The fourth point must have the same y coordinate as the other two, but the same x coordinate as the third point\n            print(points[3-i-j][0], points[i][1])\n            break\n        elif i == 2 and j == 3:\n            # If we haven't found the fourth point, that means the points are not collinear\n            # The fourth point must have the same x coordinate as one point, and the same y coordinate as the other point\n            print(points[0][0], points[2][1])\n", "\n# Read input\nXY = []\nfor i in range(3):\n    XY.append([int(i) for i in input().split()])\n\n# Find the missing point\nfor i in range(3):\n    for j in range(3):\n        if XY[i][0] == XY[j][0] and XY[i][1] != XY[j][1]:\n            x = XY[i][0]\n            y = XY[i][1] + XY[j][1] - XY[i][1]\n        elif XY[i][1] == XY[j][1] and XY[i][0] != XY[j][0]:\n            x = XY[i][0] + XY[j][0] - XY[i][0]\n            y = XY[i][1]\n        if x and y:\n            print(x, y)\n            break\n    if x and y:\n        break\n", "print('Hello World!')\n", "\n\ndef main():\n    \"\"\"\n    Read three points and print the fourth point.\n    \"\"\"\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n\n    x4, y4 = x3, y2 if x4 == x1 and y4 == y1 else:\n        x4, y4 = x2, y3\n    elif x4 == x2 and y4 == y2:\n        x4, y4 = x1, y3\n    print(x4, y4)\n\nif __name__ == \"__main__\":\n    main()\n"]