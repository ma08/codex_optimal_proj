2022-04-12 19:34:38.470796 num operations 2
2022-04-12 19:34:38.470805 size on input set 1
2022-04-12 19:34:42.557334 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\ndef adjacent_replacements_algorithm(a):\n    n = len(a)\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == \"__main__\":\n    a = [1, 2, 3, 4, 5, 6]\n    print(*adjacent_replacements_algorithm(a))\n"
    },
    {
      "index": 1,
      "text": "\n\n\ndef adjacent_replacement_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacement_algorithm(n, a))\n"
    },
    {
      "index": 2,
      "text": "\n\n\ndef adjacent_replacements_algorithm_java(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm_java(n, a))\n"
    }
  ],
  "created": 1649792078,
  "object": "edit"
}
2022-04-12 19:34:42.557592 fix spelling mistakes 3 ['\n\n\ndef adjacent_replacements_algorithm(a):\n    n = len(a)\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == "__main__":\n    a = [1, 2, 3, 4, 5, 6]\n    print(*adjacent_replacements_algorithm(a))\n', '\n\n\ndef adjacent_replacement_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == "__main__":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacement_algorithm(n, a))\n', '\n\n\ndef adjacent_replacements_algorithm_java(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == "__main__":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm_java(n, a))\n']
2022-04-12 19:34:42.557623 size on output set 3
2022-04-12 19:34:42.557630 size on input set 3
2022-04-12 19:34:46.341390 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "def adjacent_replacement_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacement_algorithm(n, a))\n"
    },
    {
      "index": 1,
      "text": "\ndef adjacent_replacement_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacement_algorithm(n, a))\n"
    },
    {
      "index": 2,
      "text": "\n\n\ndef adjacent_replacement_algorithm(n, a, k):\n    b = []\n    for i in range(n):\n        if a[i] % k == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = int(input())\n    print(*adjacent_replacement_algorithm(n, a, k))\n"
    }
  ],
  "created": 1649792082,
  "object": "edit"
}
2022-04-12 19:34:46.341567 fix syntax errors 3 ['def adjacent_replacement_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == "__main__":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacement_algorithm(n, a))\n', '\ndef adjacent_replacement_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == "__main__":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacement_algorithm(n, a))\n', '\n\n\ndef adjacent_replacement_algorithm(n, a, k):\n    b = []\n    for i in range(n):\n        if a[i] % k == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == "__main__":\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = int(input())\n    print(*adjacent_replacement_algorithm(n, a, k))\n']
2022-04-12 19:34:49.226765 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef adjacent_replacements_algorithm_java(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm_java(n, a))\n"
    },
    {
      "index": 1,
      "text": "\n\n\ndef adjacent_replacements_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm(n, a))\n"
    },
    {
      "index": 2,
      "text": "\ndef adjacent_replacements_algorithm_java(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm_java(n, a))\n"
    }
  ],
  "created": 1649792086,
  "object": "edit"
}
2022-04-12 19:34:49.226956 fix syntax errors 3 ['\ndef adjacent_replacements_algorithm_java(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == "__main__":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm_java(n, a))\n', '\n\n\ndef adjacent_replacements_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == "__main__":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm(n, a))\n', '\ndef adjacent_replacements_algorithm_java(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == "__main__":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm_java(n, a))\n']
2022-04-12 19:34:51.668245 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef adjacent_replacements_algorithm(a):\n    n = len(a)\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == \"__main__\":\n    a = [1, 2, 3, 4, 5, 6, 7]\n    print(*adjacent_replacements_algorithm(a))\n"
    },
    {
      "index": 1,
      "text": "\ndef adjacent_replacements_algorithm(a):\n    n = len(a)\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == \"__main__\":\n    a = [1, 2, 3, 4, 5, 6]\n    print(*adjacent_replacements_algorithm(a))\n"
    },
    {
      "index": 2,
      "text": "\ndef adjacent_replacements_algorithm(a):\n    n = len(a)\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == \"__main__\":\n    a = [1, 2, 3, 4, 5, 6]\n    print(*adjacent_replacements_algorithm(a))\n"
    }
  ],
  "created": 1649792089,
  "object": "edit"
}
2022-04-12 19:34:51.668524 fix syntax errors 3 ['\n\ndef adjacent_replacements_algorithm(a):\n    n = len(a)\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == "__main__":\n    a = [1, 2, 3, 4, 5, 6, 7]\n    print(*adjacent_replacements_algorithm(a))\n', '\ndef adjacent_replacements_algorithm(a):\n    n = len(a)\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == "__main__":\n    a = [1, 2, 3, 4, 5, 6]\n    print(*adjacent_replacements_algorithm(a))\n', '\ndef adjacent_replacements_algorithm(a):\n    n = len(a)\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == "__main__":\n    a = [1, 2, 3, 4, 5, 6]\n    print(*adjacent_replacements_algorithm(a))\n']
2022-04-12 19:34:51.668556 size on output set 7
2022-04-12 19:34:51.668570 num operations 2
2022-04-12 19:34:51.668575 size on input set 1
2022-04-12 19:34:58.164914 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n#\n# n = int(input())\n# a = [int(i) for i in input().split()]\n#\n# for i in range(1, 5*10**8+1):\n#     for j in range(n):\n#         if a[j] == 2*i-1:\n#             a[j] = 2*i\n#         elif a[j] == 2*i:\n#             a[j] = 2*i-1\n#\n# for i in range(n):\n#     print(a[i], end=' ')\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**8+1):\n    for j in range(n):\n        if a[j] == 2*i-1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i-1\n\nfor i in range(n):\n    print(a[i], end=' ')\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**5+1):\n    for j in range(n):\n        if a[j] == 2*i-1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i-1\n\nfor i in range(n):\n    print(a[i], end=' ')\n"
    }
  ],
  "created": 1649792091,
  "object": "edit"
}
2022-04-12 19:34:58.165097 fix spelling mistakes 3 ["\n#\n# n = int(input())\n# a = [int(i) for i in input().split()]\n#\n# for i in range(1, 5*10**8+1):\n#     for j in range(n):\n#         if a[j] == 2*i-1:\n#             a[j] = 2*i\n#         elif a[j] == 2*i:\n#             a[j] = 2*i-1\n#\n# for i in range(n):\n#     print(a[i], end=' ')\n", "\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**8+1):\n    for j in range(n):\n        if a[j] == 2*i-1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i-1\n\nfor i in range(n):\n    print(a[i], end=' ')\n", "\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**5+1):\n    for j in range(n):\n        if a[j] == 2*i-1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i-1\n\nfor i in range(n):\n    print(a[i], end=' ')\n"]
2022-04-12 19:34:58.165122 size on output set 3
2022-04-12 19:34:58.165129 size on input set 3
2022-04-12 19:35:04.326583 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from sys import stdin, stdout\n\nn = int(stdin.readline())\na = [int(i) for i in stdin.readline().split()]\n\nfor i in range(1, 5 * 10 ** 8 + 1):\n    for j in range(n):\n        if a[j] == 2 * i - 1:\n            a[j] = 2 * i\n        elif a[j] == 2 * i:\n            a[j] = 2 * i - 1\n\nfor i in range(n):\n    stdout.write(str(a[i]) + ' ')\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**5+1):\n    for j in range(n):\n        if a[j] == 2*i-1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i-1\n\nfor i in range(n):\n    print(a[i], end=' ')\n"
    },
    {
      "index": 2,
      "text": "n = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5 * 10 ** 8 + 1):\n    for j in range(n):\n        if a[j] == 2 * i - 1:\n            a[j] = 2 * i\n        elif a[j] == 2 * i:\n            a[j] = 2 * i - 1\n\nfor i in range(n):\n    print(a[i], end=' ')\n"
    }
  ],
  "created": 1649792098,
  "object": "edit"
}
2022-04-12 19:35:04.326762 fix syntax errors 3 ["from sys import stdin, stdout\n\nn = int(stdin.readline())\na = [int(i) for i in stdin.readline().split()]\n\nfor i in range(1, 5 * 10 ** 8 + 1):\n    for j in range(n):\n        if a[j] == 2 * i - 1:\n            a[j] = 2 * i\n        elif a[j] == 2 * i:\n            a[j] = 2 * i - 1\n\nfor i in range(n):\n    stdout.write(str(a[i]) + ' ')\n", "\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**5+1):\n    for j in range(n):\n        if a[j] == 2*i-1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i-1\n\nfor i in range(n):\n    print(a[i], end=' ')\n", "n = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5 * 10 ** 8 + 1):\n    for j in range(n):\n        if a[j] == 2 * i - 1:\n            a[j] = 2 * i\n        elif a[j] == 2 * i:\n            a[j] = 2 * i - 1\n\nfor i in range(n):\n    print(a[i], end=' ')\n"]
2022-04-12 19:35:08.177923 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**5+1):\n    for j in range(n):\n        if a[j] == 2*i-1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i-1\n\nfor i in range(n):\n    print(a[i], end=' ')\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**5+1):\n    for j in range(n):\n        if a[j] == 2*i-1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i-1\n\nfor i in range(n):\n    print(a[i], end=' ')\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**5 + 1):\n    for j in range(n):\n        if a[j] == 2*i - 1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i - 1\n\nfor i in range(n):\n    print(a[i], end=' ')\n"
    }
  ],
  "created": 1649792104,
  "object": "edit"
}
2022-04-12 19:35:08.178129 fix syntax errors 3 ["\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**5+1):\n    for j in range(n):\n        if a[j] == 2*i-1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i-1\n\nfor i in range(n):\n    print(a[i], end=' ')\n", "\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**5+1):\n    for j in range(n):\n        if a[j] == 2*i-1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i-1\n\nfor i in range(n):\n    print(a[i], end=' ')\n", "\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**5 + 1):\n    for j in range(n):\n        if a[j] == 2*i - 1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i - 1\n\nfor i in range(n):\n    print(a[i], end=' ')\n"]
2022-04-12 19:35:14.841703 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**8+1):\n    for j in range(n):\n        if a[j] == 2*i-1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i-1\n\nfor i in range(n):\n    print(a[i], end=' ')\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**8+1):\n    for j in range(n):\n        if a[j] == 2*i-1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i-1\n\nfor i in range(n):\n    print(a[i], end=' ')\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**8+1):\n    for j in range(n):\n        if a[j] == 2*i-1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i-1\n\nfor i in range(n):\n    print(a[i], end=' ')\n"
    }
  ],
  "created": 1649792108,
  "object": "edit"
}
2022-04-12 19:35:14.841980 fix syntax errors 3 ["\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**8+1):\n    for j in range(n):\n        if a[j] == 2*i-1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i-1\n\nfor i in range(n):\n    print(a[i], end=' ')\n", "\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**8+1):\n    for j in range(n):\n        if a[j] == 2*i-1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i-1\n\nfor i in range(n):\n    print(a[i], end=' ')\n", "\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**8+1):\n    for j in range(n):\n        if a[j] == 2*i-1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i-1\n\nfor i in range(n):\n    print(a[i], end=' ')\n"]
2022-04-12 19:35:14.842007 size on output set 5
