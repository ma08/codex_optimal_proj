["import sys\nimport collections\n\ndef main():\n    n = int(sys.stdin.readline())\n    verdicts = sys.stdin.read().split()\n    counts = collections.Counter(verdicts).most_common()\n    for verdict, count in counts:\n        print(verdict, count)\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom collections import Counter\n\nN = int(input())\nS_list = []\nfor i in range(N):\n    S_list.append(input())\n\ncnt_dict = dict(Counter(S_list))\n\nprint(\"AC x {}\".format(cnt_dict[\"AC\"]))\nprint(\"WA x {}\".format(cnt_dict[\"WA\"]))\nprint(\"TLE x {}\".format(cnt_dict[\"TLE\"]))\nprint(\"RE x {}\".format(cnt_dict[\"RE\"]))\n", "\nfrom collections import Counter\n\nN = int(input())\nS = []\nfor i in range(N):\n    S.append(input())\n\ncnt_dict = dict(Counter(S))\n\nprint(\"AC x {}\".format(cnt_dict.get(\"AC\", 0)))\nprint(\"WA x {}\".format(cnt_dict.get(\"WA\", 0)))\nprint(\"TLE x {}\".format(cnt_dict.get(\"TLE\", 0)))\nprint(\"RE x {}\".format(cnt_dict.get(\"RE\", 0)))\n", "\nfrom collections import Counter\n\nN = int(input())\nS_list = []\nfor i in range(N):\n    S_list.append(input())\ncnt_dict = dict(Counter(S_list))\n\nprint(\"AC x {}\".format(cnt_dict.get(\"AC\", 0)))\nprint(\"WA x {}\".format(cnt_dict.get(\"WA\", 0)))\nprint(\"TLE x {}\".format(cnt_dict.get(\"TLE\", 0)))\nprint(\"RE x {}\".format(cnt_dict.get(\"RE\", 0)))\n", "\nimport sys\nimport collections\n\ndef main():\n    n = int(sys.stdin.readline())\n    verdicts = sys.stdin.read().splitlines()\n    counts = collections.Counter(verdicts).most_common()\n    for verdict, count in counts[:3]:\n        print(verdict, count)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport collections\n\ndef main():\n    n = int(sys.stdin.readline())\n    words = sys.stdin.read().split()\n    counts = collections.Counter(words)\n    for word, count in counts.items():\n        print(word, \" \", count)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\nimport collections\n\ndef main():\n    n = int(sys.stdin.readline())\n    verdicts = sys.stdin.read().split()\n    counts = collections.Counter(verdicts)\n    for verdict, count in counts.items():\n        print(verdict, \"x\", count, sep=\"\")\n\nif __name__ == '__main__':\n    main()\n", "\nfrom collections import Counter\n\nN = int(input())\nS_list = []\nfor i in range(N):\n    S_list.append(input())\n\ncnt_dict = dict(Counter(S_list))\n\nprint(\"AC x {}\".format(cnt_dict.get(\"AC\", 0)))\nprint(\"WA x {}\".format(cnt_dict.get(\"WA\", 0)))\nprint(\"TLE x {}\".format(cnt_dict.get(\"TLE\", 0)))\nprint(\"RE x {}\".format(cnt_dict.get(\"RE\", 0)))\n", "\n\nimport sys\nimport collections\n\ndef main():\n    n = int(sys.stdin.readline())\n    verdicts = sys.stdin.read().splitlines()\n    counts = collections.Counter(verdicts)\n    for verdict, count in counts.items():\n        print(verdict + \" x \" + str(count))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport collections\n\ndef main():\n    n = int(sys.stdin.readline())\n    words = sys.stdin.read().split()\n    count = collections.Counter(words)\n    for word, count in count.items():\n        print(word, \"x\", count)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nimport math\n \nN = int(input())\nA = list(map(int, input().split()))\n \ncnt = 0\nfor i in range(N):\n    while A[i] % 2 == 0:\n        A[i] /= 2\n        cnt += 1\n \nprint(cnt)\n", "\n\nimport sys\nimport collections\n\ndef main():\n    n = int(sys.stdin.readline())\n    words = sys.stdin.read().splitlines()\n    counts = collections.Counter(words)\n    for word, count in counts.items():\n        print(word, count)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\nimport collections\n\ndef main():\n    n = int(sys.stdin.readline())\n    verdicts = sys.stdin.read().split()\n    counts = collections.Counter(verdicts)\n    for verdict, count in counts.items():\n        print(verdict, \"x\", count, sep=\"\")\n\nif __name__ == '__main__':\n    main()\n"]