["\n\nn = int(input())\n\nfor i in range(n):\n    line = input()\n    line_list = line.split()\n\n\n\n\n\n#fix spelling mistakes\n\n    if len(line_list) > 2 and line_list[0] == \"Simon\" and line_list[1] == \"says\":\n        print(\" \".join(line_list[2:]))\n", "n = int(input())\nfor i in range(n):\n    line = input()\n    if line.startswith(\"Simon says\"):\n        print(line[10:])\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sat Apr  4 10:37:33 2020\n\n@author: abhijithneilabraham\n\"\"\"\n\nimport os\nos.getcwd()\nos.chdir('/Users/abhijithneilabraham/Downloads')\nos.getcwd()\nimport pandas as pd\ndf=pd.read_csv('/Users/abhijithneilabraham/Downloads/train.csv')\ndf.head()\ndf.describe()\ndf.info()\ndf.shape\ndf.columns\ndf.isnull().sum()\ndf.isnull().sum().sum()\ndf.isnull().sum().sum()/df.shape[0]\ndf.isnull().sum().sum()/df.shape[0]*100\ndf.shape[0]\ndf.shape[1]\ndf.shape[0]*df.shape[1]\nlen(df.columns)\nlen(df.index)\ndf.columns.tolist()\ndf.index.tolist()\ndf.dtypes\ndf.dtypes.value_counts()\ndf.dtypes.value_counts().plot(kind='bar')\nimport matplotlib.pyplot as plt\ndf.dtypes.value_counts().plot(kind='bar')\nplt.show()\ndf.dtypes.value_counts().plot(kind='bar')\nplt.show()\ndf.dtypes.value_counts().plot(kind='pie')\nplt.show()\ndf.dtypes.value_counts().plot(kind='bar')\nplt.show()\ndf.dtypes.value_counts().plot(kind='pie')\nplt.show()\ndf.dtypes.value_counts().plot(kind='barh')\nplt.show()\ndf.dtypes.value_counts().plot(kind='barh')\nplt.savefig('plot.png')\ndf.dtypes.value_counts().plot(kind='barh')\nplt.savefig('plot.jpg')\ndf.dtypes.value_counts().plot(kind='barh')\nplt.savefig('plot.svg')\ndf.dtypes.value_counts().plot(kind='barh')\nplt.savefig('plot.pdf')\ndf.dtypes.value_counts().plot(kind='barh')\nplt.savefig('plot.png',dpi=300)\ndf.dtypes.value_counts().plot(kind='barh')\nplt.savefig('plot.png',dpi=500)\ndf.dtypes.value_counts().plot(kind='barh')\nplt.savefig('plot.png',dpi=1000)\ndf.dtypes.value_counts().plot(kind='barh')\nplt.savefig('plot.png',dpi=2000)\ndf.dtypes.value_counts().plot(kind='barh')\nplt.savefig('plot.png',dpi=500)\ndf.dtypes.value_counts().plot(kind='barh')\nplt.savefig('plot.png',dpi=500,bbox_inches='tight')\ndf.dtypes.value_counts().plot(kind='barh')\nplt.savefig('plot.png',dpi=500,bbox_inches='tight',transparent=True)\ndf.dtypes.value_counts().plot(kind='barh')\nplt.savefig('plot.png',dpi=500,bbox_inches='tight',transparent=True,facecolor='red')\ndf.dtypes.value_counts().plot(kind='barh')\nplt.savefig('plot.png',dpi=500,bbox_inches='tight',transparent=True,facecolor='red',edgecolor='blue')\ndf.dtypes.value_counts().plot(kind='barh')\nplt.savefig('plot.png',dpi=500,bbox_inches='tight',transparent=True,facecolor='red',edgecolor='blue',orientation='landscape')\ndf.dtypes.value_counts().plot(kind='barh')\nplt.savefig('plot.png',dpi=500,bbox_inches='tight',transparent=True,facecolor='red',edgecolor='blue',orientation='portrait')\ndf.dtypes.value_counts().plot(kind='barh')\nplt.savefig('plot.png',dpi=500,bbox_inches='tight',transparent=True,facecolor='red',edgecolor='blue',orientation='landscape',papertype='legal')\ndf.dtypes.value_counts().plot(kind='barh')\nplt.savefig('plot.png',dpi=500,bbox_inches='tight',transparent=True,facecolor='red',edgecolor='blue',orientation='landscape',papertype='legal',format='png')\ndf.dtypes.value_counts().plot(kind='barh')\nplt.savefig('plot.png',dpi=500,bbox_inches='tight',transparent=True,facecolor='red',edgecolor='blue',orientation='landscape',papertype='legal',format='png',pad_inches=0.5)\ndf.dtypes.value_counts().plot(kind='barh')\nplt.savefig('plot.png',dpi=500,bbox_inches='tight',transparent=True,facecolor='red',edgecolor='blue',orientation='landscape',papertype='legal',format='png',pad_inches=0.5,frameon=True)\ndf.dtypes.value_counts().plot(kind='barh')\nplt.savefig('plot.png',dpi=500,bbox_inches='tight',transparent=True,facecolor='red',edgecolor='blue',orientation='landscape',papertype='legal',format='png',pad_inches=0.5,frameon=True,metadata=None)\ndf.dtypes.value_counts().plot(kind='barh')\nplt.savefig('plot.png',dpi=500,bbox_inches='tight',transparent=True,facecolor='red',edgecolor='blue',orientation='landscape',papertype='legal',format='png',pad_inches=0.5,frameon=True,metadata=None,bbox_extra_artists=None)\ndf.dtypes.value_counts().plot(kind='barh')\nplt.savefig('plot.png',dpi=500,bbox_inches='tight',transparent=True,facecolor='red',edgecolor='blue',orientation='landscape',papertype='legal',format='png',pad_inches=0.5,frameon=True,metadata=None,bbox_extra_artists=None,bbox_inches='tight')\ndf.dtypes.value_counts().plot(kind='barh')\nplt.savefig('plot.png',dpi=500,bbox_inches='tight',transparent=True,facecolor='red',edgecolor='blue',orientation='landscape',papertype='legal',format='png',pad_inches=0.5,frameon=True,metadata=None,bbox_extra_artists=None,bbox_inches='tight',)\ndf.dtypes.value_counts().plot(kind='barh')\nplt.savefig('plot.png',dpi=500,bbox_inches='tight',transparent=True,facecolor='red',edgecolor='blue',orientation='landscape',papertype='legal',format='png',pad_inches=0.5,frameon=True,metadata=None,bbox_extra_artists=None,bbox_inches='tight',)\ndf.dtypes.value_counts().plot(kind='barh')\nplt.savefig('plot.\n", "\nimport fileinput\n\nnum_lines = int(fileinput.input()[0].strip())\n\nfor line in fileinput.input()[:num_lines+1]:\n    if line[:11] == 'Simon says':\n        print(line[11:].strip())\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    for i in range(n):\n        command = sys.stdin.readline()\n        if command[:11] == \"Simon says \":\n            print(command[11:])\n\nmain()\n", "\nn = int(input())\nfor i in range(n):\n    line = input()\n    if line.startswith(\"Simon says \"):\n        print(line[11:].strip())\n", "n = int(input())\nfor i in range(n):\n    line = input()\n    if line.startswith(\"Simon says\"):\n        print(line[11:])\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    for i in range(n):\n        command = sys.stdin.readline()\n        if command[:10] == \"Simon says\":\n            print(command[10:])\nmain()\n", "\n\nimport sys\n\n# num_lines = int(fileinput.input()[0]) #read the first line of the file\n\n# for line in fileinput.input()[:num_lines]: #loop through the file\n#     if line[:11] == 'Simon says':\n#         print(line[11:])\n\nnum_lines = int(sys.stdin.readline())\n\nfor line in sys.stdin:\n    if line.startswith(\"Simon says\"):\n        print(line[11:]) #strip off \"Simon says\"\n", "N = int(input())\nfor i in range(N):\n    command = input()\n    if command[:10] == \"Simon says\":\n        print(command[10:])\n", "def f(x):\n    if x == 1:\n        return 1\n    else:\n        return f(x-1) * x\n\n\nprint(f(5))\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    for i in range(n): \n        command = sys.stdin.readline()\n        if command[:10] == \"Simon says\":\n            print(command[11:])\n\nmain()\n", "\n\nn = int(input())\nfor i in range(n):\n    line = input()\n        print(line[11:])\n    if line.startswith(\"Simon says\"):\n    else:\n        print()\n", "#!/usr/bin/env python\n\n# Simon says: print the second line if the first line starts with \"Simon says\"\n\nfor _ in range(int(input())):\n    if input().startswith(\"Simon says\"):\n        print(input())\n", "print(input(\"What is your name? \"))\n", "# Simon says\n\nimport sys\n\nfor _ in range(int(input())):\n    if input().startswith(\"Simon says\"):\n        print(input())\n    else:\n        print(0)\n", "\n\nn = int(input())\n\nfor i in range(n):\n    line = input()\n    line_list = line.split()\n\n    if len(line_list) > 2 and line_list[0] == \"Simon\" and line_list[1] == \"says\":\n        print(\" \".join(line_list[2:]))\n", "\n\nimport fileinput\n\nnum_lines = int(fileinput.input()[0])  # read the first line of the file\n\nfor line in fileinput.input()[:num_lines]:  # loop through the file\n    if line[:11] == 'Simon says':\n        print(line[11:])\n", "\n\nn = int(input())\n\nfor i in range(n):\n    line = input()\n    line_list = line.split()\n\n\n#fix spelling mistakes\n\n    if len(line_list) >= 2 and line_list[0] == \"Simon\" and line_list[1] == \"says\":\n        print(\" \".join(line_list[2:]))\n", "n = int(input())\nfor i in range(n):\n    line = input()\n    if line.startswith(\"Simon says \"):\n        print(line[11:])\n\nN = int(input())\nfor i in range(N):\n    line = input()\n    if line.startswith(\"simon says \"):\n        print(line[11:])\n", "\nN = int(input())\nfor _ in range(N):\n    line = input()\n    if line.startswith(\"Simon says\"):\n        print(line[11:])\n", "import sys\n\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    for i in range(n):\n        command = sys.stdin.readline()\n        if command[:10] == \"Simon says\":\n            print(command[11:])\n\n\nmain()\n", "print(\"Hello World\")\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    for i in range(n):\n        command = sys.stdin.readline()\n        if command[:10] == \"Simon says\":\n            print(command[11:])\n\nmain()\n", "\nimport fileinput\nnum_lines = int(fileinput.input()[0].rstrip())\n\nfor line in fileinput.input()[:num_lines].rstrip():\n    if line[:11] == 'Simon says':\n        print(line[11:])\n", "\n\nfor _ in range(int(input())):\n    print(input()) if input().startswith(\"Simon says\") else print(\"\")\n", "import sys\n\nfor _ in range(int(input())):\n    print(input()) if input().startswith(\"Simon says\") else ''\n", "import sys\n\nfor _ in range(int(input())):\n    print(input()) if input().startswith(\"Simon says\") else print(0)\n", "#!/usr/bin/env python3\n\nn = int(input())\nfor i in range(n):\n    line = input()\n    if line.startswith(\"Simon says \"):\n        print(line[11:])\n", "print(\"Hello World!\")\n", "# https://open.kattis.com/problems/simonsays\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    for i in range(n):\n        command = sys.stdin.readline()\n        if command[:10] == \"Simon says\":\n            print(command[11:])\n\nmain()\n", "for _ in range(int(input())):\n    print(input()) if input().startswith(\"Simon says\") else 0\n", "\n# #\n# n = int(input())\n\n# for i in range(n):\n#     line = input()\n#     line_list = line.split()\n\n#     if len(line_list) > 2 and line_list[0] == \"Simon\" and line_list[1] == \"says\":\n#         print(\" \".join(line_list[2:]))\n\n\n# #\n# n = int(input())\n\n# for i in range(n):\n#     line = input()\n#     line_list = line.split()\n\n#     if len(line_list) > 2 and line_list[0] == \"Simon\" and line_list[1] == \"says\":\n#         print(\" \".join(line_list[2:]))\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    for i in range(n):\n        command = sys.stdin.readline()\n        if command[:10] == \"Simon says\":\n            print(command[11:])\n\nmain()\n", "\nN = int(input())\nfor i in range(N):\n    command = input().split()\n    if command[0] == \"Simon\" and command[1] == \"says\":\n        print(\" \".join(command[2:]))\n", "N = int(input())\nfor i in range(N):\n    command = input().split()\n    if command[0] == \"Simon\" and command[1] == \"says\":\n        print(\" \".join(command[2:]))\n", "\n\nimport re\nn = int(input()) # number of lines\nfor i in range(n): # read each line\n    line = input() # read line\n    if line.startswith(\"Simon says \"): # if the line starts with \"Simon says\"\n        print(line[11:]) # print the line without \"Simon says\"\n", "\n\n# N = int(input())\n# for _ in range(N):\n#     line = input()\n#     if line.startswith(\"Simon says\"):\n#         print(line[11:])\n\n# a = int(input())\n# b = int(input())\n# c = int(input())\n# d = int(input())\n# e = int(input())\n# f = int(input())\n# g = int(input())\n# h = int(input())\n# i = int(input())\n# j = int(input())\n# k = int(input())\n# l = int(input())\n# m = int(input())\n# n = int(input())\n# o = int(input())\n# p = int(input())\n# q = int(input())\n# r = int(input())\n# s = int(input())\n# t = int(input())\n# u = int(input())\n# v = int(input())\n# w = int(input())\n# x = int(input())\n# y = int(input())\n# z = int(input())\n#\n# if a == 1:\n#     print(\"a\")\n# if b == 1:\n#     print(\"b\")\n# if c == 1:\n#     print(\"c\")\n# if d == 1:\n#     print(\"d\")\n# if e == 1:\n#     print(\"e\")\n# if f == 1:\n#     print(\"f\")\n# if g == 1:\n#     print(\"g\")\n# if h == 1:\n#     print(\"h\")\n# if i == 1:\n#     print(\"i\")\n# if j == 1:\n#     print(\"j\")\n# if k == 1:\n#     print(\"k\")\n# if l == 1:\n#     print(\"l\")\n# if m == 1:\n#     print(\"m\")\n# if n == 1:\n#     print(\"n\")\n# if o == 1:\n#     print(\"o\")\n# if p == 1:\n#     print(\"p\")\n# if q == 1:\n#     print(\"q\")\n# if r == 1:\n#     print(\"r\")\n# if s == 1:\n#     print(\"s\")\n# if t == 1:\n#     print(\"t\")\n# if u == 1:\n#     print(\"u\")\n# if v == 1:\n#     print(\"v\")\n# if w == 1:\n#     print(\"w\")\n# if x == 1:\n#     print(\"x\")\n# if y == 1:\n#     print(\"y\")\n# if z == 1:\n#     print(\"z\")\n\n# a = input()\n# b = input()\n# c = input()\n# d = input()\n# e = input()\n# f = input()\n# g = input()\n# h = input()\n# i = input()\n# j = input()\n# k = input()\n# l = input()\n# m = input()\n# n = input()\n# o = input()\n# p = input()\n# q = input()\n# r = input()\n# s = input()\n# t = input()\n# u = input()\n# v = input()\n# w = input()\n# x = input()\n# y = input()\n# z = input()\n#\n# if a == \"1\":\n#     print(\"a\")\n# if b == \"1\":\n#     print(\"b\")\n# if c == \"1\":\n#     print(\"c\")\n# if d == \"1\":\n#     print(\"d\")\n# if e == \"1\":\n#     print(\"e\")\n# if f == \"1\":\n#     print(\"f\")\n# if g == \"1\":\n#     print(\"g\")\n# if h == \"1\":\n#     print(\"h\")\n# if i == \"1\":\n#     print(\"i\")\n# if j == \"1\":\n#     print(\"j\")\n# if k == \"1\":\n#     print(\"k\")\n# if l == \"1\":\n#     print(\"l\")\n# if m == \"1\":\n#     print(\"m\")\n# if n == \"1\":\n#     print(\"n\")\n# if o == \"1\":\n#     print(\"o\")\n# if p == \"1\":\n#     print(\"p\")\n# if q == \"1\":\n#     print(\"q\")\n# if r == \"1\":\n#     print(\"r\")\n# if s == \"1\":\n#     print(\"s\")\n# if t == \"1\":\n#     print(\"t\")\n# if u == \"1\":\n#     print(\"u\")\n# if v == \"1\":\n#     print(\"v\")\n# if w == \"1\":\n#     print(\"w\")\n# if x == \"1\":\n#     print(\"x\")\n# if y == \"1\":\n#     print(\"y\")\n# if z == \"1\":\n#     print(\"z\")\n", "\n\nn = int(input())\nfor i in range(n):\n    line = input()\n    if line.startswith(\"Simon says\"):\n        print(line[11:]) \n", "\n\nx = int(input())\n\nfor i in range(x):\n    print(i ** 2)\n", "\n\nN = int(input())\nfor i in range(N):\n    line = raw_input()\n    if line.startswith(\"Simon says \"):\n        print(line[11:])\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    for i in range(n):\n        command = sys.stdin.readline()\n        if command[:10] == \"Simon says\":\n            print(command[10:])\n\nmain()\n", "\nimport fileinput\nnum_lines = int(fileinput.input()[0].rstrip())\n\nfor line in fileinput.input()[:num_lines]:\n    if line.rstrip()[:11] == 'Simon says':\n        print(line.rstrip()[11:])\n", "\nimport fileinput\n\nfor line in fileinput.input():\n    if line[:11] == 'Simon says':\n        print(line[11:])\n", "\n\nn = int(input())\nfor i in range(n):\n    line = input()\n        print(line[11:])\n    if line.startswith(\"Simon says\"):\n    else:\n        print(\"\")\n", "for _ in range(int(input())):\n    if input().startswith(\"Simon says\"):\n        print(input())\n", "\nimport fileinput\n\nnum_lines = int(fileinput.input()[0]) # get the first line of the file\n\nfor line in fileinput.input()[:num_lines]: # iterate over the file\n    if line[:11] == 'Simon says':\n        print(line[11:])\n", "n = int(input())\nfor i in range(n):\n    command = input().split(\" \")\n    if command[0] == \"Simon\" and command[1] == \"says\": \n        print(\" \".join(command[2:])) \n", "\n\nfrom typing import List\n\n\nclass Solution:\n    def twoSum(self, nums: List[int], target: int) -> List[int]:\n        for i in range(len(nums)):\n            for j in range(i+1, len(nums)):\n                if nums[i] + nums[j] == target:\n                    return [i, j]\n\n\nif __name__ == '__main__':\n    solution = Solution()\n    nums = [2, 7, 11, 15]\n    target = 9\n    print(solution.twoSum(nums, target))\n", "for i in range(int(input())):\n    s = input()\n    if \"Simon says\" in s:\n        print(s[11:])\n", "#!/usr/bin/env python3\n\nimport fileinput\n\nnum_lines = int(fileinput.input()[0])\n\nfor line in fileinput.input()[:num_lines]:\n    if line[:11] == 'Simon says':\n        print(line[11:])\n", "\nn = int(input())\nfor i in range(n):\n    line = input()\n    if line.startswith(\"Simon says\"):\n        print(line[11:])\n", "\n#for\nn = int(input())\n\nfor i in range(n):\n    line = input()\n    line_list = line.split()\n\n    if len(line_list) > 2 and line_list[0] == \"Simon\" and line_list[1] == \"says\":\n        print(\" \".join(line_list[2:]))\n", "\n\nimport fileinput\n\nnum_lines = int(fileinput.input()[0]) # read the first line of the file\n\nfor line in fileinput.input()[:num_lines]: # loop through the file\n    if line[:11] == 'Simon says':\n        print(line[11:])\n", "n = int(input())\nfor i in range(n):\n    line = input()\n    if \"Simon says\" in line:\n        print(line[11:])\n", "\nn = int(input())\n\nfor i in range(n):\n    line = input()\n    line_list = line.split()\n\n    if len(line_list) > 2 and line_list[0] == \"Simon\" and line_list[1] == \"says\":\n        print(\" \".join(line_list[2:]))\n", "#\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    for i in range(n):\n        command = sys.stdin.readline()\n        if command[:11] == \"Simon says\":\n            print(command[12:])\n\nmain()\n", "try:\n    while True:\n        n = int(input())\n        for i in range(n):\n            command = input().split()\n            if command[0] == \"Simon\" and command[1] == \"says\":\n                print(\" \".join(command[2:]))\nexcept:\n    pass\n", "# Simon says\n\nimport sys\n\nfor _ in range(int(sys.stdin.readline())):\n    print(sys.stdin.readline()) if sys.stdin.readline().startswith(\"Simon says\") else 0\n", "\n\nfor _ in range(int(input())):\n    print(input()) if input().startswith(\"Simon says\") else None\n", "\n\nn = int(input())\n\nfor i in range(n):\n    line = input()\n    line_list = line.split() \n\n    if len(line_list) > 2 and line_list[0] == \"Simon\" and line_list[1] == \"says\":  # check length of list\n        print(\" \".join(line_list[2:]))\n"]