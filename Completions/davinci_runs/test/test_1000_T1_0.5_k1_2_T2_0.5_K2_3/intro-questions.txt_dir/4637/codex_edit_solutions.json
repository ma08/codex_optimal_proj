["\ndef max_sum_after_k_swaps(a, b, k):\n    arr = a + b \n    arr.sort() \n    return sum(arr[-k:]) \n\ndef main():\n    t = int(input()) \n    while t > 0: \n        t -= 1 \n        n, k = map(int, input().split()) \n        a = list(map(int, input().split())) \n        b = list(map(int, input().split())) \n        print(max_sum_after_k_swaps(a, b, k)) \n\nif __name__ == '__main__':\n    main() \n", "\ndef solve_problem():\n    # Get number of test cases\n    t = int(input())\n\n    # Iterate over test cases\n    for i in range(t):\n        # Read input\n        n, k = map(int, input().split())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n\n        # Sort both arrays\n        a.sort()\n        b.sort(reverse=True)\n\n        # Compute sum of first k elements of a\n        # and replace the first k elements of a\n        # with the first k elements of b\n        result = sum(a[:k])\n        a[:k] = b[:k]\n\n        # Print result\n        print(result)\n\n\nif __name__ == '__main__':\n    solve_problem()\n", "\n\n\ndef solve_problem():\n    # Get number of test cases and number of elements\n    t, n = map(int, input().split())\n\n    # Iterate over test cases\n    for i in range(t):\n        # Read input\n        # Read input\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n\n        # Sort both arrays\n        a.sort()\n        b.sort(reverse=True)\n\n        # Compute sum of first k elements of a and replace\n        # the first k elements of a with the first k elements of b\n        result = sum(a[0:k])\n        a[0:k] = b[0:k]\n\n        # Print result\n        print(result)\n\n\nif __name__ == '__main__':\n    solve_problem()\n", "\ndef solve_problem():\n    # Get number of test cases\n    t = int(input())\n\n    # Iterate over test cases\n    for i in range(t):\n        # Read input\n        n, k = map(int, input().split())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n\n        # Sort both arrays\n        a.sort()\n        b.sort(reverse=True)\n\n        # Compute sum of first k elements of a and replace\n        # the first k elements of a with the first k elements of b\n        result = sum(a[0:k])\n        a[0:k] = b[0:k]\n\n        # Print result\n        print(result)\n\n\nif __name__ == '__main__':\n    solve_problem()\n", "\n\ndef max_sum_after_k_swaps(a, b, k):\n    arr = a + b\n    arr.sort(reverse=True)\n    ans = 0\n    j = 0\n    while j < k:\n        ans += arr[j]\n        j += 1\n    return ans\n\ndef main():\n    t = int(input())\n    while t > 0:\n        t -= 1\n        n, k = map(int, input().split())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n        print(max_sum_after_k_swaps(a, b, k, n))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef max_sum_after_k_swaps(a, b, k)\n    arr = a + b\n    arr.sort(reverse=True)\n    return sum(arr[:k])\n\ndef main():\n    t = int(input())\n    while t > 0:\n        t -= 1\n        n, k = map(int, input().split())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n        print(max_sum_after_k_swaps(a, b, k))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef max_sum_after_k_swaps(a, b, k):\n    arr = a + b\n    arr.sort(reverse=True)\n    ans = 0\n    j = 0\n    while j < k:\n        ans += arr[j]\n        j += 1\n    return ans\n\ndef main():\n    t = int(input())\n    while t > 0:\n        t -= 1\n        n, k = map(int, input().split())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n        print(max_sum_after_k_swaps(a, b, k))\n\nif __name__ == '__main__':\n    main()\n", "\ndef solve_problem():\n    # Get number of test cases\n    t = int(input())\n\n    # Iterate over test cases\n    for i in range(t):\n        # Read input\n        n, k = map(int, input().split())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n\n        # Sort both arrays\n        a.sort()\n        b.sort(reverse=True)\n\n        # Compute sum of first k elements of a\n        # and replace the first k elements of a\n        # with the first k elements of b\n        result = sum(a[0:k])\n        a[:k] = b[:k]\n\n        # Print result\n        print(result)\n\n\nif __name__ == '__main__':\n    solve_problem()\n", "\ndef solve_problem():\n    # Get number of test cases\n    t = int(input())\n\n    # Iterate over test cases\n    for i in range(t):\n        # Read input\n        n, k = map(int, input().split())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n\n        # Sort both arrays\n        a.sort()\n        b.sort(reverse=True)\n\n        # Compute sum of first k elements of a and replace\n        # the first k elements of a with the first k elements of b\n        result = sum(a[:k])\n        a[:k] = b[:k]\n\n        # Print result\n        print(result)\n\n\nif __name__ == '__main__':\n    solve_problem()\n", "\n\ndef max_sum_after_k_swaps(a, b, k):\n    arr = a + b\n    arr.sort()\n\n    return sum(arr[-k:])\n\ndef main():\n    t = int(input())\n    while t > 0:\n        t -= 1\n        n, k = map(int, input().split())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n        print(max_sum_after_k_swaps(a, b, k))\n\nif __name__ == '__main__':\n    main()\n"]