2022-04-12 23:23:12.297483 num operations 2
2022-04-12 23:23:12.297493 size on input set 1
2022-04-12 23:23:15.343065 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"
    },
    {
      "index": 1,
      "text": "import sys\nimport xml.etree.ElementTree as ET\n\n\n\ndef get_attr_number(node):\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = ET.ElementTree(ET.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"
    }
  ],
  "created": 1649805792,
  "object": "edit"
}
2022-04-12 23:23:15.343298 fix spelling mistakes 3 ["#!/usr/bin/env python3\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n", "import sys\nimport xml.etree.ElementTree as ET\n\n\n\ndef get_attr_number(node):\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = ET.ElementTree(ET.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n", "\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"]
2022-04-12 23:23:15.343330 size on output set 3
2022-04-12 23:23:15.343337 size on input set 3
2022-04-12 23:23:17.685828 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    return len(node.attrib) + sum([get_attr_number(child) for child in node]) \n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    return len(node.attrib) + sum([get_attr_number(child) for child in node.iter()])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"
    }
  ],
  "created": 1649805795,
  "object": "edit"
}
2022-04-12 23:23:17.686027 fix syntax errors 3 ["#!/usr/bin/env python3\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    return len(node.attrib) + sum([get_attr_number(child) for child in node]) \n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n", "#!/usr/bin/env python3\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n", "#!/usr/bin/env python3\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    return len(node.attrib) + sum([get_attr_number(child) for child in node.iter()])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"]
2022-04-12 23:23:19.240718 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"
    },
    {
      "index": 2,
      "text": "\n\n\n\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"
    }
  ],
  "created": 1649805797,
  "object": "edit"
}
2022-04-12 23:23:19.240927 fix syntax errors 3 ["\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n", "\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n", "\n\n\n\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"]
2022-04-12 23:23:21.640948 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\nimport xml.etree.ElementTree as et\n\n\n\ndef get_attr_number(node):\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = et.ElementTree(et.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"
    },
    {
      "index": 1,
      "text": "import sys\nimport xml.etree.ElementTree as ET\n\ndef get_attr_number(node):\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = ET.ElementTree(ET.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"
    },
    {
      "index": 2,
      "text": "import sys\nimport xml.etree.ElementTree as ET\n\n\ndef get_attr_number(node):\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = ET.ElementTree(ET.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"
    }
  ],
  "created": 1649805799,
  "object": "edit"
}
2022-04-12 23:23:21.641205 fix syntax errors 3 ["import sys\nimport xml.etree.ElementTree as et\n\n\n\ndef get_attr_number(node):\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = et.ElementTree(et.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n", "import sys\nimport xml.etree.ElementTree as ET\n\ndef get_attr_number(node):\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = ET.ElementTree(ET.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n", "import sys\nimport xml.etree.ElementTree as ET\n\n\ndef get_attr_number(node):\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = ET.ElementTree(ET.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"]
2022-04-12 23:23:21.641235 size on output set 8
2022-04-12 23:23:21.641245 num operations 2
2022-04-12 23:23:21.641250 size on input set 1
2022-04-12 23:23:23.566043 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "import sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print get_attr_number(root)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n\n    print get_attr_number(root)\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    \n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print get_attr_number(root)\n"
    }
  ],
  "created": 1649805801,
  "object": "edit"
}
2022-04-12 23:23:23.566219 fix spelling mistakes 3 ["import sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print get_attr_number(root)\n", "\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n\n    print get_attr_number(root)\n", "\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    \n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print get_attr_number(root)\n"]
2022-04-12 23:23:23.566249 size on output set 3
2022-04-12 23:23:23.566255 size on input set 3
2022-04-12 23:23:25.535307 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    \n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print get_attr_number(root)\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print get_attr_number(root)\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print (get_attr_number(root))\n"
    }
  ],
  "created": 1649805803,
  "object": "edit"
}
2022-04-12 23:23:25.535494 fix syntax errors 3 ["\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    \n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print get_attr_number(root)\n", "\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print get_attr_number(root)\n", "\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print (get_attr_number(root))\n"]
2022-04-12 23:23:28.315020 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n\n    print(get_attr_number(root))\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n\n    print(get_attr_number(root))\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\nimport xml.etree.ElementTree as etree\n\n\ndef get_attr_number(node):\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n\n    print(get_attr_number(root))\n"
    }
  ],
  "created": 1649805805,
  "object": "edit"
}
2022-04-12 23:23:28.315279 fix syntax errors 3 ["\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n\n    print(get_attr_number(root))\n", "\n\nimport sys\n\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n\n    print(get_attr_number(root))\n", "\nimport sys\nimport xml.etree.ElementTree as etree\n\n\ndef get_attr_number(node):\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n\n    print(get_attr_number(root))\n"]
2022-04-12 23:23:32.335734 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node.getchildren(): \n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print get_attr_number(root)\n"
    },
    {
      "index": 1,
      "text": "import sys\nimport xml.etree.ElementTree as etree\n"
    },
    {
      "index": 2,
      "text": "import sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"
    }
  ],
  "created": 1649805808,
  "object": "edit"
}
2022-04-12 23:23:32.335921 fix syntax errors 3 ["import sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node.getchildren(): \n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print get_attr_number(root)\n", 'import sys\nimport xml.etree.ElementTree as etree\n', "import sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"]
2022-04-12 23:23:32.335947 size on output set 9
