2022-04-12 18:06:12.087835 num operations 2
2022-04-12 18:06:12.087844 size on input set 1
2022-04-12 18:06:20.975638 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    cheese = {}\n    for i in range(n):\n        cheese_type = input().split()\n        if cheese_type[1] not in cheese:\n            cheese[cheese_type[1]] = 0\n        cheese[cheese_type[1]] += 1\n    print(cheese[\"soft\"] if cheese[\"soft\"] < cheese[\"hard\"] else cheese[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef read_file(filename):\n    with open(filename,\"r\") as f:\n        lines = f.readlines()\n    return lines\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if cheeses[\"soft\"] < cheeses[\"hard\"] else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649786772,
  "object": "edit"
}
2022-04-12 18:06:20.975867 fix spelling mistakes 3 ['\n\ndef main():\n    n = int(input())\n    cheese = {}\n    for i in range(n):\n        cheese_type = input().split()\n        if cheese_type[1] not in cheese:\n            cheese[cheese_type[1]] = 0\n        cheese[cheese_type[1]] += 1\n    print(cheese["soft"] if cheese["soft"] < cheese["hard"] else cheese["hard"])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef read_file(filename):\n    with open(filename,"r") as f:\n        lines = f.readlines()\n    return lines\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses["soft"] if cheeses["soft"] < cheeses["hard"] else cheeses["hard"])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 18:06:20.975896 size on output set 3
2022-04-12 18:06:20.975903 size on input set 3
2022-04-12 18:06:23.806986 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    cheese = {}\n    for i in range(n):\n        cheese_type = input().split()\n        if cheese_type[1] not in cheese:\n            cheese[cheese_type[1]] = 0\n        cheese[cheese_type[1]] += int(cheese_type[0])\n    print(cheese[\"soft\"] if cheese[\"soft\"] < cheese[\"hard\"] else cheese[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    cheese = {}\n    for i in range(n):\n        cheese_type = input().split()\n        if cheese_type[1] not in cheese:\n            cheese[cheese_type[1]] = 0\n        cheese[cheese_type[1]] += 1\n    print(cheese[\"soft\"] if cheese[\"soft\"] <= cheese[\"hard\"] else cheese[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    cheese = {}\n    for i in range(n):\n        cheese_type = input().split()\n        if cheese_type[1] not in cheese:\n            cheese[cheese_type[1]] = 0\n        cheese[cheese_type[1]] += 1\n    print(cheese[\"soft\"] if cheese.get(\"soft\", 0) < cheese.get(\"hard\", 0) else cheese.get(\"hard\", 0))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649786781,
  "object": "edit"
}
2022-04-12 18:06:23.807186 fix syntax errors 3 ['\n\ndef main():\n    n = int(input())\n    cheese = {}\n    for i in range(n):\n        cheese_type = input().split()\n        if cheese_type[1] not in cheese:\n            cheese[cheese_type[1]] = 0\n        cheese[cheese_type[1]] += int(cheese_type[0])\n    print(cheese["soft"] if cheese["soft"] < cheese["hard"] else cheese["hard"])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    cheese = {}\n    for i in range(n):\n        cheese_type = input().split()\n        if cheese_type[1] not in cheese:\n            cheese[cheese_type[1]] = 0\n        cheese[cheese_type[1]] += 1\n    print(cheese["soft"] if cheese["soft"] <= cheese["hard"] else cheese["hard"])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    cheese = {}\n    for i in range(n):\n        cheese_type = input().split()\n        if cheese_type[1] not in cheese:\n            cheese[cheese_type[1]] = 0\n        cheese[cheese_type[1]] += 1\n    print(cheese["soft"] if cheese.get("soft", 0) < cheese.get("hard", 0) else cheese.get("hard", 0))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 18:06:26.645887 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef read_file(filename):\n    with open(filename, \"r\") as f:\n        lines = f.readlines()\n    return lines\n"
    },
    {
      "index": 1,
      "text": "\n\ndef read_file(filename):\n    with open(filename, \"r\") as f:\n        lines = f.readlines()\n    return lines\n"
    },
    {
      "index": 2,
      "text": "\n\ndef read_file(filename):\n    with open(filename, \"r\") as f:\n        lines = f.readlines()\n    return lines\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649786783,
  "object": "edit"
}
2022-04-12 18:06:26.646071 fix syntax errors 3 ['\n\ndef read_file(filename):\n    with open(filename, "r") as f:\n        lines = f.readlines()\n    return lines\n', '\n\ndef read_file(filename):\n    with open(filename, "r") as f:\n        lines = f.readlines()\n    return lines\n', '\n\ndef read_file(filename):\n    with open(filename, "r") as f:\n        lines = f.readlines()\n    return lines\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 18:06:29.704444 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if \"soft\" in cheeses and cheeses[\"soft\"] < cheeses[\"hard\"] else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if \"soft\" in cheeses and cheeses[\"soft\"] < cheeses[\"hard\"] else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if cheeses.get(\"soft\") < cheeses.get(\"hard\") else cheeses.get(\"hard\"))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649786786,
  "object": "edit"
}
2022-04-12 18:06:29.704610 fix syntax errors 3 ['\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses["soft"] if "soft" in cheeses and cheeses["soft"] < cheeses["hard"] else cheeses["hard"])\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses["soft"] if "soft" in cheeses and cheeses["soft"] < cheeses["hard"] else cheeses["hard"])\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses["soft"] if cheeses.get("soft") < cheeses.get("hard") else cheeses.get("hard"))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 18:06:29.704715 size on output set 7
2022-04-12 18:06:29.704728 num operations 2
2022-04-12 18:06:29.704733 size on input set 1
2022-04-12 18:06:37.692867 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n"
    }
  ],
  "created": 1649786789,
  "object": "edit"
}
2022-04-12 18:06:37.693046 fix spelling mistakes 3 ["\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n", "\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n", "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n"]
2022-04-12 18:06:37.693074 size on output set 2
2022-04-12 18:06:37.693080 size on input set 2
2022-04-12 18:06:42.490969 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft * hard)\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    soft, hard = 0, 0\n    for _ in range(n):\n        name, type = input().split()\n        if type == 'soft':\n            soft += 1\n        elif type == 'hard':\n            hard += 1\n    print(soft*hard)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649786797,
  "object": "edit"
}
2022-04-12 18:06:42.491167 fix syntax errors 3 ["\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n", "\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft * hard)\n", "\n\ndef main():\n    n = int(input())\n    soft, hard = 0, 0\n    for _ in range(n):\n        name, type = input().split()\n        if type == 'soft':\n            soft += 1\n        elif type == 'hard':\n            hard += 1\n    print(soft*hard)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 18:06:47.599704 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n"
    }
  ],
  "created": 1649786802,
  "object": "edit"
}
2022-04-12 18:06:47.599875 fix syntax errors 3 ["\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n", "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n", "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n"]
2022-04-12 18:06:47.599894 size on output set 4
