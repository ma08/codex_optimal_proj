2022-04-12 16:57:42.045741 num operations 2
2022-04-12 16:57:42.045758 size on input set 1
2022-04-12 16:58:00.319427 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days.\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:])...dp[i - k][j - 1] + max(a[i - k:])).\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, k + 1)).\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        if i < j:\n            continue\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n"
    },
    {
      "index": 1,
      "text": "\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n#\n# # dp[i][j] = max profit for i problems in j days\n# dp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n#\n# # dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:])...dp[i - k][j - 1] + max(a[i - k:]))\n# # dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, k + 1))\n#\n# for i in range(1, n + 1):\n#     for j in range(1, k + 1):\n#         if i < j:\n#             continue\n#         dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n#\n# print(dp[n][k])\n#\n# i, j = n, k\n# ans = []\n# while j > 0:\n#     for l in range(1, min(k, i) + 1):\n#         if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n#             ans.append(l)\n#             i -= l\n#             j -= 1\n#             break\n#\n# print(*ans[::-1])\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[-1][-1])\n"
    },
    {
      "index": 2,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days (i <= n, j <= k)\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:]), ..., dp[i - k][j - 1] + max(a[i - k:]))\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, min(k, i) + 1))\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n"
    }
  ],
  "created": 1649782662,
  "object": "edit"
}
2022-04-12 16:58:00.319653 fix spelling mistakes 3 ['\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days.\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:])...dp[i - k][j - 1] + max(a[i - k:])).\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, k + 1)).\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        if i < j:\n            continue\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n', '\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n#\n# # dp[i][j] = max profit for i problems in j days\n# dp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n#\n# # dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:])...dp[i - k][j - 1] + max(a[i - k:]))\n# # dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, k + 1))\n#\n# for i in range(1, n + 1):\n#     for j in range(1, k + 1):\n#         if i < j:\n#             continue\n#         dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n#\n# print(dp[n][k])\n#\n# i, j = n, k\n# ans = []\n# while j > 0:\n#     for l in range(1, min(k, i) + 1):\n#         if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n#             ans.append(l)\n#             i -= l\n#             j -= 1\n#             break\n#\n# print(*ans[::-1])\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[-1][-1])\n', '\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days (i <= n, j <= k)\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:]), ..., dp[i - k][j - 1] + max(a[i - k:]))\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, min(k, i) + 1))\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n']
2022-04-12 16:58:00.319703 size on output set 3
2022-04-12 16:58:00.319709 size on input set 3
2022-04-12 16:58:04.774686 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days.\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:])...dp[i - k][j - 1] + max(a[i - k:])).\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, k + 1)).\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        if i < j:\n            continue\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n"
    },
    {
      "index": 1,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days.\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:])...dp[i - k][j - 1] + max(a[i - k:])).\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, k + 1)).\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        if i < j:\n            continue\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\nprint()\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n"
    },
    {
      "index": 2,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days.\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:])...dp[i - k][j - 1] + max(a[i - k:])).\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, k + 1)).\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        if i < j:\n            continue\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n"
    }
  ],
  "created": 1649782680,
  "object": "edit"
}
2022-04-12 16:58:04.775122 fix syntax errors 3 ['\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days.\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:])...dp[i - k][j - 1] + max(a[i - k:])).\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, k + 1)).\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        if i < j:\n            continue\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n', '\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days.\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:])...dp[i - k][j - 1] + max(a[i - k:])).\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, k + 1)).\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        if i < j:\n            continue\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\nprint()\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n', '\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days.\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:])...dp[i - k][j - 1] + max(a[i - k:])).\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, k + 1)).\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        if i < j:\n            continue\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n']
2022-04-12 16:58:11.479455 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:]), ...,\n#                dp[i - k][j - 1] + max(a[i - k:]))\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, min(k, i) + 1))\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i])\n                       for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n"
    },
    {
      "index": 1,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days (i <= n, j <= k)\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:]), ..., dp[i - k][j - 1] + max(a[i - k:]))\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, min(k, i) + 1))\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n"
    },
    {
      "index": 2,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days (i <= n, j <= k)\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:]), ..., dp[i - k][j - 1] + max(a[i - k:]))\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, min(k, i) + 1))\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n"
    }
  ],
  "created": 1649782684,
  "object": "edit"
}
2022-04-12 16:58:11.479640 fix syntax errors 3 ['\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:]), ...,\n#                dp[i - k][j - 1] + max(a[i - k:]))\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, min(k, i) + 1))\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i])\n                       for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n', '\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days (i <= n, j <= k)\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:]), ..., dp[i - k][j - 1] + max(a[i - k:]))\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, min(k, i) + 1))\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n', '\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days (i <= n, j <= k)\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:]), ..., dp[i - k][j - 1] + max(a[i - k:]))\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, min(k, i) + 1))\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n']
2022-04-12 16:58:37.520471 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n# sys.stdin = open(\"input.txt\", \"r\")\n# sys.stdout = open(\"output.txt\", \"w\")\n# sys.stderr = open(\"error.txt\", \"w\")\n"
    },
    {
      "index": 1,
      "text": "#\n# # n, k = map(int, input().split())\n# # a = list(map(int, input().split()))\n# #\n# # # dp[i][j] = max profit for i problems in j days\n# # dp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n# #\n# # # dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:])...dp[i - k][j - 1] + max(a[i - k:]))\n# # # dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, k + 1))\n# #\n# # for i in range(1, n + 1):\n# #     for j in range(1, k + 1):\n# #         if i < j:\n# #             continue\n# #         dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n# #\n# # print(dp[n][k])\n# #\n# # i, j = n, k\n# # ans = []\n# # while j > 0:\n# #     for l in range(1, min(k, i) + 1):\n# #         if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n# #             ans.append(l)\n# #             i -= l\n# #             j -= 1\n# #             break\n# #\n# # print(*ans[::-1])\n#\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n#\n# dp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n#\n# for i in range(1, n + 1):\n#     for j in range(1, k + 1):\n#         dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n#\n# print(dp[-1][-1])\n#\n# s = \"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n# t = \"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n#\n# print(s < t)\n"
    },
    {
      "index": 2,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:])...dp[i - k][j - 1] + max(a[i - k:]))\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, k + 1))\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[-1][-1])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n"
    }
  ],
  "created": 1649782691,
  "object": "edit"
}
2022-04-12 16:58:37.520752 fix syntax errors 3 ['import sys\n# sys.stdin = open("input.txt", "r")\n# sys.stdout = open("output.txt", "w")\n# sys.stderr = open("error.txt", "w")\n', '#\n# # n, k = map(int, input().split())\n# # a = list(map(int, input().split()))\n# #\n# # # dp[i][j] = max profit for i problems in j days\n# # dp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n# #\n# # # dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:])...dp[i - k][j - 1] + max(a[i - k:]))\n# # # dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, k + 1))\n# #\n# # for i in range(1, n + 1):\n# #     for j in range(1, k + 1):\n# #         if i < j:\n# #             continue\n# #         dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n# #\n# # print(dp[n][k])\n# #\n# # i, j = n, k\n# # ans = []\n# # while j > 0:\n# #     for l in range(1, min(k, i) + 1):\n# #         if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n# #             ans.append(l)\n# #             i -= l\n# #             j -= 1\n# #             break\n# #\n# # print(*ans[::-1])\n#\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n#\n# dp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n#\n# for i in range(1, n + 1):\n#     for j in range(1, k + 1):\n#         dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n#\n# print(dp[-1][-1])\n#\n# s = "a b c d e f g h i j k l m n o p q r s t u v w x y z"\n# t = "a b c d e f g h i j k l m n o p q r s t u v w x y z"\n#\n# print(s < t)\n', '\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:])...dp[i - k][j - 1] + max(a[i - k:]))\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, k + 1))\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[-1][-1])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n']
2022-04-12 16:58:37.520792 size on output set 7
2022-04-12 16:58:37.520803 num operations 2
2022-04-12 16:58:37.520808 size on input set 1
2022-04-12 16:58:46.709760 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n,k = map(int,input().split())\n        a = list(map(int,input().split()))\n        dp = [0]*(n+1)\n        for i in range(1,n+1):\n            dp[i] = max(dp[i-1],a[i-1])\n        ans = 0\n        for i in range(k,n+1):\n            ans += dp[i-k]\n        print(ans)\n        i = 0\n        while i < n:\n            j = i+k\n            if j > n:\n                j = n\n            while j > i and dp[i] == dp[j]:\n                j -= 1\n            print(j-i,end=\" \")\n            i = j\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    dp = [0]*(n+1)\n    for i in range(1,n+1):\n        dp[i] = max(dp[i-1],a[i-1])\n    ans = 0\n    for i in range(k,n+1):\n        ans += dp[i-k]\n    print(ans)\n    i = 0\n    while i < n:\n        j = i+k\n        if j > n:\n            j = n\n        while j > i and dp[i] == dp[j]:\n            j -= 1\n        print(j-i,end=\" \")\n        i = j\n    print()\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    dp = [0]*(n+1) #dp[i]: max value from a[0] to a[i-1]\n    for i in range(1,n+1):\n        dp[i] = max(dp[i-1],a[i-1])\n    # sum of max value in every k-length subarray\n    ans = 0\n    for i in range(k,n+1):\n        ans += dp[i-k]\n    print(ans)\n    i = 0\n    while i < n:\n        # if j exceed the length of array a\n        j = i+k\n        if j > n:\n            j = n\n        while j > i and dp[i] == dp[j]:\n            j -= 1\n        print(j-i,end=\" \")\n        i = j\n    print()\n\nmain()\n"
    }
  ],
  "created": 1649782717,
  "object": "edit"
}
2022-04-12 16:58:46.709943 fix spelling mistakes 3 ['\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n,k = map(int,input().split())\n        a = list(map(int,input().split()))\n        dp = [0]*(n+1)\n        for i in range(1,n+1):\n            dp[i] = max(dp[i-1],a[i-1])\n        ans = 0\n        for i in range(k,n+1):\n            ans += dp[i-k]\n        print(ans)\n        i = 0\n        while i < n:\n            j = i+k\n            if j > n:\n                j = n\n            while j > i and dp[i] == dp[j]:\n                j -= 1\n            print(j-i,end=" ")\n            i = j\n        print()\n\nmain()\n', '\ndef main():\n    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    dp = [0]*(n+1)\n    for i in range(1,n+1):\n        dp[i] = max(dp[i-1],a[i-1])\n    ans = 0\n    for i in range(k,n+1):\n        ans += dp[i-k]\n    print(ans)\n    i = 0\n    while i < n:\n        j = i+k\n        if j > n:\n            j = n\n        while j > i and dp[i] == dp[j]:\n            j -= 1\n        print(j-i,end=" ")\n        i = j\n    print()\n\nmain()\n', '\n\ndef main():\n    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    dp = [0]*(n+1) #dp[i]: max value from a[0] to a[i-1]\n    for i in range(1,n+1):\n        dp[i] = max(dp[i-1],a[i-1])\n    # sum of max value in every k-length subarray\n    ans = 0\n    for i in range(k,n+1):\n        ans += dp[i-k]\n    print(ans)\n    i = 0\n    while i < n:\n        # if j exceed the length of array a\n        j = i+k\n        if j > n:\n            j = n\n        while j > i and dp[i] == dp[j]:\n            j -= 1\n        print(j-i,end=" ")\n        i = j\n    print()\n\nmain()\n']
2022-04-12 16:58:46.709981 size on output set 3
2022-04-12 16:58:46.709988 size on input set 3
2022-04-12 16:58:51.810635 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    dp = [0]*(n+1) # dp[i]: max value from a[0] to a[i-1]\n    for i in range(1,n+1):\n        dp[i] = max(dp[i-1],a[i-1])\n    # sum of max values in every k-length subarray\n    ans = 0\n    for i in range(k,n+1):\n        ans += dp[i-k]\n    print(ans)\n    i = 0\n    while i < n:\n        # if j exceed the length of array a\n        j = i+k\n        if j > n:\n            j = n\n        while j > i and dp[i] == dp[j]:\n            j -= 1\n        print(j-i,end=\" \")\n        i = j\n    print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    dp = [0]*(n+1) #dp[i]: max value from a[0] to a[i-1] inclusive\n    for i in range(1,n+1):\n        dp[i] = max(dp[i-1],a[i-1])\n    # sum of max value in every k-length subarray\n    ans = 0\n    for i in range(k,n+1):\n        ans += dp[i-k]\n    print(ans)\n    i = 0\n    while i < n:\n        # if j exceed the length of array a\n        j = i+k\n        if j > n:\n            j = n\n        while j > i and dp[i] == dp[j]:\n            j -= 1\n        print(j-i,end=\" \")\n        i = j\n    print()\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    dp = [0]*(n+1) #dp[i]: max value from a[0] to a[i-1]\n    for i in range(1,n+1):\n        dp[i] = max(dp[i-1],a[i-1])\n    # sum of max value in every k-length subarray in a\n    ans = 0\n    for i in range(k,n+1):\n        ans += dp[i-k]\n    print(ans)\n    i = 0\n    while i < n:\n        # if j exceed the length of array a\n        j = i+k\n        if j > n:\n            j = n\n        while j > i and dp[i] == dp[j]:\n            j -= 1\n        print(j-i,end=\" \")\n        i = j\n    print()\n\nmain()\n"
    }
  ],
  "created": 1649782726,
  "object": "edit"
}
2022-04-12 16:58:51.810904 fix syntax errors 3 ['\n\ndef main():\n    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    dp = [0]*(n+1) # dp[i]: max value from a[0] to a[i-1]\n    for i in range(1,n+1):\n        dp[i] = max(dp[i-1],a[i-1])\n    # sum of max values in every k-length subarray\n    ans = 0\n    for i in range(k,n+1):\n        ans += dp[i-k]\n    print(ans)\n    i = 0\n    while i < n:\n        # if j exceed the length of array a\n        j = i+k\n        if j > n:\n            j = n\n        while j > i and dp[i] == dp[j]:\n            j -= 1\n        print(j-i,end=" ")\n        i = j\n    print()\n\nmain()\n', '\n\ndef main():\n    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    dp = [0]*(n+1) #dp[i]: max value from a[0] to a[i-1] inclusive\n    for i in range(1,n+1):\n        dp[i] = max(dp[i-1],a[i-1])\n    # sum of max value in every k-length subarray\n    ans = 0\n    for i in range(k,n+1):\n        ans += dp[i-k]\n    print(ans)\n    i = 0\n    while i < n:\n        # if j exceed the length of array a\n        j = i+k\n        if j > n:\n            j = n\n        while j > i and dp[i] == dp[j]:\n            j -= 1\n        print(j-i,end=" ")\n        i = j\n    print()\n\nmain()\n', '\n\ndef main():\n    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    dp = [0]*(n+1) #dp[i]: max value from a[0] to a[i-1]\n    for i in range(1,n+1):\n        dp[i] = max(dp[i-1],a[i-1])\n    # sum of max value in every k-length subarray in a\n    ans = 0\n    for i in range(k,n+1):\n        ans += dp[i-k]\n    print(ans)\n    i = 0\n    while i < n:\n        # if j exceed the length of array a\n        j = i+k\n        if j > n:\n            j = n\n        while j > i and dp[i] == dp[j]:\n            j -= 1\n        print(j-i,end=" ")\n        i = j\n    print()\n\nmain()\n']
2022-04-12 16:58:56.292484 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n,k = map(int,input().split())\n        a = list(map(int,input().split()))\n        dp = [0]*(n+2)\n        for i in range(1,n+1):\n            dp[i] = max(dp[i-1],a[i-1])\n        ans = 0\n        for i in range(k,n+2):\n            ans += dp[i-k]\n        print(ans)\n        i = 0\n        while i < n:\n            j = i+k\n            if j > n:\n                j = n\n            while j > i and dp[i] == dp[j]:\n                j -= 1\n            print(j-i,end=\" \")\n            i = j\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n,k = map(int,input().split())\n        a = list(map(int,input().split()))\n        dp = [0]*(n+1)\n        for i in range(1,n+1):\n            dp[i] = max(dp[i-1],a[i-1])\n        ans = 0\n        for i in range(k,n+1):\n            ans += dp[i-k]\n        print(ans)\n        i = 0\n        while i < n:\n            j = i+k\n            if j > n:\n                j = n\n            while j > i and dp[i] == dp[j]:\n                j -= 1\n            print(j-i,end=\"\")\n            if i < n:\n                print(\" \",end=\"\")\n            i = j\n        print()\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n,k = map(int,input().split())\n        a = list(map(int,input().split()))\n        dp = [0]*(n+1)\n        for i in range(1,n+1):\n            dp[i] = max(dp[i-1],a[i-1])\n        ans = 0\n        for i in range(k,n+1):\n            ans += dp[i-k]\n        print(ans)\n        # i = 0\n        # while i < n:\n        #     j = i+k\n        #     if j > n:\n        #         j = n\n        #     while j > i and dp[i] == dp[j]:\n        #         j -= 1\n        #     print(j-i,end=\" \")\n        #     i = j\n        print()\n\nmain()\n"
    }
  ],
  "created": 1649782731,
  "object": "edit"
}
2022-04-12 16:58:56.292665 fix syntax errors 3 ['\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n,k = map(int,input().split())\n        a = list(map(int,input().split()))\n        dp = [0]*(n+2)\n        for i in range(1,n+1):\n            dp[i] = max(dp[i-1],a[i-1])\n        ans = 0\n        for i in range(k,n+2):\n            ans += dp[i-k]\n        print(ans)\n        i = 0\n        while i < n:\n            j = i+k\n            if j > n:\n                j = n\n            while j > i and dp[i] == dp[j]:\n                j -= 1\n            print(j-i,end=" ")\n            i = j\n        print()\n\nmain()\n', '\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n,k = map(int,input().split())\n        a = list(map(int,input().split()))\n        dp = [0]*(n+1)\n        for i in range(1,n+1):\n            dp[i] = max(dp[i-1],a[i-1])\n        ans = 0\n        for i in range(k,n+1):\n            ans += dp[i-k]\n        print(ans)\n        i = 0\n        while i < n:\n            j = i+k\n            if j > n:\n                j = n\n            while j > i and dp[i] == dp[j]:\n                j -= 1\n            print(j-i,end="")\n            if i < n:\n                print(" ",end="")\n            i = j\n        print()\n\nmain()\n', '\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n,k = map(int,input().split())\n        a = list(map(int,input().split()))\n        dp = [0]*(n+1)\n        for i in range(1,n+1):\n            dp[i] = max(dp[i-1],a[i-1])\n        ans = 0\n        for i in range(k,n+1):\n            ans += dp[i-k]\n        print(ans)\n        # i = 0\n        # while i < n:\n        #     j = i+k\n        #     if j > n:\n        #         j = n\n        #     while j > i and dp[i] == dp[j]:\n        #         j -= 1\n        #     print(j-i,end=" ")\n        #     i = j\n        print()\n\nmain()\n']
2022-04-12 16:59:10.560420 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    dp = [0]*(n+1)\n    for i in range(1,n+1):\n        dp[i] = max(dp[i-1],a[i-1])\n    ans = 0\n    for i in range(k,n+1):\n        ans += dp[i-k]\n    print(ans)\n    # i = 0\n    # while i < n:\n    #     j = i+k\n    #     if j > n:\n    #         j = n\n    #     while j > i and dp[i] == dp[j]:\n    #         j -= 1\n    #     print(j-i,end=\" \")\n    #     i = j\n    # print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    dp = [0]*(n+1)\n    for i in range(0,n):\n        dp[i+1] = max(dp[i],a[i])\n    ans = 0\n    for i in range(k,n+1):\n        ans += dp[i-k]\n    print(ans)\n    i = 0\n    while i < n:\n        j = i+k\n        if j > n:\n            j = n\n        while j > i and dp[i] == dp[j]:\n            j -= 1\n        print(j-i,end=\" \")\n        i = j\n    print()\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "def main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        dp[i] = max(dp[i - 1], a[i - 1])\n    ans = 0\n    for i in range(k, n + 1):\n        ans += dp[i - k]\n    print(ans)\n    i = 0\n    while i < n:\n        j = i + k\n        if j >= n:\n            j = n\n        while j > i and dp[i] == dp[j]:\n            j -= 1\n        print(j - i, end=\" \")\n        i = j\n    print()\n\nmain()\n"
    }
  ],
  "created": 1649782736,
  "object": "edit"
}
2022-04-12 16:59:10.560595 fix syntax errors 3 ['\ndef main():\n    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    dp = [0]*(n+1)\n    for i in range(1,n+1):\n        dp[i] = max(dp[i-1],a[i-1])\n    ans = 0\n    for i in range(k,n+1):\n        ans += dp[i-k]\n    print(ans)\n    # i = 0\n    # while i < n:\n    #     j = i+k\n    #     if j > n:\n    #         j = n\n    #     while j > i and dp[i] == dp[j]:\n    #         j -= 1\n    #     print(j-i,end=" ")\n    #     i = j\n    # print()\n\nmain()\n', '\ndef main():\n    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    dp = [0]*(n+1)\n    for i in range(0,n):\n        dp[i+1] = max(dp[i],a[i])\n    ans = 0\n    for i in range(k,n+1):\n        ans += dp[i-k]\n    print(ans)\n    i = 0\n    while i < n:\n        j = i+k\n        if j > n:\n            j = n\n        while j > i and dp[i] == dp[j]:\n            j -= 1\n        print(j-i,end=" ")\n        i = j\n    print()\n\nmain()\n', 'def main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        dp[i] = max(dp[i - 1], a[i - 1])\n    ans = 0\n    for i in range(k, n + 1):\n        ans += dp[i - k]\n    print(ans)\n    i = 0\n    while i < n:\n        j = i + k\n        if j >= n:\n            j = n\n        while j > i and dp[i] == dp[j]:\n            j -= 1\n        print(j - i, end=" ")\n        i = j\n    print()\n\nmain()\n']
2022-04-12 16:59:10.560699 size on output set 9
