["\n\nfull = input().split()\nprint(full[0] + \"\".join([i[0] for i in full[1:]]))\n", "\ndef main():\n    n = input(\"Enter the input: \")\n    n = n.split('-')\n    for i in n:\n        print(i[0], end=\"\")\n    print()\n\nmain()\n", "\n# the input is a string of names\nnames = input(\"Enter the names: \")\n\nnames = names.split('-')\nfor i in range(len(names)):\n    names[i] = names[i][0]\n\nprint(''.join(names))\n", "\n\ndef main():\n    names = input()\n    names = names.split('-')\n    for i in names:\n        print(i[0], end = \"\")\n    print(\"\")\n\nmain()\n", "\nimport sys\n\nline = sys.stdin.readline()\nline = line.strip()\nprint(line[0], end=\" \")\nfor i in range(1, len(line)):\n    if line[i-1] == \"-\":\n        print(line[i], end=\" \")\n", "\n# input\nname = input()\n# split and loop\nname = name.split('-')\nfor i in range(len(name)):\n    name[i] = name[i][0]\n# print\nprint(''.join(name))\n", "import sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0], end=\" \")\n    for i in range(1, len(line)):\n        if line[i-1] == \"-\":\n            print(line[i], end=\" \")\n\nif __name__ == \"__main__\":\n    main()\n", "\nprint(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-')[1:]))) \n", "\n", "\ndef main():\n    # needs a file name\n    name = input()\n    # prints the first letter of each word in the file name\n    print(name[0] + \"\".join([x[0] for x in name.split(\"-\")[1:]]))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\"Main function.\"\"\"\n    input_string = input()\n    print(\"\".join([input_string[i] for i in range(len(input_string))\n                   if input_string[i].isupper()]))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\"Main function\"\"\"\n    input_string = input()\n    print(\"\".join([input_string[i] for i in range(len(input_string)) if input_string[i].isupper()]))\n\nif __name__ == \"__main__\":\n    main()\n", "\n# the input is a list of strings\nnames = input().split('-')\n\nfor i in range(len(names)):\n    names[i] = names[i][0]\n\nprint(''.join(names))\n", "\n\ndef main():\n    \"\"\"Main function\"\"\"\n    input_string = input()  # input string\n    print(\"\".join([input_string[i] for i in range(len(input_string)) if input_string[i].isupper()]))  # printing the string\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = input()\n    n = n.split('-')\n    for i in n:\n        print(i[0], end=\"\")\n    print()\n\nmain()\n", "\n\ndef main():\n    n = input()\n    n = n.split('-')\n    for i in n:\n        print(i[0], end=\"\")\n    print()\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    name = input() #needs a file name\n    print(name[0] + \"\".join([x[0] for x in name.split(\"-\")[1:]]))  #prints the first letter of each word in the file name\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    name = input()\n    print(name[0] + \"\".join([x[0] for x in name.split(\"-\")[1:]])) \n\nif __name__ == \"__main__\":\n    main()\n", "\n\nprint(input().replace('-',''))\n", "\n# the input is a string\nnames = input()\n\nnames = names.split('-')\nfor i in range(len(names)):\n    names[i] = names[i][0]\n\nprint(''.join(names).upper())\n", "import sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0], end = \"\")\n    for i in range(len(line)):\n        if line[i] == \"-\":\n            print(line[i+1], end = \"\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\"Main function\"\"\"\n    input_string = input()\n    print(\"\".join([input_string[i] for i in range(len(input_string)) if input_string[i].isupper()]))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    name = input()\n    print(name[0] + \"\".join([x[0] for x in name.split(\"-\")[1:]]).upper())\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nprint(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-')[1:])))\n", "\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0], end=\"\")\n    for i in range(len(line)):\n        if line[i] == \"-\":\n            print(line[i+1], end=\"\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nnames = input(\"Enter the names: \").split(\"-\")\n\nfor i in range(len(names)):\n    names[i] = names[i][0]\n\nprint(''.join(names))\n", "\n\nfull = input()\nprint(full[0] + \"\".join([i[0] for i in full.split()[1:]]))\n", "print(input().replace('-', '').replace(' ', ''))\n", "\nnames = input(\"Enter the names: \")\n\nnames = names.split('-')\nfor i in range(len(names)):\n    names[i] = names[i][0]\n\nprint(''.join(names))\n", "\n\ndef main():\n    \"\"\"Main function\"\"\"\n    input_string = input() # input string\n    print(\"\".join([input_string[i] for i in range(len(input_string)) if input_string[i].isupper()])) # printing the string\n\nif __name__ == \"__main__\":\n    main()\n", "\nfull = input()\nprint(full[0] + \"\".join([i[0] for i in full.split(\"-\")[1:]]), end=\"\")\n", "import string\n\ndef is_pangram(s):\n    s = s.lower()\n    for c in string.ascii_lowercase:\n        if c not in s:\n            return False\n    return True\n\n\nprint(is_pangram(input()))\n", "import sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0], end='')\n    for i in range(len(line)):\n        if line[i] == \"-\":\n            print(line[i+1], end='')\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    name = input()\n    name = name.split('-')\n    for i in name:\n        print(i[0], end='')\n    print()\n\nmain()\n", "\n\nname = input()\nprint(name[0] + '.' + name[1][0] + '.' + name[2][0])\n", "\n\nprint(input().replace('-', ''))\n", "\n\nfull = input()\nprint(full[0] + \"\".join([i[0] for i in full.split(\" \")[1:]]).upper())\n", "print(\"Hello World!\")\n", "\n\ndef main():\n    name = input()\n    print(name[0] + \"\".join([x[0] for x in name.split(\"_\")]))\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0], end=\"\")\n    for i in range(len(line)):\n        if line[i] == \"-\":\n            print(line[i+1], end=\"\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    name = input().split(\"-\")\n    print(name[0][0] + \"\".join([x[0] for x in name[1:]]))\n\nif __name__ == \"__main__\":\n    main()\n", "def main():\n    n = input()\n    n = n.split('-')\n    for i in n:\n        print(i[0], end=\"\")\n    print()\n\nif __name__ == '__main__':\n    main()\n", "\nprint(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-')[1])))\n", "\n\ndef main():\n    name = input().split(\"-\")\n    print(name[0][0] + \"\".join([x[0] for x in name[1:]]))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    name = input()\n    print(name[0] + \"\".join([x[0] for x in name.split(\"-\")[1:]]))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nprint(input().replace(\"-\",\"\"))\n", "\ndef main():\n    n = input().strip()\n    n = n.split('-')\n    for i in n:\n        print(i[0], end=\"\")\n    print(\"\")\n\nmain()\n", "full = input()\nprint(full[0] + \"\".join([i[0] for i in full.split(\"-\")[1:]]))\n", "import sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0], end=\"\")\n    for i in range(len(line)-1):\n        if line[i] == \"-\":\n            print(line[i+1], end=\"\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = input().rstrip()\n    n = n.split('-')\n    for i in n:\n        print(i[0], end=\"\")\n    print()\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nprint(input().replace('-', '').replace(' ', ''))\n", "print(input().split(\"-\")[0][0] + \"\".join(map(lambda x: x[0], input().split(\"-\")[1:])))\n", "\n\nnames = input(\"Enter the names: \")\n\nnames = names.split(' ')\nfor i in range(len(names)):\n    names[i] = names[i][0]\n\nprint(''.join(names))\n", "import string\n\n\ndef is_pangram(s):\n    s = s.lower()  # convert to lower case\n    for c in string.ascii_lowercase:\n        if c not in s:\n            return False\n    return True\n\n\nprint(is_pangram(input()))\n", "\n\ndef main():\n    name = input()\n    name = name.split('_')\n    for i in name:\n        print(i[0], end=\"\")\n    print()\n\nmain()\n", "\n\ndef main():\n    \"\"\"Main function.\"\"\"\n    input_string = input()\n    print(\"\".join(input_string[i] for i in range(len(input_string)) if input_string[i].isupper()))\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    \"\"\"Main function.\"\"\"\n    input_string = input()\n    print(\"\".join([input_string[i] for i in range(len(input_string)) if input_string[i].isupper()]))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nname = input()\n\nname = name.split('-')\nfor i in range(len(name)):\n    name[i] = name[i][0].upper()\n\nprint(''.join(name))\n"]