["\n\ndef main():\n    n = int(input())\n    d = [int(x) for x in input().split()]\n    i = 1\n    cleanups = 0\n    while i < n:\n        if d[i] - d[i-1] > 20:\n            cleanups += 1\n            i += 1\n        elif i == n-1:\n            cleanups += 1\n            i += 1\n        else:\n            i += 1\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "#!/bin/python3\n\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n# Complete the sockMerchant function below.\ndef sockMerchant(n, ar):\n    pairs = 0\n    for color in set(ar):\n        pairs += ar.count(color) // 2\n    return pairs\n\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    n = int(input())\n\n    ar = list(map(int, input().rstrip().split()))\n\n    result = sockMerchant(n, ar)\n\n    fptr.write(str(result) + '\\n')\n\n    fptr.close()\n", "\nn = int(input())\ndays = [int(x) for x in input().split()]\n\ncleanups = 0\ndirtiness = 0\n\nfor day in days:\n    dirtiness += day\n    if dirtiness >= 20:\n        cleanups += 1\n        dirtiness = 0\n\nprint(cleanups)\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    dirty_pushes = [int(x) for x in sys.stdin.readline().split()]  # this is a list of days of the year that the button was pushed\n    #print(n)\n    #print(dirty_pushes)\n    current_dirtiness = 0  # this is the current level of dirtiness of the button\n    cleanup_counter = 0\n    for day in range(1, 366):\n        if day in dirty_pushes:\n            current_dirtiness += (day - dirty_pushes.index(day))\n        else:\n            current_dirtiness += 1\n        if current_dirtiness >= 20:\n            cleanup_counter += 1\n            current_dirtiness = 0\n    print(cleanup_counter)\n\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    days = [int(x) for x in sys.stdin.readline().split()]\n    days.append(366)\n    curr_day = 1\n    cleanups = 0\n    for i in range(n):\n        while days[i] >= curr_day:\n            if days[i] - curr_day > 20:\n                cleanups += 1\n                curr_day = days[i] + 1\n            else:\n                curr_day = days[i] + 1\n                break\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    days = [int(x) for x in sys.stdin.readline().split()]\n    days.append(366)\n    cleanups = 0\n    dirtiness = 0\n    for i in range(1, len(days)):\n        dirtiness += days[i] - days[i-1]\n        if dirtiness >= 20:\n            cleanups += 1\n            dirtiness = 0\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "def main():\n    n = int(input())\n    d = list(map(int, input().split()))\n\n    cleaning = 0\n    dirty = 0\n    for i in range(n):\n        while dirty >= 20:\n            cleaning += 1\n            dirty -= 20\n        dirty += (d[i] - 1)\n\n    while dirty >= 20:\n        cleaning += 1\n        dirty -= 20\n\n    print(cleaning)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    dirty_dishes = [int(x) for x in sys.stdin.readline().split()]\n    current_dirtiness = 0\n    cleanup_counter = 0\n    for day in range(1, 366):\n        if day in dirty_dishes:\n            current_dirtiness += (day - dirty_dishes.index(day))\n        else:\n            current_dirtiness += 1\n        if current_dirtiness >= 20:\n            cleanup_counter += 1\n            current_dirtiness = 0\n    print(cleanup_counter)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    students = [int(x) for x in sys.stdin.readline().split()]\n    students.sort()\n    print(students)\n    max_diff = 0\n    for i in range(n-1):\n        diff = students[i+1] - students[i]\n        if diff > max_diff:\n            max_diff = diff\n    print(max_diff)\n\nif __name__ == \"__main__\":\n    main()\n", "n = int(input()) # number of days\npushes = [int(input()) for _ in range(n)] # read all the pushes\n\ncleanups = 0 # number of cleanups\ndirtiness = 0 # number of dirty days\n\nfor day in range(1, 367):\n    dirtiness += sum([max(0, day - push) for push in pushes if push <= day])\n    if dirtiness >= 20:\n        cleanups += 1\n        dirtiness = 0\n\nprint(cleanups)\n", "\nn = int(input())\npushes = list(map(int, input().split()))\ncleanups = 0\ndirtiness = 0\n\nfor day in range(1, 367):\n    dirtiness += sum([max(0, day - push) for push in pushes if push <= day])\n    if dirtiness >= 20:\n        cleanups += 1\n        dirtiness = 0\n\nprint(cleanups)\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    days = [int(x) for x in sys.stdin.readline().split()]\n    days.append(366)\n    cleanups = 0\n    dirtyness = 0\n    for i in range(1, len(days)):\n        dirtyness += days[i] - days[i-1]\n        if dirtyness >= 20:\n            cleanups += 1\n            dirtyness -= 20\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "n = int(input())\ndays = [int(x) for x in input().split()]\n\ncleanup = 1\ndirtiness = days[0]\n\nfor day in days[1:]:\n    if dirtiness >= 20:\n        cleanup += 1\n        dirtiness = 0\n\nprint(cleanup)\n", "n = int(input())\ndays = [int(x) for x in input().split()]\n\ncleanups = 0\ndirtiness = 0\n\nfor day in days:\n    dirtiness += day\n    if dirtiness >= 20:\n        cleanups += 1\n        dirtiness = 0\n\nprint(cleanups)\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    days = [int(x) for x in sys.stdin.readline().split()]\n    days.append(366) # to make the loop work\n    curr_day = 1\n    clean_ups = 0\n    for i in range(n):\n        while days[i] >= curr_day:\n            if days[i] - curr_day > 20:\n                clean_ups += 1\n                curr_day = days[i] + 1\n            else:\n                curr_day = days[i] + 1\n                break\n    print(clean_ups)\n\nif __name__ == \"__main__\":\n    main()\n", "n = int(input())\n\nnums = list(map(int, input().split()))\n\nnums.sort()\n\ncount = 0\nfor i in range(len(nums) - 1):\n    if nums[i] == nums[i + 1]:\n        count += 1\n\nprint(count)\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    if n == 0:\n        print(0)\n    else:\n        days = [int(x) for x in sys.stdin.readline().split()]\n        days.append(366)\n        curr_day = 1\n        cleanups = 0\n        for i in range(n):\n            while days[i] >= curr_day:\n                if days[i] - curr_day >= 20:\n                    cleanups += 1\n                    curr_day = days[i] + 1\n                else:\n                    curr_day = days[i] + 1\n                    break\n        print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    days = [int(x) for x in sys.stdin.readline().split()] \n    days.append(366)\n    curr_day = 1\n    cleanups = 0\n    for i in range(n):\n        if days[i] >= curr_day:\n            cleanups += 1\n            curr_day = days[i] + 1\n        else:\n            curr_day = days[i] + 1\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\nd = list(map(int, input().split()))\n\ncleanup = 0\ndirty = 0\nfor i in range(n):\n    while dirty >= 21:\n        cleanup += 1\n        dirty -= 21\n    dirty += (d[i] - 1)\n\nwhile dirty >= 21:\n    cleanup += 1\n    dirty -= 20\n\nprint(cleanup)\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    days = [int(x) for x in sys.stdin.readline().split()]\n    days.append(366)\n    curr_day = 1\n    cleanups = 0\n    for i in range(n):\n        while days[i] >= curr_day:\n            if days[i] - curr_day > 20:\n                cleanups += 1\n                curr_day = days[i] + 1\n            else:\n                curr_day = days[i] + 1\n                break\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    days = [int(x) for x in sys.stdin.readline().split()]\n    days.append(366)\n    cleanups = 0\n    dirtiness = days[0]\n    for i in range(len(days)-1):\n        dirtiness += days[i] - days[i-1] - 1\n        if dirtiness >= 20:\n            cleanups += 1\n            dirtiness = 0\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n\tn = int(sys.stdin.readline())\n\tclean_pushes = [int(x) for x in sys.stdin.readline().split()]\n\tcurrent_cleanness = 0\n\tcleanup_counter = 0\n\tfor day in range(1, 366):\n\t\tif day in clean_pushes:\n\t\t\tcurrent_cleanness += (day - clean_pushes.index(day))\n\t\telse:\n\t\t\tcurrent_cleanness += 1\n\t\tif current_cleanness >= 20:\n\t\t\tcleanup_counter += 1\n\t\t\tcurrent_cleanness = 0\n\tprint(cleanup_counter)\n\nif __name__ == '__main__':\n\tmain()\n", "n = int(input())\npushes = [int(input()) for _ in range(n)]\n\ncleanups = 0\ndirtiness = 0\n\nfor day in range(1, 367):\n    dirtiness += sum(max(0, day - push) for push in pushes if push <= day)\n    if dirtiness >= 20:\n        cleanups += 1\n        dirtiness = 0\n\nprint(cleanups)\n", "\n\ndef main():\n    n = int(input())\n    d = [int(x) for x in input().split()] # list of integers\n    i = 1\n    cleanups = 1\n    while i < n:\n        if d[i] - d[i-1] > 20:\n            cleanups += 1\n            i += 2\n        elif i == n-1:\n            cleanups += 1\n            i += 2\n        else:\n            i += 2\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    days = [int(x) for x in sys.stdin.readline().split()]\n    days.append(367)\n    curr_day = 1\n    clean_ups = 0\n    for i in range(n):\n        while days[i] >= curr_day:\n            if days[i] - curr_day > 20:\n                clean_ups += 1\n                curr_day = days[i] + 1\n            else:\n                curr_day = days[i] + 1\n                break\n    print(clean_ups)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    dirty_pushes = [int(x) for x in sys.stdin.readline().split()]  # this is a list of days of the year that the button was pushed\n    #print(n)\n    #print(dirty_pushes)\n    current_dirtiness = 0  # this is the current level of dirtiness of the button\n    cleanup_counter = 0\n    for day in range(1, 366):\n        if day in dirty_pushes:\n            current_dirtiness += (day - dirty_pushes.index(day))\n        else:\n            current_dirtiness += 1\n        if current_dirtiness >= 20:\n            cleanup_counter += 1\n            current_dirtiness = 0\n    print(cleanup_counter)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    clean_pushes = [int(x) for x in sys.stdin.readline().split()]\n    current_cleanness = 0\n    cleanup_counter = 0\n    for day in range(1, 366):\n        if day in clean_pushes:\n            current_cleanness += (day - clean_pushes.index(day))\n        else:\n            current_cleanness += 1\n        if current_cleanness >= 20: \n            cleanup_counter += 1\n            current_cleanness = 0\n    print(cleanup_counter)\n\nif __name__ == '__main__':\n    main()\n", "\nprint(\"Hello world\")\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    days = [int(x) for x in sys.stdin.readline().split()]\n    days.append(365)\n    cleanups = 0\n    dirtyness = 0\n    for i in range(len(days)-1):\n        dirtyness += days[i] - days[i+1]\n        if dirtyness >= 20:\n            cleanups += 1\n            dirtyness = 0\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    dirty_pushes = [int(x) for x in sys.stdin.readline().split()]\n    # this is a list of days of the year that the button was pushed\n    #print(n)\n    #print(dirty_pushes)\n    current_dirtiness = 0\n    # this is the current level of dirtiness of the button\n    cleanup_counter = 0\n    for day in range(1, 366):\n        if day in dirty_pushes:\n            current_dirtiness += (day - dirty_pushes.index(day)) # this is the number of days since the last push\n        else:\n            current_dirtiness += 1\n        if current_dirtiness >= 20:\n            cleanup_counter += 1\n            current_dirtiness = 0\n    print(cleanup_counter)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())  # number of days\n    days = [int(x) for x in sys.stdin.readline().split()]\n    days.append(365)  # end of year\n    cleanups = 0\n    dirtiness = 0  # amount of dirtiness\n    for i in range(1, len(days)):\n        dirtiness += days[i] - days[i - 1]\n        if dirtiness >= 20:\n            cleanups += 1\n            dirtiness = 0\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    d = [int(x) for x in input().split()]\n    i = 1\n    cleanups = 0\n    while i < n:\n        if d[i] - d[i - 1] > 20:\n            cleanups += 1\n            i += 1\n        elif i == n - 1:\n            cleanups += 1\n            i += 1\n        else:\n            i += 1\n    print(cleanups)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nprint(max(list(map(int, input().split()))))\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    days = [int(x) for x in sys.stdin.readline().split()]\n    days.append(367)\n    cleanups = 0\n    dirtyness = 0\n    for i in range(1, len(days)):\n        dirtyness += days[i] - days[i-1]\n        if dirtyness >= 21:\n            cleanups += 1\n            dirtyness = 0\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    dirty_pushes = []\n    for i in range(n):\n        dirty_pushes.append(int(sys.stdin.readline()))\n    total_dirtiness = 0\n    cleanup_phases = 0\n    for i in range(n):\n        total_dirtiness += (dirty_pushes[i] - i)\n        if total_dirtiness >= 20:\n            cleanup_phases += 1\n            total_dirtiness = 0\n    print(cleanup_phases)\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\ndays = [int(x) for x in input().split(\" \")]\n\ncleanups = 0\ndirtiness = 0\n\nfor day in days:\n    dirtiness += day\n    if dirtiness >= 20:\n        cleanups += 1\n        dirtiness = 0\n\nprint(cleanups)\n", "\n\ndef main():\n    n = int(input())\n    clean_ups = 0\n    d = [int(x) for x in input().split()]\n    i = 1\n    while i < n:\n        if d[i] - d[i-1] > 20:\n            clean_ups += 1\n        elif i == n-1:\n            clean_ups += 1\n        i += 1\n    print(clean_ups)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    clean_pushes = [int(x) for x in sys.stdin.readline().split()]\n    current_cleanness = 0\n    cleanup_counter = 0\n    for day in range(1, 366):\n        if day in clean_pushes:\n            current_cleanness += (day - clean_pushes.index(day))\n        else:\n            current_cleanness += 1\n        if current_cleanness >= 20:\n            cleanup_counter += 1\n            current_cleanness = 0\n    print(cleanup_counter)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    days = [int(x) for x in sys.stdin.readline().split()]\n    days.append(366)\n    curr_day = 1\n    cleanups = 0\n    for i in range(n):\n        while days[i] >= curr_day:\n            if days[i] - curr_day >= 20:\n                cleanups += 1\n                curr_day = days[i] + 1\n            else:\n                curr_day = days[i] + 1\n                break\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\nd = list(map(int, input().split()))\n\ncleanup = 0\ndirty = 0\nfor i in range(n):\n    while dirty >= 20:\n        cleanup += 1\n        dirty -= 20\n    dirty += d[i]\n\nwhile dirty >= 20:\n    cleanup += 1\n    dirty -= 20\nprint(cleanup)\n", "n = int(input())\nd = list(map(int, input().split()))\n\ncleaning = 0\ndirty = 0\nfor i in range(n):\n    while dirty >= 20:\n        cleaning += 1\n        dirty -= 20\n    dirty += (d[i] - 1)\n\nwhile dirty >= 20:\n    cleaning += 1\n    dirty -= 20\n\nprint(cleaning)\n", "\n#\n# import sys\n#\n# def main():\n#     n = int(sys.stdin.readline())\n#     days = [int(x) for x in sys.stdin.readline().split()]\n#     days.append(366)\n#     curr_day = 1\n#     cleanups = 0\n#     for i in range(n):\n#         while days[i] >= curr_day:\n#             if days[i] - curr_day >= 20:\n#                 cleanups += 1\n#                 curr_day = days[i] + 1\n#             else:\n#                 curr_day = days[i] + 1\n#                 break\n#     print(cleanups)\n#\n# if __name__ == \"__main__\":\n#     main()\n", "n = int(input())\ndays = [int(x) for x in input().split()]\n\ncleanup = 0\ndirtiness = 0\n\nfor day in days:\n    dirtiness += day\n    if dirtiness >= 20:\n        cleanup += 1\n        dirtiness = 0\n\nprint(cleanup)\n\n\n# n = int(input())\n# days = [int(x) for x in input().split()]\n\n# cleanup = 0\n# dirtiness = 0\n\n# for day in days:\n#     dirtiness += day\n#     if dirtiness >= 20:\n#         cleanup += 1\n#         dirtiness = 0\n\n# print(cleanup)\n", "\nn = int(input())\npushes = list(map(int, input().split()))\n\ncleanups = 0\ndirtiness = 0\n\nfor day in range(1, 366):\n    dirtiness += sum([max(0, day - push) for push in pushes if push <= day])\n    if dirtiness >= 20:\n        cleanups += 1\n        dirtiness = 0\n\nprint(cleanups)\n", "n = int(input())\npushes = list(map(int, input().split()))\ncleanups = 0\ndirtiness = 0\n\n    # if day > 365:\n    #     break\nfor day in range(1, 367):\n    dirtiness += sum([max(0, day - push) for push in pushes if push <= day])\n    if dirtiness >= 20:\n        cleanups += 1\n        dirtiness -= 20\n\nprint(cleanups)\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())  # number of days\n    days = [int(x) for x in sys.stdin.readline().split()]\n    days.append(366)  # end of year, day 366\n    cleanups = 0\n    dirtiness = 0  # amount of dirtiness, starts at 0\n    for i in range(1, len(days)):\n        dirtiness += days[i] - days[i-1]  # add dirtiness for day\n        if dirtiness >= 20:\n            cleanups += 1  # add a cleanup\n            dirtiness = 0  # reset dirtiness\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    days = [int(x) for x in sys.stdin.readline().split()]\n    days.append(366)\n    cleanups = 0\n    dirtiness = days[0]\n    for i in range(len(days)-1):\n        dirtiness += days[i] - days[i+1]\n        if dirtiness >= 20:\n            cleanups += 1\n            dirtiness = 0\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n\ndef cleanup(n, d):\n    cleanup = 0\n    dirty = 0\n    for i in range(n):\n        while dirty >= 21:\n            cleanup += 1\n            dirty -= 21\n        dirty += (d[i] - 1)\n\n    while dirty >= 21:\n        cleanup += 1\n        dirty -= 20\n\n    return cleanup\n\nn = int(input())\nd = list(map(int, input().split()))\n\nprint(cleanup(n, d))\n", "\nn = int(input())\nd = list(map(int, input().split()))\n\ncleanup = 0\ndirty = 0\nfor i in range(n):\n    while dirty >= 20:\n        cleanup += 1\n        dirty -= 20\n    dirty += d[i]\n\nwhile dirty >= 20:\n    cleanup += 1\n    dirty -= 20\n\nprint(cleanup)\n", "\n# n = int(input())\n# days = [int(x) for x in input().split()]\n\n# cleanups = 0\n# dirtiness = 0\n\n# for day in days:\n#     dirtiness += day\n#     if dirtiness >= 20:\n#         cleanups += 1\n#         dirtiness = 0\n\n# print(cleanups)\n\n# import sys\n# sys.stdin = open('input.txt', 'r')\n\n# n = int(input())\n# days = [int(x) for x in input().split()]\n\n# cleanups = 0\n# dirtiness = 0\n\n# for day in days:\n#     dirtiness += day\n#     if dirtiness >= 20:\n#         cleanups += 1\n#         dirtiness = 0\n\n# print(cleanups)\n\nimport sys\nsys.stdin = open('input.txt', 'r')\n\nn, m = map(int, input().split())\n\nnumbers = [int(x) for x in input().split()]\n\nfor i in range(m):\n    x, y = map(int, input().split())\n    print(sum(numbers[x-1:y]))\n\n\n\n\n", "n = int(input().strip())\npushes = [int(input().strip()) for _ in range(n)]\n\ncleanups = 0\ndirtiness = 0\n\nfor day in range(1, 367):\n    dirtiness += sum([max(0, day - push) for push in pushes if push <= day])\n    if dirtiness >= 20:\n        cleanups += 1\n        dirtiness = 0\n\nprint(cleanups)\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    dirty_pushes = [int(x) for x in sys.stdin.readline().split()] #\n    total_dirtiness = 0\n    cleanup_phases = 0\n    for i in range(n):\n        total_dirtiness += (dirty_pushes[i] - i)\n        if total_dirtiness >= 20:\n            cleanup_phases += 1\n            total_dirtiness = 0\n    print(cleanup_phases)\n\nif __name__ == \"__main__\":\n    main()\n", "\n# #\n# import sys\n#\n# def main():\n#     n = int(sys.stdin.readline())\n#     dirty_pushes = [int(x) for x in sys.stdin.readline().split()]\n#     total_dirtiness = 0\n#     cleanup_phases = 0\n#     for i in range(n):\n#         total_dirtiness += (dirty_pushes[i] - i)\n#         if total_dirtiness >= 20:\n#             cleanup_phases += 1\n#             total_dirtiness = 0\n#     print(cleanup_phases)\n#\n# if __name__ == \"__main__\":\n#     main()\n", "\n\ndef main():\n    n = int(input())\n    d = [int(x) for x in input().split(\" \")]\n    i = 1\n    clean_ups = 0\n    while i < n:\n        if d[i] - d[i - 1] > 20:\n            clean_ups += 1\n            i += 1\n        elif i == n - 1:\n            clean_ups += 1\n            i += 1\n        else:\n            i += 1\n    print(clean_ups)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\nd = list(map(int, input().split()))\n\ncleanup = 0\ndirty = 0\nfor i in range(n):\n    while dirty >= 21:\n        cleanup += 1\n        dirty -= 21\n    dirty += (d[i] - 1)\n\nwhile dirty >= 21:\n    cleanup += 1\n    dirty -= 21\n\nprint(cleanup)\n", "n = int(input())\npushes = list(map(int, input().split()))\n\ncleanups = 0\ndirtiness = 0\n\nfor day in range(1, 367): \n    dirtiness += sum([max(0, day - push) for push in pushes if push <= day])\n    if dirtiness >= 20:\n        cleanups += 1\n        dirtiness = 0\n\nprint(cleanups)\n", "import sys\n\ndef main():\n    # n = int(sys.stdin.readline())\n    dirty_dishes = [int(x) for x in sys.stdin.readline().split()]\n    current_dirtiness = 0\n    cleanup_counter = 0\n    for day in range(1, 366):\n        if day in dirty_dishes:\n            current_dirtiness += day - dirty_dishes.index(day)\n        else:\n            current_dirtiness += 1\n        if current_dirtiness >= 20:\n            cleanup_counter += 1\n            current_dirtiness = 0\n    print(cleanup_counter)\n\nif __name__ == '__main__':\n    main()\n", "\n\nn = int(input())\ndirt = [int(x) for x in input().split()]\n\nclean = 0\ndirty = 0\n\nfor day in dirt:\n    dirty += day \n    if dirty >= 20:\n        clean += 1\n        dirty = 0\n\nprint(clean)\n", "\ndef house_of_cats(legs):\n    if legs % 4 == 0:\n        return [legs // 4, 0]\n    if legs % 4 == 1:\n        return [legs // 4, 1]\n    if legs % 4 == 2:\n        return [legs // 4, 2]\n    if legs % 4 == 3:\n        return [legs // 4, 3]\n\n\nprint(house_of_cats(8))\n", "\n\ndef main():\n    n = int(input())\n    d = [int(x) for x in input().split()]\n    i = 1\n    clean_ups = 0\n    while i < n:\n        if d[i] - d[i-1] > 20:\n            clean_ups += 1\n            i += 1\n        elif i == n-1:\n            clean_ups += 1\n            i += 1\n        else:\n            i += 1\n    print(clean_ups)\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    dirty_dishes = [int(x) for x in sys.stdin.readline().split()]\n    current_dirtiness = 0\n    cleanup_counter = 0\n    for day in range(1, 366):\n        if day in dirty_dishes:\n            current_dirtiness += (day - dirty_dishes.index(day))\n        else:\n            current_dirtiness += 1\n        if current_dirtiness >= 20:\n            cleanup_counter += 1\n            current_dirtiness = 0\n    print(cleanup_counter)\n\nif __name__ == '__main__':\n    main()\n"]