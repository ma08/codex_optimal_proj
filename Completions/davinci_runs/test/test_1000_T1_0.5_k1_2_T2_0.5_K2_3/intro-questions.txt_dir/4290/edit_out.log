2022-04-12 19:06:12.480347 num operations 2
2022-04-12 19:06:12.480356 size on input set 1
2022-04-12 19:06:14.297610 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN, M = map(int, input().split())\nprint(N * (M + 1))\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/python3\n\n\nN, M = map(int, input().split())\n\nprint(N * M)\n"
    },
    {
      "index": 2,
      "text": "\nN, M = map(int, input().split())\n\nprint(N * M)\n"
    }
  ],
  "created": 1649790372,
  "object": "edit"
}
2022-04-12 19:06:14.297860 fix spelling mistakes 3 ['\n\nN, M = map(int, input().split())\nprint(N * (M + 1))\n', '#!/usr/bin/python3\n\n\nN, M = map(int, input().split())\n\nprint(N * M)\n', '\nN, M = map(int, input().split())\n\nprint(N * M)\n']
2022-04-12 19:06:14.297882 size on output set 3
2022-04-12 19:06:14.297891 size on input set 3
2022-04-12 19:06:16.494459 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nA, B = map(int, input().split())\nprint(A * (B + 1))\n"
    },
    {
      "index": 1,
      "text": "\nN, M = map(int, input().split())\nprint(N * (M + 1))\n"
    },
    {
      "index": 2,
      "text": "\nN, M = map(int, input().split())\nif N > 2:\n    print(N * (M + 1))\nelse:\n    print(M + N)\n"
    }
  ],
  "created": 1649790374,
  "object": "edit"
}
2022-04-12 19:06:16.494658 fix syntax errors 3 ['\n\nA, B = map(int, input().split())\nprint(A * (B + 1))\n', '\nN, M = map(int, input().split())\nprint(N * (M + 1))\n', '\nN, M = map(int, input().split())\nif N > 2:\n    print(N * (M + 1))\nelse:\n    print(M + N)\n']
2022-04-12 19:06:18.282836 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "N, M = map(int, input().split())\n\nprint(N * (M - 1) + 1)\n"
    },
    {
      "index": 1,
      "text": "\nN, M = map(int, input().split())a\n\nprint(N * M)\n"
    },
    {
      "index": 2,
      "text": "N, M = map(int, input().split())\nprint(N * M)\n"
    }
  ],
  "created": 1649790376,
  "object": "edit"
}
2022-04-12 19:06:18.283008 fix syntax errors 3 ['N, M = map(int, input().split())\n\nprint(N * (M - 1) + 1)\n', '\nN, M = map(int, input().split())a\n\nprint(N * M)\n', 'N, M = map(int, input().split())\nprint(N * M)\n']
2022-04-12 19:06:20.214006 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/python3\n\n\nprint(\"Hello World\")\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/python3\n\n\nN, M = map(int, input().split(' '))\n\nprint(N * M)\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/python3\n\n\nN, M = map(int, input(\"\").split())\n\nprint(N * M)\n"
    }
  ],
  "created": 1649790378,
  "object": "edit"
}
2022-04-12 19:06:20.214189 fix syntax errors 3 ['#!/usr/bin/python3\n\n\nprint("Hello World")\n', "#!/usr/bin/python3\n\n\nN, M = map(int, input().split(' '))\n\nprint(N * M)\n", '#!/usr/bin/python3\n\n\nN, M = map(int, input("").split())\n\nprint(N * M)\n']
2022-04-12 19:06:20.214208 size on output set 9
2022-04-12 19:06:20.214227 num operations 2
2022-04-12 19:06:20.214232 size on input set 1
2022-04-12 19:06:23.335925 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef sum_even_ways(N, M, K):\n    return N*M\n\nN, M, K = [int(x) for x in input().split()]\nprint(sum_even_ways(N, M, K))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef sum_even_numbers(N, M):\n    return N*M\n\nN, M = [int(x) for x in input().split()]\nprint(sum_even_numbers(N, M))\n"
    },
    {
      "index": 2,
      "text": "\n\ndef sum_even_fibs(N, M):\n    return N*M\n\nN, M = [int(x) for x in input().split()]\nprint(sum_even_fibs(N, M))\n"
    }
  ],
  "created": 1649790380,
  "object": "edit"
}
2022-04-12 19:06:23.336101 fix spelling mistakes 3 ['\n\ndef sum_even_ways(N, M, K):\n    return N*M\n\nN, M, K = [int(x) for x in input().split()]\nprint(sum_even_ways(N, M, K))\n', '\n\ndef sum_even_numbers(N, M):\n    return N*M\n\nN, M = [int(x) for x in input().split()]\nprint(sum_even_numbers(N, M))\n', '\n\ndef sum_even_fibs(N, M):\n    return N*M\n\nN, M = [int(x) for x in input().split()]\nprint(sum_even_fibs(N, M))\n']
2022-04-12 19:06:23.336122 size on output set 3
2022-04-12 19:06:23.336128 size on input set 3
2022-04-12 19:06:27.072266 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef sum_even_numbers(first_number, second_number):\n    return first_number * second_number\n\nfirst_number, second_number = [int(x) for x in input().split()]\nprint(sum_even_numbers(first_number, second_number))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef sum_even_numbers(N, M):\n    return N*M*2\n\nN, M = [int(x) for x in input().split()]\nprint(sum_even_numbers(N, M))\n"
    },
    {
      "index": 2,
      "text": "\n\ndef sum_even_numbers(n, m):\n    return n * m\n\nn, m = [int(x) for x in input().split()]\nprint(sum_even_numbers(n, m))\n"
    }
  ],
  "created": 1649790383,
  "object": "edit"
}
2022-04-12 19:06:27.072443 fix syntax errors 3 ['\n\ndef sum_even_numbers(first_number, second_number):\n    return first_number * second_number\n\nfirst_number, second_number = [int(x) for x in input().split()]\nprint(sum_even_numbers(first_number, second_number))\n', '\n\ndef sum_even_numbers(N, M):\n    return N*M*2\n\nN, M = [int(x) for x in input().split()]\nprint(sum_even_numbers(N, M))\n', '\n\ndef sum_even_numbers(n, m):\n    return n * m\n\nn, m = [int(x) for x in input().split()]\nprint(sum_even_numbers(n, m))\n']
2022-04-12 19:06:30.451084 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef sum_even_fibs(n, m):\n    return n*m\n\nn, m = [int(x) for x in input().split()]\nprint(sum_even_fibs(n, m))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef sum_even_fibs(n, m):\n    return n*m\n\nn, m = [int(x) for x in input().split()]\nprint(sum_even_fibs(n, m))\n"
    },
    {
      "index": 2,
      "text": "\n\ndef sum_even_fibs(N, M):\n    return N + M\n\nN, M = [int(x) for x in input().split()]\nprint(sum_even_fibs(N, M))\n"
    }
  ],
  "created": 1649790387,
  "object": "edit"
}
2022-04-12 19:06:30.451254 fix syntax errors 3 ['\n\ndef sum_even_fibs(n, m):\n    return n*m\n\nn, m = [int(x) for x in input().split()]\nprint(sum_even_fibs(n, m))\n', '\n\ndef sum_even_fibs(n, m):\n    return n*m\n\nn, m = [int(x) for x in input().split()]\nprint(sum_even_fibs(n, m))\n', '\n\ndef sum_even_fibs(N, M):\n    return N + M\n\nN, M = [int(x) for x in input().split()]\nprint(sum_even_fibs(N, M))\n']
2022-04-12 19:06:35.107559 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef sum_even_ways(N, M, K):\n    return N * M\n\nN, M, K = [int(x) for x in input().split()]\nprint(sum_even_ways(N, M, K))\n"
    },
    {
      "index": 1,
      "text": "from collections import defaultdict\n\ndef sum_even_ways(N, M, K):\n    if K == 0:\n        return N*M\n    elif K == 1:\n        return N*M*2\n    elif K == 2:\n        return N*M*2\n    elif K == 3:\n        return N*M*2\n    elif K == 4:\n        return N*M*2\n    elif K == 5:\n        return N*M*2\n    elif K == 6:\n        return N*M*2\n    elif K == 7:\n        return N*M*2\n    elif K == 8:\n        return N*M*2\n    elif K == 9:\n        return N*M*2\n    else:\n        return N*M*2\n\nN, M, K = [int(x) for x in input().split()]\nprint(sum_even_ways(N, M, K))\n"
    },
    {
      "index": 2,
      "text": "\n\ndef sum_even_ways(N, M, K):\n    return N*M*K\n\nN, M, K = [int(x) for x in input().split()]\nprint(sum_even_ways(N, M, K))\n"
    }
  ],
  "created": 1649790390,
  "object": "edit"
}
2022-04-12 19:06:35.107768 fix syntax errors 3 ['\n\ndef sum_even_ways(N, M, K):\n    return N * M\n\nN, M, K = [int(x) for x in input().split()]\nprint(sum_even_ways(N, M, K))\n', 'from collections import defaultdict\n\ndef sum_even_ways(N, M, K):\n    if K == 0:\n        return N*M\n    elif K == 1:\n        return N*M*2\n    elif K == 2:\n        return N*M*2\n    elif K == 3:\n        return N*M*2\n    elif K == 4:\n        return N*M*2\n    elif K == 5:\n        return N*M*2\n    elif K == 6:\n        return N*M*2\n    elif K == 7:\n        return N*M*2\n    elif K == 8:\n        return N*M*2\n    elif K == 9:\n        return N*M*2\n    else:\n        return N*M*2\n\nN, M, K = [int(x) for x in input().split()]\nprint(sum_even_ways(N, M, K))\n', '\n\ndef sum_even_ways(N, M, K):\n    return N*M*K\n\nN, M, K = [int(x) for x in input().split()]\nprint(sum_even_ways(N, M, K))\n']
2022-04-12 19:06:35.107875 size on output set 8
