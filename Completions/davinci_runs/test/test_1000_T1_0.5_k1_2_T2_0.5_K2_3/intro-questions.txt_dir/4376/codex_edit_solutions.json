["\n\nn, m = map(int, input().split())  # number of dorms, number of queries\na = list(map(int, input().split()))  # number of students in each dorm\nb = list(map(int, input().split()))  # number of students in the dorm\n\ndorm_sums = [0]  # number of students in the dorm\nfor i in range(n):\n    dorm_sums.append(dorm_sums[i] + a[i])  # number of students in the dorm\n\nfor query in b:  # number of students in each dorm\n    for i in range(1, n+1):\n        if dorm_sums[i] >= query:  # number of students in each dorm\n            print(i, query - dorm_sums[i-1])  # number of students in the dorm\n            break\n", "\n\n\ndef get_room_info(n, m, a_list, k_list):\n    a_sum = 0\n    for i in range(n):\n        a_sum += a_list[i]\n        if k_list[0] <= a_sum:\n            break\n    f = i\n    k = k_list[0] - a_list[i]\n    for j in range(1, m):\n        if k_list[j] <= a_sum:\n            print(f+1, k_list[j] - k)\n        else:\n            a_sum += a_list[i+1]  # \u524d\u306e\u30eb\u30fc\u30d7\u3067i\u306f\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3055\u308c\u3066\u3044\u308b\n            i += 1\n            f = i\n            k = k_list[j] - a_list[i]\n            print(f+1, k)\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    a_list = list(map(int, input().split()))\n    k_list = list(map(int, input().split()))\n    get_room_info(n, m, a_list, k_list)\n", "def get_room_info(n, m, a_list, b_list):\n    a_sum = 0\n    for i in range(n):\n        a_sum += a_list[i]\n        if b_list[0] <= a_sum:\n            break\n    f = i + 1\n    k = b_list[0] - a_list[i]\n    for j in range(1, m):\n        if b_list[j] <= a_sum:\n            print(f, b_list[j] - k)\n        else:\n            a_sum += a_list[i+1]\n            i += 1\n            f = i + 1\n            k = b_list[j] - a_list[i]\n            print(f, k)\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    a_list = list(map(int, input().split()))\n    b_list = list(map(int, input().split()))\n    get_room_info(n, m, a_list, b_list)\n", "\n\n\ndef get_room_info(n, m, a_list, k_list):\n    a_sum = 0\n    for i in range(n):\n        a_sum += a_list[i]\n        if k_list[0] <= a_sum:\n            break\n    f = i + 1\n    k = k_list[0] - a_list[i]\n    for j in range(1, m):\n        if k_list[j] <= a_sum:\n            print(f, k_list[j] - k)\n        else:\n            a_sum += a_list[i + 1]\n            i += 1\n            f = i + 1\n            k = k_list[j] - a_list[i]\n            print(f, k)\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    a_list = list(map(int, input().split()))\n    k_list = list(map(int, input().split()))\n    get_room_info(n, m, a_list, k_list)\n", "\nn, m = map(int, input().split())  # number of dorms, number of queries\na = list(map(int, input().split()))  # number of students in each dorm\nb = list(map(int, input().split()))  # number of students in the dorm\n\ndorm_sums = [0]  # number of students in each dorm\nfor i in range(n):\n    dorm_sums.append(dorm_sums[i] + a[i])  # number of students in each dorm\n\nfor query in b:  # number of students in the dorm\n    for i in range(1, n + 1):\n        if dorm_sums[i] >= query:\n            print(i, query - dorm_sums[i - 1])\n            break\n", "def get_room_info(n, m, a_list, k_list):\n    a_sum = 0\n    for i in range(n):\n        a_sum += a_list[i]\n        if k_list[0] <= a_sum:\n            break\n    f = i + 1\n    k = k_list[0] - a_list[i]\n    for j in range(1, m):\n        if k_list[j] <= a_sum:\n            print(f, k_list[j] - k)\n        else:\n            a_sum += a_list[i+1]\n            i += 1\n            f = i + 1\n            k = k_list[j] - a_list[i]\n            print(f, k)\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    a_list = list(map(int, input().split()))\n    k_list = list(map(int, input().split()))\n    get_room_info(n, m, a_list, k_list)\n", "\nn, m = map(int, input().split())  # n - number of dorms, m - number of queries\na = list(map(int, input().split()))  # a[i] - number of students in the i-th dorm\nb = list(map(int, input().split()))  # queries\n\ndorm_sums = [0]  # cumulative sum of students in the dorms\nfor i in range(n):\n    dorm_sums.append(dorm_sums[i] + a[i])\n\n    # find the first dorm where cumulative sum of students >= query\nfor query in b:\n    for i in range(1, n+1):\n        if dorm_sums[i] >= query:\n            print(i, query - dorm_sums[i-1])  # i - dorm number, query - dorm_sums[i-1] - number of students in the dorms with number < i\n            break\n", "\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ndorm_dict = {}\ndorm_sums = [0]\nfor i in range(n):\n    dorm_sums.append(dorm_sums[i] + a[i])\n\nfor i in range(1, n+1):\n    dorm_dict[dorm_sums[i]] = i\n\nfor query in b:  # for each query\n    for i in range(1, n+1):  # for each dorm\n        if dorm_sums[i] >= query:  # if the dorm sum is greater than or equal to the query\n            print(i, query - dorm_sums[i-1])  # print the dorm and the student number\n\n\n\n\n            break\n", "\n\nn, m = map(int, input().split())  # number of dorms, number of queries\na = list(map(int, input().split()))  # number of students in each dorm\nb = list(map(int, input().split()))  # number of students in each query\n\ndorm_sums = [0]  # number of students in each dorm\nfor i in range(n):\n    dorm_sums.append(dorm_sums[i] + a[i])  # number of students in each dorm\n\nfor query in b:  # number of students in each query\n    for i in range(1, n+1):\n        if dorm_sums[i] >= query:\n            print(i, query - dorm_sums[i-1])\n            break\n", "\nfrom bisect import bisect_left\n\nn, m = map(int, input().split())  # n - number of dorms, m - number of queries\na = list(map(int, input().split()))  # a[i] - number of students in the i-th dorm\nb = list(map(int, input().split()))  # queries\n\ndorm_sums = [0]  # cumulative sum of students in the dorms\nfor i in range(n):\n    dorm_sums.append(dorm_sums[i] + a[i])\n\n# find the first dorm where cumulative sum of students >= query\nfor query in b:\n    i = bisect_left(dorm_sums, query)\n    print(i, query - dorm_sums[i-1])  # i - dorm number, query - dorm_sums[i-1] - number of students in the dorms with number < i\n", "\ndef get_room_info(n, m, a_list, b_list):\n    a_sum = 0\n    for i in range(n):\n        a_sum += a_list[i]\n        if b_list[0] <= a_sum:\n            break\n    f = i\n    k = b_list[0] - a_list[i]\n    for j in range(1, m):\n        if b_list[j] <= a_sum:\n            print(f, b_list[j] - k)\n        else:\n            a_sum += a_list[i + 1]\n            i += 1\n            f = i\n            k = b_list[j] - a_list[i]\n            print(f, k)\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    a_list = list(map(int, input().split()))\n    b_list = list(map(int, input().split()))\n    get_room_info(n, m, a_list, b_list)\n", "\ndef get_room_info(n, m, a_list, b_list):\n    a_sum = 0\n    for i in range(n):\n        a_sum += a_list[i]\n        if b_list[0] <= a_sum:\n            break\n    f = i + 1\n    k = b_list[0] - a_sum\n    for j in range(1, m):\n        if b_list[j] <= a_sum:\n            print(f, b_list[j] - k)\n        else:\n            a_sum += a_list[i+1]\n            i += 1\n            f = i + 1\n            k = b_list[j] - a_sum\n            print(f, k)\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    a_list = list(map(int, input().split()))\n    b_list = list(map(int, input().split()))\n    get_room_info(n, m, a_list, b_list)\n", "\nn, m = map(int, input().split())  # n - number of dorms, m - number of queries\na = list(map(int, input().split()))  # a[i] - number of students in the i-th dorm\nb = list(map(int, input().split()))  # queries\n\ndorm_sums = [0]  # cumulative sum of students in the dorms\nfor i in range(n):\n    dorm_sums.append(dorm_sums[i] + a[i])\n\n# find the first dorm where cumulative sum of students >= query\nfor query in b:\n    for i in range(1, n+1):\n        if dorm_sums[i] >= query:\n            print(i, query - dorm_sums[i-1])  # i - dorm number, query - dorm_sums[i-1] - number of students in the dorms with number < i\n            break\n"]