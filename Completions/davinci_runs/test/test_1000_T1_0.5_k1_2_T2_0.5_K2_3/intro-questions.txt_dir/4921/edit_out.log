2022-04-13 07:19:05.831153 num operations 2
2022-04-13 07:19:05.831163 size on input set 1
2022-04-13 07:19:07.637770 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "words = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n"
    },
    {
      "index": 1,
      "text": "\nprint('Enter text:')\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n"
    },
    {
      "index": 2,
      "text": "\n\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    elif word == '.':\n        print('.', end=' ')\nprint()\n"
    }
  ],
  "created": 1649834345,
  "object": "edit"
}
2022-04-13 07:19:07.638011 fix spelling mistakes 3 ["words = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n", "\nprint('Enter text:')\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n", "\n\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    elif word == '.':\n        print('.', end=' ')\nprint()\n"]
2022-04-13 07:19:07.638044 size on output set 3
2022-04-13 07:19:07.638052 size on input set 3
2022-04-13 07:19:09.483788 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "print('Enter text:')\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n"
    },
    {
      "index": 1,
      "text": "words = []\n\nprint('Enter text:')\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n"
    },
    {
      "index": 2,
      "text": "print('Enter text:')\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n"
    }
  ],
  "created": 1649834347,
  "object": "edit"
}
2022-04-13 07:19:09.483995 fix syntax errors 3 ["print('Enter text:')\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n", "words = []\n\nprint('Enter text:')\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n", "print('Enter text:')\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n"]
2022-04-13 07:19:15.299203 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "words = []\n\nwhile True:\n    line = input()\n    words.extend(line.split())\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n"
    },
    {
      "index": 1,
      "text": "words = [] # empty list\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split()) # split the line into words and add to the list\n    except EOFError:\n        break\nunique = [] # empty list\nfor word in words:\n    if word.lower() not in unique: # compare the word with all lowercase letters\n        unique.append(word.lower()) # add the word to list\n        print(word, end=' ') # print the word\n    else:\n        print('.', end=' ') # print a dot\nprint()\n"
    },
    {
      "index": 2,
      "text": "def main():\n    words = []\n\n    while True:\n        try:\n            line = input()\n            words.extend(line.split())\n        except EOFError:\n            break\n    unique = []\n    for word in words:\n        if word.lower() not in unique:\n            unique.append(word.lower())\n            print(word, end=' ')\n        else:\n            print('.', end=' ')\n    print()\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649834349,
  "object": "edit"
}
2022-04-13 07:19:15.299387 fix syntax errors 3 ["words = []\n\nwhile True:\n    line = input()\n    words.extend(line.split())\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n", "words = [] # empty list\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split()) # split the line into words and add to the list\n    except EOFError:\n        break\nunique = [] # empty list\nfor word in words:\n    if word.lower() not in unique: # compare the word with all lowercase letters\n        unique.append(word.lower()) # add the word to list\n        print(word, end=' ') # print the word\n    else:\n        print('.', end=' ') # print a dot\nprint()\n", "def main():\n    words = []\n\n    while True:\n        try:\n            line = input()\n            words.extend(line.split())\n        except EOFError:\n            break\n    unique = []\n    for word in words:\n        if word.lower() not in unique:\n            unique.append(word.lower())\n            print(word, end=' ')\n        else:\n            print('.', end=' ')\n    print()\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 07:19:18.083076 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    elif word == '.':\n        print('.', end='')\nprint()\n"
    },
    {
      "index": 1,
      "text": "\n\nwords = []\n\nwhile True:\n    try:\n        line = raw_input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    elif word == '.' or word == '?' or word == '!':\n        print(word, end=' ')\nprint()\n"
    },
    {
      "index": 2,
      "text": "\n\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    elif word == '.' or word == ',' or word == '!' or word == '?':\n        print(word, end=' ')\nprint()\n"
    }
  ],
  "created": 1649834355,
  "object": "edit"
}
2022-04-13 07:19:18.083322 fix syntax errors 3 ["\n\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    elif word == '.':\n        print('.', end='')\nprint()\n", "\n\nwords = []\n\nwhile True:\n    try:\n        line = raw_input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    elif word == '.' or word == '?' or word == '!':\n        print(word, end=' ')\nprint()\n", "\n\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    elif word == '.' or word == ',' or word == '!' or word == '?':\n        print(word, end=' ')\nprint()\n"]
2022-04-13 07:19:18.083360 size on output set 8
2022-04-13 07:19:18.083369 num operations 2
2022-04-13 07:19:18.083374 size on input set 1
2022-04-13 07:19:19.605045 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649834358,
  "object": "edit"
}
2022-04-13 07:19:19.605238 fix spelling mistakes 3 ['import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=\' \')\n            else:\n                print(\'.\', end=\' \')\n        print()\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=\' \')\n            else:\n                print(\'.\', end=\' \')\n        print()\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=\' \')\n            else:\n                print(\'.\', end=\' \')\n        print()\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 07:19:19.605267 size on output set 2
2022-04-13 07:19:19.605275 size on input set 2
2022-04-13 07:19:24.752486 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end = ' ')\n            else:\n                print('.', end = ' ')\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\nimport string\n\ndef main():\n    words = []\n    punc = string.punctuation\n    punc = punc.replace(\"'\", \"\")\n    punc = punc.replace(\"-\", \"\")\n    for line in sys.stdin:\n        for word in line.split(\" \"):\n            word = word.translate(str.maketrans('', '', punc))\n            word = word.lower()\n            if word not in words and word != \"\":\n                words.append(word)\n                print(word, end=\" \")\n            elif word != \"\":\n                print(\".\", end=\" \")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print('')\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649834359,
  "object": "edit"
}
2022-04-13 07:19:24.752655 fix syntax errors 3 ['\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end = \' \')\n            else:\n                print(\'.\', end = \' \')\n        print()\n\nif __name__ == "__main__":\n    main()\n', 'import sys\nimport string\n\ndef main():\n    words = []\n    punc = string.punctuation\n    punc = punc.replace("\'", "")\n    punc = punc.replace("-", "")\n    for line in sys.stdin:\n        for word in line.split(" "):\n            word = word.translate(str.maketrans(\'\', \'\', punc))\n            word = word.lower()\n            if word not in words and word != "":\n                words.append(word)\n                print(word, end=" ")\n            elif word != "":\n                print(".", end=" ")\n        print()\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=\' \')\n            else:\n                print(\'.\', end=\' \')\n        print(\'\')\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 07:19:27.935785 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.add(word.lower())\n                print(word, end=\" \")\n            else:\n                print(\".\", end=\" \")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')  # end=' ' - \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u043f\u0435\u0440\u0435\u043d\u043e\u0441\u0438\u043b\u043e \u0432 \u043d\u043e\u0432\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys, os\n\ndef main():\n    words = []\n    if os.path.isfile(sys.argv[1]):\n        f = open(sys.argv[1])\n    else:\n        f = sys.stdin\n    for line in f:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649834364,
  "object": "edit"
}
2022-04-13 07:19:27.936012 fix syntax errors 3 ['import sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.add(word.lower())\n                print(word, end=" ")\n            else:\n                print(".", end=" ")\n        print()\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=\' \')  # end=\' \' - чтобы не переносило в новую строку\n            else:\n                print(\'.\', end=\' \')\n        print()\n\nif __name__ == "__main__":\n    main()\n', 'import sys, os\n\ndef main():\n    words = []\n    if os.path.isfile(sys.argv[1]):\n        f = open(sys.argv[1])\n    else:\n        f = sys.stdin\n    for line in f:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=\' \')\n            else:\n                print(\'.\', end=\' \')\n        print()\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 07:19:27.936049 size on output set 6
2022-04-13 07:19:27.936059 num operations 2
2022-04-13 07:19:27.936064 size on input set 1
2022-04-13 07:19:29.509149 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n"
    }
  ],
  "created": 1649834367,
  "object": "edit"
}
2022-04-13 07:19:29.509387 fix spelling mistakes 3 ["\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n"]
2022-04-13 07:19:29.509416 size on output set 1
2022-04-13 07:19:29.509423 size on input set 1
2022-04-13 07:19:31.758758 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.add(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n"
    }
  ],
  "created": 1649834369,
  "object": "edit"
}
2022-04-13 07:19:31.758921 fix syntax errors 3 ["import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n        print()\n\nmain()\n", "import sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.add(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n", "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n"]
2022-04-13 07:19:31.758947 size on output set 3
2022-04-13 07:19:31.758957 num operations 2
2022-04-13 07:19:31.758962 size on input set 1
2022-04-13 07:19:36.324155 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        # print(words)\n        words_seen = set()\n        result = ''\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-1]) \n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        words_seen = set()\n        result = ''\n        for word in words:\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n\ndef remove_punctuation(word):\n    word = word.replace('.', '')\n    word = word.replace(',', '')\n    word = word.replace('!', '')\n    word = word.replace('?', '')\n    word = word.replace(';', '')\n    word = word.replace(':', '')\n    word = word.replace('\"', '')\n    return word\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        # print(words)\n        words_seen = set()\n        result = ''\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649834371,
  "object": "edit"
}
2022-04-13 07:19:36.324406 fix spelling mistakes 3 ['\n\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(\' \')\n        # print(words)\n        words_seen = set()\n        result = \'\'\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + \' \'\n                words_seen.add(word.lower())\n            else:\n                result += \'. \'\n        print(result[:-1]) \n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(\' \')\n        words_seen = set()\n        result = \'\'\n        for word in words:\n            if word.lower() not in words_seen:\n                result += word + \' \'\n                words_seen.add(word.lower())\n            else:\n                result += \'. \'\n        print(result[:-1])\n\nif __name__ == "__main__":\n    main()\n', '\n\n\ndef remove_punctuation(word):\n    word = word.replace(\'.\', \'\')\n    word = word.replace(\',\', \'\')\n    word = word.replace(\'!\', \'\')\n    word = word.replace(\'?\', \'\')\n    word = word.replace(\';\', \'\')\n    word = word.replace(\':\', \'\')\n    word = word.replace(\'"\', \'\')\n    return word\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(\' \')\n        # print(words)\n        words_seen = set()\n        result = \'\'\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + \' \'\n                words_seen.add(word.lower())\n            else:\n                result += \'. \'\n        print(result[:-1])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 07:19:36.324444 size on output set 3
2022-04-13 07:19:36.324450 size on input set 3
2022-04-13 07:19:38.985683 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines[1:]:\n        words = line.split(' ')\n        words_seen = set()\n        result = ''\n        for word in words:\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-2])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n    lines.pop(0)\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        words_seen = set()\n        result = ''\n        for word in words:\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n        result = result[:-1] + '.'\n        print(result[:-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        words_seen = set()\n        result = ''\n        for word in words:\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-2])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649834376,
  "object": "edit"
}
2022-04-13 07:19:38.985844 fix syntax errors 3 ['\n\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines[1:]:\n        words = line.split(\' \')\n        words_seen = set()\n        result = \'\'\n        for word in words:\n            if word.lower() not in words_seen:\n                result += word + \' \'\n                words_seen.add(word.lower())\n            else:\n                result += \'. \'\n        print(result[:-2])\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n    lines.pop(0)\n        lines.append(line)\n    for line in lines:\n        words = line.split(\' \')\n        words_seen = set()\n        result = \'\'\n        for word in words:\n            if word.lower() not in words_seen:\n                result += word + \' \'\n                words_seen.add(word.lower())\n        result = result[:-1] + \'.\'\n        print(result[:-1])\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(\' \')\n        words_seen = set()\n        result = \'\'\n        for word in words:\n            if word.lower() not in words_seen:\n                result += word + \' \'\n                words_seen.add(word.lower())\n            else:\n                result += \'. \'\n        print(result[:-2])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 07:19:40.962520 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        words_seen = set()\n        result = ''\n        for word in words:\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-1]) \n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        # print(words)\n        words_seen = set()\n        result = ''\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-1]) \nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        # print(words)\n        words_seen = set()\n        result = ''\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-1]) \n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649834379,
  "object": "edit"
}
2022-04-13 07:19:40.962688 fix syntax errors 3 ['\n\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(\' \')\n        words_seen = set()\n        result = \'\'\n        for word in words:\n            if word.lower() not in words_seen:\n                result += word + \' \'\n                words_seen.add(word.lower())\n            else:\n                result += \'. \'\n        print(result[:-1]) \n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(\' \')\n        # print(words)\n        words_seen = set()\n        result = \'\'\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + \' \'\n                words_seen.add(word.lower())\n            else:\n                result += \'. \'\n        print(result[:-1]) \nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(\' \')\n        # print(words)\n        words_seen = set()\n        result = \'\'\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + \' \'\n                words_seen.add(word.lower())\n            else:\n                result += \'. \'\n        print(result[:-1]) \n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 07:19:43.280775 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef remove_punctuation(word):\n    word = word.replace('.', '')\n    word = word.replace(',', '')\n    word = word.replace('!', '')\n    word = word.replace('?', '')\n    word = word.replace(';', '')\n    word = word.replace(':', '')\n    word = word.replace('\"', '')\n    return word\n\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        # print(words)\n        words_seen = set()\n        result = ''\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef remove_punctuation(word):\n    word = word.replace('.', '')\n    word = word.replace(',', '')\n    word = word.replace('!', '')\n    word = word.replace('?', '')\n    word = word.replace(';', '')\n    word = word.replace(':', '')\n    word = word.replace('\"', '')\n\n\n    return word\n\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        # print(words)\n        words_seen = set()\n        result = ''\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-1])\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef remove_punctuation(word):\n    word = word.replace('.', '')\n    word = word.replace(',', '')\n    word = word.replace('!', '')\n    word = word.replace('?', '')\n    word = word.replace(';', '')\n    word = word.replace(':', '')\n    word = word.replace('\"', '')\n\n\n    return word\n\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        # print(words)\n        words_seen = set()\n        result = ''\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-1])\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649834381,
  "object": "edit"
}
2022-04-13 07:19:43.280949 fix syntax errors 3 ['\nimport sys\n\ndef remove_punctuation(word):\n    word = word.replace(\'.\', \'\')\n    word = word.replace(\',\', \'\')\n    word = word.replace(\'!\', \'\')\n    word = word.replace(\'?\', \'\')\n    word = word.replace(\';\', \'\')\n    word = word.replace(\':\', \'\')\n    word = word.replace(\'"\', \'\')\n    return word\n\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(\' \')\n        # print(words)\n        words_seen = set()\n        result = \'\'\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + \' \'\n                words_seen.add(word.lower())\n            else:\n                result += \'. \'\n        print(result[:-1])\n\nif __name__ == "__main__":\n    main()\n', '\ndef remove_punctuation(word):\n    word = word.replace(\'.\', \'\')\n    word = word.replace(\',\', \'\')\n    word = word.replace(\'!\', \'\')\n    word = word.replace(\'?\', \'\')\n    word = word.replace(\';\', \'\')\n    word = word.replace(\':\', \'\')\n    word = word.replace(\'"\', \'\')\n\n\n    return word\n\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(\' \')\n        # print(words)\n        words_seen = set()\n        result = \'\'\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + \' \'\n                words_seen.add(word.lower())\n            else:\n                result += \'. \'\n        print(result[:-1])\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef remove_punctuation(word):\n    word = word.replace(\'.\', \'\')\n    word = word.replace(\',\', \'\')\n    word = word.replace(\'!\', \'\')\n    word = word.replace(\'?\', \'\')\n    word = word.replace(\';\', \'\')\n    word = word.replace(\':\', \'\')\n    word = word.replace(\'"\', \'\')\n\n\n    return word\n\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(\' \')\n        # print(words)\n        words_seen = set()\n        result = \'\'\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + \' \'\n                words_seen.add(word.lower())\n            else:\n                result += \'. \'\n        print(result[:-1])\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 07:19:43.280991 size on output set 8
2022-04-13 07:19:43.281001 num operations 2
2022-04-13 07:19:43.281006 size on input set 1
2022-04-13 07:19:47.409052 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n            word = word.lower()\n        for word in line:\n            if word in words:\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n        for word in line:\n            if word in words:\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print()\nmain()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split() #convert to lower case and split\n        for word in line:\n            if word in words: #if word is in the list\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print()\n\nmain()\n"
    }
  ],
  "created": 1649834383,
  "object": "edit"
}
2022-04-13 07:19:47.409259 fix spelling mistakes 3 ['\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n            word = word.lower()\n        for word in line:\n            if word in words:\n                print(".", end=" ")\n            else:\n                words.append(word)\n                print(word, end=" ")\n        print()\n\nmain()\n', '\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n        for word in line:\n            if word in words:\n                print(".", end=" ")\n            else:\n                words.append(word)\n                print(word, end=" ")\n        print()\nmain()\n', '\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split() #convert to lower case and split\n        for word in line:\n            if word in words: #if word is in the list\n                print(".", end=" ")\n            else:\n                words.append(word)\n                print(word, end=" ")\n        print()\n\nmain()\n']
2022-04-13 07:19:47.409294 size on output set 3
2022-04-13 07:19:47.409301 size on input set 3
2022-04-13 07:19:51.031578 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n        for word in line:\n            if word in words:\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split(' ')\n        for word in line:\n            if word in words:\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print('\\n')\nmain()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().lower().split()\n        for word in line:\n            if word in words:\n                print(\".\", end=\"\")\n            else:\n                words.append(word)\n                print(word, end=\"\")\n            print(\" \", end=\"\")\n        print()\nmain()\n"
    }
  ],
  "created": 1649834387,
  "object": "edit"
}
2022-04-13 07:19:51.031873 fix syntax errors 3 ['\nimport sys\n\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n        for word in line:\n            if word in words:\n                print(".", end=" ")\n            else:\n                words.append(word)\n                print(word, end=" ")\n        print()\n\nmain()\n', 'import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split(\' \')\n        for word in line:\n            if word in words:\n                print(".", end=" ")\n            else:\n                words.append(word)\n                print(word, end=" ")\n        print(\'\\n\')\nmain()\n', 'import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().lower().split()\n        for word in line:\n            if word in words:\n                print(".", end="")\n            else:\n                words.append(word)\n                print(word, end="")\n            print(" ", end="")\n        print()\nmain()\n']
2022-04-13 07:19:54.634719 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split() #convert to lower case and split\n        for word in line:\n            if word in words: #if word is in the list\n                print(\".\", end=\" \") #print \".\"\n            else:\n                words.append(word) #add word to list\n                print(word, end=\" \") #print word\n        print() #new line\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()  # convert to lower case and split\n        for word in line:\n            if word in words:  # if word is in the list\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print()\n\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()  # convert to lower case and split\n        for word in line:\n            if word in words:  # if word is in the list\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print()\n\nmain()\n"
    }
  ],
  "created": 1649834391,
  "object": "edit"
}
2022-04-13 07:19:54.634908 fix syntax errors 3 ['\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split() #convert to lower case and split\n        for word in line:\n            if word in words: #if word is in the list\n                print(".", end=" ") #print "."\n            else:\n                words.append(word) #add word to list\n                print(word, end=" ") #print word\n        print() #new line\n\nmain()\n', 'import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()  # convert to lower case and split\n        for word in line:\n            if word in words:  # if word is in the list\n                print(".", end=" ")\n            else:\n                words.append(word)\n                print(word, end=" ")\n        print()\n\n\nmain()\n', 'import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()  # convert to lower case and split\n        for word in line:\n            if word in words:  # if word is in the list\n                print(".", end=" ")\n            else:\n                words.append(word)\n                print(word, end=" ")\n        print()\n\nmain()\n']
2022-04-13 07:19:57.153290 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n            word = word.lower().strip(\",.!?\")\n        for word in line:\n            if word in words:\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.split()\n            word = word.lower().strip(\".,\")\n        for word in line:\n            if word in words:\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print()\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n            word = word.lower()\n        for word in line:\n            if word in words:\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print()\n\nmain()\n"
    }
  ],
  "created": 1649834394,
  "object": "edit"
}
2022-04-13 07:19:57.153503 fix syntax errors 3 ['\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n            word = word.lower().strip(",.!?")\n        for word in line:\n            if word in words:\n                print(".", end=" ")\n            else:\n                words.append(word)\n                print(word, end=" ")\n        print()\n\nmain()\n', '\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.split()\n            word = word.lower().strip(".,")\n        for word in line:\n            if word in words:\n                print(".", end=" ")\n            else:\n                words.append(word)\n                print(word, end=" ")\n        print()\n\nmain()\n', '\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n            word = word.lower()\n        for word in line:\n            if word in words:\n                print(".", end=" ")\n            else:\n                words.append(word)\n                print(word, end=" ")\n        print()\n\nmain()\n']
2022-04-13 07:19:57.153534 size on output set 9
2022-04-13 07:19:57.153544 num operations 2
2022-04-13 07:19:57.153549 size on input set 1
2022-04-13 07:19:58.802342 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n#\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n"
    }
  ],
  "created": 1649834397,
  "object": "edit"
}
2022-04-13 07:19:58.802503 fix spelling mistakes 3 ["\n#\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n", "\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n"]
2022-04-13 07:19:58.802597 size on output set 3
2022-04-13 07:19:58.802605 size on input set 3
2022-04-13 07:20:01.938980 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# \nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "import sys\nimport re\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in re.split(r'\\W+', line):\n            if word.lower() in words or len(word) < 3:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n"
    }
  ],
  "created": 1649834398,
  "object": "edit"
}
2022-04-13 07:20:01.939161 fix syntax errors 3 ["\n# \nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n", "import sys\nimport re\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in re.split(r'\\W+', line):\n            if word.lower() in words or len(word) < 3:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n", "import sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n"]
2022-04-13 07:20:04.864331 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print('')\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words: #if word is in the set\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower()) #adds words to the set\n        print()\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=\" \")\n            else:\n                print(word, end=\" \")\n                words.add(word.lower())\n        print()\n\nmain()\n"
    }
  ],
  "created": 1649834401,
  "object": "edit"
}
2022-04-13 07:20:04.864515 fix syntax errors 3 ["#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print('')\n\nmain()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words: #if word is in the set\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower()) #adds words to the set\n        print()\n\nmain()\n", '#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print(\'.\', end=" ")\n            else:\n                print(word, end=" ")\n                words.add(word.lower())\n        print()\n\nmain()\n']
2022-04-13 07:20:10.346709 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\n\ndef main():\n\twords = set()\n\tfor line in sys.stdin:\n\t\tfor word in line.split():\n\t\t\tif word.lower() in words:\n\t\t\t\tprint('.', end=' ')\n\t\t\telse:\n\t\t\t\tprint(word, end=' ')\n\t\t\t\twords.add(word.lower())\n\t\tprint()\n\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end = ' ')\n            else:\n                print(word, end = ' ')\n                words.add(word.lower())\n        print()\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n"
    }
  ],
  "created": 1649834404,
  "object": "edit"
}
2022-04-13 07:20:10.346885 fix syntax errors 3 ["\nimport sys\n\n\ndef main():\n\twords = set()\n\tfor line in sys.stdin:\n\t\tfor word in line.split():\n\t\t\tif word.lower() in words:\n\t\t\t\tprint('.', end=' ')\n\t\t\telse:\n\t\t\t\tprint(word, end=' ')\n\t\t\t\twords.add(word.lower())\n\t\tprint()\n\n\nmain()\n", "import sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end = ' ')\n            else:\n                print(word, end = ' ')\n                words.add(word.lower())\n        print()\n\nmain()\n", "import sys\n\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n"]
2022-04-13 07:20:10.346914 size on output set 9
2022-04-13 07:20:10.346926 num operations 2
2022-04-13 07:20:10.346932 size on input set 1
2022-04-13 07:20:13.669402 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:]:\n            line[i] = \".\"  # if the word appears more than once, replace it with a dot\n        i += 1\n    print(\" \".join(line))\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:]:\n            line[i] = \".\"\n        i += 1\n    print(\" \".join(line))\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    for i in range(len(line)):\n        if line[i] in line[i + 1:]:\n            line[i] = \".\" \n    print(\" \".join(line))\n"
    }
  ],
  "created": 1649834410,
  "object": "edit"
}
2022-04-13 07:20:13.669658 fix spelling mistakes 3 ['\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:]:\n            line[i] = "."  # if the word appears more than once, replace it with a dot\n        i += 1\n    print(" ".join(line))\n', '#!/usr/bin/env python3\n\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:]:\n            line[i] = "."\n        i += 1\n    print(" ".join(line))\n', '\n\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    for i in range(len(line)):\n        if line[i] in line[i + 1:]:\n            line[i] = "." \n    print(" ".join(line))\n']
2022-04-13 07:20:13.669688 size on output set 3
2022-04-13 07:20:13.669694 size on input set 3
2022-04-13 07:20:16.353272 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nprint(words)\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:]:  # check if the word appears more than once\n            line[i] = \".\"  # if the word appears more than once, replace it with a dot\n        i += 1\n    print(\" \".join(line))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i + 1:]:\n            line[i] = \".\"  # if the word appears more than once, replace it with a dot\n        i += 1\n    print(\" \".join(line))\n"
    },
    {
      "index": 2,
      "text": "import sys\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:]:\n            line[i] = \".\"  # if the word appears more than once, replace it with a dot\n        i += 1\n    print(\" \".join(line))\n"
    }
  ],
  "created": 1649834413,
  "object": "edit"
}
2022-04-13 07:20:16.353579 fix syntax errors 3 ['\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nprint(words)\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:]:  # check if the word appears more than once\n            line[i] = "."  # if the word appears more than once, replace it with a dot\n        i += 1\n    print(" ".join(line))\n', '\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i + 1:]:\n            line[i] = "."  # if the word appears more than once, replace it with a dot\n        i += 1\n    print(" ".join(line))\n', 'import sys\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:]:\n            line[i] = "."  # if the word appears more than once, replace it with a dot\n        i += 1\n    print(" ".join(line))\n']
2022-04-13 07:20:19.070572 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    for i in range(len(line)):\n        if line[i] in line[i + 1:]:\n            line[i] = \".\"\n    print(\" \".join(line))\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    for i in range(len(line) - 1):\n        if line[i] in line[i + 1:]:\n            line[i] = \".\" \n    print(\" \".join(line))\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    for i in range(len(line)):\n        for j in range(i + 1, len(line)):\n            if line[i] == line[j]:\n                line[i] = \".\"\n                break\n    print(\" \".join(line))\n"
    }
  ],
  "created": 1649834416,
  "object": "edit"
}
2022-04-13 07:20:19.070748 fix syntax errors 3 ['\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    for i in range(len(line)):\n        if line[i] in line[i + 1:]:\n            line[i] = "."\n    print(" ".join(line))\n', '\n\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    for i in range(len(line) - 1):\n        if line[i] in line[i + 1:]:\n            line[i] = "." \n    print(" ".join(line))\n', '\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    for i in range(len(line)):\n        for j in range(i + 1, len(line)):\n            if line[i] == line[j]:\n                line[i] = "."\n                break\n    print(" ".join(line))\n']
2022-04-13 07:20:22.745477 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/python3\n\nimport sys\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    for i in range(len(line)):\n        if line[i] in line[i + 1:]:\n            line[i] = \"*\"\n    print(\" \".join(line))\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.strip().split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:len(line)]:\n            line[i] = \".\"\n        i += 1\n    print(\" \".join(line))\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    if line:\n        i = 0\n        while i < len(line):\n            if line[i] in line[i+1:]:\n                line[i] = \".\"\n            i += 1\n        print(\" \".join(line))\n"
    }
  ],
  "created": 1649834419,
  "object": "edit"
}
2022-04-13 07:20:22.745652 fix syntax errors 3 ['#!/usr/bin/python3\n\nimport sys\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    for i in range(len(line)):\n        if line[i] in line[i + 1:]:\n            line[i] = "*"\n    print(" ".join(line))\n', '#!/usr/bin/env python3\n\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.strip().split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:len(line)]:\n            line[i] = "."\n        i += 1\n    print(" ".join(line))\n', '#!/usr/bin/env python3\n\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    if line:\n        i = 0\n        while i < len(line):\n            if line[i] in line[i+1:]:\n                line[i] = "."\n            i += 1\n        print(" ".join(line))\n']
2022-04-13 07:20:22.745763 size on output set 9
2022-04-13 07:20:22.745777 num operations 2
2022-04-13 07:20:22.745782 size on input set 1
2022-04-13 07:20:26.397706 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ') # end=' ' means there will be a space after the word\n            else:\n                print('.', end=' ') # end=' ' means there will be a space after the dot\n        print('')\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words: #lowercase the words to avoid case sensitivity\n                words.append(word.lower()) #add lowercase words to the list to keep track of them\n                print(word, end=' ')\n            else:\n                print('.', end=' ') #if the word has already been seen, print a dot\n        print('')\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print('')\n\nmain()\n"
    }
  ],
  "created": 1649834422,
  "object": "edit"
}
2022-04-13 07:20:26.397883 fix spelling mistakes 3 ["#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ') # end=' ' means there will be a space after the word\n            else:\n                print('.', end=' ') # end=' ' means there will be a space after the dot\n        print('')\n\nmain()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words: #lowercase the words to avoid case sensitivity\n                words.append(word.lower()) #add lowercase words to the list to keep track of them\n                print(word, end=' ')\n            else:\n                print('.', end=' ') #if the word has already been seen, print a dot\n        print('')\n\nmain()\n", "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print('')\n\nmain()\n"]
2022-04-13 07:20:26.397914 size on output set 3
2022-04-13 07:20:26.397920 size on input set 3
2022-04-13 07:20:29.320451 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words: #lowercase the words to avoid case sensitivity\n                words.append(word.lower()) #add lowercase words to the list to keep track of them\n                print(word, end=' ')\n            else:\n                print('.', end=' ') #if the word has already been seen, print a dot\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split() #strip whitespace and split into list of words\n        for word in line:\n            if word.lower() not in words: #lowercase the words to avoid case sensitivity when comparing\n                words.append(word.lower()) #add lowercase words to the list to keep track of them\n                print(word, end=' ')\n            else:\n                print('.', end=' ') #if the word has already been seen, print a dot\n        print('')\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words: #lowercase the words to avoid case sensitivity and keep track of them\n                words.append(word.lower()) #add lowercase words to the list to keep track of them\n                print(word, end=' ')\n            else: #if the word has already been seen, print a dot\n                print('.', end=' ') #if the word has already been seen, print a dot\n        print('')\n\nmain()\n"
    }
  ],
  "created": 1649834426,
  "object": "edit"
}
2022-04-13 07:20:29.320626 fix syntax errors 3 ["#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words: #lowercase the words to avoid case sensitivity\n                words.append(word.lower()) #add lowercase words to the list to keep track of them\n                print(word, end=' ')\n            else:\n                print('.', end=' ') #if the word has already been seen, print a dot\n        print()\n\nmain()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split() #strip whitespace and split into list of words\n        for word in line:\n            if word.lower() not in words: #lowercase the words to avoid case sensitivity when comparing\n                words.append(word.lower()) #add lowercase words to the list to keep track of them\n                print(word, end=' ')\n            else:\n                print('.', end=' ') #if the word has already been seen, print a dot\n        print('')\n\nmain()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words: #lowercase the words to avoid case sensitivity and keep track of them\n                words.append(word.lower()) #add lowercase words to the list to keep track of them\n                print(word, end=' ')\n            else: #if the word has already been seen, print a dot\n                print('.', end=' ') #if the word has already been seen, print a dot\n        print('')\n\nmain()\n"]
2022-04-13 07:20:31.576253 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ') #print('.', end=' ')\n        print('') #print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split(' ')\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print('')\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end = ' ')\n            else:\n                print('.', end = ' ')\n        print('')\n\nmain()\n"
    }
  ],
  "created": 1649834429,
  "object": "edit"
}
2022-04-13 07:20:31.576493 fix syntax errors 3 ["import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ') #print('.', end=' ')\n        print('') #print()\n\nmain()\n", "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split(' ')\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print('')\n\nmain()\n", "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end = ' ')\n            else:\n                print('.', end = ' ')\n        print('')\n\nmain()\n"]
2022-04-13 07:20:33.125458 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ') # end=' ' means there will be a space after the word\n            else:\n                print('.', end=' ') # end=' ' means there will be a space after the dot\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ') # end=' ' means there will be a space after the word\n            else:\n                print('.', end=' ') # end=' ' means there will be a space after the dot\n        print()\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ') # end=' ' means there will be a space after the word\n            else:\n                print('.', end=' ') # end=' ' means there will be a space after the dot\n        print()\n\nmain()\n"
    }
  ],
  "created": 1649834431,
  "object": "edit"
}
2022-04-13 07:20:33.125625 fix syntax errors 3 ["#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ') # end=' ' means there will be a space after the word\n            else:\n                print('.', end=' ') # end=' ' means there will be a space after the dot\n        print()\n\nmain()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ') # end=' ' means there will be a space after the word\n            else:\n                print('.', end=' ') # end=' ' means there will be a space after the dot\n        print()\n\nmain()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ') # end=' ' means there will be a space after the word\n            else:\n                print('.', end=' ') # end=' ' means there will be a space after the dot\n        print()\n\nmain()\n"]
2022-04-13 07:20:33.125656 size on output set 7
