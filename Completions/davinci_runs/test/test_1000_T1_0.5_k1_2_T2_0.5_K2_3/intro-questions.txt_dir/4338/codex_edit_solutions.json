["\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))[:n]\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durability is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durability is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_number_of_broken_doors(n, x, y, doors, doors_broken):\n    return n\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    doors = list(map(int, input().split()))\n    doors_broken = [0] * n\n    print(get_number_of_broken_doors(n, x, y, doors, doors_broken))\n\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durability is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef get_number_of_broken_doors(n, x, y, a, b):\n    return 0\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))  # a is the array of door numbers\n    b = list(map(int, input().split()))  # b is the array of door states\n    print(get_number_of_broken_doors(n, x, y, a, b))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_number_of_broken_doors(n, x, y, doors, start):\n    return n\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    doors = list(map(int, input().split()))\n    start = input()\n    print(get_number_of_broken_doors(n, x, y, doors, start))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys, math\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is odd\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is odd\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef get_number_of_broken_doors(n, x, y, a, b, d):\n    return\n\n\ndef main():\n    n, x, y, d = map(int, input().split())  # \u0447\u0438\u0441\u043b\u043e \u0434\u0432\u0435\u0440\u0435\u0439, \u043d\u043e\u043c\u0435\u0440 \u043f\u0435\u0440\u0432\u043e\u0439 \u0434\u0432\u0435\u0440\u0438, \u043d\u043e\u043c\u0435\u0440 \u0432\u0442\u043e\u0440\u043e\u0439 \u0434\u0432\u0435\u0440\u0438\n    a = list(map(int, input().split()))  # \u043d\u043e\u043c\u0435\u0440\u0430 \u0434\u0432\u0435\u0440\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u043e\u0439\u0442\u0438\n    b = list(map(int, input().split()))  # \u043d\u043e\u043c\u0435\u0440\u0430 \u0434\u0432\u0435\u0440\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0443\u0436\u043d\u043e \u043e\u0442\u043a\u0440\u044b\u0442\u044c\n    print(get_number_of_broken_doors(n, x, y, a, b, d))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is odd\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef get_number_of_broken_doors(n, x, y, doors):\n    count = 0\n    for i in range(n):\n        if doors[i] <= x:\n            count += 1\n        elif doors[i] > y:\n            count += 2\n    return count\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    doors = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, doors))\n\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(1)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is odd\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef get_number_of_broken_doors(n, x, y, a, b):\n    return n\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))  # a is the array of door states\n    b = list(map(int, input().split()))  # b is the array of door numbers\n    print(get_number_of_broken_doors(n, x, y, a, b))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_number_of_broken_doors(n, x, y, a, b):\n    return n\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))  # a is the list of door numbers\n    b = list(map(int, input().split()))  # b is the list of door states\n    print(get_number_of_broken_doors(n, x, y, a, b))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_number_of_broken_doors(n, x, y, a, b, c):\n    return n, x, y, a, b, c\n\n\ndef main():\n    c = list(map(int, input().split()))  # \u043d\u043e\u043c\u0435\u0440\u0430 \u0434\u0432\u0435\u0440\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0443\u0436\u043d\u043e \u0437\u0430\u043a\u0440\u044b\u0442\u044c\n    n, x, y = map(int, input().split())  # \u0447\u0438\u0441\u043b\u043e \u0434\u0432\u0435\u0440\u0435\u0439, \u043d\u043e\u043c\u0435\u0440 \u043f\u0435\u0440\u0432\u043e\u0439 \u0434\u0432\u0435\u0440\u0438, \u043d\u043e\u043c\u0435\u0440 \u0432\u0442\u043e\u0440\u043e\u0439 \u0434\u0432\u0435\u0440\u0438\n    a = list(map(int, input().split()))  # \u043d\u043e\u043c\u0435\u0440\u0430 \u0434\u0432\u0435\u0440\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u043e\u0439\u0442\u0438\n    b = list(map(int, input().split()))  # \u043d\u043e\u043c\u0435\u0440\u0430 \u0434\u0432\u0435\u0440\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0443\u0436\u043d\u043e \u043e\u0442\u043a\u0440\u044b\u0442\u044c\n    print(get_number_of_broken_doors(n, x, y, a, b, c))\n\n\nif __name__ == '__main__':\n    main()\n"]