["\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp1 = [1] * n\n    dp2 = [1] * n\n    for i in range(1, n):\n        if a[i] > a[i - 1]:\n            dp1[i] = dp1[i - 1] + 1\n        if a[n - i - 1] > a[n - i]:\n            dp2[n - i - 1] = dp2[n - i] + 1\n\n    ans = 0\n    for i in range(n):\n        if i == 0:\n            ans = max(ans, dp1[i + 1])\n        elif i == n - 1:\n            ans = max(ans, dp2[i - 1])\n        else:\n            ans = max(ans, dp1[i + 1] + dp2[i - 1] - 1)\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp1 = [1] * n\n    dp2 = [1] * n  # dp1[i] = LIS\u306e\u6700\u5f8c\u304ca[i]\u3068\u306a\u308b\u3088\u3046\u306a\u3082\u306e\u306e\u9577\u3055\n    # dp2[i] = LIS\u306e\u6700\u521d\u304ca[i]\u3068\u306a\u308b\u3088\u3046\u306a\u3082\u306e\u306e\u9577\u3055\n    for i in range(1, n):\n        if a[i] > a[i - 1]:\n            dp1[i] = dp1[i - 1] + 1\n        if a[n - i - 1] > a[n - i]:\n            dp2[n - i - 1] = dp2[n - i] + 1\n\n    ans = 0\n    for i in range(n):\n        if i == 0:\n            ans = max(ans, dp1[i + 1])\n        elif i == n - 1:\n            ans = max(ans, dp2[i - 1])\n        else:\n            ans = max(ans, dp[i + 1] + dp2[i - 1] - 1)\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = [0] * n\n    for i in range(n):\n        for j in range(i):\n            if a[i] > a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n\n    print(max(dp) + 1)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n, m = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    s = [list(map(int, input().split())) for _ in range(m)]\n    for i in range(n):\n        for j in range(n):\n            for k in range(m):\n                if a[i][j] == s[k][0]:\n                    a[i][j] = s[k][1]\n    for row in a:\n        print(*row)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\nsys.setrecursionlimit(10 ** 7)\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [1] * n\n    dp2 = [1] * n\n    for i in range(1, n):\n        if a[i] > a[i - 1]:\n            dp[i] = dp[i - 1] + 1\n        if a[n - i - 1] > a[n - i]:\n            dp2[n - i - 1] = dp2[n - i] + 1\n\n    ans = 0\n    for i in range(n):\n        if i == 0:\n            ans = max(ans, dp[i + 1])\n        elif i == n - 1:\n            ans = max(ans, dp2[i - 1])\n        else:\n            ans = max(ans, dp[i + 1] + dp2[i - 1] - 1)\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [1 for _ in range(n)]\n    for i in range(1, n):\n        if a[i-1] < a[i]:\n            dp[i] = dp[i-1] + 1\n    ans = max(dp)\n    for i in range(1, n-1):  # ??????\n        if a[i-1] < a[i+1] and a[i] > a[i-1]:\n            ans = max(ans, dp[i-1] + dp[i+1] - 1)\n        elif a[i-1] < a[i+1]:\n            ans = max(ans, dp[i-1] + dp[i+1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [1 for _ in range(n)]\n    for i in range(1, n):\n        if a[i] > a[i-1]:\n            dp[i] = dp[i-1] + 1\n    ans = max(dp)\n    for i in range(1, n-1):\n        if a[i-1] < a[i+1]:\n            ans = max(ans, dp[i-1] + dp[i+1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [1 for _ in range(n)]\n    for i in range(n):\n        if a[i] > a[i-1]:\n            dp[i] = dp[i-1] + 1\n    ans = max(dp)\n    for i in range(n):\n        if a[i-1] < a[i+1]:\n            ans = max(ans, dp[i-1] + dp[i+1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nsys.setrecursionlimit(1000000)\n\ndef main():\n    n, m = map(int, input().split())\n    a = [int(input()) for _ in range(n)]\n    a.sort()\n    total = sum(a)\n\n    def check(x):\n        ret = 0\n        for i in range(n):\n            if a[i] > x:\n                ret += a[i] - x\n        return ret >= m\n\n    def meguru_bisect(ng, ok):\n        while abs(ok - ng) > 1:\n            mid = (ok + ng) // 2\n            if check(mid):\n                ok = mid\n            else:\n                ng = mid\n        return ok\n\n    print(meguru_bisect(0, total))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [0 for _ in range(n)]\n    dp[0] = 1\n    for i in range(1, n):\n        if a[i] > a[i - 1]:\n            dp[i] = dp[i - 1] + 1\n        else:\n            dp[i] = 1\n    ans = max(dp)\n    for i in range(1, n):\n        if a[i - 1] < a[i + 1]:\n            ans = max(ans, dp[i - 1] + dp[i + 1])\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "print(\"hello\")\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [0 for _ in range(n)]\n    dp[0] = 1\n    for i in range(1, n):\n        if a[i] > a[i - 1]:\n            dp[i] = dp[i-1] + 1\n        else:\n            dp[i] = 1\n    ans = max(dp)\n    for i in range(1, n):\n        if a[i - 1] < a[i + 1]:\n            ans = max(ans, dp[i-1] + dp[i+1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]