["\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())  # number of segments.\n    road = []  # list of segments\n\n    for i in range(n):\n        t, d = map(int, sys.stdin.readline().strip().split())\n        road.append((t, d))\n\n    max_speed = 0\n    for i in range(1, n):\n        max_speed = max(max_speed, (road[i][1] - road[i - 1][1]) / (road[i][0] - road[i - 1][0]))\n\n    print(int(max_speed))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    max_speed = 0\n    prev_time = 0\n    prev_dist = 0\n    for i in range(n):\n        time, dist = map(int, sys.stdin.readline().strip().split())\n        speed = (dist - prev_dist) / (time - prev_time)\n        if speed > max_speed:\n            max_speed = speed\n        prev_time, prev_dist = time, dist\n    print(int(max_speed))\n    \nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    max_speed = 0\n    prev_time = 0\n    prev_dist = 0\n    for i in range(n):\n        time, dist = map(int, sys.stdin.readline().strip().split())\n        speed = (dist - prev_dist) / (time - prev_time)\n        if speed > max_speed:\n            max_speed = speed\n        prev_time, prev_dist = time, dist\n    print(int(max_speed))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input()) # number of data points\n    prev_t = 0\n    prev_s = 0\n    max_a = 0\n    for i in range(n):\n        t, s = [int(x) for x in input().split()]\n        a = (s - prev_s) / (t - prev_t) # calculate acceleration\n        if a > max_a:\n            max_a = a\n        prev_t = t\n        prev_s = s\n    print(int(max_a)) # print highest acceleration\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = []\n    distances = []\n    for i in range(n):\n        [t, d] = [float(x) for x in sys.stdin.readline().split()]\n        times.append(t)\n        distances.append(d)\n    speeds = []\n    for i in range(n-1):\n        speeds.append((distances[i+1] - distances[i]) / (times[i+1] - times[i]))\n    print(int(max(speeds)))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip()\n    max_speed = 0\n    prev_time = 0\n    prev_dist = 0\n    for i in range(n):\n        time, distance = map(int, sys.stdin.readline().strip().split()\n        speed = (distance - prev_dist) / (time - prev_time)\n        if speed > max_speed:\n            max_speed = speed\n        prev_time, prev_dist = time, distance\n    print(int(max_speed))\n    \nif __name__ == \"__main__\":\n    main()\n", "\n#\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())  # number of segments\n    road = []  # list of segments\n\n    for i in range(n):\n        t, d = map(int, sys.stdin.readline().strip().split())\n        road.append((t, d))\n\n    max_speed = 0\n    for i in range(1, n):\n        max_speed = max(max_speed, (road[i][1] - road[i - 1][1]) / (road[i][0] - road[i - 1][0]))\n\n    print(int(max_speed))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    print(a[-1] - a[0]) \n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    max_speed = 0\n    prev_time, prev_dist = 0, 0\n    for i in range(n):\n        time, dist = map(int, sys.stdin.readline().strip().split())\n        speed = (dist - prev_dist) / (time - prev_time)\n        if speed > max_speed:\n            max_speed = speed\n        prev_time, prev_dist = time, dist\n    print(int(max_speed))\n    \nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    max_speed = 0\n    prev_time = 0\n    prev_dist = 0\n    for i in range(n):\n        time, dist = map(int, sys.stdin.readline().strip().split())\n        speed = (dist - prev_dist) / (time - prev_time)\n        if speed > max_speed:\n            max_speed = speed\n        prev_time, prev_dist = time, dist\n    print(int(max_speed))\n    \nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Fri Mar  2 15:55:53 2018\n@author: jose\n\"\"\"\nfrom __future__ import division\nfrom os import listdir\nfrom os.path import isfile, join\nfrom matplotlib import pyplot as plt\nfrom matplotlib.backends.backend_pdf import PdfPages\nimport pandas as pd\nfrom scipy import stats\nfrom scipy.stats import norm, ks_2samp\nfrom scipy.optimize import curve_fit\nfrom scipy.interpolate import UnivariateSpline\nfrom numpy import linspace\nfrom numpy import log, log10\nfrom numpy import mean, median, std\nfrom numpy import array\nfrom numpy import percentile\nimport numpy as np\nfrom numpy import sqrt\nfrom numpy import exp\nfrom math import pi\nimport math\nimport matplotlib.mlab as mlab\nfrom scipy.stats import chisquare\nfrom scipy.stats import chi2\nimport random\nimport sys\nimport os\nfrom scipy.stats import ks_2samp\nfrom scipy.stats import f_oneway\nfrom scipy.stats import ttest_ind\nfrom scipy.stats import ttest_1samp\nfrom scipy.stats import kruskal\nfrom scipy.stats import mannwhitneyu\nfrom scipy.stats import wilcoxon\nfrom scipy.stats import ranksums\nfrom scipy.stats import friedmanchisquare\nfrom scipy.stats import pearsonr\nfrom scipy.stats import spearmanr\nfrom scipy.stats import pointbiserialr\nfrom scipy.stats import chi2_contingency\nimport seaborn as sns\nimport statsmodels.api as sm\nfrom statsmodels.formula.api import ols\nfrom statsmodels.stats.multicomp import pairwise_tukeyhsd\nfrom statsmodels.stats.multicomp import MultiComparison\nimport statsmodels.stats.api as sms\nimport statsmodels.stats.power as ssp\nimport statsmodels.sandbox.stats.runs as ssr\nimport statsmodels.graphics.boxplots as bp\nfrom statsmodels.graphics.factorplots import interaction_plot\nfrom statsmodels.graphics.mosaicplot import mosaic\nimport statsmodels.api as sm\nfrom statsmodels.formula.api import ols\nfrom statsmodels.stats.anova import anova_lm\nfrom statsmodels.stats.multicomp import pairwise_tukeyhsd\nfrom statsmodels.stats.multicomp import MultiComparison\nimport statsmodels.stats.api as sms\nimport statsmodels.stats.power as ssp\nimport statsmodels.sandbox.stats.runs as ssr\nimport statsmodels.graphics.boxplots as bp\nfrom statsmodels.graphics.factorplots import interaction_plot\nfrom statsmodels.graphics.mosaicplot import mosaic\nimport statsmodels.formula.api as smf\nimport statsmodels.api as sm\nfrom statsmodels.formula.api import ols\nfrom statsmodels.stats.anova import anova_lm\nfrom statsmodels.stats.multicomp import pairwise_tukeyhsd\nfrom statsmodels.stats.multicomp import MultiComparison\nimport statsmodels.stats.api as sms\nimport statsmodels.stats.power as ssp\nimport statsmodels.sandbox.stats.runs as ssr\nimport statsmodels.graphics.boxplots as bp\nfrom statsmodels.graphics.factorplots import interaction_plot\nfrom statsmodels.graphics.mosaicplot import mosaic\nimport statsmodels.formula.api as smf\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas as pd\nimport numpy as np\nimport sys\nimport os\ndef main():\n    n = int(sys.stdin.readline())\n    times = []\n    distances = []\n    for i in range(n):\n        [t, d] = [int(x) for x in sys.stdin.readline().split()]\n        times.append(t)\n        distances.append(d)\n    #print(times)\n    #print(distances)\n    speeds = [0 for x in range(n)]\n    for i in range(n-1):\n        speeds[i] = (distances[i+1] - distances[i]) / (times[i+1] - times[i])\n    #print(speeds)\n    print(int(max(speeds))) \nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = []\n    distances = []\n    for i in range(n):\n        [t, d] = [int(x) for x in sys.stdin.readline().split()]\n        times.append(t)\n        distances.append(d)\n    speeds = [0 for x in range(n)]\n    for i in range(n-1):\n        speeds[i] = (distances[i+1] - distances[i]) / (times[i+1] - times[i])\n    print(int(max(speeds)))\n\nif __name__ == '__main__':\n    main()\n", "\n# test\n\ndef main():\n    n = int(input())\n    times = []\n    dists = []\n    for i in range(n):\n        line = input().split()\n        times.append(int(line[0]))\n        dists.append(int(line[1]))\n\n    max_speed = 0\n    for i in range(1, n):\n        speed = (dists[i] - dists[i - 1]) / (times[i] - times[i - 1])\n        if speed > max_speed:\n            max_speed = speed\n\n    print(max_speed)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [0] * n\n    distances = [0] * n\n    for i in range(n):\n        times[i], distances[i] = [int(x) for x in sys.stdin.readline().split()]\n\n    max_speed = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            time_diff = times[j] - times[i]\n            dist_diff = distances[j] - distances[i]\n            speed = dist_diff / float(time_diff)\n            if speed > max_speed:\n                max_speed = speed\n\n    print(max_speed)\n\n\nif __name__ == '__main__':\n    main()\n", "\nfrom sys import stdin\n\ndef main():\n    pass\n\nmain()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [0] * n\n    distances = [0] * n\n    for i in range(n):\n        times[i], distances[i] = [int(x) for x in sys.stdin.readline().split()]\n\n    max_speed = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            time_diff = times[j] - times[i]\n            dist_diff = distances[j] - distances[i]\n            speed = dist_diff / float(time_diff)\n            if speed > max_speed:\n                max_speed = speed\n\n    print(max_speed)\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline().strip())\n    times = []\n    distances = []\n    for i in range(n):\n        t, d = map(int, stdin.readline().split())\n        times.append(t)\n        distances.append(d)\n    max_speed = 0\n    for i in range(n-1):\n        speed = (distances[i+1]-distances[i])/(times[i+1]-times[i])\n        if speed > max_speed:\n            max_speed = speed\n    print(max_speed)\n\nmain()\n", "\nimport sys\n\ndef main():\n    print('hello')\n\n\nif __name__ == '__main__':\n    main()\n", "\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline().strip())\n    times = []\n    distances = []\n    for i in range(n):\n        t, d = map(int, stdin.readline().split())\n        times.append(t)\n        distances.append(d)\n    max_speed = 0\n    for i in range(n-1):\n        speed = (distances[i+1]-distances[i])/(times[i+1]-times[i])\n        if speed > max_speed:\n            max_speed = speed\n    print(max_speed)\n\nmain()\n", "#!/usr/bin/env python3\n\ndef main():\n    \"\"\"\n    input:\n        n: number of photos\n        t: time in hours\n        d: distance in miles\n    output:\n        max speed in mph\n    \"\"\"\n    n = int(input())\n    maxspeed = 0\n    for _ in range(n):\n        t, d = map(int, input().split())\n        speed = d / t\n        if speed > maxspeed:\n            maxspeed = speed\n    print(int(maxspeed))\n\nif __name__ == \"__main__\":\n    main()\n", "\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline().strip())\n    times = []\n    distances = []\n    for i in range(n):\n        t, d = map(float, stdin.readline().split())\n        times.append(t)\n        distances.append(d)\n    max_speed = 0\n    for i in range(n-1):\n        speed = (distances[i+1]-distances[i])/(times[i+1]-times[i])*3.6\n        if speed > max_speed:\n            max_speed = speed\n    print(max_speed)\n\nmain()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    d = {}\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if d.get(a[i] + a[j]):\n                d[a[i] + a[j]] += 1\n            else:\n                d[a[i] + a[j]] = 1\n\n    print(max(d.values()))\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    prev_t = 0\n    prev_d = 0\n    max_v = 0\n    for i in range(n):\n        t, d = [int(x) for x in input().split()] # t: time, d: distance\n        v = (d - prev_d) / (t - prev_t)\n        if v > max_v:\n            max_v = v\n        prev_t = t\n        prev_d = d\n    print(int(max_v))\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    speeds = []\n\n    for i in range(n):\n        t, d = map(int, sys.stdin.readline().strip().split())\n        road.append((t, d))\n\n    max_speed = 0\n    for i in range(1, n):\n        max_speed = max(max_speed, (road[i][1] - road[i - 1][1]) / (road[i][0] - road[i - 1][0]))\n\n    print(int(max_speed))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    prev_time = 0\n    prev_dist = 0\n    max_speed = 0\n    for i in range(n):\n        time, dist = [int(x) for x in input().split()]\n        speed = (dist - prev_dist) / (time - prev_time)\n        if speed > max_speed:\n            max_speed = speed\n        prev_time = time\n        prev_dist = dist\n    print(max_speed)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    prev_t = 0\n    prev_s = 0\n    max_a = 0\n    for i in range(n):\n        t, s = [int(x) for x in input().split()]\n        a = (s - prev_s) / (t - prev_t)\n        if a > max_a:\n            max_a = a\n        prev_t = t\n        prev_s = s\n    print(int(max_a))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    times = []\n    dists = []\n    for i in range(n):\n        line = input().split()\n        times.append(int(line[0]))\n        dists.append(int(line[1]))\n\n    max_speed = 0\n    for i in range(1, n):\n        speed = (dists[i] - dists[i - 1]) / (times[i] - times[i - 1])\n        if speed > max_speed:\n            max_speed = speed\n\n    print(max_speed)\n\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    \"\"\"\n    input:\n        n: number of photographs\n        t: time in hours\n        d: distance in miles\n    output:\n        max speed in mph\n    \"\"\"\n    n = int(input())\n    speeds = []\n    for _ in range(n):\n        t, d = map(int, input().split())\n        speeds.append(d / t)\n    print(int(max(speeds)))\n\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = []\n    distances = []\n    for i in range(n):\n        times.append(int(sys.stdin.readline()))\n        distances.append(int(sys.stdin.readline()))\n\n    max_speed = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            time_diff = times[j] - times[i]\n            dist_diff = distances[j] - distances[i]\n            speed = dist_diff / float(time_diff)\n            if speed > max_speed:\n                max_speed = speed\n\n    print(max_speed)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    times = []\n    dists = []\n    for i in range(n):\n        line = input().split()\n        times.append(int(line[0]))\n        dists.append(int(line[1]))\n\n    max_speed = 0\n    for i in range(1, n):\n        speed = (dists[i] - dists[i - 1]) // (times[i] - times[i - 1])\n        if speed > max_speed:\n            max_speed = speed\n\n    print(max_speed)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    prev_t = 0\n    prev_d = 0\n    max_v = 0\n    for i in range(n):\n        t, d = [int(x) for x in input().split()]\n        v = (d - prev_d) / (t - prev_t)\n        if v > max_v:\n            max_v = v\n        prev_t = t\n        prev_d = d\n    print(max_v)\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    roads = []\n\n    for i in range(n):\n        t, d = map(int, sys.stdin.readline().strip().split())\n        roads.append((t, d))\n\n    max_speed = 0\n    for i in range(1, n):\n        max_speed = max(max_speed, (roads[i][1] - roads[i - 1][1]) / (roads[i][0] - roads[i - 1][0]))\n\n    print(int(max_speed) + 1)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    prev_time = 0\n    prev_dist = 0\n    max_speed = 0\n    for i in range(n):\n        time, dist = [int(x) for x in input().split()] # pylint: disable=C0301\n        speed = (dist - prev_dist) / (time - prev_time)\n        if speed > max_speed:\n            max_speed = speed\n        prev_time = time\n        prev_dist = dist\n    print(int(max_speed))\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    print(a[-1] - a[0])\n\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    road = [0] * n\n\n    for i in range(n):\n        t, d = map(int, sys.stdin.readline().strip().split())\n        road[i] = (t, d)\n\n    max_speed = 0\n    for i in range(1, n):\n        max_speed = max(max_speed, (road[i][1] - road[i - 1][1]) / (road[i][0] - road[i - 1][0]))\n\n    print(int(max_speed) + 1, end='')\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    max_speed = 0\n    prev_time = 0\n    prev_dist = 0\n    for i in range(n):\n        time, dist = map(int, sys.stdin.readline().strip().split())\n        speed = (dist - prev_dist) / (time - prev_time)\n        if speed > max_speed:\n            max_speed = speed\n        prev_time, prev_dist = time, dist\n    print(int(max_speed))\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [0] * n\n    distances = [0] * n\n    for i in range(n):\n        times[i], distances[i] = [int(x) for x in sys.stdin.readline().split()]\n\n    max_speed = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            time_diff = times[j] - times[i]\n            dist_diff = distances[j] - distances[i]\n            speed = float(dist_diff) / time_diff\n            if speed > max_speed:\n                max_speed = speed\n\n    print(max_speed)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    \"\"\"\n    input:\n        n: number of photographs\n        t: time in hours\n        d: distance in miles\n    output:\n        max speed in mph\n    \"\"\"\n    n = int(input())\n    speeds = []\n    for _ in range(n):\n        t, d = map(int, input().split())\n        speeds.append(d / t)\n    print(int(max(speeds))\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    road = []\n\n    for i in range(n):\n        t, d = map(int, sys.stdin.readline().strip().split())\n        road.append((t, d))\n\n    max_speed = 0\n    for i in range(1, n - 1):\n        max_speed = max(max_speed, (road[i][1] - road[i - 1][1]) / (road[i][0] - road[i - 1][0]))\n\n    print(int(max_speed))\n\nif __name__ == '__main__':\n    main()\n", "\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline().strip())\n    times = [0]\n    distances = [0]\n    for i in range(n):\n        t, d = map(int, stdin.readline().split())\n        times.append(t)\n        distances.append(d)\n    max_speed = 0\n    for i in range(n-1):\n        speed = (distances[i+1]-distances[i])/(times[i+1]-times[i])\n        if speed > max_speed:\n            max_speed = speed\n    print(max_speed)\n\nmain()\n", "\ndef main():\n    n = int(input())\n    times = []\n    dists = []\n    for i in range(n):\n        line = input().split()\n        times.append(int(line[0]))\n        dists.append(int(line[1]))\n\n    max_speed = 0\n    for i in range(1, n): \n        speed = (dists[i] - dists[i - 1]) // (times[i] - times[i - 1])\n        if speed > max_speed:\n            max_speed = speed\n\n    print(max_speed)\n\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\ndef main():\n    \"\"\"\n    input:\n        n: number of photos\n        t: time in hours\n        d: distance in miles\n    output:\n        max speed in mph\n    \"\"\"\n    n = int(raw_input())\n    speeds = []\n    for _ in range(n):\n        t, d = map(int, raw_input().split())\n        speeds.append(d / t)\n    print int(max(speeds))\n\nif __name__ == \"__main__\":\n    main()\n", "def main():\n    n = int(input())\n    prev_t = 0\n    prev_d = 0\n    max_v = 0\n    for i in range(n):\n        t, d = [int(x) for x in input().split()]\n        v = (d - prev_d) / (t - prev_t)\n        if v > max_v:\n            max_v = v\n        prev_t = t\n        prev_d = d\n    print(int(max_v))\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    prev_t = 0\n    prev_s = 0\n    max_a = 0\n    for i in range(n):\n        t, s = [int(x) for x in input().split()]\n        a = (s - prev_s) / (t - prev_t)\n        if a > max_a:\n            max_a = a\n        prev_t = t\n        prev_s = s\n    print(int(max_a))\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [0] * n\n    distances = [0] * n\n    for i in range(n):\n        times[i], distances[i] = [float(x) for x in sys.stdin.readline().split()] #read in the data\n\n    max_speed = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            time_diff = times[j] - times[i]\n            dist_diff = distances[j] - distances[i] #calculate the distance and time difference\n            speed = dist_diff / time_diff\n            if speed > max_speed:\n                max_speed = speed\n\n    print(max_speed)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [0] * n\n    distances = [0] * n\n    for i in range(n):\n        times[i], distances[i] = [int(x) for x in sys.stdin.readline().split()]\n\n    max_speed = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            time_diff = times[j] - times[i]\n            dist_diff = distances[j] - distances[i]\n            speed = dist_diff / time_diff\n            if speed > max_speed:\n                max_speed = speed\n\n    print(max_speed)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    max_speed = 0\n    prev_time = 0\n    prev_dist = 0\n    for i in range(n):\n        time, distance = map(int, sys.stdin.readline().strip().split())\n        speed = (distance - prev_dist) / float(time - prev_time)\n        if speed > max_speed:\n            max_speed = speed\n        prev_time, prev_dist = time, distance\n    print(int(max_speed))\n    \nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = []\n    distances = []\n    for i in range(n):\n        [t, d] = [int(x) for x in sys.stdin.readline().split()]\n        times.append(t)\n        distances.append(d)\n    speeds = [0] * n\n    for i in range(n-1):\n        speeds[i] = (distances[i+1] - distances[i]) / float(times[i+1] - times[i])\n    print(int(max(speeds)))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    road = []\n\n    for i in range(n):\n        t, d = map(int, sys.stdin.readline().strip().split())\n        road.append((t, d))\n\n    max_speed = 0\n    for i in range(1, n):\n        max_speed = max(max_speed, (road[i][1] - road[i - 1][1]) / (road[i][0] - road[i - 1][0]))\n\n    print(int(max_speed + 1))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    max_speed = 0\n    prev_time = 0\n    prev_dist = 0\n    for i in range(n):\n        time, distance = map(int, sys.stdin.readline().strip().split())\n        speed = (distance - prev_dist) / (time - prev_time)\n        if speed > max_speed:\n            max_speed = speed\n        prev_time, prev_dist = time, distance\n    print(int(max_speed))\n    \nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\ndef main():\n    \"\"\"\n    input:\n        n: number of photos\n        t: time in hours\n        d: distance in miles\n    output:\n        max speed in mph\n    \"\"\"\n    n = int(input('Enter number of photos: '))\n    speeds = []\n    for _ in range(n):\n        t, d = map(int, input('Enter time and distance: ').split())\n        speeds.append(d / t)\n    print(int(max(speeds)))\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [0] * n\n    distances = [0] * n\n    for i in range(n):\n        times[i], distances[i] = [int(x) for x in sys.stdin.readline().split()]\n\n    max_speed = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            time_diff = times[j] - times[i]\n            dist_diff = distances[j] - distances[i]\n            speed = float(dist_diff) / time_diff\n            if speed > max_speed:\n                max_speed = speed\n\n    print(max_speed)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [0] * n\n    distances = [0] * n\n    for i in range(n):\n        times[i], distances[i] = [int(x) for x in sys.stdin.readline().split()] #read in the data\n\n    max_speed = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            time_diff = times[j] - times[i]\n            dist_diff = distances[j] - distances[i] #calculate the distance and time difference\n            speed = float(dist_diff) / float(time_diff)\n            if speed > max_speed:\n                max_speed = speed\n\n    print(max_speed)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    \"\"\"\n    input:\n        n: number of photographs\n        t: time in hours\n        d: distance in miles\n    output:\n        max speed in mph\n    \"\"\"\n    n = int(input())\n    speeds = []\n    for _ in range(n):\n        t, d = map(int, input().split())\n        speeds.append(d / t)\n    print(int(max(speeds)), end=\"\")\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    road = []\n\n    for i in range(n):\n        t, d = map(int, sys.stdin.readline().strip().split())\n        road.append((t, d))\n\n    max_speed = (road[1][1] - road[0][1]) / (road[1][0] - road[0][0])\n\n\n    for i in range(1, n):\n        max_speed = max(max_speed, (road[i][1] - road[i - 1][1]) / (road[i][0] - road[i - 1][0]))\n\n    print(int(max_speed))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = []\n    distances = []\n    for i in range(n):\n        (t, d) = [int(x) for x in sys.stdin.readline().split()]\n        times.append(t)\n        distances.append(d)\n    #print(times)\n    #print(distances)\n    speeds = [0 for x in range(n)]\n    for i in range(n-1):\n        speeds[i] = (distances[i+1] - distances[i]) / (times[i+1] - times[i])\n    #print(speeds)\n    print(int(max(speeds))) \n\nif __name__ == '__main__':\n    main()\n", "\n\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline().strip())\n    times = []\n    distances = []\n    for i in range(n):\n        t, d = map(int, stdin.readline().split())\n        times.append(t)\n        distances.append(d)\n    max_speed = 0\n    for i in range(n - 1):\n        speed = (distances[i + 1] - distances[i]) / (times[i + 1] - times[i])\n        if speed > max_speed:\n            max_speed = speed\n    print(max_speed)\n\n\nmain()\n", "\n#\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline().strip())\n    times = []\n    distances = []\n    for i in range(n):\n        t, d = map(int, stdin.readline().split())\n        times.append(t)\n        distances.append(d)\n    max_speed = 0\n    for i in range(n-1):\n        speed = (distances[i+1]-distances[i])/(times[i+1]-times[i])\n        if speed > max_speed:\n            max_speed = speed\n    print(round(max_speed, 2))\n\nmain()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [0] * n\n    distances = [0] * n\n    for i in range(n):\n        times[i], distances[i] = [int(x) for x in sys.stdin.readline().split()] #read in the data\n\n    max_speed = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            time_diff = float(times[j] - times[i])\n            dist_diff = float(distances[j] - distances[i]) #calculate the distance and time difference\n            speed = float(dist_diff / time_diff)\n            if speed > max_speed:\n                max_speed = speed\n\n    print(max_speed)\n\nif __name__ == '__main__':\n    main()\n", "from sys import stdin\n\ndef main():\n    n = int(stdin.readline().strip())\n    times = []\n    distances = []\n    for i in range(n):\n        t, d = map(int, stdin.readline().split())\n        times.append(t)\n        distances.append(d)\n    max_speed = 0\n    for i in range(n-1):\n        speed = (distances[i+1]-distances[i])/(times[i+1]-times[i])\n        if speed > max_speed:\n            max_speed = speed\n    print(max_speed)\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = []\n    distances = []\n    for i in range(n):\n        [t, d] = [int(x) for x in sys.stdin.readline().split()]\n        times.append(t)\n        distances.append(d)\n    print(times)\n    print(distances)\n    speeds = [0 for x in range(n)]\n    for i in range(n-1):\n        speeds[i] = (distances[i+1] - distances[i]) / (times[i+1] - times[i])\n    print(speeds)\n    print(int(max(speeds))) \n\nif __name__ == '__main__':\n    main()\n"]