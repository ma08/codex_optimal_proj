["\n# Get input\nN = int(input())\nT_list = list(map(int, input().split()))\nM = int(input())\nPX_list = [list(map(int, input().split())) for _ in range(M)]\n\n# Solve\nfor i in range(M):\n    P, X = PX_list[i]\n    T_list[P-1] = X\n    print(sum(T_list))\n\n# Get input\nN = int(input())\nA_list = list(map(int, input().split()))\n\n# Solve\nA_list.sort()\nans = 0\nfor i in range(N):\n    ans += A_list[i] * (N-i)\nprint(ans)\n", "\nN, M, Q = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(Q)]\n\nfor i in range(N):\n    print('{}'.format(i))\n", "N = int(input())\nT = list(map(int, input().split()))\nM = int(input())\nPX = [list(map(int, input().split())) for _ in range(M)]\n\nfor i in range(M):\n    P, X = PX[i]\n    print(sum(T) - T[P-1] + X)\n", "# Get input\nN = int(input())\nT_list = list(map(int, input().split()))\nM = int(input())\nPX_list = [list(map(int, input().split())) for _ in range(M)]\n\n# Solve & Output\nfor i in range(M):\n    P, X = PX_list[i]\n    T_list[P - 1] = X\n    print(sum(T_list))\n", "# coding: utf-8\n\n# Get inputs\nN = int(input())\nT = list(map(int, input().split()))\nM = int(input())\nPX_list = [list(map(int, input().split())) for _ in range(M)]\n\n# Solve\nfor i in range(M):\n    P, X = PX_list[i]\n    T[P-1] = X\n    print(sum(T))\n", "\n# Get input\nN = int(input())\nT_list = list(map(int, input().split()))\nM = int(input())\nPX_list = [list(map(int, input().split())) for _ in range(M)]\n\n# Solve & Output\nfor i in range(M):\n    P, X = PX_list[i]\n    T_list[P - 1] = X\n    print(sum(T_list))\n", "# Get input\nN = int(input())\nT_list = list(map(int, input().split()))\nM = int(input())\nPX_list = [list(map(int, input().split())) for _ in range(M)]\n\n# Solve\nfor i in range(M):\n    P, X = PX_list[i]\n    T_list[P-1] = X\n    print(sum(T_list))\n", "# Get input\nN = int(input())\nT_list = list(map(int, input().split()))\nM = int(input())\nPX_list = [list(map(int, input().split())) for _ in range(M)]\n\n# Solve & Output\nfor i in range(M):\n    P, X = PX_list[i]\n    T_list[P-1] = X\n    print(sum(T_list))\n", "\nn = int(input())\nt = list(map(int, input().split()))\nm = int(input())\np_x = [list(map(int, input().split())) for _ in range(m)]\n\nfor i in range(m):\n    p, x = p_x[i]\n    print(sum(t) - t[p-1] + x)\n", "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nt = list(map(int, input().split()))\nm = int(input())\np_x = [list(map(int,input().split())) for _ in range(m)]\n\nfor i in range(m):\n    p, x = p_x[i]\n    print(sum(t) - t[p-1] + x)\n", "\nn = int(input())\nt = list(map(int, input().split()))\nm = int(input())\np_x = [list(map(int, input().split())) for _ in range(m)]\n\nfor i in range(m):\n    p, x = p_x[i]\n    print(sum(t) - t[p - 1] + x)\n", "N = int(input())\nA = list(map(int, input().split()))\nA_set = set(A)\nprint(len(A_set))\n", "N = int(input())\nT = list(map(int, input().split()))\nM = int(input())\nP_X = [list(map(int, input().split())) for _ in range(M)]\n\nfor i in range(M):\n    P, X = P_X[i]\n    print(sum(T) - T[P - 1] + X)\n", "\n# Get inputs\nN = int(input())\nT_list = list(map(int, input().split()))\nM = int(input())\nPX_list = [list(map(int, input().split())) for _ in range(M)]\n\n# Solve\nfor i in range(M):\n    P, X = PX_list[i]\n    T_list[P-1] = X\n    print(sum(T_list))\n"]