["\n\ndef merge_sort(arr, inplace=False):\n    if not inplace:\n        arr = arr.copy()\n    if len(arr) > 1:\n        mid = len(arr)//2\n        left = arr[:mid]\n        right = arr[mid:]\n\n        merge_sort(left, True)\n        merge_sort(right, True)\n\n        i = 0\n        j = 0\n        k = 0\n\n        while i < len(left) and j < len(right):\n            if left[i] < right[j]:\n                arr[k] = left[i]\n                i += 1\n            else:\n                arr[k] = right[j]\n                j += 1\n            k += 1\n\n        while i < len(left):\n            arr[k] = left[i]\n            i += 1\n            k += 1\n\n        while j < len(right):\n            arr[k] = right[j]\n            j += 1\n            k += 1\n\n\ndef split_arr(arr):\n    if len(arr) < 2:\n        return arr\n\n    mid = len(arr)//2\n    left = arr[:mid]\n    right = arr[mid:]\n\n    left = split_arr(left)\n    right = split_arr(right)\n\n    inc = []\n    dec = []\n\n    while left and right:\n        if left[-1] < right[-1]:\n            inc.append(left.pop())\n        else:\n            dec.append(right.pop())\n\n    inc.extend(left)\n    dec.extend(right)\n\n    return inc, dec\n\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n\n    inc, dec = split_arr(merge_sort(arr))\n\n    if len(inc) + len(dec) != n:\n        print('NO')\n    else:\n        print('YES')\n        print(len(inc))\n        print(*inc)\n        print(len(dec))\n        print(*dec)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n\ndef merge_sort(arr):\n    if len(arr) > 1:\n        mid = len(arr)//2\n        left = arr[:mid]\n        right = arr[mid:]\n\n        merge_sort(left)\n        merge_sort(right)\n\n        i = 0\n        j = 0\n        k = 0\n\n        while i < len(left) and j < len(right):\n            if left[i] < right[j]:\n                arr[k] = left[i]\n                i += 1\n            else:\n                arr[k] = right[j]\n                j += 1\n            k += 1\n\n        while i < len(left):\n            arr[k] = left[i]\n            i += 1\n            k += 1\n\n        while j < len(right):\n            arr[k] = right[j]\n            j += 1\n            k += 1\n\n\ndef split_array(arr):\n    if len(arr) < 2:\n        return arr\n\n    mid = len(arr)//2\n    left = arr[:mid]\n    right = arr[mid:]\n\n    left = split_array(left)\n    right = split_array(right)\n\n    inc = []\n    dec = []\n\n    while left and right:\n        if left[-1] < right[-1]:\n            inc.append(left.pop())\n        else:\n            dec.append(right.pop())\n\n    inc.extend(left)\n    dec.extend(right)\n\n    return inc, dec\n\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n\n    merge_sort(arr)\n    inc, dec = split_array(arr)\n\n    if len(inc) + len(dec) != n:\n        print('NO')\n    else:\n        print('YES')\n        print(len(inc))\n        print(*inc)\n        print(len(dec))\n        print(*dec)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef get_input():\n    n = int(input())\n    a = list(map(int, input().split()))\n    return n, a\n\n\ndef check_increase(a):\n    if len(a) == 0:\n        return True\n    for i in range(1, len(a)):\n        if a[i] <= a[i - 1]:\n            return False\n    return True\n\n\ndef check_decrease(a):\n    if len(a) == 0:\n        return True\n    for i in range(1, len(a)):\n        if a[i] >= a[i - 1]:\n            return False\n    return True\n\n\ndef check_input(n, a):\n    if n == 0:\n        return True\n    for i in range(1, n):\n        if a[i] != a[i - 1]:\n            return True\n    return False\n\n\ndef split(n, a):\n    inc = []\n    dec = []\n    inc_len = 0\n    dec_len = 0\n    inc_num = 0\n    dec_num = 0\n    for i in range(n):\n        if i % 2 == 0:\n            inc.append(a[i])\n            inc_num = a[i]\n            inc_len += 1\n        else:\n            dec.append(a[i])\n            dec_num = a[i]\n            dec_len += 1\n    return inc_len, inc, inc_num, dec_len, dec, dec_num\n\n\ndef main():\n    n, a = get_input()\n    if check_input(n, a):\n        inc_len, inc, inc_num, dec_len, dec, dec_num = split(n, a)\n        if check_increase(inc) and check_decrease(dec) and inc_num < dec_num:\n            print(\"YES\")\n            print(inc_len)\n            print(*inc)\n            print(dec_len)\n            print(*dec)\n        else:\n            print(\"NO\")\n    else:\n        print(\"NO\")\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef merge_sort(arr):\n    if len(arr) > 1:\n        mid = len(arr)//2\n        left = arr[:mid]\n        right = arr[mid:]\n\n        merge_sort(left)\n        merge_sort(right)\n\n        i = 0\n        j = 0\n        k = 0\n\n        while i < len(left) and j < len(right):\n            if left[i] < right[j]:\n                arr[k] = left[i]\n                i += 1\n            else:\n                arr[k] = right[j]\n                j += 1\n            k += 1\n\n        while i < len(left):\n            arr[k] = left[i]\n            i += 1\n            k += 1\n\n        while j < len(right):\n            arr[k] = right[j]\n            j += 1\n            k += 1\n\n\ndef split_array(arr):\n    if len(arr) < 2:\n        return arr\n\n    mid = len(arr)//2\n    left = arr[:mid]\n    right = arr[mid:]\n\n    left = split_array(left)\n    right = split_array(right)\n\n    inc = []\n    dec = []\n\n    while left and right:\n        if left[-1] < right[-1]:\n            inc.append(left.pop())\n        else:\n            dec.append(right.pop())\n\n    inc.extend(left)\n    dec.extend(right)\n\n    return inc, dec\n\n\ndef main():\n    # n = int(input())\n    # arr = list(map(int, input().split()))\n\n    # merge_sort(arr)\n    # inc, dec = split_array(arr)\n\n    # if len(inc) + len(dec) != n:\n    #     print('NO')\n    # else:\n    #     print('YES')\n    #     print(len(inc))\n    #     print(*inc)\n    #     print(len(dec))\n    #     print(*dec)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef merge_sort(arr, inplace=False):\n    if not inplace:\n        arr = arr.copy()\n    if len(arr) > 1:\n        mid = len(arr) // 2\n        left = arr[:mid]\n        right = arr[mid:]\n\n        merge_sort(left, True)\n        merge_sort(right, True)\n\n        i = 0\n        j = 0\n        k = 0\n\n        while i < len(left) and j < len(right):\n            if left[i] < right[j]:\n                arr[k] = left[i]\n                i += 1\n            else:\n                arr[k] = right[j]\n                j += 1\n            k += 1\n\n        while i < len(left):\n            arr[k] = left[i]\n            i += 1\n            k += 1\n\n        while j < len(right):\n            arr[k] = right[j]\n            j += 1\n            k += 1\n\n\ndef split_arr(arr):\n    if len(arr) < 2:\n        return arr\n\n    mid = len(arr) // 2\n    left = arr[:mid]\n    right = arr[mid:]\n\n    left = split_arr(left)\n    right = split_arr(right)\n\n    inc = []\n    dec = []\n\n    while left and right:\n        if left[-1] < right[-1]:\n            inc.append(left.pop())\n        else:\n            dec.append(right.pop())\n\n    inc.extend(left)\n    dec.extend(right)\n\n    return inc, dec\n\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n\n    merge_sort(arr)\n    inc, dec = split_arr(arr)\n\n    if len(inc) + len(dec) != n:\n        print('NO')\n    else:\n        print('YES')\n        print(len(inc))\n        print(*inc)\n        print(len(dec))\n        print(*dec)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef merge_sort(arr, inplace=False):\n    if not inplace:\n        arr = arr.copy()\n    if len(arr) > 1:\n        mid = len(arr)//2\n        left = arr[:mid]\n        right = arr[mid:]\n\n        merge_sort(left, True)\n        merge_sort(right, True)\n\n        i = 0\n        j = 0\n        k = 0\n\n        while i < len(left) and j < len(right):\n            if left[i] < right[j]:\n                arr[k] = left[i]\n                i += 1\n            else:\n                arr[k] = right[j]\n                j += 1\n            k += 1\n\n        while i < len(left):\n            arr[k] = left[i]\n            i += 1\n            k += 1\n\n        while j < len(right):\n            arr[k] = right[j]\n            j += 1\n            k += 1\n\n\ndef split_arr(arr):\n    if len(arr) < 2:\n        return arr\n\n    mid = len(arr)//2\n    left = arr[:mid]\n    right = arr[mid:]\n\n    left = split_arr(left)\n    right = split_arr(right)\n\n    inc = []\n    dec = []\n\n    while left and right:\n        if left[-1] < right[-1]:\n            inc.append(left.pop())\n        else:\n            dec.append(right.pop())\n\n    inc.extend(left)\n    dec.extend(right)\n\n    return inc, dec\n\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n\n    merge_sort(arr)\n    inc, dec = split_arr(arr)\n\n    if len(inc) + len(dec) != n:\n        print('NO')\n    else:\n        print('YES')\n        print(len(inc))\n        print(*inc)\n        print(len(dec))\n        print(*dec)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef merge_sort(arr):\n    if len(arr) > 1:\n        mid = len(arr)//2\n        left = arr[:mid]\n        right = arr[mid:]\n\n        merge_sort(left)\n        merge_sort(right)\n\n        i = 0\n        j = 0\n        k = 0\n\n        while i < len(left) and j < len(right):\n            if left[i] < right[j]:\n                arr[k] = left[i]\n                i += 1\n            else:\n                arr[k] = right[j]\n                j += 1\n            k += 1\n\n        while i < len(left):\n            arr[k] = left[i]\n            i += 1\n            k += 1\n\n        while j < len(right):\n            arr[k] = right[j]\n            j += 1\n            k += 1\n\n\ndef split_array(arr):\n    if len(arr) < 2:\n        return arr\n\n    mid = len(arr)//2\n    left = arr[:mid]\n    right = arr[mid:]\n\n    left = split_array(left)\n    right = split_array(right)\n\n    inc, dec = [], []\n\n    while left and right:\n        if left[-1] < right[-1]:\n            inc.append(left.pop())\n        else:\n            dec.append(right.pop())\n\n    inc += left\n    dec += right\n\n    return inc, dec\n\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n\n    merge_sort(arr)\n    inc, dec = split_array(arr)\n\n    if len(inc) + len(dec) != n:\n        print('NO')\n    else:\n        print('YES')\n        print(len(inc))\n        print(*inc)\n        print(len(dec))\n        print(*dec)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef get_input():\n    n = int(input())\n    a = list(map(int, input().split()))\n    return n, a\n\n\ndef check_increase(a):\n    if not a:\n        return True\n    for i in range(1, len(a)):\n        if a[i] <= a[i - 1]:\n            return False\n    return True\n\n\ndef check_decrease(a):\n    if not a:\n        return True\n    for i in range(1, len(a)):\n        if a[i] >= a[i - 1]:\n            return False\n    return True\n\n\ndef check_input(n, a):\n    if n == 0:\n        return True\n    for i in range(1, n):\n        if a[i] != a[i - 1]:\n            return True\n    return False\n\n\ndef split(n, a):\n    inc = []\n    dec = []\n    inc_len = 0\n    dec_len = 0\n    for i in range(n):\n        if i % 2 == 0:\n            inc.append(a[i])\n            inc_len += 1\n        else:\n            dec.append(a[i])\n            dec_len += 1\n    return inc_len, inc, dec_len, dec\n\n\ndef main():\n    n, a = get_input()\n    if check_input(n, a):\n        inc_len, inc, dec_len, dec = split(n, a)\n        if check_increase(inc) and check_decrease(dec):\n            print(\"YES\")\n            print(inc_len)\n            print(*inc)\n            print(dec_len)\n            print(*dec)\n        else:\n            print(\"NO\")\n    else:\n        print(\"NO\")\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef get_input():\n    n = int(input())\n    a = list(map(int, input().split()))\n    return n, a\n\n\ndef check_increase(a):\n    if len(a) == 0:\n        return True\n    for i in range(1, len(a)):\n        if a[i] <= a[i - 1]:\n            return False\n    return True\n\n\ndef check_decrease(a):\n    if len(a) == 0:\n        return True\n    for i in range(1, len(a)):\n        if a[i] >= a[i - 1]:\n            return False\n    return True\n\n\ndef check_input(n, a):\n    if n == 0:\n        return True\n    for i in range(1, n):\n        if a[i] != a[i - 1]:\n            return True\n    return False\n\n\ndef split(n, a):\n    inc = []\n    dec = []\n    inc_len = 0\n    dec_len = 0\n    for i in range(n - 1):\n        if i % 2 == 0:\n            inc.append(a[i])\n            inc_len += 1\n        else:\n            dec.append(a[i])\n            dec_len += 1\n    if n % 2 == 1:\n        inc.append(a[n - 1])\n        inc_len += 1\n    return inc_len, inc, dec_len, dec\n\n\ndef main():\n    n, a = get_input()\n    if check_input(n, a):\n        inc_len, inc, dec_len, dec = split(n, a)\n        if check_increase(inc) and check_decrease(dec):\n            print(\"YES\")\n            print(inc_len)\n            print(*inc)\n            print(dec_len)\n            print(*dec)\n        else:\n            print(\"NO\")\n    else:\n        print(\"NO\")\n\n\nif __name__ == '__main__':\n    main()\n"]