2022-04-12 16:50:04.441245 num operations 2
2022-04-12 16:50:04.441264 size on input set 1
2022-04-12 16:50:07.856366 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n    segs = []\n\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print max(b) - min(b)\n    print len(s)\n    for i in s:\n        print i+1,\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n    segs = []\n\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    # print n, m\n    # print a\n    # print segs\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        # print 'cur', cur\n        # print 's', s\n        # print 'b', b\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    # print max(b) - min(b)\n    # print len(s)\n    # for i in s:\n    #     print i+1,\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n#\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n    segs = []\n\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    # print n, m\n    # print a\n    # print segs\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        # print 'cur', cur\n        # print 's', s\n        # print 'b', b\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print max(b) - min(b)\n    print len(s)\n    for i in s:\n        print i+1,\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649782204,
  "object": "edit"
}
2022-04-12 16:50:07.856595 fix spelling mistakes 3 ['\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n    segs = []\n\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print max(b) - min(b)\n    print len(s)\n    for i in s:\n        print i+1,\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n    segs = []\n\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    # print n, m\n    # print a\n    # print segs\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        # print \'cur\', cur\n        # print \'s\', s\n        # print \'b\', b\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    # print max(b) - min(b)\n    # print len(s)\n    # for i in s:\n    #     print i+1,\n\nif __name__ == "__main__":\n    main()\n', '\n#\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n    segs = []\n\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    # print n, m\n    # print a\n    # print segs\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        # print \'cur\', cur\n        # print \'s\', s\n        # print \'b\', b\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print max(b) - min(b)\n    print len(s)\n    for i in s:\n        print i+1,\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 16:50:07.856637 size on output set 3
2022-04-12 16:50:07.856644 size on input set 3
2022-04-12 16:50:24.630997 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# \n# import sys\n\n# def main():\n#     n, m = map(int, sys.stdin.readline().split())\n#     a = map(int, sys.stdin.readline().split())\n#     segs = []\n\n#     for i in range(m):\n#         l, r = map(int, sys.stdin.readline().split())\n#         segs.append((l, r))\n\n#     segs.sort(key=lambda x: x[1])\n\n#     # print n, m\n#     # print a\n#     # print segs\n\n#     b = a[:]\n#     s = set()\n#     cur = 0\n#     while cur < m:\n#         # print 'cur', cur\n#         # print 's', s\n#         # print 'b', b\n#         if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n#             s.add(cur)\n#             for i in range(segs[cur][0], segs[cur][1]+1):\n#                 b[i-1] -= 1\n#         cur += 1\n\n#     print max(b) - min(b)\n#     print len(s)\n#     for i in s:\n#         print i+1,\n\n# if __name__ == \"__main__\":\n#     main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segs = []\n\n    for i in range(m):\n        l, r = list(map(int, sys.stdin.readline().split()))\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    #print n, m\n    #print a\n    #print segs\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        #print 'cur', cur\n        #print 's', s\n        #print 'b', b\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print max(b) - min(b)\n    print len(s)\n    for i in s:\n        print i+1,\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 2
    }
  ],
  "created": 1649782207,
  "object": "edit"
}
2022-04-12 16:50:24.631204 NO RESULT
2022-04-12 16:50:24.631211 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 2
}
2022-04-12 16:50:24.631248 fix syntax errors 2 ['\n# \n# import sys\n\n# def main():\n#     n, m = map(int, sys.stdin.readline().split())\n#     a = map(int, sys.stdin.readline().split())\n#     segs = []\n\n#     for i in range(m):\n#         l, r = map(int, sys.stdin.readline().split())\n#         segs.append((l, r))\n\n#     segs.sort(key=lambda x: x[1])\n\n#     # print n, m\n#     # print a\n#     # print segs\n\n#     b = a[:]\n#     s = set()\n#     cur = 0\n#     while cur < m:\n#         # print \'cur\', cur\n#         # print \'s\', s\n#         # print \'b\', b\n#         if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n#             s.add(cur)\n#             for i in range(segs[cur][0], segs[cur][1]+1):\n#                 b[i-1] -= 1\n#         cur += 1\n\n#     print max(b) - min(b)\n#     print len(s)\n#     for i in s:\n#         print i+1,\n\n# if __name__ == "__main__":\n#     main()\n', 'import sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segs = []\n\n    for i in range(m):\n        l, r = list(map(int, sys.stdin.readline().split()))\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    #print n, m\n    #print a\n    #print segs\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        #print \'cur\', cur\n        #print \'s\', s\n        #print \'b\', b\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print max(b) - min(b)\n    print len(s)\n    for i in s:\n        print i+1,\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 16:50:46.096582 fix syntax errors {
  "choices": [
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 0
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n    segs = []\n\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    # print n, m\n    # print a\n    # print segs\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        # print 'cur', cur\n        # print 's', s\n        # print 'b', b\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    # print max(b) - min(b)\n    # print len(s)\n    # for i in s:\n    #     print i+1,\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segs = []\n\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print(max(b) - min(b))\n    print(len(s))\n    for i in s:\n        print(i+1, end=' ')\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649782224,
  "object": "edit"
}
2022-04-12 16:50:46.096770 NO RESULT
2022-04-12 16:50:46.096777 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 0
}
2022-04-12 16:50:46.096813 fix syntax errors 2 ['\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n    segs = []\n\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    # print n, m\n    # print a\n    # print segs\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        # print \'cur\', cur\n        # print \'s\', s\n        # print \'b\', b\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    # print max(b) - min(b)\n    # print len(s)\n    # for i in s:\n    #     print i+1,\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segs = []\n\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print(max(b) - min(b))\n    print(len(s))\n    for i in s:\n        print(i+1, end=\' \')\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 16:50:50.023742 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n    segs = []\n\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        if len(s) == 0 or segs[cur][0] > segs[max(s)][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print max(b) - min(b)\n    print len(s)\n    for i in s:\n        print i+1,\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n    segs = []\n\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print(max(b) - min(b))\n    print(len(s))\n    for i in s:\n        print(i+1, end=\" \")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segs = []\n\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        if len(s) == 0 or segs[cur][0] > segs[max(s)][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print max(b) - min(b)\n    print len(s)\n    for i in s:\n        print i+1,\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649782246,
  "object": "edit"
}
2022-04-12 16:50:50.023943 fix syntax errors 3 ['\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n    segs = []\n\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        if len(s) == 0 or segs[cur][0] > segs[max(s)][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print max(b) - min(b)\n    print len(s)\n    for i in s:\n        print i+1,\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n    segs = []\n\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print(max(b) - min(b))\n    print(len(s))\n    for i in s:\n        print(i+1, end=" ")\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segs = []\n\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        if len(s) == 0 or segs[cur][0] > segs[max(s)][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print max(b) - min(b)\n    print len(s)\n    for i in s:\n        print i+1,\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 16:50:50.023985 size on output set 7
2022-04-12 16:50:50.024005 num operations 2
2022-04-12 16:50:50.024075 size on input set 1
2022-04-12 16:50:56.386406 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef solve(n, m, a, t):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    pass\n\nif __name__ == '__main__':\n    n, m = [int(i) for i in raw_input().split()]\n    a = [int(i) for i in raw_input().split()]\n    t = []\n    for i in range(m):\n        t.append(int(raw_input().split()[0]))\n        t.append(int(raw_input().split()[1]))\n    solve(n, m, a, t)\n"
    },
    {
      "index": 1,
      "text": "\n\ndef solve(numbers, commands):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    pass\n\nif __name__ == '__main__':\n    numbers_count, commands_count = [int(i) for i in raw_input().split()]\n    numbers = [int(i) for i in raw_input().split()]\n    commands = []\n    for i in range(commands_count):\n        commands.append([int(i) for i in raw_input().split()])\n    solve(numbers, commands)\n"
    },
    {
      "index": 2,
      "text": "\n\ndef solve(n, m, a, l, r): \n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    pass\n\nif __name__ == '__main__':\n    n, m = [int(i) for i in raw_input().split()]\n    a = [int(i) for i in raw_input().split()]\n    l = []\n    r = []\n    for i in range(m):\n        l.append(int(raw_input().split()[0]))\n        r.append(int(raw_input().split()[1]))\n    solve(n, m, a, l, r)\n"
    }
  ],
  "created": 1649782250,
  "object": "edit"
}
2022-04-12 16:50:56.386604 fix spelling mistakes 3 ['\n\ndef solve(n, m, a, t):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print "Hello world!"\n    pass\n\nif __name__ == \'__main__\':\n    n, m = [int(i) for i in raw_input().split()]\n    a = [int(i) for i in raw_input().split()]\n    t = []\n    for i in range(m):\n        t.append(int(raw_input().split()[0]))\n        t.append(int(raw_input().split()[1]))\n    solve(n, m, a, t)\n', '\n\ndef solve(numbers, commands):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print "Hello world!"\n    pass\n\nif __name__ == \'__main__\':\n    numbers_count, commands_count = [int(i) for i in raw_input().split()]\n    numbers = [int(i) for i in raw_input().split()]\n    commands = []\n    for i in range(commands_count):\n        commands.append([int(i) for i in raw_input().split()])\n    solve(numbers, commands)\n', '\n\ndef solve(n, m, a, l, r): \n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print "Hello world!"\n    pass\n\nif __name__ == \'__main__\':\n    n, m = [int(i) for i in raw_input().split()]\n    a = [int(i) for i in raw_input().split()]\n    l = []\n    r = []\n    for i in range(m):\n        l.append(int(raw_input().split()[0]))\n        r.append(int(raw_input().split()[1]))\n    solve(n, m, a, l, r)\n']
2022-04-12 16:50:56.386639 size on output set 3
2022-04-12 16:50:56.386645 size on input set 3
2022-04-12 16:51:02.749140 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef solve(n, m, a, t):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    pass\n\nif __name__ == '__main__':\n    n, m = [int(i) for i in raw_input().split()]\n    a = [int(i) for i in raw_input().split()]\n    t = []\n    for i in range(m):\n        t.append(int(raw_input().split()))\n    solve(n, m, a, t)\n"
    },
    {
      "index": 1,
      "text": "\n\ndef solve(n, m, a, t):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    pass\n\nif __name__ == '__main__':\n    n, m = [int(i) for i in raw_input().split()]\n    a = [int(i) for i in raw_input().split()]\n    t = [int(i) for i in raw_input().split()]\n    solve(n, m, a, t)\n"
    },
    {
      "index": 2,
      "text": "\n\ndef solve(n, m, a, t, p):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    pass\n\nif __name__ == '__main__':\n    n, m = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    t = [0] * m\n    for i in range(m):\n        t[i] = [int(j) for j in input().split()]\n    p = [int(i) for i in input().split()]\n    solve(n, m, a, t, p)\n"
    }
  ],
  "created": 1649782256,
  "object": "edit"
}
2022-04-12 16:51:02.749351 fix syntax errors 3 ['\n\ndef solve(n, m, a, t):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print "Hello world!"\n    pass\n\nif __name__ == \'__main__\':\n    n, m = [int(i) for i in raw_input().split()]\n    a = [int(i) for i in raw_input().split()]\n    t = []\n    for i in range(m):\n        t.append(int(raw_input().split()))\n    solve(n, m, a, t)\n', '\n\ndef solve(n, m, a, t):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print "Hello world!"\n    pass\n\nif __name__ == \'__main__\':\n    n, m = [int(i) for i in raw_input().split()]\n    a = [int(i) for i in raw_input().split()]\n    t = [int(i) for i in raw_input().split()]\n    solve(n, m, a, t)\n', '\n\ndef solve(n, m, a, t, p):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print "Hello world!"\n    pass\n\nif __name__ == \'__main__\':\n    n, m = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    t = [0] * m\n    for i in range(m):\n        t[i] = [int(j) for j in input().split()]\n    p = [int(i) for i in input().split()]\n    solve(n, m, a, t, p)\n']
2022-04-12 16:51:06.513609 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef solve(numbers, commands):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    pass\n\nif __name__ == '__main__':\n    numbers_count, commands_count = [int(i) for i in input().split()]\n    numbers = [int(i) for i in input().split()]\n    commands = []\n    for i in range(commands_count):\n        commands.append([int(i) for i in input().split()])\n    solve(numbers, commands)\n"
    },
    {
      "index": 1,
      "text": "\n\ndef solve(numbers, commands):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    pass\n\nif __name__ == '__main__':\n    numbers_count, commands_count = [int(i) for i in input().split()]\n    numbers = [int(i) for i in input().split()]\n    commands = []\n    for i in range(commands_count):\n        commands.append([int(i) for i in input().split()])\n    solve(numbers, commands)\n"
    },
    {
      "index": 2,
      "text": "\n\ndef solve(numbers, commands):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    pass\n\nif __name__ == '__main__':\n    numbers_count, commands_count = [int(i) for i in input().split()]\n    numbers = [int(i) for i in input().split()]\n    commands = []\n    for i in range(commands_count):\n        commands.append([int(i) for i in input().split()])\n    solve(numbers, commands)\n"
    }
  ],
  "created": 1649782262,
  "object": "edit"
}
2022-04-12 16:51:06.513786 fix syntax errors 3 ['\n\ndef solve(numbers, commands):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print "Hello world!"\n    pass\n\nif __name__ == \'__main__\':\n    numbers_count, commands_count = [int(i) for i in input().split()]\n    numbers = [int(i) for i in input().split()]\n    commands = []\n    for i in range(commands_count):\n        commands.append([int(i) for i in input().split()])\n    solve(numbers, commands)\n', '\n\ndef solve(numbers, commands):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print "Hello world!"\n    pass\n\nif __name__ == \'__main__\':\n    numbers_count, commands_count = [int(i) for i in input().split()]\n    numbers = [int(i) for i in input().split()]\n    commands = []\n    for i in range(commands_count):\n        commands.append([int(i) for i in input().split()])\n    solve(numbers, commands)\n', '\n\ndef solve(numbers, commands):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print "Hello world!"\n    pass\n\nif __name__ == \'__main__\':\n    numbers_count, commands_count = [int(i) for i in input().split()]\n    numbers = [int(i) for i in input().split()]\n    commands = []\n    for i in range(commands_count):\n        commands.append([int(i) for i in input().split()])\n    solve(numbers, commands)\n']
2022-04-12 16:51:11.867861 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef solve(n, m, a, l, r): \n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    pass\n\nif __name__ == '__main__':\n    n, m = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    l = []\n    r = []\n    for i in range(m):\n        l.append(int(input().split()[0]))\n        r.append(int(input().split()[1]))\n    solve(n, m, a, l, r)\n"
    },
    {
      "index": 1,
      "text": "\n\ndef solve(n, m, a, l, r):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    pass\n\nif __name__ == '__main__':\n    n, m = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    l = []\n    r = []\n    for i in range(m):\n        l.append(int(input().split()[0]))\n        r.append(int(input().split()[1]))\n    solve(n, m, a, l, r)\n"
    },
    {
      "index": 2,
      "text": "\n\ndef solve(n, m, a, l, r):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    pass\n\nif __name__ == '__main__':\n    n, m = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    l = []\n    r = []\n    for i in range(m):\n        l.append(int(input().split()[0]))\n        r.append(int(input().split()[1]))\n    solve(n, m, a, l, r)\n"
    }
  ],
  "created": 1649782266,
  "object": "edit"
}
2022-04-12 16:51:11.868048 fix syntax errors 3 ['\n\ndef solve(n, m, a, l, r): \n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print "Hello world!"\n    pass\n\nif __name__ == \'__main__\':\n    n, m = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    l = []\n    r = []\n    for i in range(m):\n        l.append(int(input().split()[0]))\n        r.append(int(input().split()[1]))\n    solve(n, m, a, l, r)\n', '\n\ndef solve(n, m, a, l, r):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print "Hello world!"\n    pass\n\nif __name__ == \'__main__\':\n    n, m = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    l = []\n    r = []\n    for i in range(m):\n        l.append(int(input().split()[0]))\n        r.append(int(input().split()[1]))\n    solve(n, m, a, l, r)\n', '\n\ndef solve(n, m, a, l, r):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print "Hello world!"\n    pass\n\nif __name__ == \'__main__\':\n    n, m = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    l = []\n    r = []\n    for i in range(m):\n        l.append(int(input().split()[0]))\n        r.append(int(input().split()[1]))\n    solve(n, m, a, l, r)\n']
2022-04-12 16:51:11.868083 size on output set 6
