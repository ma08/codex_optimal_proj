2022-04-12 18:48:35.835020 num operations 2
2022-04-12 18:48:35.835029 size on input set 1
2022-04-12 18:48:38.677673 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "#coding:utf-8\n\nimport math\n\ndef main():\n    S = input()\n    if S[0]==S[1] and S[1]==S[2]:\n        print('No')\n    else:\n        print('Yes')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649789315,
  "object": "edit"
}
2022-04-12 18:48:38.677895 fix spelling mistakes 3 ["\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n", "#coding:utf-8\n\nimport math\n\ndef main():\n    S = input()\n    if S[0]==S[1] and S[1]==S[2]:\n        print('No')\n    else:\n        print('Yes')\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 18:48:38.677919 size on output set 3
2022-04-12 18:48:38.677925 size on input set 3
2022-04-12 18:48:40.343266 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649789318,
  "object": "edit"
}
2022-04-12 18:48:40.343441 fix syntax errors 3 ["\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 18:48:42.247538 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "def main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "def main():\n    T, X = map(int, input().split())\n    print(T / X)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "def main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649789320,
  "object": "edit"
}
2022-04-12 18:48:42.247725 fix syntax errors 3 ["def main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    T, X = map(int, input().split())\n    print(T / X)\n\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 18:48:44.296035 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#coding:utf-8\n\nimport math\n\ndef main():\n    S = input()\n    if S[0]==S[1] or S[1]==S[2]:\n        print('No')\n    else:\n        print('Yes')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "#coding:utf-8\n\nimport math\n\ndef main():\n    S = input()\n    if S[0]==S[1] or S[1]==S[2]:\n        print('No')\n    else:\n        print('Yes')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "#coding:utf-8\n\nimport math\n\ndef main():\n    S = input()\n    if S[0] == S[1] and S[1] == S[2]:\n        print('No')\n    else:\n        print('Yes')\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649789322,
  "object": "edit"
}
2022-04-12 18:48:44.296240 fix syntax errors 3 ["#coding:utf-8\n\nimport math\n\ndef main():\n    S = input()\n    if S[0]==S[1] or S[1]==S[2]:\n        print('No')\n    else:\n        print('Yes')\n\nif __name__ == '__main__':\n    main()\n", "#coding:utf-8\n\nimport math\n\ndef main():\n    S = input()\n    if S[0]==S[1] or S[1]==S[2]:\n        print('No')\n    else:\n        print('Yes')\n\nif __name__ == '__main__':\n    main()\n", "#coding:utf-8\n\nimport math\n\ndef main():\n    S = input()\n    if S[0] == S[1] and S[1] == S[2]:\n        print('No')\n    else:\n        print('Yes')\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 18:48:44.296265 size on output set 6
2022-04-12 18:48:44.296289 num operations 2
2022-04-12 18:48:44.296295 size on input set 1
2022-04-12 18:48:47.530620 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 \ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n# from https://qiita.com/kazeto/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 (modified)\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649789324,
  "object": "edit"
}
2022-04-12 18:48:47.530807 fix spelling mistakes 3 ["\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 \ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# from https://qiita.com/kazeto/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 (modified)\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 18:48:47.530836 size on output set 3
2022-04-12 18:48:47.530842 size on input set 3
2022-04-12 18:48:51.641078 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 \ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\n\n\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n\n        return None\n\ndef read_ints():\n\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649789327,
  "object": "edit"
}
2022-04-12 18:48:51.641391 fix syntax errors 3 ["\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 \ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\n\n\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n\n        return None\n\ndef read_ints():\n\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 18:48:57.285454 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# from https://qiita.com/kazeto/items/1d902c7b2a2af0d7f8b8 \ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n# from https://qiita.com/kazeto/items/1d902c7b2a2af0d7f8b8 \ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "# abc068_b.py\n\n# from https://qiita.com/kazeto/items/1d902c7b2a2af0d7f8b8\ndef read_line(): # \u6a19\u6e96\u5165\u529b\u304b\u3089\u4e00\u884c\u8aad\u307f\u8fbc\u3080\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints(): # \u6a19\u6e96\u5165\u529b\u304b\u3089\u6574\u6570\u30ea\u30b9\u30c8\u3092\u8aad\u307f\u8fbc\u3080\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats(): # \u6a19\u6e96\u5165\u529b\u304b\u3089\u5b9f\u6570\u30ea\u30b9\u30c8\u3092\u8aad\u307f\u8fbc\u3080\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649789331,
  "object": "edit"
}
2022-04-12 18:48:57.285624 fix syntax errors 3 ["\n\n# from https://qiita.com/kazeto/items/1d902c7b2a2af0d7f8b8 \ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# from https://qiita.com/kazeto/items/1d902c7b2a2af0d7f8b8 \ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "# abc068_b.py\n\n# from https://qiita.com/kazeto/items/1d902c7b2a2af0d7f8b8\ndef read_line(): # 標準入力から一行読み込む\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints(): # 標準入力から整数リストを読み込む\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats(): # 標準入力から実数リストを読み込む\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 18:49:02.299554 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = raw_input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return map(int, read_line().split(' '))\n\ndef read_floats():\n    return map(float, read_line().split(' '))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 (modified)\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    A, B = read_ints()\n    print(A + B)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 (modified)\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649789337,
  "object": "edit"
}
2022-04-12 18:49:02.299769 fix syntax errors 3 ["\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = raw_input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return map(int, read_line().split(' '))\n\ndef read_floats():\n    return map(float, read_line().split(' '))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 (modified)\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    A, B = read_ints()\n    print(A + B)\n\nif __name__ == '__main__':\n    main()\n", "\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 (modified)\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 18:49:02.299814 size on output set 8
