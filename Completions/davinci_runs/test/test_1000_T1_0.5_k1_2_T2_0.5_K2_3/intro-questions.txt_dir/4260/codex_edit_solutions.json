["#coding:utf-8\n\nimport math\n\ndef main():\n    S = input()\n    if S[0]==S[1] or S[1]==S[2]:\n        print('No')\n    else:\n        print('Yes')\n\nif __name__ == '__main__':\n    main()\n", "#coding:utf-8\n\nimport math\n\ndef main():\n    S = input()\n    if S[0] == S[1] and S[1] == S[2]:\n        print('No')\n    else:\n        print('Yes')\n\nif __name__ == '__main__':\n    main()\n", "\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 \ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n", "\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 (modified)\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# from https://qiita.com/kazeto/items/1d902c7b2a2af0d7f8b8 \ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = raw_input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return map(int, read_line().split(' '))\n\ndef read_floats():\n    return map(float, read_line().split(' '))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\n\n\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n\n        return None\n\ndef read_ints():\n\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\n\nif __name__ == '__main__':\n    main()\n", "# abc068_b.py\n\n# from https://qiita.com/kazeto/items/1d902c7b2a2af0d7f8b8\ndef read_line(): # \u6a19\u6e96\u5165\u529b\u304b\u3089\u4e00\u884c\u8aad\u307f\u8fbc\u3080\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints(): # \u6a19\u6e96\u5165\u529b\u304b\u3089\u6574\u6570\u30ea\u30b9\u30c8\u3092\u8aad\u307f\u8fbc\u3080\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats(): # \u6a19\u6e96\u5165\u529b\u304b\u3089\u5b9f\u6570\u30ea\u30b9\u30c8\u3092\u8aad\u307f\u8fbc\u3080\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 (modified)\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    A, B = read_ints()\n    print(A + B)\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    T, X = map(int, input().split())\n    print(T / X)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X\n\nif __name__ == '__main__':\n    main()\n"]