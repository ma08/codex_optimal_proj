2022-04-12 17:39:47.515915 num operations 2
2022-04-12 17:39:47.515924 size on input set 1
2022-04-12 17:39:52.169430 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2 and (a < A or b < B or c < C):\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-10) + 10)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if a == A and b == B and c == C:\n        return mp\n    if a > A or b > B or c > C:\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2 and l[i]%2 == 0:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"
    }
  ],
  "created": 1649785187,
  "object": "edit"
}
2022-04-12 17:39:52.169639 fix spelling mistakes 3 ["\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2 and (a < A or b < B or c < C):\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-10) + 10)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n", "\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if a == A and b == B and c == C:\n        return mp\n    if a > A or b > B or c > C:\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n", "\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2 and l[i]%2 == 0:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"]
2022-04-12 17:39:52.169681 size on output set 3
2022-04-12 17:39:52.169687 size on input set 3
2022-04-12 17:39:58.195834 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and a == A and b == B and c == C:\n        return mp\n    if mp < 0 or a > A or b > B or c > C:\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2 and l[i] % 2 == 0:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i + 1 < len(l):\n            l[i + 1] += l[i]\n        ans = min(ans, dfs(l[i + 1:], a, b, c, mp - 9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort(reverse=True)\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2 and l[i]%2 == 0:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2 and l[i]%2 == 0:\n            ans = min(ans, dfs(l, a, b, c, mp-1))\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-9))\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"
    }
  ],
  "created": 1649785192,
  "object": "edit"
}
2022-04-12 17:39:58.196197 fix syntax errors 3 ["\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and a == A and b == B and c == C:\n        return mp\n    if mp < 0 or a > A or b > B or c > C:\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2 and l[i] % 2 == 0:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i + 1 < len(l):\n            l[i + 1] += l[i]\n        ans = min(ans, dfs(l[i + 1:], a, b, c, mp - 9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n", "\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort(reverse=True)\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2 and l[i]%2 == 0:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n", "\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2 and l[i]%2 == 0:\n            ans = min(ans, dfs(l, a, b, c, mp-1))\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-9))\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"]
2022-04-12 17:40:04.677435 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if a == A and b == B and c == C:\n        return mp\n    if a > A or b > B or c > C:\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-9) + 9) # 9 = len(l[i+1:])\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if a == A and b == B and c == C:\n        return mp\n    if a > A or b > B or c > C:\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 10)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-10) + 10)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if a == A and b == B and c == C:\n        return mp\n    if a > A or b > B or c > C:\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l[i+1:], a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l[i+1:], a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"
    }
  ],
  "created": 1649785198,
  "object": "edit"
}
2022-04-12 17:40:04.677628 fix syntax errors 3 ["\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if a == A and b == B and c == C:\n        return mp\n    if a > A or b > B or c > C:\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-9) + 9) # 9 = len(l[i+1:])\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n", "\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if a == A and b == B and c == C:\n        return mp\n    if a > A or b > B or c > C:\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 10)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-10) + 10)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n", "\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if a == A and b == B and c == C:\n        return mp\n    if a > A or b > B or c > C:\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l[i+1:], a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l[i+1:], a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"]
2022-04-12 17:40:10.561271 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2 and (a < A or b < B or c < C):\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-10))\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2 and (a < A or b < B or c < C) and mp >= 1:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1) # \u30e9\u30a4\u30f3\u3092\u5206\u3051\u308b\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-10) + 10)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"
    },
    {
      "index": 2,
      "text": "# https://atcoder.jp/contests/abc170/tasks/abc170_d\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2 and (a < A or b < B or c < C) and mp-1 >= 0:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        if i+1 < len(l) and mp-10 >= 0:\n            ans = min(ans, dfs(l[i+1:], a, b, c, mp-10) + 10)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"
    }
  ],
  "created": 1649785204,
  "object": "edit"
}
2022-04-12 17:40:10.561572 fix syntax errors 3 ["\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2 and (a < A or b < B or c < C):\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-10))\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n", "\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2 and (a < A or b < B or c < C) and mp >= 1:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1) # ラインを分ける\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-10) + 10)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n", "# https://atcoder.jp/contests/abc170/tasks/abc170_d\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2 and (a < A or b < B or c < C) and mp-1 >= 0:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        if i+1 < len(l) and mp-10 >= 0:\n            ans = min(ans, dfs(l[i+1:], a, b, c, mp-10) + 10)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"]
2022-04-12 17:40:10.561633 size on output set 9
2022-04-12 17:40:10.561644 num operations 2
2022-04-12 17:40:10.561649 size on input set 1
2022-04-12 17:40:21.869878 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if ls[cur] - 2 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n"
    },
    {
      "index": 1,
      "text": "\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if a + ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n    if b + ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n    if c + ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if a + ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n    if b + ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n    if c + ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n"
    },
    {
      "index": 2,
      "text": "\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 > 0 and a + ls[cur] - 1 <= A:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9) \n    if ls[cur] - 2 > 0 and a + ls[cur] - 2 <= A:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8) \n    if ls[cur] - 1 > 0 and b + ls[cur] - 1 <= B:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9) \n    if ls[cur] - 2 > 0 and b + ls[cur] - 2 <= B:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8) \n    if ls[cur] - 1 > 0 and c + ls[cur] - 1 <= C:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9) \n    if ls[cur] - 2 > 0 and c + ls[cur] - 2 <= C:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8) \n    return res\n\nprint(dfs(0, 0, 0, 0))\n"
    }
  ],
  "created": 1649785210,
  "object": "edit"
}
2022-04-12 17:40:21.870062 fix spelling mistakes 3 ["\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if ls[cur] - 2 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n", "\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if a + ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n    if b + ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n    if c + ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if a + ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n    if b + ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n    if c + ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n", "\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 > 0 and a + ls[cur] - 1 <= A:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9) \n    if ls[cur] - 2 > 0 and a + ls[cur] - 2 <= A:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8) \n    if ls[cur] - 1 > 0 and b + ls[cur] - 1 <= B:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9) \n    if ls[cur] - 2 > 0 and b + ls[cur] - 2 <= B:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8) \n    if ls[cur] - 1 > 0 and c + ls[cur] - 1 <= C:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9) \n    if ls[cur] - 2 > 0 and c + ls[cur] - 2 <= C:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8) \n    return res\n\nprint(dfs(0, 0, 0, 0))\n"]
2022-04-12 17:40:21.870229 size on output set 3
2022-04-12 17:40:21.870238 size on input set 3
2022-04-12 17:40:33.172972 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nsys.setrecursionlimit(10**7)\n\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if a + ls[cur] - 1 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n    if b + ls[cur] - 1 >= 0:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n    if c + ls[cur] - 1 >=0:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if a + ls[cur] - 2 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n    if b + ls[cur] - 2 >= 0:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n    if c + ls[cur] - 2 >= 0:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n"
    },
    {
      "index": 1,
      "text": "N, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if a + ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n    if b + ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n    if c + ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if a + ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n    if b + ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n    if c + ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if a + ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n    if b + ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n    if c + ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if a + ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n    if b + ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n    if c + ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n"
    },
    {
      "index": 2,
      "text": "\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if a > 0:\n        res = min(res, dfs(cur + 1, a - 1, b, c) + 9)\n    if b > 0:\n        res = min(res, dfs(cur + 1, a, b - 1, c) + 9)\n    if c > 0:\n        res = min(res, dfs(cur + 1, a, b, c - 1) + 9)\n    if a > 1:\n        res = min(res, dfs(cur + 1, a - 2, b, c) + 8)\n    if b > 1:\n        res = min(res, dfs(cur + 1, a, b - 2, c) + 8)\n    if c > 1:\n        res = min(res, dfs(cur + 1, a, b, c - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n"
    }
  ],
  "created": 1649785221,
  "object": "edit"
}
2022-04-12 17:40:33.173187 fix syntax errors 3 ["\nimport sys\nsys.setrecursionlimit(10**7)\n\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if a + ls[cur] - 1 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n    if b + ls[cur] - 1 >= 0:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n    if c + ls[cur] - 1 >=0:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if a + ls[cur] - 2 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n    if b + ls[cur] - 2 >= 0:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n    if c + ls[cur] - 2 >= 0:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n", "N, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if a + ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n    if b + ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n    if c + ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if a + ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n    if b + ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n    if c + ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if a + ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n    if b + ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n    if c + ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if a + ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n    if b + ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n    if c + ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n", "\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if a > 0:\n        res = min(res, dfs(cur + 1, a - 1, b, c) + 9)\n    if b > 0:\n        res = min(res, dfs(cur + 1, a, b - 1, c) + 9)\n    if c > 0:\n        res = min(res, dfs(cur + 1, a, b, c - 1) + 9)\n    if a > 1:\n        res = min(res, dfs(cur + 1, a - 2, b, c) + 8)\n    if b > 1:\n        res = min(res, dfs(cur + 1, a, b - 2, c) + 8)\n    if c > 1:\n        res = min(res, dfs(cur + 1, a, b, c - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n"]
2022-04-12 17:40:37.946520 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# coding: utf-8\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if ls[cur] - 2 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n"
    },
    {
      "index": 1,
      "text": "\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n    if cur == N:\n        if a == A and b == B and c == C:\n            return 0\n        else:\n            return float('inf')\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\nprint(dfs(0, 0, 0, 0))\n"
    },
    {
      "index": 2,
      "text": "import sys\nsys.setrecursionlimit(10**6)\n\nINF = float('inf')\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return INF\n    res = INF\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n"
    }
  ],
  "created": 1649785233,
  "object": "edit"
}
2022-04-12 17:40:37.946723 fix syntax errors 3 ["# coding: utf-8\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if ls[cur] - 2 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n", "\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n    if cur == N:\n        if a == A and b == B and c == C:\n            return 0\n        else:\n            return float('inf')\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\nprint(dfs(0, 0, 0, 0))\n", "import sys\nsys.setrecursionlimit(10**6)\n\nINF = float('inf')\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return INF\n    res = INF\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n"]
2022-04-12 17:41:02.079523 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "N, A, B, C = map(int, input().split())\n\n\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c, cost):\n    if a == 0 and b == 0 and c == 0:\n        return cost\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c, cost))\n    if a + ls[cur] <= A:\n        res = min(res, dfs(cur + 1, a + ls[cur], b, c, cost + 10))\n    if b + ls[cur] <= B:\n        res = min(res, dfs(cur + 1, a, b + ls[cur], c, cost + 10))\n    if c + ls[cur] <= C:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur], cost + 10))\n    if a + ls[cur] - 1 <= A:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c, cost + 9)) \n    if a + ls[cur] - 2 <= A:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c, cost + 8)) \n    if b + ls[cur] - 1 <= B:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c, cost + 9)) \n    if b + ls[cur] - 2 <= B:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c, cost + 8)) \n    if c + ls[cur] - 1 <= C:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1, cost + 9)) \n    if c + ls[cur] - 2 <= C:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2, cost + 8)) \n    return res\n\nprint(dfs(0, 0, 0, 0, 0))\n"
    },
    {
      "index": 1,
      "text": "\nN, A, B, C = map(int, input().split())\n\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 > 0 and a + ls[cur] - 1 <= A:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n    if ls[cur] - 2 > 0 and a + ls[cur] - 2 <= A:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n    if ls[cur] - 1 > 0 and b + ls[cur] - 1 <= B:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n    if ls[cur] - 2 > 0 and b + ls[cur] - 2 <= B:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n    if ls[cur] - 1 > 0 and c + ls[cur] - 1 <= C:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if ls[cur] - 2 > 0 and c + ls[cur] - 2 <= C:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8) \n    return res\n\nprint(dfs(0, 0, 0, 0))\n"
    },
    {
      "index": 2,
      "text": "\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if a + ls[cur] - 1 <= A:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n    if a + ls[cur] - 2 <= A:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n    if b + ls[cur] - 1 <= B:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n    if b + ls[cur] - 2 <= B:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n    if c + ls[cur] - 1 <= C:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if c + ls[cur] - 2 <= C:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n"
    }
  ],
  "created": 1649785237,
  "object": "edit"
}
2022-04-12 17:41:02.079803 fix syntax errors 3 ["N, A, B, C = map(int, input().split())\n\n\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c, cost):\n    if a == 0 and b == 0 and c == 0:\n        return cost\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c, cost))\n    if a + ls[cur] <= A:\n        res = min(res, dfs(cur + 1, a + ls[cur], b, c, cost + 10))\n    if b + ls[cur] <= B:\n        res = min(res, dfs(cur + 1, a, b + ls[cur], c, cost + 10))\n    if c + ls[cur] <= C:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur], cost + 10))\n    if a + ls[cur] - 1 <= A:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c, cost + 9)) \n    if a + ls[cur] - 2 <= A:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c, cost + 8)) \n    if b + ls[cur] - 1 <= B:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c, cost + 9)) \n    if b + ls[cur] - 2 <= B:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c, cost + 8)) \n    if c + ls[cur] - 1 <= C:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1, cost + 9)) \n    if c + ls[cur] - 2 <= C:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2, cost + 8)) \n    return res\n\nprint(dfs(0, 0, 0, 0, 0))\n", "\nN, A, B, C = map(int, input().split())\n\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 > 0 and a + ls[cur] - 1 <= A:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n    if ls[cur] - 2 > 0 and a + ls[cur] - 2 <= A:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n    if ls[cur] - 1 > 0 and b + ls[cur] - 1 <= B:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n    if ls[cur] - 2 > 0 and b + ls[cur] - 2 <= B:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n    if ls[cur] - 1 > 0 and c + ls[cur] - 1 <= C:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if ls[cur] - 2 > 0 and c + ls[cur] - 2 <= C:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8) \n    return res\n\nprint(dfs(0, 0, 0, 0))\n", "\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if a + ls[cur] - 1 <= A:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n    if a + ls[cur] - 2 <= A:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n    if b + ls[cur] - 1 <= B:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n    if b + ls[cur] - 2 <= B:\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n    if c + ls[cur] - 1 <= C:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if c + ls[cur] - 2 <= C:\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n"]
2022-04-12 17:41:02.079883 size on output set 9
