2022-04-12 17:09:23.327773 num operations 2
2022-04-12 17:09:23.327790 size on input set 1
2022-04-12 17:09:26.055227 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef can_eq(s, t):  # s\u3068t\u3092\u6bd4\u8f03\u3059\u308b\u95a2\u6570\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef can_be_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_be_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef can_eq_permutation(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq_permutation(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1649783363,
  "object": "edit"
}
2022-04-12 17:09:26.055486 fix spelling mistakes 3 ["\n\nimport sys\n\ndef can_eq(s, t):  # sとtを比較する関数\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "\n\nimport sys\n\ndef can_be_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_be_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "\n\nimport sys\n\ndef can_eq_permutation(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq_permutation(s, t):\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-12 17:09:26.055525 size on output set 3
2022-04-12 17:09:26.055532 size on input set 3
2022-04-12 17:09:27.506919 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef can_eq_permutation(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq_permutation(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef can_eq_permutation(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq_permutation(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef can_eq_permutation(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq_permutation(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1649783366,
  "object": "edit"
}
2022-04-12 17:09:27.507100 fix syntax errors 3 ["import sys\n\ndef can_eq_permutation(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq_permutation(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "import sys\n\ndef can_eq_permutation(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq_permutation(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "import sys\n\ndef can_eq_permutation(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq_permutation(s, t):\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-12 17:09:29.373157 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef can_eq(s, t):  # s\u3068t\u3092\u6bd4\u8f03\u3059\u308b\u95a2\u6570\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef can_eq(s, t):  # s\u3068t\u3092\u6bd4\u8f03\u3059\u308b\u95a2\u6570\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 2,
      "text": "\nimport sys \n\ndef can_eq(s, t):  # s\u3068t\u3092\u6bd4\u8f03\u3059\u308b\u95a2\u6570\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1649783367,
  "object": "edit"
}
2022-04-12 17:09:29.373350 fix syntax errors 3 ["\nimport sys\n\ndef can_eq(s, t):  # sとtを比較する関数\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef can_eq(s, t):  # sとtを比較する関数\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "\nimport sys \n\ndef can_eq(s, t):  # sとtを比較する関数\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-12 17:09:35.996599 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef can_be_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_be_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef is_palindrome(s):\n    return s == s[::-1]\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_be_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n"
    }
  ],
  "created": 1649783369,
  "object": "edit"
}
2022-04-12 17:09:35.996870 fix syntax errors 3 ["import sys\n\ndef can_be_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_be_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "\nimport sys\n\ndef is_palindrome(s):\n    return s == s[::-1]\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_be_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n", '\nimport sys\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n']
2022-04-12 17:09:35.996897 size on output set 7
2022-04-12 17:09:35.996908 num operations 2
2022-04-12 17:09:35.996920 size on input set 1
2022-04-12 17:09:37.909665 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# -----Answer----- \n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\n\n# -----Answer-----\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\ns_sorted = sorted(s)\nt_sorted = sorted(t, reverse=True)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 2,
      "text": "\n\n# -----Answer----- \n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1649783376,
  "object": "edit"
}
2022-04-12 17:09:37.909859 fix spelling mistakes 3 ["\n\n# -----Answer----- \n\ns = input()\nt = input()\n\n# 文字列をソート\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n", "\n\n# -----Answer-----\n\ns = input()\nt = input()\n\n# 文字列をソート\ns_sorted = sorted(s)\nt_sorted = sorted(t, reverse=True)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n", "\n\n# -----Answer----- \n\ns = input()\nt = input()\n\n# 文字列をソート\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-12 17:09:37.909891 size on output set 2
2022-04-12 17:09:37.909898 size on input set 2
2022-04-12 17:09:39.368077 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# -----Answer-----\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\ns_sorted = sorted(s)\nt_sorted = sorted(t, reverse=True)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\n# -----Answer-----\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\ns_sorted = sorted(s)\nt_sorted = sorted(t, reverse=True)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 2,
      "text": "\n# -----Answer-----\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\ns_sorted = sorted(s)\nt_sorted = sorted(t, reverse=True)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1649783377,
  "object": "edit"
}
2022-04-12 17:09:39.368255 fix syntax errors 3 ["\n# -----Answer-----\n\ns = input()\nt = input()\n\n# 文字列をソート\ns_sorted = sorted(s)\nt_sorted = sorted(t, reverse=True)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n", "\n# -----Answer-----\n\ns = input()\nt = input()\n\n# 文字列をソート\ns_sorted = sorted(s)\nt_sorted = sorted(t, reverse=True)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n", "\n# -----Answer-----\n\ns = input()\nt = input()\n\n# 文字列をソート\ns_sorted = sorted(s)\nt_sorted = sorted(t, reverse=True)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-12 17:09:44.887494 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# -----Answer----- \n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "# -----Answer----- \n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\ns = input()\nt = input()\n"
    },
    {
      "index": 2,
      "text": "\n\n# -----Answer-----\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1649783379,
  "object": "edit"
}
2022-04-12 17:09:44.887712 fix syntax errors 3 ["\n# -----Answer----- \n\ns = input()\nt = input()\n\n# 文字列をソート\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n", "# -----Answer----- \n# 文字列をソート\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\ns = input()\nt = input()\n", "\n\n# -----Answer-----\n\ns = input()\nt = input()\n\n# 文字列をソート\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-12 17:09:44.887745 size on output set 4
