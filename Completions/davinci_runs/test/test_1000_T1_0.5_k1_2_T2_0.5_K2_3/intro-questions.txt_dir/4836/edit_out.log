2022-04-13 04:22:24.956250 num operations 2
2022-04-13 04:22:24.956259 size on input set 1
2022-04-13 04:22:28.715530 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, c = map(int, input().split())\n    fruits = [int(x) for x in input().split()]\n    eaten = 0\n    for i in range(n):\n        if fruits[i] <= c:\n            c -= fruits[i]\n            eaten += 1\n    print(eaten)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    a, b, c = map(int, input().split())\n    if a + b + c >= 22:\n        print('bust')\n    else:\n        print('win')\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    fruits = [int(x) for x in input().split()]\n    eaten_fruits = 0\n    for i in range(n):\n        if fruits[i] <= m:\n            m -= fruits[i]\n            eaten_fruits += 1\n    print(eaten_fruits)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649823745,
  "object": "edit"
}
2022-04-13 04:22:28.715716 fix spelling mistakes 3 ['\ndef main():\n    n, c = map(int, input().split())\n    fruits = [int(x) for x in input().split()]\n    eaten = 0\n    for i in range(n):\n        if fruits[i] <= c:\n            c -= fruits[i]\n            eaten += 1\n    print(eaten)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    a, b, c = map(int, input().split())\n    if a + b + c >= 22:\n        print(\'bust\')\n    else:\n        print(\'win\')\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, m = map(int, input().split())\n    fruits = [int(x) for x in input().split()]\n    eaten_fruits = 0\n    for i in range(n):\n        if fruits[i] <= m:\n            m -= fruits[i]\n            eaten_fruits += 1\n    print(eaten_fruits)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 04:22:28.715741 size on output set 3
2022-04-13 04:22:28.715748 size on input set 3
2022-04-13 04:22:32.682891 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#\n# def main():\n#     a, b, c = map(int, input().split())\n#     if a + b + c >= 22:\n#         print('bust')\n#     else:\n#         print('win')\n#\n# if __name__ == \"__main__\":\n#     main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    a, b, c = map(int, input().split())\n    if a + b + c >= 22:\n        print('bust')\n    else:\n        print('win')\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    a, b, c = map(int, input().split())\n    if a + b + c >= 22:\n        print('bust')\n    else:\n        print('win')\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649823748,
  "object": "edit"
}
2022-04-13 04:22:32.683047 fix syntax errors 3 ['\n#\n# def main():\n#     a, b, c = map(int, input().split())\n#     if a + b + c >= 22:\n#         print(\'bust\')\n#     else:\n#         print(\'win\')\n#\n# if __name__ == "__main__":\n#     main()\n', '\ndef main():\n    a, b, c = map(int, input().split())\n    if a + b + c >= 22:\n        print(\'bust\')\n    else:\n        print(\'win\')\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    a, b, c = map(int, input().split())\n    if a + b + c >= 22:\n        print(\'bust\')\n    else:\n        print(\'win\')\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 04:22:37.038791 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    fruits = [int(x) for x in input().split()]\n    eaten_fruits = 0\n    for i in range(n):\n        if fruits[i] <= m:\n            m -= fruits[i]\n            eaten_fruits += 1\n    print(eaten_fruits)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef eat_fruits(n, m, fruits):\n    eaten_fruits = 0\n    for i in range(n):\n        if fruits[i] <= m:\n            m -= fruits[i]\n            eaten_fruits += 1\n    return eaten_fruits\n\ndef main():\n    n, m = map(int, input().split())\n    fruits = [int(x) for x in input().split()]\n    eaten_fruits = 0\n    for i in range(n):\n        if fruits[i] <= m:\n            m -= fruits[i]\n            eaten_fruits += 1\n    print(eaten_fruits)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    print('Hello World')\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649823752,
  "object": "edit"
}
2022-04-13 04:22:37.038963 fix syntax errors 3 ['\ndef main():\n    n, m = map(int, input().split())\n    fruits = [int(x) for x in input().split()]\n    eaten_fruits = 0\n    for i in range(n):\n        if fruits[i] <= m:\n            m -= fruits[i]\n            eaten_fruits += 1\n    print(eaten_fruits)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef eat_fruits(n, m, fruits):\n    eaten_fruits = 0\n    for i in range(n):\n        if fruits[i] <= m:\n            m -= fruits[i]\n            eaten_fruits += 1\n    return eaten_fruits\n\ndef main():\n    n, m = map(int, input().split())\n    fruits = [int(x) for x in input().split()]\n    eaten_fruits = 0\n    for i in range(n):\n        if fruits[i] <= m:\n            m -= fruits[i]\n            eaten_fruits += 1\n    print(eaten_fruits)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    print(\'Hello World\')\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 04:22:41.518451 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "def main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    # n, c = map(int, input().split())\n    # fruits = [int(x) for x in input().split()]\n    # eaten = 0\n    # for i in range(n):\n    #     if fruits[i] <= c:\n    #         c -= fruits[i]\n    #         eaten += 1\n    # print(eaten)\n    print(\"Hello World\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    print(\"hello world\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649823757,
  "object": "edit"
}
2022-04-13 04:22:41.518640 fix syntax errors 3 ['def main():\n    pass\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    # n, c = map(int, input().split())\n    # fruits = [int(x) for x in input().split()]\n    # eaten = 0\n    # for i in range(n):\n    #     if fruits[i] <= c:\n    #         c -= fruits[i]\n    #         eaten += 1\n    # print(eaten)\n    print("Hello World")\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    print("hello world")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 04:22:41.518662 size on output set 8
2022-04-13 04:22:41.518672 num operations 2
2022-04-13 04:22:41.518678 size on input set 1
2022-04-13 04:22:43.233416 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, c = map(int, input().split())\n    w = list(map(int, input().split()))\n    fruits = sorted(w, reverse=True)\n\n    i = 0\n    total = 0\n    while i < n:\n        if total + fruits[i] <= c:\n            total += fruits[i]\n            i += 1\n        else:\n            break\n\n    print(i)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, c = map(int, input().split())\n    w = list(map(int, input().split()))\n    fruits = sorted(w, reverse=True)\n\n    i = 0\n    total = 0\n    while i < n:\n        if total + fruits[i] <= c:\n            total += fruits[i]\n            i += 1\n        else:\n            break\n\n    print(i)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n, c = map(int, input().split())\n    w = list(map(int, input().split()))\n    fruits = sorted(w)\n\n    i = 0\n    total = 0\n    while i < n:\n        if total + fruits[i] <= c:\n            total += fruits[i]\n            i += 1\n        else:\n            break\n\n    print(i)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649823761,
  "object": "edit"
}
2022-04-13 04:22:43.233716 fix spelling mistakes 3 ['\n\ndef main():\n    n, c = map(int, input().split())\n    w = list(map(int, input().split()))\n    fruits = sorted(w, reverse=True)\n\n    i = 0\n    total = 0\n    while i < n:\n        if total + fruits[i] <= c:\n            total += fruits[i]\n            i += 1\n        else:\n            break\n\n    print(i)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, c = map(int, input().split())\n    w = list(map(int, input().split()))\n    fruits = sorted(w, reverse=True)\n\n    i = 0\n    total = 0\n    while i < n:\n        if total + fruits[i] <= c:\n            total += fruits[i]\n            i += 1\n        else:\n            break\n\n    print(i)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n, c = map(int, input().split())\n    w = list(map(int, input().split()))\n    fruits = sorted(w)\n\n    i = 0\n    total = 0\n    while i < n:\n        if total + fruits[i] <= c:\n            total += fruits[i]\n            i += 1\n        else:\n            break\n\n    print(i)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 04:22:43.233748 size on output set 2
2022-04-13 04:22:43.233754 size on input set 2
2022-04-13 04:22:48.322210 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, c = map(int, input().split())\n    w = list(map(int, input().split()))\n    fruits = sorted(w, reverse=True)\n\n    i = 1\n    total = 0\n    while i < n:\n        if total + fruits[i] <= c:\n            total += fruits[i]\n            i += 1\n        else:\n            break\n\n    print(i)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    l = list(map(int, input().split()))\n    l = sorted(l)\n\n    for i in range(n):\n        for j in range(n):\n            for k in range(n):\n                if l[i] + l[j] + l[k] == m:\n                    print('Yes')\n                    return\n\n    print('No')\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n, c = map(int, input().split())\n    w = list(map(int, input().split()))\n    fruits = sorted(w, reverse=True)\n\n    i = 0\n    total = 0\n    while i < n:\n        if total + fruits[i] <= c:\n            total += fruits[i]\n            i += 1\n        else:\n            break\n\n    print(i)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649823763,
  "object": "edit"
}
2022-04-13 04:22:48.322389 fix syntax errors 3 ['\n\ndef main():\n    n, c = map(int, input().split())\n    w = list(map(int, input().split()))\n    fruits = sorted(w, reverse=True)\n\n    i = 1\n    total = 0\n    while i < n:\n        if total + fruits[i] <= c:\n            total += fruits[i]\n            i += 1\n        else:\n            break\n\n    print(i)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, m = map(int, input().split())\n    l = list(map(int, input().split()))\n    l = sorted(l)\n\n    for i in range(n):\n        for j in range(n):\n            for k in range(n):\n                if l[i] + l[j] + l[k] == m:\n                    print(\'Yes\')\n                    return\n\n    print(\'No\')\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n, c = map(int, input().split())\n    w = list(map(int, input().split()))\n    fruits = sorted(w, reverse=True)\n\n    i = 0\n    total = 0\n    while i < n:\n        if total + fruits[i] <= c:\n            total += fruits[i]\n            i += 1\n        else:\n            break\n\n    print(i)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 04:22:53.325199 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, m, x = map(int, input().split())\n    a = list(map(int, input().split()))\n\n    left = 0\n    right = 0\n\n    for i in range(m):\n        if a[i] < x:\n            left += 1\n        else:\n            right += 1\n\n    print(min(left, right))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, c = map(int, input().split())\n    w = list(map(int, input().split()))\n    w = sorted(w)\n\n    i = 0\n    total = 0\n    while i < n:\n        if total + w[i] <= c:\n            total += w[i]\n            i += 1\n        else:\n            break\n\n    print(i)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "def main():\n    n, c = map(int, input().split())\n    w = list(map(int, input().split()))\n    fruits = sorted(w)\n\n    i = 0\n    total = 0\n    while i < n:\n        if total + fruits[i] <= c:\n            total += fruits[i]\n            i += 1\n        else:\n            break\n\n    print(i)\n\n\nmain()\n"
    }
  ],
  "created": 1649823768,
  "object": "edit"
}
2022-04-13 04:22:53.325408 fix syntax errors 3 ['\ndef main():\n    n, m, x = map(int, input().split())\n    a = list(map(int, input().split()))\n\n    left = 0\n    right = 0\n\n    for i in range(m):\n        if a[i] < x:\n            left += 1\n        else:\n            right += 1\n\n    print(min(left, right))\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n, c = map(int, input().split())\n    w = list(map(int, input().split()))\n    w = sorted(w)\n\n    i = 0\n    total = 0\n    while i < n:\n        if total + w[i] <= c:\n            total += w[i]\n            i += 1\n        else:\n            break\n\n    print(i)\n\nif __name__ == "__main__":\n    main()\n', 'def main():\n    n, c = map(int, input().split())\n    w = list(map(int, input().split()))\n    fruits = sorted(w)\n\n    i = 0\n    total = 0\n    while i < n:\n        if total + fruits[i] <= c:\n            total += fruits[i]\n            i += 1\n        else:\n            break\n\n    print(i)\n\n\nmain()\n']
2022-04-13 04:22:53.325446 size on output set 6
2022-04-13 04:22:53.325456 num operations 2
2022-04-13 04:22:53.325462 size on input set 1
2022-04-13 04:22:54.878258 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nn, c = map(int, input().split())\nw = list(map(int, input().split()))\n\neaten = 0\ncurr = 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\n\nprint(eaten)\n"
    },
    {
      "index": 1,
      "text": "\nn, c = map(int, input().split())\nw = list(map(int, input().split()))\n\neaten = 0\ncurr = 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\nprint(eaten)\n"
    },
    {
      "index": 2,
      "text": "\n\nn, c = map(int, input().split())\nw = list(map(int, input().split()))\neaten = 0\ncurr = 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\n\nprint(eaten)\n"
    }
  ],
  "created": 1649823773,
  "object": "edit"
}
2022-04-13 04:22:54.878425 fix spelling mistakes 3 ['\nn, c = map(int, input().split())\nw = list(map(int, input().split()))\n\neaten = 0\ncurr = 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\n\nprint(eaten)\n', '\nn, c = map(int, input().split())\nw = list(map(int, input().split()))\n\neaten = 0\ncurr = 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\nprint(eaten)\n', '\n\nn, c = map(int, input().split())\nw = list(map(int, input().split()))\neaten = 0\ncurr = 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\n\nprint(eaten)\n']
2022-04-13 04:22:54.878448 size on output set 3
2022-04-13 04:22:54.878454 size on input set 3
2022-04-13 04:22:59.033637 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# python3\nn, c = map(int, input().split())\nw = list(map(int, input().split()))\n\neaten = 0\ncurr = 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\nprint(eaten) \n"
    },
    {
      "index": 1,
      "text": "\nn, c = map(int, input().split()) # n = number of cows, c = capacity of the truck\nw = list(map(int, input().split())) # w = list of weights of cows\n\neaten = 0\ncurr = 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\nprint(eaten)\n"
    },
    {
      "index": 2,
      "text": "\n"
    }
  ],
  "created": 1649823774,
  "object": "edit"
}
2022-04-13 04:22:59.033870 fix syntax errors 3 ['# python3\nn, c = map(int, input().split())\nw = list(map(int, input().split()))\n\neaten = 0\ncurr = 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\nprint(eaten) \n', '\nn, c = map(int, input().split()) # n = number of cows, c = capacity of the truck\nw = list(map(int, input().split())) # w = list of weights of cows\n\neaten = 0\ncurr = 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\nprint(eaten)\n', '\n']
2022-04-13 04:23:00.986879 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, c = map(int, input().split())\nw = list(map(int, input().split()))\neaten, curr = 0, 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\n\nprint(eaten)\n"
    },
    {
      "index": 1,
      "text": "n, c = map(int, input().split())\nw = list(map(int, input().split()))\neaten = 0\ncurr = 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\n\nprint(eaten)\n"
    },
    {
      "index": 2,
      "text": "\nn, c = map(int, input().split())\nw = list(map(int, input().split()))\neaten = 0\ncurr = 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\n\nprint(eaten)\n"
    }
  ],
  "created": 1649823779,
  "object": "edit"
}
2022-04-13 04:23:00.987052 fix syntax errors 3 ['\nn, c = map(int, input().split())\nw = list(map(int, input().split()))\neaten, curr = 0, 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\n\nprint(eaten)\n', 'n, c = map(int, input().split())\nw = list(map(int, input().split()))\neaten = 0\ncurr = 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\n\nprint(eaten)\n', '\nn, c = map(int, input().split())\nw = list(map(int, input().split()))\neaten = 0\ncurr = 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\n\nprint(eaten)\n']
2022-04-13 04:23:04.128566 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "print(\"Hello world!\")\n"
    },
    {
      "index": 1,
      "text": "\nn, c = map(int, input().split())\nw = list(map(int, input().split()))\n\neaten = 0\ncurr = 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\n\nprint(eaten)\n"
    },
    {
      "index": 2,
      "text": "n, c = map(int, input().split())\nw = list(map(int, input().split()))\n\neaten = 0\ncurr = 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\n\nprint(eaten)\n"
    }
  ],
  "created": 1649823781,
  "object": "edit"
}
2022-04-13 04:23:04.128726 fix syntax errors 3 ['print("Hello world!")\n', '\nn, c = map(int, input().split())\nw = list(map(int, input().split()))\n\neaten = 0\ncurr = 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\n\nprint(eaten)\n', 'n, c = map(int, input().split())\nw = list(map(int, input().split()))\n\neaten = 0\ncurr = 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\n\nprint(eaten)\n']
2022-04-13 04:23:04.128748 size on output set 9
2022-04-13 04:23:04.128759 num operations 2
2022-04-13 04:23:04.128764 size on input set 1
2022-04-13 04:23:08.911252 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#-----main-----\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\n\n\nprint(len(eaten))\n"
    },
    {
      "index": 1,
      "text": "\n\n#-----main------\nn, m = map(int, input().split())\nnums = list(map(int, input().split()))\n\nprint(sum(nums) - m if sum(nums) > m else 0)\n"
    },
    {
      "index": 2,
      "text": "\n\n# -----main-----\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\nprint(len(eaten))\n"
    }
  ],
  "created": 1649823784,
  "object": "edit"
}
2022-04-13 04:23:08.911415 fix spelling mistakes 3 ['\n\n#-----main-----\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\n\n\nprint(len(eaten))\n', '\n\n#-----main------\nn, m = map(int, input().split())\nnums = list(map(int, input().split()))\n\nprint(sum(nums) - m if sum(nums) > m else 0)\n', '\n\n# -----main-----\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\nprint(len(eaten))\n']
2022-04-13 04:23:08.911443 size on output set 3
2022-04-13 04:23:08.911449 size on input set 3
2022-04-13 04:23:18.981009 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# -----main-----\ndef main():\n    n, c = map(int, input().split())\n    fruits = list(map(int, input().split()))\n\n\n    eaten = set()\n    cur_sum = 0\n    for fruit in fruits:\n        if fruit + cur_sum <= c and fruit not in eaten:\n            eaten.add(fruit)\n            cur_sum += fruit\n\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\nprint(len(eaten))\n"
    },
    {
      "index": 1,
      "text": "\n# -----main-----\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\nprint(len(eaten))\n"
    },
    {
      "index": 2,
      "text": "\n\n# -----main-----#\nn, c = map(int, input().split())#\nfruits = list(map(int, input().split()))#\n\neaten = set()#\ncur_sum = 0#\nfor fruit in fruits:#\n    if fruit + cur_sum <= c and fruit not in eaten:#\n        eaten.add(fruit)#\n        cur_sum += fruit#\n\nprint(len(eaten))\n"
    }
  ],
  "created": 1649823788,
  "object": "edit"
}
2022-04-13 04:23:18.981178 fix syntax errors 3 ['# -----main-----\ndef main():\n    n, c = map(int, input().split())\n    fruits = list(map(int, input().split()))\n\n\n    eaten = set()\n    cur_sum = 0\n    for fruit in fruits:\n        if fruit + cur_sum <= c and fruit not in eaten:\n            eaten.add(fruit)\n            cur_sum += fruit\n\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\nprint(len(eaten))\n', '\n# -----main-----\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\nprint(len(eaten))\n', '\n\n# -----main-----#\nn, c = map(int, input().split())#\nfruits = list(map(int, input().split()))#\n\neaten = set()#\ncur_sum = 0#\nfor fruit in fruits:#\n    if fruit + cur_sum <= c and fruit not in eaten:#\n        eaten.add(fruit)#\n        cur_sum += fruit#\n\nprint(len(eaten))\n']
2022-04-13 04:23:20.801549 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#-----main-----\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\n\nprint(len(eaten))\n"
    },
    {
      "index": 1,
      "text": "\n\n#-----main-----\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\n\nprint(len(eaten))\n"
    },
    {
      "index": 2,
      "text": "#-----main-----\n\n#-----main-----\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\n\nprint(len(eaten))\n"
    }
  ],
  "created": 1649823799,
  "object": "edit"
}
2022-04-13 04:23:20.801801 fix syntax errors 3 ['\n\n#-----main-----\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\n\nprint(len(eaten))\n', '\n\n#-----main-----\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\n\nprint(len(eaten))\n', '#-----main-----\n\n#-----main-----\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\n\nprint(len(eaten))\n']
2022-04-13 04:23:23.117548 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#-----main------\nn, m = map(int, input().split())\nnums = list(map(int, input().split()))\n\nprint(sum(nums) - m if sum(nums) > m else 0)\n"
    },
    {
      "index": 1,
      "text": "\n#-----main------\nn, m = map(int, input().split())\nnums = list(map(int, input().split()))\n\nprint(sum(nums) - m if sum(nums) > m else 0)\n"
    },
    {
      "index": 2,
      "text": "\n\n#-----main------\nn, m = map(int, input().split())\nnums = list(map(int, input().split()))\n\nprint(sum(nums) - m if sum(nums) >= m else 0)\n"
    }
  ],
  "created": 1649823800,
  "object": "edit"
}
2022-04-13 04:23:23.117715 fix syntax errors 3 ['\n#-----main------\nn, m = map(int, input().split())\nnums = list(map(int, input().split()))\n\nprint(sum(nums) - m if sum(nums) > m else 0)\n', '\n#-----main------\nn, m = map(int, input().split())\nnums = list(map(int, input().split()))\n\nprint(sum(nums) - m if sum(nums) > m else 0)\n', '\n\n#-----main------\nn, m = map(int, input().split())\nnums = list(map(int, input().split()))\n\nprint(sum(nums) - m if sum(nums) >= m else 0)\n']
2022-04-13 04:23:23.117737 size on output set 7
2022-04-13 04:23:23.117748 num operations 2
2022-04-13 04:23:23.117753 size on input set 1
2022-04-13 04:23:26.337766 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom sys import stdin\nfrom collections import deque\n\nn, c = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))\n\neaten = set()\nwhile weights and c >= weights[0]:\n    c -= weights.popleft()\n    eaten.add(c)\n\nprint(len(eaten))\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\nfrom collections import deque\n\nn, k = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))  # \ud050\ub85c \ub9cc\ub4e4\uae30\n\neaten = set()\nwhile weights and c >= weights[0]:\n    c -= weights.popleft()\n    eaten.add(c)\n\nprint(len(eaten))\n"
    },
    {
      "index": 2,
      "text": "\nfrom sys import stdin\nfrom collections import deque\n\nn, c = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))\n\neaten = set()\nwhile weights and c >= weights[0]:\n    c -= weights.popleft()\n    eaten.add(c)\n\nprint(len(eaten))\n"
    }
  ],
  "created": 1649823803,
  "object": "edit"
}
2022-04-13 04:23:26.337946 fix spelling mistakes 3 ['\nfrom sys import stdin\nfrom collections import deque\n\nn, c = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))\n\neaten = set()\nwhile weights and c >= weights[0]:\n    c -= weights.popleft()\n    eaten.add(c)\n\nprint(len(eaten))\n', '\n\nfrom sys import stdin\nfrom collections import deque\n\nn, k = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))  # 큐로 만들기\n\neaten = set()\nwhile weights and c >= weights[0]:\n    c -= weights.popleft()\n    eaten.add(c)\n\nprint(len(eaten))\n', '\nfrom sys import stdin\nfrom collections import deque\n\nn, c = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))\n\neaten = set()\nwhile weights and c >= weights[0]:\n    c -= weights.popleft()\n    eaten.add(c)\n\nprint(len(eaten))\n']
2022-04-13 04:23:26.337980 size on output set 2
2022-04-13 04:23:26.337987 size on input set 2
2022-04-13 04:24:05.533652 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from sys import stdin\nfrom collections import deque\n\nn, k = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))[::-1]\n\neaten = set()\nwhile weights and k >= weights[0]:\n    k -= weights.popleft()\n    eaten.add(k)\n\nprint(len(eaten))\n"
    },
    {
      "index": 1,
      "text": "\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = deque(map(int, stdin.readline().split()))\n\n# eaten = set()\n# while weights and c >= weights[0]:\n#     c -= weights.popleft()\n#     eaten.add(c)\n\n# print(len(eaten))\n\n\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = sorted(map(int, stdin.readline().split()))\n\n# eaten = set()\n# while weights and c >= weights[0]:\n#     c -= weights.pop(0)\n#     eaten.add(c)\n\n# print(len(eaten))\n\n\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = sorted(map(int, stdin.readline().split()))\n\n# eaten = set()\n# for i in range(n):\n#     if c >= weights[i]:\n#         c -= weights[i]\n#         eaten.add(c)\n\n# print(len(eaten))\n\n\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = sorted(map(int, stdin.readline().split()))\n\n# eaten = set()\n# for i in range(n):\n#     if c >= weights[i]:\n#         c -= weights[i]\n#         eaten.add(c)\n#     else:\n#         break\n\n# print(len(eaten))\n\n\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = sorted(map(int, stdin.readline().split()))\n\n# eaten = set()\n# for i in range(n):\n#     if c >= weights[i]:\n#         c -= weights[i]\n#         eaten.add(c)\n#     else:\n#         break\n\n# print(len(eaten))\n\n\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = sorted(map(int, stdin.readline().split()))\n\n# eaten = set()\n# for i in range(n):\n#     if c >= weights[i]:\n#         c -= weights[i]\n#         eaten.add(c)\n#     else:\n#         break\n\n# print(len(eaten))\n\n\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = sorted(map(int, stdin.readline().split()))\n\n# eaten = set()\n# for i in range(n):\n#     if c >= weights[i]:\n#         c -= weights[i]\n#         eaten.add(c)\n#     else:\n#         break\n\n# print(len(eaten))\n\n\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = sorted(map(int, stdin.readline().split()))\n\n# eaten = set()\n# for i in range(n):\n#     if c >= weights[i]:\n#         c -= weights[i]\n#         eaten.add(c)\n#     else:\n#         break\n\n# print(len(eaten))\n\n\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = sorted(map(int, stdin.readline().split()))\n\n# eaten = set()\n# for i in range(n):\n#     if c >= weights[i]:\n#         c -= weights[i]\n#         eaten.add(c)\n#     else:\n#         break\n\n# print(len(eaten))\n\n\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = sorted(map(int, stdin.readline().split()))\n\n# eaten = set()\n# for i in range(n):\n#     if c >= weights[i]:\n#         c -= weights[i]\n#         eaten.add(c)\n#     else:\n#         break\n\n# print(len(eaten))\n\n\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = sorted(map(int, stdin.readline().split()))\n\n# eaten = set()\n# for i in range(n):\n#     if c >= weights[i]:\n#         c -= weights[i]\n#         eaten.add(c)\n#     else:\n#         break\n\n# print(len(eaten))\n\n\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = sorted(map(int, stdin.readline().split()))\n\n# eaten = set()\n# for i in range(n):\n#     if c >= weights[i]:\n#         c -= weights[i]\n#         eaten.add(c)\n#     else:\n#         break\n\n# print(len(eaten))\n\n\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = sorted(map(int, stdin.readline().split()))\n\n# eaten = set()\n# for i in range(n):\n#     if c >= weights[i]:\n#         c -= weights[i]\n#         eaten.add(c)\n#     else:\n#         break\n\n# print(len(eaten))\n\n\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = sorted(map(int, stdin.readline().split()))\n\n# eaten = set()\n# for i in range(n):\n#     if c >= weights[i]:\n#         c -= weights[i]\n#         eaten.add(c)\n#     else:\n#         break\n\n# print(len(eaten))\n"
    },
    {
      "index": 2,
      "text": "from sys import stdin\nfrom collections import deque\n\nn, c = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))\n\neaten = set()\nwhile weights and c >= weights[0]:\n    c -= weights.popleft()\n    eaten.add(c)\n\nprint(len(eaten))\n"
    }
  ],
  "created": 1649823806,
  "object": "edit"
}
2022-04-13 04:24:05.533952 fix syntax errors 3 ['from sys import stdin\nfrom collections import deque\n\nn, k = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))[::-1]\n\neaten = set()\nwhile weights and k >= weights[0]:\n    k -= weights.popleft()\n    eaten.add(k)\n\nprint(len(eaten))\n', '\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = deque(map(int, stdin.readline().split()))\n\n# eaten = set()\n# while weights and c >= weights[0]:\n#     c -= weights.popleft()\n#     eaten.add(c)\n\n# print(len(eaten))\n\n\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = sorted(map(int, stdin.readline().split()))\n\n# eaten = set()\n# while weights and c >= weights[0]:\n#     c -= weights.pop(0)\n#     eaten.add(c)\n\n# print(len(eaten))\n\n\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = sorted(map(int, stdin.readline().split()))\n\n# eaten = set()\n# for i in range(n):\n#     if c >= weights[i]:\n#         c -= weights[i]\n#         eaten.add(c)\n\n# print(len(eaten))\n\n\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = sorted(map(int, stdin.readline().split()))\n\n# eaten = set()\n# for i in range(n):\n#     if c >= weights[i]:\n#         c -= weights[i]\n#         eaten.add(c)\n#     else:\n#         break\n\n# print(len(eaten))\n\n\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = sorted(map(int, stdin.readline().split()))\n\n# eaten = set()\n# for i in range(n):\n#     if c >= weights[i]:\n#         c -= weights[i]\n#         eaten.add(c)\n#     else:\n#         break\n\n# print(len(eaten))\n\n\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = sorted(map(int, stdin.readline().split()))\n\n# eaten = set()\n# for i in range(n):\n#     if c >= weights[i]:\n#         c -= weights[i]\n#         eaten.add(c)\n#     else:\n#         break\n\n# print(len(eaten))\n\n\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = sorted(map(int, stdin.readline().split()))\n\n# eaten = set()\n# for i in range(n):\n#     if c >= weights[i]:\n#         c -= weights[i]\n#         eaten.add(c)\n#     else:\n#         break\n\n# print(len(eaten))\n\n\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = sorted(map(int, stdin.readline().split()))\n\n# eaten = set()\n# for i in range(n):\n#     if c >= weights[i]:\n#         c -= weights[i]\n#         eaten.add(c)\n#     else:\n#         break\n\n# print(len(eaten))\n\n\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = sorted(map(int, stdin.readline().split()))\n\n# eaten = set()\n# for i in range(n):\n#     if c >= weights[i]:\n#         c -= weights[i]\n#         eaten.add(c)\n#     else:\n#         break\n\n# print(len(eaten))\n\n\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = sorted(map(int, stdin.readline().split()))\n\n# eaten = set()\n# for i in range(n):\n#     if c >= weights[i]:\n#         c -= weights[i]\n#         eaten.add(c)\n#     else:\n#         break\n\n# print(len(eaten))\n\n\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = sorted(map(int, stdin.readline().split()))\n\n# eaten = set()\n# for i in range(n):\n#     if c >= weights[i]:\n#         c -= weights[i]\n#         eaten.add(c)\n#     else:\n#         break\n\n# print(len(eaten))\n\n\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = sorted(map(int, stdin.readline().split()))\n\n# eaten = set()\n# for i in range(n):\n#     if c >= weights[i]:\n#         c -= weights[i]\n#         eaten.add(c)\n#     else:\n#         break\n\n# print(len(eaten))\n\n\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = sorted(map(int, stdin.readline().split()))\n\n# eaten = set()\n# for i in range(n):\n#     if c >= weights[i]:\n#         c -= weights[i]\n#         eaten.add(c)\n#     else:\n#         break\n\n# print(len(eaten))\n\n\n# from sys import stdin\n# from collections import deque\n\n# n, c = map(int, stdin.readline().split())\n# weights = sorted(map(int, stdin.readline().split()))\n\n# eaten = set()\n# for i in range(n):\n#     if c >= weights[i]:\n#         c -= weights[i]\n#         eaten.add(c)\n#     else:\n#         break\n\n# print(len(eaten))\n', 'from sys import stdin\nfrom collections import deque\n\nn, c = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))\n\neaten = set()\nwhile weights and c >= weights[0]:\n    c -= weights.popleft()\n    eaten.add(c)\n\nprint(len(eaten))\n']
2022-04-13 04:24:10.163802 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\n\n\ndef solution(board):\n    height = len(board)\n    width = len(board[0])\n    answer = 0\n    for i in range(height):\n        for j in range(width):\n            if board[i][j] == 1:\n                board[i][j] = 0\n                answer += 1\n    return answer\n\n\nprint(solution([[0, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [0, 0, 1, 0]]))\nfrom collections import deque\n\nn, k = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))  # \ud050\ub85c \ub9cc\ub4e4\uae30\n\neaten = set()\nwhile weights and c >= weights[0]:\n    c -= weights.popleft()\n    eaten.add(c)\nprint(len(eaten))\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\nfrom collections import deque\n\nn, k = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))  # \ud050\ub85c \ub9cc\ub4e4\uae30\n\neaten = set()\nwhile weights and k >= weights[0]:\n    c -= weights.popleft()\n    eaten.add(k)\n\nprint(len(eaten))\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom sys import stdin\nfrom collections import deque\n\nn, k = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))  # \ud050\ub85c \ub9cc\ub4e4\uae30\n\neaten = set()\nwhile weights and k >= weights[0]:\n    k -= weights.popleft()\n    eaten.add(k)\n\nprint(len(eaten))\n"
    }
  ],
  "created": 1649823845,
  "object": "edit"
}
2022-04-13 04:24:10.164006 fix syntax errors 3 ['\n\nfrom sys import stdin\n\n\ndef solution(board):\n    height = len(board)\n    width = len(board[0])\n    answer = 0\n    for i in range(height):\n        for j in range(width):\n            if board[i][j] == 1:\n                board[i][j] = 0\n                answer += 1\n    return answer\n\n\nprint(solution([[0, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [0, 0, 1, 0]]))\nfrom collections import deque\n\nn, k = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))  # 큐로 만들기\n\neaten = set()\nwhile weights and c >= weights[0]:\n    c -= weights.popleft()\n    eaten.add(c)\nprint(len(eaten))\n', '\n\nfrom sys import stdin\nfrom collections import deque\n\nn, k = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))  # 큐로 만들기\n\neaten = set()\nwhile weights and k >= weights[0]:\n    c -= weights.popleft()\n    eaten.add(k)\n\nprint(len(eaten))\n', '\n\nfrom sys import stdin\nfrom collections import deque\n\nn, k = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))  # 큐로 만들기\n\neaten = set()\nwhile weights and k >= weights[0]:\n    k -= weights.popleft()\n    eaten.add(k)\n\nprint(len(eaten))\n']
2022-04-13 04:24:10.164045 size on output set 6
2022-04-13 04:24:10.164055 num operations 2
2022-04-13 04:24:10.164060 size on input set 1
2022-04-13 04:24:16.435439 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#N, C = map(int, input().split()) # N is number of items, C is the capacity of the bag\nN, C = 5, 5\n#w = list(map(int, input().split())) # w is the weight of the items\nw = [3, 1, 2, 1, 1]\n\ncount = 0\n\nwhile C > 0:\n    if w[count] <= C:\n        C -= w[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\n#N, W = map(int, input().split())\nN, W = 5, 5\n#wv = list(map(int, input().split()))\nwv = [3, 1, 2, 1, 1]\n\ncount = 0  # \u5165\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u5546\u54c1\u306e\u6570\nvalue = 0  # \u91cd\u3055\u306e\u7dcf\u548c\n\nwhile W > 0:\n    if wv[count] <= W:\n        W -= wv[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\n\n# N, C = map(int, input().split())\nN, C = 5, 5\n# w = list(map(int, input().split()))\nw = [3, 1, 2, 1, 1]\n\ncount = 0\n\nwhile C > 0:\n    if w[count] <= C:\n        C -= w[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n"
    }
  ],
  "created": 1649823850,
  "object": "edit"
}
2022-04-13 04:24:16.435667 fix spelling mistakes 3 ['\n\n#N, C = map(int, input().split()) # N is number of items, C is the capacity of the bag\nN, C = 5, 5\n#w = list(map(int, input().split())) # w is the weight of the items\nw = [3, 1, 2, 1, 1]\n\ncount = 0\n\nwhile C > 0:\n    if w[count] <= C:\n        C -= w[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n', '\n\n#N, W = map(int, input().split())\nN, W = 5, 5\n#wv = list(map(int, input().split()))\nwv = [3, 1, 2, 1, 1]\n\ncount = 0  # 入れることができる商品の数\nvalue = 0  # 重さの総和\n\nwhile W > 0:\n    if wv[count] <= W:\n        W -= wv[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n', '\n\n# N, C = map(int, input().split())\nN, C = 5, 5\n# w = list(map(int, input().split()))\nw = [3, 1, 2, 1, 1]\n\ncount = 0\n\nwhile C > 0:\n    if w[count] <= C:\n        C -= w[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n']
2022-04-13 04:24:16.435718 size on output set 3
2022-04-13 04:24:16.435724 size on input set 3
2022-04-13 04:24:21.977887 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# N, C = map(int, input().split())\nN, C = 5, 5\n# w = list(map(int, input().split()))\nw = [3, 1, 2, 1, 1]\n\ncount = 0\n\nwhile C > 0:\n    if w[count] <= C:\n        C -= w[count]\n        count += 1\n    else:\n        break\n\n\n#\n#\n#\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\nN, C = map(int, input().split())\n# N, C = 5, 5\nw = list(map(int, input().split()))\n# w = [3, 1, 2, 1, 1]\n\ncount = 0\n\nwhile C > 0:\n    if w[count] <= C:\n        C -= w[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\nans = sum(B)\nfor i in range(N-1):\n    if A[i+1] - A[i] == 1:\n        ans += C[A[i]-1]\nprint(ans)\n"
    }
  ],
  "created": 1649823856,
  "object": "edit"
}
2022-04-13 04:24:21.978053 fix syntax errors 3 ['\n\n# N, C = map(int, input().split())\nN, C = 5, 5\n# w = list(map(int, input().split()))\nw = [3, 1, 2, 1, 1]\n\ncount = 0\n\nwhile C > 0:\n    if w[count] <= C:\n        C -= w[count]\n        count += 1\n    else:\n        break\n\n\n#\n#\n#\nprint(count)\n', '\n\nN, C = map(int, input().split())\n# N, C = 5, 5\nw = list(map(int, input().split()))\n# w = [3, 1, 2, 1, 1]\n\ncount = 0\n\nwhile C > 0:\n    if w[count] <= C:\n        C -= w[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n', '\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\nans = sum(B)\nfor i in range(N-1):\n    if A[i+1] - A[i] == 1:\n        ans += C[A[i]-1]\nprint(ans)\n']
2022-04-13 04:24:29.306709 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN, C = map(int, input().split()) # N is number of items, C is the capacity of the bag\n#N, C = 5, 5\nw = list(map(int, input().split())) # w is the weight of the items\n#w = [3, 1, 2, 1, 1]\n\ncount = 0\n\nwhile C > 0:\n    if w[count] <= C:\n        C -= w[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\nN, C = map(int, input().split()) # N is number of items, C is the capacity of the bag\n#N, C = 5, 5\nw = list(map(int, input().split())) # w is the weight of the items\n#w = [3, 1, 2, 1, 1]\n\ncount = 0\n\nwhile C > 0:\n    if w[count] <= C:\n        C -= w[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\n\n# N, C = map(int, input().split()) # N is number of items, C is the capacity of the bag\n# N, C = 5, 5\n# #w = list(map(int, input().split())) # w is the weight of the items\n# w = [3, 1, 2, 1, 1]\n\n# count = 0\n\n# while C > 0:\n#     if w[count] <= C:\n#         C -= w[count]\n#         count += 1\n#     else:\n#         break\n\n# print(count)\n\n\ndef f(a, b):\n    c = a + b\n    return c\n\n\nprint(f(1, 2))\n"
    }
  ],
  "created": 1649823862,
  "object": "edit"
}
2022-04-13 04:24:29.306877 fix syntax errors 3 ['\n\nN, C = map(int, input().split()) # N is number of items, C is the capacity of the bag\n#N, C = 5, 5\nw = list(map(int, input().split())) # w is the weight of the items\n#w = [3, 1, 2, 1, 1]\n\ncount = 0\n\nwhile C > 0:\n    if w[count] <= C:\n        C -= w[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n', '\n\nN, C = map(int, input().split()) # N is number of items, C is the capacity of the bag\n#N, C = 5, 5\nw = list(map(int, input().split())) # w is the weight of the items\n#w = [3, 1, 2, 1, 1]\n\ncount = 0\n\nwhile C > 0:\n    if w[count] <= C:\n        C -= w[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n', '\n\n# N, C = map(int, input().split()) # N is number of items, C is the capacity of the bag\n# N, C = 5, 5\n# #w = list(map(int, input().split())) # w is the weight of the items\n# w = [3, 1, 2, 1, 1]\n\n# count = 0\n\n# while C > 0:\n#     if w[count] <= C:\n#         C -= w[count]\n#         count += 1\n#     else:\n#         break\n\n# print(count)\n\n\ndef f(a, b):\n    c = a + b\n    return c\n\n\nprint(f(1, 2))\n']
2022-04-13 04:24:34.869970 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN, W = map(int, input().split())\n#N, W = 5, 5\nwv = list(map(int, input().split()))\n#wv = [3, 1, 2, 1, 1]\n\ncount = 0  # \u5165\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u5546\u54c1\u306e\u6570\nvalue = 0  # \u91cd\u3055\u306e\u7dcf\u548c\n\nwhile W > 0:\n    if wv[count] <= W:\n        W -= wv[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\nN, W = map(int, input().split())\n#N, W = 5, 5\nwv = list(map(int, input().split()))\n#wv = [3, 1, 2, 1, 1]\n\ncount = 0  # \u5165\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u5546\u54c1\u306e\u6570\nvalue = 0  # \u91cd\u3055\u306e\u7dcf\u548c\n\nwhile W > 0:\n    if wv[count] <= W:\n        W -= wv[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\n\nN, W = map(int, input().split())\n#N, W = 5, 5\nwv = list(map(int, input().split()))\n#wv = [3, 1, 2, 1, 1]\n\ncount = 0  # \u5165\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u5546\u54c1\u306e\u6570\nvalue = 0  # \u91cd\u3055\u306e\u7dcf\u548c\n\nwhile W > 0:\n    if wv[count] <= W:\n        W -= wv[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n"
    }
  ],
  "created": 1649823869,
  "object": "edit"
}
2022-04-13 04:24:34.870135 fix syntax errors 3 ['\n\nN, W = map(int, input().split())\n#N, W = 5, 5\nwv = list(map(int, input().split()))\n#wv = [3, 1, 2, 1, 1]\n\ncount = 0  # 入れることができる商品の数\nvalue = 0  # 重さの総和\n\nwhile W > 0:\n    if wv[count] <= W:\n        W -= wv[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n', '\n\nN, W = map(int, input().split())\n#N, W = 5, 5\nwv = list(map(int, input().split()))\n#wv = [3, 1, 2, 1, 1]\n\ncount = 0  # 入れることができる商品の数\nvalue = 0  # 重さの総和\n\nwhile W > 0:\n    if wv[count] <= W:\n        W -= wv[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n', '\n\nN, W = map(int, input().split())\n#N, W = 5, 5\nwv = list(map(int, input().split()))\n#wv = [3, 1, 2, 1, 1]\n\ncount = 0  # 入れることができる商品の数\nvalue = 0  # 重さの総和\n\nwhile W > 0:\n    if wv[count] <= W:\n        W -= wv[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n']
2022-04-13 04:24:34.870241 size on output set 6
2022-04-13 04:24:34.870255 num operations 2
2022-04-13 04:24:34.870271 size on input set 1
2022-04-13 04:24:38.377155 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split()) # N = number of cookies, C = capacity of jar\n    weights = map(int, sys.stdin.readline().split()) # weights of cookies\n    weights.sort()\n    eaten = 0 # number of cookies eaten\n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print eaten\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split())\n    weights = map(int, sys.stdin.readline().split())\n    weights.sort()\n    eaten = 0\n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print eaten\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split())\n    weights = map(int, sys.stdin.readline().split())\n    weights.sort()\n    eaten = 0 \n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print eaten\n\nmain()\n"
    }
  ],
  "created": 1649823874,
  "object": "edit"
}
2022-04-13 04:24:38.377507 fix spelling mistakes 3 ['\n\nimport sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split()) # N = number of cookies, C = capacity of jar\n    weights = map(int, sys.stdin.readline().split()) # weights of cookies\n    weights.sort()\n    eaten = 0 # number of cookies eaten\n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print eaten\n\nmain()\n', 'import sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split())\n    weights = map(int, sys.stdin.readline().split())\n    weights.sort()\n    eaten = 0\n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print eaten\n\nmain()\n', '\n\nimport sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split())\n    weights = map(int, sys.stdin.readline().split())\n    weights.sort()\n    eaten = 0 \n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print eaten\n\nmain()\n']
2022-04-13 04:24:38.377539 size on output set 3
2022-04-13 04:24:38.377545 size on input set 3
2022-04-13 04:24:41.955114 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split())\n    weights = map(int, sys.stdin.readline().split())\n    weights.sort()\n    eaten = 0 \n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print eaten\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    N, C = [int(i) for i in sys.stdin.readline().split()]\n    weights = [int(i) for i in sys.stdin.readline().split()]\n    weights.sort()\n    eaten = 0 \n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print eaten\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split())\n    weights = map(int, sys.stdin.readline().split())\n    weights.sort()\n    eaten = 0 \n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print eaten\n\nmain()\n"
    }
  ],
  "created": 1649823878,
  "object": "edit"
}
2022-04-13 04:24:41.955301 fix syntax errors 3 ['\nimport sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split())\n    weights = map(int, sys.stdin.readline().split())\n    weights.sort()\n    eaten = 0 \n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print eaten\n\nmain()\n', '\n\nimport sys\n\ndef main():\n    N, C = [int(i) for i in sys.stdin.readline().split()]\n    weights = [int(i) for i in sys.stdin.readline().split()]\n    weights.sort()\n    eaten = 0 \n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print eaten\n\nmain()\n', '\nimport sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split())\n    weights = map(int, sys.stdin.readline().split())\n    weights.sort()\n    eaten = 0 \n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print eaten\n\nmain()\n']
2022-04-13 04:24:45.184190 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split())\n    weights = map(int, sys.stdin.readline().split())\n    weights.sort()\n    eaten = 0\n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print(eaten)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split())\n    weights = map(int, sys.stdin.readline().split())\n    weights.sort()\n    eaten = 0\n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print(eaten)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split())\n    weights = list(map(int, sys.stdin.readline().split()))\n    weights.sort()\n    eaten = 0\n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print(eaten)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649823881,
  "object": "edit"
}
2022-04-13 04:24:45.184365 fix syntax errors 3 ['import sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split())\n    weights = map(int, sys.stdin.readline().split())\n    weights.sort()\n    eaten = 0\n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print(eaten)\n\nif __name__ == "__main__":\n    main()\n', "import sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split())\n    weights = map(int, sys.stdin.readline().split())\n    weights.sort()\n    eaten = 0\n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print(eaten)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split())\n    weights = list(map(int, sys.stdin.readline().split()))\n    weights.sort()\n    eaten = 0\n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print(eaten)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 04:24:48.093008 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split()) # N = number of cookies, C = capacity of jar \n    weights = map(int, sys.stdin.readline().split()) # weights of cookies\n    weights.sort()\n    eaten = 0 # number of cookies eaten\n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print eaten\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split()) # N = number of cookies, C = capacity of jar\n    weights = map(int, sys.stdin.readline().split()) # weights of cookies\n    weights.sort()\n    eaten = 0 # number of cookies eaten\n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print eaten\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split()) # N = number of cookies, C = capacity of jar\n    weights = list(map(int, sys.stdin.readline().split())) # weights of cookies\n    weights.sort()\n    eaten = 0 # number of cookies eaten\n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print eaten\n\nmain()\n"
    }
  ],
  "created": 1649823885,
  "object": "edit"
}
2022-04-13 04:24:48.093247 fix syntax errors 3 ['\n\nimport sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split()) # N = number of cookies, C = capacity of jar \n    weights = map(int, sys.stdin.readline().split()) # weights of cookies\n    weights.sort()\n    eaten = 0 # number of cookies eaten\n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print eaten\n\nmain()\n', '\nimport sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split()) # N = number of cookies, C = capacity of jar\n    weights = map(int, sys.stdin.readline().split()) # weights of cookies\n    weights.sort()\n    eaten = 0 # number of cookies eaten\n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print eaten\n\nmain()\n', '\n\nimport sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split()) # N = number of cookies, C = capacity of jar\n    weights = list(map(int, sys.stdin.readline().split())) # weights of cookies\n    weights.sort()\n    eaten = 0 # number of cookies eaten\n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print eaten\n\nmain()\n']
2022-04-13 04:24:48.093294 size on output set 8
2022-04-13 04:24:48.093305 num operations 2
2022-04-13 04:24:48.093310 size on input set 1
2022-04-13 04:24:53.981581 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits \nunique_fruits = set()\n\n# iterate over the fruits\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity\n    # add the fruit to the set\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n"
    },
    {
      "index": 1,
      "text": "\n\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits.\nunique_fruits = set()\n\n# iterate over the fruits.\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity.\n    # add the fruit to the set.\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n"
    },
    {
      "index": 2,
      "text": "\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits\nunique_fruits = set()\n\n# iterate over the fruits\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity\n    # add the fruit to the set\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n"
    }
  ],
  "created": 1649823888,
  "object": "edit"
}
2022-04-13 04:24:53.981759 fix spelling mistakes 3 ['\n\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits \nunique_fruits = set()\n\n# iterate over the fruits\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity\n    # add the fruit to the set\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n', '\n\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits.\nunique_fruits = set()\n\n# iterate over the fruits.\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity.\n    # add the fruit to the set.\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n', '\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits\nunique_fruits = set()\n\n# iterate over the fruits\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity\n    # add the fruit to the set\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n']
2022-04-13 04:24:53.981791 size on output set 3
2022-04-13 04:24:53.981798 size on input set 3
2022-04-13 04:24:57.920192 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits\nunique_fruits = set()\n\n# iterate over the fruits\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity\n    # add the fruit to the set\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n"
    },
    {
      "index": 1,
      "text": "\nn, c = [int(x) for x in input().split()]\nfruits = [int(x) for x in input().split()]\n\nunique_fruits = set()\n\nfor fruit in fruits:\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\nprint(len(unique_fruits))\n"
    },
    {
      "index": 2,
      "text": "n, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits\nunique_fruits = set()\n\n# iterate over the fruits\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity\n    # add the fruit to the set\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n"
    }
  ],
  "created": 1649823894,
  "object": "edit"
}
2022-04-13 04:24:57.920395 fix syntax errors 3 ['n, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits\nunique_fruits = set()\n\n# iterate over the fruits\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity\n    # add the fruit to the set\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n', '\nn, c = [int(x) for x in input().split()]\nfruits = [int(x) for x in input().split()]\n\nunique_fruits = set()\n\nfor fruit in fruits:\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\nprint(len(unique_fruits))\n', 'n, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits\nunique_fruits = set()\n\n# iterate over the fruits\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity\n    # add the fruit to the set\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n']
2022-04-13 04:24:59.816471 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# get the number of fruits and the maximum capacity\nn, c = map(int, input().split())\n# get the list of fruits\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits \nunique_fruits = set()\n\n# iterate over the fruits\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity\n    # add the fruit to the set\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n"
    },
    {
      "index": 1,
      "text": "\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits \nunique_fruits = set()\n\n# iterate over the fruits\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity\n    # add the fruit to the set\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n"
    },
    {
      "index": 2,
      "text": "\n\n\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits \nunique_fruits = set()\n\n# iterate over the fruits\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity\n    # add the fruit to the set\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n"
    }
  ],
  "created": 1649823897,
  "object": "edit"
}
2022-04-13 04:24:59.816709 fix syntax errors 3 ['\n# get the number of fruits and the maximum capacity\nn, c = map(int, input().split())\n# get the list of fruits\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits \nunique_fruits = set()\n\n# iterate over the fruits\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity\n    # add the fruit to the set\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n', '\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits \nunique_fruits = set()\n\n# iterate over the fruits\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity\n    # add the fruit to the set\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n', '\n\n\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits \nunique_fruits = set()\n\n# iterate over the fruits\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity\n    # add the fruit to the set\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n']
2022-04-13 04:25:07.220194 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, c = map(int, input().split()) \nfruits = list(map(int, input().split())) \n \n# create a set of unique fruits. \nunique_fruits = set() \n \n# iterate over the fruits. \nfor fruit in fruits: \n    # if the fruit is not in the set and we have enough capacity. \n    # add the fruit to the set. \n    if fruit not in unique_fruits and c - fruit >= 0: \n        unique_fruits.add(fruit) \n        c -= fruit \n \n# print the number of unique fruits \nprint(len(unique_fruits)) \n"
    },
    {
      "index": 1,
      "text": "n, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits.\nunique_fruits = set()\n\n# iterate over the fruits.\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity.\n    # add the fruit to the set.\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n"
    },
    {
      "index": 2,
      "text": "\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n# create a set of unique fruits.\nunique_fruits = set()\n\n# iterate over the fruits.\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity.\n    # add the fruit to the set.\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n"
    }
  ],
  "created": 1649823899,
  "object": "edit"
}
2022-04-13 04:25:07.220418 fix syntax errors 3 ['\nn, c = map(int, input().split()) \nfruits = list(map(int, input().split())) \n \n# create a set of unique fruits. \nunique_fruits = set() \n \n# iterate over the fruits. \nfor fruit in fruits: \n    # if the fruit is not in the set and we have enough capacity. \n    # add the fruit to the set. \n    if fruit not in unique_fruits and c - fruit >= 0: \n        unique_fruits.add(fruit) \n        c -= fruit \n \n# print the number of unique fruits \nprint(len(unique_fruits)) \n', 'n, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits.\nunique_fruits = set()\n\n# iterate over the fruits.\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity.\n    # add the fruit to the set.\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n', '\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n# create a set of unique fruits.\nunique_fruits = set()\n\n# iterate over the fruits.\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity.\n    # add the fruit to the set.\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n']
2022-04-13 04:25:07.220460 size on output set 8
