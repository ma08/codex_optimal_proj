["\n\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\n\ndef pack(a, m, k):\n    res = 0\n    j = 0\n    for i in range(m):\n        if j >= len(a):\n            break\n        while j < len(a) and a[j] <= k:\n            k -= a[j]\n            j += 1\n            res += 1\n        k = m\n    return res\n\nl = 0\nr = n\nwhile l < r:\n    mid = (l + r) // 2\n    if pack(a[:mid], m, k) < n:\n        l = mid + 1\n    else:\n        r = mid\nprint(l)\n", "from collections import defaultdict, Counter\nd = defaultdict(int)\nprint(d[1])\nprint(d)\n", "n, m, k = map(int, input().split())\np = list(map(int, input().split()))\np.sort()\nans = 0\nfor i in range(m):\n    if k >= p[i]:\n        k -= p[i]\n        ans += 1\n    else:\n        break\n\nprint(ans)\n", "# \u043a\u043e\u043b-\u0432\u043e \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b, \u043a\u043e\u043b-\u0432\u043e \u0447\u0438\u0441\u0435\u043b \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438, \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0441\u0443\u043c\u043c\u0435\n\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\n\ndef pack(a, k, m):\n    res = 0\n    j = 0\n    for i in range(m):\n        if j >= len(a):\n            break\n        while j < len(a) and a[j] <= k:\n            k -= a[j]\n            j += 1\n            res += 1\n        k = m\n    return res\n\nl = 0\nr = n\nwhile l < r:\n    mid = (l + r) // 2\n    if pack(a[:mid], k, m) <= mid:\n        l = mid + 1\n    else:\n        r = mid\nprint(l)\n", "def get_sum(a, i):\n    res = 0\n    while i > 0:\n        res += a[i]\n        i -= i & -i\n    return res\n\ndef update(a, i, delta):\n    while i < len(a):\n        a[i] += delta\n        i += i & -i\n\ndef get_min(a, i):\n    res = i\n    while i < len(a):\n        if a[i] < a[res]:\n            res = i\n        i += i & -i\n    return res\n\na = [1, 2, 3, 4, 5, 6]\nupdate(a, 2, 1)\nprint(a)\nprint(get_sum(a, 5))\nprint(get_min(a, 1))\n", "def solve(n, m, k, a):\n    # \u5148\u6309\u7167\u7bb1\u5b50\u6392\u5e8f\n    a.sort(reverse=True)\n    # \u627e\u5230\u7b2c\u4e00\u4e2a\u7bb1\u5b50\u653e\u4e0d\u4e0b\u7684\u4f4d\u7f6e\n    i = 0\n    while i < n:\n        if a[i] > k:\n            break\n        i += 1\n    if i == n:\n        return n\n    # \u627e\u5230\u7b2c\u4e00\u4e2a\u7bb1\u5b50\u653e\u4e0d\u4e0b\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u4ee5\u524d\u7684\u7bb1\u5b50\u90fd\u4e0d\u80fd\u653e\u4e0b\uff0c\n    # \u6240\u4ee5\u4ece\u524d\u5f80\u540e\u6392\u5e8f\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u7bb1\u5b50\u653e\u4e0d\u4e0b\u7684\u4f4d\u7f6e\u5c31\u662f\u7b54\u6848\u3002\n    a.sort()\n    i = 0\n    while i < n:\n        if a[i] > k:\n            break\n        i += 1\n    return i\n\n\nif __name__ == '__main__':\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(solve(n, m, k, a))\n", "\n# \u627e\u5230\u7b2c\u4e00\u4e2a\u7bb1\u5b50\u653e\u4e0d\u4e0b\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u4ee5\u540e\u7684\u7bb1\u5b50\u90fd\u4e0d\u80fd\u653e\u4e0b\uff0c\u6240\u4ee5\u4ece\u524d\u5f80\u540e\u6392\u5e8f\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u7bb1\u5b50\u653e\u4e0d\u4e0b\u7684\u4f4d\u7f6e\u5c31\u662f\u7b54\u6848\n\ndef solve(n, m, k, a):\n    # \u5148\u6309\u7167\u7bb1\u5b50\u6392\u5e8f\n    a.sort(reverse=True)\n    # \u627e\u5230\u7b2c\u4e00\u4e2a\u7bb1\u5b50\u653e\u4e0d\u4e0b\u7684\u4f4d\u7f6e\n    i = 0\n    while i < n:\n        if a[i] > k:\n            break\n        i += 1\n    if i == n:\n        return n\n    a.sort()\n    i = 0\n    while i < n:\n        if a[i] > k:\n            break\n        i += 1\n    return i\n\n\nif __name__ == '__main__':\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(solve(n, m, k, a))\n", "\ndef solve(n, m, k, a):\n    # \u5148\u6309\u7167\u7bb1\u5b50\u6392\u5e8f\n    a.sort(reverse=True)\n    # \u627e\u5230\u7b2c\u4e00\u4e2a\u7bb1\u5b50\u653e\u4e0d\u4e0b\u7684\u4f4d\u7f6e\n    i = 0\n    while i < n:\n        if a[i] > k:\n            break\n        i += 1\n    if i == n:\n        return n\n    # \u627e\u5230\u7b2c\u4e00\u4e2a\u7bb1\u5b50\u653e\u4e0d\u4e0b\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u4ee5\u524d\u7684\u7bb1\u5b50\u90fd\u4e0d\u80fd\u653e\u4e0b\n    # \u6240\u4ee5\u4ece\u524d\u5f80\u540e\u6392\u5e8f\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u7bb1\u5b50\u653e\u4e0d\u4e0b\u7684\u4f4d\u7f6e\u5c31\u662f\u7b54\u6848\n    a.sort()\n    i = 0\n    while i < n:\n        if a[i] > k:\n            break\n        i += 1\n    return i\n\n\nif __name__ == '__main__':\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(solve(n, m, k, a))\n", "\ndef solve(n, m, k, a):\n    # \u5148\u6309\u7167\u7bb1\u5b50\u6392\u5e8f\n    a.sort(reverse=True)\n    # \u627e\u5230\u6700\u540e\u4e00\u4e2a\u7bb1\u5b50\u653e\u4e0d\u4e0b\u7684\u4f4d\u7f6e\n    i = 0\n    while i < n:\n        if a[i] > k:\n            break\n        i += 1\n    if i == n:\n        return n\n    # \u627e\u5230\u6700\u540e\u4e00\u4e2a\u7bb1\u5b50\u653e\u4e0d\u4e0b\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u4ee5\u540e\u7684\u7bb1\u5b50\u90fd\u4e0d\u80fd\u653e\u4e0b\n    # \u6240\u4ee5\u4ece\u524d\u5f80\u540e\u6392\u5e8f\uff0c\u627e\u5230\u6700\u540e\u4e00\u4e2a\u7bb1\u5b50\u653e\u4e0d\u4e0b\u7684\u4f4d\u7f6e\u5c31\u662f\u7b54\u6848\n    a.sort()\n    i = 0\n    while i < n:\n        if a[i] > k:\n            break\n        i += 1\n    return i\n\n\nif __name__ == '__main__':\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(solve(n, m, k, a))\n", "#!/usr/bin/env python\n# coding=utf-8\n\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\n\ndef pack(a, m, k):\n    res = 0\n    j = 0\n    for i in range(m):\n        if j >= len(a):\n            break\n        while j < len(a) and a[j] <= k:\n            k -= a[j]\n            j += 1\n            res += 1\n        k = m\n    return res\n\nl = 0\nr = n\nwhile l < r:\n    mid = (l + r) // 2\n    if pack(a[:mid], m, k) < mid:\n        l = mid + 1\n    else:\n        r = mid\nprint(l)\n", "\ndef pack(a, m, k):\n    res = 0\n    j = 0\n    for i in range(m):\n        if j >= len(a):\n            break\n        while j < len(a) and a[j] <= k:\n            k -= a[j]\n            j += 1\n            res += 1\n        k = m\n    return res\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    l = 0\n    r = n\n    while l < r:\n        mid = (l + r) // 2\n        if pack(a[:mid], m, k) < mid:\n            l = mid + 1\n        else:\n            r = mid\n    print(l)\n\nif __name__ == '__main__':\n    main()\n", "\ndef solve(n, m, k, a):\n    # \u5148\u6309\u7167\u7bb1\u5b50\u6392\u5e8f\n    a.sort(reverse=True)\n    # \u627e\u5230\u7b2c\u4e00\u4e2a\u7bb1\u5b50\u653e\u4e0d\u4e0b\u7684\u4f4d\u7f6e\n    i = 0\n    while i < n:\n        if a[i] > k:\n            break\n        i += 1\n    if i == n:\n        return n\n    # \u627e\u5230\u7b2c\u4e00\u4e2a\u7bb1\u5b50\u653e\u4e0d\u4e0b\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u4ee5\u540e\u7684\u7bb1\u5b50\u90fd\u4e0d\u80fd\u653e\u4e0b\uff0c\u6240\u4ee5\u4ece\u524d\u5f80\u540e\u6392\u5e8f\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u7bb1\u5b50\u653e\u4e0d\u4e0b\u7684\u4f4d\u7f6e\u5c31\u662f\u7b54\u6848\n    a.sort()\n    i = 0\n    while i < n:\n        if a[i] > k:\n            break\n        i += 1\n    return i\n\n\nif __name__ == '__main__':\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(solve(n, m, k, a))\n", "# \u043a\u043e\u043b-\u0432\u043e \u0447\u0438\u0441\u0435\u043b \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438, \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0441\u0443\u043c\u043c\u0435\n\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\n\n\ndef pack(a, k, m):\n    res = 0\n    j = 0\n    for i in range(m):\n        if j >= len(a):\n            break\n        while j < len(a) and a[j] <= k:\n            k -= a[j]\n            j += 1\n            res += 1\n        k = m\n    return res\n\n\nl = 0\nr = n\nwhile l < r:\n    mid = (l + r) // 2\n    if pack(a[:mid], k, m) < mid:\n        l = mid + 1\n    else:\n        r = mid\nprint(l)\n", "def solve(n, m, k, a):\n    # \u5148\u6309\u7167\u7bb1\u5b50\u6392\u5e8f\n    a.sort(reverse=True)\n    # \u627e\u5230\u7b2c\u4e00\u4e2a\u7bb1\u5b50\u653e\u4e0d\u4e0b\u7684\u4f4d\u7f6e\n    i = 0\n    while i < n:\n        if a[i] > k:\n            break\n        i += 1\n    if i == n:\n        return n\n    # \u627e\u5230\u7b2c\u4e00\u4e2a\u7bb1\u5b50\u653e\u4e0d\u4e0b\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u4ee5\u524d\u7684\u7bb1\u5b50\u90fd\u4e0d\u80fd\u653e\u4e0b\n    # \u6240\u4ee5\u4ece\u524d\u5f80\u540e\u6392\u5e8f\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u7bb1\u5b50\u653e\u4e0d\u4e0b\u7684\u4f4d\u7f6e\u5c31\u662f\u7b54\u6848\n    a.sort()\n    i = 0\n    while i < n:\n        if a[i] > k:\n            break\n        i += 1\n    return i\n\n\nif __name__ == '__main__':\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(solve(n, m, k, a))\n", "print(int(input()) + int(input()))\n"]