["import sys\n\ndef main():\n    # Read each test case\n    for line in sys.stdin:\n        # Create a list of the words in the line,\n        # stripping off the trailing newline\n        words = line.split()\n        # Create a set to store the words\n        seen = set()\n        # Check to see if each word is in the set\n        for word in words:\n            if word in seen:\n                # If it is, print yes\n                print(\"no\")\n                break\n            else:\n                # If it isn't, add it to the set and continue\n                seen.add(word)\n        else:\n            # If the for loop completes without breaking, then print no\n            print(\"yes\")\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    while True:\n        try:\n            words = list(set(input().split()))\n            if len(words) == len(set(input().split()):\n                print(\"yes\")\n            else:\n                print(\"no\")\n        except:\n            break\n\nmain()\n", "# check if all the words in a sentence are unique\nimport sys\n\ndef main():\n    words = [word for word in sys.stdin.readline().strip().split()]\n    if len(words) == len(set(words)):\n        print(\"yes\")\n    else:\n        print(\"no\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    while True:\n        try:\n            words = list(set(input().split(\" \")))\n            if len(words) == len(input().split(\" \")):\n                print(\"yes\")\n            else:\n                print(\"no\")\n        except:\n            break\n\n\nmain()\n", "\n\n#!/usr/bin/env python3\n\ndef main():\n    phrase = input()\n    words = phrase.split()\n    seen = set()\n    for word in words:\n        if word in seen:\n            print(\"no\")\n            return\n        seen.add(word)\n    print(\"yes\")\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    # Read each line\n    for line in sys.stdin:\n        # Create a list of the words in the line\n        words = line.split()\n        # Create a set to store the words\n        seen = set()\n        # Check to see if each word is in the set\n        for word in words:\n            if word in seen:\n                # If it is, print yes\n                print(\"no\")\n                break\n            else:\n                # If it isn't, add it to the set and continue\n                seen.add(word)\n        else:\n            # If the for loop completes without breaking, then print yes\n            print(\"yes\")\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    words = [word for word in sys.stdin.readline().strip().split(\" \")]\n    if len(words) == len(set(words)):\n        print(\"yes\")\n    else:\n        print(\"no\")\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    while True:\n        try:\n            words = set(input().split())\n            if len(words) == len(input().split()):\n                print(\"yes\")\n            else:\n                print(\"no\")\n        except:\n            break\n\nmain()\n", "\nimport sys\n\ndef main():\n    # Read each test case\n    for line in sys.stdin:\n\n        # Create a list of the words in the line,\n        # create a set to store the words,\n        # check to see if each word is in the set\n        # if it is, print yes, break\n        # if it isn't, add it to the set and continue\n        # if the for loop completes without breaking, then print no\n\n        words = line.split() # create a list of the words in the line\n        seen = set() # create a set to store the words\n        for word in words: # check to see if each word is in the set\n            if word in seen: # if it is, print yes, break\n                print(\"no\") # if it is, print yes\n                break # if it is, print yes, break\n            else: # if it isn't, add it to the set and continue\n                seen.add(word) # if it isn't, add it to the set and continue\n        else: # if the for loop completes without breaking, then print no\n            print(\"yes\") # if the for loop completes without breaking, then print no\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    # Read input\n    words = input().split()\n    # Create a set to store the words\n    word_set = set()\n    # Initialize a Boolean flag\n    no_repetition = True\n    # Loop over the words\n    for word in words:\n        # Check if the word is already in the set\n        if word in word_set:\n            # If it is, change the flag to False and break the loop\n            no_repetition = False\n            break\n        else:\n            # If it isn't, add it to the set\n            word_set.add(word)\n    # Print the result\n    print(\"yes\" if no_repetition else \"no\")\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    words = sys.stdin.readline().strip().split(' ')\n    phrase = set()\n    for word in words:\n        if word in phrase:\n            print('no')\n            return\n        phrase.add(word)\n    print('yes')\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/python3\n\nimport sys\n\ndef main():\n    words = sys.stdin.readline().strip().split()\n    phrase = set()\n    for word in words:\n        if word in phrase:\n            print('no')\n            sys.exit()\n        phrase.add(word)\n    print('yes')\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    # Read input\n    phrase = input()\n    # Split input into words\n    words = phrase.split()\n    # Initialize a set of words\n    unique_words = set()\n    # Iterate over words\n    for word in words:\n        # Check if word has already been added to set\n        if word in unique_words:\n            # If yes, print no and exit\n            print(\"no\")\n            exit()\n        # If not, add word to set\n        else:\n            unique_words.add(word)\n    # If no word has been repeated, print yes\n    print(\"yes\")\n\n\nif __name__ == \"__main__\":\n    main()\n\n\ndef main():\n    # Read input\n    phrase = input()\n    # Split input into words\n    words = phrase.split()\n    # Initialize a set of words\n    unique_words = set()\n    # Iterate over words\n    for word in words:\n        # Check if word has already been added to set\n        if word in unique_words:\n            # If yes, print no and exit\n            print(\"no\")\n            exit()\n        # If not, add word to set\n        else:\n            unique_words.add(word)\n    # If no word has been repeated, print yes\n    print(\"yes\")\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    # read input\n    words = input().split(\" \")\n    # create a set to store the words\n    word_set = set()\n    # initialize a boolean flag\n    no_repetition = True\n    # loop over the words\n    for word in words:\n        # check if the word is already in the set\n        if word in word_set:\n            # if it is, change the flag to false and break the loop\n            no_repetition = False\n            break\n        else:\n            # if it isn't, add it to the set\n            word_set.add(word)\n    # print the result\n    print(\"yes\" if no_repetition else \"no\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# import sys\n\n# def main():\n#     words = sys.stdin.readline().strip().split() #get input from user\n#     phrase = set()\n#     for word in words:\n#         if word in phrase:\n#             print('no')\n#             return\n#         phrase.add(word)\n#     print('yes')\n\n# if __name__ == '__main__':\n#     main()\n\ndef main(input):\n    words = input.strip().split() #get input from user\n    phrase = set() #create set to store unique words\n    for word in words: #iterate through words\n        if word in phrase: #if word is already in set\n            return False #return false\n        phrase.add(word) #add word to set\n    return True #return true\n", "\n\ndef main():\n    # read input\n    phrase = input()\n    # split input into words\n    words = phrase.split()\n    # initialize a set of words\n    unique_words = set()\n    # iterate over words\n    for word in words:\n        # check if word has already been added to set\n        if word in unique_words:\n            # if yes, print no and exit\n            print(\"no\")\n            return\n        # if not, add word to set\n        else:\n            unique_words.add(word)\n    # if no word has been repeated, print yes\n    print(\"yes\")\n\nif __name__ == \"__main__\":\n    main()\n", "def main():\n    for line in sys.stdin:\n        words = line.split()\n        if len(words) == len(set(words)):\n            print(\"yes\")\n        else:\n            print(\"no\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # Read input\n    words = input().split()\n    # Create a set to store the words\n    word_set = set()\n    # Initialise a boolean flag\n    no_repetition = True\n    # Loop over the words\n    for word in words:\n        # Check if the word is already in the set\n        if word in word_set\n            # If it is, change the flag to False and break the loop\n            no_repetition = False\n            break\n        else:\n            # If it isn't, add it to the set\n            word_set.add(word)\n    # Print the result\n    print(\"yes\" if no_repetition else \"no\")\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    words = [word for word in sys.stdin.readline().strip().split()]\n    if len(words) == len(set(words)):\n        print(\"yes\")\n    else:\n        print(\"no\")\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\ndef main():\n    phrase = input() \n    words = phrase.split() \n    seen = set()\n    for word in words: \n        if word in seen: \n            print(\"no\") \n            return \n        seen.add(word)\n    print(\"yes\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n#\n#!/usr/bin/env python3\n\ndef main():\n    phrase = input()\n    words = phrase.split()\n    seen = set()\n    for word in words\n        if word in seen:\n            print(\"no\")\n            return\n        seen.add(word)\n    print(\"yes\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    words = input().split()\n    seen = set()\n    for word in words:\n        if word in seen:\n            print('no')\n            return\n        seen.add(word)\n    print('yes')\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    words = input().split(' ')\n    seen = set()\n    for word in words:\n        if word in seen:\n            print('No')\n            return\n        seen.add(word)\n    print('Yes')\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    # Read input\n    phrase = input()\n    # Split input into words\n    words = phrase.split()\n    # Initialize a set of words\n    unique_words = set()\n    # Iterate over words\n    for word in words:\n        # Check if word has already been added to set\n        if word in unique_words:\n            # If yes, print no and exit\n            print(\"no\")\n            exit()\n        # If not, add word to set\n        else:\n            unique_words.add(word)\n    # If no word has been repeated, print yes\n    print(\"yes\")\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    # Read input\n    phrase = raw_input()\n    # Split input into words\n    words = phrase.split()\n    # Initialize a set of words\n    unique_words = set()\n    # Iterate over words\n    for word in words:\n        # Check if word has already been added to set\n        if word in unique_words:\n            # If yes, print no and exit\n            print(\"no\")\n            break\n        # If not, add word to set\n        else:\n            unique_words.add(word)\n    # If no word has been repeated, print yes\n    print(\"yes\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    words = sys.stdin.readline().strip().split() #get input from user, split into list\n    phrase = set()\n    for word in words: #for each word in the list\n        if word in phrase:\n            print('no') #if word is already in the list, print no\n            return #stop the function\n        phrase.add(word) #if word is not in the list, add it to the list\n    print('yes') #if the function makes it this far without printing no, print yes\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # read input\n    phrase = input()\n    # split input into words\n    words = phrase.split()\n    # initialize a set of words\n    unique_words = set()\n    # iterate over words\n    for word in words:\n        # check if word has already been added to set\n        if word in unique_words:\n            # if yes, print no\n            print(\"no\")\n        # if not, add word to set\n        else:\n            unique_words.add(word)\n    # if no word has been repeated, print yes\n    print(\"yes\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n#!/usr/bin/env python\n\ndef main():\n    words = input()\n    words = words.split()\n    seen = set()\n    for word in words:\n        if word in seen:\n            print(\"no\")\n            return\n        seen.add(word)\n    print(\"yes\")\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    # read input\n    words = raw_input().split()\n    # create a set to store the words\n    word_set = set()\n    # initialize a boolean flag\n    no_repetition = True\n    # loop over the words\n    for word in words:\n        # check if the word is already in the set\n        if word in word_set:\n            # if it is, change the flag to false and break the loop\n            no_repetition = False\n            break\n        else:\n            # if it isn't, add it to the set\n            word_set.add(word)\n    # print the result\n    print(\"yes\" if no_repetition else \"no\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    while True:\n        try:\n            words = set(input().split())\n            if len(words) == len(set(input().split())):\n                print(\"yes\")\n            else:\n                print(\"no\")\n        except:\n            break\n\n\nmain()\n", "import sys\n\nif __name__ == '__main__':\n    words = sys.stdin.readline().strip().split()\n    phrase = set()\n    for word in words:\n        if word in phrase:\n            print('no')\n            return\n        phrase.add(word)\n    print('yes')\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    words = input().split()\n    seen = set()\n    for word in words:\n        if word in seen:\n            print('No')\n            return\n        seen.add(word)\n    print('Yes')\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    # Read input\n    words = input().split()\n    # Create a set to store the words\n    word_set = set()\n    # Initialise a boolean flag\n    no_repetition = True\n    # Loop over the words\n    for word in words:\n        # Check if the word is already in the set\n        if word in word_set:\n            # If it is, change the flag to False and break the loop\n            no_repetition = False\n            break\n        else:\n            # If it isn't, add it to the set\n            word_set.add(word)\n    # Print the result\n    print(\"yes\" if no_repetition else \"no\")\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    words = [word for word in sys.stdin.read().strip().split()]\n    if len(words) == len(set(words)):\n        print(\"yes\")\n    else:\n        print(\"no\")\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    # Read each test case.\n    for line in sys.stdin:\n        # Create a list of the words in the line.\n        words = line.split()\n        # Create a set to store the words.\n        seen = set()\n        # Check to see if each word is in the set.\n        for word in words:\n            if word in seen:\n                # If it is, print no.\n                print(\"no\")\n                break\n            else:\n                # If it isn't, add it to the set and continue.\n                seen.add(word)\n        else:\n            # If the for loop completes without breaking, then print yes.\n            print(\"yes\")\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    while True:\n        try:\n            words = list(set(input().split()))\n            if len(words) == len(input().split()):\n                print(\"yes\")\n            else:\n                print(\"no\")\n        except EOFError:\n            break\n\n\nmain()\n", "import sys\n\ndef main():\n    # Read each test case.\n    for line in sys.stdin:\n        # Create a list of the words in the line.\n        words = line.split()\n        # Create a set to store the words.\n        seen = set()\n        # Check to see if each word is in the set.\n        for word in words:\n            if word in seen:\n                # If it is, print no.\n                print(\"no\")\n                break\n            else:\n                # If it isn't, add it to the set and continue.\n                seen.add(word)\n        else:\n            # If the for loop completes without breaking, then print yes.\n            print(\"yes\")\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    words = input().split(' ')\n    seen = set()\n    for word in words:\n        if word in seen:\n            print('no')\n            return\n        seen.add(word)\n    print('yes')\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    for i in range(n):\n        words = list(set(input().split()))\n        if len(words) == len(input().split()):\n            print(\"yes\")\n        else:\n            print(\"no\")\n\nmain()\n", "\n\ndef main():\n    # read input phrase\n    phrase = input()\n    # split phrase into words\n    words = phrase.split()\n    # initialize a set of unique words\n    unique_words = set()\n    # iterate over words\n    for word in words:\n        # check if word has already been added to set\n        if word in unique_words:\n            # if yes, print no and exit\n            print(\"no\")\n            exit()\n        # if not, add word to set\n        else:\n            unique_words.add(word)\n    # if no word has been repeated, print yes\n    print(\"yes\")\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    # Read each test case\n    for line in sys.stdin:\n        # Create a list of the words in the line\n        words = line.split()\n        # Create a set to store the words.\n        seen = set()\n        # Check to see if each word is in the set\n        for word in words:\n            if word in seen:\n                # If it is, print no\n                print(\"no\")\n                break\n            else:\n                # If it isn't, add it to the set and continue\n                seen.add(word)\n        else:\n            # If the for loop completes without breaking, then print yes\n            print(\"yes\")\n\nif __name__ == '__main__':\n    main()\n", "\n# check if all the words in a sentence are unique\nimport sys\n\ndef main():\n    words = [word for word in sys.stdin.readline().strip().split(\" \")]\n    if len(words) == len(set(words)):\n        print(\"yes\")\n    else:\n        print(\"no\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    print(\"Hello world\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n#!/usr/bin/env python3\n\ndef main():\n    phrase = input(\"enter a phrase: \")\n    words = phrase.split(\" \")\n    seen = set()\n    for word in words:\n        if word in seen:\n            print(\"no\")\n            return\n        seen.add(word)\n    print(\"yes\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n# I have changed this file again\nimport sys\n\ndef main():\n    words = [word for word in sys.stdin.readline().strip().split()]\n    if len(words) == len(set(words)):\n        print(\"yes\")\n    else:\n        print(\"no\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    print(\"Hello\")\n    print(\"World\")\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    words = [word for word in sys.stdin.readline().strip().split()]\n    if len(words) == len(set(words)):\n        print(\"yes\")\n    else:\n        print(\"no\")\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    while True:\n        try:\n            words1 = list(set(input().split()))\n            words2 = list(set(input().split()))\n            if len(words1) == len(words2):\n                print(\"yes\")\n            else:\n                print(\"no\")\n        except:\n            break\n\nmain()\n", "#!/usr/bin/env python\n\ndef main():\n    phrase = input()\n    words = phrase.split()\n    seen = set()\n    for word in words:\n        if word in seen:\n            print(\"no\")\n            return\n        seen.add(word)\n    print(\"yes\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    while True:\n        try:\n            words = list(set(input().split()))\n            if len(words) == len(input().split()):\n                print(\"yes\")\n            else:\n                print(\"no\")\n        except EOFError:\n            break\n\n\nmain()\n", "\nimport sys\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n\t# Read each test case.\n\tfor line in sys.stdin:\n\t\t# Create a list of the words in the line.\n\t\twords = line.split()\n\t\t# Create a set to store the words.\n\t\tseen = set()\n\t\t# Check to see if each word is in the set.\n\t\tfor word in words:\n\t\t\tif word in seen:\n\t\t\t\t# If it is, print no.\n\t\t\t\tprint(\"no\")\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\t# If it isn't, add it to the set and continue.\n\t\t\t\tseen.add(word)\n\t\telse:\n\t\t\t# If the for loop completes without breaking, then print yes.\n\t\t\tprint(\"yes\")\n\nif __name__ == '__main__':\n\tmain()\n", "\n#!/usr/bin/env python\n\ndef main():\n    phrase = input()\n    words = phrase.split()\n    seen = set()\n    for word in words:\n        if word in seen:\n            print(\"no\")\n            return\n        seen.add(word)\n    print(\"yes\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n#!/usr/bin/env python3\n\n\ndef main():\n    phrase = input()\n    words = phrase.split()\n    seen = set()\n    for word in words:\n        if word in seen:\n            print(\"no\")\n            return\n        seen.add(word)\n    print(\"yes\")\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    # read input\n    words = input().split(' ')\n    # create a set to store the words\n    word_set = set()\n    # initialize a boolean flag\n    no_repetition = True\n    # loop over the words\n    for word in words:\n        # check if the word is already in the set\n        if word in word_set:\n            # if it is, change the flag to false and break the loop\n            no_repetition = False\n            break\n        else:\n            # if it isn't, add it to the set\n            word_set.add(word)\n    # print the result\n    print(\"yes\" if no_repetition else \"no\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    name = input()\n    print(name)\n\nif __name__ == \"__main__\":\n    main()\n"]