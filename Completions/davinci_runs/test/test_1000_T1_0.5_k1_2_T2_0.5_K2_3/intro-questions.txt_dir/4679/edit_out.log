2022-04-12 23:30:51.020760 num operations 2
2022-04-12 23:30:51.020769 size on input set 1
2022-04-12 23:30:59.382539 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nS_A = input()\nS_B = input()\nS_C = input()\n\nplayer = 'A'\nwhile S_A+S_B+S_C != '':  # Continue as long as there are still cards in the pile\n    if player == 'A':\n        S_A, S_B, S_C = S_A[1:], S_B, S_C  # The first card is removed\n        player = S_A[0]\n        if player == '':  # If the pile is empty, the player wins\n            player = 'A'\n            break\n    elif player == 'B':\n        S_A, S_B, S_C = S_A, S_B[1:], S_C  # The first card is removed\n        player = S_B[0]\n        if player == '':  # If the pile is empty, the player wins\n            player = 'B'\n            break\n    elif player == 'C':\n        S_A, S_B, S_C = S_A, S_B, S_C[1:]  # The first card is removed\n        player = S_C[0]\n        if player == '':  # If the pile is empty, the player wins\n            player = 'C'\n            break\n\nprint(player)\n"
    },
    {
      "index": 1,
      "text": "\n\nS_A = input() # \u30b9\u30bf\u30c3\u30afA\nS_B = input() # \u30b9\u30bf\u30c3\u30afB\nS_C = input() # \u30b9\u30bf\u30c3\u30afC\n\nplayer = 'A'\nwhile S_A+S_B+S_C != '':\n    if player == 'A':\n        S_A, S_B, S_C = S_A[1:], S_B, S_C\n        player = S_A[0]\n        if player == '':\n            player = 'A'\n            break\n    elif player == 'B':\n        S_A, S_B, S_C = S_A, S_B[1:], S_C\n        player = S_B[0]\n        if player == '':\n            player = 'B'\n            break\n    elif player == 'C':\n        S_A, S_B, S_C = S_A, S_B, S_C[1:]\n        player = S_C[0]\n        if player == '':\n            player = 'C'\n            break\n\nprint(player)\n"
    },
    {
      "index": 2,
      "text": "\n\nS_A = input().upper()\nS_B = input().upper()\nS_C = input().upper()\n\nplayer = 'A'\nwhile S_A+S_B+S_C != '':\n    if player == 'A':\n        S_A, S_B, S_C = S_A[1:], S_B, S_C\n        player = S_A[0]\n        if player == '':\n            player = 'A'\n            break\n    elif player == 'B':\n        S_A, S_B, S_C = S_A, S_B[1:], S_C\n        player = S_B[0]\n        if player == '':\n            player = 'B'\n            break\n    elif player == 'C':\n        S_A, S_B, S_C = S_A, S_B, S_C[1:]\n        player = S_C[0]\n        if player == '':\n            player = 'C'\n            break\n\nprint(player)\n"
    }
  ],
  "created": 1649806251,
  "object": "edit"
}
2022-04-12 23:30:59.382749 fix spelling mistakes 3 ["\n\nS_A = input()\nS_B = input()\nS_C = input()\n\nplayer = 'A'\nwhile S_A+S_B+S_C != '':  # Continue as long as there are still cards in the pile\n    if player == 'A':\n        S_A, S_B, S_C = S_A[1:], S_B, S_C  # The first card is removed\n        player = S_A[0]\n        if player == '':  # If the pile is empty, the player wins\n            player = 'A'\n            break\n    elif player == 'B':\n        S_A, S_B, S_C = S_A, S_B[1:], S_C  # The first card is removed\n        player = S_B[0]\n        if player == '':  # If the pile is empty, the player wins\n            player = 'B'\n            break\n    elif player == 'C':\n        S_A, S_B, S_C = S_A, S_B, S_C[1:]  # The first card is removed\n        player = S_C[0]\n        if player == '':  # If the pile is empty, the player wins\n            player = 'C'\n            break\n\nprint(player)\n", "\n\nS_A = input() # スタックA\nS_B = input() # スタックB\nS_C = input() # スタックC\n\nplayer = 'A'\nwhile S_A+S_B+S_C != '':\n    if player == 'A':\n        S_A, S_B, S_C = S_A[1:], S_B, S_C\n        player = S_A[0]\n        if player == '':\n            player = 'A'\n            break\n    elif player == 'B':\n        S_A, S_B, S_C = S_A, S_B[1:], S_C\n        player = S_B[0]\n        if player == '':\n            player = 'B'\n            break\n    elif player == 'C':\n        S_A, S_B, S_C = S_A, S_B, S_C[1:]\n        player = S_C[0]\n        if player == '':\n            player = 'C'\n            break\n\nprint(player)\n", "\n\nS_A = input().upper()\nS_B = input().upper()\nS_C = input().upper()\n\nplayer = 'A'\nwhile S_A+S_B+S_C != '':\n    if player == 'A':\n        S_A, S_B, S_C = S_A[1:], S_B, S_C\n        player = S_A[0]\n        if player == '':\n            player = 'A'\n            break\n    elif player == 'B':\n        S_A, S_B, S_C = S_A, S_B[1:], S_C\n        player = S_B[0]\n        if player == '':\n            player = 'B'\n            break\n    elif player == 'C':\n        S_A, S_B, S_C = S_A, S_B, S_C[1:]\n        player = S_C[0]\n        if player == '':\n            player = 'C'\n            break\n\nprint(player)\n"]
2022-04-12 23:30:59.382804 size on output set 3
2022-04-12 23:30:59.382814 size on input set 3
2022-04-12 23:31:05.155328 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nS_A = list(input()) # \u30b9\u30bf\u30c3\u30afA\nS_B = list(input()) # \u30b9\u30bf\u30c3\u30afB\nS_C = list(input()) # \u30b9\u30bf\u30c3\u30afC\n\nplayer = 'A'\nwhile len(S_A)+len(S_B)+len(S_C) != 0:\n    if player == 'A':\n        S_A, S_B, S_C = S_A[1:], S_B, S_C\n        player = S_A[0]\n        if len(S_A) == 0:\n            player = 'A'\n            break\n    elif player == 'B':\n        S_A, S_B, S_C = S_A, S_B[1:], S_C\n        player = S_B[0]\n        if len(S_B) == 0:\n            player = 'B'\n            break\n    elif player == 'C':\n        S_A, S_B, S_C = S_A, S_B, S_C[1:]\n        player = S_C[0]\n        if len(S_C) == 0:\n            player = 'C'\n            break\n\nprint(player)\n"
    },
    {
      "index": 1,
      "text": "\nS_A = input() # \u30b9\u30bf\u30c3\u30afA\nS_B = input() # \u30b9\u30bf\u30c3\u30afB\nS_C = input() # \u30b9\u30bf\u30c3\u30afC\n\nplayer = 'A'\nwhile S_A+S_B+S_C != '':\n    if player == 'A':\n        S_A, S_B, S_C = S_A[1:], S_B, S_C\n        player = S_A[0]\n        if player == '':\n            player = 'A'\n            break\n    elif player == 'B':\n        S_A, S_B, S_C = S_A, S_B[1:], S_C\n        player = S_B[0]\n        if player == '':\n            player = 'B'\n            break\n    elif player == 'C':\n        S_A, S_B, S_C = S_A, S_B, S_C[1:]\n        player = S_C[0]\n        if player == '':\n            player = 'C'\n            break\n\nprint(player)\n"
    },
    {
      "index": 2,
      "text": "import sys\nsys.setrecursionlimit(10**6)\n\nS_A = input() # \u30b9\u30bf\u30c3\u30afA\nS_B = input() # \u30b9\u30bf\u30c3\u30afB\nS_C = input() # \u30b9\u30bf\u30c3\u30afC\n\nplayer = 'A'\nwhile S_A+S_B+S_C != '' or player == '':\n    if player == 'A':\n        S_A, S_B, S_C = S_A[1:], S_B, S_C\n        player = S_A[0]\n        if player == '':\n            player = 'A'\n            break\n    elif player == 'B':\n        S_A, S_B, S_C = S_A, S_B[1:], S_C\n        player = S_B[0]\n        if player == '':\n            player = 'B'\n            break\n    elif player == 'C':\n        S_A, S_B, S_C = S_A, S_B, S_C[1:]\n        player = S_C[0]\n        if player == '':\n            player = 'C'\n            break\n\nprint(player)\n"
    }
  ],
  "created": 1649806259,
  "object": "edit"
}
2022-04-12 23:31:05.155509 fix syntax errors 3 ["\n\nS_A = list(input()) # スタックA\nS_B = list(input()) # スタックB\nS_C = list(input()) # スタックC\n\nplayer = 'A'\nwhile len(S_A)+len(S_B)+len(S_C) != 0:\n    if player == 'A':\n        S_A, S_B, S_C = S_A[1:], S_B, S_C\n        player = S_A[0]\n        if len(S_A) == 0:\n            player = 'A'\n            break\n    elif player == 'B':\n        S_A, S_B, S_C = S_A, S_B[1:], S_C\n        player = S_B[0]\n        if len(S_B) == 0:\n            player = 'B'\n            break\n    elif player == 'C':\n        S_A, S_B, S_C = S_A, S_B, S_C[1:]\n        player = S_C[0]\n        if len(S_C) == 0:\n            player = 'C'\n            break\n\nprint(player)\n", "\nS_A = input() # スタックA\nS_B = input() # スタックB\nS_C = input() # スタックC\n\nplayer = 'A'\nwhile S_A+S_B+S_C != '':\n    if player == 'A':\n        S_A, S_B, S_C = S_A[1:], S_B, S_C\n        player = S_A[0]\n        if player == '':\n            player = 'A'\n            break\n    elif player == 'B':\n        S_A, S_B, S_C = S_A, S_B[1:], S_C\n        player = S_B[0]\n        if player == '':\n            player = 'B'\n            break\n    elif player == 'C':\n        S_A, S_B, S_C = S_A, S_B, S_C[1:]\n        player = S_C[0]\n        if player == '':\n            player = 'C'\n            break\n\nprint(player)\n", "import sys\nsys.setrecursionlimit(10**6)\n\nS_A = input() # スタックA\nS_B = input() # スタックB\nS_C = input() # スタックC\n\nplayer = 'A'\nwhile S_A+S_B+S_C != '' or player == '':\n    if player == 'A':\n        S_A, S_B, S_C = S_A[1:], S_B, S_C\n        player = S_A[0]\n        if player == '':\n            player = 'A'\n            break\n    elif player == 'B':\n        S_A, S_B, S_C = S_A, S_B[1:], S_C\n        player = S_B[0]\n        if player == '':\n            player = 'B'\n            break\n    elif player == 'C':\n        S_A, S_B, S_C = S_A, S_B, S_C[1:]\n        player = S_C[0]\n        if player == '':\n            player = 'C'\n            break\n\nprint(player)\n"]
2022-04-12 23:31:13.528381 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nS_A = input().upper()\nS_B = input().upper()\nS_C = input().upper()\n\nplayer = 'A'\nwhile S_A+S_B+S_C != '':\n    if player == 'A':\n        S_A, S_B, S_C = S_A[1:], S_B, S_C\n        player = S_A[0]\n        if S_A == '':\n            player = 'A'\n            break\n    elif player == 'B':\n        S_A, S_B, S_C = S_A, S_B[1:], S_C\n        player = S_B[0]\n        if S_B == '':\n            player = 'B'\n            break\n    elif player == 'C':\n        S_A, S_B, S_C = S_A, S_B, S_C[1:]\n        player = S_C[0]\n        if S_C == '':\n            player = 'C'\n            break\n\nprint(player)\n"
    },
    {
      "index": 1,
      "text": "\n\nS_A = input().upper()\nS_B = input().upper()\nS_C = input().upper()\n\nplayer = 'A'\nwhile S_A+S_B+S_C != '' and len(S_A) > 0 and len(S_B) > 0 and len(S_C) > 0:\n    if player == 'A':\n        S_A, S_B, S_C = S_A[1:], S_B, S_C\n        player = S_A[0]\n    elif player == 'B':\n        S_A, S_B, S_C = S_A, S_B[1:], S_C\n        player = S_B[0]\n    elif player == 'C':\n        S_A, S_B, S_C = S_A, S_B, S_C[1:]\n        player = S_C[0]\n\nprint(player)\n"
    },
    {
      "index": 2,
      "text": "N = int(input())\nA = list(map(int, input().split()))\n\n\nans = 0\nfor i in range(N):\n    if i % 2 == 0:\n        ans += A[i]\n\nprint(ans)\n"
    }
  ],
  "created": 1649806265,
  "object": "edit"
}
2022-04-12 23:31:13.528604 fix syntax errors 3 ["\n\nS_A = input().upper()\nS_B = input().upper()\nS_C = input().upper()\n\nplayer = 'A'\nwhile S_A+S_B+S_C != '':\n    if player == 'A':\n        S_A, S_B, S_C = S_A[1:], S_B, S_C\n        player = S_A[0]\n        if S_A == '':\n            player = 'A'\n            break\n    elif player == 'B':\n        S_A, S_B, S_C = S_A, S_B[1:], S_C\n        player = S_B[0]\n        if S_B == '':\n            player = 'B'\n            break\n    elif player == 'C':\n        S_A, S_B, S_C = S_A, S_B, S_C[1:]\n        player = S_C[0]\n        if S_C == '':\n            player = 'C'\n            break\n\nprint(player)\n", "\n\nS_A = input().upper()\nS_B = input().upper()\nS_C = input().upper()\n\nplayer = 'A'\nwhile S_A+S_B+S_C != '' and len(S_A) > 0 and len(S_B) > 0 and len(S_C) > 0:\n    if player == 'A':\n        S_A, S_B, S_C = S_A[1:], S_B, S_C\n        player = S_A[0]\n    elif player == 'B':\n        S_A, S_B, S_C = S_A, S_B[1:], S_C\n        player = S_B[0]\n    elif player == 'C':\n        S_A, S_B, S_C = S_A, S_B, S_C[1:]\n        player = S_C[0]\n\nprint(player)\n", 'N = int(input())\nA = list(map(int, input().split()))\n\n\nans = 0\nfor i in range(N):\n    if i % 2 == 0:\n        ans += A[i]\n\nprint(ans)\n']
2022-04-12 23:31:16.219396 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nS_A = input()\nS_B = input()\nS_C = input()\n\nplayer = 'A'\nwhile S_A+S_B+S_C != '':  # Continue as long as there are still cards in the pile\n    if player == 'A':\n        S_A, S_B, S_C = S_A[1:], S_B, S_C  # The first card is removed\n        player = S_A[0]\n        if player == '':  # If the pile is empty, the player wins\n            player = 'A'\n            break\n    elif player == 'B':\n        S_A, S_B, S_C = S_A, S_B[1:], S_C  # The first card is removed\n        player = S_B[0]\n        if player == '':  # If the pile is empty, the player wins\n            player = 'B'\n            break\n    elif player == 'C':\n        S_A, S_B, S_C = S_A, S_B, S_C[1:]  # The first card is removed\n        player = S_C[0]\n        if player == '':  # If the pile is empty, the player wins\n            player = 'C'\n            break\n\nprint(player)\n"
    },
    {
      "index": 1,
      "text": "\n\nS_A = input()\nS_B = input()\nS_C = input()\n\nplayer = 'A'\nwhile S_A + S_B + S_C != '':  # Continue as long as there are still cards in the pile\n    if player == 'A':\n        S_A, S_B, S_C = S_A[1:], S_B, S_C  # The first card is removed\n        player = S_A[0]\n        if player == '':  # If the pile is empty, the player wins\n            player = 'A'\n            break\n    elif player == 'B':\n        S_A, S_B, S_C = S_A, S_B[1:], S_C  # The first card is removed\n        player = S_B[0]\n        if player == '':  # If the pile is empty, the player wins\n            player = 'B'\n            break\n    elif player == 'C':\n        S_A, S_B, S_C = S_A, S_B, S_C[1:]  # The first card is removed\n        player = S_C[0]\n        if player == '':  # If the pile is empty, the player wins\n            player = 'C'\n            break\n\nprint(player)\n"
    },
    {
      "index": 2,
      "text": "\nS_A = input()\nS_B = input()\nS_C = input()\n\nplayer = 'A'\nwhile S_A+S_B+S_C != '':  # Continue as long as there are still cards in the pile\n    if player == 'A':\n        S_A, S_B, S_C = S_A[1:], S_B, S_C  # The first card is removed\n        player = S_A[0]\n        if player == '':  # If the pile is empty, the player wins\n            player = 'A'\n            break\n    elif player == 'B':\n        S_A, S_B, S_C = S_A, S_B[1:], S_C  # The first card is removed\n        player = S_B[0]\n        if player == '':  # If the pile is empty, the player wins\n            player = 'B'\n            break\n    elif player == 'C':\n        S_A, S_B, S_C = S_A, S_B, S_C[1:]  # The first card is removed\n        player = S_C[0]\n        if player == '':  # If the pile is empty, the player wins\n            player = 'C'\n            break\n\nprint(player)\n"
    }
  ],
  "created": 1649806273,
  "object": "edit"
}
2022-04-12 23:31:16.219584 fix syntax errors 3 ["#!/usr/bin/env python3\n\nS_A = input()\nS_B = input()\nS_C = input()\n\nplayer = 'A'\nwhile S_A+S_B+S_C != '':  # Continue as long as there are still cards in the pile\n    if player == 'A':\n        S_A, S_B, S_C = S_A[1:], S_B, S_C  # The first card is removed\n        player = S_A[0]\n        if player == '':  # If the pile is empty, the player wins\n            player = 'A'\n            break\n    elif player == 'B':\n        S_A, S_B, S_C = S_A, S_B[1:], S_C  # The first card is removed\n        player = S_B[0]\n        if player == '':  # If the pile is empty, the player wins\n            player = 'B'\n            break\n    elif player == 'C':\n        S_A, S_B, S_C = S_A, S_B, S_C[1:]  # The first card is removed\n        player = S_C[0]\n        if player == '':  # If the pile is empty, the player wins\n            player = 'C'\n            break\n\nprint(player)\n", "\n\nS_A = input()\nS_B = input()\nS_C = input()\n\nplayer = 'A'\nwhile S_A + S_B + S_C != '':  # Continue as long as there are still cards in the pile\n    if player == 'A':\n        S_A, S_B, S_C = S_A[1:], S_B, S_C  # The first card is removed\n        player = S_A[0]\n        if player == '':  # If the pile is empty, the player wins\n            player = 'A'\n            break\n    elif player == 'B':\n        S_A, S_B, S_C = S_A, S_B[1:], S_C  # The first card is removed\n        player = S_B[0]\n        if player == '':  # If the pile is empty, the player wins\n            player = 'B'\n            break\n    elif player == 'C':\n        S_A, S_B, S_C = S_A, S_B, S_C[1:]  # The first card is removed\n        player = S_C[0]\n        if player == '':  # If the pile is empty, the player wins\n            player = 'C'\n            break\n\nprint(player)\n", "\nS_A = input()\nS_B = input()\nS_C = input()\n\nplayer = 'A'\nwhile S_A+S_B+S_C != '':  # Continue as long as there are still cards in the pile\n    if player == 'A':\n        S_A, S_B, S_C = S_A[1:], S_B, S_C  # The first card is removed\n        player = S_A[0]\n        if player == '':  # If the pile is empty, the player wins\n            player = 'A'\n            break\n    elif player == 'B':\n        S_A, S_B, S_C = S_A, S_B[1:], S_C  # The first card is removed\n        player = S_B[0]\n        if player == '':  # If the pile is empty, the player wins\n            player = 'B'\n            break\n    elif player == 'C':\n        S_A, S_B, S_C = S_A, S_B, S_C[1:]  # The first card is removed\n        player = S_C[0]\n        if player == '':  # If the pile is empty, the player wins\n            player = 'C'\n            break\n\nprint(player)\n"]
2022-04-12 23:31:16.219684 size on output set 9
2022-04-12 23:31:16.219696 num operations 2
2022-04-12 23:31:16.219701 size on input set 1
2022-04-12 23:31:23.465468 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n# \u81ea\u5206\u306e\u5f97\u610f\u306a\u8a00\u8a9e\u3067\n# Let's \u30c1\u30e3\u30ec\u30f3\u30b8\uff01\uff01\nimport sys\n\ndef main():\n    sa = sys.stdin.readline().rstrip() # \u6a19\u6e96\u5165\u529b\n    sb = sys.stdin.readline().rstrip() # \u6a19\u6e96\u5165\u529b\n    sc = sys.stdin.readline().rstrip() # \u6a19\u6e96\u5165\u529b\n\n    turn = \"A\" # A\u304b\u3089\u59cb\u3081\u308b\n    while True:\n        if turn == \"A\": # A\u306e\u30bf\u30fc\u30f3\n            if len(sa) == 0:\n                break\n            turn = sa[0]\n            sa = sa[1:]\n        elif turn == \"B\": # B\u306e\u30bf\u30fc\u30f3\n            if len(sb) == 0:\n                break\n            turn = sb[0]\n            sb = sb[1:]\n        elif turn == \"C\": # C\u306e\u30bf\u30fc\u30f3\n            if len(sc) == 0:\n                break\n            turn = sc[0]\n            sc = sc[1:]\n    print(turn)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    sa = sys.stdin.readline().rstrip()\n    sb = sys.stdin.readline().rstrip()\n    sc = sys.stdin.readline().rstrip()\n\n    turn = \"A\"\n    while True:\n        if turn == \"A\":\n            if len(sa) == 0:\n                break\n            turn = sa[0]\n            sa = sa[1:]\n        elif turn == \"B\":\n            if len(sb) == 0:\n                break\n            turn = sb[0]\n            sb = sb[1:]\n        elif turn == \"C\":\n            if len(sc) == 0:\n                break\n            turn = sc[0]\n            sc = sc[1:]\n    print(turn)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    sa = sys.stdin.readline().rstrip()\n    sb = sys.stdin.readline().rstrip()\n    sc = sys.stdin.readline().rstrip()\n\n    turn = \"A\"\n    while True:\n        if turn == \"A\":\n            if len(sa) == 0:\n                break\n            turn = sa[0]\n            sa = sa[1:]\n        elif turn == \"B\":\n            if len(sb) == 0:\n                break\n            turn = sb[0]\n            sb = sb[1:]\n        elif turn == \"C\":\n            if len(sc) == 0:\n                break\n            turn = sc[0]\n            sc = sc[1:]\n    print(turn)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649806276,
  "object": "edit"
}
2022-04-12 23:31:23.465691 fix spelling mistakes 3 ['\n# 自分の得意な言語で\n# Let\'s チャレンジ！！\nimport sys\n\ndef main():\n    sa = sys.stdin.readline().rstrip() # 標準入力\n    sb = sys.stdin.readline().rstrip() # 標準入力\n    sc = sys.stdin.readline().rstrip() # 標準入力\n\n    turn = "A" # Aから始める\n    while True:\n        if turn == "A": # Aのターン\n            if len(sa) == 0:\n                break\n            turn = sa[0]\n            sa = sa[1:]\n        elif turn == "B": # Bのターン\n            if len(sb) == 0:\n                break\n            turn = sb[0]\n            sb = sb[1:]\n        elif turn == "C": # Cのターン\n            if len(sc) == 0:\n                break\n            turn = sc[0]\n            sc = sc[1:]\n    print(turn)\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    sa = sys.stdin.readline().rstrip()\n    sb = sys.stdin.readline().rstrip()\n    sc = sys.stdin.readline().rstrip()\n\n    turn = "A"\n    while True:\n        if turn == "A":\n            if len(sa) == 0:\n                break\n            turn = sa[0]\n            sa = sa[1:]\n        elif turn == "B":\n            if len(sb) == 0:\n                break\n            turn = sb[0]\n            sb = sb[1:]\n        elif turn == "C":\n            if len(sc) == 0:\n                break\n            turn = sc[0]\n            sc = sc[1:]\n    print(turn)\n\nif __name__ == \'__main__\':\n    main()\n', 'import sys\n\ndef main():\n    sa = sys.stdin.readline().rstrip()\n    sb = sys.stdin.readline().rstrip()\n    sc = sys.stdin.readline().rstrip()\n\n    turn = "A"\n    while True:\n        if turn == "A":\n            if len(sa) == 0:\n                break\n            turn = sa[0]\n            sa = sa[1:]\n        elif turn == "B":\n            if len(sb) == 0:\n                break\n            turn = sb[0]\n            sb = sb[1:]\n        elif turn == "C":\n            if len(sc) == 0:\n                break\n            turn = sc[0]\n            sc = sc[1:]\n    print(turn)\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 23:31:23.465745 size on output set 3
2022-04-12 23:31:23.465752 size on input set 3
2022-04-12 23:31:26.978666 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    sa = sys.stdin.readline().rstrip()\n    sb = sys.stdin.readline().rstrip()\n    sc = sys.stdin.readline().rstrip()\n\n    turn = 'A'\n    while True:\n        if turn == 'A':\n            if len(sa) == 0:\n                break\n            turn = sa[0]\n            sa = sa[1:]\n        elif turn == 'B':\n            if len(sb) == 0:\n                break\n            turn = sb[0]\n            sb = sb[1:]\n        elif turn == 'C':\n            if len(sc) == 0:\n                break\n            turn = sc[0]\n            sc = sc[1:]\n    print(turn)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    sa = sys.stdin.readline().rstrip()\n    sb = sys.stdin.readline().rstrip()\n    sc = sys.stdin.readline().rstrip()\n\n    turn = \"A\"\n    while True:\n        if turn == \"A\":\n            if len(sa) == 0:\n                print(\"A\")\n                return\n            turn = sa[0]\n            sa = sa[1:]\n        elif turn == \"B\":\n            if len(sb) == 0:\n                print(\"B\")\n                return\n            turn = sb[0]\n            sb = sb[1:]\n        elif turn == \"C\":\n            if len(sc) == 0:\n                print(\"C\")\n                return\n            turn = sc[0]\n            sc = sc[1:]\n    print(turn)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    sa = sys.stdin.readline().rstrip()\n    sb = sys.stdin.readline().rstrip()\n    sc = sys.stdin.readline().rstrip()\n\n    turn = \"A\"\n    while True:\n        if turn == \"A\":\n            if len(sa) == 0:\n                break\n            turn = sa[0]\n            sa = sa[1:]\n        elif turn == \"B\":\n            if len(sb) == 0:\n                break\n            turn = sb[0]\n            sb = sb[1:]\n        elif turn == \"C\":\n            if len(sc) == 0:\n                break\n            turn = sc[0]\n            sc = sc[1:]\n    print(turn)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649806283,
  "object": "edit"
}
2022-04-12 23:31:26.978840 fix syntax errors 3 ["import sys\n\ndef main():\n    sa = sys.stdin.readline().rstrip()\n    sb = sys.stdin.readline().rstrip()\n    sc = sys.stdin.readline().rstrip()\n\n    turn = 'A'\n    while True:\n        if turn == 'A':\n            if len(sa) == 0:\n                break\n            turn = sa[0]\n            sa = sa[1:]\n        elif turn == 'B':\n            if len(sb) == 0:\n                break\n            turn = sb[0]\n            sb = sb[1:]\n        elif turn == 'C':\n            if len(sc) == 0:\n                break\n            turn = sc[0]\n            sc = sc[1:]\n    print(turn)\n\nif __name__ == '__main__':\n    main()\n", 'import sys\n\ndef main():\n    sa = sys.stdin.readline().rstrip()\n    sb = sys.stdin.readline().rstrip()\n    sc = sys.stdin.readline().rstrip()\n\n    turn = "A"\n    while True:\n        if turn == "A":\n            if len(sa) == 0:\n                print("A")\n                return\n            turn = sa[0]\n            sa = sa[1:]\n        elif turn == "B":\n            if len(sb) == 0:\n                print("B")\n                return\n            turn = sb[0]\n            sb = sb[1:]\n        elif turn == "C":\n            if len(sc) == 0:\n                print("C")\n                return\n            turn = sc[0]\n            sc = sc[1:]\n    print(turn)\n\nif __name__ == \'__main__\':\n    main()\n', 'import sys\n\ndef main():\n    sa = sys.stdin.readline().rstrip()\n    sb = sys.stdin.readline().rstrip()\n    sc = sys.stdin.readline().rstrip()\n\n    turn = "A"\n    while True:\n        if turn == "A":\n            if len(sa) == 0:\n                break\n            turn = sa[0]\n            sa = sa[1:]\n        elif turn == "B":\n            if len(sb) == 0:\n                break\n            turn = sb[0]\n            sb = sb[1:]\n        elif turn == "C":\n            if len(sc) == 0:\n                break\n            turn = sc[0]\n            sc = sc[1:]\n    print(turn)\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 23:31:33.201624 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# \u81ea\u5206\u306e\u5f97\u610f\u306a\u8a00\u8a9e\u3067\n# Let's \u30c1\u30e3\u30ec\u30f3\u30b8\uff01\uff01\nimport sys\n\ndef main():\n    sa = sys.stdin.readline().rstrip()\n    sb = sys.stdin.readline().rstrip()\n    sc = sys.stdin.readline().rstrip()\n\n    turn = \"a\"\n    while True:\n        if turn == \"a\":\n            if len(sa) == 0:\n                break\n            turn = sa[0]\n            sa = sa[1:]\n        elif turn == \"b\":\n            if len(sb) == 0:\n                break\n            turn = sb[0]\n            sb = sb[1:]\n        elif turn == \"c\":\n            if len(sc) == 0:\n                break\n            turn = sc[0]\n            sc = sc[1:]\n    print(turn)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n# \u81ea\u5206\u306e\u5f97\u610f\u306a\u8a00\u8a9e\u3067\n# Let's \u30c1\u30e3\u30ec\u30f3\u30b8\uff01\uff01\nimport sys\n\ndef main():\n    sa = sys.stdin.readline().rstrip()\n    sb = sys.stdin.readline().rstrip()\n    sc = sys.stdin.readline().rstrip()\n\n    turn = \"A\" # A\u304b\u3089\u59cb\u3081\u308b\n    while True:\n        if turn == \"A\": # A\u306e\u30bf\u30fc\u30f3\n            if len(sa) == 0:\n                break\n            turn = sa[0]\n            sa = sa[1:]\n        elif turn == \"B\": # B\u306e\u30bf\u30fc\u30f3\n            if len(sb) == 0:\n                break\n            turn = sb[0]\n            sb = sb[1:]\n        elif turn == \"C\": # C\u306e\u30bf\u30fc\u30f3\n            if len(sc) == 0:\n                break\n            turn = sc[0]\n            sc = sc[1:]\n    print(turn)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n# \u81ea\u5206\u306e\u5f97\u610f\u306a\u8a00\u8a9e\u3067\n# Let's \u30c1\u30e3\u30ec\u30f3\u30b8\uff01\uff01\nimport sys\n\ndef main():\n    sa = sys.stdin.readline().rstrip()\n    sb = sys.stdin.readline().rstrip()\n    sc = sys.stdin.readline().rstrip()\n\n    turn = \"A\"\n    while True:\n        if turn == \"A\":\n            if len(sa) == 0:\n                break\n            turn = sa[0]\n            sa = sa[1:]\n        elif turn == \"B\":\n            if len(sb) == 0:\n                break\n            turn = sb[0]\n            sb = sb[1:]\n        elif turn == \"C\":\n            if len(sc) == 0:\n                break\n            turn = sc[0]\n            sc = sc[1:]\n    print(turn)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649806287,
  "object": "edit"
}
2022-04-12 23:31:33.201810 fix syntax errors 3 ['\n# 自分の得意な言語で\n# Let\'s チャレンジ！！\nimport sys\n\ndef main():\n    sa = sys.stdin.readline().rstrip()\n    sb = sys.stdin.readline().rstrip()\n    sc = sys.stdin.readline().rstrip()\n\n    turn = "a"\n    while True:\n        if turn == "a":\n            if len(sa) == 0:\n                break\n            turn = sa[0]\n            sa = sa[1:]\n        elif turn == "b":\n            if len(sb) == 0:\n                break\n            turn = sb[0]\n            sb = sb[1:]\n        elif turn == "c":\n            if len(sc) == 0:\n                break\n            turn = sc[0]\n            sc = sc[1:]\n    print(turn)\n\nif __name__ == \'__main__\':\n    main()\n', '\n# 自分の得意な言語で\n# Let\'s チャレンジ！！\nimport sys\n\ndef main():\n    sa = sys.stdin.readline().rstrip()\n    sb = sys.stdin.readline().rstrip()\n    sc = sys.stdin.readline().rstrip()\n\n    turn = "A" # Aから始める\n    while True:\n        if turn == "A": # Aのターン\n            if len(sa) == 0:\n                break\n            turn = sa[0]\n            sa = sa[1:]\n        elif turn == "B": # Bのターン\n            if len(sb) == 0:\n                break\n            turn = sb[0]\n            sb = sb[1:]\n        elif turn == "C": # Cのターン\n            if len(sc) == 0:\n                break\n            turn = sc[0]\n            sc = sc[1:]\n    print(turn)\n\nif __name__ == \'__main__\':\n    main()\n', '\n# 自分の得意な言語で\n# Let\'s チャレンジ！！\nimport sys\n\ndef main():\n    sa = sys.stdin.readline().rstrip()\n    sb = sys.stdin.readline().rstrip()\n    sc = sys.stdin.readline().rstrip()\n\n    turn = "A"\n    while True:\n        if turn == "A":\n            if len(sa) == 0:\n                break\n            turn = sa[0]\n            sa = sa[1:]\n        elif turn == "B":\n            if len(sb) == 0:\n                break\n            turn = sb[0]\n            sb = sb[1:]\n        elif turn == "C":\n            if len(sc) == 0:\n                break\n            turn = sc[0]\n            sc = sc[1:]\n    print(turn)\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 23:31:36.824468 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    sa = sys.stdin.readline().rstrip()\n    sb = sys.stdin.readline().rstrip()\n    sc = sys.stdin.readline().rstrip()\n\n    turn = \"A\"\n    while True:\n        if turn == \"A\":\n            if len(sa) == 0:\n                break\n            turn = sa[0]\n            sa = sa[1:]\n        elif turn == \"B\":\n            if len(sb) == 0:\n                break\n            turn = sb[0]\n            sb = sb[1:]\n        elif turn == \"C\":\n            if len(sc) == 0:\n                break\n            turn = sc[0]\n            sc = sc[1:]\n    print(turn.upper())\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    sa = input()\n    sb = input()\n    sc = input()\n\n    turn = \"A\"\n    while True:\n        if turn == \"A\":\n            if len(sa) == 0:\n                break\n            turn = sa[0]\n            sa = sa[1:]\n        elif turn == \"B\":\n            if len(sb) == 0:\n                break\n            turn = sb[0]\n            sb = sb[1:]\n        elif turn == \"C\":\n            if len(sc) == 0:\n                break\n            turn = sc[0]\n            sc = sc[1:]\n    print(turn)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    sa = sys.stdin.readline().rstrip()[::-1]\n    sb = sys.stdin.readline().rstrip()[::-1]\n    sc = sys.stdin.readline().rstrip()[::-1]\n\n    turn = \"A\"\n    while True:\n        if turn == \"A\":\n            if len(sa) == 0:\n                break\n            turn = sa[0]\n            sa = sa[1:]\n        elif turn == \"B\":\n            if len(sb) == 0:\n                break\n            turn = sb[0]\n            sb = sb[1:]\n        elif turn == \"C\":\n            if len(sc) == 0:\n                break\n            turn = sc[0]\n            sc = sc[1:]\n    print(turn)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649806293,
  "object": "edit"
}
2022-04-12 23:31:36.824637 fix syntax errors 3 ['import sys\n\ndef main():\n    sa = sys.stdin.readline().rstrip()\n    sb = sys.stdin.readline().rstrip()\n    sc = sys.stdin.readline().rstrip()\n\n    turn = "A"\n    while True:\n        if turn == "A":\n            if len(sa) == 0:\n                break\n            turn = sa[0]\n            sa = sa[1:]\n        elif turn == "B":\n            if len(sb) == 0:\n                break\n            turn = sb[0]\n            sb = sb[1:]\n        elif turn == "C":\n            if len(sc) == 0:\n                break\n            turn = sc[0]\n            sc = sc[1:]\n    print(turn.upper())\n\nif __name__ == \'__main__\':\n    main()\n', 'import sys\n\ndef main():\n    sa = input()\n    sb = input()\n    sc = input()\n\n    turn = "A"\n    while True:\n        if turn == "A":\n            if len(sa) == 0:\n                break\n            turn = sa[0]\n            sa = sa[1:]\n        elif turn == "B":\n            if len(sb) == 0:\n                break\n            turn = sb[0]\n            sb = sb[1:]\n        elif turn == "C":\n            if len(sc) == 0:\n                break\n            turn = sc[0]\n            sc = sc[1:]\n    print(turn)\n\nif __name__ == \'__main__\':\n    main()\n', 'import sys\n\ndef main():\n    sa = sys.stdin.readline().rstrip()[::-1]\n    sb = sys.stdin.readline().rstrip()[::-1]\n    sc = sys.stdin.readline().rstrip()[::-1]\n\n    turn = "A"\n    while True:\n        if turn == "A":\n            if len(sa) == 0:\n                break\n            turn = sa[0]\n            sa = sa[1:]\n        elif turn == "B":\n            if len(sb) == 0:\n                break\n            turn = sb[0]\n            sb = sb[1:]\n        elif turn == "C":\n            if len(sc) == 0:\n                break\n            turn = sc[0]\n            sc = sc[1:]\n    print(turn)\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 23:31:36.824740 size on output set 9
