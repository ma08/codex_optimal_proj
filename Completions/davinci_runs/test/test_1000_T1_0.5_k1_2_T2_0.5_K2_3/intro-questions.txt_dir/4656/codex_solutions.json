["\n\n# SOLUTION\n# For each letter, find the largest substring that contains that letter and is K-beautiful\n# The answer is the max of these lengths\n\n# Time: O(n^2)\n# Space: O(1)\n\ndef get_beautiful_substring(s, k):\n    if len(s) == 1:\n        return len(s)\n    if len(set(s)) == 1:\n        return len(s)\n    max_len = 1\n    for i in range(len(s)):\n        for j in range(len(s)-1, i, -1):\n            if len(set(s[i:j+1])) == 1:\n                if (j-i+1)%k == 0:\n                    max_len = max(j-i+1, max_len)\n    return max_len\n\nT = int(input())\nfor _ in range(T):\n    n, k = map(int, input().split())\n    s = input()\n    print(get_beautiful_substring(s, k))", "\n\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()"]