2022-04-09 18:29:04.473746 """
1000000000000001 dogs suddenly appeared under the roof of Roger's house, all of which he decided to keep. The dogs had been numbered 1 through 1000000000000001, but he gave them new names, as follows:
 - the dogs numbered 1,2,\cdots,26 were respectively given the names a, b, ..., z;
 - the dogs numbered 27,28,29,\cdots,701,702  were respectively given the names aa, ab, ac, ..., zy, zz;
 - the dogs numbered 703,704,705,\cdots,18277,18278  were respectively given the names aaa, aab, aac, ..., zzy, zzz;
 - the dogs numbered 18279,18280,18281,\cdots,475253,475254  were respectively given the names aaaa, aaab, aaac, ..., zzzy, zzzz;
 - the dogs numbered 475255,475256,\cdots  were respectively given the names aaaaa, aaaab, ...;
 - and so on.
To sum it up, the dogs numbered 1, 2, \cdots were respectively given the following names:
a, b, ..., z, aa, ab, ..., az, ba, bb, ..., bz, ..., za, zb, ..., zz, aaa, aab, ..., aaz, aba, abb, ..., abz, ..., zzz, aaaa, ...
Now, Roger asks you:
"What is the name for the dog numbered N?"

-----Constraints-----
 - N is an integer.
 -  1 \leq N \leq 1000000000000001

-----Input-----
Input is given from Standard Input in the following format:
N

-----Output-----
Print the answer to Roger's question as a string consisting of lowercase English letters.

-----Sample Input-----
2

-----Sample Output-----
b

"""
2022-04-09 18:29:04.473779 --------------------------
2022-04-09 18:30:47.349026 {
  "choices": [
    {
      "finish_reason": "length",
      "index": 0,
      "logprobs": null,
      "text": "\n\n#import itertools\n#import collections\n\n#import numpy as np\n#import scipy as sp\n#import math\n\n# \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u5165\u529b\u3092\u8aad\u307f\u8fbc\u3093\u3067\u6570\u5024\u30ea\u30b9\u30c8\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef read_nums_l():\n    return [ int(s) for s in input().split(\" \")]\n\n# \u6539\u884c\u533a\u5207\u308a\u306e\u5165\u529b\u3092n\u884c\u8aad\u307f\u8fbc\u3093\u3067\u6570\u5024\u30ea\u30b9\u30c8\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef read_nums_n(n):\n    return [ int(input()) for _ in range(n)]\n\n# \u6539\u884c\u307e\u305f\u306f\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u5165\u529b\u3092\u3059\u3079\u3066\u8aad\u307f\u8fbc\u3093\u3067\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u8fd4\u3057\u307e\u3059\u3002\ndef read_all_int():\n    return map(int, open(0).read().split())\n\n# \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u5165\u529b\u3092\u3001\u6307\u5b9a\u3055\u308c\u305f\u578b\u306b\u3057\u3066\u30ea\u30b9\u30c8\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef read_col(H, replace_int=True, replace_float=True):\n    '''H is number of rows\n    A\u5217\u3001B\u5217\u304c\u4e0e\u3048\u3089\u308c\u308b\u3088\u3046\u306a\u3068\u304d\n    ex1)A,B=read_col(H)    ex2) A,=read_col(H) #\u4e00\u5217\u306e\u5834\u5408'''\n    ret = [[] for _ in range(H)]\n    for h in range(H):\n        ret[h] = list(map(int, input().split()))\n    return tuple(map(list, zip(*ret)))\n\n# \u6539\u884c\u307e\u305f\u306f\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u5165\u529b\u3092\u3059\u3079\u3066\u8aad\u307f\u8fbc\u3093\u3067\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u8fd4\u3057\u307e\u3059\u3002\ndef read_all_int():\n    return map(int, open(0).read().split())\n\n# \u5165\u529b\u3057\u305f\u6587\u5b57\u5217\u306e\u5404\u6841\u3092\u30ea\u30b9\u30c8\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef read_digits(sentence):\n    return [int(s) for s in list(sentence.replace(\"\\n\",\"\"))]\n\n# \u6570\u5024\u3092\u5404\u6841\u306e\u6570\u5024\u5217\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef to_digits(n):\n    ret = []\n    while n > 0:\n        ret.append(n % 10)\n        n = n // 10\n    return ret[::-1]  # \u9006\u9806\u306b\u3057\u3066\u8fd4\u3059\n\n# \u6570\u5024\u3092\u5404\u6841\u306e\u6570\u5024\u5217\u306b\u3057\u3066\u9006\u9806\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef to_digits_rev(n):\n    ret = []\n    while n > 0:\n        ret.append(n % 10)\n        n = n // 10\n    return ret  # \u9006\u9806\u306b\u3057\u3066\u8fd4\u3059\n\n# \u6570\u5024\u306e\u30ea\u30b9\u30c8\u3092\u6570\u5024\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\ndef to_number(digits):\n    ret = 0\n    for d in digits:\n        ret = ret * 10 + d\n    return ret\n\n# \u6570\u5024\u306e\u30ea\u30b9\u30c8\u3092\u9006\u306b\u3057\u3066\u6570\u5024\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\ndef to_number_rev(digits):\n    ret = 0\n    for d in digits[::-1]:\n        ret = ret * 10 + d\n    return ret\n\n# \u4e00\u884c\u306e\u5165\u529b\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u6570\u5024\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef read_number():\n    return int(input())\n\n# \u4e00\u884c\u306e\u5165\u529b\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u6570\u5024\u30ea\u30b9\u30c8\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef read_numbers():\n    return [ int(s) for s in input().split(\" \")]\n\n# \u4e00\u884c\u306e\u5165\u529b\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u6570\u5024\u30ea\u30b9\u30c8\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef read_numbers_1():\n    s = input()\n    return [ int(s) for s in s.split(\" \")]\n\n# \u4e00\u884c\u306e\u5165\u529b\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u6570\u5024\u306e\u30bf\u30d7\u30eb\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef read_number_2():\n    s = input()\n    return ( int(s[0]), int(s[1]) )\n\n# \u4e00\u884c\u306e\u5165\u529b\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u6587\u5b57\u5217\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef read_str():\n    return input()\n\n# \u6570\u5024\u306e\u30ea\u30b9\u30c8\u3092\u7a7a\u767d\u533a\u5207\u308a\u3067\u51fa\u529b\u3057\u307e\u3059\u3002\ndef print_nums(nums):\n    print(\" \".join(map(str, nums)))\n\n# \u6570\u5024\u3092\u7a7a\u767d\u533a\u5207\u308a\u3067\u51fa\u529b\u3057\u307e\u3059\u3002\ndef print_num(num):\n    print(\" \".join(map(str, [num])))\n\n# \u6570\u5024\u306e\u30ea\u30b9\u30c8\u3092\u7a7a\u767d\u533a\u5207\u308a\u3067\u51fa\u529b\u3057\u3001\u6539\u884c\u3057\u307e\u3059\u3002\ndef print_nums_ln(nums):\n    print(\" \".join(map(str, nums)))\n    print()\n\n# \u6570\u5024\u3092\u7a7a\u767d\u533a\u5207\u308a\u3067\u51fa\u529b\u3057\u3001\u6539\u884c\u3057\u307e\u3059\u3002\ndef print_num_ln(num):\n    print(\" \".join(map(str, [num])))\n    print()\n\n# \u4e8c\u6b21\u5143\u30ea\u30b9\u30c8\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\ndef print_grid(grid):\n    H = len(grid)\n    W = len(grid[0])\n    for i in range(H):\n        print(\" \".join(map(str, grid[i])))\n\n# \u4e8c\u6b21\u5143\u30ea\u30b9\u30c8\u3092\u51fa\u529b\u3057\u3001\u6539\u884c\u3057\u307e\u3059\u3002\ndef print_grid_ln(grid):\n    print_grid(grid)\n    print()\n\n# \u4e8c\u6b21\u5143\u30ea\u30b9\u30c8\u3092\u51fa\u529b\u3057\u3001\u4f59\u767d\u3092\u3064\u3051\u3066\u6539\u884c\u3057\u307e\u3059\u3002\ndef print_grid_margin(grid):\n    H = len(grid)\n    W = len(grid[0])\n    for i in range(H):\n        print(\" \" + \" \".join(map(str, grid[i])))\n    print()\n\n# \u30e9\u30f3\u30ec\u30f3\u30b0\u30b9\u5727\u7e2e\u3092\u884c\u3044\u307e\u3059\u3002\ndef run_length_compression(S):\n    N = len(S)\n    res = []\n    cnt = 1\n    for i in range(1, N):\n        if S[i-1] == S[i]:\n            cnt+=1\n        else:\n            res.append((S[i-1], cnt))\n            cnt = 1\n    res.append((S[N-1], cnt))\n    return res\n\n# \u30e9\u30f3\u30ec\u30f3\u30b0\u30b9\u5727\u7e2e\u3057\u305f\u6587\u5b57\u5217\u3092\u5fa9\u5143\u3057\u307e\u3059\u3002\ndef run_length_decompression(S):\n    res = \"\"\n    for s, cnt in S:\n        res += s*cnt\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u3092\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef to_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u3092\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef to_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_linked_list_from_list(L):\n    N = len(L)\n    res = []\n    for i in range(0, N, 2):\n        res.append((L[i], L[i+1]))\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_linked_list_from_list(L):\n    N = len(L)\n    res = []\n    for i in range(0, N, 2):\n        res.append((L[i], L[i+1]))\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_linked_list_from_list(L):\n    N = len(L)\n    res = []\n    for i in range(0, N, 2):\n        res.append((L[i], L[i+1]))\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_linked_list_from_list(L):\n    N = len(L)\n    res = []\n    for i in range(0, N, 2):\n        res.append((L[i], L[i+1]))\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n# ---- Solution 1 ----\n# Dog number: 1, 2, ..., 26, 27, 28, ..., 702, 703, 704, ..., 18278, 18279, 18280, ..., 475254, 475255, 475256, ...\n# Dog name:   a, b, ..., z, aa, ab, ..., zz, aaa, aab, ..., zzz, aaaa, aaab, ..., zzzz, aaaaa, aaaab, ...\n#\n# Dog name of length 1: 26\n# Dog name of length 2: 26^2\n# Dog name of length 3: 26^3\n# ...\n# Dog name of length n: 26^n\n#\n# Dog number of length 1: 1, 2, ..., 26\n# Dog number of length 2: 27, 28, ..., 702\n# Dog number of length 3: 703, 704, ..., 18278\n# ...\n# Dog number of length n: 26^(n-1) + 1, 26^(n-1) + 2, ..., 26^n\n#\n# Dog number N:\n# 1. Find the n where n is the length of the dog name\n# 2. Find the dog name of length n\n# 3. Find the dog name of dog number N\n\ndef find_dog_name(n):\n    # find n\n    n_length = 1\n    while True:\n        if n <= 26 ** n_length:\n            break\n        n_length += 1\n\n    # find dog name of length n\n    dog_name = ''\n    for i in range(n_length):\n        # find the dog name of length n\n        if n > 26 ** n_length:\n            n -= 26 ** n_length\n            dog_name += 'z'\n        else:\n            dog_name += chr(ord('a') + n // 26 ** (n_length - 1) - 1)\n            n = n % 26 ** (n_length - 1)\n            break\n\n    return dog_name\n\n# ---- Solution 2 ----\n# Dog number: 1, 2, ..., 26, 27, 28, ..., 702, 703, 704, ..., 18278, 18279, 18280, ..., 475254, 475255, 475256, ...\n# Dog name:   a, b, ..., z, aa, ab, ..., zz, aaa, aab, ..., zzz, aaaa, aaab, ..., zzzz, aaaaa, aaaab, ...\n#\n# Dog name of length 1: 26\n# Dog name of length 2: 26^2\n# Dog name of length 3: 26^3\n# ...\n# Dog name of length n: 26^n\n#\n# Dog number of length 1: 1, 2, ..., 26\n# Dog number of length 2: 27, 28, ..., 702\n# Dog number of length 3: 703, 704, ..., 18278\n# ...\n# Dog number of length n: 26^(n-1) + 1, 26^(n-1) + 2, ..., 26^n\n#\n# Dog number N:\n# 1. Find the n where n is the length of the dog name\n# 2. Find the dog name of length n\n# 3. Find the dog name of dog number N\n\ndef find_dog_name_2(n):\n    # find n\n    n_length = 1\n    while True:\n        if n <= 26 ** n_length:\n            break\n        n_length += 1\n\n    # find dog name of length n\n    dog_name = ''\n    for i in range(n_length):\n        # find the dog name of length n\n        if n > 26 ** n_length:\n            n -= 26 ** n_length\n            dog_name += 'z'\n        else:\n            dog_name += chr(ord('a') + n // 26 ** (n_length - 1) - 1)\n            n = n % 26 ** (n_length - 1)\n            break\n\n    return dog_name\n\n\ndef main():\n    n = int(input())\n    print(find_dog_name_2(n))\n\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1649543345,
  "id": "cmpl-4vDrlhkQ3tZRgcG7HsEX2qUCeyYOI",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 18:30:47.349623 0 {
  "finish_reason": "length",
  "index": 0,
  "logprobs": null,
  "text": "\n\n#import itertools\n#import collections\n\n#import numpy as np\n#import scipy as sp\n#import math\n\n# \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u5165\u529b\u3092\u8aad\u307f\u8fbc\u3093\u3067\u6570\u5024\u30ea\u30b9\u30c8\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef read_nums_l():\n    return [ int(s) for s in input().split(\" \")]\n\n# \u6539\u884c\u533a\u5207\u308a\u306e\u5165\u529b\u3092n\u884c\u8aad\u307f\u8fbc\u3093\u3067\u6570\u5024\u30ea\u30b9\u30c8\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef read_nums_n(n):\n    return [ int(input()) for _ in range(n)]\n\n# \u6539\u884c\u307e\u305f\u306f\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u5165\u529b\u3092\u3059\u3079\u3066\u8aad\u307f\u8fbc\u3093\u3067\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u8fd4\u3057\u307e\u3059\u3002\ndef read_all_int():\n    return map(int, open(0).read().split())\n\n# \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u5165\u529b\u3092\u3001\u6307\u5b9a\u3055\u308c\u305f\u578b\u306b\u3057\u3066\u30ea\u30b9\u30c8\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef read_col(H, replace_int=True, replace_float=True):\n    '''H is number of rows\n    A\u5217\u3001B\u5217\u304c\u4e0e\u3048\u3089\u308c\u308b\u3088\u3046\u306a\u3068\u304d\n    ex1)A,B=read_col(H)    ex2) A,=read_col(H) #\u4e00\u5217\u306e\u5834\u5408'''\n    ret = [[] for _ in range(H)]\n    for h in range(H):\n        ret[h] = list(map(int, input().split()))\n    return tuple(map(list, zip(*ret)))\n\n# \u6539\u884c\u307e\u305f\u306f\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u5165\u529b\u3092\u3059\u3079\u3066\u8aad\u307f\u8fbc\u3093\u3067\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u8fd4\u3057\u307e\u3059\u3002\ndef read_all_int():\n    return map(int, open(0).read().split())\n\n# \u5165\u529b\u3057\u305f\u6587\u5b57\u5217\u306e\u5404\u6841\u3092\u30ea\u30b9\u30c8\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef read_digits(sentence):\n    return [int(s) for s in list(sentence.replace(\"\\n\",\"\"))]\n\n# \u6570\u5024\u3092\u5404\u6841\u306e\u6570\u5024\u5217\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef to_digits(n):\n    ret = []\n    while n > 0:\n        ret.append(n % 10)\n        n = n // 10\n    return ret[::-1]  # \u9006\u9806\u306b\u3057\u3066\u8fd4\u3059\n\n# \u6570\u5024\u3092\u5404\u6841\u306e\u6570\u5024\u5217\u306b\u3057\u3066\u9006\u9806\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef to_digits_rev(n):\n    ret = []\n    while n > 0:\n        ret.append(n % 10)\n        n = n // 10\n    return ret  # \u9006\u9806\u306b\u3057\u3066\u8fd4\u3059\n\n# \u6570\u5024\u306e\u30ea\u30b9\u30c8\u3092\u6570\u5024\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\ndef to_number(digits):\n    ret = 0\n    for d in digits:\n        ret = ret * 10 + d\n    return ret\n\n# \u6570\u5024\u306e\u30ea\u30b9\u30c8\u3092\u9006\u306b\u3057\u3066\u6570\u5024\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\ndef to_number_rev(digits):\n    ret = 0\n    for d in digits[::-1]:\n        ret = ret * 10 + d\n    return ret\n\n# \u4e00\u884c\u306e\u5165\u529b\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u6570\u5024\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef read_number():\n    return int(input())\n\n# \u4e00\u884c\u306e\u5165\u529b\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u6570\u5024\u30ea\u30b9\u30c8\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef read_numbers():\n    return [ int(s) for s in input().split(\" \")]\n\n# \u4e00\u884c\u306e\u5165\u529b\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u6570\u5024\u30ea\u30b9\u30c8\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef read_numbers_1():\n    s = input()\n    return [ int(s) for s in s.split(\" \")]\n\n# \u4e00\u884c\u306e\u5165\u529b\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u6570\u5024\u306e\u30bf\u30d7\u30eb\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef read_number_2():\n    s = input()\n    return ( int(s[0]), int(s[1]) )\n\n# \u4e00\u884c\u306e\u5165\u529b\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u6587\u5b57\u5217\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef read_str():\n    return input()\n\n# \u6570\u5024\u306e\u30ea\u30b9\u30c8\u3092\u7a7a\u767d\u533a\u5207\u308a\u3067\u51fa\u529b\u3057\u307e\u3059\u3002\ndef print_nums(nums):\n    print(\" \".join(map(str, nums)))\n\n# \u6570\u5024\u3092\u7a7a\u767d\u533a\u5207\u308a\u3067\u51fa\u529b\u3057\u307e\u3059\u3002\ndef print_num(num):\n    print(\" \".join(map(str, [num])))\n\n# \u6570\u5024\u306e\u30ea\u30b9\u30c8\u3092\u7a7a\u767d\u533a\u5207\u308a\u3067\u51fa\u529b\u3057\u3001\u6539\u884c\u3057\u307e\u3059\u3002\ndef print_nums_ln(nums):\n    print(\" \".join(map(str, nums)))\n    print()\n\n# \u6570\u5024\u3092\u7a7a\u767d\u533a\u5207\u308a\u3067\u51fa\u529b\u3057\u3001\u6539\u884c\u3057\u307e\u3059\u3002\ndef print_num_ln(num):\n    print(\" \".join(map(str, [num])))\n    print()\n\n# \u4e8c\u6b21\u5143\u30ea\u30b9\u30c8\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\ndef print_grid(grid):\n    H = len(grid)\n    W = len(grid[0])\n    for i in range(H):\n        print(\" \".join(map(str, grid[i])))\n\n# \u4e8c\u6b21\u5143\u30ea\u30b9\u30c8\u3092\u51fa\u529b\u3057\u3001\u6539\u884c\u3057\u307e\u3059\u3002\ndef print_grid_ln(grid):\n    print_grid(grid)\n    print()\n\n# \u4e8c\u6b21\u5143\u30ea\u30b9\u30c8\u3092\u51fa\u529b\u3057\u3001\u4f59\u767d\u3092\u3064\u3051\u3066\u6539\u884c\u3057\u307e\u3059\u3002\ndef print_grid_margin(grid):\n    H = len(grid)\n    W = len(grid[0])\n    for i in range(H):\n        print(\" \" + \" \".join(map(str, grid[i])))\n    print()\n\n# \u30e9\u30f3\u30ec\u30f3\u30b0\u30b9\u5727\u7e2e\u3092\u884c\u3044\u307e\u3059\u3002\ndef run_length_compression(S):\n    N = len(S)\n    res = []\n    cnt = 1\n    for i in range(1, N):\n        if S[i-1] == S[i]:\n            cnt+=1\n        else:\n            res.append((S[i-1], cnt))\n            cnt = 1\n    res.append((S[N-1], cnt))\n    return res\n\n# \u30e9\u30f3\u30ec\u30f3\u30b0\u30b9\u5727\u7e2e\u3057\u305f\u6587\u5b57\u5217\u3092\u5fa9\u5143\u3057\u307e\u3059\u3002\ndef run_length_decompression(S):\n    res = \"\"\n    for s, cnt in S:\n        res += s*cnt\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u3092\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef to_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u3092\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef to_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_linked_list_from_list(L):\n    N = len(L)\n    res = []\n    for i in range(0, N, 2):\n        res.append((L[i], L[i+1]))\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_linked_list_from_list(L):\n    N = len(L)\n    res = []\n    for i in range(0, N, 2):\n        res.append((L[i], L[i+1]))\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_linked_list_from_list(L):\n    N = len(L)\n    res = []\n    for i in range(0, N, 2):\n        res.append((L[i], L[i+1]))\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_linked_list_from_list(L):\n    N = len(L)\n    res = []\n    for i in range(0, N, 2):\n        res.append((L[i], L[i+1]))\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u304b\u3089\u3001\u9023\u7d50\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\ndef to_list_from_linked_list(S):\n    N = len(S)\n    res = []\n    for i in range(N):\n        res.append(S[i][0])\n        res.append(S[i][1])\n    return res\n\n# \u9023\u7d50\u30ea\u30b9\u30c8\u3092\u8868\u3059\u30bf\u30d7\u30eb\u306e\u30ea"
}
2022-04-09 18:30:47.349689 REASON length
2022-04-09 18:30:47.349693 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n# ---- Solution 1 ----\n# Dog number: 1, 2, ..., 26, 27, 28, ..., 702, 703, 704, ..., 18278, 18279, 18280, ..., 475254, 475255, 475256, ...\n# Dog name:   a, b, ..., z, aa, ab, ..., zz, aaa, aab, ..., zzz, aaaa, aaab, ..., zzzz, aaaaa, aaaab, ...\n#\n# Dog name of length 1: 26\n# Dog name of length 2: 26^2\n# Dog name of length 3: 26^3\n# ...\n# Dog name of length n: 26^n\n#\n# Dog number of length 1: 1, 2, ..., 26\n# Dog number of length 2: 27, 28, ..., 702\n# Dog number of length 3: 703, 704, ..., 18278\n# ...\n# Dog number of length n: 26^(n-1) + 1, 26^(n-1) + 2, ..., 26^n\n#\n# Dog number N:\n# 1. Find the n where n is the length of the dog name\n# 2. Find the dog name of length n\n# 3. Find the dog name of dog number N\n\ndef find_dog_name(n):\n    # find n\n    n_length = 1\n    while True:\n        if n <= 26 ** n_length:\n            break\n        n_length += 1\n\n    # find dog name of length n\n    dog_name = ''\n    for i in range(n_length):\n        # find the dog name of length n\n        if n > 26 ** n_length:\n            n -= 26 ** n_length\n            dog_name += 'z'\n        else:\n            dog_name += chr(ord('a') + n // 26 ** (n_length - 1) - 1)\n            n = n % 26 ** (n_length - 1)\n            break\n\n    return dog_name\n\n# ---- Solution 2 ----\n# Dog number: 1, 2, ..., 26, 27, 28, ..., 702, 703, 704, ..., 18278, 18279, 18280, ..., 475254, 475255, 475256, ...\n# Dog name:   a, b, ..., z, aa, ab, ..., zz, aaa, aab, ..., zzz, aaaa, aaab, ..., zzzz, aaaaa, aaaab, ...\n#\n# Dog name of length 1: 26\n# Dog name of length 2: 26^2\n# Dog name of length 3: 26^3\n# ...\n# Dog name of length n: 26^n\n#\n# Dog number of length 1: 1, 2, ..., 26\n# Dog number of length 2: 27, 28, ..., 702\n# Dog number of length 3: 703, 704, ..., 18278\n# ...\n# Dog number of length n: 26^(n-1) + 1, 26^(n-1) + 2, ..., 26^n\n#\n# Dog number N:\n# 1. Find the n where n is the length of the dog name\n# 2. Find the dog name of length n\n# 3. Find the dog name of dog number N\n\ndef find_dog_name_2(n):\n    # find n\n    n_length = 1\n    while True:\n        if n <= 26 ** n_length:\n            break\n        n_length += 1\n\n    # find dog name of length n\n    dog_name = ''\n    for i in range(n_length):\n        # find the dog name of length n\n        if n > 26 ** n_length:\n            n -= 26 ** n_length\n            dog_name += 'z'\n        else:\n            dog_name += chr(ord('a') + n // 26 ** (n_length - 1) - 1)\n            n = n % 26 ** (n_length - 1)\n            break\n\n    return dog_name\n\n\ndef main():\n    n = int(input())\n    print(find_dog_name_2(n))\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 18:30:47.349720 REASON stop
