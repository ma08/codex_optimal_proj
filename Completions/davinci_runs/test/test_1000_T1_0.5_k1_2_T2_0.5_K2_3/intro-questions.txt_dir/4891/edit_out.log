2022-04-13 06:08:34.045151 num operations 2
2022-04-13 06:08:34.045161 size on input set 1
2022-04-13 06:08:37.720421 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n#\npieces = list(map(int, input().split()))\n\nfor i in range(6):\n    if i == 0:\n        print(1 - pieces[i], end=' ')\n    elif i == 1:\n        print(1 - pieces[i], end=' ')\n    elif i == 2:\n        print(2 - pieces[i], end=' ')\n    elif i == 3:\n        print(2 - pieces[i], end=' ')\n    elif i == 4:\n        print(2 - pieces[i], end=' ')\n    else:\n        print(8 - pieces[i], end=' ')\n"
    },
    {
      "index": 1,
      "text": "pieces = list(map(int, input().split()))\n\nfor i in range(6):\n    if i == 0:\n        print(1 - pieces[i], end=' ')\n    elif i == 1:\n        print(1 - pieces[i], end=' ')\n    elif i == 2:\n        print(2 - pieces[i], end=' ')\n    elif i == 3:\n        print(2 - pieces[i], end=' ')\n    elif i == 4:\n        print(2 - pieces[i], end=' ')\n    else:\n        print(8 - pieces[i], end=' ')\n"
    },
    {
      "index": 2,
      "text": "\n\npieces = list(map(int, input().split())) # get the input\n\nfor i in range(6): # for each piece\n    if i == 0:\n        print(1 - pieces[i], end=' ')\n    elif i == 1:\n        print(1 - pieces[i], end=' ')\n    elif i == 2:\n        print(2 - pieces[i], end=' ')\n    elif i == 3:\n        print(2 - pieces[i], end=' ')\n    elif i == 4:\n        print(2 - pieces[i], end=' ')\n    else:\n        print(8 - pieces[i], end=' ')\n"
    }
  ],
  "created": 1649830114,
  "object": "edit"
}
2022-04-13 06:08:37.720650 fix spelling mistakes 3 ["\n#\npieces = list(map(int, input().split()))\n\nfor i in range(6):\n    if i == 0:\n        print(1 - pieces[i], end=' ')\n    elif i == 1:\n        print(1 - pieces[i], end=' ')\n    elif i == 2:\n        print(2 - pieces[i], end=' ')\n    elif i == 3:\n        print(2 - pieces[i], end=' ')\n    elif i == 4:\n        print(2 - pieces[i], end=' ')\n    else:\n        print(8 - pieces[i], end=' ')\n", "pieces = list(map(int, input().split()))\n\nfor i in range(6):\n    if i == 0:\n        print(1 - pieces[i], end=' ')\n    elif i == 1:\n        print(1 - pieces[i], end=' ')\n    elif i == 2:\n        print(2 - pieces[i], end=' ')\n    elif i == 3:\n        print(2 - pieces[i], end=' ')\n    elif i == 4:\n        print(2 - pieces[i], end=' ')\n    else:\n        print(8 - pieces[i], end=' ')\n", "\n\npieces = list(map(int, input().split())) # get the input\n\nfor i in range(6): # for each piece\n    if i == 0:\n        print(1 - pieces[i], end=' ')\n    elif i == 1:\n        print(1 - pieces[i], end=' ')\n    elif i == 2:\n        print(2 - pieces[i], end=' ')\n    elif i == 3:\n        print(2 - pieces[i], end=' ')\n    elif i == 4:\n        print(2 - pieces[i], end=' ')\n    else:\n        print(8 - pieces[i], end=' ')\n"]
2022-04-13 06:08:37.720681 size on output set 3
2022-04-13 06:08:37.720687 size on input set 3
2022-04-13 06:08:42.703533 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "pieces = list(map(int, input().split()))\n\nfor i in range(6):\n    if i == 0:\n        print(1 - pieces[i], end=' ')\n    elif i == 1:\n        print(1 - pieces[i], end=' ')\n    elif i == 2:\n        print(2 - pieces[i], end=' ')\n    elif i == 3:\n        print(2 - pieces[i], end=' ')\n    elif i == 4:\n        print(2 - pieces[i], end=' ')\n    else:\n        print(8 - pieces[i], end=' ')\n"
    },
    {
      "index": 1,
      "text": "\npieces = list(map(int, input().split()))\n\nfor i in range(6):\n    if i == 0:\n        print(1 - pieces[i], end=\" \")\n    elif i == 1:\n        print(1 - pieces[i], end=\" \")\n    elif i == 2:\n        print(2 - pieces[i], end=\" \")\n    elif i == 3:\n        print(2 - pieces[i], end=\" \")\n    elif i == 4:\n        print(2 - pieces[i], end=\" \")\n    else:\n        print(8 - pieces[i], end=\" \")\n"
    },
    {
      "index": 2,
      "text": "pieces = list(map(int, input().split()))\n\nfor i in range(6):\n    if i == 0:\n        print(1 - pieces[i], end=' ')\n    elif i == 1:\n        print(1 - pieces[i], end=' ')\n    elif i == 2:\n        print(2 - pieces[i], end=' ')\n    elif i == 3:\n        print(2 - pieces[i], end=' ')\n    elif i == 4:\n        print(2 - pieces[i], end=' ')\n    else:\n        print(8 - pieces[i], end=' ')\n"
    }
  ],
  "created": 1649830117,
  "object": "edit"
}
2022-04-13 06:08:42.703726 fix syntax errors 3 ["pieces = list(map(int, input().split()))\n\nfor i in range(6):\n    if i == 0:\n        print(1 - pieces[i], end=' ')\n    elif i == 1:\n        print(1 - pieces[i], end=' ')\n    elif i == 2:\n        print(2 - pieces[i], end=' ')\n    elif i == 3:\n        print(2 - pieces[i], end=' ')\n    elif i == 4:\n        print(2 - pieces[i], end=' ')\n    else:\n        print(8 - pieces[i], end=' ')\n", '\npieces = list(map(int, input().split()))\n\nfor i in range(6):\n    if i == 0:\n        print(1 - pieces[i], end=" ")\n    elif i == 1:\n        print(1 - pieces[i], end=" ")\n    elif i == 2:\n        print(2 - pieces[i], end=" ")\n    elif i == 3:\n        print(2 - pieces[i], end=" ")\n    elif i == 4:\n        print(2 - pieces[i], end=" ")\n    else:\n        print(8 - pieces[i], end=" ")\n', "pieces = list(map(int, input().split()))\n\nfor i in range(6):\n    if i == 0:\n        print(1 - pieces[i], end=' ')\n    elif i == 1:\n        print(1 - pieces[i], end=' ')\n    elif i == 2:\n        print(2 - pieces[i], end=' ')\n    elif i == 3:\n        print(2 - pieces[i], end=' ')\n    elif i == 4:\n        print(2 - pieces[i], end=' ')\n    else:\n        print(8 - pieces[i], end=' ')\n"]
2022-04-13 06:08:53.490944 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "def dominoes(pieces):\n    for i in range(6):\n        if i == 0:\n            print(1 - pieces[i], end=' ')\n        elif i == 1:\n            print(1 - pieces[i], end=' ')\n        elif i == 2:\n            print(2 - pieces[i], end=' ')\n        elif i == 3:\n            print(2 - pieces[i], end=' ')\n        elif i == 4:\n            print(2 - pieces[i], end=' ')\n        else:\n            print(8 - pieces[i], end=' ')\n\n\npieces = list(map(int, input().split()))\ndominoes(pieces)\n"
    },
    {
      "index": 1,
      "text": "# pieces = list(map(int, input().split()))\n\n# for i in range(6):\n#     if i == 0:\n#         print(1 - pieces[i], end=' ')\n#     elif i == 1:\n#         print(1 - pieces[i], end=' ')\n#     elif i == 2:\n#         print(2 - pieces[i], end=' ')\n#     elif i == 3:\n#         print(2 - pieces[i], end=' ')\n#     elif i == 4:\n#         print(2 - pieces[i], end=' ')\n#     else:\n#         print(8 - pieces[i], end=' ')\n\nfrom collections import deque\n\nN = int(input())\nA = deque(list(map(int, input().split())))\n\ncount = 0\n\nwhile len(A) != 1:\n    if A[0] == A[1]:\n        A.popleft()\n        A.popleft()\n        count += 1\n    else:\n        A.rotate(-1)\n\nif count % 2 == 0:\n    print('No')\nelse:\n    print('Yes')\n"
    },
    {
      "index": 2,
      "text": "import sys\n\nif __name__ == \"__main__\":\n    pieces = list(map(int, input().split()))\n\n    for i in range(6):\n        if i == 0:\n            print(1 - pieces[i], end=' ')\n        elif i == 1:\n            print(1 - pieces[i], end=' ')\n        elif i == 2:\n            print(2 - pieces[i], end=' ')\n        elif i == 3:\n            print(2 - pieces[i], end=' ')\n        elif i == 4:\n            print(2 - pieces[i], end=' ')\n        else:\n            print(8 - pieces[i], end=' ')\n"
    }
  ],
  "created": 1649830122,
  "object": "edit"
}
2022-04-13 06:08:53.491122 fix syntax errors 3 ["def dominoes(pieces):\n    for i in range(6):\n        if i == 0:\n            print(1 - pieces[i], end=' ')\n        elif i == 1:\n            print(1 - pieces[i], end=' ')\n        elif i == 2:\n            print(2 - pieces[i], end=' ')\n        elif i == 3:\n            print(2 - pieces[i], end=' ')\n        elif i == 4:\n            print(2 - pieces[i], end=' ')\n        else:\n            print(8 - pieces[i], end=' ')\n\n\npieces = list(map(int, input().split()))\ndominoes(pieces)\n", "# pieces = list(map(int, input().split()))\n\n# for i in range(6):\n#     if i == 0:\n#         print(1 - pieces[i], end=' ')\n#     elif i == 1:\n#         print(1 - pieces[i], end=' ')\n#     elif i == 2:\n#         print(2 - pieces[i], end=' ')\n#     elif i == 3:\n#         print(2 - pieces[i], end=' ')\n#     elif i == 4:\n#         print(2 - pieces[i], end=' ')\n#     else:\n#         print(8 - pieces[i], end=' ')\n\nfrom collections import deque\n\nN = int(input())\nA = deque(list(map(int, input().split())))\n\ncount = 0\n\nwhile len(A) != 1:\n    if A[0] == A[1]:\n        A.popleft()\n        A.popleft()\n        count += 1\n    else:\n        A.rotate(-1)\n\nif count % 2 == 0:\n    print('No')\nelse:\n    print('Yes')\n", 'import sys\n\nif __name__ == "__main__":\n    pieces = list(map(int, input().split()))\n\n    for i in range(6):\n        if i == 0:\n            print(1 - pieces[i], end=\' \')\n        elif i == 1:\n            print(1 - pieces[i], end=\' \')\n        elif i == 2:\n            print(2 - pieces[i], end=\' \')\n        elif i == 3:\n            print(2 - pieces[i], end=\' \')\n        elif i == 4:\n            print(2 - pieces[i], end=\' \')\n        else:\n            print(8 - pieces[i], end=\' \')\n']
2022-04-13 06:09:02.195000 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#\n# pieces = list(map(int, input().split())) # get the input\n#\n# for i in range(6): # for each piece\n#     if i == 0:\n#         print(1 - pieces[i], end=' ')\n#     elif i == 1:\n#         print(1 - pieces[i], end=' ')\n#     elif i == 2:\n#         print(2 - pieces[i], end=' ')\n#     elif i == 3:\n#         print(2 - pieces[i], end=' ')\n#     elif i == 4:\n#         print(2 - pieces[i], end=' ')\n#     else:\n#         print(8 - pieces[i], end=' ')\n"
    },
    {
      "index": 1,
      "text": "\n\npieces = list(map(int, input().split())) # get the input\n\nfor i in range(6): # for each piece\n    print(8 - pieces[i], end=' ')\n"
    },
    {
      "index": 2,
      "text": "\n\npieces = list(map(int, input().split())) # get the input\n\nfor i in range(6): # for each piece\n    if pieces[i] == 0:\n        print(1)\n    elif pieces[i] == 1:\n        print(1)\n    elif pieces[i] == 2:\n        print(2)\n    elif pieces[i] == 3:\n        print(2)\n    elif pieces[i] == 4:\n        print(2)\n    elif pieces[i] == 5:\n        print(8)\n"
    }
  ],
  "created": 1649830133,
  "object": "edit"
}
2022-04-13 06:09:02.195190 fix syntax errors 3 ["\n#\n# pieces = list(map(int, input().split())) # get the input\n#\n# for i in range(6): # for each piece\n#     if i == 0:\n#         print(1 - pieces[i], end=' ')\n#     elif i == 1:\n#         print(1 - pieces[i], end=' ')\n#     elif i == 2:\n#         print(2 - pieces[i], end=' ')\n#     elif i == 3:\n#         print(2 - pieces[i], end=' ')\n#     elif i == 4:\n#         print(2 - pieces[i], end=' ')\n#     else:\n#         print(8 - pieces[i], end=' ')\n", "\n\npieces = list(map(int, input().split())) # get the input\n\nfor i in range(6): # for each piece\n    print(8 - pieces[i], end=' ')\n", '\n\npieces = list(map(int, input().split())) # get the input\n\nfor i in range(6): # for each piece\n    if pieces[i] == 0:\n        print(1)\n    elif pieces[i] == 1:\n        print(1)\n    elif pieces[i] == 2:\n        print(2)\n    elif pieces[i] == 3:\n        print(2)\n    elif pieces[i] == 4:\n        print(2)\n    elif pieces[i] == 5:\n        print(8)\n']
2022-04-13 06:09:02.195228 size on output set 8
2022-04-13 06:09:02.195241 num operations 2
2022-04-13 06:09:02.195249 size on input set 1
2022-04-13 06:09:04.719556 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "# file\n\npieces = [1, 1, 2, 2, 2, 8]\ncount = [int(i) for i in input().split()]\n\nfor i in range(6):\n    print(pieces[i] - count[i], end=\" \")\n"
    },
    {
      "index": 1,
      "text": "# Chess pieces\n\npieces = [1, 1, 2, 2, 2, 8]\ncount = [int(i) for i in input().split()]\n\nfor i in range(6):\n    print(pieces[i] - count[i], end=\" \")\n"
    },
    {
      "index": 2,
      "text": "\n\n\npieces = [1, 1, 2, 2, 2, 8]  # all pieces in the chess\ncount = [int(i) for i in input().split()]\n\nfor i in range(6):  # print the missing pieces\n    print(pieces[i] - count[i], end=\" \")\n"
    }
  ],
  "created": 1649830142,
  "object": "edit"
}
2022-04-13 06:09:04.719736 fix spelling mistakes 3 ['# file\n\npieces = [1, 1, 2, 2, 2, 8]\ncount = [int(i) for i in input().split()]\n\nfor i in range(6):\n    print(pieces[i] - count[i], end=" ")\n', '# Chess pieces\n\npieces = [1, 1, 2, 2, 2, 8]\ncount = [int(i) for i in input().split()]\n\nfor i in range(6):\n    print(pieces[i] - count[i], end=" ")\n', '\n\n\npieces = [1, 1, 2, 2, 2, 8]  # all pieces in the chess\ncount = [int(i) for i in input().split()]\n\nfor i in range(6):  # print the missing pieces\n    print(pieces[i] - count[i], end=" ")\n']
2022-04-13 06:09:04.719762 size on output set 3
2022-04-13 06:09:04.719767 size on input set 3
2022-04-13 06:09:10.149712 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# Chess pieces.\n\npieces = [1, 1, 2, 2, 2, 8]\ncount = [int(i) for i in input().split()]\n\nfor i in range(6):\n    print(pieces[i] - count[i], end=\" \")\n"
    },
    {
      "index": 1,
      "text": "# Watermelon\n\n# w = int(input())\n# if w % 2 == 0 and w > 2:\n#     print(\"YES\")\n# else:\n#     print(\"NO\")\n\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\nif a == c or b == d or a + b == c + d or a - b == c - d:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    },
    {
      "index": 2,
      "text": "# Counting sheep\n\ndef count_sheep(n):\n    if n == 0:\n        return \"INSOMNIA\"\n    else:\n        digits = set()\n        i = 1\n        while len(digits) < 10:\n            digits = digits.union(set(str(i * n)))\n            i += 1\n        return (i - 1) * n\n\nt = int(input())  # read a line with a single integer\nfor i in range(1, t + 1):\n    n = int(input())\n    print(\"Case #{}: {}\".format(i, count_sheep(n)))\n"
    }
  ],
  "created": 1649830144,
  "object": "edit"
}
2022-04-13 06:09:10.149890 fix syntax errors 3 ['# Chess pieces.\n\npieces = [1, 1, 2, 2, 2, 8]\ncount = [int(i) for i in input().split()]\n\nfor i in range(6):\n    print(pieces[i] - count[i], end=" ")\n', '# Watermelon\n\n# w = int(input())\n# if w % 2 == 0 and w > 2:\n#     print("YES")\n# else:\n#     print("NO")\n\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\nif a == c or b == d or a + b == c + d or a - b == c - d:\n    print("YES")\nelse:\n    print("NO")\n', '# Counting sheep\n\ndef count_sheep(n):\n    if n == 0:\n        return "INSOMNIA"\n    else:\n        digits = set()\n        i = 1\n        while len(digits) < 10:\n            digits = digits.union(set(str(i * n)))\n            i += 1\n        return (i - 1) * n\n\nt = int(input())  # read a line with a single integer\nfor i in range(1, t + 1):\n    n = int(input())\n    print("Case #{}: {}".format(i, count_sheep(n)))\n']
2022-04-13 06:09:11.547243 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\npieces = [1, 1, 2, 2, 2, 8]  # all pieces in the chess\ncount = [int(i) for i in input().split()]\n\nfor i in range(6):  # print the missing pieces\n    print(pieces[i] - count[i], end=\" \")\n"
    },
    {
      "index": 1,
      "text": "pieces = [1, 1, 2, 2, 2, 8]  # all pieces in the chess\ncount = [int(i) for i in input().split()]\n\nfor i in range(6):  # print the missing pieces\n    print(pieces[i] - count[i], end=\" \")\n"
    },
    {
      "index": 2,
      "text": "\npieces = [1, 1, 2, 2, 2, 8]  # all pieces in the chess\ncount = [int(i) for i in input().split()]\n\nfor i in range(6):  # print the missing pieces\n    print(pieces[i] - count[i], end=\" \")\n"
    }
  ],
  "created": 1649830150,
  "object": "edit"
}
2022-04-13 06:09:11.547419 fix syntax errors 3 ['\npieces = [1, 1, 2, 2, 2, 8]  # all pieces in the chess\ncount = [int(i) for i in input().split()]\n\nfor i in range(6):  # print the missing pieces\n    print(pieces[i] - count[i], end=" ")\n', 'pieces = [1, 1, 2, 2, 2, 8]  # all pieces in the chess\ncount = [int(i) for i in input().split()]\n\nfor i in range(6):  # print the missing pieces\n    print(pieces[i] - count[i], end=" ")\n', '\npieces = [1, 1, 2, 2, 2, 8]  # all pieces in the chess\ncount = [int(i) for i in input().split()]\n\nfor i in range(6):  # print the missing pieces\n    print(pieces[i] - count[i], end=" ")\n']
2022-04-13 06:09:17.360216 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# file\n\npieces = [1, 1, 2, 2, 2, 8] # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0444\u0438\u0433\u0443\u0440 \u0432 \u0448\u0430\u0445\u043c\u0430\u0442\u043d\u043e\u0439 \u0434\u043e\u0441\u043a\u0435\ncount = [int(i) for i in input().split()] # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0444\u0438\u0433\u0443\u0440 \u043d\u0430 \u0432\u0445\u043e\u0434\u043d\u043e\u0439 \u0434\u043e\u0441\u043a\u0435\n\nfor i in range(6): # \u0432\u044b\u0432\u043e\u0434 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u0440\u0430\u0437\u043d\u0438\u0446\u044b \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0444\u0438\u0433\u0443\u0440 \u043d\u0430 \u0448\u0430\u0445\u043c\u0430\u0442\u043d\u043e\u0439 \u0434\u043e\u0441\u043a\u0435 \u0438 \u0432\u0445\u043e\u0434\u043d\u043e\u0439 \u0434\u043e\u0441\u043a\u0435\n    print(pieces[i] - count[i], end=\" \")\n"
    },
    {
      "index": 1,
      "text": "# file\n\npieces = [1, 1, 2, 2, 2, 8] # \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0444\u0438\u0433\u0443\u0440\ncount = [int(i) for i in input().split()] # \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0444\u0438\u0433\u0443\u0440\n\nfor i in range(6):\n    print(pieces[i] - count[i], end=\" \") # \u0432\u044b\u0432\u043e\u0434 \u043d\u0435\u0434\u043e\u0441\u0442\u0430\u044e\u0449\u0438\u0445 \u0444\u0438\u0433\u0443\u0440\n"
    },
    {
      "index": 2,
      "text": "# file\n\npieces = [1, 1, 2, 2, 2, 8] # how many pieces are in the puzzle\ncount = [int(i) for i in input().split()] # how many pieces are on the table\n\nfor i in range(6):\n    print(pieces[i] - count[i], end=\" \") # print the missing pieces\n"
    }
  ],
  "created": 1649830151,
  "object": "edit"
}
2022-04-13 06:09:17.360499 fix syntax errors 3 ['# file\n\npieces = [1, 1, 2, 2, 2, 8] # количество фигур в шахматной доске\ncount = [int(i) for i in input().split()] # количество фигур на входной доске\n\nfor i in range(6): # вывод на экран разницы количества фигур на шахматной доске и входной доске\n    print(pieces[i] - count[i], end=" ")\n', '# file\n\npieces = [1, 1, 2, 2, 2, 8] # заданные количества фигур\ncount = [int(i) for i in input().split()] # введенные количества фигур\n\nfor i in range(6):\n    print(pieces[i] - count[i], end=" ") # вывод недостающих фигур\n', '# file\n\npieces = [1, 1, 2, 2, 2, 8] # how many pieces are in the puzzle\ncount = [int(i) for i in input().split()] # how many pieces are on the table\n\nfor i in range(6):\n    print(pieces[i] - count[i], end=" ") # print the missing pieces\n']
2022-04-13 06:09:17.360535 size on output set 8
2022-04-13 06:09:17.360545 num operations 2
2022-04-13 06:09:17.360550 size on input set 1
2022-04-13 06:09:21.342909 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nking, queen, rook, bishop, knight, pawn = [int(x) for x in input().split()]\n\nprint(1 - king, 1 - queen, 2 - rook, 2 - bishop, 2 - knight, 8 - pawn)\n"
    },
    {
      "index": 1,
      "text": "\n\nking, queen, rook, bishop, knight, pawn = [int(x) for x in input().split()] # \u0432\u0432\u043e\u0434\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435\n\nprint(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn) # \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u043e\u0442\u0432\u0435\u0442\n"
    },
    {
      "index": 2,
      "text": "\n\nking, queen, rooks, bishops, knights, pawns = [int(x) for x in input().split()]\n\nprint(1-king, 1-queen, 2-rooks, 2-bishops, 2-knights, 8-pawns)\n"
    }
  ],
  "created": 1649830157,
  "object": "edit"
}
2022-04-13 06:09:21.343083 fix spelling mistakes 3 ['\n\nking, queen, rook, bishop, knight, pawn = [int(x) for x in input().split()]\n\nprint(1 - king, 1 - queen, 2 - rook, 2 - bishop, 2 - knight, 8 - pawn)\n', '\n\nking, queen, rook, bishop, knight, pawn = [int(x) for x in input().split()] # вводим данные\n\nprint(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn) # выводим ответ\n', '\n\nking, queen, rooks, bishops, knights, pawns = [int(x) for x in input().split()]\n\nprint(1-king, 1-queen, 2-rooks, 2-bishops, 2-knights, 8-pawns)\n']
2022-04-13 06:09:21.343112 size on output set 3
2022-04-13 06:09:21.343120 size on input set 3
2022-04-13 06:09:26.119927 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nking, queen, rook, bishop, knight, pawn = [int(x) for x in input().split()]  # \u0432\u0432\u043e\u0434\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435\n\nprint(1 - king, 1 - queen, 2 - rook, 2 - bishop, 2 - knight, 8 - pawn)  # \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u043e\u0442\u0432\u0435\u0442\n"
    },
    {
      "index": 1,
      "text": "\n\nking, queen, rook, bishop, knight, pawn = [int(x) for x in input().split()]\n\nprint(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)\n"
    },
    {
      "index": 2,
      "text": "\n\nking, queen, rook, bishop, knight, pawn = [int(x) for x in input().split()]\n\nprint(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)\n"
    }
  ],
  "created": 1649830161,
  "object": "edit"
}
2022-04-13 06:09:26.120097 fix syntax errors 3 ['\n\nking, queen, rook, bishop, knight, pawn = [int(x) for x in input().split()]  # вводим данные\n\nprint(1 - king, 1 - queen, 2 - rook, 2 - bishop, 2 - knight, 8 - pawn)  # выводим ответ\n', '\n\nking, queen, rook, bishop, knight, pawn = [int(x) for x in input().split()]\n\nprint(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)\n', '\n\nking, queen, rook, bishop, knight, pawn = [int(x) for x in input().split()]\n\nprint(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)\n']
2022-04-13 06:09:28.364712 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nking, queen, rooks, bishops, knights, pawns = [int(x) for x in input().split()]\n\nprint(1-king, 1-queen, 2-rooks, 2-bishops, 2-knights, 8-pawns)\n"
    },
    {
      "index": 1,
      "text": "\nking, queen, rooks, bishops, knights, pawns = [int(x) for x in input().split()]\n\nprint(1-king, 1-queen, 2-rooks, 2-bishops, 2-knights, 8-pawns)\n"
    },
    {
      "index": 2,
      "text": "\n\nking, queen, rooks, bishops, knights, pawns = [int(x) for x in input().split()] \n\nprint(1-king, 1-queen, 2-rooks, 2-bishops, 2-knights, 8-pawns)\n"
    }
  ],
  "created": 1649830166,
  "object": "edit"
}
2022-04-13 06:09:28.364892 fix syntax errors 3 ['\nking, queen, rooks, bishops, knights, pawns = [int(x) for x in input().split()]\n\nprint(1-king, 1-queen, 2-rooks, 2-bishops, 2-knights, 8-pawns)\n', '\nking, queen, rooks, bishops, knights, pawns = [int(x) for x in input().split()]\n\nprint(1-king, 1-queen, 2-rooks, 2-bishops, 2-knights, 8-pawns)\n', '\n\nking, queen, rooks, bishops, knights, pawns = [int(x) for x in input().split()] \n\nprint(1-king, 1-queen, 2-rooks, 2-bishops, 2-knights, 8-pawns)\n']
2022-04-13 06:09:31.560137 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nking = int(input())\nqueen = int(input())\nrook = int(input())\nbishop = int(input())\nknight = int(input())\npawn = int(input())\n\nprint(1 - king, 1 - queen, 2 - rook, 2 - bishop, 2 - knight, 8 - pawn)\n"
    },
    {
      "index": 1,
      "text": "\nprint(1, 2, 3, sep='-')\n"
    },
    {
      "index": 2,
      "text": "\nprint(1 - int(input()), 1 - int(input()), 2 - int(input()), 2 - int(input()), 2 - int(input()), 8 - int(input()))\n"
    }
  ],
  "created": 1649830168,
  "object": "edit"
}
2022-04-13 06:09:31.560338 fix syntax errors 3 ['\n\nking = int(input())\nqueen = int(input())\nrook = int(input())\nbishop = int(input())\nknight = int(input())\npawn = int(input())\n\nprint(1 - king, 1 - queen, 2 - rook, 2 - bishop, 2 - knight, 8 - pawn)\n', "\nprint(1, 2, 3, sep='-')\n", '\nprint(1 - int(input()), 1 - int(input()), 2 - int(input()), 2 - int(input()), 2 - int(input()), 8 - int(input()))\n']
2022-04-13 06:09:31.560359 size on output set 7
2022-04-13 06:09:31.560370 num operations 2
2022-04-13 06:09:31.560375 size on input set 1
2022-04-13 06:10:10.643251 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    inp = [int(x) for x in input().split()]\n    for i, num in enumerate(inp):\n        if i == 0:\n            print(1-num, end=\" \")\n        elif i == 1:\n            print(1-num, end=\" \")\n        elif i == 2:\n            print(2-num, end=\" \")\n        elif i == 3:\n            print(2-num, end=\" \")\n        elif i == 4:\n            print(2-num, end=\" \")\n        else:\n            print(8-num)\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    input = [int(x) for x in input().split()]\n    for i, num in enumerate(input):\n        if i == 0:\n            print(2-num, end=\" \")\n        elif i == 1:\n            print(3-num, end=\" \")\n        elif i == 2:\n            print(3-num, end=\" \")\n        elif i == 3:\n            print(4-num, end=\" \")\n        elif i == 4:\n            print(2-num, end=\" \")\n        else:\n            print(9-num)\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    # for i, num in enumerate(input):\n    #     if i == 0:\n    #         print(1-num, end=\" \")\n    #     elif i == 1:\n    #         print(1-num, end=\" \")\n    #     elif i == 2:\n    #         print(2-num, end=\" \")\n    #     elif i == 3:\n    #         print(2-num, end=\" \")\n    #     elif i == 4:\n    #         print(2-num, end=\" \")\n    #     else:\n    #         print(8-num)\n    #\n    #\n    #\n    #\n    #\n    #\n\n    input = [int(x) for x in input().split()]\n    for i, num in enumerate(input):\n        if num == 1:\n            print(0, end=\" \")\n        elif num == 2:\n            print(1, end=\" \")\n        elif num == 3:\n            print(2, end=\" \")\n        elif num == 4:\n            print(3, end=\" \")\n        elif num == 5:\n            print(4, end=\" \")\n        elif num == 6:\n            print(5, end=\" \")\n        elif num == 7:\n            print(6, end=\" \")\n        elif num == 8:\n            print(7, end=\" \")\n        elif num == 9:\n            print(8, end=\" \")\n        elif num == 10:\n            print(9, end=\" \")\n        elif num == 11:\n            print(10, end=\" \")\n        elif num == 12:\n            print(11, end=\" \")\n        elif num == 13:\n            print(12, end=\" \")\n        elif num == 14:\n            print(13, end=\" \")\n        elif num == 15:\n            print(14, end=\" \")\n        elif num == 16:\n            print(15, end=\" \")\n        elif num == 17:\n            print(16, end=\" \")\n        elif num == 18:\n            print(17, end=\" \")\n        elif num == 19:\n            print(18, end=\" \")\n        elif num == 20:\n            print(19, end=\" \")\n        elif num == 21:\n            print(20, end=\" \")\n        elif num == 22:\n            print(21, end=\" \")\n        elif num == 23:\n            print(22, end=\" \")\n        elif num == 24:\n            print(23, end=\" \")\n        elif num == 25:\n            print(24, end=\" \")\n        elif num == 26:\n            print(25, end=\" \")\n        elif num == 27:\n            print(26, end=\" \")\n        elif num == 28:\n            print(27, end=\" \")\n        elif num == 29:\n            print(28, end=\" \")\n        elif num == 30:\n            print(29, end=\" \")\n        elif num == 31:\n            print(30, end=\" \")\n        elif num == 32:\n            print(31, end=\" \")\n        elif num == 33:\n            print(32, end=\" \")\n        elif num == 34:\n            print(33, end=\" \")\n        elif num == 35:\n            print(34, end=\" \")\n        elif num == 36:\n            print(35, end=\" \")\n        elif num == 37:\n            print(36, end=\" \")\n        elif num == 38:\n            print(37, end=\" \")\n        elif num == 39:\n            print(38, end=\" \")\n        elif num == 40:\n            print(39, end=\" \")\n        elif num == 41:\n            print(40, end=\" \")\n        elif num == 42:\n            print(41, end=\" \")\n        elif num == 43:\n            print(42, end=\" \")\n        elif num == 44:\n            print(43, end=\" \")\n        elif num == 45:\n            print(44, end=\" \")\n        elif num == 46:\n            print(45, end=\" \")\n        elif num == 47:\n            print(46, end=\" \")\n        elif num == 48:\n            print(47, end=\" \")\n        elif num == 49:\n            print(48, end=\" \")\n        elif num == 50:\n            print(49, end=\" \")\n        elif num == 51:\n            print(50, end=\" \")\n        elif num == 52:\n            print(51, end=\" \")\n        elif num == 53:\n            print(52, end=\" \")\n        elif num == 54:\n            print(53, end=\" \")\n        elif num == 55:\n            print(54, end=\" \")\n        elif num == 56:\n            print(55, end=\" \")\n        elif num == 57:\n            print(56, end=\" \")\n        elif num == 58:\n            print(57, end=\" \")\n        elif num == 59:\n            print(58, end=\" \")\n        elif num == 60:\n            print(59, end=\" \")\n        elif num == 61:\n            print(60, end=\" \")\n        elif num == 62:\n            print(61, end=\" \")\n        elif num == 63:\n            print(62, end=\" \")\n        elif num == 64:\n            print(63, end=\" \")\n        elif num == 65:\n            print(64, end=\" \")\n        elif num == 66:\n            print(65, end=\" \")\n        elif num == 67:\n            print(66, end=\" \")\n        elif num == 68:\n            print(67, end=\" \")\n        elif num == 69:\n            print(68, end=\" \")\n        elif num == 70:\n            print(69, end=\" \")\n        elif num == 71:\n            print(70, end=\" \")\n        elif num == 72:\n            print(71, end=\" \")\n        elif num == 73:\n            print(72, end=\" \")\n        elif num == 74:\n            print(73, end=\" \")\n        elif num == 75:\n            print(74, end=\" \")\n        elif num == 76:\n            print(75, end=\" \")\n        elif num == 77:\n            print(76, end=\" \")\n        elif num == 78:\n            print(77, end=\" \")\n        elif num == 79:\n            print(78, end=\" \")\n        elif num == 80:\n            print(79, end=\" \")\n        elif num == 81:\n            print(80, end=\" \")\n        elif num == 82:\n            print(81, end=\" \")\n        elif num == 83:\n            print(82, end=\" \")\n        elif num == 84:\n            print(83, end=\" \")\n        elif num == 85:\n            print(84, end=\" \")\n        elif num == 86:\n            print(85, end=\" \")\n        elif num == 87:\n            print(86, end=\"\n        else:\n            print(8-num)\n\nmain()\n"
    }
  ],
  "created": 1649830171,
  "object": "edit"
}
2022-04-13 06:10:10.643555 fix spelling mistakes 3 ['\n\ndef main():\n    inp = [int(x) for x in input().split()]\n    for i, num in enumerate(inp):\n        if i == 0:\n            print(1-num, end=" ")\n        elif i == 1:\n            print(1-num, end=" ")\n        elif i == 2:\n            print(2-num, end=" ")\n        elif i == 3:\n            print(2-num, end=" ")\n        elif i == 4:\n            print(2-num, end=" ")\n        else:\n            print(8-num)\n\nmain()\n', '\n\ndef main():\n    input = [int(x) for x in input().split()]\n    for i, num in enumerate(input):\n        if i == 0:\n            print(2-num, end=" ")\n        elif i == 1:\n            print(3-num, end=" ")\n        elif i == 2:\n            print(3-num, end=" ")\n        elif i == 3:\n            print(4-num, end=" ")\n        elif i == 4:\n            print(2-num, end=" ")\n        else:\n            print(9-num)\n\nmain()\n', '\n\ndef main():\n    # for i, num in enumerate(input):\n    #     if i == 0:\n    #         print(1-num, end=" ")\n    #     elif i == 1:\n    #         print(1-num, end=" ")\n    #     elif i == 2:\n    #         print(2-num, end=" ")\n    #     elif i == 3:\n    #         print(2-num, end=" ")\n    #     elif i == 4:\n    #         print(2-num, end=" ")\n    #     else:\n    #         print(8-num)\n    #\n    #\n    #\n    #\n    #\n    #\n\n    input = [int(x) for x in input().split()]\n    for i, num in enumerate(input):\n        if num == 1:\n            print(0, end=" ")\n        elif num == 2:\n            print(1, end=" ")\n        elif num == 3:\n            print(2, end=" ")\n        elif num == 4:\n            print(3, end=" ")\n        elif num == 5:\n            print(4, end=" ")\n        elif num == 6:\n            print(5, end=" ")\n        elif num == 7:\n            print(6, end=" ")\n        elif num == 8:\n            print(7, end=" ")\n        elif num == 9:\n            print(8, end=" ")\n        elif num == 10:\n            print(9, end=" ")\n        elif num == 11:\n            print(10, end=" ")\n        elif num == 12:\n            print(11, end=" ")\n        elif num == 13:\n            print(12, end=" ")\n        elif num == 14:\n            print(13, end=" ")\n        elif num == 15:\n            print(14, end=" ")\n        elif num == 16:\n            print(15, end=" ")\n        elif num == 17:\n            print(16, end=" ")\n        elif num == 18:\n            print(17, end=" ")\n        elif num == 19:\n            print(18, end=" ")\n        elif num == 20:\n            print(19, end=" ")\n        elif num == 21:\n            print(20, end=" ")\n        elif num == 22:\n            print(21, end=" ")\n        elif num == 23:\n            print(22, end=" ")\n        elif num == 24:\n            print(23, end=" ")\n        elif num == 25:\n            print(24, end=" ")\n        elif num == 26:\n            print(25, end=" ")\n        elif num == 27:\n            print(26, end=" ")\n        elif num == 28:\n            print(27, end=" ")\n        elif num == 29:\n            print(28, end=" ")\n        elif num == 30:\n            print(29, end=" ")\n        elif num == 31:\n            print(30, end=" ")\n        elif num == 32:\n            print(31, end=" ")\n        elif num == 33:\n            print(32, end=" ")\n        elif num == 34:\n            print(33, end=" ")\n        elif num == 35:\n            print(34, end=" ")\n        elif num == 36:\n            print(35, end=" ")\n        elif num == 37:\n            print(36, end=" ")\n        elif num == 38:\n            print(37, end=" ")\n        elif num == 39:\n            print(38, end=" ")\n        elif num == 40:\n            print(39, end=" ")\n        elif num == 41:\n            print(40, end=" ")\n        elif num == 42:\n            print(41, end=" ")\n        elif num == 43:\n            print(42, end=" ")\n        elif num == 44:\n            print(43, end=" ")\n        elif num == 45:\n            print(44, end=" ")\n        elif num == 46:\n            print(45, end=" ")\n        elif num == 47:\n            print(46, end=" ")\n        elif num == 48:\n            print(47, end=" ")\n        elif num == 49:\n            print(48, end=" ")\n        elif num == 50:\n            print(49, end=" ")\n        elif num == 51:\n            print(50, end=" ")\n        elif num == 52:\n            print(51, end=" ")\n        elif num == 53:\n            print(52, end=" ")\n        elif num == 54:\n            print(53, end=" ")\n        elif num == 55:\n            print(54, end=" ")\n        elif num == 56:\n            print(55, end=" ")\n        elif num == 57:\n            print(56, end=" ")\n        elif num == 58:\n            print(57, end=" ")\n        elif num == 59:\n            print(58, end=" ")\n        elif num == 60:\n            print(59, end=" ")\n        elif num == 61:\n            print(60, end=" ")\n        elif num == 62:\n            print(61, end=" ")\n        elif num == 63:\n            print(62, end=" ")\n        elif num == 64:\n            print(63, end=" ")\n        elif num == 65:\n            print(64, end=" ")\n        elif num == 66:\n            print(65, end=" ")\n        elif num == 67:\n            print(66, end=" ")\n        elif num == 68:\n            print(67, end=" ")\n        elif num == 69:\n            print(68, end=" ")\n        elif num == 70:\n            print(69, end=" ")\n        elif num == 71:\n            print(70, end=" ")\n        elif num == 72:\n            print(71, end=" ")\n        elif num == 73:\n            print(72, end=" ")\n        elif num == 74:\n            print(73, end=" ")\n        elif num == 75:\n            print(74, end=" ")\n        elif num == 76:\n            print(75, end=" ")\n        elif num == 77:\n            print(76, end=" ")\n        elif num == 78:\n            print(77, end=" ")\n        elif num == 79:\n            print(78, end=" ")\n        elif num == 80:\n            print(79, end=" ")\n        elif num == 81:\n            print(80, end=" ")\n        elif num == 82:\n            print(81, end=" ")\n        elif num == 83:\n            print(82, end=" ")\n        elif num == 84:\n            print(83, end=" ")\n        elif num == 85:\n            print(84, end=" ")\n        elif num == 86:\n            print(85, end=" ")\n        elif num == 87:\n            print(86, end="\n        else:\n            print(8-num)\n\nmain()\n']
2022-04-13 06:10:10.643624 size on output set 3
2022-04-13 06:10:10.643630 size on input set 3
2022-04-13 06:10:17.158368 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    inp = [int(x) for x in input().split()]\n    for i, num in enumerate(inp):\n        if i == 0:\n            print(1 - num, end=\" \")\n        elif i == 1:\n            print(1 - num, end=\" \")\n        elif i == 2:\n            print(2 - num, end=\" \")\n        elif i == 3:\n            print(2 - num, end=\" \")\n        elif i == 4:\n            print(2 - num, end=\" \")\n        else:\n            print(8 - num)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    inp = [int(x) for x in input().split(\" \")]\n    for i, num in enumerate(inp):\n        if i == 0:\n            print(1-num, end=\" \")\n        elif i == 1:\n            print(1-num, end=\" \")\n        elif i == 2:\n            print(2-num, end=\" \")\n        elif i == 3:\n            print(2-num, end=\" \")\n        elif i == 4:\n            print(2-num, end=\" \")\n        else:\n            print(8-num)\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    inp = [int(x) for x in input().split()] \n    out = []\n    for i in range(len(inp)):\n        if i == 0 or i == 1:\n            out.append(1-inp[i])\n        elif i == 2 or i == 3 or i == 4:\n            out.append(2-inp[i])\n        elif i == 5:\n            out.append(8-inp[i])\n    print(*out)\n\nmain()\n"
    }
  ],
  "created": 1649830210,
  "object": "edit"
}
2022-04-13 06:10:17.158529 fix syntax errors 3 ['\n\ndef main():\n    inp = [int(x) for x in input().split()]\n    for i, num in enumerate(inp):\n        if i == 0:\n            print(1 - num, end=" ")\n        elif i == 1:\n            print(1 - num, end=" ")\n        elif i == 2:\n            print(2 - num, end=" ")\n        elif i == 3:\n            print(2 - num, end=" ")\n        elif i == 4:\n            print(2 - num, end=" ")\n        else:\n            print(8 - num)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    inp = [int(x) for x in input().split(" ")]\n    for i, num in enumerate(inp):\n        if i == 0:\n            print(1-num, end=" ")\n        elif i == 1:\n            print(1-num, end=" ")\n        elif i == 2:\n            print(2-num, end=" ")\n        elif i == 3:\n            print(2-num, end=" ")\n        elif i == 4:\n            print(2-num, end=" ")\n        else:\n            print(8-num)\n\nmain()\n', '\n\ndef main():\n    n = int(input())\n    inp = [int(x) for x in input().split()] \n    out = []\n    for i in range(len(inp)):\n        if i == 0 or i == 1:\n            out.append(1-inp[i])\n        elif i == 2 or i == 3 or i == 4:\n            out.append(2-inp[i])\n        elif i == 5:\n            out.append(8-inp[i])\n    print(*out)\n\nmain()\n']
2022-04-13 06:10:19.728746 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # for i, num in enumerate(input):\n    #     if i == 0:\n    #         print(1-num, end=\" \")\n    #     elif i == 1:\n    #         print(1-num, end=\" \")\n    #     elif i == 2:\n    #         print(2-num, end=\" \")\n    #     elif i == 3:\n    #         print(2-num, end=\" \")\n    #     elif i == 4:\n    #         print(2-num, end=\" \")\n    #     else:\n    #         print(8-num)\n    #\n    #\n    #\n    #\n    #\n    #\n\n    input = [int(x) for x in input().split()]\n    for i, num in enumerate(input):\n        if num == 1:\n            print(0, end=\" \")\n        elif num == 2:\n            print(1, end=\" \")\n        elif num == 3:\n            print(2, end=\" \")\n        elif num == 4:\n            print(3, end=\" \")\n        elif num == 5:\n            print(4, end=\" \")\n        elif num == 6:\n            print(5, end=\" \")\n        elif num == 7:\n            print(6, end=\" \")\n        elif num == 8:\n            print(7, end=\" \")\n        elif num == 9:\n            print(8, end=\" \")\n        elif num == 10:\n            print(9, end=\" \")\n        elif num == 11:\n            print(10, end=\" \")\n        elif num == 12:\n            print(11, end=\" \")\n        elif num == 13:\n            print(12, end=\" \")\n        elif num == 14:\n            print(13, end=\" \")\n        elif num == 15:\n            print(14, end=\" \")\n        elif num == 16:\n            print(15, end=\" \")\n        elif num == 17:\n            print(16, end=\" \")\n        elif num == 18:\n            print(17, end=\" \")\n        elif num == 19:\n            print(18, end=\" \")\n        elif num == 20:\n            print(19, end=\" \")\n        elif num == 21:\n            print(20, end=\" \")\n        elif num == 22:\n            print(21, end=\" \")\n        elif num == 23:\n            print(22, end=\" \")\n        elif num == 24:\n            print(23, end=\" \")\n        elif num == 25:\n            print(24, end=\" \")\n        elif num == 26:\n            print(25, end=\" \")\n        elif num == 27:\n            print(26, end=\" \")\n        elif num == 28:\n            print(27, end=\" \")\n        elif num == 29:\n            print(28, end=\" \")\n        elif num == 30:\n            print(29, end=\" \")\n        elif num == 31:\n            print(30, end=\" \")\n        elif num == 32:\n            print(31, end=\" \")\n        elif num == 33:\n            print(32, end=\" \")\n        elif num == 34:\n            print(33, end=\" \")\n        elif num == 35:\n            print(34, end=\" \")\n        elif num == 36:\n            print(35, end=\" \")\n        elif num == 37:\n            print(36, end=\" \")\n        elif num == 38:\n            print(37, end=\" \")\n        elif num == 39:\n            print(38, end=\" \")\n        elif num == 40:\n            print(39, end=\" \")\n        elif num == 41:\n            print(40, end=\" \")\n        elif num == 42:\n            print(41, end=\" \")\n        elif num == 43:\n            print(42, end=\" \")\n        elif num == 44:\n            print(43, end=\" \")\n        elif num == 45:\n            print(44, end=\" \")\n        elif num == 46:\n            print(45, end=\" \")\n        elif num == 47:\n            print(46, end=\" \")\n        elif num == 48:\n            print(47, end=\" \")\n        elif num == 49:\n            print(48, end=\" \")\n        elif num == 50:\n            print(49, end=\" \")\n        elif num == 51:\n            print(50, end=\" \")\n        elif num == 52:\n            print(51, end=\" \")\n        elif num == 53:\n            print(52, end=\" \")\n        elif num == 54:\n            print(53, end=\" \")\n        elif num == 55:\n            print(54, end=\" \")\n        elif num == 56:\n            print(55, end=\" \")\n        elif num == 57:\n            print(56, end=\" \")\n        elif num == 58:\n            print(57, end=\" \")\n        elif num == 59:\n            print(58, end=\" \")\n        elif num == 60:\n            print(59, end=\" \")\n        elif num == 61:\n            print(60, end=\" \")\n        elif num == 62:\n            print(61, end=\" \")\n        elif num == 63:\n            print(62, end=\" \")\n        elif num == 64:\n            print(63, end=\" \")\n        elif num == 65:\n            print(64, end=\" \")\n        elif num == 66:\n            print(65, end=\" \")\n        elif num == 67:\n            print(66, end=\" \")\n        elif num == 68:\n            print(67, end=\" \")\n        elif num == 69:\n            print(68, end=\" \")\n        elif num == 70:\n            print(69, end=\" \")\n        elif num == 71:\n            print(70, end=\" \")\n        elif num == 72:\n            print(71, end=\" \")\n        elif num == 73:\n            print(72, end=\" \")\n        elif num == 74:\n            print(73, end=\" \")\n        elif num == 75:\n            print(74, end=\" \")\n        elif num == 76:\n            print(75, end=\" \")\n        elif num == 77:\n            print(76, end=\" \")\n        elif num == 78:\n            print(77, end=\" \")\n        elif num == 79:\n            print(78, end=\" \")\n        elif num == 80:\n            print(79, end=\" \")\n        elif num == 81:\n            print(80, end=\" \")\n        elif num == 82:\n            print(81, end=\" \")\n        elif num == 83:\n            print(82, end=\" \")\n        elif num == 84:\n            print(83, end=\" \")\n        elif num == 85:\n            print(84, end=\" \")\n        elif num == 86:\n            print(85, end=\" \")\n        elif num == 87:\n            print(86, end=\" \")\n        elif num == 88:\n            print(87, end=\" \")\n        else:\n            print(8-num)\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # for i, num in enumerate(input):\n    #     if i == 0:\n    #         print(1-num, end=\" \")\n    #     elif i == 1:\n    #         print(1-num, end=\" \")\n    #     elif i == 2:\n    #         print(2-num, end=\" \")\n    #     elif i == 3:\n    #         print(2-num, end=\" \")\n    #     elif i == 4:\n    #         print(2-num, end=\" \")\n    #     else:\n    #         print(8-num)\n    #\n    #\n    #\n    #\n    #\n    #\n\n    input = [int(x) for x in input().split()]\n    for i, num in enumerate(input):\n        if num == 1:\n            print(0, end=\" \")\n        elif num == 2:\n            print(1, end=\" \")\n        elif num == 3:\n            print(2, end=\" \")\n        elif num == 4:\n            print(3, end=\" \")\n        elif num == 5:\n            print(4, end=\" \")\n        elif num == 6:\n            print(5, end=\" \")\n        elif num == 7:\n            print(6, end=\" \")\n        elif num == 8:\n            print(7, end=\" \")\n        elif num == 9:\n            print(8, end=\" \")\n        elif num == 10:\n            print(9, end=\" \")\n        elif num == 11:\n            print(10, end=\" \")\n        elif num == 12:\n            print(11, end=\" \")\n        elif num == 13:\n            print(12, end=\" \")\n        elif num == 14:\n            print(13, end=\" \")\n        elif num == 15:\n            print(14, end=\" \")\n        elif num == 16:\n            print(15, end=\" \")\n        elif num == 17:\n            print(16, end=\" \")\n        elif num == 18:\n            print(17, end=\" \")\n        elif num == 19:\n            print(18, end=\" \")\n        elif num == 20:\n            print(19, end=\" \")\n        elif num == 21:\n            print(20, end=\" \")\n        elif num == 22:\n            print(21, end=\" \")\n        elif num == 23:\n            print(22, end=\" \")\n        elif num == 24:\n            print(23, end=\" \")\n        elif num == 25:\n            print(24, end=\" \")\n        elif num == 26:\n            print(25, end=\" \")\n        elif num == 27:\n            print(26, end=\" \")\n        elif num == 28:\n            print(27, end=\" \")\n        elif num == 29:\n            print(28, end=\" \")\n        elif num == 30:\n            print(29, end=\" \")\n        elif num == 31:\n            print(30, end=\" \")\n        elif num == 32:\n            print(31, end=\" \")\n        elif num == 33:\n            print(32, end=\" \")\n        elif num == 34:\n            print(33, end=\" \")\n        elif num == 35:\n            print(34, end=\" \")\n        elif num == 36:\n            print(35, end=\" \")\n        elif num == 37:\n            print(36, end=\" \")\n        elif num == 38:\n            print(37, end=\" \")\n        elif num == 39:\n            print(38, end=\" \")\n        elif num == 40:\n            print(39, end=\" \")\n        elif num == 41:\n            print(40, end=\" \")\n        elif num == 42:\n            print(41, end=\" \")\n        elif num == 43:\n            print(42, end=\" \")\n        elif num == 44:\n            print(43, end=\" \")\n        elif num == 45:\n            print(44, end=\" \")\n        elif num == 46:\n            print(45, end=\" \")\n        elif num == 47:\n            print(46, end=\" \")\n        elif num == 48:\n            print(47, end=\" \")\n        elif num == 49:\n            print(48, end=\" \")\n        elif num == 50:\n            print(49, end=\" \")\n        elif num == 51:\n            print(50, end=\" \")\n        elif num == 52:\n            print(51, end=\" \")\n        elif num == 53:\n            print(52, end=\" \")\n        elif num == 54:\n            print(53, end=\" \")\n        elif num == 55:\n            print(54, end=\" \")\n        elif num == 56:\n            print(55, end=\" \")\n        elif num == 57:\n            print(56, end=\" \")\n        elif num == 58:\n            print(57, end=\" \")\n        elif num == 59:\n            print(58, end=\" \")\n        elif num == 60:\n            print(59, end=\" \")\n        elif num == 61:\n            print(60, end=\" \")\n        elif num == 62:\n            print(61, end=\" \")\n        elif num == 63:\n            print(62, end=\" \")\n        elif num == 64:\n            print(63, end=\" \")\n        elif num == 65:\n            print(64, end=\" \")\n        elif num == 66:\n            print(65, end=\" \")\n        elif num == 67:\n            print(66, end=\" \")\n        elif num == 68:\n            print(67, end=\" \")\n        elif num == 69:\n            print(68, end=\" \")\n        elif num == 70:\n            print(69, end=\" \")\n        elif num == 71:\n            print(70, end=\" \")\n        elif num == 72:\n            print(71, end=\" \")\n        elif num == 73:\n            print(72, end=\" \")\n        elif num == 74:\n            print(73, end=\" \")\n        elif num == 75:\n            print(74, end=\" \")\n        elif num == 76:\n            print(75, end=\" \")\n        elif num == 77:\n            print(76, end=\" \")\n        elif num == 78:\n            print(77, end=\" \")\n        elif num == 79:\n            print(78, end=\" \")\n        elif num == 80:\n            print(79, end=\" \")\n        elif num == 81:\n            print(80, end=\" \")\n        elif num == 82:\n            print(81, end=\" \")\n        elif num == 83:\n            print(82, end=\" \")\n        elif num == 84:\n            print(83, end=\" \")\n        elif num == 85:\n            print(84, end=\" \")\n        elif num == 86:\n            print(85, end=\" \")\n        elif num == 87:\n            print(86, end=\" \")\n        else:\n            print(8-num)\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    # for i, num in enumerate(input):\n    #     if i == 0:\n    #         print(1-num, end=\" \")\n    #     elif i == 1:\n    #         print(1-num, end=\" \")\n    #     elif i == 2:\n    #         print(2-num, end=\" \")\n    #     elif i == 3:\n    #         print(2-num, end=\" \")\n    #     elif i == 4:\n    #         print(2-num, end=\" \")\n    #     else:\n    #         print(8-num)\n    #\n    #\n    #\n    #\n    #\n    #\n\n    input = [int(x) for x in input().split()]\n    for i, num in enumerate(input):\n        if num == 1:\n            print(0, end=\" \")\n        elif num == 2:\n            print(1, end=\" \")\n        elif num == 3:\n            print(2, end=\" \")\n        elif num == 4:\n            print(3, end=\" \")\n        elif num == 5:\n            print(4, end=\" \")\n        elif num == 6:\n            print(5, end=\" \")\n        elif num == 7:\n            print(6, end=\" \")\n        elif num == 8:\n            print(7, end=\" \")\n        elif num == 9:\n            print(8, end=\" \")\n        elif num == 10:\n            print(9, end=\" \")\n        elif num == 11:\n            print(10, end=\" \")\n        elif num == 12:\n            print(11, end=\" \")\n        elif num == 13:\n            print(12, end=\" \")\n        elif num == 14:\n            print(13, end=\" \")\n        elif num == 15:\n            print(14, end=\" \")\n        elif num == 16:\n            print(15, end=\" \")\n        elif num == 17:\n            print(16, end=\" \")\n        elif num == 18:\n            print(17, end=\" \")\n        elif num == 19:\n            print(18, end=\" \")\n        elif num == 20:\n            print(19, end=\" \")\n        elif num == 21:\n            print(20, end=\" \")\n        elif num == 22:\n            print(21, end=\" \")\n        elif num == 23:\n            print(22, end=\" \")\n        elif num == 24:\n            print(23, end=\" \")\n        elif num == 25:\n            print(24, end=\" \")\n        elif num == 26:\n            print(25, end=\" \")\n        elif num == 27:\n            print(26, end=\" \")\n        elif num == 28:\n            print(27, end=\" \")\n        elif num == 29:\n            print(28, end=\" \")\n        elif num == 30:\n            print(29, end=\" \")\n        elif num == 31:\n            print(30, end=\" \")\n        elif num == 32:\n            print(31, end=\" \")\n        elif num == 33:\n            print(32, end=\" \")\n        elif num == 34:\n            print(33, end=\" \")\n        elif num == 35:\n            print(34, end=\" \")\n        elif num == 36:\n            print(35, end=\" \")\n        elif num == 37:\n            print(36, end=\" \")\n        elif num == 38:\n            print(37, end=\" \")\n        elif num == 39:\n            print(38, end=\" \")\n        elif num == 40:\n            print(39, end=\" \")\n        elif num == 41:\n            print(40, end=\" \")\n        elif num == 42:\n            print(41, end=\" \")\n        elif num == 43:\n            print(42, end=\" \")\n        elif num == 44:\n            print(43, end=\" \")\n        elif num == 45:\n            print(44, end=\" \")\n        elif num == 46:\n            print(45, end=\" \")\n        elif num == 47:\n            print(46, end=\" \")\n        elif num == 48:\n            print(47, end=\" \")\n        elif num == 49:\n            print(48, end=\" \")\n        elif num == 50:\n            print(49, end=\" \")\n        elif num == 51:\n            print(50, end=\" \")\n        elif num == 52:\n            print(51, end=\" \")\n        elif num == 53:\n            print(52, end=\" \")\n        elif num == 54:\n            print(53, end=\" \")\n        elif num == 55:\n            print(54, end=\" \")\n        elif num == 56:\n            print(55, end=\" \")\n        elif num == 57:\n            print(56, end=\" \")\n        elif num == 58:\n            print(57, end=\" \")\n        elif num == 59:\n            print(58, end=\" \")\n        elif num == 60:\n            print(59, end=\" \")\n        elif num == 61:\n            print(60, end=\" \")\n        elif num == 62:\n            print(61, end=\" \")\n        elif num == 63:\n            print(62, end=\" \")\n        elif num == 64:\n            print(63, end=\" \")\n        elif num == 65:\n            print(64, end=\" \")\n        elif num == 66:\n            print(65, end=\" \")\n        elif num == 67:\n            print(66, end=\" \")\n        elif num == 68:\n            print(67, end=\" \")\n        elif num == 69:\n            print(68, end=\" \")\n        elif num == 70:\n            print(69, end=\" \")\n        elif num == 71:\n            print(70, end=\" \")\n        elif num == 72:\n            print(71, end=\" \")\n        elif num == 73:\n            print(72, end=\" \")\n        elif num == 74:\n            print(73, end=\" \")\n        elif num == 75:\n            print(74, end=\" \")\n        elif num == 76:\n            print(75, end=\" \")\n        elif num == 77:\n            print(76, end=\" \")\n        elif num == 78:\n            print(77, end=\" \")\n        elif num == 79:\n            print(78, end=\" \")\n        elif num == 80:\n            print(79, end=\" \")\n        elif num == 81:\n            print(80, end=\" \")\n        elif num == 82:\n            print(81, end=\" \")\n        elif num == 83:\n            print(82, end=\" \")\n        elif num == 84:\n            print(83, end=\" \")\n        elif num == 85:\n            print(84, end=\" \")\n        elif num == 86:\n            print(85, end=\" \")\n        elif num == 87:\n            print(86, end=\" \")\n        else:\n            print(8-num)\n\nmain()\n"
    }
  ],
  "created": 1649830217,
  "object": "edit"
}
2022-04-13 06:10:19.729056 fix syntax errors 3 ['\n\ndef main():\n    # for i, num in enumerate(input):\n    #     if i == 0:\n    #         print(1-num, end=" ")\n    #     elif i == 1:\n    #         print(1-num, end=" ")\n    #     elif i == 2:\n    #         print(2-num, end=" ")\n    #     elif i == 3:\n    #         print(2-num, end=" ")\n    #     elif i == 4:\n    #         print(2-num, end=" ")\n    #     else:\n    #         print(8-num)\n    #\n    #\n    #\n    #\n    #\n    #\n\n    input = [int(x) for x in input().split()]\n    for i, num in enumerate(input):\n        if num == 1:\n            print(0, end=" ")\n        elif num == 2:\n            print(1, end=" ")\n        elif num == 3:\n            print(2, end=" ")\n        elif num == 4:\n            print(3, end=" ")\n        elif num == 5:\n            print(4, end=" ")\n        elif num == 6:\n            print(5, end=" ")\n        elif num == 7:\n            print(6, end=" ")\n        elif num == 8:\n            print(7, end=" ")\n        elif num == 9:\n            print(8, end=" ")\n        elif num == 10:\n            print(9, end=" ")\n        elif num == 11:\n            print(10, end=" ")\n        elif num == 12:\n            print(11, end=" ")\n        elif num == 13:\n            print(12, end=" ")\n        elif num == 14:\n            print(13, end=" ")\n        elif num == 15:\n            print(14, end=" ")\n        elif num == 16:\n            print(15, end=" ")\n        elif num == 17:\n            print(16, end=" ")\n        elif num == 18:\n            print(17, end=" ")\n        elif num == 19:\n            print(18, end=" ")\n        elif num == 20:\n            print(19, end=" ")\n        elif num == 21:\n            print(20, end=" ")\n        elif num == 22:\n            print(21, end=" ")\n        elif num == 23:\n            print(22, end=" ")\n        elif num == 24:\n            print(23, end=" ")\n        elif num == 25:\n            print(24, end=" ")\n        elif num == 26:\n            print(25, end=" ")\n        elif num == 27:\n            print(26, end=" ")\n        elif num == 28:\n            print(27, end=" ")\n        elif num == 29:\n            print(28, end=" ")\n        elif num == 30:\n            print(29, end=" ")\n        elif num == 31:\n            print(30, end=" ")\n        elif num == 32:\n            print(31, end=" ")\n        elif num == 33:\n            print(32, end=" ")\n        elif num == 34:\n            print(33, end=" ")\n        elif num == 35:\n            print(34, end=" ")\n        elif num == 36:\n            print(35, end=" ")\n        elif num == 37:\n            print(36, end=" ")\n        elif num == 38:\n            print(37, end=" ")\n        elif num == 39:\n            print(38, end=" ")\n        elif num == 40:\n            print(39, end=" ")\n        elif num == 41:\n            print(40, end=" ")\n        elif num == 42:\n            print(41, end=" ")\n        elif num == 43:\n            print(42, end=" ")\n        elif num == 44:\n            print(43, end=" ")\n        elif num == 45:\n            print(44, end=" ")\n        elif num == 46:\n            print(45, end=" ")\n        elif num == 47:\n            print(46, end=" ")\n        elif num == 48:\n            print(47, end=" ")\n        elif num == 49:\n            print(48, end=" ")\n        elif num == 50:\n            print(49, end=" ")\n        elif num == 51:\n            print(50, end=" ")\n        elif num == 52:\n            print(51, end=" ")\n        elif num == 53:\n            print(52, end=" ")\n        elif num == 54:\n            print(53, end=" ")\n        elif num == 55:\n            print(54, end=" ")\n        elif num == 56:\n            print(55, end=" ")\n        elif num == 57:\n            print(56, end=" ")\n        elif num == 58:\n            print(57, end=" ")\n        elif num == 59:\n            print(58, end=" ")\n        elif num == 60:\n            print(59, end=" ")\n        elif num == 61:\n            print(60, end=" ")\n        elif num == 62:\n            print(61, end=" ")\n        elif num == 63:\n            print(62, end=" ")\n        elif num == 64:\n            print(63, end=" ")\n        elif num == 65:\n            print(64, end=" ")\n        elif num == 66:\n            print(65, end=" ")\n        elif num == 67:\n            print(66, end=" ")\n        elif num == 68:\n            print(67, end=" ")\n        elif num == 69:\n            print(68, end=" ")\n        elif num == 70:\n            print(69, end=" ")\n        elif num == 71:\n            print(70, end=" ")\n        elif num == 72:\n            print(71, end=" ")\n        elif num == 73:\n            print(72, end=" ")\n        elif num == 74:\n            print(73, end=" ")\n        elif num == 75:\n            print(74, end=" ")\n        elif num == 76:\n            print(75, end=" ")\n        elif num == 77:\n            print(76, end=" ")\n        elif num == 78:\n            print(77, end=" ")\n        elif num == 79:\n            print(78, end=" ")\n        elif num == 80:\n            print(79, end=" ")\n        elif num == 81:\n            print(80, end=" ")\n        elif num == 82:\n            print(81, end=" ")\n        elif num == 83:\n            print(82, end=" ")\n        elif num == 84:\n            print(83, end=" ")\n        elif num == 85:\n            print(84, end=" ")\n        elif num == 86:\n            print(85, end=" ")\n        elif num == 87:\n            print(86, end=" ")\n        elif num == 88:\n            print(87, end=" ")\n        else:\n            print(8-num)\n\nmain()\n', '\n\ndef main():\n    # for i, num in enumerate(input):\n    #     if i == 0:\n    #         print(1-num, end=" ")\n    #     elif i == 1:\n    #         print(1-num, end=" ")\n    #     elif i == 2:\n    #         print(2-num, end=" ")\n    #     elif i == 3:\n    #         print(2-num, end=" ")\n    #     elif i == 4:\n    #         print(2-num, end=" ")\n    #     else:\n    #         print(8-num)\n    #\n    #\n    #\n    #\n    #\n    #\n\n    input = [int(x) for x in input().split()]\n    for i, num in enumerate(input):\n        if num == 1:\n            print(0, end=" ")\n        elif num == 2:\n            print(1, end=" ")\n        elif num == 3:\n            print(2, end=" ")\n        elif num == 4:\n            print(3, end=" ")\n        elif num == 5:\n            print(4, end=" ")\n        elif num == 6:\n            print(5, end=" ")\n        elif num == 7:\n            print(6, end=" ")\n        elif num == 8:\n            print(7, end=" ")\n        elif num == 9:\n            print(8, end=" ")\n        elif num == 10:\n            print(9, end=" ")\n        elif num == 11:\n            print(10, end=" ")\n        elif num == 12:\n            print(11, end=" ")\n        elif num == 13:\n            print(12, end=" ")\n        elif num == 14:\n            print(13, end=" ")\n        elif num == 15:\n            print(14, end=" ")\n        elif num == 16:\n            print(15, end=" ")\n        elif num == 17:\n            print(16, end=" ")\n        elif num == 18:\n            print(17, end=" ")\n        elif num == 19:\n            print(18, end=" ")\n        elif num == 20:\n            print(19, end=" ")\n        elif num == 21:\n            print(20, end=" ")\n        elif num == 22:\n            print(21, end=" ")\n        elif num == 23:\n            print(22, end=" ")\n        elif num == 24:\n            print(23, end=" ")\n        elif num == 25:\n            print(24, end=" ")\n        elif num == 26:\n            print(25, end=" ")\n        elif num == 27:\n            print(26, end=" ")\n        elif num == 28:\n            print(27, end=" ")\n        elif num == 29:\n            print(28, end=" ")\n        elif num == 30:\n            print(29, end=" ")\n        elif num == 31:\n            print(30, end=" ")\n        elif num == 32:\n            print(31, end=" ")\n        elif num == 33:\n            print(32, end=" ")\n        elif num == 34:\n            print(33, end=" ")\n        elif num == 35:\n            print(34, end=" ")\n        elif num == 36:\n            print(35, end=" ")\n        elif num == 37:\n            print(36, end=" ")\n        elif num == 38:\n            print(37, end=" ")\n        elif num == 39:\n            print(38, end=" ")\n        elif num == 40:\n            print(39, end=" ")\n        elif num == 41:\n            print(40, end=" ")\n        elif num == 42:\n            print(41, end=" ")\n        elif num == 43:\n            print(42, end=" ")\n        elif num == 44:\n            print(43, end=" ")\n        elif num == 45:\n            print(44, end=" ")\n        elif num == 46:\n            print(45, end=" ")\n        elif num == 47:\n            print(46, end=" ")\n        elif num == 48:\n            print(47, end=" ")\n        elif num == 49:\n            print(48, end=" ")\n        elif num == 50:\n            print(49, end=" ")\n        elif num == 51:\n            print(50, end=" ")\n        elif num == 52:\n            print(51, end=" ")\n        elif num == 53:\n            print(52, end=" ")\n        elif num == 54:\n            print(53, end=" ")\n        elif num == 55:\n            print(54, end=" ")\n        elif num == 56:\n            print(55, end=" ")\n        elif num == 57:\n            print(56, end=" ")\n        elif num == 58:\n            print(57, end=" ")\n        elif num == 59:\n            print(58, end=" ")\n        elif num == 60:\n            print(59, end=" ")\n        elif num == 61:\n            print(60, end=" ")\n        elif num == 62:\n            print(61, end=" ")\n        elif num == 63:\n            print(62, end=" ")\n        elif num == 64:\n            print(63, end=" ")\n        elif num == 65:\n            print(64, end=" ")\n        elif num == 66:\n            print(65, end=" ")\n        elif num == 67:\n            print(66, end=" ")\n        elif num == 68:\n            print(67, end=" ")\n        elif num == 69:\n            print(68, end=" ")\n        elif num == 70:\n            print(69, end=" ")\n        elif num == 71:\n            print(70, end=" ")\n        elif num == 72:\n            print(71, end=" ")\n        elif num == 73:\n            print(72, end=" ")\n        elif num == 74:\n            print(73, end=" ")\n        elif num == 75:\n            print(74, end=" ")\n        elif num == 76:\n            print(75, end=" ")\n        elif num == 77:\n            print(76, end=" ")\n        elif num == 78:\n            print(77, end=" ")\n        elif num == 79:\n            print(78, end=" ")\n        elif num == 80:\n            print(79, end=" ")\n        elif num == 81:\n            print(80, end=" ")\n        elif num == 82:\n            print(81, end=" ")\n        elif num == 83:\n            print(82, end=" ")\n        elif num == 84:\n            print(83, end=" ")\n        elif num == 85:\n            print(84, end=" ")\n        elif num == 86:\n            print(85, end=" ")\n        elif num == 87:\n            print(86, end=" ")\n        else:\n            print(8-num)\n\nmain()\n', '\n\ndef main():\n    # for i, num in enumerate(input):\n    #     if i == 0:\n    #         print(1-num, end=" ")\n    #     elif i == 1:\n    #         print(1-num, end=" ")\n    #     elif i == 2:\n    #         print(2-num, end=" ")\n    #     elif i == 3:\n    #         print(2-num, end=" ")\n    #     elif i == 4:\n    #         print(2-num, end=" ")\n    #     else:\n    #         print(8-num)\n    #\n    #\n    #\n    #\n    #\n    #\n\n    input = [int(x) for x in input().split()]\n    for i, num in enumerate(input):\n        if num == 1:\n            print(0, end=" ")\n        elif num == 2:\n            print(1, end=" ")\n        elif num == 3:\n            print(2, end=" ")\n        elif num == 4:\n            print(3, end=" ")\n        elif num == 5:\n            print(4, end=" ")\n        elif num == 6:\n            print(5, end=" ")\n        elif num == 7:\n            print(6, end=" ")\n        elif num == 8:\n            print(7, end=" ")\n        elif num == 9:\n            print(8, end=" ")\n        elif num == 10:\n            print(9, end=" ")\n        elif num == 11:\n            print(10, end=" ")\n        elif num == 12:\n            print(11, end=" ")\n        elif num == 13:\n            print(12, end=" ")\n        elif num == 14:\n            print(13, end=" ")\n        elif num == 15:\n            print(14, end=" ")\n        elif num == 16:\n            print(15, end=" ")\n        elif num == 17:\n            print(16, end=" ")\n        elif num == 18:\n            print(17, end=" ")\n        elif num == 19:\n            print(18, end=" ")\n        elif num == 20:\n            print(19, end=" ")\n        elif num == 21:\n            print(20, end=" ")\n        elif num == 22:\n            print(21, end=" ")\n        elif num == 23:\n            print(22, end=" ")\n        elif num == 24:\n            print(23, end=" ")\n        elif num == 25:\n            print(24, end=" ")\n        elif num == 26:\n            print(25, end=" ")\n        elif num == 27:\n            print(26, end=" ")\n        elif num == 28:\n            print(27, end=" ")\n        elif num == 29:\n            print(28, end=" ")\n        elif num == 30:\n            print(29, end=" ")\n        elif num == 31:\n            print(30, end=" ")\n        elif num == 32:\n            print(31, end=" ")\n        elif num == 33:\n            print(32, end=" ")\n        elif num == 34:\n            print(33, end=" ")\n        elif num == 35:\n            print(34, end=" ")\n        elif num == 36:\n            print(35, end=" ")\n        elif num == 37:\n            print(36, end=" ")\n        elif num == 38:\n            print(37, end=" ")\n        elif num == 39:\n            print(38, end=" ")\n        elif num == 40:\n            print(39, end=" ")\n        elif num == 41:\n            print(40, end=" ")\n        elif num == 42:\n            print(41, end=" ")\n        elif num == 43:\n            print(42, end=" ")\n        elif num == 44:\n            print(43, end=" ")\n        elif num == 45:\n            print(44, end=" ")\n        elif num == 46:\n            print(45, end=" ")\n        elif num == 47:\n            print(46, end=" ")\n        elif num == 48:\n            print(47, end=" ")\n        elif num == 49:\n            print(48, end=" ")\n        elif num == 50:\n            print(49, end=" ")\n        elif num == 51:\n            print(50, end=" ")\n        elif num == 52:\n            print(51, end=" ")\n        elif num == 53:\n            print(52, end=" ")\n        elif num == 54:\n            print(53, end=" ")\n        elif num == 55:\n            print(54, end=" ")\n        elif num == 56:\n            print(55, end=" ")\n        elif num == 57:\n            print(56, end=" ")\n        elif num == 58:\n            print(57, end=" ")\n        elif num == 59:\n            print(58, end=" ")\n        elif num == 60:\n            print(59, end=" ")\n        elif num == 61:\n            print(60, end=" ")\n        elif num == 62:\n            print(61, end=" ")\n        elif num == 63:\n            print(62, end=" ")\n        elif num == 64:\n            print(63, end=" ")\n        elif num == 65:\n            print(64, end=" ")\n        elif num == 66:\n            print(65, end=" ")\n        elif num == 67:\n            print(66, end=" ")\n        elif num == 68:\n            print(67, end=" ")\n        elif num == 69:\n            print(68, end=" ")\n        elif num == 70:\n            print(69, end=" ")\n        elif num == 71:\n            print(70, end=" ")\n        elif num == 72:\n            print(71, end=" ")\n        elif num == 73:\n            print(72, end=" ")\n        elif num == 74:\n            print(73, end=" ")\n        elif num == 75:\n            print(74, end=" ")\n        elif num == 76:\n            print(75, end=" ")\n        elif num == 77:\n            print(76, end=" ")\n        elif num == 78:\n            print(77, end=" ")\n        elif num == 79:\n            print(78, end=" ")\n        elif num == 80:\n            print(79, end=" ")\n        elif num == 81:\n            print(80, end=" ")\n        elif num == 82:\n            print(81, end=" ")\n        elif num == 83:\n            print(82, end=" ")\n        elif num == 84:\n            print(83, end=" ")\n        elif num == 85:\n            print(84, end=" ")\n        elif num == 86:\n            print(85, end=" ")\n        elif num == 87:\n            print(86, end=" ")\n        else:\n            print(8-num)\n\nmain()\n']
2022-04-13 06:10:22.225424 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    inp = [int(x) for x in input().split()]\n    for i, num in enumerate(inp):\n        if i == 0:\n            print(2-num, end=\" \")\n        elif i == 1:\n            print(3-num, end=\" \")\n        elif i == 2:\n            print(3-num, end=\" \")\n        elif i == 3:\n            print(4-num, end=\" \")\n        elif i == 4:\n            print(2-num, end=\" \")\n        else:\n            print(9-num)\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    nums = [int(x) for x in input().split()]\n    for i, num in enumerate(nums):\n        if i == 0:\n            print(2-num, end=\" \")\n        elif i == 1:\n            print(3-num, end=\" \")\n        elif i == 2:\n            print(3-num, end=\" \")\n        elif i == 3:\n            print(4-num, end=\" \")\n        elif i == 4:\n            print(2-num, end=\" \")\n        else:\n            print(9-num)\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    inp = [int(x) for x in input().split()]\n    for i, num in enumerate(inp):\n        if i == 0:\n            print(2-num, end=\" \")\n        elif i == 1:\n            print(3-num, end=\" \")\n        elif i == 2:\n            print(3-num, end=\" \")\n        elif i == 3:\n            print(4-num, end=\" \")\n        elif i == 4:\n            print(2-num, end=\" \")\n        else:\n            print(9-num)\n\nmain()\n"
    }
  ],
  "created": 1649830219,
  "object": "edit"
}
2022-04-13 06:10:22.225605 fix syntax errors 3 ['\n\ndef main():\n    inp = [int(x) for x in input().split()]\n    for i, num in enumerate(inp):\n        if i == 0:\n            print(2-num, end=" ")\n        elif i == 1:\n            print(3-num, end=" ")\n        elif i == 2:\n            print(3-num, end=" ")\n        elif i == 3:\n            print(4-num, end=" ")\n        elif i == 4:\n            print(2-num, end=" ")\n        else:\n            print(9-num)\n\nmain()\n', '\n\ndef main():\n    nums = [int(x) for x in input().split()]\n    for i, num in enumerate(nums):\n        if i == 0:\n            print(2-num, end=" ")\n        elif i == 1:\n            print(3-num, end=" ")\n        elif i == 2:\n            print(3-num, end=" ")\n        elif i == 3:\n            print(4-num, end=" ")\n        elif i == 4:\n            print(2-num, end=" ")\n        else:\n            print(9-num)\n\nmain()\n', '\n\ndef main():\n    inp = [int(x) for x in input().split()]\n    for i, num in enumerate(inp):\n        if i == 0:\n            print(2-num, end=" ")\n        elif i == 1:\n            print(3-num, end=" ")\n        elif i == 2:\n            print(3-num, end=" ")\n        elif i == 3:\n            print(4-num, end=" ")\n        elif i == 4:\n            print(2-num, end=" ")\n        else:\n            print(9-num)\n\nmain()\n']
2022-04-13 06:10:22.225636 size on output set 7
2022-04-13 06:10:22.225646 num operations 2
2022-04-13 06:10:22.225651 size on input set 1
2022-04-13 06:10:25.659659 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())  # input the number of pieces\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)  # output the number of pieces needed\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split()) # take input\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn) # print output\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())\n    print(1 - king, 1 - queen, 2 - rook, 2 - bishop, 2 - knight, 8 - pawn)\n\nmain()\n"
    }
  ],
  "created": 1649830222,
  "object": "edit"
}
2022-04-13 06:10:25.659826 fix spelling mistakes 3 ['\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())  # input the number of pieces\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)  # output the number of pieces needed\n\nmain()\n', '\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split()) # take input\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn) # print output\n\nmain()\n', '\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())\n    print(1 - king, 1 - queen, 2 - rook, 2 - bishop, 2 - knight, 8 - pawn)\n\nmain()\n']
2022-04-13 06:10:25.659851 size on output set 3
2022-04-13 06:10:25.659857 size on input set 3
2022-04-13 06:10:28.949647 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())\n    print(1 - king, 1 - queen, 2 - rook, 2 - bishop, 2 - knight, 8 - pawn, sep=' ')\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split()) \n    print(1 - king, 1 - queen, 2 - rook, 2 - bishop, 2 - knight, 8 - pawn) \n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())\n    print(1 - king, 1 - queen, 2 - rook, 2 - bishop, 2 - knight, 8 - pawn, end=\" \")\n\nmain()\n"
    }
  ],
  "created": 1649830225,
  "object": "edit"
}
2022-04-13 06:10:28.949890 fix syntax errors 3 ["\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())\n    print(1 - king, 1 - queen, 2 - rook, 2 - bishop, 2 - knight, 8 - pawn, sep=' ')\n\nmain()\n", '\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split()) \n    print(1 - king, 1 - queen, 2 - rook, 2 - bishop, 2 - knight, 8 - pawn) \n\nmain()\n', '\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())\n    print(1 - king, 1 - queen, 2 - rook, 2 - bishop, 2 - knight, 8 - pawn, end=" ")\n\nmain()\n']
2022-04-13 06:10:31.848575 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())  # input the number of pieces\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)  # output the number of pieces needed \n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())  # input the number of pieces\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)  # output the number of pieces needed.\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():  # define main function\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())  # input the number of pieces\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)  # output the number of pieces needed\n\nmain()\n"
    }
  ],
  "created": 1649830228,
  "object": "edit"
}
2022-04-13 06:10:31.848737 fix syntax errors 3 ['\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())  # input the number of pieces\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)  # output the number of pieces needed \n\nmain()\n', '\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())  # input the number of pieces\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)  # output the number of pieces needed.\n\nmain()\n', '\ndef main():  # define main function\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())  # input the number of pieces\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)  # output the number of pieces needed\n\nmain()\n']
2022-04-13 06:10:35.670816 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())  # take input\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)  # print output\n\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())  # take input\n    print(1 - king, 1 - queen, 2 - rook, 2 - bishop, 2 - knight, 8 - pawn)  # print output\n\n\nmain()\n"
    }
  ],
  "created": 1649830231,
  "object": "edit"
}
2022-04-13 06:10:35.671046 fix syntax errors 3 ['\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)\n\nmain()\n', '\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())  # take input\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)  # print output\n\n\nmain()\n', '\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())  # take input\n    print(1 - king, 1 - queen, 2 - rook, 2 - bishop, 2 - knight, 8 - pawn)  # print output\n\n\nmain()\n']
2022-04-13 06:10:35.671073 size on output set 9
2022-04-13 06:10:35.671085 num operations 2
2022-04-13 06:10:35.671090 size on input set 1
2022-04-13 06:10:37.618468 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\n# Get input\npieces = [int(x) for x in sys.stdin.readline().split()]\n\n# Check if each piece is in the correct quantity and print the result\nprint(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\n# Get input \npieces = [int(x) for x in sys.stdin.readline().split()]\n\n# Check if each piece is in the correct quantity\nprint(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\n# Get input \npieces = [int(x) for x in sys.stdin.readline().split()]\n\n# Check if each piece is in the correct quantity\nprint(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n"
    }
  ],
  "created": 1649830235,
  "object": "edit"
}
2022-04-13 06:10:37.618633 fix spelling mistakes 3 ['\n\nimport sys\n\n# Get input\npieces = [int(x) for x in sys.stdin.readline().split()]\n\n# Check if each piece is in the correct quantity and print the result\nprint(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n', '\n\nimport sys\n\n# Get input \npieces = [int(x) for x in sys.stdin.readline().split()]\n\n# Check if each piece is in the correct quantity\nprint(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n', '\n\nimport sys\n\n# Get input \npieces = [int(x) for x in sys.stdin.readline().split()]\n\n# Check if each piece is in the correct quantity\nprint(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n']
2022-04-13 06:10:37.618661 size on output set 2
2022-04-13 06:10:37.618668 size on input set 2
2022-04-13 06:10:41.655039 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\npieces = [int(x) for x in sys.stdin.readline().split()]\nprint(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\n# Get input \npieces = [int(x) for x in sys.stdin.readline().split()]\n\n# Check if each piece is in the correct quantity\nprint(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5], sep=' ')\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\n# Get input\npieces = [int(x) for x in sys.stdin.readline().split()]\n\n# Check if each piece is in the correct quantity\nprint(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n"
    }
  ],
  "created": 1649830237,
  "object": "edit"
}
2022-04-13 06:10:41.655196 fix syntax errors 3 ['import sys\npieces = [int(x) for x in sys.stdin.readline().split()]\nprint(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n', "\nimport sys\n\n# Get input \npieces = [int(x) for x in sys.stdin.readline().split()]\n\n# Check if each piece is in the correct quantity\nprint(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5], sep=' ')\n", '\n\nimport sys\n\n# Get input\npieces = [int(x) for x in sys.stdin.readline().split()]\n\n# Check if each piece is in the correct quantity\nprint(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n']
2022-04-13 06:10:45.898168 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\n# Get input\npieces = [int(x) for x in sys.stdin.readline().split()]\n\n# Check if each piece is in the correct quantity and print the result\nprint(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5], sep=' ')\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\n# Get input\npieces = [int(x) for x in sys.stdin.readline().split()]\n\n# Check if each piece is in the correct quantity and print the result\nprint(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5], sep=' ')\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\npieces = [int(x) for x in sys.stdin.readline().split()] # Get input\nprint(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5]) # Check if each piece is in the correct quantity and print the result\n"
    }
  ],
  "created": 1649830241,
  "object": "edit"
}
2022-04-13 06:10:45.898440 fix syntax errors 3 ["\n\nimport sys\n\n# Get input\npieces = [int(x) for x in sys.stdin.readline().split()]\n\n# Check if each piece is in the correct quantity and print the result\nprint(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5], sep=' ')\n", "\n\nimport sys\n\n# Get input\npieces = [int(x) for x in sys.stdin.readline().split()]\n\n# Check if each piece is in the correct quantity and print the result\nprint(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5], sep=' ')\n", '\nimport sys\n\npieces = [int(x) for x in sys.stdin.readline().split()] # Get input\nprint(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5]) # Check if each piece is in the correct quantity and print the result\n']
2022-04-13 06:10:45.898465 size on output set 5
2022-04-13 06:10:45.898474 num operations 2
2022-04-13 06:10:45.898479 size on input set 1
2022-04-13 06:10:47.965740 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # read the input\n    pieces = [int(x) for x in input().split(\" \")]\n\n    # output the result\n    print(\"1 0 0 0 0 1\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # read the input\n    pieces = [int(x) for x in input().split(\" \")]\n\n    # output the result\n    print(\"1 0 0 0 0 1\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    # Read the input\n    pieces = [int(x) for x in input().split(\" \")]\n\n    # Output the result\n    print(\"1 0 0 0 0 0\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649830245,
  "object": "edit"
}
2022-04-13 06:10:47.965915 fix spelling mistakes 3 ['\n\ndef main():\n    # read the input\n    pieces = [int(x) for x in input().split(" ")]\n\n    # output the result\n    print("1 0 0 0 0 1")\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # read the input\n    pieces = [int(x) for x in input().split(" ")]\n\n    # output the result\n    print("1 0 0 0 0 1")\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # Read the input\n    pieces = [int(x) for x in input().split(" ")]\n\n    # Output the result\n    print("1 0 0 0 0 0")\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 06:10:47.965942 size on output set 2
2022-04-13 06:10:47.965949 size on input set 2
2022-04-13 06:10:50.465174 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # Read the input\n    pieces = [int(x) for x in input().split(\" \")]\n\n    # Output the result\n    print(\"0 0 0 0 0 0\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # Read the input\n    pieces = [int(x) for x in input().split(\" \")]\n\n    # Output the result\n    print(\"0 0 0 0 0 0\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    print(\"Hello World\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649830248,
  "object": "edit"
}
2022-04-13 06:10:50.465484 fix syntax errors 3 ['\n\ndef main():\n    # Read the input\n    pieces = [int(x) for x in input().split(" ")]\n\n    # Output the result\n    print("0 0 0 0 0 0")\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # Read the input\n    pieces = [int(x) for x in input().split(" ")]\n\n    # Output the result\n    print("0 0 0 0 0 0")\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    print("Hello World")\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 06:10:53.755830 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # read the input\n    pieces = [int(x) for x in input().split(\" \")]  # noqa\n\n    # output the result\n    print(\"1 0 0 0 0 1\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # read the input and split it into two integers\n    # a, b = [int(x) for x in input().split(\" \")]\n\n    # output the result\n    print(\"\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    # read the input\n    # pieces = [int(x) for x in input().split(\" \")]\n\n    # output the result\n    print(\"1 0 0 0 0 1\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649830250,
  "object": "edit"
}
2022-04-13 06:10:53.755988 fix syntax errors 3 ['\n\ndef main():\n    # read the input\n    pieces = [int(x) for x in input().split(" ")]  # noqa\n\n    # output the result\n    print("1 0 0 0 0 1")\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # read the input and split it into two integers\n    # a, b = [int(x) for x in input().split(" ")]\n\n    # output the result\n    print("")\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # read the input\n    # pieces = [int(x) for x in input().split(" ")]\n\n    # output the result\n    print("1 0 0 0 0 1")\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 06:10:53.756014 size on output set 5
2022-04-13 06:10:53.756024 num operations 2
2022-04-13 06:10:53.756028 size on input set 1
2022-04-13 06:10:55.825383 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n# this is a comment\npcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)):\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n"
    },
    {
      "index": 1,
      "text": "\n\npcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)): #loop through the input\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n"
    },
    {
      "index": 2,
      "text": "\n# this is a test\n\npcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)):\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n"
    }
  ],
  "created": 1649830253,
  "object": "edit"
}
2022-04-13 06:10:55.825589 fix spelling mistakes 3 ['\n# this is a comment\npcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)):\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n', '\n\npcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)): #loop through the input\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n', '\n# this is a test\n\npcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)):\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n']
2022-04-13 06:10:55.825628 size on output set 3
2022-04-13 06:10:55.825635 size on input set 3
2022-04-13 06:10:57.721331 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# this is a test for a new branch\n\npcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)):\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n"
    },
    {
      "index": 1,
      "text": "\npcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)):\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n"
    },
    {
      "index": 2,
      "text": "\n# this is a test 2\n\npcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)):\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n"
    }
  ],
  "created": 1649830255,
  "object": "edit"
}
2022-04-13 06:10:57.721638 fix syntax errors 3 ['\n# this is a test for a new branch\n\npcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)):\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n', '\npcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)):\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n', '\n# this is a test 2\n\npcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)):\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n']
2022-04-13 06:11:38.455479 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "pcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)):\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n"
    },
    {
      "index": 1,
      "text": "pcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)):\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n"
    },
    {
      "index": 2,
      "text": "# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is\n\n# this is a comment\npcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)):\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n"
    }
  ],
  "created": 1649830257,
  "object": "edit"
}
2022-04-13 06:11:38.455794 fix syntax errors 3 ['pcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)):\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n', 'pcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)):\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n', '# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is a comment\n# this is\n\n# this is a comment\npcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)):\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n']
2022-04-13 06:11:56.549738 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\npcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)): #loop through the input\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n"
    },
    {
      "index": 1,
      "text": "\n\npcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)): #loop through the input\n    if i == 0 and pcs[i] > 1:\n        pcs[i] = pcs[i] - 1\n    elif i == 0 and pcs[i] < 1:\n        pcs[i] = pcs[i] + 1\n    elif i == 1 and pcs[i] > 1:\n        pcs[i] = pcs[i] - 1\n    elif i == 1 and pcs[i] < 1:\n        pcs[i] = pcs[i] + 1\n    elif i == 2 and pcs[i] > 2:\n        pcs[i] = pcs[i] - 2\n    elif i == 2 and pcs[i] < 2:\n        pcs[i] = pcs[i] + 2\n    elif i == 3 and pcs[i] > 2:\n        pcs[i] = pcs[i] - 2\n    elif i == 3 and pcs[i] < 2:\n        pcs[i] = pcs[i] + 2\n    elif i == 4 and pcs[i] > 2:\n        pcs[i] = pcs[i] - 2\n    elif i == 4 and pcs[i] < 2:\n        pcs[i] = pcs[i] + 2\n    elif i == 5 and pcs[i] > 8:\n        pcs[i] = pcs[i] - 8\n    elif i == 5 and pcs[i] < 8:\n        pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    pcs = [int(x) for x in input().split()]\n    for i in range(len(pcs)): #loop through the input\n        if i == 0:\n            if pcs[i] > 1:\n                pcs[i] = pcs[i] - 1\n            elif pcs[i] < 1:\n                pcs[i] = pcs[i] + 1\n        elif i == 1:\n            if pcs[i] > 1:\n                pcs[i] = pcs[i] - 1\n            elif pcs[i] < 1:\n                pcs[i] = pcs[i] + 1\n        elif i == 2:\n            if pcs[i] > 2:\n                pcs[i] = pcs[i] - 2\n            elif pcs[i] < 2:\n                pcs[i] = pcs[i] + 2\n        elif i == 3:\n            if pcs[i] > 2:\n                pcs[i] = pcs[i] - 2\n            elif pcs[i] < 2:\n                pcs[i] = pcs[i] + 2\n        elif i == 4:\n            if pcs[i] > 2:\n                pcs[i] = pcs[i] - 2\n            elif pcs[i] < 2:\n                pcs[i] = pcs[i] + 2\n        elif i == 5:\n            if pcs[i] > 8:\n                pcs[i] = pcs[i] - 8\n            elif pcs[i] < 8:\n                pcs[i] = pcs[i] + 8\n    print(*pcs)\nmain()\n"
    }
  ],
  "created": 1649830298,
  "object": "edit"
}
2022-04-13 06:11:56.549941 fix syntax errors 3 ['\npcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)): #loop through the input\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n', '\n\npcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)): #loop through the input\n    if i == 0 and pcs[i] > 1:\n        pcs[i] = pcs[i] - 1\n    elif i == 0 and pcs[i] < 1:\n        pcs[i] = pcs[i] + 1\n    elif i == 1 and pcs[i] > 1:\n        pcs[i] = pcs[i] - 1\n    elif i == 1 and pcs[i] < 1:\n        pcs[i] = pcs[i] + 1\n    elif i == 2 and pcs[i] > 2:\n        pcs[i] = pcs[i] - 2\n    elif i == 2 and pcs[i] < 2:\n        pcs[i] = pcs[i] + 2\n    elif i == 3 and pcs[i] > 2:\n        pcs[i] = pcs[i] - 2\n    elif i == 3 and pcs[i] < 2:\n        pcs[i] = pcs[i] + 2\n    elif i == 4 and pcs[i] > 2:\n        pcs[i] = pcs[i] - 2\n    elif i == 4 and pcs[i] < 2:\n        pcs[i] = pcs[i] + 2\n    elif i == 5 and pcs[i] > 8:\n        pcs[i] = pcs[i] - 8\n    elif i == 5 and pcs[i] < 8:\n        pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n', '\ndef main():\n    pcs = [int(x) for x in input().split()]\n    for i in range(len(pcs)): #loop through the input\n        if i == 0:\n            if pcs[i] > 1:\n                pcs[i] = pcs[i] - 1\n            elif pcs[i] < 1:\n                pcs[i] = pcs[i] + 1\n        elif i == 1:\n            if pcs[i] > 1:\n                pcs[i] = pcs[i] - 1\n            elif pcs[i] < 1:\n                pcs[i] = pcs[i] + 1\n        elif i == 2:\n            if pcs[i] > 2:\n                pcs[i] = pcs[i] - 2\n            elif pcs[i] < 2:\n                pcs[i] = pcs[i] + 2\n        elif i == 3:\n            if pcs[i] > 2:\n                pcs[i] = pcs[i] - 2\n            elif pcs[i] < 2:\n                pcs[i] = pcs[i] + 2\n        elif i == 4:\n            if pcs[i] > 2:\n                pcs[i] = pcs[i] - 2\n            elif pcs[i] < 2:\n                pcs[i] = pcs[i] + 2\n        elif i == 5:\n            if pcs[i] > 8:\n                pcs[i] = pcs[i] - 8\n            elif pcs[i] < 8:\n                pcs[i] = pcs[i] + 8\n    print(*pcs)\nmain()\n']
2022-04-13 06:11:56.549987 size on output set 8
