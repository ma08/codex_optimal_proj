["\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n\n    main()\n", "from collections import deque\n\nn, k = map(int, input().split())  # \u0447\u0438\u0441\u043b\u043e \u0447\u0438\u0441\u0435\u043b, \u0434\u043b\u0438\u043d\u0430 \u043e\u0447\u0435\u0440\u0435\u0434\u0438\nids = list(map(int, input().split()))  # \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0435 \u0447\u0438\u0441\u043b\u0430\n\nd = deque()  # \u043e\u0447\u0435\u0440\u0435\u0434\u044c\n\nfor id in ids:  # \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u043c \u043f\u043e \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u043c \u0447\u0438\u0441\u043b\u0430\u043c\n    if id in d:  # \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0435\u0441\u0442\u044c \u043b\u0438 \u0447\u0438\u0441\u043b\u043e \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u0438\n        continue  # \u0435\u0441\u043b\u0438 \u0435\u0441\u0442\u044c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0435\u0433\u043e\n    if len(d) == k:  # \u0435\u0441\u043b\u0438 \u0434\u043b\u0438\u043d\u0430 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u0440\u0430\u0432\u043d\u0430 \u0434\u043b\u0438\u043d\u0435 \u043e\u0447\u0435\u0440\u0435\u0434\u0438\n        d.pop()  # \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0438\u0437 \u043e\u0447\u0435\u0440\u0435\u0434\u0438\n    d.appendleft(id)  # \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0432 \u043d\u0430\u0447\u0430\u043b\u043e \u043e\u0447\u0435\u0440\u0435\u0434\u0438\n\nprint(len(d))  # \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u0434\u043b\u0438\u043d\u0443 \u043e\u0447\u0435\u0440\u0435\u0434\u0438\nprint(*d)  # \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u043e\u0447\u0435\u0440\u0435\u0434\u044c\n", "\n\ndef main():\n    print(\"Hello\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom collections import deque\n\nn, k = map(int, input().split())\nids = list(map(int, input().split()))\n\nd = deque()\n\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\n\nprint(len(d))\nprint(*d)\n", "\n\ndef main():\n    n, k = [int(x) for x in input().split()]\n    ids = [int(x) for x in input().split()]\n    ids_to_count = {}\n    for i in range(n):\n        if ids[i] not in ids_to_count:\n            if len(ids_to_count) == k:\n                remove_id = min(ids_to_count.values())\n                del ids_to_count[remove_id]\n            ids_to_count[ids[i]] = 0\n        ids_to_count[ids[i]] += 1\n        for id_ in ids_to_count.keys():\n            if id_ != ids[i] and id_ not in ids[:i]:\n                ids_to_count[id_] += 1 \n    print(len(ids_to_count))\n    for id_ in ids_to_count:\n        print(id_, end=' ')\n\nif __name__ == \"__main__\":\n    main()\n", "\nfrom collections import deque\n\nn, k = map(int, input().split())\nids = list(map(int, input().split()))\n\nd = deque()\n\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\n\nprint(len(d))\nprint(*d)\n", "\ndef main():\n    n, k = [int(x) for x in input().split()] # n - number of people, k - maximum number of people to invite\n    ids = [int(x) for x in input().split()] # ids of people that come to the party\n    ids_to_count = {}\n    for i in range(n):\n        if ids[i] not in ids_to_count: # if the person is not in the list of people to invite\n            if len(ids_to_count) == k:\n                remove_id = min(ids_to_count.values()) # find the person with the least number of invites\n                del ids_to_count[remove_id] # remove the person with the least number of invites\n            ids_to_count[ids[i]] = 0\n        else: # if the person is in the list of people to invite\n            ids_to_count[ids[i]] += 1\n        for id_ in ids_to_count: # increase the number of invites for all the people in the list\n            if id_ != ids[i]:\n                ids_to_count[id_] += 1\n    print(len(ids_to_count))\n    for id_ in ids_to_count:\n        print(id_, end=' ')\n\nif __name__ == \"__main__\":\n    main()\n", "from collections import deque\n\nn, k = map(int, input().split())\nids = list(map(int, input().split()))\n\nd = deque()\n\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\n\nprint(len(d))\nprint(*d)\n", "#!/usr/bin/env python3\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n", "print(1)\n", "\n\nfrom collections import deque\n\nn, k = map(int, input().split())\nids = list(map(int, input().split()))\n    \nd = deque()\n\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\n\nprint(len(d), *d, sep='\\n')\n"]