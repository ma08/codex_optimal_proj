2022-04-12 22:21:30.621251 num operations 2
2022-04-12 22:21:30.621269 size on input set 1
2022-04-12 22:21:35.466610 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\nratings = [int(i) for i in input().split()]\n\n# The minimum possible number of different colors\nmin_color = 0\nfor rating in ratings:\n    if rating <= 3200:\n        min_color += 1\n    else:\n        min_color += 2\nprint(min_color)\n\n# The maximum possible number of different colors.\nmax_color = len(set(ratings))\nprint(max_color)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\nratings = [int(i) for i in input().split()]\n\n# The minimum possible number of different flavours\nmin_flavour = 0\nfor rating in ratings:\n    if rating <= 3200:\n        min_flavour += 1\n    else:\n        min_flavour += 2\nprint(min_flavour)\n\n# The maximum possible number of different flavours\nmax_flavour = len(set(ratings))\nprint(max_flavour)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nratings = [int(i) for i in input().split()]\n\n# The minimum possible number of different colors\nmin_color = 0\nfor rating in ratings:\n    if rating <= 3200:\n        min_color += 1\n    else:\n        min_color += 2\nprint(min_color)\n\n# The maximum possible number of different colors\nmax_color = len(set(ratings))\nprint(max_color)\n"
    }
  ],
  "created": 1649802090,
  "object": "edit"
}
2022-04-12 22:21:35.466825 fix spelling mistakes 3 ['\n\nn = int(input())\nratings = [int(i) for i in input().split()]\n\n# The minimum possible number of different colors\nmin_color = 0\nfor rating in ratings:\n    if rating <= 3200:\n        min_color += 1\n    else:\n        min_color += 2\nprint(min_color)\n\n# The maximum possible number of different colors.\nmax_color = len(set(ratings))\nprint(max_color)\n', '\n\nn = int(input())\nratings = [int(i) for i in input().split()]\n\n# The minimum possible number of different flavours\nmin_flavour = 0\nfor rating in ratings:\n    if rating <= 3200:\n        min_flavour += 1\n    else:\n        min_flavour += 2\nprint(min_flavour)\n\n# The maximum possible number of different flavours\nmax_flavour = len(set(ratings))\nprint(max_flavour)\n', '\nn = int(input())\nratings = [int(i) for i in input().split()]\n\n# The minimum possible number of different colors\nmin_color = 0\nfor rating in ratings:\n    if rating <= 3200:\n        min_color += 1\n    else:\n        min_color += 2\nprint(min_color)\n\n# The maximum possible number of different colors\nmax_color = len(set(ratings))\nprint(max_color)\n']
2022-04-12 22:21:35.466852 size on output set 3
2022-04-12 22:21:35.466858 size on input set 3
2022-04-12 22:21:38.066731 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\nratings = list(map(int, input().split()))\n\n# The minimum possible number of different flavours\nmin_flavour = 0\nfor rating in ratings:\n    if rating <= 3200:\n        min_flavour += 1\n    else:\n        min_flavour += 2\nprint(min_flavour)\n\n# The maximum possible number of different flavours\nmax_flavour = len(set(ratings))\nprint(max_flavour)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nratings = [int(i) for i in input().split()]\n\n# The minimum possible number of different flavors\nmin_flavour = 0\nfor rating in ratings:\n    if rating <= 3200:\n        min_flavour += 1\n    else:\n        min_flavour += 2\nprint(min_flavour)\n\n# The maximum possible number of different flavors\nmax_flavour = len(set(ratings))\nprint(max_flavour)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\nratings = list(map(int, input().split()))\n\n# The minimum possible number of different flavours\nmin_flavour = 0\nfor rating in ratings:\n    if rating <= 3200:\n        min_flavour += 1\n    else:\n        min_flavour += 2\nprint(min_flavour)\n\n# The maximum possible number of different flavours\nmax_flavour = len(set(ratings))\nprint(max_flavour)\n"
    }
  ],
  "created": 1649802095,
  "object": "edit"
}
2022-04-12 22:21:38.066939 fix syntax errors 3 ['\n\nn = int(input())\nratings = list(map(int, input().split()))\n\n# The minimum possible number of different flavours\nmin_flavour = 0\nfor rating in ratings:\n    if rating <= 3200:\n        min_flavour += 1\n    else:\n        min_flavour += 2\nprint(min_flavour)\n\n# The maximum possible number of different flavours\nmax_flavour = len(set(ratings))\nprint(max_flavour)\n', '\nn = int(input())\nratings = [int(i) for i in input().split()]\n\n# The minimum possible number of different flavors\nmin_flavour = 0\nfor rating in ratings:\n    if rating <= 3200:\n        min_flavour += 1\n    else:\n        min_flavour += 2\nprint(min_flavour)\n\n# The maximum possible number of different flavors\nmax_flavour = len(set(ratings))\nprint(max_flavour)\n', '\n\nn = int(input())\nratings = list(map(int, input().split()))\n\n# The minimum possible number of different flavours\nmin_flavour = 0\nfor rating in ratings:\n    if rating <= 3200:\n        min_flavour += 1\n    else:\n        min_flavour += 2\nprint(min_flavour)\n\n# The maximum possible number of different flavours\nmax_flavour = len(set(ratings))\nprint(max_flavour)\n']
2022-04-12 22:21:41.214114 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# The minimum possible number of different colors\n\nn = int(input())\nratings = [int(i) for i in input().split()]\nmin_color = 0\nfor rating in ratings:\n    if rating <= 3200:\n        min_color += 1\n    else:\n        min_color += 2\nprint(min_color)  # The minimum possible number of different colors\n\n# The maximum possible number of different colors.\nmax_color = len(set(ratings))\nprint(max_color)  # The maximum possible number of different colors.\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nn = int(input())\nratings = [int(i) for i in input().split()]\n\n# The minimum possible number of different colors\nmin_color = 0\nfor rating in ratings:\n    if rating <= 3200:\n        min_color += 1\n    else:\n        min_color += 2\nprint(min_color)\n\n# The maximum possible number of different colors.\nmax_color = len(set(ratings))\nprint(max_color)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nratings = [int(i) for i in input().split()]\n\n# The minimum possible number of different colors\nmin_color = 0\nfor rating in ratings:\n    if rating <= 3200:\n        min_color += 1\n    else:\n        min_color += 2\nprint(min_color)\n\n# The maximum possible number of different colors.\nmax_color = len(set(ratings))\nprint(max_color)\n"
    }
  ],
  "created": 1649802098,
  "object": "edit"
}
2022-04-12 22:21:41.214309 fix syntax errors 3 ['# The minimum possible number of different colors\n\nn = int(input())\nratings = [int(i) for i in input().split()]\nmin_color = 0\nfor rating in ratings:\n    if rating <= 3200:\n        min_color += 1\n    else:\n        min_color += 2\nprint(min_color)  # The minimum possible number of different colors\n\n# The maximum possible number of different colors.\nmax_color = len(set(ratings))\nprint(max_color)  # The maximum possible number of different colors.\n', '#!/usr/bin/env python3\n\nn = int(input())\nratings = [int(i) for i in input().split()]\n\n# The minimum possible number of different colors\nmin_color = 0\nfor rating in ratings:\n    if rating <= 3200:\n        min_color += 1\n    else:\n        min_color += 2\nprint(min_color)\n\n# The maximum possible number of different colors.\nmax_color = len(set(ratings))\nprint(max_color)\n', '\nn = int(input())\nratings = [int(i) for i in input().split()]\n\n# The minimum possible number of different colors\nmin_color = 0\nfor rating in ratings:\n    if rating <= 3200:\n        min_color += 1\n    else:\n        min_color += 2\nprint(min_color)\n\n# The maximum possible number of different colors.\nmax_color = len(set(ratings))\nprint(max_color)\n']
2022-04-12 22:22:09.127147 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nratings = [int(i) for i in input().split()]\n\n# The minimum possible number of different colors\nmin_colors = 0\nfor rating in ratings:\n    if rating <= 3200:\n        min_colors += 1\n    else:\n        min_colors += 2\nprint(min_colors)\n\n# The maximum possible number of different colors\nmax_colors = len(set(ratings))\nprint(max_colors)\n"
    },
    {
      "index": 1,
      "text": "\n\"\"\"\ndef max_num(numbers):\n    max_num = 0\n    for number in numbers:\n        if number > max_num:\n            max_num = number\n    return max_num\n\n\ndef max_num2(numbers):\n    max_num = numbers[0]\n    for number in numbers:\n        if number > max_num:\n            max_num = number\n    return max_num\n\n\ndef min_num(numbers):\n    min_num = numbers[0]\n    for number in numbers:\n        if number < min_num:\n            min_num = number\n    return min_num\n\n\ndef min_num2(numbers):\n    min_num = 0\n    for number in numbers:\n        if number < min_num:\n            min_num = number\n    return min_num\n\n\ndef sum_num(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num\n\n\ndef sum_num2(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num\n\n\ndef avg_num(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num2(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num3(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num4(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num5(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num6(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num7(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num8(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num9(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num10(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num11(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num12(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num13(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num14(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num15(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num16(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num17(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num18(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num19(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num20(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\"\"\"\n\n\"\"\"\ndef avg_num21(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\"\"\"\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nratings = [int(i) for i in input().split()]\n\n# The minimum possible number of different ratings\nmin_rating = 0\nfor rating in ratings:\n    if rating <= 3200:\n        min_rating += 1\n    else:\n        min_rating += 2\nprint(min_rating)\n\n# The maximum possible number of different ratings\nmax_rating = len(set(ratings))\nprint(max_rating)\n"
    }
  ],
  "created": 1649802101,
  "object": "edit"
}
2022-04-12 22:22:09.127415 fix syntax errors 3 ['\nn = int(input())\nratings = [int(i) for i in input().split()]\n\n# The minimum possible number of different colors\nmin_colors = 0\nfor rating in ratings:\n    if rating <= 3200:\n        min_colors += 1\n    else:\n        min_colors += 2\nprint(min_colors)\n\n# The maximum possible number of different colors\nmax_colors = len(set(ratings))\nprint(max_colors)\n', '\n"""\ndef max_num(numbers):\n    max_num = 0\n    for number in numbers:\n        if number > max_num:\n            max_num = number\n    return max_num\n\n\ndef max_num2(numbers):\n    max_num = numbers[0]\n    for number in numbers:\n        if number > max_num:\n            max_num = number\n    return max_num\n\n\ndef min_num(numbers):\n    min_num = numbers[0]\n    for number in numbers:\n        if number < min_num:\n            min_num = number\n    return min_num\n\n\ndef min_num2(numbers):\n    min_num = 0\n    for number in numbers:\n        if number < min_num:\n            min_num = number\n    return min_num\n\n\ndef sum_num(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num\n\n\ndef sum_num2(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num\n\n\ndef avg_num(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num2(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num3(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num4(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num5(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num6(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num7(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num8(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num9(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num10(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num11(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num12(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num13(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num14(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num15(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num16(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num17(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num18(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num19(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n\n\ndef avg_num20(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n"""\n\n"""\ndef avg_num21(numbers):\n    sum_num = 0\n    for number in numbers:\n        sum_num += number\n    return sum_num / len(numbers)\n"""\n', '\nn = int(input())\nratings = [int(i) for i in input().split()]\n\n# The minimum possible number of different ratings\nmin_rating = 0\nfor rating in ratings:\n    if rating <= 3200:\n        min_rating += 1\n    else:\n        min_rating += 2\nprint(min_rating)\n\n# The maximum possible number of different ratings\nmax_rating = len(set(ratings))\nprint(max_rating)\n']
2022-04-12 22:22:09.127470 size on output set 8
2022-04-12 22:22:09.127483 num operations 2
2022-04-12 22:22:09.127487 size on input set 1
2022-04-12 22:22:14.858446 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    # Read the input\n    N = int(input())\n    ratings = [int(x) for x in input().split()]\n\n    # Find the minimum and maximum number of colours\n    minColours = 0\n    maxColours = 0\n    ratingColours = [None]*8\n    for rating in ratings:\n        if rating >= 3200:\n            maxColours += 1\n        else:\n            color = rating // 400\n            if ratingColours[color] == None:\n                ratingColours[color] = 1\n                minColours += 1\n    if minColours == 0:\n        minColours = 1\n    print(minColours, maxColours)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    # Read the input\n    N = int(input())\n    ratings = [int(x) for x in input().split()]\n\n    # Find the minimum and maximum number of colours\n    minColours = 0\n    maxColours = 0\n    ratingColours = [None]*8\n    for rating in ratings:\n        if rating >= 3200:\n            maxColours += 1\n        else:\n            colour = rating // 400\n            if ratingColours[colour] == None:\n                ratingColours[colour] = 1\n                minColours += 1\n    if minColours == 0:\n        minColours = 1\n    print(minColours, maxColours)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    # Read the input\n    N = int(input())\n    ratings = [int(x) for x in input().split()]\n\n    # Find the minimum and maximum number of colors\n    minColors = 0\n    maxColors = 0\n    ratingColors = [None]*8 \n    for rating in ratings:\n        if rating >= 3200:\n            maxColors += 1\n        else:\n            color = rating // 400\n            if ratingColors[color] == None:\n                ratingColors[color] = 1\n                minColors += 1\n    if minColors == 0:\n        minColors = 1\n    print(minColors, maxColors)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649802129,
  "object": "edit"
}
2022-04-12 22:22:14.858624 fix spelling mistakes 3 ["\n\nimport sys\n\ndef main():\n    # Read the input\n    N = int(input())\n    ratings = [int(x) for x in input().split()]\n\n    # Find the minimum and maximum number of colours\n    minColours = 0\n    maxColours = 0\n    ratingColours = [None]*8\n    for rating in ratings:\n        if rating >= 3200:\n            maxColours += 1\n        else:\n            color = rating // 400\n            if ratingColours[color] == None:\n                ratingColours[color] = 1\n                minColours += 1\n    if minColours == 0:\n        minColours = 1\n    print(minColours, maxColours)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    # Read the input\n    N = int(input())\n    ratings = [int(x) for x in input().split()]\n\n    # Find the minimum and maximum number of colours\n    minColours = 0\n    maxColours = 0\n    ratingColours = [None]*8\n    for rating in ratings:\n        if rating >= 3200:\n            maxColours += 1\n        else:\n            colour = rating // 400\n            if ratingColours[colour] == None:\n                ratingColours[colour] = 1\n                minColours += 1\n    if minColours == 0:\n        minColours = 1\n    print(minColours, maxColours)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    # Read the input\n    N = int(input())\n    ratings = [int(x) for x in input().split()]\n\n    # Find the minimum and maximum number of colors\n    minColors = 0\n    maxColors = 0\n    ratingColors = [None]*8 \n    for rating in ratings:\n        if rating >= 3200:\n            maxColors += 1\n        else:\n            color = rating // 400\n            if ratingColors[color] == None:\n                ratingColors[color] = 1\n                minColors += 1\n    if minColors == 0:\n        minColors = 1\n    print(minColors, maxColors)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 22:22:14.858725 size on output set 3
2022-04-12 22:22:14.858733 size on input set 3
2022-04-12 22:22:17.652847 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    # Read the input\n    N = int(input())\n    ratings = [int(x) for x in input().split()]\n\n    # Find the minimum and maximum number of colours\n    minColours = 0\n    maxColours = 0\n    ratingColours = [None]*8 # list of 8 elements\n    for rating in ratings:\n        if rating >= 3200:\n            maxColours += 1\n        else:\n            color = rating // 400\n            if ratingColours[color] == None:\n                ratingColours[color] = 1\n                minColours += 1\n    if minColours == 0:\n        minColours = 1\n    print(minColours, maxColours)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    # Read the input\n    N = int(input())\n    ratings = [int(x) for x in input().split()]\n\n    # Find the minimum and maximum number of colours\n    minColours = 0\n    maxColours = 0\n    ratingColours = [None]*8 # none = empty\n    for rating in ratings:\n        if rating >= 3200:\n            maxColours += 1\n        else:\n            color = rating // 400\n            if ratingColours[color] == None: # none = empty\n                ratingColours[color] = 1\n                minColours += 1\n    if minColours == 0:\n        minColours = 1\n    print(minColours, maxColours)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    # Read the input\n    N = int(input())\n    ratings = [int(x) for x in input().split()]\n\n    # Find the minimum and maximum number of colours\n    minColours = 0\n    maxColours = 0\n    ratingColours = [None] * 8\n    for rating in ratings:\n        if rating >= 3200:\n            maxColours += 1\n        else:\n            color = rating // 400\n            if ratingColours[color] == None:\n                ratingColours[color] = 1\n                minColours += 1\n    if minColours == 0:\n        minColours = 1\n    print(minColours, maxColours)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649802134,
  "object": "edit"
}
2022-04-12 22:22:17.653020 fix syntax errors 3 ["\n\nimport sys\n\ndef main():\n    # Read the input\n    N = int(input())\n    ratings = [int(x) for x in input().split()]\n\n    # Find the minimum and maximum number of colours\n    minColours = 0\n    maxColours = 0\n    ratingColours = [None]*8 # list of 8 elements\n    for rating in ratings:\n        if rating >= 3200:\n            maxColours += 1\n        else:\n            color = rating // 400\n            if ratingColours[color] == None:\n                ratingColours[color] = 1\n                minColours += 1\n    if minColours == 0:\n        minColours = 1\n    print(minColours, maxColours)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    # Read the input\n    N = int(input())\n    ratings = [int(x) for x in input().split()]\n\n    # Find the minimum and maximum number of colours\n    minColours = 0\n    maxColours = 0\n    ratingColours = [None]*8 # none = empty\n    for rating in ratings:\n        if rating >= 3200:\n            maxColours += 1\n        else:\n            color = rating // 400\n            if ratingColours[color] == None: # none = empty\n                ratingColours[color] = 1\n                minColours += 1\n    if minColours == 0:\n        minColours = 1\n    print(minColours, maxColours)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    # Read the input\n    N = int(input())\n    ratings = [int(x) for x in input().split()]\n\n    # Find the minimum and maximum number of colours\n    minColours = 0\n    maxColours = 0\n    ratingColours = [None] * 8\n    for rating in ratings:\n        if rating >= 3200:\n            maxColours += 1\n        else:\n            color = rating // 400\n            if ratingColours[color] == None:\n                ratingColours[color] = 1\n                minColours += 1\n    if minColours == 0:\n        minColours = 1\n    print(minColours, maxColours)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 22:22:20.433321 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    # Read the input\n    N = int(input())\n    ratings = [int(x) for x in input().split()]\n\n    # Find the minimum and maximum number of colors\n    minColors = 0\n    maxColors = 0\n    ratingColors = [None]*8\n    for rating in ratings:\n        if rating >= 3200:\n            maxColors += 1\n        else:\n            color = rating // 400\n            if ratingColors[color] is None:\n                ratingColors[color] = 1\n                minColors += 1\n    if minColors == 0:\n        minColors = 1\n    print(minColors, maxColors)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    # Read the input\n    N = int(input())\n    ratings = [int(x) for x in input().split()]\n\n    # Find the minimum and maximum number of colors\n    minColors = 0\n    maxColors = 0\n    ratingColors = [None]*8\n    for rating in ratings:\n        if rating >= 3200:\n            maxColors += 1\n        else:\n            color = rating // 400\n            if ratingColors[color] == None:\n                ratingColors[color] = 1\n                minColors += 1\n    if minColors == 0:\n        minColors = 1\n    print(minColors, maxColors)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    # Read the input\n    N = int(input())\n    ratings = [int(x) for x in input().split()]\n\n    # Find the minimum and maximum number of colors\n    minColors = 0\n    maxColors = 0\n    ratingColors = [None]*8\n    for rating in ratings:\n        if rating >= 3200:\n            maxColors += 1\n        else:\n            color = rating // 400\n            if ratingColors[color] is None:\n                ratingColors[color] = 1\n                minColors += 1\n    if minColors == 0:\n        minColors = 1\n    print(minColors, maxColors)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649802137,
  "object": "edit"
}
2022-04-12 22:22:20.433531 fix syntax errors 3 ["\n\nimport sys\n\ndef main():\n    # Read the input\n    N = int(input())\n    ratings = [int(x) for x in input().split()]\n\n    # Find the minimum and maximum number of colors\n    minColors = 0\n    maxColors = 0\n    ratingColors = [None]*8\n    for rating in ratings:\n        if rating >= 3200:\n            maxColors += 1\n        else:\n            color = rating // 400\n            if ratingColors[color] is None:\n                ratingColors[color] = 1\n                minColors += 1\n    if minColors == 0:\n        minColors = 1\n    print(minColors, maxColors)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    # Read the input\n    N = int(input())\n    ratings = [int(x) for x in input().split()]\n\n    # Find the minimum and maximum number of colors\n    minColors = 0\n    maxColors = 0\n    ratingColors = [None]*8\n    for rating in ratings:\n        if rating >= 3200:\n            maxColors += 1\n        else:\n            color = rating // 400\n            if ratingColors[color] == None:\n                ratingColors[color] = 1\n                minColors += 1\n    if minColors == 0:\n        minColors = 1\n    print(minColors, maxColors)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Read the input\n    N = int(input())\n    ratings = [int(x) for x in input().split()]\n\n    # Find the minimum and maximum number of colors\n    minColors = 0\n    maxColors = 0\n    ratingColors = [None]*8\n    for rating in ratings:\n        if rating >= 3200:\n            maxColors += 1\n        else:\n            color = rating // 400\n            if ratingColors[color] is None:\n                ratingColors[color] = 1\n                minColors += 1\n    if minColors == 0:\n        minColors = 1\n    print(minColors, maxColors)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 22:22:26.481756 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    # Read the input\n    N = int(input())\n    ratings = [int(x) for x in input().split()]\n\n    # Find the minimum and maximum number of colours\n    minColours = 0\n    maxColours = 0\n    ratingColours = [None]*8\n    for rating in ratings:\n        if rating >= 3200:\n            maxColours += 1\n        else:\n            colour = rating // 400\n            if ratingColours[colour] == None:\n                ratingColours[colour] = 1\n                minColours += 1\n    if minColours == 0:\n        minColours = 1\n    print(minColours, maxColours)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    # Read the input\n    N = int(input()) \n    ratings = [int(x) for x in input().split()]\n\n    # Find the minimum and maximum number of colours\n    minColours = 0\n    maxColours = 0\n    ratingColours = [None]*8 \n    for rating in ratings:\n        if rating >= 3200:\n            maxColours += 1 \n        else:\n            colour = rating // 400\n            if ratingColours[colour] == None:\n                ratingColours[colour] = 1 \n                minColours += 1 \n    if minColours == 0:\n        minColours = 1 \n    print(minColours, maxColours)\n\nif __name__ == '__main__':\n    main() \n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    # Read the input\n    N = int(input())\n    ratings = [int(x) for x in input().split()]\n\n    # Find the minimum and maximum number of colors\n    minColors = 0\n    maxColors = 0\n    ratingColors = [None]*8\n    for r in ratings:\n        if r >= 3200:\n            maxColors += 1\n        elif ratingColors[r // 400] is None:\n            ratingColors[r // 400] = 1\n            minColors += 1\n    print(minColors or 1, minColors + maxColors)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649802140,
  "object": "edit"
}
2022-04-12 22:22:26.481943 fix syntax errors 3 ["\nimport sys\n\ndef main():\n    # Read the input\n    N = int(input())\n    ratings = [int(x) for x in input().split()]\n\n    # Find the minimum and maximum number of colours\n    minColours = 0\n    maxColours = 0\n    ratingColours = [None]*8\n    for rating in ratings:\n        if rating >= 3200:\n            maxColours += 1\n        else:\n            colour = rating // 400\n            if ratingColours[colour] == None:\n                ratingColours[colour] = 1\n                minColours += 1\n    if minColours == 0:\n        minColours = 1\n    print(minColours, maxColours)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    # Read the input\n    N = int(input()) \n    ratings = [int(x) for x in input().split()]\n\n    # Find the minimum and maximum number of colours\n    minColours = 0\n    maxColours = 0\n    ratingColours = [None]*8 \n    for rating in ratings:\n        if rating >= 3200:\n            maxColours += 1 \n        else:\n            colour = rating // 400\n            if ratingColours[colour] == None:\n                ratingColours[colour] = 1 \n                minColours += 1 \n    if minColours == 0:\n        minColours = 1 \n    print(minColours, maxColours)\n\nif __name__ == '__main__':\n    main() \n", "\n\ndef main():\n    # Read the input\n    N = int(input())\n    ratings = [int(x) for x in input().split()]\n\n    # Find the minimum and maximum number of colors\n    minColors = 0\n    maxColors = 0\n    ratingColors = [None]*8\n    for r in ratings:\n        if r >= 3200:\n            maxColors += 1\n        elif ratingColors[r // 400] is None:\n            ratingColors[r // 400] = 1\n            minColors += 1\n    print(minColors or 1, minColors + maxColors)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 22:22:26.481977 size on output set 9
