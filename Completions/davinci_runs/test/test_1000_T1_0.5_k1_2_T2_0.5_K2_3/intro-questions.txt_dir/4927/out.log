2022-04-09 23:49:34.838462 """
Paul Eigon recently got a new job at a famous company in town. They have all sorts of cool stuff at the office. Video games, a swimming pool, a sauna, and even a ping-pong table! Paul really loves his enjoyable new workplace.

Mr. Eigon plays a lot of ping-pong at work. While he is playing, he enjoys having a nice conversation with his opponent. Discussions are jolly fun to have, but they can also be a bit distracting, enough for Paul to sometimes completely forget whose turn it is to serve the ball the upcoming round!

Paul’s ping-pong games are played with simple rules. The game is played by two players. The game starts with one of the players serving the ball, and that player does so during the $N$ first rounds. After that, the other player serves the ball for $N$ rounds, and so on. Each round is won by exactly one of the players and a player gets one point for each won round (there can be no draws). When one of the players has reached a certain number of points, that player wins the game.

Paul is in desperate need of a new way to figure out which player should serve the ball the upcoming round, and he wants you to help him. You should write a program that given $N$ and the current score of the game prints out whose turn it is to serve the ball the upcoming round. His plan is to run your program on his secret high technology pocket computer, in order to impress his opponent. And by the way, Paul always serves the first ball (if that makes it easier for you).

-----Input-----
Input consists of three integers $N$, $P$ and $Q$ on a single line. $1 \leq N \leq 10^9$ denotes the number of serves a player will perform in a row before it is the other player’s turn to serve the ball. $0 \leq P \leq 10^9$ denotes Paul’s current score in the ongoing ping-pong game, and $0 \leq Q \leq 10^9$ denotes his opponent’s score.

-----Output-----
Output should consists of a single word on a single line. If it is Paul’s turn to serve the ball, your program should output paul. Otherwise, your program should output opponent.

-----Examples-----
Sample Input:
5 3 7
Sample Output:
paul
"""
2022-04-09 23:49:34.838500 --------------------------
2022-04-09 23:50:04.379878 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n#Program\n\nn,p,q=map(int,input().split())\n\nif(p//n==q//n):\n    if(p%n==0):\n        print(\"opponent\")\n    else:\n        print(\"paul\")\nelse:\n    if(p//n>q//n):\n        print(\"opponent\")\n    else:\n        print(\"paul\")"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n#SOLUTION\n\ndef whoServes(n, p, q):\n    if p + q == 0:\n        return 'paul'\n    elif (p + q) % (2 * n) < n:\n        if (p + q) % 2 == 0:\n            return 'paul'\n        else:\n            return 'opponent'\n    else:\n        if (p + q) % 2 == 0:\n            return 'opponent'\n        else:\n            return 'paul'\n\nn, p, q = map(int, input().split())\nprint(whoServes(n, p, q))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nn, p, q = map(int, input().split())\n\nif p > q:\n    p, q = q, p\n\nif (q - p) % (2 * n) < n:\n    print(\"paul\")\nelse:\n    print(\"opponent\")"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nN, P, Q = [int(x) for x in input().split()]\n\nif P % (N + 1) == 0:\n    print(\"opponent\")\nelif Q % (N + 1) == 0:\n    print(\"paul\")\nelse:\n    if P // (N + 1) % 2 == 0:\n        print(\"opponent\")\n    else:\n        print(\"paul\")"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nN, P, Q = map(int, input().split())\n\nif P % N == 0:\n    if Q % N == 0:\n        print('paul')\n    else:\n        print('opponent')\nelse:\n    if Q % N == 0:\n        print('opponent')\n    else:\n        print('paul')"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nN, P, Q = map(int, input().split())\n\npauls_turn = True\n\nwhile P + Q > 0:\n    if pauls_turn:\n        P -= N\n    else:\n        Q -= N\n    pauls_turn = not pauls_turn\n\nif pauls_turn:\n    print(\"paul\")\nelse:\n    print(\"opponent\")"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nimport sys\n\n# Grab the input\nN, P, Q = map(int, sys.stdin.readline().split())\n\n# Calculate the number of rounds played\nrounds_played = P + Q\n\n# Calculate the number of rounds per player\nrounds_per_player = 2 * N\n\n# Calculate the number of rounds before the first player serves\nrounds_before_first_player_serves = N\n\n# Calculate the number of rounds before the second player serves\nrounds_before_second_player_serves = 2 * N\n\n# Calculate the number of rounds before the first player serves again\nrounds_before_first_player_serves_again = 3 * N\n\n# Calculate the number of rounds before the second player serves again\nrounds_before_second_player_serves_again = 4 * N\n\n# Calculate the number of complete rounds\ncomplete_rounds = rounds_played // rounds_per_player\n\n# Calculate the number of rounds played in the current round\nrounds_played_current_round = rounds_played - (complete_rounds * rounds_per_player)\n\nif rounds_played_current_round == 0:\n    print(\"paul\")\nelif rounds_played_current_round < rounds_before_first_player_serves_again:\n    print(\"paul\")\nelse:\n    print(\"opponent\")"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nimport sys\n\nn, p, q = map(int, sys.stdin.readline().split())\n\nif (p + q) % (2 * n) < n:\n    print(\"paul\")\nelse:\n    print(\"opponent\")"
    }
  ],
  "created": 1649562575,
  "id": "cmpl-4vIrvNQvEI7mXET5PzJrzWZGx4eGu",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 23:50:04.380370 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n#Program\n\nn,p,q=map(int,input().split())\n\nif(p//n==q//n):\n    if(p%n==0):\n        print(\"opponent\")\n    else:\n        print(\"paul\")\nelse:\n    if(p//n>q//n):\n        print(\"opponent\")\n    else:\n        print(\"paul\")"
}
2022-04-09 23:50:04.380425 REASON stop
2022-04-09 23:50:04.391875 test/intro-questions.txt_dir/4927/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4927/solutions.json'
2022-04-09 23:50:04.391932 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n#SOLUTION\n\ndef whoServes(n, p, q):\n    if p + q == 0:\n        return 'paul'\n    elif (p + q) % (2 * n) < n:\n        if (p + q) % 2 == 0:\n            return 'paul'\n        else:\n            return 'opponent'\n    else:\n        if (p + q) % 2 == 0:\n            return 'opponent'\n        else:\n            return 'paul'\n\nn, p, q = map(int, input().split())\nprint(whoServes(n, p, q))"
}
2022-04-09 23:50:04.392040 REASON stop
2022-04-09 23:50:04.393130 test/intro-questions.txt_dir/4927/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4927/solutions.json'
2022-04-09 23:50:04.393199 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nn, p, q = map(int, input().split())\n\nif p > q:\n    p, q = q, p\n\nif (q - p) % (2 * n) < n:\n    print(\"paul\")\nelse:\n    print(\"opponent\")"
}
2022-04-09 23:50:04.393293 REASON stop
2022-04-09 23:50:04.394155 test/intro-questions.txt_dir/4927/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4927/solutions.json'
2022-04-09 23:50:04.394199 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nN, P, Q = [int(x) for x in input().split()]\n\nif P % (N + 1) == 0:\n    print(\"opponent\")\nelif Q % (N + 1) == 0:\n    print(\"paul\")\nelse:\n    if P // (N + 1) % 2 == 0:\n        print(\"opponent\")\n    else:\n        print(\"paul\")"
}
2022-04-09 23:50:04.394287 REASON stop
2022-04-09 23:50:04.395143 test/intro-questions.txt_dir/4927/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4927/solutions.json'
2022-04-09 23:50:04.395284 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nN, P, Q = map(int, input().split())\n\nif P % N == 0:\n    if Q % N == 0:\n        print('paul')\n    else:\n        print('opponent')\nelse:\n    if Q % N == 0:\n        print('opponent')\n    else:\n        print('paul')"
}
2022-04-09 23:50:04.395364 REASON stop
2022-04-09 23:50:04.396347 test/intro-questions.txt_dir/4927/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4927/solutions.json'
2022-04-09 23:50:04.396403 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nN, P, Q = map(int, input().split())\n\npauls_turn = True\n\nwhile P + Q > 0:\n    if pauls_turn:\n        P -= N\n    else:\n        Q -= N\n    pauls_turn = not pauls_turn\n\nif pauls_turn:\n    print(\"paul\")\nelse:\n    print(\"opponent\")"
}
2022-04-09 23:50:04.396495 REASON stop
2022-04-09 23:50:04.397376 test/intro-questions.txt_dir/4927/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4927/solutions.json'
2022-04-09 23:50:04.397430 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nimport sys\n\n# Grab the input\nN, P, Q = map(int, sys.stdin.readline().split())\n\n# Calculate the number of rounds played\nrounds_played = P + Q\n\n# Calculate the number of rounds per player\nrounds_per_player = 2 * N\n\n# Calculate the number of rounds before the first player serves\nrounds_before_first_player_serves = N\n\n# Calculate the number of rounds before the second player serves\nrounds_before_second_player_serves = 2 * N\n\n# Calculate the number of rounds before the first player serves again\nrounds_before_first_player_serves_again = 3 * N\n\n# Calculate the number of rounds before the second player serves again\nrounds_before_second_player_serves_again = 4 * N\n\n# Calculate the number of complete rounds\ncomplete_rounds = rounds_played // rounds_per_player\n\n# Calculate the number of rounds played in the current round\nrounds_played_current_round = rounds_played - (complete_rounds * rounds_per_player)\n\nif rounds_played_current_round == 0:\n    print(\"paul\")\nelif rounds_played_current_round < rounds_before_first_player_serves_again:\n    print(\"paul\")\nelse:\n    print(\"opponent\")"
}
2022-04-09 23:50:04.397521 REASON stop
2022-04-09 23:50:04.398382 test/intro-questions.txt_dir/4927/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4927/solutions.json'
2022-04-09 23:50:04.398428 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nimport sys\n\nn, p, q = map(int, sys.stdin.readline().split())\n\nif (p + q) % (2 * n) < n:\n    print(\"paul\")\nelse:\n    print(\"opponent\")"
}
2022-04-09 23:50:04.398507 REASON stop
2022-04-09 23:50:04.399214 test/intro-questions.txt_dir/4927/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4927/solutions.json'
