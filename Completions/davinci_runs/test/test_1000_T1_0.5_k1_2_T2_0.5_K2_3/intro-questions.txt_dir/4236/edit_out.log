2022-04-12 18:37:16.688481 num operations 2
2022-04-12 18:37:16.688490 size on input set 1
2022-04-12 18:37:18.233402 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n#\nn, m = map(int, input().split())\n\nleft = [0] * (m + 1)\nright = [0] * (m + 1)\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left[l] += 1\n    right[r] += 1\n\ncounter = 0\nfor i in range(1, m + 1):\n    if left[i] == right[i]:\n        counter += 1\n    elif left[i] > right[i]:\n        print(counter)\n        break\nelse:\n    print(counter)\n"
    },
    {
      "index": 1,
      "text": "\nn, m = map(int, input().split())\n\nleft = [0] * (m + 1)\nright = [0] * (m + 1)\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left[l] += 1\n    right[r] += 1\n\ncounter = 0\nfor i in range(1, m + 1):\n    if left[i] == right[i]:\n        counter += 1\n    elif left[i] > right[i]:\n        print(counter)\n        break\nelse:\n    print(counter)\n"
    },
    {
      "index": 2,
      "text": "\n#\nn, m = map(int, input().split())\n\nleft = [0] * (m + 1)\nright = [0] * (m + 1)\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left[l] += 1\n    right[r] += 1\n\ncounter = 0\nfor i in range(1, m + 1):\n    if left[i] == right[i]:\n        counter += 1\n    elif left[i] > right[i]:\n        print(counter)\n        break\nelse:\n    print(counter)\n"
    }
  ],
  "created": 1649788636,
  "object": "edit"
}
2022-04-12 18:37:18.233623 fix spelling mistakes 3 ['\n#\nn, m = map(int, input().split())\n\nleft = [0] * (m + 1)\nright = [0] * (m + 1)\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left[l] += 1\n    right[r] += 1\n\ncounter = 0\nfor i in range(1, m + 1):\n    if left[i] == right[i]:\n        counter += 1\n    elif left[i] > right[i]:\n        print(counter)\n        break\nelse:\n    print(counter)\n', '\nn, m = map(int, input().split())\n\nleft = [0] * (m + 1)\nright = [0] * (m + 1)\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left[l] += 1\n    right[r] += 1\n\ncounter = 0\nfor i in range(1, m + 1):\n    if left[i] == right[i]:\n        counter += 1\n    elif left[i] > right[i]:\n        print(counter)\n        break\nelse:\n    print(counter)\n', '\n#\nn, m = map(int, input().split())\n\nleft = [0] * (m + 1)\nright = [0] * (m + 1)\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left[l] += 1\n    right[r] += 1\n\ncounter = 0\nfor i in range(1, m + 1):\n    if left[i] == right[i]:\n        counter += 1\n    elif left[i] > right[i]:\n        print(counter)\n        break\nelse:\n    print(counter)\n']
2022-04-12 18:37:18.233652 size on output set 2
2022-04-12 18:37:18.233659 size on input set 2
2022-04-12 18:37:19.898683 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n, m = map(int, input().split())\n\nleft = [0] * (m + 1)\nright = [0] * (m + 1)\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left[l] += 1\n    right[r] += 1\n\ncounter = 0\nfor i in range(1, m + 1):\n    if left[i] == right[i]:\n        counter += 1\n    elif left[i] > right[i]:\n        print(counter)\n        break\nelse:\n    print(counter)\n"
    },
    {
      "index": 1,
      "text": "n, m = map(int, input().split())\n\nleft = [0] * (m + 1)\nright = [0] * (m + 1)\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left[l] += 1\n    right[r] += 1\n\ncounter = 0\nfor i in range(1, m + 1):\n    if left[i] == right[i]:\n        counter += 1\n    elif left[i] > right[i]:\n        print(counter)\n        break\nelse:\n    print(counter)\n"
    },
    {
      "index": 2,
      "text": "n, m = map(int, input().split())\n\nleft = [0] * (m + 1)\nright = [0] * (m + 1)\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left[l] += 1\n    right[r] += 1\n\ncounter = 0\nfor i in range(1, m + 1):\n    if left[i] == right[i]:\n        counter += 1\n    elif left[i] > right[i]:\n        print(counter)\n        break\nelse:\n    print(counter)\n"
    }
  ],
  "created": 1649788638,
  "object": "edit"
}
2022-04-12 18:37:19.898865 fix syntax errors 3 ['n, m = map(int, input().split())\n\nleft = [0] * (m + 1)\nright = [0] * (m + 1)\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left[l] += 1\n    right[r] += 1\n\ncounter = 0\nfor i in range(1, m + 1):\n    if left[i] == right[i]:\n        counter += 1\n    elif left[i] > right[i]:\n        print(counter)\n        break\nelse:\n    print(counter)\n', 'n, m = map(int, input().split())\n\nleft = [0] * (m + 1)\nright = [0] * (m + 1)\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left[l] += 1\n    right[r] += 1\n\ncounter = 0\nfor i in range(1, m + 1):\n    if left[i] == right[i]:\n        counter += 1\n    elif left[i] > right[i]:\n        print(counter)\n        break\nelse:\n    print(counter)\n', 'n, m = map(int, input().split())\n\nleft = [0] * (m + 1)\nright = [0] * (m + 1)\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left[l] += 1\n    right[r] += 1\n\ncounter = 0\nfor i in range(1, m + 1):\n    if left[i] == right[i]:\n        counter += 1\n    elif left[i] > right[i]:\n        print(counter)\n        break\nelse:\n    print(counter)\n']
2022-04-12 18:37:21.731819 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# \u0417\u0430\u0434\u0430\u0447\u0430 \u043f\u0440\u043e \u043d\u0430\u0431\u043e\u0440 \u043a\u043d\u0438\u0433\nn, m = map(int, input().split())\n\nleft = [0] * (m + 1)\nright = [0] * (m + 1)\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left[l] += 1\n    right[r] += 1\n\ncounter = 0\nfor i in range(1, m + 1):\n    if left[i] == right[i]:\n        counter += 1\n    elif left[i] > right[i]:\n        print(counter)\n        break\nelse:\n    print(counter)\n"
    },
    {
      "index": 1,
      "text": "\n# \nn, m = map(int, input().split())\n\nleft = [0] * (m + 1)\nright = [0] * (m + 1)\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left[l] += 1\n    right[r] += 1\n\ncounter = 0\nfor i in range(1, m + 1):\n    if left[i] == right[i]:\n        counter += 1\n    elif left[i] > right[i]:\n        print(counter)\n        break\nelse:\n    print(counter)\n"
    },
    {
      "index": 2,
      "text": "\nn, m = map(int, input().split())\n\nleft = [0] * (m + 1)\nright = [0] * (m + 1)\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left[l] += 1\n    right[r] += 1\n\ncounter = 0\nfor i in range(1, m + 1):\n    if left[i] == right[i]:\n        counter += 1\n    elif left[i] > right[i]:\n        print(counter)\n        break\nelse:\n    print(counter)\n"
    }
  ],
  "created": 1649788639,
  "object": "edit"
}
2022-04-12 18:37:21.731986 fix syntax errors 3 ['\n# Задача про набор книг\nn, m = map(int, input().split())\n\nleft = [0] * (m + 1)\nright = [0] * (m + 1)\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left[l] += 1\n    right[r] += 1\n\ncounter = 0\nfor i in range(1, m + 1):\n    if left[i] == right[i]:\n        counter += 1\n    elif left[i] > right[i]:\n        print(counter)\n        break\nelse:\n    print(counter)\n', '\n# \nn, m = map(int, input().split())\n\nleft = [0] * (m + 1)\nright = [0] * (m + 1)\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left[l] += 1\n    right[r] += 1\n\ncounter = 0\nfor i in range(1, m + 1):\n    if left[i] == right[i]:\n        counter += 1\n    elif left[i] > right[i]:\n        print(counter)\n        break\nelse:\n    print(counter)\n', '\nn, m = map(int, input().split())\n\nleft = [0] * (m + 1)\nright = [0] * (m + 1)\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left[l] += 1\n    right[r] += 1\n\ncounter = 0\nfor i in range(1, m + 1):\n    if left[i] == right[i]:\n        counter += 1\n    elif left[i] > right[i]:\n        print(counter)\n        break\nelse:\n    print(counter)\n']
2022-04-12 18:37:21.732020 size on output set 4
2022-04-12 18:37:21.732029 num operations 2
2022-04-12 18:37:21.732034 size on input set 1
2022-04-12 18:37:25.338779 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "n, m = map(int, input().split())\n\nsegments = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    segments.append((l, r))\n\nsegments.sort(key=lambda x: x[0])\n\n# print(segments)\n\nres = []\nfor i in range(1, m + 1):\n    if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:  # \u0443\u0431\u0440\u0430\u043b\u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u0435\u0441\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b\n        res.append(i)\n\nprint(len(res))\nprint(*res)\n"
    },
    {
      "index": 1,
      "text": "\n\nn, m = map(int, input().split())\n\nsegments = []\nfor i in range(n):\n    left, right = map(int, input().split())\n    segments.append((left, right))\n\nsegments.sort(key=lambda x: x[0])\n\n# print(segments)\n\nres = []\nfor i in range(1, m + 1):\n    if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:\n        res.append(i)\n\nprint(len(res))\nprint(*res)\n"
    },
    {
      "index": 2,
      "text": "\n\nn, m = map(int, input().split())\n\nsegments = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    segments.append((l, r))\n\nsegments.sort(key=lambda x: x[0])\n\n# print(segments)\n\nres = []\nfor i in range(1, m + 1):\n    if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:  # if i not in [seg[0] for seg in segments] or i not in [seg[1] for seg in segments]\n        res.append(i)\n\nprint(len(res))\nprint(*res)\n"
    }
  ],
  "created": 1649788641,
  "object": "edit"
}
2022-04-12 18:37:25.339047 fix spelling mistakes 3 ['n, m = map(int, input().split())\n\nsegments = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    segments.append((l, r))\n\nsegments.sort(key=lambda x: x[0])\n\n# print(segments)\n\nres = []\nfor i in range(1, m + 1):\n    if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:  # убрали повторяющиеся элементы\n        res.append(i)\n\nprint(len(res))\nprint(*res)\n', '\n\nn, m = map(int, input().split())\n\nsegments = []\nfor i in range(n):\n    left, right = map(int, input().split())\n    segments.append((left, right))\n\nsegments.sort(key=lambda x: x[0])\n\n# print(segments)\n\nres = []\nfor i in range(1, m + 1):\n    if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:\n        res.append(i)\n\nprint(len(res))\nprint(*res)\n', '\n\nn, m = map(int, input().split())\n\nsegments = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    segments.append((l, r))\n\nsegments.sort(key=lambda x: x[0])\n\n# print(segments)\n\nres = []\nfor i in range(1, m + 1):\n    if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:  # if i not in [seg[0] for seg in segments] or i not in [seg[1] for seg in segments]\n        res.append(i)\n\nprint(len(res))\nprint(*res)\n']
2022-04-12 18:37:25.339085 size on output set 3
2022-04-12 18:37:25.339091 size on input set 3
2022-04-12 18:37:28.859553 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m = map(int, input().split())\n\nsegments = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    segments.append((l, r))\nsegments.sort(key=lambda x: x[0])\nres = []\nfor i in range(1, m + 1):\n    if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:  # if i not in [seg[0] for seg in segments] or i not in [seg[1] for seg in segments]\n        res.append(i)\n\nprint(len(res))\nprint(*res)\n"
    },
    {
      "index": 1,
      "text": "\nn, m = map(int, input().split())\n\nsegments = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    segments.append((l, r))\n\nsegments.sort(key=lambda x: x[0])\n\n# print(segments)\n\nres = []\nfor i in range(1, m + 1):\n    if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:\n        res.append(i)\n\nprint(len(res))\nprint(*res)\n"
    },
    {
      "index": 2,
      "text": "\n\nn, m = map(int, input().split())\n\nsegments = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    segments.append((l, r))\n\nsegments.sort(key=lambda x: x[0])\n\n# print(segments)\n\nres = []\nfor i in range(1, m + 1):\n    if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:\n        res.append(i)\n\nprint(len(res))\nprint(*res)\n"
    }
  ],
  "created": 1649788645,
  "object": "edit"
}
2022-04-12 18:37:28.859725 fix syntax errors 3 ['\nn, m = map(int, input().split())\n\nsegments = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    segments.append((l, r))\nsegments.sort(key=lambda x: x[0])\nres = []\nfor i in range(1, m + 1):\n    if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:  # if i not in [seg[0] for seg in segments] or i not in [seg[1] for seg in segments]\n        res.append(i)\n\nprint(len(res))\nprint(*res)\n', '\nn, m = map(int, input().split())\n\nsegments = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    segments.append((l, r))\n\nsegments.sort(key=lambda x: x[0])\n\n# print(segments)\n\nres = []\nfor i in range(1, m + 1):\n    if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:\n        res.append(i)\n\nprint(len(res))\nprint(*res)\n', '\n\nn, m = map(int, input().split())\n\nsegments = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    segments.append((l, r))\n\nsegments.sort(key=lambda x: x[0])\n\n# print(segments)\n\nres = []\nfor i in range(1, m + 1):\n    if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:\n        res.append(i)\n\nprint(len(res))\nprint(*res)\n']
2022-04-12 18:37:40.130742 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m = map(int, input().split())\n\nsegments = []\nfor i in range(n):\n    left, right = map(int, input().split())\n    segments.append((left, right))\n\nsegments.sort(key=lambda x: x[0])\n\n# print(segments)\n\nres = []\nfor i in range(1, m + 1):\n    if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments] and segments[0][0] != 1:\n        res.append(i)\n\nprint(len(res))\nprint(*res)\n"
    },
    {
      "index": 1,
      "text": "\n\nn, m = map(int, input().split())  # n - \u043a\u043e\u043b-\u0432\u043e \u043e\u0442\u0440\u0435\u0437\u043a\u043e\u0432, m - \u043a\u043e\u043b-\u0432\u043e \u0442\u043e\u0447\u0435\u043a\n\nsegments = []  # \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0442\u0440\u0435\u0437\u043a\u043e\u0432\nfor i in range(n):\n    left, right = map(int, input().split())\n    segments.append((left, right))  # \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0442\u0440\u0435\u0437\u043a\u0438\n\nsegments.sort(key=lambda x: x[0])  # \u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043f\u043e \u043b\u0435\u0432\u043e\u0439 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u043e\u0442\u0440\u0435\u0437\u043a\u0430\n\n# print(segments)  # \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438\n\nres = []  # \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u043b\u044f \u043e\u0442\u0432\u0435\u0442\u0430\nfor i in range(1, m + 1):\n    if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:  # \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u043d\u043e\u0441\u0442\u044c \u0442\u043e\u0447\u043a\u0438 \u043a \u043e\u0442\u0440\u0435\u0437\u043a\u0443\n        res.append(i)  # \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0442\u0432\u0435\u0442\u0430\n\nprint(len(res))  # \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u043a\u043e\u043b-\u0432\u043e \u0442\u043e\u0447\u0435\u043a\nprint(*res)  # \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u0442\u043e\u0447\u043a\u0438\n"
    },
    {
      "index": 2,
      "text": "import os\n\n\ndef get_files(path):\n    files = os.listdir(path)\n    for file in files:\n        print(file)\n\ndef main():\n    get_files(\"/Users/yana/Downloads/\")\n\nsegments.sort(key=lambda x: x[0])\n\n# print(segments)\n\nres = []\nfor i in range(1, m + 1):\n    if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:\n        res.append(i)\n\nprint(len(res))\nprint(*res)\n"
    }
  ],
  "created": 1649788648,
  "object": "edit"
}
2022-04-12 18:37:40.130905 fix syntax errors 3 ['\nn, m = map(int, input().split())\n\nsegments = []\nfor i in range(n):\n    left, right = map(int, input().split())\n    segments.append((left, right))\n\nsegments.sort(key=lambda x: x[0])\n\n# print(segments)\n\nres = []\nfor i in range(1, m + 1):\n    if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments] and segments[0][0] != 1:\n        res.append(i)\n\nprint(len(res))\nprint(*res)\n', '\n\nn, m = map(int, input().split())  # n - кол-во отрезков, m - кол-во точек\n\nsegments = []  # список отрезков\nfor i in range(n):\n    left, right = map(int, input().split())\n    segments.append((left, right))  # добавляем в список отрезки\n\nsegments.sort(key=lambda x: x[0])  # сортируем по левой стороне отрезка\n\n# print(segments)  # для проверки\n\nres = []  # список для ответа\nfor i in range(1, m + 1):\n    if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:  # проверка на принадлежность точки к отрезку\n        res.append(i)  # добавляем в список ответа\n\nprint(len(res))  # выводим кол-во точек\nprint(*res)  # выводим точки\n', 'import os\n\n\ndef get_files(path):\n    files = os.listdir(path)\n    for file in files:\n        print(file)\n\ndef main():\n    get_files("/Users/yana/Downloads/")\n\nsegments.sort(key=lambda x: x[0])\n\n# print(segments)\n\nres = []\nfor i in range(1, m + 1):\n    if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:\n        res.append(i)\n\nprint(len(res))\nprint(*res)\n']
2022-04-12 18:38:07.207707 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# n, m = map(int, input().split())\n#\n# segments = []\n# for i in range(n):\n#     l, r = map(int, input().split())\n#     segments.append((l, r))\n#\n# segments.sort(key=lambda x: x[0])\n#\n# # print(segments)\n#\n# res = []\n# for i in range(1, m + 1):\n#     if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:  # \u0443\u0431\u0440\u0430\u043b\u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u0435\u0441\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b\n#         res.append(i)\n#\n# print(len(res))\n# print(*res)\n\n# file = open('input.txt', 'r')\n#\n# n, m = map(int, file.readline().split())\n#\n# segments = []\n# for i in range(n):\n#     l, r = map(int, file.readline().split())\n#     segments.append((l, r))\n#\n# segments.sort(key=lambda x: x[0])\n#\n# # print(segments)\n#\n# res = []\n# for i in range(1, m + 1):\n#     if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:  # \u0443\u0431\u0440\u0430\u043b\u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u0435\u0441\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b\n#         res.append(i)\n#\n# print(len(res))\n# print(*res)\n\n# file = open('input.txt', 'r')\n# n, m = map(int, file.readline().split())\n#\n# segments = []\n# for i in range(n):\n#     l, r = map(int, file.readline().split())\n#     segments.append((l, r))\n#\n# segments.sort(key=lambda x: x[0])\n#\n# res = []\n# for i in range(1, m + 1):\n#     if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:  # \u0443\u0431\u0440\u0430\u043b\u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u0435\u0441\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b\n#         res.append(i)\n#\n# print(len(res))\n# print(*res)\n\n\n# file = open('input.txt', 'r')\n# n, m = map(int, file.readline().split())\n#\n# segments = []\n# for i in range(n):\n#     l, r = map(int, file.readline().split())\n#     segments.append((l, r))\n#\n# segments.sort(key=lambda x: x[0])\n#\n# res = []\n# for i in range(1, m + 1):\n#     if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:  # \u0443\u0431\u0440\u0430\u043b\u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u0435\u0441\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b\n#         res.append(i)\n#\n# print(len(res))\n# print(*res)\n\n\nfile = open('input.txt', 'r')\nn, m = map(int, file.readline().split())\n\nsegments = []\nfor i in range(n):\n    l, r = map(int, file.readline().split())\n    segments.append((l, r))\n\nsegments.sort(key=lambda x: x[0])\n\nres = []\nfor i in range(1, m + 1):\n    if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:  # \u0443\u0431\u0440\u0430\u043b\u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u0435\u0441\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b\n        res.append(i)\n\nprint(len(res))\nprint(*res)\n"
    },
    {
      "index": 1,
      "text": "# n, m = map(int, input().split())\n#\n# segments = []\n# for i in range(n):\n#     l, r = map(int, input().split())\n#     segments.append((l, r))\n#\n# segments.sort(key=lambda x: x[0])\n#\n# # print(segments)\n#\n# res = []\n# for i in range(1, m + 1):\n#     if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:  # \u0443\u0431\u0440\u0430\u043b\u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u0435\u0441\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b\n#         res.append(i)\n#\n# print(len(res))\n# print(*res)\n\n# \u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u0441 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 \u0447\u0438\u0441\u043b\u0430 (\u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435) \u0434\u043e \u0442\u0435\u0445 \u043f\u043e\u0440, \u043f\u043e\u043a\u0430 \u0441\u0443\u043c\u043c\u0430 \u0432\u0432\u0435\u0434\u0451\u043d\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0432\u043d\u0430 0 \u0438 \u0441\u0440\u0430\u0437\u0443 \u043f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0441\u0443\u043c\u043c\u0443 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043e\u0432 \u0432\u0441\u0435\u0445 \u0441\u0447\u0438\u0442\u0430\u043d\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b.\n#\n# \u0413\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0432 \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u043c\u043e\u043c\u0435\u043d\u0442 \u0441\u0443\u043c\u043c\u0430 \u0432\u0432\u0435\u0434\u0451\u043d\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b \u043e\u043a\u0430\u0436\u0435\u0442\u0441\u044f \u0440\u0430\u0432\u043d\u043e\u0439 0, \u043f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0442\u044c \u043d\u0435 \u043d\u0443\u0436\u043d\u043e.\n#\n# \u0412 \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u043c\u044b \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u0447\u0438\u0441\u043b\u0430 1, -3, 5, -6, -10, 13; \u0432 \u044d\u0442\u043e\u0442 \u043c\u043e\u043c\u0435\u043d\u0442 \u0437\u0430\u043c\u0435\u0447\u0430\u0435\u043c, \u0447\u0442\u043e \u0441\u0443\u043c\u043c\u0430 \u044d\u0442\u0438\u0445 \u0447\u0438\u0441\u0435\u043b \u0440\u0430\u0432\u043d\u0430 \u043d\u0443\u043b\u044e \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u0441\u0443\u043c\u043c\u0443 \u0438\u0445 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043e\u0432, \u043d\u0435 \u043e\u0431\u0440\u0430\u0449\u0430\u044f \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u044f \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u043e\u0441\u0442\u0430\u043b\u0438\u0441\u044c \u0435\u0449\u0451 \u043d\u0435 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.\ufeff\n\ns = 0\nwhile True:\n    a = int(input())\n    s += a\n    if s == 0:\n        break\nprint(s)\n"
    },
    {
      "index": 2,
      "text": "n, m = map(int, input().split())\n\nsegments = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    segments.append((l, r))\n\nsegments.sort(key=lambda x: x[0])\n\nres = []\nfor i in range(1, m + 1):\n    if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:  # \u0443\u0431\u0440\u0430\u043b\u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u0435\u0441\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b\n        res.append(i)\n\nprint(len(res))\nprint(*res)\n"
    }
  ],
  "created": 1649788660,
  "object": "edit"
}
2022-04-12 18:38:07.207895 fix syntax errors 3 ["# n, m = map(int, input().split())\n#\n# segments = []\n# for i in range(n):\n#     l, r = map(int, input().split())\n#     segments.append((l, r))\n#\n# segments.sort(key=lambda x: x[0])\n#\n# # print(segments)\n#\n# res = []\n# for i in range(1, m + 1):\n#     if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:  # убрали повторяющиеся элементы\n#         res.append(i)\n#\n# print(len(res))\n# print(*res)\n\n# file = open('input.txt', 'r')\n#\n# n, m = map(int, file.readline().split())\n#\n# segments = []\n# for i in range(n):\n#     l, r = map(int, file.readline().split())\n#     segments.append((l, r))\n#\n# segments.sort(key=lambda x: x[0])\n#\n# # print(segments)\n#\n# res = []\n# for i in range(1, m + 1):\n#     if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:  # убрали повторяющиеся элементы\n#         res.append(i)\n#\n# print(len(res))\n# print(*res)\n\n# file = open('input.txt', 'r')\n# n, m = map(int, file.readline().split())\n#\n# segments = []\n# for i in range(n):\n#     l, r = map(int, file.readline().split())\n#     segments.append((l, r))\n#\n# segments.sort(key=lambda x: x[0])\n#\n# res = []\n# for i in range(1, m + 1):\n#     if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:  # убрали повторяющиеся элементы\n#         res.append(i)\n#\n# print(len(res))\n# print(*res)\n\n\n# file = open('input.txt', 'r')\n# n, m = map(int, file.readline().split())\n#\n# segments = []\n# for i in range(n):\n#     l, r = map(int, file.readline().split())\n#     segments.append((l, r))\n#\n# segments.sort(key=lambda x: x[0])\n#\n# res = []\n# for i in range(1, m + 1):\n#     if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:  # убрали повторяющиеся элементы\n#         res.append(i)\n#\n# print(len(res))\n# print(*res)\n\n\nfile = open('input.txt', 'r')\nn, m = map(int, file.readline().split())\n\nsegments = []\nfor i in range(n):\n    l, r = map(int, file.readline().split())\n    segments.append((l, r))\n\nsegments.sort(key=lambda x: x[0])\n\nres = []\nfor i in range(1, m + 1):\n    if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:  # убрали повторяющиеся элементы\n        res.append(i)\n\nprint(len(res))\nprint(*res)\n", '# n, m = map(int, input().split())\n#\n# segments = []\n# for i in range(n):\n#     l, r = map(int, input().split())\n#     segments.append((l, r))\n#\n# segments.sort(key=lambda x: x[0])\n#\n# # print(segments)\n#\n# res = []\n# for i in range(1, m + 1):\n#     if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:  # убрали повторяющиеся элементы\n#         res.append(i)\n#\n# print(len(res))\n# print(*res)\n\n# Напишите программу, которая считывает с консоли числа (по одному в строке) до тех пор, пока сумма введённых чисел не будет равна 0 и сразу после этого выводит сумму квадратов всех считанных чисел.\n#\n# Гарантируется, что в какой-то момент сумма введённых чисел окажется равной 0, после этого считывание продолжать не нужно.\n#\n# В примере мы считываем числа 1, -3, 5, -6, -10, 13; в этот момент замечаем, что сумма этих чисел равна нулю и выводим сумму их квадратов, не обращая внимания на то, что остались ещё не прочитанные значения.\ufeff\n\ns = 0\nwhile True:\n    a = int(input())\n    s += a\n    if s == 0:\n        break\nprint(s)\n', 'n, m = map(int, input().split())\n\nsegments = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    segments.append((l, r))\n\nsegments.sort(key=lambda x: x[0])\n\nres = []\nfor i in range(1, m + 1):\n    if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:  # убрали повторяющиеся элементы\n        res.append(i)\n\nprint(len(res))\nprint(*res)\n']
2022-04-12 18:38:07.208061 size on output set 9
