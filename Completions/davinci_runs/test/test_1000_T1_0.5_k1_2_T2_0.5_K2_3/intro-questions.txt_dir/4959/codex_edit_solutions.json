["def main():\n    e, f, c = map(int, input().split())\n    count = 0\n    while e + f >= c:\n        count += (e + f) // c\n        e, f = (e + f) % c, e // c\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    e, f, c = map(int, input().split())  # input\n    n = (e + f) // c  # number of empty bottles\n    left = (e + f) % c  # number of bottlecaps left\n    while n + left >= c:  # while there are enough bottlecaps to buy a new bottle\n        n += left // c  # buy a new bottle\n        left = (left % c) + (left // c)  # bottlecaps left after buying a new bottle\n    print(n)  # print number of empty bottles\n\nif __name__ == '__main__':\n    main()\n", "\na = map(int, input().split())  # a = [empty, full, exchange]\nsoda = 0  # soda\nempty = a[0] + a[1]  # empty\nwhile empty >= a[2]:  # loop if empty >= exchange\n    empty = empty - a[2] + 1  # empty = empty - exchange + 1\n    soda += 1  # soda + 1\nprint soda  # print soda\n", "\n\ndef main():\n    print()\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    e, f, c = map(int, input().split(' '))\n    count = 0\n    while e + f >= c:\n        count += (e + f) // c\n        e, f = (e + f) % c, e + f // c\n    print(count)\n\n\nmain()\n", "\nimport sys\n\n\ndef main():\n    e, f, c = map(int, input().split())\n    print(solve(e,f,c))\n\n\ndef solve(e, f, c):\n    total = e + f\n    drank = 0\n    while total >= c:\n        drank += total // c\n        total = total % c + total // c\n    return drank\n\n\nif __name__ == '__main__':\n    main()\n", "\n\na = map(int, input().split())  # a = [empty, full, exchange]\nsoda = 0  # soda\nempty = a[0] + a[1]  # empty\nwhile empty >= a[2]:  # loop if empty >= exchange\n    empty = empty - a[2] + 1  # empty = empty - exchange + 1\n    soda += 1  # soda + 1\nprint soda  # print soda\n", "def main():\n    n = int(input())\n    l = [int(input()) for _ in range(n)]\n    print(sum(l))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    e, f, c = map(int, input().split())\n    count = 0\n    while e + f >= c:\n        count += (e + f) // c\n        e, f = (e + f) % c, e + f // c\n    print(count)\n\nmain()\n", "\n\ndef main():\n    e, f, c = map(int, input().split())\n    count = 0\n    while e + f >= c:\n        count += (e + f) // c\n        e, f = (e + f) % c, e // c\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\n#include<stdio.h>\ne,f,c = map(int, input().split())\n\nbottles = e + f\ndrinks = 0\n\nwhile bottles >= c:\n    drinks += bottles // c\n    bottles = bottles % c + bottles // c\n\nprint(drinks)\n", "\n\ne,f,c = map(int,input().split()) #take input from user in a single line\n\nbottles = e + f #total no of bottles\ndrinks = 0 #no of drinks\n\nwhile bottles >= c:\n    drinks += bottles // c\n    bottles = bottles % c + bottles // c\n\nprint(drinks)\n", "\n\ndef main():\n    e, f, c = map(int, input().split())\n    count = 0\n    while e + f >= c:\n        count += (e + f) // c\n        e, f = (e + f) % c, e + f // c\n    print(count)\n\nmain()\n", "\"\"\"\nProblem Statement: https://open.kattis.com/problems/sodasurpler\nAuthor: striker\n\"\"\"\n\nimport sys\n\ndef main():\n    e, f, c = map(int, sys.stdin.readline().split())\n    print(solve(e, f, c))\n\ndef solve(e, f, c):\n    \"\"\"\n    Return the number of sodas drank on an extra-thirsty day.\n    \"\"\"\n    total = e + f\n    drank = 0\n    while total >= c:\n        drank += total // c\n        total = total % c + total // c\n    return drank\n\nif __name__ == '__main__':\n    main()\n", "\n\ne,f,c = map(int,input().split()) #take input from user and store in e f and c\n\nbottles = e + f #total no of bottles\ndrinks = 0 #no of drinks\n\nwhile bottles >= c:\n    drinks += bottles // c\n    bottles = bottles % c + bottles // c\n\nprint(drinks)\n", "\ndef main():\n    empty, full, cap = map(int, input().split())\n    count = 0\n    while empty + full >= cap:\n        count += (empty + full) // cap\n        empty, full = (empty + full) % cap, empty // cap\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\n\ne, f, c = map(int, input().split())\n\nbottles = e + f\ndrinks = 0\n\nwhile bottles >= c:\n    drinks += bottles // c\n    bottles = bottles % c + bottles // c\n\nprint(drinks)\n", "\n\ndef main():\n    e, f, c = map(int, input().split())  # e is empty bottles, f is full bottles, c is cost of one bottle\n    count = 0\n    while e + f >= c:  # while the number of empty bottles plus full bottles is greater than or equal to the cost of one bottle\n        count += (e + f) // c\n        e, f = (e + f) % c, e // c\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "n = int(raw_input())\ns = map(int, raw_input().split())\ns = sorted(s)\ncount = 0\nfor i in xrange(n):\n    for j in xrange(i, n):\n        if s[i] == s[j]:\n            count += 1\n        else:\n            break\n    print count,\n    count = 0\n", "\ndef main():\n    empty, full, capacity = map(int, input().split())\n    n = (empty + full) // capacity\n    left = (empty + full) % capacity\n    while n + left >= capacity:\n        n += left // capacity\n        left = (left % capacity) + (left // capacity)\n    print(n)\n\nif __name__ == '__main__':\n    main()\n", "\n\ne, f, c = map(int, input().split())  # \u0432\u0432\u043e\u0434\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0447\u0435\u0440\u0435\u0437 input\n\nbottles = e + f  # \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0441 \u043a\u043e\u043b-\u0432\u043e\u043c \u0431\u0443\u0442\u044b\u043b\u043e\u043a\ndrinks = 0  # \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0434\u043b\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\n\nwhile bottles >= c:  # \u043f\u043e\u043a\u0430 \u0431\u0443\u0442\u044b\u043b\u043e\u043a \u0431\u043e\u043b\u044c\u0448\u0435 \u0438\u043b\u0438 \u0440\u0430\u0432\u043d\u043e \u043a\u043e\u043b-\u0432\u0443 \u0434\u043b\u044f \u043e\u0431\u043c\u0435\u043d\u0430\n    drinks += bottles // c  # \u043f\u0440\u0438\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0443 \u043a\u043e\u043b-\u0432\u043e \u0446\u0435\u043b\u044b\u0445 \u043e\u0431\u043c\u0435\u043d\u043e\u0432\n    bottles = bottles % c + bottles // c  # \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u043a\u043e\u043b-\u0432\u043e \u043e\u0441\u0442\u0430\u0432\u0448\u0438\u0445\u0441\u044f \u0431\u0443\u0442\u044b\u043b\u043e\u043a\n\nprint(drinks)  # \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\n", "\na = map(int, raw_input().split())  # a = [empty, full, exchange]\nsoda = 0  # soda\nempty = a[0] + a[1]  # empty\nwhile empty >= a[2]:  # loop if empty >= exchange\n    empty = empty - a[2] + 1  # empty = empty - exchange + 1\n    soda += 1  # soda + 1\nprint soda  # print soda\n", "a = raw_input()\nprint a\n", "\n\ne, f, c = map(int, input().split())\n\nprint((e + f) / c)\n", "\nimport sys\n\ndef main():\n    e, f, c = map(int, sys.stdin.readline().split())\n    print(solve(e, f, c))\n\ndef solve(e, f, c):\n    \"\"\"\n    Return the number of sodas drank on an extra-thirsty day.\n    \"\"\"\n    total = e + f\n    drank = 0\n    while total >= c:\n        drank += total // c\n        total = total % c + total // c\n    return drank\n\nif __name__ == '__main__':\n    main()\n", "\ne,f,c = map(int, input().split())\n\nbottles = e + f\ndrinks = 0\n\nwhile bottles >= c:\n    drinks += bottles // c\n    bottles = bottles % c + bottles // c\n\nprint(drinks)\n", "\na, b, c = map(int, input().split())\nprint((a + b) / c)\n", "\n\na, b, c = map(int, input().split())\n\nprint((a + b) / c)\n", "\n\ndef soda(empty,full,cost):\n    bottles = empty + full\n    drinks = 0\n    while bottles >= cost:\n        drinks += 1\n        bottles -= cost\n        bottles += 1\n    return drinks\n\nif __name__ == \"__main__\":\n    e,f,c = map(int,input().split())\n    print(soda(e,f,c))\n", "\ne,f,c=map(int,input().split())\n\nbottles = e + f\ndrinks=0\n\nwhile bottles >= c:\n    drinks+=bottles//c\n    bottles=bottles%c+bottles//c\n\nprint (drinks)\n", "\n\na, b, c = map(int, input().split())\n\nprint (a + b) / c\n", "\nn = int(raw_input())\ns = map(int, raw_input().split())\ns = sorted(s)\ncount = 0\nfor i in xrange(n):\n    for j in xrange(i, n):\n        if s[i] == s[j]:\n            count += 1\n        else:\n            break\n    print(count)\n    count = 0\n", "\n\ndef main():\n    e, f, c = map(int, input().split())\n    count = 0\n    while e + f >= c:\n        count += (e + f) // c\n        e, f = (e + f) % c, e + f // c\n    print(count)\n\n\nmain()\n", "\n\ndef soda(e, f, c):  # e is empty bottles, f is full bottles, c is cost of soda\n    bottles = e + f  # total bottles\n    drinks = 0\n    while bottles >= c:\n        drinks += 1\n        bottles -= c\n        bottles += 1\n    return drinks\n\nif __name__ == \"__main__\":\n    e, f, c = map(int, input().split())\n    print(soda(e, f, c))\n", "\ndef main():\n    e, f, c = map(int, input().split())  # e = empty bottles, f = full bottles, c = caps per bottle\n    n = (e + f) // c  # n = number of full bottles\n    left = (e + f) % c  # left = number of empty bottles\n    while n + left >= c:  # if there are enough bottles to exchange\n        n += left // c  # exchange empty bottles for full bottles\n        left = (left % c) + (left // c)  # calculate the remaining empty bottles\n    print(n)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    while True:\n        try:\n            e, f, c = map(int, input().split())\n            n = (e + f) // c\n            left = (e + f) % c\n            while n + left >= c:\n                n += left // c\n                left = (left % c) + (left // c)\n            print(n)\n        except EOFError:\n            break\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    empty, full, cap = map(int, input().split())\n    count = 0\n    while empty + full >= cap:\n        count += (empty + full) // cap\n        empty, full = (empty + full) % cap, full // cap\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    e, f, c = map(int, input().split())\n    count = 0\n    while e + f >= c:\n        count += (e + f) // c\n        e, f = (e + f) % c, e // c\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\ne, f, c = map(int, input().split())\n\nprint (e + f) / c\n", "import sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    print(solve(n, k))\n\ndef solve(e, f, c):\n    \"\"\"\n    Return the number of sodas drunk on an extra thirsty day.\n    \"\"\"\n    total = e + f\n    drunk = 0\n    while total >= c:\n        drunk += total // c\n        total = total % c + total // c\n    return drunk\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    e, f, c = map(int, input().split())\n    count = 0\n    while e + f >= c:\n        count += (e + f) // c\n        e, f = (e + f) % c, (e + f) // c\n    print(count)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef soda(e,f,c): #e is empty bottles, f is full bottles, c is cost of soda\n    bottles = e + f #total bottles\n    drinks = 0\n    while bottles >= c:\n        drinks += 1\n        bottles -= c\n        bottles += 1\n    return drinks\n\nif __name__ == \"__main__\":\n    e,f,c = map(int,input().split()) #input e,f,c\n    print(soda(e,f,c))\n", "\na = map(int, input().split())\nsoda = 0\nempty = a[0] + a[1]\nwhile empty >= a[2]:\n    empty = empty - a[2] + 1\n    soda += 1\nprint(soda)\n", "\ndef main():\n    e, f, c = map(int, input().split())\n    count = 0\n    while e + f >= c:\n        count += (e + f) // c\n        e, f = (e + f) % c, (e + f) // c\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    empty, full, capacity = map(int, input().split())\n    n = (empty + full) // capacity\n    left = (empty + full) % capacity\n    while n + left >= capacity:\n        n += left // capacity\n        left = (left % capacity) + (left // capacity)\n    print(n)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    a, b, c, d = map(int, input().split())\n    print(a ** b + c ** d)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    e, f, c = map(int, sys.stdin.readline().split())\n    print(solve(e, f, c))\n\ndef solve(e, f, c):\n    \"\"\"\n    Return the number of sodas drunk on an extra thirsty day.\n    \"\"\"\n    total = e + f\n    drunk = 0\n    while total >= c:\n        drunk += total // c\n        total = total % c + total // c\n    return drunk\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    e, f, c = map(int, sys.stdin.readline().split())\n    print(solve(e, f, c))\n\ndef solve(e, f, c):\n    \"\"\"\n    Return the number of sodas drunk on an extra thirsty day.\n    \"\"\"\n    total = e + f\n    drunk = 0\n    while total >= c:\n        drunk += total // c\n        total = total % c + total // c\n    return drunk\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    e, f, c = map(int, input().split())\n    count = 0\n    while e + f >= c:  # \uac00\uc9c0\uace0 \uc788\ub294 \uce94\uc774 c\ubcf4\ub2e4 \ud06c\uac70\ub098 \uac19\uc744 \ub54c\n        count += (e + f) // c  # \uce94\uc744 \ubc14\uafb8\uc5b4\uc11c \uac00\uc9c0\uace0 \uc788\ub294 \uce94\uc744 c\ub85c \ub098\ub208 \ubaab\ub9cc\ud07c \ub354\ud55c\ub2e4.\n        e, f = (e + f) % c, e + f // c  # \uac00\uc9c0\uace0 \uc788\ub294 \uce94\uc744 c\ub85c \ub098\ub208 \ub098\uba38\uc9c0\ub97c \uc794\uc5d0 \ub2f4\uace0, c\ub85c \ub098\ub208 \ubaab\uc744 \ubc14\uad6c\ub2c8\uc5d0 \ub2f4\ub294\ub2e4.\n    print(count)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ne,f,c = map(int,input().split()) \n\nbottles = e + f \ndrinks = 0 \n\nwhile bottles >= c:\n    drinks += bottles // c\n    bottles = bottles % c + bottles // c\n\nprint(drinks)\n", "\n\ndef main():\n    e, f, c = map(int, input().split())\n    # e is empty bottles, f is full bottles, c is cost of one bottle\n    count = 0\n    while e + f >= c:\n        # while the number of empty bottles plus full bottles is greater than or equal to the cost of one bottle\n        count += (e + f) // c\n        e, f = (e + f) % c, e // c\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "e, f, c = map(int, input().split())\n\nbottles = e + f\ndrinks = 0\n\nwhile bottles >= c:\n    drinks += bottles // c\n    bottles = bottles % c + bottles // c\n\nprint(drinks)\n"]