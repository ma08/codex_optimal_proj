["def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\nn = int(input())\nt = list(map(int, input().split()))\n\ng = t[0]\nfor i in range(1, n):\n    g = gcd(g, t[i])\n\nprint(g)\n", "def gcd_f(a, b): \n    if b == 0: return a\n    return gcd_f(b, a % b) \n\nn = int(input()) \nt = list(map(int, input().split())) \n\ngcd = t[0] \nfor i in range(1, n): \n    gcd = gcd_f(gcd, t[i]) \n\nprint(gcd) \n", "\ndef gcd(a, b):  # greatest common divisor\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):  # least common multiple\n    return a * b // gcd(a, b)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]  # list of integers\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "# -*- coding: utf-8 -*-\n\ndef gcd(a, b):  # greatest common divisor\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):  # least common multiple\n    return a * b // gcd(a, b)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\ndef gcd(a, b):  # greatest common divisor\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):  # least common multiple\n    return a * b // gcd(a, b)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef gcd(x, y):\n    return math.gcd(x, y)\n\ndef lcm(x, y):\n    return x * y // math.gcd(x, y)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 0\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\ndef gcd_func(a, b):\n    if a % b == 0:\n        return b\n    else:\n        return gcd_func(b, a % b)\n", "def gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "# AOJ 0035: LCD Display\n\n# \u6700\u5927\u516c\u7d04\u6570\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\n# \u6700\u5c0f\u516c\u500d\u6570\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "# AOJ 0036\n\ndef main():\n    N = int(input())\n    for i in range(N):\n        x, y = map(int, input().split())\n        if y % x == 0:\n            print(y // x)\n        else:\n            print(\"NO\")\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nprint(\"hello world\")\n", "# python3\n# coding=utf-8\n#\n", "\ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n\ndef main():\n\tN = int(input())\n\tT = [int(input()) for _ in range(N)]\n\tans = 0\n\tfor t in T:\n\t\tans = lcm(ans, t)\n\tprint(ans)\n\nif __name__ == '__main__':\n\tmain()\n", "\ndef gcd_func(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\n\nn = int(input())\nt = list(map(int, input().split()))\n\ngcd = t[0]\nfor i in range(1, n):\n    gcd = gcd_func(gcd, t[i])\n\nprint(gcd)\n", "\n\ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = T[0]\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]