["\nN, M = map(int, input().split())\n\nif N > M:\n    print('Dr. Chaz needs {} more pieces of chicken!'.format(N - M))\nelse:\n    print('Dr. Chaz will have {} piece{} of chicken left over!'.format(M - N, 's' if (M - N) > 1 else ''))\n", "\n\nN, M = [int(x) for x in input().split()]  # N = number of guests, M = number of chicken pieces.\n\nif N > M:\n    print(\"Dr. Chaz needs {} more piece[s] of chicken!\".format(N - M))\nelse:\n    print(\"Dr. Chaz will have {} piece[s] of chicken left over!\".format(M - N))\n", "\n\nn, m = map(int, input().split())\n\nif m >= n:\n    print(\"Dr. Chaz will have {} piece{} of chicken left over!\".format(m-n, \"\" if (m-n) == 1 else \"s\")\nelse:\n    print(\"Dr. Chaz needs {} more piece{} of chicken!\".format(n-m, \"\" if (n-m) == 1 else \"s\")\n", "\nn, m = map(int, input().split())\n\nleftover = m - n\n\nif leftover > 0:\n    print(\"Dr. Chaz will have %d piece%s of chicken left over!\" % (leftover, \"s\" if leftover > 1 else \"\"))\nelse:\n    print(\"Dr. Chaz needs %d more piece%s of chicken!\" % (-leftover, \"s\" if leftover < -1 else \"\"))\n", "\n\n#The following is the solution to the problem: https://open.kattis.com/problems/chicken\n\nn, m = map(int, input().split())\n\nif (n < m):\n    print(\"Dr. Chaz needs {} more piece[s] of chicken!\".format(m-n))\nelif (n > m):\nelse:\n    print(\"Dr. Chaz will have 0 piece[s] of chicken left over!\")\n    print(\"Dr. Chaz will have {} piece[s] of chicken left over!\".format(n-m))\n", "\n\ninp = input().split()\nN = int(inp[0])\nM = int(inp[1])\nif N > M:\n    print(\"Dr. Chaz will have\", N - M, \"piece[s] of chicken left over!\") \nelse:\n    print(\"Dr. Chaz needs\", M - N, \"more piece[s] of chicken!\")\n", "\n\nn, m = map(int, input().split())\nif n > m:\n    print(\"Dr. Chaz needs\", n-m, \"more piece[s] of chicken!\")  # printing the result\nelif n < m:\n    print(\"Dr. Chaz will have\", m-n, \"piece[s] of chicken left over!\")  # printing the result\n", "\n\ninp = input().split()\nN = int(inp[0])\nM = int(inp[1])\nif N > M:\n    print(\"Dr. Chaz needs\", N - M, \"more piece(s) of chicken!\")\nelse:\n    print(\"Dr. Chaz will have\", M - N, \"piece(s) of chicken left over!\") \n", "\n\ninp = input().split()\nN = int(inp[0])\nM = int(inp[1])\nif N > M:\n    print(\"Dr. Chaz needs \" + str(N - M) + \" more piece of chicken!\")\nelse:\n    print(\"Dr. Chaz will have \" + str(M - N) + \" piece of chicken left over!\")\n", "\n\ninp = input().split()\nN = int(inp[0])\nM = int(inp[1])\nif N > M:\n    print(\"Dr. Chaz needs\", N - M, \"more piece[s] of chicken!\")\nelse:\n    print(\"Dr. Chaz will have\", M - N, \"piece[s] of chicken left over!\")\n", "\n\ninp = input().split()\nN = int(inp[0])\nM = int(inp[1])\nif N > M:\n    print(\"Dr. Chaz needs\", N - M, \"more piece of chicken!\") \nelse:\n    print(\"Dr. Chaz will have\", M - N, \"piece of chicken left over!\")\n", "\n\nn,m=map(int,input().split())\nif n>m:\n    print(\"Dr. Chaz needs\",n-m,\"more piece[s] of chicken!\") #printing the result \nelif n<m:\n    print(\"Dr. Chaz will have\",m-n,\"piece[s] of chicken left over!\") #printing the result\n", "\n\nn,m=map(int,input().split())\nif n>m:\n    print(\"Dr. Chaz will have\",n-m,\"piece[s] of chicken left over!\")\nelif n<m:\n    print(\"Dr. Chaz needs\",m-n,\"piece[s] of chicken left over!\")\n", "\n\nn, m = map(int, input().split())\n\nif m >= n:\n    print(\"Dr. Chaz will have {} piece{} of chicken left over!\".format(m-n, \"\" if (m-n) == 1 else \"s\"), end=\"\")\nelse:\n    print(\"Dr. Chaz needs {} more piece{} of chicken!\".format(n-m, \"\" if (n-m) == 1 else \"s\"), end=\"\")\n", "\n\nn,m=map(int,input().split())\nif n>m:\n    print(\"Dr. Chaz needs\",n-m,\"more piece of chicken!\") #printing the result\nelif n<m:\n    print(\"Dr. Chaz will have\",m-n,\"piece of chicken left over!\") #printing the result\n", "\n\n# The following is the solution to the problem\n\nn, m = map(int, input().split())\n\nif n < m:\n    print(\"Dr. Chaz needs {} more piece[s] of chicken!\".format(m - n))\nelif n > m:\n    print(\"Dr. Chaz will have {} piece[s] of chicken left over!\".format(n - m))\n", "\n\n# The following is the solution to the problem\n\nn, m = map(int, input().split())\n\nif (n < m):\n    print(\"Dr. Chaz needs {} more piece[s] of chicken!\".format(m-n))\nelif (n > m):\n    print(\"Dr. Chaz will have {} piece[s] of chicken left over!\".format(n-m))\n", "\n\nn, m = map(int, input().split())\n\nif m >= n:\n    print(\"Dr. Chaz will have {} piece{} of chicken left over!\".format(m-n, \"\" if m-n == 1 else \"s\"))\nelse:\n    print(\"Dr. Chaz needs {} more piece{} of chicken!\".format(n-m, \"\" if n-m == 1 else \"s\"))\n", "\n\ninp = input().split()\nN = int(inp[0])\nM = int(inp[1])\nif N > M:\n    print(\"Dr. Chaz needs\", N - M, \"more pieces of chicken!\")\nelse:\n    print(\"Dr. Chaz will have\", M - N, \"piece of chicken left over!\")\n", "\n# \nN, M = map(int, input().split())\n\nif N > M:\n    print('Dr. Chaz needs {} more pieces of chicken!'.format(N - M))\nelse:\n    print('Dr. Chaz will have {} piece{} of chicken left over!'.format(M - N, 's' if (M - N) > 1 else ''))\n", "\n\nn,m=map(int,input().split())\nif n>m:\n    print(\"Dr. Chaz needs\",n-m,\"more piece[s] of chicken!\")\nelif n<m:\n    print(\"Dr. Chaz will have\",m-n,\"piece[s] of chicken left over!\")\n", "\n\ninp = input().split()\nN = int(inp[0])\nM = int(inp[1])\nif N > M:\n    print(\"Dr. Chaz needs\", N - M, \"more pieces of chicken!\")\nelse:\n    print(\"Dr. Chaz will have\", M - N, \"pieces of chicken left over!\")\n", "\n# comment\nN, M = map(int, input().split())\n\nif N > M:\n    print('Dr. Chaz needs {} more pieces of chicken!'.format(N - M))\nelse:\n    print('Dr. Chaz will have {} piece{} of chicken left over!'.format(M - N, 's' if (M - N) > 1 else ''))\n", "\n\nN, M = [int(x) for x in input().split()]\n\nif N > M:\n    print(\"Dr. Chaz needs {} more piece[s] of chicken!\".format(N - M))\nelse:\n    print(\"Dr. Chaz will have {} piece[s] of chicken left over!\".format(M - N))\n", "\n\nN, M = map(int, input().split())\n\nif N > M:\n    print('Dr. Chaz needs {} more piece{} of chicken!'.format(N - M, 's' if (N - M) > 1 else ''), end='')\nelse:\n    print('Dr. Chaz will have {} piece{} of chicken left over!'.format(M - N, 's' if (M - N) > 1 else ''), end='')\n", "\n\nn,m=map(int,input().split())\nif n<m:\n    print(\"Dr. Chaz needs\",n-m,\"more piece[s] of chicken!\") #needs\nelif n>m:\n    print(\"Dr. Chaz will have\",m-n,\"piece[s] of chicken left over!\") #left over\n", "\n\nN, M = map(int, input().split())\n\nif N > M:\n    print('Dr. Chaz needs {} more piece{} of chicken!'.format(N - M, 's' if (N - M) > 1 else ' '))\nelse:\n    print('Dr. Chaz will have {} piece{} of chicken left over!'.format(M - N, 's' if (M - N) > 1 else ' '))\n", "\n\nn, m = map(int, input().split())\n\nif n > m:\n    print('Dr. Chaz needs {} more piece{} of chicken!'.format(n - m, 's' if (n - m) > 1 else ''))\nelse:\n    print('Dr. Chaz will have {} piece{} of chicken left over!'.format(m - n, 's' if (m - n) > 1 else ''))\n", "\n\nn, m = map(int, input().split())\n\nif n > m:\n    print(\"Dr. Chaz needs\", n-m, \"more piece[s] of chicken!\")\nelse:\n    print(\"Dr. Chaz will have\", m-n, \"piece[s] of chicken left over!\")\n", "\n\n#The following is the solution to the problem: http://codeforces.com/problemset/problem/118/A\n\nvowels = ['a', 'o', 'u', 'e', 'i', 'y']\n\ns = input()\n\ns = s.lower()\n\nlist = []\n\nfor i in range(len(s)):\n    if s[i] not in vowels:\n        list.append(\".\" + s[i])\n\nprint(''.join(list))\n", "\n\nn,m=map(int,input().split())\nif n>m:\n    print(\"Dr. Chaz will have\",n-m,\"piece[s] of chicken left over!\")\nelif n<m:\n    print(\"Dr. Chaz needs\",m-n,\"more piece[s] of chicken!\")\n", "n, m = map(int, input().split())\n\nif n > m:\n    print(\"Dr. Chaz needs\", n-m, \"more piece[s] of chicken!\")\nelse:\n    print(\"Dr. Chaz will have\", m-n, \"piece[s] of chicken left over!\")\n", "\na = \"s\"\nn, m = map(int, input().split())\n\nif m >= n:\n    print(\"Dr. Chaz will have {} piece{} of chicken left over!\".format(m-n, \"\" if (m-n) == 1 else a))\nelse:\n    print(\"Dr. Chaz needs {} more piece{} of chicken!\".format(n-m, \"\" if (n-m) == 1 else a))\n", "\n#The following is the solution to the problem: https://open.kattis.com/problems/chicken\n\nn, m = map(int, input().split())\n\nif (n < m):\n    print(\"Dr. Chaz needs {} more piece[s] of chicken!\".format(m-n))\nelif (n > m):\n    print(\"Dr. Chaz will have {} piece[s] of chicken left over!\".format(n-m))\n", "\n\nN, M = map(int, input().split())\n\nif N > M:\n    print('Dr. Chaz needs {} more pieces of chicken!'.format(N - M))\nelse:\n    print('Dr. Chaz will have {} piece{} of chicken left over!'.format(M - N, 's' if (M - N) > 1 else ''))\n", "\n\nN, M = map(int, input().split())\nif N > M:\n    print(\"Dr. Chaz needs\", N - M, \"more piece[s] of chicken!\")\nelse:\n    print(\"Dr. Chaz will have\", M - N, \"piece[s] of chicken left over!\") \n", "\n\nn, m = map(int, input().split())\n\nif n > m:\n    print(\"Dr. Chaz needs\", n-m, \"more piece of chicken!\") \nelse:\n    print(\"Dr. Chaz will have\", m-n, \"piece of chicken left over!\")\n", "\n# file\nn, m = map(int, input().split())\n\nleftover = m - n\n\nif leftover > 0:\n    print(\"Dr. Chaz will have %d piece%s of chicken left over!\" % (leftover, \"s\" if leftover > 1 else \"\"))\nelse:\n    print(\"Dr. Chaz needs %d more piece%s of chicken!\" % (-leftover, \"s\" if leftover < -1 else \"\"))\n", "\n\nN, M = map(int, input().split())\n\nif N > M:\n    print('Dr. Chaz needs {} more pieces of chicken!'.format(N - M))\nelse:\n    print('Dr. Chaz will have {} piece{} of chicken left over!'.format(M - N, 's' if M - N != 1 else ''))\n", "\n\n# N, M = [int(x) for x in input().split()]  # N = number of guests, M = number of chicken pieces\n\n# if N > M:\n#     print(\"Dr. Chaz needs {} more piece[s] of chicken!\".format(N - M))\n# else:\n#     print(\"Dr. Chaz will have {} piece[s] of chicken left over!\".format(M - N))\n\n\n# a = int(input())\n# b = int(input())\n\n# print(a//b)\n# print(a/b)\n\n\n# c = int(input())\n# d = int(input())\n\n# print(c//d)\n# print(c/d)\n\n\n# for i in range(1, int(input())):\n#     print(i)\n\n# for i in range(1, int(input())+1):\n#     print(i, end='')\n\n# for i in range(1, int(input())+1):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1):\n#     print(i, end='')\n\n\n# for i in range(1, int(input()), 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input()), 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input()), 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input()), 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input()), 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n\n\n# for i in range(1, int(input())+1, 2):\n#     print(i, end='')\n", "\nn, m = map(int, input().split())\n\nleftover = m - n\n\nif leftover > 0:\n    print(\"Dr. Chaz will have %d piece%s of chicken left over!\" % (leftover, 's' if leftover != 1 else ''))\nelse:\n    print(\"Dr. Chaz needs %d more piece%s of chicken!\" % (-leftover, 's' if leftover != -1 else ''))\n", "\nn, m = map(int, input().split())\n\nif m >= n:\n    print(\"Dr. Chaz will have {} piece{} of chicken left over!\".format(m-n, \"\" if m-n == 1 else \"s \"))\nelse:\n    print(\"Dr. Chaz needs {} more piece{} of chicken!\".format(n-m, \"\" if n-m == 1 else \"s \"))\n", "\nn, m = map(int, input().split())\n\nif m >= n:\n    print(\"Dr. Chaz will have {} piece{} of chicken left over!\".format(m - n, \"\" if m - n == 1 else \"s\"))\nelse:\n    print(\"Dr. Chaz needs {} more piece{} of chicken!\".format(n - m, \"\" if n - m == 1 else \"s\"))\n", "\n\nn,m=map(int,input().split())\nif n>m:\n    print(\"Dr. Chaz will have\",n-m,\"more piece[s] of chicken!\")\nelif n<m:\n    print(\"Dr. Chaz needs\",m-n,\"more piece[s] of chicken left over!\")\n", "\n\n#The following is the solution to the problem:\n\nn, m = map(int, input().split())\n\nif (n < m):\n    print(\"Dr. Chaz needs {} more piece[s] of chicken!\".format(m-n))\nelif (n > m):\n    print(\"Dr. Chaz will have {} piece[s] of chicken left over!\".format(n-m))\n", "\nn, m = map(int, input().split())\n\nleftover = m - n\n\nif leftover > 0:\n    print(\"Dr. Chaz will have %d piece%s of chicken left over!\" % (leftover, \"s\" if leftover != 1 else \"\"))  # noqa\nelse:\n    print(\"Dr. Chaz needs %d more piece%s of chicken!\" % (-leftover, \"s\" if leftover != -1 else \"\"))\n", "\n\nn, m = map(int, input().split())\n\n\nif n > m:\n    print(\"Dr. Chaz needs\", n-m, \"more piece[s] of chicken!\")\n\nelse:\n    print(\"Dr. Chaz will have\", m-n, \"piece[s] of chicken left over!\")\n", "\n\nn, m = map(int, input().split())\nleftover = m % n\n\nif leftover > 0:\n    print(\"Dr. Chaz will have %d piece%s of chicken left over!\" % (leftover, \"s\" if leftover != 1 else \"\"))\nelse:\n    print(\"Dr. Chaz needs %d more piece%s of chicken!\" % (-leftover, \"s\" if leftover != -1 else \"\"))\n", "\n\nn, m = map(int, input().split())\n\nif n > m:\n    print(\"Dr. Chaz needs\", n-m, \"more piece[s] of chicken!\") \nelse:\n    print(\"Dr. Chaz will have\", m-n, \"piece[s] of chicken left over!\")\n", "\n\nn, m = map(int, input().split())\n\nif m >= n:\n    print(\"Dr. Chaz will have {} piece{} of chicken left over!\".format(m - n, \"\" if m - n == 1 else \"s\"))\nelse:\n\n    print(\"Dr. Chaz needs {} more piece{} of chicken!\".format(n - m, \"\" if n - m == 1 else \"s\"))\n", "n, m = map(int, input().split())\n\nleftover = m - n\n\nif leftover > 0:\n    print(\"Dr. Chaz will have %d piece%s of chicken left over!\" % (leftover, \"s\" if leftover > 1 else \"\"))\nelse:\n    print(\"Dr. Chaz needs %d more piece%s of chicken!\" % (-leftover, \"s\" if leftover < -1 else \"\"))\n"]