["s = input()\nn = len(s)\nodds = [s[i] for i in range(n) if i % 2 == 0]\nevens = [s[i] for i in range(n) if i % 2 == 1]\nif all(x in ['R', 'U', 'D'] for x in odds) and all(x in ['L', 'U', 'D'] for x in evens):\n    print('Yes')\nelse:\n    print('No')\n\n", "#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n# Complete the sockMerchant function below.\ndef sockMerchant(n, ar):\n    ar.sort()\n    ar.append('#')\n    i = 0\n    ans = 0\n    while i<n:\n        if ar[i]==ar[i+1]:\n            ans+=1\n            i+=2\n        else:\n            i+=1\n    return ans\n\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    n = int(input())\n\n    ar = list(map(int, input().rstrip().split()))\n\n    result = sockMerchant(n, ar)\n\n    fptr.write(str(result) + '\\n')\n\n    fptr.close()\n", "\n#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n# Complete the sockMerchant function below.\ndef sockMerchant(n, ar):\n    ar.sort()\n    ar.append('#')\n    i = 0\n    ans = 0\n    while i<n:\n        if ar[i]==ar[i+1]:\n            ans+=1\n            i+=2\n        else:\n            i+=1\n    return ans\n\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    n = int(input())\n\n    ar = list(map(int, input().rstrip().split()))\n\n    result = sockMerchant(n, ar)\n\n    fptr.write(str(result) + '\\n')\n\n    fptr.close()\n", "\ns = input()\n\nif (len(s) % 2 == 0) and (s[0] in 'RUD') and (s[-1] in 'LUD'):\n    print('Yes')\nelse:\n    print('No')\n", "\ns = input()\n\nif (len(s) % 2 == 0) and (s[0] in 'UD') and (s[-1] in 'UD'):\n    print('Yes')\nelse:\n    print('No')\n", "\n\ns = list(input())\n\nn = len(s)\n\nodds = [s[i] for i in range(n) if i % 2 == 0]\nevens = [s[i] for i in range(n) if i % 2 == 1]\n\nif all(x in ['R', 'U', 'D'] for x in odds) and all(x in ['L', 'U', 'D'] for x in evens):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n\n#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n# Complete the sockMerchant function below.\ndef sockMerchant(n, ar):\n    ar.sort()\n    ar.append('#')\n    i = 0\n    ans = 0\n    while i<n:\n        if ar[i]==ar[i+1]:\n            ans+=1\n            i+=2\n        else:\n            i+=1\n    return ans\n\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    n = int(input())\n\n    ar = list(map(int, input().rstrip().split()))\n\n    result = sockMerchant(n, ar)\n\n    fptr.write(str(result) + '\\n')\n\n    fptr.close()\n", "\n\ns = input('\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0442\u0440\u043e\u043a\u0443: ')\n\nif (len(s) % 2 == 0) and (s[0] in 'UD') and (s[-1] in 'UD') and (s.count('U') == s.count('D')):\n    print('Yes')\nelse:\n    print('No')\n", "\n\ns = list(input())\n\nn = len(s)\n\neven = [s[i] for i in range(n) if i % 2 == 0]\nodd = [s[i] for i in range(n) if i % 2 == 1]\n\nif all(x in 'RUD' for x in odd) and all(x in 'LUD' for x in even):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "\n\ns = input()\n\nif (len(s) % 2 == 0) and (s[0] in 'RUD') and (s[-1] in 'LUD') and (s.count('L') == s.count('R')) and (s.count('U') == s.count('D')):\n    print('Yes')\nelse:\n    print('No')\n", "\n\ns = input()\n\nif (len(s) % 2 == 0) and (s[0] in 'RUD') and (s[-1] in 'LUD'):\n    print('Yes') \nelse:\n    print('No')\n", "\n\ns = input()\n\nif (len(s) % 2 == 0) and (s[0] in 'RUD') and (s[-1] in 'LUD'):\n    print('Yes')\nelse:\n    print('No')\n", "\n\ns = input()\n\nif (len(s) % 2 == 0) and (s[0] in 'R' or 'U' or 'D') and (s[-1] in 'L' or 'U' or 'D'):\n    print('Yes')\nelse:\n    print('No')\n", "\n\ns = input()\n\nif len(s) % 2 == 0 and s[0] in 'UD' and s[-1] in 'UD':\n    print('Yes')\nelse:\n    print('No')\n", "\nprint(\"Hello world\")\n", "s = input()\nn = len(s)\n\nodds = [s[i] for i in range(n) if i % 2 == 0]\nevens = [s[i] for i in range(n) if i % 2 == 1]\nif all(x in ['R', 'U', 'D'] for x in odds) and all(x in ['L', 'U', 'D'] for x in evens):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "\ns = input()\n\nif (len(s) % 2 == 0) and (s[0] in 'RUD') and (s[-1] in 'RUD'):\n    print('Yes') \nelse:\n    print('No')\n", "\ns = list(input())\n\nn = len(s)\n\neven = [s[i] for i in range(n) if i % 2 == 0]\nodd = [s[i] for i in range(n) if i % 2 == 1]\n\nif all(x in ['R', 'U', 'D'] for x in odd) and all(x in ['L', 'U', 'D'] for x in even):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "\ns = list(input())\nn = len(s)\n\neven = [s[i] for i in range(n) if i % 2 == 0]\nodd = [s[i] for i in range(n) if i % 2 == 1]\n\nif all(x in ['R', 'U', 'D'] for x in odd) and all(x in ['L', 'U', 'D'] for x in even):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"]