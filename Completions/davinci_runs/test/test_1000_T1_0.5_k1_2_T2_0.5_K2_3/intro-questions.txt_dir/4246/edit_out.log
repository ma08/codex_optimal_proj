2022-04-12 18:41:51.814696 num operations 2
2022-04-12 18:41:51.814704 size on input set 1
2022-04-12 18:41:54.027428 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ns = input()\nt = input()\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n"
    },
    {
      "index": 1,
      "text": "\n\ns = input()\nt = input()\n\ncorrects = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        corrects += 1\n\nprint(corrects)\n"
    },
    {
      "index": 2,
      "text": "# This is the first line\n\ns = input()\nt = input()\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n"
    }
  ],
  "created": 1649788911,
  "object": "edit"
}
2022-04-12 18:41:54.027628 fix spelling mistakes 3 ['\ns = input()\nt = input()\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n', '\n\ns = input()\nt = input()\n\ncorrects = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        corrects += 1\n\nprint(corrects)\n', '# This is the first line\n\ns = input()\nt = input()\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n']
2022-04-12 18:41:54.027652 size on output set 3
2022-04-12 18:41:54.027658 size on input set 3
2022-04-12 18:41:57.386777 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ns = input()\nt = input()\n\ncorrect = 0 #number of correct characters\n\nfor i in range(len(s)):\n    if s[i] == t[i]: #if the characters are the same\n        correct += 1\n\nprint(correct)\n"
    },
    {
      "index": 1,
      "text": "\ns = input('')\nt = input('')\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n"
    },
    {
      "index": 2,
      "text": "s = list(map(int, input().split()))\nt = list(map(int, input().split()))\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n"
    }
  ],
  "created": 1649788914,
  "object": "edit"
}
2022-04-12 18:41:57.386960 fix syntax errors 3 ['\ns = input()\nt = input()\n\ncorrect = 0 #number of correct characters\n\nfor i in range(len(s)):\n    if s[i] == t[i]: #if the characters are the same\n        correct += 1\n\nprint(correct)\n', "\ns = input('')\nt = input('')\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n", 's = list(map(int, input().split()))\nt = list(map(int, input().split()))\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n']
2022-04-12 18:42:01.516958 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ns = input()\nt = input()\ncorrects = 0\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        corrects += 1\nprint(corrects)\n"
    },
    {
      "index": 1,
      "text": "\ns = input()\nt = input()\n\ncorrects = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        corrects += 1\n\nprint(corrects)\n"
    },
    {
      "index": 2,
      "text": "import math\n\n\na, b, h, m = [int(x) for x in input().split()]\n\nshort = (a ** 2 + b ** 2 - 2 * a * b * math.cos(math.radians(6 * m - 30 * h))) ** 0.5\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        corrects += 1\n\nprint(corrects)\n"
    }
  ],
  "created": 1649788917,
  "object": "edit"
}
2022-04-12 18:42:01.517134 fix syntax errors 3 ['\ns = input()\nt = input()\ncorrects = 0\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        corrects += 1\nprint(corrects)\n', '\ns = input()\nt = input()\n\ncorrects = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        corrects += 1\n\nprint(corrects)\n', 'import math\n\n\na, b, h, m = [int(x) for x in input().split()]\n\nshort = (a ** 2 + b ** 2 - 2 * a * b * math.cos(math.radians(6 * m - 30 * h))) ** 0.5\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        corrects += 1\n\nprint(corrects)\n']
2022-04-12 18:42:03.454535 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# This is the first line\n\ns = input(\"Enter s: \")\nt = input(\"Enter t: \")\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n"
    },
    {
      "index": 1,
      "text": "# This is the first line\n\ns = input(\"\")\nt = input(\"\")\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n"
    },
    {
      "index": 2,
      "text": "# This is the first line\n\ns = raw_input()\nt = raw_input()\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n"
    }
  ],
  "created": 1649788921,
  "object": "edit"
}
2022-04-12 18:42:03.454691 fix syntax errors 3 ['# This is the first line\n\ns = input("Enter s: ")\nt = input("Enter t: ")\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n', '# This is the first line\n\ns = input("")\nt = input("")\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n', '# This is the first line\n\ns = raw_input()\nt = raw_input()\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n']
2022-04-12 18:42:03.454712 size on output set 9
2022-04-12 18:42:03.454722 num operations 2
2022-04-12 18:42:03.454726 size on input set 1
2022-04-12 18:42:04.898141 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    forecast = sys.stdin.readline().strip()\n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    forecast = sys.stdin.readline().strip()\n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    forecast = sys.stdin.readline().strip()\n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649788923,
  "object": "edit"
}
2022-04-12 18:42:04.898309 fix spelling mistakes 3 ["import sys\n\ndef main():\n    forecast = sys.stdin.readline().strip()\n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    forecast = sys.stdin.readline().strip()\n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    forecast = sys.stdin.readline().strip()\n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 18:42:04.898333 size on output set 2
2022-04-12 18:42:04.898339 size on input set 2
2022-04-12 18:42:11.432689 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\n\ndef main():\n    forecast = sys.stdin.readline().strip()\n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    forecast = sys.stdin.readline().strip()\n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python\nimport sys\n\ndef main():\n    forecast = sys.stdin.readline().strip().split(',')\n    actual = sys.stdin.readline().strip().split(',')\n\n    correct = 0\n    for i in range(len(forecast) - 1):\n        if forecast[i + 1] == actual[i + 1]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649788924,
  "object": "edit"
}
2022-04-12 18:42:11.432940 fix syntax errors 3 ["import sys\n\n\ndef main():\n    forecast = sys.stdin.readline().strip()\n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    forecast = sys.stdin.readline().strip()\n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python\nimport sys\n\ndef main():\n    forecast = sys.stdin.readline().strip().split(',')\n    actual = sys.stdin.readline().strip().split(',')\n\n    correct = 0\n    for i in range(len(forecast) - 1):\n        if forecast[i + 1] == actual[i + 1]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 18:42:14.940505 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\n\ndef main():\n    forecast = sys.stdin.readline().strip()\n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    forecast = sys.stdin.readline()\n    actual = sys.stdin.readline()\n\n    correct = 0\n    for i in range(len(forecast.strip())):\n        if forecast.strip()[i] == actual.strip()[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    forecast = sys.stdin.readline().strip()\n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in xrange(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print correct\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649788931,
  "object": "edit"
}
2022-04-12 18:42:14.940661 fix syntax errors 3 ["import sys\n\n\ndef main():\n    forecast = sys.stdin.readline().strip()\n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    forecast = sys.stdin.readline()\n    actual = sys.stdin.readline()\n\n    correct = 0\n    for i in range(len(forecast.strip())):\n        if forecast.strip()[i] == actual.strip()[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    forecast = sys.stdin.readline().strip()\n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in xrange(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print correct\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 18:42:14.940686 size on output set 6
