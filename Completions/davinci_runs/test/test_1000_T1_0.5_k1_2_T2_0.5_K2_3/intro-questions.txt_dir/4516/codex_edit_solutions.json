["\n\n# My solution:\n\ndef main():\n    n, m = map(int, input().split())\n    x = list(map(int, input().split()))\n\n    for i in range(n):\n        f = 0\n        for j in range(m - 1):\n            f += abs(x[j] - x[j + 1])\n        print(f, end=' ')\n    \n\nif __name__ == \"__main__\":\n    main()\n", "\n#-----Solution-----\n\nn, m = map(int, input().split())\nx = list(map(int, input().split()))\n\n# Save the positions of the elements in x in a dictionary.\npos = {i: [] for i in range(1, n+1)}\nfor i in range(m):\n    pos[x[i]].append(i+1)\n\n# Calculate the distances between adjacent elements in x.\ndist = []\nfor i in range(m-1):\n    dist.append(abs(pos[x[i]][0] - pos[x[i+1]][0]))\n    if len(pos[x[i]]) > 1:\n        pos[x[i]].pop(0)\n\n# Calculate the final answer.\nans = [0] * n\nfor i in range(n):\n    ans[i] = sum(dist)\n    if i < n-1:\n        dist[i] = dist[i] + abs(pos[i+2][0] - pos[i+1][0])\n        if len(pos[i+2]) > 1:\n            pos[i+2].pop(0)\n\nprint(*ans)\n", "\n\n\"\"\"\nMy solution: \ndef main():\n    n, m = map(int, input().split())\n    x = list(map(int, input().split()))\n\n    for i in range(n):\n        f = 0\n        for j in range(m - 1):\n            f += abs(x[j] - x[j + 1])\n        print(f, end=' ')\n    \n\nif __name__ == \"__main__\":\n    main()\n\"\"\"\n\n\"\"\"\nFastest solution:\n\nn,m=map(int,input().split())\na=list(map(int,input().split()))\nfor i in range(n):\n    s=0\n    for j in range(m-1):\n        if a[j]>i+1 and a[j+1]<i+1:\n            s+=abs(a[j]-i-1)+abs(a[j+1]-i-1)\n        elif a[j]<i+1 and a[j+1]>i+1:\n            s+=abs(a[j]-i-1)+abs(a[j+1]-i-1)\n        else:\n            s+=abs(a[j]-a[j+1])\n    print(s, end=\" \")\n\"\"\"\n", "\n\n# My solution:\n\ndef main():\n    n, m = map(int, input().split())\n    x = list(map(int, input().split()))\n\n    for i in range(n):\n        f = 0\n        for j in range(m - 1):\n            f += abs(x[j] - x[j + 1])\n        print(f, end=' ')\n    \n\nif __name__ == \"__main__\":\n    main()\n\n\n# Fastest solution:\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nfor i in range(n):\n    s=0\n    for j in range(m-1):\n        if a[j]>i+1 and a[j+1]<i+1:\n            s+=abs(a[j]-i-1)+abs(a[j+1]-i-1)\n        elif a[j]<i+1 and a[j+1]>i+1:\n            s+=abs(a[j]-i-1)+abs(a[j+1]-i-1)\n        else:\n            s+=abs(a[j]-a[j+1])\n    print(s, end=\" \")\n", "\n#-----Solution-----\n\nn, m = map(int, input().split())\nx = list(map(int, input().split()))\n\n# Save the positions of the elements in x in a dictionary.\npos = {i:[] for i in range(1, n+1)}\nfor i in range(m):\n    pos[x[i]].append(i+1)\n\n# Calculate the distances between adjacent elements in x.\ndist = []\nfor i in range(m-1):\n    dist.append(abs(pos[x[i]][0] - pos[x[i+1]][0]))\n    if len(pos[x[i]]) > 1:\n        pos[x[i]].pop(0)\n\n# Calculate the final answer.\nans = [0] * n\nfor i in range(n):\n    ans[i] = sum(dist)\n    if i < n-1:\n        dist[i] = dist[i] + abs(pos[i+2][0] - pos[i+1][0])\n        if len(pos[i+2]) > 1:\n            pos[i+2].pop(0)\n\nprint(*ans)\n", "\n\n#-----Solution-----\n\nn, m = map(int, input().split()) # n = number of elements, m = number of queries\nx = list(map(int, input().split())) # x = elements\n\n# Save the positions of the elements in x in a dictionary\npos = {i:[] for i in range(1, n+1)}\nfor i in range(m):\n    pos[x[i]].append(i+1)\n\n# Calculate the distances between adjacent elements in x\ndist = []\nfor i in range(m-1):\n    dist.append(abs(pos[x[i]][0] - pos[x[i+1]][0]))\n    if len(pos[x[i]]) > 1:\n        pos[x[i]].pop(0)\n\n# Calculate the final answers\nans = [0] * n\nfor i in range(n):\n    ans[i] = sum(dist)\n    if i < n-1:\n        dist[i] = dist[i] + abs(pos[i+2][0] - pos[i+1][0])\n        if len(pos[i+2]) > 1:\n            pos[i+2].pop(0)\n\nprint(*ans)\n", "\n\n# -----Solution-----\n\nn, m = map(int, input().split())\nx = list(map(int, input().split()))\n\n# Save the positions of the elements in x in a dictionary\npos = {i: [] for i in range(1, n+1)}\nfor i in range(m):\n    pos[x[i]].append(i+1)\n\n# Calculate the distances between adjacent elements in x\ndist = []\nfor i in range(m-1):\n    dist.append(abs(pos[x[i]][0] - pos[x[i+1]][0]))\n    if len(pos[x[i]]) > 1:\n        pos[x[i]].pop(0)\n\n# Calculate the final answers\nans = [0] * n\nfor i in range(n):\n    ans[i] = sum(dist)\n    if i < n-1:\n        dist[i] = dist[i] + abs(pos[i+2][0] - pos[i+1][0])\n        if len(pos[i+2]) > 1:\n            pos[i+2].pop(0)\n\nprint(*ans)\n", "\n#-----Solution-----\n\nn, m = map(int, input().split())\nx = list(map(int, input().split()))\n\n# Save the positions of the elements in x in a dictionary\npos = {i:[] for i in range(1, n+1)}\nfor i in range(m):\n    pos[x[i]].append(i+1)\n\n# Calculate the distances between adjacent elements in x\ndist = []\nfor i in range(m-1):\n    dist.append(abs(pos[x[i]][0] - pos[x[i+1]][0]))\n    if len(pos[x[i]]) > 1:\n        pos[x[i]].pop(0)\n\n# Calculate the final answers\nans = [0] * n\nfor i in range(n):\n    ans[i] = sum(dist)\n    if i < n-1:\n        dist[i] = dist[i] + abs(pos[i+2][0] - pos[i+1][0])\n        if len(pos[i+2]) > 1:\n            pos[i+2].pop(0)\n\nprint(*ans)\n", "\n# -----Solution-----\n\nn, m = map(int, input().split())\nx = list(map(int, input().split()))\n\n# Save the positions of the elements in x in a dictionary.\npos = {i:[] for i in range(1, n+1)}\nfor i in range(m):\n    pos[x[i]].append(i+1)\n\n# Calculate the distances between adjacent elements in x.\ndist = []\nfor i in range(m-1):\n    dist.append(abs(pos[x[i]][0] - pos[x[i+1]][0]))\n    if len(pos[x[i]]) > 1:\n        pos[x[i]].pop(0)\n\n# Calculate the final answer.\nans = [0] * n\nfor i in range(n):\n    ans[i] = sum(dist)\n    if i < n-1:\n        dist[i] = dist[i] + abs(pos[i+2][0] - pos[i+1][0])\n        if len(pos[i+2]) > 1:\n            pos[i+2].pop(0)\n\nprint(*ans)\n", "\n\n\"\"\"\nMy solution:\n\ndef main():\n    n, m = map(int, input().split())\n    x = list(map(int, input().split()))\n\n    for i in range(n):\n        f = 0\n        for j in range(m - 1):\n            f += abs(x[j] - x[j + 1])\n        print(f, end=' ')\n\n\nif __name__ == \"__main__\":\n    main()\n\"\"\"\n\n\"\"\"\nFastest solution:\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        s = 0\n        for j in range(m - 1):\n            if a[j] > i + 1 and a[j + 1] < i + 1:\n                s += abs(a[j] - i - 1) + abs(a[j + 1] - i - 1)\n            elif a[j] < i + 1 and a[j + 1] > i + 1:\n                s += abs(a[j] - i - 1) + abs(a[j + 1] - i - 1)\n            else:\n                s += abs(a[j] - a[j + 1])\n        print(s, end=\" \")\n\n\nif __name__ == \"__main__\":\n    main()\n\"\"\"\n\n\"\"\"\n# Another solution:\n\ndef main():\n    n, m = map(int, input().split())\n    x = list(map(int, input().split()))\n    for i in range(1, n + 1):\n        s = 0\n        for j in range(m - 1):\n            if x[j] > i and x[j + 1] < i:\n                s += abs(x[j] - i) + abs(x[j + 1] - i)\n            elif x[j] < i and x[j + 1] > i:\n                s += abs(x[j] - i) + abs(x[j + 1] - i)\n            else:\n                s += abs(x[j] - x[j + 1])\n        print(s, end=\" \")\n\n\nif __name__ == \"__main__\":\n    main()\n\"\"\"\n\n\"\"\"\n# One more solution:\n\nn, m = map(int, input().split())\nx = list(map(int, input().split()))\nfor i in range(1, n + 1):\n    s = 0\n    for j in range(m - 1):\n        if x[j] > i and x[j + 1] < i:\n            s += abs(x[j] - i) + abs(x[j + 1] - i)\n        elif x[j] < i and x[j + 1] > i:\n            s += abs(x[j] - i) + abs(x[j + 1] - i)\n        else:\n            s += abs(x[j] - x[j + 1])\n    print(s, end=' ')\n\"\"\"\n", "\n\n\"\"\"\nMy solution: \n\ndef main():\n    n, m = map(int, input().split())\n    x = list(map(int, input().split()))\n\n    for i in range(n):\n        f = 0\n        for j in range(m - 1):\n            f += abs(x[j] - x[j + 1])\n        print(f, end=' ')\n    \n\nif __name__ == \"__main__\":\n    main()\n\"\"\"\n\n\"\"\"\nFastest solution:\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\nfor i in range(n):\n    s = 0\n    for j in range(m - 1):\n        if a[j] > i + 1 and a[j + 1] < i + 1:\n            s += abs(a[j] - i - 1) + abs(a[j + 1] - i - 1)\n        elif a[j] < i + 1 and a[j + 1] > i + 1:\n            s += abs(a[j] - i - 1) + abs(a[j + 1] - i - 1)\n        else:\n            s += abs(a[j] - a[j + 1])\n    print(s, end=\" \")\n\"\"\"\n", "\n\n#-----Solution 2-----\n\nn, m = map(int, input().split())\nx = list(map(int, input().split()))\npos = {i+1:[] for i in range(n)}\nfor i, v in enumerate(x):\n    pos[v].append(i+1)\n\n# Calculate the distances between adjacent elements in x\ndist = []\nfor i in range(m-1):\n    dist.append(abs(pos[x[i]][0] - pos[x[i+1]][0]))\n    if len(pos[x[i]]) > 1:\n        pos[x[i]].pop(0)\n\n# Calculate the final answer\nans = [0] * n\nfor i in range(n):\n    ans[i] = sum(dist)\n    if i < n-1:\n        dist[i] = dist[i] + abs(pos[i+2][0] - pos[i+1][0])\n        if len(pos[i+2]) > 1:\n            pos[i+2].pop(0)\n\nprint(*ans)\n", "def min_max(a, n):\n    min_val = a[0]\n    max_val = a[0]\n    for i in range(1, n):\n        if a[i] < min_val:\n            min_val = a[i]\n        if a[i] > max_val:\n            max_val = a[i]\n    return min_val, max_val\n\n\na = [1, 2, 3, 4, 5, 6]\nn = len(a)\nprint(min_max(a, n))\n", "\nprint('Hello')\n", "\n\n# My solution:\n\ndef main():\n    n, m = map(int, input().split())\n    x = list(map(int, input().split()))\n\n    for i in range(n):\n        f = 0\n        for j in range(m - 1):\n            f += abs(x[j] - x[j + 1])\n        print(f, end=' ')\n    \n\nif __name__ == \"__main__\":\n    main()\n\n\n# Fastest solution:\n\"\"\"\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nfor i in range(n):\n    s=0\n    for j in range(m-1):\n        if a[j]>i+1 and a[j+1]<i+1:\n            s+=abs(a[j]-i-1)+abs(a[j+1]-i-1)\n        elif a[j]<i+1 and a[j+1]>i+1:\n            s+=abs(a[j]-i-1)+abs(a[j+1]-i-1)\n        else:\n            s+=abs(a[j]-a[j+1])\n    print(s, end=\" \")\n\"\"\"\n", "\ndef min_max(a, n):\n    min_val = a[0]\n    max_val = a[0]\n    for i in range(1, n):\n        if a[i] < min_val:\n            min_val = a[i]\n        if a[i] > max_val:\n            max_val = a[i]\n    return min_val, max_val\n\n\na = [1, 2, 3, 4, 5, 6]\nn = len(a)\nprint(min_max(a, n))\n", "\n\nn, m = map(int, input().split())\nx = list(map(int, input().split()))\n\n# Save the positions of the elements in x in a dictionary\npos = {i:[] for i in range(1, n+1)}\nfor i in range(m):\n    pos[x[i]].append(i+1)\n\n# Calculate the distances between adjacent elements in x\ndist = []\nfor i in range(m-1):\n    dist.append(abs(pos[x[i]][0] - pos[x[i+1]][0]))\n    if len(pos[x[i]]) > 1:\n        pos[x[i]].pop(0)\n\n# Calculate the final answer\nans = [0] * n\nfor i in range(n):\n    ans[i] = sum(dist)\n    if i < n-1:\n        dist[i] = dist[i] + abs(pos[i+2][0] - pos[i+1][0])\n        if len(pos[i+2]) > 1:\n            pos[i+2].pop(0)\n\nprint(*ans)\n"]