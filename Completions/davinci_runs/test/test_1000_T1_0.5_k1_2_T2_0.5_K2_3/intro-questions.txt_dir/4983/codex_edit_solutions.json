["\n\nx = int(input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0447\u0438\u0441\u043b\u043e: \"))\ny = 0\nwhile x > 0:\n    y += x % 10\n    x //= 10\nprint(y)\n", "\n# Accept input\nx = int(input(\"Enter a number: \"))\n\n# Define function\ndef f(x):\n    # If the number is a single digit, return that digit\n    if x < 10:\n        return x\n    # If the number is a two digit number, return the product of the digits\n    elif x < 100:\n        return ((x // 10) * (x % 10))\n    # If the number is a three digit number, return the product of the digits\n    elif x < 1000:\n        return ((x // 100) * ((x // 10) % 10) * (x % 10))\n    # If the number is a four digit number, return the product of the digits\n    else:\n        return ((x // 1000) * ((x // 100) % 10) * ((x // 10) % 10) * (x % 10))\n\n# Call function\nwhile x > 9:\n    x = f(x)\n\n# Print output\nprint(x)\n", "\n\ndef multiply_digit(n):\n    if n >= 10:\n        n = n % 10 * multiply_digit(n // 10)\n    return n\n\nn = int(input())\nprint(multiply_digit(n))\n", "\n\ndef main():\n    x = int(input(\"Enter the number: \"))\n    while x > 9:\n        digits = [int(d) for d in str(x)]  # list comprehension\n        product = 1\n        for d in digits:\n            if d != 0:\n                product *= d\n        x = product\n    print(\"The answer is\", x)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nx = int(input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0432\u0430\u0448\u0435 \u0447\u0438\u0441\u043b\u043e: \"))  # \u0412\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0447\u0438\u0441\u043b\u043e\ny = 0\nwhile x > 0:\n    y += x % 10  # \u0421\u0443\u043c\u043c\u0438\u0440\u0443\u0435\u0442 \u043e\u0441\u0442\u0430\u0442\u043e\u043a \u043e\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043d\u0430 10\n    x //= 10  # \u041f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0447\u0430\u0441\u0442\u043d\u043e\u0435 \u043e\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043d\u0430 10\nprint(y)\n", "# Accept input\nx = int(input())\n\n# Define function\ndef f(x):\n    # If the number is a single digit, return that digit\n    if x < 10:\n        return x\n    # If the number is a two digit number, return the product of the digits\n    elif x < 100:\n        return (x // 10) * (x % 10)\n    # If the number is a three digit number, return the product of the digits\n    elif x < 1000:\n        return (x // 100) * ((x // 10) % 10) * (x % 10)\n    # If the number is a four digit number, return the product of the digits\n    else:\n        return (x // 1000) * ((x // 100) % 10) * ((x // 10) % 10) * (x % 10)\n\n# Call function\nwhile x > 9:\n    x = f(x)\n\n# Print output\nprint(x)\n", "x = int(input())\n\nwhile x > 9:\n    y = 1  # \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0446\u0438\u0444\u0440\n    for i in str(x):\n        if i != '0':  # \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u0431\u044b\u043b\u043e \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043d\u0443\u043b\u0435\u0439\n            y *= int(i)\n    x = y\n\nprint(x)\n", "\n\ndef multiply_digit(n):\n    if n > 9:\n        n = n % 10 * multiply_digit(n // 10) # recursive call\n    return n\n\nn = int(input())\nprint(multiply_digit(n))\n", "\n\n\ndef product(x):\n    if x < 10:\n        return x\n    else:\n        y = 1\n        for i in str(x):\n            if int(i) != 0:\n                y *= int(i)\n        return product(y)\n\nprint(product(int(input(\"Enter a number: \"))))\n", "\n\n# x = int(input())\n\n# def product(x):\n#     if x < 10:\n#         return x\n#     else:\n#         y = 1\n#         for i in str(x):\n#             if int(i) != 0:\n#                 y *= int(i)\n#         return product(y)\n\n\n\n# x = int(input())\n\n# def product(x):\n#     if x < 10:\n#         return x\n#     else:\n#         y = 1\n#         for i in str(x):\n#             if int(i) != 0:\n#                 y *= int(i)\n#         return product(y)\n\n# print(product(x))\n# print(product(x))\n", "num = int(input())\nwhile num > 9:\n    num = str(num)\n    num = [int(i) for i in num]\n    num = [i for i in num if i != 0]\n    num = [str(i) for i in num]\n    num = ''.join(num)\n    num = int(num)\n\n\n\n\nprint(num)\n", "\n\nprint(\"Hello world!\n", "\nnum = int(input())  # \u0432\u0432\u043e\u0434\u0438\u043c \u0447\u0438\u0441\u043b\u043e\nwhile num > 9:  # \u043f\u043e\u043a\u0430 \u0447\u0438\u0441\u043b\u043e \u0431\u043e\u043b\u044c\u0448\u0435 9\n    num = str(num)  # \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u043c \u0432 \u0441\u0442\u0440\u043e\u043a\u0443\n    num = [int(i) for i in num]  # \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u043c \u0432 \u0441\u043f\u0438\u0441\u043e\u043a\n    num = [i for i in num if i != 0]  # \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u043d\u0443\u043b\u0438\n    num = [str(i) for i in num]  # \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u043c \u0432 \u0441\u0442\u0440\u043e\u043a\u0443\n    num = ''.join(num)  # \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u0432 \u0441\u0442\u0440\u043e\u043a\u0443\n    num = int(num)  # \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u043c \u0432 \u0447\u0438\u0441\u043b\u043e\n\nprint(num)\n", "\n\nnum = int(input())\n\nwhile num > 9:\n    num = str(num)\n    num = [int(i) for i in num]\n    num = [i for i in num if i != 0]\n    num = [str(i) for i in num]\n    num = ''.join(num)\n    num = int(num)\n\nprint(num)\n", "\n# Accept input from user\nx = int(input())\n\n# Define function\ndef f(x):\n    # If the number is a single digit, return that digit\n    if x < 10:\n        return x\n    # If the number is a two digit number, return the product of the digits\n    elif x < 100:\n        return (x // 10) * (x % 10)\n    # If the number is a three digit number, return the product of the digits\n    elif x < 1000:\n        return (x // 100) * ((x // 10) % 10) * (x % 10)\n    # If the number is a four digit number, return the product of the digits\n    else:\n        return (x // 1000) * ((x // 100) % 10) * ((x // 10) % 10) * (x % 10)\n\n# Call function until x is a single digit\nwhile x > 9:\n    x = f(x)\n\n# Print output\nprint(x)\n", "\nnum = int(input())  # \u0432\u0432\u043e\u0434\u0438\u043c \u0447\u0438\u0441\u043b\u043e\n\nwhile num > 9:  # \u043f\u043e\u043a\u0430 \u0447\u0438\u0441\u043b\u043e \u0431\u043e\u043b\u044c\u0448\u0435 9\n    num = str(num)  # \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u043c \u0432 \u0441\u0442\u0440\u043e\u043a\u0443\n    num = [int(i) for i in num]  # \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u043c \u0432 \u0441\u043f\u0438\u0441\u043e\u043a\n    num = [i for i in num if i != 0]  # \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u043d\u0443\u043b\u0438\n    num = [str(i) for i in num]  # \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u043c \u0432 \u0441\u0442\u0440\u043e\u043a\u0443\n    num = ''.join(num)  # \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u0432 \u0441\u0442\u0440\u043e\u043a\u0443\n    num = int(num)  # \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u043c \u0432 \u0447\u0438\u0441\u043b\u043e\n\nprint(num)\n", "\ndef multiply_digits(n): # multiply digits of number\n    if n > 9:\n        n = n % 10 * multiply_digits(n // 10)\n    return n\n\nn = int(input())\nprint(multiply_digits(n))\n", "\n# Define function.\ndef f(x):\n    # If the number is a single digit, return that digit.\n    if x < 10:\n        return x\n    # If the number is a two digit number, return the product of the digits.\n    elif x < 100:\n        return (x // 10) * (x % 10)\n    # If the number is a three digit number, return the product of the digits.\n    elif x < 1000:\n        return (x // 100) * ((x // 10) % 10) * (x % 10)\n    # If the number is a four digit number, return the product of the digits.\n    else:\n        return (x // 1000) * ((x // 100) % 10) * ((x // 10) % 10) * (x % 10)\n\n# Call function.\nwhile x > 9:\n    x = f(x)\n\n# Print output.\nprint(x)\n", "\n\ndef main():\n    x = int(input(\"Enter a positive integer: \"))\n    while x > 9:\n        digits = [int(d) for d in str(x)]\n        product = 1\n        for d in digits:\n            if d != 0:\n                product *= d\n        x = product\n    print(x) \n\nif __name__ == \"__main__\":\n    main()\n", "\ndef multiply_digits(n):\n    if n < 10:\n        return n\n    return n % 10 * multiply_digits(n // 10)\n\nif __name__ == \"__main__\":\n    n = int(input())\n    print(multiply_digits(n))\n", "\ndef multiply_digits(n):\n    if n < 10:\n        return n\n    return n % 10 * multiply_digits(n // 10)\n", "x = int(input())\ny = 1\nwhile x > 9:\n    z = x % 10\n    if z > 0:\n        y *= z\n    x //= 10\nprint(y * x)\n", "\n\ndef multiply_digit(n):\n    if n > 9: \n        n = n % 10 * multiply_digit(n // 10)\n    return n\n\nn = int(input())\nprint(multiply_digit(n))\n", "\ndef solution(x):\n    while x > 9:\n        y = 1\n        for i in str(x):\n            if i != '0':\n                y *= int(i)\n        x = y\n    return x\n\nprint(solution(int(input())))\n", "\n\nx = int(input())\n\nwhile x > 9: # loop\n    y = 1\n    for i in str(x):\n        if i != '0':\n            y *= int(i)\n    x = y\n\nprint(x)\n", "\nx = int(input())\n\ndef f(x):\n    # If the number is a single digit, return that digit\n    if x < 10:\n        return x\n    # If the number is a two digit number, return the product of the digits\n    elif x < 100:\n        return (x // 10) * (x % 10)\n    # If the number is a three digit number, return the product of the digits\n    elif x < 1000:\n        return (x // 100) * ((x // 10) % 10) * (x % 10)\n    # If the number is a four digit number, return the product of the digits\n    else:\n        return (x // 1000) * ((x // 100) % 10) * ((x // 10) % 10) * (x % 10)\n\n# Call function until x is a single digit\nwhile x > 9:\n    x = f(x)\n\n# Print output\nprint(x)\n", "\nx = int(input()) \n\nwhile x > 9:\n    y = 1\n    for i in str(x):\n        if i != '0':\n            y *= int(i)\n    x = y\n\nprint(x)\n", "\n\n\nif num == 0:\n    print(num)\n    exit()\nnum = int(input())\n\nwhile num > 9:\n    num = str(num)\n    num = [int(i) for i in num]\n    num = [i for i in num if i != 0]\n    num = [str(i) for i in num]\n    num = ''.join(num)\n    num = int(num)\n\n\n\nprint(num)\n", "\n# Accept input from user\nx = int(input())\n\n# Define function\ndef f(x):\n    # If the number is a single digit, return that digit\n    if x < 10:\n        return x\n    # If the number is a two-digit number, return the product of the digits\n    elif x < 100:\n        return (x // 10) * (x % 10)\n    # If the number is a three-digit number, return the product of the digits\n    elif x < 1000:\n        return (x // 100) * ((x // 10) % 10) * (x % 10)\n    # If the number is a four-digit number, return the product of the digits\n    else:\n        return (x // 1000) * ((x // 100) % 10) * ((x // 10) % 10) * (x % 10)\n\n# Call function until x is a single digit\nwhile x > 9:\n    x = f(x)\n\n# Print output\nprint(x)\n", "\n\nprint(\"Hello world! \")\n", "# coding=utf-8\n\nx = int(input('x = '))\ny = int(input('y = '))\n\ni = 1\nwhile i <= x and i <= y:\n    if x % i == 0 and y % i == 0:\n        d = i\n    i += 1\nprint('\u041d\u041e\u0414 =', d)\n", "\ndef main():\n    x = int(input())\n    while x > 9:\n        digits = [int(d) for d in str(x)]\n        product = 1\n        for d in digits:\n            if d != 0:\n                product *= d\n        x = product\n    print(x)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nx = int(input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0432\u0430\u0448\u0435 \u0447\u0438\u0441\u043b\u043e: \")\ny = 0 \nwhile x > 0: \n    y += x % 10 \n    x //= 10 \nprint(y) \n", "\n# Accept input.\nx = int(input())\n\n# Define function.\ndef f(x):\n    # If the number is a single digit, return that digit.\n    if x < 10:\n        return x\n    # If the number is a two digit number, return the product of the digits.\n    elif x < 100:\n        return (x // 10) * (x % 10)\n    # If the number is a three digit number, return the product of the digits.\n    elif x < 1000:\n        return (x // 100) * ((x // 10) % 10) * (x % 10)\n    # If the number is a four digit number, return the product of the digits.\n    else:\n        return (x // 1000) * ((x // 100) % 10) * ((x // 10) % 10) * (x % 10)\n\n# Call function.\nwhile x > 9:\n    x = f(x)\n\n# Print output.\nprint(x)\n", "# ask for a number\n\nx = int(input())\n# define function product\n\ndef product(x):\n    if x < 10: # if the number is less than 10, return the number\n        return x\n    else:\n        y = 1\n        for i in str(x): # if the number is greater than 10, loop through the number\n            if int(i) != 0: # if the number is not zero, multiply it to the variable y\n                y *= int(i)\n        return product(y)\n# print the product\n\nprint(product(x))\n", "\n\ndef multiply_digits(n):\n    if n > 9:\n        n = n % 10 * multiply_digits(n // 10)\n    return n\n\nn = int(input())\nprint(multiply_digits(n))\n", "\nx = int(input())  # input\n\nwhile x > 9:\n    y = 1\n    for i in str(x):\n        if i != '0':\n            y *= int(i)\n    x = y\n\nprint(x)\n", "\n\ndef main():\n    x = int(input(\"Enter a positive integer: \"))  # take user input\n    while x > 9:\n        digits = [int(d) for d in str(x)]  # convert list to string\n        product = 1\n        for d in digits:  # iterate through list\n            if d != 0:\n                product *= d\n        x = product\n    print(x)\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef multiply_digits(n):\n    if n < 10:\n        return n\n    return n % 10 * multiply_digits(n // 10)\n\nn = int(input())\nprint(multiply_digits(n))\n", "\n\nx = int(input())\n\ndef product(x):\n    if x < 10:\n        return x\n    else:\n        y = 1\n        for i in str(x):\n            if int(i) != 0:\n                y *= int(i)\n        return product(y)\n\nprint(product(x))\n", "\n# Read input\nx = int(input())\n\n# Find the product of all non-zero digits\nwhile x > 9:\n    prod = 1\n    for i in range(len(str(x))):\n        if str(x)[i] != \"0\":\n            prod *= int(str(x)[i])\n    x = prod\n\n# Print output\nprint(x)\n", "\n\nx = int(input())  # input\n\nwhile x > 9:\n    y = 1\n    for i in str(x):\n        if i != 0:\n            y *= int(i)\n    x = y\n\nprint(x)\n", "\n\nnum = int(input())  # \u0432\u0432\u043e\u0434\u0438\u043c \u0447\u0438\u0441\u043b\u043e\n\nwhile num > 9:  # \u043f\u043e\u043a\u0430 \u043d\u0430\u0448\u0435 \u0447\u0438\u0441\u043b\u043e \u0431\u043e\u043b\u044c\u0448\u0435 9\n    num = str(num)  # \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u043c \u0432 \u0441\u0442\u0440\u043e\u043a\u0443\n    num = [int(i) for i in num]  # \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u043c \u0432 \u0441\u043f\u0438\u0441\u043e\u043a\n    num = [i for i in num if i != 0]  # \u043e\u0442\u0441\u0435\u0438\u0432\u0430\u0435\u043c \u043d\u043e\u043b\u044c\n    num = [str(i) for i in num]  # \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u043c \u0432 \u0441\u0442\u0440\u043e\u043a\u0443\n    num = ''.join(num)  # \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u0441\u043f\u0438\u0441\u043e\u043a\n    num = int(num)  # \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u043c \u0432 \u0447\u0438\u0441\u043b\u043e\n\nprint(num)\n", "\ndef main():\n    x = int(input(\"Enter the number: \"))\n    while x > 9:\n        digits = [int(d) for d in str(x)]\n        product = 1\n        for d in digits:\n            if d != 0:\n                product *= d\n        x = product\n    print(\"The answer is\", x)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    x = int(input(\"Enter the number: \")) # Get the number\n    while x > 9: # While the number has more than one digit\n        digits = [int(d) for d in str(x)] # Get the digits\n        product = 1 # Start the product\n        for d in digits: # For each digit\n            if d != 0: # If the digit is not zero\n                product *= d # Multiply the product\n        x = product # Set the number to the product\n    print(\"The answer is\", x) # Print the answer\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# x = int(input())\n\n# def product(x):\n#     if x < 10:\n#         return x\n#     else:\n#         y = 1\n#         for i in str(x):\n#             if int(i) != 0:\n#                 y *= int(i)\n#         return product(y)\n\n\n# def factorial(n):\n#     if n == 0:\n#         return 1\n#     else:\n#         return n * factorial(n-1)\n\n# print(factorial(5))\n\n# def fibonacci(n):\n#     if n == 0:\n#         return 0\n#     elif n == 1:\n#         return 1\n#     else:\n#         return fibonacci(n-1) + fibonacci(n-2)\n\n# print(fibonacci(5))\n\n# def sum_of_digits(n):\n#     if n < 10:\n#         return n\n#     else:\n#         return n % 10 + sum_of_digits(int(n / 10))\n\n# print(sum_of_digits(1234))\n\n# def factorial(n):\n#     if n == 0:\n#         return 1\n#     else:\n#         return n * factorial(n-1)\n\n# print(factorial(5))\n\n# def sum_of_digits(n):\n#     if n < 10:\n#         return n\n#     else:\n#         return n % 10 + sum_of_digits(int(n / 10))\n\n# print(sum_of_digits(1234))\n\n# def to_digits(n):\n#     lst = []\n#     while n != 0:\n#         digit = n % 10\n#         lst = [digit] + lst\n#         n = n // 10\n#     return lst\n\n# print(to_digits(123))\n\n# def to_number(digits):\n#     number = 0\n#     for digit in digits:\n#         number = number * 10 + digit\n#     return number\n\n# print(to_number([1, 2, 3]))\n\n# def count_vowels(str):\n#     count = 0\n#     vowels = \"aeiouy\"\n#     for i in str:\n#         if i in vowels:\n#             count += 1\n#     return count\n\n# print(count_vowels(\"Python\"))\n\n# def count_consonants(str):\n#     count = 0\n#     consonants = \"bcdfghjklmnpqrstvwxz\"\n#     for i in str:\n#         if i in consonants:\n#             count += 1\n#     return count\n\n# print(count_consonants(\"Python\"))\n\n# def prime_number(n):\n#     if n < 2:\n#         return False\n#     for i in range(2, n):\n#         if n % i == 0:\n#             return False\n#     return True\n\n# print(prime_number(5))\n\n# def prime_numbers(n):\n#     lst = []\n#     for i in range(n):\n#         if prime_number(i):\n#             lst = lst + [i]\n#     return lst\n\n# print(prime_numbers(20))\n\n# def fact_digits(n):\n#     sum = 0\n#     while n != 0:\n#         digit = n % 10\n#         sum += factorial(digit)\n#         n = n // 10\n#     return sum\n\n# print(fact_digits(145))\n\n# def palindrome(obj):\n#     return str(obj) == str(obj)[::-1]\n\n# print(palindrome(\"kapak\"))\n# print(palindrome(12321))\n# print(palindrome(\"baba\"))\n\n# def char_histogram(string):\n#     histogram = {}\n#     for ch in string:\n#         if ch not in histogram:\n#             histogram[ch] = 1\n#         else:\n#             histogram[ch] += 1\n#     return histogram\n\n# print(char_histogram(\"Python!\"))\n\n# def p_score(n):\n#     if palindrome(n):\n#         return 1\n#     else:\n#         return 1 + p_score(n + int(str(n)[::-1]))\n\n# print(p_score(121))\n\n# def is_increasing(seq):\n#     for i in range(len(seq) - 1):\n#         if seq[i] >= seq[i + 1]:\n#             return False\n#     return True\n\n# print(is_increasing([1, 2, 3, 4, 5]))\n\n# def is_decreasing(seq):\n#     for i in range(len(seq) - 1):\n#         if seq[i] <= seq[i + 1]:\n#             return False\n#     return True\n\n# print(is_decreasing([5, 4, 3, 2, 1]))\n\n# def is_hack(n):\n#     binary_num = bin(n)[2:]\n#     if palindrome(binary_num) and n % 2 == 1:\n#         return True\n#     else:\n#         return False\n\n# print(is_hack(21))\n\n# def next_hack(n):\n#     n += 1\n#     while not is_hack(n):\n#         n += 1\n#     return n\n\n# print(next_hack(10))\n\n# def sum_of_digits(n):\n#     sum = 0\n#     while n != 0:\n#         digit = n % 10\n#         sum += digit\n#         n = n // 10\n#     return sum\n\n# def sum_of_digits_recursive(n):\n#     if n < 10:\n#         return n\n#     else:\n#         return n % 10 + sum_of_digits_recursive(n // 10)\n\n# print(sum_of_digits_recursive(1234))\n\n# def to_digits(n):\n#     lst = []\n#     while n != 0:\n#         digit = n % 10\n#         lst = [digit] + lst\n#         n = n // 10\n#     return lst\n\n# def to_digits_recursive(n):\n#     if n == 0:\n#         return []\n#     else:\n#         return to_digits_recursive(n // 10) + [n % 10]\n\n# print(to_digits_recursive(12345))\n\n# def factorial(n):\n#     if n == 0:\n#         return 1\n#     else:\n#         return n * factorial(n-1)\n\n# def fact_digits(n):\n#     sum = 0\n#     while n != 0:\n#         digit = n % 10\n#         sum += factorial(digit)\n#         n = n // 10\n#     return sum\n\n# print(fact_digits(145))\n\n# def factorial(n):\n#     if n == 0:\n#         return 1\n#     else:\n#         return n * factorial(n-1)\n\n# def fact_digits(n):\n#     sum = 0\n#     while n != 0:\n#         digit = n % 10\n#         sum += factorial(digit)\n#         n = n // 10\n#     return sum\n\n# print(fact_digits(145))\n\n# def fibonacci(n):\n#     if n == 0:\n#         return 0\n#     elif n == 1:\n#         return 1\n#     else:\n#         return fibonacci(n-1) + fibonacci(n-2)\n\n#\n# print(product(x))\n", "\n# Accept input.\nx = int(input())\n\n# Define function.\ndef f(x):\n\t# If the number is a single digit, return that digit.\n\tif x < 10:\n\t\treturn x\n\t# If the number is a two digit number, return the product of the digits.\n\telif x < 100:\n\t\treturn (x // 10) * (x % 10)\n\t# If the number is a three digit number, return the product of the digits.\n\telif x < 1000:\n\t\treturn (x // 100) * ((x // 10) % 10) * (x % 10)\n\t# If the number is a four digit number, return the product of the digits.\n\telse:\n\t\treturn (x // 1000) * ((x // 100) % 10) * ((x // 10) % 10) * (x % 10)\n\n# Call function.\nwhile x > 9:\n\tx = f(x)\n\n# Print output.\nprint(x)\n", "# Define function\ndef f(x):\n    # If the number is a single digit, return that digit\n    if x < 10:\n        return x\n    # If the number is a two digit number, return the product of the digits\n    elif x < 100:\n        return (x // 10) * (x % 10)\n    # If the number is a three digit number, return the product of the digits\n    elif x < 1000:\n        return (x // 100) * ((x // 10) % 10) * (x % 10)\n    # If the number is a four digit number, return the product of the digits\n    else:\n        return (x // 1000) * ((x // 100) % 10) * ((x // 10) % 10) * (x % 10)\n\n# Call function\nwhile x > 9:\n    x = f(x)\n\n# Print output\nprint(x)\n", "\ndef product(x):\n    if x < 10:\n        return x\n    else:\n        y = 1\n        for i in str(x):\n            if int(i) != 0:\n                y *= int(i)\n        return product(y)\n", "\n\nprint(\"Hello world!\\n\")\n", "\nnum = int(input()) # \u0432\u0432\u043e\u0434\u0438\u043c \u0447\u0438\u0441\u043b\u043e\n\nwhile num >= 10: # \u043f\u043e\u043a\u0430 \u043d\u0430\u0448\u0435 \u0447\u0438\u0441\u043b\u043e \u0431\u043e\u043b\u044c\u0448\u0435 9\n    num = str(num) # \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u043c \u0432 \u0441\u0442\u0440\u043e\u043a\u0443\n    num = [int(i) for i in num] # \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u043c \u0432 \u0441\u043f\u0438\u0441\u043e\u043a\n    num = [i for i in num if i != 0] # \u043e\u0442\u0441\u0435\u0438\u0432\u0430\u0435\u043c \u043d\u0443\u043b\u0438\n    num = [str(i) for i in num] # \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u043c \u0432 \u0441\u0442\u0440\u043e\u043a\u0443\n    num = ''.join(num) # \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u0441\u043f\u0438\u0441\u043e\u043a\n    num = int(num) # \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u043c \u0432 \u0447\u0438\u0441\u043b\u043e\n\nprint('\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442:', num)\n", "def main():\n    x = int(input())\n    while x > 9: \n        digits = [int(d) for d in str(x)]\n        product = 1\n        for d in digits:\n            if d != 0:\n                product *= d\n        x = product\n    print(x)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    x = int(input(\"Enter a positive integer: \"))\n    while x > 9:\n        digits = [int(d) for d in str(x)] #list comprehension\n        product = 1\n        for d in digits:\n            if d != 0:\n                product *= d\n        x = product\n    print(x)\n\nif __name__ == \"__main__\":\n    main()\n", "x = int(input())\n\ndef product(x):\n    if x < 10: # if the number is less than 10, return the number\n        return x\n    else:\n        y = 1\n        for i in str(x): # if the number is greater than 10, loop through the number\n            if int(i) != 0: # if the number is not zero, multiply it to the variable y\n                y *= int(i)\n        return product(y)\nprint(product(x))\n", "\n\ndef product(x):\n    if x < 10:\n        return x\n    else:\n        y = 1\n        for i in str(x):\n            if int(i) != 0:\n                y *= int(i)\n        return product(y)\n\nprint(product(int(input(\"Enter a number: \"))))\n", "\n\nnum = int(input())\n\nwhile num > 9:\n    num = str(num)\n    num = [str(int(i)) for i in num if i != '0']\n    num = ''.join(num) \n    num = int(num) \n\n\nprint(num)\n"]