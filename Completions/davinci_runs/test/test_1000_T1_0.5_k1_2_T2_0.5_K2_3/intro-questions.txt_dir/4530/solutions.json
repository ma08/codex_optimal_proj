["from collections import defaultdict as dd\nfor _ in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    d=dd(int)\n    for i in a:\n        d[i]+=1\n    ma=0\n    r=len(d.keys())\n    for i in d.keys():\n        ma=max(ma,min(d[i]-1,r),min(d[i],r-1))\n    print(ma)", "#!usr/bin/env python3\nfrom collections import defaultdict, deque\nfrom heapq import heappush, heappop\nfrom itertools import permutations, accumulate\nimport sys\nimport math\nimport bisect\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef I(): return int(sys.stdin.readline())\ndef LS():return [list(x) for x in sys.stdin.readline().split()]\ndef S():\n    res = list(sys.stdin.readline())\n    if res[-1] == \"\\n\":\n        return res[:-1]\n    return res\ndef IR(n):\n    return [I() for i in range(n)]\ndef LIR(n):\n    return [LI() for i in range(n)]\ndef SR(n):\n    return [S() for i in range(n)]\ndef LSR(n):\n    return [LS() for i in range(n)]\n\nsys.setrecursionlimit(1000000)\nmod = 1000000007\n\ndef solve():\n    t = I()\n    for _ in range(t):\n        n = I()\n        a = LI()\n        x = len(set(a))\n        d = defaultdict(lambda : 0)\n        for i in a:\n            d[i] += 1\n        y = max(d.values())\n        if x < y:\n            print(x)\n        elif x == y:\n            print(x-1)\n        else:\n            print(y)\n    return\n\n#Solve\ndef __starting_point():\n    solve()\n\n__starting_point()", "t = int(input())\nfor i in range(t):\n\tn = int(input())\n\tl = list(map(int,input().split()))\n\td = {}\n\tfor i in l:\n\t\td[i] = 0\n\tfor i in l:\n\t\td[i] += 1\n\tmyk = len(d)\n\tmaksik = 0\n\tdupa = -12131\n\tfor i in l:\n\t\tif d[i] > maksik:\n\t\t\tmaksik = min(d[i],myk-1)\n\t\tif d[i] > myk:\n\t\t\tdupa = myk\n\tprint(max(maksik,dupa))", "from collections import Counter\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    c = sorted(Counter(a).values())\n\n    maxi = 0\n\n    for i in range(len(c)):\n        maxi = max(maxi, min(c[i], i), min(c[i] - 1, i + 1))\n\n    print(maxi)", "from operator import itemgetter\nimport sys\ninput = sys.stdin.readline\n\n\ndef compress(string):\n    string.append(\"#\")\n    n = len(string)\n    begin, end, cnt = 0, 1, 1\n    ans = []\n    while end < n:\n        if string[begin] == string[end]:\n            end, cnt = end + 1, cnt + 1\n        else:\n            ans.append((string[begin], cnt))\n            begin, end, cnt = end, end + 1, 1\n    return ans\n\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    comp = compress(a)\n    comp = sorted(comp, key=itemgetter(1))\n    same_max = comp[-1][-1]\n    kind_max = len(comp)\n    if same_max == kind_max:\n        print(same_max - 1)\n    else:\n        print(min(same_max, kind_max))\n", "'''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n'''\nfrom collections import Counter as c\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    t = c(a)\n    l = [[t[a], a] for a in t]\n    l.sort(reverse=True)\n    b = l[0][0]\n    a = len(l)-1\n    print (max(min(a,b), min(a+1,b-1)))", "import sys\n\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).__next__\n\nfrom collections import Counter\n\ndef go():\n    n = int(input())\n    # n,a,b = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    m = len(c)\n    best=-1\n    for cnt in list(c.values()):\n        best = max(best,min(cnt,m-1))\n        best = max(best,min(cnt-1,m))\n\n    return best\n\n# x,s = map(int,input().split())\nt = int(input())\n# t = 1\nans = []\nfor _ in range(t):\n    # print(go())\n    ans.append(str(go()))\n#\nprint('\\n'.join(ans))\n", "from math import *\nfrom collections import *\nt = int(input())\nfor y in range(t):\n\tn = int(input())\n\ta = list(map(int,input().split()))\n\td = Counter(a)\n\tdiff = len(d)\n\tsame = 0\n\tfor i in d.values():\n\t\tsame = max(i,same)\n\tif(diff < same):\n\t\tprint(diff)\n\telif(diff == same):\n\t\tprint(diff-1)\n\telse:\n\t\tprint(same)", "t=int(input())\nwhile t:\n    n=int(input())\n    a=list(map(int,input().split()))\n    ls=[0 for i in range(n+1)]\n    for i in range(n):\n        ls[a[i]]+=1\n    dis=len(set(a))\n    sam=max(ls)\n    print(max(min(dis-1,sam),min(dis,sam-1)))\n    t-=1    ", "t = int(input())\nfor q in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    number = 1\n    for i in range(0, n - 1):\n        if a[i] != a[i + 1]:\n            number += 1\n    mn = 0\n    now = 1\n    for i in range(0, n - 1):\n        if a[i] == a[i + 1]:\n            now += 1\n        else:\n            mn = max(mn, now)\n            now = 1\n    mn = max(mn, now)\n    print(max(min(number - 1, mn), min(number, mn - 1)))\n", "import sys\ninput = sys.stdin.readline\nfrom collections import Counter\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    C=Counter(list(map(int,input().split())))\n\n    LEN=len(C)\n    MAX=max(C.values())\n\n    if MAX<LEN:\n        print(MAX)\n    elif MAX==LEN:\n        print(MAX-1)\n    else:\n        print(LEN)\n        \n", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    skills = map(int, input().split())\n    d = {}\n    for s in skills:\n        if s in d:\n            d[s] += 1\n        else:\n            d[s] = 1\n\n    m = 0\n    for k in d.keys():\n        m = max(m, max(min(d[k], len(d) - 1), min(d[k] - 1, len(d))))\n    print(m)", "t = int(input(''))\nfor _ in range(t):\n    n = int(input(''))\n    a = list(map(int,input('').split(' ')))\n    d = {}\n    for i in range(n):\n        if(a[i] not in d):\n            d[a[i]] = 0\n        d[a[i]] = d[a[i]]+1\n    mx = 0\n    l = len(d)\n    for k in d:\n        if(min(d[k],l-1) > mx):\n            mx = min(d[k],l-1)\n        if(min(d[k]-1,l) > mx):\n            mx = min(d[k]-1,l)\n    print(mx)"]