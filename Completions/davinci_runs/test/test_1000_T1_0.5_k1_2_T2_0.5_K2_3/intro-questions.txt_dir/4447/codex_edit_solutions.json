["\n# https://codeforces.com/contest/1294/problem/B\nfrom sys import stdin\nfrom math import gcd\n\ndef read():\n    return stdin.readline()\n\ndef main():\n    n, m = (int(x) for x in read().split())\n    a = [int(x) for x in read().split()]\n    a.sort()\n    min_val = a[0]\n    max_val = a[n-1]\n    max_moves = max_val - min_val\n    min_moves = 0\n    for i in range(1, n):\n        if i % m == 0:\n            min_moves += a[i-1] - min_val\n    if min_moves > max_moves:\n        print(min_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(max_val, end=' ')\n            else:\n                print(min_val, end=' ')\n    else:\n        print(max_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(min_val, end=' ')\n            else:\n                print(max_val, end=' ')\n\nmain()\n", "\n# Solution\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i]) \n\nprint(ans)\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n", "\n\nfrom sys import stdin\n\ndef read():\n    return stdin.readline()\n\ndef main():\n    n, m = (int(x) for x in read().split())\n    a = [int(x) for x in read().split()]\n    a.sort()\n    min_val = a[0]\n    max_val = a[n-1]\n    max_moves = max_val - min_val\n    min_moves = 0\n    for i in range(1, n):\n        if i % m == 0:\n            min_moves += a[i-1] - min_val\n    if min_moves >= max_moves:\n        print(min_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(max_val, end=' ')\n            else:\n                print(min_val, end=' ')\n    else:\n        print(max_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(min_val, end=' ')\n            else:\n                print(max_val, end=' ')\n\nmain()\n", "\n# \nfrom sys import stdin\nfrom math import gcd\n\ndef read():\n    return stdin.readline()\n\ndef main():\n    n, m = (int(x) for x in read().split())\n    a = [int(x) for x in read().split()]\n    a.sort()\n    min_val = a[0]\n    max_val = a[n-1]\n    max_moves = max_val - min_val\n    min_moves = 0\n    for i in range(1, n):\n        if i % m == 0:\n            min_moves += a[i-1] - min_val\n    if min_moves > max_moves:\n        print(min_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(max_val, end=' ')\n            else:\n                print(min_val, end=' ')\n    else:\n        print(max_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(min_val, end=' ')\n            else:\n                print(max_val, end=' ')\n\nmain()\n", "\n\n# Solution 1\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\n\nprint(ans)\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n", "\n\nfrom sys import stdin\n\ndef read():\n    return stdin.readline()\n\ndef main():\n    n, m = (int(x) for x in read().split())\n    a = [int(x) for x in read().split()][:n]\n    a.sort()\n    min_val = a[0]\n    max_val = a[n-1]\n    max_moves = max_val - min_val\n    min_moves = 0\n    for i in range(1, n):\n        if i % m == 0:\n            min_moves += a[i-1] - min_val\n    if min_moves > max_moves:\n        print(min_moves, end='\\n')\n        for i in range(n):\n            if i % m == 0:\n                print(max_val, end=' ' if i < n-1 else '\\n')\n            else:\n                print(min_val, end=' ' if i < n-1 else '\\n')\n    else:\n        print(max_moves, end='\\n')\n        for i in range(n):\n            if i % m == 0:\n                print(min_val, end=' ' if i < n-1 else '\\n')\n            else:\n                print(max_val, end=' ' if i < n-1 else '\\n')\n\nmain()\n", "\nfrom sys import stdin\nfrom math import gcd\n\ndef read():\n    return stdin.readline()\n\ndef main():\n    pass\n\nmain()\n", "\nfrom sys import stdin\nfrom math import gcd\n\ndef read():\n    return stdin.readline()\n\ndef main():\n    n, m = (int(x) for x in read().split())\n    a = [int(x) for x in read().split()]\n    a.sort()\n    min_val = a[0]\n    max_val = a[n-1]\n    max_moves = max_val - min_val\n    min_moves = 0\n    for i in range(1, n+1):\n        if i % m == 0:\n            min_moves += a[i-1] - min_val\n    if min_moves > max_moves:\n        print(min_moves)\n        for i in range(1, n+1):\n            if i % m == 0:\n                print(max_val, end=' ')\n            else:\n                print(min_val, end=' ')\n    else:\n        print(max_moves)\n        for i in range(1, n+1):\n            if i % m == 0:\n                print(min_val, end=' ')\n            else:\n                print(max_val, end=' ')\n\nmain()\n", "\nimport sys\n# Solution\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\n\nsys.stdout.write(str(ans)+'\\n')\n\nfor i in range(n):\n    sys.stdout.write(str(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2)+' ')\n", "\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\n\nprint(ans)  # Output: 2\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n", "\nfrom sys import stdin\n\ndef read():\n    return stdin.readline()\n\n\ndef main():\n    n, m = map(int, read().split())\n    a = list(map(int, read().split()))\n    print(min(max(a) - m, max(a) - min(a) - 2 * (m - 1)))\n\nmain()\n", "# Solution\nn, m = map(int, input().split())\na = list(map(int, input().split()))\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\nprint(ans)\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n", "\nfrom sys import stdin\nfrom math import gcd\n\n\ndef read():\n    return stdin.readline()\n\n\ndef main():\n    pass\n\n\nmain()\n", "\n# Solution\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\n\nprint(ans)\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ') \n", "\nfrom sys import stdin\nfrom math import gcd\n\ndef read():\n    return stdin.readline()\n\ndef main():\n    n, m = [int(x) for x in read().split()]\n    a = [int(x) for x in read().split()] \n    a.sort()\n    min_val = a[0]\n    max_val = a[-1]\n    max_moves = max_val - min_val\n    min_moves = 0\n    for i in range(1, n):\n        if i % m == 0:\n            min_moves += a[i-1] - min_val \n    if min_moves > max_moves:\n        print(min_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(max_val, end=' ')\n            else:\n                print(min_val, end=' ')\n    else:\n        print(max_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(min_val, end=' ')\n            else:\n                print(max_val, end=' ')\n\nmain()\n"]