2022-04-12 21:54:18.431899 num operations 2
2022-04-12 21:54:18.431917 size on input set 1
2022-04-12 21:54:20.111028 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    S = input()\n    count = 0\n    for i in range(1, len(S)):\n        if S[i] != S[i-1]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    S = input()\n    count = 1\n    for i in range(1, len(S)):\n        if S[i] != S[i-1]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    S = input()\n    count = 0\n    for i in range(1, len(S)):\n        if S[i] != S[i-1]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649800458,
  "object": "edit"
}
2022-04-12 21:54:20.111244 fix spelling mistakes 3 ["\ndef main():\n    S = input()\n    count = 0\n    for i in range(1, len(S)):\n        if S[i] != S[i-1]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    S = input()\n    count = 1\n    for i in range(1, len(S)):\n        if S[i] != S[i-1]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    S = input()\n    count = 0\n    for i in range(1, len(S)):\n        if S[i] != S[i-1]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 21:54:20.111272 size on output set 2
2022-04-12 21:54:20.111279 size on input set 2
2022-04-12 21:54:24.410201 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    S = input()\n    print(len(set(S)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    S = input() \n    count = 1\n    for i in range(1, len(S)):\n        if S[i] != S[i-1]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    C = list(map(int, input().split()))\n\n    points = 0\n    for i in range(N):\n        points += B[A[i]]\n        if (i+1) < N and A[i+1] == A[i] + 1:\n            points += C[A[i]]\n    print(points)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649800460,
  "object": "edit"
}
2022-04-12 21:54:24.410363 fix syntax errors 3 ["\n\ndef main():\n    S = input()\n    print(len(set(S)))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    S = input() \n    count = 1\n    for i in range(1, len(S)):\n        if S[i] != S[i-1]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    C = list(map(int, input().split()))\n\n    points = 0\n    for i in range(N):\n        points += B[A[i]]\n        if (i+1) < N and A[i+1] == A[i] + 1:\n            points += C[A[i]]\n    print(points)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 21:54:27.240725 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\n\n\ndef main():\n    S = input().strip()\n    count = 0\n    for i in range(1, len(S)):\n        if S[i] != S[i-1]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    s = input()\n    count = 0\n    for i in range(1, len(s)):\n        if s[i] != s[i-1]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    S = input()\n    count = 0\n    for i in range(1, len(S)-1):\n        if S[i] != S[i+1]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649800464,
  "object": "edit"
}
2022-04-12 21:54:27.240912 fix syntax errors 3 ["import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\n\n\ndef main():\n    S = input().strip()\n    count = 0\n    for i in range(1, len(S)):\n        if S[i] != S[i-1]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    s = input()\n    count = 0\n    for i in range(1, len(s)):\n        if s[i] != s[i-1]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    S = input()\n    count = 0\n    for i in range(1, len(S)-1):\n        if S[i] != S[i+1]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 21:54:27.240940 size on output set 6
2022-04-12 21:54:27.240950 num operations 2
2022-04-12 21:54:27.240955 size on input set 1
2022-04-12 21:54:30.969678 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nS = input() #input string\ncount = 0   #initialize count\n\nfor i in range(len(S)-1):  #loop through the string\n    if S[i] == S[i+1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\nS = input()\ncount = 0\n\nfor i in range(len(S)-1):\n    if S[i] != S[i+1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\n\nS = input()\ncount = 0\nfor i in range(len(S)-1):\n    if S[i] == S[i+1]:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1649800467,
  "object": "edit"
}
2022-04-12 21:54:30.969842 fix spelling mistakes 3 ['\n\nS = input() #input string\ncount = 0   #initialize count\n\nfor i in range(len(S)-1):  #loop through the string\n    if S[i] == S[i+1]:\n        count += 1\n\nprint(count)\n', '\n\nS = input()\ncount = 0\n\nfor i in range(len(S)-1):\n    if S[i] != S[i+1]:\n        count += 1\n\nprint(count)\n', '\n\nS = input()\ncount = 0\nfor i in range(len(S)-1):\n    if S[i] == S[i+1]:\n        count += 1\n\nprint(count)\n']
2022-04-12 21:54:30.969861 size on output set 3
2022-04-12 21:54:30.969867 size on input set 3
2022-04-12 21:54:34.375566 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nS = input()\ncount = 0\nfor i in range(len(S)-1):\n    if S[i] != S[i+1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    S = input()\n    count = 0\n    for i in range(len(S)-1):\n        if S[i] == S[i+1]:\n            count += 1\n    print(count)\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nS = input()\ncount = 0\nfor i in range(len(S)-1):\n    if S[i] == S[i+1]:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1649800471,
  "object": "edit"
}
2022-04-12 21:54:34.375735 fix syntax errors 3 ['\n\nS = input()\ncount = 0\nfor i in range(len(S)-1):\n    if S[i] != S[i+1]:\n        count += 1\n\nprint(count)\n', '\ndef main():\n    S = input()\n    count = 0\n    for i in range(len(S)-1):\n        if S[i] == S[i+1]:\n            count += 1\n    print(count)\nif __name__ == "__main__":\n    main()\n', '\nS = input()\ncount = 0\nfor i in range(len(S)-1):\n    if S[i] == S[i+1]:\n        count += 1\n\nprint(count)\n']
2022-04-12 21:54:37.418454 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nS = input() #input string\ncount = 0   #initialize count\n\nfor i in range(len(S)-1):  #loop through the string\n    if S[i] == S[i+1]:  #check if the letter is equal to the next letter\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\nS = input() #input string; same as raw_input() in python 2\ncount = 0   #initialize count\n\nfor i in range(len(S)-1):  #loop through the string\n    if S[i] == S[i+1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\n\nS = input()  # input string\ncount = 0    # initialize count\n\nfor i in range(len(S) - 1):  # loop through the string\n    if S[i] == S[i+1]:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1649800474,
  "object": "edit"
}
2022-04-12 21:54:37.418705 fix syntax errors 3 ['\nS = input() #input string\ncount = 0   #initialize count\n\nfor i in range(len(S)-1):  #loop through the string\n    if S[i] == S[i+1]:  #check if the letter is equal to the next letter\n        count += 1\n\nprint(count)\n', '\n\nS = input() #input string; same as raw_input() in python 2\ncount = 0   #initialize count\n\nfor i in range(len(S)-1):  #loop through the string\n    if S[i] == S[i+1]:\n        count += 1\n\nprint(count)\n', '\n\nS = input()  # input string\ncount = 0    # initialize count\n\nfor i in range(len(S) - 1):  # loop through the string\n    if S[i] == S[i+1]:\n        count += 1\n\nprint(count)\n']
2022-04-12 21:54:38.836650 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nS = input()\ncount = 0\n\nfor i in range(len(S)-1):\n    if S[i] != S[i+1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\nS = input()\ncount = 0\n\nfor i in range(len(S)-1):\n    if S[i] != S[i+1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\nS = input()\ncount = 0\n\nfor i in range(len(S)-1):\n    if S[i] != S[i+1]:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1649800477,
  "object": "edit"
}
2022-04-12 21:54:38.836832 fix syntax errors 3 ['\nS = input()\ncount = 0\n\nfor i in range(len(S)-1):\n    if S[i] != S[i+1]:\n        count += 1\n\nprint(count)\n', '\nS = input()\ncount = 0\n\nfor i in range(len(S)-1):\n    if S[i] != S[i+1]:\n        count += 1\n\nprint(count)\n', '\nS = input()\ncount = 0\n\nfor i in range(len(S)-1):\n    if S[i] != S[i+1]:\n        count += 1\n\nprint(count)\n']
2022-04-12 21:54:38.836853 size on output set 7
