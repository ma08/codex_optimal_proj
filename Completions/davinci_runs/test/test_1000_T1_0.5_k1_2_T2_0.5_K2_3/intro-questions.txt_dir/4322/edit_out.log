2022-04-12 19:25:03.929087 num operations 2
2022-04-12 19:25:03.929096 size on input set 1
2022-04-12 19:25:07.220322 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    heights = [int(x) for x in sys.stdin.readline().strip().split()]\n    heights.sort()\n    balanced_heights = []\n    last = None\n    for h in heights:\n        if last is None or abs(h - last) <= 1:\n            balanced_heights.append(h)\n            last = h\n    print(len(balanced_heights))\n    print(' '.join(map(str, balanced_heights)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    heights = [int(x) for x in sys.stdin.readline().strip().split()]\n    heights.sort()\n    balanced = []\n    last = None\n    for h in heights:\n        if last is None or abs(h - last) <= 1:\n            balanced.append(h)\n            last = h\n    print(len(balanced))\n    print(' '.join(map(str, balanced)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    heights = [int(x) for x in sys.stdin.readline().strip().split()]\n    heights.sort()\n    balanced = []\n    last = None\n    for h in heights:\n        if last is None or abs(h - last) <= 1:\n            balanced.append(h)\n            last = h\n    print(len(balanced))\n    print(' '.join(map(str, balanced)))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649791504,
  "object": "edit"
}
2022-04-12 19:25:07.220519 fix spelling mistakes 3 ['\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    heights = [int(x) for x in sys.stdin.readline().strip().split()]\n    heights.sort()\n    balanced_heights = []\n    last = None\n    for h in heights:\n        if last is None or abs(h - last) <= 1:\n            balanced_heights.append(h)\n            last = h\n    print(len(balanced_heights))\n    print(\' \'.join(map(str, balanced_heights)))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    heights = [int(x) for x in sys.stdin.readline().strip().split()]\n    heights.sort()\n    balanced = []\n    last = None\n    for h in heights:\n        if last is None or abs(h - last) <= 1:\n            balanced.append(h)\n            last = h\n    print(len(balanced))\n    print(\' \'.join(map(str, balanced)))\n\nif __name__ == "__main__":\n    main()\n', '\n\n\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    heights = [int(x) for x in sys.stdin.readline().strip().split()]\n    heights.sort()\n    balanced = []\n    last = None\n    for h in heights:\n        if last is None or abs(h - last) <= 1:\n            balanced.append(h)\n            last = h\n    print(len(balanced))\n    print(\' \'.join(map(str, balanced)))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 19:25:07.220550 size on output set 3
2022-04-12 19:25:07.220556 size on input set 3
2022-04-12 19:25:12.160899 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    heights = [int(x) for x in sys.stdin.readline().strip().split()]\n    heights.sort()\n    balanced_heights = [heights[0]]\n    last = None\n    for h in heights[1:]:\n        if last is None or abs(h - last) <= 1:\n            balanced_heights.append(h)\n            last = h\n    print(len(balanced_heights))\n    print(' '.join(map(str, balanced_heights)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    heights = [int(x) for x in sys.stdin.readline().split()]\n    heights.sort()\n    balanced_heights = []\n    last = None\n    for h in heights:\n        if last is None or abs(h-last) <= 1:\n            balanced_heights.append(h)\n            last = h\n    print(len(balanced_heights))\n    print(' '.join(map(str, balanced_heights)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    heights = [int(x) for x in sys.stdin.readline().strip().split()][:n]\n    heights.sort()\n    balanced_heights = []\n    last = None\n    for h in heights:\n        if last is None or abs(h - last) <= 1:\n            balanced_heights.append(h)\n            last = h\n    print(len(balanced_heights))\n    print(' '.join(map(str, balanced_heights)))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649791507,
  "object": "edit"
}
2022-04-12 19:25:12.161091 fix syntax errors 3 ['\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    heights = [int(x) for x in sys.stdin.readline().strip().split()]\n    heights.sort()\n    balanced_heights = [heights[0]]\n    last = None\n    for h in heights[1:]:\n        if last is None or abs(h - last) <= 1:\n            balanced_heights.append(h)\n            last = h\n    print(len(balanced_heights))\n    print(\' \'.join(map(str, balanced_heights)))\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    heights = [int(x) for x in sys.stdin.readline().split()]\n    heights.sort()\n    balanced_heights = []\n    last = None\n    for h in heights:\n        if last is None or abs(h-last) <= 1:\n            balanced_heights.append(h)\n            last = h\n    print(len(balanced_heights))\n    print(\' \'.join(map(str, balanced_heights)))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    heights = [int(x) for x in sys.stdin.readline().strip().split()][:n]\n    heights.sort()\n    balanced_heights = []\n    last = None\n    for h in heights:\n        if last is None or abs(h - last) <= 1:\n            balanced_heights.append(h)\n            last = h\n    print(len(balanced_heights))\n    print(\' \'.join(map(str, balanced_heights)))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 19:25:18.326758 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    heights = [int(x) for x in sys.stdin.readline().strip().split()]\n    heights.sort()\n    balanced = []\n    last = None\n    for h in heights:\n        if last is None or abs(h - last) < 1:\n            balanced.append(h)\n            last = h\n    print(len(balanced))\n    print(' '.join(map(str, balanced)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    heights = [int(x) for x in sys.stdin.readline().strip().split()]\n    heights.sort()\n    balanced = []\n    last = None\n    for h in heights:\n        if last is None or abs(h - last) <= 1:\n            balanced.append(h)\n            last = h\n    print(len(balanced))\n    print(' '.join(map(str, balanced)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/python2.7\nimport sys\nimport math\n\nn = int(sys.stdin.readline().strip())\nheights = [int(x) for x in sys.stdin.readline().strip().split()]\nheights.sort()\nbalanced = []\nlast = None\nfor h in heights:\n    if last is None or abs(h - last) <= 1:\n        balanced.append(h)\n        last = h\nprint(len(balanced))\nprint(' '.join(map(str, balanced)))\n"
    }
  ],
  "created": 1649791512,
  "object": "edit"
}
2022-04-12 19:25:18.326944 fix syntax errors 3 ['\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    heights = [int(x) for x in sys.stdin.readline().strip().split()]\n    heights.sort()\n    balanced = []\n    last = None\n    for h in heights:\n        if last is None or abs(h - last) < 1:\n            balanced.append(h)\n            last = h\n    print(len(balanced))\n    print(\' \'.join(map(str, balanced)))\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    heights = [int(x) for x in sys.stdin.readline().strip().split()]\n    heights.sort()\n    balanced = []\n    last = None\n    for h in heights:\n        if last is None or abs(h - last) <= 1:\n            balanced.append(h)\n            last = h\n    print(len(balanced))\n    print(\' \'.join(map(str, balanced)))\n\nif __name__ == "__main__":\n    main()\n', "#!/usr/bin/python2.7\nimport sys\nimport math\n\nn = int(sys.stdin.readline().strip())\nheights = [int(x) for x in sys.stdin.readline().strip().split()]\nheights.sort()\nbalanced = []\nlast = None\nfor h in heights:\n    if last is None or abs(h - last) <= 1:\n        balanced.append(h)\n        last = h\nprint(len(balanced))\nprint(' '.join(map(str, balanced)))\n"]
2022-04-12 19:25:22.226428 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    heights = [int(x) for x in sys.stdin.readline().strip().split()]\n    heights.sort()\n    balanced = []\n    last = None\n    for h in heights:\n        if last is None or abs(h - last) <= 1:\n            balanced.append(h)\n            last = h\n    print(len(balanced))\n    print(' '.join(map(str, balanced)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n#!/usr/bin/python3\n\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    heights = [int(x) for x in sys.stdin.readline().strip().split()]\n    heights.sort()\n    balanced = []\n    last = None\n    for h in heights:\n        if last is None or abs(h - last) <= 1:\n            balanced.append(h)\n            last = h\n    print(len(balanced))\n    print(' '.join(map(str, balanced)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    heights = [int(x) for x in sys.stdin.readline().strip().split()]\n    heights.sort()\n    balanced = []\n    last = None\n    for h in heights:\n        if last is None or abs(h - last) <= 1:\n            balanced.append(h)\n            last = h\n    print(len(balanced))\n    print(' '.join(map(str, balanced)))\n\nif __name__ == \"__main__\":\n    main()\n\n\n\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    heights = [int(x) for x in sys.stdin.readline().strip().split()]\n    heights.sort()\n    balanced = []\n    last = None\n    for h in heights:\n        if last is None or abs(h - last) <= 1:\n            balanced.append(h)\n            last = h\n    print(len(balanced))\n    print(' '.join(map(str, balanced)))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649791518,
  "object": "edit"
}
2022-04-12 19:25:22.226623 fix syntax errors 3 ['\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    heights = [int(x) for x in sys.stdin.readline().strip().split()]\n    heights.sort()\n    balanced = []\n    last = None\n    for h in heights:\n        if last is None or abs(h - last) <= 1:\n            balanced.append(h)\n            last = h\n    print(len(balanced))\n    print(\' \'.join(map(str, balanced)))\n\nif __name__ == "__main__":\n    main()\n', '\n#!/usr/bin/python3\n\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    heights = [int(x) for x in sys.stdin.readline().strip().split()]\n    heights.sort()\n    balanced = []\n    last = None\n    for h in heights:\n        if last is None or abs(h - last) <= 1:\n            balanced.append(h)\n            last = h\n    print(len(balanced))\n    print(\' \'.join(map(str, balanced)))\n\nif __name__ == "__main__":\n    main()\n', '\n\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    heights = [int(x) for x in sys.stdin.readline().strip().split()]\n    heights.sort()\n    balanced = []\n    last = None\n    for h in heights:\n        if last is None or abs(h - last) <= 1:\n            balanced.append(h)\n            last = h\n    print(len(balanced))\n    print(\' \'.join(map(str, balanced)))\n\nif __name__ == "__main__":\n    main()\n\n\n\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    heights = [int(x) for x in sys.stdin.readline().strip().split()]\n    heights.sort()\n    balanced = []\n    last = None\n    for h in heights:\n        if last is None or abs(h - last) <= 1:\n            balanced.append(h)\n            last = h\n    print(len(balanced))\n    print(\' \'.join(map(str, balanced)))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 19:25:22.226664 size on output set 9
2022-04-12 19:25:22.226686 num operations 2
2022-04-12 19:25:22.226691 size on input set 1
2022-04-12 19:25:27.206894 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# SOLUTION\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nif n == 1:\n    print(1)\n    print(a[0])\nelse:\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    max_val = max(d.values())\n    if max_val == 1:\n        print(1)\n        print(a[0])\n    else:\n        res = []\n        for i in d:\n            if d[i] == max_val:\n                res.append(i)\n        res.sort()\n        print(len(res))\n        for i in res:\n            print(i, end=' ')\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nif n == 1:\n    print(1)\n    print(a[0])\nelse:\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    max_val = max(d.values())\n    if max_val == 1:\n        print(1)\n        print(a[0])\n    else:\n        res = []\n        for i in d:\n            if d[i] == max_val:\n                res.append(i)\n        res.sort()\n        print(len(res))\n        for i in res:\n            print(i, end=' ')\n"
    },
    {
      "index": 2,
      "text": "\n\n# SOLUTIONS\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nif n == 1:\n    print(1)\n    print(a[0])\nelse:\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    max_val = max(d.values())\n    if max_val == 1:\n        print(1)\n        print(a[0])\n    else:\n        res = []\n        for i in d:\n            if d[i] == max_val:\n                res.append(i)\n        res.sort()\n        print(len(res))\n        for i in res:\n            print(i, end=' ')\n"
    }
  ],
  "created": 1649791522,
  "object": "edit"
}
2022-04-12 19:25:27.207056 fix spelling mistakes 3 ["\n\n# SOLUTION\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nif n == 1:\n    print(1)\n    print(a[0])\nelse:\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    max_val = max(d.values())\n    if max_val == 1:\n        print(1)\n        print(a[0])\n    else:\n        res = []\n        for i in d:\n            if d[i] == max_val:\n                res.append(i)\n        res.sort()\n        print(len(res))\n        for i in res:\n            print(i, end=' ')\n", "\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nif n == 1:\n    print(1)\n    print(a[0])\nelse:\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    max_val = max(d.values())\n    if max_val == 1:\n        print(1)\n        print(a[0])\n    else:\n        res = []\n        for i in d:\n            if d[i] == max_val:\n                res.append(i)\n        res.sort()\n        print(len(res))\n        for i in res:\n            print(i, end=' ')\n", "\n\n# SOLUTIONS\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nif n == 1:\n    print(1)\n    print(a[0])\nelse:\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    max_val = max(d.values())\n    if max_val == 1:\n        print(1)\n        print(a[0])\n    else:\n        res = []\n        for i in d:\n            if d[i] == max_val:\n                res.append(i)\n        res.sort()\n        print(len(res))\n        for i in res:\n            print(i, end=' ')\n"]
2022-04-12 19:25:27.207086 size on output set 3
2022-04-12 19:25:27.207092 size on input set 3
2022-04-12 19:25:35.486786 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# n = int(input())\n# a = [int(i) for i in input().split()]\n#\n# if n == 1:\n#     print(1)\n#     print(a[0])\n# else:\n#     d = {}\n#     for i in a:\n#         d[i] = d.get(i, 0) + 1\n#     max_val = max(d.values())\n#     if max_val == 1:\n#         print(1)\n#         print(a[0])\n#     else:\n#         res = []\n#         for i in d:\n#             if d[i] == max_val:\n#                 res.append(i)\n#         res.sort()\n#         print(len(res))\n#         for i in res:\n#             print(i, end=' ')\n"
    },
    {
      "index": 1,
      "text": "\n#\nn = int(input())\na = [int(i) for i in input().split()]\n\nif n == 1:\n    print(1)\n    print(a[0])\nelse:\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    max_val = max(d.values())\n    if max_val == 1:\n        print(1)\n        print(a[0])\n    else:\n        res = []\n        for i in d:\n            if d[i] == max_val:\n                res.append(i)\n        res.sort()\n        print(len(res))\n        for i in res:\n            print(i, end=' ')\n"
    },
    {
      "index": 2,
      "text": "import sys\nimport math\n\nsys.stdin = open('input.txt', 'r')\nsys.stdout = open('output.txt', 'w')\n\n\ndef read():\n    return [int(i) for i in input().split()]\n\n\n\nn = int(input())\na = read()\n\nif n == 1:\n    print(1)\n    print(a[0])\nelse:\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    max_val = max(d.values())\n    if max_val == 1:\n        print(1)\n        print(a[0])\n    else:\n        res = []\n        for i in d:\n            if d[i] == max_val:\n                res.append(i)\n        res.sort()\n        print(len(res))\n        for i in res:\n            print(i, end=' ')\n"
    }
  ],
  "created": 1649791527,
  "object": "edit"
}
2022-04-12 19:25:35.487058 fix syntax errors 3 ["\n\n# n = int(input())\n# a = [int(i) for i in input().split()]\n#\n# if n == 1:\n#     print(1)\n#     print(a[0])\n# else:\n#     d = {}\n#     for i in a:\n#         d[i] = d.get(i, 0) + 1\n#     max_val = max(d.values())\n#     if max_val == 1:\n#         print(1)\n#         print(a[0])\n#     else:\n#         res = []\n#         for i in d:\n#             if d[i] == max_val:\n#                 res.append(i)\n#         res.sort()\n#         print(len(res))\n#         for i in res:\n#             print(i, end=' ')\n", "\n#\nn = int(input())\na = [int(i) for i in input().split()]\n\nif n == 1:\n    print(1)\n    print(a[0])\nelse:\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    max_val = max(d.values())\n    if max_val == 1:\n        print(1)\n        print(a[0])\n    else:\n        res = []\n        for i in d:\n            if d[i] == max_val:\n                res.append(i)\n        res.sort()\n        print(len(res))\n        for i in res:\n            print(i, end=' ')\n", "import sys\nimport math\n\nsys.stdin = open('input.txt', 'r')\nsys.stdout = open('output.txt', 'w')\n\n\ndef read():\n    return [int(i) for i in input().split()]\n\n\n\nn = int(input())\na = read()\n\nif n == 1:\n    print(1)\n    print(a[0])\nelse:\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    max_val = max(d.values())\n    if max_val == 1:\n        print(1)\n        print(a[0])\n    else:\n        res = []\n        for i in d:\n            if d[i] == max_val:\n                res.append(i)\n        res.sort()\n        print(len(res))\n        for i in res:\n            print(i, end=' ')\n"]
2022-04-12 19:25:41.705402 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# SOLUTION\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nif n == 1:\n    print(1)\n    print(a[0])\nelse:\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    max_val = max(d.values())\n    if max_val == 1:\n        print(1)\n        print(a[0])\n    else:\n        res = []\n        for i in d:\n            if d[i] == max_val:\n                res.append(i)\n        res.sort()\n        print(len(res))\n        for i in res:\n            print(i, end=' ')\n"
    },
    {
      "index": 1,
      "text": "\n\n# SOLUTION\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nif n == 1:\n    print(1)\n    print(a[0])\nelse:\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    max_val = max(d.values())\n    if max_val == 1:\n        print(1)\n        print(a[0])\n    else:\n        res = []\n        for i in d:\n            if d[i] == max_val:\n                res.append(i)\n        res.sort()\n        print(len(res))\n        for i in res:\n            print(i, end=' ')\n"
    },
    {
      "index": 2,
      "text": "n, m = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\nif len(set(a).union(set(b))) == n:\n    print('I become the guy.')\nelse:\n    print('Oh, my keyboard!')\n"
    }
  ],
  "created": 1649791535,
  "object": "edit"
}
2022-04-12 19:25:41.705575 fix syntax errors 3 ["\n\n# SOLUTION\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nif n == 1:\n    print(1)\n    print(a[0])\nelse:\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    max_val = max(d.values())\n    if max_val == 1:\n        print(1)\n        print(a[0])\n    else:\n        res = []\n        for i in d:\n            if d[i] == max_val:\n                res.append(i)\n        res.sort()\n        print(len(res))\n        for i in res:\n            print(i, end=' ')\n", "\n\n# SOLUTION\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nif n == 1:\n    print(1)\n    print(a[0])\nelse:\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    max_val = max(d.values())\n    if max_val == 1:\n        print(1)\n        print(a[0])\n    else:\n        res = []\n        for i in d:\n            if d[i] == max_val:\n                res.append(i)\n        res.sort()\n        print(len(res))\n        for i in res:\n            print(i, end=' ')\n", "n, m = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\nif len(set(a).union(set(b))) == n:\n    print('I become the guy.')\nelse:\n    print('Oh, my keyboard!')\n"]
2022-04-12 19:25:46.965497 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# SOLUTION\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nif n == 1:\n    print(1, end='\\n')\n    print(a[0], end=' ')\nelse:\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    max_val = max(d.values())\n    if max_val == 1:\n        print(1, end='\\n')\n        print(a[0], end=' ')\n    else:\n        res = []\n        for i in d:\n            if d[i] == max_val:\n                res.append(i)\n        res.sort()\n        print(len(res), end='\\n')\n        for i in res:\n            print(i, end=' ')\n"
    },
    {
      "index": 1,
      "text": "\n# \n# SOLUTION\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nif n == 1:\n    print(1)\n    print(a[0])\nelse:\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    max_val = max(d.values())\n    if max_val == 1:\n        print(1)\n        print(a[0])\n    else:\n        res = []\n        for i in d:\n            if d[i] == max_val:\n                res.append(i)\n        res.sort()\n        print(len(res))\n        for i in res:\n            print(i, end=' ')\n"
    },
    {
      "index": 2,
      "text": "\n\n# SOLUTION 1\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nif n == 1:\n    print(1)\n    print(a[0])\nelse:\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    max_val = max(d.values())\n    if max_val == 1:\n        print(1)\n        print(a[0])\n    else:\n        res = []\n        for i in d:\n            if d[i] == max_val:\n                res.append(i)\n        res.sort()\n        print(len(res))\n        for i in res:\n            print(i, end=' ')\n\n\n# SOLUTION 2\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nif n == 1:\n    print(1)\n    print(a[0])\nelse:\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    max_val = max(d.values())\n    if max_val == 1:\n        print(1)\n        print(a[0])\n    else:\n        res = []\n        for i in d:\n            if d[i] == max_val:\n                res.append(i)\n        res.sort()\n        print(len(res))\n        for i in res:\n            print(i, end=' ')\n"
    }
  ],
  "created": 1649791541,
  "object": "edit"
}
2022-04-12 19:25:46.965689 fix syntax errors 3 ["\n# SOLUTION\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nif n == 1:\n    print(1, end='\\n')\n    print(a[0], end=' ')\nelse:\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    max_val = max(d.values())\n    if max_val == 1:\n        print(1, end='\\n')\n        print(a[0], end=' ')\n    else:\n        res = []\n        for i in d:\n            if d[i] == max_val:\n                res.append(i)\n        res.sort()\n        print(len(res), end='\\n')\n        for i in res:\n            print(i, end=' ')\n", "\n# \n# SOLUTION\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nif n == 1:\n    print(1)\n    print(a[0])\nelse:\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    max_val = max(d.values())\n    if max_val == 1:\n        print(1)\n        print(a[0])\n    else:\n        res = []\n        for i in d:\n            if d[i] == max_val:\n                res.append(i)\n        res.sort()\n        print(len(res))\n        for i in res:\n            print(i, end=' ')\n", "\n\n# SOLUTION 1\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nif n == 1:\n    print(1)\n    print(a[0])\nelse:\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    max_val = max(d.values())\n    if max_val == 1:\n        print(1)\n        print(a[0])\n    else:\n        res = []\n        for i in d:\n            if d[i] == max_val:\n                res.append(i)\n        res.sort()\n        print(len(res))\n        for i in res:\n            print(i, end=' ')\n\n\n# SOLUTION 2\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nif n == 1:\n    print(1)\n    print(a[0])\nelse:\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    max_val = max(d.values())\n    if max_val == 1:\n        print(1)\n        print(a[0])\n    else:\n        res = []\n        for i in d:\n            if d[i] == max_val:\n                res.append(i)\n        res.sort()\n        print(len(res))\n        for i in res:\n            print(i, end=' ')\n"]
2022-04-12 19:25:46.965782 size on output set 8
