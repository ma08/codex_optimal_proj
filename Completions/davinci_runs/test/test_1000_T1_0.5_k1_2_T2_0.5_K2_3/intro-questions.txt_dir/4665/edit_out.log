2022-04-12 23:22:17.685342 num operations 2
2022-04-12 23:22:17.685351 size on input set 1
2022-04-12 23:22:22.513878 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom __future__ import print_function\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom __future__ import print_function \nfrom collections import namedtuple\n\nN = int(input()) \nmarks = namedtuple('marks',input())\n\ntotal = 0.0\nfor i in range(N):\n    total += int(marks(*input().split()).MARKS)\n\nprint(total/N)\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom __future__ import print_function\nif __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    query_scores = student_marks[query_name]\n    print(\"{0:.2f}\".format(sum(query_scores)/(len(query_scores))))\n"
    }
  ],
  "created": 1649805737,
  "object": "edit"
}
2022-04-12 23:22:22.514092 fix spelling mistakes 3 ['\n\nfrom __future__ import print_function\n', "\n\nfrom __future__ import print_function \nfrom collections import namedtuple\n\nN = int(input()) \nmarks = namedtuple('marks',input())\n\ntotal = 0.0\nfor i in range(N):\n    total += int(marks(*input().split()).MARKS)\n\nprint(total/N)\n", '\n\nfrom __future__ import print_function\nif __name__ == \'__main__\':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    query_scores = student_marks[query_name]\n    print("{0:.2f}".format(sum(query_scores)/(len(query_scores))))\n']
2022-04-12 23:22:22.514116 size on output set 3
2022-04-12 23:22:22.514123 size on input set 3
2022-04-12 23:22:26.249173 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\ndef main():\n    print(\"hello world\")\n\nif __name__ == \"__main__\":\n    main()\nfrom __future__ import print_function\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom __future__ import print_function.\n"
    },
    {
      "index": 2,
      "text": "\n\n\nimport sys\n\nimport numpy as np\n\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\n\n\n\ndef main():\n\n    print(\"Python version: %d.%d.%d\" % sys.version_info[:3])\n\n    print(\"pandas version: %s\" % pd.__version__)\n\n    print(\"matplotlib version: %s\" % matplotlib.__version__)\n\n\n\nif __name__ == \"__main__\":\n\n    main()\nfrom __future__ import print_function\n"
    }
  ],
  "created": 1649805742,
  "object": "edit"
}
2022-04-12 23:22:26.249351 fix syntax errors 3 ['\n\n\ndef main():\n    print("hello world")\n\nif __name__ == "__main__":\n    main()\nfrom __future__ import print_function\n', '\n\nfrom __future__ import print_function.\n', '\n\n\nimport sys\n\nimport numpy as np\n\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\n\n\n\ndef main():\n\n    print("Python version: %d.%d.%d" % sys.version_info[:3])\n\n    print("pandas version: %s" % pd.__version__)\n\n    print("matplotlib version: %s" % matplotlib.__version__)\n\n\n\nif __name__ == "__main__":\n\n    main()\nfrom __future__ import print_function\n']
2022-04-12 23:22:29.980592 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom __future__ import print_function\nfrom collections import namedtuple\n\nN = int(input())\nmarks = namedtuple('marks', input())\n\ntotal = 0.0\nfor i in range(N):\n    total += int(marks(*input().split()).MARKS)\n\nprint(total / N)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom __future__ import print_function\nfrom collections import namedtuple\n\nN = int(input())\nmarks = namedtuple('marks',input())\n\ntotal = 0\nfor i in range(N):\n    total += int(marks(*input().split()).MARKS)\n\nprint(total/N)\n"
    },
    {
      "index": 2,
      "text": "\ndef read_file(filename):\n    with open(filename) as f:\n        for line in f:\n            print(line)\nread_file(\"file.txt\")\n"
    }
  ],
  "created": 1649805746,
  "object": "edit"
}
2022-04-12 23:22:29.980784 fix syntax errors 3 ["\n\nfrom __future__ import print_function\nfrom collections import namedtuple\n\nN = int(input())\nmarks = namedtuple('marks', input())\n\ntotal = 0.0\nfor i in range(N):\n    total += int(marks(*input().split()).MARKS)\n\nprint(total / N)\n", "\n\nfrom __future__ import print_function\nfrom collections import namedtuple\n\nN = int(input())\nmarks = namedtuple('marks',input())\n\ntotal = 0\nfor i in range(N):\n    total += int(marks(*input().split()).MARKS)\n\nprint(total/N)\n", '\ndef read_file(filename):\n    with open(filename) as f:\n        for line in f:\n            print(line)\nread_file("file.txt")\n']
2022-04-12 23:22:32.350201 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom __future__ import print_function\nif __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    query_scores = student_marks[query_name]\n    print(\"{0:.2f}\".format(sum(query_scores) / (len(query_scores))))\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom __future__ import print_function\nif __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    query_scores = student_marks[query_name]\n    print(\"{0:.2f}\".format(sum(query_scores) / (len(query_scores))))\n"
    },
    {
      "index": 2,
      "text": "from __future__ import print_function\nif __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    query_scores = student_marks[query_name]\n    print(\"{0:.2f}\".format(sum(query_scores)/(len(query_scores))))\n"
    }
  ],
  "created": 1649805750,
  "object": "edit"
}
2022-04-12 23:22:32.350378 fix syntax errors 3 ['\n\nfrom __future__ import print_function\nif __name__ == \'__main__\':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    query_scores = student_marks[query_name]\n    print("{0:.2f}".format(sum(query_scores) / (len(query_scores))))\n', '\n\nfrom __future__ import print_function\nif __name__ == \'__main__\':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    query_scores = student_marks[query_name]\n    print("{0:.2f}".format(sum(query_scores) / (len(query_scores))))\n', 'from __future__ import print_function\nif __name__ == \'__main__\':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    query_scores = student_marks[query_name]\n    print("{0:.2f}".format(sum(query_scores)/(len(query_scores))))\n']
2022-04-12 23:22:32.350407 size on output set 8
2022-04-12 23:22:32.350424 num operations 2
2022-04-12 23:22:32.350429 size on input set 1
2022-04-12 23:22:34.243538 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "from collections import namedtuple\n\nN = int(input())\ncols = input().split()\n\nStudent = namedtuple('Student', cols)\nstudents = [Student(*input().split()) for _ in range(N)]\n\nprint(\"{:.2f}\".format(sum(float(s.MARKS) for s in students) / N))\n"
    },
    {
      "index": 1,
      "text": "\nfrom collections import namedtuple\n\nN = int(input())\ncols = input().split()\n\nStudent = namedtuple('Student', cols)\nstudents = [Student(*input().split()) for _ in range(N)]\n\nprint(\"{:.2f}\".format(sum(float(s.MARKS) for s in students) / N))\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom collections import namedtuple\n\nN = int(input())\ncols = input().split()\n\nStudent = namedtuple('Student', cols)\nstudents = [Student(*input().split()) for _ in range(N)]\n\n\n\nprint(\"{:.2f}\".format(sum(float(s.MARKS) for s in students) / N))\nprint(\"{:.2f}\".format(sum(float(s.MARKS) for s in students) / N))\n"
    }
  ],
  "created": 1649805752,
  "object": "edit"
}
2022-04-12 23:22:34.243784 fix spelling mistakes 3 ['from collections import namedtuple\n\nN = int(input())\ncols = input().split()\n\nStudent = namedtuple(\'Student\', cols)\nstudents = [Student(*input().split()) for _ in range(N)]\n\nprint("{:.2f}".format(sum(float(s.MARKS) for s in students) / N))\n', '\nfrom collections import namedtuple\n\nN = int(input())\ncols = input().split()\n\nStudent = namedtuple(\'Student\', cols)\nstudents = [Student(*input().split()) for _ in range(N)]\n\nprint("{:.2f}".format(sum(float(s.MARKS) for s in students) / N))\n', '\n\nfrom collections import namedtuple\n\nN = int(input())\ncols = input().split()\n\nStudent = namedtuple(\'Student\', cols)\nstudents = [Student(*input().split()) for _ in range(N)]\n\n\n\nprint("{:.2f}".format(sum(float(s.MARKS) for s in students) / N))\nprint("{:.2f}".format(sum(float(s.MARKS) for s in students) / N))\n']
2022-04-12 23:22:34.243809 size on output set 3
2022-04-12 23:22:34.243815 size on input set 3
2022-04-12 23:22:38.757335 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from collections import namedtuple\n\nN = int(input())\ncols = input().split()\n\nStudent = namedtuple('Student', cols)\nstudents = [Student(*input().split()) for _ in range(N)]\n\nprint(\"{:.2f}\".format(sum(float(s.MARKS) for s in students)/N))\n"
    },
    {
      "index": 1,
      "text": "from __future__ import print_function\nfrom collections import namedtuple, Counter\nfrom itertools import groupby\n\nN = int(input())\ncols = input().split()[1:]\n\nStudent = namedtuple('Student', cols)\nstudents = [Student(*input().split()[1:]) for _ in range(N)]\n\nprint(\"{:.2f}\".format(sum(float(s.MARKS) for s in students) / len(students)))\n"
    },
    {
      "index": 2,
      "text": "from collections import namedtuple\n\nN = int(input())\ncols = input().split()\n\nStudent = namedtuple('Student', cols)\nstudents = [Student(*input().split()) for _ in range(N)]\n\nprint(\"{:.2f}\".format(sum(float(s.MARKS) for s in students) / N)) \n"
    }
  ],
  "created": 1649805754,
  "object": "edit"
}
2022-04-12 23:22:38.757548 fix syntax errors 3 ['from collections import namedtuple\n\nN = int(input())\ncols = input().split()\n\nStudent = namedtuple(\'Student\', cols)\nstudents = [Student(*input().split()) for _ in range(N)]\n\nprint("{:.2f}".format(sum(float(s.MARKS) for s in students)/N))\n', 'from __future__ import print_function\nfrom collections import namedtuple, Counter\nfrom itertools import groupby\n\nN = int(input())\ncols = input().split()[1:]\n\nStudent = namedtuple(\'Student\', cols)\nstudents = [Student(*input().split()[1:]) for _ in range(N)]\n\nprint("{:.2f}".format(sum(float(s.MARKS) for s in students) / len(students)))\n', 'from collections import namedtuple\n\nN = int(input())\ncols = input().split()\n\nStudent = namedtuple(\'Student\', cols)\nstudents = [Student(*input().split()) for _ in range(N)]\n\nprint("{:.2f}".format(sum(float(s.MARKS) for s in students) / N)) \n']
2022-04-12 23:22:41.264017 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from collections import namedtuple\n\nN = int(input())\ncols = input().split()\n\nStudent = namedtuple('Student', cols)\nstudents = [Student(*input().split()) for _ in range(N)]\n\nprint(\"{:.2f}\".format(sum(float(s.MARKS) for s in students) / N))\n"
    },
    {
      "index": 1,
      "text": "from collections import namedtuple\n\nN = int(input())\ncols = input().split()\n\nStudent = namedtuple('Student', cols)\nstudents = [Student(*input().split()) for _ in range(N)]\n\nprint(\"{:.2f}\".format(sum(float(s.MARKS) for s in students) / N)) \n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\nfrom collections import namedtuple\n\nN = int(input())\ncols = input().split()\n\nStudent = namedtuple('Student', cols)\nstudents = [Student(*input().split()) for _ in range(N)]\n\nprint(\"{:.2f}\".format(sum(float(s.MARKS) for s in students) / N))\n"
    }
  ],
  "created": 1649805758,
  "object": "edit"
}
2022-04-12 23:22:41.264200 fix syntax errors 3 ['from collections import namedtuple\n\nN = int(input())\ncols = input().split()\n\nStudent = namedtuple(\'Student\', cols)\nstudents = [Student(*input().split()) for _ in range(N)]\n\nprint("{:.2f}".format(sum(float(s.MARKS) for s in students) / N))\n', 'from collections import namedtuple\n\nN = int(input())\ncols = input().split()\n\nStudent = namedtuple(\'Student\', cols)\nstudents = [Student(*input().split()) for _ in range(N)]\n\nprint("{:.2f}".format(sum(float(s.MARKS) for s in students) / N)) \n', '#!/usr/bin/env python3\nfrom collections import namedtuple\n\nN = int(input())\ncols = input().split()\n\nStudent = namedtuple(\'Student\', cols)\nstudents = [Student(*input().split()) for _ in range(N)]\n\nprint("{:.2f}".format(sum(float(s.MARKS) for s in students) / N))\n']
2022-04-12 23:22:43.542204 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom collections import namedtuple\n\nN = int(input())\ncols = input().split()\n\nStudent = namedtuple('Student', cols)\nstudents = [Student(*input().split()) for _ in range(N)]\n\n\n\nprint(\"{:.2f}\".format(sum(float(s.MARKS) for s in students) / N))\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom collections import namedtuple\n\nN = int(input())\ncols = input().split()\n\nStudent = namedtuple('Student', cols)\nstudents = [Student(*input().split()) for _ in range(N)]\n\n\n\nprint(\"{:.2f}\".format(sum(float(s.MARKS) for s in students) / N))\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom collections import namedtuple\n\nN = int(input())\ncols = input().split()\n\nStudent = namedtuple('Student', cols)\nstudents = [Student(*input().split()) for _ in range(N)]\n\n\n\nprint(\"{:.2f}\".format(sum(float(s.MARKS) for s in students) / N))\n"
    }
  ],
  "created": 1649805761,
  "object": "edit"
}
2022-04-12 23:22:43.542391 fix syntax errors 3 ['\n\nfrom collections import namedtuple\n\nN = int(input())\ncols = input().split()\n\nStudent = namedtuple(\'Student\', cols)\nstudents = [Student(*input().split()) for _ in range(N)]\n\n\n\nprint("{:.2f}".format(sum(float(s.MARKS) for s in students) / N))\n', '\n\nfrom collections import namedtuple\n\nN = int(input())\ncols = input().split()\n\nStudent = namedtuple(\'Student\', cols)\nstudents = [Student(*input().split()) for _ in range(N)]\n\n\n\nprint("{:.2f}".format(sum(float(s.MARKS) for s in students) / N))\n', '\n\nfrom collections import namedtuple\n\nN = int(input())\ncols = input().split()\n\nStudent = namedtuple(\'Student\', cols)\nstudents = [Student(*input().split()) for _ in range(N)]\n\n\n\nprint("{:.2f}".format(sum(float(s.MARKS) for s in students) / N))\n']
2022-04-12 23:22:43.542416 size on output set 6
