2022-04-12 18:39:11.599885 num operations 2
2022-04-12 18:39:11.599894 size on input set 1
2022-04-12 18:39:15.828653 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nA, B = map(int, input().split())\n\nif A % 3 == 0 or B % 3 == 0 or (A + B) % 3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")\n"
    },
    {
      "index": 1,
      "text": "\ns = input()\nt = input()\n\nif s == t:\n    print(\"Yes\")\n    exit()\n\nfor i in range(len(s)):\n    s = s[-1] + s[:-1]\n    if s == t:\n        print(\"Yes\")\n        exit()\n\nprint(\"No\")\n"
    },
    {
      "index": 2,
      "text": "\n#\n\n\ns = input()\nt = input()\n\nif s == t:\n    print(\"Yes\")\n    exit()\n\nfor i in range(len(s)):\n    s = s[-1] + s[:-1]\n    if s == t:\n        print(\"Yes\")\n        exit()\n\nprint(\"No\")\n"
    }
  ],
  "created": 1649788751,
  "object": "edit"
}
2022-04-12 18:39:15.828864 fix spelling mistakes 3 ['\n\nA, B = map(int, input().split())\n\nif A % 3 == 0 or B % 3 == 0 or (A + B) % 3 == 0:\n    print("Possible")\nelse:\n    print("Impossible")\n', '\ns = input()\nt = input()\n\nif s == t:\n    print("Yes")\n    exit()\n\nfor i in range(len(s)):\n    s = s[-1] + s[:-1]\n    if s == t:\n        print("Yes")\n        exit()\n\nprint("No")\n', '\n#\n\n\ns = input()\nt = input()\n\nif s == t:\n    print("Yes")\n    exit()\n\nfor i in range(len(s)):\n    s = s[-1] + s[:-1]\n    if s == t:\n        print("Yes")\n        exit()\n\nprint("No")\n']
2022-04-12 18:39:15.828887 size on output set 3
2022-04-12 18:39:15.828893 size on input set 3
2022-04-12 18:39:17.383627 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nA, B = map(int, input().split())\n\nif A % 3 == 0 or B % 3 == 0 or (A + B) % 3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")\n"
    },
    {
      "index": 1,
      "text": "\nA, B = map(int, input().split())\n\nif A % 3 == 0 or B % 3 == 0 or (A + B) % 3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")\n"
    },
    {
      "index": 2,
      "text": "\nA, B = map(int, input().split())\n\nif A % 3 == 0 or B % 3 == 0 or (A + B) % 3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")\n"
    }
  ],
  "created": 1649788755,
  "object": "edit"
}
2022-04-12 18:39:17.383816 fix syntax errors 3 ['\nA, B = map(int, input().split())\n\nif A % 3 == 0 or B % 3 == 0 or (A + B) % 3 == 0:\n    print("Possible")\nelse:\n    print("Impossible")\n', '\nA, B = map(int, input().split())\n\nif A % 3 == 0 or B % 3 == 0 or (A + B) % 3 == 0:\n    print("Possible")\nelse:\n    print("Impossible")\n', '\nA, B = map(int, input().split())\n\nif A % 3 == 0 or B % 3 == 0 or (A + B) % 3 == 0:\n    print("Possible")\nelse:\n    print("Impossible")\n']
2022-04-12 18:39:28.253547 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from collections import defaultdict\nfrom heapq import *\n\ndef dijkstra_raw(edges, from_node, to_node):\n    g = defaultdict(list)\n    for l,r,c in edges:\n        g[l].append((c,r))\n\n    q, seen = [(0,from_node,())], set()\n    while q:\n        (cost,v1,path) = heappop(q)\n        if v1 not in seen:\n            seen.add(v1)\n            path = (v1, path)\n            if v1 == to_node:\n                return (cost, path)\n\n            for c, v2 in g.get(v1, ()):\n                if v2 not in seen:\n                    heappush(q, (cost+c, v2, path))\n\n    return float(\"inf\")\n\nif __name__ == \"__main__\":\n    edges = [\n        (\"A\", \"B\", 7),\n        (\"A\", \"D\", 5),\n        (\"B\", \"C\", 8),\n        (\"B\", \"D\", 9),\n        (\"B\", \"E\", 7),\n        (\"C\", \"E\", 5),\n        (\"D\", \"E\", 15),\n        (\"D\", \"F\", 6),\n        (\"E\", \"F\", 8),\n        (\"E\", \"G\", 9),\n        (\"F\", \"G\", 11)\n    ]\n\n    print \"=== Dijkstra ===\"\n    print edges\n    print \"A -> E:\"\n    print dijkstra_raw(edges, \"A\", \"E\")\n    print \"F -> G:\"\n    print dijkstra_raw(edges, \"F\", \"G\")\n"
    },
    {
      "index": 1,
      "text": "s = input()\nt = input()\n\nif s == t:\n    print(\"Yes\")\n    exit()\n\nfor i in range(len(s)):\n    s = s[-1] + s[:-1]\n    if s == t:\n        print(\"Yes\")\n        exit()\n\nprint(\"No\")\n"
    },
    {
      "index": 2,
      "text": "\ns = input()\nt = input()\n\nfor i in range(len(s)-1):\n    s = s[1:] + s[0]\n    if s == t:\n        print(\"Yes\")\n        exit()\n\nprint(\"No\")\n"
    }
  ],
  "created": 1649788757,
  "object": "edit"
}
2022-04-12 18:39:28.253722 fix syntax errors 3 ['from collections import defaultdict\nfrom heapq import *\n\ndef dijkstra_raw(edges, from_node, to_node):\n    g = defaultdict(list)\n    for l,r,c in edges:\n        g[l].append((c,r))\n\n    q, seen = [(0,from_node,())], set()\n    while q:\n        (cost,v1,path) = heappop(q)\n        if v1 not in seen:\n            seen.add(v1)\n            path = (v1, path)\n            if v1 == to_node:\n                return (cost, path)\n\n            for c, v2 in g.get(v1, ()):\n                if v2 not in seen:\n                    heappush(q, (cost+c, v2, path))\n\n    return float("inf")\n\nif __name__ == "__main__":\n    edges = [\n        ("A", "B", 7),\n        ("A", "D", 5),\n        ("B", "C", 8),\n        ("B", "D", 9),\n        ("B", "E", 7),\n        ("C", "E", 5),\n        ("D", "E", 15),\n        ("D", "F", 6),\n        ("E", "F", 8),\n        ("E", "G", 9),\n        ("F", "G", 11)\n    ]\n\n    print "=== Dijkstra ==="\n    print edges\n    print "A -> E:"\n    print dijkstra_raw(edges, "A", "E")\n    print "F -> G:"\n    print dijkstra_raw(edges, "F", "G")\n', 's = input()\nt = input()\n\nif s == t:\n    print("Yes")\n    exit()\n\nfor i in range(len(s)):\n    s = s[-1] + s[:-1]\n    if s == t:\n        print("Yes")\n        exit()\n\nprint("No")\n', '\ns = input()\nt = input()\n\nfor i in range(len(s)-1):\n    s = s[1:] + s[0]\n    if s == t:\n        print("Yes")\n        exit()\n\nprint("No")\n']
2022-04-12 18:39:29.807211 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ns = input()\nt = input()\n\nif s == t:\n    print(\"Yes\")\n    exit()\n\nfor i in range(len(s)):\n    s = s[-1] + s[:-1]\n    if s == t:\n        print(\"Yes\")\n        exit()\n\nprint(\"No\")\n"
    },
    {
      "index": 1,
      "text": "\ns = input()\nt = input()\n\nif s == t:\n    print(\"Yes\")\n    exit()\n\nfor i in range(len(s)):\n    s = s[-1] + s[:-1]\n    if s == t:\n        print(\"Yes\")\n        exit()\n\nprint(\"No\")\n"
    },
    {
      "index": 2,
      "text": "\ns = input()\nt = input()\n\nif s == t:\n    print(\"Yes\")\n    exit()\n\nfor i in range(len(s)):\n    s = s[-1] + s[:-1]\n    if s == t:\n        print(\"Yes\")\n        exit()\n\nprint(\"No\")\n"
    }
  ],
  "created": 1649788768,
  "object": "edit"
}
2022-04-12 18:39:29.807370 fix syntax errors 3 ['\ns = input()\nt = input()\n\nif s == t:\n    print("Yes")\n    exit()\n\nfor i in range(len(s)):\n    s = s[-1] + s[:-1]\n    if s == t:\n        print("Yes")\n        exit()\n\nprint("No")\n', '\ns = input()\nt = input()\n\nif s == t:\n    print("Yes")\n    exit()\n\nfor i in range(len(s)):\n    s = s[-1] + s[:-1]\n    if s == t:\n        print("Yes")\n        exit()\n\nprint("No")\n', '\ns = input()\nt = input()\n\nif s == t:\n    print("Yes")\n    exit()\n\nfor i in range(len(s)):\n    s = s[-1] + s[:-1]\n    if s == t:\n        print("Yes")\n        exit()\n\nprint("No")\n']
2022-04-12 18:39:29.807409 size on output set 5
2022-04-12 18:39:29.807429 num operations 2
2022-04-12 18:39:29.807435 size on input set 1
2022-04-12 18:39:31.214807 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ns = input()\nt = input()\n\nif s == t:\n    print(\"Yes\")\nelse:\n    if len(s) == len(t):\n        for i in range(len(s)):\n            if s == t:\n                print(\"Yes\")\n                break\n            else:\n                s = s[-1] + s[:-1]\n        else:\n            print(\"No\")\n    else:\n        print(\"No\")\n"
    },
    {
      "index": 1,
      "text": "\ns = input()\nt = input()\n\nif s == t:\n    print(\"Yes\")\nelse:\n    if len(s) == len(t):\n        for i in range(len(s)):\n            if s == t:\n                print(\"Yes\")\n                break\n            else:\n                s = s[-1] + s[:-1]\n        else:\n            print(\"No\")\n    else:\n        print(\"No\")\n"
    },
    {
      "index": 2,
      "text": "\ns = input()\nt = input()\n\nif s == t:\n    print(\"Yes\")\nelse:\n    if len(s) == len(t):\n        for i in range(len(s)):\n            if s == t:\n                print(\"Yes\")\n                break\n            else:\n                s = s[-1] + s[:-1]\n        else:\n            print(\"No\")\n    else:\n        print(\"No\")\n"
    }
  ],
  "created": 1649788769,
  "object": "edit"
}
2022-04-12 18:39:31.215111 fix spelling mistakes 3 ['\ns = input()\nt = input()\n\nif s == t:\n    print("Yes")\nelse:\n    if len(s) == len(t):\n        for i in range(len(s)):\n            if s == t:\n                print("Yes")\n                break\n            else:\n                s = s[-1] + s[:-1]\n        else:\n            print("No")\n    else:\n        print("No")\n', '\ns = input()\nt = input()\n\nif s == t:\n    print("Yes")\nelse:\n    if len(s) == len(t):\n        for i in range(len(s)):\n            if s == t:\n                print("Yes")\n                break\n            else:\n                s = s[-1] + s[:-1]\n        else:\n            print("No")\n    else:\n        print("No")\n', '\ns = input()\nt = input()\n\nif s == t:\n    print("Yes")\nelse:\n    if len(s) == len(t):\n        for i in range(len(s)):\n            if s == t:\n                print("Yes")\n                break\n            else:\n                s = s[-1] + s[:-1]\n        else:\n            print("No")\n    else:\n        print("No")\n']
2022-04-12 18:39:31.215147 size on output set 1
2022-04-12 18:39:31.215155 size on input set 1
2022-04-12 18:39:34.619730 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "s = input()\nt = input()\n\nif s == t:\n    print(\"Yes\")\nelse:\n    if len(s) == len(t):\n        for i in range(len(s)):\n            if s == t:\n                print(\"Yes\")\n                break\n            else:\n                s = s[-1] + s[:-1]\n        else:\n            print(\"No\")\n    else:\n        print(\"No\")\n"
    },
    {
      "index": 1,
      "text": "print(\"Hello World\")\n"
    },
    {
      "index": 2,
      "text": "\ns = input()\nt = input()\n\nif s == t:\n    print(\"Yes\")\nelse:\n    if len(s) == len(t):\n        for i in range(len(s)):\n            if s == t:\n                print(\"Yes\")\n                break\n            else:\n                s = s[-1] + s[:-1]\n        print(\"No\")\n    else:\n        print(\"No\")\n"
    }
  ],
  "created": 1649788771,
  "object": "edit"
}
2022-04-12 18:39:34.619960 fix syntax errors 3 ['s = input()\nt = input()\n\nif s == t:\n    print("Yes")\nelse:\n    if len(s) == len(t):\n        for i in range(len(s)):\n            if s == t:\n                print("Yes")\n                break\n            else:\n                s = s[-1] + s[:-1]\n        else:\n            print("No")\n    else:\n        print("No")\n', 'print("Hello World")\n', '\ns = input()\nt = input()\n\nif s == t:\n    print("Yes")\nelse:\n    if len(s) == len(t):\n        for i in range(len(s)):\n            if s == t:\n                print("Yes")\n                break\n            else:\n                s = s[-1] + s[:-1]\n        print("No")\n    else:\n        print("No")\n']
2022-04-12 18:39:34.619983 size on output set 3
