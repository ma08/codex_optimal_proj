["N, K = map(int, input().split())\nA = [set(map(int, input().split())) for _ in range(K)]\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n", "N, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n", "\nN, K = map(int, input().split())\n\nA = [set(map(int, input().split())) for _ in range(K)]\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n", "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivors = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivors -= set(map(int, sys.stdin.readline().split()))\n    print(len(survivors))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivors = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivors -= set(map(int, sys.stdin.readline().split()))\n    print(len(survivors))\n    \nif __name__ == '__main__':\n    main()\n", "# coding: utf-8\n\nN, K = map(int, raw_input().split())\n\nA = []\nfor i in range(K):\n    d = int(raw_input())\n    A.append(list(map(int, raw_input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n", "\n\nN, K = map(int, input().split(\" \"))\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split(\" \"))))\n\nA_flat = set()\nfor i in range(K):\n    A_flat.update(A[i])\n\nans = N - len(A_flat)\nprint(ans)\n", "\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = set()\nfor i in range(K):\n    A_flat.update(A[i])\n\nans = N - len(A_flat)\nprint(ans)\n", "\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    _ = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor a in A:\n    A_flat.extend(a)\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n"]