["\nimport sys\n\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_price = sys.maxsize\n    for _ in range(n):\n        price, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_price = min(min_price, price)\n    if min_price > t:\n        print(\"TLE\")\n    else:\n        print(min_price)\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n", "N, T = map(int, input().split())\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "import sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_price = t + 1\n    for _ in range(n):\n        price, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_price = min(min_price, price)\n    if min_price > t:\n        print(\"TLE\")\n    else:\n        print(min_price)\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\nimport math\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    if n == 1:\n        print(0)\n        return\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost == t + 1:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n", "\nN, T = map(int, input().split())\n\ncosts = {}\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs[t] = c\n\ncosts = [costs[i] for i in costs.keys() if i <= T]\nif len(costs) == 0: # \u6700\u5c0f\u304c\u306a\u3044\u5834\u5408\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse: \n    print(min(costs))\n", "# coding: utf-8\nn, t = map(int, input().split())\nans = 10**9\nfor i in range(n):\n    c, tt = map(int, input().split())\n    if tt <= t:\n        ans = min(ans, c)\nprint(ans if ans < 10**9 else 'TLE')\n", "\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_price = t + 1\n    for _ in range(n):\n        price, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_price = min(min_price, price)\n    if min_price > t:\n        print(\"TLE\")\n    else:\n        print(min_price)\n\nif __name__ == \"__main__\":\n    main()\n"]