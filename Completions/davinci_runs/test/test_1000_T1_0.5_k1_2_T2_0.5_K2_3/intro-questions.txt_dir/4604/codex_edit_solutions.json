["\nN = int(input())\nA = list(map(int, input().split()))\n\nif A[0] != 0:\n    print(0)\n    exit()\n\nif len(set(A)) != N - 1:\n    print(0)\n    exit()\n\ns = []\nfor i in range(N):\n    if len(s) == 0:\n        s.append(i+1)\n        continue\n    if A[i] >= len(s):\n        s.append(i+1)\n    else:\n        s.insert(A[i], i+1)\n\nprint(s)\n", "# -*- coding: utf-8 -*-\n\nN = int(input())\nA = list(map(int, input().split()))\n\nif A[0] != 0:\n    print(0)\n    exit()\n\nif len(set(A)) != N:\n    print(0)\n    exit()\n\nS = []\nfor i in range(N):\n    if len(S) == 0:\n        S.append(i+1)\n        continue\n    if A[i] >= len(S):\n        S.append(i+1)\n    else:\n        S.insert(A[i], i+1)\n\nprint(\" \".join(map(str, S)))\n", "import sys\n\n\n\n# Read from standard input\nN = int(sys.stdin.readline())\nA = list(map(int, sys.stdin.readline().split()))\n\n# Check if each person's report is consistent with the others\nfor i in range(N):\n    if abs(i - A[i]) > 1:\n        print(0)\n        sys.exit()\n\n# Initialize a list of the number of people to the left of each person\n# and the number of people to the right of each person\nleft = [0] * N\nright = [0] * N\n\n# Count the number of people to the left of each person\nfor i in range(N):\n    for j in range(N):\n        if j < i:\n            left[i] += A[j]\n        elif j > i:\n            left[i] += (N - 1 - A[j])\n\n# Count the number of people to the right of each person\nfor i in range(N):\n    for j in range(N):\n        if j < i:\n            right[i] += (N - 1 - A[j])\n        elif j > i:\n            right[i] += A[j]\n\n# Initialize a list to keep track of the number of ways to order the people\n# and the number of people that have been ordered\nnum_ways = [0] * N\nnum_ordered = 0\n\n# Order the people\nwhile num_ordered < N:\n    # Find the first person that has not been ordered\n    i = left.index(0)\n\n    # Add this person to the ordered list\n    num_ways[num_ordered] = i + 1\n    num_ordered += 1\n\n    # Subtract the number of people to the left of this person from everyone else\n    for j in range(N):\n        left[j] -= A[i]\n        right[j] -= (N - 1 - A[i])\n\n    # Remove this person from the list\n    left[i] = -1\n    right[i] = -1\n\n# Print the number of ways to order the people\nprint(num_ways[0])\n", "\n#\n# N = int(input())\n# A = list(map(int, input().split()))\n#\n# if A[0] != 0:\n#     print(0)\n#     exit()\n#\n# if len(set(A)) != N:\n#     print(0)\n#     exit()\n#\n# s = []\n# for i in range(N):\n#     if len(s) == 0:\n#         s.append(i+1)\n#         continue\n#     if A[i] > len(s):\n#         s.append(i+1)\n#     else:\n#         s.insert(A[i], i+1)\n#\n# print(len(s))\n", "\n\nN = int(input())\nA = list(map(int, input().split()))\n\nif A[0] != 0:\n    print(0)\n    exit()\n\nif len(set(A)) != N:\n    print(0)\n    exit()\n\nS = []\nfor i in range(N):\n    if len(S) == 0:\n        S.append(i+1)\n        continue\n    if A[i] >= len(S):\n        S.append(i+1)\n    else:\n        S.insert(A[i], i+1)\n\nfor i in range(N):\n    print(S[i])\n", "\n\nimport sys\n\n# Read from standard input\nN = int(sys.stdin.readline())\nA = list(map(int, sys.stdin.readline().split()))\n\n# Check if each person's report is consistent with the others\nfor i in range(N):\n    if abs(i - A[i]) > 1:\n        print(0)\n        sys.exit()\n\n# Initialize a list of the number of people to the left of each person\n# and the number of people to the right of each person\nleft = [0] * N\nright = [0] * N\n\n# Count the number of people to the left of each person\nfor i in range(N):\n    for j in range(N):\n        if j < i:\n            left[i] += A[j]\n        elif j > i:\n            left[i] += (N - 1 - A[j])\n\n# Count the number of people to the right of each person\nfor i in range(N):\n    for j in range(N):\n        if j < i:\n            right[i] += (N - 1 - A[j])\n        elif j > i:\n            right[i] += A[j]\n\n# Print the number of ways to order the people\nprint(1)\n", "\n\nN = int(input())\nA = list(map(int, input().split()))\n\nif A[0] != 0:\n    print(0)\n    exit()\n\nif len(set(A)) != N:\n    print(0)\n    exit()\n\ns = []\nfor i in range(N):\n    if len(s) == 0:\n        s.append(i+1)\n        continue\n    if A[i] > len(s):\n        s.append(i+1)\n    else:\n        s.insert(A[i]-1, i+1)\n\nprint(len(s))\n", "\n\nimport sys\n\n# Read the number of people and their reports\nn = int(input())\na = list(map(int, input().split()))\n\n# Check if each person's report is consistent with the others\nfor i in range(n):\n    if abs(i - a[i]) > 1:\n        print(0, end='')\n        sys.exit(0)\n\n# Initialize a list of the number of people to the left of each person\n# and the number of people to the right of each person\nleft = [0] * n\nright = [0] * n\n\n# Count the number of people to the left of each person\nfor i in range(n):\n    for j in range(n):\n        if j < i:\n            left[i] += a[j]\n        elif j > i:\n            left[i] += (n - 1 - a[j])\n\n# Count the number of people to the right of each person\nfor i in range(n):\n    for j in range(n):\n        if j < i:\n            right[i] += (n - 1 - a[j])\n        elif j > i:\n            right[i] += A[j]\n\n# Initialize a list to keep track of the order of the people\n# and the number of people we have ordered\norder = [0] * n\nnum_ordered = 0\n\n# Order the people\nwhile num_ordered < n:\n    # Find the first person that has not been ordered\n    i = left.index(0)\n\n    # Add this person to the ordered list\n    order[num_ordered] = i + 1\n    num_ordered += 1\n\n    # Subtract the number of people to the left of this person from everyone else\n    for j in range(n):\n        left[j] -= a[i]\n        right[j] -= (n - 1 - a[i])\n\n    # Remove this person from the list\n    left[i] = -1\n    right[i] = -1\n\n# Print the order of the people\nprint(order[0], end='')\n", "\nimport sys\n\n# Read from standard input\nN = int(sys.stdin.readline())\nA = list(map(int, sys.stdin.readline().split()))\n\n# Check if each person's report is consistent with the others\nfor i in range(N):\n    if abs(i - A[i]) > 1:\n        print(0)\n        sys.exit()\n\n# Initialize a list of the number of people to the left of each person\n# and the number of people to the right of each person\nleft = [0] * N\nright = [0] * N\n\n# Count the number of people to the left of each person\nfor i in range(N):\n    for j in range(N):\n        if j < i:\n            left[i] += A[j]\n        elif j > i:\n            left[i] += (N - 1 - A[j])\n\n# Count the number of people to the right of each person\nfor i in range(N):\n    for j in range(N):\n        if j < i:\n            right[i] += (N - 1 - A[j])\n        elif j > i:\n            right[i] += A[j]\n\n# Initialize a list to keep track of the number of ways to order the people\n# and the number of people that have been ordered\nnum_ways = [0] * N\nnum_ordered = 0\n\n# Order the people\nwhile num_ordered < N:\n    # Find the first person that has not been ordered\n    i = left.index(0)\n\n    # Add this person to the ordered list\n    num_ways[num_ordered] = i + 1\n    num_ordered += 1\n\n    # Subtract the number of people to the left of this person from everyone else\n    for j in range(N):\n        left[j] -= A[i]\n        right[j] -= (N - 1 - A[i])\n\n    # Remove this person from the list\n    left[i] = -1\n    right[i] = -1\n\n# Print the number of ways to order the people\nprint(num_ways[0])\n", "\nN = int(input())\nA = list(map(int, input().split()))\n\nif A[0] != 0:\n    print(0)\n    exit()\n\nif len(set(A)) != N:\n    print(0)\n    exit()\n\ns = []\nfor i in range(N):\n    if len(s) == 0:\n        s.append(i+1)\n        continue\n    if A[i] >= len(s):\n        s.append(i+1)\n    else:\n        s.insert(A[i], i+1)\n\nprint(''.join(map(str, s)))\n", "\n\nimport sys\n\n# Read from standard input\nN = int(sys.stdin.readline())\nA = list(map(int, sys.stdin.readline().split()))\n\n# Check if each person's report is consistent with the others\nfor i in range(N):\n    if abs(i - A[i]) > 1:\n        print(0)\n        sys.exit()\n\n# Initialize a list of the number of people to the left of each person\n# and the number of people to the right of each person\nleft = [0] * N\nright = [0] * N\n\n# Count the number of people to the left of each person\nfor i in range(N):\n    for j in range(N):\n        if j < i:\n            left[i] += A[j]\n        elif j > i:\n            left[i] += (N - 1 - A[j])\n\n# Count the number of people to the right of each person\nfor i in range(N):\n    for j in range(N):\n        if j < i:\n            right[i] += (N - 1 - A[j])\n        elif j > i:\n            right[i] += A[j]\n\n# Initialize a list to keep track of the order of the people,\n# and a list to keep track of the number of people we have ordered\norder = []\nnum_ordered = []\n\n# Order the people\nwhile num_ordered < N:\n    # Find the first person that has not been ordered\n    i = left.index(0)\n\n    # Add this person to the ordered list\n    order.append(i + 1)\n    num_ordered.append(1)\n\n    # Subtract the number of people to the left of this person from everyone else\n    for j in range(N):\n        left[j] -= A[i]\n        right[j] -= (N - 1 - A[i])\n\n    # Remove this person from the lists\n    left[i] = -1\n    right[i] = -1\n\n# Print the order of the people\nfor i in range(N):\n    print(order[i])\n", "\n\nN, M = map(int, input().split())\n\na = [0] * N\n\nfor _ in range(M):\n    s, t = map(int, input().split())\n    a[s-1] += 1\n    a[t-1] += 1\n\nprint(\"\\n\".join(map(str, a)))\n", "\nN = int(input())\nA = list(map(int, input().split()))\n\nif A[0] != 0:\n    print(0)\n    exit()\n\nif len(set(A)) != N:\n    print(0)\n    exit()\n\nS = []\nfor i in range(N):\n    if len(S) == 0:\n        S.append(i+1)\n        continue\n    if A[i] >= len(S):\n        S.append(i+1)\n    else:\n        S.insert(A[i], i+1)\n\nprint(S)\n", "\n\nimport sys\n\n# Read from standard input\nN = int(sys.stdin.readline())\nA = list(map(int, sys.stdin.readline().split()))\n\n# Check if each person's report is consistent with the others\nfor i in range(N):\n    if abs(i - A[i]) > 1: \n        print(0)\n        sys.exit()\n\n# Initialize a list of the number of people to the left of each person\n# and the number of people to the right of each person\nleft = [0] * N\nright = [0] * N\n\n# Count the number of people to the left of each person\nfor i in range(N):\n    for j in range(N):\n        if j < i:\n            left[i] += A[j]\n        elif j > i:\n            left[i] += (N - 1 - A[j])\n\n# Count the number of people to the right of each person\nfor i in range(N):\n    for j in range(N):\n        if j < i:\n            right[i] += (N - 1 - A[j])\n        elif j > i:\n            right[i] += A[j]\n\n# Print the number of ways to order the people \nprint(1)\n", "\nimport sys\nprint(\"hello\")\n", "\nN = int(input())\nA = list(map(int, input().split()))\n\nif len(set(A)) != N:\n    print(\"No\")\n    exit()\n\ns = []\nfor i in range(N):\n    if len(s) == 0:\n        s.append(i+1)\n        continue\n    if A[i] >= len(s):\n        s.append(i+1)\n    else:\n        s.insert(A[i], i+1)\n\nprint(\"Yes\")\nprint(\" \".join(map(str, s)))\n", "\n\nimport sys\n\n# Read from standard input\nN = int(sys.stdin.readline())\nA = list(map(int, sys.stdin.readline().split()))\n\n# Check if each person's report is consistent with the others\nfor i in range(N):\n    if abs(i - A[i]) > 1:\n        print(0)\n        sys.exit()\n\n# Initialize a list of the number of people to the left of each person\n# and the number of people to the right of each person\nleft = [0] * N\nright = [0] * N\n\n# Count the number of people to the left of each person\nfor i in range(N):\n    for j in range(N):\n        if j < i and A[j] < A[i]:\n            left[i] += 1\n        elif j > i and A[j] > A[i]:\n            left[i] += 1\n\n# Count the number of people to the right of each person\nfor i in range(N):\n    for j in range(N):\n        if j < i and A[j] > A[i]:\n            right[i] += 1\n        elif j > i and A[j] < A[i]:\n            right[i] += 1\n\n# Initialize a list to keep track of the order of the people\n# and the number of people we have ordered\norder = [0] * N\nnum_ordered = 0\n\n# Order the people\nwhile num_ordered < N:\n    # Find the first person that has not been ordered\n    i = left.index(0)\n\n    # Add this person to the ordered list\n    order[num_ordered] = i + 1\n    num_ordered += 1\n\n    # Subtract the number of people to the left of this person from everyone else\n    for j in range(N):\n        if j < i and A[j] < A[i]:\n            left[j] -= 1\n        elif j > i and A[j] > A[i]:\n            left[j] -= 1\n        if j < i and A[j] > A[i]:\n            right[j] -= 1\n        elif j > i and A[j] < A[i]:\n            right[j] -= 1\n\n    # Remove this person from the list\n    left[i] = -1\n    right[i] = -1\n\n# Print the order of the people\nprint(order[0])\n"]