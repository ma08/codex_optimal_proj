2022-04-13 04:44:29.620369 num operations 2
2022-04-13 04:44:29.620378 size on input set 1
2022-04-13 04:44:31.598169 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom datetime import date\n\nd, m = map(int, input().split())\nd = date(2009, m, d)\nprint(d.strftime('%A')) \n"
    },
    {
      "index": 1,
      "text": "\nfrom datetime import date\n\nd, m = map(int, input().split())\nd = date(2009, m, d)\nprint(d.strftime('%A'))\n"
    },
    {
      "index": 2,
      "text": "\n#inputs\nfrom datetime import date\n\nd, m = map(int, input().split())\nd = date(2009, m, d)\nprint(d.strftime('%A'))\n"
    }
  ],
  "created": 1649825069,
  "object": "edit"
}
2022-04-13 04:44:31.598430 fix spelling mistakes 3 ["\n\nfrom datetime import date\n\nd, m = map(int, input().split())\nd = date(2009, m, d)\nprint(d.strftime('%A')) \n", "\nfrom datetime import date\n\nd, m = map(int, input().split())\nd = date(2009, m, d)\nprint(d.strftime('%A'))\n", "\n#inputs\nfrom datetime import date\n\nd, m = map(int, input().split())\nd = date(2009, m, d)\nprint(d.strftime('%A'))\n"]
2022-04-13 04:44:31.598456 size on output set 3
2022-04-13 04:44:31.598462 size on input set 3
2022-04-13 04:44:33.644043 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from datetime import date\n\nd, m = map(int, input().split())\nd = date(2009, m, d)\nprint d.strftime('%A')\n"
    },
    {
      "index": 1,
      "text": "\nfrom datetime import date\n\nd, m = map(int, input().split())\nd = date(2009, m, d).weekday()\nprint(d.strftime('%A'))\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\nfrom datetime import date\n\nd, m = map(int, input().split())\nd = date(2009, m, d)\nprint(d.strftime('%A'))\n"
    }
  ],
  "created": 1649825071,
  "object": "edit"
}
2022-04-13 04:44:33.644211 fix syntax errors 3 ["from datetime import date\n\nd, m = map(int, input().split())\nd = date(2009, m, d)\nprint d.strftime('%A')\n", "\nfrom datetime import date\n\nd, m = map(int, input().split())\nd = date(2009, m, d).weekday()\nprint(d.strftime('%A'))\n", "#!/usr/bin/env python3\nfrom datetime import date\n\nd, m = map(int, input().split())\nd = date(2009, m, d)\nprint(d.strftime('%A'))\n"]
2022-04-13 04:44:35.678434 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from datetime import date\n\nd, m = map(int, input().split())\nd = date(2009, m, d)\nprint(d.strftime('%A')) \n"
    },
    {
      "index": 1,
      "text": "\n\nfrom datetime import date\n\nd, m = map(int, input().split())\nd = date(2009, m, d)\nprint(d.strftime('%A'))\n"
    },
    {
      "index": 2,
      "text": "\nfrom datetime import date\n\nd, m = map(int, input().split())\nd = date(2009, m, d)\nprint(d.strftime('%A'))\n"
    }
  ],
  "created": 1649825073,
  "object": "edit"
}
2022-04-13 04:44:35.678607 fix syntax errors 3 ["from datetime import date\n\nd, m = map(int, input().split())\nd = date(2009, m, d)\nprint(d.strftime('%A')) \n", "\n\nfrom datetime import date\n\nd, m = map(int, input().split())\nd = date(2009, m, d)\nprint(d.strftime('%A'))\n", "\nfrom datetime import date\n\nd, m = map(int, input().split())\nd = date(2009, m, d)\nprint(d.strftime('%A'))\n"]
2022-04-13 04:44:39.209864 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# inputs\nfrom datetime import date\n\nd, m = map(int, input().split())\nd = date(2009, m, d)\nprint(d.strftime('%A'))\n"
    },
    {
      "index": 1,
      "text": "#!/bin/python3\n#inputs\nfrom datetime import date\n\nd, m = map(int, input().split()) #input is in this format: day, month\nd = date(2009, m, d) #year is not relevant for this problem\nprint(d.strftime('%A')) #%A is the format for the full weekday name\n"
    },
    {
      "index": 2,
      "text": "\n#inputs\nfrom datetime import date\n\nd, m = map(int, input().split())\nd = date(2009, m, d)\nprint(d.strftime('%A').upper())\n"
    }
  ],
  "created": 1649825075,
  "object": "edit"
}
2022-04-13 04:44:39.210042 fix syntax errors 3 ["# inputs\nfrom datetime import date\n\nd, m = map(int, input().split())\nd = date(2009, m, d)\nprint(d.strftime('%A'))\n", "#!/bin/python3\n#inputs\nfrom datetime import date\n\nd, m = map(int, input().split()) #input is in this format: day, month\nd = date(2009, m, d) #year is not relevant for this problem\nprint(d.strftime('%A')) #%A is the format for the full weekday name\n", "\n#inputs\nfrom datetime import date\n\nd, m = map(int, input().split())\nd = date(2009, m, d)\nprint(d.strftime('%A').upper())\n"]
2022-04-13 04:44:39.210064 size on output set 9
2022-04-13 04:44:39.210074 num operations 2
2022-04-13 04:44:39.210078 size on input set 1
2022-04-13 04:44:50.508131 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# First, determine the number of days between the start of 2009 and the input date.\n# Then, find the day of the week of the start of 2009.\n# Finally, add the number of days to the start of 2009 and output the day of the week.\n\n# Import date time library.\nimport datetime\n\n# Get input\nd, m = [int(x) for x in input().split()]\n\n# Calculate the number of days between the start of 2009 and the input date\n# Note that this is a negative number\ndays = datetime.date(2009, m, d) - datetime.date(2009, 1, 1)\n\n# Find the day of the week of the start of 2009\n# Note that this is the day of the week of the input date\ndays = days.days % 7\n\n# Add the number of days to the start of 2009\n# Note that this is the day of the week of the input date\ndays = datetime.date(2009, 1, 1) + datetime.timedelta(days=days)\n\n# Output the day of the week of the input date\nprint(days.strftime(\"%A\"))\n"
    },
    {
      "index": 1,
      "text": "\n\n# First, determine the number of days between the start of 2009 and the input date.\n# Then, find the day of the week of the start of 2009.\n# Finally, add the number of days to the start of 2009 and output the day of the week.\n\n# Import date time library.\nimport datetime\n\n# Get input\nd, m = [int(x) for x in input().split()]\n\n# Calculate the number of days between the start of 2009 and the input date\n# Note that this is a negative number\ndays = datetime.date(2009, m, d) - datetime.date(2009, 1, 1)\n\n# Find the day of the week of the start of 2009\n# Note that this is the day of the week of the input date\ndays = days.days % 7\n\n# Add the number of days to the start of 2009\n# Note that this is the day of the week of the input date\ndays = datetime.date(2009, 1, 1) + datetime.timedelta(days=days)\n\n# Output the day of the week of the input date\nprint(days.strftime(\"%A\"))\n"
    },
    {
      "index": 2,
      "text": "\n\n# First, determine the number of days between the start of 2009 and the input date\n# Then, find the day of the week of the start of 2009\n# Finally, add the number of days to the start of 2009 and output the day of the week\n\n# Import date time library\nimport datetime\n\n# Get input\nd, m = [int(x) for x in input().split()]\n\n# Calculate the number of days between the start of 2009 and the input date\n# Note that this is a negative number\ndays = datetime.date(2009, m, d) - datetime.date(2009, 1, 1)\n\n# Find the day of the week of the start of 2009\n# Note that this is the day of the week of the input date\ndays = days.days % 7\n\n# Add the number of days to the start of 2009 and output the day of the week of the input date\ndays = datetime.date(2009, 1, 1) + datetime.timedelta(days=days)\n\n# Output the day of the week of the input date\nprint(days.strftime(\"%A\"))\n"
    }
  ],
  "created": 1649825079,
  "object": "edit"
}
2022-04-13 04:44:50.508320 fix spelling mistakes 3 ['\n\n# First, determine the number of days between the start of 2009 and the input date.\n# Then, find the day of the week of the start of 2009.\n# Finally, add the number of days to the start of 2009 and output the day of the week.\n\n# Import date time library.\nimport datetime\n\n# Get input\nd, m = [int(x) for x in input().split()]\n\n# Calculate the number of days between the start of 2009 and the input date\n# Note that this is a negative number\ndays = datetime.date(2009, m, d) - datetime.date(2009, 1, 1)\n\n# Find the day of the week of the start of 2009\n# Note that this is the day of the week of the input date\ndays = days.days % 7\n\n# Add the number of days to the start of 2009\n# Note that this is the day of the week of the input date\ndays = datetime.date(2009, 1, 1) + datetime.timedelta(days=days)\n\n# Output the day of the week of the input date\nprint(days.strftime("%A"))\n', '\n\n# First, determine the number of days between the start of 2009 and the input date.\n# Then, find the day of the week of the start of 2009.\n# Finally, add the number of days to the start of 2009 and output the day of the week.\n\n# Import date time library.\nimport datetime\n\n# Get input\nd, m = [int(x) for x in input().split()]\n\n# Calculate the number of days between the start of 2009 and the input date\n# Note that this is a negative number\ndays = datetime.date(2009, m, d) - datetime.date(2009, 1, 1)\n\n# Find the day of the week of the start of 2009\n# Note that this is the day of the week of the input date\ndays = days.days % 7\n\n# Add the number of days to the start of 2009\n# Note that this is the day of the week of the input date\ndays = datetime.date(2009, 1, 1) + datetime.timedelta(days=days)\n\n# Output the day of the week of the input date\nprint(days.strftime("%A"))\n', '\n\n# First, determine the number of days between the start of 2009 and the input date\n# Then, find the day of the week of the start of 2009\n# Finally, add the number of days to the start of 2009 and output the day of the week\n\n# Import date time library\nimport datetime\n\n# Get input\nd, m = [int(x) for x in input().split()]\n\n# Calculate the number of days between the start of 2009 and the input date\n# Note that this is a negative number\ndays = datetime.date(2009, m, d) - datetime.date(2009, 1, 1)\n\n# Find the day of the week of the start of 2009\n# Note that this is the day of the week of the input date\ndays = days.days % 7\n\n# Add the number of days to the start of 2009 and output the day of the week of the input date\ndays = datetime.date(2009, 1, 1) + datetime.timedelta(days=days)\n\n# Output the day of the week of the input date\nprint(days.strftime("%A"))\n']
2022-04-13 04:44:50.508450 size on output set 2
2022-04-13 04:44:50.508458 size on input set 2
2022-04-13 04:44:54.183418 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# First, determine the number of days between the start of 2009 and the input date.\n# Then, find the day of the week of the start of 2009.\n# Finally, add the number of days to the start of 2009 and output the day of the week.\n\n# Import date time library.\nfrom datetime import date\n\n# Get input\nd, m = [int(x) for x in input().split()]\n\n# Calculate the number of days between the start of 2009 and the input date\n# Note that this is a negative number\ndays = date(2009, m, d) - date(2009, 1, 1)\n\n# Find the day of the week of the start of 2009\n# Note that this is the day of the week of the input date\ndays = days.days % 7\n\n# Add the number of days to the start of 2009\n# Note that this is the day of the week of the input date\ndays = date(2009, 1, 1) + date.timedelta(days=days)\n\n# Output the day of the week of the input date\nprint(days.strftime(\"%A\"))\n"
    },
    {
      "index": 1,
      "text": "\n# First, determine the number of days between the start of 2009 and the input date.\n# Then, find the day of the week of the start of 2009.\n# Finally, add the number of days to the start of 2009 and output the day of the week.\n\n# Import date time library.\nimport datetime\n\n# Get input\nd, m = [int(x) for x in input().split()]\n\n# Calculate the number of days between the start of 2009 and the input date\n# Note that this is a negative number\ndays = datetime.date(2009, m, d) - datetime.date(2009, 1, 1)\n\n# Find the day of the week of the start of 2009\n# Note that this is the day of the week of the input date\ndays = days.days % 7\n\n# Add the number of days to the start of 2009\n# Note that this is the day of the week of the input date\ndays = datetime.date(2009, 1, 1) + datetime.timedelta(days=days)\n\n# Output the day of the week of the input date\nprint(days.strftime(\"%A\"))\n"
    },
    {
      "index": 2,
      "text": "\n\n# First, determine the number of days between the start of 2009 and the input date\n# Then, find the day of the week of the start of 2009\n# Finally, add the number of days to the start of 2009 and output the day of the week\n\n# Import date time library.\nimport datetime\n\n# Get input\nd, m = [int(x) for x in input().split()]\n\n# Calculate the number of days between the start of 2009 and the input date\n# Note that this is a negative number\ndays = datetime.date(2009, m, d) - datetime.date(2009, 1, 1)\n\n# Find the day of the week of the start of 2009\n# Note that this is the day of the week of the input date\ndays = days.days % 7\n\n# Add the number of days to the start of 2009\n# Note that this is the day of the week of the input date\ndays = datetime.date(2009, 1, 1) + datetime.timedelta(days=days)\n\n# Output the day of the week of the input date\nprint(days.strftime(\"%A\"))\n"
    }
  ],
  "created": 1649825090,
  "object": "edit"
}
2022-04-13 04:44:54.183611 fix syntax errors 3 ['\n\n# First, determine the number of days between the start of 2009 and the input date.\n# Then, find the day of the week of the start of 2009.\n# Finally, add the number of days to the start of 2009 and output the day of the week.\n\n# Import date time library.\nfrom datetime import date\n\n# Get input\nd, m = [int(x) for x in input().split()]\n\n# Calculate the number of days between the start of 2009 and the input date\n# Note that this is a negative number\ndays = date(2009, m, d) - date(2009, 1, 1)\n\n# Find the day of the week of the start of 2009\n# Note that this is the day of the week of the input date\ndays = days.days % 7\n\n# Add the number of days to the start of 2009\n# Note that this is the day of the week of the input date\ndays = date(2009, 1, 1) + date.timedelta(days=days)\n\n# Output the day of the week of the input date\nprint(days.strftime("%A"))\n', '\n# First, determine the number of days between the start of 2009 and the input date.\n# Then, find the day of the week of the start of 2009.\n# Finally, add the number of days to the start of 2009 and output the day of the week.\n\n# Import date time library.\nimport datetime\n\n# Get input\nd, m = [int(x) for x in input().split()]\n\n# Calculate the number of days between the start of 2009 and the input date\n# Note that this is a negative number\ndays = datetime.date(2009, m, d) - datetime.date(2009, 1, 1)\n\n# Find the day of the week of the start of 2009\n# Note that this is the day of the week of the input date\ndays = days.days % 7\n\n# Add the number of days to the start of 2009\n# Note that this is the day of the week of the input date\ndays = datetime.date(2009, 1, 1) + datetime.timedelta(days=days)\n\n# Output the day of the week of the input date\nprint(days.strftime("%A"))\n', '\n\n# First, determine the number of days between the start of 2009 and the input date\n# Then, find the day of the week of the start of 2009\n# Finally, add the number of days to the start of 2009 and output the day of the week\n\n# Import date time library.\nimport datetime\n\n# Get input\nd, m = [int(x) for x in input().split()]\n\n# Calculate the number of days between the start of 2009 and the input date\n# Note that this is a negative number\ndays = datetime.date(2009, m, d) - datetime.date(2009, 1, 1)\n\n# Find the day of the week of the start of 2009\n# Note that this is the day of the week of the input date\ndays = days.days % 7\n\n# Add the number of days to the start of 2009\n# Note that this is the day of the week of the input date\ndays = datetime.date(2009, 1, 1) + datetime.timedelta(days=days)\n\n# Output the day of the week of the input date\nprint(days.strftime("%A"))\n']
2022-04-13 04:44:56.138313 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# First, determine the number of days between the start of 2009 and the input date\n# Then, find the day of the week of the start of 2009\n# Finally, add the number of days to the start of 2009 and output the day of the week\n\n# Import date time library\nimport datetime\n\n# Get input\nd, m = [int(x) for x in input().split()]\n\n# Calculate the number of days between the start of 2009 and the input date\n# Note that this is a negative number\ndays = datetime.date(2009, m, d) - datetime.date(2009, 1, 1)\n\n# Find the day of the week of the start of 2009\n# Note that this is the day of the week of the input date\ndays = days.days % 7\n\n# Add the number of days to the start of 2009 and output the day of the week of the input date\ndays = datetime.date(2009, 1, 1) + datetime.timedelta(days=days)\n\n# Output the day of the week of the input date\nprint(days.strftime(\"%A\"))\n"
    },
    {
      "index": 1,
      "text": "\n\n# First, determine the number of days between the start of 2009 and the input date\n# Then, find the day of the week of the start of 2009\n# Finally, add the number of days to the start of 2009 and output the day of the week\n\n# Import date time library\nimport datetime\n\n# Get input\nd, m = [int(x) for x in input().split()]\n\n# Calculate the number of days between the start of 2009 and the input date\n# Note that this is a negative number\ndays = datetime.date(2009, m, d) - datetime.date(2009, 1, 1)\n\n# Find the day of the week of the start of 2009\n# Note that this is the day of the week of the input date\ndays = days.days % 7\n\n# Add the number of days to the start of 2009\ndays = datetime.date(2009, 1, 1) + datetime.timedelta(days=days)\n\n# Output the day of the week of the input date\nprint(days.strftime(\"%A\"))\n"
    },
    {
      "index": 2,
      "text": "\n# First, determine the number of days between the start of 2009 and the input date\n# Then, find the day of the week of the start of 2009\n# Finally, add the number of days to the start of 2009 and output the day of the week\n\n# Import date time library\nimport datetime\n\n# Get input\nd, m = [int(x) for x in input().split()]\n\n# Calculate the number of days between the start of 2009 and the input date\n# Note that this is a negative number\ndays = datetime.date(2009, m, d) - datetime.date(2009, 1, 1)\n\n# Find the day of the week of the start of 2009\n# Note that this is the day of the week of the input date\ndays = days.days % 7\n\n# Add the number of days to the start of 2009 and output the day of the week of the input date\ndays = datetime.date(2009, 1, 1) + datetime.timedelta(days=days)\n\n# Output the day of the week of the input date\nprint(days.strftime(\"%A\"))\n"
    }
  ],
  "created": 1649825094,
  "object": "edit"
}
2022-04-13 04:44:56.138584 fix syntax errors 3 ['\n# First, determine the number of days between the start of 2009 and the input date\n# Then, find the day of the week of the start of 2009\n# Finally, add the number of days to the start of 2009 and output the day of the week\n\n# Import date time library\nimport datetime\n\n# Get input\nd, m = [int(x) for x in input().split()]\n\n# Calculate the number of days between the start of 2009 and the input date\n# Note that this is a negative number\ndays = datetime.date(2009, m, d) - datetime.date(2009, 1, 1)\n\n# Find the day of the week of the start of 2009\n# Note that this is the day of the week of the input date\ndays = days.days % 7\n\n# Add the number of days to the start of 2009 and output the day of the week of the input date\ndays = datetime.date(2009, 1, 1) + datetime.timedelta(days=days)\n\n# Output the day of the week of the input date\nprint(days.strftime("%A"))\n', '\n\n# First, determine the number of days between the start of 2009 and the input date\n# Then, find the day of the week of the start of 2009\n# Finally, add the number of days to the start of 2009 and output the day of the week\n\n# Import date time library\nimport datetime\n\n# Get input\nd, m = [int(x) for x in input().split()]\n\n# Calculate the number of days between the start of 2009 and the input date\n# Note that this is a negative number\ndays = datetime.date(2009, m, d) - datetime.date(2009, 1, 1)\n\n# Find the day of the week of the start of 2009\n# Note that this is the day of the week of the input date\ndays = days.days % 7\n\n# Add the number of days to the start of 2009\ndays = datetime.date(2009, 1, 1) + datetime.timedelta(days=days)\n\n# Output the day of the week of the input date\nprint(days.strftime("%A"))\n', '\n# First, determine the number of days between the start of 2009 and the input date\n# Then, find the day of the week of the start of 2009\n# Finally, add the number of days to the start of 2009 and output the day of the week\n\n# Import date time library\nimport datetime\n\n# Get input\nd, m = [int(x) for x in input().split()]\n\n# Calculate the number of days between the start of 2009 and the input date\n# Note that this is a negative number\ndays = datetime.date(2009, m, d) - datetime.date(2009, 1, 1)\n\n# Find the day of the week of the start of 2009\n# Note that this is the day of the week of the input date\ndays = days.days % 7\n\n# Add the number of days to the start of 2009 and output the day of the week of the input date\ndays = datetime.date(2009, 1, 1) + datetime.timedelta(days=days)\n\n# Output the day of the week of the input date\nprint(days.strftime("%A"))\n']
2022-04-13 04:44:56.138641 size on output set 5
2022-04-13 04:44:56.138655 num operations 2
2022-04-13 04:44:56.138660 size on input set 1
2022-04-13 04:45:01.125466 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\n\ndays_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nday_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'] \n\ndef get_day_of_week(day, month):\n    day_of_year = sum(days_in_month[:month-1]) + day\n    return day_of_week[(day_of_year + 3) % 7]\n\ndef main():\n    day, month = [int(x) for x in stdin.readline().strip().split()]\n    print(get_day_of_week(day, month))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\n\ndays_in_months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\ndays_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\ndef get_day_of_week(day, month):\n    day_of_year = sum(days_in_months[:month-1]) + day\n    return days_of_week[(day_of_year + 3) % 7]\n\ndef main():\n    day, month = [int(x) for x in stdin.readline().strip().split()]\n    print(get_day_of_week(day, month))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nfrom sys import stdin\n\ndays_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nday_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\ndef get_day_of_week(day, month):\n    day_of_year = sum(days_in_month[:month-1]) + day\n    return day_of_week[(day_of_year + 3) % 7]\n\ndef main():\n    day, month = [int(x) for x in stdin.readline().strip().split()]\n    print(get_day_of_week(day, month))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649825096,
  "object": "edit"
}
2022-04-13 04:45:01.125642 fix spelling mistakes 3 ["\n\nfrom sys import stdin\n\ndays_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nday_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'] \n\ndef get_day_of_week(day, month):\n    day_of_year = sum(days_in_month[:month-1]) + day\n    return day_of_week[(day_of_year + 3) % 7]\n\ndef main():\n    day, month = [int(x) for x in stdin.readline().strip().split()]\n    print(get_day_of_week(day, month))\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\n\ndays_in_months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\ndays_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\ndef get_day_of_week(day, month):\n    day_of_year = sum(days_in_months[:month-1]) + day\n    return days_of_week[(day_of_year + 3) % 7]\n\ndef main():\n    day, month = [int(x) for x in stdin.readline().strip().split()]\n    print(get_day_of_week(day, month))\n\nif __name__ == '__main__':\n    main()\n", "\nfrom sys import stdin\n\ndays_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nday_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\ndef get_day_of_week(day, month):\n    day_of_year = sum(days_in_month[:month-1]) + day\n    return day_of_week[(day_of_year + 3) % 7]\n\ndef main():\n    day, month = [int(x) for x in stdin.readline().strip().split()]\n    print(get_day_of_week(day, month))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 04:45:01.125672 size on output set 3
2022-04-13 04:45:01.125678 size on input set 3
2022-04-13 04:45:08.429352 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\n\ndays_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nday_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\ndef get_day_of_week(day, month):\n    day_of_year = sum(days_in_month[:month - 1]) + day\n    return day_of_week[(day_of_year + 3) % 7]\n\ndef main():\n    day, month = [int(x) for x in stdin.readline().strip().split()]\n    print(get_day_of_week(day, month))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "from sys import stdin\n\ndays_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nday_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'] \n\ndef get_day_of_week(day, month):\n    day_of_year = sum(days_in_month[:month-1]) + day\n    return day_of_week[(day_of_year + 3) % 7]\n\ndef main():\n    day, month = [int(x) for x in stdin.readline().strip().split()]\n    print(get_day_of_week(day, month))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom sys import stdin\n\ndays_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31] \nday_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'] \n\ndef get_day_of_week(day, month): \n    day_of_year = sum(days_in_month[:month-1]) + day \n    return day_of_week[(day_of_year + 3) % 7] \n\ndef main(): \n    day, month = [int(x) for x in stdin.readline().strip().split()] \n    print(get_day_of_week(day, month)) \n\nif __name__ == '__main__': \n    main() \n"
    }
  ],
  "created": 1649825101,
  "object": "edit"
}
2022-04-13 04:45:08.429553 fix syntax errors 3 ["\n\nfrom sys import stdin\n\ndays_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nday_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\ndef get_day_of_week(day, month):\n    day_of_year = sum(days_in_month[:month - 1]) + day\n    return day_of_week[(day_of_year + 3) % 7]\n\ndef main():\n    day, month = [int(x) for x in stdin.readline().strip().split()]\n    print(get_day_of_week(day, month))\n\nif __name__ == '__main__':\n    main()\n", "from sys import stdin\n\ndays_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nday_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'] \n\ndef get_day_of_week(day, month):\n    day_of_year = sum(days_in_month[:month-1]) + day\n    return day_of_week[(day_of_year + 3) % 7]\n\ndef main():\n    day, month = [int(x) for x in stdin.readline().strip().split()]\n    print(get_day_of_week(day, month))\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\n\ndays_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31] \nday_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'] \n\ndef get_day_of_week(day, month): \n    day_of_year = sum(days_in_month[:month-1]) + day \n    return day_of_week[(day_of_year + 3) % 7] \n\ndef main(): \n    day, month = [int(x) for x in stdin.readline().strip().split()] \n    print(get_day_of_week(day, month)) \n\nif __name__ == '__main__': \n    main() \n"]
2022-04-13 04:45:17.941131 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom sys import stdin\n\ndays_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nday_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\ndef get_day_of_week(day, month):\n    day_of_year = sum(days_in_month[:month - 1]) + day\n    return day_of_week[(day_of_year + 3) % 7]\n\ndef main():\n    day, month = [int(x) for x in stdin.readline().strip().split()]\n    print(get_day_of_week(day, month))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "from sys import stdin\n\ndays_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31] # days in month\nday_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'] # day of week\n\ndef get_day_of_week(day, month): # function to get the day of the week\n    day_of_year = sum(days_in_month[:month-1]) + day # calculates the day of the year\n    return day_of_week[(day_of_year + 3) % 7] # returns the day of the week\n\ndef main(): # main function\n    day, month = [int(x) for x in stdin.readline().strip().split()] # gets the day and month\n    print(get_day_of_week(day, month)) # prints the day of the week\n\nif __name__ == '__main__': # if the script is run directly\n    main() # run the main function\n"
    },
    {
      "index": 2,
      "text": "from sys import stdin\n\ndays_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nday_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday',\n               'Saturday', 'Sunday']\n\n\ndef get_day_of_week(d, m):\n    day_of_year = sum(days_in_month[:m - 1]) + d\n    return day_of_week[(day_of_year + 3) % len(day_of_week)]\n\ndef main():\n    d, m = [int(x) for x in stdin.readline().strip().split()]\n    print(get_day_of_week(d, m))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649825108,
  "object": "edit"
}
2022-04-13 04:45:17.941415 fix syntax errors 3 ["\nfrom sys import stdin\n\ndays_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nday_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\ndef get_day_of_week(day, month):\n    day_of_year = sum(days_in_month[:month - 1]) + day\n    return day_of_week[(day_of_year + 3) % 7]\n\ndef main():\n    day, month = [int(x) for x in stdin.readline().strip().split()]\n    print(get_day_of_week(day, month))\n\nif __name__ == '__main__':\n    main()\n", "from sys import stdin\n\ndays_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31] # days in month\nday_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'] # day of week\n\ndef get_day_of_week(day, month): # function to get the day of the week\n    day_of_year = sum(days_in_month[:month-1]) + day # calculates the day of the year\n    return day_of_week[(day_of_year + 3) % 7] # returns the day of the week\n\ndef main(): # main function\n    day, month = [int(x) for x in stdin.readline().strip().split()] # gets the day and month\n    print(get_day_of_week(day, month)) # prints the day of the week\n\nif __name__ == '__main__': # if the script is run directly\n    main() # run the main function\n", "from sys import stdin\n\ndays_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nday_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday',\n               'Saturday', 'Sunday']\n\n\ndef get_day_of_week(d, m):\n    day_of_year = sum(days_in_month[:m - 1]) + d\n    return day_of_week[(day_of_year + 3) % len(day_of_week)]\n\ndef main():\n    d, m = [int(x) for x in stdin.readline().strip().split()]\n    print(get_day_of_week(d, m))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 04:45:26.310123 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\n\ndays_in_months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31,]\ndays_of_week = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\",]\n\ndef get_day_of_week(day, month):\n    day_of_year = sum(days_in_months[:month - 1]) + day\n    return days_of_week[(day_of_year + 3) % 7]\n\ndef main():\n    day, month = [int(x) for x in stdin.readline().strip().split()]  # noqa\n    print(get_day_of_week(day, month))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nfrom sys import stdin\n\ndays_in_months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\ndays_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\ndef get_day_of_week(day, month):\n    day_of_year = sum(days_in_months[:month - 1]) + day\n    return days_of_week[(day_of_year + 3) % 7]\n\ndef main():\n    day, month = [int(x) for x in stdin.readline().strip().split()]\n    print(get_day_of_week(day, month))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nfrom sys import stdin\n\ndays_in_months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]  # days in months\ndays_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']  # days of week\n\n\ndef get_day_of_week(day, month):  # function to get the day of week\n    day_of_year = sum(days_in_months[:month - 1]) + day\n    return days_of_week[(day_of_year + 3) % 7]  # return the day of week\n\n\ndef main():\n    day, month = [int(x) for x in stdin.readline().strip().split()]  # get the day and month\n    print(get_day_of_week(day, month))  # print the day of week\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649825117,
  "object": "edit"
}
2022-04-13 04:45:26.310309 fix syntax errors 3 ['\n\nfrom sys import stdin\n\ndays_in_months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31,]\ndays_of_week = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday",]\n\ndef get_day_of_week(day, month):\n    day_of_year = sum(days_in_months[:month - 1]) + day\n    return days_of_week[(day_of_year + 3) % 7]\n\ndef main():\n    day, month = [int(x) for x in stdin.readline().strip().split()]  # noqa\n    print(get_day_of_week(day, month))\n\n\nif __name__ == "__main__":\n    main()\n', "\nfrom sys import stdin\n\ndays_in_months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\ndays_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\ndef get_day_of_week(day, month):\n    day_of_year = sum(days_in_months[:month - 1]) + day\n    return days_of_week[(day_of_year + 3) % 7]\n\ndef main():\n    day, month = [int(x) for x in stdin.readline().strip().split()]\n    print(get_day_of_week(day, month))\n\nif __name__ == '__main__':\n    main()\n", "\nfrom sys import stdin\n\ndays_in_months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]  # days in months\ndays_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']  # days of week\n\n\ndef get_day_of_week(day, month):  # function to get the day of week\n    day_of_year = sum(days_in_months[:month - 1]) + day\n    return days_of_week[(day_of_year + 3) % 7]  # return the day of week\n\n\ndef main():\n    day, month = [int(x) for x in stdin.readline().strip().split()]  # get the day and month\n    print(get_day_of_week(day, month))  # print the day of week\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 04:45:26.310343 size on output set 9
2022-04-13 04:45:26.310355 num operations 2
2022-04-13 04:45:26.310360 size on input set 1
2022-04-13 04:45:31.441103 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n#\n# d, m = map(int, input().split())\n#\n# days = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)\n# day = sum(days[:m]) + d\n# day %= 7\n#\n# days_of_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')\n# print(days_of_week[day])\n"
    },
    {
      "index": 1,
      "text": "\nd, m = map(int, input().split())\n\ndays = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)\nday = sum(days[:m]) + d\nday %= 7\n\ndays_of_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')\nprint(days_of_week[day])\n"
    },
    {
      "index": 2,
      "text": "\n\nd, m = map(int, input().split())\n\ndays = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)\nday = sum(days[:m]) + d\nday %= 7\n\ndays_of_the_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')\nprint(days_of_the_week[day])\n"
    }
  ],
  "created": 1649825126,
  "object": "edit"
}
2022-04-13 04:45:31.441348 fix spelling mistakes 3 ["\n#\n# d, m = map(int, input().split())\n#\n# days = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)\n# day = sum(days[:m]) + d\n# day %= 7\n#\n# days_of_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')\n# print(days_of_week[day])\n", "\nd, m = map(int, input().split())\n\ndays = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)\nday = sum(days[:m]) + d\nday %= 7\n\ndays_of_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')\nprint(days_of_week[day])\n", "\n\nd, m = map(int, input().split())\n\ndays = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)\nday = sum(days[:m]) + d\nday %= 7\n\ndays_of_the_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')\nprint(days_of_the_week[day])\n"]
2022-04-13 04:45:31.441422 size on output set 3
2022-04-13 04:45:31.441431 size on input set 3
2022-04-13 04:45:36.559697 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nd, m = map(int, input().split())\n\ndays = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)\nday = sum(days[:m]) + d\nday %= 7\n\ndays_of_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')\nprint(days_of_week[day])\n"
    },
    {
      "index": 1,
      "text": "\n\nd, m = map(int, input().split())\n\ndays = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)\nday = sum(days[:m]) + d\nday %= 7\n\ndays_of_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')\nprint(days_of_week[day])\n"
    },
    {
      "index": 2,
      "text": "\n#\n# d, m = map(int, input().split())\n#\n# days = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)\n# day = sum(days[:m]) + d\n# day %= 7\n\n# days_of_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')\n# print(days_of_week[day])\n"
    }
  ],
  "created": 1649825131,
  "object": "edit"
}
2022-04-13 04:45:36.559871 fix syntax errors 3 ["\n\nd, m = map(int, input().split())\n\ndays = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)\nday = sum(days[:m]) + d\nday %= 7\n\ndays_of_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')\nprint(days_of_week[day])\n", "\n\nd, m = map(int, input().split())\n\ndays = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)\nday = sum(days[:m]) + d\nday %= 7\n\ndays_of_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')\nprint(days_of_week[day])\n", "\n#\n# d, m = map(int, input().split())\n#\n# days = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)\n# day = sum(days[:m]) + d\n# day %= 7\n\n# days_of_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')\n# print(days_of_week[day])\n"]
2022-04-13 04:45:41.265390 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "d, m = map(int, input().split())\n\ndays = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)\nday = sum(days[:m]) + d\nday %= 7\n\ndays_of_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')\nprint(days_of_week[day])\n"
    },
    {
      "index": 1,
      "text": "\nd, m = map(int, input().split()) # input day and month\n\ndays = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31) # number of days in each month\nday = sum(days[:m]) + d # sum of days before the month and the day\nday %= 7\n\ndays_of_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday') # days of the week\nprint(days_of_week[day])\n"
    },
    {
      "index": 2,
      "text": "d, m = map(int, input().split())\n\ndays = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)\nday = sum(days[:m]) + d\nday %= 7\n\ndays_of_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')\nprint(days_of_week[day])\n"
    }
  ],
  "created": 1649825136,
  "object": "edit"
}
2022-04-13 04:45:41.265579 fix syntax errors 3 ["d, m = map(int, input().split())\n\ndays = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)\nday = sum(days[:m]) + d\nday %= 7\n\ndays_of_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')\nprint(days_of_week[day])\n", "\nd, m = map(int, input().split()) # input day and month\n\ndays = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31) # number of days in each month\nday = sum(days[:m]) + d # sum of days before the month and the day\nday %= 7\n\ndays_of_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday') # days of the week\nprint(days_of_week[day])\n", "d, m = map(int, input().split())\n\ndays = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)\nday = sum(days[:m]) + d\nday %= 7\n\ndays_of_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')\nprint(days_of_week[day])\n"]
2022-04-13 04:45:50.916079 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nd, m = map(int, input().split())\n\ndays = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)\nday = sum(days[:m]) + d\nday %= 7\n\ndays_of_the_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')\nprint(days_of_the_week[day])\n"
    },
    {
      "index": 1,
      "text": "\n\nd, m = map(int, input().split())  # \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u043c \u0434\u0430\u0442\u0443 \u0438 \u043c\u0435\u0441\u044f\u0446\n\ndays = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)  # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0432 \u043c\u0435\u0441\u044f\u0446\u0430\u0445\nday = sum(days[:m]) + d  # \u043f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0434\u043d\u0435\u0439 \u043f\u0440\u043e\u0448\u043b\u043e \u0441 \u043d\u0430\u0447\u0430\u043b\u0430 \u0433\u043e\u0434\u0430\nday %= 7  # \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043d\u043e\u043c\u0435\u0440 \u0434\u043d\u044f \u043d\u0435\u0434\u0435\u043b\u0438\n\ndays_of_the_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')  # \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0434\u043d\u0435\u0439 \u043d\u0435\u0434\u0435\u043b\u0438\nprint(days_of_the_week[day])  # \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0434\u043d\u044f \u043d\u0435\u0434\u0435\u043b\u0438 \u043f\u043e \u043d\u043e\u043c\u0435\u0440\u0443 \u0434\u043d\u044f \u043d\u0435\u0434\u0435\u043b\u0438\n"
    },
    {
      "index": 2,
      "text": "\nd, m = map(int, input().split())\n\ndays = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)\nday = sum(days[:m]) + d\nday %= 7\n\ndays_of_the_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')\nprint(days_of_the_week[day])\n"
    }
  ],
  "created": 1649825141,
  "object": "edit"
}
2022-04-13 04:45:50.916255 fix syntax errors 3 ["\nd, m = map(int, input().split())\n\ndays = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)\nday = sum(days[:m]) + d\nday %= 7\n\ndays_of_the_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')\nprint(days_of_the_week[day])\n", "\n\nd, m = map(int, input().split())  # принимаем дату и месяц\n\ndays = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)  # количество дней в месяцах\nday = sum(days[:m]) + d  # подсчитываем сколько дней прошло с начала года\nday %= 7  # получаем номер дня недели\n\ndays_of_the_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')  # названия дней недели\nprint(days_of_the_week[day])  # выводим название дня недели по номеру дня недели\n", "\nd, m = map(int, input().split())\n\ndays = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)\nday = sum(days[:m]) + d\nday %= 7\n\ndays_of_the_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')\nprint(days_of_the_week[day])\n"]
2022-04-13 04:45:50.916361 size on output set 6
2022-04-13 04:45:50.916381 num operations 2
2022-04-13 04:45:50.916387 size on input set 1
2022-04-13 04:45:58.114657 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Get the input\nm, d = map(int, input().strip().split())\n\n# Define the days of the week\ndays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n\n# Define the number of days in each month\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n"
    },
    {
      "index": 1,
      "text": "\n\n# Get the input\nd, m = map(int, input().strip().split())\n\n# Define the days of the week.\ndays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n\n# Define the number of days in each month.\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January.\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n"
    },
    {
      "index": 2,
      "text": "\n\n# Get the input \nd, m = map(int, input().strip().split())\n\n# Define the days of the week\ndays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n\n# Define the number of days in each month\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n"
    }
  ],
  "created": 1649825150,
  "object": "edit"
}
2022-04-13 04:45:58.114825 fix spelling mistakes 3 ['\n\n# Get the input\nm, d = map(int, input().strip().split())\n\n# Define the days of the week\ndays = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]\n\n# Define the number of days in each month\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n', '\n\n# Get the input\nd, m = map(int, input().strip().split())\n\n# Define the days of the week.\ndays = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]\n\n# Define the number of days in each month.\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January.\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n', '\n\n# Get the input \nd, m = map(int, input().strip().split())\n\n# Define the days of the week\ndays = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]\n\n# Define the number of days in each month\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n']
2022-04-13 04:45:58.114860 size on output set 3
2022-04-13 04:45:58.114866 size on input set 3
2022-04-13 04:46:00.844608 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\n# Get the input \nd, m = map(int, input().strip().split())\n\n# Define the days of the week\ndays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n\n# Define the number of days in each month\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n"
    },
    {
      "index": 1,
      "text": "\n# Get the input \nd, m = map(int, input().strip().split())\n\n# Define the days of the week\ndays = [\"MONDAY\", \"TUESDAY\", \"WEDNESDAY\", \"THURSDAY\", \"FRIDAY\", \"SATURDAY\", \"SUNDAY\"]\n\n# Define the number of days in each month\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n"
    },
    {
      "index": 2,
      "text": "\n# Get the input \nd, m = map(int, input().strip().split())\n\n# Define the days of the week\ndays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n\n# Define the number of days in each month\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n"
    }
  ],
  "created": 1649825158,
  "object": "edit"
}
2022-04-13 04:46:00.844780 fix syntax errors 3 ['#!/usr/bin/env python3\n\n# Get the input \nd, m = map(int, input().strip().split())\n\n# Define the days of the week\ndays = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]\n\n# Define the number of days in each month\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n', '\n# Get the input \nd, m = map(int, input().strip().split())\n\n# Define the days of the week\ndays = ["MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY"]\n\n# Define the number of days in each month\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n', '\n# Get the input \nd, m = map(int, input().strip().split())\n\n# Define the days of the week\ndays = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]\n\n# Define the number of days in each month\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n']
2022-04-13 04:46:05.778614 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Get the input\nm, d = map(int, input().strip().split())\n\n# Define the days of the week\ndays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n\n# Define the number of days in each month\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n"
    },
    {
      "index": 1,
      "text": "\n# Get the input\nm, d = map(int, input().strip().split())\n\n# Define the days of the week\ndays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n\n# Define the number of days in each month\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n"
    },
    {
      "index": 2,
      "text": "\n\n# Get the input\nm, d = map(int, input().strip().split())\n\n# Define the days of the week\ndays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n\n# Define the number of days in each month\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n\n# Get the input\nm, d = map(int, input().strip().split())\n\n# Define the days of the week\ndays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n\n# Define the number of days in each month\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n"
    }
  ],
  "created": 1649825160,
  "object": "edit"
}
2022-04-13 04:46:05.778800 fix syntax errors 3 ['\n# Get the input\nm, d = map(int, input().strip().split())\n\n# Define the days of the week\ndays = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]\n\n# Define the number of days in each month\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n', '\n# Get the input\nm, d = map(int, input().strip().split())\n\n# Define the days of the week\ndays = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]\n\n# Define the number of days in each month\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n', '\n\n# Get the input\nm, d = map(int, input().strip().split())\n\n# Define the days of the week\ndays = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]\n\n# Define the number of days in each month\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n\n# Get the input\nm, d = map(int, input().strip().split())\n\n# Define the days of the week\ndays = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]\n\n# Define the number of days in each month\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n']
2022-04-13 04:46:08.583820 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Get the input\nd, m = map(int, input().strip().split(' '))\n\n# Define the days of the week.\ndays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\n# Define the number of days in each month.\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January.\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n"
    },
    {
      "index": 1,
      "text": "\n# Get the input\nd, m = map(int, input().strip().split())\n\n# Define the days of the week.\ndays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n\n# Define the number of days in each month.\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January.\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n"
    },
    {
      "index": 2,
      "text": "\n#\n# Get the input\nd, m = map(int, input().strip().split())\n\n# Define the days of the week.\ndays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n\n# Define the number of days in each month.\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January.\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n"
    }
  ],
  "created": 1649825165,
  "object": "edit"
}
2022-04-13 04:46:08.584036 fix syntax errors 3 ["\n\n# Get the input\nd, m = map(int, input().strip().split(' '))\n\n# Define the days of the week.\ndays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\n# Define the number of days in each month.\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January.\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n", '\n# Get the input\nd, m = map(int, input().strip().split())\n\n# Define the days of the week.\ndays = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]\n\n# Define the number of days in each month.\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January.\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n', '\n#\n# Get the input\nd, m = map(int, input().strip().split())\n\n# Define the days of the week.\ndays = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]\n\n# Define the number of days in each month.\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January.\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n']
2022-04-13 04:46:08.584132 size on output set 8
2022-04-13 04:46:08.584143 num operations 2
2022-04-13 04:46:08.584148 size on input set 1
2022-04-13 04:46:10.814434 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split())\n    days = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0\n    for i in range(m-1):\n        day += months[i]\n    day += d\n    print(days[day % 7]) \n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split())\n    days = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0\n    for i in range(m - 1):\n        day += months[i]\n    day += d\n    print(days[day % 7])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split())\n    days = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"] \n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0\n    for i in range(m-1):\n        day += months[i]\n    day += d\n    print(days[day % 7])\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649825168,
  "object": "edit"
}
2022-04-13 04:46:10.814629 fix spelling mistakes 3 ['\n\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split())\n    days = ["Thursday", "Friday", "Saturday", "Sunday", "Monday", "Tuesday", "Wednesday"]\n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0\n    for i in range(m-1):\n        day += months[i]\n    day += d\n    print(days[day % 7]) \n\nif __name__ == \'__main__\':\n    main()\n', '\n\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split())\n    days = ["Thursday", "Friday", "Saturday", "Sunday", "Monday", "Tuesday", "Wednesday"]\n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0\n    for i in range(m - 1):\n        day += months[i]\n    day += d\n    print(days[day % 7])\n\nif __name__ == \'__main__\':\n    main()\n', '\n\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split())\n    days = ["Thursday", "Friday", "Saturday", "Sunday", "Monday", "Tuesday", "Wednesday"] \n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0\n    for i in range(m-1):\n        day += months[i]\n    day += d\n    print(days[day % 7])\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-13 04:46:10.814657 size on output set 3
2022-04-13 04:46:10.814663 size on input set 3
2022-04-13 04:46:14.646399 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split())\n    days = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0\n    for i in range(m - 1):\n        day += months[i]\n    day += d\n    print(days[day % 7]) \n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split())\n    days = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0\n    for i in range(m - 1):\n        day += months[i]\n    day += d\n    print(days[day % 7])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n#!/usr/bin/python3\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    print('Hello')\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649825170,
  "object": "edit"
}
2022-04-13 04:46:14.646592 fix syntax errors 3 ['\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split())\n    days = ["Thursday", "Friday", "Saturday", "Sunday", "Monday", "Tuesday", "Wednesday"]\n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0\n    for i in range(m - 1):\n        day += months[i]\n    day += d\n    print(days[day % 7]) \n\nif __name__ == \'__main__\':\n    main()\n', '\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split())\n    days = ["Thursday", "Friday", "Saturday", "Sunday", "Monday", "Tuesday", "Wednesday"]\n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0\n    for i in range(m - 1):\n        day += months[i]\n    day += d\n    print(days[day % 7])\n\nif __name__ == \'__main__\':\n    main()\n', "\n\n#!/usr/bin/python3\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    print('Hello')\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 04:46:17.029035 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split()) # day, month\n    days = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"] \n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0\n    for i in range(m-1):\n        day += months[i]\n    day += d\n    print(days[day % 7])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n#!/usr/bin/python\n\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split())\n    days = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"] \n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0\n    for i in range(m-1):\n        day += months[i]\n    day += d\n    print(days[day % 7])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split())\n    days = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0\n    for i in range(m-1):\n        day += months[i]\n    day += d\n    print(days[day % 7])\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649825174,
  "object": "edit"
}
2022-04-13 04:46:17.029224 fix syntax errors 3 ['\n\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split()) # day, month\n    days = ["Thursday", "Friday", "Saturday", "Sunday", "Monday", "Tuesday", "Wednesday"] \n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0\n    for i in range(m-1):\n        day += months[i]\n    day += d\n    print(days[day % 7])\n\nif __name__ == \'__main__\':\n    main()\n', '\n\n#!/usr/bin/python\n\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split())\n    days = ["Thursday", "Friday", "Saturday", "Sunday", "Monday", "Tuesday", "Wednesday"] \n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0\n    for i in range(m-1):\n        day += months[i]\n    day += d\n    print(days[day % 7])\n\nif __name__ == \'__main__\':\n    main()\n', '\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split())\n    days = ["Thursday", "Friday", "Saturday", "Sunday", "Monday", "Tuesday", "Wednesday"]\n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0\n    for i in range(m-1):\n        day += months[i]\n    day += d\n    print(days[day % 7])\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-13 04:46:24.433121 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#!/usr/bin/python3\n# -*- coding: utf-8 -*- \n\nimport sys \n\ndef main():\n    d, m = map(int, sys.stdin.readline().split()) \n    days = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"] \n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31] \n    day = 0 \n    for i in range(m-1): \n        day += months[i] \n    day += d \n    print(days[day % 7])  \n\nif __name__ == '__main__': \n    main() \n"
    },
    {
      "index": 1,
      "text": "\n\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split())\n    days = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0\n    for i in range(m - 1):\n        day += months[i]\n    day += d\n    print(days[day % 7])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split())\n    days = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0\n    for i in range(m-1):\n        day += months[i]\n    day += d\n    print(days[day % 7]) \n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649825177,
  "object": "edit"
}
2022-04-13 04:46:24.433472 fix syntax errors 3 ['\n\n#!/usr/bin/python3\n# -*- coding: utf-8 -*- \n\nimport sys \n\ndef main():\n    d, m = map(int, sys.stdin.readline().split()) \n    days = ["Thursday", "Friday", "Saturday", "Sunday", "Monday", "Tuesday", "Wednesday"] \n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31] \n    day = 0 \n    for i in range(m-1): \n        day += months[i] \n    day += d \n    print(days[day % 7])  \n\nif __name__ == \'__main__\': \n    main() \n', '\n\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split())\n    days = ["Thursday", "Friday", "Saturday", "Sunday", "Monday", "Tuesday", "Wednesday"]\n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0\n    for i in range(m - 1):\n        day += months[i]\n    day += d\n    print(days[day % 7])\n\nif __name__ == \'__main__\':\n    main()\n', '#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split())\n    days = ["Thursday", "Friday", "Saturday", "Sunday", "Monday", "Tuesday", "Wednesday"]\n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0\n    for i in range(m-1):\n        day += months[i]\n    day += d\n    print(days[day % 7]) \n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-13 04:46:24.433507 size on output set 9
2022-04-13 04:46:24.433519 num operations 2
2022-04-13 04:46:24.433523 size on input set 1
2022-04-13 04:46:26.301187 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Process\n# 1. Read the input\n# 2. Compute the day of the week\n# 3. Output the result\n\n# 1.\nd_m = input().split()\nd = int(d_m[0])\nm = int(d_m[1])\n\n# 2.\ndays = {\n    0: \"Monday\",\n    1: \"Tuesday\",\n    2: \"Wednesday\",\n    3: \"Thursday\",\n    4: \"Friday\",\n    5: \"Saturday\",\n    6: \"Sunday\"\n}\n\ndays_in_month = {\n    1: 31,\n    2: 28,\n    3: 31,\n    4: 30,\n    5: 31,\n    6: 30,\n    7: 31,\n    8: 31,\n    9: 30,\n    10: 31,\n    11: 30,\n    12: 31\n}\n\n# 1 Jan 2009 is a Thursday\n# 2 Jan 2009 is a Friday\n# 3 Jan 2009 is a Saturday\n# 4 Jan 2009 is a Sunday\n# 5 Jan 2009 is a Monday\n# 6 Jan 2009 is a Tuesday\n# 7 Jan 2009 is a Wednesday\n\n# 3.\nday_of_week = 4\nfor m_i in range(1, m):\n    day_of_week += days_in_month[m_i]\nday_of_week += d\nday_of_week %= 7\n\nprint(days[day_of_week])\n"
    },
    {
      "index": 1,
      "text": "\n\n# Processs\n# 1. Read the input\n# 2. Compute the days of the week\n# 3. Output the result\n\n# 1.\nd_m = input().split()\nd = int(d_m[0])\nm = int(d_m[1])\n\n# 2.\ndays = {\n    0: \"Monday\",\n    1: \"Tuesday\",\n    2: \"Wednesday\",\n    3: \"Thursday\",\n    4: \"Friday\",\n    5: \"Saturday\",\n    6: \"Sunday\"\n}\n\ndays_in_month = {\n    1: 31,\n    2: 28,\n    3: 31,\n    4: 30,\n    5: 31,\n    6: 30,\n    7: 31,\n    8: 31,\n    9: 30,\n    10: 31,\n    11: 30,\n    12: 31\n}\n\n# 1 Jan 2009 is a Thursday\n# 2 Jan 2009 is a Friday\n# 3 Jan 2009 is a Saturday\n# 4 Jan 2009 is a Sunday\n# 5 Jan 2009 is a Monday\n# 6 Jan 2009 is a Tuesday\n# 7 Jan 2009 is a Wednesday\n\n# 3.\nday_of_week = 4\nfor m_i in range(1, m):\n    day_of_week += days_in_month[m_i]\nday_of_week += d\nday_of_week %= 7\n\nprint(days[day_of_week])\n"
    },
    {
      "index": 2,
      "text": "\n\n# Processs\n# 1. Read the input\n# 2. Compute the days of the week\n# 3. Output the result\n\n# 1.\nd_m = input().split()\nd = int(d_m[0])\nm = int(d_m[1])\n\n# 2.\ndays = {\n    0: \"Monday\",\n    1: \"Tuesday\",\n    2: \"Wednesday\",\n    3: \"Thursday\",\n    4: \"Friday\",\n    5: \"Saturday\",\n    6: \"Sunday\"\n}\n\ndays_in_month = {\n    1: 31,\n    2: 28,\n    3: 31,\n    4: 30,\n    5: 31,\n    6: 30,\n    7: 31,\n    8: 31,\n    9: 30,\n    10: 31,\n    11: 30,\n    12: 31\n}\n\n# 1 Jan 2009 is a Thursday\n# 2 Jan 2009 is a Friday\n# 3 Jan 2009 is a Saturday\n# 4 Jan 2009 is a Sunday\n# 5 Jan 2009 is a Monday\n# 6 Jan 2009 is a Tuesday\n# 7 Jan 2009 is a Wednesday\n\n# 3.\nday_of_week = 4\nfor m_i in range(1, m):\n    day_of_week += days_in_month[m_i]\nday_of_week += d\nday_of_week %= 7\n\nprint(days[day_of_week])\n"
    }
  ],
  "created": 1649825184,
  "object": "edit"
}
2022-04-13 04:46:26.301405 fix spelling mistakes 3 ['\n\n# Process\n# 1. Read the input\n# 2. Compute the day of the week\n# 3. Output the result\n\n# 1.\nd_m = input().split()\nd = int(d_m[0])\nm = int(d_m[1])\n\n# 2.\ndays = {\n    0: "Monday",\n    1: "Tuesday",\n    2: "Wednesday",\n    3: "Thursday",\n    4: "Friday",\n    5: "Saturday",\n    6: "Sunday"\n}\n\ndays_in_month = {\n    1: 31,\n    2: 28,\n    3: 31,\n    4: 30,\n    5: 31,\n    6: 30,\n    7: 31,\n    8: 31,\n    9: 30,\n    10: 31,\n    11: 30,\n    12: 31\n}\n\n# 1 Jan 2009 is a Thursday\n# 2 Jan 2009 is a Friday\n# 3 Jan 2009 is a Saturday\n# 4 Jan 2009 is a Sunday\n# 5 Jan 2009 is a Monday\n# 6 Jan 2009 is a Tuesday\n# 7 Jan 2009 is a Wednesday\n\n# 3.\nday_of_week = 4\nfor m_i in range(1, m):\n    day_of_week += days_in_month[m_i]\nday_of_week += d\nday_of_week %= 7\n\nprint(days[day_of_week])\n', '\n\n# Processs\n# 1. Read the input\n# 2. Compute the days of the week\n# 3. Output the result\n\n# 1.\nd_m = input().split()\nd = int(d_m[0])\nm = int(d_m[1])\n\n# 2.\ndays = {\n    0: "Monday",\n    1: "Tuesday",\n    2: "Wednesday",\n    3: "Thursday",\n    4: "Friday",\n    5: "Saturday",\n    6: "Sunday"\n}\n\ndays_in_month = {\n    1: 31,\n    2: 28,\n    3: 31,\n    4: 30,\n    5: 31,\n    6: 30,\n    7: 31,\n    8: 31,\n    9: 30,\n    10: 31,\n    11: 30,\n    12: 31\n}\n\n# 1 Jan 2009 is a Thursday\n# 2 Jan 2009 is a Friday\n# 3 Jan 2009 is a Saturday\n# 4 Jan 2009 is a Sunday\n# 5 Jan 2009 is a Monday\n# 6 Jan 2009 is a Tuesday\n# 7 Jan 2009 is a Wednesday\n\n# 3.\nday_of_week = 4\nfor m_i in range(1, m):\n    day_of_week += days_in_month[m_i]\nday_of_week += d\nday_of_week %= 7\n\nprint(days[day_of_week])\n', '\n\n# Processs\n# 1. Read the input\n# 2. Compute the days of the week\n# 3. Output the result\n\n# 1.\nd_m = input().split()\nd = int(d_m[0])\nm = int(d_m[1])\n\n# 2.\ndays = {\n    0: "Monday",\n    1: "Tuesday",\n    2: "Wednesday",\n    3: "Thursday",\n    4: "Friday",\n    5: "Saturday",\n    6: "Sunday"\n}\n\ndays_in_month = {\n    1: 31,\n    2: 28,\n    3: 31,\n    4: 30,\n    5: 31,\n    6: 30,\n    7: 31,\n    8: 31,\n    9: 30,\n    10: 31,\n    11: 30,\n    12: 31\n}\n\n# 1 Jan 2009 is a Thursday\n# 2 Jan 2009 is a Friday\n# 3 Jan 2009 is a Saturday\n# 4 Jan 2009 is a Sunday\n# 5 Jan 2009 is a Monday\n# 6 Jan 2009 is a Tuesday\n# 7 Jan 2009 is a Wednesday\n\n# 3.\nday_of_week = 4\nfor m_i in range(1, m):\n    day_of_week += days_in_month[m_i]\nday_of_week += d\nday_of_week %= 7\n\nprint(days[day_of_week])\n']
2022-04-13 04:46:26.301517 size on output set 2
2022-04-13 04:46:26.301526 size on input set 2
2022-04-13 04:46:30.296537 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Process\n# 1. Read the input\n# 2. Compute the day of the week\n# 3. Output the result\n\n# 1. Read the input\nd_m = input().split()  # d_m is a list\nd = int(d_m[0])  # d is an int\nm = int(d_m[1])  # m is an int\n\n# 2. Compute the day of the week\ndays = {\n    0: \"Monday\",\n    1: \"Tuesday\",\n    2: \"Wednesday\",\n    3: \"Thursday\",\n    4: \"Friday\",\n    5: \"Saturday\",\n    6: \"Sunday\"\n}\n\ndays_in_month = {\n    1: 31,\n    2: 28,\n    3: 31,\n    4: 30,\n    5: 31,\n    6: 30,\n    7: 31,\n    8: 31,\n    9: 30,\n    10: 31,\n    11: 30,\n    12: 31\n}\n\n# 1 Jan 2009 is a Thursday\n# 2 Jan 2009 is a Friday\n# 3 Jan 2009 is a Saturday\n# 4 Jan 2009 is a Sunday\n# 5 Jan 2009 is a Monday\n# 6 Jan 2009 is a Tuesday\n# 7 Jan 2009 is a Wednesday\n\n# 3. Output the result\nday_of_week = 4\nfor m_i in range(1, m):\n    day_of_week += days_in_month[m_i]\nday_of_week += d\nday_of_week %= 7\n\nprint(days[day_of_week])\n"
    },
    {
      "index": 1,
      "text": "\n# Process\n# 1. Read the input\n# 2. Compute the day of the week\n# 3. Output the result\n# 1.\nd_m = input().split()\nd = int(d_m[0])\nm = int(d_m[1])\n# 2.\ndays = {\n    0: \"Monday\",\n    1: \"Tuesday\",\n    2: \"Wednesday\",\n    3: \"Thursday\",\n    4: \"Friday\",\n    5: \"Saturday\",\n    6: \"Sunday\"\n}\ndays_in_month = {\n    1: 31,\n    2: 28,\n    3: 31,\n    4: 30,\n    5: 31,\n    6: 30,\n    7: 31,\n    8: 31,\n    9: 30,\n    10: 31,\n    11: 30,\n    12: 31\n}\n# 1 Jan 2009 is a Thursday\n# 2 Jan 2009 is a Friday\n# 3 Jan 2009 is a Saturday\n# 4 Jan 2009 is a Sunday\n# 5 Jan 2009 is a Monday\n# 6 Jan 2009 is a Tuesday\n# 7 Jan 2009 is a Wednesday\n# 3.\nday_of_week = 4\nfor m_i in range(1, m):\n    day_of_week += days_in_month[m_i]\nday_of_week += d\nday_of_week %= 7\nprint(days[day_of_week])\n"
    },
    {
      "index": 2,
      "text": "\n# Process\n# 1. Read the input\n# 2. Compute the day of the week\n# 3. Output the result\n\n# 1.\nd_m = input().split()\nd = int(d_m[0])\nm = int(d_m[1])\n\n# 2.\ndays = {\n    0: \"Monday\",\n    1: \"Tuesday\",\n    2: \"Wednesday\",\n    3: \"Thursday\",\n    4: \"Friday\",\n    5: \"Saturday\",\n    6: \"Sunday\"\n}\n\ndays_in_month = {\n    1: 31,\n    2: 28,\n    3: 31,\n    4: 30,\n    5: 31,\n    6: 30,\n    7: 31,\n    8: 30,\n    9: 30,\n    10: 31,\n    11: 30,\n    12: 31\n}\n\n# 1 Jan 2009 is a Thursday\n# 2 Jan 2009 is a Friday\n# 3 Jan 2009 is a Saturday\n# 4 Jan 2009 is a Sunday\n# 5 Jan 2009 is a Monday\n# 6 Jan 2009 is a Tuesday\n# 7 Jan 2009 is a Wednesday\n\n# 3.\nday_of_week = 4\nfor m_i in range(1, m):\n    day_of_week += days_in_month[m_i]\nday_of_week += d\nday_of_week %= 7\n\nprint(days[day_of_week])\n"
    }
  ],
  "created": 1649825186,
  "object": "edit"
}
2022-04-13 04:46:30.296736 fix syntax errors 3 ['\n\n# Process\n# 1. Read the input\n# 2. Compute the day of the week\n# 3. Output the result\n\n# 1. Read the input\nd_m = input().split()  # d_m is a list\nd = int(d_m[0])  # d is an int\nm = int(d_m[1])  # m is an int\n\n# 2. Compute the day of the week\ndays = {\n    0: "Monday",\n    1: "Tuesday",\n    2: "Wednesday",\n    3: "Thursday",\n    4: "Friday",\n    5: "Saturday",\n    6: "Sunday"\n}\n\ndays_in_month = {\n    1: 31,\n    2: 28,\n    3: 31,\n    4: 30,\n    5: 31,\n    6: 30,\n    7: 31,\n    8: 31,\n    9: 30,\n    10: 31,\n    11: 30,\n    12: 31\n}\n\n# 1 Jan 2009 is a Thursday\n# 2 Jan 2009 is a Friday\n# 3 Jan 2009 is a Saturday\n# 4 Jan 2009 is a Sunday\n# 5 Jan 2009 is a Monday\n# 6 Jan 2009 is a Tuesday\n# 7 Jan 2009 is a Wednesday\n\n# 3. Output the result\nday_of_week = 4\nfor m_i in range(1, m):\n    day_of_week += days_in_month[m_i]\nday_of_week += d\nday_of_week %= 7\n\nprint(days[day_of_week])\n', '\n# Process\n# 1. Read the input\n# 2. Compute the day of the week\n# 3. Output the result\n# 1.\nd_m = input().split()\nd = int(d_m[0])\nm = int(d_m[1])\n# 2.\ndays = {\n    0: "Monday",\n    1: "Tuesday",\n    2: "Wednesday",\n    3: "Thursday",\n    4: "Friday",\n    5: "Saturday",\n    6: "Sunday"\n}\ndays_in_month = {\n    1: 31,\n    2: 28,\n    3: 31,\n    4: 30,\n    5: 31,\n    6: 30,\n    7: 31,\n    8: 31,\n    9: 30,\n    10: 31,\n    11: 30,\n    12: 31\n}\n# 1 Jan 2009 is a Thursday\n# 2 Jan 2009 is a Friday\n# 3 Jan 2009 is a Saturday\n# 4 Jan 2009 is a Sunday\n# 5 Jan 2009 is a Monday\n# 6 Jan 2009 is a Tuesday\n# 7 Jan 2009 is a Wednesday\n# 3.\nday_of_week = 4\nfor m_i in range(1, m):\n    day_of_week += days_in_month[m_i]\nday_of_week += d\nday_of_week %= 7\nprint(days[day_of_week])\n', '\n# Process\n# 1. Read the input\n# 2. Compute the day of the week\n# 3. Output the result\n\n# 1.\nd_m = input().split()\nd = int(d_m[0])\nm = int(d_m[1])\n\n# 2.\ndays = {\n    0: "Monday",\n    1: "Tuesday",\n    2: "Wednesday",\n    3: "Thursday",\n    4: "Friday",\n    5: "Saturday",\n    6: "Sunday"\n}\n\ndays_in_month = {\n    1: 31,\n    2: 28,\n    3: 31,\n    4: 30,\n    5: 31,\n    6: 30,\n    7: 31,\n    8: 30,\n    9: 30,\n    10: 31,\n    11: 30,\n    12: 31\n}\n\n# 1 Jan 2009 is a Thursday\n# 2 Jan 2009 is a Friday\n# 3 Jan 2009 is a Saturday\n# 4 Jan 2009 is a Sunday\n# 5 Jan 2009 is a Monday\n# 6 Jan 2009 is a Tuesday\n# 7 Jan 2009 is a Wednesday\n\n# 3.\nday_of_week = 4\nfor m_i in range(1, m):\n    day_of_week += days_in_month[m_i]\nday_of_week += d\nday_of_week %= 7\n\nprint(days[day_of_week])\n']
2022-04-13 04:46:33.290083 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Process\n# 1. Read the input\n# 2. Compute the days of the week\n# 3. Output the result\n\n# 1.\nd_m = input().split()\nd = int(d_m[0])\nm = int(d_m[1])\n\n# 2.\ndays = {\n    0: \"Monday\",\n    1: \"Tuesday\",\n    2: \"Wednesday\",\n    3: \"Thursday\",\n    4: \"Friday\",\n    5: \"Saturday\",\n    6: \"Sunday\"\n}\n\ndays_in_month = {\n    1: 31,\n    2: 28,\n    3: 31,\n    4: 30,\n    5: 31,\n    6: 30,\n    7: 31,\n    8: 31,\n    9: 30,\n    10: 31,\n    11: 30,\n    12: 31\n}\n\n# 1 Jan 2009 is a Thursday\n# 2 Jan 2009 is a Friday\n# 3 Jan 2009 is a Saturday\n# 4 Jan 2009 is a Sunday\n# 5 Jan 2009 is a Monday\n# 6 Jan 2009 is a Tuesday\n# 7 Jan 2009 is a Wednesday\n\n# 3.\nday_of_week = 4\nfor m_i in range(1, m):\n    day_of_week += days_in_month[m_i]\nday_of_week += d\nday_of_week %= 7\n\nprint(days[day_of_week])\n"
    },
    {
      "index": 1,
      "text": "\n\n# Process\n# 1. Read the input\n# 2. Compute the days of the week\n# 3. Output the result\n\n# 1.\nd_m = input().split()\nd = int(d_m[0])\nm = int(d_m[1])\n\n# 2.\ndays = {\n    0: \"Monday\",\n    1: \"Tuesday\",\n    2: \"Wednesday\",\n    3: \"Thursday\",\n    4: \"Friday\",\n    5: \"Saturday\",\n    6: \"Sunday\"\n}\n\ndays_in_month = {\n    1: 31,\n    2: 28,\n    3: 31,\n    4: 30,\n    5: 31,\n    6: 30,\n    7: 31,\n    8: 31,\n    9: 30,\n    10: 31,\n    11: 30,\n    12: 31\n}\n\n# 1 Jan 2009 is a Thursday\n# 2 Jan 2009 is a Friday\n# 3 Jan 2009 is a Saturday\n# 4 Jan 2009 is a Sunday\n# 5 Jan 2009 is a Monday\n# 6 Jan 2009 is a Tuesday\n# 7 Jan 2009 is a Wednesday\n\n# 3.\nday_of_week = 4\nfor m_i in range(1, m):\n    day_of_week += days_in_month[m_i]\nday_of_week += d\nday_of_week %= 7\n\nprint(days[day_of_week])\n"
    },
    {
      "index": 2,
      "text": "\n\n# Process\n# 1. Read the input\n# 2. Compute the days of the week\n# 3. Output the result\n\n# 1. Read the input\nd_m = input().split()\nd = int(d_m[0])\nm = int(d_m[1])\n\n# 2. Compute the days of the week\ndays = {\n    0: \"Monday\",\n    1: \"Tuesday\",\n    2: \"Wednesday\",\n    3: \"Thursday\",\n    4: \"Friday\",\n    5: \"Saturday\",\n    6: \"Sunday\"\n}\n\ndays_in_month = {\n    1: 31,\n    2: 28,\n    3: 31,\n    4: 30,\n    5: 31,\n    6: 30,\n    7: 31,\n    8: 31,\n    9: 30,\n    10: 31,\n    11: 30,\n    12: 31\n}\n\n# 1 Jan 2009 is a Thursday\n# 2 Jan 2009 is a Friday\n# 3 Jan 2009 is a Saturday\n# 4 Jan 2009 is a Sunday\n# 5 Jan 2009 is a Monday\n# 6 Jan 2009 is a Tuesday\n# 7 Jan 2009 is a Wednesday\n\n# 3. Output the result\nday_of_week = 4\nfor m_i in range(1, m):\n    day_of_week += days_in_month[m_i]\nday_of_week += d\nday_of_week %= 7\n\nprint(days[day_of_week])\n"
    }
  ],
  "created": 1649825190,
  "object": "edit"
}
2022-04-13 04:46:33.290349 fix syntax errors 3 ['\n\n# Process\n# 1. Read the input\n# 2. Compute the days of the week\n# 3. Output the result\n\n# 1.\nd_m = input().split()\nd = int(d_m[0])\nm = int(d_m[1])\n\n# 2.\ndays = {\n    0: "Monday",\n    1: "Tuesday",\n    2: "Wednesday",\n    3: "Thursday",\n    4: "Friday",\n    5: "Saturday",\n    6: "Sunday"\n}\n\ndays_in_month = {\n    1: 31,\n    2: 28,\n    3: 31,\n    4: 30,\n    5: 31,\n    6: 30,\n    7: 31,\n    8: 31,\n    9: 30,\n    10: 31,\n    11: 30,\n    12: 31\n}\n\n# 1 Jan 2009 is a Thursday\n# 2 Jan 2009 is a Friday\n# 3 Jan 2009 is a Saturday\n# 4 Jan 2009 is a Sunday\n# 5 Jan 2009 is a Monday\n# 6 Jan 2009 is a Tuesday\n# 7 Jan 2009 is a Wednesday\n\n# 3.\nday_of_week = 4\nfor m_i in range(1, m):\n    day_of_week += days_in_month[m_i]\nday_of_week += d\nday_of_week %= 7\n\nprint(days[day_of_week])\n', '\n\n# Process\n# 1. Read the input\n# 2. Compute the days of the week\n# 3. Output the result\n\n# 1.\nd_m = input().split()\nd = int(d_m[0])\nm = int(d_m[1])\n\n# 2.\ndays = {\n    0: "Monday",\n    1: "Tuesday",\n    2: "Wednesday",\n    3: "Thursday",\n    4: "Friday",\n    5: "Saturday",\n    6: "Sunday"\n}\n\ndays_in_month = {\n    1: 31,\n    2: 28,\n    3: 31,\n    4: 30,\n    5: 31,\n    6: 30,\n    7: 31,\n    8: 31,\n    9: 30,\n    10: 31,\n    11: 30,\n    12: 31\n}\n\n# 1 Jan 2009 is a Thursday\n# 2 Jan 2009 is a Friday\n# 3 Jan 2009 is a Saturday\n# 4 Jan 2009 is a Sunday\n# 5 Jan 2009 is a Monday\n# 6 Jan 2009 is a Tuesday\n# 7 Jan 2009 is a Wednesday\n\n# 3.\nday_of_week = 4\nfor m_i in range(1, m):\n    day_of_week += days_in_month[m_i]\nday_of_week += d\nday_of_week %= 7\n\nprint(days[day_of_week])\n', '\n\n# Process\n# 1. Read the input\n# 2. Compute the days of the week\n# 3. Output the result\n\n# 1. Read the input\nd_m = input().split()\nd = int(d_m[0])\nm = int(d_m[1])\n\n# 2. Compute the days of the week\ndays = {\n    0: "Monday",\n    1: "Tuesday",\n    2: "Wednesday",\n    3: "Thursday",\n    4: "Friday",\n    5: "Saturday",\n    6: "Sunday"\n}\n\ndays_in_month = {\n    1: 31,\n    2: 28,\n    3: 31,\n    4: 30,\n    5: 31,\n    6: 30,\n    7: 31,\n    8: 31,\n    9: 30,\n    10: 31,\n    11: 30,\n    12: 31\n}\n\n# 1 Jan 2009 is a Thursday\n# 2 Jan 2009 is a Friday\n# 3 Jan 2009 is a Saturday\n# 4 Jan 2009 is a Sunday\n# 5 Jan 2009 is a Monday\n# 6 Jan 2009 is a Tuesday\n# 7 Jan 2009 is a Wednesday\n\n# 3. Output the result\nday_of_week = 4\nfor m_i in range(1, m):\n    day_of_week += days_in_month[m_i]\nday_of_week += d\nday_of_week %= 7\n\nprint(days[day_of_week])\n']
2022-04-13 04:46:33.290396 size on output set 5
2022-04-13 04:46:33.290405 num operations 2
2022-04-13 04:46:33.290410 size on input set 1
2022-04-13 04:46:40.629692 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    \"\"\"Determine the day of the week\"\"\"\n    day, month = map(int, input().split())\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    week = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    total = 0\n    for i in range(month - 1):\n        total += days[i]\n    total += day\n    print(week[(total - 1) % 7])\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"Determine the day of the week\"\"\"\n    day, month = map(int, input().split())\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    week = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    total = 0\n    for i in range(month - 1):\n        total += days[i]\n    total += day\n    print(week[(total - 1) % 7])\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main(x, y):\n    \"\"\"Determine the day of the week.\n    Args:\n        x (int): day\n        y (int): month\n    Returns:\n        day of the week\n    \"\"\"\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]  # number of days in each month\n    week = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]  # days of the week\n    total = 0  # total number of days passed\n    for i in range(y - 1):\n        total += days[i]  # add the number of days passed in each month\n    total += x  # add the number of days passed in this month\n    print(week[(total - 1) % 7])  # print the day of the week\n\nmain(int(input()), int(input()))\n"
    }
  ],
  "created": 1649825193,
  "object": "edit"
}
2022-04-13 04:46:40.629889 fix spelling mistakes 3 ['\n\ndef main():\n    """Determine the day of the week"""\n    day, month = map(int, input().split())\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    week = ["Thursday", "Friday", "Saturday", "Sunday", "Monday", "Tuesday", "Wednesday"]\n    total = 0\n    for i in range(month - 1):\n        total += days[i]\n    total += day\n    print(week[(total - 1) % 7])\n\nmain()\n', '\n\ndef main():\n    """Determine the day of the week"""\n    day, month = map(int, input().split())\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    week = ["Thursday", "Friday", "Saturday", "Sunday", "Monday", "Tuesday", "Wednesday"]\n    total = 0\n    for i in range(month - 1):\n        total += days[i]\n    total += day\n    print(week[(total - 1) % 7])\n\nmain()\n', '\n\ndef main(x, y):\n    """Determine the day of the week.\n    Args:\n        x (int): day\n        y (int): month\n    Returns:\n        day of the week\n    """\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]  # number of days in each month\n    week = ["Thursday", "Friday", "Saturday", "Sunday", "Monday", "Tuesday", "Wednesday"]  # days of the week\n    total = 0  # total number of days passed\n    for i in range(y - 1):\n        total += days[i]  # add the number of days passed in each month\n    total += x  # add the number of days passed in this month\n    print(week[(total - 1) % 7])  # print the day of the week\n\nmain(int(input()), int(input()))\n']
2022-04-13 04:46:40.629943 size on output set 2
2022-04-13 04:46:40.629950 size on input set 2
2022-04-13 04:46:44.729460 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "def main():\n    \"\"\"Determine the day of the week\"\"\"\n    day, month = map(int, input().split()) # map() function returns a list of the results after applying the given function to each item of a given iterable (list, tuple etc.)\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    week = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    total = 0\n    for i in range(month - 1):\n        total += days[i]\n    total += day\n    print(week[(total - 1) % 7])\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"Determine the day of the week\"\"\"\n    day, month = map(int, input().split())\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    week = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"] #pylint: disable=invalid-name\n    total = 0\n    for i in range(month - 1):\n        total += days[i]\n    total += day\n    print(week[(total - 1) % 7])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    \"\"\"Determine the day of the week\"\"\"\n    day, month = map(int, input().split())\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    week = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    total = 0\n    for i in range(month - 1):\n        total += days[i]\n    total += day\n    print(week[(total - 1) % 7])\n"
    }
  ],
  "created": 1649825200,
  "object": "edit"
}
2022-04-13 04:46:44.729625 fix syntax errors 3 ['def main():\n    """Determine the day of the week"""\n    day, month = map(int, input().split()) # map() function returns a list of the results after applying the given function to each item of a given iterable (list, tuple etc.)\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    week = ["Thursday", "Friday", "Saturday", "Sunday", "Monday", "Tuesday", "Wednesday"]\n    total = 0\n    for i in range(month - 1):\n        total += days[i]\n    total += day\n    print(week[(total - 1) % 7])\n\nmain()\n', '\n\ndef main():\n    """Determine the day of the week"""\n    day, month = map(int, input().split())\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    week = ["Thursday", "Friday", "Saturday", "Sunday", "Monday", "Tuesday", "Wednesday"] #pylint: disable=invalid-name\n    total = 0\n    for i in range(month - 1):\n        total += days[i]\n    total += day\n    print(week[(total - 1) % 7])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """Determine the day of the week"""\n    day, month = map(int, input().split())\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    week = ["Thursday", "Friday", "Saturday", "Sunday", "Monday", "Tuesday", "Wednesday"]\n    total = 0\n    for i in range(month - 1):\n        total += days[i]\n    total += day\n    print(week[(total - 1) % 7])\n']
2022-04-13 04:46:50.565499 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    \"\"\"Determine the day of the week.\n    Args:\n        x (int): day\n        y (int): month\n    Returns:\n        day of the week\n    x = int(input())\n    y = int(input())\n    \"\"\"\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]  # number of days in each month\n    week = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]  # days of the week\n    total = 0  # total number of days passed\n    for i in range(y - 1):\n        total += days[i]  # add the number of days passed in each month\n    total += x  # add the number of days passed in this month\n    print(week[(total - 1) % 7])  # print the day of the week\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main(x, y):\n    \"\"\"Determine the day of the week.\n    Args:\n        x (int): day\n        y (int): month\n    Returns:\n        day of the week\n    \"\"\"\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]  # number of days in each month.\n    week = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]  # days of the week.\n    total = 0  # total number of days passed\n    for i in range(y - 1):\n        total += days[i]  # add the number of days passed in each month.\n    total += x  # add the number of days passed in this month.\n    print(week[(total - 1) % 7])  # print the day of the week.\n\nmain(int(input()), int(input()))\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main(x, y):\n    \"\"\"Determine the day of the week\n    Args:\n        x (int): day\n        y (int): month\n    Returns:\n        day of the week\n    \"\"\"\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]  # number of days in each month\n    week = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]  # days of the week\n    total = 0  # total number of days passed\n    for i in range(y - 1):\n        total += days[i]  # add the number of days passed in each month\n    total += x  # add the number of days passed in this month\n    print(week[(total - 1) % 7])  # print the day of the week\n\nmain(int(input()), int(input()))\n"
    }
  ],
  "created": 1649825204,
  "object": "edit"
}
2022-04-13 04:46:50.565694 fix syntax errors 3 ['\n\ndef main():\n    """Determine the day of the week.\n    Args:\n        x (int): day\n        y (int): month\n    Returns:\n        day of the week\n    x = int(input())\n    y = int(input())\n    """\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]  # number of days in each month\n    week = ["Thursday", "Friday", "Saturday", "Sunday", "Monday", "Tuesday", "Wednesday"]  # days of the week\n    total = 0  # total number of days passed\n    for i in range(y - 1):\n        total += days[i]  # add the number of days passed in each month\n    total += x  # add the number of days passed in this month\n    print(week[(total - 1) % 7])  # print the day of the week\n\nmain()\n', '\n\ndef main(x, y):\n    """Determine the day of the week.\n    Args:\n        x (int): day\n        y (int): month\n    Returns:\n        day of the week\n    """\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]  # number of days in each month.\n    week = ["Thursday", "Friday", "Saturday", "Sunday", "Monday", "Tuesday", "Wednesday"]  # days of the week.\n    total = 0  # total number of days passed\n    for i in range(y - 1):\n        total += days[i]  # add the number of days passed in each month.\n    total += x  # add the number of days passed in this month.\n    print(week[(total - 1) % 7])  # print the day of the week.\n\nmain(int(input()), int(input()))\n', '\n\ndef main(x, y):\n    """Determine the day of the week\n    Args:\n        x (int): day\n        y (int): month\n    Returns:\n        day of the week\n    """\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]  # number of days in each month\n    week = ["Thursday", "Friday", "Saturday", "Sunday", "Monday", "Tuesday", "Wednesday"]  # days of the week\n    total = 0  # total number of days passed\n    for i in range(y - 1):\n        total += days[i]  # add the number of days passed in each month\n    total += x  # add the number of days passed in this month\n    print(week[(total - 1) % 7])  # print the day of the week\n\nmain(int(input()), int(input()))\n']
2022-04-13 04:46:50.565736 size on output set 6
