["\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n\n    ans = 0\n    for i in range(n):\n        ans += a[i]\n        ans -= 1\n\n    print(ans) \n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split(\" \")))\n\n    min_cost = 0\n    for i in range(n):\n        min_cost += a[i]\n\n    for i in range(n):\n        for j in range(i):\n            if a[i] == a[j]:\n                min_cost -= a[i]\n\n    print(min_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    pass\n\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    g = [[] for _ in range(n + 1)]\n    for _ in range(m):\n        x, y, w = map(int, input().split())\n        g[x].append((y, w))\n        g[y].append((x, w))\n\n    spf = [float('inf')] * (n + 1)\n    spf[1] = 0\n    q = [1]\n    while q:\n        u = q.pop(0)\n        for v, w in g[u]:\n            if spf[v] > spf[u] + w:\n                spf[v] = spf[u] + w\n                q.append(v)\n\n    ans = sum(a)\n    for i in range(2, n + 1):\n        ans += min(spf[i], a[i - 1])\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    g = [[] for _ in range(n + 1)]\n    for _ in range(m):\n        x, y, w = map(int, input().split())\n        g[x].append((y, w))\n        g[y].append((x, w))\n\n    st = [float('inf')] * (n + 1)\n    st[1] = 0\n    q = [1]\n    while q:\n        u = q.pop(0)\n        for v, w in g[u]:\n            if st[v] > st[u] + w:\n                st[v] = st[u] + w\n                q.append(v)\n\n    ans = sum(a)\n    for i in range(2, n + 1):\n        ans += min(st[i], a[i - 1])\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\n# https://codeforces.com/problemset/problem/1343/B\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    g = [[] for _ in range(n + 1)]\n    for _ in range(m):\n        x, y, w = map(int, input().split())\n        g[x].append((y, w))\n        g[y].append((x, w))\n\n    spf = [float('inf')] * (n + 1)\n    spf[1] = 0\n    q = [1]\n    while q:\n        u = q.pop(0)\n        for v, w in g[u]:\n            if spf[v] > spf[u] + w:\n                spf[v] = spf[u] + w\n                q.append(v)\n\n    ans = sum(a)\n    for i in range(2, n + 1):\n        ans += min(spf[i], a[i - 1])\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "from collections import defaultdict\nfrom heapq import heappop, heappush\n \ndef solve(n, m, a):\n    g = defaultdict(list)\n    for _ in range(m):\n        x, y, w = map(int, input().split())\n        g[x].append((y, w))\n        g[y].append((x, w))\n \n    spt = [float('inf')] * (n + 1)\n    spt[1] = 0\n    pq = [(0, 1)]\n    while pq:\n        u = heappop(pq)[1]\n        for v, w in g[u]:\n            if spt[v] > spt[u] + w:\n                spt[v] = spt[u] + w\n                heappush(pq, (spt[v], v))\n \n    ans = sum(a)\n    for i in range(2, n + 1):\n        ans += min(spt[i], a[i - 1])\n \n    print(ans)\n \nif __name__ == \"__main__\":\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    solve(n, m, a)\n", "\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = []\n    for i in range(m):\n        x, y, c = map(int, input().split())\n        offers.append([x, y, c])\n\n    min_cost = sum(a)\n\n    for offer in offers:\n        x, y, c = offer\n        if a[x - 1] + a[y - 1] > c:\n            min_cost -= a[x - 1] + a[y - 1]\n            min_cost += c\n\n    print(min_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = []\n    for i in range(m):\n        x, y, c = map(int, input().split())\n        offers.append([x, y, c])\n\n    min_cost = 0\n    for a_i in a:\n        min_cost += a_i\n\n    for offer in offers:\n        x, y, c = offer\n        if a[x - 1] + a[y - 1] >= c:\n            min_cost -= a[x - 1] + a[y - 1]\n            min_cost += c\n\n    print(min_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = []\n    for i in range(m):\n        x, y, c = map(int, input().split())\n        offers.append([x, y, c])\n\n    min_cost = 0\n    for i in range(n):\n        min_cost += a[i]\n\n    for offer in offers:\n        x, y, c = offer\n        if a[x - 1] + a[y - 1] > c:\n            min_cost -= a[x - 1] + a[y - 1]\n            min_cost += c\n\n    print(min_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    g = [[] for _ in range(n)]\n    for _ in range(m):\n        x, y, w = map(int, input().split())\n        g[x - 1].append((y - 1, w))\n        g[y - 1].append((x - 1, w))\n\n    spt = [float('inf')] * n\n    spt[0] = 0\n    q = [0]\n    while q:\n        u = q.pop(0)\n        for v, w in g[u]:\n            if spt[v] > spt[u] + w:\n                spt[v] = spt[u] + w\n                q.append(v)\n\n    ans = sum(a)\n    for i in range(1, n):\n        ans += min(spt[i], a[i])\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    offers = []\n    for i in range(m):\n        c, x, y = map(int, input().split())\n        offers.append([c, x, y])\n\n    min_cost = 0\n    for i in range(n):\n        min_cost += a[i]\n\n    for offer in offers:\n        c, x, y = offer\n        if a[x-1] + a[y-1] > 2*c:\n            min_cost -= a[x-1] + a[y-1] - 2*c\n            min_cost += c\n\n    print(min_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n", "def main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = []\n    for i in range(m):\n        x, y, c = map(int, input().split())\n        offers.append([x, y, c])\n\n    min_cost = 0\n    for i in range(n):\n        min_cost += a[i]\n\n    for offer in offers:\n        x, y, c = offer\n        if a[x-1] + a[y-1] >= c:\n            min_cost -= a[x-1] + a[y-1]\n            min_cost += c\n\n    print(min_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n"]