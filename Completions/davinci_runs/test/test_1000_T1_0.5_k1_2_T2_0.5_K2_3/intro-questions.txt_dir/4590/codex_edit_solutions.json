["\ndef main():\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort(reverse=True)\n    b.sort(reverse=True)\n    count = 0\n    i = 0\n    j = 0\n    while i < n and j < m and k >= 0:\n        if a[i] > b[j]:\n            k -= a[i]\n            i += 1\n            count += 1\n        else:\n            k -= b[j]\n            j += 1\n            count += 1\n    while i < n and k >= 0:\n        k -= a[i]\n        i += 1\n        count += 1\n    while j < m and k >= 0:\n        k -= b[j]\n        j += 1\n        count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport heapq\n    a = list(map(int, a))\n    b = list(map(int, b))\n\n\ndef read_books(k, a, b):\n    heapq.heapify(a)\n    heapq.heapify(b)\n    cnt = 0\n    while k > 0:\n        if a and b:\n            if a[0] < b[0]:\n                k -= heapq.heappop(a)\n            else:\n                k -= heapq.heappop(b)\n        elif a:\n            k -= heapq.heappop(a)\n        elif b:\n            k -= heapq.heappop(b)\n        else:\n            return cnt\n        cnt += 1\n    return cnt\n\n\ndef main():\n    n, a, b = map(int, input().split())\n    print(read_books(n, a, b))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport heapq\n\n\ndef read_books(n, m, k, a, b):\n    heapq.heapify(a)\n    heapq.heapify(b)\n    cnt = 0\n    while n > 0 and m > 0 and k > 0:\n        if a and b:\n            if a[0] < b[0]:\n                n -= heapq.heappop(a)\n            else:\n                m -= heapq.heappop(b)\n        elif a:\n            n -= heapq.heappop(a)\n        elif b:\n            m -= heapq.heappop(b)\n        else:\n            return cnt, n, m\n        cnt += 1\n    return cnt, n, m\n\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    cnt, n, m = read_books(n, m, k, a, b)\n    print(cnt)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport heapq\n\n\ndef read_books(n, m, k, a, b):\n    heapq.heapify(a)\n    heapq.heapify(b)\n    c = 0\n    while k > 0:\n        if a and b:\n            if a[0] < b[0]:\n                k -= heapq.heappop(a)\n            else:\n                k -= heapq.heappop(b)\n        elif a:\n            k -= heapq.heappop(a)\n        elif b:\n            k -= heapq.heappop(b)\n        else:\n            return c\n        c += 1\n    return c\n\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(read_books(n, m, k, a, b))\n\n\nif __name__ == '__main__':\n    main()\n", "\n# https://codeforces.com/problemset/problem/1219/B\n\ndef main():\n    pass\n\n\nif __name__ == '__main__':\n    main()\n", "# import heapq\n\n\n# def read_books(n, m, k, a, b):\n#     heapq.heapify(a)\n#     heapq.heapify(b)\n#     cnt = 0\n#     while k > 0:\n#         if a and b:\n#             if a[0] < b[0]:\n#                 k -= heapq.heappop(a)\n#             else:\n#                 k -= heapq.heappop(b)\n#         elif a:\n#             k -= heapq.heappop(a)\n#         elif b:\n#             k -= heapq.heappop(b)\n#         else:\n#             return cnt\n#         cnt += 1\n#     return cnt\n\n\n# def main():\n#     n, m, k = map(int, input().split())\n#     a = list(map(int, input().split()))\n#     b = list(map(int, input().split()))\n#     print(read_books(n, m, k, a, b))\n\n\nif __name__ == '__main__':\n    main()\n", "def solve(n, a):\n    ans = 0\n    for i in range(1, n):\n        if a[i] < a[i - 1]:\n            ans += a[i - 1] - a[i]\n            a[i] = a[i - 1]\n    return ans\n\n\n\ndef solve2(n, a):\n    ans = 0\n    max_a = 0\n    for i in range(1, n):\n        if a[i - 1] > max_a:\n            max_a = a[i - 1]\n        if max_a > a[i]:\n            ans += max_a - a[i]\n    return ans\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(n, a))\n    print(solve2(n, a))\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport heapq\n\n\ndef read_books(n, m, k, a, b, c):\n    heapq.heapify(a)\n    heapq.heapify(b)\n    c = 0\n    while k > 0:\n        if a and b:\n            if a[0] < b[0]:\n                k -= heapq.heappop(a)\n            else:\n                k -= heapq.heappop(b)\n        elif a:\n            k -= heapq.heappop(a)\n        elif b:\n            k -= heapq.heappop(b)\n        else:\n            return c\n        c += 1\n    return c\n\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(read_books(n, m, k, a, b))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport heapq\n\n\ndef read_books(n, m, k, a, b):\n    heapq.heapify(a)\n    heapq.heapify(b)\n    cnt = 0\n    while k > 0:\n        if a and b:\n            if a[0] < b[0]:\n                k -= heapq.heappop(a)\n            else:\n                k -= heapq.heappop(b)\n        elif a:\n            k -= heapq.heappop(a)\n        elif b:\n            k -= heapq.heappop(b)\n        else:\n            return cnt\n        cnt += 1\n    return cnt\n\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(read_books(n, m, k, a, b))\n\n\nif __name__ == '__main__':\n    main()\n", "import heapq\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a)\n\n\n\ndef main2():\n    n = int(input())\n    a = list(map(int, input().split()))\n    heapq.heapify(a)\n    print(a)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    count = 0\n    i = 0\n    j = 0\n    while i < n and j < m and k >= 0:\n        if a[i] < b[j]:\n            k -= a[i]\n            i += 1\n            count += 1\n        else:\n            k -= b[j]\n            j += 1\n            count += 1\n    while i < n and k >= 0:\n        k -= a[i]\n        i += 1\n        count += 1\n    while j < m and k >= 0:\n        k -= b[j]\n        j += 1\n        count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\n#\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    count = 0\n    i = 0\n    j = 0\n    while i < n and j < m and k >= 0:\n        if a[i] <= b[j]:\n            k -= a[i]\n            i += 1\n            count += 1\n        else:\n            k -= b[j]\n            j += 1\n            count += 1\n    while i < n and k >= 0:\n        k -= a[i]\n        i += 1\n        count += 1\n    while j < m and k >= 0:\n        k -= b[j]\n        j += 1\n        count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport heapq\n\n\ndef read_books(n, m, k, a, b):\n    heapq.heapify(a)\n    heapq.heapify(b)\n    cnt = 0\n    while n > 0 or m > 0:\n        if a and b:\n            if a[0] < b[0]:\n                n -= heapq.heappop(a)\n            else:\n                m -= heapq.heappop(b)\n        elif a:\n            n -= heapq.heappop(a)\n        elif b:\n            m -= heapq.heappop(b)\n        else:\n            return cnt\n        cnt += 1\n    return cnt\n\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(read_books(n, m, k, a, b))\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    count = 0\n    i = 0\n    j = 0\n    while i < n and j < m:\n        if a[i] < b[j]:\n            k -= a[i]\n            i += 1\n            count += 1\n        else:\n            k -= b[j]\n            j += 1\n            count += 1\n    while i < n and k >= 0:\n        k -= a[i]\n        i += 1\n        count += 1\n    while j < m and k >= 0:\n        k -= b[j]\n        j += 1\n        count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    pass\n\n\nif __name__ == '__main__':\n    main()\n"]