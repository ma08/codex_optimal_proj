2022-04-12 23:13:50.299995 num operations 2
2022-04-12 23:13:50.300004 size on input set 1
2022-04-12 23:13:55.894247 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef isDancePossible(n, p):\n    if n == 1:\n        return True\n    p = [i-1 for i in p]\n    for i in range(1, n):\n        if abs(p[i]-p[i-1]) != 1 and abs(p[i]-p[i-1]) != n-1:\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        p = list(map(int, input().split()))\n        print(\"YES\" if isDancePossible(n, p) else \"NO\")\n"
    },
    {
      "index": 1,
      "text": "\n\ndef isDancePossible(n, permutation):\n    if n == 1:\n        return True\n    permutation = [i-1 for i in permutation]\n    for i in range(1, n):\n        if abs(permutation[i]-permutation[i-1]) != 1 and abs(permutation[i]-permutation[i-1]) != n-1:\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        permutation = list(map(int, input().split()))\n        print(\"YES\" if isDancePossible(n, permutation) else \"NO\")\n"
    },
    {
      "index": 2,
      "text": "\n#\ndef isDancePossible(n, perm):\n    if n == 1:\n        return True\n    perm = [i-1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i]-perm[i-1]) != 1 and abs(perm[i]-perm[i-1]) != n-1:\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print(\"YES\" if isDancePossible(n, perm) else \"NO\")\n"
    }
  ],
  "created": 1649805230,
  "object": "edit"
}
2022-04-12 23:13:55.894467 fix spelling mistakes 3 ['\n\ndef isDancePossible(n, p):\n    if n == 1:\n        return True\n    p = [i-1 for i in p]\n    for i in range(1, n):\n        if abs(p[i]-p[i-1]) != 1 and abs(p[i]-p[i-1]) != n-1:\n            return False\n    return True\n\nif __name__ == "__main__":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        p = list(map(int, input().split()))\n        print("YES" if isDancePossible(n, p) else "NO")\n', '\n\ndef isDancePossible(n, permutation):\n    if n == 1:\n        return True\n    permutation = [i-1 for i in permutation]\n    for i in range(1, n):\n        if abs(permutation[i]-permutation[i-1]) != 1 and abs(permutation[i]-permutation[i-1]) != n-1:\n            return False\n    return True\n\nif __name__ == "__main__":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        permutation = list(map(int, input().split()))\n        print("YES" if isDancePossible(n, permutation) else "NO")\n', '\n#\ndef isDancePossible(n, perm):\n    if n == 1:\n        return True\n    perm = [i-1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i]-perm[i-1]) != 1 and abs(perm[i]-perm[i-1]) != n-1:\n            return False\n    return True\n\nif __name__ == "__main__":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print("YES" if isDancePossible(n, perm) else "NO")\n']
2022-04-12 23:13:55.894501 size on output set 3
2022-04-12 23:13:55.894508 size on input set 3
2022-04-12 23:13:59.597863 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef isDancePossible(n, permutation):\n    if n == 1:\n        return True\n    permutation = [i - 1 for i in permutation]\n    for i in range(1, n):\n        if abs(permutation[i] - permutation[i - 1]) != 1 and abs(permutation[i] - permutation[i - 1]) != n - 1:\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        permutation = list(map(int, input().split()))\n        print(\"YES\" if isDancePossible(n, permutation) else \"NO\")\n"
    },
    {
      "index": 1,
      "text": "\n\ndef isDancePossible(n, permutation):\n    if n == 1:\n        return True\n    permutation = [i - 1 for i in permutation]\n    for i in range(1, n):\n        if abs(permutation[i] - permutation[i - 1]) != 1 and abs(permutation[i] - permutation[i - 1]) != n - 1:\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        permutation = list(map(int, input().split()))\n        print(\"YES\" if isDancePossible(n, permutation) else \"NO\")\n"
    },
    {
      "index": 2,
      "text": "\n\ndef isDancePossible(n, permutation):\n    if n == 1:\n        return True\n    permutation = [i - 1 for i in permutation]\n    for i in range(1, n):\n        if abs(permutation[i] - permutation[i - 1]) != 1 and abs(permutation[i] - permutation[i - 1]) != n - 1:\n            return False\n\n    return True\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        permutation = list(map(int, input().split()))\n        print(\"YES\" if isDancePossible(n, permutation) else \"NO\")\n"
    }
  ],
  "created": 1649805235,
  "object": "edit"
}
2022-04-12 23:13:59.598035 fix syntax errors 3 ['\n\ndef isDancePossible(n, permutation):\n    if n == 1:\n        return True\n    permutation = [i - 1 for i in permutation]\n    for i in range(1, n):\n        if abs(permutation[i] - permutation[i - 1]) != 1 and abs(permutation[i] - permutation[i - 1]) != n - 1:\n            return False\n    return True\n\nif __name__ == "__main__":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        permutation = list(map(int, input().split()))\n        print("YES" if isDancePossible(n, permutation) else "NO")\n', '\n\ndef isDancePossible(n, permutation):\n    if n == 1:\n        return True\n    permutation = [i - 1 for i in permutation]\n    for i in range(1, n):\n        if abs(permutation[i] - permutation[i - 1]) != 1 and abs(permutation[i] - permutation[i - 1]) != n - 1:\n            return False\n    return True\n\nif __name__ == "__main__":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        permutation = list(map(int, input().split()))\n        print("YES" if isDancePossible(n, permutation) else "NO")\n', '\n\ndef isDancePossible(n, permutation):\n    if n == 1:\n        return True\n    permutation = [i - 1 for i in permutation]\n    for i in range(1, n):\n        if abs(permutation[i] - permutation[i - 1]) != 1 and abs(permutation[i] - permutation[i - 1]) != n - 1:\n            return False\n\n    return True\n\nif __name__ == "__main__":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        permutation = list(map(int, input().split()))\n        print("YES" if isDancePossible(n, permutation) else "NO")\n']
2022-04-12 23:14:01.184422 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef isDancePossible(n, perm):\n    if n == 1:\n        return True\n    perm = [i-1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i]-perm[i-1]) != 1 and abs(perm[i]-perm[i-1]) != n-1:\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print(\"YES\" if isDancePossible(n, perm) else \"NO\")\n"
    },
    {
      "index": 1,
      "text": "\n\ndef isDancePossible(n, perm):\n    if n == 1:\n        return True\n    perm = [i-1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i]-perm[i-1]) != 1 and abs(perm[i]-perm[i-1]) != n-1:\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print(\"YES\" if isDancePossible(n, perm) else \"NO\")\n"
    },
    {
      "index": 2,
      "text": "\n# \ndef isDancePossible(n, perm):\n    if n == 1:\n        return True\n    perm = [i-1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i]-perm[i-1]) != 1 and abs(perm[i]-perm[i-1]) != n-1:\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print(\"YES\" if isDancePossible(n, perm) else \"NO\")\n"
    }
  ],
  "created": 1649805239,
  "object": "edit"
}
2022-04-12 23:14:01.184690 fix syntax errors 3 ['\n\ndef isDancePossible(n, perm):\n    if n == 1:\n        return True\n    perm = [i-1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i]-perm[i-1]) != 1 and abs(perm[i]-perm[i-1]) != n-1:\n            return False\n    return True\n\nif __name__ == "__main__":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print("YES" if isDancePossible(n, perm) else "NO")\n', '\n\ndef isDancePossible(n, perm):\n    if n == 1:\n        return True\n    perm = [i-1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i]-perm[i-1]) != 1 and abs(perm[i]-perm[i-1]) != n-1:\n            return False\n    return True\n\nif __name__ == "__main__":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print("YES" if isDancePossible(n, perm) else "NO")\n', '\n# \ndef isDancePossible(n, perm):\n    if n == 1:\n        return True\n    perm = [i-1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i]-perm[i-1]) != 1 and abs(perm[i]-perm[i-1]) != n-1:\n            return False\n    return True\n\nif __name__ == "__main__":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print("YES" if isDancePossible(n, perm) else "NO")\n']
2022-04-12 23:14:04.627319 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef isDancePossible(n, p):\n    if n == 1:\n        return True\n    p = [i - 1 for i in p]\n    for i in range(1, n):\n        if abs(p[i]-p[i-1]) != 1 and abs(p[i]-p[i-1]) != n-1:\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        p = list(map(int, input().split()))\n        print(\"YES\" if isDancePossible(n, p) else \"NO\")\n"
    },
    {
      "index": 1,
      "text": "\ndef isDancePossible(n, p):\n    if n == 1:\n        return True\n    p = [i-1 for i in p]\n    for i in range(1, n):\n        if abs(p[i]-p[i-1]) != 1 and abs(p[i]-p[i-1]) != n-1:\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        p = list(map(int, input().split()))\n        print(\"YES\" if isDancePossible(n, p) else \"NO\")\n"
    },
    {
      "index": 2,
      "text": "\n\ndef isDancePossible(n, p):\n    if n == 1:\n        return True\n    p = [i-1 for i in p] \n    for i in range(1, n):\n        if abs(p[i]-p[i-1]) != 1 and abs(p[i]-p[i-1]) != n-1:\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        p = list(map(int, input().split()))\n        print(\"YES\" if isDancePossible(n, p) else \"NO\")\n"
    }
  ],
  "created": 1649805241,
  "object": "edit"
}
2022-04-12 23:14:04.627491 fix syntax errors 3 ['\ndef isDancePossible(n, p):\n    if n == 1:\n        return True\n    p = [i - 1 for i in p]\n    for i in range(1, n):\n        if abs(p[i]-p[i-1]) != 1 and abs(p[i]-p[i-1]) != n-1:\n            return False\n    return True\n\nif __name__ == "__main__":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        p = list(map(int, input().split()))\n        print("YES" if isDancePossible(n, p) else "NO")\n', '\ndef isDancePossible(n, p):\n    if n == 1:\n        return True\n    p = [i-1 for i in p]\n    for i in range(1, n):\n        if abs(p[i]-p[i-1]) != 1 and abs(p[i]-p[i-1]) != n-1:\n            return False\n    return True\n\nif __name__ == "__main__":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        p = list(map(int, input().split()))\n        print("YES" if isDancePossible(n, p) else "NO")\n', '\n\ndef isDancePossible(n, p):\n    if n == 1:\n        return True\n    p = [i-1 for i in p] \n    for i in range(1, n):\n        if abs(p[i]-p[i-1]) != 1 and abs(p[i]-p[i-1]) != n-1:\n            return False\n    return True\n\nif __name__ == "__main__":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        p = list(map(int, input().split()))\n        print("YES" if isDancePossible(n, p) else "NO")\n']
2022-04-12 23:14:04.627527 size on output set 7
2022-04-12 23:14:04.627539 num operations 2
2022-04-12 23:14:04.627544 size on input set 1
2022-04-12 23:14:10.729895 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n#!/bin/python3\n# https://www.hackerrank.com/challenges/circular-array-rotation/problem\n"
    },
    {
      "index": 1,
      "text": "\n\n\n# SOLUTION\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print(\"YES\")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1:\n            print(\"NO\")\n            break\n    else:\n        print(\"YES\")\n"
    },
    {
      "index": 2,
      "text": "\n\n# Solution\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print(\"YES\")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1:\n            print(\"NO\")\n            break\n    else:\n        print(\"YES\")\n"
    }
  ],
  "created": 1649805244,
  "object": "edit"
}
2022-04-12 23:14:10.730077 fix spelling mistakes 3 ['\n#!/bin/python3\n# https://www.hackerrank.com/challenges/circular-array-rotation/problem\n', '\n\n\n# SOLUTION\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print("YES")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print("YES")\n        else:\n            print("NO")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1:\n            print("NO")\n            break\n    else:\n        print("YES")\n', '\n\n# Solution\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print("YES")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print("YES")\n        else:\n            print("NO")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1:\n            print("NO")\n            break\n    else:\n        print("YES")\n']
2022-04-12 23:14:10.730135 size on output set 3
2022-04-12 23:14:10.730142 size on input set 3
2022-04-12 23:14:16.609714 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/bin/python3\n# https://www.hackerrank.com/challenges/circular-array-rotation/problem\n"
    },
    {
      "index": 1,
      "text": "#!/bin/python3\n# https://www.hackerrank.com/challenges/circular-array-rotation/problem\n"
    },
    {
      "index": 2,
      "text": "\n#!/bin/python3\n# https://www.hackerrank.com/challenges/circular-array-rotation/problem\n\n# Complete the circularArrayRotation function below.\ndef circularArrayRotation(a, k, queries):\n    # a = array\n    # k = rotation times\n    # queries = the index of the array to be printed\n    return queries\n\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    nkq = input().split()\n\n    n = int(nkq[0])\n\n    k = int(nkq[1])\n\n    q = int(nkq[2])\n\n    a = list(map(int, input().rstrip().split()))\n\n    queries = []\n\n    for _ in range(q):\n        queries_item = int(input())\n        queries.append(queries_item)\n\n    result = circularArrayRotation(a, k, queries)\n\n    fptr.write('\\n'.join(map(str, result)))\n    fptr.write('\\n')\n\n    fptr.close()\n"
    }
  ],
  "created": 1649805250,
  "object": "edit"
}
2022-04-12 23:14:16.610373 fix syntax errors 3 ['#!/bin/python3\n# https://www.hackerrank.com/challenges/circular-array-rotation/problem\n', '#!/bin/python3\n# https://www.hackerrank.com/challenges/circular-array-rotation/problem\n', "\n#!/bin/python3\n# https://www.hackerrank.com/challenges/circular-array-rotation/problem\n\n# Complete the circularArrayRotation function below.\ndef circularArrayRotation(a, k, queries):\n    # a = array\n    # k = rotation times\n    # queries = the index of the array to be printed\n    return queries\n\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    nkq = input().split()\n\n    n = int(nkq[0])\n\n    k = int(nkq[1])\n\n    q = int(nkq[2])\n\n    a = list(map(int, input().rstrip().split()))\n\n    queries = []\n\n    for _ in range(q):\n        queries_item = int(input())\n        queries.append(queries_item)\n\n    result = circularArrayRotation(a, k, queries)\n\n    fptr.write('\\n'.join(map(str, result)))\n    fptr.write('\\n')\n\n    fptr.close()\n"]
2022-04-12 23:14:19.783217 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Solution\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print(\"YES\")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1: # %n to avoid out of range\n            print(\"NO\")\n            break\n    else:\n        print(\"YES\")\n"
    },
    {
      "index": 1,
      "text": "\n\n\n# Solution\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print(\"YES\")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1:\n            print(\"NO\")\n            break\n    else:\n        print(\"YES\")\n"
    },
    {
      "index": 2,
      "text": "\n# Solution\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print(\"YES\")\n        continue\n    if n == 2:\n        if p[0] == 1 or p[1] == 2:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n:\n            print(\"NO\")\n            break\n    else:\n        print(\"YES\")\n"
    }
  ],
  "created": 1649805256,
  "object": "edit"
}
2022-04-12 23:14:19.783393 fix syntax errors 3 ['\n# Solution\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print("YES")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print("YES")\n        else:\n            print("NO")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1: # %n to avoid out of range\n            print("NO")\n            break\n    else:\n        print("YES")\n', '\n\n\n# Solution\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print("YES")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print("YES")\n        else:\n            print("NO")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1:\n            print("NO")\n            break\n    else:\n        print("YES")\n', '\n# Solution\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print("YES")\n        continue\n    if n == 2:\n        if p[0] == 1 or p[1] == 2:\n            print("YES")\n        else:\n            print("NO")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n:\n            print("NO")\n            break\n    else:\n        print("YES")\n']
2022-04-12 23:14:25.239457 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "q = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print(\"YES\")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1:\n            print(\"NO\")\n            break\n    else:\n        print(\"YES\")\n"
    },
    {
      "index": 1,
      "text": "\n# SOLUTION\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print(\"YES\")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1:\n            print(\"NO\")\n            break\n    else:\n        print(\"YES\")\n"
    },
    {
      "index": 2,
      "text": "\n\n\n# SOLUTION\nq = int(input())\n"
    }
  ],
  "created": 1649805259,
  "object": "edit"
}
2022-04-12 23:14:25.239645 fix syntax errors 3 ['q = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print("YES")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print("YES")\n        else:\n            print("NO")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1:\n            print("NO")\n            break\n    else:\n        print("YES")\n', '\n# SOLUTION\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print("YES")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print("YES")\n        else:\n            print("NO")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1:\n            print("NO")\n            break\n    else:\n        print("YES")\n', '\n\n\n# SOLUTION\nq = int(input())\n']
2022-04-12 23:14:25.239772 size on output set 8
