# Последовательность задана массивом A[1..n].
# Необходимо найти наибольшую невозрастающую подпоследовательность в A.
# В первой строке входного файла записано одно натуральное число n ≤ 10000.
# Во второй строке через пробел записаны числа A1, A2, ..., An.
# Выходной файл должен содержать два числа: длину и сумму элементов наибольшей невозрастающей подпоследовательности.


n = int(input())  # количество элементов в последовательности
a = list(map(int, input().split()))  # последовательность

g = [0] * n  # массив-результат
g[0] = a[0]  # заполняем первый элемент последовательности

for i in range(1, n):  # проходим по всем элементам последовательности
    if a[i] > g[-1]:  # если элемент больше последнего в массиве-результате
        g.append(a[i])
    else:  # если элемент меньше последнего в массиве-результате
        for j in range(len(g)):  # проходим по всем элементам массива-результата
            if a[i] <= g[j]:  # если элемент последовательности меньше элемента массива-результата
                g[j] = a[i]
                break

print(len(g))  # выводим длину массива-результата
print(*g)  # выводим массив-результат
