2022-04-12 22:31:18.024982 num operations 2
2022-04-12 22:31:18.024991 size on input set 1
2022-04-12 22:31:20.076170 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "#\n\nimport sys\n\nN = int(sys.stdin.readline())\nd_list = []\nfor i in range(N):\n    d_list.append(int(sys.stdin.readline()))\nd_list = set(d_list)\nprint(len(d_list))\n"
    },
    {
      "index": 1,
      "text": "import sys\nN = int(sys.stdin.readline())\nd_list = []\nfor i in range(N):\n    d_list.append(int(sys.stdin.readline()))\nd_list = set(d_list)\nprint(len(d_list))\n"
    },
    {
      "index": 2,
      "text": "import sys\n\nN = int(sys.stdin.readline())\nd_list = []\nfor i in range(N):\n    d_list.append(int(sys.stdin.readline()))\nd_list = set(d_list)\nprint(len(d_list))\n"
    }
  ],
  "created": 1649802678,
  "object": "edit"
}
2022-04-12 22:31:20.076370 fix spelling mistakes 3 ['#\n\nimport sys\n\nN = int(sys.stdin.readline())\nd_list = []\nfor i in range(N):\n    d_list.append(int(sys.stdin.readline()))\nd_list = set(d_list)\nprint(len(d_list))\n', 'import sys\nN = int(sys.stdin.readline())\nd_list = []\nfor i in range(N):\n    d_list.append(int(sys.stdin.readline()))\nd_list = set(d_list)\nprint(len(d_list))\n', 'import sys\n\nN = int(sys.stdin.readline())\nd_list = []\nfor i in range(N):\n    d_list.append(int(sys.stdin.readline()))\nd_list = set(d_list)\nprint(len(d_list))\n']
2022-04-12 22:31:20.076391 size on output set 3
2022-04-12 22:31:20.076397 size on input set 3
2022-04-12 22:31:46.600636 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "f = open(\"newfile.txt\", \"w\")\nfor i in range(1, 11):\n    data = \"%d\ubc88\uc9f8 \uc904\uc785\ub2c8\ub2e4.\\n\" % i\n    f.write(data)\nf.close()\n\nf = open(\"newfile.txt\", \"r\")\nline = f.readline()\nprint(line)\nf.close()\n"
    },
    {
      "index": 1,
      "text": "import sys\nimport math\n\nn = int(input())\n\nfor i in range(n):\n    x = int(input())\n    if x == 0:\n        print(1)\n    else:\n        print(int(math.factorial(x) % 10))\n"
    },
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 2
    }
  ],
  "created": 1649802680,
  "object": "edit"
}
2022-04-12 22:31:46.600806 NO RESULT
2022-04-12 22:31:46.600812 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 2
}
2022-04-12 22:31:46.600848 fix syntax errors 2 ['f = open("newfile.txt", "w")\nfor i in range(1, 11):\n    data = "%d번째 줄입니다.\\n" % i\n    f.write(data)\nf.close()\n\nf = open("newfile.txt", "r")\nline = f.readline()\nprint(line)\nf.close()\n', 'import sys\nimport math\n\nn = int(input())\n\nfor i in range(n):\n    x = int(input())\n    if x == 0:\n        print(1)\n    else:\n        print(int(math.factorial(x) % 10))\n']
2022-04-12 22:32:23.047677 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\nN = int(sys.stdin.readline())\nd_list = set()\nfor i in range(N):\n    d_list.add(int(sys.stdin.readline()))\nprint(len(d_list))\n"
    },
    {
      "index": 1,
      "text": "import os\nos.chdir(\"/Users/kazuki/Documents/Study/data/ryukyu4/4result/\")\n\nimport pandas as pd\nimport numpy as np\nimport csv\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
      "index": 2,
      "text": "import sys\nN = int(sys.stdin.readline())\nd_list = [int(sys.stdin.readline()) for i in range(N)]\nprint(len(set(d_list)))\n"
    }
  ],
  "created": 1649802706,
  "object": "edit"
}
2022-04-12 22:32:23.047858 fix syntax errors 3 ['import sys\nN = int(sys.stdin.readline())\nd_list = set()\nfor i in range(N):\n    d_list.add(int(sys.stdin.readline()))\nprint(len(d_list))\n', 'import os\nos.chdir("/Users/kazuki/Documents/Study/data/ryukyu4/4result/")\n\nimport pandas as pd\nimport numpy as np\nimport csv\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n', 'import sys\nN = int(sys.stdin.readline())\nd_list = [int(sys.stdin.readline()) for i in range(N)]\nprint(len(set(d_list)))\n']
2022-04-12 22:32:28.476348 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# B - \n\nN, K = map(int, input().split())\nA = list(map(int, input().split()))\n\nans = 0\nfor i in range(N - 1):\n    for j in range(i + 1, N):\n        if A[i] + A[j] == K:\n            ans += 1\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "# -*- coding: utf-8 -*-\nimport sys\nimport numpy as np\nfrom scipy.optimize import curve_fit\n\n# \u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\ndata = np.loadtxt(\"data.txt\")\n\n# \u521d\u671f\u5024\ninitial_guess = [1.0, 1.0]\n\n# \u30d5\u30a3\u30c3\u30c6\u30a3\u30f3\u30b0\npopt, pcov = curve_fit(func, xdata, ydata, initial_guess)\nprint(popt)\n"
    },
    {
      "index": 2,
      "text": "#\n\nimport sys\n\nN = int(sys.stdin.readline())\nd_list = []\nfor i in range(N):\n    d_list.append(int(sys.stdin.readline()))\nd_list = set(d_list)\nprint(len(d_list)) \n"
    }
  ],
  "created": 1649802743,
  "object": "edit"
}
2022-04-12 22:32:28.476596 fix syntax errors 3 ['# B - \n\nN, K = map(int, input().split())\nA = list(map(int, input().split()))\n\nans = 0\nfor i in range(N - 1):\n    for j in range(i + 1, N):\n        if A[i] + A[j] == K:\n            ans += 1\n\nprint(ans)\n', '# -*- coding: utf-8 -*-\nimport sys\nimport numpy as np\nfrom scipy.optimize import curve_fit\n\n# データファイル読み込み\ndata = np.loadtxt("data.txt")\n\n# 初期値\ninitial_guess = [1.0, 1.0]\n\n# フィッティング\npopt, pcov = curve_fit(func, xdata, ydata, initial_guess)\nprint(popt)\n', '#\n\nimport sys\n\nN = int(sys.stdin.readline())\nd_list = []\nfor i in range(N):\n    d_list.append(int(sys.stdin.readline()))\nd_list = set(d_list)\nprint(len(d_list)) \n']
2022-04-12 22:32:28.476626 size on output set 8
2022-04-12 22:32:28.476636 num operations 2
2022-04-12 22:32:28.476641 size on input set 1
2022-04-12 22:32:34.029064 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())  # \u6a19\u6e96\u5165\u529b\u304b\u3089\u6574\u6570\u3092\u53d6\u5f97\n\nd_list = []  # d_list\u3068\u3044\u3046\u7a7a\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\nfor i in range(n):  # n\u56de\u7e70\u308a\u8fd4\u3059\n    d_list.append(int(input()))  # d_list\u306b\u6a19\u6e96\u5165\u529b\u304b\u3089\u6574\u6570\u3092\u8ffd\u52a0\n\nd_set = set(d_list)  # d_list\u3092set\u306b\u5909\u63db\n\nprint(len(d_set))  # d_set\u306e\u9577\u3055\u3092\u51fa\u529b\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\n\nd_list = []\nfor i in range(n):\n    d_list.append(int(input()))\n\nd_set = set(d_list)\n\n\n#test\nprint(len(d_set))\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\n\nd_list = []\nfor i in range(n):\n    d_list.append(int(input()))\nd_set = set(d_list)\nprint(len(d_set))\n"
    }
  ],
  "created": 1649802748,
  "object": "edit"
}
2022-04-12 22:32:34.029254 fix spelling mistakes 3 ['\n\nn = int(input())  # 標準入力から整数を取得\n\nd_list = []  # d_listという空のリストを作成\nfor i in range(n):  # n回繰り返す\n    d_list.append(int(input()))  # d_listに標準入力から整数を追加\n\nd_set = set(d_list)  # d_listをsetに変換\n\nprint(len(d_set))  # d_setの長さを出力\n', '\n\nn = int(input())\n\nd_list = []\nfor i in range(n):\n    d_list.append(int(input()))\n\nd_set = set(d_list)\n\n\n#test\nprint(len(d_set))\n', '\nn = int(input())\n\nd_list = []\nfor i in range(n):\n    d_list.append(int(input()))\nd_set = set(d_list)\nprint(len(d_set))\n']
2022-04-12 22:32:34.029286 size on output set 3
2022-04-12 22:32:34.029293 size on input set 3
2022-04-12 22:32:37.063505 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\nd_list = [int(input()) for i in range(n)]\nprint(len(set(d_list)))\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\nd_list = []\nfor i in range(n):\n    d_list.append(int(input()))\nd_set = set(d_list)\nprint(len(d_set))\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())  # 1\u884c\u76ee\n\nd_list = []\nfor i in range(n):\n    d_list.append(int(input()))  # 2\u884c\u76ee\u4ee5\u964d\nd_set = set(d_list)\nprint(len(d_set))\n"
    }
  ],
  "created": 1649802754,
  "object": "edit"
}
2022-04-12 22:32:37.063689 fix syntax errors 3 ['n = int(input())\nd_list = [int(input()) for i in range(n)]\nprint(len(set(d_list)))\n', 'n = int(input())\nd_list = []\nfor i in range(n):\n    d_list.append(int(input()))\nd_set = set(d_list)\nprint(len(d_set))\n', '\nn = int(input())  # 1行目\n\nd_list = []\nfor i in range(n):\n    d_list.append(int(input()))  # 2行目以降\nd_set = set(d_list)\nprint(len(d_set))\n']
2022-04-12 22:32:38.641038 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\n\nd_list = []\nfor i in range(n):\n    d_list.append(int(input()))\n\nd_set = set(d_list)\n\n\n# test\nprint(len(d_set))\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\n\nd_list = []\nfor i in range(n):\n    d_list.append(int(input()))\nd_set = set(d_list)\n\n\n#test\nprint(len(d_set))\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\n\nd_list = []\nfor i in range(n):\n    d_list.append(int(input()))\n\nd_set = set(d_list)\n\n\n#test2\nprint(len(d_set))\n"
    }
  ],
  "created": 1649802757,
  "object": "edit"
}
2022-04-12 22:32:38.641214 fix syntax errors 3 ['\n\nn = int(input())\n\nd_list = []\nfor i in range(n):\n    d_list.append(int(input()))\n\nd_set = set(d_list)\n\n\n# test\nprint(len(d_set))\n', '\n\nn = int(input())\n\nd_list = []\nfor i in range(n):\n    d_list.append(int(input()))\nd_set = set(d_list)\n\n\n#test\nprint(len(d_set))\n', '\n\nn = int(input())\n\nd_list = []\nfor i in range(n):\n    d_list.append(int(input()))\n\nd_set = set(d_list)\n\n\n#test2\nprint(len(d_set))\n']
2022-04-12 22:32:58.675520 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())  # \u6a19\u6e96\u5165\u529b\u304b\u3089\u6574\u6570\u3092\u53d6\u5f97\n\nd_list = []  # d_list\u3068\u3044\u3046\u7a7a\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\nfor i in range(n):  # n\u56de\u7e70\u308a\u8fd4\u3059\n    d_list.append(int(input()))  # d_list\u306b\u6a19\u6e96\u5165\u529b\u304b\u3089\u6574\u6570\u3092\u8ffd\u52a0\n\nd_set = set(d_list)  # d_list\u3092set\u306b\u5909\u63db\n\nprint(len(d_set))  # d_set\u306e\u9577\u3055\u3092\u51fa\u529b\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())  # \u6a19\u6e96\u5165\u529b\u304b\u3089\u6574\u6570\u3092\u53d6\u5f97\nd_list = []  # d_list\u3068\u3044\u3046\u7a7a\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\nfor i in range(n):  # n\u56de\u7e70\u308a\u8fd4\u3059\n    d_list.append(int(input()))  # d_list\u306b\u6a19\u6e96\u5165\u529b\u304b\u3089\u6574\u6570\u3092\u8ffd\u52a0\nd_set = set(d_list)  # d_list\u3092set\u306b\u5909\u63db\nprint(len(d_set))  # d_set\u306e\u9577\u3055\u3092\u51fa\u529b\n"
    },
    {
      "index": 2,
      "text": "\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# \u30c7\u30fc\u30bf\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\nN = 256            # \u30b5\u30f3\u30d7\u30eb\u6570\ndt = 0.01          # \u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u9593\u9694\nfq = 5             # \u5468\u6ce2\u6570\nfs = 1 / dt        # \u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u5468\u6ce2\u6570\nt = np.arange(0, N*dt, dt)  # \u6642\u9593\u8ef8\nfreq = np.linspace(0, 1.0/dt, N)  # \u5468\u6ce2\u6570\u8ef8\n\n# \u4fe1\u53f7\u3092\u751f\u6210\uff08\u5468\u6ce2\u657010\u306e\u6b63\u5f26\u6ce2\uff09\nf = np.sin(2*np.pi*fq*t)\n\n# \u9ad8\u901f\u30d5\u30fc\u30ea\u30a8\u5909\u63db\nF = np.fft.fft(f)\n\n# \u632f\u5e45\u30b9\u30da\u30af\u30c8\u30eb\u3092\u8a08\u7b97\nAmp = np.abs(F)\n\n# \u30d1\u30ef\u30fc\u30b9\u30da\u30af\u30c8\u30eb\u3092\u8a08\u7b97\nPow = Amp ** 2\n\n# \u632f\u5e45\u30b9\u30da\u30af\u30c8\u30eb\u3092\u6574\u5f62\nAmp_amp = Amp / N * 2  # \u4ea4\u6d41\u6210\u5206\u306f2\u500d\u4e0d\u8981\nAmp_amp[0] = Amp_amp[0] / 2  # \u76f4\u6d41\u6210\u5206\uff08\u4eca\u56de\u306f\u6271\u308f\u306a\u3044\u3051\u3069\uff09\u306f2\u500d\u4e0d\u8981\n\n# \u30d1\u30ef\u30fc\u30b9\u30da\u30af\u30c8\u30eb\u3092\u6574\u5f62\nPow_amp = Pow / N\nPow_amp[0] = Pow_amp[0] / 2  # \u76f4\u6d41\u6210\u5206\uff08\u4eca\u56de\u306f\u6271\u308f\u306a\u3044\u3051\u3069\uff09\u306f2\u500d\u4e0d\u8981\n\n# \u6ce2\u5f62\u3092\u63cf\u753b\nplt.subplot(311)  # 3\u884c1\u5217\u306e\u30b0\u30e9\u30d5\u306e1\u756a\u76ee\u306e\u4f4d\u7f6e\u306b\u30d7\u30ed\u30c3\u30c8\nplt.plot(t, f)\nplt.xlabel(\"Time\")\nplt.ylabel(\"Signal\")\n\n# \u632f\u5e45\u30b9\u30da\u30af\u30c8\u30eb\u3092\u63cf\u753b\nplt.subplot(312)  # 3\u884c1\u5217\u306e\u30b0\u30e9\u30d5\u306e2\u756a\u76ee\u306e\u4f4d\u7f6e\u306b\u30d7\u30ed\u30c3\u30c8\nplt.plot(freq, Amp_amp)\nplt.xlabel(\"Frequency\")\nplt.ylabel(\"Amplitude spectrum\")\n\n# \u30d1\u30ef\u30fc\u30b9\u30da\u30af\u30c8\u30eb\u3092\u63cf\u753b\nplt.subplot(313)  # 3\u884c1\u5217\u306e\u30b0\u30e9\u30d5\u306e3\u756a\u76ee\u306e\u4f4d\u7f6e\u306b\u30d7\u30ed\u30c3\u30c8\nplt.plot(freq, Pow_amp)\nplt.xlabel(\"Frequency\")\nplt.ylabel(\"Power spectrum\")\n\nplt.show()\n"
    }
  ],
  "created": 1649802758,
  "object": "edit"
}
2022-04-12 22:32:58.675791 fix syntax errors 3 ['\nn = int(input())  # 標準入力から整数を取得\n\nd_list = []  # d_listという空のリストを作成\nfor i in range(n):  # n回繰り返す\n    d_list.append(int(input()))  # d_listに標準入力から整数を追加\n\nd_set = set(d_list)  # d_listをsetに変換\n\nprint(len(d_set))  # d_setの長さを出力\n', '\n\nn = int(input())  # 標準入力から整数を取得\nd_list = []  # d_listという空のリストを作成\nfor i in range(n):  # n回繰り返す\n    d_list.append(int(input()))  # d_listに標準入力から整数を追加\nd_set = set(d_list)  # d_listをsetに変換\nprint(len(d_set))  # d_setの長さを出力\n', '\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# データのパラメータ\nN = 256            # サンプル数\ndt = 0.01          # サンプリング間隔\nfq = 5             # 周波数\nfs = 1 / dt        # サンプリング周波数\nt = np.arange(0, N*dt, dt)  # 時間軸\nfreq = np.linspace(0, 1.0/dt, N)  # 周波数軸\n\n# 信号を生成（周波数10の正弦波）\nf = np.sin(2*np.pi*fq*t)\n\n# 高速フーリエ変換\nF = np.fft.fft(f)\n\n# 振幅スペクトルを計算\nAmp = np.abs(F)\n\n# パワースペクトルを計算\nPow = Amp ** 2\n\n# 振幅スペクトルを整形\nAmp_amp = Amp / N * 2  # 交流成分は2倍不要\nAmp_amp[0] = Amp_amp[0] / 2  # 直流成分（今回は扱わないけど）は2倍不要\n\n# パワースペクトルを整形\nPow_amp = Pow / N\nPow_amp[0] = Pow_amp[0] / 2  # 直流成分（今回は扱わないけど）は2倍不要\n\n# 波形を描画\nplt.subplot(311)  # 3行1列のグラフの1番目の位置にプロット\nplt.plot(t, f)\nplt.xlabel("Time")\nplt.ylabel("Signal")\n\n# 振幅スペクトルを描画\nplt.subplot(312)  # 3行1列のグラフの2番目の位置にプロット\nplt.plot(freq, Amp_amp)\nplt.xlabel("Frequency")\nplt.ylabel("Amplitude spectrum")\n\n# パワースペクトルを描画\nplt.subplot(313)  # 3行1列のグラフの3番目の位置にプロット\nplt.plot(freq, Pow_amp)\nplt.xlabel("Frequency")\nplt.ylabel("Power spectrum")\n\nplt.show()\n']
2022-04-12 22:32:58.675841 size on output set 9
