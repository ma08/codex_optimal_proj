["\nimport math\n\ndef solve(a, b):\n    if a == b:\n        return 0\n    n = len(a)\n    if n % 2 == 1:\n        if a[math.floor(n/2)] == b[math.floor(n/2)]:\n            return solve(a[:math.floor(n/2)] + a[math.floor(n/2)+1:], b[:math.floor(n/2)] + b[math.floor(n/2)+1:])\n        else:\n            return 1\n    else:\n        if a[math.floor(n/2)-1:math.floor(n/2)+1] == b[math.floor(n/2)-1:math.floor(n/2)+1]:\n            return solve(a[:math.floor(n/2)-1] + a[math.floor(n/2)+1:], b[:math.floor(n/2)-1] + b[math.floor(n/2)+1:])\n        else:\n            return 1\n\n\ndef test():\n    assert solve(\"abacaba\", \"bacabaa\") == 4\n    assert solve(\"zcabd\", \"dbacz\") == 0\n    assert solve(\"abcabc\", \"abcabc\") == 0\n    assert solve(\"abcdabcd\", \"abcdabcd\") == 0\n    assert solve(\"a\", \"a\") == 0\n    assert solve(\"a\", \"b\") == 1\n    assert solve(\"ab\", \"ba\") == 1\n    assert solve(\"ab\", \"ab\") == 0\n    assert solve(\"abcd\", \"abcd\") == 0\n    assert solve(\"abcd\", \"dcba\") == 1\n    assert solve(\"abcde\", \"abcde\") == 0\n    assert solve(\"abcde\", \"edcba\") == 1", ""]