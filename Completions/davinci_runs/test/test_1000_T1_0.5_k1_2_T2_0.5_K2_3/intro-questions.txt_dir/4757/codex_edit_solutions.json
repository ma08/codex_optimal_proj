["\n\nvillagers = int(input())\nnights = int(input())\nbard = int(input())\nnights_songs = []\nfor _ in range(nights):\n    nights_songs.append(input().split()[1:])\n\nsongs = set()\nfor i in range(nights-1):\n    if bard in nights_songs[i]:\n        songs.add(i)\n    else:\n        for j in range(i+1, nights):\n            if i != j and set(nights_songs[i]).intersection(set(nights_songs[j])) != set():\n                songs.add(i)\n                songs.add(j)\n\nfor i in range(1, villagers+1):\n    if bard == i:\n        continue\n    for j in range(nights):\n        if i in nights_songs[j] and j not in songs:\n            break\n    else:\n        print(i)\n", "\n\nfrom sys import stdin\nfrom collections import deque\n\ndef main():\n    n = int(stdin.readline())\n    e = int(stdin.readline()) #number of songs\n    songs = {}\n    for i in range(1, n+1):\n        songs[i] = set()\n\n    for i in range(e):\n        line = stdin.readline().split()\n        for j in range(1, int(line[0])): #for each song\n            songs[int(line[j])].add(i)\n\n    q = deque()\n    q.append(1)\n    known = set()\n    while len(q) > 0:\n        curr = q.popleft()\n        known.add(curr)\n        for i in range(2, n):\n            if i not in known and len(songs[i].difference(songs[curr])) == 0:\n                q.append(i)\n\n    for i in range(1, n):\n        if i in known:\n            print(i)\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\nfrom collections import deque\n\ndef main():\n    n = int(stdin.readline())\n    e = int(stdin.readline())\n    songs = {}\n    for i in range(1, n+1): # initialise songs\n        songs[i] = set() # set of people who have heard the song\n\n    for i in range(e):\n        line = stdin.readline().split()\n        for j in range(1, int(line[0])+1): # for each song\n            songs[int(line[j])].add(i)\n\n    q = deque()\n    q.append(1)\n    known = set()\n    while len(q) > 0:\n        curr = q.popleft()\n        known.add(curr)\n        for i in range(2, n+1):\n            if i not in known and len(songs[i].difference(songs[curr])) == 0:\n                q.append(i)\n\n    for i in range(1, n+1):\n        if i in known:\n            print(i)\n\nif __name__ == '__main__':\n    main()\n", "\n\nvillagers = int(input())  # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0449\u0438\u043d\nnights = int(input())  # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043d\u043e\u0447\u0435\u0439\nbard = 1  # \u0431\u0430\u0440\u0434\nnights_songs = []  # \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0435\u0441\u0435\u043d \u043f\u043e \u043d\u043e\u0447\u044f\u043c\nfor i in range(nights):  # \u0432\u0432\u043e\u0434 \u043f\u0435\u0441\u0435\u043d \u043f\u043e \u043d\u043e\u0447\u044f\u043c\n    nights_songs.append(input().split()[1:]) \n\nsongs = set()  # \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0435\u0441\u0435\u043d \u0431\u0430\u0440\u0434\u0430 \u0438 \u0432\u0441\u0435\u0445 \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0449\u0438\u043d\nfor i in range(nights):  # \u043f\u043e\u0438\u0441\u043a \u043f\u0435\u0441\u0435\u043d \u0431\u0430\u0440\u0434\u0430 \u0438 \u0432\u0441\u0435\u0445 \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0449\u0438\u043d\n    if bard in nights_songs[i]:  # \u0435\u0441\u043b\u0438 \u0431\u0430\u0440\u0434 \u043f\u043e\u0451\u0442 \u0432 \u043d\u043e\u0447\u044c i\n        songs.add(i)  # \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u043e\u0447\u044c i \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0435\u0441\u0435\u043d \u0431\u0430\u0440\u0434\u0430 \u0438 \u0432\u0441\u0435\u0445 \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0449\u0438\u043d\n    else:\n        for j in range(nights):  # \u0435\u0441\u043b\u0438 \u0431\u0430\u0440\u0434 \u043d\u0435 \u043f\u043e\u0451\u0442 \u0432 \u043d\u043e\u0447\u044c i\n            if i != j and set(nights_songs[i]).intersection(set(nights_songs[j])) != set(): # \u0435\u0441\u043b\u0438 \u0432 \u043d\u043e\u0447\u0438 i \u0438 j \u043f\u043e\u0451\u0442 \u0445\u043e\u0442\u044f \u0431\u044b \u043e\u0434\u0438\u043d \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0449\u0438\u043d\u0430 \n                songs.add(i) # \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u043e\u0447\u044c i \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0435\u0441\u0435\u043d \u0431\u0430\u0440\u0434\u0430 \u0438 \u0432\u0441\u0435\u0445 \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0449\u0438\u043d\n                songs.add(j) # \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u043e\u0447\u044c j \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0435\u0441\u0435\u043d \u0431\u0430\u0440\u0434\u0430 \u0438 \u0432\u0441\u0435\u0445 \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0449\u0438\u043d\n\nfor i in range(1, villagers+1):  # \u043f\u043e\u0438\u0441\u043a \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0449\u0438\u043d\u044b, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043d\u0435 \u043f\u043e\u0451\u0442\n    for j in range(nights):  # \u043f\u0435\u0440\u0435\u0431\u043e\u0440 \u043d\u043e\u0447\u0435\u0439\n        if i in nights_songs[j] and j not in songs: # \u0435\u0441\u043b\u0438 \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0449\u0438\u043d\u0430 \u043f\u043e\u0451\u0442 \u0432 \u043d\u043e\u0447\u044c j \u0438 \u043d\u043e\u0447\u044c j \u043d\u0435 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u043f\u0435\u0441\u0435\u043d \u0431\u0430\u0440\u0434\u0430 \u0438 \u0432\u0441\u0435\u0445 \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0449\u0438\u043d\n            break  # \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043a \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0449\u0438\u043d\u0435\n    else:\n        print(i)  # \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0449\u0438\u043d\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043d\u0435 \u043f\u043e\u0451\u0442\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    e = int(sys.stdin.readline().strip())\n    songs = []\n    for i in range(e):\n        line = sys.stdin.readline().strip().split()\n        for j in range(1, int(line[0]) + 1):\n            songs.append(line[j])\n    for i in range(1, n + 1):\n        print(songs[i - 1])\n\nmain()\n", "\nimport sys\n\ndef main():\n    villagers = int(sys.stdin.readline().strip())\n    evenings = int(sys.stdin.readline().strip())\n    songs = []\n    for evening in range(evenings):\n        singers = [int(x) for x in sys.stdin.readline().strip().split()]\n        if singers[0] == 1:\n            songs.append(singers[1])\n        else:\n            songs.extend(singers[1:])\n    for villager in range(1, villagers+1):\n        if songs.count(villager) == len(songs):\n            print(villager)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    e = int(sys.stdin.readline().strip())\n    songs = {}\n    for i in range(e):\n        line = sys.stdin.readline().strip().split()\n        k = int(line[1])\n        songs[line[0]] = k\n    for i in songs:\n        print(i)\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    songs = {}\n    for i in range(n):\n        line = sys.stdin.readline().strip().split()\n        k = int(line[1])\n        songs[line[0]] = k\n    for i in range(n):\n        print(songs[i])\n\nmain()\n", "#!/usr/bin/env python3\n\n\n\ndef main():\n    n = int(input())\n    e = int(input())\n    songs = set()\n    for _ in range(e):\n        for i in input().split()[1:]:\n            songs.add(i)\n    for i in range(1, n+1):\n        if str(i) not in songs:\n            print(i)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\" Main function \"\"\"\n    num_villagers = int(input()) # input number of villagers\n    num_nights = int(input()) # input number of nights\n    villagers_night = []\n    for _ in range(num_nights):\n        villagers_night.append(set(map(int, input().split()))) # input villagers per night\n    songs = set()\n    for i in range(num_nights):\n        if 1 in villagers_night[i]: # if the villager 1 is in the input villager set, add the night\n            songs.add(i)\n        else:\n            for j in range(i): # if the villager 1 isn't in the input villager set, check if there is a intersection between the current night and the nights before\n                if villagers_night[i].intersection(villagers_night[j]):\n                    songs.add(i)\n                    break\n    for i in range(num_villagers):\n        if i == 0 or all(i in villagers_night[j] for j in songs): # print the villager number if it is the villager 1 or if the villager is in all the night that villager 1 is in\n            print(i + 1)\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    e = int(sys.stdin.readline().strip())\n    songs = {}\n    for i in range(e):\n        line = sys.stdin.readline().strip().split()\n        k = int(line[1])\n        songs[line[0]] = k\n    for key in songs:\n        print(key)\n\nmain()\n", "\nimport sys\n\ndef main():\n    villagers = int(sys.stdin.readline().strip()) # number of villagers\n    evenings = int(sys.stdin.readline().strip()) # number of evenings\n    songs = []\n    for evening in range(evenings):\n        singers = [int(x) for x in sys.stdin.readline().strip().split()]\n        if singers[0] == 1:\n            songs.append(singers[1])\n        else:\n            songs.extend(singers[1:])\n    for villager in range(1,villagers+1):\n        if songs.count(villager) == len(songs):\n            print(villager)\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\nfrom collections import deque\n\ndef main():\n    n = int(stdin.readline())\n    e = int(stdin.readline()) # number of songs\n    songs = {}\n    for i in range(1, n+1):\n        songs[i] = set() # set of songs that have been heard by person i\n\n    for i in range(e):\n            # add the song to the list of songs heard by person j\n        line = stdin.readline().split()\n        for j in range(1, int(line[0])+1):\n            songs[int(line[j])].add(i)\n\n    q = deque()\n    q.append(1)\n    known = set() # set of people who know the song\n    while len(q) > 0:\n        curr = q.popleft()\n        known.add(curr)\n        for i in range(2, n+1):\n            if i not in known and len(songs[i].difference(songs[curr])) == 0 and i != curr:\n                q.append(i)\n\n    for i in range(1, n+1):\n        if i in known:\n            print(i)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nfrom collections import deque\n\ndef main():\n    n = int(sys.stdin.readline())\n    e = int(sys.stdin.readline()) # number of people\n    songs = {}\n    for i in range(1, n+1): # initialise songs\n        songs[i] = set() # set of people who have heard the song\n\n    for i in range(e):\n        line = sys.stdin.readline().split()\n        for j in range(1, int(line[0])+1): # for each song\n            songs[int(line[j])].add(i)\n\n    q = deque()\n    q.append(1)\n    known = set()\n    while len(q) > 0:\n        curr = q.popleft()\n        known.add(curr)\n        for i in range(2, n+1):\n            if i not in known and len(songs[i].difference(songs[curr])) == 0:\n                q.append(i)\n\n    for i in range(1, n+1):\n        if i in known:\n            print(i)\n\nif __name__ == '__main__':\n    main()\n", "\nfrom sys import stdin\nfrom collections import deque\n\ndef main():\n    n = int(stdin.readline())\n    e = int(stdin.readline())  # number of songs\n    songs = {}\n    for i in range(1, n + 1):\n        songs[i] = set()  # set of songs that have been heard by person i\n\n    for i in range(e):\n        # add the song to the list of songs heard by person j\n        line = stdin.readline().split()\n        for j in range(1, int(line[0]) + 1):\n            songs[int(line[j])].add(i)\n\n    q = deque()\n    q.append(1)\n    known = set()  # set of people who know the song\n    while len(q) > 0:\n        curr = q.popleft()\n        known.add(curr)\n        for i in range(2, n + 1):\n            if i not in known and len(songs[i].difference(songs[curr])) == 0:\n                q.append(i)\n\n    for i in range(1, n + 1):\n        if i in known:\n            print(i)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    \"\"\"Bard's Tale\"\"\"\n    num_villagers = int(input())\n    num_evenings = int(input())\n    bard_list = [1]\n    for _ in range(num_evenings):\n        num_villagers_present = int(input())\n        villager_list = [int(i) for i in input().split()]\n        if 1 in villager_list:\n            for i in villager_list:\n                if i not in bard_list:\n                    bard_list.append(i)\n        else:\n            for i in villager_list:\n                if i not in bard_list:\n                    bard_list.append(i)\n    print(len(bard_list))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    e = int(sys.stdin.readline().strip()) \n    songs = []\n    for i in range(e):\n        line = sys.stdin.readline().strip().split() \n        k = int(line[0]) \n        for j in range(k): \n            songs.append(line[j]) \n    for i in range(1, n + 1):\n        print(i)\n\nmain()\n", "#!/usr/bin/python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    e = int(sys.stdin.readline())\n    barber = 1\n    villagers = set(range(1, n + 1))\n    for i in range(e):\n        line = sys.stdin.readline().split()\n        k = int(line[0])\n        present = set([int(x) for x in line[1:]])\n        if barber in present:\n            villagers = present\n        else:\n            villagers = villagers.intersection(present)\n    print('\\n'.join([str(x) for x in sorted(list(villagers))]))\n\nmain()\n", "\nvillagers = int(input())\nnights = int(input())\nbard = int(input())\nnights_songs = []\nfor i in range(nights):\n    nights_songs.append(input().split()[1:])\n\nsongs = set()\nfor i in range(nights):\n    if bard in nights_songs[i]:\n        songs.add(i)\n    else:\n        for j in range(nights):\n            if i != j and set(nights_songs[i]).intersection(set(nights_songs[j])) != set():\n                songs.add(i)\n                songs.add(j)\n\nfor i in range(1, villagers+1):\n    for j in range(nights):\n        if i in nights_songs[j] and j not in songs:\n            break\n    else:\n        print(i)\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    e = int(sys.stdin.readline().strip())\n    songs = []\n    for i in range(e):\n        line = sys.stdin.readline().strip().split()\n        songs.append(line[1:])\n    for i in range(1, n + 1):\n        print(i)\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    villagers = int(sys.stdin.readline().strip())\n    evenings = int(sys.stdin.readline().strip()) \n    songs = []\n    for evening in range(evenings):\n        singers = [int(x) for x in sys.stdin.readline().strip().split()]\n        if singers[0] == 1 and singers[1] not in songs:\n            songs.append(singers[1])\n        else:\n            songs.extend(singers[1:])\n    for villager in range(1,villagers+1):\n        if songs.count(villager) == len(songs):\n            print(villager)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    \"\"\"Bard's Tale\"\"\"\n    num_villagers = int(input())\n    num_evenings = int(input())\n    bard_list = [1]\n    for _ in range(num_evenings):\n        num_villagers_present = int(input())\n        villager_list = [int(i) for i in input().split()]\n        if 1 in villager_list:\n            for i in villager_list:\n                if i not in bard_list:\n                    bard_list.append(i)\n        else:\n            for i in villager_list:\n                if i not in bard_list:\n                    bard_list.append(i)\n    bard_list.sort(key=int)\n    for i in bard_list:\n        print(i)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\"Bard - \u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e0a\u0e19\"\"\"\n    num_villagers = int(input())\n    num_evenings = int(input())\n    bard_list = [1]\n    for _ in range(num_evenings):\n        num_villagers_present = int(input())\n        villager_list = [int(i) for i in input().split()]\n        if 1 in villager_list:\n            for i in villager_list:\n                if i not in bard_list:\n                    bard_list.append(i)\n        else:\n            for i in villager_list:\n                if i not in bard_list:\n                    bard_list.append(i)\n    bard_list.sort()\n    for i in bard_list:\n        print(i)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\"Bard - \u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e0a\u0e19\n    num_villagers = int(input()) # \u0e08\u0e33\u0e19\u0e27\u0e19\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e0a\u0e19\n    num_evenings = int(input()) # \u0e08\u0e33\u0e19\u0e27\u0e19\u0e04\u0e37\u0e19\n    bard_list = [] # \u0e23\u0e32\u0e22\u0e0a\u0e37\u0e48\u0e2d\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e0a\u0e19\u0e17\u0e35\u0e48\u0e21\u0e35\u0e01\u0e32\u0e23\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e2a\u0e31\u0e21\u0e1e\u0e31\u0e19\u0e18\u0e4c\u0e01\u0e31\u0e19\n    bard_list.append(1) # \u0e1b\u0e23\u0e30\u0e01\u0e32\u0e28\u0e27\u0e48\u0e32\u0e21\u0e35\u0e01\u0e32\u0e23\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e2a\u0e31\u0e21\u0e1e\u0e31\u0e19\u0e18\u0e4c\u0e23\u0e30\u0e2b\u0e27\u0e48\u0e32\u0e07 Bard \u0e01\u0e31\u0e1a\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e0a\u0e19\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14\n    for _ in range(num_evenings): # \u0e27\u0e19\u0e25\u0e39\u0e1b\u0e15\u0e32\u0e21\u0e08\u0e33\u0e19\u0e27\u0e19\u0e04\u0e37\u0e19\n        num_villagers_present = int(input()) # \u0e08\u0e33\u0e19\u0e27\u0e19\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e0a\u0e19\u0e17\u0e35\u0e48\u0e21\u0e32\u0e17\u0e33\u0e01\u0e34\u0e08\u0e01\u0e23\u0e23\u0e21\u0e01\u0e31\u0e19\n        villager_list = [int(i) for i in input().split()] # \u0e23\u0e32\u0e22\u0e0a\u0e37\u0e48\u0e2d\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e0a\u0e19\u0e17\u0e35\u0e48\u0e21\u0e32\u0e17\u0e33\u0e01\u0e34\u0e08\u0e01\u0e23\u0e23\u0e21\u0e01\u0e31\u0e19\n        if 1 in villager_list: # \u0e16\u0e49\u0e32\u0e21\u0e35\u0e01\u0e32\u0e23\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e2a\u0e31\u0e21\u0e1e\u0e31\u0e19\u0e18\u0e4c\u0e23\u0e30\u0e2b\u0e27\u0e48\u0e32\u0e07 Bard \u0e01\u0e31\u0e1a\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e0a\u0e19\u0e43\u0e19\u0e04\u0e37\u0e19\u0e19\u0e31\u0e49\u0e19\n            for i in villager_list: # \u0e27\u0e19\u0e25\u0e39\u0e1b\u0e15\u0e32\u0e21\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e0a\u0e19\u0e17\u0e35\u0e48\u0e21\u0e32\u0e17\u0e33\u0e01\u0e34\u0e08\u0e01\u0e23\u0e23\u0e21\u0e01\u0e31\u0e19\n                if i not in bard_list: # \u0e16\u0e49\u0e32\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e0a\u0e19\u0e19\u0e31\u0e49\u0e19\u0e22\u0e31\u0e07\u0e44\u0e21\u0e48\u0e21\u0e35\u0e01\u0e32\u0e23\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e2a\u0e31\u0e21\u0e1e\u0e31\u0e19\u0e18\u0e4c\u0e01\u0e31\u0e1a Bard\n                    bard_list.append(i) # \u0e40\u0e1e\u0e34\u0e48\u0e21\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e0a\u0e19\u0e19\u0e31\u0e49\u0e19\u0e43\u0e19\u0e23\u0e32\u0e22\u0e0a\u0e37\u0e48\u0e2d\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e0a\u0e19\u0e17\u0e35\u0e48\u0e21\u0e35\u0e01\u0e32\u0e23\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e2a\u0e31\u0e21\u0e1e\u0e31\u0e19\u0e18\u0e4c\u0e01\u0e31\u0e1a Bard\n        else: # \u0e16\u0e49\u0e32\u0e44\u0e21\u0e48\u0e21\u0e35\u0e01\u0e32\u0e23\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e2a\u0e31\u0e21\u0e1e\u0e31\u0e19\u0e18\u0e4c\u0e23\u0e30\u0e2b\u0e27\u0e48\u0e32\u0e07 Bard \u0e01\u0e31\u0e1a\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e0a\u0e19\u0e43\u0e19\u0e04\u0e37\u0e19\u0e19\u0e31\u0e49\u0e19\n            for i in villager_list: # \u0e27\u0e19\u0e25\u0e39\u0e1b\u0e15\u0e32\u0e21\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e0a\u0e19\u0e17\u0e35\u0e48\u0e21\u0e32\u0e17\u0e33\u0e01\u0e34\u0e08\u0e01\u0e23\u0e23\u0e21\u0e01\u0e31\u0e19\n                if i not in bard_list: # \u0e16\u0e49\u0e32\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e0a\u0e19\u0e19\u0e31\u0e49\u0e19\u0e22\u0e31\u0e07\u0e44\u0e21\u0e48\u0e21\u0e35\u0e01\u0e32\u0e23\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e2a\u0e31\u0e21\u0e1e\u0e31\u0e19\u0e18\u0e4c\u0e01\u0e31\u0e1a Bard\n                    bard_list.append(i) # \u0e40\u0e1e\u0e34\u0e48\u0e21\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e0a\u0e19\u0e19\u0e31\u0e49\u0e19\u0e43\u0e19\u0e23\u0e32\u0e22\u0e0a\u0e37\u0e48\u0e2d\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e0a\u0e19\u0e17\u0e35\u0e48\u0e21\u0e35\u0e01\u0e32\u0e23\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e2a\u0e31\u0e21\u0e1e\u0e31\u0e19\u0e18\u0e4c\u0e01\u0e31\u0e1a Bard\n    bard_list.sort() # \u0e40\u0e23\u0e35\u0e22\u0e07\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e23\u0e32\u0e22\u0e0a\u0e37\u0e48\u0e2d\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e0a\u0e19\u0e17\u0e35\u0e48\u0e21\u0e35\u0e01\u0e32\u0e23\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e2a\u0e31\u0e21\u0e1e\u0e31\u0e19\u0e18\u0e4c\u0e01\u0e31\u0e1a Bard\n    for i in bard_list: # \u0e27\u0e19\u0e25\u0e39\u0e1b\u0e15\u0e32\u0e21\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e0a\u0e19\u0e17\u0e35\u0e48\u0e21\u0e35\u0e01\u0e32\u0e23\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e2a\u0e31\u0e21\u0e1e\u0e31\u0e19\u0e18\u0e4c\u0e01\u0e31\u0e1a Bard\n        print(i) # \u0e41\u0e2a\u0e14\u0e07\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e0a\u0e19\u0e17\u0e35\u0e48\u0e21\u0e35\u0e01\u0e32\u0e23\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e2a\u0e31\u0e21\u0e1e\u0e31\u0e19\u0e18\u0e4c\u0e01\u0e31\u0e1a Bard\n    \"\"\"\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\ndef main():\n    n = int(input())\n    e = int(input())\n    songs = set()\n    for _ in range(e):\n        for i in input().split()[1:]:\n            songs.add(i)\n    for i in range(1,n+1):\n        if str(i) not in songs:\n            print(i)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\" Main function\"\"\"\n    num_villagers = int(input())\n    num_nights = int(input())\n    villagers_nights = []\n    for _ in range(num_nights):\n        villagers_nights.append(set(map(int, input().split())))\n    songs = set()\n    for i in range(num_nights):\n        if 1 in villagers_nights[i]:\n            songs.add(i)\n        else:\n            for j in range(i):\n                if villagers_nights[i].intersection(villagers_nights[j]):\n                    songs.add(i)\n                    break\n    for i in range(num_villagers):\n        if i == 0 or all(i + 1 in villagers_nights[j] for j in songs):\n            print(i + 1)\n\nmain()\n", "\nimport collections\nimport heapq\nimport random\nimport time\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    e = int(sys.stdin.readline())\n    barber = 1\n    villagers = set(range(1, n + 1))\n    for i in range(e):\n        line = sys.stdin.readline().split()\n        k = int(line[0])\n        present = set([int(x) for x in line[1:]])\n        if barber in present:\n            villagers = present\n        else:\n            villagers = villagers.intersection(present)\n    print('\\n'.join([str(x) for x in sorted(list(villagers))]))\n\n\nmain()\n", "\nimport sys\n\ndef main():\n    villagers = int(sys.stdin.readline().strip())\n    evenings = int(sys.stdin.readline().strip())\n    songs = []\n    for evening in range(evenings):\n        singers = [int(x) for x in sys.stdin.readline().strip().split()]\n        if singers[0] == 1:\n            songs.append(singers[1])\n        else:\n            songs.extend(singers[1:])\n    print(songs)\n    # for villager in range(1,villagers+1):\n    #     if songs.count(villager) == len(songs):\n    #         print(villager)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    villagers = int(sys.stdin.readline().strip()) # number of villagers\n    evenings = int(sys.stdin.readline().strip()) # number of evenings\n    songs = []\n    for evening in range(evenings):\n        singers = [int(x) for x in sys.stdin.readline().strip().split()]\n        if singers[0] == 1:\n            songs.append(singers[1])\n        else:\n            songs.extend(singers[1:])\n    for villager in range(1,villagers+1):\n        if songs.count(villager) == len(songs):\n            print(villager)\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\nfrom collections import deque\n\ndef main():\n    n = int(stdin.readline())\n    e = int(stdin.readline()) # number of people\n    songs = {}\n    for i in range(1, n + 1): # initialise songs\n        songs[i] = set() # set of people who have heard the song\n\n    for i in range(e):\n        line = stdin.readline().split()\n        for j in range(1, int(line[0]) + 1): # for each song\n            songs[int(line[j])].add(i)\n\n    q = deque()\n    q.append(1)\n    known = set()\n    while len(q) > 0:\n        curr = q.popleft()\n        known.add(curr)\n        for i in range(2, n + 1):\n            if i not in known and len(songs[i].difference(songs[curr])) == 0:\n                q.append(i)\n\n    for i in range(1, n + 1):\n        if i in known:\n            print(i)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    \"\"\" Main function \"\"\"\n    num_villagers = int(input())\n    num_nights = int(input())\n    villagers_night = []\n    for _ in range(num_nights):\n        villagers_night.append(set(map(int, input().split())))\n    songs = set()\n    for i in range(num_nights):\n        if 1 in villagers_night[i]:\n            songs.add(i)\n        else:\n            for j in range(i):\n                if villagers_night[i].intersection(villagers_night[j]):\n                    songs.add(i)\n                    break\n    for i in range(num_villagers):\n        if i == 0 or all(i in villagers_night[j] for j in songs):\n            print(i + 1)\n\nmain()\n", "\n\nvillagers = int(input())\nnights = int(input())\nbard = int(input())\nnights_songs = []\nfor _ in range(nights):\n    nights_songs.append(set(input().split()[1:]))\n\nsongs = set()\nfor i in range(nights-1):\n    if bard in nights_songs[i]:\n        songs.add(i)\n    else:\n        for j in range(i+1, nights):\n            if i != j and nights_songs[i].intersection(nights_songs[j]) != set():\n                songs.add(i)\n                songs.add(j)\n\nfor i in range(1, villagers+1) if bard != i else []:\n    for j in range(nights):\n        if i in nights_songs[j] and j not in songs:\n            break\n    else:\n        print(i)\n", "#!/usr/bin/env python3\n\n\n\ndef main():\n    n = int(input())\n    e = int(input())\n    songs = set()\n    for _ in range(e):\n        for i in input().split()[1:]: \n            songs.add(i)\n    for i in range(1,n+1):\n        if str(i) not in songs:\n            print(i)\n\nif __name__ == \"__main__\":\n    main()\n", "\n#!/usr/bin/env python\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    \"\"\" Main function \"\"\"\n    num_villagers = int(input())\n    num_nights = int(input())\n    villagers_nights = []\n    for _ in range(num_nights):\n        villagers_nights.append(set(map(int, input().split())))\n    songs = set()\n    for i in range(num_nights):\n        if 1 in villagers_nights[i]:\n            songs.add(i)\n        else:\n            for j in range(i):\n                if villagers_nights[i].intersection(villagers_nights[j]):\n                    songs.add(i)\n                    break\n    for i in range(num_villagers):\n        if i == 0 or all(i in villagers_nights[j] for j in songs):\n            print(i + 1)\n\nmain()\n", "\n\ndef main():\n    \"\"\" Main function.\"\"\"\n    num_villagers = int(input())\n    num_nights = int(input())\n    villagers_nights = []\n    for _ in range(num_nights):\n        villagers_nights.append(set(map(int, input().split())))\n    songs = set()\n    for i in range(num_nights):\n        if 1 in villagers_nights[i]:\n            songs.add(i)\n        else:\n            for j in range(i):\n                if villagers_nights[i].intersection(villagers_nights[j]):\n                    songs.add(i)\n                    break\n    for i in range(num_villagers):\n        if i == 0 or all(i+1 in villagers_nights[j] for j in songs):\n            print(i + 1)\n\nmain()\n", "\n\nfrom sys import stdin\nfrom collections import deque\n\ndef main():\n    n = int(stdin.readline())\n    e = int(stdin.readline()) # number of songs\n    songs = {}\n    for i in range(1, n+1):\n        songs[i] = set() # set of songs that have been heard by person i\n\n    for i in range(e):\n            # add the song to the list of songs heard by person j\n        line = stdin.readline().split()\n        for j in range(1, int(line[0])):\n            songs[int(line[j])].add(i)\n\n    q = deque()\n    q.append(1)\n    known = set() # set of people who know the song\n    while len(q) > 0:\n        curr = q.popleft()\n        known.add(curr)\n        for i in range(1, n+1):\n            if i not in known and len(songs[i].difference(songs[curr])) == 0:\n                q.append(i)\n\n    for i in range(1, n+1):\n        if i in known:\n            print(i)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    e = int(sys.stdin.readline().strip())\n    song = []\n    for i in range(e):\n        line = sys.stdin.readline().strip().split()\n        k = int(line[0])\n        for j in range(k):\n            song.append(line[j])\n    for i in range(1, n + 1):\n        print(i)\n\nmain()\n", "\n\ndef main():\n    \"\"\" Main function.\"\"\"\n    num_villagers = int(input())\n    num_nights = int(input())\n    villagers_nights = []\n    for _ in range(num_nights):\n        villagers_nights.append(set(map(int, input().split())))\n    songs = set()\n    for i in range(num_nights):\n        if 1 in villagers_nights[i]:\n            songs.add(i)\n        else:\n            for j in range(i):\n                if villagers_nights[i].intersection(villagers_nights[j]):\n                    songs.add(i)\n                    break\n    for i in range(num_villagers):\n        if i == 0 or all(i + 1 in villagers_nights[j] for j in songs):\n            print(i + 1)\n\nmain()\n", "\n\ndef main():\n    \"\"\"Bard\"\"\"\n    num_villagers = int(input())\n    num_evenings = int(input())\n    bard_list = [1]\n    for _ in range(num_evenings):\n        num_villagers_present = int(input())\n        villager_list = [int(i) for i in input().split()]\n        for i in villager_list:\n            if i not in bard_list:\n                bard_list.append(i)\n    bard_list.sort()\n    for i in bard_list:\n        print(i)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    e = int(sys.stdin.readline().strip())\n    songs = {}\n    for i in range(e):\n        line = sys.stdin.readline().strip().split()\n        k = int(line[0])\n        for j in range(k):\n            songs[line[j]] = i\n    for i in range(1, n + 1):\n        print(i)\n\nmain()\n", "\n\ndef main():\n    \"\"\" Main function.\"\"\"\n    num_villagers = int(input())\n    num_nights = int(input())\n    villagers_nights = []\n    for _ in range(num_nights):\n        villagers_nights.append(set(map(int, input().split())))\n    songs = set()\n    for i in range(num_nights):\n        if 1 in villagers_nights[i]:\n            songs.add(i)\n        else:\n            for j in range(i):\n                if villagers_nights[i].intersection(villagers_nights[j]):\n                    songs.add(i)\n                    break\n    for k in range(num_villagers):\n        if k == 0 or all(k in villagers_nights[j] for j in songs):\n            print(k + 1)\n\nmain()\n", "\n\ndef bard(num_villagers, num_evenings):\n    \"\"\"Bard\"\"\"\n    bard_list = []\n    bard_list.append(1)\n    for _ in range(num_evenings):\n        num_villagers_present = int(input())\n        villager_list = [int(i) for i in input().split()]\n        if 1 in villager_list:\n            for i in villager_list:\n                if i not in bard_list:\n                    bard_list.append(i)\n        else:\n            for i in villager_list:\n                if i not in bard_list:\n                    bard_list.append(i)\n    bard_list.sort()\n    for i in bard_list:\n        print(i)\n\ndef main():\n    \"\"\"Bard\"\"\"\n    num_villagers = int(input())\n    num_evenings = int(input())\n    bard(num_villagers, num_evenings)\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    villagers = int(sys.stdin.readline().strip())\n    evenings = int(sys.stdin.readline().strip())\n    songs = []\n    for evening in range(evenings):\n        singers = [int(x) for x in sys.stdin.readline().strip().split()]\n        if singers[0] == 1:\n            songs.append(singers[1])\n        else:\n            songs.extend(singers[1:])\n    for villager in range(1, villagers+1):\n        if songs.count(villager) == len(songs):\n            print(villager)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    villagers = int(input())\n    nights = int(input())\n    bard = int(input())\n    nights_songs = []\n    for i in range(nights):\n        nights_songs.append(input().split()[1:])\n\n    songs = set()\n    for i in range(nights):\n        if bard in nights_songs[i]:\n                songs.add(i)\n        else:\n            for j in range(nights):\n                if i != j and set(nights_songs[i]).intersection(set(nights_songs[j])) != set():\n                    songs.add(i)\n                    songs.add(j)\n\n    for i in range(1, villagers+1):\n        for j in range(nights):\n            if i in nights_songs[j] and j not in songs:\n                break\n        else:\n            print(i)\n\nif __name__ == '__main__':\n    main()\n", "\n#!/usr/bin/env python\n\ndef main():\n    n = int(input())\n    e = int(input())\n    songs = set()\n    for _ in range(e):\n        for i in input().split()[1:]:\n            songs.add(i)\n    for i in range(1,n+1):\n        if str(i) not in songs:\n            print(i)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\" Main function \"\"\"\n    num_villagers = int(input())\n    num_nights = int(input())\n    villagers_night = []\n    for _ in range(num_nights):\n        villagers_night.append(set(map(int, input().split())))\n    songs = set()\n    for i in range(num_nights):\n        if 1 in villagers_night[i]:\n            songs.add(i)\n        else:\n            for j in range(i):\n                if villagers_night[i].intersection(villagers_night[j]):\n                    songs.add(i)\n                    break\n    for i in range(num_villagers):\n        if i == 0 or all(i + 1 in villagers_night[j] for j in songs):\n            print(i + 1)\n\nmain()\n", "\ndef bard(num_villagers, num_evenings):\n    \"\"\"bard\"\"\"\n    bard_list = []\n    bard_list.append(1)\n    for _ in range(num_evenings):\n        num_villagers_present = int(input())\n        villager_list = [int(i) for i in input().split()]\n        if 1 in villager_list:\n            for i in villager_list:\n                if i not in bard_list:\n                    bard_list.append(i)\n        else:\n            for i in villager_list:\n                if i not in bard_list:\n                    bard_list.append(i)\n    bard_list.sort()\n    for i in bard_list:\n        print(i)\n\ndef main():\n    \"\"\"Bard's Tale\"\"\"\n    num_villagers = int(input())\n    num_evenings = int(input())\n    bard(num_villagers, num_evenings)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    villagers = int(sys.stdin.readline().strip())\n    evenings = int(sys.stdin.readline().strip())\n    songs = []\n    for evening in range(evenings):\n        singers = [int(x) for x in sys.stdin.readline().strip().split()]\n        if singers[0] == 1:\n            songs.append(singers[1])\n        else:\n            songs.extend(singers[1:])\n    for villager in range(1,villagers+1):\n        if songs.count(villager) == len(songs):\n            print(villager)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python\n\n\n\ndef main():\n    n = int(input())\n    e = int(input())\n    songs = set()\n    for _ in range(e):\n        for i in input().split()[1:]:\n            songs.add(i)\n    for i in range(1,n+1):\n        if str(i) not in songs:\n            print(i)\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\n\n\ndef main():\n    n = int(input())\n    e = int(input())\n    songs = set()\n    for _ in range(e):\n        for i in input().split()[1:]:\n            songs.add(i)\n    for i in range(1, n+1):\n        if str(i) not in songs:\n\n            print(i)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    e = int(sys.stdin.readline())\n    barber = 1\n    villagers = set(range(1, n + 1))\n    for i in range(e):\n        line = sys.stdin.readline().split()\n        k = int(line[0])\n        present = set([int(x) for x in line[1:]])\n        if barber in present:\n            villagers = present\n        else:\n            villagers = villagers.intersection(present)\n    print('\\n'.join([str(x) for x in sorted(list(villagers))])\n\nmain()\n", "\ns = \"abc\"\nprint(s[1:2])\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    e = int(sys.stdin.readline().strip())\n    songs = {}\n    for i in range(e):\n        line = sys.stdin.readline().strip().split()\n        k = int(line[0])\n        for j in range(k):\n            songs[line[j]] = i\n    for i in range(1, n + 1):\n        print(songs[i])\n\nmain()\n", "\n\nvillagers = int(input())  # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0449\u0438\u043d\nnights = int(input())  # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043d\u043e\u0447\u0435\u0439\nbard = 1  # \u0431\u0430\u0440\u0434\nnights_songs = []  # \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0435\u0441\u0435\u043d \u043f\u043e \u043d\u043e\u0447\u044f\u043c\nfor i in range(nights):  # \u0432\u0432\u043e\u0434 \u043f\u0435\u0441\u0435\u043d \u043f\u043e \u043d\u043e\u0447\u044f\u043c\n    nights_songs.append(input().split()[1:])\n\nsongs = set()  # \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0435\u0441\u0435\u043d \u0431\u0430\u0440\u0434\u0430 \u0438 \u0432\u0441\u0435\u0445 \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0449\u0438\u043d\nfor i in range(nights):  # \u043f\u043e\u0438\u0441\u043a \u043f\u0435\u0441\u0435\u043d \u0431\u0430\u0440\u0434\u0430 \u0438 \u0432\u0441\u0435\u0445 \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0449\u0438\u043d\n    if bard in nights_songs[i]:  # \u0435\u0441\u043b\u0438 \u0431\u0430\u0440\u0434 \u043f\u043e\u0451\u0442 \u0432 \u043d\u043e\u0447\u044c i\n        songs.add(i)  # \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u043e\u0447\u044c i \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0435\u0441\u0435\u043d \u0431\u0430\u0440\u0434\u0430 \u0438 \u0432\u0441\u0435\u0445 \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0449\u0438\u043d\n    else:\n        for j in range(nights):  # \u0435\u0441\u043b\u0438 \u0431\u0430\u0440\u0434 \u043d\u0435 \u043f\u043e\u0451\u0442 \u0432 \u043d\u043e\u0447\u044c i\n            if i != j and set(nights_songs[i]).intersection(set(nights_songs[j])) != set():  # \u0435\u0441\u043b\u0438 \u0432 \u043d\u043e\u0447\u0438 i \u0438 j \u043f\u043e\u0451\u0442 \u0445\u043e\u0442\u044f \u0431\u044b \u043e\u0434\u0438\u043d \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0449\u0438\u043d\u0430\n                songs.add(i)  # \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u043e\u0447\u044c i \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0435\u0441\u0435\u043d \u0431\u0430\u0440\u0434\u0430 \u0438 \u0432\u0441\u0435\u0445 \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0449\u0438\u043d\n                songs.add(j)  # \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u043e\u0447\u044c j \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0435\u0441\u0435\u043d \u0431\u0430\u0440\u0434\u0430 \u0438 \u0432\u0441\u0435\u0445 \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0449\u0438\u043d\n\nfor i in range(1, villagers+1): # \u043f\u043e\u0438\u0441\u043a \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0449\u0438\u043d\u044b, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043d\u0435 \u043f\u043e\u0451\u0442\n    for j in range(nights): # \u043f\u0435\u0440\u0435\u0431\u043e\u0440 \u043d\u043e\u0447\u0435\u0439\n        if i in nights_songs[j] and j not in songs: # \u0435\u0441\u043b\u0438 \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0449\u0438\u043d\u0430 \u043f\u043e\u0451\u0442 \u0432 \u043d\u043e\u0447\u044c j \u0438 \u043d\u043e\u0447\u044c j \u043d\u0435 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u043f\u0435\u0441\u0435\u043d \u0431\u0430\u0440\u0434\u0430 \u0438 \u0432\u0441\u0435\u0445 \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0449\u0438\u043d\n            break # \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043a \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0449\u0438\u043d\u0435\n    else:\n        print(i) # \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0449\u0438\u043d\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043d\u0435 \u043f\u043e\u0451\u0442\n", "\n\nfrom sys import stdin\nfrom collections import deque\n\ndef main():\n    n = int(stdin.readline())\n    e = int(stdin.readline())  # number of songs\n    songs = {}\n    for i in range(1, n + 1):\n        songs[i] = set()\n\n    for i in range(e):\n        line = stdin.readline().split()\n        for j in range(1, int(line[0]) + 1):  # for each song\n            songs[int(line[j])].add(i)\n\n    q = deque()\n    q.append(1)\n    known = set()\n    while len(q) > 0:\n        curr = q.popleft()\n        known.add(curr)\n        for i in range(2, n + 1):\n            if i not in known and len(songs[i].difference(songs[curr])) == 0:\n                q.append(i)\n\n    for i in range(1, n + 1):\n        if i in known:\n            print(i)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\ndef main():\n    n = int(input())\n    e = int(input())\n    songs = set()\n    for _ in range(e):\n        for i in input().split()[1:]:\n            songs.add(i)\n    for i in range(1,n+1):\n        if str(i) not in songs:\n            print(i)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\"Bard\"\"\"\n    num_villagers = int(input())\n    num_evenings = int(input())\n    bard_list = []\n    bard_list.append(1)\n    for _ in range(num_evenings):\n        num_villagers_present = int(input())\n        villager_list = [int(i) for i in input().split()]\n        if 1 in villager_list:\n            for i in villager_list:\n                if i not in bard_list:\n                    bard_list.append(i)\n        else:\n            for i in villager_list:\n                if i not in bard_list:\n                    bard_list.append(i)\n    bard_list.sort()\n    for i in bard_list:\n        print(i)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom sys import stdin\nfrom collections import deque\n\ndef main():\n    n = int(stdin.readline())\n    e = int(stdin.readline()) #number of songs\n    songs = {}\n    for i in range(1, n+1):\n        songs[i] = set()\n\n    for i in range(e):\n        line = stdin.readline().split()\n        for j in range(1, int(line[0]) + 1): #for each song\n            songs[int(line[j])].add(i) #add song to set of songs\n\n    q = deque()\n    q.append(1)\n    known = set()\n    while len(q) > 0:\n        curr = q.popleft()\n        known.add(curr)\n        for i in range(2, n+1):\n            if i not in known and len(songs[i].difference(songs[curr])) == 0:\n                q.append(i)\n\n    for i in range(1, n+1):\n        if i in known:\n            print(i)\n\nif __name__ == '__main__':\n    main()\n"]