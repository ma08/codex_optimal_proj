2022-04-13 07:24:50.262252 num operations 2
2022-04-13 07:24:50.262262 size on input set 1
2022-04-13 07:24:54.744663 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef calcTime(currTime, targetTime):\n    #calculate the difference between the current time and the target time\n    #if the difference is negative, add 24 hours\n    #this will give us the time until the target time\n    #if the difference is greater than or equal to 24 hours, subtract 24 hours\n    #this will give us the time until the target time\n    #return the time until the target time\n    currTime = currTime.split(':')\n    targetTime = targetTime.split(':')\n    currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])]\n    targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])]\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]\n    if diff[0] < 0:\n        diff[0] += 24\n    if diff[1] < 0:\n        diff[0] -= 1\n        diff[1] += 60\n    if diff[2] < 0:\n        diff[1] -= 1\n        diff[2] += 60\n    if diff[0] > 24:\n        diff[0] -= 24\n    return ':'.join(map(str, diff))\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef calcTime(currTime, targetTime):\n    # Calculate the difference between the current time and the target time\n    # If the difference is negative, add 24 hours\n    # This will give us the time until the target time\n    # If the difference is greater than 24 hours, subtract 24 hours\n    # This will give us the time until the target time\n    # Return the time until the target time\n    currTime = currTime.split(':')\n    targetTime = targetTime.split(':')\n    currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])]\n    targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])]\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]\n    if diff[0] < 0:\n        diff[0] += 24\n    if diff[1] < 0:\n        diff[0] -= 1\n        diff[1] += 60\n    if diff[2] < 0:\n        diff[1] -= 1\n        diff[2] += 60\n    if diff[0] > 24:\n        diff[0] -= 24\n    return ':'.join(map(str, diff))\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef calcTime(currTime, targetTime):\n    #if the difference is greater than 24 hours, subtract 24 hours\n    #this will give us the time until the target time\n    #calculate the difference between the current time and the target time\n    #if the difference is negative, add 24 hours\n    #this will give us the time until the target time\n    #return the time until the target time\n    currTime = currTime.split(':')\n    targetTime = targetTime.split(':')\n    currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])]\n    targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])]\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]\n    if diff[0] < 0:\n        diff[0] += 24\n    if diff[1] < 0:\n        diff[0] -= 1\n        diff[1] += 60\n    if diff[2] < 0:\n        diff[1] -= 1\n        diff[2] += 60\n    if diff[0] > 24:\n        diff[0] -= 24\n    return ':'.join(map(str, diff))\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649834690,
  "object": "edit"
}
2022-04-13 07:24:54.744892 fix spelling mistakes 3 ["\n\nimport sys\n\ndef calcTime(currTime, targetTime):\n    #calculate the difference between the current time and the target time\n    #if the difference is negative, add 24 hours\n    #this will give us the time until the target time\n    #if the difference is greater than or equal to 24 hours, subtract 24 hours\n    #this will give us the time until the target time\n    #return the time until the target time\n    currTime = currTime.split(':')\n    targetTime = targetTime.split(':')\n    currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])]\n    targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])]\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]\n    if diff[0] < 0:\n        diff[0] += 24\n    if diff[1] < 0:\n        diff[0] -= 1\n        diff[1] += 60\n    if diff[2] < 0:\n        diff[1] -= 1\n        diff[2] += 60\n    if diff[0] > 24:\n        diff[0] -= 24\n    return ':'.join(map(str, diff))\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef calcTime(currTime, targetTime):\n    # Calculate the difference between the current time and the target time\n    # If the difference is negative, add 24 hours\n    # This will give us the time until the target time\n    # If the difference is greater than 24 hours, subtract 24 hours\n    # This will give us the time until the target time\n    # Return the time until the target time\n    currTime = currTime.split(':')\n    targetTime = targetTime.split(':')\n    currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])]\n    targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])]\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]\n    if diff[0] < 0:\n        diff[0] += 24\n    if diff[1] < 0:\n        diff[0] -= 1\n        diff[1] += 60\n    if diff[2] < 0:\n        diff[1] -= 1\n        diff[2] += 60\n    if diff[0] > 24:\n        diff[0] -= 24\n    return ':'.join(map(str, diff))\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef calcTime(currTime, targetTime):\n    #if the difference is greater than 24 hours, subtract 24 hours\n    #this will give us the time until the target time\n    #calculate the difference between the current time and the target time\n    #if the difference is negative, add 24 hours\n    #this will give us the time until the target time\n    #return the time until the target time\n    currTime = currTime.split(':')\n    targetTime = targetTime.split(':')\n    currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])]\n    targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])]\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]\n    if diff[0] < 0:\n        diff[0] += 24\n    if diff[1] < 0:\n        diff[0] -= 1\n        diff[1] += 60\n    if diff[2] < 0:\n        diff[1] -= 1\n        diff[2] += 60\n    if diff[0] > 24:\n        diff[0] -= 24\n    return ':'.join(map(str, diff))\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 07:24:54.744941 size on output set 3
2022-04-13 07:24:54.744948 size on input set 3
2022-04-13 07:25:07.656302 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\nimport os\n\n\ndef get_file_info(file_path):\n    #get the file path\n    #get the size of the file in bytes\n    #get the last modified date\n    #return the size and date\n    size = os.path.getsize(file_path)\n    date = os.path.getmtime(file_path)\n    return [size, date]\n\ndef main(file_path):\n    #get the file path and print the size and date of the file\n    info = get_file_info(file_path)\n    print('Size: {} bytes'.format(info[0]))\n    print('Last modified: {}'.format(info[1]))\n\n\nif __name__ == '__main__':\n    main(sys.argv[1])\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef calcTime(currTime, targetTime):\n    #calculate the difference between the current time and the target time\n    #if the difference is negative, add 24 hours\n    #this will give us the time until the target time\n    #if the difference is greater than or equal to 24 hours, subtract 24 hours\n    #this will give us the time until the target time\n    #return the time until the target time\n    currTime = currTime.split(':')\n    targetTime = targetTime.split(':')\n    currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])]\n    targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])]\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]\n    if diff[0] < 0:\n        diff[0] += 24\n    if diff[1] < 0:\n        diff[0] -= 1\n        diff[1] += 60\n    if diff[2] < 0:\n        diff[1] -= 1\n        diff[2] += 60\n    if diff[0] > 24:\n        diff[0] -= 24\n    return ':'.join(str(x) for x in diff)\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef calcTime(currTime, targetTime):\n    #calculate the difference between the current time and the target time\n    #if the difference is negative, add 24 hours\n    #this will give us the time until the target time\n    #if the difference is greater than or equal to 24 hours, subtract 24 hours\n    #this will give us the time until the target time\n    #return the time until the target time\n    currTime = currTime.split(':')\n    targetTime = targetTime.split(':')\n    currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])]\n    targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])]\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]\n    if diff[0] < 0:\n        diff[0] += 24\n    if diff[1] < 0:\n        diff[1] += 60\n    if diff[2] < 0:\n        diff[2] += 60\n    if diff[0] > 24:\n        diff[0] -= 24\n    return ':'.join(map(str, diff))\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649834694,
  "object": "edit"
}
2022-04-13 07:25:07.656572 fix syntax errors 3 ["import sys\nimport os\n\n\ndef get_file_info(file_path):\n    #get the file path\n    #get the size of the file in bytes\n    #get the last modified date\n    #return the size and date\n    size = os.path.getsize(file_path)\n    date = os.path.getmtime(file_path)\n    return [size, date]\n\ndef main(file_path):\n    #get the file path and print the size and date of the file\n    info = get_file_info(file_path)\n    print('Size: {} bytes'.format(info[0]))\n    print('Last modified: {}'.format(info[1]))\n\n\nif __name__ == '__main__':\n    main(sys.argv[1])\n", "\n\nimport sys\n\ndef calcTime(currTime, targetTime):\n    #calculate the difference between the current time and the target time\n    #if the difference is negative, add 24 hours\n    #this will give us the time until the target time\n    #if the difference is greater than or equal to 24 hours, subtract 24 hours\n    #this will give us the time until the target time\n    #return the time until the target time\n    currTime = currTime.split(':')\n    targetTime = targetTime.split(':')\n    currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])]\n    targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])]\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]\n    if diff[0] < 0:\n        diff[0] += 24\n    if diff[1] < 0:\n        diff[0] -= 1\n        diff[1] += 60\n    if diff[2] < 0:\n        diff[1] -= 1\n        diff[2] += 60\n    if diff[0] > 24:\n        diff[0] -= 24\n    return ':'.join(str(x) for x in diff)\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef calcTime(currTime, targetTime):\n    #calculate the difference between the current time and the target time\n    #if the difference is negative, add 24 hours\n    #this will give us the time until the target time\n    #if the difference is greater than or equal to 24 hours, subtract 24 hours\n    #this will give us the time until the target time\n    #return the time until the target time\n    currTime = currTime.split(':')\n    targetTime = targetTime.split(':')\n    currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])]\n    targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])]\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]\n    if diff[0] < 0:\n        diff[0] += 24\n    if diff[1] < 0:\n        diff[1] += 60\n    if diff[2] < 0:\n        diff[2] += 60\n    if diff[0] > 24:\n        diff[0] -= 24\n    return ':'.join(map(str, diff))\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 07:25:23.881384 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef calcTime(currTime, targetTime):\n    # Calculate the difference between the current time and the target time\n    # If the difference is negative, add 24 hours\n    # This will give us the time until the target time\n    # If the difference is greater than 24 hours, subtract 24 hours\n    # This will give us the time until the target time\n    # Return the time until the target time\n    currTime = currTime.split(':') # Split the current time into hours, minutes, and seconds\n    targetTime = targetTime.split(':') # Split the target time into hours, minutes, and seconds\n    currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])] # Convert the current time to integers\n    targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])] # Convert the target time to integers\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]] # Calculate the difference between the current time and the target time\n    if diff[0] < 0: # If the difference in the hour is negative, add 24 hours\n        diff[0] += 24 # Add 24 hours\n    if diff[1] < 0: # If the difference in the minute is negative, subtract 1 hour and add 60 minutes\n        diff[0] -= 1 # Subtract 1 hour\n        diff[1] += 60 # Add 60 minutes\n    if diff[2] < 0: # If the difference in the second is negative, subtract 1 minute and add 60 seconds\n        diff[1] -= 1 # Subtract 1 minute\n        diff[2] += 60 # Add 60 seconds\n    if diff[0] > 24: # If the difference in the hour is greater than 24 hours, subtract 24 hours\n        diff[0] -= 24 # Subtract 24 hours\n    return ':'.join(map(str, diff)) # Return the difference in hours, minutes, and seconds\n\ndef main():\n    currTime = sys.stdin.readline().strip() # Read the current time from stdin\n    targetTime = sys.stdin.readline().strip() # Read the target time from stdin\n    print(calcTime(currTime, targetTime)) # Calculate the time until the target time\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef calcTime(currTime, targetTime):\n    # Calculate the difference between the current time and the target time\n    # If the difference is negative, add 24 hours\n    # This will give us the time until the target time\n    # If the difference is greater than 24 hours, subtract 24 hours\n    # This will give us the time until the target time\n    # Return the time until the target time\n    currTime = [int(currTime.split(':')[0]), int(currTime.split(':')[1]), int(currTime.split(':')[2])]\n    targetTime = [int(targetTime.split(':')[0]), int(targetTime.split(':')[1]), int(targetTime.split(':')[2])]\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]\n    if diff[0] < 0:\n        diff[0] += 24\n    if diff[1] < 0:\n        diff[0] -= 1\n        diff[1] += 60\n    if diff[2] < 0:\n        diff[1] -= 1\n        diff[2] += 60\n    if diff[0] > 24:\n        diff[0] -= 24\n    return ':'.join(map(str, diff))\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef calcTime(currTime, targetTime):\n    # Calculate the difference between the current time and the target time\n    # If the difference is negative, add 24 hours\n    # This will give us the time until the target time\n    # If the difference is greater than 24 hours, subtract 24 hours\n    # This will give us the time until the target time\n    # Return the time until the target time\n    curr_time = currTime.split(':')\n    target_time = targetTime.split(':')\n    curr_time = [int(curr_time[0]), int(curr_time[1]), int(curr_time[2])]\n    target_time = [int(target_time[0]), int(target_time[1]), int(target_time[2])]\n    diff = [target_time[0] - curr_time[0], target_time[1] - curr_time[1], target_time[2] - curr_time[2]]\n    if diff[0] < 0:\n        diff[0] += 24\n    if diff[1] < 0:\n        diff[0] -= 1\n        diff[1] += 60\n    if diff[2] < 0:\n        diff[1] -= 1\n        diff[2] += 60\n    if diff[0] > 24:\n        diff[0] -= 24\n    return ':'.join(map(str, diff))\n\ndef main():\n    curr_time = sys.stdin.readline().strip()\n    target_time = sys.stdin.readline().strip()\n    print(calcTime(curr_time, target_time))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649834707,
  "object": "edit"
}
2022-04-13 07:25:23.881583 fix syntax errors 3 ["\n\nimport sys\n\ndef calcTime(currTime, targetTime):\n    # Calculate the difference between the current time and the target time\n    # If the difference is negative, add 24 hours\n    # This will give us the time until the target time\n    # If the difference is greater than 24 hours, subtract 24 hours\n    # This will give us the time until the target time\n    # Return the time until the target time\n    currTime = currTime.split(':') # Split the current time into hours, minutes, and seconds\n    targetTime = targetTime.split(':') # Split the target time into hours, minutes, and seconds\n    currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])] # Convert the current time to integers\n    targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])] # Convert the target time to integers\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]] # Calculate the difference between the current time and the target time\n    if diff[0] < 0: # If the difference in the hour is negative, add 24 hours\n        diff[0] += 24 # Add 24 hours\n    if diff[1] < 0: # If the difference in the minute is negative, subtract 1 hour and add 60 minutes\n        diff[0] -= 1 # Subtract 1 hour\n        diff[1] += 60 # Add 60 minutes\n    if diff[2] < 0: # If the difference in the second is negative, subtract 1 minute and add 60 seconds\n        diff[1] -= 1 # Subtract 1 minute\n        diff[2] += 60 # Add 60 seconds\n    if diff[0] > 24: # If the difference in the hour is greater than 24 hours, subtract 24 hours\n        diff[0] -= 24 # Subtract 24 hours\n    return ':'.join(map(str, diff)) # Return the difference in hours, minutes, and seconds\n\ndef main():\n    currTime = sys.stdin.readline().strip() # Read the current time from stdin\n    targetTime = sys.stdin.readline().strip() # Read the target time from stdin\n    print(calcTime(currTime, targetTime)) # Calculate the time until the target time\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef calcTime(currTime, targetTime):\n    # Calculate the difference between the current time and the target time\n    # If the difference is negative, add 24 hours\n    # This will give us the time until the target time\n    # If the difference is greater than 24 hours, subtract 24 hours\n    # This will give us the time until the target time\n    # Return the time until the target time\n    currTime = [int(currTime.split(':')[0]), int(currTime.split(':')[1]), int(currTime.split(':')[2])]\n    targetTime = [int(targetTime.split(':')[0]), int(targetTime.split(':')[1]), int(targetTime.split(':')[2])]\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]\n    if diff[0] < 0:\n        diff[0] += 24\n    if diff[1] < 0:\n        diff[0] -= 1\n        diff[1] += 60\n    if diff[2] < 0:\n        diff[1] -= 1\n        diff[2] += 60\n    if diff[0] > 24:\n        diff[0] -= 24\n    return ':'.join(map(str, diff))\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef calcTime(currTime, targetTime):\n    # Calculate the difference between the current time and the target time\n    # If the difference is negative, add 24 hours\n    # This will give us the time until the target time\n    # If the difference is greater than 24 hours, subtract 24 hours\n    # This will give us the time until the target time\n    # Return the time until the target time\n    curr_time = currTime.split(':')\n    target_time = targetTime.split(':')\n    curr_time = [int(curr_time[0]), int(curr_time[1]), int(curr_time[2])]\n    target_time = [int(target_time[0]), int(target_time[1]), int(target_time[2])]\n    diff = [target_time[0] - curr_time[0], target_time[1] - curr_time[1], target_time[2] - curr_time[2]]\n    if diff[0] < 0:\n        diff[0] += 24\n    if diff[1] < 0:\n        diff[0] -= 1\n        diff[1] += 60\n    if diff[2] < 0:\n        diff[1] -= 1\n        diff[2] += 60\n    if diff[0] > 24:\n        diff[0] -= 24\n    return ':'.join(map(str, diff))\n\ndef main():\n    curr_time = sys.stdin.readline().strip()\n    target_time = sys.stdin.readline().strip()\n    print(calcTime(curr_time, target_time))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 07:25:33.811958 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\nimport sys\n\ndef calcTime(currTime, targetTime, d):\n    #if the difference is greater than 24 hours, subtract 24 hours\n    #this will give us the time until the target time\n    #calculate the difference between the current time and the target time\n    #if the difference is negative, add 24 hours\n    #this will give us the time until the target time\n    d = d.split(':')\n    #return the time until the target time\n    currTime = currTime.split(':')\n    d = [int(d[0]), int(d[1]), int(d[2])]\n    targetTime = targetTime.split(':')\n    currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])]\n    targetTime[0] += d[0]\n    targetTime[1] += d[1]\n    targetTime[2] += d[2]\n    targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])]\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]\n    if diff[0] < 0:\n        diff[0] += 24\n    if diff[1] < 0:\n        diff[0] -= 1\n        diff[1] += 60\n    if diff[2] < 0:\n        diff[1] -= 1\n        diff[2] += 60\n    if diff[0] > 24:\n        diff[0] -= 24\n    return ':'.join(map(str, diff))\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    d = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef calcTime(currTime, targetTime):\n    #if the difference is greater than 24 hours, subtract 24 hours\n    #this will give us the time until the target time\n    #calculate the difference between the current time and the target time\n    #if the difference is negative, add 24 hours\n    #this will give us the time until the target time\n    #return the time until the target time\n    currTime = currTime.split(':')\n    targetTime = targetTime.split(':')\n    currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])]\n    targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])]\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]\n    diff[0] = diff[0] % 24\n    diff[1] = diff[1] % 60\n    diff[2] = diff[2] % 60\n    return ':'.join(map(str, diff))\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport time\n\ndef calcTime(currTime, targetTime):\n    #if the difference is greater than 24 hours, subtract 24 hours\n    #this will give us the time until the target time\n    #calculate the difference between the current time and the target time\n    #if the difference is negative, add 24 hours\n    #this will give us the time until the target time\n    #return the time until the target time\n    currTime = time.strptime(currTime, '%H:%M:%S')\n    targetTime = time.strptime(targetTime, '%H:%M:%S')\n    currTime = time.mktime(currTime)\n    targetTime = time.mktime(targetTime)\n    diff = targetTime - currTime\n    if diff < 0:\n        diff += 86400\n    return time.strftime('%H:%M:%S', time.gmtime(diff))\n\ndef main():\n    currTime = input()\n    targetTime = input()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649834723,
  "object": "edit"
}
2022-04-13 07:25:33.812136 fix syntax errors 3 ["\n\nimport math\nimport sys\n\ndef calcTime(currTime, targetTime, d):\n    #if the difference is greater than 24 hours, subtract 24 hours\n    #this will give us the time until the target time\n    #calculate the difference between the current time and the target time\n    #if the difference is negative, add 24 hours\n    #this will give us the time until the target time\n    d = d.split(':')\n    #return the time until the target time\n    currTime = currTime.split(':')\n    d = [int(d[0]), int(d[1]), int(d[2])]\n    targetTime = targetTime.split(':')\n    currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])]\n    targetTime[0] += d[0]\n    targetTime[1] += d[1]\n    targetTime[2] += d[2]\n    targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])]\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]\n    if diff[0] < 0:\n        diff[0] += 24\n    if diff[1] < 0:\n        diff[0] -= 1\n        diff[1] += 60\n    if diff[2] < 0:\n        diff[1] -= 1\n        diff[2] += 60\n    if diff[0] > 24:\n        diff[0] -= 24\n    return ':'.join(map(str, diff))\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    d = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef calcTime(currTime, targetTime):\n    #if the difference is greater than 24 hours, subtract 24 hours\n    #this will give us the time until the target time\n    #calculate the difference between the current time and the target time\n    #if the difference is negative, add 24 hours\n    #this will give us the time until the target time\n    #return the time until the target time\n    currTime = currTime.split(':')\n    targetTime = targetTime.split(':')\n    currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])]\n    targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])]\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]\n    diff[0] = diff[0] % 24\n    diff[1] = diff[1] % 60\n    diff[2] = diff[2] % 60\n    return ':'.join(map(str, diff))\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n", "\nimport time\n\ndef calcTime(currTime, targetTime):\n    #if the difference is greater than 24 hours, subtract 24 hours\n    #this will give us the time until the target time\n    #calculate the difference between the current time and the target time\n    #if the difference is negative, add 24 hours\n    #this will give us the time until the target time\n    #return the time until the target time\n    currTime = time.strptime(currTime, '%H:%M:%S')\n    targetTime = time.strptime(targetTime, '%H:%M:%S')\n    currTime = time.mktime(currTime)\n    targetTime = time.mktime(targetTime)\n    diff = targetTime - currTime\n    if diff < 0:\n        diff += 86400\n    return time.strftime('%H:%M:%S', time.gmtime(diff))\n\ndef main():\n    currTime = input()\n    targetTime = input()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 07:25:33.812183 size on output set 9
2022-04-13 07:25:33.812194 num operations 2
2022-04-13 07:25:33.812199 size on input set 1
2022-04-13 07:25:39.530570 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef parseTime(time_str):\n    h,m,s = time_str.split(\":\")\n    return int(h), int(m), int(s)\n\ndef getTimeDiff(current_time, target_time):\n    h1,m1,s1 = parseTime(current_time)\n    h2,m2,s2 = parseTime(target_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\ndef formatTime(h,m,s):\n    return \"{:02}:{:02}:{:02}\".format(h,m,s)\n\ndef main():\n    current_time = input()\n    target_time = input()\n    h,m,s = getTimeDiff(current_time, target_time)\n    print(formatTime(h,m,s))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef parse_time(time_str):\n    h,m,s = time_str.split(\":\")\n    return int(h), int(m), int(s)\n\ndef get_time_diff(current_time, desired_time):\n    h1,m1,s1 = parse_time(current_time)\n    h2,m2,s2 = parse_time(desired_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\ndef format_time(h,m,s):\n    return \"{:02}:{:02}:{:02}\".format(h,m,s)\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h,m,s = get_time_diff(current_time, desired_time)\n    print(format_time(h,m,s))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef parseTime(time_str):\n    h,m,s = time_str.split(\":\")\n    return int(h), int(m), int(s)\n\ndef getTimeDiff(current_time, desired_time):\n    h1,m1,s1 = parseTime(current_time)\n    h2,m2,s2 = parseTime(desired_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\ndef formatTime(h,m,s):\n    return \"{:02}:{:02}:{:02}\".format(h,m,s)\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h,m,s = getTimeDiff(current_time, desired_time)\n    print(formatTime(h,m,s))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649834733,
  "object": "edit"
}
2022-04-13 07:25:39.530812 fix spelling mistakes 3 ['\n\ndef parseTime(time_str):\n    h,m,s = time_str.split(":")\n    return int(h), int(m), int(s)\n\ndef getTimeDiff(current_time, target_time):\n    h1,m1,s1 = parseTime(current_time)\n    h2,m2,s2 = parseTime(target_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\ndef formatTime(h,m,s):\n    return "{:02}:{:02}:{:02}".format(h,m,s)\n\ndef main():\n    current_time = input()\n    target_time = input()\n    h,m,s = getTimeDiff(current_time, target_time)\n    print(formatTime(h,m,s))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef parse_time(time_str):\n    h,m,s = time_str.split(":")\n    return int(h), int(m), int(s)\n\ndef get_time_diff(current_time, desired_time):\n    h1,m1,s1 = parse_time(current_time)\n    h2,m2,s2 = parse_time(desired_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\ndef format_time(h,m,s):\n    return "{:02}:{:02}:{:02}".format(h,m,s)\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h,m,s = get_time_diff(current_time, desired_time)\n    print(format_time(h,m,s))\n\nif __name__ == "__main__":\n    main()\n', '\ndef parseTime(time_str):\n    h,m,s = time_str.split(":")\n    return int(h), int(m), int(s)\n\ndef getTimeDiff(current_time, desired_time):\n    h1,m1,s1 = parseTime(current_time)\n    h2,m2,s2 = parseTime(desired_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\ndef formatTime(h,m,s):\n    return "{:02}:{:02}:{:02}".format(h,m,s)\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h,m,s = getTimeDiff(current_time, desired_time)\n    print(formatTime(h,m,s))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 07:25:39.530853 size on output set 3
2022-04-13 07:25:39.530859 size on input set 3
2022-04-13 07:25:47.564810 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef parse_time(time_str):\n    h, m, s = time_str.split(\":\")\n    return int(h), int(m), int(s)\n\n\ndef get_time_diff(current_time, desired_time):\n    h1, m1, s1 = parse_time(current_time)\n    h2, m2, s2 = parse_time(desired_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\n\ndef format_time(h, m, s):\n    return \"{:02}:{:02}:{:02}\".format(h, m, s)\n\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h, m, s = get_time_diff(current_time, desired_time)\n    print(format_time(h, m, s))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef parse_time(time_str):\n    h, m, s = time_str.split(\":\")\n    return int(h), int(m), int(s)\n\n\ndef get_time_diff(current_time, desired_time):\n    h1, m1, s1 = parse_time(current_time)\n    h2, m2, s2 = parse_time(desired_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\n\ndef format_time(h, m, s):\n    return \"{:02}:{:02}:{:02}\".format(h, m, s)\n\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h, m, s = get_time_diff(current_time, desired_time)\n    print(format_time(h, m, s))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef parse_time(time_str):\n    h, m, s = time_str.split(\":\")\n    return int(h), int(m), int(s)\n\ndef get_time_diff(current_time, desired_time):\n    h1, m1, s1 = parse_time(current_time)\n    h2, m2, s2 = parse_time(desired_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\ndef format_time(h, m, s):\n    return \"{:02}:{:02}:{:02}\".format(h, m, s)\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h, m, s = get_time_diff(current_time, desired_time)\n    print(format_time(h, m, s))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649834739,
  "object": "edit"
}
2022-04-13 07:25:47.564994 fix syntax errors 3 ['\n\ndef parse_time(time_str):\n    h, m, s = time_str.split(":")\n    return int(h), int(m), int(s)\n\n\ndef get_time_diff(current_time, desired_time):\n    h1, m1, s1 = parse_time(current_time)\n    h2, m2, s2 = parse_time(desired_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\n\ndef format_time(h, m, s):\n    return "{:02}:{:02}:{:02}".format(h, m, s)\n\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h, m, s = get_time_diff(current_time, desired_time)\n    print(format_time(h, m, s))\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef parse_time(time_str):\n    h, m, s = time_str.split(":")\n    return int(h), int(m), int(s)\n\n\ndef get_time_diff(current_time, desired_time):\n    h1, m1, s1 = parse_time(current_time)\n    h2, m2, s2 = parse_time(desired_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\n\ndef format_time(h, m, s):\n    return "{:02}:{:02}:{:02}".format(h, m, s)\n\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h, m, s = get_time_diff(current_time, desired_time)\n    print(format_time(h, m, s))\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef parse_time(time_str):\n    h, m, s = time_str.split(":")\n    return int(h), int(m), int(s)\n\ndef get_time_diff(current_time, desired_time):\n    h1, m1, s1 = parse_time(current_time)\n    h2, m2, s2 = parse_time(desired_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\ndef format_time(h, m, s):\n    return "{:02}:{:02}:{:02}".format(h, m, s)\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h, m, s = get_time_diff(current_time, desired_time)\n    print(format_time(h, m, s))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 07:25:55.306128 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef parseTime(time_str):\n    h, m, s = time_str.split(\":\")\n    return int(h), int(m), int(s)\n\ndef getTimeDiff(current_time, target_time):\n    h1, m1, s1 = parseTime(current_time)\n    h2, m2, s2 = parseTime(target_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\ndef formatTime(h, m, s):\n    return \"{:02}:{:02}:{:02}\".format(h, m, s)\n\ndef main():\n    current_time = input()\n    target_time = input()\n    h, m, s = getTimeDiff(current_time, target_time)\n    print(formatTime(h, m, s))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef parseTime(time_str):\n    h, m, s = time_str.split(\":\")\n    return int(h), int(m), int(s)\n\n\ndef getTimeDiff(current_time, target_time):\n    h1, m1, s1 = parseTime(current_time)\n    h2, m2, s2 = parseTime(target_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\n\ndef formatTime(h, m, s):\n    return \"{:02}:{:02}:{:02}\".format(h, m, s)\n\n\ndef main():\n    current_time = input()\n    target_time = input()\n    h, m, s = getTimeDiff(current_time, target_time)\n    print(formatTime(h, m, s))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n\n\ndef parseTime(time_str):\n    h, m, s = time_str.split(\":\")\n    return int(h), int(m), int(s)\n\n\ndef getTimeDiff(current_time, target_time):\n    h1, m1, s1 = parseTime(current_time)\n    h2, m2, s2 = parseTime(target_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\n\ndef formatTime(h, m, s):\n    return \"{:02}:{:02}:{:02}\".format(h, m, s)\n\n\ndef main():\n    current_time = input()\n    target_time = input()\n    h,m,s = getTimeDiff(current_time, target_time)\n    print(formatTime(h,m,s))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649834747,
  "object": "edit"
}
2022-04-13 07:25:55.306385 fix syntax errors 3 ['\n\ndef parseTime(time_str):\n    h, m, s = time_str.split(":")\n    return int(h), int(m), int(s)\n\ndef getTimeDiff(current_time, target_time):\n    h1, m1, s1 = parseTime(current_time)\n    h2, m2, s2 = parseTime(target_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\ndef formatTime(h, m, s):\n    return "{:02}:{:02}:{:02}".format(h, m, s)\n\ndef main():\n    current_time = input()\n    target_time = input()\n    h, m, s = getTimeDiff(current_time, target_time)\n    print(formatTime(h, m, s))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef parseTime(time_str):\n    h, m, s = time_str.split(":")\n    return int(h), int(m), int(s)\n\n\ndef getTimeDiff(current_time, target_time):\n    h1, m1, s1 = parseTime(current_time)\n    h2, m2, s2 = parseTime(target_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\n\ndef formatTime(h, m, s):\n    return "{:02}:{:02}:{:02}".format(h, m, s)\n\n\ndef main():\n    current_time = input()\n    target_time = input()\n    h, m, s = getTimeDiff(current_time, target_time)\n    print(formatTime(h, m, s))\n\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python3\n\n\ndef parseTime(time_str):\n    h, m, s = time_str.split(":")\n    return int(h), int(m), int(s)\n\n\ndef getTimeDiff(current_time, target_time):\n    h1, m1, s1 = parseTime(current_time)\n    h2, m2, s2 = parseTime(target_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\n\ndef formatTime(h, m, s):\n    return "{:02}:{:02}:{:02}".format(h, m, s)\n\n\ndef main():\n    current_time = input()\n    target_time = input()\n    h,m,s = getTimeDiff(current_time, target_time)\n    print(formatTime(h,m,s))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 07:26:02.649414 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef parseTime(time_str):\n    h, m, s = time_str.split(\":\")\n    return int(h), int(m), int(s)\n\ndef getTimeDiff(current_time, desired_time):\n    h1, m1, s1 = parseTime(current_time)\n    h2, m2, s2 = parseTime(desired_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\ndef formatTime(h, m, s):\n    return \"{:02}:{:02}:{:02}\".format(h, m, s)\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h, m, s = getTimeDiff(current_time, desired_time)\n    print(formatTime(h, m, s))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef parseTime(time_str):\n    h, m, s = time_str.split(\":\")\n    return int(h), int(m), int(s)\n\ndef getTimeDiff(current_time, desired_time):\n    h1, m1, s1 = parseTime(current_time)\n    h2, m2, s2 = parseTime(desired_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\ndef formatTime(h,m,s):\n    return \"{:02}:{:02}:{:02}\".format(h,m,s)\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h, m, s = getTimeDiff(current_time, desired_time)\n    print(formatTime(h, m, s))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "def parseTime(time_str):\n    h, m, s = time_str.split(\":\")\n    return int(h), int(m), int(s)\n\ndef getTimeDiff(current_time, desired_time):\n    h1, m1, s1 = parseTime(current_time)\n    h2, m2, s2 = parseTime(desired_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\ndef formatTime(h, m, s):\n    return \"{:02}:{:02}:{:02}\".format(h, m, s)\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h, m, s = getTimeDiff(current_time, desired_time)\n    print(formatTime(h, m, s))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649834755,
  "object": "edit"
}
2022-04-13 07:26:02.649622 fix syntax errors 3 ['\ndef parseTime(time_str):\n    h, m, s = time_str.split(":")\n    return int(h), int(m), int(s)\n\ndef getTimeDiff(current_time, desired_time):\n    h1, m1, s1 = parseTime(current_time)\n    h2, m2, s2 = parseTime(desired_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\ndef formatTime(h, m, s):\n    return "{:02}:{:02}:{:02}".format(h, m, s)\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h, m, s = getTimeDiff(current_time, desired_time)\n    print(formatTime(h, m, s))\n\nif __name__ == "__main__":\n    main()\n', '\ndef parseTime(time_str):\n    h, m, s = time_str.split(":")\n    return int(h), int(m), int(s)\n\ndef getTimeDiff(current_time, desired_time):\n    h1, m1, s1 = parseTime(current_time)\n    h2, m2, s2 = parseTime(desired_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\ndef formatTime(h,m,s):\n    return "{:02}:{:02}:{:02}".format(h,m,s)\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h, m, s = getTimeDiff(current_time, desired_time)\n    print(formatTime(h, m, s))\n\nif __name__ == "__main__":\n    main()\n', 'def parseTime(time_str):\n    h, m, s = time_str.split(":")\n    return int(h), int(m), int(s)\n\ndef getTimeDiff(current_time, desired_time):\n    h1, m1, s1 = parseTime(current_time)\n    h2, m2, s2 = parseTime(desired_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\ndef formatTime(h, m, s):\n    return "{:02}:{:02}:{:02}".format(h, m, s)\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h, m, s = getTimeDiff(current_time, desired_time)\n    print(formatTime(h, m, s))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 07:26:02.649681 size on output set 9
2022-04-13 07:26:02.649698 num operations 2
2022-04-13 07:26:02.649707 size on input set 1
2022-04-13 07:26:14.857924 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(\":\")\n    time_now = [int(x) for x in time_now]\n\n    time_expiration = sys.stdin.readline()\n    time_expiration = time_expiration.strip().split(\":\")\n    time_expiration = [int(x) for x in time_expiration]\n\n    if time_explosion[0] < time_now[0]:\n        time_explosion[0] += 24\n\n    if time_explosion[1] < time_now[1]:\n        time_explosion[0] -= 1\n        time_explosion[1] += 60\n\n    if time_explosion[2] < time_now[2]:\n        time_explosion[1] -= 1\n        time_explosion[2] += 60\n\n    time_explosion = [str(x) for x in time_explosion]\n    print(\":\".join(time_explosion))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(\":\")\n    time_now = [int(x) for x in time_now]\n\n    time_explodes = sys.stdin.readline()\n    time_explodes = time_explodes.strip().split(\":\")\n    time_explodes = [int(x) for x in time_explodes]\n\n    if time_explodes[0] < time_now[0]:\n        time_explodes[0] += 24\n\n    if time_explodes[1] < time_now[1]:\n        time_explodes[0] -= 1\n        time_explodes[1] += 60\n\n    if time_explodes[2] < time_now[2]:\n        time_explodes[1] -= 1\n        time_explodes[2] += 60\n\n    time_explodes = [str(x) for x in time_explodes]\n    print(\":\".join(time_explodes))\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(\":\")\n    time_now = [int(x) for x in time_now]\n\n    time_explosion_in = sys.stdin.readline()\n    time_explosion_in = time_explosion_in.strip().split(\":\")\n    time_explosion_in = [int(x) for x in time_explosion_in]\n\n    if time_explosion_in[0] < time_now[0]:\n        time_explosion_in[0] += 24\n\n    if time_explosion_in[1] < time_now[1]:\n        time_explosion_in[0] -= 1\n        time_explosion_in[1] += 60\n\n        time_explosion_in[1] -= 1\n        time_explosion_in[2] += 60\n\n    time_explosion_in = [str(x) for x in time_explosion_in]\n    print(\":\".join(time_explosion_in))\n\nmain()\n"
    }
  ],
  "created": 1649834762,
  "object": "edit"
}
2022-04-13 07:26:14.858173 fix spelling mistakes 3 ['\n\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(":")\n    time_now = [int(x) for x in time_now]\n\n    time_expiration = sys.stdin.readline()\n    time_expiration = time_expiration.strip().split(":")\n    time_expiration = [int(x) for x in time_expiration]\n\n    if time_explosion[0] < time_now[0]:\n        time_explosion[0] += 24\n\n    if time_explosion[1] < time_now[1]:\n        time_explosion[0] -= 1\n        time_explosion[1] += 60\n\n    if time_explosion[2] < time_now[2]:\n        time_explosion[1] -= 1\n        time_explosion[2] += 60\n\n    time_explosion = [str(x) for x in time_explosion]\n    print(":".join(time_explosion))\n\nmain()\n', '\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(":")\n    time_now = [int(x) for x in time_now]\n\n    time_explodes = sys.stdin.readline()\n    time_explodes = time_explodes.strip().split(":")\n    time_explodes = [int(x) for x in time_explodes]\n\n    if time_explodes[0] < time_now[0]:\n        time_explodes[0] += 24\n\n    if time_explodes[1] < time_now[1]:\n        time_explodes[0] -= 1\n        time_explodes[1] += 60\n\n    if time_explodes[2] < time_now[2]:\n        time_explodes[1] -= 1\n        time_explodes[2] += 60\n\n    time_explodes = [str(x) for x in time_explodes]\n    print(":".join(time_explodes))\n\nmain()\n', '\n\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(":")\n    time_now = [int(x) for x in time_now]\n\n    time_explosion_in = sys.stdin.readline()\n    time_explosion_in = time_explosion_in.strip().split(":")\n    time_explosion_in = [int(x) for x in time_explosion_in]\n\n    if time_explosion_in[0] < time_now[0]:\n        time_explosion_in[0] += 24\n\n    if time_explosion_in[1] < time_now[1]:\n        time_explosion_in[0] -= 1\n        time_explosion_in[1] += 60\n\n        time_explosion_in[1] -= 1\n        time_explosion_in[2] += 60\n\n    time_explosion_in = [str(x) for x in time_explosion_in]\n    print(":".join(time_explosion_in))\n\nmain()\n']
2022-04-13 07:26:14.858211 size on output set 3
2022-04-13 07:26:14.858226 size on input set 3
2022-04-13 07:26:19.370873 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(':')\n    time_now = [int(x) for x in time_now]\n\n    time_explodes = sys.stdin.readline()\n    time_explodes = time_explodes.strip().split(':')\n    time_explodes = [int(x) for x in time_explodes]\n\n    if time_explodes[0] < time_now[0]:\n        time_explodes[0] += 24\n\n    if time_explodes[1] < time_now[1]:\n        time_explodes[0] -= 1\n        time_explodes[1] += 60\n\n    if time_explodes[2] < time_now[2]:\n        time_explodes[1] -= 1\n        time_explodes[2] += 60\n\n    time_explodes = [str(x) for x in time_explodes]\n    print(':'.join(time_explodes))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(\":\")\n    time_now = [int(x) for x in time_now]\n\n    time_explodes = sys.stdin.readline()\n    time_explodes = time_explodes.strip().split(\":\")\n    time_explodes = [int(x) for x in time_explodes]\n\n    if time_explodes[0] < time_now[0]:\n        time_explodes[0] += 24\n\n    if time_explodes[1] < time_now[1]:\n        time_explodes[0] -= 1\n        time_explodes[1] += 60\n\n    if time_explodes[2] < time_now[2]:\n        time_explodes[1] -= 1\n        time_explodes[2] += 60\n\n    time_explodes = [str(x) for x in time_explodes]\n    print(\":\".join(time_explodes)) \n\nmain()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    time_now = [int(x) for x in sys.stdin.readline().strip().split(\":\")]\n\n    time_explodes = [int(x) for x in sys.stdin.readline().strip().split(\":\")]\n\n    if time_explodes[0] < time_now[0]:\n        time_explodes[0] += 24\n\n    if time_explodes[1] < time_now[1]:\n        time_explodes[0] -= 1\n        time_explodes[1] += 60\n\n    if time_explodes[2] < time_now[2]:\n        time_explodes[1] -= 1\n        time_explodes[2] += 60\n\n    time_explodes = [str(x) for x in time_explodes]\n    print(\":\".join(time_explodes))\n\nmain()\n"
    }
  ],
  "created": 1649834774,
  "object": "edit"
}
2022-04-13 07:26:19.371048 fix syntax errors 3 ["\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(':')\n    time_now = [int(x) for x in time_now]\n\n    time_explodes = sys.stdin.readline()\n    time_explodes = time_explodes.strip().split(':')\n    time_explodes = [int(x) for x in time_explodes]\n\n    if time_explodes[0] < time_now[0]:\n        time_explodes[0] += 24\n\n    if time_explodes[1] < time_now[1]:\n        time_explodes[0] -= 1\n        time_explodes[1] += 60\n\n    if time_explodes[2] < time_now[2]:\n        time_explodes[1] -= 1\n        time_explodes[2] += 60\n\n    time_explodes = [str(x) for x in time_explodes]\n    print(':'.join(time_explodes))\n\nmain()\n", '\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(":")\n    time_now = [int(x) for x in time_now]\n\n    time_explodes = sys.stdin.readline()\n    time_explodes = time_explodes.strip().split(":")\n    time_explodes = [int(x) for x in time_explodes]\n\n    if time_explodes[0] < time_now[0]:\n        time_explodes[0] += 24\n\n    if time_explodes[1] < time_now[1]:\n        time_explodes[0] -= 1\n        time_explodes[1] += 60\n\n    if time_explodes[2] < time_now[2]:\n        time_explodes[1] -= 1\n        time_explodes[2] += 60\n\n    time_explodes = [str(x) for x in time_explodes]\n    print(":".join(time_explodes)) \n\nmain()\n', 'import sys\n\ndef main():\n    time_now = [int(x) for x in sys.stdin.readline().strip().split(":")]\n\n    time_explodes = [int(x) for x in sys.stdin.readline().strip().split(":")]\n\n    if time_explodes[0] < time_now[0]:\n        time_explodes[0] += 24\n\n    if time_explodes[1] < time_now[1]:\n        time_explodes[0] -= 1\n        time_explodes[1] += 60\n\n    if time_explodes[2] < time_now[2]:\n        time_explodes[1] -= 1\n        time_explodes[2] += 60\n\n    time_explodes = [str(x) for x in time_explodes]\n    print(":".join(time_explodes))\n\nmain()\n']
2022-04-13 07:26:22.692626 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(\":\")\n    time_now = [int(x) for x in time_now]\n\n    time_explosion_in = sys.stdin.readline()\n    time_explosion_in = time_explosion_in.strip().split(\":\")\n    time_explosion_in = [int(x) for x in time_explosion_in]\n\n    if time_explosion_in[0] < time_now[0]:\n        time_explosion_in[0] += 24\n\n    if time_explosion_in[1] < time_now[1]:\n        time_explosion_in[0] -= 1\n        time_explosion_in[1] += 60\n    if time_explosion_in[2] < time_now[2]:\n        time_explosion_in[1] -= 1\n        time_explosion_in[2] += 60\n\n    time_explosion_in = [str(x) for x in time_explosion_in]\n    print(\":\".join(time_explosion_in))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(\":\")\n    time_now = [int(x) for x in time_now]\n\n    time_explosion_in = sys.stdin.readline()\n    time_explosion_in = time_explosion_in.strip().split(\":\")\n    time_explosion_in = [int(x) for x in time_explosion_in]\n\n    if time_explosion_in[0] < time_now[0]:\n        time_explosion_in[0] += 24\n\n    if time_explosion_in[1] < time_now[1]:\n        time_explosion_in[0] -= 1\n        time_explosion_in[1] += 60\n\n    if time_explosion_in[2] < time_now[2]:\n        time_explosion_in[0] -= 1\n        time_explosion_in[1] -= 1\n        time_explosion_in[2] += 60\n\n    time_explosion_in = [str(x) for x in time_explosion_in]\n    print(\":\".join(time_explosion_in))\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(\":\")\n    time_now = [int(x) for x in time_now]\n\n    time_explosion_in = sys.stdin.readline()\n    time_explosion_in = time_explosion_in.strip().split(\":\")\n    time_explosion_in = [int(x) for x in time_explosion_in]\n\n    if time_explosion_in[0] < time_now[0]:\n        time_explosion_in[0] += 24\n\n    if time_explosion_in[1] < time_now[1]:\n        time_explosion_in[0] -= 1\n        time_explosion_in[1] += 60\n\n    time_explosion_in[1] -= time_now[1]\n    time_explosion_in[2] -= time_now[2]\n    if time_explosion_in[2] < 0:\n        time_explosion_in[2] += 60\n        time_explosion_in[1] -= 1\n\n    time_explosion_in = [str(x) for x in time_explosion_in]\n    print(\":\".join(time_explosion_in))\n\nmain()\n"
    }
  ],
  "created": 1649834779,
  "object": "edit"
}
2022-04-13 07:26:22.692878 fix syntax errors 3 ['\n\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(":")\n    time_now = [int(x) for x in time_now]\n\n    time_explosion_in = sys.stdin.readline()\n    time_explosion_in = time_explosion_in.strip().split(":")\n    time_explosion_in = [int(x) for x in time_explosion_in]\n\n    if time_explosion_in[0] < time_now[0]:\n        time_explosion_in[0] += 24\n\n    if time_explosion_in[1] < time_now[1]:\n        time_explosion_in[0] -= 1\n        time_explosion_in[1] += 60\n    if time_explosion_in[2] < time_now[2]:\n        time_explosion_in[1] -= 1\n        time_explosion_in[2] += 60\n\n    time_explosion_in = [str(x) for x in time_explosion_in]\n    print(":".join(time_explosion_in))\n\nmain()\n', '\n\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(":")\n    time_now = [int(x) for x in time_now]\n\n    time_explosion_in = sys.stdin.readline()\n    time_explosion_in = time_explosion_in.strip().split(":")\n    time_explosion_in = [int(x) for x in time_explosion_in]\n\n    if time_explosion_in[0] < time_now[0]:\n        time_explosion_in[0] += 24\n\n    if time_explosion_in[1] < time_now[1]:\n        time_explosion_in[0] -= 1\n        time_explosion_in[1] += 60\n\n    if time_explosion_in[2] < time_now[2]:\n        time_explosion_in[0] -= 1\n        time_explosion_in[1] -= 1\n        time_explosion_in[2] += 60\n\n    time_explosion_in = [str(x) for x in time_explosion_in]\n    print(":".join(time_explosion_in))\n\nmain()\n', '\n\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(":")\n    time_now = [int(x) for x in time_now]\n\n    time_explosion_in = sys.stdin.readline()\n    time_explosion_in = time_explosion_in.strip().split(":")\n    time_explosion_in = [int(x) for x in time_explosion_in]\n\n    if time_explosion_in[0] < time_now[0]:\n        time_explosion_in[0] += 24\n\n    if time_explosion_in[1] < time_now[1]:\n        time_explosion_in[0] -= 1\n        time_explosion_in[1] += 60\n\n    time_explosion_in[1] -= time_now[1]\n    time_explosion_in[2] -= time_now[2]\n    if time_explosion_in[2] < 0:\n        time_explosion_in[2] += 60\n        time_explosion_in[1] -= 1\n\n    time_explosion_in = [str(x) for x in time_explosion_in]\n    print(":".join(time_explosion_in))\n\nmain()\n']
2022-04-13 07:26:26.032658 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(\":\")\n    time_now = [int(x) for x in time_now]\n\n    time_explosion = sys.stdin.readline()\n    time_explosion = time_explosion.strip().split(\":\")\n    time_explosion = [int(x) for x in time_explosion]\n\n    if time_explosion[0] < time_now[0]:\n        time_explosion[0] += 24\n\n    if time_explosion[1] < time_now[1]:\n        time_explosion[0] -= 1\n        time_explosion[1] += 60\n\n    if time_explosion[2] < time_now[2]:\n        time_explosion[1] -= 1\n        time_explosion[2] += 60\n\n    time_explosion = [str(x) for x in time_explosion]\n    print(\":\".join(time_explosion))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(\":\")\n    time_now = [int(x) for x in time_now]\n\n    time_explosion = sys.stdin.readline()\n    time_explosion = time_explosion.strip().split(\":\")\n    time_explosion = [int(x) for x in time_explosion]\n\n    if time_explosion[0] < time_now[0]:\n        time_explosion[0] += 24\n\n    if time_explosion[1] < time_now[1]:\n        time_explosion[0] -= 1\n        time_explosion[1] += 60\n\n    if time_explosion[2] < time_now[2]:\n        time_explosion[1] -= 1\n        time_explosion[2] += 60\n\n    time_explosion = [str(x) for x in time_explosion]\n    print(\":\".join(time_explosion))\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(\":\")\n    time_now = [int(x) for x in time_now]\n\n    time_explosion = sys.stdin.readline()\n    time_explosion = time_explosion.strip().split(\":\")\n    time_explosion = [int(x) for x in time_explosion]\n\n    if time_explosion[0] < time_now[0]:\n        time_explosion[0] += 24\n\n    if time_explosion[1] < time_now[1]:\n        time_explosion[0] -= 1\n        time_explosion[1] += 60\n\n    if time_explosion[2] < time_now[2]:\n        time_explosion[1] -= 1\n        time_explosion[2] += 60\n\n    time_explosion = [str(x) for x in time_explosion]\n    print(\":\".join(time_explosion))\n\nmain()\n"
    }
  ],
  "created": 1649834782,
  "object": "edit"
}
2022-04-13 07:26:26.032824 fix syntax errors 3 ['\n\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(":")\n    time_now = [int(x) for x in time_now]\n\n    time_explosion = sys.stdin.readline()\n    time_explosion = time_explosion.strip().split(":")\n    time_explosion = [int(x) for x in time_explosion]\n\n    if time_explosion[0] < time_now[0]:\n        time_explosion[0] += 24\n\n    if time_explosion[1] < time_now[1]:\n        time_explosion[0] -= 1\n        time_explosion[1] += 60\n\n    if time_explosion[2] < time_now[2]:\n        time_explosion[1] -= 1\n        time_explosion[2] += 60\n\n    time_explosion = [str(x) for x in time_explosion]\n    print(":".join(time_explosion))\n\nmain()\n', '\n\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(":")\n    time_now = [int(x) for x in time_now]\n\n    time_explosion = sys.stdin.readline()\n    time_explosion = time_explosion.strip().split(":")\n    time_explosion = [int(x) for x in time_explosion]\n\n    if time_explosion[0] < time_now[0]:\n        time_explosion[0] += 24\n\n    if time_explosion[1] < time_now[1]:\n        time_explosion[0] -= 1\n        time_explosion[1] += 60\n\n    if time_explosion[2] < time_now[2]:\n        time_explosion[1] -= 1\n        time_explosion[2] += 60\n\n    time_explosion = [str(x) for x in time_explosion]\n    print(":".join(time_explosion))\n\nmain()\n', '\n\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(":")\n    time_now = [int(x) for x in time_now]\n\n    time_explosion = sys.stdin.readline()\n    time_explosion = time_explosion.strip().split(":")\n    time_explosion = [int(x) for x in time_explosion]\n\n    if time_explosion[0] < time_now[0]:\n        time_explosion[0] += 24\n\n    if time_explosion[1] < time_now[1]:\n        time_explosion[0] -= 1\n        time_explosion[1] += 60\n\n    if time_explosion[2] < time_now[2]:\n        time_explosion[1] -= 1\n        time_explosion[2] += 60\n\n    time_explosion = [str(x) for x in time_explosion]\n    print(":".join(time_explosion))\n\nmain()\n']
2022-04-13 07:26:26.032858 size on output set 7
2022-04-13 07:26:26.032878 num operations 2
2022-04-13 07:26:26.032884 size on input set 1
2022-04-13 07:26:37.001557 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# -----main-----\n\ncurrent_time = input()\nexplosion_time = input()\n\ncurrent_hour, current_minute, current_second = map(int, current_time.split(\":\"))\nexplosion_hour, explosion_minute, explosion_second = map(int, explosion_time.split(\":\"))\n\nif explosion_hour < current_hour:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute < current_minute:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute == current_minute and explosion_second < current_second:\n    explosion_hour += 24\n\nexplosion_hour -= current_hour\nexplosion_minute -= current_minute\nexplosion_second -= current_second\n\nif explosion_second < 0:\n    explosion_second += 60\n    explosion_minute -= 1\n\nif explosion_minute < 0:\n    explosion_minute += 60\n    explosion_hour -= 1\n\nprint(str(explosion_hour) + \":\" + str(explosion_minute) + \":\" + str(explosion_second))\n"
    },
    {
      "index": 1,
      "text": "\n\n#-----main-----#\n\ncurrent_time = input()\nexplosion_time = input()\n\ncurrent_hour, current_minute, current_second = map(int,current_time.split(\":\"))\nexplosion_hour, explosion_minute, explosion_second = map(int,explosion_time.split(\":\"))\n\nif explosion_hour<current_hour:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute<current_minute:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute==current_minute and explosion_second<current_second:\n    explosion_hour+=24\n\nexplosion_hour-=current_hour\nexplosion_minute-=current_minute\nexplosion_second-=current_second\n\nif explosion_second<0:\n    explosion_second+=60\n    explosion_minute-=1\n\nif explosion_minute<0:\n    explosion_minute+=60\n    explosion_hour-=1\n\nprint(str(explosion_hour)+\":\"+str(explosion_minute)+\":\"+str(explosion_second))\n"
    },
    {
      "index": 2,
      "text": "\n\n#-----main-----\n\ncurrent_time = input() #input current time in format hh:mm:ss\nexplosion_time = input() #input explosion time in format hh:mm:ss\n\ncurrent_hour, current_minute, current_second = map(int,current_time.split(\":\"))\nexplosion_hour, explosion_minute, explosion_second = map(int,explosion_time.split(\":\"))\n\nif explosion_hour<current_hour:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute<current_minute:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute==current_minute and explosion_second<current_second:\n    explosion_hour+=24\n\nexplosion_hour-=current_hour\nexplosion_minute-=current_minute\nexplosion_second-=current_second\n\nif explosion_second<0:\n    explosion_second+=60\n    explosion_minute-=1\n\nif explosion_minute<0:\n    explosion_minute+=60\n    explosion_hour-=1\n\nprint(str(explosion_hour)+\":\"+str(explosion_minute)+\":\"+str(explosion_second))\n"
    }
  ],
  "created": 1649834786,
  "object": "edit"
}
2022-04-13 07:26:37.001809 fix spelling mistakes 3 ['\n\n# -----main-----\n\ncurrent_time = input()\nexplosion_time = input()\n\ncurrent_hour, current_minute, current_second = map(int, current_time.split(":"))\nexplosion_hour, explosion_minute, explosion_second = map(int, explosion_time.split(":"))\n\nif explosion_hour < current_hour:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute < current_minute:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute == current_minute and explosion_second < current_second:\n    explosion_hour += 24\n\nexplosion_hour -= current_hour\nexplosion_minute -= current_minute\nexplosion_second -= current_second\n\nif explosion_second < 0:\n    explosion_second += 60\n    explosion_minute -= 1\n\nif explosion_minute < 0:\n    explosion_minute += 60\n    explosion_hour -= 1\n\nprint(str(explosion_hour) + ":" + str(explosion_minute) + ":" + str(explosion_second))\n', '\n\n#-----main-----#\n\ncurrent_time = input()\nexplosion_time = input()\n\ncurrent_hour, current_minute, current_second = map(int,current_time.split(":"))\nexplosion_hour, explosion_minute, explosion_second = map(int,explosion_time.split(":"))\n\nif explosion_hour<current_hour:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute<current_minute:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute==current_minute and explosion_second<current_second:\n    explosion_hour+=24\n\nexplosion_hour-=current_hour\nexplosion_minute-=current_minute\nexplosion_second-=current_second\n\nif explosion_second<0:\n    explosion_second+=60\n    explosion_minute-=1\n\nif explosion_minute<0:\n    explosion_minute+=60\n    explosion_hour-=1\n\nprint(str(explosion_hour)+":"+str(explosion_minute)+":"+str(explosion_second))\n', '\n\n#-----main-----\n\ncurrent_time = input() #input current time in format hh:mm:ss\nexplosion_time = input() #input explosion time in format hh:mm:ss\n\ncurrent_hour, current_minute, current_second = map(int,current_time.split(":"))\nexplosion_hour, explosion_minute, explosion_second = map(int,explosion_time.split(":"))\n\nif explosion_hour<current_hour:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute<current_minute:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute==current_minute and explosion_second<current_second:\n    explosion_hour+=24\n\nexplosion_hour-=current_hour\nexplosion_minute-=current_minute\nexplosion_second-=current_second\n\nif explosion_second<0:\n    explosion_second+=60\n    explosion_minute-=1\n\nif explosion_minute<0:\n    explosion_minute+=60\n    explosion_hour-=1\n\nprint(str(explosion_hour)+":"+str(explosion_minute)+":"+str(explosion_second))\n']
2022-04-13 07:26:37.001850 size on output set 3
2022-04-13 07:26:37.001856 size on input set 3
2022-04-13 07:26:47.112890 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#-----main-----\n\ncurrent_time = input() #input current time in format hh:mm:ss\nexplosion_time = input() #input explosion time in format hh:mm:ss\n\ncurrent_hour, current_minute, current_second = map(int, current_time.split(\":\"))\nexplosion_hour, explosion_minute, explosion_second = map(int, explosion_time.split(\":\"))\n\nif explosion_hour < current_hour:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute < current_minute:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute == current_minute and explosion_second < current_second:\n    explosion_hour += 24\n\nexplosion_hour -= current_hour\nexplosion_minute -= current_minute\nexplosion_second -= current_second\n\nif explosion_second < 0:\n    explosion_second += 60\n    explosion_minute -= 1\n\nif explosion_minute < 0:\n    explosion_minute += 60\n    explosion_hour -= 1\n\nprint(str(explosion_hour)+\":\"+str(explosion_minute)+\":\"+str(explosion_second))\n"
    },
    {
      "index": 1,
      "text": "\n\n#-----main-----\n\ncurrent_time = input() #input current time in format hh:mm:ss (24hours)\nexplosion_time = input() #input explosion time in format hh:mm:ss (24hours)\n\ncurrent_hour, current_minute, current_second = map(int,current_time.split(\":\"))\nexplosion_hour, explosion_minute, explosion_second = map(int,explosion_time.split(\":\"))\n\nif explosion_hour<current_hour:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute<current_minute:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute==current_minute and explosion_second<current_second:\n    explosion_hour+=24\n\nexplosion_hour-=current_hour\nexplosion_minute-=current_minute\nexplosion_second-=current_second\n\nif explosion_second<0:\n    explosion_second+=60\n    explosion_minute-=1\n\nif explosion_minute<0:\n    explosion_minute+=60\n    explosion_hour-=1\n\nprint(str(explosion_hour)+\":\"+str(explosion_minute)+\":\"+str(explosion_second))\n"
    },
    {
      "index": 2,
      "text": "\ncurrent_time = input() #input current time in format hh:mm:ss\nexplosion_time = input() #input explosion time in format hh:mm:ss\n\ncurrent_hour, current_minute, current_second = map(int,current_time.split(\":\"))\nexplosion_hour, explosion_minute, explosion_second = map(int,explosion_time.split(\":\"))\n\nif explosion_hour<current_hour:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute<current_minute:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute==current_minute and explosion_second<current_second:\n    explosion_hour+=24\n\nexplosion_hour-=current_hour\nexplosion_minute-=current_minute\nexplosion_second-=current_second\n\nif explosion_second<0:\n    explosion_second+=60\n    explosion_minute-=1\n\nif explosion_minute<0:\n    explosion_minute+=60\n    explosion_hour-=1\n\nprint(str(explosion_hour)+\":\"+str(explosion_minute)+\":\"+str(explosion_second))\n"
    }
  ],
  "created": 1649834797,
  "object": "edit"
}
2022-04-13 07:26:47.113067 fix syntax errors 3 ['\n\n#-----main-----\n\ncurrent_time = input() #input current time in format hh:mm:ss\nexplosion_time = input() #input explosion time in format hh:mm:ss\n\ncurrent_hour, current_minute, current_second = map(int, current_time.split(":"))\nexplosion_hour, explosion_minute, explosion_second = map(int, explosion_time.split(":"))\n\nif explosion_hour < current_hour:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute < current_minute:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute == current_minute and explosion_second < current_second:\n    explosion_hour += 24\n\nexplosion_hour -= current_hour\nexplosion_minute -= current_minute\nexplosion_second -= current_second\n\nif explosion_second < 0:\n    explosion_second += 60\n    explosion_minute -= 1\n\nif explosion_minute < 0:\n    explosion_minute += 60\n    explosion_hour -= 1\n\nprint(str(explosion_hour)+":"+str(explosion_minute)+":"+str(explosion_second))\n', '\n\n#-----main-----\n\ncurrent_time = input() #input current time in format hh:mm:ss (24hours)\nexplosion_time = input() #input explosion time in format hh:mm:ss (24hours)\n\ncurrent_hour, current_minute, current_second = map(int,current_time.split(":"))\nexplosion_hour, explosion_minute, explosion_second = map(int,explosion_time.split(":"))\n\nif explosion_hour<current_hour:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute<current_minute:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute==current_minute and explosion_second<current_second:\n    explosion_hour+=24\n\nexplosion_hour-=current_hour\nexplosion_minute-=current_minute\nexplosion_second-=current_second\n\nif explosion_second<0:\n    explosion_second+=60\n    explosion_minute-=1\n\nif explosion_minute<0:\n    explosion_minute+=60\n    explosion_hour-=1\n\nprint(str(explosion_hour)+":"+str(explosion_minute)+":"+str(explosion_second))\n', '\ncurrent_time = input() #input current time in format hh:mm:ss\nexplosion_time = input() #input explosion time in format hh:mm:ss\n\ncurrent_hour, current_minute, current_second = map(int,current_time.split(":"))\nexplosion_hour, explosion_minute, explosion_second = map(int,explosion_time.split(":"))\n\nif explosion_hour<current_hour:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute<current_minute:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute==current_minute and explosion_second<current_second:\n    explosion_hour+=24\n\nexplosion_hour-=current_hour\nexplosion_minute-=current_minute\nexplosion_second-=current_second\n\nif explosion_second<0:\n    explosion_second+=60\n    explosion_minute-=1\n\nif explosion_minute<0:\n    explosion_minute+=60\n    explosion_hour-=1\n\nprint(str(explosion_hour)+":"+str(explosion_minute)+":"+str(explosion_second))\n']
2022-04-13 07:26:50.838014 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#-----main-----#\n\ncurrent_time = input()\nexplosion_time = input()\n\ncurrent_hour, current_minute, current_second = map(int,current_time.split(\":\"))\nexplosion_hour, explosion_minute, explosion_second = map(int,explosion_time.split(\":\"))\n\nif explosion_hour<current_hour:\n    explosion_hour+=24\n\nelif explosion_hour==current_hour and explosion_minute<current_minute:\n    explosion_hour+=24\n\nelif explosion_hour==current_hour and explosion_minute==current_minute and explosion_second<current_second:\n    explosion_hour+=24\n\nexplosion_hour-=current_hour\nexplosion_minute-=current_minute\nexplosion_second-=current_second\n\nif explosion_second<0:\n    explosion_second+=60\n    explosion_minute-=1\n\nif explosion_minute<0:\n    explosion_minute+=60\n    explosion_hour-=1\n\nprint(str(explosion_hour)+\":\"+str(explosion_minute)+\":\"+str(explosion_second))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\n#-----main-----#\n\ncurrent_time = sys.argv[1]\nexplosion_time = sys.argv[2]\n\ncurrent_hour, current_minute, current_second = map(int,current_time.split(\":\"))\nexplosion_hour, explosion_minute, explosion_second = map(int,explosion_time.split(\":\"))\n\nif explosion_hour<current_hour:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute<current_minute:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute==current_minute and explosion_second<current_second:\n    explosion_hour+=24\n\nexplosion_hour-=current_hour\nexplosion_minute-=current_minute\nexplosion_second-=current_second\n\nif explosion_second<0:\n    explosion_second+=60\n    explosion_minute-=1\n\nif explosion_minute<0:\n    explosion_minute+=60\n    explosion_hour-=1\n\nsys.stdout.write(str(explosion_hour)+\":\"+str(explosion_minute)+\":\"+str(explosion_second))\n"
    },
    {
      "index": 2,
      "text": "\n#-----main-----#\n\ncurrent_time = input()\nexplosion_time = input()\n\ncurrent_hour, current_minute, current_second = map(int,current_time.split(\":\"))\nexplosion_hour, explosion_minute, explosion_second = map(int,explosion_time.split(\":\"))\n\nif explosion_hour<current_hour:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute<current_minute:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute==current_minute and explosion_second<current_second:\n    explosion_hour+=24\n\nexplosion_hour-=current_hour\nexplosion_minute-=current_minute\nexplosion_second-=current_second\n\nif explosion_second<0:\n    explosion_second+=60\n    explosion_minute-=1\n\nif explosion_minute<0:\n    explosion_minute+=60\n    explosion_hour-=1\n\nprint(str(explosion_hour)+\":\"+str(explosion_minute)+\":\"+str(explosion_second))\n"
    }
  ],
  "created": 1649834807,
  "object": "edit"
}
2022-04-13 07:26:50.838187 fix syntax errors 3 ['\n\n#-----main-----#\n\ncurrent_time = input()\nexplosion_time = input()\n\ncurrent_hour, current_minute, current_second = map(int,current_time.split(":"))\nexplosion_hour, explosion_minute, explosion_second = map(int,explosion_time.split(":"))\n\nif explosion_hour<current_hour:\n    explosion_hour+=24\n\nelif explosion_hour==current_hour and explosion_minute<current_minute:\n    explosion_hour+=24\n\nelif explosion_hour==current_hour and explosion_minute==current_minute and explosion_second<current_second:\n    explosion_hour+=24\n\nexplosion_hour-=current_hour\nexplosion_minute-=current_minute\nexplosion_second-=current_second\n\nif explosion_second<0:\n    explosion_second+=60\n    explosion_minute-=1\n\nif explosion_minute<0:\n    explosion_minute+=60\n    explosion_hour-=1\n\nprint(str(explosion_hour)+":"+str(explosion_minute)+":"+str(explosion_second))\n', '\nimport sys\n\n#-----main-----#\n\ncurrent_time = sys.argv[1]\nexplosion_time = sys.argv[2]\n\ncurrent_hour, current_minute, current_second = map(int,current_time.split(":"))\nexplosion_hour, explosion_minute, explosion_second = map(int,explosion_time.split(":"))\n\nif explosion_hour<current_hour:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute<current_minute:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute==current_minute and explosion_second<current_second:\n    explosion_hour+=24\n\nexplosion_hour-=current_hour\nexplosion_minute-=current_minute\nexplosion_second-=current_second\n\nif explosion_second<0:\n    explosion_second+=60\n    explosion_minute-=1\n\nif explosion_minute<0:\n    explosion_minute+=60\n    explosion_hour-=1\n\nsys.stdout.write(str(explosion_hour)+":"+str(explosion_minute)+":"+str(explosion_second))\n', '\n#-----main-----#\n\ncurrent_time = input()\nexplosion_time = input()\n\ncurrent_hour, current_minute, current_second = map(int,current_time.split(":"))\nexplosion_hour, explosion_minute, explosion_second = map(int,explosion_time.split(":"))\n\nif explosion_hour<current_hour:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute<current_minute:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute==current_minute and explosion_second<current_second:\n    explosion_hour+=24\n\nexplosion_hour-=current_hour\nexplosion_minute-=current_minute\nexplosion_second-=current_second\n\nif explosion_second<0:\n    explosion_second+=60\n    explosion_minute-=1\n\nif explosion_minute<0:\n    explosion_minute+=60\n    explosion_hour-=1\n\nprint(str(explosion_hour)+":"+str(explosion_minute)+":"+str(explosion_second))\n']
2022-04-13 07:26:52.911737 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# -----main-----\n\n\ncurrent_time = input()\nexplosion_time = input()\n\ncurrent_hour, current_minute, current_second = map(int, current_time.split(\":\"))\nexplosion_hour, explosion_minute, explosion_second = map(int, explosion_time.split(\":\"))\n\nif explosion_hour < current_hour:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute < current_minute:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute == current_minute and explosion_second < current_second:\n    explosion_hour += 24\n\nexplosion_hour -= current_hour\nexplosion_minute -= current_minute\nexplosion_second -= current_second\n\nif explosion_second < 0:\n    explosion_second += 60\n    explosion_minute -= 1\n\nif explosion_minute < 0:\n    explosion_minute += 60\n    explosion_hour -= 1\n\nprint(str(explosion_hour) + \":\" + str(explosion_minute) + \":\" + str(explosion_second))\n"
    },
    {
      "index": 1,
      "text": "\n#\n# -----main-----\n\ncurrent_time = input()\nexplosion_time = input()\n\ncurrent_hour, current_minute, current_second = map(int, current_time.split(\":\"))\nexplosion_hour, explosion_minute, explosion_second = map(int, explosion_time.split(\":\"))\n\nif explosion_hour < current_hour:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute < current_minute:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute == current_minute and explosion_second < current_second:\n    explosion_hour += 24\n\nexplosion_hour -= current_hour\nexplosion_minute -= current_minute\nexplosion_second -= current_second\n\nif explosion_second < 0:\n    explosion_second += 60\n    explosion_minute -= 1\n\nif explosion_minute < 0:\n    explosion_minute += 60\n    explosion_hour -= 1\n\nprint(str(explosion_hour) + \":\" + str(explosion_minute) + \":\" + str(explosion_second))\n"
    },
    {
      "index": 2,
      "text": "\n# -----main-----\n\ncurrent_time = input()\nexplosion_time = input()\n\ncurrent_hour, current_minute, current_second = map(int, current_time.split(\":\"))\nexplosion_hour, explosion_minute, explosion_second = map(int, explosion_time.split(\":\"))\n\nif explosion_hour < current_hour:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute < current_minute:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute == current_minute and explosion_second < current_second:\n    explosion_hour += 24\n\nexplosion_hour -= current_hour\nexplosion_minute -= current_minute\nexplosion_second -= current_second\n\nif explosion_second < 0:\n    explosion_second += 60\n    explosion_minute -= 1\n\nif explosion_minute < 0:\n    explosion_minute += 60\n    explosion_hour -= 1\n\nprint(str(explosion_hour) + \":\" + str(explosion_minute) + \":\" + str(explosion_second))\n"
    }
  ],
  "created": 1649834811,
  "object": "edit"
}
2022-04-13 07:26:52.911986 fix syntax errors 3 ['\n# -----main-----\n\n\ncurrent_time = input()\nexplosion_time = input()\n\ncurrent_hour, current_minute, current_second = map(int, current_time.split(":"))\nexplosion_hour, explosion_minute, explosion_second = map(int, explosion_time.split(":"))\n\nif explosion_hour < current_hour:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute < current_minute:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute == current_minute and explosion_second < current_second:\n    explosion_hour += 24\n\nexplosion_hour -= current_hour\nexplosion_minute -= current_minute\nexplosion_second -= current_second\n\nif explosion_second < 0:\n    explosion_second += 60\n    explosion_minute -= 1\n\nif explosion_minute < 0:\n    explosion_minute += 60\n    explosion_hour -= 1\n\nprint(str(explosion_hour) + ":" + str(explosion_minute) + ":" + str(explosion_second))\n', '\n#\n# -----main-----\n\ncurrent_time = input()\nexplosion_time = input()\n\ncurrent_hour, current_minute, current_second = map(int, current_time.split(":"))\nexplosion_hour, explosion_minute, explosion_second = map(int, explosion_time.split(":"))\n\nif explosion_hour < current_hour:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute < current_minute:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute == current_minute and explosion_second < current_second:\n    explosion_hour += 24\n\nexplosion_hour -= current_hour\nexplosion_minute -= current_minute\nexplosion_second -= current_second\n\nif explosion_second < 0:\n    explosion_second += 60\n    explosion_minute -= 1\n\nif explosion_minute < 0:\n    explosion_minute += 60\n    explosion_hour -= 1\n\nprint(str(explosion_hour) + ":" + str(explosion_minute) + ":" + str(explosion_second))\n', '\n# -----main-----\n\ncurrent_time = input()\nexplosion_time = input()\n\ncurrent_hour, current_minute, current_second = map(int, current_time.split(":"))\nexplosion_hour, explosion_minute, explosion_second = map(int, explosion_time.split(":"))\n\nif explosion_hour < current_hour:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute < current_minute:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute == current_minute and explosion_second < current_second:\n    explosion_hour += 24\n\nexplosion_hour -= current_hour\nexplosion_minute -= current_minute\nexplosion_second -= current_second\n\nif explosion_second < 0:\n    explosion_second += 60\n    explosion_minute -= 1\n\nif explosion_minute < 0:\n    explosion_minute += 60\n    explosion_hour -= 1\n\nprint(str(explosion_hour) + ":" + str(explosion_minute) + ":" + str(explosion_second))\n']
2022-04-13 07:26:52.912027 size on output set 9
2022-04-13 07:26:52.912045 num operations 2
2022-04-13 07:26:52.912050 size on input set 1
2022-04-13 07:26:57.465922 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M:%S') + (current_time - datetime.strptime('00:00:00', '%H:%M:%S'))\n    print(explosion_time.strftime('%H:%M:%S')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time += (current_time - datetime.strptime('00:00:00', '%H:%M:%S')) # \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a \u0442\u0435\u043a\u0443\u0449\u0435\u043c\u0443 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432\u0440\u0435\u043c\u044f \u0432\u0437\u0440\u044b\u0432\u0430 \u043c\u0438\u043d\u0443\u0441 \u043d\u0443\u043b\u0435\u0432\u043e\u0435 \u0432\u0440\u0435\u043c\u044f\n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M')\n    explosion_time += (current_time - datetime.strptime('00:00', '%H:%M'))\n    print(explosion_time.strftime('%H:%M'))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649834812,
  "object": "edit"
}
2022-04-13 07:26:57.466094 fix spelling mistakes 3 ["\n\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M:%S') + (current_time - datetime.strptime('00:00:00', '%H:%M:%S'))\n    print(explosion_time.strftime('%H:%M:%S')\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time += (current_time - datetime.strptime('00:00:00', '%H:%M:%S')) # добавляем к текущему времени время взрыва минус нулевое время\n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M')\n    explosion_time += (current_time - datetime.strptime('00:00', '%H:%M'))\n    print(explosion_time.strftime('%H:%M'))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 07:26:57.466131 size on output set 3
2022-04-13 07:26:57.466137 size on input set 3
2022-04-13 07:26:59.608762 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M')\n    explosion_time += (current_time - datetime.strptime('00:00', '%H:%M'))\n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M')\n    explosion_time += (current_time - datetime.strptime('00:00', '%H:%M'))\n    print(explosion_time.strftime('%H:%M'))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M')\n    explosion_time += (current_time - datetime.strptime('00:00', '%H:%M'))\n    print(explosion_time.strftime('%H:%M'))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649834817,
  "object": "edit"
}
2022-04-13 07:26:59.608923 fix syntax errors 3 ["\n\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M')\n    explosion_time += (current_time - datetime.strptime('00:00', '%H:%M'))\n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n", "\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M')\n    explosion_time += (current_time - datetime.strptime('00:00', '%H:%M'))\n    print(explosion_time.strftime('%H:%M'))\n\nif __name__ == '__main__':\n    main()\n", "\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M')\n    explosion_time += (current_time - datetime.strptime('00:00', '%H:%M'))\n    print(explosion_time.strftime('%H:%M'))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 07:27:01.799056 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M:%S') + (current_time - datetime.strptime('00:00:00', '%H:%M:%S'))\n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M:%S') + (current_time - datetime.strptime('00:00:00', '%H:%M:%S'))\n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M:%S') + (current_time - datetime.strptime('00:00:00', '%H:%M:%S'))\n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649834819,
  "object": "edit"
}
2022-04-13 07:27:01.799310 fix syntax errors 3 ["\n\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M:%S') + (current_time - datetime.strptime('00:00:00', '%H:%M:%S'))\n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M:%S') + (current_time - datetime.strptime('00:00:00', '%H:%M:%S'))\n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M:%S') + (current_time - datetime.strptime('00:00:00', '%H:%M:%S'))\n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 07:27:07.086771 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M:%S')\n    # \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a \u0442\u0435\u043a\u0443\u0449\u0435\u043c\u0443 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432\u0440\u0435\u043c\u044f \u0432\u0437\u0440\u044b\u0432\u0430 \u043c\u0438\u043d\u0443\u0441 \u043d\u0443\u043b\u0435\u0432\u043e\u0435 \u0432\u0440\u0435\u043c\u044f\n    explosion_time += (current_time - datetime.strptime('00:00:00', '%H:%M:%S'))\n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time += (current_time - datetime.strptime('00:00:00', '%H:%M:%S'))\n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time += (current_time - datetime.strptime('00:00:00', '%H:%M:%S'))\n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649834821,
  "object": "edit"
}
2022-04-13 07:27:07.086948 fix syntax errors 3 ["\n\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M:%S')\n    # добавляем к текущему времени время взрыва минус нулевое время\n    explosion_time += (current_time - datetime.strptime('00:00:00', '%H:%M:%S'))\n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time += (current_time - datetime.strptime('00:00:00', '%H:%M:%S'))\n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time += (current_time - datetime.strptime('00:00:00', '%H:%M:%S'))\n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 07:27:07.086982 size on output set 5
2022-04-13 07:27:07.087003 num operations 2
2022-04-13 07:27:07.087008 size on input set 1
2022-04-13 07:27:20.423347 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/python3\n\nif __name__ == \"__main__\":\n    current_time = [int(i) for i in input().split(\":\")]\n    time_to_explode = [int(i) for i in input().split(\":\")]\n    current_time_in_seconds = current_time[0]*3600 + current_time[1]*60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0]*3600 + time_to_explode[1]*60 + time_to_explode[2]\n    if time_to_explode_in_seconds < current_time_in_seconds:\n        time_to_explode_in_seconds += 24*3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = time_to_explode_in_seconds // 3600\n    time_to_explode_in_seconds %= 3600\n    minutes = time_to_explode_in_seconds // 60\n    time_to_explode_in_seconds %= 60\n    seconds = time_to_explode_in_seconds\n    print(str(hours).zfill(2) + \":\" + str(minutes).zfill(2) + \":\" + str(seconds).zfill(2))\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nif __name__ == \"__main__\":\n    current_time = [int(i) for i in input().split(\":\")]\n    time_to_explode = [int(i) for i in input().split(':')]\n    current_time_in_seconds = current_time[0] * 3600 + current_time[1] * 60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0] * 3600 + time_to_explode[1] * 60 + time_to_explode[2]\n    if time_to_explode_in_seconds <= current_time_in_seconds:\n        time_to_explode_in_seconds += 24 * 3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = time_to_explode_in_seconds // 3600 % 24\n    minutes = time_to_explode_in_seconds // 60 % 60\n    seconds = time_to_explode_in_seconds % 60\n    print('{}:{}:{}'.format(str(hours).zfill(2), str(minutes).zfill(2), str(seconds).zfill(2)))\n"
    },
    {
      "index": 2,
      "text": "\n\nif __name__ == \"__main__\":\n    current_time = [int(i) for i in input().split(\":\")]\n    time_to_explode = [int(i) for i in input().split(\":\")]\n    current_time_in_seconds = current_time[0] * 3600 + current_time[1] * 60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0] * 3600 + time_to_explode[1] * 60 + time_to_explode[2]\n    if time_to_explode_in_seconds <= current_time_in_seconds:\n        time_to_explode_in_seconds += 24 * 3600\n    time_to_explode_in_seconds -= current_time_in_seconds  # get remaining time\n    hours = time_to_explode_in_seconds // 3600  # get hours\n    time_to_explode_in_seconds %= 3600  # get remaining time\n    minutes = time_to_explode_in_seconds // 60  # get minutes\n    time_to_explode_in_seconds %= 60  # get remaining time\n    seconds = time_to_explode_in_seconds  # get seconds\n    print(str(hours).zfill(2) + \":\" + str(minutes).zfill(2) + \":\" + str(seconds).zfill(2))  # print result\n"
    }
  ],
  "created": 1649834827,
  "object": "edit"
}
2022-04-13 07:27:20.423532 fix spelling mistakes 3 ['#!/usr/bin/python3\n\nif __name__ == "__main__":\n    current_time = [int(i) for i in input().split(":")]\n    time_to_explode = [int(i) for i in input().split(":")]\n    current_time_in_seconds = current_time[0]*3600 + current_time[1]*60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0]*3600 + time_to_explode[1]*60 + time_to_explode[2]\n    if time_to_explode_in_seconds < current_time_in_seconds:\n        time_to_explode_in_seconds += 24*3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = time_to_explode_in_seconds // 3600\n    time_to_explode_in_seconds %= 3600\n    minutes = time_to_explode_in_seconds // 60\n    time_to_explode_in_seconds %= 60\n    seconds = time_to_explode_in_seconds\n    print(str(hours).zfill(2) + ":" + str(minutes).zfill(2) + ":" + str(seconds).zfill(2))\n', '#!/usr/bin/env python3\n\nif __name__ == "__main__":\n    current_time = [int(i) for i in input().split(":")]\n    time_to_explode = [int(i) for i in input().split(\':\')]\n    current_time_in_seconds = current_time[0] * 3600 + current_time[1] * 60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0] * 3600 + time_to_explode[1] * 60 + time_to_explode[2]\n    if time_to_explode_in_seconds <= current_time_in_seconds:\n        time_to_explode_in_seconds += 24 * 3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = time_to_explode_in_seconds // 3600 % 24\n    minutes = time_to_explode_in_seconds // 60 % 60\n    seconds = time_to_explode_in_seconds % 60\n    print(\'{}:{}:{}\'.format(str(hours).zfill(2), str(minutes).zfill(2), str(seconds).zfill(2)))\n', '\n\nif __name__ == "__main__":\n    current_time = [int(i) for i in input().split(":")]\n    time_to_explode = [int(i) for i in input().split(":")]\n    current_time_in_seconds = current_time[0] * 3600 + current_time[1] * 60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0] * 3600 + time_to_explode[1] * 60 + time_to_explode[2]\n    if time_to_explode_in_seconds <= current_time_in_seconds:\n        time_to_explode_in_seconds += 24 * 3600\n    time_to_explode_in_seconds -= current_time_in_seconds  # get remaining time\n    hours = time_to_explode_in_seconds // 3600  # get hours\n    time_to_explode_in_seconds %= 3600  # get remaining time\n    minutes = time_to_explode_in_seconds // 60  # get minutes\n    time_to_explode_in_seconds %= 60  # get remaining time\n    seconds = time_to_explode_in_seconds  # get seconds\n    print(str(hours).zfill(2) + ":" + str(minutes).zfill(2) + ":" + str(seconds).zfill(2))  # print result\n']
2022-04-13 07:27:20.423637 size on output set 3
2022-04-13 07:27:20.423644 size on input set 3
2022-04-13 07:27:26.141399 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/python3\n\nif __name__ == \"__main__\":\n    current_time = [int(i) for i in input().split(\":\")]\n    time_to_explode = [int(i) for i in input().split(\":\")]\n    current_time_in_seconds = current_time[0] * 3600 + current_time[1] * 60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0] * 3600 + time_to_explode[1] * 60 + time_to_explode[2]\n    if time_to_explode_in_seconds < current_time_in_seconds:\n        time_to_explode_in_seconds += 24 * 3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = time_to_explode_in_seconds // 3600\n    time_to_explode_in_seconds %= 3600\n    minutes = time_to_explode_in_seconds // 60\n    time_to_explode_in_seconds %= 60\n    seconds = time_to_explode_in_seconds\n    print(str(hours).zfill(2) + \":\" + str(minutes).zfill(2) + \":\" + str(seconds).zfill(2))\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/python3\n\nif __name__ == \"__main__\":\n    current_time = [int(i) for i in input().split(\":\")]\n    time_to_explode = [int(i) for i in input().split(\":\")]\n    current_time_in_seconds = current_time[0] * 3600 + current_time[1] * 60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0] * 3600 + time_to_explode[1] * 60 + time_to_explode[2]\n    if time_to_explode_in_seconds < current_time_in_seconds:\n        time_to_explode_in_seconds += 24 * 3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = time_to_explode_in_seconds // 3600\n    time_to_explode_in_seconds %= 3600\n    minutes = time_to_explode_in_seconds // 60\n    time_to_explode_in_seconds %= 60\n    seconds = time_to_explode_in_seconds\n    print(str(hours).zfill(2) + \":\" + str(minutes).zfill(2) + \":\" + str(seconds).zfill(2))\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/python3\n\nif __name__ == \"__main__\":\n    current_time = [int(i) for i in input().split(\":\")]\n    time_to_explode = [int(i) for i in input().split(\":\")]\n    current_time_in_seconds = current_time[0]*3600 + current_time[1]*60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0]*3600 + time_to_explode[1]*60 + time_to_explode[2]\n    if time_to_explode_in_seconds < current_time_in_seconds:\n        time_to_explode_in_seconds += 24*3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = time_to_explode_in_seconds // 3600\n    time_to_explode_in_seconds %= 3600\n    minutes = time_to_explode_in_seconds // 60\n    time_to_explode_in_seconds %= 60\n    seconds = time_to_explode_in_seconds\n    print(str(hours).zfill(2) + \":\" + str(minutes).zfill(2) + \":\" + str(seconds).zfill(2)) \n"
    }
  ],
  "created": 1649834840,
  "object": "edit"
}
2022-04-13 07:27:26.141581 fix syntax errors 3 ['#!/usr/bin/python3\n\nif __name__ == "__main__":\n    current_time = [int(i) for i in input().split(":")]\n    time_to_explode = [int(i) for i in input().split(":")]\n    current_time_in_seconds = current_time[0] * 3600 + current_time[1] * 60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0] * 3600 + time_to_explode[1] * 60 + time_to_explode[2]\n    if time_to_explode_in_seconds < current_time_in_seconds:\n        time_to_explode_in_seconds += 24 * 3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = time_to_explode_in_seconds // 3600\n    time_to_explode_in_seconds %= 3600\n    minutes = time_to_explode_in_seconds // 60\n    time_to_explode_in_seconds %= 60\n    seconds = time_to_explode_in_seconds\n    print(str(hours).zfill(2) + ":" + str(minutes).zfill(2) + ":" + str(seconds).zfill(2))\n', '#!/usr/bin/python3\n\nif __name__ == "__main__":\n    current_time = [int(i) for i in input().split(":")]\n    time_to_explode = [int(i) for i in input().split(":")]\n    current_time_in_seconds = current_time[0] * 3600 + current_time[1] * 60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0] * 3600 + time_to_explode[1] * 60 + time_to_explode[2]\n    if time_to_explode_in_seconds < current_time_in_seconds:\n        time_to_explode_in_seconds += 24 * 3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = time_to_explode_in_seconds // 3600\n    time_to_explode_in_seconds %= 3600\n    minutes = time_to_explode_in_seconds // 60\n    time_to_explode_in_seconds %= 60\n    seconds = time_to_explode_in_seconds\n    print(str(hours).zfill(2) + ":" + str(minutes).zfill(2) + ":" + str(seconds).zfill(2))\n', '#!/usr/bin/python3\n\nif __name__ == "__main__":\n    current_time = [int(i) for i in input().split(":")]\n    time_to_explode = [int(i) for i in input().split(":")]\n    current_time_in_seconds = current_time[0]*3600 + current_time[1]*60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0]*3600 + time_to_explode[1]*60 + time_to_explode[2]\n    if time_to_explode_in_seconds < current_time_in_seconds:\n        time_to_explode_in_seconds += 24*3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = time_to_explode_in_seconds // 3600\n    time_to_explode_in_seconds %= 3600\n    minutes = time_to_explode_in_seconds // 60\n    time_to_explode_in_seconds %= 60\n    seconds = time_to_explode_in_seconds\n    print(str(hours).zfill(2) + ":" + str(minutes).zfill(2) + ":" + str(seconds).zfill(2)) \n']
2022-04-13 07:27:28.506175 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nif __name__ == \"__main__\":\n    current_time = [int(i) for i in input().split(\":\")]\n    time_to_explode = [int(i) for i in input().split(\":\")]\n    current_time_in_seconds = current_time[0] * 3600 + current_time[1] * 60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0] * 3600 + time_to_explode[1] * 60 + time_to_explode[2]\n    if time_to_explode_in_seconds <= current_time_in_seconds:\n        time_to_explode_in_seconds += 24 * 3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = time_to_explode_in_seconds // 3600 % 24\n    minutes = time_to_explode_in_seconds // 60 % 60\n    seconds = time_to_explode_in_seconds % 60\n    print('{}:{}:{}'.format(str(hours).zfill(2), str(minutes).zfill(2), str(seconds).zfill(2)))\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nif __name__ == \"__main__\":\n    current_time = [int(i) for i in input().split(\":\")]\n    time_to_explode = [int(i) for i in input().split(\":\")]\n    current_time_in_seconds = current_time[0] * 3600 + current_time[1] * 60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0] * 3600 + time_to_explode[1] * 60 + time_to_explode[2]\n    if time_to_explode_in_seconds <= current_time_in_seconds:\n        time_to_explode_in_seconds += 24 * 3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = time_to_explode_in_seconds // 3600 % 24\n    minutes = time_to_explode_in_seconds // 60 % 60\n    seconds = time_to_explode_in_seconds % 60\n    print('{}:{}:{}'.format(str(hours).zfill(2), str(minutes).zfill(2), str(seconds).zfill(2)))\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n\nif __name__ == \"__main__\":\n    current_time = [int(i) for i in input().split(\":\")]\n    time_to_explode = [int(i) for i in input().split(\":\")]\n    current_time_in_seconds = current_time[0] * 3600 + current_time[1] * 60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0] * 3600 + time_to_explode[1] * 60 + time_to_explode[2]\n    if time_to_explode_in_seconds <= current_time_in_seconds:\n        time_to_explode_in_seconds += 24 * 3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = time_to_explode_in_seconds // 3600 % 24\n    minutes = time_to_explode_in_seconds // 60 % 60\n    seconds = time_to_explode_in_seconds % 60\n    print('{}:{}:{}'.format(str(hours).zfill(2), str(minutes).zfill(2), str(seconds).zfill(2)))\n"
    }
  ],
  "created": 1649834846,
  "object": "edit"
}
2022-04-13 07:27:28.506474 fix syntax errors 3 ['#!/usr/bin/env python3\n\nif __name__ == "__main__":\n    current_time = [int(i) for i in input().split(":")]\n    time_to_explode = [int(i) for i in input().split(":")]\n    current_time_in_seconds = current_time[0] * 3600 + current_time[1] * 60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0] * 3600 + time_to_explode[1] * 60 + time_to_explode[2]\n    if time_to_explode_in_seconds <= current_time_in_seconds:\n        time_to_explode_in_seconds += 24 * 3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = time_to_explode_in_seconds // 3600 % 24\n    minutes = time_to_explode_in_seconds // 60 % 60\n    seconds = time_to_explode_in_seconds % 60\n    print(\'{}:{}:{}\'.format(str(hours).zfill(2), str(minutes).zfill(2), str(seconds).zfill(2)))\n', '#!/usr/bin/env python3\n\nif __name__ == "__main__":\n    current_time = [int(i) for i in input().split(":")]\n    time_to_explode = [int(i) for i in input().split(":")]\n    current_time_in_seconds = current_time[0] * 3600 + current_time[1] * 60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0] * 3600 + time_to_explode[1] * 60 + time_to_explode[2]\n    if time_to_explode_in_seconds <= current_time_in_seconds:\n        time_to_explode_in_seconds += 24 * 3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = time_to_explode_in_seconds // 3600 % 24\n    minutes = time_to_explode_in_seconds // 60 % 60\n    seconds = time_to_explode_in_seconds % 60\n    print(\'{}:{}:{}\'.format(str(hours).zfill(2), str(minutes).zfill(2), str(seconds).zfill(2)))\n', '#!/usr/bin/env python3\n\nif __name__ == "__main__":\n    current_time = [int(i) for i in input().split(":")]\n    time_to_explode = [int(i) for i in input().split(":")]\n    current_time_in_seconds = current_time[0] * 3600 + current_time[1] * 60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0] * 3600 + time_to_explode[1] * 60 + time_to_explode[2]\n    if time_to_explode_in_seconds <= current_time_in_seconds:\n        time_to_explode_in_seconds += 24 * 3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = time_to_explode_in_seconds // 3600 % 24\n    minutes = time_to_explode_in_seconds // 60 % 60\n    seconds = time_to_explode_in_seconds % 60\n    print(\'{}:{}:{}\'.format(str(hours).zfill(2), str(minutes).zfill(2), str(seconds).zfill(2)))\n']
2022-04-13 07:27:31.548699 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nif __name__ == \"__main__\":\n    current_time = [int(i) for i in input().split(\":\")]\n    time_to_explode = [int(i) for i in input().split(\":\")]\n    current_time_in_seconds = current_time[0] * 3600 + current_time[1] * 60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0] * 3600 + time_to_explode[1] * 60 + time_to_explode[2]\n    if time_to_explode_in_seconds <= current_time_in_seconds:\n        time_to_explode_in_seconds += 24 * 3600\n    time_to_explode_in_seconds -= current_time_in_seconds  # get remaining time\n    hours = time_to_explode_in_seconds // 3600  # get hours\n    time_to_explode_in_seconds %= 3600  # get remaining time\n    minutes = time_to_explode_in_seconds // 60  # get minutes\n    time_to_explode_in_seconds %= 60  # get remaining time\n    seconds = time_to_explode_in_seconds  # get seconds\n    print(str(hours).zfill(2) + \":\" + str(minutes).zfill(2) + \":\" + str(seconds).zfill(2))  # print result\n"
    },
    {
      "index": 1,
      "text": "\n\nif __name__ == \"__main__\":\n    current_time = [int(i) for i in input().split(\":\")]\n    time_to_explode = [int(i) for i in input().split(\":\")]\n    current_time_in_seconds = current_time[0] * 3600 + current_time[1] * 60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0] * 3600 + time_to_explode[1] * 60 + time_to_explode[2]\n    if time_to_explode_in_seconds <= current_time_in_seconds:\n        time_to_explode_in_seconds += 24 * 3600\n    time_to_explode_in_seconds -= current_time_in_seconds  # get remaining time\n    hours = time_to_explode_in_seconds // 3600  # get hours\n    time_to_explode_in_seconds %= 3600  # get remaining time\n    minutes = time_to_explode_in_seconds // 60  # get minutes\n    time_to_explode_in_seconds %= 60  # get remaining time\n    seconds = time_to_explode_in_seconds  # get seconds\n    print(str(hours).zfill(2) + \":\" + str(minutes).zfill(2) + \":\" + str(seconds).zfill(2))\n"
    },
    {
      "index": 2,
      "text": "\nif __name__ == \"__main__\":\n    current_time = [int(i) for i in input().split(\":\")]\n    time_to_explode = [int(i) for i in input().split(\":\")]\n    current_time_in_seconds = current_time[0] * 3600 + current_time[1] * 60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0] * 3600 + time_to_explode[1] * 60 + time_to_explode[2]\n    if time_to_explode_in_seconds <= current_time_in_seconds:\n        time_to_explode_in_seconds += 24 * 3600\n    time_to_explode_in_seconds -= current_time_in_seconds  # get remaining time\n    hours = time_to_explode_in_seconds // 3600  # get hours\n    time_to_explode_in_seconds %= 3600  # get remaining time\n    minutes = time_to_explode_in_seconds // 60  # get minutes\n    time_to_explode_in_seconds %= 60  # get remaining time\n    seconds = time_to_explode_in_seconds  # get seconds\n    print(str(hours).zfill(2) + \":\" + str(minutes).zfill(2) + \":\" + str(seconds).zfill(2))  # print result\n"
    }
  ],
  "created": 1649834848,
  "object": "edit"
}
2022-04-13 07:27:31.548878 fix syntax errors 3 ['\nif __name__ == "__main__":\n    current_time = [int(i) for i in input().split(":")]\n    time_to_explode = [int(i) for i in input().split(":")]\n    current_time_in_seconds = current_time[0] * 3600 + current_time[1] * 60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0] * 3600 + time_to_explode[1] * 60 + time_to_explode[2]\n    if time_to_explode_in_seconds <= current_time_in_seconds:\n        time_to_explode_in_seconds += 24 * 3600\n    time_to_explode_in_seconds -= current_time_in_seconds  # get remaining time\n    hours = time_to_explode_in_seconds // 3600  # get hours\n    time_to_explode_in_seconds %= 3600  # get remaining time\n    minutes = time_to_explode_in_seconds // 60  # get minutes\n    time_to_explode_in_seconds %= 60  # get remaining time\n    seconds = time_to_explode_in_seconds  # get seconds\n    print(str(hours).zfill(2) + ":" + str(minutes).zfill(2) + ":" + str(seconds).zfill(2))  # print result\n', '\n\nif __name__ == "__main__":\n    current_time = [int(i) for i in input().split(":")]\n    time_to_explode = [int(i) for i in input().split(":")]\n    current_time_in_seconds = current_time[0] * 3600 + current_time[1] * 60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0] * 3600 + time_to_explode[1] * 60 + time_to_explode[2]\n    if time_to_explode_in_seconds <= current_time_in_seconds:\n        time_to_explode_in_seconds += 24 * 3600\n    time_to_explode_in_seconds -= current_time_in_seconds  # get remaining time\n    hours = time_to_explode_in_seconds // 3600  # get hours\n    time_to_explode_in_seconds %= 3600  # get remaining time\n    minutes = time_to_explode_in_seconds // 60  # get minutes\n    time_to_explode_in_seconds %= 60  # get remaining time\n    seconds = time_to_explode_in_seconds  # get seconds\n    print(str(hours).zfill(2) + ":" + str(minutes).zfill(2) + ":" + str(seconds).zfill(2))\n', '\nif __name__ == "__main__":\n    current_time = [int(i) for i in input().split(":")]\n    time_to_explode = [int(i) for i in input().split(":")]\n    current_time_in_seconds = current_time[0] * 3600 + current_time[1] * 60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0] * 3600 + time_to_explode[1] * 60 + time_to_explode[2]\n    if time_to_explode_in_seconds <= current_time_in_seconds:\n        time_to_explode_in_seconds += 24 * 3600\n    time_to_explode_in_seconds -= current_time_in_seconds  # get remaining time\n    hours = time_to_explode_in_seconds // 3600  # get hours\n    time_to_explode_in_seconds %= 3600  # get remaining time\n    minutes = time_to_explode_in_seconds // 60  # get minutes\n    time_to_explode_in_seconds %= 60  # get remaining time\n    seconds = time_to_explode_in_seconds  # get seconds\n    print(str(hours).zfill(2) + ":" + str(minutes).zfill(2) + ":" + str(seconds).zfill(2))  # print result\n']
2022-04-13 07:27:31.548982 size on output set 5
2022-04-13 07:27:31.548993 num operations 2
2022-04-13 07:27:31.548998 size on input set 1
2022-04-13 07:27:33.546318 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ncur_time = sys.stdin.readline().strip().split(':')\nexp_time = sys.stdin.readline().strip().split(':')\n\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])\n\n# if the expiry time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24*3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = exp_time//3600\nminutes = exp_time%3600//60\nseconds = exp_time%3600%60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ncur_time = sys.stdin.readline().strip().split(':')\nexp_time = sys.stdin.readline().strip().split(':')\n\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])\n\n# if the expected time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24*3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = exp_time//3600\nminutes = exp_time%3600//60\nseconds = exp_time%3600%60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ncur_time = sys.stdin.readline().strip().split(':')\nexp_time = sys.stdin.readline().strip().split(':')\n\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])\n\n# if the expiry time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24*3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = exp_time//3600\nminutes = exp_time%3600//60\nseconds = exp_time%3600%60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n"
    }
  ],
  "created": 1649834851,
  "object": "edit"
}
2022-04-13 07:27:33.546493 fix spelling mistakes 3 ["\n\nimport sys\n\ncur_time = sys.stdin.readline().strip().split(':')\nexp_time = sys.stdin.readline().strip().split(':')\n\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])\n\n# if the expiry time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24*3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = exp_time//3600\nminutes = exp_time%3600//60\nseconds = exp_time%3600%60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n", "\n\nimport sys\n\ncur_time = sys.stdin.readline().strip().split(':')\nexp_time = sys.stdin.readline().strip().split(':')\n\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])\n\n# if the expected time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24*3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = exp_time//3600\nminutes = exp_time%3600//60\nseconds = exp_time%3600%60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n", "\n\nimport sys\n\ncur_time = sys.stdin.readline().strip().split(':')\nexp_time = sys.stdin.readline().strip().split(':')\n\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])\n\n# if the expiry time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24*3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = exp_time//3600\nminutes = exp_time%3600//60\nseconds = exp_time%3600%60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n"]
2022-04-13 07:27:33.546528 size on output set 2
2022-04-13 07:27:33.546534 size on input set 2
2022-04-13 07:27:36.075712 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ncur_time = sys.stdin.readline().strip().split(':')\nexp_time = sys.stdin.readline().strip().split(':')\n\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])\n\n# if the expiry time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24*3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = exp_time//3600\nminutes = exp_time%3600//60\nseconds = exp_time%3600%60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ncur_time = sys.stdin.readline().strip().split(':')\nexp_time = sys.stdin.readline().strip().split(':')\n\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])\n\n# if the expiry time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24*3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = exp_time//3600\nminutes = exp_time%3600//60\nseconds = exp_time%3600%60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ncur_time = sys.stdin.readline().strip().split(':')\nexp_time = sys.stdin.readline().strip().split(':')\n\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])\n\n# if the expiry time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24*3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = exp_time//3600\nminutes = exp_time%3600//60\nseconds = exp_time%3600%60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n"
    }
  ],
  "created": 1649834853,
  "object": "edit"
}
2022-04-13 07:27:36.075893 fix syntax errors 3 ["\nimport sys\n\ncur_time = sys.stdin.readline().strip().split(':')\nexp_time = sys.stdin.readline().strip().split(':')\n\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])\n\n# if the expiry time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24*3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = exp_time//3600\nminutes = exp_time%3600//60\nseconds = exp_time%3600%60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n", "\nimport sys\n\ncur_time = sys.stdin.readline().strip().split(':')\nexp_time = sys.stdin.readline().strip().split(':')\n\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])\n\n# if the expiry time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24*3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = exp_time//3600\nminutes = exp_time%3600//60\nseconds = exp_time%3600%60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n", "\nimport sys\n\ncur_time = sys.stdin.readline().strip().split(':')\nexp_time = sys.stdin.readline().strip().split(':')\n\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])\n\n# if the expiry time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24*3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = exp_time//3600\nminutes = exp_time%3600//60\nseconds = exp_time%3600%60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n"]
2022-04-13 07:27:42.139603 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\nimport sys\n\ncur_time = sys.stdin.readline().strip().split(':') # read from stdin and strip the newline character\nexp_time = sys.stdin.readline().strip().split(':') # read from stdin and strip the newline character\n\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])\n\n# if the expected time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24*3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = math.floor(exp_time/3600)\nminutes = math.floor(exp_time%3600/60)\nseconds = exp_time%3600%60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ncur_time = sys.stdin.readline().strip().split(':')\nexp_time = sys.stdin.readline().strip().split(':')\n\n# convert to seconds\ncur_time = int(cur_time[0]) * 3600 + int(cur_time[1]) * 60 + int(cur_time[2])\nexp_time = int(exp_time[0]) * 3600 + int(exp_time[1]) * 60 + int(exp_time[2])\n\n# if the expected time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24 * 3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = exp_time // 3600\nminutes = exp_time % 3600 // 60\nseconds = exp_time % 3600 % 60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ncur_time = sys.stdin.readline().strip().split(':')\nexp_time = sys.stdin.readline().strip().split(':')\n\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])\n\n# if the expected time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24*3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = exp_time//3600\nminutes = exp_time%3600//60\nseconds = exp_time%3600%60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n"
    }
  ],
  "created": 1649834856,
  "object": "edit"
}
2022-04-13 07:27:42.139771 fix syntax errors 3 ["\n\nimport math\nimport sys\n\ncur_time = sys.stdin.readline().strip().split(':') # read from stdin and strip the newline character\nexp_time = sys.stdin.readline().strip().split(':') # read from stdin and strip the newline character\n\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])\n\n# if the expected time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24*3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = math.floor(exp_time/3600)\nminutes = math.floor(exp_time%3600/60)\nseconds = exp_time%3600%60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n", "\nimport sys\n\ncur_time = sys.stdin.readline().strip().split(':')\nexp_time = sys.stdin.readline().strip().split(':')\n\n# convert to seconds\ncur_time = int(cur_time[0]) * 3600 + int(cur_time[1]) * 60 + int(cur_time[2])\nexp_time = int(exp_time[0]) * 3600 + int(exp_time[1]) * 60 + int(exp_time[2])\n\n# if the expected time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24 * 3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = exp_time // 3600\nminutes = exp_time % 3600 // 60\nseconds = exp_time % 3600 % 60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n", "\nimport sys\n\ncur_time = sys.stdin.readline().strip().split(':')\nexp_time = sys.stdin.readline().strip().split(':')\n\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])\n\n# if the expected time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24*3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = exp_time//3600\nminutes = exp_time%3600//60\nseconds = exp_time%3600%60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n"]
2022-04-13 07:27:42.139807 size on output set 4
2022-04-13 07:27:42.139817 num operations 2
2022-04-13 07:27:42.139822 size on input set 1
2022-04-13 07:27:44.589063 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "import sys\nimport datetime\n\ndef main():\n    current_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    desired_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    current_time = datetime.time(current_time[0], current_time[1], current_time[2])\n    desired_time = datetime.time(desired_time[0], desired_time[1], desired_time[2])\n    if desired_time < current_time:\n        desired_time = datetime.datetime.combine(datetime.date.today() + datetime.timedelta(days=1), desired_time)\n    else:\n        desired_time = datetime.datetime.combine(datetime.date.today(), desired_time)\n    print(desired_time - datetime.datetime.combine(datetime.date.today(), current_time))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\nimport datetime\n\ndef main():\n    current_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    desired_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    current_time = datetime.time(current_time[0], current_time[1], current_time[2])\n    desired_time = datetime.time(desired_time[0], desired_time[1], desired_time[2])\n    if desired_time < current_time:\n        desired_time = datetime.datetime.combine(datetime.date.today() + datetime.timedelta(days=1), desired_time)\n    else:\n        desired_time = datetime.datetime.combine(datetime.date.today(), desired_time)\n    print(desired_time - datetime.datetime.combine(datetime.date.today(), current_time))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\nimport datetime\n\ndef main():\n    current_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    desired_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    current_time = datetime.time(current_time[0], current_time[1], current_time[2])\n    desired_time = datetime.time(desired_time[0], desired_time[1], desired_time[2])\n    if desired_time < current_time:\n        desired_time = datetime.datetime.combine(datetime.date.today() + datetime.timedelta(days=1), desired_time)\n    else:\n        desired_time = datetime.datetime.combine(datetime.date.today(), desired_time)\n    print(str(desired_time - datetime.datetime.combine(datetime.date.today(), current_time)).split('.')[0])\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649834862,
  "object": "edit"
}
2022-04-13 07:27:44.589255 fix spelling mistakes 3 ["import sys\nimport datetime\n\ndef main():\n    current_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    desired_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    current_time = datetime.time(current_time[0], current_time[1], current_time[2])\n    desired_time = datetime.time(desired_time[0], desired_time[1], desired_time[2])\n    if desired_time < current_time:\n        desired_time = datetime.datetime.combine(datetime.date.today() + datetime.timedelta(days=1), desired_time)\n    else:\n        desired_time = datetime.datetime.combine(datetime.date.today(), desired_time)\n    print(desired_time - datetime.datetime.combine(datetime.date.today(), current_time))\n\nif __name__ == '__main__':\n    main()\n", "import sys\nimport datetime\n\ndef main():\n    current_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    desired_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    current_time = datetime.time(current_time[0], current_time[1], current_time[2])\n    desired_time = datetime.time(desired_time[0], desired_time[1], desired_time[2])\n    if desired_time < current_time:\n        desired_time = datetime.datetime.combine(datetime.date.today() + datetime.timedelta(days=1), desired_time)\n    else:\n        desired_time = datetime.datetime.combine(datetime.date.today(), desired_time)\n    print(desired_time - datetime.datetime.combine(datetime.date.today(), current_time))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport datetime\n\ndef main():\n    current_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    desired_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    current_time = datetime.time(current_time[0], current_time[1], current_time[2])\n    desired_time = datetime.time(desired_time[0], desired_time[1], desired_time[2])\n    if desired_time < current_time:\n        desired_time = datetime.datetime.combine(datetime.date.today() + datetime.timedelta(days=1), desired_time)\n    else:\n        desired_time = datetime.datetime.combine(datetime.date.today(), desired_time)\n    print(str(desired_time - datetime.datetime.combine(datetime.date.today(), current_time)).split('.')[0])\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 07:27:44.589383 size on output set 2
2022-04-13 07:27:44.589391 size on input set 2
2022-04-13 07:27:49.015600 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\nimport datetime\n\ndef main():\n    current_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    desired_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    current_time = datetime.time(current_time[0], current_time[1], current_time[2])\n    desired_time = datetime.time(desired_time[0], desired_time[1], desired_time[2])\n    if desired_time < current_time:\n        desired_time = datetime.datetime.combine(datetime.date.today() + datetime.timedelta(days=1),\n                                                 desired_time)\n    else:\n        desired_time = datetime.datetime.combine(datetime.date.today(), desired_time)\n    print(str(desired_time - datetime.datetime.combine(datetime.date.today(),\n                                                       current_time)).split('.')[0])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport datetime\n\ndef main():\n    current_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    desired_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    current_time = datetime.time(current_time[0], current_time[1], current_time[2])\n    desired_time = datetime.time(desired_time[0], desired_time[1], desired_time[2])\n    if desired_time < current_time:\n        desired_time = datetime.datetime.combine(datetime.date.today() + datetime.timedelta(days=1), desired_time)\n    else:\n        desired_time = datetime.datetime.combine(datetime.date.today(), desired_time)\n    print(str(desired_time - datetime.datetime.combine(datetime.date.today(), current_time)).split('.')[0])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\nimport datetime\n\ndef main():\n    current_time = [int(x) for x in sys.stdin.readline().split(':')]\n    desired_time = [int(x) for x in sys.stdin.readline().split(':')]\n    current_time = datetime.time(current_time[0], current_time[1], current_time[2])\n    desired_time = datetime.time(desired_time[0], desired_time[1], desired_time[2])\n    if desired_time < current_time:\n        desired_time = datetime.datetime.combine(datetime.date.today() + datetime.timedelta(days=1), desired_time)\n    else:\n        desired_time = datetime.datetime.combine(datetime.date.today(), desired_time)\n    print(str(desired_time - datetime.datetime.combine(datetime.date.today(), current_time)).split('.')[0])\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649834864,
  "object": "edit"
}
2022-04-13 07:27:49.015788 fix syntax errors 3 ["import sys\nimport datetime\n\ndef main():\n    current_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    desired_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    current_time = datetime.time(current_time[0], current_time[1], current_time[2])\n    desired_time = datetime.time(desired_time[0], desired_time[1], desired_time[2])\n    if desired_time < current_time:\n        desired_time = datetime.datetime.combine(datetime.date.today() + datetime.timedelta(days=1),\n                                                 desired_time)\n    else:\n        desired_time = datetime.datetime.combine(datetime.date.today(), desired_time)\n    print(str(desired_time - datetime.datetime.combine(datetime.date.today(),\n                                                       current_time)).split('.')[0])\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nimport datetime\n\ndef main():\n    current_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    desired_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    current_time = datetime.time(current_time[0], current_time[1], current_time[2])\n    desired_time = datetime.time(desired_time[0], desired_time[1], desired_time[2])\n    if desired_time < current_time:\n        desired_time = datetime.datetime.combine(datetime.date.today() + datetime.timedelta(days=1), desired_time)\n    else:\n        desired_time = datetime.datetime.combine(datetime.date.today(), desired_time)\n    print(str(desired_time - datetime.datetime.combine(datetime.date.today(), current_time)).split('.')[0])\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport datetime\n\ndef main():\n    current_time = [int(x) for x in sys.stdin.readline().split(':')]\n    desired_time = [int(x) for x in sys.stdin.readline().split(':')]\n    current_time = datetime.time(current_time[0], current_time[1], current_time[2])\n    desired_time = datetime.time(desired_time[0], desired_time[1], desired_time[2])\n    if desired_time < current_time:\n        desired_time = datetime.datetime.combine(datetime.date.today() + datetime.timedelta(days=1), desired_time)\n    else:\n        desired_time = datetime.datetime.combine(datetime.date.today(), desired_time)\n    print(str(desired_time - datetime.datetime.combine(datetime.date.today(), current_time)).split('.')[0])\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 07:27:58.930434 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\nimport datetime\n\ndef main():\n    current_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    desired_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    current_time = datetime.datetime.now().replace(hour=current_time[0], minute=current_time[1], second=current_time[2])\n    desired_time = datetime.datetime.now().replace(hour=desired_time[0], minute=desired_time[1], second=desired_time[2])\n    if desired_time < current_time:\n        desired_time = datetime.datetime.combine(datetime.date.today() + datetime.timedelta(days=1), desired_time)\n    else:\n        desired_time = datetime.datetime.combine(datetime.date.today(), desired_time)\n    print(desired_time - current_time)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\nimport datetime\n\ndef main():\n    current_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    desired_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    current_time = datetime.datetime(1, 1, 1, current_time[0], current_time[1], current_time[2])\n    desired_time = datetime.datetime(1, 1, 1, desired_time[0], desired_time[1], desired_time[2])\n    if desired_time < current_time:\n        desired_time = desired_time.replace(day=desired_time.day + 1)\n    else:\n        desired_time = desired_time.replace(day=desired_time.day)\n    print(desired_time - current_time)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\nimport datetime\n\ndef main():\n  current_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n  desired_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n  current_time = datetime.time(current_time[0], current_time[1], current_time[2])\n  desired_time = datetime.time(desired_time[0], desired_time[1], desired_time[2])\n  if desired_time < current_time:\n    desired_time = datetime.datetime.combine(datetime.date.today() + datetime.timedelta(days=1), desired_time)\n  else:\n    desired_time = datetime.datetime.combine(datetime.date.today(), desired_time)\n  print(desired_time - datetime.datetime.combine(datetime.date.today(), current_time))\n\nif __name__ == '__main__':\n  main()\n"
    }
  ],
  "created": 1649834869,
  "object": "edit"
}
2022-04-13 07:27:58.930610 fix syntax errors 3 ["import sys\nimport datetime\n\ndef main():\n    current_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    desired_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    current_time = datetime.datetime.now().replace(hour=current_time[0], minute=current_time[1], second=current_time[2])\n    desired_time = datetime.datetime.now().replace(hour=desired_time[0], minute=desired_time[1], second=desired_time[2])\n    if desired_time < current_time:\n        desired_time = datetime.datetime.combine(datetime.date.today() + datetime.timedelta(days=1), desired_time)\n    else:\n        desired_time = datetime.datetime.combine(datetime.date.today(), desired_time)\n    print(desired_time - current_time)\n\nif __name__ == '__main__':\n    main()\n", "import sys\nimport datetime\n\ndef main():\n    current_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    desired_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    current_time = datetime.datetime(1, 1, 1, current_time[0], current_time[1], current_time[2])\n    desired_time = datetime.datetime(1, 1, 1, desired_time[0], desired_time[1], desired_time[2])\n    if desired_time < current_time:\n        desired_time = desired_time.replace(day=desired_time.day + 1)\n    else:\n        desired_time = desired_time.replace(day=desired_time.day)\n    print(desired_time - current_time)\n\nif __name__ == '__main__':\n    main()\n", "import sys\nimport datetime\n\ndef main():\n  current_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n  desired_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n  current_time = datetime.time(current_time[0], current_time[1], current_time[2])\n  desired_time = datetime.time(desired_time[0], desired_time[1], desired_time[2])\n  if desired_time < current_time:\n    desired_time = datetime.datetime.combine(datetime.date.today() + datetime.timedelta(days=1), desired_time)\n  else:\n    desired_time = datetime.datetime.combine(datetime.date.today(), desired_time)\n  print(desired_time - datetime.datetime.combine(datetime.date.today(), current_time))\n\nif __name__ == '__main__':\n  main()\n"]
2022-04-13 07:27:58.930715 size on output set 6
