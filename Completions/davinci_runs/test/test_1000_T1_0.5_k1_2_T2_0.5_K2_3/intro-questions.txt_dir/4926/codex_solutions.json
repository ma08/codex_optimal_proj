["\n\nimport math\nprint(sum([1/math.factorial(i) for i in range(int(input()))]))", "\n\n#Solution:\n\nimport math\n\ndef factorial(x):\n    if x == 0:\n        return 1\n    else:\n        return x*factorial(x-1)\n\ndef e_approx(n):\n    approx = 0\n    for i in range(n+1):\n        approx += 1/factorial(i)\n    return approx\n\ndef main():\n    n = int(input())\n    print(e_approx(n))\n\nmain()", "\n\nN = int(input())\n\ne = 1\nfor n in range(1, N+1):\n    e += 1 / math.factorial(n)\n\nprint(e)", "\n\nimport sys\nimport math\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nn = int(sys.stdin.readline())\n\nprint(sum([1/factorial(x) for x in range(n)]))", "\n\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef euler(n):\n    e = 0\n    for i in range(0, n+1):\n        e += 1 / factorial(i)\n    return e\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    print(euler(n))\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef eulers_number(n):\n    return sum([1/factorial(x) for x in range(n+1)])\n\nif __name__ == \"__main__\":\n    n = int(sys.stdin.read())\n    print(eulers_number(n))", "\n\nimport sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef euler_approx(n):\n    e = 0\n    for i in range(n+1):\n        e += 1/factorial(i)\n    return e\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(euler_approx(n))\n\nif __name__ == '__main__':\n    main()", "\n\nimport math\n\ndef euler(n):\n    return sum(1/math.factorial(i) for i in range(n+1))\n\nif __name__ == '__main__':\n    print(euler(int(input())))"]