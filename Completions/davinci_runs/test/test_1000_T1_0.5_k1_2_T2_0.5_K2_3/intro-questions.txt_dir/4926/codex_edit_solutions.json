["import sys\nimport math\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nn = int(sys.stdin.readline())\n\nprint(sum([1/factorial(x) for x in range(n)]))\n", "\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef euler(n):\n    e = 0\n    for i in range(0, n + 1):\n        e += 1 / factorial(i)\n    return e\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    print(euler(n))\n\nif __name__ == '__main__':\n    main()\n", "\n#\n#Solution :\n\nimport math\n\ndef factorial(x):\n    if x == 0:\n        return 1\n    else:\n        return x*factorial(x-1)\n\ndef e_approx(n):\n    approx = 0\n    for i in range(n+1):\n        approx += 1/factorial(i)\n    return approx\n\ndef main():\n    n = int(input())\n    print(e_approx(n))\n\nmain()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef euler_approximation(n):\n    e = 0\n    for i in range(n+1):\n        e += 1/factorial(i)\n    return e\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    print(euler_approximation(n))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef factorial(x):\n    if x == 0:\n        return 1\n    else:\n        return x * factorial(x-1)\n\ndef euler(x):\n    e = 0\n    for i in range(0, x+1):\n        e += 1 / factorial(i)\n    return e\n\ndef main():\n    x = int(sys.stdin.readline().strip())\n    print(euler(x))\n\nif __name__ == '__main__':\n    main()\n\n\n\n", "\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nn = int(sys.stdin.readline())\n\nprint(sum([1/factorial(x) for x in range(n)]))\n", "\nfrom math import factorial\n\ndef euler(n):\n    return sum(1/factorial(i) for i in range(n+1))\n\nif __name__ == '__main__':\n\n    print(euler(int(input())))\n", "\nimport sys\n\ndef factorial(n): \n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef euler_approx(n):\n\te = 0\n\tfor i in range(n+1):\n\t\te += 1/factorial(i)\n\treturn e\n\ndef main():\n\tn = int(sys.stdin.readline())\n\tprint(euler_approx(n))\n\nif __name__ == '__main__':\n    main()\n", "\na, b = map(int, input().split())\nprint(a + b)\n", "\n#This is a test file\n#Solution :\n\nimport math\n\ndef factorial(x):\n    if x == 0:\n        return 1\n    else:\n        return x*factorial(x-1)\n\ndef e_approx(n):\n    approx = 0\n    for i in range(n+1):\n        approx += 1/factorial(i)\n    return approx\n\ndef main():\n    n = int(input())\n    print(e_approx(n))\n\nmain()\n", "#!/usr/bin/env python3\n\nimport sys\n\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nn = int(sys.stdin.readline())\n\nprint(sum([1/factorial(x) for x in range(n)]))\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Tue Mar  5 08:47:36 2019\n@author: yash\n\"\"\"\n\nimport sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef euler_approx(n):\n    e = 1\n    for i in range(n+1):\n        e += 1 / factorial(i)\n    return e\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(euler_approx(n))\n\nif __name__ == '__main__':\n    main()\n", "\nprint(\"Hello World!\")\n", "\nimport math\nprint(sum([1/math.factorial(i) for i in range(int(input()))]))\n", "import sys\nimport math\n\ndef euler(n):\n    return sum(1/math.factorial(i) for i in range(n+1))\n\nif __name__ == '__main__':\n    print(euler(int(sys.stdin.readline())))\n", "\n\nimport math\nprint(sum([1/math.factorial(i) for i in range(int(input()))]))\n", "\n# Solution:\n# import math\n\ndef factorial(x):\n    if x == 0:\n        return 1\n    else:\n        return x * factorial(x-1)\n\ndef e_approx(n):\n    approx = 0\n    for i in range(n+1):\n        approx += 1 / factorial(i)\n    return approx\n\ndef main():\n    n = int(input())\n    print(e_approx(n))\n\nmain()\n", "\n\nimport math\n\nN = int(input('Enter the number of terms: '))\n\ne = 1\nfor n in range(1, N+1):\n    e += 1 / math.factorial(n)\n\nprint('The sum of the series is:', e)\n", "\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef euler_number(n):\n    return sum([1/factorial(x) for x in range(n+1)])\n\nif __name__ == \"__main__\":\n    print(euler_number(int(sys.stdin.read())))\n", "\nimport sys\n\ndef factorial(n): \n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef euler_approx(n):\n    e = 0\n    for i in range(n+1):\n        e += 1/factorial(i)\n    return e\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(euler_approx(n))\n\nif __name__ == '__main__':\n    main()\n", "\n# Solution:\n\ndef factorial(x):\n    if x == 0:\n        return 1\n    else:\n        return x * factorial(x-1)\n\ndef e_approx(n):\n    approx = 0\n    for i in range(n+1):\n        approx += 1 / factorial(i)\n    return approx\n\ndef main():\n    n = int(input())\n    print(e_approx(n))\n\nmain()\n", "\nprint(\"Hello World\")\nprint(\"Hello World\")\n", "import sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef euler(n):\n    e = 0\n    for i in range(0, n+1):\n        e += 1 / factorial(i)\n    return e\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    print(euler(n))\n\nif __name__ == '__main__':\n    main()\n", "# Solution:\n\n\ndef factorial(x):  # define function\n    if x == 0:  # if x is zero\n        return 1  # return 1\n    else:  # otherwise\n        return x * factorial(x - 1)  # return x multiplied by factorial of x-1\n\n\ndef e_approx(n):\n    approx = 0  # define variable\n    for i in range(n + 1):  # for each number from 0 to n\n        approx += 1 / factorial(i)  # add 1 over factorial(i) to approx\n    return approx  # return approx\n\n\ndef main():\n    n = int(input())  # define n\n    print(e_approx(n))  # print e_approx(n)\n\n\nmain()\n", "\nimport math\n\ndef euler(n):\n    return sum(1 / math.factorial(i) for i in range(n+1))\n\nif __name__ == '__main__':\n\n    print(euler(int(input())))\n", "import sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\ndef euler(n):\n    e = 0\n    for i in range(0, n + 1):\n        e += 1 / factorial(i)\n    return e\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    print(euler(n))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\nimport math\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nn = int(sys.stdin.readline())\n\nprint(sum([1/factorial(x) for x in range(n+1)]))\n", "import sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\ndef euler_approximation(n):\n    e = 0\n    for i in range(n+1):\n        e += 1/factorial(i)\n    return e\ndef main():\n    n = int(sys.stdin.readline())\n    print(euler_approximation(n))    \nif __name__ == '__main__':\n    main()\n", "\nimport sys\nimport math\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n  \nn = int(sys.stdin.readline())\n\nprint(sum([1/factorial(x) for x in range(n)]))\n", "\n# https://www.hackerrank.com/challenges/e-approximation/problem\n#Solution :\n\nimport math\n\ndef factorial(x):\n    if x == 0:\n        return 1\n    else:\n        return x*factorial(x-1)\n\ndef e_approx(n):\n    approx = 0\n    for i in range(n+1):\n        approx += 1/factorial(i)\n    return approx\n\ndef main():\n    n = int(input())\n    print(e_approx(n))\n\nmain()\n", "\n\nimport sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef euler_approximation(n):\n    e = 0\n    for i in range(n):\n        e += 1/factorial(i)\n    return e\n\ndef main():\n    n = int(sys.stdin.readline()) + 1\n    print(euler_approximation(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport math \nprint(sum([1/math.factorial(i) for i in range(int(input()))]))\n", "\nimport sys\nimport math\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nn = int(sys.stdin.readline())\n\nprint(sum([1.0/factorial(x) for x in range(n)]))\n", "\n# test\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef euler(n):\n    e = 0\n    for i in range(0, n+1):\n        e += 1 / factorial(i)\n    return e\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    print(euler(n))\n\nif __name__ == '__main__':\n    main()\n", "import math\n\nN = int(input())  # number of terms\n\ne = 1\nfor n in range(1, N+1):\n    e += 1 / math.factorial(n)\n\nprint(e)\n", "import sys\n\n\n\ndef factorial(x):\n    if x == 0:\n        return 1\n    else:\n        return x * factorial(x-1)\n\ndef euler(x):\n    e = 0\n    for i in range(0, x+1):\n        e += 1 / factorial(i)\n    return e\n\ndef main():\n    x = int(sys.stdin.readline().strip())\n    print(euler(x))\n\nif __name__ == '__main__':\n    main()\n", "import math\nprint(sum([1/math.factorial(i) for i in range(int(input()))]))\n", "\nimport sys\n\ndef factorial(x):\n    if x == 0:\n        return 1\n    return x * factorial(x-1)\n\ndef euler(x):\n    e = 0\n    for i in range(0, x+1):\n        e += 1 / factorial(i)\n    return e\n\ndef main():\n    x = int(sys.stdin.readline().strip())\n    print(euler(x))\n\nif __name__ == '__main__':\n    main()\n", "import math\n\nN = int(input())\n\ne = 1\nfor n in range(1, N+1):\n    e += 1 / math.factorial(n)\n\nprint(e)\n", "\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef euler(n):\n    e = 0\n    for i in range(0, n+1):\n        e += 1 / factorial(i)\n    return e\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    print(euler(n))\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef euler(n):\n    return sum(1/math.factorial(i) for i in range(n+1)) \n\nif __name__ == '__main__':\n    print(euler(int(input())))\n", "\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef euler_number(n):\n    return sum([1/factorial(x) for x in range(n+1)])\n\nif __name__ == \"__main__\":\n    n = int(sys.stdin.read())\n    print(euler_number(n))\n", "\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef euler_number(n):\n    return sum([1/factorial(x) for x in range(n+1)])\n\nif __name__ == \"__main__\":\n    n = int(sys.argv[1])\n    print(\"{:.10f}\".format(euler_number(n)))\n", "\nimport math\n\ndef euler(n):\n    return sum(1 / math.factorial(i) for i in range(n + 1))\n\nif __name__ == '__main__':\n    print(euler(int(input())))\n", "\n#!/usr/bin/env python3\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef euler(n):\n    e = 0\n    for i in range(0, n+1):\n        e += 1 / factorial(i)\n    return e\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    print(euler(n))\n\nif __name__ == '__main__':\n    main()\n", "a, b = map(int, input().split())\nprint(a + b)\n", "\nprint \"Hello World\"\n", "import math\n\ndef euler(n):\n    return sum(1/math.factorial(i) for i in range(n+1))\n\nif __name__ == '__main__':\n\n    print(euler(int(input())))\n", "\nimport sys\nimport math\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nn = int(sys.stdin.readline())\n\nprint(sum([1/factorial(x) for x in range(n+1)]))\n", "\nimport math\nN = int(input())\n\ne = 1\nfor n in range(1, N + 1):\n    e += 1 / math.factorial(n)  # factorial is a function in the math module\n\nprint(e)\n"]