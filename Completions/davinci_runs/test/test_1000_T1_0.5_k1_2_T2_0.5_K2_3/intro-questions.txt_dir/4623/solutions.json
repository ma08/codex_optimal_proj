["for _ in range(int(input())):\n    n = int(input())\n    wt = list(map(int, input().split()))\n    count = {}\n    for x in wt:\n        if x not in count:\n            count[x] = 0\n        count[x] += 1\n    k = 0\n\n    for s in range(101):\n        temp = 0\n        temp2 = 0\n        for x in count:\n            if (s - x) in count:\n                if (s - x) == x:\n                    temp2 += count[x] // 2\n                else:\n                    temp += min(count[x], count[s -x])\n        \n        k = max(k, temp//2 + temp2)\n    print(k)\n", "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    a.sort()\n    ga=0\n    for i in range(1,2*n+1):\n        j,k=0,n-1 \n        flag=True\n        ans=0\n        while(j<k):\n            if a[j]+a[k]>i:\n                k-=1 \n            elif a[j]+a[k]<i:\n                j+=1 \n            else:\n                j+=1 \n                k-=1 \n                ans+=1 \n        ga=max(ans,ga)\n    print(ga)\n", "import sys\ninput = sys.stdin.readline\nfrom collections import Counter\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    W=list(map(int,input().split()))\n    C=Counter(W)\n\n    ANS=0\n\n    for i in range(n):\n        for j in range(i+1,n):\n            B=W[i]+W[j]\n\n            A=0\n\n            for c in C:\n                if c*2==B:\n                    A+=C[c]//2\n\n                elif c*2<B:\n                    A+=min(C[c],C[B-c])\n\n            ANS=max(ANS,A)\n\n    print(ANS)\n\n    \n", "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\n\nfrom itertools import accumulate\n\nM = mod = 998244353\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n \ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\n\n\nfor _ in range(val()):\n    n = val()\n    l = li()\n    ans = 0\n    for j in range(1, 101):\n        curr = 0\n        m = Counter(l)\n        for i in l:\n            if j - i != i and m[j - i] and m[i]:\n                m[j-i] -= 1\n                m[i] -= 1\n                curr += 1\n            if j - i == i and m[i] > 1:\n                m[i] -= 2\n                curr += 1\n        # print(curr, j)\n        ans = max(ans, curr)\n    print(ans)", "import sys, math\nimport io, os\n#data = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\nfrom bisect import bisect_left as bl, bisect_right as br, insort\nfrom heapq import heapify, heappush, heappop\nfrom collections import defaultdict as dd, deque, Counter\n#from itertools import permutations,combinations\ndef data(): return sys.stdin.readline().strip()\ndef mdata(): return list(map(int, data().split()))\ndef outl(var) : sys.stdout.write(' '.join(map(str, var))+'\\n')\ndef out(var) : sys.stdout.write(str(var)+'\\n')\nfrom decimal import Decimal\nfrom fractions import Fraction\n#sys.setrecursionlimit(100000)\nINF = float('inf')\nmod = int(1e9)+7\n\nfor t in range(int(data())):\n    n=int(data())\n    w=sorted(mdata())\n    ans=0\n    for i in range(2,2*max(w)+1):\n        cnt=0\n        s,e=0,n-1\n        while s<e:\n            if w[s]+w[e]==i:\n                cnt+=1\n                s+=1\n                e-=1\n            elif w[s]+w[e]<i:\n                s+=1\n            else:\n                e-=1\n        ans=max(ans,cnt)\n    out(ans)\n\n", "for _ in range(int(input())):\n    n = int(input())\n    u = list(map(int, input().split()))\n    d = [0] * n\n    for i in range(n):\n        d[u[i] - 1] += 1\n    ans = 0\n    for s in range(1, 2 * n + 1):\n        d1 = d[:]\n        cnt = 0\n        for i in range(n):\n            if 0 <= s - u[i] - 1 < n and d1[s - u[i] - 1] > 0:\n                cnt += 1\n                d1[s - u[i] - 1] -= 1\n        ans = max(ans, cnt)\n    print(ans // 2)\n        \n", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    c = [0] * (n + 1)\n    for i in a:\n        c[i] += 1\n    ans = 0\n    for tw in range(1, 101):\n        cans = 0\n        b = [0] * (n + 1)\n        for i in a:\n            j = tw - i\n            if j > n or j <= 0:\n                continue\n            if i != j and c[i] - b[i] >= 1 and c[j] - b[j] >= 1 \\\n                    or i == j and c[i] - b[i] >= 2:\n                b[i] += 1\n                b[j] += 1\n                cans += 1\n        ans = max(ans, cans)\n    print(ans)\n\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ws = sorted(map(int, input().split()))\n    ans = 0\n    for s in range(2, 101):\n        count = 0\n        l = 0\n        r = n - 1\n        while r > l:\n            if ws[l] + ws[r] == s:\n                l += 1\n                r -= 1\n                count += 1\n            elif ws[l] + ws[r] < s:\n                l += 1\n            else:\n                r -= 1\n        ans = max(ans, count)\n    print(ans)", "from collections import defaultdict\n\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    w = list(map(int, input().split()))\n    counts = defaultdict(int)\n    for x in w:\n        counts[x] += 1\n    \n    m = 0\n    for s in range(2, n*2+1):\n        count = 0\n        for x in list(counts.keys()):\n            xcount = counts[x]\n            if x < s-x:            \n                c = counts[s-x]\n                count += min(c, xcount)\n            elif x == s-x:\n                count += xcount//2\n            \n        m = max(m, count)\n    print(m)\n            \n", "from bisect import bisect_left\nimport sys\ninput=sys.stdin.readline\nt = int(input())\n\nfor _ in range(t):\n    l = int(input())\n    a = list(map(int,input().split()))\n    a.sort()\n    \n    ans = 0\n    \n    for w in range(1,2*l+1):\n        c = 0\n        used = {}\n        for i in range(len(a)):\n            for j in range(i+1, len(a)):\n                if a[i] + a[j] == w and i not in used and j not in used:\n                    c += 1\n                    used[i] = 1\n                    used[j] = 1\n        ans = max(c, ans)\n    print(ans)", "#!/usr/bin/env pypy3\n\nfrom collections import Counter\n\ndef score(cN, target):\n\tret1 = 0\n\tret2 = 0\n\tfor k in cN:\n\t\tif 2*k == target:\n\t\t\tret1 += cN[k] // 2\n\t\telse:\n\t\t\tl = target - k\n\t\t\tret2 += min(cN[k], cN[l])\n\treturn ret1 + ret2//2\n\ndef ans(N):\n\tN = sorted(N)\n\tcN = Counter(N)\n\n\treturn max(score(cN, target) for target in range(2, 101))\n\nT = int(input())\nfor t in range(T):\n\tinput()\n\tN = list(map(int, input().split()))\n\t\n\tprint(ans(N))", "t = int(input())\nfor _ in range(t):\n\tn = int(input())\n\tarr = [int(j) for j in input().split()]\n\n\tcount = [0]*101\n\n\tfor x in arr:\n\t\tcount[x] += 1\n\n\tans = 0\n\tfor i in range(1, 101):\n\t\ttemp = 0\n\t\tfor j in range(1, i+1):\n\t\t\ttemp += min(count[j], count[i-j])\n\t\ttemp //= 2\n\t\tans = max(ans, temp)\n\tprint(ans)\n", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    w = list(map(int, input().split()))\n    m = min(w)\n    M = max(w)\n    ans = 0\n    for i in range(m*2, M*2+1):\n        d = dict()\n        tmp = 0\n        for x in w:\n            if i - x in d and d[i-x] > 0:\n                d[i-x] -= 1\n                tmp += 1\n            else:\n                if x in d:\n                    d[x] += 1\n                else:\n                    d[x] = 1\n        if ans < tmp:\n            ans = tmp\n        # print(tmp, i)\n    print(ans)\n", "\nfor _ in range(int(input())):\n    n = int(input())\n    w = list(sorted(map(int, input().split())))\n    ma = 0\n    for s in range(2,2*n+1):\n        l = 0\n        r = n-1\n        cnt = 0\n        while l < r:\n            cs = w[l] + w[r]\n            if cs == s:\n                cnt += 1\n                l += 1\n                r -= 1\n            elif cs < s:\n                l += 1\n            else:\n                r -= 1\n        ma = max(cnt, ma)\n\n    print(ma)\n\n"]