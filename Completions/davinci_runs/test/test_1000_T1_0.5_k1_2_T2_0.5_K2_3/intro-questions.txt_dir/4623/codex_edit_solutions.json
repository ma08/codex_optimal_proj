["\n\nimport sys\n\ndef main():\n    T = int(sys.stdin.readline())\n    for _ in range(T):\n        N = int(sys.stdin.readline())\n        weights = [int(x) for x in sys.stdin.readline().split()]\n        weights.sort()\n        i = 0\n        j = N - 1\n        ans = 0\n        while i < j:\n            if weights[i] + weights[j] == weights[i] * 2:\n                ans += 1\n                i += 1\n                j -= 1\n            elif weights[i] + weights[j] > weights[i] * 2:\n                j -= 1\n            else:\n                i += 1\n        print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    T = int(sys.stdin.readline())\n    for _ in range(T):\n        N = int(sys.stdin.readline())\n        weights = [int(x) for x in sys.stdin.readline().split()] # read all the weights\n        weights.sort()\n        i = 0\n        j = N - 1\n        ans = 0\n        while i < j:\n            if weights[i] + weights[j] == weights[i] * 2:\n                ans += 1\n                i += 1\n                j -= 1\n            elif weights[i] + weights[j] > weights[i] * 2:\n                j -= 1\n            else:\n                i += 1\n        print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "# Problem Link: https://www.codechef.com/JUNE20B/problems/XYSTR\n\n# SOLUTION\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    ans = 1\n    for i in range(1, n):\n        if s[i] == s[i-1]:\n            ans += 1\n            i += 1\n        else:\n            continue\n    ans = ans//2\n    print(ans)\n", "import sys\n\ndef main():\n    T = int(sys.stdin.readline())\n    for _ in range(T):\n        N = int(sys.stdin.readline())\n        weights = [int(x) for x in sys.stdin.readline().split()]\n        weights.sort()\n        i = 0\n        j = N - 1\n        ans = 0\n        while i < j:\n            if weights[i] + weights[j] == weights[i] * 2:\n                ans += 1\n                i += 1\n                j -= 1\n            elif weights[i] + weights[j] > weights[i] * 2:\n                j -= 1\n            else:\n                i += 1\n        print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    T = int(sys.stdin.readline())\n    for _ in range(T):\n        N = int(sys.stdin.readline())\n        weights = [int(x) for x in sys.stdin.readline().split()]\n        weights.sort()\n        i = 0\n        j = N - 1\n        ans = 0\n        while i < j:\n            if weights[i] + weights[j] == weights[i] * 2:\n                ans += 1\n                i += 1\n                j -= 1\n            elif weights[i] + weights[j] > weights[i] * 2:\n                j -= 1\n            else:\n                i += 1\n        print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n#\n# SOLUTION\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\n\ndef find_lcm(arr):\n    ans = arr[0]\n    for i in range(1, len(arr)):\n        ans = lcm(ans, arr[i])\n    return ans\n\n\nfor _ in range(int(input())):\n    n, k = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(find_lcm(arr) % k)\n", "\n# SOLUTION \nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    weights = map(int, input().split())\n    weights = list(weights)\n    weights.sort()\n    ans = 0\n    i = 0\n    j = n-1\n    while i<j:\n        if weights[i] + weights[j] == weights[i+1] + weights[j-1]:\n            ans += 1\n            i += 1\n            j -= 1\n        elif weights[i] + weights[j] > weights[i+1] + weights[j-1]:\n            j -= 1\n        else:\n            i += 1\n    print(ans)\n", "# Problem Link: https://www.codechef.com/JUNE20B/problems/PRICECON\n\n# SOLUTION\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    weights = list(map(int, input().split()))\n    weights.sort()\n    ans = 0\n    i = 0\n    j = n-1\n    while i<j:\n        if weights[i] + weights[j] == weights[i+1] + weights[j-1]:\n            ans += 1\n            i += 1\n            j -= 1\n        elif weights[i] + weights[j] > weights[i+1] + weights[j-1]:\n            j -= 1\n        else:\n            i += 1\n    print(ans)\n", "\n# SOLUTION\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    weights = map(int, input().split())\n    weights = list(weights)\n    weights.sort()\n    ans = 0\n    i = 0\n    j = n-1\n    while i<j:\n        if weights[i] + weights[j] == weights[i+1] + weights[j-1]:\n            ans += 1\n            i += 1\n            j -= 1\n        elif weights[i] + weights[j] > weights[i+1] + weights[j-1]:\n            j -= 1\n        else:\n            i += 1\n    print(ans)\n", "\n\nimport sys, itertools\n\ndef main():\n    T = int(sys.stdin.readline())\n    for _ in range(T):\n        N = int(sys.stdin.readline())\n        weights = [int(x) for x in sys.stdin.readline().split()] # O(N)\n        weights.sort() # O(NlogN)\n        # i = 0\n        # j = N - 1\n        # ans = 0\n        # while i < j:\n        #     if weights[i] + weights[j] == weights[i] * 2:\n        #         ans += 1\n        #         i += 1\n        #         j -= 1\n        #     elif weights[i] + weights[j] > weights[i] * 2:\n        #         j -= 1\n        #     else:\n        #         i += 1\n        # print(ans)\n        # O(NlogN) + O(N)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n        # O(NlogN)\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    pass\nif __name__ == '__main__':\n    main()\n", "\n\n# SOLUTION\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    weights = map(int, input().split())\n    weights = list(weights)\n    weights.sort()\n    ans = 0\n    i = 0\n    j = n-1\n    while i<j:\n        if weights[i] + weights[j] == weights[i+1] + weights[j-1]:\n            ans += 1\n            i += 1\n            j -= 1\n        elif weights[i] + weights[j] > weights[i+1] + weights[j-1]:\n            j -= 1\n        else:\n            i += 1\n    print(ans)\n", "\n\n#\n# SOLUTION\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    weights = map(int, input().split())\n    weights = list(weights)\n    weights.sort()\n    ans = 0\n    i = 0\n    j = n-1\n    while i < j:\n        if weights[i] + weights[j] == weights[i+1] + weights[j-1]:\n            ans += 1\n            i += 1\n            j -= 1\n        elif weights[i] + weights[j] > weights[i+1] + weights[j-1]:\n            j -= 1\n        else:\n            i += 1\n    print(ans)\n"]