2022-04-13 08:20:16.933797 num operations 2
2022-04-13 08:20:16.933808 size on input set 1
2022-04-13 08:20:19.693067 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match_ = int(input())\n        if match_ <= w or match_ <= h or match_ ** 2 <= w ** 2 + h ** 2:\n            print(\"DA\")\n        else:\n            print(\"NE\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match = int(input())\n        if match <= w or match <= h or match ** 2 <= w ** 2 + h ** 2:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match = int(input())\n        if match <= w or match <= h or match ** 2 <= w ** 2 + h ** 2:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649838017,
  "object": "edit"
}
2022-04-13 08:20:19.693290 fix spelling mistakes 3 ['\n\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match_ = int(input())\n        if match_ <= w or match_ <= h or match_ ** 2 <= w ** 2 + h ** 2:\n            print("DA")\n        else:\n            print("NE")\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match = int(input())\n        if match <= w or match <= h or match ** 2 <= w ** 2 + h ** 2:\n            print("YES")\n        else:\n            print("NO")\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match = int(input())\n        if match <= w or match <= h or match ** 2 <= w ** 2 + h ** 2:\n            print("YES")\n        else:\n            print("NO")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 08:20:19.693318 size on output set 2
2022-04-13 08:20:19.693326 size on input set 2
2022-04-13 08:20:22.334587 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match_ = int(input())\n        if match_ <= w or match_ <= h or match_ ** 2 <= w ** 2 + h ** 2: \n            print(\"DA\")\n        else:\n            print(\"NE\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match_ = int(input())\n        if match_ <= w or match_ <= h or match_ ** 2 <= w ** 2 + h ** 2:\n            print(\"DA\")\n        else:\n            print(\"NE\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match = int(input())\n        if match <= w or match <= h or match ** 2 <= w ** 2 + h ** 2:\n            print(\"DA\")\n        else:\n            print(\"NE\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649838019,
  "object": "edit"
}
2022-04-13 08:20:22.334801 fix syntax errors 3 ['\n\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match_ = int(input())\n        if match_ <= w or match_ <= h or match_ ** 2 <= w ** 2 + h ** 2: \n            print("DA")\n        else:\n            print("NE")\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match_ = int(input())\n        if match_ <= w or match_ <= h or match_ ** 2 <= w ** 2 + h ** 2:\n            print("DA")\n        else:\n            print("NE")\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match = int(input())\n        if match <= w or match <= h or match ** 2 <= w ** 2 + h ** 2:\n            print("DA")\n        else:\n            print("NE")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 08:20:24.469511 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match = int(input())\n        if match <= w or match <= h or match ** 2 <= w ** 2 + h ** 2:  # Pythagorean theorem\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match = int(input())\n        if match <= w or match <= h or match ** 2 <= w ** 2 + h ** 2:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match = int(input())\n        if match <= w or match <= h or match ** 2 <= w ** 2 + h ** 2:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649838022,
  "object": "edit"
}
2022-04-13 08:20:24.469678 fix syntax errors 3 ['\n\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match = int(input())\n        if match <= w or match <= h or match ** 2 <= w ** 2 + h ** 2:  # Pythagorean theorem\n            print("YES")\n        else:\n            print("NO")\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match = int(input())\n        if match <= w or match <= h or match ** 2 <= w ** 2 + h ** 2:\n            print("YES")\n        else:\n            print("NO")\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match = int(input())\n        if match <= w or match <= h or match ** 2 <= w ** 2 + h ** 2:\n            print("YES")\n        else:\n            print("NO")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 08:20:24.469702 size on output set 5
2022-04-13 08:20:24.469715 num operations 2
2022-04-13 08:20:24.469719 size on input set 1
2022-04-13 08:20:27.502105 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H)**2:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 1,
      "text": "\nN, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H):\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 2,
      "text": "\n\nN, W, H = map(int, input().split())  # \u0432\u0432\u043e\u0434 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445\nfor i in range(N):  # \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0432 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\n    if int(input()) <= max(W, H):\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    }
  ],
  "created": 1649838024,
  "object": "edit"
}
2022-04-13 08:20:27.502278 fix spelling mistakes 3 ['\n\nN, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H)**2:\n        print("DA")\n    else:\n        print("NE")\n', '\nN, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H):\n        print("DA")\n    else:\n        print("NE")\n', '\n\nN, W, H = map(int, input().split())  # ввод переменных\nfor i in range(N):  # проверка на вхождение в квадрат\n    if int(input()) <= max(W, H):\n        print("DA")\n    else:\n        print("NE")\n']
2022-04-13 08:20:27.502377 size on output set 3
2022-04-13 08:20:27.502384 size on input set 3
2022-04-13 08:20:31.875611 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H): print(\"DA\")\n    else: print(\"NE\")\n"
    },
    {
      "index": 1,
      "text": "\n\nN, W, H = map(int, input().split())  # \u0432\u0432\u043e\u0434 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445\nfor i in range(N):  # \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0432 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\n    if int(input()) <= max(W, H):  # \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0432 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 2,
      "text": "\n\nN, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H):  # \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0432 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    }
  ],
  "created": 1649838027,
  "object": "edit"
}
2022-04-13 08:20:31.875771 fix syntax errors 3 ['\nN, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H): print("DA")\n    else: print("NE")\n', '\n\nN, W, H = map(int, input().split())  # ввод переменных\nfor i in range(N):  # проверка на вхождение в квадрат\n    if int(input()) <= max(W, H):  # проверка на вхождение в квадрат\n        print("DA")\n    else:\n        print("NE")\n', '\n\nN, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H):  # проверка на вхождение в квадрат\n        print("DA")\n    else:\n        print("NE")\n']
2022-04-13 08:20:34.601722 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H) * max(W, H):\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 1,
      "text": "\n\nN, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H) ** 2:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 2,
      "text": "N, W, H = map(int, input().split())\n\n\nfor i in range(N):\n    if int(input()) <= max(W, H) ** 2:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    }
  ],
  "created": 1649838031,
  "object": "edit"
}
2022-04-13 08:20:34.601896 fix syntax errors 3 ['\n\nN, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H) * max(W, H):\n        print("DA")\n    else:\n        print("NE")\n', '\n\nN, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H) ** 2:\n        print("DA")\n    else:\n        print("NE")\n', 'N, W, H = map(int, input().split())\n\n\nfor i in range(N):\n    if int(input()) <= max(W, H) ** 2:\n        print("DA")\n    else:\n        print("NE")\n']
2022-04-13 08:20:40.770762 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "N, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H):\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 1,
      "text": "N, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H):\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 2,
      "text": "# https://open.kattis.com/problems/cudoviste\n\n\ndef is_safe(x, y, grid):\n    if x < 0 or x >= W or y < 0 or y >= H:\n        return False\n    return grid[x][y] == '.'\n\n\ndef count_cars(x, y, grid):\n    count = 0\n    if not is_safe(x, y, grid):\n        return count\n    for i in range(-1, 2):\n        for j in range(-1, 2):\n            if not is_safe(x + i, y + j, grid):\n                count += 1\n    return count\n\n\nN, W, H = map(int, input().split())\n\ngrid = []\nfor _ in range(H):\n    grid.append(list(input()))\n\ncount = [0] * 5\nfor i in range(W):\n    for j in range(H):\n        count[count_cars(i, j, grid)] += 1\n\nfor i in range(N): print(count[i])\n"
    }
  ],
  "created": 1649838034,
  "object": "edit"
}
2022-04-13 08:20:40.770940 fix syntax errors 3 ['N, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H):\n        print("DA")\n    else:\n        print("NE")\n', 'N, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H):\n        print("DA")\n    else:\n        print("NE")\n', "# https://open.kattis.com/problems/cudoviste\n\n\ndef is_safe(x, y, grid):\n    if x < 0 or x >= W or y < 0 or y >= H:\n        return False\n    return grid[x][y] == '.'\n\n\ndef count_cars(x, y, grid):\n    count = 0\n    if not is_safe(x, y, grid):\n        return count\n    for i in range(-1, 2):\n        for j in range(-1, 2):\n            if not is_safe(x + i, y + j, grid):\n                count += 1\n    return count\n\n\nN, W, H = map(int, input().split())\n\ngrid = []\nfor _ in range(H):\n    grid.append(list(input()))\n\ncount = [0] * 5\nfor i in range(W):\n    for j in range(H):\n        count[count_cars(i, j, grid)] += 1\n\nfor i in range(N): print(count[i])\n"]
2022-04-13 08:20:40.770968 size on output set 8
2022-04-13 08:20:40.770978 num operations 2
2022-04-13 08:20:40.770984 size on input set 1
2022-04-13 08:20:44.019176 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nN, W, H = map(int, input().split())\n\nfor i in range(N):\n    match = int(input())\n    if match <= W or match <= H or match <= (W**2 + H**2)**0.5:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 1,
      "text": "\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    match = int(input())\n    if match <= w or match <= h or match <= (w**2 + h**2)**0.5:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 2,
      "text": "# I don't understand the problem\n\nN, W, H = map(int, input().split())\n\nfor i in range(N):\n    match = int(input())\n    if match <= W or match <= H or match <= (W**2 + H**2)**0.5:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    }
  ],
  "created": 1649838040,
  "object": "edit"
}
2022-04-13 08:20:44.019354 fix spelling mistakes 3 ['\nN, W, H = map(int, input().split())\n\nfor i in range(N):\n    match = int(input())\n    if match <= W or match <= H or match <= (W**2 + H**2)**0.5:\n        print("DA")\n    else:\n        print("NE")\n', '\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    match = int(input())\n    if match <= w or match <= h or match <= (w**2 + h**2)**0.5:\n        print("DA")\n    else:\n        print("NE")\n', '# I don\'t understand the problem\n\nN, W, H = map(int, input().split())\n\nfor i in range(N):\n    match = int(input())\n    if match <= W or match <= H or match <= (W**2 + H**2)**0.5:\n        print("DA")\n    else:\n        print("NE")\n']
2022-04-13 08:20:44.019377 size on output set 3
2022-04-13 08:20:44.019385 size on input set 3
2022-04-13 08:20:47.328285 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "N, W, H = map(int, input().split())\n\nfor i in range(N):\n    match = int(input())\n    if match <= W or match <= H or match <= ((W**2) + (H**2))**0.5:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 1,
      "text": "\nN, W, H = map(int, input().split())\n\nfor i in range(N):\n    match = float(input())\n    if match <= W or match <= H or match <= (W**2 + H**2)**0.5:  # \u043a\u043e\u0440\u0435\u043d\u044c \u0438\u0437 \u0441\u0443\u043c\u043c\u044b \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043e\u0432 \u0434\u043b\u0438\u043d\u044b \u0438 \u0448\u0438\u0440\u0438\u043d\u044b\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 2,
      "text": "N, W, H = map(int, input().split())\n\nfor i in range(N):\n    match = int(input())\n    if match <= W or match <= H or match <= (W * W + H * H) ** 0.5:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    }
  ],
  "created": 1649838044,
  "object": "edit"
}
2022-04-13 08:20:47.328565 fix syntax errors 3 ['N, W, H = map(int, input().split())\n\nfor i in range(N):\n    match = int(input())\n    if match <= W or match <= H or match <= ((W**2) + (H**2))**0.5:\n        print("DA")\n    else:\n        print("NE")\n', '\nN, W, H = map(int, input().split())\n\nfor i in range(N):\n    match = float(input())\n    if match <= W or match <= H or match <= (W**2 + H**2)**0.5:  # корень из суммы квадратов длины и ширины\n        print("DA")\n    else:\n        print("NE")\n', 'N, W, H = map(int, input().split())\n\nfor i in range(N):\n    match = int(input())\n    if match <= W or match <= H or match <= (W * W + H * H) ** 0.5:\n        print("DA")\n    else:\n        print("NE")\n']
2022-04-13 08:20:48.890944 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    match = int(input())\n    if match <= w or match <= h or match <= (w**2 + h**2)**0.5:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 1,
      "text": "n, w, h = map(int, input().split())\n\nfor i in range(n):\n    match = int(input())\n    if match <= w or match <= h or match <= (w**2 + h**2)**0.5:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 2,
      "text": "\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    match = int(input())\n    if match <= w or match <= h or match <= (w**2 + h**2)**0.5:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    }
  ],
  "created": 1649838047,
  "object": "edit"
}
2022-04-13 08:20:48.891112 fix syntax errors 3 ['\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    match = int(input())\n    if match <= w or match <= h or match <= (w**2 + h**2)**0.5:\n        print("DA")\n    else:\n        print("NE")\n', 'n, w, h = map(int, input().split())\n\nfor i in range(n):\n    match = int(input())\n    if match <= w or match <= h or match <= (w**2 + h**2)**0.5:\n        print("DA")\n    else:\n        print("NE")\n', '\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    match = int(input())\n    if match <= w or match <= h or match <= (w**2 + h**2)**0.5:\n        print("DA")\n    else:\n        print("NE")\n']
2022-04-13 08:20:52.486880 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# I don't understand the problem\n\nN, W, H = map(int, input().split())\n\nfor i in range(N):\n    match = int(input())\n    if match <= W or match <= H or match <= (W**2 + H**2)**(0.5):\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 1,
      "text": "# I don't understand the problem\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    match = int(input())\n    if match <= w or match <= h or match <= (w**2 + h**2)**0.5:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 2,
      "text": "# I don't understand the problem, but I am trying to solve it\n\nN, W, H = map(int, input().split())\n\nfor i in range(N):\n    match = int(input())\n    if match <= W or match <= H or match <= (W**2 + H**2)**0.5:  # Pythagoras theorem\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    }
  ],
  "created": 1649838048,
  "object": "edit"
}
2022-04-13 08:20:52.487089 fix syntax errors 3 ['# I don\'t understand the problem\n\nN, W, H = map(int, input().split())\n\nfor i in range(N):\n    match = int(input())\n    if match <= W or match <= H or match <= (W**2 + H**2)**(0.5):\n        print("DA")\n    else:\n        print("NE")\n', '# I don\'t understand the problem\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    match = int(input())\n    if match <= w or match <= h or match <= (w**2 + h**2)**0.5:\n        print("DA")\n    else:\n        print("NE")\n', '# I don\'t understand the problem, but I am trying to solve it\n\nN, W, H = map(int, input().split())\n\nfor i in range(N):\n    match = int(input())\n    if match <= W or match <= H or match <= (W**2 + H**2)**0.5:  # Pythagoras theorem\n        print("DA")\n    else:\n        print("NE")\n']
2022-04-13 08:20:52.487123 size on output set 8
2022-04-13 08:20:52.487133 num operations 2
2022-04-13 08:20:52.487138 size on input set 1
2022-04-13 08:20:54.031002 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN, W, H = map(int, input().split())\n\nfor _ in range(N):\n    match = int(input())\n    if match <= (W**2 + H**2)**0.5:\n        print(\"DA\") \n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 1,
      "text": "\n\nN, W, H = map(int, input().split())\n\nfor _ in range(N):\n    match = int(input())\n    if match <= (W**2 + H**2)**0.5:\n        print(\"DA\")\n    else:\n\n        print(\"NE\")\n"
    },
    {
      "index": 2,
      "text": "\nN, W, H = map(int, input().split())\n\nfor _ in range(N):\n    match = int(input())\n    if match <= (W**2 + H**2)**0.5:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    }
  ],
  "created": 1649838052,
  "object": "edit"
}
2022-04-13 08:20:54.031182 fix spelling mistakes 3 ['\n\nN, W, H = map(int, input().split())\n\nfor _ in range(N):\n    match = int(input())\n    if match <= (W**2 + H**2)**0.5:\n        print("DA") \n    else:\n        print("NE")\n', '\n\nN, W, H = map(int, input().split())\n\nfor _ in range(N):\n    match = int(input())\n    if match <= (W**2 + H**2)**0.5:\n        print("DA")\n    else:\n\n        print("NE")\n', '\nN, W, H = map(int, input().split())\n\nfor _ in range(N):\n    match = int(input())\n    if match <= (W**2 + H**2)**0.5:\n        print("DA")\n    else:\n        print("NE")\n']
2022-04-13 08:20:54.031206 size on output set 3
2022-04-13 08:20:54.031212 size on input set 3
2022-04-13 08:20:57.104745 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\n\nprint(N)\n"
    },
    {
      "index": 1,
      "text": "\n\nN, W, H = map(int, input().split())\n\nfor _ in range(N):\n    match = int(input())\n    if match <= (W * W + H * H)**0.5:\n        print(\"DA\")\n    else: \n        print(\"NE\")\n"
    },
    {
      "index": 2,
      "text": "\nN, W, H = map(int, input().split())\n\nfor _ in range(N):\n    match = int(input())\n    if match <= (W ** 2 + H ** 2) ** 0.5:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    }
  ],
  "created": 1649838054,
  "object": "edit"
}
2022-04-13 08:20:57.104916 fix syntax errors 3 ['\n\nN = int(input())\n\nprint(N)\n', '\n\nN, W, H = map(int, input().split())\n\nfor _ in range(N):\n    match = int(input())\n    if match <= (W * W + H * H)**0.5:\n        print("DA")\n    else: \n        print("NE")\n', '\nN, W, H = map(int, input().split())\n\nfor _ in range(N):\n    match = int(input())\n    if match <= (W ** 2 + H ** 2) ** 0.5:\n        print("DA")\n    else:\n        print("NE")\n']
2022-04-13 08:21:00.892782 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, W, H = map(int, input().split())\n\nfor _ in range(N):\n    match = int(input())\n    if match <= (W * W + H * H)**0.5:\n        print(\"DA\") \n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n\nN, W, H = map(int, input().split())  # N lines, W width, H height\n\nfor _ in range(N):\n    match = int(input())  # line length\n    if match <= (W**2 + H**2)**0.5:  # Pythagorean theorem\n        print(\"DA\") \n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 2,
      "text": "\nN, W, H = map(int, input().split())\n\nfor _ in range(N):\n    match = int(input())\n    if match <= (W**2 + H**2)**0.5:\n        print(\"DA\") \n    else:\n        print(\"NE\")\n"
    }
  ],
  "created": 1649838057,
  "object": "edit"
}
2022-04-13 08:21:00.892954 fix syntax errors 3 ['\nN, W, H = map(int, input().split())\n\nfor _ in range(N):\n    match = int(input())\n    if match <= (W * W + H * H)**0.5:\n        print("DA") \n    else:\n        print("NE")\n', '#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n\nN, W, H = map(int, input().split())  # N lines, W width, H height\n\nfor _ in range(N):\n    match = int(input())  # line length\n    if match <= (W**2 + H**2)**0.5:  # Pythagorean theorem\n        print("DA") \n    else:\n        print("NE")\n', '\nN, W, H = map(int, input().split())\n\nfor _ in range(N):\n    match = int(input())\n    if match <= (W**2 + H**2)**0.5:\n        print("DA") \n    else:\n        print("NE")\n']
2022-04-13 08:21:03.956532 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\n\n\n\n\n\n\n\nprint(N)\n"
    },
    {
      "index": 1,
      "text": "#!/bin/python3\nN, W, H = map(int, input().split())\n\nfor _ in range(N):\n    match = int(input())\n    if match <= (W**2 + H**2)**0.5:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 2,
      "text": "N, W, H = map(int, input().split())\nfor _ in range(N):\n    match = int(input())\n    if match <= (W**2 + H**2)**0.5:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    }
  ],
  "created": 1649838060,
  "object": "edit"
}
2022-04-13 08:21:03.956701 fix syntax errors 3 ['\nN = int(input())\n\n\n\n\n\n\n\nprint(N)\n', '#!/bin/python3\nN, W, H = map(int, input().split())\n\nfor _ in range(N):\n    match = int(input())\n    if match <= (W**2 + H**2)**0.5:\n        print("DA")\n    else:\n        print("NE")\n', 'N, W, H = map(int, input().split())\nfor _ in range(N):\n    match = int(input())\n    if match <= (W**2 + H**2)**0.5:\n        print("DA")\n    else:\n        print("NE")\n']
2022-04-13 08:21:03.956722 size on output set 9
2022-04-13 08:21:03.956733 num operations 2
2022-04-13 08:21:03.956737 size on input set 1
2022-04-13 08:21:06.347372 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef check_fit(w, h, match_length):\n    if match_length <= w or match_length <= h:\n        return \"DA\"\n    else:\n        return \"NE\"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n\n    for i in range(n):\n        match_length = int(input())\n        print(check_fit(w, h, match_length))\n\n\nif __name__ == '__main__':\n    run()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef check_fit(w, h, match):\n    if match <= w and match <= h:\n        return \"DA\"\n    else:\n        return \"NE\"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n\n    for i in range(n):\n        match_length = int(input())\n        print(check_fit(w, h, match_length))\n\n\nif __name__ == '__main__':\n    run()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef check_fit(w, h, match):\n    if match <= w and match <= h:\n        return \"DA\"\n    else:\n        return \"NE\"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n\n    for i in range(n):\n        match_length = int(input())\n        print(check_fit(w, h, match_length))\n\n\nif __name__ == '__main__':\n    run()\n"
    }
  ],
  "created": 1649838063,
  "object": "edit"
}
2022-04-13 08:21:06.347550 fix spelling mistakes 3 ['\n\ndef check_fit(w, h, match_length):\n    if match_length <= w or match_length <= h:\n        return "DA"\n    else:\n        return "NE"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n\n    for i in range(n):\n        match_length = int(input())\n        print(check_fit(w, h, match_length))\n\n\nif __name__ == \'__main__\':\n    run()\n', '\n\ndef check_fit(w, h, match):\n    if match <= w and match <= h:\n        return "DA"\n    else:\n        return "NE"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n\n    for i in range(n):\n        match_length = int(input())\n        print(check_fit(w, h, match_length))\n\n\nif __name__ == \'__main__\':\n    run()\n', '\n\ndef check_fit(w, h, match):\n    if match <= w and match <= h:\n        return "DA"\n    else:\n        return "NE"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n\n    for i in range(n):\n        match_length = int(input())\n        print(check_fit(w, h, match_length))\n\n\nif __name__ == \'__main__\':\n    run()\n']
2022-04-13 08:21:06.347581 size on output set 2
2022-04-13 08:21:06.347587 size on input set 2
2022-04-13 08:21:08.849160 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef check_fit(w, h, match_length):\n    if match_length <= w and match_length <= h:\n        return \"DA\"\n    else:\n        return \"NE\"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n\n    for i in range(n):\n        match_length = int(input())\n        print(check_fit(w, h, match_length))\n\n\nif __name__ == '__main__':\n    run()\n"
    },
    {
      "index": 1,
      "text": "def check_fit(w, h, match):\n    if match <= w or match <= h:\n        return \"DA\"\n    else:\n        return \"NE\"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n\n    for i in range(n):\n        match_length = int(input())\n        print(check_fit(w, h, match_length))\n\n\nif __name__ == '__main__':\n    run()\n"
    },
    {
      "index": 2,
      "text": "\ndef check_fit(w, h, match):\n    if match <= w and match <= h:\n        return \"DA\"\n    else:\n        return \"NE\"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n\n    for i in range(n):\n        match_length = int(input())\n        print(check_fit(w, h, match_length))\n\n\nif __name__ == '__main__':\n    run()\n"
    }
  ],
  "created": 1649838066,
  "object": "edit"
}
2022-04-13 08:21:08.849609 fix syntax errors 3 ['\n\ndef check_fit(w, h, match_length):\n    if match_length <= w and match_length <= h:\n        return "DA"\n    else:\n        return "NE"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n\n    for i in range(n):\n        match_length = int(input())\n        print(check_fit(w, h, match_length))\n\n\nif __name__ == \'__main__\':\n    run()\n', 'def check_fit(w, h, match):\n    if match <= w or match <= h:\n        return "DA"\n    else:\n        return "NE"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n\n    for i in range(n):\n        match_length = int(input())\n        print(check_fit(w, h, match_length))\n\n\nif __name__ == \'__main__\':\n    run()\n', '\ndef check_fit(w, h, match):\n    if match <= w and match <= h:\n        return "DA"\n    else:\n        return "NE"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n\n    for i in range(n):\n        match_length = int(input())\n        print(check_fit(w, h, match_length))\n\n\nif __name__ == \'__main__\':\n    run()\n']
2022-04-13 08:21:13.852721 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef check_fit(w, h, match_length):\n    if match_length <= w or match_length <= h:\n        return \"DA\" \n    else:\n        return \"NE\"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n\n    for i in range(n):\n        match_length = int(input())\n        print(check_fit(w, h, match_length))\n\n\nif __name__ == '__main__':\n    run()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef check_fit(w, h, match_length, n):\n    for i in range(n):\n        if match_length <= w or match_length <= h:\n            return \"DA\"\n        else:\n            return \"NE\"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n    match_length = int(input())\n    print(check_fit(w, h, match_length, n))\n\n\nif __name__ == '__main__':\n    run()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef check_fit(w, h, match_length):\n    if match_length <= w or match_length <= h:\n        return \"DA\"\n    else:\n        return \"NE\"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]  # read input\n\n    for i in range(n):\n        match_length = int(input())  # read input\n        print(check_fit(w, h, match_length))  # print output\n\n\nif __name__ == '__main__':\n    run()\n"
    }
  ],
  "created": 1649838068,
  "object": "edit"
}
2022-04-13 08:21:13.852885 fix syntax errors 3 ['\n\ndef check_fit(w, h, match_length):\n    if match_length <= w or match_length <= h:\n        return "DA" \n    else:\n        return "NE"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n\n    for i in range(n):\n        match_length = int(input())\n        print(check_fit(w, h, match_length))\n\n\nif __name__ == \'__main__\':\n    run()\n', '\n\ndef check_fit(w, h, match_length, n):\n    for i in range(n):\n        if match_length <= w or match_length <= h:\n            return "DA"\n        else:\n            return "NE"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n    match_length = int(input())\n    print(check_fit(w, h, match_length, n))\n\n\nif __name__ == \'__main__\':\n    run()\n', '\n\ndef check_fit(w, h, match_length):\n    if match_length <= w or match_length <= h:\n        return "DA"\n    else:\n        return "NE"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]  # read input\n\n    for i in range(n):\n        match_length = int(input())  # read input\n        print(check_fit(w, h, match_length))  # print output\n\n\nif __name__ == \'__main__\':\n    run()\n']
2022-04-13 08:21:13.852982 size on output set 6
2022-04-13 08:21:13.852992 num operations 2
2022-04-13 08:21:13.852998 size on input set 1
2022-04-13 08:21:17.003109 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nN, W, H = [int(x) for x in input().split()]\nbox = W * H\n\nfor _ in range(N):\n    match = int(input())\n    if match ** 2 <= box:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"
    },
    {
      "index": 1,
      "text": "\nN, W, H = (int(x) for x in input().split())\nbox = W * H  # box size\n\nfor _ in range(N):\n    match_size = int(input())\n    if match_size ** 2 <= box:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 2,
      "text": "\nN, W, H = [int(x) for x in input().split()]\nbox = W * H\n\nfor _ in range(N):\n    match = int(input())\n    if match ** 2 <= box:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"
    }
  ],
  "created": 1649838073,
  "object": "edit"
}
2022-04-13 08:21:17.003294 fix spelling mistakes 3 ['\nN, W, H = [int(x) for x in input().split()]\nbox = W * H\n\nfor _ in range(N):\n    match = int(input())\n    if match ** 2 <= box:\n        print("YES")\n    else:\n        print("NO")\n', '\nN, W, H = (int(x) for x in input().split())\nbox = W * H  # box size\n\nfor _ in range(N):\n    match_size = int(input())\n    if match_size ** 2 <= box:\n        print("DA")\n    else:\n        print("NE")\n', '\nN, W, H = [int(x) for x in input().split()]\nbox = W * H\n\nfor _ in range(N):\n    match = int(input())\n    if match ** 2 <= box:\n        print("YES")\n    else:\n        print("NO")\n']
2022-04-13 08:21:17.003321 size on output set 2
2022-04-13 08:21:17.003327 size on input set 2
2022-04-13 08:21:19.754006 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "N, W, H = (int(x) for x in input().split())\nbox = W * H  # box size\n\nfor _ in range(N):\n    match_size = int(input())\n    if match_size ** 2 <= box:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 1,
      "text": "N, W, H = (int(x) for x in input().split())\nbox = W * H\n\nfor _ in range(N):\n    match_size = int(input())  # diagonal\n    if match_size ** 2 <= box:  # diagonal^2 <= box\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 2,
      "text": "#\nN, W, H = (int(x) for x in input().split())\nbox = W * H  # box size\n\nfor _ in range(N):\n    match_size = int(input())\n    if match_size ** 2 <= box:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    }
  ],
  "created": 1649838077,
  "object": "edit"
}
2022-04-13 08:21:19.754179 fix syntax errors 3 ['N, W, H = (int(x) for x in input().split())\nbox = W * H  # box size\n\nfor _ in range(N):\n    match_size = int(input())\n    if match_size ** 2 <= box:\n        print("DA")\n    else:\n        print("NE")\n', 'N, W, H = (int(x) for x in input().split())\nbox = W * H\n\nfor _ in range(N):\n    match_size = int(input())  # diagonal\n    if match_size ** 2 <= box:  # diagonal^2 <= box\n        print("DA")\n    else:\n        print("NE")\n', '#\nN, W, H = (int(x) for x in input().split())\nbox = W * H  # box size\n\nfor _ in range(N):\n    match_size = int(input())\n    if match_size ** 2 <= box:\n        print("DA")\n    else:\n        print("NE")\n']
2022-04-13 08:21:22.734575 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "N, W, H = [int(x) for x in input().split()]\nbox = W * H\n\nfor _ in range(N):\n    match_stick = int(input())\n    if match_stick ** 2 <= box:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"
    },
    {
      "index": 1,
      "text": "N, W, H = [int(x) for x in input().split()]\nbox = W * H\nfor _ in range(N):\n    match = int(input())\n    if match ** 2 <= box:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"
    },
    {
      "index": 2,
      "text": "\nN, W, H = map(int, input().split())\nbox = W ** 2 + H ** 2\n\nfor _ in range(N):\n    match = input()\n    if int(match) ** 2 <= box:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"
    }
  ],
  "created": 1649838079,
  "object": "edit"
}
2022-04-13 08:21:22.734770 fix syntax errors 3 ['N, W, H = [int(x) for x in input().split()]\nbox = W * H\n\nfor _ in range(N):\n    match_stick = int(input())\n    if match_stick ** 2 <= box:\n        print("YES")\n    else:\n        print("NO")\n', 'N, W, H = [int(x) for x in input().split()]\nbox = W * H\nfor _ in range(N):\n    match = int(input())\n    if match ** 2 <= box:\n        print("YES")\n    else:\n        print("NO")\n', '\nN, W, H = map(int, input().split())\nbox = W ** 2 + H ** 2\n\nfor _ in range(N):\n    match = input()\n    if int(match) ** 2 <= box:\n        print("YES")\n    else:\n        print("NO")\n']
2022-04-13 08:21:22.734794 size on output set 6
2022-04-13 08:21:22.734806 num operations 2
2022-04-13 08:21:22.734811 size on input set 1
2022-04-13 08:21:28.611291 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\"\"\"\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n\"\"\"\n\ninpFile=open('matches.in','r')\noutFile=open('matches.out','w')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())\n  if length<=width or length<=height or length**2<=(width**2+height**2):\n    outFile.write(\"DA\\n\")\n  else:\n    outFile.write(\"NE\\n\")\n"
    },
    {
      "index": 1,
      "text": "\n\n\"\"\"\nID: neelkolhe\nTASK: matches\nLANG: PYTHON3\n\"\"\"\n\ninpFile=open('matches.in', 'r')\noutFile=open('matches.out', 'w')\n\nnumMatches=int(inpFile.readline())\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())  \n  if length<=width or length<=height or length<=(width**2+height**2)**0.5: outFile.write(\"DA\\n\")\n  else: outFile.write(\"NE\\n\")\n"
    },
    {
      "index": 2,
      "text": "\n\n\"\"\"\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n\"\"\"\n\ninpFile=open('file.in','r')\noutFile=open('file.out','w')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())\n  if length<=width or length<=height or length<=(width**2+height**2)**0.5:\n    outFile.write(\"DA\\n\")\n  else:\n    outFile.write(\"NE\\n\")\n"
    }
  ],
  "created": 1649838082,
  "object": "edit"
}
2022-04-13 08:21:28.611462 fix spelling mistakes 3 ['\n\n"""\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n"""\n\ninpFile=open(\'matches.in\',\'r\')\noutFile=open(\'matches.out\',\'w\')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())\n  if length<=width or length<=height or length**2<=(width**2+height**2):\n    outFile.write("DA\\n")\n  else:\n    outFile.write("NE\\n")\n', '\n\n"""\nID: neelkolhe\nTASK: matches\nLANG: PYTHON3\n"""\n\ninpFile=open(\'matches.in\', \'r\')\noutFile=open(\'matches.out\', \'w\')\n\nnumMatches=int(inpFile.readline())\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())  \n  if length<=width or length<=height or length<=(width**2+height**2)**0.5: outFile.write("DA\\n")\n  else: outFile.write("NE\\n")\n', '\n\n"""\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n"""\n\ninpFile=open(\'file.in\',\'r\')\noutFile=open(\'file.out\',\'w\')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())\n  if length<=width or length<=height or length<=(width**2+height**2)**0.5:\n    outFile.write("DA\\n")\n  else:\n    outFile.write("NE\\n")\n']
2022-04-13 08:21:28.611498 size on output set 3
2022-04-13 08:21:28.611505 size on input set 3
2022-04-13 08:21:32.674421 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\"\"\"\nID: neelkolhe\nTASK: matches\n\n#import math\nLANG: PYTHON3\n\"\"\"\n\ninpFile=open('matches.in', 'r')\noutFile=open('matches.out', 'w')\n\nnumMatches=int(inpFile.readline())\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())  \n  if length<=width or length<=height or length<=(width**2+height**2)**0.5: outFile.write(\"DA\\n\") #or length<=math.sqrt(width**2+height**2): outFile.write(\"DA\\n\")\n  else: outFile.write(\"NE\\n\")\n"
    },
    {
      "index": 1,
      "text": "\n\n\"\"\"\nID: neelkolhe\nTASK: matches\nLANG: PYTHON3\n\"\"\"\n\ninpFile=open('matches.in', 'r')\noutFile=open('matches.out', 'w')\n\nnumMatches=int(inpFile.readline())\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())  \n  if length<=width or length<=height or length<=(width**2+height**2)**0.5: outFile.write(\"DA\\n\") \n  else: outFile.write(\"NE\\n\") \n"
    },
    {
      "index": 2,
      "text": "\n\n'''\nID: neelkolhe\nTASK: matches\nLANG: PYTHON3\n'''\n\ninpFile=open('matches.in', 'r')\noutFile=open('matches.out', 'w')\n\nnumMatches=int(inpFile.readline())\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())  \n  if length<=width or length<=height or length<=(width**2+height**2)**0.5: outFile.write('DA\\n')\n  else: outFile.write('NE\\n')\n"
    }
  ],
  "created": 1649838088,
  "object": "edit"
}
2022-04-13 08:21:32.674697 fix syntax errors 3 ['\n\n"""\nID: neelkolhe\nTASK: matches\n\n#import math\nLANG: PYTHON3\n"""\n\ninpFile=open(\'matches.in\', \'r\')\noutFile=open(\'matches.out\', \'w\')\n\nnumMatches=int(inpFile.readline())\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())  \n  if length<=width or length<=height or length<=(width**2+height**2)**0.5: outFile.write("DA\\n") #or length<=math.sqrt(width**2+height**2): outFile.write("DA\\n")\n  else: outFile.write("NE\\n")\n', '\n\n"""\nID: neelkolhe\nTASK: matches\nLANG: PYTHON3\n"""\n\ninpFile=open(\'matches.in\', \'r\')\noutFile=open(\'matches.out\', \'w\')\n\nnumMatches=int(inpFile.readline())\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())  \n  if length<=width or length<=height or length<=(width**2+height**2)**0.5: outFile.write("DA\\n") \n  else: outFile.write("NE\\n") \n', "\n\n'''\nID: neelkolhe\nTASK: matches\nLANG: PYTHON3\n'''\n\ninpFile=open('matches.in', 'r')\noutFile=open('matches.out', 'w')\n\nnumMatches=int(inpFile.readline())\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())  \n  if length<=width or length<=height or length<=(width**2+height**2)**0.5: outFile.write('DA\\n')\n  else: outFile.write('NE\\n')\n"]
2022-04-13 08:21:36.702541 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ninpFile=open('file.in','r')\noutFile=open('file.out','w')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())\n  if length<=width or length<=height or length<=(width**2+height**2)**0.5:\n    outFile.write(\"DA\\n\")\n  else:\n    outFile.write(\"NE\\n\")\n"
    },
    {
      "index": 1,
      "text": "\n\n\"\"\"\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n\"\"\"\n\ninpFile=open('file.in','r')\noutFile=open('file.out','w')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())\n  if length<=width or length<=height or length<=(width**2+height**2)**(0.5):\n    outFile.write(\"DA\\n\")\n  else:\n    outFile.write(\"NE\\n\")\n"
    },
    {
      "index": 2,
      "text": "\n\n\"\"\"\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n\"\"\"\n\ninpFile=open('file.in','r')\noutFile=open('file.out','w')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline().split()[0])\n  if length<=width or length<=height or length<=(width**2+height**2)**0.5: outFile.write(\"DA\\n\")\n  else: outFile.write(\"NE\\n\")\n"
    }
  ],
  "created": 1649838092,
  "object": "edit"
}
2022-04-13 08:21:36.702731 fix syntax errors 3 ['\n\ninpFile=open(\'file.in\',\'r\')\noutFile=open(\'file.out\',\'w\')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())\n  if length<=width or length<=height or length<=(width**2+height**2)**0.5:\n    outFile.write("DA\\n")\n  else:\n    outFile.write("NE\\n")\n', '\n\n"""\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n"""\n\ninpFile=open(\'file.in\',\'r\')\noutFile=open(\'file.out\',\'w\')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())\n  if length<=width or length<=height or length<=(width**2+height**2)**(0.5):\n    outFile.write("DA\\n")\n  else:\n    outFile.write("NE\\n")\n', '\n\n"""\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n"""\n\ninpFile=open(\'file.in\',\'r\')\noutFile=open(\'file.out\',\'w\')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline().split()[0])\n  if length<=width or length<=height or length<=(width**2+height**2)**0.5: outFile.write("DA\\n")\n  else: outFile.write("NE\\n")\n']
2022-04-13 08:21:45.783236 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\"\"\"\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n\"\"\"\n\ninpFile=open('milk3.in','r')\noutFile=open('milk3.out','w')\n\nbuckets=inpFile.readline().split()\nbucketA=int(buckets[0])\nbucketB=int(buckets[1])\nbucketC=int(buckets[2])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())\n  if length<=width or length<=height or length**2<=(width**2+height**2):\n    outFile.write(\"DA\\n\")\n  else:\n    outFile.write(\"NE\\n\")\n"
    },
    {
      "index": 1,
      "text": "\n\n\"\"\"\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n\"\"\"\n\ninpFile=open('matches.in', 'r')\noutFile=open('matches.out', 'w')\n\nnumMatches=int(inpFile.readline().rstrip())\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0].rstrip())\nheight=int(dimensions[1].rstrip())\n\nfor i in range(numMatches):\n  length=int(inpFile.readline().rstrip())\n  if length<=width or length<=height or (length**2<=(width**2+height**2)):\n    outFile.write(\"DA\\n\")\n  else:\n    outFile.write(\"NE\\n\")\n"
    },
    {
      "index": 2,
      "text": "\n\n\"\"\"\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n\"\"\"\n\ninpFile=open('matches.in','r')\noutFile=open('matches.out','w')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline().split()[0])\n  if length<=width or length<=height or length**2<=(width**2 + height**2):\n    outFile.write(\"DA\\n\")\n  else:\n    outFile.write(\"NE\\n\")\n"
    }
  ],
  "created": 1649838096,
  "object": "edit"
}
2022-04-13 08:21:45.783419 fix syntax errors 3 ['\n\n"""\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n"""\n\ninpFile=open(\'milk3.in\',\'r\')\noutFile=open(\'milk3.out\',\'w\')\n\nbuckets=inpFile.readline().split()\nbucketA=int(buckets[0])\nbucketB=int(buckets[1])\nbucketC=int(buckets[2])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())\n  if length<=width or length<=height or length**2<=(width**2+height**2):\n    outFile.write("DA\\n")\n  else:\n    outFile.write("NE\\n")\n', '\n\n"""\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n"""\n\ninpFile=open(\'matches.in\', \'r\')\noutFile=open(\'matches.out\', \'w\')\n\nnumMatches=int(inpFile.readline().rstrip())\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0].rstrip())\nheight=int(dimensions[1].rstrip())\n\nfor i in range(numMatches):\n  length=int(inpFile.readline().rstrip())\n  if length<=width or length<=height or (length**2<=(width**2+height**2)):\n    outFile.write("DA\\n")\n  else:\n    outFile.write("NE\\n")\n', '\n\n"""\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n"""\n\ninpFile=open(\'matches.in\',\'r\')\noutFile=open(\'matches.out\',\'w\')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline().split()[0])\n  if length<=width or length<=height or length**2<=(width**2 + height**2):\n    outFile.write("DA\\n")\n  else:\n    outFile.write("NE\\n")\n']
2022-04-13 08:21:45.783541 size on output set 9
2022-04-13 08:21:45.783553 num operations 2
2022-04-13 08:21:45.783557 size on input set 1
2022-04-13 08:21:47.221733 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\nimport sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 1,
      "text": "\n\n\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 2,
      "text": "\n#\nimport sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    }
  ],
  "created": 1649838105,
  "object": "edit"
}
2022-04-13 08:21:47.221891 fix spelling mistakes 3 ['\n\n\nimport sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h:\n        print("DA")\n    else:\n        print("NE")\n', '\n\n\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h:\n        print("DA")\n    else:\n        print("NE")\n', '\n#\nimport sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h:\n        print("DA")\n    else:\n        print("NE")\n']
2022-04-13 08:21:47.221911 size on output set 3
2022-04-13 08:21:47.221917 size on input set 3
2022-04-13 08:21:49.388070 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#\nimport sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h or int(input()) <= w:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 2,
      "text": "import sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    }
  ],
  "created": 1649838107,
  "object": "edit"
}
2022-04-13 08:21:49.388249 fix syntax errors 3 ['\n#\nimport sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h or int(input()) <= w:\n        print("DA")\n    else:\n        print("NE")\n', '\nimport sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h:\n        print("DA")\n    else:\n        print("NE")\n', 'import sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h:\n        print("DA")\n    else:\n        print("NE")\n']
2022-04-13 08:21:52.760871 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\nimport math\n\n\n\nn = int(input())\nfor i in range(1,n+1):\n    a, b = map(int, input().split())\n    print(math.gcd(a, b))\n"
    },
    {
      "index": 1,
      "text": "\n\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 2,
      "text": "\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    }
  ],
  "created": 1649838109,
  "object": "edit"
}
2022-04-13 08:21:52.761042 fix syntax errors 3 ['import sys\nimport math\n\n\n\nn = int(input())\nfor i in range(1,n+1):\n    a, b = map(int, input().split())\n    print(math.gcd(a, b))\n', '\n\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h:\n        print("DA")\n    else:\n        print("NE")\n', '\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h:\n        print("DA")\n    else:\n        print("NE")\n']
2022-04-13 08:21:55.367449 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w and int(input()) <= h:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\n\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w and int(input()) <= h:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n\n\nimport sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    x, y = map(int, input().split())\n    if x <= w or y <= h:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    }
  ],
  "created": 1649838112,
  "object": "edit"
}
2022-04-13 08:21:55.367613 fix syntax errors 3 ['import sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w and int(input()) <= h:\n        print("DA")\n    else:\n        print("NE")\n', '\nimport sys\n\n\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w and int(input()) <= h:\n        print("DA")\n    else:\n        print("NE")\n', '#!/usr/bin/env python3\n\n\nimport sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    x, y = map(int, input().split())\n    if x <= w or y <= h:\n        print("DA")\n    else:\n        print("NE")\n']
2022-04-13 08:21:55.367637 size on output set 9
