["import sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w and int(input()) <= h:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n", "\n\n\"\"\"\nID: neelkolhe\nTASK: matches\n\n#import math\nLANG: PYTHON3\n\"\"\"\n\ninpFile=open('matches.in', 'r')\noutFile=open('matches.out', 'w')\n\nnumMatches=int(inpFile.readline())\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())  \n  if length<=width or length<=height or length<=(width**2+height**2)**0.5: outFile.write(\"DA\\n\") #or length<=math.sqrt(width**2+height**2): outFile.write(\"DA\\n\")\n  else: outFile.write(\"NE\\n\")\n", "def check_fit(w, h, match):\n    if match <= w or match <= h:\n        return \"DA\"\n    else:\n        return \"NE\"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n\n    for i in range(n):\n        match_length = int(input())\n        print(check_fit(w, h, match_length))\n\n\nif __name__ == '__main__':\n    run()\n", "#\nN, W, H = (int(x) for x in input().split())\nbox = W * H  # box size\n\nfor _ in range(N):\n    match_size = int(input())\n    if match_size ** 2 <= box:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n", "\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n", "\nN, W, H = map(int, input().split())\n\nfor _ in range(N):\n    match = int(input())\n    if match <= (W ** 2 + H ** 2) ** 0.5:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n", "# I don't understand the problem\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    match = int(input())\n    if match <= w or match <= h or match <= (w**2 + h**2)**0.5:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n", "import sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n", "\ndef check_fit(w, h, match):\n    if match <= w and match <= h:\n        return \"DA\"\n    else:\n        return \"NE\"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n\n    for i in range(n):\n        match_length = int(input())\n        print(check_fit(w, h, match_length))\n\n\nif __name__ == '__main__':\n    run()\n", "\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match_ = int(input())\n        if match_ <= w or match_ <= h or match_ ** 2 <= w ** 2 + h ** 2:\n            print(\"DA\")\n        else:\n            print(\"NE\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n#\nimport sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h or int(input()) <= w:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n", "# I don't understand the problem, but I am trying to solve it\n\nN, W, H = map(int, input().split())\n\nfor i in range(N):\n    match = int(input())\n    if match <= W or match <= H or match <= (W**2 + H**2)**0.5:  # Pythagoras theorem\n        print(\"DA\")\n    else:\n        print(\"NE\")\n", "\n\n\"\"\"\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n\"\"\"\n\ninpFile=open('matches.in', 'r')\noutFile=open('matches.out', 'w')\n\nnumMatches=int(inpFile.readline().rstrip())\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0].rstrip())\nheight=int(dimensions[1].rstrip())\n\nfor i in range(numMatches):\n  length=int(inpFile.readline().rstrip())\n  if length<=width or length<=height or (length**2<=(width**2+height**2)):\n    outFile.write(\"DA\\n\")\n  else:\n    outFile.write(\"NE\\n\")\n", "#!/usr/bin/env python3\n\n\nimport sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    x, y = map(int, input().split())\n    if x <= w or y <= h:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n", "\n\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match = int(input())\n        if match <= w or match <= h or match ** 2 <= w ** 2 + h ** 2:  # Pythagorean theorem\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef check_fit(w, h, match_length):\n    if match_length <= w or match_length <= h:\n        return \"DA\" \n    else:\n        return \"NE\"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n\n    for i in range(n):\n        match_length = int(input())\n        print(check_fit(w, h, match_length))\n\n\nif __name__ == '__main__':\n    run()\n", "N, W, H = [int(x) for x in input().split()]\nbox = W * H\n\nfor _ in range(N):\n    match_stick = int(input())\n    if match_stick ** 2 <= box:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "\nimport sys\n\n\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w and int(input()) <= h:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n", "N, W, H = (int(x) for x in input().split())\nbox = W * H  # box size\n\nfor _ in range(N):\n    match_size = int(input())\n    if match_size ** 2 <= box:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n", "\n\n'''\nID: neelkolhe\nTASK: matches\nLANG: PYTHON3\n'''\n\ninpFile=open('matches.in', 'r')\noutFile=open('matches.out', 'w')\n\nnumMatches=int(inpFile.readline())\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())  \n  if length<=width or length<=height or length<=(width**2+height**2)**0.5: outFile.write('DA\\n')\n  else: outFile.write('NE\\n')\n", "\nN, W, H = map(int, input().split())\n\nfor i in range(N):\n    match = float(input())\n    if match <= W or match <= H or match <= (W**2 + H**2)**0.5:  # \u043a\u043e\u0440\u0435\u043d\u044c \u0438\u0437 \u0441\u0443\u043c\u043c\u044b \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043e\u0432 \u0434\u043b\u0438\u043d\u044b \u0438 \u0448\u0438\u0440\u0438\u043d\u044b\n        print(\"DA\")\n    else:\n        print(\"NE\")\n", "\nN, W, H = map(int, input().split())\nbox = W ** 2 + H ** 2\n\nfor _ in range(N):\n    match = input()\n    if int(match) ** 2 <= box:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "\n\nN, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H) * max(W, H):\n        print(\"DA\")\n    else:\n        print(\"NE\")\n", "\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match = int(input())\n        if match <= w or match <= h or match ** 2 <= w ** 2 + h ** 2:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nN, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H) ** 2:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n", "N, W, H = (int(x) for x in input().split())\nbox = W * H\n\nfor _ in range(N):\n    match_size = int(input())  # diagonal\n    if match_size ** 2 <= box:  # diagonal^2 <= box\n        print(\"DA\")\n    else:\n        print(\"NE\")\n", "\n\nN, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H):  # \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0432 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\n        print(\"DA\")\n    else:\n        print(\"NE\")\n", "\n\nN = int(input())\n\nprint(N)\n", "n, w, h = map(int, input().split())\n\nfor i in range(n):\n    match = int(input())\n    if match <= w or match <= h or match <= (w**2 + h**2)**0.5:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n", "\n\n\"\"\"\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n\"\"\"\n\ninpFile=open('file.in','r')\noutFile=open('file.out','w')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline().split()[0])\n  if length<=width or length<=height or length<=(width**2+height**2)**0.5: outFile.write(\"DA\\n\")\n  else: outFile.write(\"NE\\n\")\n", "\n\ndef check_fit(w, h, match_length, n):\n    for i in range(n):\n        if match_length <= w or match_length <= h:\n            return \"DA\"\n        else:\n            return \"NE\"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n    match_length = int(input())\n    print(check_fit(w, h, match_length, n))\n\n\nif __name__ == '__main__':\n    run()\n", "\n\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n", "\nN, W, H = map(int, input().split())\n\nfor _ in range(N):\n    match = int(input())\n    if match <= (W**2 + H**2)**0.5:\n        print(\"DA\") \n    else:\n        print(\"NE\")\n", "\n\nN, W, H = map(int, input().split())  # \u0432\u0432\u043e\u0434 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445\nfor i in range(N):  # \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0432 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\n    if int(input()) <= max(W, H):  # \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0432 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\n        print(\"DA\")\n    else:\n        print(\"NE\")\n", "\n\nN, W, H = map(int, input().split())\n\nfor _ in range(N):\n    match = int(input())\n    if match <= (W * W + H * H)**0.5:\n        print(\"DA\")\n    else: \n        print(\"NE\")\n", "\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match = int(input())\n        if match <= w or match <= h or match ** 2 <= w ** 2 + h ** 2:\n            print(\"DA\")\n        else:\n            print(\"NE\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef check_fit(w, h, match_length):\n    if match_length <= w or match_length <= h:\n        return \"DA\"\n    else:\n        return \"NE\"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]  # read input\n\n    for i in range(n):\n        match_length = int(input())  # read input\n        print(check_fit(w, h, match_length))  # print output\n\n\nif __name__ == '__main__':\n    run()\n", "\n\ninpFile=open('file.in','r')\noutFile=open('file.out','w')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())\n  if length<=width or length<=height or length<=(width**2+height**2)**0.5:\n    outFile.write(\"DA\\n\")\n  else:\n    outFile.write(\"NE\\n\")\n", "N, W, H = map(int, input().split())\n\nfor i in range(N):\n    match = int(input())\n    if match <= W or match <= H or match <= ((W**2) + (H**2))**0.5:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n", "\n\ndef check_fit(w, h, match_length):\n    if match_length <= w and match_length <= h:\n        return \"DA\"\n    else:\n        return \"NE\"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n\n    for i in range(n):\n        match_length = int(input())\n        print(check_fit(w, h, match_length))\n\n\nif __name__ == '__main__':\n    run()\n", "N, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H):\n        print(\"DA\")\n    else:\n        print(\"NE\")\n", "\n\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match_ = int(input())\n        if match_ <= w or match_ <= h or match_ ** 2 <= w ** 2 + h ** 2: \n            print(\"DA\")\n        else:\n            print(\"NE\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n\"\"\"\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n\"\"\"\n\ninpFile=open('milk3.in','r')\noutFile=open('milk3.out','w')\n\nbuckets=inpFile.readline().split()\nbucketA=int(buckets[0])\nbucketB=int(buckets[1])\nbucketC=int(buckets[2])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())\n  if length<=width or length<=height or length**2<=(width**2+height**2):\n    outFile.write(\"DA\\n\")\n  else:\n    outFile.write(\"NE\\n\")\n", "N, W, H = map(int, input().split())\n\nfor i in range(N):\n    match = int(input())\n    if match <= W or match <= H or match <= (W * W + H * H) ** 0.5:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n", "\nN, W, H = map(int, input().split())\n\nfor _ in range(N):\n    match = int(input())\n    if match <= (W * W + H * H)**0.5:\n        print(\"DA\") \n    else:\n        print(\"NE\")\n", "import sys\nimport math\n\n\n\nn = int(input())\nfor i in range(1,n+1):\n    a, b = map(int, input().split())\n    print(math.gcd(a, b))\n", "\nN, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H): print(\"DA\")\n    else: print(\"NE\")\n", "\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    match = int(input())\n    if match <= w or match <= h or match <= (w**2 + h**2)**0.5:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n", "\nimport sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n", "# I don't understand the problem\n\nN, W, H = map(int, input().split())\n\nfor i in range(N):\n    match = int(input())\n    if match <= W or match <= H or match <= (W**2 + H**2)**(0.5):\n        print(\"DA\")\n    else:\n        print(\"NE\")\n", "N, W, H = [int(x) for x in input().split()]\nbox = W * H\nfor _ in range(N):\n    match = int(input())\n    if match ** 2 <= box:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "\n\n\"\"\"\nID: neelkolhe\nTASK: matches\nLANG: PYTHON3\n\"\"\"\n\ninpFile=open('matches.in', 'r')\noutFile=open('matches.out', 'w')\n\nnumMatches=int(inpFile.readline())\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())  \n  if length<=width or length<=height or length<=(width**2+height**2)**0.5: outFile.write(\"DA\\n\") \n  else: outFile.write(\"NE\\n\") \n", "\n\n\"\"\"\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n\"\"\"\n\ninpFile=open('matches.in','r')\noutFile=open('matches.out','w')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline().split()[0])\n  if length<=width or length<=height or length**2<=(width**2 + height**2):\n    outFile.write(\"DA\\n\")\n  else:\n    outFile.write(\"NE\\n\")\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n\nN, W, H = map(int, input().split())  # N lines, W width, H height\n\nfor _ in range(N):\n    match = int(input())  # line length\n    if match <= (W**2 + H**2)**0.5:  # Pythagorean theorem\n        print(\"DA\") \n    else:\n        print(\"NE\")\n", "\nN = int(input())\n\n\n\n\n\n\n\nprint(N)\n", "#!/bin/python3\nN, W, H = map(int, input().split())\n\nfor _ in range(N):\n    match = int(input())\n    if match <= (W**2 + H**2)**0.5:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n", "N, W, H = map(int, input().split())\n\n\nfor i in range(N):\n    if int(input()) <= max(W, H) ** 2:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n", "\n\n\"\"\"\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n\"\"\"\n\ninpFile=open('file.in','r')\noutFile=open('file.out','w')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())\n  if length<=width or length<=height or length<=(width**2+height**2)**(0.5):\n    outFile.write(\"DA\\n\")\n  else:\n    outFile.write(\"NE\\n\")\n", "# https://open.kattis.com/problems/cudoviste\n\n\ndef is_safe(x, y, grid):\n    if x < 0 or x >= W or y < 0 or y >= H:\n        return False\n    return grid[x][y] == '.'\n\n\ndef count_cars(x, y, grid):\n    count = 0\n    if not is_safe(x, y, grid):\n        return count\n    for i in range(-1, 2):\n        for j in range(-1, 2):\n            if not is_safe(x + i, y + j, grid):\n                count += 1\n    return count\n\n\nN, W, H = map(int, input().split())\n\ngrid = []\nfor _ in range(H):\n    grid.append(list(input()))\n\ncount = [0] * 5\nfor i in range(W):\n    for j in range(H):\n        count[count_cars(i, j, grid)] += 1\n\nfor i in range(N): print(count[i])\n", "N, W, H = map(int, input().split())\nfor _ in range(N):\n    match = int(input())\n    if match <= (W**2 + H**2)**0.5:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"]