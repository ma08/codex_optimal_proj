["import sys\n\nN = int(input())\n\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n\nC_X = 0\nC_Y = 0\nH = 0\nfor i in range(N):\n    for j in range(i+1, N):\n        if x_y_h[i][0] == x_y_h[j][0]:\n            if x_y_h[i][1] == x_y_h[j][1]:\n                if x_y_h[i][2] != x_y_h[j][2]:\n                    print(\"No\")\n                    exit()\n            else:\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + x_y_h[i][2]\n                else:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + max(x_y_h[i][2], x_y_h[j][2])\n\nfor i in range(N):\n    if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n        if x_y_h[i][2] != H:\n            print(\"No\")\n            exit()\n    else:\n        if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n            print(\"No\")\n            exit()\n\nprint(C_X, C_Y, H)\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip().strip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().strip().split())\n        points.append((x, y, h))\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\nN = int(input())\n\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if x_y_h[i][0] == x_y_h[j][0]:\n            if x_y_h[i][1] == x_y_h[j][1]:\n                if x_y_h[i][2] != x_y_h[j][2]:\n                    print(\"No\")\n                    exit()\n            else:\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + x_y_h[i][2]\n                else:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + max(x_y_h[i][2], x_y_h[j][2])\n                break\n\nfor i in range(N):\n    if x_y_h[i][2] != 0:\n        if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n            if x_y_h[i][2] != H:\n                print(\"No\")\n                exit()\n        else:\n            if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n                print(\"No\")\n                exit()\n    elif x_y_h[i][2] == 0:\n        if x_y_h[i][0] != C_X or x_y_h[i][1] != C_Y:\n            print(\"No\")\n            exit()\n\nprint(int(C_X), int(C_Y), H)\n", "import sys\nN = int(input())\n\nX_Y_H = []\nfor i in range(N):\n    X_Y_H.append(list(map(int, sys.stdin.readline().split())))\nfor i in range(N):\n    for j in range(i+1, N):\n        if X_Y_H[i][0] == X_Y_H[j][0]:\n            if X_Y_H[i][1] == X_Y_H[j][1]:\n                if X_Y_H[i][2] != X_Y_H[j][2]:\n                    print(\"No\")\n                    exit()\n            else:\n                C_X = X_Y_H[i][0]\n                C_Y = (X_Y_H[i][1] + X_Y_H[j][1]) / 2\n                if X_Y_H[i][2] == X_Y_H[j][2]:\n                    H = abs(X_Y_H[i][1] - X_Y_H[j][1]) + X_Y_H[i][2]\n                else:\n                    H = abs(X_Y_H[i][1] - X_Y_H[j][1]) + max(X_Y_H[i][2], X_Y_H[j][2])\n                break\nfor i in range(N):\n    if X_Y_H[i][0] == C_X and X_Y_H[i][1] == C_Y:\n        if X_Y_H[i][2] != H:\n            print(\"No\")\n            exit()\n    else:\n        if X_Y_H[i][2] != abs(C_X - X_Y_H[i][0]) + abs(C_Y - X_Y_H[i][1]) + H:\n            print(\"No\")\n            exit()\nprint(C_X, C_Y, H)\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    # print(points)\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\nN = int(input())\n\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\nfor i in range(N):\n    for j in range(i + 1, N):\n        if x_y_h[i][0] == x_y_h[j][0]:\n            if x_y_h[i][1] == x_y_h[j][1]:\n                if x_y_h[i][2] != x_y_h[j][2]:\n                    print(\"No\")\n                    exit()\n            else:\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + x_y_h[i][2]\n                else:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + max(x_y_h[i][2], x_y_h[j][2])\n                break\nfor i in range(N):\n    if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n        if x_y_h[i][2] != H:\n            print(\"No\")\n            exit()\n    else:\n        if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n            print(\"No\")\n            exit()\nprint(C_X, C_Y, H)\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\nN = int(input())\n\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n\nC_X = C_Y = H = 0\nfor i in range(N):\n    for j in range(i+1, N):\n        if x_y_h[i][0] == x_y_h[j][0]:\n            if x_y_h[i][1] == x_y_h[j][1]:\n                if x_y_h[i][2] != x_y_h[j][2]:\n                    print(\"No\")\n                    exit()\n            else:\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + x_y_h[i][2]\n                else:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + max(x_y_h[i][2], x_y_h[j][2])\n                break\n\nfor i in range(N):\n    if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n        if x_y_h[i][2] != H:\n            print(\"No\")\n            exit()\n    else:\n        if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n            print(\"No\")\n            exit()\n\nprint(C_X, C_Y, H)\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    # print(points)\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n        else:\n            continue\n        break\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    print(points)\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            print(center_x, center_y, height)\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                print(center_x, center_y, height)\n                break  # \u51fa\u529b\u3057\u305f\u3089\u30b9\u30bf\u30c3\u30af\u3092\u623b\u3059\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                if h1 == h2:\n                    center_x = (x1 + x2) // 2\n                    center_y = (y1 + y2) // 2\n                    height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n                elif h1 < h2:\n                    center_x = x2\n                    center_y = y2\n                    height = h2 + abs(x1 - center_x) + abs(y1 - center_y)\n                else:\n                    center_x = x1\n                    center_y = y1\n                    height = h1 + abs(x2 - center_x) + abs(y2 - center_y)\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\nN = int(input())\n\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if x_y_h[i][0] == x_y_h[j][0]:\n            if x_y_h[i][1] == x_y_h[j][1]:\n                if x_y_h[i][2] != x_y_h[j][2]:\n                    print(\"No\")\n                    exit()\n            else:\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + x_y_h[i][2]\n                else:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + max(x_y_h[i][2], x_y_h[j][2])\n                break\n\nfor i in range(N):\n    if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n        if x_y_h[i][2] != H:\n            print(\"No\")\n            exit()\n    else:\n        if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n            print(\"No\")\n            exit()\n\nprint(C_X, C_Y, H)\n", "\n \nimport sys\nN = int(input())\n\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if x_y_h[i][0] == x_y_h[j][0]:\n            if x_y_h[i][1] == x_y_h[j][1]:\n                if x_y_h[i][2] != x_y_h[j][2]:\n                    print(\"No\")\n                    exit()\n            else:\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + x_y_h[i][2]\n                else:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + max(x_y_h[i][2], x_y_h[j][2])\n                break\n\nfor i in range(N):\n    if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n        if x_y_h[i][2] != H:\n            print(\"No\")\n            exit()\n    else:\n        if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n            print(\"No\")\n            exit()\n\nprint(C_X, C_Y, H)\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    center_x = 0\n    center_y = 0\n    height = 0\n    for x1, y1, h1 in points:\n        for x2, y2, h2 in points:\n            if x1 == x2 and y1 == y2:\n                continue\n            center_x = (x1 + x2) // 2\n            center_y = (y1 + y2) // 2\n            height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            # print(x1, y1, h1, x2, y2, h2, center_x, center_y, height)\n            if all(h == max(height - abs(x - center_x) - abs(y - center_y), 0) for x, y, h in points):\n                break;\n        else:\n            continue\n        break\n    print(center_x, center_y, height)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    # print(points)\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2  # \u5e73\u5747\u5024\n                center_y = (y1 + y2) // 2  # \u5e73\u5747\u5024\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)  # \u9ad8\u3055\n            # print(center_x, center_y, height)\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                print(center_x, center_y, height)\n                break  # \u51fa\u529b\u3057\u305f\u3089\u30b9\u30bf\u30c3\u30af\u3092\u623b\u3059\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\nN = int(input())\n\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\nfor i in range(N):\n    for j in range(i+1, N):\n        if x_y_h[i][0] == x_y_h[j][0] and x_y_h[i][1] == x_y_h[j][1]:\n            if x_y_h[i][2] != x_y_h[j][2]:\n                print(\"No\")\n                exit()\n            C_X = x_y_h[i][0]\n            C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n            if x_y_h[i][2] == x_y_h[j][2]:\n                H = abs(x_y_h[i][1] - x_y_h[j][1]) + x_y_h[i][2]\n            else:\n                H = abs(x_y_h[i][1] - x_y_h[j][1]) + max(x_y_h[i][2], x_y_h[j][2])\n                break\nfor i in range(N):\n    if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n        if x_y_h[i][2] != H:\n            print(\"No\")\n            exit()\n    else:\n        if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n            print(\"No\")\n            exit()\nprint(C_X, C_Y, H)\n", "\n \nimport sys\n \nN = int(input())\n \nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n \nfor i in range(N):\n    for j in range(i+1, N):\n        if x_y_h[i][0] == x_y_h[j][0]:\n            if x_y_h[i][1] == x_y_h[j][1]:\n                if x_y_h[i][2] != x_y_h[j][2]:\n                    print(\"No\")\n                    exit()\n            else:\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + x_y_h[i][2]\n                else:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + max(x_y_h[i][2], x_y_h[j][2])\n                break\n \nfor i in range(N):\n    if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n        if x_y_h[i][2] != H:\n            print(\"No\")\n            exit()\n    else:\n        if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n            print(\"No\")\n            exit()\n \nprint(C_X, C_Y, H)\n"]