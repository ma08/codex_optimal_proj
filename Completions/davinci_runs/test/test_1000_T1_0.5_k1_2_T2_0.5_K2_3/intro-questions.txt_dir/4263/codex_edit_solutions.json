["\n# ABC085B - Kagami Mochi\nimport sys\nsys.setrecursionlimit(10 ** 7)\n\nS = input()\n#S = \"ATCODER\"\n\ndp = [0] * (len(S) + 1)\n#print(dp)\n\n#print(ans)\n", "import sys\n\ndef main():\n    S = sys.stdin.readline().strip()\n    max_len = 0\n    curr_len = 1\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 1\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "\nS = input()\nans = 0\nfor i in range(len(S) - 2):\n    if S[i:i + 3] == \"ABC\":\n        ans += 1\nprint(ans)\n", "import sys\n\ndef main():\n    S = input()\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    N, M = map(int, sys.stdin.readline().rstrip().split())\n    A = list(map(int, sys.stdin.readline().rstrip().split()))\n    B = list(map(int, sys.stdin.readline().rstrip().split()))\n\n    count = 0\n    for b in B:\n        if b in A:\n            count += 1\n\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nS = input()\n# S = \"ATCODER\"\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n", "\n\nS = input()\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n", "\n# ABC085B - Kagami Mochi\nimport sys\nsys.setrecursionlimit(10 ** 7)\n\nS = input()\n#S = \"ATCODER\"\n\nprint(S)\n", "\nimport sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()  # rstrip\u3067\u6539\u884c\u6587\u5b57\u3092\u524a\u9664\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()  # \u6587\u5b57\u5217S\u3092\u53d6\u5f97\n    max_len = 0\n    curr_len = 0\n    for c in S:  # \u6587\u5b57\u5217S\u306e\u6587\u5b57\u3092\u3059\u3079\u3066\u53d6\u308a\u51fa\u3059\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1  # \u5236\u9650\u3055\u308c\u305f\u6587\u5b57\u3067\u3042\u308c\u3070\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    S = sys.stdin.readline().rstrip() # readline()\u3067\u6539\u884c\u6587\u5b57\u307e\u3067\u8aad\u307f\u8fbc\u3093\u3067\u3057\u307e\u3046\u306e\u3067rstrip()\u3067\u6539\u884c\u6587\u5b57\u3092\u524a\u9664\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "\n\nS = input() #S = \"ATCODER\"\n\nans = 1\n\nfor i in range(1, len(S)):\n    if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n        if S[i] == S[i-1]:\n            ans += 1\n    else:\n        ans = 1\n\nprint(ans)\n", "import sys\nsys.setrecursionlimit(10 ** 7)\n\nS = int(input())\n\ndp = [0] * (S + 1)\ndp[0] = 1\n\nfor i in range(1, S + 1):\n    if i - 3 >= 0:\n        dp[i] += dp[i - 3]\n    if i - 7 >= 0:\n        dp[i] += dp[i - 7]\n    if i - 10 >= 0:\n        dp[i] += dp[i - 10]\n\nprint(dp[S])\n"]