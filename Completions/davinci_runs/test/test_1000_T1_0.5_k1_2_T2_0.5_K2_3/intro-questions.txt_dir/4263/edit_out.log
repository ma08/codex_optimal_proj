2022-04-12 18:50:48.798465 num operations 2
2022-04-12 18:50:48.798474 size on input set 1
2022-04-12 18:50:56.371854 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# S = input()\nS = \"ATCODER\"\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nS = input()\n#S = \"ATCODER\"\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\n# ABC085B - Kagami Mochi\nimport sys\nsys.setrecursionlimit(10 ** 7)\n\nS = input()\n#S = \"ATCODER\"\n\ndp = [0] * (len(S) + 1)\n#print(dp)\n\nprint(ans)\n"
    }
  ],
  "created": 1649789448,
  "object": "edit"
}
2022-04-12 18:50:56.372068 fix spelling mistakes 3 ['\n\n# S = input()\nS = "ATCODER"\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == "A" or S[i] == "C" or S[i] == "G" or S[i] == "T":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n', '\n\nS = input()\n#S = "ATCODER"\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == "A" or S[i] == "C" or S[i] == "G" or S[i] == "T":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n', '\n# ABC085B - Kagami Mochi\nimport sys\nsys.setrecursionlimit(10 ** 7)\n\nS = input()\n#S = "ATCODER"\n\ndp = [0] * (len(S) + 1)\n#print(dp)\n\nprint(ans)\n']
2022-04-12 18:50:56.372098 size on output set 3
2022-04-12 18:50:56.372105 size on input set 3
2022-04-12 18:51:01.365414 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nS = input() #S = \"ATCODER\"\n\nans = 1\n\nfor i in range(1, len(S)):\n    if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n        if S[i] == S[i-1]:\n            ans += 1\n    else:\n        ans = 1\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nS = input()\n# S = \"ATCODER\"\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\nS = input()\nans = 0\nfor i in range(len(S) - 2):\n    if S[i:i + 3] == \"ABC\":\n        ans += 1\nprint(ans)\n"
    }
  ],
  "created": 1649789456,
  "object": "edit"
}
2022-04-12 18:51:01.365665 fix syntax errors 3 ['\n\nS = input() #S = "ATCODER"\n\nans = 1\n\nfor i in range(1, len(S)):\n    if S[i] == "A" or S[i] == "C" or S[i] == "G" or S[i] == "T":\n        if S[i] == S[i-1]:\n            ans += 1\n    else:\n        ans = 1\n\nprint(ans)\n', '\n\nS = input()\n# S = "ATCODER"\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == "A" or S[i] == "C" or S[i] == "G" or S[i] == "T":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n', '\nS = input()\nans = 0\nfor i in range(len(S) - 2):\n    if S[i:i + 3] == "ABC":\n        ans += 1\nprint(ans)\n']
2022-04-12 18:51:03.026521 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nS = input()\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nS = input()\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\n\nS = input()\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n"
    }
  ],
  "created": 1649789461,
  "object": "edit"
}
2022-04-12 18:51:03.026776 fix syntax errors 3 ['\n\nS = input()\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == "A" or S[i] == "C" or S[i] == "G" or S[i] == "T":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n', '\n\nS = input()\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == "A" or S[i] == "C" or S[i] == "G" or S[i] == "T":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n', '\n\nS = input()\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == "A" or S[i] == "C" or S[i] == "G" or S[i] == "T":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n']
2022-04-12 18:51:07.905547 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# ABC085B - Kagami Mochi\nimport sys\nsys.setrecursionlimit(10 ** 7)\n\nS = input()\n#S = \"ATCODER\"\n\ndp = [0] * (len(S) + 1)\n#print(dp)\n\n#print(ans)\n"
    },
    {
      "index": 1,
      "text": "\n# ABC085B - Kagami Mochi\nimport sys\nsys.setrecursionlimit(10 ** 7)\n\nS = input()\n#S = \"ATCODER\"\n\nprint(S)\n"
    },
    {
      "index": 2,
      "text": "import sys\nsys.setrecursionlimit(10 ** 7)\n\nS = int(input())\n\ndp = [0] * (S + 1)\ndp[0] = 1\n\nfor i in range(1, S + 1):\n    if i - 3 >= 0:\n        dp[i] += dp[i - 3]\n    if i - 7 >= 0:\n        dp[i] += dp[i - 7]\n    if i - 10 >= 0:\n        dp[i] += dp[i - 10]\n\nprint(dp[S])\n"
    }
  ],
  "created": 1649789463,
  "object": "edit"
}
2022-04-12 18:51:07.905741 fix syntax errors 3 ['\n# ABC085B - Kagami Mochi\nimport sys\nsys.setrecursionlimit(10 ** 7)\n\nS = input()\n#S = "ATCODER"\n\ndp = [0] * (len(S) + 1)\n#print(dp)\n\n#print(ans)\n', '\n# ABC085B - Kagami Mochi\nimport sys\nsys.setrecursionlimit(10 ** 7)\n\nS = input()\n#S = "ATCODER"\n\nprint(S)\n', 'import sys\nsys.setrecursionlimit(10 ** 7)\n\nS = int(input())\n\ndp = [0] * (S + 1)\ndp[0] = 1\n\nfor i in range(1, S + 1):\n    if i - 3 >= 0:\n        dp[i] += dp[i - 3]\n    if i - 7 >= 0:\n        dp[i] += dp[i - 7]\n    if i - 10 >= 0:\n        dp[i] += dp[i - 10]\n\nprint(dp[S])\n']
2022-04-12 18:51:07.905777 size on output set 7
2022-04-12 18:51:07.905789 num operations 2
2022-04-12 18:51:07.905795 size on input set 1
2022-04-12 18:51:09.369759 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649789467,
  "object": "edit"
}
2022-04-12 18:51:09.369925 fix spelling mistakes 3 ["import sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 18:51:09.370037 size on output set 2
2022-04-12 18:51:09.370045 size on input set 2
2022-04-12 18:51:12.234868 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    S = input()\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    S = sys.stdin.readline().strip()\n    max_len = 0\n    curr_len = 1\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 1\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    S = sys.stdin.readline().rstrip() # readline()\u3067\u6539\u884c\u6587\u5b57\u307e\u3067\u8aad\u307f\u8fbc\u3093\u3067\u3057\u307e\u3046\u306e\u3067rstrip()\u3067\u6539\u884c\u6587\u5b57\u3092\u524a\u9664\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649789469,
  "object": "edit"
}
2022-04-12 18:51:12.235053 fix syntax errors 3 ["import sys\n\ndef main():\n    S = input()\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    S = sys.stdin.readline().strip()\n    max_len = 0\n    curr_len = 1\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 1\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    S = sys.stdin.readline().rstrip() # readline()で改行文字まで読み込んでしまうのでrstrip()で改行文字を削除\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 18:51:19.746220 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()  # rstrip\u3067\u6539\u884c\u6587\u5b57\u3092\u524a\u9664\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()  # \u6587\u5b57\u5217S\u3092\u53d6\u5f97\n    max_len = 0\n    curr_len = 0\n    for c in S:  # \u6587\u5b57\u5217S\u306e\u6587\u5b57\u3092\u3059\u3079\u3066\u53d6\u308a\u51fa\u3059\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1  # \u5236\u9650\u3055\u308c\u305f\u6587\u5b57\u3067\u3042\u308c\u3070\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    N, M = map(int, sys.stdin.readline().rstrip().split())\n    A = list(map(int, sys.stdin.readline().rstrip().split()))\n    B = list(map(int, sys.stdin.readline().rstrip().split()))\n\n    count = 0\n    for b in B:\n        if b in A:\n            count += 1\n\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649789472,
  "object": "edit"
}
2022-04-12 18:51:19.746402 fix syntax errors 3 ["\nimport sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()  # rstripで改行文字を削除\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()  # 文字列Sを取得\n    max_len = 0\n    curr_len = 0\n    for c in S:  # 文字列Sの文字をすべて取り出す\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1  # 制限された文字であればカウントアップ\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    N, M = map(int, sys.stdin.readline().rstrip().split())\n    A = list(map(int, sys.stdin.readline().rstrip().split()))\n    B = list(map(int, sys.stdin.readline().rstrip().split()))\n\n    count = 0\n    for b in B:\n        if b in A:\n            count += 1\n\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 18:51:19.746442 size on output set 6
