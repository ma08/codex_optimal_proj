["\n\nr, c, zr, zc = map(int, input().split(\" \"))\n\narticle = []\nfor i in range(r):\n    article.append(input())\n\nfor i in range(r):\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(article[i][k], end=\"\")\n        print(\"\")\n", "#!/usr/bin/env python3\n\nimport sys\n\n# read input\nR, C, ZR, ZC = map(int, sys.stdin.readline().split())\narticle = []\nfor _ in range(R):\n    article.append([s for s in sys.stdin.readline().rstrip()])\n\n# enlarge the article\nenlarged_article = []\nfor row in article:\n    enlarged_row = []\n    for c in row:\n        enlarged_row.extend([c]*ZC)\n    enlarged_article.extend([enlarged_row]*ZR)\n\n# print the enlarged article\nfor row in enlarged_article:\n    print(''.join(row))\n", "\n# this is a file\nr, c, zr, zc = map(int, input().split())\nfor i in range(r):\n    line = input()\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(line[k], end='')\n        print()\n", "\n# Read input\nr, c, zr, zc = [int(x) for x in input().split()]\narticle = [input() for _ in range(r)]\n\n# Enlarge article and print\nfor row in article:\n    for _ in range(zr):\n        print(row.replace(\".\", \"..\").replace(\"x\", \"xx\"))\n", "r, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    lines = list(input())\n    for k in range(zr):\n        for j in range(c):\n            for l in range(zc):\n                print(lines[j], end=\"\")\n        print()\n", "\nr, c, zr, zc = map(int, input().split())  # r=row, c=column, zr=zoom in row, zc=zoom in column\n\narticle = []  # article is the list of the string\nfor i in range(r):\n    article.append(input())  # read from input and append it to the list\n\nfor i in range(r):\n    for j in range(zr):  # zoom in row\n        for k in range(c):  # looping through the row\n            for l in range(zc):  # zoom in column\n                print(article[i][k], end=\"\")  # print the string\n        print()\n", "\n\nr, c, zr, zc = map(int, input().split(\" \"))\n\narticle = []\nfor i in range(r):\n    article.append(input())\n\nfor i in range(r):\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(article[i][k], end=\"\")\n\n        print()\n", "\n\nr, c, zr, zc = map(int, input().split())\n\narticle = []\nfor i in range(r):\n    article.append(input())\n\nfor i in range(r):\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(article[i][k], end=\"\")\n        print()\n", "\nR, C, ZR, ZC = map(int, input().split())\n\nfor i in range(R):\n    line = input().rstrip()\n    for k in range(ZR):\n        for j in range(C):\n            for l in range(ZC):\n                print(line[j], end='')\n        print(end='\\n')\n", "\n\nr, c, zr, zc = map(int, input().split())  # r = row, c = column, zr = zoom in row, zc = zoom in column\n\narticle = []  # article is the list of the string\nfor i in range(r):\n    article.append(input())  # read from input and append it to the list\n\nfor i in range(r):\n    for j in range(zr):  # looping through the row\n        for k in range(c):  # looping through the column\n            for l in range(zc):  # zoom in column for each character\n                print(article[i][k], end=\"\")  # print the string\n        print()\n", "#!/usr/bin/python3\n\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(line[k], end='')\n        print()\n", "#!/usr/bin/env python3\n\nr, c, zr, zc = map(int, input().split())  # r = rows, c = columns, zr = zoom rows, zc = zoom columns\n\narticle = []\nfor i in range(r):\n    article.append(input())\n\nfor i in range(r):\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(article[i][k], end=\"\")\n        print()\n", "import sys\nprint(sys.argv)\n", "\nimport sys\n\n# read input\nR, C, ZR, ZC = map(int, sys.stdin.readline().split())\narticle = []\nfor _ in range(R):\n    article.append([s for s in sys.stdin.readline().rstrip()])\n\n# enlarge article\nenlarged = []\nfor row in article:\n    enlarged_row = []\n    for c in row:\n        enlarged_row.extend([c]*ZC)\n    enlarged.extend([enlarged_row]*ZR)\n\n# print enlarged article\nfor row in enlarged:\n    print(''.join(row))\n", "\n\nr, c, zr, zc = map(int, input().split())\nlines = []\n\n\nfor i in range(r):\n    lines.append(input())\n\nfor line in lines:\n    for k in range(zr):\n        for j in range(len(line)):\n            for l in range(zc-1):\n\n                print(line[j], end=\"\")\n\n        print(line[j])\n", "\n", "r, c, zr, zc = map(int, input().split())\nline = []\nfor i in range(r):\n    line.append(input())\n\nfor i in line:\n    for j in range(zr):\n        for k in i:\n            for l in range(zc):\n                print(k, end='')\n        print('')\n", "\n# Read input\nr, c, zr, zc = [int(x) for x in input().split()]\narticle = [input() for _ in range(r)]\n\n# Enlarge articles\nfor row in article:\n    for _ in range(zr):\n        print(row.replace(\".\", \"..\").replace(\"X\", \"XX\"))\n", "\nlines = []\nR, C, ZR, ZC = map(int, input().split())\n\nfor i in range(R):\n    lines.append(input())\nfor line in lines:\n    for i in range(ZR):\n        for c in line:\n            for j in range(ZC):\n                print(c, end='')\n        print('')\n", "\n\nimport sys\n\n#read input\nR, C, ZR, ZC = map(int, sys.stdin.readline().split())\narticle = []\nfor _ in range(R):\n    article.append([s for s in sys.stdin.readline().strip()])\n\n#enlarged article\nenlarged = []\nfor row in article:\n    enlarged_row = []\n    for c in row:\n        enlarged_row.extend([c]*ZC)\n    enlarged.extend([enlarged_row]*ZR)\n\n#print enlarged article\nfor row in enlarged:\n    print(''.join(row))\n", "\n\ndef read_input():\n    r, c, zr, zc = [int(x) for x in input().split()]\n    article = [input() for _ in range(r)]  # noqa: E741\n    return r, c, zr, zc, article\n\n\ndef enlarge_article(article, zr):\n    for row in article:\n        for _ in range(zr):\n            print(row.replace(\".\", \"..\").replace(\"x\", \"xx\"))\n\n\ndef main():\n    r, c, zr, zc, article = read_input()\n    enlarge_article(article, zr)  # noqa: E741\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\n# read input\nR, C, ZR, ZC = map(int, sys.stdin.readline().split())\narticle = []\nfor _ in range(R):\n    article.append([s for s in sys.stdin.readline().rstrip()])\n\n# enlarged article\nenlarged = []\nfor row in article:\n    enlarged_row = []\n    for c in row:\n        enlarged_row.extend([c]*ZC)\n    enlarged.extend([enlarged_row]*ZR)\n\n# print enlarged article\nfor row in enlarged:\n    print(''.join(row))\n", "\n\ndef main():\n    R, C, Zr, Zc = [int(i) for i in input().split()]\n    article = [input() for _ in range(R)]\n\n    for i in range(R * Zr):\n        for j in range(Zc):\n            new_line = ''\n            for k in range(C * Zc):\n                new_line += article[i // Zr][k // Zc]\n            print(new_line)\n\nif __name__ == '__main__':\n    main()\n", "\n\nr, c, zr, zc = map(int, raw_input().split())\n\n    # input line\nfor i in range(r):\n    # for each row of the line\n    line = raw_input()\n        # for each character of the line\n    for j in range(zr):\n            # for each row of the character\n        for k in range(c):\n                # print the character\n            for l in range(zc):\n                print(line[k], end='')\n        print()\n", "\n\ndef main():\n    R, C, Zr, Zc = [int(i) for i in input().split()]\n    article = [input() for _ in range(R)]\n\n    for i in range(R):\n        for j in range(Zr):\n            new_line = ''\n            for k in range(C):\n                for l in range(Zc):\n                    new_line += article[i][k]\n            print(new_line, end='')\n        print()\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\n# read input\nR, C, ZR, ZC = map(int, sys.stdin.readline().split())\narticle = []\nfor _ in range(R):\n    article.append([s for s in sys.stdin.readline().rstrip()])\n\n# enlarged article\nenlarged = []\nfor row in article:\n    enlarged_row = []\n    for c in row:\n        enlarged_row.extend([c]*ZC)\n    enlarged.extend([enlarged_row]*ZR)\n\n# print enlarged article\nfor row in enlarged:\n    print(''.join(row))\n", "r, c, zr, zc = map(int, input().split())\n\n\nfor i in range(r):\n    line = input()\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(line[k], end='')\n        print()\n", "\n\ndef main():\n    R, C, ZR, ZC = map(int, input().split())\n    article = [list(input()) for _ in range(R)]\n    for row in article:  # row: list\n        for _ in range(ZR):\n            for char in row:\n                for _ in range(ZC):\n                    print(char, end='')\n            print()\n\nif __name__ == '__main__':\n    main()\n", "\n\nr, c, zr, zc = map(int, input().split()) # r = rows, c = columns, zr = zoom rows, zc = zoom columns\n\narticle = []\nfor i in range(r):\n    article.append(list(input()))\n\nfor i in range(r):\n    for j in range(zr):\n        for k in range(zc):\n            for l in range(c):\n                print(article[i][l], end=\"\")\n            print()\n", "import sys\n\n#read input\nR, C, ZR, ZC = map(int, sys.stdin.readline().split())\narticle = []\nfor _ in range(R):\n    article.append([s for s in sys.stdin.readline().rstrip()])\n\n#enlarge the article\nenlarged_article = []\nfor row in article:\n    enlarged_row = []\n    for c in row:\n        enlarged_row.extend([c]*ZC)\n    enlarged_article.extend([enlarged_row]*ZR)\n\n#print the enlarged article\nfor row in enlarged_article:\n    print(''.join(row))\n", "\n\nr, c, zr, zc = map(int, input().split()) # input line\n\nfor i in range(r):\n    line = input()\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(line[k], end='') # print the character\n        print() # for each row of the character\n", "\ndef main():\n    R, C, ZR, ZC = map(int, input().split(' '))\n    article = [input() for _ in range(R)]\n    for row in article:\n        for i in range(ZR):\n            for char in row:\n                for j in range(ZC):\n                    print(char, end='')\n            print('')\n\nif __name__ == '__main__':\n    main()\n", "\nr, c, zr, zc = map(int, input().split(\" \"))\n\narticle = []\nfor i in range(r):\n    article.append(input())\n\nfor i in range(r):\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(article[i][k], end=\"\")\n        print()\n", "\n\ndef main():\n    r, c, zr, zc = [int(i) for i in input().split()]\n    article = [input() for i in range(r)]\n\n    for i in range(r * zr):\n        new_line = ''\n        for j in range(c):\n            for k in range(zc):\n                new_line += article[int(i / zr)][j]\n        print(new_line)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\n# read input\nR, C, ZR, ZC = map(int, sys.stdin.readline().split())\narticle = []\nfor _ in range(R):\n    article.append([s for s in sys.stdin.readline().rstrip()])\n\n# enlarge the article\nenlarged_article = []\nfor row in article:\n    enlarged_row = []\n    for c in row:\n    enlarged_article.extend([enlarged_row] * ZR)\n\n# print the enlarged article\nfor row in enlarged_article:\n    print(''.join(row))\n", "\n\ndef main():\n    R, C, Zr, Zc = [int(i) for i in input().split()] # R:\u884c\u6570 C:\u5217\u6570 Zr:\u884c\u306e\u500d\u7387 Zc:\u5217\u306e\u500d\u7387\n    article = [input() for _ in range(R)] # \u8a18\u4e8b\u3092\u8aad\u307f\u8fbc\u3080\n    for i in range(R): # \u884c\u6570\u5206\u30eb\u30fc\u30d7\n        for j in range(Zr): # \u884c\u306e\u500d\u7387\u5206\u30eb\u30fc\u30d7\n            new_line = '' # \u65b0\u3057\u3044\u884c\u306e\u6587\u5b57\u5217\u3092\u7a7a\u306b\u3059\u308b\n            for k in range(C): # \u5217\u6570\u5206\u30eb\u30fc\u30d7\n                for l in range(Zc): # \u5217\u306e\u500d\u7387\u5206\u30eb\u30fc\u30d7\n                    new_line += article[i][k] # \u65b0\u3057\u3044\u884c\u306e\u6587\u5b57\u5217\u306b\u8a18\u4e8b\u306e\u6587\u5b57\u3092\u8ffd\u52a0\u3059\u308b\n            print(new_line) # \u65b0\u3057\u3044\u884c\u3092\u51fa\u529b\u3059\u308b\n\n\nif __name__ == '__main__':\n    main()\n", "\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for k in range(zr):\n        for j in range(c):\n            for l in range(zc):\n\n                print(line[j], end='')\n\n        print()\n", "\n\nr, c, zr, zc = map(int, input().split()) # input\n\nfor i in range(r): # for each row of the line\n    line = input() # input line\n    for j in range(zr): # for each row of the character\n        for k in range(c): # for each character of the line\n            for l in range(zc): # print the character\n                print(line[k], end='') # print the character\n        print()\n", "#!/usr/bin/env python3\n\ndef read_input():\n    r, c, zr, zc = [int(x) for x in input().split()]\n    article = [input() for _ in range(r)]\n    return r, c, zr, zc, article\n\n\ndef enlarge_article(article, zr):\n    for row in article:\n        for _ in range(zr):\n            print(row.replace(\".\", \"..\").replace(\"X\", \"XX\"))\n\n\ndef main():\n    r, c, zr, zc, article = read_input()\n    enlarge_article(article, zr)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    r, c, zr, zc = [int(i) for i in input().split()]\n    article = [input() for i in range(r)]\n\n    for i in range(r):\n        for j in range(zr):\n            new_line = []\n            for k in range(c):\n                for l in range(zc):\n                    new_line.append(article[i][k])\n            new_line = ''.join(new_line)\n            print(new_line)\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    R, C, ZR, ZC = map(int, input().split())\n    article = [input() for _ in range(R)]\n    for row in article:  # row: str\n        for i in range(ZR):\n            for char in row:  # char: str\n                for j in range(ZC):\n                    print(char, end='')\n            print()\n\nif __name__ == '__main__':\n    main()\n", "\n\n# Read input\nr, c, zr, zc = [int(x) for x in input().split()]\narticle = [input() for _ in range(r)]\n\n# Enlarge articles\nfor row in article:\n    for _ in range(zr):\n        print(row.replace(\".\", \"..\").replace(\"X\", \"XX\"))\n", "\ndef main():\n    r, c, zr, zc = [int(i) for i in input().split()]\n    article = [input() for i in range(r)]\n\n    for i in range(r):\n        for _ in range(zr):\n            new_line = ''\n            for k in range(c):\n                for _ in range(zc):\n                    new_line += article[i][k]\n            print(new_line)\n\nif __name__ == '__main__':\n    main()\n", "\nr, c, zr, zc = map(int, input().split()) # dimensions of the input matrix, and zoom factors\n\nfor i in range(r):\n    line = input() # read a line of input\n    for j in range(zr): # zoom row factor\n        for k in range(c): # column\n            for l in range(zc): # zoom column factor\n                print(line[k], end='') # print a character of the line\n        print() # print a newline\n", "\n\nimport sys\n\n# read input\nR, C, ZR, ZC = map(int, sys.stdin.readline().split())\narticle = []\nfor _ in range(R):\n    article.append([c for c in sys.stdin.readline().rstrip()])\n\n# enlarge article\nenlarged = []\nfor row in article:\n    enlarged_row = []\n    for c in row:\n        enlarged_row.extend([c]*ZC)\n    enlarged.extend([enlarged_row]*ZR)\n\n# print enlarged article\nfor row in enlarged:\n    print(''.join(row))\n", "\n# Read input\nr, c, zr, zc = [int(x) for x in input().split()]\narticle = [input() for _ in range(r)]\n\n# Enlarge articles\nfor row in article:\n    for _ in range(zr):\n        print(row.replace(\".\", \"..\").replace(\"x\", \"xx\"))\n", "\ndef main():\n    R, C, ZR, ZC = map(int, input().split())\n    article = [list(input()) for _ in range(R)]\n    for row in article:  # row: list\n        for i in range(ZR):\n            for char in row:  # char: str\n                for j in range(ZC):\n                    print(char, end='')\n            print()\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    R, C, ZR, ZC = map(int, input().split())\n    article = [list(input()) for _ in range(R)]  # article: list of list of str\n    for row in article:  # row: list of str\n        for i in range(ZR):\n            for char in row:  # char: str\n                for j in range(ZC):\n                    print(char, end='')\n            print()\n\nif __name__ == '__main__':\n    main()\n", "\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for k in range(zr):\n        for j in range(c):\n            for l in range(zc): \n\n                print(line[j], end='')\n\n        print()\n", "\nr, c, zr, zc = map(int, input().split()) \n\nfor i in range(r):\n    lines = input()\n    for k in range(zr):\n        for j in range(c):\n            for l in range(zc):\n                print(lines[j], end='')\n        print()\n", "r, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(line[k], end='')\n        print()\n", "\n\ndef read_input():\n    r, c, zr, zc = [int(x) for x in input().split()]\n    article = [input() for _ in range(r)]\n    return r, c, zr, zc, article\n\n\ndef enlarge_article(article, zr, zc):\n    for row in article:\n        for _ in range(zr):\n            print(row.replace(\".\", \".\"*zc).replace(\"x\", \"x\"*zc))\n\n\ndef main():\n    r, c, zr, zc, article = read_input()\n    enlarge_article(article, zr, zc)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nR, C, ZR, ZC = map(int, input().split())\n\nfor i in range(R):\n    line = input()\n        print()\n    for k in range(ZR):\n        for j in range(C):\n            for l in range(ZC):\n                print(line[j], end='')\n        print()\n", "\nimport sys\n\ndef main():\n    # read input\n    R, C, ZR, ZC = map(int, sys.stdin.readline().split())\n    article = []\n    for _ in range(R):\n        article.append([s for s in sys.stdin.readline().rstrip()])\n\n    # enlarge article\n    enlarged = []\n    for row in article:\n        enlarged_row = []\n        for c in row:\n            enlarged_row.extend([c]*ZC)\n        enlarged.extend([enlarged_row]*ZR)\n\n    # print enlarged article\n    for row in enlarged:\n        print(''.join(row))\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    R, C, ZR, ZC = map(int, input().split())\n    article = [input() for _ in range(R)]\n    for row in article:\n        for i in range(ZR):\n            for char in row:\n                for j in range(ZC):\n                    print(char, end=\"\")\n            print()\n\nif __name__ == '__main__':\n    main()\n"]