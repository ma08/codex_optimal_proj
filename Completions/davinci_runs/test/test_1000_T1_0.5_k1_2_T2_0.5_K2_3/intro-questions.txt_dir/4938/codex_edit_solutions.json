["\nx = int(input())\ns = input()\n\nw = 0\nm = 0\ni = 0\n\nfor c in s:\n    if c == 'W':\n        w += 1\n    else:\n        m += 1\n    if abs(w - m) > x:\n        break\n    i += 1\n\nprint(i)\n\n\n", "x = int(input())\ngenders = input()\n\nwomen = 0\nmen = 0\ntotal = 0\n\nfor gender in genders:\n    if gender == 'W':\n        women += 1\n    else:\n        men += 1\n    if abs(men - women) <= x:\n        total += 1\n    else:\n        break    \n\nprint(total)\n", "\ndef get_input():\n    X = int(input())\n    line = input()\n    return X, line\n\ndef process_data(X, line):\n    if X == 0:\n        return len(line)\n    else:\n        return max(X+1, len(line)-X)\n\ndef print_data(num_people):\n    print(num_people)\n\nX, line = get_input()\nnum_people = process_data(X, line)\nprint_data(num_people)\n", "\n\ndef main():\n    # parse input\n    max_diff = int(input())\n    queue = raw_input()\n    # count the number of men and women in the queue\n    men = queue.count('M')\n    women = queue.count('W')\n    # print the maximum of the number of men and women in the queue\n    # since that's the minimum number of people that can be let in\n    # without exceeding the maximum difference\n    print(min(men, women))\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    # parse input\n    max_diff = int(input())\n    queue = input()\n    # count the number of men and women in the queue\n    men = queue.count('M')\n    women = queue.count('W')\n    # print the minimum between the number of men and women in the queue\n    # since that's the maximum number of people that can be let in\n    # without exceeding the maximum difference\n    print(min(men, women))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nnum_men = int(input())\nnum_women = int(input())\nnum_tables = int(input())\nmax_people = int(input())\n\nprint(min(num_men, num_women, num_tables * max_people))\n", "x = int(input())\ngenders = input().split()\n\nwomen = 0\nmen = 0\ntotal = 0\n\nfor i in range(len(genders)):\n\tif genders[i] == 'W':\n\t\twomen += 1\n\telse:\n\t\tmen += 1\n\tif abs(men - women) <= x:\n\t\ttotal += 1\n\telif abs(men - women) > x:\n\t\tbreak\n\nprint(total + 1)\n", "\n\nx = int(input())  # the number of people to be invited \ngenders = input()  # the genders of the people \n\nwomen = 0\nmen = 0\ntotal = 0\n\nfor gender in genders:\n    if gender == 'W':\n        women += 1\n    else:\n        men += 1\n    if abs(men - women) <= x:\n        total += 1\n    else:\n        break\n\nprint(total)\n", "\n\nx = int(input())\ngenders = input()\n\nwomen = 0\nmen = 0\ntotal = 0\n\nfor gender in genders:\n    if gender == 'W':\n        women += 1\n    else:\n        men += 1\n    if abs(men - women) <= x:\n        total += 1\n    else:\n        break\n\nprint(total)\n", "\n\ndef main():\n    num_cases = int(input())\n    for case in range(num_cases):\n        max_difference = int(input())\n        queue = input()\n        max_people = 0\n        w = 0\n        m = 0\n        for person in queue:\n            if person == 'W':\n                w += 1\n            if person == 'M':\n                m += 1\n            if abs(w - m) > max_difference:\n                break\n            max_people += 1\n        print(max_people)\n\nmain()\n", "\n\ndef main():\n    max_diff = int(input())\n    queue = input()\n    max_people = 0\n    w = 0\n    m = 0\n    for person in queue:\n        if person == 'W':\n            w += 1\n        if person == 'M':\n            m += 1\n        if abs(w - m) > max_diff:  # check if the difference between the number of M and W is bigger than max_diff\n            break\n        max_people += 1\n    print(max_people)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef get_input():\n    N = int(input())\n    line = input()\n    return N, line\n\ndef process_input(N, line):\n    if N == 0:\n        return len(line)\n    else:\n        return max(N+1, len(line)-N)\n\ndef print_output(num_people):\n    print(num_people)\n\nN, line = get_input()\nnum_people = process_input(N, line)\nprint_output(num_people)\n", "x = int(input())\ns = input()\n\nw = 0\nm = 0\ni = 0\n\nfor c in s:\n    if c == 'W':\n        w += 1\n    else:\n        m += 1\n    if abs(w - m) > x:  # if the difference between w and m is greater than x\n        break\n    i += 1  # increment i\n\nprint(i)\n", "\nimport sys\n\nn = int(input())\n\nq = sys.stdin.readline()\n\nx = int(input()) \n\nnum_men = 0\nnum_women = 0\nmax_people = 0\n\nfor person in q:\n    if person == 'M':\n        num_men += 1\n    else:\n        num_women += 1\n\n    if abs(num_men - num_women) > x:\n        break\n    else:\n        max_people += 1\n\nprint(max_people)\n", "# \u0417\u0430\u0434\u0430\u0447\u0430 \u043d\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435: \u0432\u044b\u0431\u043e\u0440\u044b \u043f\u0440\u0435\u0437\u0438\u0434\u0435\u043d\u0442\u0430\n# \u0412 \u0432\u044b\u0431\u043e\u0440\u0430\u0445 \u043f\u0440\u0435\u0437\u0438\u0434\u0435\u043d\u0442\u0430 \u043d\u0430\u0431\u0440\u0430\u043b\u043e N \u0433\u043e\u043b\u043e\u0441\u043e\u0432. \u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u043f\u043e\u0431\u0435\u0434\u0438\u0442\u0435\u043b\u044f \u0432\u044b\u0431\u043e\u0440\u043e\u0432.\n#\n# Sample Input:\n#\n# 2\n# 2\n# 2\n# Sample Output:\n#\n# 1\n\nN = int(input())\n\nvotes = [0, 0]\n\nfor i in range(N):\n    vote = int(input())\n    votes[vote - 1] += 1\n\nif votes[0] > votes[1]:\n    print(1)\nelse:\n    print(2)\n\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n", "\n\nx = int(input())\nline = input()\n\nwomen = men = 0\n\nfor person in line:\n    if person == 'W':\n        women += 1\n    else:\n        men += 1\n\n    if abs(women - men) > x:\n        break\n\nprint(women + men)\n", "\na = int(input())\nb = int(input())\nc = int(input())\n\nprint(a * b * c)\nprint(2 * a * b + 2 * b * c + 2 * a * c)\n", "\nX = int(input())\nline = input()\n\nwomen = men = 0  # \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0436\u0435\u043d\u0449\u0438\u043d \u0438 \u043c\u0443\u0436\u0447\u0438\u043d\n\nfor person in line:  # \u041f\u0440\u043e\u0445\u043e\u0434\u0438\u043c \u043f\u043e \u0432\u0441\u0435\u043c \u043b\u044e\u0434\u044f\u043c\n    if person == 'W':\n        women += 1\n    else:\n        men += 1\n\n    if abs(women - men) > X:  # \u0415\u0441\u043b\u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0436\u0435\u043d\u0449\u0438\u043d \u0438 \u043c\u0443\u0436\u0447\u0438\u043d \u043e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u0441\u044f \u0431\u043e\u043b\u044c\u0448\u0435 \u0447\u0435\u043c \u043d\u0430 X, \u0442\u043e \u0432\u044b\u0445\u043e\u0434\u0438\u043c\n        break\n\nprint(women + men)  # \u0412\u044b\u0432\u043e\u0434\u0438\u043c \u0441\u0443\u043c\u043c\u0443 \u0436\u0435\u043d\u0449\u0438\u043d \u0438 \u043c\u0443\u0436\u0447\u0438\u043d\n", "\n\ndef get_input():\n    Y = int(input())\n    line = input()\n    return Y, line\n\ndef process_input(Y, line):\n    if Y == 0:\n        return len(line)\n    return max(Y+1, len(line)-Y)\n\ndef print_output(num_people):\n    print(num_people)\n\nY, line = get_input()\nnum_people = process_input(Y, line)\nprint_output(num_people)\n", "\n\nx = int(input())  # input number\ns = input()  # input string\n\nw = 0\nm = 0\ni = 0\n\nfor c in s:\n    if c == 'W':\n        w += 1\n    else:\n        m += 1\n    if abs(w - m) > x:\n        break\n    i += 1\n\nprint(i)\n", "# \u0417\u0430\u0434\u0430\u0447\u0430 \u043d\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435: \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 \u0441\u0432\u044f\u0437\u043d\u043e\u0441\u0442\u0438\n# \u0414\u0430\u043d \u043d\u0435\u0432\u0437\u0432\u0435\u0448\u0435\u043d\u043d\u044b\u0439 \u043d\u0435\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0433\u0440\u0430\u0444. \u0412 \u0433\u0440\u0430\u0444\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043a\u0440\u0430\u0442\u0447\u0430\u0439\u0448\u0438\u0445 \u043f\u0443\u0442\u0435\u0439 \u043c\u0435\u0436\u0434\u0443 \u043a\u0430\u043a\u0438\u043c\u0438-\u0442\u043e \u0432\u0435\u0440\u0448\u0438\u043d\u0430\u043c\u0438. \u041d\u0430\u0439\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 \u0441\u0432\u044f\u0437\u043d\u043e\u0441\u0442\u0438 \u0432 \u0433\u0440\u0430\u0444\u0435.\n#\n# Sample Input:\n#\n# 4 2\n# 1 2\n# 3 2\n# Sample Output:\n# 2\n#\n# Sample Input 2:\n#\n# 4 3\n# 1 2\n# 3 2\n# 4 3\n# Sample Output 2:\n#\n# 1\n\nn, m = map(int, input().split())\ngraph = [[] for _ in range(n)]\n\nfor _ in range(m):\n    a, b = map(int, input().split())\n    graph[a - 1].append(b - 1)\n    graph[b - 1].append(a - 1)\n\n\ndef dfs(v, used):\n    used.add(v)\n    for u in graph[v]:\n        if u not in used:\n            dfs(u, used)\n\n\nused = set()\ncomponents = 0\n\nfor v in range(n):\n    if v not in used:\n        dfs(v, used)\n        components += 1\n\nprint(components)\n", "\ndef main():\n    max_diff = int(raw_input())\n    queue = raw_input()\n    max_people = 0\n    w = 0\n    m = 0\n    for person in queue:\n        if person == 'W':\n            w += 1\n        if person == 'M':\n            m += 1\n        if abs(w - m) > max_diff:\n            break\n        max_people += 1\n    print(max_people)\n\n\nif __name__ == '__main__':\n    main()\n", "from collections import deque\n\n\ndef main():\n    n = int(input())\n    stack = deque(input().split())\n    max_length = 0\n    current_length = 0\n    for i in range(n):\n        if stack[i] == '1':\n            current_length += 1\n        else:\n            max_length = max(max_length, current_length)\n            current_length = 0\n    max_length = max(max_length, current_length)\n    print(max_length)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    max_difference = int(input())\n    queue = input()\n    max_people = 0\n    w = 0\n    m = 0\n    for person in queue:\n        if person == 'W':\n            w += 1\n        if person == 'M':\n            m += 1\n        if abs(w - m) > max_difference:\n            break\n        max_people += 1\n    print(max_people)\n\nmain()\n", "\n\ndef main():\n    max_diff = int(input())\n    queue = input()\n    max_people = 0\n    w = 0\n    m = 0\n    for person in queue:\n        if person == 'W':\n            w += 1\n        if person == 'M':\n            m += 1\n        if abs(w - m) > max_diff:\n            break\n        max_people += 1\n    print(max_people)\n\nmain()\n", "\n\nx = int(input())\ngenders = input()\n\nwomen, men, total = 0, 0, 0\n\nfor gender in genders:\n    if gender == 'W':\n        women += 1\n    else:\n        men += 1\n    if abs(men - women) <= x:\n        total += 1\n    else:\n        break\n\nprint(total)\n", "\n\ndef main():\n    # parse input\n    max_diff = int(input())\n    queue = input()\n    # count the number of men and women in the queue\n    men = queue.count('M')\n    women = queue.count('W')\n    # print the minimum of the number of men and women in the queue\n    # since that's the maximum number of people that can be let in\n    # without exceeding the maximum difference\n    print(min(men, women))\n\nif __name__ == \"__main__\":\n    main()\n", "\nX = int(input())\nqueue = input()\nnum_men = 0\nnum_women = 0\nmax_people = 0\n\nfor person in queue:\n    if person == 'M':\n        num_men += 1\n    else:\n        num_women += 1\n\n    if abs(num_men - num_women) > X:\n        break\n    else:\n        max_people += 1\n\nprint(max_people)\n", "\n\ndef get_input():\n    X = int(input())\n    line = input()\n    return X, line\n\ndef process_input(X, line):\n    if X == 0:\n        return len(line)\n    else:\n        return max(len(line[:X]), len(line[X+1:]))\n\ndef print_output(max_length):\n    print(max_length)\n\nX, line = get_input()\nmax_length = process_input(X, line)\nprint_output(max_length)\n", "\n\ndef get_input():\n    Y, line = map(int, input().split())\n    line = input().split()\n    return Y, line\n\ndef process_input(Y, line):\n    if Y == 0:\n        return len(set(line))\n    else:\n        return max(Y + 1, len(set(line)) - Y)\n\ndef print_output(num_people):\n    print(num_people, end=\" \")\n\nY, line = get_input()\nnum_people = process_input(Y, line)\nprint_output(num_people)\n", "\n\nx = int(input())\nq = input()\n \nnum_men = 0\nnum_women = 0\nmax_people = 0\n\nfor person in q:\n    if person == 'M':\n        num_men += 1\n    else:\n        num_women += 1\n\n    if abs(num_men - num_women) > x:\n        break\n    else:\n        max_people += 1\n\nprint(max_people)\n", "\n\nX = int(input())\nqueue = input()\nnum_M = 0\nnum_W = 0\nmax_people = 0\n\nfor person in queue:\n    if person == 'M':\n        num_M += 1\n    else:\n        num_W += 1\n\n    if abs(num_M - num_W) > X:\n        break\n    else:\n        max_people += 1\n\nprint(max_people)\n", "\n\ndef main():\n    # read input\n    X = int(input())\n    queue = list(input())\n\n    # find the number of people we can let in the club\n    num_men = 0\n    num_women = 0\n    num_people = 0\n    for person in queue:\n        if person == 'M':\n            num_men += 1\n        else:\n            num_women += 1\n        if abs(num_men - num_women) > X:\n            break\n        num_people += 1\n\n    # output result\n    print(num_people)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n\ndef main():\n    # read inputs\n    X = int(input())\n    queue = input()\n\n    # find the number of people we can let in \n    num_men = 0\n    num_women = 0\n    num_people = 0\n    for person in queue:\n        if person == 'M':\n            num_men += 1\n        else:\n            num_women += 1\n        if abs(num_men - num_women) > X:\n            break\n        num_people += 1\n\n    # output result\n    print(num_people)\n\nif __name__ == \"__main__\":\n    main()\n", "def main():\n    # parse input\n    max_diff = int(input())\n    queue = input()\n    # count the number of men and women in the queue\n    men = queue.count('M')\n    women = queue.count('W')\n    # print the minimum between the number of men and women in the queue\n    # since that's the maximum number of people that can be let in\n    # without exceeding the maximum difference\n    print(min(men, women))\n\nif __name__ == \"__main__\":\n    main()\n", "x = int(input())\ngenders = input()\n\nwomen = 0\nmen = 0\ntotal = 0\n\nfor gender in genders:\n    if gender == 'W':\n        women += 1\n    else:\n        men += 1\n    if abs(men - women) <= x:\n        total += 1\n    else:\n        break\n\nprint(total)\n", "\n\ndef main():\n    x = int(input())\n    y = int(input())\n    z = int(input())\n    n = int(input())\n    print([[i, j, k] for i in range(x+1) for j in range(y+1) for k in range(z+1) if i + j + k != n])\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef get_input():\n    X = int(input())\n    line = input()\n    return X, line.split()\n\ndef process_data(X, data):\n    counter = 0\n    for i in range(len(data)):\n        if data[i] == '0':\n            counter += 1\n    return counter\n\ndef print_data(num_zeros):\n    print(num_zeros)\n\nX, data = get_input()\nnum_zeros = process_data(X, data)\nprint_data(num_zeros)\n", "\n\ndef main():\n    max_diff = int(input())\n    queue = input()\n    max_people = 0\n    w = 0\n    m = 0\n    for person in queue:\n        if person == 'W':\n            w += 1\n        elif person == 'M':\n            m += 1\n        else:\n            break\n        max_people += 1\n    print(max_people)\n\nmain()\n", "\nX = int(input())\nline = input()\n\nwomen = men = 0 # \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0436\u0435\u043d\u0449\u0438\u043d \u0438 \u043c\u0443\u0436\u0447\u0438\u043d\n\nfor person in line: # \u041f\u0440\u043e\u0445\u043e\u0434\u0438\u043c \u043f\u043e \u0432\u0441\u0435\u043c \u043b\u044e\u0434\u044f\u043c\n    if person == 'W':\n        women += 1\n    else:\n        men += 1\n\n    if abs(women - men) > X: # \u0415\u0441\u043b\u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0436\u0435\u043d\u0449\u0438\u043d \u0438 \u043c\u0443\u0436\u0447\u0438\u043d \u043e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u0441\u044f \u0431\u043e\u043b\u044c\u0448\u0435 \u0447\u0435\u043c \u043d\u0430 X, \u0442\u043e \u0432\u044b\u0445\u043e\u0434\u0438\u043c\n        break\n\nprint(women + men) # \u0412\u044b\u0432\u043e\u0434\u0438\u043c \u0441\u0443\u043c\u043c\u0443 \u0436\u0435\u043d\u0449\u0438\u043d \u0438 \u043c\u0443\u0436\u0447\u0438\u043d\n", "\ndef main():\n    n=int(input())\n    a=list(map(int,input().split()))\n    b=list(map(int,input().split()))\n    c=0\n    for i in range(n):\n        if(a[i]==b[i]):\n            c+=1\n    print(c)\nmain()\n", "# \u0417\u0430\u0434\u0430\u0447\u0430 \u043d\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435: \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u043c\u0443 \u0437\u043d\u0430\u043a\u0443\n# \u0414\u0430\u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b, \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u044e\u0449\u0430\u044f\u0441\u044f \u0447\u0438\u0441\u043b\u043e\u043c 0. \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u0435, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u044d\u0442\u043e\u0439 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438,\n# \u0440\u0430\u0432\u043d\u044b \u0435\u0435 \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0435\u043c\u0443 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0443.\n# Sample Input: 1 7 9 0\n# Sample Output: 1\n\nlist_of_nums = []\n\nwhile True:\n    num = int(input())\n    if num == 0:\n        break\n    list_of_nums.append(num)\n\nprint(list_of_nums.count(max(list_of_nums)))\n", "\n\nx = int(input())\ns = input()\n\nw = 0\nm = 0\ni = 0\n\nfor c in s:\n    if c == 'W':\n        w += 1\n    else:\n        m += 1\n    if abs(w - m) > x:\n        break\n    i += 1\n\nprint(i)\n", "\nn = int(input())\nl = list(map(int, input().split()))\n\nx = int(input())\n\na = 0\nb = 0\nc = 0\n\nfor i in range(n):\n    if l[i] == x:\n        a = i\n        break\n\nfor i in range(n - 1, -1, -1):\n    if l[i] == x:\n        b = i\n        break\n\nif a == b:\n    c = a + 1\nelse:\n    c = b - a + 1\n\nprint(c)\n", "X = int(input())\nqueue = input()\n\nnum_men = 0\nnum_women = 0\nmax_people = 0\n\nfor character in queue:\n    if character == 'M':\n        num_men += 1\n    else:\n        num_women += 1\n\n    if abs(num_men - num_women) > X:\n        break\n    if abs(num_men - num_women) <= X:\n        max_people += 1\n\nprint(max_people)\n", "\nX = int(input())\nline = input()\n\nwomen = men = 0\n\nfor person in line:\n    if person == 'W':\n        women += 1\n    else:\n        men += 1\n\n    if abs(women - men) > X:\n        break\n\nprint(women + men)\n", "\n\ndef main():\n    # read input\n    X = int(input())\n    queue = input().strip()\n\n    # find the number of people we can let in the club\n    num_men = 0\n    num_women = 0\n    num_people = 0\n    for person in queue:\n        if person == 'M':\n            num_men += 1\n        else:\n            num_women += 1\n        if abs(num_men - num_women) > X:\n            break\n        num_people += 1\n\n    # output result\n    print(num_people)\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    max_diff = int(input())\n    queue = list(input())\n    max_people = 0\n    w = 0\n    m = 0\n    for i in range(len(queue)):\n        if queue[i] == 'W':\n            w += 1\n        if queue[i] == 'M':\n            m += 1\n        if abs(w - m) > max_diff:\n            break\n        max_people += 1\n    print(max_people)\n\n\nif __name__ == '__main__':\n    main()\n", "\nx = int(input())\ns = input()\n\nw = 0\nm = 0\ni = 0\n\nfor c in s:\n    if c == 'W':\n        w += 1\n    else:\n        m += 1\n    if abs(w - m) > x:\n        break\n    i += 1\n\nprint(i)\n", "X = int(input())\nqueue = input()\n\nnum_men = 0\nnum_women = 0\nmax_people = 0\n\nfor person in queue:\n    if person == 'M':\n        num_men += 1\n    else:\n        num_women += 1\n\n    if abs(num_men - num_women) > X:\n        break\n    else:\n        max_people += 1\n\nprint(max_people)\n", "\ndef get_input():\n    x = int(input())\n    return x\n\ndef process_data(x):\n    if x == 0:\n        return 1\n    else:\n        return 2\n\ndef print_data(result):\n    print(result)\n\nX, line = get_input()\nnum_people = process_data(X, line)\nprint_data(num_people)\n", "\n\nn = int(input())  # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435\nl = list(map(int, input().split()))\n\nx = int(input())  # \u0447\u0438\u0441\u043b\u043e, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0438\u0449\u0435\u043c \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435\n\na = 0  # \u043f\u0435\u0440\u0432\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441 \u0447\u0438\u0441\u043b\u0430\nb = 0  # \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u0438\u043d\u0434\u0435\u043a\u0441 \u0447\u0438\u0441\u043b\u0430\nc = 0  # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0447\u0438\u0441\u0435\u043b \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435\n\nfor i in range(n):  # \u0438\u0449\u0435\u043c \u043f\u0435\u0440\u0432\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441 \u0447\u0438\u0441\u043b\u0430\n    if l[i] == x:\n        a = i\n        break\n\nfor i in range(n - 1, -1, -1):  # \u0438\u0449\u0435\u043c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u0438\u043d\u0434\u0435\u043a\u0441 \u0447\u0438\u0441\u043b\u0430\n    if l[i] == x:\n        b = i\n        break\n\nif a == b:  # \u0435\u0441\u043b\u0438 \u0447\u0438\u0441\u043b\u043e \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u0442\u0441\u044f \u043e\u0434\u0438\u043d \u0440\u0430\u0437\n    c = a + 1\nelse:  # \u0435\u0441\u043b\u0438 \u0447\u0438\u0441\u043b\u043e \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u0442\u0441\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0437\n    c = b - a + 1\n\nprint(c)\n", "\nn=int(input())\nif(n%2==0):\n    print(n//2)\nelse:\n    print(n)\n", "\n\nn = int(input())\nl = list(map(int, input().split()))\n\nx = int(input())\n\na = -1\nb = -1\nc = -1\n\nfor i in range(n-1):\n    if l[i] == x:\n        a = i\n        break\n\nfor i in range(n - 1, -1):\n    if l[i] == x:\n        b = i\n        break\n\nif a == b:\n    c = a + 1\nelse:\n    c = b - a + 1\n\nprint(c)\n", "\n\ndef get_input(file):\n    X = int(file.readline())\n    line = file.readline()\n    return int(X), line\n\ndef process_input(X, line, file):\n    if X == 0:\n        return len(line)\n    else:\n        return max(X+1, len(line)-X)\n\ndef print_output(max_length, file):\n    file.write(str(max_length))\n\nX, line = get_input()\nmax_length = process_input(X, line)\nprint_output(max_length)\n", "\n\ndef main():\n    # parse input \n    max_diff = int(input())\n    queue = input()\n    # count the number of men and women in the queue\n    men = queue.count('M')\n    women = queue.count('W')\n    # print the minimum between the number of men and women in the queue\n    # since that's the maximum number of people that can be let in\n    # without exceeding the maximum difference\n    print(min(men, women))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # read inputs\n    X = int(input())\n    queue = input()\n\n    # find the number of people we can let in\n\n    num_men = 0\n    num_women = 0\n    num_people = 0\n    for person in queue:\n        if person == 'M':\n\n            num_men += 1\n        else:\n            num_women += 1\n        if abs(num_men - num_women) > X:\n            break\n\n        num_people += 1\n\n    # output result\n    print(num_people)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n\ndef max_people(queue, max_difference):\n    w = 0\n    m = 0\n    max_people = 0\n    for person in queue:\n        if person == 'W':\n            w += 1\n        if person == 'M':\n            m += 1\n        if abs(w - m) > max_difference:\n            break\n        max_people += 1\n    return max_people\n\n\ndef main():\n    max_difference = int(input())\n    queue = input()\n    print(max_people(queue, max_difference))\n\n\nmain()\n", "\n\ndef main():\n    # parse input\n    max_diff = int(input())\n    queue = input()\n    # count the number of men and women in the queue\n    men = queue.count('M')\n    women = queue.count('W')\n    # print the minimum of the number of men and women in the queue\n    # since that's the minimum number of people that can be let in\n    # without exceeding the maximum difference\n    print(min(men, women))\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/python3\n\ndef main():\n    # read inputs\n    X = int(input())\n    queue = input()\n\n    # find the number of people we can let in\n    num_men = 0\n    num_women = 0\n    num_people = 0\n    for person in queue:\n        if person == 'M':\n            num_men += 1\n        else:\n            num_women += 1\n        if abs(num_men - num_women) > X:\n            break\n        num_people += 1\n\n    # output result\n    print(num_people)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef get_input():\n    x = int(input())\n    line = input().strip()\n    return x, line\n\ndef process_input(x, line):\n    if x == 0:\n        return len(line)\n    else:\n        return max(x+1, len(line)-x)\n\ndef print_output(max_length):\n    print(max_length)\n\nx, line = get_input()\nmax_length = process_input(x, line)\nprint_output(max_length)\n", "# https://codeforces.com/problemset/problem/1294/A\n\nT = int(input())\n\nfor _ in range(T):\n    A, B, C, N = map(int, input().split())\n\n    if N % 3 == 0:\n        print('YES')\n    else:\n        print('NO')\n", "\ndef main():\n    # read input\n    X = int(input())\n    queue = input()\n\n    # find the number of people we can let in the club\n    num_men = 0\n    num_women = 0\n    num_people = 0\n    for person in queue:\n        if person == 'M':\n            num_men += 1\n        else:\n            num_women += 1\n        if abs(num_men - num_women) > X:\n            break\n        num_people += 1\n\n    # output result\n    print(num_people)\n\nif __name__ == \"__main__\":\n    main()\n"]