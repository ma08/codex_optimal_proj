2022-04-13 02:32:29.284900 num operations 2
2022-04-13 02:32:29.284909 size on input set 1
2022-04-13 02:32:31.657590 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # Find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # Print results\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # Find similar keywords.\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # Print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    # read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649817149,
  "object": "edit"
}
2022-04-13 02:32:31.657830 fix spelling mistakes 3 ["\n\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # Find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # Print results\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # Find similar keywords.\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # Print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 02:32:31.657865 size on output set 3
2022-04-13 02:32:31.657872 size on input set 3
2022-04-13 02:32:34.661736 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ''))\n    # Find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # Print results\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ''))\n    # Find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # Print results\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "def remove_hyphens(keywords):\n    for i in range(len(keywords)):\n        keywords[i] = keywords[i].lower().replace('-', ' ')\n    return keywords\n\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword)\n    keywords = remove_hyphens(keywords)\n    # Find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # Print results\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649817151,
  "object": "edit"
}
2022-04-13 02:32:34.661914 fix syntax errors 3 ["\n\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ''))\n    # Find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # Print results\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ''))\n    # Find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # Print results\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n", "def remove_hyphens(keywords):\n    for i in range(len(keywords)):\n        keywords[i] = keywords[i].lower().replace('-', ' ')\n    return keywords\n\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword)\n    keywords = remove_hyphens(keywords)\n    # Find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # Print results\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 02:32:36.830352 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # print result\n    print(n - len(similar)) \n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ''))\n    # find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    # read input\n    n = int(raw_input())\n    keywords = []\n    for i in range(n):\n        keyword = raw_input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649817154,
  "object": "edit"
}
2022-04-13 02:32:36.830627 fix syntax errors 3 ["\n\ndef main():\n    # read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # print result\n    print(n - len(similar)) \n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ''))\n    # find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # read input\n    n = int(raw_input())\n    keywords = []\n    for i in range(n):\n        keyword = raw_input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 02:32:41.586241 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "def find_similar_keywords(keywords):\n    n = len(keywords)\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    return similar\n\n\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # Find similar keywords\n    similar = find_similar_keywords(keywords)\n    # Print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # Read input\n    n = int(input())\n    keywords = set()\n    for i in range(n):\n        keyword = input()\n        keywords.add(keyword.lower().replace('-', ' '))\n    # Find similar keywords.\n    # Print result\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    # read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # find similar keywords.\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649817156,
  "object": "edit"
}
2022-04-13 02:32:41.586422 fix syntax errors 3 ["def find_similar_keywords(keywords):\n    n = len(keywords)\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    return similar\n\n\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # Find similar keywords\n    similar = find_similar_keywords(keywords)\n    # Print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Read input\n    n = int(input())\n    keywords = set()\n    for i in range(n):\n        keyword = input()\n        keywords.add(keyword.lower().replace('-', ' '))\n    # Find similar keywords.\n    # Print result\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # find similar keywords.\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 02:32:41.586455 size on output set 8
2022-04-13 02:32:41.586479 num operations 2
2022-04-13 02:32:41.586485 size on input set 1
2022-04-13 02:32:48.481403 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        key_set.add(key)\n    print(len(key_set)) \n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n# import sys\n\n# def main():\n#     n = int(sys.stdin.readline().strip())\n#     key_set = set()\n#     for i in range(n):\n#         key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n#         key_set.add(key)\n#     print(len(key_set))\n\n# if __name__ == \"__main__\":\n#     main()\n\nimport os\n\ndef main(path):\n    if os.path.exists(path):\n        print(os.getcwd())\n        return\n    else:\n        print(os.getcwd())\n        os.mkdir(path)\n        return\n\nif __name__ == '__main__':\n    main(\"/Users/wuxiaoxia/Desktop/Python/Python/test\")\n"
    }
  ],
  "created": 1649817161,
  "object": "edit"
}
2022-04-13 02:32:48.481586 fix spelling mistakes 3 ['import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace("-", " ")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace("-", " ")\n        key_set.add(key)\n    print(len(key_set)) \n\nif __name__ == "__main__":\n    main()\n', '\n\n# import sys\n\n# def main():\n#     n = int(sys.stdin.readline().strip())\n#     key_set = set()\n#     for i in range(n):\n#         key = sys.stdin.readline().strip().lower().replace("-", " ")\n#         key_set.add(key)\n#     print(len(key_set))\n\n# if __name__ == "__main__":\n#     main()\n\nimport os\n\ndef main(path):\n    if os.path.exists(path):\n        print(os.getcwd())\n        return\n    else:\n        print(os.getcwd())\n        os.mkdir(path)\n        return\n\nif __name__ == \'__main__\':\n    main("/Users/wuxiaoxia/Desktop/Python/Python/test")\n']
2022-04-13 02:32:48.481614 size on output set 3
2022-04-13 02:32:48.481621 size on input set 3
2022-04-13 02:32:54.309655 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n    main()\n\nimport os\n\ndef main(path):\n    if os.path.exists(path):\n        print(os.getcwd())\n        return\n    else:\n        print(os.getcwd())\n        os.mkdir(path)\n        return\n\nif __name__ == '__main__':\n    main(\"/Users/wuxiaoxia/Desktop/Python/Python/test\")\n"
    },
    {
      "index": 1,
      "text": "\n\n# import sys\n\n# def main():\n#     n = int(sys.stdin.readline().strip())\n#     key_set = set()\n#     for i in range(n):\n#         key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n#         key_set.add(key)\n#     print(len(key_set))\n\n# if __name__ == \"__main__\":\n#     main()\n\nimport os\n\ndef main(path):\n    if not os.path.exists(path):\n        os.makedirs(path)\n    print(os.getcwd())\n\nif __name__ == '__main__':\n    main(\"/Users/wuxiaoxia/Desktop/Python/Python/test/test1/test2\")\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n    main()\n\nimport os\n\ndef main(path):\n    if os.path.exists(path):\n        print(os.getcwd())\n        return\n    else:\n        print(os.getcwd())\n        os.mkdir(path)\n        return\n\nif __name__ == '__main__':\n    main(\"/Users/wuxiaoxia/Desktop/Python/Python/test\")\n"
    }
  ],
  "created": 1649817168,
  "object": "edit"
}
2022-04-13 02:32:54.309919 fix syntax errors 3 ['\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace("-", " ")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == "__main__":\n    main()\n\nimport os\n\ndef main(path):\n    if os.path.exists(path):\n        print(os.getcwd())\n        return\n    else:\n        print(os.getcwd())\n        os.mkdir(path)\n        return\n\nif __name__ == \'__main__\':\n    main("/Users/wuxiaoxia/Desktop/Python/Python/test")\n', '\n\n# import sys\n\n# def main():\n#     n = int(sys.stdin.readline().strip())\n#     key_set = set()\n#     for i in range(n):\n#         key = sys.stdin.readline().strip().lower().replace("-", " ")\n#         key_set.add(key)\n#     print(len(key_set))\n\n# if __name__ == "__main__":\n#     main()\n\nimport os\n\ndef main(path):\n    if not os.path.exists(path):\n        os.makedirs(path)\n    print(os.getcwd())\n\nif __name__ == \'__main__\':\n    main("/Users/wuxiaoxia/Desktop/Python/Python/test/test1/test2")\n', '\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace("-", " ")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == "__main__":\n    main()\n\nimport os\n\ndef main(path):\n    if os.path.exists(path):\n        print(os.getcwd())\n        return\n    else:\n        print(os.getcwd())\n        os.mkdir(path)\n        return\n\nif __name__ == \'__main__\':\n    main("/Users/wuxiaoxia/Desktop/Python/Python/test")\n']
2022-04-13 02:32:56.163131 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        key_set.add(key)\n    print(len(key_set)) \n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649817174,
  "object": "edit"
}
2022-04-13 02:32:56.163299 fix syntax errors 3 ['\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace("-", " ")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace("-", " ")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace("-", " ")\n        key_set.add(key)\n    print(len(key_set)) \n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 02:32:59.248396 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \").split()\n        key.sort()\n        key = \" \".join(key)\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())  # read the number of keys\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")  # read the key\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \"\").split()\n        key = \" \".join(sorted(key))\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649817176,
  "object": "edit"
}
2022-04-13 02:32:59.248570 fix syntax errors 3 ['import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace("-", " ").split()\n        key.sort()\n        key = " ".join(key)\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())  # read the number of keys\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace("-", " ")  # read the key\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace("-", "").split()\n        key = " ".join(sorted(key))\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 02:32:59.248593 size on output set 7
2022-04-13 02:32:59.248602 num operations 2
2022-04-13 02:32:59.248607 size on input set 1
2022-04-13 02:33:01.428388 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip().replace(' ', ''))\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n#\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649817179,
  "object": "edit"
}
2022-04-13 02:33:01.428559 fix spelling mistakes 3 ["\n\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip().replace(' ', ''))\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "\n#\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 02:33:01.428585 size on output set 3
2022-04-13 02:33:01.428591 size on input set 3
2022-04-13 02:33:03.596613 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip().replace(' ', '-'))\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649817181,
  "object": "edit"
}
2022-04-13 02:33:03.596849 fix syntax errors 3 ["import sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip().replace(' ', '-'))\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 02:33:05.771722 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n# python3\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines():\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649817183,
  "object": "edit"
}
2022-04-13 02:33:05.771888 fix syntax errors 3 ["import sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "\n# python3\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines():\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 02:33:07.938605 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip().replace(' ', ''))\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip().replace(' ', ''))\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip().replace(' ', '-'))\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649817185,
  "object": "edit"
}
2022-04-13 02:33:07.938783 fix syntax errors 3 ["\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip().replace(' ', ''))\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip().replace(' ', ''))\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip().replace(' ', '-'))\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 02:33:07.938811 size on output set 7
2022-04-13 02:33:07.938823 num operations 2
2022-04-13 02:33:07.938829 size on input set 1
2022-04-13 02:33:09.324712 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace(\"-\", \" \")\n    keywords.add(keyword)\nprint(len(keywords))\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace(\"-\", \" \")\n    keywords.add(keyword)\nprint(len(keywords))\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace(\"-\", \" \")\n    keywords.add(keyword)\nprint(len(keywords))\n"
    }
  ],
  "created": 1649817187,
  "object": "edit"
}
2022-04-13 02:33:09.324886 fix spelling mistakes 3 ['n = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace("-", " ")\n    keywords.add(keyword)\nprint(len(keywords))\n', 'n = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace("-", " ")\n    keywords.add(keyword)\nprint(len(keywords))\n', '\nn = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace("-", " ")\n    keywords.add(keyword)\nprint(len(keywords))\n']
2022-04-13 02:33:09.324910 size on output set 2
2022-04-13 02:33:09.324916 size on input set 2
2022-04-13 02:33:26.073774 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# n = int(input())\n# keywords = set()\n# for i in range(n):\n#     keyword = input().lower().replace(\"-\", \" \")\n#     keywords.add(keyword)\n# print(len(keywords))\n\n# import requests\n# from bs4 import BeautifulSoup\n#\n#\n# def get_html(url):\n#     r = requests.get(url)\n#     return r.text\n#\n#\n# def get_data(html):\n#     soup = BeautifulSoup(html, 'lxml')\n#     h1 = soup.find('div', id='home-welcome').find('h1').text\n#     return h1\n#\n#\n# def main():\n#     url = 'https://www.python.org/'\n#     print(get_data(get_html(url)))\n#\n#\n# if __name__ == '__main__':\n#     main()\n\n\nimport requests\nfrom bs4 import BeautifulSoup\n\n\ndef get_html(url):\n    r = requests.get(url)\n    return r.text\n\n\ndef get_total_pages(html):\n    soup = BeautifulSoup(html, 'lxml')\n    pages = soup.find('div', class_='pagination-pages').find_all('a', class_='pagination-page')[-1].get('href')\n    total_pages = pages.split('=')[1].split('&')[0]\n    return int(total_pages)\n\n\ndef main():\n    url = 'https://www.avito.ru/moskva/tovary_dlya_kompyutera/nastolnye_igrovye_kompyutery?p=1&q=%D0%B8%D0%B3%D1%80%D0%BE%D0%B2%D1%8B%D0%B9+%D0%BA%D0%BE%D0%BC%D0%BF%D1%8C%D1%8E%D1%82%D0%B5%D1%80'\n    base_url = 'https://www.avito.ru/moskva/tovary_dlya_kompyutera/nastolnye_igrovye_kompyutery?'\n    page_part = 'p='\n    query_part = '&q=%D0%B8%D0%B3%D1%80%D0%BE%D0%B2%D1%8B%D0%B9+%D0%BA%D0%BE%D0%BC%D0%BF%D1%8C%D1%8E%D1%82%D0%B5%D1%80'\n    total_pages = get_total_pages(get_html(url))\n    for i in range(1, 3):\n        url_gen = base_url + page_part + str(i) + query_part\n        print(url_gen)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower()\n    keyword = keyword.replace(\"-\", \" \")\n    keywords.add(keyword)\nprint(len(keywords))\n"
    },
    {
      "index": 2,
      "text": "n = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace(\"-\", \" \").split()\n    keywords.add(keyword)\nprint(len(keywords))\n"
    }
  ],
  "created": 1649817189,
  "object": "edit"
}
2022-04-13 02:33:26.074014 fix syntax errors 3 ['# n = int(input())\n# keywords = set()\n# for i in range(n):\n#     keyword = input().lower().replace("-", " ")\n#     keywords.add(keyword)\n# print(len(keywords))\n\n# import requests\n# from bs4 import BeautifulSoup\n#\n#\n# def get_html(url):\n#     r = requests.get(url)\n#     return r.text\n#\n#\n# def get_data(html):\n#     soup = BeautifulSoup(html, \'lxml\')\n#     h1 = soup.find(\'div\', id=\'home-welcome\').find(\'h1\').text\n#     return h1\n#\n#\n# def main():\n#     url = \'https://www.python.org/\'\n#     print(get_data(get_html(url)))\n#\n#\n# if __name__ == \'__main__\':\n#     main()\n\n\nimport requests\nfrom bs4 import BeautifulSoup\n\n\ndef get_html(url):\n    r = requests.get(url)\n    return r.text\n\n\ndef get_total_pages(html):\n    soup = BeautifulSoup(html, \'lxml\')\n    pages = soup.find(\'div\', class_=\'pagination-pages\').find_all(\'a\', class_=\'pagination-page\')[-1].get(\'href\')\n    total_pages = pages.split(\'=\')[1].split(\'&\')[0]\n    return int(total_pages)\n\n\ndef main():\n    url = \'https://www.avito.ru/moskva/tovary_dlya_kompyutera/nastolnye_igrovye_kompyutery?p=1&q=%D0%B8%D0%B3%D1%80%D0%BE%D0%B2%D1%8B%D0%B9+%D0%BA%D0%BE%D0%BC%D0%BF%D1%8C%D1%8E%D1%82%D0%B5%D1%80\'\n    base_url = \'https://www.avito.ru/moskva/tovary_dlya_kompyutera/nastolnye_igrovye_kompyutery?\'\n    page_part = \'p=\'\n    query_part = \'&q=%D0%B8%D0%B3%D1%80%D0%BE%D0%B2%D1%8B%D0%B9+%D0%BA%D0%BE%D0%BC%D0%BF%D1%8C%D1%8E%D1%82%D0%B5%D1%80\'\n    total_pages = get_total_pages(get_html(url))\n    for i in range(1, 3):\n        url_gen = base_url + page_part + str(i) + query_part\n        print(url_gen)\n\n\nif __name__ == \'__main__\':\n    main()\n', 'n = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower()\n    keyword = keyword.replace("-", " ")\n    keywords.add(keyword)\nprint(len(keywords))\n', 'n = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace("-", " ").split()\n    keywords.add(keyword)\nprint(len(keywords))\n']
2022-04-13 02:33:28.847620 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace(\"-\", \" \")\n    keywords.add(keyword)\nprint(len(keywords))\n"
    },
    {
      "index": 1,
      "text": "# read the number of lines\nn = int(input())\n# create a set to store keywords\nkeywords = set()\n# read all lines\nfor i in range(n):\n    # read a keyword and convert it to lowercase\n    keyword = input().lower().replace(\"-\", \" \")\n    keywords.add(keyword)\nprint(len(keywords))\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace(\"-\", \" \")\n    keywords.add(keyword)\nprint(len(keywords))\n\n# fix syntax errors\n"
    }
  ],
  "created": 1649817206,
  "object": "edit"
}
2022-04-13 02:33:28.847832 fix syntax errors 3 ['n = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace("-", " ")\n    keywords.add(keyword)\nprint(len(keywords))\n', '# read the number of lines\nn = int(input())\n# create a set to store keywords\nkeywords = set()\n# read all lines\nfor i in range(n):\n    # read a keyword and convert it to lowercase\n    keyword = input().lower().replace("-", " ")\n    keywords.add(keyword)\nprint(len(keywords))\n', '\nn = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace("-", " ")\n    keywords.add(keyword)\nprint(len(keywords))\n\n# fix syntax errors\n']
2022-04-13 02:33:28.847862 size on output set 6
2022-04-13 02:33:28.847878 num operations 2
2022-04-13 02:33:28.847883 size on input set 1
2022-04-13 02:33:33.967316 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#%%\n\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n\n#%%\n\n#%%\n\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n\n#%%\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n"
    }
  ],
  "created": 1649817208,
  "object": "edit"
}
2022-04-13 02:33:33.967488 fix spelling mistakes 3 ["\n\n#%%\n\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n\n#%%\n\n#%%\n\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n", "\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n\n#%%\n", "\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n"]
2022-04-13 02:33:33.967585 size on output set 3
2022-04-13 02:33:33.967592 size on input set 3
2022-04-13 02:33:37.284242 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords) - set(['']))\n    print(len(keywords))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' ') and keywords[i] != '':\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    print(len(keywords))\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "def main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            # print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                # print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649817214,
  "object": "edit"
}
2022-04-13 02:33:37.284418 fix syntax errors 3 ["\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords) - set(['']))\n    print(len(keywords))\n\nmain()\n", "\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' ') and keywords[i] != '':\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    print(len(keywords))\n\nmain()\n", "def main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            # print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                # print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-13 02:33:41.076528 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))  # remove duplicates\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))  # remove duplicates\n    keywords.remove('')  # remove empty strings\n    print(len(keywords))\n\nmain()\n\n#%%\n"
    }
  ],
  "created": 1649817217,
  "object": "edit"
}
2022-04-13 02:33:41.076691 fix syntax errors 3 ["\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n", "\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n", "\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))  # remove duplicates\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))  # remove duplicates\n    keywords.remove('')  # remove empty strings\n    print(len(keywords))\n\nmain()\n\n#%%\n"]
2022-04-13 02:33:46.022411 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#%%\n\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    try:\n        keywords.remove('')\n    except ValueError:\n        pass\n    print(len(keywords))\n\nmain()\n\n#%%\n\n#%%\n\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    try:\n        keywords.remove('')\n    except ValueError:\n        pass\n    print(len(keywords))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\n# %%\n\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\n\n# %%\n\n# %%\n\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n"
    },
    {
      "index": 2,
      "text": "\n\n#%%\n\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n"
    }
  ],
  "created": 1649817221,
  "object": "edit"
}
2022-04-13 02:33:46.022674 fix syntax errors 3 ["\n\n#%%\n\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    try:\n        keywords.remove('')\n    except ValueError:\n        pass\n    print(len(keywords))\n\nmain()\n\n#%%\n\n#%%\n\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    try:\n        keywords.remove('')\n    except ValueError:\n        pass\n    print(len(keywords))\n\nmain()\n", "\n\n# %%\n\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\n\n# %%\n\n# %%\n\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n", "\n\n#%%\n\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n"]
2022-04-13 02:33:46.022719 size on output set 8
2022-04-13 02:33:46.022730 num operations 2
2022-04-13 02:33:46.022736 size on input set 1
2022-04-13 02:33:49.604709 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "import sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_words = []\n    for i in range(n):\n        key_word = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        if key_word not in key_words:\n            key_words.append(key_word)\n    print(len(key_words))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649817226,
  "object": "edit"
}
2022-04-13 02:33:49.604875 fix spelling mistakes 3 ['import sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace("-", " ")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace("-", " ")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_words = []\n    for i in range(n):\n        key_word = sys.stdin.readline().strip().lower().replace("-", " ")\n        if key_word not in key_words:\n            key_words.append(key_word)\n    print(len(key_words))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 02:33:49.604902 size on output set 3
2022-04-13 02:33:49.604908 size on input set 3
2022-04-13 02:33:51.803269 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = set()\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        keywords.add(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649817229,
  "object": "edit"
}
2022-04-13 02:33:51.803442 fix syntax errors 3 ['\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = set()\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace("-", " ")\n        keywords.add(keyword)\n    print(len(keywords))\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace("-", " ")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == "__main__":\n    main()\n', 'import sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace("-", " ")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 02:33:53.910563 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_words = []\n    for i in range(n):\n        key_word = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        if key_word not in key_words:\n            key_words.append(key_word)\n    print(len(key_words))\n\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_words = []\n    for i in range(n):\n        key_word = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        if key_word not in key_words:\n            key_words.append(key_word)\n    print(len(key_words))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_words = []\n    for i in range(n):\n        key_word = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        if key_word not in key_words:\n            key_words.append(key_word)\n    print(len(key_words))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649817231,
  "object": "edit"
}
2022-04-13 02:33:53.910794 fix syntax errors 3 ['\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_words = []\n    for i in range(n):\n        key_word = sys.stdin.readline().strip().lower().replace("-", " ")\n        if key_word not in key_words:\n            key_words.append(key_word)\n    print(len(key_words))\n\n\nmain()\n', '\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_words = []\n    for i in range(n):\n        key_word = sys.stdin.readline().strip().lower().replace("-", " ")\n        if key_word not in key_words:\n            key_words.append(key_word)\n    print(len(key_words))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_words = []\n    for i in range(n):\n        key_word = sys.stdin.readline().strip().lower().replace("-", " ")\n        if key_word not in key_words:\n            key_words.append(key_word)\n    print(len(key_words))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 02:33:55.724117 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "#! /usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649817233,
  "object": "edit"
}
2022-04-13 02:33:55.724413 fix syntax errors 3 ['import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace("-", " ")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == "__main__":\n    main()\n', '#! /usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace("-", " ")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace("-", " ")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 02:33:55.724442 size on output set 7
2022-04-13 02:33:55.724453 num operations 2
2022-04-13 02:33:55.724458 size on input set 1
2022-04-13 02:33:57.770833 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace(\"-\", \" \"))\n    print(len(set(keywords)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace(\"-\", \" \"))  # replace - with space\n    print(len(set(keywords)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace(\"-\", \" \"))\n    print(len(set(keywords)))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649817235,
  "object": "edit"
}
2022-04-13 02:33:57.771031 fix spelling mistakes 3 ['\ndef main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace("-", " "))\n    print(len(set(keywords)))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace("-", " "))  # replace - with space\n    print(len(set(keywords)))\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace("-", " "))\n    print(len(set(keywords)))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 02:33:57.771067 size on output set 2
2022-04-13 02:33:57.771076 size on input set 2
2022-04-13 02:33:59.833484 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace(\"-\", \" \"))\n    print(len(set(keywords)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace(\"-\", \" \"))\n    print(len(set(keywords)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n\ndef main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace(\"-\", \" \"))  # replace - with space\n    print(len(set(keywords)))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649817237,
  "object": "edit"
}
2022-04-13 02:33:59.833664 fix syntax errors 3 ['\n\ndef main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace("-", " "))\n    print(len(set(keywords)))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace("-", " "))\n    print(len(set(keywords)))\n\nif __name__ == "__main__":\n    main()\n', '\n\n\ndef main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace("-", " "))  # replace - with space\n    print(len(set(keywords)))\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 02:34:02.443464 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "def main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace(\"-\", \" \"))\n    print(len(set(keywords)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "def main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace(\"-\", \" \"))\n    print(len(set(keywords)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n = int(input())\n    keywords = [input().lower().replace(\"-\", \" \") for _ in range(n)]\n    print(len(set(keywords))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649817239,
  "object": "edit"
}
2022-04-13 02:34:02.443669 fix syntax errors 3 ['def main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace("-", " "))\n    print(len(set(keywords)))\n\nif __name__ == "__main__":\n    main()\n', 'def main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace("-", " "))\n    print(len(set(keywords)))\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    keywords = [input().lower().replace("-", " ") for _ in range(n)]\n    print(len(set(keywords))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 02:34:02.443773 size on output set 4
2022-04-13 02:34:02.443791 num operations 2
2022-04-13 02:34:02.443799 size on input set 1
2022-04-13 02:34:04.456863 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nkeywords = [input().lower().replace(\"-\", \" \") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nkeywords = [input().lower().replace(\"-\", \" \") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\nkeywords = [input().lower().replace(\"-\", \"\") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n"
    }
  ],
  "created": 1649817242,
  "object": "edit"
}
2022-04-13 02:34:04.457024 fix spelling mistakes 3 ['\nn = int(input())\nkeywords = [input().lower().replace("-", " ") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n', '\nn = int(input())\nkeywords = [input().lower().replace("-", " ") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n', '\n\nn = int(input())\nkeywords = [input().lower().replace("-", "") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n']
2022-04-13 02:34:04.457048 size on output set 2
2022-04-13 02:34:04.457053 size on input set 2
2022-04-13 02:34:05.840351 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nkeywords = [input().lower().replace(\"-\", \"\") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nkeywords = [input().lower().replace(\"-\", \"\") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nkeywords = [input().lower().replace(\"-\", \"\") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n"
    }
  ],
  "created": 1649817244,
  "object": "edit"
}
2022-04-13 02:34:05.840529 fix syntax errors 3 ['\nn = int(input())\nkeywords = [input().lower().replace("-", "") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n', '\nn = int(input())\nkeywords = [input().lower().replace("-", "") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n', '\nn = int(input())\nkeywords = [input().lower().replace("-", "") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n']
2022-04-13 02:34:07.987542 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nkeywords = [input().lower().replace('-', ' ') for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\nkeywords = [input().lower().replace(\"-\", \" \") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n"
    },
    {
      "index": 2,
      "text": "n = int(input())\nkeywords = [input().lower().replace(\"-\", \" \") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n"
    }
  ],
  "created": 1649817245,
  "object": "edit"
}
2022-04-13 02:34:07.987717 fix syntax errors 3 ["\nn = int(input())\nkeywords = [input().lower().replace('-', ' ') for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n", 'n = int(input())\nkeywords = [input().lower().replace("-", " ") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n', 'n = int(input())\nkeywords = [input().lower().replace("-", " ") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n']
2022-04-13 02:34:07.987742 size on output set 3
