["import sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n", "n = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace(\"-\", \" \").split()\n    keywords.add(keyword)\nprint(len(keywords))\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_words = []\n    for i in range(n):\n        key_word = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        if key_word not in key_words:\n            key_words.append(key_word)\n    print(len(key_words))\n\n\nmain()\n", "\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip().replace(' ', ''))\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ''))\n    # Find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # Print results\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n    main()\n\nimport os\n\ndef main(path):\n    if os.path.exists(path):\n        print(os.getcwd())\n        return\n    else:\n        print(os.getcwd())\n        os.mkdir(path)\n        return\n\nif __name__ == '__main__':\n    main(\"/Users/wuxiaoxia/Desktop/Python/Python/test\")\n", "\n\ndef main():\n    # read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # find similar keywords.\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n", "\n# python3\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines():\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ''))\n    # find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            # print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                # print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \"\").split()\n        key = \" \".join(sorted(key))\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip().replace(' ', '-'))\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "\n\n\ndef main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace(\"-\", \" \"))  # replace - with space\n    print(len(set(keywords)))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # Read input\n    n = int(input())\n    keywords = set()\n    for i in range(n):\n        keyword = input()\n        keywords.add(keyword.lower().replace('-', ' '))\n    # Find similar keywords.\n    # Print result\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_words = []\n    for i in range(n):\n        key_word = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        if key_word not in key_words:\n            key_words.append(key_word)\n    print(len(key_words))\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # read input\n    n = int(raw_input())\n    keywords = []\n    for i in range(n):\n        keyword = raw_input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace(\"-\", \" \"))\n    print(len(set(keywords)))\n\nif __name__ == \"__main__\":\n    main()\n", "def remove_hyphens(keywords):\n    for i in range(len(keywords)):\n        keywords[i] = keywords[i].lower().replace('-', ' ')\n    return keywords\n\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword)\n    keywords = remove_hyphens(keywords)\n    # Find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # Print results\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_words = []\n    for i in range(n):\n        key_word = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        if key_word not in key_words:\n            key_words.append(key_word)\n    print(len(key_words))\n\nif __name__ == \"__main__\":\n    main()\n", "def find_similar_keywords(keywords):\n    n = len(keywords)\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    return similar\n\n\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # Find similar keywords\n    similar = find_similar_keywords(keywords)\n    # Print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n", "n = int(input())\nkeywords = [input().lower().replace(\"-\", \" \") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n", "\n\n# import sys\n\n# def main():\n#     n = int(sys.stdin.readline().strip())\n#     key_set = set()\n#     for i in range(n):\n#         key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n#         key_set.add(key)\n#     print(len(key_set))\n\n# if __name__ == \"__main__\":\n#     main()\n\nimport os\n\ndef main(path):\n    if not os.path.exists(path):\n        os.makedirs(path)\n    print(os.getcwd())\n\nif __name__ == '__main__':\n    main(\"/Users/wuxiaoxia/Desktop/Python/Python/test/test1/test2\")\n", "\n\n#%%\n\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    try:\n        keywords.remove('')\n    except ValueError:\n        pass\n    print(len(keywords))\n\nmain()\n\n#%%\n\n#%%\n\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    try:\n        keywords.remove('')\n    except ValueError:\n        pass\n    print(len(keywords))\n\nmain()\n", "\nn = int(input())\nkeywords = [input().lower().replace('-', ' ') for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n", "\ndef main():\n    n = int(input())\n    keywords = [input().lower().replace(\"-\", \" \") for _ in range(n)]\n    print(len(set(keywords))\n\nif __name__ == \"__main__\":\n    main()\n", "def main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace(\"-\", \" \"))\n    print(len(set(keywords)))\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' ') and keywords[i] != '':\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    print(len(keywords))\n\nmain()\n", "n = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace(\"-\", \" \")\n    keywords.add(keyword)\nprint(len(keywords))\n", "\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = set()\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        keywords.add(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))  # remove duplicates\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))  # remove duplicates\n    keywords.remove('')  # remove empty strings\n    print(len(keywords))\n\nmain()\n\n#%%\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())  # read the number of keys\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")  # read the key\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "\nn = int(input())\nkeywords = [input().lower().replace(\"-\", \"\") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n", "\n\n# %%\n\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\n\n# %%\n\n# %%\n\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n", "\n\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip().replace(' ', '-'))\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # print result\n    print(n - len(similar)) \n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n    main()\n", "# n = int(input())\n# keywords = set()\n# for i in range(n):\n#     keyword = input().lower().replace(\"-\", \" \")\n#     keywords.add(keyword)\n# print(len(keywords))\n\n# import requests\n# from bs4 import BeautifulSoup\n#\n#\n# def get_html(url):\n#     r = requests.get(url)\n#     return r.text\n#\n#\n# def get_data(html):\n#     soup = BeautifulSoup(html, 'lxml')\n#     h1 = soup.find('div', id='home-welcome').find('h1').text\n#     return h1\n#\n#\n# def main():\n#     url = 'https://www.python.org/'\n#     print(get_data(get_html(url)))\n#\n#\n# if __name__ == '__main__':\n#     main()\n\n\nimport requests\nfrom bs4 import BeautifulSoup\n\n\ndef get_html(url):\n    r = requests.get(url)\n    return r.text\n\n\ndef get_total_pages(html):\n    soup = BeautifulSoup(html, 'lxml')\n    pages = soup.find('div', class_='pagination-pages').find_all('a', class_='pagination-page')[-1].get('href')\n    total_pages = pages.split('=')[1].split('&')[0]\n    return int(total_pages)\n\n\ndef main():\n    url = 'https://www.avito.ru/moskva/tovary_dlya_kompyutera/nastolnye_igrovye_kompyutery?p=1&q=%D0%B8%D0%B3%D1%80%D0%BE%D0%B2%D1%8B%D0%B9+%D0%BA%D0%BE%D0%BC%D0%BF%D1%8C%D1%8E%D1%82%D0%B5%D1%80'\n    base_url = 'https://www.avito.ru/moskva/tovary_dlya_kompyutera/nastolnye_igrovye_kompyutery?'\n    page_part = 'p='\n    query_part = '&q=%D0%B8%D0%B3%D1%80%D0%BE%D0%B2%D1%8B%D0%B9+%D0%BA%D0%BE%D0%BC%D0%BF%D1%8C%D1%8E%D1%82%D0%B5%D1%80'\n    total_pages = get_total_pages(get_html(url))\n    for i in range(1, 3):\n        url_gen = base_url + page_part + str(i) + query_part\n        print(url_gen)\n\n\nif __name__ == '__main__':\n    main()\n", "# read the number of lines\nn = int(input())\n# create a set to store keywords\nkeywords = set()\n# read all lines\nfor i in range(n):\n    # read a keyword and convert it to lowercase\n    keyword = input().lower().replace(\"-\", \" \")\n    keywords.add(keyword)\nprint(len(keywords))\n", "n = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower()\n    keyword = keyword.replace(\"-\", \" \")\n    keywords.add(keyword)\nprint(len(keywords))\n", "\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords) - set(['']))\n    print(len(keywords))\n\nmain()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \").split()\n        key.sort()\n        key = \" \".join(key)\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        key_set.add(key)\n    print(len(key_set)) \n\nif __name__ == \"__main__\":\n    main()\n", "#! /usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n#%%\n\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n", "\nn = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace(\"-\", \" \")\n    keywords.add(keyword)\nprint(len(keywords))\n\n# fix syntax errors\n"]