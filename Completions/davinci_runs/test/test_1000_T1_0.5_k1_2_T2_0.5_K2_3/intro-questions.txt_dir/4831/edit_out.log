2022-04-13 04:12:13.347325 num operations 2
2022-04-13 04:12:13.347335 size on input set 1
2022-04-13 04:12:16.114549 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# input\ns = input()\n\n# output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    },
    {
      "index": 1,
      "text": "\n\n#input string\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    },
    {
      "index": 2,
      "text": "\n\n#input\ns = input()\n\n#\u30d1\u30bf\u30fc\u30f3\n#1\n#2\n#3\n#4\n#5\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end='')#\u6587\u5b57\u5217\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    }
  ],
  "created": 1649823133,
  "object": "edit"
}
2022-04-13 04:12:16.114760 fix spelling mistakes 3 ["\n\n# input\ns = input()\n\n# output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n", "\n\n#input string\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n", "\n\n#input\ns = input()\n\n#パターン\n#1\n#2\n#3\n#4\n#5\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end='')#文字列\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"]
2022-04-13 04:12:16.114813 size on output set 3
2022-04-13 04:12:16.114820 size on input set 3
2022-04-13 04:12:19.969451 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#input string\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1 and j%3 != 2:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1 and j%3 != 2:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1 and j%3 != 2:\n                print('.', end='')\n            print(s[j], end='')\n            if j != len(s)-1 and j%3 != 2:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    },
    {
      "index": 1,
      "text": "\n\n#input string\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n        print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    },
    {
      "index": 2,
      "text": "\n\n#input string\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n        print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    }
  ],
  "created": 1649823136,
  "object": "edit"
}
2022-04-13 04:12:19.969714 fix syntax errors 3 ["\n\n#input string\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1 and j%3 != 2:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1 and j%3 != 2:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1 and j%3 != 2:\n                print('.', end='')\n            print(s[j], end='')\n            if j != len(s)-1 and j%3 != 2:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n", "\n\n#input string\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n        print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n", "\n\n#input string\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n        print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"]
2022-04-13 04:12:36.107917 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#input\ns = input()\n\n#\u30d1\u30bf\u30fc\u30f3\n#1\n#2\n#3\n#4\n#5\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')#4\u500b\u306e\u70b9\n            else:\n                print('.'*2, end='')#2\u500b\u306e\u70b9\n            if j != len(s)-1:\n                print('#', end='')#\u6587\u5b57\u5217\u306e\u533a\u5207\u308a\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')#3\u500b\u306e\u70b9\n            else:\n                print('.', end='')#1\u500b\u306e\u70b9\n            if j != len(s)-1:\n                print('#', end='')#\u6587\u5b57\u5217\u306e\u533a\u5207\u308a\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')#2\u500b\u306e\u70b9\n            else:\n                print('#', end='')#\u6587\u5b57\u5217\u306e\u533a\u5207\u308a\n            if j != len(s)-1:\n                print('.', end='')#\u6587\u5b57\u5217\u306e\u533a\u5207\u308a\n            print(s[j], end='')#\u6587\u5b57\u5217\n            if j != len(s)-1:\n                print('#', end='')#\u6587\u5b57\u5217\u306e\u533a\u5207\u308a\n            else:\n                print('.'*2, end='')\n    print()\n"
    },
    {
      "index": 1,
      "text": "\n\n#input\ns = input()\n\n#\u30d1\u30bf\u30fc\u30f3\n#1\n#2\n#3\n#4\n#5\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j % 3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j % 3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j % 3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end='')#\u6587\u5b57\u5217\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    },
    {
      "index": 2,
      "text": "\n\n#input\ns = input()\n\n#\u30d1\u30bf\u30fc\u30f3\n#1\n#2\n#3\n#4\n#5\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    }
  ],
  "created": 1649823140,
  "object": "edit"
}
2022-04-13 04:12:36.108117 fix syntax errors 3 ["\n\n#input\ns = input()\n\n#パターン\n#1\n#2\n#3\n#4\n#5\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')#4個の点\n            else:\n                print('.'*2, end='')#2個の点\n            if j != len(s)-1:\n                print('#', end='')#文字列の区切り\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')#3個の点\n            else:\n                print('.', end='')#1個の点\n            if j != len(s)-1:\n                print('#', end='')#文字列の区切り\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')#2個の点\n            else:\n                print('#', end='')#文字列の区切り\n            if j != len(s)-1:\n                print('.', end='')#文字列の区切り\n            print(s[j], end='')#文字列\n            if j != len(s)-1:\n                print('#', end='')#文字列の区切り\n            else:\n                print('.'*2, end='')\n    print()\n", "\n\n#input\ns = input()\n\n#パターン\n#1\n#2\n#3\n#4\n#5\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j % 3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j % 3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j % 3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end='')#文字列\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n", "\n\n#input\ns = input()\n\n#パターン\n#1\n#2\n#3\n#4\n#5\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"]
2022-04-13 04:12:39.634749 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# input\ns = input()\n\n# output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j])\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    },
    {
      "index": 1,
      "text": "\n\n# input\ns = input()\n\n# output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            if 0 <= j <= 9:\n                print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    },
    {
      "index": 2,
      "text": "\n\n# input\ns = input()\n\n# output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    }
  ],
  "created": 1649823156,
  "object": "edit"
}
2022-04-13 04:12:39.634932 fix syntax errors 3 ["\n\n# input\ns = input()\n\n# output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j])\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n", "\n\n# input\ns = input()\n\n# output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            if 0 <= j <= 9:\n                print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n", "\n\n# input\ns = input()\n\n# output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"]
2022-04-13 04:12:39.634976 size on output set 8
2022-04-13 04:12:39.634998 num operations 2
2022-04-13 04:12:39.635003 size on input set 1
2022-04-13 04:12:45.840834 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    word = input().upper()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end=\"\")\n            elif i == 1 or i == 3:\n                print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end=\"\")\n            else:\n                print(\"#.\" + char + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\"), end=\"\")\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end=\" \")\n            elif i == 1 or i == 3:\n                print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end=\" \")\n            else:\n                print(\"#.\" + char + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\"), end=\" \")\n        print()\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end=\" \")\n            elif i == 1 or i == 3:\n                print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end=\" \")\n            else:\n                print(\"#.\" + char + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\"), end=\"\")\n        print()\n\nmain()\n"
    }
  ],
  "created": 1649823159,
  "object": "edit"
}
2022-04-13 04:12:45.841000 fix spelling mistakes 3 ['\n\ndef main():\n    word = input().upper()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(".." + ("#" if char in "AEIOUY" else "*") + "..", end="")\n            elif i == 1 or i == 3:\n                print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end="")\n            else:\n                print("#." + char + "." + ("#" if char in "AEIOUY" else "*"), end="")\n        print()\n\nmain()\n', '\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(".." + ("#" if char in "AEIOUY" else "*") + "..", end=" ")\n            elif i == 1 or i == 3:\n                print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end=" ")\n            else:\n                print("#." + char + "." + ("#" if char in "AEIOUY" else "*"), end=" ")\n        print()\n\nmain()\n', '\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(".." + ("#" if char in "AEIOUY" else "*") + "..", end=" ")\n            elif i == 1 or i == 3:\n                print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end=" ")\n            else:\n                print("#." + char + "." + ("#" if char in "AEIOUY" else "*"), end="")\n        print()\n\nmain()\n']
2022-04-13 04:12:45.841091 size on output set 3
2022-04-13 04:12:45.841098 size on input set 3
2022-04-13 04:12:50.648514 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end=\" \")\n            elif i == 1 or i == 3:\n                print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end=\" \")\n            else:\n                print(\"#.\" + char.upper() + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\"), end=\" \")\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end = \" \")\n            elif i == 1 or i == 3:\n                print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end = \" \")\n            else:\n                print(\"#.\" + char + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\"), end = \" \")\n        print()\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    word = input(\"Enter a word: \")\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end=\" \")\n            elif i == 1 or i == 3:\n                print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end=\" \")\n            else:\n                print(\"#.\" + char + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\"), end=\" \")\n        print()\n\nmain()\n"
    }
  ],
  "created": 1649823165,
  "object": "edit"
}
2022-04-13 04:12:50.648693 fix syntax errors 3 ['\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(".." + ("#" if char in "AEIOUY" else "*") + "..", end=" ")\n            elif i == 1 or i == 3:\n                print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end=" ")\n            else:\n                print("#." + char.upper() + "." + ("#" if char in "AEIOUY" else "*"), end=" ")\n        print()\n\nmain()\n', '\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(".." + ("#" if char in "AEIOUY" else "*") + "..", end = " ")\n            elif i == 1 or i == 3:\n                print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end = " ")\n            else:\n                print("#." + char + "." + ("#" if char in "AEIOUY" else "*"), end = " ")\n        print()\n\nmain()\n', '\n\ndef main():\n    word = input("Enter a word: ")\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(".." + ("#" if char in "AEIOUY" else "*") + "..", end=" ")\n            elif i == 1 or i == 3:\n                print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end=" ")\n            else:\n                print("#." + char + "." + ("#" if char in "AEIOUY" else "*"), end=" ")\n        print()\n\nmain()\n']
2022-04-13 04:12:55.581870 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    word = input().upper()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end=\" \")\n            elif i == 1 or i == 3:\n                print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end=\" \")\n            else:\n                print(\"#.\" + char + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\"), end=\" \")\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    word = input().upper()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end=\"\")\n            elif i == 1 or i == 3:\n                print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end=\"\")\n            else:\n                print(\"#.\" + char + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"#\", end=\"\")\n        print()\n\nmain()\n"
    },
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 2
    }
  ],
  "created": 1649823170,
  "object": "edit"
}
2022-04-13 04:12:55.582048 NO RESULT
2022-04-13 04:12:55.582069 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 2
}
2022-04-13 04:12:55.582104 fix syntax errors 2 ['\n\ndef main():\n    word = input().upper()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(".." + ("#" if char in "AEIOUY" else "*") + "..", end=" ")\n            elif i == 1 or i == 3:\n                print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end=" ")\n            else:\n                print("#." + char + "." + ("#" if char in "AEIOUY" else "*"), end=" ")\n        print()\n\nmain()\n', '\n\ndef main():\n    word = input().upper()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(".." + ("#" if char in "AEIOUY" else "*") + "..", end="")\n            elif i == 1 or i == 3:\n                print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end="")\n            else:\n                print("#." + char + "." + ("#" if char in "AEIOUY" else "*") + "#", end="")\n        print()\n\nmain()\n']
2022-04-13 04:12:58.129183 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end=\" \")\n            elif i == 1 or i == 3:\n                print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end=\" \")\n            else:\n                print(\"#.\" + char + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\"), end=\" \")\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end=\" \")\n            elif i == 1 or i == 3:\n                print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end=\" \")\n            else:\n                print(\"#.\" + char + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\"), end=\"\")\n        print\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end=\" \")\n            elif i == 1 or i == 3:\n                print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end=\" \")\n            else:\n                print(\"#.\" + char + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\"), end=\" \")\n        print()\n\nmain()\n"
    }
  ],
  "created": 1649823175,
  "object": "edit"
}
2022-04-13 04:12:58.129418 fix syntax errors 3 ['\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(".." + ("#" if char in "AEIOUY" else "*") + "..", end=" ")\n            elif i == 1 or i == 3:\n                print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end=" ")\n            else:\n                print("#." + char + "." + ("#" if char in "AEIOUY" else "*"), end=" ")\n        print()\n\nmain()\n', '\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(".." + ("#" if char in "AEIOUY" else "*") + "..", end=" ")\n            elif i == 1 or i == 3:\n                print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end=" ")\n            else:\n                print("#." + char + "." + ("#" if char in "AEIOUY" else "*"), end="")\n        print\n\nmain()\n', '\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(".." + ("#" if char in "AEIOUY" else "*") + "..", end=" ")\n            elif i == 1 or i == 3:\n                print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end=" ")\n            else:\n                print("#." + char + "." + ("#" if char in "AEIOUY" else "*"), end=" ")\n        print()\n\nmain()\n']
2022-04-13 04:12:58.129512 size on output set 7
2022-04-13 04:12:58.129524 num operations 2
2022-04-13 04:12:58.129529 size on input set 1
2022-04-13 04:12:59.962043 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2:\n            print(\"..*..\")\n            print(\".*.*.\")\n            print(\"*.{}.*\".format(input[i]))\n            print(\".*.*.\")\n            print(\"..*..\")\n        else:\n            print(\"..#..\")\n            print(\".#.#.\")\n            print(\"#.{}#\".format(input[i]))\n            print(\".#.#.\")\n            print(\"..#..\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport math\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2:\n            print(\"..*..\")\n            print(\".*.*.\")\n            print(\"*.{}.*\".format(input[i]))\n            print(\".*.*.\")\n            print(\"..*..\")\n        else:\n            print(\"..#..\")\n            print(\".#.#.\")\n            print(\"#.{}#\".format(input[i]))\n            print(\".#.#.\")\n            print(\"..#..\")\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2:\n            print(\"..*..\")\n            print(\".*.*.\")\n            print(\"*.{}.*\".format(input[i]))\n            print(\".*.*.\")\n            print(\"..*..\")\n        else:\n            print(\"..#..\")\n            print(\".#.#.\")\n            print(\"#.{}#\".format(input[i]))\n            print(\".#.#.\")\n            print(\"..#..\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649823178,
  "object": "edit"
}
2022-04-13 04:12:59.962222 fix spelling mistakes 3 ['\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2:\n            print("..*..")\n            print(".*.*.")\n            print("*.{}.*".format(input[i]))\n            print(".*.*.")\n            print("..*..")\n        else:\n            print("..#..")\n            print(".#.#.")\n            print("#.{}#".format(input[i]))\n            print(".#.#.")\n            print("..#..")\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport math\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2:\n            print("..*..")\n            print(".*.*.")\n            print("*.{}.*".format(input[i]))\n            print(".*.*.")\n            print("..*..")\n        else:\n            print("..#..")\n            print(".#.#.")\n            print("#.{}#".format(input[i]))\n            print(".#.#.")\n            print("..#..")\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2:\n            print("..*..")\n            print(".*.*.")\n            print("*.{}.*".format(input[i]))\n            print(".*.*.")\n            print("..*..")\n        else:\n            print("..#..")\n            print(".#.#.")\n            print("#.{}#".format(input[i]))\n            print(".#.#.")\n            print("..#..")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 04:12:59.962252 size on output set 2
2022-04-13 04:12:59.962258 size on input set 2
2022-04-13 04:13:06.398962 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport math\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2:\n            print(\"..*..\", end=\"\")\n            print(\".*.*.\", end=\"\")\n            print(\"*.{}.*\".format(input[i]), end=\"\")\n            print(\".*.*.\", end=\"\")\n            print(\"..*..\", end=\"\")\n        else:\n            print(\"..#..\", end=\"\")\n            print(\".#.#.\", end=\"\")\n            print(\"#.{}#\".format(input[i]), end=\"\")\n            print(\".#.#.\", end=\"\")\n            print(\"..#..\", end=\"\")\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\ndef main():\n    input = sys.stdin.readline().strip() \n    for i in range(0, len(input)): \n        if i % 3 == 2: \n            print(\"..*..\")\n            print(\".*.*.\")\n            print(\"*.{}.*\".format(input[i])) \n            print(\".*.*.\")\n            print(\"..*..\") \n        else: \n            print(\"..#..\")\n            print(\".#.#.\")\n            print(\"#.{}#\".format(input[i])) \n            print(\".#.#.\")\n            print(\"..#..\") \nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\nimport math\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2:\n            print(\"..*..\", end=\"\")\n            print(\".*.*.\", end=\"\")\n            print(\"*.{}.*\".format(input[i]), end=\"\")\n            print(\".*.*.\", end=\"\")\n            print(\"..*..\", end=\"\")\n        else:\n            print(\"..#..\", end=\"\")\n            print(\".#.#.\", end=\"\")\n            print(\"#.{}#\".format(input[i]), end=\"\")\n            print(\".#.#.\", end=\"\")\n            print(\"..#..\", end=\"\")\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649823180,
  "object": "edit"
}
2022-04-13 04:13:06.399159 fix syntax errors 3 ['\nimport sys\nimport math\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2:\n            print("..*..", end="")\n            print(".*.*.", end="")\n            print("*.{}.*".format(input[i]), end="")\n            print(".*.*.", end="")\n            print("..*..", end="")\n        else:\n            print("..#..", end="")\n            print(".#.#.", end="")\n            print("#.{}#".format(input[i]), end="")\n            print(".#.#.", end="")\n            print("..#..", end="")\nif __name__ == "__main__":\n    main()\n', 'import sys\ndef main():\n    input = sys.stdin.readline().strip() \n    for i in range(0, len(input)): \n        if i % 3 == 2: \n            print("..*..")\n            print(".*.*.")\n            print("*.{}.*".format(input[i])) \n            print(".*.*.")\n            print("..*..") \n        else: \n            print("..#..")\n            print(".#.#.")\n            print("#.{}#".format(input[i])) \n            print(".#.#.")\n            print("..#..") \nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport math\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2:\n            print("..*..", end="")\n            print(".*.*.", end="")\n            print("*.{}.*".format(input[i]), end="")\n            print(".*.*.", end="")\n            print("..*..", end="")\n        else:\n            print("..#..", end="")\n            print(".#.#.", end="")\n            print("#.{}#".format(input[i]), end="")\n            print(".#.#.", end="")\n            print("..#..", end="")\nif __name__ == "__main__":\n    main()\n']
2022-04-13 04:13:11.021206 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2 && input[i] != ' ':\n            print(\"..*..\")\n            print(\".*.*.\")\n            print(\"*.{}.*\".format(input[i]))\n            print(\".*.*.\")\n            print(\"..*..\")\n        else:\n            print(\"..#..\")\n            print(\".#.#.\")\n            print(\"#.{}#\".format(input[i]))\n            print(\".#.#.\")\n            print(\"..#..\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    my_input = sys.stdin.readline().strip()\n    for i in range(0, len(my_input)):\n        if i % 3 == 2:\n            print(\"..*..\")\n            print(\".*.*.\")\n            print(\"*.{}.*\".format(my_input[i]))\n            print(\".*.*.\")\n            print(\"..*..\")\n        else:\n            print(\"..#..\")\n            print(\".#.#.\")\n            print(\"#.{}#\".format(my_input[i]))\n            print(\".#.#.\")\n            print(\"..#..\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\nimport math\n\ndef main():\n    inputString = sys.stdin.readline().strip()\n    for i in range(0, len(inputString)):\n        if i % 3 == 2:\n            print(\"..*..\")\n            print(\".*.*.\")\n            print(\"*.{}.*\".format(inputString[i]))\n            print(\".*.*.\")\n            print(\"..*..\")\n        else:\n            print(\"..#..\")\n            print(\".#.#.\")\n            print(\"#.{}#\".format(inputString[i]))\n            print(\".#.#.\")\n            print(\"..#..\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649823186,
  "object": "edit"
}
2022-04-13 04:13:11.021508 fix syntax errors 3 ['\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2 && input[i] != \' \':\n            print("..*..")\n            print(".*.*.")\n            print("*.{}.*".format(input[i]))\n            print(".*.*.")\n            print("..*..")\n        else:\n            print("..#..")\n            print(".#.#.")\n            print("#.{}#".format(input[i]))\n            print(".#.#.")\n            print("..#..")\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    my_input = sys.stdin.readline().strip()\n    for i in range(0, len(my_input)):\n        if i % 3 == 2:\n            print("..*..")\n            print(".*.*.")\n            print("*.{}.*".format(my_input[i]))\n            print(".*.*.")\n            print("..*..")\n        else:\n            print("..#..")\n            print(".#.#.")\n            print("#.{}#".format(my_input[i]))\n            print(".#.#.")\n            print("..#..")\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport math\n\ndef main():\n    inputString = sys.stdin.readline().strip()\n    for i in range(0, len(inputString)):\n        if i % 3 == 2:\n            print("..*..")\n            print(".*.*.")\n            print("*.{}.*".format(inputString[i]))\n            print(".*.*.")\n            print("..*..")\n        else:\n            print("..#..")\n            print(".#.#.")\n            print("#.{}#".format(inputString[i]))\n            print(".#.#.")\n            print("..#..")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 04:13:11.021545 size on output set 5
2022-04-13 04:13:11.021563 num operations 2
2022-04-13 04:13:11.021568 size on input set 1
2022-04-13 04:13:16.907417 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n# Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n# Print the top frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n\n# Print the middle frame\nfor i in range(length):\n    print(frames[i]+\".\"+letters[i]+\".\"+frames[i], end=\"\")\nprint()\n\n# Print the bottom frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n"
    },
    {
      "index": 1,
      "text": "\n#Solution #1\n\n#Get input\nword = input()\n\n#Get number of characters\nlength = len(word)\n\n#Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n#Print the top frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+\".\"+letters[i]+\".\"+frames[i], end=\"\")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n"
    },
    {
      "index": 2,
      "text": "\n\n# Solutio\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n#Print the top frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+\".\"+letters[i]+\".\"+frames[i], end=\"\")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n"
    }
  ],
  "created": 1649823191,
  "object": "edit"
}
2022-04-13 04:13:16.907604 fix spelling mistakes 3 ['\n\n# Solution\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n# Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n# Print the top frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n\n# Print the middle frame\nfor i in range(length):\n    print(frames[i]+"."+letters[i]+"."+frames[i], end="")\nprint()\n\n# Print the bottom frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n', '\n#Solution #1\n\n#Get input\nword = input()\n\n#Get number of characters\nlength = len(word)\n\n#Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n#Print the top frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+"."+letters[i]+"."+frames[i], end="")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n', '\n\n# Solutio\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n#Print the top frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+"."+letters[i]+"."+frames[i], end="")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n']
2022-04-13 04:13:16.907636 size on output set 3
2022-04-13 04:13:16.907642 size on input set 3
2022-04-13 04:13:24.748674 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#Solution #1\n\n#Get the input\nword = input()\n\n#Get the number of characters\nlength = len(word)\n\n#Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n#Print the top frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+\".\"+letters[i]+\".\"+frames[i], end=\"\")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n\n#Solution #2\n\n#Get input\nword = input()\n\n#Get number of characters\nlength = len(word)\n\n#Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n#Print the top frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+\".\"+letters[i]+\".\"+frames[i], end=\"\")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n"
    },
    {
      "index": 1,
      "text": "\n# Solution #1\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n# Create a list of the frames\nframes = []\nfor i in range(length):\n    if i % 3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n# Print the top frame\nfor i in range(length):\n    print(\".\" + frames[i] + \".\", end=\"\")\nprint()\n\n# Print the middle frame\nfor i in range(length):\n    print(frames[i] + \".\" + letters[i] + \".\" + frames[i], end=\"\")\nprint()\n\n# Print the bottom frame\nfor i in range(length):\n    print(\".\" + frames[i] + \".\", end=\"\")\nprint()\n"
    },
    {
      "index": 2,
      "text": "#Solution #1\n\n#Get input\nword = input()\n\n#Get number of characters\nlength = len(word)\n\n#Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n#Print the top frame\nfor i in range(length):\n    print(\".%s.\" % (frames[i]), end=\"\")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(\"%s.%s.%s\" % (frames[i], letters[i], frames[i]), end=\"\")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print(\".%s.\" % (frames[i]), end=\"\")\nprint()\n"
    }
  ],
  "created": 1649823196,
  "object": "edit"
}
2022-04-13 04:13:24.748956 fix syntax errors 3 ['#Solution #1\n\n#Get the input\nword = input()\n\n#Get the number of characters\nlength = len(word)\n\n#Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n#Print the top frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+"."+letters[i]+"."+frames[i], end="")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n\n#Solution #2\n\n#Get input\nword = input()\n\n#Get number of characters\nlength = len(word)\n\n#Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n#Print the top frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+"."+letters[i]+"."+frames[i], end="")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n', '\n# Solution #1\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n# Create a list of the frames\nframes = []\nfor i in range(length):\n    if i % 3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n# Print the top frame\nfor i in range(length):\n    print("." + frames[i] + ".", end="")\nprint()\n\n# Print the middle frame\nfor i in range(length):\n    print(frames[i] + "." + letters[i] + "." + frames[i], end="")\nprint()\n\n# Print the bottom frame\nfor i in range(length):\n    print("." + frames[i] + ".", end="")\nprint()\n', '#Solution #1\n\n#Get input\nword = input()\n\n#Get number of characters\nlength = len(word)\n\n#Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n#Print the top frame\nfor i in range(length):\n    print(".%s." % (frames[i]), end="")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print("%s.%s.%s" % (frames[i], letters[i], frames[i]), end="")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print(".%s." % (frames[i]), end="")\nprint()\n']
2022-04-13 04:13:26.632894 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n#Print the top frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+\".\"+letters[i]+\".\"+frames[i], end=\"\")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n#Print the top frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+\".\"+letters[i]+\".\"+frames[i], end=\"\")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n"
    },
    {
      "index": 2,
      "text": "\n\n# Solution\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n#Print the top frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+\".\"+letters[i]+\".\"+frames[i], end=\"\")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n"
    }
  ],
  "created": 1649823204,
  "object": "edit"
}
2022-04-13 04:13:26.633069 fix syntax errors 3 ['\n\n# Solution\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n#Print the top frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+"."+letters[i]+"."+frames[i], end="")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n', '\n\n# Solution\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n#Print the top frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+"."+letters[i]+"."+frames[i], end="")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n', '\n\n# Solution\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n#Print the top frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+"."+letters[i]+"."+frames[i], end="")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n']
2022-04-13 04:13:34.706073 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n# Create a list of the frames\nframes = []\nfor i in range(length):\n    if i % 3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n# Print the top frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n\n# Print the middle frame\nfor i in range(length):\n    print(frames[i]+\".\"+letters[i]+\".\"+frames[i], end=\"\")\nprint()\n\n# Print the bottom frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n"
    },
    {
      "index": 1,
      "text": "\n# Solution\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n# Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n# Print the top frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n\n# Print the middle frame\nfor i in range(length):\n    print(frames[i]+\".\"+letters[i]+\".\"+frames[i], end=\"\")\nprint()\n\n# Print the bottom frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n"
    },
    {
      "index": 2,
      "text": "\n\n# Solution 1\n\nword = input() # Get input\n\nlength = len(word) # Get number of characters\n\nletters = list(word) # Create a list of the characters\n\nframes = [] # Create a list of the frames\nfor i in range(length):\n    if i%3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\") # Print the top frame\nprint() # New line\n\nfor i in range(length):\n    print(frames[i]+\".\"+letters[i]+\".\"+frames[i], end=\"\") # Print the middle frame\nprint() # New line\n\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\") # Print the bottom frame\nprint() # New line\n"
    }
  ],
  "created": 1649823206,
  "object": "edit"
}
2022-04-13 04:13:34.706308 fix syntax errors 3 ['\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n# Create a list of the frames\nframes = []\nfor i in range(length):\n    if i % 3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n# Print the top frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n\n# Print the middle frame\nfor i in range(length):\n    print(frames[i]+"."+letters[i]+"."+frames[i], end="")\nprint()\n\n# Print the bottom frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n', '\n# Solution\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n# Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n# Print the top frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n\n# Print the middle frame\nfor i in range(length):\n    print(frames[i]+"."+letters[i]+"."+frames[i], end="")\nprint()\n\n# Print the bottom frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n', '\n\n# Solution 1\n\nword = input() # Get input\n\nlength = len(word) # Get number of characters\n\nletters = list(word) # Create a list of the characters\n\nframes = [] # Create a list of the frames\nfor i in range(length):\n    if i%3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\nfor i in range(length):\n    print("."+frames[i]+".", end="") # Print the top frame\nprint() # New line\n\nfor i in range(length):\n    print(frames[i]+"."+letters[i]+"."+frames[i], end="") # Print the middle frame\nprint() # New line\n\nfor i in range(length):\n    print("."+frames[i]+".", end="") # Print the bottom frame\nprint() # New line\n']
2022-04-13 04:13:34.706347 size on output set 7
2022-04-13 04:13:34.706358 num operations 2
2022-04-13 04:13:34.706362 size on input set 1
2022-04-13 04:13:36.289054 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#SOLUTION \nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print(\"..#..\", end=\"\")\n            elif letter in word[2::3]:\n                print(\"..*..\", end=\"\")\n            else:\n                print(\"..#..\", end=\"\")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(\".#.#.\", end=\"\")\n            elif letter in word[2::3]:\n                print(\".*.*.\", end=\"\")\n            else:\n                print(\".#.#.\", end=\"\")\n        elif i == 2:\n            if letter == word[0]:\n                print(\"#.{}#\".format(letter), end=\"\")\n            elif letter in word[2::3]:\n                print(\"*.{}.*\".format(letter), end=\"\")\n            else:\n                print(\"#.{}#\".format(letter), end=\"\")\n        if letter != word[-1]:\n            print(\"*\", end=\"\")\n    print()\n"
    },
    {
      "index": 1,
      "text": "\n\n#SOLUTION \nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print(\"..#..\", end=\"\")\n            elif letter in word[2::3]:\n                print(\"..*..\", end=\"\")\n            else:\n                print(\"..#..\", end=\"\")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(\".#.#.\", end=\"\")\n            elif letter in word[2::3]:\n                print(\".*.*.\", end=\"\")\n            else:\n                print(\".#.#.\", end=\"\")\n        elif i == 2:\n            if letter == word[0]:\n                print(\"#.{}#\".format(letter), end=\"\")\n            elif letter in word[2::3]:\n                print(\"*.{}.*\".format(letter), end=\"\")\n            else:\n                print(\"#.{}#\".format(letter), end=\"\")\n        if letter != word[-1]:\n            print(\"*\", end=\"\")\n    print()\n"
    },
    {
      "index": 2,
      "text": "\n\n# Solution\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print(\"..#..\", end=\"\")\n            elif letter in word[2::3]:\n                print(\"..*..\", end=\"\")\n            else:\n                print(\"..#..\", end=\"\")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(\".#.#.\", end=\"\")\n            elif letter in word[2::3]:\n                print(\".*.*.\", end=\"\")\n            else:\n                print(\".#.#.\", end=\"\")\n        elif i == 2:\n            if letter == word[0]:\n                print(\"#.{}#\".format(letter), end=\"\")\n            elif letter in word[2::3]:\n                print(\"*.{}.*\".format(letter), end=\"\")\n            else:\n                print(\"#.{}#\".format(letter), end=\"\")\n        if letter != word[-1]:\n            print(\"*\", end=\"\")\n    print()\n"
    }
  ],
  "created": 1649823214,
  "object": "edit"
}
2022-04-13 04:13:36.289313 fix spelling mistakes 3 ['\n\n#SOLUTION \nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print("..#..", end="")\n            elif letter in word[2::3]:\n                print("..*..", end="")\n            else:\n                print("..#..", end="")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(".#.#.", end="")\n            elif letter in word[2::3]:\n                print(".*.*.", end="")\n            else:\n                print(".#.#.", end="")\n        elif i == 2:\n            if letter == word[0]:\n                print("#.{}#".format(letter), end="")\n            elif letter in word[2::3]:\n                print("*.{}.*".format(letter), end="")\n            else:\n                print("#.{}#".format(letter), end="")\n        if letter != word[-1]:\n            print("*", end="")\n    print()\n', '\n\n#SOLUTION \nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print("..#..", end="")\n            elif letter in word[2::3]:\n                print("..*..", end="")\n            else:\n                print("..#..", end="")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(".#.#.", end="")\n            elif letter in word[2::3]:\n                print(".*.*.", end="")\n            else:\n                print(".#.#.", end="")\n        elif i == 2:\n            if letter == word[0]:\n                print("#.{}#".format(letter), end="")\n            elif letter in word[2::3]:\n                print("*.{}.*".format(letter), end="")\n            else:\n                print("#.{}#".format(letter), end="")\n        if letter != word[-1]:\n            print("*", end="")\n    print()\n', '\n\n# Solution\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print("..#..", end="")\n            elif letter in word[2::3]:\n                print("..*..", end="")\n            else:\n                print("..#..", end="")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(".#.#.", end="")\n            elif letter in word[2::3]:\n                print(".*.*.", end="")\n            else:\n                print(".#.#.", end="")\n        elif i == 2:\n            if letter == word[0]:\n                print("#.{}#".format(letter), end="")\n            elif letter in word[2::3]:\n                print("*.{}.*".format(letter), end="")\n            else:\n                print("#.{}#".format(letter), end="")\n        if letter != word[-1]:\n            print("*", end="")\n    print()\n']
2022-04-13 04:13:36.289473 size on output set 2
2022-04-13 04:13:36.289505 size on input set 2
2022-04-13 04:13:45.181901 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print(\"..#..\", end=\"\")\n            elif letter in word[2::3]:\n                print(\"..*..\", end=\"\")\n            else:\n                print(\"..#..\", end=\"*\")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(\".#.#.\", end=\"\")\n            elif letter in word[2::3]:\n                print(\".*.*.\", end=\"\")\n            else:\n                print(\".#.#.\", end=\"*\")\n        elif i == 2:\n            if letter == word[0]:\n                print(\"#.{}#\".format(letter), end=\"\")\n            elif letter in word[2::3]:\n                print(\"*.{}.*\".format(letter), end=\"\")\n            else:\n                print(\"#.{}#\".format(letter), end=\"*\")\n        if letter != word[-1]:\n            print(\"*\", end=\"\")\n    print()\n"
    },
    {
      "index": 1,
      "text": "\n# Solution\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print(\"..#..\", end=\"\")\n            elif letter in word[2::3]:\n                print(\"..*..\", end=\"\")\n            else:\n                print(\"..#..\", end=\"\")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(\".#.#.\", end=\"\")\n            elif letter in word[2::3]:\n                print(\".*.*.\", end=\"\")\n            else:\n                print(\".#.#.\", end=\"\")\n        elif i == 2:\n            if letter == word[0]:\n                print(\"#.{}.\".format(letter), end=\"\")\n            elif letter in word[2::3]:\n                print(\"*.{}.\".format(letter), end=\"\")\n            else:\n                print(\"#.{}.\".format(letter), end=\"\")\n        if letter != word[-1]:\n            print(\"*\", end=\"\")\n    print()\n"
    },
    {
      "index": 2,
      "text": "\n\n# Solution\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print(\"..#..\", end=\"\")\n            elif letter in word[2:]:\n                print(\"..*..\", end=\"\")\n            else:\n                print(\"..#..\", end=\"\")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(\".#.#.\", end=\"\")\n            elif letter in word[2:]:\n                print(\".*.*.\", end=\"\")\n            else:\n                print(\".#.#.\", end=\"\")\n        elif i == 2:\n            if letter == word[0]:\n                print(\"#.{}#\".format(letter), end=\"\")\n            elif letter in word[2:]:\n                print(\"*.{}.*\".format(letter), end=\"\")\n            else:\n                print(\"#.{}#\".format(letter), end=\"\")\n        if letter != word[-1]:\n            print(\"*\", end=\"\")\n    print()\n"
    }
  ],
  "created": 1649823216,
  "object": "edit"
}
2022-04-13 04:13:45.182085 fix syntax errors 3 ['\n\n# Solution\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print("..#..", end="")\n            elif letter in word[2::3]:\n                print("..*..", end="")\n            else:\n                print("..#..", end="*")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(".#.#.", end="")\n            elif letter in word[2::3]:\n                print(".*.*.", end="")\n            else:\n                print(".#.#.", end="*")\n        elif i == 2:\n            if letter == word[0]:\n                print("#.{}#".format(letter), end="")\n            elif letter in word[2::3]:\n                print("*.{}.*".format(letter), end="")\n            else:\n                print("#.{}#".format(letter), end="*")\n        if letter != word[-1]:\n            print("*", end="")\n    print()\n', '\n# Solution\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print("..#..", end="")\n            elif letter in word[2::3]:\n                print("..*..", end="")\n            else:\n                print("..#..", end="")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(".#.#.", end="")\n            elif letter in word[2::3]:\n                print(".*.*.", end="")\n            else:\n                print(".#.#.", end="")\n        elif i == 2:\n            if letter == word[0]:\n                print("#.{}.".format(letter), end="")\n            elif letter in word[2::3]:\n                print("*.{}.".format(letter), end="")\n            else:\n                print("#.{}.".format(letter), end="")\n        if letter != word[-1]:\n            print("*", end="")\n    print()\n', '\n\n# Solution\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print("..#..", end="")\n            elif letter in word[2:]:\n                print("..*..", end="")\n            else:\n                print("..#..", end="")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(".#.#.", end="")\n            elif letter in word[2:]:\n                print(".*.*.", end="")\n            else:\n                print(".#.#.", end="")\n        elif i == 2:\n            if letter == word[0]:\n                print("#.{}#".format(letter), end="")\n            elif letter in word[2:]:\n                print("*.{}.*".format(letter), end="")\n            else:\n                print("#.{}#".format(letter), end="")\n        if letter != word[-1]:\n            print("*", end="")\n    print()\n']
2022-04-13 04:13:48.476597 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# SOLUTION \nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print(\"..#..\", end=\"\")\n            elif letter in word[2::3]:\n                print(\"..*..\", end=\"\")\n            else:\n                print(\"..#..\", end=\"\")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(\".#.#.\", end=\"\")\n            elif letter in word[2::3]:\n                print(\".*.*.\", end=\"\")\n            else:\n                print(\".#.#.\", end=\"\")\n        elif i == 2:\n            if letter == word[0]:\n                print(\"#.{}#\".format(letter), end=\"\")\n            elif letter in word[2::3]:\n                print(\"*.{}.*\".format(letter), end=\"\")\n            else:\n                print(\"#.{}#\".format(letter), end=\"\")\n        if letter != word[-1]:\n            print(\"*\", end=\"\")\n    print()\n"
    },
    {
      "index": 1,
      "text": "\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print(\"..#..\", end=\"\")\n            elif letter in word[2::3]:\n                print(\"..*..\", end=\"\")\n            else:\n                print(\"..#..\", end=\"\")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(\".#.#.\", end=\"\")\n            elif letter in word[2::3]:\n                print(\".*.*.\", end=\"\")\n            else:\n                print(\".#.#.\", end=\"\")\n        elif i == 2:\n            if letter == word[0]:\n                print(\"#.{}#\".format(letter), end=\"\")\n            elif letter in word[2::3]:\n                print(\"*.{}.*\".format(letter), end=\"\")\n            else:\n                print(\"#.{}#\".format(letter), end=\"\")\n        print(\"*\", end=\"\")\n    print()\n"
    },
    {
      "index": 2,
      "text": "\n\n#SOLUTION\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print(\"..#..\", end=\"\")\n            elif letter in word[2::2]:\n                print(\"..*..\", end=\"\")\n            else:\n                print(\"..#..\", end=\"\")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(\".#.#.\", end=\"\")\n            elif letter in word[2::2]:\n                print(\".*.*.\", end=\"\")\n            else:\n                print(\".#.#.\", end=\"\")\n        elif i == 2:\n            if letter == word[0]:\n                print(\"#.{}#\".format(letter), end=\"\")\n            elif letter in word[2::2]:\n                print(\"*.{}.*\".format(letter), end=\"\")\n            else:\n                print(\"#.{}#\".format(letter), end=\"\")\n        if letter != word[-1]:\n            print(\"*\", end=\"\")\n    print()\n"
    }
  ],
  "created": 1649823225,
  "object": "edit"
}
2022-04-13 04:13:48.476842 fix syntax errors 3 ['\n\n# SOLUTION \nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print("..#..", end="")\n            elif letter in word[2::3]:\n                print("..*..", end="")\n            else:\n                print("..#..", end="")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(".#.#.", end="")\n            elif letter in word[2::3]:\n                print(".*.*.", end="")\n            else:\n                print(".#.#.", end="")\n        elif i == 2:\n            if letter == word[0]:\n                print("#.{}#".format(letter), end="")\n            elif letter in word[2::3]:\n                print("*.{}.*".format(letter), end="")\n            else:\n                print("#.{}#".format(letter), end="")\n        if letter != word[-1]:\n            print("*", end="")\n    print()\n', '\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print("..#..", end="")\n            elif letter in word[2::3]:\n                print("..*..", end="")\n            else:\n                print("..#..", end="")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(".#.#.", end="")\n            elif letter in word[2::3]:\n                print(".*.*.", end="")\n            else:\n                print(".#.#.", end="")\n        elif i == 2:\n            if letter == word[0]:\n                print("#.{}#".format(letter), end="")\n            elif letter in word[2::3]:\n                print("*.{}.*".format(letter), end="")\n            else:\n                print("#.{}#".format(letter), end="")\n        print("*", end="")\n    print()\n', '\n\n#SOLUTION\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print("..#..", end="")\n            elif letter in word[2::2]:\n                print("..*..", end="")\n            else:\n                print("..#..", end="")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(".#.#.", end="")\n            elif letter in word[2::2]:\n                print(".*.*.", end="")\n            else:\n                print(".#.#.", end="")\n        elif i == 2:\n            if letter == word[0]:\n                print("#.{}#".format(letter), end="")\n            elif letter in word[2::2]:\n                print("*.{}.*".format(letter), end="")\n            else:\n                print("#.{}#".format(letter), end="")\n        if letter != word[-1]:\n            print("*", end="")\n    print()\n']
2022-04-13 04:13:48.476889 size on output set 6
2022-04-13 04:13:48.476900 num operations 2
2022-04-13 04:13:48.476905 size on input set 1
2022-04-13 04:14:00.156441 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\npeterpan_frame = [\n    \"..#..\",\n    \".#.#.\",\n    \"#.X.#\",\n    \".#.#.\",\n    \"..#..\"\n    ]\n\nwendy_frame = [\n    \"..*..\",\n    \".*.*.\",\n    \"*.X.*\",\n    \".*.*.\",\n    \"..*..\"\n    ]\n\ndef create_frame(word, frame):\n    frame_word = \"\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peterpan_frame[0]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peterpan_frame[1]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace(\"X\", word[i])\n        else:\n            frame_word += peterpan_frame[2].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peterpan_frame[3]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peterpan_frame[4]\n    frame_word += \"\\n\"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peter_pan_frame))\n"
    },
    {
      "index": 1,
      "text": "\n\npeter_pan_frames = [\n    \"..#..\",\n    \".#.#.\",\n    \"#.X.#\",\n    \".#.#.\",\n    \"..#..\"\n    ]\n\nwendy_frames = [\n    \"..*..\",\n    \".*.*.\",\n    \"*.X.*\",\n    \".*.*.\",\n    \"..*..\"\n    ]\n\ndef create_frames(word, frame):\n    frame_word = \"\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[0]\n        else:\n            frame_word += peter_pan_frames[0]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[1]\n        else:\n            frame_word += peter_pan_frames[1]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[2].replace(\"X\", word[i])\n        else:\n            frame_word += peter_pan_frames[2].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[3]\n        else:\n            frame_word += peter_pan_frames[3]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[4]\n        else:\n            frame_word += peter_pan_frames[4]\n    frame_word += \"\\n\"\n    return frame_word\n\nword = input()\nprint(create_frames(word, peter_pan_frames))\n"
    },
    {
      "index": 2,
      "text": "\n\npeterpan_frame = [\n    \"..#..\",\n    \".#.#.\",\n    \"#.X.#\",\n    \".#.#.\",\n    \"..#..\"\n    ]\n\nwendy_frame = [\n    \"..*..\",\n    \".*.*.\",\n    \"*.X.*\",\n    \".*.*.\",\n    \"..*..\"\n    ]\n\ndef create_frame(word, frame):\n    frame_word = \"\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peterpan_frame[0]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peterpan_frame[1]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace(\"X\", word[i])\n        else:\n            frame_word += peterpan_frame[2].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peterpan_frame[3]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peterpan_frame[4]\n    frame_word += \"\\n\"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peterpan_frame))\n"
    }
  ],
  "created": 1649823228,
  "object": "edit"
}
2022-04-13 04:14:00.156637 fix spelling mistakes 3 ['\n\npeterpan_frame = [\n    "..#..",\n    ".#.#.",\n    "#.X.#",\n    ".#.#.",\n    "..#.."\n    ]\n\nwendy_frame = [\n    "..*..",\n    ".*.*.",\n    "*.X.*",\n    ".*.*.",\n    "..*.."\n    ]\n\ndef create_frame(word, frame):\n    frame_word = ""\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peterpan_frame[0]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peterpan_frame[1]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace("X", word[i])\n        else:\n            frame_word += peterpan_frame[2].replace("X", word[i])\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peterpan_frame[3]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peterpan_frame[4]\n    frame_word += "\\n"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peter_pan_frame))\n', '\n\npeter_pan_frames = [\n    "..#..",\n    ".#.#.",\n    "#.X.#",\n    ".#.#.",\n    "..#.."\n    ]\n\nwendy_frames = [\n    "..*..",\n    ".*.*.",\n    "*.X.*",\n    ".*.*.",\n    "..*.."\n    ]\n\ndef create_frames(word, frame):\n    frame_word = ""\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[0]\n        else:\n            frame_word += peter_pan_frames[0]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[1]\n        else:\n            frame_word += peter_pan_frames[1]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[2].replace("X", word[i])\n        else:\n            frame_word += peter_pan_frames[2].replace("X", word[i])\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[3]\n        else:\n            frame_word += peter_pan_frames[3]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[4]\n        else:\n            frame_word += peter_pan_frames[4]\n    frame_word += "\\n"\n    return frame_word\n\nword = input()\nprint(create_frames(word, peter_pan_frames))\n', '\n\npeterpan_frame = [\n    "..#..",\n    ".#.#.",\n    "#.X.#",\n    ".#.#.",\n    "..#.."\n    ]\n\nwendy_frame = [\n    "..*..",\n    ".*.*.",\n    "*.X.*",\n    ".*.*.",\n    "..*.."\n    ]\n\ndef create_frame(word, frame):\n    frame_word = ""\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peterpan_frame[0]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peterpan_frame[1]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace("X", word[i])\n        else:\n            frame_word += peterpan_frame[2].replace("X", word[i])\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peterpan_frame[3]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peterpan_frame[4]\n    frame_word += "\\n"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peterpan_frame))\n']
2022-04-13 04:14:00.156751 size on output set 3
2022-04-13 04:14:00.156760 size on input set 3
2022-04-13 04:14:09.942626 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\npeter_pan_frame = [\n    \"..#..\",\n    \".#.#.\",\n    \"#.X.#\",\n    \".#.#.\",\n    \"..#..\"\n    ]\n\nwendy_frame = [\n    \"..*..\",\n    \".*.*.\",\n    \"*.X.*\",\n    \".*.*.\",\n    \"..*..\"\n    ]\n\ndef create_frame(word, frame):\n    frame_word = \"\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0].replace(\"X\", word[i])\n        else:\n            frame_word += peter_pan_frame[0].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1].replace(\"X\", word[i])\n        else:\n            frame_word += peter_pan_frame[1].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace(\"X\", word[i]).replace(\"*\", \"#\")\n        else:\n            frame_word += peter_pan_frame[2].replace(\"X\", word[i]).replace(\"*\", \".\")\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3].replace(\"X\", word[i])\n        else:\n            frame_word += peter_pan_frame[3].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4].replace(\"X\", word[i])\n        else:\n            frame_word += peter_pan_frame[4].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peter_pan_frame))\n"
    },
    {
      "index": 1,
      "text": "\n\npeterpan_frame = [\n    \"..#..\",\n    \".#.#.\",\n    \"#.X.#\",\n    \".#.#.\",\n    \"..#..\"\n    ]\n\nwendy_frame = [\n    \"..*..\",\n    \".*.*.\",\n    \"*.X.*\",\n    \".*.*.\",\n    \"..*..\"\n    ]\n\ndef create_frame(word, frame):\n    frame_word = \"\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peterpan_frame[0]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peterpan_frame[1]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace(\"X\", word[i])\n        else:\n            frame_word += peterpan_frame[2].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peterpan_frame[3]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peterpan_frame[4]\n    frame_word += \"\\n\"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peterpan_frame))\n"
    },
    {
      "index": 2,
      "text": "\n\npeterpan_frame = [\n    \"..#..\",\n    \".#.#.\",\n    \"#.X.#\",\n    \".#.#.\",\n    \"..#..\"\n    ]\n\nwendy_frame = [\n    \"..*..\",\n    \".*.*.\",\n    \"*.X.*\",\n    \".*.*.\",\n    \"..*..\"\n    ]\n\ndef create_frame(word):\n    frame_word = \"\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peterpan_frame[0]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peterpan_frame[1]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace(\"X\", word[i])\n        else:\n            frame_word += peterpan_frame[2].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peterpan_frame[3]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peterpan_frame[4]\n    frame_word += \"\\n\"\n    return frame_word\n\nword = input()\nprint(create_frame(word))\n"
    }
  ],
  "created": 1649823240,
  "object": "edit"
}
2022-04-13 04:14:09.942829 fix syntax errors 3 ['\n\npeter_pan_frame = [\n    "..#..",\n    ".#.#.",\n    "#.X.#",\n    ".#.#.",\n    "..#.."\n    ]\n\nwendy_frame = [\n    "..*..",\n    ".*.*.",\n    "*.X.*",\n    ".*.*.",\n    "..*.."\n    ]\n\ndef create_frame(word, frame):\n    frame_word = ""\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0].replace("X", word[i])\n        else:\n            frame_word += peter_pan_frame[0].replace("X", word[i])\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1].replace("X", word[i])\n        else:\n            frame_word += peter_pan_frame[1].replace("X", word[i])\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace("X", word[i]).replace("*", "#")\n        else:\n            frame_word += peter_pan_frame[2].replace("X", word[i]).replace("*", ".")\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3].replace("X", word[i])\n        else:\n            frame_word += peter_pan_frame[3].replace("X", word[i])\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4].replace("X", word[i])\n        else:\n            frame_word += peter_pan_frame[4].replace("X", word[i])\n    frame_word += "\\n"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peter_pan_frame))\n', '\n\npeterpan_frame = [\n    "..#..",\n    ".#.#.",\n    "#.X.#",\n    ".#.#.",\n    "..#.."\n    ]\n\nwendy_frame = [\n    "..*..",\n    ".*.*.",\n    "*.X.*",\n    ".*.*.",\n    "..*.."\n    ]\n\ndef create_frame(word, frame):\n    frame_word = ""\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peterpan_frame[0]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peterpan_frame[1]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace("X", word[i])\n        else:\n            frame_word += peterpan_frame[2].replace("X", word[i])\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peterpan_frame[3]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peterpan_frame[4]\n    frame_word += "\\n"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peterpan_frame))\n', '\n\npeterpan_frame = [\n    "..#..",\n    ".#.#.",\n    "#.X.#",\n    ".#.#.",\n    "..#.."\n    ]\n\nwendy_frame = [\n    "..*..",\n    ".*.*.",\n    "*.X.*",\n    ".*.*.",\n    "..*.."\n    ]\n\ndef create_frame(word):\n    frame_word = ""\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peterpan_frame[0]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peterpan_frame[1]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace("X", word[i])\n        else:\n            frame_word += peterpan_frame[2].replace("X", word[i])\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peterpan_frame[3]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peterpan_frame[4]\n    frame_word += "\\n"\n    return frame_word\n\nword = input()\nprint(create_frame(word))\n']
2022-04-13 04:14:26.676923 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\npeterpan_frame = [\n    \"..#..\", \".#.#.\", \"#.X.#\", \".#.#.\", \"..#..\"\n]\n\nwendy_frame = [\n    \"..*..\", \".*.*.\", \"*.X.*\", \".*.*.\", \"..*..\"\n]\n\n    def create_frame(word, frame):\n    frame_word = \"\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peterpan_frame[0]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peterpan_frame[1]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace(\"X\", word[i])\n        else:\n            frame_word += peterpan_frame[2].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peterpan_frame[3]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peterpan_frame[4]\n    frame_word += \"\\n\"\n    return frame_word\n\n\ndef main():\n    word = input()\n    print(create_frame(word, peterpan_frame))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\npeterpan_frame = [\n    \"..#..\",\n    \".#.#.\",\n    \"#.X.#\",\n    \".#.#.\",\n    \"..#..\"\n    ]\n\nwendy_frame = [\n    \"..*..\",\n    \".*.*.\",\n    \"*.X.*\",\n    \".*.*.\",\n    \"..*..\"\n    ]\n\ndef create_frame(word, frame):\n    word_frame = \".\" * len(frame[0]) * len(word) + \"\\n\"\n    for i in range(len(frame)):\n        for j in range(len(word)):\n            if j % 3 == 0:\n                word_frame += frame[i].replace(\"X\", word[j])\n            else:\n                word_frame += frame[i].replace(\"X\", word[j])\n        word_frame += \"\\n\"\n    word_frame += \".\" * len(frame[0]) * len(word) + \"\\n\"\n    return word_frame\n\nword = input()\nprint(create_frame(word, wendy_frame))\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n\nfrom __future__ import print_function\n\npeterpan_frame = [  # noqa\n    \"..#..\",\n    \".#.#.\",\n    \"#.X.#\",\n    \".#.#.\",\n    \"..#..\"\n    ]\n\nwendy_frame = [  # noqa\n    \"..*..\",\n    \".*.*.\",\n    \"*.X.*\",\n    \".*.*.\",\n    \"..*..\"\n    ]\n\ndef create_frame(word, frame):\n    frame_word = \"\"\n    for frame_line in frame:\n        for i in range(len(word)):\n            if i % 3 == 0:\n                frame_word += wendy_frame[frame_line]\n            else:\n                frame_word += peterpan_frame[frame_line]\n        frame_word += \"\\n\"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peterpan_frame))\n"
    }
  ],
  "created": 1649823249,
  "object": "edit"
}
2022-04-13 04:14:26.677112 fix syntax errors 3 ['\n\npeterpan_frame = [\n    "..#..", ".#.#.", "#.X.#", ".#.#.", "..#.."\n]\n\nwendy_frame = [\n    "..*..", ".*.*.", "*.X.*", ".*.*.", "..*.."\n]\n\n    def create_frame(word, frame):\n    frame_word = ""\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peterpan_frame[0]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peterpan_frame[1]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace("X", word[i])\n        else:\n            frame_word += peterpan_frame[2].replace("X", word[i])\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peterpan_frame[3]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peterpan_frame[4]\n    frame_word += "\\n"\n    return frame_word\n\n\ndef main():\n    word = input()\n    print(create_frame(word, peterpan_frame))\n\n\nif __name__ == "__main__":\n    main()\n', '\n\npeterpan_frame = [\n    "..#..",\n    ".#.#.",\n    "#.X.#",\n    ".#.#.",\n    "..#.."\n    ]\n\nwendy_frame = [\n    "..*..",\n    ".*.*.",\n    "*.X.*",\n    ".*.*.",\n    "..*.."\n    ]\n\ndef create_frame(word, frame):\n    word_frame = "." * len(frame[0]) * len(word) + "\\n"\n    for i in range(len(frame)):\n        for j in range(len(word)):\n            if j % 3 == 0:\n                word_frame += frame[i].replace("X", word[j])\n            else:\n                word_frame += frame[i].replace("X", word[j])\n        word_frame += "\\n"\n    word_frame += "." * len(frame[0]) * len(word) + "\\n"\n    return word_frame\n\nword = input()\nprint(create_frame(word, wendy_frame))\n', '#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n\nfrom __future__ import print_function\n\npeterpan_frame = [  # noqa\n    "..#..",\n    ".#.#.",\n    "#.X.#",\n    ".#.#.",\n    "..#.."\n    ]\n\nwendy_frame = [  # noqa\n    "..*..",\n    ".*.*.",\n    "*.X.*",\n    ".*.*.",\n    "..*.."\n    ]\n\ndef create_frame(word, frame):\n    frame_word = ""\n    for frame_line in frame:\n        for i in range(len(word)):\n            if i % 3 == 0:\n                frame_word += wendy_frame[frame_line]\n            else:\n                frame_word += peterpan_frame[frame_line]\n        frame_word += "\\n"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peterpan_frame))\n']
2022-04-13 04:14:42.708955 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\npeter_pan_frames = [\n    \"..#..\",\n    \".#.#.\",\n    \"#.X.#\",\n    \".#.#.\",\n    \"..#..\"\n]\n\nwendy_frames = [\n    \"..*..\",\n    \".*.*.\",\n    \"*.X.*\",\n    \".*.*.\",\n    \"..*..\"\n]\n\ndef create_frames(word, frame):\n    frame_word = \"\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[0]\n        else:\n            frame_word += peter_pan_frames[0]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[1]\n        else:\n            frame_word += peter_pan_frames[1]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[2].replace(\"X\", word[i])\n        else:\n            frame_word += peter_pan_frames[2].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[3]\n        else:\n            frame_word += peter_pan_frames[3]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[4]\n        else:\n            frame_word += peter_pan_frames[4]\n    frame_word += \"\\n\"\n    return frame_word\n\nword = input()\nprint(create_frames(word, peter_pan_frames))\n"
    },
    {
      "index": 1,
      "text": "\n\npeter_pan_frames = [\n    \"..#..\\n\",\n    \".#.#.\\n\",\n    \"#.X.#\\n\",\n    \".#.#.\\n\",\n    \"..#..\\n\"\n    ]\n\nwendy_frames = [\n    \"..*..\\n\",\n    \".*.*.\\n\",\n    \"*.X.*\\n\",\n    \".*.*.\\n\",\n    \"..*..\\n\"\n    ]\n\ndef create_frames(word, frame):\n    frame_word = wendy_frames[0]\n    for i in range(1, len(word)):\n        frame_word += peter_pan_frames[0]\n    frame_word += wendy_frames[1]\n    for i in range(1, len(word)):\n        frame_word += peter_pan_frames[1]\n    frame_word += wendy_frames[2].replace(\"X\", word[0])\n    for i in range(1, len(word)):\n        frame_word += peter_pan_frames[2].replace(\"X\", word[i])\n    frame_word += wendy_frames[3]\n    for i in range(1, len(word)):\n        frame_word += peter_pan_frames[3]\n    frame_word += wendy_frames[4]\n    for i in range(1, len(word)):\n        frame_word += peter_pan_frames[4]\n    return frame_word\n\nword = input()\nprint(create_frames(word, peter_pan_frames))\n"
    },
    {
      "index": 2,
      "text": "\n\npeter_pan_frames = [\n    \"..#..\", \".#.#.\", \"#.X.#\", \".#.#.\", \"..#..\"\n]\n\nwendy_frames = [\n    \"..*..\", \".*.*.\", \"*.X.*\", \".*.*.\", \"..*..\"\n]\n\n\ndef create_frames(word, frame):\n    frame_word = \"\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[0]\n        else:\n            frame_word += peter_pan_frames[0]\n        frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[1]\n        else:\n            frame_word += peter_pan_frames[1]\n        frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[2].replace(\"X\", word[i])\n        else:\n            frame_word += peter_pan_frames[2].replace(\"X\", word[i])\n        frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[3]\n        else:\n            frame_word += peter_pan_frames[3]\n        frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[4]\n        else:\n            frame_word += peter_pan_frames[4]\n        frame_word += \"\\n\"\n    return frame_word\n\n\nword = input()\nprint(create_frames(word, peter_pan_frames))\n"
    }
  ],
  "created": 1649823266,
  "object": "edit"
}
2022-04-13 04:14:42.709381 fix syntax errors 3 ['\n\npeter_pan_frames = [\n    "..#..",\n    ".#.#.",\n    "#.X.#",\n    ".#.#.",\n    "..#.."\n]\n\nwendy_frames = [\n    "..*..",\n    ".*.*.",\n    "*.X.*",\n    ".*.*.",\n    "..*.."\n]\n\ndef create_frames(word, frame):\n    frame_word = ""\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[0]\n        else:\n            frame_word += peter_pan_frames[0]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[1]\n        else:\n            frame_word += peter_pan_frames[1]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[2].replace("X", word[i])\n        else:\n            frame_word += peter_pan_frames[2].replace("X", word[i])\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[3]\n        else:\n            frame_word += peter_pan_frames[3]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[4]\n        else:\n            frame_word += peter_pan_frames[4]\n    frame_word += "\\n"\n    return frame_word\n\nword = input()\nprint(create_frames(word, peter_pan_frames))\n', '\n\npeter_pan_frames = [\n    "..#..\\n",\n    ".#.#.\\n",\n    "#.X.#\\n",\n    ".#.#.\\n",\n    "..#..\\n"\n    ]\n\nwendy_frames = [\n    "..*..\\n",\n    ".*.*.\\n",\n    "*.X.*\\n",\n    ".*.*.\\n",\n    "..*..\\n"\n    ]\n\ndef create_frames(word, frame):\n    frame_word = wendy_frames[0]\n    for i in range(1, len(word)):\n        frame_word += peter_pan_frames[0]\n    frame_word += wendy_frames[1]\n    for i in range(1, len(word)):\n        frame_word += peter_pan_frames[1]\n    frame_word += wendy_frames[2].replace("X", word[0])\n    for i in range(1, len(word)):\n        frame_word += peter_pan_frames[2].replace("X", word[i])\n    frame_word += wendy_frames[3]\n    for i in range(1, len(word)):\n        frame_word += peter_pan_frames[3]\n    frame_word += wendy_frames[4]\n    for i in range(1, len(word)):\n        frame_word += peter_pan_frames[4]\n    return frame_word\n\nword = input()\nprint(create_frames(word, peter_pan_frames))\n', '\n\npeter_pan_frames = [\n    "..#..", ".#.#.", "#.X.#", ".#.#.", "..#.."\n]\n\nwendy_frames = [\n    "..*..", ".*.*.", "*.X.*", ".*.*.", "..*.."\n]\n\n\ndef create_frames(word, frame):\n    frame_word = ""\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[0]\n        else:\n            frame_word += peter_pan_frames[0]\n        frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[1]\n        else:\n            frame_word += peter_pan_frames[1]\n        frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[2].replace("X", word[i])\n        else:\n            frame_word += peter_pan_frames[2].replace("X", word[i])\n        frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[3]\n        else:\n            frame_word += peter_pan_frames[3]\n        frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[4]\n        else:\n            frame_word += peter_pan_frames[4]\n        frame_word += "\\n"\n    return frame_word\n\n\nword = input()\nprint(create_frames(word, peter_pan_frames))\n']
2022-04-13 04:14:42.709444 size on output set 9
2022-04-13 04:14:42.709457 num operations 2
2022-04-13 04:14:42.709462 size on input set 1
2022-04-13 04:14:44.344077 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n#\n# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n            elif i == 1:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 2:\n                print(\"#.\" + c + \".#\" if c in \"AEIOU\" else \"*.\" + c + \".*\", end=\"\")\n            elif i == 3:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 4:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution \n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n            elif i == 1:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 2:\n                print(\"#.\" + c + \".#\" if c in \"AEIOU\" else \"*.\" + c + \".*\", end=\"\")\n            elif i == 3:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 4:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n            elif i == 1:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 2:\n                print(\"#.\" + c + \".#\" if c in \"AEIOU\" else \"*.\" + c + \".*\", end=\"\")\n            elif i == 3:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 4:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649823282,
  "object": "edit"
}
2022-04-13 04:14:44.344251 fix spelling mistakes 3 ['\n#\n# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n            elif i == 1:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 2:\n                print("#." + c + ".#" if c in "AEIOU" else "*." + c + ".*", end="")\n            elif i == 3:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 4:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n        print()\n\nif __name__ == "__main__":\n    main()\n', '\n\n# Solution \n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n            elif i == 1:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 2:\n                print("#." + c + ".#" if c in "AEIOU" else "*." + c + ".*", end="")\n            elif i == 3:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 4:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n        print()\n\nif __name__ == "__main__":\n    main()\n', '\n# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n            elif i == 1:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 2:\n                print("#." + c + ".#" if c in "AEIOU" else "*." + c + ".*", end="")\n            elif i == 3:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 4:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n        print()\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 04:14:44.344286 size on output set 3
2022-04-13 04:14:44.344293 size on input set 3
2022-04-13 04:14:50.763065 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/python3\n# -*- coding: utf-8 -*-\n\ndef main():\n    word = input().strip()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n            elif i == 1:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 2:\n                print(\"#.\" + c + \".#\" if c in \"AEIOU\" else \"*.\" + c + \".*\", end = \"\")\n            elif i == 3:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 4:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n#\n# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n            elif i == 1:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 2:\n                print(\"#.\" + c + \".#\" if c in \"AEIOU\" else \"*.\" + c + \".*\")\n            elif i == 3:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 4:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n# https://open.kattis.com/problems/pizza2\n# Solution\n\ndef main():\n    r, c = map(int, input().split())\n    print(r * c / 2)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649823284,
  "object": "edit"
}
2022-04-13 04:14:50.763248 fix syntax errors 3 ['#!/usr/bin/python3\n# -*- coding: utf-8 -*-\n\ndef main():\n    word = input().strip()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n            elif i == 1:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 2:\n                print("#." + c + ".#" if c in "AEIOU" else "*." + c + ".*", end = "")\n            elif i == 3:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 4:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n        print()\n\nif __name__ == "__main__":\n    main()\n', '\n#\n# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n            elif i == 1:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 2:\n                print("#." + c + ".#" if c in "AEIOU" else "*." + c + ".*")\n            elif i == 3:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 4:\n                print("..#.." if c in "AEIOU" else "..*..")\n        print()\n\nif __name__ == "__main__":\n    main()\n', '\n# https://open.kattis.com/problems/pizza2\n# Solution\n\ndef main():\n    r, c = map(int, input().split())\n    print(r * c / 2)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 04:14:53.404501 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n            elif i == 1:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 2:\n                print(\"#.\" + c + \".#\" if c in \"AEIOU\" else \"*.\" + c + \".*\", end=\" \")\n            elif i == 3:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 4:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n            elif i == 1:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 2:\n                print(\"#\" + c + \"#\" if c in \"AEIOU\" else \"*\" + c + \"*\", end=\"\")\n            elif i == 3:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 4:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n            elif i == 1:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 2:\n                print(\"#\" + c + \"#\" if c in \"AEIOU\" else \"*\" + c + \"*\", end=\"\")\n            elif i == 3:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 4:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649823290,
  "object": "edit"
}
2022-04-13 04:14:53.404675 fix syntax errors 3 ['\n# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n            elif i == 1:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 2:\n                print("#." + c + ".#" if c in "AEIOU" else "*." + c + ".*", end=" ")\n            elif i == 3:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 4:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n        print()\n\nif __name__ == "__main__":\n    main()\n', '\n# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n            elif i == 1:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 2:\n                print("#" + c + "#" if c in "AEIOU" else "*" + c + "*", end="")\n            elif i == 3:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 4:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n        print()\n\nif __name__ == "__main__":\n    main()\n', '\n# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n            elif i == 1:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 2:\n                print("#" + c + "#" if c in "AEIOU" else "*" + c + "*", end="")\n            elif i == 3:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 4:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n        print()\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 04:14:59.999392 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Solution \n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\" \")\n            elif i == 1:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\" \")\n            elif i == 2:\n                print(\"#.\" + c + \".#\" if c in \"AEIOU\" else \"*.\" + c + \".*\", end=\" \")\n            elif i == 3:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\" \")\n            elif i == 4:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\" \")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n            elif i == 1:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 2:\n                print(\"#.\" + c + \".#\" if c in \"AEIOU\" else \"*.\" + c + \".*\", end=\"\")\n            elif i == 3:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 4:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "# Solution \n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n            elif i == 1:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 2:\n                print(\"#.\" + c + \".#\" if c in \"AEIOU\" else \"*.\" + c + \".*\", end=\"\")\n            elif i == 3:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 4:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649823293,
  "object": "edit"
}
2022-04-13 04:14:59.999668 fix syntax errors 3 ['\n# Solution \n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print("..#.." if c in "AEIOU" else "..*..", end=" ")\n            elif i == 1:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end=" ")\n            elif i == 2:\n                print("#." + c + ".#" if c in "AEIOU" else "*." + c + ".*", end=" ")\n            elif i == 3:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end=" ")\n            elif i == 4:\n                print("..#.." if c in "AEIOU" else "..*..", end=" ")\n        print()\n\nif __name__ == "__main__":\n    main()\n', '\n\n# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n            elif i == 1:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 2:\n                print("#." + c + ".#" if c in "AEIOU" else "*." + c + ".*", end="")\n            elif i == 3:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 4:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n        print()\n\nif __name__ == "__main__":\n    main()\n', '# Solution \n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n            elif i == 1:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 2:\n                print("#." + c + ".#" if c in "AEIOU" else "*." + c + ".*", end="")\n            elif i == 3:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 4:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n        print()\n\nif __name__ == "__main__":\n    main()\n']
2022-04-13 04:14:59.999707 size on output set 8
2022-04-13 04:14:59.999730 num operations 2
2022-04-13 04:14:59.999736 size on input set 1
2022-04-13 04:15:05.350938 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...#'\n        if ch == 'q': return '##.#.#'\n        if ch == 'r': return '##..##'\n        if ch == 's': return '#.#.#.'\n        if ch == 't': return '##...#'\n        if ch == 'u': return '#.####'\n        if ch == 'v': return '#.####'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!*.'\n        if ch == '?': return '*.!*.'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``.'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...'\n        if ch == 'q': return '##.#.#'\n        if ch == 'r': return '##..##'\n        if ch == 's': return '#.#.#.'\n        if ch == 't': return '##...'\n        if ch == 'u': return '#.####'\n        if ch == 'v': return '#.####'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!.*'\n        if ch == '?': return '*?.!*'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``.'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...'\n        if ch == 'q': return '##.#.'\n        if ch == 'r': return '##..#'\n        if ch == 's': return '#.#.#.'\n        if ch == 't': return '##...#'\n        if ch == 'u': return '#.####'\n        if ch == 'v': return '#.####'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!.*'\n        if ch == '?': return '*?.!*'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``.'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    }
  ],
  "created": 1649823300,
  "object": "edit"
}
2022-04-13 04:15:05.351261 fix spelling mistakes 3 ['\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...#\'\n        if ch == \'q\': return \'##.#.#\'\n        if ch == \'r\': return \'##..##\'\n        if ch == \'s\': return \'#.#.#.\'\n        if ch == \'t\': return \'##...#\'\n        if ch == \'u\': return \'#.####\'\n        if ch == \'v\': return \'#.####\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!*.\'\n        if ch == \'?\': return \'*.!*.\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``.\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n', '\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...\'\n        if ch == \'q\': return \'##.#.#\'\n        if ch == \'r\': return \'##..##\'\n        if ch == \'s\': return \'#.#.#.\'\n        if ch == \'t\': return \'##...\'\n        if ch == \'u\': return \'#.####\'\n        if ch == \'v\': return \'#.####\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!.*\'\n        if ch == \'?\': return \'*?.!*\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``.\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n', '\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...\'\n        if ch == \'q\': return \'##.#.\'\n        if ch == \'r\': return \'##..#\'\n        if ch == \'s\': return \'#.#.#.\'\n        if ch == \'t\': return \'##...#\'\n        if ch == \'u\': return \'#.####\'\n        if ch == \'v\': return \'#.####\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!.*\'\n        if ch == \'?\': return \'*?.!*\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``.\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n']
2022-04-13 04:15:05.351414 size on output set 3
2022-04-13 04:15:05.351424 size on input set 3
2022-04-13 04:15:16.552852 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...#'\n        if ch == 'q': return '##.#.#'\n        if ch == 'r': return '##..##'\n        if ch == 's': return '#.#.#.'\n        if ch == 't': return '##...#'\n        if ch == 'u': return '#.####'\n        if ch == 'v': return '#.####'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!*.'\n        if ch == '?': return '*.!*.'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``.'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...#'\n        if ch == 'q': return '##.#.#'\n        if ch == 'r': return '##..##'\n        if ch == 's': return '#.#.#.'\n        if ch == 't': return '##...#'\n        if ch == 'u': return '#.####'\n        if ch == 'v': return '#.####'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!*.'\n        if ch == '?': return '*.!*.'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``.'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ntry:\n    import psyco\n    psyco.full()\nexcept ImportError:\n    pass\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...#'\n        if ch == 'q': return '##.#.#'\n        if ch == 'r': return '##..##'\n        if ch == 's': return '#.#.#.'\n        if ch == 't': return '##...#'\n        if ch == 'u': return '#.####'\n        if ch == 'v': return '#.####'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!*.'\n        if ch == '?': return '*.!*.'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``.'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n\n    return None\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    }
  ],
  "created": 1649823305,
  "object": "edit"
}
2022-04-13 04:15:16.553140 fix syntax errors 3 ['\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...#\'\n        if ch == \'q\': return \'##.#.#\'\n        if ch == \'r\': return \'##..##\'\n        if ch == \'s\': return \'#.#.#.\'\n        if ch == \'t\': return \'##...#\'\n        if ch == \'u\': return \'#.####\'\n        if ch == \'v\': return \'#.####\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!*.\'\n        if ch == \'?\': return \'*.!*.\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``.\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n', '#!/usr/bin/env python\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...#\'\n        if ch == \'q\': return \'##.#.#\'\n        if ch == \'r\': return \'##..##\'\n        if ch == \'s\': return \'#.#.#.\'\n        if ch == \'t\': return \'##...#\'\n        if ch == \'u\': return \'#.####\'\n        if ch == \'v\': return \'#.####\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!*.\'\n        if ch == \'?\': return \'*.!*.\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``.\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n', '\n\nimport sys\n\ntry:\n    import psyco\n    psyco.full()\nexcept ImportError:\n    pass\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...#\'\n        if ch == \'q\': return \'##.#.#\'\n        if ch == \'r\': return \'##..##\'\n        if ch == \'s\': return \'#.#.#.\'\n        if ch == \'t\': return \'##...#\'\n        if ch == \'u\': return \'#.####\'\n        if ch == \'v\': return \'#.####\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!*.\'\n        if ch == \'?\': return \'*.!*.\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``.\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n\n    return None\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n']
2022-04-13 04:15:22.089089 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...'\n        if ch == 'q': return '##.##.'\n        if ch == 'r': return '##..#.'\n        if ch == 's': return '#.#.#.'\n        if ch == 't': return '##...'\n        if ch == 'u': return '#.####'\n        if ch == 'v': return '#.####'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!.*'\n        if ch == '?': return '*?.!*'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``.'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...'\n        if ch == 'q': return '##.#.#'\n        if ch == 'r': return '##..##'\n        if ch == 's': return '#.#.#.'\n        if ch == 't': return '##...'\n        if ch == 'u': return '#.####'\n        if ch == 'v': return '#.####'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!.*'\n        if ch == '?': return '*?.!*'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``.'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n    return ''\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...'\n        if ch == 'q': return '##.##.'\n        if ch == 'r': return '##...#'\n        if ch == 's': return '#.#.#.'\n        if ch == 't': return '##...'\n        if ch == 'u': return '#.##..'\n        if ch == 'v': return '#.####'\n        if ch == 'w': return '.#.##..'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!.*'\n        if ch == '?': return '*?.!*'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=.'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&.&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``.'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    }
  ],
  "created": 1649823316,
  "object": "edit"
}
2022-04-13 04:15:22.089440 fix syntax errors 3 ['\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...\'\n        if ch == \'q\': return \'##.##.\'\n        if ch == \'r\': return \'##..#.\'\n        if ch == \'s\': return \'#.#.#.\'\n        if ch == \'t\': return \'##...\'\n        if ch == \'u\': return \'#.####\'\n        if ch == \'v\': return \'#.####\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!.*\'\n        if ch == \'?\': return \'*?.!*\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``.\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n', '\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...\'\n        if ch == \'q\': return \'##.#.#\'\n        if ch == \'r\': return \'##..##\'\n        if ch == \'s\': return \'#.#.#.\'\n        if ch == \'t\': return \'##...\'\n        if ch == \'u\': return \'#.####\'\n        if ch == \'v\': return \'#.####\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!.*\'\n        if ch == \'?\': return \'*?.!*\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``.\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n    return \'\'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n', '\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...\'\n        if ch == \'q\': return \'##.##.\'\n        if ch == \'r\': return \'##...#\'\n        if ch == \'s\': return \'#.#.#.\'\n        if ch == \'t\': return \'##...\'\n        if ch == \'u\': return \'#.##..\'\n        if ch == \'v\': return \'#.####\'\n        if ch == \'w\': return \'.#.##..\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!.*\'\n        if ch == \'?\': return \'*?.!*\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=.\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&.&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``.\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n']
2022-04-13 04:15:28.428874 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...'\n        if ch == 'q': return '##.#.'\n        if ch == 'r': return '##..#'\n        if ch == 's': return '#.#.#'\n        if ch == 't': return '##...#'\n        if ch == 'u': return '#.####'\n        if ch == 'v': return '#.####'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!.*'\n        if ch == '?': return '*?.!*'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...'\n        if ch == 'q': return '##.#.'\n        if ch == 'r': return '##..#'\n        if ch == 's': return '#.#.#'\n        if ch == 't': return '##...#'\n        if ch == 'u': return '#.####'\n        if ch == 'v': return '#.####'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!.*'\n        if ch == '?': return '*?.!*'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...'\n        if ch == 'q': return '##.#.'\n        if ch == 'r': return '##..#'\n        if ch == 's': return '#.#.#'\n        if ch == 't': return '##...#'\n        if ch == 'u': return '#.####'\n        if ch == 'v': return '#.####'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!.*'\n        if ch == '?': return '*?.!*'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``.'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    }
  ],
  "created": 1649823322,
  "object": "edit"
}
2022-04-13 04:15:28.429136 fix syntax errors 3 ['\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...\'\n        if ch == \'q\': return \'##.#.\'\n        if ch == \'r\': return \'##..#\'\n        if ch == \'s\': return \'#.#.#\'\n        if ch == \'t\': return \'##...#\'\n        if ch == \'u\': return \'#.####\'\n        if ch == \'v\': return \'#.####\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!.*\'\n        if ch == \'?\': return \'*?.!*\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n', '\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...\'\n        if ch == \'q\': return \'##.#.\'\n        if ch == \'r\': return \'##..#\'\n        if ch == \'s\': return \'#.#.#\'\n        if ch == \'t\': return \'##...#\'\n        if ch == \'u\': return \'#.####\'\n        if ch == \'v\': return \'#.####\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!.*\'\n        if ch == \'?\': return \'*?.!*\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n', '\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...\'\n        if ch == \'q\': return \'##.#.\'\n        if ch == \'r\': return \'##..#\'\n        if ch == \'s\': return \'#.#.#\'\n        if ch == \'t\': return \'##...#\'\n        if ch == \'u\': return \'#.####\'\n        if ch == \'v\': return \'#.####\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!.*\'\n        if ch == \'?\': return \'*?.!*\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``.\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n']
2022-04-13 04:15:28.429244 size on output set 9
